:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zamsiw_rea.fml
:: Utworzony: 06.07.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Obsługa zamówień sprzedaży/wewnętrznych - realizacje zamówień
::======================================================================================================================


\del_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: usuniecie realizacji zamowienia
::   WE: [_a] - czy usuwac zapisy o rezerwacji (T/N) [T - domyslnie]
::       [_b] - ref sql naglowka dokumentu magazynowego
::       [_c] - aktualizacja 1(domyslnie) rezerwacji 0-nie
::   WY: zwraca tabelke Ref_sql-i zamowien do aktualizacji
::  OLD: \del_real/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{?_>=1 || {? type_of(_a)<>2 || _a:='T' ?} || _a:='T' ?};
{?_>=2 || {? type_of(_b)<>2 || _b:=$ND.ref ?} || _b:=$ND.ref ?};
{?_>=3 || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};
BEER.MJSLOG:='RED';
ND.cntx_psh();
ZK_RN.cntx_psh();
{? _b='' & ZK_RN.SWZ='- USŁUGI -'
|| _ref:=ZK_RN.N;
   exec('delzamrn','zamsiw_rea',ZK_RN.ND,$ZK_RN.ref());
   ZK_RN.cntx_psh();
   exec('akturezy','rezerwacje',ZK_RN.ref(),_a,_c);
   exec('all_reze','zamsiw_poz',_ref);
   exec('oblprea_zam','zamsiw_nag',_ref);
   exec('obl_warz','zamsiw_nag',_ref,,1);
   ZK_RN.cntx_pop();
   {? var_pres('__zam')>100 & ~__zam.find_key(#ZK_RN.N) || __zam.add ?};
   POM.TYPDOK:='ZKR'; POM.TAB:='ZK_RN';
   numer:=ZK_RN.NR; oldnumer:=1;
   exec('nr_old','numery');
   ZK_RN.del(1)
|| ZK_RN.index('ND');
   ZK_RN.prefix(_b);
   {? ZK_RN.first()
   ||
      {!
      |?
         {? _b=ZK_RN.ND
         || _ref:=ZK_RN.N;
            exec('delzamrn','zamsiw_rea',ZK_RN.ND,$ZK_RN.ref());
            ZK_RN.cntx_psh();
            exec('akturezy','rezerwacje',ZK_RN.ref(),_a,_c);
            exec('all_reze','zamsiw_poz',_ref);
            exec('oblprea_zam','zamsiw_nag',_ref);
            exec('obl_warz','zamsiw_nag',_ref,,1);
            ZK_RN.cntx_pop();
            {? var_pres('__zam')>100 & ~__zam.find_key(#ZK_RN.N) || __zam.add ?};
            POM.TYPDOK:='ZKR'; POM.TAB:='ZK_RN';
            numer:=ZK_RN.NR; oldnumer:=1;
            exec('nr_old','numery');
            ZK_RN.del(1)
         || ZK_RN.next
         ?}
      !}
   ?}
?};
ZK_RN.cntx_pop();
ND.cntx_pop();
BEER.MJSLOG:='';
~~


\delzamrn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: oblicza ilosc wg dostaw wystepujaca na dokumencie magazynowym
::   WE: _a - ref SQL naglowka dokumentu
::       _b - odpowiednik pola DK.ZAM_RN
::  OLD: \delzamrn/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ND.cntx_psh();
DK.cntx_psh();
ND.clear();
{? ND.seek(_a,form(8+_a))
|| DK.index('DOSTN');
   DK.prefix(ND.ref());
   {? DK.first()
   || {!
      |? {? DK.ZAM_RN=_b
         || DK.ZAM_RN:='';
            DK.ZAM_RP:='';
            DK.put(1)
         ?};
         DK.next()
      !}
   ?}
?};
ND.cntx_pop();
DK.cntx_pop()


\dk2zkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizacja zamowienia, realizacji na podstawie pozycji DK
::   WE: _a - parametr
::       _b - ref ND
::       _c - ref DK
::       _d - DK.ZAM_RN
::       _e - DK.ZAM_RP
::       _f - ref indeksu materiałowego
::       _g - ilosc
::       _h - indeks przed
::       _i - ilosc przed
::   WY - ref ZK_RN + ref ZK_RP w postaci SQL-a
::  OLD: \dk2zkn/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_rzkrn:=_d;
_par:=_a;
{? _par='' | _par='N' | (_f=_h & _g=_i)
|| _wyn:=_e
|? (_rzkrn<>'' | (_rzkrn:=exec('pobzkrn','zamsiw_rea',_b))<>'') & _rzkrn*'__'
||
   {? exec('FindAndGet','#table',ZK_RN,_rzkrn,,"N().STAT_REJ",'')='A'
   ||
      FUN.info('Zamówienie jest anulowane. Pominięto aktualizację zamówienia i jego realizacji.'@);
      return('')
   ?};
   {? _par='W'
   || _par:={? exec('FindAndGet','#table',ZK_RN,_rzkrn,,"N().LIM",'N')='T' || 'R' || exec('get','#params',600801,2) ?}
   || _param:=600800
   ?};
   {? _par='P'
   || _opc:=FUN.choice('Pozycja (dokument) powstała w wyniku realizacji zamówienia.\nWybierz jedną z opcji:'@,,
                       'Aktualizować &zamówienie'@,'Aktualizować &realizację'@);
      {? _opc=1 || _par:='Z'
      |? _opc=2 || _par:='R'
      || _par:='N'
      ?}
   ?};
   BEER.TYP:='Z';
   {? _par='Z' | _par='R'
   || _dol:=_f<>_h;
      _ile:={? _f=_h || _g-_i || _g ?};
      _magik:=BEER.MG:=ND.MAG;
      ZK_RN.cntx_psh();
      ZK_RP.cntx_psh();
      {? _e<>'' & ~_dol
      || ZK_RP.clear();
         {? ZK_RP.seek(_e)
         || {? _par='R' & _ile<0 || {? ZK_RP.ILR<=_g || _ile:=0 || _ile:=_g-ZK_RP.ILR ?} ?};
            {? (_par='R' | _par='Z') & (_ile<0 | _ile<=ZK_RP.P().ILP)
            ||
               ZK_RP.ILR+=_ile;
               ZK_RP.put(1);
               _wyn:=$ZK_RP.ref();
               ZK_P.clear();
               {? ZK_P.seek(ZK_RP.P)
               || ZK_P.ILP-=_ile;
                  ZK_P.put(1);
                  _rozn:={? (ZK_P.ILRB+ZK_P.ILRW)>ZK_P.ILP || ZK_P.ILP-(ZK_P.ILRB+ZK_P.ILRW) || 0 ?};
                  {? _rozn<0 || exec('pop_rezy','rezerwacje',ZK_P.ref(),_rozn) ?};
                  exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
                  exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N);
                  exec('obl_warz','zamsiw_nag',ZK_P.N,,0)
               ?}
            |? _par='R' & _ile>ZK_RP.P().ILP
            || _ile:=ZK_RP.P().ILP;
               ZK_RP.ILR+=_ile;
               ZK_RP.put(1);
               _wyn:=$ZK_RP.ref();
               ZK_P.clear();
               {? ZK_P.seek(ZK_RP.P)
               || ZK_P.ILP:=0;
                  ZK_P.put(1);
                  _rozn:={? (ZK_P.ILRB+ZK_P.ILRW)>ZK_P.ILP || ZK_P.ILP-(ZK_P.ILRB+ZK_P.ILRW) || 0 ?};
                  {? _rozn<0 || exec('pop_rezy','rezerwacje',ZK_P.ref(),_rozn) ?};
                  exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
                  exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N);
                  exec('obl_warz','zamsiw_nag',ZK_P.N,,0)
               ?}
            |? _par='Z' & _ile>ZK_RP.P().ILP
            || _rozn:=_ile-ZK_RP.P().ILP;
               ZK_RP.ILR+=_ile;
               ZK_RP.put(1);
               _wyn:=$ZK_RP.ref();
               ZK_P.clear();
               {? ZK_P.seek(ZK_RP.P)
               || ZK_P.ILP:=0;
                  ZK_P.ILZ+=_rozn;
                  _mjs:=ATR.MJS;
                  ATR.MJS:='ZK_P';
                  exec('aktzil2','zamsiw_poz');
                  ATR.MJS:=_mjs;
                  exec('war_pozz','zamsiw_poz');
                  ZK_P.put(1);
                  _rozn:={? (ZK_P.ILRB+ZK_P.ILRW)>ZK_P.ILP || ZK_P.ILP-(ZK_P.ILRB+ZK_P.ILRW) || 0 ?};
                  {? _rozn<0 || exec('pop_rezy','rezerwacje',ZK_P.ref(),_rozn) ?};
                  exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
                  exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N);
                  exec('obl_warz','zamsiw_nag',ZK_P.N,,0)
               ?}
            ?};
            {? ZK_RP.ILR<=0
            || _zk_rn:=ZK_RP.N;
               ZK_RP.del();
               ZK_RP.index('POZR');
               ZK_RP.prefix(_zk_rn);
               {? ~ZK_RP.first() & (ZK_RN.prefix(); ZK_RN.seek(_zk_rn)) || ZK_RN.del() ?}
            ?}
         ?}
      || ZK_RN.clear();
         {? ZK_RN.seek(_rzkrn)
         ||
            _zk_rn:=ZK_RN.ref();
::          szukamy ZK_P o ilosci pozostalej wiekszej lub rownej zadanej dla danego nowego indeksu materialowego
            _zkp:=exec('find_zkp','zamsiw_poz',ZK_RN.N,_f,_ile,_par='Z');
::          usuniecie poprzedniej realizacji
            {? _e<>''
            || ZK_RP.clear();
               {? ZK_RP.seek(_e)
               || _wyn:='';
                  ZK_P.clear();
                  {? ZK_P.seek(ZK_RP.P)
                  || ZK_P.ILP+=ZK_RP.ILR;
                     ZK_P.put(1);
                     _rozn:={? (ZK_P.ILRB+ZK_P.ILRW)>ZK_P.ILP || ZK_P.ILP-(ZK_P.ILRB+ZK_P.ILRW) || 0 ?};
                     {? _rozn<0 || exec('pop_rezy','rezerwacje',ZK_P.ref(),_rozn) ?};
                     exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
                     exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N);
                     exec('obl_warz','zamsiw_nag',ZK_P.N,,0)
                  ?};
                  ZK_RP.del()
               ?}
            ?};
::          dodajemy nowa pozycje realizacji
            {? _zkp<>null
            || BEER.MG:=_magik;
               ZK_RP.clear();
               ZK_RP.blank();
               ZK_RP.N:=_zk_rn;
               ZK_RP.P:=_zkp;
               ZK_RP.ILR:=_ile;
               ZK_RP.MG:=BEER.MG;
               ZK_RP.TOP:=1;
               ZK_RP.ID:='';
               ZK_RP.M:=ZK_RP.P().M;
               ZK_RP.DOST:=ZK_RP.P().DOST;
               {? ZK_RP.add(1) || _wyn:=$ZK_RP.ref() ?};
               ZK_P.clear();
               {? ZK_P.seek(ZK_RP.P)
               || {? ZK_RP.ILR<=ZK_P.ILP
                  || ZK_P.ILP-=ZK_RP.ILR
                  || _rozn:=ZK_RP.ILR-ZK_P.ILP;
                     ZK_P.ILP:=0;
                     ZK_P.ILZ+=_rozn;
                     _mjs:=ATR.MJS;
                     ATR.MJS:='ZK_P';
                     exec('aktzil2','zamsiw_poz');
                     ATR.MJS:=_mjs;
                     exec('war_pozz','zamsiw_poz')
                  ?};
                  ZK_P.put(1);
                  _rozn:={? (ZK_P.ILRB+ZK_P.ILRW)>ZK_P.ILP || ZK_P.ILP-(ZK_P.ILRB+ZK_P.ILRW) || 0 ?};
                  {? _rozn<0 || exec('pop_rezy','rezerwacje',ZK_P.ref(),_rozn) ?};
                  exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
                  exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N);
                  exec('obl_warz','zamsiw_nag',ZK_P.N,,0)
               ?}
            |? _par='Z'
            ||
::             tworzymy pozycje zamowienia i ja realizujemy
               ZK_N.clear();
               {? ZK_N.seek(ZK_RN.N)
               || BEER.ZK_N:=ZK_N.ref();
                  ZK_P.clear();
                  ZK_P.blank();
                  ZK_P.RR:=ZK_P.DP~1;
                  ZK_P.RM:=ZK_P.DP~2;
                  ZK_P.A:='A';
                  ZK_P.M:=_f;
                  ZK_P.ILZ:=_g;
                  ZK_P.ILP:=0;
                  ZK_P.RMAG:=BEER.MG;
                  ZK_P.ONLY:=1;
                  ZK_P.MG:=ZK_P.RMAG;
                  ZK_P.JM:=ZK_P.M().J;
                  ZK_P.IL2:=ZK_P.ILZ;
                  ZK_P.WS2:=1;
                  ZK_P.T2:='G';
                  ZK_P.J2:=ZK_P.JM;
                  _dan:=exec('pobcendk','magdok_poz',_c);
                  {? _dan[1]
                  || ZK_P.SV:=_dan[2];
                     ZK_P.CENA:=_dan[3];
                     ZK_P.CN:=_dan[4];
                     ZK_P.RAB:=_dan[5];
                     ZK_P.RABK:=_dan[6];
                     ZK_P.CWAL:=_dan[7];
                     ZK_P.KRS:=_dan[8];
                     ZK_P.ZL:=_dan[9];
                     ZK_P.WYD:=_dan[10]
                  ?};
                  obj_del(_dan);
                  ZK_P.KH:=ZK_P.N().KH;
                  ZK_P.KH_ODB:=ZK_P.N().ODB;
                  {? ZK_P.add(1)
                  || exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
                     exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N);
                     exec('obl_warz','zamsiw_nag',ZK_P.N,,0);
                     BEER.MG:=_magik;
                     ZK_RP.clear();
                     ZK_RP.blank();
                     ZK_RP.N:=_zk_rn;
                     ZK_RP.P:=ZK_P.ref();
                     ZK_RP.ILR:=_g;
                     ZK_RP.MG:=BEER.MG;
                     ZK_RP.TOP:=1;
                     ZK_RP.ID:='';
                     ZK_RP.M:=ZK_RP.P().M;
                     ZK_RP.DOST:=ZK_RP.P().DOST;
                     {? ZK_RP.add(1) || _wyn:=$ZK_RP.ref() ?}
                  ?}
               ?}
            ?};
            ZK_RP.index('POZR');
            ZK_RP.prefix(_zk_rn);
            {? ~ZK_RP.first() & (ZK_RN.prefix(); ZK_RN.seek(_zk_rn)) || ZK_RN.del() ?}
         ?}
      ?};
      ZK_RN.cntx_pop();
      ZK_RP.cntx_pop()
   ?}
?};
_wyn


\pobzkrn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: pobiera informacje o ref SQL ZK_RN
::   WE: _a - ref ND
::   WY - ref SQL ZK_RN (jeśli tylko jeden) lub ''
::  OLD: \pobzkrn/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_two:=0;
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first()
|| {!
   |? {? DK.ZAM_RN<>''
      || {? _wyn=''
         || _wyn:=DK.ZAM_RN
         |? _wyn<>DK.ZAM_RN
         || _two:=1;
            _wyn:=''
         ?}
      ?};
      ~_two & DK.next()
   !}
?};
DK.cntx_pop();
_wyn


\delezkrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: usuwa pozostalosci ZK_RP wg pola REZ
::   WE: _a - ref ZK_P
::  OLD: \delezkrp/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_P.cntx_psh();
ZK_RP.cntx_psh();
ZK_RN.cntx_psh();
REZ.index('ZK_P');
REZ.prefix(_a);
{? REZ.first()
|| {!
   |? ZK_RP.index('REZ');
      ZK_RP.prefix(REZ.ref());
      {? ZK_RP.first() || {! |? {? ZK_RP.N=null() || ZK_RP.del() || ZK_RP.next() ?} !} ?};
      REZ.next()
   !}
?};
ZK_P.cntx_pop();
ZK_RP.cntx_pop();
ZK_RN.cntx_pop();
~~


\zrea_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: kolorowanie na pozycjach realizacji zamowien sprzedazy
::  OLD: \zrea_kol/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_act:='';
{? var_pres('__popres')>1 || __popres:=0 ?};
_akc:=exec('ctrlREAL','zamsiw_rea');
_wyb:={? ~__zknrea.sel_size() & __zknrea.TREE
      || {? __zknrea.WYB='*' || 'W' || 'Z' ?}
      || ''
      ?};
_act:=_act+{? __zknrea.USL='T' || 'D' || '' ?}+{? ~__zknrea.sel_size() & __zknrea.ZKN=$BEER.ZK_N || 'R' || '' ?};
{? ~__reazld & __id3btn<>''
|| {? __zknrea.TREE=0
   || __zknrea.actions_grayed(__winzkr,'PTM');
      __zknrea.btn_sopt(__winzkr,__id3btn,'state=grayed')
   ||
::    akcja Zmień magazyn
      {? ~__reazld
      || {? __zknrea.win_sel('?')=__zkrwi1
         || _rodz:={? exec('FindAndGet','#table',ZK_N,__zknrea.ZKN,,"T().R",'')='Z'
                   || 4
                   || {? __zknrea.USL='T' || 44 ||10 ?}
                   ?};
            exec('filtr_mg','zamsiw_rea',_rodz);
            BUFMG.cntx_psh();
            _act+={? BUFMG.f_first() & BUFMG.f_next() || '' || 'M' ?};
            BUFMG.cntx_pop();
            _act+={? _rodz=44 || 'CD' || '' ?}
         ?}
      ?};
::    On/Off akcje, przyciski w oknie ilości do realizacji
      {? __zknrea.MGP
      || _act:='ZW'+_act;
         __zknrea.actions_grayed(__winzkr,_act);
         __zknrea.btn_sopt(__winzkr,__id3btn,'state=grayed')
      || __zknrea.actions_grayed(__winzkr,_act);
         {? _act*'M'
         || __zknrea.btn_sopt(__winzkr,__id3btn,'state=grayed')
         || __zknrea.btn_sopt(__winzkr,__id3btn,'state=normal')
         ?}
      ?}
   ?}
?};
{? ~exec('czy_wdst','zamsiw_rea') || _act:='D'+_act ?};
_pop:={? __zknrea.sel_size() | __zknrea.TREE || '' |? ~__zknrea.TREE || 'P' || 'ZWP' ?};
{? ~__zknrea.TREE | ~__zknrea.DOST | __zknrea.NAD>0
|| __zknrea.actions_grayed(__winzkr,_wyb+_pop+{? ~_akc || 'A' || '' ?}+'T'+{? ~__zknrea.TREE || 'M' || '' ?}+_act)
|| __zknrea.actions_grayed(__winzkr,_wyb+{? ~_akc || 'A' || '' ?}+_act)
?};
_zk_rp:=ZK_RP.ref();
ZK_RP.cntx_psh();
ZK_RP.prefix();
{? __zknrea.TREE=0
|| __zknrea.ILP:=__zknrea.REZ:=__zknrea.REA:=0;
   __zknrea.put(1)
|? BEER.ZK_N().MG().PAL='T'
|| exec('ilRealPAL','zamsiw_palety')
|? __zknrea.USL='T' & ZK_RP.seek(__zknrea.REF)
|| _zk_rp:=ZK_RP.ref();
   ZK_RP.P().POZ;
   __zknrea.REA:=ZK_RP.ILR;
   __zknrea.RES:=__zknrea.REA+__zknrea.PLUS;
   __zknrea.WYB:={? ZK_RP.ILR>0 || '*' || '' ?};
   __zknrea.RJ2:=ZK_RP.ILR;
   __zknrea.WART:={? __zknrea.RES>0 || exec('war_pozz','zamsiw_poz',1,__zknrea.RES) || 0 ?};
   {? __zknrea.put(1) || exec('sumawrea','zamsiw_rea',__zknrea.TREE) ?};
   _dokl_m:=exec('jaka_dok_m','jm',ZK_RP.P().M);
   _prec:='\'in_prec='+$_dokl_m+'\'';
   _prec2:='\'out_prec='+$_dokl_m+'\'';
   __zknrea.fld_fml('REA','EDIT_FORMAT',$_prec);
   BEER.fld_fml('DOREA','DISPLAY_FORMAT'
      ,$($_prec2+"+{? exec('pwdorea','rezerwacje')=1 || ',empty=0' || ',empty=1' ?}"));
   BEER.fld_fml('IL_REZ','DISPLAY_FORMAT'
      ,$($_prec2+"+{? exec('pwil_rez','rezerwacje')=1 || ',empty=0' || ',empty=1' ?}"))
|? ~__zknrea.MGP & ZK_RP.seek(__zknrea.REF)
|| _zk_rp:=ZK_RP.ref();
   _wyn:=exec('rek_real','zamsiw_rea',__zknrea.NAD);
   {? __zknrea.NAD<>1 || __zknrea.ILP:=BEER.RP; __zknrea.REZ:=BEER.RP ?};
   {? __zknrea.NAD<=0
   || _ilr:={? __zknrea.NAD<0 || exec('zkrp_ilr','zamsiw_rea',ZK_RP.P,ZK_RP.SC) || ZK_RP.ILR ?};
      __zknrea.WYB:={? _ilr>0 || '*' || '' ?};
      __zknrea.REA:=_ilr;
      __zknrea.RES:=__zknrea.REA+__zknrea.PLUS;
      _dokl_b:=exec('jaka_dok_m','jm',ZK_RP.P().M);
      _dokl_m:={? __zknrea.JM1=__zknrea.JM2
               || _dokl_b
               || exec('jaka_dok_mjm','jm',ZK_RP.P().M,ZK_RP.P().J2,ZK_RP.P().M().J)
               ?};
               roundmet(BEER.MDOKL);
      _jmg:=ZK_RP.P().M().J2=ZK_RP.P().J2;
      {? ~_jmg
      || __zknrea.RJ2:=_ilr*ZK_RP.P().WS2 $ {? _dokl_m<0 || exec('jaka_dok_m','jm',ZK_RP.P().M) || _dokl_m ?};
         __zknrea.RS2:=(_ilr+__zknrea.PLUS)*ZK_RP.P().WS2 $ {? _dokl_m<0
                                                            || exec('jaka_dok_m','jm',ZK_RP.P().M)
                                                            || _dokl_m
                                                            ?}
      || __zknrea.RJ2:=_ilr/ZK_RP.P().WS2 $ {? _dokl_m<0 || exec('jaka_dok_m','jm',ZK_RP.P().M) || _dokl_m ?};
         __zknrea.RS2:=(_ilr+__zknrea.PLUS)/ZK_RP.P().WS2 $ {? _dokl_m<0
                                                            || exec('jaka_dok_m','jm',ZK_RP.P().M)
                                                            || _dokl_m
                                                            ?}
      ?};
      roundmet(5);
      _prec:='\'in_prec='+$_dokl_m+'\'';
      _prec2:='\'out_prec='+$_dokl_b+'\'';
      __zknrea.fld_fml('REA','EDIT_FORMAT',$_prec);
      BEER.fld_fml('DOREA','DISPLAY_FORMAT'
         ,$($_prec2+"+{? exec('pwdorea','rezerwacje')=1 || ',empty=0' || ',empty=1' ?}"));
      BEER.fld_fml('IL_REZ','DISPLAY_FORMAT'
         ,$($_prec2+"+{? exec('pwil_rez','rezerwacje')=1 || ',empty=0' || ',empty=1' ?}"));
      __zknrea.WART:={? __zknrea.RS2>0 || exec('war_pozz','zamsiw_poz',1,__zknrea.RS2) || 0 ?}
   || _wyb:='';
      _ilr:=0;
      _rj2:=0;
      _rs2:=0;
      _plus:=0;
      _war:=0;
      _ref:=__zknrea.ref();
      __zknrea.cntx_psh();
      __zknrea.clear();
      __zknrea.prefix(_ref);
      {? __zknrea.first()
      || {!
         |? _ilr+=__zknrea.REA;
            _rj2+=__zknrea.RJ2;
            _rs2+=__zknrea.RS2;
            _plus+=__zknrea.PLUS;
            {? _wyb='' & __zknrea.WYB='*' || _wyb:='*' ?};
            _war+=__zknrea.WART;
            __zknrea.next()
         !}
      ?};
      __zknrea.cntx_pop();
      __zknrea.REA:=_ilr;
      __zknrea.PLUS:=_plus;
      __zknrea.RES:=__zknrea.REA+__zknrea.PLUS;
      __zknrea.WYB:={? _ilr>0 || '*' || '' ?};
      __zknrea.RJ2:=_rj2;
      __zknrea.RS2:=_rs2;
      __zknrea.WART:=_war;
      __zknrea.put(1)
   ?};
   {? __zknrea.put(1) || exec('sumawrea','zamsiw_rea',__zknrea.TREE) ?}
|? __zknrea.MGP
|| exec('oblrepal','zamsiw_rea')
?};
ZK_RP.cntx_pop();
ZK_RP.seek(_zk_rp);
{? _wyn || 'ZREA#01#01' || '' ?}


\rek_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: akcja Rekord przy realizacji zamowienia
::   WE: [_a] - 1-czy galaz nadrzedna 0(domyslnie) nie
::   WY: podswietla zaznaczone rekordy
::  OLD: \rek_real/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

BEER.RP:={? ZK_RP.DOST
         || exec('oblzkrez','zamsiw_wspolne',ZK_RP.P,ZK_RP.SC,1,1)
         || ZK_RP.P().ILP-{? _a=0 || exec('oblzkrez','zamsiw_wspolne',ZK_RP.P,ZK_RP.SC,2,1) || 0 ?}
         ?};
BEER.RZ:={? _a<0
         || exec('oblzkrez','zamsiw_wspolne',ZK_RP.P,ZK_RP.SC,1)
         || exec('oblzkrez','zamsiw_wspolne',ZK_RP.P,ZK_RP.SC,0)
         ?};
BEER.SZK_N:=ZK_RP.P().N().SYM;
BEER.M:=ZK_RP.P().M;
BEER.JM:=BEER.M().J;
ZK_RP.W='*'


\zkrp_ilr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: oblicza ilosc do realizacji
::   WE: _a - ref ZK_P
::       _b - ref dostawy
::  OLD: \zkrp_ilr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ZK_RP.cntx_psh();
ZK_RP.index('ZK_P');
ZK_RP.prefix(__refrea,_a);
{? ZK_RP.first() || {! |? _wyn+={? ZK_RP.SC=_b || ZK_RP.ILR || 0 ?}; ZK_RP.next() !} ?};
ZK_RP.cntx_pop();
_wyn


\sumawrea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: oblicza sume wartosci dla galezi
::   WE: _a - ref TREE
::  OLD: \sumawrea/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
__zknrea.cntx_psh();
__zknrea.clear();
__zknrea.prefix(_a);
{? __zknrea.first()
|| {!
   |? _wyn+=__zknrea.WART;
      __zknrea.next()
   !}
?};
__zknrea.clear();
{? __zknrea.seek(_a,) || __zknrea.WART:=_wyn; __zknrea.put(1) ?};
__zknrea.cntx_pop();
~~


\oblrepal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: usuniecie rezerwacji tymczasowej z poziomu szczegolow dla rezerwacji
::   WE: [_a] - ref TREE (domyslnie wg aktualnego __zknrea
::  OLD: \oblrepal/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};

_buf:=tab_tmp(2,'KTM','STRING[50]',''
       ,'KT2','STRING[50]',''
       ,'ILR','REAL','');

__zrekpl.clear();
__zrekpl.prefix(BEER.AKTZKN);
{? __zrekpl.first()
|| {!
   |? {? __zrekpl.ILW>0 | __zrekpl.ROZ>0
      || _buf.clear();
         {? _buf.find_key(__zrekpl.KTM,__zrekpl.KTM)
         || _buf.ILR+=__zrekpl.ILW+__zrekpl.ROZ;
            _buf.put(1)
         || _buf.blank();
            _buf.KTM:=_buf.KT2:=__zrekpl.KTM;
            _buf.ILR:=__zrekpl.ILW+__zrekpl.ROZ;
            _buf.add(1)
         ?}
      ?};
      __zrekpl.next()
   !}
?};

_ref:={? _a<>null || _a || __zknrea.TREE ?};
__zknrea.cntx_psh();
__zknrea.clear();
__zknrea.prefix(_ref);
{? __zknrea.first()
|| {!
   |? {? ZK_RP.seek(__zknrea.REF)
      || _wyn:=exec('rek_real','zamsiw_rea',__zknrea.NAD);
         __zknrea.ILP:=BEER.RP;
         __zknrea.REZ:=BEER.RZ;
         __zknrea.REA:=0;
         _buf.clear();
         {? _buf.find_key(__zknrea.KTM,__zknrea.KTM)
         || {? _buf.ILR>=__zknrea.REZ
            || __zknrea.REA:={? _buf.ILR>__zknrea.REZ || __zknrea.REZ || _buf.ILR ?};
               _buf.ILR-=__zknrea.REA;
               {? _buf.ILR>0 || _buf.put(1) || _buf.del() ?}
            |? __zknrea.REZ>0 & _buf.ILR>0
            || __zknrea.REA:=_buf.ILR;
               _buf.del()
            ?}
         ?};
         __zknrea.WYB:={? __zknrea.REA>0 || '*' || '' ?};
         _dokl_m:={? __zknrea.JM1=__zknrea.JM2
                  || exec('jaka_dok_m','jm',ZK_RP.P().M)
                  || exec('jaka_dok_mjm','jm',ZK_RP.P().M,ZK_RP.P().J2,ZK_RP.P().M().J)
                  ?};
                  roundmet(BEER.MDOKL);
         _jmg:=ZK_RP.P().M().J2=ZK_RP.P().J2;
         {? ~_jmg
         || __zknrea.RJ2:=__zknrea.REA*ZK_RP.P().WS2${? _dokl_m<0 || exec('jaka_dok_m','jm',ZK_RP.P().M) || _dokl_m ?}
         || __zknrea.RJ2:=__zknrea.REA/ZK_RP.P().WS2${? _dokl_m<0 || exec('jaka_dok_m','jm',ZK_RP.P().M) || _dokl_m ?}
         ?};
         roundmet(5);
         __zknrea.WART:={? __zknrea.RJ2>0 || exec('war_pozz','zamsiw_poz',1,__zknrea.RJ2) || 0 ?};
         __zknrea.put(1)
      ?};
      __zknrea.next()
   !}
?};
__zknrea.cntx_pop();
obj_del(_buf);
~~


\obl_ilp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: kontroluje ilosc pozostala na podstawie realizacji, usuwa pozycje ZK_RP dla przerwanych realizacji
::  OLD: \obl_ilp/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_ilp:=_ilr:=0;
_buf:=tab_tmp(2,'ZKN','STRING[16]','','REA','STRING[30]','');
ZK_P.cntx_psh();
ZK_RP.index('NPOZ');
ZK_RP.prefix(ZK_P.N,ZK_P.POZ);
{? ZK_RP.first()
||
   {!|?
      {? ZK_RP.N=null
      || {? ZK_RP.REZ<>null() & ZK_RP.REZ().REA='T' & (_refrea:=ZK_RP.REZ().REFREA)<>''
         || _ok:=ZK_RP.del();
            _buf.clear();
            {? ~_buf.find_key($ZK_P.N,_refrea,)
            || _buf.blank();
               _buf.ZKN:=$ZK_P.N;
               _buf.REA:=_refrea;
               _buf.add(1)
            ?};
            _ok
         || ZK_RP.del()
         ?}
      ||
         _ilr+=ZK_RP.ILR;
         ZK_RP.next()
      ?}
   !}
?};
ZK_P.cntx_pop();
_buf.clear();
{? _buf.first()
|| {!
   |? exec('anul_bez','zamsiw_rea',exec('FindAndGet','#table',ZK_N,_buf.ZKN,,,null()),,_buf.REA);
      _buf.next()
   !}
?};
obj_del(_buf);
_ilp:=ZK_P.ILZ-_ilr;
{? _ilp<>ZK_P.ILP || ZK_P.ILP:=_ilp;ZK_P.put() ?};
_ilp


\realizuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: procedura wystawia dokumenty magazynowe dla zamowienia klienta
::   WE: [_a] - 1-faktura i dokument 0(domyslnie)-dokument
::       [_b] - ND.ref() - naglowek dokumentu, do ktorego ma byc dolaczana realizacja
::       [_c] - wyswietlac okienko z iloscia do realizacji 1 - tak (domyslnie)
::       [_d] - dodatkowy warunek sprawdzany podczas zbierania zamowien wewnetrznych
::       [_e] - dyspozycja w magazynie, domyślnie brak
::  OLD: \wyst_zwz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
__refrea:=($ZK_N.tm_stamp())+($OPERATOR.USER);

_a:={?_>0 & type_of(_a)=1 || _a || 0 ?};
_NDref:={?_>1 & type_of(_b)=7 || _b || null() ?};
_selrea:={?_>2 & type_of(_c)=1 || _c || 1 ?};

_zlwar:={?_>3 & type_of(_d)=type_of("") || _d || "" ?};

_tr_nzl:={? var_pres('_e')=type_of(null()) || _e || null() ?};

{? ~exec('jest_nrd','numery','ZKR')
|| FUN.info('Brak definicji numeracji realizacji o kodzie ZKR.'@);
   return
?};

exec('real_dok','zamsiw_rea',_a,,,,,,_tr_nzl);
''


\real_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: realizacja zamowienia
::   WE: [_a] - 1-realizacja faktura 0-(domyslnie) dokument magazynowy 2-realizacja wg limitów
::       [_b] - ND.ref() - naglowek dokumentu, do ktorego ma byc dolaczana realizacja, dla 2 ZL.ref() lub GROP.ref()
::       [_c] - wyswietlac okienko z iloscia do realizacji 1 - tak (domyslnie),
::              2 - tryb dla e-kiosku - pobranie danych
::              3 - tryb dla e-kiosku - zatwierdzenie danych
::       [_d] - dodatkowy warunek sprawdzany podczas zbierania zamowien wewnetrznych
::       [_e] - dodatkowy warunek sprawdzany podczas zbierania pozycji zamowien wewnetrznych
::       [_f] - 0-uruchomione poza obszarem roboczym,
::              1-uruchomione z obszaru roboczego LMG,
::              2-uruchomione z obszaru roboczego TTE
::       [_g] - dyspozycja w magazynie, domyślnie brak
::       [_h] - ZGP.ref() - domyślnie brak
::   WY: numer błędu
::  OLD: \real_dok/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_err:=0;
_erz:=0;
_era:=0;
_erd:=0;
_erp:=0;
_ekiosk:={? var_pres('_c')=type_of(0) & _c>=2 || _c || 0 ?};
_a:={? _>0 & type_of(_a)=1 || _a || 0 ?};
_NDref:={? _>1 & type_of(_b)=7 & 5+ref_name(_b)='nagdo' || _b || null() ?};
_ZLref:={? _>1 & type_of(_b)=7 & 5+ref_name(_b)='zlec_' || _b || null() ?};
_GROPr:={? _>1 & type_of(_b)=7 & 4+ref_name(_b)='grop'  || _b || null() ?};
_ZLwej:=_ZLref;
_selrea:={? _>2 & type_of(_c)=1 || _c || 1 ?};
_pathArea:={? var_press('_f')<>type_of(1) || 0 || _f ?};

_zlwar:={? _>3 & type_of(_d)=type_of("") || _d || "" ?};
_dodwar:={? _>4 & type_of(_e)=type_of("") || _e || "1" ?};
_ZLgrup:=0;

_wg_nzl:={? var_pres('_g')=type_of(null()) || _g<>null() || 0 ?};
_tr_nzl:=null();
{? _wg_nzl
|| _tr_nzl:=_g;
   _tab_nzl:=exec('zamWGtr_zl','transport_wspolne',_g)
?};

_zgp:={? var_pres('_h')=type_of(null()) || _h || null() ?};

{? ~exec('jest_nrd','numery','ZKR') || FUN.info('Brak definicji numeracji realizacji o kodzie ZKR.'@); return ?};

VAR_DEL.delete('__zknrea','__filtrz','__matakt','__inforr','__stnmat','__winzkr','__kolmag','__winflt');
VAR_DEL.delete('__palkpl','__pozkpl','__zrekpl','__palki1','__palki2','__zkrwi1','__zkrwi2','__id3btn');
VAR_DEL.delete('__dostpal','__reazld','__id4btn','__lstlim','__ilplus','__zknzl','__grpzl','__popres');

__reazld:={? _NDref=null || 0 |? exec('FindAndGet','#table','ND',$_NDref,,"ZL",null())<>null || 2 || 1 ?};
__popres:=0;
:: zmienna decyduję czy wyłaczyć kontrolę magazynu na pozycji zamówienia o ile go podano i uprawnienia są ogólne do
:: realizacji zamówień
DISP.CTRLMG:={? ZK_N.T().R='Z' & ZK_N.MG=null() || exec('get','#params',3541,2,OPERATOR.USER)<>'T'
             |? ZK_N.T().R='W' & ZK_N.LIM='N' & ZK_N.MG=null() || exec('get','#params',3540,2,OPERATOR.USER)<>'T'
             |? ZK_N.T().R='W' & ZK_N.LIM='T' || exec('get','#params',3542,2,OPERATOR.USER)<>'T'
             || 1
             ?};

:: tabela zaznaczeń zleceń pierwszego poziomu
_zazzl:=tab_tmp(1,'ZL','STRING[16]','');
__grpzl:=0;
:: prefix po zamówieniach związanych z grupą operacji
{? _a=2 & _GROPr<>null()
|| DISP.CTRLMG:=exec('get','#params',3542,2,OPERATOR.USER)<>'T';
   __zknzl:=tab_tmp(1,'ZK_N','STRING[16]','','GROP','STRING[16]','');
   _GROPbuf:=_GROPr;
   _tabzl:=GROP.sel_aget();
   {? ~_tabzl.size()
   || _tabzl.blank();
      _tabzl.REF:=#_GROPr;
      _tabzl.add(1)
   ?};
   __grpzl:={? _tabzl.size() || 1 || -1 ?};
   {? __grpzl & _tabzl.first()
   || {!
      |? GROP.cntx_psh();
         GROP.prefix();
         {? GROP.seek(_tabzl.REF,)
         || _zazzl.blank();
            _zazzl.ZL:=$GROP.ref();
            _zazzl.add(1)
         ?};
         GROP.cntx_pop();
         _tabzl.next()
      !}
   ?};
   BEER.ZK_N:=null();
   ZK_N.index('AGROP');
   ZK_N.prefix('A',_GROPr);
   {? ZK_N.first() || BEER.ZK_N:=ZK_N.ref() ?};
   __lstlim:=exec('wyp_lstl','zamsiw_rea',_pathArea,_GROPr);
   _tabzl.clear();
   {? _tabzl.first()
   || _ZLgrup:=1;
      __zknzl.clear();
      {? BEER.ZK_N<>null() & {? DISP.CTRLMG || ~(BEER.ZK_N().STAN*'REA') || BEER.ZK_N().STAN='ZRE' ?}
      || _erz+=1; BEER.ZK_N:=null()
      ?};
      {? BEER.ZK_N<>null() & BEER.ZK_N().AKC<>'T' || _era+=1; BEER.ZK_N:=null() ?};
      {? BEER.ZK_N<>null() & BEER.ZK_N().DP>date(ST.AR,ST.AM,0) || _erd+=1; BEER.ZK_N:=null() ?};
      {? BEER.ZK_N<>null() & ~__zknzl.find_key($BEER.ZK_N,)
      || __zknzl.blank();
         __zknzl.ZK_N:=$BEER.ZK_N;
         __zknzl.GROP:=$_GROPr;
         __zknzl.add(1)
      ?};
      _beerzkn:=BEER.ZK_N;
      GROP.cntx_psh();
      ZK_N.cntx_psh();
      {!
      |? {? (GROP.prefix();GROP.seek(_tabzl.REF,)) & GROP.ref()<>_GROPbuf
         || _ok:=0;
            _GROPgrp:=ZL.ref();
            ZK_N.index('AGROP');
            ZK_N.prefix('A',GROP.ref());
            {? ZK_N.first()
            || __zknzl.clear();
               {? ZK_N.AKC='T' & ~__zknzl.find_key($ZK_N.ref(),)
               || __zknzl.blank();
                  __zknzl.ZK_N:=$ZK_N.ref();
                  __zknzl.GROP:=$GROP.ref();
                  __zknzl.add(1);
                  {? _beerzkn=null() || _beerzkn:=BEER.ZK_N:=ZK_N.ref() ?}
               ?};
               _ok:=1
            ?};
            {? _ok || exec('wyp_lstl','zamsiw_rea',_pathArea,_GROPgrp,__lstlim) ?}
         ?};
         _tabzl.next()
      !};
      BEER.ZK_N:=_beerzkn;
      GROP.cntx_pop();
      ZK_N.cntx_pop()
   ?};
   obj_del(_tabzl);
   {? BEER.ZK_N=null()
   || _err:=1
   || ZK_N.prefix();
      ZK_N.seek(BEER.ZK_N);
::    Sprawdzenie czy zamówienie posiada pozycje
      ZK_P.cntx_psh;
      ZK_P.index('NAG');
      ZK_P.prefix(BEER.ZK_N);
      {? ~ZK_P.first()
      || _err:=1;
         _erp:=1
      ?};
      ZK_P.cntx_pop()
   ?};
   {? ~_ZLgrup & ~exec('ctrllstl','zamsiw_rea',_ekiosk) || _err:=2 ?};
   {? ~_err & ~_ZLgrup & exec('ctrlmgpal','zamsiw_rea') || _err:=3 ?}
:: prefix po zamówieniach związanych ze zleceniem
|? _a=2 & _ZLref<>null()
|| DISP.CTRLMG:=exec('get','#params',3542,2,OPERATOR.USER)<>'T';
   __zknzl:=tab_tmp(1,'ZK_N','STRING[16]','','ZL','STRING[16]','');
   _ZLbuf:=_ZLref;
   _tabzl:=ZL.sel_aget();
   {? ~_tabzl.size()
    & (exec('FindAndGet','#table',ZL,_ZLref,,"RODZAJ",'')='N' | _ZLref=exec('top_level','zl_link',_ZLref))
   || _tabzl.blank();
      _tabzl.REF:=#_ZLref;
      _tabzl.add(1)
   ?};
   __grpzl:={? _tabzl.size() || 1 || -1 ?};
   {? __grpzl & _tabzl.first()
   || {!
      |? ZL.cntx_psh();
         ZL.prefix();
         {? ZL.seek(_tabzl.REF,) & ZL.ref()=exec('top_level','zl_link',ZL.ref())
         || _zazzl.blank();
            _zazzl.ZL:=$ZL.ref();
            _zazzl.add(1)
         ?};
         ZL.cntx_pop();
         _tabzl.next()
      !}
   ?};
   BEER.ZK_N:=null();
   ZK_N.index('ZLNR');
   ZK_N.prefix(_ZLref,'A');
   {? ZK_N.first()
   || {? _pathArea=2
      || _ZLwyd:=null();
::       Czy przypadek wydania do limitów podczas zamykania zlecnia prodykcyjnego (kontrola zamknięcia zlecenia)
         _czy_zam:=var_pres('__ZLIM4LIM')>100;
         _tab:=cur_tab(1,1);
         _tab_zlim:={? _czy_zam>0 || __ZLIM4LIM || _tab ?};
         {? _czy_zam>0
         || _ndx:=_tab_zlim.ndx_tmp(,,'ZL_REF',,,'TAB_REF',,);
            _tab_zlim.index(_ndx)
         ?};
         {? _tab.sel_size()
         || _tab.cntx_psh();
            _tab.prefix();
            {? _tab.first()
            || {!
               |?
                  _first:={? _czy_zam>0 || _tab_zlim.prefix(#_ZLref,$_tab.ref()); _tab_zlim.first() || 1 ?};
                  {? _tab.sel_mark() & _first>0
                  || _ZLwyd:=exec('FindAndGet','#table','SLO',_tab_zlim.WYD_REF,SLO.name(),,null());
                     0
                  || _tab.next()
                  ?}
               !}
            ?};
            _tab.cntx_pop()
         || _first:={? _czy_zam>0 || _tab_zlim.prefix(#_ZLref,$_tab.ref()); _tab_zlim.first() || 1 ?};
            {? _first>0
            || _ZLwyd:=exec('FindAndGet','#table','SLO',_tab_zlim.WYD_REF,SLO.name(),,null())
            ?}
         ?};
         {? _czy_zam>0
         || _tab_zlim.ndx_drop(_ndx)
         ?};
         {!
         |? {? ZK_N.WYD=_ZLwyd
            || BEER.ZK_N:=ZK_N.ref();
               0
            || ZK_N.next()
            ?}
         !};
         obj_del(_tab)
      || BEER.ZK_N:=ZK_N.ref()
      ?}
   |? exec('FindAndGet','#table',ZL,_ZLref,,"RODZAJ",'')<>'P'
   || BEER.ZK_N:=null();
      _nrnzl:=exec('FindAndGet','#table',ZL,_ZLref,,"NRNZL",'');
      {? ~_nrnzl || _nrnzl:=exec('FindAndGet','#table',ZL,_ZLref,,"UNRZL",'') ?};
      {? _nrnzl
      || ZL.cntx_psh();
         ZL.index('NRNZL');
         ZL.prefix(_nrnzl);
         {? ZL.first()
         || {!
            |? BEER.ZK_N:=exec('FindInSet','#table','ZK_N','ZLNR','A',ZL.ref());
               {? BEER.ZK_N<>null() & {? DISP.CTRLMG || ~(BEER.ZK_N().STAN*'REA') || BEER.ZK_N().STAN='ZRE' ?}
               || _erz+=1; BEER.ZK_N:=null()
               ?};
               {? BEER.ZK_N<>null() & BEER.ZK_N().AKC<>'T' || _era+=1 ?};
               {? BEER.ZK_N<>null() & BEER.ZK_N().DP>date(ST.AR,ST.AM,0) || _erd+=1 ?};
               {? BEER.ZK_N=null()
               || ZL.next()
               || _ZLref:=ZL.ref();
                  0
               ?}
            !}
         ?};
         ZL.cntx_pop()
      ?}
   ?};
   __lstlim:=exec('wyp_lstl','zamsiw_rea',_pathArea,_ZLref,,_zgp);
   _tabzl.clear();
   {? _tabzl.first()
   || _ZLgrup:=1;
      __zknzl.clear();
      {? BEER.ZK_N<>null() & {? DISP.CTRLMG || ~(BEER.ZK_N().STAN*'REA') || BEER.ZK_N().STAN='ZRE' ?}
      || _erz+=1; BEER.ZK_N:=null()
      ?};
      {? BEER.ZK_N<>null() & BEER.ZK_N().AKC<>'T' || _era+=1; BEER.ZK_N:=null() ?};
      {? BEER.ZK_N<>null() & BEER.ZK_N().DP>date(ST.AR,ST.AM,0) || _erd+=1; BEER.ZK_N:=null() ?};
      {? BEER.ZK_N<>null() & ~__zknzl.find_key($BEER.ZK_N,)
      || __zknzl.blank();
         __zknzl.ZK_N:=$BEER.ZK_N;
         __zknzl.ZL:=$_ZLref;
         __zknzl.add(1)
      ?};
      _beerzkn:=BEER.ZK_N;
      ZL.cntx_psh();
      ZK_N.cntx_psh();
      {!
      |? {? (ZL.prefix();ZL.seek(_tabzl.REF,)) & ZL.ref()<>_ZLbuf
         || _ok:=0;
            _ZLgrp:=ZL.ref();
            ZK_N.index('ZLNR');
            ZK_N.prefix(ZL.ref,'A');
            {? ZK_N.first()
            || __zknzl.clear();
               {? ZK_N.AKC='T' & ~__zknzl.find_key($ZK_N.ref(),)
               || __zknzl.blank();
                  __zknzl.ZK_N:=$ZK_N.ref();
                  __zknzl.ZL:=$ZL.ref();
                  __zknzl.add(1);
                  {? _beerzkn=null() || _beerzkn:=BEER.ZK_N:=ZK_N.ref() ?}
               ?};
               _ok:=1
            |? ZL.RODZAJ<>'P'
            || _nrnzl:=ZL.NRNZL;
               {? ~_nrnzl || _nrnzl:=ZL.UNRZL ?};
               {? _nrnzl
               || ZL.cntx_psh();
                  ZL.index('NRNZL');
                  ZL.prefix(_nrnzl);
                  {? ZL.first()
                  || {!
                     |?
                        BEER.ZK_N:=exec('FindInSet','#table','ZK_N','ZLNR','A',ZL.ref());
                        {? BEER.ZK_N<>null() & {? DISP.CTRLMG || ~(BEER.ZK_N().STAN*'REA') || BEER.ZK_N().STAN='ZRE' ?}
                        || _erz+=1; BEER.ZK_N:=null()
                        ?};
                        {? BEER.ZK_N<>null() & BEER.ZK_N().AKC<>'T' || _era+=1; BEER.ZK_N:=null() ?};
                        {? BEER.ZK_N<>null() & BEER.ZK_N().DP>date(ST.AR,ST.AM,0) || _erd+=1; BEER.ZK_N:=null() ?};
                        {? BEER.ZK_N=null()
                        || ZL.next()
                        || _ZLgrp:=ZL.ref();
                           __zknzl.clear();
                           {? ~__zknzl.find_key($BEER.ZK_N,)
                           || __zknzl.blank();
                              __zknzl.ZK_N:=$BEER.ZK_N;
                              __zknzl.ZL:=$ZL.ref();
                              __zknzl.add(1);
                              {? _beerzkn=null() || _beerzkn:=BEER.ZK_N ?}
                           ?};
                           _ok:=1;
                           0
                        ?}
                     !}
                  ?};
                  ZL.cntx_pop()
               ?}
            ?};
            {? _ok || exec('wyp_lstl','zamsiw_rea',_pathArea,_ZLgrp,__lstlim,_zgp) ?}
         ?};
         _tabzl.next()
      !};
      BEER.ZK_N:=_beerzkn;
      ZL.cntx_pop();
      ZK_N.cntx_pop()
   ?};
   obj_del(_tabzl);
   {? BEER.ZK_N=null()
   || _err:=1
   || ZK_N.prefix();
      ZK_N.seek(BEER.ZK_N);
::    Sprawdzenie czy zamówienie posiada pozycje
      ZK_P.cntx_psh;
      ZK_P.index('NAG');
      ZK_P.prefix(BEER.ZK_N);
      {? ~ZK_P.first()
      || _err:=1;
         _erp:=1
      ?};
      ZK_P.cntx_pop()
   ?};
   {? ~_ZLgrup & ~exec('ctrllstl','zamsiw_rea',_ekiosk) || _err:=2 ?};
   {? ~_err & ~_ZLgrup & exec('ctrlmgpal','zamsiw_rea') || _err:=3 ?}
?};

_czypal:=ZK_N.MG<>null & ZK_N.MG().PAL='T';

__dostpal:=tab_tmp(2,'PAL','STRING[16]',''
            ,'M','STRING[16]',''
            ,'ILR','REAL',''
            ,'ILP','REAL',''
            ,'RDK','REAL',''
            ,'NDK','STRING[8]',''
            ,'KOD','STRING[30]',''
            ,'LOK','STRING[30]',''
            ,'TW','DATE',''
            ,'PALDO','STRING[16]',''
            ,'POZ','STRING[16]',''
            ,'ROZPAL','INTEGER','');
__matakt:=tab_tmp(2,'REF','STRING[16]',''
           ,'NRK','INTEGER',''
           ,'ILR','REAL',''
           ,'ZKP','STRING[16]',''
           ,'ZKN','STRING[16]','');

__filtrz:=tab_tmp(2,'SYM','STRING[20]','Symbol zamówienia'
           ,'ZKN','STRING[16]','ref SQL-owy'
           ,'DAT','DATE','Data przyjęcia'
           ,'TRM','DATE','Termin realizacji'
           ,'WYB','INTEGER','czy wbrano'
           ,'LIST','INTEGER',''
           ,'ZLSYM','STRING[20]','Symbol zlecenia'
           ,'PAL','INTEGER','Czy mag.paletowy'
           ,'ZLR','STRING[16]','ref SQL-owy zlecenia');

__stnmat:=tab_tmp(2,'MAT','STRING[16]',''
           ,'MAG','STRING[16]',''
           ,'ILE','REAL',''
           ,'ILR','REAL','');

__kolmag:=tab_tmp(2,'REA','STRING[16]',''
           ,'MAG','STRING[16]',''
           ,'NRK','INTEGER','');

_filtrsel:=__winflt:=__filtrz.mk_sel(
                      {? ~_czypal
                      || {? ZK_N.T().R='Z'
                         || 'Zamówienia do realizacji dla '@+ZK_N.KH().KOD+' - '+ZK_N.KH().NAZ
                         || 'Zamówienia do realizacji'@
                         ?}
                      || {? ZK_N.T().R='Z'
                         || 'Inne zamówienia dla '@+ZK_N.KH().KOD+' - '+ZK_N.KH().NAZ
                         || 'Inne zamówienia'@
                         ?}
                      ?}
                      ,'P',,'#winid_filtr',,,,,'U');
__filtrz.win_fld(_filtrsel,,'SYM',,,-20,,1,'');
__filtrz.win_fld(_filtrsel,,'DAT',,,-20,,1,'Data przyjęcia'@);
__filtrz.win_fld(_filtrsel,,'TRM',,,-20,,1,'Termin realizacji'@);
__filtrz.win_act(_filtrsel,0,'Formuła','&Pozycje'@@,,'Podgląd pozycji zamówienia'@,
                          ,"exec('disp_poz','zamsiw_rea',0)",1,,,,'P');
{? ~_wg_nzl & ~_czypal
|| __filtrz.win_act(_filtrsel,0,'Formuła','Do &realizacji'@@,,'Przeniesienie zamówienia do realizacji'@,
                          ,"exec('add_zamr','zamsiw_rea',,,1)",0,1,"exec('add_zamr','zamsiw_rea',,,1)",,'R')
?};
__filtrz.win_act(_filtrsel,0,'Rekord',,,,"exec('rekprzed','color','ZFIL#01')");
__filtrz.win_act(_filtrsel,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','ZFIL#01')",,,,,,'L');
__filtrz.win_act(_filtrsel,0,'Wyświetl',,,,"exec('dispzk_n','zamsiw_rea')");
__filtrz.win_sel(_filtrsel);

__inforr:=tab_tmp(2,'TYP','STRING[1]','Typ informacji'
           ,'OPI','STRING[30]','Opis'
           ,'NAZ','STRING[60]','Nazwa'
           ,'ILE','REAL','Procent');

_infosel:=__inforr.mk_sel('Informacje o realizacji'@,'P',,'#winid_infor',,,,,'U');
__inforr.win_fld(_infosel,,'OPI',,,10,,1,'Magazyn'@);
__inforr.win_fld(_infosel,,'NAZ',,,30,,1,'Nazwa'@);
__inforr.win_fld(_infosel,,'ILE',,,10,2,1,' % ');
__inforr.win_sel(_infosel);

__zknrea:=tab_tmp(4,'TREE','TREE_REF','galazka'
           ,'LAB','STRING[90]','Etykieta'
           ,'ZAM','STRING[20]','Symbol zamówienia'
           ,'POZ','INTEGER','Pozycja'
           ,'REF','STRING[16]','ref'
           ,'MAG','STRING[10]','Magazyn'
           ,'KTM','STRING[50]','Indeks-KTM'
           ,'NAZ','STRING[100]','Indeks-Nazwa'
           ,'ILZ','REAL','Il.zamówiona'
           ,'ILP','REAL','Il.pozostała'
           ,'REZ','REAL','Il.zarezerwowana'
           ,'REA','REAL','Il.do realizacji'
           ,'ICON','INTEGER','Ikonka'
           ,'WYB','STRING[1]','Wybrano'
           ,'RJ2','REAL','Ilość w j.sprz.'
           ,'JM1','STRING[10]','jm'
           ,'JM2','STRING[10]','J.sprz.'
           ,'DTZ','DATE','Data zamówienia'
           ,'ZKN','STRING[16]','ref zamowienia'
           ,'PAL','STRING[16]','paleta'
           ,'SQM','STRING[16]','ref SQL M'
           ,'KPAL','STRING[30]','kod kreskowy palety'
           ,'CZY','INTEGER','czy magazyn paletowy'
           ,'LOKZ','STRING[20]','Lokalizacja'
           ,'KODK','STRING[128]','Kod kreskowy'
           ,'TW','DATE','Termin ważności'
           ,'ZLSYM','STRING[20]','Symbol zlecenia'
           ,'WART','REAL','wartosc sprzedazy'
           ,'ONEMG','STRING[16]','tylko z magazynu'
           ,'DOST','INTEGER','rezerwacje wg dostaw'
           ,'NAD','INTEGER','czy galaz nadrzedna'
           ,'MGP','INTEGER','czy magazyn paletowy'
           ,'TR','DATE','Termin realizacji'
           ,'WTR','DATE','Wewnętrzny termin realizacji'
           ,'USL','STRING[1]','Czy usluga'
           ,'ZGH','INTEGER','Przewodnik zlecenia - #ZGH.ref()'
           ,'ZGP','INTEGER','Pozycja przewodnika - #ZGP.ref()'
           ,'ZGP_NAME','STRING[40]','Pozycja przewodnika'
           ,'RED','REAL','Ilość zarezerwowana wg dostawy'
           ,'PLUS','REAL','Ilość powyżej'
           ,'RES','REAL','Sumaryczna ilość do realizacji'
           ,'RS2','REAL','Sumaryczna ilość wg j.sprz.'
           ,'WDST','INTEGER','Czy wynika z wyboru dostawy');

exec('war_hids','ceny',__zknrea,'WART');

_param:={? ZK_N.T().R='Z' || 600800 || 600801 ?};
__ilplus:=~_czypal & (ZK_N.LIM='T' | (';ZR'*exec('get','#params',_param,2))>1);

__winzkr:=_win_sel:=__zknrea.mk_sel('Ilości do realizacji'@,'P',,'#winid_zknrea',,,__zknrea.size(),1);

__zknrea.win_fld(_win_sel,,'LAB',,,30,,1,'Zamówienie/pozycje do realizacji'@);
__zknrea.win_fld(_win_sel,,'ILZ',,,10,ST.DOKL,1,'Zamówiono'@);
__zknrea.win_fld(_win_sel,,'ILP',,,10,ST.DOKL,1,'Pozostało'@);
__zknrea.win_fld(_win_sel,,'REZ',,,10,ST.DOKL,1,'Zarezerwowano'@);
::__zknrea.win_fld(_win_sel,,'REA',,,-27,ST.DOKL,1,'Do realizacji (jednostka magazynowa)'@);
__zknrea.win_fld(_win_sel,,'RES',,,-27,ST.DOKL,,'Do realizacji (jednostka magazynowa)'@);
__zknrea.win_fld(_win_sel,,'JM1',,,4,,1,'jm'@);
{? ZK_N.T().R='Z'
||
::   __zknrea.win_fld(_win_sel,,'RJ2',,,-26,ST.DOKL,1,'Do realizacji (jednostka przeliczona)'@);
   __zknrea.win_fld(_win_sel,,'RS2',,,-26,ST.DOKL,,'Do realizacji (jednostka przeliczona)'@);
   __zknrea.win_fld(_win_sel,,'JM2',,,4,,1,'jm'@)
?};
{? ZK_N.MG<>null & ZK_N.MG().PAL='T'
|| __zknrea.win_fld(_win_sel,,'KPAL',,,10,,1,'Kod palety'@)
?};
{? ZK_N.T().R='Z'
|| __zknrea.win_fld(_win_sel,,'WART',,,10,2,1,{? ZK_N.CB='N' || 'Wartość netto'@ || 'Wartość brutto'@ ?},,,,1)
?};
{? ZK_N.LIM='T'
|| __zknrea.win_fld(_win_sel,,'ZGP_NAME',,,40,,1,'Pozycja przewodnika zlecenia'@)
?};
{? ~_wg_nzl & (ZK_N.MG=null | ZK_N.MG().PAL<>'T')
|| __zknrea.win_act(_win_sel,0,'Popraw',,,,"__zknrea.TREE<>0",,1)
?};
__zknrea.win_act(_win_sel,0,'Rekord',,,,"exec('rekprzed','color','ZREA#01')","exec('popzkrea','zamsiw_rea')");
__zknrea.win_act(_win_sel,0,'Formuła','&Akceptuj'@@,,'Akceptacja ilości do realizacji'@,,"sel_exit()",,,,,'A');
{? ~_wg_nzl & ~_czypal
|| __zknrea.win_act(_win_sel,0,'Formuła','&Zeruj'@@,,'Zerowanie pola Do realizacji'@,
      "exec('zatw_wyb','zamsiw_rea',0)",,,1,"exec('zatw_wyb','zamsiw_rea',0)",,'Z');
  __zknrea.win_act(_win_sel,0,'Formuła','&Wypełnij'@@,,'Wypełnienie pola Do realizacji'@,
      "exec('zatw_wyb','zamsiw_rea',1)",,,1,"exec('zatw_wyb','zamsiw_rea',1)",,'W')
?};
{? ~_wg_nzl & ~__reazld & ~_czypal
|| __zknrea.win_act(_win_sel,0,'Formuła','Zmień &magazyn'@@,,'Zmiana magazynu do realizacji'@,
   "exec('new_magr','zamsiw_rea')",,,,,,'M')
?};
__zknrea.win_act(_win_sel,0,'Formuła','A&trybuty'@@,,'Atrybuty dostaw'@,"exec('atr_real','zamsiw_rea')",,,,,,'T');
__zknrea.win_act(_win_sel,0,'Formuła','Pla&n'@@,,'Informacja o możliwości realizacji zamówienia'@,
   "exec('rea_plan','zamsiw_rea')",,,,,,'N');

{? ~_czypal
|| {? ~_wg_nzl
   || __zknrea.win_act(_win_sel,0,'Formuła','&Część'@@,,'Wyznacza ilość do realizacji dla części zamówienia'@
       ,"exec('zknrea_part','zamsiw_rea')",,,1,"exec('zknrea_part','zamsiw_rea')",,'C')
   ?};
   __zknrea.win_act(_win_sel,0,'Formuła','Wybór &dostaw'@@,,'Umożliwia wybór dostawy do realizacji zamówienia'@
      ,"exec('zknrea_wdst','zamsiw_rea')",,,,,,'D');
   __zknrea.win_act(_win_sel,0,'Formuła','&Informacja o realizacji'@@,,'Informacja o możliwości realizacji zamówienia'@
      ,"exec('rea_info','zamsiw_rea')",,,,,,'I')
?};
{? ~_wg_nzl & ~_czypal
|| __zknrea.win_act(_win_sel,0,'Formuła','Usuń z &realizacji'@@,,'Usunięcie zamówienia z realizacji',
                          ,"exec('del_zamr','zamsiw_rea',1)",0,1,"exec('del_zamr','zamsiw_rea',1)",,'R')
?};
__zknrea.win_act(_win_sel,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','ZREA#01')",,,,,,'L');

__zknrea.tr_fml(_win_sel,,"{? _a || {? __zknrea.TREE=0 || 1 || _a ?} || _a ?}");
__zknrea.win_fml(_win_sel,,'LAB',,'ICON_BEFORE',"
         {? __zknrea.TREE<>0 & __zknrea.WYB='*'
         || _nad:=1;
            __zknrea.cntx_psh();
            __zknrea.clear();
            _nad:={? __zknrea.seek(__zknrea.TREE,) || __zknrea.TREE=0 || 1 ?};
            __zknrea.cntx_pop();
            {? _nad || 'xwin16.png:38' || 'xwin16.png:13' ?}
         |? __zknrea.TREE<>0 & __zknrea.WYB=''
         || ''
         |? __zknrea.ICON=-1
         || 'xwin16.png:7'+{? __zknrea.tr_state()=1 || '5' || '4' ?}
         || ''
         ?}
      ");
__zknrea.fld_fml('ILZ','DISPLAY_FORMAT',"{? ~__zknrea.TREE || 'empty=1' || 'empty=0' ?}");
__zknrea.fld_fml('ILP','DISPLAY_FORMAT',"{? ~__zknrea.TREE || 'empty=1' || 'empty=0' ?}");
__zknrea.fld_fml('REZ','DISPLAY_FORMAT',"{? ~__zknrea.TREE | (__zknrea.DOST & ~__zknrea.NAD)
                                         || 'empty=1'
                                         || 'empty=0'
                                         ?}");
::__zknrea.fld_fml('REA','DISPLAY_FORMAT',"{? ~__zknrea.TREE || 'empty=1' || 'empty=0' ?}");
__zknrea.fld_fml('RES','DISPLAY_FORMAT',"{? ~__zknrea.TREE || 'empty=1' || 'empty=0' ?}");
::__zknrea.fld_fml('RJ2','DISPLAY_FORMAT',"{? ~__zknrea.TREE || 'empty=1' || 'empty=0' ?}");
__zknrea.fld_fml('RS2','DISPLAY_FORMAT',"{? ~__zknrea.TREE || 'empty=1' || 'empty=0' ?}");
::__zknrea.win_fml(_win_sel,,'REA',,'ICON_BEFORE',exec('bedispre','zamsiw_rea'));
__zknrea.win_fml(_win_sel,,'RES',,'ICON_BEFORE',exec('bedispre','zamsiw_rea'));

__zknrea.fld_fml('RES','BEFORE_EDIT',"exec('isEdit','zamsiw_rea',0)");
__zknrea.fld_fml('RS2','BEFORE_EDIT',"exec('isEdit','zamsiw_rea',1)");
__zknrea.fld_fml('RES','AFTER_EDIT',"exec('res2rs2','zamsiw_rea')");
__zknrea.fld_fml('RS2','AFTER_EDIT',"exec('rs22res','zamsiw_rea')");

__zknrea.win_btn(_win_sel,'text='+'Pla&n'@+', panel=bottom, align=begin','menu:N',,,,,,'noempty');
__id4btn:=__zknrea.win_btn(_win_sel,'text='+'A&trybuty'@+', panel=bottom, align=begin','menu:T',,,,,,'noempty');

{? ~__reazld & ~_czypal
|| __id3btn:=__zknrea.win_btn(_win_sel,'text='+'Zmień &magazyn'@+', panel=bottom, align=begin','menu:M',,,,,,'noempty')
|| __id3btn:=''
?};
__zknrea.win_btn(_win_sel,'text='+'&Akceptuj'@+', icon='+exec('ok','#icon')+', panel=bottom, align=begin','menu:A',,,,,,'noempty');

__zknrea.win_sel(_win_sel);

:: tworzymy okienko grupowe z mozliwoscia dorzucenia pozycji z innych zamowien

_winsel:=__zkrwi1:=__zknrea.grp_make('Realizacja'@,,'#realgrpzam');
__zknrea.grp_sel(_winsel,__zknrea,_win_sel,,"exec('odsw_inf','zamsiw_rea')",,,20,,,,,'maximized_with_title');
{? __reazld<=1
|| __zknrea.grp_splt(_winsel,,'horizontal','rez');
   __zknrea.grp_sel(_winsel,__filtrz,_filtrsel,,,,,8,"",,,,'maximized_with_title')
?};
{? ~__reazld
|| __zknrea.grp_splt(_winsel,'rez','vertical','mag');
   __zknrea.grp_sel(_winsel,BUFMG,'WER',,,,,8,"{? __zknrea.TREE || '' || '#disable' ?}",,,,'maximized_with_title');
::   __zknrea.grp_splt(_winsel,'mag','vertical','inf');
::   __zknrea.grp_sel(_winsel,__inforr,_infosel,,,,,8,"",,,,'maximized_with_title');
   BUFMG.win_fml('WER',,'MG','SYM','ICON_BEFORE',exec('bufmg_sym_ib','zamsiw_rea'));
   BUFMG.win_fml('WER',BEER,'KOLEJ',,'ICON_BEFORE',exec('bufmg_lp_ib','zamsiw_rea'))
?};
__zknrea.win_sel(_winsel);
{? ~_wg_nzl & ~_czypal
|| __zknrea.dnd_sel(_win_sel,,'records.#winid_filtr',"exec('add_zamr','zamsiw_rea')");
   __filtrz.dnd_sel(_filtrsel,,'records.#winid_zknrea',"exec('del_zamr','zamsiw_rea')")
?};

{? _err
|| {? _err=1
   || {? ~__grpzl
      || {? _erp
         || FUN.info('Brak pozycji na zamówieniu dla wybranego zlecenia.\n'
                     'Realizacja niemożliwa.'@)
         || FUN.info('Brak zamówienia dla wybranego zlecenia.\n'
                     'Realizacja niemożliwa.'@)
         ?}
      |? __grpzl<0
      || {? _erp
         || FUN.info('Brak pozycji na zamówieniu dla wybranego zlecenia.\n'
                     'Realizacja niemożliwa.'@)
         |? _erz
         || FUN.info('Niemożliwe wydanie do wskazanego zlecenia.\n'
                     'Limity zostały zrealizowane lub brak ilości do realizacji.'@)
         |? _erd
         || FUN.info('Niemożliwe wydanie do wskazanego zlecenia.\n'
                     'Data wprowadzenia limitów większa od końcowej daty okresu.\n'
                     'Należy zmienić okres.'@);
            _err:=3
         || FUN.info('Niemożliwe wydanie do wskazanego zlecenia.\n'
                     'Niewłaściwy stan zlecenia lub brak surowców wg limitów.'@)
         ?}
      || {? _erp
         || FUN.info('Brak pozycji na zamówieniach dla wybranych zleceń.\n'
                     'Realizacja niemożliwa.'@)
         |? _erz & ~_erd
         || FUN.info('Niemożliwe wydanie dla wybranych zleceń.\n'
                     'Limity zostały zrealizowane lub brak ilości do realizacji.'@)
         |? _erd & ~_era & ~_erz
         || FUN.info('Niemożliwe wydanie dla wybranych zleceń.\n'
                     'Data wprowadzenia limitów większa od końcowej daty okresu.\n'
                     'Należy zmienić okres.'@);
            _err:=3
         || FUN.info('Niemożliwe wydanie dla wybranych zleceń.\n'
                     'Niewłaściwy stan zleceń lub brak surowców wg limitów.'@)
         ?}
      ?}
   |? _err=3
   || FUN.info('Niemożliwe wydanie dla wybranych zleceń.\n'
               'Limity dotyczą magazynów z obsługą i bez obsługi palet.\n'
               'Należy rozdzielić realizację surowców lub ponownie wygenerować limity.'@)
   ?}
|? ZK_N.AKC<>'T'
|| {? __grpzl<0
   || FUN.info('Niemożliwe wydanie do wskazanego zlecenia.\n'
               'Niewłaściwy stan zlecenia lub brak surowców wg limitów.'@)
   |? __grpzl>0
   || FUN.info('Niemożliwe wydanie dla wybranych zleceń.\n'
               'Niewłaściwy stan zleceń lub brak surowców wg limitów.'@)
   || FUN.info({? ~(_a=2 | __reazld>=1)
               || 'Zamówienie nie jest zaakceptowane.\n'@+
                  'Realizacja niemożliwa.'@
               || 'Dla wybranego zlecenia zamówienie nie jest zaakceptowane.\n'@+
                  'Realizacja niemożliwa.'@
               ?})
   ?}
|? ZK_N.DP>date(ST.AR,ST.AM,0)
|| FUN.info('Data wprowadzenia zamówienia większa od końcowej daty okresu.\n'@+
            'Zmień okres w celu realizacji zamówienia.'@)
|? ZK_N.T().ZAP='T' & ZK_N.EZAPOT<>'' & ~exec('zapot_akc','zamowienia',ZK_N.EZAPOT)
|| FUN.info('Zamówienie jest zaakceptowane,'
            '\nale do jego realizacji potrzebna jest akceptacja Zapotrzebowania.\n'@+
            'Realizacja niemożliwa.'@)
|? (_ean:=exec('eann2zk','magdok_wspolne',ZK_N.ref()))<>''
|| FUN.info('Zamówienie przesłane na urządzenie mobilne.\n'@+
            'Realizacja niemożliwa.'@)
|? ZK_N.ZL<>null() & ZK_N.ZL().STAN<>'O'
|| FUN.info('Zamówienie dotyczy zlecenia, które jest '@+(-exec('GetZL_STAN_txt','zl_common',ZK_N.ZL().STAN))
           +'\nRealizacja jest możliwa tylko dla zleceń, które są '@+(-exec('GetZL_STAN_txt','zl_common','O'))+'.')
|? ZK_N.MG<>null & exec('czyinw_a','magazyn_inw',ZK_N.MG)
|| FUN.info('W magazynie %1 istnieje otwarty arkusz inwentaryzacji pełnej.\n'@[ZK_N.MG().SYM]+
            'Realizacja niemożliwa.'@)
|? ZK_N.AKC='T'
||
   _kh_dod_b:=exec('kh_dod_b','kontrahent','zkn_rea',ZK_N.KH,2);
   {? _kh_dod_b='T' | _kh_dod_b='B'
   ||
      FUN.info('Kontrahent zablokowany.'@)
   |? {? _a & ZK_N.T().R='Z' || exec('czy_sts','ustawienia') || 1 ?}
   ||
::    ustawienie zmiennej TAZ - wykorzystywanej do obliczen wartosci
      exec('st_licz_wz','ceny','ZK_N');
::    czy wiele zamowien na raz
      _czypal:=ZK_N.MG<>null & ZK_N.MG().PAL='T';
      {? _a=2 & _ZLref<>null()
      || {? ~_pathArea || exec('zknwgzl','zamsiw_rea',_ZLref,_zazzl) ?}
      |? _a=2 & _GROPr<>null()
      || {? ~_pathArea || exec('zknwggrop','zamsiw_rea',_ZLref,_zazzl) ?}
      |? ZK_N.T().R='Z'
      || exec('sprzknkh','zamsiw_rea',ZK_N.KH,ZK_N.T,{? _czypal || ZK_N.MG || null ?}
          ,{? _wg_nzl || _tab_nzl || 0 ?})
      || exec('sprzwydz','zamsiw_rea',ZK_N.WYD,ZK_N.T,ZK_N.ZL,_NDref<>null(),_zlwar,{? _czypal || ZK_N.MG || null ?})
      ?};
::    wlaczenie tabeli komunikatow
      exec('ini_kom','#message','Informacje o pozycjach zamówień.'@);
      {? _czypal
      ||
::       dodatkowe inne okienko realizacji
         BEER.MENU_PTH:={? ZK_N.T().R='Z' || 'ZZ' || 'ZW' ?};
         exec('reawgpal','zamsiw_palety')
      ?};
      exec('wyst_zwz','zamsiw_rea',_a,{? _a<>2 || _NDref || _ZLref ?},{? _ekiosk>1 || _ekiosk || 1 ?},_dodwar
       ,{? ~_pathArea & _a=2 || {? _ZLgrup || 2 || _ZLref<>null() ?} || 0 ?}
       ,{? _ZLwej<>null() & _ZLwej<>_ZLref || _ZLwej || null() ?}
       ,_tr_nzl,_zgp);
      BEER.MW:='Z'
   ?}
?};
obj_del(_zazzl);
__zknrea.dnd_sel(_win_sel,,'records.#winid_filtr',"");
__filtrz.dnd_sel(_filtrsel,,'records.#winid_zknrea',"");
{? ~_ekiosk | _ekiosk=3
|| VAR_DEL.delete('__zknrea','__filtrz','__matakt','__inforr','__stnmat','__winzkr','__kolmag','__winflt');
   VAR_DEL.delete('__palkpl','__pozkpl','__zrekpl','__palki1','__palki2','__zkrwi1','__zkrwi2','__id3btn');
   VAR_DEL.delete('__dostpal','__reazld','__id4btn','__lstlim','__ilplus','__zknzl','__grpzl','__popres')
?};
BUFMG.f_clear();
MG.f_clear();
_err


\wyp_lstl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: wypelnia tabele limitami
::   WE: [_a] - 0-uruchomione poza obszarem roboczym, uruchomione z obszaru roboczego: 1-LMG, 2-TTE
::       [_b] - ZL.ref() lub GROP.ref()
::       [_c] - tablica wyników - dopisujemy do niej
::       [_d] - ZGP.ref()
::  OLD: \wyp_lstl/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_c')=type_of(SYSLOG)
|| _wyn:=_c
|| _wyn:=tab_tmp(1,'M_REF','INTEGER',''
          ,'REF','STRING[16]',''
          ,'AKC','STRING[1]',''
          ,'SO','STRING[1]',''
          ,'ZL_REF','INTEGER',''
          ,'ZK_P_QRF','STRING[16]',''
          ,'GROP_REF','INTEGER',''
          ,'WYD_REF','INTEGER',''
          ,'MGPAL','INTEGER','')
?};

_zgp:={? var_pres('_d')=type_of(null()) || _d || null() ?};
_is_grop:=_b<>null() & ref_tab(_b)=GROP;

{? _a=2
:: uruchomione z obszaru roboczego TTE
||
:: Czy przypadek wydania do limitów podczas zamykania zlecenia produkcyjnego (kontrola zamknięcia zlecenia)
   _czy_zam:=var_pres('__ZLIM4LIM')>100;
   _tab:=cur_tab(1,1);
   _tab_zlim:={? _czy_zam>0 || __ZLIM4LIM || _tab ?};
   {? _czy_zam>0
   || {? _is_grop
      || _ndx:=_tab_zlim.ndx_tmp(,,'GROP_REF',,,'TAB_REF',,)
      || _ndx:=_tab_zlim.ndx_tmp(,,'ZL_REF',,,'TAB_REF',,)
      ?};
      _tab_zlim.index(_ndx)
   ?};
   {? _tab.sel_size()
   || _tab.cntx_psh();
      _tab.prefix();
      {? _tab.first()
      || {!
         |? {? ~_is_grop
            || {? (_czy_zam>0 | _tab.ZL_REF) & _tab.sel_mark()
               || _first:={? _czy_zam>0 || _tab_zlim.prefix(#_b,$_tab.ref()); _tab_zlim.first() || 1 ?};
                  {? _first
                  ||
                     {!
                     |?
                        {? _zgp=null() | exec('FindAndGet','#table',ZLIM,_tab_zlim.REF,,"ZGP",null())=_zgp
                        || _wyn.clear();
                           _wyn.blank();
                           _wyn.M_REF:=_tab_zlim.M_REF;
                           _wyn.REF:=_tab_zlim.REF;
                           _wyn.AKC:={? _czy_zam>0 || _tab_zlim.AKC || {? _tab_zlim.ALIL>0 || _tab_zlim.AKC || 'I' ?} ?};
                           _wyn.SO:=_tab_zlim.SO;
                           _wyn.ZL_REF:=_tab_zlim.ZL_REF;
                           _wyn.ZK_P_QRF:=_tab_zlim.ZK_P_QRF;
                           _wyn.WYD_REF:=_tab_zlim.WYD_REF;
                           _wyn.MGPAL:={? ref_tab(_wyn.REF)=ZLIM
                                       || exec('FindAndGet','#table',ZLIM,_wyn.REF,,"MG().PAL='T'",0)
                                       || 0
                                       ?};
                           _wyn.add(1)
                        ?};
                        _loop:={? _czy_zam>0 || _tab_zlim.next() || 0 ?};
                        _loop
                     !}
                  ?}
               ?}
            || {? (_czy_zam>0 | _tab.GROP_REF) & _tab.sel_mark()
               || _first:={? _czy_zam>0 || _tab_zlim.prefix(#_b,$_tab.ref()); _tab_zlim.first() || 1 ?};
                  {? _first
                  ||
                     {!
                     |?
                        {? _zgp=null() | exec('FindAndGet','#table',ZLIM,_tab_zlim.REF,,"ZGP",null())=_zgp
                        || _wyn.clear();
                           _wyn.blank();
                           _wyn.M_REF:=_tab_zlim.M_REF;
                           _wyn.REF:=_tab_zlim.REF;
                           _wyn.AKC:={? _czy_zam>0 || _tab_zlim.AKC || {? _tab_zlim.ALIL>0 || _tab_zlim.AKC || 'I' ?} ?};
                           _wyn.SO:=_tab_zlim.SO;
                           _wyn.GROP_REF:=_tab_zlim.GROP_REF;
                           _wyn.ZK_P_QRF:=_tab_zlim.ZK_P_QRF;
                           _wyn.WYD_REF:=_tab_zlim.WYD_REF;
                           _wyn.MGPAL:={? ref_tab(_wyn.REF)=ZLIM
                                       || exec('FindAndGet','#table',ZLIM,_wyn.REF,,"MG().PAL='T'",0)
                                       || 0
                                       ?};
                           _wyn.add(1)
                        ?};
                        _loop:={? _czy_zam>0 || _tab_zlim.next() || 0 ?};
                        _loop
                     !}
                  ?}
               ?}
            ?};
            _tab.next()
         !}
      ?};
      _tab.cntx_pop();
      _tab.sel_adel()
   || _first:={? _czy_zam>0 || _tab_zlim.prefix(#_b,$_tab.ref()); _tab_zlim.first() || 1 ?};
      {? _first
      ||
         {!
         |?
            {? _zgp=null() | exec('FindAndGet','#table',ZLIM,_tab_zlim.REF,,"ZGP",null())=_zgp
            || _wyn.blank();
               _wyn.M_REF:=_tab_zlim.M_REF;
               _wyn.REF:=_tab_zlim.REF;
               _wyn.AKC:={? _czy_zam>0 || _tab_zlim.AKC || {? _tab_zlim.ALIL>0 || _tab_zlim.AKC || 'I' ?} ?};
               _wyn.SO:=_tab_zlim.SO;
               {? ~_is_grop
               || _wyn.ZL_REF:=_tab_zlim.ZL_REF
               || _wyn.GROP_REF:=_tab_zlim.GROP_REF
               ?};
               _wyn.ZK_P_QRF:='';
               _wyn.WYD_REF:=_tab_zlim.WYD_REF;
               _wyn.MGPAL:={? ref_tab(_wyn.REF)=ZLIM
                           || exec('FindAndGet','#table',ZLIM,_wyn.REF,,"MG().PAL='T'",0)
                           || 0
                           ?};
               _wyn.add(1)
            ?};
            _loop:={? _czy_zam>0 || _tab_zlim.next() || 0 ?};
            _loop
         !}
      ?}
   ?};
   {? _czy_zam>0
   || _tab_zlim.ndx_drop(_ndx)
   ?}
:: uruchomione poza obszarem roboczym TTE
|| _break:=0;
   {? ref_tab(_b)=ZL
   || exec('openmask','zl_common',_b);
      ZLIM.index('ZKK')
   |? ref_tab(_b)=GROP
   || exec('openmask','zl_common',null(),_b);
      ZLIM.index('GROPKM')
   || _break:=1
   ?};
   {? ~_break
   || ZLIM.prefix(_b,'T',0);
      _loop:=ZLIM.first();
      {!
      |? _loop
      |! {? _zgp=null() | ZLIM.ZGP=_zgp
         || _wyn.clear();
            _wyn.blank();
            _wyn.M_REF:=#ZLIM.KTM;
            _wyn.REF:=$ZLIM.ref();
            _wyn.AKC:={? exec('GetAlLil4ZLIM','zl_limit',1,ZLIM.ref())>0 || ZLIM.AKC || 'I' ?};
            _wyn.SO:=ZLIM.SO;
            _wyn.MGPAL:=ZLIM.MG().PAL='T';
            _wyn.add(1)
         ?};
         _loop:=ZLIM.next()
      !}
   ?}
?};
_wyn


\ctrllstl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: sprawdza czy wszystkie wybrane pozycje limitow sa zaakceptowane i nie są odpadami
::   WE: [_a] - bez komunikatów o odpadach
::   WY: 0-brak w ogole wpisow 1-cos jest
::  OLD: \ctrllstl/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_ekiosk:={? var_pres('_a')=type_of(0) & _a>1 || 1 || 0 ?};
_err:=0;
_eil:=0;
_eio:=0;
__lstlim.clear();
{? __lstlim.first()
|| {!
   |? {? __lstlim.SO='O'
      || {? ~_ekiosk || _eio+=1 ?};
         __lstlim.del()
      |? __lstlim.AKC='N'
      || _err+=1;
         __lstlim.del()
      |? __lstlim.AKC='I'
      || _eil+=1;
         __lstlim.del()
      || __lstlim.next()
      ?}
   !}
?};
_sa:=__lstlim.size();
{? (_err>0 | _eil>0 | _eio>0) & ~_sa
|| FUN.info('Wśród wybranych pozycji limitów brak limitów zaakceptowanych'
            '\nlub brak zatwierdzonej ilości limitu.'
            '\nGeneracja wydania niemożliwa.'@);
   _wyn:=0
|? (_err>0 | _eil>0 | _eio>0) & _sa
|| {? FUN.ask({? _eio=1 || 'Wśród wybranych pozycji limitów jest 1 odpad/koprodukt.'@+{? _err>0 | _eil>0 || '\n' || ''?}
              |? _eio>0 || 'Wśród wybranych pozycji limitów są %1 odpady/koprodukty.'@[form(_eio,,0,'99')]+
                           {? _err>0 | _eil>0 || '\n' || '' ?}
              || ''
              ?}
             +{? _err=1 || 'Wśród wybranych pozycji limitów jest 1 limit niezaakceptowany.'@+{? _eil>0 || '\n' || '' ?}
              |? _err>0 || 'Wśród wybranych pozycji limitów są %1 limity niezaakceptowane.'@[form(_err,,0,'99')]+
                           {? _eil>0 || '\n' || '' ?}
              || ''
              ?}
             +{? _eil=1 || 'Wśród wybranych pozycji limitów jest 1 pozycja bez ilości zatwierdzonej.'@
              |? _eil>0 || 'Wśród wybranych pozycji limitów są %1 pozycje bez ilości zatwierdzonej.'@[form(_eil,,0,'99')]
              || ''
              ?}
             +'\n'+'Generacja wydania pominie te pozycje.\nCzy kontynuować?'@)
   || _wyn:=1
   || _wyn:=0
   ?}
?};
_wyn


\disp_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wyswietla pozycje danego zamowienia
::   WE: [_a] - blokady zamówień i usunięcie blokad 1-tak(domyślnie) 0-nie
::  OLD: \disp_poz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_lock:={? var_press('_a')=type_of(0) || _a || 1 ?};
_beerzkn:=BEER.ZK_N;
ZK_N.cntx_psh();
ZK_N.clear();
{? ZK_N.seek(__filtrz.ZKN,form(8+__filtrz.ZKN)) || exec('zam_poz','zamsiw_poz',1,_lock) ?};
BEER.ZK_N:=_beerzkn;
ZK_N.cntx_pop();
~~


\zfil_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: rekord dla zaznaczenia
::  OLD: \zfil_kol/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? __filtrz.WYB || 'ZREA#01#01' || '' ?}


\dispzk_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wyswietla podglad naglowka zamowienia
::  OLD: \dispzk_n/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
__filtrz.cntx_psh();
ZK_N.cntx_psh();
ZK_N.clear();
{? ZK_N.seek(__filtrz.ZKN)
|| exec('zknag_display','zamsiw_nag')
?};
__filtrz.cntx_pop();
ZK_N.cntx_pop();
~~


\popzkrea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po funkcji popraw na rekordzie
::   WE: [_a] - 1-podzial procentowy domyslnie 0
::   WY: podswietla zaznaczone rekordy
::  OLD: \popzkrea/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_wyn:=0;
_msg:='';
_galrez:={? ~__zknrea.NAD & ~__zknrea.DOST || __zknrea.ILP || __zknrea.REZ ?};
{? ~__ilplus | (__zknrea.PLUS=0 & _galrez>=__zknrea.RES) || __zknrea.REA:=__zknrea.RES ?};
{? __zknrea.REA<0 | __zknrea.RES<0
|| _msg:='Należy podać ilość nieujemną. Wybór nie został zatwierdzony.';
   {? ~_a || FUN.info(_msg) ?};
   __zknrea.REA:=__zknrea.RES:=__zknrea.ILP;
   __zknrea.put(1)
|? ~__ilplus & __zknrea.REA>__zknrea.ILP
|| _msg:='Podano zbyt dużą ilość (wpisana realizacja: %1 %2; pozostało do realizacji: %3 %2).\n'
         'Wybór nie został zatwierdzony.'@[$__zknrea.REA,__zknrea.JM1,$__zknrea.ILP];
   {? ~_a || FUN.info(_msg) ?};
   __zknrea.REA:=__zknrea.ILP;
   __zknrea.put(1)
|? __zknrea.REA=0 & __zknrea.DOST & __zknrea.WDST
|| _wyn:=exec('zero_wdst','zamsiw_rea')
|| {? (__zknrea.REA+__zknrea.PLUS)<>__zknrea.RES
   || _wgdst:=__zknrea.NAD<=0 & __zknrea.DOST;
      _dost:={? _wgdst
             || exec('FindAndGet','#table',ZK_RP,__zknrea.REF,,"SC",'')
             || ''
             ?};
      _magi:={? _wgdst
             || exec('FindAndGet','#table',ZK_RP,__zknrea.REF,,"MG",null())
             || null()
             ?};
      _zk_p:=exec('FindAndGet','#table',ZK_RP,__zknrea.REF,,"P");
      _uslw:=exec('FindAndGet','#table',ZK_P,_zk_p,,"RODZ='W' & M().RODZ='U'");
      _rez:={? __zknrea.NAD>0
            || __zknrea.REZ-__zknrea.PLUS
            ||
::               exec('ilrBezPlusZK_P','zamsiw_rea',_zk_p,__refrea);
               {? _uslw
               || __zknrea.ILZ
               || exec('FindAndGet','#table',ZK_RP,__zknrea.REF,,"REZ().ILR",0)
               ?}
            ?};
      _res:=__zknrea.RES;
      {? __zknrea.RES<=_rez
      || __zknrea.REA:=__zknrea.RES;
         {? __zknrea.PLUS>0
         || exec('UpDownPoz','zamsiw_rea',_zk_p,__zknrea.PLUS,0,_dost,,_magi);
            __zknrea.PLUS:=0
         ?}
      |? __zknrea.RES>_rez
      || __zknrea.REA:=_rez;
         exec('UpDownPoz','zamsiw_rea',_zk_p,__zknrea.PLUS,__zknrea.RES-_rez,_dost,,_magi);
         __zknrea.PLUS:=exec('ilrPlusZK_P','zamsiw_rea',_zk_p,__refrea,_dost)
      ?};
      __zknrea.RES:=__zknrea.REA+__zknrea.PLUS;
      {? _res<>__zknrea.RES
      || {? ~_uslw
         || FUN.info('Brak podanej ilości do realizacji: %1 %2.\n'
                     'Zmieniono na aktualnie maksymalną ilość dostępną: %3 %2.'@[$_res,__zknrea.JM1,$__zknrea.RES])
         || FUN.info('Podana ilość: %1 %2 dotyczy pozycji na usługę.\n'
                     'Zmieniono na aktualną ilość pozostałą do realizacji: %3 %2.'@[$_res,__zknrea.JM1,$__zknrea.RES])
         ?}
      ?}
   ?};
   ZK_RP.cntx_psh();
   ZK_RP.prefix();
   {? ZK_RP.seek(__zknrea.REF)
   || {? ZK_RP.M().RODZ='U'
      || ZK_RP.ILR:=__zknrea.REA;
         {? ZK_RP.ILR>0 || ZK_RP.W:='*' || ZK_RP.W:='' ?};
         _wyn:=ZK_RP.put(1)
      |? ZK_RP.SC='' | __zknrea.NAD=1
      || {? __zknrea.NAD<0
         || _zkp:=ZK_RP.P;
            _iler:=__zknrea.REA  $ exec('jaka_dok_m','jm',ZK_RP.M);

            _wgmag:=exec('mgdlapoz','zamsiw_rea');

            ZK_RP.cntx_psh();
            _wgmag.clear();
            {? _wgmag.first()
            || {!
               |? ZK_RP.clear();
                  {? ZK_RP.seek(_wgmag.ZKR)
                  || _last:=ZK_RP.ILR;
                     {? ~_iler
                     || _last:=ZK_RP.ILR;
                        ZK_RP.W:='';
                        ZK_RP.ILR:=0;
                        {? ~_a
                        || _wyn:=exec('pop_real','zamsiw_rea',_last,__zknrea.ref())
                        || _msg:=exec('pop_real','zamsiw_rea',_last,__zknrea.ref(),1);
                           _wyn:=_msg=''
                        ?};
                        {? ~_wyn
                        || ZK_RP.ILR:=_last;
                           ZK_RP.put(1)
                        ?}
                     |? ZK_RP.REZ().ILR>=_iler
                     || _last:=ZK_RP.ILR;
                        ZK_RP.ILR:=_iler;
                        ZK_RP.W:='*';
                        ZK_RP.put(1);
                        {? ~_a
                        || _wyn:=exec('pop_real','zamsiw_rea',_last,__zknrea.ref())
                        || _msg:=exec('pop_real','zamsiw_rea',_last,__zknrea.ref(),1);
                           _wyn:=_msg=''
                        ?};
                        {? ~_wyn
                        || ZK_RP.ILR:=_last;
                           ZK_RP.put(1)
                        || _iler:=0
                        ?};
                        _iler:=0
                     |? ZK_RP.REZ().ILR>0
                     || _last:=ZK_RP.ILR;
                        ZK_RP.ILR:=ZK_RP.REZ().ILR;
                        ZK_RP.W:='*';
                        ZK_RP.put(1);
                        {? ~_a
                        || _wyn:=exec('pop_real','zamsiw_rea',_last,__zknrea.ref())
                        || _msg:=exec('pop_real','zamsiw_rea',_last,__zknrea.ref(),1);
                           _wyn:=_msg=''
                        ?};
                        {? ~_wyn
                        || ZK_RP.ILR:=_last;
                           ZK_RP.put(1)
                        || _iler-=ZK_RP.ILR
                        ?}
                     ?}
                  ?};
                  _wgmag.next()
               !}
            ?};
            ZK_RP.cntx_pop();
            obj_del(_wgmag)
         || _last:=ZK_RP.ILR;
            {? __zknrea.NAD<>1
            || ZK_RP.ILR:=__zknrea.REA $ exec('jaka_dok_m','jm',ZK_RP.M);
               ZK_RP.put(1)
            || _last:=__zknrea.RES
            ?};
            {? ~_a
            || _wyn:=exec('pop_real','zamsiw_rea',_last,__zknrea.ref())
            || _msg:=exec('pop_real','zamsiw_rea',_last,__zknrea.ref(),1);
               _wyn:=_msg=''
            ?};
            {? ~_wyn
            || ZK_RP.ILR:=__zknrea.REA:=_last;
               ZK_RP.put(1)
            |? _wyn & __zknrea.NAD=1
            || __zknrea.REA:=_last
            ?}
         ?}
      || _wyn:=1;
         _iler:=__zknrea.REA  $ exec('jaka_dok_m','jm',ZK_RP.M);
         ZK_RP.ILR:=_iler;
         ZK_RP.put(1)
      ?}
   ?};
   ZK_RP.cntx_pop();
   {? __zknrea.REA>0 || __zknrea.WYB:='*' || __zknrea.WYB:='' ?};
   __zknrea.put(1)
?};
{? _wyn & var_pres('__popres')>0 || __popres:=0 ?};
{? ~_a || _wyn || _msg ?}


\mgdlapoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: ustawia ZK_RP wg magazynow
::   WY: lista refow ZK_RP wg porzadku magazynow
::  OLD: \mgdlapoz/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=tab_tmp(1,'NRK','INTEGER','','ZKR','STRING[16]','');
_zkp:=ZK_RP.P;
USERS.cntx_psh();
_us:=ZK_RP.P().N().US;
{? ZK_RP.P().RODZ='Z'
|| _typupr:={? exec('jakieupr','zamsiw_wspolne',0,_us) || 2 || 4 ?}
|| _typupr:={? exec('jakieupr','zamsiw_wspolne',1,_us) || 9 || 10 ?}
?};
ZK_RP.cntx_psh();
ZK_RP.index('ZK_P');
ZK_RP.prefix(__refrea,_zkp);
{? ZK_RP.first()
|| {!
   |? {? ZK_RP.REZ().SC='' & ZK_RP.MG<>null
      || _nrk:=0;
         __kolmag.clear();
         __kolmag.prefix($__zknrea.ref(),$ZK_RP.MG);
         {? __kolmag.first()
         || _nrk:=__kolmag.NRK
         || BUFMG.index('US');
            BUFMG.prefix(_us,_typupr,ZK_RP.MG);
            {? BUFMG.first() || _nrk:=BUFMG.NRK ?}
         ?};
         _wyn.blank();
         _wyn.NRK:=_nrk;
         _wyn.ZKR:=$ZK_RP.ref();
         _wyn.add(1)
      ?};
      ZK_RP.next()
   !}
?};
ZK_RP.cntx_pop();
USERS.cntx_pop();
_wyn


\pop_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: umozliwia zmiane ilosci do realizacji dla tabeli ZK_RP
::   WE: _a - poprzednia ilosc
::       _b - ref __zknrea
::       [_c] - 1-indformacja dla podzialu 0-brak
::   WY: _wyn czy podana ilosc jest ok
::  OLD: \pop_real/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};

_wyn:=0;
_msg:='';

__zknrea.cntx_psh();
ZK_RP.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();

_iledost:={? __zknrea.NAD<>1 || _a || 0 ?};
{? ZK_RP.P().RMAG<>null
|| __stnmat.clear;
   __stnmat.prefix($ZK_RP.P().M,{? ZK_RP.MG<>ZK_RP.P().RMAG || $ZK_RP.MG || $ZK_RP.P().RMAG ?})
|| __stnmat.clear;
   __stnmat.prefix($ZK_RP.P().M)
?};
{? __stnmat.first()
|| {!
   |? _iledost+=__stnmat.ILE-__stnmat.ILR;
      __stnmat.next()
   !}
?};
{? __zknrea.NAD<>1
|| {? ZK_RP.ILR>_a || exec('changeREZ','zamsiw_rea',{? ZK_RP.REZ<>null() || 1 || 2 ?}) ?};
   ZK_RP.get();
   {? ZK_RP.REZ<>null() & ZK_RP.REZ().ILR>__zknrea.REZ || __zknrea.REZ:=ZK_RP.REZ().ILR; __zknrea.put(1) ?};
   {? ZK_RP.REZ().ILR<=_iledost | _iledost<=ZK_RP.REZ().ILR || _iledost:=ZK_RP.REZ().ILR ?}
?};
{? ZK_RP.ILR<0
|| _msg:='Ilość do realizacji nie może być liczbą ujemną.';
   {? ~_c || FUN.info(_msg) ?}
|? __zknrea.NAD<>1
||

   {? ZK_RP.ILR<=_iledost
   || {? ZK_RP.ILR>0 || ZK_RP.W:='*' || ZK_RP.W:='' ?};
      ZK_RP.put(1);
      exec('upstnmat','zamsiw_rea',ZK_RP.P,2,ZK_RP.ILR-_a);
      __zknrea.clear();
      {? __zknrea.seek(_b) & __zknrea.REZ<ZK_RP.ILR
      || exec('przestmg','zamsiw_rea',__zknrea.ref(),ZK_RP.P().M().KTM,ZK_RP.ILR-__zknrea.REZ)
      ?};
      _wyn:=1
   || _msg:='Zbyt duża ilość do realizacji.';
      {? ~_c || FUN.info(_msg) ?}
   ?}
|| _ileold:=0;
   _ilepop:=__zknrea.RES;
   _ilerez:=0;
   _refzam:=__zknrea.ref();
   _refrea:=__zknrea.REF;
   _refzkr:=null();
   __zknrea.clear();
   __zknrea.prefix(_refzam);
   {? __zknrea.first()
   || {!
      |? _iledost+=__zknrea.RES;
         {? __zknrea.REF=_refrea & ~__zknrea.DOST || _refzkr:=__zknrea.ref() ?};
         ZK_RP.prefix();
         {? ZK_RP.seek(__zknrea.REF)
         || _ileold+=ZK_RP.ILR;
            _ilerez+=ZK_RP.REZ().ILR
         ?};
         __zknrea.next()
      !};
      {? _ilepop<=_iledost
      || {? _ileold>_ilepop
         ||
::          zmniejszamy
            _zmien:=_ileold-_ilepop;
::          najpierw na rekordach bez dostawy
            __zknrea.clear();
            {? _refzkr<>null() & __zknrea.seek(_refzkr)
            || ZK_RP.prefix();
               {? ZK_RP.seek(__zknrea.REF)
               || {? ZK_RP.ILR>=_zmien
                  || ZK_RP.ILR-=_zmien;
                     _zmien:=0;
                     {? ZK_RP.ILR>0 || ZK_RP.W:='*' || ZK_RP.W:='' ?};
                     ZK_RP.put(1);
                     __zknrea.REA:=__zknrea.RES:=ZK_RP.ILR;
                     __zknrea.put(1);
                     exec('upstnmat','zamsiw_rea',ZK_RP.P,2,ZK_RP.ILR-ZK_RP.REZ().ILR);
                     __zknrea.clear();
                     {? __zknrea.seek(_b) & __zknrea.REZ<ZK_RP.ILR
                     || exec('przestmg','zamsiw_rea',__zknrea.ref(),ZK_RP.P().M().KTM,ZK_RP.ILR-__zknrea.REZ)
                     ?};
                     _wyn:=1
                  || _zmien-=ZK_RP.ILR;
                     ZK_RP.ILR:=0;
                     {? ZK_RP.ILR>0 || ZK_RP.W:='*' || ZK_RP.W:='' ?};
                     ZK_RP.put(1);
                     __zknrea.REA:=__zknrea.RES:=ZK_RP.ILR;
                     __zknrea.put(1);
                     exec('upstnmat','zamsiw_rea',ZK_RP.P,2,ZK_RP.ILR-ZK_RP.REZ().ILR);
                     __zknrea.clear();
                     {? __zknrea.seek(_b) & __zknrea.REZ<ZK_RP.ILR
                     || exec('przestmg','zamsiw_rea',__zknrea.ref(),ZK_RP.P().M().KTM,ZK_RP.ILR-__zknrea.REZ)
                     ?};
                     _wyn:=1
                  ?}
               ?}
            ?};
::          teraz na wszystkich pozostałych
            _order:=_refzkr<>null();
            {? _zmien>0
            || __zknrea.clear();
               __zknrea.prefix(_refzam);
               {? __zknrea.last()
               || {!
                  |? {? __zknrea.ref()<>_refzkr
                     || __zknrea.cntx_psh();
                        ZK_RP.prefix();
                        {? ZK_RP.seek(__zknrea.REF)
                        || {? ZK_RP.ILR>=_zmien
                           || ZK_RP.ILR-=_zmien;
                              _zmien:=0;
                              {? ZK_RP.ILR>0 || ZK_RP.W:='*' || ZK_RP.W:='' ?};
                              ZK_RP.put(1);
                              __zknrea.REA:=__zknrea.RES:=ZK_RP.ILR;
                              __zknrea.put(1);
                              exec('upstnmat','zamsiw_rea',ZK_RP.P,2,ZK_RP.ILR-ZK_RP.REZ().ILR);
                              __zknrea.clear();
                              {? __zknrea.seek(_b) & __zknrea.REZ<ZK_RP.ILR
                              || exec('przestmg','zamsiw_rea',__zknrea.ref(),ZK_RP.P().M().KTM,ZK_RP.ILR-__zknrea.REZ)
                              ?};
                              _wyn:=1
                           || _zmien-=ZK_RP.ILR;
                              ZK_RP.ILR:=0;
                              {? ZK_RP.ILR>0 || ZK_RP.W:='*' || ZK_RP.W:='' ?};
                              ZK_RP.put(1);
                              __zknrea.REA:=__zknrea.RES:=ZK_RP.ILR;
                              __zknrea.put(1);
                              exec('upstnmat','zamsiw_rea',ZK_RP.P,2,ZK_RP.ILR-ZK_RP.REZ().ILR);
                              __zknrea.clear();
                              {? __zknrea.seek(_b) & __zknrea.REZ<ZK_RP.ILR
                              || exec('przestmg','zamsiw_rea',__zknrea.ref(),ZK_RP.P().M().KTM,ZK_RP.ILR-__zknrea.REZ)
                              ?};
                              _wyn:=1
                           ?}
                        ?};
                        __zknrea.cntx_pop()
                     ?};
                     _zmien>0 & __zknrea.prev()
                  !}
               ?}
            ?}
         |? _ilepop>_ileold
         ||
::          zwiększamy kolejno po rekordach od pierwszego na liście
            _zmien:=_ilepop-_ileold;
            __zknrea.clear();
            __zknrea.prefix(_refzam);
            {? __zknrea.first()
            || {!
               |? __zknrea.cntx_psh();
                  ZK_RP.prefix();
                  {? ZK_RP.seek(__zknrea.REF)
                  || _dost:=ZK_RP.REZ().ILR-ZK_RP.ILR;
                     {? _dost>=_zmien
                     || ZK_RP.ILR+=_zmien;
                        _zmien:=0;
                        {? ZK_RP.ILR>0 || ZK_RP.W:='*' || ZK_RP.W:='' ?};
                        ZK_RP.put(1);
                        __zknrea.REA:=__zknrea.RES:=ZK_RP.ILR;
                        __zknrea.put(1);
                        exec('upstnmat','zamsiw_rea',ZK_RP.P,2,ZK_RP.ILR-ZK_RP.REZ().ILR);
                        __zknrea.clear();
                        {? __zknrea.seek(_b) & __zknrea.REZ<ZK_RP.ILR
                        || exec('przestmg','zamsiw_rea',__zknrea.ref(),ZK_RP.P().M().KTM,ZK_RP.ILR-__zknrea.REZ)
                        ?};
                        _wyn:=1
                     || _zmien-=_dost;
                        ZK_RP.ILR+=_dost;
                        {? ZK_RP.ILR>0 || ZK_RP.W:='*' || ZK_RP.W:='' ?};
                        ZK_RP.put(1);
                        __zknrea.REA:=__zknrea.RES:=ZK_RP.ILR;
                        __zknrea.put(1);
                        exec('upstnmat','zamsiw_rea',ZK_RP.P,2,ZK_RP.ILR-ZK_RP.REZ().ILR);
                        __zknrea.clear();
                        {? __zknrea.seek(_b) & __zknrea.REZ<ZK_RP.ILR
                        || exec('przestmg','zamsiw_rea',__zknrea.ref(),ZK_RP.P().M().KTM,ZK_RP.ILR-__zknrea.REZ)
                        ?};
                        _wyn:=1
                     ?}
                  ?};
                  __zknrea.cntx_pop();
                  _zmien>0 & __zknrea.next()
               !}
            ?}

         ?}
      || _msg:='Zbyt duża ilość do realizacji.';
         {? ~_c || FUN.info(_msg) ?}
      ?}
   ?}
?};

__zknrea.cntx_pop();
ZK_RP.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();
{? ~_c || _wyn || _msg ?}


\upstnmat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: robi update dla pola __stnmat.ILR
::   WE: _a - ref ZK_P
::       _b - 0-wyzerowanie 1-wypelnienie 2-ilosc do zmiany
::       [_c] - ilosc do zmiany
::  OLD: \upstnmat/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};

_ildo:=_c;
__zknrea.cntx_psh();
ZK_RP.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();

REZ.index('ZK_P');
REZ.prefix(ZK_RP.P,'B');
{? REZ.first()
|| {!
   |? __stnmat.clear();
      {? __stnmat.find_key($REZ.M,$REZ.MG)
      || {? _b<2
         || __stnmat.ILR+={? _b || REZ.ILR || -REZ.ILR ?};
            __stnmat.put(1)
         |? _ildo>0
         || _rezer:=__stnmat.ILE-__stnmat.ILR;
            {? _rezer>=_ildo
            || __stnmat.ILR+=_ildo;
               __stnmat.put(1);
               _ildo:=0
            |? _rezer>0
            || __stnmat.ILR:=_rezer;
               __stnmat.put(1);
               _ildo-=_rezer
            ?}
         |? _ildo<0
         || _rezer:=__stnmat.ILR;
            {? _rezer>=(-_ildo)
            || __stnmat.ILR+=_ildo;
               __stnmat.put(1);
               _ildo:=0
            |? _rezer>0
            || __stnmat.ILR:=0;
               __stnmat.put(1);
               _ildo+=_rezer
            ?}
         ?}
      ?};
      {? _b<2 || REZ.next() || _ildo<>0 & REZ.next() ?}
   !}
?};

__zknrea.cntx_pop();
ZK_RP.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();
~~


\przestmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przepisuje rezerwacje z jednej pozycji na druga
::       przepisuje tylko ilosci w danej chwili nie rezerwowane
::   WE: _a - ref realizacji
::       _b - M - KTM
::       _c - ilosc do przepisania
::  OLD: \przestmg/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_ileroz:=_c;
_refzkp:=null;
__zknrea.cntx_psh();
ZK_RP.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
__zknrea.clear();
{? __zknrea.seek(_a) & (ZK_RP.prefix(); ZK_RP.seek(__zknrea.REF))
|| _refzkp:=ZK_RP.P;
   _refzkrp:=ZK_RP.ref()
?};
{? _refzkp<>null & __zknrea.first()
|| {!
   |? {? __zknrea.TREE<>0 & __zknrea.ref()<>_a & __zknrea.KTM=_b
       & (ZK_RP.prefix(); ZK_RP.seek(__zknrea.REF))
      || _wolne:=__zknrea.REZ-__zknrea.REA;
         {? _wolne>0
         || REZ.index('ZK_P');
            REZ.prefix(ZK_RP.P,'B');
            {? REZ.first()
            || {!
               |? _ilerez:={? REZ.ILR<_wolne || REZ.ILR || _wolne ?};
                  _wolne-=_ilerez;
                  {? _ilerez>0 & _ilerez=REZ.ILR & _ilerez<=_ileroz
                  || _ref:=REZ.ref();
                     REZ.cntx_psh();
                     REZ.clear();
                     {? REZ.seek(_ref)
                     || REZ.ZK_P:=_refzkp;
                        {? REZ.put(1)
                        || ZK_RP.cntx_psh();
                           ZK_RP.clear();
                           {? ZK_RP.seek(_refzkrp)
                           || ZK_RP.REZ:=REZ.ref();
                              ZK_RP.put(1)
                           ?};
                           ZK_RP.cntx_pop();
                           _ileroz-=_ilerez
                        ?}
                     ?};
                     REZ.cntx_pop()
                  |? _ilerez>0
                  || REZ.ILR-=_ileroz;
                     REZ.put(1);
                     REZ.cntx_psh();
                     REZ.clear;
                     REZ.ZK_P:=_refzkp;
                     REZ.ILR:=_ileroz;
                     {? REZ.add(1)
                     || ZK_RP.cntx_psh();
                        ZK_RP.clear();
                        {? ZK_RP.seek(_refzkrp)
                        || ZK_RP.REZ:=REZ.ref();
                           ZK_RP.put(1)
                        ?};
                        ZK_RP.cntx_pop();
                        _ileroz:=0
                     ?};
                     REZ.cntx_pop()
                  ?};
                  _ileroz>0 & _wolne>0 & REZ.next()
               !}
            ?}
         ?}
      ?};
      __zknrea.next()
   !}
?};

__zknrea.cntx_pop();
ZK_RP.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();

~~


\zatw_wyb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: zatwierdza wybor wg zaznaczonych rekordow
::   WE: _a - tryb działania 0-zerowanie 1-wypełnienie
::   WY: dokonuje inwersji wyboru
::  OLD: \zatw_wyb/zk.fml
::----------------------------------------------------------------------------------------------------------------------
:: pobiera tabelkę zaznaczen;
_tab:=__zknrea.sel_aget();  __zknrea.sel_adel();
_nag:=sql('select distinct :_a.TREE TREE, 0 BYL from :_a order by 1',__zknrea);
__zknrea.cntx_psh();
ZK_RP.cntx_psh();
{? _tab.size()
||
:: sa jakies zaznaczone rekordy
   {? _tab.first()
   || {!
      |? {? (__zknrea.prefix(); __zknrea.seek(_tab.REF,__zknrea.name()))
         || {? __zknrea.TREE<>0 & __zknrea.NAD<>1 & (ZK_RP.prefix(); ZK_RP.seek(__zknrea.REF))
              & _nag.find_key(__zknrea.TREE) & ~_nag.BYL
            || exec('wyb_real','zamsiw_rea',,_a)
            |? __zknrea.NAD>0 & _nag.find_key(__zknrea.TREE) & ~_nag.BYL
            || _refzam:=#__zknrea.ref();
               {? _nag.find_key(_refzam) || _nag.BYL:=1; _nag.put(1) ?};
               __zknrea.prefix(_refzam);
               {? __zknrea.first()
               || {!
                  |? {? (ZK_RP.prefix(); ZK_RP.seek(__zknrea.REF))
                     || exec('wyb_real','zamsiw_rea',,_a)
                     ?};
                     __zknrea.next()
                  !}
               ?}
            |? __zknrea.TREE=0
            || _refzam:=#__zknrea.ref();
               {? _nag.find_key(_refzam) || _nag.BYL:=1; _nag.put(1) ?};
               __zknrea.prefix(_refzam);
               {? __zknrea.first()
               || {!
                  |? {? (ZK_RP.prefix(); ZK_RP.seek(__zknrea.REF))
                     || exec('wyb_real','zamsiw_rea',,_a)
                     ?};
                     __zknrea.next()
                  !}
               ?}
            || ''
            ?}
         ?};
         _tab.next()
      !}
   ?}
||
:: biezacy rekord
   {? __zknrea.TREE<>0 & __zknrea.NAD<>1 & (ZK_RP.prefix(); ZK_RP.seek(__zknrea.REF))
   || exec('wyb_real','zamsiw_rea',,_a)
   || _refzam:=#__zknrea.ref();
      __zknrea.prefix(_refzam);
      {? __zknrea.first()
      || {!
         |? {? (ZK_RP.prefix(); ZK_RP.seek(__zknrea.REF)) || exec('wyb_real','zamsiw_rea',,_a) ?};
            __zknrea.next()
         !}
      ?}
   ?}
?};
:: odswiezenie sum
__zknrea.clear();
{? __zknrea.first()
|| {!
   |? exec('zrea_kol','zamsiw_rea');
      __zknrea.next()
   !}
?};
__zknrea.cntx_pop();
ZK_RP.cntx_pop();
1


\wyb_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: zaznacza pozycje dla tabeli ZK_RP
::   WE: [_a] - ref SQL REZ
::       [_b] - tryb wyboru 0-zerowanie 1-wypełnienie -1-inwersja
::       [_c] - 1-wg transportu 0(domyślnie)-nie
::   WY: zwraca czy udalo sie zapisac zmiane
::  OLD: \wyb_real/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=-1 ?} || _b:=-1 ?};
_wg_nzl:={? var_pres('_c')=type_of(0) || _c || 0 ?};

_wyn:=0;
:: [rr] - dodalem mozliwosc zaznaczenia wiekszej ilosci rekordow

_typ:=0;
_wdst:=0;
{? _typ
|| ZK_RP.cntx_psh();
   {? ZK_RP.first()
   || {!
      |? exec('plus_min','zamsiw_rea',,_b,_wg_nzl);
         ZK_RP.next()
      !}
   ?};
   ZK_RP.cntx_pop()
|| _wdst:=__zknrea.REA>0 & __zknrea.DOST & __zknrea.WDST;
   exec('plus_min','zamsiw_rea',_a,_b,_wg_nzl);
   {? _wdst || __zknrea.get() ?}
?};
{? ~_b & ~_wdst || __zknrea.PLUS:=0; __zknrea.RES:=__zknrea.REA+__zknrea.PLUS; __zknrea.put(1) ?};
1


\plus_min
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zakresla wybor lub nie
::   WE: [_a] -ref SQL REZ
::       [_b] -0-zerowanie 1-wypełnianie -1(domyślnie)-inwersja
::       [_c] - 1-wg transportu 0(domyślnie)-nie
::  OLD: \plus_min/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=-1 ?} || _b:=-1 ?};
_wg_nzl:={? var_pres('_c')=type_of(0) || _c || 0 ?};

_wyb:=0;
_wyn:=0;
_ilr:=ZK_RP.ILR;
_wdst:=0;
{? __zknrea.REA>0 & __zknrea.DOST & __zknrea.WDST
|| _wdst:=1;
   _wyn:=exec('zero_wdst','zamsiw_rea')
|? __zknrea.NAD<0
|| _zkp:=ZK_RP.P;
   ZK_RP.cntx_psh();
   ZK_RP.index('ZK_P');
   ZK_RP.prefix(__refrea,_zkp);
   {? ZK_RP.first()
   || {!
      |? _wyb:={? _a<>'' || $ZK_RP.REZ=_a || 1 ?} & ZK_RP.W='*';
         ~_wyb & ZK_RP.next()
      !}
   ?};
   {? _wyb
   || ZK_RP.index('ZK_P');
      ZK_RP.prefix(__refrea,_zkp);
      {? ZK_RP.first()
      || {!
         |? {? ZK_RP.P().M().RODZ='U'
            || ZK_RP.W:='*';
               ZK_RP.ILR:=ZK_RP.P().ILP;
               _wyn:=ZK_RP.put(1)
            |? _b<1 & {? _a<>'' || $ZK_RP.REZ=_a || 1 ?}
            || ZK_RP.W:='';
               ZK_RP.ILR:=0;
               _wyn:=ZK_RP.put(1);
               _ilr:=exec('ilrPlusZK_P','zamsiw_rea',_zkp,__refrea,ZK_RP.REZ().SC);
               exec('UpDownPoz','zamsiw_rea',_zkp,_ilr,0,ZK_RP.REZ().SC)
            ?};
            ZK_RP.next()
         !}
      ?}
   || ZK_RP.index('ZK_P');
      ZK_RP.prefix(__refrea,_zkp);
      {? ZK_RP.first()
      || {!
         |? {? ZK_RP.P().M().RODZ='U'
            || ZK_RP.W:='*';
               ZK_RP.ILR:=ZK_RP.P().ILP;
               _wyn:=ZK_RP.put(1)
            |? _b & {? _a<>'' || $ZK_RP.REZ=_a || 1 ?}
            || ZK_RP.W:='*';
               ZK_RP.ILR:=ZK_RP.REZ().ILR;
               _wyn:=ZK_RP.put(1);
               _ilr:=exec('ilrPlusZK_P','zamsiw_rea',_zkp,__refrea,ZK_RP.REZ().SC);
               exec('UpDownPoz','zamsiw_rea',_zkp,_ilr,0,ZK_RP.REZ().SC)
            ?};
            ZK_RP.next()
         !}
      ?}
   ?};
   ZK_RP.cntx_pop()
|? _b<1 & ZK_RP.W='*'
|| ZK_RP.W:='';
   ZK_RP.ILR:=0;
   _wyn:=ZK_RP.put(1);
   {? ZK_RP.REZ=null()
   || exec('changeREZ','zamsiw_rea',0);
      ZK_RP.get();
      {? ZK_RP.REZ<>null
      || ZK_RP.ILR:={? ZK_RP.REZ().ILR<=__zknrea.ILP || ZK_RP.REZ().ILR || __zknrea.ILP ?}
      ?};
      {? ZK_RP.ILR>0 || ZK_RP.W:='*' ?};
      _wyn:=ZK_RP.put(1)
   ?};
   _ilr:=exec('ilrPlusZK_P','zamsiw_rea',ZK_RP.P,__refrea,ZK_RP.REZ().SC);
   exec('UpDownPoz','zamsiw_rea',ZK_RP.P,_ilr,0,ZK_RP.REZ().SC);
   _wyb:=1
|? _b
|| {? _wg_nzl
   || 1
   |? ZK_RP.P().M().RODZ='T'
   || {? ZK_RP.REZ<>null
      || {? ZK_RP.SC<>''
         || ZK_RP.ILR:=ZK_RP.REZ().ILR
         || {? ZK_RP.REZ().ILR<__zknrea.REZ || exec('changeREZ','zamsiw_rea',1) ?};
            ZK_RP.ILR:=exec('oblzkrez','zamsiw_wspolne',ZK_RP.P,'',1)
                      -exec('ilrPlusZK_P','zamsiw_rea',ZK_RP.P,__refrea,ZK_RP.REZ().SC)
         ?}
      || exec('changeREZ','zamsiw_rea',0);
         ZK_RP.get();
         {? ZK_RP.REZ<>null
         || ZK_RP.ILR:={? ZK_RP.REZ().ILR<=__zknrea.REZ || ZK_RP.REZ().ILR || __zknrea.REZ ?}
         ?}
      ?}
   || ZK_RP.ILR:=ZK_RP.P().ILP
   ?};
   {? ZK_RP.ILR>0 || ZK_RP.W:='*' ?};
   _wyn:=ZK_RP.put(1)
?};
{? ~_wdst || exec('upstnmat','zamsiw_rea',ZK_RP.P,~_wyb) ?};
_wyn


\rea_plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wyswietlenie planu dla zamówienia z poziomu jego realizacji
::  OLD: \rea_plan/zk.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh();
ZK_N.clear();
{? ZK_N.seek(__zknrea.ZKN,ZK_N.name()) || exec('zam_plan','zamsiw_rea') ?};
ZK_N.cntx_pop();
~~


\zam_plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: wyswietla plan realizacji danego zamowienia
::   WE: [_a] czy wyswietlac select (1 - nie oraz nie usuwa obiektu - uzywane w zkzam_02.rpm)
::  OLD: \zam_plan/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
rsql:=$ZK_N.ref();
_wew:=ZK_N.T().R='W';

ZK_N.cntx_psh();
{? _>=1  || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

VAR_DEL.delete('XPLAN','__winpln');
PX_VAR.VER_QUE:=null();
PX_VAR.VIE_VER:=null();

XPLAN:=tab_tmp(6,'TREE','TREE_REF',''
        ,'KTM','STRING[160]','Ktm'
        ,'CEN','REAL','Cena'
        ,'DT','DATE','Data'
        ,'STA','STRING[20]','Stan'
        ,'DKC','STRING[255]',''
        ,'ILE','REAL','Ilość'
        ,'WYS','INTEGER','Wyświetlić'
        ,'POZ','INTEGER','Pozycja'
        ,'ROZ','STRING[10]','Rozwinięcie'
        ,'LP','INTEGER','Lp'
        ,'KTM2','STRING[50]','KTM'
        ,'ILB','REAL','');

XPLAN.clear();
{? XPLAN.first() || {! |? XPLAN.del() !} ?};

exec('wyp_plan','zamsiw_rea');

:: Funkcjonalność zastąpiona przez: Funkcje->Plan produkcji
::_prod:=exec('tte_lic','tte');
_prod:='N';

_acr_sel:=__winpln:=XPLAN.mk_sel('Plan zamówienia '@+ZK_N.SYM,'P',,'#zam_planacrsel',,,XPLAN.size()>1,1);
XPLAN.win_fld(_acr_sel,,'KTM',,,30,,1,'Indeks'@);
XPLAN.win_fld(_acr_sel,,'DKC',,,18,,1,'Cecha'@);
XPLAN.win_fld(_acr_sel,,'STA',,,12,,1,'Stan'@);
XPLAN.win_fld(_acr_sel,,'ILE',,,10,3,1,'OK'@);
XPLAN.win_fld(_acr_sel,,'ILB',,,10,3,1,'BRAK'@);
XPLAN.win_fld(_acr_sel,,'DT',,,10,,1,'Termin'@);
XPLAN.tr_fml(_acr_sel,,"{? _a || {? XPLAN.TREE=0 || 1 || _a ?} || _a ?}");
XPLAN.win_fml(_acr_sel,,'STA',,'ICON_BEFORE',"
         {? XPLAN.STA='OK'
         || 'xwin16.png:38'
         |? XPLAN.STA='BRAK'
         || 'xwin16.png:6'
         |? XPLAN.STA='KOMPLETACJA'
         || 'xwin16.png:18'
         |? XPLAN.STA='POZOSTAŁO'
         || 'xwin16.png:118'
         |? XPLAN.STA='USŁUGA'
         || 'xwin16.png:99'
         || ''
         ?}
     ");
XPLAN.win_act(_acr_sel,0,'Formuła','Zwiń/&rozwiń całość'@@,,'Zwijanie/rozwijanie całości'@,
          "exec('zwrw_all','#tree','XPLAN','TREE',__winpln)",,1,,,,'R');
XPLAN.win_act(_acr_sel,0,'Rekord',,,,"
      __strez.hdr_sel();__strez.hdr_sel(XPLAN.KTM);
      __stwdr.hdr_sel();__stwdr.hdr_sel(XPLAN.KTM);
      __stprd.hdr_sel();__stprd.hdr_sel(XPLAN.KTM);
      exec('rekprzed','color','PLN#01')
   ",,0);
{? _prod='T'
||
   _before:="
      {? exec('kont_real_pres','px_kont')
      || exec('zkp_simulation','px_logix');
         _px_obj:=\"exec('obj_find_zkn','px_obj',ZK_N.ref())\";
         __pplan.load(_px_obj,1)
      || FUN.emsg('Zasoby do planu produkcji nie zostały skonfigurowane.'@)
      ?}
   ";
   XPLAN.win_act(_acr_sel,0,'Formuła','&Symulacja planu'@@,,
      'Przedstawia możliwości wykonania na podstawie planu prod.'@,_before,,1,,,,'S');
   XPLAN.win_act(_acr_sel,1,'Formuła','&Symulacja planu'@@,,
      'Przedstawia możliwości wykonania na podstawie planu prod.'@,_before,,1,,,,'S')
?};
XPLAN.win_act(_acr_sel,0,'Formuła','&Legenda'@@,,'Opis znaczenia kolorów wierszy i ikon'@,
              "exec('legenda','color','PLN#01')",,0,,,,'L');

XPLAN.fld_fml('ILE','DISPLAY_FORMAT',"{? XPLAN.ILE<=0 || 'empty=1' || 'empty=0' ?}");
XPLAN.fld_fml('ILB','DISPLAY_FORMAT',"{? XPLAN.ILB<=0 || 'empty=1' || 'empty=0' ?}");

VAR_DEL.delete('__strez');
__strez:=tab_tmp(6,'KTM','STRING[50]','Ktm'
          ,'KT2','STRING[50]','Ktm'
          ,'MAG','STRING[10]','Magazyn'
          ,'TYP','STRING[15]','Typ rezerwacji'
          ,'SYM','STRING[20]','Symbol dokumentu'
          ,'POZ','INTEGER','Pozycja na dokumencie'
          ,'ILE','REAL','Ilość zarezerwowana'
          ,'SQL','STRING[16]','Ref SQL-owy pozycji');

_acr_se2:=__strez.mk_sel('Dla stanu BRAK aktualne rezerwacje materiału: '@,'T',0,'#zam_planacrse2',,,,,'U');
__strez.win_fld(_acr_se2,,'MAG',,,10,,1,'Magazyn'@);
__strez.win_fld(_acr_se2,,'TYP',,,20,,1,'Typ rezerwacji'@);
__strez.win_fld(_acr_se2,,'SYM',,,36,,1,'Symbol dokumentu'@);
__strez.win_fld(_acr_se2,,'POZ',,,,10,1,'Pozycja'@);
__strez.win_fld(_acr_se2,,'ILE',,,16,3,1,'Ilość'@);
__strez.win_sel(_acr_se2);

VAR_DEL.delete('INFZAM','__stwdr','__stprd');
INFZAM:=tab_tmp(4
   ,'TREE','TREE_REF',''
   ,'LP','INTEGER',''
   ,'NR','INTEGER',''
   ,'SZ','INTEGER',''
   ,'OP','STRING[255]',''
   ,'IL','REAL',''
   ,'REF','STRING[20]',''
   ,'ICO','STRING[16]',''
   ,'IL2','REAL',''
);
__stwdr:=tab_tmp(1
   ,'MAG','STRING[8]',''
   ,'OP','STRING[255]',''
   ,'IL','REAL',''
);
_acr_se3:=__stwdr.mk_sel('Ilość w drodze: '@,'T',,'#zam_planacrse3',,,,,'U');
__stwdr.win_fld(_acr_se3,,'MAG',,,8,,1,'Magazyn'@);
__stwdr.win_fld(_acr_se3,,'OP',,,40,,1,'Informacje'@);
__stwdr.win_fld(_acr_se3,,'IL',,,18,3,1,'Ilość w drodze'@);
__stwdr.win_sel(_acr_se3);

__stprd:=tab_tmp(1
   ,'MAG','STRING[8]',''
   ,'OP','STRING[255]',''
   ,'IL','REAL',''
);
_acr_se4:=__stprd.mk_sel('Ilość w produkcji: '@,'T',,'#zam_planacrse4',,,,,'U');
__stprd.win_fld(_acr_se4,,'MAG',,,8,,1,'Magazyn'@);
__stprd.win_fld(_acr_se4,,'OP',,,40,,1,'Informacje'@);
__stprd.win_fld(_acr_se4,,'IL',,,18,3,1,'Ilość w produkcji'@);
__stprd.win_sel(_acr_se4);

VAR_DEL.delete('__pplan');
{? _prod='T' & _a=0
|| __pplan:=exec('select_zkn','px_plan');
   _px_obj:="exec('obj_find_zkn','px_obj',ZK_N.ref())";
   {? exec('kont_real_pres','px_kont')
   ||
      PX_VIEW.cntx_psh();
      PX_VIEW.index('SYMBOL');
      PX_VIEW.clear();
      {? PX_VIEW.first()
      || __pplan.load(_px_obj,0)
      || _msg:='Nie zdefiniowano żadnych widoków planu.'@;
         _msg+='\nAby wyświetlić plan należy utworzyć przynajmniej jeden widok w: '@;
         _msg+='\nUstawienia i parametryzacja -> zakładka Parametryzacja'
               ' -> Plan produkcji -> Plan strategiczny -> Widoki planu strategicznego'@;
         FUN.emsg(_msg);
         obj_del(__pplan);
         __pplan:=obj_new('load');
         __pplan.load:="";
         _prod:='N';
         ~~
      ?};
      PX_VIEW.cntx_pop();
      ~~
   ?}
|| __pplan:=obj_new('load');
   __pplan.load:=""
?};

{? _prod='T'
|| _before:="

      __pplan.TAB.cntx_psh();
      __pplan.TAB.tr_set(1,__pplan.WER,1,0);
      __pplan.TAB.cntx_pop();
      _elements:=exec('elements_table_navi','px_plan',0);
::    Ustawiam widok w combobox
      _view:=PX_VAR.PX_VIEW;
      {? _view<>null()
      ||
         _view_sym:=exec('FindAndGet','#table',PX_VIEW,#_view,ref_name(_view),\"SYMBOL\",'');
         {? _view_sym<>''
         || exec('set_value_grp','#desktop','','nawigacja','27k699gc17f44e8i7e52imm1n5fc3',_view_sym,,_elements)
         ?}
      || exec('set_enabled_grp','#desktop','','nawigacja','27k699gc17f44e8i7e52imm1n5fc3',0,_elements)
      ?};
      exec('load','#desktop','nawigacja','xpl_navi.dsk',,,,,_elements);
      ~~
   "
|| _before:="~~"
?};
_acr_gpl:=XPLAN.grp_make({? ~_wew
                         || 'Plan zamówienia sprzedaży'
                         || 'Plan zamówienia wewnętrznego'
                         ?}
                         ,_before,'#zam_planacrgr'+(-_prod));
XPLAN.grp_sel(_acr_gpl,XPLAN,_acr_sel,,"
      exec('analbrak','zamsiw_rea',{? XPLAN.STA='BRAK' || XPLAN.KTM2 || '' ?},rsql);
      exec('il_wdr','zamsiw_rea')
   ",,,9,{? _prod='T' || "grp_disp(__pplan.TAB,__pplan.WER)" || "" ?},,,,'maximized_with_title');
XPLAN.grp_splt(_acr_gpl,,'horizontal','braki',18);
XPLAN.grp_sel(_acr_gpl,__strez,_acr_se2,'Dla stanu BRAK aktualne rezerwacje'@,,,,9,,,,,'maximized');
XPLAN.grp_sel(_acr_gpl,__stwdr,_acr_se3,'Ilość w drodze'@,,,,9,,,,,'maximized');
XPLAN.grp_sel(_acr_gpl,__stprd,_acr_se4,'Ilość w produkcji'@,,,,9,,,,,'maximized');

{? _prod='T' & _a=0
|| XPLAN.grp_splt(_acr_gpl,,'horizontal','produkcja');
   XPLAN.grp_sel(_acr_gpl,__pplan.TAB,__pplan.WER,,"exec('after_rfr_obj','px_plan',0)",,,9,,,,,'maximized_with_title');
   XPLAN.grp_splt(_acr_gpl,,'horizontal','nawigacja');
   exec('create','#desktop',XPLAN,'nawigacja',_acr_gpl,2);

   PX_VAR.IL_KOL:=exec('il_kol_wide','px_plan')
?};

XPLAN.win_sel(_acr_gpl);

_acr:=XPLAN.ndx_tmp('',0,'TREE',,0,'WYS',,0,'LP',,0,'POZ',,0,'STA',,1,'ROZ',,1,'KTM',,0);
XPLAN.index(_acr);
:: XPLAN.prefix(1);

{? _a =0 || XPLAN.select() ?};
XPLAN.ndx_drop(_acr);
{? _a=0 || VAR_DEL.delete('XPLAN','__winpln') ?};

{? exec('is_one_version','px_param')>0
||
:: Jeśli praca na jednej wersji i robilem symulację, to usuwam tą symulowaną wersję
   {? PX_VAR.VIE_VER<>null() & PX_VAR.VIE_VER().STATUS=exec('status_sim_zkp','px_ver')
   || {? exec('delete','px_ver',PX_VAR.VIE_VER,0)=0
      || FUN.emsg('Usunięcie symulacji planu zamówienia zakończone niepowodzeniem.'@)
      ?}
   ?}
?};
VAR_DEL.delete('PxSelect');
ZK_N.cntx_pop();
&rsql;
1


\zknrea_part
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [2011]
:: OPIS: Umożliwia częściową realizację zamówienia, dla ZK_N.LIM='T' - część zlecenia (przewodnika)
::  OLD: \zknrea_part/zk.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh(); ZL.cntx_psh();
ZK_N.clear();
ZK_N.seek(__zknrea.ZKN);

undefine();
_chk:="";
_dokl:=3;

:: zamówienie wewnętrzne jest zawsze do zlecenia prostego, więc sprawdzenie nie jest potrzebne
::{? ZK_N.ZL<>null()
::|| _rodzaj:=exec('top_rodzaj','zl_link',ZK_N.ZL);
::   {? (_rodzaj<>'' & _rodzaj<>'P') | (_rodzaj='' & ZK_N.ZL().RODZAJ<>'P')
::   || FUN.info('Funkcja niedostępna dla zlecenia złożonego.'@);
::      return(0)
::   ?}
::?};

:: Dla zamówienia limitowego sprawdzenie, czy załadowane pozycje dotyczą jednego przewodnika
__zknrea.cntx_psh();
{? (ZK_N.LIM='T' & ZK_N.ZL().IL>0)
||
   {? __zknrea.TREE=0
    | __zknrea.sel_size()>0
   || {? __zknrea.sel_size()>0
      || _tab:=__zknrea.sel_aget();
         _tab.first();
         {!
         |? _tab.CRC:=0;
            _tab.put();
            _tab.next()
         !}
      || _tab:=tab_tmp(1
            ,'REF','INTEGER','Ref'
            ,'CRC','INTEGER','Crc'
         );
         _tab.REF:=#__zknrea.ref();
         _tab.add()
      ?};
      __zknrea.cntx_psh();
      _tab.first();
      {!
      |? {? _tab.CRC=0
          & __zknrea.seek(_tab.REF,)
         || {? __zknrea.TREE<>0
            || ~~
            || __zknrea.prefix(#__zknrea.ref());
               {? __zknrea.first()
               || _tab.cntx_psh();
                  {!
                  |? {? ~_tab.find_key(#__zknrea.ref())
                     || _tab.REF:=#__zknrea.ref();
                        _tab.CRC:=0;
                        _tab.add(1)
                     ?};
                     __zknrea.next()
                  !};
                  _tab.cntx_pop()
               ?}
            ?};
            _tab.CRC:=1;
            _tab.put(1)
         ?};
         _tab.next()
      !};
      __zknrea.cntx_pop();
      _jeden_przewodnik:=1;
      {? _tab.first()
      || {? __zknrea.seek(_tab.REF,) || _zgh:=__zknrea.ZGH || _zgh:=0 ?};
         {!
         |? {? __zknrea.seek(_tab.REF,) & _zgh<>0 & _zgh<>__zknrea.ZGH || _jeden_przewodnik:=0 || _zgh:=__zknrea.ZGH ?};
            _jeden_przewodnik & _tab.next()
         !}
      ?};
      obj_del(_tab)
   || _zgh:=__zknrea.ZGH;
      _jeden_przewodnik:=1
   ?}
?};
__zknrea.cntx_pop();

:: --== Wybór sposobu zmiany ilości ==--
:: Stoimy na odpowiednim zamówieniu limitowym i jednym przewodniku - da się ustalić modyfikacje do ilości zleconej
{? (ZK_N.LIM='T' & ZK_N.ZL().IL>0 & _jeden_przewodnik)
||
   _jm:=ZK_N.ZL().KTM().J().KOD;
   _dokl:=ZK_N.ZL().KTM().DOKL;

   _part:=ZK_N.ZL().IL;

   _titl:='Ilość %1 produktu %2,'@[_jm,ZL.KTM().KTM];
   _name:='na którą ma zostać pobrany surowiec'@;
   _help:='Ilość %1 produktu, na którą zostaną wygenerowane pobrania.'@[_jm];
   {? exec('FindAndGet','#table',ZGH,_zgh,,"KIND",'')='T'
   || _nam2:='do zlecenia %1 na ilość %2'@
             [ZL.SYM,exec('FindAndGet','#table',ZGH,_zgh,,"$ILNPRZ",'')]
   || _nam2:='do przewodnika %1 na ilość %2'@
             [exec('FindAndGet','#table',ZGH,_zgh,,"NRPRZ",''),exec('FindAndGet','#table',ZGH,_zgh,,"$ILNPRZ",'')]
   ?};

:: Te teksty identyczne jak poniżej muszą być tutaj, żeby zadziałało tłumaczenie
   'Podana ilość jest większa niż zadana w zleceniu (%1).'@[''];
   'Podana ilość musi być większa od zera (%1).'@[''];

    _chk:=$("
            DEFINE.PART:=DEFINE.PART$"+form(_dokl,,,'99')+";
            {? DEFINE.PART>ZL.IL | DEFINE.PART<=0
            || _txt:={? DEFINE.PART>ZL.IL
                     || 'Podana ilość jest większa niż zadana w zleceniu (%1).'@[$ZL.IL]
                     || 'Podana ilość musi być większa od zera (%1).'@[$ZL.IL]
                     ?};
               FUN.emsg(_txt);
               DEFINE.PART:=ZL.IL;
               'PART'
            || 1
            ?}
          ");
   ~~

:: Stoimy na zamówieniu nielimitowym albo kilku przewodnikach - da się ustalić tylko zmianę procentową
||
   _jm:='';
   _dokl:=2;
   _part:=100;

   _titl:='';
   _name:='Procent do realizacji'@;
   _help:='Procent do realizacji z ilości zamówionej.'@;
   _nam2:='';

:: Te teksty identyczne jak poniżej muszą być tutaj, żeby zadziałało tłumaczenie
   'Podana wartość jest większa niż 100%%'@;
   'Podana wartość musi być większa od zera'@;

    _chk:="
           {? DEFINE.PART>100 | DEFINE.PART<=0
           || _txt:={? DEFINE.PART>100
                    || 'Podana wartość jest większa niż 100%%'@
                    || 'Podana wartość musi być większa od zera'@
                    ?};
              FUN.emsg(_txt);
              DEFINE.PART:=100;
              'PART'
           || 1
           ?}
         ";
   ~~
?};

{? _titl<>'' || define('H0',~~,_titl) ?};
define('PART',{? _dokl || 1.1 || 1 ?},_name,_help,14,10,_dokl);
define('H01',~~,_nam2);
{? (ZK_N.LIM='T' & ZK_N.ZL().IL>0 & _jeden_przewodnik)
|| _args:=exec('ilosc_dk_a','zl_common');
   _args.ZGH:=_zgh;
   _args.ZL:=ZK_N.ZL;
   _args.AKC:=1;
   _ilnprzdok:=
      (_args.RP:=1; exec('get_ilosc_dk','zl_common',_args))
      -(_args.RP:=0; _args.ZP:=1; exec('get_ilosc_dk','zl_common',_args));
   params_set(
      'IL',ZL.IL,
      'ILDOK',ZL.ILDOK,
      'DOKL',_dokl,
      'JM',_jm,
      'NRPRZ',exec('FindAndGet','#table',ZGH,_zgh,,"NRPRZ",''),
      'ILNPRZ',exec('FindAndGet','#table',ZGH,_zgh,,"ILNPRZ",0),
      'ILNPRZDOK',_ilnprzdok
   );
   _formula:="
      params_set(params_get());
      _args:=params_get();
      popup(0,'Sposób przeliczania'@
         ,'Zlecenie %1'@[ZL.SYM],,\"\"
         ,'Ilość zlecona: %1 %2'@[form(_args.IL,,_args.DOKL),_args.JM],
            ,\"_args:=params_get(); DEFINE.PART:=_args.IL\"
         ,'Ilość wykonana (zaraportowana): %1 %2'@[form(_args.ILDOK,,_args.DOKL),_args.JM],
            ,\"_args:=params_get(); DEFINE.PART:=_args.ILDOK\"
         ,'Ilość pozostała do wykonania: %1 %2'@[form(_args.IL-_args.ILDOK,,_args.DOKL),_args.JM],
            ,\"_args:=params_get(); DEFINE.PART:=_args.IL-_args.ILDOK\"
         ,'---',,
         ,'Przewodnik %1'@[_args.NRPRZ],,\"\"
         ,'Ilość na przewodniku: %1 %2'@[form(_args.ILNPRZ,,_args.DOKL),_args.JM],
            ,\"_args:=params_get(); DEFINE.PART:=_args.ILNPRZ\"
         ,'Ilość wykonana (zaraportowana): %1 %2'@[form(_args.ILNPRZDOK,,_args.DOKL),_args.JM],
            ,\"_args:=params_get(); DEFINE.PART:=_args.ILNPRZDOK\"
         ,'Ilość pozostała do wykonania: %1 %2'@[form(_args.ILNPRZ-_args.ILNPRZDOK,,_args.DOKL),_args.JM],
            ,\"_args:=params_get(); DEFINE.PART:=_args.ILNPRZ-_args.ILNPRZDOK\"
      );
      ''
   ";
   def_btn('text='+'&Przelicz'@,_formula)
?};
def_btn('text='+'&Zapisz'@,'key:F2');
def_btn('text='+'&Anuluj'@,'key:Esc');

DEFINE.PART:=_part;

{? def_edit(_chk,'Część realizacji'@)
|| _coef:=DEFINE.PART/_part;
   {? _coef>0
   ||
::    Funkcja przetwarzająca pojedynczy zapis
      _update:="
         _coef:=_a;
         _msg:='';
         ZK_RP.cntx_psh();
         ZK_RP.prefix();
         {? ZK_RP.seek(__zknrea.REF) & ZK_RP.P().M().RODZ='T'
         || __zknrea.RES:=ZK_RP.P().ILZ*_coef $ ZK_RP.P().M().DOKL;
            _msg:=exec('popzkrea','zamsiw_rea',1);
            {? __zknrea.NAD=1
            || _wyb:=''; _ilr:=0; _rj2:=0; _ils:=0; _war:=0;
               _ref:=__zknrea.ref();
               __zknrea.cntx_psh();
               __zknrea.clear();
               __zknrea.prefix(_ref);
               {? __zknrea.first()
               || {!
                  |? exec('zrea_kol','zamsiw_rea');
                     _ilr+=__zknrea.REA;
                     _rj2+=__zknrea.RJ2;
                     _ils+=__zknrea.RES;
                     {? _wyb='' & __zknrea.WYB='*' || _wyb:='*' ?};
                     _war+=__zknrea.WART;
                     __zknrea.next()
                  !}
               ?};
               __zknrea.cntx_pop();
               __zknrea.RES:=_ils;
               __zknrea.REA:=_ilr;
               __zknrea.WYB:=_wyb;
               __zknrea.RJ2:=_rj2;
               __zknrea.WART:=_war;
               __zknrea.put(1)
            ?}
         ?};
         ZK_RP.cntx_pop();
         _msg
      ";

::    --== Faktyczne przetwarzanie ==--
::    Zapis grupujący albo zaznaczenie
      {? __zknrea.TREE=0
       | __zknrea.sel_size()>0
      || KOMM.init(,,'Zmiana ilości do realizacji'@,'');

         {? __zknrea.sel_size()>0
         || _tab:=__zknrea.sel_aget();
            __zknrea.sel_adel();
            _tab.first();
            {!
            |? _tab.CRC:=0;
               _tab.put();
               _tab.next()
            !}
         || _tab:=tab_tmp(1
               ,'REF','INTEGER','Ref'
               ,'CRC','INTEGER','Crc'
            );
            _tab.REF:=#__zknrea.ref();
            _tab.add()
         ?};

         __zknrea.cntx_psh();
         _tab.first();
         {!
         |? {? _tab.CRC=0
             & __zknrea.seek(_tab.REF,)
            || _sect:=KOMM.sect_beg(__zknrea.LAB,14,'128:0:0');
               {? __zknrea.TREE<>0
               || _msg:=_update(_coef);
                  {? _msg<>''
                  || KOMM.add(_msg)
                  || KOMM.update(_sect,,13,'0:128:0')
                  ?}
               || __zknrea.prefix(_tab.REF);
                  {? __zknrea.first()
                  || KOMM.del(_sect);
                     _tab.cntx_psh();
                     _tab.prefix();
                     {!
                     |? _tab.blank(1);
                        _tab.REF:=#__zknrea.ref();
                        {? ~_tab.find_rec()
                        || _tab.REF:=#__zknrea.ref();
                           _tab.CRC:=0;
                           _tab.add(1)
                        ?};
                        __zknrea.next()
                     !};
                     _tab.cntx_pop()
                  ?}
               ?};
               _tab.CRC:=1;
               _tab.put(1);
               KOMM.sect_end()
            ?};
            _tab.next()
         !};
         __zknrea.cntx_pop();
         win_disp();
         KOMM.select()

::    Zapis pojedynczy
      || _msg:=_update(_coef);
         {? _msg<>'' || FUN.emsg(_msg) ?}
      ?}
   ?}
?};
undefine();
ZK_N.cntx_pop(); ZL.cntx_pop();
0


\bedispre
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem ilości do realizacji
::  OLD: \bedispre/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
"{? fld()>0
 || {? __zknrea.PLUS=0 || 'xwin16.png:76' || 'xwin16.png:28' ?}
 || exec('pusta','#icon')
?}"


\atr_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wyswietla atrybuty
::  OLD: \atr_real/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? __zknrea.TREE<>0 & __zknrea.DOST
|| ZK_RP.cntx_psh();
   ZK_RP.clear();
   {? ZK_RP.seek(__zknrea.REF)
   || ZK_RP.REZ().DK_C;
      exec('matr_rea','zamsiw_rea')
   ?};
   ZK_RP.cntx_pop()
|| FUN.info('Atrybuty wyświetlane są wyłącznie dla pozycji realizującej wskazaną dostawę.'@)
?};
~~


\matr_rea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: Atrybuty dla tabeli __zknrea
::  OLD: \matr_rea/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
_akc:=1;
ATR.FLAG:=0;
ATR.MJS:='ZK_RP.REZ()';

_wyn:=0;
_m_atr:=ZK_RP.REZ().M().M_ATR;
{? _m_atr<>null
|| ZK_RP.REZ().M().M_ATR().SYM;
:: podczytanie wartosci atrybutow
   exec('ustawatr','mat_atr','ZK_RP.REZ()');
   _jest:=($(ATR.MJS+'.DK_C'))()<>null;
   DK_C.btn_eopt('RED_ATR','AKC','state=normal');
   DK_C.btn_eopt('RED_ATR','NEW','state=normal');
   DK_C.btn_eopt('RED_ATR','INF','state=normal');
   DK_C.win_edit('RED_ATR');
   {? _akc
   || DK_C.display()
   || {? ~(_wyn:=DK_C.edit("exec('newakatr','mat_atr')"))
      || exec('retwar_a','mat_atr')
      ?}
   ?}
|| FUN.info('Dostawa bez określenia wzorca atrybutów dostaw.'@)
?};
_wyn


\new_magr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zmiana magazynu do realizacji zamowienia
::  OLD: \new_magr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? __zknrea.TREE<>0 & __zknrea.REF<>''
||
   _refbuf:=BUFMG.ref();
   VAR_DEL.delete('__magrez','__aktrez','__ndxmag','__oldilr');
   __magrez:=tab_tmp(2,'BYL','INTEGER',''
              ,'SYM','STRING[10]',''
              ,'ILE','REAL',''
              ,'ILD','REAL',''
              ,'ILR','REAL',''
              ,'ILZ','REAL',''
              ,'NRK','INTEGER',''
              ,'NRO','INTEGER',''
              ,'SQL','STRING[16]','');

   __aktrez:=0;

:: pobranie danych o magazynach
   _mat:=exec('FindInSet','#table','M','MATKTM',__zknrea.KTM,__zknrea.KTM);
   {? BUFMG.f_first()
   || {!
      |? {? exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,BUFMG.MG) & ~exec('czyinw_a','magazyn_inw',USERS_UP.MG)
          & exec('FindAndGet','#table',ZK_RP,__zknrea.REF,,"P().N().MD=null() | P().N().MD<>BUFMG.MG",1)
         || __magrez.blank();
            __magrez.SYM:=BUFMG.MG().SYM;
            __magrez.ILE:=exec('ilererez','zamsiw_rea',__zknrea.REF,BUFMG.MG);
            __magrez.ILD:=exec('FindInSet','#table','SM','SM',_mat,BUFMG.MG,"SM.SD",,,0);
            __kolmag.clear();
            __kolmag.prefix($__zknrea.ref(),$BUFMG.MG);
            _nrk:={? __kolmag.first() || __kolmag.NRK || BUFMG.NRK ?};
            __magrez.NRK:=_nrk;
            __magrez.NRO:=__magrez.NRK;
            __magrez.SQL:=$BUFMG.MG;
            {? __magrez.ILE>0
            || __magrez.ILR:=__magrez.ILE;
               __magrez.BYL:=0;
               __aktrez+=__magrez.ILE
            || __magrez.ILR:=0;
               __magrez.BYL:=1
            ?};
            {? (__magrez.ILD+__magrez.ILE)>0 || __magrez.add(1) ?}
         ?};
         BUFMG.f_next()
      !}
   ?};

   {? __magrez.size()>1
   ||
      _spr:=BEER.ZK_N().T().R='Z';
      _typupr:={? _spr || 4 || 10 ?};

      _pop:=exec('FindInSet','#table','USERS_UP','MG','ZA'+{? _spr || 'M' || 'W' ?},OPERATOR.USER)=null
       & exec('czyonemg','zamsiw_rea',__zknrea.REF)=0;
      _win_sel:=__magrez.mk_sel('Zmień rezerwacje wg magazynów'@,'P',,'winmagrez',,,,,'U');
      __magrez.win_fld(_win_sel,,'SYM',,,10,,1,'Magazyn'@);
      __magrez.win_fld(_win_sel,,'ILE',,,10,,1,'Aktualnie zarezerwowane'@);
      __magrez.win_fld(_win_sel,,'ILD',,,10,,1,'Stan dostępny'@);
      __magrez.win_fld(_win_sel,,'ILR',,,10,,~_pop,'Do zarezerwowania'@);
      {? _pop
      || __magrez.win_act(_win_sel,0,'Popraw',,,,"exec('po0newmr','zamsiw_rea')","exec('popnewmr','zamsiw_rea')",1)
      || __magrez.win_act(_win_sel,0,'Formuła','&Przenieś rezerwacje'@@,,,"exec('prznewmr','zamsiw_rea')",,1,,,,'P')
      ?};
      __magrez.win_act(_win_sel,0,'Menu','Przesu&ń'@@,,,,,,,,,'Ń');
      __magrez.win_act(_win_sel,0,'Formuła','W &górę'@@,'Przesu&ń',,"exec('zm_kolej','zamsiw_rea','U')",,,1
                ,"exec('zm_kolej','zamsiw_rea','U')",,'U');
      __magrez.win_act(_win_sel,0,'Formuła','W &dół'@@,'Przesu&ń',,"exec('zm_kolej','zamsiw_rea','D')",,,1
                ,"exec('zm_kolej','zamsiw_rea','D')",,'D');
      __magrez.win_act(_win_sel,0,'Formuła','Do &numeru'@@,'Przesu&ń',,"exec('zm_kolej','zamsiw_rea','N')",,,1
                ,"exec('zm_kolej','zamsiw_rea','N')",,'N');
      __magrez.win_act(_win_sel,0,'Formuła','&Akceptuj'@@,,,"exec('akcnewmr','zamsiw_rea')",,,,,,'A');
      __magrez.win_act(_win_sel,0,'Rekord',,,,"~__magrez.BYL","exec('sprnewmr','zamsiw_rea')");
      __magrez.fld_fml('ILR','BEFORE_DISPLAY',"exec('bedispre','zamsiw_rea')");

      __magrez.win_sel(_win_sel);

      __ndxmag:=__magrez.ndx_tmp('',0,'NRK',,0,'BYL',,0,'SYM',,0);

      __magrez.dnd_sel(_win_sel,,'records.winmagrez',"exec('zm_kolej','zamsiw_rea')");
      __magrez.index(__ndxmag);
      {? __magrez.first()
      || {? __magrez.select()
         || ''
         ?}
      ?};
      __magrez.dnd_sel(_win_sel,,'records.winmagrez',"");
      __magrez.ndx_drop(__ndxmag)
   || FUN.info('Brak innych magazynów do realizacji danej pozycji zamówienia,\n'
               'w których stan dostępny indeksu materiałowego:\n%1,\n'
               'jest większy od zera.\n\nZmiana magazynu niemożliwa.'@[__zknrea.KTM])
   ?};

   VAR_DEL.delete('__magrez','__aktrez','__ndxmag','__oldilr');
   BUFMG.f_seek(_refbuf)
?};
~~


\ilererez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: oblicza ile rezerwacji jest na danym maagzynie bez rezerwacji na dana dostawe
::   WE: _a - ref SQL ZK_RP
::       _b - ref magazynu jeśli null to kontrola czy magazyn jest wypełniony
::   WY: ilosc zarezerwowana
::  OLD: \ilererez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ZK_RP.cntx_psh();
ZK_P.cntx_psh();
ZK_RP.clear();
{? ZK_RP.seek(_a)
|| REZ.index('ZK_P');
   REZ.prefix(ZK_RP.P,'B');
   {? REZ.first()
   || {!
      |? _wyn+={? REZ.SC='' & {? _b=null() || REZ.MG<>null() || REZ.MG=_b ?} || REZ.ILR || 0 ?};
         REZ.next()
      !}
   ?}
?};
ZK_RP.cntx_pop();
ZK_P.cntx_pop();
_wyn


\czyonemg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy zostal przypisany maagzyn i czy ILP=ILZ
::   WE: _a - ref SQL ZK_RP
::   WY: 1-zostal i ILP=ILZ 0-brak magazynu -1-zostal i byl realizowany
::  OLD: \czyonemg/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ZK_RP.cntx_psh();
ZK_P.cntx_psh();
ZK_RP.clear();
{? ZK_RP.seek(_a)
|| _wyn:={? ZK_RP.P().RMAG<>null
         || {? ZK_RP.P().ILP=ZK_RP.P().ILZ || 1 || -1 ?}
         || 0
         ?}
?};
ZK_RP.cntx_pop();
ZK_P.cntx_pop();
_wyn


\po0newmr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed popraw dla nowej ilosci do zarezerwowania
::  OLD: \po0newmr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
__oldilr:=__magrez.ILR;
1


\popnewmr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po popraw dla nowej ilosci do zarezerwowania
::  OLD: \popnewmr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_czybyl:=~__magrez.BYL;
_allr:=0;
_newr:=__oldilr-__magrez.ILR;
_refr:=__magrez.ref();
__magrez.cntx_psh();
__magrez.clear();
{? __magrez.first()
|| {!
   |? {? __magrez.ref()<>_refr
      || _iled:={? _newr>0 || __magrez.ILD-__magrez.ILR || __magrez.ILR ?};
         {? _newr>0 & _iled>0
         || {? _iled>=_newr
            || __magrez.ILR+=_newr;
               __magrez.put(1);
               _newr:=0
            || __magrez.ILR+=_iled;
               __magrez.put(1);
               _newr-=_iled
            ?}
         |? _newr<0
         || {? _iled>=(-_newr)
            || __magrez.ILR+=_newr;
               __magrez.put(1);
               _newr:=0
            || __magrez.ILR-=_iled;
               __magrez.put(1);
               _newr+=_iled
            ?}
         ?}
      ?};
      _newr<>0 & __magrez.next()
   !}
?};
{? _czybyl & __magrez.first()
|| {! |? _allr+=__magrez.ILR; __magrez.next() !};
   {? _allr<__aktrez
   || FUN.info('Ogólna ilość rezerwowana (%1 %2) dla danej pozycji realizacji jest większa\n'
       'od wprowadzonej ilości zarezerwowanej wg magazynów (%3 %4).\n'@
       [form(__aktrez,,,'99'),__zknrea.JM1,form(_allr,,,'99'),__zknrea.JM1]+
       'Ilość zarezerwowana dla magazynu %1 zostanie powiększona o brakującą różnicę: %2 %3.'@
       [__magrez.SYM,form(__aktrez-_allr,,,'99'),__zknrea.JM1]);
      __magrez.clear();
      {? __magrez.seek(_refr)
      || __magrez.ILR+=__aktrez-_allr;
         __magrez.put(1)
      ?}
   ?}
?};
__magrez.cntx_pop();
1


\prznewmr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po popraw dla nowej ilosci do zarezerwowania
::  OLD: \prznewmr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_iler:={? __aktrez>__magrez.ILD || __magrez.ILD || __aktrez ?};
__oldilr:=__magrez.ILR;
{? __magrez.ILD>__magrez.ILR
 & FUN.ask('Czy przenieść rezerwację na magazyn: %1?'@[__magrez.SYM]+
           {? __aktrez>__magrez.ILD
           || '\n\nUwaga. Zostanie przeniesiona tylko ilość dostępna w danym magazynie.'@
           || ''
           ?})
|| __magrez.ILR:=_iler;
   exec('popnewmr','zamsiw_rea');
   __magrez.put(1)
?};
1


\akcnewmr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: akceptuje nowa rozpiske rezerwacji
::  OLD: \akcnewmr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy zaakceptować zmiany rezerwacji w magazynach?'@)
|| sel_exit();
:: kontrola co sie zmienilo jesli chodzi o kolejnosc
   ZK_RP.cntx_psh();
   ZK_P.cntx_psh();
   REZ.cntx_psh();
   {? (ZK_RP.clear(); ZK_RP.seek(__zknrea.REF)) & ZK_RP.P<>null
   || _newrez:=0;
      _zkp:=ZK_RP.P;
      _mat:=ZK_RP.P().M;
      _buf:=tab_tmp(1,'MAG','STRING[16]',''
             ,'ILR','REAL',''
             ,'ILP','REAL',''
             ,'REZ','STRING[16]',''
             ,'BYL','INTEGER','');
      REZ.index('ZK_P');
      REZ.prefix(_zkp,'B');
      {? REZ.first()
      || {!
         |? {? REZ.ILR>0 & REZ.SC=''
            || _buf.blank();
               _buf.MAG:=$REZ.MG;
               _buf.REZ:=$REZ.ref();
               _buf.ILR:=_buf.ILP:=REZ.ILR;
               _buf.BYL:=0;
               _buf.add(1)
            ?};
            REZ.next()
         !}
      ?};

      _kolej:=0;
      __magrez.clear();
      {? __magrez.first()
      || {!
         |? _kolej:=__magrez.NRK<>__magrez.NRO;
            ~_kolej & __magrez.next()
         !}
      ?};
::    usuniecie starego przenumerowania kolejnosci magazynow
      {? _kolej
      || __kolmag.clear();
         __kolmag.prefix($__zknrea.ref());
         {? __kolmag.first() || {! |? __kolmag.del() !} ?}
      ?};

      __magrez.clear();
      {? __magrez.first()
      || {!
         |?
::          nowy numer w kolejce magazynow
            {? _kolej
            || __kolmag.blank();
               __kolmag.REA:=$__zknrea.ref();
               __kolmag.MAG:=__magrez.SQL;
               __kolmag.NRK:=__magrez.NRK;
               __kolmag.add(1)
            ?};
::          korekta starych rezerwacji
            {? __magrez.ILE>=0
            || _buf.clear();
               {? _buf.find_key(__magrez.SQL)
               || {? _buf.ILR>__magrez.ILR & (REZ.clear(); REZ.seek(_buf.REZ))
                  || _przed:=REZ.ILR;
                     REZ.ILR:=__magrez.ILR;
                     REZ.put(1);
                     __magrez.ILZ+=REZ.ILR;
                     __magrez.put(1);
                     ZK_RP.index('REZ');
                     {? 0 & ZK_RP.find_key(REZ.ref()) & ZK_RP.ILR>0
                     || ZK_RP.ILR:=REZ.ILR-_przed;
                        ZK_RP.put(1)
                     ?};
                     _buf.BYL:=1;
                     _buf.ILP:=REZ.ILR;
                     _buf.put(1);
                     _newrez+=REZ.ILR
                  |? _buf.ILR<__magrez.ILR & (REZ.clear(); REZ.seek(_buf.REZ))
                  ||
::                   na wszelki wypadek nalezy sprawdzic stan dostaepny na danym magazynie
                     exec('obl_stan','magazyn_stan',REZ.M,1,REZ.MG);
                     _std:=BEER.SD+REZ.ILR;
                     {? _std>=__magrez.ILR
                     || _przed:=REZ.ILR;
                        REZ.ILR:=__magrez.ILR;
                        REZ.put(1);
                        __magrez.ILZ+=REZ.ILR;
                        __magrez.put(1);
                        ZK_RP.index('REZ');
                        {? 0 & ZK_RP.find_key(REZ.ref()) & ZK_RP.ILR>0
                        || ZK_RP.ILR:=REZ.ILR-_przed;
                           ZK_RP.put(1)
                        ?};
                        _buf.BYL:=1;
                        _buf.ILP:=REZ.ILR;
                        _buf.put(1);
                        _newrez+=REZ.ILR
                     |? _std>_buf.ILR
                     || _przed:=REZ.ILR;
                        REZ.ILR:=_std;
                        REZ.put(1);
                        __magrez.ILZ+=REZ.ILR;
                        __magrez.put(1);
                        ZK_RP.index('REZ');
                        {? 0 & ZK_RP.find_key(REZ.ref()) & ZK_RP.ILR>0
                        || ZK_RP.ILR:=REZ.ILR-_przed;
                           ZK_RP.put(1)
                        ?};
                        _buf.BYL:=1;
                        _buf.ILP:=REZ.ILR;
                        _buf.put(1);
                        _newrez+=REZ.ILR
                     ?}
                  || _newrez+=_buf.ILR;
                     _buf.BYL:=1;
                     _buf.put(1)
                  ?}
               ?}
            ?};
            __magrez.next()
         !}
      ?};
::    zapisanie nowych rezerwacji
      __magrez.clear();
      {? __magrez.first()
      || {!
         |?
::          nowe rezerwacja na podstawie starych
            {? ~__magrez.ILE & __magrez.ILR>=0
            || _buf.clear();
               {? ~_buf.find_key(__magrez.SQL)
               ||
::                magazyn na ktory mamy przeniesc rezerwacje
                  _rmag:=exec('FindAndGet','#table','MG',__magrez.SQL,,,null());
                  _ileroz:=__magrez.ILR;
                  {? _buf.first()
                  || {!
                     |? _wolne:=_buf.ILR-_buf.ILP;
                        {? _wolne>0 & (REZ.clear(); REZ.seek(_buf.REZ))
                        ||
::                         na wszelki wypadek nalezy sprawdzic stan dostaepny na danym magazynie
                           exec('obl_stan','magazyn_stan',REZ.M,1,_rmag);
                           _std:={? _wolne>BEER.SD || BEER.SD || _wolne ?};
                           {? _std>=_ileroz
                           || _refrez:=REZ.ref();
                              REZ.MG:=_rmag;
                              REZ.ILR:=_ileroz;
                              _newref:={? REZ.add(1) || REZ.ref() || null ?};
                              __magrez.ILZ+=REZ.ILR;
                              __magrez.put(1);
                              ZK_RP.index('REZ');
                              {? ZK_RP.find_key(_refrez)
                              || ZK_RP.clear();
                                 ZK_RP.ILR:=REZ.ILR;
                                 ZK_RP.REZ:=_newref;
                                 ZK_RP.MG:=_rmag;
                                 ZK_RP.W:='';
                                 ZK_RP.add(1)
                              ?};
                              _ileroz:=0;
                              _buf.ILP+=REZ.ILR;
                              _buf.put(1);
                              _newrez+=REZ.ILR
                           |? _std>0
                           || _refrez:=REZ.ref();
                              REZ.MG:=_rmag;
                              REZ.ILR:=_std;
                              _newref:={? REZ.add(1) || REZ.ref() || null ?};
                              __magrez.ILZ+=REZ.ILR;
                              __magrez.put(1);
                              ZK_RP.index('REZ');
                              {? ZK_RP.find_key(_refrez)
                              || ZK_RP.clear();
                                 ZK_RP.ILR:=REZ.ILR;
                                 ZK_RP.REZ:=_newref;
                                 ZK_RP.MG:=_rmag;
                                 ZK_RP.W:='';
                                 ZK_RP.add(1)
                              ?};
                              _ileroz-=_std;
                              _buf.ILP+=REZ.ILR;
                              _buf.put(1);
                              _newrez+=REZ.ILR
                           ?}
                        ?};
                        _ileroz>0 & _buf.next()
                     !}
                  ?}
               ?}
            ?};
            __magrez.next()
         !}
      ?};
::    kontrola czy wszystko zostalo rozpisane wg nowych rezerwacji
      {? _newrez<>__aktrez
      || _rozn:=__aktrez-_newrez;
         __magrez.index(__ndxmag);
         {? _rozn>0 & __magrez.first()
         || {!
            |? _buf.clear();
               {? _buf.find_key(__magrez.SQL) & (REZ.clear(); REZ.seek(_buf.REZ))
               ||
::                obliczamy stan czy cos sie jeszcze da rozpisac
                  exec('obl_stan','magazyn_stan',REZ.M,1,REZ.MG);
                  {? BEER.SD>=_rozn
                  || REZ.ILR+=_rozn;
                     REZ.put(1);
                     __magrez.ILZ+=_rozn;
                     __magrez.put(1);
                     ZK_RP.index('REZ');
                     {? 0 & ZK_RP.find_key(REZ.ref()) & ZK_RP.ILR>0
                     || ZK_RP.ILR:=REZ.ILR;
                        ZK_RP.put(1)
                     ?};
                     _rozn:=0
                  |? BEER.SD>0
                  || REZ.ILR+=BEER.SD;
                     REZ.put(1);
                     __magrez.ILZ+=BEER.SD;
                     __magrez.put(1);
                     ZK_RP.index('REZ');
                     {? 0 & ZK_RP.find_key(REZ.ref()) & ZK_RP.ILR>0
                     || ZK_RP.ILR:=REZ.ILR;
                        ZK_RP.put(1)
                     ?};
                     _rozn-=BEER.SD
                  ?}
               ?};
               _rozn>0 & __magrez.next()
            !}
         ?}
      ?};
      obj_del(_buf);
::    aktualizacja stanow po aktualizacji rezerwacji
      _refzkrp:=null;
      _ilr:=exec('FindAndGet','#table',ZK_RP,__zknrea.REF,,"ZK_RP.ILR",0);
      _magsym:='';
      _rozpisz:=__aktrez;
      __magrez.index(__ndxmag);
      {? __magrez.first()
      || {!
         |? ZK_RP.index('ZK_P');
            ZK_RP.prefix(__refrea,_zkp,exec('FindAndGet','#table','MG',__magrez.SQL,,,null()));
            {? ZK_RP.first()
            || {!
               |? {? ZK_RP.REZ().SC=''
                  || _iler:=ZK_RP.REZ().ILR;
                     {? _iler>0
                     || {? _rozpisz<=0
                        || ZK_RP.ILR:=0;
                           ZK_RP.put(1);
                           _ok:=ZK_RP.next()
                        |? _iler>=_rozpisz
                        || {? _refzkrp=null
                           || _refzkrp:=ZK_RP.ref(); _magsym:=ZK_RP.MG().SYM;
                              ZK_RP.ILR:=_ilr;
                              ZK_RP.W:='*'
                           || ZK_RP.ILR:=_iler
                           ?};
                           ZK_RP.put(1);
                           _rozpisz:=0;
                           _ok:=ZK_RP.next()
                        || {? _refzkrp=null
                           || _refzkrp:=ZK_RP.ref(); _magsym:=ZK_RP.MG().SYM;
                              ZK_RP.ILR:=_ilr;
                              ZK_RP.W:='*'
                           || ZK_RP.ILR:=_iler
                           ?};
                           ZK_RP.put(1);
                           _rozpisz-=_iler;
                           _ok:=ZK_RP.next()
                        ?}
                     || _rbuf:=ZK_RP.REZ;
                        _ok:=ZK_RP.del();
                        REZ.clear();
                        {? REZ.seek(_rbuf) || REZ.del() ?}
                     ?}
                  || _ok:=ZK_RP.next()
                  ?};
                  _ok
               !}
            ?};
            __magrez.next()
         !}
      ?};
      __zknrea.MAG:=_magsym;
      __zknrea.REF:=$_refzkrp;
      __zknrea.put(1)
   ?};
   ZK_RP.cntx_pop();
   ZK_P.cntx_pop();
   REZ.cntx_pop();
   BUFMG.prefix()
?}


\sprnewmr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza prawidłowość ilości do zarezerwowania
::  OLD: \sprnewmr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_ild:=__magrez.ILD;
{? ~__magrez.BYL
|| _ref:=__magrez.ref();
   __magrez.cntx_psh();
   __magrez.clear();
   {? __magrez.seek(_ref) || _ild+=__magrez.ILE ?};
   __magrez.cntx_pop()
?};
{? __magrez.ILR<0
|| FUN.info('Ilość musi być liczbą wiekszą lub równą zero.'@);
   0
|? __magrez.ILR>__aktrez
|| FUN.info('Podana ilość musi być liczbą mniejszą lub równa od aktualnie rezerowanej: '@+form(__aktrez,,,'99'));
   0
|? __magrez.ILR>_ild
|| FUN.info('Podana ilość musi być liczbą większą lub równą ilości dostępnej.'@);
   0
|| 1
?}


\zm_kolej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zmienia kolejnosc dla __magrez
::   WE: [_a] - ''(domyślnie) - drag&drop, 'U','D','N'-akcja do przenumerowania
::  OLD: \zm_kolej/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (';UDN'*_a)>1 || _a || '' ?};

{? _tryb=''
|| _tab:=dnd_info('dropped_records');
   {? _tab.size() & _tab.first() & FUN.ask('Czy zmienić kolejność magazynów do realizacji?'@)
   || __magrez.cntx_psh();
      _ref:=dnd_info('dest_record');
      {? __magrez.seek(_ref) || exec('zmien_lp','#dragdrop','NRK',__ndxmag,_tab) ?};
      __magrez.cntx_pop()
   ?}
|| __magrez.cntx_psh();
   exec('zmien_lpa','#dragdrop','NRK',__ndxmag,,,_tryb);
   __magrez.cntx_pop()
?};
1


\odsw_inf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wyswietla informacje o zamowieniach i magazynach
::  OLD: \odsw_inf/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.AKTZKN:=__zknrea.ZKN;
_rodz:={? exec('FindAndGet','#table',ZK_N,BEER.AKTZKN,,"T().R",'')='Z'
       || 4
       || {? __zknrea.USL='T' || 44 || 10 ?}
       ?};

{? __reazld<=1
|| __filtrz.clear();
   __filtrz.first();
   grp_disp(__filtrz,__filtrz.win_sel('?'))
?};

{? ~__reazld
|| {? __zknrea.win_sel('?')=__zkrwi1
   || exec('filtr_mg','zamsiw_rea',_rodz);
      BUFMG.f_first();
      grp_disp(BUFMG,'WER')
::      exec('oblinfrr','zamsiw_rea');
::      grp_disp(__inforr,__inforr.win_sel('?'))
   || grp_disp(__palkpl,__palkpl.win_sel('?'))
::      __pozkpl.clear();
::      __pozkpl.prefix($__palkpl.ref());
::      __pozkpl.first();
::      grp_disp(__pozkpl,__pozkpl.win_sel('?'))
   ?}
?};
1


\filtr_mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: ustawia filtr na dostepne magazyny
::   WE: _a - numer ograniczen
::  OLD: \filtr_mg/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_onemag:=null;
BUFMG.prefix();
BUFMG.f_clear();
BUFMG.f_set('MG(SYM),MG(NAZ)','','\"BUFMG\".TYP=:_a and US=:_b',_a,OPERATOR.USER);
{? __zknrea.TREE<>0 & __zknrea.REF<>''
|| _onemag:={? __zknrea.ONEMG<>'' || exec('FindAndGet','#table','MG',__zknrea.ONEMG,,,null()) || null ?};
   {? BUFMG.f_first()
   || {!
      |? {? {? _onemag<>null || BUFMG.MG<>_onemag || 0 ?}  | BUFMG.MG().PAL='T'
         || BUFMG.f_del()
         || BUFMG.f_next()
         ?}
      !}
   ?}
?};
~~


\oblinfrr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: oblicza informacje o realizacji danego zamowienia
::  OLD: \oblinfrr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
__inforr.clear();
{? __inforr.first() || {! |? __inforr.del() !} ?};

_all:=0;
__zknrea.cntx_psh();
ZK_RP.cntx_psh();
__zknrea.clear();
{? __zknrea.first()
|| {!
   |? {? __zknrea.TREE<>0 & __zknrea.NAD<>1 & __zknrea.REA>0 & __zknrea.REF<>''
      || ZK_RP.clear();
         {? ZK_RP.seek(__zknrea.REF)
         || _zkp:=ZK_RP.P;
            _mgrez:=$ZK_RP.MG;
            _ilord:=exec('realOrdMg','rezerwacje',_mgrez);
            ZK_RP.index('ZK_P');
            ZK_RP.prefix(__refrea,_zkp);
            {? ZK_RP.first()
            || {!
               |? _usluga:=ZK_RP.M().RODZ='U' & ZK_RP.P().RODZ='W';
                  _ilr:={? $ZK_RP.MG=_mgrez & ~_usluga || _ilr:=_ilord || ZK_RP.ILR ?};
                  __inforr.clear();
                  _mgsym:={? _usluga
                          || '- USŁUGI -'
                          || ZK_RP.MG().SYM
                          ?};
                  _mgnaz:={? _usluga
                          || 'pozycje usługowe'
                          || ZK_RP.MG().NAZ
                          ?};
                  {? __inforr.find_key('M',_mgsym)
                  || {? $ZK_RP.MG<>_mgrez
                     || __inforr.ILE+=_ilr;
                        __inforr.put(1);
                        _all+=_ilr
                     ?}
                  || __inforr.blank();
                     __inforr.TYP:='M';
                     __inforr.OPI:=_mgsym;
                     __inforr.NAZ:=_mgnaz;
                     __inforr.ILE:=_ilr;
                     __inforr.add(1);
                     _all+=_ilr
                  ?};
                  ZK_RP.next()
               !}
            ?}
         ?}
      ?};
      __zknrea.next()
   !}
?};
__zknrea.cntx_pop();
ZK_RP.cntx_pop();
__inforr.clear();
{? __inforr.last()
|| {!
   |? __inforr.ILE:={? _all>0 || (__inforr.ILE/_all)*100 $2 || 0 ?};
      __inforr.put(1);
      __inforr.prev()
   !}
?};
~~


\add_zamr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: dodaje pozycje zamowienia do realizacji
::   WE: [_a] - ref SQL __filtrz lub ''-domyślnie
::       [_b] - 1-bez porównania 0-(domyślnie) z porównaniem
::       [_c] - 0(domyślnie) - d&d 1-akcja
::       [_d] - dyspozycja w magazynie - domyślnie brak
::  OLD: \add_zamr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_DAndD:={? _>0 & type_of(_a)=type_of('') || _a || '' ?};
_compare:={? var_pres('_b')=type_of(0) || _b || 0 ?};
_wgTab:=_DAndD='';
_tryb:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_tr_nzl:={? var_pres('_d')=type_of(null()) || _d || null() ?};

_err:=0;
_blk:=0;
{? ~_wgTab
|| _refwzor:=$BEER.ZK_N;
   _ok:=-1;
   __filtrz.cntx_psh();
   __zknrea.cntx_psh();
   ZK_N.cntx_psh();
   ZK_RP.cntx_psh();
   {? (__filtrz.clear; __filtrz.seek(_DAndD)) & ~__filtrz.WYB
    & (ZK_N.clear(); ZK_N.seek(__filtrz.ZKN))
    & (_ok:=_compare | ZK_N.LIM='T' | exec('jigsaw','zamsiw_wspolne',_refwzor,ZK_N.ref()); _ok)
    & {? exec('add_blk','zamsiw_nag',ZK_N.ref()) || 1 || _blk+=1; 0 ?}
   || {? exec('copy_poz','zamsiw_rea',ZK_N.ref(),__refrea,,,{? _b || 2 || 1 ?},,,,,_tr_nzl)<>0
      || _wyb:=0;
         __zknrea.cntx_psh();
         __zknrea.clear();
         __zknrea.prefix(0,'Pozycje zamówienia: '+__filtrz.SYM,);
         _wyb:=__zknrea.first();
         __zknrea.cntx_pop();
         __filtrz.WYB:=_wyb;
         __filtrz.put(1)
      ?}
   ?};
   _err+=_ok=0;
   __filtrz.cntx_pop();
   __zknrea.cntx_pop();
   ZK_N.cntx_pop();
   ZK_RP.cntx_pop()
|| {? ~_tryb
   || _tab:=dnd_info('dropped_records')
   || {? __filtrz.sel_size()
      || _tab:=__filtrz.sel_aget();
         __filtrz.sel_adel()
      || _tab:=tab_tmp(1,'REF','INTEGER','');
         _tab.blank();
         _tab.REF:=#__filtrz.ref();
         _tab.add(1)
      ?}
   ?};
:: było w warunku: FUN.ask('Czy dodać wybrane zamówienia do realizacji?'@)
   {? _tab.size() & _tab.first()
   || _refwzor:=$BEER.ZK_N;
      _blk:=0;
      __filtrz.cntx_psh();
      __zknrea.cntx_psh();
      ZK_N.cntx_psh();
      ZK_RP.cntx_psh();
      {!
      |? _ok:=-1;
         {? (__filtrz.clear; __filtrz.seek(_tab.REF,)) & ~__filtrz.WYB
          & (ZK_N.clear(); ZK_N.seek(__filtrz.ZKN))
          & (_ok:=ZK_N.LIM='T' | exec('jigsaw','zamsiw_wspolne',_refwzor,ZK_N.ref()); _ok)
          & {? exec('add_blk','zamsiw_nag',ZK_N.ref()) || 1 || _blk+=1; 0 ?}
         || exec('copy_poz','zamsiw_rea',ZK_N.ref(),__refrea,,,1,,,,,_tr_nzl);
            _wyb:=0;
            __zknrea.cntx_psh();
            __zknrea.clear();
            __zknrea.prefix(0,'Pozycje zamówienia: '+__filtrz.SYM,);
            _wyb:=__zknrea.first();
            __zknrea.cntx_pop();
            __filtrz.WYB:=_wyb;
            __filtrz.put(1)
         ?};
         _err+=_ok=0;
         _tab.next()
      !};
      __filtrz.cntx_pop();
      __zknrea.cntx_pop();
      ZK_N.cntx_pop();
      ZK_RP.cntx_pop()
   ?}
?};
exec('pobstnmg','zamsiw_rea');
{? _err | _blk
|| FUN.info({? _err
            || 'Nie dodano do listy realizacji %1 zamówień\n'
               '(zmienił się ich status, np. zostały odakceptowane).'@[form(_err,,0,'99')]
            || ''
            ?}+
            {? _blk
            || {? _err || '\n\n' || '' ?}+'Nie dodano do listy realizacji %1 zamówień\n'
                                          '(zablokowane przez innego użytkownika).'@[form(_blk,,0,'99')]
            || ''
            ?})
?};
1


\copy_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: kopiuje pozycje przeznaczone do realizacji
::   WE: _a - ref zamowienia
::       [_b] - opis
::       [_c] - wypelnia tabelke 0-wg rezerwacji(domyslnie) 1-wg ilosci pozostalych 2-wg tylko ilosci zarezerwowanych
::       [_d] - realizacja kompletacji wysylki-1 0(domyslnie)-nie
::       [_e] - czy automatyczny wybor wszystkich pozycji
::       [_f] - czy aktualizowac statusy 0-tak(domyslnie) 1-nie
::       [_g] - wg tabeli __lstlim 0-nie(domyslnie) 1-tak
::       [_h] - tylko z podanego magazynu domyslnie wg uprawnionych
::       [_i] - formula warunku
::       [_j] - dyspozycja w magazynie, domyślnie brak
::       [_k] - ZGP.ref() domyślnie null()
::   WY: 1-dodano pozycje 0-nie dodano -1-nie dodano bo pozycje były zrealizowane
::  OLD: \copy_poz/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};
{? _>=6 || {? type_of(_f)<>1 || _f:=0 ?} || _f:=0 ?};
{? _>=7 || {? type_of(_g)<>1 || _g:=0 ?} || _g:=0 ?};
{? _>=8 || {? type_of(_h)<>7 || _h:=null() ?} || _h:=null() ?};
_zlwar:={? _>=9 & type_of(_i)=type_of("") || _i || "1" ?};

_tr_nzl:={? var_pres('_j')=type_of(null()) || _j || null() ?};
_wg_nzl:=_tr_nzl<>null();
{? _wg_nzl & _h=null() || _h:=exec('FindAndGet','#table',TR_NZL,_tr_nzl,,"MG",null()) ?};
_zgp:={? var_pres('_k')=type_of(null()) || _k || null() ?};

_wyn:=1;
_rilp:=0;
_ref:=null;
ZK_P.cntx_psh;
ZK_P.index('NAG');
ZK_P.prefix(_a);
{? ZK_P.first()
|| {? ~_d
   || __zknrea.blank();
      __zknrea.TREE:=0;
      __zknrea.LAB:='Pozycje zamówienia: '+ZK_P.N().SYM;
      __zknrea.ICON:=-1;
      __zknrea.POZ:=__zknrea.REZ:=__zknrea.ILP:=__zknrea.REA:=__zknrea.RJ2:=__zknrea.ILZ:=__zknrea.RES:=__zknrea.RS2:=0;
      __zknrea.JM1:=__zknrea.JM2:='';
      __zknrea.ZKN:=$ZK_N.ref();
      __zknrea.ZAM:=ZK_N.SYM;
      __zknrea.ZLSYM:=ZK_N.ZL().SYM;
      __zknrea.NAD:=0;
      __zknrea.MGP:=ZK_P.RMAG<>null & (ZK_P.RMAG().PAL='T' | {? ZK_P.RODZ='W' || ZK_P.N().LIM='T' || 0 ?});
      __zknrea.add();
      _korzen:=__zknrea.ref()
   || _korzen:=null
   ?};
   {!
   |? {? ~ZK_P.END
      || ZK_P.cntx_psh();
         ZK_RP.W:='';
         _il_poz:={? ~_wg_nzl
                  || ZK_P.ILP
                  || exec('FindInSet','#table','TR_ZL','POZREF',ZK_P.uidref(),_tr_nzl
                      ,"{? @.TR_ZL.ZIL>0 || @.TR_ZL.ZIL || @.TR_ZL.IL ?}",1,,0)
                  ?};
         _il_bez:={? ~_wg_nzl || ZK_P.ILBEZ || ZK_P.ILBEZ ?};
         _il_rez:={? ~_wg_nzl || ZK_P.ILRB || ZK_P.ILRB ?};
         {? _wg_nzl
         || _il_rdm:=exec('REZtr_nzl','rezerwacje',ZK_P.ref(),_tr_nzl);
            {? _il_rdm>0 & _il_rez>_il_poz || _il_rez:=_il_poz ?};
            _il_bez:=_il_poz-_il_rez
         ?};

         {? _zlwar() & ZK_P.A='A' & _il_poz>0
          & (_h=null() | ZK_P.RMAG=_h | ZK_P.RMAG=null()) & (~_g | exec('czy_lstl','zamsiw_rea',#ZK_P.M,$ZK_P.ref()))
          & (_zgp=null() | ZK_P.ZLIM().ZGP=_zgp)
         ||
::       pozycje bez rezerwacji
            {? ~_c & ZK_P.M().RODZ='T' & ZK_P.CZYBEZ='T' & _il_bez>0
            || {? _wg_nzl
               || _tr_zl:=exec('FindInSet','#table','TR_ZL','POZREF',ZK_P.uidref(),_tr_nzl,,1,,0,null());
                  {? _tr_zl<>null()
                  || TR_ZLM.cntx_psh();
                     TR_ZLM.index('TR_ZL');
                     TR_ZLM.prefix(_tr_zl);
                     {? TR_ZLM.first()
                     || {!
                        |? {? TR_ZLM.DK_C<>null()
                           || exec('rozp_rez','rezerwacje',__refrea,,TR_ZLM.IL,,_f,,,_h,,,TR_ZLM.DK_C);
                              _il_bez-=TR_ZLM.IL
                           ?};
                           TR_ZLM.next()
                        !}
                     ?};
                     TR_ZLM.cntx_pop()
                  ?}
               ?};
               {? _il_bez>0 || exec('rozp_rez','rezerwacje',__refrea,,_il_bez,,_f,,,_h) ?}
            ?};

::       pozycje aktualnie zarezerwowane bezwarunkowo
            {? ZK_P.M().RODZ='U'
            || {? ~_c & ZK_P.A='A' & _il_poz>0
               || {? ZK_P.RMAG<>null & ZK_P.RODZ='Z' || ZK_P.MG:=ZK_P.RMAG; ZK_P.put() ?};
                  _mgu:={? ZK_P.RODZ='Z' || ZK_P.MG || null() ?};
                  {? ZK_P.RODZ='Z' & ZK_P.MG=null
                  || FUN.info('Zamówienie %1 poz. %2.\n'
                              'Usługa %3 nie ma przypisanego magazynu\ni nie zostanie zrealizowana.'@
                              [ZK_P.N().SYM,$ZK_P.POZ,ZK_P.M().KTM])
                  || _ref:=exec('one_prea','zamsiw_rea',null,ZK_P.ref,_il_poz,_mgu,ZK_P.TOP,_b,_korzen,,,,null)
                  ?}
               ?}
            |? _c=1 & _il_poz>0
            || exec('one_prea','zamsiw_rea',null,ZK_P.ref,_il_poz,null,ZK_P.TOP,_b,_korzen)
            || _roz_nzl:={? _wg_nzl || _il_poz || -1 ?};
               REZ.index('ZK_P');
               REZ.prefix(ZK_P.ref(),'B');
               {? REZ.last()
               ||
::             sprawdzamy czy sa rezerwacje wg dostaw
                  _czydst:=0;
                  _allrez:=0;
                  {!
                  |? {? exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,REZ.MG)<>0
                     || {? REZ.SC<>'' || _czydst+=REZ.ILR ?};
                        _allrez+=REZ.ILR
                     ?};
                     REZ.prev()
                  !};
                  {? ~_d
                  || {? _czydst>0
                     || _korzen2:=exec('one_prea','zamsiw_rea',null,ZK_P.ref,_allrez,null,ZK_P.TOP,_b,_korzen,,,,null,1)
                     || _korzen2:=_korzen
                     ?};
                     {? _korzen2<>null & REZ.first()
                     || _refzkrp:=null;
                        _refzksc:=null;
                        {!
                        |? _brakinw:=exec('spr_inw_a','zamsiw_rea');
                           {? ~_wg_nzl
                           || _ilone:=REZ.ILR
                           |? REZ.ILR>=_roz_nzl
                           || _ilone:=_roz_nzl;
                              _roz_nzl:=0
                           || _ilone:=REZ.ILR;
                              _roz_nzl-=REZ.ILR
                           ?};
                           {? _ilone>0 & (_h=null() | REZ.MG=_h) & exec('matnamag','zamsiw_wspolne',REZ.M,REZ.MG)
                              & _brakinw
                           || {? REZ.SC=''
                              || {? _refzkrp=null
                                 || _refzkrp:=exec('one_prea','zamsiw_rea',null,ZK_P.ref,_ilone,REZ.MG,ZK_P.TOP,_b
                                       ,_korzen2,,,{? _czydst>0 || -1 || 0 ?},REZ.ref())
                                 || exec('one_prea','zamsiw_rea',null,ZK_P.ref,_ilone,REZ.MG,ZK_P.TOP,_b,_korzen2
                                     ,,,#_refzkrp,REZ.ref(),0)
                                 ?}
                              || _refzksc:=exec('one_prea','zamsiw_rea',null,ZK_P.ref,_ilone,REZ.MG,ZK_P.TOP,_b,_korzen2
                                  ,,,,REZ.ref(),0)
                              ?}
                           ?};
                           REZ.next()
                        !};
                        {? _czydst>0 & (_refzkrp<>null | _refzksc<>null) & (__zknrea.clear(); __zknrea.seek(_korzen2))
                        || __zknrea.REF:={? _refzkrp<>null || $_refzkrp || $_refzksc ?};
                           __zknrea.put(1)
                        ?}
                     ?}
                  || _korzen2:=null;
                     {? REZ.first()
                     || {!
                        |? _brakinw:=exec('spr_inw_a','zamsiw_rea');
                           {? REZ.ILR>0 & (_h=null() | REZ.MG=_h) & exec('matnamag','zamsiw_wspolne',REZ.M,REZ.MG)
                              & _brakinw
                           || {? REZ.SC=''
                              || exec('one_prea','zamsiw_rea',null,ZK_P.ref,REZ.ILR,REZ.MG,ZK_P.TOP,_b,_korzen2
                                     ,,,{? _czydst>0 || -1 || 0 ?},REZ.ref())
                              || exec('one_prea','zamsiw_rea',null,ZK_P.ref,REZ.ILR,REZ.MG,ZK_P.TOP,_b,_korzen2
                                  ,,,,REZ.ref(),0)
                              ?}
                           ?};
                           REZ.next()
                        !}
                     ?}
                  ?}
               |? _il_poz>0 & _e<>2
               || __stnmat.clear();
                  {? {? ZK_P.RMAG=null || __stnmat.find_key($ZK_P.M) || __stnmat.find_key($ZK_P.M,$ZK_P.RMAG) ?}
                  || exec('one_prea','zamsiw_rea',null,ZK_P.ref,0,ZK_P.RMAG,ZK_P.TOP,_b,_korzen,1)
                  ?}
               ?}
            ?}
         |? _g & exec('czy_lstl','zamsiw_rea',#ZK_P.M,$ZK_P.ref()) & ZK_P.ILP=0
         || _rilp:=1
         ?};
         ZK_P.cntx_pop()
      ?};
      ZK_P.next()
   !}
?};
ZK_P.cntx_pop();
{? _e
|| {? ~_d | _e<>2
   || __zknrea.cntx_psh();
      __zknrea.prefix(_korzen);
      {? __zknrea.first()
      || {!
         |? {? __zknrea.NAD>0
            || __zknrea.cntx_psh();
               _korzen2:=__zknrea.ref();
               __zknrea.prefix(_korzen2);
               {? __zknrea.first()
               || {!
                  |? {? (ZK_RP.prefix(); ZK_RP.seek(__zknrea.REF))
                     || exec('wyb_real','zamsiw_rea',$ZK_RP.REZ,,_wg_nzl)
                     ?};
                     __zknrea.next()
                  !}
               ?};
               __zknrea.cntx_pop()
            || {? (ZK_RP.prefix(); ZK_RP.seek(__zknrea.REF))
               || exec('wyb_real','zamsiw_rea',,,_wg_nzl)
               ?}
            ?};
            __zknrea.next()
         !}
      ?};
      __zknrea.cntx_pop()
   || ZK_RP.index('NAGA');
      ZK_RP.prefix(_b,null);
      {? ZK_RP.first()
      || {!
         |? ZK_RP.W:='*';
            ZK_RP.put(1);
            ZK_RP.next()
         !}
      ?}
   ?}
?};
{? ~_d
|| __zknrea.cntx_psh();
   __zknrea.prefix(_korzen);
   {? ~__zknrea.first() || __zknrea.prefix(); {? __zknrea.seek(_korzen) || _wyn:=0; __zknrea.del() ?} ?};
   __zknrea.cntx_pop()
?};
{? ~_wyn & _rilp || _wyn:=-1 ?};
_wyn


\czy_lstl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: sprawdza czy dany indeks materialowy jest w tabeli zaznaczen
::   WE: _a - ref integer M
::       _b - ref SQL pozycji zamówienia
::   WY: 1-jest 0-nie ma
::  OLD: \czy_lstl/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
__lstlim.clear();
__lstlim.prefix(_a);
{? __lstlim.first()
|| {!
   |? _sql:=__lstlim.ZK_P_QRF;
      _wyn:=_sql='' | _sql=_b;
      ~_wyn & __lstlim.next()
   !}
?};
_wyn


\one_prea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: utworzenie pojedynczej pozycji realizacji
::   WE:  _a  - ZK_RN.ref
::        _b  - ZK_P.ref
::        _c  - ilosc zrealizowana
::        _d  - magazyn
::        _e  - top
::        _f  - ID
::        [_g] - korzen
::        [_h] - czy ustawić pole wyboru na '*'
::        [_i] - kod kreskowy palety
::        [_j] - bez pozycji realizacji 0-nie(domyslnie) ref integer __zknrea lub -1-jesli podgalaz bez dostawy
::        [_k] - ref REZ
::        [_l] - 1-tylko naglowek __zknrea, 0-domyslnie nie
::        [_m] - 0-bez update-u domyślnie 1-standardowe działanie
::        [_n] - wskazanie na EANP z GS1 domyślnie brak
::   WY:  ref ZK_RP lub ref __zknrea dla _l=1
::  OLD: \one_prea/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=7 || {? type_of(_g)<>7 || _g:=null ?} || _g:=null ?};
{? _>=8 || {? type_of(_h)<>1 || _h:=0 ?} || _h:=0 ?};
{? _>=9 || {? type_of(_i)<>2 || _i:='' ?} || _i:='' ?};
{? _>=10 || {? type_of(_j)<>1 || _j:=0 ?} || _j:=0 ?};
{? _>=11 || {? type_of(_k)<>7 || _k:=null ?} || _k:=null ?};
{? _>=12 || {? type_of(_l)<>1 || _l:=0 ?} || _l:=0 ?};
_noupd:={? var_pres('_m')=type_of(0) || _m || 0 ?};
_gs1:={? var_pres('_n')=type_of('') & (+_n)=16 || _n || '' ?};

_wyn:=null;
_upd:=0;
:: kontrola czydany magazyn nie jest zamknięty
{? exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,_d)<>0
|| ZK_RP.prefix();
   {? _k<>null() & ~_noupd
   || ZK_RP.index('REZ');
      ZK_RP.prefix(_k);
      {? ZK_RP.first() & ZK_RP.N=_a
      || ZK_RP.W:='';
         ZK_RP.ILR+=_c;
         {? ~_l || _wyn:={? ZK_RP.put(1) || ZK_RP.ref() || null ?} ?};
         _upd:=1
      ?}
   ?};
   {? ~_upd
   || ZK_RP.N:=_a;
      ZK_RP.P:=_b;
      ZK_RP.ILR:=_c;
      ZK_RP.MG:=_d;
      ZK_RP.TOP:=_e;
      ZK_RP.ID:=_f;
      ZK_RP.M:=ZK_RP.P().M;
      ZK_RP.PAL:=_i;
      ZK_RP.REZ:=_k;
      ZK_RP.DOST:={? _k<>null || ZK_RP.REZ().SC<>'' || 0 ?} ;
      ZK_RP.SC:=ZK_RP.REZ().SC;
      ZK_RP.CZYREZ:=ZK_RP.M().RODZ='T' & ZK_RP.REZ().REA<>'T';
      ZK_RP.PLUS:=0;
      ZK_RP.OLD_ILP:=0;
      ZK_RP.GS1:=_gs1;
      {? _h || ZK_RP.W:='*' ?};
      {? ~_l || _wyn:={? ZK_RP.add(1) || ZK_RP.ref() || null ?} ?}
   ?};
   {? _j>0
   || __zknrea.prefix();
      {? __zknrea.seek(_j,)
      || __zknrea.REZ+=ZK_RP.ILR;
         __zknrea.REZ+=ZK_RP.ILR;
         _dokl_m:={? __zknrea.JM1=__zknrea.JM2
               || exec('jaka_dok_m','jm',ZK_RP.P().M)
               || exec('jaka_dok_mjm','jm',ZK_RP.P().M,ZK_RP.P().J2,ZK_RP.P().M().J)
               ?};
               roundmet(BEER.MDOKL);
         _jmg:=ZK_RP.P().M().J2=ZK_RP.P().J2;
         {? ~_jmg
         || __zknrea.RJ2:=ZK_RP.ILR*ZK_RP.P().WS2${? _dokl_m<0 || exec('jaka_dok_m','jm',ZK_RP.P().M) || _dokl_m ?}
         || __zknrea.RJ2:=ZK_RP.ILR/ZK_RP.P().WS2${? _dokl_m<0 || exec('jaka_dok_m','jm',ZK_RP.P().M) || _dokl_m ?}
         ?};
         roundmet(5);
         __zknrea.put(1)
      ?}
   |? {? ~_l || _wyn<>null || 1 ?} & _g<>null
   || __zknrea.prefix();
      __zknrea.blank();
      __zknrea.TREE:=_g;
      __zknrea.LAB:={? ZK_RP.SC<>''
                    || exec('rek_rez1','rezerwacje');
                       DISP.DOST
                    |? _j<0
                    || 'wg magazynów'
                    || form(ZK_RP.P().POZ,4,0,'99')+'. '+ZK_RP.P().M().KTM+' '+ZK_RP.P().M().N
                    ?};
      __zknrea.ZAM:=ZK_RP.P().N().SYM;
      __zknrea.DTZ:=ZK_RP.P().N().DP;
      __zknrea.POZ:=ZK_RP.P().POZ;
      __zknrea.REF:={? ~_l || $ZK_RP.ref() || $ZK_P.ref() ?};
      __zknrea.MAG:=ZK_RP.MG().SYM;
      __zknrea.KTM:=ZK_RP.P().M().KTM;
      __zknrea.NAZ:=ZK_RP.P().M().N;
      __zknrea.USL:={? ZK_RP.P().M().RODZ='U' || 'T' || 'N' ?};
      __zknrea.REZ:={? __zknrea.USL='T' || ZK_RP.P().ILP || ZK_RP.P().ILRB ?};
      _nadgal:={? ~_l || {? ZK_P.RMAG<>null | ~ZK_P.ILRD || 0 || -1 ?} || _l ?};
      __zknrea.ILP:={? __zknrea.USL='T' || ZK_RP.P().ILP
                    |? ZK_RP.DOST || ZK_RP.REZ().ILR
                    |? _nadgal=-1 || ZK_RP.ILR
                    || ZK_RP.P().ILP
                    ?};
      __zknrea.ILZ:={? __zknrea.USL='T' || ZK_RP.P().ILZ
                    |? ZK_RP.DOST || ZK_RP.REZ().ILR
                    |? _nadgal=-1 || ZK_RP.ILR
                    || ZK_RP.P().ILZ
                    ?};
      __zknrea.REA:=__zknrea.RES:=ZK_RP.ILR;
      __zknrea.JM1:=ZK_RP.P().M().J().KOD;
      __zknrea.JM2:=ZK_RP.P().J2().KOD;
      _jmg:=ZK_RP.P().M().J2=ZK_RP.P().J2;
      _dokl_m:={? __zknrea.JM1=__zknrea.JM2
               || exec('jaka_dok_m','jm',ZK_RP.P().M)
               || exec('jaka_dok_mjm','jm',ZK_RP.P().M,ZK_RP.P().J2,ZK_RP.P().M().J)
               ?};
               roundmet(BEER.MDOKL);
      {? ~_jmg
      || __zknrea.RJ2:=__zknrea.RS2:=ZK_RP.ILR*ZK_RP.P().WS2 $ {? _dokl_m<0
                                                               || exec('jaka_dok_m','jm',ZK_RP.P().M)
                                                               || _dokl_m
                                                               ?}
      || __zknrea.RJ2:=__zknrea.RS2:=ZK_RP.ILR/ZK_RP.P().WS2 $ {? _dokl_m<0
                                                               || exec('jaka_dok_m','jm',ZK_RP.P().M)
                                                               || _dokl_m
                                                               ?}
      ?};
      roundmet(5);
      __zknrea.ICON:=0;
      __zknrea.ZKN:=$ZK_RP.P().N;
      __zknrea.SQM:=$ZK_RP.P().M;
      __zknrea.CZY:=ZK_RP.MG().PAL='T';
      __zknrea.LOKZ:=ZK_RP.MG().EANL().KOD;
      __zknrea.KODK:=ZK_RP.MG().EANL().EAN;
      __zknrea.ZLSYM:=ZK_RP.P().ZL().SYM;
      __zknrea.DOST:={? _l || 2 || ZK_RP.DOST ?};
      __zknrea.NAD:=_nadgal;
      __zknrea.MGP:=ZK_RP.MG().PAL='T';
      __zknrea.TR:=ZK_RP.P().DT;
      __zknrea.WTR:=ZK_RP.P().PL_DATA;
      __zknrea.WYB:={? __zknrea.REA>0 || '*' || '' ?};
      __zknrea.ZGH:=
         {? ZK_P.ZLIM<>null() || exec('FindAndGet','#table',ZLIM,#ZK_P.ZLIM,ZK_P.M_ZLIM,"#ZGP().NRPRZ",0) || 0 ?};
      __zknrea.ZGP:={? ZK_P.ZLIM<>null() || exec('FindAndGet','#table',ZLIM,#ZK_P.ZLIM,ZK_P.M_ZLIM,"#ZGP",0) || 0 ?};
      __zknrea.ZGP_NAME:=
         {? ZK_P.ZLIM<>null()
         || exec('FindAndGet','#table',ZLIM,#ZK_P.ZLIM,ZK_P.M_ZLIM,"ZGP().NRPRZ().NRPRZ+' - '+$ZGP().NRP",0)
         || ''
         ?};
      {? ZK_RP.P().N().MG<>null
      || __zknrea.ONEMG:=$ZK_RP.P().N().MG
      |? ZK_RP.P().ILZ<>ZK_RP.P().ILP | ZK_RP.P().RMAG<>null
      || __zknrea.ONEMG:={? DISP.CTRLMG || $ZK_RP.P().RMAG || '' ?}
      || __zknrea.ONEMG:=''
      ?};
      {? __zknrea.add(1) & (~_l | _l=-1) || exec('pobstnmg','zamsiw_rea',__zknrea.ref()) ?};
      {? _l || _wyn:=__zknrea.ref() ?}
   ?}
?};
_wyn


\pobstnmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: pobiera stany na podstawie danej realizacji
::   WE: [_a] - ref __zknrea (domyslnie brak)
::       [_b] - 1-aktualizuj wg ZK_RP 0-nie (domyślnie)
::  OLD: \pobstnmg/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};
_wgzkrp:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_next:=_a=null;
{? _a=null
|| __stnmat.clear();
   {? __stnmat.first() || {! |? __stnmat.del() !} ?}
?};
_buf:=tab_tmp(1,'REF','STRING[16]','');
_zkrp:=tab_tmp(1,'REF','STRING[16]','');
__zknrea.cntx_psh();
ZK_RP.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
__zknrea.clear();
{? {? _next || __zknrea.first() || __zknrea.seek(_a) ?}
|| {!
   |? {? __zknrea.TREE<>0 & (ZK_RP.prefix(); ZK_RP.seek(__zknrea.REF))
      || {? _wgzkrp
         || {? (_zkrp.clear(); ~_zkrp.find_key($ZK_RP.ref()))
            || _zkrp.clear();
               _zkrp.REF:=$ZK_RP.ref();
               _zkrp.add(1);
               _ilr:=ZK_RP.ILR
            || _ilr:=0
            ?}
         || _ilr:=-1
         ?};
         REZ.index('ZK_P');
         REZ.prefix(ZK_RP.P,'B');
         {? REZ.first()
         || {!
            |? {? (_buf.clear(); ~_buf.find_key($REZ.ref()))
               || __stnmat.clear();
                  {? ~__stnmat.find_key($REZ.M,$REZ.MG)
                  || __stnmat.blank();
                     __stnmat.MAT:=$REZ.M;
                     __stnmat.MAG:=$REZ.MG;
                     __stnmat.ILE:=REZ.ILR;
                     __stnmat.ILR:={? _ilr<0 || REZ.ILR || _ilr ?};
                     {? _ilr>=0 || _ilr:=0 ?};
                     __stnmat.add(1)
                  || __stnmat.ILE+=REZ.ILR;
                     __stnmat.ILR+={? _ilr<0 || REZ.ILR || _ilr ?};
                     {? _ilr>=0 || _ilr:=0 ?};
                     __stnmat.put(1)
                  ?};
                  _buf.clear();
                  _buf.REF:=$REZ.ref();
                  _buf.add(1)
               ?};
               REZ.next()
            !}
         ?}
      ?};
      _next & __zknrea.next()
   !}
?};
__zknrea.cntx_pop();
obj_del(_buf);
obj_del(_zkrp);
ZK_RP.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();
~~


\spr_inw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: komuniakat w przypadku inwentaryzacji pełnej
::   WY: 1-ok 0-nie
::  OLD: \spr_inw_a/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czyinw_a','magazyn_inw',REZ.MG)
|| _wyn:=0;
   {? var_pres('__kom')>100
   || exec('add_kom','#message','Pozycja nr '+$REZ.ZK_P().POZ+' indeks: '+REZ.M().KTM,2);
      exec('add_kom','#message','- inwentaryzacja ciągła w magazynie '+REZ.MG().SYM,110)
   ?}
|| _wyn:=1
?};
_wyn


\del_zamr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: usuwa pozycje zamowienia do realizacji
::   WE: [_a] - tryb: 0(domyślnie) -d&, 1 - akcja
::  OLD: \del_zamr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};

_akt:=$BEER.ZK_N;
_ak2:='';

{? BEER.ZK_N().LIM='T'
|| __zknrea.cntx_psh();
   __zknrea.clear();
   __zknrea.prefix(0);
   {? __zknrea.first()
   || {!
      |? {? __zknrea.ZKN=_akt
         || __zknrea.next()
         || _ak2:=__zknrea.ZKN;
            0
         ?}
      !}
   ?};
   __zknrea.cntx_pop()
?};
{? ~_tryb
|| _tab:=dnd_info('dropped_records')
|| {? __zknrea.sel_size()
   || _tab:=__zknrea.sel_aget();
      __zknrea.sel_adel()
   || _tab:=tab_tmp(1,'REF','INTEGER','');
      _tab.blank();
      _tab.REF:=#__zknrea.ref();
      _tab.add(1)
   ?}
?};
:: było w warunku: FUN.ask('Czy usunąć wybrane zamówienia z listy do realizacji?'@)
{? _tab.size() & _tab.first()
|| _lst:=tab_tmp(1,'ZKN','STRING[16]','','REA','INTEGER','');

   __filtrz.cntx_psh();
   __zknrea.cntx_psh();
   ZK_N.cntx_psh();
   ZK_RP.cntx_psh();
   {!
   |? {? (__zknrea.clear; __zknrea.seek(_tab.REF,)) & (~__zknrea.TREE)
       & (_akt<>__zknrea.ZKN | (_ak2<>'' & _ak2<>__zknrea.ZKN))
      || _lst.clear();
         {? ~_lst.find_key(__zknrea.ZKN)
         || _lst.blank();
            _lst.ZKN:=__zknrea.ZKN;
            _lst.REA:=#__zknrea.ref();
            _lst.add(1)
         ?}
      ?};
      _tab.next()
   !};

   _lst.clear();
   {? _lst.first()
   || {!
      |? _all:=1;
         _zk_n:=null;
         _sym:='';
         __zknrea.clear();
         {? __zknrea.seek(_lst.REA,)
         || _korzen:=__zknrea.ref();
            __zknrea.cntx_psh();
            __zknrea.clear();
            __zknrea.prefix(_korzen);
            {? __zknrea.first()
            || {!
               |? {? __zknrea.NAD=1
                  || _korzen2:=__zknrea.ref();
                     _zkp:=null;
                     __zknrea.cntx_psh();
                     __zknrea.clear();
                     __zknrea.prefix(_korzen2);
                     {? __zknrea.first()
                     || {!
                        |? {? __zknrea.REF<>'' & (ZK_RP.clear; ZK_RP.seek(__zknrea.REF))
                           || {? _zk_n=null || _zk_n:=ZK_RP.P().N; _sym:=ZK_RP.P().N().SYM ?};
                              {? _zkp=null || _zkp:=ZK_RP.P ?};
                              __zknrea.del()
                           || _all:=0;
                              __zknrea.next()
                           ?}
                        !}
                     ?};
                     __zknrea.cntx_pop();
                     {? _all & _zkp<>null
                     || ZK_RP.index('ZK_P');
                        ZK_RP.prefix(__refrea,_zkp);
                        {? ZK_RP.first() || {! |? exec('changeDEL','zamsiw_rea'); ZK_RP.del() !} ?};
                        __zknrea.del()
                     ?}
                  |? __zknrea.NAD<>1 & __zknrea.REF<>'' & (ZK_RP.clear; ZK_RP.seek(__zknrea.REF))
                  || {? _zk_n=null || _zk_n:=ZK_RP.P().N; _sym:=ZK_RP.P().N().SYM ?};
                     _zkp:=ZK_RP.P;
                     ZK_RP.index('ZK_P');
                     ZK_RP.prefix(__refrea,_zkp);
                     {? ZK_RP.first() || {! |? exec('changeDEL','zamsiw_rea'); ZK_RP.del() !} ?};
                     __zknrea.del()
                  || _all:=0;
                     __zknrea.next()
                  ?}
               !}
            ?};
            __zknrea.cntx_pop();
            {? _all || __zknrea.del() ?};
            {? _zk_n<>null
            || exec('anul_bez','zamsiw_rea',_zk_n);
               exec('del_blk','zamsiw_nag',_zk_n);
               __filtrz.clear();
               __filtrz.prefix(_sym,$_zk_n);
               {? __filtrz.first() || {! |? __filtrz.WYB:=0; __filtrz.put(1);__filtrz.next() !} ?};
               {? _ak2<>'' & _akt=$_zk_n || BEER.ZK_N:=exec('FindAndGet','#table',ZK_N,_ak2,,,null()) ?}
            ?}
         ?};
         _lst.next()
      !}
   ?};

   obj_del(_lst);
   __filtrz.cntx_pop();
   __zknrea.cntx_pop();
   ZK_N.cntx_pop();
   ZK_RP.cntx_pop();
   grp_disp(__zknrea,__winzkr);
   exec('odsw_inf','zamsiw_rea')
?};
exec('pobstnmg','zamsiw_rea');
1


\anul_bez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: usuwa rezerwacje bez rezerwacji
::   WE: [_a] - ref zamowienia (domyslnie wszystkie zamowienia)
::       [_b] - czy aktualizowac statusy 0-tak(domyslnie) 1-nie
::       [_c] - znacznik realizacji, domyślnie __refrea
::  OLD: \anul_bez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>2 || _c:=__refrea ?} || _c:=__refrea ?};

_zkp:=tab_tmp(1,'SQL','STRING[16]','','ILR','REAL','');
ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.index('REFREA');
REZ.prefix(_c,_c,'T');
{? REZ.first()
|| {!
   |? {? _a=null | _a=REZ.ZK_P().N
      || _zkp.clear();
         {? ~_zkp.find_key($REZ.ZK_P)
         || _zkp.blank();
            _zkp.SQL:=$REZ.ZK_P;
            _zkp.ILR:=REZ.ILR;
            _zkp.add(1)
         || _zkp.ILR+=REZ.ILR;
            _zkp.put(1)
         ?};
         {? ~REZ.count()
         || REZ.del()
         || REZ.ILR:=0;
            REZ.put(1);
            REZ.next()
         ?}
      || REZ.next()
      ?}
   !}
?};
_zkp.clear();
{? _zkp.first()
|| {!
   |? {? (ZK_P.clear(); ZK_P.seek(_zkp.SQL))
      || exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
         {? ~_b
         || exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,_zkp.ILR,$ZK_P.N)
         || exec('admatzkp','rezerwacje',$ZK_P.M,ZK_P.NR,_zkp.ILR,$ZK_P.N,$ZK_P.ref())
         ?}
      ?};
      _zkp.next()
   !}
?};
ZK_N.cntx_pop();
ZK_P.cntx_pop();

obj_del(_zkp);
~~


\zknwgzl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: sprawdza czy istnieja zamowienia dla danego zlecenia
::   WE: _a - zlecenie ref
::       _b - tabela z zaznaczonymi nadrzędnymi
::   WY: 1-wiecej niz jedno 0-tylko jedno lub wogole brak 2-jesli przypisano rozne dokumenty do realizacji
::  OLD: \zknwgzl/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_tr:=ZK_N.TR;
_czym:=0;
_wgtab:=var_pres('__zknzl')=type_of(SYSLOG) & __zknzl.size();
_zazzl:=_b;

ZK_N.cntx_psh();
{? {? _wgtab || (__zknzl.clear(); __zknzl.first()) || 1 ?}
|| {!
   |? _Zlec:={? _wgtab || exec('FindAndGet','#table',ZL,__zknzl.ZL,,,null()) || _a ?};
      _nrnzl:=exec('FindAndGet','#table',ZL,_Zlec,,"NRNZL",'');
      _nadzl:=$exec('top_level','zl_link',_Zlec);

      {? _nadzl=$_Zlec | (_zazzl.clear(); _zazzl.prefix(_nadzl,); ~_zazzl.first())
      || ZK_N.index('ZLNR');
         ZK_N.prefix(_Zlec,'A')
      || ZK_N.index('NRNZL');
         ZK_N.prefix('T',BEER.ZK_N().T,_nrnzl)
      ?};
      {? ZK_N.first()
      ||
         {!
         |? {? ZK_N.AKC='T' & {? DISP.CTRLMG || ZK_N.STAN*'REA' || ZK_N.STAN<>'ZRE' ?} & ZK_N.DP<=date(ST.AR,ST.AM,0)
            || _wyn+=1;
               {? ~_czym || _czym:=_tr<>ZK_N.TR ?};
::                wypelnienie filtru zamowien
               __filtrz.clear;
               {? ~__filtrz.find_key(ZK_N.SYM,$ZK_N.ref(),)
               || __filtrz.blank();
                  __filtrz.SYM:=ZK_N.SYM;
                  __filtrz.DAT:=ZK_N.DP;
                  __filtrz.TRM:=ZK_N.DT;
                  __filtrz.ZKN:=$ZK_N.ref();
                  __filtrz.PAL:=ZK_N.MG<>null & ZK_N.MG().PAL='T';
                  __filtrz.ZLR:=$ZK_N.ZL;
                  {? BEER.ZK_N=ZK_N.ref() || __filtrz.WYB:=1 ?};
                  __filtrz.add(1)
               ?}
            ?};
            ZK_N.next()
         !}
      ?};
      {? _wgtab || __zknzl.next() || 0 ?}
   !}
?};
ZK_N.cntx_pop();
_wyn:={? _wyn>1 || {? _czym || 2 || 1 ?} || 0 ?};
_wyn


\sprzknkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy istnieja zamowienia dla danego kontrahenta gotowe do realizacji = wiecej niz dwa
::   WE: _a - kontrahent
::       _b - typ zamowienia
::       _c - magazyn (jesli paletowy) lub null
::       [_d] - tabela zamówień lub 0
::   WY: 1-wiecej niz jedno 0-tylko jedno lub wogole brak 2-jesli przypisano rozne dokumenty do realizacji
::  OLD: \sprzknkh/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_czyzam:={? var_pres('_d')=type_of(FIRMA) || _zam:=_d; 1 || 0 ?};

_wyn:=0;
_nokrs:=exec('get','#params',300114,2)='T';
BEER.KH:=_a;
_odb:=ZK_N.ODB; _rab:=ZK_N.RAB;
_wal:=ZK_N.WAL; _krs:=ZK_N.KRS;
_pl:=ZK_N.PL; _han:=ZK_N.HAN;
_cb:=ZK_N.CB; _tr:=ZK_N.TR; _czym:=0;
_nip_ue:=ZK_N.NIP_UE;
_spoblra:=ZK_N.SPOBLRAB;
_rab_typ:=ZK_N.RAB_TYP;
_spp:=ZK_N.SPP;
_mjs:=ZK_N.KH_MSC;
_kraj_vat:=ZK_N.KRAJ_VAT;
_proc:=ZK_N.PROC;

ZK_N.cntx_psh();
ZK_N.index('AKC');
ZK_N.prefix('T',_b,_a);
{? ZK_N.first()
||
   {!
   |?
      {? ZK_N.AKC='T' & {? DISP.CTRLMG || ZK_N.STAN*'REA' || ZK_N.STAN<>'ZRE' ?}
       & ZK_N.ODB=_odb & ZK_N.RAB=_rab
       & ZK_N.WAL=_wal & (ZK_N.KRS=_krs | _nokrs)
       & ZK_N.PL=_pl & ZK_N.HAN=_han
       & ZK_N.CB=_cb & ZK_N.DP<=date(ST.AR,ST.AM,0)
       & ({? ~_czym || _czym:=_tr<>ZK_N.TR ?}; 1)
       & ZK_N.NIP_UE=_nip_ue
::       & {? ZK_N.MG<>null || ZK_N.MG().PAL<>'T' || 1 ?}
       & ZK_N.SPOBLRAB=_spoblra
       & ZK_N.RAB_TYP=_rab_typ
       & ZK_N.SPP=_spp
       & ZK_N.KH_MSC=_mjs
       & ZK_N.KRAJ_VAT=_kraj_vat
       & ZK_N.PROC=_proc
       & {? _c<>null || ZK_N.MG=_c |? ZK_N.MG<>null || ZK_N.MG().PAL='N' || 1 ?}
       & {? _czyzam || _zam.clear(); _zam.prefix(ZK_N.uidref()); _zam.first() || 1 ?}
      || _wyn+=1;
::       wypelnienie filtru zamowien
         __filtrz.clear;
         __filtrz.blank();
         __filtrz.SYM:=ZK_N.SYM;
         __filtrz.DAT:=ZK_N.DP;
         __filtrz.TRM:=ZK_N.DT;
         __filtrz.ZKN:=$ZK_N.ref();
         __filtrz.PAL:=ZK_N.MG<>null & ZK_N.MG().PAL='T';
         {? BEER.ZK_N=ZK_N.ref() || __filtrz.WYB:=1 ?};
         __filtrz.add(1)
      ?};
      ZK_N.next()
   !}
?};
ZK_N.cntx_pop();
_wyn:={? _wyn>1 || {? _czym || 2 || 1 ?} || 0 ?};
_wyn


\sprzwydz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza czy istnieja zamowienia dla danego zlecenia/wydzialu gotowe do realizacji = wiecej niz dwa
::   WE: _a - wydzial
::       _b - typ zamowienia
::       _c - zlecenie
::      [_d] - tylko realizowane dokumentami typu zdefiniowanego na aktualnym zamowieniu (1) lub domyslnie wszystkie (0)
::      [_e] - dodatkowy warunek sprawdzany podczas zbierania zamowien wewnetrznych
::       _f - magazyn lub null
::   WY: 1-wiecej niz jedno 0-tylko jedno lub wogole brak 2-jesli przypisano rozne dokumenty do realizacji
::  OLD: \sprzwydz/zkw.fml
::----------------------------------------------------------------------------------------------------------------------
_onetype:={?_>3 & type_of(_d)=1 || _d || 0 ?};
_zlwar:={?_>4 & type_of(_e)=type_of("") || _e || "" ?};
_nrnzl:=exec('FindAndGet','#table',ZL,_c,,"NRNZL",0);
_nadzl:=$exec('top_level','zl_link',_c);

_wyn:=0;
_tr:=ZK_N.T().TYPYDOK;
_czym:=0;
_mg:=ZK_N.MG;

ZK_N.cntx_psh();
{? _nrnzl & _nadzl<>$_c
|| ZK_N.index('NRNZL');
   ZK_N.prefix('T',_b,_nrnzl)
|| ZK_N.index('AKCW');
   {? _zlwar=""
   || ZK_N.prefix('T',_b,_a,_c)
   || ZK_N.prefix('T',_b)
   ?}
?};
{? ZK_N.first()
|| {!
   |? {? ZK_N.AKC='T' & {? DISP.CTRLMG || ZK_N.STAN*'REA' || ZK_N.STAN<>'ZRE' ?}
        & ZK_N.DP<=date(ST.AR,ST.AM,0)
        & {? _mg<>null() || _mg=ZK_N.MG |? ZK_N.MG<>null || ZK_N.MG().PAL<>'T' || 1 ?}
        & (~_onetype | ZK_N.T().TYPYDOK=_tr)
        & (ZK_N.ZL=null() | ZK_N.ZL().STAN='O')
        & ({? _zlwar<>"" || _zlwar() || 1 ?})
        & ({? ~_czym || _czym:=_tr<>ZK_N.T().TYPYDOK ?}; 1)
        & {? _f<>null || ZK_N.MG=_f |? ZK_N.MG<>null || ZK_N.MG().PAL='N' || 1 ?}
      || _wyn+=1;
::       wypelnienie filtru zamowien
         __filtrz.clear;
         __filtrz.blank();
         __filtrz.SYM:=ZK_N.SYM;
         __filtrz.DAT:=ZK_N.DP;
         __filtrz.TRM:=ZK_N.DT;
         __filtrz.ZKN:=$ZK_N.ref();
         __filtrz.ZLSYM:=ZK_N.ZL().SYM;
         __filtrz.ZLR:=$ZK_N.ZL;
         {? BEER.ZK_N=ZK_N.ref() || __filtrz.WYB:=1 ?};
         __filtrz.add(1)
      ?};
      ZK_N.next()
   !}
?};
ZK_N.cntx_pop();
_wyn:={? _wyn>1 || {? _czym || 2 || 1 ?} || 0 ?};
_wyn


\wyst_zwz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: procedura wystawia dokumenty magazynowe dla zamówienia klienta/wewnętrznego
::   WE: [_a] - czy wystawiac dokument sprzedazy _a=2 wg limitow
::       [_b] - ND.ref() - naglowek dokumentu, do ktorego ma byc dolaczana realizacja lub dla _a=2 ZL.ref()
::       [_c] - wyswietlac okienko z iloscia do realizacji 1 - tak (domyslnie)
::              2 - tryb e-kiosk - wejście
::              3 - tryb e-kiosk - zakończenie
::       [_d] - formula warunku dla pozycji
::       [_e] - powołane w procesie - przepisać pozycje z wszystkich zamówień
::       [_f] - zlecenie nadrzędne lub null()
::       [_g] - dyspozycja w magazynie, domyślnie brak
::       [_h] - ZGP.ref() domyślnie null()
::  OLD: \wyst_zwz/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_NDref:={? _>1 & type_of(_b)=7 & 5+ref_name(_b)='nagdo' || _b || null() ?};
_ZLref:={? _>1 & type_of(_b)=7 & 5+ref_name(_b)='zlec_' || _b || null() ?};
_selrea:={? _>2 & type_of(_c)=1 || _c || 1 ?};

_zlwar:={? _>3 & type_of(_d)=type_of("") || _d || "1" ?};
_allZam:={? _>4 & type_of(_e)=type_of(0) || _e || 0 ?};
_ZLwej:={? _>5 & type_of(_f)=7 & 5+ref_name(_b)='zlec_' || _f || null() ?};

_tr_nzl:={? var_pres('_g')=type_of(null()) || _g || null() ?};

_ekiosk:={? var_pres('_c')=type_of(0) & _c>1 || _c || 0 ?};
_zgp:={? var_pres('_h')=type_of(null()) || _h || null() ?};

{? (_allZam=1 & _ZLref<>null() & exec('top_rodzaj','zl_link',_ZLref)='N') | _tr_nzl<>null() || _allZam:=2 ?};

VAR_DEL.delete('__refrea');
exec('init_blk','zamsiw_nag');

__refrea:=($ZK_N.tm_stamp())+($OPERATOR.USER);

_rescopy:=0;
BEER.UIDDOK:='';
BEER.ZK_N:=ZK_N.ref();
BEER.WG:=ZK_N.WG;
_kh:=ZK_N.KH;
_odb:=ZK_N.ODB;
BEER.TYP:='Z';
ZAKR.TYPYSP:=ZK_N.TR().T;
_magnd:={? _NDref<>null() || exec('FindAndGet','#table','ND',$_NDref,,"MAG",null()) || null() ?};

{? {? ZK_N.LIM='T' || exec('zl_lock','zl_common',#ZK_N.ZL,'L',1)=0 || 0 ?}
|| _ses_id:=exec('zl_lock_sesid','zl_common',#ZK_N.ZL,'L');
   FUN.info(
      'Zapotrzebowania do zlecenia powiązanego z zamówieniem są redagowane '
      'przez użytkownika \'%1\' na terminalu: \'%2\'.'@
      [SYSLOG.ses_info(_ses_id,'log_name'),SYSLOG.ses_info(_ses_id,'log_tty')]
   )

|? exec('add_blk','zamsiw_nag',ZK_N.ref())
||
   ZK_N.cntx_psh();
   exec('utw_zk_tymc','zamsiw_wspolne');
   {? ZK_N.T().R='Z' || exec('zp_spr_c','zamsiw_nag') ?};
   _war_be:=ZK_N.BRT;
   exec('buf_stap','zamsiw_wspolne',BEER.ZK_N,BEER.TYP);
   _fk:={? _=0 || 0 || _a=1 ?};
   _czypal:=ZK_N.MG().PAL='T';
   _rescopy:=exec('copy_poz','zamsiw_rea',BEER.ZK_N,__refrea,,,1,1,_a=2,_magnd,_zlwar,_tr_nzl,_zgp);

   exec('akt_rezy','rezerwacje');

   ZK_RP.index('NAGA');
   ZK_RP.prefix(__refrea,null);
   {? ZK_RP.first() | _allZam=2
   ||
::    komunikaty
      exec('end_kom','#message');
      exec('pobstnmg','zamsiw_rea');
      {? _czypal
      || VAR_DEL.delete('__dostpal','__dkc');
         __dostpal:=tab_tmp(2,'PAL','STRING[16]',''
                     ,'M','STRING[16]',''
                     ,'ILR','REAL',''
                     ,'ILP','REAL',''
                     ,'RDK','REAL',''
                     ,'NDK','STRING[8]',''
                     ,'KOD','STRING[30]',''
                     ,'LOK','STRING[30]',''
                     ,'TW','DATE',''
                     ,'PALDO','STRING[16]',''
                     ,'POZ','STRING[16]',''
                     ,'ROZPAL','INTEGER','');
         __dkc:=tab_tmp(3,'MAT','STRING[16]',''
                 ,'DKC','STRING[16]',''
                 ,'ILE','REAL','');
         __zknrea.win_sel(__zkrwi2);
         exec('infwgpal','zamsiw_rea',_tr_nzl);
         {? (ZK_N.T().R='Z' & exec('get','#params',600707,2)='T')
          | (ZK_N.T().R='W' & exec('get','#params',600708,2)='T')
         || {? _ekiosk<>2 || exec('initRozpPAL','zamsiw_palety',_tr_nzl) ?}
         ?};
         {? _ekiosk=2
         || ''
         |? __zknrea.first() & __zknrea.select()
         || _wybpal:=0;
            __palkpl.clear();
            {? __palkpl.first()
            || {!
               |? _wybpal:=__palkpl.WYB;
                  ~_wybpal & __palkpl.next()
               !}
            ?};
            {? _wybpal>0
            || {? ZK_N.MG().TYP*'DOST'
               || exec('dost2pal','zamsiw_rea',_ekiosk=3);
                  ZK_RP.index('NAGA');
                  ZK_RP.prefix(__refrea,null);
                  {? ZK_RP.first()
                  || {!
                     |? {? ZK_RP.M().RODZ='U' & ZK_RP.W='*'
                        || ZK_RP.next()
                        || ZK_RP.del()
                        ?}
                     !}
                  ?};
                  exec('anul_bez','zamsiw_rea',,1);
                  exec('akt_stap','zamsiw_wspolne',BEER.ZK_N,BEER.TYP);
                  exec('pal2dost','zamsiw_palety');
                  ''
               ?}
            || {? _wybpal=0
               || FUN.info('Nie wybrano palet do realizacji zamówienia.\nRealizacja niemożliwa.'@)
               || FUN.info('W magazynie %1 brak palet do realizacji zamówienia.'
                           '\nRealizacja niemożliwa.'@[ZK_N.MG().SYM])
               ?};
               ZK_RP.index('NAGA');
               ZK_RP.prefix(__refrea,null);
               {? ZK_RP.first() || {! |? ZK_RP.del() !} ?};
               exec('anul_bez','zamsiw_rea',,1);
               exec('akt_stap','zamsiw_wspolne',BEER.ZK_N,BEER.TYP,1)
            ?}
         || _czypal:=-1
         ?}
      ?};
      {? _ekiosk<>2 || VAR_DEL.delete('__dkc') ?};
      {? (_allZam=2 | (_allZam & _ZLwej<>null() & exec('FindAndGet','#table',ZL,_ZLwej,,"RODZAJ",'')<>'P'))
       & (__filtrz.clear(); __filtrz.first)
      || {!
         |? {? ~__filtrz.WYB
             & (_allZam=2 | exec('comp_podzlec','zl_link',exec('FindAndGet','#table',ZL,__filtrz.ZLR,,,null()),_ZLwej))
            || exec('add_zamr','zamsiw_rea',$__filtrz.ref(),_allZam=2,,_tr_nzl)
            ?};
            __filtrz.next()
         !}
      ?};
      {? _ekiosk=2
      || ''
      |? {? _czypal>0 || _wybpal>0 |? _czypal<0 || 0 || ~_selrea | (__zknrea.size() & __zknrea.select()) ?}
      || {? _selrea
         || __zknrea.clear();
            __zknrea.for_each("{? __zknrea.TREE<>0
                               || {? BUFMG.f_active() & BUFMG.f_first()
                                  || {! |? exec('pwdorea','rezerwacje'); BUFMG.f_next() !}
                                  ?}
                               ?}",0)
         ?};
:: sprawdzenie czy wszystkie nagłówki mają wpisane te same projekty
         ZK_RP.cntx_psh();
         ZK_P.cntx_psh();
         ZK_N.cntx_psh();
         _projekty:=null();
         {? ZK_RP.first()
         || {? ZK_RP.P().N().PROJEKTY<>null() || _projekty:=ZK_RP.P().N().PROJEKTY ?};
            {? _projekty<>null() & ZK_RP.next()
            || {!|?
                  {? ZK_RP.P().N().PROJEKTY<>_projekty || _projekty:=null() ?};
                  ZK_RP.next() & _projekty<>null()
               !}
            ?}
         ?};
         ZK_RP.cntx_pop();
         ZK_P.cntx_pop();
         ZK_N.cntx_pop();

         exec('add_doki','zamsiw_rea',_fk,_kh,_odb,__refrea,,_NDref,,,,,_tr_nzl,_projekty);
         ZK_RP.index('NAGA');
         ZK_RP.prefix(__refrea,null);
         {? ZK_RP.first() || {! |? ZK_RP.del() !} ?};
         exec('anul_bez','zamsiw_rea',,1);
         {? _tr_nzl<>null() & BEER.UIDDOK<>'' || exec('realDYSPdok','transport',_tr_nzl,BEER.UIDDOK) ?}
      ||
         {? _allZam=2 & ~__zknrea.size()
         ||  FUN.info('Niemożliwe wydanie dla wybranych zleceń.\n'
                      'Niewłaściwy stan zleceń lub brak surowców wg limitów.'@)
         ?};
::       gdyby cos jednak pozostalo
         ZK_RP.index('NAGA');
         ZK_RP.prefix(__refrea,null);
         {? ZK_RP.first() || {! |? ZK_RP.del() !} ?};
         exec('anul_bez','zamsiw_rea',,1)
      ?};

::    gdyby cos jednak pozostalo
      {? _ekiosk<>2
      || ZK_RP.index('NAGA');
         ZK_RP.prefix(__refrea,null);
         {? ZK_RP.first()
         || {! |? ZK_RP.del() !};
            exec('anul_bez','zamsiw_rea',,1)
         ?};
         exec('akt_rezy','rezerwacje')
      ?}
   |? ~_czypal
   || {? _ekiosk=2
      || ''
      |? _NDref=null()
      || exec('chk_uzam','zamsiw_rea',ZK_N.T().R='W')
      || FUN.info('Brak pozycji do realizacji w magazynie dokumentu: %1.'@[ND.MAG().SYM])
      ?}
   |? _czypal
   || FUN.info('Brak pozycji do realizacji w magazynie: %1.'@[ZK_N.MG().SYM])
   ?};
   POM.TAB:='ZK_N';
   POM.TYPDOK:=BEER.TYPYZAM().KOD;
   exec('akt_stap','zamsiw_wspolne',BEER.ZK_N,BEER.TYP);
:: aktualizujemy stany na danych materialach
   {? var_pres('__mat_mag')>100 || exec('wgmatmag','magazyn_stan') ?};

::   exec('obl_warz','zkd',BEER.ZK_N,,1);
   {? var_pres('__zam')>100 || exec('odt_zk_tymc','zamsiw_wspolne') ?};
   ZK_N.cntx_pop();
   exec('open','open_tab',ST.ODDZ_KOD,2-$ST.AR)
|| {? FUN.ask('Zamówienie obsługuje inny operator.\nCzy chcesz zobaczyć kto?'@) & ZK_N.r_lock()
   || ZK_N.r_unlock()
   ?}
?};
{? _ekiosk<>2
|| BUFMG.f_clear();
   exec('done_blk','zamsiw_nag');
   {? ZK_N.LIM='T' || exec('zl_unlock','zl_common',#ZK_N.ZL,'L') ?};
   VAR_DEL.delete('__refrea')
?};
''


\infwgpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: zbudowanie okienka palet dla danego zamowienia
::   WE: [_a] - null() lub TR_NZL.ref()
::       [_b] - wskazanie na konkretną paletę - kod palety
::  OLD: \infwgpal/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_tr_nzl:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_id_nzl:={? _tr_nzl<>null() || exec('FindAndGet','#table',TR_NZL,_tr_nzl,,"uidref()",'') || null() ?};

_pkod:={? var_pres('_b')=type_of('') & (+_b)>0 || _b || '' ?};

BEER.AKTZKN:=$BEER.ZK_N;
_reftree:=null;
__zknrea.cntx_psh();
SL.cntx_psh();
PAL.cntx_psh();
PAL_POZ.cntx_psh();
__zknrea.clear();
{? __zknrea.first()
|| BEER.AKTZKN:=__zknrea.ZKN;
   {!
   |? {? __zknrea.TREE<>0
      || __zrekpl.clear();
         __zrekpl.prefix(BEER.AKTZKN);
         {? __zrekpl.find_key(__zknrea.KTM,__zknrea.KTM)
         || __zrekpl.ILR+=__zknrea.REA;
            __zrekpl.ILP+=__zknrea.REA;
            __zrekpl.put(1)
         || __zrekpl.blank();
            __zrekpl.ZKN:=BEER.AKTZKN;
            __zrekpl.KTM:=__zrekpl.KT2:=__zknrea.KTM;
            __zrekpl.NAZ:=__zknrea.NAZ;
            __zrekpl.ILR:=__zknrea.REA;
            __zrekpl.ILW:=0;
            __zrekpl.ILP:=__zknrea.REA;
            __zrekpl.JM:=__zknrea.JM1;
            __zrekpl.add(1)
         ?};
         ZK_RP.cntx_psh();
         ZK_RP.clear();
         {? ZK_RP.seek(__zknrea.REF)
         || _refdkc:=$ZK_RP.P().DK_C;
            __dkc.clear();
            __dkc.blank();
            __dkc.MAT:=$exec('FindInSet','#table','M','MATKTM',__zknrea.KTM,__zknrea.KTM);
            __dkc.DKC:=_refdkc;
            __dkc.ILE:=__zknrea.REA;
            __dkc.add(1)
         ?};
         ZK_RP.cntx_pop()
      || _reftree:=__zknrea.ref()
      ?};
      __zknrea.next()
   !}
?};

:: wypelnia tabele palet wg materialow do realizacji
__zrekpl.clear();
{? __zrekpl.first()
|| _lok:=tab_tmp(2,'KOD','STRING[30]',''
          ,'KO2','STRING[30]','');
   {!
   |? _mat:=exec('FindInSet','#table','M','MATKTM',__zrekpl.KTM,__zrekpl.KTM);
      {? _mat<>null
      || SL.index('PALM');
         SL.prefix(BEER.ZK_N().MG,_mat);
         {? SL.first() & (_pkod='' | (_pkod<>'' & SL.find_tab('first','PAL','KODK','=',_pkod)))
         || {!
            |? _palz:=0;
               {? SL.EANL<>null & SL.PAL<>null & SL.PAL().AKT='T'
                & (_palz:=exec('spr_palz','zamsiw_palety',BEER.ZK_N,SL.PAL,_id_nzl))>0
                & (__palkpl.index(__palki1); ~__palkpl.find_key(BEER.AKTZKN,0,SL.PAL().KODK,$SL.PAL))
               || __zrekpl.cntx_psh();
                  _tak:=-1;
                  _buf:=tab_tmp(1,'MAT','STRING[16]','');
                  {? SL.PAL().AKT='N'
                  || PAL_POZ.use('palet'+form(SL.PAL().AR-2000,-2,0,'99'))
                  || PAL_POZ.use('paletyp')
                  ?};
                  PAL_POZ.index('PAL');
                  PAL_POZ.prefix(SL.PAL);
                  {? PAL_POZ.first()
                  || {!
                     |? _buf.clear();
                        {? ~_buf.find_key($PAL_POZ.M)
                        || _buf.blank();
                           _buf.MAT:=$PAL_POZ.M;
                           _buf.add(1);
                           _ile:=0;
                           _ktm:=PAL_POZ.M().KTM;
                           PAL_POZ.cntx_psh();
                           PAL_POZ.index('PAL');
                           PAL_POZ.prefix(SL.PAL,_ktm,_ktm);
                           {? PAL_POZ.first() || {! |? _ile+=PAL_POZ.ILP; PAL_POZ.next() !} ?};
                           PAL_POZ.cntx_pop();
                           {? _ile>0
                           || __zrekpl.clear();
                              __zrekpl.prefix(BEER.AKTZKN);
                              {? __zrekpl.find_key(_ktm,_ktm)
                              || _tak:=__zrekpl.ILR>=_ile
                              || _tak:=0
                              ?}
                           ?}
                        ?};
                        _tak<=0 & PAL_POZ.next()
                     !}
                  ?};
                  obj_del(_buf);
                  __zrekpl.cntx_pop();
                  {? _tak>0
                  || __palkpl.clear();
                     __palkpl.blank();
                     __palkpl.ZKN:=BEER.AKTZKN;
                     __palkpl.LP:=0;
                     __palkpl.KOD:=SL.PAL().KODK;
                     __palkpl.SQL:=$SL.PAL;
                     __palkpl.LOK:=SL.EANL().KOD;
                     __palkpl.WYB:=0;
                     __palkpl.BLK:=0;
                     __palkpl.WYD:=SL.PAL().W;
                     __palkpl.KPL:=exec('czynakpl','magdok_palety',SL.PAL);
                     __palkpl.KTM:=SL.PAL().MKTM;
                     {? __palkpl.add(1)
                     || _okpal:=1;
                        PAL_POZ.index('PAL');
                        PAL_POZ.prefix(SL.PAL);
                        {? PAL_POZ.first()
                        || {!
                           |? __pozkpl.clear();
                              __pozkpl.blank();
                              __pozkpl.SQL:=$__palkpl.ref();
                              __pozkpl.KTM:=PAL_POZ.M().KTM;
                              __pozkpl.NAZ:=PAL_POZ.M().N;
                              __pozkpl.ILE:=PAL_POZ.ILP;
                              __pozkpl.JM:=PAL_POZ.JM().KOD;
                              __pozkpl.CEN:=PAL_POZ.C;
                              __pozkpl.TW:=PAL_POZ.TW;
                              {? PAL_POZ.SCSQL<>''
                              || _dost:=(8+PAL_POZ.SCSQL)+form(BB.sqlint(PAL_POZ.SCSQL),-8,0,'99')
                              || _dost:=exec('last_dst','magdok_palety',PAL_POZ.M,PAL_POZ.PAL,PAL_POZ.C,PAL_POZ.DK_C
                                    ,PAL_POZ.IL)
                              ?};
                              __pozkpl.RDK:=#form(8-_dost);
                              __pozkpl.NDK:=form(8+_dost);
                              _tab:=exec('aktrdndk','magdok_palety',SL.MG,__pozkpl.RDK,__pozkpl.NDK,SL.PAL);
                              __pozkpl.RDK:=_tab[1];
                              __pozkpl.NDK:=_tab[2];
                              obj_del(_tab);
                              __pozkpl.M:=$PAL_POZ.M;
                              __pozkpl.PQL:=$PAL_POZ.PAL;
                              __pozkpl.POZ:=$PAL_POZ.ref();
                              __pozkpl.DKC:=exec('czyp_dkc','magdok_palety',$PAL_POZ.M,PAL_POZ.DK_C,PAL_POZ.ILP,__dkc);
                              __pozkpl.SDK:={? PAL_POZ.DK_C<>null() || PAL_POZ.DK_C().SYM || '' ?};
                              {? __pozkpl.DKC='A'
                              || __pozkpl.add(1);
                                 PAL_POZ.next()
                              || _okpal:=0;
                                 0
                              ?}
                           !}
                        ?};
                        {? ~_okpal
                        || __palkpl.del()
                        || {? _palz=2 || exec('wybzkkpl','zamsiw_palety',1,1) ?}
                        ?}
                     ?}
                  ?}
               ?};
               SL.next() & _pkod=''
            !}
         ?}
      ?};
      __zrekpl.next()
   !};
   exec('blkzkkpl','zamsiw_palety');
:: sort wg lokalizacji palet
   {? ZK_N.MG().MWS='T' & __zrekpl.first() & (_typ_lok:=ZK_N.MG().SP_REANL; _typ_lok<>'N')
   || _loki:=tab_tmp(2,'LOK','STRING[30]',''
              ,'LO2','STRING[30]',''
              ,'LP','INTEGER','');
      _wgmggr:=ND.MAG().WGMGGR='T';
      _lp:=0;
      {!
      |? _sort:=exec('sort_sl','magazyn_stan',_typ_lok,_wgmggr,ZK_N.MG
                 ,exec('FindInSet','#table','M','MATKTM',__zrekpl.KTM,__zrekpl.KTM),ZK_N.DLAKH,,,,1);
         {? _sort.size() & _sort.first()
         || {!
            |? _lokz:=exec('FindAndGet','#table','EANL',_sort.EAN,,"KOD",'');
               _loki.clear();
               {? ~_loki.find_key(_lokz,_lokz)
               || _lp+=1;
                  _loki.blank();
                  _loki.LOK:=_loki.LO2:=_lokz;
                  _loki.LP:=_lp;
                  _loki.add(1)
               ?};
               _sort.next()
            !}
         ?};
         obj_del(_sort);
         __zrekpl.next()
      !};
      __palkpl.cntx_psh();
      _ndx:=__palkpl.ndx_tmp('',0,'LOK',,0,'LOK',,0,'KOD',,0);
      __palkpl.index(_ndx);
      {? __palkpl.first() & _loki.size()
      || {!
         |? _loki.clear();
            {? _loki.find_key(__palkpl.LOK,__palkpl.LOK)
            || __palkpl.LP:=_loki.LP;
               __palkpl.put(1)
            ?};
            __palkpl.next()
         !}
      ?};
      __palkpl.ndx_drop(_ndx);
      __palkpl.cntx_pop();
      obj_del(_loki);
      __palkpl.first()
   ?}
?};
__zknrea.cntx_pop();
SL.cntx_pop();
PAL.cntx_pop();
PAL_POZ.cntx_pop();
VAR_DEL.delete(__dkc);
exec('oblrepal','zamsiw_rea',_reftree);
~~


\dost2pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizacja wg dostaw
::   WE: [_a] - 1-tryb eKiosku, 0(domyslnie)-nie
::  OLD: \dost2pal/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_mode:={? var_pres('_a')=type_of(0) || _a || 0 ?};

{? var_pres('__dostpal')>0
|| _magdost:=(1+BEER.ZK_N().MG().TYP)='D';
   __dostpal.clear();
   {? __dostpal.first() || {! |? __dostpal.del() !} ?};
   __palkpl.clear();
   {? __palkpl.first()
   || {!
      |? {? __palkpl.WYB
         || _bez:=__palkpl.BEZ;
            {? ~_bez
            || __pozkpl.clear();
               __pozkpl.prefix($__palkpl.ref());
               {? __pozkpl.first()
               || {!
                  |? __dostpal.clear();
                     __dostpal.blank();
                     __dostpal.PAL:=__palkpl.SQL;
                     __dostpal.LOK:=__palkpl.LOK;
                     __dostpal.M:=__pozkpl.M;
                     __dostpal.ILR:=__pozkpl.ILE;
                     __dostpal.ILP:=__pozkpl.ILE;
                     __dostpal.RDK:=__pozkpl.RDK;
                     __dostpal.NDK:=__pozkpl.NDK;
                     __dostpal.KOD:=__palkpl.KOD;
                     __dostpal.TW:=__pozkpl.TW;
                     __dostpal.PALDO:='';
                     __dostpal.POZ:=__pozkpl.POZ;
                     __dostpal.add(1);
                     __pozkpl.next()
                  !}
               ?}
            || _ileroz:=__palkpl.ILW;
               __pozkpl.clear();
               __pozkpl.prefix($__palkpl.ref());
               {? __pozkpl.first()
               || {!
                  |? _ilepal:={? ~_mode || __pozkpl.ILE || __pozkpl.ROZ ?};
                     {? _ilepal>=_ileroz & {? _magdost || __pozkpl.RDK || 1 ?}
                     || __dostpal.clear();
                        __dostpal.blank();
                        __dostpal.PAL:=__pozkpl.PQL;
                        __dostpal.LOK:=__pozkpl.NAZ;
                        __dostpal.M:=__pozkpl.M;
                        __dostpal.ILR:=_ileroz;
                        __dostpal.ILP:=_ileroz;
                        __dostpal.RDK:=__pozkpl.RDK;
                        __dostpal.NDK:=__pozkpl.NDK;
                        __dostpal.KOD:=__pozkpl.KTM;
                        __dostpal.TW:=__pozkpl.TW;
                        __dostpal.PALDO:=__palkpl.PQL;
                        __dostpal.POZ:=__pozkpl.POZ;
                        __dostpal.add(1);
                        _ileroz:=0
                     |? _ilepal>0 & {? _magdost || __pozkpl.RDK || 1 ?}
                     || __dostpal.clear();
                        __dostpal.blank();
                        __dostpal.PAL:=__pozkpl.PQL;
                        __dostpal.LOK:=__pozkpl.NAZ;
                        __dostpal.M:=__pozkpl.M;
                        __dostpal.ILR:=_ilepal;
                        __dostpal.ILP:=_ilepal;
                        __dostpal.RDK:=__pozkpl.RDK;
                        __dostpal.NDK:=__pozkpl.NDK;
                        __dostpal.KOD:=__pozkpl.KTM;
                        __dostpal.TW:=__pozkpl.TW;
                        __dostpal.PALDO:=__palkpl.PQL;
                        __dostpal.POZ:=__pozkpl.POZ;
                        __dostpal.add(1);
                        _ileroz-=_ilepal
                     ?};
                     _ileroz>0 & __pozkpl.next()
                  !}
               ?}
            ?}
         ?};
         __palkpl.next()
      !}
   ?}
?};
~~


\add_doki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wystawia dokumenty dla zamowienia (magazynowe i sprzedazy)
::   WE: _a - czy wystawiac dokument sprzedazy
::       _b - ref kontrahenta
::       _c - ref odbiorcy
::       _d - id zaznaczenia
::       [_e]- ref EANN - w przypadku realizacji na podstawie czytnikow - domyslnie null
::       [_f]- ND.ref() - naglowek, do ktorego beda generowane pozycje realizacji
::       [_g] - 1-realizacja automatyczna na podstawie operacji mobilnej 0(domyslnie)-nie
::       [_h] - tabela ilosci pozostalych
::       [_i] - klucz grupujący
::       [_j] - tabela operacji mobilnych
::       [_k] - ref TR_NZL - w przypadku realizacji na podstawie dyspozycji - domyślnie null()
::       [_l] - ref PROJEKTY - domyślnie null
::       [_m] - domyślnie 0, 1-realizacja z e-kiosku
::   WY: 1/0
::  OLD: \add_doki/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=5 || {? type_of(_e)<>7 || _e:=null ?} || _e:=null ?};
{? _>=6 || {? type_of(_f)<>7 || _f:=null ?} || _f:=null ?};
{? _>=7 || {? type_of(_g)<>1 || _g:=0 ?} || _g:=0 ?};
{? _>=8 || {? type_of(_h)<>118 || _h:=0 ?} || _h:=0 ?};
{? _>=9 || {? type_of(_i)<>2 || _i:='' ?} || _i:='' ?};
{? _>=10 || {? type_of(_j)<>118 || _j:=0 ?} || _j:=0 ?};
_tr_nzl:={? var_pres('_k')=type_of(null()) || _k || null() ?};
{? _>=12 || {? type_of(_l)<>7 || _l:=null ?} || _l:=null ?};
_ekiosk:={? var_pres('_m')=type_of(0) || _m || 0 ?};

BEER.MJSLOG:='REA';
_poz2dk:=type_of(_h)=118 & _h.size();
_wgeans:=type_of(_j)=118 & _j.size();
_refreo:=null();
_wgdysp:=_tr_nzl<>null();

:: generuje zapisy dla ZK_RP wg pozycji dodatkowych
{? _poz2dk & _wgeans
 & (_h.prefix(); {? _h.first() || exec('FindAndGet','#table',ZK_P,_h.ZKP,,"N().MG().PAL",'N')<>'T' || 0 ?})
|| exec('przepZK_RP','zamsiw_rea',_h)
?};

_NDref:=_f;

_komunik:=~(_e<>null & _g);
_czyzlec:=var_pres('__lstlim')>117 & __lstlim.size()>0;

_done:="
   VAR_DEL.delete('__eanpils','__iledk','__iledk_l');
   VAR_DEL.delete('__zknrtk','__zknntk','__zknbtk','__zkndtk','__zknswa','__zknkrs')";
_done();

__eanpils:=tab_tmp(1,'EANP','STRING[16]',''
            ,'ILR','REAL','');

ZAKR.ID_ZAZ:=_d;
_fk:={? _=0 || 0 || _a ?};

_bzk_n:=BEER.ZK_N;
_tnre:=tab_tmp(1,'RSQL','STRING[20]','');
_tzam:=tab_tmp(1,'RSQL','STRING[20]','');

_nawigten:=BEER.NAWIGTEN;

_war:='"TYPYSP".ZAL_ROZ<>\'S\' and "TYPYSP".KOR=\'N\' and "TYPYSP".ZAL=\'N\' and "TYPYSP".ZAK=\'N\' '+
  'and "TYPYSP".FIS=\''+ZK_N.CB+{? ZK_N.WAL<>INFO.NAROD || '\' and "TYPYSP".SPP=\''+ZK_N.SPP+'\'' || '\'' ?};
_war+={? ZK_N.TR<>null || ' and "TYPYSP".T=\''+ZK_N.TR().T+'\'' || '' ?};
HELP.TYPS:={? _a || exec('tsp_upr','typysp',_war,,0,,1) || null ?};
_typ:=ZAKR.TYPYSP:=HELP.TYPS().T;

_typm:={? ZK_N.T().TYPYDOK<>null || ZK_N.T().TYPYDOK().T || '' ?};

{? _d='' & BEER.ZK_N().MG<>null & BEER.ZK_N().MG().PAL='T'
|| {? ZK_RP.first()
   || {!
      |? {? ZK_RP.W='*' & ZK_RP.MG=BEER.ZK_N().MG
         || ZK_RP.next()
         || ZK_RP.del()
         ?}
      !}
   ?}
?};
_isUSL:=0;
ZK_RP.cntx_psh();
{? ZK_RP.first()
|| {!
   |? _isUSL:=ZK_RP.W='*' & ZK_RP.P().M().RODZ='U' & (ZK_RP.P().RODZ='W' | ZK_RP.MG().U='N') & ZK_RP.ILR>0;
      ~_isUSL & ZK_RP.next()
   !}
?};
{? _g & _e<>null
|| EANN.cntx_psh();
   EANN.clear();
   {? EANN.seek(_e)
   || _in:=params_get().in;
      ZAKR.DR:=EANN.DATA+_in.OKR;
      ZAKR.TYPYDOK:=exec('FindAndGet','#table',TYPYDOK,_in.TYPYDOK,,"T",'');
      ZAKR.TYPYSP:='';
      ZAKR.MD:=_in.MD;
      EANX.BEZTW:=_in.CZYTW='T';
      _oki:=1
   ?};
   EANN.cntx_pop()
|| _oki:=exec('zakr_zkn','zamsiw_rea',_a,_typm,ZAKR.TYPYSP,_e<>null,BEER.ZK_N().T().R='W'
          ,_NDref=null(),_NDref=null(),_ekiosk)
?};
::Aktualizacja cen na pozycjach
{? _oki || {? exec('get','#params',300806)='T'|| exec('zkp_cen_akt','zamsiw_rea') ?} ?};
BEER.NAWIGTEN:=_nawigten;
__zknswa:=ZK_N.SWAL;
__zknkrs:=ZK_N.KRS;
__zknrtk:=ZK_N.RTK;
__zknntk:=ZK_N.NTK;
__zkndtk:=ZK_N.DTK;
__zknbtk:=ZK_N.BTK;
_typ:=exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TYPYDOK,ZAKR.TYPYDOK);
_stzero:=
   exec('FindInSet','#table','TYPYSP','TYPYKOD',ZAKR.TYPYSP,ZAKR.TYPYSP,"TYPYSP.EXPORT",,,'')='T'
   |  exec('FindInSet','#table','TYPYSP','TYPYKOD',ZAKR.TYPYSP,ZAKR.TYPYSP,"TYPYSP.UE",,,'')='T'
      & exec('FindInSet','#table','TYPYSP','TYPYKOD',ZAKR.TYPYSP,ZAKR.TYPYSP,"TYPYSP.ZAK",,,'')='N';
ZK_RP.cntx_pop();

:: ustawienie zmiennej aut odpowiedzialnej za to czy wogole babrac sie z grupowaniem
_aut:={? '.FL'*exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TYPYDOK,ZAKR.TYPYDOK,"TYPYDOK.AFIFO",,,'')>1 || 2 || 0 ?};

:: tabelka do grupowania pozycji
_grp:=tab_tmp(4,'MAG','STRING[16]',''
       ,'NAG','STRING[16]',''
       ,'POZ','INTEGER',''
       ,'RNK','STRING[16]',''
       ,'RDK','STRING[16]','');
{? _oki & (_typ<>null | _isUSL)
|| _param:={? ZK_N.T().R='Z' || 600800 || 600801 ?};
   _zmilp:=__ilplus & ZK_N.LIM<>'T' & (';Z'*exec('get','#params',_param,2))>1;
:: tabelka przechowujaca material z magazynem
   VAR_DEL.delete('__mat_mag');
   __mat_mag:=tab_tmp(2,'MG','STRING[16]','','M','STRING[16]','');
   _nag:=null;
   _dat:=ZAKR.DR;
   _tim:=ZAKR.TR;
   _grp_key:={? _i<>'' || _i || tm_stamp()+'1' ?};
   {? ZK_RP.first()
   || exec('aktznwyb','zamsiw_rea',_d);
      MG.cntx_psh;
      MG.index('MAG');
      MG.prefix(ST.ODDZ_KOD);
      {? {? _NDref<>null()
          & ND.seek(_NDref)
         || MG.seek(ND.MAG)
         || MG.first
         ?}
      || {!
         |? _magik:=MG.ref();
            _dostawy:=(1+MG.TYP)='D';
            MG.cntx_psh();
::          w przypadku gdy magazyn typu dostawy i dokument jest typu auto FIFO/LIFO oraz uzupelniono ceche na pozycji
::          rozpisujemy wg dostaw
            {? _dostawy & _aut
            || ZK_RP.index('MAGI');
               ZK_RP.prefix(_d,'*',_magik);
               {? ZK_RP.first()
               || {!
                  |? _zn:=ZK_RP.P().N;
                     {? ZK_RP.SC='' & (ZK_RP.P().DK_C<>null() | ZK_RP.REZ().DK_C<>null()) & ZK_RP.M().RODZ='T'
                     || _zostal:=exec('rozpwgsc','zamsiw_rea',ZK_RP.MG,ZK_RP.M,ZK_RP.ILR,_e<>null,ZK_RP.REZ().ILR,$_zn);
                        {? _zostal>0
                        || _ref:=ZK_RP.ref();
                           _next:=ZK_RP.next();
                           ZK_RP.cntx_psh();
                           ZK_RP.clear();
                           {? ZK_RP.seek(_ref)
                           || ZK_RP.ILR:=_zostal;
                              ZK_RP.W:='';
                              ZK_RP.put(1)
                           ?};
                           ZK_RP.cntx_pop();
                           _next
                        || ZK_RP.next()
                        ?}
                     || ZK_RP.next()
                     ?}
                  !}
               ?}
            ?};

::          w przypadku gdy magazyn typu dostawy i dokument nie jest typu auto FIFO/LIFO rozpisujemy kazda pozycje
::          realizacji wg dostaw

            {? _dostawy & ~_aut
            || ZK_RP.index('MAGI');
               ZK_RP.prefix(_d,'*',_magik);
               {? ZK_RP.first()
               || {!
                  |? _zn:=ZK_RP.P().N;
                     {? ZK_RP.SC='' & ZK_RP.M().RODZ='T'
                     || _zostal:=exec('rozpwgsc','zamsiw_rea',ZK_RP.MG,ZK_RP.M,ZK_RP.ILR,_e<>null,ZK_RP.REZ().ILR,$_zn);
                        {? _zostal>0
                        || _ref:=ZK_RP.ref();
                           _next:=ZK_RP.next();
                           ZK_RP.cntx_psh();
                           ZK_RP.clear();
                           {? ZK_RP.seek(_ref)
                           || ZK_RP.ILR:=_zostal;
                              ZK_RP.W:='';
                              ZK_RP.put(1)
                           ?};
                           ZK_RP.cntx_pop();
                           _next
                        || ZK_RP.next()
                        ?}
                     || ZK_RP.next()
                     ?}
                  !}
               ?}
            || _bufref:=tab_tmp(1,'SQL','STRING[16]','');
               ZK_RP.index('MAGI');
               ZK_RP.prefix(_d,'*',_magik);
               {? ZK_RP.first()
               || {!
                  |? {? ZK_RP.SC='' & ZK_RP.M().RODZ='T' & (_bufref.clear(); ~_bufref.find_key($ZK_RP.ref()))
                     || _bylrez:=exec('oblzkrez','zamsiw_wspolne',ZK_RP.P,'',3);
                        {? _bylrez>0 & _bylrez<ZK_RP.ILR
                        || _ref:=ZK_RP.ref();
                           _next:=ZK_RP.next();
                           ZK_RP.cntx_psh();
                           ZK_RP.clear();
                           {? ZK_RP.seek(_ref)
                           || ZK_RP.ILR-=_bylrez;
                              ZK_RP.CZYREZ:=0;
                              ZK_RP.put(1);
                              ZK_RP.ILR:=_bylrez;
                              ZK_RP.CZYREZ:=1;
                              ZK_RP.add(1);
                              _bufref.blank();
                              _bufref.SQL:=$ZK_RP.ref();
                              _bufref.add(1)
                           ?};
                           ZK_RP.cntx_pop();
                           _next
                        ?}
                     || ZK_RP.next()
                     ?}
                  !}
               ?};
               obj_del(_bufref)
            ?};
            ZK_RP.index('MAGI');
            ZK_RP.prefix(_d,'*',_magik);
::          kontrola czy coś jest do realizacji
            _jestrea:=0;
            {? ZK_RP.first()
            || ZK_P.cntx_psh();
               {!
               |? {? ZK_RP.N=null()
                   & ZK_RP.ILR>0
                   & (ZK_RP.REZ<>null() | (ZK_RP.P().M().RODZ='U' & ZK_RP.P().RODZ='Z' & ZK_RP.MG().U='T'))
                  || ZK_P.prefix();
                     {? ZK_P.seek(ZK_RP.P)
                     || _jestrea+={? ZK_RP.SC='' & _poz2dk & (_h.clear(); _h.find_key($ZK_P.ref()))
                                  || (ZK_RP.ILR+_h.ILE)>0
                                  || ZK_RP.ILR>0
                                  ?}
                     ?}
                  ?};
                  ZK_RP.next()
               !};
               ZK_P.cntx_pop()
            ?};
            {? _jestrea & ZK_RP.first & (_inw:=exec('sprzkinw','zamsiw_rea',_magik,_dat,1,_tim); _inw)
            || BEER.ZK_N:=ZK_RP.P().N;
               _czypal:=ZK_RP.P().RMAG<>null & ZK_RP.P().RMAG().PAL='T';
               _nag:={? _NDref=null()
                     || exec('gen_nagl','zamsiw_rea',_dat,_typ,ZK_RP.MG,_b,,_c,,,,,,,_grp_key,,_tim,_l)
                     || _NDref
                     ?};
               BEER.ZK_N:=null;
               ND.prefix();
               {? _nag<>null & {? ND.seek(_nag) || ND.r_lock(1,1,1) || 0 ?}
               || _i:=0;
                  _cs:=ND.TYP().CS='T';
                  {!
                  |?
                     {? BEER.ZK_N<>ZK_RP.P().N
                     || BEER.ZK_N:=ZK_RP.P().N;
                        _nre:=exec('gen_nrea','zamsiw_rea',_nag,,_grp_key);
                        _tnre.clear;
                        _tnre.blank;
                        _tnre.RSQL:=$_nre;
                        _tnre.add(1);
                        _tzam.clear;
                        {? ~_tzam.find_key($BEER.ZK_N)
                        || _tzam.blank;
                           _tzam.RSQL:=$BEER.ZK_N;
                           _tzam.add(1)
                        ?}
                     ?};
                     {? ZK_RP.N=null & ZK_RP.ILR>0
                      & (ZK_RP.REZ<>null | (ZK_RP.P().M().RODZ='U' & ZK_RP.P().RODZ='Z' & ZK_RP.MG().U='T'))
                     ||

                        ZK_P.cntx_psh();
                        ZK_P.clear();
                        {? ZK_P.seek(ZK_RP.P)
                        || {? ZK_RP.SC='' & _poz2dk & (_h.clear(); _h.find_key($ZK_P.ref()))
                           || _ilereal:=ZK_RP.ILR+_h.ILE;
                              _h.del()
                           || _ilereal:=ZK_RP.ILR
                           ?};
                           _jmg:=ZK_P.M().J2<>null();
                           _ile_ilr:={? ZK_P.J2<>ZK_P.JM & ZK_P.WS2<>0
                                     || _dokl:=exec('jaka_dok_mjm','jm',ZK_P.M,ZK_P.J2,ZK_P.M().J);
                                        {? ZK_P.RODZ='Z' & ~_jmg || ZK_P.WS2 || 1/ZK_P.WS2 ?}
                                     || _dokl:=exec('jaka_dok_m','jm',ZK_P.M);
                                        1
                                     ?}*_ilereal $ {? _dokl<0 || exec('jaka_dok_m','jm',ZK_P.M) || _dokl ?};

                           _wal:={? ZK_P.WAL<>ZK_P.N().WAL || ZK_P.N().WAL || ZK_P.WAL ?};
                           exec('taz_sd_set','ceny');
                           {? _cs &
                              {? exec('ctdt','ceny')<>'T'
                              || exec('fo8008x1','ceny')='T'
                              || exec('fo8008x3','ceny')='T'
                              ?} & (_wal<>exec('bl_nwal','ustawienia') & ZK_P.CWAL=0 | ZK_P.CN=0)
                           || exec('add_doki_cena','zamsiw_rea',$_nag)
                           ?};

                           {? ZK_RP.SC<>''
                           || _rdk:=BB.sqlint(ZK_RP.SC);
                              _ndk:=form(8+ZK_RP.SC)
                           || _rdk:=0;
                              _ndk:=''
                           ?};

                           _i+=1;
                           EANX.RGS1:=ZK_RP.GS1;
                           VAR_DEL.delete('__zk_p_p');
                           __zk_p_p:=ZK_P.PROJEKTY;
                           _ref_dk:=exec('gen_pozy','zamsiw_rea',_nag,ZK_P.M,_i,_ilereal,_rdk
                              ,_ndk,ZK_P.CENA,ZK_P.CWAL
                              ,{? ZK_P.N().WAL<>exec('bl_nwal','ustawienia') || __zknkrs || ZK_P.KRS ?}
                              ,ZK_P.WAL,ZK_P.RAB
                              ,exec('m_vat','material',ZK_P.M,ZK_P.N().KH,_stzero,ST.AR,ST.AM,ZK_P.SV,1,,,ZK_N.KRAJ_VAT)
                              ,$_nre,$ZK_P.J2,ZK_P.WS2
                              ,_ile_ilr,,,ZK_P.ZL,ZK_P.WYD,ZK_P.RABK,ZK_P.TAR_H,ZK_P.PROMO,$ZK_RP.ref,ZK_P.TAR_TMS);
                           VAR_DEL.delete('__zk_p_p');
                           EANX.RGS1:='';
::                            ewentualny wymiar na magazynie paletowym
                           {? _czypal & _ref_dk<>null
                           || _eanl:={? ZK_RP.MG().MWS='T'
                                      & exec('FindInSet','#table','EANL','KOD',ZK_RP.EANL,ZK_RP.EANL,"EANL.DOK",,,'')<>'T'
                                     || ZK_RP.MG().EANL().KOD
                                     || ZK_RP.EANL
                                     ?};
                              _refreo:=exec('addrepal','zamsiw_palety',ZK_RP.PAL,_ref_dk,ZK_RP.ILR,ZK_RP.MG,_eanl
                                 ,ZK_RP.TW,ZK_RP.PALDO,ZK_RP.PAL_POZ,_refreo)
                           ?};

::                         Przypisuje pozycji dokumentu limit zlecenia z ZK_P
                           {? _ref_dk<>null()
                           || DK.cntx_psh(); DK.clear();
                              {? DK.seek(_ref_dk)
                              || DK.ZLIM:=ZK_P.ZLIM;
                                 DK.M_ZLIM:=ZK_P.M_ZLIM;
                                 {? DK.ZLIM<>null()
                                 || DK.ZGP:=exec('FindAndGet','#table',ZLIM,DK.ZLIM,,"ZGP",null());
                                    {? DK.ZGP<>null()
                                    || ZGP.cntx_psh();
                                       DK.ZGH:=DK.ZGP().NRPRZ;
                                       ZGP.cntx_pop()
                                    ?}
                                 ?};
                                 DK.PARTIA:=exec('lim2zpar','zamsiw_rea',ZK_P.ZLIM);
                                 {? ZK_RP.M().RODZ='U' & _dostawy & ZK_RP.P().DK_C<>null()
                                 || DK.DK_C:=ZK_RP.P().DK_C
                                 ?};
                                 {? ZK_RP.GS1<>''
                                 || exec('formEANW','magazyn_mob'
                                     ,exec('FindAndGet','#table',EANP,ZK_RP.GS1,,,null()),DK.M,DK.uidref())
                                 ?};
                                 DK.put()
                              ?};
                              DK.cntx_pop()
                           ?};
                           {? ZK_P.M().RODZ='T'
                           || exec('admatmag','zamsiw_wspolne',$ZK_RP.MG,$ZK_P.M);
                              exec('admatzkp','rezerwacje',$ZK_P.M,ZK_P.NR,ZK_RP.ILR,$ZK_RP.P().N,$ZK_RP.P);
::                            przekazanie informacji o indeksie na zamowieniach do tabeli __zam
                              {? var_pres('__zam')>100 || __uzup_z(ZK_P.M) ?}
                           ?}
                        ?};
                        ZK_P.cntx_pop();
                        ZK_RP.N:=_nre;
                        {? ZK_RP.REZ().REA='T' || ZK_RP.DOST:=0 ?};
                        {? ZK_RP.put(1)
                        || ZK_P.clear();
                           {? ZK_P.seek(ZK_RP.P)
                           || _zkpref:=ZK_P.ref();
                              {? _zmilp & ZK_RP.PLUS>0
                              || ZK_P.ILP+=ZK_RP.PLUS;
                                 ZK_P.ILZ+=ZK_RP.PLUS;
                                 _mjs:=ATR.MJS;
                                 ATR.MJS:='ZK_P';
                                 exec('aktzil2','zamsiw_poz');
                                 ATR.MJS:=_mjs;
                                 exec('war_pozz','zamsiw_poz');
                                 ZK_P.put(1);
                                 exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
                                 exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N);
                                 exec('obl_warz','zamsiw_nag',ZK_P.N,,0)
                              ?};
                              {? ZK_P.SR<ZK_RP.ILR || ZK_P.SR:=0 || ZK_P.SR-=ZK_RP.ILR ?};
                              {? ZK_P.DOR<ZK_RP.ILR || ZK_P.DOR:=0 || ZK_P.DOR-=ZK_RP.ILR ?};
                              {? ZK_P.ILP<ZK_RP.ILR || ZK_P.ILP:=0 || ZK_P.ILP-=ZK_RP.ILR ?};
                              {? ZK_P.M().RODZ='U'
                              || _czyusl:=(ZK_P.RODZ='W' | (ZK_P.RMAG<>null & ZK_P.RMAG().U='T')) & ZK_P.ILP>0;
                                 ZK_P.ZBB:={? _czyusl || 'T' || 'N' ?};
                                 ZK_P.ZNR:={? ZK_P.ILP<ZK_P.ILZ || 'T' || 'N' ?}
                              |? (';DAPZ'*ZK_P.M().IDMOB)>1 & _e<>null
                              || {? exec('aktb_rez','zamsiw_rea',$ZK_RP.P,ZK_RP.ILR)
                                 || ZK_RP.CZYREZ:=1;
                                    ZK_RP.DOST:=0;
                                    ZK_RP.put(1)
                                 ?}
                              ?};
                              {? ZK_P.put(1)
                              || {? ZK_P.M().RODZ='U' || exec('aktznzkn','zamsiw_nag',ZK_P.N,1) ?};
::                               Produkcja - jesli dostepny modul planow strategicznych to po udanej
::                               modyfikacji pozycji zamowienia aktualizuje obiekt planowania
                                 {? exec('tpp_lic','tpp')='T'
                                 || exec('zkp2obj','px_obj')
                                 ?};
                                 {? _wgdysp & _ref_dk<>null() & ~_czypal
                                 || exec('rozpDYSP','zamsiw_rea',_ref_dk,_tr_nzl,ZK_P.uidref())
                                 ?}
                              ?};
                              REZ.clear();
                              {? REZ.seek(ZK_RP.REZ)
                              || ZK_RP.REZ:=null;
                                 ZK_RP.put(1);
                                 {? REZ.ILR>ZK_RP.ILR
                                 || REZ.ILR-=ZK_RP.ILR;
                                    {? REZ.REA='NN' || REZ.REA:='NR' ?};
                                    {? REZ.M().J2<>null() & REZ.WS2>0
                                    || _dokl_m:=exec('jaka_dok_mjm','jm',REZ.M,REZ.J2,REZ.M().J);
                                       {? _dokl_m<0 || _dokl_m:=exec('jaka_dok_m','jm',REZ.M) ?};
                                       REZ.IL2:=REZ.ILR/REZ.WS2 $ (_dokl_m+1);
                                       roundmet(BEER.MDOKL);
                                       REZ.IL2:=REZ.IL2 $ _dokl_m;
                                       roundmet(5)
                                    ?};
                                    REZ.put(1)
                                 |? ~REZ.count()
                                 || {? REZ.REA='NN' || REZ.REA:='NR'; REZ.put(1) ?};
                                    REZ.del()
                                 || {? REZ.REA='NN' || REZ.REA:='NR' ?};
                                    REZ.ILR:=0;
                                    REZ.IL2:=0;
                                    REZ.put(1)
                                 ?}
                              ?};
                              exec('aktznzkp','zamsiw_poz',_zkpref,1)
                           ?}
                        ?};
                        ZK_RP.next()
                     |? ZK_RP.ILR<=0
                     || ZK_RP.del()
                     || ZK_RP.next()
                     ?}
                  !};
                  ND.clear();
                  {? _nag<>null & ND.seek(_nag)
                  || BEER.UIDDOK:=ND.uidref();
                     exec('dk_sum','magdok_wspolne',ND.ref,,1);
::                   tworzy informacje dodatkowe
                     exec('inf_dod','fakso',0,'nagdo');
                     DK.cntx_psh();
                     DK.index('DOKMAG');
                     DK.prefix(_nag);
                     {? DK.first()
                     || {? exec('klim_wys','zamsiw_rea')=0
                        || BEER.UIDDOK:='';
                           exec('n_usun','magdok_nag',0,,2,0)
                        |? _wgeans & ~_czypal
                        ||
::                         przepisanie lokalizacji wg odczytu na czytniku
                           {!
                           |? __iledk:=DK.IL;
                              _dkean:={? DK.SCEAN<>'' || DK.SCEAN || 'xxxx' ?};
                              EANN.cntx_psh();
                              EANP.cntx_psh();
                              _j.clear();
                              {? _j.first()
                              || {!
                                 |? {? __iledk>0 & (EANN.clear(); EANN.seek(_j.REF))
                                    || EANP.index('TOWLOK');
                                       EANP.prefix(EANN.ref(),DK.M);
                                       {? EANP.first()
                                       || {!
                                          |? _scean:={? EANP.SCEAN<>'' || EANP.SCEAN || 'xxxx' ?};
                                             {? EANP.LOKZ().MG=ND.MAG & _dkean=_scean
                                             || __eanpils.clear();
                                                __iledk_l:=EANP.ILS-{? __eanpils.find_key($EANP.ref())
                                                                    || __eanpils.ILR
                                                                    || 0
                                                                    ?};
                                                {? __iledk_l>0
                                                || {? __iledk_l<=__iledk
                                                   || {? ~exec('add2dk_l','magdok_wspolne',DK.ref(),null,EANP.LOKZ,null
                                                           ,EANP.TW,date(0,0,0),__iledk_l,ND.MAG,DK.M,,,EANP.PAL)
                                                      || 0
                                                      || __iledk-=__iledk_l;
                                                         __eanpils.clear();
                                                         {? __eanpils.find_key($EANP.ref())
                                                         || __eanpils.ILR+=__iledk_l;
                                                            __eanpils.put(1)
                                                         || __eanpils.blank();
                                                            __eanpils.EANP:=$EANP.ref();
                                                            __eanpils.ILR:=__iledk_l;
                                                            __eanpils.add(1)
                                                         ?}
                                                      ?}
                                                   || {? ~exec('add2dk_l','magdok_wspolne',DK.ref(),null,EANP.LOKZ,null
                                                           ,EANP.TW,date(0,0,0),__iledk,ND.MAG,DK.M,,,EANP.PAL)
                                                      || 0
                                                      || __eanpils.clear();
                                                         {? __eanpils.find_key($EANP.ref())
                                                         || __eanpils.ILR+=__iledk;
                                                            __eanpils.put(1)
                                                         || __eanpils.blank();
                                                            __eanpils.EANP:=$EANP.ref();
                                                            __eanpils.ILR:=__iledk;
                                                            __eanpils.add(1)
                                                         ?};
                                                         __iledk:=0
                                                      ?}
                                                   ?}
                                                ?}
                                             ?};
                                             __iledk>0 & EANP.next()
                                          !}
                                       ?}
                                    ?};
                                    _j.next()
                                 !}
                              ?};
                              EANP.cntx_pop();
                              EANN.cntx_pop();
                              {? EANX.BEZTW || exec('popdkltw','magazyn_stan',DK.ref(),null) ?};
                              DK.next()
                           !}
                        ?}
                     || {? do_state()<2 & ~Plugin.run('BEFORE_DELTAB_001',ND.ref()) & do_state() || undo() ?};
                        exec('delprzyp','fakso','FAKSO','ND',ND.ref());
                        _pomtyp:=POM.TYPDOK;
                        POM.TYPDOK:=ND.TYP().KOD;
                        numer:=ND.NR;
                        oldnumer:=1;
                        exec('nr_old','numery');
                        POM.TYPDOK:=_pomtyp;
                        ND.del(1,1)
                     ?};
                     DK.cntx_pop()
                  ?}
               ?}
            ?};
            MG.cntx_pop();
            _NDref=null() & MG.next()
         !}
      ?};
      MG.cntx_pop();
::    realizacja usług
      {? _isUSL
      || _bzkn:=tab_tmp(1,'ZK_N','STRING[16]','','ZK_RN','STRING[16]','');
         ZK_RP.index('MAGI');
         ZK_RP.prefix(_d,'*');
         {? ZK_RP.first()
         || {!
            |? {? ZK_RP.P().M().RODZ='U' & ZK_RP.ILR>0 & {? ZK_RP.P().RODZ='W' || 1 || ZK_RP.MG().U<>'T' ?}
               || {? (_bzkn.prefix($ZK_RP.P().N); ~_bzkn.first())
                  || BEER.ZK_N:=ZK_RP.P().N;
                     _nre:=exec('gen_nrea','zamsiw_rea',null(),,_grp_key,1,_dat);
                     _tnre.clear;
                     _tnre.blank;
                     _tnre.RSQL:=$_nre;
                     _tnre.add(1);
                     _tzam.clear;
                     {? ~_tzam.find_key($BEER.ZK_N)
                     || _tzam.blank;
                        _tzam.RSQL:=$BEER.ZK_N;
                        _tzam.add(1)
                     ?};
                     _bzkn.blank();
                     _bzkn.ZK_N:=$BEER.ZK_N;
                     _bzkn.ZK_RN:=$_nre;
                     _bzkn.add(1)
                  || _nre:=exec('FindAndGet','#table',ZK_RN,_bzkn.ZK_RN,,,null())
                  ?};
                  {? _nre<>null()
                  || ZK_RP.N:=_nre;
                     {? ZK_RP.REZ().REA='T' || ZK_RP.DOST:=0 ?};
                     {? ZK_RP.put(1)
                     || ZK_P.clear();
                        {? ZK_P.seek(ZK_RP.P)
                        || _zkpref:=ZK_P.ref();
                           {? _zmilp & ZK_RP.PLUS>0
                           || ZK_P.ILP+=ZK_RP.PLUS;
                              ZK_P.ILZ+=ZK_RP.PLUS;
                              _mjs:=ATR.MJS;
                              ATR.MJS:='ZK_P';
                              exec('aktzil2','zamsiw_poz');
                              ATR.MJS:=_mjs;
                              exec('war_pozz','zamsiw_poz');
                              ZK_P.put(1);
                              exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
                              exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N);
                              exec('obl_warz','zamsiw_nag',ZK_P.N,,0)
                           ?};
                           {? ZK_P.SR<ZK_RP.ILR || ZK_P.SR:=0 || ZK_P.SR-=ZK_RP.ILR ?};
                           {? ZK_P.DOR<ZK_RP.ILR || ZK_P.DOR:=0 || ZK_P.DOR-=ZK_RP.ILR ?};
                           {? ZK_P.ILP<ZK_RP.ILR || ZK_P.ILP:=0 || ZK_P.ILP-=ZK_RP.ILR ?};
                           {? ZK_P.M().RODZ='U'
                           || _czyusl:=(ZK_P.RODZ='W' | (ZK_P.RMAG<>null & ZK_P.RMAG().U='T')) & ZK_P.ILP>0;
                              ZK_P.ZBB:={? _czyusl || 'T' || 'N' ?};
                              ZK_P.ZNR:={? ZK_P.ILP<ZK_P.ILZ || 'T' || 'N' ?}
                           ?};
                           {? ZK_P.put(1)
                           || {? ZK_P.M().RODZ='U' || exec('aktznzkn','zamsiw_nag',ZK_P.N,1) ?};
::                               Produkcja - jesli dostepny modul planow strategicznych to po udanej
::                               modyfikacji pozycji zamowienia aktualizuje obiekt planowania
                              {? exec('tpp_lic','tpp')='T'
                              || exec('zkp2obj','px_obj')
                              ?}
                           ?};
                           exec('aktznzkp','zamsiw_poz',_zkpref,1)
                        ?}
                     ?}
                  ?}
               ?};
               ZK_RP.next()
            !}
         ?}
      ?};
      ZK_N.cntx_psh();
      _tzam.clear();
      {? _tzam.first()
      || {!
         |? {? (ZK_N.clear; ZK_N.seek(_tzam.RSQL))
            || BEER.ZK_N:=ZK_N.ref;
               ZK_RP.index('NAGZ');
               ZK_RP.prefix(BEER.ZK_N);
               {? ZK_RP.first()
               || {!
                  |? REZ.clear();
                     {? REZ.seek(ZK_RP.REZ)
                     || {? REZ.ILR<=ZK_RP.ILR
                        || ZK_RP.REZ:=null;
                           ZK_RP.put(1);
                           REZ.del()
                        || REZ.ILR-=ZK_RP.ILR;
                           REZ.put(1);
                           ZK_RP.REZ:=null;
                           ZK_RP.put(1)
                        ?}
                     ?};
::                   korekta rezerwacji pod zlecenie
                     exec('korZLZAM','zamsiw_rea',ZK_RP.P,ZK_RP.ILR);
                     {? ZK_RP.MG=null & {? ZK_RP.P().RODZ='W' || ZK_RP.P().M().RODZ='T' | ZK_RP.N=null() || 1 ?}
                     || ZK_RP.del()
                     || ZK_RP.next()
                     ?}
                  !}
               ?};

               _war_be:=ZK_N.BRT;
               exec('obl_warz','zamsiw_nag',BEER.ZK_N)
            ?};
            _tzam.next()
         !}
      ?};
      ZK_N.cntx_pop;

      _tnre.clear;
      {? _tnre.first()
      || {!
         |? {? (ZK_RN.clear; ZK_RN.seek(_tnre.RSQL))
            || {? ZK_RN.count()=0
               || numer:=ZK_RN.NR; oldnumer:=1;
                  do; exec('nr_old','numery'); ZK_RN.del(1); end
               ?}
            ?};
            _tnre.next()
         !}
      ?};

::    archiwizacja EANN
      {? _oki & _wgeans
      || {? _nag<>null
         || EANN.cntx_psh();
            _j.clear();
            {? _j.first()
            || {!
               |? EANN.clear();
                  {? EANN.seek(_j.REF)
                  || EANN.STAN:='Z';
                     EANN.REF_REAL:=EANN.REFSQL;
                     EANN.IDREA:=EANN.IDZAM;
                     EANN.REFSQL:=$_nag;
                     EANN.IDZAM:=exec('FindAndGet','#table',ND,_nag,,"IDADD",'');
                     EANN.put();
                     exec('archeann','magazyn_mob',EANN.ref())
                  ?};
                  _j.next()
               !}
            ?};
            EANN.cntx_pop()
         || EANN.cntx_psh();
            EANP.cntx_psh();
            _pal:=tab_tmp(2,'PAL','STRING[16]',''
                   ,'LOK','STRING[16]',''
                   ,'ILS','REAL','');

            EANP.index('EANN');
            EANP.prefix(_e);
            {? EANP.first()
            || {!
               |? {? EANP.M<>null & EANP.PAL<>null & EANP.ILS>0 & ~EANP.ROZPAL
                  || _pal.clear();
                     {? ~_pal.find_key($EANP.PAL,$EANP.LOKZ)
                     || _pal.blank();
                        _pal.PAL:=$EANP.PAL;
                        _pal.LOK:=$EANP.LOKZ;
                        _pal.ILS:=1;
                        _pal.add(1)
                     ?};
                     EANP.del()
                  || EANP.next()
                  ?}
               !};
               {? EANP.first()
               || {!
                  |? _pal.clear();
                     {? _pal.find_key($EANP.PAL,$EANP.LOKZ)
                     || EANP.ILS:={? EANP.ZPALET=1 || _pal.ILS || EANP.IL ?};
                        EANP.put(1)
                     ?};
                     EANP.next()
                  !}
               ?}
            ?};
            EANN.clear();
            {? EANN.seek(_e)
            || EANN.STAN:='Z';
               EANN.put(1)
            ?};
            EANN.cntx_pop();
            EANP.cntx_pop();
            obj_del(_pal)
         ?}
      ?};

      BEER.ZK_N:=_bzk_n;
      ZK_RP.index('NAGA');
      ZK_RP.prefix(_d);
      {? ZK_RP.first()
      || {!
         |? {? ZK_RP.MG=null & {? ZK_RP.P().RODZ='W' || ZK_RP.P().M().RODZ='T' | ZK_RP.N=null() || 1 ?}
            || ZK_RP.del()
            || ZK_RP.W:='';
               ZK_RP.put(1);
               ZK_RP.next()
            ?}
         !}
      ?}
   ||
::    nic nie wybrano - usuwamy realizacje
      undefine();
      BEER.ZK_N:=_bzk_n;
      ZK_RP.index('NAGA');
      ZK_RP.prefix(_d,null);
      {? ZK_RP.first() || {! |? ZK_RP.del() !} ?};
      {? _e<>null & BEER.ZK_N().MG<>null & BEER.ZK_N().MG().PAL='T'
      || EANN.cntx_psh();
         EANP.cntx_psh();
         _pal:=tab_tmp(2,'PAL','STRING[16]',''
                ,'LOK','STRING[16]',''
                ,'ILS','REAL','');

         EANP.index('EANN');
         EANP.prefix(_e);
         {? EANP.first()
         || {!
            |? {? EANP.M<>null & EANP.PAL<>null & EANP.ILS>0 & ~EANP.ROZPAL
               || _pal.clear();
                  {? ~_pal.find_key($EANP.PAL,$EANP.LOKZ)
                  || _pal.blank();
                     _pal.PAL:=$EANP.PAL;
                     _pal.LOK:=$EANP.LOKZ;
                     _pal.ILS:=1;
                     _pal.add(1)
                  ?};
                  EANP.del()
               || EANP.next()
               ?}
            !};
            {? EANP.first()
            || {!
               |? _pal.clear();
                  {? _pal.find_key($EANP.PAL,$EANP.LOKZ)
                  || EANP.ILS:={? EANP.ZPALET=1 || _pal.ILS || EANP.IL ?};
                     EANP.put(1)
                  ?};
                  EANP.next()
               !}
            ?}
         ?};
         EANN.clear();
         {? EANN.seek(_e)
         || EANN.STAN:='Z';
            EANN.put(1)
         ?};
         EANN.cntx_pop();
         EANP.cntx_pop();
         obj_del(_pal)
      ?};
      {? _komunik ||FUN.info('Nie wybrano żadnych pozycji do realizacji.\nRealizację usunięto.'@) ?}
   ?};
   _param:={? ZK_N.T().R='Z' || 600800 || 600801 ?};
   {? ZK_N.LIM='T' | (';R'*exec('get','#params',_param,2))>1
   || exec('aktZK_RP','zamsiw_rea',_d)
   ?}
||
:: nacisnieto ESC lub nie bylo dok
   BEER.ZK_N:=_bzk_n;
   ZK_RP.index('NAGA');
   ZK_RP.prefix(_d,null);
   {? ZK_RP.first() || {! |? ZK_RP.del() !} ?};
   {? _e<>null & BEER.ZK_N().MG<>null & BEER.ZK_N().MG().PAL='T'
   || EANN.cntx_psh();
      EANP.cntx_psh();
      _pal:=tab_tmp(2,'PAL','STRING[16]',''
             ,'LOK','STRING[16]',''
             ,'ILS','REAL','');

      EANP.index('EANN');
      EANP.prefix(_e);
      {? EANP.first()
      || {!
         |? {? EANP.M<>null & EANP.PAL<>null & EANP.ILS>0 & ~EANP.ROZPAL
            || _pal.clear();
               {? ~_pal.find_key($EANP.PAL,$EANP.LOKZ)
               || _pal.blank();
                  _pal.PAL:=$EANP.PAL;
                  _pal.LOK:=$EANP.LOKZ;
                  _pal.ILS:=1;
                  _pal.add(1)
               ?};
               EANP.del()
            || EANP.next()
            ?}
         !};
         {? EANP.first()
         || {!
            |? _pal.clear();
               {? _pal.find_key($EANP.PAL,$EANP.LOKZ)
               || EANP.ILS:={? EANP.ZPALET=1 || _pal.ILS || EANP.IL ?};
                  EANP.put(1)
               ?};
               EANP.next()
            !}
         ?}
      ?};
      EANN.clear();
      {? EANN.seek(_e)
      || EANN.STAN:='Z';
         EANN.put(1)
      ?};
      EANN.cntx_pop();
      EANP.cntx_pop();
      obj_del(_pal)
   ?};
   {? _komunik
   || {? _typ=null
      || FUN.info('Nie wybrano typu dokumentu.\nRealizację usunięto.'@)
      |? ~_oki
      || FUN.info('Rezygnacja z realizacji zamówienia.'@)
      || FUN.info('Nie wybrano żadnych pozycji do realizacji.\nRealizację usunięto.'@)
      ?}
   ?}
?};
obj_del(_tnre);
obj_del(_tzam);
_done();
unlock_r();
BEER.MJSLOG:='';
_oki


\zakr_zkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: ustawia domyslne wartosci dla realizacji zamowienia
::   WE: _a - czy tworzyc dokument sprzedazy
::       _b - typ dokumentu magazynowego
::       _c - typ dokumentu sprzedazy
::       _d - czy czytnik 1-tak 0-nie
::       _e - czy zamowienie wewnetrzne 1, nie 0 (domyslnie)
::      [_f] - czy edytowac ustawienia? 1 - tak (domyslnie)
::      [_g] - czy drukowac ND? 1 - tak (domyslnie)
::      [_h] - 0(domyślnie)-nie, 1-e-kiosk
::   WY: 1-przeedytowano zakres 0-nie
::  OLD: \zakr_zkn/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};
_edit:={?_>5 & type_of(_f)=1 || _f || 1 ?};
_prND:={?_>6 & type_of(_f)=1 || _g || 1 ?};
_ekiosk:={? var_pres('_h')=type_of(0) || _h || 0 ?};

HELP.MJS:='Z';
ZAKR.COS:='N';
_czy_inw:={? _d || exec('czytwinw','magazyn_inw',,1) || 'N' ?};
VAR_DEL.delete('__rurzmob');
__rurzmob:=_d;
{? _czy_inw='P'
|| ZAKR.win_edit('REAZKN')
|? _e
|| EANX.BEZTW:=_czy_inw='T';
   ZAKR.win_edit('REAZKNW')
|| EANX.BEZTW:=_czy_inw='T';
   ZAKR.win_edit('REAZKN')
?};
ZAKR.DR:={? date()<date(ST.AR,ST.AM,1)
         || date(ST.AR,ST.AM,1)
         |? date()>date(ST.AR,ST.AM,0)
         || date(ST.AR,ST.AM,0)
         || date()
         ?};
ZAKR.TR:=exec('time_rea','zamsiw_rea',ZAKR.DR);
ZAKR.ZKNFK:=_a;
ZAKR.TYPYDOK:={? _e
              ||
::               Jeżeli jest to zamówienie wewnętrze powiązane z limitami zlecenia to sprawdzam czy przypisany dokument
::               zamówienia zawiera się w dozwolonych dokumentach magazynowych rozchodowych zlecenia (par 500707)
                 {? BEER.ZK_N().LIM='N' & ~exec('czyreazl','zamsiw_rea')
                 || ZK_N.T().TYPYDOK().T
                 || _res:='';
                    {? ZK_N.T().TYPYDOK().T<>''
                    || _TypDok:=exec('get','#params',500707,2);
                       _tab:=spli_str(_TypDok,' ');
                       _len:=obj_len(_tab);
                       _it:=0;
                       {? _len>0
                       || {!
                          |?
                             _it+=1;
                             {? _tab[_it]*ZK_N.T().TYPYDOK().T>0
                             || _res:=ZK_N.T().TYPYDOK().T
                             ?};
                             _res='' & _it<_len
                          !}
                       ?}
                    ?};
::                  Sprawdzam czy na znaleziony typ nie ma nałożonych żadnych ograniczeń
                    {? _res<>''
                    || {? ~exec('po_zknnd','zamsiw_rea',_res,0)
                       || _res:=''
                       ?}
                    ?};
::                    {? _res=''
::                    ||
::                     Jeżeli nie odnaleziono typu dokumentu magazynowego z zamówienia to sprawdzam domyślny
::                     typ rozchodowy zlecenia (parametr 500708)
::                       _res:=exec('get','#params',500708,2);
::                       {? _res<>'' & ~exec('po_zknnd','zamsiw_rea',_res,0)
::                       || _res:=''
::                       ?}
::                    ?};
                    _res
                 ?}
::                ;ZK_N.T().TYPYDOK().T
              || {? exec('po_zknnd','zamsiw_rea',_b,0) || _b || '' ?}
              ?};
ZAKR.TYPYSP:={? _a || _c || '' ?};
:: magazyn do przesuniecia
{? _e
|| _md:=ZK_N.MD;
   _onlyU:=1;
   {? _md<>null | ZK_N.T().R='W'
   || ZK_RP.cntx_psh();
      {? ZK_RP.first
      || {!
         |? {? _onlyU & ~(ZK_RP.P().M().RODZ='U' & (ZK_RP.P().RODZ='W' | ZAKR.COS='T')) || _onlyU:=0 ?};
            {? ZK_RP.ILR>0 & ZK_RP.P().MG=_md
            || _md:=null
            ?};
            (_onlyU | _md<>null()) & ZK_RP.next
         !}
      ?};
      ZK_RP.cntx_pop()
   ?};
   ZAKR.MD:=_md
|| _onlyU:=0;
   ZAKR.MD:=null
?};

exec('set_efld_opt_zakr','zamsiw_rea',_onlyU);

_wyn:=0;
_wyn:={? ~_edit | _ekiosk || 1 || {? ZAKR.edit("exec('sprz_zkn','zamsiw_rea')") || 1 || 0 ?} ?};
VAR_DEL.delete('__rurzmob');
_wyn


\po_zknnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji typu dokumentu magazynowego
::   WE: [_a] - symbol dokumentu magazynowego domyslnie wezmie fld()
::       [_b] - czy komunikat
::  OLD: \po_zknnd/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;

{? _>=1 || {? type_of(_a)<>2 || _a:=fld() ?} || _a:=fld() ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};

_fld:=_a;
_typ:=HELP.TYP;
HELP.TYP:={? form(_fld)='' || null || exec('FindInSet','#table','TYPYDOK','TYP',_fld,_fld) ?};
_war:={? HELP.TYP<>null
      || (_ogr:=exec('ogr_typ','zamsiw_rea'))>0
      |? _fld<>''
      || (_ogr:=exec('ogr_typ','zamsiw_rea',_fld,'HELP.TYP'))>0
      || 0
      ?};

{? HELP.TYP=null
|| {? _b || FUN.info('Należy wybrać typ dokumentu magazynowego.'@) ?}
|? _war
|| ZAKR.TYPYDOK:=HELP.TYP().T;
   HELP.TYP:=_typ;
   exec('set_efld_opt_zakr','zamsiw_rea');
   win_disp();
   _wyn:=1
|| {? _b
   || {? ~_ogr
      || {? HELP.TYP<>null & HELP.MJS='K' & (HELP.TYP().P<>'T' | HELP.TYP().UE<>'N')
         || FUN.info('Należy wybrać przychodowy nieunijny typ dokumentu.'@)
         |? HELP.TYP<>null & HELP.MJS='E' & (HELP.TYP().P<>'T' | HELP.TYP().UE<>'T')
         || FUN.info('Należy wybrać przychodowy unijny typ dokumentu.'@)
         || FUN.info('Nałożono ograniczenia na podany typ dokumentu\n'@+
             {? HELP.MJS='Z'
             || {? HELP.TYP().Z='T' || '(rodzaj ceny sprzedaży, '@ || '(powiązanie ze zleceniem, '@ ?}
             || '('
             ?}+'przypisanie do użytkownika, '@+
             'przypisanie do magazynu).\n'@+
             'Należy wybrać inny typ dokumentu magazynowego (klawisz F3).'@)
         ?}
      || FUN.info('Należy wybrać typ dokumentu magazynowego.'@)
      ?}
   ?};
   HELP.TYP:=null
?};
_wyn


\ogr_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdzenie podanego typu czy zgadza sie z ograniczniami
::   WE: [_a] - symbol - poczatkowe literki
::       [_b] - do czego przypisac znaleziony typ jako string (wywolywany formulowo)
::   WY: 1-jest OK 0-nie jest OK
::  OLD: \ogr_typ/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};

ZK_N.cntx_psh;
_war:={? HELP.MJS='Z'
      || {? BEER.ZK_N().T().R='Z' & ZAKR.COS='N'
         || '"TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'N\' and "TYPYDOK".DS=\'T\' and "TYPYDOK".DK=\'N\' '
         |? BEER.ZK_N().T().R='Z' & ZAKR.COS='T'
         || '"TYPYDOK".Z=\'N\' and "TYPYDOK".P=\'N\' and "TYPYDOK".TD<>\'\' and "TYPYDOK".DK=\'N\' and '+
            '"TYPYDOK".T<>\'INW-\' and "TYPYDOK".T<>\'PRC-\' and "TYPYDOK".DN<>\'D\' '
         || '"TYPYDOK".Z=\'N\' and "TYPYDOK".P=\'N\' and "TYPYDOK".DS=\'N\' and "TYPYDOK".DK=\'N\' and '+
            '"TYPYDOK".T<>\'INW-\' and "TYPYDOK".T<>\'PRC-\' and "TYPYDOK".DN<>\'D\' '+
            {? BEER.ZK_N().LIM='N' & ~exec('czyreazl','zamsiw_rea') || ' and "TYPYDOK".ZLEC=\'N\' ' || '' ?}
         ?}
      |? HELP.MJS='K'
      || '"TYPYDOK".DN=\'N\' and "TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DS=\'N\' and '+
         '"TYPYDOK".DK=\'N\' and "TYPYDOK".UE=\'N\' '
      |? HELP.MJS='E'
      || '"TYPYDOK".DN=\'N\' and "TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DS=\'N\' and '+
         '"TYPYDOK".DK=\'N\' and "TYPYDOK".UE=\'T\' '
      || ' '
      ?};
{? HELP.MJS='Z' & BEER.ZK_N().LIM='T'
|| _lista:=exec('get','#params',500705,2,null());
   _TypDok:=_lista;
   _lista:=exec('get','#params',500707,2,null());
   _TypDok+=_lista;
   {? _TypDok<>''
   || _Typdok:=gsub(form(_TypDok),' ','\',\'');
      _TypDok:='\''+_Typdok+'\'';
      _war+=' and "TYPYDOK".T in ('+_TypDok+') '
   |? BEER.ZK_N().T().T=exec('get','#params',500011,2,null())
   || _war+={? form(_war)<>'' || ' and ' || ' ' ?}+'"TYPYDOK".ZLEC=\'T\' '
   |? ~exec('czyreazl','zamsiw_rea')
   || _war+={? form(_war)<>'' || ' and ' || ' ' ?}+'"TYPYDOK".ZLEC=\'N\' '
   ?}
?};

_typ:=HELP.TYP;
{? HELP.MJS='Z'
|| _mags:=tab_tmp(1,'SQL','STRING[20]','');
   ZK_RP.cntx_psh();
   ZK_RP.index('NAGA');
   ZK_RP.prefix(__refrea,null);
   {? ZK_RP.first()
   || {!
      |? {? ZK_RP.ILR>0
         || _mags.clear();
            {? ~_mags.find_key($ZK_RP.MG) & exec('FindInSet','#table','T2MG','T',ZK_RP.MG)<>null
            || _mags.SQL:=$ZK_RP.MG;
               _mags.add(1)
            ?};
            {? (MG.clear(); MG.seek(ZK_RP.MG))
            || {? MG.SKL='T'
               || _war+=' and TYPYDOK.UE=''N'' and TYPYDOK.UPRW=''N'' and TYPYDOK.AFIFO='''' and TYPYDOK.DK=''N'' '
               ?}
            ?}
         ?};
         ZK_RP.next()
      !}
   ?};
   ZK_RP.cntx_pop();
   {? _mags.size() & _mags.first()
   || _tab:=obj_new(_mags.size()); _i:=0;
      {! |? {? (MG.clear(); MG.seek(_mags.SQL)) || _i+=1; _tab[_i]:=MG.ref() ?}; _mags.next() !}
   || _tab:=0
   ?}
|? HELP.MJS='K' | HELP.MJS='E'
||
   {? ZAKR.MGSYM<>'' & (_mag:=exec('FindInSet','#table','MG','MAGAZYNY',ZAKR.MGSYM,ZAKR.MGSYM))<>null
   || _tab:=obj_new(1); _tab[1]:=_mag
   || USERS_UP.index('MG');
      USERS_UP.prefix(OPERATOR.USER,'MG',ST.ODDZ);
      {? USERS_UP.first()
      || _tab:=obj_new(USERS_UP.size()); _i:=0;
         {! |? _i+=1; _tab[_i]:=USERS_UP.MG; USERS_UP.next() !}
      || _tab:=0
      ?}
   ?};
   {? exec('FindInSet','#table','MG','MAGAZYNY',ZAKR.MGSYM,ZAKR.MGSYM,"MG.SKL",,,'')='T'
   || _war+=' and "TYPYDOK".UE=\'N\' '
   ?}
?};
_typs:=exec('typ_dok','lmg',_war,,,1,_tab);
{? _a<>'' & (_nr:=_typs*_a)>0
|| _buf:=_typs;
   _typs:=(_nr-1)-_typs;
   _nr:=_typs*' ';
   _typs:=form(_nr+_typs);
   ($_b)():=exec('FindInSet','#table','TYPYDOK','TYP',_typs,_typs);
   _typs:=_buf
?};
ZK_N.cntx_pop;

_wyn:=(' '+_typs)*(' '+HELP.TYP().T+' ');
_wyn


\czyreazl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza czy wypelnione jest pole zlecenie dla pozycji do realizacji
::   WY: 1-jest 0-nie ma chociazby na jednej z nich
::  OLD: \czyreazl/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
ZK_RP.cntx_psh();
ZK_RP.index('NAGZ');
ZK_RP.prefix(BEER.ZK_N);
{? ZK_RP.first()
|| {!
   |? {? ZK_RP.ILR>0 || _wyn:=ZK_RP.P().ZL<>null ?};
      _wyn & ZK_RP.next()
   !}
?};
ZK_RP.cntx_pop();
_wyn


\sprz_zkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: kontrola okienka edycji zakresu
::   WY: 1-jest oki 0-blad
::  OLD: \sprz_zkn/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_N.T().R='W' & {? ZK_N.ZL<>null || ZK_N.ZL().OD>ZAKR.DR || ~exec('ctrldtzl','zamsiw_rea',ZK_N.ref(),ZAKR.DR) ?}
|| FUN.info('Data otwarcia zlecenia jest późniejsza niż data tworzonego dokumentu.\n'
            'Należy zmienić datę dokumentu na większą.'@);
   _wyn:='DR'
|? ~(ZAKR.DR<=date(ST.AR,ST.AM,0) & ZAKR.DR>=date(ST.AR,ST.AM,1))
|| FUN.info('Data dokumentu musi pochodzić z bieżącego okresu.\nNależy zmienić datę dokumentu.'@);
   _wyn:='DR'
||
:: magazyny wystepujace na pozycjach realizacji
_magik:=tab_tmp(2,'MAG','STRING[10]',''
         ,'MA2','STRING[10]',''
         ,'ZAM','STRING[1]','');
_przec:={? ZAKR.MD=null || -1 || 0 ?};

_onlyU:=1;
ZK_RP.cntx_psh();
ZK_RP.index('MAGP');
ZK_RP.prefix(BEER.ZK_N,'*');
{? ZK_RP.first
|| {!
   |? {? _onlyU & ~(ZK_RP.P().M().RODZ='U' & ZK_RP.P().RODZ='W') || _onlyU:=0 ?};
      _magik.clear;
      {? ~_przec & ZAKR.DR<>date(0,0,0)
      || _prz:=exec('sprprzec','magazyn_przec',ZAKR.MD,ZAKR.DR,ZK_RP.P().M,ZAKR.TR);
         {? _prz>=3 || _przec:=_prz ?}
      ?};
      {? ZK_RP.P().MG<>null & ZK_RP.ILR>0 & ~_magik.find_key(ZK_RP.P().MG().SYM,ZK_RP.P().MG().SYM)
      || _magik.blank;
         _magik.MAG:=_magik.MA2:=ZK_RP.P().MG().SYM;
         _magik.ZAM:={? exec('czy_z_ok','okresy',1,0,ZAKR.DR~1,ZAKR.DR~2,ZK_RP.P().MG) || 'N' || 'T' ?};
         _magik.add(1)
      ?};
      {? ~_przec & ZK_RP.P().MG<>null() & ~exec('sprakcminus','magazyn_przec',ZK_RP.P().MG)
      || _przec:=5
      ?};
      ZK_RP.next
   !}
?};
ZK_RP.cntx_pop();

_txt:='';
_magik.clear;
{? _magik.first
|| {!
   |? {? _magik.ZAM='T' || _txt+='W magazynie: '+_magik.MAG+' okres zamknięty.\n' ?};
         _magik.next
    !}
?};
{? _txt<>'' || _txt+='Operacja niemożliwa.' ?};

_wyn:=0; par1:=null;
{? ~exec('po_zkndr','zamsiw_rea')
|| _wyn:='DR'
|? _przec=3
|| FUN.info('W magazynie dla przesunięcia magazynowego jest otwarty arkusz przeceny\n'
            '(zawierający indeksy materiałowe realizowane zamówieniem).\n'@+
            'Data dokumentu jest mniejsza lub równa dacie przeceny.\n'@+
            'Należy zmienić datę dokumentu na większą.'@);
   _wyn:='DR'
|? _przec=4
|| FUN.info('W magazynie dla przesunięcia magazynowego jest zamknięty arkusz przeceny\n'
            '(zawierający indeksy materiałowe realizowane zamówieniem).\n'@+
            'Data dokumentu jest mniejsza lub równa dacie przeceny.\n'@+
            'Należy zmienić datę dokumentu na większą.'@);
   _wyn:='DR'
|? _przec=5
|| FUN.info('W magazynie do realizacji istnieje niezakończony dokument przeceny PRC-.\n'
            'Niemożliwe utworzenie dokumentu.'@);
   _wyn:='DR'
|? _txt<>''
|| FUN.info(_txt);
   _wyn:=0
|? ~_onlyU & ZAKR.TYPYDOK=''
|| FUN.info('Należy wybrać typ dokumentu magazynowego.'@);
   _wyn:='TYPYDOK'
|? ZAKR.ZKNFK & ZAKR.TYPYSP=''
|| FUN.info('Należy wybrać typ dokumentu sprzedaży.'@);
   _wyn:='TYPYSP'
|? ~_onlyU & ~exec('po_zknnd','zamsiw_rea',ZAKR.TYPYDOK)
|| _wyn:='TYPYDOK'
|? exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TYPYDOK,ZAKR.TYPYDOK,"TYPYDOK.TD",,,'')<>'' & ZAKR.MD=null
|| FUN.info('Należy podać magazyn dla przychodowego dokumentu przesunięcia magazynowego.'@);
   _wyn:='MD'
|? (ZK_N.T().R='Z' & ZK_N.WAL<>INFO.NAROD & ZK_N.KRS=0 & INFO.KRAJ=KSTE.KRAJ)
|| FUN.info('Należy podać kurs.'@);
   _wyn:='KRS'
|? ZK_N.KRS>0 & ZK_N.DTK=date(0,0,0)
|| FUN.info('Należy podać datę kursu.'@);
   _wyn:='DTK'
|| _wyn:=1;
   {? par1=null
   || {? exec('spr_zzo','zamsiw_rea',ZAKR.DR)
      || {? ~exec('sprd_rea','zamsiw_rea',ZAKR.DR,ZAKR.TR)
         || FUN.info('Na jednym z magazynów wprowadzono inwentaryzację.'@); _wyn:='DR'
         || _wyn:=1
         ?}
      ||
         _wyn:=0
      ?}
   || _mag:=ST.MAG;ST.MAG:=par1;
      _okr:=exec('czy_z_ok','okresy',1);
      ST.MAG:=_mag;
      {? _okr
      || {? ~exec('sprd_inz','magazyn_inw',ZAKR.DR,par1,ZAKR.TR)
         || FUN.info('W magazynie wprowadzono inwentaryzację.'@);
            _wyn:='DR'
         || _wyn:=1
         ?}
      || _wyn:=0
      ?}
   ?};
   {? type_of(_wyn)=1 & _wyn & var_pres('__rurzmob')>0 & __rurzmob & ~exec('ctrlcinw','zamsiw_rea')
   || FUN.info('Na jednym z magazynów wprowadzono inwentaryzację.'@); _wyn:='DR'
   ?}
?};
   &par1
?};
{? {? type_of(_wyn)=1 || _wyn || _wyn='' ?} & Plugin.exists('ZAMREA_VALID_001')
|| _buf:=Plugin.run('ZAMREA_VALID_001',exec('FindAndGet','#table',ZK_N,ZK_N.ref(),,"ZK_N.uidref()",''));
   {? type_of(_wyn)=1 || _wyn:=_buf='' || _wyn:=_buf ?}
?};
_wyn


\ctrldtzl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: kontrola dat na pozycjach ze zleceniem
::   WE: _a - ref ZK_N
::       _b - data do porownania
::   WY: 1-jest ok 0-nie
::  OLD: \ctrldtzl/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
ZK_N.cntx_psh();
ZK_P.cntx_psh();
ZK_P.index('NAG');
ZK_P.prefix(_a);
{? ZK_P.first()
|| {!
   |? {? ZK_P.TOP=1 & ZK_P.ZL<>null & ZK_P.ZL().OD>_b || _wyn:=0 ?};
      _wyn & ZK_P.next()
   !}
?};
ZK_N.cntx_pop();
ZK_P.cntx_pop();
_wyn


\po_zkndr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji pola data realizacji
::  OLD: \po_zkndr/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAKR.DR=date(0,0,0)
|| FUN.info('Data nie może być zerowa'@);
   0
|? var_pres('__zknrea')>100 & ~exec('spr_drea','zamsiw_rea')
|| 0
|? var_pres('__eazkp')>100
|| _nodat:=0;
   _dp:=date(0,0,0);
   __eazkp.cntx_psh();
   __eazkp.prefix();
   {? __eazkp.first()
   || {!
      |? {? __eazkp.ZKN<>''
         || _dp:=exec('FindAndGet','#table',ZK_N,16+__eazkp.ZKN,,"DP");
            _nodat:=_dp<>date(0,0,0) & _dp>ZAKR.DR
         ?};
         ~_nodat & __eazkp.next()
      !}
   ?};
   __eazkp.cntx_pop();
   {? _nodat
   || FUN.info('Data powinna być większa lub równa od daty: %1.\n'
               '(Maksymalna data przyjęcia zamówienia).'@[form(_dp)]);
      0
   || 1
   ?}
|| 1
?}


\spr_drea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: kontrola podanej daty realizacji w korelacji z realizowanymi zamowieniami
::   WY: 1-jest OK 0-zla data realizacji
::  OLD: \spr_drea/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~(ZAKR.DR<=date(ST.AR,ST.AM,0) & ZAKR.DR>=date(ST.AR,ST.AM,1))
|| FUN.info('Data powinna pochodzić z aktywnego okresu.\n'
            'Aktywny okres to: %1 r.'@[form(date(ST.AR,ST.AM,0),,8)]);
   0
|| _daty:=sql('select distinct max(:_a.DTZ) DAT from :_a where :_a.WYB=\'*\'',__zknrea);
   {? _daty.first & ZAKR.DR<_daty.DAT
   || {? _daty.DAT<=date(ST.AR,ST.AM,0) & _daty.DAT>=date(ST.AR,ST.AM,1)
      || FUN.info('Data powinna być większa lub równa od daty: %1.\n'
                  '(Maksymalna data przyjęcia zamówienia).'@[form(_daty.DAT)])
      || FUN.info('Data powinna być większa lub równa od daty: %1.\n'
                  '(Maksymalna data przyjęcia zamówienia).'@[form(_daty.DAT)]+'\n\n'+
                  'Dodatkowo data realizacji powinna pochodzić z aktywnego okresu.\n'
                  'Realizacja możliwa w okresie: %1 r. lub następnych.'@[form(_daty.DAT,,8)])
      ?};
      0
   || {? (_dat:=exec('spr_ddst','zamsiw_rea'))=date(0,0,0)
      || 1
      || {? _dat<=date(ST.AR,ST.AM,0) & _dat>=date(ST.AR,ST.AM,1)
         || FUN.info('Data powinna być większa lub równa od daty: %1.\n'
                     '(Maksymalna data przyjęcia dostaw).\n'
                     'Inaczej wygenerowanego dokumentu magazynowego nie da się zaakceptować.'@[form(_dat)])
         || FUN.info('Data powinna być większa lub równa od daty: %1.\n'
                     '(Maksymalna data przyjęcia dostaw).\n'
                     'Inaczej wygenerowanego dokumentu magazynowego nie da się zaakceptować.'@[form(_dat)]+'\n\n'+
                     'Dodatkowo data realizacji powinna pochodzić z aktywnego okresu.\n'
                     'Realizacja możliwa w okresie: %1 r. lub następnych.'@[form(_dat,,8)])
         ?};
         0
      ?}
   ?}
?}


\spr_ddst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza daty dostaw na dokumencie realizacji
::   WY: data-istnieje dostawa z data pozniejsza, jest OK date(0,0,0)
::  OLD: \spr_ddst/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=date(0,0,0);
__zknrea.cntx_psh();
ZK_RP.cntx_psh();
DK.cntx_psh;
__zknrea.clear();
{? __zknrea.first()
||
   {!
   |? {? __zknrea.TREE<>0
      || ZK_RP.clear();
         {? ZK_RP.seek(__zknrea.REF) & ZK_RP.ILR>0 & ZK_RP.P().RDK<>0
         || DK.use(form(8+ZK_RP.P().NDK));
            DK.clear;
            {? DK.seek(ZK_RP.P().RDK,DK.name)
            || {? DK.DOST>ZAKR.DR & _wyn<DK.DOST || _wyn:=DK.DOST ?}
            ?}
         ?}
      ?};
      __zknrea.next()
   !}
?};
__zknrea.cntx_pop();
ZK_RP.cntx_pop();
DK.cntx_pop();
_wyn


\spr_zzo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza czy nie jest zamkniety magazyn podczas realizacji zamowienia
::   WE: _a - data dla ktorej sprawdzamy
::  OLD: \spr_zzo/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
ZK_RP.cntx_psh();
{? ZK_RP.first()
|| {!|?
      _wyn:=exec('czy_z_ok','okresy',1,0,_a~1,_a~2,ZK_RP.P().MG);
      _wyn & ZK_RP.next()
   !}
?};
ZK_RP.cntx_pop();
_wyn


\sprd_rea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza realizacje wg dat na inwenturze
::   WE: _a - data
::       [_b] - godzina
::  OLD: \sprd_rea/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
_time:={? var_pres('_b')=type_of(time) || _b || time(0,0,0) ?};
_wyn:=1;
ZK_RP.cntx_psh;
{? ZK_RP.first
|| {!
   |? {? ZK_RP.ILR>0
      || _wyn:=exec('sprd_inz','magazyn_inw',_a,ZK_RP.P().MG,_time);
         {? _wyn || _wyn:=exec('sprd_ipz','magazyn_inw',ZK_RP.P().M,_a,ZK_RP.P().MG,_time) ?}
      ?};
      _wyn & ZK_RP.next
   !}
?};
ZK_RP.cntx_pop;
_wyn


\aktznwyb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizuje znaczniki wyboru dla pozycji realizacji
::   WE: _a - identyfikator zaznaczenia
::   WY: 1-bez blędów przypisani ilości powyżej 0-z błędami
::  OLD: \aktznwyb/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_zk_p:=tab_tmp(1,'ZKP','STRING[16]','');
ZK_RP.cntx_psh();
ZK_RP.index('MAGI');
ZK_RP.prefix(_a,'*');
{? ZK_RP.first()
|| {!
   |? {? ZK_RP.REZ().AUTO & ZK_RP.REZ().SC='' & exec('FindAndGet','#table',ZK_P,ZK_RP.P,,"RMAG=null()",0)
       & var_pres('__zknrea')>0
      || __zknrea.cntx_psh();
         __zknrea.clear();
         {? __zknrea.first()
         || {!
            |? {? __zknrea.REF=($ZK_RP.ref())
               || _ilord:=exec('realOrdMg','rezerwacje',$ZK_RP.MG);
                  {? _ilord<ZK_RP.ILR || ZK_RP.ILR:=_ilord ?};
                  ZK_RP.put(1);
                  0
               || __zknrea.next()
               ?}
            !}
         ?};
         __zknrea.cntx_pop()
      ?};
      {? ZK_RP.ILR>0 & ~ZK_RP.DOST
      ||
::       dodaje ilości wg rezerwacji na plus
         _ilr:=tab_tmp(2,'MG','STRING[16]','','SC','STRING[16]','','ILR','REAL','');
         _all:=0;
         _zkp:=ZK_RP.P;
         _zkn:=ZK_RP.N;
         _zk_p.clear();
         {? ~_zk_p.find_key($_zkp,)
         || _jest:=1;
            _zk_p.blank();
            _zk_p.ZKP:=$_zkp;
            _zk_p.add(1);
            ZK_RP.cntx_psh();
            REZ.cntx_psh();
            REZ.index('ZK_PP');
            REZ.prefix(_zkp,'T','B',_a);
            {? REZ.first()
            || {!
               |? _sc:={? REZ.SC<>'' || REZ.SC || 'xxx' ?};
                  _ilr.clear();
                  {? _ilr.find_key($REZ.MG,_sc,)
                  || _ilr.ILR+=REZ.ILR;
                     _ilr.put(1)
                  || _ilr.blank();
                     _ilr.MG:=$REZ.MG;
                     _ilr.ILR:=REZ.ILR;
                     _ilr.SC:=_sc;
                     _ilr.add(1)
                  ?};
                  REZ.next()
               !};
               _ilr.clear();
               {? _ilr.first()
               || {!
                  |? _mag:=exec('FindAndGet','#table',MG,_ilr.MG,,,null());
                     _rez:=null();
                     _sc:={? _ilr.SC='xxx' || '' || _ilr.SC ?};
                     _dost:=_sc<>'';
                     REZ.index('ZK_PP');
                     REZ.prefix(_zkp,'T','B',_a,_mag);
                     {? REZ.first()
                     || {!
                        |? {? _rez=null() & REZ.SC=_sc
                           || _rez:=REZ.ref();
                              REZ.ILR:=_ilr.ILR;
                              REZ.put(1)
                           ?};
                           {? REZ.SC=_sc & REZ.ref()<>_rez || REZ.del() || REZ.next() ?}
                        !}
                     ?};
                     _add:=1;
                     ZK_RP.index('ZK_P');
                     ZK_RP.prefix(_a,_zkp,_mag);
                     {? ZK_RP.first()
                     || {!
                        |? {? {? _dost
                              || ZK_RP.DOST & ~ZK_RP.CZYREZ & ZK_RP.SC=_sc
                              || ~ZK_RP.DOST & ~ZK_RP.CZYREZ
                              ?}
                           || _add:=0;
                              0
                           || ZK_RP.next()
                           ?}
                        !}
                     ?};
                     {? _add
                     || ZK_RP.clear();
                        ZK_RP.blank();
                        ZK_RP.N:=_zkn;
                        ZK_RP.P:=_zkp;
                        ZK_RP.ILR:=_ilr.ILR;
                        ZK_RP.MG:=_mag;
                        ZK_RP.TOP:=0;
                        ZK_RP.M:=ZK_RP.P().M;
                        ZK_RP.REZ:=_rez;
                        ZK_RP.OLD_ILP:=ZK_RP.P().ILP;
                        ZK_RP.PLUS:=_ilr.ILR;
                        ZK_RP.DOST:=_dost;
                        ZK_RP.CZYREZ:=0;
                        ZK_RP.SC:=_sc;
                        ZK_RP.ID:=_a;
                        ZK_RP.W:='*';
                        {? ~ZK_RP.add(1) || _wyn:=0 ?}
                     || ZK_RP.ILR+=_ilr.ILR;
                        ZK_RP.PLUS:=_ilr.ILR;
                        ZK_RP.OLD_ILP:=ZK_RP.P().ILP;
                        ZK_RP.W:='*';
                        {? ZK_RP.put(1)
                        || REZ.cntx_psh();
                           REZ.clear();
                           {? REZ.seek(ZK_RP.REZ)
                           || REZ.ILR+=_ilr.ILR;
                              {? ~REZ.put(1) || _wyn:=0 ?}
                           ?};
                           REZ.clear();
                           {? REZ.seek(_rez) || REZ.del() ?};
                           REZ.cntx_pop()
                        || _wyn:=0
                        ?}
                     ?};
                     _ilr.next()
                  !}
               ?}
            ?};
            ZK_RP.cntx_pop();
            REZ.cntx_pop()
         ?};
         obj_del(_ilr);
         ZK_RP.get();
         {? ZK_RP.ILR>ZK_RP.REZ().ILR
         || _poz:=ZK_RP.P;
            _iledor:=ZK_RP.ILR-ZK_RP.REZ().ILR;
            _ileroz:=0;
            ZK_RP.cntx_psh();
            ZK_RP.index('ZK_P');
            ZK_RP.prefix(_a,_poz);
            {? ZK_RP.first()
            || {!
               |? {? ZK_RP.W='' & ZK_RP.REZ().ILR>0 & ZK_RP.ILR>0
                  || {? ZK_RP.REZ().ILR>=_iledor
                     || ZK_RP.ILR:=_iledor;
                        ZK_RP.W:='*';
                        ZK_RP.put(1);
                        _ileroz+=_iledor;
                        _iledor:=0
                     || ZK_RP.ILR:=ZK_RP.REZ().ILR;
                        ZK_RP.W:='*';
                        ZK_RP.put(1);
                        _ileroz+=ZK_RP.REZ().ILR;
                        _iledor-=ZK_RP.REZ().ILR
                     ?}
                  ?};
                  _iledor>0 & ZK_RP.next()
               !}
            ?};
            ZK_RP.cntx_pop();
            ZK_RP.ILR-=_ileroz;
            {? ZK_RP.M().RODZ='T' & var_pres('__zknrea')>0 & ZK_RP.ILR>ZK_RP.REZ().ILR || ZK_RP.ILR:=ZK_RP.REZ().ILR ?};
            ZK_RP.put(1)
         ?}
      ?};
      ZK_RP.next()
   !}
?};
ZK_RP.cntx_pop();
obj_del(_zk_p);
_wyn


\rozpwgsc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: dodaje rozpiske wg SC
::   WE: _a - magazyn (ref)
::       _b - material (ref)
::       _c - ilosc do rozpisania
::       [_d] - 0(domyślnie) 1-z czytnika
::       [_e] - ile jest rezerwowane, 0(domyślnie)
::       [_f] - ZK_N, który pominąć
::   WY:  ilosc jakiej nie udalo sie rozpisac
::  OLD: \rozpwgsc/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};
{? _>=6 || {? type_of(_f)<>2 || _f:='' ?} || _f:='' ?};

_ile:=_c;
_dod:={? _d || {?_e>_c || _c || _e ?} || 0 ?};

exec('sc_tymczas','magazyn_stan',_a,_b,'T',,,0);
:: exec('szuk_zkp_rp_sc','zamsiw_rea');
_il_poz:=0;
_refzkrp:=ZK_RP.ref();
_ref_zkp:=$ZK_RP.P;

_czydk_c:=ZK_RP.P().DK_C<>null();
:: _bylrez:=exec('oblzkrez','zamsiw_wspolne',ZK_RP.P,'',3);
_bylrez:={? ZK_RP.REZ<>null() & ZK_RP.REZ().REA<>'T' || ZK_RP.REZ().ILR || 0 ?};
_plus:=ZK_RP.PLUS;

MG.cntx_psh();
ZK_RP.cntx_psh();
MG.prefix();
{? __sc.first() & MG.seek(_a)
|| ile_tymc:=0;
   _ile_na:=0;
   _mgdost:=(1+MG.TYP)='D';
   _stwgdkc:=tab_tmp(1,'DKC','STRING[16]','','ILE','REAL','','ALL','REAL','');
   {!
   |? _stats:=1;
      STATS.cntx_psh;
      STATS.prefix;
      {? __sc.STATS<>'' & STATS.seek(__sc.STATS)
      ||
         _stats:=STATS.KIND='Z'
      ?};
      STATS.cntx_pop;
      {? _stats
      || _il_poz+=1;
         _ild:=0;
         {? _ile_na<>0
         || {? __sc.S>0
            || {? _ile_na<>0
               || {? -__sc.S>=_ile_na
                  || _ild:=-__sc.S;_ile_na:=_ile_na+__sc.S
                  || _ild:=_ile_na;_ile_na:=0
                  ?}
              || _ild:=__sc.S;_ile_na-=__sc.S
               ?}
            || _ild:=0
            ?}
         || _ild:=0
         ?};
         _ild+=exec('obl_stsc','magazyn_stan',__sc.RDK,__sc.NDK,_a,_b,,_f,1,_dod);
         _sc_rez:={? exec('FindAndGet','#table',M,$_b,,"IDMOB",'')='D' || EANX.ILW || 0 ?}+
                  {? __sc.DK_C<>''
                  || exec('rezScWgAtr','magazyn_stan',_a,_b,__sc.RDK,__sc.NDK
                      ,exec('FindAndGet','#table',DK_C,__sc.DK_C,,,null()),,_ref_zkp)
                  || 0
                  ?};
         _ild:={? _ild>=_sc_rez || _ild-_sc_rez || 0 ?};

         {? _ild>0 & _mgdost & __sc.DK_C<>'' & ~_czydk_c
         || _stwgdkc.clear();
            {? ~_stwgdkc.find_key(__sc.DK_C)
            || exec('obl_stan','magazyn_stan',_b,1,_a,,,,,,,,exec('FindAndGet','#table','DK_C',__sc.DK_C,,,null()));
               _stwgdkc.blank();
               _stwgdkc.DKC:=__sc.DK_C;
               _stwgdkc.ILE:=0;
               _stwgdkc.ALL:=BEER.SD;
               _stwgdkc.add(1)
            ?};
            _il_dkc:=_stwgdkc.ALL-_stwgdkc.ILE;
            {? _il_dkc<_ild || _ild:=_il_dkc ?};
            _stwgdkc.ILE+=_ild;
            _stwgdkc.put(1)
         ?};

         {? _ild>0
         || {? _ild>=ile_tymc || _ild:=_ild-ile_tymc; ile_tymc:=0 || ile_tymc:=ile_tymc-_ild; _ild:=0 ?}
         ?};

         {? _ild>0 & _ild>=_ile & (ZK_RP.clear(); ZK_RP.seek(_refzkrp))
         || _r_dk_c:={? ZK_RP.REZ().DK_C<>null() || ZK_RP.REZ().DK_C || ZK_RP.P().DK_C ?};
            {? ZK_RP.get() & (~_mgdost | ZK_RP.P().ZD_POZ='' | ZK_RP.P().ZD_POZ=__sc.ZD_POZ | ZK_RP.REZ().SC='')
             & {? _mgdost & _r_dk_c<>null
               || exec('czyzawch','mat_atr',_r_dk_c,exec('FindAndGet','#table','DK_C',__sc.DK_C,,,null()))
               || 1
               ?}
            || _two:=0;
               ZK_RP.ILR:=_ile;
               {? _plus<=ZK_RP.ILR
               || ZK_RP.PLUS:=_plus;
                  _plus:=0
               || ZK_RP.PLUS:=ZK_RP.ILR;
                  _plus-=ZK_RP.ILR
               ?};
               ZK_RP.SC:=form(__sc.NDK,8)+(-(('0000000'+BB.hex(__sc.RDK))+8));
               {? ~_d
               || {? _bylrez>=_ile
                  || _czyrez:=_ile
                  || _czyrez:=_bylrez;
                     _two:=_czyrez>0
                  ?};
                  _bylrez-=_czyrez;
                  ZK_RP.CZYREZ:=ZK_RP.M().RODZ='T' & _czyrez>0;
                  {? _two
                  || ZK_RP.ILR:=_czyrez;
                     ZK_RP.put(1);
                     ZK_RP.CZYREZ:=0;
                     ZK_RP.ILR:=_ile-_czyrez;
                     ZK_RP.add(1)
                  || ZK_RP.put(1)
                  ?}
               || ZK_RP.put(1)
               ?};
               _ile:=0
            ?}
         |? _ild>0 & _ild<_ile & (ZK_RP.clear(); ZK_RP.seek(_refzkrp))
         || _r_dk_c:={? ZK_RP.REZ().DK_C<>null() || ZK_RP.REZ().DK_C || ZK_RP.P().DK_C ?};
            {? ZK_RP.get() & (~_mgdost | ZK_RP.P().ZD_POZ='' | ZK_RP.P().ZD_POZ=__sc.ZD_POZ | ZK_RP.REZ().SC='')
            & {? _mgdost & _r_dk_c<>null
               || exec('czyzawch','mat_atr',_r_dk_c,exec('FindAndGet','#table','DK_C',__sc.DK_C,,,null()))
               || 1
               ?}
            || _two:=0;
               ZK_RP.ILR:=_ild;
               {? _plus<=ZK_RP.ILR
               || ZK_RP.PLUS:=_plus;
                  _plus:=0
               || ZK_RP.PLUS:=ZK_RP.ILR;
                  _plus-=ZK_RP.ILR
               ?};
               ZK_RP.SC:=form(__sc.NDK,8)+(-(('0000000'+BB.hex(__sc.RDK))+8));
               {? ~_d
               || {? _bylrez>=_ild
                  || _czyrez:=_ild
                  || _czyrez:=_bylrez;
                     _two:=_czyrez>0
                  ?};
                  _bylrez-=_czyrez;
                  ZK_RP.CZYREZ:=ZK_RP.M().RODZ='T' & _czyrez>0;
                  {? _two
                  || ZK_RP.ILR:=_czyrez;
                     ZK_RP.add(1);
                     ZK_RP.CZYREZ:=0;
                     ZK_RP.ILR:=_ild-_czyrez;
                     ZK_RP.add(1)
                  || ZK_RP.add(1)
                  ?}
               || ZK_RP.add(1)
               ?};
               _ile-=_ild
            ?}
         ?}
      ?};
      _ile>0 & __sc.next()
   !};
   obj_del(_stwgdkc)
?};
MG.cntx_pop();
ZK_RP.cntx_pop();
_ile


\szuk_zkp_rp_sc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [12.30]
:: OPIS: Sprawdza czy dane SC nie bylo uzyte juz do realizacji biezacego zamowienia (poprawka spis)
::  OLD: \szuk_zkp_rp_sc/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_RP.cntx_psh(); __sc.cntx_psh();
{? ZK_RP.first()
|| {!
   |? {? ZK_RP.SC<>'' & __sc.first()
      || _jest:=1;
         {!
         |? {? ZK_RP.SC=form(__sc.NDK,8)+(-(('0000000'+BB.hex(__sc.RDK))+8))
            || __sc.S-=ZK_RP.ILR;
               {? __sc.S=0 || __sc.del || __sc.put() ?};
               _jest:=0
            ?};
            _jest & __sc.next()
         !}
     ?};
     ZK_RP.next()
   !}
?};
ZK_RP.cntx_pop(); __sc.cntx_pop();
1


\sprzkinw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: sprawdza inwenture dla pozycji
::   WE: _a - ref magazynu
::       _b - data do sprawdzenia
::       [_c] - 0-naglowek(domyslnie) 1-bez drugiej kontroli
::       [_d] - godzina
::   WY: 0-inwentura 1-brak inwentury
::  OLD: \sprzkinw/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};
_time:={? var_pres('_d')=type_of(time()) || _d || time(0,0,0) ?};

_wyn:=1;
{? ZK_RP.last()
|| {!
   |? _wyn:=exec('sprd_inp','magazyn_inw',ZK_RP.P().M,_b,_a,,_time);
      _wyn & ZK_RP.prev()
   !}
?};
{? ~_c
|| {? _wyn
   || _wyn:=exec('spr_datn','magdok_wspolne',_a,_b,exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TYPYDOK,ZAKR.TYPYDOK)
         ,0,,0,,,_time)
   || _wyn:=0
   ?}
?};
_wyn


\gen_nagl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: generacja naglowka dokumentu magazynowego
::   WE: _a - data dokumentu
::       _b - typ dokumentu
::       _c - magazyn
::       _d - kontrahent
::       _e - drugi magazyn
::       _f - odbiorca
::       _g - powolaj okienko dla skladu celnego 1 nie powoluj 0
::       _h - =1-nadawac numer zgodnie z ustawieniami parametru numeracja tymczasowa w typie dokumentu
::            =0-ignorowac numeracje tymczasowa np.jesli generowany PZ jest zaakceptowany
::       [_i] - uzupelnienie informacji w tabeli __gennd
::       [_j] - zlecenie
::       [_k] - wydzial
::       [_l] - 1-bez przerywania transakcji 0(domyślnie)-tak
::       [_m] - klucz grupujący domyślnie pusty string
::       [_n] - waluta
::       [_o] - godzina
::       [_p] - projekt
::  OLD: \gen_nagl/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>4 || _a:=date() ?} || _a:=date() ?};
{? _>=2 || {? type_of(_b)<>7 || _b:=null ?} || _b:=null ?};
{? _>=3 || {? type_of(_c)<>7 || _c:=null ?} || _c:=null ?};
{? _>=4 || {? type_of(_d)<>7 || _d:=null ?} || _d:=null ?};
{? _>=5 || {? type_of(_e)<>7 || _e:=null ?} || _e:=null ?};
{? _>=6 || {? type_of(_f)<>7 || _f:=null ?} || _f:=null ?};
{? _>=7 || {? type_of(_g)<>1 || _g:=0 ?} || _g:=0 ?};
{? _>=8 || {? type_of(_h)<>1 || _h:=1 ?} || _h:=1 ?};
{? _>=9 || {? type_of(_i)<>1 || _i:=0 ?} || _i:=0 ?};
{? _>=10 || {? type_of(_j)<>7 || _j:=null ?} || _j:=null ?};
{? _>=11 || {? type_of(_k)<>7 || _k:=null ?} || _k:=null ?};
{? _>=12 || {? type_of(_l)<>1 || _l:=0 ?} || _l:=0 ?};
{? _>=13 || {? type_of(_m)<>2 || _m:='' ?} || _m:='' ?};
{? _>=14 || {? type_of(_n)<>7 || _n:=exec('bl_wal','ustawienia') ?}  || _n:=exec('bl_wal','ustawienia') ?};
_time:={? var_pres('_o')=type_of(time()) || _o || time(0,0,0) ?};
{? _>=16  || {? type_of(_p)<>7 || _p:=null ?} || _p:=null ?};

HELP.WHERE:='M';
_stmag:=ST.MAG;
ST.MAG:=_c;
TYPYDOK.prefix();
TYPYDOK.seek(_b);
ND.prefix();
ND.blank();
ND.AR:=_a~1;
ND.AM:=_a~2;
ND.TYP:=_b;
ND.NR:=0;
ND.MAG:=_c;
ND.D:=_a;
ND.T:=_time;
ND.MD:=_e;
ND.KH:=_d;
ND.KH_ODB:=_f;
ND.F:='N';
ND.FAKS:=null;
ND.FAKS_REF:='';
ND.WAR:=0;
ND.KK:=TYPYDOK.KK;
ND.Z:='N';
ND.ZAK:='N';
ND.IST_TYP:=exec('nd_ist_typ_bl','magdok_nag');
ND.IST_OKR:=form(ND.D~1,-4,,'9 ')+form(ND.D~2,-2);
ND.ZL:=_j;
ND.WYD:=_k;
ND.GRP_KEY:=_m;
ND.WAL:=_n;
PROJEKTY.cntx_psh();TYPYDOK.cntx_psh();PROJTYPY.cntx_psh();
PROJEKTY.prefix();TYPYDOK.prefix();PROJTYPY.prefix();
ND.PROJEKTY:=
{? _p<>null & PROJEKTY.seek(_p) & (ND.TYP().PROJZAKR='Wszystkie' | (4+PROJEKTY.T().R)=(4+ND.TYP().PROJZAKR))
|| _p || null
?};
PROJEKTY.cntx_pop();TYPYDOK.cntx_pop();PROJTYPY.cntx_pop();
:: uzupelnienie NIP_UE i intrastatow etc.
exec('ae_n_kh','magdok_nag',1);

{? HELP.MJS='Z' | (HELP.MJS='' & var_pres('__zknrtk')>0)
|| ND.WAL:=ZK_N.WAL;
   ND.RTK:=__zknrtk;
   ND.NTK:=__zknntk;
   ND.BTK:=__zknbtk;
   ND.DTK:=__zkndtk;
   ND.SWAL:=__zknswa;
   ND.KRS:=__zknkrs;
   ND.RAB:=ZK_N.RAB;
   ND.RAB_TYP:=ZK_N.RAB_TYP;
   ND.KH_MSC:=ZK_N.KH_MSC;
   ND.CB:=ZK_N.CB;
   ND.NIP_UE:=ZK_N.NIP_UE;
   ND.SPP:=ZK_N.SPP;
   ND.SPOBLRAB:=ZK_N.SPOBLRAB;
   ND.GRATISY:=ZK_N.GRATISY;
   ND.KRAJ_VAT:=ZK_N.KRAJ_VAT;
   ND.PROC:=ZK_N.PROC;

   ND.NWAL:=exec('bl_nwal','ustawienia');
   {? ND.NWAL=INFO.NAROD
   ||
      ND.NRTK:=__zknrtk;
      ND.NNTK:=__zknntk;
      ND.NBTK:=__zknbtk;
      ND.NDTK:=__zkndtk;
      ND.NSWAL:=__zknswa;
      ND.NKRS:=__zknkrs
   ?};
:: zamowienie wewnetrzne
   {? ZK_N.T().R='W' | ND.TYP().TD<>''
   || {? ND.TYP().TD<>'' || ND.MD:=ZAKR.MD ?};
      ND.ZL:=ZK_N.ZL;
      ND.WYD:=ZK_N.WYD;
      {? ZK_N.KK<>null() || ND.KK:=ZK_N.KK ?}
   ?}
|? HELP.MJS='F' & (ST.ODDZ_REF().TW*'M' | ST.ODDZ_REF().TW='' & INFO.TW*'M')
|| ND.WAL:=FAKS.WAL;
   ND.RTK:=FAKS.RTK;
   ND.NTK:=FAKS.NTK;
   ND.BTK:=FAKS.BTK;
   ND.DTK:=FAKS.DTK;
   ND.SWAL:=FAKS.SWAL;
   ND.KRS:=FAKS.KRS;
   ND.RAB:=FAKS.RAB;
   ND.SPOBLRAB:=FAKS.SPOBLRAB;
   ND.RAB_TYP:=FAKS.RAB_TYP;
   ND.SPP:=FAKS.T().SPP;
   ND.GRATISY:=FAKS.GRATISY;
   ND.NWAL:=exec('bl_nwal','ustawienia');
   ND.NRTK:=FAKS.NRTK;
   ND.NNTK:=FAKS.NNTK;
   ND.NBTK:=FAKS.NBTK;
   ND.NDTK:=FAKS.NDTK;
   ND.NSWAL:=FAKS.NSWAL;
   ND.NKRS:=FAKS.NKRS;
   ND.NIP_UE:=FAKS.NIP_UE;
   ND.KRAJ_VAT:=FAKS.KRAJ_VAT;
   ND.PROC:=FAKS.PROC
|? (HELP.MJS='K' | HELP.MJS='E') & ND.MAG().SKL='T'
|| ND.WAL:=INFO.NAROD;
   ND.RTK:=0;
   ND.NTK:='';
   ND.BTK:='';
   ND.DTK:=date(0,0,0);
   ND.SWAL:=2;
   ND.KRS:=0;
   ND.SCWAL:=FAKS.WAL;
   ND.SCRTK:=FAKS.RTK;
   ND.SCNTK:=FAKS.NTK;
   ND.SCBTK:=FAKS.BTK;
   ND.SCDTK:=FAKS.DTK;
   ND.SCSWAL:=FAKS.SWAL;
   ND.SCKRS:=FAKS.KRS;
   {? FAKS.WHERE='E' || ND.NIP_UE:=FAKS.NIP_UE ?}
|? (HELP.MJS='K' | HELP.MJS='E') & (ST.ODDZ_REF().TW*'M' | ST.ODDZ_REF().TW='' & INFO.TW*'M')
|| ND.WAL:=FAKS.WAL;
   ND.RTK:=FAKS.NRTK;
   ND.NTK:=FAKS.NNTK;
   ND.BTK:=FAKS.NBTK;
   ND.DTK:=FAKS.NDTK;
   ND.SWAL:=FAKS.NSWAL;
   ND.KRS:=FAKS.NKRS;
   {? FAKS.WHERE='E' || ND.NIP_UE:=FAKS.NIP_UE ?}
?};
{? HELP.MJS='F'
|| ND.CB:={? FAKS.T().FIS='T' || 'T' || 'N' ?}
?};
{? HELP.MJS='E'
|| ND.IST_TYP:=exec('nd_ist_typ_bl','magdok_nag');
   ND.KPW:=FAKS.KPW;
   ND.WD:=FAKS.WD;
   ND.RTRANSAK:=FAKS.RTRANSAK;
   ND.RTRANSPO:=FAKS.RTRANSPO
?};

_dostate:=do_state();
{? ~_l & _dostate || end() ?};
POM.TAB:='ND';
POM.TYPDOK:={? ND.TYP<>null || ND.TYP().KOD ?};
POM.NRT:={? ND.TYP<>null & _h=1 || ND.TYP().NRT || 0 ?};
{? ~_l & _dostate || do() ?};

DPOZ.SCKRSZM:=1;
_ref:=null();
{? Plugin.exists('ZAMREA_DOKMAG_001') || Plugin.run('ZAMREA_DOKMAG_001','ND') ?};

{? ND.add() & ND.r_lock(1)
|| ND.NR:=exec('numer_new','numery','N',1);
   exec('znak','numery','ND');
   _ref:={? {? _g
            || ND.win_edit('SREDPZ'); ND.edit("params_exec('nd_valid','magdok_nag')")
            || 1
            ?} & ND.put()
         ||
            ND.ref()
         ||
            {? do_state()<2 & ~Plugin.run('BEFORE_DELTAB_001',ND.ref()) & do_state() || undo() ?};
            numer:=ND.NR;
            oldnumer:=1;
            exec('nr_old','numery');
            ND.del();
            null
         ?};
   ND.r_unlock()
?};
{? _i & ND.KH<>null & ND.TYP().Z='T'
|| __gennd.clear();
   __gennd.blank();
   __gennd.WYB:='N';
   __gennd.MGS:=ND.MAG().SYM;
   __gennd.SYM:=ND.SYM;
   __gennd.SQL:=$ND.ref();
   __gennd.add(1)
?};
DPOZ.SCKRSZM:=0;
ST.MAG:=_stmag;
_ref


\gen_nrea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: tworzy naglowek realizacji
::   WE:  _a  - ref dokumentu magazynowego
::       [_b] - 1-wypelniaj pola FAKS i SFK, 0(domyslnie)-nie
::        _c  - klucz grupujący
::       [_d] - usługi
::       [_e] - data realizacji dla usług
::   WY: ref utworzonego naglowka realizacji
::  OLD: \gen_nrea/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
_onlyU:={? var_pres('_d')=type_of(0) || _d || 0 ?};
_dat:={? var_pres('_e')=type_of(date(0,0,0)) || _e || date(0,0,0) ?};

ND.cntx_psh();
ND.clear();
{? ND.seek(_a)
||
   _nd:=$ND.ref;
   _sym:=ND.SYM;
   _mag:=ND.MAG;
   _fk:=ND.FAKS_REF;
   _sfk:={? ND.FAKS_REF<>'' || exec('FindAndGet','#table','FAKS',ND.FAKS_REF,,"SYM",'') || '' ?};
   _dfk:={? ND.FAKS_REF<>'' || exec('FindAndGet','#table','FAKS',ND.FAKS_REF,,"DW",date(0,0,0)) || date(0,0,0) ?};
   _dat:=ND.D;
   _drej:=ND.DR;
   _trej:=ND.CR
||
   _nd:='';
   _dat:=date(0,0,0);
   _dfk:=date(0,0,0);
   _sym:={? _onlyU || '- USŁUGI -' || '' ?};
   _fk:='';
   _sfk:='';
   _mag:=null;
::   _dat:=date(0,0,0);
   _drej:=date(0,0,0);
   _trej:=time(0,0,0)
?};
ND.cntx_pop();

ZK_RN.clear();
ZK_RN.N:=BEER.ZK_N;
ZK_RN.US:=OPERATOR.USER;
ZK_RN.DR:=date();
ZK_RN.TR:=time();

ZK_RN.MG:=_mag;
ZK_RN.ND:=_nd;
ZK_RN.SWZ:=_sym;
ZK_RN.DND:=_dat;

{? _b
|| ZK_RN.FAKS:=_fk;
   ZK_RN.SFK:=_sfk;
   ZK_RN.DFK:=_dfk
|| ZK_RN.FAKS:='';
   ZK_RN.SFK:='';
   ZK_RN.DFK:=date(0,0,0)
?};

ZK_RN.NR:=0;
ZK_RN.SYM:='';

ZK_RN.GRP_KEY:=_c;

_wyn:=
   {? ZK_RN.add(1)
   || POM.TYPDOK:='ZKR'; POM.TAB:='ZK_RN';
      exec('numer_new','numery','PACZKA');
      exec('znak','numery','ZK_RN');
      _ok:={? ZK_RN.NR<>0 || ZK_RN.put(1) ?};
      {? _ok || ZK_RN.ref || ZK_RN.del; null ?}
   || null
   ?};
_wyn


\gen_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: generacja pozycji WZ-tki
::   WE: _a   naglowek dokumentu magazynowego - ND.ref
::       _b   material M.ref
::       _c   numer pozycji
::       _d   ilosc
::       _e   rdk
::       _f   ndk
::       _g   cena
::       _h   cena w walucie
::       _i   kurs
::       _j   waluta
::       _k   rabat
::       _l   stawka VAT
::      [_m]  $ZK_RN.ref
::      [_n]  jednostka dodatkowa - ref SQL
::      [_o]  wspolczynnik dla jednostki dodatkowej
::      [_p]  ilosc wg jednostki dodatkowej
::      [_q]  konto kosztow
::      [_r]  $PROJRMS.ref
::      [_s]  zlecenie produkcyjne
::      [_t]  wydzial
::      [_u]  rabat kwota
::      [_v]  TAR_H.ref
::      [_w]  PROMO.ref
::      [_x]  $ZK_RP.ref
::      [_y]  time stamp dla cennikow sprzedazy
::      [_z]  uwagi
::  OLD: \gen_pozy/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=13 || {? type_of(_m)<>2 || _m:='' ?} || _m:='' ?};
{? _>=14 || {? type_of(_n)<>2 || _n:='' ?} || _n:='' ?};
{? _>=15 || {? type_of(_o)<>1 || _o:=1 ?} || _o:=1 ?};
{? _>=16 || {? type_of(_p)<>1 || _p:=_d ?} || _p:=_d ?};
{? _>=17 || {? type_of(_q)<>7 || _q:=null ?} || _q:=null ?};
{? _>=18 || {? type_of(_r)<>2 || _r:='' ?} || _r:='' ?};
{? _>=19 || {? type_of(_s)<>7 || _s:=null ?} || _s:=null ?};
{? _>=20 || {? type_of(_t)<>7 || _t:=null ?} || _t:=null ?};
{? _>=21 || {? type_of(_u)<>1 || _u:=0 ?} || _u:=0 ?};
{? _>=22 || {? type_of(_v)<>7 || _v:=null ?} || _v:=null ?};
{? _>=23 || {? type_of(_w)<>7 || _w:=null ?} || _w:=null ?};
{? _>=24 || {? type_of(_x)<>2 || _x:='' ?} || _x:='' ?};
{? _>=25 || {? type_of(_y)<>1 || _y:=0 ?} || _y:=0 ?};
{? _>=26 || {? type_of(_z)<>2 || _z:='' ?} || _z:='' ?};

_tmg:=(1+ST.MAG().TYP);
_cen:=0;
_wyn:=null;
_dst:=date(0,0,0);
_dk_c:=null;
_scean:='';
_tw:=date(0,0,0);
_gs1:=(+EANX.RGS1)=16;
_projekty:=null();

{? _f<>''
||
   ND.cntx_psh();
   _msk:=DK.name();
   DK.cntx_psh();
   ND.use('nagdo'+(_f+3));
   DK.use(_f);
   DK.prefix();
   {? DK.seek(_e,_f)
   || _dst:=DK.N().D;
      _tmg:=(1+DK.N().MAG().TYP);
      _cen:=exec('cena_mag','ceny',_b,_e,_f,DK.N().MAG,1,3);
      _dk_c:=DK.DK_C;
      _scc:=DK.SCC;
      _kp:=DK.KP;
      _scean:=DK.SCEAN;
      _tw:=DK.TW
   || _dst:=date(0,0,0);
      _eanl:=null
   ?};
   DK.cntx_pop();
   ND.cntx_pop()
||
   DK.N:=_a; _cen:=0; _eanl:=null
?};

_cn:=_cb:=0;
ND.cntx_psh();
ND.clear();
_zb:={? ND.seek(_a)
     || {? _tmg='D' & (ND.TYP().AFIFO='F' | ND.TYP().AFIFO='L' | ND.MAG().IL='T') & ~_e
        || _tmg:=ND.TYP().AFIFO;
           {? _tmg='' & ND.MAG().IL='T' || _tmg:='F' ?}
        ?};
        ND.CB='T'
     || 0
     ?};
ND.cntx_pop();
SLO.cntx_psh();
SLO.clear();
_wsp:=1+{? SLO.seek(_l) || (#((SLO.KOD*'%')+SLO.KOD-1))*0.01 || 0 ?};
SLO.cntx_pop();

{? _g=0 & _h & _i
:: ustalenie ceny w narodowej na podstawie walutowej i kursu jesli wczeniej nie podana
||
   DK.WAL:=_j;
   _walj:=exec('FindInSet','#table','WAL','WAL_SYM',DK.WAL().KOD,,"WAL.J",,,1);
   _g:=_h*_i/_walj $2
?};
_dokl_c:=exec('FindAndGet','#table',M,_b,,"DOKL_S",2);

{? _zb
|| _cb:=_g; _cn:=_cb/_wsp $_dokl_c
|| _cn:=_g; _cb:=_cn*_wsp $_dokl_c
?};

{? _n<>'' || exec('przyjdod','jm',_n,_o,_p) ?};

_jestdk:=0;
_zamrp:={? _x<>'' || $exec('FindAndGet','#table','ZK_RP',_x,,"P",null()) || '' ?};
_grop:={? _zamrp<>'' || exec('FindAndGet','#table','ZK_RP',_x,,"P().N().GROP",null()) || null() ?};
{? _tmg='D' & _e<>0 & _f<>'' & _zamrp<>'' & ~_gs1
|| DK.cntx_psh();
   DK.index('DOSTN');
   DK.prefix(_a,_e,_f);
   {? DK.first() & DK.PLUS='N'
   || {!
      |? {? $exec('FindAndGet','#table','ZK_RP',DK.ZAM_RP,,"P",null())=_zamrp
         || _wyn:=DK.ref();
            _jestdk:=1;
            DK.IL+=_d;
            DK.IL2+={? _p=0 | _o=1 || _d || _p ?};
            DK.put(1);
            0
         || DK.next()
         ?}
      !}
   ?};
   DK.cntx_pop()
|? _zamrp<>'' & ~_gs1
|| DK.cntx_psh();
   DK.index('MAM');
   DK.prefix(_a,_b);
   {? DK.first() & DK.PLUS='N'
   || {!
      |? {? $exec('FindAndGet','#table','ZK_RP',DK.ZAM_RP,,"P",null())=_zamrp
          & {? (';FL'*DK.N().TYP().AFIFO)>1 || DK.DOST=date(0,0,0) & DK.AFIFO=DK.N().TYP().AFIFO || 1 ?}
         || _wyn:=DK.ref();
            _jestdk:=1;
            DK.IL+=_d;
            DK.IL2+={? _p=0 | _o=1 || _d || _p ?};
            DK.put(1);
            0
         || DK.next()
         ?}
      !}
   ?};
   DK.cntx_pop()
?};
{? ~_jestdk
|| _wyn:=exec('adddk','magdok_poz',_a,_b,_d,_cen,{? 'FLŚE'*_tmg || date(0,0,0) || _dst ?},_k,_cn,_cb,,_l,,,7,
          {? 'FLŚE'*_tmg || 0  || _e ?},{? 'FLŚE'*_tmg || '' || _f ?},_dk_c,,,_m)
?};

DK.cntx_psh();
DK.prefix();
{? DK.seek(_wyn)
||
   {? DK.N().MAG().TYP*'EWI'
   || DK.C:=exec('biez_cen','ceny_dok',DK.M,DK.N().MAG,DK.N().D,,DK.N().T)
   |? 'LF'*(1+DK.N().MAG().TYP)
   || DK.C:=0;
      DK.WAR:=0
   ?};
   {? DK.N().MAG().SKL='T'
   || DK.SCC:=_scc;
      DK.SCWAR:=(DK.IL*DK.SCC)$2;
      DK.KCN:=exec('daj_cn_ref','sklad',DK.M,DK.N().D);
      DK.KP:=_kp;
      DK.CLO:=exec('daj_clo','sklad',DK.M,DK.N().D,DK.KP,DK.KCN().KOD);
      DK.C:=(DK.SCC * DK.N().SCKRS)$2
   ?};
   DK.WAR:=(DK.IL*DK.C)$2;
   DK.CWAL:=_h;
   DK.KURS:=_i;
   DK.WAL:=_j;
   DK.RAB:=_k;
   DK.SV:=_l;
   DK.J2:={? _n<>'' & _p<>0 || exec('FindAndGet','#table','JM',_n,,,null()) || DK.M().J ?};
   _jmg:=DK.M().J2;
   DK.T2:={? _jmg<>null() || 'M' |? DK.J2<>DK.M().J & ~(exec('get','#params',400000,2)*'MG') || 'G' || 'A' ?};
   {? _jmg=null() & exec('get','#params',400000,2)*'MG'
   || DK.N();
      {? ND.TYP().P='T' & 'RA'*(_rodz:=exec('get','#params',400001,2))
      || DK.T2:=_rodz
      |? ND.TYP().P<>'T' & ~(ND.TYP().DS='T' & ND.TYP().CS='T') & 'RA'*(_rodz:=exec('get','#params',400002,2))
      || DK.T2:=_rodz
      |? ND.TYP().P<>'T' & (ND.TYP().DS='T' & ND.TYP().CS='T') & 'RA'*(_rodz:=exec('get','#params',400003,2))
      || DK.T2:=_rodz
      ?}
   ?};

   DK.WS2:={? _p=0 || 1 || _o ?};
   {? ~_jestdk || DK.IL2:={? _p=0 | _o=1 || _d || _p ?} ?};
   {? _jmg<>null() & (DK.WS2=1 | DK.WS2=0)
   || DK.J2:=DK.M().J2;
      DK.T2:='M';
      DK.WS2:=exec('oblWSP','jm',DK.M);
      DK.IL2:=0;
      exec('oblJMG','jm',DK,'IL',DK.PLUS='T')
   |? DK.T2<>'N' & DK.J2<>DK.M().J & DK.WS2=1
   || _odwr:=DK.N().TYP().P='N' & DK.N().TYP().DS='T' & DK.N().TYP().CS='T';
      DK.WS2:=exec('prz','jm',DK.M,DK.J2,DK.M().J);
      {? DK.WS2>1 || {? _odwr || DK.WS2:=1/DK.WS2 ?} ?};
      _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
      DK.IL2:={? DK.WS2>0
              || DK.IL*DK.WS2
              || DK.WS2:=1; DK.J2:=DK.M().J; DK.IL
              ?} $ _dokl_s
   ?};
   DK.KK:=_q;
   DK.PROJEKT:=_r;
   DK.ZL:=_s;
   DK.WYD:=_t;
   {? DK.ZL<>null() & var_pres('__reazlzk')=118
    & (__reazlzk.clear(); __reazlzk.prefix($DK.ZL,DK.N().GRP_KEY+(DK.name()+3)); ~__reazlzk.first())
   || __reazlzk.blank();
      __reazlzk.ZL:=$DK.ZL;
      __reazlzk.ZAM_REA:=DK.N().GRP_KEY+(DK.name()+3);
      DK.GRP:='2';
      __reazlzk.add(1)
   ?};
   DK.RABK:=_u;
   DK.TAR_H:=exec('tar_h_copy','ceny_dok',_v,DK.name+3);
   DK.TAR_TMS:=_y;
   DK.PROMO:=_w;
   exec('projekt2projm','projekty',DK.PROJEKT);
   DK.PROJEKTO:=$PROJM.PROJEKTY;
   DK.ZAM_RP:=_x;
   DK.GROP:=_grop;
   {? DK.GROP<>null() & var_pres('__reagozk')=118
    & (__reagozk.clear(); __reagozk.prefix($DK.GROP,DK.N().GRP_KEY+(DK.name()+3)); ~__reagozk.first())
   || __reagozk.blank();
      __reagozk.GROP:=$DK.GROP;
      __reagozk.ZAM_REA:=DK.N().GRP_KEY+(DK.name()+3);
      DK.GRP:='2';
      __reagozk.add(1)
   ?};
   DK.DK_C:=_dk_c;
   DK.SCEAN:=_scean;
   DK.TW:=_tw;
   {? DK.PLUS='T' & DK.TW=date(0,0,0) & DK.M().TWD>0 || DK.TW:=DK.N().D+DK.M().TWD ?};
   {? ~DK.RDK || DK.SRDK:='' ?};
   DK.AFIFO:={? ~DK.RDK & (1+DK.N().MAG().TYP)='D' & DK.N().MAG().PAL<>'T'
              & (DK.N().TYP().AFIFO='F' | DK.N().TYP().AFIFO='L' | DK.N().MAG().IL='T')
             || {? DK.N().TYP().AFIFO<>'' || DK.N().TYP().AFIFO || 'F' ?}
             || ''
             ?};
   DK.UWAGI:=_z;
   {? DK.PLUS='N' & DK.CWAL || exec('po_cenaw','ceny',,0) ?};
   {? DK.PLUS='N' & DK.N().TYP().TD<>'' & DK.SRDK<>''
   || DK.PRDK:=exec('FindAndGet','#table',DK,DK.SRDK,,"PRDK",DK.SRDK)
   ?};
   exec('obl_wars','magdok_poz');
   DK.CWAL;
   PROJEKTY.cntx_psh();TYPYDOK.cntx_psh();PROJTYPY.cntx_psh();ND.cntx_psh();
   PROJEKTY.prefix();TYPYDOK.prefix();PROJTYPY.prefix();ND.prefix();
   DK.N();
   {? var_press('__zk_p_p')=7 || _projekty:=__zk_p_p ?};
   {? var_press('__fap_p')=7 || _projekty:=__fap_p ?};
   DK.PROJEKTY:=
   {? _projekty<>null()
   & PROJEKTY.seek(_projekty)
   & (ND.TYP().PROJZAKR='Wszystkie' | (4+PROJEKTY.T().R)=(4+ND.TYP().PROJZAKR))
   || _projekty
   || null
   ?};
   PROJEKTY.cntx_pop();TYPYDOK.cntx_pop();PROJTYPY.cntx_pop();ND.cntx_pop();
   exec('blank_kp','magdok_wspolne',DK);
   {? Plugin.exists('ZAMREA_DOKMAG_001') || Plugin.run('ZAMREA_DOKMAG_001','DK') ?};
   DK.put();
   {? DK.PLUS='N' || exec('update','rezerwacje','DK',DK.ref(),DK.N().MAG,DK.M,DK.IL,DK.SRDK) ?};
:: naliczenie opłat dodatkowych
   exec('actTAXS','oplaty_dod',DK.N().uidref(),DK.uidref(),DK.M,DK.M)
?};
DK.cntx_pop();
DK.get();
_wyn


\lim2zpar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: zwraca partię o ile jest jedna dla limitu
::   WE: _a - ZLIM.ref()
::   WY: ZPARN.ref() lub null()
::  OLD: \lim2zpar/partie.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null();
_akt:=ZLIM.name();
_msk:=ref_name(_a);
{? _a<>null()
|| ZLIM.cntx_psh();
   ZGH.cntx_psh();
   ZGP.cntx_psh();
   ZPARN.cntx_psh();
   {? _akt<>_msk || ZLIM.use(_msk) ?};
   ZLIM.clear();
   {? ZLIM.seek(_a)
   || _zgh:=ZLIM.ZGP().NRZLP;
      _zgh:=exec('party_first_zgh','zl_guide',_zgh);
      {? _zgh<>null()
      ||
         _zlec:=ZLIM.ZLEC;
         ZPARN.index('ZGH');
         ZPARN.prefix(_zgh);
         {? ZPARN.first() & ZPARN.size()=1
         || _wyn:=ZPARN.ref()
         ?}
      ?}
   ?};
   {? _akt<>_msk || ZLIM.use(_akt) ?};
   ZLIM.cntx_pop();
   ZGH.cntx_pop();
   ZGP.cntx_pop();
   ZPARN.cntx_pop()
?};
_wyn


\aktb_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przywraca poprzednie rezerwacje wg poprzedniej tabelki na pozycjach zamówienia
::   WE: _a - ref SQL ZK_P
::       _b - ilosc realizowana
::   WY: 1-przypisano 0-nie
::  OLD: \aktb_rez/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_ild:=_b;
__bufrez.cntx_psh();
__bufrez.clear();
__bufrez.prefix(_a);
{? __bufrez.first()
|| {!
   |? _ilw:=__bufrez.ILR-__bufrez.ILW;
      {? _ilw>=_ild
      || _wyn:=1;
         __bufrez.ILW+=_ild;
         __bufrez.put(1);
         _ild:=0
      |? _ilw>0 & _ilw<_ild
      || _wyn:=1;
         __bufrez.ILW:=__bufrez.ILR;
         __bufrez.put(1);
         _ild-=_ilw
      ?};
      _ild>0 & __bufrez.next()
   !}
?};
__bufrez.cntx_pop();
_wyn


\klim_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
:: OPIS: kontrola limitu kredytowego podczas wystawiana dokumentu magazynowego z zamowienia - ND w buforze
::   WY: 1/0 czy kontynuowac
::  OLD: \klim_wys/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
KH_DOD.KLIM:=__War_f('KH_DOD','KLIM',ND.KH);
{? KH_DOD.KLIM<>null
||
   _klim:=KH_DOD.KLIM;
   _dok_zam:=KH_DOD.KLIM().ZAM_SUM
||
   _klim:=ND.KH().GRKH().KLIM;
   KH_DOD.KLIM:=__War_f('KH_DOD','KLIM',ND.KH);
   _dok_zam:=KH_DOD.KLIM().ZAM_SUM
?};
_cur_brutto:={? _dok_zam='T' || 0 || SUM.BRUTTO ?};
_wyn:=exec('lim_kred','limit_kredyt',ND.KH,date(),INFO.NAROD,3,_klim,_cur_brutto,,'nagdo');
_wyn


\chk_uzam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: sprawdza uprawnienia do magazynow dla zamowien
::   WE: [_a] 0(domyslnie)-zamowienia sprzedazy 1-zamowienia wewnetrzne
::  OLD: \chk_uzam/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_width:=60;
_txt:='';

_user:=OPERATOR.USER;
_oper:='ZA'+{? ~_a || 'M' || 'W' ?};
USERS_UP.index('MG');
USERS_UP.prefix(_user,_oper,ST.ODDZ);
{? USERS_UP.first()
||
:: uprawnienia uzytkownika
   {!
   |?
      {? exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,USERS_UP.MG)=0
      || _txt+=form('> '+USERS_UP.MG().SYM+' zamknięty okres: %1.'@[form(date(ST.AR,ST.AM,1),,8)],_width)+'\n'
      |? exec('czyinw_a','magazyn_inw',USERS_UP.MG)
      || _txt+=form('> '+USERS_UP.MG().SYM+' otwarta inwentaryzacja pełna.'@,_width)+'\n'
      || _txt+=form('- '+USERS_UP.MG().SYM,_width)+'\n'
      ?};
      USERS_UP.next()
   !}
||
:: uprawnienia globalne
   USERS_UP.prefix(null,_oper,ST.ODDZ);
   {? USERS_UP.first()
   ||
      {!
      |?
         {? exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,USERS_UP.MG)=0
         || _txt+=form('> '+USERS_UP.MG().SYM+' zamknięty okres: %1.'@[form(date(ST.AR,ST.AM,1),,8)],_width)+'\n'
         |? exec('czyinw_a','magazyn_inw',USERS_UP.MG)
         || _txt+=form('> '+USERS_UP.MG().SYM+' otwarta inwentaryzacja pełna.'@,_width)+'\n'
         || _txt+=form('- '+USERS_UP.MG().SYM,_width)+'\n'
         ?};
         USERS_UP.next()
      !}
   ||
      _txt:=form('Brak uprawnionych magazynów do realizacji zamówień.'@)
   ?}
?};
{? var_pres('__grpzl')>0 & __grpzl>0
|| FUN.info('Niemożliwe wydanie dla wybranych zleceń.\n'
            'Limity zostały zrealizowane lub brak ilości do realizacji.'@)
|? {? var_pres('__grpzl')>0 & __grpzl<0
   || FUN.choice('Niemożliwe wydanie dla wybranych zleceń.\n'
                 'Limity zostały zrealizowane lub brak ilości do realizacji.'@,,'&Plan dla limitów'@)
   || FUN.choice('Brak pozycji do realizacji (brak wymaganych ilości na stanach magazynowych).'
                 '\n\nMagazyny uprawnione do realizacji zamówień:'
                 '\n%1'@[_txt],,'&Plan zamówienia'@)
   ?}
|| exec('zam_plan','zamsiw_rea')
?}


\pw_zknnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed wyswietleniem typu dokumentu magazynowego
::  OLD: \pw_zknnd/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
1


\pr_zknnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcja typu dokumentu magazynowego
::  OLD: \pr_zknnd/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
1


\f3_zknnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: klawisz F3 dla typu dokumentu magazynowego
::  OLD: \f3_zknnd/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_war:={? HELP.MJS='Z'
      || {? BEER.ZK_N().T().R='Z' & ZAKR.COS='N'
         || '"TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'N\' and "TYPYDOK".DS=\'T\' and "TYPYDOK".DK=\'N\' '
         |? BEER.ZK_N().T().R='Z' & ZAKR.COS='T'
         || '"TYPYDOK".Z=\'N\' and "TYPYDOK".P=\'N\' and "TYPYDOK".TD<>\'\' and "TYPYDOK".DK=\'N\' and '+
            '"TYPYDOK".T<>\'INW-\' and "TYPYDOK".T<>\'PRC-\' and "TYPYDOK".DN<>\'D\' '
         ||
::          sprawdzenie czy wypelnione sa pola do realizacji ze zleceniami - czyreazl
            '"TYPYDOK".Z=\'N\' and "TYPYDOK".P=\'N\' and "TYPYDOK".DS=\'N\' and "TYPYDOK".DK=\'N\' and '+
            '"TYPYDOK".T<>\'INW-\' and "TYPYDOK".T<>\'PRC-\' and "TYPYDOK".DS=\'N\' and "TYPYDOK".DN<>\'D\' '+
            {? BEER.ZK_N().LIM='N' & ~exec('czyreazl','zamsiw_rea') || ' and "TYPYDOK".ZLEC=\'N\' ' || '' ?}
        ?}
      |? HELP.MJS='K'
      || _tue:=exec('czytypue','zamsiw_rea');
         '"TYPYDOK".DN=\'N\' and "TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DS=\'N\' and '+
         '"TYPYDOK".DK=\'N\' and "TYPYDOK".UE=\'N\' '
      |? HELP.MJS='E'
      || '"TYPYDOK".DN=\'N\' and "TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DS=\'N\' and '+
         '"TYPYDOK".DK=\'N\' and "TYPYDOK".UE=\'T\' '
      || ' '
      ?};
{? HELP.MJS='Z' & BEER.ZK_N().LIM='T'
|| _lista:=exec('get','#params',500705,2,null());
   _TypDok:=_lista;
   _lista:=exec('get','#params',500707,2,null());
   _TypDok+=_lista;
   {? _TypDok<>''
   || _Typdok:=gsub(form(_TypDok),' ','\',\'');
      _TypDok:='\''+_Typdok+'\'';
      _war+=' and "TYPYDOK".T in ('+_TypDok+') '
   |? BEER.ZK_N().T().T=exec('get','#params',500011,2,null())
   || _war+={? form(_war)<>'' || ' and ' || ' ' ?}+'"TYPYDOK".ZLEC=\'T\' '
   |? ~exec('czyreazl','zamsiw_rea')
   || _war+={? form(_war)<>'' || ' and ' || ' ' ?}+'"TYPYDOK".ZLEC=\'N\' '
   ?}
?};

_typ:=HELP.TYP;
{? HELP.MJS='Z'
|| _mags:=tab_tmp(1,'SQL','STRING[20]','');
   ZK_RP.cntx_psh();
   ZK_RP.index('NAGA');
   ZK_RP.prefix(__refrea,null);
   {? ZK_RP.first()
   || {!
      |? {? ZK_RP.ILR>0
         || _mags.clear();
            {? ~_mags.find_key($ZK_RP.MG) & exec('FindInSet','#table','T2MG','T',ZK_RP.MG)<>null
            || _mags.SQL:=$ZK_RP.MG;
               _mags.add(1)
            ?};
            {? (MG.clear(); MG.seek(ZK_RP.MG))
            || {? MG.SKL='T'
               || _war+=' and TYPYDOK.UE=''N'' and TYPYDOK.UPRW=''N'' and TYPYDOK.AFIFO='''' and TYPYDOK.DK=''N'' '
               ?}
            ?}
         ?};
         ZK_RP.next()
      !}
   ?};
   ZK_RP.cntx_pop();
   {? _mags.size() & _mags.first()
   || _tab:=obj_new(_mags.size()); _i:=0;
      {! |? {? (MG.clear(); MG.seek(_mags.SQL)) || _i+=1; _tab[_i]:=MG.ref() ?}; _mags.next() !}
   || _tab:=0
   ?}
|? HELP.MJS='K' | HELP.MJS='E'
||
   {? ZAKR.MGSYM<>'' & (_mag:=exec('FindInSet','#table','MG','MAGAZYNY',ZAKR.MGSYM,ZAKR.MGSYM))<>null
   || _tab:=obj_new(1); _tab[1]:=_mag
   || USERS_UP.index('MG');
      USERS_UP.prefix(OPERATOR.USER,'MG',ST.ODDZ);
      {? USERS_UP.first()
      || _tab:=obj_new(USERS_UP.size()); _i:=0;
         {! |? _i+=1; _tab[_i]:=USERS_UP.MG; USERS_UP.next() !}
      || _tab:=0
      ?}
   ?};
   {? exec('FindInSet','#table','MG','MAGAZYNY',ZAKR.MGSYM,ZAKR.MGSYM,"MG.SKL",,,'')='T'
   || _war+=' and "TYPYDOK".UE=\'N\' '
   ?}
?};
HELP.TYP:=exec('typ_dok','lmg',_war,,,,_tab,,,,,-1);
{? HELP.TYP<>null
|| ZAKR.TYPYDOK:=HELP.TYP().T;
   HELP.TYP:=_typ;
   1
|| HELP.TYP:=_typ;
   0
?}


\czytypue
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza jaki typ dokumentu UE wynika z zaznaczonych pozycji
::       dodatkowo sprawdzane sa juz wprowadzone pozycje faktury ze wzgledu na powiazania z dokumentami magazynowymi
::   WY: 'T'-unijny 'N'-nie ''-brak zaznaczenia
::  OLD: \czytypue/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? var_pres('__powzak')>100
||
   __powzak.cntx_psh();
   __powzak.clear();
   {? __powzak.first()
   || {!
      |? {? __powzak.TREE<>0 & __powzak.ILR>0
         || _wyn:=__powzak.TUE
         ?};
         _wyn='' & __powzak.next()
      !}
   ?};
   __powzak.cntx_pop()
?};
{? _wyn=''
|| FAKS.cntx_psh();
   FAP.cntx_psh();
   FAP2DK.cntx_psh();
   FAP2DK.index('FAKS');
   FAP2DK.prefix(FAKS.WHERE,$FAKS.ref());
   {? FAP2DK.first()
   || {!
      |? {? FAP2DK.ND<>''
         || ND.cntx_psh();
            ND.use(form(8+FAP2DK.ND));
            ND.clear();
            {? ND.seek(FAP2DK.ND,ND.name()) || _wyn:=ND.TYP().UE ?};
            ND.cntx_pop()
         ?};
         _wyn='' & FAP2DK.next()
      !}
   ?};
   FAKS.cntx_pop();
   FAP.cntx_pop();
   FAP2DK.cntx_pop()
?};
_wyn


\pw_zknfk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed wyswietleniem typu dokumentu sprzedazy
::  OLD: \pw_zknfk/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
''


\pr_zknfk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcja typu dokumentu sprzedazy
::  OLD: \pr_zknfk/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
ZAKR.ZKNFK


\f3_zknfk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: klawisz F3 dla typu dokumentu sprzedazy
::  OLD: \f3_zknfk/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAKR.ZKNFK=2
|| _war:='UE=\''+FAKS.T().UE+'\' and KOR=\'T\' and ZAL=\'N\' and HIS=\'N\' and FIS=\''+FAKS.T().FIS+
         '\' and ZAK=\'N\' and SPP=\''+FAKS.T().SPP+'\' and VATZPOZ=\''+FAKS.T().VATZPOZ+'\''
|| _war:='"TYPYSP".ZAL_ROZ<>\'S\' and "TYPYSP".KOR=\'N\' and "TYPYSP".ZAL=\'N\' and "TYPYSP".ZAK=\'N\' '+
         'and "TYPYSP".FIS=\''+ZK_N.CB+{? ZK_N.WAL<>INFO.NAROD || '\' and "TYPYSP".SPP=\''+ZK_N.SPP+'\'' || '\'' ?}
?};
_typ:=HELP.TYPS;
HELP.TYPS:=exec('tsp_upr','typysp',_war);
{? HELP.TYPS<>null
|| ZAKR.TYPYSP:=HELP.TYPS().T;
   HELP.TYPS:=_typ;
   1
|| HELP.TYPS:=_typ;
   0
?}


\po_zknfk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji typu dokumentu sprzedazy
::  OLD: \po_zknfk/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_fld:=fld();
_typ:=HELP.TYPS;
{? ZAKR.ZKNFK=2
|| _war:='UE=\''+FAKS.T().UE+'\' and KOR=\'T\' and ZAL=\'N\' and HIS=\'N\' and FIS=\''+FAKS.T().FIS+
         '\' and ZAK=\'N\' and SPP=\''+FAKS.T().SPP+'\' and VATZPOZ=\''+FAKS.T().VATZPOZ+'\''
|| _war:='"TYPYSP".ZAL_ROZ<>\'S\' and "TYPYSP".KOR=\'N\' and "TYPYSP".ZAL=\'N\' and "TYPYSP".ZAK=\'N\' '+
         'and "TYPYSP".FIS=\''+ZK_N.CB+{? ZK_N.WAL<>INFO.NAROD || '\' and "TYPYSP".SPP=\''+ZK_N.SPP+'\'' || '\'' ?}
?};
_typs:=exec('tsp_upr','typysp',_war,2);

{? _fld<>'' & _typs*(_fld+' ')
|| HELP.TYPS:=exec('FindInSet','#table','TYPYSP','TYPYKOD',_fld,_fld)
|? (_nr:=_typs*_fld)>0
|| _typs:=(_nr-1)-_typs;
   _nr:=_typs*' ';
   _typs:=form(_nr+_typs);
   HELP.TYPS:=exec('FindInSet','#table','TYPYSP','TYPYKOD',_typs,_typs)
|| HELP.TYPS:=null
?};

{? {? ZAKR.ZKNFK=2
   || HELP.TYPS<>null & HELP.TYPS().KOR='T' & HELP.TYPS().ZAL='N' & HELP.TYPS().FIS=FAKS.T().FIS
   || HELP.TYPS<>null & HELP.TYPS().KOR='N' & HELP.TYPS().ZAL='N' & HELP.TYPS().FIS=ZK_N.CB
   ?}
|| ZAKR.TYPYSP:=HELP.TYPS().T;
   HELP.TYPS:=_typ;
   1
|| FUN.info('Należy wybrać typ dokumentu sprzedaży.'@);
   HELP.TYPS:=_typ;
   0
?}


\pw_zknpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed wyswietleniem czy drukowac dokument sprzedazy
::  OLD: \pw_zknpr/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
''


\pr_zknpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcja czy drukowac dokument sprzedazy
::  OLD: \pr_zknpr/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
ZAKR.ZKNFK


\zam_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wyswietlenie realizacji do zamowienia
::  OLD: \zam_real/zk.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.MENU_PTH+='RR';
BEER.SZ:='S';
BEER.ZK_N:=ZK_N.ref();
BEER.WG:=ZK_N.WG;
exec('init_zaz','zamsiw_rea','ZK_RN');
MG.f_clear();
ZK_RN.index('ZAM');
ZK_RN.prefix(BEER.ZK_N);
{? ZK_RN.first()
|| _rodzaj:=ZK_N.T().R;
   {? _rodzaj='Z' & ZK_RN.last()
   || {!
      |? {? ZK_RN.FAKS<>''
         || ZK_RN.SFK:=exec('FindAndGet','#table',FAKS,ZK_RN.FAKS,,"SYM",ZK_RN.SFK);
            ZK_RN.DFK:=exec('FindAndGet','#table',FAKS,ZK_RN.FAKS,,"DW",date(0,0,0));
            ZK_RN.put(1)
         ?};
         ZK_RN.prev()
      !}
   ?};
   _wer:='WER'+{? _rodzaj='Z' || '' || 'W' ?};
   ZK_RN.win_sel(_wer);
   ZK_RN.win_fml(_wer,,'SWZ',,'ICON_BEFORE',exec('zkrn_nd_sym_ib','zamsiw_rea'));
   {? _rodzaj='Z'
   || ZK_RN.win_fml(_wer,,'SFK',,'ICON_BEFORE',exec('zkrn_faks_sym_ib','zamsiw_rea'))
   ?};
   ZK_RN.select()
|| FUN.info('Zamówienie nie było realizowane.'@)
?};
exec('done_zaz','zamsiw_rea');
BEER.MENU_PTH-=2;
''


\init_zaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: obsluga zaznaczen
::   WE: _a - akronim tabeli na ktorej zaznaczamy
::  OLD: \init_zaz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('done_zaz','zamsiw_rea');
ZZZ:=tab_tmp(,'REF','INTEGER',''
      ,'TAB','STRING[8]','');
ZZZ.prefix();
ZZZ.TAB:=_a;
ZZZ.REF:=0;
ZZZ.add(1);
1


\done_zaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: usuwa zaznaczenie
::  OLD: \done_zaz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('ZZZ');
1


\rea_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: rekord dla realizacji
::   WY: kod koloru
::  OLD: \rea_rek/zk.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.KH:=ZK_RN.N().KH;
BEER.ZL:=ZK_RN.N().ZL;

exec('zkrn_actions','zamsiw_rea');


exec('inf_real','zamsiw_rea');
exec('rekprzed','color','REA#01')


\inf_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: uzupelnia zmienne BEER.IWZ BEER.IFK
::  OLD: \inf_real/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_RN.SWZ=''
|| BEER.IWZ:=''
|| BEER.IWZ:={? exec('spr_akwz','zamsiw_rea') || 'N' || 'T' ?}
?};
{? ZK_RN.SFK=''
|| {? ZK_RN.DFK<>date(0,0,0) || ZK_RN.DFK:=date(0,0,0); ZK_RN.put(1) ?};
   BEER.IFK:=''
|| FAKS.cntx_psh;
   FAKS.clear;
   _fak:={? FAKS.seek(ZK_RN.FAKS,8+ZK_RN.FAKS) & FAKS.AKC='T'
         || 'T'
         |? FAKS.seek(ZK_RN.FAKS,8+ZK_RN.FAKS)
         || 'N'
         || ''
         ?};
   FAKS.cntx_pop;
   BEER.IFK:=_fak
?};
1


\spr_akwz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza czy dany dokument WZ jest zaakceptowany
::   WY: zwraca czy dany dokument jest zaakcpetowany
::  OLD: \spr_akwz/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ND.cntx_psh();
DK.cntx_psh();
ND.clear();
_wyn:={? ND.seek(ZK_RN.ND,8+ZK_RN.ND) || ND.Z<>'T' || 0 ?};
ND.cntx_pop();
DK.cntx_pop();
_wyn


\add_doki_cena
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Wyznaczenie cen sprzedaży w dokumencie rozchodowym
::   WE: _a - $ND.ref()
::   WY:
::  OLD: \add_doki/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
ND.cntx_psh;
ND.use(8+_a);
ND.prefix;
{? ND.seek(_a)
|| exec('st_licz_wz','ceny','ND');
   exec('stplicz','ceny',ZK_RP.ILR);
   _kalkj2:=KALK.J2;
   KALK.J2:=ZK_P.J2;
   exec('ceny_mat','ceny_mat',ZK_P.M,ZK_P.N().KH,'ZK_P.CENA',ZK_N.ODB,,'ZK_P.RAB',{? ND.WAL<>ND.NWAL || 'T' || 'N' ?},
      ND.WAL,'ZK_P.CWAL',ND.KRS,ZK_N.CB='T',{? ZK_P.J2<>null || ZK_P.J2().KOD || '' ?},
      {? ZK_P.J2<>null || ZK_P.WS2 || 0 ?},0,,,0,ZK_P.SV,,,ZK_N.PL);
   KALK.J2:=_kalkj2
?};
ND.cntx_pop


\delezkrparch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: usuniecie blednych - nieskonczonych realizacji
::   WE: _a - ref ZK_N
::  OLD: \delezkrp/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_P.cntx_psh();
ZK_P.index('TYPN');
ZK_P.prefix('A','Z',_a,1);
{? ZK_P.first
|| {!
   |? exec('obl_ilp','zamsiw_rea');
      ZK_P.next()
   !}
?};
ZK_P.cntx_pop();
~~


\s_dokmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wyswietla koszty dla dokumentow do zamowienia
::   WE: ref zk_rn - gdy brak to wszystkie rekordy dla BEER.ZK_N
::  OLD: \s_dokmag/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};

ZK_RN.index('ZAM');
ZK_RN.prefix(BEER.ZK_N);

VAR_DEL.delete('all_wm','all_ws');
all_wm:=0;
all_ws:=0;
{? _a=null || DISP.Z_P:=DISP.Z_R:=DISP.Z_S:=0 ?};
{? {? _a=null || ZK_RN.first() || ZK_RN.seek(_a) ?}
||
   ND.cntx_psh();
   {!
   |? _refzkrn:=$ZK_RN.ref();
      ND.use('nagdo'+((8+ZK_RN.ND)+3));
      ND.prefix();
      {? ND.seek(ZK_RN.ND,8+ZK_RN.ND)
      ||
::       obliczanie kosztow
         exec('koszt_n','magdok_koszty',ND.ref(),_refzkrn);
         all_wm+=wart_m;
         all_ws+=wart_s;
         {? _a=null
         ||
            DISP.Z_R+=DISP.N_R;
            DISP.Z_P+=DISP.N_P;
            DISP.Z_S+=DISP.N_S
         ?}
      ?};
      {? _a=null || ZK_RN.next() || 0 ?}
   !};
   ND.cntx_pop()
?};
''


\bufmg_sym_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła ikony dla BUFMG.MG().SYM
::----------------------------------------------------------------------------------------------------------------------
"
   {? BEER.CZY_SD='T' || 'xwin16.png:144'
   |? BEER.CZY_SD='C' || 'xwin16.png:146'
   || exec('pusta','#icon')
   ?}
"


\bufmg_lp_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła ikony dla BUFMG.LP
::----------------------------------------------------------------------------------------------------------------------
"
   {? BEER.KOLEJ='1' || BEER.KOLEJ:=''; 'xwin16.png:24'
   |? BEER.KOLEJ='2' || BEER.KOLEJ:=''; 'xwin16.png:25'
   |? BEER.KOLEJ='3' || BEER.KOLEJ:=''; 'xwin16.png:26'
   || BEER.KOLEJ:=''; exec('pusta','#icon')
   ?}
"


\rea_delr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: usuniecie realizacji
::  OLD: \rea_delr/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;

{? ZK_RN.N().A='Z'
|| FUN.info('Zamówienie jest nieaktywne.\nUsunięcie realizacji niemożliwe.'@);
   _ok:=0
?};

_faks:=2;
{? _ok=1 & ZK_RN.FAKS<>'' & exec('FindAndGet','#table',ZK_RN,ZK_RN.FAKS,,"STAT_REJ='N'",0)
 & (_faks:=FUN.choice('Wybierz jedną z opcji. Usunąć?'@,,'Dokument sprzedaży'@,'Realizację zamówienia'@))=1
||
:: usuniecie dok. sprzedazy
   _ref:=BB.sqlint(ZK_RN.FAKS);
   _name:=8+ZK_RN.FAKS;

   FAKS.cntx_psh();
   _mask:=0;
   {? FAKS.name()<>_name || _mask:=1; exec('open','open_tab',5-_name-2,6-_name) ?};

   FAKS.use(_name);
   FAKS.prefix();
   {? FAKS.seek(_ref,_name)
   ||
      _act_uid:=exec('faks_dolacz_act_uid','faktury_nag',FAKS.WHERE,FAKS.T().KOR,FAKS.T().HIS,FAKS.OPAK,FAKS.SYMF);
      {? exec('chk_role','#b__box',OPERATOR.USER,_act_uid)
      || {? exec('usun_fak','faktury_nag',1,ZK_RN.MG)
         || win_disp();
            _ok:=1
         ?}
      || FUN.info('Brak uprawnień do czynności rejestracji dokumentu sprzedaży.\nFunkcja niedostępna.'@);
         _ok:=0
      ?}
   ||
      _ok:=0
   ?};

   {? _mask || exec('open','open_tab',ST.ODDZ,2-$(ST.AR)) ?};
   FAKS.cntx_pop()
|? _ok=1 & _faks=2
||
   _onlyU:=ZK_RN.SWZ='- USŁUGI -';
:: usuniecie dok. magazynowego
   {? _onlyU
   || _ok:=1
   |? ~exec('spr_upr2','users','MG',ZK_RN.MG,'Brak uprawnień do magazynu:\n%1 - %2.'@[ZK_RN.MG().SYM,ZK_RN.MG().NAZ])
   || _ok:=0
   ?};

   {? _ok=1 & ~_onlyU
   ||
      _arch:=0;
      _rwz:=BB.sqlint(ZK_RN.ND);
      _nwz:=8+ZK_RN.ND;

      ND.cntx_psh();
      _mask:=0;
      {? ND.name()<>_nwz || _mask:=1; exec('open','open_tab',5-_nwz-2,6-_nwz) ?};

      ND.prefix();
      {? ND.seek(_rwz,_nwz)
      ||
         exec('list_zam','magdok_wspolne',ND.ref());
         _msg:='Dokument magazynowy %1 został wystawiony automatycznie z zamówień:\n'@[ND.SYM];
         {? __list_zk.first()
         ||
            {!|?
               _ln:=__list_zk.SYM;
               {? __list_zk.A='Z'
               ||
                  _ln+=' - w archiwum';
                  _arch:=1
               ?};
               _msg+='\n'+form(_ln,33);
               __list_zk.next()
            !}
         ?}
      ?};

      {? _mask || exec('open','open_tab',ST.ODDZ,2-$(ST.AR)) ?};
      ND.cntx_pop();

      {? _arch=1
      || _msg+='\n\nCzęść zamówień została zarchiwizowana.\nUsunięcie realizacji niemożliwe.'@;
         FUN.info(_msg);
         _ok:=0
      ?}
   ?};

   {? _ok=1
   || {? _onlyU
      || {? FUN.ask('Czy usunąć realizację zamówienia\n(pozycje usługowe)?'@)
         || _opc:=2
         || _opc:=0
         ?}
      |? exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_DWYD')
       & exec('FindAndGet','#table',ND,ZK_RN.ND,,"STAT_REJ='N'",0)
      || _opc:=FUN.choice('Wybierz zakres usuwanych danych'@,,'Dokument magazyn. i realizacja'@,'Tylko realizacja'@)
      || {? FUN.ask('Czy usunąć realizację zamówienia\n(bez usuwania dokumentów magazynowych)?'@)
         || _opc:=2
         || _opc:=0
         ?}
      ?};

      {? _opc
      || _war_be:=ZK_N.BRT;
         exec('utw_zk_tymc','zamsiw_wspolne');
         _refzkn:=ZK_RN.N;
         exec('usun_rea','zamsiw_rea',ZK_RN.ND,_opc,ZK_RN.N);
         exec('obl_warz','zamsiw_nag',_refzkn,,1)
      ?};
      1
   ?}
?};
{? ZK_RN.size()=0 || BEER.IWZ:=BEER.IFK:='' ?};
''


\usun_rea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: usuniecie wylacznie realizacji + znacznika zamowienia na WZ-tce
::   WE:  _a  - ref dokumentu magazynowego jako ref sql
::        _b  - 2 - usuwanie realizacji 1 - usuwanie realizacji i WZ
::        _c  - ref naglowka zamowienia
::  OLD: \usun_rea/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_rwz:=BB.sqlint(_a);
_nwz:=8+_a;

ND.cntx_psh();
ND.clear();
{? _b=2
||
   do();
   _nd:={? ND.seek(_rwz,_nwz) || $ND.ref() || _a ?};
   exec('del_real','zamsiw_rea',_c,_nd,'N');
   end()
|? ND.name=_nwz
||
   {? ND.seek(_rwz,_nwz)
   ||
      {? exec('czy_z_ok','okresy',1,1,ND.D~1,ND.D~2,ND.MAG)
      || do();
         exec('usun_dwz','zamsiw_rea','N',$ND.ref());
         end()
      ?}
   |? _nwz=ND.name
   || {? FUN.ask('Brak dokumentu magazynowego w systemie\nczy usunąć realizację?'@)
      || do();
         exec('del_real','zamsiw_rea','N',_a);
         end()
      ?}
   ?}
|| FUN.info('Realizacja powstała w innym roku lub oddziale.\nUsunięcie niemożliwe.'@)
?};
ND.cntx_pop


\usun_dwz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: usuniecie dokumenu magazynowego z poziomu realizacji
::   WE: [_d] - czy usuwac zapisy o rezerwacji (T/N) [T - domyslnie]
::       [_b] - ref dokumentu magazynowego jako ref sql - domyslnie $ND.ref()
::   WY: 1-usuniecie sie powiodlo 0-nie udalo sie
::  OLD: \usun_dwz/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='T' ?} || _a:='T' ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=$ND.ref() ?} || _b:=$ND.ref() ?};
_wyn:=0;
_do_state:=do_state();
{? exec('blok_nd','magdok_nag',{? _do_state=0 || 'T' || 'N' ?})
||
   _plus:=ND.TYP().P;

   {? _do_state=0 || do() ?};

   _wyn:=exec('n_usun','magdok_nag',0,0,,,,,,,2);

   exec('del_real','zamsiw_rea',_a,_b);

   {? _plus='T'
   || ZD_RN.cntx_psh();
      ZD_RN.index('ND');
      ZD_RN.prefix($ND.ref());
      {? ZD_RN.first()
      || {!
         |? _zd:=ZD_RN.ref();
            _next:=ZD_RN.next();
            ZD_RN.cntx_psh();
            ZD_RN.clear();
            {? ZD_RN.seek(_zd) || ZD_RN.ND:=''; ZD_RN.SPZ:=''; ZD_RN.DND:=date(0,0,0); ZD_RN.put(1) ?};
            ZD_RN.cntx_pop();
            _next
         !}
      ?};
      ZD_RN.cntx_pop()
   ?};

   {? _do_state=0 || end() ?};
   ND.r_unlock()
?};
_wyn


\rea_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: pozycje realizacji
::  OLD: \rea_pozy/zk.fml
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
M.win_dict('SEL');
M.actions('SEL','W');
ZK_RP.clear;
ZK_RP.index('POZR');
ZK_RP.prefix(ZK_RN.ref());
ZK_RP.win_sel('WER');
ZK_RP.select;
M.actions('SEL','');
M.cntx_pop();
''


\rea_dkwz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: wyswietlanie dokumentu magazynowego do realizacji zamowienia
::  OLD: \rea_dkwz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_nawig:=BEER.NAWIG;
BEER.NAWIG:='M';
ATR.MJS:='DK';
BEER.MENU_PTH+='D';
BEER.MW:='M';
DISP.FAKS:='';

:: ustawia zmienna BEER.MMJM - odpowiedzialna za stosowanie przelicznikow jednostek miar
exec('ustawprz','magdok_poz');

ZK_N.cntx_psh();
ZK_P.cntx_psh();
ZK_RN.cntx_psh();
ZK_RP.cntx_psh();

{? ZK_RN.N().A<>'A'
|| _akc:=1
|| _akc:=0
?};

{? exec('spr_upr2','users','MG',ZK_RN.MG,'-')
|| exec('disp_dk','magdok_wspolne',_akc,ZK_RN.ND,'T',,{? ZK_RN.FAKS<>'' || 0 || 1 ?})
|| exec('disp_dk','magdok_wspolne',1,ZK_RN.ND)
?};

ZK_RP.cntx_pop();
ZK_RN.cntx_pop();
ZK_P.cntx_pop();
ZK_N.cntx_pop();
BEER.NAWIG:=_nawig;
BEER.MW:='Z';
BEER.MENU_PTH-=1;
ATR.MJS:='ZK_P';
''


\powzalzd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: Zalaczniki dla dokumentow magazynowych
::  OLD: \powzalzd/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_edit:=exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_DWYD');
{? ZK_RN.ND='' & ZK_RN.SWZ='- USŁUGI -'
|| FUN.info('Realizacja dotyczyła usług.\nZałączniki niedostępne.'@)
|? ZK_RN.ND<>''
|| _akt:=ND.name();
   _msk:=form(8+ZK_RN.ND);
   ND.cntx_psh();
   DK.cntx_psh();
   {? _msk<>_akt || exec('open','open_tab',1+(_msk+3),_msk+2) ?};
   ND.clear();
   {? ND.seek(ZK_RN.ND) || exec('sel_dok','dokum','ND',{? _edit || 0 || 2 ?},,,1) ?};
   ND.cntx_pop();
   DK.cntx_pop()
?};
~~


\rea_dr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: przed drukuJ okna WER tabeli ZK_RN - drukowanie realizacji
::  OLD: \rea_dr/zk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','','lsp_zkrea_01','Realizacja zamówienia',2,,,,,,'W')


\rea_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2005]
:: OPIS: Formula Rekord przed dla okienka wertowania 'WERA' tabeli ZK_RN- koloruje gdy nie ma podpietej faktury
::  OLD: \rea_kol/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_zaz','zamsiw_rea') || {? BEER.IWZ<>'T' || exec('wyb_zaz','zamsiw_rea'); '' || 'REA#01#01' ?}
|? ZK_RN.N().T().R='W'  || 'REA#01#03'
|? ZK_RN.SFK=''         || 'REA#01#02'
|| ''
?}


\czy_zaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy zaznaczylismy rekord
::   WY: 1-zaznczono 0-brak zaznaczenia
::  OLD: \czy_zaz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
ZZZ.prefix();
{? ZZZ.first()
|| _pol:=$(ZZZ.TAB+'.ref');
   ZZZ.find_key(#_pol(),ZZZ.TAB)
|| 0
?}


\wyb_zaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: obsluga zaznaczen - zazanczenie/odznaczenie
::  OLD: \wyb_zaz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
ZZZ.prefix();
{? ZZZ.first()
|| _pol:=$(ZZZ.TAB+'.ref()');
   {? ZZZ.find_key(#_pol(),ZZZ.TAB) || ZZZ.del() || ZZZ.REF:=#_pol(); ZZZ.add(1) ?}
?};
1


\pr_mgzkw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola ZAKR.MD
::   WE: 1-jesli dokument tworzacy dokument, 0-jesli nie
::  OLD: \pr_mgzkw/zkw.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAKR.COS='T'
|| MG.f_clear();
   MG.clear();
   MG.f_set('SYM,NAZ'
           ,'join USERS_UP'
           ,'USERS_UP.USERS=:_a and USERS_UP.AKR=\'MG\' and MG.COS=\'T\' and MG.PAL=\'N\' '
           'and (MG.DLAKH=:_b or MG.DLAKH is null) '
           ,OPERATOR.USER,ZK_N.KH);
:: usuniecie z listy magazynow realizujacych dane zamowienie
   {? MG.f_first()
   || {!
      |? ZK_RP.index({? ZAKR.ID_ZAZ<>'' || 'MAGI' || 'MAGP' ?});
         {? ZAKR.ID_ZAZ<>''
         || ZK_RP.prefix(ZAKR.ID_ZAZ,'*',MG.ref())
         || ZK_RP.prefix(BEER.ZK_N,'*',MG.ref())
         ?};
         {? ZK_RP.first() || MG.f_del() || MG.f_next() ?}
      !}
   ?};
   1
|? ZAKR.TYPYDOK<>'' & exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TYPYDOK,ZAKR.TYPYDOK,"TYPYDOK.TD",,,'')<>''
|| MG.f_clear();
   MG.clear();
   MG.f_set('SYM,NAZ','join USERS_UP','USERS_UP.USERS=:_a and USERS_UP.AKR=\'MG\' and MG.PAL=\'N\' ',OPERATOR.USER);
:: usuniecie z listy magazynow realizujacych dane zamowienie
   {? ZAKR.ID_ZAZ<>''
   || ZK_RP.index('MAGI');
      ZK_RP.prefix(ZAKR.ID_ZAZ,'*')
   || ZK_RP.index('MAGP');
      ZK_RP.prefix(BEER.ZK_N,'*')
   ?};
   _par:=exec('get','#params',600401,2)='T';
   _only:=ZK_RP.first() & ZK_RP.MG().IL='T';
   _bezpal:={? BEER.ZK_N().MG().PAL='T'
            || exec('FindInSet','#table','PAL','NOPAL',BEER.ZK_N().MG,'B',"@.PAL.KODK",,,'')
            || ''
            ?};
   {? MG.f_first()
   || {!
      |? _isdel:=0;
         {? MG.PAL='T' & _bezpal<>''
         || ZK_RP.index({? ZAKR.ID_ZAZ<>'' || 'MAGI' || 'MAGP' ?});
            {? ZAKR.ID_ZAZ<>''
            || ZK_RP.prefix(ZAKR.ID_ZAZ,'*')
            || ZK_RP.prefix(BEER.ZK_N,'*')
            ?};
            {? ZK_RP.first() & ZK_RP.find_tab('first','PAL',,'=',_bezpal) || _isdel:=1 ?}
         ?};
         {? ~_isdel
         || ZK_RP.index({? ZAKR.ID_ZAZ<>'' || 'MAGI' || 'MAGP' ?});
            {? ZAKR.ID_ZAZ<>''
            || ZK_RP.prefix(ZAKR.ID_ZAZ,'*',MG.ref())
            || ZK_RP.prefix(BEER.ZK_N,'*',MG.ref())
            ?};
            {? ZK_RP.first() | (~_par & (MG.IL='T')<>_only) || MG.f_del() || MG.f_next() ?}
         || MG.f_del()
         ?}
      !}
   ?};
   1
|| 0
?}


\set_efld_opt_zakr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zaznacza wymagalne pola zmiennej ZAKR
::   WE: [_a] - 1-tylko usługi 0-nie
::----------------------------------------------------------------------------------------------------------------------
_onlyU:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_win_red:='REAZKNW';
_act_red:=ZAKR.win_edit('?');
{? _act_red=_win_red
|| {? ~_onlyU
   || ZAKR.efld_opt(_win_red,'mark=1',,'TYPYDOK')
   || ZAKR.efld_opt(_win_red,'mark=0',,'TYPYDOK')
   ?};
   {? ZAKR.TYPYDOK<>'' & exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TYPYDOK,ZAKR.TYPYDOK,"TYPYDOK.TD",,,'')<>''
   || ZAKR.efld_opt(_win_red,'enable=1',,'MD');
      ZAKR.efld_opt(_win_red,'mark=1',,'MD')
   || ZAKR.efld_opt(_win_red,'enable=0',,'MD');
      ZAKR.efld_opt(_win_red,'mark=0',,'MD')
   ?}
|? _act_red='REAZKN'
|| _win_red:=_act_red;
   _cos:=exec('pr_cos','zamsiw_rea');
   {? ~_cos
   || ZAKR.efld_opt(_win_red,'enable=0',,'COS');
      ZAKR.efld_opt(_win_red,'enable=0',,'MD');
      ZAKR.efld_opt(_win_red,'mark=0',,'MD')
   || ZAKR.efld_opt(_win_red,'enable=1',,'COS');
      {? ZAKR.COS='T'
      || ZAKR.efld_opt(_win_red,'enable=1',,'MD');
         ZAKR.efld_opt(_win_red,'mark=1',,'MD')
      || ZAKR.efld_opt(_win_red,'enable=0',,'MD');
         ZAKR.efld_opt(_win_red,'mark=0',,'MD')
      ?}
   ?}
?}


\zkrn_actions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Wyszarzanie i wyłączanie akcji w oknie realizacji zamówień sprzedaży, wewnętrznych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: U - usuń
_act0:=_act1:='';
_grayed:='';

{? ZK_N.name+2<>'__'
|| _act1:='U'
?};

{? ZK_RN.N().T().R='W'
|| _act1+='FZ'
?};

{? ZK_RN.ND=''
|| _grayed+='D'
?};

{? ZK_RN.FAKS=''
|| _grayed+='F'
?};

_wer:=
   {? ZK_RN.N().T().R='W'  || 'WERA'; 'WERW'
   |? ZK_N.T().R='Z'       || 'WER'
                           || 'WERW'
   ?};

:: wyłączone
ZK_RN.actions(_wer,_act1+':'+_act0,,1);

ZK_RN.actions_grayed(_wer,_grayed)


\zkrn_nd_sym_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła określiająca ikony
::----------------------------------------------------------------------------------------------------------------------
"
   {? ZK_RN.ND<>''
   || exec('FindAndGet','#table',ND,ZK_RN.ND,,exec('nd_sym_i','magdok_nag'),exec('pusta','#icon'))
   || exec('pusta','#icon')
   ?}
"


\zkrn_faks_sym_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła określiająca ikony
::----------------------------------------------------------------------------------------------------------------------
"
   {? ZK_RN.FAKS<>''
   || exec('FindAndGet','#table',FAKS,ZK_RN.FAKS,,exec('faks_sym_ib','faktury_nag'),exec('pusta','#icon'))
   || exec('pusta','#icon')
   ?}
"


\aktu_zkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: aktualizacja zapisow w ZK_RN dla faktury
::   WE: _a - FAKS.ref
::  OLD: \aktu_zkn/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
FAKS.cntx_psh();
ND.cntx_psh();
ZK_RN.cntx_psh();
ZK_N.cntx_psh();
OKR.cntx_psh();
FAKS.clear();
{? FAKS.seek(_a)
|| _faks:=$FAKS.ref();
   _sym:=FAKS.SYM;

   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.first()
   || {!
      |? ND.use('nagdo'+ST.ODDZ+(($OKR.ROK)+2));
         ND.index('FAKS_REF');
         ND.prefix(_faks,_faks);
         {? ND.first()
         ||
            {!
            |?
               exec('list_zam','magdok_wspolne',ND.ref());
               {? __list_zk.first()
               ||
                  {!
                  |?
                     {? FAKS.SZ='S' & (5+__list_zk.REF)='zknag'
                     ||
                        ZK_N.cntx_psh();
                        ZK_N.use(8+__list_zk.REF);
                        ZK_N.clear();

                        {? ZK_N.seek(__list_zk.REF,8+__list_zk.REF)
                        ||
                           _ref:=ZK_N.ref();
                           _nd:=$ND.ref();
                           ND.cntx_psh();
                           ZK_RN.cntx_psh();
                           ZK_RN.use('zkhin'+((8+__list_zk.REF)+3));
                           ZK_RN.clear();
                           ZK_RN.index('ZAM');
                           ZK_RN.prefix(_ref);
                           {? ZK_RN.first()
                           ||
                              {!
                              |?
                                 {? _nd=ZK_RN.ND
                                 ||
                                    {? ZK_RN.SFK=''
                                    ||
                                       ZK_RN.FAKS:=_faks;
                                       ZK_RN.SFK:=_sym;
                                       ZK_RN.DFK:=exec('FindAndGet','#table',FAKS,ZK_RN.FAKS,,"DW",date(0,0,0));
                                       ZK_RN.put(1)
                                    ?}
                                 ?};
                                 ZK_RN.next()
                              !}
                           ?};
                           ZK_RN.cntx_pop();
                           ND.cntx_pop()
                        ?};
                        ZK_N.cntx_pop()
                     |? FAKS.SZ='Z' & (5+__list_zk.REF)='zdnag'
                     ||
                        ZD_NAG.cntx_psh();
                        ZD_NAG.use(8+__list_zk.REF);
                        ZD_NAG.clear();

                        {? ZD_NAG.seek(__list_zk.REF,8+__list_zk.REF)
                        ||
                           _ref:=ZD_NAG.ref();
                           _nd:=$ND.ref();
                           ND.cntx_psh();
                           ZD_RN.cntx_psh();
                           ZD_RN.use('zdhin'+((8+__list_zk.REF)+3));
                           ZD_RN.clear();
                           ZD_RN.index('ZAM');
                           ZD_RN.prefix(_ref);
                           {? ZD_RN.first()
                           ||
                              {!
                              |?
                                 {? _nd=ZD_RN.ND
                                 ||
                                    {? ZD_RN.SFK=''
                                    ||
                                       ZD_RN.FAKS:=_faks;
                                       ZD_RN.SFK:=_sym;
                                       ZD_RN.DFK:={? _faks<>''
                                                  || exec('FindAndGet','#table',FAKS,_faks,,"DW",date(0,0,0))
                                                  || date(0,0,0)
                                                  ?};
                                       ZD_RN.put(1)
                                    ?}
                                 || ZD_RN.next()
                                 ?}
                              !}
                           ?};
                           ZD_RN.cntx_pop();
                           ND.cntx_pop()
                        ?};
                        ZD_NAG.cntx_pop()
                     ?};
                     __list_zk.next()
                  !}
               ?};
               ND.next()
            !}
         ?};
         OKR.next()
      !}
   ?}
?};

ND.cntx_pop();
FAKS.cntx_pop();
ZK_RN.cntx_pop();
ZK_N.cntx_pop();
OKR.cntx_pop();
''


\spr_zfk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza czy faktura powstala z realizacji zamowienia
::   WY: 0 - faktura nie powstala z zamowienia / 1 - faktura z zamowienia
::  OLD: \spr_zfk/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_faks:=$FAKS.ref();
_czy:=exec('FindInSet','#table','ZK_RN','FK',_faks);
{? _czy=null
||
   ZK_RN.cntx_psh();

   ZK_RN.use('zkhin'+ST.ODDZ+'__');
   ZK_RN.clear();
   _czy:=exec('FindInSet','#table','ZK_RN','FK',_faks);

   {? _czy=null
   ||
      OKR.cntx_psh();
      OKR.index('MC');
      OKR.prefix(REF.FIRMA,1);
      {? OKR.last()
      ||
         {!
         |?
            ZK_RN.use('zkhin'+ST.ODDZ+($OKR.ROK+2));
            ZK_RN.clear();
            _czy:=exec('FindInSet','#table','ZK_RN','FK',_faks);
            _czy=null & OKR.prev()
         !}
      ?};
      OKR.cntx_pop()
   ?};

   ZK_RN.cntx_pop()
?};
{? _czy<>null
||
   _wyn:=1
?};
_wyn


\spr_zkrn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza czy dany dokument powstal z zamowienia (ustawia zk_rn)
::   WY: '' - bez zamowienia, ref SQL - dokument mag jest realizacja zamowienia
::  OLD: \spr_zkrn/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
exec('list_zam','magdok_wspolne',ND.ref);
{? __list_zk.first() & ~__list_zk.next()
||
   _nd:=$ND.ref;
   _msk:=5+ZK_RN.name();
   ND.cntx_psh();

   ZK_RN.cntx_psh();
   ZK_RN.use(_msk+(8+__list_zk.REF+3));
   ZK_RN.index('ND');
   ZK_RN.prefix(_nd);
   {? ZK_RN.first()
   ||
      {!
      |?
         {? _nd=ZK_RN.ND
         || _wyn:=$ZK_RN.ref;
            0
         || ZK_RN.next
         ?}
      !}
   ?};
   ZK_RN.cntx_pop();
   ND.cntx_pop()
?};
_wyn


\wyd2lim
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Wydanie do limitów
::   WE: _a - ZL.ref() - zlecenie
::       [_b] - GROP.ref() - grupa operacji
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__reazlzk');
__reazlzk:=tab_tmp(2,'ZL','STRING[16]','','ZAM_REA','STRING[35]','');
_grop:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_is_grop:=_grop<>null();

_zl:={? _is_grop
     || null()
     |? var_pres('_a')=type_of(null())
     || _a
     || _tab:=ZL.sel_aget();
        ZL.cntx_psh();
        _buf:={? _tab.first() & (ZL.prefix();ZL.seek(_tab.REF,))
              || ZL.ref()
              || null()
              ?};
        ZL.cntx_pop();
        _buf
     ?};

{? _zl<>null() | _grop<>null()
|| _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='LMG_ZAM_IPRZ';
   _params.PROC_START:='T';
   _params.UIDREF:={? ~_is_grop
                   || exec('FindAndGet','#table',ZL,_zl,,"ZL.uidref()")
                   || exec('FindAndGet','#table',GROP,_grop,,"GROP.uidref()")
                   ?};
   _params.AKCJA:='Realizuj';
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   {? ~_is_grop
   || exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZL',_zl)
   || exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'GROP',_grop)
   ?};

   exec('mp_run','#b__box',_params);
   obj_del(_params);
   {? ~_is_grop
   || ZL.cntx_psh();
      ND.cntx_psh();
      _buf:=tab_tmp(2,'ZL','STRING[16]','','ZAM_REA','STRING[35]','','UID','STRING[48]','');
      __reazlzk.clear();
      {? __reazlzk.first()
      || {!
         |? _zlec:=exec('FindAndGet','#table',ZL,__reazlzk.ZL,,,null());
            {? _zlec<>_zl
            || _topzl:=exec('top_level','zl_link',_zlec);
               _uidzl:=exec('FindAndGet','#table',ZL,_zlec,,"ZL.uidref()");
               _uidtop:={? _topzl=_zlec || '' || exec('FindAndGet','#table',ZL,_topzl,,"ZL.uidref()") ?};

               {? _topzl<>null() & _zlec<>_topzl & exec('record_keyrefed','#b__box',_uidtop,'LMG_ZAM_IPRZ')<>0
               || _buf.clear();
                  _buf.prefix($_topzl,__reazlzk.ZAM_REA);
                  {? ~_buf.first()
                  || _buf.ZL:=$_topzl;
                     _buf.ZAM_REA:=__reazlzk.ZAM_REA;
                     _buf.UID:=_uidtop;
                     _buf.add(1)
                  ?}
               ?};

               {? _zlec<>null()
               || _params:=exec('mp_run_a','#b__box');
                  _params.ACT_UID:='LMG_ZAM_IPRZ';
                  _params.UIDREF:=_uidzl;
                  _params.AKCJA:='Realizuj';
                  _params.CONTEXT:=obj_new('ZAM_REA','ZL','ORD');
                  _params.CONTEXT.ZAM_REA:=__reazlzk.ZAM_REA;
                  _params.CONTEXT.ZL:=_zlec;
                  _params.CONTEXT.ORD:=2;
                  _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
                  exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZL',_zlec);

                  exec('mp_run','#b__box',_params);
                  obj_del(_params)
               ?}
            ?};
            __reazlzk.next()
         !};
::    popychamy procesy o ile są dla zlecenia nadrzędnego TOPLEVEL
         _buf.clear();
         {? _buf.first()
         || {!
            |? _zlec:=exec('FindAndGet','#table',ZL,_buf.ZL,,,null());
               _uidzl:=_buf.UID;

               {? _zlec<>null()
               || _params:=exec('mp_run_a','#b__box');
                  _params.ACT_UID:='LMG_ZAM_IPRZ';
                  _params.UIDREF:=_uidzl;
                  _params.AKCJA:='Realizuj';
                  _params.CONTEXT:=obj_new('ZAM_REA','ZL','ORD');
                  _params.CONTEXT.ZAM_REA:=_buf.ZAM_REA;
                  _params.CONTEXT.ZL:=_zlec;
                  _params.CONTEXT.ORD:=1;
                  _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
                  exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZL',_zlec);

                  exec('mp_run','#b__box',_params);
                  obj_del(_params)
               ?};
               _buf.next()
            !}
         ?}
      ?};

      obj_del(_buf);
      ZL.cntx_pop();
      ND.cntx_pop()
   ?}
?};
{? ~_is_grop || ZL.sel_adel() ?};
VAR_DEL.delete('__reazlzk');
~~


\wyd2lim_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument sprzedaży - Wydanie do limitów
::   WE: _a - ZL.ref - zlecenie
::       _b - SLO.ref - wydział
::       _c - ND.ref - dokument magazynowy
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_zl:=_a;
_wydz:=_b;
_nd:=_c;

_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_ZAM_IPRZ';
_params.UIDREF:=exec('FindAndGet','#table',ZL,_zl,,"ZL.uidref()");
_params.AKCJA:='Realizuj';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZL',_zl);
_params.CONTEXT:=exec('context','zamsiw_rea');
_params.CONTEXT.WYDZ:=_wydz;
_params.CONTEXT.ND:=_nd;

exec('mp_run','#b__box',_params)


\context
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Realizacja zamówienia - context
::   WE:
::   WY: uchwyt do obiektu nazwanego
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new('WYDZ','ND','ZK_N','ZAM_REA','MGP');
_wyn.WYDZ:=~~;
_wyn.ND:=~~;
_wyn.ZK_N:=~~;
_wyn.ZAM_REA:=~~;
_wyn.MGP:=~~;
_wyn


\wyp_plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wypelnia plan danego zamowienia
::  OLD: \wyp_plan/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------

VAR_DEL.delete('__stm');
__stm:=tab_tmp(3,'MAG','STRING[16]',''
        ,'MAT','STRING[16]',''
        ,'DKC','STRING[16]',''
        ,'SD','REAL',''
        ,'SR','REAL','');
_sc:=tab_tmp(1,'REF','STRING[16]','');

_zkp:=tab_tmp(1,'ZKP','STRING[16]',''
       ,'ILE','REAL',''
       ,'POZ','INTEGER',''
       ,'ILW','REAL',''
       ,'MAT','STRING[16]',''
       ,'NRI','INTEGER','');

_nag:=ZK_N.ref();
_wysylka:=exec('eann2zk','magdok_wspolne',ZK_N.ref(),1)='T';
_czydst:=0;
_typ:=0;
_rezzlzam:={? ZK_N.T().R='Z' || exec('get','#params',300812,2) || exec('get','#params',600812,2) ?}='T';

ZK_P.cntx_psh();

{? _wysylka
||
   _i:=0;
   ZK_P.index('TYPN');
   ZK_P.prefix('A','Z',_nag,1);
   {? ZK_P.first()
   || {!
      |? {? ZK_P.ILP>0 & ZK_P.M().RODZ='T' & ~ZK_P.END
         || _i+=1;
            _zkp.blank();
            _zkp.ZKP:=$ZK_P.ref();
            _zkp.ILE:=ZK_P.ILP;
            _zkp.POZ:=ZK_P.POZ;
            _zkp.MAT:=$ZK_P.M;
            _zkp.NRI:=_i;
            _zkp.add(1)
         |? ZK_P.M().RODZ='U' & ZK_P.ILP>0 & ~ZK_P.END
         ||
::          usluga
            _i+=1;
            exec('addxplan','zamsiw_rea',ZK_P.M().KTM,ZK_P.M().N,'USŁUGA',0,ZK_P.ILP,ZK_P.POZ,_i,ZK_P.DK_C,ZK_P.DT)
         ?};
         ZK_P.next()
      !}
   ?};
   _czypal:=ZK_N.MG().PAL='T';
   {? _czypal || _ndx:=_zkp.ndx_tmp('',0,'MAT',,0,'POZ',,0) ?};
:: co aktualnie w wysyłce
   EANN.cntx_psh();
   EANP.cntx_psh();
   PAL.cntx_psh();
   PAL_POZ.cntx_psh();
   EANN.index('REFSQL');
   EANN.prefix($_nag,$_nag);
   {? EANN.first()
   || {!
      |? {? EANN.TYP='Z'
         || EANP.index('EANN');
            EANP.prefix(EANN.ref());
            {? EANP.first()
            || {!
               |? {? EANP.IL>0
                  || {? ~_czypal
                     || {? EANP.RSQL<>'' & (_zkp.clear(); _zkp.find_key(EANP.RSQL))
                        || _zkp.ILW+=EANP.IL;
                           _zkp.put(1)
                        ?}
                     |? EANP.PAL<>null
                     || {? EANP.PAL().AKT='N'
                        || PAL_POZ.use('palet'+form(EANP.PAL().AR-2000,-2,0,'99'))
                        || PAL_POZ.use('paletyp')
                        ?};
                        PAL_POZ.index('PAL');
                        PAL_POZ.prefix(EANP.PAL);
                        {? PAL_POZ.first()
                        || {!
                           |? {? PAL_POZ.ILP>0
                              || _doroz:=PAL_POZ.ILP;
                                 _zkp.index(_ndx);
                                 _zkp.prefix($PAL_POZ.M);
                                 {? _zkp.first()
                                 || {!
                                    |? _ilpoz:=_zkp.ILE-_zkp.ILW;
                                       {? _ilpoz>0
                                       || {? _ilpoz>=_doroz
                                          || _zkp.ILW+=_doroz;
                                             _zkp.put(1);
                                             _doroz:=0
                                          || _zkp.ILW+=_ilpoz;
                                             _zkp.put(1);
                                             _doroz-=_ilpoz
                                          ?}
                                       ?};
                                       _doroz>0 & _zkp.next()
                                    !}
                                 ?}
                              ?};
                              PAL_POZ.next()
                           !}
                        ?}
                     ?}
                  ?};
                  EANP.next()
               !}
            ?}
         ?};
         EANN.next()
      !}
   ?};
   EANN.cntx_pop();
   EANP.cntx_pop();
   PAL.cntx_pop();
   PAL_POZ.cntx_pop();
   {? _czypal || _zkp.ndx_drop(_ndx) ?};
   _zkp.clear();
   {? _zkp.first()
   || {!
      |? ZK_P.clear();
         {? ZK_P.seek(_zkp.ZKP)
         || {? _zkp.ILW>0
            || exec('addxplan','zamsiw_rea',ZK_P.M().KTM,ZK_P.M().N,'KOMPLETACJA'
                ,0,_zkp.ILW,ZK_P.POZ,_zkp.NRI,ZK_P.DK_C,ZK_P.DT)
            ?};
            {? _zkp.ILE-_zkp.ILW>0
            || exec('addxplan','zamsiw_rea',ZK_P.M().KTM,ZK_P.M().N,'POZOSTAŁO'
                ,0,_zkp.ILE-_zkp.ILW,ZK_P.POZ,_zkp.NRI,ZK_P.DK_C,ZK_P.DT)
            ?}
         ?};
         _zkp.next()
      !}
   ?}
||
:: pierwszy przebieg z cechami
   ZK_P.index('TYPN');
   ZK_P.prefix('A','Z',_nag,1);
   {? ZK_P.first()
   || _i:=0;
      _typ:={? ZK_P.RODZ='Z' || 4 || 10 ?};
::    sprawdza czy w uprawnieniach sa magazyny dostaw
      _czydst:=exec('upr2dost','zamsiw_rea',ZK_P.US,_typ);
      {!
      |? _i+=1;
         {? _rezzlzam
         || _bufil:=exec('ile_reze','rezerwacje',ZK_P.ref());
            _ilzlzam:=_bufil[6];
            obj_del(_bufil)
         || _ilzlzam:=0
         ?};
         _doroz:=ZK_P.ILP-ZK_P.ILRB-ZK_P.ILRA-_ilzlzam;
         _dk_c:=exec('zk_pdk_c','rezerwacje',ZK_P.ref());
         {? ZK_P.END
         || exec('addxplan','zamsiw_rea',ZK_P.M().KTM,ZK_P.M().N,'ZAMKNIĘTE',0,ZK_P.ILP,ZK_P.POZ,_i,ZK_P.DK_C,ZK_P.DT)
         |? _doroz>0 & (((1+ZK_P.RMAG().TYP)='D' | _czydst) & (_dk_c.clear(); _dk_c.first()))
         ||
::          sprawdzamy co jest a czego nie ma
            _jest:=0;
            _refmat:=ZK_P.M;
            _ilroz:=_doroz;

            {? ZK_P.RMAG<>null
            || _wyda:=ZK_P.ILRB;
               _jest:=0;
               _dk_c.clear();
               {? _dk_c.first()
               || {!
                  |? _refdkc:=exec('FindAndGet','#table','DK_C',_dk_c.DKC);
                     _doroz:=_dk_c.ILE;
                     exec('obl_stan','magazyn_stan',ZK_P.M,1,ZK_P.RMAG,,,,,,,,_refdkc);
                     _ilemg:=BEER.SD+_wyda;
                     SC.cntx_psh();
                     OKR.cntx_psh();
                     OKR.index('MC');
                     OKR.prefix(REF.FIRMA,1);
                     {? OKR.first()
                     || {!
                        |? SC.use('stc__'+ST.ODDZ+(form(OKR.ROK,,,'99')+2));
                           SC.index('SN');
                           SC.prefix(ZK_P.RMAG,ZK_P.M);
                           {? SC.first()
                           || {!
                              |? {? exec('czyzawch','mat_atr',_refdkc,SC.DK_C)
                                 || _stsc:=exec('obl_stad','magazyn_stan',ZK_P.M,SC.SRDK,ZK_P.ref());
                                    {? _stsc>=_ilemg || _stsc:=_ilemg ?};
                                    {? _wyda>0 & _stsc>0
                                    || {? _wyda>=_stsc
                                       || _wyda-=_stsc;
                                          _stsc:=0
                                       || _stsc-=_wyda;
                                          _wyda:=0
                                       ?}
                                    ?};
                                    {? _stsc>0
                                    || _sc.clear();
                                       {? _sc.find_key($SC.ref())
                                       || _stan:=0
                                       || _sc.blank();
                                          _sc.REF:=$SC.ref();
                                          _sc.add(1);
                                          _stan:=_stsc
                                       ?};
                                       _dan:=exec('akt_cstm','magazyn_stan'
                                                  ,ZK_P.RMAG,_refmat,$SC.DK_C,_doroz,_jest,_stan);
                                       _doroz:=_dan[1];
                                       _jest:=_dan[2];
                                       {? _jest>0
                                       || _zkp.clear();
                                          {? ~_zkp.find_key($ZK_P.ref())
                                          || _zkp.blank();
                                             _zkp.ZKP:=$ZK_P.ref();
                                             _zkp.ILE:=_jest;
                                             _zkp.add(1)
                                          || _zkp.ILE+=_jest;
                                             _zkp.put(1)
                                          ?}
                                       ?};
                                       obj_del(_dan)
                                    ?}
                                 ?};
                                 _doroz>0 & SC.next()
                              !}
                           ?};
                           _doroz>0 & OKR.next()
                        !}
                     ?};
                     SC.cntx_pop();
                     OKR.cntx_pop();
                     {? _jest>0
                     || exec('addxplan','zamsiw_rea',ZK_P.M().KTM,ZK_P.M().N,'OK',0,_jest,ZK_P.POZ,_i,_refdkc,ZK_P.DT)
                     ?};
                     _ilroz-=_jest;
                     _dk_c.next()
                  !}
               ?}
            || _wyda:=ZK_P.ILRB;
               _dk_c.clear();
               {? _dk_c.first()
               || {!
                  |? _jest:=0;
                     _refdkc:=exec('FindAndGet','#table','DK_C',_dk_c.DKC);
                     _doroz:=_dk_c.ILE;
                     BUFMG.index('NR');
                     BUFMG.prefix(ZK_P.US,_typ);
                     {? BUFMG.first()
                     || {!
                        |? {? BUFMG.MG().ODDZ=ST.ODDZ_KOD
                           || _wydb:=exec('wydawgmg','rezerwacje',ZK_P.ref(),ZK_P.M,BUFMG.MG);
                              {? BUFMG.MG().PAL='N' & (1+BUFMG.MG().TYP)='D'
                              || exec('obl_stan','magazyn_stan',ZK_P.M,1,BUFMG.MG,,,,,,,,_refdkc);
                                 _ilemg:=BEER.SD+_wydb;
                                 SC.cntx_psh();
                                 OKR.cntx_psh();
                                 OKR.index('MC');
                                 OKR.prefix(REF.FIRMA,1);
                                 {? OKR.first()
                                 || {!
                                    |? SC.use('stc__'+ST.ODDZ+(form(OKR.ROK,,,'99')+2));
                                       SC.index('SN');
                                       SC.prefix(BUFMG.MG,ZK_P.M);
                                       {? SC.first()
                                       || {!
                                          |? _stsc:=exec('obl_stad','magazyn_stan',ZK_P.M,SC.SRDK,ZK_P.ref());
                                             {? _stsc>=_ilemg || _stsc:=_ilemg ?};
                                             {? _wydb>0 & _stsc>0
                                             || {? _wydb>=_stsc
                                                || _wydb-=_stsc;
                                                   _wyda-=_stsc;
                                                   _stsc:=0
                                                || _stsc-=_wydb;
                                                   _wyda-=_wydb;
                                                   _wydb:=0
                                                ?}
                                             ?};
                                             {? _stsc>0 & exec('czyzawch','mat_atr',_refdkc,SC.DK_C)
                                             || _sc.clear();
                                                {? _sc.find_key($SC.ref())
                                                || _stan:=0
                                                || _sc.blank();
                                                   _sc.REF:=$SC.ref();
                                                   _sc.add(1);
                                                   _stan:=_stsc
                                                ?};
                                                _dan:=exec('akt_cstm','magazyn_stan'
                                                           ,BUFMG.MG,_refmat,$SC.DK_C,_doroz,_jest,_stan);
                                                _doroz:=_dan[1];
                                                _jest:=_dan[2];
                                                {? _jest>0
                                                || _zkp.clear();
                                                   {? ~_zkp.find_key($ZK_P.ref())
                                                   || _zkp.blank();
                                                      _zkp.ZKP:=$ZK_P.ref();
                                                      _zkp.ILE:=_jest;
                                                      _zkp.add(1)
                                                   || _zkp.ILE+=_jest;
                                                      _zkp.put(1)
                                                   ?}
                                                ?};
                                                obj_del(_dan)
                                             ?};
                                             _doroz>0 & SC.next()
                                          !}
                                       ?};
                                       _doroz>0 & OKR.next()
                                    !}
                                 ?};
                                 SC.cntx_pop();
                                 OKR.cntx_pop()
                              ?}
                           ?};
                           _doroz>0 & BUFMG.next()
                        !}
                     ?};
                     {? _jest>0
                     || exec('addxplan','zamsiw_rea',ZK_P.M().KTM,ZK_P.M().N,'OK',0,_jest,ZK_P.POZ,_i,_refdkc,ZK_P.DT)
                     ?};
                     _ilroz-=_jest;
                     _dk_c.next()
                  !}
               ?}
            ?};
            {? ZK_P.DK_C<>null & _ilroz>0
            || exec('addxplan','zamsiw_rea',ZK_P.M().KTM,ZK_P.M().N,'BRAK',0,_ilroz,ZK_P.POZ,_i,ZK_P.DK_C,ZK_P.DT)
            ?}
         ?};
         obj_del(_dk_c);
         ZK_P.next()
      !}
   ?};

:: drugi przebieg bez cech najpierw po wypełnionych RMAG-ach
   ZK_P.index('TYPN');
   ZK_P.prefix('A','Z',_nag,1);
   {? ZK_P.first()
   || _i:=0;
      {!
      |? _i+=1;
         {? _rezzlzam
         || _bufil:=exec('ile_reze','rezerwacje',ZK_P.ref());
            _ilra:=ZK_P.ILRA-_bufil[6];
            obj_del(_bufil)
         || _ilra:=ZK_P.ILRA
         ?};
         {? ZK_P.END
         || _i-=1
         |? ZK_P.M().RODZ='U' & ZK_P.ILP>0
         ||
::          usluga
            exec('addxplan','zamsiw_rea',ZK_P.M().KTM,ZK_P.M().N,'USŁUGA',0,ZK_P.ILP,ZK_P.POZ,_i,ZK_P.DK_C,ZK_P.DT)
         |? ZK_P.RMAG<>null & ZK_P.ILP>0
         || _doroz:=ZK_P.ILP;
::          rezerwacja bezwarunkowa
            {? ZK_P.ILRB>0
            || exec('addxplan','zamsiw_rea',ZK_P.M().KTM,ZK_P.M().N,'OK',0,ZK_P.ILRB,ZK_P.POZ,_i,ZK_P.DK_C,ZK_P.DT);
               _doroz-=ZK_P.ILRB
            ?};
::          rezerwacje automatyczne warunkowe
            {? _ilra>0
            || exec('addxplan','zamsiw_rea',ZK_P.M().KTM,ZK_P.M().N,'BRAK',0,_ilra,ZK_P.POZ,_i,ZK_P.DK_C,ZK_P.DT);
               _doroz-=_ilra
            ?};
            _zkp.clear(); {? _zkp.find_key($ZK_P.ref()) || _doroz-=_zkp.ILE ?};
            {? _doroz>0 & ~(((1+ZK_P.RMAG().TYP)='D' | _czydst) & ZK_P.DK_C<>null)
            ||
::            sprawdzamy co jest a czego nie ma
               _jest:=0;
               _refmat:=ZK_P.M;
               {? ZK_P.RMAG<>null
               || _dan:=exec('akt_cstm','magazyn_stan',ZK_P.RMAG,_refmat,'brak',_doroz,_jest);
                  _doroz:=_dan[1];
                  _jest:=_dan[2];
                  obj_del(_dan)
               || BUFMG.index('NR');
                  BUFMG.prefix(ZK_P.US,_typ);
                  {? BUFMG.first()
                  || {!
                     |? {? BUFMG.MG().ODDZ=ST.ODDZ_KOD
                        || _dowgmag:=exec('dowgmag','rezerwacje',ZK_P.ref(),BUFMG.MG);
                           _dorozx:={? (_doroz-_dowgmag)>0 || _doroz-_dowgmag || 0 ?};
                           {? _dorozx>0 & BUFMG.MG().PAL='N' & (ZK_P.DK_C=null | (1+BUFMG.MG().TYP)<>'D')
                           || _dan:=exec('akt_cstm','magazyn_stan',BUFMG.MG,_refmat,'brak',_dorozx,_jest);
                              _rozn:=_dorozx-_dan[1];
                              _doroz-=_rozn;
                              _jest:=_dan[2];
                              obj_del(_dan)
                           ?}
                        ?};
                        _doroz>0 & BUFMG.next()
                     !}
                  ?}
               ?};
               {? _jest>0 || exec('addxplan','zamsiw_rea'
                                  ,ZK_P.M().KTM,ZK_P.M().N,'OK',0,_jest,ZK_P.POZ,_i,ZK_P.DK_C,ZK_P.DT) ?};
               {? _doroz>0 || exec('addxplan','zamsiw_rea'
                                   ,ZK_P.M().KTM,ZK_P.M().N,'BRAK',0,_doroz,ZK_P.POZ,_i,ZK_P.DK_C,ZK_P.DT) ?}
            ?}
         ?};
         ZK_P.next()
      !}
   ?};
:: trzeci przebieg bez cech najpierw bez RMAG-ach
   ZK_P.index('TYPN');
   ZK_P.prefix('A','Z',_nag,1);
   {? ZK_P.first()
   || _i:=0;
      {!
      |? _i+=1;
         {? _rezzlzam
         || _bufil:=exec('ile_reze','rezerwacje',ZK_P.ref());
            _ilra:=ZK_P.ILRA-_bufil[6];
            obj_del(_bufil)
         || _ilra:=ZK_P.ILRA
         ?};
         {? ZK_P.M().RODZ='T' & ZK_P.RMAG=null & ZK_P.ILP>0
         || _doroz:=ZK_P.ILP;
::          rezerwacja bezwarunkowa
            {? ZK_P.ILRB>0
            || exec('addxplan','zamsiw_rea',ZK_P.M().KTM,ZK_P.M().N,'OK',0,ZK_P.ILRB,ZK_P.POZ,_i,ZK_P.DK_C,ZK_P.DT);
               _doroz-=ZK_P.ILRB
            ?};
::          rezerwacje automatyczne warunkowe
            {? _ilra>0
            || exec('addxplan','zamsiw_rea',ZK_P.M().KTM,ZK_P.M().N,'BRAK',0,_ilra,ZK_P.POZ,_i,ZK_P.DK_C,ZK_P.DT);
               _doroz-=_ilra
            ?};
            _zkp.clear(); {? _zkp.find_key($ZK_P.ref()) || _doroz-=_zkp.ILE ?};
            {? _doroz>0 & ~(((1+ZK_P.RMAG().TYP)='D' | _czydst) & ZK_P.DK_C<>null)
            ||
::            sprawdzamy co jest a czego nie ma
               _jest:=0;
               _refmat:=ZK_P.M;
               {? ZK_P.RMAG<>null
               || _dan:=exec('akt_cstm','magazyn_stan',ZK_P.RMAG,_refmat,'brak',_doroz,_jest);
                  _doroz:=_dan[1];
                  _jest:=_dan[2];
                  obj_del(_dan)
               || BUFMG.index('NR');
                  BUFMG.prefix(ZK_P.US,_typ);
                  {? BUFMG.first()
                  || {!
                     |? {? BUFMG.MG().ODDZ=ST.ODDZ_KOD
                        || _dowgmag:=exec('dowgmag','rezerwacje',ZK_P.ref(),BUFMG.MG);
                           _dorozx:={? (_doroz-_dowgmag)>0 || _doroz-_dowgmag || 0 ?};
                           {? _dorozx>0 & BUFMG.MG().PAL='N' & (ZK_P.DK_C=null | (1+BUFMG.MG().TYP)<>'D')
                           || _dan:=exec('akt_cstm','magazyn_stan',BUFMG.MG,_refmat,'brak',_dorozx,_jest);
                              _rozn:=_dorozx-_dan[1];
                              _doroz-=_rozn;
                              _jest:=_dan[2];
                              obj_del(_dan)
                           ?}
                        ?};
                        _doroz>0 & BUFMG.next()
                     !}
                  ?}
               ?};
               {? _jest>0 || exec('addxplan','zamsiw_rea',ZK_P.M().KTM,ZK_P.M().N
                                  ,'OK',0,_jest,ZK_P.POZ,_i,ZK_P.DK_C,ZK_P.DT) ?};
               {? _doroz>0 || exec('addxplan','zamsiw_rea',ZK_P.M().KTM,ZK_P.M().N
                                   ,'BRAK',0,_doroz,ZK_P.POZ,_i,ZK_P.DK_C,ZK_P.DT) ?}
            ?}
         ?};
         ZK_P.next()
      !}
   ?}
?};

obj_del(_sc);
obj_del(_zkp);

ZK_P.cntx_pop();
VAR_DEL.delete('__stm');
~~


\addxplan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: dodaje lub aktualizuje jeden rekord w planie zamowienia
::   WE: _a - KTM
::       _b - Nazwa materialu
::       _c - stan
::       _d - cena
::       _e - ilosc
::       _f - pozycja
::       _g - lp
::       _h - cecha
::       _i - data realizacji
::       UWAGA: brak kontroli typow parametrow
::  OLD: \addxplan/zk.fml
::----------------------------------------------------------------------------------------------------------------------

_opis:=exec('opisdk_c','mat_atr',_h);
_tree:=null;
XPLAN.prefix();
{? XPLAN.find_key(0,_a+' - '+_b,_d,_i,'')
|| XPLAN.ILE+={? _c<>'BRAK' & _c<>'POZOSTAŁO' & _c<>'ZAMKNIĘTE' || _e || 0 ?};
   XPLAN.ILB+={? _c='BRAK' | _c='POZOSTAŁO' | _c='ZAMKNIĘTE' || _e || 0 ?};
   XPLAN.put(1);
   _tree:=XPLAN.ref()
|| XPLAN.TREE:=null;
   XPLAN.KTM:=_a+' - '+_b;
   XPLAN.KTM2:=_a;
   XPLAN.STA:='';
   XPLAN.CEN:=_d;
   XPLAN.ILE:={? _c<>'BRAK' & _c<>'POZOSTAŁO' & _c<>'ZAMKNIĘTE' || _e || 0 ?};
   XPLAN.ILB:={? _c='BRAK' | _c='POZOSTAŁO' | _c='ZAMKNIĘTE' || _e || 0 ?};
   XPLAN.POZ:=_f;
   XPLAN.ROZ:='-';
   XPLAN.WYS:=1;
   XPLAN.LP:=_g;
   XPLAN.DKC:='';
   XPLAN.DT:=_i;
   {? XPLAN.add(1) || _tree:=XPLAN.ref() ?}
?};
{? _tree<>null
|| {? XPLAN.find_key(_tree,_a+' - '+_b,_d,_i,_c,_opis,)
   || XPLAN.ILE+={? _c<>'BRAK' & _c<>'POZOSTAŁO' & _c<>'ZAMKNIĘTE' || _e || 0 ?};
      XPLAN.ILB+={? _c='BRAK' | _c='POZOSTAŁO' | _c='ZAMKNIĘTE' || _e || 0 ?};
      XPLAN.put(1)
   || XPLAN.TREE:=_tree;
      XPLAN.KTM:=_a+' - '+_b;
      XPLAN.KTM2:=_a;
      XPLAN.STA:=_c;
      XPLAN.CEN:=_d;
      XPLAN.ILE:={? _c<>'BRAK' & _c<>'POZOSTAŁO' & _c<>'ZAMKNIĘTE' || _e || 0 ?};
      XPLAN.ILB:={? _c='BRAK' | _c='POZOSTAŁO' | _c='ZAMKNIĘTE' || _e || 0 ?};
      XPLAN.POZ:=_f;
      XPLAN.ROZ:='-';
      XPLAN.WYS:=1;
      XPLAN.LP:=_g;
      XPLAN.DKC:=_opis;
      XPLAN.DT:=_i;
      XPLAN.add(1)
   ?}
?}


\upr2dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy wsrod uprawnionych magazynow sa magazyny typu dostaw
::   WE: _a - user
::       _b - typ uprawnien
::   WY: 1-tak 0-nie
::  OLD: \upr2dost/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:=0;
BUFMG.cntx_psh();
BUFMG.index('NR');
BUFMG.prefix(_a,_b);
{? BUFMG.first()
|| {!
   |? _wyn:=BUFMG.MG().ODDZ=ST.ODDZ_KOD & (1+BUFMG.MG().TYP)='D' & BUFMG.MG().PAL='N';
      ~_wyn & BUFMG.next()
   !}
?};
BUFMG.cntx_pop();
_wyn


\analbrak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: rozpisuje braki w zaleznosci od tego czy pozycji nie ma na stanie czy tez sa zarezerwowane
::   WE: _a - symbol indeksu lub brak jesli nie dotyczy brakow
::       _b - uchwyt okienka selekcji
::       _c - 1-tylko kontrola czy są rezerwacje i wydania 0(domyślnie)-nie
::  OLD: \analbrak/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_ctrl:={? var_pres('_c')=type_of(0) || _c || 0 ?};
{? _a<>''
||
   ZK_P.index('NAG');
   ZK_P.prefix(ZK_N.ref);
   {? ZK_P.find_key(XPLAN.POZ,1)
   ||
::    bazujemy na standardowej funkcji obliczajacej stan dostepny
::    5-parametr powoduje przy analizie stanow wypelnienie tabeli rezerwacji
      _ktm:=exec('FindInSet','#table','M','MATKTM',_a,_a);
      {? ZK_P.RMAG<>null
      || exec('obl_stan','magazyn_stan',_ktm,1,ZK_P.RMAG,,~_ctrl)
      || exec('obl_stan','magazyn_stan',_ktm,{? ZK_P.RODZ='Z' || 2 || 9 ?},,,~_ctrl)
      ?}
   ?}
?};
{? ~_ctrl
|| __strez.prefix(_a,_a);
   {? __strez.first() || {! |? {? __strez.SQL=_b || __strez.del() || __strez.next() ?} !} ?};
   __strez.first();
   grp_disp(__strez,__strez.win_sel('?'))
|| _res:=BEER.S>BEER.SD
?};
_res


\bedispil
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: Przed wyswietleniem pol XPLAN.ILE, XPLAN.ILB
::   WE: _a - 1-ILE 0-ILB
::  OLD: \bedispil/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? ~XPLAN.TREE
|| {? _a & XPLAN.ILE>0
   || _wyn:='255:0:0,128:255:0'
   |? ~_a & XPLAN.ILB>0
   || _wyn:='255:255:0,0:0:255'
   || _wyn:=exec('findfnv','#color')
   ?}
?};
_wyn


\il_wdr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MZ] [2011]
:: OPIS: ilosc w drodze w oknie planu zamowien sprzedazy
::   WE: _a - symbol indeksu lub brak jesli nie dotyczy brakow
::       _b - uchwyt okienka selekcji
::  OLD: \il_wdr/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
M.index('MATKTM');
M.prefix(XPLAN.KTM2,XPLAN.KTM2);
{? M.first()
||
   __stwdr.erase();
   __stprd.erase();
   exec('tree_del','#tree',INFZAM,0);
   exec('pob_dane2','magazyn_stan',M.ref(),2);
   _ndx:=INFZAM.ndx_tmp(,,'LP',,,'NR',,,'SZ',,);
   INFZAM.index(_ndx);
   INFZAM.prefix(9,2);
   {? INFZAM.first()
   ||
      _sum:=0;
      {!
      |? _sz:=INFZAM.SZ;
         INFZAM.cntx_psh();
         INFZAM.prefix(9,1,_sz);
         {? INFZAM.first()
         || _mag:=(INFZAM.OP*' ')-INFZAM.OP
         ?};
         INFZAM.cntx_pop();

         __stwdr.blank();
         __stwdr.MAG:=_mag;
         __stwdr.OP:=INFZAM.OP;
         __stwdr.IL:=INFZAM.IL;
         __stwdr.add();

         _sum+=__stwdr.IL;

         INFZAM.next()
      !};

      __stwdr.blank();
      __stwdr.MAG:='~~';
      __stwdr.OP:='   S U M A:';
      __stwdr.IL:=_sum;
      __stwdr.add()
   ?};
   INFZAM.prefix(7,2);
   {? INFZAM.first()
   ||
      _sum:=0;
      {!
      |? _sz:=INFZAM.SZ;
         INFZAM.cntx_psh();
         INFZAM.prefix(7,1,_sz);
         {? INFZAM.first()
         || _mag:=(INFZAM.OP*' ')-INFZAM.OP
         ?};
         INFZAM.cntx_pop();

         __stprd.blank();
         __stprd.MAG:=_mag;
         __stprd.OP:=INFZAM.OP;
         __stprd.IL:=INFZAM.IL;
         __stprd.add();

         _sum+=__stprd.IL;

         INFZAM.next()
      !};

      __stprd.blank();
      __stprd.MAG:='~~';
      __stprd.OP:='   S U M A:';
      __stprd.IL:=_sum;
      __stprd.add()
   ?};
   INFZAM.ndx_drop(_ndx)
?};
M.cntx_pop();
__stwdr.first();
grp_disp(__stwdr,__stwdr.win_sel('?'));
__stprd.first();
grp_disp(__stprd,__stprd.win_sel('?'))


\ilp2sr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: oblicza ilosc pozostala do realizacji
::   WE: _a - ref naglowka
::       _b - numer pozycji
::       _c - ref aktualnego magazynu
::   WY: ilosc pozostala do realizacji zamowienia
::  OLD: \ilp2sr/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:=0;
ZK_P.cntx_psh();
ZK_P.index('NAG');
ZK_P.prefix(_a,_b);
{? ZK_P.first()
|| {!
   |? _wyn+={? ZK_P.TOP || ZK_P.ILP || 0 ?}-{? ZK_P.MG<>_c || ZK_P.ILR || 0 ?};
      ZK_P.next
   !}
?};
ZK_P.cntx_pop();
_wyn


\rek_plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: rr [2008]
:: OPIS: podswietlenie rekordu, Stan planu realizacji pozycji zamówienia
::  OLD: \rek_plan/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_poz:=(+XPLAN.ROZ)-(+form(XPLAN.ROZ));
_xxx:=(64*_poz)-(_poz>0);
_st1:=form(_xxx,,0,'99');
_st2:=form(_xxx,,0,'99');
_sta:=(1+XPLAN.STA);
{? _sta='Z'
|| 'PLN#01#05'
|? _sta='B'
|| {? exec('analbrak','zamsiw_rea',XPLAN.KTM2,rsql,1)
   || 'PLN#01#04'
   || 'PLN#01#02'
   ?}
|? _sta='O' || 'PLN#01#01'
|? _sta='U' || 'PLN#01#03'
|| ''
?}


\rea_dkfk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: obsluga faktury dla realizacji
::  OLD: \rea_dkfk/zk.fml
::----------------------------------------------------------------------------------------------------------------------
ATR.MJS:='FAP';
BEER.MW:='F';
ZK_N.cntx_psh();
ZK_P.cntx_psh();
ZK_RN.cntx_psh();
ZK_RP.cntx_psh();

{? ZK_RN.SFK<>''
||
   _opc:=1
||
   FUN.info('Brak danych o fakturze.'@); _opc:=0
?};

{? _opc=1
||
   FAKS.cntx_psh();
   DK.cntx_psh();
   _rfk:=BB.sqlint(ZK_RN.FAKS);
   _nfk:=8+ZK_RN.FAKS;

   _mask:=0;
   {? FAKS.name()<>_nfk
   || _mask:=1;exec('open','open_tab',5-_nfk-2,6-_nfk)
   ?};
   FAKS.prefix();
   {? FAKS.seek(_rfk,_nfk) || exec('pozycje_fak','faktury_poz') ?};
   {? _mask || exec('open','open_tab',ST.ODDZ,2-$(ST.AR)) ?};
   DK.cntx_pop();
   FAKS.cntx_pop()
|| ''
?};

ZK_RP.cntx_pop();
ZK_RN.cntx_pop();
ZK_P.cntx_pop();
ZK_N.cntx_pop();
BEER.MW:='Z';
ATR.MJS:='ZK_P';
''


\powzalzf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: Zalaczniki dla faktur sprzedazy
::  OLD: \powzalzf/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_RN.FAKS<>''
|| _akt:=FAKS.name();
   _msk:=form(8+ZK_RN.FAKS);
   FAKS.cntx_psh();
   FAP.cntx_psh();
   {? _msk<>_akt || exec('open','open_tab',1+(_msk+3),_msk+2) ?};
   FAKS.clear();
   {? FAKS.seek(ZK_RN.FAKS) || exec('sel_dok','dokum','FAKS',,,,1) ?};
   FAKS.cntx_pop();
   FAP.cntx_pop()
|| FUN.info('Nie wystawiono faktury sprzedaży.'@)
?};
~~


\ctrlREAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Sprawdza czy coś wybrano do realizacji
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
__zknrea.cntx_psh();
__zknrea.clear();
{? __zknrea.first() || {! |? _wyn:=__zknrea.WYB='*'; ~_wyn & __zknrea.next() !} ?};
__zknrea.cntx_pop();
_wyn


\zkn_realizuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Realizacja zamówienia - jeśli jest kompletacja to realizacja kompletacji wysyłki
::   WE: _a UID - czynności
::----------------------------------------------------------------------------------------------------------------------
:: Realizacja zamówienia
{? exec('realWGdysp','transport_wspolne',ZK_N.uidref())>0
|| _ean:=exec('eann2zk','magdok_wspolne',ZK_N.ref());
   {? _ean<>''
   || {? _ean='J' | _ean='I'
      || {? ~exec('chk_role','#b__box',OPERATOR.USER,'LMO_MOB_DWYD')
          & ~exec('chk_role','#b__box',OPERATOR.USER,'LMO_MOB_DKOM')
         || FUN.info('Brak uprawnień do realizacji operacji mobilnych powiązanych z danym zamówieniem.\n'
                     'Realizacja niemożliwa.'@)
         |? FUN.ask('Zamówienie powiązane z operacjami na urządzeniach mobilnych.\n'
                    'Czy realizować na podstawie zakończonych operacji?'@)
         || exec('reazeann','zamowienia',$ZK_N.ref(),0)
         ?}
      || FUN.info('Zamówienie przesłane na urządzenie mobilne.\n'@+
                  'Realizacja niemożliwa.'@)
      ?}
   || _namepar:={? (3+_a)='LSP' || 'ZK_N' || 'ZAM' ?};
      _params:=exec('mp_run_a','#b__box');
      _params.ACT_UID:=_a;
      _params.UIDREF:={? ZK_N.LIM='T' || ZK_N.ZL().uidref() || ZK_N.uidref() ?};
      _params.AKCJA:='Realizuj';
      _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
      exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,_namepar,ZK_N.ref());
      {? ZK_N.LIM='T'
      ||
         _params.CONTEXT:=exec('context','zamsiw_rea');
         _params.CONTEXT.ZK_N:=ZK_N.ref()
      ?};
      exec('mp_run','#b__box',_params)
   ?}
?};
~~


\UpDownPoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: zwiększa ilość na realizacji
::   WE: _a - ref ZK_P
::       _b - ilość powyżej przed
::       _c - ilość powyżej po
::       _d - wskazanie na konkretną dostawę lub pusty string
::       _e - 1-pomijaj wydania na czytniku 0(domyślnie)-nie
::       [_f] - ref magazynu - dotyczy tylko wskazania dostawy, ''-domyślnie
::   WY: ilość którą udało się skorygować - jeżeli wartość ujemna to ile usunięto rezerwacji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_e')<>type_of(0) || _e:=0 ?};
{? var_pres('_f')<>type_of(null()) || _f:=null() ?};

_wyn:=0;
_ref:=null;

_updown:=_c-_b;
_dost:=_d;

ZK_P.cntx_psh();
ZK_P.prefix();
{? _updown<>0 & ZK_P.seek(_a)
|| {? _updown>0
   || _old:=exec('ilrPlusZK_P','zamsiw_rea',ZK_P.ref(),__refrea,_dost);
      {? _dost=''
      || exec('rozp_rez','rezerwacje',__refrea,,_updown,,,_e,-1,,1)
      || _ndk:=form(8+_dost);
         _rdk:=BB.sqlint(_dost);
         _mag:={? ZK_P.RMAG<>null()
               || ZK_P.RMAG
               || _f
               ?};
         _ilenasc:=exec('obl_stsc','magazyn_stan',_rdk,_ndk,_mag,ZK_P.M);

         exec('obl_stan','magazyn_stan',ZK_P.M,1,_mag,,,_e,,,,,ZK_P.DK_C);
         {? _ilenasc>BEER.SD || _ilenasc:=BEER.SD ?};
         {? _ilenasc>0
         || {? _ilenasc<_updown || _updown:=_ilenasc ?};
            exec('update','rezerwacje','ZK_PP',ZK_P.ref(),_mag,ZK_P.M,_updown,_dost,'B',,1,ZK_P.NR,__refrea);
            exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
            ZK_P.get();
            exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,0,$ZK_P.N)
         ?}
      ?};
      _new:=exec('ilrPlusZK_P','zamsiw_rea',ZK_P.ref(),__refrea,_dost);
      _wyn:=_new
   || _ilr:=-_updown;
      REZ.cntx_psh();
      REZ.index('ZK_PP');
      REZ.prefix(ZK_P.ref(),'T','B',__refrea);
      {? REZ.last()
      || {!
         |? {? REZ.ILR<=_ilr & REZ.SC=_dost
            || _ilr-=REZ.ILR;
               _wyn-=REZ.ILR;
               REZ.del()
            |? REZ.ILR>0 & REZ.SC=_dost
            || REZ.ILR-=_ilr;
               REZ.put(1);
               _wyn-=_ilr;
               _ilr:=0;
               0
            || REZ.prev()
            ?}

         !}
      ?};
      REZ.cntx_pop()
   ?}
?};
ZK_P.cntx_pop();
_wyn


\ilrPlusZK_P
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: oblicza ilość dodatkowych rezerwacji
::   WE: _a - ref ZK_P
::       _b - identyfikator realizacji
::       _c - wskazanie na konkretną dostawę lub pusty string
::       [_d] - ref SGL magazynu, domyslnie-''
::       [_e] - 'N'-bez zwiększenia rezerwacji - domyślnie na zwiększenie 'T'
::       [_f] - 1-dodaj rezerwacje automatyczne 0(domyślnie) bez
::       [_g] - 1-bez rezerwacji dostaw 0(domyślnie)-z
::   WY: sumaryczna ilość dodatkowych rezerwacji
::----------------------------------------------------------------------------------------------------------------------
_mag:={? var_pres('_d')=type_of('') || _d || '' ?};
_plus:={? var_pres('_e')=type_of('') || _e || 'T' ?};
_auto:={? var_pres('_f')=type_of(0) || _f || 0 ?};
_wdst:={? var_pres('_g')=type_of(0) || _g || 0 ?};

_wyn:=0;
_dost:=_c;
REZ.cntx_psh();
REZ.index('ZK_PP');
{? ~_auto || REZ.prefix(_a,_plus,'B',_b) || REZ.prefix(_a,_plus,'B') ?};
{? REZ.first()
|| {!
   |? {? REZ.REFREA=_b | (_auto & REZ.REFREA='' & REZ.AUTO)
      || {? REZ.SC=_dost & (_mag='' | ($REZ.MG)=_mag) & (~_wdst | REZ.SC='') || _wyn+=REZ.ILR ?}
      ?};
      REZ.next()
   !}
?};
REZ.cntx_pop();
_wyn


\ilrBezPlusZK_P
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: oblicza ilość dodatkowych rezerwacji
::   WE: _a - ref ZK_P
::       _b - identyfikator realizacji
::   WY: sumaryczna ilość dodatkowych rezerwacji
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
REZ.cntx_psh();
REZ.index('ZK_PP');
REZ.prefix(_a,'N','B',_b);
{? REZ.first() || {! |? _wyn+=REZ.ILR; REZ.next() !} ?};
REZ.cntx_pop();
_wyn


\aktZK_RP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: aktualizuje ZK_RP wg parametrów 600800, 600801, ZK_N.LIM='T'
::   WE: _a - identyfikator realizacji
::----------------------------------------------------------------------------------------------------------------------
_plus:=0;
_zkp:=tab_tmp(1,'ZKP','STRING[16]','','ILZ','REAL','','ILR','REAL','','ROZ','REAL','');
ZK_RP.index('NAGA');
ZK_RP.prefix(_a);
{? ZK_RP.last()
|| ZK_N.cntx_psh();
   ZK_P.cntx_psh();
   ZK_RP.cntx_psh();
   _zkn:=ZK_RP.P().N;
   ZK_P.index('NAG');
   ZK_P.prefix(_zkn);
   {? ZK_P.first()
   || {!
      |? {? ZK_P.M().RODZ='T'
         || _zkp.blank();
            _zkp.ZKP:=$ZK_P.ref();
            _zkp.ILZ:=ZK_P.ILZ;
            _zkp.add(1)
         ?};
         ZK_P.next()
      !}
   ?};
   ZK_RP.index('NPOZ');
   ZK_RP.prefix(_zkn);
   {? ZK_RP.first()
   || {!
      |? {? ZK_RP.P().M().RODZ='T'
         || {? (_zkp.clear(); _zkp.find_key($ZK_RP.P,))
            || _zkp.ILR+=ZK_RP.ILR;
               _zkp.put(1)
            ?}
         ?};
         ZK_RP.next()
      !}
   ?};
   ZK_N.cntx_pop();
   ZK_P.cntx_pop();
   ZK_RP.cntx_pop();

   {!
   |? {? ZK_RP.PLUS>0
      || {? ZK_RP.PLUS=ZK_RP.ILR
         || _plus-=ZK_RP.PLUS;
            ZK_RP.del()
         || ZK_RP.ILR-=ZK_RP.PLUS;
            _plus-=ZK_RP.PLUS;
            ZK_RP.PLUS:=0;
            ZK_RP.put(1);
            ZK_RP.prev()
         ?}
      || ZK_RP.prev()
      ?}
   !};
   {? ~_plus & ZK_RP.last()
   || {!
      |? {? (_zkp.clear(); _zkp.find_key($ZK_RP.P,))
         || _ilepow:=(_zkp.ILR-_zkp.ROZ)-_zkp.ILZ;
            {? _ilepow>0
            || {? _ilepow>=ZK_RP.ILR
               || _zkp.ROZ+=ZK_RP.ILR;
                  _zkp.put(1);
                  ZK_RP.del()
               || ZK_RP.ILR-=_ilepow;
                  _zkp.ROZ+=_ilepow;
                  _zkp.put(1);
                  ZK_RP.put(1);
                  ZK_RP.prev()
               ?}
            || ZK_RP.prev()
            ?}
         || ZK_RP.prev()
         ?}
      !}
   ?}
?};
obj_del(_zkp);
1


\ilEANP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: oblicza ilość na kompletacjach i wydaniach
::   WE: _a - materiał
::       _b - lokalizacja
::       _c - termin ważności
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
EANP.cntx_psh();
EANN.cntx_psh();
EANP.index('KPL');
EANP.prefix(_a,_b,_c);
{? EANP.first()
|| {!
   |? {? (';ZW'*EANP.EANN().TYP)>1
      || _wyn+={? EANP.ILS>0 || EANP.ILS || EANP.IL ?}
      ?};
      EANP.next()
   !}
?};
EANN.cntx_pop();
EANP.cntx_pop();
_wyn


\przepZK_RP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: generuje zapisy wg ilości dodatkowych (powyżej)
::   WE: _a - tabela danych
::----------------------------------------------------------------------------------------------------------------------
_param:={? ZK_N.T().R='Z' || 600800 || 600801 ?};
__ilplus:=ZK_N.LIM='T' | (';ZR'*exec('get','#params',_param,2))>1;
_tab:=_a;
_tab.clear();
{? __ilplus & _tab.first()
|| ZK_N.cntx_psh();
   ZK_P.cntx_psh();
   ZK_RP.cntx_psh();
   {!
   |? ZK_P.prefix();
      {? ZK_P.seek(_tab.ZKP)
      || exec('UpDownPoz','zamsiw_rea',ZK_P.ref(),0,_tab.ILE,'',1);
         _tab.del()
      || _tab.next()
      ?}
   !};
   ZK_N.cntx_pop();
   ZK_P.cntx_pop();
   ZK_RP.cntx_pop()
?};
~~


\aktZK_RP_lim
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: aktualizuje ZK_RP dla zamówień limitowych (przy zmniejszaniu)
::   WE: _a - ZK_P.ref()
::       _b - ilość, o którą pomniejszyć realizacje
::----------------------------------------------------------------------------------------------------------------------
_zk_p:=_a;
_zk_n:=exec('FindAndGet','#table',ZK_P,_a,,"N",null());
_poz:=exec('FindAndGet','#table',ZK_P,_a,,"POZ",null());
_minus:=_b;

ZK_RP.index('NPOZ');
ZK_RP.prefix(_zk_n,_poz);
{? ZK_RP.last()
|| {!
   |? {? _minus>=ZK_RP.ILR
      || _minus-=ZK_RP.ILR;
         ZK_RP.del()
      || ZK_RP.ILR-=_minus;
         _minus:=0;
         ZK_RP.put(1)
      ?};
      _minus>0 & ZK_RP.last()
   !}
?};
1


\zknrea_wdst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: wybór dostawy dla wybranej gałęzi
::   WE: [_a] - kod identyfikujący dostawę lub domyślnie pusty string
::       [_b] - ilość do rezerwacji
::   WY: 1-ok 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_iddst:={? var_pres('_a')=type_of('') || _a || '' ?};
_ilrez:={? var_pres('_b')=type_of(0) || _b || 0 ?};
_wgpar:=_iddst<>'' & _ilrez>0;

{? var_pres('__smmag')<100
|| __smmag:=tab_tmp(1,'MAG','STRING[10]','Magazyn'
             ,'STAN','REAL','Stan'
             ,'RSQL','STRING[16]',''
             ,'STA2','REAL','Stan 2'
             ,'J2','STRING[10]','jm 2'
             ,'AKT','STRING[1]','')
?};
exec('wybwgupr','magdok_wspolne',1,,1,1);
{? ~MG.f_active() | ~MG.f_size()
|| FUN.info('Brak towaru w uprawnionych magazynach z obsługą dostaw. Operacja niedostępna.'@)
|| _refzkrp:=__zknrea.REF;
   _ildo:={? _wgpar || _ilrez || __zknrea.RES ?};
   _refbez:=null();
   _ilmg:=__zknrea.REZ;
   __zknrea.cntx_psh();
   __zknrea.clear();
   __zknrea.prefix(__zknrea.ref());
   {? __zknrea.last()
   || {! |? _ilmg-={? __zknrea.DOST || __zknrea.REA || 0 ?}; __zknrea.prev() !};
      {!
      |? {? ~__zknrea.DOST
         || _refzkrp:=__zknrea.REF;
            _refbez:=__zknrea.ref();
            0
         || __zknrea.next()
         ?}
      !}
   ?};
   __zknrea.cntx_pop();

   DISP.REZREA:=exec('ilererez','zamsiw_rea',_refzkrp,null());
   {? DISP.REZREA>_ildo || DISP.REZREA:=_ildo ?};
   {? DISP.REZREA<=0
   || FUN.info('Aktualnie cała ilość do realizacji została rozpisana na dostawy.\nWybór dostawy niemożliwy.'@)
   || VAR_DEL.delete('__sqlzkp');
      __sqlzkp:=exec('FindAndGet','#table',ZK_RP,_refzkrp,,"$P",'');
      _typ:={? var_pres('typ')=type_of(0) || typ || 0 ?};
      _mg:={? var_pres('__buf_mg')=type_of(null()) || __buf_mg || null() ?};
      BEER.RODZR:='B';
      typ:=3;
      REZ.cntx_psh();
      REZ.blank();
      REZ.M:=exec('FindAndGet','#table',ZK_P,__sqlzkp,,"M",null());
      REZ.MG:=__buf_mg:=exec('FindAndGet','#table',ZK_P,__sqlzkp,,"RMAG",null());
      REZ.RODZ:='B';
      REZ.RP_REZ:='N';
      REZ.TYP:='Z';
      REZ.JM:=REZ.M().J;
      _atrmjs:=ATR.MJS;
      ATR.MJS:='REZ';
      exec('ustazprz','zamsiw_poz',REZ.M,REZ.JM);
      REZ.win_edit('REA');
      _oki:=-1;
      {? _wgpar
      || exec('sc_aktyw','magazyn_stan',REZ.MG,REZ.M);
         _stskind:='NOZ';
         exec('sc_tymczas','magazyn_stan',REZ.MG,REZ.M,'T',,_stskind,2,,,,_iddst);
         __sc.clear();
         {? __sc.first()
         || _oki:=-2;
            {!
            |? exec('sc_tmp_info','magazyn_stan');
               {? DISP.SD>=_ildo
               || BEER.DOSTAWA:=__sc.D;
                  REZ.SC:=__sc.SRDK;
                  REZ.ILR:=_ildo;
                  _oki:=1
               ?};
               _oki<0 & __sc.next()
            !}
         ?}
      |? _iddst=''
      || _oki:=0
      ?};

      {? _oki<0
      || {? _oki=-2 || FUN.info('Ze wskazanej dostawy nie można zrealizować %1 %2.'@[$_ildo,REZ.M().J().KOD]) ?}
      |? _oki
       | REZ.edit("{? REZ.ILR<=0
                   || FUN.info('Należy podać ilość większą od zera.'@);
                      'ILR'
                   |? REZ.ILR>DISP.SD
                   || FUN.info('Ze wskazanej dostawy maksymalnie można zrealizować %1 %2.'@[$DISP.SD,REZ.M().J().KOD]);
                      REZ.ILR:=DISP.SD;
                      'ILR'
                   |? REZ.ILR>DISP.REZREA
                   || FUN.info('Aktualnie maksymalnie można zrealizować %1 %2.'@[$DISP.REZREA,REZ.M().J().KOD]);
                      REZ.ILR:=DISP.REZREA;
                      'ILR'
                   || ''
                   ?}")
      || do();
         _next:=1;
         _sc:=REZ.SC;
         _ilr:=REZ.ILR;
         _dorozp:=REZ.ILR;
         _blrozp:=0;
         _mg:=REZ.MG;
         _refzkrd:='';
         _byln:=0;
         _byld:=0;
         _fdst:=0;
         _wgmag:=_ildo-DISP.REZREA;
         ZK_RP.cntx_psh();
         ZK_P.cntx_psh();
         REZ.cntx_psh();
         ZK_RP.clear();
         {? ZK_RP.seek(_refzkrp)
         ||
::          najpierw sprawdzenie czy aby już nie ma danej dostawy
            REZ.index('ZK_P');
            REZ.prefix(ZK_RP.P,'B');
            {? REZ.first()
            || {!
               |? {? REZ.SC=_sc
                  || _fdst:=1;
                     _next:=0;
                     REZ.ILR+=_ilr;
                     {? REZ.put(1)
                     || ZK_RP.cntx_psh();
                        ZK_RP.index('REZ');
                        ZK_RP.prefix(REZ.ref());
                        {? ZK_RP.first()
                        || ZK_RP.ILR+=_ilr;
                           ZK_RP.put(1);
                           _refzkrd:=$ZK_RP.ref()
                        ?};
                        ZK_RP.cntx_pop()
                     ?};
                     _dorozp:=0;
                     {? _refzkrp<>_refzkrd
                     || REZ.cntx_psh();
                        ZK_RP.cntx_psh();
                        ZK_RP.prefix();
                        {? ZK_RP.seek(_refzkrp)
                        || {? {? ~_wgpar
                              || ZK_RP.ILR-=_ilr;
                                 ZK_RP.put(1)
                              || 1
                              ?}
                           || REZ.prefix();
                              {? REZ.seek(ZK_RP.REZ)
                              || REZ.ILR-=_ilr;
                                 {? REZ.ILR=0
                                 || _fdst:=2;
                                    ZK_RP.del();
                                    REZ.del()
                                 || REZ.put(1)
                                 ?}
                              ?}
                           ?}
                        ?};
                        ZK_RP.cntx_pop();
                        REZ.cntx_pop()
                     ?}
                  ?};
                  _next & REZ.next()
               !}
            ?};
::          najpierw część ze zgodnym magazynem
            {? _dorozp
            || REZ.index('ZK_P');
               REZ.prefix(ZK_RP.P,'B');
               {? REZ.first()
               || {!
                  |? {? REZ.SC='' & REZ.MG=_mg & _dorozp>0
                     || _next:=0;
                        {? REZ.ILR>_dorozp
                        || _byln:=1;
                           REZ.ILR-=_dorozp;
                           exec('aktzil2','zamsiw_poz');
                           {? REZ.put(1)
                           || _byln:=1;
                              {? ~_wgpar
                              || ZK_RP.ILR-=_dorozp;
                                 ZK_RP.put(1)
                              ?}
                           ?};
                           REZ.SC:=_sc;
                           REZ.ILR:=_dorozp;
                           REZ.ROZPDOST:=1;
                           exec('aktzil2','zamsiw_poz');
                           {? REZ.add(1)
                           || ZK_RP.prefix();
                              ZK_RP.DOST:=1;
                              ZK_RP.ILR:=REZ.ILR;
                              ZK_RP.REZ:=REZ.ref();
                              ZK_RP.SC:=REZ.SC;
                              ZK_RP.MG:=ZK_RP.REZ().MG;
                              {? ZK_RP.add(1)
                              || _byld:=1;
                                 _refzkrd:=$ZK_RP.ref()
                              ?}
                           ?};
                           _dorozp:=0
                        |? REZ.ILR<=_dorozp
                        || _blrozp+=_dorozp-REZ.ILR;
                           REZ.SC:=_sc;
                           REZ.ILR:=_dorozp;
                           REZ.ROZPDOST:=1;
                           exec('aktzil2','zamsiw_poz');
                           _dorozp-=REZ.ILR;
                           {? REZ.put(1)
                           || _change:=0;
                              ZK_RP.cntx_psh();
                              ZK_RP.index('REZ');
                              ZK_RP.prefix(REZ.ref());
                              {? ZK_RP.first()
                              || ZK_RP.ILR:=ZK_RP.REZ().ILR;
                                 ZK_RP.DOST:=1;
                                 ZK_RP.SC:=REZ.SC;
                                 ZK_RP.put(1);
                                 _byld:=1;
                                 _change:=1;
                                 _refzkrd:=$ZK_RP.ref();
                                 {? _refzkrd=_refzkrp
                                 || ZK_RP.index('S1');
                                    ZK_RP.prefix(REZ.ZK_P);
                                    {? ZK_RP.first()
                                    || {!
                                       |? {? $ZK_RP.ref()<>_refzkrd & ZK_RP.REZ<>null()
                                          || _refzkrp:=$ZK_RP.ref();
                                             REZ.cntx_psh();
                                             REZ.prefix();
                                             {? REZ.seek(ZK_RP.REZ)
                                             || REZ.ROZPDOST:=1;
                                                REZ.put(1)
                                             ?};
                                             REZ.cntx_pop();
                                             0
                                          || ZK_RP.next()
                                          ?}
                                       !}
                                    ?}
                                 ?}
                              ?};
                              ZK_RP.cntx_pop();
                              {? ~_change
                              || {? ZK_RP.MG=REZ.MG
                                 || ZK_RP.ILR:=REZ.ILR;
                                    ZK_RP.DOST:=1;
                                    ZK_RP.SC:=REZ.SC;
                                    ZK_RP.put(1);
                                    _byld:=1;
                                    _refzkrd:=_refzkrp
                                 || ZK_RP.ILR-=REZ.ILR;
                                    ZK_RP.put(1);
                                    ZK_RP.prefix();
                                    ZK_RP.DOST:=1;
                                    ZK_RP.ILR:=REZ.ILR;
                                    ZK_RP.REZ:=REZ.ref();
                                    ZK_RP.SC:=REZ.SC;
                                    ZK_RP.MG:=ZK_RP.REZ().MG;
                                    {? ZK_RP.add(1)
                                    || _byld:=1;
                                       _refzkrd:=$ZK_RP.ref()
                                    ?}
                                 ?}
                              ?}
                           ?}
                        ?}
                     ?};
                     _next & REZ.next()
                  !}
               ?};
::             teraz nie patrząc na magazyn
               {? (_dorozp>0 | _blrozp>0) & REZ.first()
               || _next:=1;
                  {!
                  |? {? REZ.SC='' & _dorozp>0
                     || {? REZ.ILR>_dorozp
                        || _rez:=REZ.ILR;
                           REZ.ILR-=_dorozp;
                           exec('aktzil2','zamsiw_poz');
                           {? REZ.put(1)
                           || {? ~_wgpar
                              || ZK_RP.ILR-=_dorozp;
                                 ZK_RP.put(1)
                              ?}
                           ?};
                           {? ~_byld
                           || REZ.SC:=_sc;
                              REZ.ILR:=_dorozp;
                              REZ.MG:=_mg;
                              REZ.ROZPDOST:=1;
                              exec('aktzil2','zamsiw_poz');
                              {? REZ.add(1)
                              || ZK_RP.prefix();
                                 ZK_RP.MG:=_mg;
                                 ZK_RP.DOST:=1;
                                 ZK_RP.SC:=REZ.SC;
                                 ZK_RP.ILR:=REZ.ILR;
                                 ZK_RP.REZ:=REZ.ref();
                                 ZK_RP.MG:=ZK_RP.REZ().MG;
                                 {? ZK_RP.add(1)
                                 || _byld:=1;
                                    _refzkrd:=$ZK_RP.ref()
                                 ?}
                              ?}
                           ?};
                           _dorozp:=0
                        |? REZ.ILR<=_dorozp
                        || {? ~_byld
                           || _ile:=REZ.ILR;
                              REZ.SC:=_sc;
                              REZ.ILR:=_dorozp;
                              REZ.MG:=_mg;
                              exec('aktzil2','zamsiw_poz');
                              {? REZ.put(1)
                              || {? REZ.ILR=_dorozp
                                 || ZK_RP.MG:=_mg;
                                    ZK_RP.DOST:=1;
                                    ZK_RP.SC:=REZ.SC;
                                    {? ZK_RP.put(1)
                                    || _byld:=1;
                                       _refzkrd:=$ZK_RP.ref()
                                    ?}
                                 || ZK_RP.prefix();
                                    ZK_RP.MG:=_mg;
                                    ZK_RP.DOST:=1;
                                    ZK_RP.SC:=REZ.SC;
                                    ZK_RP.ILR:=REZ.ILR;
                                    ZK_RP.REZ:=REZ.ref();
                                    {? ZK_RP.add(1)
                                    || _byld:=1;
                                       _refzkrd:=$ZK_RP.ref()
                                    ?}
                                 ?}
                              ?};
                              _dorozp-=_ile
                           || _dorozp-=REZ.ILR;
                              _del:=1
                           ?}
                        ?};
                        _next:=_dorozp>0
                     |? REZ.SC='' & _blrozp>0
                     || {? REZ.ILR>_blrozp
                        || _rez:=REZ.ILR;
                           REZ.ILR-=_blrozp;
                           exec('aktzil2','zamsiw_poz');
                           {? REZ.put(1)
                           || ZK_RP.cntx_psh();
                              ZK_RP.index('REZ');
                              ZK_RP.prefix(REZ.ref());
                              {? ZK_RP.first()
                              || ZK_RP.ILR:=ZK_RP.REZ().ILR;
                                 ZK_RP.DOST:=1;
                                 ZK_RP.put(1)
                              ?};
                              ZK_RP.cntx_pop()
                           ?};
                           _blrozp:=0
                        |? REZ.ILR<=_blrozp
                        || _rez:=REZ.ILR;
                           REZ.ILR:=0;
                           exec('aktzil2','zamsiw_poz');
                           {? REZ.put(1)
                           || ZK_RP.cntx_psh();
                              ZK_RP.index('REZ');
                              ZK_RP.prefix(REZ.ref());
                              {? ZK_RP.first()
                              || ZK_RP.ILR:=ZK_RP.REZ().ILR;
                                 ZK_RP.DOST:=1;
                                 ZK_RP.put(1)
                              ?};
                              ZK_RP.cntx_pop()
                           ?};
                           _blrozp-=_rez
                        ?};
                        _next:=_blrozp>0
                     ?};
                     _next & REZ.next()
                  !}
               ?}
            ?}
         ?};
         ZK_RP.cntx_pop();
         ZK_P.cntx_pop();
         REZ.cntx_pop();
         {? ~_next
         || _ilmg-=_ilr;
            _ref:=__zknrea.ref();
            __zknrea.cntx_psh();
            __zknrea.prefix();
            {? __zknrea.seek(_ref)
            || {? _fdst
               || {? _fdst=2
                  || __zknrea.REF:=_refzkrd;
                     __zknrea.MAG:=exec('FindAndGet','#table',ZK_RP,__zknrea.REF,,"MG().SYM",__zknrea.MAG);
                     __zknrea.put(1)
                  ?};
                  __zknrea.prefix(__zknrea.ref());
                  {? __zknrea.first()
                  || {!
                     |? {? __zknrea.REF=_refzkrd
                        || __zknrea.ILZ+=_ilr;
                           __zknrea.ILP+=_ilr;
                           __zknrea.REZ+=_ilr;
                           __zknrea.REZ+=_ilr;
                           exec('rek_rez1','rezerwacje');
                           __zknrea.put(1)
                        |? __zknrea.REF=_refzkrp
                        || {? _fdst=1
                           || __zknrea.ILZ-=_ilr;
                              __zknrea.ILP-=_ilr;
                              __zknrea.REZ-=_ilr;
                              __zknrea.REZ-=_ilr;
                              exec('rek_rez1','rezerwacje');
                              __zknrea.put(1)
                           || __zknrea.del()
                           ?}
                        ?};
                        __zknrea.next()
                     !}
                  ?}
               || __zknrea.NAD:=1;
                  __zknrea.DOST:=2;
                  __zknrea.MAG:=exec('FindAndGet','#table',ZK_RP,__zknrea.REF,,"MG().SYM",__zknrea.MAG);
                  {? __zknrea.put(1)
                  || __zknrea.prefix();
                     __zknrea.TREE:=_ref;
                     __zknrea.REF:=_refzkrd;
                     __zknrea.NAD:=-1;
                     __zknrea.DOST:=1;
                     __zknrea.ILZ:=_ilr;
                     __zknrea.ILP:=_ilr;
                     __zknrea.REZ:=_ilr;
                     __zknrea.REA:=_ilr;
                     __zknrea.WDST:=1;
                     exec('rek_rez1','rezerwacje');
                     __zknrea.LAB:=DISP.DOST;
                     __zknrea.MAG:=exec('FindAndGet','#table',ZK_RP,__zknrea.REF,,"MG().SYM",__zknrea.MAG);
                     __zknrea.add(1);
                     {? _refzkrp<>_refzkrd | _ilmg=0
                     || {? _refbez=null() & _ilmg<>0
                        || ZK_RP.prefix();
                           {? ZK_RP.seek(_refzkrp) & ZK_RP.ILR<>ZK_RP.REZ().ILR & ~_wgpar
                           || ZK_RP.ILR:=ZK_RP.REZ().ILR; ZK_RP.put(1)
                           ?};
                            __zknrea.prefix();
                           __zknrea.TREE:=_ref;
                           __zknrea.REF:=_refzkrp;
                           __zknrea.NAD:=0;
                           __zknrea.DOST:=0;
                           __zknrea.ILZ:=_ilmg;
                           __zknrea.ILP:=_ilmg;
                           __zknrea.REZ:=_ilmg;
                           __zknrea.REA:={? ~_wgpar || _ilmg || ZK_RP.ILR ?};
                           __zknrea.LAB:='wg magazynów';
                           __zknrea.MAG:=exec('FindAndGet','#table',ZK_RP,__zknrea.REF,,"MG().SYM",__zknrea.MAG);
                           __zknrea.add(1)
                        |? _refbez<>null()
                        || __zknrea.prefix();
                           {? __zknrea.seek(_refbez)
                           || {? _ilmg=0
                              || __zknrea.del()
                              || ZK_RP.prefix();
                                 {? __zknrea.REF<>'' & ZK_RP.seek(__zknrea.REF) & ZK_RP.ILR<>ZK_RP.REZ().ILR & ~_wgpar
                                 || ZK_RP.ILR:=ZK_RP.REZ().ILR; ZK_RP.put(1)
                                 ?};
                                 __zknrea.ILP:=_ilmg;
                                 __zknrea.REZ:=_ilmg;
                                 __zknrea.REA:={? ~_wgpar || _ilmg || ZK_RP.ILR ?};
                                 __zknrea.LAB:='wg magazynów';
                                 __zknrea.MAG:=exec('FindAndGet','#table',ZK_RP,__zknrea.REF,,"MG().SYM",__zknrea.MAG);
                                 __zknrea.put(1)
                              ?}
                           || undo()
                           ?}
                        ?}
                     ?}
                  ?}
               ?};
               __zknrea.cntx_psh();
               __zknrea.prefix();
               {? __zknrea.last() || {! |? exec('zrea_kol','zamsiw_rea'); __zknrea.prev() !} ?};
               __zknrea.cntx_pop();
               _res:=1
            || _res:=0;
               undo()
            ?};
            exec('pobstnmg','zamsiw_rea',,1);
            __zknrea.cntx_pop();
            __zknrea.get()
         ?};
         end()
      ?};
      REZ.cntx_pop();
      typ:=_typ;
      __buf_mg:=_mg;
      ATR.MJS:=_atrmjs;
      VAR_DEL.delete('__sqlzkp')
   ?}
?};
_res


\zero_wdst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: po wyzerowaniu wyboru dostawy dla wybranej gałęzi
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
do();
_akt:=__zknrea.ref();
_ref:=__zknrea.TREE;
__zknrea.seek(_ref);

REZ.cntx_psh();
ZK_P.cntx_psh();
ZK_RP.cntx_psh();
__zknrea.cntx_psh();
__zknrea.prefix();
__zknrea.seek(_akt);
__zknrea.get();
_ilb:=__zknrea.REA;
_rea:=__zknrea.REA;
_buf:=_rea;

_zkr:=__zknrea.REF;
_zkp:=null();
_onlydst:=-1;

__zknrea.clear();
__zknrea.prefix(_ref);
{? __zknrea.first() || {! |? _onlydst:=__zknrea.DOST<>0; _onlydst & __zknrea.next() !} ?};
__zknrea.first();

:: czy usuwać podrzędne gałęzie
_deltree:=__zknrea.size();
_rez:=null();
_mag:=null();

ZK_RP.prefix();
{? ZK_RP.seek(_zkr)
|| _rez:=ZK_RP.REZ;
   _mag:=ZK_RP.REZ().MG;
   _zkp:=ZK_RP.P;
   {? _deltree=1 | _onlydst | ZK_RP.REZ().ROZPDOST
   || ZK_RP.ILR-=_rea;
      ZK_RP.SC:='';
      ZK_RP.DOST:=0;
      ZK_RP.put(1)
   || ZK_RP.del()
   ?}
|| undo()
?};

:: aktualizacja rezerwacji
{? _zkp<>null()
|| REZ.index('ZK_P');
   REZ.prefix(_zkp,'B');
   {? REZ.first()
   || {!
      |? {? REZ.ref()=_rez
         || {? _deltree=1 | _onlydst | ZK_RP.REZ().ROZPDOST
            || REZ.SC:='';
               REZ.put(1);
               _rea:=0;
               REZ.next();
               0
            || ZK_RP.index('REZ');
               ZK_RP.prefix(_rez);
               {? ZK_RP.size()>0
               || REZ.SC:='';
                  REZ.put(1);
                  _rea:=0;
                  REZ.next();
                  0
               || REZ.del();
                  0
               ?}
            ?}
         || REZ.next()
         ?}
      !}
   ?};
   {? _rea>0 & REZ.first()
   || {!
      |? {? REZ.SC=''
         || {? REZ.MG=_mag
            || REZ.ILR+=_rea;
               REZ.put(1);
               _rea:=0
            || exec('obl_stan','magazyn_stan',REZ.M,1,REZ.MG);
               _sd:=BEER.SD;
               {? _sd>=_rea
               || REZ.ILR+=_rea;
                  REZ.put(1);
                  _rea:=0
               |? _sd>0
               || REZ.ILR+=_sd;
                  REZ.put(1);
                  _rea-=_sd
               ?}
            ?};
            REZ.next()
         ?};
         _rea>0 & REZ.next()
      !}
   ?}
|| undo()
?};
{? _deltree<=2
|| {? ~_onlydst
   || __zknrea.clear();
      __zknrea.prefix(_ref);
      {? __zknrea.first() || {! |? __zknrea.del() !} ?};
      __zknrea.clear()
   || __zknrea.clear();
      {? __zknrea.seek(_akt)
      || __zknrea.DOST:=0;
         __zknrea.LAB:='wg magazynów';
         __zknrea.ILP:=_ilb;
         __zknrea.REA:=0;
         __zknrea.MAG:=exec('FindAndGet','#table',ZK_RP,__zknrea.REF,,"MG().SYM",__zknrea.MAG);
         __zknrea.put(1)
      ?}
   ?}
|| __zknrea.clear();
   {? __zknrea.seek(_akt) || __zknrea.del() ?}
?};
exec('pobstnmg','zamsiw_rea',,1);
{? _zkp<>null() || exec('upstnmat','zamsiw_rea',_zkp,2,-_buf) ?};

REZ.cntx_pop();
ZK_P.cntx_pop();
ZK_RP.cntx_pop();
__zknrea.cntx_pop();
end();
{? _deltree<=2 & (__zknrea.prefix(); __zknrea.seek(_ref)) || __zknrea.DOST:=0; __zknrea.NAD:=0; __zknrea.put(1) ?};
_res


\czy_wdst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: sprawdzenie czy dostępna jest akcja Wybór dostaw
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=1;

{? ~__zknrea.TREE | __zknrea.DOST=1 | __zknrea.PLUS>0 | __zknrea.REF=''
|| _res:=0
|| ZK_P.cntx_psh();
   ZK_P.prefix();
   _res:=exec('FindAndGet','#table',ZK_RP,__zknrea.REF,,
          "~((P().RMAG<>null() & (1+P().RMAG().TYP)='D' & P().DOST) | P().DOST)",1);
   ZK_P.cntx_pop()
?};
_res


\rozpDYSP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: rozpiska wg dyspozycji w magazynie
::   WE: _a - ref DK
::       _b - ref TR_NZL
::       _c - POZ_REF - uidref
::   WY: brak
::----------------------------------------------------------------------------------------------------------------------
TR_NZL.cntx_psh();
TR_ZL.cntx_psh();
TR_ZLM.cntx_psh();
DK.cntx_psh();
DK.prefix();
{? DK.seek(_a)
|| _wym:=DK.N().MAG().SL='T';
   _mag:=DK.N().MAG;
   _iledowym:=DK.IL;
   _lokdom:={? _wym || exec('FindAndGet','#table',TR_NZL,_b,,"EANL",null()) || null() ?};
   TR_ZLM.index('POZ_REF');
   TR_ZLM.prefix(_b,_c);
   {? TR_ZLM.first()
   ||
      {!
      |? {? TR_ZLM.LOK<>null()
         || _iledowym-={? _wym || TR_ZLM.IL || 0 ?};
            {? ~exec('add2dk_l','magdok_wspolne',DK.ref(),null(),TR_ZLM.LOK,null()
                 ,TR_ZLM.TW,date(0,0,0),TR_ZLM.IL,_mag,DK.M,,,TR_ZLM.PAL)
            || undo()
            ?}
         || {? _wym || undo() ?}
         ?};
         TR_ZLM.next()
      !}
   ?};
   {? _lokdom<>null() & _iledowym>0
   || {? ~exec('add2dk_l','magdok_wspolne',DK.ref(),null,_lokdom,null()
           ,date(0,0,0),date(0,0,0),_iledowym,_mag,DK.M,,,null())
      || undo()
      ?}
   ?}
?};
TR_NZL.cntx_pop();
TR_ZL.cntx_pop();
TR_ZLM.cntx_pop();
DK.cntx_pop();
~~


\time_rea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: podpowiada czas realizacji
::   WE: _a - data
::   WY: czas
::----------------------------------------------------------------------------------------------------------------------
_res:=time(0,0,0);
ZK_RP.cntx_psh;
{? ZK_RP.first
|| {!
   |? _time:=exec('spr_dttm','magazyn_inw',ZK_RP.P().MG,_a,1);
      {? (*_time)>(*time(23,59,0)) || _time:=time(0,0,0) ?};
      {? _time>_res || _res:=_time ?};
      ZK_RP.next
   !}
?};
ZK_RP.cntx_pop;
_res


\pr_cos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed redakcją pola ZAKR.COS
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
USERS_UP.cntx_psh();
USERS_UP.index('MAG');
USERS_UP.prefix(OPERATOR.USER,'MG');
{? USERS_UP.first() || {! |? _res:=USERS_UP.MG().PAL='N' & USERS_UP.MG().COS='T'; ~_res & USERS_UP.next() !} ?};
USERS_UP.cntx_pop();
_res


\po_cos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Po redakcji pola ZAKR.COS
::----------------------------------------------------------------------------------------------------------------------
_win_red:='REAZKN';
{? ZAKR.COS='T'
|| {? ZAKR.TYPYDOK<>'' & exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TYPYDOK,ZAKR.TYPYDOK,"@.TYPYDOK.Z",,,'')='T'
   || ZAKR.TYPYDOK:=''
   ?};
   ZAKR.efld_opt(_win_red,'enable=1',,'MD');
   ZAKR.efld_opt(_win_red,'mark=1',,'MD');
   {? ZAKR.MD=null() || ZAKR.MD:=exec('mg_cos','zamsiw_rea') ?};
   {? ZAKR.TYPYDOK='' || ZAKR.TYPYDOK:=exec('typ_cos','zamsiw_rea') ?}
|| ZAKR.MD:=null();
   {? ZAKR.TYPYDOK<>'' & exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TYPYDOK,ZAKR.TYPYDOK,"@.TYPYDOK.Z",,,'')='N'
   || ZAKR.TYPYDOK:=''
   ?};
   ZAKR.efld_opt(_win_red,'enable=0',,'MD');
   ZAKR.efld_opt(_win_red,'mark=0',,'MD')
?};
1


\mg_cos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Podpowiada magazyn konsygnacyjny o ile jest jeden uprawniony
::   WY: null lub ref maagzynu jak jest jeden
::----------------------------------------------------------------------------------------------------------------------
_res:=null();
_kh:=ZK_N.KH;
_one:=0;
USERS_UP.cntx_psh();
USERS_UP.index('MAG');
USERS_UP.prefix(OPERATOR.USER,'MG');
{? USERS_UP.first() & USERS_UP.find_tab('first','MG','PAL','=','N','MG','COS','=','T','MG','DLAKH','=',_kh)
|| {!
   |? _res:=USERS_UP.MG; _one+=1;
      _one<2 & USERS_UP.find_tab('next','MG','PAL','=','N','MG','COS','=','T','MG','DLAKH','=',_kh)
   !};
   {? _one>1 || _res:=null() ?}
|? USERS_UP.first() & USERS_UP.find_tab('first','MG','PAL','=','N','MG','COS','=','T','MG','DLAKH','=',null())
|| {!
   |? _res:=USERS_UP.MG; _one+=1;
      _one<2 & USERS_UP.find_tab('next','MG','PAL','=','N','MG','COS','=','T','MG','DLAKH','=',null())
   !};
   {? _one>1 || _res:=null() ?}
?};
USERS_UP.cntx_pop();
_res


\typ_cos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Podpowiada typdokumentu o ile jest jeden uprawniony
::   WY: '' lub symbol typu dokumentu jak jest jeden
::----------------------------------------------------------------------------------------------------------------------
_res:='';
TYPYDOK.cntx_psh();
TYPYDOK.index('KRZ');
TYPYDOK.prefix('N','N','N');
{? TYPYDOK.first()
|| _one:=0;
   {!
   |? {? TYPYDOK.TD<>'' & TYPYDOK.T<>'INW-' & TYPYDOK.T<>'PRC-' & TYPYDOK.DN<>'D' || _res:=TYPYDOK.T; _one+=1 ?};
      _one<2 & TYPYDOK.next()
   !};
   {? _one>1 || _res:='' ?}
?};
TYPYDOK.cntx_pop();
_res


\ctrlcinw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: sprawdza czy sa pozycje w tabeli i czy nie ma dla nich inwentaryzacji
::   WE: [_a] - tabela danych do kontroli domyslnie dany rekord
::   WY: 1-jest ok 0-nie jest dobrze
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? _>=1 || {? type_of(_a)<>118 || _a:=0 ?} || _a:=0 ?};

EANN.cntx_psh();
{? type_of(_a)=118
|| _a.clear;
   {? _a.first()
   || {!
      |? {? EANN.seek(_a.REF,EANN.name()) & EANN.STAN='Z' & EANN.TYP='Z'
           & exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT)
         || EANP.index('EANN');
            EANP.prefix(EANN.ref());
            {? EANP.first()
            || {!
               |? {? EANP.ILS>0 & EANP.LOKZ<>null()
                  || _wyn:=exec('sprd_inz','magazyn_inw',ZAKR.DR,EANP.LOKZ().MG,ZAKR.TR);
                     {? _wyn || _wyn:=exec('sprd_ipz','magazyn_inw',EANP.M,ZAKR.DR,EANP.LOKZ().MG,ZAKR.TR) ?}
                  ?};
                  _wyn & EANP.next()
               !}
            ?}
         || _a.next()
         ?}
      !}
   ?}
|? EANN.STAN='Z' & EANN.TYP='Z' & exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT)
|| EANP.index('EANN');
   EANP.prefix(EANN.ref());
   {? EANP.first()
   || {!
      |? {? EANP.ILS>0 & EANP.LOKZ<>null()
         || _wyn:=exec('sprd_inz','magazyn_inw',ZAKR.DR,EANP.LOKZ().MG,ZAKR.TR);
            {? _wyn || _wyn:=exec('sprd_ipz','magazyn_inw',EANP.M,ZAKR.DR,EANP.LOKZ().MG,ZAKR.TR) ?}
         ?};
         _wyn & EANP.next()
      !}
   ?}
?};
EANN.cntx_pop();
_wyn


\rea_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Wświetal informacje o pocentowej realizacji wg magzynów
::----------------------------------------------------------------------------------------------------------------------
exec('oblinfrr','zamsiw_rea');
__inforr.first();
__inforr.select();
~~

\zkp_cen_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PD] [23.25]
:: OPIS: Aktualizacja cen pozycji zamówienia
::----------------------------------------------------------------------------------------------------------------------
ZK_P.cntx_psh();
ZK_P.index('NAG');
ZK_P.prefix(ZK_N.ref());
_ask:=0;
{? ZK_P.first()
||
   {!|?
      _cwal:=ZK_P.CWAL;
      _cpr:=ZK_P.CENA;
      ZK_P.CENA:=0;
      ZK_P.CWAL:=0;
      exec('f3_ceny','zamsiw_poz',2);
      exec('bezpkwce','zamsiw_poz',1);
      {? (_cwal<>ZK_P.CWAL & ZK_P.CWAL<>0) | (_cpr<>ZK_P.CENA & ZK_P.CENA<>0) || _ask:=1 ?};
      _ask=0 & ZK_P.next()
   !}
?};
{? _ask
|| {? FUN.ask('Ceny pozycji różnią się od tych z cenników.\nZaktualizować ceny?'@)
   || exec('ini_kom','#message','Komunikaty aktywacyjne');
      {? ZK_P.first()
      ||
         {!|?
            _cwal:=ZK_P.CWAL;
            _cpr:=ZK_P.CENA;
            ZK_P.CENA:=0;
            ZK_P.CWAL:=0;
            exec('f3_ceny','zamsiw_poz',2);
            exec('bezpkwce','zamsiw_poz',1);
            {? (_cwal<>ZK_P.CWAL & ZK_P.CWAL<>0) | (_cpr<>ZK_P.CENA & ZK_P.CENA<>0)
            || {? ZK_P.put()
               || _msg:='Dla pozycji nr %1 zmieniono cenę sprzedaży z %2 na %3.'@[$ZK_P.POZ, $_cpr , $ZK_P.CENA];
                  exec('add_kom','#message',_msg,2)?}
            ?};
            ZK_P.next()
         !};
         exec('war_zam','zamsiw_nag',ZK_P.N)
      ?};
      exec('end_kom','#message')
   ||
      {? ZK_P.first()
      ||
         {!|?
            ZK_P.cntx_psh();
            _cwal:=ZK_P.CWAL;
            _cpr:=ZK_P.CENA;
            ZK_P.CENA:=0;
            ZK_P.CWAL:=0;
            exec('f3_ceny','zamsiw_poz',2);
            exec('bezpkwce','zamsiw_poz',1);
            {? (_cwal<>ZK_P.CWAL & ZK_P.CWAL<>0) | (_cpr<>ZK_P.CENA & ZK_P.CENA<>0)
            || ZK_P.cntx_pop();
               ZK_P.TAR_H:=null();
               ZK_P.TAR_TMS:=0;
               ZK_P.put()
            || ZK_P.cntx_pop()
            ?};
            ZK_P.next()
         !};
         exec('war_zam','zamsiw_nag',ZK_P.N)
      ?};
      exec('end_kom','#message')
   ?}
?};
ZK_P.cntx_pop();
~~


\after_real_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Po realizacji limitów na e-kiosku
::----------------------------------------------------------------------------------------------------------------------
ZK_RP.index('NAGA');
ZK_RP.prefix(__refrea,null);
{? ZK_RP.first()
|| {! |? ZK_RP.del() !};
   exec('anul_bez','zamsiw_rea',,1)
?};
exec('akt_rezy','rezerwacje');
POM.TAB:='ZK_N';
POM.TYPDOK:=BEER.TYPYZAM().KOD;
exec('akt_stap','zamsiw_wspolne',BEER.ZK_N,BEER.TYP);
:: aktualizujemy stany na danych materialach
{? var_pres('__mat_mag')>100 || exec('wgmatmag','magazyn_stan') ?};

::   exec('obl_warz','zkd',BEER.ZK_N,,1);
{? var_pres('__zam')>100 || exec('odt_zk_tymc','zamsiw_wspolne') ?};
exec('open','open_tab',ST.ODDZ_KOD,2-$ST.AR);
exec('done_blk','zamsiw_nag');
{? ZK_N.LIM='T' || exec('zl_unlock','zl_common',#ZK_N.ZL,'L') ?};
VAR_DEL.delete('__refrea');
VAR_DEL.delete('__zknrea','__filtrz','__matakt','__inforr','__stnmat','__winzkr','__kolmag','__winflt');
VAR_DEL.delete('__palkpl','__pozkpl','__zrekpl','__palki1','__palki2','__zkrwi1','__zkrwi2','__id3btn');
VAR_DEL.delete('__dostpal','__reazld','__id4btn','__lstlim','__ilplus','__zknzl','__grpzl');
BUFMG.f_clear();
MG.f_clear();
''


\korZLZAM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Koryguje ilości na rezerwacji
::   WE: _a - wskazanie na ZK_P
::       _b - ilość realizowana
::----------------------------------------------------------------------------------------------------------------------
_zk_p:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_zrea:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_akc:=_zrea>0;
{? _zk_p<>null() & _zrea<>0
|| ZK_P.cntx_psh();
   REZ.cntx_psh();
   ZLZAM.cntx_psh();
   ZK_P.prefix();
   {? ZK_P.seek(_zk_p)
   || _ilzkp:=ZK_P.ILP;
      REZ.index('ZK_P');
      REZ.prefix(ZK_P.ref());
      {? REZ.first()
      || {!
         |? {? REZ.ZLZAM<>null() & REZ.RODZ='W'
            || _ilpoz:=REZ.ZLZAM().ILPOZ;
               _ilrez:=REZ.ILR;
               {? {? _akc || _ilzkp<_ilpoz & _ilrez>_ilzkp || _ilzkp>=_ilpoz & _ilrez<_ilzkp ?}
               || _minus:={? _akc || _ilpoz-_ilzkp-_zrea || _ilpoz-_ilzkp ?};
                  REZ.ILR-=(_zrea+_minus);
                  {? REZ.put(1)
                  || ZK_P.ILRW-=(_zrea+_minus);
                     ZK_P.put(1)
                  ?}
               ?}
            ?};
            REZ.next()
         !}
      ?}
   ?};
   ZK_P.cntx_pop();
   REZ.cntx_pop();
   ZLZAM.cntx_pop()
?};
~~


\wyd2lim_grop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [TS] [23.25]
:: OPIS: Wydanie do limitów dla grupy operacji
::   WE: _a - GROP.ref() - grupa operacji
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
:: _grop:={? var_pres('_a')=type_of(null()) || _a || null() ?};

:: _params:=exec('mp_run_a','#b__box');
:: _params.ACT_UID:='LMG_ZAM_IPRZ';
:: _params.UIDREF:=exec('FindAndGet','#table',GROP,_grop,,"GROP.uidref()");
:: _params.AKCJA:='Realizuj';
:: _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
:: exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'GROP',_grop);

:: exec('mp_run','#b__box',_params);
:: ~~

VAR_DEL.delete('__reagozk');
__reagozk:=tab_tmp(2,'GROP','STRING[16]','','ZAM_REA','STRING[35]','');
_grop:={? var_pres('_a')=type_of(null())
       || _a
       || _tab:=GROP.sel_aget();
          GROP.cntx_psh();
          _buf:={? _tab.first() & (GROP.prefix();GROP.seek(_tab.REF,))
                || GROP.ref()
                || null()
                ?};
          GROP.cntx_pop();
          _buf
       ?};

{? _grop<>null()
|| _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='LMG_ZAM_IPRZ';
   _params.UIDREF:=exec('FindAndGet','#table',GROP,_grop,,"GROP.uidref()");
   _params.AKCJA:='Realizuj';
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'GROP',_grop);

   exec('mp_run','#b__box',_params);
   obj_del(_params);
   GROP.cntx_psh();
   ND.cntx_psh();
   __reagozk.clear();
   {? __reagozk.first()
   || {!
      |? _Grop:=exec('FindAndGet','#table',GROP,__reagozk.GROP,,,null());
         {? _Grop<>null() & _Grop<>_grop
         || _uidgrop:=
            _params:=exec('mp_run_a','#b__box');
            _params.ACT_UID:='LMG_ZAM_IPRZ';
            _params.UIDREF:=exec('FindAndGet','#table',GROP,_grop,,"GROP.uidref()");
            _params.AKCJA:='Realizuj';
            _params.CONTEXT:=obj_new('ZAM_REA','GROP','ORD');
            _params.CONTEXT.ZAM_REA:=__reagozk.ZAM_REA;
            _params.CONTEXT.GROP:=_Grop;
            _params.CONTEXT.ORD:=2;
            _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
            exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'GROP',_Grop);

            exec('mp_run','#b__box',_params);
            obj_del(_params)
         ?};
         __reagozk.next()
      !}
   ?};
   GROP.cntx_pop();
   ND.cntx_pop()
?};
GROP.sel_adel();
VAR_DEL.delete('__reagozk');
~~


\zknwggrop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: sprawdza czy istnieja zamowienia dla danej grupy operacji
::   WE: _a - Grupa operacji ref
::       _b - tabela z zaznaczonymi nadrzędnymi
::   WY: 1-wiecej niz jedno 0-tylko jedno lub wogole brak 2-jesli przypisano rozne dokumenty do realizacji
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_tr:=ZK_N.TR;
_czym:=0;
_wgtab:=var_pres('__zknzl')=type_of(SYSLOG) & __zknzl.size();
_zazzl:=_b;

ZK_N.cntx_psh();
{? {? _wgtab || (__zknzl.clear(); __zknzl.first()) || 1 ?}
|| {!
   |? _Grop:={? _wgtab || exec('FindAndGet','#table',GROP,__zknzl.GROP,,,null()) || _a ?};

      {? 1 | _nadzl=$_Zlec | (_zazzl.clear(); _zazzl.prefix(_nadzl,); ~_zazzl.first())
      || ZK_N.index('AGROP');
         ZK_N.prefix('A',_Grop)
      || ZK_N.index('NRNZL');
         ZK_N.prefix('T',BEER.ZK_N().T,_nrnzl)
      ?};
      {? ZK_N.first()
      ||
         {!
         |? {? ZK_N.AKC='T' & {? DISP.CTRLMG || ZK_N.STAN*'REA' || ZK_N.STAN<>'ZRE' ?} & ZK_N.DP<=date(ST.AR,ST.AM,0)
            || _wyn+=1;
               {? ~_czym || _czym:=_tr<>ZK_N.TR ?};
::                wypelnienie filtru zamowien
               __filtrz.clear;
               {? ~__filtrz.find_key(ZK_N.SYM,$ZK_N.ref(),)
               || __filtrz.blank();
                  __filtrz.SYM:=ZK_N.SYM;
                  __filtrz.DAT:=ZK_N.DP;
                  __filtrz.TRM:=ZK_N.DT;
                  __filtrz.ZKN:=$ZK_N.ref();
                  __filtrz.PAL:=ZK_N.MG<>null & ZK_N.MG().PAL='T';
                  __filtrz.ZLR:=$ZK_N.ZL;
                  {? BEER.ZK_N=ZK_N.ref() || __filtrz.WYB:=1 ?};
                  __filtrz.add(1)
               ?}
            ?};
            ZK_N.next()
         !}
      ?};
      {? _wgtab || __zknzl.next() || 0 ?}
   !}
?};
ZK_N.cntx_pop();
_wyn:={? _wyn>1 || {? _czym || 2 || 1 ?} || 0 ?};
_wyn


\changeREZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: przepina rezerwacje - kontekst aktualnego ZK_RP
::       [_b] - ilosć do przepięcia
::       [_c] - wskazanie na ZK_RP (ref SQL), z którego przepinamy - domyślnie brak
::----------------------------------------------------------------------------------------------------------------------
_mode:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_z_rp:={? var_pres('_c')=type_of('') || _c || '' ?};

_mat:=ZK_RP.P().M;
_iledst:=0;
_wgil:=var_pres('_b')=type_of(0) & _b>0;
_dorez:={? _wgil
        || _b
        |? _mode=2
        || ZK_RP.ILR
        || __zknrea.ILP
        ?};
{? _mode=2 || _mode:=0 ?};
_zk_rp:=ZK_RP.ref();
_zk_pr:=ZK_RP.P;
_o_rez:=ZK_RP.REZ;
_dorez:={? _mode & ~_wgil || _dorez-ZK_RP.REZ().ILR || _dorez ?};

REZ.cntx_psh();
ZK_RP.cntx_psh();
ZK_RP.index('ZK_P');
ZK_RP.prefix(__refrea);
{? _dorez>0 & ZK_RP.first()
 & ZK_RP.find_tab('first','P','M','=',_mat,'REZ',,'<>',null(),'SC',,'=','','REZ','REA','=','T')
|| {!
   |? ZK_RP.cntx_psh();
      {? _zk_rp<>ZK_RP.ref() & (_z_rp='' | _z_rp=$ZK_RP.ref())
      || _ilerez:=ZK_RP.REZ().ILR;
         _ilerea:=ZK_RP.ILR;
         _dorozp:=_ilerez-_ilerea;
         _r_rez:=ZK_RP.REZ;
         {? _dorozp>0
         || {? _dorez>=_dorozp
            || {? _ilerea=0
               || ZK_RP.REZ:=null();
                  ZK_RP.put(1);
                  ZK_RP.prefix();
                  {? ZK_RP.seek(_zk_rp)
                  || {? ~_mode
                     || ZK_RP.REZ:=_r_rez;
                        {? ZK_RP.put(1)
                        || REZ.prefix();
                           {? REZ.seek(ZK_RP.REZ)
                           || REZ.ZK_P:=_zk_pr;
                              REZ.put(1)
                           ?}
                        ?}
                     || REZ.prefix();
                        {? REZ.seek(ZK_RP.REZ)
                        || REZ.ILR+=_dorez;
                           {? REZ.put(1)
                           || REZ.prefix();
                              {? REZ.seek(_r_rez) || REZ.del() ?}
                           ?}
                        ?}
                     ?}
                  ?}
               || ZK_RP.prefix();
                  _u_rez:={? ZK_RP.seek(_zk_rp) || ZK_RP.REZ || null() ?};
                  REZ.cntx_psh();
                  REZ.prefix();
                  {? REZ.seek(_r_rez)
                  || REZ.ILR:=_ilerea+_dorozp-_dorez;
                     REZ.put(1);
                     {? ~_mode
                     || {? _u_rez<>null()
                        || REZ.prefix();
                           {? REZ.seek(_u_rez)
                           || REZ.ILR+=_dorez;
                              REZ.put(1)
                           ?}
                        || REZ.ZK_P:=_zk_pr;
                           REZ.ILR:=_dorez;
                           {? REZ.add(1)
                           || _r_rez:=REZ.ref();
                              ZK_RP.prefix();
                              {? ZK_RP.seek(_zk_rp)
                              || ZK_RP.REZ:=_r_rez;
                                 ZK_RP.put(1)
                              ?};
                              _dorez:=0
                           ?}
                        ?};
                        _dorez:=0
                     || REZ.prefix();
                        {? REZ.seek(_o_rez)
                        || REZ.ILR+=_dorozp;
                           REZ.put(1)
                        ?}
                     ?}
                  ?};
                  REZ.cntx_pop()
               ?};
               _dorez-=_dorozp
            || ZK_RP.prefix();
               _u_rez:={? ZK_RP.seek(_zk_rp) || ZK_RP.REZ || null() ?};
               REZ.cntx_psh();
               REZ.prefix();
               {? REZ.seek(_r_rez)
               || REZ.ILR-=_dorez;
                  REZ.put(1);
                  {? ~_mode
                  || {? _u_rez<>null()
                     || REZ.prefix();
                        {? REZ.seek(_u_rez)
                        || REZ.ILR+=_dorez;
                           REZ.put(1)
                        ?}
                     || REZ.ZK_P:=_zk_pr;
                        REZ.ILR:=_dorez;
                        {? REZ.add(1)
                        || _r_rez:=REZ.ref();
                           ZK_RP.prefix();
                           {? ZK_RP.seek(_zk_rp)
                           || ZK_RP.REZ:=_r_rez;
                              ZK_RP.put(1)
                           ?}
                        ?}
                     ?};
                     _dorez:=0
                  || REZ.prefix();
                     {? REZ.seek(_o_rez)
                     || REZ.ILR+=_dorez;
                        REZ.put(1)
                     ?};
                     _dorez:=0
                  ?}
               ?};
               REZ.cntx_pop()
            ?}
         ?}
      ?};
      ZK_RP.cntx_pop();
      _dorez>0 & ZK_RP.find_tab('next','P','M','=',_mat,'REZ',,'<>',null(),'SC',,'=','','REZ','REA','=','T')
   !}
?};
REZ.cntx_pop();
ZK_RP.cntx_pop();
~~


\changeDEL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: przepina rezerwacje wstecz - kontekst aktualnego ZK_RP
::----------------------------------------------------------------------------------------------------------------------
{? ZK_RP.REZ<>null() & ZK_RP.REZ().ILR>0
|| _ilr:=ZK_RP.REZ().ILR;
   _mat:=ZK_RP.M;
   _zk_rp:=ZK_RP.ref();
   ZK_RP.ILR:=0;
   ZK_RP.put(1);
   ZK_P.cntx_psh();
   ZK_RP.cntx_psh();
   __zknrea.cntx_psh();
   ZK_RP.index('ZK_P');
   ZK_RP.prefix(__refrea);
   {? _ilr>0 & ZK_RP.first() & ZK_RP.find_tab('first','P','M','=',_mat,'SC',,'=','')
   || {!
      |? {? ZK_RP.ref()<>_zk_rp
         || _ilb:=ZK_RP.REZ().ILR;
            {? ZK_RP.REZ=null() | ZK_RP.P().ILP>ZK_RP.REZ().ILR
            || exec('changeREZ','zamsiw_rea',{? ZK_RP.REZ<>null() || 1 || 2 ?},ZK_RP.P().ILP-ZK_RP.REZ().ILR,$_zk_rp)
            ?};
            ZK_RP.get();
            _ilr-={? ZK_RP.REZ<>null() || ZK_RP.REZ().ILR-_ilb || 0 ?}
         ?};
         _ilr>0 & ZK_RP.find_tab('next','P','M','=',_mat,'SC',,'=','')
      !}
   ?};
   ZK_RP.prefix();
   {? ZK_RP.seek(_zk_rp)
   || {? ZK_RP.REZ=null() & (ZK_P.prefix(); ZK_P.seek(ZK_RP.P))
      || ZK_P.REZ:=0;
         ZK_P.DOR:=0;
         ZK_P.SR:=0;
         ZK_P.ODDT:=date(0,0,0);
         ZK_P.DODT:=date(0,0,0);
         ZK_P.CZYBEZ:='T';
         ZK_P.ILBEZ:=ZK_P.ILP;
         ZK_P.ILRB:=0;
         ZK_P.ILRW:=0;
         ZK_P.ILRA:=0;
         ZK_P.put(1)
      ?}
   ?};
   ZK_P.cntx_pop();
   ZK_RP.cntx_pop();
   __zknrea.cntx_pop()
?};
~~


\ctrlmgpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: sprawdza czy wszystkie wybrane pozycje limitow nie są mix-em magazynów z obsługą i bez palet
::   WY: 1-niestety są 0-nie są
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
__lstlim.clear();
{? __lstlim.first() & __lstlim.find_tab('first','MGPAL',,'=',1)
|| _res:=__lstlim.first() & __lstlim.find_tab('first','MGPAL',,'=',0)
?};
_res


\isEdit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: sprawdza czy pole jest do edycji
::   WE: 0-pole RES, 1-RS2
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_wgjm:={? var_pres('_a')=type_of(0) || _a || 0 ?}=1;

{? __zknrea.TREE<>0
|| BEER.ORD:=exec('ordIL','jm',ZK_RP.M,0);
   {? _wgjm
   || {? BEER.ORD || _res:=0 ?}
   || {? ~BEER.ORD & ~__popres || _res:=0 ?}
   ?}
?};
_res


\res2rs2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: przelicza z RS2 na pole RES
::   WY: 1-ok, 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? __zknrea.RES>0
|| _jmg:=ZK_RP.P().M().J2=ZK_RP.P().J2;
   _dokl_m:={? __zknrea.JM1=__zknrea.JM2
            || exec('jaka_dok_m','jm',ZK_RP.P().M)
            || exec('jaka_dok_mjm','jm',ZK_RP.P().M,ZK_RP.P().J2,ZK_RP.P().M().J)
            ?};
            roundmet(BEER.MDOKL);
   {? ~_jmg
   || __zknrea.RJ2:=__zknrea.RS2:=__zknrea.RES*ZK_RP.P().WS2 $ {? _dokl_m<0
                                                               || exec('jaka_dok_m','jm',ZK_RP.P().M)
                                                               || _dokl_m
                                                               ?}
   || __zknrea.RJ2:=__zknrea.RS2:=__zknrea.RES/ZK_RP.P().WS2 $ {? _dokl_m<0
                                                               || exec('jaka_dok_m','jm',ZK_RP.P().M)
                                                               || _dokl_m
                                                               ?}
   ?};
   roundmet(5)
|| FUN.info('Ilość musi być większa lub równa zero.'@);
   _res:=0
?};
_res


\rs22res
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: przelicza z RS2 na pole RES
::   WY: 1-ok, 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? __zknrea.RS2>0
|| _jmg:=ZK_RP.P().M().J2=ZK_RP.P().J2;
   _dokl_m:=exec('jaka_dok_m','jm',ZK_RP.M);
   {? ~_jmg
   || __zknrea.RES:=__zknrea.RS2/ZK_RP.P().WS2 $ _dokl_m
   || __zknrea.RES:=__zknrea.RS2*ZK_RP.P().WS2 $ _dokl_m
   ?};
   __popres:=1
|| FUN.info('Ilość musi być większa lub równa zero.'@);
   _res:=0
?};
_res


:Sign Version 2.0 jowisz:1045 2023/10/13 12:39:03 447b2253cc5c0601057c5a6f0108463370dd0b70cbc4815296a926847971c698a9e08bffa04135bdf7264e7e91a248f3e68a2509673c4027f8cac055f1ef5612b31093653bc1ca647168655de835b83d5ac1016da85e39d92d42488b44b024978ab7ca96e9302da74c3614399a1719d60f1b92d33303c096d1aa221717a162f3
