:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: portal_zestrocz.fml
:: Utworzony: 28.07.2021
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Formuły wspólne (parametryzacja + obsługa danych) dla zestawień rocznych.
::======================================================================================================================


\zrpn_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli ZRPN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zrpn_chk','portal_zestrocz',0)


\zrpn_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli ZRPN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zrpn_chk','portal_zestrocz',1)


\zrpn_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli ZRPN.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
__CHK.validate(ZRPN,
   $("_a.table(_b,"+$_put+",,'FIRMA','POLE','LP','OPIS','WIDOK','TYP')"),
   "_a.in_set(_b,'WIDOK',,1,2)",
::    1 - widok podstawowy (składniki)
::    2 - składniki w podziale na grupy
   "_a.in_set(_b,'TYP',,'S','O')"
::    S - Sumowanie składników z całego roku
::    O - zapamiętanie (prezentacja) wartości składnika z Ostatniej listy
)


\zrpp_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli ZRPP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zrpp_modb','portal_zestrocz') & exec('zrpp_chk','portal_zestrocz',0)


\zrpp_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli ZRPP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zrpp_modb','portal_zestrocz') & exec('zrpp_chk','portal_zestrocz',1)


\zrpp_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli ZRPP.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;

{? ZRPP.ZRPN=null()
|| return(__CHK.validate(ZRPP,"_a.record(_b,,'ZRPN')"))
?};

ZRPN.cntx_psh();
_widok:=ZRPP.ZRPN().WIDOK;
ZRPN.cntx_pop();

__CHK.validate(ZRPP,
   {? _widok=1
   || $("_a.table(_b,"+$_put+",,'R')")
   |? _widok=2 & ZRPP.ZRPP=0
   || $("_a.table(_b,"+$_put+",,'OPIS')")
   |? _widok=2 & ZRPP.ZRPP>0
   || $("_a.table(_b,"+$_put+",,'R')")
   || _stack:=form_stack();
      _txt:='(\\%1/%2.fml)' [_stack.name,_stack.file];
      FUN.emsg('Brak kastomizacji w formule sprawdzającej wypełnienie pól tabeli %1.'@ ['ZRPP']+'\n'+_txt);
      "0"
   ?}
)


\zrpp_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli ZRPP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ZRPP.R
|| R.cntx_psh();
   R.prefix();
   ZRPP.OPIS:='%1 - %2' [form(ZRPP.R().RN,6,0,'9.'),R.RT];
   R.cntx_pop()
?};
1


\zrpp_zrpn_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Wartość początkowa pola ZRPP.ZRPN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZRPN.ref()


\zrdr_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli ZRDR.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ZRDR.HASH=''
::   hash('')='da39a3ee5e6b4b0d3255bfef95601890afd80709'
|| ZRDR.HASH:='da39a3ee5e6b4b0d3255bfef95601890afd80709'
?};
exec('zrdr_chk','portal_zestrocz',0)


\zrdr_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli ZRDR.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zrdr_chk','portal_zestrocz',1)


\zrdr_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Wyzwalacz "Usuń - przed" dla tabeli ZRDR.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZRDN,'ZRDR',ZRDR.ref())


\zrdr_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli ZRDR.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;

_min:=1900;
_max:=exec('max_rok','#datetime');
_err:='Dozwolone wartości z przedziału %1-%2.'@ [$_min,$_max];

__CHK.validate(ZRDR,
   $("_a.table(_b,"+$_put+",,'FIRMA','ROK')"),
   $("{? ZRDR.ROK<"+$_min+" | ZRDR.ROK>"+$_max+"
      || _a.err_fld(_b,'ROK',1,'"+_err+"')
      || ''
      ?}
   ")
)


\zrdn_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli ZRDN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zrdn_chk','portal_zestrocz',0) & exec('zrdn_modb','portal_zestrocz')


\zrdn_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli ZRDN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zrdn_chk','portal_zestrocz',1) & exec('zrdn_modb','portal_zestrocz')


\zrdn_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Wyzwalacz "Usuń - przed" dla tabeli ZRDN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZRDP,'UNIQUE',ZRDN.ref())


\zrdn_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli ZRDN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ZRDN.P
|| P.cntx_psh();
   ZRDN.OSOBA:=ZRDN.P().OSOBA;
   P.cntx_pop()
|| ZRDN.OSOBA:=null()
?};
1


\zrdn_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli ZRDN.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
__CHK.validate(ZRDN,
   $("_a.table(_b,"+$_put+",,'ZRDR','P','PRACWID')"),
   "_a.in_set(_b,'PRACWID',,'T','N')"
)


\o_hash
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Formuła wylicza skrót z zamkniętych list wskazanego roku podatkowego. Informacja służy do monitorowania zmian
::       w tym zakresie. Jeżeli jakaś lista została dodana, zmodyfikowana (np. otwarta/zamknięta) lub usunięta, to skrót
::       ulegnie zmianie.
::   WE: [_a] [NUMBER] - Badany rok podatkowy [domyślnie: bieżący].
::   WY: Skrót list podatkowych.
::----------------------------------------------------------------------------------------------------------------------
_rok:={? var_pres('_a')=type_of(0) || _a || date()~1 ?};

_txt:='';
O.cntx_psh();
O.index('LISTYPOD');
O.prefix(exec('ref_firma','ustawienia'),_rok);
{? O.first()
|| {!
   |? {? O.Z='T'
      || _txt+='%1#%2|' [O.LT,O.IDPUT]
      ?};
      O.next()
   !}
?};
O.cntx_pop();
hash(_txt)


\o_p_hash
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Formuła dla podanego pracownika i roku podatkowego wylicza skrót z zamkniętych list. Informacja służy do
::       monitowania zmian w tym zakresie. Jeżeli jakaś lista pracownika została dodana, zmodyfikowana
::       (np. otwarta/zamknięta) lub usunięta, to skrót ulegnie zmianie.
::   WE: [_a] [NUMBER]    - Badany rok podatkowy [domyślnie: bieżący].
::       [_b] [REFERENCE] - Wskazanie pracownika [domyślnie: bieżący].
::   WY: Skrót list podatkowych.
::----------------------------------------------------------------------------------------------------------------------
_rok:={? var_pres('_a')=type_of(0) || _a || date()~1 ?};
_prac:={? var_pres('_b')=type_of(null()) & _b<>null() & ref_tab(_b)=P || _b || P.ref() ?};

_txt:='';
O_P.cntx_psh();
O_P.index('ZP_RMP');
O_P.prefix('T','T',_prac,_rok);
{? O_P.first()
|| O.cntx_psh();
   O.prefix();
   {!
   |? _txt+='%1#%2|' [O_P.O().LT,O.IDPUT];
      O_P.next()
   !};
   O.cntx_pop()
?};
O_P.cntx_pop();
hash(_txt)


\aktualizuj_cfg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Procedura przygotowuje tablicę elementów nazwanych wykorzystywaną przy aktualizacji zestawień rocznych
::       wynagrodzeń pracowników.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=obj_new(
:: Pola prywatne
   'TAB','prac','pola','mc',
:: Pola publiczne
   'lmc',
:: Metody prywatne
   'ls',
:: Metody publiczne
   'start','licz','zapiszN','zapiszP'
);

:: Tabela na wyniki.
_cfg.TAB:=tab_tmp(3,
   'GRUPA','STRING[255]','Grupa',
   'RN','STRING[40]','Rubryka',
   'DATA','DATE','Data',
   'KW','REAL','Kwota'

);

:: Wskazanie pracownika, dla którego przeprowadzane są obliczenia.
_cfg.prac:=null();

:: Tablica elementów nazwanych (tworzona dynamicznie na podstawie parametryzacji w tabeli ZRPN) z wynikami obliczeń
:: dla bieżącego pracownika.
:: _cfg.pola:=obj_new('P1','P2',...)

:: Tablica z informacjami, w których miesiącach występowały listy płac.
_cfg.mc:=obj_new(12);

:: Liczba miesięcy wziętych pod uwagę.
_cfg.lmc:=0;

::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Aktualizacja danych wskazanego pracownika na podstawie bieżącej listy.
::       Zakłada się, że bieżącym indeksem tabeli LS jest PRACNRRU.
::   WE: _a [NUMBER] - Numer składnika płacowego.
::       _b [NUMBER] - Widok.
::       _c [STRING] - Nazwa grupy (może być pustym napisem).
::       _d [DATE]   - Data wypłaty.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg.ls:="
   _kw:=0;
   LS.prefix(.prac,_a);
   {? LS.first()
   || _rn:='%1 (%2)' [LS.RB().RT,$LS.RB().RN];
      {!
      |? _kw+=LS.KW;
         LS.next()
      !};
      {? _kw<>0 & _b=2
      || {? .TAB.find_key(_c,_rn,_d)
         || .TAB.KW+=_kw;
            {? .TAB.KW
            || .TAB.put()
            || .TAB.del()
            ?}
         || .TAB.blank();
            .TAB.GRUPA:=_c;
            .TAB.RN:=_rn;
            .TAB.DATA:=_d;
            .TAB.KW:=_kw;
            .TAB.add()
         ?}
      ?}
   ?};
   _kw
";

_pola:='';
_start:=
   '.prac:=_a;\n'
   '{! _lp:=1 .. 12 |! .mc[_lp]:=0 !};\n'
   '.lmc:=0;\n'
   '{? .TAB.first() || {! |? .TAB.del() !} ?};\n';
_licz:=
:: _a [NUMBER] - Numer miesiąca, którego dotyczą obliczenia.
:: _b [DATE]   - Data wypłaty.
   '_mc:=_a;\n'
   '_dt:=_b;\n'
   '{? ~.mc[_mc] || .mc[_mc]:=1; .lmc+=1 ?};\n';
_zapiszN:='';
ZRPN.cntx_psh();
ZRPN.index('VIEW');
ZRPN.prefix(exec('ref_firma','ustawienia'));
{? ZRPN.first()
|| ZRPP.cntx_psh();
   ZRPP.index('ZRPNRN');
   {!
   |? ZRPP.prefix(ZRPN.ref());
      {? ZRPP.first()
      || _pola+='\'%1\',' [ZRPN.POLE];
         _start+='.pola.%1:=' [ZRPN.POLE]+{? ZRPN.TYP='S' || '0' || '~~' ?}+';\n';
         _zapiszN+='{? .pola.%1<>~~ || ZRDN.%1:=.pola.%1 ?};\n' [ZRPN.POLE];
         _r1:='';
         {!
         |? {? ZRPP.R
            || _grupa:='';
               {? ZRPP.ZRPP
               || ZRPP.cntx_psh();
                  _grupa:={? ZRPP.seek(ZRPP.ZRPP) || ZRPP.OPIS || '???' ?};
                  ZRPP.cntx_pop()
               ?};
::             Metody .ls() są wywoływane w ramach obsługi metody .licz(), w której (m.in.) jest zdefiniowana
::             zmienna _dt (data wypłaty).
               _r1+='.ls(%1,%2,\'%3\',_dt)+' [$ZRPP.R().RN,$ZRPN.WIDOK,_grupa]
            ?};
            ZRPP.next()
         !};
         {? _r1<>''
         || {? ZRPN.TYP='S'
            || _licz+='.pola.%1+=%2;\n' [ZRPN.POLE,_r1-1]
            |? ZRPN.TYP='O'
            || _licz+='{? .pola.%1=~~ & (_kw:=%2)<>0 || .pola.%1:=_kw ?};\n' [ZRPN.POLE,_r1-1]
            ?}
         ?}
      ?};
      ZRPN.next()
   !};
   ZRPP.cntx_pop()
?};
ZRPN.cntx_pop();

_cfg.pola:=($('obj_new(%1)' [_pola-1]))();
_cfg.start:=$(_start+'~~');
_cfg.licz:=$(_licz+'~~');
_cfg.zapiszN:=$(_zapiszN+'~~');

:: _a [REFERENCE] - Wskazanie na rekord nagłówka zestawienia (ZRDN).
_cfg.zapiszP:="
   _zrdn:=_a;
   ZRDP.prefix(_zrdn);
:: Etap I - z danych usuwamy rekordy zbędne
   {? ZRDP.first()
   || {!
      |? {? .TAB.find_key(ZRDP.GRUPA,ZRDP.RN,ZRDP.DATA)
::          Nie sprawdzamy kwoty - zrobimy to na etapie II.
         || ZRDP.next()
         || ZRDP.del(,1)=2
         ?}
      !}
   ?};
:: Etap II - dodajemy nowe i modyfikujemy kwoty w istniejących.
   {? .TAB.first()
   || {!
      |? {? ZRDP.find_key(.TAB.GRUPA,.TAB.RN,.TAB.DATA)
         || {? ZRDP.KW<>.TAB.KW
            || ZRDP.KW:=.TAB.KW;
               ZRDP.put()
            ?}
         || ZRDP.blank();
            ZRDP.ZRDN:=_zrdn;
            ZRDP.GRUPA:=.TAB.GRUPA;
            ZRDP.RN:=.TAB.RN;
            ZRDP.DATA:=.TAB.DATA;
            ZRDP.KW:=.TAB.KW;
            ZRDP.add()
         ?};
         .TAB.next()
      !}
   ?};
   1
";

_cfg


\aktualizuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Procedura aktualizująca zestawienia rocznych wynagrodzeń współpracowników dla wskazanego roku.
::       Jeżeli nie wskazany został współppracownik (parametr _b), to aktualizacja dotyczy wszystkich współpracowników,
::       bez względu na formę współpracy i uprawnienia.
::   WE:  _a  [NUMBER]    - Aktualizowany rok.
::       [_b] [REFERENCE] - Wskazanie pracownika.
::   WY: '' w przypadku powodzenia lub przyczyna niepowodzenia.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _rok:=_a
|| return('Brak parametru wywołania.')
?};
_prac:={? var_pres('_b')=type_of(null()) & _b<>null() & ref_tab(_b)=P || _b || null() ?};

_ret:='';
ZRDR.cntx_psh();
ZRDR.index('ROK');
ZRDR.prefix(exec('ref_firma','ustawienia'),_rok);
{? ~ZRDR.first()
|| _ret:='Brak roku do aktualizacji.'

|? _ohash:=exec('o_hash','portal_zestrocz',ZRDR.ROK);
:: Jeżeli został podany pracownik, to skrót na nagłówku może być już poprawny, ale dane pracownika - nie.
   _prac=null() & ZRDR.HASH=_ohash
|| ~~

|? ZRDR.r_lock(1,1,1)
|| _err:=0;

   P.cntx_psh();
   P.index('OSOZATR');
   P.prefix(ZRDR.FIRMA);
   {? {? _prac=null() || P.first() || P.seek(_prac) ?}
   || ZRDN.cntx_psh();
      ZRDN.index('ZRDR');

      ZRDP.cntx_psh();
      ZRDP.index('UNIQUE');

      R.cntx_psh();
      R.prefix();

      O.cntx_psh();
      O.prefix();
      O_P.cntx_psh();
::    Indeks z odwróconą kolejnością roku i miesiąca!
      O_P.index('ZP_RMP');

      _cfg:=exec('aktualizuj_cfg','portal_zestrocz');
      {!
      |? _cfg.start(P.ref());
         _phash:=exec('o_p_hash','portal_zestrocz',ZRDR.ROK,P.ref());
         do();
         ZRDN.prefix(ZRDR.ref(),P.ref());
         _mod:={? ZRDN.first() || {? ZRDN.HASH=_phash || '' || 'put' ?} || 'add' ?};
         {? _mod<>''
         || O_P.prefix('T','T',P.ref(),ZRDR.ROK);
            {? O_P.first()
            || {!
               |? LS.use(-O_P.O().LT);
                  LS.index('PRACNRRU');
                  _cfg.licz(O.MP,O.D);
                  O_P.next()
               !}
            ?};
            ZRDN.blank();
            ZRDN.ZRDR:=ZRDR.ref();
            ZRDN.P:=P.ref();
            ZRDN.DOZ:=exec('data_ostatniej_zmiany','portal_zestrocz',P.ref(),ZRDR.ROK,P.DZA);
            _cfg.zapiszN();
            {? _cfg.lmc
            || ZRDN.WZM:=ZRDN.WZR/_cfg.lmc$2;
               ZRDN.WPM:=ZRDN.WPR/_cfg.lmc$2;
               ZRDN.PITM:=ZRDN.PITR/_cfg.lmc$2
            ?};
            ZRDN.HASH:=_phash;
::          Czy są jakiekolwiek wartości?
::          Ponieważ wartości miesięczne są wyliczane z rocznych, to wystarczy sprawdzić wyłącznie roczne.
            _empty:=ZRDN.WZR=0 & ZRDN.WPR=0 & ZRDN.PITR=0 & ZRDN.KPAR=0;
            {? ~_empty & _mod='add'
            || ZRDN.add() & _cfg.zapiszP(ZRDN.ref())
            |? _mod='put'
            || {? _empty
               || ZRDN.del()
               || ZRDN.put() & _cfg.zapiszP(ZRDN.ref())
               ?}
            ?}
         ?};
         {? ~end()
         || _err+=1
         ?};
         _prac=null() & P.next()
      !};

      O_P.cntx_pop();
      O.cntx_pop();
      R.cntx_pop();
      ZRDP.cntx_pop();
      ZRDN.cntx_pop()

   ?};
   P.cntx_pop();

   {? _err=0
   || ZRDR.HASH:=_ohash;
      ZRDR.put()
   ?};
   ZRDR.r_unlock()
?};
ZRDR.cntx_pop();
_ret


\data_ostatniej_zmiany
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Formuła, dla wskazanego pracownika znajduje datę ostatniej zmiany warunków wynagrodzenia.
::   WE: _a [REFERENCE] - Wskazanie pracownika.
::       _b [NUMBER]    - Rok
::       _c [DATE]      - Data
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_prac:=_a;
_rok:=_b;
_dd:=_c;

_dt:=date(_rok,12,0)+1;

H.cntx_psh();
H.index('_HISTKOD');
H.prefix(_prac,'Z',);
_ret:={? H.find_le(_dt) || H.OD || _dd ?};
H.cntx_pop();
_ret

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 908813fc14dedf0e2733d8c05b10212e29a3cb3be64c50a783a6753254433c85db928c3d75c77c83cd6773c65b0954e5907a26fa38f074d27794200e5c8e337eb66c3a1b8bb3ff271e795ed35b6bc0b7d1f42372d60299a715b2c96aa86d5778b39d69512dfe052183e6a55f6f0f281ed54f6e3f2186f3d2d9f46a7ba586ae93
