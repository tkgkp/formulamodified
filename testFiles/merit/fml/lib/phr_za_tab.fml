:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: phr_za_tab.fml
:: Utworzony: 09.03.2017
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły wyzwalaczy dla tabel obszarów PSZ, PRE, PBA.
::======================================================================================================================


\za_form_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZA_FORM.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZA_FORM) & exec('za_form_chk','phr_za_tab',0)


\za_form_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZA_FORM.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_FORM*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZA_FORM) & exec('za_form_chk','phr_za_tab',1)


\za_form_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZA_FORM.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \za_form_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',WT_FORM,'ZA_FORM',ZA_FORM.ref());
exec('usun_nota','phr_dane',ZA_FORM.ref())


\za_form_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZA_FORM.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \za_form_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_adda','phr_tab',ZA_FORM,_a)
|| return()
?};

ZA_NOTA.cntx_psh();
ZA_NOTA.index('ZA_NOTA');
ZA_NOTA.prefix(ZA_FORM.ref);
ZA_NOTA.blank(1);
ZA_NOTA.ZA_FORM:=ZA_FORM.ref();

ZA_TEST.cntx_psh();
ZA_TEST.index('INDEKS');
ZA_TEST.prefix(ZA_FORM.ZA_ZEST);
_loop:=ZA_TEST.first();
{!
|? _loop
|! {? {? ZA_ZEST.TYP().KOD='O' || ZA_TEST.ZZ_MET().KOD<>'' || ZA_TEST.RODZ().KOD<>'' ?}
   || _pyt:=ZA_TEST.ref();
      ZA_NOTA.ZA_TEST:=_pyt;
      ZA_NOTA.TRESC:=ZA_TEST.TRESC;
      {? ZA_NOTA.add()
      || _ref:=ZA_NOTA.ref();
         _dok:=ZA_TEST.ZZ_DOK;
         _form:=ZA_NOTA.ZA_FORM;
         ZA_NOTA.cntx_psh();
         ZA_NOTA.index('ZA_NOTA');
         ZA_NOTA.blank(1);
         {? ZA_TEST.ZA_ZEST().TYP().KOD<>'O'
         || ZA_NOTAO.cntx_psh();
            ZA_NOTAO.index('NUMER');
            ZA_NOTAO.prefix(_pyt);
            _loop:=ZA_NOTAO.first();
            {!
            |? _loop
            |! _tresc:=ZA_NOTAO.TRESC;
               _nr:=ZA_NOTAO.NUMER;
               ZA_NOTA.TRESC:=_tresc;
               ZA_NOTA.ZA_NOTAO:=ZA_NOTAO.ref();
               ZA_NOTA.ZZ_DOK:=exec('add_dok','phr_tab',ZA_NOTA);
               ZA_NOTA.ZA_NOTA:=_ref;
               ZA_NOTA.ZA_TEST:=_pyt;
               ZA_NOTA.ZA_FORM:=_form;
               ZA_NOTA.WARTOSC+=1;
               ZA_NOTA.NUMER:=_nr;
               ZA_NOTA.ODP:='N';
               {? ZA_ZEST.PKT='T'
               || {? ZA_NOTAO.ODPT>0
                  || ZA_NOTA.TRUE:='T'
                  || ZA_NOTA.TRUE:='N'
                  ?}
               || {? ZA_NOTAO.TRUE='T'
                  || ZA_NOTA.TRUE:='T'
                  || ZA_NOTA.TRUE:='N'
                  ?}
               ?};
               ZA_NOTA.add();
               _loop:=ZA_NOTAO.next()
            !};
            ZA_NOTAO.cntx_pop()
         || {? ZA_TEST.ZZ_MET().KOD='KW'
            || ZZ_KOMPK.index('WARTOSC');
               ZZ_KOMPK.prefix(ref_name(_dok),_dok,null);
               {? ZZ_KOMPK.first()
               || {!
                  |? ZA_NOTA.ZZ_DOK:=exec('add_dok','phr_tab',ZA_NOTA);
                     ZA_NOTA.ZA_NOTA:=_ref;
                     ZA_NOTA.ZA_TEST:=_pyt;
                     ZA_NOTA.ZA_FORM:=_form;
                     ZA_NOTA.NUMER+=1;
                     ZA_NOTA.ODP:='N';
                     ZA_NOTA.TRESC:=ZZ_KOMPK.KOD+' '+ZZ_KOMPK.OPIS;
                     ZA_NOTA.WARTOSC:=ZZ_KOMPK.WARTOSC;
                     ZA_NOTA.add();
                     ZZ_KOMPK.next()
                  !}
               ?}
            |? ZA_TEST.ZZ_MET().KOD='SP'
            || ZZ_KOMPS.index('WARTOSC');
               ZZ_KOMPS.prefix(ref_name(_dok),_dok,null);
               {? ZZ_KOMPS.first()
               || {!
                  |? ZA_NOTA.ZZ_DOK:=exec('add_dok','phr_tab',ZA_NOTA);
                     ZA_NOTA.ZA_NOTA:=_ref;
                     ZA_NOTA.ZA_TEST:=_pyt;
                     ZA_NOTA.ZA_FORM:=_form;
                     ZA_NOTA.NUMER+=1;
                     ZA_NOTA.ODP:='N';
                     ZA_NOTA.TRESC:=$ZZ_KOMPS.WARTOSC+' - '+ZZ_KOMPS.OPIS;
                     ZA_NOTA.WARTOSC:=ZZ_KOMPS.WARTOSC;
                     ZA_NOTA.add();
                     ZZ_KOMPS.next()
                  !}
               ?}
            |? ZA_TEST.ZZ_MET().KOD='WB'
            || ZZ_KOMZB.for_each("ZZ_KOMZB.del()");
               ZZ_KOMPZ.index('UNIQUE');
               ZZ_KOMPZ.prefix(ref_name(_dok),_dok,null());
               {? ZZ_KOMPZ.first
               || _ins:=exec('insert','phr_dane',ZZ_KOMZB,1);
                  _ins(1,'Wartość minimalna',ZZ_KOMPZ.ref,'MIN',ZZ_KOMPZ.MIN);
                  _ins(2,'Wartość maksymalna',ZZ_KOMPZ.ref,'MAKS',ZZ_KOMPZ.MAKS);
                  _ins(3,'Wartość oczekiwana',ZZ_KOMPZ.ref,'POZIOM',ZZ_KOMPZ.POZIOM);
                  ZZ_KOMZB.first
               ?};
               {? ZZ_KOMPZ.first()
               || {! _wartosc:=ZZ_KOMPZ.MIN..ZZ_KOMPZ.MAKS
                  |! ZA_NOTA.ZZ_DOK:=exec('add_dok','phr_tab',ZA_NOTA);
                     ZA_NOTA.ZA_NOTA:=_ref;
                     ZA_NOTA.ZA_TEST:=_pyt;
                     ZA_NOTA.ZA_FORM:=_form;
                     ZA_NOTA.WARTOSC:=_wartosc;
                     ZA_NOTA.NUMER+=1;
                     ZA_NOTA.ODP:='N';
                     ZA_NOTA.TRESC:=STR.słownie(_wartosc);
                     ZA_NOTA.add()
                  !}
               ?}
            ?}
         ?};
         ZA_NOTA.cntx_pop()
      ?}
   ?};
   _loop:=ZA_TEST.next()
!};

ZA_TEST.cntx_pop();
ZA_NOTA.cntx_pop();

{? ZA_FORM.ZA_ZEST().ZA_INFO
|| ZA_ZEST.ZA_INFO();
   ZA_INFO.FORM_SUM+=1;
   ZA_INFO.put()
?};
~~


\za_form_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZA_FORM.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \za_form_ap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_FORM*'PUTA|'
|| return()
?};
{? ~exec('dok_puta','phr_tab',ZA_FORM,_a)
|| return()
?};

ZA_INFO.cntx_psh();
ZA_INFO.prefix();
{? ZA_FORM.ZA_ZEST().ZA_INFO & ZA_FORM.SLO_KOD<>bfld('SLO_KOD')
|| ZA_ZEST.ZA_INFO();
   _kod:=ZA_FORM.SLO_KOD().KOD;
   {? _kod='W' || ZA_INFO.FORM_WYP+=1
   |? _kod='Z' || ZA_INFO.FORM_AKC+=1
   ?};
   _formID:=ZA_FORM.ID;
   _formula:=''+"exec('ank_por','ank_por','"+_formID+"')";
   SLO_KOD.prefix();
   {? SLO_KOD.seek(bfld('SLO_KOD'))
   || {? SLO_KOD.KOD='W' || ZA_INFO.FORM_WYP-=1
      |? SLO_KOD.KOD='Z'
      || BD_EXEC.cntx_psh();
         BD_EXEC.index('FORMULA');
         {? BD_EXEC.find_key(_formula)
         || BD_EXEC.del()
         ?};
         BD_EXEC.cntx_pop();
         ZA_INFO.FORM_AKC-=1
      ?}
   ?};
   ZA_INFO.put()
?};
ZA_INFO.cntx_pop();
~~


\za_form_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZA_FORM.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \za_form_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_dela','phr_tab',_a)
|| return()
?};
ZA_ZEST.cntx_psh();
ZA_ZEST.prefix();
{? ZA_ZEST.seek(bfld('ZA_ZEST')) & ZA_ZEST.ZA_INFO
|| ZA_ZEST.ZA_INFO();
   ZA_INFO.FORM_SUM-=1;
   SLO_KOD.prefix();
   {? SLO_KOD.seek(bfld('SLO_KOD'))
   || {? SLO_KOD.KOD='W' || ZA_INFO.FORM_WYP-=1
      |? SLO_KOD.KOD='Z' || ZA_INFO.FORM_AKC-=1
      ?}
   ?};
   ZA_INFO.put()
?};
ZA_ZEST.cntx_pop();
~~


\za_form_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Sprawdza wypełnienie wymaganych pół. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::  OLD: \za_form_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_FORM*'CHK|'
|| return(1)
?};
_put:=var_pres('_a')=type_of(0) & _a;
__CHK.validate(ZA_FORM,$("_a.table(_b,"+$_put+",,'ID')"))


\za_info_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZA_INFO.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('za_info_modb','phr_za_tab');
1


\za_info_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZA_INFO.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_INFO*'PUTB|'
|| return(1)
?};
exec('za_info_modb','phr_za_tab');
1


\za_info_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZA_INFO.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\za_info_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZA_INFO.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\za_info_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZA_INFO.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_INFO*'PUTA|'
|| return()
?};
~~


\za_info_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZA_INFO.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\za_info_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Wywoływana z wyzwalaczy przed dołącz i popraw, przed przeprowadzeniem testów poprawności rekordu.
::  OLD: \za_info_bw/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
ZA_INFO.POSTEP:={? ZA_INFO.FORM_SUM || (ZA_INFO.FORM_AKC*100/ZA_INFO.FORM_SUM)$2 ?}


\za_inst_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZA_INST.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \za_inst_ba/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_addb','phr_tab',ZA_INST) & exec('za_inst_chk','phr_za_tab',0)
|| exec('zz_ocena_add','phr_tab',ZA_INST,'ZZ_OCENA')
?}


\za_inst_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZA_INST.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_INST*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZA_INST) & exec('za_inst_chk','phr_za_tab',1)


\za_inst_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZA_INST.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \za_inst_del/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZA_ZEST,'NAZWA',ZA_INST.NP_DOK,ZA_INST.ZZ_DOK) &
exec('del_ndx','#table',ZA_WAR,'UNIQUE',ZA_INST.NP_DOK,ZA_INST.ZZ_DOK)


\za_inst_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZA_INST.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZA_INST,_a);
~~


\za_inst_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZA_INST.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_INST*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZA_INST,_a);
~~


\za_inst_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZA_INST.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \za_inst_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? do_state()=1 & _a
|| {? exec('del_ndx','#table',ZZ_OCENA,'ZZ_LINK',bfld('NP_DOK'),bfld('ZZ_DOK'))
   || exec('dok_dela','phr_tab',_a)
   ?}
?};
~~


\za_inst_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::  OLD: \za_inst_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_INST*'CHK|'
|| return(1)
?};
_put:=var_pres('_a')=type_of(0) & _a;
__CHK.validate(ZA_INST,$("_a.table(_b,"+$_put+",,'DATA','NAZWA')"))


\za_nota_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZA_NOTA.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZA_NOTA) & exec('za_nota_chk','phr_za_tab',0)


\za_nota_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZA_NOTA.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_NOTA*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZA_NOTA) & exec('za_nota_chk','phr_za_tab',1)


\za_nota_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZA_NOTA.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\za_nota_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZA_NOTA.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \za_nota_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_adda','phr_tab',ZA_NOTA,_a)
|| return()
?};
{? ZA_NOTA.ZA_FORM().ZA_ZEST().ZA_INFO
|| ZA_ZEST.ZA_INFO();
   ZA_INFO.NOTA_SUM+=1;
   ZA_INFO.put()
?};
~~


\za_nota_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZA_NOTA.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \za_nota_ap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_NOTA*'PUTA|'
|| return()
?};
{? ~exec('dok_puta','phr_tab',ZA_NOTA,_a)
|| return()
?};
{? ZA_NOTA.WARTOSC<>bfld('WARTOSC')
|| ZA_INFO.cntx_psh();
   ZA_INFO.prefix();
   {? ZA_NOTA.ZA_FORM().ZA_ZEST().ZA_INFO
   || ZA_ZEST.ZA_INFO();
      ZA_INFO.NOTA_WYP:=0;
      ZA_NOTA.cntx_psh();
      ZA_NOTA.index('ZA_NOTA');
      ZA_NOTA.prefix(ZA_ZEST.ref(),0);
      _loop:=ZA_NOTA.first();
      {!
      |? _loop
      |! {? ZA_NOTA.WARTOSC & ZA_NOTA.ZA_TEST().ZZ_MET().RODZAJ='S'
         || ZA_INFO.NOTA_WYP+=1
         ?};
         _loop:=ZA_NOTA.next()
      !};
      ZA_NOTA.cntx_pop();
      {? ZA_FORM.SLO_KOD().KOD<>'W'
      || ZA_FORM.SLO_KOD:=exec('kod','ext_slo','ZA_FORM','W');
         ZA_FORM.put()
      ?};
      ZA_INFO.put()
   ?};
   ZA_INFO.cntx_pop();
   {? ZA_NOTA.ZA_TEST & ZA_NOTA.ZA_TEST().ZZ_MET().KOD<>''
   || {? ZA_ZEST.ZZ_LINK().KLASA='ZA_INST' | ZA_ZEST.ZZ_LINK().KLASA='SZK_OPIS'
      || exec('za_nota_uo','phr_za_tab',ZA_NOTA.ZA_TEST)
      || exec('za_nota_uo','phr_za_tab',ZA_NOTA.ZA_TEST,ZA_NOTA.ZA_FORM().ZZ_LINK)
      ?};
      exec('za_nota_sp','phr_za_tab',ZA_NOTA.ZA_FORM().ZZ_LINK)
   ?}
?};
~~


\za_nota_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZA_NOTA.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \za_nota_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_dela','phr_tab',_a)
|| return()
?};

{? ZA_NOTA.ZA_FORM().ZA_ZEST().TYP().KOD='O'
|| ZA_FORM.cntx_psh();
   ZA_FORM.prefix();
   _link:=null;
   {? ZA_FORM.seek(bfld('ZA_FORM')) & ZA_FORM.ZA_ZEST().ZA_INFO
   || _link:=ZA_FORM.ZZ_LINK;
      ZA_ZEST.ZA_INFO();
      ZA_INFO.NOTA_SUM-=1;
      {? bfld('WARTOSC')
      || ZA_INFO.NOTA_WYP-=1
      ?};
      ZA_INFO.put()
   ?};
   ZA_FORM.cntx_pop();

   exec('za_nota_uo','phr_za_tab',bfld('ZA_TEST'),_link);
   exec('za_nota_sp','phr_za_tab',_link)
|| 1
?};
~~


\za_nota_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::  OLD: \za_nota_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_NOTA*'CHK|'
|| return(1)
?};
__CHK.record(ZA_NOTA,,'ZA_FORM','ZA_TEST')=''


\za_nota_uo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Aktualizuje ocenę po zmianie noty.
::   WE: _a - wskazanie na pytanie
::       _b - (opcjonalny) wskazanie na właściciela formularza
::  OLD: \za_nota_uo/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
ZA_TEST.cntx_psh();

{? {? ZA_TEST.ref<>_a || ~ZA_TEST.seek(_a) ?} | ~ZA_TEST.ZZ_OCENA
|| ZA_TEST.cntx_pop;
   return(1)
?};

ZZ_OCENA.cntx_psh();
ZZ_OCENA.prefix();
ZA_TEST.ZZ_OCENA();
_owner:=ZA_TEST.ZA_ZEST().ZZ_LINK;

: ustalenie wartości początkowych oceny dla pytania
ZZ_OCENA.SO:=ZZ_OCENA.LO:=0;
ZZ_OCENA.CLO:=ZZ_OCENA.CEX:=ZZ_OCENA.CHI:=0;
ZZ_OCENA.EX:=exec('poziom_oceny','phr_dane',ZA_TEST.ZZ_DOK,null,exec('met2tabwar','phr_tab',ZA_TEST.ZZ_MET().KOD));

ZA_NOTA.cntx_psh();
_ndx:=ZA_NOTA.ndx_tmp(,1,'ZA_TEST',,,'ZA_NOTA',,);
ZA_NOTA.index(_ndx);
ZA_NOTA.prefix(_a,0);
_loop:=ZA_NOTA.first();
{!
|? _loop
|! ZZ_OCENA.SO+=ZA_NOTA.WARTOSC;
   ZZ_OCENA.LO+=(ZA_NOTA.WARTOSC<>0);
   {? ZA_NOTA.WARTOSC>0
   || {? ZA_NOTA.WARTOSC<ZZ_OCENA.EX || ZZ_OCENA.CLO+=1
      |? ZA_NOTA.WARTOSC=ZZ_OCENA.EX || ZZ_OCENA.CEX+=1
      |? ZA_NOTA.WARTOSC>ZZ_OCENA.EX || ZZ_OCENA.CHI+=1
      ?}
   ?};
   _loop:=ZA_NOTA.next()
!};
ZA_NOTA.ndx_drop(_ndx);
ZA_NOTA.cntx_pop();
: zapisz ocenę
ZZ_OCENA.AE:={? ZZ_OCENA.LO>0 || ZZ_OCENA.SO/ZZ_OCENA.LO ?}$2;
ZZ_OCENA.TW:={? ZZ_OCENA.EX>0 || 100*ZZ_OCENA.AE/ZZ_OCENA.EX ?}$2;
ZZ_OCENA.FT:={? ZZ_OCENA.LO>0 || 100*(ZZ_OCENA.CEX+ZZ_OCENA.CHI)/ZZ_OCENA.LO ?}$2;
ZZ_OCENA.put();
ZZ_OCENA.cntx_pop();
: aktualizuj oceny na wyższych poziomach
exec('za_nota_uu','phr_za_tab',ZA_TEST.ZA_TEST);

: aktualizuj wynik ankiety (ocena powiązana z ankietą)
ZA_TEST.f_clear();
ZA_TEST.index('ZA_TEST');
ZA_TEST.prefix(0,ZA_TEST.ZA_ZEST);
exec('zz_ocena_cnt','phr_tab',ZA_TEST.ZA_ZEST().ZZ_OCENA);
ZA_TEST.clear();

: propagacja noty na oceny zbiorcze zgodnie z wytycznymi
ZA_WAR.cntx_psh();
ZA_WAR.index('UNIQUE');
ZA_SKL.cntx_psh();
ZA_SKL.index('OPIS');
_dok:=obj_new(2);
_npdok:=obj_new(2);
_lnk:=obj_new(2);
_dok[1]:=ZA_TEST.ZA_ZEST().ZZ_LINK;
_npdok[1]:=ref_name(_dok[1]);
_lnk[1]:='ZA_ZEST.ZZ_LINK';
_dok[2]:=ZA_TEST.ZA_ZEST().ZZ_DOK;
_npdok[2]:=ref_name(_dok[2]);
_lnk[2]:='ZA_ZEST.ZZ_DOK';
{! _n:=1..obj_len(_dok)
|! ZA_SKL.prefix(_a);
   _loop:=ZA_SKL.first();
   {!
   |? _loop
   |! ZA_WAR.prefix(_npdok[_n],_dok[_n]);
      {? ZA_WAR.find_key(ZA_SKL.ZA_TYP)
      || ZA_TEST.f_set(,
            'join ZA_ZEST',
            _lnk[_n]+'=:_b and ZA_TEST.REFERENCE in (select ZA_TEST from ZA_SKL where ZA_TYP=:_a)',
            ZA_WAR.ZA_TYP,
            _dok[_n]
         );
         exec('zz_ocena_cnt','phr_tab',ZA_WAR.ZZ_OCENA)
      ?};
      _loop:=ZA_SKL.next()
   !}
!};
ZA_TEST.f_clear();
ZA_SKL.cntx_pop();
ZA_WAR.cntx_pop();

: uwzględnienie noty w ocenach poza ankietą
ZZ_DOK.cntx_psh();
ZZ_DOK.clear();
ZZ_OCENA.cntx_psh();
ZZ_OCENA.clear();
ZA_SKL.cntx_psh();
ZA_SKL.index('OPIS');
ZA_SKL.prefix(_a);
_loop:=ZA_SKL.first();
{!
|? _loop
|! ZA_SKL.ZA_TYP();
   _arg:=obj_new('table','field','ref');
   _arg.table:=_arg.field:='';
   _arg.ref:=null;
   _formula:=ZA_TYP.memo_txt(,1,'FORMULA');
   ($_formula)(_arg);
   {? _arg.table<>'' & _arg.field<>''
   ||
:     czy formularz ma "właściciela"
      {? var_pres('_b')=type_of(null) & _b<>null & exec('seek_dok','phr_tab',_b)
      ||
:        wylicz wartość oceny dla własciciela formularza
         _TAB:=($ZZ_DOK.KLASA)();
         _TAB.cntx_psh();
         _TAB.index('ZZ_DOK');
         _TAB.prefix();
         {? _TAB.find_key(ref_name(_b),_b) & ZZ_OCENA.seek(($(_arg.table+'.'+_arg.field))())
         || ZA_NOTA.cntx_psh();
            ZA_NOTA.prefix();
            ZA_NOTA.f_set(,'join ZA_FORM','ZA_FORM.ZZ_LINK=:_a',_b);
:           ustalenie wartości początkowych oceny dla właściciela formularza
            ZZ_OCENA.EX:=ZZ_OCENA.SO:=ZZ_OCENA.LO:=0;
            ZZ_OCENA.CLO:=ZZ_OCENA.CEX:=ZZ_OCENA.CHI:=0;
            _loop:=ZA_NOTA.f_first();
            _exs:=_exc:=0;
            {!
            |? _loop
            |! {? ZA_NOTA.ZA_TEST().ZZ_MET().KOD<>'OO'
               || _ex:=exec('poziom_oceny','phr_dane',ZA_TEST.ZZ_DOK,null,exec('met2tabwar','phr_tab',ZA_TEST.ZZ_MET().KOD));
                  _exs+=_ex;
                  _exc+=1;
                  ZZ_OCENA.SO+=ZA_NOTA.WARTOSC;
                  ZZ_OCENA.LO+=(ZA_NOTA.WARTOSC<>0);
                  {? ZA_NOTA.WARTOSC>0
                  || {? ZA_NOTA.WARTOSC<_ex || ZZ_OCENA.CLO+=1
                     |? ZA_NOTA.WARTOSC=_ex || ZZ_OCENA.CEX+=1
                     |? ZA_NOTA.WARTOSC>_ex || ZZ_OCENA.CHI+=1
                     ?}
                  ?}
               ?};
               _loop:=ZA_NOTA.f_next()
            !};
            {? _exc
            || ZZ_OCENA.EX:=(_exs/_exc)$2
            ?};
            ZA_NOTA.f_clear();
            ZA_NOTA.cntx_pop();
            ZZ_OCENA.put()
         ?};
         _TAB.cntx_pop();
         obj_del(_TAB)
      || ZZ_DOK.clear;
         {? _owner=null | ~exec('seek_dok','phr_tab',_owner)
         || ZA_TEST.cntx_pop();
            ZA_SKL.cntx_pop();
            ZZ_DOK.cntx_pop();
            ZZ_OCENA.cntx_pop();
            return
         ?};
         _MASTER:=($ZZ_DOK.KLASA)();
         _MASTER.cntx_psh();
         _MASTER.index('ZZ_DOK');
         {? ~_MASTER.find_key(ref_name(_owner),_owner)
         || _MASTER.cntx_pop();
            ZA_TEST.cntx_pop();
            ZA_SKL.cntx_pop();
            ZZ_DOK.cntx_pop();
            ZZ_OCENA.cntx_pop();
            return()
         ?};

         _TAB:=($_arg.table)();
         _TAB.cntx_psh();
         _TAB.prefix();
         {? _arg.ref & _TAB.seek(_arg.ref)
         || ($(_arg.table+'.'+_arg.field+'()'))();
:           wylicz wartość oceny bytu określonych w typie właściwym dla składowej oceny
            _joins:=ZA_TYP.memo_txt(,1,'F_JOINS');
            _where:=ZA_TYP.memo_txt(,1,'F_WHERE');
            _where+=' and ZA_TEST.REFERENCE in (select ZA_SKL.ZA_TEST from ZA_SKL where ZA_SKL.ZA_TYP=:_b)';
            {? _joins<>'' & _where<>''
            || ZA_TEST.f_set(,_joins,_where,_TAB.ref(),ZA_SKL.ZA_TYP);
               exec('zz_ocena_cnt','phr_tab',ZZ_OCENA.ref());
               ZA_TEST.f_clear()
            ?}
         ?};

         _MASTER.cntx_pop();
         _TAB.cntx_pop();
         obj_del(_MASTER);
         obj_del(_TAB)
      ?}
   ?};
   obj_del(_arg);
   _loop:=ZA_SKL.next()
!};
ZZ_DOK.cntx_pop();
ZA_SKL.cntx_pop();
ZZ_OCENA.cntx_pop();
ZA_TEST.cntx_pop()


\za_nota_uu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Aktualizuje ocenę na wyższym "poziomie" po zmianie noty.
::   WE: _a - wskazanie na pytanie
::  OLD: \za_nota_uu/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
ZA_TEST.cntx_psh();

{? {? #ZA_TEST.ref<>_a || ~ZA_TEST.seek(_a,) ?} | ~ZA_TEST.ZZ_OCENA | ZA_TEST.ZA_ZEST().TYP().KOD<>'O'
|| ZA_TEST.cntx_pop;
   return(1)
?};

ZA_TEST.f_clear();
ZA_TEST.index('NUMER');
ZA_TEST.prefix(ZA_TEST.ZA_ZEST,_a);
exec('zz_ocena_cnt','phr_tab',ZA_TEST.ZZ_OCENA);

ZA_TEST.cntx_pop()


\za_nota_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Aktualizuje ocenę po zmianie noty - obsługa specjalnych przypadków.
::   WE: _a - wskazanie na właściciela formularza
::  OLD: \za_nota_sp/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(null) | _a=null
|| return()
?};
ZZ_DOK.cntx_psh();
ZZ_DOK.clear();
{? ~exec('seek_dok','phr_tab',_a)
|| ZZ_DOK.cntx_pop();
   return()
?};

{? ZZ_DOK.KLASA='RP_OSET'
: ocena ogólna kandydata na podstawie ocen etapów
|| RP_OSET.cntx_psh();
   RP_OSET.index('ZZ_DOK');
   RP_OSET.prefix();
   {? ~RP_OSET.find_key(ref_name(_a),_a)
   || RP_OSET.cntx_pop();
      ZZ_DOK.cntx_pop();
      return()
   ?};
   _so:=_lo:=_ex:=0;
   _clo:=_cex:=_chi:=_cnt:=0;
   ZZ_OCENA.clear();
   RP_OSOBA.cntx_psh();
   RP_OSOBA.prefix();
   RP_OSET.RP_OSOBA();
   RP_OSET.index('FK_OSOBA');
   RP_OSET.prefix(RP_OSOBA.ref());
   _loop:=RP_OSET.first();
   {!
   |? _loop
   |! {? RP_OSET.ZZ_OCENA().LO
      || _so+=ZZ_OCENA.SO;
         _lo+=ZZ_OCENA.LO;
         _ex+=ZZ_OCENA.EX;
         _clo+=ZZ_OCENA.CLO;
         _cex+=ZZ_OCENA.CEX;
         _chi+=ZZ_OCENA.CHI;
         _cnt+=(ZZ_OCENA.LO<>0)
      ?};
      _loop:=RP_OSET.next()
   !};
   {? RP_OSOBA.ZZ_OCENA
   || RP_OSOBA.ZZ_OCENA();
      ZZ_OCENA.SO:=_so;
      ZZ_OCENA.LO:=_lo;
      ZZ_OCENA.EX:={? _cnt || _ex/_cnt ?}$2;
      ZZ_OCENA.CLO:=_clo;
      ZZ_OCENA.CEX:=_cex;
      ZZ_OCENA.CHI:=_chi;
      ZZ_OCENA.put()
   ?};
   RP_OSOBA.cntx_pop();
   RP_OSET.cntx_pop()
?};
ZZ_DOK.cntx_pop()


\za_skl_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZA_SKL.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZA_SKL) & exec('za_skl_chk','phr_za_tab',0)


\za_skl_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZA_SKL.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_SKL*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZA_SKL) & exec('za_skl_chk','phr_za_tab',1)


\za_skl_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZA_SKL.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\za_skl_moda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.30]
:: OPIS: Wywoływana z wyzwalaczy po dołącz i popraw.
::  OLD: \za_skl_aw/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
exec('za_skl_war','phr_za_tab',ZA_SKL.ZA_TEST().ZA_ZEST().ZZ_DOK);
exec('za_skl_war','phr_za_tab',ZA_SKL.ZA_TEST().ZA_ZEST().ZZ_LINK)


\za_skl_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.30]
:: OPIS: Wywoływana z wyzwalaczy po dołącz i popraw.
::  OLD: \za_skl_war/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| ZA_WAR.cntx_psh();
   ZA_WAR.index('UNIQUE');
   ZA_WAR.prefix(ref_name(_a),_a);
   {? ~ZA_WAR.find_key(ZA_SKL.ZA_TYP)
   || ZA_WAR.blank(1);
      ZA_WAR.ZZ_LINK:=_a;
      ZA_WAR.ZA_TYP:=ZA_SKL.ZA_TYP;
      ZA_WAR.add()
   ?};
   ZA_WAR.cntx_pop()
?}


\za_skl_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZA_SKL.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_adda','phr_tab',ZA_SKL,_a)
|| exec('za_skl_moda','phr_za_tab')
?};
~~


\za_skl_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZA_SKL.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_SKL*'PUTA|'
|| return()
?};
{? exec('dok_puta','phr_tab',ZA_SKL,_a)
|| exec('za_skl_moda','phr_za_tab')
?};
~~


\za_skl_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZA_SKL.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\za_skl_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::  OLD: \init_table/zz_setup.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_SKL*'CHK|'
|| return(1)
?};
_put:=var_pres('_a')=type_of(0) & _a;
__CHK.validate(ZA_SKL,$("_a.table(_b,"+$_put+",,'ZA_TYP')"))


\za_test_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZA_TEST.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \za_test_ba/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_addb','phr_tab',ZA_TEST) & exec('za_test_chk','phr_za_tab')
|| _numer:=0;
   ZA_TEST.cntx_psh;
   ZA_TEST.index('NUMER');
   ZA_TEST.prefix(ZA_TEST.ZA_ZEST,ZA_TEST.ZA_TEST);
   {? ZA_TEST.ZA_TEST
   || {? ZA_TEST.last()
      || _numer:=ZA_TEST.NUMER
      ?}
   || _loop:=ZA_TEST.first();
      {!
      |? _loop & ~ZA_TEST.ZA_TEST
      |! _numer:=ZA_TEST.NUMER;
         _loop:=ZA_TEST.next()
      !}
   ?};
   ZA_TEST.cntx_pop();
   ZA_TEST.NUMER:=_numer+1;
   exec('za_test_modb','phr_za_tab')
?}


\za_test_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZA_TEST.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_TEST*'PUTB|'
|| return(1)
?};
{? exec('dok_putb','phr_tab',ZA_TEST) & exec('za_test_chk','phr_za_tab',1)
|| exec('za_test_modb','phr_za_tab')
?}


\za_test_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZA_TEST.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \za_test_del/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZZ_KOMPK,'WARTOSC',ZA_TEST.NP_DOK,ZA_TEST.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPS,'WARTOSC',ZA_TEST.NP_DOK,ZA_TEST.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPZ,'UNIQUE',ZA_TEST.NP_DOK,ZA_TEST.ZZ_DOK) &
exec('del_tmp','#table',ZA_TEST,'ZA_TEST',ZA_TEST.ref()) &
exec('del_ndx','#table',ZA_NOTA,'ZA_FORM',ZA_TEST.ref()) &
exec('del_ndx','#table',ZA_NOTAO,'NUMER',ZA_TEST.ref) &
exec('usun_nota','phr_dane',ZA_FORM.ref()) &
exec('del_ndx','#table',ZA_SKL,'OPIS',ZA_TEST.ref())


\za_test_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZA_TEST.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_adda','phr_tab',ZA_TEST,_a)
|| exec('za_met_add','phr_tab',ZA_TEST)
?};
~~


\za_test_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZA_TEST.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_TEST*'PUTA|'
|| return()
?};
{? ~exec('dok_puta','phr_tab',ZA_TEST,_a)
|| return()
?};

exec('za_met_mod','phr_tab',ZA_TEST);

{? ZA_TEST.ZA_TEST<>bfld('ZA_TEST')
|| exec('za_test_rnum','phr_za_tab');
   ZA_TEST.NUMER:=1;
   ZA_TEST.put()
|? ZA_TEST.NUMER=bfld('NUMER')
|| return()
?};

ZA_TEST.cntx_psh();
ZA_TEST.index('NUMER');
ZA_TEST.prefix(ZA_TEST.ZA_ZEST,ZA_TEST.ZA_TEST,ZA_TEST.NUMER);
{? ZA_TEST.size>1
|| ZA_TEST.prefix();
   ZA_TEST.NUMER+=1;
   ZA_TEST.put()
?};
ZA_TEST.cntx_pop();

ZA_TEST.get();

{? ZA_TEST.ZZ_OCENA=null & bfld('ZZ_OCENA')<>null
|| ZZ_OCENA.clear();
   {? ZZ_OCENA.seek(bfld('ZZ_OCENA'))
   || ZZ_OCENA.del()
   ?}
?};
~~


\za_test_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZA_TEST.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? do_state()=1 & _a
|| {? ~exec('del_ndx','#table',ZZ_OCENA,'ZZ_LINK',bfld('NP_DOK'),bfld('ZZ_DOK'))
   || return()
   ?}
?};
{? ~exec('dok_dela','phr_tab',_a)
|| return()
?};

exec('za_test_rnum','phr_za_tab');


~~


\za_test_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Sprawdza wypeŁnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::  OLD: \za_test_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_TEST*'CHK|'
|| return(1)
?};
1


\za_test_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Wywoływana z wyzwalaczy przed dołącz i popraw, przed przeprowadzeniem testow poprawności rekordu.
::  OLD: \za_test_bw/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZA_TEST.ZA_ZEST().ZZ_LINK=null | ZA_TEST.ZZ_MET().RODZAJ='O'
|| ZA_TEST.ZZ_OCENA:=null

|? ZA_TEST.ZZ_OCENA=null
|| ZZ_OCENA.blank();
   {? ZZ_OCENA.add()
   || ZA_TEST.ZZ_OCENA:=ZZ_OCENA.ref()
   ?}
?};

_indeks:='';
{? ZA_TEST.ZA_TEST
|| ZA_TEST.cntx_psh();
   ZA_TEST.prefix();
   {? ZA_TEST.seek(ZA_TEST.ZA_TEST,)
   || _indeks:=ZA_TEST.INDEKS;
      {? ZA_TEST.ZA_ZEST().TYP().KOD='O'
      || {? ZA_TEST.ZZ_MET<>null
         || ZA_TEST.ZZ_MET:=null;
            ZA_TEST.put
         ?}
      || {? ZA_TEST.RODZ<>null
         || ZA_TEST.RODZ:=null();
            ZA_TEST.PKT:=0;
            ZA_TEST.put()
         ?}
      ?}
   ?};
   ZA_TEST.cntx_pop()
?};
_ind:='';
{? +$ZA_TEST.NUMER=2 | _indeks<>''
|| ZA_TEST.INDEKS:=_indeks+$ZA_TEST.NUMER+'.'
|? +$ZA_TEST.NUMER=1
|| _ind:='0';
   ZA_TEST.INDEKS:=_ind+_indeks+$ZA_TEST.NUMER+'.'
?};
1


\za_test_rnum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Aktualizuje numeracje pytań.
::  OLD: \za_test_un/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
_test:=bfld('ZA_TEST');
_numer:=bfld('NUMER');
_count:=0;
ZA_TEST.cntx_psh;
ZA_TEST.index('NUMER');
ZA_TEST.prefix(bfld('ZA_ZEST'),_test);
{!
|? ZA_TEST.find_ge(_numer+=1) & _test=ZA_TEST.ZA_TEST
|! ZA_TEST.NUMER:=_numer-1;
   _count+=1;
   ZA_TEST.put()
!};
ZA_TEST.cntx_pop();
ZA_TEST.get()


\za_typ_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZA_TYP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZA_TYP) & exec('za_typ_chk','phr_za_tab',0)


\za_typ_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZA_TYP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_TYP*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZA_TYP) & exec('za_typ_chk','phr_za_tab',1)


\za_typ_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZA_TYP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\za_typ_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZA_TYP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZA_TYP,_a);
~~


\za_typ_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZA_TYP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_TYP*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZA_TYP,_a);
~~


\za_typ_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZA_TYP.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\za_typ_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.30]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::  OLD: \za_typ_nn/zz_table.fml
::  OLD: \za_typ_ck/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_TYP*'CHK|'
|| return(1)
?};
_put:=var_pres('_a')=type_of(0) & _a;
__CHK.validate(ZA_TYP,$("_a.table(_b,"+$_put+",,'SYMBOL','OPIS')"))


\za_war_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZA_WAR.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_addb','phr_tab',ZA_WAR)
|| exec('zz_ocena_add','phr_tab',ZA_WAR,'ZZ_OCENA');
   exec('za_war_chk','phr_za_tab')
?}


\za_war_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZA_WAR.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_WAR*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZA_WAR) & exec('za_war_chk','phr_za_tab')


\za_war_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZA_WAR.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\za_war_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZA_WAR.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZA_WAR,_a);
~~


\za_war_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZA_WAR.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_WAR*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZA_WAR,_a);
~~


\za_war_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZA_WAR.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \za_war_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? do_state()=1 & _a
|| {? exec('del_ndx','#table',ZZ_OCENA,'ZZ_LINK',bfld('NP_DOK'),bfld('ZZ_DOK'))
   || exec('dok_dela','phr_tab',_a)
   ?}
?};
~~


\za_war_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.30]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::  OLD: \init_table/zz_setup.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_WAR*'CHK|'
|| return(1)
?};
__CHK.record(ZA_WAR)=''


\za_zest_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZA_ZEST.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_addb','phr_tab',ZA_ZEST) | ~exec('za_zest_chk','phr_za_tab')
|| return(0)
?};

exec('zz_ocena_add','phr_tab',ZA_ZEST);

_klasa:='@.'+ZA_ZEST.ZZ_LINK().KLASA;
{? ZA_ZEST.ZZ_LINK & _klasa<>!ZZ_TMPT & _klasa<>!ZZ_TEMP
|| ZA_INFO.blank();
   {? ZA_INFO.add()
   || ZA_ZEST.ZA_INFO:=ZA_INFO.ref()
   ?}
?};
1


\za_zest_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZA_ZEST.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_ZEST*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZA_ZEST) & exec('za_zest_chk','phr_za_tab',1)


\za_zest_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZA_ZEST.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \za_zest_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZA_ZEST.TYP().KOD='T' | ZA_ZEST.TYP().KOD='S'
|| exec('usun_notaw','phr_dane',ZA_ZEST.ref())
?};
SZK_OPIS.cntx_psh();
SZK_OPIS.clear();
SZK_OPIS.f_set(,,'BS_TMP=:_a or BS_ANK=:_a',ZA_ZEST.ref());
_loop:=SZK_OPIS.f_first();
{!
|? _loop
|! {? SZK_OPIS.BS_TMP=ZA_ZEST.ref()
   || SZK_OPIS.BS_TMP:=null;
      SZK_OPIS.put()
   ?};
   {? SZK_OPIS.BS_ANK=ZA_ZEST.ref()
   || SZK_OPIS.BS_ANK:=null;
      SZK_OPIS.put()
   ?};
   _loop:=SZK_OPIS.f_next()
!};
SZK_OPIS.f_clear();
SZK_OPIS.cntx_pop();

exec('set_null','#table',ZZ_OCENA,'ZZ_LINK',ZA_ZEST.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPK,'WARTOSC',ZA_ZEST.NP_DOK,ZA_ZEST.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPS,'WARTOSC',ZA_ZEST.NP_DOK,ZA_ZEST.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPZ,'UNIQUE',ZA_ZEST.NP_DOK,ZA_ZEST.ZZ_DOK) &
exec('del_ndx','#table',ZA_FORM,'ZA_ZEST',ZA_ZEST.ref()) &
exec('del_ndx','#table',ZA_TEST,'NUMER',ZA_ZEST.ref()) &
exec('del_ndx','#table',ZA_WAR,'UNIQUE',ZA_ZEST.NP_DOK,ZA_ZEST.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KRYT,'UNIQUE',ZA_ZEST.NP_DOK,ZA_ZEST.ZZ_DOK) &
exec('del_ndx','#table',WT_ZES,'S1',ZA_ZEST.ref())


\za_zest_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZA_ZEST.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \za_zest_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? do_state()=1 & _a
|| {? exec('dok_adda','phr_tab',ZA_ZEST,_a)
   || exec('za_met_add','phr_tab',ZA_ZEST)
   ?}
?};
~~


\za_zest_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZA_ZEST.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \za_zest_ap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_ZEST*'PUTA|'
|| return()
?};
{? ~exec('dok_puta','phr_tab',ZA_ZEST,_a)
|| return()
?};

_prog:=ZA_ZEST.PROG;
{? ZA_ZEST.TYP().KOD='T' & _prog<>bfld('PROG') & ZA_ZEST.ZZ_LINK().KLASA='SZK_OPIS'
|| exec('akt_prog','phr_dane',0,_prog)
?};

{? ZA_ZEST.PKT<>bfld('PKT')
|| ZA_TEST.cntx_psh();
   ZA_TEST.index('NUMER');
   ZA_TEST.prefix(ZA_ZEST.ref());
   _loop:=ZA_TEST.first();
   {!
   |? _loop
   |! {? ZA_TEST.RODZ().KOD<>'O'
      || ZA_TEST.PKT:=0;
         ZA_TEST.put();
         ZA_NOTAO.cntx_psh();
         ZA_NOTAO.index('NUMER');
         ZA_NOTAO.prefix(ZA_TEST.ref());
         _loop:=ZA_NOTAO.first();
         {!
         |? _loop
         |! ZA_NOTAO.ODPT:=0;
            ZA_NOTAO.TRUE:='N';
            ZA_NOTAO.put();
            _loop:=ZA_NOTAO.next()
         !};
         ZA_NOTAO.cntx_pop()
      ?};
      _loop:=ZA_TEST.next()
   !};
   ZA_TEST.cntx_pop()
?};

{? ZA_ZEST.DOBOR<>bfld('DOBOR') & ZA_ZEST.DOBOR='N'
|| exec('del_ndx','#table',ZZ_KRYT,'NAZWA',ZA_ZEST.NP_DOK,ZA_ZEST.ZZ_DOK)
?};

{? ZA_ZEST.SLO_KOD<>bfld('SLO_KOD') & ZA_ZEST.SLO_KOD().KOD='Z'
|| ZA_FORM.cntx_psh();
   ZA_FORM.index('ZA_ZEST');
   ZA_FORM.prefix(ZA_ZEST.ref());
   _loop:=ZA_FORM.first();
   {!
   |? _loop
   |! {? exec('za_form_zamknij_b','phr_widok',1)
      || ZA_FORM.put();
         _formID:=ZA_FORM.ID;
         _formula:=''+"exec('ank_por','ank_por','"+_formID+"')";
         BD_EXEC.cntx_psh();
         BD_EXEC.index('FORMULA');
         {? BD_EXEC.find_key(_formula)
         || BD_EXEC.del()
         ?};
         BD_EXEC.cntx_pop();
         {? ZA_FORM.ZA_ZEST().ZZ_LINK().KLASA='SZK_OPIS'
         || exec('ank_akc','phr_dane',ZA_FORM.ref())
         ?}
      ?};
      _loop:=ZA_FORM.next()
   !};
   ZA_FORM.cntx_pop()
?};
exec('za_met_mod','phr_tab',ZA_ZEST);
~~


\za_zest_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZA_ZEST.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \za_zest_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? do_state()=1 & _a
|| {? exec('del_ndx','#table',ZZ_OCENA,'ZZ_LINK',bfld('NP_DOK'),bfld('ZZ_DOK'))
   || exec('dok_dela','phr_tab',_a)
   ?}
?};
~~


\za_zest_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::  OLD: \za_zest_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_ZEST*'CHK|'
|| return(1)
?};
_put:=var_pres('_a')=type_of(0) & _a;
{? ZA_ZEST.TYP().KOD='O'
|| __CHK.validate(ZA_ZEST,$("_a.table(_b,"+$_put+",,'NAZWA','ZA_TYP','ZZ_MET')"))
|| __CHK.validate(ZA_ZEST,$("_a.table(_b,"+$_put+",,'NAZWA','ZA_TYP')"))
?}


\za_notao_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZA_NOTAO.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
_numer:=0;
ZA_NOTAO.cntx_psh();
ZA_NOTAO.index('NUMER');
ZA_NOTAO.prefix(ZA_NOTAO.ZA_TEST);
{? ZA_NOTAO.ZA_TEST
|| {? ZA_NOTAO.last()
   || _numer:=ZA_NOTAO.NUMER
   ?}
|| _loop:=ZA_NOTAO.first();
   {!
   |? _loop & ~ZA_NOTAO.ZA_TEST
   |! _numer:=ZA_NOTAO.NUMER;
      _loop:=ZA_NOTAO.next()
   !}
?};
ZA_NOTAO.cntx_pop();
ZA_NOTAO.NUMER:=_numer+1;
exec('dok_addb','phr_tab',ZA_NOTAO) & exec('za_notao_chk','phr_za_tab',0)


\za_notao_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZA_NOTAO.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_NOTAO*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZA_NOTAO) & exec('za_notao_chk','phr_za_tab',1)


\za_notao_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZA_NOTAO.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\za_notao_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZA_NOTAO.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \za_nota_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_adda','phr_tab',ZA_NOTAO,_a)
|| return()
?};
{? ZA_TEST.ZA_ZEST().PKT='T'
|| _suma:=0;
   ZA_NOTAO.cntx_psh();
   ZA_NOTAO.index('NUMER');
   ZA_NOTAO.prefix(ZA_NOTAO.ZA_TEST);
   _loop:=ZA_NOTAO.first();
   {!
   |? _loop
   |! _suma+=ZA_NOTAO.ODPT;
      _loop:=ZA_NOTAO.next()
   !};
   ZA_TEST.PKT:=_suma;
   ZA_TEST.put();
   ZA_NOTAO.cntx_pop()
?};
~~


\za_notao_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZA_NOTAO.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \za_nota_ap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_NOTAO*'PUTA|'
|| return()
?};
{? ~exec('dok_puta','phr_tab',ZA_NOTAO,_a)
|| return()
?};
ZA_NOTAO.ZA_TEST();
{? ZA_TEST.ZA_ZEST().PKT='T'
|| _suma:=0;
   ZA_NOTAO.cntx_psh();
   ZA_NOTAO.index('NUMER');
   ZA_NOTAO.prefix(ZA_TEST.ref());
   _loop:=ZA_NOTAO.first();
   {!
   |? _loop
   |! _suma+=ZA_NOTAO.ODPT;
      _loop:=ZA_NOTAO.next()
   !};
   ZA_TEST.PKT:=_suma;
   ZA_TEST.put();
   ZA_NOTAO.cntx_pop()
?};

{? ZA_NOTAO.NUMER<>bfld('NUMER')
|| ZA_NOTAO.cntx_psh();
   ZA_NOTAO.index('NUMER');
   ZA_NOTAO.prefix(ZA_NOTAO.ZA_TEST,ZA_NOTAO.NUMER);
   {? ZA_NOTAO.size>1
   || ZA_NOTAO.prefix;
      ZA_NOTAO.NUMER+=1;
      ZA_NOTAO.put
   ?};
   ZA_NOTAO.cntx_pop
?};
~~


\za_notao_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZA_NOTAO.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \za_notao_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
exec('za_notao_un','phr_za_tab',ZA_NOTAO,ZA_NOTAO.NUMER,ZA_NOTAO.ZA_TEST);

{? ZA_NOTAO.ZA_TEST().ZA_ZEST().PKT='T'
|| _suma:=0;
   ZA_NOTAO.cntx_psh();
   ZA_NOTAO.index('NUMER');
   ZA_NOTAO.prefix(ZA_NOTAO.ZA_TEST);
   _loop:=ZA_NOTAO.first();
   {!
   |? _loop
   |! _suma+=ZA_NOTAO.ODPT;
      _loop:=ZA_NOTAO.next()
   !};
   ZA_TEST.PKT:=_suma;
   ZA_TEST.put();
   ZA_NOTAO.cntx_pop()
?};
{? ~exec('dok_dela','phr_tab',_a)
|| return()
?};
~~


\za_notao_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_NOTAO*'CHK|'
|| return(1)
?};

_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};
__CHK.validate(ZA_NOTAO,
   $("_a.table(_b,"+$_mode+",,'TRESC')")
)


\za_notao_un
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Aktualizuje numeracje odpowiedzi.
::----------------------------------------------------------------------------------------------------------------------
_count:=0;
ZA_NOTAO.cntx_psh();
ZA_NOTAO.index('NUMER');
ZA_NOTAO.prefix(_c);
{!
|? ZA_NOTAO.find_ge(_b+=1)
|! ZA_NOTAO.NUMER:=_b-1;
   _count+=1;
   ZA_NOTAO.put()
!};
ZA_NOTAO.cntx_pop();
ZA_NOTAO.get()


\za_notaw_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_NOTAW*'CHK|'
|| return(1)
?};
__CHK.record(ZA_NOTAW,,'TRESC','ZA_ZEST')=''


\za_notaw_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZA_NOTAW.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZA_NOTAW) & exec('za_notaw_chk','phr_za_tab',0)


\za_notaw_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZA_NOTAW.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_NOTAW*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZA_NOTAW) & exec('za_notaw_chk','phr_za_tab',1)


\za_notaw_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZA_NOTAW.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\za_notaw_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZA_NOTAW.
::   WE: _a - wartość przekazywana jako argument _a do formuł wyzwalaczy "po"
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZA_NOTAW*'PUTA|'
|| return()
?};
{? ~exec('dok_puta','phr_tab',ZA_NOTAW,_a)
|| return()
?};
~~


\za_notaw_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZA_NOTAW.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\za_notaw_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZA_NOTAW.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_adda','phr_tab',ZA_NOTAW,_a)
|| return()
?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:39 1ba617c3226ee6839b857c02ec914f0d3f3976687fd6403fc7fdcd6ba11a430bb76e7f71ec881b6d0c9b7aa38d1c78b1c0967d4dc065d9a347fd2ffffc450803e499211c932fd854dc2f9822a2b9021c9acc3f379daad804682869e3e2f80d8833e808e00de3673a02c6b38970accd9f86994f617dc1edf3dfcca6168a12b10d
