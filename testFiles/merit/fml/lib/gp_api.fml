:!UTF-8
:: (c) Asseco Business Solutions S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: gp_api.fml [22.26]
:: Utworzony: 28.10.2021
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły obsługujące grupy uprawnień.
::======================================================================================================================


\_def_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(GP_DEF,
   $("_a.table(_b,"+$_mode+",,'FIRMA','SYMBOL','OPIS')")
)


\_def_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli GP_DEF.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_def_chk','gp_api',0)


\_def_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz po dołączeniu wiersza tabeli GP_DEF.
::   WE: _a [INTEGER] - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: podstawowy warunek dalszego działania
{? ~_a | do_state()<>1 || return() ?};

GP_SYS.cntx_psh();
GP_SYS.index('DEF_GRP');
GP_SYS.prefix(GP_DEF.ref());
GP_GRP.cntx_psh();
GP_GRP.index('SYMBOL');
GP_GRP.prefix(exec('ref_firma','ustawienia'));

_loop:=GP_GRP.first();
{!
|? _loop
|! {? ~GP_SYS.find_key(GP_GRP.ref())
   || GP_SYS.blank();
      GP_SYS.GP_GRP:=GP_GRP.ref();
      GP_SYS.GP_DEF:=GP_DEF.ref();
      GP_SYS.add()
   ?};
   _loop:=GP_GRP.next()
!};

GP_GRP.cntx_pop();
GP_SYS.cntx_pop();
~~


\_def_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli GP_DEF.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_def_chk','gp_api',1)


\_def_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz przed usunięciem wiersza tabeli GP_DEF.
::   WE:
::   WY: 0/1 - wiersz może/nie może być usunięty
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',GP_SYS,'DEF_GRP',GP_DEF.ref())


\_grp_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(GP_GRP,
   $("_a.table(_b,"+$_mode+",,'FIRMA','SYMBOL','OPIS')")
)


\_grp_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli GP_GRP.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_grp_chk','gp_api',0)


\_grp_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz po dołączeniu wiersza tabeli GP_GRP.
::   WE: _a [INTEGER] - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: podstawowy warunek dalszego działania
{? ~_a | do_state()<>1 || return() ?};

GP_SYS.cntx_psh();
GP_SYS.index('UNIQUE');
GP_SYS.prefix(GP_GRP.ref());
GP_DEF.cntx_psh();
GP_DEF.index('SYMBOL');
GP_DEF.prefix(exec('ref_firma','ustawienia'));

_loop:=GP_DEF.first();
{!
|? _loop
|! {? ~GP_SYS.find_key(GP_DEF.ref())
   || GP_SYS.blank();
      GP_SYS.GP_GRP:=GP_GRP.ref();
      GP_SYS.GP_DEF:=GP_DEF.ref();
      GP_SYS.add()
   ?};
   _loop:=GP_DEF.next()
!};

GP_DEF.cntx_pop();
GP_SYS.cntx_pop();
~~


\_grp_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli GP_GRP.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawnl
::----------------------------------------------------------------------------------------------------------------------
exec('_grp_chk','gp_api',1)


\_grp_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz przed usunięciem wiersza tabeli GP_GRP.
::   WE:
::   WY: 0/1 - wiersz może/nie może być usunięty
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',GP_DOM,'SYMBOL',GP_GRP.ref()) &
exec('del_ndx','#table',GP_SYS,'UNIQUE',GP_GRP.ref())


\_dom_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Przed dołączeniem lub poprawieniem wiersza tabeli GP_DOM.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
{? GP_DOM.GP_GRP<>null
|| GP_GRP.cntx_psh();
   GP_DOM.FIRMA:=GP_DOM.GP_GRP().FIRMA;
   GP_GRP.cntx_pop()
?};
1


\_dom_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(GP_DOM,
   $("_a.table(_b,"+$_mode+",,'FIRMA','GP_GRP','B_DOMAIN')")
)


\_dom_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli GP_DOM.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_dom_modb','gp_api');
exec('_dom_chk','gp_api',0)


\_dom_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli GP_DOM.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_dom_modb','gp_api');
exec('_dom_chk','gp_api',1)


\_sys_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(GP_SYS,
   $("_a.table(_b,"+$_mode+",,'GP_GRP','GP_DEF')")
)


\_sys_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli GP_SYS.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_sys_chk','gp_api',0)


\_sys_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz po dołączeniu wiersza tabeli GP_SYS.
::   WE: _a [INTEGER] - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: podstawowy warunek dalszego działania
{? ~_a | do_state()<>1 || return() ?};

exec('upr_uzupelnij','gp_api',GP_SYS.ref());
~~


\_sys_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli GP_SYS.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_sys_chk','gp_api',1)


\_sys_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz przed usunięciem wiersza tabeli GP_SYS.
::   WE:
::   WY: 0/1 - wiersz może/nie może być usunięty
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',GP_UPR,'UNIQUE',GP_SYS.ref())


\_upr_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Przed dołączeniem lub poprawieniem wiersza tabeli GP_UPR.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
{? GP_UPR.GP_SYS<>null
|| GP_SYS.cntx_psh();
   GP_GRP.cntx_psh();
   GP_UPR.GP_SYS();
   GP_UPR.FIRMA:=GP_SYS.GP_GRP().FIRMA;
   GP_UPR.GP_GRP:=GP_SYS.GP_GRP;
   GP_UPR.GP_DEF:=GP_SYS.GP_DEF;
   GP_GRP.cntx_pop();
   GP_SYS.cntx_pop()
|| GP_UPR.FIRMA:=null;
   GP_UPR.GP_GRP:=null;
   GP_UPR.GP_DEF:=null
?};
1


\_upr_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

exec('_upr_modb','gp_api');

__CHK.validate(GP_UPR,
   $("_a.table(_b,"+$_mode+",,'GP_SYS','USERS','DOSTEP')"),
   "_a.in_set(_b,'DOSTEP',,'T','N','X')"
)


\_upr_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli GP_UPR.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_upr_chk','gp_api',0)


\_upr_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli GP_UPR.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_upr_chk','gp_api',1)


\def_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Po edycji wiersza tabeli GP_DEF
::   WE:
::   WY: 1 w przypadku gdy rekord jest poprawny, akronim wymaganego pola lub 0 gdy doszło do powielenia klucza.
::----------------------------------------------------------------------------------------------------------------------
exec('_def_chk','gp_api',-menu_txt()='popraw')


\grp_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Po edycji wiersza tabeli GP_GRP
::   WE:
::   WY: 1 w przypadku gdy rekord jest poprawny, akronim wymaganego pola lub 0 gdy doszło do powielenia kluczml
::----------------------------------------------------------------------------------------------------------------------
exec('_grp_chk','gp_api',-menu_txt()='popraw')


\dom_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Akcja "Dołącz" okienka tabeli GP_DOM.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('dom_f_set','gp_api');
_BUF:=exec('wybierz_wiele','#b_domain');
exec('dom_f_clr','gp_api');

B_DOMAIN.cntx_psh();
_loop:=_BUF.first();
{!
|? _loop
|! GP_DOM.blank();
   {? B_DOMAIN.seek(_BUF.REF,,1)
   || GP_DOM.B_DOMAIN:=B_DOMAIN.ref();
      GP_DOM.add()
   ?};
   _loop:=_BUF.next()
!};
B_DOMAIN.cntx_pop();
~~


\dom_popraw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Akcja "Popraw" okienka tabeli GP_DOM.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
GP_DOM.get();
exec('dom_f_set','gp_api',,GP_DOM.B_DOMAIN);
_buf:=exec('wybierz','#b_domain',GP_DOM.B_DOMAIN().SYMBOL);
{? _buf.Ref<>null
|| GP_DOM.B_DOMAIN:=_buf.Ref;
   GP_DOM.put()
?};
exec('dom_f_clr','gp_api');
~~


\dom_f_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Ustawienie filtra na dziedziny przed rozpoczęciem edycji danych w tabeli GP_DOM.
::   WE: [_a] [INTEGER] - uwzględniaj/pomijaj* dziedziny dodane do GP_DOM
::       [_b] [_B_DOMAIN] - rekord dodatkowo uwzględniany w filtrze
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_not:={? var_pres('_a')<>type_of(0) | ~_a || 'not' || '' ?};

B_DOMAIN.prefix();
B_DOMAIN.f_set(
   'SYMBOL',,
   'B_DOMAIN.REFERENCE %1 in ('
   '  select GP_DOM.B_DOMAIN '
   '  from GP_DOM '
   '  where GP_DOM.FIRMA=:_a'
   ')'[_not],
   exec('ref_firma','ustawienia')
);
{? var_pres('_b')=type_of(null) & B_DOMAIN.seek(_b,,1)
|| B_DOMAIN.f_add()
?};
~~


\dom_f_clr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Przywrócenie stanu tabeli B_DOMAIN po zakończeniu edycji danych w tabeli GP_DOM.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
B_DOMAIN.f_clear();
~~


\sys_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Akcja "Dołącz" okienka tabeli GP_SYS.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
GP_DEF.cntx_psh();
exec('sys_f_set','gp_api',GP_GRP.ref());
_BUF:=exec('wybierz_def','gp_api',1);
exec('sys_f_clr','gp_api');

_loop:=_BUF.first();
{!
|? _loop
|! GP_SYS.blank();
   {? GP_DEF.seek(_BUF.REF,,1)
   || GP_SYS.GP_DEF:=GP_DEF.ref();
      GP_SYS.add()
   ?};
   _loop:=_BUF.next()
!};
GP_DEF.cntx_pop();
~~


\sys_popraw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Akcja "Popraw" okienka tabeli GP_SYS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
GP_SYS.get();
GP_DEF.cntx_psh();
exec('sys_f_set','gp_api',GP_SYS.GP_GRP,,GP_SYS.GP_DEF);
_BUF:=exec('wybierz_def','gp_api',,GP_SYS.GP_DEF);
{? _BUF.first() & GP_DEF.seek(_BUF.REF,,1)
|| GP_SYS.GP_DEF:=GP_DEF.ref();
   GP_SYS.put()
?};
exec('sys_f_clr','gp_api');
GP_DEF.cntx_pop();
~~


\sys_f_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Ustawienie filtra na definicje przed rozpoczęciem edycji danych w tabeli GP_SYS.
::   WE: [_a] [_GP_GRP] - wskazanie grupy dziedzin
::       [_b] [INTEGER] - uwzględniaj/pomijaj* definicje dodane do GP_SYS
::       [_c] [_GP_DEF] - rekord dodatkowo uwzględniany w filtrze
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_grp:=_a;
_not:={? var_pres('_b')<>type_of(0) | ~_b || 'not' || '' ?};

GP_DEF.prefix();
GP_DEF.f_set(
   'SYMBOL',,
   'GP_DEF.REFERENCE %1 in ('
   '  select GP_SYS.GP_DEF '
   '  from GP_SYS '
   '  where GP_SYS.GP_GRP=:_a'
   ')'[_not],
   _grp
);
{? var_pres('_c')=type_of(null) & GP_DEF.seek(_c,,1)
|| GP_DEF.f_add()
?};
~~


\sys_f_clr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Przywrócenie stanu tabeli GP_DEF po zakończeniu edycji danych w tabeli GP_SYS.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
GP_DEF.f_clear();
~~


\sys_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Po edycji wiersza tabeli GP_SYS
::   WE:
::   WY: 1 w przypadku gdy rekord jest poprawny, akronim wymaganego pola lub 0 gdy doszło do powielenia kluczml
::----------------------------------------------------------------------------------------------------------------------
exec('_sys_chk','gp_api',-menu_txt()='popraw')


\upr_nadaj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Nadanie uprawnienia.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
GP_UPR.DOSTEP:='T'


\upr_odbierz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Odebranie uprawnienia.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
GP_UPR.DOSTEP:='N'


\upr_zmien_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Zmiana aktualnego uprawnienia.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
GP_UPR.DOSTEP:={? GP_UPR.DOSTEP='N' || 'T' || 'N' ?}


\upr_zmien_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Po akcji zmiany uprawnienia.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
GP_UPR.put()


\upr_uzupelnij
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Uzupełnia listę uprawnień użytkowników o brakujące wpisy.
::   WE: _a [_GP_SYS] - wskazanie wykorzystania grupy uprawnień
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_sys:=_a;

GP_UPR.cntx_psh();
GP_UPR.index('UNIQUE');
GP_UPR.prefix(_sys);
USERS.cntx_psh();
USERS.index('EKIOSK');
USERS.prefix('T','N');

_loop:=USERS.first();
{!
|? _loop
|! {? ~GP_UPR.find_key(USERS.ref())
   || GP_UPR.blank();
      GP_UPR.GP_SYS:=_sys;
      GP_UPR.USERS:=USERS.ref();
      GP_UPR.add()
   ?};
   _loop:=USERS.next()
!};

USERS.cntx_pop();
GP_UPR.cntx_pop();
~~


\is_active
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Sprawdza, czy należy uwzględniać grupy uprawnień.
::   WE:
::   WY: 0/1 - nie/tak
::----------------------------------------------------------------------------------------------------------------------
PAR_SKID.get(365)='T'


\filtruj_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Ustawia filtr tabeli GP_DEF zgodnie z uprawnieniami użytkownika.
::   WE: _a [STRING] - kod dziedziny produktowej
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
GP_DEF.clear();
GP_DEF.f_set(
   'SYMBOL',
   'join GP_UPR using(GP_DEF.REFERENCE,GP_UPR.GP_DEF) '
   'join GP_GRP using(GP_UPR.GP_GRP,GP_GRP.REFERENCE) '
   'join GP_DOM using(GP_DOM.GP_GRP,GP_GRP.REFERENCE) '
   'join B_DOMAIN using(GP_DOM.B_DOMAIN,B_DOMAIN.REFERENCE)',
   'GP_DEF.FIRMA=:_a and GP_GRP.FIRMA=:_a and '
   'GP_UPR.USERS=:_b and GP_UPR.DOSTEP=\'T\' and '
   'B_DOMAIN.SYMBOL=\':_c\'',
   exec('ref_firma','ustawienia'),
   OPERATOR.USER,
   _a
);
~~


\wybierz_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Formuła obsługująca wybór definicji grup.
::   WE: [_a] [INTEGER] - wybór wielu definicji (domyślnie 0)
::       [_b] [_GP_DEF] - wskazanie bieżącego wiersza
::   WY: alias tabeli tymczasowej zawierającej wskazania wybranych grup (kolumna REF).
::UWAGA: uprawnienia nie są uwzględniane
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mul:=(var_pres('_a')=type_of(0) & _a<>0);
_cur:={? var_pres('_b')<>type_of(null) || null || _b ?};

_BUF:=tab_tmp(1,
   'NUM','INTEGER',,
   'REF','STRING[16]',
);

_wnd:=GP_DEF.mk_sel('Grupy uprawnień'@,'P',0,'#gp_def_wyb',,,,,'U');
GP_DEF.win_fld(_wnd,,'SYMBOL',,,-8,,,,,MS.comment(GP_DEF,'SYMBOL'));
GP_DEF.win_fld(_wnd,,'OPIS',,,-30,,,,,MS.comment(GP_DEF,'OPIS'));
GP_DEF.win_act(_wnd,,'Formuła','Wybierz'@,,'Wybór bieżącego zapisu'@,,
   "  _BUF:=params_get().BUF;
      _BUF.REF:=$GP_DEF.ref();
      _BUF.NUM+=1;
      _BUF.add();
      {? GP_DEF.sel_size()=0
      || sel_exit()
      ?}
   ",
   1,_mul,,
   {? _mul || "sel_exit()" || "" ?}
);
GP_DEF.win_act(_wnd,,'Szukaj');
GP_DEF.win_act(_wnd,,'Kolejność');

GP_DEF.cntx_psh();
GP_DEF.win_sel(_wnd);
params_set('BUF',_BUF);
GP_DEF.seek(_cur);
GP_DEF.select(,_cur<>null);
GP_DEF.cntx_pop();
GP_DEF.win_del(_wnd);

_BUF


\grp4dom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Ustala grupę dziedzin dla podanego kodu dziedziny.
::   WE: _a [STRING] - kod dziedziny
::       [_b] [_FIRMA] - wskazanie firmy, wpp bieżąca
::   WY: wskazanie wiersza tabeli GP_GRP lub null
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_dom:=exec('domain_ref','#b_domain',_a);
_fir:=
   {? var_pres('_b')<>type_of(null) | _b=null | ref_tab(_b)<>FIRMA
   || exec('ref_firma','ustawienia')
   || _b
   ?};

_ret:=null;

GP_DOM.cntx_psh();
GP_DOM.index('UNIQUE');
GP_DOM.prefix(_fir);
{? GP_DOM.find_key(_dom)
|| _ret:=GP_DOM.GP_GRP
?};
GP_DOM.cntx_pop();

_ret


\has_access
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Sprawdza, czy użytkownik ma dostęp do wskazanej grupy.
::   WE: _a [_GP_DEF] - wskazanie grupy uprawnień
::       _b [STRING] - kod dziedziny
::       [_c] [_USERS] - wskazanie użytkownika, wpp bieżący
::       [_d] [_FIRMA] - wskazanie firmy, wpp bieżąca
::   WY: 0/1 - brak dostępu
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_ntp:=type_of(null);
_def:=_a;
_dom:=_b;
_usr:=
   {? var_pres('_c')<>_ntp | _c=null | ref_tab(_c)<>USERS
   || OPERATOR.USER
   || _c
   ?};
_fir:=
   {? var_pres('_d')<>_ntp | _d=null | ref_tab(_d)<>FIRMA
   || exec('ref_firma','ustawienia')
   || _d
   ?};
_grp:=exec('grp4dom','gp_api',_dom,_fir);

_val:=0;

GP_UPR.cntx_psh();
GP_UPR.index('DOSTEP');
GP_UPR.prefix(_usr,_grp,_def);
_val:=GP_UPR.find_key('T');
GP_UPR.cntx_pop();

_val


\has_access_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Sprawdza, czy użytkownik ma dostęp do danych wskazanego współpracownika.
::   WE: [_a] [_P] - wskazanie współpracownika lub bieżący jeśli pominięty
::       _b [STRING] - kod dziedziny
::       [_c] [_USERS] - wskazanie użytkownika, wpp bieżący
::       [_d] [_FIRMA] - wskazanie firmy, wpp bieżąca
::   WY: 0/1 - brak dostępu
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_ntp:=type_of(null);
_dom:=_b;
_def:=null;
{? var_pres('_a')<>_ntp | _a=null | ref_tab(_a)<>P
|| _def:=P.GP_DEF
|? _a=P.ref()
|| _def:=P.GP_DEF
|| _ref:=P.ref();
   {? P.seek(_a,,1)
   || _def:=P.GP_DEF;
      {? P.ref()<>_ref
      || P.seek(_ref,,1)
      ?}
   ?}
?};
_usr:=
   {? var_pres('_c')<>_ntp | _c=null | ref_tab(_c)<>USERS
   || OPERATOR.USER
   || _c
   ?};
_fir:=
   {? var_pres('_d')<>_ntp | _d=null | ref_tab(_d)<>FIRMA
   || exec('ref_firma','ustawienia')
   || _d
   ?};

exec('has_access','gp_api',_def,_dom,_usr,_fir)


\has_access_p_h
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Sprawdza, czy użytkownik ma dostęp do danych wskazanego współpracownika.
::   WE: [_a] [_P] - wskazanie współpracownika lub bieżący jeśli pominięty
::       _b [DATE] - data, na którą ma być przeprowadzony test
::       _c [STRING] - kod dziedziny
::       [_c] [_USERS] - wskazanie użytkownika, wpp bieżący
::       [_e] [_FIRMA] - wskazanie firmy, wpp bieżąca
::   WY: 0/1 - brak dostępu
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_ntp:=type_of(null);
_dat:=_b;
_dom:=_c;
_emp:=
   {? var_pres('_a')<>_ntp | _a=null | ref_tab(_a)<>P
   || P.ref()
   || _a
   ?};
_usr:=
   {? var_pres('_d')<>_ntp | _d=null | ref_tab(_d)<>USERS
   || OPERATOR.USER
   || _d
   ?};
_fir:=
   {? var_pres('_e')<>_ntp | _e=null | ref_tab(_e)<>FIRMA
   || exec('ref_firma','ustawienia')
   || _e
   ?};

_val:=0;

P_GP.cntx_psh();
P_GP.index('OD');
P_GP.prefix(_emp);
{? P_GP.find_le(_dat)
|| _val:=exec('has_access','gp_api',P_GP.GP_DEF,_dom,_usr,_fir)
?};
P_GP.cntx_pop();

_val


\zlacz_gp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Zwraca fragment zapytania (złączenie) dla filtrowania z uwzględnieniem grup uprawnień.
::   WE: _a [STRING] - określenie prawej strony złączenia (np. 'P.GP_DEF') dla dyrektywy using
::   WY: fragment zapytania
::----------------------------------------------------------------------------------------------------------------------
'join GP_DEF using(%1,GP_DEF.REFERENCE) '
'join GP_UPR using(%1,GP_UPR.GP_DEF) '
'join GP_GRP using(GP_UPR.GP_GRP,GP_GRP.REFERENCE) '
'join GP_DOM using(GP_DOM.GP_GRP,GP_GRP.REFERENCE) '
[_a]


\filtr_gp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Zwraca fragment zapytania (warunek) dla filtrowania z uwzględnieniem grup uprawnień.
::   WE: _a [STRING] - kod dziedziny produktowej
::       [_b] - argument określający firmę ('_a')
::       [_c] - argument określający użytkownika ('_c')
::   WY: fragment zapytania
::----------------------------------------------------------------------------------------------------------------------
'GP_DEF.FIRMA=:%2 and GP_GRP.FIRMA=:%2 and '
'GP_UPR.USERS=:%3 and GP_UPR.DOSTEP=\'T\' and '
'GP_DOM.B_DOMAIN=\'%1\''[
   $exec('domain_ref','#b_domain',_a),
   {? var_pres('_b')=type_of('') & _b<>'' || _b || '_a' ?},
   {? var_pres('_c')=type_of('') & _c<>'' || _c || '_c' ?}
]


\no_limit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Formuła sprawdza, czy użytkownik ma dostęp do wszystkich grup ochron. Dodatkowo wyświetlany jest komunikat
::       jesli brak pełnego dostępu.
::   WE: _a [STRING] - kod dziedziny produktowej
::       _b - (opcjonalny) jeśli równy zero, komunikat o braku praw dostępu nie jest wyświetlany
::   WY: 1 - gdy użytkownik ma nieograniczone prawa do grup uprawnień
::       0 - gdy użytkownik nie ma praw dostępu do chociaż jednej grupy uprawnień
::----------------------------------------------------------------------------------------------------------------------
{? exec('is_active','gp_api')=0
|| return(1)
?};

_msg:=(var_pres('_b')<>type_of(0) | _b<>0);

{? var_pres('_a')<>type_of('') | _a=''
|| {? _msg
   || FUN.emsg(
         'Błąd wywołania formuły "%1".\n'
         'Symbol dziedziny musi być podany.'@
         ['no_limit']
      )
   ?};
   return(0)
?};

: sprawdzenie blokad
_UPR:=sql(
   'select count(*) as LOCKS '
   'from '
   '  GP_UPR join '
   '  GP_DEF using(GP_UPR.GP_DEF,GP_DEF.REFERENCE) join '
   '  GP_GRP using(GP_UPR.GP_GRP,GP_GRP.REFERENCE) join '
   '  GP_DOM using(GP_DOM.GP_GRP,GP_GRP.REFERENCE)'
   'where '
   '  GP_DEF.FIRMA=:_a and GP_GRP.FIRMA=:_a and '
   '  GP_UPR.USERS=:_b and GP_UPR.DOSTEP<>\'T\' and '
   '  GP_DOM.B_DOMAIN=:_c',
   exec('ref_firma','ustawienia'),
   OPERATOR.USER,
   exec('domain_ref','#b_domain',_a)
);

{? type_of(_UPR)<>type_of(SYSLOG)
|| return(0)
?};

_ret:=~(_UPR.first() & _UPR.LOCKS);
{? ~_ret & _msg
|| FUN.emsg(
      'Działanie funkcji zostanie przerwane ze względu na brak praw\n'
      'dostępu do wszystkich grup uprawnień w przedsiębiorstwie.'@
   )
?};
obj_del(_UPR);

_ret


\czy_usun_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Formuła sprawdza, czy wiersz tabeli P_GP może być usunięty.
::   WE: [_a] [_P_GP] - wskazanie wiersza tabeli P_GP w przypadku braku lub typu innego niż wskazanie, przyjęty będzie
::       bieżący
::       [_b] [_USERS] - wskazanie użytkownika, wpp bieżący
::       [_c] [_FIRMA] - wskazanie firmy, wpp bieżąca
::   WY: 0/1 - wiersz nie może być usunięty/wiersz można usunąć
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_ntp:=type_of(null);
_ref:=
   {? var_pres('_a')<>_ntp | _a=null | ref_tab(_a)<>P_GP
   || P_GP.ref()
   || _a
   ?};
_usr:=
   {? var_pres('_b')<>_ntp | _b=null | ref_tab(_b)<>USERS
   || OPERATOR.USER
   || _b
   ?};
_fir:=
   {? var_pres('_c')<>_ntp | _c=null | ref_tab(_c)<>FIRMA
   || exec('ref_firma','ustawienia')
   || _c
   ?};

_prolog:="
   P.cntx_psh();
   P_GP.cntx_psh();
   ~~
";
_epilog:="
   P_GP.cntx_pop();
   P.cntx_pop();
   _a
";

_prolog();

{? ~P_GP.seek(_ref,,1) |
   ~exec('has_access','gp_api',P_GP.GP_DEF,'PKD',_usr,_fir)
:: brak rekordu lub uprawnień do grupy w obszarze PKD
|| return(_epilog(0))
?};

:: czy wskazany wiersz jest jedynym dla pracownika?
P_GP.index('OD');
P_GP.prefix(P_GP.P);
_epilog(P_GP.size()>1)


\aktualizuj_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Dodaje/aktualizuje wpis w tabeli P_GP właściwy według danych w tabeli P.
::   WE: _a [_P] - wskazanie współpracownika
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_ref:=_a;

_prolog:="
   P.cntx_psh();
   P.clear();
   P_GP.cntx_psh();
   P_GP.index('OD');
   P_GP.prefix(_a);
   P.seek(_a) & P.GP_DEF<>null
";
_epilog:="
   P_GP.cntx_pop();
   P.cntx_pop();
   ~~
";

{? ~_prolog(_ref)
|| _epilog();
   return()
?};

{? ~P_GP.first()
:: uzupełnij
|| P_GP.blank();
   P_GP.OD:=P.DZA;
   P_GP.GP_DEF:=P.GP_DEF;
   P_GP.add()

|? P_GP.size()=1 & (P_GP.GP_DEF<>P.GP_DEF | P_GP.OD<>P.DZA)
:: aktualizuj
|| P_GP.OD:=P.DZA;
   P_GP.GP_DEF:=P.GP_DEF;
   P_GP.put()
?};

_epilog();
~~

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:18 b267deb226b279e98acd419445b41f6dd63a1d71370dd1ea066589a463e05262ff099b3b2da668add0e462b8c0f46240b2e3e403a169d1aa0129ff3839beef8fefffa3c0fd74923c6e4e57db07dccf65b31e3e6a9ad3727f34423877996890b523e4dabbb4ece59aa494f7fd7ea976c848ee0bf6f43283c82bd23821d1a2de77
