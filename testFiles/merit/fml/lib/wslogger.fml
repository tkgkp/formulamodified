:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: wslogger.fml
:: Utworzony: 16.08.2019
:: Autor: trocek
:: Systemy:
::======================================================================================================================
:: Zawartość:
::  obsługa logowania do tabeli WSLOG
::======================================================================================================================


\logger
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS: obsługa logowania do wsloggerpecta
::   WE:
::   WY: obiekt wsloggerpect
::----------------------------------------------------------------------------------------------------------------------

_si:=obj_new('LIB_ID',
'C_SETAPP','appname',
'C_INIT','init',
'C_ENTER','enter',
'C_LEAVE','leave',
'C_ENABLE','enable',
'C_DISABLE','disable',
'C_LOG','log',
'C_ERR','logerr',
'C_WATCH','watch',
'C_CLW','clearwatch',
'C_LOGSTR','logstr',
'close','clear'
);
:dll-ka nie działa ze względu na błąd po stronie serwera (to samo co HCOM) - nie przekazywanie parametrów
_si.LIB_ID:=0;
:_si.LIB_ID:=lib_load('SiMacro.dll',0,);
{? _si.LIB_ID=0
||
:   FUN.emsg('Błąd załadowania biblioteki SiMacro.jar.'@)
   _si.init:="exec('log','wslogger','start')";
   _si.enter:="exec('log','wslogger','->'+_a)";
   _si.leave:="exec('log','wslogger','<-'+_a)";
   _si.log:="exec('log','wslogger',_a)";
   _si.logerr:="0";
   _si.watch:="0";
   _si.clearwatch:="0";
   _si.logstr:="exec('log','wslogger',_a)";
   _si.appname:="0";
   _si.close:="0";
   _si.clear:="exec('log_clear','wslogger')";
   _si
||
::   _si.C_INIT:=lib_decl(_si.LIB_ID,8,'void','init');
::   _si.init:="lib_call(.C_INIT)";
::   _si.C_ENTER:=lib_decl(_si.LIB_ID,8,'void','enter','char *');
::   _si.enter:="lib_call(.C_ENTER,_a)";
::   _si.C_LEAVE:=lib_decl(_si.LIB_ID,8,'void','leave','char *');
::   _si.leave:="lib_call(.C_LEAVE,_a)";
::   _si.C_LOG:=lib_decl(_si.LIB_ID,8,'void','log','char *');
::   _si.log:="lib_call(.C_LOG,_a)";
::   _si.C_ERR:=lib_decl(_si.LIB_ID,8,'void','logErr','char *');
::   _si.logerr:="lib_call(.C_ERR,_a)";
::   _si.C_WATCH:=lib_decl(_si.LIB_ID,8,'void','watch','char *','char *');
::   _si.watch:="lib_call(.C_WATCH,_a,_b)";
::   _si.C_CLW:=lib_decl(_si.LIB_ID,8,'void','clearWatches');
::   _si.clearwatch:="lib_call(.C_CLW)";
::   _si.C_LOGSTR:=lib_decl(_si.LIB_ID,8,'void','logString','char *','char *');
::   _si.logstr:="lib_call(.C_LOGSTR,_a,_b)";
::   _si.C_SETAPP:=lib_decl(_si.LIB_ID,8,'void','setAppName','char *');
::   _si.appname:="lib_call(.C_SETAPP,_a)";
::   _si.close:="lib_free(.LIB_ID)";
::_si
0
?}


\log_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('log_write','wslogger',_a)


\log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('log_write_wslog','wslogger', '',_a,0)


\log_write_wslog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.02]
:: OPIS:  zapis pliku / zawartości zmiennej w logu WSLOG
::   WE: _a - plik (obiekt) /char *( może być '' )
::       _b - opis do logu
::       _c - status
::   WY:
::----------------------------------------------------------------------------------------------------------------------
WSLOG.use('wslog___');
WSLOG.blank();
WSLOG.DATA:=date();
WSLOG.CZAS:=time();
WSLOG.OPIS:=_b;
WSLOG.STATUS:={? type_of(_c)=2 || _c || $_c ?};
WSLOG.KONFIG:='SI';
{? type_of(_a)=type_of('')
||
   {? _a<>''
   ||
:: zapis Stringa do pliku
      _plik:='request.xml';
      _file:=fopen(_plik,'bw',1,,1);
      {? ~_file.is_open || exec('log_write','abstore','', 'błąd otwarcia pliku',-1); return ?};
      fwrite(_file,_a)
   ?}
||
   _file:=_a
?};
WSLOG.add;
{? var_press('_file')>0 || WSLOG.bl_put('LOG',_file,,,'request.xml') ?};
~~


\log_write
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS:
::   WE:
::   WY:
:: ~OST: INFOPEN
::----------------------------------------------------------------------------------------------------------------------
:debug;
_file:=fopen('@!TmpElastic_fml.log','b',1,,1);
_last:=fgetsize(_file);
fseek(_file,_last);
fwrite(_file,_a + %13+%10);
fclose(_file)


\log_clear
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS: czyszczenie tabeli WSLOG
::----------------------------------------------------------------------------------------------------------------------
WSLOG.use('wslog___');
WSLOG.first();
{! |?
  WSLOG.del
!}

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:25 01a2853f1b246b21dcd0d77f22919445e0ba0e7c28b2c5ad0cc032a3d7f6384b247d579a6b9a0e3e32ab7c51d50fa92cb454ece9ba51b9928ed4899aed6596fc73d857f02800785fa1b893689bea482f08d4506cb19bf52bf97b12ba9abe2e40e5bd07fbdb1d5ba32fd3adf51f25dd710c970a217ea055d6d4e99199a869385b
