:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: poc.fml
:: Utworzony: 21.06.2017
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Formuły oraz obszary robocze dziedziny POC.
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Formuła inicjująca dla dziedziny POC.
::   WE: [_a] [NUMBER] - Tryb wsadowy (bez komunikatów):
::             0 - Nie [domyślnie];
::             1 - Tak.
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;

_jTerm:=app_info('web_sesid')='';

BPMN.SYM_DOM:='POC';
BPMN.KK_DOM:='PPL';
ZZ_POM.MODUL:='O';

exec('czytaj','#stalesys',,KST,KST_PAR,XINFO);

exec('__F_ZATR','object');
exec('__RUB','object');

exec('otworz_dok','phr_tab');

{? _jTerm
|| exec('__WND','#object')
?};

exec('init_pars','phr_tab');
exec('init_hist','phr_dane');

{? _jTerm
|| exec('init_bufs','phr_tab');
   1

|| P.use('pracowni');
   exec('otworz_h_um','pracownik','h_um');
   H.use('_hist');
   SZK_ZAP.use('szk_zap');
   exec('p_web_cx_set','p_web',,tab_tmp(1,'P_SQL','STRING[16]',),_batch)
?}


\env_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Formuła odpowiedzialna za ustawienie środowiska pracy webTerm-a.
::   WE: [_a] [NUMBER] - Tryb wsadowy (bez komunikatów):
::             0 - Nie [domyślnie];
::             1 - Tak.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;
exec('env_wt','b_proces') & exec('init','poc',_batch) & exec('load_cur_prac','p_web','JA',_batch)


\poc_ocp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Główna formuła obszaru POC_OCP - Oceny pracownicze.
::       Konfiguracja okna i sposobu działania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('init','poc');

_cfg:=exec('poc_ocp_config','poc');
params_set('cfg',_cfg);

ZO_PROG.cntx_psh();
ZO_PROG.f_clear();
ZO_PROG.index('NAZWA');
ZO_PROG.prefix(exec('ref_firma','ustawienia'),ZZ_POM.MODUL);
ZO_PROG.win_sel(_cfg.window);

AreaTitle.setTabWin(ZO_PROG,_cfg.window);
AreaTitle.setTitle();

ZO_PROG.select();
ZO_PROG.cntx_pop();
~~


\poc_ocp_config
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Formuła konfigurująca informacje o danych prezentowanych w obszarze roboczym POC_OCP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=obj_new('window','fpro','panel','ZO_PROG','ZO_PROC','ZO_PROF','ZF_WYK');

_cfg.fpro:=
   "  _chk:=$('exec(\\\'chk_role\\\',\\\'#b__box\\\',OPERATOR.USER,_a)');
      _chk('POC_OCP_RPRO') | _chk('POC_OCP_PPRO') | _chk('POC_OFO_AROC') | _chk('POC_OFO_AMOC')
   ";
_cfg.panel:='zakładki';

_cfg.ZO_PROG:=obj_new('ws');
_cfg.ZO_PROG.ws:='WERO';

_cfg.ZO_PROC:=obj_new('ws');
_cfg.ZO_PROC.ws:='WER';

_cfg.ZO_PROF:=obj_new('ws');
_cfg.ZO_PROF.ws:='WER';

_cfg.ZF_WYK:=obj_new('ws','ZZ_LINK_bl');
_cfg.ZF_WYK.ws:='WERO';

_mode:='maximized';
_wnd:=ZO_PROG.grp_make(,
   "  ZO_PROC.cntx_psh();
      ZO_PROC.f_clear();
      {? PAR_SKID.get(236)='T'
      || ZO_PROC.index('OKRES_OX')
      || ZO_PROC.index('OKRES_OD')
      ?};
      ZO_PROF.cntx_psh();
      ZO_PROF.f_clear();
      ZO_PROF.index('NAZWA');
      ZF_WYK.cntx_psh();
      ZF_WYK.f_clear();
      ZF_WYK.index('NAZWA');
      ~~
   ",
   'poc_ocp',,,
   "  _val:=exec('exit','zws');
   {? _val
   || params_set(_par:=params_get());
      _cfg:=_par.cfg;
      ZF_WYK.cntx_pop();
      ZO_PROF.cntx_pop();
      ZO_PROC.actions_grayed(_cfg.ZO_PROC.ws,':');
      ZO_PROC.cntx_pop();
      1
   ?}
   ",,_mode
);
ZO_PROG.grp_sel(_wnd,ZO_PROG,_cfg.ZO_PROG.ws,,
   "  params_set(_par:=params_get());
      _cfg:=_par.cfg;
      {? _cfg.fpro()
      || tab_show(1,_cfg.panel);
         grp_disp(ZO_PROC,_cfg.ZO_PROC.ws)
      || tab_hide(1,,_cfg.panel)
      ?};
      grp_disp(ZO_PROF,_cfg.ZO_PROF.ws);
      grp_disp(ZF_WYK,_cfg.ZF_WYK.ws)
   ",,,
   6,,,,,
   'maximized_with_title'
);
ZO_PROG.grp_splt(_wnd,,'horizontal',_cfg.panel,15);
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ZO_PROG.grp_sel(_wnd,ZO_PROC,_cfg.ZO_PROC.ws,'Sesje ocen'@,
   "  params_set(_par:=params_get());
      _cfg:=_par.cfg;
      _ag:=':';
      {? ZO_PROC.A='T'
      || _ag:='T'+_ag
      ?};
      {? ZO_PROC.Z='T' | ZO_PROC.A='N'
      || _ag:='M'+_ag
      ?};
      ZO_PROC.actions_grayed(_cfg.ZO_PROC.ws,_ag)
   ",,,,
   "  params_set(_par:=params_get());
      _cfg:=_par.cfg;
      {? grp_empty(ZO_PROG,_cfg.ZO_PROG.ws)
      || '#disable'
      || ZO_PROC.prefix(ZO_PROG.ref())
      ?}
   ",,,,
   _mode
);

ZO_PROG.grp_sel(_wnd,ZO_PROF,_cfg.ZO_PROF.ws,'Profile'@,,,,,
   "  params_set(_par:=params_get());
      _cfg:=_par.cfg;
      {? grp_empty(ZO_PROG,_cfg.ZO_PROG.ws)
      || '#disable'
      || ZO_PROF.prefix(ZO_PROG.ref())
      ?}
   ",,,,
   _mode
);

ZO_PROG.grp_sel(_wnd,ZF_WYK,_cfg.ZF_WYK.ws,'Formularze'@,,,,,
   "  params_set(_par:=params_get());
      _cfg:=_par.cfg;
      {? _a
      || _cfg.ZF_WYK.ZZ_LINK_bl:=ZF_WYK.fld_fml('ZZ_LINK','BLANK',$'ZO_PROG.ZZ_DOK')
      ?};
      {? grp_empty(ZO_PROG,_cfg.ZO_PROG.ws)
      || '#disable'
      || ZF_WYK.prefix(ZO_PROG.NP_DOK,ZO_PROG.ZZ_DOK)
      ?}
   ",
   "  params_set(_par:=params_get());
      _cfg:=_par.cfg;
      {? _a
      || ZF_WYK.fld_fml('ZZ_LINK','BLANK',_cfg.ZF_WYK.ZZ_LINK_bl)
      ?}

   ",,,
   _mode
);

_cfg.window:=_wnd;
_cfg


\poc_ocp_formularze
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Obsługa akcji "Formularze" z obszaru POC_OCP (akcja wywoływana z okna WER tabeli ZO_PROC).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_aid:='POC_OFO_RFOC';
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:=_aid;
_params.UIDREF:=ZO_PROC.uidref();
_params.PROC_START:='N';
_params.GRUPA:='N';
_params.PORTS_IN:=exec('portsIn','#b__box',_aid);
exec('portsInSet','#b__box',_params.PORTS_IN,_aid,'ZO_PROC',ZO_PROC.ref());
exec('mp_run','#b__box',_params);
~~


\poc_ocp_oceny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Obsługa akcji "Oceny" z obszaru POC_OCP (akcja wywoływana z okna WER tabeli ZO_PROC).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_aid:='POC_OFO_POCE';
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:=_aid;
_params.PROC_START:='N';
_params.GRUPA:='N';
_params.PORTS_IN:=exec('portsIn','#b__box',_aid);
exec('portsInSet','#b__box',_params.PORTS_IN,_aid,'ZO_PROC',ZO_PROC.ref());
exec('mp_run','#b__box',_params);
~~


\poc_ocp_otworz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Obsługa akcji "Otwórz" z obszaru POC_OCP (akcja wywoływana z okna WER tabeli ZO_PROC).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='POC_OCP_RPAK';
_params.UIDREF:=ZO_PROC.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZO_PROC',ZO_PROC.ref());

exec('mp_run','#b__box',_params)


\poc_ocp_zamknij
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Obsługa akcji "Zamknij" z obszaru POC_OCP (akcja wywoływana z okna WER tabeli ZO_PROC).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='POC_OCP_RPZA';
_params.UIDREF:=ZO_PROC.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZO_PROC',ZO_PROC.ref());

exec('mp_run','#b__box',_params)


\poc_ofo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Główna formuła obszaru POC_OFO - Formularze ocen.
::       Konfiguracja okna i sposobu działania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('init','poc');

: zweryfikuj, czy zapamiętany program istnieje
{? (_old:=exec('get','#profile',,'poc_ofo','ZO_PROG'))<>''
|| ZO_PROG.cntx_psh();
   ZO_PROG.prefix();
   {? ~ZO_PROG.seek(_old)
   ||
:     usuń informacje o programie i sesji
      exec('set','#profile',,'poc_ofo','ZO_PROG','');
      exec('set','#profile',,'poc_ofo','ZO_PROC','')
   ?};
   ZO_PROG.cntx_pop()
?};

: zweryfikuj, czy zapamiętana sesja istnieje
{? (_old:=exec('get','#profile',,'poc_ofo','ZO_PROC'))<>''
|| ZO_PROC.cntx_psh();
   ZO_PROC.prefix();
   {? ~ZO_PROC.seek(_old)
   ||
:     usuń informacje o sesji
      exec('set','#profile',,'poc_ofo','ZO_PROC','')
   ?};
   ZO_PROC.cntx_pop()
?};
_loop:=1;
{!
|? _loop
|!
   _ctx:=obj_new(
      'ZO_PROG','ZO_PROC',
      'ZO_OSOBA','ZO_TEST',
      'FORM_NDX',
      'active',
      'SENDTAB',
      'startup',
      'window',
      'window2',
      'grp'
   );
   _ctx.ZO_PROG:=null;
   _ctx.ZO_PROC:=null;
   _ctx.ZO_OSOBA:=null;
   _ctx.ZO_TEST:=null;
   _ctx.FORM_NDX:=obj_new('KOGO','KTO');
   _ctx.FORM_NDX.KOGO:='KOGO';
   _ctx.FORM_NDX.KTO:='KTO';
   _ctx.active:='zo_osoba_wer_o';
   _ctx.startup:=1;
   params_set('ctx',_ctx);

   _wnd:=exec('poc_ofo_config','poc');

   P.cntx_psh();
   P.win_sel(_wnd);

   AreaTitle.setTabWin(P,_wnd);
   AreaTitle.setTitle();

   _loop:=P.select();
   P.cntx_pop();
   P.win_del(_wnd);
   obj_del(_ctx)
!};
~~


\poc_ofo_dsk_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.22]
:: OPIS: Formuła przygotowuje tłumaczenia dla kontrolki poc_ofo.dsk.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TAB:=exec('elements_table','#desktop');
_add:="_a.blank(); _a.ID_SYS:=_b; _a.NAME:=_c; _a.add()";

_add(_TAB,'progCB@panel','Program'@);
_add(_TAB,'procCB@panel','Sesja'@);

_TAB


\poc_ofo_config
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Formuła konfigurująca informacje o danych prezentowanych w obszarze roboczym POC_OFO.
::   WE:
::   WY: akronim okienka obszaru
::----------------------------------------------------------------------------------------------------------------------
_inTerm:=
   {? ~exec('interm','#system')
   || exec('pxx_widok_uproszczony','pkd','POC_OFO')
   || 1
   ?};

_mode:='maximized_with_title';
_main:='';
_par:=params_get();
params_set(_par);
_ctx:=_par.ctx;
{? _inTerm
|| _ctx.window:='WER_OI';
   _ctx.window2:=exec('zo_komp_wnd','poc')
|| _ctx.window:='WER_O';
   _ctx.window2:='WER_O'
?};
{? ~_inTerm
||
   _main:='WER_O';
   _wnd:=P.grp_make(,
:     przed wypełnieniem
      "  params_set(params_get());
         ZO_PROG.cntx_psh();
         ZO_PROG.prefix(exec('ref_firma','ustawienia'),ZZ_POM.MODUL);
         exec('load','#desktop','selektor','poc_ofo.dsk',,,,,exec('poc_ofo_dsk_pl','poc'),1);
         exec('set_value','#desktop','','selektor','progCB@panel',exec('get','#profile',,'poc_ofo','ZO_PROG'));
         ZO_OSOBA.index('ZO_OSOBA');
         ZO_TEST.index('ZO_TEST');
         ZZ_KOMP.cntx_psh();
         1
      ",
:     identyfikator
      ,
:     położenie
      ,,
:     przy zakmnięciu
      "  {? exec('exit','zws')
         || ZZ_KOMP.f_clear();
            ZZ_KOMP.cntx_pop();
            ZO_PROG.cntx_pop();
            1
         ?}
      ",,
:     tryb wyświetlania i rozkład
      'maximized','jterm'
   );

:  utwórz selektor programu i sesji jako kontrolkę
   exec('create','#desktop',P,'selektor',_wnd,2);

   P.grp_splt(_wnd,,'horizontal','panel')
||
   _main:='WER_OI';
   _wnd:=P.grp_make(,
:     przed wypełnieniem
      "  params_set(params_get());
         ZO_PROG.cntx_psh();
         ZO_PROG.prefix(exec('ref_firma','ustawienia'),ZZ_POM.MODUL);
         exec('poc_ofo_init_params','poc');
         ZO_OSOBA.index('ZO_OSOBA');
         ZO_TEST.index('ZO_TEST');
         ZZ_KOMP.cntx_psh();
         1
      ",
:     identyfikator
      ,
:     położenie
      ,,
:     przy zakmnięciu
      "  {? exec('exit','zws')
         || ZZ_KOMP.f_clear();
            ZZ_KOMP.cntx_pop();
            ZO_PROG.cntx_pop();
            1
         ?}
      ",,
:     tryb wyświetlania
      'maximized'
   )
?};
P.grp_sel(_wnd,ZO_OSOBA,_main,'Oceniający'@,
:  po odświeżeniu
   "  _par:=params_get();
      params_set(_par);
      SEEK.ZO_PROC:=_par.ctx.ZO_PROC;
      _act:={? cli_ver()='interm'
            || {? SEEK.ZO_PROC().Z='T' || 'GDUYO:GDYO' || 'O:O' ?}
            || {? SEEK.ZO_PROC().Z='T' || 'GDUY:GDY' || '' ?}
            ?};
      ZO_OSOBA.actions_grayed(cur_win(1,1),_act);
      grp_disp(ZO_FORM,'KOGO_O',1,1)
   ",
:  położenie i wysokość
   ,,12,
:  przed obsługą
   "  _par:=params_get();
      params_set(_par);
      _ctx:=_par.ctx;
      {? _ctx.ZO_PROC=null
      || ZO_OSOBA.prefix('E',null);
         return('#disable')
      || ZO_OSOBA.prefix('E',_ctx.ZO_PROC)
      ?};
      {? _a
      || ZO_OSOBA.seek(_ctx.ZO_OSOBA);
         _ctx.active:='zo_osoba_wer_o';
         ZZ_POM.KREATORY:='#POC_OFO#ZO_OSOBA#WER#'
      ?};
      {? _ctx.ZO_PROC=null
      || '#disable'
      ?}
   ",
:  po obsłudze
   "  {? _a
      || params_get().ctx.ZO_OSOBA:=ZO_OSOBA.ref();
         ZZ_POM.KREATORY:=''
      ?}
   ",
:  utrwalenie, aktywacja, wypełnienie
   0,0,_mode,
:  identyfikator
   'zo_osoba_wer_o',
:  okno główne
   1
);

: formularze ocen
P.tab_splt(_wnd,,'horizontal','bottom');
P.grp_sel(_wnd,ZO_FORM,'KOGO_O',,
:  po odświeżeniu
   "  _par:=params_get();
      params_set(_par);
      SEEK.ZO_PROC:=_par.ctx.ZO_PROC;
      SEEK.ZO_PROC();
      exec('zo_form_akcje','poc','KOGO_O');
      grp_disp(ZO_KOMP,_par.ctx.window2,1,1)
   ",
:  położenie i wysokość
   ,,8,
:  przed obsługą
   "  _par:=params_get();
      params_set(_par);
      _ctx:=_par.ctx;
      ZO_FORM.index(_ctx.FORM_NDX.KOGO);
      {? _ctx.ZO_PROC=null | grp_empty(ZO_OSOBA,_ctx.window,1)=1
      || ZO_FORM.prefix(null);
         return('#disable')
      || ZO_FORM.prefix(ZO_OSOBA.ref())
      ?};
      {? _a
      || _ctx.active:='zo_osoba_wer_o'
      ?}
   ",
:  po obsłudze
   "params_get().ctx.FORM_NDX.KOGO:=ZO_FORM.index('?')",
:  utrwalenie, aktywacja, wypełnienie
   0,0,_mode,
:  identyfikator
   'zo_osoba_form'
);

: oceniane kompetencje
P.tab_splt(_wnd,'bottom','vertical','right');
P.grp_sel(_wnd,ZO_KOMP,_ctx.window2,,
:  po odświeżeniu
   "  _par:=params_get();
      params_set(_par);
      SEEK.ZO_PROC:=_par.ctx.ZO_PROC;
      _hide:={? ZO_FORM.Z='T' | SEEK.ZO_PROC().Z='T' || 'DU:D' || '' ?};
      ZO_FORM.cntx_psh();
      {? ZO_FORM.first()
      || {? ~exec('form_komp','phr_dane',ZO_FORM.ZO_TEST().ZZ_DOK)
         || {? _hide=''
            || _hide+='D:D'
            ?}
         ?}
      ?};
      ZO_FORM.cntx_pop();
      ZO_KOMP.actions_grayed(cur_win(1,1),_hide);
      {? cur_win(1,1)='WER_O' || grp_disp(ZO_NOTA,'WER_O',1,1) ?}
   ",
:  położenie i wysokość
   ,,8,
:  przed obsługą
   "  _par:=params_get();
      params_set(_par);
      _ctx:=_par.ctx;
      {? _ctx.ZO_PROC=null | grp_empty(ZO_FORM,'KOGO_O',1)
      || ZO_KOMP.prefix(null);
         return('#disable')
      || ZO_KOMP.prefix(ZO_FORM.ref())
      ?};
      SEEK.ZO_PROC:=_ctx.ZO_PROC;
      {? _a
      || exec('zz_komp_ogranicz','phr_widok',SEEK.ZO_PROC().OKRES_DO,'ZZ_HIST');
         _ctx.active:='zo_osoba_wer_o'
      ?}
   ",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   0,0,_mode,
:  identyfikator
   'zo_osoba_komp'
);

{? ~_inTerm
: ocena kompetencji
||
   P.tab_splt(_wnd,,'horizontal','foot');
   P.grp_sel(_wnd,ZO_NOTA,'WER_O',,
:  po odświeżeniu
      "  _par:=params_get();
         params_set(_par);
         SEEK.ZO_PROC:=_par.ctx.ZO_PROC;
         ZO_NOTA.actions_grayed('WER_O',
            {? ZO_FORM.Z='T' | SEEK.ZO_PROC().Z='T' || 'DU:D'
            |? ZO_NOTA.size()>1 || 'D'
            || ''
            ?}
         )
      ",
:  położenie i wysokość
      ,,,
:  przed obsługą
      "  _par:=params_get();
         params_set(_par);
         _ctx:=_par.ctx;
         {? _ctx.ZO_PROC=null | grp_empty(ZO_KOMP,'WER_O',1)
         || ZO_NOTA.prefix(null);
            return('#disable')
         || ZO_NOTA.prefix(ZO_KOMP.ref())
         ?};
         {? _a
         || _ctx.active:='zo_osoba_wer_o'
         ?}
      ",
:  po obsłudze
      "",
:  utrwalenie, aktywacja, wypełnienie
      0,0,_mode,
:  identyfikator
      'zo_osoba_nota'
   )
?};
: --------
: Oceniani
: --------
P.grp_sel(_wnd,ZO_TEST,_main,'Oceniani'@,
:  po odświeżeniu
   "  _par:=params_get();
      params_set(_par);
      SEEK.ZO_PROC:=_par.ctx.ZO_PROC;
      ZO_TEST.actions_grayed(cur_win(1,1),{? SEEK.ZO_PROC().Z='T' || 'GDUY:GDY' || '' ?});
      grp_disp(ZO_FORM,'KTO_O',1,1)
   ",
:  położenie i wysokość
   ,,12,
:  przed obsługą
   "  _par:=params_get();
      params_set(_par);
      _ctx:=_par.ctx;
      {? _ctx.ZO_PROC=null
      || ZO_TEST.prefix(null);
         return('#disable')
      || ZO_TEST.prefix(_ctx.ZO_PROC)
      ?};
      {? _a
      || ZO_TEST.seek(_ctx.ZO_TEST);
         _ctx.active:='zo_test_wer_o';
         ZZ_POM.KREATORY:='#POC_OFO#ZO_TEST#WER#'
      ?}

   ",
:  po obsłudze
   "  {? _a
      || params_get().ctx.ZO_TEST:=ZO_TEST.ref();
         ZZ_POM.KREATORY:=''
      ?}
   ",
:  utrwalenie, aktywacja, wypełnienie
   0,0,_mode,
:  identyfikator
   'zo_test_wer_o'
);

: formularze ocen
P.tab_splt(_wnd,,'horizontal','bottom');
P.grp_sel(_wnd,ZO_FORM,'KTO_O',,
:  po odświeżeniu
   "  _par:=params_get();
      params_set(_par);
      SEEK.ZO_PROC:=_par.ctx.ZO_PROC;
      SEEK.ZO_PROC();
      exec('zo_form_akcje','poc','KTO_O');
      grp_disp(ZO_KOMP,_par.ctx.window2,1,1)
   ",
:  położenie i wysokość
   ,,8,
:  przed obsługą
   "  _par:=params_get();
      params_set(_par);
      _ctx:=_par.ctx;
      ZO_FORM.index(_ctx.FORM_NDX.KTO);
      {? _ctx.ZO_PROC=null | grp_empty(ZO_TEST,_ctx.window,1)=1
      || ZO_FORM.prefix(null);
         return('#disable')
      || ZO_FORM.prefix(ZO_TEST.ZO_OSOBA)
      ?};
      {? _a
      || _ctx.active:='zo_test_wer_o'
      ?}
   ",
:  po obsłudze
   "params_get().ctx.FORM_NDX.KTO:=ZO_FORM.index('?')",
:  utrwalenie, aktywacja, wypełnienie
   0,0,_mode,
:  identyfikator
   'zo_test_form'
);

: oceniane kompetencje
P.tab_splt(_wnd,'bottom','vertical','right');
P.grp_sel(_wnd,ZO_KOMP,_ctx.window2,,
:  po odświeżeniu
   "  _par:=params_get();
      params_set(_par);
      SEEK.ZO_PROC:=_par.ctx.ZO_PROC;
      _hide:={? ZO_FORM.Z='T' | SEEK.ZO_PROC().Z='T' || 'DU:D' || '' ?};
      ZO_FORM.cntx_psh();
      {? ZO_FORM.first()
      || {? ~exec('form_komp','phr_dane',ZO_FORM.ZO_TEST().ZZ_DOK)
         || {? _hide=''
            || _hide+='D:D'
            ?}
         ?}
      ?};
      ZO_FORM.cntx_pop();
      ZO_KOMP.actions_grayed(cur_win(1,1),_hide);
      {? cur_win(1,1)='WER_O' || grp_disp(ZO_NOTA,'WER_O',1,1) ?}
   ",
:  położenie i wysokość
   ,,8,
:  przed obsługą
   "  _par:=params_get();
      params_set(_par);
      _ctx:=_par.ctx;
      {? _ctx.ZO_PROC=null | grp_empty(ZO_FORM,'KTO_O',1)
      || ZO_KOMP.prefix(null);
         return('#disable')
      || ZO_KOMP.prefix(ZO_FORM.ref())
      ?};
      SEEK.ZO_PROC:=_ctx.ZO_PROC;
      {? _a
      || exec('zz_komp_ogranicz','phr_widok',SEEK.ZO_PROC().OKRES_DO,'ZZ_HIST');
         _ctx.active:='zo_test_wer_o'
      ?}
   ",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   0,0,_mode,
:  identyfikator
   'zo_test_komp'
);

{? ~_inTerm
||
: ocena kompetencji
   P.tab_splt(_wnd,,'horizontal','foot');
   P.grp_sel(_wnd,ZO_NOTA,'WER_O',,
:  po odświeżeniu
      "  _par:=params_get();
         params_set(_par);
         SEEK.ZO_PROC:=_par.ctx.ZO_PROC;
         ZO_NOTA.actions_grayed('WER_O',
            {? ZO_FORM.Z='T' | SEEK.ZO_PROC().Z='T' || 'DU:D'
            |? ZO_NOTA.size()>1 || 'D'
            || ''
            ?}
         )
      ",
:  położenie i wysokość
      ,,,
:  przed obsługą
      "  _par:=params_get();
         params_set(_par);
         _ctx:=_par.ctx;
         {? _ctx.ZO_PROC=null | grp_empty(ZO_KOMP,'WER_O',1)
         || ZO_NOTA.prefix(null);
            return('#disable')
         || ZO_NOTA.prefix(ZO_KOMP.ref())
         ?};
         {? _a
         || _ctx.active:='zo_test_wer_o'
         ?}
      ",
:  po obsłudze
      "",
:  utrwalenie, aktywacja, wypełnienie
      0,0,_mode,
:  identyfikator
      'zo_test_nota'
   )
?};

_par.ctx.grp:=_wnd;
_wnd


\zo_komp_wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [21.37]
:: OPIS: Formuła tworzy tymczasowe okno wertowania dla tabeli ZZ_KOMP umożliwiające przeglądanie zestawu ocenianych
::       kompetencji.
::   WE:
::   WY: akronim okienka
::----------------------------------------------------------------------------------------------------------------------
_win:=ZO_KOMP.mk_sel('Oceniane kompetencje'@,'P',,'oc_komp');
ZO_KOMP.win_fld(_win,,'ZZ_KOMP','NAZWA',,-30);
ZO_KOMP.win_fld(_win,,'W_TYP',,,-4);
ZO_KOMP.win_fld(_win,,'W_KOMP',,,-4);
ZO_KOMP.win_act(_win,,'Formuła','Dołącz'@,,,,"params_exec('zo_komp_dolacz_a','poc')");
ZO_KOMP.win_act(_win,1,'Formuła','Dołącz'@,,,,"params_exec('zo_komp_dolacz_a','poc')");
ZO_KOMP.win_act(_win,,'Formuła','Usuń'@,,,"params_exec('zz_xxx_usun_b','phr_widok')",
                                          "params_exec('zz_xxx_usun_a','phr_widok')",
                                          ,1,
                                          "params_exec('zz_xxx_usun_bg','phr_widok')",
                                          "params_exec('zz_xxx_usun_ag','phr_widok')");
ZO_KOMP.win_act(_win,,'Formuła','Ocena kompetencji'@,,,,
               "ZO_NOTA.actions_grayed('WER_O',
                                        {? ZO_FORM.Z='T' | SEEK.ZO_PROC().Z='T' || 'DU:D'
                                        |? ZO_NOTA.size()>1 || 'D'
                                        || ''
                                        ?});
                ZO_NOTA.prefix(ZO_KOMP.ref());
                ZO_NOTA.win_sel('WER_O');
                ZO_NOTA.select()");
ZO_KOMP.win_act(_win,,'Kolejność');
ZO_KOMP.win_act(_win,,'Okienko',,,,"exec('zo_komp_xxx_ob','poc')","exec('zo_komp_xxx_oa','poc')");
ZO_KOMP.win_btn(_win,'text=Dołącz','menu:D');
ZO_KOMP.win_btn(_win,'text=Usuń','menu:U');
_win


\dsk_callback_setup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Formuła odpowiedzi dla kontrolki po wczytaniu jej wszystkich elementów.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
exec('dsk_callback_prog','poc')


\dsk_get_prog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Dane dla wybieracza programu ocen.
::   WE:
::   WY: alias tabeli tymczasowej zawierającej listę programów ocen
::----------------------------------------------------------------------------------------------------------------------
_RS:=sql(
   'select ZO_PROG.REFERENCE as REF, ZO_PROG.NAZWA || \' (\' || ZO_PROG.RODZAJ || \')\' as NAZWA '
   'from ZO_PROG '
   'where ZO_PROG.FIRMA=:_a and ZO_PROG.TYP=\':_b\''
   'order by NAZWA',
   exec('ref_firma','ustawienia'),ZZ_POM.MODUL
);

_RS


\dsk_callback_prog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Odpowiedź na wybór programu ocen.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_val:=exec('get_value','#desktop','','selektor','progCB@panel');

_par:=params_get();
params_set(_par);
_ctx:=_par.ctx;
_ctx.ZO_PROG:=null;

{? _ctx.startup<>0
|| _old:=exec('get','#profile',,'poc_ofo','ZO_PROG');
   {? _old<>''
   || _val:=_old
   ?};
   {? _val=''
   || _PROG:=exec('dsk_get_prog','poc');
      {? _PROG.first() & _PROG.REF<>''
      || _val:=_PROG.REF;
         exec('set_value','#desktop','','selektor','progCB@panel',_val)
      ?}
   ?}
|| exec('set','#profile',,'poc_ofo','ZO_PROG',_val)
?};

ZO_PROG.index('NAZWA');
ZO_PROG.prefix(exec('ref_firma','ustawienia'),ZZ_POM.MODUL);
{? ZO_PROG.seek(_val)
|| _ctx.ZO_PROG:=ZO_PROG.ref();
:  po wyborze programu wymagana aktualizacja listy sesji
   exec('refresh_element','#desktop','','selektor','procCB@panel',1)

|| FUN.emsg(
      'Wystąpił błąd podczas ustalania programu ocen.\n'
      'Obszar roboczy zostanie zamknięty.'@
   );
   sel_exit()
?};

~~


\poc_ofo_init_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [21.37]
:: OPIS: Inicjalizacja początkowych parametrów sesji ocen.
::   WE: [_a] [STRING] - refsql rekordu, dla którego należy ustawić kontekst
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_val:='';
_par:=params_get();
params_set(_par);
_ctx:=_par.ctx;
_ctx.ZO_PROG:=null;

_PROG:=exec('dsk_get_prog','poc');
{? _PROG.first() & _PROG.REF<>''
|| _val:=_PROG.REF
?};

ZO_PROG.index('NAZWA');

ZO_PROG.prefix(exec('ref_firma','ustawienia'),ZZ_POM.MODUL);
{? ZO_PROG.seek(_val)
|| _ctx.ZO_PROG:=ZO_PROG.ref();
   AreaTitle.setTitle()
|| FUN.emsg(
      'Wystąpił błąd podczas ustalania programu ocen.\n'
      'Obszar roboczy zostanie zamknięty.'@
   );
   sel_exit()
?};
_val:='';
{? _ctx.ZO_PROC=null()
||
   _PROC:=exec('dsk_get_proc','poc');
   {? _PROC.first() & _PROC.REF<>''
   || _val:=_PROC.REF
   ?}
|| return()?};

ZO_PROC.index('OKRES_OD');
ZO_PROC.prefix(_ctx.ZO_PROG);
{? ZO_PROC.seek(_val)
|| _ctx.ZO_PROC:=ZO_PROC.ref()
|| FUN.emsg(
      'Wystąpił błąd podczas ustalania sesji ocen.\n'
      'Obszar roboczy zostanie zamknięty.'@
   );
   sel_exit()
?};
AreaTitle.setTitle();
win_activate(_ctx.active);

~~


\dsk_get_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Dane dla wybieracza sesji ocen.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_RS:=sql(
   'select '
   '  ZO_PROC.REFERENCE as REF, '
   '  to_string(ZO_PROC.OKRES_OD) || \' - \' || '
   '  to_string(ZO_PROC.OKRES_DO) || \' \' || '
   '  case ZO_PROC.A '
   '     when \'T\' then \'%1\' '
   '     else \'%2\' '
   '  end || \', \' || '
   '  case ZO_PROC.Z '
   '     when \'T\' then \'%3\' '
   '     else \'%4\' '
   '  end as OPIS, '
   '  ZO_PROC.OKRES_OD '
   'from ZO_PROC '
   'where ZO_PROC.ZO_PROG=:_a '
   'order by OKRES_OD desc'
   ['Otwarta'@,'Nieotwarta'@,'Zamknięta'@,'Niezamknięta'@],
   ZO_PROG.ref()
);
_RS


\dsk_callback_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Odpowiedź na wybór sesji ocen.
::   WE: [_a] [STRING] - refsql rekordu, dla którego należy ustawić kontekst
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_val:=exec('get_value','#desktop','','selektor','procCB@panel');
_ctx:=params_get().ctx;
_ctx.ZO_PROC:=null;

{? _ctx.startup<>0
|| _old:=exec('get','#profile',,'poc_ofo','ZO_PROC');
   _ctx.startup:=0;
   {? _old<>''
   || _val:=_old;
      exec('set_value','#desktop','','selektor','procCB@panel',_val)
   ?}
|| exec('set','#profile',,'poc_ofo','ZO_PROC',_val)
?};

ZO_PROC.index('OKRES_OD');
ZO_PROC.prefix(_ctx.ZO_PROG);
{? ZO_PROC.seek(_val)
|| _ctx.ZO_PROC:=ZO_PROC.ref()
|| _val:=''
?};
AreaTitle.setTitle();
win_activate(_ctx.active);

~~


\poc_ofo_generuj_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Formuła po akcji "Generuj" dla formularzy ocen.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('proc_create','phr_dane',ZO_PROC.ref())


\zz_osoba_disp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Wyświetla dane osoby.
::   WE: _a - wskazanie na rekord w tabeli ZZ_OSOBA
::  OLD: \zz_osoba_disp/zz_view.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=($ZZ_OSOBA.ZZ_LINK().KLASA)();
_tab.cntx_psh();
_tab.index('ZZ_DOK');
_osoba:=REF.OSOBA;
{? _tab.find_key(ref_name(ZZ_OSOBA.ZZ_LINK),ZZ_OSOBA.ZZ_LINK)
|| {? _tab=P | _tab=PRZ
   || _tab.OSOBA()
   ?};
   REF.OSOBA:=OSOBA.ref();
   _tab.display()
?};
_osoba==REF.OSOBA;
_tab.cntx_pop()


\zo_osoba_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Formuła "okienko przed" okien wertowania tabeli ZO_OSOBA.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_psh','phr_widok','POC_OFO_RFOC');

ZO_OSOBA.win_patt('WZO');
ZZ_OSOBA.win_dict('WER');

1


\zo_osoba_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Formuła "okienko po" okien wertowania tabeli ZO_OSOBA.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_pop','phr_widok');

ZZ_OSOBA.f_clear();

1


\zo_osoba_xxx_ad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Wyświetla informacje o uczestniku sesji ocen
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zz_osoba_disp','poc',ZO_OSOBA.ZZ_OSOBA)


\zo_osoba_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Akcja "Dołącz po" okienek oceniających (ZO_OSOBA)
::   WE:
::   WY: 0
::----------------------------------------------------------------------------------------------------------------------
_args:=exec('wybierz_args','pracownik');
_args.DOMAIN:='POC';
_args.F_ZATR:='P,K,Z';
_args.SQL_WHERE:=
   'P.ZZ_DOK not in ('
   '  select ZZ_OSOBA.ZZ_LINK'
   '  from ZO_OSOBA join ZZ_OSOBA'
   '  where ZO_OSOBA.ZO_PROC=\'%1\' and ZO_OSOBA.RODZAJ=\'E\''
   ')'[$ZO_PROC.ref()];
_P:=exec('wybierz','pracownik',_args).P;

{? _P.first()
|| P.cntx_psh();
   P.prefix();
   {!
   |? {? P.seek(_P.SQL)
      || exec('zo_osoba_p','phr_dane',ZO_PROC.ref(),'E',1)
      ?};
      _P.next()
   !};
   P.cntx_pop()
?};
0


\zo_osoba_szukaj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Formuła przed akcją "szukaj" okien wertowania tabeli ZO_OSOBA.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZZ_OSOBA.prefix();
ZZ_OSOBA.f_set(
   'NAZWISKO,PIERWSZE,PESEL',,
   'ZZ_OSOBA.REFERENCE in ('
   '  select ZO_OSOBA.ZZ_OSOBA '
   '  from ZO_OSOBA '
   '  where ZO_OSOBA.RODZAJ=\'E\' and ZO_OSOBA.ZO_PROC=:_a '
   ')',
   ZO_PROC.ref()
);
1


\zo_test_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Formuła "okienko przed" okien wertowania tabeli ZO_OSOBA.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_psh','phr_widok','POC_OFO_RFOC');

ZO_TEST.win_patt('WZO');
ZZ_OSOBA.win_dict('WER');

1


\zo_test_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Formuła "okienko po" okien wertowania tabeli ZO_OSOBA.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_pop','phr_widok');

ZZ_OSOBA.f_clear();

1


\zo_test_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Akcja "Dołącz po" okienek ocen pracowników (ZO_TEST)
::   WE:
::   WY: 0
::----------------------------------------------------------------------------------------------------------------------
_args:=exec('wybierz_args','pracownik');
_args.DOMAIN:='POC';
_args.F_ZATR:='P,K,Z';
_args.SQL_WHERE:=
   'P.ZZ_DOK not in ('
   '  select ZZ_OSOBA.ZZ_LINK'
   '  from ZO_OSOBA join ZZ_OSOBA'
   '  where ZO_OSOBA.ZO_PROC=\'%1\' and ZO_OSOBA.RODZAJ=\'O\''
   ')'[$ZO_PROC.ref()];
_P:=exec('wybierz','pracownik',_args).P;

{? _P.first()
|| P.cntx_psh();
   P.prefix();
   {!
   |? {? P.seek(_P.SQL)
      || exec('zo_form_test','phr_dane',exec('zo_osoba_p','phr_dane',ZO_PROC.ref(),'O',1))
      ?};
      _P.next()
   !};
   P.cntx_pop()
?};
0


\zo_test_szukaj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Formuła przed akcją "szukaj" okien wertowania tabeli ZO_TEST.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZZ_OSOBA.prefix();
ZZ_OSOBA.f_set(
   'NAZWISKO,PIERWSZE,PESEL',,
   'ZZ_OSOBA.REFERENCE in ('
   '  select ZO_TEST.ZZ_OSOBA '
   '  from ZO_TEST join ZO_OSOBA using (ZO_TEST.ZO_OSOBA,ZO_OSOBA.REFERENCE) '
   '  where ZO_OSOBA.RODZAJ=\'O\' and ZO_OSOBA.ZO_PROC=:_a '
   ')',
   ZO_PROC.ref()
);
1


\zo_test_oceny_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Formuła po akcji "Oceny".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_aid:='POC_OFO_POCE';
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:=_aid;
_params.PROC_START:='N';
_params.GRUPA:='N';
_params.PORTS_IN:=exec('portsIn','#b__box',_aid);
: _params.UIDREF:=ZO_TEST.uidref();
exec('portsInSet','#b__box',_params.PORTS_IN,_aid,'ZO_TEST',ZO_TEST.ref());
exec('mp_run','#b__box',_params);
~~


\zo_test_cele_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Formuła po akcji "Cele".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZO_CEL.cntx_psh();
ZO_CEL.index('ZO_CEL');
ZO_CEL.prefix(ZO_TEST.ZZ_OSOBA);
_org:=ZO_CEL.fld_fml('KOGO','BLANK',"ZO_TEST.ZZ_OSOBA");

ZO_CEL.win_sel('WER');
ZO_CEL.select();

ZO_CEL.fld_fml('KOGO','BLANK',_org);
ZO_CEL.cntx_pop();
~~


\zo_cel_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Formuła akcji okienko przed tabeli ZO_CEL.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
ZO_CEL.win_edit('RED');
ZO_CEL.win_patt('WZO');

1


\zo_cel_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Po edycji wiersza tabeli ZO_CEL.
::   WE:
::   WY: zgode ze specyfikacją dla akcji "rekord po"
::----------------------------------------------------------------------------------------------------------------------
exec('zo_cel_chk','phr_zo_tab',-menu_txt()='popraw')


\zo_test_profil_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Formuła po akcji "Profil".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_acr:='TEST';
{? (_wnd:=__WND.SEL.get(ZZ_PROFK,_acr))=''
|| _wnd:=ZZ_PROFK.grp_make('Profil oceny'@,
:     po wyswietleniu
      "  exec('zz_typ_fset','phr_widok');

         ZZ_PROFT.clear;
         ZZ_PROFT.f_set(
            'ZZ_TYP(KOD)',
            'join ZZ_TYP',
            'ZZ_PROFT.ZZ_LINK=:_a and ZZ_TYP.KOD<>\\\':_b\\\'',
            ZO_TEST.ZZ_DOK,
            'OP'
         );

         ZZ_PROFK.index('NAZWA');
         ZZ_PROFK.prefix(ref_name(ZO_TEST.ZZ_DOK),ZO_TEST.ZZ_DOK);

         ZZ_KOMPS.index('WARTOSC');
         ZZ_KOMPK.index('WARTOSC');
         ZZ_KOMPZ.index('UNIQUE');
         ZZ_PROFO.index('KOD');

         grp_disp(ZZ_PROFK,'KOMO',1)
      ",
:     identyfikator
      'zz_profk_test',
:     polozenie
      0,0,
:     zamkniecie
      "  ZZ_TYP.f_clear();
         ZZ_PROFT.f_clear();
         1
      "
   );
:  __WND.SEL.put(ZZ_PROFK,_acr,_wnd);

:  kompetencje profilu
   ZZ_PROFK.grp_sel(_wnd,ZZ_PROFK,'KOMO',,
:     po odświeżeniu
      "  grp_disp(ZZ_PROFT,'KOMO',1,1);
         grp_disp(ZZ_KOMPS,'WEO',1,1);
         grp_disp(ZZ_KOMPK,'WEO',1,1);
         grp_disp(ZZ_KOMZB,__WND.SEL.get(ZZ_KOMZB,'WEO'),1,1)
      ",
:     położenie i wysokość
      ,,10,
:     przed obsługą
      "
         _hide:='';
         {? exec('form_komp','phr_dane',ZO_TEST.ZZ_DOK)
         || _hide:='dpUW:dW'
         ?};
         ZZ_PROFK.actions_grayed('KOMO',_hide)
      ",
:     po obsłudze
      "",
:     utrwalenie, aktywacja, wypełnienie
      ,,'maximized_with_title'
   );

:  typy ocen kompetencji
   ZZ_PROFK.grp_splt(_wnd,,'horizontal','bottom',',33%');
   ZZ_PROFK.grp_sel(_wnd,ZZ_PROFT,'KOMO','Metody oceny'@,
:     po odświeżeniu
      "grp_disp(ZZ_PROFO,'WEO',1,1)",
:     położenie i wysokość
      ,,3,
:     przed obsługą
      "",
:     po obsłudze
      "",
:     utrwalenie, aktywacja, wypełnienie
      ,,'maximized_with_title'
   );

:  metody oceny kompetencji
   ZZ_PROFK.tab_splt(_wnd,,'horizontal','bottom');
   ZZ_PROFK.grp_sel(_wnd,ZZ_PROFO,'WEO',,
:     po odświeżeniu
      "",
:     położenie i wysokość
      ,,3,
:     przed obsługą
      "ZZ_PROFO.prefix(ZZ_PROFK.ref(),ZZ_PROFT.ref())",
:     po obsłudze
      "",
:     utrwalenie, aktywacja, wypełnienie
      ,,'maximized_with_title'
   );

:  --------------------
:  wartości kompetencji
:  --------------------

:  skala punktowa
   ZZ_PROFK.grp_sel(_wnd,ZZ_KOMPS,'WEO','Skala punktowa'@,
:     po odświeżeniu
      "",
:     położenie i wysokość
      ,,6,
:     przed obsługą
      "ZZ_KOMPS.prefix(ref_name(ZO_TEST.ZZ_DOK),ZO_TEST.ZZ_DOK,ZZ_PROFK.ZZ_KOMP)",
:     po obsłudze
      "",
:     utrwalenie, aktywacja, wypełnienie
      0,0,'maximized'
   );
:  kodowanie wartości
   ZZ_PROFK.grp_sel(_wnd,ZZ_KOMPK,'WEO','Wartości kodowane'@,
:     po odświeżeniu
      "",
:     położenie i wysokość
      ,,6,
:     przed obsługą
      "ZZ_KOMPK.prefix(ref_name(ZO_TEST.ZZ_DOK),ZO_TEST.ZZ_DOK,ZZ_PROFK.ZZ_KOMP)",
:     po obsłudze
      "",
:     utrwalenie, aktywacja, wypełnienie
      0,0,'maximized'
   );
:  wartości bezpośrednie
   ZZ_PROFK.grp_sel(_wnd,ZZ_KOMZB,__WND.SEL.get(ZZ_KOMZB,'WEO'),'Wartości bezpośrednie'@,
:     po odświeżeniu
      "",
:     położenie i wysokość
      ,,6,
:     przed obsługą
      "exec('zz_komzb_fill','phr_widok',ZO_TEST.ZZ_DOK,ZZ_PROFK.ZZ_KOMP)",
:     po obsłudze
      "",
:     utrwalenie, aktywacja, wypełnienie
      0,0,'maximized'
   );

   ''
?};

ZZ_PROFK.cntx_psh();
ZZ_PROFK.win_sel(_wnd);
ZZ_PROFK.select();
ZZ_PROFK.cntx_pop();
~~


\zo_test_formularze_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Formuła po akcji "Formularze".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_org:=ZF_WYK.fld_fml('ZZ_LINK','BLANK',"ZO_TEST.ZZ_DOK");

ZF_DEF.cntx_psh();
ZF_WYK.cntx_psh();

ZF_DEF.win_dict('WEO');

ZF_WYK.index('NAZWA');
ZF_WYK.prefix(ref_name(ZO_TEST.ZZ_DOK),ZO_TEST.ZZ_DOK);
ZF_WYK.win_sel('TEST');
ZF_WYK.select();

ZF_WYK.cntx_pop();
ZF_DEF.cntx_pop();

ZF_WYK.fld_fml('ZZ_LINK','BLANK',_org);
~~


\zo_form_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: "Okienko przed" okienek tabeli ZO_FORM.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('setup_icon','phr_widok','ZZ_TYP','NAZWA');
exec('zz_pom_psh','phr_widok','POC_OFO_RFOC');

_wnd:=cur_win(1,1);
{? _wnd='KOGO_C' | _wnd='KOGO_O' || ZO_FORM.win_patt('WZO_KOGO')
|? _wnd='KTO_C' | _wnd='KTO_O' || ZO_FORM.win_patt('WZO_KTO')
?};

ZZ_OSOBA.win_dict('WER');
ZZ_TYP.win_dict('SLO');

1


\zo_form_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: "Okienko po" okienek tabeli ZO_FORM.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_pop','phr_widok');
ZZ_OSOBA.f_clear();

1


\zo_form_akcje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Blokuje akcje okienek tabeli ZO_FORM umieszczonych w oknach obszaru i czynności.
::   WE: _a [STRING] - akronim okienka
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZO_FORM.actions_grayed(_a,
   {? ZO_PROC.Z='T'
   || 'DUO:D'
   |? ZO_PROC.A='N'
   || 'O:'
   || {? ZO_FORM.sel_size()=0
      || {? ZO_FORM.Z='N'
         || 'O:'
         || ''
         ?}
      || ''
      ?}
   ?})


\zo_form_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Akcja "Dołącz po" okienek formularzy (ZO_FORM)
::   WE:
::   WY: 0
::----------------------------------------------------------------------------------------------------------------------
: wybierz typ oceny
_typ:=null;
ZZ_TYP.cntx_psh();
ZZ_TYP.index('KOD');
ZZ_TYP.prefix('O');
ZZ_TYP.win_sel('WYB');
{? ZZ_TYP.select()<>0
|| _typ:=ZZ_TYP.ref()
|| ZZ_TYP.cntx_pop();
   return()
?};
ZZ_TYP.cntx_pop();

: wybierz współpracownika
_args:=exec('wybierz_args','pracownik');
_args.DOMAIN:='POC';
_args.F_ZATR:='P,K,Z';
_P:=exec('wybierz','pracownik',_args).P;
{? ~_P.first()
|| return()
?};

{? _P.first()
|| _win:=cur_win(1,1);
   P.cntx_psh();
   P.prefix();
   {!
   |? {? P.seek(_P.SQL)
      || {? _win*'KTO_'
         || _osoba_o:=ZO_TEST.ZO_OSOBA;
            _osoba_e:=exec('zo_osoba_p','phr_dane',ZO_PROC.ref(),'E')
         |? _win*'KOGO_'
         || _osoba_e:=ZO_OSOBA.ref();
            _osoba_o:=exec('zo_osoba_p','phr_dane',ZO_PROC.ref(),'O')
         ?};
         {? _osoba_e<>null & _osoba_o<>null
         || _form:=exec('zo_form_form','phr_dane',
               exec('zo_form_test','phr_dane',_osoba_o),
               exec('zo_form_ostyp','phr_dane',_osoba_e,_typ)
            );
            {? _form<>null
            || exec('proc_sf','phr_dane',ZO_FORM.ZO_TEST().ZZ_DOK);
               ZO_FORM.seek(_form)
            ?}
         ?}
      ?};
      _P.next()
   !};
   P.cntx_pop()
?};
0


\zo_form_szukaj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Formuła przed akcją "szukaj" okien wertowania tabeli ZO_FORM.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZZ_OSOBA.prefix();

_wnd:=cur_win(1,1);

{? _wnd='KOGO_C' | _wnd='KOGO_O'
:  szukanie wśród ocenianych
|| ZZ_OSOBA.f_set(
      'NAZWISKO,PIERWSZE,PESEL',,
      'ZZ_OSOBA.REFERENCE in ('
      '  select ZO_FORM.ZZ_KOGO '
      '  from ZO_FORM join ZO_OSTYP using (ZO_FORM.ZO_OSTYP,ZO_OSTYP.REFERENCE) '
      '  where ZO_OSTYP.ZO_OSOBA=:_a '
      ')',
      ZO_OSOBA.ref()
   )

|? _wnd='KTO_C' | _wnd='KTO_O'
:  szukanie wśród oceniających
|| ZZ_OSOBA.f_set(
      'NAZWISKO,PIERWSZE,PESEL',,
      'ZZ_OSOBA.REFERENCE in ('
      '  select ZO_FORM.ZZ_KTO '
      '  from ZO_FORM '
      '  where ZO_FORM.ZO_TEST=:_a '
      ')',
      ZO_TEST.ref()
   )

|| ZZ_OSOBA.f_set(,,'REFERENCE is null')
?};

1


\zo_form_otworz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Formuła przed akcji "Otwórz" okienek tabeli ZO_FORM (obszar i czynność).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ZO_FORM.sel_size()=0 & ZO_FORM.DATA<>date(0,0,0)
|| FUN.ask(
      'Formularz został zamknięty przez oceniającego.\n'
      'Czy anulować jego zamknięcie?'@
   )
|| 1
?}


\zo_form_otworz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Formuła po akcji "Otwórz" okienek tabeli ZO_FORM (obszar i czynność).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZO_FORM.Z:='N';
ZO_FORM.DATA:=date(0,0,0);
ZO_FORM.put()


\zo_form_otworz_gb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Formuła grupa przed akcji "Otwórz" okienek tabeli ZO_FORM (obszar i czynność).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FUN.ask('Czy na pewno anulować zamknięcie wybranych formularzy?'@)


\zo_form_drukuj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Formuła przed akcji "Drukuj" okienek tabeli ZO_FORM (tylko obszar).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZO_TEST.cntx_psh();
ZO_OSOBA.cntx_psh();
ZZ_OSOBA.cntx_psh();

ZO_FORM.ZO_TEST();

exec('report','phr_kreatory',ZO_FORM,'poc_ocprac2','ocena_r.pdf',
   'Formularz oceny pracownika do wypełnienia %1'[ZO_FORM.ZZ_TYP().NAZWA],
   1,'OCPRAC-2'
);

ZZ_OSOBA.cntx_pop();
ZO_OSOBA.cntx_pop();
ZO_TEST.cntx_pop();
~~


\zo_komp_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: "Okienko przed" okienek tabeli ZO_KOMP.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('setup_icon','phr_widok','ZZ_KOMP','NAZWA');
exec('zz_pom_psh','phr_widok','POC_OFO_RFOC');

ZZ_KOMP.win_dict('SLO');
ZO_KOMP.win_edit('RED');

1


\zo_komp_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: "Okienko po" okienek tabeli ZO_KOMP.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_pop','phr_widok');

1


\zo_komp_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Akcja "Dołącz po" ocenianych kompetencji (ZO_KOMP)
::   WE:
::   WY: 0
::----------------------------------------------------------------------------------------------------------------------
ZZ_KOMP.cntx_psh();
ZZ_KOMP.index('NAZWA');
ZZ_KOMP.prefix(exec('init_hist','phr_dane'));
ZZ_KOMP.win_sel('WYB');
{? ZZ_KOMP.select()
|| {? exec('zo_komp_add_check','poc',ZZ_KOMP.ref(),$ZO_FORM.ref())=1
   || ZO_KOMP.cntx_psh();
      ZO_KOMP.blank();
      ZO_KOMP.ZO_FORM:=ZO_FORM.ref();
      ZO_KOMP.ZZ_KOMP:=ZZ_KOMP.ref();
      {? ZO_KOMP.edit("exec('zo_komp_chk','phr_zo_tab',0)")
      || {? ZO_KOMP.add()
         || _dok:=ZO_KOMP.ZZ_KOMP().ZZ_DOK;
            ZZ_PROFO.cntx_psh();
            ZZ_PROFO.index('UNIQUE');
            ZZ_PROFO.prefix(
               exec('get_profk','phr_dane',_dok,ZO_KOMP.ZZ_KOMP),
               exec('get_proft','phr_dane',_dok,ZO_KOMP.ZO_FORM().ZZ_TYP)
            );
            _loop:=ZZ_PROFO.first();
            {!
            |? _loop
            |! exec('nota_create','phr_dane',ZO_KOMP.ref(),ZZ_PROFO.ZZ_MET);
               _loop:=ZZ_PROFO.next()
            !};
            ZZ_PROFO.cntx_pop();
            ZO_NOTA.first()
         ?}
      ?};
      ZO_KOMP.cntx_pop()
   |? exec('zo_komp_add_check','poc',ZZ_KOMP.ref(),$ZO_FORM.ref())=2
   || FUN.info('W formularzu oceny znajdują się kompetencje podrzędne dla wybranej kompetencji nadrzędnej. '+
               'Dołączenie niemożliwe.'@)
   |? exec('zo_komp_add_check','poc',ZZ_KOMP.ref(),$ZO_FORM.ref())=3
   || FUN.info('W formularzu oceny znajduje się kompetencja nadrzędna dla wybranej kompetencji. '+
               'Dołączenie niemożliwe.'@)
   ?}
?};
ZZ_KOMP.cntx_pop()


\zo_nota_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: "Okienko przed" okienek tabeli ZO_NOTA.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('setup_icon','phr_widok','ZZ_MET','NAZWA');
exec('zz_pom_psh','phr_widok','POC_OFO_RFOC');

ZO_NOTA.win_edit('RED');
ZZ_MET.win_dict('SLO');

1


\zo_nota_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: "Okienko po" okienek tabeli ZO_NOTA.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_pop','phr_widok');

ZZ_MET.f_clear();

1


\zo_nota_xxx_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: "Rekord przed" okienek tabeli ZO_NOTA.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY: 0
::----------------------------------------------------------------------------------------------------------------------
ZZ_POM.OCENA:=exec('nota_text','phr_dane',($ZO_NOTA.KLASA)(),ZO_NOTA.ref());
0


\zo_nota_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Przed dołączeniem wiersza do tabeli ZO_NOTA.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=2;
_kod:='';
ZO_NOTA.cntx_psh();
_loop:=ZO_NOTA.first();
{!
|? _loop
|! {? ZO_NOTA.ZZ_MET().RODZAJ='S'
   || ZZ_MET.cntx_psh();
      ZZ_MET.index('RODZAJ');
      ZZ_MET.prefix('S');
      _loop:=ZZ_MET.first();
      {!
      |? _loop
      |! _kod+='\''+ZZ_MET.KOD+'\',';
         _loop:=ZZ_MET.next()
      !};
      ZZ_MET.cntx_pop();
      _ret-=1
   || _kod+='\''+ZO_NOTA.ZZ_MET().KOD+'\',';
      _ret-=1
   ?};
   _loop:=ZO_NOTA.next()
!};
ZO_NOTA.cntx_pop();

{? _kod=''
|| ZZ_MET.f_set('KOD')
|| ZZ_MET.f_set('KOD',,'KOD not in (:_a)',_kod-1)
?};

_ret


\zo_nota_historia_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Formuła po akcji "Historia" okien tabeli ZO_NOTA
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZO_ARCH.cntx_psh();
ZO_ARCH.index('ZO_ARCH');
ZO_ARCH.prefix(ref_name(ZO_NOTA.ZZ_DOK),ZO_NOTA.ZZ_DOK);
ZO_ARCH.win_sel('WER');
ZO_ARCH.select();
ZO_ARCH.cntx_pop();
~~


\zo_nota_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: "Rekord po" okienek tabeli ZO_NOTA.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zo_nota_chk','phr_zo_tab',-menu_txt()='popraw')


\poc_ocw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Główna formuła obszaru roboczego POC_OCW - Oceny okresowe.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('env_wt','poc')
|| return()
?};

P.web_cntx_save(1);

web_params_set(
   exec('obj_ntab_set','#array',,
      'CUR_PRAC_SETID','JA',
      'P_WEB_WER_WYBIERZ_A',"exec('poc_ocw_fill','poc')"
   )
);

{? ~exec('poc_ocw_fill','poc')
|| return()
?};
WT_TREE.web_cntx_save(1);

_ws:='GWER';
WT_ZOS.web_btn_einit(_ws,'P','ZMIEN','state=%1' [{? P_WEB_CX.size()<2 || 'grayed' || 'normal' ?}]);
WT_ZOS.web_select(_ws,,,,"exec('clean','wt_tree',3); web_top_close()");
~~


\poc_ocw_fill
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Formuła odpowiedzialna za wypełnienie tabel "tymczasowych" prezentowanych w obszarze POC_OCW. Wykonywana
::       podczas startu obszaru i po zmianie kontekstu pracy uzytkownika.
::   WE:
::   WY: Wynik operacji: 1/0
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('env_wt','poc')
|| return(0)
?};
:: Ustalenie środowiska (powyżej) ustala również bufory tabel (m.in.) P, OSOBA.
exec('set_title','#b_area','POC_OCW');

_blank:=obj_new('TCID','SESID','TABID','SETID');
_blank.TCID:=app_info('web_tcid');
_blank.SESID:=app_info('web_sesid');
_blank.TABID:=app_info('web_tabid');
_blank.SETID:='poc_ocw';
params_set('blank',_blank);

WT_TREE.index('KEY');
WT_TREE.prefix(_blank.TCID,_blank.SESID,_blank.TABID,_blank.SETID,);
exec('clean','wt_tree',3,_blank.SETID);

WT_ZOS.prefix();

_add:=
   "  _parent:=_a;
      _name:=_b;
      _key:={? var_pres('_c')=type_of('') || _c ||  _name ?};
      _type:=_d;
      _id:={? var_pres('_e')=type_of('') || _e || '' ?};
      {? WT_TREE.find_key(_parent,_key,)
      || WT_TREE.ref()
      || _blank:=params_get().blank;
         WT_TREE.blank();
         WT_TREE.SETID:=_blank.SETID;
         WT_TREE.PARENT:=_parent;
         WT_TREE.NAME:=_name;
         WT_TREE.KEY:=_key;
         WT_TREE.TYPE:=_type;
         WT_TREE.ID:=_id;
         {? WT_TREE.add()
         || WT_TREE.ref()
         ?}
      ?}
   "
;

_DANE:=exec('poc_ocw_dane','poc',P.ref());
{? type_of(_DANE)=type_of(~~)
|| return(0)
?};

{? _DANE.last()
|| _maxR:=_DANE.R+1;
   {!
   |? _rok:=_add(0,$_DANE.R,form(_maxR-_DANE.R,-3),'R');
      _prg:=_add(#_rok,_DANE.NAZWA,,'PRG');
      _odr:=date(_DANE.OKRES_OD~1,12,0);
      _ref:=_add(
         #_prg,
         '%1 - %2' [_DANE.OKRES_OD$1,_DANE.OKRES_DO$1],
         '%1|%2' [form(_odr-_DANE.OKRES_OD,-3),form(_odr-_DANE.OKRES_DO,-3)],
         'PRC',
         _DANE.ZO_PROC
      );
      WT_ZOS.blank();
      WT_ZOS.WT_TREE:=_ref;
      WT_ZOS.NAZWISKO:=_DANE.NAZWISKO;
      WT_ZOS.PIERWSZE:=_DANE.PIERWSZE;
      WT_ZOS.JOS:=_DANE.JOS;
      WT_ZOS.JON:=_DANE.JON;
      WT_ZOS.STN:=_DANE.STN;
      WT_ZOS.PODWLAD:=_DANE.PODWLAD;
      WT_ZOS.OCENIAJ:=_DANE.OCENIAJ;
      WT_ZOS.EDYTUJ:=_DANE.EDYTUJ;
      WT_ZOS.KOMPLET:=_DANE.KOMPLET;
      WT_ZOS.WYNIK:=_DANE.WYNIK;
      WT_ZOS.ZO_PROG:=_DANE.ZO_PROG;
      WT_ZOS.ZO_PROC:=_DANE.ZO_PROC;
      WT_ZOS.ZO_TEST:=_DANE.ZO_TEST;
      WT_ZOS.ZZ_OSOBA:=_DANE.ZZ_OSOBA;
      WT_ZOS.P:=_DANE.P;
      WT_ZOS.add();
      _DANE.prev()
   !}
?};

1


\poc_ocw_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Dane do budowy widoku obszaru POC_OCW.
::   WE: _a [REFERENCE] - Wskazanie pracownika.
::   WY: Tabela tymczasowa z danymi lub ~~ w przypadku błędów.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) & _a<>null() & ref_tab(_a)=P
|| _Pref:=_a
|| FUN.error('Nieprawidłowe wywołanie formuły %1.'@ ['\\poc_ocw_dane/poc.fml']);
   return()
?};

P.cntx_psh();
P.prefix();
{? P.seek(_Pref)
|| _Psql:=$P.ref();
   _osoba:=P.OSOBA;
   _zz_dok:=P.ZZ_DOK;
   _zz_osoba:=exec('czy_osoba','phr_dane',P,1)
|| _Psql='';
   _osoba:=_zz_dok:=_zz_osoba:=null()
?};
P.cntx_pop();

{? _osoba=null() | _zz_dok=null() | _zz_osoba=null()
|| FUN.emsg('Ustalenie osoby nie powiodło się.'@);
   return()
?};

:: Podwładni.
OSOBA.cntx_psh();
_POD:=exec('prac_pod','stanprac',_osoba,'TYPPOZ','DOSTINF');
OSOBA.cntx_pop();
{? _POD.first()
|| {!
   |? {? _POD.L=1
      || _POD.next()
      || _POD.del()
      ?}
   !}
?};
_POD.index(_POD.ndx_tmp(,,'P_SQL',,));

_select:=
:: Dane do struktury hierarchicznej
   'ZO_PROG.NAZWA, '
   'ZO_PROC.R, ZO_PROC.OKRES_OD, ZO_PROC.OKRES_DO, '
:: Dane do części wertowania
   'ZZ_OSOBA.NAZWISKO, ZZ_OSOBA.PIERWSZE, '
   'UD_SKL.SYMBOL as JOS, UD_SKL.OPIS as JON, '
   'STN.ST as STN, '
:: Pola uzupełniane formułowo
::    Czy pracownik jest podwładnym właściciela widoku?
   '\'N\' as PODWLAD, '
::    Czy właściciel widoku jest oceniającym?
   '\'N\' as OCENIAJ, '
::    Czy właściciel widoku może modyfikować ocenę (= jest oceniającym & formularz nie jest zamknięty)?
   '\'N\' EDYTUJ, '
::    Czy ocena jest kompletna (wszystkie formularze są zamknięte)?
   '\'N\' as KOMPLET, '
::    Wynik oceny - procent ocent oczekiwanych i powyżej oczekiwań do wszystkich ocen.
   'cast (0 as real_type) as WYNIK, '
:: Pola techniczne
   'ZO_PROG.REFERENCE as ZO_PROG, ZO_PROC.REFERENCE as ZO_PROC, '
   'ZO_TEST.REFERENCE as ZO_TEST, ZZ_OSOBA.REFERENCE as ZZ_OSOBA, P.REFERENCE as P, '
   'SPACE(16) TEST_DOK, \'N\' TEST_MOD ';
_joinZO_OSOBA:=
   'join ZO_OSOBA using(ZO_TEST.ZO_OSOBA,ZO_OSOBA.REFERENCE) '
   'join UD_SKL using(ZO_OSOBA.UD_SKL,UD_SKL.REFERENCE) '
   'join STN using(ZO_OSOBA.STN,STN.REFERENCE) '
   'join ZZ_OSOBA using(ZO_OSOBA.ZZ_OSOBA,ZZ_OSOBA.REFERENCE) '
   'join ZO_PROC using(ZO_OSOBA.ZO_PROC,ZO_PROC.REFERENCE) '
   'join ZO_PROG using(ZO_PROC.ZO_PROG,ZO_PROG.REFERENCE) '
   'join P using(ZZ_OSOBA.ZZ_LINK,P.ZZ_DOK) ';
_joinZO_TEST:='join ZO_TEST using(ZO_FORM.ZO_TEST,ZO_TEST.REFERENCE) '+_joinZO_OSOBA;
_where:='(ZO_PROC.A=\'T\' or ZO_PROC.Z=\'T\') and ';

:: Główne zapytanie przygotowujące dane.
_DANE:=sql(
:: Podwładni
   'select '+_select+
   'from ZO_TEST '+_joinZO_OSOBA+
   'where '+_where+'ZZ_OSOBA.ZZ_LINK in (select P.ZZ_DOK from P join :_a using(P.REFERENCE,:_a.P_SQL)) '
:: Oceniani przez właściciela widoku
   'union distinct '
   'select '+_select+
   'from ZO_FORM '+_joinZO_TEST+'join ZZ_OSOBA as E using(ZO_FORM.ZZ_KTO,E.REFERENCE) '
   'where '+_where+'E.REFERENCE=:_b '
:: Właściciel widoku, jako oceniany
   'union distinct '
   'select distinct '+_select+
   'from ZO_FORM '+_joinZO_TEST+'join ZZ_OSOBA as E using(ZO_FORM.ZZ_KOGO,E.REFERENCE) '
   'where '+_where+'E.REFERENCE=:_b '

   'order by ZO_PROC.R, ZO_PROG.NAZWA, ZO_PROC.OKRES_OD, ZO_PROC.OKRES_DO, ZZ_OSOBA, ZO_TEST ',
   _POD,_zz_osoba
);

:: Zapytanie pomocnicze, które będzie służyło do obliczenia wyniku.
_RES:=sql(
   'select ZO_FORM.ZO_TEST, ZO_KOMP.STATUS as CHK, count(*) as ILE '
   'from ZO_KOMP join ZO_FORM using(ZO_KOMP.ZO_FORM,ZO_FORM.REFERENCE) '
   'group by ZO_FORM.ZO_TEST, ZO_KOMP.STATUS '
   'order by 1, 2 '
);

:: Formułowe uzupełnianie danych
{? _DANE.first()
|| ZO_TEST.cntx_psh();
   ZO_TEST.prefix();
   ZO_FORM.cntx_psh();
   ZO_FORM.index('UNIQUE');
   ZZ_OSOBA.cntx_psh();
   ZZ_OSOBA.prefix();
   ZZ_TYP.cntx_psh();
   ZZ_TYP.index('KOD');
   ZZ_TYP.prefix();
   _zz_typ_PB:={? ZZ_TYP.find_key('O','PB') || ZZ_TYP.ref() || null() ?};
   _zz_typ_OU:={? ZZ_TYP.find_key('O','OU') || ZZ_TYP.ref() || null() ?};
   {!
   |? {? _POD.find_key(_DANE.P,)
      || _DANE.PODWLAD:='T';
         _put:=1
      || _put:=0
      ?};
      {? ZO_TEST.seek(_DANE.ZO_TEST)
      || ZO_FORM.prefix(ZO_TEST.ref());
         {? ZO_FORM.first()
         || _zo_form_z:=0;
::          ^ Liczba zatwierdzonych formularzy
            {!
            |? _zo_form_z+=ZO_FORM.Z='T';
::             Osoba oceniająca.
               {? ZO_FORM.ZZ_KTO=_zz_osoba
::                Jeżeli właściciel widoku jest osobą oceniająca ...
               || _DANE.OCENIAJ:='T';
                  {? ZO_FORM.Z<>'T'
                  || _DANE.EDYTUJ:='T'
                  ?};
                  {? (ZO_FORM.ZZ_TYP=_zz_typ_PB & |_DANE.TEST_DOK='') | ZO_FORM.ZZ_TYP=_zz_typ_OU
                  || _DANE.TEST_DOK:=$ZO_FORM.ZO_TEST().ZZ_DOK;
                     {? ZO_FORM.Z<>'T'
                     || _DANE.TEST_MOD:='T'
                     ?}
                  ?};
                  _put+=1
               ?};
               ZO_FORM.next()
            !};
::          Wyliczanie wyniku - procentu kompetencji ocenionych co najmniej na poziomie oczekiwanym
            {? _DANE.P=_Psql | _DANE.PODWLAD='T'
            || _RES.prefix($ZO_TEST.ref(),);
               _ex:=_hi:=_cnt:=0;
               _loop:=_RES.first();
               {!
               |? _loop
               |! {? _RES.CHK='='
                  || _ex+=_RES.ILE
                  |? _RES.CHK='+'
                  || _hi+=_RES.ILE
                  ?};
                  {? _RES.CHK<>'?'
                  || _cnt+=_RES.ILE
                  ?};
                  _loop:=_RES.next()
               !};
               {? _cnt
               || _DANE.WYNIK:=(100*(_ex+_hi)/_cnt)$2;
                  _put+=1
               ?}
            ?};
::          Koniec wyliczania wyniku
            {? _zo_form_z=ZO_FORM.size()
::             Czy zatwierdzono wszystkie formularze?
            || _DANE.KOMPLET:='T';
               _put+=1
            ?}
         ?}
      ?};
      {? _put
      || _DANE.put()
      ?};
      _DANE.next()
   !};
   ZZ_TYP.cntx_pop();
   ZZ_OSOBA.cntx_pop();
   ZO_FORM.cntx_pop();
   ZO_TEST.cntx_pop()
?};

_DANE


\wt_zos_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Obsługa akcji "Po odświeżeniu" okna WER tabeli WT_ZOS w obszarze POC_OCW.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Wstępnie zakładamy blokadę wszystkich akcji modyfikujących.
_ag:='OZD';

{? exec('env_wt','poc') & WT_ZOS.get()
|| _ag:='';
   {? ~exec('zo_form_eready','phr_dane',WT_ZOS.ZO_TEST,$exec('czy_osoba','phr_dane',P),1).first()
::    Nie ma akcji "Zakończ", jeżeli nie ma choć jednego otwartego formularza.
   || _ag+='Z'
   ?};
   {? ~(WT_ZOS.KOMPLET='T' & exec('zo_test_owner_or_pb','phr_dane',WT_ZOS.ZO_TEST,$P.ref()))
::    Nie ma akcji "Dokument oceny", jeżeli ocena nie jest kompletna, a przeglądający nie jest:
::       - osobą ocenianą;
::       - osobą spełniającą rolę PB.
   || _ag+='D'
   ?}
?};

WT_ZOS.web_win_opt(web_top_win(),web_top_ident(),'grayed=%1:' [_ag]);
~~


\poc_ocw_rocp_run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Główna formuła uruchamiająca czynność POC_OCW_ROCP.
::   WE:  _a  [STRING] - SQL-ref formularza na rzecz którego uruchamiana jest czynność.
::       [_b] [STRING] - Akcja [domyślnie: ''];
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & +_a=16 & ref_tab(_a)=ZO_FORM
|| _zo_form:=_a
|| return()
?};
_akcja:={? var_pres('_b')=type_of('') || _b || '' ?};

ZO_FORM.cntx_psh();
ZO_FORM.prefix();
{? ZO_FORM.seek(_a)
|| _uid:=ZO_FORM.uidref();
   _ref:=ZO_FORM.ref()
|| _uid:='';
   _ref:=null()
?};
ZO_FORM.cntx_pop();
{? _ref=null()
|| FUN.info('Odnalezienie formularza nie powiodło się.'@)
|| _aid:='POC_OCW_ROCP';
   _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:=_aid;
   _params.UIDREF:=_uid;
   _params.AKCJA:=_akcja;
   _params.PROC_START:='N';
   _params.GRUPA:='N';
   _params.PORTS_IN:=$(
      "  _aid:='"+_params.ACT_UID+"';
         _ref:=exec('FindAndGet','#table',ZO_FORM,'"+_uid+"',,,null());
         _ports_in:=exec('portsIn','#b__box',_aid);
         exec('portsInSet','#b__box',_ports_in,_aid,'ZO_FORM',_ref);
         _ports_in
      "
   );
   exec('mp_run','#b__box',_params)
?};
~~


\poc_ocw_rocp_akcja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Część wspólna obsługi akcji związanych z czynnością POC_OCW_ROCP wywoływanych z obszaru roboczego.
::   WE: [_a] [STRING] - Akcja [domyślnie: ''];
::       [_b] [NUMBER] - Czy pomijać formularze zamknięte? [0*/1]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_akcja:={? var_pres('_a')=type_of('') || _a || '' ?};
_bezzamk:=var_pres('_b')=type_of(0) & _b;

web_params_set(_par:=web_params_get());
{? ~(exec('env_wt','poc') & exec('exist','#record'))
|| return()
?};

WT_ZOS.web_cntx_save(1);

_mprun:=$("exec('poc_ocw_rocp_run','poc',_a,'"+_akcja+"')");

_TAB:=exec('zo_form_eready','phr_dane',WT_ZOS.ZO_TEST,$exec('czy_osoba','phr_dane',P,1),_bezzamk);

{? _TAB.size()>1
|| _tcid:=app_info('web_tcid');
   _sesid:=app_info('web_sesid');
   _tabid:=app_info('web_tabid');
   _setid:='ZZ_TYP';

:: Ponieważ webTerm nie pozwala na korzystanie z tabel tymczasowych, dostepne role zaprezentujemy przy pomocy tabeli
:: WT_TREE. Zaczniemy od wyczyszczenie jej zawartości - koniecznie ze wskazaniem identyfikatora zestawu danych!
   exec('clean','wt_tree',3,_setid);
   WT_TREE.cntx_psh();
   WT_TREE.index('KEY');
   WT_TREE.prefix(_tcid,_sesid,_tabid,_setid,0);
   {? _TAB.first()
   || {!
      |? WT_TREE.blank();
         WT_TREE.SETID:=_setid;
         WT_TREE.NAME:='%1 - %2 %3' [_TAB.KOD,_TAB.NAZWA,{? _TAB.Z='T' || '(zamknięty)'@  || '' ?} ];
         WT_TREE.ID:=_TAB.ZO_FORM;
         WT_TREE.add();
         _TAB.next()
      !}
   ?};

   web_params_set(
      exec('obj_ntab_set','#array',_par,
         'mprun',_mprun,
         'WT_TREE_WYB1F_WYBIERZ_A',
            "  WT_TREE.web_close();
               {? exec('env_wt','poc') & WT_TREE.get()
               || web_params_set(_par:=web_params_get());
                  WT_ZOS.web_cntx_load(1);
                  WT_ZOS.web_cntx_save(1);
                  _par.mprun(WT_TREE.ID)
               ?}
            "
      )
   );

   _ws:='WYB1F';
   WT_TREE.web_win_init(_ws,,'title=%1' ['Rola'@]);
:: Przy zamykaniu okna posprzątajmy w tabeli WT_TREE - koniecznie ze wskazaniem identyfikatora zestawu danych!
   WT_TREE.web_select(_ws,,,,$('WT_TREE.web_close(); exec(\'clean\',\'wt_tree\',3,\''+_setid+'\')'));
   WT_TREE.cntx_pop()

|? _TAB.first()
|| _mprun(_TAB.ZO_FORM)
?};
~~


\poc_ocw_ocena
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Obsługa akcji "Ocena" w obszarze roboczym POC_OCW - "Oceny okresowe". Akcja uruchamia czynność
::       POC_OCW_ROCP - Rejestracja oceny.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Kontrola i ustawienie środowiska realizowane jest w wywoływanej formule.
exec('poc_ocw_rocp_akcja','poc','OCENA')


\poc_ocw_zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Obsługa akcji "Zakończ" w obszarze roboczym POC_OCW - "Oceny okresowe". Akcja uruchamia czynność
::       POC_OCW_ROCP - Rejestracja oceny.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Kontrola i ustawienie środowiska realizowane jest w wywoływanej formule.
exec('poc_ocw_rocp_akcja','poc','ZAKOŃCZ',1)


\poc_ocw_dokument
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Obsługa akcji "Dokument oceny" w obszarze roboczym POC_OCW - "Oceny okresowe". Akcja uruchamia czynność
::       POC_OCW_GDOK - Generowanie dokumentu oceny.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
web_params_set(_par:=web_params_get());
{? ~(exec('env_wt','poc') & exec('exist','#record'))
|| return()
?};

ZO_TEST.cntx_psh();
ZO_TEST.prefix();
_uid:={? ZO_TEST.seek(WT_ZOS.ZO_TEST) || ZO_TEST.uidref() || '' ?};
ZO_TEST.cntx_pop();
{? _uid=''
|| FUN.error('Nieprawidłowa wartość wskazania na tabelę %1 [%2].'@ ['ZO_TEST',WT_ZOS.ZO_TEST]);
   return()
?};

WT_ZOS.web_cntx_save(1);

_aid:='POC_OCW_GDOK';
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:=_aid;
_params.UIDREF:=_uid;
_params.PROC_START:='N';
_params.GRUPA:='N';
_params.PORTS_IN:=$(
   "  _aid:='"+_params.ACT_UID+"';
      _ref:=exec('FindAndGet','#table',ZO_TEST,'"+_uid+"',,,null());
      _ports_in:=exec('portsIn','#b__box',_aid);
      exec('portsInSet','#b__box',_ports_in,_aid,'ZO_TEST',_ref);
      _ports_in
   "
);
exec('mp_run','#b__box',_params)


\wt_zcel_clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Kasowanie danych w tabeli WT_ZCEL.
::   WE: _a [INTEGER] - Moment wywołania:
::                      1 - Start TOMCATA - kasowane są wszystkie rekordy związane z identyfikatorem serwera.
::                      2 - Zakończenie sesji webTerma - kasowane są tylko rekordy związane z daną sesją.
::                      3 - Zamknięcie zakładki - kasowane są tylko rekordy związane z daną zakładką.
::   WY: Wynik operacji:
::       0 - Operacja zakończyła się sukcesem.
::       1 - Operacja nie zakończyła się sukcesem.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & (0<_a & _a<4)
|| _tryb:=_a
|| return(0)
?};

WT_ZCEL.cntx_psh();
WT_ZCEL.index('KOD');
{? _tryb=1
|| WT_ZCEL.prefix(app_info('web_tcid'),)
|? _tryb=2
|| WT_ZCEL.prefix(app_info('web_tcid'),app_info('web_sesid'),)
|| WT_ZCEL.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),)
?};
{? WT_ZCEL.first()
|| {!
   |? WT_ZCEL.del()
   !}
?};
_ret:=~WT_ZCEL.first();
WT_ZCEL.cntx_pop();
_ret


\wt_zos_gwer_wt_tree_wer_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Przed obsługą okna WER tabeli WT_TREE w ramach okna grupowego GWER tabeli WT_ZOS.
::       Ponieważ okno grupowe zbudowane jest na tabeli WT_ZOS, a nie WT_TREE (którego okno WER jest głównym oknem w
::       grupie), to należy zadbać o ustawienie (pobranie) prawidłowego kontekstu tabeli WT_TREE.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
web_params_set(web_params_get());
:: Formuła odpowiedzialna tylko za dziedzinę tabeli WT_TREE - odtwarzanie środowiska nie jest potrzebne.
WT_TREE.web_cntx_load(1);
~~


\wt_zos_gwer_wt_zos_wer_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Przed obsługą okna WER tabeli WT_ZOS w ramach okna grupowego GWER tabeli WT_ZOS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
web_params_set(web_params_get());
:: Formuła odpowiedzialna tylko za dziedzinę tabeli WT_ZOS - odtwarzanie środowiska nie jest potrzebne.
_ref:=web_win_ref('tree');
WT_ZOS.index('NI');
WT_ZOS.prefix(_ref);
~~


\zo_test_memo_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.22]
:: OPIS: Wyświetla do wglądu podsumowującą ocenę opisową (systemowy element formularza ocen),
::   WE: Wskazanie na ocenę całkowitą.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ZO_TEST.memo_get(,'POO')
|| exec('edit_memo_fld','#edit',ZO_TEST,'POO',-1,ZO_TEST.comment(),,,,50,10)
?}


\wt_stat_clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.42]
:: OPIS: Kasowanie danych w tabeli WT_STAT.
::   WE: _a [INTEGER] - Moment wywołania:
::                      1 - Start TOMCATA - kasowane są wszystkie rekordy związane z identyfikatorem serwera.
::                      2 - Zakończenie sesji webTerma - kasowane są tylko rekordy związane z daną sesją.
::                      3 - Zamknięcie zakładki - kasowane są tylko rekordy związane z daną zakładką.
::       [_b] [STRING]  - Identyfikator zestawu danych (parametr ma znaczenie wyłącznie dla _a=3).
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & (0<_a & _a<4)
|| _tryb:=_a
|| return(0)
?};

WT_STAT.cntx_psh();
WT_STAT.index('KEY');
{? _tryb=1
|| WT_STAT.prefix(app_info('web_tcid'),)
|? _tryb=2
|| WT_STAT.prefix(app_info('web_tcid'),app_info('web_sesid'),)
|? _tryb=3
|| {? var_pres('_b')=type_of('')
   || WT_STAT.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),_b,)
   || WT_STAT.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),)
   ?}
?};
{? WT_STAT.first()
|| _del:=
      "  _del:=_a;
         WT_STAT.cntx_psh();
         WT_STAT.prefix(WT_STAT.TCID,WT_STAT.SESID,WT_STAT.TABID,WT_STAT.SETID,#WT_STAT.ref());
         {? WT_STAT.first()
         || {!
            |? _del(_del)
            !}
         ?};
         WT_STAT.cntx_pop();
         WT_STAT.del()
      ";
   {!
   |? _del(_del)
   !}
?};
_ret:=~WT_STAT.first();
WT_STAT.cntx_pop();
_ret


\zo_komp_add_check
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.42]
:: OPIS: Formuła sprawdza czy można dodać wybraną kompetencję do formularza oceny (czy nie kłóci się z dodaną wcześniej
::       kompetencją nadrzędną, o ile taką posiada).
::   WE: _a - wskazanie na ZZ_KOMP (Kompetencja), _b - wskazanie na formualrz oceny
::   WY: 1 - kompetencja może być dodana, 0 - kompetencji nie można dodać
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(,'REF','STRING[16]',);
_valid:=0;
ZZ_KOMP.cntx_psh();
{? _a<>null()
|| {? ZZ_KOMP.ZZ_KOMP=0
   || ZZ_KOMP.index('NAZWA');
      ZZ_KOMP.prefix(exec('init_hist','phr_dane'),ZZ_KOMP.ref());
      _loop:=ZZ_KOMP.first();
      {!
      |? _loop
      |! _tab.REF:=$ZZ_KOMP.ref();
         _tab.add();
         _loop:=ZZ_KOMP.next()
      !};
      _form:=sql('
         select
            ZZ_KOMP.REFERENCE as REF
         from
            ZO_KOMP join ZZ_KOMP join ZO_FORM
         where
            ZO_FORM.REFERENCE=\':_a\'',
         _b
      );
      _check:=sql('select REF from :_a where REF IN (select REF from :_b)',_tab,_form);
      {? ~_check.size()
      || _valid:=1
      || _valid:=2
      ?}
   || _komp:=$ZZ_KOMP.ref();
      _form:=sql('
         select
            ZZ_KOMP.REFERENCE as REF
         from
            ZO_KOMP join ZZ_KOMP join ZO_FORM
         where
            ZO_FORM.REFERENCE=\':_a\' and ZZ_KOMP.ZZ_KOMP=0',
         _b
      );
      _loop:=_form.first();
      {!
      |? _loop
      |! _ref:=exec('FindAndGet','#table',ZZ_KOMP,_form.REF,,,null());
         ZZ_KOMP.prefix(exec('init_hist','phr_dane'),_ref);
         _loop:=ZZ_KOMP.first();
         {!
         |? _loop
         |! _tab.REF:=$ZZ_KOMP.ref();
            _tab.add();
            _loop:=ZZ_KOMP.next()
         !};
         _loop:=_form.next()
      !};
      _check:=sql('
         select
            REF
         from
            :_a
         where
            REF=\':_b\'',
         _tab,_komp
      );
      {? ~_check.size()
      || _valid:=1
      || _valid:=3
      ?}
   ?}
?};
ZZ_KOMP.cntx_pop();
_valid


\poc_ofo_parametry
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [21.37]
:: OPIS: Główna formuła - Sesja ocen (Formularze ocen).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
_tree_tab:=exec('tree_prog','poc');
_tree_ndx:=_tree_tab.ndx_tmp(,,'PARENT',,1);
_tmp_tab:=_tree_tab.index('?');
_tree_wnd:=exec('tree_wnd','poc',_tree_tab);
_doc:=exec('dsk_get_prog','poc');

params_set(
   'tree_tab',_tree_tab,
   'tree_wnd',_tree_wnd,
   'tree_ndx',_tree_ndx,
   'doc',_doc
);

_doc.for_each("
   _par:=params_get().tree_tab;
   _doc:=params_get().doc;
   _par.PARENT := 0;
   _par.REF:=_par.KOD := '';
   _par.OPIS := _doc.NAZWA;
   _par.REF_PROG:=_par.ID:=_doc.REF;
   _par.add();
   _parent:=_par.ref();
   ZO_PROG.cntx_psh();
   ZO_PROG.prefix();
   ZO_PROC.cntx_psh();
   ZO_PROG.seek(_doc.REF);
   ZO_PROC.index('OKRES_OD');
   ZO_PROC.prefix(ZO_PROG.ref());

   {? ZO_PROC.first()
   || {!
      |?
         _par.PARENT := #_parent;
         _p1:={? ZO_PROC.A='T' || 'Otwarta' || 'Nieotwarta'?};
         _p2:={? ZO_PROC.Z='T' || 'Zamknięta' || 'Niezamknięta' ?};
         _opis:=$(ZO_PROC.OKRES_OD)+' - '+$(ZO_PROC.OKRES_DO)+' '+_p1+', '+_p2;
         _par.OPIS := _opis;
         _par.REF:= $ZO_PROC.ref();
         _par.KOD := _opis;
         _par.ID:= '';
         _par.add();
         ZO_PROC.next()
      !}
   ?};
   ZO_PROC.cntx_pop();
   ZO_PROG.cntx_pop()
");
_tree_tab.win_sel(_tree_wnd);
{? _tree_tab.select()
|| params_set(_par);
   _par.ctx.ZO_PROG:=ZO_PROG.ref();
   _par.ctx.ZO_PROC:=ZO_PROC.ref();
   AreaTitle.setTabWin(P,_par.ctx.grp);
   AreaTitle.setTitle();
   grp_disp(ZO_OSOBA,'WER_OI',1,1)
?}


\tree_prog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [21.37]
:: OPIS: Tworzy tabelę nawigatora dla parametrów sesji ocen.
::   WE: ~~
::   WY: alias tabeli
::----------------------------------------------------------------------------------------------------------------------
tab_tmp(2,
   'PARENT', 'TREE_REF', 'Rodzic'@,
   'ID', 'STRING[20]', 'Symbol paczki'@,
   'KOD', 'STRING[80]', 'Kod'@,
   'OPIS', 'STRING[80]', 'Opis'@,
   'REF_PROG','STRING[20]','Wskazanie programu'@,
   'REF','STRING[16]','Wskazanie sesji'@
   )


\tree_wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [21.37]
:: OPIS: Tworzy okno wyboru parametrów sesji ocen.
::   WE: _a [TABLE] - alias tabeli nawigatora
::   WY: alias okna wertowania
::----------------------------------------------------------------------------------------------------------------------
_TREE:=_a;
_win:=_TREE.mk_sel('Sesja ocen'@,'P',0,'#dynatree',,,,1);
_TREE.win_sopt(_win,'select_record_checkbox=0');
_TREE.win_fld(_win,, 'OPIS',,, 30,,,,1);
_TREE.win_act(_win,,'Formuła','Wybierz'@@,,'Wybór programu oraz sesji'@,,
               "
               {? ~(ZO_PROG.seek(cur_tab().REF_PROG))
               || FUN.emsg(
                     'Wystąpił błąd podczas ustalania programu ocen.\n'
                     'Obszar roboczy zostanie zamknięty.'@
                  );
                  sel_exit()
               ?};
               ZO_PROC.index('OKRES_OD');
               ZO_PROC.prefix(ZO_PROG.ref());
               {? ~(ZO_PROC.seek(cur_tab().REF))
               || FUN.emsg(
                     'Wystąpił błąd podczas ustalania sesji ocen.\n'
                     'Obszar roboczy zostanie zamknięty.'@
                  )
               ?};
               sel_exit()
               ",1,,,,'W');
_TREE.actions_grayed(_win,'W');
_TREE.win_act(_win,,'Rekord',,,,
               "
               _gray:={? cur_tab().PARENT = 0 || 'W' || '' ?};
               cur_tab().actions_grayed(cur_win(1,1),_gray);
               ''
               ");
_TREE.win_sel(_win);
_win


\poc_ofo_widok_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [21.37]
:: OPIS: Zmiana widoku uproszczony/rozbudowany.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('pxx_widok_zmien','pkd','POC_OFO')


:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:37 52a0e2d9b2607de54ec74fda296861b5342528c022de64b1b9d24a1f07d890e3119e528b68a50cec7c8afd06cc789d879cc8748435507436cd35c1dfe52c517f00af9c8104d8e9746559cc6bb36301b97354852028db561791bf9ca76823e4e4dccc7cc1c761783c0a7092351f72cab3b5d1150fa84d258dbb0a25cf844e5f8a
