:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: rejestry.fml
:: Utworzony: 2015.01.29
:: Autor: AMK
::======================================================================================================================
:: Zawartość: Funkcje odpowiedzialne za obsługę rejestrów księgowych
::======================================================================================================================

:: TODO: !!! Do wyjaśnienia
:: bo i bz zostaja, kopiowania do przeniesienia w momencie, kiedy zrobię kopiowanie struktur między latami


\add_bobz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Dodaje lub kopiuje z poprzedniego roku rejestry ~BO i ~BZ
::       do wskazanego roku bilansowego
::   WE: _a - wskazanie na fiksowy rok bilansowy (ref)
::       _b - jednostka ksiegowa: ODD.OD- konkretna ''- wszystkie
::  OLD: \add_bobz/skid_rej.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=SSTALE.AR; _b:='' ?};
{? _=1 || _b:='' ?};
ROK_F.cntx_psh();
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
ROK_F.seek(_a);
_r:={? ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref()) & ROK_F.prev()
    || ROK_F.ref()
    || null
    ?};
ROK_F.cntx_pop();
REJ.cntx_psh();
REJ.index('KOD');
ODD.cntx_psh();
ODD.index('ODDZIALY');
{? _b<>'' || ODD.prefix(REF.FIRMA,_b,_b) || ODD.prefix(REF.FIRMA) ?};
{? ODD.first() ||
   {! |?
      REJ.prefix(_a,ODD.ref);
      _bo:=~REJ.find_key('~BO','~BO');
      _bz:=~REJ.find_key('~BZ','~BZ');
      {? _bo ||
         REJ.prefix( {? _r || _r || _a ?},ODD.ref );
         {? ~REJ.find_key('~BO','~BO')
         || {? _r || REJ.prefix(_a,ODD.ref) ?};
            exec('add_bo','rejestry',_a,ODD.ref);
            {? _r || REJ.prefix(_r,ODD.ref) ?}
         || {? _r ||
               exec('copy_rej','rejestry',_a,ODD.ref(),'~BO')
            ?}
         ?}
      ?};
      {? _bz ||
         REJ.prefix( {? _r || _r || _a ?},ODD.ref );
         {? ~REJ.find_key('~BZ','~BZ')
         || {? _r || REJ.prefix(_a,ODD.ref) ?};
            exec('add_bz','rejestry',_a,ODD.ref);
            {? _r || REJ.prefix(_r,ODD.ref) ?}
         || {? _r ||
               exec('copy_rej','rejestry',_a,ODD.ref(),'~BZ')
            ?}
         ?}
      ?};
      ODD.next()
   !}
?};
ODD.cntx_pop();
REJ.cntx_pop()


\add_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Dodaje rejestr ~BO do wskazanego roku i jednostki księgowej
::   WE: _a - wskazanie na rok bilansowy
::       _b - wskazanie na jednostke ksiegową
::  OLD: \add_bo/skid_rej.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~REJ.find_key('~BO','~BO')
|| REJ.KOD:='~BO';
   REJ.ROK:=_a;
   REJ.ODD:=_b;
   REJ.NAZ:='Rejestr Bilansu otwarcia';
   REJ.WAL:='N';
   _ok:=REJ.add()
|| _ok:=1
?};
{? _ok
|| SLU.cntx_psh(); SLO.cntx_psh(); DOK_REJ.cntx_psh();
   SLU.index('NAZ');   SLU.prefix('~RODZAJE DOKUMENTÓW');
   {? SLU.first()
   || SLO.index('SL');  SLO.prefix(SLU.ref, 'BO');
      {? SLO.first()
      || DOK_REJ.index('NAZ');   DOK_REJ.prefix(REJ.ref);
         {? DOK_REJ.first()
         || {!|? _ok:=~(DOK_REJ.SLO=SLO.ref()); DOK_REJ.next() & _ok !}
         ?};
         {? _ok
         || DOK_REJ.blank();
            DOK_REJ.REJ:=REJ.ref(); DOK_REJ.SLO:=SLO.ref(); DOK_REJ.NAZ:=SLO.TR;
            DOK_REJ.add()
         ?}
      ?};
      SLO.index('SL');    SLO.prefix(SLU.ref, 'KOR_BO');
      {? SLO.first()
      || DOK_REJ.index('NAZ');   DOK_REJ.prefix(REJ.ref);
         {? DOK_REJ.first()
         || {!|? _ok:=~(DOK_REJ.SLO=SLO.ref()); DOK_REJ.next() & _ok !}
         ?};
         {? _ok
         || DOK_REJ.blank();
            DOK_REJ.REJ:=REJ.ref(); DOK_REJ.SLO:=SLO.ref(); DOK_REJ.NAZ:=SLO.TR;
            DOK_REJ.add()
         ?}
      ?}
   ?};
   SLU.cntx_pop(); SLO.cntx_pop(); DOK_REJ.cntx_pop()
?}


\add_bz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Dodaje rejestr ~BZ do wskazanego roku i jednostki księgowej
::   WE: _a - wskazanie na rok bilansowy
::       _b - wskazanie na jednostke ksiegową
::  OLD: \add_bz/skid_rej.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~REJ.find_key('~BZ','~BZ')
|| REJ.KOD:='~BZ';
   REJ.ROK:=_a;
   REJ.ODD:=_b;
   REJ.NAZ:='Rejestr Bilansu zamknięcia';
   REJ.WAL:='N';
   _ok:=REJ.add()
|| _ok:=1
?};
{? _ok
|| SLU.cntx_psh();
   SLO.cntx_psh();
   DOK_REJ.cntx_psh();
   SLU.index('NAZ');
   SLU.prefix('~RODZAJE DOKUMENTÓW');
   {? SLU.first()
   || SLO.index('SL');
      SLO.prefix(SLU.ref,'PROSTY');
      {? SLO.first()
      || DOK_REJ.index('NAZ');
         DOK_REJ.prefix(REJ.ref);
         {? DOK_REJ.first()
         || {!|? _ok:=~(DOK_REJ.SLO=SLO.ref()); DOK_REJ.next() & _ok !}
         ?};
         {? _ok
         || DOK_REJ.blank();
            DOK_REJ.REJ:=REJ.ref(); DOK_REJ.SLO:=SLO.ref(); DOK_REJ.NAZ:=SLO.TR;
            DOK_REJ.add()
         ?}
      ?}
   ?};
   SLU.cntx_pop(); SLO.cntx_pop(); DOK_REJ.cntx_pop()
?}


\copy_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Kopiuje bieżący rejestr ze strukturą
::   WE: _a - wskazanie na rok bilansowy rejestru przeznaczenia
::       _b - wskazanie na jednostke ksiegową rejestru przeznaczenia
::       _c - symbol rejestru przeznaczenia
::   WY: Wskazanie na rejestr do którego kopiowano
::  OLD: \copy_rej/skid_rej.fml
::----------------------------------------------------------------------------------------------------------------------
'zapamiętanie parametrów rejestru wzorcowego';
_ref:=REJ.ref();
_rref:=REJ.ROK;
_n_ref:=_r:=null;
REJ.cntx_psh();
REJ.index('KOD');
REJ.prefix();
'założenie rejestru nowego';
REJ.ROK:=_a;
REJ.ODD:=_b;
REJ.KOD:=_c;
{? (REJ.KOD='~BO' | REJ.KOD='~BZ') & REJ.WAL='' || REJ.WAL:='N' ?};
GR_VAT.prefix();
P_AUTOKS.index('AUTO_REJ');
VAT_REJ.prefix();
_do_state:=do_state();
{? _do_state=0 || do() ?};
{? ~REJ.add() || undo() || _n_ref:=REJ.ref() ?};
'przepisanie typów dokumentów z rejestru wzorcowego do nowego';
'wraz ze wskaźaniem na domyślny schemat VAT';
DOK_REJ.index('NAZ');
DOK_REJ.prefix(_ref);
_nxt:=DOK_REJ.first();
{! |? _nxt
|! DOK_REJ.cntx_psh();
   DOK_REJ.REJ:=_n_ref;
   {? DOK_REJ.AV<>null
   || DOK_REJ.AV:=exec('cop_av','rejestry',_a,DOK_REJ.AV)
   ?};
   DOK_REJ.prefix();
   {? ~DOK_REJ.add() || undo() || _r:=DOK_REJ.ref() ?};
   DOK_REJ.cntx_pop();
   {? (_c='~BO' & REJ.KOD<>'~BO') | (_c='~BZ' & REJ.KOD<>'~BZ')
   || DOK_REJ.cntx_psh();
      {? ~exec('cop_paks','rejestry',DOK_REJ.ref(),_r) || undo() ?};
      DOK_REJ.cntx_pop()
   ?};
   _nxt:=DOK_REJ.next()
!};
   {? (_c='~BO' & REJ.KOD<>'~BO') | (_c='~BZ' & REJ.KOD<>'~BZ')
   || {? ~exec('cop_paks','rejestry',_ref,_n_ref) || undo() ?};
      FOR_AKC.index('NAZ'); FOR_AKC.prefix(_ref);
      {? FOR_AKC.first()
      || {! |?
            FOR_AKC.cntx_psh();
            FOR_AKC.prefix();
            FOR_AKC.REJ:=REJ.ref();
            {? ~FOR_AKC.add() || undo() ?};
            FOR_AKC.cntx_pop();
            FOR_AKC.next()
         !}
      ?}
   ?};
_nxt:=GR_VAT.first();
{! |?  _nxt
|! {? GR_VAT.REJ=_ref
   || GR_VAT.cntx_psh();
      GR_VAT.REJ:=REJ.ref();
      {? ~GR_VAT.add() || undo() ?};
      GR_VAT.cntx_pop()
   ?};
   _nxt:=GR_VAT.next()
!};
_nxt:=VAT_REJ.first();
{! |? _nxt
|! {? VAT_REJ.REJ=_ref
   || VAT_REJ.cntx_psh();
      VAT_REJ.REJ:=REJ.ref();
      {? ~VAT_REJ.add() || undo() ?};
      VAT_REJ.cntx_pop()
   ?};
   _nxt:=VAT_REJ.next()
!};
_ok:={? _do_state=0 || end() || 1 ?};
REJ.cntx_pop();
{? _ok || _n_ref || null ?}


\cop_av
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.70]
:: OPIS: Kopiuje schemat VAT wskazany w _b na rok wskazany w _a wraz
::       z rekordami tabeli DEK. Formuła systemu FIKS.
::  WE: _a - ROK_F. ref
::      _b - AV.ref()
::  WY: AV.ref - dodane
::  OLD: \cop_av/skid_rej.fml
::----------------------------------------------------------------------------------------------------------------------
AV.cntx_psh(); DEK.cntx_psh();
AV.index('AV'); AV.prefix();
_wy:=null;
{? _=2 & AV.seek(_b)
|| _oref:=AV.ref();
   _okod:=AV.KOD;
   _nref:=null;
   {? ~(AV.find_key(_a,_okod) & AV.KOD=_okod)
   || {? _oref<>AV.ref() || AV.seek(_oref) ?};
      AV.A:='N';
      AV.ZAA:='';
      AV.DAKC:=date(0,0,0);
      AV.ROK_F:=_a;
      {? AV.add()
      || _nref:=AV.ref();
         DEK.index('DEK');
         {? DEK.prefix(_oref); DEK.first()
         || {!
            |? DEK.cntx_psh();
               _dref:=DEK.ref();
               DEK.prefix();
               DEK.AV:=_nref;
               {? ~DEK.add()
               || undo()
               || exec('kop_wyr','rejestry','DEK',#_dref,#DEK.ref())
               ?};
               DEK.cntx_pop();
               DEK.next()
            !}
         ?}
      ?}
   || _nref:=AV.ref()
   ?};
  _wy:=_nref
?};
AV.cntx_pop(); DEK.cntx_pop();
_wy


\kop_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.10]
:: OPIS: Kopiowanie wyrózników dla formuły w schemacie dekretacji
::   WE: _a - akronim tabeli,
::       _b, _c - stary i nowy ref
::       _d - czy wyświetlać pytanie podczas kopiowania
::  OLD: \kop_wyr/auto.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_d')<=0 || _d:=0 ?};
SKID_WYR.index('SKID_WYR');
SKID_WYR.prefix(REF.FIRMA,_a,($(_a+'.name()'))(),_b);
{? SKID_WYR.first()
|| {? _d=0 | FUN.ask('Czy kopiować wyróżniki dla pozycji schematu dekretacji.'@)
   || {! |?
         SKID_WYR.cntx_psh(); SKID_WYR.prefix(REF.FIRMA);
         SKID_WYR.REF:=_c; SKID_WYR.add(1);
         SKID_WYR.cntx_pop();
         SKID_WYR.next()
      !}
   ?}
?}


\cop_paks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.70]
:: OPIS: Kopiuje przypisania formuł automatycznego rejestrowania z rejestru (rodzaju dokumentu)
::       wskazanego w _a do rejestru (rodzaju dokumentu) wskazanego w _b. Formuła systemu FIKS.
::  WE: _a - REJ.ref() lub DOK_REJ.ref()
::      _b - REJ.ref() lub DOK_REJ.ref()
::  WY: wykonanie 1 - powiodło sie w całosci, 0 - w całosci lub części się nie wykonało
::  OLD: \cop_paks/skid_rej.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=1;
P_AUTOKS.cntx_psh();
AUTOKSIE.cntx_psh();
FORM.cntx_psh();
{? _=2
|| P_AUTOKS.index('AUTO_REJ');
   AUTOKSIE.index('NAZ');
   AUTOKSIE.prefix();
   _orok:=_nrok:=null;
   {? {? BB.refsql(_a)* REJ.name()>0 & REJ.seek(_a)
      || _orok:=REJ.ROK; _r:=1;
         {? REJ.seek(_b)
         || _nrok:=REJ.ROK
         ?};
         P_AUTOKS.prefix( _a, _orok)
      |? DOK_REJ.prefix();
         BB.refsql(_a)* DOK_REJ.name()>0 & DOK_REJ.seek(_a)
      || _orok:=DOK_REJ.REJ().ROK; _r:=0;
         {? DOK_REJ.seek(_b)
         || _nrok:=DOK_REJ.REJ().ROK
         ?};
         P_AUTOKS.prefix( null, _orok, 'P', _a)
      ?};
      _orok<>null & _nrok<>null & P_AUTOKS.first()
   || {!
      |? P_AUTOKS.cntx_psh();
         P_AUTOKS.prefix();
         {? _r || P_AUTOKS.REJ:=_b || P_AUTOKS.DOK_REJ:=_b ?};
         _pnaz:=P_AUTOKS.AUTOKSIE().NAZ;
         _aref:={? AUTOKSIE.find_key(_nrok,_pnaz) & AUTOKSIE.NAZ=_pnaz
                || AUTOKSIE.ref()
                || exec('cop_aks','rejestry',_nrok, P_AUTOKS.AUTOKSIE)
                ?};
         {? _aref=null
         || _wy:=0
         || P_AUTOKS.AUTOKSIE:=_aref;
            {? _r || P_AUTOKS.DOK_REJ:=null || P_AUTOKS.REJ:=null ?};
            {? ~P_AUTOKS.find_rec()
            || {? ~P_AUTOKS.add()
               || _wy:=0
               ?}
            ?}
         ?};
         P_AUTOKS.cntx_pop();
         P_AUTOKS.next()
      !}
   ?}
|| _wy:=0
?};
P_AUTOKS.cntx_pop();
AUTOKSIE.cntx_pop();
FORM.cntx_pop();
_wy


\cop_aks
::--------------------------------------------------------------------------------------------------
::  UTW: MM [8.70]
:: OPIS: Kopiuje formułe automatycznego rejestrowania wskazana w _b na rok wskazany w _a wraz
::       z rekordami tabeli FORM. Formuła systemu FIKS.
::  WE: _a - ROK_F. ref
::      _b - AUTOKSIE.ref()
::  WY: AUTOKSIE.ref - dodane
::  OLD: \cop_aks/skid_rej.fml
::--------------------------------------------------------------------------------------------------
AUTOKSIE.index('NAZ'); AUTOKSIE.prefix();
{? _=2 & AUTOKSIE.seek(_b) & AUTOKSIE.ROK_F<>_a
|| _oref:=AUTOKSIE.ref();
   _onaz:=AUTOKSIE.NAZ;
   _opis:=AUTOKSIE.OP;
   _nref:=null;
   {? ~(AUTOKSIE.find_key(_a,_onaz) & AUTOKSIE.NAZ=_onaz)
   || AUTOKSIE.A:='N';
      AUTOKSIE.NAZ:=_onaz;
      AUTOKSIE.OP:=_opis;
      AUTOKSIE.ROK_F:=_a;
      AUTOKSIE.ZAA:='';
      AUTOKSIE.DAKC:=date(0,0,0);
      {? AUTOKSIE.add()
      || _nref:=AUTOKSIE.ref();
         FORM.index('AUTOKSIE');
         {? FORM.prefix(_oref); FORM.first()
         || {!
            |? FORM.cntx_psh();
               _fref:=FORM.ref();
               FORM.memo_get(,'FML');
               FORM.prefix();
               FORM.AUTOKSIE:=_nref;
               {? ~FORM.add()
               || undo()
               || FORM.memo_put(,'FML');
                  exec('kop_wyr','rejestry','FORM',#_fref,#FORM.ref())
               ?};
               FORM.cntx_pop();
               FORM.next()
            !}
         ?}
      ?}
   || _nref:=AUTOKSIE.ref()
   ?};
  _nref
|| null
?}


\add_odd_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Dodanie oddziału do widoku rejestrów
::  OLD: \add_odd_view/skid_rej.fml
::----------------------------------------------------------------------------------------------------------------------
REJ_VIEW.index('REJ'); REJ_VIEW.prefix();
REJ_VIEW.blank();
REJ_VIEW.ROK:=ROK_F.ref();
REJ_VIEW.TREEREF:=0;
REJ_VIEW.TYP:='J';
REJ_VIEW.ODD:=ODD.ref();
REJ_VIEW.KOD:=ODD.OD;
REJ_VIEW.NAZ:=ODD.N;
REJ_VIEW.add()


\add_rok_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Dodanie oddzialów do widoku rejestrów w nowym roku
::  OLD: \add_rok_view/skid_rej.fml
::----------------------------------------------------------------------------------------------------------------------
ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
{? ODD.first()
|| {!
   |? exec('add_odd_view','rejestry');
      ODD.next()
   !}
?}


\del_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Usuwanie bieżącego rejestru księgowego z powiązanymi strukturami
::   WE: [_a] - czy z transakcją: 1- tak 0- nie (domyślnie)
::   WY: Czy usunięto bieżacy rejestr?  1- tak 0- nie
::  OLD: \del_rej/skid_rej.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
{? _a || do() ?};
P_AUTOKS.index('AUTO_REJ'); P_AUTOKS.prefix(REJ.ref());
{? P_AUTOKS.first() || {! |? P_AUTOKS.del() !} ?};
DOK_REJ.index('NAZ'); DOK_REJ.prefix(REJ.ref());
{? DOK_REJ.first()
|| {! |?
      P_AUTOKS.prefix(null,REJ.ROK,'P',DOK_REJ.ref());
      {? P_AUTOKS.first() || {! |? P_AUTOKS.del() !} ?};
      DOKM_DOK.index('DOKM'); DOKM_DOK.prefix(DOK_REJ.ref());
      {? DOKM_DOK.first() || {! |? DOKM_DOK.del() !} ?};
      {? DOK_REJ.count()>0
      || undo(); 0
      || DOK_REJ.del()
      ?}
   !}
?};
VAT_REJ.index('REJ_SYM'); VAT_REJ.prefix(REJ.ref());
{? VAT_REJ.first()
|| {! |? {? VAT_REJ.count()>0 || undo(); 0 || VAT_REJ.del() ?} !}
?};
GR_VAT.index('REJ_KOD'); GR_VAT.prefix(REJ.ref());
{? GR_VAT.first()
|| {! |? {? GR_VAT.count()>0 || undo(); 0 || GR_VAT.del() ?} !}
?};
FOR_AKC.index('NAZ'); FOR_AKC.prefix(REJ.ref());
{? FOR_AKC.first()
|| {! |? FOR_AKC.del() !}
?};
REJ_VIEW.cntx_psh(); REJ_VIEW.index('REJ'); REJ_VIEW.prefix(REJ.ref());
{? REJ_VIEW.first() || REJ_VIEW.del() ?};
_ok:={? REJ.count()>0
   || undo(); 0
   || REJ.del()
?};
REJ_VIEW.cntx_pop();
{? _a || _ok:=end() ?};
_ok


\set_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Ustawia rejestry i okna wertowania
::   WE:  _a  - nazwa okna wertowania dla trybu wybrana jednostka księgowa
::       [_b] - oddział
::  OLD: \set_rej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
_odd:={? var_press('_b')>0 || _b || OPERATOR.DEPT ?};
REJ.index('KOD');
{? _odd<>null
|| REJ.prefix(SSTALE.AR,_odd); REJ.win_sel(_a)
|| REJ.prefix(SSTALE.AR); REJ.win_sel(_a+'_ODD')
?}


\del_rok_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Usuwa widok rejestrow dla roku
::   WE:  _a  - ref roku
::       [_b] - ref oddzialu
::  OLD: \del_rok_view/skid_rej.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('REJ_VIEW')>100
|| REJ_VIEW.index('DRZEWO'); REJ_VIEW.prefix(_a,0);
   {? REJ_VIEW.first()
   || fun_del:="
         REJ_VIEW.cntx_psh(); REJ_VIEW.prefix(_a,#REJ_VIEW.ref());
         {? REJ_VIEW.first()
         || {!
            |? fun_del(_a);
               REJ_VIEW.del()
            !}
         ?};
         REJ_VIEW.cntx_pop()
      ";
      {!
      |? {? _=1 | _b=REJ_VIEW.ODD
         || fun_del(_a);
            REJ_VIEW.del()
         || REJ_VIEW.next()
         ?}
      !};
      &fun_del
   ?}
?}


\bekodrej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Przed redakcja pola REJESTR.KODREJ
::  OLD: \bekodrej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
_odd:={? OPERATOR.DEPT || OPERATOR.DEPT().OD || '%' ?};
{? var_pres('TMPREJ')>100 || obj_del(TMPREJ) ?};
TMPREJ:=sql('select distinct REJ.KOD, REJ.NAZ from '+
            'REJ join ROK_F using(REJ.ROK,ROK_F.REFERENCE) '+
            'join ODD using(REJ.ODD,ODD.REFERENCE) '+
            'where ROK_F.KOD=\':_a\' and ODD.OD like \':_b\''+
            'order by KOD',SSTALE.AR().KOD,_odd);
1


\f3kodrej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Na klawisz F3 dla REJESTR.KODREJ
::  OLD: \f3kodrej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
_o:=TMPREJ.mk_sel('Rejestry'@,,0,'tmprej_wer');
TMPREJ.win_fld(_o,,'KOD',,,8,,,'Symbol'@);
TMPREJ.win_fld(_o,,'NAZ',,,30,,,'Nazwa stanowiska'@);
TMPREJ.win_act(_o,0,'Formuła','Wybierz'@@,,,"sel_exit()",,1,,,,'W');
TMPREJ.win_sel(_o);
{? ~TMPREJ.find_key(fld()) || TMPREJ.first() ?};
{? TMPREJ.select(,1)
|| TMPREJ.KOD
|| ~~
?}


\aekodrej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Po redakcji pola REJESTR.KODREJ
::  OLD: \aekodrej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:={? fld()=''
     || 1
     |? TMPREJ.find_key(fld())
     || fld(TMPREJ.KOD); 1
     || FUN.info('Brak rejestru '+fld()+'.'); 0
     ?};
{? _ok & var_pres('TMPREJ')>100 || obj_del(TMPREJ) ?};
_ok


\betypdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.60]
:: OPIS: Przed redakcja pola REJESTR.TYPDOK
::  OLD: \betypdok/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
_rej:={? ROZNE.KODREJ<>'' || ROZNE.KODREJ || '%' ?};
{? var_pres('TMPREJ')>100 || obj_del(TMPREJ) ?};
TMPREJ:=sql('select distinct DOK_REJ.NAZ from '+
            'DOK_REJ left join REJ '+
            'where REJ.KOD like \':_a\''+
            'order by NAZ',_rej);
1


\f3typdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.60]
:: OPIS: Na klawisz F3 dla REJESTR.TYPDOK
::  OLD: \f3typdok/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
_o:=TMPREJ.mk_sel('Typy dokumentów'@,,0,'tmprej_wer1');
TMPREJ.win_fld(_o,,'NAZ',,,30,,,'Typ dokumentu'@);
TMPREJ.win_act(_o,0,'Formuła','Wybierz'@@,,,"sel_exit()",,1,,,,'W');
TMPREJ.win_sel(_o);
{? ~TMPREJ.find_key(fld()) || TMPREJ.first() ?};
{? TMPREJ.select(,1)
|| TMPREJ.NAZ
|| ~~
?}


\aetypdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.60]
:: OPIS: Po redakcji pola REJESTR.TYPDOK
::  OLD: \aetypdok/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:={? fld()=''
     || 1
     |? TMPREJ.find_key(fld())
     || fld(TMPREJ.NAZ); 1
     || FUN.info('Brak typu dokumentu '+fld()+'.'); 0
     ?};
{? _ok & var_pres('TMPREJ')>100 || obj_del(TMPREJ) ?};
_ok


\blrejrok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Wartosc poczatkowa pola REJ.ROK
::  OLD: \blrejrok/skid_rej.fml
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.AKC='S' | POMOC.AKC='O'
|| ROK_F.ref()
|? POMOC.AKC='E'
|| ETYPYFIR.ROK_F
|| SSTALE.AR
?}


\blrejodd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Wartosc poczatkowa pola REJ.ODD
::  OLD: \blrejodd/skid_rej.fml
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.AKC='U' || UDT.ODD
|? POMOC.AKC='K' || PAR_NAG.ODD
|? -POMOC.AKC='s' || ($('VAT7.ODD_'+({? POMOC.AKC='S' || 'S' || 'N' ?})))()
|? POMOC.AKC='O' | POMOC.AKC='I' || ODD.ref()
|? POMOC.AKC='E'
|| ETYPYFIR.ODD
|? POMOC.AKC='P'
|| UNPAR.PODD
|? POMOC.AKC='W'
|| null
|| OPERATOR.DEPT
?}


\get_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Zwraca wskazanie na rejestr ksiegowy
::   WE: _a - kod rejestru
::      [_b - wskazanie na rok]
::      [_c - wskazanie na jednostke ksiegowa]
::      [_d - czy 1-dokladny kod (domyslnie) 0-prefiks ]
::   WY: Wskazanie na rejestr ksiegowy lub null
::  OLD: \get_rej/skid_rej.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=1 || _b:=exec('blrejrok','dok_fks'); _c:=exec('blrejodd','rejestry'); _d:=1
|? _=2 || _c:=exec('blrejodd','rejestry'); _d:=1
|? _=3 || _d:=1
|| {? _b=~~ || _b:=exec('blrejrok','dok_fks') ?};
   {? _c=~~ || _c:=exec('blrejodd','rejestry') ?};
   {? _d=~~ || _d:=1 ?}
?};
REJ.cntx_psh();
REJ.index('KOD');
{? _d || REJ.prefix(_b,_c,_a,_a) || REJ.prefix(_b,_c,_a) ?};
_r:={? REJ.first() || REJ.ref() || null ?};
REJ.cntx_pop();
_r


\get_dok_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca rodzaj dokumentu dla rejestru
::   WE: _a - rejestr
::       _b - symbol rodzaju
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.cntx_psh();
DOK_REJ.index('NAZ');
DOK_REJ.prefix(_a,_b,);
_ref:={? DOK_REJ.first() || DOK_REJ.ref() || null ?};
DOK_REJ.cntx_pop();
_ref


\get_vat_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca rejestr VAT dla rejestru
::   WE: _a - rejestr
::       _b - rejestr VAT
::   WY:
::----------------------------------------------------------------------------------------------------------------------
VAT_REJ.cntx_psh();
VAT_REJ.index('REJ_SYM');
VAT_REJ.prefix(_a,_b,);
_ref:={? VAT_REJ.first() || VAT_REJ.ref() || null ?};
VAT_REJ.cntx_pop();
_ref


\get_gr_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca grupę VAT
::   WE: _a - rejestr
::       _b
::----------------------------------------------------------------------------------------------------------------------
GR_VAT.cntx_psh();
GR_VAT.index('REJ_KOD');
GR_VAT.prefix(_a,_b,);
_ref:={? GR_VAT.first() || GR_VAT.ref() || null ?};
GR_VAT.cntx_pop();
_ref


\get_autoksie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca formułę rejestrującą
::   WE: _a - rok
::       _b - nazwa
::----------------------------------------------------------------------------------------------------------------------
AUTOKSIE.cntx_psh();
AUTOKSIE.index('NAZ');
AUTOKSIE.prefix(_a,_b,);
_ref:={? AUTOKSIE.first() || AUTOKSIE.ref() || null ?};
AUTOKSIE.cntx_pop();
_ref


\chk_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Sprawdza poprawność wypełnienia danych rejestru księgowego
::   WE: _a - na popraw: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_zwrot:={? OPERATOR.DEPT
        || __CHK.record(REJ,,'KOD','NAZ','WAL')
        || __CHK.record(REJ,,'ODD','KOD','NAZ','WAL')
        ?};
{? _zwrot=''
|| {? __CHK.index(REJ,_a)<>'' || _zwrot:='KOD' ?}
?};
{? _zwrot='' & _a
|| REJ_VIEW.cntx_psh();
   REJ_VIEW.index('REJ'); REJ_VIEW.prefix(REJ.ref());
   {? REJ_VIEW.first()
   || REJ_VIEW.KOD:=REJ.KOD;
      REJ_VIEW.NAZ:=REJ.NAZ;
      REJ_VIEW.put()
   ?};
   REJ_VIEW.cntx_pop()
?};
_zwrot


\chk_rej_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Sprawdza poprawność wypełnienia danych rejestru VAT
::   WE: _a - na popraw: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
{? RVAT.KVAT || RVAT.EWID:=RVAT.KVAT().EWID ?};
_zwrot:=__CHK.record(RVAT,,'SYM','NAZ','KVAT');
{? _zwrot=''
|| {? __CHK.index(RVAT,_a)<>'' || _zwrot:='NAZ' ?}
?};
_zwrot


\chk_dek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Sprawdzenie rekordu w tabeli DEK
::  OLD: \spr_dek/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEK.RODZK=0
|| FUN.info('Proszę wypełnić pole Rodzaj kwoty.'@); 'RODZK'
|? DEK.RODZK().KOD='PKontrol' & PAR_SKID.get(80)='N'
|| FUN.info('Rodzaj "%1"'
            ' jest stosowany \ntylko jeśli dostępna jest ewidencja podziałów controllingowych.'@[DEK.RODZK().TR]); 'RODZK'
|? -DEK.STR<>'wn' & -DEK.STR<>'ma'
|| FUN.info('Proszę poprawnie wypełnić pole Strona.'@); 'STR'
|| ''
?}


\chk_dok_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Sprawdza rekord w tabeli DOK_REJ
::   WE: _a - 1-popraw 0-dołacz
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? (_zwrot:=__CHK.record2(DOK_REJ,
         'SLO','Rodzaj dokumentu',
         'NAZ','Nazwa dokumentu',
      ))<>''
|| ~~
|? exec('dok_m_odd','rejestry')=0
|| _zwrot:='M_ODD'
|? exec('dok_pow','rejestry')=0
|| _zwrot:='POW'
|? exec('dm_pored','rejestry',DOK_REJ,_a)=0
|| FUN.info('Istnieje już pozycja oznaczona jako domyślna.'@);
   _zwrot:='DM'
|? __CHK.index(DOK_REJ,_a)<>''
|| _zwrot:='NAZ'
?};
{? _zwrot='' & _a=1
|| {? pow_rej='T' & DOK_REJ.POW='N' & exec('czy_fak','!zws_par_fask')
   || FUN.info('Znacznik "Dokumenty powiązane" nie może być zmieniony,\n'
               'ponieważ istnieją już dokumenty tego rodzaju.'@);
      _zwrot:='POW'
   |? pr_rej<>DOK_REJ.PR & exec('chk_pr','!zws_par_fask')
   || FUN.info('Znacznik "Płatność ratalna" nie może być zmieniony,\n'
               'ponieważ istnieją dokumenty tego rodzaju.'@);
      _zwrot:='PR'
   |? zapl_rej<>DOK_REJ.ZAPL & exec('chk_pr','!zws_par_fask')
   || FUN.info('Znacznik "Zapłata" nie może być zmieniony, ponieważ istnieją dokumenty tego rodzaju.'@);
      _zwrot:='ZAPL'
   |? modd_rej<>DOK_REJ.M_ODD & exec('chk_pr','!zws_par_fask')
   || FUN.info('Znacznik "Dla wielu jednostek księgowych" nie może być zmieniony,ponieważ istnieją '
               'dokumenty tego rodzaju.'@);
      _zwrot:='M_ODD'
   |? kor_nag<>'' & kor_nag<>DOK_REJ.KOR_NAG & exec('chk_pr','!zws_par_fask')
   || FUN.info('Znacznik "Korekta nagłówkowa" nie może być zmieniony,ponieważ istnieją '
               'dokumenty tego rodzaju.'@);
      _zwrot:={? kor<>DOK_REJ.KOR || 'KOR' || 'KOR_NAG' ?}
   |? zksr_rej<>DOK_REJ.ZAK_SR  & DOK_REJ.ZAK_SR='N' & exec('chk_zksr','!zws_par_fask')
   || FUN.info('Znacznik "Zakup środków trwałych" nie może być zmieniony, ponieważ istnieją '
               'dokumenty tego rodzaju i są powiązane ze środkami trwałymi.'@);
      _zwrot:='ZAK_SR'
   |? wew<>DOK_REJ.WEW  & exec('chk_pr','!zws_par_fask')
   || FUN.info('Znacznik "Dokument wewnętrzny" nie może być zmieniony, ponieważ istnieją '
               'dokumenty tego rodzaju.'@); DOK_REJ.WEW:=wew;
      _zwrot:='WEW'
   |? (_wyn:=exec('chk_dok_rej','jpk'))<>''
   || _zwrot:=_wyn
   ?}
?};
_zwrot


\dok_m_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Sprawdza czy dokument wielooddziałowy jest definiowany w rejestrze ~BO
::  OLD: \dok_m_odd/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK_REJ.M_ODD='T' & DOK_REJ.REJ().KOD='~BO'
|| FUN.info('Dokumenty dla wielu jednostek księgowych nie są dozwolone w rejestrze ~BO.'@); 0
|| 1
?}


\dok_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS:
::  OLD: \dok_pow/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK_REJ.POW='T' & DOK_REJ.SLO().KOD<>'SAD' & DOK_REJ.SLO().KOD<>'VAT'
|| FUN.info('Tylko dokumety VAT lub SAD mogą posiadać\ndokumenty powiązane.'@); 0
|| 1
?}


\dm_pored
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formula po rdakcji pola DM tabel DOK_REJ i VAT_REJ
::   WE: _a - obiekt tabeli
::       _b - 0=dołącz, 1=popraw
::  OLD: \dm_pored/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? -_a.DM='t'
|| _ref:=_a.ref(); _a.cntx_psh();
   {? _a.first()
   || {!
      |? {? (-_a.DM='t') & (~_b | _ref<>_a.ref()) || _wyn:=0 ?};
         _a.next() & _wyn
      !}
   ?};
   _a.cntx_pop()
?};
_wyn


\dok_rej_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Przed i po modyfikacji rodzaju dokumentu
::   WE: _a - 0-przed 1-po
::----------------------------------------------------------------------------------------------------------------------
{? _a=0
|| pow_rej:=DOK_REJ.POW;
   pr_rej:=DOK_REJ.PR; {? pr_rej='' || pr_rej:='N' ?};
   zapl_rej:=DOK_REJ.ZAPL;
   modd_rej:=DOK_REJ.M_ODD;
   zksr_rej:=DOK_REJ.ZAK_SR;
   kor_nag:=DOK_REJ.KOR_NAG;
   kor:=DOK_REJ.KOR;
   wew:=DOK_REJ.WEW;
  {? kor_nag='T'
  || DOK_REJ.efld_opt(DOK_REJ.win_edit('?'),'enable=1',DOK_REJ,'KOR_NAG')
  ?};
  {? DOK_REJ.SLO().KOD='WEW'
  || DOK_REJ.efld_opt(DOK_REJ.win_edit('?'),'enable=1',DOK_REJ,'WEW');
     DOK_REJ.efld_opt(DOK_REJ.win_edit('?'),'enable=1',DOK_REJ,'CZY_DP')
  || DOK_REJ.efld_opt(DOK_REJ.win_edit('?'),'enable=0',DOK_REJ,'WEW')
  ?};
  {? exec('upgrade2325_blbc1','zbl')
  || {? exec('is_businesscheck','businesslink3')
     || DOK_REJ.efld_opt(DOK_REJ.win_edit('?'),'enable=1, editable=1',DOK_REJ,'KSEF_BC')
     || DOK_REJ.efld_opt(DOK_REJ.win_edit('?'),'enable=0, editable=0',DOK_REJ,'KSEF_BC')
     ?}
  ?}
|| &pow_rej; &pr_rej; &zapl_rej; &modd_rej; &kor_nag; &kor
?}


\chk_vat_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Rekord po tabeli VAT_REJ
::   WE: [_a] - tryb pracy: 1-popraw 0-dołącz
::  OLD: \dmporedv/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAT_REJ.RVAT=null
|| FUN.info('Nie wybrano rejestru VAT.'@); 'RVAT'
|| _arg:={? var_press('_a')>0 || _a |? var_pres('PVATREJ')<=0 || 0 || PVATREJ ?};
   {? exec('dm_pored','rejestry',VAT_REJ,_arg)
   || ''
   || FUN.info('Istnieje już pozycja oznaczona jako domyślna.'@);
      VAT_REJ.DM:='N'; 'DM'
   ?}
?}


\chk_autoksie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Rekord po tabeli AUTOKSIE
::   WE: _a - 1-poprawianie 0-dołączanie
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(AUTOKSIE,,'NAZ');
{? _zwrot=''
|| {? __CHK.index(AUTOKSIE,_a)<>'' || _zwrot:='NAZ' ?}
?};
{? _zwrot='' & (AUTOKSIE.TYP='D' | AUTOKSIE.TYP='K') & PAR_SKID.get(80)<>'T'
|| FUN.info('Zabronione miejsce wywołania "Podziały dla controllingu"\nParametr globalny nr 80 ustawiony jest na "N".'@);
   _zwrot:='TYP'
?};
_zwrot


\chk_for_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Sprawdzenie wypelnienia rekordu FAK_AKC
::  OLD: \chk_fkt/spr_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_a:='';
{? FOR_AKC.NAZ='' || FUN.info('Nie wprowadzono nazwy formuły kontrolnej.'@); _a:='NAZ' ?};
{? _a='' & FOR_AKC.POCZ=null & FOR_AKC.POZ=null & FOR_AKC.KON=null
|| FUN.info('Należy wprowadzić przynajmniej jedną formułę.'@); _a:='POCZ'
?};
{? _a=''
|| FOR_AKC.AKCJA:={? POMOC.AKCJA=0 || 'wycofywanie' || 'akceptacja' ?}
?};
_a


\chk_av
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Sprawdzenie wypelnienia rekordu AV
::   WE: _a - typ operacji: 1-popraw, 0-dołącz
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(AV,,'KOD','OP');
{? _zwrot=''
|| {? __CHK.index(AV,_a)<>'' || _zwrot:='KOD' ?}
?};
_zwrot


\chk_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formula wewnetrzna SPR_FORM
::  OLD: \spr_form/auto.fml
::  OLD: \spr_form/!zws_par_fast.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:='';
{? ('KD'*AUTOKSIE.TYP=0 & AUTOKSIE.WYR<>'T') & FORM.memo_txt(,0,'FML')='' || FUN.info('Nie wprowadzono formuły.'@); _ret:='FML' ?};
{? ~+_ret & 'KD'*AUTOKSIE.TYP
|| {? FORM.SKID_MB=null
   || FUN.info('Nie wypełnione pole model controllingu.'@); _ret:='SKID_MB'
   || {? AUTOKSIE.TYP='K'
      || SKID_MBP.cntx_psh();
         SKID_MBP.index('LP');
         SKID_MBP.prefix(FORM.SKID_MB);
         _ile:=SKID_MBP.size();
         SKID_MBP.cntx_pop();
         {? _ile & FORM.PBUD_SF='F' & ~+FORM.PBUD_F
            | _ile>1 & FORM.JORG_SF='F' & ~+FORM.JORG_F
            | _ile>2 & FORM.OKOSZ_SF='F' & ~+FORM.OKOSZ_F
            | _ile>3 & FORM.WYM4_SF='F' & ~+FORM.WYM4_F
            | _ile>4 & FORM.WYM5_SF='F' & ~+FORM.WYM5_F
         || FUN.info('Nie wypełniono pola formuły.'@);
            {? _ile & FORM.PBUD_SF='F' & ~+FORM.PBUD_F || _ret:='PBUD_F'
            |? _ile>1 & FORM.JORG_SF='F' & ~+FORM.JORG_F || _ret:='JORG_F'
            |? _ile>2 & FORM.OKOSZ_SF='F' & ~+FORM.OKOSZ_F || _ret:='OKOSZ_F'
            |? _ile>3 & FORM.WYM4_SF='F' & ~+FORM.WYM4_F || _ret:='WYM4_F'
            |? _ile>4 & FORM.WYM5_SF='F' & ~+FORM.WYM5_F || _ret:='WYM5_F'
            ?}
         |? _ile & FORM.PBUD_SF='S' & ~+FORM.PBUD_S
            | _ile>1 & FORM.JORG_SF='S' & ~+FORM.JORG_S
            | _ile>2 & FORM.OKOSZ_SF='S' & ~+FORM.OKOSZ_S
            | _ile>3 & FORM.WYM4_SF='S' & ~+FORM.WYM4_S
            | _ile>4 & FORM.WYM5_SF='S' & ~+FORM.WYM5_S
         || FUN.info('Nie wypełniono pola wartość.'@);
            {? _ile & FORM.PBUD_SF='S' & ~+FORM.PBUD_S || _ret:='PBUD_S'
            |? _ile>1 & FORM.JORG_SF='S' & ~+FORM.JORG_S || _ret:='JORG_S'
            |? _ile>2 & FORM.OKOSZ_SF='S' & ~+FORM.OKOSZ_S || _ret:='OKOSZ_S'
            |? _ile>3 & FORM.WYM4_SF='S' & ~+FORM.WYM4_S || _ret:='WYM4_S'
            |? _ile>4 & FORM.WYM5_SF='S' & ~+FORM.WYM5_S || _ret:='WYM5_S'
            ?}
         ?}
      || {? FORM.PBUD=null
         || FUN.info('Nie wypełniono pola pozycja budżetowa.'@);
            _ret:='PBUD'
         ?}
      ?}
   ?}
|? ~+_ret & AUTOKSIE.TYP='L'
|| {? FORM.RKWOTDEL().KOD='WDN' | SLO.KOD='WDB'
   || {? FORM.ETYPWYD=null
      || FUN.info('Nie wybrano rodzaju wydatku.'@); _ret:='ETYPWYD'
      |? FORM.ETYPWYD().ED_FULL=4
      || FUN.info('Nie można wybierać rozszerzonego rodzaju wydatku.'@); _ret:='ETYPWYD'
      ?}
   ?}
|? _ret='' & AUTOKSIE.TYP='P' & AUTOKSIE.WYR='T'
|| _ret:=__CHK.record(FORM,,'MASKA','PROCENT');
   {? _ret=''
   || {! _i:=1..KA.AKCJA
      |? _ret=''
      |! {? SluWyr[_i].WYM
         || _typ:=($('FORM.SW'+$_i))();
            _val:={? _typ='S' || ($('FORM.W'+$_i))() || ($('FORM.FW'+$_i))() ?};
            {? _typ='S' & _val=null | _typ='F' & _val=''
            || _ret:={? _typ='S' || 'W'+$_i || 'FW'+$_i ?};
               __CHK.err_empty('Wyróżnik '+$_i+' - '+{? _typ='S' || 'stały' || 'formuła' ?})
            ?}
         ?}
      !}
   ?}
?};
{? ~+_ret & AUTOKSIE.TYP='K'
|| FORM.MASKA:=KONTO.K1
?};
_ret


\prz_knag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [20.xx]
:: OPIS: na podstawie wprowadzonych w rejestrze rodzajów dokumentów ustala czy dotyczy sprzedaży
::   WE: [_a] - 1 - wywołanie z ustawień rodzajów dokumentów, 0 - obsługa automatu do korekt ze wskazaniem
::----------------------------------------------------------------------------------------------------------------------
_a:={? _=1 || _a || 0 ?};
_ok:=(_a=0 & -DOK_REJ.KOR='t' & DOK_REJ.SLO().KOD='VAT') | (_a & var_pres('__KORNAG')>0);
{? _ok
|| _typ:=sql('select count(JPK_FA_T) ILE, DOK_REJ.JPK_FA_T as T from DOK_REJ join REJ using (DOK_REJ.REJ,REJ.REFERENCE) '+
             'where DOK_REJ.REJ=:_a and DOK_REJ.JPK_TYP=\'F\' group by DOK_REJ.JPK_FA_T, REJ.KOD order by ILE desc',REJ.ref);

   {? _a
   || {? _typ.first()
      || {? _typ.T='S' || 1 || FUN.info('Znacznik nie może zostać zmieniony dla dokumentów nie dotyczących Sprzedaży.'@);0 ?}
      || FUN.info('Wymagane jest wprowadzenie podstawowego dokumentu do rejestrowania operacji w rejestrze.'@);0
      ?}
   || _typ.first() & _typ.T='S'
   ?}
|| 0
?}


\po_kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [20.xx]
:: OPIS: po redagowaniu pola DOK_REJ.KOR
::----------------------------------------------------------------------------------------------------------------------
{? exec('prz_knag','rejestry',0)
|| DOK_REJ.efld_opt('RED','enable=1',DOK_REJ,'KOR_NAG')
|| DOK_REJ.efld_opt('RED','enable=0',DOK_REJ,'KOR_NAG')
?};
{? -fld()='n' ||  DOK_REJ.KOR_NAG:='N' ?};
win_disp;
1


\be_wew
:::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [23.25]
:: OPIS: Przed redagowaniem DOK_REJ.WEW
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.SLO().KOD='WEW'


\bv_wew
:::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [23.25]
:: OPIS: Przed wyświetleniem DOK_REJ.WEW
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.efld_opt('RED','enable='+$(DOK_REJ.SLO().KOD='WEW'),DOK_REJ,'WEW')


\be_cdp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Przed wyświetleniem/redagowaniem pola CZY_DP tabeli DOK_REJ
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0; _rdok:=DOK_REJ.SLO().KOD;
{? _rdok='PROSTY' | _rdok='WEW' || _wyn+=1 ?};
{? DOK_REJ.CZY_DP='' || DOK_REJ.CZY_DP:='N' ?};
{? _rdok<>'WEW' || DOK_REJ.WEW:='N' ?};
_wyn


\bv_dok_rej_bc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [23.25]
:: OPIS: Przed wyświetleniem pola DOK_REJ.KSEF_BC
::----------------------------------------------------------------------------------------------------------------------
POMOC.BC_ZAKR:={? exec('is_businesscheck','businesslink3')
               || _value:=DOK_REJ.KSEF_BC;
                  {? _value=1
                  || 'Kontrola, przy braku błędów wysyłka do KSeF'@
                  |? _value=2
                  || 'Kontrola, bez wysyłki do KSeF'@
                  |? _value=3
                  || 'Kontrola, przy braku błędów/uwag wysyłka do KSeF'@
                  |? _value=4
                  || 'Kontrola, wysyłka do KSeF niezależnie od wyniku'@
                  || 'Brak'@
                  ?}
               || ''
               ?}

:Sign Version 2.0 jowisz:1045 2024/01/29 14:27:18 3ffe5828cda24a63223aed66ccadd509c4688a2efe3c2d9d0789588dec3faae6ce3a18e8859103ca8cfec74ae324aaae49967d05760549ac8ed409de7b521012d1c6a848d9eaf5befa27b9251298302e3ab3502e25e1993fc24d482ba1f4df376298b5a9fb3c6eef1733fc6d79a124d2fc1ebad6fe4638cd15b4ea329ba28ef9
