:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zl_kalk.fml
:: Utworzony: 30.06.2015
:: Autor: TS
::======================================================================================================================
:: Zawartość: Obsługa kalkulacji i analiz zleceń
::            Plik biblioteczny - wspólna obsługa dla czynności obszaru roboczego TTE_PZL
::            - TTE_PZL_KKAL
::            - TTE_PZL_KANA
::            Obsługa tabel ANZH, ANZP, ANZMAT, ANZTLS, ANZTOU, ANZTTO, ANZWRK
::            Parametryzacja kalkulacji/analiz
::            Porównywanie kalkulacji/analiz, what-if, drill-down, wydruki
::======================================================================================================================


\anzh_nr_blank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: blank nr'u kalkulacji/analizy zlecenia
::  OLD: \anzh_nr_blank/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
ANZH.cntx_psh();
ANZH.clear();
ANZH.index('ZN');
ANZH.prefix(VAR.A01,VAR.A_ZLEC);
_wynik:={? ANZH.last()
        || ANZH.NRA+1
        || 1
        ?};
ANZH.cntx_pop();
_wynik


\ae_anzh_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Po redakcji pola ANZH.NRA
::  OLD: \ae_anzh_nr/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
{? _res:=exec('itsPositive','#field',1); _res
|| _nra:=ANZH.NRA;
   _ref:=ANZH.ref();
   ANZH.cntx_psh();
   _ok:=1;
   {? ANZH.first()
   || {!
      |?
         {? ANZH.NRA=_nra & {? -menu_txt()='popraw' || ANZH.ref()<>_ref || 1 ?} || _ok:=0 ?};
         ANZH.next()
      !}
   ?};
   ANZH.cntx_pop();
   {? ~_ok
   || _msg:={? VAR.A01='0' || 'Numer kalkulacji nie może się powtórzyć.'@ || 'Numer analizy nie może się powtórzyć.'@ ?};
      FUN.info(_msg)
   ?};
   _ok
||
   0
?}


\bl_anzh_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Wartość początkowa pola ANZH.OKR
::  OLD: \bl_anzh_okr/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.A01='0'
|| null()
|| ST.OKR_REF
?}


\be_anzop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2006]
:: OPIS: Przed redakcją pola ANZH.OPC
::   WY: 1 / 0
::  OLD: \be_anzop/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
{? menu_pth()+1='P' || 0 || 1 ?}


\run_anal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2006]
:: OPIS: Po dodaniu nowej kalkulacji/analizy (od razu proponuje wykonanie)
::   WY: 0
::  OLD: \run_anal/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
win_disp();
exec('anzhanal','zl_kalk');
0


\analusun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: usuwa kalkulację/analizę zlecenia
::   WY: wynik usuwania
::  OLD: \analusun/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_grupa:=ANZH.sel_size()<>0;

_wynik:=0;
{? ANZH.r_lock(1,1,1)
|| {? ANZH.AKT='N'
   || {? _grupa
      || exec('anzh_del','zl_kalk',ANZH.ref());
         ANZH.r_unlock();
         _wynik:=ANZH.del(,1)
      || {? exec('mptz_state','zl_kalk',ANZH.ref())
         || _uwaga:='\n\n'+'Uwaga: zostaną również usunięte propozycje cen.'@
         || _uwaga:=''
         ?};
         {? FUN.ask('Usunąć bieżący wiersz?'@+_uwaga)
         || exec('anzh_del','zl_kalk',ANZH.ref());
            ANZH.r_unlock();
            _wynik:=ANZH.del(,1)
         || ANZH.r_unlock()
         ?}
      ?}
   || _msg:={? VAR.A01='0' || 'Kalkulacja %1 jest aktywna.'@[$ANZH.NRA] || 'Analiza %1 jest aktywna.'@[$ANZH.NRA] ?};
      {? _grupa
      || KOMM.add(_msg)
      || FUN.emsg(_msg)
      ?};
      ANZH.r_unlock()
   ?}
|| _msg:={? VAR.A01='0'
         || 'Kalkulacja %1 jest redagowana przez innego użytkownika.'@[$ANZH.NRA]
         || 'Analiza %1 jest redagowana przez innego użytkownika'@[$ANZH.NRA]
         ?};
   {? _grupa
   || KOMM.add(_msg)
   || FUN.emsg(_msg)
   ?}
?};
_wynik


\analusun_gpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Usunięcie kalkulacji/analizy zlecenia - przed grupą rekordów
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy usunąć zaznaczone wiersze?'@)
|| KOMM.init(,,{? VAR.A01='0' || 'Usuwanie kalkulacji zlecenia'@ || 'Usuwanie analizy zlecenia'@ ?});
   1
|| 0
?}


\analusun_gpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Usunięcie kalkulacji analizy/zlecenia - po grupie rekordów
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
~~


\zatwanzh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.60] OWwPR032
:: OPIS: aktywowanie kalkulacji wstępnej/analizy zlecenia
::  OLD: \zatwanzh/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
{? ANZH.r_lock(1,1,1)
|| ANZH.cntx_psh();
   ANZP.cntx_psh();
   {? ANZH.AKT<>'T'
   || ANZH.clear();
      ANZP.index('NRARUB');
      ANZP.prefix(ANZH.ref());
      {? ANZP.first()
      || exec('zatwanzh1','zl_kalk')
      || {? ANZH.A01='0'
         || FUN.info('Kalkulacja nie ma pozycji, aktywacja nie ma sensu.'@)
         || FUN.info('Analiza nie ma pozycji, aktywacja nie ma sensu.'@)
         ?}
      ?}
   ?};
   ANZH.cntx_pop();
   ANZP.cntx_pop();
   ANZH.r_unlock()
|| FUN.info('Analiza jest redagowana przez innego użytkownika.\nWykonanie operacji nie jest możliwe.'@)
?};
~~


\uzatwanzh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: dezaktywowanie kalkulacji wstępnej/analizy zlecenia
::----------------------------------------------------------------------------------------------------------------------
{? ANZH.r_lock(1,1,1)
|| ANZH.cntx_psh();
   ANZP.cntx_psh();
   {? ANZH.AKT<>'T'
   || {? ANZH.A01='0'
      || FUN.info('Kalkulacja nie jest aktywna, nie można dezaktywować.'@)
      || FUN.info('Analiza nie jest aktywna, nie można dezaktywować.'@)
      ?}
   || {? ANZH.A01='0'
      || {? FUN.ask('Ta kalkulacja jest aktywna. Czy dezaktywować?'@)
         || ANZH.AKT:='N';
            ANZH.put()
         ?}
      || {? ANZH.ZAKS='T'
         || FUN.info('Ta analiza jest zaksięgowana. Nie jest możliwa zmiana znacznika.'@)
         || {? FUN.ask('Ta kalkulacja jest aktywna. Czy dezaktywować?'@)
            || ANZH.AKT:='N';
               ANZH.put()
            ?}
         ?}
      ?}
   ?};
   ANZH.cntx_pop();
   ANZP.cntx_pop();
   ANZH.r_unlock()
|| FUN.info('Analiza jest redagowana przez innego użytkownika.\nWykonanie operacji nie jest możliwe.'@)
?};
~~


\zatwanzh1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.60] OWwPR032
:: OPIS: wołana z zatwanzh/zl_kalk.fml
::  OLD: \zatwanzh1/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_zl:=ANZH.ZLEC;
_opc:=ANZH.OPC;
ANZH.cntx_psh();
ANZH.index('ZRO');
{? ANZH.A01='0'
|| ANZH.prefix(ANZH.A01,_zl);
   {? ANZH.first()
   || {!
      |? ANZH.AKT:='N';
         ANZH.put();
         ANZH.next()
      !}
   ?};
   ANZH.cntx_pop();
   ANZH.AKT:='T';
   ANZH.put()
|| ANZH.prefix(ANZH.A01,_zl,_opc,ANZH.OKR().ROK,ANZH.OKR().MC,'T');
   {? ANZH.first()
   || {? ANZH.ZAKS<>'T'
      || ANZH.AKT:='N';
         ANZH.prefix();
         ANZH.put();
         ANZH.cntx_pop();
         ANZH.AKT:='T';
         ANZH.put()
      || FUN.emsg(
            'Istnieje już aktywna i zaksięgowana analiza danego typu i w danym okresie.\n\n'
            'Aktywacja nie jest możliwa.'@);
         ANZH.cntx_pop()
      ?}
   || ANZH.cntx_pop();
      ANZH.AKT:='T';
      ANZH.put()
   ?}
?};
~~


\anzh_rec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.40] kolorowanie
:: OPIS: kolorowanie w oknie analizy/kalkulacji zlecenia
::   WY: schamat kolowowania
::  OLD: \anzh_rec/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.A_ANZH:=ANZH.ref();
ANZH.ZLEC();
{? ANZH.ZAKS='T'
|| 'ANZH#01#02'
|? ANZH.AKT='T'
|| 'ANZH#01#01'
|| ''
?}


\anzh_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2006]
:: OPIS: "Po rekord" dla okien ANZH.WER*
::   WY: 0 / 1
::  OLD: \anzh_chk/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.A01='0'
|| chk_rec('OPC')
|? VAR.A01='1'
|| chk_rec('ROK','OPC')
|| 1
?}


\leg_anzh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Legenda w oknach tabeli ANZH
::  OLD: \leg_anzh/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','ANZH#01#')


\ust_okres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70]
:: OPIS: przed wyświetleniem VAR.OKRESNAZ - w oknie tabeli ANZH
::   WY: 1
::  OLD: \ust_okres/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
{? ANZH.OKR<>null() || VAR.OKRESNAZ:=ANZH.OKR().NAZ || VAR.OKRESNAZ:='' ?};
1


\f3_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: F3 w polu VAR.OKRESNAZ
::   WE: _a - string: 'tabela.akronim', gdzie jest faktyczna zawartość, np. 'ANZH.OKR'
::   WY: nazwa okresu
::  OLD: \f3_okres/wsp_mag.fml
::----------------------------------------------------------------------------------------------------------------------
OKR.win_sel('WER_1');
OKR.clear();
OKR.cntx_psh();
OKR.clear();
OKR.index('NAZ');
OKR.first();
_ref:={? fld()<>'' & OKR.find_key(fld()) || OKR.ref() || ($_a)() ?};
OKR.cntx_pop();
OKR.index('OKR');
OKR.seek(_ref);
{? OKR.select(,1,12) || ($(_a+':=OKR.ref();OKR.NAZ'))() ?}


\po_okres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: po redakcji zmiennej VAR.OKRESNAZ
::   WE: _a - string: 'tabela.akronim', gdzie jest faktyczna zawartość, np. 'ANZH.OKR'
::   WY: 0 / 1
::  OLD: \po_okres/wsp_mag.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || FUN.info('Proszę wypełnić pole.'@); return(0) ?};
_rok:=form(date~1,,0,'99');
OKR.cntx_psh();
OKR.clear();
OKR.index('NAZ');
OKR.prefix(REF.FIRMA,fld());
{? ~OKR.last()
|| FUN.emsg('Nie ma takiego okresu.'@); _ok:=0
|| {? OKR.size()>1 || _ok:=0; {! |? {? (OKR.NAZ+4)=_rok || _ok:=1; 0 || OKR.prev() ?} !} || _ok:=1 ?};
   {? OKR.ref()<>($_a)() & _ok
   || ($(_a+':=OKR.ref()'))();
      _ok:=1
   |? ~_ok
   || FUN.emsg('Nie ma takiego okresu.'@); _ok:=0
   ?}
?};
OKR.cntx_pop();
win_disp();
_ok


\anzhanal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: uruchomienie mechanizmu analizy/kalkulacji zlecenia
::   WE: _a: 0 - zakładki, 1- bez zakładek
::   WY: 1 - przeliczenie było wykonywane, 0 - przeliczenie nie bło wykonywane
::  OLD: \anzhanal/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

{? _=0 || _sel:=1 || _sel:=_a ?};

_res:=0;

{? (VAR.A01='0' | VAR.A01='1') & (VAR.A_ZLEC().RODZAJ='Z' | ZL.RODZAJ='N') & ~exec('subzlec_exist','zl_link',VAR.A_ZLEC)
|| FUN.emsg(
      {? VAR.A01='0'
      || 'Brak zleceń podrzędnych — nie można wykonać kalkulacji.'@
      || 'Brak zleceń podrzędnych — nie można wykonać analizy.'@
      ?}
   );
   return(0)
?};

{? VAR.A01='1' & ANZH.OKR<>ST.OKR_REF
|| FUN.emsg('Proszę ustawić stałe systemu zgodne z okresem analizy.'@);
   return(0)
?};

{? ANZH.r_lock(1,1,1)
|| _a_zlec:=VAR.A_ZLEC;
   _a_ktl:=VAR.A_KTL;

   {? ANZH.AKT='N'
   || {? ANZH.OPC<>null()
      || {? FUN.ask(
               {? VAR.A01='0'
               || 'Czy wykonać kalkulację?'@
               |? VAR.A01='1'
               || 'Czy wykonać analizę?'@
               || '???'
               ?}
            )
         || KOMM.init(250,,{? VAR.A01='0' || 'Kalkulacja — raport'@ || 'Analiza — raport'@ ?},'',,,2);
            {? exec('anal_one','zl_kalk',ANZH.ref())
            || {? _sel=1 || VAR.A_ZLEC:=_a_zlec; exec('anzhwero','zl_kalk') ?};
               _res:=1
            || KOMM.info({? VAR.A01='0' || 'Kalkulacja przerwana.'@ || 'Analiza przerwana.'@ ?});
               KOMM.select()
            ?}
         ?}
      || FUN.emsg(
            {? VAR.A01='0'
            || 'Proszę wybrać wariant kalkulacji,\n'
               'a następnie ponownie uruchomić kalkulację.'@
            || 'Proszę wybrać wariant analizy,\n'
               ',\na następnie ponownie uruchomić analizę.'@
            ?}
         )
      ?}
   || FUN.emsg({? VAR.A01='0'
               || 'Kalkulacja aktywowana.'@
               || {? ANZH.ZAKS='T'
                  || 'Analiza zaksięgowana.'@
                  || 'Analiza aktywowana.'@
                  ?}
               ?}+'\n'+
               {? VAR.A01='0'
               || 'Ponowne kalkulowanie niemożliwe.'@
               || 'Ponowne analizowanie niemożliwe.'@
               ?}
      )
   ?};
   ANZH.r_unlock();

   VAR.A_ZLEC:=_a_zlec;
   VAR.A_KTL:=_a_ktl

|| FUN.emsg(
      {? VAR.A01='0'
      || 'Kalkulacja jest redagowana przez innego użytkownika. Wykonanie operacji nie jest możliwe.'@
      || 'Analiza jest redagowana przez innego użytkownika. Wykonanie operacji nie jest możliwe.'@
      ?}
   )
?};
_res


\anal_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: wykonanie jednej kalkulacji/analizy
::   WE: _a - ANZH.ref() (nagłówek kalkulacji/analizy)
::       _b - save (0/1)
::       _c - analiza tymczasowa - porównanie (0/1)
::       _d - wyświetlanie progress (1-tak/0-nie)
::       [_e] - STRING - czy dodawać aktywną propozycję ceny na podstawie analizy (T/~T)
::       [_f] - STRING - czy dodawać aktywną propozycję ceny i na jej podstawie wyceniać dokumenty RP (T/~T)
::       [_g] - STRING - czy akceptować kalkulację/analizę (T/~T)
::   WY: _ok - 0/1
::  OLD: \anal_one/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_kalana:={? VAR.A01='0' || 'Kalkulacja'@ || 'Analiza'@ ?};
_ok:=ANZH.seek(_a);
_save:={? var_pres('_b')=type_of(1) || _b || 1 ?};
_analt:={? var_pres('_c')=type_of(1) || _c || 0 ?};
_prog:={? var_pres('_d')=type_of(1) || _d || 0 ?};

_prop_cena:='';
{? var_pres('_e')=type_of('')
|| _prop_cena:=_e
?};
_wycen_rp:='';
{? var_pres('_f')=type_of('')
|| _wycen_rp:=_f
?};
_accept:='';
{? var_pres('_g')=type_of('')
|| _accept:=_g
?};

{? var_pres('__ANZP')>0 & _analt
|| __ANZP.erase();
   exec('ANZ_done','zl_kalk')
?};
VAR_DEL.delete('EXIT');
EXIT:=0;
{? _ok
|| ZL.cntx_psh();
   VAR.A_WARZ:=ANZH.OPC;
   exec('openmask','zl_common',ANZH.ZLEC);
   ANZH.cntx_psh();
   {? _save & ~_analt
   || exec('anzh_del','zl_kalk',ANZH.ref(),0)
   ?};
   exec('ANZ_init','zl_kalk',_analt);
   ANZ.prog:=_prog;
   KOMM.sect_beg('Zlecenie: '+ANZH.ZLEC().SYM+'  '+(-_kalana)+' nr:'+$ANZH.NRA,,'64:0:128',1);

   {? (VAR.A01='0' | VAR.A01='1') & (ZL.RODZAJ='Z' | ZL.RODZAJ='N') & ~exec('subzlec_exist','zl_link',ZL.ref())
   || _msg:={? VAR.A01='0'
            || 'Brak zleceń podrzędnych — nie można wykonać kalkulacji'@
            || 'Brak zleceń podrzędnych — nie można wykonać analizy'@
            ?};
      KOMM.add(_msg,2,,1);
      _ok:=0
   ?};

   {? _ok>0
   || _ok:=ANZ.calculate()
   ?};
   KOMM.sect_end();
   {? _ok & _save & ~_analt
   || ANZ.save()
   |? _ok & _analt
   ||
      exec('load4antab','zl_kalk',ANZ);
      exec('anal_compare','zl_kalk');
      save_anal:=save_kons:=0;
      __ANZP.prefix();
      __ANZP.first()
   || _ok:=0
   ?};
   echo('','');
   {? ~_analt
   || exec('ANZ_done','zl_kalk')
   ?};
   ANZH.cntx_pop();

   {? _prop_cena='T' | _wycen_rp='T'
   || _wyceniaj:=0;
      {? _wycen_rp='T'
      || _wyceniaj:=1
      ?};
      exec('anal2cena','material_prod',0,1,_wyceniaj)
   ?};

   {? _ok
   || exec('ANZH_update','zl_kalk');
      {? _accept='T'
      || exec('zatwanzh1','zl_kalk')
      ?}
   ?};
   ZL.cntx_pop()
?};
_ok


\ANZ_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: inicjalizacja obiektu ANZ
::   WE: _a - analiza tymczasowa - porównanie (0 / 1)
::  OLD: \ANZ_init/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ANZ',@)>0 || obj_del(ANZ) ?};
ANZ:=obj_new(@.CLASS.ANKA);
ANZ.AM:=ST.AM;
exec('sv_load4zlec','zl_kalk',ANZ,_a);
:: nie jest juz potrzebne exec('sv_save4zlec','prodobi',ANZ);
1


\ANZ_done
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: Zwolnienie obiektu ANZ
::  OLD: \ANZ_done/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ANZ',@)>0 || obj_del(ANZ) ?};
1


\ANZH_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: aktualizuje nagłówek analizy
::   WY: 1
::  OLD: \ANZH_update/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
ANZH.DT:=date();
ANZH.MADE:=OPERATOR.USER;
ANZH.put();
1


\anzhwero
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: pozycje kalkulacji/analizy zlecenia
::  OLD: \anzhwero/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
ANZP.clear();
ANZP.index('NRARUB');
ANZP.prefix(ANZH.ref());
exec('kj_licz','zl_kalk');
ANZP.first();

:: Formuły dla pól 'koszt jednostkowy'
{? VAR.A_ZLEC().TYP().WP='W'
|| VAR.fld_fml('JK_MAT','BEFORE_DISPLAY',"exec('findfnv','#color')");
   VAR.fld_fml('JK_ROB','BEFORE_DISPLAY',"exec('findfnv','#color')");
   VAR.fld_fml('JKPMAT','BEFORE_DISPLAY',"exec('findfnv','#color')");
   VAR.fld_fml('JKPROB','BEFORE_DISPLAY',"exec('findfnv','#color')")
?};

ANZP.win_fml('WER'+VAR.A01,,'RUBR','NR','ICON_BEFORE',"
   AFORM.index('OR');
   AFORM.prefix(ANZH.OPC,ANZP.RUBR().NR);
   {? AFORM.first()
   || {? AFORM.FRS=''
      || ''
      || 'xwin16.png:42'
      ?}
   || ''
   ?}
");
_f_close:="
   {? params_get().args.change>0
   || FUN.ask(
         {? VAR.A01='0'
         || 'Wprowadzono modyfikacje do pozycji kalkulacji, a nie została ona przeliczona.'@
         || 'Wprowadzono modyfikacje do pozycji analizy, a nie została ona przeliczona.'@
         ?}+
         '\n\n'+'Czy na pewno zamknąć okno?'@
      )
   || 1
   ?}
";
_grp:=ANZP.grp_make(
   {? VAR.A01='0'
   || 'Kalkulacja zlecenia: %1'@[VAR.A_ZLEC().SYM]
   || 'Analiza zlecenia: %1'@[VAR.A_ZLEC().SYM]
   ?},,'#anzhwero',,,_f_close,,'normal'
);
ANZP.grp_sel(_grp,,'WER'+VAR.A01,,,,,,,,,,'maximized');
ANZP.win_sel(_grp);
_args:=obj_new('change');
_args.change:=0;
params_set('args',_args);

_hide:=':';
{? VAR.A_ZLEC().TYP().WP='W' & VAR.A01='0' || _hide:='K'+_hide ?};
{? VAR.A_ZLEC().TYP().WP='W' || _hide:='T'+_hide ?};
{? ANZH.AKT='T' || _hide:='PMC'+_hide+'C' ?};
{? params_get().edit=0 || _hide:='PMC'+_hide+'C' ?};
ANZP.actions('WER'+VAR.A01,_hide);
ANZP.select();
ANZP.win_fml('WER'+VAR.A01,,'RUBR','NR','ICON_BEFORE',"''");

:: Formuły dla pól 'koszt jednostkowy'
VAR.fld_fml('JK_MAT','BEFORE_DISPLAY',"~~");
VAR.fld_fml('JK_ROB','BEFORE_DISPLAY',"~~");
VAR.fld_fml('JKPMAT','BEFORE_DISPLAY',"~~");
VAR.fld_fml('JKPROB','BEFORE_DISPLAY',"~~");
~~


\kj_licz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.53] Uwaga 68
:: OPIS: Wylicza zawartość pól VAR.JK_MAT i VAR.JK_ROB w oknie kalkulacji TKW
::  OLD: \kj_licz/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
ANZP.cntx_psh();
ANZP.index('NRARUB');
ANZP.prefix();
{? ANZH.ZLEC().TYP().WP='P'
|| {? VAR.A01='0'
    || {? ANZP.find_key(ANZH.ref(),ANZH.ZLEC().TYP().CRUBIL0) || _il:=ANZP.WAR || _il:=0 ?}
    || {? ANZP.find_key(ANZH.ref(),ANZH.ZLEC().TYP().CRUBIL) || _il:=ANZP.WAR || _il:=0 ?}
   ?}
|| _il:=1
?};
{? ANZP.find_key(ANZH.ref(),ANZH.ZLEC().TYP().CRUBMAT) || _mat:=ANZP.WAR || _mat:=0 ?};
{? ANZP.find_key(ANZH.ref(),ANZH.ZLEC().TYP().CRUBROB) || _rob:=ANZP.WAR || _rob:=0 ?};
{? _il<>0
 || VAR.JK_MAT:=_mat/_il;
    VAR.JK_ROB:=_rob/_il
 || VAR.JK_MAT:=VAR.JK_ROB:=0
?};
ANZP.cntx_pop();
~~


\anzh_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2010]
:: OPIS: Zwraca wartość ANZH.ref()
::   WY: ANZH.ref()
::  OLD: \anzh_ref/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
ANZH.ref()


\a01
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2010]
:: OPIS: Zwraca wartość pola VAR.A01
::   WY: VAR.A01
::  OLD: \a01/varget.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.A01


\a_warz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Zwraca VAR.A_WARZ
::   WY: VAR.A_WARZ
::  OLD: \a_warz/varget.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.A_WARZ


\anal_poj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.60]
:: OPIS: Analiza / kalkulacja dla pojedynczego zlecenia
::   WE: _a - '0' kalkulacja wstępna zlecenia
::            '1' analiza zlecenia
::       [_b] - ZL.ref()
::       [_c] - tylko podgląd (domyślnie - 0), pełne redagowanie (1)
::       [_d] - uruchomione w procesie (1), poza procesem (domyślnie - 0)
::   WY: 1/-1 -wyjście sel_exit, czyli było zakończenie dla niepustej lub pustej dziedziny;
::       0 - wyjście Escape albo brak selekcji
::  OLD: \anal_poj/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') || _a01:=_a || return() ?};
{? var_pres('_b')=type_of(null()) || _zl:=_b || _zl:=ZL.ref() ?};
{? var_pres('_c')=type_of(0) || _edit:=_c || _edit:=0 ?};
{? var_pres('_d')=type_of(0) || _proc:=_d || _proc:=0 ?};

_res:=0;

{? _edit
|| {? ~exec('zl_lock','zl_common',#_zl,{? _a01='0' || 'K' || 'A' ?})
   || return(0)
   ?}
?};

ZL.cntx_psh(); ZL.clear();
ANZH.cntx_psh();

{? ZL.seek(_zl)
||
   _dalej:=1;
   VAR.A01:=_a01;
   VAR.A_ZLEC:=_zl;

   _exit:="
      exec('err_psql','#sql');
      exec('empty_f_set','#table','ANWAR')
   ";

   ANZH.index('ZN');
   VAR.A_WARZ:={? VAR.A01='0' || VAR.A_ZLEC().DEF_OPCK || VAR.A_ZLEC().DEF_OPCA ?};

   ANZH.prefix(VAR.A01,VAR.A_ZLEC);
   ANWAR.clear();
   {? ~ANWAR.f_set('NA',,
         '"ANWAR"."A01"=\':_b\'
         and "ANWAR"."REFERENCE" in
         (select ZTPF.OPC from ZTPF where ZTPF.TYP=\':_a\')',
         $VAR.A_ZLEC().TYP, VAR.A01
      )
   ||
::    dla niepowodzenia przy f_set()
      _exit();
      _dalej:=0
   ?};

   {? _dalej=1
   || ANWAR.win_dict('SLO'+VAR.A01);

::    Zmienna _xanzh do przechowania ref-ów porównywanych kalkulacji/analiz
      _xanzh:=obj_new('anzh','panzh','licznik');
      params_set('xanzh',_xanzh,'proc',_proc,'edit',_edit);

      _grp:=ANZH.grp_make(
         {? VAR.A01='0' || 'Kalkulacje zlecenia'@ || 'Analizy zlecenia'@ ?},,
         '#anzh_grp'+VAR.A01,10,10,,,'normal'
      );
      _f_ar:="
         _proc:={? params_get().proc || '' || 'Z:Z' ?};
         {? ANZH.AKT='T'
         || ANZH.actions_grayed(cur_win(1,1),'UAY'+_proc)
         |? ANZH.AKT='N'
         || ANZH.actions_grayed(cur_win(1,1),'E'+_proc)
         ?};
         ~~
      ";
      ANZH.grp_sel(_grp,,'WER'+VAR.A01,,_f_ar,,,12,,,,,'maximized');
      ANZH.win_sel(_grp);
      _kalk:=exec('chk_role','#b__box',OPERATOR.USER,'TTE_PZL_KKAL') |
             exec('chk_role','#b__box',OPERATOR.USER,'TTE_PZL_PKAL');
      _anal:=exec('chk_role','#b__box',OPERATOR.USER,'TTE_PZL_KANA') |
             exec('chk_role','#b__box',OPERATOR.USER,'TTE_PZL_PANA');
      _kalkt:=exec('chk_role','#b__box',OPERATOR.USER,'TTE_TEC_KTKW') |
              exec('chk_role','#b__box',OPERATOR.USER,'TTE_TEC_PTKW');
      {? VAR.A01='0'
      || {? _kalkt=0 | _anal=0 || _hid:='W(E)' || _hid:='' ?}
      || {? _kalkt=0 | _kalk=0 || _hid:='W(E)' || _hid:='' ?}
      ?};
      {? ZL.TYP().WP='W' || _hid:='C' ?};
      ANZH.actions('WER'+VAR.A01,{? _edit || _hid+'' || _hid+'dC(P)AUKW(A)YERZ:dZ' ?});
      ANZH.actions_grayed('WER'+VAR.A01,{? _proc || '' || 'Z:Z' ?});
      _res:=ANZH.select()
   ?};
   ANWAR.f_clear();
   ANWAR.actions('WER'+VAR.A01)
?};

ZL.cntx_pop(); ANZH.cntx_pop();

exec('zl_unlock','zl_common',#_zl,{? _a01='0' || 'K' || 'A' ?});

_res


\anal4zlec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: Wykonuje analizę / kalkulację dla zlecenia
::   WE: _a - '0' / '1' (kalkulacja, analiza)
::       _b - ZL.ref()
::       [_c] - 0 / 1 (save)
::       [_d] - STRING - czy dodawać aktywną propozycję ceny na podstawie analizy (T,~T)
::       [_e] - STRING - czy dodawać aktywną propozycję ceny i na jej podstawie wyceniać dokumenty RP (T,~T)
::       [_f] - STRING - czy akceptować kalkulację/analizę (T/~T)
::   WY: 0 / 1
::  OLD: \anal4zlec/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
ZL.cntx_psh();
_var_a_zlec:=VAR.A_ZLEC;
_zl_ref:=_b;

_save:={? var_pres('_c')=type_of(0) || _c || 1 ?};
_prop_cena:='';
{? var_pres('_d')=type_of('')
|| _prop_cena:=_d
?};
_wycen_rp:='';
{? var_pres('_e')=type_of('')
|| _wycen_rp:=_e
?};
_akt:='';
{? var_pres('_f')=type_of('')
|| _akt:=_f
?};

{? exec('FindAndGet','#table',ZL,_zl_ref,,"RODZAJ",'')<>'P' & ~exec('subzlec_exist','zl_link',_zl_ref)
|| _zl_sym:=exec('FindAndGet','#table',ZL,_zl_ref,,"SYM",'');
   KOMM.info(
      {? _a='0'
      || 'Zlecenie %1 nie zostało przekalkulowane — brak zleceń podrzędnych'@[_zl_sym]
      || 'Zlecenie %1 nie zostało przeanalizowane — brak zleceń podrzędnych'@[_zl_sym]
      ?}
   );
   _ok:=0

|| {? _a='0'
   || _zl_opc:=exec('find_opck','zl_kalk',_zl_ref)
   || _zl_opc:=exec('find_opca','zl_kalk',_zl_ref)
   ?};
   _ok:=(type_of(_zl_opc)<>2);

   {? _ok
   || ANZH.clear();
      ANZH.index('ZRO');
      {? _a='0'
      || ANZH.prefix(_a,_zl_ref,_zl_opc,0,0,'N')
      || ANZH.prefix(_a,_zl_ref,_zl_opc,ST.AR,ST.AM,'N')
      ?};
      _ok:={? ANZH.first()
           || 1
           || VAR.A01:=_a;
              _ok:=exec('ANZH_new','zl_kalk',_zl_ref,_zl_opc)
          ?};
      {? _ok || _ok:=exec('anal_one','zl_kalk',ANZH.ref(),_save,,,_prop_cena,_wycen_rp,_akt) ?}
   ?}
?};
ZL.cntx_pop();
VAR.A_ZLEC:=_var_a_zlec;
_ok


\ANZH_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: dodaje kolejny nagłówek analizy dla danego zlecenia
::   WE: _a - ZL.ref()
::       _b - ANWAR.ref()
::   WY: 0 / 1 - czy udało się dodać nagłówek
::  OLD: \ANZH_new/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_tmp_z:=VAR.A_ZLEC;
_tmp_o:=VAR.A_WARZ;
VAR.A_ZLEC:=_a;
VAR.A_WARZ:=_b;
ANZH.clear();
ANZH.blank();
ANZH.OKR:=ST.OKR_REF;
ANZH.AKT:='N';
_ok:=ANZH.add();
VAR.A_ZLEC:=_tmp_z;
VAR.A_WARZ:=_tmp_o;
_ok


\find_opck
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.60]
:: OPIS: Zwraca ref domyślnego wariantu kalkulacji dla zlecenia
::   WE: _a - ZL.ref()
::   WY: '####' / ref
::  OLD: \find_opck/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
ZL.cntx_psh();
ZL.clear();
_ok:=ZL.seek(_a);
_wynik:='####';
{? _ok
|| {? ZL.DEF_OPCK<>null()
   || _wynik:=ZL.DEF_OPCK
   || {? ZL.TYP().DEF_OPCK<>null() || _wynik:=ZL.TYP().DEF_OPCK ?}
   ?}
?};
ZL.cntx_pop();
_wynik


\find_opca
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.60]
:: OPIS: Zwraca ref domyślnego wariantu analizy dla zlecenia
::   WE: _a - ZL.ref()
::   WY: '####' / ref
::  OLD: \find_opca/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
ZL.cntx_psh();
ZL.clear();
_ok:=ZL.seek(_a);
_wynik:='####';
{? _ok
|| {? ZL.DEF_OPCA<>null()
   || _wynik:=ZL.DEF_OPCA
   || {? ZL.TYP().DEF_OPCA<>null() || _wynik:=ZL.TYP().DEF_OPCA ?}
   ?}
?};
ZL.cntx_pop();
_wynik


\zl_anwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.40]
:: OPIS: kalkulacje/analizy dla wybranego Towaru
::   WE: _a - M.ref()
::       _b - '0'- kalkulcja, '1'- analiza
::  OLD: \zl_anwa/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_exit:="
   M.cntx_pop();
   ZL.cntx_pop();
   exec('err_psql','#sql')
";
M.cntx_psh();
M.clear();
{? ~M.seek(_a) || M.cntx_pop(); return() ?};
{? M.R<>'W' & M.R<>'P' || FUN.info('Funkcja dostępna tylko dla produktów.'@); M.cntx_pop(); return() ?};
{? M.RODZ='U' || FUN.info('Funkcja nie jest dostępna dla usług.'@); M.cntx_pop(); return() ?};

ZL.cntx_psh();
ZL.clear();
VAR.A01:=_b;
{? VAR.A01='0'
|| {? ~ZL.f_set('SYM',,'ZL.KTM=:_a',_a)
   || _exit();
      return(null())
   ?}

|| {? ~ZL.f_set('SYM',,'ZL.KTM=:_a and (ZL.STAN=''O'' or  ZL.STAN=''Z'')',_a)
   || _exit();
      return(null())
   ?}
?};

{? ZL.f_first()
|| ZL.win_sel('WERW');
   ZL.actions('WERW',{? VAR.A01='1' || 'E' || 'A' ?},{? VAR.A01='1' || 'A' || 'E' ?});
   ZL.hdr_sel({? VAR.A01='1' || ' — '+'analizy'@ || ' — '+'kalkulacje'@ ?});
   _formikon:="params_exec('icon_stan','zl_head')";
   ZL.win_fml('WERW',,'STAN',,'ICON_BEFORE',_formikon);
   ANZH.win_sel('WER'+VAR.A01);
   ZL.select()
|| FUN.emsg('Brak zlecenia na ten produkt.'@)
?};
ZL.f_clear();
ZL.cntx_pop();
M.cntx_pop();
~~


\anal_pre
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.40]
:: OPIS: Rekord przed - w oknie ZL.WERW
::   WY: ''
::  OLD: \anal_pre/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
ANZH.cntx_psh();
ANZP.cntx_psh();
VAR.DATE:=date(0,0,0);
VAR.TKW:=0;
ANZH.index('ZRO1');
{? VAR.A01='1'
|| ANZH.prefix(VAR.A01,ZL.ref(),ST.AR,ST.AM,'T')
|| ANZH.prefix(VAR.A01,ZL.ref(),0,0,'T')
?};
{? ANZH.first()
|| ANZP.index('NRARUB');
   ANZP.prefix(ANZH.ref(),ZL.TYP().CRUBJEDN);
   {? ANZP.first()
   || VAR.DATE:=ANZH.DT;
      VAR.TKW:=ANZP.WAR
   ?}
?};
ANZP.cntx_pop();
ANZH.cntx_pop();
''


\anz_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.60]
:: OPIS: Selekcja wszystkich danych dodatkowych kalkulacji / analizy
::  OLD: \anz_dod/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
ANZMAT.index('ASN');
ANZMAT.prefix(ANZH.ref());
ANZMAT.win_edit('RED');
ANZTTO.index('AON');
ANZTTO.prefix(ANZH.ref());
ANZTTO.first();
ANZTTO.win_edit('');
ANZWRK.index('APN');
ANZWRK.prefix(ANZH.ref());
ANZWRK.first();
ANZWRK.win_edit('');
ANZTLS.index('ATN');
ANZTLS.prefix(ANZH.ref());
ANZTLS.first();
ANZTLS.win_edit('');
ANZTOU.index('ATN');
ANZTOU.prefix(ANZH.ref());
ANZTOU.first();
ANZTOU.win_edit('');
ANH.index('AR');
ANH.prefix(ANZH.ref());
ANH.first();
ANZMAT.win_sel('GRP');
ANZMAT.select();
~~


\anzh_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JA [2011]
:: OPIS: usunięcie analizy/kalkulacji zlecenia bez dialogu
::   WE: _a - ANZH.ref()
::       [_b] - 0/1 - 1 wykonujemy wszystkie operacje
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \anzh_del/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------

_result:=0;
_can_continue:=1;

_anzh:=_a;
_wariant:={? var_pres('_b')=type_of(0) || _b || 1 ?};
{? _can_continue>0
||
:: pozycje
   {? _wariant=1
   || _can_continue:=exec('poz_del','zl_kalk',_anzh)
   ?}
?};
{? _can_continue>0
||
:: dane pomocnicze;
   {? _wariant=1
   || _can_continue:=exec('del_anh','zl_kalk',_anzh)
   ?}
?};
{? _can_continue>0
||
:: ceny materiałów
   _can_continue:=exec('del_anzmat','zl_kalk',_anzh)
?};
{? _can_continue>0
||
:: stawki operacji
   _can_continue:=exec('del_anztto','zl_kalk',_anzh)
?};
{? _can_continue>0
||
:: koszty stanowisk
::   {? _wariant=1
::   || _can_continue:=exec('del_anzwrk','zl_kalk',_anzh)
::   ?}
   _can_continue:=exec('del_anzwrk','zl_kalk',_anzh)
?};
{? _can_continue>0
||
:: koszty N-P-U
   _can_continue:=exec('del_anztls','zl_kalk',_anzh)
?};
{? _can_continue>0
||
:: stawki usług
   _can_continue:=exec('del_anztou','zl_kalk',_anzh)
?};
{? _can_continue>0
||
:: propozycje cen
   {? _wariant=1
   || _can_continue:=exec('del_mptz','zl_kalk',_anzh)
   ?}
?};
{? _can_continue>0
|| _result:=1
?};
_result


\poz_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: kasowanie pozycji analizy zlecenia
::   WE: _a - ANZH.ref()
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \poz_del/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------

_result:=0;
_can_continue:=1;

ANZP.clear();
ANZP.index('NRARUB');
ANZP.prefix(_a);
{? ANZP.first()
|| {!
   |? _can_continue:=ANZP.del(,1);
      ANZP.first() & _can_continue>0
   !}
?};
{? _can_continue>0
|| _result:=1
?};
_result


\del_anh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.60]
:: OPIS: Usuniecie danych pomocniczych kalkulacji/analizy
::   WE: _a - ANZH.ref()
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \del_anh/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_can_continue:=1;

ANH.index('AR');
ANH.prefix(_a);
{? ANH.first()
|| {!
   |? _can_continue:=ANH.del(,1);
      ANH.first() & _can_continue>0
   !}
?};
{? _can_continue>0
|| _result:=1
?};
_result


\del_anzmat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.60]
:: OPIS: Usunięcie cen surowców do kalkulacji/analizy
::   WE: _a - ANZH.ref()
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \del_anzmat/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_can_continue:=1;

ANZMAT.index('AS');
ANZMAT.prefix(_a);
{? ANZMAT.first()
|| {!
   |? _can_continue:=ANZMAT.del(,1);
      ANZMAT.first() & _can_continue>0
   !}
?};
{? _can_continue>0
|| _result:=1
?};
_result


\del_anztto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.60]
:: OPIS: Usunięcie stawek operacji do kalkulacji/analizy
::   WE: _a - ANZH.ref()
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \del_anztto/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_can_continue:=1;

ANZTTO.index('AO');
ANZTTO.prefix(_a);
{? ANZTTO.first()
|| {!
   |? _can_continue:=ANZTTO.del(,1);
      ANZTTO.first() & _can_continue>0
   !}
?};
{? _can_continue>0
|| _result:=1
?};
_result


\del_anzwrk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.60]
:: OPIS: Usunięcie kosztów stanowisk do kalkulacji/analizy
::   WE: _a - ANZH.ref()
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \del_anzwrk/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_can_continue:=1;
ANZWRK.index('AP');
ANZWRK.prefix(_a);
{? ANZWRK.first()
|| {!
   |? _can_continue:=ANZWRK.del(,1);
      ANZWRK.first() & _can_continue>0
   !}
?};
{? _can_continue>0
|| _result:=1
?};
_result


\del_anztls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70]
:: OPIS: Usunięcie kosztów NPU do kalkulacji/analizy
::   WE: _a - ANZH.ref()
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \del_anztls/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_can_continue:=1;
ANZTLS.index('AT');
ANZTLS.prefix(_a);
{? ANZTLS.first()
|| {!
   |? _can_continue:=ANZTLS.del(,1);
      ANZTLS.first() & _can_continue>0
   !}
?};
{? _can_continue>0
|| _result:=1
?};
_result


\del_anztou
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70]
:: OPIS: Usunięcie kosztów usług do kalkulacji/analizy
::   WE: _a - ANZH.ref()
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \del_anztou/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------

_result:=0;
_can_continue:=1;

ANZTOU.index('AT');
ANZTOU.prefix(_a);
{? ANZTOU.first()
|| {!
   |? _can_continue:=ANZTOU.del(,1);
      ANZTOU.first() & _can_continue>0
   !}
?};
{? _can_continue>0
|| _result:=1
?};
_result


\del_mptz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.60]
:: OPIS: Usunięcie propozycji cen z kalkulacji/analizy
::   WE: _a - ANZH.ref()
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \del_mptz/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_can_continue:=1;

MPTZ.index('S1');
MPTZ.prefix(_a);
{? MPTZ.first()
|| {!
   |? _can_continue:=MPTZ.del(,1);
      MPTZ.first() & _can_continue>0
   !}
?};
{? _can_continue>0
|| _result:=1
?};
_result


\mptz_state
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.60]
:: OPIS: Czy są propozycje cen do tej kalkulacji/analizy
::   WE: _a - ANZH.ref()
::   WY: 1 / 0
::  OLD: \mptz_state/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
MPTZ.index('S1');
MPTZ.prefix(_a);
_res:=MPTZ.first();
_res


\anzmat_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.41]
:: OPIS: Akcja na wyświetl w tabeli ANZMAT, okno WER
::  OLD: \anzmat_display/zlecanal.fml
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
{? ANZMAT.RTKTL<>''
|| exec('display_vars','tech_common',ANZMAT.RTKTL)
?};
ANZMAT.win_edit('RED');
ANZMAT.display();
~~


\ANZMAT_trigger
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.41]
:: OPIS: Triggery dla tabeli ANZMAT
::  OLD: \ANZMAT/trigger.fml
::  TAG: <PRIVATE>
::----------------------------------------------------------------------------------------------------------------------
{? ANZMAT.TKTL<>null()
|| ANZMAT.RTKTL:=$ANZMAT.TKTL
?};
1


\anzmat_trig_add_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Trigger przed add dla tabeli ANZMAT
::----------------------------------------------------------------------------------------------------------------------
exec('ANZMAT_trigger','zl_kalk')


\anzmat_trig_put_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Trigger przed put dla tabeli ANZMAT
::----------------------------------------------------------------------------------------------------------------------
exec('ANZMAT_trigger','zl_kalk')


\alg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.10]
:: OPIS: Uruchomienie porównania analiz
::  OLD: \alg/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
{? ANZH.r_lock(1,1,1)
|| exec('algchange','zl_kalk');
   ANZH.r_unlock()
|| FUN.info('Analiza jest redagowana przez innego użytkownika.\nWykonanie operacji nie jest możliwe.'@)
?}


\algchange
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.10]
:: OPIS: dodanie tabel tymczasowych i okien do obsługi analizy ze zmienionym algorytmem.
::  OLD: \algchange/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_wp:=ZL.TYP().WP;
VAR.A_ANZH:=ANZH.ref();
__LEVEL:=1;
__AFORM:=tab_tmp(1,
   'NR','INTEGER','Nr rubryki',
   'OPIS','STRING[40]','Opis rubryki',
   'REF','INTEGER','#AFORM.ref()',
   'FORM','STRING[255]','Formuła',
   'FRS','STRING[255]','Formuła - wyświetlanie szczegółów');
__AFORM.fld_attr(,2);

__ANKON:=tab_tmp(1,
   'NR','INTEGER','Nr rubryki',
   'REF','INTEGER','#ANKON.ref()',
   'OPIS','STRING[40]','Opis',
   'WAR','REAL','Wartosc');
__ANKON.fld_attr(,2);

__ANZP:=tab_tmp(1,
   'NR','INTEGER','Numer rubryki',
   'WART','REAL','Wartość',
   'WART1','REAL','Wartość1',
   'ROZN','REAL','Różnica',
   'OPIS','STRING[40]','Opis');
__ANZP.fld_attr(,2);
_title:={? VAR.A01='0' || 'Formuła kalkulacji zlecenia'@ || 'Formuła analizy zlecenia'@ ?};
redp:=__AFORM.mk_edit(_title,0,'#aform_redp');
__AFORM.win_efld(redp,,'NR',,,6,,1,'Numer'@,,,);
__AFORM.win_efld(redp,,'OPIS',,,35,,1,'Opis'@);
__AFORM.win_efld(redp,,'FORM',,,60,,,'Formuła'@);
__AFORM.efld_opt(redp, 'mark=1',,'FORM');
__AFORM.win_ebtn(redp,'text=%1'['&Zapisz'@],"'key:F2'");
__AFORM.win_ebtn(redp,'text=%1'['&Anuluj'@],"'key:Esc'");

red:=__AFORM.mk_edit(_title,0,'#aform_red');
__AFORM.win_efld(red,AFORM,'RUBR','NR','RUBR',6,,,'Numer'@,,,);
__AFORM.efld_opt(red,'mark=1',AFORM,'RUBR','NR');
__AFORM.win_efld(red,AFORM,'RUBR','OPIS',,35,,1,'Opis'@);
__AFORM.win_efld(red,,'FORM',,,60,,,'Formuła'@);
__AFORM.efld_opt(red, 'mark=1',,'FORM');
__AFORM.win_ebtn(red,'text=%1'['&Zapisz'@],"'key:F2'");
__AFORM.win_ebtn(red,'text=%1'['&Anuluj'@],"'key:Esc'");

_title:={? VAR.A01='0' || 'Formuły kalkulacji zlecenia'@ || 'Formuły analizy zlecenia'@ ?};
_wer:=__AFORM.mk_sel(_title,'N',0,'#aform_wer',,5,29,,'U');
__AFORM.win_fld(_wer,,'NR',,,6,,1,'Numer'@);
__AFORM.win_fld(_wer,,'OPIS',,,40,,1,'Opis'@);
__AFORM.win_fld(_wer,,'FORM',,,60,,,'Formuła'@);
__AFORM.win_act(_wer,0,'Formuła','Dołącz'@@,,,"exec('Add_aform','zl_kalk')",,1,,,,'D');
__AFORM.win_act(_wer,1,'Formuła','Dołącz'@@,,,"exec('Add_aform','zl_kalk')",,1,,,,'D');
__AFORM.win_act(_wer,0,'Formuła','Popraw'@@,,,"__AFTEM:=__AFORM.FORM;
                                             __AFORM.win_edit(redp);
                                             __AFORM.edit(\"
                                                            _ok:='';
                                                            {? __AFORM.FORM=''
                                                            || _ok:='FORM';
                                                               FUN.emsg('Formuła kalkulacyjna musi być wypełniona.'@)
                                                            ?};
                                                            {? _ok=''
                                                            || {? __AFTEM<>__AFORM.FORM
                                                               || _ok:=exec('fparse','kalkulator',__AFORM.FORM,'fkz')
                                                               || _ok:=1
                                                               ?}
                                                            ?};
                                                            _ok
                                                          \")
                                            ","{? __AFTEM<>__AFORM.FORM
                                               ||
                                                  __AFORM.put()
                                               ?};
                                               &__AFTEM;
                                               __AFORM.win_edit(red)",,,,,'P');
__AFORM.win_act(_wer,0,'Usuń');
__AFORM.win_act(_wer,0,'Formuła','P&rzeładuj'@@,,,"exec('ref_aform','zl_kalk')",,,,,,'R');
__AFORM.win_act(_wer,1,'Formuła','P&rzeładuj'@@,,,"exec('ref_aform','zl_kalk')",,,,,,'R');
__AFORM.win_act(_wer,0,'Wyświetl',,,,"
   ANRUB.index('RUBR');
   ANRUB.prefix(__AFORM.NR);
   {? ANRUB.first() || _anrub:=ANRUB.ref() || _anrub:=null() ?};
   AFORM.RUBR:=_anrub;
   __AFORM.display();
   ~~
");

_title:={? VAR.A01='0' || 'Stałe użyte do kalkulacji'@ || 'Stałe użyte do analizy'@ ?};
red1:=__ANKON.mk_edit(_title,0,'#ankon_red');
__ANKON.win_efld(red1,ANKON,'RUBR','NR','RUBR',6,,,'Numer'@,,,);
__ANKON.efld_opt(red1,'mark=1',ANKON,'RUBR','NR');
__ANKON.win_efld(red1,ANKON,'RUBR','OPIS',,35,,1,'Opis'@);
__ANKON.win_efld(red1,,'WAR',,,15,4,,'Wartość'@);
__ANKON.win_ebtn(red1,'text=%1'['&Zapisz'@],"'key:F2'");
__ANKON.win_ebtn(red1,'text=%1'['&Anuluj'@],"'key:Esc'");

_wer1:=__ANKON.mk_sel(_title,'N',0,'#ankon_wer',,5,29,,'U');
__ANKON.win_fld(_wer1,,'NR',,,6,,1,'Numer'@);
__ANKON.win_fld(_wer1,,'OPIS',,,35,,1,'Opis'@);
__ANKON.win_fld(_wer1,,'WAR',,,15,4,,'Wartość'@);
__ANKON.win_act(_wer1,0,'Formuła','Dołącz'@@,,,"exec('Add_ankon','zl_kalk')",,1,,,,'D');
__ANKON.win_act(_wer1,1,'Formuła','Dołącz'@@,,,"exec('Add_ankon','zl_kalk')",,1,,,,'D');
__ANKON.win_act(_wer1,0,'Popraw',,,,"__ANKON.win_edit()");
__ANKON.win_act(_wer1,0,'Usuń');
__ANKON.win_act(_wer1,0,'Formuła','P&rzeładuj'@@,,,"exec('ref_ankon','zl_kalk')",,,,,,'R');
__ANKON.win_act(_wer1,1,'Formuła','P&rzeładuj'@@,,,"exec('ref_ankon','zl_kalk')",,,,,,'R');

_title:={? VAR.A01='0' || 'Pozycje kalkulacji'@ || 'Pozycjeo analizy'@ ?};
_wer2:=__ANZP.mk_sel(_title,'N',0,'#anzp_wer',,5,29,,'U');
__ANZP.win_fld(_wer2,,'NR',,,6,,,'Numer'@);
__ANZP.win_fld(_wer2,,'OPIS',,,30,,,'Opis'@);
__ANZP.win_fld(_wer2,,'WART1',,,12,4,,'Wartość stara'@);
__ANZP.win_fld(_wer2,,'WART',,,12,4,,'Wartość nowa'@);
__ANZP.win_fld(_wer2,,'ROZN',,,12,4,,'Różnica'@);

_formula:="exec('formchange','zl_kalk')";
__ANZP.win_act(_wer2,0,'Formuła','Formuły'@@,,,_formula,,,,,,'F');
__ANZP.win_act(_wer2,1,'Formuła','Formuły'@@,,,_formula,,,,,,'F');
_formula:="exec('constchange','zl_kalk')";
__ANZP.win_act(_wer2,0,'Formuła','Stałe'@@,,,_formula,,,,,,'S');
__ANZP.win_act(_wer2,1,'Formuła','Stałe'@@,,,_formula,,,,,,'S');
{? VAR.A01='0' & _wp='P'
|| _formula:="exec('sur_kalk','zl_kalk')";
   __ANZP.win_act(_wer2,0,'Formuła','Su&rowce'@@,,,_formula,,,,,,'R');
   __ANZP.win_act(_wer2,1,'Formuła','Su&rowce'@@,,,_formula,,,,,,'R');
   _formula:="exec('oper_kalk','zl_kalk')";
   __ANZP.win_act(_wer2,0,'Formuła','S&tanowiska'@@,,,_formula,,,,,,'T');
   __ANZP.win_act(_wer2,1,'Formuła','S&tanowiska'@@,,,_formula,,,,,,'T')
?};
'Wyniki działania kalkulacji'@;'Wyniki działania analizy'@;'Kalkulacja przerwana.'@;'Analiza przerwana.'@;
_formula:="
   KOMM.init(250,,{? VAR.A01='0' || 'Wyniki działania kalkulacji'@ || 'Wyniki działania analizy'@ ?},'',,,2);
   {? ~exec('anal_one','zl_kalk',VAR.A_ANZH,1,1)
   || KOMM.info({? VAR.A01='0' || 'Kalkulacja przerwana.'@ || 'Analiza przerwana.'@ ?});
      KOMM.select()
   ?};
   cur_tab(1,1).actions_grayed(cur_win(1,1))
";
__ANZP.win_act(_wer2,0,'Formuła',{? VAR.A01='0' || 'K&alkuluj'@@ || 'Analizuj'@@ ?},,,_formula,,,,,,'A');
__ANZP.win_act(_wer2,1,'Formuła',{? VAR.A01='0' || 'K&alkuluj'@@ || 'Analizuj'@@ ?},,,_formula,,,,,,'A');
{? VAR.A_ANZH().AKT='N'
|| _formula:="exec('save_anal','zl_kalk')";
   __ANZP.win_act(_wer2,0,'Formuła','Zapisz &wyniki'@@,,,_formula,,,,,,'W');
   __ANZP.win_act(_wer2,1,'Formuła','Zapisz &wyniki'@@,,,_formula,,,,,,'W')
?};
{? exec('chk_role','#b__box',OPERATOR.USER,'ZWS_PAR_TZLE')
|| _formula:="exec('save_const','zl_kalk')";
   __ANZP.win_act(_wer2,0,'Formuła','Zapisz formuły i stałe'@@,,,_formula,,,,,,'Z');
   __ANZP.win_act(_wer2,1,'Formuła','Zapisz formuły i stałe'@@,,,_formula,,,,,,'Z')
?};
_formula:="{? VAR.A01='0' || rep_exec('tte_drkkanzz') || rep_exec('tte_drukanzz') ?}; 1";
__ANZP.win_act(_wer2,0,'Formuła','Druku&j'@@,,,_formula,,1,,,,'J',,'icon=print');
__ANZP.win_act(_wer2,,'Formuła','Legenda'@@,,,"exec('legenda','color','ANZPT#0'+VAR.A01)",,0,,,,'L');
_formula:="
   cur_tab(1,1).ROZN:=cur_tab(1,1).WART1-cur_tab(1,1).WART;
   {? cur_tab(1,1).ROZN<>0
   || Color.rekprzed('ANZPT#0'+VAR.A01+'#01')
   || ''
   ?}
";
__ANZP.win_act(_wer2,,'Rekord',,,,_formula,,0);

__ANZP.win_btn(_wer2,'text=%1,panel=bottom,align=begin'['Formuły'@],'menu:F');
__ANZP.win_btn(_wer2,'text=%1,panel=bottom,align=begin'['Stałe'@],'menu:S');
{? VAR.A01='0'
|| __ANZP.win_btn(_wer2,'text=%1,panel=bottom,align=begin'['Su&rowce'@],'menu:R');
   __ANZP.win_btn(_wer2,'text=%1,panel=bottom,align=begin'['S&tanowiska'@],'menu:T');
   __ANZP.win_btn(_wer2,'text=%1,panel=bottom,align=begin'['K&alkuluj'@],'menu:A')
|| __ANZP.win_btn(_wer2,'text=%1,panel=bottom,align=begin'['Analizuj'@],'menu:A')
?};

__AFORM.win_sel(_wer);
__ANKON.win_sel(_wer1);
__ANZP.win_sel(_wer2);
__AFORM.win_edit(red);
__ANKON.win_edit(red1);

AFORM.cntx_psh();
AFORM.index('OR');
AFORM.prefix(VAR.A_ANZH().OPC);
{? AFORM.first()
|| {!
   |? __AFORM.REF:=#AFORM.ref();
      __AFORM.NR:=AFORM.RUBR().NR;
      __AFORM.OPIS:=ANRUB.OPIS;
      __AFORM.FORM:=AFORM.FRM;
      __AFORM.FRS:=AFORM.FRS;
      __AFORM.add();
      AFORM.next()
   !}
?};
AFORM.cntx_pop();

ANKON.cntx_psh();
ANKON.index('OR');
ANKON.prefix(VAR.A_ANZH().OPC);
{? ANKON.first()
|| {!
   |? __ANKON.REF:=#ANKON.ref();
      __ANKON.NR:=ANKON.RUBR().NR;
      __ANKON.OPIS:=ANKON.RUBR().OPIS;
      __ANKON.WAR:=ANKON.WAR;
      __ANKON.add();
      ANKON.next()
   !}
?};
ANKON.cntx_pop();

ANZP.cntx_psh();
ANZP.index('NRARUB');
ANZP.prefix(VAR.A_ANZH);
{? ANZP.first()
|| {!
   |? __ANZP.NR:=ANZP.RUBR().NR;
      __ANZP.WART:=0;
      __ANZP.WART1:=ANZP.WAR;
      __ANZP.ROZN:=ANZP.WAR;
      __ANZP.OPIS:=ANZP.RUBR().OPIS;
      __ANZP.add();
      ANZP.next()
   !}
?};
ANZP.cntx_pop();

save_kons:=save_anal:=1;

__ANZP.clear();
__ANZP.first();
__ANZP.actions_grayed(_wer2,'WJ');
__ANZP.select();

{? VAR.A_ANZH().AKT<>'T'
|| {? save_anal=0
   || {? FUN.ask({? VAR.A01='0' || 'Czy zapisać wyniki kalkulacji?'@ || 'Czy zapisać wyniki analizy?'@ ?})
      || exec('save_anal','zl_kalk')
      ?}
   ?};
::   {? save_kons=0 & exec('chk_role','#b__box',OPERATOR.USER,'ZWS_PAR_TZLE')
::   || {? FUN.ask('Czy zapisać stałe i formuły '+{? VAR.A01='0' || 'kalkulacji' || 'analizy' ?}+'?')
::      || exec('save_const','zl_kalk')
::      ?}
::   ?};
   ~~
?};
obj_del(__AFORM);
obj_del(__ANKON);
obj_del(__ANZP);
&__LEVEL;
&red;
&redp;
&red1;
VAR_DEL.delete('__TMAT','__TOPER');
exec('ANZ_done','zl_kalk')


\Add_aform
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.10]
:: OPIS: dodanie nowej formuły.
::  OLD: \Add_aform/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
__AFORM.win_edit(red);
__AFORM.blank();
AFORM.blank();
{? __AFORM.edit("
      _ok:='';
      {? AFORM.RUBR=null()
      || _ok:='RUBR';
         FUN.emsg('Numer rubryki musi być wypełniony.'@)
      ?};
      {? _ok='' & __AFORM.FORM=''
      || _ok:='FORM';
         FUN.emsg('Formuła kalkulacyjna musi być wypełniona.'@)
      ?};
      {? _ok=''
      ||
         {? exec('fparse','kalkulator',__AFORM.FORM,'fkz')
         ||
            __AFORM.cntx_psh();
            __AFORM.prefix(ANRUB.NR);
            {? __AFORM.first()
            || FUN.info('Formuła dla rubryki o numerze: %1 już istnieje.'@[form(__AFORM.NR)]);
               _ok:='RUBR'
            || _ok:=1
            ?};
            __AFORM.cntx_pop()
         ?}
      ?};
      _ok
   ")
|| __AFORM.REF:=0;
   __AFORM.NR:=ANRUB.NR;
   __AFORM.OPIS:=ANRUB.OPIS;
   __AFORM.add()
?};
~~


\ref_aform
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.10]
:: OPIS: przeładowanie formuł analizy (kalkulacji).
::  OLD: \ref_aform/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
__AFORM.clear();
__AFORM.erase();
AFORM.cntx_psh();
AFORM.index('OR');
AFORM.prefix(VAR.A_ANZH().OPC);
{? AFORM.first()
|| {!
   |? __AFORM.REF:=#AFORM.ref();
      __AFORM.NR:=AFORM.RUBR().NR;
      __AFORM.OPIS:=ANRUB.OPIS;
      __AFORM.FORM:=AFORM.FRM;
      __AFORM.FRS:=AFORM.FRS;
      __AFORM.add();
      AFORM.next()
   !}
?};
AFORM.cntx_pop();
__AFORM.first();
~~


\Add_ankon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.10]
:: OPIS: dodanie nowej stałej
::  OLD: \Add_ankon/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
__ANKON.win_edit(red1);
__ANKON.blank();
ANKON.blank();
{? __ANKON.edit("

      _ok:='';
      {? ANKON.RUBR=null()
      || _ok:='RUBR';
         FUN.emsg('Numer rubryki musi być wypełniony.'@)
      ?};

      {? _ok=''
      || __ANKON.cntx_psh();
         __ANKON.prefix(ANRUB.NR);
         {? __ANKON.first()
         || FUN.info('Wartość dla rubryki o numerze: %1 już istnieje.'@[form(__ANKON.NR)]);
            _ok:='RUBR'
         ?};
         __ANKON.cntx_pop()
      ?};
      _ok
   ")
|| __ANKON.REF:=0;
   __ANKON.NR:=ANRUB.NR;
   __ANKON.OPIS:=ANRUB.OPIS;
   __ANKON.add()
?};
~~


\ref_ankon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.10]
:: OPIS: przeładowanie stałych kalkulacji (analizy)
::  OLD: \ref_ankon/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
__ANKON.clear();
__ANKON.erase();
ANKON.cntx_psh();
ANKON.index('OR');
ANKON.prefix(VAR.A_ANZH().OPC);
{? ANKON.first()
|| {!
   |? __ANKON.REF:=#ANKON.ref();
      __ANKON.NR:=ANKON.RUBR().NR;
      __ANKON.OPIS:=ANKON.RUBR().OPIS;
      __ANKON.WAR:=ANKON.WAR;
      __ANKON.add();
      ANKON.next()
   !}
?};
ANKON.cntx_pop();
__ANKON.first();
~~


\formchange
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.10]
:: OPIS: Formuły do porówniania
::  OLD: \formchange/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
__AFORM.prefix();
__AFORM.select()


\constchange
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.10]
:: OPIS: Stałe do porówniania
::  OLD: \constchange/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
__ANKON.prefix();
__ANKON.select()


\sur_kalk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.10]
:: OPIS: utworzenie i wypełnienie tabeli tymczasowej surowców karty technologicznej zlecenia.
::  OLD: \sur_kalk/zl_zmat.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__TMAT')<=0
|| __TMAT:=tab_tmp(1,
      'ZLEC','INTEGER','Ref.do zlec',
      'REF','STRING[16]','$TMAT.ref()',
      'PTREF','INTEGER','#M.ref()',
      'KOD','STRING[50]','Kod surowca',
      'NAZ','STRING[100]','Nazwa surowca',
      'TKTL','STRING[16]','$TKTL.ref()',
      'WPM','STRING[1]','WPM',
      'P','STRING[1]','Podstawowy',
      'L','STRING[1]','Limitowany',
      'SO','STRING[1]','Surowiec/Odpad',
      'TCHMAT','STRING[16]','$TCHMAT.ref()',
      'LP','INTEGER','lp.');
   __TMAT.fld_attr(,2);

   {? VAR.A_ANZH().ZLEC().NRNZL=0 & VAR.A_ANZH().ZLEC().RODZAJ<>'P'
   || ZL.cntx_psh();
      ZL.index('NRNZL');
      ZL.prefix(ANZH.ZLEC().UNRZL);
      {? ZL.first()
      || {!
         |? {? ZL.RTKTL<>''
            || _tktl:=exec('FindAndGet','#table',TKTL,ZL.RTKTL,,"ref()",null())
            || _tktl:=exec('FindAndGet','#table',TKTL,ZL.RKTL,,"ref()",null())
            ?};
            _msk:=(8+ref_name(_tktl))+3;
            exec('tktl_use','tech_common',_msk);

            TMAT.index('NNL');
            TMAT.prefix(_tktl);
            {? TMAT.first()
            || _i:=1;
               {!
               |? {? TMAT.PT().R<>'P'
                  || __TMAT.ZLEC:=#ZL.ref();
                     __TMAT.LP:=_i;
                     __TMAT.REF:=$TMAT.ref();
                     {? TMAT.GRKTM='K'
                     || __TMAT.PTREF:=#TMAT.PT;
                        __TMAT.KOD:=TMAT.PT().KTM;
                        __TMAT.NAZ:=TMAT.PT().N;
                        __TMAT.WPM:=TMAT.PT().R
                     || __TMAT.PTREF:=#TMAT.TGDFLT().PT;
                        __TMAT.KOD:=TMAT.TGDFLT().PT().KTM;
                        __TMAT.NAZ:=TMAT.TGDFLT().PT().N;
                        __TMAT.WPM:=TMAT.TGDFLT().PT().R
                     ?};
                     __TMAT.TKTL:=$TMAT.KTL;
                     __TMAT.P:=TMAT.PODST;
                     __TMAT.L:=TMAT.LIMIT;
                     __TMAT.SO:=TMAT.SO;
                     __TMAT.TCHMAT:='';
                     _i+=1;
                     __TMAT.add()
                  ?};
                  TMAT.next()
               !}
            ?};

            exec('tktl_use','tech_common');
            ZL.next()
         !}
      ?};
      ZL.cntx_pop()
   ||
      {? VAR.A_ANZH().ZLEC().RTKTL<>''
      || _tktl:=exec('FindAndGet','#table',TKTL,VAR.A_ANZH().ZLEC().RTKTL,,"ref()",null())
      || _tktl:=exec('FindAndGet','#table',TKTL,VAR.A_ANZH().ZLEC().RKTL,,"ref()",null())
      ?};
      _msk:=(8+ref_name(_tktl))+3;
      exec('tktl_use','tech_common',_msk);

      TMAT.index('NNL');
      TMAT.prefix(_tktl);
      {? TMAT.first()
      || _i:=1;
         {!
         |? __TMAT.ZLEC:=#VAR.A_ANZH().ZLEC;
            __TMAT.LP:=_i;
            __TMAT.REF:=$TMAT.ref();
            {? TMAT.GRKTM='K'
            || __TMAT.PTREF:=#TMAT.PT;
               __TMAT.KOD:=TMAT.PT().KTM;
               __TMAT.NAZ:=TMAT.PT().N;
               __TMAT.WPM:=TMAT.PT().R
            || __TMAT.PTREF:=#TMAT.TGDFLT().PT;
               __TMAT.KOD:=TMAT.TGDFLT().PT().KTM;
               __TMAT.NAZ:=TMAT.TGDFLT().PT().N;
               __TMAT.WPM:=TMAT.TGDFLT().PT().R
            ?};
            __TMAT.TKTL:=$TMAT.KTL;
            __TMAT.P:=TMAT.PODST;
            __TMAT.L:=TMAT.LIMIT;
            __TMAT.SO:=TMAT.SO;
            __TMAT.TCHMAT:='';
            _i+=1;
            __TMAT.add();
            TMAT.next()
         !}
      ?}
   ?}
?};
_wertmat:=__TMAT.mk_sel('Surowce kalkulowanej technologii'@,'N',0,'sur_kalk',,2);
__TMAT.win_fld(_wertmat,,'LP',,,4,,,'Lp.'@);
__TMAT.win_fld(_wertmat,,'KOD',,,20,,,'Kod'@);
__TMAT.win_fld(_wertmat,,'NAZ',,,35,,,'Nazwa'@);
::__TMAT.win_fld(_wertmat,,'WPM',,,2,,,'W'@,,'W/P/S'@);
__TMAT.win_fld(_wertmat,,'P',,,-4,,,'Podstawowy'@,,'Znacznik, czy to jest surowiec podstawowy'@,2,,"'T'","'N'");
__TMAT.win_fld(_wertmat,,'L',,,-4,,,'Limitowany'@,
                                   ,'Znacznik, czy surowiec limitowany, czy rozliczany wsteczenie'@,2,,"'T'","'N'");
__TMAT.win_fld(_wertmat,,'SO',,,-4,,,'Surowiec/Odpad'@,,'Znacznik, czy jest odpadem/koproduktem'@,2,,"'O'","'S'");
__TMAT.win_act(_wertmat,0,'Formuła','Zamienniki'@@,,,"exec('anzamsur','kalk_mater')",,1,,,,'Z');
__TMAT.win_sel(_wertmat);
__TMAT.prefix();
__TMAT.first();
__TMAT.select();
~~


\oper_kalk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Utworzenie i wypełnienie tabeli tymczasowej operacji technologii (dla zlecenia)
::  OLD: \zoper_kalk/tex_ope1.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__TOPER')<=0
|| __TOPER:=tab_tmp(1,
      'LP','INTEGER','Lp.',
      'REF','INTEGER','#TOPER.ref()',
      'NROP','STRING[30]','Numer operacji',
      'PLACE','INTEGER','Stanowisko - #TWRKPLC.ref()',
      'KOD','STRING[10]','Kod stanowiska',
      'NA','STRING[60]','Nazwa stanowiska',
      'TECHZAMS','INTEGER','Zamiennik stanowiska - #TECHZAMS.ref()',
      'NTIME','REAL','Norma czasowa',
      'MTIME','REAL','Czas maszynowy');
   __TOPER.fld_attr(,2);

   {? VAR.A_ANZH().ZLEC().NRNZL=0 & VAR.A_ANZH().ZLEC().RODZAJ<>'P'
   || ZL.cntx_psh();
      ZL.index('NRNZL');
      ZL.prefix(ANZH.ZLEC().UNRZL);
      {? ZL.first()
      || {!
         |? TOPER.index('ANNN');
            TOPER.prefix('T','N',ZL.TKTL);
            {? TOPER.first()
            || _i:=1;
               {!
               |? {? TOPER.PZ='P' & TOPER.WEW='T'
                  || __TOPER.LP:=_i;
                     __TOPER.REF:=#TOPER.ref();
                     __TOPER.NROP:=exec('get_oper_nr','tech_oper',TOPER.UNROP);
                     {? TOPER.GRPOJ='S'
                     || __TOPER.PLACE:=#ZOPER.PLACE;
                        __TOPER.KOD:=TOPER.PLACE().KOD;
                        __TOPER.NA:=TOPER.PLACE().NA
                     || __TOPER.PLACE:=#TOPER.TWRKPLG().ELEMENT;
                        __TOPER.KOD:=TOPER.TWRKPLG().ELEMENT().KOD;
                        __TOPER.NA:=TOPER.TWRKPLG().ELEMENT().NA
                     ?};
                     __TOPER.TECHZAMS:=0; 'domyslnie';
                     __TOPER.NTIME:=TOPER.NTIME;
                     __TOPER.MTIME:=TOPER.MTIME;
                     _i+=1;
                     __TOPER.add()
                  ?};
                  TOPER.next()
               !}
            ?};
            ZL.next()
         !}
      ?};
      ZL.cntx_pop()

   || TOPER.index('ANNN');
      TOPER.prefix('T','N',VAR.A_ANZH().ZLEC().TKTL);
      {? TOPER.first()
      || _i:=1;
         {!
         |? {? TOPER.PZ='P' & TOPER.WEW='T' & TOPER.TPZ='N'
            || __TOPER.LP:=_i;
               __TOPER.REF:=#TOPER.ref();
               __TOPER.NROP:=exec('get_oper_nr','tech_oper',TOPER.UNROP);
               {? TOPER.GRPOJ='S'
               || __TOPER.PLACE:=#TOPER.PLACE;
                  __TOPER.KOD:=TOPER.PLACE().KOD;
                  __TOPER.NA:=TOPER.PLACE().NA
               || __TOPER.PLACE:=#TOPER.TWRKPLG().ELEMENT;
                  __TOPER.KOD:=TOPER.TWRKPLG().ELEMENT().KOD;
                  __TOPER.NA:=TOPER.TWRKPLG().ELEMENT().NA
               ?};
               __TOPER.TECHZAMS:=0; 'domyslnie';
               __TOPER.NTIME:=TOPER.NTIME;
               __TOPER.MTIME:=TOPER.MTIME;
               _i+=1;
               __TOPER.add()
            ?};
            TOPER.next()
         !}
      ?}
   ?}
?};
_wer:=__TOPER.mk_sel('Stanowiska kalkulowanej technologii'@,'N',0,'zoper_wer',,5,29);
__TOPER.win_fld(_wer,,'NROP',,,14,,,'Numer operacji'@);
__TOPER.win_fld(_wer,,'KOD',,,10,,,'Kod'@);
__TOPER.win_fld(_wer,,'NA',,,40,,,'Nazwa'@);
__TOPER.win_fld(_wer,,'NTIME',,,15,4);
__TOPER.win_fld(_wer,,'MTIME',,,15,4);
__TOPER.win_act(_wer,0,'Formuła','&Zamienniki'@@,,,"exec('zamoper','kalk_oper')",,1,,,,'Z');
__TOPER.win_sel(_wer);
__TOPER.prefix();
__TOPER.first();
__TOPER.select();
~~


\save_anal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.10]
:: OPIS: kasuje stare wyniki analiz/kalkulacji i zapisuje w to miejsce nowe.
::  OLD: \save_anal/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~FUN.ask(
      {? VAR.A01='0'
      || 'Czy zapisać zmodyfikowane wyniki kalkulacji?'@
      || 'Czy zapisać zmodyfikowane wyniki analizy?'@
      ?}
   )
|| return()
?};

__ANZP.clear();
{? __ANZP.first()
|| exec('anzh_del','zl_kalk',VAR.A_ANZH,0);
   ANZ.save();
   save_anal:=1
|| FUN.emsg(
      {? VAR.A01='0'
      || 'Nie została wykonana kalkulacja, zapisanie wyników nie jest możliwe.'@
      || 'Nie została wykonana analiza, zapisanie wyników nie jest możliwe.'@
      ?}
   )
?}


\save_const
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.10]
:: OPIS: Zapisuje zmienione formuły kalkulacji/anlizy i wartości stałych do tabel syst.
::  OLD: \save_const/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Czy zapisać zmodyfikowane formuły i stałe?'@,,'Bieżący wariant'@,'Nowy wariant'@);
{? _choice=0
|| return()
|| __ANZP.clear();
   {? __ANZP.first()
   || {! |? exec('savetab','zl_kalk',_choice-1)=0 !};
      save_kons:=1
   || FUN.info('Nie została wykonana kalkulacja/analiza, zapisanie wyników nie jest możliwe.'@)
   ?}
?};
~~


\savetab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.10]
:: OPIS: zapisanie zmienionych formuł i wartości stałych do tabel systemu.
::   WE: [_a]: 0 - zapis do bieżącego wariantu, 1 - nowy wariant
::   WY: -1 / 0 / 1 - esc, albo czy udany zapis
::  OLD: \savetab/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<1 || _new:=0 || _new:=_a ?};

_anwar:=VAR.A_WARZ;

{? _new
|| undefine();
   define('WAR',ANWAR.NA,'Nowy wariant','Nazwa nowego wariantu',40,40);
   def_btn('text=%1'['Zapisz'@],'key:F2');
   def_btn('text=%1'['Anuluj'@],'key:Esc');
   {? def_edit("chk_rec()",FUN.TYT)
   || ANWAR.NA:=DEFINE.WAR;
      ANWAR.A01:=VAR.A01;
      {? ANWAR.add(1)
      || _anwar:=ANWAR.ref();
         ZTPF.clear();
         ZTPF.blank();
         ZTPF.TYP:=VAR.A_ZLEC().TYP;
         ZTPF.OPC:=_anwar;
         ZTPF.add();
         ANWAR.f_set('NA',,
            '"ANWAR"."A01"=\':_b\'
            and "ANWAR"."REFERENCE" in
            (select ZTPF.OPC from ZTPF where ZTPF.TYP=\':_a\')',
            $VAR.A_ZLEC().TYP, VAR.A01
         )
      || FUN.emsg('"'+ANWAR.NA+'"\n\n'+'Wariant o tej nazwie już istnieje.'@);
         return(0)
      ?}
   || return(-1)
   ?}
?};

AFORM.index('OR');
AFORM.prefix(_anwar);
{? AFORM.first()
|| {! |? AFORM.del() !}
?};
__AFORM.prefix();
{? __AFORM.first()
|| {!
   |? AFORM.OPC:=_anwar;
      ANRUB.cntx_psh();
      ANRUB.index('RUBR');
      ANRUB.prefix(__AFORM.NR);
      {? ANRUB.first()
      || AFORM.RUBR:=ANRUB.ref()
      || AFORM.RUBR:=null()
      ?};
      ANRUB.cntx_pop();
      AFORM.FRM:=__AFORM.FORM;
      AFORM.FRS:=__AFORM.FRS;
      AFORM.add();
      __AFORM.REF:=#AFORM.ref();
      __AFORM.put();
      __AFORM.next()
   !}
?};
ANKON.index('OR');
ANKON.prefix(_anwar);
{? ANKON.first()
|| {! |? ANKON.del() !}
?};
__ANKON.prefix();
{? __ANKON.first()
|| {!
   |? ANKON.OPC:=_anwar;
      ANRUB.cntx_psh();
      ANRUB.index('RUBR');
      ANRUB.prefix(__ANKON.NR);
      {? ANRUB.first()
      || ANKON.RUBR:=ANRUB.ref()
      || ANKON.RUBR:=null()
      ?};
      ANRUB.cntx_pop();
      ANKON.WAR:=__ANKON.WAR;
      ANKON.add();
      __ANKON.REF:=#ANKON.ref();
      __AFORM.put();
      __ANKON.next()
   !}
?};
1


\comzkalk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: Porównianie analiz kalkulacji/analiz - właściwa akcja
::  OLD: \comzkalk/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
{? ANZH.sel_size()=0
|| ANZH.cntx_psh();
   VAR.A_PANZH:=ANZH.ref();
   ANZH.win_sel('SLO'+VAR.A01);
   {? ANZH.select()
   || exec('compare','zl_kalk',VAR.A_PANZH,ANZH.ref())
   ?};
   ANZH.cntx_pop()
|| params_get().xanzh.licznik+=1;
   params_get().xanzh[params_get().xanzh.licznik]:=ANZH.ref()
?};
~~


\comzkalk_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Porównanie dwóch kalkulacji/analiz - akcja przed grupą rekordów
::----------------------------------------------------------------------------------------------------------------------
{? ANZH.sel_size()<>2
|| FUN.info({? VAR.A01='0'
            || 'Należy zaznaczyć dwie kalkulacje do porównania.'@
            || 'Należy zaznaczyć dwie analizy do porównania.'@
            ?});
   0
|| params_get().xanzh.licznik:=0;
   1
?}


\comzkalk_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Porównanie dwóch kalkulacji - akcja po grupie rekordów
::----------------------------------------------------------------------------------------------------------------------
exec('compare','zl_kalk',params_get().xanzh.anzh,params_get().xanzh.panzh);
~~


\anzp_rec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.53]
:: OPIS: kolorowanie rekordów w oknie z wynikami analizy
::   WY: Schemat kolorowania [STRING]
::  OLD: \anzp_rec/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
AFORM.index('OR');
AFORM.prefix(ANZH.OPC,ANZP.RUBR().NR);
{? AFORM.first() & AFORM.FRS<>''
|| ANZP.actions_grayed(cur_win(1,1),'')
|| ANZP.actions_grayed(cur_win(1,1),'E')
?};
_rub:=ANZP.RUBR().NR;
{? _rub=ANZH.ZLEC().TYP().CRUBALL |
   _rub=ANZH.ZLEC().TYP().CRUBMAT |
   _rub=ANZH.ZLEC().TYP().CRUBROB |
   _rub=ANZH.ZLEC().TYP().CRUBJEDN |
   _rub=ANZH.ZLEC().TYP().CRUBIL |
   _rub=ANZH.ZLEC().TYP().CRUBIL0
|| 'ANZP#01#01'
|| ''
?}


\anzp1rec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.10]
:: OPIS: kolorowanie rekordów w oknie z wynikami porównania analiz
::   WY: Schemat kolorowania [STRING]
::  OLD: \anzp1rec/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_anzp:=params_get().anzp;

_anzp.prefix(ANZP.RUBR().NR);
{? _anzp.first()
|| VAR.WARPOR:=_anzp.WARTOSC;
   VAR1.ROZNICA:=ANZP.WAR-_anzp.WARTOSC
|| VAR.WARPOR:=0;
   VAR1.ROZNICA:=0
?};
_rub:=ANZP.RUBR().NR;
{? _rub=ANZH.ZLEC().TYP().CRUBALL |
   _rub=ANZH.ZLEC().TYP().CRUBMAT |
   _rub=ANZH.ZLEC().TYP().CRUBROB |
   _rub=ANZH.ZLEC().TYP().CRUBJEDN |
   _rub=ANZH.ZLEC().TYP().CRUBIL |
   _rub=ANZH.ZLEC().TYP().CRUBIL0
|| 'ANZP#02#01'
|| ''
?}


\anzp_cmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.41]
:: OPIS: Wyświetla okno z zawartością kalkulacji wstępnej zlecenia do porównania z analizą zlecenia
::  OLD: \anzp_cmp/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=null();
ANZH.cntx_psh();
ANZP.cntx_psh();
ANZH.index('ZN');
ANZH.prefix('0',ZL.ref());
{? ANZH.first()
|| {!
   |? {? ANZH.AKT='T' || _ref:=ANZH.ref() ?};
      ANZH.next()
   !};
   {? _ref<>null()
   || ANZH.seek(_ref);
      ANZP.index('NRARUB');
      ANZP.prefix(ANZH.ref());
      _jk_mat:=VAR.JK_MAT;
      _jk_rob:=VAR.JK_ROB;
      _anzh:=VAR.A_ANZH;
      VAR.A_ANZH:=ANZH.ref();
      VAR.A01:='0';
      exec('kj_licz','zl_kalk');
      _wer:='WERA';
      ANZP.win_sel(_wer);
      ANZP.win_fml(_wer,,'RUBR','NR','ICON_BEFORE',"
         AFORM.index('OR');
         AFORM.prefix(ANZH.OPC,ANZP.RUBR().NR);
         {? AFORM.first()
         || {? AFORM.FRS=''
            || ''
            || 'xwin16.png:42'
            ?}
         || ''
         ?}
      ");
      params_set(params_get());
      ANZP.select(,,,'pWC');
      VAR.JK_MAT:=_jk_mat;
      VAR.JK_ROB:=_jk_rob;
      VAR.A_ANZH:=_anzh;
      VAR.A01:='1'
   || FUN.info('Brak aktywnej kalkulacji dla zlecenia.'@)
   ?}
|| FUN.info('Brak kalkulacji wstępnej zlecenia.'@)
?};
ANZH.cntx_pop();
ANZP.cntx_pop();
~~


\anzp_cmpp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Porównanie analizy z kalkulacją zlecenia - układ porównania z wartościami planowanymi + wskazanie odchyleń
::  OLD: \anzp_cmpp/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
ANZH.cntx_psh();
ANZH.index('ZN');
ANZH.prefix('0',ZL.ref());
{? ~ANZH.first() || FUN.info('Brak kalkulacji wstępnej zlecenia.'@); ANZH.cntx_pop(); return() ?};
_ref:=null();
{!
|? {? ANZH.AKT='T' || _ref:=ANZH.ref() ?};
   ANZH.next()
!};
{? _ref=null() || FUN.info('Brak aktywnej kalkulacji dla zlecenia.'@); ANZH.cntx_pop(); return() ?};
ANZH.cntx_pop();

VAR_DEL.delete('__TABCMP');
ANZP.cntx_psh(); ANZH.cntx_psh(); _var_anzh:=VAR.A_ANZH; _var_a01:=VAR.A01;

__TABCMP:=tab_tmp(1,
   'NR','INTEGER','Numer rubryki',
   'NAZ','STRING[60]','Opis rubryki',
   'WAR0','REAL','Wartość planowana',
   'WAR1','REAL','Wartość rzeczywista',
   'ODW','REAL','Odchylenie (wartość)',
   'ODP','REAL','Ochylenie (procent)',
   'A0','INTEGER','#ANZH.ref() dla kalkulacji',
   'A1','INTEGER','#ANZH.ref() dla analizy'
);
__TABCMP.fld_attr('A0',2);
__TABCMP.fld_attr('A1',2);

_wer:=__TABCMP.mk_sel('Porównanie analizy z wartościami planowanymi'@,'N',0,'anzp_cmpp',,8);
__TABCMP.win_fld(_wer,,'NR',,,5,,,'Nr'@);
__TABCMP.win_fld(_wer,,'NAZ',,,30,,,'Opis'@);
__TABCMP.win_fld(_wer,,'WAR0',,,,4,,'Wartość planowana'@);
__TABCMP.win_fld(_wer,,'WAR1',,,,4,,'Wartość rzeczywista'@);
__TABCMP.win_fld(_wer,,'ODW',,,,4,,'Odchylenie (wartość)'@);
__TABCMP.win_fld(_wer,,'ODP',,,,4,,'Ochylenie (procent)'@);
__TABCMP.win_act(_wer,,'Menu','Szcz&egóły'@@,,,,,,,,,'E');
_formula:="
   VAR.A_ANZH:=exec('FindAndGet','#table',ANZH,__TABCMP.A0,,\"ref()\",null());
   VAR.A01:='0';
   ANZP.index('NRARUB');
   ANZP.prefix(VAR.A_ANZH,__TABCMP.NR);
   {? ANZP.first() || exec('szcz_anzp','zl_kalk') ?}
";
__TABCMP.win_act(_wer,,'Formuła','Kalkulacja (wartości planowane)'@@,'#E',,_formula,,,,,,'K');
_formula:="
   VAR.A_ANZH:=exec('FindAndGet','#table',ANZH,__TABCMP.A0,,\"ref()\",null());
   VAR.A01:='1';
   ANZP.index('NRARUB');
   ANZP.prefix(VAR.A_ANZH,__TABCMP.NR);
   {? ANZP.first() || exec('szcz_anzp','zl_kalk') ?}
";
__TABCMP.win_act(_wer,,'Formuła','Analiza (wartości rzeczywiste)'@@,'#E',,_formula,,,,,,'A');
::__TABCMP.win_act(_wer,,'Formuła','Legenda',,,"exec('leg_anzp','zl_kalk')");
_formula:="
   _res:=1;
   ANZP.index('NRARUB');
   ANZP.prefix(__TABCMP.A0,__TABCMP.NR);
   {? ANZP.first()
   || _res:=Color.rekprzed('ANZP#01#01')
   ?};
   ANZP.prefix(__TABCMP.A1,__TABCMP.NR);
   {? ANZP.first()
   || _res:=Color.rekprzed('ANZP#01#01')
   ?};
   AFORM.index('OR');
   AFORM.prefix(ANZP.NRA().OPC,__TABCMP.NR);
   {? ~AFORM.first() || AFORM.blank() ?};
   _res
";
::__TABCMP.win_act(_wer,,'Rekord',,,,_formula);
:: Ikony
__TABCMP.win_fml(_wer,,'WAR0',,'ICON_BEFORE',"
   AFORM.index('OR');
   AFORM.prefix(exec('FindAndGet','#table',ANZH,__TABCMP.A0,,\"OPC\",null()),__TABCMP.NR);
   {? AFORM.first()
   || {? AFORM.FRS=''
      || ''
      || 'xwin16.png:42'
      ?}
   || ''
   ?}
");
__TABCMP.win_fml(_wer,,'WAR1',,'ICON_BEFORE',"
   AFORM.index('OR');
   AFORM.prefix(exec('FindAndGet','#table',ANZH,__TABCMP.A1,,\"OPC\",null()),__TABCMP.NR);
   {? AFORM.first()
   || {? AFORM.FRS=''
      || ''
      || 'xwin16.png:42'
      ?}
   || ''
   ?}
");
:: Przyciski
_btn:=__TABCMP.win_btn(_wer,'text=%1'['Szcz&egóły'@],'Menu');
__TABCMP.btn_menu(_wer,_btn,'menu:EK');
__TABCMP.btn_menu(_wer,_btn,'menu:EA');

__TABCMP.win_sel(_wer);

AFORM.index('OR');
_opc:=ANZH.OPC;

ANZP.index('NRARUB');
ANZP.prefix(ANZH.ref());
{? ANZP.first()
|| {!
   |? AFORM.prefix(_opc,ANZP.RUBR().NR);
      {? AFORM.first() & AFORM.DSP='T'
      || __TABCMP.NR:=ANZP.RUBR().NR;
         __TABCMP.NAZ:=ANZP.RUBR().OPIS;
         __TABCMP.WAR1:=ANZP.WAR;
         __TABCMP.A1:=#ANZP.NRA;
         __TABCMP.add()
      ?};
      ANZP.next()
   !}
?};

_ref:=null();
ANZH.index('ZN');
ANZH.prefix('0',ZL.ref());
{? ANZH.first()
|| {!
   |? {? ANZH.AKT='T' || _ref:=ANZH.ref() ?};
      ANZH.next()
   !};
   {? _ref<>null()
   || ANZH.seek(_ref);
      ANZP.index('NRARUB');
      ANZP.prefix(ANZH.ref());
      {? ANZP.first()
      || {!
         |? AFORM.prefix(_opc,ANZP.RUBR().NR);
            {? AFORM.first() & AFORM.DSP='T'
            || __TABCMP.prefix(ANZP.RUBR().NR);
               {? __TABCMP.first()
               || __TABCMP.WAR0:=ANZP.WAR;
                  __TABCMP.A0:=#ANZP.NRA;
                  __TABCMP.put()
               || __TABCMP.NR:=ANZP.RUBR().NR;
                  __TABCMP.NAZ:=ANZP.RUBR().OPIS;
                  __TABCMP.WAR0:=ANZP.WAR;
                  __TABCMP.A0:=#ANZP.NRA;
                  __TABCMP.add()
               ?}
            ?};
            ANZP.next()
         !}
      ?}
   ?}
?};

__TABCMP.prefix();
{? __TABCMP.first()
|| {!
   |? __TABCMP.ODW:=__TABCMP.WAR1-__TABCMP.WAR0;
      __TABCMP.ODP:={? __TABCMP.WAR0=0 || 0 || __TABCMP.ODW/__TABCMP.WAR0*100 ?};
      __TABCMP.put();
      __TABCMP.next()
   !}
?};
__TABCMP.select();

ANZP.cntx_pop(); ANZH.cntx_pop(); VAR.A_ANZH:=_var_anzh; VAR.A01:=_var_a01;
VAR_DEL.delete('__TABCMP');
~~


\leg_anzp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Legenda w oknie ANZP
::  OLD: \leg_anzp/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','ANZP#01#','#ANZP#0'+ANZH.A01)


\szcz_anzp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Szczegóły dla pozycji kalkulacji/analizy zlecenia
::  OLD: \szcz_anzp/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
AFORM.index('OR');
AFORM.prefix(VAR.A_ANZH().OPC,ANZP.RUBR().NR);
{? AFORM.first()
|| {? AFORM.FRS=''
   || FUN.info({? VAR.A01='0' || 'Brak szczegółów do pozycji kalkulacji.'@ || 'Brak szczegółów do pozycji analizy.'@ ?})
   |? ANZP.MANUAL='T'
   || FUN.info({? VAR.A01='0'
               || 'Nie można wyświetlić szczegółów do modyfikowanej pozycji kalkulacji.'@
               || 'Nie można wyświetlić szczegółów do modyfikowanej pozycji analizy.'@
               ?})
   || ($AFORM.FRS)()
   ?}
|| FUN.info({? VAR.A01='0' || 'Brak szczegółów do pozycji kalkulacji.'@ || 'Brak szczegółów do pozycji analizy.'@ ?})
?};
~~


\szcz_anzp_comp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Szczegóły dla pozycji kalkulacji/analizy zlecenia (w oknie porównania dwóch - dla porównywanej)
::----------------------------------------------------------------------------------------------------------------------
ANZH.cntx_psh();
ANZH.prefix();
{? ANZH.seek(VAR.A_PANZH)
|| _anzh:=VAR.A_ANZH;
   VAR.A_ANZH:=VAR.A_PANZH;
   exec('szcz_anzp','zl_kalk');
   VAR.A_ANZH:=_anzh
?};
ANZH.cntx_pop();
~~


\anzp_drk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: Porównanie kalkukacji/analiz zlecenia
::  OLD: \anzp_drk/drukujp.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

ANZP.cntx_psh();
{? VAR.A01='0'
|| rep_exec('tte_drkkanzp')
|| rep_exec('tte_drukanzp')
?};
ANZP.cntx_pop();
~~


\kanacomp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: Wywołuje porównianie
::  OLD: \kanacomp/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.A_PANZH<>ANZH.ref()
|| sel_exit()
|| FUN.emsg({? VAR.A01='0'
            || 'Należy wybrać inną kalkulację niż aktualna.'@
            || 'Należy wybrać inną analizę niż aktualna.'@
            ?});
   ''
?}


\compare
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.10]
:: OPIS: wyświetlanie wyników porównania dwóch analiz
::   WE: _a - ANZH.ref()
::       _b - ANZH.ref()
::  OLD: \compare/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.A_ANZH:=_a;
VAR.A_PANZH:=_b;

_anzp:=tab_tmp(1,
   'NR','INTEGER','Numer',
   'WARTOSC','REAL','WARTOSC'
);
ANZP.cntx_psh();
ANZP.index('NRARUB');
ANZP.prefix();
{? VAR.A01='0'
|| {? ANZP.find_key(VAR.A_PANZH,VAR.A_PANZH().ZLEC().TYP().CRUBIL0) || _il:=ANZP.WAR || _il:=0 ?}
|| {? ANZP.find_key(VAR.A_PANZH,VAR.A_PANZH().ZLEC().TYP().CRUBIL) || _il:=ANZP.WAR || _il:=0 ?}
?};
{? ANZP.find_key(VAR.A_PANZH,VAR.A_PANZH().ZLEC().TYP().CRUBMAT) || _mat:=ANZP.WAR || _mat:=0 ?};
{? ANZP.find_key(VAR.A_PANZH,VAR.A_PANZH().ZLEC().TYP().CRUBROB) || _rob:=ANZP.WAR || _rob:=0 ?};
{? _il<>0
|| VAR.JKPMAT:=_mat/_il;
   VAR.JKPROB:=_rob/_il
|| VAR.JKPMAT:=VAR.JKPROB:=0
?};
ANZP.prefix();
{? VAR.A01='0'
|| {? ANZP.find_key(VAR.A_ANZH,VAR.A_ANZH().ZLEC().TYP().CRUBIL0) || _il:=ANZP.WAR || _il:=0 ?}
|| {? ANZP.find_key(VAR.A_ANZH,VAR.A_ANZH().ZLEC().TYP().CRUBIL) || _il:=ANZP.WAR || _il:=0 ?}
?};
{? ANZP.find_key(VAR.A_ANZH,VAR.A_ANZH().ZLEC().TYP().CRUBMAT) || _mat:=ANZP.WAR || _mat:=0 ?};
{? ANZP.find_key(VAR.A_ANZH,VAR.A_ANZH().ZLEC().TYP().CRUBROB) || _rob:=ANZP.WAR || _rob:=0 ?};
{? _il<>0
|| VAR.JK_MAT:=_mat/_il;
   VAR.JK_ROB:=_rob/_il
|| VAR.JK_MAT:=VAR.JK_ROB:=0
?};
:VAR.A_PWAR:=KKTL.OPC;
ANZP.index('NRARUB');
AFORM.cntx_psh();
AFORM.index('OR');
AFORM.prefix(VAR.A_PANZH().OPC);
{? AFORM.first()
|| {!
   |?
      ANZP.prefix(VAR.A_ANZH,AFORM.RUBR().NR);
      {? ~ANZP.first()
      || ANZP.NRA:=VAR.A_ANZH;
         ANZP.RUBR:=AFORM.RUBR;
         ANZP.WAR:=0;
         ANZP.add()
      ?};
      ANZP.prefix(VAR.A_PANZH,AFORM.RUBR().NR);
      {? ANZP.first()
      || _anzp.NR:=AFORM.RUBR().NR;
         _anzp.WARTOSC:=ANZP.WAR;
         _anzp.add()
      ?};
      AFORM.next()
   !}
?};
ANZP.cntx_pop();
AFORM.prefix(VAR.A_ANZH().OPC);
{? AFORM.first()
|| {!
   |? _anzp.prefix(AFORM.RUBR().NR);
      {? ~_anzp.first()
      || _anzp.NR:=AFORM.RUBR().NR;
         _anzp.WARTOSC:=0;
         _anzp.add()
      ?};
      AFORM.next()
   !}
?};
AFORM.cntx_pop();
ANZP.clear();
AFORM.clear();
AFORM.index('OR');
ANZP.prefix(VAR.A_ANZH);
ANZP.win_sel('WERP'+VAR.A01);

ANZP.win_fml('WERP'+VAR.A01,,'WAR',,'ICON_BEFORE',"
   AFORM.index('OR');
   AFORM.prefix(VAR.A_ANZH().OPC,ANZP.RUBR().NR);
   {? AFORM.first()
   || {? AFORM.FRS=''
      || ''
      || 'xwin16.png:42'
      ?}
   || ''
   ?}
");
ANZP.win_fml('WERP'+VAR.A01,VAR,'WARPOR',,'ICON_BEFORE',"
   AFORM.index('OR');
   AFORM.prefix(VAR.A_PANZH().OPC,ANZP.RUBR().NR);
   {? AFORM.first()
   || {? AFORM.FRS=''
      || ''
      || 'xwin16.png:42'
      ?}
   || ''
   ?}
");

params_set('anzp',_anzp);
ANZP.select();

ANZP.win_fml('WERP'+VAR.A01,,'WAR',,'ICON_BEFORE',"");
ANZP.win_fml('WERP'+VAR.A01,VAR,'WARPOR',,'ICON_BEFORE',"");

ANZP.first();
:: sprzątanie chwilowo dodanych rubryk
{!
|? AFORM.prefix(ANZP.NRA().OPC,ANZP.RUBR().NR);
   {? ~AFORM.first()
   || ANZP.del()
   || ANZP.next()
   ?}
!};
{? ANZH.seek(VAR.A_PANZH) || ANZH.r_unlock() ?};
~~


\anal_compare
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [8.10]
:: OPIS: Porównianie analiz
::  OLD: \anal_compare/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
__ANZP.cntx_psh();
__ANZP.prefix();
{? __ANZP.first()
|| {!
   |? ANZP.index('NRARUB');
      ANZP.prefix(VAR.A_ANZH,__ANZP.NR);
      {? ANZP.first()
      || __ANZP.WART1:=ANZP.WAR;
         __ANZP.put()
      ?};
      __ANZP.next()
   !}
?};
__ANZP.cntx_pop();
~~


\load4antab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: Wpisuje rubryki analizy do tabeli tymczasowej pozycji analizy.
::   WE: _a - ANZ - obiekt kalkulacyjny
::  OLD: \load4antab/prodobi.fml
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;

ANRUB.cntx_psh();
ANRUB.clear();
{! _nr:=1..(_obj.MAX)
|! {? _obj.G[_nr]=2
   || __ANZP.blank();
      ANRUB.seek(_obj.R[_nr]);
      __ANZP.NR:=ANRUB.NR;
      __ANZP.OPIS:=ANRUB.OPIS;
      __ANZP.WART:=_obj.L[1][_nr];
      __ANZP.add()
   ?}
!};
ANRUB.cntx_pop();
~~


\sv_load4zlec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: ustalenie parametrow ANKI dla ANALIZY zlecenia
::   WE: _a - obiekt kalkulacyjny
::       _b - analiza tymczasowa - porównanie (0 / 1)
::  OLD: \sv_load4zlec/prodobi.fml
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
set_virt(_obj,'load',
   {? _b=0
   || "exec('load4zlec','zl_kalk',.ME,{? _>0 || {? type_of(_a)>6 || _a || ANZH.ref()?} || ANZH.ref()?},0)"
   || "exec('load4zlec','zl_kalk',.ME,{? _>0 || {? type_of(_a)>6 || _a || ANZH.ref()?} || ANZH.ref()?},1)"
   ?}
);
set_virt(_obj,'save',"exec('save4zlec','zl_kalk',.ME)");

{? VAR.A01='0' || _obj.KalAna:=_obj.Header:='Kalkulacja wstępna zlecenia'@; exec('set_fun4_zkal','zl_kalk',_obj)
|? VAR.A01='1' || _obj.KalAna:=_obj.Header:='Analiza zlecenia'@;            exec('set_fun4_anal','zl_kalk',_obj)
?};
~~


\load4zlec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: ładowanie danych dla analizy zlecenia
::   WE: _a - wskazanie na obiekt kalkulacyjny
::       _b - ANZH.ref()
::       _c - 0 - dane pobierane z tabel
::            1 - dane pobierane sa z tymczasowych struktur
::  OLD: \load4zlec/prodobi.fml
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;

ANZH.seek(_b);
_obj.KALK:=ANZH.ref();
{? ANZH.ZLEC<>null()
|| {? ANZH.ZLEC().TYP().TECH='T'
   || _obj.KTL:=exec('FindAndGet','#table',TKTL,ANZH.ZLEC().RTKTL,,"ref()",null())
   || _obj.KTL:=exec('FindAndGet','#table',TKTL,ANZH.ZLEC().RKTL,,"ref()",null())
   ?};
   VAR.A_KTL:=_obj.KTL;
   _obj.X:=ANZH.ZLEC().IL;
   VAR.A_TPZL:=ANZH.ZLEC().TYP
|| _obj.KTL:=null();
   VAR.A_KTL:=null();
   _obj.X:=0;
   VAR.A_TPZL:=null()
?};
_obj.WST:=ANZH.OPC().WST;
{? _obj.WST<=0 || _obj.WST:=0 ?};
_typ:=VAR.A_WARZ;

_obj.Desc:=ZL.SYM;
_obj.KalAna+=' '+_obj.Desc+':';

echo('Trwa ładowanie danych do pamięci'@,'Proszę czekać...'@);

ANRUB.clear();
ANRUB.index('RUBR');
{? ANRUB.last()
|| _obj.MAX:=ANRUB.NR
?};

_obj.alloc();

{? _c=0
||
   AFORM.clear();
   AFORM.index('OR');
   AFORM.prefix(_typ);
   {? AFORM.first()
   || {!
      |? _n:=AFORM.RUBR().NR;
         _obj.F[_n]:=AFORM.FRM;
         _obj.G[_n]:=1;
         AFORM.next()
      !}
   ?};

   ANKON.clear();
   ANKON.index('OR');
   ANKON.prefix(_typ);
   {? ANKON.first()
   || {!
      |? _n:=ANKON.RUBR().NR;
         _obj.S[_n]:=ANKON.WAR;
         _obj.G[_n]:=1;
         ANKON.next()
      !}
   ?}
|| __AFORM.clear();
   {? __AFORM.first()
   || {!
      |? _n:=__AFORM.NR;
         _obj.F[_n]:=__AFORM.FORM;
         _obj.G[_n]:=1;
         __AFORM.next()
      !}
   ?};

   __ANKON.clear();
   {? __ANKON.first()
   || {!
      |? _n:=__ANKON.NR;
         _obj.S[_n]:=__ANKON.WAR;
         _obj.G[_n]:=1;
         __ANKON.next()
      !}
   ?}
?};

ANRUB.clear();
ANRUB.index('RUBR');
{? ANRUB.first()
|| {!
   |? _n:=ANRUB.NR;
      _obj.R[_n]:=ANRUB.ref();
      _obj.G[_n]:=1;
      ANRUB.next()
   !}
?};

ANH.clear();
ANH.index('AR');
ANH.prefix(_obj.KALK);
{? ANH.first()
|| {!
   |? _n:=ANH.RUBR().NR;
      _obj.H[_n]:=ANH.WAR;
      ANH.next()
   !}
?};

:: zmodyfikowane wartości
ANZP.index('NRARUB');
ANZP.prefix(ANZH.ref());
{? ANZP.first()
|| {!
   |? _nr:=ANZP.RUBR().NR;
      {? ANZP.MANUAL='T'
      || _obj.M[_nr]:='T';
         _obj.V[_nr]:=ANZP.WAR
      ?};
      ANZP.next()
   !}
?};

{? _obj.WST>0
|| {! _i:=1..(_obj.WST)
   |! {? ANZH.prev()
      || ANZP.clear();
         ANZP.index('NRARUB');
         ANZP.prefix(ANZH.ref());
         {? ANZP.first()
         || {!
            |? _obj.L[_i+1][ANZP.RUBR().NR]:=ANZP.WAR;
               ANZP.next()
            !}
         ?}
      || _obj.WSTr:=(_i-1);
         KOMM.msg('Nie udało się załadować obliczeń z analizy %1 wstecz.'@[form(_i)])
      ?}
   !};
   echo('','')
?};

: teraz powolamy anxm-y
_obj.anm:=obj_new(@.CLASS.ANK_MAT,'M'      ,'ANZMAT'); _obj.anm.K:=_obj.KALK;
_obj.ant:=obj_new(@.CLASS.ANK_MAT,'TTOPER' ,'ANZTTO'); _obj.ant.K:=_obj.KALK;
_obj.anw:=obj_new(@.CLASS.ANK_MAT,'TWRKPLC','ANZWRK'); _obj.anw.K:=_obj.KALK;
_obj.ano:=obj_new(@.CLASS.ANK_MAT,'TTOUT'  ,'ANZTOU'); _obj.ano.K:=_obj.KALK;
_obj.anu:=obj_new(@.CLASS.ANK_MAT,'M'      ,'ANZTLS'); _obj.anu.K:=_obj.KALK;

: a teraz jeszcze parametry technologii zlecenia
{? ANZH.ZLEC<>null()
||
   exec('start_Otpar','tech_param',_a,ANZH.ZLEC().KTM,VAR.A_KTL)
::      {? TKTL.seek(KTL)
::      || TPAR.clear();
::         TPAR.index('NN');
::         TPAR.prefix(TKTL.ref());
::         TPAR.first();
::         tpar:=obj_new(@.CLASS.TPAr);
::         tpar.TABLE:=TPAR;
::         tpar.INDEX:='NN';
::         tpar.PREFIX:=VAR.A_KTL;
::         tpar.loadp()
::      || tpar:=obj_new(@.CLASS.TPAr);
::         tpar.TABLE:=TPAR;
::         tpar.INDEX:='NN';
::         tpar.PREFIX:=VAR.A_KTL;
::         1
::      ?}
|| tpar:=obj_new(@.CLASS.TPAr);
   tpar.TABLE:=TPAR;
   tpar.INDEX:='NN'
?};
echo('Ładowanie danych do pamięci zakończone'@,'');
echo();
1


\save4zlec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: zapisanie wyników dla analizy zlecenia
::   WE: _a - wskazanie na obiekt kalkulacyjny
::  OLD: \save4zlec/prodobi.fml
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;

echo('Trwa zapisywanie danych.'@,'Proszę czekać...'@);
ANH.clear();
ANH.index('AR');
ANH.prefix(_obj.KALK);
{? ANH.first() || {! |? ANH.del() !} ?};
exec('poz_del','zl_kalk',_obj.KALK);
ANZP.clear();
ANZP.index('NRARUB');
ANZP.prefix(_obj.KALK);
ANZP.first();
{! _i:=1..(_obj.MAX)
|! {? _obj.G[_i]=2
   || ANZP.blank();
      ANZP.NRA:=_obj.KALK;
      ANZP.RUBR:=_obj.R[_i];
      ANZP.WAR:=_obj.L[1][_i];
      ANZP.MANUAL:=_obj.M[_i];
      ANZP.add();
      ANH.blank();
      ANH.AN:=_obj.KALK;
      ANH.RUBR:=_obj.R[_i];
      ANH.WAR:=_obj.H[_i];
      {? ANH.WAR<>0 || ANH.add(1) ?}
   ?}
!};
_obj.anm.save();
_obj.ant.save();
_obj.anw.save();
_obj.ano.save();
_obj.anu.save();
echo('Dane zapisane.'@);
echo();
1


\set_fun4_anal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: ustala funkcje X dla analizy
::   WE: _a - obiekt kalkulacyjny
::  OLD: \set_fun4_anal/prodobi.fml
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;

set_virt(_obj,'r',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: r() - robocizna
::   WE: [_a] - faza produkcji
::       [_b] - calosc (1=od początku zlecenia)
::       [_c] - 'T'=Tpz, 'N'=nie Tpz, ''=suma
::       [_d] - 'T'=koszty operacji naprawczych, 'N'=koszty operacji zwykłych, ''=suma
::----------------------------------------------------------------------------------------------------------------------
   _wynik:='Blad';
   _param1:={? _>=1 || {? _a=~~ || '' || _a ?} || '' ?};
   _param2:={? _>=2 || {? _b=~~ || 0 || _b ?} || 0 ?};
   _param3:={? _>=3 || {? _c=~~ || '' || _c ?} || '' ?};
   _param4:={? _>=4 || {? _d=~~ || '' || _d ?} || '' ?};
   {? type_of(_param1)<>2
   || .ko('1')
   |? type_of(_param2)<>1
   || .ko('2')
   |? type_of(_param3)<>2
   || .ko('3')
   |? type_of(_param4)<>2
   || .ko('4')
   || ANZH.seek(.KALK);
      {? ANZH.ZLEC().RODZAJ<>'P' & ANZH.ZLEC().NRNZL=0
      || {? type_of(.FAZY)<7 || .get_pfaz() ?};
         {? type_of(.ROB)<7
         || ZL.cntx_psh();
            ZL.index('NRNZL');
            ZL.prefix(ANZH.ZLEC().UNRZL);
            {? ZL.first()
            || {!
               |?
                  ROB1:=exec('get_rob_price','kalk_oper',.ME,ZL.ref(),_param2,'R');
                  .scal_rob();
                  obj_del(ROB1);
                  ZL.next()
               !}
            ?};
            ZL.cntx_pop()
         ?}
      || {? type_of(.FAZY)<7 || .get_pfaz() ?};
         {? type_of(.ROB)<7
         || .ROB:=exec('get_rob_price','kalk_oper',.ME,ANZH.ZLEC,_param2,'R')
         ?}
      ?};
      _wynik:=0;
      {? _param1<>''
      || _faza:=.seekpfaz(_param1);
         {? _faza<>(-1)
         || _wynik+={? _param3='T' | _param3=''
                    || {? _param4='N' | _param4='' || .ROB[_faza][2] || 0 ?}+
                       {? _param4='T' | _param4='' || .ROB[_faza][4] || 0 ?}
                    || 0
                    ?}+
                    {? _param3='N' | _param3=''
                    || {? _param4='N' | _param4='' || .ROB[_faza][1] || 0 ?}+
                       {? _param4='T' | _param4='' || .ROB[_faza][3] || 0 ?}
                    || 0
                    ?}
         ?}
      || {! _i:=1..obj_len(.FAZY)
         |! _wynik+={? _param3='T' | _param3=''
                    || {? _param4='N' | _param4='' || .ROB[_i][2] || 0 ?}+
                       {? _param4='T' | _param4='' || .ROB[_i][4] || 0 ?}
                    || 0
                    ?}+
                    {? _param3='N' | _param3=''
                    || {? _param4='N' | _param4='' || .ROB[_i][1] || 0 ?}+
                       {? _param4='T' | _param4='' || .ROB[_i][3] || 0 ?}
                    || 0
                    ?}
         !}
      ?}
   ?};
   _wynik
");

set_virt(_obj,'h',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: h() - godziny ogółem
::   WE: [_a] - faza produkcji
::       [_b] - 'T'=Tpz, 'N'=nie Tpz, ''=suma
::----------------------------------------------------------------------------------------------------------------------
   _wynik:='Blad';
   _param1:={? _>=1 || {? _a=~~ || '' || _a ?} || '' ?};
   _param2:={? _>=2 || {? _b=~~ || '' || _b ?} || '' ?};
   {? type_of(_param1)<>2
   || .ko('1')
   |? type_of(_param2)<>2
   || .ko('2')
   ||
      {? type_of(.FAZY)<7 || .get_pfaz() ?};
      {? type_of(.HOUR)<7
      ||
         ZL.cntx_psh();
         ZL.index('HIDDEN');
         ZL.prefix('N');
         {? ZL.first()
         ||
            {!
            |?
               HOUR1:=exec('get_rob_price','kalk_oper',.ME,ZL.ref(),0,'G');
               .scal_hour();
               obj_del(HOUR1);
               ZL.next()
            !}
         ?};
         ZL.cntx_pop()
      ?};
      _wynik:=0;
      {? _param1<>''
      || _faza:=.seekpfaz(_param1);
         {? _faza<>(-1)
         || _wynik+={? _param2='T' | _param2='' || .HOUR[_faza][2]+.HOUR[_faza][4] || 0 ?}+
                    {? _param2='N' | _param2='' || .HOUR[_faza][1]+.HOUR[_faza][3] || 0 ?}
         || _wynik+=0
         ?}
      || {! _i:=1..obj_len(.FAZY)
         |! _wynik+={? _param2='T' | _param2='' || .HOUR[_i][2]+.HOUR[_i][4] || 0 ?}+
                    {? _param2='N' | _param2='' || .HOUR[_i][1]+.HOUR[_i][3] || 0 ?}
         !}
      ?}
   ?};
   _wynik
");

::**********************************************************************************************************************

set_virt(_obj,'g',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: r() - godziny na zlecenie
::   WE: [_a] - faza produkcji
::       [_b] - calość (1=od początku zlecenia)
::       [_c] - 'T'=Tpz, 'N'=nie Tpz, ''=suma
::       [_d] - 'T'=koszty operacji naprawczych, 'N'=koszty operacji zwykłych, ''=suma
::----------------------------------------------------------------------------------------------------------------------
   _wynik:='Blad';
   _param1:={? _>=1 || {? _a=~~ || '' || _a ?} || '' ?};
   _param2:={? _>=2 || {? _b=~~ || 0 || _b ?} || 0 ?};
   _param3:={? _>=3 || {? _c=~~ || '' || _c ?} || '' ?};
   _param4:={? _>=4 || {? _d=~~ || '' || _d ?} || '' ?};
   {? type_of(_param1)<>2
   || .ko('1')
   |? type_of(_param2)<>1
   || .ko('2')
   |? type_of(_param3)<>2
   || .ko('3')
   |? type_of(_param4)<>2
   || .ko('4')
   ||
      ANZH.seek(.KALK);
      {? ANZH.ZLEC().RODZAJ<>'P' & ANZH.ZLEC().NRNZL=0
      || {? type_of(.FAZY)<7 || .get_pfaz() ?};
         {? type_of(.GODZ)<7
         ||
            ZL.cntx_psh();
            ZL.index('NRNZL');
            ZL.prefix(ANZH.ZLEC().UNRZL);
            {? ZL.first()
            ||
               {!
               |?
                  GODZ1:=exec('get_rob_price','kalk_oper',.ME,ZL.ref(),_param2,'G');
                  .scal_godz();
                  obj_del(GODZ1);
                  ZL.next()
               !}
            ?};
            ZL.cntx_pop()
         ?}
      ||
         {? type_of(.FAZY)<7 || .get_pfaz() ?};
         {? type_of(.GODZ)<7
         || .GODZ:=exec('get_rob_price','kalk_oper',.ME,ANZH.ZLEC,_param2,'G')
         ?}
      ?};
      _wynik:=0;
      {? _param1<>''
      || _faza:=.seekpfaz(_param1);
         {? _faza<>(-1)
         || _wynik+={? _param3='T' | _param3=''
                    || {? _param4='N' | _param4='' || .GODZ[_faza][2] || 0 ?}+
                       {? _param4='T' | _param4='' || .GODZ[_faza][4] || 0 ?}
                    || 0
                    ?}+
                    {? _param3='N' | _param3=''
                    || {? _param4='N' | _param4='' || .GODZ[_faza][1] || 0 ?}+
                       {? _param4='T' | _param4='' || .GODZ[_faza][3] || 0 ?}
                    || 0
                    ?}
         ?}
      || {! _i:=1..obj_len(.FAZY)
         |! _wynik+={? _param3='T' | _param3=''
                    || {? _param4='N' | _param4='' || .GODZ[_i][2] || 0 ?}+
                       {? _param4='T' | _param4='' || .GODZ[_i][4] || 0 ?}
                    || 0
                    ?}+
                    {? _param3='N' | _param3=''
                    || {? _param4='N' | _param4='' || .GODZ[_i][1] || 0 ?}+
                       {? _param4='T' | _param4='' || .GODZ[_i][3] || 0 ?}
                    || 0
                    ?}
         !}
      ?}
   ?};
   _wynik
");

:: u() - usługi dla analiz zleceń **************************************************************************************
set_virt(_obj,'u',"
   _wyn:=0;
   _bt1:=_bt2:=0;
   _p1:={? _>0 || {? _a=~~ || '' || _a ?} || '' ?};
   _p2:={? _>1 || {? _b=~~ || 0 || {? type_of(_b)<>1 || _bt1:=1; 0 || int(_b) ?} ?} || 0 ?};
   _p3:={? _>2 || {? _c=~~ || 0 || {? type_of(_c)<>1 || _bt2:=1; 0 || int(_c) ?} ?} || 0 ?};
   {? type_of(_p1)<>2
   || _wyn:=.ko('1')
   |? _bt1
   || _wyn:=.ko('2')
   |? _bt2
   || _wyn:=.ko('3')
   || ANZH.seek(.KALK);
      {? type_of(.USL)<7
      || {? type_of(.FAZY)<7 || .get_pfaz() ?};
         {? ANZH.ZLEC().RODZAJ<>'P' & ~ANZH.ZLEC().NRNZL
         || ZL.cntx_psh();
            ZL.index('NRNZL');
            ZL.prefix(ANZH.ZLEC().UNRZL);
            _size:=ZL.size();
            _pr:=obj_new(_size);
            _ucst:=obj_new(_size);
            _sm:=0;
            _it:=1;
            {? ZL.first()
            || {!
               |? _pr[_it]:={? ZL.IL || {? _p3 || ZL.ILWYK || .made() ?}/ZL.IL || 0 ?};
                  _sm+=_pr[_it];
                  _tktl:=exec('FindAndGet','#table',TKTL,ZL.RTKTL,,\"ref()\",null());
                  {? _tktl<>null()
                  || exec('start_Otpar','tech_param',.,ZL.KTM,_tktl);
                     {? _p2
                     || USL1:=exec('get2_proc_price','kalk_oper',.ME,ZL.ref(),'U')
                     || USL1:=exec('get_proc_price','kalk_oper',.ME,_tktl,'U')
                     ?};
                     _ucst[_it]:=.uz_cost(_p1);
                     obj_del(USL1)
                  || _ktl:=exec('FindAndGet','#table',TKTL,ZL.RKTL,,\"ref()\",null());
                     exec('start_Otpar','tech_param',.,ZL.KTM,_ktl);
                     USL1:=exec('get_proc_price','kalk_oper',.ME,_ktl,'U');
                     _ucst[_it]:=.uz_cost(_p1);
                     obj_del(USL1)
                  ?};
                  _it+=1;
                  ZL.next()
               !}
            ?};
            ZL.cntx_pop()
         || _tktl:=exec('FindAndGet','#table',TKTL,ANZH.ZLEC().RTKTL,,\"ref()\",null());
            {? _tktl<>null()
            || {? _p2
               || .USL:=exec('get2_proc_price','kalk_oper',.ME,ANZH.ZLEC,'U')
               || .USL:=exec('get_proc_price','kalk_oper',.ME,_tktl,'U')
               ?}
            |? _tktl=null() & ANZH.ZLEC().TYP().TECH='N'
            || _ktl:=exec('FindAndGet','#table',TKTL,ANZH.ZLEC().RKTL,,\"ref()\",null());
               .USL:=exec('get_proc_price','kalk_oper',.ME,_ktl,'U')
            || return(0)
            ?}
         ?}
      ?};
      {| ANZH
      |! {? ZLEC().RODZAJ='Z' & ~ZLEC().NRNZL & _size
         || {? _sm
            || {! _it:=1.._size |! _wyn+=((_pr[_it]*_ucst[_it])/_sm) !}
            ?}
         || _wyn:=.usl(_p1)*{? ZLEC().IL || {? _p3 || ZLEC().ILWYK || .made() ?}/ZLEC().IL ?}
         ?}
      |}
   ?};
   _wyn
");

set_virt(_obj,'usl',"
   _wynik:=0;
   _param1:=_a;
   {? type_of(.USL)<7
   || _wynik:=0
   |? _param1<>''
   || _faza:=.seekpfaz(_param1);
      {? _faza<>(-1) || _wynik:=.USL[_faza][1] || _wynik:=0 ?}
   || {! i:=1..obj_len(.FAZY) |! _wynik+=.USL[i][1] !}
   ?};
   _wynik
");

set_virt(_obj,'w',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: w() - koszt pracy stanowisk
::   WE: [_a] - faza produkcji
::       [_b] - całość (1=od początku zlecenia)
::       [_c] - 'T'=koszty operacji naprawczych, 'N'=koszty operacji zwykłych, ''=suma
::----------------------------------------------------------------------------------------------------------------------
   _wynik:='Blad';
   _param1:={? _>=1 || {? _a=~~ || '' || _a ?} || '' ?};
   _param2:={? _>=2 || {? _b=~~ || 0 || _b ?} || 0 ?};
::   _param3:={? _>=3 || {? _c=~~ || '' || _c ?} || '' ?};
   _param3:='';
   _param4:={? _>=3 || {? _c=~~ || '' || _c ?} || '' ?};
   {? type_of(_param1)<>2
   || .ko('1')
   |? type_of(_param2)<>1
   || .ko('2')
   |? type_of(_param3)<>2
   || .ko('3')
   |? type_of(_param4)<>2
   || .ko('4')
   ||
      ANZH.seek(.KALK);
      {? ANZH.ZLEC().RODZAJ<>'P' & ANZH.ZLEC().NRNZL=0
      || {? type_of(.FAZY)<7 || .get_pfaz() ?};
         {? type_of(.WRK)<7
         ||
            ZL.cntx_psh();
            ZL.index('NRNZL');
            ZL.prefix(ANZH.ZLEC().UNRZL);
            {? ZL.first()
            || {!
               |?
                  WRK1:=exec('get_rob_price','kalk_oper',.ME,ZL.ref,_param2,'W');
                  .scal_wrk();
                  obj_del(WRK1);
                  ZL.next()
               !}
            ?};
            ZL.cntx_pop()
         ?}
      ||
         {? type_of(.FAZY)<7 || .get_pfaz() ?};
         {? type_of(.WRK)<7 || .WRK:=exec('get_rob_price','kalk_oper',.ME,ANZH.ZLEC,_param2,'W') ?}
      ?};
      _wynik:=0;
      {? _param1<>''
      || _faza:=.seekpfaz(_param1);
         {? _faza<>(-1)
         || _wynik+={? _param3='T' | _param3=''
                    || {? _param4='N' | _param4='' || .WRK[_faza][2] || 0 ?}+
                       {? _param4='T' | _param4='' || .WRK[_faza][4] || 0 ?}
                    || 0
                    ?}+
                    {? _param3='N' | _param3=''
                    || {? _param4='N' | _param4='' || .WRK[_faza][1] || 0 ?}+
                       {? _param4='T' | _param4='' || .WRK[_faza][3] || 0 ?}
                    || 0
                    ?}
         ?}
      || {! _i:=1..obj_len(.FAZY)
         |! _wynik+={? _param3='T' | _param3=''
                    || {? _param4='N' | _param4='' || .WRK[_i][2] || 0 ?}+
                       {? _param4='T' | _param4='' || .WRK[_i][4] || 0 ?}
                    || 0
                    ?}+
                    {? _param3='N' | _param3=''
                    || {? _param4='N' | _param4='' || .WRK[_i][1] || 0 ?}+
                       {? _param4='T' | _param4='' || .WRK[_i][3] || 0 ?}
                    || 0
                    ?}
         !}
      ?}
   ?};
   _wynik
");

:: m() - materialy *****************************************************************************************************
set_virt(_obj,'m',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: m() - koszt materialow
::   WE: [_a] - faza produkcji
::       [_b] - Materiał/Półfabrykat
::       [_c] - Limit/nielimit
::       [_d] - całość
::       [_e] - Surowiec/Odpad
::       [_f] - 'T'=koszty dla operacji naprawczych, 'N'=koszty dla operacji zwykłych, ''=suma
::----------------------------------------------------------------------------------------------------------------------
   ANZH.seek(.KALK);
   _wynik:='Blad';
   _param1:={? _>=1 || {? _a=~~ || '' || _a ?} || '' ?};
   _param2:={? _>=2 || {? _b=~~ || '' || _b ?} || '' ?};
   _param3:={? _>=3 || {? _c=~~ || '' || _c ?} || '' ?};
   _param4:={? _>=4 || {? _d=~~ || 0 || _d ?} || 0 ?};
   _param5:={? _>=5 || {? _e=~~ || '' || _e ?} || '' ?};
   _param6:={? _>=6 || {? _f=~~ || '' || _f ?} || '' ?};
   {? type_of(_param1)<>2 ||.ko('1')
   |? type_of(_param2)<>2 ||.ko('2')
   |? type_of(_param3)<>2 ||.ko('3')
   |? type_of(_param4)<>1 ||.ko('4')
   |? type_of(_param5)<>2 ||.ko('5')
   |? type_of(_param6)<>2 ||.ko('6')
   || _param1:=~-_param1;
      _param2:=~-_param2;
      _param3:=~-_param3;
      _param5:=~-_param5;
      _param6:=~-_param6;
      .mat(_param4);
      _d_i:=_d_j:=_d_k:=_d_l:=_d_m:=1;
      _u_i:=3; _u_j:=_u_l:=2; _u_m:=2; _u_k:=(obj_len(.FAZY));
      {? _param2='M' || _d_i:=_u_i:=1
      |? _param2='P' || _d_i:=_u_i:=2
      |? _param2='W' || _d_i:=3
      ?};
      {? _param3='N' || _d_j:=2
      |? _param3='T' || _u_j:=1
      ?};
      {? _param1<>''
      || _faza:=.seekpfaz(_param1);
         {? _faza<>(-1)
         || _d_k:=_u_k:=_faza
         || _d_k:=_u_k:=0
         ?}
      ?};
      {? _param5='O' || _d_l:=2
      |? _param5='S' || _u_l:=1
      ?};
      {? _param6='T' || _d_m:=2
      |? _param6='N' || _u_m:=1
      ?};
      _wynik:=.mat_cost(_d_i,_u_i,_d_j,_u_j,_d_k,_u_k,_d_l,_u_l,_d_m,_u_m)
   ?};
   .run1m:=0;
   _wynik
");

::**********************************************************************************************************************

set_virt(_obj,'mat',"
   {? ANZH.ZLEC().RODZAJ<>'P' & ANZH.ZLEC().NRNZL=0 & ANZH.ZLEC().GENLIM='P'
   || {? type_of(.FAZY)<7 || .get_pfaz() ?};
      {? type_of(.MAT)<7
      || ZL.cntx_psh();
         ZL.index('NRNZL');
         ZL.prefix(ANZH.ZLEC().UNRZL);
         {? ZL.first()
         || {!
            |? MAT1:=exec('get_mat_price','kalk_mater',.ME,ZL.ref,_a);
               .scal_mat(MAT1);
               obj_del(MAT1);
               ZL.next()
            !}
         ?};
         ZL.cntx_pop()
      ?}
   ||
     {? type_of(.FAZY)<7 || .get_pfaz() ?};
     {? type_of(.MAT)<7
     || .MAT:=exec('get_mat_price','kalk_mater',.ME,ANZH.ZLEC,_a)
     ?}
   ?}
");

set_virt(_obj,'n',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: n() - zużycie narzędzi dla analizy zlecenia
::   WE: [_a] - symbol fazy lub ''
::       [_b] - N,P lub U lub ''
::       [_c] - całość
::----------------------------------------------------------------------------------------------------------------------
   _wyn:='Blad';
   _p1:={? _>0 & type_of(_a)=2 || _a || '' ?};

   _p2:={? _>1
         & type_of(_b)=2
         & 'NPU'*(1+_b)
        || (1+_b)
        || ''
        ?};

   _p3:={? _>2 & type_of(_c)=1 || _c || 0  ?};

   {? type_of(.FAZY)<7 || .get_pfaz() ?};
   _d_i:=_d_j:=1;
   _u_i:=3;
   _u_j:=obj_len(.FAZY);
   {? _p2<>'' || _d_i:=_u_i:='NPU'*_p2 ?};

   {? _p1<>''
   || _fz:=.seekpfaz(_p1);
      _d_j:=_u_j:={? _fz<>(-1) || _fz || 0 ?}
   ?};
   ANZH.seek(.KALK);
   {? ANZH.ZLEC().RODZAJ<>'P' & ~ZL.NRNZL
   || ZL.cntx_psh();
      ZL.index('NRNZL');
      ZL.prefix(ANZH.ZLEC().UNRZL);
      ZL.first();
      _sz:=ZL.size();
      {? _sz>0
      || _mpr:=obj_new(_sz);
         _tcst:=obj_new(_sz);
         _stab:=obj_new(1);
         _stab[1]:=0;
:  UWAGA! metoda zmienia przekazane zmienne (3 pierwsze)
         .tzcost(_mpr,_tcst,_stab,_p3,_d_i,_u_i,_d_j,_u_j);
         _iter:=1;
         _wyn:=0;
         {? _stab[1]
         || {! .._sz
            |! _wyn+=(_mpr[_iter]*_tcst[_iter])/_stab[1];
               _iter+=1
            !}
         ?}
      || _wyn:=0
      ?};
      ZL.cntx_pop()
   || {? type_of(.TOOL)<7
      || {? ANZH.ZLEC().RTKTL<>'' || .TOOL:=exec('get_utils_price','kalk_tool',.ME,ANZH.ZLEC().RTKTL)
         |? ANZH.ZLEC().RKTL<>'' || .TOOL:=exec('get_utils_price','kalk_tool',.ME,ANZH.ZLEC().RKTL)
         || return(0)
         ?}
      ?};
      _wyn:=.tool_cost(_d_i,_u_i,_d_j,_u_j)*{? ZL.IL || {? _p3 || ANZH.ZLEC().ILWYK || .made() ?} / ZL.IL ?}
   ?};
   _wyn
");

::**********************************************************************************************************************

set_virt(_obj,'made',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Wylicza ilość wykonaną na zlecenie
::   WE: '+' - ilosc przyjęta z produkcji
::       '-' - ilosc zwrócona na produkcję
::----------------------------------------------------------------------------------------------------------------------
   _wyn:=0;
   ZL.cntx_psh();
   _zl:=VAR.A_ZLEC;
   {? ANZH.ZLEC().RODZAJ='Z' & ANZH.ZLEC().NRNZL=0
   || ZL.index('NRNZL');
      ZL.prefix(VAR.A_ZLEC().UNRZL);
      {? ZL.first()
      || VAR.A_ZLEC:=ZL.ref()
      ?}
   |? ANZH.ZLEC().RODZAJ<>'P' & ANZH.ZLEC().NRNZL=0
   || VAR.A_ZLEC:=null()
   ?};
   _a_par:=
      {? _>0
      || {? type_of(_a)=2
         || {? ~(_a='' | _a='+' | _a='-')
            || FUN.error('Niepoprawna wartość parametru funkcji made().\n\n'
                        +'Dozwolone wartości: \'\'+\'\', \'\'-\'\', \'\'\'\''
                        )
            ?};
            _a
         || .ko('1')
         ?}
      || '+'
      ?};
   _b_par:={? _>1 || {? type_of(_b)=1 || _b || .ko('2') ?} || 0 ?};
   {? VAR.A_ZLEC<>null()
   || {? VAR.A_ZLEC().KTM().RODZ='U' & (_a_par='+' | _a_par='')
      || _wyn+=ZL.ILDOK
      || _wyn+=exec('madezl','kalk_mater',_a_par,_b_par,VAR.A_ZLEC().SYM,ANZH.OKR)
      ?}
   || _wyn:=0
   ?};
   VAR.A_ZLEC:=_zl;
   ZL.cntx_pop();
   _wyn
");
~~


\set_fun4_zkal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.60]
:: OPIS: ustala funkcje X dla kalkulacji wstępnej zlecenia
::   WE: _a - obiekt kalkulacyjny
::  OLD: \set_fun4_zkal/prodobi.fml
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;

set_virt(_obj,'r',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: r() - robocizna
::   WE: [_a] - faza produkcji
::       [_b] - 0=technologia, 1=przewodnik
::       [_c] - 'T'=Tpz, 'N'=nie Tpz, ''=suma
::       [_d] - 'T'=koszty operacji naprawczych, 'N'=koszty operacji zwykłych, ''=suma
::       [_e] - ilość kalkulowana, dla jakiej skalować wynik. Gdy nie podana to przeliczana wg ilości na zleceniu
::----------------------------------------------------------------------------------------------------------------------
   _wynik:='Blad';
   _param1:={? _>=1 || {? _a=~~ || '' || _a ?} || '' ?};
   _param2:={? _>=2 || {? _b=~~ || 0 || _b ?} || 0 ?};
   _param3:={? _>=3 || {? _c=~~ || '' || _c ?} || '' ?};
   _param4:={? _>=4 || {? _d=~~ || '' || _d ?} || '' ?};
   _param5:={? _>=5 || {? _e=~~ || 0 || _e ?} || 0 ?};
   {? type_of(_param1)<>2 || .ko('1'); return(0) ?};
   {? type_of(_param2)<>1 || .ko('2'); return(0) ?};
   {? type_of(_param3)<>2 || .ko('3'); return(0) ?};
   {? type_of(_param4)<>2 || .ko('4'); return(0) ?};
   {? type_of(_param5)<>1 || .ko('5'); return(0) ?};
   ANZH.seek(.KALK);
   {? ANZH.ZLEC().RODZAJ<>'P' & ANZH.ZLEC().NRNZL=0
   || {? type_of(.FAZY)<7 || .get_pfaz() ?};
      {? type_of(.ROB)<7
      || _coefinal:={? ANZH.ZLEC().IL=0 | _param5<=0 || 1 || _param5/ANZH.ZLEC().IL ?};
         ZL.cntx_psh();
         ZL.index('NRNZL');
         ZL.prefix(ANZH.ZLEC().UNRZL);
         {? ZL.first()
         || {!
            |?
               {? _param2=1
               || _ilx:=exec('zaokr','jm',_coefinal*ZL.IL,ZL.KTM);
                  _coef:={? ZL.IL=0 || 0 || _ilx/ZL.IL ?};
                  ROB1:=exec('get2_proc_price','kalk_oper',.ME,ZL.ref(),'R',_coef,_ilx);
                  .scal_rob();
                  obj_del(ROB1)
               || {? ZL.RTKTL<>''
                  || exec('start_Otpar','tech_param',.,ZL.KTM,exec('FindAndGet','#table',TKTL,ZL.RTKTL,,\"ref()\",null()));
                     _xjm:=exec('FindAndGet','#table',TKTL,ZL.RTKTL,,\"XJM\",ZL.IL);
                     _ilx:=exec('zaokr','jm',_coefinal*ZL.IL,ZL.KTM);
                     _coef:={? _xjm=0 || 0 || _ilx/_xjm ?};
                     {? var_pres('__TOPER')>0
                     || ROB1:=exec('get1_proc_price','kalk_oper',.ME,ZL.RTKTL,'R')
                     || ROB1:=exec('get_proc_price','kalk_oper',.ME,ZL.RTKTL,'R',_coef,_ilx)
                     ?};
                     .scal_rob();
                     obj_del(ROB1)
                  |? ZL.RKTL<>'' & ZL.TYP().TECH='N'
                  || exec('start_Otpar','tech_param',.,ZL.KTM,exec('FindAndGet','#table',TKTL,ZL.RKTL,,\"ref()\",null()));
                     _xjm:=exec('FindAndGet','#table',TKTL,ZL.RKTL,,\"XJM\",ZL.IL);
                     _ilx:=exec('zaokr','jm',_coefinal*ZL.IL,ZL.KTM);
                     _coef:={? _xjm=0 || 0 || _ilx/_xjm ?};
                     {? var_pres('__TOPER')>0
                     || ROB1:=exec('get1_proc_price','kalk_oper',.ME,ZL.RKTL,'R')
                     || ROB1:=exec('get_proc_price','kalk_oper',.ME,ZL.RKTL,'R',_coef,_ilx)
                     ?};
                     .scal_rob();
                     obj_del(ROB1)
                  || .make_rob()
                  ?}
               ?};
               ZL.next()
            !}
         || .make_rob()
         ?};
         ZL.cntx_pop()
      ?}
   || {? type_of(.FAZY)<7 || .get_pfaz() ?};
      {? type_of(.ROB)<7
      ||
         {? _param2=1
         || _coef:={? ZL.IL=0 | _param5<=0 || 1 || _param5/ZL.IL ?};
            .ROB:=exec('get2_proc_price','kalk_oper',.ME,ANZH.ZLEC,'R',_coef,_param5)
         || {? ANZH.ZLEC().RTKTL<>''
            || _xjm:=exec('FindAndGet','#table',TKTL,ANZH.ZLEC().RTKTL,,\"XJM\",ZL.IL);
               _coef:={? _xjm=0 || 0 |? _param5<=0 || ZL.IL/_xjm || _param5/_xjm ?};
               {? var_pres('__TOPER')>0
               || .ROB:=exec('get1_proc_price','kalk_oper',.ME,ZL.RTKTL,'R')
               || .ROB:=exec('get_proc_price','kalk_oper',.ME,ANZH.ZLEC().RTKTL,'R',_coef,_param5)
               ?}
            |? ZL.RKTL<>'' & ZL.TYP().TECH='N'
            || _xjm:=exec('FindAndGet','#table',TKTL,ZL.RKTL,,\"XJM\",ZL.IL);
               _coef:={? _xjm=0 || 0 |? _param5<=0 || ZL.IL/_xjm || _param5/_xjm ?};
               {? var_pres('__TOPER')>0
               || .ROB:=exec('get1_proc_price','kalk_oper',.ME,ZL.RKTL,'R')
               || .ROB:=exec('get_proc_price','kalk_oper',.ME,ZL.RKTL,'R',_coef,_param5)
               ?}
            || .make_rob()
            ?}
         ?}
      ?}
   ?};
   _wynik:=0;
   {? _param1<>''
   || _faza:=.seekpfaz(_param1);
      {? _faza<>(-1)
      || _wynik+={? _param3='T' | _param3=''
                 || {? _param4='N' | _param4='' || .ROB[_faza][2] || 0 ?}+
                    {? _param4='T' | _param4='' || .ROB[_faza][4] || 0 ?}
                 || 0
                 ?}+
                 {? _param3='N' | _param3=''
                 || {? _param4='N' | _param4='' || .ROB[_faza][1] || 0 ?}+
                    {? _param4='T' | _param4='' || .ROB[_faza][3] || 0 ?}
                 || 0
                 ?}
      ?}
   || {! _i:=1..obj_len(.FAZY)
      |! _wynik+={? _param3='T' | _param3=''
                 || {? _param4='N' | _param4='' || .ROB[_i][2] || 0 ?}+
                    {? _param4='T' | _param4='' || .ROB[_i][4] || 0 ?}
                 || 0
                 ?}+
                 {? _param3='N' | _param3=''
                 || {? _param4='N' | _param4='' || .ROB[_i][1] || 0 ?}+
                    {? _param4='T' | _param4='' || .ROB[_i][3] || 0 ?}
                 || 0
                 ?}
      !}
   ?};
   _wynik
");

set_virt(_obj,'g',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: g() - godziny
::   WE: [_a] - faza produkcji
::       [_b] - 0=technologia, 1=przewodnik
::       [_c] - 'T'=Tpz, 'N'=nie Tpz, ''=suma
::       [_d] - 'T'=koszty operacji naprawczych, 'N'=koszty operacji zwykłych, ''=suma
::----------------------------------------------------------------------------------------------------------------------
   _wynik:='Blad';
   _param1:={? _>=1 || {? _a=~~ || '' || _a ?} || '' ?};
   _param2:={? _>=2 || {? _b=~~ || 0 || _b ?} || 0 ?};
   _param3:={? _>=3 || {? _c=~~ || '' || _c ?} || '' ?};
   _param4:={? _>=4 || {? _d=~~ || '' || _d ?} || '' ?};
   {? type_of(_param1)<>2 || .ko('1'); return(0) ?};
   {? type_of(_param2)<>1 || .ko('2'); return(0) ?};
   {? type_of(_param3)<>2 || .ko('3'); return(0) ?};
   {? type_of(_param4)<>2 || .ko('4'); return(0) ?};
   ANZH.seek(.KALK);
   {? ANZH.ZLEC().RODZAJ<>'P' & ANZH.ZLEC().NRNZL=0
   || {? type_of(.FAZY)<7 || .get_pfaz() ?};
      {? type_of(.GODZ)<7
      || ZL.cntx_psh();
         ZL.index('NRNZL');
         ZL.prefix(ANZH.ZLEC().UNRZL);
         {? ZL.first()
         || {!
            |?
               {? _param2=1
               || GODZ1:=exec('get2_proc_price','kalk_oper',.ME,ZL.ref(),'G');
                  .scal_godz();
                  obj_del(GODZ1)
               || {? ZL.RTKTL<>''
                  || exec('start_Otpar','tech_param',.,ZL.KTM,exec('FindAndGet','#table',TKTL,ZL.RTKTL,,\"ref()\",null()));
                     {? var_pres('__TOPER')>0
                     || GODZ1:=exec('get1_proc_price','kalk_oper',.ME,ZL.RTKTL,'G')
                     || GODZ1:=exec('get_proc_price','kalk_oper',.ME,ZL.RTKTL,'G')
                     ?};
                     .scal_godz();
                     obj_del(GODZ1)
                  |? ZL.RKTL<>'' & ZL.TYP().TECH='N'
                  || exec('start_Otpar','tech_param',.,ZL.KTM,exec('FindAndGet','#table',TKTL,ZL.RKTL,,\"ref()\",null()));
                     {? var_pres('__TOPER')>0
                     || GODZ1:=exec('get1_proc_price','kalk_oper',.ME,ZL.RKTL,'G')
                     || GODZ1:=exec('get_proc_price','kalk_oper',.ME,ZL.RKTL,'G')
                     ?};
                     .scal_godz();
                     obj_del(GODZ1)
                  || .make_godz()
                  ?}
               ?};
               ZL.next()
            !}
         || .make_godz()
         ?};
         ZL.cntx_pop()
      ?}
   || {? type_of(.FAZY)<7 || .get_pfaz() ?};
      {? type_of(.GODZ)<7
      || {? _param2=1
         || .GODZ:=exec('get2_proc_price','kalk_oper',.ME,ANZH.ZLEC,'G')
         || {? ANZH.ZLEC().RTKTL<>''
            || {? var_pres('__TOPER')>0
               || .GODZ:=exec('get1_proc_price','kalk_oper',.ME,ANZH.ZLEC().RTKTL,'G')
               || .GODZ:=exec('get_proc_price','kalk_oper',.ME,ANZH.ZLEC().RTKTL,'G')
               ?}
            |? ZL.RKTL<>'' & ZL.TYP().TECH='N'
            || {? var_pres('__TOPER')>0
               || .GODZ:=exec('get1_proc_price','kalk_oper',.ME,ZL.RKTL,'G')
               || .GODZ:=exec('get_proc_price','kalk_oper',.ME,ZL.RKTL,'G')
               ?}
            || .make_godz()
            ?}
         ?}
      ?}
   ?};
   _wynik:=0;
   {? _param1<>''
   || _faza:=.seekpfaz(_param1);
      {? _faza<>(-1)
      || _wynik+={? _param3='T' | _param3=''
                 || {? _param4='N' | _param4='' || .GODZ[_faza][2] || 0 ?}+
                    {? _param4='T' | _param4='' || .GODZ[_faza][4] || 0 ?}
                 || 0
                 ?}+
                 {? _param3='N' | _param3=''
                 || {? _param4='N' | _param4='' || .GODZ[_faza][1] || 0 ?}+
                    {? _param4='T' | _param4='' || .GODZ[_faza][3] || 0 ?}
                 || 0
                 ?}
      ?}
   || {! _i:=1..obj_len(.FAZY)
      |! _wynik+={? _param3='T' | _param3=''
                 || {? _param4='N' | _param4='' || .GODZ[_i][2] || 0 ?}+
                    {? _param4='T' | _param4='' || .GODZ[_i][4] || 0 ?}
                 || 0
                 ?}+
                 {? _param3='N' | _param3=''
                 || {? _param4='N' | _param4='' || .GODZ[_i][1] || 0 ?}+
                    {? _param4='T' | _param4='' || .GODZ[_i][3] || 0 ?}
                 || 0
                 ?}
      !}
   ?};
   _wynik
");

set_virt(_obj,'u',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: u() - uslugi
::   WE: [_a] - faza produkcji
::       [_b] - 0=technologia, 1=przewodnik
::       [_c] - ilość kalkulowana, dla jakiej skalować wynik. Gdy nie podana to przeliczana wg ilości na zleceniu
::----------------------------------------------------------------------------------------------------------------------
   _wynik:='Blad';
   _param1:={? _>=1 || {? _a=~~ || '' || _a ?} || '' ?};
   _param2:={? _>=2 || {? _b=~~ || 0 || _b ?} || 0 ?};
   _param3:={? _>=3 || {? _c=~~ || 0 || _c ?} || 0 ?};
   {? type_of(_param1)<>2 || .ko('1'); return(0) ?};
   {? type_of(_param2)<>1 || .ko('2'); return(0) ?};
   {? type_of(_param3)<>1 || .ko('3'); return(0) ?};
   ANZH.seek(.KALK);
   {? ANZH.ZLEC().RODZAJ<>'P' & ANZH.ZLEC().NRNZL=0
   || {? type_of(.FAZY)<7 || .get_pfaz() ?};
      {? type_of(.USL)<7
      || _coefinal:={? ANZH.ZLEC().IL=0 | _param3<=0 || 1 || _param3/ANZH.ZLEC().IL ?};
         ZL.cntx_psh();
         ZL.index('NRNZL');
         ZL.prefix(ANZH.ZLEC().UNRZL);
         {? ZL.first()
         || {!
            |?
               {? _param2=1
               || _ilx:=exec('zaokr','jm',_coefinal*ZL.IL,ZL.KTM);
                  _coef:={? ZL.IL=0 || 0 || _ilx/ZL.IL ?};
                  USL1:=exec('get2_proc_price','kalk_oper',.ME,ZL.ref(),'U',_coef);
                  .scal_usl();
                  obj_del(USL1)
               || {? ZL.RTKTL<>''
                  || _xjm:=exec('FindAndGet','#table',TKTL,ZL.RTKTL,,\"XJM\",ZL.IL);
                     _ilx:=exec('zaokr','jm',_coefinal*ZL.IL,ZL.KTM);
                     _coef:={? _xjm=0 || 0 || _ilx/_xjm ?};
                     exec('start_Otpar','tech_param',.,ZL.KTM,exec('FindAndGet','#table',TKTL,ZL.RTKTL,,\"ref()\",null()));
                     USL1:=exec('get_proc_price','kalk_oper',.ME,ZL.RTKTL,'U',_coef);
                     .scal_usl();
                     obj_del(USL1)
                  |? ZL.RKTL<>'' & ZL.TYP().TECH='N'
                  || _xjm:=exec('FindAndGet','#table',TKTL,ZL.RKTL,,\"XJM\",ZL.IL);
                     _ilx:=exec('zaokr','jm',_coefinal*ZL.IL,ZL.KTM);
                     _coef:={? _xjm=0 || 0 || _ilx/_xjm ?};
                     exec('start_Otpar','tech_param',.,ZL.KTM,exec('FindAndGet','#table',TKTL,ZL.RKTL,,\"ref()\",null()));
                     USL1:=exec('get_proc_price','kalk_oper',.ME,ZL.RKTL,'U',_coef);
                     .scal_usl();
                     obj_del(USL1)
                  || .make_usl()
                  ?}
               ?};
               ZL.next()
            !}
            || .make_usl()
         ?};
         ZL.cntx_pop()
      ?}
   || {? type_of(.FAZY)<7 || .get_pfaz() ?};
      {? type_of(.USL)<7
      || {? _param2=1
         || _coef:={? ZL.IL=0 | _param3<=0 || 1 || _param3/ZL.IL ?};
            .USL:=exec('get2_proc_price','kalk_oper',.ME,ANZH.ZLEC,'U',_coef)
         || {? ANZH.ZLEC().RTKTL<>''
            || _xjm:=exec('FindAndGet','#table',TKTL,ANZH.ZLEC().RTKTL,,\"XJM\",ANZH.ZLEC().IL);
               _coef:={? _xjm=0 || 0 |? _param3<=0 || ZL.IL/_xjm || _param3/_xjm ?};
               .USL:=exec('get_proc_price','kalk_oper',.ME,ANZH.ZLEC().RTKTL,'U',_coef)
            |? ZL.RKTL<>'' & ZL.TYP().TECH='N'
            || _xjm:=exec('FindAndGet','#table',TKTL,ZL.RKTL,,\"XJM\",ZL.IL);
               _coef:={? _xjm=0 || 0 |? _param3<=0 || ZL.IL/_xjm || _param3/_xjm ?};
               .USL:=exec('get_proc_price','kalk_oper',.ME,ANZH.ZLEC().RKTL,'U',_coef)
            || .make_usl()
            ?}
         ?}
      ?}
   ?};
   _wynik:=0;
   {? _param1<>''
   || _faza:=.seekpfaz(_param1);
      {? _faza<>(-1) || _wynik:=.USL[_faza][1] || _wynik:=0 ?}
   || {! _i:=1..obj_len(.FAZY) |! _wynik+=.USL[_i][1] !}
   ?};
   _wynik
");

set_virt(_obj,'w',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: w() - koszt stanowisk
::   WE: [_a] - faza produkcji
::       [_b] - 0=technologia, 1=przewodnik
::       [_c] - 'T'=koszty operacji naprawczych, 'N'=koszty operacji zwykłych, ''=suma
::       [_d] - ilość kalkulowana, dla jakiej skalować wynik. Gdy nie podana to przeliczana wg ilości na zleceniu
::----------------------------------------------------------------------------------------------------------------------
   _wynik:='Blad';
   _param1:={? _>=1 || {? _a=~~ || '' || _a ?} || '' ?};
   _param2:={? _>=2 || {? _b=~~ || 0 || _b ?} || 0 ?};
::   _param3:={? _>=3 || {? _c=~~ || '' || _c ?} || '' ?};
   _param3:='';
   _param4:={? _>=3 || {? _c=~~ || '' || _c ?} || '' ?};
   _param5:={? _>=4 || {? _d=~~ || 0 || _d ?} || 0 ?};
   {? type_of(_param1)<>2 || .ko('1'); return(0) ?};
   {? type_of(_param2)<>1 || .ko('2'); return(0) ?};
   {? type_of(_param3)<>2 || .ko('3'); return(0) ?};
   {? type_of(_param4)<>2 || .ko('4'); return(0) ?};
   {? type_of(_param5)<>1 || .ko('5'); return(0) ?};
   ANZH.seek(.KALK);
   {? ANZH.ZLEC().RODZAJ<>'P' & ANZH.ZLEC().NRNZL=0
   || {? type_of(.FAZY)<7 || .get_pfaz() ?};
      {? type_of(.WRK)<7
      || _coefinal:={? ANZH.ZLEC().IL=0 | _param5<=0 || 1 || _param5/ANZH.ZLEC().IL ?};
         ZL.cntx_psh();
         ZL.index('NRNZL');
         ZL.prefix(ANZH.ZLEC().UNRZL);
         {? ZL.first()
         || {!
            |?
               {? _param2=1
               || _ilx:=exec('zaokr','jm',_coefinal*ZL.IL,ZL.KTM);
                  _coef:={? ZL.IL=0 || 0 || _ilx/ZL.IL ?};
                  WRK1:=exec('get2_proc_price','kalk_oper',.ME,ZL.ref(),'W',_coef);
                  .scal_wrk();
                  obj_del(WRK1)
               || {? ZL.RTKTL<>''
                  || _xjm:=exec('FindAndGet','#table',TKTL,ZL.RTKTL,,\"XJM\",ZL.IL);
                     _ilx:=exec('zaokr','jm',_coefinal*ZL.IL,ZL.KTM);
                     _coef:={? _xjm=0 || 0 || _ilx/_xjm ?};
                     exec('start_Otpar','tech_param',.,ZL.KTM,exec('FindAndGet','#table',TKTL,ZL.RTKTL,,\"ref()\",null()));
                     {? var_pres('__TOPER')>0
                     || WRK1:=exec('get1_proc_price','kalk_oper',.ME,ZL.RTKTL,'W')
                     || WRK1:=exec('get_proc_price','kalk_oper',.ME,ZL.RTKTL,'W',_coef)
                     ?};
                     .scal_wrk();
                      obj_del(WRK1)
                  |? ZL.RKTL<>'' & ZL.TYP().TECH='N'
                  || _xjm:=exec('FindAndGet','#table',TKTL,ZL.RKTL,,\"XJM\",ZL.IL);
                     _ilx:=exec('zaokr','jm',_coefinal*ZL.IL,ZL.KTM);
                     _coef:={? _xjm=0 || 0 || _ilx/_xjm ?};
                     exec('start_Otpar','tech_param',.,ZL.KTM,exec('FindAndGet','#table',TKTL,ZL.RKTL,,\"ref()\",null()));
                     {? var_pres('__TOPER')>0
                     || WRK1:=exec('get1_proc_price','kalk_oper',.ME,ZL.RKTL,'W')
                     || WRK1:=exec('get_proc_price','kalk_oper',.ME,ZL.RKTL,'W',_coef)
                     ?};
                     .scal_wrk();
                     obj_del(WRK1)
                  || .make_wrk()
                  ?}
               ?};
               ZL.next()
            !}
         || .make_wrk()
         ?};
         ZL.cntx_pop()
      ?}
   || {? type_of(.FAZY)<7 || .get_pfaz() ?};
      {? type_of(.WRK)<7
      || {? _param2=1
         || _coef:={? ZL.IL=0 | _param5<=0 || 1 || _param5/ZL.IL ?};
            .WRK:=exec('get2_proc_price','kalk_oper',.ME,ANZH.ZLEC,'W',_coef)
         || {? ANZH.ZLEC().RTKTL<>''
            || _xjm:=exec('FindAndGet','#table',TKTL,ANZH.ZLEC().RTKTL,,\"XJM\",ZL.IL);
               _coef:={? _xjm=0 || 0 |? _param5<=0 || ZL.IL/_xjm || _param5/_xjm ?};
               {? var_pres('__TOPER')>0
               || .WRK:=exec('get1_proc_price','kalk_oper',.ME,ANZH.ZLEC().RTKTL,'W')
               || .WRK:=exec('get_proc_price','kalk_oper',.ME,ANZH.ZLEC().RTKTL,'W',_coef)
               ?}
            |? ZL.RKTL<>'' & ZL.TYP().TECH='N'
            || _xjm:=exec('FindAndGet','#table',TKTL,ZL.RKTL,,\"XJM\",ZL.IL);
               _coef:={? _xjm=0 || 0 |? _param5<=0 || ZL.IL/_xjm || _param5/_xjm ?};
               {? var_pres('__TOPER')>0
               || .WRK:=exec('get1_proc_price','kalk_oper',.ME,ANZH.ZLEC().RKTL,'W')
               || .WRK:=exec('get_proc_price','kalk_oper',.ME,ANZH.ZLEC().RKTL,'W',_coef)
               ?}
            || .make_wrk()
            ?}
         ?}
      ?}
   ?};
   _wynik:=0;
   {? _param1<>''
   || _faza:=.seekpfaz(_param1);
      {? _faza<>(-1)
      || _wynik+={? _param3='T' | _param3=''
                 || {? _param4='N' | _param4='' || .WRK[_faza][2] || 0 ?}+
                    {? _param4='T' | _param4='' || .WRK[_faza][4] || 0 ?}
                 || 0
                 ?}+
                 {? _param3='N' | _param3=''
                 || {? _param4='N' | _param4='' || .WRK[_faza][1] || 0 ?}+
                    {? _param4='T' | _param4='' || .WRK[_faza][3] || 0 ?}
                 || 0
                 ?}
      ?}
   || {! _i:=1..obj_len(.FAZY)
      |! _wynik+={? _param3='T' | _param3=''
                 || {? _param4='N' | _param4='' || .WRK[_i][2] || 0 ?}+
                    {? _param4='T' | _param4='' || .WRK[_i][4] || 0 ?}
                 || 0
                 ?}+
                 {? _param3='N' | _param3=''
                 || {? _param4='N' | _param4='' || .WRK[_i][1] || 0 ?}+
                    {? _param4='T' | _param4='' || .WRK[_i][3] || 0 ?}
                 || 0
                 ?}
      !}
   ?};
   _wynik
");

set_virt(_obj,'m',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: m() - koszt materiałów dla kalkulacji zlecenia
::   WE: _a [faza]
::       _b [mat_pol]
::       _c [limit_nielimit]
::       _d [kolejnosc_pobierania]
::       _e [pobieranie_ceny]
::       _f [mies_wstecz]
::       _g [cena_w_ptc]
::       _h [techn_lim]
::       _i [surowiec_odpad])
::       _j [surowce operacji naprawczych]
::       [_k] - ilość kalkulowana, dla jakiej skalować wynik. Gdy nie podana to przeliczana wg ilości na zleceniu.
::              Parametr ma zastowanie tylko, gdy _b=0
::----------------------------------------------------------------------------------------------------------------------
   _wyn:='Blad';
   _p1:={? _>=1 || {? _a=~~ || '' || _a ?} || '' ?};
   _p2:={? _>=2 || {? _b=~~ || '' || _b ?} || '' ?};
   _p3:={? _>=3 || {? _c=~~ || '' || _c ?} || '' ?};
   _p4:={? _>=4
        || {? _d=~~
           || 0
           || {? type_of(_d)=2
              || {? _d=''
                 || 0
                 || ~(-(_d))
                 ?}
              || _d
              ?}
           ?}
        || 0
        ?};
   _p5:={? _>=5 || {? _e=~~ || 0 || _e ?} || 0 ?};
   _p6:={? _>=6 || {? _f=~~ || 0 || _f ?} || 0 ?};
   _p7:={? _>=7 || {? _g=~~ || 0 || _g ?} || 0 ?};
   _p8:={? _>=8 || {? _h=~~ || 0 || _h ?} || 0 ?};
   _p9:={? _>=9 || {? _i=~~ || '' || _i ?} || '' ?};
   _p10:={? _>=10 || {? _j=~~ || '' || _j ?} || '' ?};
   _p11:={? _>=11 || {? _k=~~ || 0 || _k ?} || 0 ?};
   {? type_of(_p1)<>2  || .ko('1')
   |? type_of(_p2)<>2  || .ko('2')
   |? type_of(_p3)<>2  || .ko('3')
   |? type_of(_p4)<>1
    &  type_of(_p4)<>2 || .ko('4')
   |? type_of(_p4)=2
    & exec('instring','#string','STHDL',_p4)=0 || .ko('4 - niewłaściwy znak ')
   |? type_of(_p5)<>1  || .ko('5')
   |? type_of(_p6)<>1  || .ko('6')
   |? type_of(_p7)<>1  || .ko('7')
   |? type_of(_p8)<>1  || .ko('8')
   |? type_of(_p9)<>2  || .ko('9')
   |? type_of(_p10)<>2 || .ko('10')
   |? type_of(_p11)<>1 || .ko('11')
   || ANZH.seek(.KALK);
      .mat(_p1,_p2,_p3,_p4,_p5,_p6,_p7,_p8,_p11);
      _di:=_dj:=_dk:=_dl:=_dm:=1;
      _ui:=3; _uj:=_ul:=_um:=2;
      _uk:=(obj_len(.FAZY));
      {? _p2='M' | _p2='m' || _di:=_ui:=1
      |? _p2='P' | _p2='p' || _di:=_ui:=2
      |? _p2='W' | _p2='w' || _di:=3
      ?};
      {? _p3='N' | _p3='n' || _dj:=2
      |? _p3='T' | _p3='t' || _uj:=1
      ?};
      {? _p1<>''
      || _faza:=.seekpfaz(_p1);
         {? _faza<>(-1)
         || _dk:=_uk:=_faza
         || _dk:=_uk:=0
         ?}
      ?};
      {? _p9='O' | _p9='o' || _dl:=2
      |? _p9='S' | _p9='s' || _ul:=1
      ?};
      {? _p10='T' || _dm:=2
      |? _p10='N' || _um:=1
      ?};
      _wyn:=.mat_cost(_di,_ui,_dj,_uj,_dk,_uk,_dl,_ul,_dm,_um)
   ?};
   .run1m:=0;
   _wyn
");

::**********************************************************************************************************************

set_virt(_obj,'mat',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: funkcja pomocnicza dla m()
::   WE: _a [faza]
::       _b [mat_pol]
::       _c [limit_nielimit]
::       _d [kolejnosc_pobierania]
::       _e [pobieranie_ceny]
::       _f [mies_wstecz]
::       _g [cena_w_ptc]
::       _h [techn_lim]
::       _i - ilość kalkulowana (xjm), do jakiej skalować wynik. Gdy równa zeru to skalowanie wg ilości na zleceniu
::----------------------------------------------------------------------------------------------------------------------
   _xjm:={? var_pres('_i')=type_of(0) || _i || 0 ?};
   {? ANZH.ZLEC().RODZAJ<>'P' & ANZH.ZLEC().NRNZL=0
   || {? type_of(.FAZY)<7 || .get_pfaz() ?};
      {? ~(type_of(.MAT)<7)
      || {? .STR<>(_b+{? type_of(_d)=2 || _d || $_d ?}+$_e+$_f+$_g+$_h)
         || obj_del(.MAT)
         ?}
      ?};
      {? type_of(.MAT)<7
      || .STR:=_b+{? type_of(_d)=2 || _d || $_d ?}+$_e+$_f+$_g+$_h;
          _polp:=(_b='P' | _b='p');
         _mat:=ANZH.ZLEC().KTM;
         _rodzaj:=ANZH.ZLEC().RODZAJ;
         _coefinal:={? _xjm<=0 | ANZH.ZLEC().IL=0 || 1 || _xjm/ANZH.ZLEC().IL ?};
         ZL.cntx_psh();
         ZL.index('NRNZL');
         ZL.prefix(ANZH.ZLEC().UNRZL);
         {? ZL.first()
         || {!
            |? {? _polp=1 & _mat=ZL.KTM & _rodzaj='Z' | _rodzaj<>'Z' | ~_polp
               || _var_z_zlec:=VAR.A_ZLEC;
                  VAR.A_ZLEC:=ZL.ref();
                  {? ZL.RTKTL<>''
                  || exec('start_Otpar','tech_param',.,ZL.KTM,exec('FindAndGet','#table',TKTL,ZL.RTKTL,,\"ref()\",null()));
                     _ilx:=exec('zaokr','jm',_coefinal*ZL.IL,ZL.KTM);
                     MAT1:=exec('get1_src_price','kalk_mater',.ME,ZL.RTKTL,_d,_b,_a,_f,_e,_g,_h,~_polp,_ilx);
                     .scal_mat(MAT1);
                     obj_del(MAT1)
                  |? ZL.RTKTL='' & ZL.TYP().TECH='N'
                  || exec('start_Otpar','tech_param',.,ZL.KTM,exec('FindAndGet','#table',TKTL,ZL.RKTL,,\"ref()\",null()));
                     _ilx:=exec('zaokr','jm',_coefinal*ZL.IL,ZL.KTM);
                     MAT1:=exec('get1_src_price','kalk_mater',.ME,ZL.RKTL,_d,_b,_a,_f,_e,_g,_h,~_polp,_ilx);
                     .scal_mat(MAT1);
                     obj_del(MAT1)
                  || .make_mat()
                  ?};
                  VAR.A_ZLEC:=_var_z_zlec
               ?};
               ZL.next()
            !}
         ?};
         ZL.cntx_pop()
      ?}
   || {? type_of(.FAZY)<7 || .get_pfaz() ?};
      {? ~(type_of(.MAT)<7)
      || {? .STR<>(_b+{? type_of(_d)=2 || _d || $_d ?}+$_e+$_f+$_g+$_h)
         || obj_del(.MAT)
         ?}
      ?};
      {? type_of(.MAT)<7
      || .STR:=_b+{? type_of(_d)=2 || _d || $_d ?}+$_e+$_f+$_g+$_h;
         _var_z_zlec:=VAR.A_ZLEC;
         VAR.A_ZLEC:=ANZH.ZLEC;
         _polp:=(_b='P' | _b='p');
         {? ANZH.ZLEC().RTKTL<>''
         || .MAT:=exec('get1_src_price','kalk_mater',.ME,ANZH.ZLEC().RTKTL,_d,_b,_a,_f,_e,_g,_h,~_polp,_xjm)
         |? ZL.RTKTL='' & ZL.TYP().TECH='N'
         || .MAT:=exec('get1_src_price','kalk_mater',.ME,ANZH.ZLEC().RKTL,_d,_b,_a,_f,_e,_g,_h,~_polp,_xjm)
         || .make_mat()
         ?};
         VAR.A_ZLEC:=_var_z_zlec
      ?}
   ?}
");

set_virt(_obj,'n',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Funkcja pomocnicza dla n() - narzedzia
::   WE: [_a] - faza produkcji
::       [_b] - rodzaj narzędzia ('N','P','U')
::       [_c] - ilość kalkulowana, dla jakiej skalować wynik. Gdy nie podana to przeliczana wg ilości na technologii
::----------------------------------------------------------------------------------------------------------------------
   _wynik:='Blad';
   _param1:={? _>0 || {? _a=~~ || '' || _a ?} || '' ?};
   _param2:={? _>1 || {? _b=~~ || '' || _b ?} || '' ?};
   _param3:={? _>2 || {? _c=~~ || 0 || _c ?} || 0 ?};
   {? type_of(_param1)<>2
   || .ko('1')
   |? type_of(_param2)<>2
   || .ko('2')
   |? type_of(_param3)<>1
   || .ko('3')
   || ANZH.seek(.KALK);
      {? ANZH.ZLEC().RODZAJ<>'P' & ANZH.ZLEC().NRNZL=0
      || {? type_of(.FAZY)<7 || .get_pfaz() ?};
         {? type_of(.TOOL)<7
         || _coefinal:={? ANZH.ZLEC().IL=0 | _param3<=0 || 1 || _param3/ANZH.ZLEC().IL ?};
            ZL.cntx_psh();
            ZL.index('NRNZL');
            ZL.prefix(ANZH.ZLEC().UNRZL);
            {? ZL.first
            || {!
               |? {? ZL.RTKTL<>''
                  || _xjm:=exec('FindAndGet','#table',TKTL,ZL.RTKTL,,\"XJM\",ZL.IL);
                     _ilx:=exec('zaokr','jm',_coefinal*ZL.IL,ZL.KTM);
                     _coef:={? _xjm=0 || 0 || _ilx/_xjm ?};
                     exec('start_Otpar','tech_param',.,ZL.KTM,exec('FindAndGet','#table',TKTL,ZL.RTKTL,,\"ref()\",null()));
                     TOOL1:=exec('get_utils_price','kalk_tool',.ME,ZL.RTKTL,,_coef);
                     .scal_tool();
                     obj_del(TOOL1)
                  |? ZL.RTKTL='' & ZL.TYP().TECH='N'
                  || _xjm:=exec('FindAndGet','#table',TKTL,ZL.RKTL,,\"XJM\",ZL.IL);
                     _ilx:=exec('zaokr','jm',_coefinal*ZL.IL,ZL.KTM);
                     _coef:={? _xjm=0 || 0 || _ilx/_xjm ?};
                     exec('start_Otpar','tech_param',.,ZL.KTM,exec('FindAndGet','#table',TKTL,ZL.RKTL,,\"ref()\",null()));
                     TOOL1:=exec('get_utils_price','kalk_tool',.ME,ZL.RKTL,,_coef);
                     .scal_tool();
                     obj_del(TOOL1)
                  || .make_tool()
                  ?};
                  ZL.next()
               !}
            || .make_tool()
            ?};
            ZL.cntx_pop()
         ?}
      || {? type_of(.FAZY)<7 || .get_pfaz() ?};
         {? type_of(.TOOL)<7
         || {? ANZH.ZLEC().RTKTL<>''
            || _xjm:=exec('FindAndGet','#table',TKTL,ANZH.ZLEC().RTKTL,,\"XJM\",ZL.IL);
               _coef:={? _xjm=0 || 0 |? _param3<=0 || ZL.IL/_xjm || _param3/_xjm ?};
               .TOOL:=exec('get_utils_price','kalk_tool',.ME,ANZH.ZLEC().RTKTL,,_coef)
            |? ANZH.ZLEC().RTKTL='' & ZL.TYP().TECH='N'
            || _xjm:=exec('FindAndGet','#table',TKTL,ANZH.ZLEC().RKTL,,\"XJM\",ZL.IL);
               _coef:={? _xjm=0 || 0 |? _param3<=0 || ZL.IL/_xjm || _param3/_xjm ?};
               .TOOL:=exec('get_utils_price','kalk_tool',.ME,ANZH.ZLEC().RKTL,,_coef)
            || .make_tool()
            ?}
         ?}
      ?};
      _d_i:=_d_j:=1;
      _u_i:=3;_u_j:=obj_len(.FAZY);
      {? _param2='N' || _u_i:=1
      |? _param2='P' || _d_i:=_u_i:=2
      |? _param2='U' || _d_i:=3
      ?};
      {? _param1<>''
      || _faza:=.seekpfaz(_param1);
         {? _faza<>(-1) || _d_j:=_u_j:=_faza || _d_j:=_u_j:=0 ?}
      ?};
      _wynik:=.tool_cost(_d_i,_u_i,_d_j,_u_j)
   ?};
   _wynik
");
~~


\prep_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2009+]
:: OPIS: Przygotowanie tabel do wydruku (Grupowych analiz zlecen)
::  OLD: \prep_tab/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TABRUB','TABPOJ','numer');
TABRUB:=tab_tmp(1,'NR','INTEGER','Numer rubryki',
                  'OPIS','STRING[35]','Opis',
                  'SUMA','STRING[1]','Czy sumować?',
                  'AVG','STRING[1]','Czy średnia?',
                  'WSUMA','REAL','Wart.sumy',
                  'DRK','STRING[1]','Czy drukować?',
                  'WAVG','REAL','Wart. średniej',
                  'LICZNIK','INTEGER','Licznik',
                  'FORM','STRING[255]','Formuła',
                  'MOD','STRING[1]','modyfikowalna');
TABPOJ:=tab_tmp(1,'ZLEC','STRING[15]','Symbol zlecenia',
                  'WSUMA','REAL','Wartość sumy',
                  'NRUB','INTEGER','Nr rubryki analizy');
WER:=TABRUB.mk_sel('Rubryki analizy'@,'N',0,'rpm_anzz_004_s',,3);
TABRUB.win_fld(WER,,'NR',,,5,,1,'Nr'@);
TABRUB.win_fld(WER,,'OPIS',,,35,,1,'Opis'@);
TABRUB.win_fld(WER,,'SUMA',,,4,,,'Suma'@,,,2,,"'T'","'N'");
TABRUB.win_fld(WER,,'AVG',,,4,,,'Średnia'@,,,2,,"'T'","'N'");
TABRUB.win_fld(WER,,'DRK',,,4,,,'Druk'@,,,2,,"'T'","'N'");
TABRUB.win_act(WER,,'Popraw',,,,$("
   {? TABRUB.MOD='N'
   || FUN.info('"+
         'W skład grupy wchodzą towary o różnych jednostkach miary.\n'
         'Nie można prowadzić wyliczeń dla tej rubryki.'@
      +"');
      0
   || 1
   ?}"),,1);
TABRUB.win_act(WER,0,'Rekord',,,,,$("
   {? 'Tt'*TABRUB.SUMA
   || {? TABRUB.FORM*'s('>0 | TABRUB.FORM*'WST'>0
      || FUN.info('"+
            'Dla tej rubryki może być wyliczana tylko średnia'@
         +"');
         0
      || 1
      ?}
   || 1
   ?}"));
TABRUB.win_act(WER,,'Formuła','Dalej'@@,,,"sel_exit()",,,,,,'D');
TABRUB.win_act(WER,,'Formuła','Włącz'@@,,,"TABRUB.DRK:='T'; TABRUB.put()",,,1,,,'W');
TABRUB.win_act(WER,,'Formuła','W&yłącz'@@,,,"TABRUB.DRK:='N'; TABRUB.put()",,,1,,,'Y');
TABRUB.win_sel(WER);
ANRUB.index('RUBR');
ANRUB.prefix();
ANRUB.last();
numer:=obj_new(ANRUB.NR);
{!
|? numer[ANRUB.NR]:=0;
   ANRUB.next()
!};
~~


\spr_jm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2009+]
:: OPIS: Sprawdza zgodnosc jednostek miar wszystkich towarow wchodzacych w sklad grupy.
::  OLD: \spr_jm/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? WYDRUK.GRUPA<>null()
|| _ok:=exec('spr_grp','zl_kalk',WYDRUK.GRUPA)
|| MGR.prefix();
   MGR.first();
   {!
   |? _ok:=exec('spr_grp','zl_kalk',MGR.ref());
      MGR.next() & _ok
   !}
?};
_ok


\spr_grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2009+]
:: OPIS: Sprawdza zgodnosc jednostek miar w ramach grupy.
::   WE: _a - MGR.ref()
::   WY: 0 / 1
::  OLD: \spr_grp/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
M.clear();
M.index('MGR');
M.prefix(_a);
_ok:=1;
{? M.first()
|| _jm:=M.J;
   {!
   |? {? M.J<>_jm || _ok:=0 ?};
      M.next() & _ok
   !}
?};
M.cntx_pop();
_ok


\anzp_default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.46]
:: OPIS: Przywraca stan znacznika ANZP.MANUAL:='N'
::  OLD: \anzp_default/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get().args;
ANZP.MANUAL:='N';
ANZP.put();
_args.change:=1;
~~


\anzp_przelicz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.46]
:: OPIS: Przelicza ponownie kalkulację/analizę zlecenia
::  OLD: \anzp_przelicz/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get().args;

ANZP.cntx_psh(); ANZH.cntx_psh();
ANZP.NRA();
{? exec('anzhanal','zl_kalk',0) || _args.change:=0 ?};
exec('kj_licz','zl_kalk');
ANZP.cntx_pop(); ANZH.cntx_pop();
~~


\anzp_war_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.46]
:: OPIS: Po redakcji pola ANZP.WAR
::  OLD: \anzp_war_ae/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get().args;
ANZP.MANUAL:='T';
_args.change:=1;
1


\utw_okno
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MagLak [17.00]
:: OPIS: Wywołuje porównanie kalkulacji zlecenia z kalkulacją technologii i analizą zlecenia
::   WE: _a - typ zlecenia: [1] - produkcyjne, 0 - warsztatowe
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_press('_a')=type_of(0) || _a || 1 ?};
VAR_DEL.delete('__TABPOM');
__TABPOM:=tab_tmp(1
   ,'NR','INTEGER','Numer rubryki'@
   ,'ANR','INTEGER','Numer rubryki zlecenia'@
   ,'NAZ','STRING[60]','Opis rubryki'@
   ,'WAR0','REAL','Kalkulacja technologii'@
   ,'WAR1','REAL','Kalkulacja zlecenia'@
   ,'WAR2','REAL','Analiza zlecenia'@
   ,'ODT','REAL','Odchylenie od technologii %%'@
   ,'ODZ','REAL','Odchylenie od zlecenia %%'@
);

_wer:=__TABPOM.mk_sel('Porównanie analizy z wartościami planowanymi'@,'N',0,'anzp_cmpp',,8);
__TABPOM.win_fld(_wer,,'NR',,,5,,,'Nr'@);
__TABPOM.win_fld(_wer,,'NAZ',,,30,,,'Opis'@);
{? _typ || __TABPOM.win_fld(_wer,,'WAR0',,,,4) ?};
__TABPOM.win_fld(_wer,,'WAR1',,,,4);
__TABPOM.win_fld(_wer,,'WAR2',,,,4);
__TABPOM.win_fld(_wer,,'ODT',,,,4);
__TABPOM.win_fld(_wer,,'ODZ',,,,4);
__TABPOM.win_sel(_wer);
~~


\fullcompt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [gc] [12.46]
:: OPIS: Wywołuje porównanie kalkulacji technologii z wybraną kalkulacją i analizą zlecenia
::   WE:
::   WY:
::  OLD: \fullcompt/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
KR2AR.prefix();
{? KR2AR.size()=0
|| FUN.info('Nie zdefiniowano żadnego powiązania rubryk TKW z rubrykami zlecenia.\n\nOperacja niemożliwa.'@);
   return('')
|| KR2AR.cntx_psh();
   KR2AR.index('DSP');
   KR2AR.prefix('T');
   {? KR2AR.size()=0
   || FUN.info('Nie zdefiniowano żadnego powiązania rubryk TKW z rubrykami zlecenia z aktywnym znacznikiem'
               ' wyświetlania w analizie porównawczej.\n\nOperacja niemożliwa.'@);
      KR2AR.cntx_pop();
      return('')
   ?};
   KR2AR.cntx_pop()
?};
exec('utw_okno','zl_kalk');

ZL.cntx_psh();
ANZH.cntx_psh();
ANZP.cntx_psh();
AFORM.cntx_psh();
KPOZK.cntx_psh();

KPOZK.clear();
KPOZK.index('KR');
KPOZK.prefix(KKTL.ref());

{? KPOZK.first()
|| {!
   |? _anrub:=exec('kr2ar','zl_kalk',KPOZK.RUBR().NR);
      {? _anrub>0
      || __TABPOM.blank();
         __TABPOM.NR:=KPOZK.RUBR().NR;
         __TABPOM.ANR:=_anrub;
         __TABPOM.NAZ:=KPOZK.RUBR().OPIS;
         __TABPOM.WAR0:=KPOZK.WART;
         __TABPOM.add()
      ?};
      KPOZK.next()
   !}
?};

ZL.index('KTL');
VAR_DEL.delete('_temp');
_temp:=sql('select REFERENCE as REF from ZL where ZL.KTL=:_a and ZL.KTM=:_b',VAR.A_KTL,KKTL.TKTLW().KTM);
{? _temp.first()
|| ANZH.clear();
   ANZH.index('ZN');
   ANZH.f_set('ZLEC,NRA',,'"ANZH".A01=\'0\' and "ANZH".ZLEC in (select :_a.REF from :_a)',_temp);
   {? ANZH.f_first()
   || ANZH.win_sel('SLO0');
      {? ANZH.f_size()=1 | ANZH.select()
      || AFORM.index('OR');
         _opc:=ANZH.OPC;
         ANZP.index('NRARUB');
         ANZP.prefix(ANZH.ref());
         {? ANZP.first()
         || {!
            |? _krub:=exec('ar2kr','zl_kalk',ANZP.RUBR().NR);
               {? _krub>0
               || AFORM.prefix(_opc,ANZP.RUBR().NR);
                  {? AFORM.first()
                  || __TABPOM.prefix(_krub);
                     {? __TABPOM.first()
                     || __TABPOM.WAR1:=ANZP.WAR;
                        __TABPOM.put()
                     || __TABPOM.blank();
                        __TABPOM.NR:=_krub;
                        __TABPOM.ANR:=ANZP.RUBR().NR;
                        __TABPOM.NAZ:=ANZP.RUBR().OPIS;
                        __TABPOM.WAR1:=ANZP.WAR;
                        __TABPOM.add()
                     ?}
                  ?}
               ?};
               ANZP.next()
            !}
         ?}
      || FUN.info('Nie wybrano kalkulacji wstępnej zlecenia do porównania.'@)
      ?}
   || FUN.info('Brak kalkulacji wstępnej zlecenia do porównania.'@)
   ?};
   ANZH.f_clear();

   ANZH.f_set('ZLEC,NRA',,'"ANZH".A01=\'1\' and "ANZH".ZLEC in (select :_a.REF from :_a)',_temp);
   {? ANZH.f_first()
   || ANZH.win_sel('SLO1');
      {? ANZH.f_size()=1 | ANZH.select()
      || AFORM.index('OR');
         _opc:=ANZH.OPC;
         ANZP.index('NRARUB');
         ANZP.prefix(ANZH.ref());
         ANZP.prefix(ANZH.ref());
         {? ANZP.first()
         || {!
            |? _krub:=exec('ar2kr','zl_kalk',ANZP.RUBR().NR);
               {? _krub>0
               || AFORM.prefix(_opc,ANZP.RUBR().NR);
                  {? AFORM.first()
                  || __TABPOM.prefix(_krub);
                     {? __TABPOM.first()
                     || __TABPOM.WAR2:=ANZP.WAR;
                        __TABPOM.put()
                     || __TABPOM.blank();
                        __TABPOM.NR:=_krub;
                        __TABPOM.ANR:=ANZP.RUBR().NR;
                        __TABPOM.NAZ:=ANZP.RUBR().OPIS;
                        __TABPOM.WAR2:=ANZP.WAR;
                        __TABPOM.add()
                     ?}
                  ?}
               ?};
               ANZP.next()
            !}
         ?}
      || FUN.info('Nie wybrano analizy zlecenia do porównania.'@)
      ?}
   || FUN.info('Brak analizy zlecenia do porównania.'@)
   ?};
   ANZH.f_clear();

   __TABPOM.clear();
   {? __TABPOM.first()
   || {!
      |? __TABPOM.ODT:={? __TABPOM.WAR0=0 || 0 || (__TABPOM.WAR1-__TABPOM.WAR0)/__TABPOM.WAR0*100 ?};
         __TABPOM.ODZ:={? __TABPOM.WAR1=0 || 0 || (__TABPOM.WAR2-__TABPOM.WAR1)/__TABPOM.WAR1*100 ?};
         __TABPOM.put();
         __TABPOM.next()
      !}
   ?};
   __TABPOM.select()

|| FUN.info('Brak zleceń dla aktualnej technologii.'@)
?};

ZL.cntx_pop();
ANZH.cntx_pop();
ANZP.cntx_pop();
AFORM.cntx_pop();
KPOZK.cntx_pop();

VAR_DEL.delete('__TABPOM','_temp');
''


\fullcomp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [gc] [12.46]
:: OPIS: Wywołuje porównanie analizy zlecenia z kalkulacją technologii i kalkulacją zlecenia
::   WE: _a - obiekt od którego zaczyna się porównanie: ['K'] - kalkulacja zlecenia, 'A' - analiza zlecenia
::   WY:
::  OLD: \fullcompa/zlecanal.fml
::----------------------------------------------------------------------------------------------------------------------
_a01:={? var_press('_a')=type_of('str') || _a || 'K' ?};

KR2AR.prefix();
{? KR2AR.size()=0
|| FUN.info('Nie zdefiniowano żadnego powiązania rubryk TKW z rubrykami zlecenia.\n\nOperacja niemożliwa.'@);
   return('')
|| KR2AR.cntx_psh();
   KR2AR.index('DSP');
   KR2AR.prefix('T');
   {? KR2AR.size()=0
   || FUN.info('Nie zdefiniowano żadnego powiązania rubryk TKW z rubrykami zlecenia z aktywnym znacznikiem'
               ' wyświetlania w analizie porównawczej.\n\nOperacja niemożliwa.'@);
      KR2AR.cntx_pop();
      return('')
   ?};
   KR2AR.cntx_pop()
?};
exec('utw_okno','zl_kalk',ZL.TYP().WP='P');
VAR.A_ANZH:=ANZH.ref();

exec('tktl_cntx_psh','tech_common');
exec('tktl_use','tech_common',((8+ZL.RKTL)+3));
ANZH.cntx_psh();
ANZP.cntx_psh();
AFORM.cntx_psh();

{? ZL.TYP().WP='P'
|| _material:=ZL.KTM;
   _ktl:=exec('FindAndGet','#table',TKTL,ZL.RKTL);
   TKTLW.index('REF');
   TKTLW.prefix(_ktl,_material);
   {? TKTLW.first()
   || KKTL.clear();
      KKTL.index('KNR');
      KKTL.prefix(_ktl,TKTLW.ref());
      KKTL.win_sel('SLO');
      {? KKTL.first()
      || {? KKTL.size()=1 | KKTL.select()
         || KPOZK.clear();
            KPOZK.index('KR');
            KPOZK.prefix(KKTL.ref());
            {? KPOZK.first()
            || {!
               |? _anrub:=exec('kr2ar','zl_kalk',KPOZK.RUBR().NR);
                  {? _anrub>0
                  || __TABPOM.blank();
                     __TABPOM.NR:=KPOZK.RUBR().NR;
                     __TABPOM.ANR:=_anrub;
                     __TABPOM.NAZ:=KPOZK.RUBR().OPIS;
                     __TABPOM.WAR0:=KPOZK.WART;
                     __TABPOM.add()
                  ?};
                  KPOZK.next()
               !}
            ?}
         ?}
      || FUN.info('Brak kalkulacji TKW karty technologicznej do porównania.'@)
      ?}
   || FUN.info('Brak kalkulacji TKW karty technologicznej do porównania.'@)
   ?}
?};

AFORM.index('OR');
_opc:=ANZH.OPC;
ANZP.index('NRARUB');
ANZP.prefix(ANZH.ref());
{? ANZP.first()
|| {!
   |? _krub:=exec('ar2kr','zl_kalk',ANZP.RUBR().NR);
      {? _krub>0
      || AFORM.prefix(_opc,ANZP.RUBR().NR);
         {? AFORM.first()
         || __TABPOM.prefix(_krub);
            {? __TABPOM.first()
            || {? _a01='A'
               || __TABPOM.WAR2:=ANZP.WAR
               || __TABPOM.WAR1:=ANZP.WAR
               ?};
               __TABPOM.put()
            || __TABPOM.blank();
               __TABPOM.NR:=_krub;
               __TABPOM.ANR:=ANZP.RUBR().NR;
               __TABPOM.NAZ:=ANZP.RUBR().OPIS;
               {? _a01='A'
               || __TABPOM.WAR2:=ANZP.WAR
               || __TABPOM.WAR1:=ANZP.WAR
               ?};
               __TABPOM.add()
            ?}
         ?}
      ?};
      ANZP.next()
   !}
?};

ZL.index('KTL');
ANZH.clear();
ANZH.f_clear();
ANZH.f_set('ZLEC,NRA',,'"ANZH".A01=\':_b\' and "ANZH".ZLEC=:_a',VAR.A_ZLEC,{? _a01='A' || '0' || '1' ?});
{? ANZH.f_first()
|| {? _a01='A'
   || ANZH.win_sel('SLO0')
   || ANZH.win_sel('SLO1')
   ?};
   {? ANZH.f_size()=1 | ANZH.select()
   || AFORM.index('OR');
      _opc:=ANZH.OPC;
      ANZP.index('NRARUB');
      ANZP.prefix(ANZH.ref());
      {? ANZP.first()
      || {!
         |? _krub:=exec('ar2kr','zl_kalk',ANZP.RUBR().NR);
            {? _krub>0
            || AFORM.prefix(_opc,ANZP.RUBR().NR);
               {? AFORM.first()
               || __TABPOM.prefix(_krub);
                  {? __TABPOM.first()
                  || {? _a01='A'
                     || __TABPOM.WAR1:=ANZP.WAR
                     || __TABPOM.WAR2:=ANZP.WAR
                     ?};
                     __TABPOM.put()
                  || __TABPOM.blank();
                     __TABPOM.NR:=_krub;
                     __TABPOM.ANR:=ANZP.RUBR().NR;
                     __TABPOM.NAZ:=ANZP.RUBR().OPIS;
                     {? _a01='A'
                     || __TABPOM.WAR1:=ANZP.WAR
                     || __TABPOM.WAR2:=ANZP.WAR
                     ?};
                     __TABPOM.add()
                  ?}
               ?}
            ?};
            ANZP.next()
         !}
      ?}
   || {? _a01='A'
      || _msg:='Nie wybrano kalkulacji zlecenia do porównania.'@
      || _msg:='Brak analizy zlecenia do porównania.'@
      ?};
      FUN.info(_msg)
   ?}
|| {? _a01='A'
   || _msg:='Brak kalkulacji wstępnej zlecenia do porównania.'@
   || _msg:='Brak analizy zlecenia do porówniania.'@
   ?};
   FUN.info(_msg)
?};
ANZH.f_clear();

__TABPOM.clear();
{? __TABPOM.first()
|| {!
   |? __TABPOM.ODT:={? __TABPOM.WAR0=0 || 0 || (__TABPOM.WAR1-__TABPOM.WAR0)/__TABPOM.WAR0*100 ?};
      __TABPOM.ODZ:={? __TABPOM.WAR1=0 || 0 || (__TABPOM.WAR2-__TABPOM.WAR1)/__TABPOM.WAR1*100 ?};
      __TABPOM.put();
      __TABPOM.next()
   !}
?};
__TABPOM.select();

ANZH.cntx_pop();
ANZP.cntx_pop();
AFORM.cntx_pop();
exec('tktl_cntx_pop','tech_common');

VAR_DEL.delete('__TABPOM','_temp');
''


\rkprz_anzmat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Rekord przed w oknie ANZMAT.WER
::----------------------------------------------------------------------------------------------------------------------
VAR.REAL:=ANZMAT.PRICE*ANZMAT.IL;
~~


\rkprz_anztto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Rekord przed w oknie ANZTTO.WER
::----------------------------------------------------------------------------------------------------------------------
VAR.REAL:=ANZTTO.STAWKA*ANZTTO.IL;
~~


\rkprz_anzwrk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Rekord przed w oknie ANZWRK.WER
::----------------------------------------------------------------------------------------------------------------------
VAR.REAL:=ANZWRK.KH*ANZWRK.IL;
~~


\rkprz_anztou
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Rekord przed w oknie ANZTOU.WER
::----------------------------------------------------------------------------------------------------------------------
VAR.REAL:=ANZTOU.CENA*ANZTOU.IL;
~~


\rkprz_anztls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Rekord przed w oknie ANZTLS.WER
::----------------------------------------------------------------------------------------------------------------------
VAR.REAL:=ANZTLS.KOSZT*ANZTLS.IL;
~~


\chk_anrub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Walidacja rekordu tabeli ANRUB (rubryki kalkulacji/analizy) - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::   WY: akronim pola / ''
::----------------------------------------------------------------------------------------------------------------------
_chk:=__CHK.record(ANRUB);
{? _chk=''
|| {? ANRUB.NR<=0
   || FUN.info('Numer rubryki musi być większy od zera.'@);
      'NR'
   || {? __CHK.index(ANRUB,_a)='' || '' || 'NR' ?}
   ?}
|| _chk
?}


\chk_anwar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Walidacja rekordu tabeli ANWAR (warianty kalkulacji/analizy) - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::   WY: akronim pola / ''
::----------------------------------------------------------------------------------------------------------------------
_chk:=__CHK.record(ANWAR,,'NA');
{? _chk=''
|| {? ANWAR.WST<0
   || FUN.info('Wartość parametru ''Wstecz'' nie może być ujemna.'@);
      'WST'
   |? ANWAR.A01<>'0' & ANWAR.A01<>'1'
   || FUN.info('Wartość pola ''kalkulacja/analiza'' musi być ''%1'' albo ''%2'''@['0','1']);
      'NA'
   || {? __CHK.index(ANWAR,_a)='' || '' || 'NA' ?}
   ?}
|| _chk
?}


\chk_aform
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Walidacja rekordu tabeli AFORM (formuły kalkulacji/analizy) - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::   WY: akronim pola / ''
::----------------------------------------------------------------------------------------------------------------------
_chk:=__CHK.record2(AFORM,'RUBR','Rubryka'@,'FRM','Wyliczanie wartości pozycji'@);
{? _chk=''
|| {? __CHK.index(AFORM,_a)='' || '' || 'RUBR' ?}
|| _chk
?}


\chk_ankon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Walidacja rekordu tabeli ANKON (stałe kalkulacji/analizy) - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::   WY: akronim pola / ''
::----------------------------------------------------------------------------------------------------------------------
_chk:=__CHK.record(ANKON);
{? _chk=''
|| {? __CHK.index(ANKON,_a)='' || '' || 'RUBR' ?}
|| _chk
?}


\kr2ar_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Selekcja tabeli mapującej KRUB na ANRUB
::----------------------------------------------------------------------------------------------------------------------
_wer:=KR2AR.mk_sel('Wiązanie rubryk TKW z rubrykami zlecenia'@,,,'kr2ar_wer',,,,,'U');
KR2AR.win_fld(_wer,,'DSP',,,-6,,,'Wyświetlić w analizie porównawczej?'@,,'Wyświetlić w analizie porównawczej?',2,,"'T'","'N'");
KR2AR.win_fld(_wer,,'KRUB','NR','NR',-10,,,'Rubryka TKW'@);
KR2AR.win_fld(_wer,,'KRUB','OPIS');
KR2AR.win_fld(_wer,,'ANRUB','NR','RUBR',-10,,,'Rubryka zlecenia'@);
KR2AR.win_fld(_wer,,'ANRUB','OPIS');
KR2AR.win_act(_wer,0,'Dołącz',,,,"VAR.MODIFY:=0;~~",,1);
KR2AR.win_act(_wer,1,'Dołącz',,,,"VAR.MODIFY:=0;~~",,1);
KR2AR.win_act(_wer,,'Popraw',,,,"VAR.MODIFY:=1;~~");
KR2AR.win_act(_wer,,'Usuń',,,,,,,1);
KR2AR.win_act(_wer,0,'Rekord',,,,,"exec('kr2ar_rekord','zl_kalk')");
KR2AR.win_act(_wer,1,'Rekord',,,,,"exec('kr2ar_rekord','zl_kalk')");
KR2AR.win_act(_wer,0,'Formuła','Do&myślnie'@@,,'Odtwarza domyślne powiązania rubryk'@,"exec('kr2ar_default','zl_kalk')");
KR2AR.win_act(_wer,1,'Formuła','Do&myślnie'@@,,'Odtwarza domyślne powiązania rubryk'@,"exec('kr2ar_default','zl_kalk')");

_fb:="
   _tab:=cur_tab();
   {? _tab.DSP='N'
   || _tab.DSP:='T'
   ?};
   _tab.put();
   ~~
";
KR2AR.win_act(_wer,,'Formuła','&Zaznacz'@@,,'Oznacz rubryki jako do wyświetlenia'@,_fb,,,1);
_fb:="
   _tab:=cur_tab();
   {? _tab.DSP='T'
   || _tab.DSP:='N'
   ?};
   _tab.put();
   ~~
";
KR2AR.win_act(_wer,,'Formuła','&Odznacz'@@,,'Odznacz rubryki jako do wyświetlenia'@,_fb,,,1);
KR2AR.cntx_psh();
ANRUB.cntx_psh();
KRUB.cntx_psh();
KR2AR.index('KRUB');
KR2AR.prefix();
KR2AR.win_sel(_wer);
_anrub:=ANRUB.actions('WER','O');
_krub:=KRUB.actions('WER','O');

{? ~KR2AR.select()
|| KR2AR.clear();
   {?  KR2AR.size()=0
   || {? FUN.ask('Nie zdefiniowano żadnego powiązania rubryk TKW z rubrykami zlecenia. Czy wygenerować domyślne powiązania?'@)
      || exec('kr2ar_default','zl_kalk',0)
      ?}
   ?}
?};
ANRUB.actions('WER',_anrub);
KRUB.actions('WER',_krub);
KRUB.cntx_pop();
ANRUB.cntx_pop();
KR2AR.cntx_pop();
~~


\kr2ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Zwraca numer rubryki zlecenia zmapowanej do danej rubryki TKW
::   WE: _a - KRUB.NR
::   WY: ANRUB.NR
::----------------------------------------------------------------------------------------------------------------------
_krub:=_a;
_anrub:=0;
KR2AR.cntx_psh();
KR2AR.index('KRUB');
KR2AR.prefix(_krub);
{? KR2AR.first()
|| {? KR2AR.DSP='T'
   || _anrub:=KR2AR.ANRUB().NR
   ?}
?};
KR2AR.cntx_pop();
_anrub


\ar2kr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Zwraca numer rubryki TKW zmapowanej do danej rubryki zlecenia
::   WE: _a - ANRUB.NR
::   WY: KRUB.NR
::----------------------------------------------------------------------------------------------------------------------
_anrub:=_a;
_krub:=0;
KR2AR.cntx_psh();
KR2AR.index('ANRUB');
KR2AR.prefix(_anrub);
{? KR2AR.first()
|| {? KR2AR.DSP='T'
   ||
:: Jeżeli porównanie robione dla zlecenia warsztatowego to zwracam nr rubryki zlecenia
      {? ZL.TYP().WP='W'
      || _krub:=_anrub
      || _krub:=KR2AR.KRUB().NR
      ?}
   ?}
?};
KR2AR.cntx_pop();
_krub


\kr2ar_default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Odtwarza domyślne mapowanie rubryk (zgodne z numeracją)
::   WE: _a - czy zadawać pytanie
::----------------------------------------------------------------------------------------------------------------------
_ask:={? var_pres('_a')=type_of(0) || _a || 1 ?};

{? ~_ask | FUN.ask('Czy przywrócić domyślne mapowanie rubryk?'@)
||
   KR2AR.erase();

   KRUB.cntx_psh();
   ANRUB.cntx_psh();

   KRUB.prefix();
   {? KRUB.first()
   || {!
      |? ANRUB.index('RUBR');
         ANRUB.prefix(KRUB.NR);
         {? ANRUB.first()
         || KR2AR.KRUB:=KRUB.ref();
            KR2AR.ANRUB:=ANRUB.ref();
            KR2AR.DSP:='N';
            KR2AR.add(1)
         ?};
         KRUB.next()
      !}
   ?};

   ANRUB.prefix();
   {? ANRUB.first()
   || {!
      |? KRUB.index('NR');
         KRUB.prefix(ANRUB.NR);
         {? KRUB.first()
         || KR2AR.KRUB:=KRUB.ref();
            KR2AR.ANRUB:=ANRUB.ref();
            KR2AR.DSP:='N';
            KR2AR.add(1)
         ?};
         ANRUB.next()
      !}
   ?};

   KRUB.cntx_pop();
   ANRUB.cntx_pop();

   KR2AR.first()
?};
~~


\kr2ar_rekord
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Walidacja wrpowadzonych danych tabeli KR2AR
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_modify:=VAR.MODIFY;
_ref:=null;
_res:=__CHK.record2(KR2AR,
   'KRUB','Rubryka TKW'@,
   'ANRUB','Rubryka zlecenia'@
);
{? _modify
|| _ref:=KR2AR.ref()
?};
:: Sprawdzanie unikalności
{? _res=''
|| KR2AR.cntx_psh();
   KR2AR.index('KREF');
   KR2AR.prefix(KR2AR.KRUB);
   {? KR2AR.first() & {? _modify || _ref<>KR2AR.ref() || 1 ?}

   || _res:='KRUB';
      FUN.emsg('Rubryka TKW "%1" jest już powiązana.'@[KRUB.OPIS])
   ?};
   KR2AR.cntx_pop()
?};
{? _res=''
|| KR2AR.cntx_psh();
   KR2AR.index('AREF');
   KR2AR.prefix(KR2AR.ANRUB);
   {? KR2AR.first() & {? _modify || _ref<>KR2AR.ref() || 1 ?}

   || _res:='ANRUB';
      FUN.emsg('Rubryka zlecenia "%1" jest już powiązana.'@[ANRUB.OPIS])
   ?};
   KR2AR.cntx_pop()
?};
_res


\chk_kr2ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Walidacja rekordu tabeli KR2AR (Mapowanie rubryk kalkulacyjnych na analityczne) - wołana z poziomu funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::   WY: akronim pola / NDX / ''
::----------------------------------------------------------------------------------------------------------------------
_chk:=__CHK.record(KR2AR);
{? _chk=''
|| {? __CHK.index(KR2AR,_a,{? _a || 1 || '' ?})='' || '' || 'NDX' ?}
|| _chk
?}


\chk_finish
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.14]
:: OPIS: Kontrola przed 'Zakończ' w oknie kalkulacji/analiz
::   WE: _a - '0' kalkulacja wstępna zlecenia
::            '1' analiza zlecenia
::       _b - ZL.ref()
::   WY: Opis do pytania dla 'Zakończ'
::----------------------------------------------------------------------------------------------------------------------
_a01:=_a;
_zl:=_b;

_result:='';

ANZH.cntx_psh();
ANZH.index('ZN');
ANZH.prefix(_a01,_zl);
{? ANZH.first()
|| _akt:=0;
   {!
   |? {? ANZH.AKT='T' || _akt:=1 ?};
      _akt=0 & ANZH.next()
   !};
   {? _akt=0
   || _result+=
         {? _a01='0'
         || 'Żadna kalkulacja zlecenia nie jest aktywna.'@
         || 'Żadna analiza zlecenia nie jest aktywna.'@
         ?}+'\n'
   ?}
|| _result+=
      {? _a01='0'
      || 'Nie wykonano żadnych kalkulacji zlecenia.'@
      || 'Nie wykonano żadnych analiz zlecenia.'@
      ?}+'\n'
?};
ANZH.cntx_pop();

{? _result<>''
|| _result:='UWAGA:'@+'\n'+_result
?};

_result


\anzmat_fd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Format wyświetlenia dla pól tabeli ANZMAT
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
_res:='';
{? _fld='IL'
|| _res:='out_prec='+$ST.DOKL
?};
_res

:Sign Version 2.0 jowisz:1045 2024/01/22 14:09:55 432af6e2a6fd32777903eb0a1eaee250fc41218b423e7f6cad1e17913e39dee48bf6762503a290610684832f312f8885f9eed9a47f5934f899350d8d9fe4647e513fd8ca33e741d27e87b5e164641d902a5c5f097b68f3d74f9ff62cb8e906e12c3f169c1bacbfe42f4ce28de3223193c346ac7b5c4004d4fde7a13a5bd13497
