:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: rap_zew.fml
:: Utworzony: 24.03.2015
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Obsługa raportów zewnętrznych (*.doc)
::======================================================================================================================


\reg_reps
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Uzupełnia informacje w tabelach wykorzystywanych podczas tworzenia wydruków w programach zewnętrznych
::       (MS Office, Crystal Reports, etc.). Tworzone są odpowiednie zapisy w tabelach XR_DEF i XR_INS.
::  OLD: \reg_reps/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
:: Funkcja dodająca nowy raport.
_add_def:="exec('reg_rep','rap_zew',_a,_b,_c)";

:: Funkcja dodająca nowy szablon.
_add_tmp:="exec('add_tmp','rap_zew',_a,_b,_c)";

_std:=exec('def_tmp','rap_zew');

:: Raportu obszaru PKD.
_dom:='PKD';

_add_def(_dom,'zaswumpr','Umowa o pracę');
   _add_tmp('zaswumpr','pkd_zaswumpr.doc',_std);
   _add_tmp('zaswumpr','pkd_zaswumpp.doc','Umowa o pracę z premią comiesięczną');

_add_def(_dom,'zaswuman','Aneks do umowy o pracę');
   _add_tmp('zaswuman','pkd_zaswuman.doc',_std);

_add_def(_dom,'zaswzatr','Zaświadczenie o zatrudnieniu i zarobkach');
   _add_tmp('zaswzatr','pkd_zaswzatr.doc',_std);

_add_def(_dom,'zaswplac','Zawiadomienie o przeszeregowaniu');
   _add_tmp('zaswplac','pkd_zaswplac.doc',_std);

_add_def(_dom,'zaswwysl','Zmiana wysługi');
   _add_tmp('zaswwysl','pkd_zaswwysl.doc',_std);

_add_def(_dom,'zaswsw','Świadectwo pracy');
   _add_tmp('zaswsw','pkd_zaswsw.doc',_std);

_add_def(_dom,'zaswrodz','Zaświadczenie do zasiłku rodzinnego');
   _add_tmp('zaswrodz','pkd_zaswrodz.doc',_std);

_add_def(_dom,'zaswzmum','Wypowiedzenie warunków umowy o pracę');
   _add_tmp('zaswzmum','pkd_zaswzmum.doc',_std);

_add_def(_dom,'zaswzwyp','Zwolnienie za wypowiedzeniem');
   _add_tmp('zaswzwyp','pkd_zaswzwyp.doc',_std);

_add_def(_dom,'zaswswyp','Zwolnienie ze skróconym okresem wypowiedzenia');
   _add_tmp('zaswswyp','pkd_zaswswyp.doc',_std);

_add_def(_dom,'zaswbwyp','Zwolnienie bez wypowiedzenia');
   _add_tmp('zaswbwyp','pkd_zaswbwyp.doc',_std);

_add_def(_dom,'zaswwarp','Informacja o warunkach pracy');
   _add_tmp('zaswwarp','pkd_zaswwarp.doc',_std);

_add_def(_dom,'zasw_okr','Informacja o okresie przechowywania akt');
   _add_tmp('zasw_okr','pkd_zaswprzechowanieakt.doc',_std);

_add_def(_dom,'zasw_wyn','Informacja o sposobie wypłaty wynagrodzenia');
   _add_tmp('zasw_wyn','pkd_zaswsposobwyplaty.doc',_std);

_add_def(_dom,'uz_umzc','Umowa - zlecenie');
   _add_tmp('uz_umzc','pkd_uz_umzc.doc',_std);

_add_def(_dom,'uz_umdz','Umowa o dzieło');
   _add_tmp('uz_umdz','pkd_uz_umdz.doc',_std);

:: Raporty obszaru PRC.
_dom:='PRC';

_add_def(_dom,'okrrozl','Rozliczenie okresu');
   _add_tmp('okrrozl','prc_okrrozl.doc',_std);

:: Koniec definicji raportów zewnętrznych.
echo()


\reg_rep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Tworzy zapisy w tabelach XR_DEF i XR_INS.
::       Programista jest odpowiedzialny za kontrolę liczby argumentów wywołania, ponieważ nie istnieje prosty sposób
::       wychwycenia wywołania z liczbą argumentów większą niż dopuszczalna.
::   WE: _a    - Kod obszaru.
::       ...
::       _n    - Unikalny symbol raportu.
::       _n+1  - Opis raportu dla użytkownika programu.
::  OLD: \reg_rep/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<=2 | _%*2=0
|| exec('err_msg','rap_zew',1,'reg_rep');
   return(0)
?};

: Dozwolone tylko poprawne wywołanie!
{! _arg:=1 .. _
|! {? var_pres('_['+$_arg+']')<>type_of('')
   || exec('err_msg','rap_zew',2,'reg_rep',_arg,'');
      return(0)
   ?}
!};

_usr:=exec('name','users');

XR_INS.cntx_psh();
XR_INS.index('STAN');

XR_DEF.cntx_psh();
XR_DEF.index('SYMBOL');
XR_DEF.prefix();

XR_DEF.SYSTEM:=_[1];

_cnt:=0;
_chk:=0;
{! _arg:=2 // 2
|? _arg<=_-1
|! do();
   _cnt+=1;
   {? XR_DEF.find_key(_[_arg],)
   || _put:=0;
      {? XR_DEF.SYSTEM<>_[1]
      || XR_DEF.SYSTEM:=_[1];
         _put+=1
      ?};
      {? XR_DEF.OPIS<>_[_arg+1]
      || XR_DEF.OPIS:=_[_arg+1];
         _put+=1
      ?};
      {? _put
      || _chk+=XR_DEF.put()
      || _chk+=1
      ?}
   || XR_DEF.SYSTEM:=_[1];
      XR_DEF.SYMBOL:=_[_arg];
      XR_DEF.OPIS:=_[_arg+1];
      _chk+=XR_DEF.add()
   ?};
   _def:=XR_DEF.ref();
   XR_INS.prefix(_def,_usr,'U');
   {? ~XR_INS.first()
   || XR_INS.blank();
      XR_INS.RAPORT:=_def;
      XR_INS.OPERATOR:=_usr;
      XR_INS.RODZAJ:='U';
      XR_INS.STAN:='N';
      XR_INS.add()
   ?};
   end()
!};

XR_DEF.cntx_pop();
XR_INS.cntx_pop();

_cnt=_chk


\def_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.70]
:: OPIS: Zwraca opis dla szablonu domyślnego, dostarczanego z wersją standardową.
::   WY: 'Szablon uniwersalny'
::  OLD: \def_tmp/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
'Szablon uniwersalny'


\add_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Tworzy zapisy w tabeli XR_TMP (szablony raportow zewnętrznych).
::       Programista jest odpowiedzialny za kontrolę liczby argumentów wywołania, ponieważ nie istnieje prosty sposób
::       wychwycenia wywołania z liczbą argumentów większą niż dopuszczalna.
::   WE: _a    - Identyfikator raportu.
::       ...
::       _n    - Nazwa dyskowa pliku zawierającego szablon wydruku.
::       _n+1  - Opis szablonu dla użytkownika programu.
::  OLD: \add_tmp/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<=2 | _%*2=0
|| exec('err_msg','rap_zew',1,'reg_rep');
   return()
?};

: Dozwolone tylko poprawne wywołanie!
{! _arg:=1 .. _
|! {? var_pres('_['+$_arg+']')<>type_of('')
   || exec('err_msg','rap_zew',2,'reg_rep',_arg,'');
      return()
   ?}
!};

{? ~exec('get_def','rap_zew',_a) || return() ?};

XR_TMP.cntx_psh();
XR_TMP.index('PLIK');
XR_TMP.prefix(XR_DEF.ref());

{! _arg:=2 // 2
|? _arg<=_-1
|! {? XR_TMP.find_key(_[_arg],)
   || {? XR_TMP.OPIS<>_[_arg+1]
      || XR_TMP.OPIS:=_[_arg+1];
         XR_TMP.put()
      ?}
   || XR_TMP.blank(1);
      XR_TMP.RAPORT:=XR_DEF.ref();
      XR_TMP.PLIK:=_[_arg];
      XR_TMP.OPIS:=_[_arg+1];
      XR_TMP.add()
   ?}
!};

XR_TMP.cntx_pop();
~~


\get_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Funkcja wyszukuje informacje nagłówkową raportu (definicję).
::   WE: _a [STRING] - symbol raportu
::       [_b] [INTEGER] - wykonanie tylko z użyciem szablonów
::   WY: null lub wskazanie na rekord w tabeli SD_DEF lub XR_DEF.
::  OLD: \get_def/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~(var_pres('_a')=type_of('') & _a<>'')
|| return(null)
?};
_sym:=_a;

_sd_def:=null;
_xr_def:=null;

SD_DEF.index('SYMBOL');
SD_DEF.prefix();
{? SD_DEF.find_key(_sym,) & SD_DEF.DOSTEPNY='T'
|| _sd_def:=SD_DEF.ref();
   SD_UINS.index('STAN');
   SD_UINS.prefix(SD_DEF.ref(),OPERATOR.USER,'U');
   {? SD_UINS.first() & SD_UINS.STAN='T'
   || return(_sd_def)
   ?}
?};
{? var_pres('_b')=type_of(0) & _b<>0
:: użycie wyłącznie szablonów
|| return(null)
?};

XR_DEF.index('SYMBOL');
XR_DEF.prefix();
{? XR_DEF.find_key(_sym,) | XR_DEF.find_key(exec('xr_4_sd','rap_zew',_sym),)
|| _xr_def:=XR_DEF.ref();
   XR_INS.index('STAN');
   XR_INS.prefix(XR_DEF.ref(),exec('name','users'),'U');
   {? XR_INS.first() & XR_INS.STAN='T'
   || return(_xr_def)
   ?}
?};

{? _xr_def<>null || _xr_def
|? _sd_def<>null || _sd_def
|| null
?}


\err_msg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Wyświetla komunikat o błędzie.
::   WE: _a - Rodzaj błędu.
::       _b - Identyfikator funkcji.
::       _c - Numer parametru (dla _a=2).
::       _d - Wymagany typ parametru (dla _a=2).
::  OLD: \err_msg/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
_nr:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_fn:={? var_pres('_b')=type_of('') || _b || '' ?};

_err:='Nieprawidłowe wywołanie funkcji %1 z biblioteki rap_zew.fml\n'@ [_fn];

{? _nr=1
|| _err+='Błędna liczba argumentów - działanie funkcji zostanie przerwane.'@
|? _nr=2 & var_pres('_c')=type_of(0)
|| _err+=
      'Błędna lista argumentów - parametr %1'@ [$_c]+' - '+
      {? var_pres('_d')=type_of(0) || 'oczekiwany typ liczbowy'@
      |? var_pres('_d')=type_of('') || 'oczekiwany typ napisowy'@
      |? var_pres('_d')=type_of(null) || 'oczekiwany typ wskaźnikowy'@
      || ''
      ?}+'.'
?};

FUN.info(_err)


\xr_ins_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Uzupełnia dane konfiguracji i ustawień XR i SD.
::   WE: _a [STRING] - symbol dziedziny
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_dom:=exec('domain_ref','#b_domain',_a);
{? _dom=null
|| return()
?};

:: raporty w Word
exec('reg_reps','rap_zew');

:: szablony dokumentów
SD_UINS.cntx_psh();
SD_UINS.index('STAN');
SD_BDEF.cntx_psh();
SD_BDEF.index('UNIQUE');
SD_BDEF.prefix(_dom);
_loop:=SD_BDEF.first();
{!
|? _loop
|! {? ~SD_UINS.find_key(SD_BDEF.SD_DEF,OPERATOR.USER,'U')
   || SD_UINS.blank();
      SD_UINS.SD_DEF:=SD_BDEF.SD_DEF;
      SD_UINS.USERS:=OPERATOR.USER;
      SD_UINS.RODZAJ:='U';
      SD_UINS.STAN:='N';
      SD_UINS.add()
   ?};
   _loop:=SD_BDEF.next()
!};
SD_BDEF.cntx_pop();
SD_UINS.cntx_pop();
~~


\xr_4_sd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Zwraca SYMBOL XR dla podanego SYMBOLU SD
::   WE: _a [STRING] - symbol definicji raportu
::   WY: kod
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_sym:=_a;

{? _sym='PKD_ZASWBWYP'       || 'zaswbwyp'
|? _sym='PKD_ZASWPRZAKT'     || 'zasw_okr'
|? _sym='PKD_ZASWSPOSOBWYPL' || 'zasw_wyn'
|? _sym='PKD_ZASWSW'         || 'zaswsw'
|? _sym='PKD_ZASWSWYP'       || 'zaswswyp'
|? _sym='PKD_ZASWWARP'       || 'zaswwarp'
|? _sym='PKD_ZASWWYSL'       || 'zaswwysl'
|? _sym='PKD_ZASWZMUM'       || 'zaswzmum'
|? _sym='PKD_ZASWZWYP'       || 'zaswzwyp'
|? _sym='PXX_UD'             || 'uz_umdz'
|? _sym='PXX_UZ'             || 'uz_umzc'
|? _sym='PXX_ZASWPLAC'       || 'zaswplac'
|? _sym='PXX_ZASWRODZ'       || 'zaswrodz'
|? _sym='PXX_ZASWUMAN'       || 'zaswuman'
|? _sym='PXX_ZASWUMAN_PRAUT' || 'zaswuman'
|? _sym='PXX_ZASWUMPR'       || 'zaswumpr'
|? _sym='PXX_ZASWUMPR_PRAUT' || 'zaswumpr'
|? _sym='PXX_ZASWZATR'       || 'zaswzatr'
|| ''
?}


\xr_ins_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Tworzy tabelę połączonych ustawień XR i SD.
::   WE: _a [STRING] - symbol dziedziny
::   WY: alias tabeli tymczasowej
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_sym:=_a;

_dom:=exec('domain_ref','#b_domain',_sym);
{? _dom=null
|| return()
?};

:: tabela połączonych ustawień
_TAB:=tab_tmp(2,
   'OPIS','STRING[%1]'[$MS.fld_len(XR_DEF,'OPIS')],'Opis raportu zewnętrznego'@,
   'NAZWA','STRING[%1]'[$MS.fld_len(SD_DEF,'NAZWA')],'Nazwa szablonów dokumentów'@,
   'XR_INS','STRING[16]',XR_INS.comment(),
   'XR_SYM','STRING[%1]'[$MS.fld_len(XR_DEF,'SYMBOL')],'Symbol raportu zewnętrznego'@,
   'XR_STAN','STRING[1]','Raport zewnętrzny'@,
   'SD_UINS','STRING[16]',SD_UINS.comment(),
   'SD_SYM','STRING[%1]'[$MS.fld_len(SD_DEF,'SYMBOL')],'Symbol szablonów dokumentów'@,
   'SD_STAN','STRING[1]','Szablon dokumentów'@
);

_TAB.fld_fml('OPIS','BEFORE_DISPLAY',"cur_tab(1,1).XR_INS<>''");
_TAB.fld_fml('NAZWA','BEFORE_DISPLAY',"cur_tab(1,1).SD_UINS<>''");

_TAB.fld_fml('XR_STAN','BEFORE_EDIT',"
   _TAB:=cur_tab(1,1);
   _TAB.XR_INS<>'' & _TAB.XR_STAN<>'X'
");
_TAB.fld_fml('XR_STAN','AFTER_EDIT',"
   _TAB:=cur_tab(1,1);
   {? _TAB.XR_STAN='N' & _TAB.SD_STAN<>'X'
   || _TAB.SD_STAN:='N'
   ?};
   1
");
_TAB.fld_fml('SD_STAN','BEFORE_EDIT',"
   _TAB:=cur_tab(1,1);
   _TAB.SD_UINS<>'' & _TAB.SD_STAN<>'X'
");
_TAB.fld_fml('SD_STAN','AFTER_EDIT',"
   _TAB:=cur_tab(1,1);
   {? _TAB.SD_STAN='T' & _TAB.XR_STAN<>'X'
   || _TAB.XR_STAN:='T'
   ?};
   1
");

:: zablokuj kolumny
_TAB.fld_attr(,2);

:: uzupełnij dane
XR_INS.cntx_psh();
XR_INS.index('VIEW');
XR_INS.prefix(_sym,exec('name','users'),'U');
SD_DEF.cntx_psh();
SD_UINS.cntx_psh();
SD_UINS.index('STAN');
SD_UINS.prefix();
SD_BDEF.cntx_psh();
SD_BDEF.index('UNIQUE');
SD_BDEF.prefix(_dom);
_loop:=SD_BDEF.first();
{!
|? _loop
|! {? SD_UINS.find_key(SD_BDEF.SD_DEF,OPERATOR.USER,'U')
   || _sds:=SD_BDEF.SD_DEF().SYMBOL;
      _TAB.blank();
      _TAB.XR_STAN:='X';
      _TAB.NAZWA:=SD_BDEF.SD_DEF().NAZWA;
      _TAB.SD_UINS:=$SD_UINS.ref();
      _TAB.SD_SYM:=_sds;
      {? SD_BDEF.SD_DEF().DOSTEPNY='N'
      || _TAB.SD_STAN:='X';
         {? SD_UINS.STAN='T'
         || SD_UINS.STAN:='N';
            SD_UINS.put()
         ?}
      || _TAB.SD_STAN:=SD_UINS.STAN
      ?};
      _xrs:=exec('xr_4_sd','rap_zew',_sds);
      {? XR_INS.find_tab(,'RAPORT','SYMBOL','=',_xrs)
      || _TAB.OPIS:=XR_INS.RAPORT().OPIS;
         _TAB.XR_STAN:=XR_INS.STAN;
         _TAB.XR_INS:=$XR_INS.ref();
         _TAB.XR_SYM:=_xrs
      ?};
      _TAB.add()
   ?};
   _loop:=SD_BDEF.next()
!};
SD_BDEF.cntx_pop();
SD_UINS.cntx_pop();
SD_DEF.cntx_pop();

:: uzupełnij o raporty drukowane w Word,
:: które nie mają odpowiednika w szablonach
XR_DEF.cntx_psh();
_loop:=XR_INS.first();
{!
|? _loop
|! _xrs:=XR_INS.RAPORT().SYMBOL;
   {? ~_TAB.find_tab(,'XR_SYM',,'=',_xrs)
   || _TAB.blank();
      _TAB.OPIS:=XR_INS.RAPORT().OPIS;
      _TAB.XR_STAN:=XR_INS.STAN;
      _TAB.XR_INS:=$XR_INS.ref();
      _TAB.XR_SYM:=_xrs;
      _TAB.SD_STAN:='X';
      _TAB.add()
   ?};
   _loop:=XR_INS.next()
!};
XR_DEF.cntx_pop();
XR_INS.cntx_pop();

_TAB


\xr_ins_panel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Tworzy tabelę i okna połączonych ustawień XR i SD.
::   WE: _a [STRING] - symbol dziedziny
::   WY: alias tabeli tymczasowej
::----------------------------------------------------------------------------------------------------------------------
_TAB:=exec('xr_ins_tabela','rap_zew',_a);

_TAB.win_sel(_wnd:=_TAB.mk_sel('Ustawienia wydruków'@,'P',,'#xr_ins_config',,,,,'U'));
_TAB.win_fld(_wnd,,'XR_STAN',,,,,,,,MS.comment(XR_INS,'STAN'),2,,"'T'","'N'","'X'");
_TAB.win_fld(_wnd,,'SD_STAN',,,,,,,,MS.comment(SD_UINS,'STAN'),2,,"'T'","'N'","'X'");
_TAB.win_fld(_wnd,,'OPIS',,,,,,,,MS.comment(XR_DEF,'OPIS'));
_TAB.win_fld(_wnd,,'NAZWA',,,,,,,,MS.comment(SD_DEF,'NAZWA'));
_TAB.win_act(_wnd,,'Formuła','Zmień'@,,'Zmiana sposobu przygotowania wydruku.'@,
   "exec('xr_ins_zmien_b','rap_zew',cur_tab(1,1))",
   "exec('xr_ins_zmien_a','rap_zew',cur_tab(1,1))",
   1
);
_TAB.win_act(_wnd,,'Rekord',,,,"
   _TAB:=cur_tab(1,1);
   _mod:=0;
   {? _TAB.XR_STAN<>'X' & XR_INS.seek(_TAB.XR_INS,,1) & _TAB.XR_STAN<>XR_INS.STAN
   || _TAB.XR_STAN:=XR_INS.STAN;
      _mod:=1
   ?};
   {? _TAB.SD_STAN<>'X' & SD_UINS.seek(_TAB.SD_UINS,,1) & _TAB.SD_STAN<>SD_UINS.STAN
   || _TAB.SD_STAN:=SD_UINS.STAN;
      _mod:=1
   ?};
   {? _mod<>0
   || _TAB.put()
   ?};
   ~~
");
_TAB.win_act(_wnd,,'Szukaj');
_TAB.win_act(_wnd,,'Kolejność');
_TAB.win_act(_wnd,,'Okienko',,,,
   "  XR_INS.cntx_psh();
      SD_UINS.cntx_psh();
      1
   ",
   "  SD_UINS.cntx_pop();
      XR_INS.cntx_pop();
      1
   "
);
_TAB.win_btn(_wnd,'text=%1'['Zmień'@],'menu:Z');

_TAB.win_edit(_wnd:=_TAB.mk_edit('Ustawienie wydruku'@,,'#xr_ins_edit'));
_TAB.win_esep(_wnd,'Dane podstawowe'@);
_TAB.win_efld(_wnd,,'XR_STAN',,,,,,,,MS.comment(XR_INS,'STAN'),'check-box',
   'left_label=1,check_label="%1"'['Przygotuj w programie zewnętrznym'@],
   "'T'","'N'"
);
_TAB.win_efld(_wnd,,'SD_STAN',,,,,,,,MS.comment(SD_UINS,'STAN'),'check-box',
   'left_label=1,check_label="%1"'['Użyj szablonów dokumentów'@],
   "'T'","'N'"
);
exec('ok_esc','#window',_TAB,_wnd,,,,,,,exec('text_red_ok','#window'));

_TAB.win_patt(_wnd:=_TAB.mk_edit('Ustawienie wydruku'@,,'#xr_ins_patt'));
_TAB.win_esep(_wnd,'Dane podstawowe'@);
_TAB.win_efld(_wnd,,'XR_STAN',,,,,,,,MS.comment(XR_INS,'STAN'),'radio-buttons',,
   'Dowolny'@,"''",
   'Włączony'@,"'T'",
   'Wyłączony'@,"'N'",
   'Niedostępny'@,"'X'"
);
_TAB.win_efld(_wnd,,'SD_STAN',,,,,,,,MS.comment(SD_UINS,'STAN'),'radio-buttons',,
   'Dowolny'@,"''",
   'Włączony'@,"'T'",
   'Wyłączony'@,"'N'",
   'Niedostępny'@,"'X'"
);
_TAB.win_efld(_wnd,,'OPIS',,,MS.fld_len(XR_DEF,'OPIS'),,1,,,MS.comment(XR_DEF,'OPIS'));
_TAB.win_efld(_wnd,,'NAZWA',,,MS.fld_len(XR_DEF,'OPIS'),,1,,,MS.comment(SD_DEF,'NAZWA'));
exec('ok_esc','#window',_TAB,_wnd,,,,,,,exec('text_red_ok','#window'));

_TAB


\xr_ins_zmien_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Przed akcją "Zmień" okna połączonych ustawień XR i SD.
::   WE: _a [TABLE] - alias tabeli ustawień
::   WY: 0/1 - porzucono edycję/wprowadzić zmiany
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_TAB:=_a;
_wnd:=_TAB.win_edit('?');

_TAB.efld_opt(_wnd,'enable=%1'[$(_TAB.XR_INS<>'' & _TAB.XR_STAN<>'X')],,'XR_STAN');
_TAB.efld_opt(_wnd,'enable=%1'[$(_TAB.SD_UINS<>'' & _TAB.SD_STAN<>'X')],,'SD_STAN');

_TAB.edit() & _TAB.put()


\xr_ins_zmien_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Obsługa akcji "Zmień" okna połączonych ustawień XR i SD.
::   WE: _a [TABLE] - alias tabeli ustawień
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_TAB:=_a;

XR_INS.prefix();
SD_UINS.prefix();

{? _TAB.XR_STAN<>'X' & XR_INS.seek(_TAB.XR_INS)
|| XR_INS.STAN:=_TAB.XR_STAN;
   XR_INS.put();
   _TAB.cntx_psh();
   _ins:=_TAB.XR_INS;
   _new:=_TAB.XR_STAN;
   {!
   |? _TAB.find_tab(,'XR_INS',,'=',_ins,'XR_STAN',,'<>',_new) & XR_INS.seek(_TAB.XR_INS)
   |! XR_INS.STAN:=_new;
      {? XR_INS.put()
      || _TAB.XR_STAN:=_new;
         {? _new='N' & _TAB.SD_STAN='T' & SD_UINS.seek(_TAB.SD_UINS)
         || SD_UINS.STAN:='N';
            {? SD_UINS.put()
            || _TAB.SD_STAN:='N'
            ?}
         ?};
         _TAB.put()
      ?}
   !};
   _TAB.cntx_pop();
   _TAB.get()
?};

{? _TAB.SD_STAN<>'X' & SD_UINS.seek(_TAB.SD_UINS)
|| SD_UINS.STAN:=_TAB.SD_STAN;
   SD_UINS.put()
?};
~~


\xr_ins_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Udostępnia do edycji listę ustawień wydruków.
::   WE: _a [STRING] - symbol dziedziny
::  OLD: \settings/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | _a=''
|| return()
?};
_sym:=_a;

exec('xr_ins_dane','rap_zew',_sym);

_TAB:=exec('xr_ins_panel','rap_zew',_sym);
_TAB.select()


\xr_ins_przelacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Zamienia wartość ustawień dla wydruku - przełącznik.
::  OLD: \swap_ins/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
XR_INS.STAN:={? XR_INS.STAN='N' || 'T' || 'N' ?};
XR_INS.put()


\xr_def_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Redagowanie szablonów raportów zewnętrznych.
::   WE: _a - Kod obszaru.
::   WY:
::  OLD: \template/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') || _dom:=_a || return() ?};

exec('reg_reps','rap_zew');

XR_TMP.cntx_psh();
XR_TMP.index('PLIK');
XR_TMP.win_edit('RED');

XR_DEF.cntx_psh();
XR_DEF.index('OPIS');
XR_DEF.prefix(_dom);
XR_DEF.win_sel('GWER');
XR_DEF.select();
XR_DEF.cntx_pop();

XR_TMP.cntx_pop();
~~


\xr_def_gwer_xr_def_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Po odświeżeniu okienka WER tabeli XR_DEF w ramach okienka grupowego GWER tabeli XR_DEF.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
grp_disp(XR_TMP,'WER')


\xr_def_gwer_xr_tmp_wer_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Przed obsługą okienka WER tabeli XR_TMP w ramach okienka grupowego GWER tabeli XR_DEF.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
XR_TMP.prefix(XR_DEF.ref())


\xr_tmp_raport_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2010]
:: OPIS: Wartość początkowa pola XR_TMP.RAPORT.
::   WE:
::   WY:
::  OLD: \xr_def/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
XR_DEF.ref()


\xr_tmp_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Rekord - przed" w okienku WER tabeli XR_TMP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_std:=exec('def_tmp','rap_zew');
_hid:={? XR_TMP.OPIS=_std || 'pu' || '' ?};
XR_TMP.actions_grayed('WER',_hid);
0


\xr_tmp_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.70]
:: OPIS: Obsługa akcji "Rekord - po" w okienku WER tabeli XR_TMP.
::   WY:
::  OLD: \spr_tmp/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
_chk:=__CHK.table(XR_TMP,-menu_txt()='popraw',,'PLIK','OPIS');
{? type_of(_chk)=type_of('') | ~_chk
|| return(_chk)
?};

_txt:=
   {? +XR_TMP.PLIK>MS.fld_len(XR_TMP,'PLIK')
   || 'Przekroczono długość nazwy pliku.'@

   |? (-XR_TMP.PLIK)+4<>'.doc'
   || 'Plik powinien mieć rozszerzenie "*.doc".'@

   |? XR_TMP.PLIK*'.m.'<>0
   || 'Niedozwolone znaki w nazwie pliku.'@

   |? fexists(XR_TMP.PLIK,1)<>1
   || 'Brak dostępu do pliku "%1".'@[pth_dir(XR_TMP.PLIK)+exec('sep','#file',1)+XR_TMP.PLIK]

   || ''
   ?};

{? _txt<>''
|| FUN.emsg(_txt);
   'PLIK'

|? 4+XR_TMP.PLIK<>(-XR_DEF.SYSTEM)+'_' & ~FUN.ask(
      'Nazwa pliku nie rozpoczyna się od kodu obszaru (%1_*.doc).\n'
      'Czy akceptujesz?'@[-XR_DEF.SYSTEM]
   )
|| 'PLIK'

|| 1
?}


\xr_tmp_plik_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.70]
:: OPIS: Obsługa akcji F3 dla pola XR_TMP.PLIK. Udostępnia listę plików *.DOC, które mogą być wykorzystane jako
::       szablony raportów.
::  OLD: \lst_tmp/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
_pliki:=files((-XR_DEF.SYSTEM)+'_*.doc');
_ws:=_pliki.mk_sel('Dokumenty'@,,1,'#xr_tmp_plik',,,,,'U');
_pliki.win_act(_ws,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
_pliki.win_act(_ws,,'Szukaj');
_pliki.win_act(_ws,,'Kolejność');
_pliki.win_sel(_ws);

_pliki.win_edit(_pliki.mk_edit('Dokument'@,1,'#xr_tmp_plik'));

{? _pliki.first()
|| _max:=MS.fld_len(XR_TMP,'PLIK');
   {!
   |? _name:=_pliki.FILENAME;
      {? +_name<=_max & _name*'.m.'=0
      || _pliki.next()
      || _pliki.del()
      ?}
   !}
?};

_pliki.first();
{? _pliki.select()
|| _pliki.FILENAME
?}


\ins_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Formuła dodaje zapisy do tabeli SD_UPAR lub XR_PAR. Należy pamiętać o ograniczeniu liczby argumentów funkcji.
::   WE: _a    - Instancja raportu.
::       _b    - Numer wiersza.
::       ...
::       _n    - Identyfikator parametru.
::       _n+1  - Wartość parametru.
::  OLD: \ins_par/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
: Wstępna weryfikacja wywołania.
{? _<=3 | _%*2<>0
|| exec('err_msg','rap_zew',1,'ins_par');
   return()
?};

{? var_pres('_[1]')<>type_of(null)
|| exec('err_msg','rap_zew',2,'ins_par',1,null());
   return()
|? var_pres('_[2]')<>type_of(0)
|| exec('err_msg','rap_zew',2,'ins_par',2,0);
   return()
?};

: Dozwolone tylko poprawne wywołanie!
{! _arg:=3 // 2
|? _arg<=_-1
|! {? var_pres('_['+$_arg+']')<>type_of('')
   || exec('err_msg','rap_zew',2,'ins_par',_arg,'');
      return()
   ?}
!};

{? ref_tab(_a)=XR_INS
|| XR_PAR.clear();
   XR_PAR.blank();

   XR_PAR.RAPORT:=_a;
   XR_PAR.WIERSZ:=_b;

   {! _arg:=3 // 2
   |? _arg<=_-1
   |! XR_PAR.NAZWA:=_[_arg];
      XR_PAR.WARTOSC:=exec('val2fml','#convert',_[_arg+1],type_of(_[_arg+1]));
      XR_PAR.add()
   !}

|? ref_tab(_a)=SD_UINS
|| SD_UPAR.clear();
   SD_UPAR.blank();

   SD_UPAR.SD_UINS:=_a;
   SD_UPAR.WIERSZ:=_b;

   {! _arg:=3 // 2
   |? _arg<=_-1
   |! SD_UPAR.NAZWA:=_[_arg];
      SD_UPAR.WARTOSC:=exec('val2fml','#convert',_[_arg+1],type_of(_[_arg+1]));
      SD_UPAR.add()
   !}
?}


\del_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Formuła usuwa rekordy z tabeli XR_PAR lub SD_UPAR.
::       Zależnie od typu argumentów ustalany jest właściwy indeks.
::   WE: _a, _b, _c - Ograniczenia nakładane na dziedzinę tabeli XR_PAR.
::  OLD: \del_par/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) | var_pres('_a')=type_of(0)
|| {? ~_a || return(0) ?}
|| return(0)
?};

_b:={? var_pres('_b')=type_of(0) | var_pres('_b')=type_of('') || _b || ~~ ?};
_c:={? var_pres('_c')=type_of(0) | var_pres('_c')=type_of('') || _c || ~~ ?};

{? ~type_of(_b)
|| _b:=_c;
   _c:=~~
?};
{? type_of(_b) & type_of(_b)=type_of(_c)
|| _c:=~~
?};

XR_PAR.index({? type_of(_b)=type_of('') || 'WIERSZ' || 'NAZWA' ?});
{? type_of(_b)
|| {? type_of(_c)
   || XR_PAR.prefix(_a,_b,_c)
   || XR_PAR.prefix(_a,_b)
   ?}
|| XR_PAR.prefix(_a)
?};
{? XR_PAR.first()
|| {! |? XR_PAR.del() !};
   return()
?};

SD_UPAR.index({? type_of(_b)=type_of('') || 'WIERSZ' || 'NAZWA' ?});
{? type_of(_b)
|| {? type_of(_c)
   || SD_UPAR.prefix(_a,_b,_c)
   || SD_UPAR.prefix(_a,_b)
   ?}
|| SD_UPAR.prefix(_a)
?};
{? SD_UPAR.first()
|| {! |? SD_UPAR.del() !}
?}


\usr_ins
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Formuła wyszukuje instancję raportu o podanym symbolu, rodzaju oraz stanie przetwarzania, dostępną dla
::       użytkownika.
::   WE: _a - Symbol raportu lub wskazanie na rekord.
::       _b - Rodzaj instancji [domyślnie: R - raport].
::       _c - Stan przetwarzania [domyślnie: T - wykonywany].
::   WY: null lub wskazanie instancji
::  OLD: \usr_ins/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
_def:=
   {? var_pres('_a')=type_of(null()) & _a || _a
   |? var_pres('_a')=type_of('') & _a<>'' || exec('get_def','rap_zew',_a)
   ?};
{? ~_def || return(0) ?};

_inst:={? var_pres('_b')=type_of('') & _b<>'' || _b || 'R' ?};
_stan:={? var_pres('_c')=type_of('') || _c || 'T' ?};

SD_UINS.index('STAN');
SD_UINS.prefix(_def,OPERATOR.USER,_inst,_stan);
{? SD_UINS.first()
|| return(SD_UINS.ref())
?};

XR_INS.index('STAN');
XR_INS.prefix(_def,exec('name','users'),_inst,_stan);
{? XR_INS.first()
|| return(XR_INS.ref())
?};

null


\seek_ins
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Formuła ustawia wskaźnik tabeli XR_INS lub SD_UINS na podanym argumentem rekordzie.
::   WE: _a [REFERENCE/INTEGER] - wskazanie na rekord lub numer rekordu w tabeli SD_UINS lub XR_INS.
::       [_b] [INTEGER] - przygotowanie z użyciem szablonów (0/1)
::   WY: wskazanie wiersza lub null
::  OLD: \seek_ins/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of(null) & _a<>null
|| {? ref_tab(_a).seek(_a,,1)
   || return(_a)
   ?}

|? type_of(_a)=type_of(0) & _a<>0
|| {? var_pres('_b')=type_of(0) & _b<>0
   || {? SD_UINS.seek(_a,,1)
      || return(SD_UINS.ref())
      ?}
   ?};
   {? XR_INS.seek(_a,,1)
   || return(XR_INS.ref())
   ?}
?};

null


\del_ins
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Formuła usuwa instancję raportu wraz z jej parametrami.
::   WE: _a [REFERENCE/INTEGER] - wskazanie lub numer rekordu w tabeli XR_INS lub SD_UINS.
::   WY: 0 - Usunięcie instancji raportu nie powiodło się.
::       1 - Instancja raportu została usunięta.
::  OLD: \del_ins/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) | var_pres('_a')=type_of(0)
|| {? ~_a || return(0) ?}
|| return(0)
?};

{? (_ins:=exec('seek_ins','rap_zew',_a))=null
|| return(0)
?};

_TAB:=ref_tab(_ins);
_TAB.clear();
{? _TAB.r_lock(1,1)
|| exec('del_par','rap_zew',_ins);
   _TAB.r_unlock();
   return(_TAB.del(,1))
?}


\rep_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Formuła dla pracy w środowisku Windows zwraca informację o ustawieniach użytkownika dla danego raportu.
::       Dla pracy w środowisku innym niż Windows zawsze 'N' - wydruk nie wykorzystuje programu word.
::   WE: _a [STRING] - symbol raportu
::       [_b] [INTEGER] - wykonanie tylko z użyciem szablonów
::   WY: Odpowiedź na pytanie: czy wydruk ma być wykonany przez program zewnętrzny?
::          'T' - Tak.
::          'N' - Nie.
::  OLD: \rep_set/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
{? sys_name(0)='U_LINUX'
|| return('N')
?};
_new:=(var_pres('_b')=type_of(0) & _b<>0);
{? (_def:=exec('get_def','rap_zew',_a,_new))=null
|| return('N')
?};

{? ref_tab(_def)=SD_DEF
|| SD_UINS.index('STAN');
   SD_UINS.prefix(_def,OPERATOR.USER,'U');
   {? SD_UINS.first() & SD_UINS.STAN='T'
   || return('T')
   ?}

|? ref_tab(_def)=XR_DEF
|| XR_INS.index('STAN');
   XR_INS.prefix(_def,exec('name','users'),'U');
   {? XR_INS.first() & XR_INS.STAN='T' & ~exec('interm','#system')
   || return('T')
   ?}
?};

'N'


\wait
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Funkcja wyczekiwania na zakończenie przygotowywania lub drukowania tego samego raportu przez użytkownika
::       o identycznym identyfikatorze.
::   WE: _a - Treść formuły warunkującej zakończenie pętli oczekiwania.
::       _b - Alias tabeli zawierającej instancje raportów.
::   WY: 0 - Użytkownik zrezygnował z oczekiwania lub przerwał oczekiwanie.
::       1 - Przygotowanie i drukowanie tego samego raportu przez użytkownika o tym samym identyfikatorze zakończyło
::           się.
::  OLD: \wait/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
_TAB:=_b;

_usr:=
   {? _TAB=XR_INS  || XR_INS.OPERATOR
   |? _TAB=SD_UINS || SD_UINS.USERS().DANE
   || ''
   ?};

_def:=
   {? _TAB=XR_INS  || XR_INS.RAPORT
   |? _TAB=SD_UINS || SD_UINS.SD_DEF
   || ''
   ?};

_todo:=FUN.choice(
   SD_UINS.SD_DEF().NAZWA+'\n\n'+
   'Sprawozdanie jest obecnie przygotowywane lub drukowane\n'
   'przez innego użytkownika zalogowanego jako %1.\n'
   'Czy czekać w kolejce?'@[_usr],3,'Odblokuj'@,'Tak'@,'Nie'@,,'');

{? _todo=1
:: Odblokowanie kolejki.
|| {? exec('usr_ins','rap_zew',_def,'R','')
   || _msg:=1;
      {!
      |? {? exec('del_ins','rap_zew',_TAB.ref())
         || {? _msg
            || FUN.info('Odblokowanie raportu zakończone sukcesem.\nProszę ponownie przygotować raport.'@);
               _msg:=0
            ?};
            1
         || FUN.info('Odblokowanie raportu nie powiodło się.'@);
            0
         ?} & exec('usr_ins','rap_zew',_def,'R','')
      !}
   || FUN.info(
         {? _TAB.STAN='?'
         || 'Raport jest przygotowywany przez użytkownika %1.'@ [_usr]
         || 'Raport jest drukowany przez użytkownika %1.'@ [_usr]
         ?}+'\n'+
         'Wymuszenie odblokowania w tej chwili nie jest możliwe.'@
      )
   ?};
   return(0)

|? _todo=2
:: Czekamy.
|| echo('Naciśnij %1 aby zakończyć oczekiwanie.'@ [{? sys_name(0)='U_LINUX' || 'Esc' || 'Ctrl+Break' ?}]);
   {!
   |? ~($('_a.'+_a))(_TAB)
   |! {? escape() || return(0) ?}
   !}

|| return(0)
?};
1


\new_ins
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Formuła tworzy instancję raportu.
::   WE: _a [STRING] - symbol raportu
::   WY: Jeżeli instancja została prawidłowo utworzona, funkcja zwróci wskazanie na reprezentujący ją rekord.
::       W przeciwnym razie wynikiem będzie null() - również w przypadku błędów argumentu wywołania.
::  OLD: \new_ins/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | _a=''
|| return(null)
?};
{? (_def:=exec('get_def','rap_zew',_a))=null
|| return(null)
?};

_ret:=null;

{? ref_tab(_def)=XR_DEF
|| XR_INS.blank();
   XR_INS.RAPORT:=_def;
   XR_INS.OPERATOR:=exec('name','users');
   XR_INS.RODZAJ:='R';
   XR_INS.STAN:='?';
   XR_INS.DATA:=date();
   XR_INS.GODZINA:=time();

   _todo:=-1;
   XR_INS.clear();
   {? ~XR_INS.add(1)
   || _todo:=exec('wait','rap_zew','add(1)',XR_INS)
   ?};
   {? _todo<>0
   || {? XR_INS.r_lock(1,1)
      || _ret:=XR_INS.ref()
      || XR_INS.del()
      ?}
   ?}

|? ref_tab(_def)=SD_DEF
|| SD_UINS.blank();
   SD_UINS.SD_DEF:=_def;
   SD_UINS.USERS:=OPERATOR.USER;
   SD_UINS.RODZAJ:='R';
   SD_UINS.STAN:='?';
   SD_UINS.DATA:=date();
   SD_UINS.GODZINA:=time();

   _todo:=-1;
   SD_UINS.clear();
   {? ~SD_UINS.add(1)
   || _todo:=exec('wait','rap_zew','add(1)',SD_UINS)
   ?};
   {? _todo<>0
   || {? SD_UINS.r_lock(1,1)
      || _ret:=SD_UINS.ref()
      || SD_UINS.del()
      ?}
   ?}
?};

_ret


\rep_ins
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Formuła ustala instancje raportu o podanym identyfikatorze właściwą dla danego użytkownika.
::   WE: _a [STRING] - symbol raportu
::   WY: null lub instancja raportu
::  OLD: \rep_ins/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~(var_pres('_a')=type_of('') & _a<>'')
|| return(null())
?};

{? (_ins:=exec('usr_ins','rap_zew',_a))=null
|| return(null)
?};

_TAB:=ref_tab(_ins);
_TAB.clear();
{? _TAB.r_lock(1,1)
|| return(_TAB.ref())
?};

null


\ready
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Formuła sprawdza, czy instancja raportu (dana wskazaniem) reprezentuje raport gotowy do wydruku.
::   WE: _a - Wskazanie na rekord lub numer rekordu w tabeli SD_UINS.
::   WY: 0 - Raport nie może być drukowany.
::       1 - Raport gotowy do wydruku.
::  OLD: \ready/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) | var_pres('_a')=type_of(0)
|| {? ~_a || return(0) ?}
|| return(0)
?};

{? (_ins:=exec('seek_ins','rap_zew',_a))=null
|| return()
?};

_todo:=-1;

{? ref_tab(_ins)=XR_INS
|| XR_PAR.index('WIERSZ');
   XR_PAR.prefix(_a);
   {? ~XR_PAR.first()
   || return(0)
   ?};
   XR_INS.clear();
   {? XR_INS.r_lock(1,1)
   || XR_INS.STAN:='T';
      {? ~XR_INS.put(1)
      || _todo:=exec('wait','rap_zew','put(1)',XR_INS)
      ?};
      XR_INS.r_unlock()
   ?}

|? ref_tab(_ins)=SD_UINS
|| SD_UPAR.index('WIERSZ');
   SD_UPAR.prefix(_a);
   {? ~SD_UPAR.first()
   || return(0)
   ?};
   SD_UINS.clear();
   {? SD_UINS.r_lock(1,1)
   || SD_UINS.STAN:='T';
      {? ~SD_UINS.put(1)
      || _todo:=exec('wait','rap_zew','put(1)',SD_UINS)
      ?};
      SD_UINS.r_unlock()
   ?}
?};

_todo<>0


\use_odc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.10]
:: OPIS: Zwraca tekst, który będzie wykorzystany jako zawartość pliku *.odc.
::   WY: tekst
::  OLD: \use_odc/skid_xr.fml
:: ~OST: INODBCDSN
::----------------------------------------------------------------------------------------------------------------------
'<html>\n'
' <head>\n'
'  <meta http-equiv=Content-Type content="text/x-ms-odc; charset=utf-8">\n'
'  <meta name=ProgId content=ODC.Database>\n'
'  <meta name=SourceType content=OLEDB>\n'
'  <meta name=Catalog content=kali>\n'
'  <xml id=docprops>\n'
'   <o:DocumentProperties xmlns:o="urn:schemas-microsoft-com:office:office" xmlns="http://www.w3.org/TR/REC-html40">\n'
'  </xml>\n'
'  <xml id=msodc>\n'
'   <odc:OfficeDataConnection xmlns:odc="urn:schemas-microsoft-com:office:odc" '
                             'xmlns="http://www.w3.org/TR/REC-html40">\n'
'    <odc:Connection odc:Type="OLEDB">\n'
'     <odc:ConnectionString>'
'      Provider=MSDASQL.1;Persist Security Info=True;Initial Catalog=kali;Extended Properties=&quot;{odbc_dsn()}&quot;'
'     </odc:ConnectionString>\n'
'    </odc:Connection>\n'
'   </odc:OfficeDataConnection>\n'
'  </xml>\n'
' </head>\n'
' <body></body>\n'
'</html>'


\use_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.70]
:: OPIS: Formuła uruchamia proces tworzenia raportu zewnętrznego z wykorzystaniem szablonu wskazanego przez użytkownika.
::       Jeśli dla danego raportu istnieje tylko jeden szablon, to właśnie on będzie wykorzystany a okienko dialogowe
::       nie będzie wyświetlone.
::   WE: _a - Identyfikator lub instancja raportu.
:: ~OST: INODBCDSN,INSYSEXEC
::  OLD: \use_tmp/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
_def:=
   {? var_pres('_a')=type_of('') & _a<>''
   || exec('get_def','rap_zew',_a)
   |? var_pres('_a')=type_of(0) | var_pres('_a')=type_of(null)
   || exec('seek_ins','rap_zew',_a)
   || null()
   ?};
{? _def=null() || return() ?};

_szablon:=obj_new('doc','opis');
_szablon.doc:=_szablon.opis:='';

XR_TMP.cntx_psh();
XR_TMP.index('OPIS');
XR_TMP.prefix();
XR_TMP.f_set('OPIS',,'RAPORT=:_a',_def);
XR_TMP.f_each("{? ~fexists(XR_TMP.PLIK,1) || XR_TMP.f_del() ?}");
{? XR_TMP.f_size()>1
|| _ws:=XR_TMP.mk_sel('Raporty'@,'N',,'#xr_tmp_wyb',,,,,'P');
   XR_TMP.win_fld(_ws,,'OPIS',,,,,,XR_DEF.OPIS,0);
   XR_TMP.win_act(_ws,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
   XR_TMP.win_sel(_ws);
   XR_TMP.win_edit();
   {? XR_TMP.select()
   || _szablon.doc:=XR_TMP.PLIK;
      _szablon.opis:=XR_TMP.OPIS;
      _mod_tmp:=gsub(_szablon.doc,'.doc','.m.doc');
      {? fexists(_mod_tmp,1)
      || _szablon.doc:=_mod_tmp
      ?}
   ?};
   XR_TMP.win_sel();
   XR_TMP.win_del(_ws)
|? XR_TMP.f_first()
|| _szablon.doc:=XR_TMP.PLIK;
   _szablon.opis:=XR_TMP.OPIS;
   _mod_tmp:=gsub(_szablon.doc,'.doc','.m.doc');
   {? fexists(_mod_tmp,1)
   || _szablon.doc:=_mod_tmp
   ?}
|| FUN.emsg('%1 - w systemie nie znaleziono żadnego szablonu wydruku.'@ [XR_DEF.OPIS])
?};
XR_TMP.f_clear();
XR_TMP.cntx_pop();

{? _szablon.doc=''
|| return()
?};
_szablon.doc:=__FileLayer.real_name(_szablon.doc);

_name:='@!Tmp\\'+_szablon.doc+'.odc';
{? _cfg:=fopen(_name,'w')
|| {? var_pres('__ODBCDSN')<>type_of('') || __ODBCDSN:=maz_utf8(odbc_dsn()) ?};
   _odc:=gsub(exec('use_odc','rap_zew'),'{odbc_dsn()}',__ODBCDSN);
   fwrite(_cfg,_odc);
   fclose(_cfg)
|| FUN.emsg('Wystąpił błąd dostępu do pliku konfiguracyjnego.'@);
   return()
?};

_ok:=1;
_patname:='@!Tmp/macrotmp.doc';
{? fexists(_patname,0)
|| {? ~ferase(_patname)
   || FUN.emsg(
         'Brak dostępu do pliku roboczego %1\n'
         'Dokument nie zostanie załączony.\n'
         'Prawdopodobnie otwarta jest inna instancja programu Word.'@ [_patname]
      );
      _ok:=0;
::    wyczyszczenie zmiennej globalnej
      {? var_pres('par')>0 & var_pres('ZAL',par)=type_of('')
      || par.ZAL:=''
      ?}
   ?}
?};
{? _ok
|| {? fexists(_szablon.doc,1)
   || sys_exec(_szablon.doc,,1)
   || FUN.emsg(
         'Brak dostępu do szablonu %1.\n(%2).'
         [_szablon.opis,pth_dir(_szablon.doc)+exec('sep','#file',1)+_szablon.doc]
      )
   ?}
?};
{? fexists(_name)
|| ferase(_name)
?}


\merge
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Formuła przepisuje zawartość tabeli SD_UPAR do pól bufora danych wydruku.
::   WE: _a - alias do bufora danych wydruku.
::       _b - wskazanie lub numer instancji wydruku.
::       [_c] - symbol raportu
::  OLD: \merge/skid_xr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(XR_DEF)
|| return(0)
?};
{? var_pres('_b')=type_of(null()) | var_pres('_b')=type_of(0)
|| {? ~_b || return(0) ?}
|| return(0)
?};
_new:=0;
{? var_pres('_c')=type_of('') & _c<>''
|| _new:=(exec('rep_set','rap_zew',_c,1)='T')
?};

{? (_ins:=exec('seek_ins','rap_zew',_b,_new))=null
|| return()
?};

{? ref_tab(_ins)=XR_INS
|| XR_PAR.index('NAZWA');
   _ROW:=sql(
      'select distinct WIERSZ as NR '
      'from XR_PAR '
      'where RAPORT=:_a '
      'order by 1',
      _ins
   );
   _loop:=_ROW.first();
   {!
   |? _loop
   |! XR_PAR.prefix(_ins,_ROW.NR);
      _a.blank();
      {! _nr:=1 .. _a.fld_num()
      |! {? XR_PAR.find_key(_a.fld_acr(_nr))
         || _a[_nr]:=exec('str2val','#convert',XR_PAR.WARTOSC)
         ?}
      !};
      _a.add();
      _loop:=_ROW.next()
   !}

|? ref_tab(_ins)=SD_UINS
|| SD_UPAR.index('NAZWA');
   _ROW:=sql(
      'select distinct WIERSZ as NR '
      'from SD_UPAR '
      'where SD_UINS=:_a '
      'order by 1',
      _ins
   );
   _loop:=_ROW.first();
   {!
   |? _loop
   |! SD_UPAR.prefix(_ins,_ROW.NR);
      _a.blank();
      {! _nr:=1 .. _a.fld_num()
      |! {? SD_UPAR.find_key(_a.fld_acr(_nr))
         || _val:=exec('str2val','#convert',SD_UPAR.WARTOSC);
            {? type_of(_a[_nr])=type_of(_val)
            || _a[_nr]:=_val
            ?}
         ?}
      !};
      _a.add();
      _loop:=_ROW.next()
   !}
?}

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 11167365117f20b9f3cc476b784d6507f31e30aed491cc747289ccd98fed04ea94561f1d8958a86a92812582a9ab57045698a26ecc11740c16e9eca8b47ef6f35bc29743a9635bece14c4d9c33495ea0da1e1c048c4351c5c528c47d227d7170d1a73e40903166d617f9adc5bcdfb5cf77d55e60af67ea203c75887505a715f2
