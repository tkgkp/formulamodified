:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: magdok_wymiary.fml
:: Utworzony: 02.12.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Obsługa wymiarów magazynowych
::======================================================================================================================


\akcreorg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: akceptacja reorganizacji
::   WE: [_a] - ref DK_LN domyslnie DK_LN.ref()
::       [_b] - czy pytac domyslnie 1
::  OLD: \akcreorg/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=DK_LN.ref() ?} || _a:=DK_LN.ref() ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};
DK_LN.get();
_tab:=DK_LN.sel_aget();
DK_LN.sel_adel();
{? _tab.size()
|| DK_LN.cntx_psh();
   {? FUN.ask('Czy zaakceptować zaznaczone reorganizacje?'@) & _tab.first()
   || {!
      |? {? (DK_LN.clear(); DK_LN.seek(_tab.REF,)) || exec('akcreone','magdok_wymiary',DK_LN.ref(),0) ?};
         _tab.next()
      !}
   ?};
   DK_LN.cntx_pop()
|| exec('akcreone','magdok_wymiary',_a,_b)
?}


\akcreone
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: akceptacja reorganizacji
::   WE: [_a] - ref DK_LN domyslnie DK_LN.ref()
::       [_b] - czy pytac domyslnie 1
::  OLD: \akcreone/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=DK_LN.ref() ?} || _a:=DK_LN.ref() ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};

_lock:=1;
_czyinw:=exec('czy_zinw','magdok_wspolne',$DK_LN.ref());
_czykwd:=DK_LN.RODZ='K';
_bezpoz:={? DK_LN.RODZ<>'I'
         || exec('FindInSet','#table','DK_L','DK_LN',DK_LN.ref(),'Z')=null
         || {? _czyinw
            || exec('FindInSet','#table','DK_L','DK_LN',DK_LN.ref(),'Z')=null
            || exec('FindInSet','#table','DK_LI','DK_LN',DK_LN.ref())=null
            ?}
         ?};
{? ~DK_LN.r_lock(1,1,1)
|| _lock:=0;
   {? _b & FUN.ask('Dokument reorganizacji obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@) & DK_LN.r_lock(1,,1)
   || DK_LN.r_unlock()
   ?};
   0
|? DK_LN.AKC='T'
|| {? _b || FUN.info('Reorganizacja zaakceptowana.'@) ?};
   0
|? exec('eann2zk','magdok_wspolne',DK_LN.ref())<>''
|| {? _b || FUN.info('Reorganizacja przesłana na urządzenie mobilne.\nAkceptacja niemożliwa.'@) ?};
   0
|? _bezpoz
|| {? _b || FUN.info('Brak pozycji reorganizacji.\nAkceptacja niemożliwa.'@) ?};
   0
|? _b & DK_LN.RODZ='I' & ~_czyinw & exec('spr_nakc','magdok_wymiary')
|| 0
|? DK_LN.MG().PAL='N' & ~_czyinw & ~_czykwd & exec('get','#params',600200,2)='T' & ~exec('ctrl_wym','magdok_wspolne',1,1)
|| {? _b || FUN.info('Wymagana poprawa ilości wg wymiarów na pozycjach reorganizacji.\n\nAkceptacja niemożliwa.'@) ?};
   0
|? DK_LN.MG().PAL='N' & ~_czyinw & ~_czykwd  & ~exec('ctrl_setw','magdok_wspolne')
|| {? _b
   || FUN.info('Wymagana poprawa ilości dla podanych terminów ważności na pozycjach reorganizacji.\n'
               'Dotyczy pozycji, dla których termin ważności jest wprowadzony dla danej dostawy.\n\n'
               'Akceptacja niemożliwa.'@)
   ?};
   0
|? ~_b | FUN.ask('Czy zaakceptować reorganizację magazynu?'@)
||
   _pal:=tab_tmp(1,'PAL','STRING[16]',''
           ,'BEZ','INTEGER',''
           ,'OLD','STRING[16]','');
   _poz:=tab_tmp(3,'PAL','STRING[16]',''
           ,'MAT','STRING[16]',''
           ,'TW','DATE',''
           ,'IL','REAL',''
           ,'SC','STRING[16]','');
   _czytran:=do_state();
   {? ~_czytran || do() ?};
   DK_LN.cntx_psh();
   DK_LN.clear();
   {? DK_LN.seek(_a)
   ||
      _czy_inw:=DK_LN.RODZ='I' & exec('czy_zinw','magdok_wspolne',$DK_LN.ref());
      _bo_pal:=DK_LN.RODZ='B';
      _z_czyt:=exec('FindInSet','#table','EANN','AKT',$DK_LN.ref(),'T')<>null;
::    jesli magazyn paletowy to rozpisuje pozycje wg palet
      {? ~_bo_pal & DK_LN.MG().PAL='T' & DK_LN.RODZ<>'D' & ~_czy_inw
      || exec('pal2dk_l','magdok_wymiary',DK_LN.ref())
      ?};
::    jesli Spis lokalizacji to dodaje rekordy wg DK_LI
      {? DK_LN.RODZ='I' & ~_czy_inw
      || _domlok:=DK_LN.MG().EANL;
         DK_LI.index('DK_LN');
         DK_LI.prefix(DK_LN.ref());
         {? DK_LI.first()
         || {!
            |? SL.index('EANL');
               SL.prefix(DK_LN.MG,DK_LI.EANL);
               {? SL.first()
               || {!
                  |?
::                   tak jest na SL-u
                     SLD.index('SL');
                     SLD.prefix(SL.ref());
                     {? SLD.first()
                     || {!
                        |? exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),SL.EANL,_domlok,SL.TW
                            ,{? DK_LN.RODZ='I' || SL.TW || date(0,0,0) ?},SL.IL,DK_LN.MG,SL.M,1,,SL.PAL,SL.PAL
                            ,,,SLD.SCEAN);
                           SLD.next()
                        !}
                     || exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),SL.EANL,_domlok,SL.TW
                         ,{? DK_LN.RODZ='I' || SL.TW || date(0,0,0) ?},SL.IL,DK_LN.MG,SL.M,1,,SL.PAL,SL.PAL)
                     ?};
                     SL.next()
                  !}
               ?};
               DK_LI.next()
            !}
         ?}
      ?};
      DK_L.index('DK_LN');
      DK_L.prefix('Z',DK_LN.ref());
      {? DK_L.first()
      || {!
         |? {? ~_bo_pal
            || DK_L.cntx_psh();
               DK_L.clear();
               DK_L.LOK:=DK_L.LOKDO;
               DK_L.TW:=DK_L.TWDO;
               DK_L.PAL:=DK_L.PALDO;
               DK_L.Z_DO:='D';
               DK_L.Z:='T';
               exec('reoIL2','magdok_wymiary');
               exec('uzupIDkod','magdok_palety',DK_L);
               {? ~DK_L.add(1) || undo() ?};
               DK_L.cntx_pop();
               DK_L.IL:=-DK_L.IL;
               exec('reoIL2','magdok_wymiary')
            || DK_L.LOKDO:=DK_L.LOK;
               DK_L.put(1)
            ?};
            DK_L.Z:='T';
            exec('reoIL2','magdok_wymiary');
            {? DK_L.put(1)
            || _bezpoz:=0;
               _refpal:='';
               {? (DK_L.PAL<>null() & DK_L.PAL().STAN='I') | (DK_L.PALDO<>null() & DK_L.PALDO().STAN='I')
               || _war:=(DK_L.PAL<>null() & DK_L.PAL().STAN<>'I');
                  _poz.clear();
                  _poz.blank();
                  _poz.PAL:={? _war || $DK_L.PAL || $DK_L.PALDO ?};
                  _poz.MAT:=$DK_L.M;
                  _poz.TW:={? _war || DK_L.TW || DK_L.TWDO ?};
                  _poz.IL:={? _war || 1 || -1 ?}*DK_L.IL;
                  _poz.add(1)
               ?};
               {? DK_L.PAL<>null & DK_L.PAL().STAN<>'I'
               || {? (_pal.clear(); ~_pal.find_key($DK_L.PAL))
                  || _pal.blank();
                     _pal.PAL:=$DK_L.PAL;
                     _pal.BEZ:=DK_L.PAL().AKT='T' & exec('FindInSet','#table','PAL_POZ','PAL',DK_L.PAL)=null;
                     {? DK_L.PALDO<>null() & _czy_inw || _pal.OLD:=$DK_L.PALDO || _pal.OLD:='' ?};
                     _pal.add(1)
                  ?};
                  _bezpoz:=_pal.BEZ;
                  _refpal:=$DK_L.PAL
               ?};
               {? DK_L.PALDO<>null & DK_L.PALDO().STAN<>'I' & (_pal.clear(); ~_pal.find_key($DK_L.PALDO))
               || _pal.blank();
                  _pal.PAL:=$DK_L.PALDO;
                  _pal.BEZ:=DK_L.PAL().AKT='T' & exec('FindInSet','#table','PAL_POZ','PAL',DK_L.PAL)=null;
                  {? DK_L.PAL<>null() & _czy_inw || _pal.OLD:=$DK_L.PAL || _pal.OLD:='' ?};
                  _pal.add(1)
               ?};
               {? ~_z_czyt & _bo_pal & _bezpoz & _refpal<>''
               ||
::                dodajemy pozycje do palety
                  PAL.cntx_psh();
                  PAL_POZ.cntx_psh();
                  PAL.clear();
                  {? PAL.seek(_refpal)
                  || PAL_POZ.use('paletyp');
                     PAL_POZ.clear();
                     PAL_POZ.blank();
                     PAL_POZ.PAL:=PAL.ref();
                     PAL_POZ.M:=DK_L.M;
                     PAL_POZ.IL:=PAL_POZ.ILP:=DK_L.IL;
                     PAL_POZ.TW:=DK_L.TW;
                     PAL_POZ.AKT:='T';
                     PAL_POZ.RSQL:='';
                     PAL_POZ.JM:=PAL_POZ.M().J;
                     PAL_POZ.STATS:=null;
                     exec('uzupIDkod','magdok_palety',PAL_POZ);
                     PAL_POZ.add(1)
                  ?};
                  PAL.cntx_pop();
                  PAL_POZ.cntx_pop()
               ?};
               _paleta:={? DK_L.PAL<>null() & DK_L.PAL().STAN<>'I' || DK_L.PAL || null() ?};
               {? ~exec('adddelsl','magazyn_stan',DK_L.MG,DK_L.M,DK_L.LOK,DK_L.TW,DK_L.IL,1,_paleta
                    ,DK_L.SCEAN,DK_L.IL2)
               || undo()
               || _paleta:={? DK_L.PALDO<>null() & DK_L.PALDO().STAN<>'I' || DK_L.PALDO || null() ?};
                  {? ~exec('adddelsl','magazyn_stan',DK_L.MG,DK_L.M,DK_L.LOKDO,DK_L.TWDO,DK_L.IL,-1,_paleta
                       ,DK_L.SCEAN,DK_L.IL2)
                  || undo()
                  ?}
               ?}
            || undo()
            ?};
            DK_L.next()
         !}
      ?};
      DK_LN.AKC:='T';
      DK_LN.STAT_REJ:='T';
      {? ~DK_LN.put(1)
      || undo()
      |? _pal.size() & _pal.first()
      || _uzup:=0;
         PAL.cntx_psh();
         {!
         |? PAL.clear();
            {? PAL.seek(_pal.PAL)
            || {? _pal.OLD<>''
               || {? ~_uzup
                  || exec('uzupSC','magdok_wymiary',_poz
                        ,exec('FindInSet','#table','INN','DK_LN',$DK_LN.ref(),$DK_LN.ref()));
                     _uzup:=1
                  ?};
                  exec('createNewPal','magdok_palety',PAL.ref(),_pal.OLD,_poz);
                  PAL.cntx_psh();
                  PAL.clear();
                  {? PAL.seek(_pal.OLD) || PAL.R:='T'; PAL.put(1) ?};
                  PAL.cntx_pop()
               ?};
               exec('ktm2pal','magdok_palety',0);
               exec('znacznik','magdok_palety',PAL.ref());
               _active:=PAL.AKT;
               {? _active='T' & DK_LN.RODZ='S'
               || PAL_POZ.cntx_psh();
                  PAL_POZ.use('paletyp');
                  PAL_POZ.index('PAL');
                  PAL_POZ.prefix(PAL.ref());
                  {? PAL_POZ.first() & PAL_POZ.find_tab('first','ILP',,'>',0) || _active:='N' ?};
                  PAL_POZ.cntx_pop()
               ?};
               exec('aktdepal','magdok_palety',_active='N',1)
::               {? ~_bo_pal & _pal.BEZ
::               || exec('aktdepal','magdok_palety',0,1)
::               |? PAL.AKT='N'
::               || exec('aktdepal','magdok_palety',1,1)
::               ?}
            ?};
            _pal.next()
         !};
         PAL.cntx_pop()
      ?}
   ?};
   DK_LN.cntx_pop();
   {? ~_czytran || end() ?};
   obj_del(_pal);
   obj_del(_poz)
?};
{? _lock || DK_LN.r_unlock() ?};
~~


\spr_nakc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: Sprawdza czy istnieja niezaakceptowane dokumenty i dokumenty reorganizacji zwiazane ze spisem
::   WY: 1-istnieja (ewentualna tabelka) 0-nie istnieja
::  OLD: \spr_nakc/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
_odd:=1+(DK_LN.name+3);

_lmt:=tab_tmp(1,'SQL','STRING[16]','');

_wyn:=tab_tmp(2,'TYP','STRING[1]',''
       ,'DOK','STRING[16]',''
       ,'SYM','STRING[30]',''
       ,'KTM','STRING[50]',''
       ,'LOK','STRING[20]',''
       ,'DAT','DATE','');

_ref:=$DK_LN.ref();

DK_LI.index('DK_LN');
DK_LI.prefix(DK_LN.ref());
{? DK_LI.first()
|| {!
   |? _lmt.clear();
      {? ~_lmt.find_key($DK_LI.EANL)
      || _lmt.blank();
         _lmt.SQL:=$DK_LI.EANL;
         _lmt.add(1)
      ?};
      DK_LI.next()
   !}
?};

DK_L.index('DK_LN');
DK_L.prefix('Z',DK_LN.ref());
{? DK_L.first()
|| {!
   |? _lmt.clear();
      {? ~_lmt.find_key($DK_L.M)
      || _lmt.blank();
         _lmt.SQL:=$DK_L.M;
         _lmt.add(1)
      ?};
      DK_L.next()
   !}
?};

DK_LN.cntx_psh();
DK_L.cntx_psh();
DK_LI.cntx_psh();
ND.cntx_psh();
DK.cntx_psh();
INN.cntx_psh();

OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first()
|| {!
   |? exec('mag_open','open_tab',_odd,form(OKR.ROK-2000,-2,0,'99'));
      INN.use('inw_n'+_odd+form(OKR.ROK-2000,-2,0,'99'));
      DK_LN.index('MG');
      DK_LN.prefix(ST.MAG);
      {? DK_LN.first()
      || {!
         |? {? DK_LN.AKC='N' & $DK_LN.ref()<>_ref
            || DK_LI.index('DK_LN');
               DK_LI.prefix(DK_LN.ref());
               {? DK_LI.first()
               || {!
                  |? _lmt.clear();
                     {? _lmt.find_key($DK_LI.EANL)
                     || _wyn.clear();
                        {? ~_wyn.find_key('R',$DK_L.DK_LN)
                        || _wyn.blank();
                           _wyn.TYP:='R';
                           _wyn.DOK:=$DK_LI.DK_LN;
                           _wyn.KTM:='';
                           _wyn.LOK:=DK_LI.EANL().KOD;
                           _wyn.SYM:=form(DK_LI.DK_LN().DT)+','+form(DK_LI.DK_LN().TM)+','+form(DK_LI.DK_LN().US().KOD);
                           _wyn.DAT:=DK_LI.DK_LN().DT;
                           _wyn.add(1)
                        ?}
                     ?};
                     DK_LI.next()
                  !}
               ?}
            ?};
            DK_LN.next()
         !}
      ?};
      DK_L.index('MG');
      DK_L.prefix(ST.MAG);
      {? DK_L.first()
      || {!
         |? {? DK_L.DK<>null & DK_L.DK().N().Z='N'
            || _lmt.clear();
               {? _lmt.find_key($DK_L.M)
               || _wyn.clear();
                  {? ~_wyn.find_key('D',$DK_L.DK().N)
                  || _wyn.blank();
                     _wyn.TYP:='D';
                     _wyn.DOK:=$DK_L.DK().N;
                     _wyn.KTM:=DK_L.DK().M().KTM;
                     _wyn.LOK:=DK_L.LOK().KOD;
                     _wyn.SYM:=DK_L.DK().N().TYP().T+': '+DK_L.DK().N().SYM;
                     _wyn.DAT:=DK_L.DK().N().D;
                     _wyn.add(1)
                  ?}
               || _lmt.clear();
                  {? _lmt.find_key($DK_L.LOK)
                  || _wyn.clear();
                     {? ~_wyn.find_key('D',$DK_L.DK().N)
                     || _wyn.blank();
                        _wyn.TYP:='D';
                        _wyn.DOK:=$DK_L.DK().N;
                        _wyn.KTM:=DK_L.DK().M().KTM;
                        _wyn.LOK:=DK_L.LOK().KOD;
                        _wyn.SYM:=DK_L.DK().N().TYP().T+': '+DK_L.DK().N().SYM;
                        _wyn.DAT:=DK_L.DK().N().D;
                        _wyn.add(1)
                     ?}
                  ?}
               ?}
            |? DK_L.DK_LN<>null & DK_L.DK_LN().AKC='N' & $DK_L.DK_LN<>_ref
              & (DK_LN.RODZ<>'I' | exec('czy_zinw','magdok_wspolne',$DK_LN.ref()))
            || _lmt.clear();
               {? _lmt.find_key($DK_L.M)
               || _wyn.clear();
                  {? ~_wyn.find_key('R',$DK_L.DK_LN)
                  || _wyn.blank();
                     _wyn.TYP:='R';
                     _wyn.DOK:=$DK_L.DK_LN;
                     _wyn.KTM:=DK_L.M().KTM;
                     _wyn.LOK:=DK_L.LOK().KOD;
                     _wyn.SYM:=form(DK_L.DK_LN().DT)+','+form(DK_L.DK_LN().TM)+','+form(DK_L.DK_LN().US().KOD);
                     _wyn.DAT:=DK_L.DK_LN().DT;
                     _wyn.add(1)
                  ?}
               || _lmt.clear();
                  {? _lmt.find_key($DK_L.LOK)
                  || _wyn.clear();
                     {? ~_wyn.find_key('R',$DK_L.DK_LN)
                     || _wyn.blank();
                        _wyn.TYP:='R';
                        _wyn.DOK:=$DK_L.DK_LN;
                        _wyn.KTM:=DK_L.M().KTM;
                        _wyn.LOK:=DK_L.LOK().KOD;
                        _wyn.SYM:=form(DK_L.DK_LN().DT)+','+form(DK_L.DK_LN().TM)+','+form(DK_L.DK_LN().US().KOD);
                        _wyn.DAT:=DK_L.DK_LN().DT;
                        _wyn.add(1)
                     ?}
                  || _lmt.clear();
                     {? _lmt.find_key($DK_L.LOKDO)
                     || _wyn.clear();
                        {? ~_wyn.find_key('R',$DK_L.DK_LN)
                        || _wyn.blank();
                           _wyn.TYP:='R';
                           _wyn.DOK:=$DK_L.DK_LN;
                           _wyn.KTM:=DK_L.M().KTM;
                           _wyn.LOK:=DK_L.LOKDO().KOD;
                           _wyn.SYM:=form(DK_L.DK_LN().DT)+','+form(DK_L.DK_LN().TM)+','+form(DK_L.DK_LN().US().KOD);
                           _wyn.DAT:=DK_L.DK_LN().DT;
                           _wyn.add(1)
                        ?}
                     ?}
                  ?}
               ?}
            ?};
            DK_L.next()
         !}
      ?};
      DK.index('DOKSAM');
      DK.prefix('N',ST.MAG);
      {? DK.first()
      || {!
         |? _lmt.clear();
            {? _lmt.find_key($DK.M)
            || _wyn.clear();
               {? ~_wyn.find_key('D',$DK.N)
               || _wyn.blank();
                  _wyn.TYP:='D';
                  _wyn.DOK:=$DK.N;
                  _wyn.KTM:=DK.M().KTM;
                  _wyn.LOK:='';
                  _wyn.SYM:=DK.N().TYP().T+': '+DK.N().SYM;
                  _wyn.DAT:=DK.N().D;
                  _wyn.add(1)
               ?}
            ?};
            DK.next()
         !}
      ?};
      OKR.next()
   !}
?};
DK_LN.cntx_pop();
DK_L.cntx_pop();
DK_LI.cntx_pop();
ND.cntx_pop();
DK.cntx_pop();
INN.cntx_pop();

_wyn.clear();

{? _wyn.size() & _wyn.first()
|| {? FUN.ask('Istnieją niezaakceptowane dokumenty magazynowe i reorganizacji\n'
       'o materiałach i lokalizacjach wprowadzonych na dany arkusz spisu lokalizacji.\n'
       'Czy pokazać ich listę?'@)
   || _sel_wyn:=_wyn.mk_sel('Dokumenty niezaakceptowane na magazynie %1'@[ST.MAG().SYM],'P',,'info_akcreorg',,,,,'U');

      _wyn.win_fld(_sel_wyn,,'TYP',,,1,,1,'T');
      _wyn.win_fld(_sel_wyn,,'DAT',,,10,,1,'Z dnia'@);
      _wyn.win_fld(_sel_wyn,,'SYM',,,30,,1,'Symbol'@);
      _wyn.win_fld(_sel_wyn,,'KTM',,,20,,1,'Materiał'@);
      _wyn.win_fld(_sel_wyn,,'LOK',,,20,,1,'Lokalizacja'@);
      _wyn.win_act(_sel_wyn,0,'Szukaj');
      _wyn.win_sel(_sel_wyn);

      _wyn.select()
   ?}
?};
obj_del(_lmt);
obj_del(_wyn);
0


\pal2dk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: rozpisuje palety
::   WE: _a - ref DK_LN
::  OLD: \pal2dk_l/mws.fml
::----------------------------------------------------------------------------------------------------------------------
DK_L.index('DK_LN');
DK_L.prefix('Z',_a);
{? DK_L.first()
|| {!
   |? _ref:=DK_L.ref; _next:=DK_L.next();
      DK_L.cntx_psh();
      DK_L.clear();
      {? DK_L.seek(_ref)
      || {? DK_L.ZPALET<2
         || DK_L.Z_DO:='P';
            DK_L.put(1)
         || DK_L.Z_DO:='R';
            exec('uzupIDkod','magdok_palety',DK_L);
            DK_L.add(1)
         ?}
      ?};
      DK_L.cntx_pop();
      _next
   !}
?};
DK_L.index('DK_LN');
DK_L.prefix('P',_a);
{? DK_L.first()
|| {!
   |? {? DK_L.PAL<>null & DK_L.PAL().STAN<>'I' & (DK_L.PALDO=null | DK_L.PALDO().STAN='I')
      || {? DK_L.PAL().AKT='N'
         || PAL_POZ.use('palet'+form(DK_L.PAL().AR-2000,-2,0,'99'))
         || PAL_POZ.use('paletyp')
         ?};
         PAL_POZ.index('PAL');
         PAL_POZ.prefix(DK_L.PAL);
         {? PAL_POZ.first()
         || {!
            |? exec('add2dk_l','magdok_wspolne',null,_a,DK_L.LOK,DK_L.LOKDO,PAL_POZ.TW,PAL_POZ.TW,-PAL_POZ.ILP,DK_L.MG
                  ,PAL_POZ.M,0,,DK_L.PAL,DK_L.PAL);
               PAL_POZ.next()
            !}
         ?};
         PAL_POZ.use('paletyp')
      |? DK_L.PALDO<>null & DK_L.PALDO().STAN<>'I' & (DK_L.PAL=DK_L.PALDO | DK_L.PAL=null() | DK_L.PAL().STAN='I')
      || {? DK_L.PALDO().AKT='N'
         || PAL_POZ.use('palet'+form(DK_L.PALDO().AR-2000,-2,0,'99'))
         || PAL_POZ.use('paletyp')
         ?};
         PAL_POZ.index('PAL');
         PAL_POZ.prefix(DK_L.PALDO);
         {? PAL_POZ.first()
         || {!
            |? exec('add2dk_l','magdok_wspolne',null,_a,DK_L.LOK,DK_L.LOKDO,PAL_POZ.TW,PAL_POZ.TW,PAL_POZ.ILP,DK_L.MG
                  ,PAL_POZ.M,0,,DK_L.PALDO,DK_L.PALDO);
               PAL_POZ.next()
            !}
         ?};
         PAL_POZ.use('paletyp')
      ?};
      DK_L.del()
   !}
?};
DK_L.index('DK_LN');
DK_L.prefix('R',_a);
{? DK_L.first()
|| _sl:=tab_tmp(1,'REF','STRING[16]','','ILR','REAL','');
   {!
   |? {? DK_L.PAL<>null & DK_L.PALDO<>null & DK_L.PAL().STAN<>'I' & DK_L.PALDO().STAN<>'I'
      || _nalok:=DK_L.LOK;
         _mag:=DK_L.LOK().MG;
         _term:=DK_L.TW;
         {? DK_L.PAL().AKT='N'
         || PAL_POZ.use('palet'+form(DK_L.PAL().AR-2000,-2,0,'99'))
         || PAL_POZ.use('paletyp')
         ?};
         PAL_POZ.index('PAL');
         PAL_POZ.prefix(DK_L.PAL);
         {? PAL_POZ.first()
         || {!
            |? {? PAL_POZ.IL<>PAL_POZ.ILP
               || _iler:=PAL_POZ.IL-PAL_POZ.ILP;
                  SL.cntx_psh();
                  SL.index('PALM');
                  SL.prefix(_mag,PAL_POZ.M,PAL_POZ.PAL);
                  {? SL.first()
                  || {!
                     |? {? SL.EANL<>_nalok & SL.TW=_term & SL.IL=_iler
                        || exec('add2dk_l','magdok_wspolne',null,_a,SL.EANL,_nalok,PAL_POZ.TW,PAL_POZ.TW,_iler
                            ,_mag,PAL_POZ.M,1,,PAL_POZ.PAL,PAL_POZ.PAL);
                           _iler:=0
                        ?};
                        _iler>0 & SL.next()
                     !}
                  ?};
                  SL.index('PALM');
                  SL.prefix(_mag,PAL_POZ.M,PAL_POZ.PAL);
                  {? _iler>0 & SL.first()
                  || {!
                     |? {? SL.EANL<>_nalok & SL.TW=_term
                         & (_sl.clear(); _ilsl:=SL.IL-{? _sl.find_key($SL.ref()) || _sl.ILR || 0 ?}; _ilsl>0)
                        || _ildkl:={? _iler>=_ilsl || _ilsl || _iler ?};
                           exec('add2dk_l','magdok_wspolne',null,_a,SL.EANL,_nalok,PAL_POZ.TW,PAL_POZ.TW,_ildkl
                            ,_mag,PAL_POZ.M,1,,PAL_POZ.PAL,PAL_POZ.PAL);
                           _iler-=_ildkl;
                           {? _sl.find_key($SL.ref())
                           || _sl.ILR+=_ildkl;
                              _sl.put(1)
                           || _sl.blank();
                              _sl.REF:=$SL.ref();
                              _sl.ILR:=_ildkl;
                              _sl.add(1)
                           ?}
                        ?};
                        _iler>0 & SL.next()
                     !}
                  ?};
                  SL.cntx_pop()
               ?};
               PAL_POZ.next()
            !}
         ?};
         PAL_POZ.use('paletyp')
      ?};
      DK_L.del()
   !};
   obj_del(_sl)
?};
~~


\uzupSC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: stara się uzupełnić wskazania dostaw dla
::   WE: _a - tabela
::       _b - nagłówek inwentaryzacji
::  OLD: \uzupSC/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_buf:=tab_tmp(1,'POZ','STRING[16]','','ILE','REAL','');
_sdk:=tab_tmp(2,'MAT','STRING[16]','','SC','STRING[16]','','IL','REAL','');
INN.cntx_psh();
INP.cntx_psh();
ND.cntx_psh();
DK.cntx_psh();
INN.clear();
{? INN.seek(_b)
|| _przychod:={? INN.INP_R<>'' || exec('FindAndGet','#table',ND,INN.INP_R,,,null()) || null() ?};
   _tab.clear();
   {? _tab.first()
   || {!
      |? {? _tab.IL>0 & _tab.SC=''
         || _material:=exec('FindAndGet','#table',M,_tab.MAT,,,null());
            _ilr:=_tab.IL;
::          analizujemy dokument przychodu inwentury - o ile istnieje
            {? _przychod<>null()
            || DK.index('MAM');
               DK.prefix(_przychod,_material);
               {? DK.first()
               || {!
                  |? _ile:=DK.IL;
                     _buf.clear(); {? _buf.find_key($DK.ref()) || _ile-=_buf.ILE ?};
                     {? _ile<=0
                     || 0
                     |? _ile>=_ilr
                     || _ilr:=0;
                        _tab.SC:=$DK.ref();
                        _tab.put();
                        _buf.clear();
                        {? _buf.find_key($DK.ref())
                        || _buf.ILE+=_tab.IL;
                           _buf.put(1)
                        || _buf.blank();
                           _buf.POZ:=$DK.ref();
                           _buf.ILE:=_tab.IL;
                           _buf.add(1)
                        ?}
                     || _ilt:=_tab.IL;
                        _tab.SC:=$DK.ref();
                        _tab.IL:=_ile;
                        _tab.put(1);
                        _ilr-=_ile;
                        _tab.SC:='';
                        _tab.IL:=_ilt-_ile;
                        _tab.add(1);
                        _buf.clear();
                        {? _buf.find_key($DK.ref())
                        || _buf.ILE+=_ile;
                           _buf.put(1)
                        || _buf.blank();
                           _buf.POZ:=$DK.ref();
                           _buf.ILE:=_ile;
                           _buf.add(1)
                        ?}
                     ?};
                     _ilr>0 & DK.next()
                  !}
               ?}
            ?};
::          niestety nadal coś pozostało - analizujemy dostawy na arkuszu inwentaryzacyjnym
            {? _ilr>0
            || _sdk.clear();
               _sdk.prefix($_material);
               {? {? ~_sdk.first() || exec('genSC','magdok_wymiary',_sdk,_b,_material,_tab) || 1 ?}
               || {!
                  |? _ile:=_sdk.IL;
                     _buf.clear(); {? _buf.find_key($_sdk.ref()) || _ile-=_buf.ILE ?};
                     {? _ile<=0
                     || 0
                     |? _ile>=_ilr
                     || _ilr:=0;
                        _tab.SC:=_sdk.SC;
                        _tab.put();
                        _buf.clear();
                        {? _buf.find_key($_sdk.ref())
                        || _buf.ILE+=_tab.IL;
                           _buf.put(1)
                        || _buf.blank();
                           _buf.POZ:=$_sdk.ref();
                           _buf.ILE:=_tab.IL;
                           _buf.add(1)
                        ?}
                     || _ilt:=_tab.IL;
                        _tab.SC:=_sdk.SC;
                        _tab.IL:=_ile;
                        _tab.put(1);
                        _ilr-=_ile;
                        _tab.SC:='';
                        _tab.IL:=_ilt-_ile;
                        _tab.add(1);
                        _buf.clear();
                        {? _buf.find_key($_sdk.ref())
                        || _buf.ILE+=_ile;
                           _buf.put(1)
                        || _buf.blank();
                           _buf.POZ:=$_sdk.ref();
                           _buf.ILE:=_ile;
                           _buf.add(1)
                        ?}
                     ?};
                     _ilr>0 & _sdk.next()
                  !}
               ?}
            ?}
         ?};
         _tab.next()
      !}
   ?}
?};
INN.cntx_pop();
INP.cntx_pop();
ND.cntx_pop();
DK.cntx_pop();
obj_del(_buf);
~~


\genSC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: wypełnia tabelę dostaw na podstawie arkusza inwentaryzacyjnego z uwzględnieniem dostaw na paletach
::   WE: _a - tabela
::       _b - nagłówek inwentaryzacji
::       _c - materiał
::       _d - tabela palet
::  OLD: \genSC/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_buf:=tab_tmp(1,'PAL','STRING[16]','');
_tab:=_a;
_poz:=_d;
_poz.cntx_psh();
_tab.cntx_psh();
PAL_POZ.cntx_psh();
INP.index('KOD');
INP.prefix(_b,_c);
{? INP.first()
|| {!
   |? {? INP.SCRDK>0 & INP.SS>0
      || _sc:=exec('MaskInt2RefSql','#convert',INP.SCNDK,INP.SCRDK);
         _tab.clear;
         _tab.blank();
         _tab.MAT:=$_c;
         _tab.SC:=_sc;
         _tab.IL:=INP.SS;
         _tab.add(1)
      ?};
      INP.next()
   !}
?};
PAL_POZ.index('POZKTM');
PAL_POZ.prefix(_c);
{? PAL_POZ.first()
|| {!
   |? {? PAL_POZ.ILP>0
      || _zpalet:=0;
         _buf.clear();
         {? ~_buf.find_key($PAL_POZ.PAL) & (_poz.clear(); _poz.prefix($PAL_POZ.PAL); _poz.first())
         || {!
            |? {? _poz.IL<0 || _zpalet-=_poz.IL ?};
               _poz.next()
            !};
            _buf.blank();
            _buf.PAL:=$PAL_POZ.PAL;
            _buf.add(1)
         ?};
         _tab.clear();
         _tab.prefix($PAL_POZ.M,PAL_POZ.SCSQL);
         {? _tab.first()
         || _tab.IL-=PAL_POZ.ILP;
            _tab.IL+=_zpalet;
            _tab.put(1)
         ?}
      ?};
      PAL_POZ.next()
   !}
?};
PAL_POZ.cntx_pop();
_tab.cntx_pop();
_poz.cntx_pop();
_tab.clear();
_tab.prefix($_c);
_tab.first()


\deldk_ln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: Usuniecie rekrdu reorganizacji
::   WE: [_a] - 0-domyslnie z zapytaniem 1-bez pytania
::   WY: (0/1) - czy usunięto
::  OLD: \deldk_ln/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
DK_LN.get();

_wyn:=0;
_lock:=1;
{? ~DK_LN.r_lock(1,1,1)
|| _lock:=0;
   {? ~_a & FUN.ask('Dokument reorganizacji obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@) & DK_LN.r_lock(1,,1)
   || DK_LN.r_unlock()
   ?};
   _wyn:=0
|? ~_a & DK_LN.RODZ='D'
|| FUN.info('Reorganizacja typu depaletyzacja.\nUsunięcie niemożliwe.'@);
   _wyn:=0
|? exec('eann2zk','magdok_wspolne',DK_LN.ref())='T'
|| {? ~_a || FUN.info('Reorganizacja przesłana na urządzenie mobilne.\nUsunięcie niemożliwe.'@) ?};
   _wyn:=0
|? ~_a & DK_LN.RODZ='I' & exec('czy_zinw','magdok_wspolne',$DK_LN.ref())
|| FUN.info('Dokument wygenerowany automatycznie z arkusza inwentaryzacyjnego.'
    '\nUsunięcie możliwe jedynie z poziomu Inwentaryzacji.'@);
   _wyn:=0
|? DK_LN.AKC='N'
|| {? _a | FUN.ask('Czy usunąć reorganizację wraz z pozycjami?'@)
   || _pal:=tab_tmp(1,'PAL','STRING[16]',''
             ,'OLD','STRING[16]','');
      {? ~_a || do() ?};
      DK_LI.index('DK_LN');
      DK_LI.prefix(DK_LN.ref());
      {? DK_LI.first() || {! |? DK_LI.del() !} ?};
      DK_L.index('DK_LNLOK');
      DK_L.prefix(DK_LN.ref());
      {? DK_L.first()
      || {!
         |? {? DK_L.ZPALET=2
            || exec('poz_bpal','magdok_palety',0,$DK_L.PALDO,$DK_L.PAL,DK_L.M().KTM,DK_L.IL,-1,DK_L.TW);
               exec('zwrilpal','magdok_palety',DK_L.PAL,DK_L.M().KTM,DK_L.IL,-1,DK_L.TW)
            ?};
            {? DK_L.PAL<>null & DK_L.PAL().STAN<>'I' & (_pal.clear(); ~_pal.find_key($DK_L.PAL))
            || _pal.blank();
               _pal.PAL:=$DK_L.PAL;
               {? DK_L.PALDO<>null() & DK_L.PALDO().STAN='I' || _pal.OLD:=$DK_L.PALDO || _pal.OLD:='' ?};
               _pal.add(1)
            ?};
            {? DK_L.PALDO<>null & DK_L.PALDO().STAN<>'I' & (_pal.clear(); ~_pal.find_key($DK_L.PALDO))
            || _pal.blank();
               _pal.PAL:=$DK_L.PALDO;
               {? DK_L.PAL<>null() & DK_L.PAL().STAN='I' || _pal.OLD:=$DK_L.PAL || _pal.OLD:='' ?};
               _pal.add(1)
            ?};
            DK_L.del()
         !}
      ?};
      exec('ret_eann','magazyn_mob',$DK_LN.ref(),'R',DK_LN.MG);
::    wyczyszczenie informacji Z EANN
      _dk_ln:=$DK_LN.ref();
      DK_LN.cntx_psh();
      EANP.cntx_psh();
      EANN.cntx_psh();
      EANN.index('REFSQL');
      EANN.prefix(_dk_ln,_dk_ln);
      {? EANN.first()
      || {!
         |? _ref:=EANN.ref(); _ok:=EANN.next();
            EANN.cntx_psh();
            EANN.clear();
            {? EANN.seek(_ref)
            || EANN.REFSQL:='delete';
               EANN.put(1)
            ?};
            EANN.cntx_pop();
            _ok
         !}
      ?};
      EANP.cntx_pop();
      EANN.cntx_pop();
      DK_LN.cntx_pop();
      _wyn:=DK_LN.del();
      {? _pal.size() & _pal.first()
      || PAL.cntx_psh();
         {!
         |? {? _pal.OLD<>'' || exec('oldDel','magdok_palety',_pal.OLD) ?};
            PAL.clear();
            {? PAL.seek(_pal.PAL)
            || exec('znacznik','magdok_palety',PAL.ref());
               exec('aktdepal','magdok_palety',PAL.AKT='N',1)
            ?};
            _pal.next()
         !};
         PAL.cntx_pop()
      ?};
      {? ~_a || end() ?};
      obj_del(_pal);
      _wyn
   ?}
|| {? ~_a || FUN.info('Reorganizacja zaakceptowana.\nUsunięcie niemożliwe.'@) ?};
   _wyn:=0
?};
{? _lock || DK_LN.r_unlock() ?};
_wyn


\wycreorg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: wycofanie akceptacji reorganizacji
::   WE: [_a] - 1-bezwzgledne wycofanie akceptacji 0-domyslnie nie (pytania i opinie)
::       [_b] - typ wycofania 1-rejestracja 2-akceptacja 0-do ustalenia (domyślnie)
::  OLD: \wycreorg/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

DK_LN.get();
_tab:=DK_LN.sel_aget();
DK_LN.sel_adel();
{? _tab.size()
|| DK_LN.cntx_psh();
   {? (_b | FUN.ask('Czy wycofać akceptację zaznaczonych reorganizacji?'@)) & _tab.first()
   || {!
      |? {? (DK_LN.clear(); DK_LN.seek(_tab.REF,))
         || _pyt:={? _b=0
                  || 0
                  |? _b=1 & (';TZ'*DK_LN.STAT_REJ)>1
                  || 1
                  |? _b=2 & DK_LN.STAT_REJ='T'
                  || 2
                  || 0
                  ?};
            {? ~_b | _pyt || exec('wycreone','magdok_wymiary',2,_pyt) ?}
         ?};
         _tab.next()
      !}
   ?};
   DK_LN.cntx_pop()
|| exec('wycreone','magdok_wymiary',{? _b || 1 || _a ?},_b)
?}


\wycreone
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: wycofanie akceptacji reorganizacji
::   WE: [_a] - 1-bezwzgledne wycofanie akceptacji 0-domyslnie nie (pytania i opinie) 2-akcja grupowa
::       [_b] - typ wycofania 1-rejestracja 2-akceptacja 0-do ustalenia (domyślnie)
::  OLD: \wycreone/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

_lock:=1;
_czy_akc:=DK_LN.AKC='T';
:: zmienne odpowiedzialne, za ewentualne wydzielenie reorganizacji
_div:=0;
_ctrl:=2;
:: kontrola czy dany dokument jeszcze istnieje
{? (5+DK_LN.ZDOK)='dokma' & exec('FindAndGet','#table',DK,DK_LN.ZDOK,,,null())=null()
|| DK_LN.ZDOK:='';
   {? DK_LN.RODZ='K' || DK_LN.RODZ:='S' ?};
   DK_LN.put(1)
?};

{? ~DK_LN.r_lock(1,1,1)
|| _lock:=0;
   {? FUN.ask('Dokument reorganizacji obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@) & DK_LN.r_lock(1,,1)
   || DK_LN.r_unlock()
   ?};
   0
|? _a=2 & DK_LN.RODZ='D'
|| 0
|? DK_LN.AKC='N' & DK_LN.STAT_REJ='N'
|| {? ~_a || FUN.info('Reorganizacja nie jest zaakceptowana.'@) ?};
   0
|? ~_a & DK_LN.RODZ='D'
|| FUN.info('Reorganizacja jest wygenerowana na podstawie depaletyzacji.\n'
    'Wycofanie akceptacji niemożliwe.'@);
   0
|? DK_LN.RODZ='K'
|| FUN.info('Reorganizacja jest wygenerowana na podstawie kwalifikacji dostawy.\n'
    'Wycofanie akceptacji niemożliwe.'@);
   0
|? (5+DK_LN.ZDOK)='dokma' & (DK_LN.RODZ<>'S' | (_ctrl:=exec('ctrl_wycsetw','magdok_wspolne'); _ctrl=0))
|| FUN.info('W reorganizacja występują pozycje, dla których przekwalfikowano dostawę (termin ważności).\n'
    'Wycofanie akceptacji niemożliwe.\n'
    'Korektę stanów wg wymiarów można zrobić za pomocą nowej reorganizacji.'@);
   0
|? ({? _ctrl=2 || _ctrl:=exec('ctrl_wycsetw','magdok_wspolne') ?};
    {? ~_ctrl | DK_LN.RODZ<>'S'
    || {? (_ctrl=1 & DK_LN.RODZ='I') || 0 || 1 ?}
    |? _ctrl<0
    || _div:=2;
       {? FUN.ask('W reorganizacja występują pozycje z terminem ważności na dostawie,\n'
           'dla których nastąpił rozchód w magazynie.\n\n'
           'Dodatkowo nie jest to ostatnia reorganizacja dotycząca pozycji z terminem ważności na dostawie.\n\n'
           'Wycofanie akceptacji całej reorganizacji niemożliwe.\n\n'
           'Czy wydzielić z reorganizacji pozycje dostępne do zmiany i odakceptować reorganizację?'@)
       || _div:=1; 0
       || 1
       ?}
    || 0
    ?}
   )
|| {? ~_div
   || FUN.info('W reorganizacja występują pozycje z terminem ważności na dostawie,\n'
       'dla których nastąpił rozchód w magazynie.\n\n'
       'Dodatkowo nie jest to ostatnia reorganizacja dotycząca pozycji z terminem ważności na dostawie.\n\n'
       'Wycofanie akceptacji niemożliwe.\n\n'
       'Korektę stanów wg wymiarów można zrobić za pomocą nowej reorganizacji.'@)
   ?};
   0
|? DK_LN.MG().PAL='T' & exec('palINarch','magdok_palety',DK_LN.ref())
|| FUN.info('Pozycja reorganizacji zawiera zarchiwizowaną paletę.\n'
    'Wycofanie akceptacji niemożliwe.'@);
   0
|? _b<>2 & ~_czy_akc & (_a | FUN.ask('Czy wycofać zakończenie rejestracji reorganizacji magazynu?'@))
|| DK_LN.STAT_REJ:='N';
   DK_LN.put(1)
|? _czy_akc & (_a | FUN.ask('Czy wycofać akceptację reorganizacji magazynu?'@))
||

   _pal:=tab_tmp(1,'PAL','STRING[16]','','OLD','STRING[16]','');
   _tran:=do_state();
   {? ~_tran || do() ?};
   {? _div=1 & ~exec('divDK_LN','magdok_wymiary') || undo() ?};
:: usuniecie rekordow o znaczniku Z_DO='D'
   DK_L.index('DK_LN');
   DK_L.prefix('D',DK_LN.ref());
   {? DK_L.first()
   || {!
      |? _wyn:=DK_L.del(,1);
         {? ~_wyn  || undo(); 0
         |? _wyn=1 || 0
         || _wyn
         ?}
      !}
   ?};
   _bo_pal:=DK_LN.RODZ='B';
   _z_czyt:=exec('FindInSet','#table','EANN','AKT',$DK_LN.ref(),'T')<>null;
   _czy_inw:=DK_LN.RODZ='I' & exec('czy_zinw','magdok_wspolne',$DK_LN.ref());

   DK_L.index('DK_LN');
   DK_L.prefix('Z',DK_LN.ref());
   {? DK_L.first()
   || {!
      |? {? ~_bo_pal || DK_L.IL:=-DK_L.IL ?};
         exec('reoIL2','magdok_wymiary');
         DK_L.Z:='N';
         {? DK_L.put(1)
         || DK_L.cntx_psh();
            {? DK_L.PAL<>null & DK_L.PAL().STAN<>'I' & (_pal.clear(); ~_pal.find_key($DK_L.PAL))
            || _pal.blank();
               _pal.PAL:=$DK_L.PAL;
               {? DK_L.PALDO<>null() & DK_L.PALDO<>DK_L.PAL & _czy_inw || _pal.OLD:=$DK_L.PALDO || _pal.OLD:='' ?};
               _pal.add(1)
            ?};
            {? DK_L.PALDO<>null & DK_L.PALDO().STAN<>'I' & (_pal.clear(); ~_pal.find_key($DK_L.PALDO))
            || _pal.blank();
               _pal.PAL:=$DK_L.PALDO;
               {? DK_L.PAL<>null() & DK_L.PALDO<>DK_L.PAL & _czy_inw || _pal.OLD:=$DK_L.PAL || _pal.OLD:='' ?};
               _pal.add(1)
            ?};
            _wsp:={? _bo_pal || -1 || 1 ?};
            _paleta:={? DK_L.PAL<>null() & DK_L.PAL().STAN<>'I' || DK_L.PAL || null() ?};
            {? ~exec('adddelsl','magazyn_stan',DK_L.MG,DK_L.M,DK_L.LOK,DK_L.TW,DK_L.IL,_wsp,_paleta
                 ,DK_L.SCEAN,DK_L.IL2)
            || undo()
            || _paleta:={? DK_L.PALDO<>null() & DK_L.PALDO().STAN<>'I' || DK_L.PALDO || null() ?};
               {? ~exec('adddelsl','magazyn_stan',DK_L.MG,DK_L.M,DK_L.LOKDO,DK_L.TWDO,DK_L.IL,-_wsp,_paleta
                    ,DK_L.SCEAN,DK_L.IL2)
               || undo()
               ?}
            ?};
            DK_L.cntx_pop()
         || undo()
         ?};
         DK_L.next()
      !};
      DK_L.first()
   ?};

:: usuniecie pozycji automatycznych
   DK_L.index('DK_LN');
   DK_L.prefix('Z',DK_LN.ref());
   {? DK_L.first() || {! |? {? DK_L.AUTO || DK_L.del() || DK_L.next() ?} !} ?};

:: w przypadku magazynu paletowego utworzenie pozycji wg palet
   {? ~_bo_pal & DK_LN.MG().PAL='T' & DK_LN.RODZ<>'D' & ~_czy_inw || exec('dk_l2pal','magdok_wymiary',DK_LN.ref()) ?};

   DK_LN.AKC:='N';
   DK_LN.STAT_REJ:={? _b=1 || 'N' || 'Z' ?};
   {? ~DK_LN.put(1)
   || undo()
   |? _pal.size() & _pal.first()
   || PAL.cntx_psh();
      {!
      |? PAL.clear();
         {? PAL.seek(_pal.PAL)
         || {? ~_z_czyt & _bo_pal
            || exec('delepalp','magdok_palety',PAL.ref());
               PAL.AKT:='T';
               PAL.MKTM:='';
               PAL.STAN:='N';
               PAL.P:='N';
               PAL.R:='W';
               PAL.W:='N';
               PAL.M:='N';
               PAL.ROZ:='N';
               PAL.put(1)
            || {? _pal.OLD<>''
               || exec('deleteNewPal','magdok_palety',PAL.ref(),_pal.OLD);
                  PAL.cntx_psh();
                  PAL.clear();
                  {? PAL.seek(_pal.OLD) || PAL.R:='W'; PAL.put(1) ?};
                  PAL.cntx_pop()
               ?};
               exec('ktm2pal','magdok_palety',0);
               exec('znacznik','magdok_palety',PAL.ref())
            ?};
            {? ~exec('czyilpoz','magdok_palety',PAL.ref())
            || exec('aktdepal','magdok_palety',1,1)
            || exec('aktdepal','magdok_palety',PAL.AKT='N',1)
            ?}
         ?};
         _pal.next()
      !};
      PAL.cntx_pop()
   ?};
   {? ~_tran || end() ?};
   obj_del(_pal)
?};
{? _lock || DK_LN.r_unlock() ?};
~~


\dk_l2pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: rozpisuje palety
::   WE: _a - ref DK_LN
::  OLD: \dk_l2pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_poz:=tab_tmp(4,'LOK','STRING[16]',''
       ,'LO2','STRING[16]',''
       ,'PAL','STRING[16]',''
       ,'PA2','STRING[16]','');

_spis:=0;
DK_L.cntx_psh();
DK_L.index('DK_LN');
DK_L.prefix('Z',_a);
{? DK_L.first()
|| _spis:='ID'*DK_L.DK_LN().RODZ;
   {!
   |? {? DK_L.ZPALET<2
      || _byl:=0;
         _poz.clear();
         {? _spis | 1
         || _poz.prefix($DK_L.LOK,$DK_L.LOKDO,$DK_L.PAL,$DK_L.PALDO)
         || _poz.prefix($DK_L.LOK,$DK_L.LOKDO)
         ?};
         {? _poz.first()
         || {!
            |? {? _poz.PAL='' & DK_L.PAL<>null
               || _poz.PAL:=$DK_L.PAL;
                  _poz.put(1);
                  _byl:=1;
                  0
               |? _poz.PA2='' & DK_L.PALDO<>null
               || _poz.PA2:=$DK_L.PALDO;
                  _poz.put(1);
                  _byl:=1;
                  0
               || _poz.next()
               ?}
            !}
         || _poz.blank();
            _poz.LOK:=$DK_L.LOK;
            _poz.LO2:=$DK_L.LOKDO;
            _poz.PAL:={? DK_L.PAL=null || '' || $DK_L.PAL ?};
            _poz.PA2:={? DK_L.PALDO=null || '' || $DK_L.PALDO ?};
            _poz.add(1)
         ?};
         DK_L.del()
      ||
::       zmiana stanu palety na B
         {? DK_L.PALDO<>null
         || PAL.cntx_psh();
            PAL.clear();
            {? PAL.seek(DK_L.PALDO) & PAL.ROZ='B'
            || PAL.STAN:='B';
               PAL.put(1)
            ?};
            PAL.cntx_pop()
         ?};
         DK_L.next()
      ?}
   !}
?};
_sum:=sql('select distinct :_a.LOK, :_a.LO2, :_a.PAL, :_a.PA2 from :_a ',_poz);
_sum.clear();
{? _sum.first()
|| {!
   |? _lok:=exec('FindAndGet','#table',EANL,_sum.LOK,,,null());
      _lo2:=exec('FindAndGet','#table',EANL,_sum.LO2,,,null());
      _pal:={? _spis || null || exec('FindAndGet','#table',PAL,_sum.PAL,,,null()) ?};
      _pa2:=exec('FindAndGet','#table',PAL,_sum.PA2,,,null());
      exec('add2dk_l','magdok_wspolne',null,_a,_lok,_lo2,date(0,0,0),date(0,0,0),1,ST.MAG,null,0,,_pal,_pa2);
      _sum.next()
   !}
?};
DK_L.cntx_pop();
obj_del(_poz);
obj_del(_sum);
~~


\adddk_ln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: Dolaczenie rekordu do tabeli DK_LN
::  OLD: \adddk_ln/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
EANL.cntx_psh();
EANL.index('MG');
EANL.prefix('T',ST.MAG);
_spis:=EANL.size()>1;
EANL.cntx_pop();
_opc:={? ST.MAG().PAL='T' & exec('FindInSet','#table','SL','MG',ST.MAG)<>null
      || {? _spis
         || FUN.choice('Czy dodać reorganizację?'@,,'Standardowa'@,'Sp&is lokalizacji'@,'Inicjującą &palety'@)
         || FUN.choice('Czy dodać reorganizację?'@,,'Standardowa'@,'Inicjującą &palety'@)
         ?}
      || {? _spis
         || FUN.choice('Czy dodać reorganizację?'@,,'Standardowa'@,'Sp&is lokalizacji'@)
         || FUN.ask('Czy dodać reorganizację?'@)
         ?}
      ?};
{? _opc
|| DK_LN.blank();
   DK_LN.RODZ:={? _opc=1 || 'S' |? _opc=3 | (_opc=2 & ~_spis) || 'B' || 'I' ?};
   {? DK_LN.add() || exec('pozreorg','magdok_wymiary') ?}
?}


\pozreorg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: Pozycje reorganizacji
::  OLD: \pozreorg/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
_lock:=1;
{? ~DK_LN.r_lock(1,1,1)
|| _lock:=0;
   {? FUN.ask('Dokument reorganizacji obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@) & DK_LN.r_lock(1,,1)
   || DK_LN.r_unlock()
   ?}
|| DK_LN.get();

POMOC.RODZ:='T';
DK_LN.get();
_stmag:=ST.MAG;
ST.MAG:=DK_LN.MG;
EANX.MG:=DK_LN.MG;
DK_L.win_edit({? DK_LN.RODZ='I' || 'RES' |? DK_LN.RODZ='B' || 'REB' || 'RED' ?});

:: okienko do szukania dla wymiarow
DK_L.win_patt('SZUKR');

_act:=EANL.actions('WER','MGLEB');
EANL.win_edit('RED'+{? ST.MAG().MWS='N' || '' || 'MWS' ?});
EANL.win_dict('SLO');
_actslo:=EANL.actions('SLO','W'+{? ST.MAG().MWS='N' || 'G' || '' ?});
{? DK_LN.RODZ='I' & DK_LN.AKC='T' & exec('FindInSet','#table','DK_LI','DK_LN',DK_LN.ref())<>null
|| DK_LI.index('DK_LN');
   DK_LI.prefix(DK_LN.ref());
   DK_LI.win_sel('GRES');
   DK_LI.actions('WER','dup:d');
   DK_L.index('DK_LNLOK');
   DK_L.prefix(DK_LN.ref());
   DK_LI.select();
   DK_LI.actions('WER','')
|? DK_LN.AKC='T'
|| DK_L.index('DK_LNLOK');
   DK_L.prefix(DK_LN.ref());
   DK_L.win_sel('WERA');
   DK_L.select()
|? DK_LN.RODZ='B'
|| DK_L.index('DK_LNLOK');
   DK_L.prefix(DK_LN.ref());
   DK_L.win_sel('WERB');
   DK_L.select()
|? DK_LN.RODZ='D'
|| DK_L.index('DK_LNLOK');
   DK_L.prefix(DK_LN.ref());
   DK_L.win_sel('WERR');
   DK_L.actions('WERR','DUPGZ:DGZ');
   DK_L.select()
|? DK_LN.RODZ='I' & DK_LN.AKC='N' & (exec('FindInSet','#table','DK_LI','DK_LN',DK_LN.ref())<>null
| exec('FindInSet','#table','DK_L','DK_LN',DK_LN.ref(),'Z')=null)
|| DK_LI.index('DK_LN');
   DK_LI.prefix(DK_LN.ref());
   {? exec('FindInSet','#table','EANN','AKT',$DK_LN.ref(),'T')=null & DK_LN.STAT_REJ='N'
   || DK_LI.win_sel('GREO');
      DK_LI.dnd_sel('WER',,'records.EANL',"exec('dkliwgea','magdok_wymiary')");
      DK_L.dnd_sel('WERR',,'records.EANL',"")
   || DK_LI.win_sel('WER');
      DK_LI.actions('WER','dupZ:dZ')
   ?};
   DK_L.index('DK_LN');
   DK_L.prefix('Z',DK_LN.ref());
   {? DK_LN.AKC='T' | exec('FindInSet','#table','EANN','AKT',$DK_LN.ref(),'T')<>null
     | (DK_LN.RODZ='I' & exec('czy_zinw','magdok_wspolne',$DK_LN.ref()))
   || DK_L.win_sel('WERR');
      DK_L.actions('WERR','RDUPGZ:RDGZ')
   || DK_L.actions('WERR','RG:RG')
   ?};
   EANL.index('MG');
   EANL.prefix();
   EANL.f_clear();
   EANL.f_set('KOD',,'EANL.MG=:_a and EANL.AKT=\'T\'',ST.MAG);
   {? EANL.f_seek(ST.MAG().EANL) || EANL.f_del() ?};
   {? EANL.f_first()
   || DK_LI.select()
   || FUN.info('W magazynie brak innych lokalizacji niz lokalizacja domyślna.\n'
               'Reorganizacja typu spis lokalizacji niemożliwa.'@)
   ?};
   DK_LI.actions('WER','');
   EANL.f_clear()
|| DK_L.index('DK_LN');
   DK_L.prefix('Z',DK_LN.ref());
   {? DK_LN.STAT_REJ<>'N' | exec('FindInSet','#table','EANN','AKT',$DK_LN.ref(),'T')<>null
     | (DK_LN.RODZ='I' & exec('czy_zinw','magdok_wspolne',$DK_LN.ref()))
   || DK_L.win_sel('WERR');
      DK_L.actions('WERR','DUPROGZ:DOGRZ')
   || DK_L.actions('WERR',{? ST.MAG().PAL='T' || 'G:G' || 'RO:RO' ?});
      DK_L.win_sel('GREO'+{? ST.MAG().PAL='T' || 'P' || '' ?});
      DK_L.dnd_sel('WERR',,'records.SM',"exec('dk_lwgsm','magdok_wymiary')");
      DK_L.dnd_sel('WERR',,'records.EANL',"exec('dk_lwgea','magdok_wymiary')");
      DK_L.dnd_sel('WERR',,'records.PAL',"exec('dk_lwgpl','magdok_wymiary')");
      SM.index('ASA');
      SM.prefix(ST.MAG,'T');
      PAL.index('AKT');
      PAL.prefix(ST.ODDZ,'N','T');
      EANL.index('MG');
      EANL.prefix('T',ST.MAG)
   ?};
   DK_L.select()
?};
EANL.actions('WER',_act);
EANL.actions('SLO',_actslo);
PAL.f_clear();
DK_L.win_edit('');
   {? _lock || DK_LN.r_unlock() ?};
   _stmag:=ST.MAG
?};
~~


\datadkln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: zmiana daty reorganizacji
::  OLD: \datadkln/mws.fml
::----------------------------------------------------------------------------------------------------------------------
DK_LN.get();
_lock:=1;
{? ~DK_LN.r_lock(1,1,1)
|| _lock:=0;
   {? FUN.ask('Dokument reorganizacji obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@) & DK_LN.r_lock(1,,1)
   || DK_LN.r_unlock()
   ?}
|? DK_LN.AKC='T'
|| FUN.info('Reorganizacja zaakceptowana.\nZmiana daty niemożliwa.'@)
|? DK_LN.RODZ='I' & exec('czy_zinw','magdok_wspolne',$DK_LN.ref())
|| FUN.info('Reorganizacja powiązana z arkuszem inwentaryzacyjnym.\nZmiana daty niemożliwa.'@)
|| _old:=VAR.A_DAT;
   VAR.A_DAT:=DK_LN.D;
   VAR.win_edit('A_DAT');
   {? VAR.edit("{? VAR.A_DAT>date(ST.AR,ST.AM,0) | VAR.A_DAT<date(ST.AR,ST.AM,1)
                || FUN.info('Data musi być z aktywnego okresu.'@);
                   'A_DAT'
                || ''
                ?}")
   || DK_LN.D:=VAR.A_DAT;
      DK_LN.put(1)
   ?};
   VAR.A_DAT:=_old
?};
{? _lock || DK_LN.r_unlock() ?}


\drreorg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: drukowanie reorganizacji
::  OLD: \drreorg/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
DK_LN.get();
VAR_DEL.delete('__Sel');
__Sel:=DK_LN.sel_aget; DK_LN.sel_adel;
{? __Sel.first=0
|| __Sel.REF:=#DK_LN.ref;
   __Sel.add
?};
exec('rep_exec','#b_report','','lmg_reo_001','Reorganizacja',2,,,,,,'W');
VAR_DEL.delete('__Sel')


\dkliwgea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: generacja pozycji DK_LI wg zaznaczonych EANL
::   WE: [_a] - tryb 0(domyślnie) - d&d, 1 - akcja
::  OLD: \dkliwgea/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};

{? ~_tryb
|| _tab:=dnd_info('dropped_records')
|| {? EANL.sel_size()
   || _tab:=EANL.sel_aget();
      EANL.sel_adel()
   || _tab:=tab_tmp(1,'REF','INTEGER','');
      _tab.blank();
      _tab.REF:=#EANL.ref();
      _tab.add(1)
   ?}
?};
{? _tab.size() & _tab.first() & FUN.ask('Czy przenieść wybrane lokalizacje na reorganizację?'@)
|| EANL.cntx_psh();
   DK_LI.cntx_psh();
   {!
   |? {? (EANL.clear; EANL.seek(_tab.REF,))
      || DK_LI.index('DK_LNLOK');
         DK_LI.prefix(DK_LN.ref());
         {? ~DK_LI.find_key(EANL.ref())
         || DK_LI.blank();
            DK_LI.DK_LN:=DK_LN.ref();
            DK_LI.EANL:=EANL.ref();
            exec('uzupIDkod','magdok_palety',DK_LI);
            DK_LI.add(1)
         ?}
      ?};
      _tab.next()
   !};
   EANL.cntx_pop();
   DK_LI.cntx_pop()
?};
1


\dk_lwgsm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: generacja pozycji DK_L-a wg zaznaczonych SM
::   WE: [_a] - tryb 0(domyślnie) - d&d, 1 - akcja
::  OLD: \dk_lwgsm/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};

{? ~_tryb
|| _tab:=dnd_info('dropped_records')
|| {? SM.sel_size()
   || _tab:=SM.sel_aget();
      SM.sel_adel()
   || _tab:=tab_tmp(1,'REF','INTEGER','');
      _tab.blank();
      _tab.REF:=#SM.ref();
      _tab.add(1)
   ?}
?};
_ileadd:=0;
_ilestn:=0;
_iledkl:=0;
_ileblk:=0;
_mws:=DK_LN.MG().MWS='T';
{? _tab.size() & _tab.first()
 & FUN.ask({? _mws
           || 'Czy przenieść wybrane indeksy na reorganizację?\nUwaga. Pominięte zostaną indeksy znajdujące się na zablokowanych lokalizacjach.'@
           || 'Czy przenieść wybrane indeksy na reorganizację?'@ ?})
|| SM.cntx_psh();
   DK_L.cntx_psh();
   M.cntx_psh();
   MG.cntx_psh();
   {!
   |? {? (SM.clear; SM.seek(_tab.REF,))
      || exec('sc_tymczas','magazyn_stan',SM.MAG,SM.M,'T');
         {? __sc.first()
         || {!
            |? {? __sc.SRDK<>''
               || _aktdkl:=exec('aktSLwgTW','magdok_wymiary',SM.MAG,SM.M,__sc.SRDK,__sc.S,__sc.TW,__sc.SRDK,,1);
                  {? _aktdkl.size() & (_aktdkl.clear();_aktdkl.first())
                  || {!
                     |? {? _aktdkl.ILE>0 & _aktdkl.ILE>=__sc.S
:: sprawdzamy czy ten zapis z tabeli nie jest śmieciem
                         & _aktdkl.SCSQL=__sc.SRDK & _aktdkl.EANL<>'' & EANL.seek(_aktdkl.EANL)
                        || _eanl:=exec('FindAndGet','#table',EANL,_aktdkl.EANL,,,null());
                           _kh:=exec('FindAndGet','#table',DK,_aktdkl.SCSQL,,'DK.KH',null());
                           _stats:=exec('FindAndGet','#table',DK,_aktdkl.SCSQL,,'DK.STATS',null());
::odnajdywanie lokalizacji zgodnie ze strefami magazynowania
                           _lok:=
                           {? SM.MAG().WGMGGR='T' & SM.MAG().PAL='N'
                           || exec('findmlok','magdok_wymiary',SM.MAG,SM.M,__sc.S,_kh,,,_stats)
                           || tab_tmp(1,'LOK','STRING[30]','','ILE','REAL','')
                           ?};
                           _pal_ref:=null();
                           {? ~_lok.first()
                           || _lok.LOK:= {? SM.MAG().WGMGGR='T' & SM.MAG().PAL='T'
                                          || _pal_ref:=exec('pal_poz_stats','magdok_palety',__sc.SRDK,SM.MAG);
                                             {? _pal_ref
                                             || _pal_eanl:=exec('findpallok','magdok_wymiary',SM.MAG,_kh,_stats,_pal_ref);
                                                exec('FindAndGet','#table',EANL,_pal_eanl,,'EANL.KOD','')
                                             || SM.MAG().EANL().KOD
                                             ?}
                                          || SM.MAG().EANL().KOD
                                          ?};
                              _lok.ILE:=__sc.S; _lok.add()
                           ?};
                           {? _lok.first()
                           ||
                              {!|?
                                 _lok_eanl:=exec('FindInSet','#table','EANL','KOD',_lok.LOK,,,1,,null());
                                 {? _mws & exec('FindAndGet','#table',EANL,_eanl,,"BLOK='T'",0)
                                 || _ileblk+=1
                                 || _scean:={? _aktdkl.SCEAN='brak' || '' || _aktdkl.SCEAN ?};
                                    {? _pal_ref<>null()
                                    || _mat:=null();_ile:=1
                                    || _mat:=SM.M;_ile:=_lok.ILE
                                    ?};
                                    DK_L.index('DK_LN');
                                    DK_L.prefix('Z',DK_LN.ref(),_mat,_eanl,_pal_ref,_aktdkl.TW);
                                    {? ~DK_L.first()
                                     | (_brk:=0;
                                        DK_L.cntx_psh();
                                        {! |? _brk:=DK_L.SCSQL<>_aktdkl.SCSQL; _brk & DK_L.next() !};
                                        DK_L.cntx_pop();
                                        _brk & _pal_ref=null())
                                    ||  exec('add2dk_l','magdok_wspolne',null,DK_LN.ref()
                                        ,_eanl,_lok_eanl,_aktdkl.TW,_aktdkl.TW,_ile
                                        ,SM.MAG,_mat,,,_pal_ref,_pal_ref,,,_scean,_aktdkl.SCSQL);
                                       _ileadd+=1
                                    || _iledkl+=1
                                    ?}
                                 ?};
                                 _lok.next()
                              !}
                           ?};
                           obj_del(_lok)
                        ?};
                        _aktdkl.next()
                     !}
                  ?};
                  obj_del(_aktdkl)
               ?};
               __sc.next()
            !}
         || _ilestn+=1
         ?}
      ?};
      _tab.next()
   !};
   SM.cntx_pop();
   DK_L.cntx_pop();
   M.cntx_pop();
   MG.cntx_pop();
   FUN.info('Dodano: %1 poz..\n\n'@[form(_ileadd,,0,'99')]+
    {? _ilestn || 'Nie dodano (brak stanu dla danego materiału): %1 poz..\n'@[form(_ilestn,,0,'99')] || '' ?}+
    {? _ileblk || 'Nie dodano (blokada lokalizacji dla danego materiału): %1 poz..'@[form(_ileblk,,0,'99')] || '' ?}+
    {? _iledkl || 'Nie dodano (wymiary już na dokumencie): %1 poz..\n'@[form(_iledkl,,0,'99')] || '' ?})
?};
{? _tryb || grp_disp(DK_L,'WERR') ?};
1


\dk_lwgea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: generacja pozycji DK_L-a wg zaznaczonych EANL
::   WE: [_a] - tryb 0(domyślnie) - d&d, 1 - akcja
::  OLD: \dk_lwgea/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};

{? ~_tryb
|| _tab:=dnd_info('dropped_records')
|| {? EANL.sel_size()
   || _tab:=EANL.sel_aget();
      EANL.sel_adel()
   || _tab:=tab_tmp(1,'REF','INTEGER','');
      _tab.blank();
      _tab.REF:=#EANL.ref();
      _tab.add(1)
   ?}
?};

_ileadd:=0;
_ilestn:=0;
_iledkl:=0;
_ileblk:=0;
_mws:=DK_LN.MG().MWS='T';

_pal:=tab_tmp(1,'PAL','STRING[16]','');
_bmt:=tab_tmp(1,'MAT','STRING[16]','');
_czy:=DK_LN.MG().PAL='T';

{? _tab.size() & _tab.first()
 & FUN.ask({? _mws
           || 'Czy przenieść wybrane lokalizacje na reorganizację?\nUwaga. Pominięte zostaną lokalizacje zablokowane.'@
           || 'Czy przenieść wybrane lokalizacje na reorganizację?'@ ?})
|| EANL.cntx_psh();
   DK_L.cntx_psh();
   MG.cntx_psh();
   {!
   |? {? (EANL.clear; EANL.seek(_tab.REF,))
      || SL.index('EANL');
         SL.prefix(EANX.MG,EANL.ref());
         {? SL.first()
         || {!
            |?
               exec('sc_tymczas','magazyn_stan',SL.MG,SL.M,'T');
               {? __sc.first()
               || {!
                  |?
                     {? __sc.SRDK<>''
                     || _pal_ref:=null();
                        {? SL.MG().PAL='T' || _pal_ref:=exec('pal_poz_stats','magdok_palety',__sc.SRDK,SL.MG) ?};
                        _aktdkl:=exec('aktSLwgTW','magdok_wymiary',SL.MG,SL.M,__sc.SRDK,__sc.S,__sc.TW,__sc.SRDK,,1,_pal_ref);
                        {? _aktdkl.size() & (_aktdkl.clear();_aktdkl.first())
                        || {!
                           |? {? _aktdkl.ILE>0 & _aktdkl.ILE>=__sc.S & _aktdkl.EANL=$EANL.ref()
:: sparwdzamy czy ten zapis z tabeli nie jest śmieciem
                               & _aktdkl.SCSQL=__sc.SRDK
                              || _kh:=exec('FindAndGet','#table',DK,_aktdkl.SCSQL,,'DK.KH',null());
                                 _stats:=exec('FindAndGet','#table',DK,_aktdkl.SCSQL,,'DK.STATS',null());
::odnajdywanie lokalizacji zgodnie ze strefami magazynowania
                                 _lok:=
                                 {? SL.MG().WGMGGR='T' & SL.MG().PAL='N'
                                 || exec('findmlok','magdok_wymiary',SL.MG,SL.M,__sc.S,_kh,,,_stats)
                                 || tab_tmp(1,'LOK','STRING[30]','','ILE','REAL','')
                                 ?};
                                 EANL.cntx_psh();

                                 {? ~_lok.first()
                                 || _lok.LOK:= {? SL.MG().WGMGGR='T' & SL.MG().PAL='T'
                                                || {? _pal_ref
                                                   || _pal_eanl:=exec('findpallok','magdok_wymiary',SL.MG,_kh,_stats,_pal_ref);
                                                      exec('FindAndGet','#table',EANL,_pal_eanl,,'EANL.KOD','')
                                                   || SL.MG().EANL().KOD
                                                   ?}
                                                || SL.MG().EANL().KOD
                                                ?};
                                    _lok.ILE:=__sc.S; _lok.add()
                                 ?};
                                 EANL.cntx_pop();
                                 {? _lok.first()
                                 ||
                                    {!|?
                                       _lok_eanl:=exec('FindInSet','#table','EANL','KOD',_lok.LOK,,,1,,null());
                                       {? _mws & exec('FindAndGet','#table',EANL,EANL.ref(),,"BLOK='T'",0)
                                       || _ileblk+=1
                                       || _scean:={? _aktdkl.SCEAN='brak' || '' || _aktdkl.SCEAN ?};
                                          {? _pal_ref<>null()
                                          || _mat:=null();_ile:=1
                                          || _mat:=SM.M;_ile:=_lok.ILE
                                          ?};
                                          DK_L.index('DK_LN');
                                          DK_L.prefix('Z',DK_LN.ref(),_mat,EANL.ref(),_pal_ref,_aktdkl.TW);
                                          {? ~DK_L.first()
                                           | (_brk:=0;
                                              DK_L.cntx_psh();
                                              {! |? _brk:=DK_L.SCSQL<>_aktdkl.SCSQL; _brk & DK_L.next() !};
                                              DK_L.cntx_pop();
                                              _brk & _pal_ref=null())
                                          ||  exec('add2dk_l','magdok_wspolne',null,DK_LN.ref()
                                              ,EANL.ref(),_lok_eanl,_aktdkl.TW,_aktdkl.TW,_ile
                                              ,SL.MG,_mat,,,_pal_ref,_pal_ref,,,_scean,_aktdkl.SCSQL);
                                             _ileadd+=1
                                          || _iledkl+=1
                                          ?}
                                       ?};
                                       _lok.next()
                                    !}
                                 ?};
                                 obj_del(_lok)
                              ?};
                              _aktdkl.next()
                           !}
                        ?};
                        obj_del(_aktdkl)
                     ?};
                     __sc.next()
                  !}
               || _ilestn+=1
               ?};
               SL.next()
            !}
         ?}
      ?};
      _tab.next()
   !};
   EANL.cntx_pop();
   DK_L.cntx_pop();
   MG.cntx_pop();
   FUN.info('Dodano: %1 poz..\n\n'@[form(_ileadd,,0,'99')]+
    {? _iledkl || 'Nie dodano (wymiary już na dokumencie): %1 poz..\n'@[form(_iledkl,,0,'99')] || '' ?}+
    {? _ilestn || 'Nie dodano (brak stanu dla danej lokalizacji): %1 poz..\n'@[form(_ilestn,,0,'99')] || '' ?}+
    {? _ileblk || 'Nie dodano (blokada lokalizacji): %1 poz..'@[form(_ileblk,,0,'99')] || '' ?})
?};
:: aktualizacja znacznikow na paletach
{? _pal.size() & _pal.first()
|| {!
   |? exec('znacznik','magdok_palety',exec('FindAndGet','#table',PAL,_pal.PAL,,,null()));
      _pal.next()
   !}
?};
obj_del(_pal);
obj_del(_bmt);
1


\dk_lwgpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: drag&drop dla reorganizacji
::   WE: [_a] - tryb 0(domyślnie) - d&d, 1 - akcja
::  OLD: \dk_lwgpl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};

{? ~_tryb
|| _tab:=dnd_info('dropped_records')
|| {? PAL.sel_size()
   || _tab:=PAL.sel_aget();
      PAL.sel_adel()
   || _tab:=tab_tmp(1,'REF','INTEGER','');
      _tab.blank();
      _tab.REF:=#PAL.ref();
      _tab.add(1)
   ?}
?};

_ileadd:=0;
_ilestn:=0;
_ileblk:=0;
_ilenie:=0;
_iledkl:=0;
_mws:=DK_LN.MG().MWS='T';

{? _tab.size() & _tab.first()
 & FUN.ask({? _mws
       || 'Czy przenieść wybrane palety na reorganizację?\nUwaga. Pominięte zostaną palety na lokalizacjach zablokowanych.'@
       || 'Czy przenieść wybrane palety na reorganizację?'@ ?})
|| PAL.cntx_psh();
   EANL.cntx_psh();
   DK_L.cntx_psh();
   PAL_POZ.cntx_psh();
   {!
   |? {? (PAL.clear; PAL.seek(_tab.REF,))
      || {? exec('pal_poz_stats','magdok_palety',,,PAL.ref())
         || PAL_POZ.cntx_psh();
            PAL_POZ.use('paletyp');
            PAL_POZ.index('PAL');
            PAL_POZ.prefix(PAL.ref());

            {? PAL_POZ.first()
            || {!
               |? {? (exec('sc_tymczas','magazyn_stan',EANX.MG,PAL_POZ.M,'T');__sc.first())
                  || {!|?
                        {? __sc.SRDK<>'' & __sc.SRDK=PAL_POZ.SCSQL
                        || _aktdkl:=exec('aktSLwgTW','magdok_wymiary',EANX.MG,PAL_POZ.M,__sc.SRDK,__sc.S,__sc.TW,__sc.SRDK,,1,PAL.ref());
                           {? _aktdkl.size() & (_aktdkl.clear();_aktdkl.first())
                           || {!|?
:: sparwdzamy czy ten zapis z tabeli nie jest śmieciem
                                 {? _aktdkl.ILE>0 & _aktdkl.ILE>=__sc.S & _aktdkl.SCSQL=__sc.SRDK
                                 || _eanl:=exec('FindAndGet','#table',EANL,_aktdkl.EANL,,,null());
                                    _kh:=exec('FindAndGet','#table',DK,_aktdkl.SCSQL,,'DK.KH',null());
                                    _stats:=exec('FindAndGet','#table',DK,_aktdkl.SCSQL,,'DK.STATS',null());
::odnajdywanie lokalizacji zgodnie ze strefami magazynowania
                                    _lok_eanl:=exec('findpallok','magdok_wymiary',EANX.MG,_kh,_stats,PAL.ref());
                                    {? _mws & exec('FindAndGet','#table',EANL,_lok_eanl,,"BLOK='T'",0)
                                    || _ileblk+=1
                                    || _scean:={? _aktdkl.SCEAN='brak' || '' || _aktdkl.SCEAN ?};
                                       DK_L.index('DK_LN');
                                       DK_L.prefix('Z',DK_LN.ref(),null(),_eanl,PAL.ref(),_aktdkl.TW);
                                       {? ~DK_L.first()
                                       ||  exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),_eanl,_lok_eanl,date(0,0,0),
                                           date(0,0,0),1,EANX.MG,null,,,PAL.ref(),PAL.ref());
                                          _ileadd+=1
                                       || _iledkl+=1
                                       ?}
                                    ?}
                                 ?};
                                 _aktdkl.next()
                              !}
                           ?};
                           obj_del(_aktdkl)
                        ?};
                        __sc.next()
                     !}
                  || _ilestn+=1
                  ?};
                  PAL_POZ.next()
               !}
            ?};
            PAL_POZ.cntx_pop()
         ?}
      ?};
      _tab.next()
   !};
   PAL.cntx_pop();
   EANL.cntx_pop();
   DK_L.cntx_pop();
   PAL_POZ.cntx_pop();
   FUN.info('Dodano: %1 poz..\n\n'@[form(_ileadd,,0,'99')]+
    {? _iledkl || 'Nie dodano (paleta na dokumencie): %1 poz..\n'@[form(_iledkl,,0,'99')] || '' ?}+
    {? _ilenie || 'Nie dodano (palety niezaakceptowane): %1 poz..\n'@[form(_ilenie,,0,'99')] || '' ?}+
    {? _ilestn || 'Nie dodano (brak stanu dla danej lokalizacji): %1 poz..\n'@[form(_ilestn,,0,'99')] || '' ?}+
    {? _ileblk || 'Nie dodano (blokada lokalizacji): %1 poz..'@[form(_ileblk,,0,'99')] || '' ?})
?};
{? _tryb || grp_disp(DK_L,'WERR') ?};
1


\add_dk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: dodanie jednej pozycji do reorganizacji
::  OLD: \add_dk_l/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
exec('komropal','magdok_wymiary',DK_LN.ref(),1);
EANX.ILP:=0;
DK_L.win_edit({? DK_LN.RODZ='I' || 'RES' |? DK_LN.RODZ='B' || 'REB' || 'RED' ?});
DK_L.blank();
DK_L.DK_LN:=DK_LN.ref();
DK_L.DK:=null();
DK_L.TW:=date(0,0,0);
DK_L.DT:=DK_LN.DT;
DK_L.TM:=DK_LN.TM;
DK_L.US:=DK_LN.US;
DK_L.Z:=DK_LN.AKC;
DK_L.MG:=ST.MAG;
DK_L.Z_DO:='Z';
DK_L.LOK:=DK_L.MG().EANL;
DK_L.LOKDO:={? DK_LN.RODZ='I'
            || DK_LI.index('DK_LN');
               DK_LI.prefix(DK_LN.ref());
               {? DK_LI.first() & DK_LI.size()=1
               || DK_LI.EANL
               || null
               ?}
            || DK_L.MG().EANL
            ?};
M.win_sel('WER_S');
_actm:=M.actions('NL_WER','W');
EANL.win_dict('SLO');
_act:=EANL.actions('SLO','W');
_dict:=PAL.win_dict('WERDK_L');
exec('set_efld_opt','magdok_wymiary');
{? DK_L.edit("exec('rekdk_l','magdok_wymiary')")
|| DK_L.JM:=DK_L.M().J;
   exec('uzupIDkod','magdok_palety',DK_L);
   DK_L.add(1)
?};
EANL.actions('SLO',_act);
M.actions('NL_WER',_actm);
PAL.win_dict(_dict);
~~


\pop_dk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: poprawa jednej pozycji do reorganizacji
::  OLD: \pop_dk_l/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK_L.sel_size()=0
|| _pal:=tab_tmp(1,'PAL','STRING[16]','');
   {? DK_L.PAL<>null & (_pal.clear(); ~_pal.find_key($DK_L.PAL))
   || _pal.blank();
      _pal.PAL:=$DK_L.PAL;
      _pal.add(1)
   ?};
   {? DK_L.PALDO<>null & (_pal.clear(); ~_pal.find_key($DK_L.PALDO))
   || _pal.blank();
      _pal.PAL:=$DK_L.PALDO;
      _pal.add(1)
   ?};
   DK_L.win_edit({? DK_LN.RODZ='I' || 'RES' |? DK_LN.RODZ='B' || 'REB' || 'RED' ?});
   M.win_sel('WER_S');
   _actm:=M.actions('NL_WER','W');
   EANL.win_dict('SLO');
   _act:=EANL.actions('SLO','W');
   _dict:=PAL.win_dict('WERDK_L');
   exec('set_efld_opt','magdok_wymiary');
   {? DK_L.edit("exec('rekdk_l','magdok_wymiary')")
   || DK_L.JM:=DK_L.M().J;
      DK_L.put(1);
      {? DK_L.PAL<>null & (_pal.clear(); ~_pal.find_key($DK_L.PAL))
      || _pal.blank();
         _pal.PAL:=$DK_L.PAL;
         _pal.add(1)
      ?};
      {? DK_L.PALDO<>null & (_pal.clear(); ~_pal.find_key($DK_L.PALDO))
      || _pal.blank();
         _pal.PAL:=$DK_L.PALDO;
         _pal.add(1)
      ?}
   ?};
   EANL.actions('SLO',_act);
   M.actions('NL_WER',_actm);
   PAL.win_dict(_dict);
   {? _pal.size() & _pal.first()
   || PAL.cntx_psh();
      {!
      |? PAL.clear();
         {? PAL.seek(_pal.PAL) || exec('znacznik','magdok_palety',PAL.ref()) ?};
         _pal.next()
      !};
      PAL.cntx_pop()
   ?};
   obj_del(_pal)
|? var_pres('__glokgo')>0
|| DK_L.LOKDO:=__glokgo;
   __gloklp+=DK_L.put(1)
?};
~~


\pop_dkl_przed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: akcja grupowa przed dla pozycji reorganizacji
::  OLD: \pop_dkl_przed/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
sel_nchk();
VAR_DEL.delete('__glokgo','__gloklp','__poppal','__aktwin');
__aktwin:=DK_L.win_edit('?');
__poppal:=tab_tmp(1,'PAL','STRING[16]','');
__gloklp:=0;
DK_L.LOKDO:=null;
DK_L.PALDO:=null;
DK_L.win_edit('RED_L');
EANL.win_dict('SLO');
_act:=EANL.actions('SLO','T');
{? DK_L.edit("{? DK_LN.MG().PAL='T' || __CHK.record(DK_LN,,'LOKDO','PALDO') || __CHK.record(DK_LN,,'LOKDO') ?}")
|| __glokgo:=DK_L.LOKDO
?};
EANL.actions('SLO',_act);
''


\pop_dkl_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: akcja grupowa po dla pozycji reorganizacji
::  OLD: \pop_dkl_po/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? __gloklp>2
|| FUN.info('Poprawiono %1 pozycje.'@[$__gloklp])
|| FUN.info('Poprawiono %1 pozycji.'@[$__gloklp])
?};
DK_L.win_edit(__aktwin);
VAR_DEL.delete('__glokgo','__gloklp','__poppal','__aktwin');
''


\del_dk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: usuniecie pozycji reorganizacji
::  OLD: \del_dk_l/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
_pal:=tab_tmp(1,'PAL','STRING[16]','');
_tab:=DK_L.sel_aget();
DK_L.sel_adel();
DK_L.cntx_psh();
{? _tab.size()
|| {? FUN.ask('Czy usunąć zaznaczone pozycje reorganizacji?'@) & _tab.first()
   || {!
      |? {? DK_L.clear(); DK_L.seek(_tab.REF,DK_L.name())
         || {? DK_L.ZPALET=2
            || exec('poz_bpal','magdok_palety',0,$DK_L.PALDO,$DK_L.PAL,DK_L.M().KTM,DK_L.IL,-1,DK_L.TW);
               exec('zwrilpal','magdok_palety',DK_L.PAL,DK_L.M().KTM,DK_L.IL,-1,DK_L.TW)
            ?};
            {? DK_L.PAL<>null & (_pal.clear(); ~_pal.find_key($DK_L.PAL))
            || _pal.blank();
               _pal.PAL:=$DK_L.PAL;
               _pal.add(1)
            ?};
            {? DK_L.PALDO<>null & (_pal.clear(); ~_pal.find_key($DK_L.PALDO))
            || _pal.blank();
               _pal.PAL:=$DK_L.PALDO;
               _pal.add(1)
            ?};
            DK_L.del()
         ?};
         _tab.next()
      !}
   ?};
   obj_del(_tab)
|? FUN.ask('Czy usunąć pozycję reorganizacji?'@)
|| {? DK_L.ZPALET=2
   || exec('poz_bpal','magdok_palety',0,$DK_L.PALDO,$DK_L.PAL,DK_L.M().KTM,DK_L.IL,-1,DK_L.TW);
      exec('zwrilpal','magdok_palety',DK_L.PAL,DK_L.M().KTM,DK_L.IL,-1,DK_L.TW)
   ?};
   {? DK_L.PAL<>null & (_pal.clear(); ~_pal.find_key($DK_L.PAL))
   || _pal.blank();
      _pal.PAL:=$DK_L.PAL;
      _pal.add(1)
   ?};
   {? DK_L.PALDO<>null & (_pal.clear(); ~_pal.find_key($DK_L.PALDO))
   || _pal.blank();
      _pal.PAL:=$DK_L.PALDO;
      _pal.add(1)
   ?};
   DK_L.del()
?};
{? _pal.size() & _pal.first()
|| PAL.cntx_psh();
   {!
   |? PAL.clear();
      {? PAL.seek(_pal.PAL) || exec('znacznik','magdok_palety',PAL.ref()) ?};
      _pal.next()
   !};
   PAL.cntx_pop()
?};
DK_L.cntx_pop();
obj_del(_pal)


\gen_dk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: generacja pozycji reorganizacji wg zadanego kryterium
::  OLD: \gen_dk_l/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
_typ:=FUN.choice('Wybierz jedną z opcji wyboru materiałów:'@,1,
                 'Zakres od.. do..'@,'Wg &maski'@,'Ujemny &stan'@,'Kompensacja stanów ujemnych'@);
SM.cntx_psh();
DK_L.cntx_psh();
{? _typ=1
|| POMOC.RODZ:='T';
   MGR.index('KOD'); MGR.prefix('T');
   {? MGR.first() || BEER.ODG:=MGR.ref ?}; {? MGR.last()  || BEER.DOG:=MGR.ref ?};
   M.index('RODZ'); M.prefix('T');
   {? M.first() || BEER.ODM:=M.ref ?}; {? M.last()  || BEER.DOM:=M.ref ?};
   BEER.win_edit('ODDO');
   {? BEER.edit()
   || {? BEER.T='G'
      || _acr:=SM.ndx_tmp('',0,'MAG',,0,'M','MGR',0,'M','KTM',0);
         MGR.index('KOD');
         MGR.prefix('T');
         {? MGR.first
         ||
            _size:=MGR.size;
            _licz:=0;
            _time:=time();
            {!
            |? _kod:=MGR.KOD;
               _licz+=1;
::TODO
::               FZL.ECHO(_licz,_size,_time,time(),MGR.KOD);
               MGR.cntx_psh();
               _oki:=(_kod<=BEER.DOG().KOD & _kod>=BEER.ODG().KOD);
               MGR.cntx_pop();
               {? _oki
               || SM.index(_acr);
                  SM.prefix(ST.MAG,MGR.ref());
                  {? SM.first()
                  || {!
                     |? SL.index('MG');
                        SL.prefix(SM.MAG,SM.M);
                        {? SL.first()
                        || {? SL.M().SETW='P'
                           || _tab:=exec('tabWymM','magdok_wymiary',SM.MAG,SM.M);
                              {? _tab.size() & (_tab.clear();_tab.first())
                              || {!
                                 |? {? _tab.ILE>0
                                    || _eanl:=exec('FindAndGet','#table',EANL,_tab.EANL,,,null());
                                       _scean:={? _tab.SCEAN='brak' || '' || _tab.SCEAN ?};
                                       DK_L.index('DK_LN');
                                       DK_L.prefix('Z',DK_LN.ref(),SL.M,_eanl,null(),_tab.TW);
                                       {? ~DK_L.first()
                                        | (_brk:=0;
                                           DK_L.cntx_psh();
                                           {! |? _brk:=DK_L.SCEAN<>_scean; _brk & DK_L.next() !};
                                           DK_L.cntx_pop();
                                           _brk)
                                       || exec('add2dk_l','magdok_wspolne',null,DK_LN.ref()
                                           ,_eanl,SL.MG().EANL,_tab.TW,_tab.TW,_tab.ILE
                                           ,SL.MG,SL.M,,,null(),,,,_scean,_tab.SCSQL)
                                       ?}
                                    ?};
                                    _tab.next()
                                 !}
                              ?};
                              obj_del(_tab)
                           ||
                              {!
                              |? SLD.index('SL');
                                 SLD.prefix(SL.ref());
                                 {? SLD.first()
                                 || {!
                                    |? DK_L.index('DK_LN');
                                       DK_L.prefix('Z',DK_LN.ref(),SL.M,SL.EANL,SL.PAL,SL.TW);
                                       {? ~DK_L.first()
                                        | (_brk:=0;
                                           DK_L.cntx_psh();
                                           {! |? _brk:=DK_L.SCEAN<>SLD.SCEAN; _brk & DK_L.next() !};
                                           DK_L.cntx_pop();
                                           _brk)
                                       || exec('add2dk_l','magdok_wspolne',null,DK_LN.ref()
                                               ,SL.EANL,SL.MG().EANL,SL.TW,date(0,0,0),SLD.IL
                                           ,SL.MG,SL.M,,,SL.PAL,,,,SLD.SCEAN)
                                       ?};
                                       SLD.next()
                                    !}
                                 || DK_L.index('DK_LN');
                                    DK_L.prefix('Z',DK_LN.ref());
                                    {? ~DK_L.find_key(SL.M,SL.EANL,SL.PAL,SL.TW)
                                    || exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),SL.EANL,SL.MG().EANL,SL.TW
                                       ,date(0,0,0),SL.IL,SL.MG,SL.M,,,SL.PAL)
                                    ?}
                                 ?};
                                 SL.next()
                              !}
                           ?}
                        ?};
                        SM.next()
                     !}
                  ?}
               ?};
               MGR.next()
            !}
         ?};
         SM.ndx_drop(_acr)
      || _acr:=SM.ndx_tmp('',0,'MAG',,0,'M',,0,'M','KTM',0);
         M.index('RODZ');
         M.prefix('T');
         {? M.first
         ||
            _size:=M.size;
            _licz:=0;
            _time:=time();
            {!
            |? _kod:=M.KTM;
               _licz+=1;
               M.cntx_psh; _oki:=(_kod<=BEER.DOM().KTM & _kod>=BEER.ODM().KTM); M.cntx_pop;
               {? _oki
               ||
                  SM.index(_acr);
                  SM.prefix(ST.MAG,M.ref);
                  {? SM.first
                  ||
                     {!
                     |? SL.index('MG');
                        SL.prefix(SM.MAG,SM.M);
                        {? SL.first()
                        || {? SL.M().SETW='P'
                           || _tab:=exec('tabWymM','magdok_wymiary',SM.MAG,SM.M);
                              {? _tab.size() & (_tab.clear();_tab.first())
                              || {!
                                 |? {? _tab.ILE>0
                                    || _eanl:=exec('FindAndGet','#table',EANL,_tab.EANL,,,null());
                                       _scean:={? _tab.SCEAN='brak' || '' || _tab.SCEAN ?};
                                       DK_L.index('DK_LN');
                                       DK_L.prefix('Z',DK_LN.ref(),SL.M,_eanl,null(),_tab.TW);
                                       {? ~DK_L.first()
                                        | (_brk:=0;
                                           DK_L.cntx_psh();
                                           {! |? _brk:=DK_L.SCEAN<>_scean; _brk & DK_L.next() !};
                                           DK_L.cntx_pop();
                                           _brk)
                                       || exec('add2dk_l','magdok_wspolne',null,DK_LN.ref()
                                           ,_eanl,SL.MG().EANL,_tab.TW,_tab.TW,_tab.ILE
                                           ,SL.MG,SL.M,,,null(),,,,_scean,_tab.SCSQL)
                                       ?}
                                    ?};
                                    _tab.next()
                                 !}
                              ?};
                              obj_del(_tab)
                           || {!
                              |? SLD.index('SL');
                                 SLD.prefix(SL.ref());
                                 {? SLD.first()
                                 || {!
                                    |? DK_L.index('DK_LN');
                                       DK_L.prefix('Z',DK_LN.ref(),SL.M,SL.EANL,SL.PAL,SL.TW);
                                       {? ~DK_L.first()
                                        | (_brk:=0;
                                           DK_L.cntx_psh();
                                           {! |? _brk:=DK_L.SCEAN<>SLD.SCEAN; _brk & DK_L.next() !};
                                           DK_L.cntx_pop();
                                           _brk)
                                       || exec('add2dk_l','magdok_wspolne',null,DK_LN.ref()
                                               ,SL.EANL,SL.MG().EANL,SL.TW,date(0,0,0),SLD.IL
                                           ,SL.MG,SL.M,,,SL.PAL,,,,SLD.SCEAN)
                                       ?};
                                       SLD.next()
                                    !}
                                 || DK_L.index('DK_LN');
                                    DK_L.prefix('Z',DK_LN.ref());
                                    {? ~DK_L.find_key(SL.M,SL.EANL,SL.PAL,SL.TW)
                                    || exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),SL.EANL,SL.MG().EANL,SL.TW
                                       ,date(0,0,0),SL.IL,SL.MG,SL.M,,,SL.PAL)
                                    ?}
                                 ?};
                                 SL.next()
                              !}
                           ?}
                        ?};
                        SM.next()
                     !}
                  ?}
               ?};
               M.next
            !}
         ?};
         SM.ndx_drop(_acr)
      ?}
   ?}
|? _typ<=3
|| BEER.win_edit('MASK');
   {? _typ=3 | BEER.edit()
   || {? form(BEER.MSK)='' || BEER.MSK:='*' ?};
      SM.index('SA');
      SM.prefix(ST.MAG);
      {? SM.first
      || _size:=SM.size;
         _licz:=0;
         _time:=time();
         {!
         |? _licz+=1;
::TODO
::            FZL.ECHO(_licz,_size,_time,time(),SM.M().KTM);
            {? _typ=3 | exec('analmask','magazyn_inw',BEER.MSK,{? BEER.T='G' || SM.M().MGR().KOD || SM.M().KTM ?})
            || SL.index('MG');
               SL.prefix(SM.MAG,SM.M);
               {? SL.first()
               || {? SL.M().SETW='P'
                  || _tab:=exec('tabWymM','magdok_wymiary',SM.MAG,SM.M);
                     {? _tab.size() & (_tab.clear();_tab.first())
                     || {!
                        |? {? {? _typ=2 || _tab.ILE>0 || _tab.ILE<0 ?}
                           || _eanl:=exec('FindAndGet','#table',EANL,_tab.EANL,,,null());
                              _scean:={? _tab.SCEAN='brak' || '' || _tab.SCEAN ?};
                              DK_L.index('DK_LN');
                              DK_L.prefix('Z',DK_LN.ref(),SL.M,_eanl,null(),_tab.TW);
                              {? ~DK_L.first()
                               | (_brk:=0;
                                  DK_L.cntx_psh();
                                  {! |? _brk:=DK_L.SCEAN<>_scean; _brk & DK_L.next() !};
                                  DK_L.cntx_pop();
                                  _brk)
                              || exec('add2dk_l','magdok_wspolne',null,DK_LN.ref()
                                  ,_eanl,SL.MG().EANL,_tab.TW,_tab.TW,_tab.ILE
                                  ,SL.MG,SL.M,,,null(),,,,_scean,_tab.SCSQL)
                              ?}
                           ?};
                           _tab.next()
                        !}
                     ?};
                     obj_del(_tab)
                  || {!
                     |? {? _typ=2 | (_typ=3 & SL.IL<0)
                        || SLD.index('SL');
                           SLD.prefix(SL.ref());
                           {? SLD.first()
                           || {!
                              |? DK_L.index('DK_LN');
                                 DK_L.prefix('Z',DK_LN.ref(),SL.M,SL.EANL,SL.PAL,SL.TW);
                                 {? ~DK_L.first()
                                  | (_brk:=0;
                                     DK_L.cntx_psh();
                                     {! |? _brk:=DK_L.SCEAN<>SLD.SCEAN; _brk & DK_L.next() !};
                                     DK_L.cntx_pop();
                                     _brk)
                                 || exec('add2dk_l','magdok_wspolne',null,DK_LN.ref()
                                         ,SL.EANL,SL.MG().EANL,SL.TW,date(0,0,0),SLD.IL
                                     ,SL.MG,SL.M,,,SL.PAL,,,,SLD.SCEAN)
                                 ?};
                                 SLD.next()
                              !}
                           || DK_L.index('DK_LN');
                              DK_L.prefix('Z',DK_LN.ref());
                              {? ~DK_L.find_key(SL.M,SL.EANL,SL.PAL,SL.TW)
                              || exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),SL.EANL,SL.MG().EANL,SL.TW
                                 ,date(0,0,0),SL.IL,SL.MG,SL.M,,,SL.PAL)
                              ?}
                           ?}
                        ?};
                        SL.next()
                     !}
                  ?}
               ?}
            ?};
            SM.next()
         !}
      ?}
   ?}
|? _typ=4
|| _buf:=tab_tmp(1,'REF','STRING[16]','','ILE','REAL','');
   {? form(BEER.MSK)='' || BEER.MSK:='*' ?};
   M.index('RODZ');
   M.prefix('T');
   {? M.first()
   || _size:=M.size;
      _licz:=0;
      _time:=time();
      {!
      |? _licz+=1;
::TODO
::       FZL.ECHO(_licz,_size,_time,time(),M.KTM);
         SL.index('MG');
         SL.prefix(ST.MAG,M.ref);
         {? SL.first()
         || {!
            |? SLD.index('SL');
               SLD.prefix(SL.ref());
               {? SLD.first()
               || {!
                  |? {? SLD.IL<0
                     || _scean:=SLD.SCEAN;
                        _add:=1;
                        DK_L.index('DK_LN');
                        DK_L.prefix('Z',DK_LN.ref(),SL.M,SL.EANL,SL.PAL,SL.TW);
                        {? DK_L.first() || {! |? _add:=DK_L.SCEAN<>_scean; _add & DK_L.next() !} ?};
                        {? _add
                        || DK_L.blank();
                           DK_L.DK_LN:=DK_LN.ref();
                           DK_L.DK:=null;
                           DK_L.DT:=DK_LN.DT;
                           DK_L.TM:=DK_LN.TM;
                           DK_L.US:=DK_LN.US;
                           DK_L.Z:=DK_LN.AKC;
                           DK_L.MG:=SL.MG;
                           DK_L.M:=SL.M;
                           DK_L.JM:=SL.M().J;
                           DK_L.SCEAN:=_scean;
                           {? DK_L.M().J2<>null()
                           || DK_L.J2:=DK_L.M().J2;
                              DK_L.WS2:=exec('oblWSP','jm',DK_L.M)
                           ?};
                           _mag:=SL.MG;
                           _ktm:=SL.M;
                           _newlok:=null;
                           _ileroz:=-SLD.IL;
                           _oldlok:=SL.EANL;
                           _eanl:={? SL.EANL=SL.MG().EANL || null || SL.EANL ?};
                           _term:={? SL.TW<>date(0,0,0) || SL.TW || date(0,0,0) ?};
                           _rodz:={? _eanl=null || 0 || 1 ?}+{? _term=date(0,0,0) || 0 || 2 ?};
                           SL.cntx_psh();
                           SLD.cntx_psh();
                           {!
                           |? SLD.index('MG_M');
                              SLD.prefix(_mag,_ktm,_scean,_scean);
                              {? SLD.first
                              || {!
                                 |? {? SLD.IL>0
                                     & {? _rodz=3 || SLD.SL().EANL=_eanl & SLD.SL().TW=_term
                                       |? _rodz=2 || SLD.SL().TW=_term
                                       |? _rodz=1 || SLD.SL().EANL=_eanl
                                       || 1
                                       ?}
                                    || _newlok:=SLD.SL().EANL;
                                       _buf.clear();
                                       _ilesl:=SLD.IL-{? _buf.find_key($SLD.ref()) || _buf.ILE || 0 ?};
                                       {? _ilesl>0
                                       || {? _ilesl>=_ileroz
                                          || DK_L.LOK:=_newlok;
                                             DK_L.TW:=SLD.SL().TW;
                                             DK_L.LOKDO:=_oldlok;
                                             DK_L.IL:=_ileroz;
                                             exec('reoIL2','magdok_wymiary');
                                             exec('uzupIDkod','magdok_palety',DK_L);
                                             DK_L.Z_DO:='Z';
                                             DK_L.clear();
                                             DK_L.add();
                                             _buf.clear();
                                             {? _buf.find_key($SLD.ref())
                                             || _buf.ILE+=_ileroz;
                                                _buf.put(1)
                                             || _buf.blank();
                                                _buf.REF:=$SLD.ref();
                                                _buf.ILE:=_ileroz;
                                                _buf.add(1)
                                             ?};
                                             _ileroz:=0
                                          || DK_L.LOK:=_newlok;
                                             DK_L.TW:=SLD.SL().TW;
                                             DK_L.LOKDO:=_oldlok;
                                             DK_L.IL:=_ilesl;
                                             exec('reoIL2','magdok_wymiary');
                                             exec('uzupIDkod','magdok_palety',DK_L);
                                             DK_L.Z_DO:='Z';
                                             DK_L.clear();
                                             DK_L.add();
                                             _ileroz-=_ilesl;
                                             _buf.clear();
                                             {? _buf.find_key($SLD.ref())
                                             || _buf.ILE+=_ilesl;
                                                _buf.put(1)
                                             || _buf.blank();
                                                _buf.REF:=$SLD.ref();
                                                _buf.ILE:=_ilesl;
                                                _buf.add(1)
                                             ?}
                                          ?}
                                       ?}
                                    ?};
                                    _ileroz>0 & SLD.next()
                                 !}
                              ?};
                               _rodz-=1;
                              _ileroz>0 & _rodz>=0
                           !};
                           SL.cntx_pop();
                           SLD.cntx_pop()
                        ?}
                     ?};
                     SLD.next()
                  !}
               || {? SL.IL<0
                  || DK_L.index('DK_LN');
                     DK_L.prefix('Z',DK_LN.ref());
                     {? ~DK_L.find_key(SL.M,SL.EANL,SL.PAL,SL.TW)
                     || DK_L.blank();
                        DK_L.DK_LN:=DK_LN.ref();
                        DK_L.DK:=null;
                        DK_L.DT:=DK_LN.DT;
                        DK_L.TM:=DK_LN.TM;
                        DK_L.US:=DK_LN.US;
                        DK_L.Z:=DK_LN.AKC;
                        DK_L.MG:=SL.MG;
                        DK_L.M:=SL.M;
                        DK_L.JM:=SL.M().J;
                        {? DK_L.M().J2<>null()
                        || DK_L.J2:=DK_L.M().J2;
                           DK_L.WS2:=exec('oblWSP','jm',DK_L.M)
                        ?};
                        _mag:=SL.MG;
                        _ktm:=SL.M;
                        _newlok:=null;
                        _ileroz:=-SL.IL;
                        _oldlok:=SL.EANL;
                        _eanl:={? SL.EANL=SL.MG().EANL || null || SL.EANL ?};
                        _term:={? SL.TW<>date(0,0,0) || SL.TW || date(0,0,0) ?};
                        _rodz:={? _eanl=null || 0 || 1 ?}+{? _term=date(0,0,0) || 0 || 2 ?};
                        SL.cntx_psh();
                        {!
                        |? SL.index('AUTD');
                           SL.prefix(_mag,_ktm);
                           {? SL.first
                           || {!
                              |? {? SL.IL>0
                                  & {? _rodz=3 || SL.EANL=_eanl & SL.TW=_term
                                    |? _rodz=2 || SL.TW=_term
                                    |? _rodz=1 || SL.EANL=_eanl
                                    || 1
                                    ?}
                                 || _newlok:=SL.EANL;
                                    _buf.clear();
                                    _ilesl:=SL.IL-{? _buf.find_key($SL.ref()) || _buf.ILE || 0 ?};
                                    {? _ilesl>0
                                    || {? _ilesl>=_ileroz
                                       || DK_L.LOK:=_newlok;
                                          DK_L.TW:=SL.TW;
                                          DK_L.LOKDO:=_oldlok;
                                          DK_L.IL:=_ileroz;
                                          exec('reoIL2','magdok_wymiary');
                                          exec('uzupIDkod','magdok_palety',DK_L);
                                          DK_L.Z_DO:='Z';
                                          DK_L.add();
                                          _buf.clear();
                                          {? _buf.find_key($SL.ref())
                                          || _buf.ILE+=_ileroz;
                                             _buf.put(1)
                                          || _buf.blank();
                                             _buf.REF:=$SL.ref();
                                             _buf.ILE:=_ileroz;
                                             _buf.add(1)
                                          ?};
                                          _ileroz:=0
                                       || DK_L.LOK:=_newlok;
                                          DK_L.TW:=SL.TW;
                                          DK_L.LOKDO:=_oldlok;
                                          DK_L.IL:=_ilesl;
                                          exec('reoIL2','magdok_wymiary');
                                          exec('uzupIDkod','magdok_palety',DK_L);
                                          DK_L.Z_DO:='Z';
                                          DK_L.add();
                                          _ileroz-=_ilesl;
                                          _buf.clear();
                                          {? _buf.find_key($SL.ref())
                                          || _buf.ILE+=_ilesl;
                                             _buf.put(1)
                                          || _buf.blank();
                                             _buf.REF:=$SL.ref();
                                             _buf.ILE:=_ilesl;
                                             _buf.add(1)
                                          ?}
                                       ?}
                                    ?}
                                 ?};
                                 _ileroz>0 & SL.next()
                              !}
                           ?};
                            _rodz-=1;
                           _ileroz>0 & _rodz>=0
                        !};
                        SL.cntx_pop()
                     ?}
                  ?}
               ?};
               SL.next()
            !}
         ?};
         M.next()
      !}
   ?};
   obj_del(_buf)
?};
DK_L.cntx_pop();
SM.cntx_pop();
echo();
prgs_clr()


\actdk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wlacza/wylacza akcje dla DK_L-a
::  OLD: \actdk_l/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK_L.PAL<>null() & DK_L.PAL().STAN='I' || DK_L.PAL:=null() ?};
{? DK_L.PALDO<>null() & DK_L.PALDO().STAN='I' || DK_L.PALDO:=null() ?};
exec('set_efld_m','magdok_wymiary');
_no_et:={? ~exec('isDEFetyk','magazyn_mobi','DK_L') || 'T' || '' ?};

{? DK_L.ZPALET=2
|| DK_L.actions('WERR','P')
|| DK_L.actions('WERR','')
?};
DK_L.actions_grayed('WERR',_no_et);
~~


\rekdk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: sprawdzenie wypelnienia pol dla DK_L
::   WY: '' - gdy wszystko w porzadku
::  OLD: \rekdk_l/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
:: uzupelnienie lokalizacji lokalizacja domyslna
{? DK_L.LOK=null || DK_L.LOK:=DK_L.MG().EANL ?};
{? DK_L.LOKDO=null & DK_L.DK_LN().RODZ<>'I' || DK_L.LOKDO:=DK_L.MG().EANL ?};
:: uzupelnienie terminu waznosci
{? DK_L.DK_LN().RODZ='I' || DK_L.TW:=DK_L.TWDO ?};

{? ST.MAG().PAL='T' & DK_L.DK_LN().RODZ<>'B'
|| {? DK_L.ZPALET<2 || DK_L.IL:=1; DK_L.IL2:=0 ?};
   {? DK_L.DK_LN().RODZ='I' & DK_L.PAL=null || DK_L.PAL:=DK_L.PALDO ?};
   PAL.cntx_psh();
   {? DK_L.PAL<>null || exec('znacznik','magdok_palety',DK_L.PAL) ?};
   {? DK_L.PALDO<>null || exec('znacznik','magdok_palety',DK_L.PALDO) ?};
   PAL.cntx_pop()
|? ST.MAG().PAL='T' & DK_L.DK_LN().RODZ='B'
|| DK_L.PALDO:=null;
   DK_L.TWDO:=date(0,0,0);
   DK_L.LOKDO:=ST.MAG().EANL
?};
exec('uzupIDkod','magdok_palety',DK_L);
{? (ST.MAG().PAL='N' | DK_L.DK_LN().RODZ='B') & DK_L.M=null || FUN.info('Należy podać indeks materiałowy.'@); 'M'
|? DK_L.IL=0 || FUN.info('Należy podać ilość.'@); 'IL'
|? DK_L.LOK=null
|| FUN.info('Brak lokalizacji \"Z\".'@);
   'LOK'
|? DK_L.LOK=null & DK_L.MG().EANL=null
|| FUN.info('Brak lokalizacji \"Do\".'@);
   'LOKDO'
|? DK_L.DK_LN().RODZ='I' & exec('FindInSet','#table','DK_LI','DK_LNLOK',DK_L.LOKDO,DK_L.DK_LN)=null
|| FUN.info('Lokalizacji musi mieć jedną z wartości wyszczególnionych na liście Reorganizacji lokalizacji.'@);
   'LOKDO'
|? DK_L.MG().PAL='T' & DK_L.DK_LN().RODZ<>'I' & DK_L.PAL=null
|| {? DK_L.DK_LN().RODZ='B'
   || FUN.info('Należy podać paletę.'@)
   || FUN.info('Brak palety \"Z\".'@)
   ?};
   'KODPAL'
|? DK_L.MG().PAL='T' & DK_L.DK_LN().RODZ<>'B' & DK_L.PALDO=null
|| {? DK_L.DK_LN().RODZ='I' || FUN.info('Brak palety.'@) || FUN.info('Brak palety \"Do\".'@) ?};
   'KODPALD'
|? DK_L.MG().PAL='T' & DK_L.PAL().MG<>DK_L.MG
|| FUN.info('Brak palety w danym magazynie.'@);
   {? DK_L.DK_LN().RODZ<>'I' || 'KODPAL' || 'KODPALD' ?}
|? (1+DK_L.MG().TYP)='D' & DK_L.MG().PAL<>'T' & DK_L.M<>null & (';DAPZ'*DK_L.M().IDMOB)>1 & DK_L.SCEAN=''
|| FUN.info('Należy podać kod identyfikujący dostawę.'@);
   {? DK_L.M().IDZP & DK_L.M().SETW='D' || 'DOSTAWA' || 'SCEAN' ?}
|? DK_L.DK_LN().RODZ<>'I' & (1+DK_L.MG().TYP)='D' & DK_L.MG().PAL<>'T' & DK_L.M<>null & (';DAPZ'*DK_L.M().IDMOB)>1
  & (_ilscean:=exec('stnscean','magazyn_stan',DK_L.MG,DK_L.M,DK_L.SCEAN,{? (1+menu_txt())='P' || DK_L.ref() || null ?}
                ,DK_L.LOK,DK_L.TW,1,DK_L.TW=date(0,0,0) & DK_L.TW<>DK_L.TWDO,{? DK_L.M().IDZP || DK_L.SCSQL || '' ?});
     _ilscean<DK_L.IL)
|| _msg:={? DK_L.M().IDZP & DK_L.SCSQL<>'' || ' (wskazana dostawa)'@ || '' ?};
   FUN.info('Zbyt duża ilość wg kodu identyfikującego dostawę%4.\n'
    'Dostępne jest (lokalizacja: %1, termin ważności: %2): %3.'@[DK_L.LOK().KOD,form(DK_L.TW),form(_ilscean,,,'99'),_msg]);
   'IL'
|? DK_L.MG().PAL='N' & exec('get','#params',600200,2)='T' & ~exec('sprilwym','magdok_poz',1,,DK_L.SCSQL)
|| 'IL'
|? DK_L.DK_LN().RODZ<>'B'
||
:: sprawdzenie powielenia pozycji
   _ref:={? (1+menu_txt())='P' || DK_L.ref() || null ?};
   _lok:=DK_L.LOK;
   _lokdo:=DK_L.LOKDO;
   _paldo:=DK_L.PALDO;
   _tw:=DK_L.TW;
   _twdo:=DK_L.TWDO;
   _m:=DK_L.M;
   _pal:=DK_L.PAL;
   _scean:=DK_L.SCEAN;
   _scsql:={? _scean<>'' & DK_L.M().IDZP || DK_L.SCSQL || '' ?};
   DK_L.cntx_psh();
   DK_L.index('DK_LN');
   DK_L.prefix('Z',DK_LN.ref(),_m,_lok,_pal,_tw,_lokdo,_paldo,_twdo);
   {? _scean='' & _scsql=''
   || _ok:={? DK_L.first() || {? _ref=null || 0 || DK_L.ref()=_ref ?} || 1 ?}
   || _ok:=1;
      {? DK_L.first()
      || {!
         |? _ok:={? DK_L.ref()=_ref || 1 || {? _scsql<>'' || DK_L.SCSQL<>_scsql || DK_L.SCEAN<>_scean ?} ?};
            _ok & DK_L.next()
         !}
      ?}
   ?};
   DK_L.cntx_pop();
   {? _ok
   || ''
   || FUN.info({? _scean=''  || 'Wprowadzono już pozycję o podanych wymiarach.'@
               |? _scsql<>'' || 'Wprowadzono już pozycję o podanych wymiarach\ndla wybranej dostawy.'@
                             || 'Wprowadzono już pozycję o podanych wymiarach\ni kodzie identyfikującym dostawę.'@ ?});
      {? DK_L.DK_LN().RODZ<>'I' || 'LOK' || 'LOKDO' ?}
   ?}
|| ''
?}


\ile_lok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: sprawdza ile jest lokalizacji na danej reorganizacji
::   WE: _a - ref DK_LN
::       _b - ref lokalizacji
::   WY: ilosc
::  OLD: \ile_lok/cechy.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:=0;
DK_L.cntx_psh();
DK_L.index('DK_LNLOK');
DK_L.prefix(_a,_b);
_wyn:=DK_L.size();
DK_L.cntx_pop();
_wyn


\komropal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza i daje komunikat o spojnosci danych
::   WE: _a - ref DK_LN
::       _b - 1-dolacz 2-rozpakuj 0-pelna kontrola i ewentualna blokada
::   WY: 1-ok 0-nie
::  OLD: \komropal/mws2.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:=1;
_zpal:=0;
_palroz:='';
_many:=0;
DK_LN.cntx_psh();
DK_L.cntx_psh();
DK_L.index('DK_LN');
DK_L.prefix('Z',_a);
{? DK_L.first()
|| _zpal:=DK_L.ZPALET=2;
   {!
   |? {? DK_L.ZPALET=2
      || {? _palroz=''
         || _palroz:=DK_L.PALDO().KODK
         || _many:=_palroz<>DK_L.PALDO().KODK;
            {? _many || _wyn:=0 ?}
         ?}
      ?};
      {? _b=1 & DK_L.ZPALET=2 || _wyn:=0
      |? _b=2 & DK_L.ZPALET<2 || _wyn:=0
      |? ~_b & _zpal<>(DK_L.ZPALET=2) || _wyn:=0
      ?};
      _wyn & DK_L.next()
   !}
?};
DK_LN.cntx_pop();
DK_L.cntx_pop();
{? ~_wyn
|| {? _b=1 || FUN.info('W dokumencie reorganizacji istnieją pozycje powstałe z rozpakowania.\n'
               'Jeśli dołączymy pozycję nie będzie można przesłać reorganizacji na urządzenie mobilne.'@)
   |? _b=2 || FUN.info('W dokumencie reorganizacji istnieją pozycje nie pochodzące z rozpakowania.\n'
               'Jeśli dołączymy pozycję z rozpakowania nie będzie można przesłać reorganizacji na urządzenie mobilne.'@)
   || {? ~_many
      || FUN.info('W dokumencie reorganizacji istnieją pozycje z rozpakowania i nie pochodzące z rozpakowania.\n'
                  'Niemożliwe przesłanie reorganizacji na urządzenie mobilne.'@)
      || FUN.info('W dokumencie reorganizacji istnieją pozycje z rozpakowania na różne palety.\n'
                  'Niemożliwe przesłanie reorganizacji na urządzenie mobilne.'@)
      ?}
   ?}
?};
_wyn


\dkli0grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: wyswietlenie informacji o lokalizacjach magazynu - przed obsluga dla DK_LI
::  OLD: \dkli0grp/cechy.fml
::----------------------------------------------------------------------------------------------------------------------

{? DK_LI.win_sel('?')<>'GRES'
|| grp_disp(EANL,'WERDK_L');
   DK_L.index('DK_LN');
   DK_L.prefix('Z',DK_LN.ref());
   grp_disp(DK_L,'WERR')
|| DK_L.index('DK_LNLOK');
   DK_L.prefix(DK_LN.ref());
   grp_disp(DK_L,'WERA')
?};
1


\dkli_grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: wyswietlenie informacji o lokalizacjach magazynu dla DK_LI
::  OLD: \dkli_grp/cechy.fml
::----------------------------------------------------------------------------------------------------------------------

1


\aktdk_li
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: Aktualizacja DK_L wg DK_LI
::  OLD: \aktdk_li/cechy.fml
::----------------------------------------------------------------------------------------------------------------------

DK_L.cntx_psh();
DK_L.index('DK_LN');
DK_L.prefix('Z',DK_LN.ref());
{? DK_L.first()
|| {!
   |? {? exec('FindInSet','#table','DK_LI','DK_LNLOK',DK_L.LOKDO,DK_L.DK_LN)=null
      || DK_L.del()
      || DK_L.next()
      ?}
   !}
?};
DK_L.cntx_pop();
grp_disp(DK_L,'WERR')


\rekdk_li
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: sprawdzenie poprawnosci wypelnienia pol dla DK_LI
::  OLD: \rekdk_li/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? DK_LI.EANL=null
|| FUN.info('Należy podać kod lokalizacji.'@);
   _wyn:='EANL'
|| _ean:=DK_LI.EANL;
   _ref:={? (1+menu_txt())='P' || DK_LI.ref() || null ?};
   DK_LI.cntx_psh();
   DK_LI.index('DK_LNLOK');
   DK_LI.prefix(DK_LN.ref(),_ean);
   {? DK_LI.first()
   || {!
      |? {? DK_LI.ref()<>_ref
         || _wyn:='EANL';
            0
         || DK_LI.next()
         ?}
      !}
   ?};
   DK_LI.cntx_pop();
   {? _wyn<>'' || FUN.info('Podana lokalizacja została już dołączona do spisu.\nNależy podać inną.'@) ?}
?};
_wyn


\bl_dkln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: Wartosc poczatkowa dla pola DK_LI.DK_LN
::  OLD: \bl_dkln/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
DK_LN.ref()


\dk_ln_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła określiająca ikony rodzaju dokumentu reorganizacji
::----------------------------------------------------------------------------------------------------------------------
{? DK_LN.RODZ='S' || DK_LN.RODZ:=''; exec('standardowa','icon')
|? DK_LN.RODZ='K' || DK_LN.RODZ:=''; exec('zmieniany','icon')
|? DK_LN.RODZ='I'
|| {? exec('czy_zinw','magdok_wspolne',$DK_LN.ref())

   || DK_LN.RODZ:=''; exec('inwentaryzacja','icon')
   || DK_LN.RODZ:=''; exec('arkuszinw','icon')
   ?}
|? DK_LN.RODZ='D' || DK_LN.RODZ:=''; exec('depaletyzacja','icon')
|? DK_LN.RODZ='B' || DK_LN.RODZ:=''; exec('paletowa','icon')
|? DK_LN.RODZ='C' || DK_LN.RODZ:=''; exec('czytnik','icon')
|| DK_LN.RODZ:=''; exec('pusta','#icon')
?}


\kol_dkln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: kolorowanie rekordu dla DK_LN
::  OLD: \kol_dkln/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
exec('dk_ln_actions','magdok_wymiary');
{? DK_LN.AKC='T' || 'DK_LN#01#01'
|| 1
?}


\genreorg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: generacja reorganizacji na podstawie przyjecia dostawy oraz na podstawie dokumentu wydania
::   WE: [_a] 1-tabela ND 0(domyślnie)-tabela EANN
::       [_b] 0-komunikaty(domyślnie) 1-nie + automatyczne zakończenie
::       [_c] 1-przełączenie na pozycje reorganizacji 0-nie(domyślnie)
::       [_d] 1-bez przełączenia na reorganizację 0-tak(domyślnie)
::   WY: ref DK_LN lub null()
::  OLD: \genreorg/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};

_wyn:=null();
_refreo:=null;

VAR_DEL.delete('__loki','__magik','__eanp');
__loki:=tab_tmp(1,'LOK','STRING[30]','','ILE','REAL','');
__magik:=tab_tmp(2,'MG1','STRING[20]',''
          ,'MG2','STRING[32]','');
__eanp:=tab_tmp(3,'MG1','STRING[20]',''
         ,'MG2','STRING[32]',''
         ,'LP','INTEGER',''
         ,'EANP','STRING[16]',''
         ,'EANN','STRING[16]',''
         ,'ILR','REAL',''
         ,'MAT','STRING[50]',''
         ,'NAZ','STRING[100]',''
         ,'JM','STRING[10]',''
         ,'NRC','INTEGER',''
         ,'OLD','INTEGER',''
         ,'ILP','REAL',''
         ,'CZY','INTEGER',''
         ,'SCEAN','STRING[128]',''
         ,'IDEANC','STRING[31]','');

_ref:=EANN.ref();
EANN.cntx_psh();
EANP.cntx_psh();

{? _a & (_spr:={? ND.Z='T'
               || 1
               |? exec('FindInSet','#table','DK','DOKMAG',ND.ref())=null
               || -1
               |? ND.TYP().P='T'
               || exec('ini_kom','#message','Informacje o możliwości generacji reorganizacji'@);
                  {? exec('sprndlok','magdok_poz')<>'' || _oki:=-2 || _oki:=1 ?};
                  exec('end_kom','#message');
                  _oki
               || exec('sprloknd','magdok_wymiary',ND.ref())
               ?})<=0
|| {? _spr=0
   || {? _b
      || _spr:=exec('uzup_dom','magdok_wymiary',ND.ref(),1)
      |? _spr:=FUN.choice('Nie wszystkie pozycje dokumentu mają przypisane lokalizacje (na całą ilość na pozycji).\n'
                'Generacja reorganizacji możliwa wyłącznie po uzupełnieniu lokalizacji.\n'
                'Czy uzupełnić lokalizacje na pozycjach?'@,,'Domyślną'@,'Wybraną'@)
      || _spr:=exec('uzup_dom','magdok_wymiary',ND.ref(),_spr)
      ?}
   |? _spr=-1
   || FUN.info('Dokument nie ma pozycji.\nGeneracja reorganizacji niemożliwa.'@)
   ?}
?};
{? _a & _spr<=0
|| 0
|? _a & ND.MAG().PAL='T' & ~exec('czysapal','magdok_palety',ND.ref())
|| FUN.info('Na dokumencie są wyłącznie palety z rozpakowania.\nUtworzenie reorganizacji niemożliwe.'@);
   0
|? ~_a & EANN.STAN<>'Z'
|| FUN.info('Operacja dostępna wyłącznie dla zakończonej dostawy.'@)
|? ~_a & EANN.STAN='Z' & ~exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT)
|| FUN.info('W obecnej chwili nie wszystkie pozycje operacji zostały zaktualizowane.\n'
    'Generacja reorganizacji niemożliwa.'@)
|? (_refreo:=exec('FindInSet','#table','DK_LN','ZDOK',{? _a || $ND.ref() || $EANN.ref() ?}
             ,{? _a || $ND.ref() || $EANN.ref() ?}); _refreo<>null)
|| {? _a
   || {? _b
      || _wyn:=_refreo
      |? _d
      || FUN.info('Wygenerowano już reorganizację na podstawie danego dokumentu.'@);
         _wyn:=_refreo
      |? FUN.ask('Wygenerowano już reorganizację na podstawie danego dokumentu.\nCzy przełączyć na reorganizację?'@)
      || exec('goto_reo','magdok_wymiary',_refreo);
         _wyn:=_refreo
      ?}
   || FUN.info('Wygenerowano już reorganizację na podstawie danego dokumentu.'@);
      _wyn:=_refreo
   ?}
|? {? _a || 1 || EANN.STAN='Z' ?}
||
:: magazyny typu MWS dla lokalizacji
   {? _a
   || __magik.clear();
      __magik.blank();
      __magik.MG1:=$ND.MAG;
      __magik.MG2:=$ND.MAG;
      __magik.add(1);
      _mags:=1
   || exec('pob_mag','magazyn_mob',,1,1);
      _mags:=__magik.size()
   ?};
:: dodatkowo sprawdzenie czy magazyny paletowe
   _czy_pal:=0;
   __magik.clear();
   {? __magik.first()
   || {!
      |? _czy_pal:=exec('FindAndGet','#table',MG,(16+__magik.MG1),,"PAL",'')='T';
         ~_czy_pal & __magik.next()
      !}
   ?};
   {? _a
   || _wyp:=1;
      _pal:=1
   || _wyp:=exec('sprwyp_m','magazyn_mob',EANN.ref());
      _pal:=exec('sprwyp_p','magazyn_mob',EANN.ref())
   ?};
   {? ~_mags
   || {? ~_b
      || FUN.info('Na przyjęciu brak pozycji związanych z magazynem(ami) typu MWS.\n'
          'Generacja reorganizacji niemożliwa.'@)
      ?}
   |? ~_wyp
   || {? ~_b
      || FUN.info('Istnieją pozycje bez indeksów materiałowych.\n'
          'Przed reorganizacją należy je uzupełnić.'@)
      ?}
   |? _wyp<0
   || {? ~_b
      || FUN.info('Istnieją pozycje bez prawidłowych kodów identyfikacyjnych.\n'
          'Przed reorganizacją należy je uzupełnić.'@)
      ?}
   |? ~_pal
   || {? ~_b
      || FUN.info('Istnieją pozycje bez zdefiniowanych palet w systemie.\n'
          'Przed reorganizacją należy je uzupełnić.'@)
      ?}
   |? {? _a | _czy_pal
      || {? _b
         || _opc:=1
         || _opc:=FUN.ask({? ND.TYP().P='N' & ND.MAG().SP_REANL='N'
                          || 'Czy utworzyć reorganizację?'
                             '\n\nUwaga. Magazyn bez podpowiadania lokalizacji dla wydań\n'
                             '(reorganizacja z lokalizacji domyślnej dla wszystkich pozycji).'@
                          || 'Czy utworzyć reorganizację?'@
                          ?}+
                          {? ND.MAG().PAL='T'
                          || '\n\nUwaga. Na dokument reorganizacji zostaną przeniesione tylko pełne palety\n'
                             '(bez rozpakowania).'@
                          || ''
                          ?})
         ?}
      || _opc:=FUN.choice('Czy utworzyć reorganizację?'@,,'Jedno urządzenie'@,'Kilka urządzeń'@)
      ?};
      _opc
   ||

      {? _opc=2 || {? exec('listczyt','magazyn_mob') || _ok:=1 || _opc:=1 ?} ?};
      __magik.clear();
      {? __magik.first()
      || _i:=0;
         {!
         |? {? _opc=1
            || EANX.win_edit('WYSYLKA');
               _ok:={? _a=1 || 1 || EANX.edit("exec('sprwysyl','magazyn_mob',1)") ?}
            || EANX.NRC_Z:=#(16-__magik.MG1)
            ?};
            do();
            {? ~_a
            || __eanp.clear();
               __eanp.prefix(__magik.MG1,__magik.MG2);
               _czy_pal:=exec('FindAndGet','#table',MG,(16+__magik.MG1),,"PAL",'')='T';
               {? _czy_pal
               || _palety:=tab_tmp(1,'PAL','STRING[16]','');
                  EANP.cntx_psh();
                  {? __eanp.first()
                  || {!
                     |? {? (EANP.clear; EANP.seek(__eanp.EANP,EANP.name())) & EANP.PAL<>null
                        || _palety.clear();
                           {? ~_palety.find_key($EANP.PAL)
                           || _palety.blank();
                              _palety.PAL:=$EANP.PAL;
                              _palety.add(1)
                           ?}
                        ?};
                        __eanp.next()
                     !}
                  ?};
                  EANP.cntx_pop()
               ?}
            || _czy_pal:=ND.MAG().PAL='T';
               _przyj:=ND.TYP().P='T';
               _dlakh:=ND.DLAKH;
               _dlref:={? _dlakh<>'' || exec('FindInSet','#table','KH','KOD',_dlakh,2) || null ?};
               {? ~_czy_pal
               || DK.index('DOKMAG');
                  DK.prefix(ND.ref())
               || _palety:=tab_tmp(1,'PAL','STRING[16]','','LOK','STRING[16]','');
                  DK_L.index('CZYPAL');
                  DK_L.prefix(ND.ref());
                  {? DK_L.first()
                  || {!
                     |? {? DK_L.ZPALET<>2
                        || _palety.clear();
                           {? ~_palety.find_key($DK_L.PAL)
                           || _palety.blank();
                              _palety.PAL:=$DK_L.PAL;
                              _palety.LOK:=$DK_L.LOK;
                              _palety.add(1);
                              {? DK_L.PAL<>null & DK_L.PAL().AKT='N' || exec('aktywpal','magdok_palety',DK_L.PAL) ?}
                           ?}
                        ?};
                        DK_L.next()
                     !}
                  ?};
                  _palety.clear()
               ?}
            ?};
            {? _ok & {? ~_a || __eanp.first() |? ~_czy_pal || DK.first() || _palety.first() ?}
            ||
::             zakladamy dokument reorganizacji
               DK_LN.clear();
               DK_LN.blank();
               _i+=0.033333;
               DK_LN.TM+=_i;
               DK_LN.MG:=exec('FindAndGet','#table',MG,(16+__magik.MG1),,,null());
               DK_LN.RODZ:='S';
               DK_LN.ZDOK:={? _a || $ND.ref() || $EANN.ref() ?};
               _refakc:={? ~DK_LN.add()
                        || undo();
                           null
                        || DK_LN.ref()
                        ?};
               {? _refakc<>null
               || _wyn:=_refakc;
                  {!
                  |? {? ~_a & (EANP.clear; EANP.seek(__eanp.EANP,EANP.name()))
                      & {? _czy_pal || _palety.clear(); _palety.find_key($EANP.PAL) || 1 ?}
                     ||
::                      tabela wolnych lokalizacji
                        {? _czy_pal
                        || exec('findmpal','magdok_palety',EANP.LOKZ().MG,EANP.PAL,null,__loki,1);
                           _palety.clear();
                           {? _palety.find_key($EANP.PAL) || _palety.del() ?}
                        || exec('findmlok','magdok_wymiary',EANP.LOKZ().MG,EANP.M
                            ,{? _opc=2 || __eanp.ILR || EANP.ILS ?},null,__loki,_refakc)
                        ?};
                        __loki.clear();
                        {? __loki.first()
                        || {!
                           |? {? __loki.ILE>0
                              || _lokdo:=exec('FindInSet','#table','EANL','KOD',__loki.LOK,__loki.LOK);
                                 {? _czy_pal
                                 || {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),EANP.LOKZ,_lokdo,date(0,0,0)
                                         ,date(0,0,0),1,DK_LN.MG,null,0,,EANP.PAL,EANP.PAL,,,EANP.SCEAN)
                                    || undo();
                                       0
                                    ?};
                                    0
                                 || {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),EANP.LOKZ,_lokdo,EANP.TW
                                         ,EANP.TW,__loki.ILE,DK_LN.MG,EANP.M,0,,EANP.PAL,EANP.PAL,,,EANP.SCEAN)
                                    || undo();
                                       0
                                    || __loki.next()
                                    ?}
                                 ?}
                              || __loki.next()
                              ?}
                           !}
                        ?}
                     |? _a
                     || {? ~_czy_pal
                        || _przy:=DK.N().TYP().P='T';
                           DK_L.index('DKAUTO');
                           {? _przy || DK_L.prefix(DK.ref(),null()) || DK_L.prefix(DK.ref(),null(),0) ?};
                           {? DK_L.first()
                           || _mat:=DK.M;
                              _mag:=DK.N().MAG;
                              _dlakh:=DK.N().DLAKH;
                              _scean:=DK.SCEAN;
                              _scsql:=DK.SRDK;
                              _tw:={? DK.M().SETW='P' || DK.TW || date(0,0,0) ?};
                              _dlref:={? _dlakh<>'' || exec('FindInSet','#table','KH','KOD',_dlakh,2) || null ?};
                              _akc:=DK.N().Z='T';
                              {? ~_przy
                              || {? _akc
                                 || _iledkl:=DK.IL
                                 || _iledkl:=0;
                                    DK_L.cntx_psh(); {! |? _iledkl+=DK_L.IL; DK_L.next() !}; DK_L.cntx_pop()
                                 ?};
                                 _lokz:=exec('rozpdk_l','magdok_poz',0,_mag,_mat,_iledkl,_dlakh,,1,,_scean)
                              ?};
                              {!
                              |? {? _przy
                                 || exec('findmlok','magdok_wymiary',_mag,_mat,DK_L.IL,_dlref,__loki,_refakc
                                     ,DK_L.DK().STATS);
                                    __loki.clear();
                                    {? __loki.first()
                                    || {!
                                       |? {? __loki.ILE>0
                                          || _lokdo:=exec('FindInSet','#table','EANL','KOD',__loki.LOK,__loki.LOK);
                                             {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),DK_L.LOK,_lokdo
                                                  ,DK_L.TW,DK_L.TW,__loki.ILE,_mag,_mat,0,,DK_L.PAL,DK_L.PAL
                                                  ,,,_scean,_scsql)
                                             || undo();
                                                0
                                             || __loki.next()
                                             ?}
                                          || __loki.next()
                                          ?}
                                      !}
                                    ?}
                                 || BEER.MG:=_mag;
                                    _ileroz:={? _akc || -DK_L.IL || DK_L.IL ?};
                                    _lokz.clear();
                                    {? _lokz.size() & _lokz.first()
                                    || {!
                                       |? {? _lokz.IL>0
                                          || _lokdo:=exec('FindAndGet','#table',EANL,_lokz.EANL,,,null());
                                             {? _lokz.IL>_ileroz
                                             || _iledo:={? _akc || -DK_L.IL || DK_L.IL ?};
                                                _lokz.IL-=_iledo;
                                                _lokz.put(1);
                                                _ileroz:=0
                                             |? _lokz.IL<=_ileroz
                                             || _iledo:=_lokz.IL;
                                                _lokz.IL:=0;
                                                _lokz.put(1);
                                                _ileroz-=_iledo
                                             ?};

                                             {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),_lokdo,DK_L.LOK
                                                 ,DK_L.TW,DK_L.TW,_iledo,DK_LN.MG,_mat,0,,DK_L.PAL,DK_L.PAL,,,_scean)
                                             || undo();
                                                0
                                             || _lokz.next()
                                             ?}
                                          || _lokz.next()
                                          ?} & _ileroz>0
                                       !}
                                    ?}
                                 ?};
                                 DK_L.next()
                              !};
                              {? ~_przy || obj_del(_lokz) ?}
                           ||
::                            brak rozpiski po wymiarach
                              _mat:=DK.M;
                              _dlakh:=DK.N().DLAKH;
                              _dlref:={? _dlakh<>'' || exec('FindInSet','#table','KH','KOD',_dlakh,2) || null ?};
                              exec('findmlok','magdok_wymiary',ND.MAG,_mat,DK.IL,_dlref,__loki,_refakc,DK.STATS);
                              __loki.clear();
                              {? __loki.first()
                              || {!
                                 |? {? __loki.ILE>0
                                    || _lokdo:=exec('FindInSet','#table','EANL','KOD',__loki.LOK,__loki.LOK);
                                       {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),DK_LN.MG().EANL,_lokdo
                                            ,date(0,0,0),date(0,0,0),__loki.ILE,DK_LN.MG,_mat,0)
                                       || undo();
                                          0
                                       || __loki.next()
                                       ?}
                                    || __loki.next()
                                    ?}
                                !}
                              ?}
                           ?}
                        || ND.get();
                           _domlok:=ND.MAG().EANL;
                           _mws:=ND.MAG().MWS='T';
                           {? ~_przyj
                           || _rpal:=exec('FindAndGet','#table',PAL,_palety.PAL,,,null());
                              _lok_z:=exec('FindAndGet','#table',EANL,_palety.LOK,,,null());
                              PAL.cntx_psh();
                              PAL_POZ.cntx_psh();
                              PAL.clear();
                              {? PAL.seek(_rpal)
                              || {? PAL.AKT='N'
                                 || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
                                 || PAL_POZ.use('paletyp')
                                 ?};
                                 PAL_POZ.index('PAL');
                                 PAL_POZ.prefix(PAL.ref());
                                 {? PAL_POZ.first()
                                 || _byla:=0;
                                    {!
                                    |? _lokz:=exec('rozpdk_l','magdok_poz',0,ST.MAG,PAL_POZ.M,PAL_POZ.ILP,_dlakh
                                                                          ,PAL.ref(),1);
                                       _lokz.clear();
                                       {? _lokz.size() & _lokz.first()
                                       || _lokdo:=exec('FindAndGet','#table',EANL,_lokz.EANL,,,null());
                                          {? _lokdo<>_domlok
                                          || _byla:=1;
                                             {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),_lokdo,_lok_z
                                                 ,date(0,0,0),date(0,0,0),1,ST.MAG,null,0,,PAL.ref(),PAL.ref())
                                             || undo()
                                             ?}
                                          ?}
                                       ?};
                                       obj_del(_lokz);
                                       ~_byla & PAL_POZ.next()
                                    !};
                                    {? ~_byla & ~_mws
                                    || {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),ST.MAG().EANL,_lok_z
                                            ,date(0,0,0),date(0,0,0),1,ST.MAG,null,0,,PAL.ref(),PAL.ref())
                                       || undo()
                                       ?}
                                    ?}
                                 ?};
                                 PAL_POZ.use('paletyp')
                              ?};
                              PAL.cntx_pop();
                              PAL_POZ.cntx_pop()
                           || DK_L.index('CZYPAL');
                              DK_L.prefix(ND.ref(),exec('FindAndGet','#table',PAL,_palety.PAL,,,null()));
                              {? DK_L.first()
                              || exec('findmpal','magdok_palety',ND.MAG,DK_L.PAL,_dlref,__loki,1);
                                 __loki.clear();
                                 {? __loki.first()
                                 || {? __loki.ILE>0
                                    || _lokdo:=exec('FindInSet','#table','EANL','KOD',__loki.LOK,__loki.LOK);
                                       {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),DK_L.LOK,_lokdo,date(0,0,0)
                                            ,date(0,0,0),1,DK_LN.MG,null,0,,DK_L.PAL,DK_L.PAL,,,DK_L.DK().SCEAN)
                                       || undo()
                                       ?}
                                    || __loki.next()
                                    ?}
                                 ?}
                              ?}
                           ?}
                        ?}
                     ?};
                     {? ~_a || __eanp.next() |? ~_czy_pal || DK.next() || _palety.next() ?}
                  !};
                  {? ~_a || exec('dkl2eann','magazyn_mob',_refakc,EANX.NRC_Z) ?}
               ?}
            ?};
            end();
            __magik.next()
         !}
      ?}
   ?}
?};
EANN.cntx_pop();
EANP.cntx_pop();
VAR_DEL.delete('__loki','__magik','__eanp');
{? _a & ~_b & _refreo=null
|| _refreo:=exec('FindInSet','#table','DK_LN','ZDOK',$ND.ref(),$ND.ref());
   {? _refreo<>null & (_c | FUN.ask('Czy przełączyć na reorganizację?'@))
   || TYPYDOK.cntx_psh();
      ND.cntx_psh();
      DK_LN.cntx_psh();
      DK_LN.prefix();
      {? DK_LN.seek(_refreo)
      || _mp:=params_get().mp;
         _out:=params_get().out;
         _akcja:=_mp.akcja();
         params_set('out',_out,'mp',_mp,'akcja',_akcja);
         params_exec('pozreorg','magdok_wymiary')
      ?};
      TYPYDOK.cntx_pop();
      ND.cntx_pop();
      DK_LN.cntx_pop()
   ?}
?};
_wyn


\sprloknd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza czy dla wszystkich pozycji dokumentu sa przypisane lokalizacje
::   WE: _a - ND.ref()
::   WY: 1-jest wszystko rozpisane 0-nie jest -1-brak pozycji na dokumencie
::  OLD: \sprloknd/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=-1;
DK.cntx_psh();
DK_L.cntx_psh();
:: sprawdzenie nie przekroczenia ilosci na pozycjach dokumentu
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first()
|| _wyn:=1;
   {!
   |? {? DK.M().RODZ='T'
      || _ile:=DK.IL;
         DK_L.index('DK');
         DK_L.prefix(DK.ref(),null);
         {? DK_L.first() || {! |? _ile-=DK_L.IL; DK_L.next() !} ?};
         {? _ile<>0 || _wyn:=0 ?}
      ?};
      _wyn & DK.next()
   !}
?};
DK.cntx_pop();
DK_L.cntx_pop();
_wyn


\uzup_dom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: uzupelnia pozycje DK_L-e domyslnym DOK-iem
::   WE: _a - ref ND
::       [_b] - 1-z mozliwoscia wyboru 0(domyslnie)-domyslna
::   WY: 1-ok 0-nie
::  OLD: \uzup_dom/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

_wyn:=1;
ND.cntx_psh();
DK.cntx_psh();
EANL.cntx_psh();
EANL.win_sel('SLO');
EANL.actions('SLO','');
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first()
 & {? _b=2
   || EANL.index('MGDOK');
      EANL.prefix('T',DK.N().MAG,'T','N');
      {? EANL.select() || _wyn:=1; _eanl:=EANL.ref(); 1 || _wyn:=0; 0 ?}
   || _eanl:=DK.N().MAG().EANL; 1
   ?}
|| {!
   |? _ile:=DK.IL;
      DK_L.index('DK');
      DK_L.prefix(DK.ref(),null);
      {? DK_L.first() || {! |? _ile-=DK_L.IL $DK_L.DK().M().DOKL; DK_L.next() !} ?};
      {? _ile>0
      || ~exec('add2dk_l','magdok_wspolne',DK.ref(),null,_eanl,null,date(0,0,0),date(0,0,0)
           ,_ile,ND.MAG,DK.M,,,DK_L.PAL,,1)
      ?};
      DK.next()
   !}
?};
ND.cntx_pop();
DK.cntx_pop();
EANL.cntx_pop();
_wyn


\goto_reo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przemieszcza sie do widoku reorganizacji
::   WE: _a - ref DK_LN
::  OLD: \goto_reo/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_menupth:=BEER.MENU_PTH;
TYPYDOK.cntx_psh();
ND.cntx_psh();
exec('reorgmag','lmg',_a);
TYPYDOK.cntx_pop();
ND.cntx_pop();
BEER.MENU_PTH:=_menupth;
~~


\findmlok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: poszukuje wolnej lokalizacji dla danej ilości materiału
::   WE: _a - magazyn
::       _b - materiał
::       _c - ilość w jednostce podstawowej
::       _d - kontrahent
::       [_e] - uchwyt tabeli do wypełnienia
::       [_f] - DK_LN lub ND do pominięcia już wpisanych danych
::       [_g] - dotyczy statusu dostawy
:: UWAGA. w przypadku braku określenia objetosci na materiale lub lokalizacji algorytm poszukuje całkowicie wolnych
:: miejsc
::
::   WY: tabela danych o strukturze Lokalizacja\ilość
::       W przypadku nie odnalezienia wolnej lokalizacji pozostała ilość umieszczana jest na domyślnej lokalizacji w
::       magazynie
::  OLD: \findmlok/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_dotab:=1;
{? _>=5 || {? type_of(_e)<>118 || _dotab:=0 ?} || _dotab:=0 ?};
{? _>=6 || {? type_of(_f)<>7 || _f:=null() ?} || _f:=null() ?};
_stats:={? var_pres('_g')=type_of(null()) || _g || null() ?};

{? exec('FindAndGet','#table',MG,_a,,"TYP*'DOST'",0) & _stats<>null()
|| _loop:=2
|| _stats:=null();
   _loop:=1
?};

_wyn:={? _dotab
      || _e.clear();
         {? _e.first() || {! |? _e.del() !} ?};
         _e
      || tab_tmp(1,'LOK','STRING[30]','','ILE','REAL','')
      ?};

M.cntx_psh();
EANL.cntx_psh();

M.clear();
{? M.seek(_b)
|| _objone:=M.OBJ/{? M.ILOBJ<>0 || M.ILOBJ || 1 ?};
   _objcalk:=_objone*_c;
   _dorozp:=_c;
   _dokl_m:=M.DOKL;
   _ll:=_loop-1;
   {!
   |?
:: poszukiwania stref magazynowych dla danego kontrahenta wg indeksu
      M_MG_GR.index('M_KH');
      M_MG_GR.prefix(_b,_d);
      {? M_MG_GR.first()
      || {!
         |? MG_GRP.index('MG_GR');
            MG_GRP.prefix(M_MG_GR.MG_GR,_a);
            {? MG_GRP.first() & (~_ll | (_ll & MG_GRP.find_tab('first','MG_GR','DEFSTATS','=',_stats)))
            || {!
               |? {? MG_GRP.EANL().AKT='T' & MG_GRP.EANL().BLOK<>'T'
                  || _ilelok:={? ~_objcalk | ~MG_GRP.EANL().OBJ
                              || exec('czyzajet','magdok_wspolne',_a,MG_GRP.EANL)
                              || MG_GRP.EANL().OBJ-exec('eanlzobj','magazyn_stan',_a,MG_GRP.EANL,_f)
                              ?};
                     {? ~_objcalk & _ilelok
                     || _wyn.clear();
                        _wyn.blank();
                        _wyn.LOK:=MG_GRP.EANL().KOD;
                        _wyn.ILE:=_dorozp;
                        _wyn.add(1);
                        _dorozp:=0
                     |? _ilelok>0
                     || {? _ilelok>=_objcalk
                        || _wyn.clear();
                           _wyn.blank();
                           _wyn.LOK:=MG_GRP.EANL().KOD;
                           _wyn.ILE:=_dorozp;
                           _wyn.add(1);
                           _dorozp:=0
                        || _rozp:=_ilelok/_objone $ _dokl_m;
                           _wyn.clear();
                           _wyn.blank();
                           _wyn.LOK:=MG_GRP.EANL().KOD;
                           _wyn.ILE:=_rozp;
                           _wyn.add(1);
                           _dorozp-=_rozp;
                           _objcalk-=(_objone*_rozp) $3
                        ?}
                     ?}
                  ?};
                  _dorozp>0 & MG_GRP.next() & (~_ll | (_ll & MG_GRP.find_tab('next','MG_GR','DEFSTATS','=',_stats)))
               !}
            ?};
            _dorozp>0 & M_MG_GRP.next()
         !}
      ?};

:: poszukiwania w strefie magazynowania danego kontrahenta z ewentualnym uwzględnieniem statusu dostawy
      {? _dorozp>0 & _d<>null
      || MG_GR.index('KH');
         MG_GR.prefix(_d);
         {? MG_GR.first()
         || {!
            |? MG_GRP.index('MG_GR');
               MG_GRP.prefix(MG_GR.ref(),_a);
               {? MG_GRP.first() & (~_ll | (_ll & MG_GRP.find_tab('first','MG_GR','DEFSTATS','=',_stats)))
               || {!
                  |? {? MG_GRP.EANL().AKT='T' & MG_GRP.EANL().BLOK<>'T'
                     || _ilelok:={? ~_objcalk | ~MG_GRP.EANL().OBJ
                                 || exec('czyzajet','magdok_wspolne',_a,MG_GRP.EANL)
                                 || MG_GRP.EANL().OBJ-exec('eanlzobj','magazyn_stan',_a,MG_GRP.EANL,_f)
                                 ?};
                        {? ~_objcalk & _ilelok
                        || _wyn.clear();
                           _wyn.blank();
                           _wyn.LOK:=MG_GRP.EANL().KOD;
                           _wyn.ILE:=_dorozp;
                           _wyn.add(1);
                           _dorozp:=0
                        |? _ilelok>0
                        || {? _ilelok>=_objcalk
                           || _wyn.clear();
                              _wyn.blank();
                              _wyn.LOK:=MG_GRP.EANL().KOD;
                              _wyn.ILE:=_dorozp;
                              _wyn.add(1);
                              _dorozp:=0
                           || _rozp:=_ilelok/_objone $ _dokl_m;
                              _wyn.clear();
                              _wyn.blank();
                              _wyn.LOK:=MG_GRP.EANL().KOD;
                              _wyn.ILE:=_rozp;
                              _wyn.add(1);
                              _dorozp-=_rozp;
                              _objcalk-=(_objone*_rozp) $3
                           ?}
                        ?}
                     ?};
                     _dorozp>0 & MG_GRP.next() & (~_ll | (_ll & MG_GRP.find_tab('next','MG_GR','DEFSTATS','=',_stats)))
                  !}
               ?};
               _dorozp>0 & MG_GR.next()
            !}
         ?}
      ?};

:: poszukiwania wg strefy magazynowania przypisanej do indeksu
      {? _dorozp>0
      || M_MG_GR.index('M');
         M_MG_GR.prefix(_b);
         {? M_MG_GR.first()
         || {!
            |? {? M_MG_GR.MG_GR().KH=null
               || MG_GRP.index('MG_GR');
                  MG_GRP.prefix(M_MG_GR.MG_GR,_a);
                  {? MG_GRP.first() & (~_ll | (_ll & MG_GRP.find_tab('first','MG_GR','DEFSTATS','=',_stats)))
                  || {!
                     |? {? MG_GRP.EANL().AKT='T' & MG_GRP.EANL().BLOK<>'T'
                        || _ilelok:={? ~_objcalk | ~MG_GRP.EANL().OBJ
                                    || exec('czyzajet','magdok_wspolne',_a,MG_GRP.EANL)
                                    || MG_GRP.EANL().OBJ-exec('eanlzobj','magazyn_stan',_a,MG_GRP.EANL,_f)
                                    ?};
                           {? ~_objcalk & _ilelok
                           || _wyn.clear();
                              _wyn.blank();
                              _wyn.LOK:=MG_GRP.EANL().KOD;
                              _wyn.ILE:=_dorozp;
                              _wyn.add(1);
                              _dorozp:=0
                           |? _ilelok>0
                           || {? _ilelok>=_objcalk
                              || _wyn.clear();
                                 _wyn.blank();
                                 _wyn.LOK:=MG_GRP.EANL().KOD;
                                 _wyn.ILE:=_dorozp;
                                 _wyn.add(1);
                                 _dorozp:=0
                              || _rozp:=_ilelok/_objone $ _dokl_m;
                                 _wyn.clear();
                                 _wyn.blank();
                                 _wyn.LOK:=MG_GRP.EANL().KOD;
                                 _wyn.ILE:=_rozp;
                                 _wyn.add(1);
                                 _dorozp-=_rozp;
                                 _objcalk-=(_objone*_rozp) $3
                              ?}
                           ?}
                        ?};
                        _dorozp>0 & MG_GRP.next() & (~_ll | (_ll & MG_GRP.find_tab('next','MG_GR','DEFSTATS','=',_stats)))
                     !}
                  ?}
               ?};
               _dorozp>0 & M_MG_GR.next()
            !}
         ?}
      ?};

:: poszukiwania wg statusu dostawy
      {? _dorozp>0 & _loop=2
      || MG_GR.index('KODST');
         MG_GR.prefix(_stats);
         {? MG_GR.first()
         || {!
            |? MG_GRP.index('MG_GR');
               MG_GRP.prefix(MG_GR.ref(),_a);
               {? MG_GRP.first()
               || {!
                  |? {? MG_GRP.EANL().AKT='T' & MG_GRP.EANL().BLOK<>'T'
                     || _ilelok:={? ~_objcalk | ~MG_GRP.EANL().OBJ
                                 || exec('czyzajet','magdok_wspolne',_a,MG_GRP.EANL)
                                 || MG_GRP.EANL().OBJ-exec('eanlzobj','magazyn_stan',_a,MG_GRP.EANL,_f)
                                 ?};
                        {? ~_objcalk & _ilelok
                        || _wyn.clear();
                           _wyn.blank();
                           _wyn.LOK:=MG_GRP.EANL().KOD;
                           _wyn.ILE:=_dorozp;
                           _wyn.add(1);
                           _dorozp:=0
                        |? _ilelok>0
                        || {? _ilelok>=_objcalk
                           || _wyn.clear();
                              _wyn.blank();
                              _wyn.LOK:=MG_GRP.EANL().KOD;
                              _wyn.ILE:=_dorozp;
                              _wyn.add(1);
                              _dorozp:=0
                           || _rozp:=_ilelok/_objone $ _dokl_m;
                              _wyn.clear();
                              _wyn.blank();
                              _wyn.LOK:=MG_GRP.EANL().KOD;
                              _wyn.ILE:=_rozp;
                              _wyn.add(1);
                              _dorozp-=_rozp;
                              _objcalk-=(_objone*_rozp) $3
                           ?}
                        ?}
                     ?};
                     _dorozp>0 & MG_GRP.next()
                  !}
               ?};
               _dorozp>0 & MG_GR.next()
            !}
         ?}
      ?};
      _ll-=1;
      _dorozp>0 & _ll>=0
   !};
:: poszukiwania wg lokalizacji w magazynie jeśli coś pozostało do rozpisania
   {? _dorozp>0
   || EANL.index('MG');
      EANL.prefix('T',_a);
      {? EANL.first()
      || {!
         |? {? EANL.AKT='T' & EANL.BLOK<>'T'
            || _ilelok:={? ~_objcalk | ~EANL.OBJ
                        || exec('czyzajet','magdok_wspolne',_a,EANL.ref())
                        || EANL.OBJ-exec('eanlzobj','magazyn_stan',_a,EANL.ref(),_f)
                        ?};
               {? ~_objcalk & _ilelok
               || _wyn.clear();
                  _wyn.blank();
                  _wyn.LOK:=EANL.KOD;
                  _wyn.ILE:=_dorozp;
                  _wyn.add(1);
                  _dorozp:=0
               |? _ilelok>0
               || {? _ilelok>=_objcalk
                  || _wyn.clear();
                     _wyn.blank();
                     _wyn.LOK:=EANL.KOD;
                     _wyn.ILE:=_dorozp;
                     _wyn.add(1);
                     _dorozp:=0
                  || _rozp:=_ilelok/_objone $ _dokl_m;
                     _wyn.clear();
                     _wyn.blank();
                     _wyn.LOK:=EANL.KOD;
                     _wyn.ILE:=_rozp;
                     _wyn.add(1);
                     _dorozp-=_rozp;
                     _objcalk-=(_objone*_rozp) $3
                  ?}
               ?}
            ?};
            _dorozp>0 & EANL.next()
         !}
      ?}
   ?};
:: jeśli jednak coś pozostało to przypisujemy do domyślnej lokalizacji
   {? _dorozp>0
   || _beer_mg:=BEER.MG;
      BEER.MG:=_a;
      _wyn.clear();
      _wyn.blank();
      _wyn.LOK:=BEER.MG().EANL().KOD;
      _wyn.ILE:=_dorozp;
      _wyn.add();
      BEER.MG:=_beer_mg
   ?}
?};
EANL.cntx_pop();
M.cntx_pop();
_wyn


\sprczyan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza czy istnieja strefy magazynowania przypisane do kontrahentow
::  OLD: \sprczyan/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_buf:=sql('select distinct EANL.MG MG, KH.KOD KOD, EANL.KOD EAN '+
          'from MG_GRP join EANL join MG_GR join KH order by 1,2,3');
_wyn:=_buf.size();
obj_del(_buf);
_wyn


\eanl_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: informacja o zajetosci na strefach magazynowania kontrahentow w magazynie
::  OLD: \eanl_kh/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=ST.MAG ?} || _a:=ST.MAG ?};
{? ~exec('sprczyan','magdok_wymiary')
|| FUN.info('Brak zdefiniowanej strefy magazynowania dla kontrahenta.'@);
   return(0)
?};

VAR_DEL.delete('__infkhe','__infesl','__infegr','__winroz');

KH.cntx_psh();

__infkhe:=tab_tmp(3,'TREE','TREE_REF','galazka'
           ,'LAB','STRING[100]','Opis'
           ,'KOD','STRING[2]','kod'
           ,'P01','STRING[2]',''
           ,'P02','STRING[2]',''
           ,'P03','STRING[2]',''
           ,'P04','STRING[2]',''
           ,'P05','STRING[2]',''
           ,'P06','STRING[2]',''
           ,'P07','STRING[2]',''
           ,'P08','STRING[2]',''
           ,'P09','STRING[2]',''
           ,'P10','STRING[2]',''
           ,'P11','STRING[2]',''
           ,'P12','STRING[2]',''
           ,'P13','STRING[2]',''
           ,'P14','STRING[2]',''
           ,'P15','STRING[2]',''
           ,'P16','STRING[2]',''
           ,'P17','STRING[2]',''
           ,'P18','STRING[2]',''
           ,'P19','STRING[2]',''
           ,'P20','STRING[2]',''
           ,'P21','STRING[2]',''
           ,'P22','STRING[2]',''
           ,'P23','STRING[2]',''
           ,'P24','STRING[2]',''
           ,'P25','STRING[2]',''
           ,'P26','STRING[2]',''
           ,'P27','STRING[2]',''
           ,'P28','STRING[2]',''
           ,'P29','STRING[2]',''
           ,'P30','STRING[2]',''
           ,'P31','STRING[2]',''
           ,'Z01','REAL',''
           ,'Z02','REAL',''
           ,'Z03','REAL',''
           ,'Z04','REAL',''
           ,'Z05','REAL',''
           ,'Z06','REAL',''
           ,'Z07','REAL',''
           ,'Z08','REAL',''
           ,'Z09','REAL',''
           ,'Z10','REAL',''
           ,'Z11','REAL',''
           ,'Z12','REAL',''
           ,'Z13','REAL',''
           ,'Z14','REAL',''
           ,'Z15','REAL',''
           ,'Z16','REAL',''
           ,'Z17','REAL',''
           ,'Z18','REAL',''
           ,'Z19','REAL',''
           ,'Z20','REAL',''
           ,'Z21','REAL',''
           ,'Z22','REAL',''
           ,'Z23','REAL',''
           ,'Z24','REAL',''
           ,'Z25','REAL',''
           ,'Z26','REAL',''
           ,'Z27','REAL',''
           ,'Z28','REAL',''
           ,'Z29','REAL',''
           ,'Z30','REAL',''
           ,'Z31','REAL',''
           ,'R01','REAL',''
           ,'R02','REAL',''
           ,'R03','REAL',''
           ,'R04','REAL',''
           ,'R05','REAL',''
           ,'R06','REAL',''
           ,'R07','REAL',''
           ,'R08','REAL',''
           ,'R09','REAL',''
           ,'R10','REAL',''
           ,'R11','REAL',''
           ,'R12','REAL',''
           ,'R13','REAL',''
           ,'R14','REAL',''
           ,'R15','REAL',''
           ,'R16','REAL',''
           ,'R17','REAL',''
           ,'R18','REAL',''
           ,'R19','REAL',''
           ,'R20','REAL',''
           ,'R21','REAL',''
           ,'R22','REAL',''
           ,'R23','REAL',''
           ,'R24','REAL',''
           ,'R25','REAL',''
           ,'R26','REAL',''
           ,'R27','REAL',''
           ,'R28','REAL',''
           ,'R29','REAL',''
           ,'R30','REAL',''
           ,'R31','REAL',''
           ,'ILE','REAL','ile materialu'
           ,'EAN','STRING[30]','Kod'
           ,'SQL','STRING[16]','ref sql'
           ,'ILC','REAL',''
           ,'TYP','STRING[1]',''
           ,'JM','STRING[10]','');

_win_sel:=__infkhe.mk_sel('Zajętość lokalizacji wg kontrahentów okres:'@,'P',,'#inf2eanlsel',,,__infkhe.size(),1);
__winroz:=_win_sel;

__infkhe.win_fld(_win_sel,,'LAB',,,30,,1,'');
__infkhe.win_fld(_win_sel,,'P01',,,2,,1,'1');
__infkhe.win_fld(_win_sel,,'P02',,,2,,1,'2');
__infkhe.win_fld(_win_sel,,'P03',,,2,,1,'3');
__infkhe.win_fld(_win_sel,,'P04',,,2,,1,'4');
__infkhe.win_fld(_win_sel,,'P05',,,2,,1,'5');
__infkhe.win_fld(_win_sel,,'P06',,,2,,1,'6');
__infkhe.win_fld(_win_sel,,'P07',,,2,,1,'7');
__infkhe.win_fld(_win_sel,,'P08',,,2,,1,'8');
__infkhe.win_fld(_win_sel,,'P09',,,2,,1,'9');
__infkhe.win_fld(_win_sel,,'P10',,,2,,1,'10');
__infkhe.win_fld(_win_sel,,'P11',,,2,,1,'11');
__infkhe.win_fld(_win_sel,,'P12',,,2,,1,'12');
__infkhe.win_fld(_win_sel,,'P13',,,2,,1,'13');
__infkhe.win_fld(_win_sel,,'P14',,,2,,1,'14');
__infkhe.win_fld(_win_sel,,'P15',,,2,,1,'15');
__infkhe.win_fld(_win_sel,,'P16',,,2,,1,'16');
__infkhe.win_fld(_win_sel,,'P17',,,2,,1,'17');
__infkhe.win_fld(_win_sel,,'P18',,,2,,1,'18');
__infkhe.win_fld(_win_sel,,'P19',,,2,,1,'19');
__infkhe.win_fld(_win_sel,,'P20',,,2,,1,'20');
__infkhe.win_fld(_win_sel,,'P21',,,2,,1,'21');
__infkhe.win_fld(_win_sel,,'P22',,,2,,1,'22');
__infkhe.win_fld(_win_sel,,'P23',,,2,,1,'23');
__infkhe.win_fld(_win_sel,,'P24',,,2,,1,'24');
__infkhe.win_fld(_win_sel,,'P25',,,2,,1,'25');
__infkhe.win_fld(_win_sel,,'P26',,,2,,1,'26');
__infkhe.win_fld(_win_sel,,'P27',,,2,,1,'27');
__infkhe.win_fld(_win_sel,,'P28',,,2,,1,'28');
__infkhe.win_fld(_win_sel,,'P29',,,2,,1,'29');
__infkhe.win_fld(_win_sel,,'P30',,,2,,1,'30');
__infkhe.win_fld(_win_sel,,'P31',,,2,,1,'31');
__infkhe.win_fld(_win_sel,,'ILC',,,6,3,1,'Objętość'@);
__infkhe.win_fld(_win_sel,,'JM',,,3,,1,'jm'@);
__infkhe.win_act(_win_sel,0,'Formuła','Zmień okres'@@,,,"exec('zmienOkres','magdok_wymiary')");
__infkhe.win_act(_win_sel,0,'Formuła','Legenda'@@,,,"exec('legenda','color','__infkhe#01')");
__infkhe.win_act(_win_sel,0,'Szukaj');
__infkhe.win_act(_win_sel,0,'Kolejność');
__infkhe.win_act(_win_sel,0,'Wyświetl',,,,"exec('dispkhea','magdok_wymiary')");

__infkhe.tr_fml(_win_sel,,"{? _a || {? __infkhe.TREE=0 || 1 || _a ?} || _a ?}");
__infkhe.win_fml(_win_sel,,'LAB',,'ICON_BEFORE',"
         {? __infkhe.TYP='M'
         || 'xwin16.png:91'
         |? __infkhe.TYP='K'
         || 'xwin16.png:100'
         |? __infkhe.TYP='L'
         || 'xwin16.png:97'
         || ''
         ?}
     ");
__infkhe.fld_fml('P01','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P02','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P03','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P04','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P05','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P06','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P07','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P08','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P09','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P10','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P11','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P12','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P13','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P14','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P15','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P16','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P17','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P18','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P19','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P20','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P21','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P22','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P23','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P24','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P25','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P26','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P27','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P28','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P29','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P30','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.fld_fml('P31','BEFORE_DISPLAY',"exec('col2proc','magdok_wymiary')");
__infkhe.win_sel(_win_sel);


_beermg:=BEER.MG;
_beerkh:=BEER.KH;
_beerea:=BEER.EANL;

{? __PARSES.editPar('OkresRok')
|| ST.AR:=OKRO.ROK;
   ST.AM:=OKRO.NR_OKR;
   exec('goAnaliza','magdok_wymiary')
?};

BEER.MG:=_beermg;
BEER.KH:=_beerkh;
BEER.EANL:=_beerea;

__infkhe.clear();
__infkhe.select();

VAR_DEL.delete('__infkhe','__infesl','__infegr','__winroz');

KH.cntx_pop()


\dispkhea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wyswietla informacje o lokalizacji
::  OLD: \dispkhea/mws.fml
::----------------------------------------------------------------------------------------------------------------------

{? __infkhe.TYP='L'
|| EANL.cntx_psh();
   EANL.clear();
   EANL.seek(__infkhe.SQL);
   exec('pw_segm','magazyn_stan',1);
   EANL.win_edit('REDMWS');
   EANL.win_patt('RED');
   EANL.display();
   EANL.cntx_pop()
?}


\col2proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: koloruje badz nie w zaleznosci od pola Pxx
::  OLD: \col2proc/mws.fml
::----------------------------------------------------------------------------------------------------------------------

_war:=($('__infkhe.R'+(cur_afld()+2)))();
_proc:={? _war<=10 || '10'
       |? _war<=20 || '20'
       |? _war<=30 || '30'
       |? _war<=40 || '40'
       |? _war<=50 || '50'
       |? _war<=60 || '60'
       |? _war<=70 || '70'
       |? _war<=80 || '80'
       |? _war<=90 || '90'
       |? _war<=100 || '00'
       || ''
       ?};

{? _war>0
|| Color.fnd_kol('__infkhe#01#'+_proc)
|? (#(cur_afld()+2))>(date(ST.AR,ST.AM,0)~3)
|| exec('findfnv','#color')
|| ''
?}


\zaj_eanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: oblicza zajetosc lokalizacji w dniach
::   WE: _a - lokalizacja
::       _b - data koncowa
::       _c - ref __infkhe
::  OLD: \zaj_eanl/mws.fml
::----------------------------------------------------------------------------------------------------------------------

BEER.EANL:=_a;
_rr:=_b~1; _mm:=_b~2;
_dd:={? _mm=1 | _mm=3 | _mm=5 | _mm=7 | _mm=8 | _mm=10 | _mm=12 || 31
     |? _mm=2 & ~(_rr%*4)|| 29
     |? _mm=2 || 28
     || 30
     ?};
_zaj:=obj_new(_dd); {! _i.._dd |! _zaj[_i]:=0 !};
_pal:=EANL.MG().PAL='T';

_kod:=DK_LN.name()+3;
_odd:=(1+_kod);
_kod:=(1-_kod);

_msk:=DK_LN.names();
_msk.clear();
{? _msk.first()
|| {!
   |? {? (_msk.NAME+2)='__'
      || _msk.del()
      |? (2000+(#(_msk.NAME+2)))>_rr
      || _msk.del()
      || _msk.next()
      ?}
   !}
?};
DK_L.cntx_psh();

_msk.clear();
{? _msk.first()
|| {!
   |? {? (_msk.NAME+2)<>'zb'
      || exec('mag_open','open_tab',_odd,(_msk.NAME+2));
         DK_L.clear();
         DK_L.index('MWS');
         DK_L.prefix('T',null,_a);
         {? DK_L.first()
         || {!
            |? {? DK_L.DK_LN().D<=_b
               || _wsp:={? DK_L.IL<0 || -1 || 1 ?};
                  {? _pal
                  || {! _i.._dd |! _zaj[_i]+={? DK_L.DK_LN().D<=date(_rr,_mm,_i) || _wsp*(DK_L.PAL<>null) || 0 ?} !}
                  || {? ~DK_L.M().OBJ
                     || {! _i.._dd |! _zaj[_i]+={? DK_L.DK_LN().D<=date(_rr,_mm,_i) || _wsp*(DK_L.LOK().OBJ) || 0 ?} !}
                     || {! _i.._dd
                        |! _zaj[_i]+={? DK_L.DK_LN().D<=date(_rr,_mm,_i)
                                     || _wsp*(DK_L.IL/({? DK_L.M().ILOBJ>0 || DK_L.M().ILOBJ || 1 ?}))*DK_L.M().OBJ
                                     || 0
                                     ?}
                        !}
                     ?}
                  ?}
               ?};
               DK_L.next()
            !}
         ?}
      ?};
      _msk.next()
   !}
?};
exec('mag_open','open_tab',_odd,_kod);
DK_L.cntx_pop();
_calosc:={? _pal || BEER.EANL().ILPAL || BEER.EANL().OBJ ?};

__infkhe.ILC:=_calosc;
{! _i.._dd
|! _zostalo:=_calosc-_zaj[_i];
   {? _zostalo<0
   || ($('__infkhe.R'+form(_i,-2,0,'99')))():=100;
      ($('__infkhe.Z'+form(_i,-2,0,'99')))():=_calosc
   |? ~_calosc
   || ($('__infkhe.R'+form(_i,-2,0,'99')))():={? _zaj[_i]>0 || 100 || 0 ?};
      ($('__infkhe.Z'+form(_i,-2,0,'99')))():={? _zaj[_i]>0 || _calosc || 0 ?}
   || ($('__infkhe.R'+form(_i,-2,0,'99')))():=(1-(_zostalo/_calosc))*100 $2;
      ($('__infkhe.Z'+form(_i,-2,0,'99')))():=_zaj[_i]
   ?};
   ($('__infkhe.P'+form(_i,-2,0,'99')))():={? ($('__infkhe.Z'+form(_i,-2,0,'99')))()>0 || %219 || '' ?}
!};
__infkhe.put(1)


\sumkhean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: oblicza podsume dla kontrahenta
::   WE: _a -ref __infkhe
::  OLD: \sumkhean/mws.fml
::----------------------------------------------------------------------------------------------------------------------

_dd:=31;
:: ilosc miejsc skladowania z m3 do sredniej artmetycznej
_zaj:=obj_new(_dd+1);
{! _i..(_dd+1) |! _zaj[_i]:=0 !};

__infkhe.cntx_psh();
__infkhe.clear();
__infkhe.prefix(_a);
{? __infkhe.first()
|| {!
   |? _zaj[32]+=__infkhe.ILC;
      {! _i.._dd |! _zaj[_i]+=($('__infkhe.Z'+form(_i,-2,0,'99')))() !};
      __infkhe.next()
   !}
?};

__infkhe.clear();
{? __infkhe.seek(_a)
|| _calosc:=_zaj[32];
   __infkhe.ILC:=_calosc;

   {! _i.._dd
   |! _zostalo:=_calosc-_zaj[_i];
      {? _zostalo<0
      || ($('__infkhe.R'+form(_i,-2,0,'99')))():=100;
         ($('__infkhe.Z'+form(_i,-2,0,'99')))():=_calosc
      |? ~_calosc
      || ($('__infkhe.R'+form(_i,-2,0,'99')))():={? _zaj[_i]>0 || 100 || 0 ?};
         ($('__infkhe.Z'+form(_i,-2,0,'99')))():={? _zaj[_i]>0 || _calosc || 0 ?}
      || ($('__infkhe.R'+form(_i,-2,0,'99')))():=(1-(_zostalo/_calosc))*100 $2;
         ($('__infkhe.Z'+form(_i,-2,0,'99')))():=_zaj[_i]
      ?}
   !};
   __infkhe.put(1)
?};
__infkhe.cntx_pop()


\dk_ln_stat_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła określiająca ikony stanu dokumentu reorganizacji
::----------------------------------------------------------------------------------------------------------------------
"
  {? DK_LN.STAT_REJ='T' || exec('zaakceptowany','icon')
  |? DK_LN.STAT_REJ='Z' || exec('zarejestrowany','icon')
  |? DK_LN.STAT_REJ='N' || exec('pusta','#icon')
  || exec('pusta','#icon')
  ?}
"


\dk_ln_actions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: wyszarzanie akcji
::----------------------------------------------------------------------------------------------------------------------
DK_LN.actions_grayed('WER','');
_czywyc:={? DK_LN.STAT_REJ='T' & ~exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_AREO')
          | DK_LN.STAT_REJ='Z' & ~exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_DREO')
          | DK_LN.STAT_REJ='N'
            || 'W'
            || ''
            ?};
_no_et:={? ~exec('isDEFetyk','magazyn_mobi','DK_LN') || 'T' || '' ?};

_actions:=_no_et+
   {? DK_LN.STAT_REJ='N' || 'A'+_czywyc
   |? DK_LN.STAT_REJ='Z' || 'PUZ'+_czywyc
   |? DK_LN.STAT_REJ='T'
      | DK_LN.AKC='T'    || 'PUZA'+_czywyc
                         || _czywyc
   ?};

DK_LN.actions_grayed('WER',_actions)


\eanzdkln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: zwraca ilość dla lokalizacji dla danej reorganizacji
::   WE: _a - ref DK_LN
::       _b - ref lokalizacji
::   WY: ilość
::  OLD: \eanzdkln/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_buf:=tab_tmp(1,'SQL','STRING[16]','');
DK_LN.cntx_psh();
DK_L.cntx_psh();
DK_L.index('DK_LNLOK');
DK_L.prefix(_a);
{? DK_L.first() & DK_L.find_tab('first','LOKDO',,'=',_b)
|| _break:=0;
   _pal:=DK_L.MG().PAL='T';
   {!
   |? {? DK_L.IL>0
      || {? _pal
         || {? DK_L.PALDO<>null & ~_buf.find_key($DK_L.PALDO)
            || _buf.blank();
               _buf.SQL:=$DK_L.PALDO;
               _buf.add(1);
               _wyn+=1
            ?}
         || {? ~DK_L.M().OBJ
            || _wyn:=DK_L.LOK().OBJ;
               _break:=1
            || _wyn+=(DK_L.IL/({? DK_L.M().ILOBJ>0 || DK_L.M().ILOBJ || 1 ?}))*DK_L.M().OBJ
            ?}
         ?}
      ?};
      ~_break & DK_L.find_tab('next','LOKDO',,'=',_b)
   !}
?};
DK_LN.cntx_pop();
DK_L.cntx_pop();
obj_del(_buf);
_wyn


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: zaznaczanie i wyłączenie pól
::----------------------------------------------------------------------------------------------------------------------
_win:=DK_L.win_edit('?');
_initpal:=DK_L.DK_LN<>null() & DK_LN.RODZ='B';
_mark1:='mark='+{? DK_L.MG().PAL='T' || '1' || '0' ?};
_mark2:='mark='+{? DK_L.MG().PAL='T' & ~_initpal || '0' || '1' ?};
_enab1:='enable='+{? DK_L.MG().PAL='T' || '1' || '0' ?};
_enab2:='enable='+{? DK_L.MG().PAL='T' & ~_initpal || '0' || '1' ?};
{? _initpal || DK_L.efld_opt(_win,_mark2,,'IL') ?};
:: DK_L.efld_opt(_win,_mark1,,'PAL');
DK_L.efld_opt(_win,_mark1,,'KODPAL');
DK_L.efld_opt(_win,_mark1,,'LOK');
:: DK_L.efld_opt(_win,_enab1,,'PAL');
:: DK_L.efld_opt(_win,_enab1,,'PALDO');
DK_L.efld_opt(_win,_enab1,,'KODPAL');
DK_L.efld_opt(_win,_enab1,,'KODPALD');
DK_L.efld_opt(_win,_mark2,,'M');
DK_L.efld_opt(_win,_enab2,,'M');
DK_L.efld_opt(_win,_enab2,,'M');
_enab3:='enable='+{? DK_L.MG().PAL<>'T' & DK_L.M().SETW='P' || '1' || '0' ?};
_mark3:='mark='+{? DK_L.MG().PAL<>'T' & DK_L.M().SETW='P' || '1' || '0' ?};
DK_L.efld_opt(_win,_enab3,EANX,'DOSTAWA');
DK_L.efld_opt(_win,_mark3,EANX,'DOSTAWA');
exec('set_efld_m','magdok_wymiary');
~~


\dk_ln_zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Poprawa nagłówka reorganizacji
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_DREO';
_params.AKCJA:='Zakończ_wer';
_params.UIDREF:=DK_LN.uidref();

{? DK_LN.RODZ='I' &exec('czy_zinw','magdok_wspolne',$DK_LN.ref())
|| _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'DK_LN',DK_LN.ref())
?};
exec('mp_run','#b__box',_params)


\zmienOkres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zmiana okresu analizy
::----------------------------------------------------------------------------------------------------------------------
_am:=ST.AM;
_ar:=ST.AR;
{? __PARSES.editPar('OkresRok') & ~(ST.AM=_am & ST.AR=_ar)
|| exec('goAnaliza','magdok_wymiary')
?}


\goAnaliza
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Obliczenie analizy dla podan
::----------------------------------------------------------------------------------------------------------------------
exec('tree_del','#tree',__infkhe,0);

_mg_gr:=sql('select distinct EANL.MG MG, KH.KOD KOD, EANL.KOD EAN from MG_GRP'+
            ' join EANL join MG_GR join KH order by 1,2,3');
_mg_mg:=sql('select distinct :_a.MG, 0 TREE from :_a order by 1',_mg_gr);
_mg_kh:=sql('select distinct :_a.MG, :_a.KOD, 0 TREE from :_a order by 1, 2',_mg_gr);

_mg_mg.clear();
{? _mg_mg.first()
|| {!
   |? BEER.MG:=exec('FindAndGet','#table','MG',_mg_mg.MG);
      __infkhe.clear();
      __infkhe.blank();
      __infkhe.TREE:=0;
      __infkhe.LAB:=BEER.MG().SYM+' - '+BEER.MG().NAZ;
      __infkhe.KOD:=BEER.MG().SYM;
      __infkhe.EAN:=BEER.MG().SYM;
      __infkhe.TYP:='M';
      __infkhe.JM:={? BEER.MG().PAL='T' || 'pal' || 'm3' ?};
      _tmg:={? __infkhe.add(1) || __infkhe.ref() || null ?};
      _mg_mg.TREE:=_tmg;
      _mg_mg.put(1);
      _mg_kh.clear();
      _mg_kh.prefix(_mg_mg.MG);
      {? _mg_kh.first()
      || {!
         |? BEER.KH:=exec('FindInSet','#table','KH','KOD',_mg_kh.KOD,2);
            __infkhe.clear();
            __infkhe.blank();
            __infkhe.TREE:=_tmg;
            __infkhe.LAB:=BEER.KH().KOD+' - '+BEER.KH().NAZ;
            __infkhe.KOD:=BEER.KH().KOD;
            __infkhe.EAN:=BEER.KH().SKR;
            __infkhe.TYP:='K';
            __infkhe.JM:={? BEER.MG().PAL='T' || 'pal' || 'm3' ?};
            _tkh:={? __infkhe.add(1) || __infkhe.ref() || null ?};
            _mg_mg.TREE:=_tkh;
            _mg_mg.put(1);
            _mg_gr.clear();
            _mg_gr.prefix(_mg_kh.MG,_mg_kh.KOD);
            {? _mg_gr.first()
            || {!
               |? BEER.EANL:=exec('FindInSet','#table','EANL','KOD',_mg_gr.EAN,_mg_gr.EAN);
                  __infkhe.clear();
                  __infkhe.blank();
                  __infkhe.TREE:=_tkh;
                  __infkhe.LAB:=BEER.EANL().KOD+' - '+BEER.EANL().OP;
                  __infkhe.KOD:=BEER.EANL().KOD;
                  __infkhe.EAN:=BEER.EANL().KOD;
                  __infkhe.SQL:=$BEER.EANL;
                  __infkhe.TYP:='L';
                  __infkhe.JM:={? BEER.MG().PAL='T' || 'pal' || 'm3' ?};
                  __infkhe.add(1);
                  exec('zaj_eanl','magdok_wymiary',BEER.EANL,date(ST.AR,ST.AM,0),__infkhe.ref());
                  _mg_gr.next()
               !}
            ?};
::          obliczenie podsumy dla kontrahenta na kolejne dni
            exec('sumkhean','magdok_wymiary',_tkh);
            _mg_kh.next()
         !}
      ?};
      _mg_mg.next()
   !}
?};
__infkhe.first();
__infkhe.hdr_sel('');
__infkhe.hdr_sel(' '+form(date(ST.AR,ST.AM,0),,8));
~~


\sprkeanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza poprawnosc kodu lokalizacji dla magazynu typu MWS
::   WE: _a - kod lokalizacji
::       _b - dok-'T' nie-'N'
::   WY: 1-ok 0-nie
::  OLD: \sprkeanl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_par:=exec('get','#params',100215,2)='T';
{? _b='T'
|| _wyn:=(9+_a)='D0-00-00-' & {? ~_par || (#(2+(9-_a)))>=0 || (+form(2+(9-_a)))=2 ?}
|| _wyn:={? ~_par
         || exec('allDigit','#valid',(2+_a)+(2+(3-_a))+(2+(6-_a))+(2+(9-_a)))
         || (2+_a)<>'D0' & exec('allAlfaNum','#valid',(2+_a)+(2+(3-_a))+(2+(6-_a))+(2+(9-_a)))
         ?}
?};
_wyn


\dk_ln_akceptuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Poprawa nagłówka reorganizacji
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_AREO';
_params.AKCJA:='Akceptuj';
_params.UIDREF:=DK_LN.uidref();

_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'DK_LN',DK_LN.ref());
exec('mp_run','#b__box',_params)


\pw_dostdk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Przed wyświetleniem EANX.DOSTAWA
::----------------------------------------------------------------------------------------------------------------------
_wybdst:=DK_L.M<>null() & DK_L.M().SETW='P';
EANX.DOSTAWA:={? _wybdst & DK_L.SCSQL<>''
              || exec('FindAndGet','#table',DK,DK_L.SCSQL,,
                   "{? PLUS='T'
                    || @.ND.cntx_psh();
                       @.ND.use(ref_name(N));
                       _dat:=N().D;
                       @.ND.cntx_pop();
                       _dat
                    || DOST
                    ?}",date(0,0,0))
              || date(0,0,0)
              ?};
{? ~_wybdst
|| exec('findfnrd','color')
|| ''
?}


\pr_dostdk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Przed redakcją EANX.DOSTAWA
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_wybdst:=DK_L.M<>null() & DK_L.M().SETW='P';
{? ~_wybdst
|| EANX.DOSTAWA:=date(0,0,0)
|| _wyn:=1;
   exec('sc_aktyw','magazyn_stan',DK_L.MG,DK_L.M);
   _stskind:='NOZ';
   exec('sc_tymczas','magazyn_stan',DK_L.MG,DK_L.M,'T',,_stskind)
?};
win_disp();
_wyn


\f3_dostdk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: klawisz F3 EANX.DOSTAWA
::----------------------------------------------------------------------------------------------------------------------
_wyn:=fld();
_czy_d:=0;
_ind:=__sc.ndx_tmp('',,'SRDK',,,'SRDK',,);
__sc.index(_ind);
{? {? __sc.find_key(DK_L.SCSQL) || _czy_d:=(__sc.D<>EANX.DOSTAWA) || 1 ?}
|| {? __sc.first()
   || _ok:=1;
      {? _czy_d
      || _ok:=0;
         {! |? {? __sc.D=EANX.DOSTAWA || _ok:=1; 0 || __sc.next() ?} !}
      || {? DK_L.SCSQL<>''
         || _ok:=0;
            {! |? {? __sc.RDK=BB.sqlint(DK_L.SCSQL) & __sc.NDK=8+DK_L.SCSQL || _ok:=1; 0 || __sc.next() ?} !}
         ?}
      ?};
      {? ~_ok || __sc.first() ?}
   || 0
   ?}
?};
__sc.ndx_drop(_ind);

__sc.hdr_sel();
__sc.hdr_sel(' dla materiału: %1 %2'@[DK_L.M().KTM,DK_L.M().N]);
_ind_sel:=__sc.ndx_tmp('',,'D',,,'RDK',,);
__sc.index(_ind_sel);
{? __sc.select(,1,10)
|| EANX.DOSTAWA:=__sc.D;
   DK_L.SCSQL:=__sc.SRDK;
   DK_L.TW:=__sc.TW;
   DK_L.IL:=DISP.SD;
   exec('reoIL2','magdok_wymiary');
   {? DK_L.SCEAN<>__sc.SCEAN || DK_L.SCEAN:=__sc.SCEAN ?};
   _wyn:=__sc.D
?};
__sc.hdr_sel();
__sc.ndx_drop(_ind_sel);
_wyn


\po_dostdk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Po redagowaniu EANX.DOSTAWA
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_wybdst:=DK_L.M<>null() & DK_L.M().SETW='P';
{? _wybdst & EANX.DOSTAWA=date(0,0,0)
|| FUN.info('Należy wybrać dostawę.'@);
   _wyn:=0
|| __sc.cntx_psh();
   {? DK_L.SCSQL<>''
   ||
      _ind:=__sc.ndx_tmp('',,'D',,,'RDK',,,'NDK',,);
      __sc.index(_ind);
      __sc.prefix(EANX.DOSTAWA,BB.sqlint(DK_L.SCSQL),8+DK_L.SCSQL);
      _jest:=__sc.first();
      {? ~_jest
      || DK_L.SCSQL:='';
         __sc.ndx_drop(_ind);
         _ind:=__sc.ndx_tmp('',,'D',,);
         __sc.index(_ind);
         __sc.prefix(EANX.DOSTAWA);
         _jest:=__sc.first();
         {? _jest
         || _jest:=0;
            {!
            |? {? {? __sc.S>0
                  || exec('sc_tmp_info','magazyn_stan');
                     {? DISP.SD>0
                     || _jest:=1;
                        1
                     || 0
                     ?}
                  || 0
                  ?}
               || 0
               || __sc.next()
               ?}
            !}
         ?}
      ?}
   ||
::    szukanie gdy nie wybrano przez F3
      _ind:=__sc.ndx_tmp('',,'D',,);
      __sc.index(_ind);
      __sc.prefix(EANX.DOSTAWA);
      _jest:=__sc.first();
      {? _jest
      || _jest:=0;
         {!
         |? {? {? __sc.S>0
               || exec('sc_tmp_info','magazyn_stan');
                  {? DISP.SD>0
                  || _jest:=1;
                     1
                  || 0
                  ?}
               || 0
               ?}
            || 0
            || __sc.next()
            ?}
         !}
      ?}
   ?};
   {? _jest
   || _wyn:=1;
      _olddst:=exec('ctrlSETW','magdok_wspolne',DK_L.M,__sc.SRDK);
      DK_L.SCSQL:=__sc.SRDK;
      EANX.DOSTAWA:=__sc.D;
      {? ~_olddst || DK_L.TW:=DK_L.TWDO:=__sc.TW ?}
   || {? EANX.DOSTAWA=date(0,0,0)
      || FUN.info('Wymagane podanie daty dostawy.'@)
      || FUN.info('Nie ma dostawy w tym dniu.'@)
      ?}
   ?};
   __sc.ndx_drop(_ind);
   __sc.cntx_pop()
?};
_wyn


\aktSLwgTW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: pobranie aktualnych stanów dostawy wynikających z DK_L-i - wg zaakceptowanych dokumentów i reorganizacji
::   WE: _a - magazyn
::       _b - materiał
::       _c - SCSQL
::       _d - ilość do zmiany
::       _e - nowy termin ważności
::       _f - wskazanie na DK
::       [_g] - tabela danych
::       [_h] - 1-tryb z szacowaniem ilości bez znaczników SCSQL, 0(domyślnie)-nie
::       [_i] - paleta
::   WY: tabela zmian
::----------------------------------------------------------------------------------------------------------------------
  _mag:={? var_pres('_a')=type_of(null()) || _a || null() ?};
  _mat:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_scsql:={? var_pres('_c')=type_of('')     || _c || 'brak' ?};
  _ile:={? var_pres('_d')=type_of(0)      || _d || 0 ?};
   _tw:={? var_pres('_e')=type_of(date()) || _e || date(0,0,0) ?};
_dkref:={? var_pres('_f')=type_of('')     || _f || $DK.ref() ?};
 _mode:={? var_pres('_h')=type_of(0)      || _h || 0 ?};
  _pal:={? var_pres('_i')=type_of(null()) || _i || null() ?};

_res:={? var_pres('_g')=type_of(SYSLOG)
      || _g
      || tab_tmp(4,'DKREF','STRING[16]',''
          ,'EANL','STRING[16]',''
          ,'TW','DATE',''
          ,'SCEAN','STRING[128]',''
          ,'SCSQL','STRING[16]',''
          ,'KOD','STRING[30]',''
          ,'ILE','REAL',''
          ,'ILR','REAL',''
          ,'KODEANL','STRING[30]',''
          ,'JM','STRING[10]',''
          ,'IL2','REAL',''
          ,'IDK','REAL','')
      ?};

_spsql:={? _scsql<>'brak' || exec('FindAndGet','#table',DK,_scsql,,"PRDK",'') || '' ?};
_dost2:=_spsql<>'' & _scsql<>_spsql;
OKR.cntx_psh();
exec('mag_psh','open_tab');
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
EANL.cntx_psh();
{? OKR.last
|| {!
   |? exec('mag_open','open_tab',ST.ODDZ,$OKR.ROK+2);
      _ii:=0;
      {!
      |? DK_L.index('SCSQL');
         DK_L.prefix(_mag,_mat,{? ~_ii || _scsql || _spsql ?},);
         {? DK_L.first()
         || {!
            |?
::             analizujemy tylko zapisy zaakceptowane
               _wgdk:=DK_L.DK<>null();
               {? ((_wgdk & DK_L.DK().Z='T') | (DK_L.Z='T')) & {? _pal || DK_L.PAL=_pal || 1 ?}
               || _scean:={? DK_L.SCEAN<>'' || DK_L.SCEAN |? DK_L.DK().SCEAN<>'' || DK_L.DK().SCEAN || DK_L.SCEAN ?};
                  {? _scean='' || _scean:='brak' ?};
                  _res.clear();
                  _res.prefix(_dkref,$DK_L.LOK,DK_L.TW,_scean,);
                  {? _res.first()
                  || _res.ILE+=DK_L.IL;
                     _res.IL2+=DK_L.IL2;
                     _res.IDK+={? _wgdk || DK_L.IL || 0 ?};
                     _res.put(1)
                  || _res.blank();
                     _res.SCSQL:=DK_L.SCSQL;
                     _res.EANL:=$DK_L.LOK;
                     _res.TW:=EANX.TWOD:=DK_L.TW;
                     _res.SCEAN:=_scean;
                     _res.KOD:=DK_L.LOK().KOD;
                     _res.ILE:=DK_L.IL;
                     _res.IL2:=DK_L.IL2;
                     _res.IDK:={? _wgdk || DK_L.IL || 0 ?};
                     _res.DKREF:=_dkref;
                     _res.JM:=DK_L.M().J().KOD;
                     _res.KODEANL:=DK_L.LOK().KOD;
                     _res.add(1)
                  ?}
               ?};
               DK_L.next()
            !}
         ?};
         _ii+={? _dost2 || 1 || 2 ?};
         _ii<2
      !};
      {? _mode
      || DK_L.index('SCSQL');
         DK_L.prefix(_mag,_mat);
         {? DK_L.first() & DK_L.find_tab('first','SCSQL',,'=','')
         || {!
            |?
               _wgdk:=DK_L.DK<>null();
               {? ((_wgdk & DK_L.DK().Z='T' & DK_L.DK().SRDK=_scsql) | (DK_L.Z='T')) & {? _pal || DK_L.PAL=_pal || 1 ?}
               || _scean:={? DK_L.SCEAN<>'' || DK_L.SCEAN |? DK_L.DK().SCEAN<>'' || DK_L.DK().SCEAN || DK_L.SCEAN ?};
                  {? _scean='' || _scean:='brak' ?};
                  _res.clear();
                  _res.prefix(_dkref,$DK_L.LOK,DK_L.TW,_scean,);
                  {? _res.first()
                  || _res.ILE+=DK_L.IL;
                     _res.IL2+=DK_L.IL2;
                     _res.IDK+={? _wgdk || DK_L.IL || 0 ?};
                     _res.put(1)
                  || _res.blank();
                     _res.SCSQL:=DK_L.SCSQL;
                     _res.EANL:=$DK_L.LOK;
                     _res.TW:=EANX.TWOD:=DK_L.TW;
                     _res.SCEAN:=_scean;
                     _res.KOD:=DK_L.LOK().KOD;
                     _res.ILE:=DK_L.IL;
                     _res.IL2:=DK_L.IL2;
                     _res.IDK:={? _wgdk || DK_L.IL || 0 ?};
                     _res.DKREF:=_dkref;
                     _res.JM:=DK_L.M().J().KOD;
                     _res.KODEANL:=DK_L.LOK().KOD;
                     _res.add(1)
                  ?}
               ?};
               DK_L.find_tab('next','SCSQL',,'=','')
            !}
         ?}
      ?};
      OKR.prev
   !}
?};
OKR.cntx_pop();
exec('mag_pop','open_tab');
{? (_res.clear(); _res.first())
|| {? _mode
   || _dor:=tab_tmp(4,'DKREF','STRING[16]',''
             ,'EANL','STRING[16]',''
             ,'TW','DATE',''
             ,'SCEAN','STRING[128]',''
             ,'SCSQL','STRING[16]',''
             ,'ILE','REAL','');
      {? _res.find_tab('first','IDK',,'>',0)
      || {!
         |? {? _res.ILE<_res.IDK
            || _dor.blank();
               _dor.DKREF:=_res.DKREF;
               _dor.EANL:=_res.EANL;
               _dor.TW:=_res.TW;
               _dor.SCEAN:=_res.SCEAN;
               _dor.SCSQL:=_res.SCSQL;
               _dor.ILE:=_res.IDK-_res.ILE;
               _dor.add(1)
            ?};
            _res.find_tab('next','IDK',,'>',0)
         !}
      ?};
      _dor.clear();
      {? _dor.first()
      || {!
         |? _next:=1;
            {? (_res.clear();
                _res.first() &
                _res.find_tab('first','SCSQL',,'<>',_dor.SCSQL,'ILE',,'>',0,'SCEAN',,'=',_dor.SCEAN,'TW',,'=',_dor.TW))
            || {!
               |? {? _res.ILE=_dor.ILE
                  || _res.SCSQL:=_dor.SCSQL;
                     _res.put(1);
                     _dor.del();
                     _next:=0
                  |? _res.ILE<_dor.ILE
                  || _res.SCSQL:=_dor.SCSQL;
                     _res.put(1);
                     _dor.ILE-=_res.ILE;
                     _dor.put(1)
                  |? _res.ILE>_dor.ILE
                  || _res.ILE-=_dor.ILE;
                     _res.put(1);
                     _res.ILE:=_dor.ILE;
                     _res.SCSQL:=_dor.SCSQL;
                     _res.add(1);
                     _dor.del();
                     _next:=0
                  ?};
                  _next &
                  _res.find_tab('next','SCSQL',,'<>',_dor.SCSQL,'ILE',,'>',0,'SCEAN',,'=',_dor.SCEAN,'TW',,'=',_dor.TW)
               !}
            ?};
            _dor.next()
         !}
      ?}
   ?};
   {!
   |? {? _res.ILE<=0 || _res.del() || _res.next() ?}
   !}
?};
_buf:=tab_tmp(1,'REF','STRING[16]','','EANL','STRING[16]','','KOD','STRING[30]','');
SL.cntx_psh();
SLD.cntx_psh();
{? _res.first()
|| {!
   |? _eanl:=exec('FindAndGet','#table',EANL,_res.EANL,,,null());
      _ils:=0;
      SL.index('MG');
      SL.prefix(_mag,_mat,_eanl,_res.TW);
      _ils:={? SL.first() || SL.IL || 0 ?};
      {? _ils<_res.ILE
      || SL.index('AUTT');
         SL.prefix(_mag,_mat,_res.TW);
         {? SL.first() & _res.ILE<=SL.IL
         || _buf.blank();
            _buf.REF:=$_res.ref();
            _buf.EANL:=$SL.EANL;
            _buf.KOD:=SL.EANL().KOD;
            _buf.add(1)
         ?}
      ?};
      _res.next()
   !};
   _buf.clear();
   {? _buf.first()
   || {!
      |? _res.clear();
         {? _res.seek(_buf.REF)
         || _res.EANL:=_buf.EANL;
            _res.KODEANL:=_buf.KOD;
            _res.put(1)
         ?};
         _buf.next()
      !}
   ?}
?};
obj_del(_buf);
SL.cntx_pop();
SLD.cntx_pop();
EANL.cntx_pop();
_res


\ctrlSLwgTW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: kontrola ilości do rozpisania
::   WY: 1-ok 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_tab:=cur_tab();
_ref:=_tab.ref();
_tab.cntx_psh();
_tab.prefix();
_old:={? _tab.seek(_ref) || _tab.ILR || 0 ?};
_tab.cntx_pop();
_fld:=_tab.ILR;
_max:=_tab.ILE;

{? _fld<0
|| FUN.info('Ilość musi być wieksza lub równa zero.'@)
|? _max<_fld
|| FUN.info('Maksymalna ilość nie może być większa niż %1.'@[$_tab.ILE]);
   _tab.ILR:=_max
|| _ilr:=0;
   _tab.cntx_psh();
   _tab.clear();
   {? _tab.first() || {! |? {? _tab.ILR>0 || _ilr+=_tab.ILR ?};_tab.next() !} ?};
   _tab.cntx_pop();
   _dorozp:=EANX.ILP-_ilr+_old;
   {? _dorozp<_fld
   || FUN.info('Pozostała ilość do rozpisania nie może być większa niż %1.'@[$_dorozp]);
      _tab.ILR:=_dorozp
   || EANX.ILJ:=_ilr+_fld;
      _res:=1
   ?}
?};
_res


\autoSLwgTW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: automatyczne rozpisanie wg aktualnej kolejności lub filtru
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab();
_doroz:=EANX.ILP-EANX.ILJ;
{? _doroz>0 & FUN.ask('Czy rozpisać %1 %2 wg zadanej kolejności i filtra.'@[$_doroz,EANX.JM().KOD])
|| _tab.cntx_psh();
   {? _tab.f_active()
   || {? _tab.f_first()
      || {!
         |? _poz:=_tab.ILE-_tab.ILR;
            {? _poz>=_doroz
            || _tab.ILR+=_doroz;
               _tab.put(1);
               _doroz:=0
            |? _poz>0
            || _tab.ILR+=_poz;
               _tab.put(1);
               _doroz-=_poz
            ?};
            _doroz>0 & _tab.f_next()
         !}
      ?}
   || {? _tab.first()
      || {!
         |? _poz:=_tab.ILE-_tab.ILR;
            {? _poz>=_doroz
            || _tab.ILR+=_doroz;
               _tab.put(1);
               _doroz:=0
            |? _poz>0
            || _tab.ILR+=_poz;
               _tab.put(1);
               _doroz-=_poz
            ?};
            _doroz>0 &_tab.next()
         !}
      ?}
   ?};
   _tab.cntx_pop();
   exec('sumaSLwgTW','magdok_wymiary')
?};
~~


\sumaSLwgTW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: oblicza sumę ile rozpisano
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab();
_ilr:=0;
_tab.cntx_psh();
_tab.clear();
{? _tab.first() || {! |? {? _tab.ILR>0 || _ilr+=_tab.ILR ?};_tab.next() !} ?};
_tab.cntx_pop();
EANX.ILJ:=_ilr;
1


\recSLwgTW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: rekord prze dla rozpisania lokalizacji
::   WY: 1-rozpisane 0-nie
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab();
_tab.ILR>0


\akcSLwgTW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: akceptacja rozpisania lokalizacji
::----------------------------------------------------------------------------------------------------------------------
{? EANX.ILP=EANX.ILJ
|| sel_exit()
|| FUN.info('Nie rozpisano zmienianej ilości.\nPozostało do rozpisania %1 %2.'@[$(EANX.ILP-EANX.ILJ),EANX.JM().KOD]);
   0
?}


\tabWymM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: pobiera zapisy dla DK_L-a
::   WE: _a - magazyn
::       _b - materiał
::   WY: tabela danych
::----------------------------------------------------------------------------------------------------------------------
_mag:=_a;
_mat:=_b;
_res:=tab_tmp(4,'EANL','STRING[16]',''
       ,'TW','DATE',''
       ,'SCEAN','STRING[128]',''
       ,'SCSQL','STRING[16]',''
       ,'KOD','STRING[30]',''
       ,'ILE','REAL',''
       ,'ILR','REAL','');
OKR.cntx_psh();
exec('mag_psh','open_tab');
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.last
|| {!
   |? exec('mag_open','open_tab',ST.ODDZ,$OKR.ROK+2);
      DK_L.index('SCSQL');
      DK_L.prefix(_mag,_mat);
      {? DK_L.first()
      || {!
         |? _scean:={? DK_L.SCEAN<>'' || DK_L.SCEAN |? DK_L.DK().SCEAN<>'' || DK_L.DK().SCEAN || DK_L.SCEAN ?};
            {? _scean='' || _scean:='brak' ?};
            _res.clear();
            _res.prefix($DK_L.LOK,DK_L.TW,_scean,DK_L.SCSQL,);
            {? _res.first()
            || _res.ILE+=DK_L.IL;
               _res.put(1)
            || _res.blank();
               _res.SCSQL:=DK_L.SCSQL;
               _res.EANL:=$DK_L.LOK;
               _res.TW:=EANX.TWOD:=DK_L.TW;
               _res.SCEAN:=_scean;
               _res.KOD:=DK_L.LOK().KOD;
               _res.ILE:=DK_L.IL;
               _res.add(1)
            ?};
            DK_L.next()
         !}
      ?};
      OKR.prev
   !}
?};
OKR.cntx_pop();
exec('mag_pop','open_tab');
_res


\pwrj2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed wyświetleniem dla drugiej jednostki ewidencyjnej
::----------------------------------------------------------------------------------------------------------------------
''


\prrj2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed redakcją dla drugiej jednostki ewidencyjnej
::----------------------------------------------------------------------------------------------------------------------
0


\porj2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Po redakcji dla drugiej jednostki ewidencyjnej
::----------------------------------------------------------------------------------------------------------------------
1


\reoIL2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przeliczenie dla drugiej jednostki miary
::----------------------------------------------------------------------------------------------------------------------
{? DK_L.DK<>null() & DK_L.DK().M().J2<>null() & DK_L.DK().WS2>0
|| DK_L.J2:=DK_L.DK().M().J2;
   DK_L.WS2:=DK_L.DK().WS2;
   _dokl:={? DK_L.DK().M<>null || exec('jaka_dok_m','jm',DK_L.DK().M) || 3 ?};
   _dokl_s:=exec('jaka_dok_mjm','jm',DK_L.DK().M,DK_L.J2,DK_L.DK().M().J);
   {? _dokl_s<0 || _dokl_s:=_dokl ?};
   DK_L.IL2:=DK_L.IL/DK_L.WS2 $ (_dokl_s+1);
   roundmet(BEER.MDOKL)
|? DK_L.M<>null() & DK_L.M().J2<>null() & DK_L.WS2>0
|| DK_L.J2:=DK_L.M().J2;
   DK_L.WS2:=DK_L.WS2;
   _dokl:={? DK_L.M<>null || exec('jaka_dok_m','jm',DK_L.M) || 3 ?};
   _dokl_s:=exec('jaka_dok_mjm','jm',DK_L.M,DK_L.J2,DK_L.M().J);
   {? _dokl_s<0 || _dokl_s:=_dokl ?};
   DK_L.IL2:=DK_L.IL/DK_L.WS2 $ (_dokl_s+1);
   roundmet(BEER.MDOKL)
|| DK_L.J2:=null();
   DK_L.WS2:=0;
   DK_L.IL2:=0
?};
~~


\set_efld_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Zaznacza wymagalne pola dla pozycji reorganizacji - po wybraniu indeksu materiałowego
::   WE: [_a] - akronim okna redakcji tabeli DK_L, domyślnie - bieżące
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') || _red:=_a || _red:=DK_L.win_edit('?') ?};
{? _red<>''
|| _mat:={? DK_L.DK=null() || DK_L.M || DK_L.DK().M ?};
   _j2:=exec('FindAndGet','#table',M,_mat,,"J2",null());
   _enable:={? _j2<>null() || 'enable=1' || 'enable=0' ?};
   DK_L.efld_opt(_red,_enable,,'IL2');
   DK_L.efld_opt(_red,_enable,,'WS2');
   DK_L.efld_opt(_red,_enable,,'J2')
?}


\reoIL_IL2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przeliczenie wskazanej ilości na ilość w drugiej jednostce miary
::   WE: _a - M
::       _b - ilość
::       _c - współczynnik
::----------------------------------------------------------------------------------------------------------------------
_mat:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_ile:={? var_pres('_b')=type_of(0) || _b || 0 ?};
_ws2:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_res:=0;

{? _mat<>null() & (_j2:=exec('FindAndGet','#table',M,_mat,,"J2",null()); _j2<>null()) & _ile<>0 & _ws2>0
|| _jm:=exec('FindAndGet','#table',M,_mat,,"J",null());
   _dokl:=exec('jaka_dok_m','jm',_mat);
   _dokl_s:=exec('jaka_dok_mjm','jm',_mat,_j2,_jm);
   {? _dokl_s<0 || _dokl_s:=_dokl ?};
   _res:=_ile/_ws2 $ (_dokl_s+1);
   roundmet(BEER.MDOKL)
?};
_res


\dk_lwgeanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Akcja przeniesienia na reorganizację
::----------------------------------------------------------------------------------------------------------------------
{? DK_LN.RODZ='I'
|| exec('dkliwgea','magdok_wymiary',1);
   grp_disp(DK_LI,'WER')
|| exec('dk_lwgea','magdok_wymiary',1);
   grp_disp(DK_L,'WERR')
?}


\divDK_LN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wydzielenie z danej reorganizacji tego co da się odakceptować - kontekst aktualnego DK_LN
::   WY: 1-udało się wydzielić 0-nie dla 1 konteks nowego DK_LN-a
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_old_dk_ln:=DK_LN.ref();
_new_dk_ln:=null();
DK_LN.cntx_psh();
DK_L.cntx_psh();
DK_LN.prefix();
DK_LN.TM+=(1/60);
DK_LN.ZDOK:='';
{? DK_LN.add(1) || _new_dk_ln:=DK_LN.ref() ?};
{? _new_dk_ln<>null()
|| DK_L.index('DK_LNLOK');
   DK_L.prefix(_old_dk_ln);
   {? DK_L.first()
   || _mag:=DK_L.DK_LN().MG;
      {!
      |? _ref:=DK_L.ref(); _ok:=DK_L.next();
         DK_L.cntx_psh();
         DK_L.prefix();
         {? DK_L.seek(_ref)
         || _to_new:=0;
            {? DK_L.M().SETW='P' & DK_L.SCSQL<>''
            ||
::             sprawdzenie czy jest to ostatnia operacja
               _dk_ln:=DK_L.DK_LN; _mat:=DK_L.M; _scsql:=DK_L.SCSQL;
               _dt:=DK_L.DK_LN().DT; _tm:=DK_L.DK_LN().TM;
               _ctrl:=0;
               DK_L.cntx_psh();
               DK_L.index('SCSQL');
               DK_L.prefix(_mag,_mat,_scsql);
               _ctrl:=DK_L.first() &
                  (DK_L.find_tab('first','DK',,'=',null(),'DK_LN',,'<>',_dk_ln,'DK_LN','DT','>',_dt)
                 | DK_L.find_tab('first','DK',,'=',null(),'DK_LN',,'<>',_dk_ln,'DK_LN','DT','=',_dt,'DK_LN','TM','>',_tm));
               DK_L.cntx_pop();
               _ile:=exec('FindAndGet','#table',DK,DK_L.SCSQL,,"IL",0);
               _ils:=exec('obl_stsc','magazyn_stan',ref_num(DK_L.SCSQL),ref_name(DK_L.SCSQL),_mag,DK_L.M);
               {? _ils<0 || _ils:=0 ?};
               {? _ils=0 | _ctrl
               || {? _ile=_ils || _to_new:=1 ?}
               || _to_new:=1
               ?}
            || _to_new:=1
            ?};
            {? _to_new
            || DK_L.DK_LN:=_new_dk_ln;
               DK_L.TM:=DK_L.DK_LN().TM;
               {? DK_L.put(1) || _res+=1 || _res:=-1 ?}
            ?}
         ?};
         DK_L.cntx_pop();
         _ok & _res>=0
      !}
   ?}
?};
DK_LN.cntx_pop();
DK_L.cntx_pop();
{? _res>0 || DK_LN.seek(_new_dk_ln) ?};
_res


\patternLok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wzorzec dla kodów lokalizacji
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',100215,2)='T' || 'u!' || '9!' ?}


\eanznd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca ilość dla lokalizacji dla danego dokumentu
::   WE: _a - ref ND
::       _b - ref lokalizacji
::   WY: ilość
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_buf:=tab_tmp(1,'SQL','STRING[16]','');
ND.cntx_psh();
DK.cntx_psh();
DK_L.cntx_psh();
DK_L.index('CZYPALDO');
DK_L.prefix(_a);
{? DK_L.first() & DK_L.find_tab('first','LOK',,'=',_b)
|| _break:=0;
   _pal:=DK_L.MG().PAL='T';
   {!
   |? {? DK_L.IL>0
      || {? _pal
         || {? DK_L.PAL<>null & ~_buf.find_key($DK_L.PAL)
            || _buf.blank();
               _buf.SQL:=$DK_L.PAL;
               _buf.add(1);
               _wyn+=1
            ?}
         || {? ~DK_L.M().OBJ
            || _wyn:=DK_L.LOK().OBJ;
               _break:=1
            || _wyn+=(DK_L.IL/({? DK_L.M().ILOBJ>0 || DK_L.M().ILOBJ || 1 ?}))*DK_L.M().OBJ
            ?}
         ?}
      ?};
      ~_break & DK_L.find_tab('next','LOK',,'=',_b)
   !}
?};
ND.cntx_pop();
DK.cntx_pop();
DK_L.cntx_pop();
obj_del(_buf);
_wyn


\eanzeann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca ilość dla lokalizacji dla danej operacji
::   WE: _a - ref EANN
::       _b - ref lokalizacji
::   WY: ilość
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_buf:=tab_tmp(1,'SQL','STRING[16]','');
EANN.cntx_psh();
EANP.cntx_psh();
EANP.index('EANN');
EANP.prefix(_a);
{? EANP.first() & EANP.find_tab('first','LOKZ',,'=',_b)
|| _break:=0;
   _pal:=EANP.LOKZ.MG().PAL='T';
   {!
   |? {? EANP.IL>0
      || {? _pal
         || {? EANP.PAL<>null & ~_buf.find_key($EANP.PAL)
            || _buf.blank();
               _buf.SQL:=$EANP.PAL;
               _buf.add(1);
               _wyn+=1
            ?}
         || {? ~EANP.M().OBJ
            || _wyn:=EANP.LOKZ().OBJ;
               _break:=1
            || _wyn+=(EANP.IL/({? EANP.M().ILOBJ>0 || EANP.M().ILOBJ || 1 ?}))*EANP.M().OBJ
            ?}
         ?}
      ?};
      ~_break & EANP.find_tab('next','LOKZ',,'=',_b)
   !}
?};
EANN.cntx_pop();
EANP.cntx_pop();
obj_del(_buf);
_wyn


\findpallok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PD] [23.25]
:: OPIS: poszukuje lokalizacji zgodnej z parametrami dla palety
::   WE: _a - magazyn
::       _b - kontrahent
::       _c - status dostawy
::       _d - paleta
::----------------------------------------------------------------------------------------------------------------------
_res:=null();
_int:=1;
MG_GR.cntx_psh();
EANL.cntx_psh();
MG.cntx_psh();MG.prefix();
{!|?
::pierwsza pętla jest dla stref z przyisanym konrahentem, druga dla stref bez kontrahenta
   MG_GR.index('KHST');
   MG_GR.prefix(_b,_c);
   {? MG_GR.first()
   || {!|?
::sprawdzenie czy indeksy z palety pokrywają się z tymi ze strefy
         _mg_gr_m:=1;
         M_MG_GR.cntx_psh();
         M_MG_GR.index('MG_GR_M');
         M_MG_GR.prefix(MG_GR.ref());
         {? M_MG_GR.first()
         ||
            PAL_POZ.cntx_psh();
            PAL_POZ.index('PAL');
            PAL_POZ.prefix(_d);
            {? PAL_POZ.first()
            || {!|?
                  {? ~M_MG_GR.find_key(PAL_POZ.M) || _mg_gr_m:=0 ?};
                  _mg_gr_m & PAL_POZ.next()
               !}
            ?};
            PAL_POZ.cntx_pop()
         ?};
         M_MG_GR.cntx_pop();

         MG_GRP.cntx_psh();
         MG_GRP.index('MG_GR');
         MG_GRP.prefix(MG_GR.ref(),_a);
         {? _mg_gr_m & MG_GRP.first()
         || {!|?
               {? exec('eanlzobj','magazyn_stan',_a,MG_GRP.EANL) < MG_GRP.EANL().ILPAL
               || _res:=MG_GRP.EANL
               ?};
               MG_GRP.next()
            !}
         ?};
         MG_GRP.cntx_pop();
         MG_GR.next()
      !}
   ?};
   _int+=1;
   _b:=null();
   _res=null & _int<3
!};
{? _res=null() & MG.seek(_a) || _res:=MG.EANL ?};
MG.cntx_pop();
MG_GR.cntx_pop();
EANL.cntx_pop();
_res


\act_gen_reo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PD] [23.25]
:: OPIS: Czynność automatycznej reprganizacji po kwalifikacji
::   WE: ND.ref()
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_DREO';
_params.AKCJA:='AUT_REO';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ND',_a);
exec('mp_run','#b__box',_params)

:Sign Version 2.0 jowisz:1045 2024/02/23 12:50:39 2ee36a4423e7cbf9c036a42a09d7f0968db7c210a2e44c698516ec3820b385e545f68e0a102d6ac764b53a079443abaabe0380d091f69bda5ea2cd1261ca1a13e55235411aef4578a14aa92a39a9dbe59f15f1517b8a3f74e8d228dfee97987dd4b1e828294a0638eaf8216457155961cf86a32f1d3a7e7b4321803aa8c1d14b
