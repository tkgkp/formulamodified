:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: edi_fo_ufd.fml
:: Utworzony: 26.08.2020
:: Autor: AWI
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły definicji komunikatów EDI dotyczących formatu UFD
::======================================================================================================================
:: DRO_TODO_AWI: (bl): --: -  Zapis: korekta do faktury 100%
:: DRO_TODO_AWI: (bl): --: -  Odczyt: korekta do faktury 100%
::
:: DRO_TODO_AWI: (bl): --: -  Zapis/Odczyt: dane do Intrastat
:: DRO_TODO_AWI: (bl):   : -  Brak zabezpieczenia wycofania zaliczki jak jest do niej kolejna
:: DRO_TODO_AWI: (bl):   : -  Zamieniać stawkę 0 na właściwą w dokumentach wewnętrznych
:: DRO_TODO_AWI: (bl):   : -  w nazwie komunikatów dodać dziedzinę


\r_faks_gs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: Odczyt - start grupa
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
exec('init','lsp');
exec('init_fak','lsp');
1


\r_faks_ds
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: read - dokument sprzedaży - start document
::   WE: _a - [F]aktura, [K]orekta
::   WY: -1/0/1
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_pres('_a')=type_of('') || _a || '' ?};
{? _typ='' | 'FK'*_typ=0
||
   FUN.info('Nieprawidłowy parametr funkcji r_faks_ds.'@);
   return(-1)
?};
_result:=1;
:: _def_pid - identyfikator pozycji definicji: cbc:CustomizationID - weryfikacja wersji komunikatu
:_def_pid:={? _typ='F' || '62a13f2232bf29aea545199e90dfa24ee9b3e19a'  || '294d17b632a359fc1cd1ded9996059d8f4ac26a4' ?};
:_valID:=0;
:_val:=exec('id_val','edi_xml',_def_pid);
:{? var_pres('_val')<>type_of(~~)
:      &
:   var_pres('[1]',_val)<>type_of(~~)
:||
:   _valID:=
:      {? _typ='F'
:      ||
:         _val[1]='urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0'
:      ||
:         _val[1]='urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0#extended#urn:fdc:www.efaktura.gov.pl:ver1.0'
:      ?}
:?};
:{? _valID=0
:||
:   exec('add_kom','#message','Niepoprawna wersja komunikatu.',4,__XML.ID);
:   return(-1)
:?};
VAR_DEL.delete('__N','__V','__P','__OL','__OtherParties');
{? _result
||
   exec('edi_buf','edi_fo_ufd');
   EDI_Z.POMIN:='N';
   BEER.WYSTFAKS:=null();
   BEER.SZ:='Z';
:: Tabela do zbierania danych z sekcji Document\Order\OrderLine
   __OL:=tab_tmp(
      ,'LN','INTEGER','LineNumber'
      ,'GLN','INTEGER','GlobalLineNumber'
      ,'ID','STRING[100]','ItemDescription'
      ,'IC','STRING[50]','ItemCodeExt'
      ,'IU','STRING[8]','ItemUnit'
      ,'Q','REAL','Quantity'
      ,'UNP','REAL','UnitNetPrice'
      ,'NA','REAL','NetAmount'
      ,'TA','REAL','TaxAmount'
      ,'TR','REAL','TaxRate'
      ,'SP','STRING[1]','SplitPayment'
      ,'PQ','REAL','Quantity'
      ,'PUNP','REAL','UnitNetPrice'
      ,'PNA','REAL','NetAmount'
      ,'PTA','REAL','TaxAmount'
      ,'PTR','REAL','TaxRate'
   );
:: Tabela do zbierania danych z sekcji Document\Parties\OtherParties
   __OtherParties:=tab_tmp(2
      ,'ILN','STRING[13]','ILN'
      ,'TAXID','STRING[20]','TaxID'
::      ,'NAME','STRING[]','Name'
::      ,'ADDRESS1','STRING[255]','Address1'
::      ,'ADDRESS2','STRING[255]','Address2'
::      ,'AUTOADDR','STRING[1]','AutoAddress'
::      ,'ST_AND_N','STRING[255]','StreetAndNumber'
::      ,'CITYNAME','STRING[30]','CityName'
::      ,'POSTALC','STRING[9]','PostalCode'
::      ,'COUNTRY','STRING[2]','Country'
      ,'INTERID','STRING[255]','InternalId'
      ,'ROLE','STRING[2]','Role'
      ,'ROLEDESC','STRING[255]','RoleDescription'
      ,'OTR_ROLE','STRING[1]','OtherRole'
      ,'SHARE','REAL','Share'
      ,'EORI','STRING[255]','EORINumber'
   )
?};
_result


\w_faks_sd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: write - dokument sprzedaży - start document
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__MANSKSEF')=type_of('') & __MANSKSEF='BC'
||
   ~~

|? FAKS.EDI_W='T'
||
   exec('add_kom','#message','Dokument %1 jest już zapisany.'@[FAKS.SYM],2,EDI_Z.SYM);
   return(0)
?};
exec('czytaj','#stalesys',,KST);
exec('edi_buf','edi_fo_ufd');
exec('edi_buf_fill','edi_fo_ufd',FAKS.ref());
EDI_Z.POMIN:='N';
_edi:=exec('edi','edi_wspolne');
_edi.xml_xsd_validate:=1;
1


\w_faks_ed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: write - dokument sprzedaży - end document
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__sumkor.erase();
VAR_DEL.delete('__N','__V','__P');
{? EDI_Z.POMIN='N'
||
   _is_redy_to_send:=1;
   DOKUM.cntx_psh();
   {? exec('bl_dokum_seek','zbl',FAKS) || _is_redy_to_send:=exec('is_redy_to_send','zbl_dok',DOKUM.ref()) ?};
   DOKUM.cntx_pop();
   {? var_pres('__MANSKSEF')=type_of('') & (__MANSKSEF='BC' | __MANSKSEF='BC_ATTA_ADD')
   ||
      ~~
   ||
      FAKS.EDI_W:={? _is_redy_to_send || 'T' || 'B' ?};
      FAKS.put()
   ?}
?};
~~


\xmlval_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: Wypełnia __XML.VAL. Jeśli w __XML.VAL brak wartości uzupełnia __XML.KOM.
::   WE: _a - wartość
::       _b - komunikat
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
__XML.VAL:=_a;
{? __XML.VAL<>'' || 1 || __XML.KOM:=_b; 0 ?}


\date_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: Formatuje datę
::   WE: _a - data
::   WY: '' lub 'RRRR-MM-DD'
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of(date())
||
   _date:='%1-%2-%3'[form(_a~1,,,'99'),form(_a~2,-2),form(_a~3,-2)]
||
   _date:=''
?};
_date


\DocumentType
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: DocumentType
::   WE: _a - patrz wyjście
::   WY: INV / INV_CORR
::----------------------------------------------------------------------------------------------------------------------
_odczyt:=(_>0);
{? _odczyt
||
   {? __N1.TYPYSP=null()
   || __N1.DTYP0:=_a
   ?};
   1
||
   {? FAKS.T().KOR='N' || 'INV'
   |? FAKS.T().KOR='T' || 'INV_CORR'
   || ''
   ?}
?}


\DocumentFunctionCode
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: DocumentFunctionCode
::   WE: _a - patrz wyjście
::   WY: 'O' – oryginał
::       'D' – duplikat oryginału
::       'C' – korekta
::       'R' – duplikat korekty
::       '' - nie udało się ustalić
::----------------------------------------------------------------------------------------------------------------------
_odczyt:=(_>0);
{? _odczyt
||
   {? __N1.TYPYSP=null()
   || __N1.DFUNC0:=_a
   ?};
   1
||
   {? FAKS.T().KOR='N' || 'O'
   |? FAKS.T().KOR='T' || 'C'
   || ''
   ?}
?}


\InvoiceType
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: InvoiceType
::   WE: _a - patrz wyjście
::   WY: "VAT" Faktura VAT krajowa,
::       "ICD" (Inter community deliveries) - wewnątrzwspólnotowa dostawa towarów,
::       "AI" (Advance invoice) - zaliczka
::----------------------------------------------------------------------------------------------------------------------
{? _=1
||
:: odczyt
   _edi:=exec('edi','edi_wspolne');
   _context:=_edi.context;
   _verify_only:={? _context.TYPE=exec('context_type_bl','edi_wspolne') || _context.VERIFY_ONLY || 0 ?};
   {? __N1.TYPYSP=null()
   || __N1.TYP0:=_a;
      _typysp:=null();
      _typysp_il:=0;
      _where:=" and BL='T' and ZAK='T'";
      TYPYSP.cntx_psh();
      TYPYSP.index('BL1');
      TYPYSP.prefix('T','T',);
      _loop:=TYPYSP.first();
      {!
      |? _loop
      |!
         {? _a='AI' & TYPYSP.ZAL='T' & (__N1.DTYP0='INVOICE' | __N1.DTYP0='INV') & __N1.DFUNC0='O' & TYPYSP.KOR='N'
         ||
            _where:=$" and ZAL='T' and KOR='N'";
            _typysp:={? _typysp_il || null() || TYPYSP.ref() ?};
            _typysp_il+=1

         |? _a='AI' & TYPYSP.ZAL='T' & (__N1.DTYP0='INVOICE' | __N1.DTYP0='INV_CORR') & __N1.DFUNC0='C' & TYPYSP.KOR='T'
         ||
            _where:=$" and ZAL='T' and KOR='T'";
            _typysp:={? _typysp_il || null() || TYPYSP.ref() ?};
            _typysp_il+=1

         |? _a='ICD' & TYPYSP.UE='T' & (__N1.DTYP0='INVOICE' | __N1.DTYP0='INV')  & __N1.DFUNC0='O' & TYPYSP.KOR='N'
         ||
            _where:=$" and UE='T' and KOR='N'";
            _typysp:={? _typysp_il || null() || TYPYSP.ref() ?};
            _typysp_il+=1

         |? _a='ICD' & TYPYSP.UE='T' & (__N1.DTYP0='INVOICE' | __N1.DTYP0='INV_CORR') & __N1.DFUNC0='C' & TYPYSP.KOR='T'
         ||
            _where:=$" and UE='T' and KOR='T'";
            _typysp:={? _typysp_il || null() || TYPYSP.ref() ?};
            _typysp_il+=1

         |? _a='VAT' & (__N1.DTYP0='INVOICE' | __N1.DTYP0='INV') & __N1.DFUNC0='O' & TYPYSP.ZAL='N' & TYPYSP.UE='N' & TYPYSP.KOR='N'
         ||
            _where:=$" and ZAL='N' and UE='N' and KOR='N'";
            _typysp:={? _typysp_il || null() || TYPYSP.ref() ?};
            _typysp_il+=1

         |? _a='VAT' & (__N1.DTYP0='INVOICE' | __N1.DTYP0='INV_CORR') & __N1.DFUNC0='C' & TYPYSP.ZAL='N' & TYPYSP.UE='N' & TYPYSP.KOR='T'
         ||
            _where:=$" and ZAL='N' and UE='N' and KOR='T'";
            _typysp:={? _typysp_il || null() || TYPYSP.ref() ?};
            _typysp_il+=1
         ?};
        _loop:=TYPYSP.next()
      !};
      TYPYSP.cntx_pop();
      {? _typysp_il>1
      ||
         {? _edi.sza<>2
         ||
            _typysp:=null()
         ||
            BEER.SZ:='Z';
            {? ~_verify_only || _typysp:=exec('tsp_fak','typysp',,,,,,,,,_where) ?}
         ?}
      ?};
      FAKS.T:=__N1.TYPYSP:=POM.TYPYSP:=_typysp;
      FAKS.WHERE:={? POM.TYPYSP().ZAL='T' || 'L' || 'Z' ?}
   ?};
   1
||
:: zapis
   {? FAKS.WHERE='L' || 'AI'
   |? FAKS.T().UE='T' || 'ICD'
   || 'VAT'
   ?}
?}


\EAN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: EAN
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
__P.MKODK_KODK:=__XML.VAL;
FAP.M:=exec('find_m','edi_form',__XML.VAL,FAKS.KH);
1


\SupplierItemCode
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: SupplierItemCode
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
__P.MKODK_KTM:=__XML.VAL;
{? FAP.M=null() || FAP.M:=exec('find_m','edi_form','',FAKS.KH,__XML.VAL) ?};
1


\ItemDescription
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: ItemDescription
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
{? FAP.M
|| FAP.NX:=FAP.M().N
|| __P.MKODK_N:=__XML.VAL
?};
1


\kodt_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: Dodaje zapis w kartotece indeksów kontrahenta
::   WE: _a - KH.ref()
::       _b - kod kreskowy
::       _c - kod dostawcy
::       _d - nazwa
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_kh:=_a;
_kodk:=_b;
_ktm:=_c;
_naz:=_d;
{? _a=null() || return() ?};
_continue:=0;
MKODK.index('KH_KK');
MKODK.prefix(_kh,_kodk,);
{? _kodk='' | ~MKODK.first()
||
   MKODK.index('KH_KTM');
   MKODK.prefix(_kh,_ktm,);
   _continue:=~MKODK.first()
::   {? ~MKODK.first()
::   ||
::      MKODK.index('KH_N');
::      MKODK.prefix(_kh,_naz,);
::      _continue:=~MKODK.first()
::   ?}
?};
{? _continue>0
||
   MKODK.blank(1);
   MKODK.KH:=_kh;
   MKODK.KODK:=_kodk;
   MKODK.KTM:=_ktm;
   MKODK.N:=_naz;
   MKODK.add()
?}


\CNWal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Cena netto walutowa po rabacie dla pozycji dokumentu (tabela FAP)
::   WE:
::   WY: cena
::----------------------------------------------------------------------------------------------------------------------
_cn:=0;
_dwal:=FAKS.WAL<>FAKS.NWAL;
_dokl:=FAP.M().DOKL_S;
{? FAKS.SPOBLRAB='W'
||
   _cena:={? _dwal || FAP.CWAL || FAP.CPR ?};
   _cn:=
      {? FAKS.T().FIS='T'
      || _vat:=#((FAP.SV().KOD*'%') + FAP.SV().KOD-1) / 100;
         (_cena/(1+_vat))$_dokl
      || _cena
      ?}
||
   {? ~_dwal
   ||
      _cn:=FAP.CN
   ||
      _cena:=
         {? exec('czyrabp','ceny',FAKS.RAB_TYP)
         || _rabat:=1-exec('rab_proc','ceny',FAP.RAB,FAKS.RAB,FAKS.RAB_TYP)/100;
            (FAP.CWAL*_rabat)$_dokl
         || FAP.CWAL-FAP.RABK-(FAKS.RAB*FAP.CWAL/100)$_dokl
         ?};
      _cn:=
         {? FAKS.T().FIS='T'
         || _vat:=#((FAP.SV().KOD*'%') + FAP.SV().KOD-1) / 100;
            (_cena/(1+_vat))$_dokl
         || _cena
         ?}
   ?}
?};
_cn


\CBWal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Cena brutto walutowa po rabacie dla pozycji dokumentu (tabela FAP)
::   WE:
::   WY: cena
::----------------------------------------------------------------------------------------------------------------------
_cb:=0;
_dwal:=FAKS.WAL<>FAKS.NWAL;
_dokl:=FAP.M().DOKL_S;
{? FAKS.SPOBLRAB='W'
||
   _cena:={? _dwal || FAP.CWAL || FAP.CPR ?};
   _cb:=
      {? FAKS.T().FIS='T'
      || _cena
      || _vat:=#((FAP.SV().KOD*'%') + FAP.SV().KOD-1) / 100;
         (_cena*(1+_vat))$_dokl
      ?}
||
   {? ~_dwal
   ||
      _cb:=FAP.CB
   ||
      _cena:=
         {? exec('czyrabp','ceny',FAKS.RAB_TYP)
         || _rabat:=1-exec('rab_proc','ceny',FAP.RAB,FAKS.RAB,FAKS.RAB_TYP)/100;
            (FAP.CWAL*_rabat)$_dokl
         || FAP.CWAL-FAP.RABK-(FAKS.RAB*FAP.CWAL/100)$_dokl
         ?};
      _cb:=
         {? FAKS.T().FIS='T'
         || _cena
         || _vat:=#((FAP.SV().KOD*'%') + FAP.SV().KOD-1) / 100;
            (_cena*(1+_vat))$_dokl
         ?}
   ?}
?};
_cb


\AllowanceAmount
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: Kwota rabatu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.T().KOR='N'
||
   _cena:={? FAKS.T().FIS='T' || exec('CBWal','edi_fo_ufd') || exec('CNWal','edi_fo_ufd') ?};
   _war_przed:=(FAP.IL*_cena)$2;
   _war_po:={? FAKS.T().FIS='T' || FAP.BWAL || FAP.WWAL ?}
||
   _cena:={? FAKS.T().FIS='T' || exec('CBWal_PoKor','edi_fo_ufd') || exec('CNWal_PoKor','edi_fo_ufd') ?};
   _war_przed:=(FKOR.BIL*_cena)$2;
   _war_po:={? FAKS.T().FIS='T' || FKOR.BBWAL || FKOR.BWWAL ?}
?};
_war_przed-_war_po


\WNVWal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Wartość netto walutowa dokumentu w stawce VAT (tabela FAKSV)
::   WE:
::   WY: wartość
::----------------------------------------------------------------------------------------------------------------------
_wnv:=0;
FAKSV.FAKS;
{? FAKS.WAL=FAKS.NWAL
|| _wnv:=FAKSV.WN
|| _dokl:=ST.DOKL_S;
   _vat:=#((FAKSV.SV().KOD*'%') + FAP.SV().KOD-1) / 100;
   _wnv:=(FAKSV.WW/(1 +_vat))$_dokl
?};
_wnv


\WVVWal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Wartość VAT walutowa dokumentu w stawce VAT (tabela FAKSV)
::   WE:
::   WY: wartość
::----------------------------------------------------------------------------------------------------------------------
_wvv:=0;
FAKSV.FAKS;
{? FAKS.WAL=FAKS.NWAL
|| _wvv:=FAKSV.WV
|| _wnv:=exec('WNVWal','edi_fo_ufd');
   _wvv:=FAKSV.WW-_wnv
?};
_wvv


\CNWal_PoKor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Cena netto walutowa po rabacie dla pozycji dokumentu po korekcie (tabela FAP)
::   WE:
::   WY: cena
::----------------------------------------------------------------------------------------------------------------------
_cn:=0;
_dwal:=FAKS.WAL<>FAKS.NWAL;
_dokl:=FAP.M().DOKL_S;
{? FAKS.SPOBLRAB='W'
||
   _cena:={? _dwal || FKOR.BCWAL || FKOR.BCPR ?};
   _cn:=
      {? FAKS.T().FIS='T'
      || _vat:=#((FAP.SV().KOD*'%') + FAP.SV().KOD-1) / 100;
         (_cena/(1+_vat))$_dokl
      || _cena
      ?}
||
   {? ~_dwal
   ||
      _cn:=FKOR.BCN
   ||
      _cena:=
         {? exec('czyrabp','ceny',FAKS.RAB_TYP)
         || _rabat:=1-exec('rab_proc','ceny',FAP.RAB,FAKS.RAB,FAKS.RAB_TYP)/100;
            FKOR.BCWAL*_rabat $_dokl
         || FKOR.BCWAL-FAP.RABK-(FKOR.BCWAL*FAKS.RAB/100)$_dokl
         ?};
      _cn:=
         {? FAKS.T().FIS='T'
         || _vat:=#((FAP.SV().KOD*'%') + FAP.SV().KOD-1) / 100;
            (_cena/(1+_vat))$_dokl
         || _cena
         ?}
   ?}
?};
_cn


\CBWal_PoKor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Cena brutto walutowa po rabacie dla pozycji dokumentu po korekcie (tabela FAP)
::   WE:
::   WY: cena
::----------------------------------------------------------------------------------------------------------------------
_cb:=0;
_dwal:=FAKS.WAL<>FAKS.NWAL;
_dokl:=FAP.M().DOKL_S;
{? FAKS.SPOBLRAB='W'
||
   _cena:={? _dwal || FKOR.BCWAL || FKOR.BCPR ?};
   _cb:=
      {? FAKS.T().FIS='T'
      || _cena
      || _vat:=#((FAP.SV().KOD*'%') + FAP.SV().KOD-1) / 100;
         (_cena*(1+_vat))$_dokl
      ?}
||
   {? ~_dwal
   ||
      _cb:=FKOR.BCB
   ||
      _cena:=
         {? exec('czyrabp','ceny',FAKS.RAB_TYP)
         || _rabat:=1-exec('rab_proc','ceny',FAP.RAB,FAKS.RAB,FAKS.RAB_TYP)/100;
            FKOR.BCWAL*_rabat $_dokl
         || FKOR.BCWAL-FAP.RABK-(FKOR.BCWAL*FAKS.RAB/100)$_dokl
         ?};
      _cb:=
         {? FAKS.T().FIS='T'
         || _cena
         || _vat:=#((FAP.SV().KOD*'%') + FAP.SV().KOD-1) / 100;
            (_cena*(1+_vat))$_dokl
         ?}
   ?}
?};
_cb


\CNWal_PrzedKor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Cena netto walutowa po rabacie dla pozycji dokumentu po korekcie (tabela FAP)
::   WE:
::   WY: cena
::----------------------------------------------------------------------------------------------------------------------
_cn:=0;
_dwal:=FAKS.WAL<>FAKS.NWAL;
_dokl:=FAP.M().DOKL_S;
{? FAKS.SPOBLRAB='W'
||
   _cena:={? _dwal || FKOR.CWAL || FKOR.CPR ?};
   _cn:=
      {? FAKS.T().FIS='T'
      || _vat:=#((FAP.SV().KOD*'%') + FAP.SV().KOD-1) / 100;
         (_cena/(1+_vat))$_dokl
      || _cena
      ?}
||
   {? ~_dwal
   ||
      _cn:=FKOR.CN
   ||
      _cena:=
         {? exec('czyrabp','ceny',FAKS.RAB_TYP)
         || _rabat:=1-exec('rab_proc','ceny',FKOR.RAB,FKOR.FRAB,FAKS.RAB_TYP)/100;
            FKOR.CWAL*_rabat $_dokl
         || FKOR.CWAL-FKOR.RAB-(FKOR.CWAL*FAKS.FRAB/100)$_dokl
         ?};
      _cn:=
         {? FAKS.T().FIS='T'
         || _vat:=#((FAP.SV().KOD*'%') + FAP.SV().KOD-1) / 100;
            (_cena/(1+_vat))$_dokl
         || _cena
         ?}
   ?}
?};
_cn


\CBWal_PrzedKor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Cena brutto walutowa po rabacie dla pozycji dokumentu po korekcie (tabela FAP)
::   WE:
::   WY: cena
::----------------------------------------------------------------------------------------------------------------------
_cb:=0;
_dwal:=FAKS.WAL<>FAKS.NWAL;
_dokl:=FAP.M().DOKL_S;
{? FAKS.SPOBLRAB='W'
||
   _cena:={? _dwal || FKOR.CWAL || FKOR.CPR ?};
   _cb:=
      {? FAKS.T().FIS='T'
      || _cena
      || _vat:=#((FAP.SV().KOD*'%') + FAP.SV().KOD-1) / 100;
         (_cena*(1+_vat))$_dokl
      ?}
||
   {? ~_dwal
   ||
      _cb:=FKOR.CB
   ||
      _cena:=
         {? exec('czyrabp','ceny',FAKS.RAB_TYP)
         || _rabat:=1-exec('rab_proc','ceny',FKOR.RAB,FKOR.FRAB,FAKS.RAB_TYP)/100;
            FKOR.CWAL*_rabat $_dokl
         || FKOR.CWAL-FKOR.RAB-(FKOR.CWAL*FAKS.FRAB/100)$_dokl
         ?};
      _cb:=
         {? FAKS.T().FIS='T'
         || _cena
         || _vat:=#((FAP.SV().KOD*'%') + FAP.SV().KOD-1) / 100;
            (_cena*(1+_vat))$_dokl
         ?}
   ?}
?};
_cb


\Faks_Wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Zapis przy dokumencie waluty o podanym symbolu i jej kursu
::   WE: [_a] symbol waluty, np. EUR
::       [_b] czy dokument krygujący, domyślnie 0
::   WY: 0 - nie znaleziono waluty, 1 - OK
::----------------------------------------------------------------------------------------------------------------------
_edi:=exec('edi','edi_wspolne');
_context:=_edi.context;
_ocr:={? _context.TYPE=exec('context_type_bl','edi_wspolne') || _context.OCR ?};
_wal:='';
{? var_pres('_a')=type_of('')
|| _wal:=_a
?};
_kor_czy:=0;
{? var_pres('_b')=type_of(0)
|| _kor_czy:=_b
?};
_wyn:=1;
{? _wal<>''
|| _verify:=exec('verify','edi_xml');
   SLU.cntx_psh();
   SLO.cntx_psh();
   SLO.index('SL');
   SLO.prefix(XINFO.SLWAL,_wal);
   {? SLO.first()
   || {? ~_verify & ~_kor_czy
      || {? FAKS.WAL<>SLO.ref()
         || FAKS.WAL:=SLO.ref()
         ?};
         {? FAKS.WAL<>FAKS.NWAL & __S.S_WALU<>0
         || _kurs:=(__S.S_BASE/__S.S_WALU)$4;
            FAKS.KRS:=_kurs;
            FAKS.NKRS:=_kurs;
            FAKS.DTK:=FAKS.DW;
            FAKS.NDTK:=FAKS.DW
         ?}
      |? ~_verify & _kor_czy
      || {? FAKS.WAL<>SLO.ref()
         || exec('add_kom','#message','Inna waluta (%1) niż w dokumentcie korygowanym (%2).'[_wal,FAKS.WAL().KOD],
                 4,FAKS.ID);
            _wyn:=0
         ?}
      ?}
   || {? _verify
      || exec('add_kom','#message','Brak waluty %1.'[_wal],4,FAKS.ID)
      ?};
      _wyn:=0
   ?};
   SLO.cntx_pop();
   SLU.cntx_pop()
?};
:: jeśli dokument z OCR to możliwe braki danych
{? _ocr & _wyn=0 || _wyn:=1 ?};
_wyn


\faks_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: poczatek dokumentu zakupu
::----------------------------------------------------------------------------------------------------------------------
_typysp:=_a;
_id:=_b;
_oddz:=_c;

_result:=1;

_verify:=exec('verify','edi_xml');
_edi:=exec('edi','edi_wspolne');

_context:=_edi.context;
_sza:=_edi.sza;
_ocr:={? _context.TYPE=exec('context_type_bl','edi_wspolne') || _context.OCR ?};

_oddz:=exec('FindInSet','#table','ODDZ','KOD2',_oddz,_oddz,"ODDZ.KOD",1,,'');
{? _oddz=''
||
   _oddz:=exec('get','#params',100362);
   _oddz:=exec('FindInSet','#table','ODDZ','KOD2',_oddz,_oddz,"ODDZ.KOD",1,,'')
?};
{? _oddz=''
||
   ODDZ.cntx_psh();
   ODDZ.index('KOD2');
   ODDZ.prefix();
   {? ODDZ.first() & ~ODDZ.next()
   ||
      _oddz:=ODDZ.KOD;
      {? _verify || exec('add_kom','#message','Wybrano oddział %1'@[_oddz],4,_id) ?}
   ?};
   ODDZ.cntx_pop()
?};

VAR_DEL.delete('__N');
__N:=obj_new(
   'FIRST',
   'DW',
   'FAK_ID','FAK_DW','FAK_KSEF',
   'EP_ID','EP_SID',
   'NETTO','VAT','BRUTTO',
   'VT',
   'EP_CBB',
   'PAYMENT',
   'SELLER',
   'RODZ_FAK');
__N.FIRST:=1;
__N.DW:=date(0,0,0);
__N.FAK_ID:=''; __N.FAK_DW:=date(0,0,0); __N.FAK_KSEF:='';
__N.EP_ID:=''; __N.EP_SID:='';
__N.NETTO:=0; __N.VAT:=0; __N.BRUTTO:=0;
__N.VT:=~~;
__N.EP_CBB:='';
__N.PAYMENT:=tab_tmp(
   ,'MEANS','STRING[2]',''
   ,'TERMS','REAL',''
   ,'DATE','DATE',''
   ,'DESC','STRING[255]',''
   ,'GROSSA','REAL','');
__N.SELLER:=obj_new('RB','VRB');
__N.SELLER.RB:='';
__N.SELLER.VRB:='';

BEER.WYSTFAKS:=null();
POM.TYPYSP:=null();
_kor:=DOKUM.BL_TYPE='INV_CORR';

{? _verify
||
   {? _oddz=''
   ||
      EDI_Z.POMIN:='T';
      exec('add_kom','#message','Należy podać oddział zdefiniowany w systemie.'@,4,_id);
      _result:=0
   ?};
   FAKS.blank(1); FAKS.memo_set(,'UWAGI');
   VAR_DEL.delete('__S');
   __S:=obj_new('S_BASE','S_WALU');
   __S.S_BASE:=0;
   __S.S_WALU:=0;
   VAR_DEL.delete('__N1');
   __N1:=obj_new('DW','ID','TYPYSP','KH','FAK_ID','FAK_DW','FAK_KSEF','TYP0','DTYP0','DFUNC0','CB','KH_ODB');
   __N1.TYPYSP:=null();
   __N1.TYP0:='';
   __N1.DTYP0:='';
   __N1.DFUNC0:='';
   __N1.DW:=date(0,0,0);
   __N1.ID:='';
:: pola dotyczącek korekty
   __N1.KH:=null();
   __N1.KH_ODB:=null();
   __N1.FAK_ID:='';
   __N1.FAK_DW:=date(0,0,0);
   __N1.FAK_KSEF:='';
   __N1.CB:='N';
   FKOR.DF:=date(0,0,0)
||
   _loop:=1;
   {!
   |? _loop
   |!
      {? FAKS.KH=null() || FAKS.KH:=DOKUM.KH ?};
      __N1.KH:=FAKS.KH;
      __N1.KH_ODB:=FAKS.KH_ODB;
      {? __N1.TYPYSP=null() || '' || POM.TYPYSP:=__N1.TYPYSP ?};
      {? _loop=2
            |
         __N1.TYPYSP=null()
            |
         __N1.DW=date(0,0,0) | __N1.ID='' | __N1.KH=null()
            |
         _kor & (__N1.FAK_ID='' | __N1.FAK_DW=date(0,0,0)) & __N1.FAK_KSEF=''
            |
         _kor & exec('faks_znajdz','edi_fo_ufd',__N1.KH,__N1.FAK_ID,__N1.FAK_DW,__N1.FAK_KSEF,__N1.ID,1,1,0)=null()
      ||
         _bl_buf:=obj_new('KOREKTA','ODDZ','TYPYSP','ID','DW','KH','KOR','DF','CB','KH_ODB');
         _bl_buf.KOREKTA:={? _kor || 'T' || 'N' ?};
         _bl_buf.ODDZ:=_oddz;
         _bl_buf.TYPYSP:=__N1.TYPYSP;
         _bl_buf.ID:=__N1.ID;
         _bl_buf.DW:=__N1.DW;
         _bl_buf.KH:=__N1.KH;
         _bl_buf.KH_ODB:=__N1.KH_ODB;
         _bl_buf.KOR:=__N1.FAK_ID;
         _bl_buf.DF:=__N1.FAK_DW;
         _bl_buf.CB:=__N1.CB;
         {? exec('bl_edit','zbl_dok',_bl_buf)
         ||
            _oddz:=_bl_buf.ODDZ;
            __N1.TYPYSP:=POM.TYPYSP:=_bl_buf.TYPYSP;
            __N1.KH:=_bl_buf.KH;
            __N1.KH_ODB:=_bl_buf.KH_ODB;
            __N1.ID:=_bl_buf.ID;
            __N1.DW:=_bl_buf.DW;
            __N1.FAK_ID:=_bl_buf.KOR;
            __N1.FAK_DW:=_bl_buf.DF;
            __N1.CB:=_bl_buf.CB

         |? _edi.sza
         ||
            exec('add_kom','#message','Brak danych wymaganych do automatycznej rejestracji dokumentu.'@,4,_id);
            _result:=0
         ||
            exec('add_kom','#message','Zrezygnowano z rejestracji dokumentu.'@,4,_id);
            _result:=0
         ?};
         obj_del(_bl_buf)
      ?};
      {? _result & _edi.sza & __N1.TYPYSP=null()
      ||
         EDI_Z.POMIN:='T';
         {? var_pres('__N1')>0 & var_pres('TYP0',__N1)=type_of('') & __N1.TYP0<>''
         || exec('add_kom','#message','Brak typu dokumentu - %1.'@[__N1.TYP0],4,_id)
         || exec('add_kom','#message','Brak typu dokumentu %1.'@[_typysp],4,_id)
         ?};
         _result:=0
      ?};
      {? _result
      ||
         POM.TYPYSP:=__N1.TYPYSP; _kor:=POM.TYPYSP().KOR='T';
:: uprawnienia do czynności
         _act:={? _kor=0 || 'LZK_ZAK_DZAK' || 'LZK_ZAK_DKOR' ?};
         _users:=exec('getUsers4Action','#b__box',,_act);
         _buffer:=exec('USERS','buffer');
         OPERATOR.USER();
         _buffer.get().mask(_users);
         {? ~_users.find_rec()
         ||
            exec('add_kom','#message','Brak uprawnień do czynności %1.'@[_act],4,_id);
            _result:=0
         ?};
         obj_del(_buffer);
         obj_del(_users)
      ?};
      {? _result
      ||
         _result:=0;
::
         POM.TAB:='FAKS';
         POM.TYPDOK:=POM.TYPYSP().T;
         POM.NRT:=POM.TYPYDOK().NRT;
         BEER.SZ:='Z';
         HELP.WHERE:={? POM.TYPYSP().ZAL='T' || 'L' || 'Z' ?};
         _dw:=__N1.DW;
::
         __PARSES.setVal('OddzialLogProd',_oddz);
         _args:=__PARSES.args('OkresRok');
         _args.OBSZAR:='LZK';
         _args.AR:=_dw~1;
         _args.AM:=_dw~2;
         __PARSES.setVal('OkresRok',_args);
         {? _kor=0
         ||
:: dokument zakupu
            {? __PARSES.setEnv(_act,,1)
                  &
               ST.ODDZ<>'' & ST.AR & ST.AM & (1+(FAKS.name()+3))=ST.ODDZ & (FAKS.name()+2)=($ST.AR+2)
            ||
               FAKS.clear(); FAKS.blank(); FAKS.memo_set(,'UWAGI');
               {? exec('add','faktury_nag',POM.TYPYSP,,,null,,,,,,,_dw,'N')
               ||
                  exec('polafaks_get','jpk_log',FAKS.ref(),FAKS);
                  FAKS.KH:=__N1.KH;
                  FAKS.KH_ODB:=__N1.KH_ODB;
                  FAKS.SP_WYM:='N';
                  FAKS.CB:=__N1.CB;
                  BEER.WYSTFAKS:=FAKS.ref();
                  _result:=1
               ?}
            ||
               exec('add_kom','#message','Nie powiodło się ustawienie parametrów pracy dla czynności %1.'@[_act],4,_id)
            ?}
         ||
:: korekta zakupu
            {? __PARSES.setEnv(_act,,1)
                  &
               ST.ODDZ<>'' & ST.AR & ST.AM & (1+(FAKS.name()+3))=ST.ODDZ & (FAKS.name()+2)=($ST.AR+2)
            ||
               FAKS.clear(); FAKS.blank(); FAKS.memo_set(,'UWAGI');
               _result:=exec('bl_faks_zk','edi_fo_ufd',POM.TYPYSP,__N1.KH,__N1.FAK_ID,__N1.FAK_DW,__N1.DW,__N1.ID,
                   __N1.FAK_KSEF,__N1.KH_ODB,0);
               {? _result=0 & _kor & _sza=2 & _ocr
               ||
                  EDI_Z.POMIN:='N';
                  FAKS.KH:=__N1.KH;
                  FAKS.KH_ODB:=__N1.KH_ODB;
                  _result:=2
               ?}
            ||
               exec('add_kom','#message','Nie powiodło się ustawienie parametrów pracy dla czynności %1.'@[_act],4,_id)
            ?}
         ?}
      ?};
      _loop:={? _result=1 || 0 |? _result=2 || 2 || 0 ?}
   !};
   {? _result
   ||
      FAKS.memo_set('','UWAGI');
      FAKS.D:=date(0,0,0);
      FAKS.DO:=date(0,0,0)
   ?}
?};
{? _result || _result:=exec('faks_start','edi_fo_ksef2',_a,_b,_c) ?};
_result


\faks_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: sprawdzenie czy
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_edi:=exec('edi','edi_wspolne');
_context:=_edi.context;
_ocr:={? _context.TYPE=exec('context_type_bl','edi_wspolne') || _context.OCR ?};
_dokum:={? _context.TYPE=exec('context_type_bl','edi_wspolne') || _context.DOKUM || null() ?};
_result:=1;
_verify:=exec('verify','edi_xml');
_kor:=POM.TYPYSP().KOR='T';
_dw:=exec('FindAndGet','#table',DOKUM,_dokum,,"KSEFSDAT",date(0,0,0));
{? _dw=date(0,0,0) || _dw:=exec('FindAndGet','#table',DOKUM,_dokum,,"KSEFCDAT",date(0,0,0)) ?};
_type_bl:=_context.TYPE=exec('context_type_bl','edi_wspolne');
{? _verify=1
||
   {? _type_bl
   ||
      exec('FindAndGet','#table',DOKUM,_context.DOKUM,,"{? @.DOKUM.KH=null() || @.DOKUM.KH:=FAKS.KH; @.DOKUM.put() ?}")
   ?};
   {? _ocr & FAKS.ID=''
   ||
      ~~

   |? _kor=0
   ||
      {? _type_bl
      || _nrksef:=exec('FindAndGet','#table',DOKUM,_context.DOKUM,,"@.DOKUM.NRKSEF",'')
      || _nrksef:=''
      ?};
      {? _nrksef=''
      || _Chk:=sql('
            select SYM
            from @FAKS
            where FAKS.KH=:_a and FAKS.ID=\':_b\' and FAKS.SZ=\'Z\'
         '
         ,FAKS.KH,FAKS.ID)
      || _Chk:=sql('
            select SYM
            from @FAKS
            where FAKS.KH=:_a and FAKS.ID=\':_b\' and FAKS.SZ=\'Z\' and FAKS.NRKSEF=\':_c\'
         '
         ,FAKS.KH,FAKS.ID,_nrksef)
      ?};
      {? _Chk.first()
      ||
         EDI_Z.SYM:=_Chk.SYM;
         {? _nrksef=''
         || exec('add_kom','#message','Dokument %1 (%2) jest już w systemie'@[FAKS.ID,EDI_Z.SYM],2,FAKS.ID)
         || exec('add_kom','#message','Dokument %1 (%2, %3) jest już w systemie'@[FAKS.ID,EDI_Z.SYM,_nrksef],2,FAKS.ID)
         ?};
         EDI_Z.SYM:='';
         EDI_Z.POMIN:='T';
         _result:=0
      ?};
      __N1.DW:={? _dw=date(0,0,0) || __N.DW || _dw ?};
      __N1.ID:=FAKS.ID
   ||
      __N1.DW:={? _dw=date(0,0,0) || __N.DW || _dw ?};
      __N1.ID:=FAKS.ID;
      __N1.KH:=FAKS.KH;
      __N1.KH_ODB:=FAKS.KH_ODB;
      __N1.FAK_ID:=__N.FAK_ID;
      __N1.FAK_DW:=__N.FAK_DW;
      __N1.FAK_KSEF:=__N.FAK_KSEF;
      _result:=1
   ?};
   ~~
||
   {? _kor=0
   ||
      exec('add_faks_z','edi_form')
   ||
      exec('add_faks_zk','edi_form')
   ?};
   FAKSPOLA.put();
   {? EDI_Z.POMIN='N'
   ||
      FAKS.memo_put(,'UWAGI');
::    jeśli nie podano daty sprzedaży to ustawiamy na datę wystawienia
      {? _type_bl || FAKS.D:=exec('data_sprz','edi_fo_ksef2') ?};
      {? FAKS.D=date(0,0,0) & FAKS.DW<>date(0,0,0)
      || FAKS.D:=FAKS.DW;
         _msg:='Zmieniono pustą datę sprzedaży na datę wystawienia.'@;
         exec('add_kom','#message',_msg,2,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      ?};
::    jeśli nie podano daty otrzymania to ustawiamy na datę bieżącą (wczytania dakumentu)
      {? _type_bl & FAKS.DO=date(0,0,0) || FAKS.DO:=FAKS.D ?};
      {? FAKS.DO=date(0,0,0)
      || _msg:='Zmieniono pustą datę otrzymania na datę bieżącą.'@;
         exec('add_kom','#message',_msg,2,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?});
         FAKS.DO:=date()
      ?};
      FAKS.ID:=__N1.ID;
      {? FAKS.put()
      ||
         EDI_Z.DOK:=$FAKS.ref(); EDI_Z.SYM:=FAKS.SYM; EDI_Z.KH:=FAKS.KH;
         _result:=1
      ?}
   ||
      _result:=0
   ?}
?};
_result


\faks_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: koniec dokumentu zakupu
::----------------------------------------------------------------------------------------------------------------------
_result:=1;

{? exec('faks_end','edi_fo_ksef2')=0 || return(0) ?};

_verify:=exec('verify','edi_xml');
{? ~_verify
|| _ar:=FAKS.DW~1;
   _am:=FAKS.DW~2;
   {? EDI_Z.POMIN='N' & ~exec('czy_z_ok','okresy',-3,0,_ar,_am)
   ||
:: kontrola zamkniętego okresu
      _okr:=form(date(_ar,_am,0),,8);
      exec('add_kom','#message','Okres %1 aktualnie jest zamknięty brak możliwości rejestracji dokumentu.'@[_okr]
       ,2,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?});
      EDI_Z.POMIN:='T';
      _result:=0
   ?}
?};

{? ~_result
||
   exec('usun_fak','faktury_nag',0,,0)

|? _verify
||
   ~~

|? EDI_Z.POMIN='N'
||
   _edi:=exec('edi','edi_wspolne');
   _context:=_edi.context;
   _type_bl:=_context.TYPE=exec('context_type_bl','edi_wspolne');
   {? FAKS.WHERE='L'
   ||
:: zaliczka i zaliczka do zaliczki
      _oddz:=FAKS.ODDZ;
      _zal_pierwotna:=null();
      _Zal:=__EB.ZAL;
      {? _Zal.first()
      ||
         FAKS.cntx_psh();
         _Faks_names:=FAKS.names();
         _loop:=_Faks_names.first();
         {!
         |? _loop
         |!
            FAKS.use(_Faks_names.NAME);
            FAKS.cntx_psh();
            FAKS.prefix();
            {? FAKS.find_tab(,'ODDZ',,'=',_oddz,'ID',,'=',_Zal.SYM) || _zal_pierwotna:=FAKS.ref() ?};
            FAKS.cntx_pop();
            _loop:=_zal_pierwotna=null() & _Faks_names.next()
         !};
         FAKS.cntx_pop()
      ?};
      _kw_zal:=0;
:: DRO_TODO_AWI: (bl):   : -  Dodać kontrolę akceptacji pierwotnej zaliczki
      FAKSV.cntx_psh();
      FAKSV.index('FF_SV');
      FAKSV.prefix('',$FAKS.ref());
      _loop:=FAKSV.first();
      {!
      |? _loop
      |!
         _kw_zal+=FAKSV.WW_Z;
         {? FAKSV.R || FAKSV.R:=2; FAKSV.put() ?};
         _loop:=FAKSV.next()
      !};
      FAKSV.cntx_pop();
      FAKS.KW_ZAL:=_kw_zal;
      FAKS.put();
      {? FAKS.T().KOR='T'
      ||
         exec('fp_addk','faktury_zalicz')
      ||
         exec('fp_add','faktury_zalicz',FAKS.ref(),,_zal_pierwotna)
      ?}
   ||
::    naliczenie wartości dokumentu w podziale na stawki vat wg pozycji dokumentu, w dokumencie rozliczającym zaliczki
      _Zal:=__EB.ZAL;
      {? _Zal.first()
      ||
         _War_poz:=exec('war_dok_w_sv_wg_poz','edi_fo_ufd',FAKS.ref());
         FAKSV.index('FF_SV');
         FAKSV.prefix('',$FAKS.ref());
         _loop:=FAKSV.first();
         {!
         |? _loop
         |!
            {? FAKSV.R
            ||
               _War_poz.blank(0);
               _War_poz.find_key(FAKSV.SV().KOD,);
               FAKSV.WN_R:=FAKSV.WN;
               FAKSV.WV_R:=FAKSV.WV;
               FAKSV.WB_R:=FAKSV.WB;
               {? FAKS.WAL=FAKS.NWAL
               ||
                  FAKSV.WWN_R:=FAKSV.WN_R;
                  FAKSV.WWV_R:=FAKSV.WV_R;
                  FAKSV.WW_R:=FAKSV.WWN_R+FAKSV.WWV_R
               ||
                  FAKSV.WWN_R:=FAKSV.WWN;
                  FAKSV.WWV_R:=FAKSV.WWV;
                  FAKSV.WW_R:=FAKSV.WWN_R+FAKSV.WWV_R
               ?};
               {? FAKSV.WN<0 || FAKSV.WN:=FAKSV.WV:=FAKSV.WB:=FAKSV.WW:=FAKSV.WWN:=FAKSV.WWV:=0 ?};
               FAKSV.R:=4;
               FAKSV.put()
            ?};
            _loop:=FAKSV.next()
         !}
      ?}
   ?};
:: rachunek bankowy
   SKID_RBK.cntx_psh();
   SKID_RBK.index('AKTYWNY'); SKID_RBK.prefix(null(),'KH',#exec('kh2rbk','faktury_wspolne'),'T');
   {? SKID_RBK.find_key(__N.SELLER.RB,) | SKID_RBK.find_key(2-__N.SELLER.RB,)
   ||
      FAKS.SKID_RBK:=SKID_RBK.ref();
      FAKS.NB:=SKID_RBK.BANK().NB;
      FAKS.RBK:=SKID_RBK.N;
      FAKS.put()
   ?};
   SKID_RBK.cntx_pop();
:: rachunek bankowy - vat
   SKID_RBK.cntx_psh();
   SKID_RBK.index('AKTYWNY'); SKID_RBK.prefix(null(),'KH',#exec('kh2rbk','faktury_wspolne'),'T');
   {? SKID_RBK.find_key(__N.SELLER.VRB,) | SKID_RBK.find_key(2-__N.SELLER.VRB,)
   ||
      FAKS.VSKIDRBK:=SKID_RBK.ref();
      FAKS.VNB:=SKID_RBK.BANK().NB;
      FAKS.VRBK:=SKID_RBK.N;
      FAKS.put()
   ?};
   SKID_RBK.cntx_pop();
:: aktualizacja wartości dokumentu
   exec('sumfak','faktury_wspolne',,,1);
:: aktualizacja płatności
   exec('plat_przel','faktury_plat',FAKS.ref());
   _msg:='Dodano dokument %1.'@[FAKS.SYM];
   exec('add_kom','#message',_msg,1,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?});
   exec('polafaks_get','jpk_log',FAKS.ref());
   exec('polafaks_update','jpk_log',1);
   {? _type_bl & FAKS.NRKSEF='' || FAKS.NRKSEF:=exec('FindAndGet','#table',DOKUM,_context.DOKUM,,"@.DOKUM.NRKSEF",'') ?};
   exec('check','faktury_nag',1);
   FAKS.put(1);
:: dane do zapisu w dzienniku
   EDI_Z.SYM:=FAKS.SYM;
   EDI_Z.KH:=FAKS.KH;
   VAR_DEL.delete('__S');
   VAR_DEL.delete('__N1')
?};
{? ~_verify
|| VAR_DEL.delete('__N1')
?};
_result


\faksv_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: wartość w stawkach - start
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
VAR_DEL.delete('__V');
__V:=obj_new(
   'PREV_RWN','PREV_RWV','PREV_WN','PREV_WV',
   'PREV_WAL_WN','PREV_WAL_WV',
   'RWN','RWV','WN','WV',
   'WAL','WAL_WN','WAL_WV',
   'SV_ID','SV_P','SV_TSID'
);
__V.PREV_RWN:=__V.PREV_RWV:=__V.PREV_WN:=__V.PREV_WV:=0;
__V.PREV_WAL_WN:=__V.PREV_WAL_WV:=0;
__V.RWN:=0; __V.RWV:=0; __V.WN:=0; __V.WV:=0;
__V.WAL:=''; __V.WAL_WN:=0; __V.WAL_WV:=0;
__V.SV_ID:=''; __V.SV_P:='bd'; __V.SV_TSID:='';

{? _verify
||
   ~~
||
   FAKSV.index('FAKS_SV');
   FAKSV.prefix()
?};
FAKSV.blank();
:: włączenie kontroli zgodności wartości dokumentu w stawkach z wartościami pozycji dokumentu
:: dla dokumentów niewalutowych
FAKSV.R:=1;
1


\faksv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Zwraca wartość dokumentu _a w stawce _b
::   WE: _a - $FAKS.ref - faktura
::       _b - kod stawki vat
::       [_c] - zmienna nazwana z wartościami dokumentu w stawce
::   WY: zmienna nazwana z wartościami dokumentu w stawce
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_sv:=_b;
{? _=3
|| _faksv:=_c
|| _faksv:=obj_new('WN_Z','WV_Z','WWN_Z','WWV_Z','WN','WV','WWN','WWV');
   _faksv.WN_Z:=_faksv.WV_Z:=_faksv.WWN_Z:=_faksv.WWV_Z:=_faksv.WN:=_faksv.WV:=_faksv.WWN:=_faksv.WWV:=0
?};
FAPOW.cntx_psh();
FAPOW.index('END_K');
FAPOW.prefix(_ref,'N');
_roz:=FAPOW.first();
FAPOW.cntx_pop();
FAKSV.cntx_psh();
FAKSV.use(gsub(FAKSV.name(1),'???',5-_ref-8));
FAKSV.cntx_psh();
FAKSV.index('FF_SV');
FAKSV.prefix('',_ref,_sv);
{? FAKSV.first()
||
   _faksv.WN_Z+=FAKSV.WN_Z;
   _faksv.WV_Z+=FAKSV.WV_Z;
   _faksv.WWN_Z+=FAKSV.WWN_Z;
   _faksv.WWV_Z+=FAKSV.WWV_Z;
   _faksv.WN+={? _roz || FAKSV.WN_R || FAKSV.WN ?};
   _faksv.WV+={? _roz || FAKSV.WV_R || FAKSV.WV ?};
   _faksv.WWN+={? _roz || FAKSV.WWN_R || FAKSV.WWN ?};
   _faksv.WWV+={? _roz || FAKSV.WWV_R || FAKSV.WWV ?}
?};
FAKSV.cntx_pop();
FAKSV.cntx_pop();
_refk:=exec('FindAndGet','#table',FAKS,_ref,,"FAKS.LKSQL",'');
{? _refk<>'' & _refk<>_ref || exec('faksv','edi_fo_ufd',_refk,_sv,_faksv) ?};
_faksv


\faksv_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: wartość w stawkach - koniec
::   WE: _a - 0/1 - sprawdzaj wartości przed korektą
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_chk_val_bcorr:={? var_pres('_a')=type_of(0) || _a || 1 ?};
_edi:=exec('edi','edi_wspolne');
_context:=_edi.context;
_ocr:={? _context.TYPE=exec('context_type_bl','edi_wspolne') || _context.OCR ?};
_result:=1;
_verify:=exec('verify','edi_xml');
_kor:=POM.TYPYSP().KOR='T';
_wal:=FAKS.WAL<>FAKS.NWAL;
_zal:=FAKS.WHERE='L';
{? _verify
||
::      _nwal:=exec('bl_nwal','ustawienia');
   FAKSV.SV:=exec('ufd2sv','edi_fo_ufd',__V.SV_ID,__V.SV_P,__V.SV_TSID);
   FAKSV.WAL:=exec('wal','edi_fo01',__V.WAL);
   {? FAKSV.SV=null()
   ||
      _msg:='Brak stawki vat (%1,%2,%3) w systemie.'@[__V.SV_ID,__V.SV_P,__V.SV_TSID];
      exec('add_kom','#message',_msg,2,__XML.ID);
      {? FAKS.ID<>'' | FAKS.SYM<>'' || exec('add_kom','#message',_msg,2,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?}) ?};
:: jeśli dokument z OCR to możliwe braki danych
      _result:={? _ocr || -1 || 0 ?}

   |? FAKSV.WAL=null()
   ||
      _msg:='Brak waluty %1 w systemie.'@[__V.WAL];
      exec('add_kom','#message',_msg,2,__XML.ID);
      exec('add_kom','#message',_msg,2,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?});
:: jeśli dokument z OCR to możliwe braki danych
      _result:={? _ocr || -1 || 0 ?}

::      |? FAKS.WAL<>_nwal
::      ||
::         _dok_w:=FAKSV.WAL().KOD;
::         FAKSV.WAL==_nwal;
::         _oddz_w:=FAKSV.WAL().KOD;
::         FAKSV.WAL==_nwal;
::         exec('add_kom','#message','Waluta opodatkowania dokumentu (%1)'
::            ' jest niezgodna z walutą opodatkowania oddziału (%2)'[_dok_w,_oddz_w],2,__XML.ID);
::         _result:=0
   |? __V.SV_ID<>'AE'
   || _stvat:=#((FAKSV.SV().KOD*'%')+FAKSV.SV().KOD-1);
      {? _stvat>0 & __V.WV=0
      || _msg:='Brak wartości VAT dla stawki VAT (%1,%2,%3).'@[__V.SV_ID,__V.SV_P,__V.SV_TSID];
         exec('add_kom','#message',_msg,2,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      ?};
      {? __V.WN=0
      || _msg:='Brak wartości netto dla stawki VAT (%1,%2,%3).'@[__V.SV_ID,__V.SV_P,__V.SV_TSID];
         exec('add_kom','#message',_msg,2,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      ?}
   ?};
   {? _chk_val_bcorr & _result>0 & _kor & BEER.WYSTFAKS
   ||
      _faksv:=exec('faksv','edi_fo_ufd',$BEER.WYSTFAKS,FAKSV.SV().KOD);
      _wn_read:=__V.PREV_RWN;
      _wv_read:=__V.PREV_RWV;
      {?
         {? _zal
         ||
:: fabs bo wartości przed korektą magą przychodzić ujemne tak jak w KSeF lub dodatnie gdy UFD generowany w ERP
            _faksv.WN_Z<>{? _wn_read || fabs(__V.PREV_WN) || 0 ?}
               |
            _faksv.WV_Z<>{? _wv_read || fabs(__V.PREV_WV) || 0 ?}
               |
            {? FAKS.WAL=FAKS.NWAL
            ||
               0
            ||
               _faksv.WWN_Z<>fabs(__V.PREV_WAL_WN)
                  |
               _faksv.WWV_Z<>fabs(__V.PREV_WAL_WV)
            ?}
         ||
            _faksv.WN<>{? _wn_read || fabs(__V.PREV_WN) || 0 ?}
               |
            _faksv.WV<>{? _wv_read || fabs(__V.PREV_WV) || 0 ?}
               |
            {? FAKS.WAL=FAKS.NWAL
            ||
               0
            ||
               _faksv.WWN<>fabs(__V.PREV_WAL_WN)
                  |
               _faksv.WWV<>fabs(__V.PREV_WAL_WV)
            ?}
         ?}
      ||
         _msg:='Niezgodna wartość przed korektą w stawce VAT (%1).'@[FAKSV.SV().KOD];
         exec('add_kom','#message',_msg,2,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
::         _result:=0
      ?}
   ?}
||
   _sv:=exec('ufd2sv','edi_fo_ufd',__V.SV_ID,__V.SV_P,__V.SV_TSID);
   {? _sv=null()
   ||
:: jeśli dokument z OCR to możliwe braki danych
      {? ~_ocr || _result=0 ?}
   ||
      {? __V.SV_ID='AE' || FAKSV.R:=0 ?};
      FAKSV.FAKS:=$BEER.WYSTFAKS;
      FAKSV.SV:=_sv;
      _wn_read:=__V.RWN;
      _wv_read:=__V.RWV;
      {? _zal
      ||
         FAKSV.WN_Z:={? _wn_read || __V.WN || 0 ?};
         FAKSV.WV_Z:={? _wv_read || __V.WV || 0 ?};
         FAKSV.WB_Z:={? _wn_read & _wv_read || FAKSV.WN_Z+FAKSV.WV_Z |? _wn_read || FAKSV.WN_Z || 0 ?};
         {? FAKS.WAL=FAKS.NWAL
         ||
            FAKSV.WWN_Z:=FAKSV.WN_Z;
            FAKSV.WWV_Z:=FAKSV.WV_Z;
            FAKSV.WW_Z:=FAKSV.WB_Z
         ||
            FAKSV.WWN_Z:=__V.WAL_WN;
            FAKSV.WWV_Z:=__V.WAL_WV;
            FAKSV.WW_Z:=__V.WAL_WN+__V.WAL_WV
         ?}
      ||
         FAKSV.WN:={? _wn_read || __V.WN || 0 ?};
         FAKSV.WV:={? _wv_read || __V.WV || 0 ?};
         FAKSV.WB:={? _wn_read & _wv_read || FAKSV.WN+FAKSV.WV |? _wn_read || FAKSV.WN || 0 ?};
         {? FAKS.WAL=FAKS.NWAL
         ||
            FAKSV.WWN:=FAKSV.WN;
            FAKSV.WWV:=FAKSV.WV;
            FAKSV.WW:=FAKSV.WB
         ||
            FAKSV.WWN:=__V.WAL_WN;
            FAKSV.WWV:=__V.WAL_WV;
            FAKSV.WW:=__V.WAL_WN+__V.WAL_WV
         ?}
      ?};
      _result:=FAKSV.add()
   ?}
?};
_result


\fap_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: pozycja dokumentu zakupu - start
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_verify:=exec('verify','edi_xml');
_kor:=POM.TYPYSP().KOR='T';
VAR_DEL.delete('__P','__FKOR');
__P:=obj_new(
   'SV_ID','SV_P','SV_TSID',
   'PRICEA','GPRICE',
   'MAPINFO',
   'JM',
   'MKODK','MKODK_KODK','MKODK_KTM','MKODK_N',
   'WN','WV','WB',
   'KRS',
   'PREV_WWAL','PREV_BWAL',
   'MEMO_PUT');
__P.SV_ID:=''; __P.SV_P:='bd'; __P.SV_TSID:='';
__P.PRICEA:=__P.GPRICE:=0;
__P.MAPINFO:='N';
__P.JM:='';
__P.MKODK:=null(); __P.MKODK_KODK:=''; __P.MKODK_KTM:=''; __P.MKODK_N:='';
__P.WN:=__P.WV:=__P.WB:=0;
__P.KRS:=0;
__P.PREV_WWAL:=__P.PREV_BWAL:=0;
__P.MEMO_PUT:=0;
_first:=__N.FIRST; __N.FIRST:=0;
__FKOR:=obj_new('WWAL','BWAL');
__FKOR.WWAL:=__FKOR.BWAL:=0;

FIND_M:='';
{? _first=1 & exec('faks_update','edi_fo_ufd')=0
||
   _result:=0

|? EDI_Z.POMIN='T'
||
   _result:=0
||
   {? _kor=0
   ||
      FAP.prefix();
      ATR.MJS:='FAP';
      TAZ.RAB_TYP:=FAKS.RAB_TYP;
      BEER.MW:='K';
      exec('ustaw_ww','eurusd',BEER.MW); BEER.LW:={? BEER.WW || 'W' || '' ?};
      exec('ustafprz','faktury_wspolne');
      BEER.TAB:='FAP';
      FAP.blank();
      FAP.POZ:=-1;
      FAP.WAL:={? FAKS.WAL<>null || FAKS.WAL || INFO.NAROD ?};
      FAP.WAL_H:=FAP.WAL;
      exec('istatr_faks2fap','faktury_nag')
   ||
      ~~
   ?};
   {? _verify=1
   ||
      {? _kor=0
      ||
         ~~
      ||
         xx_ref:=null();
         _result:=exec('bl_faks_zk','edi_fo_ufd',POM.TYPYSP,__N1.KH,__N1.FAK_ID,__N1.FAK_DW,__N1.DW,__N1.ID,
            __N1.FAK_KSEF,__N1.KH_ODB,1);
         {? _result
         ||
            BEER.WYSTFAKS:={? xx_ref || exec('FindAndGet','#table',FAKS,xx_ref,,,null()) || BEER.WYSTFAKS ?}
         ?}
      ?}
   ||
      {? _kor=0
      ||
         _result:=FAP.add()
      ||
         FAP.index('FAP');
::       w BEER.WYSTFAKS jest ref dodawanej korekty
         FAP.prefix(BEER.WYSTFAKS);
         ~~
      ?}
   ?}
?};
_result


\kor_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: pozycja korekty zakupu - start
::   WE: _a - pozycja
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_verify:=exec('verify','edi_xml');
{? BEER.WYSTFAKS<>null() & FAKS.name()<>ref_name(BEER.WYSTFAKS)
|| FAKS.use(ref_name(BEER.WYSTFAKS));
   FAP.use('fakpo'+(5-FAKS.name()))
?};
FAP.index('FAP');
:: w BEER.WYSTFAKS jest ref faktury korygowanej lub ostatniej korekty
FAP.prefix(BEER.WYSTFAKS);
{? BEER.WYSTFAKS=null() | ~FAP.find_key(_a)
||
   EDI_Z.POMIN:='P';
   {? ~_verify & BEER.WYSTFAKS<>null()
   ||
      exec('add_kom','#message','Pozycja %1: brak pozycji przed korektą. Pozycję należy dodać ręcznie.'[$_a],2,
         __XML.ID);
      exec('add_kom','#message','Pozycja %1: brak pozycji przed korektą. Pozycję należy dodać ręcznie.'[$_a],2,
           {? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
   ?}
|? ~_verify
||
   exec('wysw_kor','faktury_poz');
   FAP.CWAL:=FAP.CWAL+FKOR.CWAL;
   FAP.CPR:=FAP.CPR+FKOR.CPR;
   FAP.CN:=FAP.CN+FKOR.CN;
   FAP.CB:=FAP.CB+FKOR.CB;

   {? FAP.POZP=0
   ||
      FAP.IL:=FAP.IL+FKOR.IL;
      FAP.IL2:=FAP.IL2+FKOR.IL2;
      FAP.WS2:=FAP.WS2+FKOR.WS2;

::    narodowa
      FAP.WN:=FAP.WN+FKOR.WN;
      FAP.WV:=FAP.WV+FKOR.WV;
      FAP.WB:=FAP.WB+FKOR.WB;

::    handlowa
      FAP.WWAL:=FAP.WWAL+FKOR.WWAL;
      FAP.VWAL:=FAP.VWAL+FKOR.VWAL;
      FAP.BWAL:=FAP.BWAL+FKOR.BWAL;

::    opodatkowania
      FAP.WWAL_P:=FAP.WWAL_P+FKOR.WWAL_P;
      FAP.VWAL_P:=FAP.VWAL_P+FKOR.VWAL_P;
      FAP.BWAL_P:=FAP.BWAL_P+FKOR.BWAL_P;

::    intrastat
      FAP.MASAN:=FAP.MASAN+FKOR.PMASAN;
      FAP.ILUJM:=FAP.ILUJM+FKOR.PILUJM;
      FAP.WF:=FAP.WF+FKOR.PWF;
      FAP.WS:=FAP.WS+FKOR.PWS
   ?};
   __FKOR.WWAL:=FAP.WWAL;
   __FKOR.BWAL:=FAP.BWAL
?};
_result


\fap_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: pozycja dokumentu zakupu - koniec
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_verify:=exec('verify','edi_xml');
_edi:=exec('edi','edi_wspolne');
_context:=_edi.context;
_ocr:={? _context.TYPE=exec('context_type_bl','edi_wspolne') || _context.OCR ?};
_Map:={? _context.TYPE=exec('context_type_bl','edi_wspolne') || _context.MAP || ~~ ?};
_kor:=POM.TYPYSP().KOR='T';
:: ustalenie zakresu przetwarzanych indeksów - wykorzystywane w opcji Mapowanie indeksów
{? _verify=1
||
   {? type_of(_Map)<>type_of(~~) & __P.MKODK_KTM<>''
   ||
      _Map.KTM:=__P.MKODK_KTM;
      _Map.add()
   ?}
?};
:: pominięcie dalszego przetwarzania jeśli EDI_Z.POMIN='T'
{? EDI_Z.POMIN='T' || return(1) ?};
:: jednostki miary
FAP.JM:=FAP.M().J;
FAP.J2:=FAP.JM;
FAP.IL2:=FAP.IL;
FAP.WS2:=exec('FindAndGet','#table',MKODK,__P.MKODK,,"MKODK.IL",0);
{? FAP.WS2 || FAP.IL2:=(FAP.IL/FAP.WS2)$FAP.M().DOKL_Z ?};
{? _verify=1
||
   {? _kor=0
   ||
      {? FAP.M=null()
      ||
         {? ~_kor & _context.TYPE=exec('context_type_bl','edi_wspolne') & FAKS.KH
         ||
            {? __P.MKODK_KODK='' & __P.MKODK_KTM='' & __P.MKODK_N=''
            ||
               _msg:='Pozycja %1: brak danych identyfikujących indeks.'@[$FAP.POZ]
            ||
               {? FAKS.KH & DOKUM.KH=null() | FAKS.KH=DOKUM.KH
               ||
                  exec('kodt_add','edi_fo_ufd',FAKS.KH,__P.MKODK_KODK,__P.MKODK_KTM,__P.MKODK_N);
                  _msg:='Pozycja %1: wymagane mapowanie indeksu (%2; %3; %4).'@[$FAP.POZ,__P.MKODK_KODK,__P.MKODK_KTM,
                     __P.MKODK_N]
               ||
                  _msg:='Pozycja %1: wymagane mapowanie indeksu jest niedostępne z powodu niezgodności kontrahenta (%2;%3).'@[
                     $FAP.POZ,DOKUM.KH().SNIP,FAKS.KH().SNIP]
               ?};
               _result:=0
            ?}
         ||
            {? var_pres('FIND_M')=type_of('')
            || {? FIND_M=''
               || _msg:='Pozycja %1: nie wypełniono materiału (nie podano kodu).'[$FAP.POZ]
               || _msg:='Pozycja %1: nie wypełniono materiału (nieznany kod: %2).'[$FAP.POZ,FIND_M]
               ?}
            || _msg:='Pozycja %1: nie wypełniono materiału.'[$FAP.POZ]
            ?}
         ?};
:: jeśli dokument z OCR to możliwe braki danych
         _result:={? _ocr  || {? _verify || -1 || -2 ?} || 0 ?};
         {? FAKS.ID<>'' | FAKS.SYM<>''
         || exec('add_kom','#message',_msg,2,'%1 (%2)'[__XML.ID,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?}])
         || exec('add_kom','#message',_msg,2,__XML.ID)
         ?}
      ||
         {? __P.MAPINFO='T'
         ||
            _jm:=exec('ufd2jm','edi_fo_ufd',__P.JM);
            _jmm:=FAP.M().J().KOD
         ||
            _jm_kh:=exec('FindAndGet','#table',MKODK,__P.MKODK,,"MKODK.JMK().KOD",'');
            _jm:=exec('ufd2jm','edi_fo_ufd',__P.JM);
            {? _jm_kh<>'' & _jm_kh<>_jm
            ||
               _msg:='Pozycja %1: jednostka (%2) niezgodna z jednostką kontrahenta (%3).'[$FAP.POZ,_jm,_jm_kh];
               exec('add_kom','#message',_msg,2,__XML.ID)
            ||
               _jm:=exec('ufd2jm','edi_fo_ufd',__P.JM);
               _jmm:=FAP.M().J().KOD
            ?}
         ?};
         {? _jm<>'' & _jmm<>_jm
         ||
            _msg:='Pozycja %1: jednostka (%2) niezgodna z jednostką materiału (%3).'[$FAP.POZ,_jm,_jmm];
            exec('add_kom','#message',_msg,2,__XML.ID);
            exec('add_kom','#message',_msg,2,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
         ?};
         {? __P.GPRICE || __N1.CB:='T' ?}
      ?}
   ?};
   {? FAP.M & FAP.SP_WYM='T' & FAP.M().SP_WYM<>'T'
   ||
      _msg:='Pozycja %1: niezgodność w zakresie Wymagany split payment (dokument ''%2''<>''%3'' indeks %4).'[
         $FAP.POZ,FAP.SP_WYM,FAP.M().SP_WYM,M.KTM];
      exec('add_kom','#message',_msg,2,__XML.ID);
      exec('add_kom','#message',_msg,2,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
   ?}
:: DRO_TODO_AWI: kontrola dokładności ilości
:: DRO_TODO_AWI: kontrola dokładności ceny

|? EDI_Z.POMIN='P'
||
:: nieznana pozycja korekty - nie przetwarzamy takich pozycji - należy je dodać ręcznie po odczycie dokumentu
   EDI_Z.POMIN:='N'

|? EDI_Z.POMIN='N'
||
   _wal:=FAKS.WAL<>exec('bl_wal','ustawienia');
   {? BEER.WYSTFAKS & _kor
   ||
      {? type_of(__P.PREV_WWAL)=type_of(0) & __FKOR.WWAL<>fabs(__P.PREV_WWAL) |
         type_of(__P.PREV_BWAL)=type_of(0) & __FKOR.BWAL<>fabs(__P.PREV_BWAL)
      ||
         _msg:='Pozycja %1: UWAGA - niezgodna wartość przed korektą'[$FAP.POZ];
         {? FAKS.ID<>'' | FAKS.SYM<>''
         || exec('add_kom','#message',_msg,2,'%1 (%2)'[__XML.ID,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?}])
         || exec('add_kom','#message',_msg,2,__XML.ID)
         ?}
      ?}
   ?};
   {? _wal & __P.KRS>0
   || {? FAKS.KRS<>FAP.KRS | FAKS.NKRS<>FAP.KRS
      || FAKS.KRS:=FAP.KRS;
         FAKS.NKRS:=FAP.KRS;
         FAKS.DTK:=FAKS.DW;
         FAKS.NDTK:=FAKS.DW;
         FAKS.put()
      ?}
   ?};
:: VAT jako liczba np. 0.23
   _vat:=#((FAP.SV().KOD*'%') + FAP.SV().KOD-1) / 100;
:: obliczenie ceny netto albo brutto, zależnie czy dokument VAT czy uproszczony
:: dokument netto/brutto ustalony na podstawie zawartości pliku UFD (__N1.CB w przypadku faktury i kopiowany z faktury
:: w przypadku korekty) lub wybrany przez użytkownika w przypadku faktury
   {? FAP.IL
   || {? FAKS.CB='T'
      || {? __P.GPRICE & __P.WB
         || {? _wal
            || FAP.CWAL:=(__P.WB/FAP.IL)$FAP.M().DOKL_Z
            || FAP.CPR:=(__P.WB/FAP.IL)$FAP.M().DOKL_Z
            ?}
         |? __P.PRICEA & __P.WN
         || _wb:=(__P.WN+__P.WN*_vat)$2;
            {? _wal
            || FAP.CWAL:=(_wb/FAP.IL)$FAP.M().DOKL_Z
            || FAP.CPR:=(_wb/FAP.IL)$FAP.M().DOKL_Z
            ?}
         ?}
      |? FAKS.CB='N'
      || {? __P.PRICEA & __P.WN
         || {? _wal
            || FAP.CWAL:=(__P.WN/FAP.IL)$FAP.M().DOKL_Z
            || FAP.CPR:=(__P.WN/FAP.IL)$FAP.M().DOKL_Z
            ?}
         |? __P.GPRICE & __P.WB
         || _wn:=(__P.WB/(1+_vat))$2;
            {? _wal
            || FAP.CWAL:=(_wn/FAP.IL)$FAP.M().DOKL_Z
            || FAP.CPR:=(_wn/FAP.IL)$FAP.M().DOKL_Z
            ?}
         ?}
      ?}
   ?};
   {? exec('sv2ufd','edi_fo_ufd',FAP.SV,0,0)='AE'
   ||
      FAP.SV:=exec('m_vat','material',FAP.M,FAP.FAKS().KH,
            FAP.FAKS().T().EXPORT='T' | FAP.FAKS().T().UE='T' & TYPYSP.ZAK='N',FAKS.AR,FAKS.AM,,,,FAKS.SZ);
      FAP.OO:='T'
   ?};
   exec('liczfak','faktury_wspolne');
   exec('fill_fld2prn','faktury_poz');
:sprawdzenie czy pozycja ma wymagany split payment
   exec('fap_sp','edi_fo03');
   {? _wal
   ||
      FAP.WWAL:=
         {? var_pres('WN',__P)=type_of(0) || __P.WN
         |? var_pres('WB',__P)=type_of(0) & var_pres('WV',__P)=type_of(0) || __P.WB-__P.WV
         || FAP.WWAL
         ?};
      FAP.VWAL:={? var_pres('WV',__P)=type_of(0) || __P.WV || FAP.VWAL ?};
      FAP.BWAL:=
         {? var_pres('WB',__P)=type_of(0) || __P.WB
         |? var_pres('WN',__P)=type_of(0) & var_pres('WV',__P)=type_of(0) || __P.WN+__P.WV
         || FAP.BWAL
         ?}
   ||
      FAP.WWAL:=FAP.WWAL_P:=FAP.WN:=
         {? var_pres('WN',__P)=type_of(0) || __P.WN
         |? var_pres('WB',__P)=type_of(0) & var_pres('WV',__P)=type_of(0) || __P.WB-__P.WV
         || FAP.WN
         ?};
      FAP.VWAL:=FAP.VWAL_P:=FAP.WV:={? var_pres('WV',__P)=type_of(0) || __P.WV || FAP.WV ?};
      FAP.BWAL:=FAP.BWAL_P:=FAP.WB:=
         {? var_pres('WB',__P)=type_of(0) || __P.WB
         |? var_pres('WN',__P)=type_of(0) & var_pres('WV',__P)=type_of(0) || __P.WN+__P.WV
         || FAP.WB
         ?}
   ?};
   {? _kor=0
   ||
      _env_fak_poz:=exec('env','faktury_poz');
      params_set('env_fak_poz',_env_fak_poz);
      exec('chk_fakp','faktury_poz',1)
   ||
      exec('spr_poz_kor','faktury_poz',1);
      exec('kor_end','edi_fo01')
   ?};
   {? FAP.put()
   ||
      {? __P.MEMO_PUT || FAP.memo_put(,'UWAGI') ?};
      exec('inf_dod','fakso',0,5+FAP.name())
   ?}
?};
_result


\KH_NIP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: EAN
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_edi:=exec('edi','edi_wspolne');
_context:=_edi.context;
_ocr:={? _context.TYPE=exec('context_type_bl','edi_wspolne') || _context.OCR ?};
_verify:=exec('verify','edi_xml');
{? _verify & FAKS.KH=null()
|| _nip:=__XML.VAL;
   {? _nip=''
   || exec('add_kom','#message','Nie znaleziono kontrahenta - nie podano NIP.'@,4,FAKS.ID)
   || {? (FAKS.KH:=exec('FindInSet','#table','KH','SNIP',_nip,2))=null()
      || exec('add_kom','#message','Nie znaleziono kontrahenta - NIP %1.'@[_nip],4,FAKS.ID)
      ?}
   ?}
?};
_wyn:=FAKS.KH<>null();
:: jeśli dokument z OCR to możliwe braki danych
_wyn:=
   {? FAKS.KH<>null()
   ||
      1
   ||
      {? _ocr || {? _verify || -1 || -2 ?} || 0 ?}
   ?};
_wyn


\dokumz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: Zwraca DOKUMZ.ref() z blobem o rozszerzeniu _b
::   WE: _a - DOKUM.ref()
::       _b - ufd/ksef/pdf
::   WY: DOKUMZ.ref
::----------------------------------------------------------------------------------------------------------------------
exec('FindAndGet','#table',DOKUM,_a,,"
   _ext:={? _b='ufd' | _b='ksef' || 'xml' || _b ?};
   _result:=null();
   DOKUMZ.cntx_psh();
   DOKUMZ.index('DISP');
   DOKUMZ.prefix(@.DOKUM.ref());
   _loop:=DOKUMZ.first();
   {!
   |? _loop
   |!
      {? -DOKUMZ.bl_info('DOKUM','EXTENSION')=_ext
            &
         (
            _b<>'ufd' & _b<>'ksef'
               |
            _b='ufd' & (DOKUMZ.BL_TYPE='INV' | DOKUMZ.BL_TYPE='INV_CORR' | DOKUMZ.BL_TYPE='ORD')
               |
            _b='ksef' & (DOKUMZ.BL_TYPE*'KSeF_INV'>0 | DOKUMZ.BL_TYPE*'KSeF_INV_CORR'>0)
         )
      || _result:=DOKUMZ.ref()
      ?};
      _loop:=_result=null() & DOKUMZ.next()
   !};
   DOKUMZ.cntx_pop();
   _result
",null(),_b)


\czy_ufd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: Czy jest plik xml UFD?
::   WE: _a - DOKUM.ref()
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
exec('dokumz','edi_fo_ufd',_a,'ufd')<>null()


\czy_ksef
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Czy jest plik xml KSeF?
::   WE: _a - DOKUM.ref()
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
exec('dokumz','edi_fo_ufd',_a,'ksef')<>null()


\czy_ufd_z_ocr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Czy jest plik UFD z OCR?
::   WE: _a - DOKUM.ref()
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
exec('FindAndGet','#table',DOKUM,_a,,"BL_OCR",'')=exec('received_from_ocr','zbl_stat')


\czy_pdf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: Czy jest plik PDF?
::   WE: _a - DOKUM.ref()
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
exec('dokumz','edi_fo_ufd',_a,'pdf')<>null()


\formplat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: Forma platnosci
::   WE: _a - E-zapis, I-odczyt
::       _b - I - faktura (domyślnie), O - zamówienie
::----------------------------------------------------------------------------------------------------------------------
_jak:='I';
{? var_pres('_b')=type_of('') & (_b='I' | _b='O')
|| _jak:=_b
?};
{? _a='E'
||
   _wyn:='';
   _pl:={? _jak='O' || ZD_NAG.PL || FAKSPL.PL ?};
   {? _pl
   ||
      {? exec('plat_czy_gotowka','slo_slu',_pl)
      || _wyn:='10'
      |? exec('plat_czy_czek','slo_slu',_pl)
      || _wyn:='20'
      |? exec('plat_czy_karta','slo_slu',_pl)
      || _wyn:='48'
      || _wyn:='31'
      ?}
   ?};
   _wyn

|? _a='I'
||
   _verify:=exec('verify','edi_xml');
   {? _jak='O'
   || _kom_sym:=ZK_N.ZAM_KL
   || _kom_sym:=FAKS.ID
   ?};
   FAKSPL.cntx_psh();
   ZR_SLO.cntx_psh();
   SLO.cntx_psh();
   SLO.index('SL');
   SLO.prefix(XINFO.SLP);
   {? SLO.first()
   ||
      _wyn:=null();
      _Tab:=__N.PAYMENT;
      _loop:=_Tab.first();
      _ii:=0;
      {!
      |? _loop
      |!
         _ii+=1;
         {? _Tab.TERMS=0 & _Tab.DATE<>date(0,0,0) & __N.DW<>date(0,0,0) & _Tab.DATE>__N.DW
         || _Tab.TERMS:=_Tab.DATE-__N.DW
         ?};
         {? XINFO.SLP
         ||
            _p_0p:=null();
            _p_d0:=null();
            _p_0p_dni:=0;
            _p_wg_opisu:=0;
            SLO.index('SL');
            SLO.prefix(XINFO.SLP);
            _loop:=SLO.first();
            {!
            |? _loop
            |!
               _pl_got:=exec('plat_czy_gotowka','slo_slu');
               _pl_kar:=exec('plat_czy_karta','slo_slu');
               _pl_czek:=exec('plat_czy_czek','slo_slu');
               _pl_prz:=exec('plat_czy_przelew','slo_slu');
               _pl_dni:=0;
               {? ~_pl_got & ~_pl_kar & ~_pl_czek
               || _pl_dni:=exec('plat_dni','slo_slu')
               ?};
               {? _Tab.MEANS='10' & _pl_got
               || _wyn:=SLO.ref()
               |? _Tab.MEANS='20' & _pl_czek
               || _wyn:=SLO.ref()
               |? _Tab.MEANS='48' & _pl_kar
               || _wyn:=SLO.ref()
               |? (_Tab.MEANS='31' | _Tab.MEANS='42') & ~_pl_got & ~_pl_kar & ~_pl_czek
               || {? _pl_dni=_Tab.TERMS & _pl_prz
                  || _wyn:=SLO.ref()
                  |? _pl_dni=_Tab.TERMS & ~_pl_prz
                  || _p_d0:=SLO.ref()
                  |? _pl_dni<>_Tab.TERMS & _pl_prz
                  || {? _p_0p=null() | (_pl_dni<_Tab.TERMS & (_p_0p_dni<_pl_dni | _Tab.TERMS<_p_0p_dni))
                        | (_pl_dni>_Tab.TERMS & _p_0p_dni>_pl_dni)
                     || _p_0p:=SLO.ref();
                        _p_0p_dni:=_pl_dni
                     ?}
                  ?}
               ?};
               _loop:=_wyn=null() & SLO.next()
            !};
            {? _wyn=null() & (_Tab.MEANS='31' | _Tab.MEANS='42')
            || {? _p_d0<>null()
               || _wyn:=_p_d0
               |? _p_0p<>null()
               || _wyn:=_p_0p
               ?}
            ?};
            {? _wyn=null()
            || SLO.index('SL_TR');
               SLO.prefix(XINFO.SLP,_Tab.DESC,);
               {? SLO.first()
               || _wyn:=SLO.ref();
                  _p_wg_opisu:=1
               ?}
            ?}
         ?};
         {? _verify
         ||
            {? _wyn=null()
            ||
               {? _Tab.MEANS='31' | _Tab.MEANS='42'
               || exec('add_kom','#message','Nie znaleziono formy płatności %1 - %2, liczba dni %3.'@[
                     _Tab.MEANS,_Tab.DESC,$_Tab.TERMS],4,_kom_sym)
               || exec('add_kom','#message','Nie znaleziono formy płatności %1 - %2.'@[
                     _Tab.MEANS,_Tab.DESC],4,_kom_sym)
               ?}
            |? _ii=1 & (_Tab.MEANS='31' | _Tab.MEANS='42')
            || _pl_prz:=exec('plat_czy_przelew','slo_slu',_wyn);
               _pl_dni:=exec('plat_dni','slo_slu',_wyn);
               {? ~_pl_prz | _pl_dni<>_Tab.TERMS
               || _pl_opi:=exec('plat_opi','slo_slu',_wyn);
                  exec('add_kom','#message','Dla formy płatności "%1 - %2, liczba dni %3" dobrano "%4, liczba dni %5".'@[
                     _Tab.MEANS,_Tab.DESC,$_Tab.TERMS,_pl_opi,$_pl_dni],2,_kom_sym)
               ?}
            |? _ii=1 & _p_wg_opisu
            || _pl_opi:=exec('plat_opi','slo_slu',_wyn);
               exec('add_kom','#message','Dla formy płatności "%1 - %2" dobrano "%3".'@[
                  _Tab.MEANS,_Tab.DESC,_pl_opi],2,_kom_sym)
            |? _ii>1
            ||
               exec('add_kom','#message','Można podać tylko jedną formę płatności. Pominięto formę płatności %1 - %2.'@[
                  _Tab.MEANS,_Tab.DESC],4,_kom_sym)
            ?}
         ||
            {? _ii=1 & _wyn
            || VAR_DEL.delete('__PLAT');
               {? _jak='O' & _Tab.DATE=date(0,0,0)
               || FZ.PL:=_wyn;
                  _Tab.DATE:=exec('term_plat','faktury_plat','PL','N',ZK_N.ref())
               ?};
               _name:=(5+FAKSPL.name());
               {? _jak='O'
               || __PLAT:=ZK_N;
                  _name+=(ref_name(ZK_N.ref())+3)
               || __PLAT:=FAKS;
                  _name+=(ref_name(FAKS.ref())+3)
               ?};
               FAKSPL.use(_name);
               FAKSPL.prefix();
               FAKSPL.blank();
               {? _jak='O'
               || FAKSPL.ZK_N:=ZK_N.ref()
               || FAKSPL.FAKS:=FAKS.ref()
               ?};
               FAKSPL.PL:=_wyn;
               FAKSPL.TERMPLAT:=_Tab.DATE;
               FAKSPL.WAR:=_Tab.GROSSA;
               {? FAKSPL.add()
               || {? _jak='O'
                  || ZK_N.PL:=FAKSPL.PL;
                     ZK_N.TZ:=FAKSPL.TERMPLAT
                  || FAKS.PL:=FAKSPL.PL;
                     FAKS.TZ:=FAKSPL.TERMPLAT
                  ?}
               ?}
            ?}
         ?};
         _loop:=_Tab.next()
      !}
   ?};
   SLO.cntx_pop();
   FAKSPL.cntx_pop();
   ZR_SLO.cntx_pop();
   1
?}


\edi_buf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: Bufor edi dokumentu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__EB');
__EB:=obj_new('SUMM','TAX_SUMM','ZAL','PLAT');
_ff_summ:="
   _Summ:=obj_new(
      'NET','BRT','KWV','KWDOP','NET_P','BRT_P','KWV_P','KWDOP_P',
      'PNET','PBRT','PKWV','PKWDOP','PNET_P','PBRT_P','PKWV_P','PKWDOP_P',
      'CNET','CBRT','CKWV','CKWDOP','CNET_P','CBRT_P','CKWV_P','CKWDOP_P'
   );
   {! _ii:=1..obj_len(_Summ) |! _Summ[_ii]:=0 !};
   _Summ";
_ff_tax_summ:="tab_tmp(1
   ,'SV','STRING[8]',''
   ,'SVR','STRING[16]',''
:: wartości faktury lub po korekcie
   ,'NET','REAL',''
   ,'BRT','REAL',''
   ,'KWV','REAL',''
   ,'KWDOP','REAL',''
   ,'NET_P','REAL',''
   ,'BRT_P','REAL',''
   ,'KWV_P','REAL',''
   ,'KWDOP_P','REAL',''
:: wartości przed korektą
   ,'PNET','REAL',''
   ,'PBRT','REAL',''
   ,'PKWV','REAL',''
   ,'PKWDOP','REAL',''
   ,'PNET_P','REAL',''
   ,'PBRT_P','REAL',''
   ,'PKWV_P','REAL',''
   ,'PKWDOP_P','REAL',''
:: wartość korekty
   ,'CNET','REAL',''
   ,'CBRT','REAL',''
   ,'CKWV','REAL',''
   ,'CKWDOP','REAL',''
   ,'CNET_P','REAL',''
   ,'CBRT_P','REAL',''
   ,'CKWV_P','REAL',''
   ,'CKWDOP_P','REAL',''
)";
_ff_zal:="tab_tmp(1
   ,'SYM','STRING[20]',''
   ,'WAR','REAL',''
   ,'DW','DATE',''
   ,'FAKS_REF','STRING[32]',''
   ,'NRKSEF','STRING[40]',''
)";
_ff_plat:="
   _Plat:=obj_new(
      'ZAPL','ZAPLCZ','TERM'
      );
   _Plat";
__EB.SUMM:=_ff_summ();
__EB.TAX_SUMM:=_ff_tax_summ();
__EB.ZAL:=_ff_zal();
__EB.PLAT:=_ff_plat()


\edi_buf_fill
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: Bufor edi dokumentu - uzupełnienie wg dokumentu _a
::   WE: _a - FAKS.ref()
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ref:=$_a;
_Summ:=__EB.SUMM;
_Tax_summ:=__EB.TAX_SUMM;
_Zal:=__EB.ZAL;
_Plat:=__EB.PLAT;
:: VAT - wypełnienie _Summ, _Tax_summ
_ii:=0;
_loop:=_ref<>'';
{!
|? _loop
|!
   _ii+=1;
   _obj:=exec('obj_fv_sp','dok_fks_aut_dok');
   _obj.create(_ref,_ii=1);
   _Faksv:=_obj.tab;
   FAPOW.cntx_psh();
   FAPOW.index('END_K');
   FAPOW.prefix(_ref,'N');
   _roz:=_ii=1 & FAPOW.first();
   FAPOW.cntx_pop();
   _loop:=_Faksv.first();
   {!
   |? _loop
   |!
      _vat:=exec('FindAndGet','#table',SLO,_Faksv.SV,,"SLO.KOD",'');
      _vatr:=$exec('FindAndGet','#table',SLO,_Faksv.SV,,,null());
      _put:=_Tax_summ.find_key(_vat); {? ~_put || _Tax_summ.blank() ?};
      _war:={? FAKS.WHERE='L' || _Faksv.WWN_Z |? _roz || _Faksv.WWN_R || _Faksv.WWN ?};
      {? _ii=1
      || _Summ.CNET+=_war; _Tax_summ.CNET+=_war
      || _Summ.PNET+=_war; _Tax_summ.PNET+=_war
      ?};
      _Summ.NET+=_war; _Tax_summ.NET+=_war;
      _war:={? FAKS.WHERE='L' || _Faksv.WW_Z |? _roz || _Faksv.WW_R || _Faksv.WW ?};
      {? _ii=1
      || _Summ.CBRT+=_war; _Tax_summ.CBRT+=_war
      || _Summ.PBRT+=_war; _Tax_summ.PBRT+=_war
      ?};
      _Summ.BRT+=_war; _Tax_summ.BRT+=_war;
      _war:={? FAKS.WHERE='L' || _Faksv.WWV_Z |? _roz || _Faksv.WWV_R || _Faksv.WWV ?};
      {? _ii=1
      || _Summ.CKWV+=_war; _Tax_summ.CKWV+=_war
      || _Summ.PKWV+=_war; _Tax_summ.PKWV+=_war
      ?};
      _Summ.KWV+=_war; _Tax_summ.KWV+=_war;
      {? _ii=1
      || _war:={? FAKS.T().FIS='T' || _Summ.CBRT || _Summ.CNET ?};
         _Summ.CKWDOP:=_war; _Tax_summ.CKWDOP:=_war
      || _war:={? FAKS.T().FIS='T' || _Summ.PBRT || _Summ.PNET ?};
         _Summ.PKWDOP:=_war; _Tax_summ.PKWDOP:=_war
      ?};
      _war:={? FAKS.T().FIS='T' || _Summ.BRT || _Summ.NET ?};
      _Summ.KWDOP:=_war; _Tax_summ.KWDOP:=_war;
      _war:={? FAKS.WHERE='L' || _Faksv.WN_Z |? _roz || _Faksv.WN_R || _Faksv.WN ?};
      {? _ii=1
      || _Summ.CNET_P+=_war; _Tax_summ.CNET_P+=_war
      || _Summ.PNET_P+=_war; _Tax_summ.PNET_P+=_war
      ?};
      _Summ.NET_P+=_war; _Tax_summ.NET_P+=_war;
      _war:={? FAKS.WHERE='L' || _Faksv.WB_Z  |? _roz || _Faksv.WB_R || _Faksv.WB ?};
      {? _ii=1
      || _Summ.CBRT_P+=_war; _Tax_summ.CBRT_P+=_war
      || _Summ.PBRT_P+=_war; _Tax_summ.PBRT_P+=_war
      ?};
      _Summ.BRT_P+=_war; _Tax_summ.BRT_P+=_war;
      _war:={? FAKS.WHERE='L' || _Faksv.WV_Z  |? _roz || _Faksv.WV_R || _Faksv.WV ?};
      {? _ii=1
      || _Summ.CKWV_P+=_war; _Tax_summ.CKWV_P+=_war
      || _Summ.PKWV_P+=_war; _Tax_summ.PKWV_P+=_war
      ?};
      _Summ.KWV_P+=_war; _Tax_summ.KWV_P+=_war;
      {? _ii=1
      || _war:={? FAKS.T().FIS='T' || _Summ.CBRT_P || _Summ.CNET_P ?};
         _Summ.CKWDOP_P:=_war; _Tax_summ.CKWDOP_P:=_war
      || _war:={? FAKS.T().FIS='T' || _Summ.PBRT_P || _Summ.PNET_P ?};
         _Summ.PKWDOP_P:=_war; _Tax_summ.PKWDOP_P:=_war
      ?};
      _war:={? FAKS.T().FIS='T' || _Summ.BRT_P || _Summ.NET_P ?};
      _Summ.KWDOP_P:=_war; _Tax_summ.KWDOP_P:=_war;
      {? _put || _Tax_summ.put() || _Tax_summ.SV:=_vat; _Tax_summ.SVR:=_vatr; _Tax_summ.add() ?};
      _loop:=_Faksv.next()
   !};
   obj_del(_obj);
   obj_del(_Faksv);
   _ref:=exec('FindAndGet','#table',FAKS,_ref,,"FAKS.LKSQL",'');
   _loop:=_ref<>''
!};
:: Zaliczki - wypełnienie _Zal
FAPOW.cntx_psh();
{? FAKS.WHERE='L'

||
   FAPOW.index('FAKS_K');
   FAPOW.prefix($FAKS.ref(),'N');
   {? FAPOW.first()
   ||
::    szuka powiazanych
      {? var_pres('X_FAPOW')>=100 || obj_del(X_FAPOW) ?};
      _qq:="
         select distinct
            FAPOW.FAKS_SYM as FAKS_SYM,
            to_string(FAPOW.DW) as DW,
            FAPOW.KW_PO_K as KW,
            FAPOW.WAL as WAL,
            FAPOW.FAKS as REF,
            'N' as CANCEL,
            FAPOW.DW as DDW,
            FAPOW.FAKS as FAKS_REF
         from
            FAPOW
         where
            FAPOW.F=':_a'
            and FAPOW.FAKS_SYM<>':_b'
            and FAPOW.KH=:_c
            and FAPOW.WAL=':_d'
            and FAPOW.KOREKTA='N'
            and FAPOW.AKC='T'
            and FAPOW.POZ<:_e
      ";
      _Fapow:=sql($_qq,FAPOW.F,FAPOW.FAKS_SYM,FAPOW.KH,FAPOW.WAL,FAPOW.POZ);
      _loop:=_Fapow.first();
      {!
      |? _loop
      |!
         _Zal.SYM:=_Fapow.FAKS_SYM;
         _Zal.WAR:=_Fapow.KW;
         _Zal.DW:=_Fapow.DDW;
         _Zal.FAKS_REF:=_Fapow.FAKS_REF;
         _loop:=_Zal.add() & _Fapow.next()
      !}
   ?}
||
   FAPOW.index('END_K');

   FAPOW.prefix($FAKS.ref(),'N');
   _loop:=FAPOW.first();
   {!
   |? _loop
   |!
      _Zal.SYM:=FAPOW.FAKS_SYM;
      _Zal.WAR:={? FAKS.WHERE='L' || FAPOW.KW || FAPOW.KW_ROZ ?};
      _Zal.DW:=FAPOW.DW;
      _Zal.FAKS_REF:=FAPOW.FAKS;
      _loop:=_Zal.add() & FAPOW.next()
   !}
?};
FAPOW.cntx_pop();
{? _Zal.first()
|| {!
   |? {? _Zal.FAKS_REF<>''
      || _Zal.NRKSEF:=exec('faks_nrksef_get','faktury_nag1',_Zal.FAKS_REF);
         _Zal.put()
      ?};
      _Zal.next()
   !};
   _Zal.first()
?};
_Plat.ZAPL:=exec('zaplacono_czy','edi_fo_ksef2');
_Plat.ZAPLCZ:=exec('zaplczesc_czy','edi_fo_ksef2');
_Plat.TERM:=exec('termplat_czy','edi_fo_ksef2');
~~


\dok_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: Zwraca wartość _b dokumentu _a
::   WE: _a - FAKS.ref() lub $FAKS.ref()
::       _b - NETTO/BRUTTO
::   WY: wartość
::----------------------------------------------------------------------------------------------------------------------
_ref:={? var_pres('_a')=type_of('') || _a |? var_pres('_a')=type_of(null()) & ref_tab(_a)=FAKS || $_a || '' ?};
{? _ref='' || return(0) ?};
_kind:=_b;
_result:=0;
_zal:=exec('FindAndGet','#table',FAKS,_ref,,"FAKS.WHERE='L'",0);
FAPOW.cntx_psh();
FAPOW.index('END_K');
FAPOW.prefix(_ref,'N');
_roz:=FAPOW.first();
FAPOW.cntx_pop();
_obj:=exec('obj_fv_sp','dok_fks_aut_dok');
_obj.create(_ref);
_Faksv:=_obj.tab;
_loop:=_Faksv.first();
{!
|? _loop
|!
   {? _kind='NETTO'
   ||
      _result+={? _zal || _Faksv.WWN_Z |? _roz || _Faksv.WWN_R || _Faksv.WWN ?}

   |? _kind='BRUTTO'
   ||
      _result+={? _zal || _Faksv.WW_Z |? _roz || _Faksv.WW_R || _Faksv.WW ?}
   ?};
   _loop:=_Faksv.next()
!};
_result


\KH_SET
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: Ustawienie kontrahenta dla dokumentów księgowych i dokumentów w obiegu
::   WE: _a - 'FKS' - Dokument księgowy
::            'OBG' - Dokument w obiegu
::       _b - 0/1 - dla pola nip / dla sprzedawcy
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
_b:={? var_press('_b')>0 || _b || 0 ?};
_edi:=exec('edi','edi_wspolne');
_verify:=exec('verify','edi_xml');
KH.cntx_psh();
_nip:={? var_press('__KH')>0 || {? __KH.DOK.NIP<>'' || __KH.DOK.NIP || __XML.VAL ?} || __XML.VAL ?};
{? _nip=''
|| {? _verify
   || exec('add_kom','#message','Nie znaleziono kontrahenta - nie podano NIP.'@,4,{? _a='OBG' || EDOKUM.SYM || DOK.NK ?})
   ?};
   _ok:=0
|| KH.index('SNIP'); KH.prefix(2,exec('niptostr','#string',_nip),);
   {? ~KH.first()
   || {? _verify
      || exec('add_kom','#message','Nie znaleziono kontrahenta - NIP %1.'@[_nip],4,{? _a='OBG' || EDOKUM.SYM || DOK.NK ?})
      ?};
      _ok:=0
   ?}
?};
{? ~_verify & _ok
|| _slo:=_slu:=null();
   RS.cntx_psh(); SLU.cntx_psh(); SLO.cntx_psh();
   SLU.index('NAZ'); SLU.prefix();
   {? var_press('__PAR')>0 & __PAR.SL<>''
   || {? SLU.find_key(__PAR.SL) || _slu:=SLU.ref() ?}
   || {? _a='OBG' || {? SLU.find_key(SKID.SL_KH) || _slu:=SLU.ref() ?}
      |? _a='FKS' || {? SLU.find_key(SLOSLU.SLSLU) || _slu:=SLU.ref() ?}
      ?}
   ?};
   {? _slu<>null()
   || RS.index('RS'); RS.prefix();
      {? RS.find_key(SLU.WZ) & RS.TAB='KH'
      || _kod:=($('SLO.KOD:='+RS.TAB+'.'+RS.KOD))();
         SLO.index('SL');
         {? SLO.prefix(_slu); ~(SLO.find_key(_kod) & _kod=SLO.KOD)
         || SLO.blank(); SLO.SLU:=_slu;SLO.KOD:=_kod;SLO.TR:=KH.NAZ; {? SLO.add() || _slo:=SLO.ref ?}
         || _slo:=SLO.ref()
         ?}
      ?}
   ?};
   {? _a='OBG'
   || EDOKUM.KH:={? _slo<>null() || SLO.ref() || null() ?}; SKID.NIP:=KH.NIP;
      EDOKUM.KHKH:=KH.ref();
      EDOKUM.KH_FULL:=KH.NAZ_P; EDOKUM.UL:=KH.UL; EDOKUM.MIASTO:=KH.MIASTO;
      EDOKUM.DOM:=KH.DOM;
      EDOKUM.LOKAL:=KH.LOKAL;
      EDOKUM.POCZ:=KH.POCZ;
      EDOKUM.KPOCZ:=KH.KPOCZ;
      EDOKUM.POCZ:=KH.KPOCZ+{? KH.POCZ<>'' || ' '+KH.POCZ || '' ?};
      exec('bl_kh_upd','zbl_dok',EDOKUM.DOKUM,EDOKUM.KHKH)
   |? _a='FKS'
   || EDI_Z.KH:=KH.ref();
      DOK.WYS:={? _slo<>null() || SLO.ref() || null() ?};
      DOK.KH:=KH.SKR;
      DOK.KH_FULL:=KH.NAZ_P;
      DOK.KH_KRAJ:=KH.KRAJ; DOK.KH_KRISO:=KH.KRAJISO;
      DOK.MIASTO:=KH.MIASTO;
      DOK.UL:=KH.UL;
      DOK.POCZ:=KH.POCZ;
      DOK.DOM:=KH.DOM;
      DOK.LOKAL:=KH.LOKAL;
      DOK.KPOCZ:=KH.KPOCZ;
      DOK.NIP:=KH.NIP;
      {? DOK.DOKZRODL<>'' & DOK.DOKZRODL*'dokum'>0 || exec('bl_kh_upd','zbl_dok',DOK.DOKZRODL,KH.ref()) ?}
   ?};
   _ok:={? _a='OBG' || EDOKUM.KHKH<>null() || DOK.NIP<>'' ?};
   RS.cntx_pop(); SLU.cntx_pop(); SLO.cntx_pop()
?};
KH.cntx_pop();
{? _edi.sza & _b=0 & PAR_SKID.get(119)='N' || _ok || 1 ?}


\r_edok_sd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: read - dokument - start document
::   WE: _a - F - faktura, K - korekta
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__N','__N1','__V','__P','typ_ust','__KH');
_typ:={? var_pres('_a')=type_of('') || _a || '' ?};
{? _typ='' | 'FK'*_typ=0
||
   FUN.info('Nieprawidłowy parametr funkcji r_edok_sd.'@);
   return(-1)
?};
_result:=1;

__N:=obj_new('EP_ID','EP_SID','KOR','RB','P_MEANS','P_TERMS','P_DESC','P_PAYMENT','P_FORM','P_OTHER');
__N.EP_ID:=''; __N.EP_SID:=''; {? _typ='F'|| __N.KOR:='N' || __N.KOR:='T' ?};
__N.RB:=__N.P_MEANS:=__N.P_DESC:=''; __N.P_TERMS:=0;
__N.P_FORM:=__N.P_OTHER:=~~;
__N.P_PAYMENT:=tab_tmp(
   ,'DATE','DATE',''
   ,'DESC','STRING[255]','');
__N1:=obj_new('DW','TYPYSP','KH','FAK_ID','FAK_DW','TYP0','DTYP0','DFUNC0');
__N1.TYPYSP:=null();
__N1.TYP0:='';
__N1.DTYP0:='';
__N1.DFUNC0:='';
__N1.DW:=date(0,0,0);
:: pola dotyczącek korekty
__N1.KH:=null();
__N1.FAK_ID:='';
__N1.FAK_DW:=date(0,0,0);
_result


\r_sg_edok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: read - dokument w obiegu - start grupa
::   WE: [_a] - formuła na ustawienie parametrów domyślnych w okienku.
::----------------------------------------------------------------------------------------------------------------------
_edi:=exec('edi','edi_wspolne');
{? _edi.sza || return(1) ?};
_param:=Plugin.runnable('BL_OBG_001');
exec('czytaj','#stalesys');
VAR_DEL.delete('__PAR');
__PAR:=obj_new('ODD','TYP','SL','PAY','KOR');
__PAR.ODD:=__PAR.TYP:=__PAR.SL:=''; __PAR.PAY:=null;
EDOKUM.cntx_psh(); ETYPY.cntx_psh();
ROK_F.cntx_psh(); OKRO_F.cntx_psh();
__ar:=SSTALE.AR; __ao:=SSTALE.AO;
_result:=exec('szuk_okr','okresy',DOKUM.DATA)<>null;
{? ~_edi.sza
|| OKRO_F.index('FIRMA_NR');
   OKRO_F.prefix(REF.FIRMA);
   OKRO_F.win_sel('WER2');
   {? OKRO_F.select(,1,25)
   || ROZNE.UT_OKROD:=OKRO_F.ref();
      _result:=1
   || ROZNE.UT_OKROD:=null();
      _result:=0
   ?}
?};
{? ~_result
|| {? _edi.sza
   || FUN.info('Nie znaleziono okresu dla bieżącej daty kalendarzowej.'@)
   ?}
|? OKRO_F.ZAM='T'
|| FUN.info('Okres %1 jest zamknięty.'@[OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ]);
   _result:=0
|? OKRO_F.ZAM_CON='T'
|| FUN.info('Okres %1 jest zamknięty controllingowo.'@[OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ]);
   _result:=0
|| SSTALE.AO:=ROZNE.UT_OKROD;
   SSTALE.AR:=ROZNE.UT_OKROD().ROK;
   ROZNE.ROKKON:=SSTALE.AR;
   _result:=1
?};
{? _result
|| __PARSES.setVal('OkresRok',SSTALE.AO);
   exec('open_tabele','open_tab','F');
   EDOKUM.index('DISP'); EDOKUM.prefix();
   ETYPY.index('DISP4'); ETYPY.prefix();
   OPERATOR.DEPT:=__PARSES.getVal('JednostkaKsięgowa').REF;
   OBIEGI.TYPOBIEG:=exec('bl_typ','obiegi',typobi);
   OBIEGI.OBIEGKON:=OBIEGI.FAKT_DEL:=1;
   OBIEGI.ODD:=null; OBIEGI.TYP:=null; SKID.SL_KH:=OBIEGI.SL_KH:=''; EDOKUM.PLATNOSC:=null;
   exec('tabkhini','kontrahent');
   _win:=exec('edokum_par','edi_fo_ufd',1);
   EDOKUM.win_edit(_win);
   ODD.prefix();
   ODD.f_clear();
   ODD.f_set('OD,N',
      'left join USERSDEP using(USERSDEP.DEPT,ODD.REFERENCE)',
      '(:_a=1 or USERSDEP.USERS=:_b) and ODD.FIRMA=:_c',Perm.hasFull('FJKS'),OPERATOR.USER,REF.FIRMA);
   OBIEGI.fld_fml('ODD','BEFORE_EDIT',"{? OPERATOR.DEPT<>null || 0 || 1 ?}");
   OBIEGI.fld_fml('TYP','AFTER_EDIT',"SKID.SL_KH:=OBIEGI.SL_KH:=OBIEGI.TYP().DOM_SL().SLU().NAZ;
                                       EDOKUM.PLATNOSC:=OBIEGI.TYP().PLATNOSC;
                                       1");
   OBIEGI.fld_fml('ODD','AFTER_EDIT',"1");
   OBIEGI.fld_fml('SL_KH','AFTER_EDIT',"1");
   OBIEGI.fld_fml('ODD','BEFORE_DISPLAY',"{? OPERATOR.DEPT<>null || OBIEGI.ODD:=OPERATOR.DEPT || 1 ?}");
   {? _param=1 || Plugin.run('BL_OBG_001',0) ?};
   {? EDOKUM.edit("exec('edokum_par_check','edi_fo_ufd')")
   || __PAR.ODD:=OBIEGI.ODD().OD;
      __PAR.TYP:=OBIEGI.TYP().NAZWA+{? ETYPY.W_PORTAL<>'N' || ';'+ETYPY.W_PORTAL || '' ?};
      __PAR.SL:=OBIEGI.SL_KH;
      __PAR.PAY:=EDOKUM.PLATNOSC().ref();
      1
   || _result:=0
   ?}
?};
{? ~_result
|| exec('r_eg_edok','edi_fo_ufd')
?};
_result


\edok_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: dodawanie dokumentu w obiegu - start
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys');
_edi:=exec('edi','edi_wspolne');
_param:={? typobi=1 || Plugin.runnable('BL_OBG_001') || Plugin.runnable('BL_OBE_001') ?};
{? _param=0 & _edi.sza
|| _edi.log('Brak formuły na domyślne parametry %1 w obiegu (wtyczka).'@[{? typobi=1 || 'faktury'@ || 'wniosku'@ ?}]);
   return(0)
?};
_verify:=exec('verify','edi_xml');
{? _verify || return(1) ?};
{? _edi.sza
|| {? exec('szuk_okr','okresy',EDOKUM.DOP)=null
   || _edi.log('Nie znaleziono okresu dla daty %1.'@[EDOKUM.DOP]);
      return(0)
   |? OKRO_F.ZAM='T'
   || _edi.log('Okres %1 jest zamknięty.'@[OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ]);
      return(0)
   |? OKRO_F.ZAM_CON='T'
   || _edi.log('Okres %1 jest zamknięty controllingowo.'@[OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ]);
      return(0)
   || SSTALE.AO:=ROZNE.UT_OKROD;
      SSTALE.AR:=ROZNE.UT_OKROD().ROK;
      exec('open_tabele','open_tab','F');
      __PARSES.setVal('OkresRok',SSTALE.AO)
   ?}
?};
EDOKUM.clear();
EDOKUM.blank();
EDOKUM.FIRMA:=REF.FIRMA;
EDOKUM.ROK_F:=SSTALE.AR;
{? var_press('__PAR')>0
|| EDOKUM.ODD:=exec('find_odd','fst',__PAR.ODD);
   {? __PAR.TYP<>''
   || EDOKUM.TYP:=exec('typfak','edi_wspolne',__PAR.TYP,1)
   ?};
   SKID.SL_KH:=__PAR.SL;
   EDOKUM.PLATNOSC:=__PAR.PAY
?};
EDOKUM.DATAW:=date();
EDOKUM.DO:={? DOKUM.KSEFCDAT<>date(0,0,0) || DOKUM.KSEFCDAT
           |? DOKUM.DATA_ODB<>date(0,0,0) || DOKUM.DATA_ODB
           || DOKUM.DATAKONT
           ?};
EDOKUM.ALERTY:='T';
EDOKUM.AUTOMAT:=2;
OBIEGI.DEL_ETAT:=OBIEGI.B_PREL:=OBIEGI.B_PRELS:='';
EDOKUM.DOSTAWCA:=OPERATOR.USER().OSOBA;
VAR_DEL.delete('no_us');
no_us:=EDOKUM.USERS:={? _edi.sza || null() || OPERATOR.USER ?};
EDOKUM.UNIK_ID:=tm_stamp();
EDOKUM.KOREKTA:=__N.KOR;
EDOKUM.EDOKUM:=DOKUM.DOKUMI;
EDOKUM.DOKUM:=$DOKUM.ref();
:: PARAMETRYZACJA
{? _param
|| {? typobi=1 & Plugin.run('BL_OBG_001',1)<>1 & _edi.sza
   || _edi.log('Brak przekazanej w parametrze formuły na domyślne parametry dokumentu.'@);
      return(0)
   |? typobi=2 & Plugin.run('BL_OBE_001',1)<>1 & _edi.sza
   || _edi.log('Brak przekazanej w parametrze formuły na domyślne parametry dokumentu.'@);
      return(0)
   ?}
?};
:: PARAMETRYZACJA
{? (typobi=1 & exec('chk_par','edi_fo02','OBG')) | (typobi=2 & _edi.sza & exec('chk_par','edi_fo02','OBG'))
|| return(0)
?};
EDOKUM.TYP();
EDOKUM.TYPOBIEG:=EDOKUM.TYP().TYPOBIEG;
EDOKUM.use('skid_v'+($(SSTALE.AR().POCZ_ROK~1)+2));
{? EDOKUM.add()
|| exec('edokumz','dokum',EDOKUM.ref);
   {? ETYPY.AUT_ID='T' & EDOKUM.ID=''
   || VAR_DEL.delete('id_edok');
      exec('ustal_numer','obiegi',1,SSTALE.AR,1,0);
      EDOKUM.ID:={? var_pres('id_edok')>0 || id_edok || '' ?};
      EDOKUM.put()
   ?};
   zakres:=1;
   exec('dol_edokos','obiegi');
   {? EDOKUM.TYP().ATR_G1R>0
   || exec('edk_atr_dolacz','obiegi',0)
   ?};
   {? typobi=1 || Plugin.run('BL_OBG_001',3) || Plugin.run('BL_OBE_001',3) ?}
|| exec('add_kom','#message','Błąd podczas dodawania '@+{? typobi=1 || 'faktury'@ || 'wniosku'@ ?}+' w obiegu'@,38,'UWAGA'@);
   return(0)
?};
1


\r_eg_edok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: read - dokument - end grupa
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_edi:=exec('edi','edi_wspolne');
{? _edi.sza || return(1) ?};
OBIEGI.fld_fml('ODD','BEFORE_EDIT',"*");
OBIEGI.fld_fml('ODD','BEFORE_DISPLAY',"*");
OBIEGI.fld_fml('ODD','AFTER_EDIT',"*");
OBIEGI.fld_fml('TYP','AFTER_EDIT',"*");
OBIEGI.fld_fml('SL_KH','AFTER_EDIT',"*");
exec('tabkhdel','kontrahent');
{? var_press('__ar')>0 & var_press('__ao')>0
|| SSTALE.AR:=__ar; SSTALE.AO:=__ao;
   exec('open_tabele','open_tab')
?};
VAR_DEL.delete('__PAR','__ar','__ao');
ETYPY.cntx_pop(); EDOKUM.cntx_pop();
ROK_F.cntx_pop(); OKRO_F.cntx_pop();
1


\evat_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: dodawanie pozycji VAT - start
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__V');
__V:=obj_new(
   'WN','WV',
   'WAL','WAL_WN','WAL_WV',
   'SV_ID','SV_P','SV_TSID'
);
__V.WN:=0; __V.WV:=0;
__V.WAL:=''; __V.WAL_WN:=0; __V.WAL_WV:=0;
__V.SV_ID:=''; __V.SV_P:='bd'; __V.SV_TSID:='';
_verify:=exec('verify','edi_xml');
{? _verify || return(1) ?};
EVAT.cntx_psh();
EVAT.use('skid_a'+(EDOKUM.name()+2));
EVAT.index('EDOKUM'); EVAT.prefix();
EVAT.blank(1);
EVAT.EDOKUM:=EDOKUM.ref();
1


\dokz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: Dodawanie załączników do dokumentu w obiegu
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
DOKUMZ.cntx_psh(); DOKUMZ.index('DISP'); DOKUMZ.prefix(DOKUM.ref());
DOKUM.cntx_psh(); DOKUM.prefix();
POM.TAB:='DOKUM';
POM.TYPDOK:='SYS';
_loop:=DOKUMZ.first();
{!
|? _loop
|! DOKUM.blank();
   DOKUM.TYP:='I';
   DOKUM.REFSQL:=$DOK.ref();
   DOKUM.NR:=exec('numer_new','numery','PACZKA');
   exec('znak','numery','DOKUM',2);
   DOKUM.DOKUM:=DOKUMZ.DOKUM;
   DOKUM.DATA:=DOKUMZ.DATE;
   DOKUM.CZAS:=DOKUMZ.TIME;
   DOKUM.NAZWA:=DOKUMZ.NAZWA;
   DOKUM.KR_OP:=DOKUMZ.KR_OP;
   _result:=DOKUM.add();
   _loop:=_result & DOKUMZ.next()
!};
DOKUM.cntx_pop(); DOKUMZ.cntx_pop();
_result


\war_dok_w_sv_wg_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: Wartość dokumentu w podziale na stawki vat wg pozycji dokumentu
::   WE: _a - FAKS.ref()
::   WY: tabela z wartościami
::----------------------------------------------------------------------------------------------------------------------
_Tab:=tab_tmp(1,
   'SV'     ,'STRING[8]'   ,'stawka vat',
   'WWAL'   ,'REAL'        ,'wartość netto w walucie',
   'VWAL'   ,'REAL'        ,'wartość vat w walucie',
   'BWAL'   ,'REAL'        ,'wartość brutto w walucie',
   'WWAL_P' ,'REAL'        ,'wartość netto',
   'VWAL_P' ,'REAL'        ,'kwota vat',
   'BWAL_P' ,'REAL'        ,'wartość brutto');
_ok:=1;
FAP.cntx_psh();
FAP.index('FAP');
FAP.prefix(_a);
{? FAKS.SZ='Z'
||
   _korekta:=FAKS.T().KOR='T';
   {? FAP.first()
   ||
      {!
      |?
         {? _korekta
         || exec('wysw_kor','faktury_poz');
            {? _Tab.find_key(FAP.SV().KOD)
            || _Tab.WWAL+=FKOR.BWWAL;
               _Tab.VWAL+=FKOR.BVWAL;
               _Tab.BWAL+=FKOR.BBWAL;
               _Tab.WWAL_P+=FKOR.BWWAL_P;
               _Tab.VWAL_P+=FKOR.BVWAL_P;
               _Tab.BWAL_P+=FKOR.BBWAL_P;
               _Tab.put
            || _Tab.SV:=FAP.SV().KOD;
               _Tab.WWAL:=FKOR.BWWAL;
               _Tab.VWAL:=FKOR.BVWAL;
               _Tab.BWAL:=FKOR.BBWAL;
               _Tab.WWAL_P:=FKOR.BWWAL_P;
               _Tab.VWAL_P:=FKOR.BVWAL_P;
               _Tab.BWAL_P:=FKOR.BBWAL_P;
               _Tab.add
            ?};
            {? FAP.POZP=0
            || {? _Tab.find_key(FKOR.SV().KOD)
               || _Tab.WWAL-=FKOR.WWAL;
                  _Tab.VWAL-=FKOR.VWAL;
                  _Tab.BWAL-=FKOR.BWAL;
                  _Tab.WWAL_P-=FKOR.WWAL_P;
                  _Tab.VWAL_P-=FKOR.VWAL_P;
                  _Tab.BWAL_P-=FKOR.BWAL_P;
                  _Tab.put
               || _Tab.SV:=FKOR.SV().KOD;
                  _Tab.WWAL:=-FKOR.WWAL;
                  _Tab.VWAL:=-FKOR.VWAL;
                  _Tab.BWAL:=-FKOR.BWAL;
                  _Tab.WWAL_P:=-FKOR.WWAL_P;
                  _Tab.VWAL_P:=-FKOR.VWAL_P;
                  _Tab.BWAL_P:=-FKOR.BWAL_P;
                  _Tab.add
               ?}
            ?}
         || {? _Tab.find_key(FAP.SV().KOD)
            || _Tab.WWAL+=FAP.WWAL;
               _Tab.VWAL+=FAP.VWAL;
               _Tab.BWAL+=FAP.BWAL;
               _Tab.WWAL_P+=FAP.WWAL_P;
               _Tab.VWAL_P+=FAP.VWAL_P;
               _Tab.BWAL_P+=FAP.BWAL_P;
               _Tab.put
            || _Tab.SV:=FAP.SV().KOD;
               _Tab.BWAL:=FAP.BWAL;
               _Tab.WWAL_P:=FAP.WWAL_P;
               _Tab.VWAL_P:=FAP.VWAL_P;
               _Tab.BWAL_P:=FAP.BWAL_P;
               _Tab.add
            ?}
         ?};
         FAP.next()
      !}
   ?}
?};
FAP.cntx_pop();
_Tab


\r_sg_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: read - dokument księgowy - start grupa
::   WE: _a - F - faktura, K - korekta
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_edi:=exec('edi','edi_wspolne');
{? _edi.sza & var_pres('obdekredi')<=0
|| _param:=Plugin.runnable('BL_DKS_001');
   {? _param=1 || Plugin.run('BL_DKS_001',0) ?};
   return(1)
?};
exec('czytaj','#stalesys');
VAR_DEL.delete('__PAR','edi_dok');
OKRO_F.cntx_psh(); ROK_F.cntx_psh();
DOK.cntx_psh(); VPOZ.cntx_psh(); REJ.cntx_psh();
_typ:={? var_pres('_a')=type_of('') || _a || '' ?};
_param:=Plugin.runnable('BL_DKS_001');
{? _typ='' | 'FK'*_typ=0
||
   FUN.info('Nieprawidłowy parametr funkcji r_sg_dok.'@);
   return(-1)
?};
__ar:=SSTALE.AR; __ao:=SSTALE.AO;
_result:=exec('szuk_okr','okresy',DOKUM.DATA)<>null;
{? ~_edi.sza
|| OKRO_F.index('FIRMA_NR');
   OKRO_F.prefix(REF.FIRMA);
   OKRO_F.win_sel('WER2');
   {? OKRO_F.select(,1,25)
   || ROZNE.UT_OKROD:=OKRO_F.ref();
      _result:=1
   || ROZNE.UT_OKROD:=null();
      _result:=0
   ?}
?};
{? ~_result
|| {? _edi.sza
   || FUN.info('Nie znaleziono okresu dla bieżącej daty kalendarzowej.'@)
   ?}
|? OKRO_F.ZAM='T'
|| FUN.info('Okres %1 jest zamknięty.'@[OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ]);
   _result:=0
|? OKRO_F.ZAM_CON='T'
|| FUN.info('Okres %1 jest zamknięty controllingowo.'@[OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ]);
   _result:=0
|| SSTALE.AO:=ROZNE.UT_OKROD;
   SSTALE.AR:=ROZNE.UT_OKROD().ROK;
   ROZNE.ROKKON:=SSTALE.AR;
   __PARSES.setVal('OkresRok',SSTALE.AO);
   _result:=1
?};
{? _result
|| __PAR:=obj_new('ODD','REJ','DZ','DOK_REJ','RVAT','GRVAT','R','KK','K2','SL','SP_PL','OKRVAT');
   __PAR.SL:=__PAR.R:=__PAR.KK:=__PAR.K2:='';
   __PAR.OKRVAT:=__PAR.SP_PL:=__PAR.ODD:=__PAR.REJ:=__PAR.DZ:=__PAR.DOK_REJ:=__PAR.RVAT:=__PAR.GRVAT:=null;
   {? ~(var_pres('obdekredi')>0 & obdekredi=1)
   || exec('open_tabele','open_tab','F');
      DOK.index('REJ'); DOK.prefix();
      VPOZ.index('VDOK'); VPOZ.prefix();
      VPOZ.blank; DOK.blank;
      DOK.REJ:=null; DOK.DZ:=null; DOK.WYS:=null; DOK.DOK_REJ:=null;
      VPOZ.GRVAT:=null; VPOZ.RVAT:=null; VPOZ.R:='';
      SLOSLU.SLSLU:='';
      ODD.f_clear();
      __odd:=DOK.ODD:=OPERATOR.DEPT;
      edi_dok:=1;
      exec('tabkhini','kontrahent');
      {? BPMN.SYM_DOM='FKS' || exec('rodz_dok','edi_fo_ufd') ?};
      DOK.win_edit('KSDKOB03');
      DOK.fld_fml('REJ','BEFORE_EDIT',"OPERATOR.DEPT:=DOK.ODD; 1");
      {? _param=1 || Plugin.run('BL_DKS_001',0) ?};
      exec('tagger_tip_nag','tagger','DK',DOKUM.KH,DOKUM.FIRMA,_typ)
   ?};
   {? (var_pres('obdekredi')>0 & obdekredi=1) | DOK.edit({? _a='K' || "exec('chk_dok','edi_fo02','K')" || "exec('chk_dok','edi_fo02','F')" ?})
   || __PAR.ODD:=DOK.ODD;
      __PAR.SL:=SLOSLU.SLSLU;
      __PAR.R:=VPOZ.R;
      __PAR.KK:=VPOZ.KK;
      __PAR.K2:=VPOZ.K2;
      __PAR.REJ:=DOK.REJ;
      __PAR.DZ:=DOK.DZ;
      __PAR.DOK_REJ:=DOK.DOK_REJ;
      __PAR.RVAT:=DOK.RVAT;
      __PAR.GRVAT:=VPOZ.GRVAT;
      __PAR.SP_PL:=DOK.SP_PL;
      __PAR.OKRVAT:=OKRO_F.ref
   || _result:=0
   ?}
?};
VAR_DEL.delete('__tagvpztip');
{? ~_result
|| exec('r_eg_dok','edi_fo_ufd')
?};
_result


\r_eg_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: read - dokument księgowy - end grupa
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_edi:=exec('edi','edi_wspolne');
{? _edi.sza || return(1) ?};
{? var_press('__ar')>0 & var_press('__ao')>0
|| SSTALE.AR:=__ar; SSTALE.AO:=__ao;
   exec('open_tabele','open_tab')
?};
{? var_press('__odd')>0
|| OPERATOR.DEPT:=__odd
?};
exec('tabkhdel','kontrahent');
OKRO_F.cntx_pop(); ROK_F.cntx_pop();
REJ.cntx_pop(); VPOZ.cntx_pop(); DOK.cntx_pop();
VAR_DEL.delete('__PAR','edi_dok','__ar','__ao','__odd');
1


\dok_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: dodawanie dokumentu księgowego - start
::   WE: _a - czy ksef? 0/1
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys');
_edi:=exec('edi','edi_wspolne');
_param:=Plugin.runnable('BL_DKS_001');
{? _param=0  & _edi.sza & ~(var_pres('obdekredi')>0 & obdekredi=1)
|| _edi.log('Brak formuły na domyślne parametry dokumentu (wtyczka).'@);
   return(0)
?};
_ksef:={? var_pres('_a')>0 || _a='ksef' || 0 ?};
{? _ksef || exec('other_parties_se','edi_fo_ufd') ?};
_verify:=exec('verify','edi_xml');
{? _verify || return(1) ?};
VAR_DEL.delete('__REFDOK','__POZFDATE');
__POZFDATE:=tab_tmp(2,'LP','INTEGER','Lp','D','DATE','Data');
{? _edi.sza & ~(var_pres('obdekredi')>0 & obdekredi=1)
|| {? exec('szuk_okr','okresy',DOK.DOP)=null
   || _edi.log('Nie znaleziono okresu dla daty %1.'@[DOK.DOP]);
      return(0)
   |? OKRO_F.ZAM='T'
   || _edi.log('Okres %1 jest zamknięty.'@[OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ]);
      return(0)
   |? OKRO_F.ZAM_CON='T'
   || _edi.log('Okres %1 jest zamknięty controllingowo.'@[OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ]);
      return(0)
   || SSTALE.AO:=ROZNE.UT_OKROD;
      SSTALE.AR:=ROZNE.UT_OKROD().ROK;
      exec('open_tabele','open_tab','F');
      __PARSES.setVal('OkresRok',SSTALE.AO)
   ?}
?};
{? ~(var_pres('obdekredi')>0 & obdekredi=1)
|| DOK.clear();
   DOK.blank(1)
?};
{? var_press('__PAR')>0
|| DOK.ODD:=__PAR.ODD;
   DOK.REJ:=__PAR.REJ;
   DOK.RVAT:=__PAR.RVAT;
   DOK.DOK_REJ:=__PAR.DOK_REJ;
   DOK.SP_PL:=__PAR.SP_PL;
   DOK.OKRVAT:=__PAR.OKRVAT
|| DOK.OKRVAT:=SSTALE.AO
?};
DOK.DR:=exec('data','#blank');
DOK.KRAJ:=exec('kod_pl','slo_slu');
DOK.JORG:=FINFO.NAROD;
DOK.TR:='';
DOK.DR:=date();
DOK.D4:={? DOKUM.KSEFCDAT<>date(0,0,0) || DOKUM.KSEFCDAT
        |? DOKUM.DATA_ODB<>date(0,0,0) || DOKUM.DATA_ODB
        || DOKUM.DATAKONT
        ?};
DOK.ZAR:=exec('usr_zar','dok_fks');
DOK.A:=DOK.ZK:=DOK.ZP:=DOK.WSK_XD:='N';
DOK.DOKZRODL:=$DOKUM.ref();
DOK.E_DOC:=DOKUM.DOKUMI;
{? exec('get','#params',100376)='T' & var_pres('MERITHUB',DOK)>0 || DOK.MERITHUB:='N' ?};
exec('fl_decl','dekret_aut');
exec('dek_decl','dekret_aut');
exec('sd_decl','dekret_aut');

:: Wywołanie formuły na domyślne parametry
{? _param & ~(var_pres('obdekredi')>0 & obdekredi=1)
|| {? Plugin.run('BL_DKS_001',1)<>1 & _edi.sza
   || _edi.log('Brak formuły na domyślne parametry dokumentu. (wtyczka)'@);
      return(0)
   ?}
?};
_partagger:=exec('get','#params',300913,type_of('a'));
{? _partagger='T' | menu_pth()='RS' | menu_txt()='Rejestruj dokument księgowy'
|| exec('tagger_tip_nag','tagger','DK',DOKUM.KH,DOKUM.FIRMA,{? DOKUM.BL_TYPE='INV_CORR' || 'K' || 'F' ?})
?};
{? exec('chk_par','edi_fo02','FKS') || return(0) ?};
DOK.use('doku'+SSTALE.AR().KOD+form(SSTALE.AO().NR,-2));
POZ.use('pozy'+(DOK.name()+4));
DOKPOLA.use('dokp'+(DOK.name()+4));
DOK.cntx_psh();
DOK.index('REJ');
DOK.prefix(DOK.REJ);
{? DOK.last() || _vnr:=DOK.NR+1 || _vnr:=1 ?};
DOK.cntx_pop();
DOK.NR:=_vnr;
{? DOK.add()
|| {? ~(var_pres('obdekredi')>0 & obdekredi=1)
   || DOKUM.REFSQL:=$DOK.ref; DOKUM.put()
   ?};
   exec('edit','dok_ksef',0);
   exec('dokz','edi_fo_ufd')
|| exec('add_kom','#message','Błąd podczas dodawania dokumentu księgowego'@,2,__XML.ID);
   return(0)
?};
1


\vpoz_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: dodawanie pozycji VAT - start
::   WE: [_a] - formuła na ustawienie parametrów domyślnych
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__V');
__V:=obj_new(
   'WN','WV',
   'WAL','WAL_WN','WAL_WV',
   'SV_ID','SV_P','SV_TSID'
);
__V.WN:=0; __V.WV:=0;
__V.WAL:=''; __V.WAL_WN:=0; __V.WAL_WV:=0;
__V.SV_ID:=''; __V.SV_P:='bd'; __V.SV_TSID:='';
_edi:=exec('edi','edi_wspolne');
_param:=Plugin.runnable('BL_DKS_001');
_verify:=exec('verify','edi_xml');
{? _verify || return(1) ?};
{? DOK.WAL<>FINFO.NAROD || return(1) ?};
_grbef:=VPOZ.GRVAT;
_rk:=VPOZ.R;
_kk:=VPOZ.KK;
_kkk:=VPOZ.K2;
VPOZ.cntx_psh();
VPOZ.use('pozv'+(DOK.name()+4));
VPOZ.index('VDOK'); VPOZ.prefix();
VPOZ.blank(1);
VPOZ.DOK:=DOK.ref();
{? var_pres('obdekredi')>0 & obdekredi=1
|| VPOZ.GRVAT:=_grbef;
   VPOZ.R:=_rk;
   VPOZ.KK:=_kk;
   VPOZ.K2:=_kkk
?};
:: PARAMETRYZACJA
{? var_press('__PAR')>0
|| VPOZ.R:=__PAR.R;
   VPOZ.GRVAT:=__PAR.GRVAT;
   VPOZ.RVAT:=__PAR.RVAT;
   VPOZ.KK:=__PAR.KK;
   VPOZ.K2:=__PAR.K2;
   VPOZ.OKRVAT:=__PAR.OKRVAT
|| VPOZ.RVAT:=DOK.RVAT;
   VPOZ.OKRVAT:=DOK.OKRVAT
?};
:: Wywołanie formuły na domyślne parametry
{? _param & ~(var_pres('obdekredi')>0 & obdekredi=1)
|| Plugin.run('BL_DKS_001',2)
?};
KH.cntx_psh();
DOKUM.KH(); _czytagger:=KH.TAGGER; _khuid:=KH.uidref(); _khref:=KH.ref();
KH.cntx_pop();
TAGGER.cntx_psh();
{? _czytagger='T'
|| exec('tag_mask','tagger',_khref,'g');
   exec('tagger_tip_vpz_ksef','tagger','DK',_khuid,$DOK.ODD().FIRMA,$DOK.ODD,DOK.REJ().KOD)
?};
TAGGER.cntx_pop();
1


\vpoz_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.37]
:: OPIS: dodawanie pozycji VAT - end
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
{? _verify || return(1) ?};
{? DOK.WAL<>FINFO.NAROD || return(1) ?};
{? var_pres('edipozfv')>0 & ~edipozfv || VPOZ.cntx_pop(); return(1) ?};
VPOZ.PR:=exec('sv','edi_fo03',__V.SV_ID,__V.SV_P,'VAT');
exec('setvatodl','dok_fks');
{? var_pres('__POZFDATE')>0 & __POZFDATE.first()
|| VPOZ.D:=__POZFDATE.D;
   __POZFDATE.del()
?};
{? ~VPOZ.add()
|| exec('add_kom','#message','Błąd podczas dodawania pozycji VAT.'@,2,__XML.ID)
?};
VPOZ.cntx_pop();
1


\formplat_fks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: Forma platnosci dla dokumentów księgowych i fakutr w obiegu
::   WE: _a - OBG/DKS
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
ZR_SLO.cntx_psh();
SLO.cntx_psh();
SLO.index('SL');
SLO.prefix(XINFO.SLP);
{? SLO.first()
|| _wyn:=null();
   _p_0p:=null();
   _p_d0:=null();
   _p_0p_dni:=0;
   {? __N.P_TERMS=0
   || {? _a='OBG'
      || {? EDOKUM.TP<>date(0,0,0) & EDOKUM.DOP<>date(0,0,0) & EDOKUM.TP>EDOKUM.DOP
         || __N.P_TERMS:=EDOKUM.TP-EDOKUM.DOP
         ?}
      || {? DOK.D3<>date(0,0,0) & DOK.DOP<>date(0,0,0) & DOK.D3>DOK.DOP
         || __N.P_TERMS:=DOK.D3-DOK.DOP
         ?}
      ?}
   ?};
   {? XINFO.SLP
   ||
      SLO.index('SL');
      SLO.prefix(XINFO.SLP);
      _loop:=SLO.first();
      {!
      |? _loop
      |! _pl_got:=exec('plat_czy_gotowka','slo_slu');
         _pl_kar:=exec('plat_czy_karta','slo_slu');
         _pl_czek:=exec('plat_czy_czek','slo_slu');
         _pl_prz:=exec('plat_czy_przelew','slo_slu');
         _pl_dni:=0;
         {? ~_pl_got & ~_pl_kar & ~_pl_czek
         || _pl_dni:=exec('plat_dni','slo_slu')
         ?};
         {? __N.P_MEANS='10' & _pl_got
         || _wyn:=SLO.ref()
         |? __N.P_MEANS='20' & _pl_czek
         || _wyn:=SLO.ref()
         |? __N.P_MEANS='48' & _pl_kar
         || _wyn:=SLO.ref()
         |? (__N.P_MEANS='31' | __N.P_MEANS='42') & ~_pl_got & ~_pl_kar & ~_pl_czek
         || {? _pl_dni=__N.P_TERMS & _pl_prz
            || _wyn:=SLO.ref()
            |? _pl_dni=__N.P_TERMS & ~_pl_prz
            || _p_d0:=SLO.ref()
            |? _pl_dni<>__N.P_TERMS & _pl_prz
            || {? _p_0p=null() | (_pl_dni<__N.P_TERMS & (_p_0p_dni<_pl_dni | __N.P_TERMS<_p_0p_dni))
                  | (_pl_dni>__N.P_TERMS & _p_0p_dni>_pl_dni)
               || _p_0p:=SLO.ref();
                  _p_0p_dni:=_pl_dni
               ?}
            ?}
         ?};
         _loop:=_wyn=null() & SLO.next()
      !};
      {? _wyn=null() & (__N.P_MEANS='31' | __N.P_MEANS='42')
      || {? _p_d0<>null()
         || _wyn:=_p_d0
         |? _p_0p<>null()
         || _wyn:=_p_0p
         ?}
      ?};
      {? _wyn=null()
      || SLO.index('SL_TR');
         SLO.prefix(XINFO.SLP,__N.P_DESC,);
         {? SLO.first() || _wyn:=SLO.ref() ?}
      ?}
   ?};
   {? _verify
   || {? _wyn=null()
      || exec('add_kom','#message','Nie znaleziono formy płatności %1 - %2.'@[__N.P_MEANS,__N.P_DESC],4,__XML.ID)
      ?}
   || {? _wyn<>null()
      || {? _a='OBG'
         || EDOKUM.PLATNOSC:=_wyn;
            {? EDOKUM.TP=date(0,0,0) & ~(~EDOKUM.TYP().TYPVATPR & EDOKUM.PLATNOSC=null & typobi<>2)
            || _rd:=exec('get_par','slo_slu',EDOKUM.PLATNOSC,6);
               EDOKUM.TP:={? _rd='S' || EDOKUM.DOP |? _rd='O' || EDOKUM.DO || EDOKUM.DW ?}+#__N.P_TERMS
            ?}
         || DOK.SP_PL:=_wyn;
            {? DOK.DTO<>date(0,0,0) & DOK.DOK_REJ().PR<>'T'
            || {? DOK.D3=date(0,0,0)
               || _rd:=exec('get_par','slo_slu',DOK.SP_PL,6);
                  DOK.D3:={? _rd='S' || DOK.DOP |? _rd='O' || DOK.D4 || DOK.DTO ?}+#__N.P_TERMS
               ?}
            ?}
         ?}
      ?}
   ?}
?};
SLO.cntx_pop();
ZR_SLO.cntx_pop();
1


\jm2ufd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: konwersja jm do kodu uniwersalnego
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::exec('jm','edi_form','E',FAP.JM().KOD)
FAP.JM().KOD


\ufd2jm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: konwersja z kodu uniwersalnego na jm
::   WE: _a
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::exec('jm','edi_fo_ufd',_a);
_a


\sv2ufd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: konwersja stawki vat do kodu uniwersalnego
::   WE: _a - SLO.ref()
::       _b - [0/1] eksportowa
::       _c - [0/1] odwrotne obciążenie
::       _d - kod kraju, domyslnie PL
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_d')<>type_of('') | +_d<>2
|| _d:='PL'
?};
{? 1
||
   exec('sv2ufd_main','edi_fo_ufd',_a,_b,_c,_d)
||
   exec('sv2ufd_pef','edi_fo_ufd',_a,_b,_c,_d)
?}


\sv2ufd_main
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: zwraca kod odpowiadajacy stawce vat
::   WE: _a - SLO.ref()
::       _b - [0/1] eksportowa
::       _c - [0/1] odwrotne obciążenie
::       _d - kod kraju
::   WY: kod stawki vat
::----------------------------------------------------------------------------------------------------------------------
_result:='';
SLU.cntx_psh();
SLU.index('NAZ');
SLU.prefix('~STAWKI VAT '+_d);
{? SLU.first()
||
   SLO.cntx_psh();
   SLO.index('SL');
   SLO.prefix(SLU.ref());
   {? SLO.seek(_a)
   ||
      _result:=
         {? SLO.KOD=' -'         || 'NA'
         |? SLO.KOD=' -o' | _c   || 'AE'
         |? SLO.KOD=' -zw0'      || 'E'
         |? SLO.KOD='Zwol.'      || 'E'
         |? SLO.KOD+1='%'        || 'S'
         || ''
         ?}
   ?};
   SLO.cntx_pop();
   ~~
?};
SLU.cntx_pop();
_result


\sv2ufd_pef
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: konwersja stawki vat do kodu uniwersalnego
::   WE: _a - SLO.ref()
::       _b - [0/1] eksportowa
::       _c - [0/1] odwrotne obciążenie
::       _d - kod kraju
::   WY: kod stawki vat
::----------------------------------------------------------------------------------------------------------------------
_result:='';
SLU.cntx_psh();
SLU.index('NAZ');
SLU.prefix('~STAWKI VAT '+_d);
{? SLU.first()
||
   SLO.cntx_psh();
   SLO.index('SL');
   SLO.prefix(SLU.ref());
   {? SLO.seek(_a)
   ||
      _result:=
         {? SLO.KOD=' -' & _b    || 'G'
         |? SLO.KOD=' -'         || 'O'
         |? SLO.KOD=' -o' | _c   || 'AE'
         |? SLO.KOD=' -zw0'      || 'K'
         |? SLO.KOD='Zwol.'      || 'E'
         |? SLO.KOD+1='%'        || 'S'
         || ''
         ?}
   ?};
   SLO.cntx_pop();
   ~~
?};
SLU.cntx_pop();
_result


\sv2ufd_calc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: konwersja stawki vat do kodu uniwersalnego - obliczenie
::   WE: _a - SLO.ref() (stawka VAT)
::       _b - 0 - dla dokumentu (domyslnie), 1 - dla dokumentu korygowanego
::   WY: kod
::----------------------------------------------------------------------------------------------------------------------
_sv:=_a;
_jak:=0;
{? var_pres('_b')=type_of(0)
|| _jak:=_b
?};
_ufdsv:='';
{? _jak=1
|| _eksport:=exec('FindAndGet','#table',FAKS,FAKS.LKSQL,,"T().EXPORT='T'",0);
   _odw_obc:=exec('FindAndGet','#table',FAKS,FAKS.LKSQL,,"NDVAT='O'",0);
   _kraj:=exec('FindAndGet','#table',FAKS,FAKS.LKSQL,,"KRAJ_VAT().KODISO",'')
|| _eksport:=(FAKS.T().EXPORT='T');
   _odw_obc:=(FAKS.NDVAT='O');
   _kraj:=FAKS.KRAJ_VAT().KODISO
?};
_ufdsv:=exec('sv2ufd','edi_fo_ufd',_sv,_eksport,_odw_obc,_kraj);
_ufdsv


\ufd2sv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: wyznacza SLO.ref() dla kodu stawki vat _a
::   WE: _a - kategoria
::       _b - [STRING] procent
::       _c - rodzaj
::   WY: null/SLO.ref()
::----------------------------------------------------------------------------------------------------------------------
{? 1
||
   exec('ufd2sv_main','edi_fo_ufd',_a,_b,_c)
||
   exec('ufd2sv_pef','edi_fo_ufd',_a,_b,_c)
?}


\ufd2sv_main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: wyznacza SLO.ref() dla kodu stawki vat _a
::   WE: _a - kategoria
::             Kod   Opis
::             E     (exempt) - zwolniony
::             S     (standard) - inna, wyrażona liczba ("standardowa")
::             NA    (not applicable) – nie podlega
::             AE    (reverse charge) - odwrotne obciążenie
::       _b - [STRING] procent
::       _c - rodzaj
::   WY: null/SLO.ref()
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
{? _c='VAT'
||
   {? _a='' & _b<>'bd'
   ||
:: obsługa stawek KSeF
      _a:={? _b='zw' || 'E' |? _b='oo' || 'AE' |? _b='np' || 'NA' || 'S' ?}
   ?};
   SLO.cntx_psh();
   SLO.index('SL');
   SLU.cntx_psh();
   SLU.index('NAZ');
   SLU.prefix('~STAWKI VAT PL');
   {? ~SLU.first()
   ||
      ~~

   |? _a='S'
   ||
::    'bd' przypisywane w formule - start document
      {? _b<>'bd'
      ||
         _val:=(' '+($(#_b)))+2;
         SLO.prefix(SLU.ref(),_val+' %');

         {? SLO.first() || _result:=SLO.ref() ?}
      ?}

   |? _a='AE'
   ||
      SLO.prefix(SLU.ref(),' -o');
      {? SLO.first() || _result:=SLO.ref() ?}

   |? _a='E'
   ||
      SLO.prefix(SLU.ref(),'Zwol.');
      {? SLO.first() || _result:=SLO.ref() ?}

   |? _a='NA'
   ||
      SLO.prefix(SLU.ref(),' -');
      {? SLO.first() || _result:=SLO.ref() ?}
   ?};
   SLU.cntx_pop();
   SLO.cntx_pop()
?};
_result


\ufd2sv_pef
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: wyznacza SLO.ref() dla kodu stawki vat _a
::   WE: _a - kategoria
::             Kod   Opis
::             AE    Odwrotne opodatkowanie - Vat Reverse Charge
::             E     Nie podlega opodatkowaniu - Exempt from Tax
::             S     Standardowa stawka - Standard rate
::             Z     0% opodatkowania - Zero rated goods
::             G     Pozycja eksportowana, bez naliczania podatku - Free export item, tax not charged
::             O     Usługi nieopodatkowane - Services outside scope of tax
::             K     Wyłączenie opodatkowania  dla wewnątrz wspólnotowej dostawy towarów
::                   lub usług - VAT exempt for EEA intra-community supply of goods and services
::             L     Podatek pośredni na Wyspach Kanaryjskich (Canary
::             M     Podatek w przypadku produkcji, usług i importu w Ceucie i Melilli
::       _b - [STRING] procent
::       _c - rodzaj
::   WY: null/SLO.ref()
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
{? _c='VAT'
||
   SLO.cntx_psh();
   SLO.index('SL');
   SLU.cntx_psh();
   SLU.index('NAZ');
   SLU.prefix('~STAWKI VAT PL');
   {? ~SLU.first()
   ||
      ~~

   |? _a='S'
   ||
::    'bd' przypisywane w formule - start document
      {? _b<>'bd'
      ||
         _val:=(' '+($(#_b)))+2;
         SLO.prefix(SLU.ref(),_val+' %');

         {? SLO.first() || _result:=SLO.ref() ?}
      ?}

   |? _a='AE'
   ||
      SLO.prefix(SLU.ref(),' -o');
      {? SLO.first() || _result:=SLO.ref() ?}

   |? _a='E'
   ||
      SLO.prefix(SLU.ref(),'Zwol.');
      {? SLO.first() || _result:=SLO.ref() ?}

   |? _a='Z'
   ||
      SLO.prefix(SLU.ref(),' 0 %');
      {? SLO.first() || _result:=SLO.ref() ?}

   |? _a='G'
   ||
      SLO.prefix(SLU.ref(),' -');
      {? SLO.first() || _result:=SLO.ref() ?}

   |? _a='O'
   ||
      SLO.prefix(SLU.ref(),' -');
      {? SLO.first() || _result:=SLO.ref() ?}

   |? _a='K'
   ||
      SLO.prefix(SLU.ref(),' -zw0');
      {? SLO.first() || _result:=SLO.ref() ?}
   ?};
   SLU.cntx_pop();
   SLO.cntx_pop()
?};
_result


\bl_faks_zk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.41]
:: OPIS: poczatek dokumentu korekty zakupu
::   WE: _a - typ dokumentu korekty zakupu
::       _b - KH.ref
::       _c - numer dokumentu korygowanego
::       _d - data dokumentu korygowanego
::       _e - data wystawienia korekty
::       _f - numer korekty
::       _g - numer KSeF dokumentu korygowanego
::       _h - KH_ODB.ref()
::       _i - wyświetlanie komunikatu o nieznalezieniu 0/1
::----------------------------------------------------------------------------------------------------------------------
_typsp:=_a;
_kh:=_b;
_kid:=_c;
_kda:=_d;
_dw:=_e;
_did:=_f;
_kks:=_g;
_khodb:=_h;
_info_jest_czy:=_i;

_verify:=exec('verify','edi_xml');
_edi:=exec('edi','edi_wspolne');

_context:=_edi.context;
_sza:=_edi.sza;
_ocr:={? _context.TYPE=exec('context_type_bl','edi_wspolne') || _context.OCR ?};

:: szukanie dokumentu do korekty
:: _kref - FAKS.ref() dokumentu korygowanego
_kref:=null();
{? _kh & ((_kid<>'' & _kda<>date(0,0,0)) | _kks<>'')
|| _kref:=exec('faks_znajdz','edi_fo_ufd',_kh,_kid,_kda,_kks,_did,0,(_ocr & _sza=2),_info_jest_czy)
|| {? _kh = null()
   || _msg:='Nie podano kontrahenta'@;
      {? var_pres('FIND_KH2')=type_of('')
      || {? FIND_KH2<>''
         || _msg:=_msg+' (nieznany kod: %1)'@[FIND_KH2]
         || _msg:=_msg+' (nie podano kodu)'@
         ?}
      ?};
      _msg+='.';
      exec('add_kom','#message',_msg,2,_did)
   ?};
   {? _kid=''
   || _msg:='Nie podano numeru korygowanego dokumentu.'@;
      exec('add_kom','#message',_msg,2,_did)
   ?};
   {? _kda=date(0,0,0)
   || _msg:='Nie podano daty korygowanego dokumentu.'@;
      exec('add_kom','#message',_msg,2,_did)
   ?};
   {? _kks=''
   || _msg:='Nie podano numeru KSeF korygowanego dokumentu.'@;
      exec('add_kom','#message',_msg,2,_did)
   ?};
   _msg:='Nie można odnaleźć korygowanego dokumentu. Nie utworzono dokumentu korygującego.'@;
   exec('add_kom','#message',_msg,4,_did)
?};

{? _kref=null()
||
   {? _verify=0 || EDI_Z.POMIN:='T' ?};
   BEER.WYSTFAKS:=null();
   return(0)

|? _verify
||
   BEER.WYSTFAKS:=_kref;
   return(1)
?};
:: dodanie nagłówka korekty
_result:=0;
_kor:=exec('FindAndGet','#table',FAKS,$_kref,,"
   _kda:=_b;
   exec('szuk_kor','faktury_nag',$FAKS.ref(),_kda,1)
",0,_kda);
{? _kor=0 | xx_nam=''
|| _fksql:=$_kref;
   _lksql:=$_kref;
   _ofnum:=1;
   _frab:=exec('FindAndGet','#table',FAKS,$_kref,,"FAKS.RAB",0)
|| _fksql:=$_kref;
   _lksql:=form(xx_nam)+((('0'*8)+(-BB.hex(xx_ref)))+8);
   _ofnum:=xx_num+1;
   _frab:=xx_rab
?};
_dsprz:=exec('FindAndGet','#table',FAKS,$_kref,,"FAKS.D",date(0,0,0));
_fsym:=exec('FindAndGet','#table',FAKS,$_kref,,"FAKS.SYM",'');
_kor_id:=exec('FindAndGet','#table',FAKS,$_kref,,"FAKS.ID",'');
_wal:=exec('FindAndGet','#table',FAKS,$_kref,,"FAKS.WAL",null());
_krs:=exec('FindAndGet','#table',FAKS,$_kref,,"FAKS.KRS",0);
_nkrs:=exec('FindAndGet','#table',FAKS,$_kref,,"FAKS.NKRS",0);
_dtk:=exec('FindAndGet','#table',FAKS,$_kref,,"FAKS.DTK",date(0,0,0));
_ndtk:=exec('FindAndGet','#table',FAKS,$_kref,,"FAKS.NDTK",date(0,0,0));

FAKS.clear(); FAKS.blank(); FAKS.memo_set(,'UWAGI');
{? exec('add','faktury_nag',_typsp,_dsprz,_lksql,_kh,_fksql,_fsym,,_frab,,,_dw,,_ofnum,_khodb,,_kor_id)
||
   exec('polafaks_get','jpk_log',FAKS.ref(),FAKS);
   FAKS.SP_WYM:='N';
   BEER.WYSTFAKS:=FAKS.ref();
   {? _wal<>null() & _wal<>FAKS.WAL
   || FAKS.WAL:=_wal;
      FAKS.KRS:=_krs;
      FAKS.NKRS:=_nkrs;
      FAKS.DTK:=_dtk;
      FAKS.NDTK:=_ndtk
   ?};
   exec('akt_kor','faktury_nag');
   _result:=1
?};
_result


\rodz_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: Formuła ustawiająca parametry dekretacji podczas rejestracji dokumentu księgowego w FKS
::----------------------------------------------------------------------------------------------------------------------
{? TREE_REJ.G_R='J'
|| ODD.cntx_psh(); ODD.prefix();
   {? ODD.seek(BB.sqlint(TREE_REJ.REF),form(8+TREE_REJ.REF)) || DOK.ODD:=ODD.ref() ?};
   ODD.cntx_pop()
|? TREE_REJ.G_R='G'
|| REJ.cntx_psh();
   GR_DOK.cntx_psh(); GR_DOK.prefix();
   {? GR_DOK.seek(BB.sqlint(TREE_REJ.REF),form(8+TREE_REJ.REF))
   || DOK.ODD:=GR_DOK.REJ().ODD; DOK.REJ:=GR_DOK.REJ; DOK.DZ:=GR_DOK.ref()
   ?};
   GR_DOK.cntx_pop(); REJ.cntx_pop()
|? TREE_REJ.G_R<>'W' & REJ.ROK=SSTALE.AR
|| DOK.ODD:=REJ.ODD;
   DOK.REJ:=REJ.ref();
   SSTALE.AR();
   {? SSTALE.AO().NAZ='Bilans otwarcia' & ROK_F.prev()
   || DOK_REJ.index('NAZ'); DOK_REJ.prefix(REJ.ref);
      _jest:=0;
      {? DOK_REJ.first()
      || {!|? _jest:=DOK_REJ.SLO().KOD='KOR_BO'; _jest=0 & DOK_REJ.next() !}
      ?};
      {? _jest
      || DOK.DOK_REJ:=DOK_REJ.ref()
      ?}
   || SLO.prefix();
      DOK_REJ.index('NAZ');  DOK_REJ.prefix(REJ.ref);
      {? DOK_REJ.size()=1
      || DOK_REJ.first(); DOK.DOK_REJ:=DOK_REJ.ref()
      || DOK_REJ.prefix();
         DOK_REJ.blank(1); DOK_REJ.REJ:=REJ.ref();  DOK_REJ.DM:='T';
         {? DOK_REJ.find_rec() || DOK.DOK_REJ:=DOK_REJ.ref() || DOK.DOK_REJ:=null ?}
      ?};
      {? DOK.DOK_REJ().SLO().KOD='VAT' | DOK.DOK_REJ().SLO().KOD='SAD'
      || VAT_REJ.index('REJ_SYM'); VAT_REJ.prefix(REJ.ref);
         {? VAT_REJ.size()=1
         || VAT_REJ.first(); DOK.RVAT:=VAT_REJ.ref()
         || VAT_REJ.prefix();
            VAT_REJ.blank(1); VAT_REJ.REJ:=REJ.ref(); VAT_REJ.DM:='T';
            {? VAT_REJ.find_rec() || DOK.RVAT:=VAT_REJ.ref() || DOK.RVAT:=null ?}
         ?};
         {? DOK.RVAT().RVAT().GRVAT
         || GR_VAT.index('REJ_GR'); GR_VAT.prefix();
            {? GR_VAT.find_key(DOK.REJ,DOK.RVAT().RVAT().GRVAT)
            || VPOZ.GRVAT:=GR_VAT.ref()
            ?}
         ?}
      ?}
   ?}
?};
1


\TaxCategoryCode
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: TaxCategoryCode
::   WE:
::   WY: -1/0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
_edi:=exec('edi','edi_wspolne');
_context:=_edi.context;
_ocr:={? _context.TYPE=exec('context_type_bl','edi_wspolne') || _context.OCR ?};
FAP.SV:=exec('ufd2sv','edi_fo_ufd',__P.SV_ID,__P.SV_P,'VAT');
{? FAP.SV<>null()
||
   1
||
   {? _verify
   ||
      _msg:='Brak stawki vat (%1,%2,%3) w systemie.'@[__P.SV_ID,__P.SV_P,'VAT'];
      exec('add_kom','#message',_msg,2,__XML.ID);
      {? FAKS.ID<>'' | FAKS.SYM<>'' || exec('add_kom','#message',_msg,2,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?}) ?}
   ?};
   {? _ocr || {? _verify || -1 || -2 ?} || 0 ?}
?}


\seller_se
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: formuła start element dla kontrahenta
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
VAR_DEL.delete('__KH');
_kh2:=obj_new('NIP','KH_NAZ','KH_UL','KH_M','KH_P');
_kh2.NIP:=_kh2.KH_NAZ:=_kh2.KH_UL:=_kh2.KH_M:=_kh2.KH_P:='';
__KH:=obj_new('DOK');
__KH.DOK:=_kh2;
1


\seller_ee
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: formuła end element dla kontrahenta
::   WE: _a - OBG / FKS
::   WT: 0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
{? ~_verify
|| {? (_a='OBG' & EDOKUM.KHKH=null()) | (_a='FKS' & DOK.NIP='')
   || {? PAR_SKID.get(119)='T'
      || _gus:=exec('kh_gus','edi_fo_ufd',__KH.DOK.NIP);
         {? _gus
         || exec('KH_SET','edi_fo_ufd',_a,1)
         ?}
      |? PAR_SKID.get(119)='J'
      || exec('KH_J_SET','edi_fo_ufd',_a,PAR_SKID.get(120))
      ?}
   ?}
?};
VAR_DEL.delete('__KH');
1


\kh_gus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Pobiera dane kontrahenta z GUS podczas rejestracji faktury z nieznanego źródła
::   WE: _a - poszukiwany NIP
::----------------------------------------------------------------------------------------------------------------------
ROZNE.NRNLR:=_a;
_ret:=0;
_kh:=exec('danePobierzPelnyRaport','gus_ws');
{? var_press('nazwa') & fexists(nazwa,1)
|| ferase(nazwa,1);
   &nazwa
?};
{? _kh=~~
|| return(0)
?};
{? 3+_kh<>'ESC'
|| {? _kh<>''
   || _ok:=0; _pyt:=1;
      _lista:=spli_str(_kh,'\n');
      {? obj_len(_lista)>1
      || _nr:=1;
::         _nr:=exec('gus_lista','!zws_par_kkhr',_lista);
         {? _nr
         || _ok:=1;
            _kh:=_lista[_nr]
         ?}
      || _ok:=1
      ?};
      {? _ok
      || KH.prefix();
         KH.blank();
         exec('get_from_gus2','nipyue',_kh,0,0);
         KH.KOD:=exec('kh_kod','%skanuj');
         KH.SKR:=exec('kh_skr','%skanuj');
         _ret:=KH.add()
      ?}
   ?}
?};
_ret


\check_jm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: Sprawdzenie oraz wpisanie jednostki miary dla pozycji faktury do tabeli tymczasowej
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
{? _verify || return(1) ?};
_jm:=exec('ufd2jm','edi_fo_ufd',__XML.VAL);
_czyPozf:={? var_pres('__REJ_POZF')>0 || __REJ_POZF || 1 ?};
{? _jm<>''
|| JM.cntx_psh();
   JM.index('KOD'); JM.prefix(_jm,_jm,);
   {? JM.first()
   || POZF.JM:=JM.ref()
   || {? _czyPozf
      || exec('add_kom','#message','Pozycja %1: (%2) - Brak jednostki miary w słowniku.'[$POZF.LP,__XML.VAL],2,__XML.ID)
      ?}
   ?};
   JM.cntx_pop()
|| {? _czyPozf
   || exec('add_kom','#message','Pozycja %1: Nieznana jednostka miary (%2).'[$POZF.LP,__XML.VAL],2,__XML.ID)
   ?}
?};
1


\evat_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: dodawanie pozycji VAT - end
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.WAL<>FINFO.NAROD || return(1) ?};
_verify:=exec('verify','edi_xml');
{? _verify || return(1) ?};
EVAT.PR:=exec('sv','edi_fo03',__V.SV_ID,__V.SV_P,'VAT');
{? ~EVAT.add()
|| exec('add_kom','#message','Błąd podczas dodawania pozycji VAT.'@,2,__XML.ID)
?};
EVAT.cntx_pop();
1


\pozf_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: dodawnie pozycji faktury - end
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__P','__IDPOZF','__REJ_POZF');
_verify:=exec('verify','edi_xml');
{? _verify || return(1) ?};
{? var_pres('edipozfv')>0 & ~edipozfv || POZF.cntx_pop(); VAR_DEL.delete('__L_DESC'); return(1) ?};
{? var_pres('__FA')>0 & var_pres('KURSWALUTYZ',__FA)=0 || __FA.KURSWALUTYZ:=POZF.KURS ?};
{? POZF.WB=0 || POZF.WB:=POZF.WN+POZF.WV ?};
{? ~POZF.add()
|| exec('add_kom','#message','Błąd podczas dodawania pozycji faktury.'@,2,__XML.ID)
|| {? var_pres('__L_DESC')>0
   || _txt:=__L_DESC.DESC;
      _btxt:=POZF.memo_txt(,1,'UWAGI');
      _txt:=_btxt+_txt+'\n';
      POZF.memo_set(_txt,'UWAGI');
      POZF.memo_put(,'UWAGI');
      POZF.put();
      VAR_DEL.delete('__L_DESC')
   ?}
?};
{? var_pres('__POZFDATE')>0
|| __POZFDATE.LP:=POZF.LP;
   __POZFDATE.D:=POZF.DT;
   __POZFDATE.add()
?};
POZF.cntx_pop();
1


\r_sg_wni
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.37]
:: OPIS: read - wniosek w obiegu - start grupa
::----------------------------------------------------------------------------------------------------------------------
_edi:=exec('edi','edi_wspolne');
{? _edi.sza || return(1) ?};
_param:=Plugin.runnable('BL_OBE_001');
exec('czytaj','#stalesys');
VAR_DEL.delete('__PAR');
__PAR:=obj_new('ODD','TYP','SL','PAY','KOR');
__PAR.ODD:=__PAR.TYP:=__PAR.SL:=''; __PAR.PAY:=null;
EDOKUM.cntx_psh(); ETYPY.cntx_psh();
ROK_F.cntx_psh(); OKRO_F.cntx_psh();
__ar:=SSTALE.AR; __ao:=SSTALE.AO;
_result:=exec('szuk_okr','okresy',date())<>null;
{? ~_result
|| FUN.info('Nie znaleziono okresu dla bieżącej daty kalendarzowej.'@)
|? OKRO_F.ZAM='T'
|| FUN.info('Okres %1 jest zamknięty.'@[OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ])
|? OKRO_F.ZAM_CON='T'
|| FUN.info('Okres %1 jest zamknięty controllingowo.'@[OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ])
|| SSTALE.AO:=ROZNE.UT_OKROD;
   SSTALE.AR:=ROZNE.UT_OKROD().ROK;
   ROZNE.ROKKON:=SSTALE.AR;
   _result:=1
?};
{? _result
|| __PARSES.setVal('OkresRok',SSTALE.AO);
   OPERATOR.DEPT:=__PARSES.getVal('JednostkaKsięgowa').REF;
   exec('open_tabele','open_tab','F');
   EDOKUM.index('DISP'); EDOKUM.prefix();
   ETYPY.index('UNIK'); ETYPY.prefix();
   OBIEGI.TYPOBIEG:=exec('bl_typ','obiegi',typobi);
   OBIEGI.ODD:=null; OBIEGI.TYP:=null; SKID.SL_KH:=OBIEGI.SL_KH:=''; EDOKUM.PLATNOSC:=null;
   exec('tabkhini','kontrahent');
   _win:=exec('edokum_par','edi_fo_ufd',2);
   EDOKUM.win_edit(_win);
   ODD.f_clear();
   OBIEGI.fld_fml('ODD','BEFORE_EDIT',"{? OPERATOR.DEPT<>null || 0 || 1 ?}");
   OBIEGI.fld_fml('ODD','AFTER_EDIT',"1");
   OBIEGI.fld_fml('SL_KH','AFTER_EDIT',"1");
   OBIEGI.fld_fml('ODD','BEFORE_DISPLAY',"{? OPERATOR.DEPT<>null || OBIEGI.ODD:=OPERATOR.DEPT || 1 ?}");
   {? _param=1 || Plugin.run('BL_OBE_001',0) ?};
   {? EDOKUM.edit("exec('edokum_par_check','edi_fo_ufd',2)")
   || __PAR.ODD:=OBIEGI.ODD().OD;
      __PAR.SL:=OBIEGI.SL_KH;
      1
   || _result:=0
   ?}
?};
{? ~_result
|| exec('r_eg_edok','edi_fo_ufd')
?};
_result


\obe_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.37]
:: OPIS: Tworzy okienko redagowania dla parametrów wniosków w obiegu
::----------------------------------------------------------------------------------------------------------------------
_red:=EDOKUM.mk_edit('Parametry wniosku w obiegu'@,,'ob_red');
EDOKUM.win_esep(_red,'Dane ogólne'@);
EDOKUM.win_efld(_red,OBIEGI,'ODD','OD','ODDZIALY',10,,,'Jednostka księgowa'@,,,,);
EDOKUM.efld_opt(_red,'mark=1, enable=1, editable=1',OBIEGI,'ODD');
EDOKUM.win_esep(_red,'Kontrahent'@);
EDOKUM.win_efld(_red,OBIEGI,'SL_KH',,,50,,,'Źródło pochodzenia'@,,,,'F3_button=1');
EDOKUM.efld_opt(_red,'mark=1, enable=1, editable=1',OBIEGI,'SL_KH');
_ok:=EDOKUM.win_ebtn(_red,'text=%1, btn_label_align=center, panel=bottom, align=end'['OK'@],"'key:F2'");
_an:=EDOKUM.win_ebtn(_red,'text=%1, btn_label_align=center, panel=bottom, align=end, display=1'['&Anuluj'@],'key:Esc');
EDOKUM.btn_eopt(_red,_ok,'tooltip='+exec('help_red_ok','#window','P'));
EDOKUM.btn_eopt(_red,_an,'tooltip='+exec('help_red_esc','#window','A'));
_red


\KH_J_SET
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: Ustawienie kontrahenta jednorazowego dla dokumentów księgowych i dokumentów w obiegu
::   WE: _a - 'FKS' - Dokument księgowy
::            'OBG' - Dokument w obiegu
::       _b - kod kontrahenta jednorazowego
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
_edi:=exec('edi','edi_wspolne');
_verify:=exec('verify','edi_xml');
KH.cntx_psh();
_kod_kh:=_b;
{? _kod_kh=''
|| {? _verify
   || exec('add_kom','#message','Nie znaleziono kontrahenta - nie podano kodu.'@,4,{? _a='OBG' || EDOKUM.SYM || DOK.NK ?})
   ?};
   _ok:=0
|| KH.index('KOD'); KH.prefix(2,_kod_kh,);
   {? ~KH.first
   || {? _verify
      || exec('add_kom','#message','Nie znaleziono kontrahenta jednorazowego o kodzie %1.'@[_kod_kh],4,{? _a='OBG' || EDOKUM.SYM || DOK.NK ?})
      ?};
      _ok:=0
   ?}
?};
{? ~_verify & _ok
|| SLU.cntx_psh();
   SLU.index('NAZ'); SLU.prefix();
   {? var_press('__PAR')>0
   || SLU.find_key(__PAR.SL)
   || {? _a='OBG' || SLU.find_key(SKID.SL_KH)
      |? _a='FKS' || SLU.find_key(SLOSLU.SLSLU)
      ?}
   ?};
   RS.cntx_psh(); RS.index('RS'); RS.prefix();
   {? RS.find_key(SLU.WZ) & RS.TAB='KH'
   || _kod:=($('SLO.KOD:='+RS.TAB+'.'+RS.KOD))();
      SLO.cntx_psh();
      SLO.index('SL');
      {? SLO.prefix(SLU.ref()); ~(SLO.find_key(_kod) & _kod=SLO.KOD)
      || SLO.blank(); SLO.SLU:=SLU.ref();SLO.KOD:=_kod;SLO.TR:=KH.NAZ; SLO.add()
      ?};
      {? _a='OBG'
      || EDOKUM.KH:=SLO.ref(); SKID.NIP:=KH.NIP;
         EDOKUM.KHKH:=KH.ref();
         EDOKUM.KH_FULL:=KH.NAZ_P;
         EDOKUM.UL:=KH.UL;
         EDOKUM.MIASTO:=KH.MIASTO;
         EDOKUM.DOM:=KH.DOM;
         EDOKUM.LOKAL:=KH.LOKAL;
         EDOKUM.POCZ:=KH.POCZ;
         EDOKUM.KPOCZ:=KH.KPOCZ;
         exec('bl_kh_upd','zbl_dok',EDOKUM.DOKUM,EDOKUM.KHKH)
      |? _a='FKS'
      || EDI_Z.KH:=KH.ref();
         DOK.WYS:=SLO.ref();
         DOK.KH:=KH.SKR;
         DOK.KH_FULL:=KH.NAZ_P;
         DOK.KH_KRAJ:=KH.KRAJ; DOK.KH_KRISO:=KH.KRAJISO;
         DOK.MIASTO:=KH.MIASTO;
         DOK.UL:=KH.UL;
         DOK.POCZ:=KH.POCZ;
         DOK.DOM:=KH.DOM;
         DOK.LOKAL:=KH.LOKAL;
         DOK.KPOCZ:=KH.KPOCZ;
         DOK.NIP:=KH.NIP;
         {? DOK.DOKZRODL<>'' & DOK.DOKZRODL*'dokum'>0 || exec('bl_kh_upd','zbl_dok',DOK.DOKZRODL,KH.ref()) ?}
      ?};
      SLO.cntx_pop();
      _ok:={? _a='OBG' || EDOKUM.KHKH<>null() || DOK.WYS<>null() ?}
   ?};
   RS.cntx_pop(); SLU.cntx_pop()
?};
KH.cntx_pop();
{? _edi.sza || _ok || 1 ?}


\order_DocumentType
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: DocumentType - zamówienie
::   WE: _a - patrz wyjście
::   WY: ORDER
::----------------------------------------------------------------------------------------------------------------------
_odczyt:=(_>0);
{? _odczyt
|| _verify:=exec('verify','edi_xml');
   {? _verify
   || _typyzam:=null();
      TYPYZAM.cntx_psh();
      TYPYZAM.index('BL1');
      TYPYZAM.prefix('T','Z',);
      {? TYPYZAM.first()
      || {? TYPYZAM.size()=1
         || _typyzam:=TYPYZAM.ref()
         || _win:=TYPYZAM.win_sel('?');
            TYPYZAM.win_sel('SEL');
            {? TYPYZAM.select()
            || _typyzam:=TYPYZAM.ref()
            ?};
            TYPYZAM.win_sel(_win)
         ?}
      ?};
      TYPYZAM.cntx_pop();
      ZK_N.T:=__N1.TYPYZAM:=_typyzam
   |? __N1.TYPYZAM<> null()
   || ZK_N.T:=__N1.TYPYZAM
   |? BEER.TYPYZAM<>null()
   || ZK_N.T:=BEER.TYPYZAM
   ?};
   1
||
   {? ZD_NAG.T().R='D'
   || 'ORDER'
   || ''
   ?}
?}


\order_DocumentFunctionCode
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: DocumentFunctionCode - zamówienie
::   WE: _a - patrz wyjście
::   WY: 'O' – oryginał
::       '' - nie udało się ustalić
::----------------------------------------------------------------------------------------------------------------------
_odczyt:=(_>0);
{? _odczyt
||
::   {? __N1.TYPYSP=null()
::   || __N1.DFUNC0:=_a
::   ?};
   1
||
   {? ZD_NAG.T().R='D'
   || 'O'
   || ''
   ?}
?}


\order_formplat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Forma platnosci zamówienia
::   WE: _a - E-zapis, I-odczyt
::----------------------------------------------------------------------------------------------------------------------
_continue:=1;
_verify:=exec('verify','edi_xml');
{? _a='I' & ~_verify
|| {? __N1.DP<>date(0,0,0)
   || ZK_N.DP:=__N1.DP
   ?};
   {? __N1.DT<>date(0,0,0)
   || ZK_N.DT:=__N1.DT
   ?};
   FAKSPL.cntx_psh();
   _name:=(5+FAKSPL.name())+(ref_name(ZK_N.ref())+3);
   FAKSPL.use(_name);
   FAKSPL.index('ZK_N');
   FAKSPL.prefix(ZK_N.ref());
   {? FAKSPL.first()
   || _continue:=0
   ?};
   FAKSPL.cntx_pop()
:: jeżeli do zamówienia została przepisana forma płatności z kontrahenta, to nie trzeba jej importować
?};
{? _continue
|| _wyn:=exec('formplat','edi_fo_ufd',_a,'O')
|| {? _a='I'
   || _wyn:=1
   || _wyn:=''
   ?}
?};
_wyn


\order_CNWal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Cena netto walutowa dla pozycji zamówienia do dostawcy (tabela ZD_POZ)
::   WE:
::   WY: cena
::----------------------------------------------------------------------------------------------------------------------
_cn:=0;
_dwal:=ZD_NAG.WAL<>exec('bl_nwal','ustawienia');
_cn:={? _dwal || ZD_POZ.CWAL || ZD_POZ.CENA ?};
_cn


\order_CBWal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Cena brutto walutowa dla pozycji zamówienia do dostawcy (tabela ZD_POZ)
::   WE:
::   WY: cena
::----------------------------------------------------------------------------------------------------------------------
_cb:=0;
_dwal:=ZD_NAG.WAL<>exec('bl_nwal','ustawienia');
_dokl:=FAP.M().DOKL_Z;
_cena:={? _dwal || ZD_POZ.CWAL || ZD_POZ.CENA ?};
_vats:=ZD_POZ.M().VAT().KOD;
_vat:=#(((_vats*'%')+_vats)-1) / 100;
_cb:=(_cena*(1+_vat))$_dokl;
_cb


\order_WBWal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Wartość brutto walutowa dla pozycji zamówienia do dostawcy (tabela ZD_POZ)
::   WE:
::   WY: cena
::----------------------------------------------------------------------------------------------------------------------
_dokl:=FAP.M().DOKL_Z;
_vats:=ZD_POZ.M().VAT().KOD;
_vat:=#(((_vats*'%')+_vats)-1) / 100;
_wb:=(ZD_POZ.WARW*(1+_vat))$_dokl;
_wb


\ord_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: poczatek zamówienia sprzedaży
::   WE: _a - typ dokumentu zakupu
::       _b - identyfikator dokumentu
::       _c - oddział
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
BEER.TYPYZAM:=exec('FindInSet','#table','TYPYZAM','TYP',_a,'Z');
EDI_Z.POMIN:='N';
_typyzam:=_a;
_id:=_b;
_oddz:=_c;

_result:=1;
_verify:=exec('verify','edi_xml');

_oddz:=exec('FindInSet','#table','ODDZ','KOD2',_oddz,_oddz,"ODDZ.KOD",1,,'');
{? _oddz=''
|| _oddz:=exec('get','#params',100362);
   _oddz:=exec('FindInSet','#table','ODDZ','KOD2',_oddz,_oddz,"ODDZ.KOD",1,,'')
?};
{? _oddz=''
|| ODDZ.cntx_psh();
   ODDZ.index('KOD2');
   ODDZ.prefix();
   {? ODDZ.first() & ~ODDZ.next()
   || _oddz:=ODDZ.KOD;
      {? _verify
      || exec('add_kom','#message','Wybrano oddział %1'@[_oddz],4,_id)
      ?}
   ?};
   ODDZ.cntx_pop()
?};
ST.ODDZ:=_oddz;

VAR_DEL.delete('__N');
__N:=obj_new('PAYMENT');
__N.PAYMENT:=tab_tmp(
   ,'MEANS','STRING[2]',''
   ,'TERMS','REAL',''
   ,'DATE','DATE',''
   ,'DESC','STRING[255]',''
   ,'GROSSA','REAL','');
{? _verify
|| VAR_DEL.delete('__N1');
   __N1:=obj_new('TYPYZAM','DP','DT');
   __N1.TYPYZAM:=null();
   __N1.DP:=date(0,0,0);
   __N1.DT:=date(0,0,0);
   exec('openz','open_tab',_oddz+'__')
?};

BEER.ZK_N:=null();

{? ~_verify
|| BEER.TYPYZAM:=__N1.TYPYZAM;
   {? BEER.TYPYZAM=null()
   || EDI_Z.POMIN:='T';
      exec('add_kom','#message','Brak typu zamówienia sprzedaży.',4,_id);
      _result:=0
   ?}
?};

{? _result
|| BEER.SZ:='S';
   POM.TAB:='ZK_N';
   POM.TYPDOK:='';
   {? BEER.TYPYZAM<>null()
   || POM.TYPDOK:=BEER.TYPYZAM().KOD
   ?};

   {? _verify=1
   ||
        ZK_N.clear(); ZK_N.blank(); ZK_N.memo_set(,'UW');
        FIND_KH1:='';
        FIND_KH2:='';

      ~~
   ||
      _date:=ZK_N.DP;
      _result:=0;

         __PARSES.setVal('OddzialLogProd',_oddz);
         _args:=__PARSES.args('OkresRok');
         _args.OBSZAR:='LSP';
         _args.AR:=_date~1;
         _args.AM:=_date~2;
         __PARSES.setVal('OkresRok',_args);
         {? __PARSES.setEnv('LSP_ZKN_DRZK')
         ||
            ZK_N.SPOBLRAB:=exec('get','#params',800810,2);
            ZK_N.RAB_TYP:={? ZK_N.T().R='W' || '' || 'P' ?};
            ZK_N.SPP:=exec('spp_bl','ceny');
            {? exec('add_zkn','edi_form',0)
            ||
               BEER.ZK_N:=ZK_N.ref();
               __N1.DP:=ZK_N.DP;
               __N1.DT:=ZK_N.DT;
               _result:=1
            ?}
         ?}
   ?}
?};
_result


\ord_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: koniec zamowienia
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
{? ~_verify
|| exec('aktznzkn','zamsiw_nag',BEER.ZK_N,1);
   exec('obl_warz','zamsiw_nag',BEER.ZK_N);
:: dane do zapisu w dzienniku
   EDI_Z.SYM:=ZK_N.SYM;
   EDI_Z.KH:=ZK_N.KH;
   VAR_DEL.delete('__N1')
?};
1


\order_KH_NIP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: EAN kontrahenta (zamówienie sprzedaży)
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
{? _verify & ZK_N.KH=null()
|| _nip:=__XML.VAL;
   {? _nip=''
   || exec('add_kom','#message','Nie znaleziono kontrahenta - nie podano NIP.'@,4,ZK_N.ZAM_KL)
   || {? (ZK_N.KH:=exec('FindInSet','#table','KH','SNIP',_nip,2))=null()
      || exec('add_kom','#message','Nie znaleziono kontrahenta - NIP %1.'@[_nip],4,ZK_N.ZAM_KL)
      ?}
   ?}
?};
_wyn:=ZK_N.KH<>null();
_wyn:=
   {? ZK_N.KH<>null()
   || 1
   || 0
   ?};
_wyn


\order_EAN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: EAN (zamówienie sprzedaży)
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
__P.MKODK_KODK:=__XML.VAL;
ZK_P.M:=exec('find_m','edi_form',__XML.VAL,ZK_N.KH);
1


\order_SupplierItemCode
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: SupplierItemCode (zamówienie sprzedaży)
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
__P.MKODK_KTM:=__XML.VAL;
{? ZK_P.M=null()
|| ZK_P.M:=exec('find_m','edi_form','',ZK_N.KH,__XML.VAL)
?};
1


\order_ItemDescription
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: ItemDescription (zamówienie sprzedaży)
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
{? ~ZK_P.M
|| __P.MKODK_N:=__XML.VAL
?};
1


\order_TaxCategoryCode
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: TaxCategoryCode (zamówienie sprzedaży)
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
ZK_P.SV:=exec('ufd2sv','edi_fo_ufd',__P.SV_ID,__P.SV_P,'VAT');
{? ZK_P.SV<>null()
|| 1
|| {? _verify
   || _msg:='Brak stawki vat (%1,%2,%3) w systemie.'@[__P.SV_ID,__P.SV_P,'VAT'];
      exec('add_kom','#message',_msg,2,__XML.ID);
      {? ZK_N.SYM<>''
      || exec('add_kom','#message',_msg,2,ZK_N.SYM)
      ?}
   ?};
   0
?}


\order_platdni
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: liczba dni płatności dla zamówienia dostawy
::   WE:
::   WY: liczba dni płatności
::----------------------------------------------------------------------------------------------------------------------
_il_dni:=0;
{? ZD_NAG.DTPREAL<>date(0,0,0)
|| _il_dni:=ZD_NAG.TZ-ZD_NAG.DTPREAL
|? ZD_NAG.TZ<>date(0,0,0)
|| _il_dni:=ZD_NAG.TZ-ZD_NAG.DATA
|? ZD_NAG.PL<>null()
|| _il_dni:=exec('plat_dni','slo_slu',ZD_NAG.PL)
?};
{? _il_dni<0
|| _il_dni:=0
?};
_il_dni


\KursWaluty_Poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Kurs waluty dla pozycji
::   WY: kurs
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.T().KOR='T'
||
:: korekta
   _krs:=FKOR.KRS
||
:: faktura
   _krs:=FAP.KRS
?};
_krs


\TaxDate_Poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Data sprzedaży dla pozycji
::   WY: data
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.DSP_WPOZ='T' & FAP.D<>date(0,0,0)
|| _dt:=FAP.D
|| _dt:=FAKS.D
?};
_dt


\faks_znajdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Znalezienie dokumentu korygowanego wg danych
::   WE: _a - KH.ref()
::       _b - numer dokumentu korygowanego
::       _c - data dokumentu korygowanego
::       _d - nr KSEF dokumentu korygowanego
::       _e - numer korekty
::       _f - tylko znalezienie bez sprawdzania, czy można korygować
::       _g - wyświetlanie komunikatu o nieznalezieniu 0/1
::       _h - zapis w logu info o znalezieniu 0/1
::   WY: FAKS.ref()
::----------------------------------------------------------------------------------------------------------------------
_kh:=_a;
_kid:=_b;
_kda:=_c;
_kks:=_d;
_did:=_e;
_znajdz_tylko:=_f;
_kom_brak_czy:=_g;
_info_jest_czy:=_h;

KH.cntx_psh();
KH.seek(_kh);
_kh_naz:=KH.NAZ;
KH.cntx_pop();

_kref:=null();
_kom:='';

{? _kks<>''
|| FAKS.cntx_psh();
   _fnames:=FAKS.names();
   {? _fnames.last()
   || {!
      |? FAKS.use(_fnames.NAME);
         FAKS.index('NRKSEF');
         FAKS.prefix(_kks,);
         {? FAKS.first()
         || {!
            |? {? FAKS.SZ='Z'
               || _kref:=FAKS.ref()
               ?};
               _kref=null() & FAKS.next()
            !}
         ?};
         _kref=null() & _fnames.prev()
      !}
   ?};
   FAKS.cntx_pop();
   {? _kref<>null() & (_kid='' | _kda=date(0,0,0))
   || _kid:=exec('FindAndGet','#table',FAKS,_kref,,"FAKS.ID",'');
      _kda:=exec('FindAndGet','#table',FAKS,_kref,,"FAKS.DW",date(0,0,0))
   ?}
?};
{? _kref=null() & _kh & _kid<>'' & _kda<>date(0,0,0)
|| _Chk:=sql('
      select REFERENCE as REF
      from @FAKS
      where KH=:_a and ID=\':_b\' and DW=to_date(:_c)'
      ,_kh,_kid,_kda);
   {? _Chk.first()
   || {!
      |? {? exec('FindAndGet','#table',FAKS,_Chk.REF,,"FAKS.SZ='Z'",0)
         || _kref:=exec('FindAndGet','#table',FAKS,_Chk.REF,,,null())
         ?};
         _kref=null() & _Chk.next()
      !}
   ?}
?};

{? _kref=null()
|| {? _kid<>'' & _kda<>date(0,0,0)
   || _kom:='Korygowany dokument (%1, %2, %3) nie istnieje w systemie.'@[_kid,$_kda,_kh_naz]
   |? _kref<>''
   || _kom:='Korygowany dokument (%1, %2) nie istnieje w systemie.'@[_kks,_kh_naz]
   || _kom:='Korygowany dokument nie istnieje w systemie.'@
   ?};
   {? _kom<>''
   || exec('add_kom','#message',_kom,2,_did);
      {? _kom_brak_czy
      || FUN.emsg(_kom)
      ?}
   ?}
|| {? ~_znajdz_tylko
   ||
      _kref:=exec('FindAndGet','#table',FAKS,_kref,,"
         {? FAKS.FKSQL='' || FAKS.ref() || exec('FindAndGet','#table',FAKS,FKSQL,,,null()) ?}
      ",null());
      {? exec('FindAndGet','#table',FAKS,_kref,,"FAKS.STAT_REJ",'N')='T'
      || _fda:=exec('FindAndGet','#table',FAKS,_kref,,"FAKS.D",date(0,0,0));
         _szuk_kor:=exec('FindAndGet','#table',FAKS,_kref,,"
             _fda:=_b;
             exec('szuk_kor','faktury_nag',$FAKS.ref(),_fda,1)
            ",0,_fda);
         {? _szuk_kor=0
         || _kref:=null();
            _kom:='Nie wszystkie korekty (%1, %2, %3) są zaakceptowane.'@[_kid,$_kda,_kh_naz]
         ?}
      || _kref:=null();
         _kom:='Korygowany dokument (%1, %2, %3) jest niezaakceptowany.'@[_kid,$_kda,_kh_naz]
      ?};
      {? _kom<>''
      || exec('add_kom','#message',_kom,2,_did)
      ?}
   ?}
?};

{? _kref<>null() & _info_jest_czy
|| _kom:=exec('FindAndGet','#table',FAKS,_kref,,"'Korygowany dokument (%1, %2, %3)'[ID,$DW,_b]",'',_kh_naz);
   {? _kom<>''
   || exec('add_kom','#message',_kom,1,_did)
   ?}
?};

_kref


\KHODB_NIP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: EAN wystawcy importowanej faktury (FAKS.KH_ODB)
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_edi:=exec('edi','edi_wspolne');
_context:=_edi.context;
_verify:=exec('verify','edi_xml');
{? _verify & FAKS.KH<>null() & FAKS.KH_ODB=null()
|| _nip:=__XML.VAL;
   {? _nip<>''
   || _kh_odb:=null();
      KH_ODB.cntx_psh();
      KH_ODB.index('KH_ODB');
      KH_ODB.prefix(FAKS.KH);
      {? KH_ODB.size()>0
      || _kh_lnk:=exec('FindInSet','#table','KH','SNIP',_nip,2);
         {? _kh_lnk<>null() & KH_ODB.first()
         || {!
            |? {? KH_ODB.KH_LNK=_kh_lnk
               || _kh_odb:=KH_ODB.ref()
               ?};
               _kh_odb=null() & KH_ODB.next()
            !}
         ?};
         {? _kh_odb=null() & KH_ODB.first()
         ||{!
            |? {? KH_ODB.KH_LNK=null() & KH_ODB.NIP=_nip
               || _kh_odb:=KH_ODB.ref()
               ?};
               _kh_odb=null() & KH_ODB.next()
            !}
         ?}
      ?};
      KH_ODB.cntx_pop();
      {? _kh_odb=null()
      || exec('add_kom','#message','Nie znaleziono wystawcy - NIP %1.'@[_nip],2,FAKS.ID)
      || FAKS.KH_ODB:=_kh_odb
      ?}
   ?}
?};
_wyn


\bankaccount_se
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [23.25]
:: OPIS: formuła start element dla konta bankowego
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
VAR_DEL.delete('__P_RB');
__P_RB:=obj_new('NUMBER');
__P_RB.NUMBER:='';
1


\bankaccount_ee
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [23.25]
:: OPIS: formuła end element dla konta bankowego
::   WE: _a - OBG / FKS
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
{? ~_verify
||  SKID_RBK.cntx_psh(); SKID_RBK.index('NUMER');
    {? __P_RB.NUMBER<>''
    || SKID_RBK.prefix(__P_RB.NUMBER,);
       {? SKID_RBK.first()
       || {? var_pres('_a')>0 & _a='FKS'
          || {? DOK.RB=null() || DOK.RB:=SKID_RBK.ref() ?}
          || {? EDOKUM.RB=null() || EDOKUM.RB:=SKID_RBK.ref() ?}
          ?}
       || SKID_RBK.prefix(2-__P_RB.NUMBER,);
          {? SKID_RBK.first()
          || {? var_pres('_a')>0 & _a='FKS'
             || {? DOK.RB=null() || DOK.RB:=SKID_RBK.ref() ?}
             || {? EDOKUM.RB=null() || EDOKUM.RB:=SKID_RBK.ref() ?}
             ?}
          ?}
       ?}
    ?};
    SKID_RBK.cntx_pop()
?};
VAR_DEL.delete('__P_RB');
1


\advance_references_se
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła start element dla faktury zaliczkowej - nadrzędny
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
VAR_DEL.delete('__P_ADVREFS');
__P_ADVREFS:=obj_new('STRS');
__P_ADVREFS.STRS:='';
1


\advance_references_ee
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła end element dla faktur zaliczkowych - nadrzędny
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
{? ~_verify
|| exec('edit','dok_ksef',1);
   _btxt:=_txt:=DOKPOLA.memo_txt(,0,'NRFAZAL');
   _txt:=__P_ADVREFS.STRS-1;
   {? _txt<>'' & _txt<>_btxt
   || DOKPOLA.memo_set(_txt,'NRFAZAL');
      exec('edit','dok_ksef',2)
   ?}
?};
VAR_DEL.delete('__P_ADVREFS');
1


\advance_reference_se
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła start element dla faktury zaliczkowej
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
VAR_DEL.delete('__P_ADVREF');
__P_ADVREF:=obj_new('NONKSEF','REFKSEF','REFNOKSEF');
__P_ADVREF.NONKSEF:=__P_ADVREF.REFKSEF:=__P_ADVREF.REFNOKSEF:='';
1


\advance_reference_ee
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła end element dla faktur zaliczkowych
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
{? ~_verify
|| _txt:='';
   {? __P_ADVREF.NONKSEF='1'
   || _txt+=(__P_ADVREF.REFNOKSEF+'\n')
   || _txt+=(exec('znacznik_ksef','dok_ksef')+__P_ADVREF.REFKSEF+'\n')
   ?};
   {? _txt<>''
   || __P_ADVREFS.STRS+=_txt
   ?}
?};
VAR_DEL.delete('__P_ADVREF');
1


\goodsissued_se
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła start element dla numerów WZ
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
VAR_DEL.delete('__P_WZDOCNR');
__P_WZDOCNR:=obj_new('NUMBER');
__P_WZDOCNR.NUMBER:='';
1


\goodsissued_ee
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła end element dla numerów WZ
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
{? ~_verify & __P_WZDOCNR.NUMBER<>''
|| exec('edit','dok_ksef',1);
   _txt:=DOKPOLA.memo_txt(,0,'WZ');
   _txt+=(__P_WZDOCNR.NUMBER);
   _txt+='\n';
   DOKPOLA.memo_set(_txt,'WZ');
   exec('edit','dok_ksef',2)
?};
VAR_DEL.delete('__P_WZDOCNR');
1


\dokpola_se
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła start element przed redakcją pól z DOKPOLA
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
exec('edit','dok_ksef',1); 1


\dokpola_ee
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła end element po redakcji pól z DOKPOLA
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
{? ~_verify
|| {? DOKPOLA.OO='1' || DOKPOLA.OO:='T' ?};
   {? DOKPOLA.SAMFAK='1' || DOKPOLA.SAMFAK:='T' ?};
   exec('edit','dok_ksef',2)
?}; 1


\splitpay_se
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła start element Split Payment pozycji
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
VAR_DEL.delete('__P_SPWYM');
__P_SPWYM:=obj_new('NUMBER');
__P_SPWYM.NUMBER:='';
1


\splitpay_ee
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła end element Split Payment pozycji
::   WY:0/1
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
{? ~_verify
|| {? __P_SPWYM.NUMBER='1'
   || POZF.SP_WYM:='T'
   || POZF.SP_WYM:='N'
   ?}
?};
VAR_DEL.delete('__P_SPWYM');
1


\other_parties_se
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Start element dla UFD OtherParties (Podmiot 3)
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
VAR_DEL.delete('__OtherParties');
__OtherParties:=tab_tmp(2
   ,'ILN','STRING[13]','ILN'
   ,'TAXID','STRING[20]','TaxID'
   ,'NAME','STRING[150]','Name'
   ,'INTERID','STRING[255]','InternalId'
   ,'ROLE','STRING[2]','Role'
   ,'ROLEDESC','STRING[255]','RoleDescription'
   ,'OTR_ROLE','STRING[1]','OtherRole'
   ,'SHARE','REAL','Share'
   ,'EORI','STRING[255]','EORINumber'
);
1


\other_parties_ee
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: End element dla UFD OtherParties (Podmiot 3)
::----------------------------------------------------------------------------------------------------------------------
_result:=1;

KH_ODB.cntx_psh();
__OtherParties.prefix();
KST.cntx_psh();
{? DOK.DOP<>date(0,0,0)
|| exec('czytaj','#stalesys',DOK.DOP,KST)
|| exec('czytaj','#stalesys',date(),KST)
?};

_mynip:=exec('niptostr','#string',KST.NIP);
_myidwew:=KST.ID_WEW;
_role:='';
_kh:=null();

KST.cntx_pop();
{? exec('verify','edi_xml')
||
   _loop:=__OtherParties.first();
   {!
   |? _loop
   |!
      _idwew:=__OtherParties.INTERID;
      _nip:=__OtherParties.TAXID;
      {? _idwew<>''
      ||  {? (_kh:=exec('FindInSet','#table','KH','ID_WEW',_idwew,2))=null()
          || exec('add_kom','#message','Nie znaleziono kontrahenta - ID wewnętrzny %1.'@[_idwew],4,DOK.NK)
          ?};
          _result:=0
      || {? _nip<>_mynip
         || {? _nip=''
            || exec('add_kom','#message','Nie znaleziono kontrahenta - nie podano NIP.'@,4,DOK.NK)
            || {? (_kh:=exec('FindInSet','#table','KH','SNIP',_nip,2))=null()
               || exec('add_kom','#message','Nie znaleziono kontrahenta - NIP %1.'@[_nip],4,DOK.NK)
               ?}
            ?}
         ?}
      ?};
      _loop:=__OtherParties.next()
   !};
   _result
||
   _loop:=__OtherParties.first();
   {!
   |? _loop
   |!
      _idwew:=__OtherParties.INTERID;
      _nip:=__OtherParties.TAXID;
      _gus:=0;

      _dalej:=_idwew<>'' & _idwew<>_myidwew;
      {? ~_dalej || _dalej:=_nip<>_mynip ?};
      {? (_nip<>'' & _nip<>_mynip) | (_idwew<>'' & _idwew<>_myidwew)
      || 
         {? _idwew<>'' & _idwew<>_myidwew
         || _kh:=exec('FindInSet','#table','KH','ID_WEW',_idwew,2)
         |? _nip<>'' & _nip<>_mynip
         || _kh:=exec('FindInSet','#table','KH','SNIP',_nip,2)
         ?};
         {? _kh=null
         || {? PAR_SKID.get(119)='T'  & _idwew=''
            || {? _idwew=''
               || _gus:=exec('kh_gus','edi_fo_ufd',_nip);
                  {? _gus || _kh:=gus ?}
               ?}
            ?}
         ?};
         {? __OtherParties.OTR_ROLE='1'
         ||
            _role=__OtherParties.ROLEDESC
         ||
            _role:=exec('rola_podmiotu_ksef','edi_fo_ksef','',2,__OtherParties.ROLE).OPISROLI
         ?};
         _cz:=_role=exec('rola_cz_grvat_wyst','edi_fo_ksef');
         _jst:=_role=exec('rola_jst_wyst','edi_fo_ksef');
         {? _cz | _jst
         ||
            KH_ODB.index('KH_LNK');
            KH_ODB.prefix(_kh);
            _khodb:=null;
            _wyskod:='';
            _slo_slu:={? var_press('__PAR')>0
                      || __PAR.SL
                      || SLOSLU.SLSLU
                      ?};
            {? +_slo_slu
            || SLUAPPL.index('NAZ'); SLUAPPL.prefix('F');
               {? SLUAPPL.find_key(_slo_slu) & (SLUAPPL.SLU().NAZ=_slo_slu)
               || SLUAPPL.SLU();
                  RS.index('RS'); RS.prefix();
                  {? RS.find_key(SLU.WZ) & RS.TAB='KH'
                  || _kod:=($('SLO.KOD:='+RS.TAB+'.'+RS.KOD))();
                     SLO.index('SL');
                     {? SLO.prefix(SLU.ref()); ~(SLO.find_key(_kod) & _kod=SLO.KOD)
                     || SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:=_kod; SLO.TR:=KH.NAZ; SLO.add()
                     ?};
                     _wyskod:=SLO.KOD
                  ?}
               ?}
            ?};
            {? KH_ODB.first()
            || {! |?
                  {? ((_cz & KH_ODB.CGVAT='T') | (_jst & KH_ODB.JST='T')) & KH_ODB.KH().KOD=_wyskod
                  || _khodb:=KH_ODB.ref(); 0
                  || KH_ODB.next()
                  ?}
               !}
            ?};
            {? _khodb=null & _kh<>null()
            || KH.cntx_psh(); KH.index('KOD'); KH.prefix(2,_wyskod);
               {? KH.first & KH.GRVAT='T'
               || _grefn:=KH.ref();
                  KH.prefix();
                  {? KH.seek(_kh)
                  || _khodb:=exec('kh_odb','edi_fo_ufd',_grefn,_kh,{? _cz || 'G' |? _jst || 'J' ?})
                  ?}
               ?};
               KH.cntx_pop()
            ?};
            {? _khodb<>null
            || DOK.KH_ODB:=_khodb;
               exec('ae_dokodb','dok_fks1');
               DOK.put()
            || exec('add_kom','#message','Kontrahent o numerze NIP %1 nie figuruje w systemie jako %2 dla kontrahenta %3'@
                    [_nip,exec('FindAndGet','#table',KH,_kh,,"KH.NAZ",''),DOK.KH],4,DOK.NK)
            ?}
         ||
            FAKSKH.cntx_psh();
            FAKSKH.use('fkpd'+(4+(4-$DOK.ref())));
            FAKSKH.index('DOK'); FAKSKH.prefix();
            FAKSKH.blank();
            FAKSKH.DOK:=DOK.ref();
            FAKSKH.KH:=_kh;
            FAKSKH.ROLA:=_role;
            exec('duplikuj_dane_fakskh','faktury_wspolne');
            FAKSKH.UDZIAL:=__OtherParties.SHARE;
            {? FAKSKH.KH<>null
            || FAKSKH.add()
            || exec('add_kom','#message','Podmioty powiązane - nie znaleziono kontrahenta - NIP %1.'@[_nip],4,DOK.NK)
            ?};
            FAKSKH.cntx_pop()
         ?}
      ?};
      _loop:=__OtherParties.next()
   !}
?};
KH_ODB.cntx_pop();
VAR_DEL.delete('__OtherParties');
_result


\other_party_se
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Start element dla UFD OtherParty (Podmiot 3)
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
__OtherParties.prefix();
__OtherParties.blank();
1


\other_party_ee
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: End element dla UFD OtherParty (Podmiot 3)
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
__OtherParties.add();
1


\kh_odb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Dodaje odbiorcę do kontrahenta po zerejestrowaniu w GUS
::   WE: _a - KH.ref grupy VAT
::       _b - KH.ref dodanego kontrahenta
::       _c - "G" - członek grupy, "J" - JST
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
KH_ODB.cntx_psh();
KH_ODB.index('KH_ODB');
KH_ODB.prefix();

KH_ODB.blank();
KH_ODB.SKR:=KH.SKR;
KH_ODB.NAZ:=KH.NAZ_P;
KH_ODB.KRAJ:=KH.KRAJ;
KH_ODB.KRAJISO:=KH.KRAJISO;
KH_ODB.MIASTO:=KH.MIASTO;
KH_ODB.UL:=KH.UL;
KH_ODB.DOM:=KH.DOM;
KH_ODB.LOKAL:=KH.LOKAL;
KH_ODB.POCZ:=KH.POCZ;
KH_ODB.KPOCZ:=KH.KPOCZ;
KH_ODB.NRD:=KH.SN_DT;
KH_ODB.U:=KH.U;
KH_ODB.GLN:=KH.GLN;
KH_ODB.EM:=KH.EM;
KH_ODB.FV_EM:='N';
KH_ODB.KH:=_a;
KH_ODB.OBS:=KH.OBS;
KH_ODB.KH_LNK:=KH.ref();
KH_ODB.NIP:=KH.NIP;
KH_ODB.KOD:=KH.KOD;
{? _c='G'
|| KH_ODB.JST:='N'; KH_ODB.CGVAT:='T'
|| KH_ODB.JST:='T'; KH_ODB.CGVAT:='N'
?};
{? KH_ODB.add(1)
|| _ref:=KH_ODB.ref()
?};
KH_ODB.cntx_pop();
_ref


\linedesc_se
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Opis pozycji - start element
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
VAR_DEL.delete('__L_DESC');
__L_DESC:=obj_new('DESC');
__L_DESC.DESC:='';
1


\linedesc_ee
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Opis pozycji - end element
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');
1


\ref_ksef_number
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [23.25]
:: OPIS: ReferenceKSeFNumber - start element - dodaje numer ksef dokumentów korygowanych
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? __XML.VAL<>''
|| DOK.memo_set(_txt:=DOK.memo_txt(,1,'NRKSEFDK');
                _txt:={? (_txt+2)='\n'
                      || _txt+__XML.VAL
                      || _txt+'\n'+__XML.VAL
                      ?};
                _txt,'NRKSEFDK');
    exec('edit','dok_ksef',2)
|| 0
?}


\prev_q_ee
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [22.26]
:: OPIS: PreviousQuantity - end element - ustala wartość pozycji faktury
::   WE: _a - wartość
::----------------------------------------------------------------------------------------------------------------------
_value:={? type_of(_a)=type_of('')
        || exec('str2num','#string',_a)
        |? type_of(_a)=type_of(POZF.IL)
        || _a
        || 0
        ?};
POZF.IL-=_value;
1


\edokum_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [23.25]
:: OPIS: okienko parametryzacji dokumentu w obiegu przy ręcznej rejestracji dokumentu z businesslink
::   WE: _a - 1 - faktury / 2 - wnioski
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_pres('_a')>0 || _a || 1 ?};
_tab:=EDOKUM;
_red:=_tab.mk_edit('Parametry %1 w obiegu'@[{? _typ=1 || 'faktury'@ || 'wniosku'@ ?}],,'parametry');
_tab.win_esep(_red,'Dane ogólne'@);
_tab.win_efld(_red,OBIEGI,'ODD','OD','*',30,,,'Jednostka ksiegowa'@);
_tab.efld_opt(_red,'mark=1, enable=1, editable=1',OBIEGI,'ODD');
{? _typ=1
|| _tab.win_efld(_red,OBIEGI,'TYP','NAZWA','DISP4',30,,,'Typ faktury'@);
   _tab.efld_opt(_red,'mark=1, enable=1, editable=1',OBIEGI,'TYP')
?};
_tab.win_esep(_red,'Kontrahent'@);
_tab.win_efld(_red,OBIEGI,'SL_KH',,,30,,,'Źródło pochodzenia'@,,,,'F3_button=1'@);
_tab.efld_opt(_red,'mark=1, enable=1, editable=1',OBIEGI,'SL_KH');
_ok:=_tab.win_ebtn(_red,'text=%1'['Zapisz'@],"'key:F2'");
_anuluj:=_tab.win_ebtn(_red,'text=%1'['Anuluj'@],"'key:Esc'");
_tab.btn_eopt(_red,_ok,'tooltip='+exec('help_red_ok','#window','P'));
_tab.btn_eopt(_red,_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
_red


\edokum_par_check
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [23.25]
:: OPIS: Formuła sprawdzjąca pola dla okienka parametryzacji dokumentu w obiegu przy ręcznej rejestracji
::       dokumentu z businesslink
::   WE: _a - 1 - faktury / 2 - wnioski
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_pres('_a')>0 || _a || 1 ?};
_err:={? _typ=1 & OBIEGI.TYP=null
      || FUN.info('Wybierz typ faktury.'@);
         'TYP'
      |? OBIEGI.ODD=null
      || FUN.info('Wybierz jednostkę księgową.'@);
         'ODD'
      |? OBIEGI.SL_KH=''
      || FUN.info('Wybierz źródło pochodzenia.'@);
         'SL_KH'
      || ''
      ?};
_err

:Sign Version 2.0 jowisz:1045 2024/02/06 15:28:50 b3bd0fe65e945110549b63984f4ab112b708d15d5ddbe168771680ee05b02e4d41eb836ba1c590ffc0488da52c3d6b0202f5d19ca1f1e99bc6cfc38362a074bdc1d2d48943dd2ca48c32b46302e24ff711fca8e8f886a58d79c990c18ef73372cb3a7408deaae3bb6b913b74304e682e17423e293c8ca4d284de29b9317c1028
