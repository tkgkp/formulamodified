:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: sql.fml
:: Utworzony: 13.08.2015
:: Autor: MB
::======================================================================================================================
:: Zawartość: Funkcje do obsługi zestawień SQL
::======================================================================================================================


\cr_obsz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Wypełnia tabelę obszarów funkcjonalnych
::  OLD: \cr_obsz/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_OBSZ:=tab_tmp(1,'OBSZ','STRING[20]','OBSZAR'@);
{? BPMN.SYM_DOM='CRT'
|| 1

|? BPMN.SYM_DOM='FKS'
|| TAB_OBSZ.OBSZ:='Dokumenty źródłowe'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Księgi rachunkowe'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Rozrachunki'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Rejestry VAT'; TAB_OBSZ.add()

|? BPMN.SYM_DOM='FST'
|| TAB_OBSZ.OBSZ:='Definicje'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Raporty'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Plany amortyzacji'; TAB_OBSZ.add()

|? BPMN.SYM_DOM='HBN'
|| 1

|? BPMN.SYM_DOM='KON'
|| 1

|? BPMN.SYM_DOM='LMG'
|| TAB_OBSZ.OBSZ:='Magazyny'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Opakowania'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Zamówienia'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Stan magazynu'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Stan magazynów'; TAB_OBSZ.add()

|? BPMN.SYM_DOM='LUM'
|| TAB_OBSZ.OBSZ:='Umowy cykliczne'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Zgłoszenia jedn.'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Umowy miejskie'; TAB_OBSZ.add()

|? BPMN.SYM_DOM='LUO'
|| TAB_OBSZ.OBSZ:='Gminny punkt odbioru'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Karty przek. odpadów'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Karty ewid. odpadów'; TAB_OBSZ.add()

|? BPMN.SYM_DOM='LTR'
|| TAB_OBSZ.OBSZ:='Karty drogowe'; TAB_OBSZ.add()

|? BPMN.SYM_DOM='LSP'
|| TAB_OBSZ.OBSZ:='Faktury'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Oferty'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Zamówienia'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Stan magazynów'; TAB_OBSZ.add()

|? BPMN.SYM_DOM='LZK'
|| TAB_OBSZ.OBSZ:='Zakupy'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Zamówienia'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Stan magazynów'; TAB_OBSZ.add()

|? BPMN.SYM_DOM='OBG'
|| 1

|? BPMN.SYM_DOM='PKD'
|| TAB_OBSZ.OBSZ:='Kadry'; TAB_OBSZ.add()

|? BPMN.SYM_DOM='PPL'
|| TAB_OBSZ.OBSZ:='Płace'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Umowy cywilnoprawne'; TAB_OBSZ.add()

|? BPMN.SYM_DOM='TPP'
|| 1

|? BPMN.SYM_DOM='TTE'
|| TAB_OBSZ.OBSZ:='Produkcja'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Technologia'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Wykonania'; TAB_OBSZ.add()

|? BPMN.SYM_DOM='TRE'
|| TAB_OBSZ.OBSZ:='Zgłoszenia remontowe'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Reklamacje klienta'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Reklamacje do dostaw'; TAB_OBSZ.add()

|? BPMN.SYM_DOM='KAS'
|| TAB_OBSZ.OBSZ:='Kasa'; TAB_OBSZ.add()

|? BPMN.SYM_DOM='WYP'
|| TAB_OBSZ.OBSZ:='Wyposażenie'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Polecenia wydania'; TAB_OBSZ.add();
   TAB_OBSZ.OBSZ:='Listy zapotrzeb.'; TAB_OBSZ.add()

|? BPMN.SYM_DOM='ZWS'
|| TAB_OBSZ.OBSZ:='Projekty'; TAB_OBSZ.add()

|? BPMN.SYM_DOM='ZPR'
|| TAB_OBSZ.OBSZ:='Procesy i czynności'; TAB_OBSZ.add()
?};

{? 0
||
TAB_OBSZ.OBSZ:='Definicje'; TAB_OBSZ.add();
TAB_OBSZ.OBSZ:='Struktury budżetowe'; TAB_OBSZ.add();
TAB_OBSZ.OBSZ:='Umowy cywilnoprawne'; TAB_OBSZ.add();
TAB_OBSZ.OBSZ:='pożYczki'; TAB_OBSZ.add();
TAB_OBSZ.OBSZ:='Dokumenty'; TAB_OBSZ.add();
TAB_OBSZ.OBSZ:='Firma'; TAB_OBSZ.add();
TAB_OBSZ.OBSZ:='Czas pracy'; TAB_OBSZ.add();
TAB_OBSZ.OBSZ:='Rachuba'; TAB_OBSZ.add();
TAB_OBSZ.OBSZ:='Raporty'; TAB_OBSZ.add();
TAB_OBSZ.OBSZ:='Faktury'; TAB_OBSZ.add();
TAB_OBSZ.OBSZ:='Kartoteki'; TAB_OBSZ.add();
TAB_OBSZ.OBSZ:='Obrót'; TAB_OBSZ.add();
TAB_OBSZ.OBSZ:='Zaopatrzenie'; TAB_OBSZ.add()
?};
~~


\sel_dept
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula na klawisz F3 podczas wyboru jedn. ksiegowej w parametrach definiowalnych
::       zapytan sql
::   WY: nazwa wybranego oddzialu
::  OLD: \sel_dept/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_odd:=fld();
ODD.cntx_psh();
ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA); ODD.first();
ODD.win_sel('WYB');
{? (_odd='wszystkie' | _odd='' | ODD.find_key(_odd,_odd) | ODD.find_key(_odd)) & ODD.select(,1,10)
|| _odd:=ODD.OD
?};
ODD.cntx_pop();
_odd


\chk_dept
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula sprawdza czy prawidlowo wprowadzono jedn. ksiegowa w parametrach defionowalych
::       zapytan sql
::   WY: 1 - prawidlowo wprowadzono oddzial, 0 - w p.p.
::  OLD: \chk_dept/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_odd:=fld();
_ok:=0;
ODD.cntx_psh();
ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
ODD.win_sel('WYB');
{? _odd='' | _odd='wszystkie'
|| _ok:=1
|? _odd<>'' & ODD.find_key(_odd,_odd)
|| _ok:=1
|? _odd<>'' & ODD.find_key(_odd)
|| fld(ODD.OD);
   _odd:=ODD.OD;
   _ok:=1
|| FUN.emsg('Brak jednostki księgowej o skrócie: %1.\nWybierz jednostkę księgową ze słownika.'@[_odd])
?};
ODD.cntx_pop();
{? _odd='' || fld('wszystkie') ?};
_ok


\chk_ekspl_daty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła sprawdza zakres dat w zapytaniu sql dla środków trwałych
::----------------------------------------------------------------------------------------------------------------------
{? fld<>date(0,0,0)
|| {? PAR_SQL.PAR2DK>fld()
   || FUN.emsg('Nieprawidłowy zakres dat.'@);
      0
   || 1
   ?}
|| FUN.emsg('Wprowadź datę.'@);
   0
?}


\b_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Zwraca kod biezacej waluty dla ksiegowan i rozrachunkow
::  OLD: \b_wal/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? SSTALE.WAL=FINFO.NAROD
|| ''
|| 'and SLO.KOD=\''+SSTALE.WAL().KOD+'\''
?}


\rok_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Zwraca kod biezacego roku dla wierszy podstawowych
::  OLD: \rok_spr/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
SSTALE.AR().KOD


\ae_rejks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Formula po redag. slownika rejestrow ksiegowych dla SQL
::  OLD: \ae_rejks/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
REJ.cntx_psh();
exec('set_rej','rejestry','SLO2',OPERATOR.DEPT);
_v:={? OPERATOR.DEPT
    || REJ.find_key(fld())
    || ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
       {? ODD.first() ||
         {! |?
            _ok:=REJ.find_key(ODD.ref,fld());
            ~_ok & ODD.next()
         !}
      ?};
      ODD.cntx_pop();
      _ok
    ?};
{? _v || fld(REJ.KOD) ?};
REJ.cntx_pop();
{? _v
|| 1
|| FUN.info('Nie istnieje rejestr o podanym symbolu w jednostce księgowej %1.'@[REJ.ODD().OD]); 0
?}


\f3_rejks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Formula na F3 dla slownika rejestrow ksiegowych dla SQL
::  OLD: \f3_rejks/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_odd:=null;
ODD.cntx_psh();
ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
{? OPERATOR.DEPT=null & var_pres('PAR1S',PAR_SQL)=27 & PAR_SQL.PAR1S<>''
|| {? ODD.find_key(PAR_SQL.PAR1S,PAR_SQL.PAR1S)
   || _odd:=ODD.ref();
      exec('set_rej','rejestry','SLO2',_odd)
   || exec('set_rej','rejestry','SLO2')
   ?}
|| exec('set_rej','rejestry','SLO2',OPERATOR.DEPT)
?};
{? OPERATOR.DEPT | _odd<>null
|| REJ.find_key(fld())
|| {? ODD.first()
   || {!|?
         ~REJ.find_key(ODD.ref,fld()) & ODD.next()
      !}
   ?}
?};
ODD.cntx_pop();
{? REJ.select(,1) || fld(REJ.KOD) ?}


\x_null
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: zeruje wszystkie zmienne
::  OLD: \x_null/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
X_odz_in:=exec('no_limit','sql');
1


\no_limit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: domyslna wartosc parametru
::  OLD: \no_limit/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
'\'Bez\'<>\'ograniczen\''


\oddz_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: wartosc poczatkowa parametru Oddział
::   WE: _a - akronim TAB.ODDZ albo inaczej, bo kto wie jak kto sobie pole oddzial ochrzcil
::  OLD: \fakt_09_sts_bl/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || _a:='FAKS.ODDZ' ?};
exec('oddz','users',OPERATOR.USER,,_a)


\oddz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: Wyswetla liste oddzialow
::   WE: _a - akronim TAB.ODDZ albo inaczej, bo kto wie jak kto sobie pole oddzial ochrzcil
::   WY: zwraca wybrany warunek
::  OLD: \oddz/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
_acr:='__'+cur_afld();
{? ($('var_pres('''+ _acr +''')'))()<>2 || ($(_acr+':='''''))() ?};
($(_acr))():=gsub(fld(),_a,'ODDZ.KOD');

_result:=exec('f3_okno','sql'
   ,'sql($"
      select \' \' as WYBRANO, ODDZ.KOD as KOD, ODDZ.NAZ as NAZWA
      from USERS_UP join ODDZ using (USERS_UP.ODDZ,ODDZ.reference)
      where USERS_UP.USERS=:_a order by 2",OPERATOR.USER)'
   ,"ODDZ.KOD"
   ,'KOD');

_result:=gsub(_result,'ODDZ.KOD',_a);
($(_acr))():=_result;

{? _result=exec('no_limit','sql')
|| _result:=exec('oddz_bl','sql',_a);
   _acr:='__'+cur_afld();

   ($(_acr))():=_result
?};
_result


\oddz_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: po edycji parametru Oddział
::   WE: _[1]-fld
::       _[2]-akronim TAB.ODDZ albo inaczej, bo kto wie jak kto sobie pole oddzial ochrzcil
::----------------------------------------------------------------------------------------------------------------------
_tab_fld:={? var_pres('_[2]')=type_of('') || _[2] || '' ?};
_wyn:=0;
{? _[1]=''
|| fld(exec('oddz_bl','sql',_[2]))
|? exec('f3_only','sql')=1
|| VAR_DEL.delete('__'+cur_afld);
   _wyn:=fld<>'';
   _sts1:=sql('
      select ODDZ.KOD as KOD, ODDZ.NAZ as NAZWA
      from USERS_UP join ODDZ using (USERS_UP.ODDZ,ODDZ.reference)
      where USERS_UP.USERS=:_a order by 1,1',OPERATOR.USER);
   _sts2:=sql('select ODDZ.KOD as KOD from ODDZ where :_a','ODDZ.KOD '+(_[1]*' in '-_[1]));
   {? _sts2.first()
   || {!
      |? {? _sts1.find_key(_sts2.KOD,_sts2.KOD)=0
         || FUN.info('Wybrano nieuprawniony oddział.'@);
            _wyn:=0
         ?};
         _wyn=1 & _sts2.next()
      !}
   || FUN.info('Wybrano nieuprawniony oddział.'@); _wyn:=0
   ?}
?};
_wyn


\f3_okno
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: Ustawia okno oraz umozliwia wybor
::   WE: _a - formula do wywolania z warunkiem
::            UWAGA - musi posiadac pole wybrano - w celu wyboru
::            'sql($"select \' \' as WYBRANO, MG.SYM as SYMBOL, MG.NAZ as NAZWA from MG order by 2")'
::       _b - poczatek frazy do warunku np. 'MG.SYM'
::       _c - akronim pola w tabeli tymczasowej z wartoscia do porownania np. 'SYMBOL'
::   WY: zwraca string z wybranymi warunkami
::  OLD: \f3_okno/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__X_PAR','__acr','__ind','__xp_acr');

_acr:='__'+cur_afld();
__xp_acr:=_c;
{? ($('var_pres('''+ _acr +''')'))()<>2 || ($(_acr+':='''''))() ?};

__X_PAR:=($_a)();

__acr:=__X_PAR.mk_sel('Wybierz wartość słownika'@,,0,'#siadlpwasdhtwa',,,,,'U');
{! _num:=1..__X_PAR.fld_num()-1
|!
   _fld:=__X_PAR.fld_acr(_num);
   _len:=MS.fld_len(__X_PAR, _fld);
   ($('__X_PAR.win_fld(__acr,,'''+_fld+''',,,'+$_len+',,,,,,,1)'))()
!};

__X_PAR.win_act(__acr,,'Formuła','Wybierz'@@,,,,"
   {? __X_PAR.WYBRANO='*'
   || __X_PAR.WYBRANO:=' '
   || __X_PAR.WYBRANO:='*'
   ?};__X_PAR.put",1,1,,,'W');
__X_PAR.win_act(__acr,,'Formuła','Akceptuj'@@,,,,"sel_exit",0,,,,'A');
__X_PAR.win_act(__acr,,'Szukaj',,,,,,);
__X_PAR.win_act(__acr,,'Kolejność',,,,,,);
__X_PAR.win_act(__acr,,'Rekord',,,,"__X_PAR.WYBRANO='*'",,);
__X_PAR.win_sel(__acr);

:: ustawianie zaznaczen
_ogranicz:=($(_acr))();
{? _ogranicz<>'' & _ogranicz<>exec('no_limit','sql')
||
   _zaz:=($('sql($"select '+_b+' from '+_b-(+_b-((_b*'.'))+1)+' where '+ _ogranicz+'")'))();
   {? _zaz.first
   || {!
      |?
         {? __X_PAR.find_key(_zaz[1])
         ||
            __X_PAR.WYBRANO:='*';
            __X_PAR.put()
         ?};
         _zaz.next()
      !}
   ?}
?};

_sel:=__X_PAR.select();

__ind:=($('(__X_PAR.ndx_tmp(\'\',,\'WYBRANO\',,,\''+_c+'\',,))'))();
_fml:=$'
   _in:=\'\';
   __X_PAR.cntx_psh();
   __X_PAR.index(__ind);
   __X_PAR.prefix(\'*\');
   {? __X_PAR.first()
   ||
      _in:=\'\'+ _a +\' in (\' ;
      {!
      |?
         _in+=\'\\\'\'+ STR.gsub(($(\'__X_PAR.\'+_b))(),\'\\\'\',\'\\\'\\\'\') +\'\\\',\';
         __X_PAR.next()
      !};
      _in:=_in-1;
      _in+=\')\'
   ?};
   __X_PAR.cntx_pop();
   _in
';
{? _sel>0
||
   _wybrano:=_fml(_b,_c);
   {!
   |?
      {? +form(_wybrano)=0
      ||
         FUN.info('Nie zaznaczono żadnego rekordu.'@);
         _sel:=0
      |? +form(_wybrano)>150
      ||
         FUN.info('Wybrano za dużo pozycji.'@);
         _sel:=0
      ?};
      {? _sel=0
      ||
         _sel:=__X_PAR.select();
         {? _sel>0 || _wybrano:=_fml(_b,_c) ?};
         _sel
      ||
         0
      ?}
   !}
?};
{? _sel=0 || _wybrano:=exec('no_limit','sql') ?};
VAR_DEL.delete('__X_PAR','__acr','__ind','__xp_acr');
($(_acr))():=_wybrano;
_wybrano


\f3_only
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: sprawdza czy parametry zapytania sql byly ustawione klawiszem F3
::   WY: 0/1
::  OLD: \f3_only/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? form(fld)<>exec('no_limit','sql')
||
   _acr:='__'+cur_afld();
   {? ($('var_pres('''+ _acr +''')'))()=2
   || _fld:=($(_acr))();
      {? _fld*' in (\''=0 | form(_fld)+2<>'\')' || _wyn:=0 ?};
      _txt:=_fld
   || {? fld*' in (\''=0 | form(fld)+2<>'\')' || _wyn:=0 ?};
      _txt:=fld
   ?};
:: sprawdza parzystosc apostrofow
   {? _wyn=1
   ||
      _licz:=0;
      {!
      |?
         _pos:=_txt*'\'';
         _pos>0
      |!
         _licz+=1;
         _txt:=_pos-_txt
      !};
      {? frac(_licz/2)>0 || _wyn:=0 ?}
   ?};
   {? _wyn=0 || FUN.info('Niewłaściwa wartość.\nNależy użyć klawisza F3 do określenia parametru.'@) ?}
?};
_wyn


\typyzam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [2013]
:: OPIS: Wyswetla liste typow zamówień sprzedaży
::   WE: _a - Z-Zamówienie sprzedaży , D - Dostaw.
::   WY: zwraca wybrany warunek
::  OLD: \typyzam/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a='Z'
||
    VAR_DEL.delete('__in_par');
    {? exec('get','#params',3004,2,OPERATOR.USER)<>''
    ||
         _in:=exec('get','#params',3004,2,OPERATOR.USER);
         __in_par:='\''+gsub(_in,' ','\',\'')+'\'';
       _wyn:=
          exec('f3_okno','sql','sql($"select \' \' as WYBRANO, TYPYZAM.T as TYP, TYPYZAM.NAZ as NAZWA from TYPYZAM
        where TYPYZAM.T in (:_a) order by 2",__in_par)','TYPYZAM.T','TYP')
    ||
       _wyn:=exec('f3_okno','sql','sql($"select \' \' as WYBRANO, TYPYZAM.T as TYP, TYPYZAM.NAZ as NAZWA from TYPYZAM
        where TYPYZAM.R=\'Z\' order by 2")','TYPYZAM.T','TYP')
    ?};
     VAR_DEL.delete('__in_par')
|? _a='D'
||
      _wyn:=exec('f3_okno','sql','sql($"select \' \' as WYBRANO, TYPYZAM.T as TYP, TYPYZAM.NAZ as NAZWA from TYPYZAM
        where TYPYZAM.R=\'D\' order by 2")','TYPYZAM.T','TYP')
|| _wyn:=''
?};
_wyn


\grkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: Wyswetla liste grup kontrahentow
::   WY: zwraca wybrany warunek
::  OLD: \grkh/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
exec('f3_okno','sql','sql($"select \' \' as WYBRANO, GRKH.KOD as KOD, GRKH.NAZ as NAZWA from GRKH order by 2")'
   ,'GRKH.KOD','KOD')


\kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: Wyswietla liste kontrahentow
::   WY: zwraca wybrany warunek
::  OLD: \kh/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('f3_okno','sql','sql($"select \' \' as WYBRANO, KH.KOD as KOD, KH.SKR as SKROT, KH.NAZ as NAZWA
   from KH order by 2")','KH.KOD','KOD');
_wyn


\mgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: Wyswetla liste grup materialowych
::   WY: zwraca wybrany warunek
::  OLD: \mgr/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
exec('f3_okno','sql','sql($"select \' \' as WYBRANO, MGR.KOD as KOD, MGR.NAZ as NAZWA from MGR order by 2")'
   ,'MGR.KOD','KOD')


\tow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: Wyswetla liste materialow
::   WY: zwraca wybrany warunek
::  OLD: \tow/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('f3_okno','sql','sql($"select \' \' as WYBRANO, M.KTM as KTM, M.N as NAZWA from M order by 2")'
   ,'M.KTM','KTM');
_wyn


\han
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: Wyswetla liste handlowcow
::   WY: zwraca wybrany warunek
::  OLD: \han/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
exec('f3_okno','sql','sql($"select \' \' as WYBRANO, HAN.KOD as KOD, HAN.NAZ as NAZWA from HAN order by 2")',
   'HAN.KOD','KOD')


\wpm_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS
:: OPIS: Formuła na F3 dla pola WPS
::   WE: _a=2 - WPST
::       _a=1 - WPS
::       _a=0 - WP
::  OLD: \wpm_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_f:='FUN.choice(\'Wybierz: \',\'ASK\''+
    ',\'Wy&roby\',\'Półfabrykaty\','+
    {? _a>=1 || '\'Surowce\',' || '' ?}+
    {? _a>=2 || '\'Wyroby &obce\',' || '' ?}+
    '\'Wszystkie\')';
_wyb:=($_f)();
{? _wyb=1 || 'W'
|? _wyb=2 || 'P'
|? _a>=1 & _wyb=3 || 'S'
|? _a>=2 & _wyb=4 || 'T'
|? _wyb=3+_a || '*'
|| ~~
?}


\wpm_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS
:: OPIS: Formula po redakcji pola WPS
::   WE: _a=2 - WPST
::       _a=1 - WPS
::       _a=0 - WP
::  OLD: \wpm_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? ({? _a>=1 || 'S' || '' ?}+{? _a>=2 || 'T' || '' ?}+'WP*')*fld()>0
|| 1
||       {? _a>=1 || _s:='\'S\' — surowce     \n'@ || _s:='' ?};
          {? _a>=2 || _t:='\'T\' — wyroby obce \n'@ || _t:='' ?};
   FUN.error('Dozwolone wartości:\n\n'
          '\'W\' — wyroby      \n'
          '\'P\' — półfabrykaty\n%1 %2'
          '\'*\' — wszystkie   '@[_s,_t]);
   0
?}


\war_mag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: wartosc magazynowa dla pozycji faktury
::  OLD: \war_mag/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
{? TAB_SQLR.first()
||
   _war_mag:="
      ND.cntx_psh(); DK.cntx_psh(); MG.cntx_psh();
      ND.use('nagdo'+(DK.name()+3));
      _wyn:=0;
      DK.index('FAP');
      DK.prefix(TAB_SQLR.FAPREF,TAB_SQLR.FAPREF);
      {? DK.first()
      ||
         {!
         |? _war:=DK.WAR;
            {? 1+DK.N().MAG().TYP='D'
            || BO.CEN:=exec('cena_mag','ceny',DK.M,DK.RDK,DK.NDK,,DK.C);
               {? BO.CEN<>DK.C || _war:=(BO.CEN*DK.IL)$2 ?}
            ?};
            {? DK.PLUS='T'
            || _wyn-=_war
            || _wyn+=_war
            ?};
            DK.next()
         !}
      ?};
      ND.cntx_pop(); DK.cntx_pop(); MG.cntx_pop();
      _wyn
   ";

   {!
   |?
      TAB_SQLR.WARMAG:=0;
      TAB_SQLR.MARZA:=0;
::    szuka w roku poprzedzajacym fakture
      _oddz:=1+(5-TAB_SQLR.FAPREF);
      _ar:=(8+TAB_SQLR.FAPREF)+2;
      {? #_ar>0
      || DK.cntx_psh();
         DK.use('dokma'+_oddz+form(#_ar-1,-2));
         TAB_SQLR.WARMAG+=_war_mag();
         DK.cntx_pop()
      ?};
::    szuka w roku faktury
      DK.cntx_psh();
      DK.use('dokma'+_oddz+_ar);
      TAB_SQLR.WARMAG+=_war_mag();
      DK.cntx_pop();
      TAB_SQLR.MARZA:=(TAB_SQLR.NETTO-TAB_SQLR.WARMAG)$2;
      TAB_SQLR.put();
      TAB_SQLR.next()
   !};
   TAB_SQLR.first()
?};
1


\pkwiuf3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [2012+]
:: OPIS: F3 dla dla slownika PKWiU
::  OLD: \pkwiuf3/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_acr:=MPKW.mk_sel('Słownik PKWiU'@,,0);
MPKW.win_act(_acr,,'Formuła','WYBIERZ'@@,,,"sel_exit",,1,,,,'W');
MPKW.win_fld(_acr,,'KOD');
MPKW.win_fld(_acr,,'OP');
MPKW.win_sel(_acr);
{? MPKW.select()
|| _wyn:=MPKW.KOD
?};
MPKW.win_sel('');
MPKW.win_del(_acr);
_wyn


\m_pkwiu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: przygotowuje tabele z pkwiu materialow i uslug
::   WY: tabela
::  OLD: \m_pkwiu/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=sql('select M.REFERENCE REF, MPKW.KOD PKWIU1, \'01234567890123456789\' PKWIU2 from M left join MPKW');

{? _Tab.first
|| M_SV.cntx_psh;
   M_SV.index('OD');
   {!
   |?
      M_SV.prefix('P',BB.sqlint(_Tab.REF));
      _Tab.PKWIU2:={? M_SV.first || M_SV.FIS_KTM || '' ?};
      _Tab.put;
      _Tab.next
   !};
   M_SV.cntx_pop
?};

_Tab


\fakt_09_sts_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: wartosc poczatkowa parametru Stanowisko sprzedazy w fakt_009.sql
::  OLD: \fakt_09_sts_bl/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',2102,2,OPERATOR.USER)='T'
|| exec('stss','users',OPERATOR.USER,'STS',0)
|| exec('no_limit','sql')
?}


\sts
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: Wyswietla liste stanowisk sprzedazy
::   WY: zwraca wybrany warunek
::  OLD: \sts/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',2102,2,OPERATOR.USER)='T'
||
   _wyn:=
      exec('f3_okno','sql','sql($"select \' \' as WYBRANO, STS.KOD as KOD, STS.NAZ as NAZWA
      from USERS_UP join STS using (USERS_UP.STS,STS.reference)
      where STS.SZ=\'S\' and USERS_UP.USERS=:_a order by 2",OPERATOR.USER)','STS.KOD','KOD')
|| _wyn:=
      exec('f3_okno','sql','sql($"select  \' \' as WYBRANO, STS.KOD as KOD, STS.NAZ as NAZWA from STS where
         STS.SZ=\'S\' order by 2")','STS.KOD','KOD')
?};
:: dodatkowo obsluga uprawnien gdy nic nie wybrano
{? exec('get','#params',2102,2,OPERATOR.USER)='T' & _wyn = exec('no_limit','sql')
|| _wyn:=exec('stss','users',OPERATOR.USER,'STS',0);
   _acr:='__'+cur_afld();
   ($_acr)():=_wyn
?};
_wyn


\fakt_09_sts_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: po edycji fakt_09.sql parametru Stanowisko sprzedazy w fakt_009.sql
::   WE: _[1]-fld
::  OLD: \fakt_09_sts_ae/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? _[1]=''
|| fld(exec('no_limit','sql'))
|? exec('f3_only','sql')=1
||
   VAR_DEL.delete('__'+cur_afld);
   _wyn:=fld<>'';
   {? exec('get','#params',2102,2,OPERATOR.USER)='T'
   || _sts1:=sql('
         select STS.KOD as KOD, STS.NAZ as NAZWA, \' \' as WYBRANO
         from USERS_UP join STS using (USERS_UP.STS,STS.reference)
         where STS.SZ=\'S\'
            and USERS_UP.USERS=:_a
         order by 1,1',OPERATOR.USER);
      _sts2:=sql('select STS.KOD as KOD from STS where :_a',_[1]);
      {? _sts2.first()
      || {!
         |? {? _sts1.find_key(_sts2.KOD,_sts2.KOD)=0
            || {? exec('no_limit','sql')=_[1]
               || FUN.info('Należy wybrać uprawnione stanowisko.'@)
               || FUN.info('Wybrano nieuprawnione stanowisko.'@)
               ?};
               _wyn:=0
            ?};
            _wyn=1 & _sts2.next()
         !}
      || FUN.info('Wybrano nieuprawnione stanowisko.'@); _wyn:=0
      ?}
   ?}
?};
_wyn


\typysp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: Wyswetla liste typow dokumentu sprzedazy
::   WY: zwraca wybrany warunek
::  OLD: \typysp/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
exec('f3_okno','sql','sql($"select \' \' as WYBRANO, TYPYSP.T as TYP, TYPYSP.NAZ as NAZWA from TYPYSP order by 2")'
   ,'TYPYSP.T','TYP')


\fakt_014
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: Analiza udzielonych rabatow
::   WE: _[1] - od_daty
::       _[2] - do_daty
::   WY: tabelka z wynikiem
::  OLD: \fakt_014/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
_od_daty:=_[1];
_do_daty:=_[2];

_tab:=tab_tmp(
   ,'DW'    ,'DATE'        ,'Data wystawienia'
   ,'SYM'   ,'STRING[20]'  ,'Symobl faktury'
   ,'KOD'   ,'STRING[8]'   ,'Kod kontrahenta'
   ,'SKR'   ,'STRING[10]'  ,'Skrót kontrahenta'
   ,'KTM'   ,'STRING[50]'  ,'Indeks materiału'
   ,'N'     ,'STRING[100]' ,'Nazwa materiału'
   ,'KR'    ,'REAL'        ,'Kwota rabatu');
_stsupr:=exec('get','#params',2102,2,OPERATOR.USER)='T';
_stss:="
{? exec('get','#params',2102,2,OPERATOR.USER)='T'
|| _wyn:=exec('usr_upr','b_perm','STS',_a,OPERATOR.USER)
|| _wyn:=1
?};
_wyn
";
OKR.cntx_psh();
OKR.index('MC'); OKR.prefix(REF.FIRMA,1);
{? OKR.first()
|| FAKS.cntx_psh(); FAP.cntx_psh();
   {!
   |? {? OKR.ROK>=_od_daty~1 | _od_daty~1=0
      || FAKS.use('faktu'+ST.ODDZ+($OKR.ROK+2));
         FAP.use('fakpo'+ST.ODDZ+($OKR.ROK+2));
         FAKS.index('FAK_NUM'); FAKS.prefix('S');
         {? FAKS.first()
         || {!
            |? {? (_stsupr=0 | _stsupr=1 & FAKS.STS<>null & _stss(FAKS.STS))
                  & FAKS.T().KOR='N'
                  & ((_od_daty<=FAKS.DW & FAKS.DW<=_do_daty) | (_od_daty=date(0,0,0) & date(0,0,0)=_do_daty) )
                  & FAKS.ZEST='T' & FAKS.KZ='' & FAKS.ZEST_AKC='T'
               || FAP.index('FAP'); FAP.prefix(FAKS.ref());
                  {? FAP.first()
                  || _kod:=FAKS.KH().KOD;
                     _skr:=KH.SKR;
                     {!
                     |? {? FAKS.RAB<>0 | FAP.RAB<>0
                        || _tab.blank(1);
                           _tab.DW:=FAKS.DW;
                           _tab.SYM:=FAKS.SYM;
                           _tab.KOD:=_kod;
                           _tab.SKR:=_skr;
                           _tab.KTM:=FAP.M().KTM;
                           _tab.N:=M.N;
                           _tab.KR-=FAP.WWAL_P;
                           exec('liczfak','faktury_wspolne',,0);
                           _tab.KR+=FAP.WWAL_P;
                           _tab.add()
                        ?};
                        FAP.next()
                     !}
                  ?}
               ?};
               FAKS.next()
            !}
         ?}
      ?};
      (OKR.ROK<=_do_daty~1 | _do_daty~1=0 ) & OKR.next()
   !};
   FAKS.cntx_pop(); FAP.cntx_pop()
?};
OKR.cntx_pop();
_tab


\mag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: Wyswetla liste magazynow
::   WY: zwraca wybrany warunek
::  OLD: \mag/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || _a:='MG.SYM' ?};
_bfld:=fld();
_acr:='__'+cur_afld();
{? ($('var_pres('''+ _acr +''')'))()<>2 || ($(_acr+':='''''))() ?};
($(_acr))():=gsub(fld(),_a,'MG.SYM');

_result:=exec('f3_okno','sql'
   ,'sql($"
      select \' \' as WYBRANO, MG.SYM as SYMBOL, MG.NAZ as NAZWA, MG.ODDZ as ODDZIAL
      from USERS_UP join MG using (USERS_UP.MG,MG.reference)
      where USERS_UP.USERS=:_a and USERS_UP.AKR=\'MG\' and :_b order by 2"
      ,OPERATOR.USER,exec(\'oddz_bl\',\'sql\',\'MG.ODDZ\'))'
   ,"MG.SYM"
   ,'SYMBOL');

_result:=gsub(_result,'MG.SYM',_a);
($(_acr))():=_result;

{? _result=exec('no_limit','sql')
|| _result:=_bfld;
   ($(_acr))():=_result
?};
_result


\mag_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.41]
:: OPIS: po edycji parametru Oddział
::   WE: _[1]-fld
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? _[1]=''
|| fld(exec('no_limit','sql'))
|? exec('f3_only','sql')=1
|| VAR_DEL.delete('__'+cur_afld);
   _wyn:=fld<>''
?};
_wyn


\chk_oddz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: domyslna wartosc parametru
::   WE: _a kawalek SQL-a
::       _b czy zmienic na TAB.ODDZ
::  OLD: \chk_oddz/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
_poz:=_a*' ';
{? _poz
||
   _a:=_poz-_a;
   _a:=_b+' '+_a;
   _a
||
   exec('no_limit','sql')
?}


\typydok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: Wyswetla liste typow dokumentow magazynowych
::   WE: _a - przychodowy lub rozchodowy
::   WY: zwraca wybrany warunek
::  OLD: \typydok/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__td_pr');
__td_pr:=_a;
_wyn:=exec('f3_okno','sql','sql($"select \' \' as WYBRANO, TYPYDOK.T as TYP, TYPYDOK.NAZ as NAZWA from TYPYDOK
   where TYPYDOK.P=\':_a\' order by 2",__td_pr)','TYPYDOK.T','TYP');
VAR_DEL.delete('__td_pr');
_wyn


\nd_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: wyswietla statusy akceptacji dokumentu magazynowego
::  OLD: \nd_z/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
wyn:=exec('no_limit','sql');
popup(0,'Statusy akceptacji'@
   ,'Zaakceptowane'@,'Dokumenty zaakceptowane'@,"wyn:='ND.Z=''T'''"
   ,'Niezaakceptowane'@,'Dokumenty niezaakceptowane'@,"wyn:='ND.Z=''N'''");
_wyn:=wyn; &wyn; _wyn


\zl_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 dla symbolu zlecenia
::  OLD: \zl_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
ZL.index('SYM');
ZL.prefix();
ZL.find_key(fld());
ZL.win_sel('SLO_SL');
ZL.actions('SLO_SL','XY','W');
{? ZL.select(,1,5)
|| ZL.SYM
|| ~~
?}


\zl_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula po redakcji symbolu zlecenia
::  OLD: \zl_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? fld()='*' || return(1) ?};
ZL.index('SYM');
ZL.prefix(fld());
{? ZL.first()
|| 1
|| FUN.info('Brak zlecenia o symbolu: %1*'@[fld()]);
   0
?}


\zlstan_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: F3 dla pola 'Stan zlecenia'
::  OLD: \zlstan_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_wyb:=FUN.choice('Wybierz: '@,'ASK','W &przygotowaniu'@,'Otwarte'@,'Zamknięte'@,'Wszystkie'@);
{? _wyb=1 || 'N'
|? _wyb=2 || 'O'
|? _wyb=3 || 'Z'
|? _wyb=4 || '*'
|| ~~
?}


\zlstan_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Po redakcji pola 'Stan zlecenia'
::  OLD: \zlstan_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? 'NHOZ*'*fld()>0
|| 1
|| FUN.error('Dozwolone wartości:      \n\n'
          '\'N\' — w przygotowaniu\n'
          '\'O\' — otwarte        \n'
          '\'Z\' — zamknięte      \n'
          '\'*\' — wszystkie      '@);
   0
?}


\wp_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 dla znacznika Warsztatowe/Produkcyjne
::  OLD: \wp_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_wyb:=FUN.choice('Wybierz: '@,'ASK','Warsztatowe'@,'Produkcyjne'@,'Dowolne'@);
{? _wyb=1 || 'W'
|? _wyb=2 || 'P'
|? _wyb=3 || '*'
|| ~~
?}


\wp_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula po redakcji pola Warsztatowe/Produkcyjne
::  OLD: \wp_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? 'WP*'*fld()>0
|| 1
|| FUN.error('Dozwolone wartości:\n\n'
          '\'W\' — warsztatowe \n'
          '\'P\' — produkcyjne \n'
          '\'*\' — wszystkie   '@);
   0
?}


\pz_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 dla pola Proste/Zlozone
::  OLD: \pz_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_wyb:=FUN.choice('Wybierz: '@,'ASK','Proste'@,'Złożone'@,'Wszystkie'@);
{? _wyb=1 || 'P'
|? _wyb=2 || 'Z'
|? _wyb=3 || '*'
|| ~~
?}


\pz_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula po redakcji pola Proste/Zlozone
::  OLD: \pz_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? 'PZ*'*fld()>0
 || 1
 || FUN.error('Dozwolone wartości:\n\n'
           '\'P\' — proste      \n'
           '\'Z\' — złożone     \n'
           '\'*\' — wszystkie   '@);
    0
?}


\slo_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 dla pola SLO
::   WE: _a - SLU.ref()
::  OLD: \slo_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.index('SL');
SLO.prefix(_a);
SLO.win_sel('SLO_FO');
{? SLO.select(,1,5)
|| SLO.KOD
|| ~~
?}


\slo_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Po redakcji dla pola SLO
::   WE: _a - SLU.ref()
::   WY: 0 / 1
::  OLD: \slo_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? fld()='*' || return(1) ?};

SLO.index('SL');
SLO.prefix(_a,fld());
{? SLO.first() & +fld()=+SLO.KOD
|| 1
|| FUN.info('Brak w słowniku pozycji o podanym kodzie.'@);
   0
?}


\kh_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 dla pola KH (kontrahent)
::  OLD: \kh_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
KH.index('KOD');
KH.prefix(2);
KH.find_key(fld());
KH.win_sel('SEL');
{? KH.select(,1,5)
|| KH.KOD
|| ~~
?}


\kh_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula po redakcji pola KH (kontrahent)
::  OLD: \kh_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? fld()='*' || return(1) ?};
KH.index('KOD');
KH.prefix(2,fld());
{? KH.first() & KH.KOD=fld()
|| 1
|| FUN.info('Brak kontrahenta o kodzie: %1'@[fld()]);
   0
?}


\grupa_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 w polu 'Grupa materialowa'
::   WE: _a - kod grupy
::  OLD: \grupa_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_a:={? _>0 || {? var_pres('_a')=2 || _a || fld() ?} || fld() ?};

_wer:=MGR.mk_sel('Grupy materiałów i usług'@,'P',0,'mgrsql');
MGR.win_fld(_wer,,'KOD');
MGR.win_fld(_wer,,'NAZ');
MGR.win_fld(_wer,,'RODZ',,,,,,'T/U'@);
MGR.win_fld(_wer,,'DOKL',,,,0);
MGR.win_act(_wer,,'Formuła','Wybierz'@@,,,"sel_exit()",,1,,,,'W');
MGR.win_sel(_wer);
MGR.index('MGR');
MGR.prefix();
MGR.find_key(_a);
{? MGR.select(,1,5)
|| MGR.KOD
|| ~~
?}


\grupa_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula po redakcji pola 'Grupa materialowa'
::  OLD: \grupa_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? fld()='*' || return(1) ?};
MGR.index('MGR');
MGR.prefix(fld());
{? MGR.first() & MGR.KOD=fld()
|| 1
|| FUN.info('Brak grupy o kodzie: %1'@[fld()]);
   0
?}


\tpktl_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 dla pola 'Typ karty technologicznej'
::  OLD: \tpktl_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
TPKTL.index('TYP');
TPKTL.prefix();
TPKTL.find_key(fld());
TPKTL.win_sel('WERSLO');
{? TPKTL.select(,1,5)
|| TPKTL.TYP
|| ~~
?}


\tpktl_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula po redakcji pola 'Typ karty technologicznej'
::  OLD: \tpktl_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? fld()='*' || return(1) ?};
TPKTL.index('TYP');
TPKTL.prefix(fld());
{? TPKTL.first() & TPKTL.TYP=fld()
|| 1
|| FUN.choice('Brak typu karty o kodzie: %1'@[fld()]);
   0
?}


\tktl_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: F3 dla pola TKTL
::   WE: _a - M.KTM
::  OLD: \tktl_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_ndx:=TKTLW.ndx_tmp(,1,
   'TKTL','TORW',,
   'KTM','KTM',,
   'TKTL','NRK',,
   'TKTL','WER',);
TKTLW.index(_ndx);
TKTLW.prefix('T',{?_a='*'||''||_a?});
TKTLW.win_sel('WER_P');
{? TKTLW.select(,1,5)
|| _res:=TKTLW.TKTL().NRK
|| _res:=~~
?};
TKTLW.clear();
TKTLW.ndx_drop(_ndx);
_res


\tktl_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Po redakcji pola TKTL
::   WE: _a - M.KTM
::  OLD: \tktl_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? fld()='*' || return(1) ?};
_ndx:=TKTLW.ndx_tmp(,1,'TKTL','TORW',,
                       'TKTL','NRK',);
TKTLW.index(_ndx);
TKTLW.prefix('T',fld());
{? TKTLW.first()
|| 1
|| FUN.info('Brak technologii o numerze: %1*'@[fld()]);
   0
?}


\towar_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 dla materialow
::  OLD: \towar_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
M.index('ARODZ');
M.prefix('T','T');
M.find_key(fld());
_wer:=M.mk_sel('Materiały'@,'P',0,'sql_towar_f3');
M.win_fld(_wer,,'KTM',,,30);
M.win_fld(_wer,,'N',,,60);
M.win_act(_wer,,'Formuła','Wybierz'@@,,,"sel_exit()",,1,,,,'W');
M.win_sel(_wer);
{? M.select(,1,5)
|| M.KTM
|| ~~
?}


\towar_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula po redakcji materialu
::   WE: _a=1 - dokladnie
::       _a=0 - prefiks
::  OLD: \towar_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? fld()='*' || return(1) ?};
{? _=0 || _a:=0 ?};
M.index('ARODZ');
M.prefix('T','T',fld());
{? M.first() & {? _a || M.KTM=fld() || 1 ?}
|| 1
|| {? ~_a
   || FUN.info('Brak materiału o kodzie: %1*'@[fld()])
   || FUN.info('Brak materiału o kodzie: %1'@[fld()])
   ?};
   0
?}


\tn_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 dla pola TN (Tak/Nie)
::   WE: _a - tytyl okna
::  OLD: \tn_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_wyb:=FUN.choice('%1\n\nWybierz: '@[_a],'ASK','Tak'@,'Nie'@,'Wszystkie'@);
{? _wyb=1 || 'T'
|? _wyb=2 || 'N'
|? _wyb=3 || '*'
|| ~~
?}


\tn_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula po redakcji pola TN (Tak/Nie)
::   WE: _a - tytuł okna
::  OLD: \tn_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? 'TN*'*fld()>0
 || 1
 || FUN.error(_a+'\n\nDozwolone wartości:\n\n'
           '\'T\' — Tak         \n'
           '\'N\' — Nie         \n'
           '\'*\' — wszystkie   '@);
    0
?}


\okres_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 dla pola OKRES
::   WE: _a - numer roku
::  OLD: \okres_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
OKR.index('OKR');
OKR.prefix(REF.FIRMA,_a);
_wer:=OKR.mk_sel('Okresy obrachunkowe'@,'N',0,'okres_f3',1,8,15);
OKR.win_fld(_wer,,'MC',,,3,,,'Nr'@);
OKR.win_fld(_wer,,'NAZ',,,,,,'Nazwa okresu'@);
OKR.win_act(_wer,0,'Formuła','Wybierz'@@,,,"sel_exit()",,1,,,,'W');
OKR.win_sel(_wer);
{? OKR.select(,1,5)
|| OKR.MC
|| ~~
?}


\okres_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula po redakcji pola OKRES
::   WE: _a - numer roku
::  OLD: \okres_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
OKR.index('OKR');
OKR.prefix(REF.FIRMA,_a,fld());
{? OKR.first()
|| 1
|| FUN.info('W roku %1 brak okresu o numerze: %2'@[$_a,$fld()]);
   0
?}


\ak_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 dla pola Kalkulacja/Analiza
::  OLD: \ak_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_wyb:=FUN.choice('Wybierz: '@,'ASK','&Kalkulacja'@,'&Analiza'@);
{? _wyb=1 || '0'
|? _wyb=2 || '1'
|| ~~
?}


\ak_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula po redakcji pola Kalkulacja/Analiza
::  OLD: \ak_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? '01'*fld()>0
|| 1
|| FUN.error('Dozwolone wartości:\n\n'
          '\'0\' — Kalkulacja     \n'
          '\'1\' — Analiza        \n');
   0
?}


\anrub_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 dla numeru rubryki analitycznej
::  OLD: \anrub_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
ANRUB.index('RUBR');
ANRUB.prefix();
ANRUB.find_key(fld());
ANRUB.win_sel('WYB');
{? ANRUB.select(,1,5)
|| ANRUB.NR
|| ~~
?}


\anrub_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula po redakcji numeru rubryki analitycznej
::  OLD: \anrub_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()=0 || exec('nozero','#field'); return(0) ?};
ANRUB.index('RUBR');
ANRUB.prefix(fld());
{? ANRUB.first()
|| 1
|| FUN.info('Brak rubryki o kodzie: %1'@[$fld()]);
   0
?}


\tktlstan_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 dla stanu karty technologicznej
::  OLD: \tktlstan_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_wyb:=FUN.choice('Wybierz: '@,'ASK','Niezatwierdzone'@,'Częściowo zatw.'@,'Zatwierdzone'@,'Wszystkie'@);
{? _wyb=1 || 'N'
|? _wyb=2 || 'P'
|? _wyb=3 || 'T'
|? _wyb=4 || '*'
|| ~~
?}


\tktlstan_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 dla stanu karty technologicznej
::  OLD: \tktlstan_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? 'NPT*'*fld()>0
|| 1
|| FUN.error('Dozwolone wartości:      \n\n'
          '\'N\' — niezatwierdzone\n'
          '\'P\' — częściowo zatw.\n'
          '\'T\' — zatwierdzone   \n'
          '\'*\' — wszystkie      '@);
   0
?}


\krub_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 dla numeru rubryki kalkulacyjnej
::  OLD: \krub_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
KRUB.index('NR');
KRUB.prefix();
KRUB.find_key(fld());
KRUB.win_sel('WYB');
{? KRUB.select(,1,5)
|| KRUB.NR
|| ~~
?}


\krub_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula po redakcji numeru rubryki kalkulacyjnej
::  OLD: \krub_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()=0 || exec('nozero','#field'); return(0) ?};
KRUB.index('NR');
KRUB.prefix(fld());
{? KRUB.first()
|| 1
|| FUN.info('Brak rubryki o kodzie: %1'@[$fld()]);
   0
?}


\krub_name
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula zwraca nazwe rubryki kalkulacyjnej
::   WE: _a - numer rubryki
::  OLD: \krub_name/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
KRUB.index('NR');
KRUB.prefix(_a);
{? KRUB.first()
|| KRUB.OPIS
|| 'Rubryka %1'@[$_a]
?}


\tktlwer_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formula na F3 dla pola WER
::   WE: _a - M.KTM
::       _b - TKTL.NRK
::  OLD: \tktlwer_f3/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_ndx:=TKTLW.ndx_tmp(,1,
   'TKTL','TORW',,
   'KTM','KTM',,
   'TKTL','NRK',,
   'TKTL','WER',);
TKTLW.index(_ndx);
TKTLW.prefix('T',_a,{? _b='*' || '' || _b ?});
TKTLW.win_sel('WER_P');
{? TKTLW.select(,1,5)
|| _res:=TKTLW.TKTL().NRK
|| _res:=~~
?};
TKTLW.clear();
TKTLW.ndx_drop(_ndx);
_res


\tktlwer_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Po redakcji pola WER
::  OLD: \tktlwer_po/form_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? fld()='*' || return(1) ?};
_ndx:=TKTLW.ndx_tmp(,1,'TKTL','TORW',,
                       'TKTL','NRK',,
                       'TKTL','WER',);
TKTLW.index(_ndx);
TKTLW.prefix('T',fld());
{? TKTLW.first()
|| 1
|| FUN.info('Brak technologii w wersji: %1*'@[fld()]);
   0
?}


\stany_op_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: stany opakowan u kontrahentow na dzien _[1]
::   WE: _[1]-PAR_SQL.PAR1D
::  OLD: \stany_op_kh/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('tabelka');

tabelka:=tab_tmp(2
   ,'LP'    ,'INTEGER'     ,'Lp.'@
   ,'D'     ,'DATE'        ,'Data'@
   ,'KH'    ,'STRING[8]'   ,'Kontrahent'@
   ,'KH_ODB','STRING[8]'   ,'Odbiorca'@
   ,'KTM'   ,'STRING[50]'  ,'Indeks'@
   ,'N'     ,'STRING[100]' ,'Nazwa'@
   ,'N_SK'  ,'REAL'        ,'Stan kaucji naszych'@
   ,'N_WK'  ,'REAL'        ,'Wartość kaucji naszych'@
   ,'KH_SK' ,'REAL'        ,'Stan kaucji kontrahenta'@
   ,'KH_WK' ,'REAL'        ,'Wartość kaucji kontrahenta'@
   ,'N_SBK' ,'REAL'        ,'Stan bez kaucji u nas'@
   ,'KH_SBK','REAL'        ,'Stan bez kaucji u kontrahenta'@
   ,'JM'    ,'STRING[10]'  ,'jm'@
);

{? X_Xb.first() & X_Xb.next()
||
   _env:=exec('tmp_rebuild','opakow_stany',,,,,_[1])
||
   _kh:=exec('FindInSet','#table','KH','KOD',X_Xb.KOD,2,,1,,null());
   _env:=exec('tmp_rebuild','opakow_stany',,,_kh,,_[1])
?};
_OPAK_SKH:=_env.OPAK_SKH.TAB;
_OPAK_SKH.index(_env.OPAK_SKH.NDX_KH);
{? X_Xb.first()
||
   {!
   |?
      _kh:=exec('FindInSet','#table','KH','KOD',X_Xb.KOD,2,,1,,null());
      _OPAK_SKH.prefix($_kh);
      _loop:=_OPAK_SKH.first();
      {!
      |? _loop
      |!
         _mat:=exec('FindAndGet','#table',M,_OPAK_SKH.M,,"
            _mat:=obj_new('INDEKS','NAZWA','JM');
            _mat.INDEKS:=M.KTM;
            _mat.NAZWA:=M.N;
            _mat.JM:=M.J().KOD;
            _mat
         ");
         tabelka.LP:=0;
         tabelka.D:=_[1];
         tabelka.KH:=X_Xb.KOD;
         tabelka.KH_ODB:={? _OPAK_SKH.KH_ODB='' || '' || exec('FindAndGet','#table',KH_ODB,_OPAK_SKH.KH_ODB,,"KOD",'') ?};
         tabelka.KTM:=_mat.INDEKS;
         tabelka.N:=_mat.NAZWA;
         tabelka.N_SK:=_OPAK_SKH.N_SK;
         tabelka.N_WK:=_OPAK_SKH.N_WK;
         tabelka.KH_SK:=_OPAK_SKH.KH_SK;
         tabelka.KH_WK:=_OPAK_SKH.KH_WK;
         tabelka.N_SBK:=_OPAK_SKH.N_SBK;
         tabelka.KH_SBK:=_OPAK_SKH.KH_SBK;
         tabelka.JM:=_mat.JM;
         tabelka.add();
         obj_del(_mat);
         _loop:=_OPAK_SKH.next()
      !};
      X_Xb.next()
   !}
?};
tabelka


\mg_opak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: Wyświetla listę magazynów opakowań
::  OLD: \mg_opak/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
_opak:=sql('
   select distinct 0 as LP, MG.MG_OPAK as MG_OPAK
   from MG
   where MG.MG_OPAK<>''''');
{? var_pres('X_odz_in')<=0 || X_odz_in:=exec('no_limit','sql') ?};
{? var_pres('X_PAR')>=1 || obj_del(X_PAR) ?};
X_PAR:=sql($"select :_a.MG_OPAK as SYMBOL, ' ' as WYBRANO from :_a order by 1",_opak);
_acr:=X_PAR.mk_sel('Wybierz magazyny opakowań'@,,0,'mg_opak_acr');
X_PAR.win_fld(_acr,,'WYBRANO',,,2);
X_PAR.win_fld(_acr,,'SYMBOL',,,8,,,'Magazyn opakowań'@);
X_PAR.win_act(_acr,,'Formuła','Wybierz'@@,,,,"{? X_PAR.WYBRANO='*' || X_PAR.WYBRANO:=' ' || X_PAR.WYBRANO:='*' ?};
                                               X_PAR.put",1,,,,'W');
X_PAR.win_act(_acr,,'Formuła','Akceptuj'@@,,,,"sel_exit",0,,,,'A');
X_PAR.win_act(_acr,,'Szukaj',,,,,,);
X_PAR.win_act(_acr,,'Kolejność',,,,,,);
X_PAR.win_act(_acr,,'Rekord',,,,"X_PAR.WYBRANO='*'",,);
X_PAR.win_sel(_acr);
X_PAR.select();
_x_ndx:=X_PAR.ndx_tmp('',,'WYBRANO',,,'SYMBOL',,);
X_PAR.index(_x_ndx);
X_PAR.prefix('*');
{? X_PAR.first()
||
   _mag_in:='MG_OPAK in (';
   {!
   |? _mag_in+='\''+X_PAR.SYMBOL+'\',';
      X_PAR.next()
   !};
   _mag_in:=_mag_in-1;
   _mag_in+=')'
||
   _mag_in:=exec('no_limit','sql')
?};
_mag_in


\stany_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: stany opakowan na dzien _[1]
::   WE: _[1]-PAR_SQL.PAR1D
::  OLD: \stany_op/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('tabelka');

tabelka:=tab_tmp(3
   ,'LP'       ,'INTEGER'     ,'Lp.'@
   ,'MG_OPAK'  ,'STRING[8]'   ,'Magazyn'@
   ,'D'        ,'DATE'        ,'Data'@
   ,'KTM'      ,'STRING[50]'  ,'Indeks'@
   ,'N'        ,'STRING[100]' ,'Nazwa'@
   ,'S'        ,'REAL'        ,'Stan'@
   ,'ILW'      ,'REAL'        ,'W wydatniu'@
   ,'SD'      ,'REAL'         ,'Stan dostępny'@
   ,'JM'       ,'STRING[10]'  ,'jm'@
);

_opak:=sql('
   select distinct 0 as LP, MG.MG_OPAK as MG_OPAK
   from MG
   where MG.MG_OPAK<>''''');

{? _opak.first()
||
   {!
   |?
      _env:=exec('tmp_rebuild','opakow_stany',_opak.MG_OPAK,,,,_[1]);
      _OPAK_SM:=_env.OPAK_SM.TAB;
      _loop:=_OPAK_SM.first();
      {!
      |? _loop
      |!
         _mat:=exec('FindAndGet','#table',M,_OPAK_SM.M,,"
            _mat:=obj_new('INDEKS','NAZWA','JM');
            _mat.INDEKS:=M.KTM;
            _mat.NAZWA:=M.N;
            _mat.JM:=M.J().KOD;
            _mat
         ");
         tabelka.LP:=0;
         tabelka.MG_OPAK:=_opak.MG_OPAK;
         tabelka.D:=_[1];
         tabelka.KTM:=_mat.INDEKS;
         tabelka.N:=_mat.NAZWA;
         tabelka.S:=_OPAK_SM.S;
         tabelka.ILW:=_OPAK_SM.ILW;
         tabelka.SD:=_OPAK_SM.SD;
         tabelka.JM:=_mat.JM;
         tabelka.add();
         obj_del(_mat);
         _loop:=_OPAK_SM.next()
      !};
      obj_del(_OPAK_SM);
      obj_del(_env);
      _opak.next()
   !}
?};
tabelka


\kh_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: wybor kontrahentow do zapytania
::  OLD: \kh_sel/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('filtr_kh','kontrahent','T','N')=0
|| 'wg wyboru w słowniku'@
|| exec('filtr_kh','kontrahent','N','N'); exec('no_limit','sql')
?}


\zal_opak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: analiza zalegania opakowan
::   WE: _[1]-PAR_SQL.PAR1D
::   WY: tabela z wynikiem
::  OLD: \zal_opak/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=sql('
   select
      ''1'' as GR,
      '''' as KH_KOD,
      '''' as KH_SKR,
      '''' as MAG,
      cast(null as DATE_TYPE) as Data_ZWR,
      ''<< Opakowania do zwrotu przez kontrahentów na dzień ''||:_a||''>>'' as Dokument,
      '''' as Indeks,
      '''' as Nazwa,
      cast(null as REAL_TYPE) as Kaucja,
      cast(null as REAL_TYPE) as IL_POZ,
      cast(null as REAL_TYPE) as WAR_POZ,
      '''' as OPKP_REF
   from
      FIRMA
   where
      FIRMA.REFERENCE=:_b

   union all

   select
      ''2'' as GR,
      KH.KOD as KH_KOD,
      KH.SKR as KH_SKR,
      OPAK_N.MAG as MAG,
      OPAK_P.DATA_ZWR as Data_ZWR,
      OPAK_N.SYM||'' p. ''||to_string(OPAK_P.POZ) as Dokument,
      M.KTM as Indeks,
      M.N as Nazwa,
      OPAK_P.KAUCJA as Kaucja,
      OPAK_P.IL as IL_POZ,
      OPAK_P.WAR as WAR_POZ,
      OPAK_P.reference as OPKP_REF
   from
      @OPAK_P
      join M using (OPAK_P.M,M.reference)
      join @OPAK_N using (OPAK_P.OPAK_N,OPAK_N.reference)
      join KH using (OPAK_N.KH,KH.reference)
   where
      OPAK_N.PLUS=''N''
      and OPAK_N.AKC=''T''
      and OPAK_P.ZWROT=''N''
      and OPAK_P.CZY_KAUC=''T''
      and (OPAK_P.DATA_ZWR is null or OPAK_P.DATA_ZWR<=to_date(:_a))

   union all

   select
      ''3'' as GR,
      '''' as KH_KOD,
      '''' as KH_SKR,
      '''' as MAG,
      cast(null as DATE_TYPE) as Data_ZWR,
      ''<< Opakowania do zwrotu kontrahentom na dzień ''||:_a||''>>'' as Dokument,
      '''' as Indeks,
      '''' as Nazwa,
      cast(null as REAL_TYPE) as Kaucja,
      cast(null as REAL_TYPE) as IL_POZ,
      cast(null as REAL_TYPE) as WAR_POZ,
      '''' as OPKP_REF
   from
      FIRMA
   where
      FIRMA.REFERENCE=:_b

   union all

   select
      ''4'' as GR,
      KH.KOD as KH_KOD,
      KH.SKR as KH_SKR,
      OPAK_N.MAG as MAG,
      OPAK_P.DATA_ZWR as Data_ZWR,
      OPAK_N.SYM||'' p. ''||to_string(OPAK_P.POZ) as Dokument,
      M.KTM as Indeks,
      M.N as Nazwa,
      OPAK_P.KAUCJA as Kaucja,
      OPAK_P.IL as IL_POZ,
      OPAK_P.WAR as WAR_POZ,
      OPAK_P.reference as OPKP_REF
   from
      @OPAK_P
      join M using (OPAK_P.M,M.reference)
      join @OPAK_N using (OPAK_P.OPAK_N,OPAK_N.reference)
      join KH using (OPAK_N.KH,KH.reference)
   where
      OPAK_N.PLUS=''T''
      and OPAK_N.AKC=''T''
      and OPAK_P.ZWROT=''N''
      and OPAK_P.CZY_KAUC=''T''
      and (OPAK_P.DATA_ZWR is null or OPAK_P.DATA_ZWR<=to_date(:_a))

   order by
      2,3,4,5,6,7',_[1],REF.FIRMA);

{? _tab.first()
|| exec('cntx_psh','opakow_stany');
   {!
   |?
      _del:=0;
      {? _tab.OPKP_REF<>''
      ||
         _name:=ref_name(_tab.OPKP_REF);
         exec('open_tab','opakow_stany',1+(_name+3),_name+2);
         exec('cntx_psh','opakow_stany');
         OPAK_P.prefix();
         _tab.IL_POZ:=_tab.IL_POZ-exec('zwr_poz','opakow',_tab.OPKP_REF);
         {? OPAK_P.seek(_tab.OPKP_REF)
         || _pow:=exec('opow_mk','opakow',0,0);
            _tab.WAR_POZ:=_tab.WAR_POZ-_pow[1];
            &_pow
         ?};
         {? _tab.IL_POZ=0 || _del:=1 || _tab.put() ?};
         exec('cntx_pop','opakow_stany')
      ?};
      {? _del || _tab.del(,1)=2 || _tab.next() ?}
   !};
   exec('cntx_pop','opakow_stany')
?};
_tab


\bil_opak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: bilans opakowan zwrotnych wg kontrahentow
::   WY: tabela z wynikiem
::  OLD: \bil_opak/sql_rpt.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=sql('
   select
      KH.KOD as KH_KOD,
      KH.SKR as KH_SKR,
      OPAK_N.MAG as MAG,
      M.KTM as Indeks,
      M.N as Nazwa,
      OPAK_P.IL as IL,
      OPAK_P.WAR as WAR,
      OPAK_N.PLUS as PLUS,
      OPAK_P.reference as OPKP_REF
   from
      @OPAK_P
      join M using (OPAK_P.M,M.reference)
      join @OPAK_N using (OPAK_P.OPAK_N,OPAK_N.reference)
      join KH using (OPAK_N.KH,KH.reference)
   where
      OPAK_N.AKC=''T''
      and OPAK_P.ZWROT=''N''
      and OPAK_P.CZY_KAUC=''T''');

{? _tab.first()
||
   exec('cntx_psh','opakow_stany');
   {!
   |? {? _tab.OPKP_REF<>''
      ||
         _name:=ref_name(_tab.OPKP_REF);
         exec('open_tab','opakow_stany',1+(_name+3),_name+2);
         exec('cntx_psh','opakow_stany');
         OPAK_P.prefix();
         _tab.IL:=_tab.IL-exec('zwr_poz','opakow',_tab.OPKP_REF);
         {? OPAK_P.seek(_tab.OPKP_REF)
         || _pow:=exec('opow_mk','opakow',0,0);
            _tab.WAR:=_tab.WAR-_pow[1];
            &_pow
         ?};
         exec('cntx_pop','opakow_stany');
         _tab.put()
      ?};
      _tab.next()
   !};
   exec('cntx_pop','opakow_stany')
?};
_tab


\zlec_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MLAK] [17.00]
:: OPIS: Formula na F3 dla symbolu zlecenia
::----------------------------------------------------------------------------------------------------------------------
_result:='';
ZL.cntx_psh();
ZL.win_sel('SLO_SL');
ZL.actions('SLO_SL','XY','W');
ZL.clear();
ZL.index('SYM');
ZL.prefix();
{? ZL.select()
|| _result:=ZL.SYM
?};
ZL.cntx_pop();
_result


\zlec_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MLAK] [17.00]
:: OPIS: Formula na F3 dla symbolu zlecenia
::----------------------------------------------------------------------------------------------------------------------
{? fld()='*' || return(1) ?};
_result:=0;
ZL.cntx_psh();
ZL.index('SYM');
ZL.prefix(fld());
{? ~ZL.first()
|| FUN.error('Brak zlecenia o podanym symbolu'@)
|| _result:=1
?};
ZL.cntx_pop();
_result


\prac_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MLAK] [17.00]
:: OPIS: Formula na F3 dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_result:='';
P.cntx_psh();
_pracownik:=exec('p_select','prod_rej');
{? _pracownik<>null()
|| P.clear();
   {? P.seek(_pracownik)
   || _result:=P.OSOBA().NAZWISKO
   ?}
?};
P.cntx_pop();
_result


\prac_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MLAK] [17.00]
:: OPIS: Formula na F3 dla pracownika
::----------------------------------------------------------------------------------------------------------------------
{? fld()='*' || return(1) ?};
_result:=0;
P.cntx_psh();
_args:=exec('wybierz_args','pracownik');
_args.DOMAIN:='TTE';
_args.F_ZATR:='P,Z';
_args.VIEW:='W';
_ud_def:=exec('szukaj_ud_def','schemat',
  exec('domyslny','schemat','PODZORG'),
__PARSES.getVal('JednostkaOrganizacyjna').REF
   ).REF;
exec('filtruj_p','schemat',_args.DOMAIN,_ud_def,_args.F_ZATR,'',_args.VIEW,_args.SQL_FROM,_args.SQL_WHERE);
 {? P.f_find(fld())
 || _result:=1
 ?};
P.cntx_pop();
_result


\win_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PS] [17.00]
:: OPIS: Tworzy okienko z wyborem parametru pod f3.
::   WE: _a  - STRING - 1 parametr
::       _b  - STRING - 2 parametr
::      [_c] - STRING - 3 parametr
::      [_d] - STRING - 4 parametr
::   WY: Wybrana wartość
::----------------------------------------------------------------------------------------------------------------------
_res:=FUN.choice('Wybierz wartość pola.'@,,_a,_b,{? var_pres('_c')>0 || _c || '' ?},{? var_pres('_d')>0 || _d || '' ?});
gsub(_[_res],'&','')


\valid_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PS] [17.00]
:: OPIS: Sprawdza poprawność wypełnienia pola w oparciu o wartości przekazane w argumentach.
::   WE:  _a  - STRING - treść komunikatu o błędzie, '' - domyślny
::        _b  - STRING - dozwolona wartość
::       [..] - STRING - kolejne dozwolone wartości
::   WY: (0/1) - czy istnieją błędy
::----------------------------------------------------------------------------------------------------------------------
_found:=0; _i:=2;
{!
|? _i<=_
|! {? fld()=_[_i] || _found:=1 ?};
   _i:=_i+1
!};
{? ~_found || FUN.info({? _a='' || 'Niedozwolona wartość.'@ || _a ?}); 0 || 1 ?}


\karotyp_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: Formula na F3 dla typu obrotu KARO
::----------------------------------------------------------------------------------------------------------------------
_wyb:=FUN.choice('Wybierz:'@,'ASK','Wy&dania'@,'Zwroty'@,'Przedwczesne zużycie'@,'Wszystkie'@);
{? _wyb=1 || 'W'
|? _wyb=2 || 'Z'
|? _wyb=3 || 'P'
|? _wyb=4 || '*'
|| ~~
?}


\karotyp_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: Formula 'po' dla typu obrotu KARO
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? 'WZP*'*fld()>0
|| 1
|| FUN.error('Dozwolone wartości:\n\n'
          '\'W\' — wydania\n'
          '\'Z\' — zwroty\n'
          '\'P\' — przedwczesne zużycie\n'
          '\'*\' — wszystkie'@);
   0
?}


\karozwrot_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: Formula na F3 dla rodzaju zwrotu KARO
::----------------------------------------------------------------------------------------------------------------------
_wyb:=FUN.choice('Wybierz:'@,'ASK','Wymagany &zwrot'@,'Niewymagany zwrot'@,'Zwrot &bez terminu zużycia'@,'Wszystkie'@);
{? _wyb=1 || 'T'
|? _wyb=2 || 'N'
|? _wyb=3 || 'B'
|? _wyb=4 || '*'
|| ~~
?}


\karozwrot_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: Formula 'po' dla rodzaju zwrotu KARO
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? 'TNB*'*fld()>0
|| 1
|| FUN.error('Dozwolone wartości:\n\n'
          '\'T\' — wymagany zwrot\n'
          '\'N\' — niewymagany zwrot\n'
          '\'B\' — zwrot bez terminu zużycia\n'
          '\'*\' — wszystkie'@);
   0
?}


\gpod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.22]
:: OPIS: Wyswietla liste gminnych punktów odbioru odpadów
::   WY: zwraca wybrany warunek
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('f3_okno','sql','sql($"select \' \' as Wybrano, GPOD.KOD as Kod, GPOD.NAZ as Nazwa
   from GPOD where GPOD.ODDZ=\':_a\' order by 2",ST.ODDZ)','GPOD.KOD','KOD');
_wyn


\kpo_r_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [19.22]
:: OPIS: Wybór rodzaju karty przekazania odpadów (KPO.R)
::----------------------------------------------------------------------------------------------------------------------
_wyb:=FUN.choice('Wybierz: '@,'ASK','&Przyjęcie'@,'&Wydanie'@, 'Wydanie z &Gminnego Punktu'@);
{? _wyb=1 || 'P'
|? _wyb=2 || 'W'
|? _wyb=3 || 'G'
|| ~~
?}


\kpo_r_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [19.22]
:: OPIS: Po wybraniu rodzaju karty przekazania odpadów (KPO.R)
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? 'PWG*'*fld()>0
|| 1
|| FUN.error('Dozwolone wartości:      \n\n'
          '\'P\' — przyjęcie\n'
          '\'W\' — wydanie\n'
          '\'G\' — wydanie z gminnego punktu odbioru'@);
   0
?}


\remstat_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AKUL] [19.22]
:: OPIS: F3 dla pola 'Status rejestracji'
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
      'CHCK1','INTEGER','',
      'CHCK2','INTEGER','',
      'CHCK3','INTEGER','',
      'CHCK4','INTEGER','',
      'CHCK5','INTEGER',''
   );
_edit:=_tab.mk_edit('Statusy rejestracji'@,0,'#editrem');
_tab.win_efld(_edit,,'CHCK1',,,,,,
   exec('status_new','remonty_zgloszenia',1),,,'check-box',,"1","0");
_tab.win_efld(_edit,,'CHCK2',,,,,,
   exec('status_ended','remonty_zgloszenia',1),,,'check-box',,"1","0");
_tab.win_efld(_edit,,'CHCK3',,,,,,
   exec('status_verified','remonty_zgloszenia',1),,,'check-box',,"1","0");
_tab.win_efld(_edit,,'CHCK4',,,,,,
   exec('status_completed','remonty_zgloszenia',1),,,'check-box',,"1","0");
_tab.win_efld(_edit,,'CHCK5',,,,,,
   exec('status_closed','remonty_zgloszenia',1),,,'check-box',,"1","0");
exec('ok_esc','#window',_tab,_edit);
_tab.CHCK1:=1;_tab.CHCK2:=1;_tab.CHCK3:=1;_tab.CHCK4:=1;_tab.CHCK5:=1;
_tab.win_edit(_edit);
_result:='';
params_set('tab',_tab);
{? _tab.edit($("_tab:=params_get().tab;
              {? _tab.CHCK1=0 & _tab.CHCK2=0
              & _tab.CHCK3=0 & _tab.CHCK4=0
              & _tab.CHCK5=0
              || FUN.info('"+'Należy wybrać przynajmniej jeden status.'@+"'); 'CHCK1'
              || 1
              ?}"))
|| {? _tab.CHCK1=1 || _result+='\''+exec('status_new','remonty_zgloszenia')+'\', ' ?};
   {? _tab.CHCK2=1 || _result+='\''+exec('status_ended','remonty_zgloszenia')+'\', '  ?};
   {? _tab.CHCK3=1 || _result+='\''+exec('status_verified','remonty_zgloszenia')+'\', '  ?};
   {? _tab.CHCK4=1 || _result+='\''+exec('status_completed','remonty_zgloszenia')+'\', '  ?};
   {? _tab.CHCK5=1 || _result+='\''+exec('status_closed','remonty_zgloszenia')+'\', '  ?};
   _result:=_result-2
?};
{? _result='' || ~~ || _result ?}


\remstat_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AKUL] [19.22]
:: OPIS: Po redakcji pola 'Status rejestracji'
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
_tab:=spli_str(fld(),', ');
_err:=1;
_lp:=1;
{? obj_len(_tab) > 0
||
   {! |?
      {? (_tab[_lp]<>'\''+exec('status_new','remonty_zgloszenia')+'\''
       & _tab[_lp]<>'\''+exec('status_ended','remonty_zgloszenia')+'\''
       & _tab[_lp]<>'\''+exec('status_verified','remonty_zgloszenia')+'\''
       & _tab[_lp]<>'\''+exec('status_completed','remonty_zgloszenia')+'\''
       & _tab[_lp]<>'\''+exec('status_closed','remonty_zgloszenia')+'\'')
      ||
         _err:=0
      ?};
      _lp+=1;
      _lp<=obj_len(_tab) & _err
   !}
?};
{? _err=1
|| 1
|| FUN.error('Dozwolone wartości (oddzielone przecinkiem):      \n'@ +
               '\''+exec('status_new','remonty_zgloszenia',1)+'\''+'\n'+
               '\''+exec('status_ended','remonty_zgloszenia',1)+'\''+'\n'+
               '\''+ exec('status_verified','remonty_zgloszenia',1)+'\''+'\n'+
               '\''+exec('status_completed','remonty_zgloszenia',1)+'\''+'\n'+
               '\''+exec('status_closed','remonty_zgloszenia',1)+'\'');
   0
?}


\remstat_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AKUL] [19.22]
:: OPIS: Wartość domyślna pola 'Status rejestracji'
::----------------------------------------------------------------------------------------------------------------------
_result:='\''+exec('status_new','remonty_zgloszenia')+'\''
        +', '+'\''+exec('status_ended','remonty_zgloszenia')+'\''
        +', '+'\''+exec('status_verified','remonty_zgloszenia')+'\''
        +', '+'\''+exec('status_completed','remonty_zgloszenia')+'\''
        +', '+'\''+exec('status_closed','remonty_zgloszenia')+'\''


\remzasob_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AKUL] [19.22]
:: OPIS: Formula na F3 dla zasobów remontowych
::----------------------------------------------------------------------------------------------------------------------
REM_ZAS.cntx_psh();
REM_ZAS.index('SYM');
REM_ZAS.prefix();
_wer:=REM_ZAS.mk_sel('Zasoby'@,'T',0,'sql_zasob_f3');
REM_ZAS.win_fld(_wer,,'SYMBOL',,,15);
REM_ZAS.win_fld(_wer,,'NAZWA',,,15);
REM_ZAS.win_act(_wer,,'Formuła','Wybierz'@@,,,"sel_exit()",,1,,,,'W');
REM_ZAS.win_sel(_wer);
_result:='';
{? REM_ZAS.select(,1,5)
|| _result:=REM_ZAS.SYMBOL
|| _result:=~~
?};
REM_ZAS.cntx_pop();
_result


\remzasob_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AKUL] [19.22]
:: OPIS: Formula po redakcji dla zasobów remontowych
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? fld()='*' || return(1) ?};
_res:=0;
REM_ZAS.cntx_psh();
REM_ZAS.index('SYM');
REM_ZAS.prefix(fld(),);
{? REM_ZAS.first()
|| _res:=1
|| FUN.info('Brak zasobu o symbolu: %1'@[fld()])
?};
REM_ZAS.cntx_pop();
_res


\upr_cm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Sprawdzenie uprawnień do wartości magazynowych
::----------------------------------------------------------------------------------------------------------------------
_upr:=exec('upr_cm','ceny');
{? ~_upr
|| FUN.info('Brak uprawnień do wartości magazynowych.'@)
?};
_upr


\odp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Wyświetla listę rodzaji odpadów
::   WY: zwraca wybrany warunek
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('f3_okno','sql','sql($"select \' \' as Wybrano, ODP.KOD as Kod, SUBSTR(ODP.NAZ,1,150) as Nazwa
   from ODP order by 2")','ODP.KOD','KOD');
_wyn


\keo_typ_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Wybór typu kart ewidencji odpadów (KEO.TYP)
::----------------------------------------------------------------------------------------------------------------------
_wyb:=FUN.choice('Wybierz typ kart ewidencji: '@,'ASK','Karty ewid. &odpadów'@,'Karty ewid. odp. &komunalnych'@,
                 'Karty ewid. odp. niebezp.'@);
{? _wyb=1 || exec('typ_keo','odpady_keo')
|? _wyb=2 || exec('typ_keok','odpady_keo')
|? _wyb=3 || exec('typ_keon','odpady_keo')
|| ~~
?}


\keo_typ_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Po wybraniu typu karty ewidencji odpadów (KEO.TYP)
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || exec('noemptyStr','#field'); return(0) ?};
{? fld()=exec('typ_keo','odpady_keo') | fld()=exec('typ_keok','odpady_keo') | fld()=exec('typ_keon','odpady_keo')
|| 1
|| FUN.error('Dozwolone wartości:      \n\n'
          '\'%1\' — Karty ewidencji odpadów \n'
          '\'%2\' — Karty ewidencji odpadów komunalnych\n'
          '\'%3\' — Karty ewidencji odpadów niebezpiecznych'@
          [exec('typ_keo','odpady_keo'),exec('typ_keok','odpady_keo'),exec('typ_keon','odpady_keo')]);
   0
?}


\mpd_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Wybór miejsca prowadzenia dzialności
::   WY: zwraca wybrany warunek
::----------------------------------------------------------------------------------------------------------------------
_wyn:=fld();
_sql:=sql('
           select KH.KOD,KH.SKR,KH_ODB.KOD as KOD2,KH_ODB.NAZ,KH_ODB.NRMPDBDO
           from KH_ODB left join KH using (KH_ODB.KH,KH.REFERENCE)
           where KH_ODB.NRMPDBDO<>\'\'
          ');
_win:=_sql.mk_sel('Wybór miejsca prowadzenia działaności'@,,,,,,,,'U');
_sql.win_fld(_win,,'KOD',,,,,,'Kod podmiotu'@);
_sql.win_fld(_win,,'SKR',,,,,,'Nazwa podmiotu'@);
_sql.win_fld(_win,,'KOD2',,,,,,'Kod MPD'@);
_sql.win_fld(_win,,'NAZ',,,60,,,'Nazwa MPD'@);
_sql.win_fld(_win,,'NRMPDBDO',,,,,,'Nr rejestrowy MPD'@);
_sql.win_act(_win,,'Formuła','Wybierz'@,,,"sel_exit()",,1);
_sql.win_sel(_win);
{? _sql.select()
|| _wyn:='KH_ODB.NRMPDBDO in (\''+_sql.NRMPDBDO+'\')'
|| _wyn:=exec('no_limit','sql')
?};

_wyn


\e_com
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Wartości dla zapytań e-commerce
::----------------------------------------------------------------------------------------------------------------------
{? TAB_SQLR.first()
||
   _mg_kraj:="
      _wyn:='';
      ND.cntx_psh(); MG.cntx_psh(); FAKS.cntx_psh(); FAP.cntx_psh(); DK.cntx_psh();
      ND.prefix(); MG.prefix(); FAKS.prefix(); FAP.prefix(); DK.prefix();
      {? FAP.seek(TAB_SQLR.FAP_REF,ref_name(TAB_SQLR.FAP_REF))
      ||
         DK.use('dokma'+(FAP.name()+3));
         DK.index('FAP');
         DK.prefix($FAP.ref(),$FAP.ref());
         {? DK.first()
         ||
            {? DK.N<>null || ND.use(8+$DK.N) ?};
            {!|?
:: Przypisanie kraju magazynu
               {? DK.N().MAG<>null & ~(_wyn*DK.N().MAG().KRAJ)
               ||
                  _wyn:=150+(_wyn+', '+DK.N().MAG().KRAJ)
               ?};
               DK.next()
            !};
            _wyn:=2-_wyn
         ?};
:: poprzednia maska
         _rok:=$(#(FAP.name()+2)-1);
         DK.use((('dokma'+(FAP.name()+3))-2)+_rok);
         DK.index('FAP');
         DK.prefix($FAP.ref(),$FAP.ref());
         {? DK.first()
         ||
            {!|?
:: Przypisanie kraju magazynu
               {? DK.N().MAG<>null & ~(_wyn*DK.N().MAG().KRAJ)
               ||
                  _wyn:=150+(_wyn+', '+DK.N().MAG().KRAJ)
               ?};
               DK.next()
            !};
            _wyn:=2-_wyn
         ?}
      ?};
      ND.cntx_pop(); MG.cntx_pop(); FAKS.cntx_pop(); FAP.cntx_pop(); DK.cntx_pop();
      _wyn
   ";
   _nd_sym:="
      _wyn:='';
      ND.cntx_psh(); MG.cntx_psh(); FAKS.cntx_psh(); FAP.cntx_psh();
      ND.prefix(); MG.prefix(); FAKS.prefix(); FAP.prefix();
      {? FAP.seek(TAB_SQLR.FAP_REF,ref_name(TAB_SQLR.FAP_REF))
      ||
         FAKS.use('faktu'+(FAP.name()+3));
         FAKS.index('FAK_SYM1');
         FAKS.prefix(TAB_SQLR.F_SYMBOL,);
         {? FAKS.first()
         ||
            ND.use('nagdo'+(FAKS.name()+3));
            ND.index('FAKS_REF');
            ND.prefix($FAKS.ref(),$FAKS.ref());
            {? ND.first()
            ||
               {!|?
:: Przypisanie symbolu dokumentu magazynowego
                  _wyn:=150+(_wyn+', '+ND.SYM);
                  ND.next()
               !};
               _wyn:=2-_wyn
            ?}
         ?}
      ?};
      ND.cntx_pop(); MG.cntx_pop(); FAKS.cntx_pop(); FAP.cntx_pop();
      _wyn
   ";

   {!|?
      TAB_SQLR.MG_KRAJ:=_mg_kraj();
:      TAB_SQLR.ND_SYM:=_nd_sym();
      TAB_SQLR.put();
      TAB_SQLR.next()
   !};
   TAB_SQLR.first()
?};
1


\jpk_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Wyswietla liste procedur
::   WY: zwraca wybrany warunek
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('f3_okno','sql','sql($"select \' \' as WYBRANO, JPK_SLO.PROCED as PROCED
   from JPK_SLO where JPK_SLO.PROCED<>\'\'group by PROCED order by 2")','JPK_SLO.PROCED','PROCED');
_wyn


\x_null_ec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: zeruje wszystkie zmienne i sprawdza defa
::----------------------------------------------------------------------------------------------------------------------
X_odz_in:=exec('no_limit','sql');
1


\b_action_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: Formula na F3 dla parametru B_ACTION (czynność)
:    WE: _a - T - czynności procesowe (domyślnie), N - nieprocesowe
::----------------------------------------------------------------------------------------------------------------------
_proc:='T';
{? var_pres('_a')>0 & (_a='T' | _a='N')
|| _proc:=_a
?};
{? REF.FIRMA().TYP='C'
|| B_ACTION.index('PROC');
   B_ACTION.prefix('T','T',_proc,)
|| B_ACTION.index('PROC2');
   B_ACTION.prefix('T',_proc,)
?};
B_ACTION.find_key(fld());
B_ACTION.win_sel('SEL');
{? B_ACTION.select(,1,5)
|| B_ACTION.UID
|| ~~
?}


\b_action_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: Formula po redakcji parametru B_ACTION (czynność)
::   WE: _a - T - czynności procesowe (domyślnie), N - nieprocesowe
::----------------------------------------------------------------------------------------------------------------------
_proc:='T';
{? var_pres('_a')>0 & (_a='T' | _a='N')
|| _proc:=_a
?};
_fld:=fld();
{? _fld=''
|| exec('noemptyStr','#field');
   return(0)
?};
{? REF.FIRMA().TYP='C'
|| B_ACTION.index('PROC');
   B_ACTION.prefix('T','T',_proc,_fld,)
|| B_ACTION.index('PROC2');
   B_ACTION.prefix('T',_proc,_fld,)
?};
{? B_ACTION.first() & B_ACTION.UID=_fld
|| 1
|| {? _proc='T'
   || FUN.info('Brak czynności procesowej o symbolu: %1'@[fld()])
   || FUN.info('Brak czynności nieprocesowej o symbolu: %1'@[fld()])
   ?};
   0
?}


\firmy_jak_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: Formula na F3 parametru FIRMY_JAK
::----------------------------------------------------------------------------------------------------------------------
_wyb0:=fld();
_ww:=0;
{? _wyb0='B'
|| _ww:=1
|? _wyb0='*'
|| _ww:=2
?};
_wyb:=FUN.choice('Wybierz firmy: '@,_ww,'Bieżąca'@,'Wszystkie'@);
{? _wyb=1 || 'B'
|? _wyb=2 || 'W'
|| ~~
?}


\firmy_jak_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: Formula po redakcji parametru FIRMY_JAK
::----------------------------------------------------------------------------------------------------------------------
_fld:=fld();
{? _fld=''
|| exec('noemptyStr','#field');
   return(0)
?};
{? 'BW'*_fld>0
|| 1
|| FUN.error('Dozwolone wartości:      \n\n'
          '\'B\' — bieżąca        \n'
          '\'W\' — wszystkie      '@);
   0
?}


\procesy_jak_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: Formula na F3 parametru PROCESY_JAK
::----------------------------------------------------------------------------------------------------------------------
_wyb0:=fld();
_ww:=0;
{? _wyb0='A'
|| _ww:=1
|? _wyb0='*'
|| _ww:=2
?};
_wyb:=FUN.choice('Wybierz procesy: '@,_ww,'Aktywne'@,'Wszystkie'@);
{? _wyb=1 || 'A'
|? _wyb=2 || 'W'
|| ~~
?}


\procesy_jak_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: Formula po redakcji parametru FIRMY_JAK
::----------------------------------------------------------------------------------------------------------------------
_fld:=fld();
{? _fld=''
|| exec('noemptyStr','#field');
   return(0)
?};
{? 'AW'*_fld>0
|| 1
|| FUN.error('Dozwolone wartości:      \n\n'
          '\'A\' — aktywne        \n'
          '\'W\' — wszystkie      '@);
   0
?}


:Sign Version 2.0 jowisz:1045 2023/08/23 14:35:05 0cefe702cf31d0ef7535d9c938f1dfdf213365f8714f32d9944969177c3672f0848c688531780f9093f6d50ce8a1bdd93c1c7058d8da60e63489cf1439657ffe302572c730f95ce00fa5bf4b8f50925f696a105235de530adb323167ce830c66a15a4d6bc9aae509582612339d1cfd0619df6ad08379e40b4b0c3a3927110480
