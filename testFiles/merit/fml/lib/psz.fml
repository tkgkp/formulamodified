:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: psz.fml
:: Utworzony: 09.10.2017
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły oraz obszary robocze dziedziny PSZ.
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Formuła inicjująca dla dziedziny PSZ.
::   WE: [_a] [NUMBER] - Tryb wsadowy (bez komunikatów):
::             0 - Nie [domyślnie];
::             1 - Tak.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;

_jTerm:=app_info('web_sesid')='';
_webTerm:=~_jTerm;

BPMN.KK_DOM:='PPL';
BPMN.SYM_DOM:='PSZ';
exec('__F_ZATR','object');
exec('__RUB','object');
exec('czytaj','#stalesys',,KST,KST_PAR,XINFO);

{? _jTerm
|| exec('__WND','#object')
?};

exec('init_pars','phr_tab');

{? _jTerm
|| exec('init_bufs','phr_tab')
?};

exec('otworz_dok','phr_tab');

{? _webTerm
|| P.use('pracowni');
   exec('otworz_h_um','pracownik','h_um');
   H.use('_hist');
   SZK_PSZK.use('szk_pszk');
   SZK_ZAP.use('szk_zap');
   SZK_KOMP.use('szk_komp');
:: Przygotowywany jest pełen komplet danych: własnych + podwładni.
:: Własne posłużą do zmiany kontekstu.
:: Podwładni - do czynności związanych z podwładnymi.
   exec('p_web_cx_set','p_web',,,_batch)
|| 1
?}


\env_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Formuła odpowiedzialna za ustawienie środowiska pracy webTerm-a.
::   WE: [_a] [NUMBER] - Tryb wsadowy (bez komunikatów):
::             0 - Nie [domyślnie];
::             1 - Tak.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;
exec('env_wt','b_proces') & exec('init','psz',_batch) & exec('load_cur_prac','p_web','JA',_batch)


\psz_sdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Główna formuła obszaru PSZ_SDO - Ewidencja szkoleń.
::       Konfiguracja okna i sposobu działania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('init','psz');

: tworzy element kontekstu dla okienka
_item:="
   _item:=obj_new('key','row');
   _item.key:=_a;
   _item.row:=null;
   _item
";

: wewnątrz obszaru funkcjonalność jest zmieniana
_fml_zest:=exec('save_fml_all','#field',ZA_ZEST);
_fml_opis:=exec('save_fml_all','#field',SZK_OPIS);
_fml_prac:=exec('save_fml_all','#field',SZK_PRAC);

_loop:=1;
{!
|? _loop
|!
: kontekst przeglądania
   _ctx:=obj_new('Z1','Z2','Z3','ACCESS','SENDTAB','WINDOW');
   params_set('ctx',_ctx);
   _ctx[1]:=obj_new('szk_opis','szk_prac');
   _ctx[1].szk_opis:=_item('DATA_ORG');
   _ctx[1].szk_prac:=_item('SZK_PRAC');
   _ctx[2]:=obj_new('szk_org','szk_opis','szk_prac');
   _ctx[2].szk_org:=_item('SZK_ORG');
   _ctx[2].szk_opis:=_item('ORG_DATA');
   _ctx[2].szk_prac:=_item('SZK_PRAC');
   _ctx[3]:=obj_new('ud_def','p','szk_prac');
   _ctx[3].ud_def:=_item('SYMBOL');
   _ctx[3].p:=_item('PRACONAZ');
   _ctx[3].szk_prac:=_item('PRAC_DAT');
   _ctx[4]:=
      exec('chk_role','#b__box',OPERATOR.USER,'PSZ_SDO_PSZK') |
      exec('chk_role','#b__box',OPERATOR.USER,'PSZ_SDO_RSZK') |
      exec('chk_role','#b__box',OPERATOR.USER,'PSZ_SDO_ROSZ') |
      exec('chk_role','#b__box',OPERATOR.USER,'PSZ_SDO_PWYN');
   _ctx[6]:=obj_new('win_1_1','win_2_1','win_2_2','win_3_1');

: obsługa niezależna od kontekstu
   SZK_OPIS.fld_fml('BS_TMP','PATTERN',"
      {? exec('zz_tmpt_ref','phr_dane',SZK_OPIS)
      || ZA_ZEST.fld_fml('ZZ_LINK','BLANK',$('ZZ_TMPT.ZZ_DOK'))
      ?};
      ''
   ");
: edycja tylko dla uprawnionych
   SZK_PRAC.fld_fml('OBECNY','BEFORE_EDIT',
      $$exec('chk_role','#b__box',OPERATOR.USER,'PSZ_SDO_ROSZ')
   );

   P.cntx_psh();
   SZK_OPIS.cntx_psh();
   _wnd:=exec('psz_sdo_config','psz');
   P.win_sel(_wnd);
   SZK_OPIS.win_edit('ORG_RED');
   AreaTitle.setTabWin(P,_wnd);
   AreaTitle.setTitle();
   _loop:=P.select();
   P.cntx_pop();
   SZK_OPIS.cntx_pop();
   P.win_del(_wnd);
   obj_del(_ctx)
!};

: powrót do stanu pierwotnego obsługi tabel
exec('restore_fml_all','#field',SZK_PRAC,_fml_prac);
exec('restore_fml_all','#field',SZK_OPIS,_fml_opis);
exec('restore_fml_all','#field',ZA_ZEST,_fml_zest);
~~


\psz_sdo_config
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Formuła konfigurująca interfejs obszaru PSZ_SDO.
::   WE:
::   WY: akronim okna obszaru
::----------------------------------------------------------------------------------------------------------------------
_mode:='maximized_with_title';

_wnd:=P.grp_make(,
:  przed wypełnieniem
   "params_exec('psz_sdo_bf','psz')",
:  identyfikator
   'psz_sdo',
:  położenie
   ,,
:  przy zamknięciu
   "_val:=exec('exit','zws'); {? _val || params_exec('psz_sdo_oc','psz')?}",
   ,
:  tryb wyświetlania
   'maximized'
);
params_set(_par:=params_get());
_ctx:=_par.ctx[6];
_inTerm:=
   {? ~exec('interm','#system')
   || exec('pxx_widok_uproszczony','pkd','PSZ_SDO')
   || 1
   ?};

{? _inTerm
|| _ctx.win_1_1:='SELI';
   _ctx.win_2_1:='SELI';
   _ctx.win_2_2:='ORGI';
   _ctx.win_3_1:='PSZ_SELI';
   _tb_splt:='horizontal';
::  wyznaczam wysokość zakładki
   _h_21:=5
|| _ctx.win_1_1:='SEL';
   _ctx.win_2_1:='SEL';
   _ctx.win_2_2:='ORG';
   _ctx.win_3_1:='PSZ_SEL';
   _tb_splt:='vertical';
   _h_21:=10;
   _bar:=SZK_OPIS.mk_edit(,,'szk_opis_rs');
: dodaj przyciski czynności do listwy
   exec('psz_sdo_button','psz',_bar,'PSZ_SDO_PDOS');
   exec('psz_sdo_button','psz',_bar,'PSZ_SDO_PWZS');
   exec('psz_sdo_button','psz',_bar,'PSZ_SDO_POFS');
   exec('psz_sdo_button','psz',_bar,'PSZ_SDO_PTRS');
   exec('psz_sdo_button','psz',_bar,'PSZ_MAT_PMSZ');
   P.grp_edit(_wnd,SZK_OPIS,_bar,,,,,,'maximized','szk_opis_rs');
   P.grp_splt(_wnd,,'horizontal','content')
: poniżej zasadnicza zawartość obszaru
?};
: lista wszystkich szkoleń
P.grp_sel(_wnd,SZK_OPIS,_ctx.win_1_1,'Wg szkoleń'@,
:  po odświeżeniu
   "params_exec('psz_sdo_opis1_ar','psz')",
:  położenie i wysokość
   ,,10,
:  przed obsługą
   "params_exec('psz_sdo_opis1_bs','psz',_a)",
:  po obsłudze
   "params_exec('psz_sdo_opis1_as','psz',_a)",
:  utrwalenie, aktywacja, wypełnienie
   0,0,_mode,'szk_opis_1',1
);

P.tab_splt(_wnd,,'horizontal','bottom');
: uczestnicy wskazanego szkolenia
P.grp_sel(_wnd,SZK_PRAC,'OPIS',,
:  po odświeżeniu
   "params_exec('psz_sdo_prac1_ar','psz')",
:  położenie i wysokość
   ,,,
:  przed obsługą
   "params_exec('psz_sdo_prac1_bs','psz',_a)",
:  po obsłudze
   "params_exec('psz_sdo_prac1_as','psz',_a)",
:  utrwalenie, aktywacja, wypełnienie
   0,0,_mode,'szk_prac_1'
);

: lista oraganizatorów
P.grp_sel(_wnd,SZK_ORG,_ctx.win_2_1,'Wg organizatorów'@,
:  po odświeżeniu
   "params_exec('psz_sdo_org_ar','psz')",
:  położenie i wysokość
   ,,_h_21,
:  przed obsługą
   "params_exec('psz_sdo_org_bs','psz',_a)",
:  po obsłudze
   "params_exec('psz_sdo_org_as','psz',_a)",
:  utrwalenie, aktywacja, wypełnienie
   0,0,_mode,'szk_org_1'
);

P.tab_splt(_wnd,,_tb_splt,'right');
: szkolenia wskazanego organizatora
P.grp_sel(_wnd,SZK_OPIS,_ctx.win_2_2,,
:  po odświeżeniu
   "params_exec('psz_sdo_opis2_ar','psz')",
:  położenie i wysokość
   ,,_h_21,
:  przed obsługą
   "params_exec('psz_sdo_opis2_bs','psz',_a)",
:  po obsłudze
   "params_exec('psz_sdo_opis2_as','psz',_a)",
:  utrwalenie, aktywacja, wypełnienie
   0,0,_mode,'szk_opis_2'
);

P.tab_splt(_wnd,,'horizontal','bottom',',66%');
: uczestnicy wskazanego szkolenia
P.grp_sel(_wnd,SZK_PRAC,'OPIS',,
:  po odświeżeniu
   "params_exec('psz_sdo_prac2_ar','psz')",
:  położenie i wysokość
   ,,10,
:  przed obsługą
   "params_exec('psz_sdo_prac2_bs','psz',_a)",
:  po obsłudze
   "params_exec('psz_sdo_prac2_as','psz',_a)",
:  utrwalenie, aktywacja, wypełnienie
   0,0,_mode,'szk_prac_2'
);
{? ~_inTerm
||
: nawigator po domyślnym schemacie oraganizacyjnym
   P.grp_sel(_wnd,UD_DEF,'NAW_MIN','Wg pracowników'@,
:  po odświeżeniu
      "params_exec('psz_sdo_ud_def_ar','psz')",
:  położenie i wysokość
      ,,10,
:  przed obsługą
      "params_exec('psz_sdo_ud_def_bs','psz',_a)",
:  po obsłudze
      "params_exec('psz_sdo_ud_def_as','psz',_a)",
:  utrwalenie, aktywacja, wypełnienie
      0,0,_mode,'ud_skl'
   );

   P.tab_splt(_wnd,,'vertical','right');
: pracownicy wskazanej jednostki organizacyjnej
   P.grp_sel(_wnd,P,_ctx.win_3_1,,
:  po odświeżeniu
      "params_exec('psz_sdo_p_ar','psz')",
:  położenie i wysokość
      ,,,
:  przed obsługą
      "params_exec('psz_sdo_p_bs','psz',_a)",
:  po obsłudze
      "params_exec('psz_sdo_p_as','psz',_a)",
:  utrwalenie, aktywacja, wypełnienie
      0,0,_mode,'prac'
   )
||
: pracownicy wskazanej jednostki organizacyjnej
   P.grp_sel(_wnd,P,_ctx.win_3_1,'Wg pracowników'@,
:  po odświeżeniu
      "params_exec('psz_sdo_p_ar','psz')",
:  położenie i wysokość
      ,,10,
:  przed obsługą
      "
       UD_DEF.cntx_psh();
       exec('domyslny','schemat','PODZORG');
       UD_DEF.index('SCHSYM');
       UD_DEF.prefix(UD_SCH.ref(),exec('firma_symbol','#firma'));
       {? UD_DEF.first()
       || exec('filtruj_p','schemat','PSZ',UD_DEF.ref(),'','T','*')
       ?};
       UD_DEF.cntx_pop();
       {? exec('interm','#system')
       || P.actions_grayed(cur_win(1,1),'J(I):J(I)')
       ?}
      "

      ,
:  po obsłudze
::      "params_exec('psz_sdo_p_as','psz',_a)"
      ,
:  utrwalenie, aktywacja, wypełnienie
      0,0,_mode,'prac'
   )
?};
P.tab_splt(_wnd,,'horizontal','bottom');
: szkolenia wskazanego pracownika
P.grp_sel(_wnd,SZK_PRAC,'P',,
:  po odświeżeniu
   "params_exec('psz_sdo_prac3_ar','psz')",
:  położenie i wysokość
   ,,,
:  przed obsługą
   "params_exec('psz_sdo_prac3_bs','psz',_a)",
:  po obsłudze
   "params_exec('psz_sdo_prac3_as','psz',_a)",
:  utrwalenie, aktywacja, wypełnienie
   0,0,_mode,'szk_prac_3'
);

_wnd


\psz_sdo_bf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed wypełnieniem okienka obszaru PSZ_SDO.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
SZK_ORG.cntx_psh();
SZK_OPIS.cntx_psh();
SZK_PRAC.cntx_psh();

UD_TYP.cntx_psh();
UD_SCH.cntx_psh();
UD_SKL.cntx_psh();
UD_DEF.cntx_psh();

_typ:='PODZORG';
_sch:=exec('domyslny','schemat',_typ);
_skl:=exec('ud_skl_firma','schemat',_typ);
UD_DEF.index('SYMBOL');
UD_DEF.prefix(_sch);
exec('ud_def_root','schemat','NAW_MIN',_sch,_skl);

1


\psz_sdo_oc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed zamknięciu okienka obszaru PSZ_SDO.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
SZK_PRAC.cntx_pop();
SZK_OPIS.cntx_pop();
SZK_ORG.cntx_pop();

UD_DEF.cntx_pop();
UD_SKL.cntx_pop();
UD_SCH.cntx_pop();
UD_TYP.cntx_pop();

1


\psz_sdo_opis1_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po odświeżeniu okienka SEL tabeli SZK_OPIS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
grp_disp(SZK_PRAC,'OPIS',1,1);
~~


\psz_sdo_opis1_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka SEL tabeli SZK_OPIS.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_ctx:=_par.ctx[1].szk_opis;

{? _par.ctx[4]=0
|| return('#disable')
?};

{? _a
|| SZK_OPIS.fld_fml('ORG','BLANK',"null");
   SZK_OPIS.fld_fml('ORG','BEFORE_EDIT',"1");
   SZK_OPIS.efld_opt(SZK_OPIS.win_edit('?'),'mark=1',,'ORG','NAZWA')
?};

{? exec('interm','#system')
|| SZK_OPIS.actions_grayed(_par.ctx.WINDOW.win_1_1,'J(I):J(I)')
?};

SZK_OPIS.index(_ctx.key);
SZK_OPIS.prefix();
SZK_OPIS.seek(_ctx.row);
~~


\psz_sdo_opis1_as
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po obsłudze okienka SEL tabeli SZK_OPIS.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ctx:=params_get().ctx[1].szk_opis;

{? _a
|| _ctx.key:=SZK_OPIS.index('?');
   _ctx.row:=SZK_OPIS.ref()
?};
~~


\psz_sdo_prac1_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po odświeżeniu okienka OPIS tabeli SZK_PRAC.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('psz_sdo_prac_akc','psz');
~~


\psz_sdo_prac1_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka OPIS tabeli SZK_PRAC.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
{? grp_empty(SZK_OPIS,_par.ctx[6].win_1_1,1)
|| return('#disable')
?};

{? _a
|| SZK_PRAC.fld_fml('P','BLANK',"null");
   SZK_PRAC.fld_fml('SZKOL','BLANK',"SZK_OPIS.ref()")
?};

_ctx:=params_get().ctx[1].szk_prac;

SZK_PRAC.index(_ctx.key);
SZK_PRAC.prefix(SZK_OPIS.ref());
SZK_PRAC.seek(_ctx.row);
~~


\psz_sdo_prac1_as
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po obsłudze okienka OPIS tabeli SZK_PRAC.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ctx:=params_get().ctx[1].szk_prac;

{? _a
|| _ctx.key:=SZK_PRAC.index('?');
   _ctx.row:=SZK_PRAC.ref()
?};
~~


\psz_sdo_org_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po odświeżeniu okienka SEL tabeli SZK_ORG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
grp_disp(SZK_OPIS,_par.ctx[6].win_2_2,1,1);
~~


\psz_sdo_org_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka SEL tabeli SZK_ORG.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_ctx:=_par.ctx[2].szk_org;

{? _par.ctx[4]=0
|| return('#disable')
?};

{? exec('interm','#system')
|| SZK_ORG.actions_grayed(_par.ctx.WINDOW.win_2_1,'J(I):J(I)')
?};

SZK_ORG.index(_ctx.key);
SZK_ORG.seek(_ctx.row);
~~


\psz_sdo_org_as
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po obsłudze okienka SEL tabeli SZK_ORG.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ctx:=params_get().ctx[2].szk_org;

{? _a
|| _ctx.key:=SZK_ORG.index('?');
   _ctx.row:=SZK_ORG.ref()
?};
~~


\psz_sdo_opis2_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po odświeżeniu okienka ORG tabeli SZK_OPIS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
grp_disp(SZK_PRAC,'OPIS',1,1);
~~


\psz_sdo_opis2_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka ORG tabeli SZK_OPIS.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_ctx:=_par.ctx[2].szk_opis;

{? _par.ctx[4]=0
|| return('#disable')
?};

{? _a
|| SZK_OPIS.fld_fml('ORG','BLANK',"SZK_ORG.ref()");
   SZK_OPIS.fld_fml('ORG','BEFORE_EDIT',"0");
   SZK_OPIS.efld_opt(SZK_OPIS.win_edit('?'),'mark=0',,'ORG','NAZWA')
?};

SZK_OPIS.index(_ctx.key);
SZK_OPIS.prefix(SZK_ORG.ref());
SZK_OPIS.seek(_ctx.row);
~~


\psz_sdo_opis2_as
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po obsłudze okienka ORG tabeli SZK_OPIS.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ctx:=params_get().ctx[2].szk_opis;

{? _a
|| _ctx.key:=SZK_OPIS.index('?');
   _ctx.row:=SZK_OPIS.ref()
?};
~~


\psz_sdo_prac2_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po odświeżeniu okienka OPIS tabeli SZK_PRAC.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('psz_sdo_prac_akc','psz');
~~


\psz_sdo_prac2_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka OPIS tabeli SZK_PRAC.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
{? grp_empty(SZK_OPIS,_par.ctx[6].win_2_2,1)
|| return('#disable')
?};

{? _a
|| SZK_PRAC.fld_fml('P','BLANK',"null");
   SZK_PRAC.fld_fml('SZKOL','BLANK',"SZK_OPIS.ref()")
?};

_ctx:=params_get().ctx[2].szk_prac;

SZK_PRAC.index(_ctx.key);
SZK_PRAC.prefix(SZK_OPIS.ref());
SZK_PRAC.seek(_ctx.row);
~~


\psz_sdo_prac2_as
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po obsłudze okienka OPIS tabeli SZK_PRAC.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ctx:=params_get().ctx[2].szk_prac;

{? _a
|| _ctx.key:=SZK_PRAC.index('?');
   _ctx.row:=SZK_PRAC.ref()
?};
~~


\psz_sdo_ud_def_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po odświeżeniu okienka NAW_MIN tabeli UD_DEF.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
grp_disp(P,_par.ctx[6].win_3_1,1,1);
~~


\psz_sdo_ud_def_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka NAW_MIN tabeli UD_DEF.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_ctx:=_par.ctx[3].ud_def;

{? _par.ctx[4]=0
|| return('#disable')
?};
~~


\psz_sdo_ud_def_as
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po obsłudze okienka NAW_MIN tabeli UD_DEF.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\psz_sdo_p_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po odświeżeniu okienka PSZ_SEL tabeli P.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
grp_disp(SZK_PRAC,'P',1,1);
~~


\psz_sdo_p_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka PSZ_SEL tabeli P.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? grp_empty(UD_DEF,'NAW_MIN',1)=1
|| return('#disable')
?};

exec('filtruj_p','schemat','PSZ',UD_DEF.ref(),'','T','*');

_ctx:=params_get().ctx[3].p;
P.index(_ctx.key);
P.seek(_ctx.row);
~~


\psz_sdo_p_as
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po obsłudze okienka PSZ_SEL tabeli P.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ctx:=params_get().ctx[3].p;

{? _a
|| _ctx.key:=P.index('?');
   _ctx.row:=P.ref()
?};
~~


\psz_sdo_prac3_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po odświeżeniu okienka P tabeli SZK_PRAC.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('psz_sdo_prac_akc','psz');
~~


\psz_sdo_prac3_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka P tabeli SZK_PRAC.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
{? grp_empty(P,_par.ctx[6].win_3_1,1)
|| return('#disable')
?};

{? _a
|| SZK_PRAC.fld_fml('P','BLANK',"P.ref()");
   SZK_PRAC.fld_fml('SZKOL','BLANK',"null")
?};

_ctx:=params_get().ctx[3].szk_prac;

SZK_PRAC.index(_ctx.key);
SZK_PRAC.prefix(P.ref());
SZK_PRAC.seek(_ctx.row);
~~


\psz_sdo_prac3_as
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po obsłudze okienka P tabeli SZK_PRAC.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ctx:=params_get().ctx[3].szk_prac;

{? _a
|| _ctx.key:=SZK_PRAC.index('?');
   _ctx.row:=SZK_PRAC.ref()
?};
~~


\psz_sdo_prac_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Ustala dostępność akcji na liście uczestników szkolenia.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_disable:=
   {? SZK_PRAC.sel_size()<>0 || ''
   |? SZK_PRAC.OBECNY='T' || 'O'
   || 'N'
   ?};
{? SZK_OPIS.get()
|| SZK_PRAC.cntx_psh();
   SZK_PRAC.index('SZK_PRAC');
   SZK_PRAC.prefix(SZK_OPIS.ref());
   _div:=':';
   {? SZK_PRAC.size()=SZK_OPIS.LIMIT
   || _disable+='D'
   ?};
   {? exec('interm','#system')
   || _act:='J(I)';
      _disable:='%1%2%3%1'[_act,_disable,_div];
      _div:=''
   ?};
   SZK_PRAC.cntx_pop()
?};
SZK_PRAC.actions_grayed(cur_win(1,1),_disable);
~~


\psz_sdo_button
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Tworzy przycisk na listwie dostępu do czynności obszaru.
::   WE: _a [STRING] - akronim listwy przycisków
::       _b [STRING] - identyfikator czynności
::   WY: identyfikator przycisku
::UWAGA: poprawność argumentów wywołania nie jest weryfikowana
::----------------------------------------------------------------------------------------------------------------------
_text:='';
B_ACTION.cntx_psh();
B_ACTION.index('UNIK');
B_ACTION.prefix(_b,);
{? B_ACTION.first()
|| _text:=B_ACTION.NAME
|| B_ACTION.cntx_pop();
   return('')
?};
B_ACTION.cntx_pop();
{? _text='Oferty szkoleniowe' || _text:='O&ferty szkoleniowe' ?};
: utwórz przycisk czynności
_btn:=SZK_OPIS.win_ebtn(_a,
   'text=%1,panel=bottom,align=begin,display=1'[_text],
   $("exec('np_run','#b__box','"+_b+"');''")
);
: ustaw dodatkowe opcje
SZK_OPIS.btn_eopt(_a,_btn,'state=%1,tooltip="%2"'
   [{? exec('chk_role','#b__box',OPERATOR.USER,_b) || 'normal' || 'grayed' ?},_text]
);

: przycisk
_btn


\psz_sdo_widok_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [21.37]
:: OPIS: Zmiana widoku uproszczony/rozbudowany.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('pxx_widok_zmien','pkd','PSZ_SDO')


\psz_sdw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Główna formuła obszaru PSZ_SDW - Szkolenia (@webTerm).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('env_wt','psz')
|| return()
?};

web_params_set(
   exec('obj_ntab_set','#array',,
      'CUR_PRAC_SETID','JA',
      'P_WEB_WER_WYBIERZ_A',"{? exec('env_wt','psz') || exec('set_title','#b_area','PSZ_SDW') ?}"
   )
);

exec('set_title','#b_area','PSZ_SDW');

_grp:='WEBGRPSZ';
exec('p_web_cx_set_prefix','p_web',,'RODZAJ','W');
P.web_btn_einit(_grp,'WEB_PWV1','ZMIEN','state='+{? P_WEB_CX.size()>1 || 'normal' || 'grayed' ?});
P.web_select(_grp);
~~


\psz_sdw_zapotrzw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Obsługa przycisku "Zapotrzebowania własne" w obszarze PSZ_SDW.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('env_wt','psz')
|| exec('np_run','#b__box','PSZ_SDW_RZAP')
?};
~~


\psz_sdw_zapotrzp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Obsługa przycisku "Zapotrzebowania podwładnych" w obszarze PSZ_SDW.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('env_wt','psz')
|| exec('np_run','#b__box','PSZ_SDW_RZPP')
?};
~~


\psz_sdw_planyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [18.02]
:: OPIS: Obsługa przycisku "Plany podwładnych" w obszarze PSZ_SDW.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('env_wt','psz')
|| exec('np_run','#b__box','PSZ_SDW_PPPP')
?};
~~


\psz_sdw_zapisyw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Obsługa przycisku "Zapisy własne" w obszarze PSZ_SDW.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('env_wt','psz')
|| exec('np_run','#b__box','PSZ_SDW_RZSZ')
?};
~~


\psz_sdw_zapisyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Obsługa przycisku "Zapisy podwładnych" w obszarze PSZ_SDW.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('env_wt','psz')
|| exec('np_run','#b__box','PSZ_SDW_RZPS')
?};
~~


\psz_sdw_potwierdzenia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Obsługa przycisku "Potwierdzenia" w obszarze PSZ_SDW.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('env_wt','psz')
|| exec('np_run','#b__box','PSZ_SDW_PUCZ')
?};
~~


\psz_tbs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Główna formuła obszaru PSZ_TBS - Budżety szkoleń.
::       Konfiguracja okna i sposobu działania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('init','psz');

_wnd:=exec('psz_tbs_config','psz');

SZB_OKR.cntx_psh();
SZB_OKR.win_sel(_wnd);
AreaTitle.setTabWin(SZB_OKR,_wnd);
AreaTitle.setTitle();
SZB_OKR.select();
SZB_OKR.cntx_pop();

SZB_OKR.win_del(_wnd);
~~


\psz_tbs_config
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Formuła konfigurująca interfejs obszaru PSZ_TBS.
::   WE:
::   WY: akronim okna obszaru
::----------------------------------------------------------------------------------------------------------------------
_mode:='maximized_with_title';

_wnd:=SZB_OKR.grp_make(,
:  przed wypełnieniem
   "params_exec('psz_tbs_bf','psz')",
:  identyfikator
   'psz_tbs',
:  położenie
   ,,
:  przy zamknięciu
   "_val:=exec('exit','zws'); {? _val || params_exec('psz_tbs_oc','psz')?}",,
:  tryb wyświetlania
   'maximized'
);

SZB_OKR.grp_sel(_wnd,,'WER',,
:  po odświeżeniu
   "params_exec('psz_tbs_okr_ar','psz')",
:  położenie i wysokość
   ,,5,
:  przed obsługą
   "",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode,,1
);

SZB_OKR.grp_splt(_wnd,,'horizontal','bottom',',33%');

SZB_OKR.grp_sel(_wnd,SZB_POZ,'WER','Struktura'@,
:  po odświeżeniu
   "params_exec('psz_tbs_poz_ar','psz')",
:  położenie i wysokość
   ,,10,
:  przed obsługą
   "params_exec('psz_tbs_poz_bs','psz',_a)",
:  po obsłudze
   "params_exec('psz_tbs_poz_as','psz',_a)",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);

SZB_OKR.tab_splt(_wnd,,'horizontal','bottom');

SZB_OKR.grp_sel(_wnd,SZB_WYK,'WER',,
:  po odświeżeniu
   "",
:  położenie i wysokość
   ,,,
:  przed obsługą
   "params_exec('psz_tbs_wyk_bs','psz',_a)",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);

SZB_OKR.grp_sel(_wnd,SZK_OPIS,'OKR','Wykorzystanie'@,
:  po odświeżeniu
   "",
:  położenie i wysokość
   ,,,
:  przed obsługą
   "params_exec('psz_tbs_szk_bs','psz',_a)",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);

_wnd


\psz_tbs_bf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed wypełnieniem okienka.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SZB_OKR.cntx_psh();
SZB_OKR.index('OD');
SZB_OKR.prefix(exec('ref_firma','ustawienia'));

SZB_POZ.cntx_psh();
SZB_POZ.index('SZB_POZ');

SZB_WYK.cntx_psh();
SZB_WYK.index('SZB_POZ');

SZK_OPIS.cntx_psh();
SZK_OPIS.index('SZB_OKR');

1


\psz_tbs_oc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przy zamykaniu okienka.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SZB_OKR.cntx_pop();
SZB_POZ.cntx_pop();
SZB_WYK.cntx_pop();
SZK_OPIS.cntx_pop();
1


\psz_tbs_okr_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po odświeżeniu okienka WER tabeli SZB_OKR.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
grp_disp(SZB_POZ,'WER',1);
grp_disp(SZK_OPIS,'OKR',1);
~~


\psz_tbs_poz_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po odświeżeniu okienka WER tabeli SZB_POZ.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
grp_disp(SZB_WYK,'WER',1);
grp_disp(SZB_OKR,'WER')


\psz_tbs_poz_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka WER tabeli SZB_POZ.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? grp_empty(SZB_OKR,'WER')=1
|| return('#disable')
?};

SZB_POZ.actions_grayed('WER',{? _a & SZB_OKR.SZK_PLAN=null() || 'Z:Z' || '' ?});

ZZ_POM.KREATORY:='#PSZ_TBS#SZB_POZ#WER#';
SZB_POZ.prefix(SZB_OKR.ref())


\psz_tbs_poz_as
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po obsłudze okienka WER tabeli SZB_POZ.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZZ_POM.KREATORY:=''


\psz_tbs_wyk_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka WER tabeli SZB_WYK.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? grp_empty(SZB_POZ,'WER')=1
|| return('#disable')
?};

SZB_WYK.prefix(SZB_POZ.ref())


\psz_tbs_szk_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka OKR tabeli SZK_OPIS.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? grp_empty(SZB_OKR,'WER')=1
|| return('#disable')
?};

SZK_OPIS.prefix(SZB_OKR.ref())


\szb_okr_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko przed okienek tabeli SZB_OKR.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_psh','phr_widok','PSZ_TBS_RBUD');

SZB_OKR.win_edit('RED');
SZB_OKR.win_patt('WZO');

SZK_PLAN.win_dict('SLO');

1


\szb_okr_fld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed wyświetleniem i po redakcji pól SZB_OKR.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
SZB_OKR.efld_opt('RED','enable=%1,mark=%1'[$(SZB_OKR.PLAN='T')],,'SZK_PLAN','OD');
SZB_OKR.efld_opt('RED','enable=%1'[$(SZB_OKR.PLAN='T')],,'SZK_PLAN','DO');
SZB_OKR.efld_opt('RED','enable=%1,mark=%1'[$(SZB_OKR.PLAN<>'T')],,'OD');
SZB_OKR.efld_opt('RED','enable=%1,mark=%1'[$(SZB_OKR.PLAN<>'T')],,'DO');
SZB_OKR.efld_opt('RED','enable=%1,mark=%1'[$(SZB_OKR.PLAN<>'T')],,'RODZAJ','KOD');
SZB_OKR.efld_opt('RED','enable=%1'[$(SZB_OKR.PLAN<>'T')],,'RODZAJ','NAZWA');

SZB_OKR.efld_opt('NFO','enable=%1'[$(SZB_OKR.PLAN='T')],,'SZK_PLAN','OD');
SZB_OKR.efld_opt('NFO','enable=%1'[$(SZB_OKR.PLAN='T')],,'SZK_PLAN','DO');
SZB_OKR.efld_opt('NFO','enable=%1'[$(SZB_OKR.PLAN<>'T')],,'OD');
SZB_OKR.efld_opt('NFO','enable=%1'[$(SZB_OKR.PLAN<>'T')],,'DO');
SZB_OKR.efld_opt('NFO','enable=%1'[$(SZB_OKR.PLAN<>'T')],,'RODZAJ','KOD');
SZB_OKR.efld_opt('NFO','enable=%1'[$(SZB_OKR.PLAN<>'T')],,'RODZAJ','NAZWA');

1


\szb_okr_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko po okienek tabeli SZB_OKR.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_pop','phr_widok');
1


\szb_okr_wyswietl_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed wyświetl okienek tabeli SZB_OKR.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SZK_PLAN.cntx_psh();
SZB_OKR.cntx_psh();
SZB_OKR.win_edit('NFO');
SZB_OKR.display();
SZB_OKR.cntx_pop();
SZK_PLAN.cntx_pop();
~~


\szb_okr_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po redakcji wiersza tabeli SZB_OKR.
::   WE:
::   WY: wynik testu poprawności danych
::----------------------------------------------------------------------------------------------------------------------
exec('szb_okr_modb','phr_sz_tab');

exec('szb_okr_chk','phr_sz_tab',-menu_txt()='popraw')


\szb_poz_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko przed okienek tabeli SZB_POZ.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_psh','phr_widok','PSZ_TBS_RBUD');
exec('szukaj_ud_typ','schemat','PODZORG');

{? exec('chk_role','#b__box',OPERATOR.USER,'PSZ_TBS_RBUD')
|| SZB_POZ.dnd_sel('WER',,'records.SZB_POZ',"exec('szb_poz_dnd','psz')")
?};

SZB_POZ.win_edit('RED');
SZB_POZ.win_patt('WZO');

1


\szb_poz_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko po okienek tabeli SZB_POZ.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_pop','phr_widok');

SZB_POZ.dnd_sel('WER',,'records.SZB_POZ');

1


\szb_poz_fld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed wyświetleniem i po redakcji pól SZB_POZ.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
SZB_POZ.efld_opt('RED','enable=%1'[$(SZB_POZ.WYLICZ<>'T')],,'KW_POZ');
SZB_POZ.efld_opt('NFO','enable=%1'[$(SZB_POZ.WYLICZ<>'T')],,'KW_POZ');

1


\szb_poz_wyswietl_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed wyświetl okienek tabeli SZB_POZ.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SZB_POZ.cntx_psh();
SZB_POZ.win_edit('NFO');
SZB_POZ.display();
SZB_POZ.cntx_pop();
~~


\szb_poz_dnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Obsługa drag and drop dla okienek tabeli SZB_POZ.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_state:=no_msg(1);

_rec:=dnd_info('dropped_records');
_SRC:=ref_tab(form(dnd_info('table_name'),8)+'00000001');

{? _SRC=SZB_POZ
:  przesunięcie upuszczonych zapisów w drzewku
|| errno();
   _test:=1;
   _loop:=_rec.first();
   do();
   {!
   |? _loop & _test
   |! {? SZB_POZ.seek(_rec.REF,)
      || SZB_POZ.SZB_POZ:=#dnd_info('dest_record');
         {? __CHK.index(SZB_POZ,1)=''
         || _test:=SZB_POZ.put()
         || _test:=0
         ?}
      ?};
      _loop:=_rec.next()
   !};
   {? ~_test
   || undo();
      FUN.emsg(
         {? errno()=377
         || 'Wykryto próbę naruszenia struktury hierarchicznej.\n'
            'Reorganizacja pozycji została anulowana.'@
         || 'Reorganizacja pozycji nie powiodła się.'@
         ?}
      )
   ?};
   end()
?};

no_msg(_state)


\szb_poz_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po redakcji wiersza tabeli SZB_POZ.
::   WE:
::   WY: wynik testu poprawności danych
::----------------------------------------------------------------------------------------------------------------------
exec('szb_poz_chk','phr_sz_tab',-menu_txt()='popraw')


\szb_poz_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.30]
:: OPIS: Tworzy pozycje budżetu na podstawie struktury organizacyjnej.
::   WE: _a [_SZB_OKR] - wskazanie budżetu
::   WY: 1 - funkcja zadziałała poprawnie
::       0 - wystąpił błąd
::  OLD: \plan_bud_tree/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
UD_SKL.prefix();
SZB_POZ.cntx_psh();
SZB_POZ.index('UNIQUE');
SZB_POZ.prefix(_a);
{? SZB_POZ.size()=0
|| SZB_POZ.cntx_pop();
   return(0)
?};
_tab:=tab_tmp(1,'REF','INTEGER','Reference');
_loop:=SZB_POZ.first();
{!
|? _tab.REF:=#SZB_POZ.ref();
   _tab.add(1);
   SZB_POZ.next()
!};
{? _tab.first()
|| {!
   |? {? SZB_POZ.seek(_tab.REF,)
      || exec('szb_poz_dod','psz')
      ?};
      _tab.next()
   !}
?};
SZB_POZ.cntx_pop();
_wyn


\szb_poz_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.30]
:: OPIS: Uzupełnienie drzewa.
::   WE:
::   WY:
::  OLD: \add_bud_tree/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.cntx_psh();
UD_DEF.index('PODTEC');
UD_DEF.prefix(exec('domyslny','schemat','PODZORG'));
{? UD_DEF.find_key(SZB_POZ.UD_SKL)=0
|| UD_DEF.cntx_pop();
   return(0)
?};

SZB_POZ.cntx_psh();
SZB_POZ.index('UNIQUE');
SZB_POZ.prefix(SZB_POZ.SZB_OKR);
{!
|? UD_DEF.seek(UD_DEF.UD_DEF,)
|! _ref_p:=SZB_POZ.ref();
   _rodzaj:=SZB_POZ.RODZAJ;
   {? SZB_POZ.find_key(UD_DEF.UD_SKL,_rodzaj)
   || _ref_w:=SZB_POZ.ref();
      {? SZB_POZ.seek(_ref_p)
      || SZB_POZ.SZB_POZ:=#_ref_w;
         SZB_POZ.put(1);
         SZB_POZ.seek(_ref_w)
      ?}
   || SZB_POZ.blank();
      SZB_POZ.UD_SKL:=UD_DEF.UD_SKL;
      SZB_POZ.RODZAJ:=_rodzaj;
      SZB_POZ.WYLICZ:='T';
      SZB_POZ.KW_POZ:=0;
      SZB_POZ.SZB_POZ:=0;
      {? SZB_POZ.add(1)
      || _ref_w:=SZB_POZ.ref();
         {? SZB_POZ.seek(_ref_p)
         || SZB_POZ.SZB_POZ:=#_ref_w;
            SZB_POZ.put(1);
            SZB_POZ.seek(_ref_w)
         ?}
      ?}
   ?}
!};
SZB_POZ.cntx_pop();
UD_DEF.cntx_pop();
1


\szb_poz_ust
::----------------------------------------------------------------------------------------------------------------------
::  UTW: pkoso [12.30]
:: OPIS: Zapis danych do pozycji budżetu.
::   WE: _a - Jednostka organizacyjna
::       _b - Kwota
::   WY:
::  OLD: \plan_budzet_ust/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
_kod:=exec('kod_ref','ext_slo','SZB_PROD','PLAN','Plan szkoleń');
{? SZB_POZ.find_key(_a,_kod)
|| SZB_POZ.KW_POZ+=_b;
   SZB_POZ.put(1)
|| SZB_POZ.blank();
   SZB_POZ.KW_POZ:=_b;
   SZB_POZ.WYLICZ:='N';
   SZB_POZ.UD_SKL:=_a;
   SZB_POZ.RODZAJ:=_kod;
   SZB_POZ.add(1)
?}


\szb_poz_plan_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed akcją "Z planu szkoleń".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? SZB_OKR.SZK_PLAN=null
|| FUN.emsg('Budżet nie został powiązany z planem szkoleń.'@);
   return(0)
?};
{? SZB_OKR.KW_BLOK<>0
|| FUN.emsg('Dokonano rezerwacji zasobów.\nAkcja została anulowana.'@);
   return(0)
?};
{? SZB_POZ.size()
|| FUN.ask(
      'Funkcja spowoduje usunięcie i ponowne utworzenie pozycji\n'
      'na podstawie przypisanego do budżetu planu szkoleń.\n'
      'Czy kontynuować?'@
   )
|| FUN.ask(
      'Funkcja spowoduje utworzenie pozycji na podstawie przypisanego do budżetu planu szkoleń.\n'
      'Czy kontynuować?'@
   )
?}


\szb_poz_plan_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po akcji "Z planu szkoleń".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SZB_POZ.cntx_psh();
SZB_POZ.index('UNIQUE');
SZB_POZ.prefix(SZB_OKR.ref());
{? SZB_POZ.first()
|| {!
   |? SZB_POZ.del()
   !}
?};

SZK_PSZK.cntx_psh();
SZK_ZAP.cntx_psh();
SZK_ZAP.prefix();

SZK_PSZK.prefix(SZB_OKR.SZK_PLAN);
_loop:=SZK_PSZK.first();
{!
|? _kod:=SZK_PSZK.SZK_ZAP().WER_WYN().KOD;
   {? (_kod='Z' | _kod='X') & SZK_PSZK.SZK_ZAP().UD_SKL
   || exec('szb_poz_ust','psz',SZK_ZAP.UD_SKL,SZK_ZAP.KOSZT)
   ?};
   _loop:=SZK_PSZK.next()
!};
exec('szb_poz_dod','psz',SZB_OKR.ref());

SZK_ZAP.cntx_pop();
SZK_PSZK.cntx_pop();
SZB_POZ.cntx_pop();
0


\szk_tem_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko przed okienek tabeli SZK_TEM.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
SZK_TEM.win_edit('RED');
1


\szk_tem_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po redakcji wiersza tabeli SZK_TEM.
::   WE:
::   WY: wynik testu poprawności danych
::----------------------------------------------------------------------------------------------------------------------
exec('szk_tem_chk','phr_sz_tab',-menu_txt()='popraw')


\szk_opis_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko przed okienek tabeli SZK_OPIS.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_wnd:=cur_win(1,1);

_red:='WER';
_wzo:='WER';

{? _wnd='WER'
|| _red:=_wzo:='ORG_OPIS'

|? _wnd='SLO'
|| _red:=_wzo:=''

|| _red:='ORG_RED';
   _wzo:='ORG_WZO'
?};

{? _red<>'' || SZK_OPIS.win_edit(_red) ?};
{? _wzo<>'' || SZK_OPIS.win_patt(_wzo) ?};

exec('szk_opis_com_ob','psz');

1


\szk_opis_com_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko przed okienek tabeli SZK_OPIS - część wspólna ze względu na inne miejsc edycji SZK_OPIS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_psh','phr_widok','PSZ_SDO_RSZK');

_wnd:=cur_win(1,1);
{? _wnd*'SEL' || ZZ_POM.KREATORY:='#PSZ_SDO#SZK_OPIS#SEL#'
|? _wnd*'ORG' || ZZ_POM.KREATORY:='#PSZ_SDO#SZK_OPIS#ORG#'
?};

SZK_ORG.win_dict('SLO');
SZK_WZO.win_dict('SLO');
SZK_TREN.win_dict('SLO');

ZA_ZEST.win_sel('WYB');
ZA_ZEST.hdr_sel('Szablony ankiet'@);

SZB_OKR.win_dict('SLO');

1


\szk_opis_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko po okienek tabeli SZK_OPIS.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_pop','phr_widok');
ZZ_POM.KREATORY:='';
ZA_ZEST.hdr_sel();
1


\szk_opis_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po redakcji wiersza tabeli SZK_OPIS.
::   WE:
::   WY: wynik testu poprawności danych
::----------------------------------------------------------------------------------------------------------------------
_chk:=exec('szk_opis_chk','phr_sz_tab',-menu_txt()='popraw');
{? type_of(_chk)<>type_of(0) | ~_chk
|| return(_chk)
?};

{? SZK_OPIS.ILE*8<SZK_OPIS.GODZ & FUN.ask(
      'Liczba godzin jest większa niż wynikałoby to z liczby dni szkolenia.\n'
      'Czy powrócić do edycji liczby godzin szkolenia?'@
   )
|| 'GODZ'
|? SZK_OPIS.LIMIT<SZK_OPIS.LU & SZK_OPIS.LIMIT>0
|| FUN.info('Limit miejsc jest mniejszy niż aktualna liczba uczestników szkolenia.'@);
   return('LIMIT')
|? SZK_OPIS.LIMIT<SZK_PUCZ.NUMER & SZK_OPIS.LIMIT>0
|| FUN.info('Limit miejsc jest mniejszy niż aktualna liczba uczestników programu.'@);
   return('LIMIT')
?};

{? -menu_txt()='popraw' & cur_win(1,1)='ORG_RED'
|| _test:=sql('
      select
         SLO_KOD.KOD
      from
         ZA_ZEST join SLO_KOD using(ZA_ZEST.TYP,SLO_KOD.REFERENCE)
      where
         ZA_ZEST.ZZ_LINK=\':_a\' and SLO_KOD.KOD=\'T\'',
      $SZK_OPIS.ZZ_DOK
   );
   {? SZK_OPIS.EGZAMIN='T'
   || {? SZK_OPIS.TRYB='T'
      || {? SZK_OPIS.PROMOCJA<=0 | SZK_OPIS.PROMOCJA>100
         ||  FUN.info('Wprowadzono błędną wartość progu zdawalności. Dopuszczalna wartość mieści się w granicy 1-100.'@);
             'PROMOCJA'
         || 1
         ?}
      || {? SZK_OPIS.PROMOCJA<=0
         || FUN.info('Wprowadzono błędną wartość progu zdawalności. Dopuszczalna wartość powinna być większa niż zero.'@);
            'PROMOCJA'
         || 1
         ?}
      ?}
   |? SZK_OPIS.EGZAMIN='N'
   || {? _test.size()
      || FUN.info('Dla szkolenia został już zdefiniowany test. Zmiana wartości niemożliwa.'@);
         return('EGZAMIN')
      || SZK_OPIS.PROMOCJA:=0; 1
      ?}
   || 1
   ?}
|| 1
?}


\szk_opis_status_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po akcji "Zmień status".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SZK_OPIS.cntx_psh();
SZK_OPIS.win_edit('STATUS');
{? SZK_OPIS.edit("__CHK.record(SZK_OPIS,,'STATUS')")
|| SZK_OPIS.put()
?};
SZK_OPIS.cntx_pop();
SZK_OPIS.get()


\szk_opis_budzet_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po akcji "Budżet".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SZB_WYK.cntx_psh();
SZB_WYK.index('POZYCJA');
SZB_WYK.prefix(SZK_OPIS.ref());
SZB_WYK.win_sel('WER');
SZB_WYK.select();
SZB_WYK.cntx_pop();
~~


\szk_opis_ankiety_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po akcji "Ankiety".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set('wybor',_a);

exec('np_run','#b__box','PSZ_SDO_PWYN')


\szk_prac_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko przed okienek tabeli SZK_PRAC.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_psh','phr_widok','PSZ_SDO_RSZK');

_ws:=cur_win(1,1);
_we:=
   {? _ws='OPIS'
   || 'PSZ_OPIS'
   |? _ws='P'
   || 'PSZ_RED'
   || 'RED'
   ?};

SZK_PRAC.win_edit(_we);
SZK_ORG.win_dict('SLO');

1


\szk_prac_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko po okienek tabeli SZK_PRAC.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_pop','phr_widok');
1


\szk_prac_xxx_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Rekord przed okienek tabeli SZK_PRAC.
::   WE: _a - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
SZK_OPIS.cntx_psh();
SZK_PRAC.SZKOL();
exec('szk_opis_bd','psz');
SZK_OPIS.cntx_pop();
~~


\szk_prac_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po redakcji wiersza tabeli SZK_PRAC.
::   WE:
::   WY: wynik testu poprawności danych
::----------------------------------------------------------------------------------------------------------------------
{? SZK_OPIS.LIMIT=SZK_OPIS.LU & -menu_txt()='dołącz'
|| FUN.info('Nie można zapisać uczestnika. Brak wolnych miejsc dla wybranego szkolenia.'@);
   return(0)
?};
_chk:=exec('szk_prac_chk','phr_sz_tab',-menu_txt()='popraw');
{? type_of(_chk)=type_of('') & _chk='P'
|| return(0)
|? (type_of(_chk)=type_of('') & _chk<>'') | (type_of(_chk)=type_of(0) & ~_chk)
||  return(_chk)
|? ~exec('szk_prac_umlojn_chk','szkolenia')
|| return('KOSZT')
?};
{? -menu_txt()='dołącz' & ~exec('szk_prac_szb_chk','szkolenia',SZK_PRAC.P)
|| FUN.info('Nie można zapisać uczestnika. Dział wskazanego pracownika nie został uwzględniony w budżecie szkolenia.'@);
   return(0)
?};
''


\szk_prac_wd_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Wartość początkowa pola WD wiersza tabeli SZK_PRAC.
::   WE:
::   WY: data ważności szkolenia
::----------------------------------------------------------------------------------------------------------------------
SZK_OPIS.WD


\szk_prac_wd_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed edycją pola WD wiersza tabeli SZK_PRAC.
::   WE:
::   WY: 0 - pole zablokowane, 1 - pole dostępne
::----------------------------------------------------------------------------------------------------------------------
SZK_PRAC.AUTO_WD<>'T'


\szk_prac_auto_wd_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po edycji pola AUTO_WD wiersza tabeli SZK_PRAC.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
SZK_PRAC.WD:={? SZK_PRAC.AUTO_WD='T' || SZK_OPIS.WD || date(0,0,0) ?};
1


\psz_prs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Główna formuła obszaru PSZ_PRS - Programy i plany szkoleń.
::       Konfiguracja okna i sposobu działania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('init','psz');

_wnd:=exec('psz_prs_config','psz');

SZK_ZAP.cntx_psh();
SZK_ZAP.win_sel(_wnd);
AreaTitle.setTabWin(SZK_ZAP,_wnd);
AreaTitle.setTitle();
SZK_ZAP.select();
SZK_ZAP.cntx_pop();

SZK_ZAP.win_del(_wnd);
~~


\psz_prs_config
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Formuła konfigurująca interfejs obszaru PSZ_TBS.
::   WE:
::   WY: akronim okna obszaru
::----------------------------------------------------------------------------------------------------------------------
_mode:='maximized_with_title';

_wnd:=SZK_ZAP.grp_make(,
:  przed wypełnieniem
   "params_exec('psz_prs_bf','psz')",
:  identyfikator
   'psz_prs',
:  położenie
   ,,
:  przy zamknięciu
   "_val:=exec('exit','zws'); {? _val || params_exec('psz_prs_oc','psz')?}",,
:  tryb wyświetlania
   'maximized'
);

: lista zapotrzebowań
SZK_ZAP.grp_sel(_wnd,SZK_ZAP,'WER','Zapotrzebowania'@,
:  po odświeżeniu
   "params_exec('psz_prs_zap_ar','psz')",
:  położenie i wysokość
   ,,10,
:  przed obsługą
   "params_exec('psz_prs_zap_bs','psz')",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);

: lista programów szkoleń
SZK_ZAP.grp_sel(_wnd,SZK_PROG,'WER','Programy szkoleń'@,
:  po odświeżeniu
   "params_exec('psz_prs_prog_ar','psz')",
:  położenie i wysokość
   ,,10,
:  przed obsługą
   "params_exec('psz_prs_prog_bs','psz')",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);

: lista planów szkoleń
SZK_ZAP.grp_sel(_wnd,SZK_PLAN,'WER','Plany szkoleń'@,
:  po odświeżeniu
   "params_exec('psz_prs_plan_ar','psz')",
:  położenie i wysokość
   ,,10,
:  przed obsługą
   "params_exec('psz_prs_plan_bs','psz')",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);

: podział udający efekt zakładek w zakładkach
SZK_ZAP.grp_splt(_wnd,'panel0','horizontal','bottom');

: wzorce programu szkoleń
SZK_ZAP.grp_sel(_wnd,SZK_KOMP,'WER','Kompetencje'@,
:  po odświeżeniu
   "",
:  położenie i wysokość
   ,,10,
:  przed obsługą
   "params_exec('psz_prs_komp_bs','psz',_a)",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);

: wzorce programu szkoleń
SZK_ZAP.grp_sel(_wnd,SZK_PWZO,'WER','Zakres'@,
:  po odświeżeniu
   "",
:  położenie i wysokość
   ,,10,
:  przed obsługą
   "params_exec('psz_prs_pwzo_bs','psz',_a)",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);

: uczestnicy programu szkoleń
SZK_ZAP.grp_sel(_wnd,SZK_PUCZ,'WER','Uczestnicy'@,
:  po odświeżeniu
   "",
:  położenie i wysokość
   ,,,
:  przed obsługą
   "params_exec('psz_prs_pucz_bs','psz',_a)",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);

: szkolenia zorganizowane w ramach programu
SZK_ZAP.grp_sel(_wnd,SZK_OPIS,'PROG','Szkolenia'@,
:  po odświeżeniu
   "params_exec('psz_prs_opis_ar','psz')",
:  położenie i wysokość
   ,,5,
:  przed obsługą
   "params_exec('psz_prs_opis_bs','psz',_a)",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);

: uczestnicy szkolenia
SZK_ZAP.tab_splt(_wnd,,'horizontal','bottom');
SZK_ZAP.grp_sel(_wnd,SZK_PRAC,'PSZ_UCZ',,
:  po odświeżeniu
   "",
:  położenie i wysokość
   ,,,
:  przed obsługą
   "params_exec('psz_prs_prac_bs','psz',_a)",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);

: szczegóły planu szkolenia
SZK_ZAP.grp_sel(_wnd,SZK_PSZK,'WER','Pozycje'@,
:  po odświeżeniu
   "",
:  położenie i wysokość
   ,,,
:  przed obsługą
   "params_exec('psz_prs_pszk_bs','psz',_a)",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);

_wnd


\psz_prs_bf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed wypełnieniem okienka.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_ref:=exec('ref_firma','ustawienia');

SZK_ZAP.cntx_psh();
SZK_ZAP.use('szk_zap');
SZK_ZAP.index('STATUS');
SZK_ZAP.prefix(_ref);
SZK_ZAP.index('OD');
SZK_ZAP.prefix(_ref);

SZK_KOMP.cntx_psh();
SZK_KOMP.use('szk_komp');
SZK_KOMP.index('ZZ_KOMP');

SZK_PROG.cntx_psh();
SZK_PROG.index('NAZWA');
SZK_PROG.prefix(_ref);
SZK_PROG.index('OD');
SZK_PROG.prefix(_ref);

SZK_PWZO.cntx_psh();
SZK_PWZO.index('SZK_WZO');

SZK_PUCZ.cntx_psh();
SZK_PUCZ.index('SZK_PUCZ');

SZK_OPIS.cntx_psh();
SZK_OPIS.index('SZK_PROG');

SZK_PRAC.cntx_psh();
SZK_PRAC.index('SZK_PRAC');
SZK_PRAC.win_edit('OPIS');

SZK_PLAN.cntx_psh();
SZK_PLAN.index('OD');
SZK_PLAN.prefix(_ref,'N');

SZK_PSZK.cntx_psh();
SZK_PSZK.use('szk_pszk');
SZK_PSZK.index('PLAN');


SZK_WZO.cntx_psh();
SZK_WZO.f_clear();

tab_hide(1,,'bottom');
tab_hide(2,,'bottom');
tab_hide(3,,'bottom');

{? ~exec('chk_role','#b__box',OPERATOR.USER,'PSZ_SDO_PPSZ') &
   ~exec('chk_role','#b__box',OPERATOR.USER,'PSZ_SDO_RPSZ') &
   ~exec('chk_role','#b__box',OPERATOR.USER,'PSZ_SDO_GPSZ') &
   ~exec('chk_role','#b__box',OPERATOR.USER,'PSZ_SDO_WPSZ')
|| tab_hide(1,,'panel0')
?};

{? ~exec('chk_role','#b__box',OPERATOR.USER,'PSZ_PRS_PPGS') &
   ~exec('chk_role','#b__box',OPERATOR.USER,'PSZ_PRS_RPGS')
|| tab_hide(2,,'panel0')
?};

{? ~exec('chk_role','#b__box',OPERATOR.USER,'PSZ_PRS_PPSZ') &
   ~exec('chk_role','#b__box',OPERATOR.USER,'PSZ_PRS_RPSZ') &
   ~exec('chk_role','#b__box',OPERATOR.USER,'PSZ_PRS_WPSZ')
|| tab_hide(3,,'panel0')
?};

1


\psz_prs_oc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przy zamykaniu okienka.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
SZK_PROG.cntx_pop();
SZK_PWZO.cntx_pop();
SZK_PUCZ.cntx_pop();
SZK_OPIS.cntx_pop();
SZK_PRAC.cntx_pop();

SZK_ZAP.cntx_pop();
SZK_KOMP.cntx_pop();

SZK_PLAN.cntx_pop();
SZK_PSZK.cntx_pop();

SZK_WZO.cntx_pop();

1


\psz_prs_zap_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po odświeżeniu okienka WER tabeli SZK_ZAP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
grp_disp(SZK_KOMP,'WER');
~~


\psz_prs_zap_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka WER tabeli SZK_ZAP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
tab_show(1,'bottom');
tab_hide(2,,'bottom');
tab_hide(3,,'bottom');
tab_hide(4,,'bottom');
tab_hide(5,,'bottom');
~~


\psz_prs_prog_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po odświeżeniu okienka WER tabeli SZK_PROG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
grp_disp(SZK_PWZO,'WER');
grp_disp(SZK_PUCZ,'WER');
grp_disp(SZK_OPIS,'PROG',1);
~~


\psz_prs_prog_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka WER tabeli SZK_PROG.
::   WE: _a [INTEGER] - tryb odrysowania okienka
::   WY:
::----------------------------------------------------------------------------------------------------------------------
tab_hide(1,,'bottom');
tab_show(2,'bottom');
tab_show(3,'bottom');
tab_show(4,'bottom');
tab_hide(5,,'bottom');
~~


\psz_prs_plan_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po odświeżeniu okienka WER tabeli SZK_PLAN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
grp_disp(SZK_PSZK,'WER');
~~


\psz_prs_plan_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka WER tabeli SZK_PLAN.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
tab_hide(1,,'bottom');
tab_hide(2,,'bottom');
tab_hide(3,,'bottom');
tab_hide(4,,'bottom');
tab_show(5,'bottom');
~~


\psz_prs_komp_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka WER tabeli SZK_KOMP.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? grp_empty(SZK_ZAP,'WER')=1
|| return('#disable')
?};

SZK_KOMP.prefix(SZK_ZAP.ref());
~~


\psz_prs_pwzo_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka WER tabeli SZK_PWZO.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? grp_empty(SZK_PROG,'WER')=1
|| return('#disable')
?};

SZK_PWZO.prefix(SZK_PROG.ref());
~~


\psz_prs_pucz_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka WER tabeli SZK_PUCZ.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? grp_empty(SZK_PROG,'WER')=1
|| return('#disable')
?};

SZK_PUCZ.prefix(SZK_PROG.ref());
~~


\psz_prs_opis_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po odświeżeniu okienka PROG tabeli SZK_OPIS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
grp_disp(SZK_PRAC,'PSZ_UCZ',1,1)


\psz_prs_opis_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka PROG tabeli SZK_OPIS.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? grp_empty(SZK_PROG,'WER')=1
|| return('#disable')
?};

SZK_OPIS.prefix(SZK_PROG.ref());
~~


\psz_prs_prac_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka PSZ_UCZ tabeli SZK_PRAC.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? grp_empty(SZK_OPIS,'PROG')=1
|| return('#disable')
?};

SZK_PRAC.prefix(SZK_OPIS.ref());
~~


\psz_prs_pszk_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed obsługą okienka WER tabeli SZK_PSZK.
::   WE: _a [INTEGER] - tryb odświeżania okienka: 0 - grp_disp, 1 - akcja użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? grp_empty(SZK_PLAN,'WER')=1
|| return('#disable')
?};

SZK_PSZK.prefix(SZK_PLAN.ref());
~~


\szk_prog_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko przed okienek tabeli SZK_PROG.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_psh','phr_widok','PSZ_PRS_RPGS');
exec('setup_icon','phr_widok','NAZWA');

SZK_PROG.win_edit('RED');

1


\szk_prog_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko po okienek tabeli SZK_PROG.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_pop','phr_widok');

1


\szk_prog_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po redakcji wiersza tabeli SZK_PROG.
::   WE:
::   WY: wynik testu poprawności danych
::----------------------------------------------------------------------------------------------------------------------
exec('szk_prog_chk','phr_sz_tab',-menu_txt()='popraw')


\szk_pwzo_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko przed okienek tabeli SZK_PWZO.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_psh','phr_widok','PSZ_PRS_RPGS');
exec('setup_icon','phr_widok','SZK_WZO','OPIS');

SZK_PWZO.win_edit('RED');
SZK_WZO.win_dict('WER');

exec('szk_opis_com_ob','psz');

1


\szk_pwzo_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko po okienek tabeli SZK_PWZO.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_pop','phr_widok');

1


\szk_pwzo_zorganizuj_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po akcji "Zorganizuj".
::   WE:
::   WY:
::  OLD: \szk_pwzo_action/zz_view.fml
::----------------------------------------------------------------------------------------------------------------------
SZK_OFE.cntx_psh();
SZK_OFE.index('SZK_ORG');
SZK_OFE.prefix(SZK_PWZO.SZK_WZO);

_szk_org:=null;
{? SZK_OFE.size=1
:  tylko jedna oferta
|| SZK_OFE.first();
   _szk_org:=SZK_OFE.SZK_ORG

|? SZK_OFE.size()>1
:  więcej niż jedna oferta
|| SZK_OFE.win_sel('WYB_ORG');
   {? SZK_OFE.select()
   || _szk_org:=SZK_OFE.SZK_ORG
   ?}
?};

SZK_OPIS.cntx_psh();
SZK_OPIS.clear();

SZK_OPIS.blank();
SZK_OPIS.ORG:=_szk_org;
SZK_OPIS.SZK_PROG:=SZK_PROG.ref();
SZK_OPIS.SZK_WZO:=SZK_WZO.ref();
SZK_OPIS.TEMAT:=SZK_WZO.TEMAT;
SZK_OPIS.RODZAJ:=SZK_WZO.RODZAJ;
SZK_OPIS.EGZAMIN:=SZK_WZO.EGZAMIN;
SZK_OPIS.PROMOCJA:=SZK_WZO.PROMOCJA;

: zachowaj wszystkie formuły tabeli SZK_OPIS
_org:=exec('save_fml_all','#field',SZK_OPIS);

: przygotowanie okienka
{? SZK_OPIS.ORG=null
|| SZK_OPIS.efld_opt('ORG_RED','mark=1',,'ORG')
|| SZK_OPIS.fld_fml('ORG','BEFORE_EDIT',"0")
?};
SZK_OPIS.fld_fml('SZK_WZO','BEFORE_EDIT',"0");

SZK_OPIS.memo_set('','OPIS');
{? SZK_OPIS.edit("exec('szk_opis_reka','szkolenia')")
|| do();
   {? SZK_OPIS.add(1)
   || SZK_OPIS.memo_put(,'OPIS');
      SZK_PRAC.clear();
      SZK_PUCZ.cntx_psh();
      SZK_PUCZ.index('SZK_PUCZ');
      SZK_PUCZ.prefix(SZK_PROG.ref());
      _loop:=SZK_PUCZ.first();
      {!
      |? _loop
      |! {? P.DZA<=SZK_OPIS.OD & (P.DZ=date(0,0,0) | SZK_OPIS.DO<=P.DZ)
         || SZK_PRAC.blank();
            SZK_PRAC.SZKOL:=SZK_OPIS.ref();
            SZK_PRAC.P:=SZK_PUCZ.P;
            SZK_PRAC.add(1)
         ?};
         _loop:=SZK_PUCZ.next()
      !};
      SZK_PUCZ.cntx_pop()
   || undo()
   ?};
   end()
?};

SZK_OPIS.efld_opt('ORG_RED','mark=0',,'ORG');
exec('restore_fml_all','#field',SZK_OPIS,_org);
SZK_OPIS.cntx_pop();
SZK_OFE.cntx_pop();
~~


\szk_pwzo_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po redakcji wiersza tabeli SZK_PWZO.
::   WE:
::   WY: wynik testu poprawności danych
::----------------------------------------------------------------------------------------------------------------------
exec('szk_pwzo_chk','phr_sz_tab',-menu_txt()='popraw')


\szk_pucz_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko przed okienek tabeli SZK_PUCZ.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_psh','phr_widok','PSZ_PRS_RPGS');

1


\szk_pucz_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko po okienek tabeli SZK_PUCZ.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_pop','phr_widok');

1


\szk_pucz_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Dołączenie współpracowników do programu szkoleń.
::   WE:
::   WY: 0
::----------------------------------------------------------------------------------------------------------------------
_arg:=exec('wybierz_args','pracownik');
_arg.DOMAIN:='PSZ';
_arg.F_ZATR:='P,Z,K';
_arg.WIELU:=1;
_arg.SQL_WHERE:=
   'P.REFERENCE not in ('
   '  select SZK_PUCZ.P '
   '  from SZK_PUCZ '
   '  where SZK_PUCZ.SZK_PROG=\'%1\''
   ')'[$SZK_PROG.ref()];

exec('loop','#table',exec('wybierz','pracownik',_arg).P,'SQL',"
   SZK_PUCZ.blank();
   SZK_PUCZ.P:=P.ref();
   SZK_PUCZ.add(1)
");

0


\szk_plan_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko przed okienek tabeli SZK_PLAN.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_psh','phr_widok','PSZ_PRS_RPSZ');

SZK_PLAN.win_edit('RED');

1


\szk_plan_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko po okienek tabeli SZK_PLAN.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_pop','phr_widok');

1


\szk_plan_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po edycji wiersza tabeli SZK_PLAN.
::   WE:
::   WY: wynik testu poprawności
::----------------------------------------------------------------------------------------------------------------------
exec('szk_plan_chk','phr_sz_tab',-menu_txt()='popraw')


\szk_plan_weryfikuj_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Obsługa akcji "Weryfikuj", formuła po akcji.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_in:=obj_new('SZK_PLAN');
params_set('in',_in);

_in.SZK_PLAN:=SZK_PLAN.ref();
exec('np_run','#b__box','PSZ_PRS_WPSZ');

~~


\szk_plan_budzet_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Obsługa akcji "Budżet", formuła po akcji.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SZB_OKR.cntx_psh();
SZB_OKR.index('PLAN');
SZB_OKR.prefix(SZK_PLAN.ref());

{? ~SZB_OKR.first()
|| _aid:='PSZ_TBS_RBUD';
   {? ~exec('chk_role','#b__box',OPERATOR.USER,_aid)
   || FUN.info(
         'Nie znaleziono budżetu dla wskazanego planu szkoleń.\n'
         'Utworzenie budżetu dla planu nie jest możliwe\n'
         '(brak uprawnień do czynności "%1").'@[_aid]
      );
      SZB_OKR.cntx_pop();
      return()
   ?};
   {? FUN.ask(
         'Nie znaleziono budżetu dla wskazanego planu szkoleń.\n'
         'Czy utworzyć budżet dla bieżącego planu szkoleń?'@
      )
   || SZB_OKR.blank(1);
      SZB_OKR.FIRMA:=exec('ref_firma','ustawienia');
      SZB_OKR.OD:=SZK_PLAN.OD;
      SZB_OKR.DO:=SZK_PLAN.DO;
      SZB_OKR.PLAN:='T';
      SZB_OKR.SZK_PLAN:=SZK_PLAN.ref();
      SZB_OKR.RODZAJ:=exec('kod_ref','ext_slo','SZB_OROD','PLAN','Plan szkoleń');
      {? ~SZB_OKR.add(1)
      || FUN.emsg('Utworzenie budżetu nie powiodło się.'@);
         SZB_OKR.cntx_pop();
         return()
      ?}
   || SZB_OKR.cntx_pop();
      return()
   ?}
?};

_mode:='maximized_with_title';

_wnd:=SZB_OKR.grp_make('Budżet dla planu szkoleń od %1 do %2'@[$SZK_PLAN.OD,$SZK_PLAN.DO],
:  przed wypełnieniem
   "  SZB_OKR.cntx_psh();
      SZB_OKR.index('PLAN');
      SZB_OKR.prefix(SZK_PLAN.ref());
      SZB_OKR.actions_grayed('WER','DPU:D');

      SZB_POZ.cntx_psh();
      SZB_POZ.index('SZB_POZ');
      SZB_POZ.actions_grayed('WER','DPUZY:DZ');

      1
   ",
:  identyfikator
   'psz_bplan',
:  położenie
   ,,
:  przy zamknięciu
   "  SZB_OKR.cntx_pop();
      SZB_OKR.actions_grayed('WER');
      SZB_POZ.cntx_pop();
      SZB_POZ.actions_grayed('WER');
      1
   ",,
:  tryb wyświetlania
   'html_maximized'
);

SZB_OKR.grp_sel(_wnd,,'WER',,
:  po odświeżeniu
   "grp_disp(SZB_POZ,'WER',1)",
:  położenie i wysokość
   ,,5,
:  przed obsługą
   "",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode,,1
);

SZB_OKR.grp_splt(_wnd,,'horizontal','bottom');

SZB_OKR.grp_sel(_wnd,SZB_POZ,'WER',,
:  po odświeżeniu
   "",
:  położenie i wysokość
   ,,10,
:  przed obsługą
   "  {? grp_empty(SZB_OKR,'WER')=1
      || return('#disable')
      ?};
      SZB_POZ.prefix(SZB_OKR.ref())
   ",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);

SZB_OKR.win_sel(_wnd);
SZB_OKR.select();

SZB_OKR.cntx_pop();
SZB_OKR.win_del(_wnd);
~~


\szk_plan_arkusz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Obsługa akcji "Arkusz", formuła po akcji.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_BUF:=exec('pszk_arkusz_tabela','psz');
: pobierz szczegółowe dane pozycji
exec('pszk_arkusz_dane','psz',_BUF);
: utwórz i pokaż szczegółowy widok pozycji
_wnd:=exec('pszk_arkusz_widok','psz',_BUF);
_BUF.win_sel(_wnd);
_BUF.select()


\pszk_arkusz_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.30]
:: OPIS: Tworzy bufor tabeli pomocniczej do wyświetlenia planow szkolen.
::  OLD: \plany_szkolen/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
tab_tmp(2,
   'ROK','INTEGER','Rok'@,
   'KWARTAL','INTEGER','Kwartał'@,
   'TERMIN','INTEGER','Termin'@,
   'REF','INTEGER','Referencja'@,
   'Z_GODZ','REAL','Godziny'@,
   'KOSZT','REAL','Koszt'@,
   'GODZ','REAL','Liczba godzin'@,
   'ILE','REAL','Liczba dni'@,
   'OCENA','REAL','Ocena pracownika'@,
   'ORG_OCEM','REAL','Ocena merytoryki'@,
   'ORG_OCET','REAL','Ocena terminowości'@,
   'ORG_OCEK','REAL','Ocena kosztów'@,
   'SK_OCENA','REAL','Ocena skuteczności'@,
   'KOSZT_T','REAL','Dydaktyka'@,
   'KOSZT_Z','REAL','Zakwaterowanie'@,
   'KOSZT_W','REAL','Wyżywienia'@,
   'KOSZT_D','REAL','Delegacja'@,
   'KOSZT_C','REAL','Koszt całkowity'@,
   'WYNAGR','REAL','Koszt wynagrodzenia'@,
   'ORG_OCEN','REAL','Ocena dostawcy'@,
   'BADANIE','DATE','Termin badania skuteczności'@,
   'OD','DATE','Data rozpoczęcia'@,
   'DO','DATE','Data zakończenia'@,
   'DWP','DATE','Data wprowadzenia do planu'@,
   'RODZAJ','STRING[150]','Rodzaj'@,
   'WE_WY','STRING[150]','Wew/zewn'@,
   'TEMAT','STRING[60]','Temat'@,
   'LOKAL','STRING[150]','Lokalizacja'@,
   'WYDZIAL','STRING[16]','Wydział'@,
   'MPK','STRING[35]','MPK'@,
   'STN','STRING[80]','Stanowisko'@,
   'IMIE','STRING[20]','Imię'@,
   'NAZWISKO','STRING[30]','Nazwisko'@,
   'PLEC','STRING[1]','Płeć'@,
   'KADRA','STRING[1]','Kadra'@,
   'UWAGI','STRING[150]','Uwagi'@,
   'WIEDZA','STRING[1]','Przekazanie wiedzy'@,
   'TR_KOD','STRING[150]','Trener wew/zew'@,
   'WER_WYN','STRING[150]','Status'@,
   'TYP','STRING[150]','Typ'@,
   'ZMIANA','STRING[30]','Zmiana terminu'@,
   'ORG','STRING[60]','Organizator'@,
   'OCENIL','STRING[1]','Ocenił?'@,
   'SKUTEK','STRING[150]','Sposób weryfikowania skuteczności szkolenia'@,
   'CZY_SKUT','STRING[1]','Czy dostarczono ocenę skuteczności szkolenia?'@,
   'SK_OCNIS','STRING[100]','Niska skuteczność wyjaśnienie'@,
   'CERT','STRING[1]','Certyfikat'@,
   'WAKAT','STRING[1]','Wakat'@,
   'OBECNY','STRING[1]','Obecny'@,
   'PRZEN','STRING[1]','Termin przeniesiony'@,
   'STATUS','STRING[150]','Status szkolenia'@,
   'POD_REAL','STRING[150]','Realizacja na podstawie'@,
   'WYD_OPIS','STRING[60]','Opis jednostki organizacyjnej'@,
   'DOSTEP','STRING[1]','Dostępny'@
)


\pszk_arkusz_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.30]
:: OPIS: Wypełnia tabelę zawierającą rozszerzone informacje o planie, zapotrzebowaniach i szkoleniach.
::   WE: _a [TABLE] - alias bufora danych
::       _b [INTEGER] (opcjonalnie) - rok szkolenia
::       _c [INTEGER] (opcjonalnie) - kwartał szkolenia
::       _d [TAB] (opcjonalnie) - tabela z pracownikami dla których ma być tworzona plachta
::  OLD: \plachta/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
_BUF:=_a;
_rok:={? var_pres('_b')<>type_of(0) || 0 || _b ?};
_kwa:={? var_pres('_c')<>type_of(0) || 0 || _c ?};
_REF:={? var_pres('_d')<>type_of(SYSLOG) || ~~ || _d ?};

SZK_PSZK.index('PLAN');
SZK_PSZK.prefix(SZK_PLAN.ref());
{? SZK_PSZK.first()
|| _BUF.erase();
   {!
   |? _dodaj:=0;
      {? _rok<>0
      || {? _kwa<>0
         || {? (_rok=SZK_PSZK.SZK_ZAP().ROK) & (_kwa=SZK_PSZK.SZK_ZAP().KWARTAL)
            || _dodaj:=1
            ?}
         || {? _rok=SZK_PSZK.SZK_ZAP().ROK
            || _dodaj:=1
            ?}
         ?}
      || _dodaj:=1
      ?};
      _sql:='select * from :_a where :_a.P_SQL=\':_b\'';
      {? type_of(_REF)=type_of(SYSLOG)
      || {? sql(_sql,_REF,$SZK_PSZK.SZK_ZAP().P).first()
         || _dodaj:=1
         || _dodaj:=0
         ?}
      ?};
      {? _dodaj
      || exec('pszk_arkusz_wiersz','psz',_BUF,1)
      ?};
      SZK_PSZK.next()
   !}
?}


\pszk_arkusz_wiersz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.30]
:: OPIS: Wypełnia wiersz arkusza danych.
::   WE: _a [TABLE] - alias bufora danych
::       _b - tryb modyfikacji danych:
::          0 lub brak - poprawianie
::          nie zero - dodawanie
::  OLD: \wyp_plachta/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
_BUF:=_a;
_mod:=(var_pres('_b')=type_of(0) & _b<>0);

{? _mod
|| _BUF.blank()
?};

_BUF.DWP:=SZK_PSZK.DWP;
_BUF.ROK:=SZK_PSZK.SZK_ZAP().ROK;
_BUF.KWARTAL:=SZK_PSZK.SZK_ZAP().KWARTAL;
_BUF.REF:=#SZK_PSZK.ref();
_BUF.RODZAJ:=SZK_PSZK.SZK_ZAP().TYP().NAZWA;
_BUF.TEMAT:=
   {? SZK_PSZK.SZK_ZAP().SZK_WZO
   || SZK_PSZK.SZK_ZAP().SZK_WZO().TEMAT().TEMAT
   || SZK_PSZK.SZK_ZAP().TEMAT
   ?};
_BUF.LOKAL:=SZK_PSZK.SZK_ZAP().SZK_WZO().LOKAL().NAZWA;
_BUF.WYDZIAL:=SZK_PSZK.SZK_ZAP().UD_SKL().SYMBOL;
_BUF.WYD_OPIS:=SZK_PSZK.SZK_ZAP().UD_SKL().OPIS;
_BUF.MPK:=SZK_PSZK.SZK_ZAP().KK().SYM;
_BUF.STN:=SZK_PSZK.SZK_ZAP().STN().ST;
_BUF.IMIE:=SZK_PSZK.SZK_ZAP().P().OSOBA().PIERWSZE;
_BUF.NAZWISKO:=SZK_PSZK.SZK_ZAP().P().OSOBA().NAZWISKO;
_BUF.PLEC:=SZK_PSZK.SZK_ZAP().P().OSOBA().PLEC;
_BUF.KADRA:=SZK_PSZK.SZK_ZAP().KADRA;
_BUF.TYP:=SZK_PSZK.SZK_ZAP().ZGL_TYP().NAZWA;
_BUF.TERMIN:=SZK_PSZK.SZK_ZAP().MC;
_BUF.Z_GODZ:=SZK_PSZK.SZK_ZAP().SZK_WZO().GODZ;
{? SZK_PSZK.SZK_ZAP().KOSZT=0 & SZK_PSZK.SZK_ZAP().SZK_WZO
|| SZK_ZAP.put()
?};
_BUF.KOSZT:=SZK_PSZK.SZK_ZAP().KOSZT;
_BUF.WIEDZA:=SZK_PSZK.SZK_ZAP().SZK_PRAC().WIEDZA;
_BUF.TR_KOD:=SZK_PSZK.SZK_ZAP().SZK_WZO().TR_KOD().NAZWA;
_BUF.WER_WYN:={? SZK_PSZK.PRZEN='T' || 'Przesunięto termin' || SZK_PSZK.SZK_ZAP().WER_WYN().NAZWA ?};
_BUF.WE_WY:=SZK_PSZK.SZK_ZAP().SZK_WZO().RODZAJ().NAZWA;
_BUF.WAKAT:=SZK_PSZK.SZK_ZAP().WAKAT;
_BUF.POD_REAL:={? SZK_PSZK.PRZEN<>'T' || SZK_PSZK.SZK_ZAP().POD_REAL().NAZWA || 'Przesunięto termin' ?};
: czy termin został przeniesiony
_BUF.PRZEN:=SZK_PSZK.PRZEN;
:: dane ze szkolenia
{? SZK_PSZK.PRZEN<>'T'
|| _BUF.OBECNY:={? SZK_PSZK.SZK_ZAP().SZK_PRAC || SZK_PSZK.SZK_ZAP().SZK_PRAC().OBECNY || 'N' ?};
   _BUF.OD:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SZKOL().OD;
   _BUF.DO:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SZKOL().DO;
   _BUF.GODZ:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SZKOL().GODZ;
   _BUF.ILE:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SZKOL().ILE;
   _BUF.ZMIANA:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SZKOL().TERMIN;
   _BUF.ORG:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SZKOL().ORG().NAZWA;
   _BUF.OCENIL:=SZK_PSZK.SZK_ZAP().SZK_PRAC().OCENIL;
   _BUF.OCENA:=SZK_PSZK.SZK_ZAP().SZK_PRAC().OCENA;
   {? SZK_PSZK.SZK_ZAP().SZK_PRAC
   || _BUF.STATUS:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SZKOL().STATUS().NAZWA
   || _BUF.STATUS:='niezaplanowane'
   ?};
:: dane o skutecznosci
   _BUF.BADANIE:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SZKOL().BADANIE;
   _BUF.CZY_SKUT:=SZK_PSZK.SZK_ZAP().SZK_PRAC().CZY_SKUT;
   _BUF.SK_OCENA:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SZKOL().OC_SKU().AE;
   _BUF.SKUTEK:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SZKOL().SKUTEK().NAZWA;
   _BUF.SK_OCNIS:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SK_OCNIS;
   _BUF.CERT:=SZK_PSZK.SZK_ZAP().SZK_PRAC().CERT;
   _BUF.WYNAGR:=SZK_PSZK.SZK_ZAP().SZK_PRAC().KOSZT;
   _BUF.KOSZT_T:=SZK_PSZK.SZK_ZAP().SZK_PRAC().DYD;
   _BUF.KOSZT_Z:=SZK_PSZK.SZK_ZAP().SZK_PRAC().ZAKW;
   _BUF.KOSZT_W:=SZK_PSZK.SZK_ZAP().SZK_PRAC().WYZ;
   _BUF.KOSZT_D:=SZK_PSZK.SZK_ZAP().SZK_PRAC().DEL;
   _BUF.KOSZT_C:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SUMA;
   _BUF.UWAGI:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SZKOL().UWAGI;
   _BUF.ORG_OCEN:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SZKOL().OC_WYK().AE;
   _BUF.ORG_OCEM:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SZKOL().OC_MER().AE;
   _BUF.ORG_OCET:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SZKOL().OC_TER().AE;
   _BUF.ORG_OCEK:=SZK_PSZK.SZK_ZAP().SZK_PRAC().SZKOL().OC_KOS().AE
?};
_jTerm:=(~-cli_ver()='JTERM');
SZK_PSZK.SZK_ZAP().P();
_BUF.DOSTEP:='T';

{? _mod
|| _BUF.add()
|| _BUF.put()
?}


\pszk_arkusz_widok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.30]
:: OPIS: Utworzenie okienka plachty z danymi o pozycjach planu szkolen.
::   WE: _a [TABLE] - alias bufora danych
::   WY:
::  OLD: \win_plan_szkol/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
_BUF:=_a;

: pierwsza zakładka
_sw1:=_BUF.mk_sel('Dane zapotrzebowań'@,'T',,,1,5,,,'U','U');
_BUF.win_fld(_sw1,,'DWP',,,-10);
_BUF.win_fld(_sw1,,'ROK',,,-4);
_BUF.win_fld(_sw1,,'KWARTAL',,,-2);
: Planowany termin (miesiąc)
_BUF.win_fld(_sw1,,'TERMIN',,,-2);
: Status:
: zrealizowane - OK.,
: odwołanie szkolenia - CAN
: przesunięty termin - POSTP.
: Zaplanowane - PLANNED
_BUF.win_fld(_sw1,,'WER_WYN',,,10);
_BUF.win_fld(_sw1,,'POD_REAL',,,10);
_BUF.win_fld(_sw1,,'STN',,,-10);
_BUF.win_fld(_sw1,,'WAKAT',,,-5);
_BUF.win_fld(_sw1,,'NAZWISKO',,,-20);
_BUF.win_fld(_sw1,,'IMIE',,,-20);
_BUF.win_fld(_sw1,,'PLEC',,,-2);
: Kadra vs. Pozostali
_BUF.win_fld(_sw1,,'KADRA',,,6);
_BUF.win_fld(_sw1,,'WYDZIAL',,,10);
_BUF.win_fld(_sw1,,'MPK',,,10);

: Rodzaj np:
: A. związane ze stanowiskiem/linked to the position
: B. nie związane ze stanowiskiem/general
: C. zarządzanie/management
: D. języki/language
: E. technika biurowa/office technical
: F. BHP/Ochrona środowiska/EHS
: G. szkolenia dyplomowe i akademickie/M.A
_BUF.win_fld(_sw1,,'RODZAJ',,,-15);
: Temat szkolenia
_BUF.win_fld(_sw1,,'TEMAT',,,-15);
: Lokalizacja
_BUF.win_fld(_sw1,,'LOKAL',,,10);
: Uwagi do typu zgłoszenia na szkolenie
_BUF.win_fld(_sw1,,'TYP',,,10);
: Planowany czas szkolenia
_BUF.win_fld(_sw1,,'Z_GODZ',,,6);
: Przewidywany koszt szkolenia
_BUF.win_fld(_sw1,,'KOSZT',,,8);
: Przekazanie wiedzy
_BUF.win_fld(_sw1,,'WIEDZA',,,-5);
: Trener wew/ zew
_BUF.win_fld(_sw1,,'TR_KOD',,,10);
: Miejsce we/wy
_BUF.win_fld(_sw1,,'WE_WY',,,10);

: druga zakładka
_sw2:=_BUF.mk_sel('Dane o szkoleniu'@,'T',,,1,5,,,'U','U');
_BUF.win_fld(_sw2,,'ROK',,,-4);
_BUF.win_fld(_sw2,,'KWARTAL',,,-2);
_BUF.win_fld(_sw2,,'TERMIN',,,-2);
_BUF.win_fld(_sw2,,'STATUS',,,-10);
_BUF.win_fld(_sw2,,'OBECNY',,,-7);
_BUF.win_fld(_sw2,,'IMIE',,,15);
_BUF.win_fld(_sw2,,'NAZWISKO',,,15);
: Data rozpoczęcia
_BUF.win_fld(_sw2,,'OD',,,-10);
: Data zakończenia
_BUF.win_fld(_sw2,,'DO',,,-10);
: Ilość godzin szkolenia
_BUF.win_fld(_sw2,,'GODZ',,,5);
: Ilość dni szkolenia
_BUF.win_fld(_sw2,,'ILE',,,5);
: Uwagi dot. zmiany terminu
_BUF.win_fld(_sw2,,'ZMIANA',,,-10);
: Dostawca
_BUF.win_fld(_sw2,,'ORG',,,-10);
: Czy dostarczono Ocenę szkolenia?
: OK. - została dostarczona przez Uczestnika
: ND - nie dotyczy
_BUF.win_fld(_sw2,,'OCENIL',,,-3);
: Ocena (pkt)
_BUF.win_fld(_sw2,,'OCENA',,,-4);
: Sposób weryfikowania skuteczności szkolenia
_BUF.win_fld(_sw2,,'SKUTEK',,,-8);
: Termin badania skuteczności
_BUF.win_fld(_sw2,,'BADANIE',,,-8);
: Czy dostarczono Ocenę skuteczności szkolenia? CZY_SKUT
_BUF.win_fld(_sw2,,'CZY_SKUT',,,-5);
: Ocena  Skut. (pkt)
_BUF.win_fld(_sw2,,'SK_OCENA',,,-5);
: Niska skuteczność (<22) - wyjaśnienie
_BUF.win_fld(_sw2,,'SK_OCNIS',,,-8);
: Czy dostarczono Certyfikat?
_BUF.win_fld(_sw2,,'CERT',,,-3);
: Koszty administracyjne (salka, przejazdy, zakwaterowanie)
: Wynagrodzenia Uczestników
_BUF.win_fld(_sw2,,'WYNAGR',,,-7);
_BUF.win_fld(_sw2,,'KOSZT_Z',,,-7);
_BUF.win_fld(_sw2,,'KOSZT_W',,,-7);
_BUF.win_fld(_sw2,,'KOSZT_D',,,-7);
: Koszty nauczania/ Koszt trenera
_BUF.win_fld(_sw2,,'KOSZT_T',,,-7);
: Całkowity koszt szkolenia dla 1 Uczestnika
_BUF.win_fld(_sw2,,'KOSZT_C',,,-7);
: UWAGI do kosztów
_BUF.win_fld(_sw2,,'UWAGI',,,-5,,1);
: Ocena Dostawcy Merytoryka
_BUF.win_fld(_sw2,,'ORG_OCEM',,,-4);
: Ocena Dostawcy Terminowość
_BUF.win_fld(_sw2,,'ORG_OCET',,,-4);
: Ocena Dostawcy Cena
_BUF.win_fld(_sw2,,'ORG_OCEK',,,-4);
_BUF.win_fld(_sw2,,'ORG_OCEN',,,-4);

_wnd:=_BUF.grp_make('Szczegółowy plan szkoleń na okres od %1 do %2'@[$SZK_PLAN.OD,$SZK_PLAN.DO],,,,,,,'maximized');
_BUF.grp_sel(_wnd,_BUF,_sw1,'Dane zapotrzebowania'@,
   "  _BUF:=cur_tab(1,1);
      _wnd:=cur_win(1,1);
      {? _BUF.PRZEN='T'
      || _BUF.actions(_wnd,'ZMW',,1)
      || _BUF.actions(_wnd,'I',,1)
      ?}
   ",,20,,,,,,'maximized'
);
_BUF.grp_sel(_wnd,_BUF,_sw2,'Dane o szkoleniu'@,
   "  _BUF:=cur_tab(1,1);
      _wnd:=cur_win(1,1);
      {? _BUF.PRZEN='T'
      || _BUF.actions(_wnd,'ZSDO',,1)
      || _BUF.actions(_wnd,'I',,1)
      ?}
   ",,20,,,,,,'maximized'
);
_wnd


\szk_plan_archiwum_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Obsługa akcji "Archiwum/Przeglądaj", formuła po akcji.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_mode:='maximized_with_title';

_wnd:=SZK_PLAN.grp_make('Archiwum planu szkoleń od %1 do %2'@[$SZK_PLAN.OD,$SZK_PLAN.DO],
:  przed wypełnieniem
   "  SZK_PLAN.cntx_psh();
      SZK_PLAN.index('SZK_TREE');
      SZK_PLAN.prefix(#SZK_PLAN.ref());

      SZK_PSZK.cntx_psh();
      SZK_PSZK.use('szk_pszh');
      SZK_PSZK.index('PLAN');

      SZK_ZAP.cntx_psh();
      SZK_ZAP.use('szk_zah');

      1
   ",
:  identyfikator
   'psz_plan_arch',
:  położenie
   ,,
:  przy zamknięciu
   "  SZK_PLAN.cntx_pop();
      SZK_PSZK.cntx_pop();
      SZK_ZAP.cntx_pop();
      1
   ",,
:  tryb wyświetlania
   'html_maximized'
);

SZK_PLAN.grp_sel(_wnd,,'ARC',,
:  po odświeżeniu
   "grp_disp(SZK_PSZK,'ARC',1)",
:  położenie i wysokość
   ,,5,
:  przed obsługą
   "",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode,,1
);

SZK_PLAN.grp_splt(_wnd,,'horizontal','bottom');

SZK_PLAN.grp_sel(_wnd,SZK_PSZK,'ARC',,
:  po odświeżeniu
   "",
:  położenie i wysokość
   ,,,
:  przed obsługą
   "  {? grp_empty(SZK_PLAN,'ARC')=1
      || '#disable'
      ?};
      SZK_PSZK.prefix(SZK_PLAN.ref())
   ",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);

SZK_PLAN.cntx_psh();
SZK_PLAN.win_sel(_wnd);
SZK_PLAN.select();
SZK_PLAN.cntx_pop();
SZK_PLAN.win_del(_wnd);
~~


\szk_plan_kopia_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Obsługa akcji "Archiwum/Utwórz kopię", formuła po akcji.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~FUN.ask('Czy utworzyć kopię archiwalną bieżącego planu?'@)
|| return()
?};

_ref_org:=#SZK_PLAN.ref();
_ref_bak:=null;

SZK_PLAN.cntx_psh();
SZK_PLAN.clear();
SZK_PLAN.HISTORIA:='T';
SZK_PLAN.HIST_DAT:=date();
SZK_PLAN.SZK_PLAN:=_ref_org;
{? SZK_PLAN.add()
|| _ref_bak:=SZK_PLAN.ref()
|| FUN.emsg('Utworzenie kopii bieżącego planu szkoleń nie powiodło się.'@);
   SZK_PLAN.cntx_pop();
   return()
?};
SZK_PLAN.cntx_pop();

SZK_PSZK.cntx_psh();
SZK_PSZK.index('PLAN');
SZK_PSZK.prefix(_ref_org);
_loop:=SZK_PSZK.first();
{!
|? _loop
|! SZK_PSZK.SZK_ZAP();
   SZK_PSZK.cntx_psh();
   SZK_PSZK.use('szk_pszh');
   SZK_PSZK.prefix();
   SZK_ZAP.cntx_psh();
   SZK_ZAP.use('szk_zah');
   SZK_ZAP.prefix();
   SZK_ZAP.SZK_PRAC:=null;
   {? SZK_ZAP.add(1)
   || SZK_PSZK.blank(1);
      SZK_PSZK.SZK_PLAN:=_ref_bak;
      SZK_PSZK.SZK_ZAP:=SZK_ZAP.ref();
      SZK_PSZK.add(1)
   ?};
   SZK_PSZK.cntx_pop();
   SZK_ZAP.cntx_pop();
   _loop:=SZK_PSZK.next()
!};
SZK_PSZK.cntx_pop();

exec('szk_plan_archiwum_a','psz');
~~


\szk_pszk_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko przed okienek tabeli SZK_PSZK.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_psh','phr_widok','PSZ_PRS_RPSZ');
SZK_PSZK.win_edit('WID');
1


\szk_pszk_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko po okienek tabeli SZK_PSZK.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_pop','phr_widok');

1


\szk_pszk_xxx_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Rekord przed okienek tabeli SZK_PSZK.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY: 0
::----------------------------------------------------------------------------------------------------------------------
REF.P:=SZK_PSZK.SZK_ZAP().P;
REF.OSOBA:=SZK_PSZK.SZK_ZAP().P().OSOBA;
0


\szk_pszk_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po edycji wiersza tabeli SZK_PSZK.
::   WE:
::   WY: wynik testu poprawności
::----------------------------------------------------------------------------------------------------------------------
exec('szk_pszk_chk','phr_sz_tab',-menu_txt()='popraw')


\szk_pszk_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Obsługa akcji "Dołącz", formuła po akcji.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SZK_ZAP.cntx_psh();
SZK_ZAP.prefix();
SZK_ZAP.f_set(
   'OD,WER_WYN(KOD)',,
   'SZK_ZAP.FIRMA=:_a and to_date(:_b)<=SZK_ZAP.OD and SZK_ZAP.OD<=to_date(:_c) and '
   'SZK_ZAP.REFERENCE not in ('
   '  select SZK_PSZK.SZK_ZAP '
   '  from SZK_PSZK '
   '  where SZK_PSZK.SZK_PLAN=:_d'
   ')',
   exec('ref_firma','ustawienia'),SZK_PLAN.OD,SZK_PLAN.DO,SZK_PLAN.ref()
);
_ZAP:=exec('szk_zap_wybierz','psz');
SZK_ZAP.f_clear();

SZK_PSZK.cntx_psh();
SZK_PSZK.index('PLAN');
SZK_PSZK.prefix(SZK_PLAN.ref());
_loop:=_ZAP.first();
{!
|? _loop
|! {? SZK_ZAP.seek(_ZAP.REF)
   || SZK_PSZK.blank();
      SZK_PSZK.SZK_ZAP:=SZK_ZAP.ref();
      SZK_PSZK.add()
   ?};
   _loop:=_ZAP.next()
!};
SZK_PSZK.cntx_pop();
SZK_ZAP.cntx_pop();
~~


\szk_pszk_pobierz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Obsługa akcji "Pobierz z zapotrzebowań", formuła po akcji.
::   WE:
::   WY: 0
::----------------------------------------------------------------------------------------------------------------------
exec('szk_pszk_pobierz','psz');
0


\szk_pszk_pobierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.30]
:: OPIS: Funkcja generuje pozycje planu szkolen. Musi być zawołana z kontekstu planu szkoleń.
::   WE:
::   WY:
::  OLD: \zapotrzebowanie/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
SZK_PSZK.cntx_psh();
SZK_PSZK.index('PLAN');
SZK_PSZK.prefix(SZK_PLAN.ref());

SZK_ZAP.cntx_psh();
SZK_ZAP.index('STATUS');
SZK_ZAP.prefix(exec('ref_firma','ustawienia'));
{? SZK_ZAP.first()
|| _ret:=exec('wybierz_kody','ext_slo','WER_WYN');
   {? ~_ret.OK
   || SZK_PSZK.cntx_pop();
      SZK_ZAP.cntx_pop();
      return()
   ?};
   _loop:=_ret.WYBOR.first();
   _cnt:=0;
   {!
   |? _loop
   |! SZK_ZAP.prefix(exec('ref_firma','ustawienia'),_ret.WYBOR.KOD);
      _loop:=SZK_ZAP.first();
      {!
      |? _loop
      |! {? SZK_ZAP.OD>=SZK_PLAN.OD & SZK_ZAP.OD<=SZK_PLAN.DO &
            ~SZK_PSZK.find_key(SZK_ZAP.ref())
         || SZK_PSZK.blank();
            SZK_PSZK.SZK_PLAN:=SZK_PLAN.ref();
            SZK_PSZK.SZK_ZAP:=SZK_ZAP.ref();
            SZK_PSZK.DWP:=date();
            _cnt+=SZK_PSZK.add(1)
         ?};
         _loop:=SZK_ZAP.next()
      !};
      _loop:=_ret.WYBOR.next()
   !};
   {? _cnt
   || FUN.info('Utworzono %1 pozycji planu.'@[$_cnt])
   || FUN.info('Nie znaleziono zapotrzebowań, które mogłyby być uwzględnione.'@)
   ?}

|| FUN.info('Nie znaleziono zapotrzebowań, które mogłyby być uwzględnione.'@)
?};

SZK_PSZK.cntx_pop();
SZK_ZAP.cntx_pop();
~~


\szk_zap_wybierz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Obsługa akcji "Wybierz", formuła po akcji.
::   WE:
::   WY: 0
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
{? var_pres('_par')>100 & var_pres('SZK_ZAP',_par)=type_of(SYSLOG)
|| _par.SZK_ZAP.NUM:=_par.SZK_ZAP.size()+1;
   _par.SZK_ZAP.REF:=$SZK_ZAP.ref();
   _par.SZK_ZAP.add()
|| sel_exit()
?};
sel_exit()


\szk_zap_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko przed okienek tabeli SZK_ZAP.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_psh','phr_widok','PSZ_SDO_RPSZ');

SZK_ZAP.win_edit('RED');

SZK_WZO.win_dict('WER');

1


\szk_zap_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko po okienek tabeli SZK_PLAN.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pom_pop','phr_widok');

1


\szk_zap_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po redakcji wiersza tabeli SZK_ZAP.
::   WE:
::   WY: wynik testu poprawności danych
::----------------------------------------------------------------------------------------------------------------------
exec('szk_zap_chk','phr_sz_tab',-menu_txt()='popraw')


\szk_zap_wakat_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed edycją pola WAKAT wiersza tabeli SZK_ZAP
::   WE:
::   WY: 0/1 - zależnie od tego czy pole powinno byc zablokowane czy dostępne do edycji.
::----------------------------------------------------------------------------------------------------------------------
SZK_ZAP.P=null


\szk_zap_ud_skl_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed edycją pola UD_SKL wiersza tabeli SZK_ZAP
::   WE:
::   WY: 0/1 - zależnie od tego czy pole powinno byc zablokowane czy dostępne do edycji.
::----------------------------------------------------------------------------------------------------------------------
SZK_ZAP.P=null


\szk_zap_stn_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed edycją pola STN wiersza tabeli SZK_ZAP
::   WE:
::   WY: 0/1 - zależnie od tego czy pole powinno byc zablokowane czy dostępne do edycji.
::----------------------------------------------------------------------------------------------------------------------
exec('_stn_st_be','stanprac');
SZK_ZAP.P=null


\szk_zap_kk_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed edycją pola KK wiersza tabeli SZK_ZAP
::   WE:
::   WY: 0/1 - zależnie od tego czy pole powinno byc zablokowane czy dostępne do edycji.
::----------------------------------------------------------------------------------------------------------------------
SZK_ZAP.KK_P='N'


\szk_zap_od_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po edycji pola OD wiersza tabeli SZK_ZAP
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
SZK_ZAP.ROK:=SZK_ZAP.OD~1;
SZK_ZAP.MC:=SZK_ZAP.OD~2;
SZK_ZAP.KWARTAL:=exec('kwartal','#datetime',SZK_ZAP.MC);
1


\szk_zap_wybierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Wybór zapotrzebowań.
::   WE:
::   WY: alias tabeli zawierającej wskazania wybranych wierszy
::UWAGA: Wymagane wcześniejsze ograniczenie dziedziny.
::----------------------------------------------------------------------------------------------------------------------
_SZK_ZAP:=tab_tmp(1,'NUM','INTEGER','Lp','REF','STRING[16]','Wskazanie');
params_set('SZK_ZAP',_SZK_ZAP);

SZK_ZAP.cntx_psh();
SZK_ZAP.win_sel('WYB');
SZK_ZAP.select();
SZK_ZAP.cntx_pop();

_SZK_ZAP


\szk_zap_generuj_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Obsługa akcji "Generuj", formuła po akcji.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('np_run','#b__box','PSZ_SDO_GPSZ');
~~


\szk_zap_weryfikuj_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Obsługa akcji "Weryfikuj", formuła po akcji.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_in:=obj_new('SZK_ZAP');
params_set('in',_in);

_in.SZK_ZAP:=SZK_ZAP.ref();
exec('np_run','#b__box','PSZ_SDO_WPSZ');

~~


\szk_zap_pracownik_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Akcja wyboru pracownika podczas redakcji zapotrzebowania.
::   WE:
::   WY: ''
::----------------------------------------------------------------------------------------------------------------------
_p:=exec('szk_zap_wybierz_p','psz');
{? _p=null & SZK_ZAP.P<>null
|| {? ~FUN.ask('Czy usunąć przypisanie pracownika do zapotrzebowania?'@)
   || return('')
   ?}
?};
SZK_ZAP.P:=_p;
SZK_ZAP.WAKAT:={? _p=null || 'T' || 'N' ?};
SZK_ZAP.OSOBA:=SZK_ZAP.P().OSOBA;
SZK_ZAP.UD_SKL:=SZK_ZAP.P().WYDZIAL;
SZK_ZAP.STN:=SZK_ZAP.P().ST;
SZK_ZAP.KADRA:=SZK_ZAP.P().ST().K;
SZK_ZAP.KK:=exec('kk_hist','pracownik',SZK_ZAP.P,date());
''


\szk_zap_zglaszajacy_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Akcja zgłaszającego podczas redakcji zapotrzebowania.
::   WE:
::   WY: ''
::----------------------------------------------------------------------------------------------------------------------
_p:=exec('szk_zap_wybierz_p','psz');
{? _p=null & SZK_ZAP.ZGL_KTO<>null
|| {? ~FUN.ask('Czy usunąć przypisanie zgłaszającego pracownika?'@)
   || return('')
   ?}
?};
SZK_ZAP.ZGL_KTO:=_p;
SZK_ZAP.ZGL_OS:=SZK_ZAP.ZGL_KTO().OSOBA;
''


\szk_zap_weryfikujacy_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Akcja wyboru weryfikującego podczas redakcji zapotrzebowania.
::   WE:
::   WY: ''
::----------------------------------------------------------------------------------------------------------------------
_p:=exec('szk_zap_wybierz_p','psz');
{? _p=null & SZK_ZAP.WER_KTO<>null
|| {? ~FUN.ask('Czy usunąć przypisanie weryfikującego pracownika?'@)
   || return('')
   ?}
?};
SZK_ZAP.WER_KTO:=_p;
SZK_ZAP.WER_OS:=SZK_ZAP.WER_KTO().OSOBA;
''


\szk_zap_wybierz_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Akcja wyboru pracownika podczas redakcji zapotrzebowania.
::   WE:
::   WY: wskazanie pracownika lub null
::----------------------------------------------------------------------------------------------------------------------
_ret:=null;

_arg:=exec('wybierz_args','pracownik');
_arg.DOMAIN:='PSZ';
_arg.F_ZATR:='P,Z,K';
_arg.VIEW:='T';
_arg.WIELU:=0;
_P:=exec('wybierz','pracownik',_arg).P;

{? _P.first()
|| P.cntx_psh();
   P.prefix();
   {? P.seek(_P.SQL)
   || _ret:=P.ref()
   ?};
   P.cntx_pop()
?};

_ret


\szk_komp_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko przed okienek tabeli SZK_KOMP.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
ZZ_HIST.cntx_psh();
ZZ_KOMP.cntx_psh();

exec('init_hist','phr_dane');
ZZ_KOMP.win_sel('SLO');

SZK_KOMP.win_edit('RED');
SZK_KOMP.win_patt('WZO');

1


\szk_komp_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Okienko po okienek tabeli SZK_KOMP.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
ZZ_KOMP.cntx_pop();
ZZ_HIST.cntx_pop();

1


\szk_komp_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Po redakcji wiersza tabeli SZK_KOMP.
::   WE:
::   WY: wynik testu poprawności danych
::----------------------------------------------------------------------------------------------------------------------
exec('szk_komp_chk','phr_sz_tab',-menu_txt()='popraw')


\wt_pszk_clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [18.02]
:: OPIS: Kasowanie danych w tabeli WT_PSZK.
::   WE: _a [INTEGER] - Moment wywołania:
::                      1 - Start TOMCATA - kasowane są wszystkie rekordy związane z identyfikatorem serwera.
::                      2 - Zakończenie sesji webTerma - kasowane są tylko rekordy związane z daną sesją.
::                      3 - Zamknięcie zakładki - kasowane są tylko rekordy związane z daną zakładką.
::   WY: Wynik operacji:
::       0 - Operacja zakończyła się sukcesem.
::       1 - Operacja nie zakończyła się sukcesem.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & (0<_a & _a<4)
|| _tryb:=_a
|| return(0)
?};

WT_PSZK.cntx_psh();
WT_PSZK.index('KEY');
{? _tryb=1
|| WT_PSZK.prefix(app_info('web_tcid'),)
|? _tryb=2
|| WT_PSZK.prefix(app_info('web_tcid'),app_info('web_sesid'),)
|| WT_PSZK.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),)
?};
{? WT_PSZK.first()
|| {!
   |? WT_PSZK.del()
   !}
?};
_ret:=~WT_PSZK.first();
WT_PSZK.cntx_pop();
_ret


\szk_opis_kryteria_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Obsługa akcji "Kryteria doboru" dla tabeli SZK_OPIS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZZ_POM.cntx_psh();
ZZ_POM.MODUL:='A';
ZZ_POM.KREATORY:='';

_fml_link:=ZZ_KRYT.fld_fml('ZZ_LINK','BLANK',"SZK_OPIS.ZZ_DOK");
_fml_typ:=ZZ_KRYT.fld_fml('ZZ_TYP','BLANK',"exec('typ_op','phr_dane')");
_dok:=SZK_OPIS.ZZ_DOK;

ZZ_KRYT.cntx_psh();
ZZ_KRYT.index('UNIQUE');
ZZ_KRYT.prefix(ref_name(_dok),_dok,exec('typ_op','phr_dane'));
ZZ_KRYT.win_sel('CFG');
ZZ_KRYT.select();
ZZ_KRYT.fld_fml('ZZ_LINK','BLANK',_fml_link);
ZZ_KRYT.fld_fml('ZZ_TYP','BLANK',_fml_typ);
ZZ_KRYT.cntx_pop();

ZZ_POM.cntx_pop();
1


\wt_szkz_clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Kasowanie danych w tabeli WT_SZKZ.
::   WE: _a [INTEGER] - Moment wywołania:
::                      1 - Start TOMCATA - kasowane są wszystkie rekordy związane z identyfikatorem serwera.
::                      2 - Zakończenie sesji webTerma - kasowane są tylko rekordy związane z daną sesją.
::                      3 - Zamknięcie zakładki - kasowane są tylko rekordy związane z daną zakładką.
::   WY: Wynik operacji:
::       0 - Operacja zakończyła się sukcesem.
::       1 - Operacja nie zakończyła się sukcesem.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & (0<_a & _a<4)
|| _tryb:=_a
|| return(0)
?};

WT_SZKZ.cntx_psh();
WT_SZKZ.index('KEY');
{? _tryb=1
|| WT_SZKZ.prefix(app_info('web_tcid'),)
|? _tryb=2
|| WT_SZKZ.prefix(app_info('web_tcid'),app_info('web_sesid'),)
|| WT_SZKZ.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),)
?};
{? WT_SZKZ.first()
|| {!
   |? WT_SZKZ.del()
   !}
?};
_ret:=~WT_SZKZ.first();
WT_SZKZ.cntx_pop();
_ret


\szk_opis_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła na 'Rekord - przed' dla okna wertowania WER tabeli SZK_OPIS.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::----------------------------------------------------------------------------------------------------------------------
ZZ_POM.WIDOK_P:=
   {? SZK_OPIS.EGZAMIN='N' || 'nd'
   |? SZK_OPIS.TRYB='T'    || '%'
   |? SZK_OPIS.TRYB='N'    || 'pkt'
   || ''
   ?}


\szk_opis_szk_wzo_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła "Po redakcji" pola SZK_WZO tabeli SZK_OPIS.
::----------------------------------------------------------------------------------------------------------------------
_update:=0;
{? -menu_txt()='popraw'
|| {? FUN.ask('Czy zaktualizować szkolenie na podstawie wprowadzonego wzorca?'@)
   || _update:=1
   ?}
|| _update:=1
?};

{? _update
|| SZK_OPIS.TEMAT:=SZK_WZO.TEMAT;
   SZK_OPIS.EGZAMIN:=SZK_WZO.EGZAMIN;
   SZK_OPIS.TRYB:=SZK_WZO.TRYB;
   SZK_OPIS.PROMOCJA:=SZK_WZO.PROMOCJA;
   exec('szk_opis_efld_opt','phr_widok')
?};
~~

\wybierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [22.26]
:: OPIS: Umożliwia wybór rekordu ze struktury (wybór wiersza tabeli SZB_POZ).
::   WE:
::   WY: referencja do wiersza lub 0 w przypadku wycofania
::----------------------------------------------------------------------------------------------------------------------
SZB_POZ.cntx_psh();
SZB_POZ.index('SYMBOL');
SZB_POZ.prefix(SZB_OKR.ref());
SZB_POZ.win_sel('WYB');
SZB_POZ.win_sopt('WYB','select_record_checkbox=0');
{? SZB_POZ.select(,1)
:: wybrano
|| _ret:=SZB_POZ.ref()
|| _ret:=0
?};
SZB_POZ.cntx_pop();
_ret


\akc_param
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [22.26]
:: OPIS: Formuła tworzy tablicę zaznaczonych rekordów tabeli SZB_POZ, które mają ulec zmianie.
::   WE:
::   WY: tablica tymczasowa
::----------------------------------------------------------------------------------------------------------------------
_rec:=cur_tab(1,1).sel_aget();
:: jeżeli nie ma zaznaczonych rekordów to dodawany jest do tabeli rekord tabeli aktualnie przechowywany w buforze
{? cur_tab(1,1).sel_size()=0
|| _rec.REF:=cur_tab(1,1).ref();
   _rec.add()
?};
_rec


\akc_nad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [22.26]
:: OPIS: Formuła zwraca referencję wiersza tabeli SZB_POZ do którego należy dodać przełożonego.
::   WE: [_a] - 0/1 - czy należy pobrać rekord występujący najwyżej w hierarchii zależności
::   WY: ~~ lub referencja rekordu tabeli SZB_POZ
::----------------------------------------------------------------------------------------------------------------------
_up:={? var_pres('_a')=type_of(1) || _a || 0 ?};
_ref:=null();
{? ~_up
|| _ref:=exec('wybierz','psz')
?};
_ref


\zmien_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [22.26]
:: OPIS: Formuła umożliwiająca zmianę w strukturze zależności tabeli SZB_POZ.
::   WE: _a - tabela, względem której wykonywane będą zmiany (drzewo)
::       _b - tablica rekordów do przeniesienia
::       [_d] - referencja do SZB_POZ
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_rec:=_b;
_ref:={? var_pres('_c')=type_of(ZS_TYP.ref()) || _c || 0 ?};
_err:=1;
_tab.sel_adel();
_errMsg:='Nie można wykonać przeniesienia rekordów.'@ + '\n';
_errMsg+='Nastąpiła próba naruszenia struktury hierarchicznej.'@;

{? _rec.first()
|| do();
   {!
   |? {? _rec.REF=#_ref
      || undo();
         FUN.info(_errMsg)
      || SZB_POZ.seek(_rec.REF);
         SZB_POZ.SZB_POZ:=_ref;
         {? ~SZB_POZ.put()
         || undo()
         ?}
      ?};
      do_state()=1 & _rec.next()
   !};
   end()
?};
~~


\szb_poz_zm_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [22.26]
:: OPIS: Formuła na akcje w menu Przesuń okna tabeli SZB_POZ.
::   WE: [_a] - 0/1 - informacja o wykonywaniu akcji "Zaznaczone do bieżącego zapisu" lub "Na poziom główny"
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_up:={? var_pres('_a')=type_of(1) || _a || 0 ?};
:: parametryzacja - zebranie tablicy zapisów do zmiany
_rec:=exec('akc_param','psz');

:: parametryzacja - wybór rekordu do którego będą przypisane zmiany
_ref:=exec('akc_nad','psz',_up);
{? var_pres('_ref')<>type_of(ZS_DEF.ref()) & var_pres('_ref')<>type_of(null)
|| cur_tab(1,1).sel_adel();
   return()
?};

:: wykonanie formuły przenoszącej wybrane rekordy i ustawienie się na pierwszym z nich
{? _rec.first()
|| _reference:=_rec.REF;
   exec('zmien_zal','psz',cur_tab(1,1),_rec,_ref);
   {? _up || SZB_POZ.seek(_reference) ?}
?};
obj_del(_rec);
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:35 4e39cad5de0ecd4b62bc1adc04561e40aa2d089bb749abb74e8d1a2fb5f2204ae428908da9b5a334fc07e54571a53324a95110c57535ffbb5ed1b53356d9ae0c24e30baeab44012e3191b8a9dc3e544d2fe3d6dbb32a9834144064ff575c73ee3394a4b4d01e3521cccdd0c5af8e953bbe3949bbe86d7539ba3a9457263dc12b
