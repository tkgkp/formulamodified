:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: heremaps.fml
:: Utworzony: 14.12.2022
:: Autor: PD
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi map HERE
::======================================================================================================================

\http_send
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: wysyła plik lub stringa postem i zapisuje w logu (jeśli podane parametry _b / _c)
::   WE: _a - url
::       _b - opis do logu
::       _c - czy zapisywać plik w logu - domyślnie 1
::       [_d] - parametry zapytania oddzielone znakiem ';'
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_url:=_a;
{? _<3 || _b:=1 ?};
{? _<4 || _c:=0 ?};

:: Tryb cichy poza transakcją
{? do_state()=0 || _do:=0; _no_msg:=no_msg(1) || _do:=1 ?};
_http:=inet_get(_url);
{? _do=0 || no_msg(_no_msg) ?};

{? type_of(_http)<100
||
   exec('log_write','firm_kur','','Błąd wywołania funkcji %1.'['inet_get()'],0);
   return(-1)
?};
_http.append_header('charset: UTF-8');
_param:='';
{? var_pres('_d')=type_of('') & _d<>''
||
   {!|?
      _param_1:=(_d*'#'-1)+_d;
      _d:=(_d*'#')-_d;
      _param_2:={? ~(_d*'#')
                || _d
                || (_d*'#'-1)+_d
                ?};
      _d:={? ~(_d*'#')
          || ''
          || (_d*'#')-_d
          ?};
      _http.url_add_param(_param_1,_param_2);
      _param+='%1,%2,'[_param_1,_param_2];
      _d<>''
   !}
?};

_utc_start:=utc_get();
_http.http_get();
_utc_stop:=utc_get();
_res:=_http.get_status();
_ans:=_http.get_data();
_ref:=exec('log_write','heremaps',_param, _b, $_res, _http, _utc_start, _utc_stop,
   {? _c=1 || _ans || '' ?}, _url);
_ans


\http_send_post
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: wysyła plik lub stringa postem i zapisuje w logu (jeśli podane parametry _b / _c)
::   WE: _a - url
::       _b - opis do logu
::       _c - czy zapisywać plik w logu - domyślnie 1
::       _d - key
::       _e - json
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_url:=_a;
{? _<3 || _b:=1 ?};
{? _<4 || _c:=0 ?};

:: Tryb cichy poza transakcją
{? do_state()=0 || _do:=0; _no_msg:=no_msg(1) || _do:=1 ?};
_http:=inet_get(_url);
{? _do=0 || no_msg(_no_msg) ?};

{? type_of(_http)<100
||
   exec('log_write','firm_kur','','Błąd wywołania funkcji %1.'['inet_get()'],0);
   return(-1)
?};
_http.append_header('charset: UTF-8');
_http.append_header('Content-Type: application/json');
_http.url_add_param('apiKey',_d);

_utc_start:=utc_get();
_http.http_post(,_e);
_utc_stop:=utc_get();
_res:=_http.get_status();
_ans:=_http.get_data();
_ref:=exec('log_write','heremaps',_e, _b, $_res, _http, _utc_start, _utc_stop,
   {? _c=1 || _ans || '' ?}, _url);
_ans


\http_send_image
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: wysyła plik lub stringa postem i zapisuje w logu (jeśli podane parametry _b / _c)
::   WE: _a - url
::       _b - opis do logu
::       _c - 0-get status, 1-get bytes
::       [_d , _e] - parametry zapytania
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_url:=_a;
{? _<4 || _c:=0 ?};

:: Tryb cichy poza transakcją
{? do_state()=0 || _do:=0; _no_msg:=no_msg(1) || _do:=1 ?};
_http:=inet_get(_url);
{? _do=0 || no_msg(_no_msg) ?};

{? type_of(_http)<100
||
   exec('log_write','firm_kur','','Błąd wywołania funkcji %1.'['inet_get()'],0);
   return(-1)
?};
_http.append_header('Content-Type: application/x-www-form-urlencoded');
_http.append_header('charset: UTF-8');

::klucz HERE
_http.url_add_param(_[4],_[5]);
::język
_http.url_add_param(_[6],_[7]);
::piksele
_http.url_add_param(_[8],_[9]);
::szerokość
_http.url_add_param(_[10],_[11]);
::wysokość
_http.url_add_param(_[12],_[13]);

_int:=4;
_param:='';
{!|? _param+=_[_int] + {? _int%*2 || ', ' || '=' ?}; _int+=1; _int<=13 !};

_utc_start:=utc_get();

_answer:=fopen('zdjecie_mapy.jpg','bw',1,,1);
_http.http_post(_answer,_[14]);
fclose(_answer);
_utc_stop:=utc_get();
_res:=_http.get_status();
_ans:=_http.get_data();
_ref:=exec('log_write','heremaps',_param, _b, $_res, _http, _utc_start, _utc_stop,
   {? _c=1 || _ans || '' ?}, _url);
_res


\log_write
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS:  zapis pliku / zawartości zmiennej w logu
::   WE: _a - plik (obiekt) / string ( może być '' )
::       _b - opis do logu
::       _c - status
::       _d - obiekt INET
::       _e - _utc_start
::       _f - _utc_stop
::       _g - odpowiedź
::       _h - url
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_mwac_log_ref:=exec('mwac_log','#mwac',
   _b,
   _h,
   'REST',
   _d.get_status(),
   _e,
   _f,
   _a,
   _g,
   _d.get_header(1),
   _d.get_header(0)
);

{? _mwac_log_ref<>''
|| exec('mwac_log_app','#mwac',_mwac_log_ref,'|%1|'['HEREMaps'],'')
?};
_mwac_log_ref


\geocode
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Pobranie adresu
::   WE: _a - TR_NZL.MIASTO
::       _b - TR_NZL.UL
::       [_c] - TR_NZL.NUMER
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('http_send','heremaps',
'https://geocode.search.hereapi.com/v1/geocode',
'geocode',
1,
'at'     +'#'+ '52.11,19.21'+'#'+
'apiKey' +'#'+ exec('get','#params',700813,2)+'#'+
'limit'  +'#'+ '5'+'#'+
'qq'     +'#'+ 'city=%1;street=%2'[_a,_b]+{? var_pres(_c)=type_of('') & _c<>'' || 'houseNumber=%1'[_c] || '' ?}
)


\router
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Pobranie adresu
::   WE: _a - destination
::       _b - origin
::       _c -pozostałe parametry przedielone znakiem ';'
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_router:='
exec(\'http_send\',\'heremaps\',\'https://router.hereapi.com/v8/routes\',\'router\',1,
\'transportMode#truck#apiKey#%1#return#polyline,summary#destination#%2#origin#%3'[exec('get','#params',700813,2),_a,_b];
{? var_pres('_c')=type_of('') & _c<>'' ||_router+=_c ?};
_router+='\')';
($(_router))()


\image
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Pobranie adresu
::   WE: _a - apiKey
::       _b - at - domyślna lokalizacja (52.11,19.21)
::       _c - q - słowa do wyszukania
::       _d - limit - limit zapytń (5)
::       _e - qq - string ze szczegółami (city=Warszawa;street=branickiego)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('http_send_image','heremaps',
'https://image.maps.ls.hereapi.com/mia/1.6/route',
'image',
1,
'apiKey',exec('get','#params',700813,2),
'ml','pol',
'ppi','72',
'w','650',
'h','650',
_a
)


\tr_nag_pobierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Pobiera mapę transportu
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',700813,2)='' || FUN.info('Niewypełniony parametr 700813(Klucz HERE).'@); return(~~) ?};
TR_NZL.cntx_psh();
TR_NZL.index('TR_NAG');
TR_NZL.prefix(TR_NAG.ref(),'no',);
_size:=exec('tr_nzl_size','heremaps');
{? ~TR_NZL.first() || TR_NZL.cntx_pop(); FUN.info('Brak zaplanowanych dyspozycji.'@); return(~~) ?};
::zapytanie które na podstawie adresu znajduje lokalizacje
_ok:=exec('lat_lng','heremaps');
::zapytanie które wylicza odległości, czas, i polilinie(którą później nanosimy na mapę)
{? _ok
||
   _router:='exec(\'router\',\'heremaps\',\'%1\',\'%2\''[
   __lat[1]+','+__lng[1],
   __lat[_size]+','+__lng[_size]];
   POJAZDY.cntx_psh();
   _weight:=form((TR_NAG.POJAZD().MW+TR_NAG.POJAZD().DOPL)*1000,,0,'111');
   _height:=form(TR_NAG.POJAZD().WYSO_P*100,,0,'111');
   _width:=form(TR_NAG.POJAZD().SZER_P*100,,0,'111');
   _length:=form(TR_NAG.POJAZD().DLUG_P*100,,0,'111');
   {? _weight<>'0' | _weight<>'0'  | _height<>'0' | _length<>'0' | _size>2 || _router+=',\'' ?};
   {? _weight<>'0'   || _router+='#vehicle[grossWeight]#%1'[_weight] ?};
   {? _height<>'0'   || _router+='#vehicle[height]#%1'[_height] ?};
   {? _width<>'0'    || _router+='#vehicle[width]#%1'[_width] ?};
   {? _length<>'0'   || _router+='#vehicle[length]#%1'[_length] ?};
   POJAZDY.cntx_pop();
   _int:=2;
   {? _size>2
   || {!|?
         _router+='#via#%1'[__lat[_int]+','+__lng[_int]];
         _int+=1;
         _size>_int
      !}
   ?};
   {? _weight<>'0' | _weight<>'0'  | _height<>'0' | _length<>'0' | _size>2 || _router+='\'' ?};
   _router+=')';
   {? var_pres('_ans')>100 || obj_del(_ans) ?};
   _ans:=($(_router))()
?};
::na podstawie odpowiedzi z _router przygotowuje już zapytanie dla pobrania mapy z naniesioną polilinią
::oraz spisuje czas i odległości każdego z odcinka
_duration:=0;
_length:=0;
_image_query:=fopen('image_query.txt','bw',1,,1);
{? ~_image_query.is_open() || FUN.info('Problem z otwarciem się pliku do zapisu'@); _ok:=0 ?};

{? var_pres('_sections')>100 || obj_del(_sections) ?};
{? _ok
& var_pres('routes', json_parse(_ans))>0
& obj_len(json_parse(_ans).routes)>0
& var_pres('sections', json_parse(_ans).routes[1])>0
& (_sec_size:=obj_len(json_parse(_ans).routes[1].sections))>0
|| _sections:=json_parse(_ans).routes[1].sections
|| _ok:=0
?};

_int:=1;
{? _ok
||
   fwrite(_image_query,'r0=');
   {!|?
      _answer:=fopen('polyline.txt','bw',1,,1);
      _output:=fopen('polyline_output.txt','bw',1,,1);

      {? _ok & (~_answer.is_open() | ~_output.is_open())
      || FUN.info('Problem z otwarciem się pliku do zapisu'@);
         _ok:=0
      ?};

      {? var_pres('summary', _sections[_int])>0
      & var_pres('duration', _sections[_int].summary)>0
      || _duration+=_sections[_int].summary.duration
      ?};
      {? var_pres('summary', _sections[_int])>0
      & var_pres('length', _sections[_int].summary)>0
      || _length+=_sections[_int].summary.length
      ?};

      fwrite(_answer,_sections[_int].polyline);
      {? _answer.is_open() || fclose(_answer) ?};
      {? _output.is_open() || fclose(_output) ?};
      _cfg:=exec('get_cfg','#xml','polyline','mcl.PolylineEncoderDecoder',0,0);
      _cfg.add_file('polyline.jar');
      _path:=pth_dir('polyline.txt')+'\\polyline.txt';
      _path:=gsub(_path,'\\','\\\\');
      _path_output:=pth_dir('polyline_output.txt')+'\\polyline_output.txt';
      _path_output:=gsub(_path_output,'\\','\\\\');
      {? _cfg.getXML()>0
      || _ok:=_cfg.execute(_path,_path_output)=0
      || _ok:=0
      ?};
      obj_del(_cfg);

      _r0:='';
      {? var_pres('_output')>100 || obj_del(_output) ?};
      _output:=fopen('polyline_output.txt','r',1,,1);
      {? ~_output.is_open() || FUN.info('Problem z otwarciem się pliku do zapisu'@);_ok:=0 ?};
      {? _ok
      ||
         {!|? (_wiersz:=fread(_output)) <> '\n' |!
            _lat:=(_wiersz*'lat'+3)-_wiersz;
            _lat:=(_lat*', lng'-1)+_lat;
            _lng:=(_wiersz*'lng'+3)-_wiersz;
            _lng:=(_lng*', z'-1)+_lng;
            _r0+=_lat+','+_lng+','
         !}
      ?};
      {? _r0<>'' & _int=_sec_size || _r0:=(_r0-1)+'&' ?};
      fwrite(_image_query,_r0);
      {? _answer.is_open() || fclose(_answer) ?};
      {? _output.is_open() || fclose(_output) ?};
      {? var_pres('_answer')>100 || obj_del(_answer) ?};
      {? var_pres('_output')>100 || obj_del(_output) ?};
      _int+=1;
      _int<=_sec_size & _ok
   !}
?};
::dodaje do zapytania lokalizację każdego z punktów i wysyłam zapytanie o mapkę i zapisuje ją do pliku
{? _ok
||
   _int:=1;
   _poi:='poi=';
   {!|?
      _poi+=__lat[_int]+','+__lng[_int]+',';
      _int+=1;
      _size>=_int
   !};
   _poi:=_poi-1;
   fwrite(_image_query,_poi);
   {? exec('image','heremaps',_image_query)<>200 || _ok:=0 ?}
?};

{? _image_query.is_open() || fclose(_image_query) ?};
{? var_pres('_sections')>100 || obj_del(_sections) ?};
{? var_pres('_ans')>100 || obj_del(_ans) ?};
{? var_pres('__lat')>100 || obj_del(__lat) ?};
{? var_pres('__lng')>100 || obj_del(__lng) ?};

{? _ok
||
   TR_NAG.cntx_psh();
   TR_NAG.prefix();
   TR_NAG.bl_put('PLM','zdjecie_mapy.jpg',1);
   TR_NAG.PLL:=_length/1000;
   TR_NAG.PLD:=_duration/60;
   TR_NAG.put();
   TR_NAG.cntx_pop();
   TR_NAG.get();
   exec('tr_nag_wyswietl','heremaps')
|| FUN.info('Nie udało się pobrać mapy z trasą transportu.'@)
?};

TR_NZL.cntx_pop();
~~


\tr_nag_wyswietl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Wyświetla mapę transportu
::----------------------------------------------------------------------------------------------------------------------
TR_NAG.cntx_psh();
TR_NAG.win_edit('PLM');
TR_NAG.display();
TR_NAG.cntx_pop();
~~


\tm_stamp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Znacznik czasowy w formacie "2021-07-04T10:00:00.000Z"
:: WE _a: 0/1 - początka/ końca zmiany dnia kolejnego
::----------------------------------------------------------------------------------------------------------------------
'%1-%2-%3T%4:00:00.000Z'[$((date()+1)~1),('0'+$((date()+1)~2))+2,('0'+$((date()+1)~3))+2,{? _a || '23' || '00' ?}]


\lat_lng
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Tworzy obiekty __lat i __lng które posiadają lokalizacje adresó
::----------------------------------------------------------------------------------------------------------------------
::obiekty do przechowywania lokalizacji każdego z punktu trasy
{? var_pres('__lat')>100 || obj_del(__lat) ?};
{? var_pres('__lng')>100 || obj_del(__lng) ?};
_size:=exec('tr_nzl_size','heremaps');
__lat:=obj_new(_size);
__lng:=obj_new(_size);
_ok:=1;
_int:=1;
::zapytanie które na podstawie adresu znajduje lokalizacje
_geocode:="
_size:=_b;
   {? var_pres('_ans')>100 || obj_del(_ans) ?};
   {? var_pres('_position')>100 || obj_del(_position) ?};
   {? _size<>TR_NZL.size() & _a=1
   || _ans:=exec('geocode','heremaps',TR_NAG.MIASTO,TR_NAG.UL,TR_NAG.NUMER)
   || _ans:=exec('geocode','heremaps',TR_NZL.MIASTO,TR_NZL.UL,TR_NZL.NUMER)
   ?};

   {? var_pres('items', json_parse(_ans))>0
   & obj_len(json_parse(_ans).items)>0
   & var_pres('position', json_parse(_ans).items[1])>0
   || _position:=json_parse(_ans).items[1].position
   || __lat[_a]:=__lng[_a]:=''; return(~~)
   ?};

   __lat[_a]:=
   {? var_pres('lat', _position)>0
   || gsub($_position.lat ,',','.')
   || ''
   ?};
   __lng[_a]:=
   {? var_pres('lng', _position)>0
   || gsub($_position.lng ,',','.')
   || ''
   ?};
   {? var_pres('_ans')>100 || obj_del(_ans) ?};
   {? var_pres('_position')>100 || obj_del(_position) ?}
";
{!|?
   _geocode(_int,_size);
   {? __lat[_int]='' | __lng[_int]='' || FUN.info('Nie odnaleziono adresu dyspozycji %1.'@[TR_NZL.SYM]);_ok:=0 ?};
   _int+=1;
   {? _size<>TR_NZL.size() & _int=2 || 1 || TR_NZL.next() ?}
!};
_ok


\tourplanning_json
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Układanie trasy
::----------------------------------------------------------------------------------------------------------------------
_ok:=exec('lat_lng','heremaps');
_size:=exec('tr_nzl_size','heremaps');
{? ~_ok || return('') ?};
TR_NZL.first();
_json:='
{
  "plan": {
    "jobs": [
      %1
    ]
  },
  "fleet": {
    "types": [
      {
        "id": "truck_profile",
        "profile": "truck_1",
        "costs": {
            "distance": 0.0001,
            "time": 0
        },
        "shifts": [
          {
            "start": {
              "time": "%2",
              "location": {
                "lat": %3,
                "lng": %4
              }
            },
            "end": {
              "time": "%5",
              "location": {
                "lat": %6,
                "lng": %7
              }
            }
          }
        ],
        "capacity": [
          0
        ],
        "amount": 1
      }
    ],
    "profiles": [
      {
        "name": "truck_1",
        "type": "truck"
      }
    ]
  }
}'[
_wyn:='';
_int:=1;
{!|?
   _wyn+='
      {
        "id": "%1",
        "tasks": {
          "deliveries": [
            {
              "places": [
                {
                  "location": {
                    "lat": %2,
                    "lng": %3
                  },
                  "times": [
                    [
                      "%4",
                      "%5"
                    ]
                  ],
                  "duration": 0
                }
              ],
              "demand": [
                0
              ]
            }
          ]
        }
      },'
      [
::id
      {? (_size<>TR_NZL.size() & _int=1) || $TR_NAG.ref() || $TR_NZL.ref() ?},
::lat
      __lat[_int],
::lng
      __lng[_int],
::times
      exec('tm_stamp','heremaps',0),
      exec('tm_stamp','heremaps',1)
      ];
   _int+=1;
   (_size<>TR_NZL.size() & _int=2) | (TR_NZL.next() & _int<=_size)
!};
_wyn-1,
::start time
exec('tm_stamp','heremaps',0),
::start location
__lat[1],
__lng[1],
::end time
exec('tm_stamp','heremaps',1),
::start location
__lat[_size],
__lng[_size]
];
{? var_pres('__lat')>100 || obj_del(__lat) ?};
{? var_pres('__lng')>100 || obj_del(__lng) ?};
_json


\tourplanning
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Pobranie adresu
::   WE: _a - json
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('http_send_post','heremaps',
'https://tourplanning.hereapi.com/v3/problems',
'tourplanning',
1,
exec('get','#params',700813,2),
_a
)


\tr_nag_plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Planowanie trasy
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? exec('get','#params',700813,2)='' || FUN.info('Niewypełniony parametr 700813(Klucz HERE).'@); return(~~) ?};
TR_NZL.cntx_psh();
TR_NZL.index('TR_NAG');
TR_NZL.prefix(TR_NAG.ref(),'no',);
_size:=exec('tr_nzl_size','heremaps');
{? _size<4   || TR_NZL.cntx_pop(); FUN.info('Niewystarczająca ilość zaplanowanych dyspozycji.'@); return('') ?};
{? ~TR_NZL.first() || TR_NZL.cntx_pop(); FUN.info('Brak zaplanowanych dyspozycji.'@); return('') ?};
_json:=exec('tourplanning_json','heremaps');
{? _json<>''
|| _ans:=exec('tourplanning','heremaps',_json)
|| _ok:=0
?};

_stops_size:=0;
{? _ok & var_pres('tours', json_parse(_ans))>0
& obj_len(json_parse(_ans).tours)>0
& var_pres('stops', json_parse(_ans).tours[1])>0
|| _stops:=json_parse(_ans).tours[1].stops;
   _stops_size:=obj_len(_stops)
|| _ok:=0
?};
do();
_int:={? _size<>TR_NZL.size() || 2 || 1 ?};
_put:=0;
{!|?
   {? _ok & var_pres('activities', _stops[_int])>0
   & (_activities_size:=obj_len(_stops[_int].activities))>0
   ||
      _int_act:=1;
      {!|?
         {? var_pres('jobId', _stops[_int].activities[_int_act])>0
         & (4+_stops[_int].activities[_int_act].jobId)='trnl'
         ||
            TR_NZL.prefix();
            {? ~TR_NZL.seek(_stops[_int].activities[_int_act].jobId) || _ok:=0 ?};
            {? _ok & TR_NZL.LP_TR<>_int
            || TR_NZL.LP_TR:=_int;
               {? TR_NZL.put() || _put:=1 || _ok:=0 ?}
            ?}
         ?};
         _int_act+=1;
         _int_act<=_activities_size & _ok
      !}
   || _ok:=0
   ?};
   _int+=1;
   _int<=_stops_size & _ok
!};
{? ~_ok || undo() ?};
end();
{? ~_ok
|| FUN.info('Nie udało się zaktualizować kolejności transportu.'@)
|| {? _put
   || FUN.info('Zaktualizowano kolejność transportu.'@)
   || FUN.info('Kolejność transportu pozostała bez zmian.'@)
   ?}
?};

TR_NZL.cntx_pop();
~~

\tr_nzl_size
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Ilość punktów transportu
::   WE: _a - json
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_wyn:=TR_NZL.size();
{? TR_NAG.MIASTO<>'' & TR_NAG.UL<>'' || _wyn+=1 ?};
_wyn

\geocode_sharepoint
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Lokalizacja dla jednego punktu
::   WE: _a - TR_NZL.MIASTO
::       _b - TR_NZL.UL
::       [_c] - TR_NZL.NUMER
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',700813,2)='' || FUN.info('Niewypełniony parametr 700813(Klucz HERE).'@); return(~~) ?};
_ans:=exec('geocode','heremaps',TR_NZL.MIASTO,TR_NZL.UL,TR_NZL.NUMER);

{? var_pres('items', json_parse(_ans))>0
& obj_len(json_parse(_ans).items)>0
& var_pres('position', json_parse(_ans).items[1])>0
|| _position:=json_parse(_ans).items[1].position
|| FUN.info('Nie udało się odnaleźć adresu dyspozycji.'@); return(~~)
?};

_lat:=
{? var_pres('lat', _position)>0
|| gsub($_position.lat ,',','.')
|| ''
?};
_lng:=
{? var_pres('lng', _position)>0
|| gsub($_position.lng ,',','.')
|| ''
?};

{? _lat='' | _lng='' || FUN.info('Nie udało się odnaleźć adresu dyspozycji.'@); return(~~) ?};

_url:='http://share.here.com/r/mylocation/%1,%2'[_lat,_lng];
cli_open_link(_url)

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:37 aa8f8fc2a40990e946543612afa2269732bdf07abdfedd23cdee0491d1859e255bb14b4db938ece958107f995617e7f7175b237e95f93db2121dc6a334bcb7aa035bbd8db5df2fcf973adba095b2f42fdc4f5d6c9cd6a9a4e237162abc27255fff98723cf17ea8c6cda267fa0d88e0e99ad61d1896087d940a3da4799810e4ad
