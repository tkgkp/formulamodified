:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: object.fml [17.00]
:: Utworzony: 2014/12/17
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły tworzące obiekty
::======================================================================================================================


\__CHK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Delegowana deklaracja i powołanie obiektu __CHK
::----------------------------------------------------------------------------------------------------------------------
exec('__CHK','#object')


\__WND
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Delegowana deklaracja i powołanie obiektu __WND
::----------------------------------------------------------------------------------------------------------------------
exec('__WND','#object')


\POPUP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Deklaracja i powołanie obiektu POPUP
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_popup');
:: Domyślna instancja obiektu
{? var_pres('POPUP')<>type_of(@.CLASS.POPUP)
|| POPUP:=obj_new(@.CLASS.POPUP)
?};
POPUP


\myDIALOG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Deklaracja i powołanie obiektu myDIALOG
::----------------------------------------------------------------------------------------------------------------------
exec('myDIALOG','#object')


\PAR_SKID
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Deklaracja i powołanie obiektu PAR_SKID
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec('par_decl','#parametr');
:: Domyślna instancja obiektu
{? var_pres('PAR_SKID')<>type_of(@.CLASS.PAR_CL)
|| PAR_SKID:=obj_new(@.CLASS.PAR_CL)
?};
PAR_SKID


\RB
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Deklaracja klasy RB i powołanie obiektu RB (do obsługi rachunków bankowych)
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('RB')<=0 | var_pres('RB')<>type_of(@.CLASS.RB)
||
:: Deklaracja klasy
   exec('obj_rb','rachunki');
:: Domyślna instancja obiektu
   RB:=obj_new(@.CLASS.RB)
?};
RB


\myURL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: deklaracja klasy URL wykorzystywanej do pobierania plików ze stron www
::       i powołanie obiektu myURL
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('myURL')<=0 | var_pres('myURL')<>type_of(@.CLASS.URL)
||
:: Deklaracja klasy URL
   exec('url_decl','url');
:: Domyślna instancja obiektu
   myURL:=obj_new(@.CLASS.URL)
?};
myURL


\myDPRINT
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: eklaracja klasy dprint wykorzystywanej do drukowania etykiet przez sterownik
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('myDPRINT')<=0 | var_pres('myDPRINT')<>type_of(@.CLASS.DPRINT)
|| exec('dprint_decl','urzadzenia');
   myDPRINT:=obj_new(@.CLASS.DPRINT)
?};
myDPRINT


\PAR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: deklaracja klasy PARAM i powołanie obiektu PAR
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('PAR')<=0 | var_pres('PAR')<>type_of(@.CLASS.PARAM)
||
:: Deklaracja klasy
   exec('par_decl','parses');
:: Domyślna instancja obiektu
  PAR:=obj_new(@.CLASS.PARAM)
?};
PAR


\__F_ZATR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [17.00]
:: OPIS: Deklaracja klasy F_ZATR i powołanie obiektu __F_ZATR.
::----------------------------------------------------------------------------------------------------------------------
exec('f_zatr_decl','f_zatr');
{? var_pres('__F_ZATR')<>type_of(@.CLASS.F_ZATR)
|| __F_ZATR:=obj_new(@.CLASS.F_ZATR)
?};
~~


\__HARM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Deklaracja klasy HARM i powołanie obiektu __HARM (do obsługi harmonogramowania).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('harm_decl','harmonogramy');
{? var_pres('__HARM')<>type_of(@.CLASS.HARM)
|| __HARM:=obj_new(@.CLASS.HARM)
?};
~~


\__RUB
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Deklaracja klasy RUB i powołanie obiektu __RUB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dekl_rub','rubobj');
{? var_pres('__RUB')<>type_of(@.CLASS.RUB)
|| __RUB:=obj_new(@.CLASS.RUB)
?};
~~


\__FOLP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Deklaracja klasy FOLP i powołanie obiektu __FOLP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dekl_folp','lista_plac');
{? var_pres('__FOLP')<>type_of(@.CLASS.FOLP)
|| __FOLP:=obj_new(@.CLASS.FOLP)
?};
~~


\LISTA
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Deklaracja klasy LS_DRUK i powołanie obiektu LISTA
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dekl_ls_druk','lista_plac');
{? var_pres('LISTA')<>type_of(@.CLASS.LS_DRUK)
|| LISTA:=obj_new(@.CLASS.LS_DRUK)
?};
~~


\ZB_DRUK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Deklaracja klasy ZB_DRUK i powołanie obiektu __ZB_DRUK
::   WE:
::   WY:
::  OLD: \zb_druk/rubobj.fml
::----------------------------------------------------------------------------------------------------------------------
exec('dekl_zb_druk','lista_plac');
{? var_pres('ZB_DRUK')<>type_of(@.CLASS.ZB_DRUK)
|| ZB_DRUK:=obj_new(@.CLASS.ZB_DRUK)
?};
~~


\FUNKCJE
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Deklaracja klasy FUNKCJE i powołanie obiektu FUNKCJE
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dekl_funkcje','lista_plac');
{? var_pres('FUNKCJE')<>type_of(@.CLASS.FUNKCJE)
|| FUNKCJE:=obj_new(@.CLASS.FUNKCJE)
?};
~~


\RAPLS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Deklaracja klasy RAPLS i powołanie obiektu RAPLS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dekl_rapls','lista_plac');
{? var_pres('RAPLS')<>type_of(@.CLASS.RAPLS)
|| RAPLS:=obj_new(@.CLASS.RAPLS)
?};
~~


\__KAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Deklaracja klasy KALEND i powołanie obiektu __KAL.
::   WE: _a [INTEGER] - wyświetlanie komunikatów
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('declare','kalendarz');
{? var_pres('__KAL')<>type_of(@.CLASS.KALEND)
|| __KAL:=obj_new(@.CLASS.KALEND,date()~1,var_pres('_a')=type_of(0) & _a)
?};
~~


\MASK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Deklaracja klasy MASK i powołanie obiektu MASK
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('mask_decl','harmonogramy');
{? var_pres('MASK')<>type_of(@.CLASS.MASK)
|| MASK:=obj_new(@.CLASS.MASK)
?};
~~


\F
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Deklaracja klasy FUNKCJEF i powołanie obiektu F.
::  OLD: \def_objf/fiksobi.fml
::----------------------------------------------------------------------------------------------------------------------
exec('funkcje','fiksobi');
{? var_pres('F')<>type_of(@.CLASS.FUNKCJEF)
|| F:=obj_new(@.CLASS.FUNKCJEF);
   exec('fun_virt','fiksobi')
?};
~~


\DRB
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Deklaracja klasy DRB i powołanie obiektu DRB.
::  OLD: \def_objf/fiksobi.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('DRB',@.CLASS)<0
|| exec('obj_drbt','raty')
?};
{? var_pres('DRB')<>type_of(@.CLASS.DRB)
|| DRB:=obj_new(@.CLASS.DRB)
?};
~~


\Crypto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Deklaracja klasy CR_CLASS i powołanie obiektu Crypto.
::----------------------------------------------------------------------------------------------------------------------
exec('crypto_decl','xml');
{? var_pres('Crypto')<>type_of(@.CLASS.CR_CLASS)
|| Crypto:=obj_new(@.CLASS.CR_CLASS)
?};
~~


\SRD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Deklaracja klasy SRDOBJ i powołanie obiektu SRD.
::----------------------------------------------------------------------------------------------------------------------
exec('srd_decl','srodobj');
{? var_pres('SRD')<>type_of(@.CLASS.SRDOBJ)
|| SRD:=obj_new(@.CLASS.SRDOBJ)
?};
~~


\BUF
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Deklaracja klasy BUFFER i powołanie obiektu BUF.
::----------------------------------------------------------------------------------------------------------------------
exec(,'_buffer');
{? var_pres('BUF')<>type_of(@.CLASS.BUFFER)
|| BUF:=obj_new(@.CLASS.BUFFER,'SRST')
?}


\BUFR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Deklaracja klasy BUFFER i powołanie obiektu BUFR.
::----------------------------------------------------------------------------------------------------------------------
exec(,'_buffer');
{? var_pres('BUFR')<>type_of(@.CLASS.BUFFER)
|| BUFR:=obj_new(@.CLASS.BUFFER,'SRSR')
?}


\BUFSP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Deklaracja klasy BUFFER i powołanie obiektu BUFSP.
::----------------------------------------------------------------------------------------------------------------------
exec(,'_buffer');
{? var_pres('BUFSP')<>type_of(@.CLASS.BUFFER)
|| BUFSP:=obj_new(@.CLASS.BUFFER,'SRSP')
?}


\cubedekl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JM
:: OPIS: deklaracja obiektu szesciennego
::  OLD: \cubedekl/tmp_obj.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('CUBE',@.CLASS)<=0
|| obj_decl('CUBE', obj_fld('TAB',0),  obj_fld('LEN',('ilosc elementow tablicy T';0)))
?};
~~


\__STALE
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2010]
:: OPIS: Deklaracja tablicy (z elementami nazwanymi) zawierającej wybrane wartości stałe parametrów.
::  OLD: \dekl_st_kadry/system.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__STALE')>0
|| return()
?};

__STALE:=obj_new('D_ZAS','D_TRYB','ZM_POD');

:: D_ZAS - Data zmiany przepisów odnośnie zasiłków
_param:=exec('get_par','#parametr',189);
{? +_param=10
|| _param:=date(#(4+_param),#(2+(5-_param)),#(_param+2))
|| FUN.emsg('Błędna wartość parametru %1.'@['189']);
   _param:=date(9999,1,1)
?};
__STALE.D_ZAS:=_param;


:: D_TRYB - data obowiązywania orzeczenia TK  - ponowne wyliczenie podstawy (tylko dla pierwszej nieobecności
_param:=exec('get_par','#parametr',233);
{? +_param=10
|| _param:=date(#(4+_param),#(2+(5-_param)),#(_param+2))
|| FUN.emsg('Błędna wartość parametru %1.'['233']);
   _param:=date(9999,1,1)
?};
__STALE.D_TRYB:=_param;

:: ZM_POD - ponowne wyliczenie podstawy po orzeczeniu TK
_param:=exec('get_par','#parametr',234);
__STALE.ZM_POD:=-_param='t';

1


\CON
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Powolanie obiektu CON klasy CONTROLL
::  OLD: \init_con/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('CONTROL',@.CLASS)<=0
|| exec('object','control')
?};
{? var_pres('CON')<=0
|| CON:=obj_new(@.CLASS.CONTROL)
?};
~~


\XlsSplit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Deklaracja klasy XSSCLASS i powołanie obiektu XlsSplit.
::----------------------------------------------------------------------------------------------------------------------
exec('xls_split_decl','zasoby_biling');
{? var_pres('XlsSplit')<>type_of(@.CLASS.XSSCLASS)
|| XlsSplit:=obj_new(@.CLASS.XSSCLASS)
?};
~~


\PODPIS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
:: OPIS: Deklaracja klasy PODPIS i powołanie obiektu PODPIS
::  OLD: \init/podpis.fml
::----------------------------------------------------------------------------------------------------------------------
exec('decl','podpis');
{? var_pres('PODPIS')<0
|| PODPIS:=obj_new(@.CLASS.PODPIS)
?}


\Xls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Deklaracja klasy XRECLASS i powołanie obiektu Xls.
::----------------------------------------------------------------------------------------------------------------------
exec('Xls','#object')


\GSheet
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Deklaracja klasy GSHCLASS i powołanie obiektu GSheet.
::----------------------------------------------------------------------------------------------------------------------
exec('gsheet_decl','gsheet');
{? var_pres('GSheet')<>type_of(@.CLASS.GSHCLASS)
|| GSheet:=obj_new(@.CLASS.GSHCLASS)
?};
~~


\FZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Deklaracja klasy FZL i powołanie obiektu FZL.
::----------------------------------------------------------------------------------------------------------------------
exec('fzl_declare','umowy_wspolne');
{? var_pres('FZL')<>type_of(@.CLASS.FZL)
|| FZL:=obj_new(@.CLASS.FZL)
?};
~~


\SignInfo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Powołanie obiektu SignInfo.
::  OLD: \SignInfo/jpk_sf.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('SignInfo')<=0
|| SignInfo:=exec('si_decl','jpk_sf')
?};
~~


\SL_api
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Deklaracja i powołanie obiektu SL_api
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec('decl_sl_api','sl_api');
:: Domyślna instancja obiektu
{? var_pres('SL_api')<>type_of(@.CLASS.SLAPICLASS)
|| SL_api:=obj_new(@.CLASS.SLAPICLASS);
   SL_api.add_realm('Internal'
      ,$"exec('login','sl_api')"
      ,$"exec('password','sl_api')"
      ,$"exec('oauth_url','sl_api')"
      ,$"exec('oauth_scope','sl_api')"
   );
   SL_api.add_realm('Portal'
      ,$"exec('login','portal_engine')"
      ,$"exec('password','portal_engine')"
      ,$"exec('oauth_url','portal_engine')"
      ,$"exec('oauth_scope','portal_engine')"
   );
   SL_api.add_realm('Businesslink'
      ,$"exec('login','businesslink3')"
      ,$"exec('password','businesslink3')"
      ,$"exec('oauth_url','businesslink3')"
      ,$"exec('oauth_scope','businesslink3')"
   )
?};
SL_api


\__RQ_BT
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Deklaracja i powołanie obiektu __RQ_BT (portal requests base type) - bazowe typy wniosków
::----------------------------------------------------------------------------------------------------------------------
:: Domyślna instancja obiektu
{? var_pres('__RQ_BT')<0
|| __RQ_BT:=exec('rq_bt_create','portal_wnioski')
?};
~~


\__RQ_GR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Deklaracja i powołanie obiektu __RQ_GR (portal requests group) - grupy wniosków
::----------------------------------------------------------------------------------------------------------------------
:: Domyślna instancja obiektu
{? var_pres('__RQ_GR')<0
|| __RQ_GR:=exec('rq_gr_create','portal_wnioski')
?};
~~


\fun_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.37]
:: OPIS: Deklaruje klasę i tworzy instancję klasy FUN_SET
::   WE:
::   WY: wskazanie na nowy obiekt klasy FUN_SET
::----------------------------------------------------------------------------------------------------------------------
exec('obj_decl','#fun_set');
obj_new(@.CLASS.FUN_SET,params_get())


\__ZW_PRZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: pk [21.37]
:: OPIS: Deklaracja klasy __ZW_PRZ i powołanie obiektu __ZW_PRZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('obj_decl_ZW_PRZ','lista_plac');
{? var_pres('__ZW_PRZ')<>type_of(@.CLASS.__ZW_PRZ)
|| __ZW_PRZ:=obj_new(@.CLASS.__ZW_PRZ)
?};
~~


\__AbcNotify
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Deklaracja i powołanie obiektu __AbcNotify
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
_obj:=exec('abc_notify','#notify');

:: Zainicjowanie tenanta Businesslink - WYŁĄCZONE
::exec('czytaj','#stalesys',,XINFO,
::   'BL_TNNT','BL_RURL',
::   'BL_ABCU','BL_ABCP','BL_ABCE'
::);
::{? XINFO.BL_TNNT<>''
::|| _obj.tenant_add(XINFO.BL_TNNT,exec('abc_env','businesslink3'),exec('abc_url','businesslink3'))
::?};

:: Zainicjowanie tenanta Portal HR
exec('czytaj','#stalesys',,XINFO,
   'POR_CONF','POR_TNNT','POR0TNNT','POR_RURL','POR0RURL',
   'POR_ABCU','POR0ABCU','POR_ABCP','POR0ABCP','POR_ABCE','POR0ABCE'
);
{? XINFO.POR_CONF='J' & XINFO.POR_TNNT<>''
|| _obj.tenant_add(XINFO.POR_TNNT,exec('abc_env','portal_engine'),exec('abc_url','portal_engine'))
|? XINFO.POR_CONF='W' & XINFO.POR0TNNT<>''
|| _obj.tenant_add(XINFO.POR0TNNT,exec('abc_env','portal_engine'),exec('abc_url','portal_engine'))
?};
~~


\__Worker
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Deklaracja i powołanie obiektu __Worker
::----------------------------------------------------------------------------------------------------------------------
_obj:=exec('worker_obj','#b_worker');

:: Lista zadań wykonywanych w kolejce specjalnej
_obj.add_work('BLMT_GETINFO','exec(\'documents_getinfo\',\'businesslink3\')',0,0,1);
_obj.add_work('BLMT_UPO_GET','exec(\'upo_service_get1\',\'businesslink3\')',0,0,1);
{? exec('upgrade2325_blbc1','zbl')
|| _obj.add_work('BLMT_CHECK','exec(\'blc_service_get\',\'businesslink3\')',0,0,1)
?};
~~


\__ZE
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [23.25]
:: OPIS: Definiuje klasę ZE_OBJ i powołuje obiekt __ZE usprawniający dostęp do zestawów elementów.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: definicja klasy
exec('define','ze_api');
:: domyślna instancja obiektu
{? var_pres('__ZE')<>type_of(@.CLASS.ZE_OBJ)
|| __ZE:=obj_new(@.CLASS.ZE_OBJ)
?};
__ZE


:Sign Version 2.0 jowisz:1045 2023/09/27 10:38:09 460b6073d5cab1fc5b1e78c4532a5fb9f8196368802cb6749b883d35bb8e53b11b4c320a923cb738ee77e27f5a072d70d2f35f788e356c1097696155f1cbe8f8b0d116c4acced936a90d3e9337033dac3372683a682c59822a270f2821436e14b0de625b9e294b54cc34ea0d8a0d1e7b187233d55e077f630990ad04303101bc
