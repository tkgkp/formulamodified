:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrze�one
::======================================================================================================================
:: Nazwa pliku: paperless_grp.fml
:: Utworzony: 12.08.2021
:: Autor: MicKoc [21.37]
::======================================================================================================================
:: Zawartość: Biblioteka funkcji obsługi !PEP_GRP_DOKU - Paperless HR
::======================================================================================================================


\dokumenty_grupowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Formuły czynności PEP_GRP_DOKU
::       Dokumenty grupowe - główna formuła czynności.
::   WE: [_a] [TABELA] - Tabela z listą pracowników zgodnie z \wybierz/pracownik.fml
::       [_b] [STRING/REFERENCE] - Nazwa lub wskazanie na zestaw (typ załącznika)
::       [_c] [TABELA] - Tabela z kontekstem, powiązanie P.uidref() - H.uidref()
::       [_d] [STRING] - Czy zezwalać na pliki MS Word? (T/N), domyślnie N
::----------------------------------------------------------------------------------------------------------------------
_jestPrac:=var_pres('_a')>100; 'Czy została przekazana lista pracowników';
_jestZestaw:=var_pres('_b')=type_of(null()) | (var_pres('_b')=type_of('') & +|_b); 'Czy został przekazany zestaw';
_jestKontekst:=var_pres('_c')>100;
_czyMSWord:=var_pres('_d')=type_of('') & _d='T';
:: Sprawdzenie formy zatrudnienia
{? ~__F_ZATR.upr('P')
|| FUN.info(exec('info','paperless_grp','brakP','P'));
   return()
?};
{? ~__F_ZATR.upr('Z')
|| FUN.info(exec('info','paperless_grp','brakP','Z'));
   return()
?};

:: Uprawnienia
:: PKD_EZK_PPZA: Przegl. przebiegu zatrudnienia
:: PKD_EZK_RPZA: Rej. przebiegu zatrudnienia
:: PKD_EZK_PPRA: Przegl. pracowników
:: PKD_DOS_PPZA: Przegl. załączników osoby
:: PKD_EZK_OPZA: Przegl. załączników współprac.
:: PPL_ZLC_PUZC: Przegl. umów cywilnoprawnych
_txt:=exec('uprawnieniawrap','pkd','Współpracownikach',
   'PKD_EZK_PPZA','PKD_EZK_RPZA','PKD_EZK_PPRA','PKD_DOS_PPZA','PKD_EZK_OPZA','PPL_ZLC_PUZC');
{? +|_txt
|| FUN.emsg(exec('info','paperless_grp','upr',_txt));
   return()
?};
Cntx.psh(P,OSOBA,SLO_NAZ,BP_ZEST,BP_DEF,SLO_TYP);
Cntx.clr(P,OSOBA,SLO_NAZ,BP_ZEST,BP_DEF,SLO_TYP);
_CntxPop:="Cntx.pop(P,OSOBA,SLO_NAZ,BP_ZEST,BP_DEF,SLO_TYP)";

:: Wybór zestawu
_zestaw:=exec('wybor_zestawu','paperless','Dokumenty dla grupy współpracowników',{? _jestZestaw || _b || ~~ ?});
{? _zestaw.RET=0
|| FUN.info(exec('info','paperless_grp','rezygnacja'));
   _CntxPop();
   return()
|? _zestaw.RET<0
|| FUN.emsg(exec('info','paperless_grp','err',_zestaw.RET,_zestaw.ERR));
   _CntxPop();
   return()
?};

:: Wybór wielu pracowników
_args:=exec('wybierz_args','pracownik');
_args.DOMAIN:='PKD';
_args.F_ZATR:={? +P_FILTER.F_ZATR().KOD || P_FILTER.F_ZATR().KOD || '*T' ?};
_args.VIEW:='';
_args.UD_SCH:=exec('domyslny','schemat','PODZORG');
_args.UD_SKL:=__PARSES.getVal('JednostkaOrganizacyjna').REF;
_args.SQL_WHERE:='P.PORTAL=\'T\'';
_ret:={? _jestPrac || _a || exec('wybierz','pracownik',_args) ?};
{? _ret.P.size()=0
|| FUN.info(exec('info','paperless_grp','rezygnacja'));
   _CntxPop();
   return()
?};

:: Ustalenie listy załączników
BP_DEF.index('UNIQ');
BP_DEF.prefix(_zestaw.BP_ZEST);
_obj:=obj_new(BP_DEF.size());
_jestGrupowy:=0;
{? BP_DEF.first()
|| _licz:=0;
   {!
   |? _obj[_licz+=1]:=exec('obj_ntab_set','#array',,'SLO_NAZ','','PODPIS','','TMP','','W','');
      {? BP_DEF.IND<>'T'
      || _jestGrupowy+=1;
         _obj[_licz].SLO_NAZ:=BP_DEF.SLO_NAZ().NAZWA
      ?};
      _obj[_licz].PODPIS:=BP_DEF.PODPIS;
      _obj[_licz].TMP:=BP_DEF.SLO_NAZ().NAZWA;
      _obj[_licz].W:=BP_DEF.W;
      BP_DEF.next()
   !}
?};
:: =====================================================================================================================
:: Główna część
:: =====================================================================================================================

:: Ustalenie parametrów, definicja tabel, okien
params_set(
   'args',_args,
   'obj',_obj,
   'okno',exec('obj_ntab_set','#array',,
      'cfg',null(),
      'BUF',exec('tab','paperless_grp'),
      'WybPrac',_ret)
);
_par:=params_get(1);
_par.okno.cfg:=exec('obj_ntab_set','#array',,
   'ctr_id','',
   'grp','',
   'tryb',0,
   'nav',null(),
   'lastref',null(),
   'ctr_win','',
   'czyUid',0,
   'MSWord',_czyMSWord
);
exec('wnd','paperless_grp','WspolneZalaczniki');

:: Dołączenie załączników grupowych, jeśli takie są. Parametr czyUid=0
_BUF:=_par.okno.BUF;
{? _jestGrupowy & _ret.P.first()
|| FUN.prg_start(_ret.P.size(),'Analiza dokumentów wspólnych'@);
   {!
   |? exec('dodaj','paperless_grp',_ret.P,_zestaw);
      FUN.prg_next();
      _ret.P.next()
   !};
   FUN.prg_stop()
?};
_BUF.win_sel(_par.okno.cfg.grp);
_BUF.clear();

:: Edycja załączników wspólnych
_BUF.fld_attr(,2);
{? _jestGrupowy & _BUF.size()
|| {? _BUF.select()
   || _tryb:=_par.okno.cfg.tryb
   || _tryb:=0
   ?}
|| _tryb:=1
?};
{? _tryb<>1
|| FUN.info(exec('info','paperless_grp','rezygnacja'));
   _CntxPop();
   return()
?};

:: Wypełnienie parametru obj - żeby zadziałało pobieranie pozostałych załączników
{! _licz:=1..obj_len(_par.obj) |!
   _par.obj[_licz].SLO_NAZ==_par.obj[_licz].TMP
!};
_par.okno.cfg.czyUid:=1;
{? _ret.P.first()
|| FUN.prg_start(_ret.P.size(),'Analiza dokumentów współpracowników'@);
   {!
   |? {? _jestKontekst
      || {? _c.find_key(_ret.P.UID,)
         || exec('dodaj','paperless_grp',_ret.P,_zestaw,_c.TAB)
         ?}
      || exec('dodaj','paperless_grp',_ret.P,_zestaw,)
      ?};
      FUN.prg_next();
      _ret.P.next()
   !};
   FUN.prg_stop()
?};

:: Nadpisanie załączników indywidualnych załącznikami wspólnymi
_BUF.prefix('',);
{? _BUF.first()
|| {!
   |? _BUF.cntx_psh();
      _BUF.prefix();
      _slo_naz:=_BUF.SLO_NAZ;
      _opis:=_BUF.OPIS;
      _blob:=_BUF.BLOB;
      {? _BUF.find_tab('first','SLO_NAZ',,'=',_slo_naz,'OPIS',,'=',_opis,'UIDREF',,'<>','')
      || {! |?
            _BUF.BLOB:=_blob;
            {? _blob
            || _BUF.NAME:=_BUF.bl_info('BLOB','NAME');
               _BUF.SIZE:=_BUF.bl_info('BLOB','SIZE');
               _BUF.CRT_DATE:=_BUF.bl_info('BLOB','CREAT_DATE');
               _BUF.CRT_TIME:=_BUF.bl_info('BLOB','CREAT_TIME');
               _BUF.MOD_DATE:=_BUF.bl_info('BLOB','MODIFY_DATE');
               _BUF.MOD_TIME:=_BUF.bl_info('BLOB','MODIFY_TIME')
            ?};
            _BUF.put();
            _BUF.find_tab('next','SLO_NAZ',,'=',_slo_naz,'OPIS',,'=',_opis,'UIDREF',,'<>','')
         !}
      ?};
      _BUF.cntx_pop();
      _BUF.del()
   !}
?};

:: Edycja załączników indywidualnych
_par.okno.cfg.nav:=obj_new('main','side');
_wnd:=exec('wnd','paperless_grp','OknoPracownikow');
P.win_sel(_wnd);
P.f_set(
   'OSOBA(NAZWISKO),OSOBA(PIERWSZE),OSOBA(PESEL)',,
   'P.REFERENCE in (select :_a.SQL from :_a)',
   _par.okno.WybPrac.P
);
P.select();
{? _par.okno.cfg.tryb<1
|| FUN.info(exec('info','paperless_grp','rezygnacja'));
   _CntxPop();
   return()
?};

:: =====================================================================================================================
:: Podpisanie wszystkich załączników
:: =====================================================================================================================
{?  exec('czy_podpis','paperless',_zestaw.BP_ZEST) & FUN.ask('Czy podpisać wymagane załączniki?'@)
|| _BUF.clear();
   _TMP:=exec('mk_buf','paperless_grp',_BUF);
   _TMP:=exec('podpisz','paperless',&_TMP,_zestaw.BP_ZEST);
   {? _TMP.first() & _BUF.first()
   || {! |?
         {? _TMP.find_tab('first','UID',,'=',_BUF.uidref())
         || _BUF.BLOB:=_TMP.BLOB;
            _BUF.put()
         ?};
         _BUF.next()
      !}
   ?}
?};
:: =====================================================================================================================
:: Generowanie procesów
:: =====================================================================================================================

:: Uruchomienie procesów
_arg:=exec('mp_run_a','#b__box');
{? BP_ZEST.seek(_zestaw.BP_ZEST)
|| _miejsce:=BP_ZEST.SLO_NAZ().NAZWA;
   _bp_zest:=BP_ZEST.ref()
|| _miejsce:='';
   _bp_zest:=null()
?};
_typ:=exec('FindInSet','#table','SLO_TYP','SYMBOL','ZAL',,,1);
_slo_naz:=exec('FindInSet','#table',
   'SLO_NAZ',
   'NAZWA',
   _miejsce,
   _typ
);
_uid:={? SLO_NAZ.seek(_slo_naz) || SLO_NAZ.uidref() || '' ?};
{? +|_miejsce & _slo_naz & +|_uid=48
|| {? _ret.P.first()
   || FUN.prg_start(_ret.P.size(),'Uruchamianie procesów');
      _arg.ACT_UID:='PEP_PRA_PDOK';
      _arg.UIDREF:=obj_new('P','SLO_NAZ_REF');
      _arg.UIDREF.SLO_NAZ_REF:=_uid;
      _arg.AKCJA:='GRP';
      _arg.PROC_START:='T';
      _arg.CONTEXT:=obj_new('UIDREF');
      _arg.PORTS_IN:=exec('portsIn','#b__box',_arg.ACT_UID);
      exec('portsInSet','#b__box',_arg.PORTS_IN,_arg.ACT_UID,'SLO_NAZ',_miejsce);
      exec('portsInSet','#b__box',_arg.PORTS_IN,_arg.ACT_UID,'TITLE',_miejsce);
      exec('portsInSet','#b__box',_arg.PORTS_IN,_arg.ACT_UID,'SLO_NAZ_REF',_slo_naz);
      exec('portsInSet','#b__box',_arg.PORTS_IN,_arg.ACT_UID,'BP_ZEST',_bp_zest);
      {!
      |? _jestZalacznik:=0;
         {? P.seek(_ret.P.UID,)
         || _arg.UIDREF.P:=P.uidref();
            exec('portsInSet','#b__box',_arg.PORTS_IN,_arg.ACT_UID,'P',P.ref());
            _hash:=hash($SYSLOG.tm_stamp(),'md5');
            TMPBLOB.index('LOGIN');
            TMPBLOB.prefix(_hash);
            _tmpblob:=null();
            _BUF.prefix(_ret.P.UID);
            {? _BUF.first()
            || _arg.CONTEXT.UIDREF:=
                  {? var_pres('UID_REC',_BUF)=27 & +|_BUF.UID_REC=48
                  || _BUF.UID_REC
                  || ~~
                  ?};
               {!
               |? TMPBLOB.blank();
                  TMPBLOB.LOGIN:=_hash;
                  TMPBLOB.PDF:={? SYSBLOB.seek(_BUF.BLOB,) || SYSBLOB.ref() || null() ?};
                  TMPBLOB.OPIS:=_BUF.SLO_NAZ;
                  {? TMPBLOB.add() & ~_tmpblob
                  || _tmpblob:=TMPBLOB.ref()
                  ?};
                  _jestZalacznik+=1;
                  _BUF.next()
               !}
            ?};
            exec('portsInSet','#b__box',_arg.PORTS_IN,_arg.ACT_UID,'TMPBLOB',_tmpblob);
            {? _jestZalacznik
            || exec('mp_run','#b__box',_arg)
            ?}
         ?};
         FUN.prg_next();
         _ret.P.next()
      !};
      {? TMPBLOB.first() || {! |? TMPBLOB.del() !} ?};
      FUN.prg_stop()
   ?}
|| FUN.emsg(exec('info','paperless_grp','bladProces'))
?};
_CntxPop();
~~


\run_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [21.37]
:: OPIS: Uruchomienie procesów
::   WE: _a [REFERENCE] - wskazanie na zestaw [BP_ZEST.ref()]
::       _b [ARRAY]     - tablica z pracownikami zgodna z wynikiem exec('wybierz','pracownik')
::       _c [DICT]      - obiekt z załącznikami zgodny z wynikiem exec('tab','paperless_grp')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_bp_zest:={? var_pres('_a')=type_of(null()) || _a || return(~~) ?};
   _prac:={? var_pres('_b')=117             || _b || return(~~) ?};
    _BUF:={? var_pres('_c')=118             || _c || return(~~) ?};

Cntx.psh(BP_ZEST,SLO_NAZ);
BP_ZEST.prefix();
_miejsce:={? BP_ZEST.seek(_bp_zest) || BP_ZEST.SLO_NAZ().NAZWA || '' ?};
_title:=_miejsce;
_typ:=exec('FindInSet','#table','SLO_TYP','SYMBOL','ZAL',,,1);
_slo_naz:=exec('FindInSet','#table','SLO_NAZ','NAZWA',_miejsce,_typ);
SLO_NAZ.prefix();
_uid:={? SLO_NAZ.seek(_slo_naz) || SLO_NAZ.uidref() || '' ?};
{? +|_uid=48
|| {? _prac.P.first()
   || FUN.prg_start(_prac.P.size(),'Uruchamianie procesów');
      _arg:=exec('mp_run_a','#b__box');
      _arg.ACT_UID:='PEP_PRA_PDOK';
      _arg.UIDREF:=obj_new('P','SLO_NAZ_REF','HASH');
      _arg.UIDREF.SLO_NAZ_REF:=_uid;
      _arg.UIDREF.HASH:='_'+hash($SYSLOG.tm_stamp(),'md5');
      _arg.AKCJA:='ZAŚW';
      _arg.PROC_START:='T';
      _arg.CONTEXT:=obj_new('UIDREF');
      _arg.PORTS_IN:=exec('portsIn','#b__box',_arg.ACT_UID);
      exec('portsInSet','#b__box',_arg.PORTS_IN,_arg.ACT_UID,'SLO_NAZ',_miejsce);
      exec('portsInSet','#b__box',_arg.PORTS_IN,_arg.ACT_UID,'TITLE',_title);
      exec('portsInSet','#b__box',_arg.PORTS_IN,_arg.ACT_UID,'SLO_NAZ_REF',_slo_naz);
      exec('portsInSet','#b__box',_arg.PORTS_IN,_arg.ACT_UID,'BP_ZEST',_bp_zest);
      {!
      |? _jestZalacznik:=0;
         {? P.seek(_prac.P.UID,)
         || _arg.UIDREF.P:=P.uidref();
            exec('portsInSet','#b__box',_arg.PORTS_IN,_arg.ACT_UID,'P',P.ref());
            _hash:=hash($SYSLOG.tm_stamp(),'md5');
            TMPBLOB.index('LOGIN');
            TMPBLOB.prefix(_hash);
            _tmpblob:=null();
            _BUF.prefix(_prac.P.UID);
            {? _BUF.first()
            || {? _BUF.size()=1
               || _title:=_BUF.SLO_NAZ;
                  exec('portsInSet','#b__box',_arg.PORTS_IN,_arg.ACT_UID,'TITLE',_title)
               ?};
               _arg.CONTEXT.UIDREF:=
                  {? var_pres('UID_REC',_BUF)=27 & +|_BUF.UID_REC=48
                  || _BUF.UID_REC
                  || ~~
                  ?};
               {!
               |? TMPBLOB.blank();
                  TMPBLOB.LOGIN:=_hash;
                  TMPBLOB.PDF:={? SYSBLOB.seek(_BUF.BLOB,) || SYSBLOB.ref() || null() ?};
                  TMPBLOB.OPIS:=_BUF.SLO_NAZ;
                  {? TMPBLOB.add() & ~_tmpblob
                  || _tmpblob:=TMPBLOB.ref()
                  ?};
                  _jestZalacznik+=1;
                  _BUF.next()
               !}
            ?};
            exec('portsInSet','#b__box',_arg.PORTS_IN,_arg.ACT_UID,'TMPBLOB',_tmpblob);
            {? _jestZalacznik
            || exec('mp_run','#b__box',_arg)
            ?}
         ?};
         FUN.prg_next();
         _prac.P.next()
      !};
      {? TMPBLOB.first() || {! |? TMPBLOB.del() !} ?};
      FUN.prg_stop()
   ?}
|| FUN.emsg(exec('info','paperless_grp','bladProces'))
?};
Cntx.pop(BP_ZEST,SLO_NAZ);
~~


\info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Formuły czynności PEP_GRP_DOKU
::       Zestaw informacji
::   WE: _a [STRING] - identyfikator
::       _ - pozostałe parametry
::   WY: Informacje do wyświetlenia lub napis '<brak>'
::----------------------------------------------------------------------------------------------------------------------
_ret:='<brak>';
{? ~(var_pres('_a')=type_of('') & +|_a) || return(_ret) ?};
{? _a='brakP'
|| _ret:='Brak wymaganego dostępu do formy współpracy "%1".'@ [_b]
|? _a='upr'
|| _ret:='Brak wymaganych uprawnień do przeglądania informacji o:%1'@[_b]
|? _a='rezygnacja'
|| _ret:='Zrezygnowano z tworzenia dokumentów dla grupy współpracowników.'@
|? _a='err'
|| {? var_pres('_b')=type_of(0) & _b=-1
   || _ret:='Brak definicji zestawu dokumentów dla "%1".'@[_c]
   |? var_pres('_b')=type_of(0) & _b=-2
   || _ret:='Zestaw dokumentów "%1" używa nieaktualnego procesu.'@[_c]
   ?}
|? _a='brakZal'
|| _ret:='Brak wymaganych załączników.'@
|? _a='bladProces'
|| _ret:='Błąd uruchamiania procesów.'@
?};
_ret


\control_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Formuły czynności PEP_GRP_DOKU
::       Formuła wykonywana po pojawieniu się kontrolki.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
_cfg:=_par.okno.cfg;

ctr_set(,_cfg.ctr_id,'setColumns','SLO_NAZ,OPIS,W,NAME,SIZE,#TYPE,CRT_DATE,CRT_TIME,MOD_DATE,MOD_TIME');
ctr_set(,_cfg.ctr_id,'setColumnWidth','SLO_NAZ',30);
ctr_set(,_cfg.ctr_id,'setColumnWidth','OPIS',30);
ctr_set(,_cfg.ctr_id,'setColumnWidth','W',10);
ctr_set(,_cfg.ctr_id,'setColumnWidth','NAME',40);
ctr_set(,_cfg.ctr_id,'setColumnWidth','SIZE',10);
ctr_set(,_cfg.ctr_id,'setColumnWidth','#TYPE',20);
ctr_set(,_cfg.ctr_id,'setColumnWidth','CRT_DATE',12);
ctr_set(,_cfg.ctr_id,'setColumnWidth','CRT_TIME',12);
ctr_set(,_cfg.ctr_id,'setColumnWidth','MOD_DATE',12);
ctr_set(,_cfg.ctr_id,'setColumnWidth','MOD_TIME',12);

params_exec('control_display','paperless_grp');

ctr_set(,_cfg.ctr_id,'removeAllActions');
ctr_set(,_cfg.ctr_id,'addToolbarAction','refresh','','xwin16.png:48','Odświeżenie widoku'@,0,0);
ctr_set(,_cfg.ctr_id,'addToolbarSeparator');
ctr_set(,_cfg.ctr_id,'addAction','put','&Popraw'@,'','Poprawianie załącznika'@,1,0);
ctr_set(,_cfg.ctr_id,'addAction','del','&Usuń'@,'','Usunięcie załącznika'@,2,0);
ctr_set(,_cfg.ctr_id,'addAction','open','&Otwórz'@,'','Otworzenie załącznika'@,1,1);
ctr_set(,_cfg.ctr_id,'addAction','save','&Zapisz'@,'','Zapisanie załącznika'@,2,0);
ctr_set(,_cfg.ctr_id,'setDndEnabled' ,1);
ctr_call(,_cfg.ctr_id,'setView','table');
ctr_call(,_cfg.ctr_id,'initToolbar');

~~


\control_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Formuły czynności PEP_GRP_DOKU
::       Formuła wykonywana w momencie odświeżania okna z kontrolką.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
_cfg:=_par.okno.cfg;
{? _cfg.czyUid || _par.okno.BUF.prefix(P.uidref()) ?};
ctr_tab('files_data',,_cfg.ctr_id,,exec('tab','paperless_grp',_par.okno.BUF));
ctr_call(,_cfg.ctr_id,'updateItems','files_data');
~~


\control_callback
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Formuły czynności PEP_GRP_DOKU
::       Formuła obsługuje akcje wywołane z kontrolki.
::   WE:
::   WY:
:: ~OST: INBLPUT, INFILECHOOSER, INFEXISTS, INBLGET, INTMKTMPDIR, INBLVIEW
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
_cfg:=_par.okno.cfg;
_BUF:=_par.okno.BUF;

_action:=ctr_info('action_id');

:: Obsługa akcji, które nie są związane z plikami.
{? _action='refresh'
|| exec('control_init','paperless_grp');
   win_disp();
   return()
?};

:: Obsługa akcji, które moga być wykonywane na pliku/plikach kontrolki.
_TIN:=ctr_call(,_cfg.ctr_id,'getCurrActionItems');
{? ~_TIN.first()
|| return()
?};

:: Akcje dla wiele plików, usuwanie
{? _action='del'
|| {? _TIN.size()>1
   || _txt:='Czy usunąć zaznaczone załączniki?'@
   || _txt:='Czy usunąć zaznaczony załącznik?'@
   ?};
   {? FUN.ask(_txt)
   || _refresh:=0;
      {!
      |? {? _BUF.seek(_TIN.STR_DATA)
         || _refresh+=_BUF.del(,1)
         ?};
         _TIN.next()
      !};
      {? _refresh
      || {? ~_BUF.first()
         || exec('control_init','paperless_grp')
         ?};
         win_disp()
      ?}
   ?};
   return()

:: Akcje dla wiele plików, drag and drop (nie działa, czemu?)
|? _action='dnd'
|| _DND:=ctr_call(,_cfg.ctr_id,'getDroppedFiles');
   {? _DND.first() & _BUF.seek(_TIN.STR_DATA)
   || _sep:=exec('sep','#file');
      _fp:=_DND.DIR+_sep+_DND.FILENAME;
      _ext:=-exec('split_file_name','#file',_DND.FILENAME).ext;
      {? _ext='pdf'
      || echo(_fp+' ...');
         _BUF.put();
         _BUF.bl_put('BLOB','@'+_fp)
      |? _cfg.MSWord & ',doc,docx,'*(','+_ext+',')
      || _BUF.put();
         _blob:=exec('konwersja','paperless',_fp);
         _BUF.BLOB:=_blob;
         _BUF.put()
      ?};
      echo();
      win_disp()
   ?};
   return()

:: Akcje dla wiele plików, zapisz
|? _action='save'
|| {? _TIN.size()=1 & _BUF.seek(_TIN.STR_DATA) & ~_BUF.BLOB
   || FUN.info('Brak pliku załącznika.'@); return()
   ?};
   _info:=_zapis:=0;
   {? exec('interm','#system')
   || {? _TIN.size()>1
      || _esc:=_ovr:=0;
         _tmp_dir:=fmk_tmp_dir(0);
         {? type_of(_tmp_dir)<>type_of(~~)
         || _pth:=_tmp_dir.get_path();
            {!
            |? {? _BUF.seek(_TIN.STR_DATA) & _BUF.BLOB
               || errno();
                 _name:=_BUF.bl_info('BLOB','NAME');
                 _file:=_pth+exec('sep','#file',2)+_name;
                 _BUF.bl_get('BLOB',_file,0)
               ?};
            _TIN.next()
            !}
         ?};
         _tmp_dir2:=fmk_tmp_dir(0);
         {? type_of(_tmp_dir2)<>type_of(~~)
         || _pth2:=_tmp_dir2.get_path();
            _name:='Załączniki'@+'_'+$SYSLOG.tm_stamp()+'.zip';
            _arch:=_pth2+exec('sep','#file',2)+_name;
            _can_continue:=fpack_add(_arch,_pth);
            {? _can_continue>0
            || dlg_save(_arch,0,_name)
            ?}
          ?}
      || exec('bl_save','#blob',_BUF,'BLOB')
      ?}
   || _dir:=exec('filechooser','#file','Wybór katalogu'@,0,,,,'DIRECTORIES_ONLY');
      {? _dir<>''
      || _sep:=exec('sep','#file');
         _ovr:=0;
         _esc:=0;
         {!
         |? {? _BUF.seek(_TIN.STR_DATA) & _BUF.BLOB
            || errno();
               _fn:=_BUF.bl_info('BLOB','NAME');
               _again:=1;
               {!
               |? _again
               |! _again:=0;
                  _fp:=_dir+_sep+_fn;
                  {? _ovr<>2
                  || {? fexists('@'+_fp,0)
                     || _txt:='Plik %1 już istnieje. Nadpisać?'@ [_fp];
                        {? _TIN.size()>1
                        || _ret:=FUN.choice(_txt,,'Nadpisz'@,'Nadpisz &wszystkie'@,'Zmień nazwę'@,'Pomiń'@,'Anuluj'@)
                        || _ret:=FUN.choice(_txt,,'Nadpisz'@,'Zmień nazwę'@,,,'Anuluj'@);
                           {? _ret=2
                           || _ret:=3
                           ?}
                        ?};
                        {? _ret=0
::                      Anuluj
                        || _esc:=1
                        |? _ret=1 | _ret=2
::                      Nadpisz lub Nadpisz wszystkie
                        || _ovr:=_ret
                        |? _ret=3
::                      Zmień nazwę
                        || _fnn:=exec('edit_string','#edit',_fn,'Nazwa pliku'@,
                              "__CHK.record2(cur_tab(1,1),'VAL','Nazwa pliku'@)"
                           );
                           {? type_of(_fnn)=type_of('')
                           || _fn:=_fnn
                           ?};
                           _again:=1
                        |? _ret=4
::                      Pomiń
                        || _ovr:=0
                        ?}
                     || _ovr:=1
                     ?}
                  ?}
               !};
               {? _ovr
               || _nm:=no_msg(1);
                  {? ~_BUF.bl_get('BLOB','@'+_fp,0) | errno()
                  || FUN.info('Zapisanie pliku %1 na dysku użytkownika nie powiodło się.'@ [_fp])
                  || _zapis+=1
                  ?};
                  no_msg(_nm);
                  {? _ovr<>2
                  || _ovr:=0
                  ?}
               ?}
            ?};
            _info+=_BUF.BLOB=null();
            ~_esc & _TIN.next()
         !};
         {? _info
         || FUN.info('Brak plików załączników, nie zapisano: %1 z %2'@[$_info,$(_zapis+_info)])
         ?}
      ?};
      win_disp()
   ?};
   return()
?};

:: Akcje dla jednego pliku
{? ~_BUF.seek(_TIN.STR_DATA)
|| FUN.info('Zaznaczony załącznik został usunięty przez innego użytkownika.'@);
   win_disp()

:: Akcje dla jednego pliku, popraw
|? _action='put'
|| {? exec('interm','#system')
   || _refresh:=0;
      _tmp_dir:=fmk_tmp_dir(0);
      {? type_of(_tmp_dir)<>type_of(~~)
      || {? _BUF.seek(_TIN.STR_DATA)
         || _pth:=_tmp_dir.get_path();
            {? _cfg.MSWord
            || _file:=dlg_upload(_pth,,'.pdf,.doc,.docx',0)
            || _file:=dlg_upload(_pth,,'.pdf',0)
            ?};
            {? _file<>''
            || _BUF.put();
               _ret:=_pth+exec('sep','#file',2)+_file;
               _ext:=-exec('split_file_name','#file',_ret).ext;
               {? _ext<>'pdf'
               || _l_tmp_dir:=fmk_tmp_dir(1);
                  {? type_of(_tmp_dir)<>type_of(~~)
                  || _pth_l:=_l_tmp_dir.get_path();
                     _ret_l:=_pth_l+exec('sep','#file',2)+_file;
                     {? fcopy(_ret,_ret_l,0,0,1)
                     || _blob:=exec('konwersja','paperless',_ret);
                        _BUF.BLOB:=_blob;
                        _BUF.put()
                     ?}
                  ?}
               || _BUF.bl_put('BLOB',_ret)
               ?};
               _refresh:=1
            ?}
         ?};
         {? _refresh
         || win_disp()
         ?}
      ?}
   || {? _cfg.MSWord
      || _ret:=exec('filechooser','#file',,0,'pdf;doc;docx','*.pdf;*.doc;*.docx',0,,0)
      || _ret:=exec('filechooser','#file',,0,'pdf','*.pdf',0,,0)
      ?};
      _refresh:=0;
      {? _BUF.seek(_TIN.STR_DATA)
      || {? type_of(_ret)=type_of('') & _ret<>'' & fexists('@'+_ret,0)
         || _ext:=-exec('split_file_name','#file',_ret).ext;
            _BUF.put();
            {? _ext<>'pdf'
            || _blob:=exec('konwersja','paperless',_ret);
               _BUF.BLOB:=_blob;
               _BUF.put()
            || _BUF.bl_put('BLOB','@'+_ret)
            ?};
            _refresh:=1
         |? type_of(_ret)=type_of(_BUF) & _ret.first()
         || _sep:=exec('sep','#file');
            {!
            |? _fp:=_ret.DIR+_sep+_ret.FILENAME;
               echo(_fp+' ...');
               _BUF.put();
               _BUF.bl_put('BLOB','@'+_fp);
               _ret.next();0
            !};
            echo();
            _refresh:=1
         ?}
      ?}
   ?};
   {? _refresh
   || win_disp()
   ?};
   return()

:: Akcje dla jednego pliku, otwórz
|? _action='open'
|| {? _BUF.BLOB
   || _BUF.bl_view('BLOB',1)
   || FUN.info('Brak pliku załącznika.'@)
   ?}
?};
~~


\wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Formuły czynności PEP_GRP_DOKU
::       Formuła buduje interfejs czynności.
::       Uwaga: poprawność argumentów nie jest weryfikowana.
::   WE: _a [STRING] - Identyfikator
::   WY: Akronim utworzonego okna grupowego.
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
{? _a='OknoPracownikow'
|| _cfg:=_par.okno.cfg;
: Najpierw zwykłe okno do prezentacji współpracowników.
   _acr:='GRPPEPD';
: użyj istniejące okienko
   {? (_ws:=__WND.SEL.get(P,_acr))=''
   || _ws:=P.mk_sel(,'P',,'#pepgrpdoku',,,,,'U','U');
      P.win_fld(_ws,,'T',,,9,,,,,MS.comment(P,'T'));
      P.win_fld(_ws,,'IP',,,-5,,,,,MS.comment(P,'IP'));
      P.win_fld(_ws,,'OSOBA','NAZWISKO',,20,,,,,MS.comment(OSOBA,'NAZWISKO'));
      P.win_fld(_ws,,'OSOBA','PIERWSZE',,15,,,,,MS.comment(OSOBA,'PIERWSZE'));
      P.win_fld(_ws,,'OSOBA','PESEL',,11,,,,,MS.comment(OSOBA,'PESEL'));
      P.win_fld(_ws,,'F_ZATR','KOD',,-2,,,MS.name(P,'F_ZATR'),,MS.comment(F_ZATR,'KOD'));
      P.win_fld(_ws,,'WYDZIAL','SYMBOL',,-16,,,MS.name(P,'WYDZIAL'),,'Symbol jednostki organizacyjnej'@);
      P.win_fld(_ws,,'ST','ST',,18,,,MS.name(P,'ST'),,MS.comment(STN,'ST'));
      P.win_fld(_ws,,'ZA',,,-5,,,MS.name(P,'ZA'),,MS.comment(P,'ZA'),2,,"'T'","'N'");

      P.win_act(_ws,,'Menu','Szukaj'@@,,,,,,,,,'S');
      P.win_act(_ws,,'Formuła','Szukaj dokładnie'@@,'#S','Szukanie zapisu zgodnego ze zredagowanym wzorcem'@,
         "exec('p_ustaw_ezk','szukaj')","exec('p_d','szukaj')",,,,,'S');
      P.win_act(_ws,,'Formuła','Szukaj &kontekstowo'@@,'#S','Szukanie zapisu zgodnego ze zredagowanym wzorcem'@,
         "exec('p_ustaw_ezk','szukaj')","exec('p_k','szukaj')",,,,,'K');
      P.win_act(_ws,,'#F3',,,,"exec('p_ustaw_ezk','szukaj')","exec('p_f3_wnd','szukaj')");
      P.win_act(_ws,,'Formuła','Legenda'@@,,'Wyświetlenie legendy'@,"exec('legenda','color','P#01')",,,,,,
         'L',,'target=window'
      );
      P.win_act(_ws,,'Kolejność');

      _form:="
         params_set(_par:=params_get());
         _cfg:=_par.okno.cfg;
         _ret:=0;
         {? _cfg.czyUid
         || _par.okno.BUF.prefix(P.uidref());
            {? _par.okno.BUF.first()
            || {!
               |? _ret:=_par.okno.BUF.W='T' & ~_par.okno.BUF.BLOB;
                  ~_ret & _par.okno.BUF.next()
               !}
            ?}
         ?};
         {? _ret || Color.fnd_kol('P#01') ?}
      ";
      P.win_act(_ws,0,'Rekord',,,,_form);

      __WND.SEL.put(P,_acr,_ws)
   ?};

   _cfg.nav.main:=_ws;

: Okno załączników
   _BUF:=_par.okno.BUF;
:: Kontrolka
   _cfg.ctr_id:='pep_grp_doki';
   _cfg.ctr_win:=_BUF.mk_ctr(,'#'+_cfg.ctr_id);
   _BUF.win_cctr(_cfg.ctr_win,_cfg.ctr_id,'@filelistpanel','dnd');

   _BUF.win_cfml(_cfg.ctr_win,_cfg.ctr_id,'CONTROL_INIT',"params_exec('control_init','paperless_grp')");
   _BUF.win_cfml(_cfg.ctr_win,_cfg.ctr_id,'CONTROL_DISPLAY',"params_exec('control_display','paperless_grp')");
   _BUF.win_cfml(_cfg.ctr_win,_cfg.ctr_id,'CONTROL_CALLBACK',"params_exec('control_callback','paperless_grp')");
:: Okno przycisków
   _wb:=_BUF.mk_edit(,,'#'+_cfg.ctr_id+'wb');
   exec('ok_esc','#window',_BUF,_wb,1,
      "params_get().okno.cfg.tryb:=1; sel_exit(); ''",
      "params_get().okno.cfg.tryb:=0; 'key:Esc'",1,1
   );

: Teraz okno grupowe.
   _mode:='maximized';
   _form:="
      params_set(_par:=params_get());
      {? _par.okno.cfg.tryb<1 || return(1) ?};
      _ret:=1;
      _BUF:=_par.okno.BUF;
      _BUF.cntx_psh();
      _BUF.prefix();
      {? _BUF.first()
      || {!
         |? _ret:=~(_BUF.BLOB=null() & _BUF.W='T');
            _ret & _BUF.next()
         !}
      ?};
      _BUF.cntx_pop();
      {? ~_ret
      || FUN.info(exec('info','paperless_grp','brakZal'))
      ?};
      _ret
   ";
   _wnd:=P.grp_make('Załączniki'@,
:  Po wyświetleniu (załaduj kontrolkę, wyświetl drzewko).
      "  params_set(_par:=params_get())
::         grp_disp(_par.okno.BUF,_par.okno.BUF.win_sel('?'),1,1)
      ",'pep',,,_form,,'normal'
   );

: Współpracownicy.
   P.grp_sel(_wnd,P,_cfg.nav.main,,
      "  params_set(_par:=params_get());
         params_exec('control_display','paperless_grp')

::         grp_disp(_par.okno.BUF,_par.okno.BUF.win_sel('?'),1,1)
      ",,,18,
:  Przed obsługą (ustaw filtr na tabeli P).
      "  _par:=params_get();
         _cfg:=_par.okno.cfg;
         params_set(_par);
         params_exec('control_display','paperless_grp');
         0
      ",,,,_mode,_cfg.nav.main
   );
   P.grp_splt(_wnd,,'horizontal','z1');
   P.grp_ctr(_wnd,_BUF,_cfg.ctr_win,,,,,,,,,,,'maximized');
   P.grp_splt(_wnd,'z1','horizontal','wb',15);
   P.grp_edit(_wnd,_BUF,_wb,,,,,,'maximized');
   _par.okno.cfg.grp:=_wnd;
   _par.okno.cfg.tryb:=-1;
   return(_wnd)

|? _a='WspolneZalaczniki'
|| _BUF:=_par.okno.BUF;
:: Kontrolka
   _ctr_id:='pep';
   _ctr_win:=_BUF.mk_ctr(,'#'+_ctr_id);
   _BUF.win_cctr(_ctr_win,_ctr_id,'@filelistpanel','dnd');

   _BUF.win_cfml(_ctr_win,_ctr_id,'CONTROL_INIT',"params_exec('control_init','paperless_grp')");
   _BUF.win_cfml(_ctr_win,_ctr_id,'CONTROL_DISPLAY',"params_exec('control_display','paperless_grp')");
   _BUF.win_cfml(_ctr_win,_ctr_id,'CONTROL_CALLBACK',"params_exec('control_callback','paperless_grp')");
:: Okno przycisków
   _wb:=_BUF.mk_edit(,,'#'+_ctr_id+'wb');
   exec('ok_esc','#window',_BUF,_wb,1,
      "params_get().okno.cfg.tryb:=1; sel_exit(); ''",
      "params_get().okno.cfg.tryb:=0; 'key:Esc'",1,1
   );
:: Budowa okna grupowego
   _mode:='maximized';
   _grp:=_BUF.grp_make('Wspólne załączniki'@,,'#zal_grp',,,"",,'normal');
   _BUF.grp_ctr(_grp,,_ctr_win,,,,,,,,,,,'maximized');
   _BUF.grp_splt(_grp,,'horizontal','wb',30);
   _BUF.grp_edit(_grp,,_wb,,,,,,'maximized');
   _par.okno.cfg.ctr_id:=_ctr_id;
   _par.okno.cfg.grp:=_grp;
   _par.okno.cfg.tryb:=-1
?}


\tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Formuły czynności PEP_GRP_DOKU
::       Formuła tworzy tabelę tymczasową do komunikacji z kontrolką. Jeżeli przekazany jest parametr z tabelą
::   WE: [_a] [TABLE] - Uchwyt tabeli z polem o akronimie BLOB typu BLOBRAW, na podstawie której wypełniona zostanie
::                      zwracana tabela.
::   WY: Tabela do komunikacji z kontrolką.
::----------------------------------------------------------------------------------------------------------------------
_TAB:=tab_tmp(3,
   'UIDREF','STRING[48]','Wskazanie na współpracownika',
   'SLO_NAZ','STRING['+$MS.fld_len(SLO_NAZ,'NAZWA')+']','Typ załącznika',
   'OPIS','STRING[255]','Opis',
   'NAME','STRING[64]','Plik',
   'SIZE','INTEGER','Rozmiar',
   'CRT_DATE','DATE','Data utworzenia',
   'CRT_TIME','TIME','Czas utworzenia',
   'MOD_DATE','DATE','Data modyfikacji',
   'MOD_TIME','TIME','Czas modyfikacji',
   'INT_DATA','INTEGER','Identyfikator rekordu',
   'STR_DATA','STRING[48]','Identyfikator rekordu',
   'BLOB','BLOBRAW','Załącznik',
   'W','STRING[1]','Wymagany',
   'UID_REC','STRING[48]','uidref danych (H, H_UM, ZC itp)',
   'IDADD','IDADD','Id'
);
{? var_pres('_a')=type_of(_TAB)
|| _BUF:=_a;
   {? _BUF.first()
   || {!
      |? _TAB.blank();
         {? _BUF.BLOB
         || _TAB.NAME:=_BUF.bl_info('BLOB','NAME');
            _TAB.SIZE:=_BUF.bl_info('BLOB','SIZE');
            _TAB.CRT_DATE:=_BUF.bl_info('BLOB','CREAT_DATE');
            _TAB.CRT_TIME:=_BUF.bl_info('BLOB','CREAT_TIME');
            _TAB.MOD_DATE:=_BUF.bl_info('BLOB','MODIFY_DATE');
            _TAB.MOD_TIME:=_BUF.bl_info('BLOB','MODIFY_TIME')
         || _TAB.NAME:='<wybierz>'
         ?};
         _TAB.STR_DATA:=_BUF.uidref();
         _TAB.INT_DATA:=#_BUF.ref();
         _TAB.SLO_NAZ:=_BUF.SLO_NAZ;
         _TAB.OPIS:=_BUF.OPIS;
         _TAB.UIDREF:=_BUF.UIDREF;
         _TAB.W:=_BUF.W;
         _TAB.UID_REC:=_BUF.UID_REC;
         _TAB.add();
         _BUF.next()
      !}
   ?}
?};
_TAB


\dodaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Formuły czynności PEP_GRP_DOKU
::       Dołącza załączniki wspólne
::   WE: _a [REFERENCE] - Wskazanie na pracownika
::       _b [OBJ] - Obiekt z zestawem
::       [_c] [STRING] - Kontekst, uidref powiązanej informacji
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~P.seek(_a.UID,) || return() ?};
_uidP:=P.uidref();
params_set(_par:=params_get());
_czyUid:=_par.okno.cfg.czyUid;
_zestaw:=_b;
_context:={? var_pres('_c')=type_of('') & +|_c=48 || _c || ~~ ?};
{? BP_ZEST.seek(_zestaw.BP_ZEST,)
|| _nazwaZestawu:=BP_ZEST.SLO_NAZ().NAZWA
|| return()
?};
_BUF:=_par.okno.BUF;
_form:="
   _BUF:=_a;
   _BUF.blank();
   _BUF.UIDREF:={? _c || _d || '' ?};
   _BUF.BLOB:={? SYSBLOB.seek(_b,) || SYSBLOB.ref() || null() ?};
   {? _BUF.BLOB
   || _BUF.NAME:=_BUF.bl_info('BLOB','NAME');
      _BUF.SIZE:=_BUF.bl_info('BLOB','SIZE');
      _BUF.CRT_DATE:=_BUF.bl_info('BLOB','CREAT_DATE');
      _BUF.CRT_TIME:=_BUF.bl_info('BLOB','CREAT_TIME');
      _BUF.MOD_DATE:=_BUF.bl_info('BLOB','MODIFY_DATE');
      _BUF.MOD_TIME:=_BUF.bl_info('BLOB','MODIFY_TIME')
   || _BUF.NAME:='<wybierz>'
   ?};
   _BUF.add()
";

:: pobranie załączników z formuły wdrożeniowej
BP_DEF.index('UNIQ');
BP_DEF.prefix(_zestaw.BP_ZEST);
{! _licz:=1..obj_len(_par.obj) |!
   {? +|_par.obj[_licz].SLO_NAZ &
      SLO_NAZ.seek(exec('slo_naz','ext_slo','ZAL',_par.obj[_licz].SLO_NAZ,1),) & BP_DEF.find_key(SLO_NAZ.ref())
   || _slo_naz:=BP_DEF.SLO_NAZ().NAZWA;
      {? +|BP_DEF.FORM
      || _blb:=($(BP_DEF.FORM))(P.ref(),_nazwaZestawu,_slo_naz,_context,_par.obj[_licz].PODPIS);
         {? +|_blb.BLOB
            &
            ~_BUF.find_tab('first',
               'SLO_NAZ',,'=',_slo_naz,
               'OPIS',,'=',_blb.OPIS,
               'UIDREF',,'=',{? _czyUid || _uidP || '' ?}
            )
         || _form(_BUF,_blb.BLOB,_czyUid,_uidP);
            _BUF.STR_DATA:=_BUF.uidref();
            _BUF.INT_DATA:=#_BUF.ref();
            _BUF.SLO_NAZ:=_slo_naz;
            _BUF.OPIS:=_blb.OPIS;
            _BUF.W:=BP_DEF.W;
            _BUF.put()
         ?}
      ?}
   ?}
!};

:: pobranie załączników za pomocą standardu
_zal:=exec('form4zest','paperless',_nazwaZestawu,_par.obj,,P.ref(),_context,1);
{? _zal.first()
|| {? var_pres('_context')=type_of('') & +|_context=48
   || _uid_rec:=_context
   || _uid_rec:=_zal.UID_REC
   ?};
   {!
   |? {? (_czyUid & ~_BUF.find_tab('first',
            'SLO_NAZ',,'=',_zal.SLO_NAZ,
            'UIDREF',,'=',_uidP)
         ) | (~_czyUid & ~_BUF.find_tab('first',
            'SLO_NAZ',,'=',_zal.SLO_NAZ,
            'OPIS',,'=',_zal.OPIS,
            'UIDREF',,'=','')
         )
      || _form(_BUF,_zal.REF_BLB,_czyUid,_uidP);
         _BUF.STR_DATA:=_BUF.uidref();
         _BUF.INT_DATA:=#_BUF.ref();
         _BUF.SLO_NAZ:=_zal.SLO_NAZ;
         _BUF.OPIS:=_zal.OPIS;
         _BUF.W:=_zal.W;
         _BUF.UID_REC:=_uid_rec;
         _BUF.put()
      ?};
      _zal.next()
   !}
?};

:: uzupełnienie o "puste" załączniki
{! _licz:=1..obj_len(_par.obj) |!
   {? +|_par.obj[_licz].SLO_NAZ &
      _czyUid &
      ~_BUF.find_tab('first',
         'SLO_NAZ',,'=',_par.obj[_licz].SLO_NAZ,
         'UIDREF',,'=',_uidP
      )
   || _form(_BUF,null(),_czyUid,_uidP);
      _BUF.STR_DATA:=_BUF.uidref();
      _BUF.INT_DATA:=#_BUF.ref();
      _BUF.SLO_NAZ:=_par.obj[_licz].SLO_NAZ;
::      _BUF.OPIS:=_blb.OPIS;
      _BUF.W:=BP_DEF.W;
      _BUF.put()
   ?}
!}


\mk_buf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Formuły czynności PEP_GRP_DOKU
::       Tworzy bufor z danymi do podpisu
::   WE: _a [TABELA] - tabela z danymi
::   WY: [TABELA] - tabela z podpisanymi załącznikami BLOB, DESC
::----------------------------------------------------------------------------------------------------------------------
_TMP:=tab_tmp(1,
   'IDADD','IDADD','ID',
   'BLOB','BLOBRAW','Załącznik',
   'DESC','SYS_MEMO','Opis załącznika',
   'UID','STRING[48]','uid'
);
{? _a.first()
|| {!
   |? _TMP.blank();
      _TMP.BLOB:=_a.BLOB;
      _TMP.UID:=_a.uidref();
      {? _TMP.add()
      || _TMP.memo_set(_a.SLO_NAZ+(%255)+_a.W,'DESC');
         _TMP.memo_put(,'DESC')
      ?};
      _a.next()
   !}
?};
_TMP


\add_file_and_run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [21.37]
:: OPIS: Uruchamia proces paperlessowy dla wybranego pracownika
::   WE: _a [REFERENCE] - wskazanie na pracownika
::       _b [STRING]    - ścieżka do pliku puszczanego w obieg (musi być bezwzględna)
::       _c [STRING]    - nazwa typu załącznika (SLO_NAZ.NAZWA) powiązanego jako rodzaj zestawu (BP_ZEST)
::       _d [STRING]    - nazwa typu załącznika pod jaką będzie załączony plik
::      [_e] [NUMBER]   - tryb wsadowy (bez komunikatów): 0 - nie [domyślnie], 1 - tak
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
    _p_ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};
     _file:={? var_pres('_b')=type_of('')     || _b || return(_result) ?};
_nazwa_slo:={? var_pres('_c')=type_of('')     || _c || return(_result) ?};
_nazwa_typ:={? var_pres('_d')=type_of('')     || _d || return(_result) ?};
    _batch:={? var_pres('_e')=type_of(0)      || _e || 0               ?};

:: sprawdzenie czy pracownik jest zsynchronizowany z portalem

:: sprawdźmy czy mamy coś przekazane w ścieżce do pliku
{? +form(_file)=0
|| _result:='Brak wskazania pliku.'@+'\n'+'Nie można uruchomić wybranego procesu.'@;
   {? _batch
   || return(_result)
   || return(FUN.error(_result))
   ?}
?};

:: zobaczmy czy mamy w słowniku ten typ załącznika - jeśli nie to kończymy
_slo_naz:=exec('slo_naz','ext_slo','ZAL',_nazwa_slo,1);
{? ~_slo_naz
|| return(_result)
?};
_CntxPop:="Cntx.pop(OSOBA,P)";
Cntx.psh(P,OSOBA);
:: wypełnienie struktury przekazanym pracownikiem
_prac:=exec('wybierz_silent','pracownik',_p_ref);

{? _prac.P.first()
|| _filtr:=exec('get','#filter',P);
:: wybór zestawu
   _zestaw:=exec('wybor_zestawu','paperless','Dokumenty kadrowe',_slo_naz);
   {? _zestaw.RET=0
   || FUN.info(exec('info','paperless_grp','rezygnacja'));
      _CntxPop();
      return()
   |? _zestaw.RET<0
   || FUN.emsg(exec('info','paperless_grp','err',_zestaw.RET,_zestaw.ERR));
      _CntxPop();
      return()
   ?};

:: formuła tymczasowa na dodanie bloba do _BUF
   _add2BUF:="
      _BUF:=_a;
      _BUF.blank();
      _BUF.UIDREF:=_c;
      _BUF.SLO_NAZ:=_d;
      _BUF.add();
      {? var_pres('_b')=type_of('')
      || _BUF.bl_put('BLOB',_b,0)
      || _BUF.BLOB:=_b
      ?};
      {? _BUF.BLOB
      || _BUF.NAME:=_BUF.bl_info('BLOB','NAME');
         _BUF.SIZE:=_BUF.bl_info('BLOB','SIZE');
         _BUF.CRT_DATE:=_BUF.bl_info('BLOB','CREAT_DATE');
         _BUF.CRT_TIME:=_BUF.bl_info('BLOB','CREAT_TIME');
         _BUF.MOD_DATE:=_BUF.bl_info('BLOB','MODIFY_DATE');
         _BUF.MOD_TIME:=_BUF.bl_info('BLOB','MODIFY_TIME');
         _BUF.put()
      ?}
   ";

:: konwersja utworzonego dokumentu
   _BUF:=exec('tab','paperless_grp');
   _ext:=-exec('split_file_name','#file',_file).ext;
   _path:=exec('path','#file',_file);
   _new:=_path+_nazwa_typ+'.'+_ext;
   {? fcopy(_file,_new,0,0,1) & ferase(_file,0)
   || {? _ext='pdf'
      || _add2BUF(_BUF,_new,_prac.P.UID,_nazwa_typ)
      |? ',doc,docx,'*(','+_ext+',')
      || _blob:=exec('konwersja','paperless',_new);
         _add2BUF(_BUF,_blob,_prac.P.UID,_nazwa_typ)
      ?}
   ?};
   exec('run_proc','paperless_grp',_zestaw.BP_ZEST,_prac,_BUF);
   exec('set','#filter',P,_filtr)
?};
Cntx.pop(P,OSOBA)

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:20 5bfda55e25e2f6d4cf6ac83e694ca91163ac1975300c0062ae4d7477a7ffea57c2745b82028cc99efad4c51380deea2bbf61d1b2fe3c09eb5651a036f15601133b034ef294483f71ad36160a9c68adf8d5bce9a7eef65fb19959ebe5301dafa313ba13298df90cb524195952aa1b633a5e7598abcc0be3e2bca058f1673cacc4
