:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: synchro.fml [2010]
:: Utworzony: 24.02.2009
:: Autor: Mario
::======================================================================================================================
:: Zawartosc: Formuły do obsługi synchronizacji danych z innymi systemami
::======================================================================================================================


\declobj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [2010]
:: OPIS: powołanie obiektu do synchronizacji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('SYNCHOBJ',@.CLASS)=-1
||
   obj_decl('SYNCHOBJ',
      obj_fld('rodz',''),
      obj_fld('acr',''),
      obj_fld('wsk',0),
      obj_fld('tabela',0),
      obj_fld('binit',0),
      obj_fld('refrec',''),
      obj_fld('idadd',''),
      obj_fld('idput',''),
      obj_fld('pd',''),
      obj_fld('sync_def',''),

      obj_fld('table',''),
      obj_fld('il_pd',''),
      obj_fld('fld_num',0),
      obj_fld('pd_ref',0),
      obj_fld('wyn',0),
      obj_fld('CRC_FLD',0),
      obj_fld('CRC',0),

      obj_meth('__init',"
          SYNC_PD.cntx_psh();
          SYNC_PD.prefix();
          _size:=SYNC_PD.size();
          SYNC_PD.cntx_pop();
          {? _size=0 || _size:=1 ?};
          _a.tabela:=obj_new(100);
          _a.tabela[1]:='';
          _a.wsk:=1;
          _a.binit:=0;
          _a.il_pd:=obj_new(3);
          _a.pd_ref:=obj_new(_size);
          _a.wyn:=obj_new(_size);
          _a.CRC_FLD:=obj_new(_size);
          _a.CRC:=obj_new(_size)
      "),

      obj_meth('__done',"
          obj_del(.tabela)
      "),

      obj_meth('set',"
         .wsk:=1;
         .tabela[.wsk]:='';
         .pd:=_a;
         .rodz:=_b;
         .acr:=_c;
         {? .rodz='tab'
         || .refrec:=_c
         |? .rodz<>'del'
         || .refrec:=$($(_c+'.ref'))();
            .idadd:=($(_c+'.idadd_value'))();
            .idput:=($(_c+'.idput_value'))()
         ?}
      "),

      obj_meth('set_rodz',"
          .rodz:=_a;
          1
      "),

      obj_meth('get_rodz',"
          .rodz
      "),

      obj_meth('line',"
         _dl_str:=255;
         _il_kol:=10;
         _l:={? _a+1=';' || _a-1 || _a ?};
         _l:=gsub(_l,';',':');
         _l+=';';
         {!
         |? .wsk<=_il_kol & _l<>''
         |!
            _dl:=+.tabela[.wsk];
            _free:=_dl_str-_dl;
            .tabela[.wsk]+=_free+_l;
            _l:=_free-_l;
            {? _l<>'' || .wsk+=1; .tabela[.wsk]:='' ?}
         !};
         {? .wsk>_il_kol
         ||
            .wsk-=1;
            .tabela[.wsk]:=.tabela[.wsk]-4;
            .tabela[.wsk]+='...;'
         ?}
      ",2,-1),

      obj_meth('line',"
          _l:=_a+':'+_b+';';
          .line(_l)
      ",2,2),

      obj_meth('line',"
          _l:=_a+':'+$_b+';';
          .line(_l)
      ",2,1),

      obj_meth('line',"
          _l:=_a+':'+$_b+';';
          .line(_l)
      ",2,4),

      obj_meth('line',"
          _l:=_a+':'+$_b+';';
          .line(_l)
      ",2,5),

      obj_meth('field',"
          .line(_a,($_a)())
      ",2,-1),

      obj_meth('savebody',"
         _repl:=_a;
::       na potrzeby webTerma musiałem to zmienić, na tabalę niemaskowalną (bo inaczej się wywala)
::         _id:=$SYNC.tm_stamp();
         _id:=$SYNC_DEF.tm_stamp();
         {? SYNC_DEF.FIR='T' | SYNC_DEF.FIR='N'
         ||
            {? SYNC_DEF.FIR='T' || SYNC.use('synd'+__Firma) || SYNC.use('synd___') ?};
            {! _l:=1..(.wsk)
            |!
               SYNC.prefix();
               SYNC.blank();
               SYNC.ID:=_id;
               SYNC.LP:=_l;
               SYNC.TR:=.tabela[_l];
               SYNC.REF:=.refrec;
               SYNC.RODZ:=.rodz;
               SYNC.ACR:=.acr;
               SYNC.SYNC_PD:=.pd;
               SYNC.SYNC_REP:=_repl;
               SYNC.R_IDADD:=.idadd;
               SYNC.R_IDPUT:=.idput;
               {? SYNC_DEF.FIR='T' || SYNC.FIRMA:=__Firma || SYNC.FIRMA:='' ?};
               SYNC.WGIDPUT:=SYNC_DEF.WGIDPUT;
               SYNC.add()
            !};
            {? SYNC_DEF.FIR='N'
            ||
               SYNC_FIR.index('PDTAB');
               SYNC_FIR.prefix(SYNC_DEF.SYNC_PD,SYNC_DEF.ACR_TAB,SYNC_DEF.ACR_TAB);
               {? SYNC_FIR.first
               ||
                  {!
                  |?
                     _id:=$SYNC.tm_stamp();
                     {! _l:=1..(.wsk)
                     |!
                        SYNC.use('synd'+SYNC_FIR.FIRMA().SYMBOL);
                        SYNC.prefix();
                        SYNC.blank();
                        SYNC.ID:=_id;
                        SYNC.LP:=_l;
                        SYNC.TR:=.tabela[_l];
                        SYNC.REF:=.refrec;
                        SYNC.RODZ:=.rodz;
                        SYNC.ACR:=.acr;
                        SYNC.SYNC_PD:=.pd;
                        SYNC.SYNC_REP:=_repl;
                        SYNC.FIRMA:=SYNC_FIR.FIRMA().SYMBOL;
                        SYNC.R_IDADD:=.idadd;
                        SYNC.R_IDPUT:=.idput;
                        SYNC.WGIDPUT:=SYNC_DEF.WGIDPUT;
                        SYNC.add()
                     !};
                     SYNC_FIR.next()
                  !}
               ?}
            ?}

         |? SYNC_DEF.FIR='F'
         ||
            FIRMA.cntx_psh();
            FIRMA.index('SYMBOL');
            FIRMA.prefix();
            _loop:=FIRMA.first();
            {!
            |? _loop
            |!
               {? FIRMA.TYP='S' & FIRMA.Z='N' | FIRMA.TYP='C'
               ||
                  _id:=$SYNC.tm_stamp();
                  {! _l:=1..(.wsk)
                  |!
                     SYNC.use('synd'+FIRMA.SYMBOL);
                     SYNC.prefix();
                     SYNC.blank();
                     SYNC.ID:=_id;
                     SYNC.LP:=_l;
                     SYNC.TR:=.tabela[_l];
                     SYNC.REF:=.refrec;
                     SYNC.RODZ:=.rodz;
                     SYNC.ACR:=.acr;
                     SYNC.SYNC_PD:=.pd;
                     SYNC.SYNC_REP:=_repl;
                     SYNC.FIRMA:=FIRMA.SYMBOL;
                     SYNC.R_IDADD:=.idadd;
                     SYNC.R_IDPUT:=.idput;
                     SYNC.WGIDPUT:=SYNC_DEF.WGIDPUT;
                     SYNC.add()
                  !}
               ?};
               _loop:=FIRMA.next()
            !};
            FIRMA.cntx_pop()
         ?}
      "),

      obj_meth('save',"
         _ogrrepl:={? SYNC_DEF.FLD_REP<>'' || ($(SYNC_DEF.ACR_TAB+'.'+SYNC_DEF.FLD_REP))() || 0 ?};
         {? _a>0
         || SYNC_REP.index('PDNR');
            SYNC_REP.prefix(SYNC_DEF.SYNC_PD,_a);
            {? SYNC_REP.first() & SYNC_REP.AKT='T' & (~_ogrrepl | (_ogrrepl & SYNC_REP.NR=_ogrrepl))
            || .savebody(SYNC_REP.ref())
            ?}
         || SYNC_REP.index('PD');
            SYNC_REP.prefix(SYNC_DEF.SYNC_PD);
            {? SYNC_REP.first()
            || {!
               |? {? SYNC_REP.AKT='T' & (~_ogrrepl | (_ogrrepl & SYNC_REP.NR=_ogrrepl))
                  || _repl:=SYNC_REP.ref();
                     .savebody(_repl)
                  ?};
                  SYNC_REP.next()
               !}
            || .savebody(null)
            ?}
         ?}
      ",1,-1),

      obj_meth('save',"
         SYNC_DEF.cntx_psh();
         SYNC_DEF.prefix();
         {? SYNC_DEF.seek(_a)
         ||
            SYNC_REP.index('PD');
            SYNC_REP.prefix(SYNC_DEF.SYNC_PD);
            {? SYNC_REP.first()
            || {!
               |? {? SYNC_REP.AKT='T'
                  || _repl:=SYNC_REP.ref();
                     .savebody(_repl)
                  ?};
                  SYNC_REP.next()
               !}
            || .savebody(null)
            ?}
         ?};
         SYNC_DEF.cntx_pop()
      ",type_of(null()),-1),

      obj_meth('init_rec',"
         .table:=_a;
         _table:=($.table)();
         .binit:=0;
         SYNC_FLD.index('ACR_TAB');
         SYNC_FLD.prefix('T',.table,.table);
         {? SYNC_FLD.first()
         ||
            .binit:=1;
            .il_pd[1]:=1;.il_pd[2]:=SYNC_FLD.SYNC_PD;.il_pd[3]:=($(.table+'.fld_num'))();.pd_ref[.il_pd[1]]:=.il_pd[2];
            _ii:=.il_pd[1];
            .CRC_FLD[_ii]:='';
            .CRC[_ii]:=0;
            _sep:='';
            {!
            |?
               {? .il_pd[2]<>SYNC_FLD.SYNC_PD
               ||
                  {? .CRC_FLD[_ii]<>'' || .CRC[_ii]:=($(.table+\".crc(\"+.CRC_FLD[_ii]+\")\"))() ?};
                  .il_pd[1]+=1;.il_pd[2]:=SYNC_FLD.SYNC_PD;.pd_ref[.il_pd[1]]:=.il_pd[2];
                  _ii:=.il_pd[1];
                  .CRC_FLD[_ii]:='';
                  .CRC[_ii]:=0;
                  _sep:=''
               ?};
               {? var_pres(SYNC_FLD.ACR_FLD,_table)<>36 & var_pres(SYNC_FLD.ACR_FLD,_table)>0
               ||
                  .CRC_FLD[_ii]+=_sep+\"'\"+SYNC_FLD.ACR_FLD+\"'\";
                  _sep:=','
               ?};
               SYNC_FLD.next()
            !};
            {? .CRC_FLD[_ii]<>'' || .CRC[_ii]:=($(.table+\".crc(\"+.CRC_FLD[_ii]+\")\"))() ?}
         ?}
      ",type_of(''),-1),

      obj_meth('init_rec',"
         .table:=_a;
         _acr_fld:=_b;
         .binit:=0;
         SYNC_FLD.index('ACR_TAB');
         SYNC_FLD.prefix('T',.table,.table);
         {? SYNC_FLD.first()
         ||
            .binit:=1;
            .il_pd[1]:=1;
            .il_pd[2]:=SYNC_FLD.SYNC_PD;
            .il_pd[3]:=0;
            .pd_ref[.il_pd[1]]:=.il_pd[2];
            _ii:=.il_pd[1];
            .CRC_FLD[_ii]:='';
            .CRC[_ii]:=0;
            {!
            |?
               {? .il_pd[2]<>SYNC_FLD.SYNC_PD
               ||
                  .il_pd[1]+=1;
                  .il_pd[2]:=SYNC_FLD.SYNC_PD;
                  .pd_ref[.il_pd[1]]:=.il_pd[2];
                  _ii:=.il_pd[1];
                  .CRC_FLD[_ii]:=''
               ?};
               {? SYNC_FLD.ACR_FLD=_acr_fld
               ||
                  .CRC_FLD[_ii]:=\"'\"+_acr_fld+\"'\";
                  .CRC[_ii]:=($(.table+\".crc(\"+.CRC_FLD[_ii]+\")\"))()
               ?};
               _loop:=SYNC_FLD.next()
            !}
         ?}
      ",type_of(''),type_of(''),-1),

      obj_meth('is_equal',"
         _wyn:=~~;
         {! _ii:=1 .. obj_len(.wyn) |! .wyn[_ii]:=~~ !};
         _num:=0;
         {? .binit>0
         ||
            {! _ii:=1 .. .il_pd[1]
            |!
               {? .CRC_FLD[_ii]<>''
               ||
                  {? .CRC[_ii]<>($(.table+\".crc(\"+.CRC_FLD[_ii]+\")\"))()
                  ||
                     _num+=1;
                     .wyn[_num]:=.pd_ref[_ii]
                  ?}
               ?}
            !}
         ?};
         {? _num
         ||
            _wyn:=obj_new(_num);
            {! _ii:=1 .. _num
            |!
               _wyn[_ii]:=.wyn[_ii]
            !}
         ?};
         _wyn
      ",-1)
   )
?};
{? var_pres('__Synch')=-1
||
   __Synch:=obj_new(@.CLASS.SYNCHOBJ)
?}


\ustaw_trigger
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: ustawia triggery dla zdefiniowanych tabel
::----------------------------------------------------------------------------------------------------------------------
_list:='';
SYNC_DEF.index('AKT');
SYNC_DEF.prefix('T');
{? SYNC_DEF.first()
||
   {!
   |?
      {? _list*('|'+SYNC_DEF.ACR_TAB+';')=0 & (SYNC_DEF.TR_ADD+SYNC_DEF.TR_PUT+SYNC_DEF.TR_DEL)*'T'
      & SYNC_DEF.ACR_TAB<>''
      ||
         _form:='.trig_a(\'add\',"exec(\'tr_add_a\',\'synchro\',\'';
         ($( SYNC_DEF.ACR_TAB+_form+SYNC_DEF.ACR_TAB+'\',_a)",''synchro'')'))();
         _form:='.trig_b(\'put\',"exec(\'tr_put_b\',\'synchro\',\'';
         ($( SYNC_DEF.ACR_TAB+_form+SYNC_DEF.ACR_TAB+'\')",''synchro'')'))();
         _form:='.trig_a(\'put\',"exec(\'tr_put_a\',\'synchro\',\'';
         ($( SYNC_DEF.ACR_TAB+_form+SYNC_DEF.ACR_TAB+'\',_a)",''synchro'')'))();
         _form:='.trig_b(\'del\',"exec(\'tr_del_b\',\'synchro\',\'';
         ($( SYNC_DEF.ACR_TAB+_form+SYNC_DEF.ACR_TAB+'\')",''synchro'')'))();
         _form:='.trig_b(\'memo_put\',"exec(\'tr_memo_b\',\'synchro\',\'';
         ($( SYNC_DEF.ACR_TAB+_form+SYNC_DEF.ACR_TAB+'\',_a)",''synchro'')'))();
         _form:='.trig_a(\'memo_put\',"exec(\'tr_memo_a\',\'synchro\',\'';
         ($( SYNC_DEF.ACR_TAB+_form+SYNC_DEF.ACR_TAB+'\',_a,_b)",''synchro'')'))();
         _list+='|'+SYNC_DEF.ACR_TAB+';'
      ?};
      SYNC_DEF.next()
   !}
?};
''


\usun_trigger
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [17.00]
:: OPIS: usuwa triggery dla zdefiniowanych tabel
::----------------------------------------------------------------------------------------------------------------------
SYNC_DEF.index('AKT');
SYNC_DEF.prefix('T');
{? SYNC_DEF.first()
||
   {!
   |?
      ($( SYNC_DEF.ACR_TAB+'.trig_a(\'add\',"",''synchro'')'))();
      ($( SYNC_DEF.ACR_TAB+'.trig_b(\'put\',"",''synchro'')'))();
      ($( SYNC_DEF.ACR_TAB+'.trig_a(\'put\',"",''synchro'')'))();
      ($( SYNC_DEF.ACR_TAB+'.trig_b(\'del\',"",''synchro'')'))();
      ($( SYNC_DEF.ACR_TAB+'.trig_a(\'del\',"",''synchro'')'))();
      SYNC_DEF.next()
   !}
?};
''


\tr_add_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: trigger po dodaniu rekordu do tabeli
::   WE: _a - akronim tabeli
::       _b - czy operacja sie powiodła
::   WY: wartość typu VOID
::----------------------------------------------------------------------------------------------------------------------
{? _b>0 || exec('ustaw_sync','synchro',_a,'add') ?};
~~


\tr_put_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: trigger przed poprawą rekordu do tabeli
::   WE: _a - akronim tabeli
::   WY: czy można dodać rekord
::----------------------------------------------------------------------------------------------------------------------
($(_a+'.cntx_psh()'))();
($(_a+'.get()'))();
__Synch.init_rec(_a);
($(_a+'.cntx_pop()'))();
1


\tr_put_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: trigger po poprawie rekordu do tabeli
::   WE: _a - akronim tabeli
::       _b - czy operacja sie powiodła
::   WY: wartość typu VOID
::----------------------------------------------------------------------------------------------------------------------
{? _b>0 || exec('ustaw_sync','synchro',_a,'put') ?};
~~


\tr_memo_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: trigger przed memo_put rekordu do tabeli
::   WE: _a - akronim tabeli
::       _b - akronim pola memo
::   WY: czy można dodać rekord
::----------------------------------------------------------------------------------------------------------------------
($(_a+'.cntx_psh()'))();
($(_a+'.get()'))();
__Synch.init_rec(_a,_b);
($(_a+'.cntx_pop()'))();
1


\tr_memo_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: trigger po memo_put rekordu do tabeli
::   WE: _a - akronim tabeli
::       _b - czy operacja sie powiodła
::       _c - akronim pola memo
::   WY: wartość typu VOID
::----------------------------------------------------------------------------------------------------------------------
{? _b>0 || exec('ustaw_sync','synchro',_a,'memo',_c) ?};
~~


\tr_del_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: trigger przed usunięciem rekordu w tabeli
::   WE: _a - akronim tabeli
::   WY: czy można dodać rekord
::----------------------------------------------------------------------------------------------------------------------
_tab_size:=0;
SYNC_PD.index('SYM');
SYNC_PD.prefix();
{? SYNC_PD.first()
||
   {!
   |?
      SYNC_DEF.index('PDTAB');
      SYNC_DEF.prefix(_a,SYNC_PD.ref,'T');
      {? SYNC_DEF.first
      ||
         {? SYNC_DEF.TR_DEL='T'
               &
            (  SYNC_DEF.WAR_FORM=''
                  |
               ($(SYNC_DEF.WAR_FORM))('del',3+REF.INFO,REF.FIRMA)
            )
         ||
            _tab_size+=1
         ?}
      ?};
      SYNC_PD.next
   !}
?};
{? _tab_size
||
   _tab_synch:=obj_new(_tab_size);
   _tab_size:=1;
   SYNC_PD.prefix();
   {? SYNC_PD.first()
   ||
      {!
      |?
         SYNC_DEF.index('PDTAB');
         SYNC_DEF.prefix(_a,SYNC_PD.ref,'T');
         {? SYNC_DEF.first
         ||
            {? SYNC_DEF.TR_DEL='T'
                  &
               (  SYNC_DEF.WAR_FORM=''
                     |
                  ($(SYNC_DEF.WAR_FORM))('del',3+REF.INFO,REF.FIRMA)
               )
            ||
               _tab_synch[_tab_size]:=obj_new(@.CLASS.SYNCHOBJ);
               _tab_synch[_tab_size].refrec:=$($(_a+'.ref'))();
               _tab_synch[_tab_size].idadd:=($(_a+'.idadd_value'))();
               _tab_synch[_tab_size].idput:=time_ident_to_utc(time_ident(date(),time()));
               _tab_synch[_tab_size].set(SYNC_DEF.SYNC_PD,'del',_a);
               _tab_synch[_tab_size].sync_def:=SYNC_DEF.ref();
               {!
               |?
                  {? SYNC_DEF.REF_TAB=''
                  ||
                     _wart:=($(SYNC_DEF.FORM))();
                     {? SYNC_DEF.TYP='N' || _wart:=form(_wart,,,'9.') ?};
                     _tab_synch[_tab_size].line(SYNC_DEF.TYP+SYNC_DEF.ACR_FLD,_wart)
                  ?};
                  SYNC_DEF.next()
               !};
               _tab_size+=1
            ?}
         ?};
         SYNC_PD.next
      !};
      exec('ustaw_sync','synchro',_a,'del',,_tab_synch)
   ?}
?};

1


\sync_def_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: definiowanie mechanizmow synchronizacji
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__pd','__tb','__fl','__win_sl','__win_se','__tbnr','__akttab');
__akttab:='';
__win_sl:='WER';
__win_se:='WER';

SYNC_DEF.win_fml(__win_sl,,'ACR_FLD',,'ICON_BEFORE',"exec('icon_be','synchro')");
SYNC_DEF.win_sel(__win_sl);
SYNC_DEF.dnd_sel(__win_sl,,'records.SYNC_FLD',"exec('syncd_add_dnd','synchro')");
SYNC_DEF.fld_fml('LP','DISPLAY_FORMAT',"{? ~SYNC_DEF.REKORD || 'empty=1' || 'empty=0' ?}");

SYNC_DEF.win_sel('GRP');
SYNC_DEF.index('TREE'); SYNC_DEF.prefix();
SYNC_DEF.select();

VAR_DEL.delete('__pd','__tb','__fl','__win_sl','__win_se','__tbnr','__akttab');
''


\sync_def_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: rekord przed SYNC_DEF
::----------------------------------------------------------------------------------------------------------------------
{? SYNC_DEF.sel_size()=0 ||
   {? SYNC_DEF.ACR_TAB=''
:   || SYNC_DEF.actions(__win_sl,'AaJjZzFf',,1);
   || SYNC_DEF.actions_grayed(__win_sl, 'AaJjZzFf');
      SYNC_DEF.btn_sopt('WER','SYNC_AKT','state=grayed');
      SYNC_DEF.btn_sopt('WER','SYNC_NOAKT','state=grayed');
      SYNC_DEF.btn_sopt('WER','SYNC_ZAPIS','state=grayed');
      SYNC_DEF.win_edit('RED1')
   || SYNC_DEF.actions(__win_sl,'',,1);
      SYNC_DEF.actions_grayed(__win_sl, '');
      SYNC_DEF.btn_sopt('WER','SYNC_AKT','state=normal');
      SYNC_DEF.btn_sopt('WER','SYNC_NOAKT','state=normal');
      SYNC_DEF.btn_sopt('WER','SYNC_ZAPIS','state=normal');
      SYNC_DEF.win_edit('RED')
   ?}
||
   SYNC_DEF.actions_grayed(__win_sl, '');
   SYNC_DEF.btn_sopt('WER','SYNC_AKT','state=normal');
   SYNC_DEF.btn_sopt('WER','SYNC_NOAKT','state=normal')
?};
SYNC_DEF.win_patt('SZUK');
exec('rekprzed','color','SYNCD#01')


\sync_def_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: kolorowanie SYNC_DEF
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? SYNC_DEF.ACR_TAB=''
|| _tree:=SYNC_DEF.ref();
   SYNC_DEF.cntx_psh();
   SYNC_DEF.index('TREE');
   SYNC_DEF.prefix(_tree);
   _akt:=SYNC_DEF.find_tab('first','AKT',,'=','T');
   SYNC_DEF.cntx_pop()
|? SYNC_DEF.AKT<>'T'
|| _akt:=0
|| _akt:=1
?};
{? ~_akt
|| _wyn:='SYNCD#01#01'
|| SYNC_DEF.AKT:='T';
   _wyn:='SYNCD#01#02'
?};
_wyn


\sync_fld_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: rekord przed SYNC_FLD
::----------------------------------------------------------------------------------------------------------------------
exec('rekprzed','color','SYNCF#01')


\sync_fld_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: kolorowanie SYNC_FLD
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? SYNC_FLD.AKT<>'T'
|| _wyn:='SYNCF#01#01'
|| _wyn:='SYNCF#01#02'
?};
_wyn


\spr_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: sprawdza/dodaje pola tabeli
::   WE:  _a  - akronim okienka
::       [_b] - czy odswiezac okno  T/N domyslnie T
::   WY: uchwyt okienka do odswiezenia
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>2 || _b:='T' ?}  || _b:='T'  ?};

{? SYNC_DEF.ACR_TAB<>''
|| __akttab:=SYNC_DEF.ACR_TAB;
   {? _b='T' || grp_disp(SYNC_DEF,__win_sl) ?};
   SYNC_FLD.index('TAB');
   {! _fld:=1 .. ($(SYNC_DEF.ACR_TAB+'.fld_num'))()
   |! _acr:=($(SYNC_DEF.ACR_TAB+'.fld_acr(_a)'))(_fld);
      SYNC_FLD.prefix(SYNC_DEF.SYNC_PD,SYNC_DEF.ACR_TAB,_acr,_acr);
      {? ~SYNC_FLD.first
      ||
         _typ:=($('var_pres(''''+_a+'''','+SYNC_DEF.ACR_TAB+')'))(_acr);
         {? _typ=20 | _typ=21 | _typ=22 | _typ=26 | _typ=27 | _typ=29 | _typ=33 | _typ=36
         ||
            SYNC_FLD.blank();
            SYNC_FLD.SYNC_PD:=SYNC_DEF.SYNC_PD;
            SYNC_FLD.ACR_TAB:=SYNC_DEF.ACR_TAB;
            SYNC_FLD.ACR_FLD:=_acr;
            SYNC_FLD.NR:=_fld;
            SYNC_FLD.add()
         ?}
      |? SYNC_FLD.first & _fld<>SYNC_FLD.NR
      || SYNC_FLD.NR:=_fld;
         SYNC_FLD.put()
      ?}
   !};
   SYNC_FLD.index('NR');
   SYNC_FLD.prefix(SYNC_DEF.SYNC_PD,SYNC_DEF.ACR_TAB,SYNC_DEF.ACR_TAB)
|| __akttab:='';
   SYNC_FLD.index('NR');
   SYNC_FLD.prefix(SYNC_DEF.SYNC_PD,SYNC_DEF.ACR_TAB,SYNC_DEF.ACR_TAB,99999999)
?};
SYNC_FLD.first();
{? _b='T' || grp_disp(SYNC_FLD,_a) ?};
''


\syncd_add_dnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: dodaje rekord z definicja pola do eksportu
::   WE: _a - dolacz lub poprawa ('add' / 'put')
::       [_b] - tryb 0(domyślnie) d&d, 1-akcja
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_b')=type_of(0) || _b || 0 ?};

{? ~_tryb
|| _l_sel:=dnd_info('dropped_records')
|| {? SYNC_FLD.sel_size()
   || _l_sel:=SYNC_FLD.sel_aget();
      SYNC_FLD.sel_adel()
   || _l_sel:=tab_tmp(1,'REF','INTEGER','');
      _l_sel.blank();
      _l_sel.REF:=#SYNC_FLD.ref();
      _l_sel.add(1)
   ?}
?};

{? _l_sel.first()
||
   {!
   |?
      _pd:=0;
      _acr_tab:='';
      _acr_fld:='';
      SYNC_FLD.cntx_psh();
      SYNC_FLD.prefix();
      {? SYNC_FLD.seek(_l_sel.REF,)
      || _pd:=SYNC_FLD.SYNC_PD;
         _acr_tab:=SYNC_FLD.ACR_TAB;
         _acr_fld:=SYNC_FLD.ACR_FLD;
         exec('syncd_add_fld','synchro','add',_pd,_acr_tab,_acr_fld)
      ?};
      SYNC_FLD.cntx_pop();
      _l_sel.next()
   !}
?};
''


\syncd_add_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: dodaje rekord z definicją pola do eksportu
::       Uwaga. W zależności od miejsca wywołania pozycja lub nagłówek
::   WE: _a - dołącz lub poprawa ('add' / 'put')
::       [_b] - przeznaczenie danych - ref
::       [_c] - akronim tabeli
::       [_d] - akronim pola
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>7 || _b:=null ?} || _b:=null ?};
{? _>=3 || {? type_of(_c)<>2 || _c:='' ?} || _c:='' ?};
{? _>=4 || {? type_of(_d)<>2 || _d:='' ?} || _d:='' ?};

_size:=SYNC_DEF.size();
_sync:=SYNC_DEF.REKORD;
VAR_DEL.delete('__a');
__a:=_a;

{? __a='put'
|| __pd:=SYNC_DEF.SYNC_PD;
   __tb:=SYNC_DEF.ACR_TAB;
   __tbnr:=SYNC_DEF.LP;
   __fl:=SYNC_DEF.ACR_FLD
?};
_esc:=0;
_naglowek:=1;
{? __a<>'put' & _size & _sync=null() & exec('FindInSet','#table','SYNC_DEF','TREE',SYNC_DEF.ref())=null()
|| _opc:=FUN.choice('Należy wybrać jedną z opcji dołączenia.'@
          ,,'Pozycja schematu '@+SYNC_DEF.SYNC_PD().SYM,'Nowy schemat'@);
   {? ~_opc  || _esc:=1
   |? _opc=1 || _naglowek:=0
   ?}
?};
{? _esc
|| ''
|? __a='put' & SYNC_DEF.ACR_TAB=''
|| FUN.info('Niedozwolona edycja nagłówka - przeznaczenia danych.'@)
|? _sync=null() & _naglowek
||
:: dołaczenie nagłówka definicji
   SYNC_DEF.win_edit('RED1');
   {? _a='add' || SYNC_DEF.blank() ?};
   SYNC_DEF.REKORD:=null;
   {? SYNC_DEF.edit("
         _wyn:=__CHK.record(SYNC_DEF,,'SYNC_PD');
         {? _wyn='' & var_pres('onlyrap')>0 & SYNC_DEF.SYNC_PD().RODZAJ<>'R'
         || FUN.info('Możliwe dołączanie wyłącznie typów dotyczących raportowania.'@); _wyn:='SYNC_PD'
         ?};
         {? _wyn=''
         || SYNC_DEF.cntx_psh();
            SYNC_DEF.index('PD');
            SYNC_DEF.prefix(SYNC_DEF.SYNC_PD);
            {? {? __a='add' | (__a='put' & __pd<>SYNC_DEF.SYNC_PD)|| SYNC_DEF.first() || 0 ?}
            || FUN.info('Dołączono już schemat o symbolu: \"%1\".\n\nAkceptacja niemożliwa.'@[SYNC_DEF.SYNC_PD().SYM]);
               _wyn:='SYNC_PD'
            ?};
            SYNC_DEF.cntx_pop()
         ?};
         _wyn")
   ||
      {? _a='add'
      || SYNC_DEF.add
      || SYNC_DEF.put
      ?};
      exec('lbl_kol_sync','synchro')
   ?}
||
:: dołączenie pozycji definicji
   {? _b<>null
   || _pd:=_b
   || _pd:=SYNC_DEF.SYNC_PD
   ?};

   SYNC_DEF.win_edit('RED');
   {? _a='add' || SYNC_DEF.blank() ?};
   {? _sync<>0
   || SYNC_DEF.REKORD:=_sync;
      SYNC_DEF.SYNC_PD:=_pd
   || SYNC_DEF.REKORD:=SYNC_DEF.ref;
      SYNC_DEF.SYNC_PD:=_pd
   ?};
   {? _c<>''
   || SYNC_DEF.ACR_TAB:=_c
   ?};
   {? _d<>''
   || SYNC_DEF.ACR_FLD:=_d;
      exec('ae_syncfld','synchro');
      exec('be_sync_fld_lp','synchro')
   ?};
   {? SYNC_DEF.edit("exec('chksync_def','synchro')")
   ||
      {? _a='add'
      || SYNC_DEF.add;
::       sprawdzenie znacznika wielofirmowości
         SYNC_DEF.cntx_psh();
         _pd:=SYNC_DEF.SYNC_PD;
         _acr:=SYNC_DEF.ACR_TAB;
         _nr:=SYNC_DEF.LP;
         _fir:='';
         SYNC_DEF.index('PDACR');
         SYNC_DEF.prefix(_pd,_acr,_acr);
         {? SYNC_DEF.first & SYNC_DEF.size >1
         ||
            {!
            |?
               {? _nr<> SYNC_DEF.LP
               ||
                  _fir:=SYNC_DEF.FIR
               ?};
               SYNC_DEF.next & _fir=''
            !}
         ?};
         SYNC_DEF.cntx_pop();
         {? _fir<>''
         ||
            SYNC_DEF.FIR:=_fir;
            SYNC_DEF.put
         ?}
      || SYNC_DEF.put
      ?};
      exec('lbl_kol_sync','synchro');
      exec('lbl_tab_sync','synchro')
   ?}
?};
VAR_DEL.delete('__a');
''


\wysw_sync
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: wyswietlenie zawartosci tabeli sync
::   WE:  _a  - akronim tabeli
::       [_b] - ref replikacji
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>7 || _b:=null ?} || _b:=null ?};
{? exec('spr_upr_tab','synchro',_a)
||
   {? ($(_a+'.tab_read'))()=1
   ||
      _sel:=SYNC.grp_make('Dane do synchronizacji'@,"grp_disp(SYNC,'WER',0,1);tab_sel(1)",'akwsjghyytakaiw');

      VAR_DEL.delete('__maski','__parama','__paramb');
      __parama:=_a;
      __paramb:=_b;
      __maski:=SYNC.names();
      {? __maski.first()
      ||
         {!
         |?
            _form:=$('
                  czy_dsp:=1;__b_mask:='''+(__maski.NAME)+''';
                  SYNC.use(__b_mask);
                  SYNC.index(\'ACR\');
                  {? __paramb<>null()
                  || SYNC.prefix(__parama,__parama,__paramb)
                  || SYNC.prefix(__parama,__parama)
                  ?}
                  ');
            SYNC.grp_sel(_sel,,'WER',__maski.NAME+3,,,,,_form,,,,'maximized');
            __maski.next()
         !}
      ?};

      SYNC.win_sel(_sel);
      SYNC.select()

   ||
      FUN.info('Brak praw do odczytu tabeli: '@+_a)
   ?}
|| FUN.info('Ustawione uprawnienia do danych uniemożliwiają użycia funkcji.\n\n'
            'Wyświetlenie danych z tabeli ''%1'' niemożliwe.'@[_a])
?};
''


\ustaw_sync
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: ustawianie parametrow synchronizacji dla podanej tabeli
::   WE: _a - akronim tabeli
::       _b - wywolanie add/put/del
::       _c - akronim pola memo
::       _d - jeśli _b=del tabela z wartościami
::----------------------------------------------------------------------------------------------------------------------
SYNC_PD.index('SYM');
{? _b='put' | _b='memo'
||
   _pd:=__Synch.is_equal();
   __Synch.set_rodz(_b);
   {? type_of(_pd)<>type_of(~~)
   ||
      {! _i .. obj_len(_pd)
      |!
         SYNC_DEF.index('PDTAB');
         SYNC_DEF.prefix(_a,_pd[_i],'T');
         {? SYNC_DEF.first & SYNC_DEF.WGIDPUT<>'T'
         ||
            {? SYNC_DEF.TR_PUT='T' & (((SYNC_DEF.WAR_FORM<>'' & ($(SYNC_DEF.WAR_FORM))(_b)) | SYNC_DEF.WAR_FORM=''))
            ||
               __Synch.set(_pd[_i],_b,_a);
               _save:=0;
               {!
               |?
                  {? _b='memo'
                  ||
                     {? SYNC_DEF.ACR_FLD=_c
                     ||
                        __Synch.line(SYNC_DEF.TYP+SYNC_DEF.ACR_FLD,'memo_put');
                        _save:=1

                     |? SYNC_DEF.REF_TAB=''
                           &
                        SYNC_DEF.TYP<>'M'
                     ||
                        _wart:=($(SYNC_DEF.FORM))();
                        {? SYNC_DEF.TYP='N' || _wart:=form(_wart,,,'9.') ?};
                        __Synch.line(SYNC_DEF.TYP+SYNC_DEF.ACR_FLD,_wart);
                        _save:=1
                     ?}
                  ||
                     {? SYNC_DEF.REF_TAB=''
                           &
                        SYNC_DEF.TYP<>'M'
                     ||
                        _wart:=($(SYNC_DEF.FORM))();
                        {? SYNC_DEF.TYP='N' || _wart:=form(_wart,,,'9.') ?};
                        __Synch.line(SYNC_DEF.TYP+SYNC_DEF.ACR_FLD,_wart);
                        _save:=1
                     ?}
                  ?};
                  SYNC_DEF.next()
               !};
               {? _save || __Synch.save(0) ?}
            ?}
         ?}
      !}
   ?}

|? _b='add'
||
   __Synch.set_rodz(_b);
   SYNC_PD.prefix();
   {? SYNC_PD.first()
   ||
      {!
      |?
         SYNC_DEF.index('PDTAB');
         SYNC_DEF.prefix(_a,SYNC_PD.ref,'T');
         {? SYNC_DEF.first & SYNC_DEF.WGIDPUT<>'T'
         ||
            {? SYNC_DEF.TR_ADD='T' & ((SYNC_DEF.WAR_FORM<>'' & ($(SYNC_DEF.WAR_FORM))(_b)) | SYNC_DEF.WAR_FORM='')
            ||
               __Synch.set(SYNC_DEF.SYNC_PD,_b,_a);
               {!
               |?
                  {? SYNC_DEF.REF_TAB=''
                  ||
                     _wart:=($(SYNC_DEF.FORM))();
                     {? SYNC_DEF.TYP='N' || _wart:=form(_wart,,,'9.') ?};
                     __Synch.line(SYNC_DEF.TYP+SYNC_DEF.ACR_FLD,_wart)
                  ?};
                  SYNC_DEF.next()
               !};
               __Synch.save(0)
            ?}
         ?};
         SYNC_PD.next
      !}
   ?}

|? _b='del'
||
   _tab_synch:=_d;
   _tab_size:=obj_len(_tab_synch);
   {!
   |?
      _tab_synch[_tab_size].save(_tab_synch[_tab_size].sync_def);
      _tab_size-=1;
      _tab_size<>0
   !}
?};
''


\ae_sync_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: po edycji akronimu tabeli
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? fld<>''
|| _wyn:=exec('lista_tabel','synchro',fld);
   {? _wyn=0
   || FUN.info('Podano nieprawidłowy akronim tabeli.'@)
   ?}
|| __CHK.record(SYNC_DEF,,'ACR_FLD')
?};
{? _wyn
||
   exec('ae_syncfld','synchro')
?};
_wyn


\f3_synctab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: wyswietlenie tabel na F3
::----------------------------------------------------------------------------------------------------------------------
_acr:=exec('sel_tabel','synchro',fld);
{? _acr<>''
|| _acr
|| fld
?}


\f3_reftab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS: wyswietlenie tabel na F3 zdefiniowanych w synchro
::----------------------------------------------------------------------------------------------------------------------
_acr:=exec('sel_tabelsyn','synchro',fld);
{? _acr<>''
|| _acr
|| fld
?}


\f3_reffld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS: wyświetlenie listy pól
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
''


\lista_tabel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: przygotowanie listy tabel systemu
::   WE: [_a] - akronim do sprawdzenia
::   WY: gdy podano akronim to wynik spr czy akronim istnieje, jezeli nie to uchwyt do tabeli
::----------------------------------------------------------------------------------------------------------------------
_tab:=sql('select \'        \' as ACR,
           \'                                                            \' as NAZ from FIRMA where 1=0');

_lista:='SYSLOG,SYSBLOB,MEMO,SYSMEMO,';
{! _ndx:=1..tab_num
|! {? tab_real(_ndx)
   || _acr:=tab_acr(_ndx);
      {? _lista*(','+_acr+',')=0
      ||
         _comment:=($(_acr+'.comment'))();
         _tab.blank(1);
         _tab.ACR:=_acr;
         _tab.NAZ:=_comment;
         _tab.add(1)
      ?}
   ?}
!};
_tab.index(_tab.ndx_tmp('',,'ACR',,,'ACR',,));
{? _
||
   _tab.prefix(_a,_a);
   _tab.first
|| _tab
?}


\lista_tabelsyn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS: lista tabel używana w aktualnym SYNC_DEF
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tb:=exec('lista_tabel','synchro');
_list:=sql('select distinct A.* from SYNC_DEF D join :_a A using(A.ACR,D.ACR_TAB) where D.SYNC_PD=\'%1\''[$SYNC_DEF.SYNC_PD],_tb);
_list.index(_list.ndx_tmp('',,'ACR',,,'ACR',,));
{? _
||
   _list.prefix(_a,_a);
   _list.first
||
   _list
?}


\sel_tabelsyn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('lista_tabelsyn','synchro');
_win_sel:=_tab.mk_sel('Lista tabel'@,'N',,'#kloitdnappawsf',,,,,'U','T');
_tab.win_fld(_win_sel,,'ACR',,,10,,,'Akronim'@);
_tab.win_fld(_win_sel,,'NAZ',,,60,,,'Opis'@);
_tab.win_act(_win_sel,0,'Formuła','&Wybierz'@@,,,"sel_exit();1",,1,,,,'W');
_tab.win_act(_win_sel,0,'Szukaj');
_tab.win_sel(_win_sel);
_tab.prefix();
_tab.find_key(_a);
{? _tab.select(,1,10)
|| _tab.ACR
|| ''
?}


\sel_tabel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: przygotowanie listy tabel systemu
::   WE: _a - akronim tabeli
::   WY: akronim tabeli / ''
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('lista_tabel','synchro');
_win_sel:=_tab.mk_sel('Lista tabel'@,'N',,'#kloitdnappawsf',,,,,'U','T');
_tab.win_fld(_win_sel,,'ACR',,,10,,,'Akronim'@);
_tab.win_fld(_win_sel,,'NAZ',,,60,,,'Opis'@);
_tab.win_act(_win_sel,0,'Formuła','&Wybierz'@@,,,"sel_exit();1",,1,,,,'W');
_tab.win_act(_win_sel,0,'Szukaj');
_tab.win_sel(_win_sel);
_tab.prefix();
_tab.find_key(_a);
{? _tab.select(,1,10)
|| _tab.ACR
|| ''
?}


\ae_syncfld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: po edycji pola tabeli
::----------------------------------------------------------------------------------------------------------------------
{? (SYNC_DEF.ACR_TAB<>'' & ~-SYNC_DEF.ACR_TAB=SYNC_DEF.ACR_TAB)
   & (SYNC_DEF.ACR_FLD<>'' & ~-SYNC_DEF.ACR_FLD=SYNC_DEF.ACR_FLD)
   & SYNC_DEF.FORM='' & SYNC_DEF.REF_TAB=''
||
   SYNC_DEF.FORM:=SYNC_DEF.ACR_TAB+'.'+SYNC_DEF.ACR_FLD
?};
1


\wysl_sync
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: akcja wysłania definicji w zależności od kontekstu miejsca wywołania
::----------------------------------------------------------------------------------------------------------------------
{? SYNC_DEF.ACR_TAB<>''
|| exec('wysl_sync_tab','synchro',1,1)
|| exec('wysl_sync_all','synchro')
?}


\wysl_sync_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: akcja wysłania wszystkich definicji
::   WE: [_a] - akronim nagłówka, domyslnie brak (pytania etc.)
::       [_b] - numer replikacji, domyślnie brak-0
::----------------------------------------------------------------------------------------------------------------------
_echo:=~(_=2);

{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};


{? _a=''
|| _acr_tab:=SYNC_DEF.ACR_TAB;
   _tab:=sql('select distinct
                SYNC_DEF.ACR_TAB
              from SYNC_DEF
                join SYNC_PD
              where SYNC_PD.SYM=\':_a\' and SYNC_DEF.ACR_TAB<>\'\' and SYNC_DEF.AKT=\'T\'
              order by SYNC_DEF.ACR_TAB ',SYNC_DEF.SYNC_PD().SYM);
   _wyb:=FUN.choice('Czy chcesz wysłać wszystkie dane dla przeznaczenia danych: %1?'@[SYNC_DEF.SYNC_PD().SYM]
          ,,'Możliwy wybór masek'@,'Wszystkie maski'@)
|| _acr_tab:='';
   _tab:=sql('select distinct
                SYNC_DEF.ACR_TAB
              from SYNC_DEF
                join SYNC_PD
              where SYNC_PD.SYM=\':_a\' and SYNC_DEF.ACR_TAB<>\'\' and SYNC_DEF.AKT=\'T\'
              order by SYNC_DEF.ACR_TAB ',_a);
   _wyb:=2;
   SYNC_DEF.index('TREE');
   SYNC_DEF.prefix(0,_a);
   SYNC_DEF.first()
?};
:usuniecie wcześniejszych danych z synchro
{? _wyb=2 &(exec('size_sync','synchro')>0)
||
   _wyb_s:=FUN.ask('Czy chcesz usunąć wcześniejsze zapisy: %1?'@[SYNC_DEF.SYNC_PD().SYM]);
   {? _wyb_s
   ||
      exec('del_sync','synchro')
   ?}
?};

VAR_DEL.delete('__wybmsk','__wysall');
__wybmsk:=_wyb;
__wysall:=0;
{? _tab.first & _wyb>0
|| {!
   |? SYNC_DEF.ACR_TAB:=_tab.ACR_TAB;
      {? _echo || exec('wysl_sync','synchro',__wysall,__wybmsk) || exec('wysl_sync','synchro',__wysall,__wybmsk,_b) ?};
      _tab.next
   !}
?};
VAR_DEL.delete('__wybmsk','__wysall');
SYNC_DEF.ACR_TAB:=_acr_tab;
''


\wysl_sync_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: wysyła dane z bieżącej tabeli to tabeli synchronizacji
::   WE: _a - czy pytać 1 tak, 0 nie
::       _b - czy pytać o wybór masek =1 tak, <>1 nie
::       [_c] - numer replikacji 0-brak
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};

{? var_pres('__wysall')=type_of(0) || _a:=__wysall ?};
{? var_pres('__wybmsk')=type_of(0) || _b:=__wybmsk ?};

_echo:=~(_=3);

{? {? _a=1
   || FUN.ask('Czy chcesz wysłać dane z tabeli: %1\n'
              'dla przeznaczenia danych: %2?'@[SYNC_DEF.ACR_TAB,SYNC_DEF.SYNC_PD().SYM])
   || 1
   ?}
||
   {? exec('spr_upr_tab','synchro',SYNC_DEF.ACR_TAB)
   ||
      SYNC_DEF.cntx_psh();
      SYNC_PD.cntx_psh();
      _pd:=SYNC_DEF.SYNC_PD;
      _tab:=SYNC_DEF.ACR_TAB;

      SYNC_DEF.index('PDTAB');
      SYNC_DEF.prefix(_tab,_pd,'T');
      {? ~SYNC_DEF.first()
      ||
         {? _a=1 & _echo
         || FUN.info('Tabela %1 nie jest aktywna,\nwysłanie danych nie jest możliwe.'@[SYNC_DEF.ACR_TAB])
         ?}

      |? SYNC_DEF.WGIDPUT='T'
      ||
         SYNCNIDP.cntx_psh();
         SYNCNIDP.index('ACR');
         SYNCNIDP.prefix(REF.FIRMA().SYMBOL,SYNC_DEF.SYNC_PD,_tab);
         _loop:=SYNCNIDP.first();
         {!
         |? _loop
         |!
            _loop:=SYNCNIDP.del()
         !};
         SYNCNIDP.cntx_pop()
      ||
::       mozliwosc wyboru masek do exportu
         _maski:=($(_tab+'.names()'))();
         {? _maski.size>1
         ||
            VAR_DEL.delete('__zazmsk');
            _win_sel:=_maski.mk_sel('Maski tabeli'@,'N',,'laswyndiopnsfya');

            _maski.win_fld(_win_sel,,'NAME',,,20,,,'Nazwa dyskowa'@);
            _maski.win_fld(_win_sel,,'SIZE',,,5,,,'Ilość rekordów'@);

            _maski.win_act(_win_sel,0,'Okienko',,,,"cur_tab.first();cur_tab.for_each(\"sel_add\");cur_tab.first();''");
            _maski.win_act(_win_sel,0,'Formuła','&Akceptuj'@@,,,
                  ,"{? cur_tab.sel_size=0 || sel_add();__zazmsk:=cur_tab.sel_aget();sel_exit || 1 ?}"
                  ,1,1,"__zazmsk:=cur_tab.sel_aget()","sel_exit",'A');

            _maski.win_sel(_win_sel);

::          zaznacznie wszystkich masek
            {? _b=1
            || _maski.select()
            || {? _maski.first
               ||
                  __zazmsk:=tab_tmp(1,'REF','INTEGER','Ref');
                  __zazmsk.prefix();
                  {!
                  |?
                     __zazmsk.REF:=#_maski.ref;
                     __zazmsk.add();
                     _maski.next()
                  !}
               ?}
            ?};

            {? var_pres('__zazmsk')>100 & __zazmsk.size>0
            ||
               {? __zazmsk.first
               ||
                  {!
                  |?
                     {? _maski.seek(__zazmsk[1],)
                     || {? _c<>0 & _maski.size()>1
                        || exec('open','open_tab',(1+(_maski[1]+3)),form((date()~1)-2000,-2,0,'99'))
                        ?};
                        ($(_tab+'.cntx_psh()'))();
                        ($(_tab+'.use('''+_maski[1]+''')'))();
                        ($(_tab+'.prefix()'))();
                        {? ($(_tab+'.first()'))()
                        ||
                           _mi:=($(_tab+'.size()'))(); _tp:=time(); _li:=0;
                           PROGRESS.set(_mi,'tabela: '@+_tab,'Wymiana danych z innymi systemami'@);
                           {!
                           |?
                              _li+=1;
                              _tb:=time;
                              {? _echo || PROGRESS.next() ?};
                              SYNC_DEF.index('PDTAB');
                              SYNC_DEF.prefix(_tab,_pd,'T');
                              {? SYNC_DEF.first
                              ||
                                 {? (SYNC_DEF.WAR_FORM<>'' & ($(SYNC_DEF.WAR_FORM))())=1 | SYNC_DEF.WAR_FORM=''
                                 ||
                                    _sav_b:=1;
                                    __Synch.set(_pd,'add',_tab);
                                    {!
                                    |?
                                       _ok:=1;
                                       on_error(3);no_msg(1);
                                       _wart:=($(SYNC_DEF.FORM))();
                                       no_msg();
                                       {? in_error()
                                       || _ok:=0;
                                          _sav_b:=0;
                                          {? _echo || FUN.info('Wystąpił błąd w formule.'@) ?};
                                          ($(_tab+'.last()'))()
                                       ?};
                                       on_error();
                                       _typ:=type_of(_wart);
                                       {? _ok & ((_typ=1 | _typ=2 | _typ=4) | SYNC_DEF.REF_TAB<>'')
                                       || {? SYNC_DEF.TYP='N' || _wart:=form(_wart,,,'9.') ?};
                                          {? SYNC_DEF.REF_TAB='' || __Synch.line(SYNC_DEF.TYP+SYNC_DEF.ACR_FLD,_wart) ?}
                                       |? _ok
                                       || _sav_b:=0;
                                          {? _echo
                                          || FUN.info('Nieprawidłowy typ zwracany przez formułę.'@);
                                             ($(_tab+'.last()'))()
                                          ?}
                                       ?};
                                       SYNC_DEF.next()
                                    !};
                                    {? _sav_b=1 || __Synch.save(_c) ?}
                                 ?}
                              ?};
                              ($(_tab+'.next()'))()
                           !};
                           PROGRESS.close()
                        ?};
                        ($(_tab+'.cntx_pop()'))()
                     ?};
                     __zazmsk.next()
                  !}
               ?}
            ?}
         || {? _c<>0 & _maski.size()>1
            || exec('open','open_tab',(1+(_maski[1]+3)),form((date()~1)-2000,-2,0,'99'))
            ?};
            ($(_tab+'.cntx_psh()'))();
            ($(_tab+'.use('''+_maski[1]+''')'))();
            ($(_tab+'.prefix()'))();
            {? ($(_tab+'.first()'))()
            ||
               _mi:=($(_tab+'.size()'))(); _tp:=time(); _li:=0;
               PROGRESS.set(_mi,'tabela: '@+_tab,'Wymiana danych z innymi systemami'@);
               {!
               |?
                  _li+=1;
                  _tb:=time;
                  {? _echo || PROGRESS.next() ?};
                  SYNC_DEF.index('PDTAB');
                  SYNC_DEF.prefix(_tab,_pd,'T');
                  {? SYNC_DEF.first
                  ||
                     {? (SYNC_DEF.WAR_FORM<>'' & ($(SYNC_DEF.WAR_FORM))())=1 | SYNC_DEF.WAR_FORM=''
                     ||
                        __Synch.set(_pd,'add',_tab);
                        {!
                        |?
                           _ok:=1;
                           on_error(3);no_msg(1);
                           _wart:=($(SYNC_DEF.FORM))();
                           no_msg();
                           {? in_error() || _ok:=0;FUN.info('Wystąpił błąd w formule.'@);($(_tab+'.last()'))() ?};
                           on_error();
                           _typ:=type_of(_wart);
                           {? _ok & (_typ=1 | _typ=2 | _typ=4 | _typ=4)
                           ||
                              {? SYNC_DEF.TYP='N' || _wart:=form(_wart,,,'9.') ?};
                              {? SYNC_DEF.REF_TAB='' || __Synch.line(SYNC_DEF.TYP+SYNC_DEF.ACR_FLD,_wart) ?}
                           |? _ok & _echo
                           ||
                              FUN.info('Nieprawidłowy typ zwracany przez formułę.'@);($(_tab+'.last()'))()
                           ?};
                           SYNC_DEF.next()
                        !};
                        __Synch.save(_c)
                     ?}
                  ?};
                  ($(_tab+'.next()'))()
               !};
               PROGRESS.close()
            ?};
            ($(_tab+'.cntx_pop()'))()
         ?}
      ?};

      SYNC_PD.cntx_pop();
      SYNC_DEF.cntx_pop()
   || {? _echo
      || FUN.info('Ustawione uprawnienia do danych uniemożliwiają użycia funkcji.\n\n'
                  'Wysłanie danych z tabeli ''%1'' niemożliwe.'@[SYNC_DEF.ACR_TAB])
      ?}
   ?}
?};
echo();
prgs_clr();
''


\del_sync_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: usuwanie rekordu oraz pol tabeli
::----------------------------------------------------------------------------------------------------------------------
_tab:=SYNC_DEF.sel_aget();
SYNC_DEF.sel_adel();
_zaz:=_tab.first();

SYNC_DEF.cntx_psh();
{? {? _zaz || FUN.ask('Czy usunąć zaznaczone definicje?'@) || FUN.ask('Czy usunąć daną definicję?'@) ?}
|| {!
   |? {? ~_zaz | (_zaz & (SYNC_DEF.prefix(); SYNC_DEF.seek(_tab.REF,)))
      || VAR_DEL.delete('__syncpd','__acrtab');
         _usunfld:=
         "
            SYNC_DEF.cntx_psh();
            SYNC_DEF.index('PDACR');
            SYNC_DEF.prefix(__syncpd,__acrtab,__acrtab);
            {? ~SYNC_DEF.first()
            ||
               SYNC_FLD.cntx_psh();
               SYNC_FLD.index('NR');
               SYNC_FLD.prefix(__syncpd,__acrtab,__acrtab);
               {? SYNC_FLD.first()
               ||
                  {! |? SYNC_FLD.del() !}
               ?};
               SYNC_FLD.cntx_pop();

               SYNC.cntx_psh();
               SYNC.index('SYNC_PD');
               SYNC.prefix(__syncpd,__acrtab,__acrtab);
               {? SYNC.first()
               ||
                  {! |? SYNC.del() !}
               ?};
               SYNC.cntx_pop()
            ?};
            SYNC_DEF.cntx_pop()
         ";

         do();
         _rekord:=#SYNC_DEF.ref;
         SYNC_DEF.cntx_psh();
         SYNC_DEF.index('TREE');
         SYNC_DEF.prefix(_rekord);
         {? SYNC_DEF.first
         ||
            {!
            |?
               __syncpd:=SYNC_DEF.SYNC_PD;
               __acrtab:=SYNC_DEF.ACR_TAB;
               _del:=SYNC_DEF.del();
               _usunfld();
               _del
            !}
         ?};
         SYNC_DEF.cntx_pop();

         __syncpd:=SYNC_DEF.SYNC_PD;
         __acrtab:=SYNC_DEF.ACR_TAB;
         {? SYNC_DEF.del(,1)<>0
         ||
            _usunfld()
         ?};
         end();
         VAR_DEL.delete('__syncpd','__acrtab')
      ?};
      {? _zaz || _tab.next() || 0 ?}
   !}
?};
obj_del(_tab);
SYNC_DEF.cntx_pop();
''


\be_sync_fld_lp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: Formula przed redakcja pola LP
::----------------------------------------------------------------------------------------------------------------------
{? SYNC_DEF.LP=0 & SYNC_DEF.ACR_TAB<>'' & 1+(-menu_txt)<>'p'
||
   _lp:=0;
   SYNC_DEF.cntx_psh();
   SYNC_DEF.index('PDACR');
   SYNC_DEF.prefix(SYNC_DEF.SYNC_PD,SYNC_DEF.ACR_TAB,SYNC_DEF.ACR_TAB);
   {? SYNC_DEF.last()
   ||
      _lp:=SYNC_DEF.LP+1
   ||
      _lp:=1
   ?};
   SYNC_DEF.cntx_pop();
   SYNC_DEF.LP:=_lp
?};
1


\spr_upr_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: Kontroluje ochrony dla podanej tabeli oraz jej pol
::   WE: _a - akronim tabeli
::   WY: 1 - nie ma zalozonych ochron, 0 - zalozono ochrony na tabele lub pola
::----------------------------------------------------------------------------------------------------------------------
1


\zn_firma_sync
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [1210]
:: OPIS: zmiana znacznika czy dane dotyczą firmy lub czy są globalne
::----------------------------------------------------------------------------------------------------------------------
SYNC_DEF.cntx_psh();
SYNC_DEF.index('PDACR');
SYNC_DEF.prefix(SYNC_DEF.SYNC_PD,SYNC_DEF.ACR_TAB,SYNC_DEF.ACR_TAB);
{? SYNC_DEF.first()
||
   SYNC_FIR.cntx_psh();
   SYNC_FIR.win_sel('WER');
   SYNC_FIR.index('PDTAB');
   SYNC_FIR.prefix(SYNC_DEF.SYNC_PD,SYNC_DEF.ACR_TAB,SYNC_DEF.ACR_TAB);
   _default:=
      {? SYNC_DEF.FIR='T'
      || 1
      |? SYNC_DEF.FIR='N'
      || {? SYNC_FIR.first() || 3 || 2 ?}
      |? SYNC_DEF.FIR='F'
      || 4
      ?};
   _odp:=FUN.choice(
      'Wybierz opcję:                                        '
      '\n1 - (T) Jedna firma bez ____                        '
      '\n2 - (N) Wszystkie firmy w ____                      '
      '\n3 - (N) Wszystkie firmy w ____ + w wybranych firmach'
      '\n4 - (F) Wszystkie firmy bez ____                    '@
      ,_default
      ,'1','2','3','4');
   _continue:=1;
   {? _odp=3
   ||
      _loop:=1;
      {!
      |? _loop
      |!
         SYNC_FIR.select();
         {? SYNC_FIR.first() || _loop:=0 ?};
         {? _loop
         ||
            _loop:=_continue:=FUN.ask('Nie wskazano żadnej firmy. Wybrane ustawienie nie będzie zapamiętane.'
               '\nCzy powrócić do wyboru firmy?'@)
         ?}
      !}
   ||
      _loop:=SYNC_FIR.first(); {! |? _loop |! _loop:=SYNC_FIR.del() !}
   ?};
   SYNC_FIR.cntx_pop();
   {? _continue>0
   ||
      do();
      {!
      |?
         {? _odp=1
         || SYNC_DEF.FIR:='T'
         |? _odp=2 | _odp=3
         || SYNC_DEF.FIR:='N'
         |? _odp=4
         || SYNC_DEF.FIR:='F'
         ?};
         SYNC_DEF.put();
         SYNC_DEF.next
      !};
      end()
   ?}
?};
SYNC_DEF.cntx_pop();
SYNC_DEF.get();
''


\bl_sync_fir_pd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [1210]
:: OPIS: blank dla pola firma
::----------------------------------------------------------------------------------------------------------------------
SYNC_PD.ref


\bl_sync_firacrt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [1210]
:: OPIS: blank dla pola acr_tab
::----------------------------------------------------------------------------------------------------------------------
SYNC_FLD.ACR_TAB


\ae_sync_firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [1210]
:: OPIS: po edycji pola firma
::   WY: czy mozna zakonczyc edycje pola
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? __CHK.record(SYNC_FIR,,'FIRMA')<>''
|| _wyn:=0
|? SYNC_FIR.FIRMA().TYP='W'
|| FUN.info('Nie można wybrać firmy do wyłączeń.'@)
|| _wyn:=1
?};
_wyn


\sync_repl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [17.00]
:: OPIS: definiowanie replikacji
::----------------------------------------------------------------------------------------------------------------------
SYNC_REP.win_sel('WER');
SYNC_REP.index('PD');
SYNC_REP.prefix(SYNC_PD.ref);
SYNC_REP.select(,,,{? SYNC_DEF.REKORD || '' || 'Z' ?});
SYNC_DEF.get();
''


\warunek_sync
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [17.00]
:: OPIS: zmiana warunku decydującego o zapisie do SYNC
::----------------------------------------------------------------------------------------------------------------------
SYNC_DEF.cntx_psh();
SYNC_DEF.index('PDACR');
SYNC_DEF.prefix(SYNC_DEF.SYNC_PD,SYNC_DEF.ACR_TAB,SYNC_DEF.ACR_TAB);
{? SYNC_DEF.first()
||
   _war:='';
   SYNC_DEF.win_edit('WAR');
   {? SYNC_DEF.edit()
   || _war:=SYNC_DEF.WAR_FORM;
      _rep:=SYNC_DEF.FLD_REP;
      _wgidput:=SYNC_DEF.WGIDPUT;
      do();
      {!
      |? SYNC_DEF.WAR_FORM:=_war;
         SYNC_DEF.FLD_REP:=_rep;
         SYNC_DEF.WGIDPUT:=_wgidput;
         SYNC_DEF.put();
         SYNC_DEF.next
      !};
      end()
   ?}
?};
SYNC_DEF.cntx_pop();
SYNC_DEF.get();
''


\pwfldrep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: przed wyswietleniem SYNC_DEF.FLD_REP
::---------------------------------------------------------------------------------------------------------------------

''


\prfldrep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: przed redakcja SYNC_DEF.FLD_REP
::---------------------------------------------------------------------------------------------------------------------

1


\pofldrep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: po redakcji SYNC_DEF.FLD_REP
::---------------------------------------------------------------------------------------------------------------------

1


\delsyncr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: usuwa replikacje lub zaznaczone replikacji dodatkowo usuwajac zapisy w tabeli SYNC
::---------------------------------------------------------------------------------------------------------------------

_wyn:=1;
_msk:=SYNC.names();
SYNC_REP.cntx_psh();
SYNC.cntx_psh();
SYNC_PD.cntx_psh();

_tab:=SYNC_REP.sel_aget();
SYNC_REP.sel_adel();
_tab.clear();
{? _tab.first()
|| {? FUN.ask('Czy usunąć zaznaczone replikacje?\n'
              'UWAGA. Zostaną usunięte wszystkie zapisy w tabeli synchronizacji powiązane z danymi replikacjami.'@)
   || {!
      |? {? (SYNC_REP.clear(); SYNC_REP.seek(_tab.REF,))
         || _msk.clear();
            {? _msk.first()
            || {!
               |? SYNC.use(_msk.NAME);
                  SYNC_PD.index('SYM');
                  SYNC_PD.prefix();
                  {? SYNC_PD.first()
                  || {!
                     |? SYNC.index('PDSYMNR');
                        SYNC.prefix(SYNC_PD.SYM,SYNC_REP.NR);
                        {? SYNC.first() || {! |? SYNC.del() !} ?};
                        SYNC_PD.next()
                     !}
                  ?};
                  _msk.next()
               !}
            ?};
            SYNCNIDP.cntx_psh();
            SYNCNIDP.index('REP_ACR');
            SYNCNIDP.prefix(SYNC_REP.SYNC_PD,SYNC_REP.ref());
            _loop:=SYNCNIDP.first(); {! |? _loop |! _loop:=SYNCNIDP.del() !};
            SYNCNIDP.cntx_pop();
            SYNC_REP.del()
         ?};
         _tab.next()
      !}
   ?}
|? FUN.ask('Czy usunąć replikację?\n'
           'UWAGA. Zostaną usunięte wszystkie zapisy w tabeli synchronizacji powiązane z daną replikacją.'@)
|| _msk.clear();
   {? _msk.first()
   || {!
      |? SYNC.use(_msk.NAME);
         SYNC.use(_msk.NAME);
         SYNC_PD.index('SYM');
         SYNC_PD.prefix();
         {? SYNC_PD.first()
         || {!
            |? SYNC.index('PDSYMNR');
               SYNC.prefix(SYNC_PD.SYM,SYNC_REP.NR);
               {? SYNC.first() || {! |? SYNC.del() !} ?};
               SYNC_PD.next()
            !}
         ?};
         _msk.next()
      !}
   ?};
   SYNCNIDP.cntx_psh();
   SYNCNIDP.index('REP_ACR');
   SYNCNIDP.prefix(SYNC_REP.SYNC_PD,SYNC_REP.ref());
   _loop:=SYNCNIDP.first(); {! |? _loop |! _loop:=SYNCNIDP.del() !};
   SYNCNIDP.cntx_pop();
   SYNC_REP.del()
?};
obj_del(_msk);
SYNC_REP.cntx_pop();
SYNC.cntx_pop();
SYNC_PD.cntx_pop();
~~


\gen_repl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: automatycznie generuje replikacje
::---------------------------------------------------------------------------------------------------------------------

_mob:=SYNC_DEF.SYNC_PD;
_wgnrc:=0;

SYNC_REP.cntx_psh();
EANC.cntx_psh();
EANC.index('AKT');
EANC.prefix('T');
{? EANC.first()
|| {!
   |? _wgnrc:=exec('FindInSet','#table','SYNC_REP','PDNR',EANC.NRC,_mob)=null();
      ~_wgnrc & EANC.next()
   !}
?};
{? _wgnrc
|| _opc:=FUN.choice('Automatyczna generacja replikacji.\nNależy wybrać jedną z opcji.'@,,
           'Zakres od nr .. do nr ..'@,'wg Numerów urządzeń'@)
|| _opc:=FUN.ask('Automatyczna generacja replikacji wg zakresu od nr .. do nr ..?'@)
?};
{? _opc=1
|| HELP.win_edit('SYNCREPL');
   {? HELP.edit("{? HELP.ODNR<=0 || FUN.info('Należy podać liczbę większą od zera.'@); 'ODNR'
                 |? HELP.ODNR>HELP.DONR || FUN.info('Nieprawidłowy zakres numerów.'@); 'DONR'
                 || ''
                 ?}")
   || {! _i:=HELP.ODNR..HELP.DONR
      |! {? exec('FindInSet','#table','SYNC_REP','PDNR',_i,_mob)=null()
         || SYNC_REP.clear();
            SYNC_REP.blank();
            SYNC_REP.SYNC_PD:=_mob;
            SYNC_REP.NR:=_i;
            SYNC_REP.NAZ:='Replikacja nr '+form(_i,,0,'99');
            SYNC_REP.AKT:='T';
            SYNC_REP.add(1)
         ?}
      !}
   ?}
|? _opc=2
|| EANC.index('AKT');
   EANC.prefix('T');
   {? EANC.first()
   || {!
      |? {? exec('FindInSet','#table','SYNC_REP','PDNR',EANC.NRC,_mob)=null()
         || SYNC_REP.clear();
            SYNC_REP.blank();
            SYNC_REP.SYNC_PD:=_mob;
            SYNC_REP.NR:=EANC.NRC;
            SYNC_REP.NAZ:='Urządzenie nr '+form(EANC.NRC,,0,'99');
            SYNC_REP.AKT:='T';
            SYNC_REP.add(1)
         ?};
         EANC.next()
      !}
   ?}
?};
SYNC_REP.cntx_pop();
EANC.cntx_pop();
~~


\be_sync_pd_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed redakcja pola SYNC_PD.RODZAJ
::----------------------------------------------------------------------------------------------------------------------
SYNC_PD.cntx_psh();
_zwrot:=(var_pres('tr_dan')>0 | -menu_txt()='dołącz' | (-menu_txt()='popraw' & SYNC_PD.count()=0));
SYNC_PD.cntx_pop();
_zwrot


\pr_nrrep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: przed redakcja pola SYNC_REP.NR
::   WY: 1-ok 0-nie
::---------------------------------------------------------------------------------------------------------------------
_wyn:=(1+menu_txt())<>'P';
_wyn


\chknrrep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: sprawdzenie poprawnosci pol
::   WY: ''-ok 'NR'-zle
::---------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? SYNC_REP.NR<=0
|| FUN.info('Numer replikacji musi być liczbą większą od zera.'@);
   _wyn:='NR'
|| _err:=0;
   _pd:=SYNC_REP.SYNC_PD;
   _czy:=exec('FindInSet','#table','SYNC_REP','PDNR',SYNC_REP.NR,_pd);
   {? _czy<>null() || _err:={? (1+menu_txt())='P' || _czy<>SYNC_REP.ref() || 1 ?} ?};
   {? _err
   || FUN.info('Podany numer replikacji już istnieje.\nNależy podać inny.'@);
      _wyn:='NR'
   ?}
?};
_wyn


\icon_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: ikona dla pola ACR_FLD
::   WY: symbol ikony
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('pusta','#icon');
{? __akttab<>'' & __akttab=SYNC_DEF.ACR_TAB
|| _wyn:={? SYNC_DEF.LP=1
         || 'xwin16.png:91'
         |? SYNC_DEF.AKT='T'
         || 'xwin16.png:76'
         || 'xwin16.png:171'
         ?}
?};
_wyn


\sync_def_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: aktywacja/dezaktywacja definicji wymiamy danych
::   WE: _a - 1-aktywacja 0-dezaktywacja
::----------------------------------------------------------------------------------------------------------------------
SYNC_DEF.cntx_psh();
_tab:=SYNC_DEF.sel_aget();
SYNC_DEF.sel_adel();
_tab.clear();
KOMM.init(250,100,'Kontrola poprawności mechanizmu wymiany danych.');
{? _tab.first()
|| {? {? _a
      || FUN.ask('Czy aktywować zaznaczone pola definicji mechanizmu wymiany danych?\n\n'
                 'Uwaga. Pola definicji aktualnie aktywne zostaną pominięte.'@)
      || FUN.ask('Czy dezaktywować zaznaczone pola definicji mechanizmu wymiany danych?\n\n'
                 'Uwaga. Pola definicji aktualnie nieaktywne zostaną pominięte.'@)
      ?}
   || {!
      |? {? (SYNC_DEF.clear(); SYNC_DEF.seek(_tab.REF,)) & SYNC_DEF.REKORD<>null()
         || SYNC_DEF.AKT:={? _a || 'T' || 'N' ?};
            SYNC_DEF.put(1)
         || KOMM.add('Nie można zmienić znacznika Aktywny dla definicji przeznaczenia o symbolu %1'@[SYNC_DEF.SYNC_PD().SYM],4)
         ?};
         _tab.next()
      !}
   ?}
|| {? SYNC_DEF.REKORD<>null()
    & {? (_a & SYNC_DEF.AKT='T') | (~_a & SYNC_DEF.AKT='N')
      || FUN.info({? _a || 'Pole defincji jest aktywne.'@ || 'Pole defincji jest nieaktywne.'@ ?});
         0
      |? _a
      || FUN.ask('Czy aktywować pole definicji mechanizmu wymiany danych?'@)
      || FUN.ask('Czy dezaktywować pole definicji mechanizmu wymiany danych?'@)
      ?}
   || SYNC_DEF.AKT:={? _a || 'T' || 'N' ?};
      SYNC_DEF.put(1)
   ?}
?};
{? ~KOMM.empty() || KOMM.select() ?};
SYNC_DEF.cntx_pop();
~~


\sync_fld_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: aktywacja/dezaktywacja pól tabeli dla wymiamy danych
::   WE: _a - 1-aktywacja 0-dezaktywacja
::----------------------------------------------------------------------------------------------------------------------
SYNC_FLD.cntx_psh();
_tab:=SYNC_FLD.sel_aget();
SYNC_FLD.sel_adel();
_tab.clear();
{? _tab.first()
|| {? {? _a
      || FUN.ask('Czy aktywować zaznaczone pola dla mechanizmu wymiany danych?\n\n'
                 'Uwaga. Pola aktualnie aktywne zostaną pominięte.'@)
      || FUN.ask('Czy dezaktywować zaznaczone pola dla mechanizmu wymiany danych?\n\n'
                 'Uwaga. Pola definicji aktualnie nieaktywne zostaną pominięte.'@)
      ?}
   || {!
      |? {? (SYNC_FLD.clear(); SYNC_FLD.seek(_tab.REF,))
         || SYNC_FLD.AKT:={? _a || 'T' || 'N' ?};
            SYNC_FLD.put(1)
         ?};
         _tab.next()
      !}
   ?}
|| {? {? (_a & SYNC_FLD.AKT='T') | (~_a & SYNC_FLD.AKT='N')
      || FUN.info({? _a || 'Pole jest aktywne.'@ || 'Pole jest nieaktywne.'@ ?});
         0
      |? _a
      || FUN.ask('Czy aktywować pole dla mechanizmu wymiany danych?'@)
      || FUN.ask('Czy dezaktywować pole dla mechanizmu wymiany danych?'@)
      ?}
   || SYNC_FLD.AKT:={? _a || 'T' || 'N' ?};
      SYNC_FLD.put(1)
   ?}
?};
SYNC_FLD.cntx_pop();
~~


\zakres_trigger
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: ustawienie zakresu stosowania triggerów
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
SYNC_DEF.cntx_psh();
_tab:=SYNC_DEF.sel_aget();
_sel:=0;

{? _tab.size()
|| SYNC_DEF.TR_ADD:='T';
   SYNC_DEF.TR_PUT:='T';
   SYNC_DEF.TR_DEL:='T';
   _sel:=1
|| _add:=SYNC_DEF.TR_ADD;
   _put:=SYNC_DEF.TR_PUT;
   _del:=SYNC_DEF.TR_DEL
?};
SYNC_DEF.win_edit('TRIG');
{? SYNC_DEF.edit()
|| _ok:={? ~_sel
        || SYNC_DEF.TR_ADD<>_add | SYNC_DEF.TR_PUT<>_put | SYNC_DEF.TR_DEL<>_del
        || 1
        ?};
   _add:=SYNC_DEF.TR_ADD;
   _put:=SYNC_DEF.TR_PUT;
   _del:=SYNC_DEF.TR_DEL
?};

_tabakr:=tab_tmp(2,'PD','STRING[16]','','TAB','STRING[8]','');

{? _ok
|| SYNC_DEF.sel_adel();

   _tab.clear();
   {? _tab.first()
   || {? FUN.ask('Czy ustawić nowy zakres stosowania triggerów?\n'
                 'Uwaga. Wymagane ponowne uruchomienie systemu przez wszystkich użytkowników.'@)
      || {!
         |? _akr:=SYNC_DEF.ACR_TAB;
            _pd:=SYNC_DEF.SYNC_PD;
            {? _akr=''
            || SYNC_DEF.index('PD');
               SYNC_DEF.prefix(_pd);
               {? SYNC_DEF.first()
               || {!
                  |? _akr:=SYNC_DEF.ACR_TAB;
                     {? (_tabakr.clear(); ~_tabakr.find_key($_pd,_akr,))
                     || _tabakr.blank();
                        _tabakr.PD:=$_pd;
                        _tabakr.TAB:=_akr;
                        _tabakr.add(1)
                     ?};
                     SYNC_DEF.next()
                  !}
               ?}
            || {? (_tabakr.clear(); ~_tabakr.find_key($_pd,_akr,))
               || _tabakr.blank();
                  _tabakr.PD:=$_pd;
                  _tabakr.TAB:=_akr;
                  _tabakr.add(1)
               ?}
            ?};
            _tab.next()
         !}
      ?}
   |? FUN.ask('Czy ustawić nowy zakres stosowania triggerów?\n'
              'Uwaga. Wymagane ponowne uruchomienie systemu przez wszystkich użytkowników.'@)
   || _akr:=SYNC_DEF.ACR_TAB;
      _pd:=SYNC_DEF.SYNC_PD;
      {? _akr=''
      || SYNC_DEF.index('PD');
         SYNC_DEF.prefix(_pd);
         {? SYNC_DEF.first()
         || {!
            |? _akr:=SYNC_DEF.ACR_TAB;
               {? (_tabakr.clear(); ~_tabakr.find_key($_pd,_akr,))
               || _tabakr.blank();
                  _tabakr.PD:=$_pd;
                  _tabakr.TAB:=_akr;
                  _tabakr.add(1)
               ?};
               SYNC_DEF.next()
            !}
         ?}
      || _tabakr.blank();
         _tabakr.PD:=$_pd;
         _tabakr.TAB:=_akr;
         _tabakr.add(1)
      ?}
   ?};
   _tabakr.clear;
   {? _tabakr.first()
   || {!
      |? SYNC_DEF.index('PDACR');
         SYNC_DEF.prefix(exec('FindAndGet','#table',SYNC_PD,_tabakr.PD,,,null()),_tabakr.TAB,);
         {? SYNC_DEF.first()
         || {!
            |? SYNC_DEF.TR_ADD:=_add;
               SYNC_DEF.TR_PUT:=_put;
               SYNC_DEF.TR_DEL:=_del;
               SYNC_DEF.put(1);
               SYNC_DEF.next()
            !}
         ?};
         _tabakr.next()
      !}
   ?};
   exec('usun_trigger','synchro');
   exec('ustaw_trigger','synchro')
?};
obj_del(_tab);
obj_del(_tabakr);
SYNC_DEF.cntx_pop();
~~


\chksync_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: sprawdzenie poprawności wypełnienia danych
::   WE: [_a] - 'add' / 'put' - dołączenie lub poprawa rekordu, pusty string oznacza wywołanie w systemie
::   WY: ''-ok, akronim pola - niestety ...
::----------------------------------------------------------------------------------------------------------------------
_wyn:=__CHK.record(SYNC_DEF,,'ACR_TAB','ACR_FLD','LP');
{? _wyn='' & SYNC_DEF.REF_TAB='' || _wyn:=__CHK.record(SYNC_DEF,,'FORM') || _wyn:=__CHK.record(SYNC_DEF,,'REF_FLD') ?};
_imex:=var_pres('_a')=type_of('') & (+_a)=3;
_ctrl:={? _imex
       || _a
       |? (1+menu_txt())='P'
       || 'put'
       || 'add'
       ?};
{? _imex
|| VAR_DEL.delete('__a','__pd','__tb','__tbnr','__fl');
   __a:=_ctrl;
   {? __a='put'
   || _ref:=SYNC_DEF.ref();
      SYNC_DEF.cntx_psh();
      SYNC_DEF.prefix();
      {? SYNC_DEF.seek(_ref)
      || __pd:=SYNC_DEF.SYNC_PD;
         __tb:=SYNC_DEF.ACR_TAB;
         __tbnr:=SYNC_DEF.LP;
         __fl:=SYNC_DEF.ACR_FLD
      ?};
      SYNC_DEF.cntx_pop()
   || __pd:=SYNC_DEF.SYNC_PD;
      __tb:=SYNC_DEF.ACR_TAB;
      __tbnr:=SYNC_DEF.LP;
      __fl:=SYNC_DEF.ACR_FLD
   ?}
?};
{? _wyn=''
||
   {? SYNC_DEF.LP<0
   ||
       FUN.info('Numer pola nie może być ujemny.'@);
       _wyn:='LP'
   ?};
   {? _wyn=''
   ||
      SYNC_DEF.cntx_psh();
      SYNC_DEF.index('PD');
      SYNC_DEF.prefix(SYNC_DEF.SYNC_PD,SYNC_DEF.ACR_TAB,SYNC_DEF.ACR_FLD,SYNC_DEF.ACR_FLD);
      {? {? __a='add' | (__a='put' & (__tb<>SYNC_DEF.ACR_TAB | __fl<>SYNC_DEF.ACR_FLD))|| SYNC_DEF.first() || 0 ?}
      || FUN.info('Istnieje już akronim pola dla tabeli: \"%1\".\n\nAkceptacja niemożliwa.'@[SYNC_DEF.ACR_TAB]);
         _wyn:='ACR_FLD'
      ?};
      {? _wyn=''
      ||
         SYNC_DEF.index('PDNR');
         SYNC_DEF.prefix(SYNC_DEF.SYNC_PD,SYNC_DEF.ACR_TAB,SYNC_DEF.LP);
         {? {? __a='add' | (__a='put' & (__tbnr<>SYNC_DEF.LP | __tb<>SYNC_DEF.ACR_TAB))|| SYNC_DEF.first() || 0 ?}
         || FUN.info('Istnieje już pole o podanym numerze dla tabeli: \"%1\".\n\nAkceptacja niemożliwa.'@[SYNC_DEF.ACR_TAB]);
            _wyn:='LP'
         ?}
      ?};
      SYNC_DEF.cntx_pop()
   ?};
   _wyn
?};
{? _wyn='' || _wyn:=exec('chk_fldupr','synchro') ?};
{? _wyn='' || _wyn:=exec('chk_reftab','synchro') ?};
{? _imex || VAR_DEL.delete('__a','__pd','__tb','__tbnr','__fl') ?};
_wyn


\chk_reftab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS: sprawdza poprawność wypełnienia pola REF_TAB i REF_FLD
::----------------------------------------------------------------------------------------------------------------------
::{? SYNC_DEF.REF_TAB='' || return('') ?};
::{? exec('lista_tabelsyn','synchro',SYNC_DEF.REF_TAB)
::||
::   {? exec('sel_pole','synchro',SYNC_DEF.ACR_TAB,SYNC_DEF.REF_FLD)
::   || ''
::   ||
::      FUN.info('Pole %2 nie należy do tabeli %1'@[SYNC_DEF.ACR_TAB, SYNC_DEF.REF_FLD]);
::      return('REF_FLD')
::   ?}
::||
::   FUN.info('Tabela nie jest zadeklarowana w wymianie danych'@);
::   return('REF_TAB')
::?}
''


\lista_pol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS:
::   WE: _a - akronim tabeli
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tmptab:=tab_tmp(1,'ACR','STRING[20]','ACR', 'NAZ','STRING[40]','NAZWA');
_tmptab.index(_tmptab.ndx_tmp('',,'ACR',,,'ACR',,));
_cnt:=($('%1.fld_num()'[_a]))();
{! _idx:=1 .. _cnt |!
   _tmptab.ACR:=($('%2.fld_acr(%1)'[$_idx,_a]))();
   _tmptab.NAZ:=($('%2.fld_name(%1)'[$_idx,_a]))();
   _tmptab.add()
!};
_tmptab


\sel_pole
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS: okno wyboru pola z podanej tabeli
::   WE: _a - akronim tabeli
::       _b - nazwa pola do weryfikacji (opcjonalne)
::   WY: nazwa wybranego pola
::----------------------------------------------------------------------------------------------------------------------
{? _a<>''
||
   _tab:=exec('lista_pol','synchro', _a);
   {? var_pres('_b')>0
   ||
      return(_tab.find_key(_b))
   ?};
   _win_sel:=_tab.mk_sel('Lista pól'@,'N',,'#kloitdnappawsx',,,,,'U','T');
   _tab.win_fld(_win_sel,,'ACR',,,10,,,'Akronim'@);
   _tab.win_fld(_win_sel,,'NAZ',,,60,,,'Opis'@);
   _tab.win_act(_win_sel,0,'Formuła','&Wybierz'@@,,,"sel_exit();1",,1,,,,'W');
   _tab.win_act(_win_sel,0,'Szukaj');
   _tab.win_sel(_win_sel);
   _tab.prefix();

   {? _tab.select(,1,10)
   || _tab.ACR
   || ''
   ?}
||
   ''
?}


\f3_syncpole
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS: wybor pola i tabeli
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_acr:=exec('sel_tabel','synchro','');
{? _acr<>''
||
   _fld:=exec('sel_pole','synchro', _acr);
   _acr+'.'+_fld
|| fld
?}


\chk_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: przygotowanie listy tabel systemu
::   WE: _a - akronim tabeli
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_tab:=exec('lista_tabel','synchro');
_tab.prefix();
_wyn:=_tab.find_key(_a);
_wyn


\ae_fldupr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
1


\chk_fldupr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS: sprawdza poprawność wypełniania pola FLD_UPR
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? (SYNC_DEF.SYNC_PD().SYM<>'ELASTIC') || return('') ?};
{? var_pres('_a')<0 || _fldupr:=SYNC_DEF.FLD_UPR || _fldupr:=_a ?};
_test:=0;
{? _fldupr<>''
||
  _arr:=spli_str(_fldupr,'.');
  {? obj_len(_arr)<>2
  ||
     FUN.info('Należy podać akronim tabeli i akronim pola.'@)
  ||
     {? exec('chk_tabela','synchro',_arr[1])
     ||
        {? ~(_test:=exec('sel_pole','synchro', _arr[1], _arr[2]))
        ||
            FUN.info('Nie znaleziono pola :%1.'@[_arr[2]])
        ?}
     ?}
  ?}
||
   {? (SYNC_DEF.ACR_FLD*'LNK.'=1)
   ||
:do pól LNK. nie potrzebujemy uprawnien
      _test:=1
   ||
      FUN.info('Proszę wskazać pole do kontroli uprawnień.'@)
   ?}
?};
{? ~_test || _wyn:='FLD_UPR' ?};
_wyn


\bd_lbl_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS: Przed wyswietl pola tabeli SYNC_DEF.LBL_KOL
::   WY: String koloru
::----------------------------------------------------------------------------------------------------------------------
_wyn:=SYNC_DEF.LBL_KOL+','+SYNC_DEF.LBL_KOL;
{? _wyn=','
||
    _tab:=SYNC_DEF.ACR_TAB;
    SYNC_DEF.cntx_psh();
    SYNC_DEF.index('PDTAB');
    SYNC_DEF.prefix(_tab,SYNC_PD.ref,'T');
    {? SYNC_DEF.first() ||
      {! |?
         _wyn:=SYNC_DEF.LBL_KOL;
         _next:=SYNC_DEF.next();
         _wyn='' & _next
      !}
    ?};
    SYNC_DEF.cntx_pop()
?};
_wyn


\bd_lbl_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS: Przed wyswietl pola tabeli SYNC_DEF.LBL_TAB
::   WY: String koloru
::----------------------------------------------------------------------------------------------------------------------
_wyn:=SYNC_DEF.LBL_TAB;
{? _wyn=''
||
    _tab:=SYNC_DEF.ACR_TAB;
    SYNC_DEF.cntx_psh();
    SYNC_DEF.index('PDTAB');
    SYNC_DEF.prefix(_tab,SYNC_PD.ref,'T');
    {? SYNC_DEF.first() ||
      {! |?
         _wyn:=SYNC_DEF.LBL_TAB;
         _next:=SYNC_DEF.next();
         _wyn='' & _next
      !}
    ?};
    SYNC_DEF.cntx_pop()
?};
_wyn


\f3_lbl_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS: wybór koloru pola LBL_KOL
::----------------------------------------------------------------------------------------------------------------------
_q:=exec('edit_color','#edit',SYNC_DEF.LBL_KOL);
{? _q<>''
|| SYNC_DEF.LBL_KOL:=_q
?};
~~


\lbl_kol_sync
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS: zapis koloru etykiety
::----------------------------------------------------------------------------------------------------------------------
_war:=SYNC_DEF.LBL_KOL;
{? _war='' || _war:=exec('bd_lbl_kol','synchro') ?};
SYNC_DEF.cntx_psh();
SYNC_DEF.index('PDACR');
SYNC_DEF.prefix(SYNC_DEF.SYNC_PD,SYNC_DEF.ACR_TAB,SYNC_DEF.ACR_TAB);
{? SYNC_DEF.first()
||
      {!
      |? SYNC_DEF.LBL_KOL:=_war;
         SYNC_DEF.put();
         SYNC_DEF.next
      !}
?};
SYNC_DEF.cntx_pop();
''


\lbl_tab_sync
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS: zapis etykiety tabeli
::----------------------------------------------------------------------------------------------------------------------
_war:=SYNC_DEF.LBL_TAB;
{? _war='' || _war:=exec('bd_lbl_tab','synchro') ?};
SYNC_DEF.cntx_psh();
SYNC_DEF.index('PDACR');
SYNC_DEF.prefix(SYNC_DEF.SYNC_PD,SYNC_DEF.ACR_TAB,SYNC_DEF.ACR_TAB);
{? SYNC_DEF.first()
||
      {! |?
         SYNC_DEF.LBL_TAB:=_war;
         SYNC_DEF.put();
         SYNC_DEF.next
      !}
?};
SYNC_DEF.cntx_pop();
''


\ae_reftab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.42]
:: OPIS: wyłącza wymagalność pola FORM jeśli jest wypełniona tabela dołączona
::----------------------------------------------------------------------------------------------------------------------
{? SYNC_DEF.REF_TAB<>'' || _en:='mark=0' || _en:='mark=1' ?};
SYNC_DEF.efld_opt('RED',_en,,'FORM');
~~


\del_sync
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [19.42]
:: OPIS: usuwanie zapisów w tabeli SYNC
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_NAMES:=SYNC.names;
{? _NAMES.first
||
   {!|?
      {? _NAMES.SIZE <> -1
      ||
         do();
         SYNC.cntx_psh();
         SYNC.use(_NAMES.NAME);
         SYNC.index('SYNC_PD');
         SYNC.prefix(SYNC_PD.ref());
         {? SYNC.first()
         ||
            {!|?
               SYNC.del()
            !}
         ?};
         SYNC.cntx_pop();
         end()
      ?};
      _NAMES.next
   !}
?}


\size_sync
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [19.42]
:: OPIS: sprawdza czy istnieją dane w tabeli SYNC
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_NAMES:=SYNC.names;
_dane_s:=0;
{? _NAMES.first
||
   {!|?
      {? _NAMES.SIZE <> -1
      ||
         SYNC.cntx_psh();
         SYNC.use(_NAMES.NAME);
         SYNC.index('SYNC_PD');
         SYNC.prefix(SYNC_PD.ref());
         _dane_s+=SYNC.size();
         SYNC.cntx_pop()
      ?};
      _NAMES.next
   !}
?};
_dane_s


\wgidput_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: przed redakcją SYNC_DEF.WGIDPUT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres(SYNC_DEF.ACR_TAB)=type_of(FIRMA)
||
   _Tab:=($SYNC_DEF.ACR_TAB)();
   _Tab.idput_acr()<>'' & _Tab.idadd_acr()<>''
||
   SYNC_DEF.WGIDPUT:='N';
   0
?}


\wysl_tab_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [20.14]
:: OPIS: wysyla do synchro okreslone rekordy
::   WE: _a - akronim tabeli
::       _b - tabela z refami ( pole REF )
::       _c - SYNC_PD ref
::----------------------------------------------------------------------------------------------------------------------
SYNC_DEF.cntx_psh();
_tab:=_a;
_reftab:=_b;
_echo:=0;
_mask:='';
_pd:=_c;
($(_tab+'.cntx_psh()'))();
{? _reftab.first()
||
   {!
   |?
      _xyz:='';
      _xyz:=exec('delspace','#string',_reftab.REF-8);
      ($(_tab+'.use('''+_xyz+''')'))();
      ($(_tab+'.prefix()'))();
      {? ($(_tab+'.seek(''%1'')'[_reftab.REF]))()
      ||
         _mi:=($(_tab+'.size()'))(); _tp:=time(); _li:=0;
            _li+=1;
            _tb:=time;
            SYNC_DEF.index('PDTAB');
            SYNC_DEF.prefix(_tab,_pd,'T');
            {? SYNC_DEF.first
            ||
               {? (SYNC_DEF.WAR_FORM<>'' & ($(SYNC_DEF.WAR_FORM))())=1 | SYNC_DEF.WAR_FORM=''
               ||
                  _sav_b:=1;
                  __Synch.set(_pd,'add',_tab);
                  {!
                  |?
                     _ok:=1;
                     on_error(3);no_msg(1);
                     _wart:=($(SYNC_DEF.FORM))();
                     no_msg();
                     {? in_error()
                     || _ok:=0;
                        _sav_b:=0;
                        {? _echo || FUN.info('Wystąpił błąd w formule.'@) ?};
                        ($(_tab+'.last()'))()
                     ?};
                     on_error();
                     _typ:=type_of(_wart);
                     {? _ok & ((_typ=1 | _typ=2 | _typ=4) | SYNC_DEF.REF_TAB<>'')
                     || {? SYNC_DEF.TYP='N' || _wart:=form(_wart,,,'9.') ?};
                        {? SYNC_DEF.REF_TAB='' || __Synch.line(SYNC_DEF.TYP+SYNC_DEF.ACR_FLD,_wart) ?}
                     |? _ok
                     || _sav_b:=0;
                        {? _echo
                        || FUN.info('Nieprawidłowy typ zwracany przez formułę.'@);
                           ($(_tab+'.last()'))()
                        ?}
                     ?};
                     SYNC_DEF.next()
                  !};
                  {? _sav_b=1 || __Synch.save(0) ?}
               ?}
            ?}
      ?};
      _reftab.next()
   !}
?};
($(_tab+'.cntx_pop()'))();
SYNC_DEF.cntx_pop()


\sync_mwa_fld_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Obsługa przed redakcją pól tabeli SYNC_MWA
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
_result:=1;
::{? _afld='METHOD'
::|| {? SYNC_MWA.MWAC=''
::   || _result:=0
::   ?}
::?};
{? _afld='SYNC_PD'
|| VAR1.SYNC_PDR:='I'
?};
_result


\sync_mwa_fld_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Obsługa na F3 dla pól tabeli SYNC_MWA
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
_result:=~~;

{? _afld='TAB_ACR'
|| _result:=exec('f3_synctab','synchro')

|? _afld='MWAC'
|| _tab:=files('*.mwac');
   _tab.find_key(fld());
   _wer:=_tab.mk_sel('Dostępne pliki:'@,,0,'_files_wer');
   _tab.win_fld(_wer,,'FILENAME',,,60,,,'Plik'@);
   _tab.win_act(_wer,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
   _tab.win_sel(_wer);
   {? _tab.select(,1)
   || _result:=_tab.FILENAME
   ?}

|? _afld='METHOD'
|| {? SYNC_MWA.MWAC=''
   || FUN.info('Należy podać plik definicji API (MWAC).'@)
   || _result:=exec('methods_select','#mwac',SYNC_MWA.MWAC,fld(),1)
   ?}

|? 2+_afld='F_'
|| _result:=fld();
   _exec:=exec('parse_exec','#file',fld());
   _fml:=exec('select_formula','#file',,_exec.FILE);
   {? _fml<>''
   || _fml:=gsub(_fml,'.m.fml','.fml');
      _split:=spli_str(_fml,'\\');
      {? obj_len(_split)>1
      || _result:='params_exec(\''+_split[1]+'\',\''+_split[2]-4+'\')'
      ?}
   ?}
?};

_result


\sync_mwa_fld_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Obsługa po redakcji pól tabeli SYNC_MWA
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
_result:=1;

{? _afld='TYPE'
|| exec('sync_mwa_efld_opt','synchro')

|? _afld='TAB_ACR'
|| {? fld()<>''
   || _tab:=exec('lista_tabel','synchro');
      {? ~_tab.find_key(fld())
      || FUN.info('Podano nieprawidłowy akronim tabeli.'@)
      || fld():=_tab.ACR;
         _form:=fld()+'.idput_acr()';
         {? ($_form)()='' &
            (  SYNC_MWA.TYPE=exec('mwac_type_send','synchro') |
               SYNC_MWA.TYPE=exec('mwac_type_receive','synchro') |
               SYNC_MWA.TYPE=exec('mwac_type_delete','synchro')
            )
         || FUN.info('Tabela musi posiadać pole typu %1.'@['IDPUT']);
            _result:=0
         ?}
      ?}
   ?}

|? _afld='METHOD'
|| {? fld()<>''
   || _tab:=exec('methods_table','#mwac',SYNC_MWA.MWAC);
      {? ~_tab.find_key(fld())
      || FUN.info('Podano nieprawidłową nazwę metody.'@);
         _result:=0
      || fld():=_tab.METHOD
      ?}
   ?}

|? _afld='MWAC'
|| {? SYNC_MWA.MWAC<>''
   || _filename:=SYNC_MWA.MWAC;
      {? _filename+5<>'.mwac' || _filename+='.mwac' ?};

      {? fexists(_filename, 1) <> 1
      || FUN.info(
            'Nie znaleziono pliku \'%1\' w lokalizacji wskazywanej przez plik PTH.\n%2'@
            [_filename,pth_dir(_filename)]
         );
         _result:=0
      ||
::       Sprawdzam czy nowy plik zawiera wcześniej przypisaną metodę
::         _tab:=exec('methods_table','#mwac',SYNC_MWA.MWAC);
::         {? ~_tab.find_key(SYNC_MWA.METHOD,)
::         || SYNC_MWA.METHOD:=''
::         ?}
         ''
      ?}
   || SYNC_MWA.METHOD:=''
   ?}

?};

_result


\sync_mwa_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: dodaje rekord z definicją synchronizacji z zewnętrznym API (SYNC_MWA)
::       Uwaga. W zależności od miejsca wywołania pozycja lub nagłówek
::   WE: _a - dołącz/popraw/kopiuj ('add' / 'put' / 'copy' / 'add_behind')
::----------------------------------------------------------------------------------------------------------------------
_size:=SYNC_MWA.size();
_sync:=SYNC_MWA.PARENT;
_type:=_a;
_added:=0;
VAR_DEL.delete('__type');
__type:=_type;
{? _type='put'
|| VAR1.SYNC_PD:=SYNC_MWA.SYNC_PD
?};
VAR.STRING3:='nie dotyczy błędów biznesowych'@;
_esc:=0;
_naglowek:=1;
{? _type<>'put' & _size & _sync=null()
:: & exec('FindInSet','#table','SYNC_MWA','TREE',SYNC_MWA.ref())=null()
|| _opc:=FUN.choice('Należy wybrać jedną z opcji dołączenia.'@
          ,,'Pozycja definicji %1'@[SYNC_MWA.SYNC_PD().SYM],'Nowa definicja'@);
   {? ~_opc  || _esc:=1
   |? _opc=1 || _naglowek:=0
   ?}
?};

{? _esc
|| ''
::|? _type='put' & _sync=null() & exec('FindInSet','#table','SYNC_MWA','TREE',SYNC_MWA.ref())<>null()
::|| FUN.info('Niedozwolona edycja nagłówka — definicja posiada pozycje.'@)
|? _sync=null() & _naglowek
||
:: dołączenie nagłówka definicji
   _win:='RED1';
   SYNC_MWA.win_edit(_win);
   {? _type='add' | _type='add_behind'
   || SYNC_MWA.blank();
      SYNC_MWA.memo_set(,'DESC');
      SYNC_MWA.PARENT:=null();
      SYNC_MWA.LP:=0;
      SYNC_MWA.LOGLEVEL:=2
   ?};
   {? _type='put' & _sync=null() & exec('FindInSet','#table','SYNC_MWA','TREE',SYNC_MWA.ref())<>null()
   || SYNC_MWA.efld_opt(_win,'editable=0',,'SYNC_PD');
      SYNC_MWA.efld_opt(_win,'editable=0',,'MWAC')
   || SYNC_MWA.efld_opt(_win,'editable=1',,'SYNC_PD');
      SYNC_MWA.efld_opt(_win,'editable=1',,'MWAC')
   ?};
   SYNC_MWA.efld_opt(_win,'editable=grayed',VAR,'STRING3');
   {? SYNC_MWA.edit("
         _wyn:=__CHK.record(SYNC_MWA,,'SYNC_PD','MWAC');
         {? _wyn='' & SYNC_MWA.SYNC_PD().RODZAJ<>'I'
         || FUN.info('Rodzaj przeznaczenia danych musi dotyczyć komunikacji z innymi systemami.'@);
            _wyn:='SYNC_PD'
         ?};
         {? _wyn=''
         || SYNC_MWA.cntx_psh();
            SYNC_MWA.index('PD_API');
            SYNC_MWA.prefix(SYNC_MWA.SYNC_PD);
            {? {? __type='add' | __type='add_behind' | (__type='put' & VAR1.SYNC_PD<>SYNC_MWA.SYNC_PD) || SYNC_MWA.first() || 0 ?}
            || FUN.info(
                  'Dołączono już definicję wykorzystującą przeznaczenia danych o symbolu: \"%1\".\n\n'
                  'Operacja niemożliwa.'@
                  [SYNC_MWA.SYNC_PD().SYM]
               );
               _wyn:='SYNC_PD'
            ?};
            SYNC_MWA.cntx_pop()
         ?};
         {? _wyn='' || {? ~exec('valid_formula','#field',SYNC_MWA.F_CLIENT) || _wyn:='F_CLIENT' ?} ?};
         {? _wyn='' || {? ~exec('valid_formula','#field',SYNC_MWA.F_METHOD) || _wyn:='F_METHOD' ?} ?};
         {? _wyn='' || {? ~exec('valid_formula','#field',SYNC_MWA.F_INET) || _wyn:='F_INET' ?} ?};
         {? _wyn='' || {? ~exec('valid_formula','#field',SYNC_MWA.F_INIT) || _wyn:='F_INIT' ?} ?};
         {? _wyn='' || {? ~exec('valid_formula','#field',SYNC_MWA.F_PARAM) || _wyn:='F_PARAM' ?} ?};
         {? _wyn='' || {? ~exec('valid_formula','#field',SYNC_MWA.F_PARSE) || _wyn:='F_PARSE' ?} ?};
         _wyn
      ")
   ||
      {? _type='add' | _type='add_behind'
      || _added:=SYNC_MWA.add()
      || SYNC_MWA.put()
      ?} & SYNC_MWA.memo_put(,'DESC')
   ?}
||
:: dołączenie pozycji definicji
   _pd:=SYNC_MWA.SYNC_PD;
   _mwac:=SYNC_MWA.MWAC;
   _win:='RED';
   SYNC_MWA.win_edit(_win);
   _nr:=1;
:: określenie numeru pozycji (pole LP) - jak dodaję pozycję z poziomu nagłówka to ląduje na koniec,
:: jak dodaję pozycję z poziomu innej pozycji to dołączana pozycja zajmie miejsce aktualnie zaznaczonej pozycji
   {? _type='add' | _type='copy' | _type='add_behind'
   || {? _type='add_behind'
      || _nr:=SYNC_MWA.LP+1
      |? SYNC_MWA.LP=0
      || _tree:=SYNC_MWA.ref();
         SYNC_MWA.cntx_psh();
         SYNC_MWA.index('TREE1');
         SYNC_MWA.prefix(_tree);
         {? SYNC_MWA.last()
         || _nr:=SYNC_MWA.LP+1
         ?};
         SYNC_MWA.cntx_pop()
      || _nr:=SYNC_MWA.LP
      ?}
   ?};

   {? _type='add' | _type='add_behind'
   || SYNC_MWA.blank();
      SYNC_MWA.memo_set(,'DESC');
      SYNC_MWA.LOGLEVEL:=-1
   ?};
   {? _type='add' | _type='copy' | _type='add_behind'
   || SYNC_MWA.LP:=_nr
   ?};
   {? _sync<>0
   || SYNC_MWA.PARENT:=_sync;
      SYNC_MWA.SYNC_PD:=_pd;
      SYNC_MWA.MWAC:=_mwac
   || SYNC_MWA.PARENT:=SYNC_MWA.ref();
      SYNC_MWA.SYNC_PD:=_pd;
      SYNC_MWA.MWAC:=_mwac
   ?};

::   {? SYNC_MWA.edit("exec('chksync_def','synchro')")
   exec('sync_mwa_efld_opt','synchro');
   {? SYNC_MWA.edit("
         _ref:=SYNC_MWA.ref();
         {? SYNC_MWA.TYPE=exec('mwac_type_exec','synchro')
         || _wyn:=__CHK.record(SYNC_MWA,,'METHOD')
         || _wyn:=__CHK.record(SYNC_MWA,,'TAB_ACR','METHOD')
         ?};
::       Sprawdzenie powtórzonej definicji
         {? _wyn=''
         || SYNC_MWA.cntx_psh();
            SYNC_MWA.index('PD_API');
            SYNC_MWA.prefix(SYNC_MWA.SYNC_PD,SYNC_MWA.MWAC,SYNC_MWA.METHOD,SYNC_MWA.TAB_ACR,SYNC_MWA.TYPE);
            {? ((__type='add' | __type='copy' | __type='add_behind') & SYNC_MWA.first()) | (__type='put' & SYNC_MWA.first() & SYNC_MWA.ref<>_ref )
            || FUN.info(
                  'Dołączono już pozycję wykorzystującą metodę \"%1\" obsługującą %2\ danych tabeli %3.\n\n'
                  'Operacja niemożliwa.'@
                  [SYNC_MWA.METHOD,~-SYNC_MWA.TYPE,SYNC_MWA.TAB_ACR]
               );
               _wyn:='METHOD'
            ?};
            SYNC_MWA.cntx_pop()
         ?};
::       Sprawdzenie definicji SYNCHRO:
::          dla wysyłania u usuwania musi być aktywny wpis dla danej tabeli i przeznaczenia danych
         {? _wyn='' &
            (SYNC_MWA.TYPE=exec('mwac_type_send','synchro') | SYNC_MWA.TYPE=exec('mwac_type_delete','synchro'))
         || _wyn:='TAB_ACR';
            SYNC_DEF.index('PDTAB');
            SYNC_DEF.prefix(SYNC_MWA.TAB_ACR,SYNC_MWA.SYNC_PD,'T');
            {? SYNC_DEF.first()
            || {!
               |? _wyn:='';
                  SYNC_DEF.next() & _wyn<>''
               !}
            ?};
            {? _wyn<>''
            || FUN.info(
                  'Należy wprowadzić aktywną definicję wymiany danych dla tabeli %1 i przeznaczenia danych %2.'@
                  [SYNC_MWA.TAB_ACR,SYNC_MWA.SYNC_PD().SYM]
               )
            ?}
         ?};
         {? _wyn='' || {? ~exec('valid_formula','#field',SYNC_MWA.F_CLIENT) || _wyn:='F_CLIENT' ?} ?};
         {? _wyn='' || {? ~exec('valid_formula','#field',SYNC_MWA.F_METHOD) || _wyn:='F_METHOD' ?} ?};
         {? _wyn='' || {? ~exec('valid_formula','#field',SYNC_MWA.F_INET) || _wyn:='F_INET' ?} ?};
         {? _wyn='' || {? ~exec('valid_formula','#field',SYNC_MWA.F_INIT) || _wyn:='F_INIT' ?} ?};
         {? _wyn='' || {? ~exec('valid_formula','#field',SYNC_MWA.F_PARAM) || _wyn:='F_PARAM' ?} ?};
         {? _wyn='' || {? ~exec('valid_formula','#field',SYNC_MWA.F_PARSE) || _wyn:='F_PARSE' ?} ?};
         _wyn
      ")
   ||
      {? _type='add' | _type='copy' | _type='add_behind'
      ||
::       Przypisanie numeracji
         _nr:=SYNC_MWA.LP;
         SYNC_MWA.cntx_psh();
         SYNC_MWA.index('TREE1');
         SYNC_MWA.prefix(SYNC_MWA.PARENT);
         _ok:=1;
         {? SYNC_MWA.last()
         || {!
            |?
               {? SYNC_MWA.LP<_nr
               || _ok:=0
               || SYNC_MWA.LP+=1;
                  SYNC_MWA.put()
               ?};
               _ok & SYNC_MWA.prev()
            !}
         ?};
         SYNC_MWA.cntx_pop();

         _added:=SYNC_MWA.add()
      || SYNC_MWA.put()
      ?} & SYNC_MWA.memo_put(,'DESC')
   ?}
?};
:: Renumeracja pozycji (na wypadek modyfikacji struktury w trakcie dołączania rekordu)
{? _added>0
|| exec('sync_mwa_licz','synchro',{? SYNC_MWA.PARENT<>null() || SYNC_MWA.PARENT || #SYNC_MWA.ref() ?})
?};

VAR_DEL.delete('__type');
0


\sync_mwa_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: usuwa rekord z definicją synchronizacji z zewnętrznym API (SYNC_MWA)
::       Uwaga. W zależności od miejsca wywołania pozycja lub nagłówek
::----------------------------------------------------------------------------------------------------------------------
_tab:=SYNC_MWA.sel_aget();
SYNC_MWA.sel_adel();
_zaz:=_tab.first();
_tree:=0;
{? _tab.size()=0
|| _tree:={? SYNC_MWA.PARENT<>null() || SYNC_MWA.PARENT || #SYNC_MWA.ref() ?}
?};

SYNC_MWA.cntx_psh(); SYNCFMWA.cntx_psh();
{? {? _zaz || FUN.ask('Czy usunąć zaznaczone definicje?'@) || FUN.ask('Czy usunąć daną definicję?'@) ?}
|| {!
   |? {? ~_zaz | (_zaz & (SYNC_MWA.prefix(); SYNC_MWA.seek(_tab.REF,)))
      ||
         do();
         {? SYNC_MWA.r_lock(1,1,1)
         || _rekord:=#SYNC_MWA.ref();
            SYNC_MWA.cntx_psh(); SYNCFMWA.cntx_psh();
            SYNC_MWA.index('TREE');
            SYNC_MWA.prefix(_rekord);
            {? SYNC_MWA.first()
            ||
               {!
               |?
                  SYNCFMWA.index('FIRMA');
                  SYNCFMWA.prefix(SYNC_MWA.ref());
                  {? SYNCFMWA.first()
                  || {! |? SYNCFMWA.del() !}
                  ?};
                  _del:=SYNC_MWA.del();
                  _del
               !}
            ?};
            SYNC_MWA.cntx_pop(); SYNCFMWA.cntx_pop();

            SYNCFMWA.index('FIRMA');
            SYNCFMWA.prefix(SYNC_MWA.ref());
            {? SYNCFMWA.first()
            || {! |? SYNCFMWA.del() !}
            ?};

            SYNC_MWA.del(,1)
         ?};
         end()
      ?};
      {? _zaz || _tab.next() || 0 ?}
   !};
:: Renumeracja pozycji
   {? _tree
   || exec('sync_mwa_licz','synchro',_tree)
   || exec('sync_mwa_licz','synchro')
   ?}
?};
obj_del(_tab);
SYNC_MWA.cntx_pop(); SYNCFMWA.cntx_pop();
''


\mwac_type_send
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Typ obsługi dla synchronizacji z zewnętrznym API - wysyłanie
::----------------------------------------------------------------------------------------------------------------------
'Wysyłanie'


\mwac_type_receive
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Typ obsługi dla synchronizacji z zewnętrznym API - odbieranie
::----------------------------------------------------------------------------------------------------------------------
'Odbieranie'


\mwac_type_delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Typ obsługi dla synchronizacji z zewnętrznym API - usuwanie
::----------------------------------------------------------------------------------------------------------------------
'Usuwanie'


\mwac_type_exec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Typ obsługi dla synchronizacji z zewnętrznym API - uruchomienie
::----------------------------------------------------------------------------------------------------------------------
'Uruchomienie'


\sync_mwa_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: rekord przed SYNC_MWA
::   WE: _a - parametr systemowy
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| {? SYNC_MWA.sel_size()=0
   || {? SYNC_MWA.PARENT=null()
      || SYNC_MWA.actions_grayed('WER','ATO')
      || {? SYNC_MWA.AKT='T'
         || SYNC_MWA.actions_grayed('WER','A')
         || SYNC_MWA.actions_grayed('WER','T')
         ?}
      ?}
   || SYNC_MWA.actions_grayed('WER','')
   ?}
?};
:: Ustalenie znacznika aktywności nagłówka
{? SYNC_MWA.PARENT=null()
|| _tree:=SYNC_MWA.ref();
   SYNC_MWA.cntx_psh();
   SYNC_MWA.index('TREE');
   SYNC_MWA.prefix(_tree);
   _akt:=SYNC_MWA.find_tab('first','AKT',,'=','T');
   SYNC_MWA.cntx_pop();
   {? _akt
   || SYNC_MWA.AKT:='T'
   || SYNC_MWA.AKT:='N'
   ?}
?};
::exec('rekprzed','color','SYNCD#01')
~~


\sync_mwa_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Aktywuje/Dezaktywuje rekord tabeli SYNC_MWA
::   WE: _a - STRING - [T]/N - aktywować czy dezaktywować
::----------------------------------------------------------------------------------------------------------------------
_active:={? var_pres('_a')=type_of('str') || _a || 'T' ?};
SYNC_MWA.cntx_psh();
_tab:=SYNC_MWA.sel_aget();
SYNC_MWA.sel_adel();
_tab.clear();
{? _tab.first()
|| {? {? _active='T'
      || FUN.ask('Czy aktywować zaznaczone pozycje?'@)
      || FUN.ask('Czy dezaktywować zaznaczone pozycje?'@)
      ?}
   || {!
      |? {? (SYNC_MWA.clear(); SYNC_MWA.seek(_tab.REF,)) & SYNC_MWA.PARENT<>null()
         || SYNC_MWA.AKT:=_active;
            SYNC_MWA.put(1)
         ?};
         _tab.next()
      !}
   ?}
|| {? SYNC_MWA.PARENT<>null()
    & {? (_active='T' & SYNC_MWA.AKT='T') | (~_active='N' & SYNC_MWA.AKT='N')
      || FUN.info({? _a || 'Pozycja jest już aktywna.'@ || 'Pozycja jest już nieaktywna.'@ ?});
         0
      |? _active='T'
      || FUN.ask('Czy aktywować wybraną pozycję?'@)
      || FUN.ask('Czy dezaktywować wybraną pozycję?'@)
      ?}
   || SYNC_MWA.AKT:=_active;
      SYNC_MWA.put(1)
   ?}
?};
SYNC_MWA.cntx_pop();
~~


\sync_mwa_copy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Akcja Kopiuj dla SYNC_MWA
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy utworzyć kopię zaznaczonej pozycji?'@)
|| SYNC_MWA.get();
   exec('sync_mwa_add','synchro','copy')
?}


\sync_mwa_disp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Akcja przed Wyświetl dla rekordów tabeli SYNC_MWA
::----------------------------------------------------------------------------------------------------------------------
exec('sync_mwa_efld_opt','synchro');
{? SYNC_MWA.PARENT=null()
|| SYNC_MWA.win_edit('RED1')
|| SYNC_MWA.win_edit('RED')
?};
SYNC_MWA.display();
~~


\renum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Obsluga renumeracji pozycji definicji synchronizacji z zewnętrznymi API (SYNC_MWA)
::   WE: [_a] - ''(domyślnie) - drag&drop, 'U','D','N'-akcja do przenumerowania
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (';UDN'*_a)>1 || _a || '' ?};
_result:=1;

SYNC_MWA.cntx_psh();
SYNC_MWA.index('TREE');
SYNC_MWA.prefix(SYNC_MWA.PARENT);
{? _tryb=''
|| _ref:=dnd_info('dest_record');
   {? SYNC_MWA.seek(_ref) || exec('zmien_lp','#dragdrop','LP',SYNC_MWA.index('?'),,SYNC_MWA) ?}
|| exec('zmien_lpa','#dragdrop','LP',SYNC_MWA.index('?'),,SYNC_MWA,_tryb)
?};
SYNC_MWA.cntx_pop();
SYNC_MWA.get();
_result


\sync_mwa_licz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Przenumerowuje pozycje definicji synchronizacji z zewnętrznymi API (SYNC_MWA)
::   WE: [_a] - nr rekordu nadrzędnego, jeżeli nie podano przenumerowuje całą strukturę
::----------------------------------------------------------------------------------------------------------------------
_tree:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_tab:=tab_tmp(3
   ,'NR_OLD','INTEGER','Stary numer LP'
   ,'NR_NEW','INTEGER','Nowy nr LP'
   ,'REF','STRING[16]','$SYNC_MWA.ref'
   ,'TREE','INTEGER','Ref nagłówka definicji'
);
SYNC_MWA.cntx_psh();
SYNC_MWA.index('TREE1');
{? _tree>0
|| SYNC_MWA.prefix(_tree)
|| SYNC_MWA.prefix()
?};
:: znalezienie rekordu ok którego zacznie się zmiana numeracji
{? SYNC_MWA.first()
||
   {!
   |?
::     Jeżeli nagłówek ma nr inny niż 0 to go zmieniam
      {? SYNC_MWA.PARENT=null & SYNC_MWA.LP<>0
      || _tab.NR_OLD:=SYNC_MWA.LP;
         _tab.NR_NEW:=0;
         _tab.REF:=$SYNC_MWA.ref();
         _tab.TREE:=0;
         _tab.add()
      |? SYNC_MWA.PARENT<>null
      || _tab.NR_OLD:=SYNC_MWA.LP;
         _tab.NR_NEW:=0;
         _tab.REF:=$SYNC_MWA.ref();
         _tab.TREE:=SYNC_MWA.PARENT;
         _tab.add()
      ?};
      SYNC_MWA.next()
   !}
?};
SYNC_MWA.cntx_pop();

SYNC_MWA.cntx_psh();
SYNC_MWA.index('TREE1');
SYNC_MWA.prefix();
_ndx:=_tab.ndx_tmp(,,'TREE',,,'NR_OLD',,);
_tab.index(_ndx);

:: Ustalenie nowej kolejności
{? _tab.first()
|| _atree:=_tab.TREE;
   _anr:=1;
   {!
   |?
      {? _atree<>_tab.TREE
      || _atree:=_tab.TREE;
         _anr:=1
      ?};
      {? _tab.TREE<>0
      || {? SYNC_MWA.seek(_tab.REF)
         || SYNC_MWA.LP:=_anr;
            {? SYNC_MWA.put(1) || _anr+=1 ?}
         ?}
      || {? SYNC_MWA.seek(_tab.REF)
         || SYNC_MWA.LP:=_tab.NR_NEW;
            SYNC_MWA.put(1)
         ?}
      ?};
     _tab.next()
   !}
?};
SYNC_MWA.cntx_pop();
~~


\bl_sync_pd_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Wartość domyślna pola SYNC_PD.RODZAJ
::----------------------------------------------------------------------------------------------------------------------
VAR1.SYNC_PDR


\sync_mwa_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Opcje dla pól tabeli SYNC_MWA
::----------------------------------------------------------------------------------------------------------------------
{? SYNC_MWA.TYPE=exec('mwac_type_send','synchro')
|| _enable:='1'
|| _enable:='0'
?};
SYNC_MWA.efld_opt('RED','enable=%1'[_enable],,'PACK');
{? SYNC_MWA.TYPE=exec('mwac_type_send','synchro') |
   SYNC_MWA.TYPE=exec('mwac_type_delete','synchro') |
   SYNC_MWA.TYPE=exec('mwac_type_exec','synchro')
|| _editable:='1'
|| _editable:='grayed'
?};
SYNC_MWA.efld_opt('RED','editable=%1'[_editable],,'SYNC_REP');
~~


\sync_fld_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: przed obsługą okna SYNC_DEF WER w oknie grupowym SYNC_DEF GRP
::----------------------------------------------------------------------------------------------------------------------
_ret:='';
{? grp_empty(SYNC_DEF,'WER') | SYNC_DEF.ACR_TAB='' | SYNC_DEF.WGIDPUT='T'
|| _ret:='#disable'
?};
_ret


\mwac_loglevel_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Ustawia poziom raportowania MWAC
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;

{? SYNC_MWA.sel_size()=0
|| _red:=SYNC_MWA.mk_edit('Poziom raportowania'@,0,'logleveledit'+$(SYNC_MWA.PARENT=null()));
   SYNC_MWA.win_esep(_red,'Raportowanie'@);
   {? SYNC_MWA.PARENT=null()
   || SYNC_MWA.win_efld(_red,,'LOGLEVEL',,,,,,,,,'radio-buttons',
         ,'Brak rejestrowania zdarzeń'@,"0"
         ,'Rejestrowane wyłącznie błędy'@+' *',"1"
         ,'Rejestrowane wszystkie wywołania'@,"2"
      )
   || SYNC_MWA.win_efld(_red,,'LOGLEVEL',,,,,,,,,'radio-buttons',
         ,'Brak rejestrowania zdarzeń'@,"0"
         ,'Rejestrowane wyłącznie błędy'@+' *',"1"
         ,'Rejestrowane wszystkie wywołania'@,"2"
         ,'Poziom rejestrowania bez zmian'@,"-1"
      )
   ?};
   SYNC_MWA.win_efld(_red,AH,'H',,,,,,'* '+'nie dotyczy błędów biznesowych'@);
   exec('ok_esc','#window',SYNC_MWA,_red);
   SYNC_MWA.win_edit(_red);

   {? SYNC_MWA.edit()
   || SYNC_MWA.put()
   ?}
|| {? _env.loglevel=-1 & SYNC_MWA.PARENT=0
   || KOMM.add('Dla zapisu nagłówkowego \'%1\' nie można ustawić poziomu \'bez zmian\''@[SYNC_MWA.SYNC_PD().SYM])
   || SYNC_MWA.LOGLEVEL:=_env.loglevel;
      SYNC_MWA.put()
   ?}
?};
~~


\mwac_loglevel_set_gb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Ustawia poziom raportowania MWAC - przed grupą rekordów
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;

_tab:=tab_tmp(1,'LOGLEVEL','INTEGER','Poziom raportowania'@);
_tab.LOGLEVEL:=-1;

_red:=_tab.mk_edit('Poziom raportowania'@,0,'logleveleditgrp');
_tab.win_esep(_red,'Raportowanie'@);
_tab.win_efld(_red,,'LOGLEVEL',,,,,,,,,'radio-buttons',
   ,'Brak rejestrowania zdarzeń'@,"0"
   ,'Rejestrowane wyłącznie błędy'@+' *',"1"
   ,'Rejestrowane wszystkie wywołania'@,"2"
   ,'Poziom rejestrowania bez zmian'@,"-1"
);
_tab.win_efld(_red,AH,'H',,,,,,'* '+'nie dotyczy błędów biznesowych'@);
exec('ok_esc','#window',_tab,_red);
_tab.win_edit(_red);

{? _tab.edit()
|| _env.loglevel:=_tab.LOGLEVEL;
   KOMM.init(,,'Ustawianie poziomu raportowania'@);
   _result:=1
|| _result:=0
?};

_result


\mwac_loglevel_set_ga
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Ustawia poziom raportowania MWAC - po grupie rekordów
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
~~


\sync_mwa_repl_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Redagowanie replik przypisanych do SYNC_MWA.SYNC_PD
::----------------------------------------------------------------------------------------------------------------------
SYNC_DEF.cntx_psh();
SYNC_DEF.index('PD');
SYNC_DEF.prefix(SYNC_MWA.SYNC_PD);
{? SYNC_DEF.first()
|| exec('sync_repl','synchro')
|| FUN.info(
      'Nie można redagować listy replik.\n'
      'Brak definicji wymiany danych dla przeznaczenia %1.'@[SYNC_MWA.SYNC_PD().SYM]
   )
?};
SYNC_DEF.cntx_pop();
~~


\sync_mwa_repl_order
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Porządkowanie replik w zapisach SYNC_MWA przypisanych do bieżącego węzła
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy uporządkować repliki dla zapisów przeznaczenia danych %1?'@[SYNC_MWA.SYNC_PD().SYM])
|| _tab:=tab_tmp(1
      ,'ACR','STRING[8]','Akronim'@
      ,'REPL','INTEGER','Numer repliki'@
   );
   SYNC_MWA.cntx_psh();
   SYNC_MWA.index('TREE1');
   SYNC_MWA.prefix({? SYNC_MWA.PARENT=0 || #SYNC_MWA.ref() || SYNC_MWA.PARENT ?});
   {? SYNC_MWA.first()
   || _cur_acr:='';
      _change:=1;
      {!
      |? {? SYNC_MWA.TYPE=exec('mwac_type_delete','synchro') | SYNC_MWA.TYPE=exec('mwac_type_send','synchro')
         || {? SYNC_MWA.TAB_ACR=_cur_acr
            || _change:=0
            || _cur_acr:=SYNC_MWA.TAB_ACR;
               _change:=1
            ?};
            _tab.prefix(SYNC_MWA.TAB_ACR,);
            {? _tab.first()
            || {? _change
               || _tab.REPL+=1;
                  _tab.put()
               ?}
            || _tab.ACR:=SYNC_MWA.TAB_ACR;
               _tab.REPL:=1;
               _tab.add()
            ?};
            _repl:=_tab.REPL;
            SYNC_MWA.SYNC_REP:=exec('sync_repl_ref','synchro',SYNC_MWA.SYNC_PD,_repl);
            SYNC_MWA.put()
         ?};
         SYNC_MWA.next()
      !}
   ?};
   SYNC_MWA.cntx_pop()
?};
~~


\sync_repl_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Zwraca ref() do repliki o podanym numerze dla danego SYNC_PD (jak nie ma to tworzy nową)
::   WE: _a - przeznaczenie danych SYNC_PD.ref()
::       _b - numer repliki
::   WY: SYNC_REP.ref() / null()
::----------------------------------------------------------------------------------------------------------------------
_pd:=_a;
_nr:=_b;

_res:=null();

{? _pd=null() | _nr=0 || return(_res) ?};

SYNC_REP.cntx_psh();
SYNC_REP.index('PDNR');
SYNC_REP.prefix(_pd,_nr);
{? SYNC_REP.first()
|| _res:=SYNC_REP.ref()
|| SYNC_REP.blank();
   SYNC_REP.NR:=_nr;
   SYNC_REP.AKT:='T';
   SYNC_REP.NAZ:='Replika %1'[$_nr];
   SYNC_REP.SYNC_PD:=_a;
   {? SYNC_REP.add()
   || _res:=SYNC_REP.ref()
   ?}
?};
SYNC_REP.cntx_pop();

_res


\sync_mwa_base_uri
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Wyświetla adres bazowy usługi/metody
::----------------------------------------------------------------------------------------------------------------------
_client:=exec('client','__mwac',SYNC_MWA.MWAC);
_uri:=_client.BaseUrl;

exec('edit_string','#edit',_uri,'Adres bazowy usługi'@,,,0)


\sync_mwa_result
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26_04]
:: OPIS: Obsługuje wynik przetwarzania w oknie SYNC_MWA
::----------------------------------------------------------------------------------------------------------------------
SYNCFMWA.cntx_psh();
SYNCFMWA.index('FIRMA');
SYNCFMWA.prefix(SYNC_MWA.ref(),REF.FIRMA);
{? ~SYNCFMWA.first()
|| SYNCFMWA.blank();
   SYNCFMWA.SYNC_MWA:=SYNC_MWA.ref();
   SYNCFMWA.FIRMA:=REF.FIRMA;
   SYNCFMWA.add()
?};
{? SYNCFMWA.first()
|| {? SYNCFMWA.RESULT=''
   || FUN.info(
         'W firmie %1 nie zapamiętano jeszcze wyniku przetwarzania dla %2.'@
         [__Firma,SYNC_MWA.METHOD]
      )
   || {? FUN.ask(
            'Wynik przetwarzania zapamiętany w firmie %1 dla %2.\n%3\n\nCzy wyczyścić?'@
            [__Firma,SYNC_MWA.METHOD,SYNCFMWA.RESULT]
         )
      || SYNCFMWA.RESULT:='';
         SYNCFMWA.put()
      ?}
   ?}
?};
SYNCFMWA.cntx_pop();
~~


\sync_mwa_result_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26_04]
:: OPIS: Zwraca wynik przetwarzania zachowany dla danej definicji w bieżącej firmie
::   WE: _a - SYNC_MWA.ref()
::   WY: SYNCFMWA.RESULT / ''
::----------------------------------------------------------------------------------------------------------------------
_sync_mwa:=_a;

_result:='';

{? var_pres('ID_ERP',PORTALU)=27
|| SYNCFMWA.cntx_psh();
   SYNCFMWA.prefix(_sync_mwa,REF.FIRMA);
   {? SYNCFMWA.first()
   || _result:=SYNCFMWA.RESULT
   ?};
   SYNCFMWA.cntx_pop()
|| _result:=exec('FindAndGet','#table',SYNC_MWA,_sync_mwa,,"SYNC_MWA.RESULT",'')
?};
_result


\sync_mwa_result_save
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26_04]
:: OPIS: Zachowuje wynik przetwarzania dla danej definicji w bieżącej firmie
::   WE: _a - SYNC_MWA.ref()
::       _b - [STRING] wartość do zachowania
::   WY: 0/1 - czy udało się ustawić wartość
::----------------------------------------------------------------------------------------------------------------------
_sync_mwa:=_a;
{? var_pres('_b')=type_of('') || _val2save:=_b || return(0) ?};

_result:=0;

{? var_pres('ID_ERP',PORTALU)=27
|| SYNCFMWA.cntx_psh();
   SYNCFMWA.index('FIRMA');
   SYNCFMWA.prefix(_sync_mwa,REF.FIRMA);
   {? ~SYNCFMWA.first()
   || SYNCFMWA.blank();
      SYNCFMWA.SYNC_MWA:=_sync_mwa;
      SYNCFMWA.FIRMA:=REF.FIRMA;
      _result:=SYNCFMWA.add()
   ?};
   {? SYNCFMWA.first()
   || SYNCFMWA.RESULT:=_val2save;
      _result:=SYNCFMWA.put()
   ?};
   SYNCFMWA.cntx_pop()
|| SYNC_MWA.cntx_psh();
   SYNC_MWA.prefix();
   {? SYNC_MWA.seek(_sync_mwa)
   || SYNC_MWA.RESULT:=_val2save;
      _result:=SYNC_MWA.put()
   ?};
   SYNC_MWA.cntx_pop()
?};

_result


\sync_mwa_change_mwac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Zmiana pliku definicji
::----------------------------------------------------------------------------------------------------------------------
_red:=SYNC_MWA.mk_edit('Definicja API'@,,'syncmwacwacred');
SYNC_MWA.win_efld(_red,,'MWAC',,,,,,,,,,'F3_button=1');
exec('ok_esc','#window',SYNC_MWA,_red,,,,,,,'Zapisz'@);
SYNC_MWA.efld_opt(_red,'mark=1',,'MWAC');
SYNC_MWA.win_edit(_red);
_valid:="
   __CHK.record(SYNC_MWA,,'MWAC')
";
{? SYNC_MWA.edit(_valid)
|| _mwac:=SYNC_MWA.MWAC;
   do();
   {? SYNC_MWA.put()
   ||
::    Zapis nadrzędny
      {? SYNC_MWA.PARENT<>0
      || _obj:=obj_new('MWAC'); _obj.MWAC:=_mwac;
         exec('FindAndGet','#table',SYNC_MWA,SYNC_MWA.PARENT,,"SYNC_MWA.MWAC:=_b.MWAC; SYNC_MWA.put()",~~,_obj);
         _parent:=SYNC_MWA.PARENT
      || _parent:=#SYNC_MWA.ref()
      ?};
::    Składowe definicji
      SYNC_MWA.cntx_psh();
      SYNC_MWA.index('TREE1');
      SYNC_MWA.prefix(_parent);
      {? SYNC_MWA.first()
      || {!
         |? SYNC_MWA.MWAC:=_mwac;
            SYNC_MWA.put();
            SYNC_MWA.next()
         !}
      ?};
      SYNC_MWA.cntx_pop()
   ?};
   end()
?};
~~


\time_ident
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [RR.xx]
:: OPIS: Znacznik czasowy synchronizacji danych:
::       - cofnięty o 2 sekundy w celu wyeliminowania problemów z opóźnieniami aktualizacji danych
::----------------------------------------------------------------------------------------------------------------------
_utc:=utc_get()-2;
time_ident(utc_date(_utc),utc_time(_utc))

:Sign Version 2.0 jowisz:1045 2024/02/06 19:59:17 b0d9429612c1d93e51a083b542822cb59dfbdd959e3ac9174a22e0e928e6f8dbd388f989e68fcad60a277d0d3fcb80623843b7073f2736bb5cfbcb58dcd661318e1b4a4d71db2b9ae5fa4e20c7e542205c625643fee77ec34fef0d92a7647d046773f3008a27fbae07bcb3982a2484edaec3fc7f1ed1ddde6913065cd0527b83
