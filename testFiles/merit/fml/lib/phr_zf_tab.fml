:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: phr_zf_tab.fml
:: Utworzony: 09.03.2017
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły wyzwalaczy dla tabel obszarów POC.
::======================================================================================================================


\zf_def_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZF_DEF.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZF_DEF) & exec('zf_def_chk','phr_zf_tab',0)


\zf_def_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZF_DEF.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZF_DEF*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZF_DEF) & exec('zf_def_chk','phr_zf_tab',1)


\zf_def_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZF_DEF.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zf_def_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
ZZ_PROF.cntx_psh();
ZZ_PROF.clear();
ZZ_PROF.f_set(,,'ZF_DEF=:_a',ZF_DEF.ref());
_loop:=ZZ_PROF.f_first();
{!
|? _loop
|! ZZ_PROF.ZF_DEF:=null;
   ZZ_PROF.put();
   _loop:=ZZ_PROF.f_next()
!};
ZZ_PROF.f_clear();
ZZ_PROF.cntx_pop();

exec('del_ndx','#table',ZF_POZ,'NUMER',ZF_DEF.ref()) &
exec('del_ndx','#table',ZF_WYK,'ZF_DEF',ZF_DEF.ref()) &
exec('del_ndx','#table',ZZ_KRYT,'UNIQUE',ZF_DEF.NP_DOK,ZF_DEF.ZZ_DOK)


\zf_def_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZF_DEF.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZF_DEF,_a);
~~


\zf_def_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZF_DEF.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_puta','phr_tab',ZF_DEF,_a);
~~


\zf_def_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZF_DEF.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zf_def_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.30]
:: OPIS: Sprawdza wypelnienie wymaganych pol. Wykorzystywana w wyzwalaczach przed dolacz i popraw.
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw
::  OLD: \zf_def_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZF_DEF*'CHK|'
|| return(1)
?};
_put:=var_pres('_a')=type_of(0) & _a;

__CHK.validate(ZF_DEF,
   $("_a.table(_b,"+$_put+",,'NAZWA','WIDOK')"),
   "_a.in_set(_b,'WIDOK',,'T','N')"
)


\zf_poz_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZF_POZ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
:: Zaczniemy od ustalenia liczby porządkowej. Żeby wyzwalacz działała zawsze (a nie tylko w okienku) musimy zadbać o
:: prawidłowe ustawienie środowiska.
:: Jeżeli pole formularza nie jest wypełnione (co jest mało prawdopodobne), to nie przejmujemy się tym. Formuła
:: zf_poz_chk sprawdzi to i zakomunikuje.
{? ZF_POZ.ZF_DEF
|| ZF_POZ.cntx_psh();
   ZF_POZ.index('NUMER');
   ZF_POZ.prefix(ZF_POZ.ZF_DEF);
   _lp:=ZF_POZ.size();
   ZF_POZ.cntx_pop();
   ZF_POZ.NUMER:=_lp+1
?};
exec('dok_addb','phr_tab',ZF_POZ) & exec('zf_poz_chk','phr_zf_tab',0)


\zf_poz_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZF_POZ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZF_POZ*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZF_POZ) & exec('zf_poz_chk','phr_zf_tab',1)


\zf_poz_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZF_POZ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zf_poz_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZF_WID,'TYP',ZF_POZ.NP_DOK,ZF_POZ.ZZ_DOK)


\zf_poz_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZF_POZ.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \zf_poz_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_adda','phr_tab',ZF_POZ,_a)
|| exec('copy_zf_wid','phr_dane',ZF_POZ.ZF_SKL().ZZ_DOK,ZF_POZ.ZZ_DOK)
?};
~~


\zf_poz_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZF_POZ.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_puta','phr_tab',ZF_POZ,_a);
~~


\zf_poz_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZF_POZ.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \zf_poz_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_dela','phr_tab',_a)
|| return()
?};
ZF_POZ.cntx_psh();
ZF_POZ.index('NUMER');
ZF_POZ.prefix(bfld('ZF_DEF'));
_numer:=0;
_loop:=ZF_POZ.first();
{!
|? _loop
|! _numer+=1;
   {? ZF_POZ.NUMER<>_numer
   || ZF_POZ.NUMER:=_numer;
      ZF_POZ.put()
   ?};
   _loop:=ZF_POZ.next()
!};
ZF_POZ.cntx_pop();
~~


\zf_poz_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.30]
:: OPIS: Sprawdza wypełnienie wymaganych pol. Wykorzystywana w wyzwalaczach przed dolacz i popraw.
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw
::  OLD: \zf_poz_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZF_POZ*'CHK|'
|| return(1)
?};
_put:=var_pres('_a')=type_of(0) & _a;

__CHK.validate(ZF_POZ,
   $("_a.table(_b,"+$_put+",,'ZF_DEF','LP','ZF_SKL','DOKUMENT')"),
   "{? ZF_POZ.DOKUMENT='T' || _a.record(_b,,'ZF_RPI') || 1 ?}"
)


\zf_poz_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.41]
:: OPIS: Aktualizuje wybrane uprawnienie pozycji formularza na podstawie uprawnień domyślnych.
::   WE: _a [REFERENCE] - Wskazanie na dokument źródłowy z przypisanymi domyślnymi uprawnieniami.
::       _b [REFERENCE] - Wskazanie na typ oceny i oceniającego.
::  OLD: \zf_poz_akt/zz_data.fml
:: UWAGA! Poprawność argumentów wywołania nie jest weryfikowana.
::----------------------------------------------------------------------------------------------------------------------
ZF_WID.cntx_psh();
ZF_WID.index('UNIQUE');
ZF_WID.prefix(ref_name(_a),_a);
{? ZF_WID.find_key(_b)
|| _wid:=obj_new('WYMOG_W','WYMOG_B','OCENA_W','OCENA_B','WIDOK_W','WIDOK_B','WYNIK_W','WYNIK_B');
   _wid.WYMOG_W:=ZF_WID.WYMOG_W;
   _wid.WYMOG_B:=ZF_WID.WYMOG_B;
   _wid.OCENA_W:=ZF_WID.OCENA_W;
   _wid.OCENA_B:=ZF_WID.OCENA_B;
   _wid.WIDOK_W:=ZF_WID.WIDOK_W;
   _wid.WIDOK_B:=ZF_WID.WIDOK_B;
   _wid.WYNIK_W:=ZF_WID.WYNIK_W;
   _wid.WYNIK_B:=ZF_WID.WYNIK_B
?};
ZF_WID.cntx_pop();
{? var_pres('_wid')<0
|| FUN.info('Nie znaleziono ustawień domyślnych.'@);
   return()
?};

{? ZF_WID.WYMOG_W<>_wid.WYMOG_W | ZF_WID.WYMOG_B<>_wid.WYMOG_B |
   ZF_WID.OCENA_W<>_wid.OCENA_W | ZF_WID.OCENA_B<>_wid.OCENA_B |
   ZF_WID.WIDOK_W<>_wid.WIDOK_W | ZF_WID.WIDOK_B<>_wid.WIDOK_B |
   ZF_WID.WYNIK_W<>_wid.WYNIK_W | ZF_WID.WYNIK_B<>_wid.WYNIK_B
|| {? FUN.ask('Czy na pewno zaktualizować dane na podstawie ustawień domyślnych?'@)
   || ZF_WID.WYMOG_W:=_wid.WYMOG_W;
      ZF_WID.WYMOG_B:=_wid.WYMOG_B;
      ZF_WID.OCENA_W:=_wid.OCENA_W;
      ZF_WID.OCENA_B:=_wid.OCENA_B;
      ZF_WID.WIDOK_W:=_wid.WIDOK_W;
      ZF_WID.WIDOK_B:=_wid.WIDOK_B;
      ZF_WID.WYNIK_W:=_wid.WYNIK_W;
      ZF_WID.WYNIK_B:=_wid.WYNIK_B;
      ZF_WID.put()
   ?}
|| FUN.info('Dane nie wymagają aktualizacji.'@)
?}


\zf_rpi_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZF_RPI.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZF_RPI) & exec('zf_rpi_chk','phr_zf_tab',0)


\zf_rpi_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZF_RPI.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZF_RPI*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZF_RPI) & exec('zf_rpi_chk','phr_zf_tab',1)


\zf_rpi_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZF_RPI.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zf_rpi_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
1


\zf_rpi_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZF_RPI.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZF_RPI,_a);
~~


\zf_rpi_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZF_RPI.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_puta','phr_tab',ZF_RPI,_a);
~~


\zf_rpi_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZF_RPI.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zf_rpi_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.30]
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::       [_b] [NUMBER] - Pomijanie komunikatów:
::             0 - Nie [domyślnie];
::             1 - Tak.
:: OPIS: Sprawdza wypełnienie wymaganych pol. Wykorzystywana w wyzwalaczach przed dolacz i popraw.
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZF_RPI*'CHK|'
|| return(1)
?};
_put:=var_pres('_a')=type_of(0) & _a;
_nomsg:={? var_pres('_b')=type_of(0) & _b || '1' || '' ?};
__CHK.validate(ZF_RPI,$("_a.table(_b,"+$_put+","+_nomsg+",'NAZWA','SZABLON','SZABLON2')"))


\zf_skl_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZF_SKL.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zf_skl_modb','phr_zf_tab') & exec('dok_addb','phr_tab',ZF_SKL) & exec('zf_skl_chk','phr_zf_tab',0)


\zf_skl_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZF_SKL.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZF_SKL*'PUTB|'
|| return(1)
?};
exec('zf_skl_modb','phr_zf_tab') & exec('dok_putb','phr_tab',ZF_SKL) & exec('zf_skl_chk','phr_zf_tab',1)


\zf_skl_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZF_SKL.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZF_RPI,'NAZWA',ZF_SKL.ref()) &
exec('del_ndx','#table',ZF_WID,'TYP',ZF_SKL.NP_DOK,ZF_SKL.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPK,'WARTOSC',ZF_SKL.NP_DOK,ZF_SKL.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPS,'WARTOSC',ZF_SKL.NP_DOK,ZF_SKL.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPZ,'UNIQUE',ZF_SKL.NP_DOK,ZF_SKL.ZZ_DOK)


\zf_skl_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZF_SKL.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \zf_skl_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_adda','phr_tab',ZF_SKL,_a)
|| {? ZF_SKL.STALY<>'T'
::    Element statyczny nie posiada uprawnień.
   || exec('copy_zf_wid','phr_dane',null(),ZF_SKL.ZZ_DOK);
      {? ZF_SKL.WALIDUJ='N'
      || exec('zf_wid_set','phr_zf_tab',ZF_SKL.ZZ_DOK,'WYMOG_W','N');
         exec('zf_wid_set','phr_zf_tab',ZF_SKL.ZZ_DOK,'WYMOG_B','T')
      ?}
   ?};
   ZF_RPI.cntx_psh();
   ZF_RPI.prefix();
   ZF_RPI.blank();
   ZF_RPI.NAZWA:='Standard';
   {? exec('zf_rpi_chk','phr_zf_tab',0,1)
   || ZF_RPI.add()
   ?};
   ZF_RPI.cntx_pop();
   exec('za_met_add','phr_tab',ZF_SKL)
?};
~~


\zf_skl_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZF_SKL.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \zf_skl_ap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_puta','phr_tab',ZF_SKL,_a)
|| return()
?};

exec('za_met_mod','phr_tab',ZF_SKL);

_set:="
   ZF_POZ.cntx_psh();
   ZF_POZ.index('FK_SKL');
   ZF_POZ.prefix(_a);
   _loop:=ZF_POZ.first();
   {!
   |? _loop
   |! exec('zf_wid_set','phr_zf_tab',ZF_POZ.ZZ_DOK,_c,_d);
      _loop:=ZF_POZ.next()
   !};
   ZF_POZ.cntx_pop();
   exec('zf_wid_set','phr_zf_tab',_b,_c,_d);
   ~~
";

_zf_wid_new:=0;
: jeśli zmieniono element na statyczny,
: to wylącz znaczniki edytowania w widoku
{? ZF_SKL.STALY<>bfld('STALY')
|| {? ZF_SKL.STALY='T'
   || ZF_SKL.WALIDUJ:='N';
::    Element stał się statyczny - należy usunąć uprawnienia ...
      exec('del_ndx','#table',ZF_WID,'TYP',ZF_SKL.NP_DOK,ZF_SKL.ZZ_DOK);
::    ... również we wszystkich pozycjach formularzy utworzonych na podstawie bieżącego składnika.
      ZF_POZ.cntx_psh();
      ZF_POZ.f_clear();
      ZF_POZ.index('FK_SKL');
      ZF_POZ.prefix(ZF_SKL.ref());
      {? ZF_POZ.first()
      || {!
         |? exec('del_ndx','#table',ZF_WID,'TYP',ZF_POZ.NP_DOK,ZF_POZ.ZZ_DOK);
            ZF_POZ.next()
         !}
      ?};
      ZF_POZ.cntx_pop()
::    Element przestał być statyczny - należy uzupełnić uprawnienia.
   || exec('copy_zf_wid','phr_dane',null(),ZF_SKL.ZZ_DOK);
      _zf_wid_new:=1
   ?}
?};

: jeśli zablokowano możliwość walidowania,
: to wyłącz znaczniki kontroli wypelnienia
{? (_zf_wid_new | ZF_SKL.WALIDUJ<>bfld('WALIDUJ')) & ZF_SKL.WALIDUJ='N'
|| _set(ZF_SKL.ref(),ZF_SKL.ZZ_DOK,'WYMOG_W','N');
   _set(ZF_SKL.ref(),ZF_SKL.ZZ_DOK,'WYMOG_B','T')
?};
~~


\zf_skl_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZF_SKL.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zf_skl_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli ZF_SKL.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ZF_SKL.DOKUMENT='' || ZF_SKL.DOKUMENT:='N' ?};
{? ZF_SKL.WALIDUJ='' || ZF_SKL.WALIDUJ:='N' ?};
{? ZF_SKL.SYSTEM='' || ZF_SKL.SYSTEM:='N' ?};
{? ZF_SKL.STALY='' || ZF_SKL.STALY:='N' ?};

{? ZF_SKL.STALY='T'
|| ZF_SKL.WALIDUJ:='N';
   ZF_SKL.ZZ_MET:=null()
?};
1


\zf_skl_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.30]
:: OPIS: Sprawdza wypelnienie wymaganych pol. Wykorzystywana w wyzwalaczach przed dolacz i popraw.
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw
::  OLD: \zf_skl_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZF_SKL*'CHK|'
|| return(1)
?};
_put:=var_pres('_a')=type_of(0) & _a;

__CHK.validate(ZF_SKL,
   $("_a.table(_b,"+$_put+",,'KOD','NAZWA','STALY','DOKUMENT','SYSTEM','WALIDUJ')"),
   "_a.in_set(_b,'STALY',,'T','N')",
   "_a.in_set(_b,'DOKUMENT',,'T','N')",
   "_a.in_set(_b,'SYSTEM',,'T','N')",
   "_a.in_set(_b,'WALIDUJ',,'T','N')",
   "  {? ZF_SKL.SYSTEM='N' & ZF_SKL.ZZ_MET=null() & ZF_SKL.STALY='N'
      || FUN.emsg('Element powinien mieć określoną metodę oceny albo być elementem statycznym.'@);
         'ZZ_MET'
      || ''
      ?}
   "
)


\zf_skl_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.41]
:: OPIS: Aktualizuje uprawnienia pozycji formularzy na podstawie wybranego uprawnienia domyślnego.
::   WE: _a [REFERENCE] - Wskazanie na element formularza.
::       _b [REFERENCE] - Wskazanie na typ oceniającego.
::  OLD: \zf_skl_akt/zz_data.fml
:: UWAGA! Poprawność argumentów wywołania nie jest weryfikowana.
::----------------------------------------------------------------------------------------------------------------------
_wid:=obj_new('WYMOG_W','WYMOG_B','OCENA_W','OCENA_B','WIDOK_W','WIDOK_B','WYNIK_W','WYNIK_B');
_wid.WYMOG_W:=ZF_WID.WYMOG_W;
_wid.WYMOG_B:=ZF_WID.WYMOG_B;
_wid.OCENA_W:=ZF_WID.OCENA_W;
_wid.OCENA_B:=ZF_WID.OCENA_B;
_wid.WIDOK_W:=ZF_WID.WIDOK_W;
_wid.WIDOK_B:=ZF_WID.WIDOK_B;
_wid.WYNIK_W:=ZF_WID.WYNIK_W;
_wid.WYNIK_B:=ZF_WID.WYNIK_B;

_DEF:=tab_tmp(1,
   'DEF','STRING[120]','Formularz'@,
   'AKT','INTEGER','Aktualizacja'@,
   'REF','INTEGER','Uprawnienie'@
);

ZF_WID.cntx_psh();
ZF_POZ.cntx_psh();
ZF_DEF.cntx_psh();

ZF_POZ.index('FK_SKL');
ZF_POZ.prefix(_a);
_loop:=ZF_POZ.first();
{!
|? ZF_WID.index('UNIQUE');
   ZF_WID.prefix(ZF_POZ.NP_DOK,ZF_POZ.ZZ_DOK);
   {? ZF_WID.find_key(_b)
   || {? ZF_WID.WYMOG_W<>_wid.WYMOG_W | ZF_WID.WYMOG_B<>_wid.WYMOG_B |
         ZF_WID.OCENA_W<>_wid.OCENA_W | ZF_WID.OCENA_B<>_wid.OCENA_B |
         ZF_WID.WIDOK_W<>_wid.WIDOK_W | ZF_WID.WIDOK_B<>_wid.WIDOK_B |
         ZF_WID.WYNIK_W<>_wid.WYNIK_W | ZF_WID.WYNIK_B<>_wid.WYNIK_B
      || _DEF.blank(1);
         _DEF.DEF:=ZF_POZ.ZF_DEF().NAZWA;
         _DEF.REF:=ZF_WID.ref();
         _DEF.AKT:=1;
         _DEF.add()
      ?}
   ?};
   _loop:=ZF_POZ.next()
!};

{? ~_DEF.first()
|| FUN.info('Nie znaleziono zapisów wymagających aktualizacji.'@)
|? FUN.ask('Czy na pewno zastosować ustawienia domyślne do pozycji formularzy?'@)
|| _dh:=_DEF.size()+1;
   {? _dh<5
   || _dh:=5
   |? _dh>30
   || _dh:=30
   ?};
   _wnd:=_DEF.mk_sel('Formularze'@,,,,,,_dh);
   _DEF.win_fld(_wnd,,'AKT',,,-3,,,'Aktualizacja'@,,,2,,"1","0");
   _DEF.win_fld(_wnd,,'DEF',,,80,,,'Formularz'@);
   _DEF.win_act(_wnd,0,'Formuła','Pomiń'@@,,,,"_T:=cur_tab(); _T.AKT:=0; _T.put()",,1,,,'P');
   _DEF.win_btn(_wnd,'text=%1' ['Pomiń'@],'menu:P');
   _DEF.win_act(_wnd,0,'Formuła','Wybierz'@@,,,,"_T:=cur_tab(); _T.AKT:=1; _T.put()",,1,,,'W');
   _DEF.win_btn(_wnd,'text=%1' ['Wybierz'@],'menu:W');
   _DEF.win_act(_wnd,0,'Formuła','Dalej'@@,,'Kontynuuj przetwarzanie'@,,"sel_exit()",,,,,'D',,'target=window');
   _DEF.win_btn(_wnd,'text=%1,icon=xwin16.png:22,panel=bottom,align=end' ['Dalej'@],'menu:D');
   _DEF.win_act(_wnd,,'Rekord',,,,
      "  {? _a
         || _TAB:=cur_tab(1,1);
            _ws:=cur_win();
            {? _TAB.sel_size()
            || _ga:=_def:=':'
            |? _TAB.AKT
            || _ga:='W';
               _def:='P'
            || _ga:='P';
               _def:='W'
            ?};
            _TAB.actions_grayed(_ws,_ga);
            _TAB.actions(_ws,,_def,1)
         ?}
      "
   );
   _DEF.win_sel(_wnd);
   {? _DEF.select()
   || ZF_WID.prefix();
      _loop:=_DEF.first();
      {!
      |? _loop
      |! {? _DEF.AKT & ZF_WID.seek(_DEF.REF,)
         || ZF_WID.WYMOG_W:=_wid.WYMOG_W;
            ZF_WID.WYMOG_B:=_wid.WYMOG_B;
            ZF_WID.OCENA_W:=_wid.OCENA_W;
            ZF_WID.OCENA_B:=_wid.OCENA_B;
            ZF_WID.WIDOK_W:=_wid.WIDOK_W;
            ZF_WID.WIDOK_B:=_wid.WIDOK_B;
            ZF_WID.WYNIK_W:=_wid.WYNIK_W;
            ZF_WID.WYNIK_B:=_wid.WYNIK_B;
            ZF_WID.put()
         ?};
         _loop:=_DEF.next()
      !}
   ?}
?};

ZF_DEF.cntx_pop();
ZF_POZ.cntx_pop();
ZF_WID.cntx_pop();
~~


\zf_wid_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.41]
:: OPIS: Aktualizuje wartość pola w tabeli ZF_WID.
::   WE: _a [REFERENCE] - wskazanie na dokument kadrowy właściciela
::       _b [STRING]    - akronim pola
::       _c [STRING]    - wartość pola
:: UWAGA! poprawność argumentów wywołania nie jest weryfikowana
::  OLD: \zf_wid_set/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
_set:=$('ZF_WID.'+_b+':=_a; ZF_WID.put()');
ZF_WID.cntx_psh();
ZF_WID.index('UNIQUE');
ZF_WID.prefix(ref_name(_a),_a);
_loop:=ZF_WID.first();
{!
|? _loop
|! _set(_c);
   _loop:=ZF_WID.next()
!};
ZF_WID.cntx_pop();
~~


\zf_wid_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli ZF_WID.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ZF_WID.WYMOG_W='' || ZF_WID.WYMOG_W:='N' ?};
{? ZF_WID.WYMOG_B='' || ZF_WID.WYMOG_B:='N' ?};

{? ZF_WID.OCENA_W='' || ZF_WID.OCENA_W:='N' ?};
{? ZF_WID.OCENA_B='' || ZF_WID.OCENA_B:='N' ?};

{? ZF_WID.WIDOK_W='' || ZF_WID.WIDOK_W:='N' ?};
{? ZF_WID.WIDOK_B='' || ZF_WID.WIDOK_B:='N' ?};

{? ZF_WID.WYNIK_W='' || ZF_WID.WYNIK_W:='N' ?};
{? ZF_WID.WYNIK_B='' || ZF_WID.WYNIK_B:='N' ?};

1


\zf_wid_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZF_WID.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zf_wid_modb','phr_zf_tab');

exec('dok_addb','phr_tab',ZF_WID) & exec('zf_wid_chk','phr_zf_tab',0)


\zf_wid_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZF_WID.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZF_WID*'PUTB|'
|| return(1)
?};
exec('zf_wid_modb','phr_zf_tab');

exec('dok_putb','phr_tab',ZF_WID) & exec('zf_wid_chk','phr_zf_tab',1)


\zf_wid_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZF_WID.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zf_wid_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZF_WID.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZF_WID,_a);
~~


\zf_wid_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZF_WID.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_puta','phr_tab',ZF_WID,_a);
~~


\zf_wid_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZF_WID.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zf_wid_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.30]
:: OPIS: Sprawdza wypelnienie wymaganych pol. Wykorzystywana w wyzwalaczach przed dolacz i popraw.
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw
::  OLD: \zf_wid_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZF_WID*'CHK|'
|| return(1)
?};
_put:=var_pres('_a')=type_of(0) & _a;

__CHK.validate(ZF_WID,
   "  _staly:=0;
      _klasa:='';
      {? ZF_WID.ZZ_LINK
      || ZZ_DOK.cntx_psh();
         {? exec('seek_dok','phr_tab',ZF_WID.ZZ_LINK)
         || _klasa:=ZZ_DOK.KLASA
         ?};
         ZZ_DOK.cntx_pop()
      ?};
      {? _klasa='ZF_SKL'
      || ZF_SKL.cntx_psh();
         ZF_SKL.index('ZZ_DOK');
         ZF_SKL.prefix(ref_name(ZF_WID.ZZ_LINK),ZF_WID.ZZ_LINK);
         _staly:=ZF_SKL.first() & ZF_SKL.STALY='T';
         ZF_SKL.cntx_pop()
      |? _klasa='ZF_POZ'
      || ZF_SKL.cntx_psh();
         ZF_SKL.prefix();
         ZF_POZ.cntx_psh();
         ZF_POZ.index('ZZ_DOK');
         ZF_POZ.prefix(ref_name(ZF_WID.ZZ_LINK),ZF_WID.ZZ_LINK);
         _staly:=ZF_POZ.first() & ZF_POZ.ZF_SKL().STALY='T';
         ZF_POZ.cntx_pop();
         ZF_SKL.cntx_pop()
      ?};
      {? _staly
      || _a.err_msg('Dla elementu statycznego definiowanie uprawnień nie jest dostępne.'@);
         0
      || 1
      ?}
   ",
   $("_a.table(_b,"+$_put+",,'ZZ_TYP','WYMOG_W','WYMOG_B','OCENA_W','OCENA_B','WIDOK_W','WIDOK_B','WYNIK_W','WYNIK_B')"
   ),
   "_a.in_set(_b,'WYMOG_W',,'T','N')",
   "_a.in_set(_b,'WYMOG_B',,'T','N')",
   "_a.in_set(_b,'OCENA_W',,'T','N')",
   "_a.in_set(_b,'OCENA_B',,'T','N')",
   "_a.in_set(_b,'WIDOK_W',,'T','N')",
   "_a.in_set(_b,'WIDOK_B',,'T','N')",
   "_a.in_set(_b,'WYNIK_W',,'T','N')",
   "_a.in_set(_b,'WYNIK_B',,'T','N')"
)


\zf_wyk_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZF_WYK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zf_wyk_modb','phr_zf_tab');
exec('zf_wyk_chk','phr_zf_tab',0)


\zf_wyk_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZF_WYK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZF_WYK*'PUTB|'
|| return(1)
?};
exec('zf_wyk_modb','phr_zf_tab');
exec('zf_wyk_chk','phr_zf_tab',1)


\zf_wyk_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZF_WYK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zf_wyk_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZO_ASP,'UNIQUE',ZF_WYK.ref())


\zf_wyk_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZF_WYK.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \zf_wyk_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
ZZ_DOK.cntx_psh();
{? ZF_WYK.ZZ_LINK().KLASA='ZO_TEST'
|| exec('zf_wyk_prop','phr_zf_tab',ZO_TEST,'L_FORM',ZF_WYK.ZZ_LINK);
:  dodaj elementy formularza dla wszystkich oceniąjacych
   exec('proc_sf','phr_dane',ZF_WYK.ZZ_LINK)
?};
ZZ_DOK.cntx_pop();
~~


\zf_wyk_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZF_WYK.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \zf_wyk_ap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZF_WYK*'PUTA|'
|| return()
?};
ZZ_DOK.cntx_psh();
{? ZF_WYK.ZZ_LINK().KLASA='ZO_TEST'
|| exec('zf_wyk_prop','phr_zf_tab',ZO_TEST,'L_FORM',ZF_WYK.ZZ_LINK);
   {? ZF_WYK.OK<>bfld('OK')
   || exec('proc_sf','phr_dane',ZF_WYK.ZZ_LINK)
   ?}
?};
ZZ_DOK.cntx_pop();
~~


\zf_wyk_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZF_WYK.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_dok:=bfld('ZZ_LINK');
ZZ_DOK.cntx_psh();
ZZ_DOK.clear();
{? exec('seek_dok','phr_tab',_dok)
|| {? ZZ_DOK.KLASA='ZO_TEST'
   || exec('zf_wyk_prop','phr_zf_tab',ZO_TEST,'L_FORM',_dok)
   ?}
?};
ZZ_DOK.cntx_pop();
~~


\zf_wyk_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli ZF_WYK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ZF_WYK.PROFIL='' || ZF_WYK.PROFIL:='N' ?};
{? ZF_WYK.AUTO='' || ZF_WYK.AUTO:='N' ?};
{? ZF_WYK.OK='' || ZF_WYK.OK:='N' ?};

{? ZF_WYK.ZZ_LINK
|| ZF_WYK.NP_DOK:=ref_name(ZF_WYK.ZZ_LINK)
?};
1


\zf_wyk_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZF_WYK*'CHK|'
|| return(1)
?};
_put:=var_pres('_a')=type_of(0) & _a;

__CHK.validate(ZF_WYK,
   $("_a.table(_b,"+$_put+")"),
   "_a.in_set(_b,'PROFIL',,'T','N')"
)


\zf_wyk_prop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.30]
:: OPIS: Aktualizuje liczbę wykorzystywanych formularzy.
::   WE: _a - alias tabeli
::       _b - akronim pola zawierającego liczbę formularzy
::       _c - wskazanie na dokument
::  OLD: \zf_wyk_prop/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
_a.cntx_psh();
{? exec('ref4dok','phr_tab',_a,_a.ZZ_DOK)
|| ($("_a."+_b+":=exec('zf_wyk_licz','phr_zf_tab',_b)"))(_a,_c);
   _a.put()
?};
_a.cntx_pop()


\zf_wyk_licz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.30]
:: OPIS: Oblicza liczbę wykorzystywanych przez dany zapis formularzy.
::   WE: _a - wskazanie na właściciela formularzy (ZZ_DOK)
::   WY: liczba formularzy
::  OLD: \zf_wyk_licz/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
_licz:=0;
ZF_WYK.cntx_psh();
ZF_WYK.index('OK');
ZF_WYK.prefix(ref_name(_a),_a,'T');
_licz:=ZF_WYK.size();
ZF_WYK.cntx_pop();
_licz

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:39 3698451ff674b250184abfe4bf0b7a67d264ee8fbe679fffc8d221e110fb523c11795fbfba79741368de85f2ad98380a4a6d30c224dc1e8e74deeaff7b19b397920ad5be9ee518b1155c3d7926bb272dfe1741df677c2c21fc1d9bb2604afb3071c591fd9c57703d5c6e5d8e7e3333192a2b4cd269ffa476fc0f9122ba4ff210
