:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: magdok_nag.fml
:: Utworzony: 24.06.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Obsługa dokumentów magazynowych - nagłówki dokumentów
::======================================================================================================================


\be_magd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JF [2006]
:: OPIS: przed redakcja magazyn drugi, pole ND.MD
::  OLD: \be_magd/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.TYP().TD<>'' || 1 || 0 ?}


\po_magd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdzenie wypelnienia magazynu
::   WY: 1-OK 0-nie jest dobrze
::  OLD: \po_magd/pommag.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? ND.TYP().TD<>''
|| {? ND.MD=null  || FUN.info('Proszę wypełnić pole'@); _wyn:=0
   |? ND.MD=ND.MAG & ND.TYP().P<>'T' || FUN.info('Nie można przesunąć na ten sam magazyn.'@); _wyn:=0
   || _wyn:=1
   ?}
?};
_wyn


\bl_n_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: podpowiada kontrahenta, wartość początkowa dla pola ND.KH
::       założenie że w buforze jest typ dokumentu
::  OLD: \bl_n_kh/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? TYPYDOK.P='T' &  TYPYDOK.Z='T'
|| HELP.KH
|| null
?}


\bd_n_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: formuła przed wyświetleniem pola kontrahent (ND.KH) na dokumencie magazynowym
::  OLD: \bd_n_kh/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.TYP().Z<>'T'
|| exec('findfnv','#color')
|| ''
?}


\be_khn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JF [2006]
:: OPIS: przed redakcja magazyn drugi, pole ND.KH
::  OLD: \be_khn/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.PROJEKTY
   & ND.KH
   & ND.TYP().PROJZKH='T'
|| return(0)
?};

DPOZ.WPR_S:=$ND.KH;
_wyn:={? ND.TYP().Z='T'  || 1 || 0 ?};
:: sprawdza czy to nie realizacja zamowienia dostaw
{? POMOC.LOCK<>'' || _wyn:=0 ?};
:: nie ma jeszcze wlasciwych rekordow zeby wykorzystac ZD_RN.index('ND')
{? _wyn=1 & ((3+BEER.MENU_PTH)='ZWR' | (4+BEER.MENU_PTH)='ZWTR') || _wyn:=0 ?};
:: sprawdzenie czy dokument nie jest powiazany z faktura zakupowa
{? _wyn & ND.TYP().P='T'
|| _wyn:=exec('FindInSet','#table','FAP2DK','ND',$ND.ref,'Z')=null
  & exec('FindInSet','#table','FAP2DK','ND',$ND.ref,'E')=null
?};
:: dla dokumentow kooperacji sprawdza czy sa pozycje
{? _wyn & ND.TYP().KOOP='T'
|| _wyn:=exec('FindInSet','#table','DK','DOKMAG',ND.ref)=null
?};
:: dla wydania w magazynie konsygnacyjnym ustawia kontrahenta magazynu
{? _wyn & ND.MAG().COS='T' & ND.MAG().DLAKH<>null()
|| ND.KH:=ND.MAG().DLAKH;
   win_disp();
   _wyn:=0
?};

{? _wyn
||
:: Gdy dokument przyjęcia z kooperacji i przypisane zlecenie, to utworzenie tabeli z listą kontrahentów,
:: do których wydano produkt do kooperacji
   {? ND.TYP().KOOP='T' & ND.TYP().P='N' & ND.ZL<>null()
   || exec('kh4zlec_get','zl_koop',1);
      exec('kh_grp_win','zl_koop',1)
   || exec('sel_win_kh','ustawienia')
   ?}
?};
_wyn


\ae_n_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: po redakcji kontrahenta w nagkowku dokumentu magazynowego
::   WE: [_a] - 1-tylko uzzupelnienie danych 0-(domyslnie) normalna obsluga pola
::  OLD: \ae_n_kh/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_f_nip_pole:={? _a || 0 || (cur_tfld()=INTRAST & cur_afld()='F_NIP') ?};
{? ~_a & ~_f_nip_pole & fld=null
|| {? ND.MAG().COS<>'T'
   || exec('find_sql','#table','KH','SNIP;KOD;NAZ;SKR;UL;DOM;LOKAL','','ND.KH','13;5;25;10;15','RED','','')
   || exec('find_sql','#table','KH','SNIP;KOD;NAZ;SKR;UL;DOM;LOKAL','KH.COS=1 ','ND.KH','13;5;25;10;15','RED','','')
   ?}
?};
{? _a
|| _wyn:=1
|| {? _f_nip_pole
   || _fld:=ND.KH
   || _fld:=fld()
   ?};
   {!
   |? _wyn:=exec('ae_kh','kontrahent',,_fld);
      {? _wyn
      || _wyn0:=exec('f_kh_gv_sprawdz','faktury_nag1','ND',0,1);
         _wyn:=_wyn0.WYNIK;
         &_wyn0;
         {? _wyn=-1
         || _fld:=ND.KH
         ?}
      ?};
      _wyn<>0 & _wyn<>1
   !}
?};

{? _wyn
|| {? $ND.KH<>DPOZ.WPR_S
   || ND.RAB:=exec('sp_plat','kontrahent',ND.KH().ref,1);
      {? TAZ.RAB_N_BE=0 || TAZ.RAB_N_BE:=ND.RAB ?};
      ND.KPW:='';
      ND.WD:='';
      ND.RTRANSPO:=''
   ?};
:: NIP UE
   exec('nd_nip_ue','magdok_nag');
:: intrastat
   exec('ist_wart_nd','magdok_nag');
:: NIP
   {? ND.KH
   || {? ND.KH().SNIP=ND.KH().PESEL
      || INTRAST.F_NIP:=''
      || INTRAST.F_NIP:=ND.KH().SNIP
      ?}
   || INTRAST.F_NIP:=''
   ?};
:: typ rabatu
   {? ND.TYP().DS='T' & ND.KH & $ND.KH<>DPOZ.WPR_S
   ||
      exec('rab_typ_bd','ceny','ND');
      {? DPOZ.WPR_R
      || ND.RAB_TYP:={? ND.KH().RAB_TYP='' || exec('rab_typ_bl','ceny') || KH.RAB_TYP ?}
      ?}
   ?};
:: Usunięcie tabeli z listą kontrahentów kooperacji zlecenia
   {? var_pres('__KH4ZL')>100 || obj_del(__KH4ZL) ?}
?};
_wyn


\ist_wart_nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: wypełnianie atrybutów intrastat w ND
::  OLD: \ist_wart_nd/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.IST_TYP<>''
||
   {? ND.KPW=''
   ||
      {? 2+ND.NIP_UE<>'PL' & exec('find_sl','intrastat','049',2+ND.NIP_UE)<>null || ND.KPW:=2+ND.NIP_UE ?}
   ?};
   {? ND.RTRANSAK='' || ND.RTRANSAK:=TYPYDOK.RTRANSAK ?};
   _progp:=exec('prog','intrastat',ND.D,'P');
   _progw:=exec('prog','intrastat',ND.D,'W');
   _ist_typ:=ND.IST_TYP;

   {? ND.KH<>null & exec('czy_prog_s','intrastat',_ist_typ,_progw,_progp)=1
   ||
      {? ND.WD='' || ND.WD:=ND.KH().WD ?};
      {? ND.RTRANSPO='' || ND.RTRANSPO:=KH.RTRANSPO ?}
   ?}
?}


\nkonto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: wartość początkowa pola ND.KK
::  OLD: \nkonto/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
TYPYDOK.KK


\be_fzak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: przed redakcja pola ND.FZAK
::  OLD: \be_fzak/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
ND.TYP().DN<>'T'


\ae_nd_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: po redakcji pola ND.WAL
::   WY: czy mozna opuscić redakcje pola 1-tak 0-nie
::  OLD: \ae_nd_wal/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? chk_fld()
|| {? ND.WAL=INFO.NAROD | ND.WAL<>POMOC.WAL
   || ND.KRS:=ND.NKRS:=0;
      ND.DTK:=ND.NDTK:=date(0,0,0);
      ND.BTK:=ND.NBTK:='';
      ND.RTK:=ND.NRTK:=0;
      ND.NTK:=ND.NNTK:='';
      ND.SWAL:=ND.NSWAL:=2
   ?};
   exec('set_efld_opt','magdok_nag');
   1
|| 0
?}


\wz_nd_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: wzorzec ND.KH_ODB
::  OLD: \wz_nd_kh/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.KH:=ND.KH;
exec('kh_odb_f_set','kontrahent');
''


\be_ndodb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: przed redakcja ND.KH_ODB
::  OLD: \be_ndodb/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ND.KH<>null
   &
exec('FindInSet','#table','OPAK_N','ND',$ND.ref(),,,,,null())=null()


\ae_n_rab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario
:: OPIS: po edycji rabatu na naglowku dok. magazynowego
::  OLD: \ae_n_rab/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('spr_rab','ceny');
{? _wyn=0 || return(_wyn) ?};
_wyn


\nd_kpw_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyświetleniem ND.KPW
::   WY: kolor
::  OLD: \nd_kpw_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('nd_kpw_reg','magdok_nag','PW')


\nd_kpw_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja ND.KPW
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \nd_kpw_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('nd_kpw_reg','magdok_nag','PR')


\nd_kpw_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: klawisz F3 ND.KPW
::  OLD: \nd_kpw_f3/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('slownik','intrastat','049',ND.KPW)


\nd_kpw_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: po redakcji ND.KPW
::   WY: 1 - spelnione warunki, 0 - wpp
::  OLD: \nd_kpw_po/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_return:=1;
:: regula R13
{? fld='PL'
|| _return:=0
|? ND.KPW<>'' & exec('find_sl','intrastat','049',ND.KPW) = null
|| _return:=0
?};

{? _return=0
|| FUN.info('Niedozwolona wartość pola Kraj przeznaczenia wysyłki.'@)
?};

_return


\nd_kpw_reg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: warunki na wyswietlenie lub redagowanie pola ND.KPW
::   WE: _a - 'PW' - dla funkcji przed wyswietleniem, 'PR' - dla funkcji przed redakcja
::   WY: _a = 'PW' - kolor lub ''
::          = 'PR' - 1 - redakcja dozwolona, 0 - wpp
::  OLD: \nd_kpw_reg/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.IST_TYP=''
|| {? ND.MAG().SKL <> 'T'
   || {? _a = 'PW' || return(exec('findfnv','#color')) || return(0) ?}
   || {? _a = 'PW' || return('') || return(1) ?}
   ?}
||
   {? _a = 'PW' || return('') || return(1) ?}
?}


\nd_wd_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem ND.WD
::   WY: kolor
::  OLD: \nd_wd_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.win_edit('?')='ZD_REAS'
|| 1
|| exec('nd_wd_reg','magdok_nag','PW')
?}


\nd_wd_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja ND.WD
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \nd_wd_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.win_edit('?')='ZD_REAS'
|| 1
|| exec('nd_wd_reg','magdok_nag','PR')
?}


\nd_wd_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: klawisz F3 ND.WD
::  OLD: \nd_wd_f3/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('slownik','intrastat','002',ND.KPW)


\nd_wd_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: po redakcji ND.WD
::   WY: 1 - spelnione warunki, 0 - wpp
::  OLD: \nd_wd_po/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_return:=1;

:: sprawdzenie czy wartosc istnieje w slowniku 002
{? ND.WD<>'' & exec('find_sl','intrastat','002',ND.WD)=null || _return:=0 ?};

{? _return=0
|| FUN.info('Niedozwolona wartość pola Warunki dostawy.'@)
?};

_return


\nd_wd_reg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: warunki na wyswietlenie lub redagowanie pola ND.WD
::   WE: _a - 'PW' - dla funkcji przed wyswietleniem, 'PR' - dla funkcji przed redakcja
::   WY: _a = 'PW' - kolor lub ''
::          = 'PR' - 1 - redakcja dozwolona, 0 - wpp
::  OLD: \nd_wd_reg/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_kolor:=exec('findfnrd','color');
_ist_typ:=ND.IST_TYP;
{? _ist_typ<>''
||
   _progp:=exec('prog','intrastat',ND.D,'P');
   _progw:=exec('prog','intrastat',ND.D,'W')
?};

{? ND.IST_TYP=''
|| {? ND.MAG().SKL <> 'T'
   || {? _a = 'PW' || return(_kolor) || return(0) ?}
   || {? _a = 'PW' || return('') || return(1) ?}
   ?}
|? exec('czy_prog_s','intrastat',_ist_typ,_progw,_progp)=0
||
   {? _a = 'PW' || return(_kolor) || return(0) ?}
||
   {? _a = 'PW' || return('') || return(1) ?}
?}


\nd_rtransa_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem ND.RTRANSAK
::   WY: kolor
::  OLD: \nd_rtransa_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('nd_kpw_reg','magdok_nag','PW')


\nd_rtransa_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja ND.RTRANSAK
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \nd_rtransa_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('nd_kpw_reg','magdok_nag','PR')


\nd_rtransa_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: klawisz F3 ND.RTRANSAK
::  OLD: \nd_rtransa_f3/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('slownik','intrastat','004',ND.RTRANSAK)


\nd_rtransa_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: po redakcji ND.RTRANSAK
::   WY: 1 - spelnione warunki, 0 - wpp
::  OLD: \nd_rtransa_po/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_return:=1;

:: sprawdzenie czy wartosc istnieje w slowniku 004
{? ND.RTRANSAK<>'' & exec('find_sl','intrastat','004',ND.RTRANSAK)=null || _return:=0 ?};

{? _return=0
|| FUN.info('Niedozwolona wartość pola Rodzaj transakcji.'@)
?};

_return


\nd_rtransp_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem ND.RTRANSPO
::   WY: kolor
::  OLD: \nd_rtransp_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('nd_wd_reg','magdok_nag','PW')


\nd_rtransp_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja ND.RTRANSPO
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \nd_rtransp_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('nd_wd_reg','magdok_nag','PR')


\nd_rtransp_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: klawisz F3 ND.RTRANSPO
::  OLD: \nd_rtransp_f3/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('slownik','intrastat','005',ND.RTRANSPO)


\nd_rtransp_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: po redakcji ND.RTRANSPO
::   WY: 1 - spelnione warunki, 0 - wpp
::  OLD: \nd_rtransp_po/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_return:=1;

:: sprawdzenie czy wartosc istnieje w slowniku 005
{? ND.RTRANSPO<>'' & exec('find_sl','intrastat','005',ND.RTRANSPO)=null || _return:=0 ?};

{? _return=0
|| FUN.info('Niedozwolona wartość pola Rodzaj transportu.'@)
?};

_return


\nd_ist_typ_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: wrt.pocz. ND.IST_TYP
::   WY: 'P'-przywoz
::  OLD: \nd_ist_typ_bl/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_return:='';
TYPYDOK.cntx_psh();
_ist_typ:={? ND.TYP().UE='T' || {? ND.TYP().P='T' || 'P' || 'W' ?} || '' ?};
{? _ist_typ<>''
||
   _progp:=exec('prog','intrastat',ND.D,'P');
   _progw:=exec('prog','intrastat',ND.D,'W');
   {? exec('czy_prog_p','intrastat',_ist_typ,_progw,_progp)=1 || _return:=_ist_typ ?}
?};
TYPYDOK.cntx_pop();

_return


\nd_ist_typ_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: przed redakcja ND.IST_TYP
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \nd_ist_typ_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('nd_ist_typ_re','magdok_nag','PR') = 0
|| return(0)
|| return(1)
?}


\nd_ist_typ_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: po redakcji ND.IST_TYP
::  OLD: \nd_ist_typ_po/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.IST_TYP=''
|| ND.KPW:='';
   ND.WD:='';
   ND.RTRANSAK:='';
   ND.RTRANSPO:='';
   ND.IST_OKR:=''
|? ND.IST_OKR=''
|| ND.IST_OKR:=exec('nd_ist_okr_bl','magdok_nag')
?};

:: Ustawianie gwiazdek
exec('set_efld_opt','magdok_nag');

win_disp;
1


\nd_ist_typ_re
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: warunki na wyswietlenie lub redagowanie pola ND.IST_TYP
::   WE: _a - 'PW' - dla funkcji przed wyswietleniem, 'PR' - dla funkcji przed redakcja
::   WY: _a = 'PW' - kolor lub ''
::          = 'PR' - 1 - redakcja dozwolona, 0 - wpp
::  OLD: \nd_ist_typ_re/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_kolor:=exec('findfnv','#color');
_da2isto:={? ND.IST_OKR='' || date(ND.D~1,ND.D~2,1) || date(#(4+ND.IST_OKR),#(ND.IST_OKR+2),1) ?};
{? ND.TYP().UE='T' & exec('prog','intrastat',_da2isto,'P')<>'N'
 & ~(var_pres('__gen')>0 & __gen)
|| {? _a = 'PW' || return('') || return(1) ?}
|| {? _a = 'PW' || return(_kolor) || return(0) ?}
?}


\nd_ist_okr_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: wartosc poczatkowa ND.IST_OKR
::   WY: rrrrmm
::  OLD: \nd_ist_okr_bl/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.IST_TYP<>''
|| form(ND.D~1,-4,,'9 ')+form(ND.D~2,-2)
|| ''
?}


\ndw_pred
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: Przed redakcją pola WYD na nagłówku dokumentów magazynowych.
::   WY: 0/1
::  OLD: \ndw_pred/polap.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.PROJEKTY
   & ND.TYP().PROJWJO='T'
|| return(0)
?};

_prod:=exec('tte_lic','tte');

DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(ND.ref());
_sdk:=DK.first();
DK.cntx_pop();

XINFO.SLWYDZIA();
{? XINFO.SLWYDZIA=null()
|| 0
|? ND.ZL<>null()
|| {? _sdk=0
   || {? ND.TYP().WYR='T' | _prod='N'
      || ND.WYD:=ND.ZL().JORG;
         {? ND.WYD=null() || 1 ||win_disp(); 0 ?}
      || {? ~exec('chk_wyd','magdok_nag',ND.WYD,ND.ZL,0)
         || ND.WYD:=ND.ZL().JORG
         ?};
         1
      ?}
   || 0
   ?}
|| ND.WYD:=null();
   0
?}


\ndw_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: Po redakcji pola WYD na naglowkach dokumentow magazynowych.
::   WY: 0/1
::  OLD: \ndw_po/polap.fml
::----------------------------------------------------------------------------------------------------------------------
_prod:=exec('tte_lic','tte');
{? ND.ZL<>null()
|| {? _prod='N' | ND.ZL().JORG=ND.WYD
   || 1
   || exec('chk_wyd','magdok_nag',ND.WYD,ND.ZL,1)
   ?}
?}


\chk_wyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: Sprawdza czy wpisany wydzial wystepuje na zleceniu produkcyjnym.
::   WE: _a: WYD.ref
::       _b: ZL.ref
::       _c: Czy dawac komunikaty
::   WY: 0/1
::  OLD: \chk_wyd/polap.fml
::----------------------------------------------------------------------------------------------------------------------
exec('openmask','zl_common',_b);
ZLIM.cntx_psh();
ZLIM.index('WYD');
ZLIM.prefix(_b,_a);
_wynik:=ZLIM.first();
{? ~_wynik
|| {? ZL.JORG=_a
   || _wynik:=1
   ?}
?};
{? ~_wynik
|| {? _c=1 || FUN.info('Wybrany wydział nie występuje na zleceniu produkcyjnym.'@)  ?}
?};
ZLIM.cntx_pop();
_wynik


\nd_be_scwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: przed redakcja dla pola SCWAL tabeli ND
::  OLD: \nd_be_scwal/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
DPOZ.SCWAL:=ND.SCWAL().KOD;
1


\nd_ae_scwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: po redakcji pola SCWAL tabeli ND
::   WY: czy mozna opuscic redakcje pola 1-tak 0-nie
::  OLD: \nd_ae_scwal/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
{? __CHK.record(ND,,'SCWAL')=''
|| _wyn:=0;
   {? DPOZ.SCWAL<>ND.SCWAL().KOD
   || ND.SCSWAL:=2
   ?};
   {? ND.TYP().P='N' & DPOZ.SCWAL<>ND.SCWAL().KOD
   || DK.cntx_psh();
      DK.index('DOKMAG');
      DK.prefix(ND.ref);
      {? DK.size=0
      || _wyn:=1
      || FUN.info('Dokument posiada pozycję z dostawą w innej walucie.\nZmiana waluty na wybraną niedozwolona.'@)
      ?};
      DK.cntx_pop()
   || _wyn:=1
   ?}
|| _wyn:=0
?};
_wyn


\nd_bl_scwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: blank dla pola SCWAL tabeli ND
::  OLD: \nd_bl_scswal/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
ST.MAG().SKL_WAL


\nd_be_sckrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: przed redakcją dla pola SCKRS tabeli ND
::  OLD: \nd_be_sckrs/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('Krs_be');
Krs_be:=fld();
Krs_f3:=0;
1


\nd_f3_sckrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: akcja F3 dla kursu (wybor banku oraz kursu) SCKRS, SCNKRS tabeli ND
::   WY: 1/0
::  OLD: \nd_f3_sckrs/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
TKRS.cntx_psh();
KRS.cntx_psh();
:: zwraca wybrany kurs lub to co jest w red. polu

_krs:=$('cur_tfld.SCKRS');   _dtk:=$('cur_tfld.SCDTK');
_rtk:=$('cur_tfld.SCRTK');   _ntk:=$('cur_tfld.SCNTK');
_btk:=$('cur_tfld.SCBTK');
_t_k:=$('cur_tfld.SCSWAL');

_typ:=cur_tfld.SCSWAL;
_wal:=cur_tfld.SCWAL;
_wal_tkrs:=INFO.NAROD;

DPOZ.WAL:=_wal;

{? _typ<3
|| SLO.cntx_psh();
   _ok:=1;
   {? #INFO.SLBANK=0
   || FUN.info('Nie zdefiniowano słownika banków.'@);
      _ok:=0
   ||
      INFO.SLBANK().SLU();
      {? #SSTALE.WAL<>0 || SSTALE.WAL() ?};
      _bank:=null;
      SLO.index('SL');
      SLO.prefix(SLU.ref(),_btk());
      {? SLO.first() || _bank:=SLO.ref() ?};
      SLO.prefix(SLU.ref());
      SLO.seek(_bank);
      SLO.win_sel('BANKI');
      exec('slu_okn','slo_slu')
   ?};

   {? _ok=1
   || {? SLO.select(,1)
      || _slo:=SLO.ref();
         {? _slo<>null
         || DPOZ.B:=_slo;
            _acr:=KRS.ndx_tmp('',0,'TKRS','BANK',0,'TKRS','WAL',0,'WAL',,0,'TKRS','DT',0);
            KRS.index(_acr);
            KRS.prefix(_slo,_wal_tkrs,_wal);
            KRS.win_sel('SLO');
            KRS.hdr_sel();
            KRS.hdr_sel(' banku %1'@[SLO.TR]);
            {? KRS.select(,KRS.last,10)
            || _dtk():=KRS.TKRS().DT;
               _rtk():=#KRS.TKRS;
               _ntk():=ref_name(TKRS.ref());
               _btk():=KRS.TKRS().BANK().KOD;
               _wyn:=KRS.KC;
               _krs():=_wyn;
               _t_k():=1;
               {? var_pres('Krs_f3')>0 || &Krs_f3 ?};
               Krs_f3:=1
            ?};
            KRS.ndx_drop(_acr)
         ?}
      ?}
   ?};
   SLO.cntx_pop()
?};
KRS.cntx_pop();
TKRS.cntx_pop();
_wyn


\nd_ae_sckrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: po redakcji pola SCKRS tabeli ND
::   WY: czy mozna opuscic redakcje pola 1-tak 0-nie
::  OLD: \nd_ae_sckrs/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
cur_tfld.SCKRS:=cur_tfld.SCKRS$4;
_typ:=cur_tfld.SCSWAL;
_krs:=cur_tfld.SCKRS;

_rtk:=$('cur_tfld.SCRTK');   _ntk:=$('cur_tfld.SCNTK');
_btk:=$('cur_tfld.SCBTK');
_t_k:=$('cur_tfld.SCSWAL');

DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(ND.ref());
{? fld>0 & Krs_be<>fld() & DK.size() & DPOZ.SCKRSZM<>1
|| _wyb:=FUN.choice('Uwaga dokonano zmiany kursu celnego. Dokument posiada już pozycję.\n'
                    'Dokonać przeliczenia pozycji dokumentu oraz jego wartości?'@,,'Przelicz'@);
   {? _wyb
   || DK.first();
      _war:=0;
      {!
      |? DK.C:=(DK.SCC*ND.SCKRS)$2;
         DK.WAR:=(DK.C*DK.IL)$2;
         _war+=DK.WAR;
         DK.put();
         DK.next()
      !};
      ND.WAR:=_war;
      ND.put()
   || ND.SCKRS:=Krs_be
   ?}
?};
DK.cntx_pop();

{? Krs_be<>fld() & ~Krs_f3
|| _rtk():=0;
   _ntk():='';
   _btk():='';
   _t_k():=2
?};

Krs_f3:=0;

_ok:=1;

{? _typ=2 & _krs=0
|| FUN.info('Należy podać kurs.'@)
|? _typ=2 & _krs<0
|| FUN.info('Kurs nie może być ujemny.'@)
?};

{? _krs<=0
||
   _rtk():=0;
   _ntk():='';
   _btk():='';
   _t_k():=2;
   _ok:=0
?};

_ok


\nd_be_scdtk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: przed redakcja dla pola SCDTK tabeli ND
::  OLD: \nd_be_scdtk/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
ND.SCWAL<>INFO.NAROD & ND.SCSWAL>1


\nd_ae_scdtk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: po redakcji pola SCWAL tabeli ND
::   WY: czy można opuścić redakcje pola 1-tak 0-nie
::  OLD: \nd_ae_scdtk/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()=date(0,0,0)
|| FUN.info('Należy podać datę kursu.'@); 0
|| 1
?}


\be_nd_trn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: przed redakcja pola ND.TRN - sprawdza czy nie powstalo z zamowienia z zaznaczonym TRN
::       sprawdza tylko zamowienia aktywne
::  OLD: \be_nd_trn/wysylki.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
ZK_RN.cntx_psh();
ZK_RN.index('ND');
ZK_RN.prefix($ND.ref());
{? ZK_RN.first() & ZK_RN.N().TRN='T'
|| _wyn:=0
?};
ZK_RN.cntx_pop();
_wyn


\nd_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MAKO [2010]
:: OPIS: Wartosc poczatkowa pola dla _ND
::  OLD: \n/umowy.fml
::----------------------------------------------------------------------------------------------------------------------
ND.ref


\nd_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: wartosc poczatkowa ND.AR
::  OLD: \n_rok/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ND.AR


\bl_plus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: czy dokument przychodowy T-tak N-nie
::   WY: 'T'/'N'
::  OLD: \bl_plus/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ND.TYP().P


\nd_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: znacznik zaakceptowania z nagłówka dokumentu
::  OLD: \n_z/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ND.Z


\bl_krsn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: kurs z nagłówka dokumentu
::  OLD: \bl_krsn/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ND.KRS


\bl_waln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: wartość początkowa waluty z nagłówka dokumentu
::  OLD: \bl_waln/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ND.WAL


\nd_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: dołączenie dokumentu magazynowego
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:=exec('nd_dolacz_act_uid','magdok_nag',BEER.TYPYDOK().P,TYPYDOK.KOOP);
_params.AKCJA:='Dołącz';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
_params.CONTEXT:=obj_new('ND');
_params.CONTEXT.ND:=null();

exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYPYDOK',BEER.TYPYDOK);
{? BEER.TYPYDOK<>null() & _params.ACT_UID*'LMG_MAG'
|| _ch:={? BEER.TYPYDOK().Z='T' || 'Z' || 'W' ?};
   _rodzaj:={? BEER.TYPYDOK().DN='D' || 'D' || _ch ?};
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'RODZAJ',_rodzaj)
?};

exec('mp_run','#b__box',_params)


\nd_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: modyfikacja dokumentu magazynowego
::   WE: [_a] - exec('nag_edit_a','magdok_nag')
::----------------------------------------------------------------------------------------------------------------------
_zamr:=menu_txt()='Popraw nagłówek';
{? _zamr || exec('mag_psh','open_tab') ?};
_star:=ST.AR;
_stam:=ST.AM;
ST.AR:=ND.AR;
ST.AM:=ND.AM;
_popraw:={? var_pres('_a')=type_of(obj_new('a')) || _a || exec('nag_edit_a','magdok_nag') ?};

_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:=exec('nd_dolacz_act_uid','magdok_nag',ND.TYP().P,TYPYDOK.KOOP);
_params.UIDREF:=ND.uidref();
_params.AKCJA:='Popraw';
_params.CONTEXT:=obj_new('POPRAW');
_params.CONTEXT.POPRAW:=_popraw;

exec('mp_run','#b__box',_params);
ST.AR:=_star;
ST.AM:=_stam;
{? _zamr || exec('mag_pop','open_tab') ?};
~~


\nd_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: usunięcie dokumentu magazynowego
::----------------------------------------------------------------------------------------------------------------------
{? exec('czyTR_NZL','transport_wspolne',ND.uidref(),1)
|| FUN.info('Do dokumentu wystawiono dyspozycje transportu.\nUsunięcie niemożliwe.'@)
|| _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:=exec('nd_dolacz_act_uid','magdok_nag',ND.TYP().P,TYPYDOK.KOOP);
   _params.UIDREF:=ND.uidref();
   _params.AKCJA:='Usuń';

   exec('mp_run','#b__box',_params)
?}


\nd_pozycje_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: pozycje dokumentu magazynowego - okienko selekcji
::   WE: [_a] - DK.uidref(), na którym ma stanąć selektor
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('')
|| _a:=''
?};
BPMN.END:=0;
params_exec('poz_dok','magdok_poz',0,_a)


\nd_pozycje_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: pozycje dokumentu magazynowego - okienko redakcji
::   WE: params_get()
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_btnRuleResult:='';
_fld:=params_exec('nd_edit_finisher','magdok_nag');
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| BPMN.END:=1;
   params_exec('poz_dok','magdok_poz',1);
   {? BPMN.END=2 || _btnRuleResult:=params_exec('nd_zakoncz_red','magdok_nag') ?}
?};

VAR_DEL.delete('ND_SPRAWDZONE_F2');
{? _btnRuleResult='key:F2'
|| ND_SPRAWDZONE_F2:=1
?};

_btnRuleResult


\nd_zakoncz_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: zakończenie edycji dokumentu magazynowego
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__ndgr_pdf');
VAR_DEL.delete('__GRP_DR');

_grupa:='T';
_Sel:=ND.sel_aget();
{? ~_Sel.first()
||
   _grupa:='N';
   _Sel.REF:=#ND.ref();
   _Sel.add()
?};

_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:=exec('nd_dolacz_act_uid','magdok_nag',ND.TYP().P,TYPYDOK.KOOP);
_params.AKCJA:='Zakończ_wer';
{? 3+_params.ACT_UID='LMG'
|| _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID)
?};

{? _grupa='T'
||
   _params.GRUPA:='T';
   {? ~FUN.ask('Zakończyć rejestrację zaznaczonych dokumentów?'@) || return(0) ?};
   __GRP_DR:=obj_new('GR','SEL','SIZE','FIRST','ESC','WZ','PDF','SHOW_PDF','DR_N_AKC','JEZYK','JEZYK_KH','DR_N_CAN');
   __GRP_DR.GR:=1;
   __GRP_DR.PDF:=1;
   __GRP_DR.FIRST:=1;
   __GRP_DR.SHOW_PDF:=0;
   __GRP_DR.ESC:=0;
   exec('ini_kom','#message','Grupowe zakończ'@)
?};

_loop:=_Sel.first();
{? _loop
||
   _size:=_Sel.size();
   _licz:=0;
   _prgs:=100*_licz/_size;
   progress(_prgs,'\nTrwa zakończenie (%1\%)\n'@[$int(_prgs)],'Zakończ'@)
?};
{!
|? _loop
|!
   _licz+=1;
   _prgs:=100*_licz/_size;
   progress(_prgs,'\nTrwa zakończenie dokumentu %1 (%2\%)\n'@[
      exec('record','#to_string',ND.ref()),$int(_prgs)],'Zakończ'@);
   {? ND.seek(_Sel.REF,)
   || exec('ctrlEWID','magdok_nag',ND.ref());
      _params.UIDREF:=ND.uidref();
      {? 3+_params.ACT_UID='LMG'
      || exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ND',ND.ref())
      ?};
      exec('mp_run','#b__box',_params)
   ?};
   _loop:=_Sel.next()
!};
prgs_clr();

{? _params.GRUPA='T'
|| __kom_on:=1;
   exec('end_kom','#message');
   ND.sel_adel()
?};
VAR_DEL.delete('__ndgr_pdf');
VAR_DEL.delete('__GRP_DR');
FUN.grp_clear('nd_analiza_komplet');
FUN.grp_clear('ask_dokm_wys');

0


\nd_dolacz_act_uid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zwraca UID czynności odpowiadający _a i _b
::   WE: _a - TYPYDOK.P
::       _b - TYPYDOK.KOOP
::   WY: UID czynności
::----------------------------------------------------------------------------------------------------------------------
{? _a='T' & _b='N' || 'LMG_MAG_DAPZ'
|? _a='N' & _b='N' || 'LMG_MAG_DWYD'
|? _a='T' & _b='T' || 'TTE_WYK_DKOW'
|? _a='N' & _b='T' || 'TTE_WYK_DKOP'
                   || '???'
?}


\nd_valid_edi_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: sprawdza wypelnienie pol w ND i uzupełnia tablecę komunikatów
::   WE: _a, _b, ... nazwy pól do sprawdzenia
::----------------------------------------------------------------------------------------------------------------------
{! _ii:=1.._
|! _pole:=_[_ii];
   {? __CHK.record(ND,0,_pole)=_pole
   || _naz:=exec('fldLabel','#field',ND,_pole);
      _msg:=__CHK.empty_msg(_naz,0);
      {? _pole='KH' & var_pres('FIND_KH2')=type_of('')
      || {? FIND_KH2<>''
         || _msg:=_msg+' (nieznany kod: %1)'@[FIND_KH2]
         || _msg:=_msg+' (nie podano kodu)'@
         ?}
      ?};
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   ?}
!};
~~


\nd_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: sprawdza wypelnienie pol w ND
::   WE: _a - 0 - dokument manualny (domyślnie), 1 - import z komunikatu EDI
::  OLD: \chk_n/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _edi:=_a
|| _edi:=0
?};
_wyn:='';
{? ND.TYP().Z='T'
|| {? ND.TYP().WK='T'
   || _wyn:=__CHK.record(ND,~_edi,'AR','AM','TYP','KH','KK');
      {? _edi & _wyn<>''
      || exec('nd_valid_edi_chk','magdok_nag','AR','AM','TYP','KH','KK')
      ?}
   || _wyn:=__CHK.record(ND,~_edi,'AR','AM','TYP','KH');
      {? _edi & _wyn<>''
      || exec('nd_valid_edi_chk','magdok_nag','AR','AM','TYP','KH')
      ?}
   ?}
|| {? ND.TYP().WK='T'
   || {? TYPYDOK.TD<>''
      || {? ST.MAG_SYM=''
         || _msg:='Niewypełnione pole: '@+BO.OP_MG+'.';
            {? _edi
            || exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
            || FUN.info(_msg)
            ?};
            _wyn:='MAG_SYM'
         || ND.MD:=exec('FindInSet','#table','MG','MAGAZYNY',ST.MAG_SYM);
            {? ND.TYP().WK='T'
            || _wyn:=__CHK.record(ND,~_edi,'AR','AM','TYP','MD','KK');
               {? _edi & _wyn<>''
               || exec('nd_valid_edi_chk','magdok_nag','AR','AM','TYP','MD','KK')
               ?}
            || _wyn:=__CHK.record(ND,~_edi,'AR','AM','TYP','MD');
               {? _edi & _wyn<>''
               || exec('nd_valid_edi_chk','magdok_nag','AR','AM','TYP','MD')
               ?}
            ?}
         ?}
      || {? ND.TYP().WK='T'
         || _wyn:=__CHK.record(ND,~_edi,'AR','AM','TYP','KK');
            {? _edi & _wyn<>''
            || exec('nd_valid_edi_chk','magdok_nag','AR','AM','TYP','KK')
            ?}
         || _wyn:=__CHK.record(ND,~_edi,'AR','AM','TYP');
            {? _edi & _wyn<>''
            || exec('nd_valid_edi_chk','magdok_nag','AR','AM','TYP')
            ?}
         ?}
      ?}
   || {? TYPYDOK.TD<>''
      || {? ST.MAG_SYM=''
         || _msg:='Niewypełnione pole: '@+BO.OP_MG+'.';
            {? _edi
            || exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
            || FUN.info(_msg)
            ?};
            _wyn:='MAG_SYM'
         || ND.MD:=exec('FindInSet','#table','MG','MAGAZYNY',ST.MAG_SYM);
            _wyn:=__CHK.record(ND,~_edi,'AR','AM','TYP','MD');
            {? _edi & _wyn<>''
            || exec('nd_valid_edi_chk','magdok_nag','AR','AM','TYP','MD')
            ?};
            {? _wyn='' & ND.MD=ST.MAG & ~((';KD'*ND.TYP().DN)>1)
            || _msg:='Wybrany magazyn musi być różny\nod magazynu aktywnego w parametrach pracy systemu.'@;
               {? _edi
               || _msg:=gsub(_msg,'\n',' ');
                  exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
               || FUN.info(_msg)
               ?};
               _wyn:='MAG_SYM'
            ?}
         ?}
      || _wyn:=__CHK.record(ND,~_edi,'AR','AM','TYP');
         {? _edi & _wyn<>''
         || exec('nd_valid_edi_chk','magdok_nag','AR','AM','TYP')
         ?}
      ?}
   ?}
?};
{? (_wyn='' | _edi) & ND.TYP().UE='T' & INTRAST.NIP='' & (ND.TYP().P='N' | ND.TYP().P='T' & ND.IST_TYP<>'')
|| _msg:='Należy podać NIP UE.'@;
   {? _edi
   || exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='NIP'
?};
{? _wyn='' | _edi
||
   _klim:=__War_f('KH_DOD','KLIM',ND.KH); {? ~_klim || _klim:=ND.KH().GRKH().KLIM ?};
   _cur_brutto:=0;
   DK.index('DOKZP');
   DK.prefix(ND.ref(),0);
   {? DK.first()
   ||
      {!
      |?
         _cur_brutto+=DK.WB;
         DK.next()
      !}
   ?};
   _wyn:={? exec('lim_kred','limit_kredyt',ND.KH,date(),INFO.NAROD,3,_klim,_cur_brutto,_edi,'nagdo')
         || ''
         || 'KH'
         ?}
?};
{? ~_edi & _wyn='' & ND.RAB<>TAZ.RAB_N_BE
|| _wyn:=params_exec('chk_rab_n','ceny',ND)
?};
{? (_wyn='' | _edi) & BEER.LW='W' & ND.TYP().Z='T'
   & ({? ND.TYP().P='N' || ND.WAL<>ND.NWAL || ND.WAL<>exec('bl_nwal_mg','ustawienia') ?})
   & ND.KRS=0
|| _msg:='Należy podać kurs %1.'@[ND.WAL().KOD];
   {? _edi
   || exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='KRS'
?};
{? _wyn='' & BEER.LW='W' & ND.TYP().Z='T'
   & ({? ND.TYP().P='N' || ND.WAL<>ND.NWAL || ND.WAL<>exec('bl_nwal_mg','ustawienia') ?})
   & ND.DTK=date(0,0,0)
|| _msg:='Należy podać datę kursu.'@;
   {? _edi
   || exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='DTK'
?};
::{? _wyn='' & BEER.LW='W' & ND.WAL=ND.NWAL & ND.TYP().P='N' & ND.TYP().Z='T' & ND.WAL<>INFO.NAROD & ND.NKRS=0
::|| FUN.info('Należy podać kurs %1.'@[ND.WAL().KOD]); _wyn:='NKRS'
::?};
::{? _wyn='' & BEER.LW='W' & ND.WAL=ND.NWAL & ND.TYP().P='N' & ND.TYP().Z='T' & ND.WAL<>INFO.NAROD & ND.NKRS<>0
::  & ND.NDTK=date(0,0,0)
::|| FUN.info('Należy podać datę kursu.'@); _wyn:='NDTK'
::?};
{? ND.TYP().P='N' & ND.TYP().Z='T'
|| ND.SPOBLRAB:=exec('get','#params',800810,2)
?};
{? ND.ZL<>null() & ND.ZL().RODZAJ='N'
|| _msg:='Zlecenie produkcyjne w nagłówku dokumentu nie może być zleceniem niezależnym.'@;
   {? _edi
   || exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='ZL12'
?};
{? _wyn='' & ND.MD<>null() & ~exec('sprd_inw','magdok_wspolne',ND.D,ND.MD,,,,ND.T)
|| _wyn:='D'
?};
:: sprawdzenie uprawnien do typu dokumentu na drugim magazynie
{? (_wyn='' | _edi) & ND.MD<>null & ND.TYP().TD<>''
|| _tab:=obj_new(1); _tab[1]:=ND.MD;
   {? ~exec('sprptypd','magdok_nag',ND.TYP().TD,ND.MD)
   || _msg:='W magazynie (przesunięcia) %1 nie można wprowadzić dokumentu typu %2.\n'
       'Niemożliwe wystawienie dokumentu do magazynu (przesunięcia).'@[ND.MD().SYM,ND.TYP().TD];
      {? _edi
      || _msg:=gsub(_msg,'\n',' ');
         exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='MAG_SYM'
   ?}
?};
{? ~_edi & _wyn='' || _wyn:=exec('chk_n_intrastat','magdok_nag','N') ?};
{? (_wyn='' | _edi) & ND.MAG().SKL='T'
|| _wyn:=__CHK.record(ND,,'SCWAL');
   {? _wyn='' & ND.SCWAL=INFO.NAROD
   || _msg:='Należy wybrać walutę inną niż narodowa.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='SCWAL'
   ?};
   {? _wyn='' || _wyn:=__CHK.record(ND,,'SCKRS','SCDTK','SCPOZ') ?};
   {? _wyn='' & ND.TYP().TD='' || _wyn:=__CHK.record(ND,,'WD') ?}
?};
{? (_wyn='' | _edi) & ND.TYP().ZLEC='T' & ND.ZL=null & ND.MAG().PAL='T'
|| _msg:='W magazynie z obsługą palet dla typu dokumentu powiązanego ze zleceniem\n'
    'jest wymagane jego podanie w nagłówku dokumentu.'@;
   {? _edi
   || _msg:=gsub(_msg,'\n',' ');
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='ZL11'
?};
{? (_wyn='' | _edi) & ~exec('spr_datn','magdok_wspolne',,ND.D,,{? _edi || 2 || 1 ?})
|| _wyn:='D'
?};
{? ~_edi & _wyn=''
||
   ND.RR:=ND.D~1;
   ND.RM:=ND.D~2;
   ND.RT:=exec('NumberOfWeek','#datetime',ND.D)
?};
{? ~_edi & _wyn='' & (1+menu_txt())<>'D' & exec('FindInSet','#table','DK','DOKMAG',ND.ref())<>null
|| _msk1:=EANP.name();
   _msk2:=form((ND.D~1)-2000,-2,0,'99');
   EANP.cntx_psh();
   EANP.use((_msk1-2)+_msk2);
   EANP.clear();
   {? exec('FindInSet','#table','EANP','RNAG',$ND.ref(),$ND.ref())<>null
   || DK.cntx_psh();
      DK.index('DOKMAG');
      DK.prefix(ND.ref());
      {? DK.first()
      || {!
         |? DK.WAL:=ND.WAL;
            DK.KURS:=ND.KRS;
            DK.put(1);
            DK.next()
         !}
      ?};
      DK.cntx_pop()
   ?};
   EANP.cntx_pop()
?};
:: magazyn call-off stock
{? _wyn='' & ND.TYP().P='N' & ND.TYP().DN<>'D' & ND.MD<>null() & ND.MD().COS='T' & ND.DLAKH=''
|| _msg:='Należy wskazać kontrahenta dla magazynu.'@;
   {? _edi
   || exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='DLAKH'
?};
:: projekt
{? ~_edi & _wyn='' & type_of(params_get())>100 & var_pres('var_ndpop',params_get())>100
   & (ND.PROJEKTY<>params_get().var_ndpop.PROJEKTY
      | ND.PROJEKTY & ND.KH_ODB<>params_get().var_ndpop.KH_ODB)
|| _wyn:=exec('tabdok_chk','projekty',ND);
   params_get().var_ndpop.PROJEKTY:=ND.PROJEKTY
?};
_wyn


\sprptypd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdza typ dokumentu na drugim magazynie (czy uzytkownik ma do niego uprawnienia)
::   WE: _a - typ dokumentu
::       _b - magazyn do sprawdzenia
::   WY: 1-jest dostepny 0-nie jest
::  OLD: \sprptypd/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
TYPYDOK.cntx_psh();
_typ:=exec('FindInSet','#table','TYPYDOK','TYP',_a,_a);
_czy:=exec('FindInSet','#table','T2MG','T',_b);
{? _typ<>null
|| _tr:=exec('get','#params',1001,2,OPERATOR.USER);
   {? _tr<>''
   || _wyn:=_tr*(_a+' ');
      {? _czy || _wyn:=_wyn & exec('FindInSet','#table','T2MG','T',_typ,_b)<>null ?}
   || {? _czy || _wyn:=exec('FindInSet','#table','T2MG','T',_typ,_b)<>null ?}
   ?}
|| _wyn:=0
?};
TYPYDOK.cntx_pop();
_wyn


\chk_n_intrastat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: sprawdzenie poprawnosci wypelnienia pol dotyczacych INTRASTAT w tabeli ND
::   WE: _a - status akceptacji dokumentu
::  OLD: \chk_n/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_akc:=_a;

_return:='';

{? ND.IST_TYP<>'' & TYPYDOK.P='T'
||
   _progp:=exec('prog','intrastat',ND.D,'P');
   _progw:=exec('prog','intrastat',ND.D,'W');
   _ist_typ:=ND.IST_TYP;

   _return:=exec('check','intrastat',ND,_ist_typ,_progw,_progp,_akc)
?};

_return


\n_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: dodawanie naglowka dokumentu magazynowego
::  OLD: \n_add/magazyn2.fml
::   WE: _a - 1-przychód 0-rozchód
::       [_b] - typ dokumentu
::       [_c] - zlecenie - ZL.ref()
::       [_d] - rodzaj dokumentu: domyślnie brak '', 'Z'-zewnętrzny, 'W'-wewnętrzny
::       [_e] - kontrahent - KH.ref()
::----------------------------------------------------------------------------------------------------------------------
_typdok:={? var_pres('_b')=type_of('') || _b || '' ?};
_rodzaj:={? var_pres('_d')=type_of('') || _d || '' ?};
{? _typdok=''
|| _prod:=exec('tte_lic','tte');
   {? exec('FindInSet','#table','T2MG','T',ST.MAG)<>null()
   || _tab:=obj_new(1); _tab[1]:=ST.MAG
   || _tab:=0
   ?};
   BEER.TYPYDOK:={? ST.MAG().SKL='T' & exec('FindInSet','#table','T2MG','T',ST.MAG)=null()
                 || FUN.info('Dla magazynu typu skład celny należy przypisać typy dokumentów do magazynu.'@);
                    null()
                 || exec('typ_dok','lmg','"TYPYDOK".P='+{? _a || '\'T\'' || '\'N\'' ?}+' and '
                       +{? _prod='N' || '"TYPYDOK".WYR=\'N\'' || '"TYPYDOK".KOOP=\''+ST.MAG().KOOP+'\'' ?}
                       +' and "TYPYDOK".DK<>\'W\''
                       +{? _a
                        || ' and not ("TYPYDOK".T in (\'INW+\',\'PRC+\',\'KR+\',\'KN+\'))'
                        || ' and not ("TYPYDOK".T in (\'INW-\',\'PRC-\',\'KR-\',\'KN-\'))'
                        ?}
                       +{? _rodzaj='W'
                        || ' and "TYPYDOK".Z=\'N\''
                        |? _rodzaj='Z'
                        || ' and "TYPYDOK".Z=\'T\''
                        || ''
                        ?}
                       ,,,0,_tab,,,,,0)
                 ?};
   {? BEER.TYPYDOK=null() || return(0) ?}
|| TYPYDOK.index('TYP');
   TYPYDOK.find_key(_typdok,_typdok)
?};

_zl:={? var_pres('_c')=type_of(null()) || _c || null() ?};
_kh:={? var_pres('_e')=type_of(null()) || _e || null() ?};

exec('set_nd_var','magdok_nag');
INTRAST.NIP:='';
_ref:=ND.ref();
BEER.KRS:=0;
ZMSLAPP.ZL12:='';

_ok:=exec('czy_z_ok','okresy',1,1,ST.AR,ST.AM,ST.MAG);
XINFO.SLWYDZIA();
{? _ok=1 & TYPYDOK.KOD<>''
||
   ND.cntx_psh();
   ND.prefix();
   POM.TAB:='ND';
   POM.TYPDOK:=TYPYDOK.KOD;
   _czy_num:=exec('nr_pola','numery');
   ND.blank();
   {? ND.TYP().Z='N' || ND.WAL:=INFO.NAROD ?};
   ND.ZL:=_zl;
   {? _kh<>null()
   || ND.KH:=_kh;
      exec('ae_n_kh','magdok_nag',1)
   ?};
   BEER.KP:='';
   ND_Z.CB:=ND.CB;
   _cntx:=0;
   {? _czy_num & ND.add() & ND.r_lock(1)
   || _ref:=ND.ref();
      _stmagsym:=ST.MAG_SYM;
      ST.MAG_SYM:='';
::    intrastat
      exec('ist_wart_nd','magdok_nag');
      POM.NRT:=ND.TYP().NRT;
      TAZ.RAB_N_BE:=0;
      {? (VAR.ZAKLADKI*'D'>0 | VAR.ZAKLADKI*'M'>0)
      ||
::       Jesli dokument klasy RP to ustawiam zlecenie na ktorym powstaje produkt
         {? exec('nd_is_rp','magdok_wspolne',ND.ref()) & exec('is_separate_zl','zl_link',VAR.A_ZLEC)=0
         ||
            _main_podzlec:={? VAR.A_ZLEC().RP='T'
                           || VAR.A_ZLEC
                           || exec('main_podzlec','zl_link',VAR.A_ZLEC)
                           ?};
            {? _main_podzlec<>null()
            || _main_sym:=exec('FindAndGet','#table',ZL,#_main_podzlec,ref_name(_main_podzlec),"SYM",'');
               ND.ZL:=_main_podzlec;
               ZMSLAPP.ZL11:=ZL.SYM;
               ZMSLAPP.ZL12:=_main_sym
            ?}
         ||
            ND.ZL:=VAR.A_ZLEC;
            ZMSLAPP.ZL11:=VAR.A_ZLEC().SYM
         ?}
      ?};
      _var_ndpop:=exec('var_ndpop','magdok_nag');
      _var_ndpop.KH:=ND.KH;
      _var_ndpop.KH_ODB:=ND.KH_ODB;
      _var_ndpop.WAL:=ND.WAL;
      _var_ndpop.D:=ND.D;
      _var_ndpop.IST_TYP:=ND.IST_TYP;
      _var_ndpop.KRS:=ND.KRS;
      _var_ndpop.PO_FIRST:=1;

      params_set('context',params_get(),'var_ndpop',_var_ndpop);

      exec('nd_win_edit_set','magdok_nag');
      _fml:="{? var_pres('ND_SPRAWDZONE_F2')=type_of(0) & ND_SPRAWDZONE_F2
             || _wyn:=''
             || _wyn:=params_exec('nd_valid','magdok_nag')
             ?};
             VAR_DEL.delete('ND_SPRAWDZONE_F2');
             _wyn";

::    Wtyczka do uzupełnienia projektu lub ewentualnie innych wartości początkowych
      {? Plugin.runnable('ZWS_PROJ_003')
      || _proj_ref:={? var_pres('__PROJ_REF')=type_of('') || __PROJ_REF || '' ?};
         Plugin.run('ZWS_PROJ_003','ND',_proj_ref)
      ?};
::    PRODUKCJA
::    Jeżeli dokument wydania/przyjęcia kooperacji i w parametrach przekazana tabela z operacjami,
::    to uzupełnienie danych do nagłówka/pozycji (wymagany przypisany kontrahent na nagłówku)
      {? exec('nd_is_koop','magdok_wspolne',ND.ref()) & ND.KH<>null() & type_of(params_get())>0
         & var_pres('context',params_get())>100 & var_pres('REF_TABLE',params_get().context)>100
      || exec('dk_koop_add','zl_koop',params_get().context.REF_TABLE)
      ?};
::    Jeżeli dokument przyjęcia kooperacji i na nagłówku jest podane zlecenie, to sprawdzenie do ilu kontrahentów
::    wydano dokumenty (jak do jednego to podpowiadam kontrahenta na nagłówku)
      {? exec('nd_is_koop','magdok_wspolne',ND.ref()) & ND.TYP().P='N' & ND.ZL<>null() & ND.KH=null()
      || ND.KH:=exec('kh4zlec_get','zl_koop',0);
         {? ND.KH<>null()
         || exec('ae_n_kh','magdok_nag',1)
         ?}
      ?};

      _nag_edit:=ND.edit(_fml);
      {? ND.STAT_REJ='N' || exec('nag_edit_po','magdok_nag',_nag_edit) ?};
      {? _nag_edit & exec('FindInSet','#table','DK','DOKMAG',ND.ref())=null()
      || _find:=1;
         _cntx:=1;
         ND.cntx_pop();
         {? ~ND.seek(_ref)
         || _cntx:=0;
            ND.cntx_psh();
            ND.prefix();
            {? ND.seek(_ref)
            || ND.index('NAGDOK');
               ND.prefix(ND.AR,ND.AM,ND.MAG,ND.TYP)
            || _find:=0
            ?}
         ?};
         {? _find
         || _var_ndpop.WAL:=ND.WAL;
            BPMN.END:=1;
            params_set('context',params_get(),'var_ndpop',_var_ndpop);
            params_exec('poz_dok','magdok_poz',1);
            {? BPMN.END=2 & exec('FindInSet','#table','DK','DOKMAG',ND.ref())<>null()
            || exec('nd_zakoncz_red','magdok_nag')
            ?}
         ?}
      ?};
      ND.r_unlock();
      {? ~_nag_edit
      ||
::       usuwanie numeru
         _del:={? exec('FindInSet','#table','DK','DOKMAG',ND.ref())<>null()
               || FUN.ask('Dokument ma pozycje.\nCzy na pewno usunąć dokument?'@)
               || 1
               ?};
         {? _del || exec('n_usun','magdok_nag',0,0,,,0,,1) ?}
      ?};
      ST.MAG_SYM:=_stmagsym
   ?};
   {? ~_cntx || ND.cntx_pop() ?};
   {? ref_name(_ref)=ND.name() || ND.seek(_ref) ?}
|| {? TYPYDOK.KOD=''
   || FUN.info('Nie wypełniony kod numeracji dla %1.\nWystawianie dokumentów niemożliwe.'@[TYPYDOK.T])
   ?}
?};
1


\blok_nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza czy jest zablokowany naglowek dokumentu magazynowego
::       !! Uwaga -> po wywolaniu funkcji nalezy wywolac ND.r_unlock()
::   WE: _a - czy pokazywac komunikat (T/N)
::   WY: _wyn - 0 - zablokowany 1 - nie zablokowany
::  OLD: \blok_nd/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? ~ND.r_lock(1,1,1)
|| {? _a='T' & FUN.ask('Dokument %1 obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@[ND.SYM]) & ND.r_lock(1,,1)
   || ND.r_unlock()
   ?};
   {? var_pres('__kom')>100 & var_pres('__lp')>0
   || exec('add_kom','#message','Dokument %1 obsługuje inny użytkownik.'@[ND.SYM],4,,__lp+=1)
   ?};
   _wyn:=0
?};
_wyn


\nd_win_edit_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Ustawia okno redakcji tabeli ND, wymagane pola, okna słowników
::   WE: [_a] - 1-tryb Display 0-(domyślnie) nie
::   WY: akronim okienka
::----------------------------------------------------------------------------------------------------------------------
_disp:={? var_pres('_a')=type_of(0) || _a || 0 ?};

BPMN.END:=0;
_win_red:=exec('nd_win_edit','magdok_nag');
{? ~_disp
|| _ff:="params_exec('nd_pozycje_red','magdok_nag')";
   ND.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin'['Poz&ycje'@],_ff);

    _ff:="params_exec('priority_action_red','#b__box')";
    ND.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin'['Pr&iorytet'@],_ff);

   _ff:="_wyn:=params_exec('nd_zakoncz_red','magdok_nag');
         VAR_DEL.delete('ND_SPRAWDZONE_F2');
         {? _wyn='key:F2'
         || ND_SPRAWDZONE_F2:=1
         ?};
         _wyn";
   exec('zakoncz','#window',ND,_win_red,1,_ff,0,exec('help_red_zakoncz','#window','D'),
      exec('text_red_zakoncz','#window','D'));
   exec('ok_esc','#window',ND,_win_red,1,,,,,exec('help_red_ok','#window','Z'),exec('text_red_ok','#window')
   ,exec('help_red_esc','#window','A'))
?};
ND.win_edit(_win_red);
exec('set_efld_opt','magdok_nag',_win_red);
exec('set_win_slo','magdok_nag',_win_red);
exec('sel_win_kh','ustawienia');
ST.MAG_SYM:=ND.MD().SYM;
_win_red


\set_nd_var
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Ustawienie zmiennych wymaganych dla dokumentu magazynowego
::----------------------------------------------------------------------------------------------------------------------
DISP.TYP:='';
DISP.KHNAZ:='';
ST.TYPYDOK:=BEER.TYPYDOK:=TYPYDOK.ref();
POM.TAB:='ND';
POM.TYPDOK:=ST.TYPYDOK().KOD;
POM.NRT:=ST.TYPYDOK().NRT;
BEER.SZ:={? TYPYDOK.P='N' || 'S' || 'Z' ?}


\nd_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zwraca okno redakcji tabeli ND
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
:: Ustawia BEER.LW
exec('ust_lw','eurusd',0);

_only:=ND.MAG().IL='T';
BEER.COS:=ND.MAG().COS='T';

TYPYDOK.cntx_psh();
:: exec('ust_okna','zlec3');
{? ND.TYP().TD<>''
|| {? ND.TYP().DN='K'
   || BO.OP_MG:='pobrania z magazynu:'
   || BO.OP_MG:='dostawy do magazynu:'
   ?}
|| BO.OP_MG:=''
?};

_rodz:={? ND.TYP().P='T'
       || {? ND.TYP().TD<>'' |  ND.TYP().Z='N' || 'PW' || 'PZ' ?}
       || {? ND.TYP().TD<>'' || 'PW' |? ND.TYP().Z='N' || 'RW' || 'WZ' ?}
       ?};
_typs:={? ND.MAG().SKL='T' || 'S'
       |? 'TO'*ND.TYP().ZLEC | ND.TYP().Z='N' || 'P'
       |? ND.MAG().COS='T' & ND.TYP().Z='T' & ND.TYP().P='N' || 'C'
       || 'W'
       ?};

_win_akr:=_typs+'RED'+_rodz;

TYPYDOK.cntx_pop();

{? _win_akr*'PZ'
:: Tymczasowe okno redakcji
|| _title:='Dane dokumentu'@;
   _win_red:=ND.mk_edit(_title,,'magdoknag1',,,'html_maximized');
   ND.win_etab(_win_red,'Dane podstawowe'@);
   ND.win_ewin(_win_red,,_win_akr);
   {? ND.MAG().SKL='T'
   || ND.win_etab(_win_red,'Dane dla składu celnego'@);
      ND.win_ewin(_win_red,,'SKLAD')
   |? ~_only
   || ND.win_etab(_win_red,'Dane do Intrastat'@);
      ND.win_ewin(_win_red,,'INTRA')
   ?};
   _win_red
:: Okno redakcji
|| _title:='Dane dokumentu'@;
   _win_red:=ND.mk_edit(_title,,'magdoknag2',,,'html_maximized');
   ND.win_etab(_win_red,'Dane podstawowe'@);
   ND.win_ewin(_win_red,,_win_akr);
   {? ND.MAG().SKL='T'
   || ND.win_etab(_win_red,'Dane dla składu celnego'@);
      ND.win_ewin(_win_red,,'SKLAD')
   |? ~_only & ND.INTRAKC='T'
   || ND.win_etab(_win_red,'Dane do Intrastat'@);
      ND.win_ewin(_win_red,,'INTRA')
   ?};
   _win_red
?}


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zaznacza wymagalne pola w nagłówku dokumentu magazynowego
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || ND.win_edit('?') ?};

TYPYDOK.cntx_psh();

exec('ustaw_ww','eurusd','M');

_only:=ND.MAG().IL='T';

:: Projekt
{? ND.PROJEKTY=null() & (ND.TYP().PROJZAKR='' | TYPYDOK.PROJZAKR=exec('projzakr_nie_dotyczy','projekty'))
|| ND.efld_opt(_win_red,'enable=0',,'PROJEKTY')
|| ND.efld_opt(_win_red,'enable=1',,'PROJEKTY')
?};

:: Kontrahent
{? ND.TYP().Z='T'
|| ND.efld_opt(_win_red,'mark=1',,'KH','KOD');
   ND.efld_opt(_win_red,'enable=1',,'KH');
   ND.efld_opt(_win_red,'enable=1',INTRAST,'NIP')
|| ND.efld_opt(_win_red,'mark=0',,'KH');
   ND.efld_opt(_win_red,'enable=0',,'KH');
   ND.efld_opt(_win_red,'enable=0',INTRAST,'NIP');
   {? ND.MD<>null() & ND.MD().COS='T'
   || ND.efld_opt(_win_red,'mark=1',,'DLAKH')
   || ND.efld_opt(_win_red,'mark=0',,'DLAKH')
   ?}
?};

:: waluta
_options0:=
   {? exec('spr_ww','eurusd',0)
      &  (ND.TYP=null() | ~_only & ND.TYP().P='T' & exec('upr_cm','ceny') | ND.TYP().DS='T' & exec('upr_cs','ceny'))
   || 'enable=1'
   || 'enable=0'
   ?};
ND.efld_opt(_win_red,_options0,,'WAL');
ND.efld_opt(_win_red,_options0,,'NWAL');
ND.efld_opt(_win_red,_options0,INFO,'NAROD');

:: kurs KRS
_options1:=
   {? exec('spr_ww','eurusd',0)
      &  {? ND.TYP().P='N'
         || ND.WAL<>ND.NWAL & ND.TYP().DS='T' & exec('upr_cs','ceny')
         || ~_only & ND.WAL<>exec('bl_nwal_mg','ustawienia') & exec('upr_cm','ceny')
         ?}
   || 'enable=1'
   || 'enable=0'
   ?};
ND.efld_opt(_win_red,_options1,,'KRS');
ND.efld_opt(_win_red,_options1,,'DTK');
ND.efld_opt(_win_red,_options1,,'SWAL');
_flag1:={? _options1='enable=1' || 'mark=1' || 'mark=0' ?};
ND.efld_opt(_win_red,_flag1,,'KRS');
ND.efld_opt(_win_red,_flag1,,'DTK');

:: kurs NKRS
{? ND.TYP().P='N'
||
   _options2:=
      {? exec('spr_ww','eurusd',0)
         &  exec('upr_cs','ceny')
         &  ND.WAL<>exec('bl_nwal_mg','ustawienia')
      || 'enable=1'
      || 'enable=0'
      ?};
   ND.efld_opt(_win_red,_options2,,'NKRS');
   ND.efld_opt(_win_red,_options2,,'NDTK');
   ND.efld_opt(_win_red,_options2,,'NSWAL')
::   _flag2:={? _options2='enable=1' || 'mark=1' || 'mark=0' ?};
::   ND.efld_opt(_win_red,_flag2,,'NKRS');
::   ND.efld_opt(_win_red,_flag2,,'NDTK');
?};

:: pola dotyczące sprzedaży
{? ND.TYP().P='N'
||
   _options3:={? ND.TYP().DS='N' || 'enable=0' || 'enable=1' ?};
   ND.efld_opt(_win_red,_options3,,'SPP');
   ND.efld_opt(_win_red,_options3,,'RAB');
   ND.efld_opt(_win_red,_options3,,'RAB_TYP');
   ND.efld_opt(_win_red,_options3,,'CB')
?};

{? ND.TYP().TD<>''
|| ND.efld_opt(_win_red,'mark=1',ST,'MAG_SYM');
   ND.efld_opt(_win_red,'enable=1',ST,'MAG_SYM');
   ND.efld_opt(_win_red,'enable=1',BO,'OP_MG')
|| ND.efld_opt(_win_red,'mark=0',ST,'MAG_SYM');
   ND.efld_opt(_win_red,'enable=0',ST,'MAG_SYM');
   ND.efld_opt(_win_red,'enable=0',BO,'OP_MG')
?};
{? 'TO'*ND.TYP().ZLEC | ND.TYP().WYR='T' | ND.TYP().KOOP='T'
|| ND.efld_opt(_win_red,'enable=1',ZMSLAPP,'ZL11');
   ND.efld_opt(_win_red,'enable=1',ZMSLAPP,'ZL12');
   ND.efld_opt(_win_red,'enable=1',,'WYD')
|| ND.efld_opt(_win_red,'enable=0',ZMSLAPP,'ZL11');
   ND.efld_opt(_win_red,'enable=0',ZMSLAPP,'ZL12');
   ND.efld_opt(_win_red,'enable=0',,'WYD')
?};

:: Ustawiam wymagane pola w zależności od progów Intrastat z danego okresu
_progp:=exec('prog','intrastat',ND.D,'P');
{? _progp<>'N' & ND.IST_TYP<>'' & ND.TYP<>null() & ND.TYP().P='T'
|| ND.efld_opt(_win_red,'mark=1',,'KPW');
   ND.efld_opt(_win_red,'mark=1',,'RTRANSAK')
|| ND.efld_opt(_win_red,'mark=0',,'KPW');
   ND.efld_opt(_win_red,'mark=0',,'RTRANSAK')
?};
ND.efld_opt(_win_red,'mark=0',,'WD');
{? _progp='S' & ND.IST_TYP<>'' & ND.TYP().P='T'
|| ND.efld_opt(_win_red,'mark=1',,'WD');
   ND.efld_opt(_win_red,'mark=1',,'RTRANSPO')
|| ND.efld_opt(_win_red,'mark=0',,'RTRANSPO')
?};

:: Zaznaczam NIP UE, jeżeli to dokument unijny
{? ND.TYP().UE='T'
|| ND.efld_opt(_win_red,'mark=1',INTRAST,'NIP')
|| ND.efld_opt(_win_red,'mark=0',INTRAST,'NIP')
?};

:: Pola "Kurs" i "Z dnia" na magazynie celnym
{? ND.MAG().SKL='T' & ND.TYP().TD=''
|| ND.efld_opt(_win_red,'mark=1',,'SCKRS');
   ND.efld_opt(_win_red,'mark=1',,'SCDTK');
   ND.efld_opt(_win_red,'mark=1',,'WD')
|| ND.efld_opt(_win_red,'mark=0',,'SCKRS');
   ND.efld_opt(_win_red,'mark=0',,'SCDTK')
?};

:: Konto kosztowe
{? _only
|| ND.efld_opt(_win_red,'enable=0',,'KK')
|| ND.efld_opt(_win_red,'enable=1',,'KK')
?};

:: OSS, IOSS
{? KST.OSS<>'' | KST.IOSS<>''
|| ND.efld_opt(_win_red,'enable=1',,'KRAJ_VAT');
   ND.efld_opt(_win_red,'enable=1',,'PROC')
|| ND.efld_opt(_win_red,'enable=0',,'KRAJ_VAT');
   ND.efld_opt(_win_red,'enable=0',,'PROC')
?};

TYPYDOK.cntx_pop()


\set_efld_opt_st
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PS] [17.00]
:: OPIS: Zaznacza wymagalne pola dotyczące stanów kontrolnych.
::       Gwiazdki wymagalności pojawiają się, gdy żaden ze stanów nie jest wypełniony.
::   WE: [_a] - akronim okna redakcji, domyślnie obecnie używane
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || MST.win_edit('?') ?};

{? MST.MIN=0 & MST.MAX=0 & MST.ZI=0
|| _flag:='mark=1'
|| _flag:='mark=0'
?};
MST.efld_opt(_win_red,_flag,,'MIN');
MST.efld_opt(_win_red,_flag,,'MAX');
MST.efld_opt(_win_red,_flag,,'ZI');

{? MST.MIN<>0 & MST.MAX=0 & MST.ZI=0
|| MST.efld_opt(_win_red,'mark=1',,'MIN')
?};
{? MST.MIN=0 & MST.MAX<>0 & MST.ZI=0
|| MST.efld_opt(_win_red,'mark=1',,'MAX')
?};
{? MST.MIN=0 & MST.MAX=0 & MST.ZI<>0
|| MST.efld_opt(_win_red,'mark=1',,'ZI')
?};
~~


\set_win_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dostosowuje okno słowników
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || ND.win_edit('?') ?};

{? 'WREDPZ'*_win_red
|| KH.win_dict('WER');
   KH.actions('WER','W')
?}


\nd_zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zakonczenie redakcji dokumentu - zmiana statusu
::   WE: [_a] - 1-automatycznie bez komunikatów 0-domyślnie
::       [_b] - exec('akc_dok_a','magdok_nag')
::       [_c] - 1-automatyczna akceptacja 0(domyślnie)-nie
::       [_d] - 1-operacja grupowa 0(domyślnie)-nie
::   WY: 0 - nie zakończono redakcji dokumentu, 1 - zakończono redakcję dokumentu
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _auto:=_a || _auto:=0 ?};
_akc_dok:={? var_pres('_b')=type_of(obj_new('a')) || _b || exec('akc_dok_a','magdok_nag') ?};
_autoakc:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_group:=0;
{? var_pres('GROUP',_akc_dok)>0
|| _group:=_akc_dok.GROUP
?};
_wyn:=0;

{? ND.STAT_REJ='T'
|| {? ~_auto
   || {? _group
      ||  _txt:='Dokument jest już zaakceptowany.'@;
          exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
      || FUN.info('Dokument jest zaakceptowany.\nZadanie zostanie zakończone.'@)
      ?}
   ?};
   _wyn:=0
|? ND.STAT_REJ='Z'
|| {? ~_auto
   || {? _group
      ||  _txt:='Dokument jest już zakończony.'@;
          exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
      || FUN.info('Zakończono rejestrację dokumentu.\nZadanie zostanie zakończone.'@)
      ?}
   ?};
   _wyn:=0
|? {? ND.KH=null()
   || 0
   || _wyn0:=exec('f_kh_gv_sprawdz','faktury_nag1','ND',1,0);
      _ok:=_wyn0.WYNIK;
      _msg:=_wyn0.MSG;
      &_wyn0;
      {? ~_ok
      || {? _group
         || exec('add_kom','#message',ND.SYM,5,gsub(_msg,'\n',' '))
         || FUN.info(_msg+'\nZakończenie niemożliwe.'@)
         ?}
      ?};
      ~_ok
   ?}
|| _wyn:=0
|? exec('stND2EANN','magazyn_mobi')='K'
|| {? ~_auto
   || {? _group
      ||  _txt:='Dokument został przesłany na urządzenie mobilne do potwierdzenia.'@;
          exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
      || FUN.info('Dokument został przesłany na urządzenie mobilne do potwierdzenia.\nZakończenie niemożliwe.'@)
      ?}
   ?};
   _wyn:=0
|? ND.TYP().VALIDATE<>null() & ~exec('validate','wzorce',ND.TYP().VALIDATE,ND,ND.ref())
|| _wyn:=0
|? ND.STAT_REJ='N'
|| ND.cntx_psh();
   {? _auto
   || _akc_dok.ASK:='N';
      _akc_dok.INFO:='N'
   ?};
   {? ND.TYP().DK='T' & ND.TYP().Z='T'
   || ND.DA:=date();
      ND.TA:=time();
      ND.Z:='T';
      ND.STAT_REJ:='Z';
      {? ND.IST_TYP<>'' || ND.INTRAKC:=exec('get','#params',100202,2) ?};
      {? ND.put(1)
      || DK.cntx_psh();
         DK.index('DOKMAG');
         DK.prefix(ND.ref());
         {? DK.first() || {! |? DK.Z:='T'; DK.put(1); DK.next() !} ?};
         DK.cntx_pop()
      ?}
   |? exec('akc_dok','magdok_nag',_akc_dok)=1
   ||
      ND.prefix();
      ND.Z:='T';
      ND.STAT_REJ:='Z';
      {? ND.IST_TYP<>'' || ND.INTRAKC:=exec('get','#params',100202,2) ?};
      ND.put(1)
   ?};
   ND.cntx_pop();
   {? ND.get() || _wyn:=ND.STAT_REJ='Z' ?}
?};
{? _wyn & _autoakc
|| exec('nd_akceptuj','magdok_nag',{? _group || 2 || 1 ?});
   ND.cntx_psh();
   ND.index('MM');
   ND.prefix($ND.ref(),);
   {? ND.first() & exec('get','#params',600280,2)='T' || exec('nd_zakoncz','magdok_nag',1,_akc_dok,_autoakc) ?};
   ND.cntx_pop()
?};
_wyn


\nd_zakoncz_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument magazynowy - Zakończ - okno redagowania
::   WE: params_get()
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu magazynowego prawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu magazynowego
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().context.mp;

_autoakc:=exec('autoAkc','#b__box',_mp,600080,'LMG_MAG_EAMG');

_btnRuleResult:='';

_fld:=params_exec('nd_edit_finisher','magdok_nag');
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| {? exec('nd_zakoncz','magdok_nag',BPMN.END=2,,_autoakc)
   || _btnRuleResult:='key:F2';
      _res:=1;
      ND.cntx_psh();
      {? BEER.NDPOW<>null()
      || _name:=ND.name();
         _namm:=ref_name(BEER.NDPOW);
         {? _namm<>_name
         || ND.cntx_psh();
            ND.use(_namm)
         ?};
         ND.clear();
         {? ND.seek(BEER.NDPOW)
         || _mp.save('OUT','NDPOW',BEER.NDPOW);
            _mp.save('OUT','ND',exec('FindAndGet','#table',ND,BEER.NDPOW().NDSQL,,,null()))
         || _res:=0
         ?};
         {? _namm<>_name
         || ND.use(_name);
            ND.cntx_pop()
         ?}
      ?};
      ND.cntx_pop();
::    Dla przyjęcia z kooperacji generowanie wykonań
      {? _mp.buf_act.UID='TTE_WYK_DKOP'
      || _out:=_mp.load(exec('kind_out','#b_port'));
         exec('gen_dk_wyk','zl_koop',_out.ND)
      ?};
      {? _res || _mp.done() || _mp.cancel() ?}
   ?}
?};

_btnRuleResult


\nd_sym_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła określająca ikony statusu dokumentu magazynowego
::----------------------------------------------------------------------------------------------------------------------
"
   {? ND.STAT_REJ='T' || exec('zaakceptowany','icon')
   |? ND.STAT_REJ='Z' || exec('zarejestrowany','icon')
   |? ND.STAT_REJ='N' || exec('pusta','#icon')
   || exec('pusta','#icon')
   ?}
"


\nd_sym_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła określająca ikony
::----------------------------------------------------------------------------------------------------------------------
exec('nd_sym_i','magdok_nag')


\n_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2006]
:: OPIS: usuwa naglowek dokumentu oraz pozycje
::   WE:  [_a] - czy pytac (0/[1])
::        [_b] - czy wywolywac transakcje (0/[1])
::        [_c] - gdy _a=0 przekazuje wartosc dla zmiennej _ur
::        [_d] - aktualizacja 1(domyslnie) rezerwacji 0-nie
::        [_e] - 0/[1] - czy sprawdzac powiazania z partiami i jesli sa to blokowac usuwanie? (domyslnie: tak)
::        [_f] - 1-bez ND.del (domyślnie 0)
::        [_g] - odświeżyć stany (domyślnie 0)
::        [_h] - tabela z listą refów DK, dla których wymuszać przywracanie rezerwacji
::        [_i] - [0]/2 - czy usuwać FAP2DK
::   WY:  (0/1) czy usunieto
::  OLD: \n_usun/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>1 || _a:=1 ?}  || _a:=1  ?};
{? _>=2  || {? type_of(_b)<>1 || _b:=1 ?}  || _b:=1  ?};
{? _>=3  || {? type_of(_c)<>1 || _c:=1 ?}  || _c:=1  ?};
{? _>=4  || {? type_of(_d)<>1 || _d:=1 ?}  || _d:=1  ?};
{? var_pres('_e')=type_of(0) || _part_chk:=_e || _part_chk:=1 ?};
{? _>=6  || {? type_of(_f)<>1 || _f:=0 ?}  || _f:=0  ?};
{? _>=7  || {? type_of(_g)<>1 || _g:=0 ?}  || _g:=0  ?};
_dk_rez:=~~;
_zl_rez:=0;
{? var_pres('_h')>100
|| _dk_rez:=_h;
   _zl_rez:=1
?};
{? _>=9  || {? type_of(_i)<>type_of(1) || _i:=0 ?}  || _i:=0  ?};
_wyn:=0;

_ur:=_ui:=0;
_up:=_i;
_inw:=0;
{? ND.get() & exec('blok_nd','magdok_nag','T')
 & exec('czy_z_ok','okresy',1,1,ND.D~1,ND.D~2,ND.MAG)
 & {? exec('czyTR_NZL','transport_wspolne',ND.uidref(),1)
   || FUN.info('Do dokumentu wystawiono dyspozycje transportu.\nUsunięcie niemożliwe.'@);
      0
   || 1
   ?}
 & {? (_rek:=exec('dokWITHrek','reklamacje',ND.uidref()); _rek<>'')
   || {? 1+_rek='S'
      || FUN.info('Dokument powiązany z reklamacją klienta %1.\nUsunięcie niemożliwe.'@[2-_rek])
      || FUN.info('Dokument powiązany z reklamacją dostaw %1.\nUsunięcie niemożliwe.'@[2-_rek])
      ?};
      0
   || 1
   ?}
||
   _inw:=ND.INN='T';
   {? exec('mod_dok','magdok_nag') & (_rr:=exec('spr_doku','magdok_wspolne',ND.ref()))<>0
   ||
      _no_ans:=(_rr=1 | _rr=2) & exec('get','#params',3008,2,OPERATOR.USER)='P';
::    kontrola wydawanych palet
      _lpalet:={? ND.MAG().PAL='T' & ND.TYP().P<>'T' || exec('czy_lpal','magdok_palety',1,ND.ref()) || '' ?};

::    _a=0 podczas usuwania korekt KR+ KR-; dok. powiazanych typu MP, RKOM; realizacji zam. gdy przekroczony limit
      {? _a=0 || _ur:=_c || _ur:=exec('spr_zk','magdok_wspolne',0,1,'u') ?};
      {? _ur>0 & (_a=0 | (_ui:=exec('spr_inwe','magdok_wspolne')))
      || {? _lpalet<>''
         || FUN.info('Jedna z pozycji dokumentu zawiera rozpakowaną paletę,\n'
             'która została całkowicie wydana (pozycja dokumentu wydania).\n'
             '%1\n'
             'Usunięcie pozycji dokumentu niemożliwe.\nUsunięcie dokumentu niemożliwe.'@[_lpalet]);
            _wyn:=0
         |? ND.TYP().P='T' & ND.TYP().Z='T' & ND.TYP().DS='N' & ND.TYP().DK='N' &
             ~(_up:=exec('skad_gen','magdok_wspolne',$ND.ref(),_a))
         || _wyn:=0
         |?
            _zlgd:=exec('has_zlgd_nd','magdok_wspolne',ND.ref());
            _can_continue:=1;
            {? _zlgd>0
            ||
               {? _a
               || _can_continue:={? ~_zlgd & _no_ans
                                 || 1
                                 || FUN.ask({? _zlgd
                                            || 'Usunąć dokument %1 o symbolu: %2?\n'
                                               '\nUwaga: dokument powiązany z rejestracją robocizny.'@[ND.TYP().T,ND.SYM]
                                            || 'Usunąć dokument %1 o symbolu: %2?'@[ND.TYP().T,ND.SYM]
                                            ?})
                                 ?}
               || _can_continue:=1
               ?}
            ||
               {? _a
               || _czypow:=ND.MAG().MWS='T' & exec('FindInSet','#table','DK_LN','ZDOK',$ND.ref(),$ND.ref());
                  _czyope:=exec('stND2EANN','magazyn_mobi')='K';
                  _can_continue:={? ~_czypow & ~_czyope & _no_ans
                                 || 1
                                 || FUN.ask(
                                    {? _czyope
                                    || 'Uwaga. Na podstawie dokumentu wygenerowano operację na urządzeniu mobilnym.\n'
                                       'Usunięcie dokumentu usuwa powiązaną operację.\n\n'
                                       'Usunąć dokument %1 o symbolu: %2?'@[ND.TYP().T,ND.SYM]
                                    |? _czypow
                                    || 'Uwaga. Na podstawie dokumentu wygenerowano reorganizaję magazynu.\n'
                                       'Usunięcie dokumentu nie usuwa powiązanej reorganizacji.\n\n'
                                       'Usunąć dokument %1 o symbolu: %2?'@[ND.TYP().T,ND.SYM]
                                    || 'Usunąć dokument %1 o symbolu: %2?'@[ND.TYP().T,ND.SYM]
                                    ?})
                                 ?}
               || _can_continue:=1
               ?}
            ?};
            {? _can_continue>0 & exec('nd_il_zpars','magdok_wspolne',$ND.ref())>0
            ||
               {? _part_chk>0
               ||
::                Obsluga partii produkcyjnych - sprawdzenie czy dokument ma powiazania z partiami
::                Jesli tak to nie moge go usunac
                  _can_continue:=0;
                  _msg0:='';
                  _msg1:='Dokument: %1 jest powiązany z partiami produktów.'@[ND.SYM];
                  _msg2:='Usunięcie dokumentu niemożliwe.'@;
                  {? ND.ZL<>null()
                  || _msg3:='Aby usunąć ten dokument należy w obszarze Zleceń '@;
                     _msg4:='na zleceniu: %1 uruchomić \'ROZLICZENIE PARTII\''@[ND.ZL().SYM];
                     _msg5:='i stamtąd usunąć powiązania dokumentu z partiami zlecenia.'@
                  || _msg3:='Aby usunąć ten dokument należy w obszarze Zleceń '@;
                     _msg4:='na zleceniach powiązanych z dokumentem uruchomić \'ROZLICZENIE PARTII\''@;
                     _msg5:='i stamtąd usunąć powiązania dokumentu z partiami zlecenia.'@
                  ?};
                  _msg_glued:=exec('form','#string','L',_msg1
                                                       ,_msg2
                                                       ,_msg0
                                                       ,_msg3
                                                       ,_msg4
                                                       ,_msg5);
                  FUN.emsg(_msg_glued)
               ||
::                Nie sprawdzamy powiazan z partami, tylko je wycinamy
                  _can_continue:=exec('delete4nd','magdok_nag',ND.ref())
               ?}
            ?};

            {? ND.TYP().P='N' & _can_continue>0 & exec('spr_nd_lim','magdok_wspolne',ND.ref())=0
            || _can_continue:=0;
               FUN.emsg(exec('form','#string','L',
                  'Usunięcie pozycji dokumentu spowoduje ujemne stany na limitach zleceń.'@,
                  'Usunięcie dokumentu niemożliwe.'@
               ))
            ?};
            {? _can_continue>0 & (_rem_grm:=0;
                                 DK.cntx_psh();
                                 DK.index('DOKMAG');
                                 DK.prefix(ND.ref());
                                 {? DK.first()
                                 || {!|?
                                       {? DK.REM_GRM<>null() || _rem_grm:=1 ?};
                                       DK.next() & ~_rem_grm
                                    !}
                                 ?};
                                 DK.cntx_pop();
                                 _rem_grm)
            || _can_continue:=FUN.ask('Dokument powiązany ze zgłoszeniem remontowym.\nUsunąć dokument?'@)
            ?};

            _can_continue
         ||
            {? _b || do() ?};
            {? _ur=2 || exec('del_rear','magdok_nag'); exec('del_real','zamsiw_rea','N',,_d) ?};
            {? _ur=3 || exec('usun_rea','zamdst_rea',$ND.ref,2,1) ?};
            {? _up=2 | ND.TYP().DK='T' || exec('skad_del','magdok_wspolne',$ND.ref()) ?};
::          usuwa zalaczniki
            _ok:=0;
            {? exec('deladok','dokum','ND')<>1
            || _wyn:=0;
               undo();
               FUN.info('Dokumentu %1 nie udało się usunąć,\n'
                'ponieważ usunięcie załączników nie powiodło się.'@[ND.SYM])
            || _ok:=1
            ?};
::          usunięcie powiązań ze zgłoszniami remontowymi
            {? _ok
            ||
               REM_GRM.cntx_psh();
               REM_GRM.prefix();
               DK.cntx_psh();
               DK.index('DOKMAG');
               DK.prefix(ND.ref());
               {? DK.first()
               || {!|?
                  {? DK.REM_GRM<>null()
                  || REM_GRM.use(ref_name(DK.REM_GRM));
                     DK.REM_GRM();
                     REM_GRM.ND:='N';
                     REM_GRM.UIDREFDK:='';
                     _ok:=REM_GRM.put()
                  ?};
                  DK.next() & _ok
                  !}
               ?};
               DK.cntx_pop();
               REM_GRM.cntx_pop();
               {? ~_ok
               ||
                  _wyn:=0;
                  undo();
                  FUN.info('Dokumentu %1 nie udało się usunąć,\n'
                   'ponieważ nie udało się usunąć powiązań ze zgłoszeniami remontowymi.'@[ND.SYM])
               ?}
            ?};
::          usunięcie powiązań z pozycjami dokumentów sprzedaży
            {? _ok
            ||
               DK.cntx_psh();
               DK.index('DOKMAG');
               DK.prefix(ND.ref());
               {? DK.first()
               || {!
                  |?
                     exec('delfap2dk','magdok_wspolne',$DK.ref());
                     DK.next()
                  !}
               ?};
               DK.cntx_pop()
            ?};

            DK.index('DOKMAG');
            DK.prefix(ND.ref());
            _il_poz:=DK.size(); _i:=0;
            _pal:=tab_tmp(1,'PAL','STRING[16]','');

            {? _ok & DK.first()
            || _mat:=tab_tmp(1,'MAT','STRING[16]',''
                      ,'NRK','INTEGER',''
                      ,'ILE','REAL','');
::             przywrócenie rezerwacji na fakturze
               {? ND.FAKS_REF<>'' & ND.TYP().P='N' & exec('FindAndGet','#table',FAKS,ND.FAKS_REF,,"WHERE",'N')='G'
               || exec('newrezfp','faktury_wspolne',ND.ref)
               ?};

               _is_rp:=exec('nd_is_rp','magdok_wspolne',ND.ref());
               {!
               |?
::                kontroling
:: DRO:[rr] schematy.fml
::                  exec('aktualizacja_mp','schematy',DK.N,DK.ref(),'U');
                  exec('delprzyp','fakso','FAKSO','DK',DK.ref());
:: produkcja kooperacja aktualizacja ilosci na pozycji przewodnika
                  {? DK.ZGP<>null & DK.N().TYP().KOOP='T' & DK.N().TYP().P='T'
                  || exec('akt_zgp_ilkoop','zl_koop',DK.ZGP,DK.IL)
                  ?};
                  exec('delFAP_K','oplaty_dod',DK.N().uidref(),DK.uidref(),null());
                  FAP_K.index('DKSQL');
                  FAP_K.prefix($DK.ref());
                  {? FAP_K.first() || {! |? exec('dk_k_del','magdok_poz') !} ?};
                  {? DK.count()>0
                  || DK_L.index('DK');
                     DK_L.prefix(DK.ref(),null);
                     {? DK_L.first()
                     || {!
                        |? {? DK_L.PAL<>null
                           || _pal.clear();
                              {? ~_pal.find_key($DK_L.PAL)
                              || _pal.blank();
                                 _pal.PAL:=$DK_L.PAL;
                                 _pal.add(1)
                              ?};
                              {? DK_L.ZPALET=2
                              || _cen_dk:={? (';FL'*DK.N().TYP().AFIFO)>1 || -1 || DK_L.DK().C ?};
                                 exec('poz_bpal','magdok_palety',0,$DK_L.PALDO,$DK_L.PAL,DK_L.DK().M().KTM,DK_L.IL
                                  ,_cen_dk,DK_L.TW);
                                 exec('zwrilpal','magdok_palety',DK_L.PAL,DK_L.DK().M().KTM,DK_L.IL,_cen_dk,DK_L.TW)
                              ?}
                           ?};
                           DK_L.del()
                        !}
                     ?}
                  ?};

                  _i+=1;
                  _mat.clear();
                  {? _mat.find_key($DK.M)
                  || _mat.ILE+=DK.IL;
                     _mat.put(1)
                  || _mat.blank();
                     _mat.MAT:=$DK.M;
                     _mat.NRK:=exec('FindInSet','#table','REZ','RODZ',DK.M,'W',"REZ.NRK",,,0);
                     _mat.ILE:=DK.IL;
                     _mat.add(1)
                  ?};

                  _ref_kor:=DK.REF_KOR;

                  exec('dk_del','magdok_poz',$DK.ref());

                  {? ND.TYP().DK='W'
                  ||
::                   poprawia pole SM.ST_WAR
                     exec('sm_upd','magazyn_stan',DK.name()+3,DK.M,DK.WAR)
                  ?};

                  SCH_XD.cntx_psh;
                  SCH_XD.use('scxd_'+(8+$DK.ref()+3));
:: DRO:[rr] schematy.fml
::                  exec('del_sch_xd','schematy','M');
                  SCH_XD.cntx_pop;

                  exec('DK_HS_del4DK','statexam',DK.ref());
                  exec('karo_dk_del','magdok_poz',$DK.ref());

                  {? DK.PLUS='N'
                  || {? _ur<>2 || exec('update','rezerwacje','DK',DK.ref(),ND.MAG,DK.M,0,DK.SRDK) ?};
::                   Produkcja: Jeżeli pozycja dokumentu powstała na podstawie dedykowanej rezerwacji
::                   surowca nielimitowanego, to przywracam wykorzystaną rezerwację
                     exec('returnrt','rezerwacje',$DK.ref(),form((8+($DK.ref())))+3,
                     {? _zl_rez>0 & _dk_rez.find_key($DK.ref()) || 2 || _rr ?},DK.N().KH)
                  ?};

                  {? DK.N().TYP().P='T' & ~(DK.N().TYP().DN='T' & DK.DOST<>date(0,0,0))
                   & DK.SCEAN<>'' & DK.M().IDMOB='D' & DK.SRDK=DK.PRDK &
                   (DK.N().INN='T' & DK.N().TYP().INW='I' & DK.N().TYP().P='T')
                  || _ok:=exec('mkodkadd','kody_kresk',DK.M,DK.SCEAN,$DK.ref(),1)
                  ?};

                  exec('del','dokuml',DK.uidref());

::                Dla dokumentu RW sprawdzane jest, czy usuwana pozycja jest ostanią pozycją dokumentu RW danego limitu.
::                Jeżeli tak to odblokowuję możliwość rejestracji nielimitu/odpadu na zleceniu montażowym/podzleceniu.
                  _chk_lim:=(exec('nd_is_rw','magdok_wspolne',DK.N) | exec('nd_is_zw','magdok_wspolne',DK.N)) & DK.ZLIM<>null()
                            & exec('FindAndGet','#table',ZLIM,DK.ZLIM,,
                               "ZLIM.PODZL<>'' & (ZLIM.SO='O' | ZLIM.SO='S' & ZLIM.LIMIT='N')",0);
                  _uidref:=DK.uidref();
                  _zlim:=DK.ZLIM;
                  _zgp:=DK.ZGP;
                  _zparn:=DK.PARTIA;

                  _prev:=$DK.ref();

                  _ok:=DK.del();

                  {? _chk_lim & _prev<>$DK.ref()
                  || exec('zlim_chk_podzl','zl_limit',_zlim)
                  ?};

                  {? _is_rp>0 & _prev<>$DK.ref()
                  ||
::                   Usunięcie powiązań z robocizną
                     exec('robocizna_dk_del','magdok_prod',_uidref,_zgp,_zparn)
                  ?};

                  {? ~_ok & ~exec('czy_kor','magdok_wspolne',_ref_kor) & _ref_kor<>''
                  ||
                     _msk:=form(8+_ref_kor);
                     ND.cntx_psh();
                     DK.cntx_psh();
                     {? _msk<>DK.name()
                     || ND.use('nagdo'+(_msk+3));
                        DK.use(_msk)
                     ?};
                     ND.prefix();
                     DK.prefix();
                     {? DK.seek(_ref_kor,) & ND.seek(DK.N) || ND.KOR:='N'; ND.put() ?};
                     DK.cntx_pop();
                     ND.cntx_pop()
                  ?};
                  _ok
               !}
            ?};
::          aktualizacja znacznikow na paletach
            {? _pal.size() & _pal.first()
            || {!
               |? exec('znacznik','magdok_palety',exec('FindAndGet','#table','PAL',_pal.PAL,,,null()));
                  _pal.next()
               !}
            ?};
            obj_del(_pal);
            exec('delprzyp','fakso','FAKSO','ND',ND.ref());
            FAKS_K.index('N');
            FAKS_K.prefix('N',ND.IDADD);
            {? FAKS_K.first() || {! |? FAKS_K.del() !} ?};
            {? do_state()<2 & ~Plugin.run('BEFORE_DELTAB_001',ND.ref()) & do_state() || undo() ?};
            POM.TAB:='ND';
            POM.TYPDOK:=ND.TYP().KOD;
            numer:=ND.NR;
            oldnumer:=1;
            exec('nr_old','numery');

            exec('nd_del','magdok_nag',$ND.ref());
::          wyczyszczenie informacji Z EANN
            _msk1:=EANP.name();
            _msk2:=form((ND.D~1)-2000,-2,0,'99');
            EANP.cntx_psh();
            EANN.cntx_psh();
            EANW.cntx_psh();
            EANN.use('eann'+(1+(_msk1+3))+_msk2);
            EANP.use('eanp'+(1+(_msk1+3))+_msk2);
            EANW.use('eanw'+(1+(_msk1+3))+_msk2);
            EANP.index('RNAG');
            EANP.prefix($ND.ref(),$ND.ref());
            {? EANP.first()
            || {!
               |? _ref:=EANP.ref(); _ok:=EANP.next();
                  EANP.cntx_psh();
                  EANP.clear();
                  {? EANP.seek(_ref)
                  || EANP.RSQL:='delete';
                     EANP.RNAG:='delete';
                     EANP.put(1);
                     EANN.clear();
                     {? EANN.seek(EANP.EANN) & EANN.REFSQL=$ND.ref()
                     || EANN.REFSQL:='delete';
                        EANN.put(1)
                     ?}

                  ?};
                  EANP.cntx_pop();
                  _ok
               !}
            ?};
            EANP.cntx_pop();
            EANN.cntx_pop();
            EANW.cntx_pop();
            EANN.cntx_psh();
            EANN.index('REFSQL');
            EANN.prefix($ND.ref(),$ND.ref());
            {? EANN.first()
            || {!
               |? _ref:=EANN.ref(); _ok:=EANN.next();
                  EANN.cntx_psh();
                  EANN.clear();
                  {? EANN.seek(_ref)
                  || {? EANN.AKT='T'
                     || EANP.index('EANN');
                        EANP.prefix(EANN.ref());
                        {? EANP.first()
                        || {!
                           |? EANW.index('EANP');
                              EANW.prefix(EANP.ref());
                              {? EANW.first() || {! |? EANW.del() !} ?};
                              EANP.del()
                           !}
                        ?};
                        EANN.del()
                     || EANN.REFSQL:='';
                        EANN.put(1)
                     ?}
                  ?};
                  EANN.cntx_pop();
                  _ok
               !}
            ?};
            EANN.cntx_pop();
::          wyczyszczenie informacji z DK_LN
            DK_LN.cntx_psh();
            DK_LN.index('ZDOK');
            DK_LN.prefix($ND.ref(),$ND.ref());
            {? DK_LN.first()
            || {!
               |? _dkln:=DK_LN.ref(); _ok:=DK_LN.next();
                  DK_LN.cntx_psh();
                  DK_LN.clear();
                  {? DK_LN.seek(_dkln)
                  || DK_LN.ZDOK:='';
                     DK_LN.put(1)
                  ?};
                  DK_LN.cntx_pop();
                  _ok
               !}
            ?};
            DK_LN.cntx_pop();

            _mag:=ND.MAG;
            _plus:=ND.TYP().P;
::          usuniecie informacji o realizacjach
            {? _plus='T'
            || ZD_RN.cntx_psh();
               ZD_RN.index('ND');
               ZD_RN.prefix($ND.ref());
               {? ZD_RN.first()
               || {!
                  |? _zd:=ZD_RN.ref();
                     _next:=ZD_RN.next();
                     ZD_RN.cntx_psh();
                     ZD_RN.clear();
                     {? ZD_RN.seek(_zd) || ZD_RN.ND:=''; ZD_RN.SPZ:=''; ZD_RN.put(1) ?};
                     ZD_RN.cntx_pop();
                     _next
                  !}
               ?};
               ZD_RN.cntx_pop()
            ?};
::          usuwa podziały controllingowe
            SCH_XD.cntx_psh(); SCH_XD.use('scxd_'+(ND.name()+3));
            SCH_XD.index('ND'); SCH_XD.prefix(ND.ref());
            {? SCH_XD.first() || {! |? SCH_XD.del() !} ?};
            SCH_XD.cntx_pop();
::          aktualizacja dyspozycji w magazynie
            exec('delDYSPdok','transport',ND.uidref());
            {? ~_f
            || _wyn:=ND.del(1,1)
            ?};
            {? _b || end() ?};
            _tran:=do_state();

::          aktualizacja rezerwacji po usunieciu dokumentu
::          tylko gdy nie ma transakcji z uwagi na mozliwosc blokowania rekordow
::          aktualizuje stany magazynowe

            {? ~_tran & _il_poz>0 & (_b | _g | _inw) & _plus='N'
            || _mat.clear();
               {? _mat.first()
               || {!
                  |? _refmate:=exec('FindAndGet','#table','M',_mat.MAT,,,null());
                      exec('obl_stan','magazyn_stan',_refmate,1,_mag);
                      exec('aktu_rez','rezerwacje',_refmate,_mat.NRK,_mat.ILE);
                     _mat.next()
                  !}
               ?}
            ?}
         ?}
       ?}
   ?}
?};
{? _wyn=0 || ND.r_unlock() ?};
_wyn


\mod_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: sprawdza czy mozna modyfikowac dokument
::   WE: [_a] - 1 usluga
::       [_b] - 1 wywolywanie funkcji podczas akcji popraw
::       [_c] - Dodatkowa informacja
::  OLD: \mod_dok/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>2 || _c:=0 ?} || _c:=0 ?};

{? DK.M().RODZ='U' & _b=1 || _a:=1 ?};

{? DK.size()=1 & POMOC.RODZ='U'
|| _a:=1
?};

{? _a=1 || POMOC.RODZ:='U' || POMOC.RODZ:='T' ?};
{? _b=1 || POMOC.RODZ:=DK.M().RODZ ?};

ND.get();
_czyzakc:=ND.Z='T' | (';T'*ND.STAT_REJ)>1;
{? _czyzakc & ND.TYP().DK<>'W'
|| FUN.info({? +_c || _c+'\n\n' || '' ?}+'Dokument jest zaakceptowany modyfikacje niedozwolone.'@);
   BEER.RRP:=0;
   BEER.M:=null;
   _ok:=0
|? ND.ZAK='T' & ND.TYP().DK='W'
|| FUN.info({? +_c || _c+'\n\n' || '' ?}+'Dokument jest zaksięgowany modyfikacje niedozwolone.'@);
   BEER.RRP:=0;
   BEER.M:=null;
   _ok:=0
|| DK.get();
   BEER.RRP:=#DK.ref();
   BEER.M:=DK.M;
   _ok:=1
?};
_ok


\delete4nd
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [12.30]
:: OPIS: Usuwa wszystkie ZPARS powiazane z danym dokumentem
::   WE: _a - ND.ref()
::   WY: 0 - porazka
::       1 - sukces
::  OLD: \delete4nd/zpars.fml
::----------------------------------------------------------------------------------------------------------------------
_nd:=_a;

_result:=0;
_can_continue:=0;

ND.cntx_psh(); ND.clear();
DK.cntx_psh();
DK.index('DOKMAG');
TYPYDOK.cntx_psh();

{? ND.seek(_nd)
||
   {? exec('nd_is_rw','magdok_wspolne',ND.ref())>0 | exec('nd_is_zw','magdok_wspolne',ND.ref())>0
   ||
      _can_continue:=0;
      DK.prefix(ND.ref);
      {? DK.first()
      || {!
         |? _can_continue:=exec('delete4dk','magdok_poz',DK.ref(),0);
            DK.next() & _can_continue>0
         !}
      ?}
   ?}
?};
{? _can_continue>0
|| _result:=1
?};

TYPYDOK.cntx_pop();
DK.cntx_pop();
ND.cntx_pop();
_result


\del_rear
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: usuwa rezerwacje na pozycjach aktualnego dokumentu
::  OLD: \del_rear/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(ND.ref());
{? DK.find_tab('first','PLUS',,'=','N')
|| {!
   |? exec('update','rezerwacje','DK',DK.ref(),ND.MAG,DK.M,0,DK.SRDK);
      DK.find_tab('next','PLUS',,'=','N')
   !}
?};
DK.cntx_pop()


\usun_dpz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: usuniecie realizacji
::   WE: _a - ref SQL-owy dokumentu
::       [_b] - 0(domyslnie) usuniecie dokumentu 1-usuniecie odwolan -1-usniecie dokumentu bez odwolan
::  OLD: \usun_dpz/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

ND.cntx_psh();
DK.cntx_psh();
DK_L.cntx_psh();
FAKS_K.cntx_psh();
FAP_K.cntx_psh();
FAKSO.cntx_psh();

_msk:=form(8+_a)+3;
ND.use('nagdo'+_msk);
FAKS_K.use('fakkk'+_msk);
DK.use('dokma'+_msk);
DK_L.use('doklk'+_msk);
FAP_K.use('fapkk'+_msk);
FAKSO.use('fakto'+_msk);

{? (ND.clear; ND.seek(_a,ND.name))
|| {? (_up:=exec('skad_gen','magdok_wspolne',$ND.ref()))
   ||
      _do_state:=do_state();
      {? _do_state=0 || do() ?};

      exec('zdreusu','zamdst_rea',1);

      {? _up=2
      ||
::       usunięcie powiązań do dokumentu zakupu
         exec('skad_del','magdok_wspolne',$ND.ref())
      ?};

      {? _b<=0
      ||
         _nd_ref:=ND.ref();
         _nd_sym:=ND.SYM;
::       usunięcie dokumentu magazynowego
         exec('n_usun','magdok_nag',0,0);

::       sprawdzenie czy dokument został usunięty, jeśli nie to przerwanie usuwania realizacji
         ND.prefix(); {? ND.seek(_nd_ref) || undo() ?};

::       zerowanie znacznika dla powiazanych realizacji
         {? ~_b
         ||
::          zerowanie znacznika dla powiazanych realizacji
            ZD_RN.cntx_psh();
            ZD_RN.index('ND');
            ZD_RN.prefix($_nd_ref,_nd_sym);
            {? ZD_RN.first()
            ||
               {!
               |?
                  ZD_RN.cntx_psh(); ZD_RN.prefix(); ZD_RN.ND:=''; ZD_RN.SPZ:=''; ZD_RN.put(); ZD_RN.cntx_pop();
                  ZD_RN.first()
               !}
            ?};
            ZD_RN.cntx_pop()
         ?}
      ?};
      {? _do_state=0 || end() ?}
   ?}
?};
ND.cntx_pop();
DK.cntx_pop();
DK_L.cntx_pop();
FAKS_K.cntx_pop();
FAP_K.cntx_pop();
FAKSO.cntx_pop();
''


\nd_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: przed ND.del() - szuka powiazanego dokumentu opakowan do usuniecia
::   WE: _a - $ND.ref()
::  OLD: \nd_del/opakow.fml
::----------------------------------------------------------------------------------------------------------------------
OPAK_N.cntx_psh();
OPAK_N.index('ND');
OPAK_N.prefix(_a);
{? OPAK_N.first()
||
   OPAK_N.clear();
   OPAK_N.ND:='';
   OPAK_N.put();

   OPAK_P.cntx_psh();
   OPAK_P.index('OPAK_N');
   OPAK_P.prefix(OPAK_N.ref());
   {? ~OPAK_P.first()
   || exec('opkn_del','opakow',0,'D')
   ?};
   OPAK_P.cntx_pop()
?};
OPAK_N.cntx_pop();
''


\nag_edit_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Parametry funkcji exec('nag_edit','magdok_nag')
::   WE:
::   WY: tablica parametrów
::----------------------------------------------------------------------------------------------------------------------
_arg:=obj_new('ND_UNLOCK');
_arg.ND_UNLOCK:=1;
_arg


\nag_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja Popraw dla naglowka dokumentu magazynowego
::   WE: [_a] - exec('nag_edit_a','magdok_nag')
::  OLD: \nag_edit/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_arg:={? var_pres('_a')=type_of(obj_new('a')) || _a || exec('nag_edit_a','magdok_nag') ?};

_wyn:=0;
_nag_mod:=exec('nag_mod','magdok_nag');
{? _nag_mod>0
|| VAR_DEL.delete('Krs_be','Krs_f3');
   exec('spr_zk','magdok_wspolne',0,0,'i');
   Krs_be:=ND.SCKRS;
   Krs_f3:=0;
   {? ND.TYP().UE<>'T' & ND.NIP_UE=''
   || INTRAST.NIP:=''
   || INTRAST.NIP:=ND.NIP_UE
   ?};
   POM.TAB:='ND';
   POM.NRT:=ND.TYP().NRT;
   POM.TYPDOK:=ND.TYP().KOD;
   TAZ.RAB_N_BE:=ND.RAB;
   {? ND.ZL().RODZAJ='P'
   || ZMSLAPP.ZL12:=''
   || ZMSLAPP.ZL12:=''
   ?};
   _kh:=ND.KH;
   _odb:=ND.KH_ODB;
   {? ND.WAL=null()
   || ND.WAL:={? KSTE.WAL<>null()
              || KSTE.WAL
              || INFO.NAROD
              ?}
   ?};
   _wal:=ND.WAL;
   _db:=ND.D;
   _ist_typ:=ND.IST_TYP;
   _krs:=ND.KRS;

   _var_ndpop:=exec('var_ndpop','magdok_nag');
   _var_ndpop.PROJEKTY:=ND.PROJEKTY;
   _var_ndpop.KH:=ND.KH;
   _var_ndpop.KH_ODB:=ND.KH_ODB;
   _var_ndpop.WAL:=ND.WAL;
   _var_ndpop.D:=ND.D;
   _var_ndpop.IST_TYP:=ND.IST_TYP;
   _var_ndpop.KRS:=ND.KRS;
   _var_ndpop.PO_FIRST:=0;

   params_set('context',params_get(),'var_ndpop',_var_ndpop);

   {? _nag_mod=1
:: edycja dokumentu bez ograniczeń
   ||
      exec('nd_win_edit_set','magdok_nag');
      _fml:="{? var_pres('ND_SPRAWDZONE_F2')=type_of(0) & ND_SPRAWDZONE_F2
             || _wyn:=''
             || _wyn:=params_exec('nd_valid','magdok_nag')
             ?};
             VAR_DEL.delete('ND_SPRAWDZONE_F2');
             _wyn";
      _wyn:=ND.edit(_fml);
      {? _wyn
      || _var_ndpop.PO_FIRST:=1
      ?};
      {? ND.STAT_REJ='N' || exec('nag_edit_po','magdok_nag',_wyn) ?}
   |? _nag_mod=2
:: podgląd dokumentu + zakończenie rejestracji dokumentu
   ||
      _win_red:=exec('nd_win_edit','magdok_nag');
      _ff:="params_exec('poz_dok','magdok_poz',0);''";
      ND.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['&Pozycje'@],_ff);
      _ff:="params_exec('nd_zakoncz_red','magdok_nag')";
      ND.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Zakończ'@],_ff);
      _ff:="'key:Esc'";
      ND.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Anuluj'@],_ff);
      ND.win_edit(_win_red);
      exec('set_efld_opt','magdok_nag',_win_red);
::    Dalsza obsługa akceptacji w akceptuj w !lmg_mag_eamg.fml
      ND.display();
::    Usunięcie definicji tymczasowych okien
      ND.win_edit(''); ND.win_edel(_win_red)
   ?};
   VAR_DEL.delete('Krs_be','Krs_f3')
?};
{? _arg.ND_UNLOCK || ND.r_unlock() ?};
_wyn


\nag_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: sprawdza czy mozna modyfikowac naglowek dokumentu
::       pozwala poprawiac konto po zaakceptowaniu dokumentu
::  OLD: \nag_mod/magazyn.fml
::   WY: 0-modyfikacja zabroniona
::       1-modyfikacja możliwa
::       2-możliwe tylkzakończenie rejestracji
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? exec('czy_z_ok','okresy',1,1,ND.D~1,ND.D~2,ND.MAG)
||
   {? ND.r_lock(1,1,1)
   ||
      BEER.KRS:=ND.KRS; BEER.RTK:=ND.RTK; BEER.NTK:=ND.NTK; BEER.DTK:=ND.DTK; BEER.BTK:=ND.BTK;
      ND_Z.CB:=ND.CB;
      ST.MAG_SYM:=ND.MD().SYM;
      _czyzakc:=ND.Z='T' | (';ZT'*ND.STAT_REJ)>1;
      {? _czyzakc
      || {? ND.ZAK='N'
         || _chk:="
               {? ND.TYP().WK='T' & ND.KK=null
               || FUN.info('Wymagane jest wypełnienie pola Konto.'@); 'KK'
               || ''
               ?}";
            ND.cntx_psh();
            {? ND.MAG().SKL='T'
            || ND.win_edit('RED_SC')
            |? ND.TYP().Z='T' & ND.TYP().P='N'
            || ND.win_edit('RED_INFD')
            || ND.win_edit('RED_KON')
            ?};

            {? ND.edit(_chk)
            || ND.put()
            ?};
            ND.cntx_pop()
         || FUN.info('Dokument jest zaksięgowany. Modyfikacje niedozwolone.'@)
         ?};
         ND.r_unlock();
         _ok:=0
      |? ~exec('spr_inwe','magdok_wspolne',0)
      || {? (3+ND.TYP().T)='INW'
         || FUN.info('Dokument wygenerowany automatycznie'
             '\nna podstawie arkusza inwentaryzacyjnego.'
             '\nModyfikacje zabronione.'@)
         || FUN.info('Dokument wygenerowany automatycznie'
             '\nna podstawie arkusza przecen.'
             '\nModyfikacje zabronione.'@)
         ?};
         _ok:=2
      |? ND.TYP().P='T' & ND.TYP().Z='T' & ND.TYP().DN<>'N' & ND.F='T' & exec('spr_zz','opakow')
      || FUN.info('Dokument wystawiony automatycznie do korekty faktury sprzedaży.\n'
                  'Modyfikacja nagłówka dokumentu niemożliwa.'@);
         _ok:=0
      || _ok:=ND.r_lock(1)
      ?}
   ||
      {? FUN.ask('Dokument obsługuje inny operator.\nCzy chcesz zobaczyć kto?'@) & ND.r_lock()
      || ND.r_unlock()
      ?};
      _ok:=0
   ?}
||
   _ok:=0
?};
_ok


\nag_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: funkcja poprawia daty na pozycjach dokumentu, rabat dla przychodowych, przeliczenia zgodnie z ND.CB
:: [_a] - Data dostawy przed zmiana naglowka
::  OLD: \nag_po/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>4 || _a:=ND.D ?} || _a:=ND.D ?};
{? _>=2 || {? type_of(_b)<>2 || _b:=ND.IST_TYP ?} || _b:=ND.IST_TYP ?};

TAZ.RAB_TYP:=ND.RAB_TYP;
DISP.RAB:=ND.RAB;
DISP.RABO:={? exec('czyrabp','ceny',TAZ.RAB_TYP) || '%' || ND.WAL().KOD ?};
DISP.RABZTYP:=exec('rabztyp','ceny',TAZ.RAB_TYP);

DK.index('DOKMAG');
DK.prefix(ND.ref());
{? DK.first()
||
   {!
   |? {? ND.TYP().P='T' & ND.Z='N' & ND.TYP().DN<>'T'
      || DK.DOST:=ND.D
      |? ND.TYP().P='T' & ND.TYP().DN='T' & _a=DK.DOST & DK.RDK=#DK.ref & DK.NDK=DK.name
      || DK.DOST:=ND.D
      ?};
      {? ND_Z.CB<>ND.CB & ND.WAL<>INFO.NAROD
      || _dokl_c:={? ND.TYP().P='T' || DK.M().DOKL_Z || DK.M().DOKL_S ?};
         _sv:=#((DK.SV().KOD*'%'-1)+DK.SV().KOD)/100;
         DK.CWAL:={? ND.CB='T' || DK.CWAL*(1+_sv) || DK.CWAL/(1+_sv) ?} $_dokl_c;
         _walj:=exec('FindInSet','#table','WAL','WAL_SYM',DK.WAL().KOD,,"WAL.J",,,1);
         {? ND.CB='T'
         || DK.CB:=DK.CWAL*DK.KURS/_walj $_dokl_c
         || DK.CN:=DK.CWAL*DK.KURS/_walj $_dokl_c
         ?}
      ?};
      exec('obl_wars','magdok_poz');

::    intrastat
      exec('istatr_nd2dk','magdok_poz');
      {? _b<>ND.IST_TYP
      || {? ND.IST_TYP=''
         || _mat:=DK.M;
            DK.M:=null();
            exec('ist_wart_dk','magdok_poz',0);
            DK.M:=_mat
         ?}
      ?};

::    projekty
      {? ND.PROJEKTY || DK.PROJEKTY:=ND.PROJEKTY ?};

      DK.put();
      DK.next()
   !};
   exec('dk_sum','magdok_wspolne',ND.ref())
?};
:: KH dla opakowan
{? ND.KH<>null || exec('dok_pop','opakow',$ND.ref(),ND.KH,ND.D) ?};
0


\sprkrsm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RR, MZ [2008]
:: OPIS: po zmianie kursu dla dok. magazynowych
::  OLD: \sprkrsm/eurusd.fml
::----------------------------------------------------------------------------------------------------------------------
{? BEER.KRS<>0 & BEER.KRS<>ND.KRS & ND.WAL<>INFO.NAROD
|| exec('przel_m','magdok_nag',ND.ref,ND.KRS)
?}


\przel_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przelicza wszystkie pozycje dokumentu magazynowego
::   WE: _a  - ND.ref
::       _b  - kurs
::  OLD: \przel_m/eurusd.fml
::----------------------------------------------------------------------------------------------------------------------
ND.cntx_psh();
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first()
|| {!
   |? DK.KURS:=_b;
      {? DK.PLUS='T'
      || DK.C:=DK.CWAL*DK.KURS$DK.M().DOKL_C;
         exec('war_mag','magdok_poz')
      || DK.CN:=DK.CWAL*DK.KURS$DK.M().DOKL_S;
         exec('obl_wars','magdok_poz')
      ?};
      DK.put(1);
      DK.next()
   !}
?};
DK.cntx_pop();
ND.cntx_pop();
exec('dk_sum','magdok_wspolne',_a);
1


\nag_edit_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: po zmianie danych nagłówkowychdla dok. magazynowych
::   WE: _a - wynik funkji edit
::----------------------------------------------------------------------------------------------------------------------
{? _a=0 || return() ?};

_var_ndpop:=params_get().var_ndpop;
_kh:=_var_ndpop.KH;
_odb:=_var_ndpop.KH_ODB;
_wal:=_var_ndpop.WAL;
_db:=_var_ndpop.D;
_ist_typ:=_var_ndpop.IST_TYP;
_krs:=_var_ndpop.KRS;
_first:=_var_ndpop.PO_FIRST;
_ok:=1;
_ctrlCN:=exec('get','#params',800850,2);

ND.cntx_psh();
ND.prefix();
{? _first
|| {? ND.NR=0 || exec('fak_numer','numery','',0); exec('znak','numery','ND') ?};
   {? ND.put()
   ||
::    informacje dodatkowe
      {? VAR.ZAKLADKI*'D'>0 | VAR.ZAKLADKI*'M'>0
      || exec('inf_dod','fakso',1,'nagdo')
      || exec('inf_dod','fakso',0,'nagdo')
      ?};
::    aktualizacja cen
      DK.index('DOKMAG');
      DK.prefix(ND.ref);
      {? DK.first & ND.TYP().CS='T'
       & ((_kh<>null() & _kh<>ND.KH)   | (_odb<>null() & _odb<>ND.KH_ODB)
        | (_wal<>null() &_wal<>ND.WAL) | (_krs<>0 &_krs<>ND.KRS))
       & _ctrlCN<>'B' & (_ctrlCN='T' | exec('ceny_mat_dok','ceny_dok',2,,ND,1))
      || _ma_cennik:='N';
         _choice:=2;
         _result:=spli_str(exec('fap_czy_cennik','faktury_wspolne',_kh,_odb,null(),_wal,DK),' ');
         _ma_cennik:=_result[1];
         _choice:=#_result[2];

         {? _ma_cennik='N' & _choice<>2
         || _ok:=1
         || FUN.info('Zmieniły się kryteria cenników.\nNależy wyznaczyć ponownie ceny.'@);
            _ok:=exec('ceny_mat_dok','ceny_dok',1,,ND,1)
         ?}
      ?};
      {? DK.first()
      || {!
         |? {? DK.PLUS='N' & _db<>ND.D
            || REZ.index('DK');
               REZ.prefix(DK.ref());
               {? REZ.first()
               || REZ.ODDT:=ND.D;
                  REZ.put(1)
               ?}
            ?};
            {? ND.KH<>DK.KH | ND.KH_ODB<>DK.KH_ODB
            || DK.KH:=ND.KH;
               DK.KH_ODB:=ND.KH_ODB;
               DK.put(1)
            ?};
::          naliczenie opłat dodatkowych
            exec('actTAXS','oplaty_dod',DK.N().uidref(),DK.uidref(),DK.M,DK.M);
            DK.next()
         !}
      ?};
      {? _ok
      ||
::       przeliczenie pozycji po nowym kursie
         exec('sprkrsm','magdok_nag');
         exec('nag_po','magdok_nag',_db,_ist_typ)
      ?}
   ?}
?};
ND.cntx_pop()


\var_ndpop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zmienna - Poprawa nagłowka
::   WY: uchwyt do zmiennej
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new('PROJEKTY','KH','KH_ODB','WAL','D','IST_TYP','PO_FIRST','KRS');
_wyn.PROJEKTY:=null();
_wyn


\nd_wyswietl_ba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Przed wyświetl tabeli ND
::  OLD: \nd_wyswietl_ba/magdok_poz.fml
::----------------------------------------------------------------------------------------------------------------------
exec('nd_win_edit_set','magdok_nag');
ND.display();
1


\akc_dok_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca tablicę argumentów funkcji akc_dok w magdok_nag.fml
::   WE:
::   WY: tablica argumentów
::----------------------------------------------------------------------------------------------------------------------
_arg:=obj_new('ASK','INFO','ND_UNLOCK','REA','DO_STATE','KOMM','SERVICE','GROUP');
:: czy pytac o akceptacje dokumentu (T/N)
_arg.ASK:='T';
:: czy wyswietlac drzewko z informacjami (T/N) - domyslnie T
_arg.INFO:='T';
:: czy odblokowywac naglowek = domyslnie 1=tak 0-nie
_arg.ND_UNLOCK:=1;
:: czy trwa realizacja zamowienia (1/0) - domyslnie 0
_arg.REA:=0;
:: czy trwa transakcja
_arg.DO_STATE:=0;
:: inicjowac tabele komunikatow 1-domyslnie=tak, 0-nie
_arg.KOMM:=1;
:: czy wykonane w serwisie
_arg.SERVICE:=0;
:: operacja grupowa 1=tak, 0-domyslnie-nie
_arg.GROUP:=0;
:: argumenty
_arg


\akc_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: akcja akceptuj dokument magazynowy
::       !! UWAGA -> nie ma juz miejsca na zmienne lokalne, nalezy uzywac globalnych
::   WE: [_a] - czy pytac o akceptacje dokumentu (T/N)
::       [_b] - czy wyswietlac drzewko z informacjami (T/N) - domyslnie T
::       [_c] - czy odblokowywac naglowek = domyslnie 1=tak 0-nie
::       [_d] - czy trwa realizacja zamowienia (1/0) - domyslnie 0
::       [_e] - czy trwa transakcja
::       [_f] - inicjowac tabele komunikatow 1-domyslnie=tak, 0-nie
::   WY: czy zaakceptowano dokument 1 - tak, 0 lub 2 nie
::  OLD: \akc_dok/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
_service:=0;
_group:=0;
{? var_pres('_a')=type_of(obj_new('a'))
|| _aa:=_a.ASK;
   _b:=_a.INFO;
   _c:=_a.ND_UNLOCK;
   _d:=_a.REA;
   _e:=_a.DO_STATE;
   _f:=_a.KOMM;
   _service:=_a.SERVICE;
   _group:=_a.GROUP;
   obj_del(_a);
   _a:=_aa
|| {? _>=1 || {? type_of(_a)<>2 || _a:='T' ?} || _a:='T' ?};
   {? _>=2 || {? type_of(_b)<>2 || _b:='T' ?} || _b:='T' ?};
   {? _>=3 || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};
   {? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
   {? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};
   {? _>=6 || {? type_of(_f)<>1 || _f:=1 ?} || _f:=1 ?}
?};

{? _group
|| _a:='N';
   _b:='N';
   _f:=0
?};

POM.PAR1:='';
POM.PAR2:='';
BEER.NDPOW:=null();
ND.get();

:: ustawienie zmiennych
VAR_DEL.delete('__akcept','__lp','__czy_c_sp','__cena_e','__cena','__ktm','__spr_cene','__txt','__wyb_nr','__pprod'
   ,'__gen_mm','__typ_mm','__kod_mm','__nrt_mm','__l_log','__buf_kom','__nr0','__Real','__wybnr1','__znrt','__coscn');
VAR_DEL.delete('__st_oddz','__md_oddz','__dk_m','__dk_il','__dk_n_d','__dk_dk_c','__dk_prdk','__dk_war','__dk_tw'
   ,'__nd_md','__nd_kk','__nd_d','__nd_kh','__nd_ref','__nd_nam','__nd_o','__nd_zl','__nd_wyd','__tmgo','__bufpal'
   ,'__nd_t','__nd_p');
VAR_DEL.delete('__aktzkp');

__aktzkp:=tab_tmp(1,'MAT','STRING[16]',''
           ,'NRK','INTEGER',''
           ,'ILR','REAL','');

__bufpal:=tab_tmp(1,'PAL','STRING[16]','');
__coscn:=obj_new(6); __coscn[1]:=__coscn[2]:=__coscn[3]:=__coscn[4]:=__coscn[5]:=__coscn[6]:=0;

_wyn:=0;_ref:=null;_refn:=null;_ref_old:=ND.ref; ZMIENNE.WAR_SKL:=0;
__pprod:=exec('tte_lic','tte');

:: zapamietuje nagłówek akceptowanego dokumentu
_main_dok:=ND.ref();

:: typ magazynu
_tmg:={? ND.MAG().TYP*'EWI' & ND.INN='T' & ND.TYP().INW='E' || 'E' || (1+ND.MAG().TYP) ?};
_mgi:=ND.MAG().IL='T';
__tmgo:=_tmg;
:: dokumenty inwentaryzacji
{? _tmg<>'E' & ND.INN='T' & ND.TYP().INW='I' &  ND.TYP().P='N' || _tmg:='D' ?};
:: autofifo
{? _tmg='D' & (ND.TYP().AFIFO<>'' | ND.MAG().IL='T') || _tmg:=ND.TYP().AFIFO; {? _tmg='' || _tmg:='F' ?} ?};
:: inwentaryzacja zawsze wg dostaw
{? ND.TYP().DK='I' || _tmg:='D' ?};

MG.cntx_psh();
_tmg2:=(1+ND.MD().TYP);
MG.cntx_pop();
__akcept:='';
:: wlaczenie tabeli komunikatow
{? ND.sel_size=0 & _f=1 || exec('ini_kom','#message','Informacje o dokumentach'@,,,,200) ?};__lp:=0;
__kom_gr:=ND.SYM+', magazyn: '+ND.MAG().SYM;
:: formula dla nieprawidlowych parametrow
_esc:="{? _a=0 || exec('akcadok','magdok_nag',_b) ?}";

ND.cntx_psh();
DK.cntx_psh();
DK_C.cntx_psh();
{? exec('blok_nd','magdok_nag',{? ND.sel_size=0 || 'T' || 'N' ?})
||
   exec('dk_sum','magdok_wspolne',ND.ref());
:: sprawdzanie czy mozna zaakceptowac dokument

   _czy_akc:=1;
   {? _a='T' & ND.sel_size=0 & ND.STAT_REJ='N'
   || _czy_akc:=FUN.ask('Czy zakończyć redakcję dokumentu %1 o symbolu: %2?'@[ND.TYP().T,ND.SYM])
   |? ND.STAT_REJ='T'
   || _txt:='Dokument jest już zaakceptowany.'@;
      {? _group
      || exec('add_kom','#message',ND.SYM,1,gsub(_txt,'\n',' '))
      || exec('add_kom','#message',_txt,2)
      ?};
      _czy_akc:=0
   ?};

   {? _czy_akc=1
   || {? ND.TYP().Z='T' & ND.KH=null
      || _txt:='Wymagany kontrahent w nagłówku dokumentu.'@;
         {? _group
         || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
         || _txt:=_txt+' '+'Dokument nie został zaakceptowany.'@;
            exec('add_kom','#message',_txt,2)
         ?};
         _czy_akc:=0
      |? ND.TYP().WK='T' & ND.KK=null
      || _txt:='Wymagane konto w nagłówku dokumentu.'@;
         {? _group
         || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
         || _txt:=_txt+' '+'Dokument nie został zaakceptowany.'@;
            exec('add_kom','#message',_txt,2)
         ?};
         _czy_akc:=0
      |? ND.TYP().UE='T' & ND.NIP_UE=''
      || _txt:='Wymagany NIP UE.'@;
         {? _group
         || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
         || _txt:=_txt+' '+'Dokument nie został zaakceptowany.'@;
            exec('add_kom','#message',_txt,2)
         ?};
         _czy_akc:=0
      |? ND.MAG().SKL='T' & ND.SCPOZ=null
      || _txt:='Wymagane pole pozwolenie w nagłówku dokumentu.'@;
         {? _group
         || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
         || _txt:=_txt+' '+'Dokument nie został zaakceptowany.'@;
            exec('add_kom','#message',_txt,2)
         ?};
         _czy_akc:=0
      |? ND.MAG().SKL='T' & ND.TYP().TD='' & ND.WD=''
      || _txt:='Wymagane pole warunki dostawy w nagłówku dokumentu.'@;
         {? _group
         || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
         || _txt:=_txt+' '+'Dokument nie został zaakceptowany.'@;
            exec('add_kom','#message',_txt,2)
         ?};
         _czy_akc:=0
      |? ~exec('ctrldkzl','magdok_wspolne',ND.ref())
      || _txt:='Wymagane uzupełnienie zleceń lub grup operacji na pozycjach dokumentu.'@;
         {? _group
         || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
         || exec('add_kom','#message',_txt,2)
         ?};
         _czy_akc:=0
      |? _tmg='D' & ND.TYP().P='T' & (ND.TYP().DN='T' | (ND.INN='T' & ND.TYP().INW='I' &  ND.TYP().P='T')) & ND.FAKS_REF='' & ND.NDSQL=''
       & ~exec('ctrlilzw','magdok_wspolne',ND.ref())
      || _txt:='Zbyt duża ilość do zwrotu na dokumencie (większa od pierwotnej dostawy). '
          'UWAGA. Dostawa może być na kilku pozycjach.'@;
         {? _group
         || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
         || exec('add_kom','#message',_txt,2)
         ?};
         _czy_akc:=0
      |? {? ND.TYP().P='N'
         || ND.TYP().AFIFO='' & ND.MAG().IL<>'T'
         || ND.NDSQL='' | exec('get','#params',500705,2)*(ND.TYP().T+' ')
         ?}
        & ~exec('ctrl_atr','magdok_wspolne',ND.ref())
      || _txt:='Wymagane uzupełnienie cech dostaw na pozycjach dokumentu.'@;
         {? _group
         || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
         || exec('add_kom','#message',_txt,2)
         ?};
         _czy_akc:=0
      |? ~(ND.INN='T' & ND.TYP().INW='I' &  ND.TYP().P='N') & ND.TYP().P='N' & ND.MAG().SL='T' & ND.MAG().PAL='N'
       & exec('get','#params',600200,2)='T'
      || _czy_akc:=exec('ctrl_wym','magdok_wspolne',0,_group)
      |? (ND.INN='T' & ND.TYP().INW='E' &  ND.TYP().P='T') & ~exec('sprakcmi','magdok_nag')
      || _txt:='Nie zaakceptowano dokumentu PRC- dla danej przeceny.'@;
         {? _group
         || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
         || _txt:=_txt+' '+'Zakończenie dokumentu niemożliwe.'@;
            exec('add_kom','#message',_txt,2)
         ?};
         _czy_akc:=0
      |? ND.MAG().TYP*'EWI' & ~exec('ctrlEWID','magdok_nag',ND.ref())
      || _txt:='Na dokumencie są niewycenione pozycje '
          'oraz nie zaakceptowano wcześniejszych dokumentów.'@;
         {? _group
         || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
         || _txt:=_txt+' '+'Akceptacja dokumentu niemożliwa.'@;
            exec('add_kom','#message',_txt,2)
         ?};
         _czy_akc:=0
      |? ~exec('ctrlTAXJ','oplaty_dod',ND.uidref())
      || _czy_akc:=0
      ?}
   ?};

:: sprawdza czy KH nie jest zablokowany
   {? _czy_akc
   ||
      {? ND.TYP().P<>'T'
      ||
         exec('list_zam','magdok_wspolne',ND.ref,0);
         _kh_dod_b:=exec('kh_dod_b','kontrahent','nd_akc',ND.KH,__list_zk.first());
         {? _kh_dod_b='B'
         || _txt:='Kontrahent %1 jest zablokowany bezwarunkowo.'@[ND.KH().SKR];
            {? _group
            || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
            || _txt:=_txt+' '+'Dokument nie został zaakceptowany.'@;
               exec('add_kom','#message',_txt,2)
            ?};
            _czy_akc:=0
         |? _kh_dod_b='W'
         || _txt:='Kontrahent %1 jest zablokowany warunkowo.'@[ND.KH().SKR];
            {? _group
            || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
            || exec('add_kom','#message',_txt,2)
            ?}
         ?}
      ?}
   ?};

   {? ND.Z='N' & _czy_akc
   ||
::    sprawdzanie zamkniecia okresu
      _czy_akc:=exec('czy_z_ok','okresy',1,0,ND.D~1,ND.D~2,ND.MAG);
      {? _czy_akc=0
      || _txt:='Okres jest zamknięty.'@;
         {? _group
         || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
         || exec('add_kom','#message',_txt,4)
         ?}
      ?};
      _esc(_czy_akc,_f);

::    sprawdzenie wypelnienia dokumentu magazynowego

      {? _czy_akc=1
      ||
         DK.index('DOKMAG');
         DK.prefix(ND.ref);
         {? DK.first()
         ||
            _czy_akc:=exec('ok_dk','magdok_poz')
         ||
            _czy_akc:=0;
            _txt:='Dokument magazynowy nie ma pozycji materiałowych/usługowych '
             'i nie może być zakończony.'@;
            {? _group
            || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
            || exec('add_kom','#message',_txt,2)
            ?}
         ?};
         _esc(_czy_akc,_f)
      ?};

::    czy material nie wystepuje na inwentaryzacji
      {? exec('spr_ndin','magdok_poz',ND.ref())=0
      ||
         _txt:='Materiał w pozycjach dokumentu występuje w niezakceptowanym arkuszu inwentaryzacyjnym.'@;
         {? _group
         || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
         || exec('add_kom','#message',_txt,2);
            exec('add_kom','#message','Data dokumentu jest wcześniejsza lub równa dacie rozpoczęcia danej inwentaryzacji.'@,2)
         ?};
         _czy_akc:=0;
         _esc(_czy_akc,_f)
      ?};
::    czy material nie wystepuje na inwentaryzacji
      {? exec('spr_ndin','magdok_poz',ND.ref(),1)=0
      ||
         _txt:='Materiał w pozycjach dokumentu występuje w arkuszu przecen.'@;
         {? _group
         || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
         || exec('add_kom','#message',_txt,2);
            exec('add_kom','#message','Data i godzina dokumentu jest wcześniejsza lub równa dacie i godzinie przeceny.'@,2)
         ?};
         _czy_akc:=0;
         _esc(_czy_akc,_f)
      ?};

::    czy wypełniona stawka vat na zewnętrznym dokumencie przychodowym
      {? _poz:=exec('spr_stv','magdok_poz',ND.ref())
      || {? _group
         || _txt:='Pozycja bez stawki VAT'@;
            exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
         || exec('add_kom','#message','Pozycja %1 nie ma stawki vat.'@[$_poz],2)
         ?};
         _czy_akc:=0;
         _esc(_czy_akc,_f)
      ?};

::    sprawdzanie limitu kredytowego
      {? _czy_akc=1
      || _czy_akc:=exec('klim_akc','magdok_nag',_d);
         _esc(_czy_akc,_f)
      ?};

::    oznaczenie palet
      {? ND.MAG().PAL='T' || exec('ozpalakc','magdok_poz',ND.ref()) ?};
::    sprawdzenie poprawnosci wypelnienia wymiarow
      {? ND.MAG().SL='T' & exec('sprndlok','magdok_poz',~_group)<>''
      || _czy_akc:=0;
         _esc(_czy_akc,_f)
      ?};

::    sprawdzenie poprawnosci wypelnienia palet dla przesuniecia na magazyn paletowy
      {? ND.MAG().PAL='N' & ND.MD<>null & ND.MD().PAL='T'
      || _czy_akc:=exec('sprndpal','magdok_palety',ND.ref(),~_group);
         _esc(_czy_akc,_f)
      ?};
      __gen_mm:=0; __typ_mm:=null;
      {? _czy_akc=1 & ND.TYP().TD<>''
      ||
         _typ_dok:=exec('get','#params',1001,2,OPERATOR.USER);
         {? _typ_dok<>''
         ||
            {? (_typ_dok*(ND.TYP().TD+' ')) =0
            || _czy_akc:=0;
               _txt:='Brak uprawnień do tworzenia dokumentów typu %1.'@[ND.TYP().TD];
               {? _group
               || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
               || exec('add_kom','#message',_txt,2)
               ?}
            ?}
         ?};
         {? ND.MD<>null
         ||
            __gen_mm:=exec('spr_info_mm','magdok_nag',~_group);
            {? __mm_utw.first
            ||
               _txt:='Akceptowany dokument utworzył dokument %1'
                  ' nr %2 w magazynie %3.'@[ND.TYP().TD,$__mm_utw[2],ND.MD().SYM];
               {? _group
               || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
               || exec('add_kom','#message',_txt,4)
               ?}
            |? __gen_mm
            || TYPYDOK.cntx_psh();
               {? TYPYDOK.index('TYP');TYPYDOK.clear();~TYPYDOK.find_key(ND.TYP().TD)
               ||
                  _czy_akc:=0;
                  _txt:='Typ dokumentu %1'
                     ' nie istnieje. Dokument nie będzie utworzony.'@[ND.TYP().TD];
                  {? _group
                  || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
                  || exec('add_kom','#message',_txt,2)
                  ?}
               || __typ_mm:=TYPYDOK.ref;
                  __kod_mm:=TYPYDOK.KOD;
                  __nrt_mm:=TYPYDOK.NRT
               ?};
               TYPYDOK.cntx_pop();

               __st_oddz:='';
               {? ST.ODDZ<>ND.MD().ODDZ || __st_oddz:=ST.ODDZ; ST.ODDZ:=ND.MD().ODDZ ?};
               {? exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,ND.MD)=0
               || _czy_akc:=0;
                  _txt:='W magazynie %1 zablokowano wystawianie dokumentów '
                     '(okres jest zamknięty)'@[ND.MD().SYM];
                  {? _group
                  || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
                  || exec('add_kom','#message',_txt,2)
                  ?}
               ?};
               {? __st_oddz<>'' || ST.ODDZ:=__st_oddz ?}
            ||
               _czy_akc:=0
            ?};
            obj_del(__mm_utw)
         || _czy_akc:=0;
            _txt:='Nie wypełniono magazynu.'@;
            {? _group
            || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
            || exec('add_kom','#message',_txt,2)
            ?}
         ?}
      ?};
      {? _czy_akc=0 & ~_group || exec('add_kom','#message','Dokument nie został zaakceptowany.'@,2) ?};
      _esc(_czy_akc,_f)
   ||
      {? _czy_akc=1 & _a='T' || exec('add_kom','#message','Dokument jest już zaakceptowany.'@,4);_czy_akc:=0 ?}
   ?};

:: Produkcja - generowanie powiązań z partiami dla RP
   {? _czy_akc=1 & __pprod='T' & ND.sel_size()=0
   || {? (' '+exec('get','#params',500701,2,null()))*(' '+ND.TYP().T+' ')>0
         & exec('nd_is_rp','magdok_wspolne',ND.ref()) & exec('nd_party','zl_common',ND.ref())>0
      ||
::       Generowanie powiazan partii z wydaniami surowcow
         {? _service=0
         || _czy_akc:=exec('creator_run','magdok_partie',ND.ref())
         ?}
      ?}
   ?};

   {? _czy_akc>0 & __pprod='T' & ND.sel_size()=0 & exec('nd_is_rp','magdok_wspolne',ND.ref())>0
   ||
::    Sprawdzanie wartosci atrybutow na dokumencie i zleceniu
      {? _czy_akc>0
      || _czy_akc:=exec('chk_atr_zl','magdok_nag',ND.ref(),~_group)
      ?}
   ?};

   {? _czy_akc>0 & __pprod='T' & ND.sel_size()=0 & exec('nd_is_rw','magdok_wspolne',ND.ref())>0
   ||
::    Sprawdzanie wartosci atrybutow na dokumencie i limicie
      {? _czy_akc>0
      || _czy_akc:=exec('chk_atr_zlim','magdok_nag',ND.ref(),~_group)
      ?}
   ?};
   {? _czy_akc>0 & __pprod='T' & ND.sel_size()=0 & exec('nd_is_koop','magdok_wspolne',ND.ref())>0
   ||
::    Sprawdzanie wypełnienie pola partii dla wydań kooperacji
      {? _czy_akc>0
      || _czy_akc:=exec('chk_partia_dk','magdok_nag',ND.ref(),~_group)
      ?}
   ?};
:: Koniec fragmentu produkcyjnego
:: akceptacja dokumentu
   {? _czy_akc
   ||
::    numeracja tymczasow - wyznaczenie ostatecznego numeru
      __nr0:=ND.NR=0;
      {? __nr0
      ||
         __Real:={? ND.TYP().P='N' || ZK_RN || ZD_RN ?};
         POM.TYPDOK:=ND.TYP().KOD;
         POM.TAB:='ND';
         POM.NRT:=0;

         ND.cntx_psh;
         __wybnr1:=exec('numer_new','numery','N');
         ND.NR:=__wybnr1;
         exec('znak','numery','ND',2);
         __wybsy1:=ND.SYM;
         ND.cntx_pop
      ?};

::    szukanie wolnych numerow dla generowanego dokumentu
      __wyb_nr:=0;
      __znrt:=~(__akcept='T' | __akcept<>'T' & TYPYDOK.NRT=0);
      {? __gen_mm
      ||
::       numeracja tymczasowa - wyznaczanie numeru dla generowanego dokumentu jesli od razu jest akceptowany
         __nd_md:=ND.MD;
         __nd_kk:=ND.KK;
         __nd_d:=ND.D;
         __nd_kh:=ND.KH;
         __nd_ref:=#ND.ref();
         __nd_nam:=ND.name();
         __nd_o:=ND.O;
         __nd_zl:=ND.ZL;
         __nd_wyd:=ND.WYD;
         __nd_t:=ND.T;
         __nd_p:=ND.PROJEKTY;

         ND.cntx_psh();
         __st_oddz:='';
         {? ST.ODDZ<>ND.MD().ODDZ
         ||
            __st_oddz:=ST.ODDZ;
            ST.ODDZ:=ND.MD().ODDZ;
            exec('open','open_tab',ST.ODDZ,2-$ST.AR)
         ?};
         __ptab:=POM.TAB;
         __ptyp:=POM.TYPDOK;
         __pnrt:=POM.NRT;
::       ustawienie numeracji dla mm
         POM.TAB:='ND';
         POM.TYPDOK:=__kod_mm;
         POM.NRT:=__nrt_mm;

         exec('addnag','magdok_nag',__nd_md,ST.AR,ST.AM,__typ_mm,'N',__nd_kk,__nd_d,
          ,__nd_kh,,__nd_ref,__nd_nam,__nd_o,__nd_zl,__nd_wyd,1,,,,__nd_t,__nd_p);
         {? (__akcept='T' | __akcept<>'T' & TYPYDOK.NRT=0) & exec('spr_wol','numery')
         || {? _group | FUN.ask('W numeracji dokumentów generowanych podczas\n'
                  'akceptacji dokumentu występują wolne numery.\n'
                  'Czy chcesz je wykorzystać?'@)
            || __znrt:=0;
               __wyb_nr:=exec('nr_dok','numery','ND','T')
            ?}
         ?};
::       zamiana na numerację dokumentu i zapamiętanie dla mm
         __ptab==POM.TAB;
         __ptyp==POM.TYPDOK;
         __pnrt==POM.NRT;
         {? __st_oddz<>''
         ||
            ST.ODDZ:=__st_oddz;
            exec('open','open_tab',ST.ODDZ,2-$ST.AR)
         ?};
         ND.cntx_pop()
      ?};
      __l_log:=exec('llog_pocz','users',$ND.ref,'Zakończenie redakcji dokumentu magazynowego '+ND.SYM);

      {? ~_e || do() ?};
::    numeracja tymczasowa - przypisanie ostatecznego numeru, nadanie symbolu, aktualizacja w dokumentach powiazanych
      {? __nr0
      ||
         ND.NR:=__wybnr1;
         ND.SYM:=__wybsy1;
         {? ~_group
         || exec('add_kom','#message','Nadano numer, symbol: %1, %2'@[form(ND.NR,,,'99'),ND.SYM],7,,,0)
         ?};
         {? ND.put
         ||
::          zapamiętanie ND.uidref() w numeracji
            exec('nr_uidref','numery',ND.NR);
            {?  ND.TYP().INW<>'N'
            ||
               INN.cntx_psh;
               {? ND.TYP().INW='E' || INN.use('inw_nwyc') ?};
               INN.index({? ND.TYP().P='T' || 'INP_R' || 'INR_R' ?});
               INN.prefix($ND.ref);
               {? INN.first()
               || {?  ND.TYP().P='T' || INN.INP:=ND.NR; INN.INP_S:=ND.SYM || INN.INR:=ND.NR; INN.INR_S:=ND.SYM ?};
                  INN.put
               ?};
               INN.cntx_pop
            ||
               __Real.cntx_psh; OKR.cntx_psh;
               __Real.use({? ND.TYP().P='N' || 'zkhin' || 'zdhin' ?}+ST.ODDZ+'__');
               __Real.index('ND'); __Real.prefix($ND.ref);
               {? __Real.first
               || __reals:='';
                  {! |? __reals+=$__Real.ref; __Real.next !};
                  {!
                  |? __reals<>''
                  |!
                     {? __Real.seek(__reals+16)
                     || {? ND.TYP().P='N' || __Real.SWZ:=ND.SYM || __Real.SPZ:=ND.SYM ?};
                        __Real.put
                     ?};
                     __reals-=16
                  !}
               ?};
               OKR.index('MC'); OKR.prefix(REF.FIRMA,1);
               {? OKR.first
               ||
                  {!
                  |?
                     __Real.use({? ND.TYP().P='N' || 'zkhin' || 'zdhin' ?}+ST.ODDZ+(form(OKR.ROK,,,'99')+2));
                     __Real.index('ND'); __Real.prefix($ND.ref);
                     {? __Real.first
                     ||
                        __reals:='';
                        {! |? __reals+=$__Real.ref; __Real.next !};
                        {!
                        |? __reals<>''
                        |!
                           {? __Real.seek(__reals+16)
                           || {? ND.TYP().P='N' || __Real.SWZ:=ND.SYM || __Real.SPZ:=ND.SYM ?};
                              __Real.put
                           ?};
                           __reals-=16
                        !}
                     ?};
                     OKR.next
                  !}
               ?};
               __Real.cntx_pop; OKR.cntx_pop;
               VAR_DEL.delete('__reals')
            ?}
         ?}
      ?};
::    naliczenie kosztow skladu celnego
      exec('nal_kos','magdok_koszty');

::    _md_oddz<>'' gdy przesuniecie do innego oddzialu
      __st_oddz:=__md_oddz:='';
::    tworzenie dokumentu powiazanego
      {? __gen_mm
      ||
         __nd_md:=ND.MD;
         __nd_kk:=ND.KK;
         __nd_d:=ND.D;
         __nd_kh:={? ND.KH<>null() || ND.KH
                  |? ND.MD<>null() & ND.MD().COS='T' & ND.DLAKH<>''
                  || exec('FindInSet','#table','KH','KOD',ND.DLAKH,2,,,,null())
                  || null()
                  ?};
         __nd_ref:=#ND.ref();
         __nd_nam:=ND.name();
         __nd_o:=ND.O;
         __nd_zl:=ND.ZL;
         __nd_wyd:=ND.WYD;
         __nd_t:=ND.T;
         __nd_p:=ND.PROJEKTY;

         ND.cntx_psh();
         {? ST.ODDZ<>ND.MD().ODDZ & ND.TYP().P='N'
         ||
            __st_oddz:=ST.ODDZ;
            __md_oddz:=ND.MD().ODDZ;

            ST.ODDZ:=__md_oddz;
            exec('open','open_tab',ST.ODDZ,2-$ST.AR)
         ?};

::       zamiana na numerację dla mm i zapamiętanie dla dokumentu
         __ptab==POM.TAB;
         __ptyp==POM.TYPDOK;
         __pnrt==POM.NRT;
         _ref:=exec('addnag','magdok_nag',__nd_md,ST.AR,ST.AM,__typ_mm,'N',__nd_kk,__nd_d,
                ,__nd_kh,,__nd_ref,__nd_nam,__nd_o,__nd_zl,__nd_wyd,,__wyb_nr,__znrt,,__nd_t,__nd_p);
::       ustawienie numeracji dla dokumentu
         POM.TAB:=__ptab;
         POM.TYPDOK:=__ptyp;
         POM.NRT:=__pnrt;
         VAR_DEL.delete('__ptab','__ptyp','__pnrt');

         {? ND.clear; ND.seek(_ref)
         ||
            BEER.MSK:='nagdo';
            exec('inf_dod','fakso',-1,'nagdo');
            {? _group
            || _txt:='Utworzono dokument w magazynie %1.'@[ND.MAG().SYM];
               exec('add_kom','#message',ND.SYM,1,gsub(_txt,'\n',' '))
            || _txt:='Utworzono dokument %1 w magazynie %2.'@[ND.SYM,ND.MAG().SYM];
               exec('add_kom','#message',_txt,7,,,0)
            ?};
            BEER.NDPOW:=ND.ref()
         ?};

         {? __md_oddz<>''
         ||
            ST.ODDZ:=__st_oddz;
            exec('open','open_tab',ST.ODDZ,2-$ST.AR)
         ?};
         ND.cntx_pop();

         {? ND.TYP().P<>'T' & ND.TYP().DN<>'D'
         ||
::          generacja dokumentu przychodowego
            {? DK.first()
            ||
               __sklad:=ND.MAG().SKL='T';
               _czypal:=DK.N().MD().PAL='T';
               ND.cntx_psh; MG.cntx_psh;
               _mgsl:=DK.N().MAG().SL='T' & DK.N().MD().SL='T';
               _mgeanl:=DK.N().MD().EANL;
               ND.cntx_pop; MG.cntx_pop;
               _pal:=tab_tmp(1,'PAL','STRING[16]','');
               {!
               |?
                  _mat:=DK.M;
                  _mag:=DK.N().MD;
                  _czyid:=(';DAPZ'*DK.M().IDMOB)>1;

                  __cena:=DK.C;
                  {? (DK.N().MD().TYP*'EWI')
                  ||
                     __cena_e:=exec('biez_cen','ceny_dok',_mat,_mag,DK.N().D,,,1);
                     {? {? __cena_e=-1 || __cena_e:=0; 1 || __cena_e<>0 ?} & __cena_e<>__cena
                     ||
::                      domyslnie  cena na przyjeta wg ewidencji
                        __cena:=__cena_e
                     ?}
                  |? __sklad=1
                  || __cena:=exec('cena','ceny_dok',DK.ref(),ND.SCKRS,DK.WAR,DK.IL,DK.RDK,DK.NDK)
                  ?};
                  {? DK.J2<>null() & DK.J2<>DK.M().J
                  || exec('przyjdod','jm',$DK.J2,DK.WS2,DK.IL2)
                  || _dokl:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
                     _il22:={? DK.WS2 || DK.IL/DK.WS2 || 0 ?} $ (_dokl+1);
                     roundmet(BEER.MDOKL);
                     _il22:=_il22 $ _dokl;
                     exec('przyjdod','jm',{? DK.J2=null || $DK.M().J || $DK.J2 ?},
                     {? DK.WS2<>0 || DK.WS2 || 1 ?},{? _dokl>=0 || _il22 || DK.IL2 ?});
                     roundmet(5)
                  ?};

                  __dk_m:=DK.M;
                  __dk_il:=DK.IL;
                  __dk_n_d:=DK.N().D;
                  __dk_dk_c:=exec('odd_matr','mat_atr',__md_oddz,ST.ODDZ,DK.DK_C);
                  __dk_prdk:={? DK.M().SETW='P'
                              & (exec('FindAndGet','#table',DK,DK.PRDK,,"TW",date(0,0,0))<>DK.TW
                               | exec('FindAndGet','#table',DK,DK.PRDK,,"SCEAN",'')<>DK.SCEAN)
                             || DK.SRDK
                             || DK.PRDK
                             ?};
                  __dk_war:=DK.WAR;
                  __dk_tw:={? DK.M().SETW='P' & DK.TW=date(0,0,0)
                           || exec('FindInSet','#table','DK_L','DK',null(),DK.ref(),"@.DK_L.TW",,,date(0,0,0))
                           || DK.TW
                           ?};
                  _dk_src:=DK.PRDK;
                  _dk_sts:=DK.STATS;
                  _scean:={? _czyid
                          || exec('FindAndGet','#table',DK,__dk_prdk,,"SCEAN",'')
                          || ''
                          ?};

                  {? exec('FindAndGet','#table',ND,_ref,,"MAG().COS<>'T'",1)
                  || __coscn[1]:=__coscn[2]:=__coscn[3]:=__coscn[4]:=__coscn[5]:=__coscn[6]:=0
                  || __coscn[1]:=DK.RAB; __coscn[2]:=DK.CN; __coscn[3]:=DK.CB;
                     __coscn[4]:=DK.WN;  __coscn[5]:=DK.WV; __coscn[6]:=DK.WB
                  ?};

                  {? __md_oddz<>''
                  || DK.cntx_psh();
                     DK_C.cntx_psh();
                     DK_L.cntx_psh();
                     ST.ODDZ:=ST.ODDZ_KOD:=__md_oddz;
                     exec('open','open_tab',ST.ODDZ,2-$ST.AR)
                  ?};

                  VAR_DEL.delete('__dk_p');
                  __dk_p:=DK.PROJEKTY;
                  _refnew:=exec('adddk','magdok_poz',_ref,__dk_m,__dk_il,__cena,__dk_n_d
                            ,__coscn[1],__coscn[2],__coscn[3],__coscn[4],,__coscn[5],__coscn[6],7
                            ,,,__dk_dk_c,,__dk_prdk,,,,,__dk_war,,_scean,__dk_tw);
                  VAR_DEL.delete('__dk_p');
                  _mskdkl:=DK_L.name();

::                dodanie historii dla nowo powstalego
                  exec('DK_HS_new4DK','statexam',_refnew,'M',,,_dk_sts,_dk_src,1);
                  {? __md_oddz<>''
                  ||
                     ST.ODDZ:=ST.ODDZ_KOD:=__st_oddz;
                     exec('open','open_tab',ST.ODDZ,2-$ST.AR);
                     DK.cntx_pop();
                     DK_C.cntx_pop();
                     DK_L.cntx_pop()
                  ?};
                  {? _czypal & ~DK.ZP
                  || DK.cntx_psh();
                     DK_L.index('DK');
                     DK_L.prefix(DK.ref(),null);
                     {? DK_L.first()
                     || {!
                        |? DK_L.cntx_psh();
                           DK_L.use(_mskdkl);
                           DK_L.clear();
                           DK_L.DK:=_refnew;
                           {? DK_L.UIDDO<>''
                            & exec('FindAndGet','#table',EANL,DK_L.UIDDO,,"MG",null())=DK_L.DK().N().MAG
                           || DK_L.LOK:=exec('FindAndGet','#table',EANL,DK_L.UIDDO,,,null());
                              {? DK_L.LOK=null() || DK_L.LOK:=_mgeanl ?}
                           || DK_L.LOK:=_mgeanl
                           ?};
                           DK_L.UIDDO:='';
                           DK_L.SCSQL:=$_refnew;
                           DK_L.TM+=0.03;
                           exec('reoIL2','magdok_wymiary');
                           exec('uzupIDkod','magdok_palety',DK_L);
                           {? DK_L.add() & _tmg='D' & DK_L.PAL().STAN='N'
                           || DK_L.cntx_pop();
                              PAL_POZ.cntx_psh();
                              PAL_POZ.clear();
                              PAL_POZ.blank();
                              PAL_POZ.PAL:=DK_L.PAL;
                              PAL_POZ.IL:=DK_L.IL;
                              PAL_POZ.ILP:=DK_L.IL;
                              PAL_POZ.AKT:='T';
                              PAL_POZ.M:=DK_L.DK().M;
                              PAL_POZ.TW:=DK_L.TW;
                              PAL_POZ.JM:=DK_L.DK().M().J;
                              PAL_POZ.C:=DK_L.DK().C;
                              PAL_POZ.DK_C:=DK_L.DK().DK_C;
                              exec('uzupIDkod','magdok_palety',PAL_POZ);
                              PAL_POZ.add(1);
                              PAL_POZ.cntx_pop();
                              _pal.clear();
                              {? ~_pal.find_key($DK_L.PAL)
                              || _pal.blank();
                                 _pal.PAL:=$DK_L.PAL;
                                 _pal.add(1)
                              ?}
                           || DK_L.cntx_pop()
                           ?};
                           DK_L.next()
                        !}
                     ?};
                     DK.cntx_pop()
                  |? _mgsl & ~DK.ZP
                  || DK.cntx_psh();
                     DK_L.index('DK');
                     DK_L.prefix(DK.ref(),null);
                     {? DK_L.first()
                     || {!
                        |? {? DK_L.TW<>date(0,0,0) | DK_L.M().SETW<>'P' | DK_L.UIDDO<>''
                           ||
                              DK_L.cntx_psh;
                              DK_L.use(_mskdkl);
                              DK_L.clear;
                              DK_L.DK:=_refnew;
                              {? DK_L.UIDDO<>''
                               & exec('FindAndGet','#table',EANL,DK_L.UIDDO,,"MG",null())=DK_L.DK().N().MAG
                              || DK_L.LOK:=exec('FindAndGet','#table',EANL,DK_L.UIDDO,,,null());
                                 {? DK_L.LOK=null() || DK_L.LOK:=_mgeanl ?}
                              || DK_L.LOK:=_mgeanl
                              ?};
                              DK_L.UIDDO:='';
                              DK_L.SCSQL:=$_refnew;
                              DK_L.AUTO:=0;
                              DK_L.TM+=0.03;
                              exec('reoIL2','magdok_wymiary');
                              {? DK_L.LOK().MG().PAL='N'
                              || DK_L.PAL:=DK_L.PALDO:=null();
                                 DK_L.IDPAL:=DK_L.IDPALD:=DK_L.KODPAL:=DK_L.KODPALD:=''
                              || exec('uzupIDkod','magdok_palety',DK_L)
                              ?};
                              DK_L.add;
                              DK_L.cntx_pop
                           ?};
                           DK_L.next
                        !}
                     ?};
                     DK.cntx_pop()
                  ?};

                  DK.next()
               !};
::             akceptacja palet
               {? _tmg='D' & _czypal
               || PAL.cntx_psh();
                  _pal.clear();
                  {? _pal.first()
                  || {!
                     |? PAL.clear();
                        {? PAL.seek(_pal.PAL)
                        || PAL.STAN:='T';
                           PAL.put(1);
                           exec('znacznik','magdok_palety',PAL.ref())
                        ?};
                        _pal.next()
                     !}
                  ?};
                  PAL.cntx_pop()
               ?};
               VAR_DEL.delete('__sklad');
               obj_del(_pal)
            ?};

            ND.cntx_psh();
            {? __md_oddz<>''
            ||
               ST.ODDZ:=ST.ODDZ_KOD:=__md_oddz;
               exec('open','open_tab',ST.ODDZ,2-$ST.AR)
            ?};
            {? ND.clear; ND.seek(_ref)
            || exec('dk_sum','magdok_wspolne',ND.ref);
::             domyslne informacje o wymiarach
               {? __akcept='T'
               || {? ND.MAG().SL='T' & exec('sprndlok','magdok_poz',{? _group || 0 || __gen_mm ?})<>''
                  || __akcept:='N'
                  || USERS_UP.cntx_psh();
                     USERS_UP.index('MG');
                     USERS_UP.prefix(OPERATOR.USER,'MG',ST.ODDZ_KOD);
                     {? ~USERS_UP.find_key(ND.MAG) || __akcept:='N' ?};
                     USERS_UP.cntx_pop()
                  ?}
               ?}
            ?};
            {? __md_oddz<>''
            ||
               ST.ODDZ:=ST.ODDZ_KOD:=__st_oddz;
               exec('open','open_tab',ST.ODDZ,2-$ST.AR)
            ?};
            ND.cntx_pop()
         ||
::          jezeli przychodowy to generuje komplet - tylko dla biezacego oddzialu
            {? ND.TYP().DN<>'D'
            || _tmg:=(1+DK.N().MAG().TYP);
               DK.first();
               {!
               |? _il:=DK.IL;
                  _mat:=DK.M;
                  exec('gen_skl','material',_mat,_il,_ref);
                  DK.next()
               !}
            ?};
            ND.cntx_psh();
            {? ND.clear; ND.seek(_ref)
            || exec('dk_sum','magdok_wspolne',ND.ref);
::             domyslne informacje o wymiarach
               {? __akcept='T' & ND.MAG().SL='T' || {? exec('sprndlok','magdok_poz',~_group)<>'' || __akcept:='N' ?} ?}
            ?};
            ND.cntx_pop();
            ZMIENNE.WAR_SKL:=1
         ?}
      ?};
::    akceptacja dokumentu / dokumentow
      {? __akcept='T' & _ref<>null || _ile_dok:=2 || _ile_dok:=1 ?};
      ND.cntx_psh();
      _stmag:=ST.MAG;
      {!  _ii:=1.._ile_dok
      |!
         {? _ii=2 & ~ZMIENNE.WAR_SKL & __md_oddz<>''
         ||
            ST.ODDZ:=ST.ODDZ_KOD:=__md_oddz;
            exec('open','open_tab',ST.ODDZ,2-$ST.AR)
         ?};

::       dodanie pozycji do tabeli pozycji dostaw magazynowych
         {? exec('get','#params',100210,2)='T'
         ||
            ND.cntx_psh();

            ND.prefix();
            {? ND.seek({? _ile_dok=2 || _ref || _ref_old ?})
            ||
               exec('dkdost_update','magdok_poz')
            ?};
            ND.cntx_pop()
         ?};

         ST.MAG:=ND.MAG;
         {? _ii=2
         ||
            {? ~ZMIENNE.WAR_SKL
            ||
               ND.clear();
               {? ND.seek(_ref)
               ||
::                drugi magazyn
                  _tmg:=(1+ND.MAG().TYP);
                  DK.index('DOKMAG');DK.prefix(ND.ref);
                  _rp:=_refn
               || _ok:=0
               ?}
            ||
               ND.clear();
               {? ND.seek(_ref_old)
               ||
                  _tmg:=(1+ND.MAG().TYP);
                  DK.index('DOKMAG');DK.prefix(ND.ref);
                  _rp:=null
               || _ok:=0
               ?}
            ?}
         |? _ii=0
         ||
            ~~
         ||
::          _ii=1
            {? ~ZMIENNE.WAR_SKL
            ||
               ND.clear();
               {? ND.seek(_ref_old)
               ||
                  DK.index('DOKMAG');DK.prefix(ND.ref);
                  _rp:=null
               || _ok:=0
               ?}
            ||
               ND.clear();
               {? ND.seek({? _ile_dok=2 || _ref || _ref_old ?})
               ||
::                drugi magazyn
                  _tmg:=(1+ND.MAG().TYP);
                  DK.index('DOKMAG');DK.prefix(ND.ref);
                  _rp:=_refn
               || _ok:=0
               ?}
            ?}
         ?};

::       generacja pozycji opakowan - przed rozpisaniem FIFO/LIFO
::       tylko dla dokumentow zewnetrznych
         {? ND.TYP().Z='T' | ND.TYP().T='BO' || exec('opak_wer','opakow',ND.ref) ?};

         {? DK.first()
         ||
            _ok:=1;
            _nnn:=ND.ref;
::          exec('data_akcept','mag_fun','T');
            _czy__all:=0;
            {? ND.MAG().TYP*'EWI' & ND.TYP().P='T'
            ||
::             wyznaczenie ceny ewidencyjnej w dokumentach przychodowych
               DK.cntx_psh();
               {!
               |? __cena_e:=exec('biez_cen','ceny_dok',DK.M,ND.MAG,ND.D);
                  __ktm:=DK.M;
                  {? __cena_e=0
                  ||
::                   brak ceny ewidencyjnej - ustalenie ceny ewidencyjnej z pierwszej pozycji na material DK.M
::                   w akceptowanym dokumencie
                     DK.cntx_psh();
                     {? DK.first()
                     ||
                        {!
                        |? {? DK.M=__ktm || __cena_e:=DK.C ?};
                           __cena_e=0 & DK.next()
                        !}
                     ?};
                     DK.cntx_pop()
                  ?};
                  DK.C:=__cena_e;
                  DK.WAR:=(DK.IL*DK.C)$2;
                  DK.SCC:=DK.C;
                  DK.SCWAR:=DK.WAR;
                  DK.put();
                  DK.next()
               !};
               DK.cntx_pop();
               DK.get()
            ?};
            {? 'Ś'=__tmgo & 'D'=_tmg & ND.TYP().P<>'T'
            ||
               DK.cntx_psh;
               {? DK.first
               ||
                  {!
                  |?
                     DK.C:=exec('cenas','magazyn_stan',DK.M,__tmgo);
                     DK.WAR:=(DK.IL*DK.C)$2;
                     DK.put & DK.next
                  !}
               ?};
               DK.cntx_pop;
               DK.get
            ?};
            {? _tmg='D' & ND.TYP().P<>'T' & ND.TYP().DN='D' & _ref<>null()
            || _tmg:=(1+DK.N().MAG().TYP);
               DK.first();
               {!
               |? _il:=DK.IL;
                  _mat:=DK.M;
                  exec('gen_skl','material',_mat,_il,_ref);
                  DK.next()
               !};
               ND.cntx_psh();
               {? ND.clear; ND.seek(_ref) || exec('dk_sum','magdok_wspolne',ND.ref) ?};
               ND.cntx_pop();
               ZMIENNE.WAR_SKL:=1
            ?};
            {? 'FLŚE'*_tmg & ND.TYP().P<>'T'
            ||
               _czy__all:=exec('gen_fifo','magdok_poz',_tmg,0);
               {? _czy__all<>0
               ||
                  _txt:={? 'F'*_tmg || 'Rozpisanie pozycji wg FIFO nie powiodło się.'@
                        |? 'L'*_tmg || 'Rozpisanie pozycji wg LIFO nie powiodło się.'@
                        |? 'Ś'*_tmg || 'Rozpisanie pozycji wg ŚREDNIE nie powiodło się.'@
                        || 'Rozpisanie pozycji wg EWIDEN nie powiodło się.'@ ?};
                  {? _group
                  || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
                  || exec('add_kom','#message',_txt,2)
                  ?};
                  undo()
               |? ND.MAG().SL='T'
               || _spr:=0;
                  DK.cntx_psh();
                  DK.index('DOKZP');
                  DK.prefix(ND.ref(),0);
                  {? DK.first()
                  || {!
                     |? {? DK.SCEAN<>''
                        || _spr:=1;
                           DK_L.index('DK');
                           DK_L.prefix(DK.ref(),null());
                           {? DK_L.first() || {! |? {? DK_L.AUTO || DK_L.del() || DK_L.next() ?} !} ?}
                        ?};
                        DK.next()
                     !}
                  ?};
                  DK.cntx_pop();
                  {? _spr || exec('sprndlok','magdok_poz',{? _group || -1 || 0 ?}) ?}
               ?};
               {? ND.TYP().DN='D' & _ref<>null()
               || _tmg:=(1+DK.N().MAG().TYP);
                  DK.first();
                  {!
                  |? _il:=DK.IL;
                     _mat:=DK.M;
                     exec('gen_skl','material',_mat,_il,_ref);
                     DK.next()
                  !};
                  ND.cntx_psh();
                  {? ND.clear; ND.seek(_ref) || exec('dk_sum','magdok_wspolne',ND.ref) ?};
                  ND.cntx_pop();
                  ZMIENNE.WAR_SKL:=1
               ?};
               DK.first();

::             generownie pozycji po wycenie dokumentow FIFO / LIFO
               DK.cntx_psh();
               ND.cntx_psh();

               {? {? ZMIENNE.WAR_SKL || _ref<>null & _ii=2 || _ref_old<>null & _ii=1 ?}<>0 &
                  {? ZMIENNE.WAR_SKL || _ref_old<>null || _ref<>null ?}
               ||
                  {? __md_oddz<>''
                  || DK.cntx_psh();
                     DK_C.cntx_psh();
                     DK_L.cntx_psh();
                     ST.ODDZ:=ST.ODDZ_KOD:=__md_oddz;
                     exec('open','open_tab',ST.ODDZ,2-$ST.AR)
                  ?};
                  DK.prefix({? ZMIENNE.WAR_SKL || _ref_old || _ref ?});
                  {? DK.first
                  || _pal:=tab_tmp(1,'PAL','STRING[16]','');
                     {!
                     |?
                        exec('delprzyp','fakso','FAKSO','DK',DK.ref());
                        exec('delFAP_K','oplaty_dod',DK.N().uidref(),DK.uidref(),null());
                        FAP_K.index('DKSQL');
                        FAP_K.prefix($DK.ref());
                        {? FAP_K.first() || {! |? exec('dk_k_del','magdok_poz') !}?};
                        {? DK.count()>0
                        || DK_L.index('DK');
                           DK_L.prefix(DK.ref(),null);
                           {? DK_L.first()
                           || {!
                              |? {? DK_L.PAL<>null
                                 || _pal.clear();
                                    {? ~_pal.find_key($DK_L.PAL)
                                    || _pal.blank();
                                       _pal.PAL:=$DK_L.PAL;
                                       _pal.add(1)
                                    ?}
                                 ?};
                                 DK_L.del()
                              !}
                           ?}
                        ?};
                        {? DK.count>0
                        || DK_HS.index('DK');
                           DK_HS.prefix(DK.ref());
                           {? DK_HS.first() || {! |? DK_HS.del() !} ?}
                        ?};
                        {? DK.PLUS='N' || exec('update','rezerwacje','DK',DK.ref(),ND.MAG,DK.M,0,DK.SRDK) ?};
::                      Dla dokumentu RW sprawdzane jest, czy usuwana pozycja jest ostanią pozycją dokumentu RW danego limitu.
::                      Jeżeli tak to odblokowuję możliwość rejestracji nielimitu/odpadu na zleceniu montażowym/podzleceniu.
                        _chk_lim:=(exec('nd_is_rw','magdok_wspolne',DK.N) | exec('nd_is_zw','magdok_wspolne',DK.N)) & DK.ZLIM<>null()
                                  & exec('FindAndGet','#table',ZLIM,DK.ZLIM,,
                                     "ZLIM.PODZL<>'' & (ZLIM.SO='O' | ZLIM.SO='S' & ZLIM.LIMIT='N')",0);
                        _zlim:=DK.ZLIM;
                        _del:=DK.del(,1);
                        {? _del & _chk_lim || exec('zlim_chk_podzl','zl_limit',_zlim) ?};
                        _del>1
                     !};
::                   aktualizacja znacznikow na paletach
                     {? _pal.size() & _pal.first()
                     || {!
                        |? exec('znacznik','magdok_palety',exec('FindAndGet','#table','PAL',_pal.PAL,,,null()));
                           _pal.next()
                        !}
                     ?};
                     obj_del(_pal)
                  ?};
                  {? __md_oddz<>''
                  ||
                     ST.ODDZ:=ST.ODDZ_KOD:=__st_oddz;
                     exec('open','open_tab',ST.ODDZ,2-$ST.AR);
                     DK.cntx_pop();
                     DK_C.cntx_pop();
                     DK_L.cntx_pop()
                  ?};

                  _pal:=tab_tmp(1,'PAL','STRING[16]','');
                  DK.prefix(_nnn);
                  {? DK.first
                  ||
                     _tabdkl:=tab_tmp(1,'DKL','STRING[16]',,'ILE','REAL','');
                     _mgeanl:=DK.N().MD().EANL;
                     {!
                     |?
                        {? (DK.N().MD().TYP*'EWI')
                        || __cena:=exec('biez_cen','ceny_dok',DK.M,DK.N().MD,DK.N().D,,,1);
                           {? __cena=-1 || __cena:=0 || {? ~__cena || __cena:=DK.C ?} ?}
                        || __cena:=DK.C
                        ?};
                        _czyid:=(';DAPZ'*DK.M().IDMOB)>1;

                        _dokl:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
                        _il22:={? DK.WS2 || DK.IL/DK.WS2 || 0 ?} $ (_dokl+1);
                        roundmet(BEER.MDOKL);
                        _il22:=_il22 $ _dokl;
                        exec('przyjdod','jm',{? DK.J2=null || $DK.M().J || $DK.J2 ?},
                        {? DK.WS2<>0 || DK.WS2 || 1 ?},{? _dokl>=0 || _il22 || DK.IL2 ?});
                        roundmet(5);

                        __dk_m:=DK.M;
                        __dk_il:=DK.IL;
                        __dk_n_d:=DK.N().D;
                        {? ~(DK.N().MAG().TYP*'DOST')
                        || __dk_dk_c:=exec('odd_matr','mat_atr',__md_oddz,ST.ODDZ
                                       ,exec('FindAndGet','#table',DK,DK.PRDK,,"DK_C",DK.DK_C))
                        || __dk_dk_c:=exec('odd_matr','mat_atr',__md_oddz,ST.ODDZ,DK.DK_C)
                        ?};
                        __dk_prdk:={? DK.M().SETW='P'
                                    & (exec('FindAndGet','#table',DK,DK.PRDK,,"TW",date(0,0,0))<>DK.TW
                                     | exec('FindAndGet','#table',DK,DK.PRDK,,"SCEAN",'')<>DK.SCEAN)
                                   || DK.SRDK
                                   || DK.PRDK
                                   ?};
                        __dk_war:={? (1+DK.N().MD().TYP)='E' || DK.WAR || 0 ?};
                        __dk_tw:={? DK.M().SETW='P' & DK.TW=date(0,0,0)
                                 || exec('FindInSet','#table','DK_L','DK',null(),DK.ref(),"@.DK_L.TW",,,date(0,0,0))
                                 || DK.TW
                                 ?};

                        _dk_src:=DK.PRDK;
                        _dk_sts:=DK.STATS;
                        _scean:={? _czyid
                                || exec('FindAndGet','#table','DK',__dk_prdk,,"DK.SCEAN",'')
                                || ''
                                ?};
                        {? DK.PLUS='N' & _czyid & _scean=''
                        || _scean:=exec('old_idmob','magdok_nag',DK.M().KTM,DK.M)
                        ?};
                        {? ~ZMIENNE.WAR_SKL & _ii=1 & __md_oddz<>''
                        || DK.cntx_psh();
                           DK_C.cntx_psh();
                           DK_L.cntx_psh();
                           ST.ODDZ:=ST.ODDZ_KOD:=__md_oddz;
                           exec('open','open_tab',ST.ODDZ,2-$ST.AR)
                        ?};
                        VAR_DEL.delete('__dk_p');
                        __dk_p:=DK.PROJEKTY;
                        _refnew:=exec('adddk','magdok_poz',{? ZMIENNE.WAR_SKL || _ref_old || _ref ?},__dk_m,__dk_il
                                  ,__cena,__dk_n_d,,,,,,,,7,,,__dk_dk_c,,__dk_prdk,,,,,__dk_war,,_scean,__dk_tw);
                        VAR_DEL.delete('__dk_p');
                        _mskdkl:=DK_L.name();

                        exec('DK_HS_new4DK','statexam',_refnew,'M',,,_dk_sts,_dk_src,1);

                        {? ~ZMIENNE.WAR_SKL & _ii=1 & __md_oddz<>''
                        ||
                           ST.ODDZ:=ST.ODDZ_KOD:=__st_oddz;
                           exec('open','open_tab',ST.ODDZ,2-$ST.AR);
                           DK.cntx_pop();
                           DK_C.cntx_pop();
                           DK_L.cntx_pop()
                        ?};

                        {? _czypal
                        || DK.cntx_psh();
                           _iledk:=DK.IL;
                           _refold:={? ~DK.ZP
                                    || DK.ref()
                                    || DK.clear;
                                       {? DK.seek(DK.ZP,) || DK.ref() || null ?}
                                    ?};
                           DK_L.index('DK');
                           DK_L.prefix(_refold,null);
                           {? DK_L.first()
                           || {!
                              |? _iledkl:=DK_L.IL;
                                 _tabdkl.clear();
                                 {? _tabdkl.find_key($DK_L.ref()) || _iledkl-=_tabdkl.ILE ?};
                                 {? _iledkl>0
                                 || {? _iledk>=_iledkl
                                    || _ilenew:=_iledkl;
                                       _iledk-=_ilenew
                                    |? _iledk<_iledkl
                                    || _ilenew:=_iledk;
                                       _iledk:=0
                                    ?};
                                    _tabdkl.clear();
                                    {? _tabdkl.find_key($DK_L.ref())
                                    || _tabdkl.ILE+=_ilenew;
                                       _tabdkl.put(1)
                                    || _tabdkl.blank();
                                       _tabdkl.DKL:=$DK_L.ref();
                                       _tabdkl.ILE:=_ilenew;
                                       _tabdkl.add(1)
                                    ?};
                                    DK_L.cntx_psh();
                                    DK_L.use(_mskdkl);
                                    DK_L.clear();
                                    DK_L.DK:=_refnew;
                                    {? DK_L.UIDDO<>''
                                     & exec('FindAndGet','#table',EANL,DK_L.UIDDO,,"MG",null())=DK_L.DK().N().MAG
                                    || DK_L.LOK:=exec('FindAndGet','#table',EANL,DK_L.UIDDO,,,null());
                                       {? DK_L.LOK=null() || DK_L.LOK:=_mgeanl ?}
                                    || DK_L.LOK:=_mgeanl
                                    ?};
                                    DK_L.UIDDO:='';
                                    DK_L.IL:=_ilenew;
                                    DK_L.SCSQL:=$_refnew;
                                    DK_L.TM+=0.03;
                                    exec('reoIL2','magdok_wymiary');
                                    exec('uzupIDkod','magdok_palety',DK_L);
                                    {? DK_L.add() & _czypal & DK_L.PAL().STAN='N'
                                    || DK_L.cntx_pop();
                                       PAL_POZ.cntx_psh();
                                       PAL_POZ.clear();
                                       PAL_POZ.blank();
                                       PAL_POZ.PAL:=DK_L.PAL;
                                       PAL_POZ.IL:=DK_L.IL;
                                       PAL_POZ.ILP:=DK_L.IL;
                                       PAL_POZ.AKT:='T';
                                       PAL_POZ.M:=DK_L.DK().M;
                                       PAL_POZ.TW:=DK_L.TW;
                                       PAL_POZ.JM:=DK_L.DK().M().J;
                                       PAL_POZ.C:=DK_L.DK().C;
                                       PAL_POZ.DK_C:=DK_L.DK().DK_C;
                                       exec('uzupIDkod','magdok_palety',PAL_POZ);
                                       PAL_POZ.add(1);
                                       PAL_POZ.cntx_pop();
                                       _pal.clear();
                                       {? ~_pal.find_key($DK_L.PAL)
                                       || _pal.blank();
                                          _pal.PAL:=$DK_L.PAL;
                                          _pal.add(1)
                                       ?}
                                    || DK_L.cntx_pop()
                                    ?}
                                 ?};
                                 _iledk>0 & DK_L.next()
                              !}
                           ?};
                           DK.cntx_pop()
                        |? _mgsl
                        || DK.cntx_psh();
                           _iledk:=DK.IL;
                           _refold:={? ~DK.ZP
                                    || DK.ref()
                                    || DK.clear;
                                       {? DK.seek(DK.ZP,) || DK.ref() || null ?}
                                    ?};
                           DK_L.index('DK');
                           DK_L.prefix(_refold,null);
                           {? DK_L.first()
                           || {!
                              |? _iledkl:=DK_L.IL;
                                 _tabdkl.clear();
                                 {? _tabdkl.find_key($DK_L.ref()) || _iledkl-=_tabdkl.ILE ?};
                                 {? _iledkl>0
                                 || {? _iledk>=_iledkl
                                    || _ilenew:=_iledkl;
                                       _iledk-=_ilenew
                                    |? _iledk<_iledkl
                                    || _ilenew:=_iledk;
                                       _iledk:=0
                                    ?};
                                    _tabdkl.clear();
                                    {? _tabdkl.find_key($DK_L.ref())
                                    || _tabdkl.ILE+=_ilenew;
                                       _tabdkl.put(1)
                                    || _tabdkl.blank();
                                       _tabdkl.DKL:=$DK_L.ref();
                                       _tabdkl.ILE:=_ilenew;
                                       _tabdkl.add(1)
                                    ?};
                                    {? DK_L.TW<>date(0,0,0)
                                    ||
                                       DK_L.cntx_psh;
                                       DK_L.use(_mskdkl);
                                       DK_L.clear;
                                       DK_L.DK:=_refnew;
                                       {? DK_L.UIDDO<>''
                                        & exec('FindAndGet','#table',EANL,DK_L.UIDDO,,"MG",null())=DK_L.DK().N().MAG
                                       || DK_L.LOK:=exec('FindAndGet','#table',EANL,DK_L.UIDDO,,,null());
                                          {? DK_L.LOK=null() || DK_L.LOK:=_mgeanl ?}
                                       || DK_L.LOK:=_mgeanl
                                       ?};
                                       DK_L.UIDDO:='';
                                       DK_L.IL:=_ilenew;
                                       DK_L.SCSQL:=$_refnew;
                                       DK_L.AUTO:=0;
                                       DK_L.TM+=0.03;
                                       exec('reoIL2','magdok_wymiary');
                                       exec('uzupIDkod','magdok_palety',DK_L);
                                       DK_L.add;
                                       DK_L.cntx_pop
                                    ?}
                                 ?};
                                 _iledk>0 & DK_L.next
                              !}
                           ?};
                           DK.cntx_pop
                        ?};
                        DK.next()
                     !};
                     obj_del(_tabdkl)
                  ?};
::                akceptacja palet
                  {? _czypal
                  || PAL.cntx_psh();
                     _pal.clear();
                     {? _pal.first()
                     || {!
                        |? PAL.clear();
                           {? PAL.seek(_pal.PAL)
                           || PAL.STAN:='T';
                              PAL.put(1);
                              exec('znacznik','magdok_palety',PAL.ref())
                           ?};
                           _pal.next()
                        !}
                     ?};
                     PAL.cntx_pop()
                  ?};
                  obj_del(_pal);

                  {? ~ZMIENNE.WAR_SKL & _ii=1 & __md_oddz<>''
                  ||
                     ST.ODDZ:=ST.ODDZ_KOD:=__md_oddz;
                     exec('open','open_tab',ST.ODDZ,2-$ST.AR)
                  ?};

                  exec('dk_sum','magdok_wspolne',{? ZMIENNE.WAR_SKL || _ref_old || _ref ?});
::                domyslne informacje o wymiarach
                  {? __akcept='T' & ND.MAG().SL='T' & (ND.clear(); ND.seek({? ZMIENNE.WAR_SKL || _ref_old || _ref ?}))
                  || {? exec('sprndlok','magdok_poz',0)<>'' || __akcept:='N' ?}
                  ?};

                  {? ~ZMIENNE.WAR_SKL & _ii=1 & __md_oddz<>''
                  ||
                     ST.ODDZ:=ST.ODDZ_KOD:=__st_oddz;
                     exec('open','open_tab',ST.ODDZ,2-$ST.AR)
                  ?}
               ?};
               ND.cntx_pop();
               DK.cntx_pop()
            ?};
            {? _czy__all=0
            ||
               __czy_c_sp:='';
               {!
               |?
                  echo('Trwa akceptowanie dokumentu ... %1'@[DK.N().SYM],'pozycja %1'@[$DK.P]);
::                ewentualna wycena pozycji dla PKOM-a
                  {? (_wgskl:=exec('get','#params',600300,2))<>'N' & DK.N().TYP().DN='K'
                  || {? ~(DK.N().MAG().TYP*'EWI') | exec('biez_cen','ceny_dok',DK.M,DK.N().MAG,DK.N().D)=0
                     ||
                        _warskl:={? DK.IL || exec('sklsql2c','magdok_poz',$DK.ref) || 0 ?};

                        DK.C:={? DK.IL || _warskl/DK.IL || 0 ?}$DK.M().DOKL_C;
                        {? DK.N().MAG().SKL<>'T'
                        || DK.SCC:=DK.C
                        ?};
                        exec('war_mag','magdok_poz');
                        {? (1+DK.N().MAG().TYP)<>'E' & _wgskl='W' || DK.WAR:=_warskl ?}
                     ?}
                  ?};
                  {? DK.N().TYP().CS='T' & (DK.CN=0 | DK.CB=0) & DK.ZP=0
                  || __czy_c_sp+=$DK.P+','
                  ?};
                  {? DK.M().RODZ='T'
                  ||
                     __stan_s:=0;
                     __stan_k:=1;
                     {? DK.PLUS='T'
                     ||
                        __stan_s:=DK.IL
                     ||
                        {? _tmg='D'
                        ||
                           __stan_k:={? ~exec('noDostBO','magdok_wspolne',DK.PRDK,DK.N().D)
                                     || exec('dok_po_kor','magdok_wspolne',DK.N().D,DK.RDK,DK.NDK,DK.N().MAG,DK.M)
                                     || -1
                                     ?};
                           {? __stan_k>0
                           ||
                              HELP.POP:=1; HELP.RDK:=DK.RDK; HELP.NDK:=DK.NDK; HELP.IL:=DK.IL; HELP.IL2:=DK.IL2;
                              __stan_s:=exec('obl_dost','magazyn_stan',DK.N().MAG,DK.M,DK.RDK,DK.NDK);
                              HELP.POP:=0; HELP.IL:=0; HELP.IL2:=0; HELP.RDK:=-1; HELP.NDK:='~~'
                           ?}
                        ?}
                     ?};
                     _czyid:=(_tmg='D' | _mgi) & DK.N().MAG().SL='T' & DK.N().MAG().PAL<>'T';
                     {? DK.PLUS='T' & (DK.N().TYP().DN='T'
                     | (DK.N().INN='T' & DK.N().TYP().INW='I' & DK.N().TYP().P='T'))
                      & exec('ctrlSETW','magdok_wspolne',DK.M,DK.SRDK)
                     || DK.SRDK:=DK.PRDK:=$DK.ref();
                        DK.RDK:=#DK.ref();
                        DK.NDK:=DK.name();
                        {? DK.M().IDMOB='D' || DK.SCEAN:='' ?};
                        {? DK.put(1) & _tmg='D' & DK.N().MAG().SL='T'
                        || DK_L.index('DK');
                           DK_L.prefix(DK.ref(),null());
                           {? DK_L.first()
                           || {!
                              |? {? DK.M().IDMOB='D' || DK_L.SCEAN:='' ?};
                                 DK_L.SCSQL:=DK.SRDK;
                                 DK_L.put(1);
                                 DK_L.next()
                              !}
                           ?}
                        ?}
                     ?};
                     {? DK.PLUS='T' & DK.M().IDMOB<>'N'
                     || {? DK.SCEAN='' & DK.PRDK<>DK.SRDK
                        || DK.SCEAN:=exec('FindAndGet','#table','DK',DK.PRDK,,"DK.SCEAN",'')
                        ?};
                        _scakt:=DK.SCEAN;
                        _scean:={? DK.SCEAN<>'' & DK.M().IDMOB='D'
                                & (DK.N().INN='T' & DK.N().TYP().INW='E' &  DK.N().TYP().P='T')
                                || DK.SCEAN
                                |? _tmg<>'D' & ~_mgi
                                || exec('old_idmob','magdok_nag',DK.M().KTM,DK.M)
                                |? DK.PLUS='T' & (DK.PRDK=DK.SRDK | DK.SCEAN='')
                                 & {? ~(DK.N().TYP().DN='T'
                                   | (DK.N().INN='T' & DK.N().TYP().INW='I' & DK.N().TYP().P='T'))
                                   || 1
                                   || DK.SCEAN=''
                                   ?}
                                || exec('newscean','magdok_poz',DK.M,DK.M().IDMOB,DK.DK_C,DK.DK_C().ZPARN,DK.ZL,DK.SCEAN)
                                || DK.SCEAN
                                ?};
                        {? _scean<>''
                        || DK.SCEAN:=_scean;
                           {? DK.put(1)
                           || {? _scakt<>_scean & (_tmg='D' | _mgi)
                              || _txt:='Przypisano kod kreskowy dla dostawy %1.'@[DK.SCEAN];
                                 {? _group
                                 || exec('add_kom','#message',ND.SYM,1,gsub(_txt,'\n',' '))
                                 || exec('add_kom','#message',_txt,4)
                                 ?};
                                 DK_L.cntx_psh();
                                 DK_L.index('DK');
                                 DK_L.prefix(DK.ref(),null());
                                 {? DK_L.first() || {! |? DK_L.SCEAN:=DK_L.DK().SCEAN; DK_L.put(1); DK_L.next() !} ?};
                                 DK_L.cntx_pop()
                              ?}
                           || _txt:='Nie przypisano kodu kreskowy dla dostawy %1.'@[DK.M().KTM];
                              {? _group
                              || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
                              || exec('add_kom','#message',_txt,2)
                              ?};
                              undo()
                           ?}
                        |? _czyid & {? (DK.N().INN='T' & DK.N().TYP().INW='I' & DK.N().TYP().P='T')
                                    || ~(_scakt<>'' & DK.M().IDMOB='Z')
                                    || 1
                                    ?}
                        || _txt:='Nie został wygenerowany kod kreskowy dla dostawy %1.'@[DK.M().KTM];
                           {? _group
                           || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
                           || exec('add_kom','#message',_txt,2)
                           ?};
                           undo()
                        ?};
                        {? DK.SCEAN<>''
                        || exec('aktzwmkodk','kody_kresk',DK.M,DK.SCEAN);
                           {? DK.M().IDMOB='D' & (DK.N().INN='T' & DK.N().TYP().INW='E' &  DK.N().TYP().P='T')
                           || exec('mkodkadd','kody_kresk',DK.M,DK.SCEAN,DK.PRDK,2)
                           ?}
                        ?}
                     ?};
                     {? _tmg='D' & __stan_s<DK.IL
                     ||
                        {? __stan_k>0
                        || _txt:='Brak stanu dla materiału %1.'@[DK.M().KTM];
                           {? _group
                           || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
                           || exec('add_kom','#message',_txt,2)
                           ?}
                        |? __stan_k<0
                        || _txt:='Wskazana dostawa pochodzi z dokumentu BO wystawionego później niż dany dokument.'@;
                           {? _group
                           || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
                           || exec('add_kom','#message',_txt,2);
                              exec('add_kom','#message','- Dotyczy materiału: %1 pozycja: %2.'@[DK.M().KTM,form(DK.P,,0,'99')],2)
                           ?}
                        || _txt:='Do dnia wystawienia korekty włącznie stan korygowanej dostawy jest niedostępny.'@;
                           {? _group
                           || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
                           || exec('add_kom','#message',_txt,2);
                              exec('add_kom','#message','- Dotyczy materiału: %1.'@[DK.M().KTM],2)
                           ?}
                        ?};
                        undo()
                     |? exec('OBLSTAN','magazyn_stan',DK.N().MAG,DK.M,{? DK.PLUS='T' || ND.D || DK.DOST ?}
                           ,DK.C,DK.PLUS,0,DK.RDK,DK.NDK,DK.SRDK,DK.PRDK,DK.SCC,DK.N().SCWAL,DK.STATS,DK.SCEAN,DK.TW)=0
                     ||
                        _ok:=0
                     ?}
                  ?};
                  DK.next()
               !};
               VAR_DEL.delete('__stan_s','__stan_k');
               echo();
               {? __czy_c_sp<>''
               ||
                  __czy_c_sp:=__czy_c_sp-1;
                  {? _group
                  || _txt:='Nie podano ceny sprzedaży na wszystkich pozycjach.'@;
                     exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
                  || exec('add_kom','#message','Nie podano ceny sprzedaży na pozycjach: %1.'@[__czy_c_sp],4)
                  ?};
                  _ok:=0
               ?}
            ?};
::          Produkcja:- nawijanie stanow zlecen i przypisywanie dostaw do zlecenia dla rw na surowce nielimitowane
::          dost_zl scalic z akzlt i przeniesc do jednego pliku.
            {? __pprod='T'
             & (' '+exec('get','#params',500705,2,null()))*(' '+DK.N().TYP().T+' ')=0
            || _wyn:=1;
               {? ND.TYP().ZLEC<>'N' & _ok=1 & __pprod='T' & _ii<>0
               || {? _wyn=1
                  ||
                     {? (' '+exec('get','#params',500701,2,null()))*(' '+ND.TYP().T+' ')>0
                      | ND.TYP().WYR='T'
                      | exec('is_usluga_typ','zl_uslugi',ND.TYP)
                     || exec('aktuzl','zl_common',ND.ref(),1,_group)
                     |? ND.TYP().ZLEC<>'N' & ND.TYP().WYR<>'T' & ND.TYP().KOOP<>'T'
                     || DK.prefix(ND.ref);
                        {? DK.first
                        || {!
                           |? {? DK.ZL<>null
                              || _ok:=exec('akzlst','magdok_poz',DK.ZL,1,DK.WYD,,_group)
                              ?};
                              DK.next & _ok
                           !}
                        ?}
                     ?}
                  || undo()
                  ?}
               ?}
            |? (__pprod='N' & DK.ZL<>null) |
              (__pprod='T' & DK.ZL<>null & (' '+exec('get','#params',500705,2,null()))*(' '+DK.N().TYP().T+' ')>0)
            || DK.prefix(ND.ref);
               {? DK.first
               || {!
                  |? {? DK.ZL<>null & DK.N().TYP().KOOP<>'T'
                     || _ok:=exec('akzlst','magdok_poz',DK.ZL,1,DK.WYD,,_group)
                     ?};
                     DK.next  & _ok
                  !}
               ?}
            ?};
::          Obsluga partii produktu - generowanie ZPARS dla RW, jesli pole partia wypelnione na DK
            DK.cntx_psh();
            TYPYDOK.cntx_psh();
            {? exec('nd_is_rw','magdok_wspolne',ND.ref())>0 | exec('nd_is_zw','magdok_wspolne',ND.ref())>0
            ||
               _can_continue:=0;
               DK.prefix(ND.ref);
               {? DK.first()
               || {!
                  |? _can_continue:=exec('create4dk','magdok_partie',DK.ref());
                     DK.next() & _can_continue>0
                  !}
               ?}
            ?};
            TYPYDOK.cntx_pop();
            DK.cntx_pop();

::          koniec fragmentu wklejonego z produkcji

::          tylko dla dokumentu akceptowanego
::          kontrola wypełnienia ceny tylko dla magazynow srednich i ewidencyjnych
::          lub gdy jest przesuniecie na te magazyny
            {? ND.ref()=_ref_old
            ||
               MG.cntx_psh();
               ND.cntx_psh();
               DK.cntx_psh();
               DK.index('DOKMAG');
               DK.prefix(ND.ref());
               {? DK.first()
               ||
                  {!
                  |?
                     __spr_cene:=0;
                     __txt:='';
                     {? ('Ś'+{? exec('get','#params',600104,2)<>'T' || 'E' || '' ?})*_tmg>0
                     ||
                        __txt:='Magazyn typu %1.'@[DK.N().MAG().TYP];
                        __spr_cene:=1
                     ||
                        {? _tmg2<>'' & ('Ś'+{? exec('get','#params',600104,2)<>'T' || 'E' || '' ?})*_tmg2>0
                        ||
                           __txt:='Przesunięcie do magazynu typu %1.'@[DK.N().MD().TYP];
                           __spr_cene:=1
                        ?}
                     ?};
                     {? DK.C=0 & DK.M().RODZ<>'U' & DK.N().MAG().IL<>'T'
                     ||
                        {? 'FL'*_tmg>0
                        || __txt+='Po rozpisaniu pozycja '@
                        || __txt+='Pozycja '@
                        ?};
                        __txt+='%1 - zerowa cena dostawy.'@[$DK.P];
                        {? var_pres('__kom')>100
                        || {? _group
                           || exec('add_kom','#message',ND.SYM,5,gsub(__txt,'\n',' '))
                           || exec('add_kom','#message',__txt,{? __spr_cene=1 || 2 || 4 ?})
                           ?}
                        || FUN.info(__txt)
                        ?};
                        {? __spr_cene=1 || _ok:=0 ?}
                     ?};

                     DK.next()
                  !}
               ?};
               DK.cntx_pop();
               ND.cntx_pop();
               MG.cntx_pop()
            ?};

            {? _ok=0
            || undo()
            || DK.N;
               ND.US:=OPERATOR.USER;
               ND.Z:={? _ii=1 || 'T' || 'N' ?};
               ND.STAT_REJ:={? _ii=1 || 'Z' || 'N' ?};
               {? _ii=1
               || {? ND.IST_TYP<>'' || ND.INTRAKC:=exec('get','#params',100202,2) ?}
               || ND.INTRAKC:='N'
               ?};
::             w ponizszej formule obliczana jest tez wartosc dokumentu
               exec('data_akcept','magdok_nag','T',_ii=2,POM.PAR2);
::             akceptacja powiazanego dokumentu opakowan
               {? exec('nd_z','opakow',1)=0
               || _txt:='Powiązany dokument opakowań nie został zaakceptowany.'@;
                  {? _group
                  || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
                  || exec('add_kom','#message',_txt,4)
                  ?};
                  undo()
               ?};
::             aktualizacja statusow dostaw
               exec('nd_dk_stats','statexam',ND.ref());
               ~~
            ?}
         || {? _ile_dok=_ii
            || _txt:='Dokument magazynowy nie ma pozycji materiałowych '
                'i nie może być zakończony.'@;
               {? _group
               || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
               || exec('add_kom','#message',_txt,4,,,1)
               ?}
            ?};
            undo()
         ?};
         {? do_state=2
         || {? ~_group
            || exec('add_kom','#message','Dokument nie został zakończony.'@,2,,,_ii%*2)
            ?};
            {? _ii=2
            || _txt:='Wycofano akceptację poprzedniego dokumentu.'@;
               {? _group
               || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
               || exec('add_kom','#message',_txt,2,,,1)
               ?}
            ?}
         ?};

         {? _ii=2 & ~ZMIENNE.WAR_SKL & __md_oddz<>''
         ||
            ST.ODDZ:=ST.ODDZ_KOD:=__st_oddz;
            exec('open','open_tab',ST.ODDZ,2-$ST.AR)
         ?}
      !};
      ND.cntx_pop();
      ND.get();
      ST.MAG:=_stmag;

::    aktualizacja wartosci do kontrolingu
:: DRO:[rr] nie przeniesiono
::      {? exec('aktualizacja_m','schematy',ND.ref(),'D')=0
::      || undo();
::         exec('add_kom','#message','Wyliczenie wartości do controllingu nie powiodło się.',2)
::      ?};
::    rezerwacje dla zamowien sprzedazy
      DK.index('DOKMAG');
      DK.prefix(ND.ref());
      {? DK.first
      ||
         ZK_P.cntx_psh; ZD_RP.cntx_psh;
         ZK_P.index('ZD_POZ');
         {!
         |?
            {? 5+DK.ZAM_RP='zdhip'
            ||
               ZD_RP.use(8+DK.ZAM_RP);
               ZD_RP.prefix;
               {? ZD_RP.seek(DK.ZAM_RP)
               ||
                  ZK_P.prefix($ZD_RP.ZD_POZ);
                  {? ZK_P.first
                  ||
                     {!
                     |?
                        ZK_P.REZ:=1;
                        ZK_P.put;
                        ZK_P.next
                     !}
                  ?}
               ?}
            ?};
            DK.next
         !};
         ZK_P.cntx_pop; ZD_RP.cntx_pop
      ?};
      _wyn:=do_state();
      {? _wyn & (ND.get(); ND.Z='T') || exec('ilmg2ZAM','magdok_wspolne',ND.ref(),1) ?};
      {? ~_e || end() ?};
      exec('llog_kon','users',__l_log);
::    aktualizacja rezerwacji po akceptacji dokumentow
      {? _wyn=1
      ||
         {? var_pres('__zam')>100 || __no_stat:=0 || __no_stat:=1 ?};
         {? ND.sel_size=0 || {? __no_stat=1 || exec('utw_zk_tymc','zamsiw_wspolne') ?} ?};
         {! _ii:=1.._ile_dok
         |! _stmag:=ST.MAG;
            {? _ii=2
            ||
               {? __md_oddz<>''
               ||
                  ST.ODDZ:=ST.ODDZ_KOD:=__md_oddz;
                  exec('open','open_tab',ST.ODDZ,2-$ST.AR)
               ?};
               {? ND.clear;ND.seek(_ref)
               || {? ND.STAT_REJ='Z'
                  ||
::                     exec('add_kom','#message','Zakończono rejestrację dokumentu %1 w magazynie '
::                        '%2 został zakończony.'@[ND.SYM,ND.MAG().SYM],1);
                     {? _group
                     || _txt:='Zakończono rejestrację dokumentu.'@;
                         exec('add_kom','#message',ND.SYM,1,gsub(_txt,'\n',' '))
                     ?};
                     {? ND.TYP().P='T' & ND.TYP().Z='T' & ND.TYP().DN<>'N' & ND.F='T' & exec('spr_zz','opakow')
                     || _txt:='Do pozycji dokumentu wygenerowano automatycznie pozycje opakowań zwrotnych.'@;
                        {? _group
                        || exec('add_kom','#message',ND.SYM,1,gsub(_txt,'\n',' '))
                        || exec('add_kom','#message',_txt,4);
                           exec('add_kom','#message','Uwaga. Możliwa jest modyfikacja pozycji opakowań '
                                                 'po wycofaniu akceptacji dokumentu.'@,4)
                        ?}
                     ?}
                  ?};
                  __mat:='';
                  DK.index('DOKMAG');
                  DK.prefix(ND.ref());
                  {? DK.first
                  || {!
                     |? {? __mat*('|'+$#DK.M+';')=0
                        || __mat+='|'+$#DK.M+';';
                           exec('obl_stan','magazyn_stan',DK.M,1,DK.N().MAG)
                        ?};
                        DK.next
                     !};
::                   aktualizacja statusow zamowien
                     {? ND.TYP().P='T'
                     || exec('Rez2Rez','zamsiw_wspolne',1,ND.ref());
                        {? exec('czyMgUprZam','zamsiw_wspolne',ND.MAG)
                        || exec('akt_wgdk','rezerwacje',ND.ref)
                        |? ND.TYP().ZLEC='T' & ND.TYP().WYR='T'
                        || _txt:='Magazyn %1 (przychód z produkcji) nie jest uprawniony do rezerwacji.'
                             ' Rezerwacje nie zostały zaktualizowane.'@[ND.MAG().SYM];
                           {? _group
                           || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
                           || exec('add_kom','#message',_txt,4)
                           ?}
                        ?};
::                      rezerwacje materialow z projektow
:: DRO:[rr] nie przeniesiono
::                        exec('rez_auto','skid_prm',ND.MAG,__mat,__no_stat)
                        1
                     ?}
                  ?}
               ?};
               {? __md_oddz<>''
               ||
                  ST.ODDZ:=ST.ODDZ_KOD:=__st_oddz;
                  exec('open','open_tab',ST.ODDZ,2-$ST.AR)
               ?}
            ||
               {? ND.clear();ND.seek(_ref_old)
               || {? ND.STAT_REJ='Z'
                  ||
::                     exec('add_kom','#message','Zakończono rejestrację dokumentu %1.'@[ND.SYM],1);
                     {? _group
                     || _txt:='Zakończono rejestrację dokumentu.';
                        exec('add_kom','#message',ND.SYM,1,gsub(_txt,'\n',' '))
                     ?};
                     {? ND.TYP().P='T' & ND.TYP().Z='T' & ND.TYP().DN<>'N' & ND.F='T' & exec('spr_zz','opakow')
                     || _txt:='Do pozycji dokumentu wygenerowano automatycznie pozycje opakowań zwrotnych.'@;
                        {? _group
                        || exec('add_kom','#message',ND.SYM,1,gsub(_txt,'\n',' '))
                        || exec('add_kom','#message',_txt,4);
                           exec('add_kom','#message','Uwaga. Możliwa jest modyfikacja pozycji opakowań '
                                                 'po wycofaniu akceptacji dokumentu.'@,4)
                        ?}
                     ?}
                  ?};
                  __mat:='';
                  DK.index('DOKMAG');
                  DK.prefix(ND.ref());
                  {? DK.first
                  || {!
                     |? {? __mat*('|'+$#DK.M+';')=0
                        || __mat+='|'+$#DK.M+';';
                           exec('obl_stan','magazyn_stan',DK.M,1,DK.N().MAG)
                        ?};
                        DK.next
                     !};
::                   aktualizacja statusow zamowien
                     {? ND.TYP().P='T'
                     || exec('Rez2Rez','zamsiw_wspolne',1,ND.ref());
                        {? exec('czyMgUprZam','zamsiw_wspolne',ND.MAG)
                        || exec('akt_wgdk','rezerwacje',ND.ref)
                        |? ND.TYP().ZLEC='T' & ND.TYP().WYR='T'
                        || _txt:='Magazyn %1 (przychód z produkcji) nie jest uprawniony do rezerwacji. '
                                 'Rezerwacje nie zostały zaktualizowane.'@[ND.MAG().SYM];
                           {? _group
                           || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
                           || exec('add_kom','#message',_txt,4)
                           ?}
                        ?};
::                      rezerwacje materialow z projektow
:: DRO:[rr] nie przeniesiono
::                        exec('rez_auto','skid_prm',ND.MAG,__mat,1)
                        1
                     ?}
                  ?}
               ?}
            ?}
         !};
::       aktualizacja statusow zamowien
         {? ND.sel_size=0 || {? __no_stat=1 & _e=0 || exec('odt_zk_tymc','zamsiw_wspolne') ?} ?}
      |? __nr0
      ||
::       usuwanie numeru
         numer:=__wybnr1;
         oldnumer:=1;
         exec('nr_old','numery')
      ?}
   ?};
   ND.clear;
   {? ND.seek(_ref_old)
   ||
::    archiwizacja cech dostawy
      {? ND.STAT_REJ<>'N' & (1+ND.MAG().TYP)='D' || exec('atrnarch','mat_atr',ND.ref(),1) ?};
      {? _c || ND.r_unlock() ?}
   ?};
:: DRO:[rr] nie przeniesiono
   {? ND.sel_size=0 & (_b='T' | POM.PAR5='X') || exec('akcadok','magdok_nag',_f) ?}
?};
DK_C.cntx_pop();
DK.cntx_pop();
ND.cntx_pop();
ND.get();
VAR_DEL.delete('__akcept','__lp','__czy_c_sp','__cena_e','__cena','__ktm','__spr_cene','__txt','__mat','__wyb_nr'
   ,'__gen_mm','__typ_mm','__l_log','__no_stat','__buf_kom','__nr0','__Real','__wybnr1','__znrt','__coscn');
VAR_DEL.delete('__st_oddz','__md_oddz','__dk_m','__dk_il','__dk_n_d','__dk_dk_c','__dk_prdk','__dk_war','__dk_tw'
   ,'__nd_md','__nd_kk','__nd_d','__nd_kh','__nd_ref','__nd_nam','__nd_o','__nd_zl','__nd_wyd','__tmgo','__bufpal'
   ,'__nd_t','__nd_p');
VAR_DEL.delete('__aktzkp');
_wyn


\akcadok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: akceptacja dokumentow (funkcja grupa po)
::   WE: _a - wyswietla tabele komunikatow 1-tak, 0-nie
::  OLD: \akcadok/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?}  || _a:=1 ?};

{? var_pres('__zam')>100 || exec('odt_zk_tymc','zamsiw_wspolne') ?};
{? _a || exec('end_kom','#message') ?};
1


\sprakcmi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdzenie czy zaakceptowano dokument PRC- przed PRC+
::   WY: 1-tak 0-nie
::  OLD: \sprakcmi/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? ND.TYP().INW='E' & ND.TYP().P='T'
|| _mag:=ND.MAG; _dt:=ND.D; _nr:=ND.NR;
   INN.cntx_psh();
   INP.cntx_psh();
   INX.cntx_psh();
   INY.cntx_psh();
   INN.use('inw_nwyc');
   INP.use('inw_pwyc');
   INX.use('inw_xwyc');
   INY.use('inw_ywyc');
   INN.index('INDP');
   INN.prefix();
   {? INN.find_key(_mag,_dt,_nr) || _wyn:=exec('FindAndGet','#table',ND,INN.INR_R,,"ND.Z")='T' ?};
   INN.cntx_pop();
   INP.cntx_pop();
   INX.cntx_pop();
   INY.cntx_pop()
?};
_wyn


\klim_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: kontrola limitu kredytowego podczas akceptacji dokumentu magazynowego - ND w buforze
::   WE: _a - czy trwa realizacja zamowienia
::   WY: 1/0 czy kontynuowac akceptacje
::  OLD: \klim_akc/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
_czy_akc:=1;
_klim:=null;
_dok_zam:=_dok_mag:='N';
KH_DOD.KLIM:=__War_f('KH_DOD','KLIM',ND.KH);
{? KH_DOD.KLIM<>null
||
   _klim:=KH_DOD.KLIM;
   _dok_zam:=KH_DOD.KLIM().ZAM_SUM;
   _dok_mag:=KH_DOD.KLIM().DOK_SUM
||
   _klim:=ND.KH().GRKH().KLIM;
   _dok_zam:=ND.KH().GRKH().KLIM().ZAM_SUM;
   _dok_mag:=ND.KH().GRKH().KLIM().DOK_SUM
?};
:: SUM.BRUTTO oblicza wczesniej FD.DK_SUM(ND.ref())
:: wartosc biezacego dokumentu jest uwzgledniana gdy zlicza dokumenty mag. lub trwa realizacja i ma zliczac zamowienia
_cur_brutto:={? _dok_mag='T' | (_dok_zam='T' & _a=1) || SUM.BRUTTO || 0 ?};
_czy_akc:=exec('lim_kred','limit_kredyt',ND.KH,date(),INFO.NAROD,4,_klim,_cur_brutto,0,'nagdo');
_czy_akc


\spr_info_mm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdzenie czy generowac 2 dokument
::   WE: _a - 0/[1] - komunikaty
::   WY: 1/0
::  OLD: \spr_info_mm/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
_czykom:=1;
{? var_pres('_a')=type_of(0)
|| _czykom:=_a
?};

_wyn:=1;

{? var_pres('__mm_utw')>100 || obj_del(__mm_utw) ?};
__mm_utw:=tab_tmp(
   ,'REFERENC','STRING[20]','REFERENCE'
   ,'NR','INTEGER','NR'
   ,'WAR','REAL','WAR'
);
{? ND.MD<>null
||
   _mm_ref:=$ND.ref();
   _mp_name:='nagdo'+ND.MD().ODDZ+(ND.name()+2);
   ND.cntx_psh();
   ND.use(_mp_name);
   ND.index('MM');
   ND.prefix(_mm_ref,_mm_ref);
   {? ND.first()
   ||
      {!
      |?
         __mm_utw.blank();
         __mm_utw.REFERENC:=$ND.ref();
         __mm_utw.NR:=ND.NR;
         __mm_utw.WAR:=ND.WAR;
         __mm_utw.add();
         ND.next()
      !}
   ?};
   ND.cntx_pop()
?};

:: sprawdza typ tworzonego dokumentu
_utw_typ:=ND.TYP().TD;
_utw_afifo:='';
TYPYDOK.cntx_psh();
TYPYDOK.clear;
TYPYDOK.index('TYP');
TYPYDOK.prefix(_utw_typ,_utw_typ);
{? TYPYDOK.first()
|| _utw_afifo:=TYPYDOK.AFIFO;
   __akcept:='N';
   _loop:=__mm_utw.first();
   {!
   |? _loop
   |!
      _mmutwr:=exec('FindAndGet','#table',ND,__mm_utw.REFERENC,,,null());
      {? __akcept='T' & TYPYDOK.DN<>'K' &(1+ND.MD().TYP)='D' & ~exec('ctrl_atr','magdok_wspolne',_mmutwr,1)
      || __akcept:='N';
         {? _czykom
         || exec('add_kom','#message','Należy uzupełnić cechy dostawy dla pozycji dokumentu %1.'@[_utw_typ],4)
         ?}
      ?};
      _loop:=__akcept='T' & __mm_utw.next()
   !}
?};
TYPYDOK.cntx_pop();

:: wybor dostaw dla przychodu kompletu
VAR_DEL.delete('X_Xa','X_Xb');

:: dodano sprawdzenie czy jest to zaznaczony dokument = wowczas brak komunikatow dla rozpisania dostaw
{? ~__mm_utw.first
   & ~ND.sel_mark & _czykom
   & ND.TYP().P='T'
   & {? 'D'*(1+ND.MD().TYP)=1 & _utw_afifo=''
     ||
        _opcja:=FUN.choice('Czy chcesz wybrać stany wg dostaw?\n'@,2,'Tak'@,'Nie'@);
        {? _opcja=1
        ||
::         Tak - rozpisz wg dostaw
           1
        |? _opcja=2
        ||
::         Nie - akceptuj ale bez rozpisywania
           0
        |? _opcja=0
        ||
::         Anuluj - przerwij akceptacje
           _wyn:=0;
           0
        ?}
     ||
        0
     ?}
||
   _wyn:=exec('gen_sklt','material');
   {!
   |?
      {? _wyn=3
      ||
::       nie rozpisano wszystkich dostaw dla skladowych
         exec('add_kom','#message','Zrezygnowano z rozpisania dostaw dla składowych.'@,2);
         _wyn:=0;
         0
      |? _wyn=2
      ||
::       brak odpowiedniej ilosci na ktorejs ze skladowych
         _wyn:=0;
         0
      |? _wyn=0
      || {? FUN.ask('Rezygnacja z zakończenia redakcji dokumentu?'@)
         || _wyn:=0;
            0
         || _wyn:=exec('gen_sklt','material');
            ~_wyn
         ?}
      || ~_wyn
      ?}
   !};
   POM.PAR1:='N'
||
   {? ND.TYP().DN='K'
   || POM.PAR1:={? FUN.ask('Czy analizować strukturę kompletu?'@,,,'nd_analiza_komplet') || 'T' || 'N' ?};
      POM.PAR2:=POM.PAR1
   || POM.PAR1:='N'
   ?}
?};
_wyn


\data_akcept
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: ustawia date i czas akceptacji na biezacym dokumencie magazynowym
::   WE:  _a - akceptacja lub odakceptowanie (T/N)
::        _b - aktualizacja paletowo oddzialowa domyslnie 0
::        _c - 'T'-kompletacja najniższego poziomu
::   WY: czy udalo sie zapisac naglowek
::  OLD: \data_akcept/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
_kpl:={? var_pres('_c')=type_of('') || _c='T' || 0 ?};

_wyn:=0;
_czybpal:=var_pres('__bufpal')>100;
_pd_buf:=exec('get','#params',100700,2)='T';

{? _a='T'
||
   ND.DA:=date();
   ND.TA:=time();
   ND.Z:='T';
   ND.KPL:=_kpl;
   exec('poland_save','jpk_log',0)
||
   ND.DA:=date(0,0,0);
   ND.TA:=time(0,0,0);
   ND.Z:='N';
   ND.KPL:=0
?};

ND.WAR:=exec('dk_sum','magdok_wspolne',ND.ref);
_wyn:=ND.put();
_plus:=ND.TYP().P='T';

{? _wyn
||
   {? ~_plus & (1+ND.MAG().TYP)='D' & ((';FL'*(1+ND.TYP().AFIFO))>1 | ND.MAG().IL='T')
    & ND.MAG().SL='T' & ND.MAG().PAL<>'T'
   || exec('dk_l2sce','magdok_poz',ND.ref())
   ?};
   DK.cntx_psh();
   SC.cntx_psh();

   DK.index('DOKMAG');
   DK.prefix(ND.ref());
   {? DK.first
   || _tmg:=1+ND.MAG().TYP;
      {!
      |?
         {? ND.MAG().SL='T' & ND.TYP().DK<>'T' || exec('dk_l2sl','magazyn_stan',DK.ref(),,,_czybpal,,_b) ?};
         {? ~_plus
         || {? _a<>'T' & _tmg<>'D' & ND.TYP().INW<>'I' || DK.RDK:=0; DK.NDK:=''; DK.put(1) ?};
            exec('update','rezerwacje','DK',DK.ref(),ND.MAG,DK.M,{? _a='T' || 0 || DK.IL ?},DK.SRDK)
         ?};
         {? _plus
         || {? DK.NDK<>''
            || SC.index('SN');
               SC.prefix(ND.MAG,DK.M,DK.RDK,DK.NDK);
               {? SC.first()
               || _da:=ND.DA;
                  _ta:=ND.TA;
                  {? ND.DA=date(0,0,0) & DK.NDK<>'' & DK.RDK<>0 & ~(DK.RDK=(#DK.ref()) & DK.NDK=ref_name(DK.ref()))
                  || _msk:=DK.NDK+3;
                     _rdk:=DK.RDK;
                     SC.cntx_psh();
                     ND.cntx_psh();
                     DK.cntx_psh();
                     ND.use('nagdo'+_msk);
                     DK.use('dokma'+_msk);
                     DK.clear();
                     {? DK.seek(_rdk,)
                     || _da:=DK.N().DA;
                        _ta:=DK.N().TA
                     ?};
                     ND.cntx_pop();
                     DK.cntx_pop();
                     SC.cntx_pop()
                  ?};
                  SC.DA:=_da;
                  SC.TA:=_ta;
                  SC.put()
               ?}
            ?}
         ?};
         {? _pd_buf & DK.ZLIM<>null()
         || ZLIM.cntx_psh();
            ZLIM.use(ref_name(DK.ZLIM));
            ZLIM.clear();
            {? ZLIM.seek(DK.ZLIM) || ZLIM.put(1) ?};
            ZLIM.cntx_pop()
         ?};
         DK.next()
      !}
   ?};
   SC.cntx_pop();
   DK.cntx_pop();
   {? ND.TYP().INW='I'
   || INN.cntx_psh;
      {? INN.find_tab(,{? _plus || 'INP_R' || 'INR_R' ?},,'=',$ND.ref)
      || {? _plus
         || INN.WRM:=ND.WAR
         || INN.WRP:=ND.WAR
         ?};
         INN.put
      ?};
      INN.cntx_pop
   ?}
?};

_wyn


\addnag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: dodaje nagłówek dokumentu magazynowego
::   WE: _a - ref magazynu
::       _b - rok
::       _c - miesiąc
::       _d - ref typu dokumentu
::       _e - 'T'-zaakceptowany 'N'-niezakceptowany
::       [_f] - konto kosztów
::       [_g] - data dokumentu
::       [_h] - ???
::       [_i] - ref kontrahenta
::       [_j] - ref faktury FAKS.ref()
::       [_k] - numer rekordu ND
::       [_l] - maska rekordu ND
::       [_m] - opis
::       [_n] - ref zlecenia
::       [_o] - ref wydziału
::       [_p] - czy dodawać nagłówek oraz blokować numeracje 0 - tak, 1 - nie (wykorzystywane do uzupełniania bufora)
::              -1 dodawać nagłówek i nie wyznaczać numeru
::       [_q] - numer dokumentu 0 - podpowiada numer, >0 - nadaje dokumentowi podany numer
::       [_r] - 1-nadawać numer zgodnie z ustawieniami parametru numeracja tymczasowa w typie dokumentu
::              0-ignorować numeracje tymczasowa np.przy generowaniu zaakceptowanego dokumentu MP
::       [_s] - sposób nadawania numeracji, gdy włączone jest wykorzystywanie wolnych numerów
::              1-wykorzystywać wolne numery
::              0-nie wykorzystywać wolnych numerów (domyślnie)
::       [_t] - godzina dokumentu
::       [_u] - PROJEKTY.ref()
::       [_v] - wygenerowano z z inwentaryzacji/przeceny
::   WY: ref ND lub null()
::  OLD: \FD.ADDNAG/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=6 || {? type_of(_f)<>7 || _f:=null ?} || _f:=null ?};
{? _>=7 || {? _g=~~ || _g:=date(ST.AR+1,1,1) ?} || _g:=date(ST.AR+1,1,1) ?};
{? _>=8 || {? type_of(_h)<>7 || _h:=null ?} || _h:=null ?};
{? _>=9 || {? type_of(_i)<>7 || _i:=null ?} || _i:=null ?};
{? _>=10 || {? type_of(_j)<>7 || _j:=null ?} || _j:=null ?};
{? _>=11 || {? type_of(_k)<>1 || _k:=0 ?} || _k:=0 ?};
{? _>=12 || {? type_of(_l)<>2 || _l:='' ?} || _l:='' ?};
{? _>=13 || {? type_of(_m)<>2 || _m:='' ?} || _m:='' ?};
{? _>=14 || {? type_of(_n)<>7 || _n:=null ?} || _n:=null ?};
{? _>=15 || {? type_of(_o)<>7 || _o:=null ?} || _o:=null ?};
{? _>=16 || {? type_of(_p)<>1 || _p:=0 ?} || _p:=0 ?};
{? _>=17 || {? type_of(_q)<>1 || _q:=0 ?} || _q:=0 ?};
{? _>=18 || {? type_of(_r)<>1 || _r:=1 ?} || _r:=1 ?};
{? _>=19 || {? type_of(_s)<>1 || _s:=0 ?} || _s:=0 ?};
_tim:={? var_pres('_t')=type_of(time()) || _t || time(0,0,0) ?};
{? _>=21 || {? type_of(_u)<>7 || _u:=null() ?} || _u:=null() ?};
{? _>=22 || {? type_of(_v)<>2 || _v:='N' ?} || _v:='N' ?};

_wyn:=null;
{? _p=0 | _p=-1 || ND.cntx_psh() ?};
ND.index('NAGDOK');
ND.prefix(_b,_c,_a,_d);
ND.blank();
ND.MAG:=_a;
ND.AR:=_b;
ND.AM:=_c;
ND.TYP:=_d;
ND.Z:=_e;
{? ND.Z<>'N' || ND.DA:=date(); ND.TA:=time() ?};
ND.KK:=_f;
ND.D:=_g;
ND.T:=_tim;
ND.KH:=_i;
{? (ND.name()+3)=(ref_name(_j)+3) || ND.FAKS:=_j ?};
ND.FAKS_REF:=$ND.FAKS;
{? _k<>0 & _l<>'' || ND.NDSQL:=form(_l)+form(('0'*8)+(-BB.hex(_k)),-8) ?};
ND.O:=_m;
ND.ZL:=_n;
ND.WYD:=_o;
ND.IST_TYP:=exec('nd_ist_typ_bl','magdok_nag');
ND.IST_OKR:=exec('nd_ist_okr_bl','magdok_nag');
{? ND.TYP().P='T' || ND.SPP:='' ?};
:: magazyn konsygancyjny
{? ND.TYP().P='T' & ND.NDSQL<>'' & ND.MAG().COS='T' & ND.KH<>null() || ND.DLAKH:=ND.KH().KOD ?};

PROJEKTY.cntx_psh();TYPYDOK.cntx_psh();PROJTYPY.cntx_psh();
PROJEKTY.prefix();TYPYDOK.prefix();PROJTYPY.prefix();
ND.PROJEKTY:=
{? _u<>null & PROJEKTY.seek(_u) & (ND.TYP().PROJZAKR='Wszystkie' | (4+PROJEKTY.T().R)=(4+ND.TYP().PROJZAKR))
|| _u
|| null
?};
PROJEKTY.cntx_pop();TYPYDOK.cntx_pop();PROJTYPY.cntx_pop();
ND.INN:=_v;

{? _p=0 | _p=-1
||
   POM.TAB:='ND';
   POM.TYPDOK:={? ND.TYP<>null || ND.TYP().KOD || '' ?};
   POM.NRT:={? ND.TYP<>null & _r=1 || ND.TYP().NRT || 0 ?};

   {? ND.add()
   || _numadd:=1;
      {? _p=0
      ||
         {? _q=0 || ND.NR:=exec('numer_new','numery',{? _s || 'N' || 'PACZKA' ?}) || ND.NR:=_q ?};
         _numadd:=exec('znak','numery','ND')
      ?};
      {? _numadd & ND.put()
      ||
         exec('opnf_put','opakow',$ND.ref(),$ND.FAKS);
         _wyn:=ND.ref
      ||
         {? do_state()<2 & ~Plugin.run('BEFORE_DELTAB_001',ND.ref()) & do_state() || undo() ?};
         numer:=ND.NR;
         oldnumer:=1;
         exec('nr_old','numery');
         ND.del();
         _wyn:=0
      ?}
   ?};
   ND.cntx_pop()
?};
_wyn


\zl_po_r11
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Po redakcji pola zlecenie nadrzedne na naglowku dokumentu magazynowego.
::  OLD: \zl_po_r11/zlecenia.fml
::----------------------------------------------------------------------------------------------------------------------
_wynik:=1;
_prod:=exec('tte_lic','tte');
_sym:=ND.ZL().SYM;

{? ZMSLAPP.ZL11<>''
|| ZL.cntx_psh();
   ZL.clear();
   ZL.blank(1);
   ZL.index('HIDDEN');
   _wynik:={? ((' '+exec('get','#params',500701,2,null()))*(' '+ND.TYP().T+' '))>0
           ||
::            Jeżeli dokument RP to możliwe podzlecenia, sprawdzany dodatkowo znacznik ZL.RP
              {? _prod='T'
              || ZL.find_tab(0,'SYM',,'=',_sym,'RP',,'=','T','HIDDEN',,'=','N','STAN',,'=','O')
              || ZL.find_tab(0,'SYM',,'=',_sym,'RP',,'=','T','HIDDEN',,'=','N','STAN',,'=','O','TYP','TYP','=','~ML')
              ?}
           || {? _prod='T'
              || ZL.find_tab(0,'SYM',,'=',ZMSLAPP.ZL11,'HIDDEN',,'=','N','STAN',,'=','O')
              || ZL.find_tab(0,'SYM',,'=',ZMSLAPP.ZL11,'HIDDEN',,'=','N','STAN',,'=','O','TYP','TYP','=','~ML')
              ?}
           ?};
   {? _wynik=0
   || FUN.emsg('Brak w słowniku otwartego zlecenia o podanym symbolu.'@)
   || {? ND.TYP().ZLEC='T' & ND.TYP().WYR='T' & ZL.MG<>null() & ZL.MG<>ND.MAG
      || FUN.info('Magazyn wskazany w zleceniu (%1) różny od bieżącego magazynu.'@[ZL.MG().SYM]);
         _wynik:=0
      |?  ND.TYP().ZLEC='T' & ND.TYP().WYR='T' & exec('mag_allowed_rp','zl_limit',ZL.ref(),ND.MAG,1)=0
      || _wynik:=0
      |?  ND.TYP().ZLEC='T' & ND.TYP().WYR='N' & ND.TYP().P='N' & exec('mag_allowed_rw','zl_limit',ZL.ref(),ND.MAG,,1)=0
      || _wynik:=0
      |? ZL.OD>ND.D
      || FUN.info('Zlecenie powołane jest z datą późniejszą niż data dokumentu.'@);
         _wynik:=0
      || ND.ZL:=ZL.ref();
         {? ND.KK=null() || ND.KK:=ZL.KK ?}
      ?};

::    Dla zlecenia zlozonego ze zleceniami zaleznymi dla dokumentu raportujacego produkt
::    ustawic pole ND.ZL wartoscia glownego podzlecenia
      {? ND.TYP().ZLEC='T' & ND.TYP().WYR='T' & ZL.RODZAJ='Z'
      ||
         _mainzlec:=exec('main_podzlec','zl_link',ZL.ref());
         ZMSLAPP.ZL12:=exec('FindAndGet','#table',ZL,#_mainzlec,ref_name(_mainzlec),"SYM",'');
         ND.ZL:=exec('FindAndGet','#table',ZL,#_mainzlec,ref_name(_mainzlec),"ref()",null())
      ?};

      {? _prod='N'
      || ND.WYD:=ZL.JORG;
         {? ND.KK=null() || ND.KK:=ZL.KK ?}
      ?}
   ?};

   ZL.cntx_pop()
|| ND.ZL:=null()
?};
{? ND.ZL<>null & ND.WYD=null || ND.WYD:=ND.ZL().JORG ?};
win_disp();
{? ND.ZL<>null & ND.MAG().PAL='T' & ND.TYP().P='N' & ND.TYP().ZLEC='T'
|| DK.index('DOKMAG');
   DK.prefix(ND.ref());
   {? DK.first() || {! |? DK.ZL:=ND.ZL; DK.WYD:=ND.WYD; DK.put(1); DK.next() !} ?}
?};
:: Jak dokument przyjęcia z kooperacji, to sprawdzenie czy da się podpowiedzieć kontrahenta na podstawie
:: wydanych dokumentów
{? ND.ZL<>null() & ND.KH=null() & ND.TYP().KOOP='T' & ND.TYP().P='N'
|| ND.KH:=exec('kh4zlec_get','zl_koop',0);
   {? ND.KH<>null()
   || exec('ae_n_kh','magdok_nag',1)
   ?}
?};
_wynik


\zl_po_r12
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Po redakcji pola zlecenie nadrzedne na naglowku dokumentu magazynowego.
::  OLD: \zl_po_r12/zlecenia.fml
::----------------------------------------------------------------------------------------------------------------------
_wynik:=0;
{? ZMSLAPP.ZL12=''
|| {? ND.ZL().GENLIM='N'
   || _wynik:=1
   || FUN.emsg('Proszę wypełnić pole.'@);
      _wynik:=0
   ?}
|| ZL.cntx_psh();
   ZL.clear();
   ZL.blank(1);
   ZL.index('STAN');
   _wynik:=ZL.find_tab(0,'SYM',,'=',ZMSLAPP.ZL12,'HIDDEN',,'=','N','STAN',,'=','O','NRNZL',,'<>',0);
   {? _wynik=0
   || FUN.emsg('Niepoprawny symbol zlecenia.'@)
   || ND.ZL:=ZL.ref();
      {? ND.KK=null || ND.KK:=ZL.KK ?}
   ?};
   ZL.cntx_pop();
   win_disp()
?};
_wynik


\pr_stmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: przed redakcja pola ST.MAG_SYM
::  OLD: \pr_stmag/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('set_efld_opt_st','magdok_nag');
{? (5+cur_tab.name())='nagdo' & (1+menu_txt())<>'D'
|| (ND.MD=null & ND.TYP().TD<>'') | exec('FindInSet','#table','DK','DOKMAG',ND.ref())=null
|| 1
?}


\f3_mag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wyswietla uprawnione magazyny
::  OLD: \f3_mag/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_czy_mm:=(5+cur_tab.name())='nagdo' & ND.TYP().TD<>'';
_czymst:=(3+cur_tab.name())='mat';
_par:=exec('get','#params',600401,2)='T';
_only:=ND.MAG().IL='T';
{? _czy_mm
|| MG.cntx_psh();
   MG.f_clear();
   MG.index('MAGAZYNY');
:: szuka biezacej
   _mg_ref:=null;
   MG.prefix(ST.MAG_SYM,ST.MAG_SYM);
   {? MG.first() || _mg_ref:=MG.ref() ?};
   {? ND.TYP().P='T' | ND.TYP().DN='D' | exec('get','#params',600400,2)='N'
   ||
::    kompletacja/dekompletacja dla oddzialu lub przesuniecia w biezacym oddziale
      {? _par
      || MG.index('KOOP');
         MG.prefix(ST.ODDZ_KOD,'N')
      |? ~_only
      || MG.index('IL');
         MG.prefix('N','N',ST.ODDZ_KOD)
      || MG.index('IL');
         MG.prefix('T','N',ST.ODDZ_KOD)
      ?}
   ||
::    przesuniecie miedzy oddzialami
      {? _par
      || MG.index('KOOPALL');
         MG.prefix('N')
      |? ~_only
      || MG.index('ILALL');
         MG.prefix('N','N')
      || MG.index('ILALL');
         MG.prefix('T','N')
      ?}
   ?};
   MG.win_sel('SLO');
   _ok:=MG.select(,MG.seek(_mg_ref));
   {? _ok || ST.MAG_SYM:=MG.SYM ?};
   MG.cntx_pop();
   {? _ok & exec('ae_mag','magdok_nag') || ST.MAG_SYM ?}
|? _czymst
|| MG.cntx_psh();
   MG.index('MAGAZYNY');
   MG.find_key(ST.MAG_SYM,ST.MAG_SYM);
   MG.win_sel('SLO');
   _ok:=MG.select(,1);
   {? _ok || ST.MAG_SYM:=MG.SYM ?};
   MG.cntx_pop()
|? exec('sel_upr','users','MG','SYM')
|| ST.MAG_SYM:=USERS_UP.MG().SYM;
   {? exec('ae_mag','magdok_nag') || ST.MAG_SYM ?}
?}


\ae_mag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: po redakcji magazynu - sprawdza zgodnosc z uprawnieniami
::   WY: 1/0
::  OLD: \ae_mag/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_czy_mm:=(5+cur_tab.name())='nagdo' & ND.TYP().TD<>'';
_czymst:=(3+cur_tab.name())='mat';
_par:=exec('get','#params',600401,2)='T';
_only1:={? _par || 0 || ND.MAG().IL='T' ?};
_only2:=0;

_wyn:=0;
_mg_ref:=null;
_skl:='N';
:: odszukuje rekord zgodny z kluczem redagowanego pola
{? ST.MAG_SYM<>''
||
   MG.cntx_psh();
   MG.index('MAGAZYNY');
   MG.prefix(ST.MAG_SYM);
   {? MG.first()
   ||
      _wyn:=1;
      _mg_ref:=MG.ref();
      _skl:=MG.SKL;
      _koop:=MG.KOOP;
      ST.MAG_SYM:=MG.SYM;
      _only2:={? _par || 0 || MG.IL='T' ?};
      win_disp
   || FUN.info('Nie znaleziono magazynu: %1'@[ST.MAG_SYM])
   ?};
   MG.cntx_pop()
|| {? cur_tab.name()='okruzy'
   || _wyn:=1
   || {? _czymst
      || _wyn:=1
      || FUN.info('Niewypełnione pole.'@)
      ?}
   ?}
?};

:: kontrola magazynu dla przesuniec miedzymagazynowych
{? 5+cur_tab.name()='nagdo'
||
   {? ND.TYP().TD<>'' & ND.TYP().P='N' & ND.TYP().DN<>'D' & _mg_ref=ST.MAG
   || _wyn:=0;
      FUN.info('Nie można tworzyć przesunięć na ten sam magazyn: %1'@[ST.MAG_SYM])
   ?};
   {? ND.TYP().TD<>'' & ND.TYP().P='N' & ND.TYP().DN<>'D' & _only1<>_only2
   || _wyn:=0;
      FUN.info('Nie można tworzyć przesunięć pomiędzy magazynem wartościowym i ilościowym.'@)
   ?};
:: kontrola inwentaryzacji na innym magazynie
   {? _wyn
   || _wyn:=exec('sprd_inw','magdok_wspolne',ND.D
             ,exec('FindInSet','#table','MG','MAGAZYNY',ST.MAG_SYM,ST.MAG_SYM),ND.TYP().P='T',,,ND.T);
      ND.MD:=exec('FindInSet','#table','MG','MAGAZYNY',ST.MAG_SYM,ST.MAG_SYM);
      _wyn:=1
   ?};
:: kontrola przesunięć na magazyn typu sklad celny
   {? _wyn & ND.TYP().TD<>'' & ND.TYP().P='N' & _skl='T'
   || _wyn:=0;
      FUN.info('Przesunięcia na magazyn typu skład celny są zabronione.'@)
   ?};
:: kontrola przesunięć na magazyn typu sklad celny
   {? _wyn & ND.TYP().TD<>'' & ND.TYP().P='N' & _koop='T'
   || _wyn:=0;
      FUN.info('Przesunięcia na magazyn typu kooperacja są zabronione.'@)
   ?};
:: kontrola przesunięć kompletujących na magazyn typu sklad celny
   {? _wyn & ND.TYP().TD<>'' & ND.TYP().P='T' & _skl='T' & ST.MAG().SKL='N'
   || _wyn:=0;
      FUN.info('Pobrania z magazynu skład celny zabronione.'@)
   ?};
:: kontrola przesunięć kompletujących na magazyn typu kooperacja
   {? _wyn & ND.TYP().TD<>'' & ND.TYP().P='T' & _koop='T' & ST.MAG().KOOP='N'
   || _wyn:=0;
      FUN.info('Pobrania z magazynu kooperacyjnego zabronione.'@)
   ?};
:: kontrola zamkniecia magazynu drugiego
   {? _mg_ref<>null & ND.TYP().P='N' & exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,_mg_ref)=0
   || _wyn:=0;
      FUN.info('Magazyn %1 jest zamknięty.\nZabronione utworzenie na nim dokumentu typu %2.'@[ST.MAG_SYM,ND.TYP().TD])
   ?};
   {? _wyn
   || EANX.MG:=_mg_ref;
      EANX.WYLZAL:={? EANX.MG().MWS='T' || 'N' || 'T' ?}
   ?}
?};

:: kontrola uprawnien
:: moze sie skomplikowac (jak dla STS) dlatego zostawiam osobno
{? _wyn=1 & ~_czy_mm & ST.MAG_SYM<>'' & ~_czymst
|| _wyn:=exec('spr_upr','users','MG',_mg_ref)
?};

:: ustawia zmienne (funkcja i widoki w roznych oknach, innych niz parametry pracy)
{? _wyn=1 & cur_tab.name()<>'okruzy'
||
   {? form(cur_tab.name())='mat_min'
   || MST.MG:=_mg_ref
   ?};
   win_disp()
?};

:: kontrola uprawnien dla stanow kontrolnych
{? _wyn=1 & cur_tab(1,1)=MST & ST.MAG_SYM=''
||
   MST.MG:=null
?};

{? _wyn & ND.TYP().TD<>''
|| {? ND.MD<>null() & ND.MD().COS='T'
   || {? ND.MD().DLAKH<>null()
      || ND.KH:=ND.MD().DLAKH;
         ND.DLAKH:=ND.KH().KOD
      ?};
      ND.efld_opt(ND.win_edit('?'),'mark=1',,'DLAKH')
   || ND.KH:=null();
      ND.DLAKH:='';
      ND.efld_opt(ND.win_edit('?'),'mark=0',,'DLAKH')
   ?}
?};

_wyn


\wyc_dok_wywo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: akcja wycofaj akceptacje dokumentu magazynowego
::       wywołanie wycofania jako czynności LMG_MAG_EWMG zamiast bezpośrednio jako zamiast "wyc_dok"
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_EWMG';
_params.UIDREF:=ND.uidref();
_params.AKCJA:='Wycofaj';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ND',ND.ref());

exec('mp_run','#b__box',_params)


\wyc_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: akcja wycofaj akceptacje dokumentu magazynowego
::   WE: [_a] - czy pytanie o wycofanie (0/1)
::       [_b] - czy wyswietlac drzewko z informacjami (T/N) - domyslnie T
::       [_c] - czy odblokowywac naglowek dokumentu 1-domyslnie=tak 0-nie
::       [_d] - inicjowac tabele komunikatow 1-domyslnie=tak, 0-nie
::       [_e] - rodzaj wycofania 1-zakończenie 2-akceptacja 0-brak informacji (domyślnie)
::   WY: (0/1) czy wycofano akceptacje
::  OLD: \wyc_dok/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? _>=2 || {? type_of(_b)<>2 || _b:='T' ?} || _b:='T' ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=1 ?} || _d:=1 ?};
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};

_lmg_act:={? ND.MAG().KOOP='T'
          || {? TYPYDOK.P='T' || 'TTE_WYK_DKOW' || 'TTE_WYK_DKOP' ?}
          || {? TYPYDOK.P='T' || 'LMG_MAG_DAPZ' || 'LMG_MAG_DWYD' ?}
          ?};
_upr:=exec('chk_EndOrAcc','#b__box',_lmg_act,'LMG_MAG_EWMG');
_notkor:=0;

POM.PAR2:='';
:: wlaczenie tabeli komunikatow
{? ND.sel_size=0 & _d=1 || exec('ini_kom','#message','Informacje o wycofaniu dokumentów'@) ?};
__kom_gr:=ND.SYM+', magazyn: '+ND.MAG().SYM;
__lp:=0;

VAR_DEL.delete('__bufpal');

__bufpal:=tab_tmp(1,'PAL','STRING[16]','');

VAR_DEL.delete('__aktzkp');

__aktzkp:=tab_tmp(1,'MAT','STRING[16]',''
           ,'NRK','INTEGER',''
           ,'ILR','REAL','');

DK.cntx_psh();
_wyn:=0;
_wyc_dok:=1;
_ok:=1;
_war2bez:=0;
ND.get();
_recplug:=ND.STAT_REJ;
_stat_rej:=ND.STAT_REJ;
{? ND.STAT_REJ<>'Z'
|| _kom:='Wycofanie akceptacji niemożliwe.'@;
   _kom2:='akceptację'@
|| _kom:='Wycofanie zakończenia redakcji niemożliwe.'@ ;
   _kom2:='zakończenie redakcji'@
?};
{? exec('blok_nd','magdok_nag',{? ND.sel_size=0 || 'T' || 'N' ?})=0
||
   _ok:=0
|? ND.ZAK='T'
||
   exec('add_kom','#message','Dokument jest zaksięgowany. '@+_kom,2,,__lp+=1);
   _ok:=0
|? ND.KOR='T'
||
   exec('add_kom','#message','Dokument był korygowany. '@+_kom,2,,__lp+=1);
   _ok:=0
|? ND.STAT_REJ='N'
||
   exec('add_kom','#message','Dokument nie jest zaakceptowany.'@,4,,__lp+=1);
   _ok:=0
|? exec('czy_z_ok','okresy',1,1,ND.D~1,ND.D~2,ND.MAG)=0
||
   _ok:=0
|? ND.INTRA='T'
||
   exec('add_kom','#message','Dokument uwzlgędniony w deklaracji Intrastat. '@+_kom,2,,__lp+=1);
   _ok:=0
|? ND.EDI_W='T'
||
   exec('add_kom','#message','Na podstawie dokumentu utworzono komunikat EDI. '@+_kom,2,,__lp+=1);
   _ok:=0
|? ND.TYP().P='T' & ~(ND.TYP().DK='T' & ND.TYP().Z='T') & (_war2bez:=exec('sprpozdk','magdok_nag',ND.ref()); ~_war2bez)
|| exec('add_kom','#message',_kom,2,,__lp+=1);
   _ok:=0
|? ND.TYP().P<>'T' & ND.MD<>null() & ND.TYP().TD<>''
 & (ND.cntx_psh();
    _mp:=exec('FindInSet','#table','ND','MM',$ND.ref(),,,1,,null());
    {? _mp<>null() & exec('FindAndGet','#table',ND,_mp,,"(';ZA'*STAT_REJ)>1",0)
    || _war2bez:=exec('sprpozdk','magdok_nag',_mp,1)
    || _war2bez:=1
    ?};
    ND.cntx_pop();
   ~_war2bez)
|| exec('add_kom','#message',_kom,2,,__lp+=1);
   _ok:=0
|? exec('chk_wyc','magdok_wspolne',ND.D,,,ND.T,ND.MAG)=0
||
   exec('add_kom','#message'
        ,'W systemie jest niezamknięty arkusz inwentaryzacyjny z datą otwarcia późniejszą lub równą niż data dokumentu.'@
        ,4,,__lp+=1);
   exec('add_kom','#message',_kom,2,,__lp+=1);
   _ok:=0
|? ~(ND.INN='T' & ND.TYP().INW='I')
 & exec('chk_wyc','magdok_wspolne',ND.D,1
    ,exec('FindInSet','#table','DK','DOKMAG',ND.ref(),,"DK.M",,,null()),ND.T,ND.MAG)=0
||
   exec('add_kom','#message'
        ,'W systemie jest zamknięty arkusz inwentaryzacyjny z datą późniejszą lub równą niż data dokumentu.'@
        ,4,,__lp+=1);
   exec('add_kom','#message',_kom,2,,__lp+=1);
   _ok:=0
|? exec('spr_dkin','magdok_wspolne',ND.ref())=0
||
   exec('add_kom','#message','Pozycja dokumentu jest powiązana z arkuszem inwentaryzacyjnym.'@,4,,__lp+=1);
   exec('add_kom','#message',_kom,2,,__lp+=1);
   _ok:=0
|? ND.MAG().PAL='T' & ~exec('niedepal','magdok_palety',ND.ref())
||
   exec('add_kom','#message','Pozycja dokumentu zawiera paletę zdepaletyzowaną.'@,4,,__lp+=1);
   exec('add_kom','#message',_kom,2,,__lp+=1);
   _ok:=0
|? ND.MAG().PAL='T' & exec('palINarch','magdok_palety',ND.ref())
||
   exec('add_kom','#message','Pozycja dokumentu zawiera zarchiwizowaną paletę.'@,4,,__lp+=1);
   exec('add_kom','#message',_kom,2,,__lp+=1);
   _ok:=0
|? ND.MAG().PAL='T' & exec('palROZnext','magdok_palety',ND.ref())
||
   exec('add_kom','#message'
    ,'Pozycja dokumentu ma wydanie bez rozpakowania, a rozpakowana paleta w późniejszych dokumentach.'@,4,,__lp+=1);
   exec('add_kom','#message',_kom,2,,__lp+=1);
   _ok:=0
|? ((_opc:=exec('sprprzec','magazyn_przec',ND.MAG,ND.D,null(),ND.T,
   {? ND.INN='T' & ND.TYP().INW='E' || $ND.ref() || '' ?}));
    {? (_opc=1 | _opc=2) & ~(ND.INN='T' & ND.TYP().INW='E') || ~exec('sprmdatn','magdok_wspolne',ND.ref()) || _opc ?})
||
   exec('add_kom','#message','Do daty dokumentu wprowadzono przecenę. '@+_kom,2,,__lp+=1);
   _ok:=0
|? ND.MD<>null() & ((_opc:=exec('sprprzec','magazyn_przec',ND.MD,ND.D,null(),ND.T));
    {? (_opc=1 | _opc=2) || ~exec('sprmdatn','magdok_wspolne',ND.ref()) || _opc ?})
||
   exec('add_kom','#message','W magazynie %1 do daty dokumentu wprowadzono przecenę. '@[ND.MD().SYM]+_kom,2,,__lp+=1);
   _ok:=0
|? ND.INN='T' & ND.TYP().INW='E' & _e<>2 & (_prc:=exec('sprprcnd','magdok_wspolne'))>0
|| {? _prc=2
   || exec('add_kom','#message','Dokument przecen przychodowy jest zakończony. Musi najpierw zostać wycofany. '@+_kom,2,,__lp+=1)
   |? _prc=4
   || exec('add_kom','#message','Dokument przecen przychodowy jest zaakceptowany. Musi najpierw zostać wycofany. '@+_kom,2,,__lp+=1)
   || exec('add_kom','#message','Po zaakceptowaniu dokumetu wystawiono już dokumenty przychodowe. '@+_kom
       ,2,,__lp+=1)
   ?};
   _ok:=0
?};
_prod:=exec('tte_lic','tte');
_pdok:={? _prod='T' &
         (' '+exec('get','#params',500701,2,null()))*(' '+ND.TYP().T+' ')>0 |
         exec('is_usluga_typ','zl_uslugi',ND.TYP)
       || 1
       || 0
       ?};

:: sprawdzenie powiazania z zakupami
{? ND.TYP().DK<>'T' & ND.TYP().P='T' & (_opc:=exec('sprdk2fp','magdok_wspolne',ND.ref(),'Z',1); _opc=0 | _opc=3)
|| exec('add_kom','#message','Dokument powiązany z fakturą zakupową. '@+_kom,2,,__lp+=1);
   _ok:=0
?};
{? ND.TYP().DK<>'T' & ND.TYP().P='T' & ND.TYP().UE='T' & (_opc:=exec('sprdk2fp','magdok_wspolne',ND.ref(),'E',1); _opc=0 | _opc=3)
|| exec('add_kom','#message','Dokument powiązany z fakturą wewnętrzną. '@+_kom,2,,__lp+=1);
   _ok:=0
?};
{? ND.MAG().PAL='T' & ND.MD<>null & ND.MD().PAL='T' & ~exec('czyp2dok','magdok_palety',ND.ref(),1)
|| _ok:=0
?};

:: sprawdzenie powiazania z kooperacja
{? _prod='T' & ND.TYP().KOOP='T' & exec('sprdk2zgp','zl_guide',ND.ref())
|| exec('add_kom','#message','Dokument powiązany z pozycją przewodnika. '@+_kom,2,,__lp+=1);
   _ok:=0
?};

:: sprawdzenie powiazania z kooperacja - powiazanie robocizny z dokumentami RP
{? _prod='T' & ND.TYP().KOOP='T' & ND.TYP().P='N' & exec('chk_nd_zlnd','zl_koop',ND.ref())=0
|| exec('add_kom','#message','Należy najpierw usunąć dokumenty powiązane. '@+_kom,2,,__lp+=1);
   _ok:=0
?};

:: sprawdzenie powiązania z reklamacją
{? (_rek:=exec('dokWITHrek','reklamacje',ND.uidref()); _rek<>'')
|| {? 1+_rek='S'
   || exec('add_kom','#message','Dokument powiązany z reklamacją klienta %1. '@[2-_rek]+_kom,2,,__lp+=1)
   || exec('add_kom','#message','Dokument powiązany z reklamacją dostaw %1. '@[2-_rek]+_kom,2,,__lp+=1)
   ?};
   _ok:=0
?};

{? _ok & (_ko:=exec('mozna_wyc_dost','statexam',ND.ref()))
|| _txt:='';
   {? (_ko=1 | _ko=3)
   || _txt+='zmieniano status dostawy'@;
      {? exec('get','#params',8801,2,OPERATOR.USER)<>'T' || _ok:=0 ?}
   ?};
   {? (_ko=2 | _ko=3)
   || _txt+={? _txt='' || '' || ', ' ?}+'dostawa powiązana z badaniem'@;
      {? ~exec('chk_role','#b__box',OPERATOR.USER,'LMG_BAD_DWYK') || _ok:=0 ?}
   ?};
   _txt:='Uwaga: '+_txt;
   {? ~_ok || _txt+='. '+_kom ?};
   exec('add_kom','#message',_txt,{? _ok || 4 || 2 ?},,__lp+=1)
?};

{? (_ok=1 & ND.TYP().TD<>'') | (_ok=1 & _prod='T' & _pdok=1)
||
   _n_utw:=tab_tmp(
      ,'REFERENC','STRING[20]','REFERENCE'
      ,'NR','INTEGER','NR'
      ,'SYM','STRING[20]','SYM'
      ,'ZAK','STRING[1]','ZAK'
      ,'MAG','STRING[8]','MAG'
   );
   _jestnd:=0;
   {? ND.MD<>null() |
      (' '+exec('get','#params',500701,2,null()))*(' '+ND.TYP().T+' ')<>0 |
      exec('is_usluga_typ','zl_uslugi',ND.TYP)
   || _mm_ref:=$ND.ref();
      _mp_name:='nagdo'+{? ND.MD=null() || ND.ODDZ || ND.MD().ODDZ ?}+(ND.name()+2);
      ND.cntx_psh();
      ND.use(_mp_name);
      ND.index('MM');
      ND.prefix(_mm_ref,_mm_ref);
      {? _jestnd:=ND.first()
      ||
         {!
         |?
            _n_utw.blank();
            _n_utw.REFERENC:=$ND.ref();
            _n_utw.NR:=ND.NR;
            _n_utw.SYM:=ND.SYM;
            _n_utw.ZAK:=ND.ZAK;
            _n_utw.MAG:=ND.MAG().SYM;
            _n_utw.add();
            ND.next()
         !}
      ?};
      ND.cntx_pop()
   ?};

   _nr:=0;
   _sym:='';
   {? _n_utw.first() || _nr:=_n_utw.NR; _sym:=_n_utw.SYM ?};
   {? _jestnd>0
   ||
      {? exec('get','#params',600000,2)='N'
      || _ok:=0;
         exec('add_kom','#message','Wycofywany dokument %1 utworzył'@[ND.SYM],7,,__lp+=1);
         exec('add_kom','#message','dokument %1 nr %2 symbol %3'@[ND.TYP().TD,$_nr,_sym],7,,__lp+=1);
         exec('add_kom','#message','w magazynie %1.'@[ND.MD().SYM],7,,__lp+=1);
         exec('add_kom','#message','Parametr systemu nie pozwala usunąć takiego dokumentu.'@,4,,__lp+=1);
         exec('add_kom','#message',_kom,2,,__lp+=1)
      |? _n_utw.ZAK='T'
      || _ok:=0;
         exec('add_kom','#message','Wycofywany dokument %1 utworzył'@[ND.SYM],7,,__lp+=1);
         exec('add_kom','#message','zaksięgowany dokument %1 nr %2 symbol %3'@[ND.TYP().TD,$_nr,_sym],7,,__lp+=1);
         exec('add_kom','#message','w magazynie %1.'@[ND.MD().SYM],7,,__lp+=1);
         exec('add_kom','#message',_kom,2,,__lp+=1)
      ||
         __st_oddz:='';
         {? ST.ODDZ<>ND.MD().ODDZ || __st_oddz:=ST.ODDZ; ST.ODDZ:=ND.MD().ODDZ ?};
         _ok:=exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,ND.MD);
         {? __st_oddz<>'' || ST.ODDZ:=__st_oddz ?};
         {? _ok=1
         ||
            {?
               {? _a=1 & ND.sel_size=0
               || {? (_prod='N' | _prod='T' & _n_utw.size<=1 & (' '+exec('get','#params',500701,2,null()))*(' '+ND.TYP().T+' ')=0)
                  || FUN.ask('Wycofywany dokument utworzył dokument %1'
                       ' nr %2 symbol %3\n w magazynie %4'
                       '.\n\nWycofać komplet dokumentów?'@[ND.TYP().TD,$_nr,_sym,ND.MD().SYM])
                  ||
                     _n_utw.cntx_psh();
                     _n_utw.clear();
                     _txt:='\n';
                     {? _n_utw.first()
                     || {!
                        |? _txt+='\n %1 w magazynie %2'@[_n_utw.SYM,_n_utw.MAG];
                           _n_utw.next()
                        !}
                     ?};
                     _n_utw.cntx_pop();
                     FUN.ask('Wycofywany dokument utworzył dokumenty: %1'
                        '\n\nWycofać komplet dokumentów?'@[_txt])
                  ?}
               || 1
               ?}
            ||
               {? _prod='T' & _n_utw.size>1 & _pdok=1
               || _wyc_dok:=_n_utw.size+1
               || _wyc_dok:=2
               ?}
            ||
               _ok:=0
            ?}
         ||
            exec('add_kom','#message','W magazynie %1 zablokowano modyfikowanie dokumentów.'@[ND.MD().SYM],4,,__lp+=1);
            exec('add_kom','#message',_kom,2,,__lp+=1)
         ?}
      ?}
   ?}
?};
{? _ok=1  & ND.NDSQL<>''
|| TYPYDOK.cntx_psh();
   TYPYDOK.prefix();
   ND.cntx_psh();
   ND.prefix();
   {? ND.seek(ND.NDSQL,form(8+ND.NDSQL))
   ||
::    sprawdzenie czy tworzony dokument byl automatycznie akceptowany
      {? exec('get','#params',600000,2)='T'
      ||
         exec('add_kom','#message','Wycofywany dokument został utworzony'@,7,,__lp+=1);
         exec('add_kom','#message','z dokumentu %1 nr %2 w magazynie %3.'@[ND.TYP().T,$ND.NR,ND.MAG().SYM],7,,__lp+=1);
         exec('add_kom','#message','Dokument %1 należy wycofać jako pierwszy.'@[ND.SYM],2,,__lp+=1);
         _ok:=0
      ?}
   ?};
   ND.cntx_pop();
   TYPYDOK.cntx_pop()
?};
:: kontrola czy pozniej byla korekta dostawy (tylko dla magazynu DOSTAWY, DOSTEWI który nie jest celnym)
{? _ok=1 & ';DFL'*(1+ND.MAG().TYP)>1 & ND.MAG().SKL='N' & ~((';KR-;KR+;'*ND.TYP().T)>1)
|| _data:={? (1+ND.MAG().TYP)='D' || date(0,0,0) || ND.D ?};
   DK.cntx_psh();
   DK.index('DOKMAG');
   DK.prefix(ND.ref);
   {? DK.first()
   ||
      {!
      |?
::       kontrola cen magazynowych podczas wycofywania akceptacji dokumentu
::       sprawdza cene aktualna (po ewentualnej korekcie)
         {? (DK.PLUS='N' & DK.N().TYP().DK<>'T' & ~((DK.N().INN='T' & DK.N().TYP().INW='E' & DK.N().TYP().P='N')))
         | (DK.PLUS='T' & DK.N().TYP().DN='T')
         ||
            _head:=0;
            _cena_mag:={? ND.MAG().TYP*'EWI'
                       || exec('biez_cen','ceny_dok',DK.M,DK.N().MAG,DK.N().D)
                       || exec('cena_mag','ceny',DK.M,DK.RDK,DK.NDK,,DK.C,,,_data)
                       ?};
            {? DK.C<>_cena_mag
            ||
               {? _head=0
               ||
                  exec('add_kom','#message','Wskazane pozycje zostały skorygowane wartościowo:'@,7,,__lp+=1);
                  _head:=1
               ?};
               exec('add_kom','#message','Pozycja %1. Indeks: %2'@[$DK.P,DK.M().KTM],7,,__lp+=1);
               _ok:=0
            ?}
         ?};
         DK.next()
      !};
      {? _ok=0
      || exec('add_kom','#message',_kom,2,,__lp+=1)
      ?}
   ?};
   DK.cntx_pop()
?};
FAKS.cntx_psh();
{? ND.FAKS().WHERE='K'
||
   exec('add_kom','#message','Dokument %1 został wygenerowany z korekty zbiorczej %2.'@[ND.SYM,FAKS.SYM],19,,__lp+=1)
?};
FAKS.cntx_pop();

_ref_n:=ND.ref();
_czypal:=ND.MAG().PAL='N' & ND.MD<>null;
_notkor:=ND.TYP().DK='T' & ND.TYP().Z='T';
_no_sel:=ND.sel_size()=0;
{? _ok & ~_a & _e
|| _ask:=_e
|? _ok & _a & _no_sel
|| _ask:=0;
   {? ND.TYP().VALREC<>null() & ~exec('validate','wzorce',ND.TYP().VALREC,ND,ND.ref())
   || _ask:=0
   |? _upr=1 & ND.STAT_REJ='T' & _wyc_dok<2
   || _ask:=FUN.choice('Wybierz jedną z opcji wycofania akceptacji lub zakończenia dokumentu %1'@[ND.SYM]
             ,,'Akceptację i &zakończenie','&Akceptację')
   |? (_upr=1 | _upr=2) & (ND.STAT_REJ='Z' | _wyc_dok>=2)
   || _ask:=FUN.ask('Wycofać zakończenie redakcji dokumentu %1?'@[ND.SYM])
   |? _upr=4 & ND.STAT_REJ='T'
   || _ask:=FUN.ask('Wycofać akceptację dokumentu %1?'@[ND.SYM]);
      {? _ask || _ask:=2 ?}
   ?}
|? _ok & ~_no_sel & var_pres('__askwyc')>0
|| {? ND.TYP().VALREC<>null() & ~exec('validate','wzorce',ND.TYP().VALREC,ND,ND.ref())
   || _ask:=0
   || _ask:=__askwyc
   ?}
|| _ask:=1
?};

{? _notkor & _ask || _notkor+=_ask; _ask:=0 ?};
:: sprawdzenie czy nie spowoduje stanow minusowych
{? _ask=1
|| {! _i:=1.._wyc_dok
   |!
      ND.cntx_psh();

      _msk:=0;
      {? _i>=2 & (6+_n_utw[1])+1<>ST.ODDZ
      ||
         _msk:=1;
         exec('open','open_tab',(6+_n_utw[1])+1,2-$ST.AR)
      ?};

      ND.prefix();
      {? _i=1
      ||
         {? ~ND.seek(_ref_n)
         || undo();
            exec('add_kom','#message','Nie znaleziono dokumentu.'@,4,,__lp+=1)
         ?}
      |? _i>=2
      ||
         _ref:=_n_utw[1];
         {? ~ND.seek(_ref,form(8+_n_utw[1]))
         || undo();
            exec('add_kom','#message','Nie znaleziono dokumentu powiązanego.'@,4,,__lp+=1)
         ?};
         {? _prod='T' & _pdok=1
         || _n_utw.next()

         ?}
      ?};
      _czyzakc:=ND.Z='T' | (';ZT'*ND.STAT_REJ)>1;
      {? _ok=1 & _czyzakc & ~_notkor
      ||
         DK.index('DOKMAG');
         DK.prefix(ND.ref());
         SC.index('SN');
         SC.prefix(ND.MAG);
         {? DK.first()
         ||
            {!
            |?
               {? DK.M().RODZ='T'
               ||
                  {? SC.find_key(DK.M,DK.RDK,DK.NDK)
                  ||
                     _stan:=SC.S+{?DK.PLUS='T'||-1||1?}*DK.IL;
                     {? _stan<0
                     ||
                        exec('add_kom','#message','Wycofanie spowoduje ujemny stan materiału:'@,4,,__lp+=1);
                        exec('add_kom','#message','Mag.: %1, dok. %2'
                        ', poz. %3: %4 - %5'@[DK.N().MAG().SYM,DK.N().SYM,$DK.P,DK.M().KTM,DK.M().N],4,,__lp+=1);
                        _ok:=0
                     ||
                        {? SC.count()>0
                        ||
                           INP.index('SC');
                           INP.prefix(SC.RDK,SC.NDK);
                           {? INP.first()
                           ||
                              {? ~(DK.N().INN='T' & DK.N().TYP().INW='I')
                               & {? INP.IN().D>DK.N().D
                                 || 1
                                 |? INP.IN().D=DK.N().D
                                 || {? INP.IN().T=time(0,0,0) | DK.N().T=time(0,0,0)
                                    || 1
                                    || DK.N().T<=INP.IN().T
                                    ?}
                                 || 0
                                 ?}
                              ||
                                 exec('add_kom','#message','Wycofywany stan jest inwentaryzowany:'@,7,,__lp+=1);
                                 exec('add_kom','#message','Poz. %1: %2 - %3'@[$DK.P,DK.M().KTM,DK.M().N],7,,__lp+=1);
                                 _ok:=0
                              ?}
                           ?}
                        ?}
                     ?};
::                komunikat dotyczacy "zaburzonych" ilosci w wydaniu
                     {? DK.N().TYP().P='T'
                     || {? _ok & exec('obl_ssc','magazyn_stan',DK.RDK,DK.NDK,ND.MAG,DK.M,'S')>0
                        || {? DK.N().TYP().KOOP='T'
                           ||
::                         Jesli dokument kooperacyjny to nie pozwalam wycofac
                              _ok:=0
                           ?};
                           exec('add_kom','#message','Dostawa na niezaakceptowanych dokumentach wydania:'@,4,,__lp+=1);
                           exec('add_kom','#message','Poz. %1: %2 - %3'@[$DK.P,DK.M().KTM,DK.M().N],4,,__lp+=1)
                        |? _ok & (1+ND.MAG().TYP)<>'D'
                         & ((exec('FindInSet','#table','SM','SM',DK.M,ND.MAG,"SM.S",,,0)
                         -exec('iledk_nd','magdok_nag',ND.ref(),DK.M)
                         -exec('FindInSet','#table','SM','SM',DK.M,ND.MAG,"SM.R",,,0))
                         -exec('ilwydmat','magdok_wspolne',DK.M,ND.MAG))<0
                        ||
                           exec('add_kom','#message','Stan ujemny dostawy dla niezaakceptowanych dokumentów:'@,4
                            ,,__lp+=1);
                           exec('add_kom','#message','Poz. %1: %2 - %3'@[$DK.P,DK.M().KTM,DK.M().N],4,,__lp+=1)
                        ?}
                     ?}
                  ?}
               ?};
               DK.next()
            !}
         ?};

         {? _ok=0
         || exec('add_kom','#message',_kom,2,,__lp+=1)
         ?}

      ?};

      {? _ok=1
      || _ok:=exec('spr_rdst','magdok_wspolne')
      ?};

      {? _msk=1
      ||
         exec('open','open_tab',ST.ODDZ,2-$ST.AR)
      ?};

      ND.cntx_pop()
   !}
?};

{? _ask=2 & _wyc_dok<2
|| {? ND.STAT_REJ='T'
   || ND.STAT_REJ:='Z';
      {? ND.put(1) || _wyn:=1 || undo() ?}
   || _wyn:=0
   ?}
|? _ask=1 & _ok=1 &
   {? _wyc_dok>=2
   || 1
   ||
      {? _a & ND.sel_size=0
      || _ask:=1
      || 1
      ?}
   ?}
||
   _pkom:=ND.TYP().TD<>'';
   _listkom:='';
   _do_state:=do_state();
   {? _do_state=0 || do() ?};
   {? _pdok=1
   || _n_utw.first()
   ?};
:: usuniecie kosztow celnych
   exec('usu_kos','magdok_nag');

   {! _i:=1.._wyc_dok
   |!
      ND.cntx_psh();

      _msk:=0;
      {? _i>=2 & (6+_n_utw[1])+1<>ST.ODDZ
      ||
         _msk:=1;
         exec('open','open_tab',(6+_n_utw[1])+1,2-$ST.AR)
      ?};

::    usunięcie pozycji z tabeli pozycji dostaw magazynowych
      {? exec('get','#params',100210,2)='T'
      ||
         ND.cntx_psh();
         TYPYDOK.cntx_psh();
         ND.prefix();
         {? ND.seek({? _wyc_dok=2 || _n_utw[1] || _ref_n ?})
            & ND.TYP().P='T' & TYPYDOK.DK<>'T' & TYPYDOK.DN<>'T'
         ||
            DK.cntx_psh();
            DKDOST.cntx_psh();
            FIRMA.cntx_psh();
            DKDOST.index('UNIK');
            DKDOST.prefix();
            DK.index('DOKMAG');
            DK.prefix(ND.ref);
            _loop:=DK.first();
            {!
            |? _loop
            |!
               _srdk_uidref:=exec('FindAndGet','#table',DK,DK.SRDK,,"DK.uidref()",'');
               {? DKDOST.find_key(REF.FIRMA().SYMBOL,_srdk_uidref)
               ||
                  DKDOST.del()
               ?};
               _loop:=DK.next()
            !};
            FIRMA.cntx_pop();
            DKDOST.cntx_pop();
            DK.cntx_pop()
         ?};
         ND.cntx_pop();
         TYPYDOK.cntx_pop()
      ?};

      ND.prefix();
      {? _i=1
      ||
         {? ~ND.seek(_ref_n)
         || undo();
            exec('add_kom','#message','Nie znaleziono dokumentu.'@,4,,__lp+=1)
         ?}
      |? _i>=2
      ||
         _ref:=_n_utw[1];
         {? ~ND.seek(_ref,form(8+_n_utw[1]))
         || undo();
            exec('add_kom','#message','Nie znaleziono dokumentu powiązanego.'@,4,,__lp+=1)
         ?};
         {? _prod='T' & _pdok=1
         || _n_utw.next()
         ?}
      ?};

      DK.index('DOKMAG');
      DK.prefix(ND.ref());
      _czyzakc:=ND.Z='T' | (';ZT'*ND.STAT_REJ)>1;
      {? DK.first() & _czyzakc
      || {? _prod='T' &
            ((' '+exec('get','#params',500701,2,null()))*(' '+ND.TYP().T+' ')>0 |  ND.TYP().WYR='T' ) |
            exec('is_usluga_typ','zl_uslugi',ND.TYP) &
            ND.TYP().DK='N'
         || exec('aktuzl','zl_common',ND.ref(),-1);
            ~~
         ?};
         DK.first();
         {!
         |?
            DK.cntx_psh();
            {? _prod='T'
            || {? ND.TYP().ZLEC<>'N' & ND.TYP().WYR='N' | ND.TYP().DK='T'
               || {? DK.ZL<>null
                  || ND.STAT_REJ:='N';
                     ND.Z:='N';
                     ND.INTRAKC:='N';
                     ND.put();
                     _wyn:=exec('akzlst','magdok_poz',DK.ZL,-1,DK.WYD);
                     ND.STAT_REJ:='T';
                     ND.Z:='T';
                     {? ND.IST_TYP<>'' || ND.INTRAKC:=exec('get','#params',100202,2) ?};
                     ND.put()
                  ?}
               ?}
            ||
               {? DK.ZL<>null
               ||
                  {? exec('akzlst','magdok_poz',DK.ZL,-1,DK.WYD)
                  || _wyn:=1
                  || exec('add_kom','#message','Nie powiodła się aktualizacja powiązanych zleceń.'@,7,,__lp+=1);
                     _wyn:=0
                  ?}
               ?}
            ?};
            DK.cntx_pop();
            DK.get();
            {? DK.M().RODZ='T' & (DK.N().TYP().DK<>'W' | (DK.M().J2<>null() & DK.IL=0 & DK.IL2<>0))
            || _ok:=exec('DELSTAN','magazyn_stan',DK.N().MAG,DK.M,{? DK.PLUS='T' || ND.D || DK.DOST ?}
                     ,DK.C,DK.PLUS,DK.RDK,DK.NDK)
            || {? DK.N().TYP().DK='W' & DK.IL=0
               || exec('stan_zb','magazyn_stan',DK.N().MAG,DK.M,0,DK.WAR,ND.AR,{? DK.M().J2<>null() || DK.IL2 || 0 ?})
               ?};
               DK.Z:='N'
            ?};
            {? ~_ok
            || undo();
               exec('add_kom','#message',_kom,2,,__lp+=1)
            ?};
            {? _ok & DK.SCEAN<>'' & DK.M().IDMOB='D' & (DK.N().INN='T' & DK.N().TYP().INW='I' & DK.N().TYP().P='T')
            || exec('mkodkadd','kody_kresk',DK.M,DK.SCEAN,DK.PRDK,3)
            ?};
            DK.next()
         !};
         _tmg:=(1+ND.MAG().TYP);
::       dokumenty inwentaryzacji
         {? _tmg<>'E' & ND.INN='T' & ND.TYP().INW='I' & ND.TYP().P='N' || _tmg:='D' ?};
         {? _tmg='D' & (ND.TYP().AFIFO<>'' | ND.MAG().IL='T') || _tmg:=ND.TYP().AFIFO; {? _tmg='' || _tmg='F' ?} ?};
         {? _ok & 'FLŚE'*_tmg & ND.TYP().P<>'T' || exec('akt_fifo','magdok_poz') ?};
         ND.STAT_REJ:='N';
         ND.Z:='N';
         ND.INTRAKC:='N';
         exec('dk_sum','magdok_wspolne',ND.ref());
         ND.WAR:=SUM.WAR;
         _wyn:=exec('data_akcept','magdok_nag','N',_i=1 & _wyc_dok>1,POM.PAR2)
      || _bylakc:=ND.STAT_REJ<>'N';
         ND.STAT_REJ:='N';
         ND.Z:='N';
         ND.INTRAKC:='N';
         exec('dk_sum','magdok_wspolne',ND.ref());
         ND.WAR:=SUM.WAR;
         _wyn:={? _bylakc || exec('data_akcept','magdok_nag','N',_i=1 & _wyc_dok>1,POM.PAR2) || 1 ?}
      ?};
      {? _ok & _i>=2 & ND.Z='N'
      || _czypal:=_czypal & ND.MAG().PAL='T';
         {? _pkom
         ||
            DK.index('DOKMAG');
            DK.prefix(ND.ref());
            {? DK.first
            ||
               {!
               |? {? _listkom*($DK.M)=0 || _listkom+=$DK.M ?};
                  DK.next
               !}
            ?}
         ?};
         exec('n_usun','magdok_nag',0,0,,,0,,1);
         {? _czypal || {? ~exec('del_ppal','magdok_palety',_ref_n) || _wyn:=0; undo() ?} ?}
      ?};

      {? _msk=1
      ||
         exec('open','open_tab',ST.ODDZ,2-$ST.AR)
      ?};

      ND.cntx_pop()
   !};

:: wycofanie dokumentu opakowan
   {? _wyn & ~exec('nd_z','opakow',0)
   || undo();
      exec('add_kom','#message','Akceptacja powiązanego dokumentu opakowań nie została wycofana.'@,4,,__lp+=1);
      _wyn:=0
   ?};

:: usuniecie powiazanych wykonan do kooperacji
   {? ND.TYP().KOOP='T' & ND.TYP().P='N' & exec('del_nd_wyk','zl_koop',ND.ref())=0
   || undo();
      exec('add_kom','#message','Usunięcie wykonań do kooperacji nie powiodło się.'@,4,,__lp+=1);
      _wyn:=0
   ?};
   {? _wyn & (ND.get(); ND.Z='N') || exec('ilmg2ZAM','magdok_wspolne',ND.ref(),0) ?};

   {? _do_state=0 || end() ?};

:: aktualizacja statusu zamowien
   _ok:=1;
   ND.cntx_psh();
   ND.prefix();
   {? ~ND.seek(_ref_n) || _ok:=0 ?};
   {? _ok=1
   ||
      {? ND.sel_size=0 || {? ND.TYP().P='T' || exec('utw_zk_tymc','zamsiw_wspolne') ?} ?};
      _list_m:='';
      {? _pkom
      ||
         {!
         |?
            exec('obl_stan','magazyn_stan',exec('FindAndGet','#table','M',_listkom+16,,,null()),1,ND.MD);
            _listkom-=16;
            _listkom<>''
         !}
      ?};
      DK.index('DOKMAG');
      DK.prefix(ND.ref());
      {? DK.first()
      ||
         {!
         |?
            {? _list_m * ('|'+$#DK.M+';')=0
            ||
               _list_m+='|'+$#DK.M+';';
               exec('obl_stan','magazyn_stan',DK.M,1,DK.N().MAG);
               {? _wyc_dok=2 & _pkom=0 || exec('obl_stan','magazyn_stan',DK.M,1,DK.N().MD) ?};
               {? DK.N().TYP().P='T' || __uzup_z(DK.M) ?}
            ?};
            DK.next()
         !}
      ?};
      {? ND.sel_size=0
      || {? ND.TYP().P='T'
         || exec('Rez2Rez','zamsiw_wspolne',0,ND.ref());
            exec('akt_wgdk','zamsiw_wspolne',ND.ref());
            exec('odt_zk_tymc','zamsiw_wspolne')
         ?}
      ?}
   ?};
   ND.cntx_pop()
?};
{? _notkor>1
|| {? _notkor=2
   || ND.DA:=date(0,0,0);
      ND.TA:=time(0,0,0);
      ND.Z:='N';
      ND.STAT_REJ:='N';
      ND.INTRAKC:='N';
      {? ND.put(1)
      || _wyn:=1;
         DK.cntx_psh();
         DK.index('DOKMAG');
         DK.prefix(ND.ref());
         {? DK.first() || {! |? DK.Z:='N'; DK.put(1); DK.next() !} ?};
         DK.cntx_pop()
      ?}
   || ND.STAT_REJ:='Z';
      ND.put(1)
   ?}
?};
:: rearchiwizacja cech dostawy
{? ~_notkor & (1+ND.MAG().TYP)='D' || exec('atrnarch','mat_atr',ND.ref(),0) ?};
{? _c || ND.r_unlock() ?};
{? _wyn=1 & (ND.get();';NZ'*ND.STAT_REJ)>1 & _recplug<>ND.STAT_REJ || Plugin.run('AFTER_RECALL_001','DM') ?};

DK.cntx_pop();

VAR_DEL.delete('__aktzkp');
VAR_DEL.delete('__bufpal');

:: komunikaty
{? _wyn=1
|| _kom:={? _stat_rej='Z' & _ask=1
         || 'zakończenie rejestracji'
         |? _stat_rej='T' & _ask=1
         || 'akceptację i zakończenie rejestracji'
         |? _stat_rej='T' & _ask=2
         || 'akceptację'
         || ''
         ?};
   exec('add_kom','#message','Wycofano %1 dokumentu.'@[_kom],1)
|? ~_wyn & ~_no_sel
|| exec('add_kom','#message','Pominięto dokument.'@,1)
?};
{? ND.sel_size=0 & _b='T' || exec('wycadok','magdok_nag'); {? _ask || exec('end_kom','#message') ?} ?};

_wyn


\sprpozdk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza mozliwosc odaakceptowania dokumentu - brak naruszenia stanow
::   WE: _a - ref ND
::       [_b] - 0(domyślnie) -dany dokument 1-dokument powiązany
::   WY: 1-OK da sie, 0-nie, 2-OK da się tylko trzeba przywrócić powiązane rezerwacje na warunkowe dla pozycji zamówień
::  OLD: \sprpozdk/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_tab:=tab_tmp(1,'MAT','STRING[16]',''
       ,'SD','REAL',''
       ,'DK','REAL','');
_zlzam:=tab_tmp(1,'REF','STRING[16]','');
_war2bez:=0;
_pow:={? var_pres('_b')=type_of(0) || _b || 0 ?};

DK.cntx_psh();
REZ.cntx_psh();
ZLZAM.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first()
|| _mag:=DK.N().MAG;
   {!
   |? _ilr:=0;
      _tab.clear();
      {? _tab.find_key($DK.M)
      || _tab.DK+=DK.IL;
         _tab.put(1)
      || _zlec:=exec('FindAndGet','#table',DK,DK.PRDK,,"ZL",null());
         {? _zlec<>null()
         || _topzlec:=exec('top_level','zl_link',_zlec);
            {? exec('FindAndGet','#table',ZL,_topzlec,,"RODZAJ",'')<>'N' || _zlec:=_topzlec ?}
         ?};
         {? _zlec<>null()
         || ZLZAM.index('ZLZM');
            ZLZAM.prefix(_zlec);
            {? ZLZAM.first()
            || {!
               |? _zlzam.clear();
                  {? (5+ZLZAM.ZAMPOZ)='zkpoz' & ~_zlzam.find_key($ZLZAM.ref(),)
                  || _zlzam.blank();
                     _zlzam.REF:=$ZLZAM.ref();
                     _zlzam.add(1)
                  ?};
                  ZLZAM.next()
               !}
            ?}
         ?};
         REZ.index('MG_M');
         REZ.prefix(_mag,DK.M,'B');
         {? REZ.first()
         || {!
            |? {? REZ.TYP='Z' & REZ.ZLZAM<>null() & (_zlzam.clear(); _zlzam.find_key($REZ.ZLZAM,))
               || _war2bez+=1
               || _ilr+=REZ.ILR
               ?};
               REZ.next()
            !}
         ?};
         _tab.blank();
         _tab.MAT:=$DK.M;
         _tab.DK:=DK.IL;
         _tab.SD:=exec('FindInSet','#table','SM','SM',DK.M,_mag,"SM.S",,,0)-_ilr;
         _tab.add(1)
      ?};
      {? _tab.DK>_tab.SD || _wyn:=0 ?};
      DK.next()
   !}
?};
DK.cntx_pop();
REZ.cntx_pop();
ZLZAM.cntx_pop();
{? ~_wyn
|| {? ~_pow
   || exec('add_kom','#message','Wycofanie dokumentu spowoduje ujemny stan materiału (rezerwacje, wydania) dla:'@
       ,4,,__lp+=1)
   || exec('add_kom','#message','Wycofanie dokumentu powiązanego spowoduje ujemny stan materiału (rezerwacje, wydania) dla:'@
       ,4,,__lp+=1)
   ?};
   _mat:=BEER.M;
   _tab.clear();
   {? _tab.first()
   || {!
      |? {? _tab.DK>_tab.SD
         || BEER.M:=exec('FindAndGet','#table','M',_tab.MAT,,,null());
            exec('add_kom','#message','  '+form(80+(BEER.M().KTM+' - '+BEER.M().N))+
             ', o: '+form(_tab.SD-_tab.DK,,BEER.M().DOKL)+' '+BEER.M().J().KOD
             ,4,,__lp+=1)
         ?};
         _tab.next()
      !}
   ?};
   BEER.M:=_mat
|? _war2bez
|| _wyn:=2
?};
obj_del(_tab);
obj_del(_zlzam);
_wyn


\iledk_nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: oblicza ilosc na DK wg indeksu materialowego
::   WE: _a - ref ND
::       _b - ref materialu
::   WY: ilosc na dokumencie
::  OLD: \iledk_nd/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
DK.cntx_psh();
DK.index('MAM');
DK.prefix(_a,_b);
{? DK.first() || {! |? _wyn+=DK.IL; DK.next() !} ?};
DK.cntx_pop();
_wyn


\usu_kos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: usuwa koszty celne w dokumentach rozchodowych
::   WY: ~~
::  OLD: \usu_kos/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.MAG().SKL='T' & ND.TYP().P='N'
|| FAKS_K.cntx_psh;
   FAKS_K.index('N'); FAKS_K.prefix('N',ND.IDADD,'N',1);
   {? FAKS_K.first()
   ||
      {!
      |? {? FAKS_K.SC='T'
         || FAP_K.index('DK'); FAP_K.prefix(FAKS_K.ref());
            {? FAP_K.first() || {! |? exec('dk_k_del','magdok_poz') !} ?};
            FAKS_K.del()
         || FAKS_K.next()
         ?}
      !}
   ?};
   FAKS_K.cntx_pop
?};
~~


\wycbdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: wycofanie akceptacji dokumentow (przed funkcja grupowa)
::  OLD: \wycbdok/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__askwyc');
_lmg_act:={? AreaTitle.area='TTE_KOO'
          || {? TYPYDOK.P='T' || 'TTE_WYK_DKOW' || 'TTE_WYK_DKOP' ?}
          || {? TYPYDOK.P='T' || 'LMG_MAG_DAPZ' || 'LMG_MAG_DWYD' ?}
          ?};
_upr:=exec('chk_EndOrAcc','#b__box',_lmg_act,'LMG_MAG_EWMG');

exec('ini_kom','#message','Informacje o wycofaniu dokumentów'@);
_ask:=0;
{? _upr=1
|| _ask:=FUN.choice('Wybierz jedną z opcji wycofania akceptacji lub zakończenia zaznaczonych dokumentów'@
          ,,'Akceptację i &zakończenie'@,'&Akceptację'@)
|? (_upr=1 | _upr=2)
|| _ask:=FUN.ask('Wycofać zakończenie redakcji zaznaczonych dokumentów'@)
|? _upr=4
|| _ask:=FUN.ask('Wycofać akceptację zaznaczonych dokumentów?'@);
   {? _ask || _ask:=2 ?}
?};

{? ~_ask
|| ND.sel_adel();
   VAR_DEL.delete('__askwyc')
|| __askwyc:=_ask
?};
sel_nchk();
exec('utw_zk_tymc','zamsiw_wspolne');
''


\wycadok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: wycofanie akceptacji dokumentow (po funkcji grupowej)
::   WE: _a - Czy wyswietlac komunkat na koniec 1-Tak/0-Nie
::  OLD: \wycadok/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?}    || _a:=1 ?};
{? var_pres('__zam')>100 || exec('odt_zk_tymc','zamsiw_wspolne') ?};
{? _a || exec('end_kom','#message') ?};
VAR_DEL.delete('__askwyc');
1


\nd_edit_finisher
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Kod wykańczający po ND.edit() w różnych kontekstach
::   WE: params_get()   - ustawiane w exec('n_add','dokmag_nag')
::                      - ustawiane w exec('nag_edit','dokmag_nag')
::----------------------------------------------------------------------------------------------------------------------
:: Sprawdzenie poprawności wypełnienia pól nagłówka dokumentu magazynowego
_fld:={? cur_kwin()='e_disp' || '' || params_exec('nd_valid','magdok_nag') ?};
{? _fld<>''
|| _fld
|| ND.put(1);
   _out:=params_get().context.out;
   _mp:=params_get().context.mp;
   _akcja:=params_get().context.akcja;
   _var_ndpop:=params_get().var_ndpop;
   {? exec('FindInSet','#table','DK','DOKMAG',ND.ref())=null()
   || _var_ndpop.KH:=ND.KH;
      _var_ndpop.KH_ODB:=ND.KH_ODB;
      _var_ndpop.WAL:=ND.WAL;
      _var_ndpop.D:=ND.D;
      _var_ndpop.IST_TYP:=ND.IST_TYP;
      _var_ndpop.KRS:=ND.KRS
   ?};
   {? _akcja='Dołącz' | _akcja='START_TODO' | _mp.pathProc()
   || params_set('var_ndpop',_var_ndpop);
      exec('nag_edit_po','magdok_nag',1);
      _var_ndpop.PO_FIRST:=2
   |? _akcja='Popraw' | _mp.pathTodo()
   || _var_ndpop.PO_FIRST:=1;
      params_set('var_ndpop',_var_ndpop);
      exec('nag_edit_po','magdok_nag',1)
   ?};
   ''
?}


\pr_find_nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: wyłącza pola do wyszukiwania
::----------------------------------------------------------------------------------------------------------------------
_ena:='enable=1';
_dis:='enable=0';
{? BEER.TYPYDOK=null()
|| _fz:=_fs:=_ena
|? BEER.TYPYDOK().Z='N'
|| _fz:=_fs:=_dis
|? BEER.TYPYDOK().P='T' & BEER.TYPYDOK().DN='N'
|| _fz:=_ena;
   _fs:=_dis
|| _fz:=_dis;
   _fs:=_ena
?};
{? _fs=_ena || BEER.SZ:='S' ?};

KH.actions('WER','W');
ND.efld_opt('RED_SZUK',_fz,,'FZAK');
ND.efld_opt('RED_SZUK',_fs,,'FAKS');
1


\po_find_nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: wyłącza pola do wyszukiwania
::----------------------------------------------------------------------------------------------------------------------
ND.efld_opt('RED_SZUK','enable=1',,'FZAK');
ND.efld_opt('RED_SZUK','eanble=1',,'FAKS');
1


\chk_atr_zl
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [12.30]
:: OPIS: Sprawdza zgodnosc wartosci atrybutow na pozycjach dokumentu ze zleceniami
::   WE: _a - ND.ref()
::       _b - 0/[1] - komunikaty
::   WY: 0 - sa niezgodnosci
::       1 - brak niezgodnosci
::  OLD: \chk_atr_zl/zlec5.fml
::----------------------------------------------------------------------------------------------------------------------
_nd:=_a;
_czykom:=1;
{? var_pres('_b')=type_of(0)
|| _czykom:=_b
?};

_result:=1;
_can_continue:=1;

ND.cntx_psh(); ND.clear();
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_nd);

{? DK.first()
||
:: deklaracje obiektow dla komunikatow
   exec('JCQ_decl','#message');
   KOM_TMP:=obj_new(@.CLASS.JCQ);
   KOM_TMP.init(250,,'Weryfikacja zgodności wartości atrybutów'@,'',,,0);
   {!
   |?
      {? DK.DK_C<>null() & DK.ZL<>null()
      || _can_continue:=exec('dkc_compare','zl_common',DK.DK_C,DK.ZL,{? _czykom || 2 || 0 ?},KOM_TMP);
         {? _can_continue<=0
         || _result:=0
         ?}
      ?};
      DK.next()
   !};
   {? _czykom
   || KOM_TMP.select()
   ?};
   VAR_DEL.delete('KOM_TMP')
?};

DK.cntx_pop();
ND.cntx_pop();
_result


\chk_atr_zlim
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [12.30]
:: OPIS: Sprawdza zgodnosc wartosci atrybutow na pozycjach dokumentu z limitami
::   WE: _a - ND.ref()
::       _b - 0/[1] - komunikaty
::   WY: 0 - sa niezgodnosci
::       1 - brak niezgodnosci
::  OLD: \chk_atr_zlim/zl_limit.fml
::----------------------------------------------------------------------------------------------------------------------
_nd:=_a;
_czykom:=1;
{? var_pres('_b')=type_of(0)
|| _czykom:=_b
?};

_result:=1;
_can_continue:=1;

ND.cntx_psh(); ND.clear();
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_nd);

{? DK.first()
||
:: deklaracje obiektow dla komunikatow
   exec('JCQ_decl','#message');
   KOM_TMP:=obj_new(@.CLASS.JCQ);
   KOM_TMP.init(250,,'Weryfikacja zgodności wartości atrybutów'@,'',,,0);
   {!
   |?
      {? DK.DK_C<>null() & DK.ZLIM<>null()
      || _can_continue:=exec('dkc_compare','zl_limit',DK.DK_C,DK.ZLIM,,{? _czykom || 2 || 0 ?},KOM_TMP);
         {? _can_continue<=0
         || _result:=0
         ?}
      ?};
      DK.next()
   !};
   {? _czykom
   || KOM_TMP.select()
   ?};
   VAR_DEL.delete('KOM_TMP')
?};
DK.cntx_pop();
ND.cntx_pop();
_result


\nd_zakoncz_wer_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: zakończenie edycji dokumentu magazynowego
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:=exec('nd_dolacz_act_uid','magdok_nag',ND.TYP().P,TYPYDOK.KOOP);
_params.UIDREF:=ND.uidref();
_params.AKCJA:='Zakończ_wer';
_params.CONTEXT:=obj_new('AKC_DOK');
_params.CONTEXT.AKC_DOK:=exec('akc_dok_a','magdok_nag');
_params.CONTEXT.AKC_DOK.ND_UNLOCK:=0;

exec('mp_run','#b__box',_params)


\wyc_dokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: akcja wycofaj dokument magazynowy z poziomu realizacji zamowienia
::  OLD: \wyc_dokr/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
_st_ar:=_st_am:=0;
{? ND.AR<>ST.AR | ND.AM<>ST.AM
||
   _st_ar:=ST.AR;
   _st_am:=ST.AM;
   ST.AR:=ND.AR;
   ST.AM:=ND.AM
?};
exec('wyc_dok','magdok_nag',,,0);
{? _st_ar>0 | _st_am>0
||
   ST.AR:=_st_ar;
   ST.AM:=_st_am
?};
''


\disp_nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: Edycja naglowka / Wyswietlenie naglowka
::   WE: _a - Edycja naglowka / Wyswietlenie naglowka
::  OLD: \disp_nd/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.get()
||
   DISP.TYP:='';
   DISP.KHNAZ:='';
   ST.TYPYDOK:=DK.N().TYP;
   POM.TAB:='ND';
   POM.TYPDOK:=ST.TYPYDOK().KOD;
   POM.NRT:=ST.TYPYDOK().NRT;
   BEER.SZ:={? TYPYDOK.P='N' || 'S' || 'Z' ?};
   exec('ustaw_ww','eurusd','M');
   exec('ust_lw','eurusd',0);
   exec('nd_win_edit_set','magdok_nag');
   ND.hdr_sel();
   ND.hdr_sel(' w magazynie: %1'@[ST.MAG().SYM]);
   DK.N().SYM;
   {? _a='E'
   ||
      FAKS.win_dict('WER6');
      DK.cntx_psh();
      _arg:=exec('nag_edit_a','magdok_nag');
      _arg.ND_UNLOCK:=0;
      exec('nd_popraw','magdok_nag',_arg);
      DK.cntx_pop();
      DK.get(1)
   ||
      ND.display()
   ?}
?};
''


\nd_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: Zalaczniki dla dokumentow magazynowych
::  OLD: \nd_zal/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('sel_dok','dokum','ND',,,,1)


\nd_actions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Wyszarza akcje w oknie ND
::----------------------------------------------------------------------------------------------------------------------
ND.actions_grayed('WERP','');

_czy_sa:=ND.size();
_group:=(ND.sel_size()>0);

_lmg_act:={? AreaTitle.area='TTE_KOO'
          || {? TYPYDOK.P='T' || 'TTE_WYK_DKOW' || 'TTE_WYK_DKOP' ?}
          || {? TYPYDOK.P='T' || 'LMG_MAG_DAPZ' || 'LMG_MAG_DWYD' ?}
          ?};
_czy2pow:=exec('get','#params',200310,2)='T';
_czy_upr:=exec('chk_role','#b__box',OPERATOR.USER,_lmg_act);
_lmgfact:={? TYPYDOK.P='T' || 'LZK_ZAK_DZPZ' || 'LSP_FAK_DZDM' ?};
_czy_upf:=exec('chk_role','#b__box',OPERATOR.USER,_lmgfact);
_czy_upw:={? _czy_sa || ND.TYP().P='T' & ND.TYP().UE='T' & ND.STAT_REJ='T' || 0 ?};
_czy_kwr:=exec('get','#params',1008,2,OPERATOR.USER)='T';
_czy_koop:=(TYPYDOK.KOOP='T');
{? ~_czy2pow & TYPYDOK.P='T' || _czy2pow:=-exec('sprdk2fp','magdok_wspolne',ND.ref(),'A',-2) ?};

_czydtr:={? ND.STAT_REJ='T' & ND.TYP().DN='N'
          & exec('czyTR_NZL','transport_wspolne',ND.uidref())
         || ''
         || 'N(B(C))'
         ?}+
         {? exec('czyTR_NZL','transport_wspolne',ND.uidref(),1) || 'U' || '' ?};
_czywyc:={? _czy_sa
          & (ND.STAT_REJ='N'
           | ND.STAT_REJ='T' & ~exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_EWMG')
           | ND.STAT_REJ='Z' & ~exec('chk_role','#b__box',OPERATOR.USER,_lmg_act)
           | ND.TYP().P='N' & ND.TYP().DK<>'T' & ND.F='T')
         || 'N(W)'
         || ''
         ?};
_no_et:={? ~exec('isDEFetyk','magazyn_mobi','ND') || 'J(T)' || '' ?};

_actions:=
   {? ~_czy_upr
      | BEER.TYPYDOK=null()
      | TYPYDOK.DK='T'                            || 'DPU:D'
   |? TYPYDOK.P='N' & TYPYDOK.DK='W'              || 'DPZA:D'
   |? ';INW+;INW-;PRC+;PRC-;'*(';'+TYPYDOK.T+';') || 'DPN(I):D'
   |? ND.INN='T'                                  || 'PUN(I)'
   |? TYPYDOK.WYR='U'                             || 'DN(J):D'
                                                  || ':'
   ?};

_actions:=
   {? ~_czy_sa        || ''
   |? ND.STAT_REJ='N' || 'N(W)F'+{?_group || '' || 'A' ?}
   |? ND.STAT_REJ='Z' || 'UFN(GC)'+_czywyc+{?_group || '' || 'Z' ?}
   |? ND.STAT_REJ='T'
      | ND.Z='T'      || 'UN(GC)'+_czywyc+{?_group || '' || 'AZ' ?}
                      || ''
   ?}+_actions;

_actions:=
   {? ~_czy_upf
      | TYPYDOK.Z<>'T'
      | {? TYPYDOK.P='T'
        || _czy2pow=-2 | ~exec('sprdk2fp','magdok_wspolne',ND.ref(),'Z',0)
        || ND.F='T' | TYPYDOK.DS='N'
        ?}
                      || 'F'
                      || ''
   ?}+_actions;

_actions:=
   {? ~_czy_upw
      | (TYPYDOK.P='T' & (_czy2pow=-1 | ~exec('sprdk2fp','magdok_wspolne',ND.ref(),'E',0)))
      | TYPYDOK.Z<>'T'
                       || 'R'
                       || ''
   ?}+_actions;

_actions:=_no_et+{? _czy_koop || 'F' || '' ?}+_czydtr+_actions;

{? ~(ST.MAG().TYP*'EWI') || _actions:='N(P)'+_actions+'N(P)' ?};
{? (';Ś'*(1+ST.MAG().TYP))>1 | ST.MAG().TYP*'EWI' || _actions:='N(T)'+_actions+'N(T)' ?};
{? ST.MAG().PAL='T' || _actions:='N(J)'+_actions ?};
{? ST.MAG().MWS<>'T' || _actions:='G'+_actions ?};
{? ST.MAG().IL='T' || _actions:='N(PTRKA)'+_actions+'N(PTRK)' ?};
{? ~_czy_kwr || _actions:='N(R)'+_actions+'N(R)' ?};
{? ~(TYPYDOK.P='N' & TYPYDOK.DS='T') || _actions:='N(GC)'+_actions ?};
{? ~(TYPYDOK.P='T' & (';ZT'*ND.STAT_REJ)>1) || _actions:='N(Q)'+_actions ?};
:: Dane do intrastat - trwale wyłączone w nagłówku - będą ewentualnie dostępne po ustaleniu końcowej funkcjonalności
_actions:=
   {? ND.TYP & TYPYDOK.UE<>'T'
   || 'N(E)'
   |? ND.IST_TYP='' | ND.INTRA='T' | ND.Z<>'T'
   || 'N(E(AW))'
   |? ND.INTRAKC='T'
   || 'N(E(A))'
   || 'N(E(W))'
   ?}+_actions;
:: akcja korekta sprzedaży
_actions:={? ~exec('czyZWRMG','powdok') || 'N(S)' || '' ?}+_actions;
_actions:={? exec('stND2EANN','magazyn_mobi',ST.AR)='K' || 'Z' || '' ?}+_actions;

ND.actions_grayed('WERP',_actions)


\nd_akceptuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument magazynowy - Akceptuj
::       Obsługa w formule main
::   WE: [_a] - 0(domyślnie) 1-automatyczna akcja, 2-automatyczna akcja przy operacji grupowej
::----------------------------------------------------------------------------------------------------------------------
_autoakc:={? var_pres('_a')=type_of(0) || _a || 0 ?};

VAR_DEL.delete('__ndgr_pdf');
VAR_DEL.delete('__GRP_DR');

_Sel:=ND.sel_aget();
{? _autoakc & _Sel.first()
|| {!
    |? _Sel.del()
    !}
?};
{? ~_Sel.first()
|| _Sel.REF:=#ND.ref();
   _Sel.add()
?};

_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_EAMG';
_params.AKCJA:={? _autoakc || 'AkceptujAuto' || 'Akceptuj' ?};
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);

{? _Sel.first() & _Sel.next()
|| _params.GRUPA:='T';
   {? ~FUN.ask('Zaakceptować zaznaczone dokumenty?'@)
   || return(0)
   ?};
   __GRP_DR:=obj_new('GR','SEL','SIZE','FIRST','ESC','WZ','PDF','SHOW_PDF','DR_N_AKC','JEZYK','JEZYK_KH','DR_N_CAN');
   __GRP_DR.GR:=1;
   __GRP_DR.PDF:=1;
   __GRP_DR.FIRST:=1;
   __GRP_DR.SHOW_PDF:=0;
   __GRP_DR.ESC:=0;
   exec('ini_kom','#message','Grupowe akceptuj'@)
|? _autoakc=2
|| _params.GRUPA:='T'
?};

_loop:=_Sel.first();
{!
|? _loop
|! {? ND.seek(_Sel.REF,)
   || _params.UIDREF:=ND.uidref();
      exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ND',ND.ref());
      exec('mp_run','#b__box',_params)
   ?};
   _loop:=_Sel.next()
!};
{? _params.GRUPA='T' & _autoakc<>2
|| exec('end_kom','#message');
   ND.sel_adel()
?};

VAR_DEL.delete('__ndgr_pdf');
VAR_DEL.delete('__GRP_DR');
FUN.grp_clear('nd_analiza_komplet');
FUN.grp_clear('ask_dokm_wys');

0


\nd_sym_it
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła określająca ikony
::----------------------------------------------------------------------------------------------------------------------
"{? ND.TYP().DS='T'
 || {? ND.F='T' || exec('zafakturowany','icon') || exec('pusta','#icon') ?}
 |? ND.TYP().P='T' & ND.TYP().Z='T'
 || _powZ:=exec('sprdk2fp','magdok_wspolne',ND.ref(),'Z',1);
    {? _powZ=1 || _powZ:=exec('sprdk2fp','magdok_wspolne',ND.ref(),'E',1) ?};
    {? ~(_powZ%*2)
    || exec('zafakturowany','icon')
    |? _powZ=3
    || exec('czesciowo','icon')
    || exec('pusta','#icon')
    ?}
 || ''
 ?}
"


\nd_zakoncz_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: zakończenie edycji dokumentu magazynowego
::----------------------------------------------------------------------------------------------------------------------
_act_uid:=exec('nd_dolacz_act_uid','magdok_nag',ND.TYP().P,TYPYDOK.KOOP);
exec('btn_EndPosition','okienka',_act_uid,ND.uidref(),ND
 ,'Zakończ_wer','Zakończyć rejestrację dokumentu %1?'@[ND.SYM])


\wysallnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: okienko redakcyjne do wyswietlenia dla wszystkich dokumentow
::  OLD: \wysallnd/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ND.TYP();
_win:=exec('nd_win_edit','magdok_nag');
ND.win_edit(_win);
ND.display()


\mst_min_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PS [2014]
:: OPIS: Po redakcji MST.MIN.
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('set_efld_opt_st','magdok_nag');
1


\mst_max_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PS [2014]
:: OPIS: Po redakcji MST.MAX.
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('set_efld_opt_st','magdok_nag');
1


\mst_zi_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PS [2014]
:: OPIS: Po redakcji MST.ZI.
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('set_efld_opt_st','magdok_nag');
1


\old_idmob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zwraca domyślny kod kreskowy dla starych dostaw
::   WE: _a - KTM
::       _b - ref M
::   WY: kod SCEAN
::----------------------------------------------------------------------------------------------------------------------
_scean:='';
MKODK.cntx_psh();
MKODK.index('OLD');
MKODK.prefix('T',_a,);
{? MKODK.first() || _scean:=MKODK.KODK ?};
MKODK.cntx_pop();
{? _scean=''
|| _scean:=exec('mkodkKODK','kody_kresk',_b);
   exec('mkodkadd','kody_kresk',_b,_scean,$_b,0,1)
?};
_scean


\typydok_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Formuła eksportująca wartość parametru TYPYDOK dla czynności
::   WE: _a - TYPYDOK.ref() - wartość parametru
::   WY: STRING - treść formuły która się wykona po stronie importu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_typydok:=_a;

_fml:='';

TYPYDOK.cntx_psh();
TYPYDOK.clear();
{? TYPYDOK.seek(_typydok)
||
   _fml:=exec('formulizer_common','#b_export');
   _fml+='
      TYPYDOK.cntx_psh();
      TYPYDOK.index(\'TYP\');
      TYPYDOK.prefix(\''+TYPYDOK.T+'\',);
      {? TYPYDOK.first()
      || _result.REF:=TYPYDOK.ref();
         _result.RESULT:=1
      || _result.RESULT:=0;
         _result.REF:=null();
         {? _komm>0
         ||
            _msg:=\'Nie znaleziono typu dokumentu magazynowego o symbolu: %1\'@[\''+TYPYDOK.T+'\'];
            exec(\'import_komm\',\'#b_export\',_msg)
         ?}
      ?};
      TYPYDOK.cntx_pop();
      _result
   ';
   _fml:=exec('formulizer_clean','#b_export',_fml)
?};
TYPYDOK.cntx_pop();
_fml


\ctrlEWID
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: sprawdza czy na podanym dokumencie są ceny zerowe i czy zaakceptowano poprzednie dostawy
::   WE: _a - ref ND
::   WY: 1-tak 0-nie
::  OLD: \ctrlEWID/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
ND.cntx_psh();
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first()
|| {!
   |? {? DK.C=0
      || _mag:=DK.N().MAG;
         _mat:=DK.M;
         _ref:=DK.ref();
         _refnd:=DK.N;
         _numnd:=$DK.N().TYP+form(DK.N().NR,-16,0,'99');
         _dttmr:=form(DK.N().DR)+form(DK.N().CR,,3);
         _odd:=1+(DK.name()+3);
         ND.cntx_psh();
         DK.cntx_psh();
         OKR.cntx_psh();
         OKR.index('MC');
         OKR.prefix(REF.FIRMA,1);
         {? OKR.first()
         || {!
            |? DK.index('DK_SM');
               DK.prefix(_mag,_mat,'N');
               {? DK.first() & {? _ref=DK.ref() || DK.next() || 1 ?} & _refnd<>DK.N
                & (_tmr:=exec('FindAndGet','#table',ND,DK.N,,"form(DR)+form(CR,,3)",0);
                   _num:=exec('FindAndGet','#table',ND,DK.N,,"$TYP+form(NR,-16,0,'99')",0);
                   {? (16+_num)=(16+_numnd)
                   || (16-_num)<(16-_numnd) | ((16-_num)=(16-_numnd) & _tmr<_dttmr)
                   || _tmr<_dttmr
                   ?}
                  )
               || _res:=0
               ?};
               _res & OKR.next()
            !}
         ?};
         ND.cntx_pop();
         DK.cntx_pop();
         OKR.cntx_pop()
      ?};
      _res & DK.next()
   !}
?};
ND.cntx_pop();
DK.cntx_pop();
_res


\rodzaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na wartość parametru RODZAJ
::   WE  [_a] - 0(domyślnie) wszystkie typy 1-bez dekompletacji
::   WY: ''-wszystkie dokumenty, 'Z'-zewnętrzne 'W'-wewnętrzne
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || _a:=0 ?};
_res:=~~;
_ch:={? _a || 'P' || 'W' ?};
_wyb:={? ~_a
      || FUN.choice('Wybierz rodzaj dokumentu:'@,,'&Zewnętrzny'@,'&Wewnętrzny'@,'&Dekompletacja'@)
      || FUN.choice('Wybierz rodzaj dokumentu:'@,,'&Zewnętrzny'@,'&Wewnętrzny'@)
      ?};
{? _wyb=1 || _res:='Z'
|? _wyb=2 || _res:='W'
|? _wyb=3 || _res:='D'
?};
_res



\filtrND
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Ustawia indeks/prefiks dla dokumentów magazynowych wg zmiennej
::   WE: _a - 'M'-miesięcznie 'R'-rocznie
::       [_b] - 1-bez typu dokumentu 0-domyślnie z TYPYDOK.ref()
::----------------------------------------------------------------------------------------------------------------------
_typ:=TYPYDOK.ref();
{? var_pres('_b')=type_of(0) & ~_b || _typ:=null() ?};
{? _typ<>null() || BEER.TYPYDOK:=_typ ?};
{? ND.f_active() || ND.f_clear() ?};
{? _a='M'
|| ND.index('NAGDOK');
   ND.prefix(ST.AR,ST.AM,ST.MAG,_typ)
|| ND.index('NAGROK');
   ND.prefix(ST.AR,ST.MAG,_typ)
?}


\addnag_mwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Dodaje nagłówek dokumentu - używana w webserwisie
::   WE: _a - "bufor" tabeli ND
::   WY: null() / ND.ref()
::----------------------------------------------------------------------------------------------------------------------
_buffer:=_a;
_nd:=exec('addnag','magdok_nag',
   _buffer.MAG,
   _buffer.AR,
   _buffer.AM,
   _buffer.TYP,
   'N',,
   _buffer.D,,
   _buffer.KH
);
{? type_of(_nd)=7
||
   ND.cntx_psh();
   ND.clear();
   {? ND.seek(_nd,ref_name(_nd))
   ||
      {? _buffer.KH_ODB<>null() || ND.KH_ODB:=_buffer.KH_ODB ?}
   ?};
   ND.prefix();
   ND.put();
   ND.cntx_pop()
?};
_nd


\nd_dane_do_intrastat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Dane do intrastat - nagłówek dokumentu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
{? ~ND.get() || return(0) ?};
{? exec('nie_dotyczy','intrastat','ND') || return(0) ?};
ND.cntx_psh();
ND.win_edit('INTRA');
exec('set_efld_opt','magdok_nag');
{? ND.INTRAKC='T' | ND.INTRA='T'
||
   ND.display()
||
:: można zmieniać dane do intrastat czasu uwzględnienia dokumentu w deklaracji
   _wyn:=0;
   {? ~ND.r_lock(1,1,1)
   ||
      {? FUN.ask('Dokument obsługuje inny operator.\nCzy chcesz zobaczyć kto?'@) & ND.r_lock()
      || ND.r_unlock()
      ?}
   ||
      _ist_typ:=ND.IST_TYP;
      {? ND.edit("exec('chk_n_intrastat','magdok_nag',ND.Z)")
      ||
         _result:=ND.put();
         {? _result
         ||
            {? (ND.IST_TYP<>'' & ND.INTRA='N') | _ist_typ<>ND.IST_TYP
            ||
               DK.cntx_psh();
               DK.index('DOKMAG');
               DK.prefix(ND.ref);
               {? DK.first()
               ||
                  {!
                  |?
                     {? _ist_typ<>ND.IST_TYP
                     ||
                        {? ND.IST_TYP=''
                        ||
                           _mat:=DK.M;
                           DK.M:=null();
:: zerowanie danych do intrastat
                           exec('ist_wart_dk','magdok_poz',0);
                           DK.M:=_mat
                        ?}
                     ?};
:: przepisanie danych intrastat z nagłówka dokumentu
                     exec('istatr_nd2dk','magdok_poz');
                     _result:=DK.put();
                     _result & DK.next
                  !}
               ?};
               DK.cntx_pop()
            ?}
         ?}
      ?};
      ND.r_unlock()
   ?}
?};
ND.cntx_pop();
_result


\nd_dane_do_intrastat_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Dane do intrastat - akceptacja
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~ND.get() || return(0) ?};
{? ND.IST_TYP=''
||
   FUN.info('Dokument nie dotyczy Intrastat.'@)

|? ND.INTRAKC='T'
||
   FUN.info('Dane do Intrastat są zaakceptowane.'@)
||
   {? ~ND.r_lock(1,1,1)
   ||
      {? FUN.ask('Dokument obsługuje inny operator.\nCzy chcesz zobaczyć kto?'@) & ND.r_lock()
      || ND.r_unlock()
      ?}
   ||
      {? FUN.ask('Czy zaakceptować dane do Intrastat?'@)
      ||
         _ok:=1;
         exec('ini_kom','#message','Akceptacja danych do Intrastat');
         DK.cntx_psh();
         DK.index('DOKMAG');
         DK.prefix(ND.ref());
         _loop:=DK.first();
         {!
         |? _loop
         |!
            _ok:=exec('chk_dk_intrastat','magdok_poz')='';
            _loop:=_ok & DK.next()
         !};
         DK.cntx_pop();
         {? _ok
         ||
            ND.INTRAKC:='T';
            ND.put()
         ||
            exec('end_kom','#message')
         ?}
      ?};
      ND.r_unlock()
   ?}
?}


\nd_dane_do_intrastat_wyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Dane do intrastat - wycofanie akceptacji
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~ND.get() || return(0) ?};
{? ND.INTRAKC<>'T'
||
   FUN.info('Dane do intrastat są niezaakceptowane.'@)
||
   {? ~ND.r_lock(1,1,1)
   ||
      {? FUN.ask('Dokument obsługuje inny operator.\nCzy chcesz zobaczyć kto?'@) & ND.r_lock()
      || ND.r_unlock()
      ?}
   ||
      {? FUN.ask('Czy wycofać akceptację danych do intrastat?'@)
      ||
         ND.INTRAKC:='N';
         ND.put()
      ?};
      ND.r_unlock()
   ?}
?}


\nd_nip_ue
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: Ustawia wartość ND.NIP_UE
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ND.KH=null()
|| INTRAST.NIP:=ND.NIP_UE:=''
|| {? INTRAST.NIP<>''
   ||
      _nip:=INTRAST.NIP;
      _snip:={? (1+(2-_nip))=' ' || (2+_nip)+(3-_nip) || _nip ?};
      NIPY.index('SNIP');
      NIPY.prefix(ND.KH,_snip);
      {? NIPY.first()
      ||
         INTRAST.NIP:=ND.NIP_UE:={? NIPY.next() || '' || exec('nip_ue','kontrahent') ?}
      ||
         INTRAST.NIP:=ND.NIP_UE:=''
      ?}
   ?};
   {? INTRAST.NIP='' & (ND.TYP().UE='T' | ND.KH().TYP='U')
   ||
      ND.NIP_UE:='';
      NIPY.index('SNIP');
      NIPY.prefix(ND.KH);
      {? NIPY.first()
      ||
         INTRAST.NIP:=ND.NIP_UE:={? NIPY.next() || '' || exec('nip_ue','kontrahent') ?};
         {? INTRAST.NIP=''
         ||
::          Jeżeli do kontrahenta przypisano więcej NIP-ów, to sprawdzam czy posiada NIP domyślny
            NIPY.index('DEFAULT');
            NIPY.prefix(ND.KH,'T');
            {? NIPY.first()
            ||
               INTRAST.NIP:=ND.NIP_UE:={? NIPY.next() || '' || exec('nip_ue','kontrahent') ?}
            ?}
         ?}
      ?}
   ?}
?}


\pw_ndt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Przed wyświetleniem godziny dokumentu
::   WE: [_a] - 0(domyślnie)-na nagłówku 1-zmienna
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_tim:={? ~_tryb || ND.T || ZAKR.TP ?};
_dat:={? ~_tryb || ND.D || ZAKR.DP ?};
_mag:={? ~_tryb || ND.MAG || exec('FindInSet','#table','MG','MAGAZYNY',ZAKR.MGSYM,ZAKR.MGSYM) ?};

_res:='';

{? _tim<>time(0,0,0)
|| _res:=''
|| {? ~exec('spr_dttm','magazyn_inw',_mag,_dat) || _res:=exec('findfnv','#color') ?}
?};
_res


\pr_ndt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Przed redakcją godziny dokumentu
::   WE: [_a] - 0(domyślnie)-na nagłówku 1-zmienna (DP) 2-zmienna (DR)
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_tim:={? ~_tryb || ND.T |? _tryb=1 || ZAKR.TP || ZAKR.TR ?};
_dat:={? ~_tryb || ND.D |? _tryb=1 || ZAKR.DP || ZAKR.DR ?};
_mag:={? ~_tryb || ND.MAG || exec('FindInSet','#table','MG','MAGAZYNY',ZAKR.MGSYM,ZAKR.MGSYM) ?};
_mad:={? ~_tryb || ND.MD || null() ?};

_res:=1;
{? _tim<>time(0,0,0)
|| _res:=1
|| {? ~exec('spr_dttm','magazyn_inw',_mag,_dat)
   || _res:=0
   || {? ~_tryb
      || ND.T:=exec('spr_dttm','magazyn_inw',_mag,_dat,1);
         {? ND.T=time(0,0,0) & _mad<>null()
         || ND.T:=exec('spr_dttm','magazyn_inw',_mad,_dat,1)
         ?}
      || ZAKR.TP:=exec('spr_dttm','magazyn_inw',_mag,_dat,1)
      ?};
      _res:=1
   ?}
?};
_res


\po_ndt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Po redakcji godziny dokumentu
::   WE: [_a] - 0(domyślnie)-na nagłówku 1-zmienna
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_tim:={? ~_tryb || ND.T |? _tryb=1 || ZAKR.TP ||ZAKR.TR ?};
_dat:={? ~_tryb || ND.D |? _tryb=1 || ZAKR.DP || ZAKR.DR ?};
_mag:={? ~_tryb || ND.MAG |? _tryb=1 || exec('FindInSet','#table','MG','MAGAZYNY',ZAKR.MGSYM,ZAKR.MGSYM) || null() ?};

_res:=1;
{? _tryb=2
|| {? ~exec('sprd_rea','zamsiw_rea',ZAKR.DR,ZAKR.TR)
   || FUN.info('Na jednym z magazynów wprowadzono inwentaryzację.'@);
      _res:=0
   ?}
|| _ctrl:=exec('spr_dttm','magazyn_inw',_mag,_dat,2,_tim);
   {? _ctrl='C'
   || FUN.info('Uwaga. Wprowadzono arkusz inwentaryzacji ciągłej.\n'
       'Nie wszystkie indeksy materiałowe będzie można zarejestrować\n'
       'w dokumencie na dzień %1 i godzinę %2.\n\n'
       'Dokładniej zarejestrować można tylko te,'
       ' których nie ma na arkuszu inwentaryzacyjnym.'@[form(_dat),form(_tim)]);
      _res:=1
   |? _ctrl='A'
   || FUN.info('Wprowadzono arkusz inwentaryzacji pełnej.\n'
       'Dokumentu na dzień %1 i godzinę %2 nie można zarejestrować.'@[form(_dat),form(_tim)]);
      _res:=0
   |? _ctrl='P'
   || FUN.info('Uwaga. Wprowadzono arkusz przecen.\n'
       'Nie wszystkie indeksy materiałowe będzie można zarejestrować\n'
       'w dokumencie na dzień %1 i godzinę %2.\n\n'
       'Dokładniej zarejestrować można tylko te,'
       ' których nie ma na arkuszu przeceny.'@[form(_dat),form(_tim)]);
      _res:=1
   ?}
?};
_res


\chk_partia_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Sprawdza zgodnosc wypełnienia partii na pozycjach dokumentu wydania kooperacji
::   WE: _a - ND.ref()
::       _b - 0/[1] - komunikaty
::   WY: 0 - sa niezgodnosci
::       1 - brak niezgodnosci
::----------------------------------------------------------------------------------------------------------------------
_nd:=_a;
_czykom:=1;
{? var_pres('_b')=type_of(0)
|| _czykom:=_b
?};

_result:=1;
_can_continue:=1;

ND.cntx_psh(); ND.clear();
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_nd);

{? DK.first()
||
:: deklaracje obiektow dla komunikatow
   exec('JCQ_decl','#message');
   {? var_press('KOM_TMP')<100
   || KOM_TMP:=obj_new(@.CLASS.JCQ)
   ?};
   KOM_TMP.init(250,,'Weryfikacja zgodności wypełnienia partii'@,'',,,0);
   {!
   |?
      {? DK.ZL<>null() & DK.PARTIA=null() & exec('party_req','zl_wyk',DK.ZL)
      ||
::       Dodaje info do KOMM
         {? _czykom
         || _dk_sym:=exec('FindAndGet','#table',ND,#DK.N,ref_name(DK.N),"SYM",'');
            _dk_sym+=' poz. '+$DK.P;
            _msg:='Należy wybrać partię dla dokumentu %1.'@[_dk_sym];
            KOM_TMP.add(_msg,'xwin16.png:2')
         ?};
         _result:=0
      ?};
      DK.next()
   !};
   {? _czykom
   || KOM_TMP.select()
   ?};
   VAR_DEL.delete('KOM_TMP')
?};
DK.cntx_pop();
ND.cntx_pop();
_result


\nd_war_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Formuła określająca ikony dla powiązanych opłat
::----------------------------------------------------------------------------------------------------------------------
"{? exec('FindInSet','#table','FAKS_K','TAXS',ND.uidref())<>null()
 || 'xwin16.png:10'
 || exec('pusta','#icon')
 ?}
"

:Sign Version 2.0 jowisz:1045 2024/02/21 08:46:47 34080626cfdd6c01ed309fc49c92438ecc835929d674fad7c3866ed08cdc664473b50550114e7bba3b5ba61eb5ac3df8250af2a626fe08216ff668e41924e2e1291846d2c6208d687d5a9e2a47ab803fe7682dfb3d59a31e5f1b84c304ec22f21e954b85e976d93c27eda57618207b322d2f4e4d990c296b2c30ec34185b73c6
