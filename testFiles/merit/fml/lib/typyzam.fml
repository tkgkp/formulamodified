:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: typyzam.fml
:: Utworzony: 08.09.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Typy zamówień
::======================================================================================================================


\zam_coun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: czy mozna edytowac pola w TYPYZAM
::  OLD: \zam_coun/firma.fml
::----------------------------------------------------------------------------------------------------------------------
TYPYZAM.cntx_psh();
{? 1+menu_txt()='D'
|| _wyn:=1
|| _wyn:=~TYPYZAM.count()
?};
{? TYPYZAM.R='D'
|| BEER.NRDOK_AB:='ZD_NAG'
|? (';ZW'*TYPYZAM.R)>1
|| BEER.NRDOK_AB:='ZK_N'
?};
TYPYZAM.cntx_pop();
_wyn


\typ_tzam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: filtr dla TYPYDOK
::  OLD: \typ_tzam/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? TYPYZAM.R='Z'
|| TYPYDOK.index('TYP');
   TYPYDOK.prefix();
   TYPYDOK.f_clear();
   TYPYDOK.f_set('T,NAZ',,'\"TYPYDOK\".P=\'N\' and \"TYPYDOK\".Z=\'T\' and \"TYPYDOK\".DS=\'T\'');
   1
|? TYPYZAM.R='W'
|| TYPYDOK.index('TYP');
   TYPYDOK.prefix();
   TYPYDOK.f_clear();
   TYPYDOK.f_set('T,NAZ',,'\"TYPYDOK\".P=\'N\' and \"TYPYDOK\".Z=\'N\' and \"TYPYDOK\".T<>\'INW-\' '+
            'and \"TYPYDOK\".T<>\'PRC-\' and \"TYPYDOK\".DK=\'N\'');
   1
|? TYPYZAM.R='D'
|| TYPYDOK.index('TYP');
   TYPYDOK.prefix();
   TYPYDOK.f_clear();
   TYPYDOK.f_set('T,NAZ',,'\"TYPYDOK\".P=\'T\' and \"TYPYDOK\".Z=\'T\' and \"TYPYDOK\".DK=\'N\' '+
            'and \"TYPYDOK\".DN=\'N\'');
   1
|| 0
?}


\zam_dolt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: dolaczanie typu zamowienia
::  OLD: \zam_dolt/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_typzam:=
   {? var_pres('R',params_get())=type_of('')
   || {? params_get().R='D' || 3
      |? params_get().R='Z' || 1
      |? params_get().R='W' || 2
      |? params_get().R='O' || -1
      || 0
      ?}
   || 0
   ?};
{? _typzam<>0
|| TYPYZAM.blank();
   {? _typzam=3
   || TYPYZAM.R:='D'; BEER.NRDOK_AB:='ZD_NAG';
      TYPYZAM.cntx_psh;
      TYPYZAM.index('TYP');
      TYPYZAM.prefix('D','....');
      _typ:='....'+form({? TYPYZAM.last() || #(4-TYPYZAM.T) || 0 ?}+1,-4,0,'99');
      TYPYZAM.cntx_pop;
      TYPYZAM.T:=_typ;
      TYPYZAM.add()
   |? _typzam=1
   || TYPYZAM.R:='Z'; BEER.NRDOK_AB:='ZK_N'
   |? _typzam=2
   || TYPYZAM.R:='W'; BEER.NRDOK_AB:='ZK_N';
      TYPYZAM.cntx_psh;
      TYPYZAM.index('TYP');
      TYPYZAM.prefix('W','....');
      _typ:='....'+form({? TYPYZAM.last() || #(4-TYPYZAM.T) || 0 ?}+1,-4,0,'99');
      TYPYZAM.cntx_pop;
      TYPYZAM.T:=_typ;
      TYPYZAM.add()
   |? _typzam=-1
   || TYPYZAM.R:='O'; BEER.NRDOK_AB:='OFE'
   ?};
   {? TYPYZAM.edit("exec('typz_rez','typyzam')")
   || {? _typzam>1 || TYPYZAM.put() || TYPYZAM.add() ?}
   || {? _typzam>1
      || ETZAPZAM.index('TZAM'); ETZAPZAM.prefix(TYPYZAM.ref());
         {? ETZAPZAM.first || {! |? ETZAPZAM.del() !} ?};
         TYPYZAM.del()
      ?}
   ?}
?};
''


\pw_typzm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed wyswietleniem ZMIENNE.TYPZAM
::  OLD: \pw_typzm/defin.fml
::----------------------------------------------------------------------------------------------------------------------
ZMIENNE.TYPZAM:={? (4+TYPYZAM.T)<>'....' || TYPYZAM.T || '' ?}


\pr_typzm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: przed redakcja ZMIENNE.TYPZAM
::  OLD: \pr_typzm/defin.fml
::----------------------------------------------------------------------------------------------------------------------
exec('mod_typ','typyzam','TYPYZAM')


\po_typzm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji ZMIENNE.TYPZAM
::  OLD: \po_typzm/defin.fml
::----------------------------------------------------------------------------------------------------------------------
TYPYZAM.T:=ZMIENNE.TYPZAM;
1


\mod_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: sprawdza czy mozna modyfikowac pole typ
::       czy nie zostal przypisany do uprawnien uzytkownikow
::   WE: _a - akronim tabeli typow ('TYPYDOK', 'TYPYSP', 'TYPYZAM')
::   WY: 0/1
::  OLD: \mod_typ/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_typ:=($(_a+'.T'))();
_grp:='Informacje dotyczące typu '+_typ+'.';
exec('ini_kom','#message','Modyfikacja typu niemożliwa.'@,_grp);
_wyn:=1;
{? -(1+menu_txt())<>'d'
||
   ($(_a+'.cntx_psh()'))();
   _count:=($(_a+'.count()'))();
   _count-=exec('infdodef_size','typyzam',_a);
   {? _count<>0
         &
      (_a<>'TYPYDOK' | exec('dk_count','typydok',0)=0)
   ||
      exec('add_kom','#message','Typ wykorzystywany w systemie.'@,7,_grp);
      _wyn:=0
   ||
      exec('add_kom','#message','W systemie nie wystawiono jeszcze dokumentów typu %1.'@[_typ],7,_grp)
   ?};
   ($(_a+'.cntx_pop()'))();

   _fo:='~~';
   {? _a='TYPYDOK'
   || _fo:=1001
   |? _a='TYPYSP'
   || _fo:={? TYPYSP.ZAK='N' || 2002 || 6002 ?}
   |? _a='TYPYZAM'
   || _fo:=3004
   ?};

   USERS.index('USR_KKOD');
   USERS.prefix();
   {? USERS.first()
   ||
      _licz:=0;
      {!
      |?
         _upr:=exec('get','#params',_fo,2,USERS.ref());
         {? _upr<>''
         ||
            _stop:={? _upr*(' '+_typ+' ')>0 || 1 || _upr*(_typ+' ')=1 ?};
            {? _stop=1
            ||
               {? _licz=0
               || exec('add_kom','#message','Przypisano uprawnienia do danego typu użytkownikom:'@,26,_grp)
               ?};
               exec('add_kom','#message','- '+USERS.DANE,110,_grp);
               _licz+=1;
               _wyn:=0
            ?}
         ?};
         USERS.next()
      !}
   ?};
   {? _a='TYPYDOK'
   ||
      USERS.index('USR_KKOD');
      USERS.prefix();
      {? USERS.first()
      ||
         _licz:=0;
         {!
         |?
            _upr:=exec('get','#params',1002,2,USERS.ref());
            {? _upr<>''
            ||
               {? _upr=_typ
               ||
                  {? _licz=0
                  || exec('add_kom','#message','Domyślny typ dokumentu magazynowego dla użytkowników:'@,26,_grp)
                  ?};
                  exec('add_kom','#message','- '+USERS.DANE,110,_grp);
                  _licz+=1;
                  _wyn:=0
               ?}
            ?};
            USERS.next()
         !}
      ?};
::    sprawdzenie Formul globalnych
::    Produkcja
      {? (' '+exec('get','#params',500701,2,null()))*(' '+_typ+' ')
      || exec('add_kom','#message','Typ %1 jest wybrany dla dokumentów raportujących produkcję (500701).'@[_typ],7,_grp)

      |? (' '+exec('get','#params',500703,2,null()))*(' '+_typ+' ')
      || exec('add_kom','#message','Typ %1 jest wybrany dla dokumentów zwrotu produktu na produkcję (500703).'@[_typ],7,_grp)

      |? (' '+exec('get','#params',500705,2,null()))*(' '+_typ+' ')
      || exec('add_kom','#message','Typ %1 jest wybrany dla dokumentów rejestrujących odpady/koprodukty (500705).'@[_typ],7,_grp)

      |? (' '+exec('get','#params',500707,2,null()))*(' '+_typ+' ')
      || exec('add_kom','#message','Typ %1 jest wybrany dla dokumentów rozchodowych na zlecenie (500707).'@[_typ],7,_grp)

      |? (' '+exec('get','#params',500709,2,null()))*(' '+_typ+' ')
      || exec('add_kom','#message','Typ %1 jest wybrany dla dokumentów zwrotu z produkcji (500709).'@[_typ],7,_grp)
      ?};
      ~~
   ?}
?};
{? _wyn=0
|| exec('end_kom','#message')
|| VAR_DEL.delete('__kom')
?};
_wyn


\pw_etypz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed wyswietleniem pola ZMIENNE.ETYPZAP
::  OLD: \pw_etypz/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_typzam:=TYPYZAM.R;
{? 'DW'*_typzam & exec('fks_lic','fks')='T' & (_odd:=exec('FindInSet','#table','ODDZ','KOD',ST.ODDZ,,"ODDZ.ODD"))<>null
|| SKID.ROK_ZAP:=exec('zwrrok_f','okresy',date(ST.AR,ST.AM,0));
   ZMIENNE.ETYPZAP:={? SKID.ROK_ZAP<>null
                    || ETZAPZAM.cntx_psh();
                       ETZAPZAM.index('TZAM'); ETZAPZAM.prefix(TYPYZAM.ref(),SKID.ROK_ZAP,_odd);
                       _etyp:={? ETZAPZAM.first || '<F3: '+ETZAPZAM.ETYPY().NAZWA+'>' || '' ?};
                       {? _etyp=''
                       || ETZAPZAM.prefix(TYPYZAM.ref());
                          {? ETZAPZAM.first() || _etyp:='<F3>' ?}
                       ?};
                       ETZAPZAM.cntx_pop();
                       _etyp
                    || ''
                    ?}
|| ZMIENNE.ETYPZAP:=''
?}


\pr_etypz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcja pola ZMIENNE.ETYPZAP
::  OLD: \pr_etypz/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_typzam:=TYPYZAM.R;
{? 'DW'*_typzam & exec('fks_lic','fks')='T' & (_odd:=exec('FindInSet','#table','ODDZ','KOD',ST.ODDZ,,"ODDZ.ODD"))<>null
|| exec('f3_etypz','typyzam');
   ZMIENNE.ETYPZAP:={? SKID.ROK_ZAP<>null
                    || ETZAPZAM.cntx_psh();
                       ETZAPZAM.index('TZAM');
                       ETZAPZAM.prefix(TYPYZAM.ref(),SKID.ROK_ZAP,_odd);
                       _etyp:={? ETZAPZAM.first
                              || TYPYZAM.ZAP:='T';
                                 '<F3: '+ETZAPZAM.ETYPY().NAZWA+'>'
                              || ''
                              ?};
                       ETZAPZAM.cntx_pop();
                       _etyp
                    || ''
                    ?};
   win_disp();
   0
|| ZMIENNE.ETYPZAP:='';
   0
?}


\f3_etypz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: klawisz F3 pola ZMIENNE.ETYPZAP
::  OLD: \f3_etypz/defin.fml
::----------------------------------------------------------------------------------------------------------------------
SKID.ZAPOT:=1;
ETYPY.win_dict('SLO'); ODD.win_dict('SLO'); ROK_F.win_dict('WER');
ETZAPZAM.index('TZAM');
ETZAPZAM.prefix(TYPYZAM.ref());
ETZAPZAM.find_key(SKID.ROK_ZAP);
ETZAPZAM.select(,1);
SKID.ZAPOT:=0


\po_etypz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji pola ZMIENNE.ETYPZAP
::  OLD: \po_etypz/defin.fml
::----------------------------------------------------------------------------------------------------------------------
1


\typz_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: akcja rekord po dla typów zamownień
::   WE: [_a] - 'add' / 'put' - dołączenie lub poprawa rekordu
::  OLD: \typz_rez/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};

{? _a='' & -(1+menu_txt)='d'
||
   _a:='add'
?};
_akcja:=_a;

_wyn:='';
{? form(TYPYZAM.T)=''
|| FUN.info('Należy podać typ zamówienia.'@);
   _wyn:='TYPZAM'
|? TYPYZAM.T*' '
|| FUN.info('W typie zamówienia nie może być znaku SPACJI.'@);
   _wyn:='TYPZAM'
|? TYPYZAM.NAZ=''
|| FUN.info('Należy podać nazwę typu zamówienia.'@);
   _wyn:='NAZ'
|? form(TYPYZAM.KOD)=''
|| FUN.info('Należy podać kod numeracji.'@);
   _wyn:='KOD'
|? _wyn='' & TYPYZAM.TYPYDOK<>null
||
   {? TYPYZAM.R='Z'
   || {? TYPYZAM.TYPYDOK().Z='T' &  TYPYZAM.TYPYDOK().P='N' & TYPYZAM.TYPYDOK().DS='T' & TYPYZAM.TYPYDOK().DK='N'
      || 1
      || FUN.info(
            'Niedozwolony typ dokumentu realizującego.\n'
            'Należy wybrać typ dokumentu:\n'
            'Zewnętrzny, Rozchodowy, Tworzący dokument sprzedaży.'@
         );
         _wyn:='TYPYDOK'
      ?}
   |? TYPYZAM.R='D'
   || {? TYPYZAM.TYPYDOK().Z='T' & TYPYZAM.TYPYDOK().P='T' & TYPYZAM.TYPYDOK().DK='N' & TYPYZAM.TYPYDOK().DN='N'
      || 1
      || FUN.info(
            'Niedozwolony typ dokumentu realizującego.\n'
            'Należy wybrać typ dokumentu:\n'
            'Zewnętrzny, Przychodowy.'@
         );
         _wyn:='TYPYDOK'
      ?}
   |? TYPYZAM.R='W'
   || {? TYPYZAM.TYPYDOK().Z='N' &  TYPYZAM.TYPYDOK().P='N' & TYPYZAM.TYPYDOK().DS='N' & TYPYZAM.TYPYDOK().DK='N'
        & TYPYZAM.TYPYDOK().T<>'PRC-' & TYPYZAM.TYPYDOK().T<>'INW-'
      ||
::       Jeżeli typ zamówienia realizuje wydania limitów zlecenia (parametr 500011) to weryfikowany jest wybrany typ
::       magazynowego dokumentu realizacji
         {? exec('get','#params',500011,2,null())=TYPYZAM.T
         || _res:=0;
            _lista:=exec('get','#params',500707,2,null());
            _TypDok:=_lista;
::            _lista:=exec('get','#params',500705,2,null());
::            _TypDok+=_lista;
            {? _TypDok<>''
            || _tab:=spli_str(_TypDok,' ');
               _ii:=0;
               {!
               |? _ii+=1;
                  {? TYPYZAM.TYPYDOK().T=_tab[_ii]
                  || _res:=1
                  ?};
                  _res=0 & _ii<obj_len(_tab)
               !}
            || {? TYPYZAM.TYPYDOK().ZLEC='T' & TYPYZAM.TYPYDOK().WYR='N' || _res:=1 ?}
            ?};
            {? _res
            || 1
            || FUN.info(
                  'Typ zamówienia odpowiedzialny za realizację limitów zleceń (parametr %1).\n'
                  'Typ dokumentu realizującego musi być powiązany ze zleceniem\n'
                  'oraz znajdować się na liście dostępnych typów rozchodowych zlecenia (parametr %2).'@
                  ['500011','500707']
               );
               _wyn:='TYPYDOK'
            ?}
         || 1
         ?}
      || FUN.info(
            'Niedozwolony typ dokumentu realizującego.\n'
            'Należy wybrać typ dokumentu:\n'
            'Wewnętrzny, Rozchodowy, Niezwiązany z inwentaryzacją, przeceną, korektą dostaw.'@
         );
         _wyn:='TYPYDOK'
      ?}
   ?}
?};

{? _wyn='' & form(TYPYZAM.KOD)<>''
||
   _ok:=0;
   NRDOK.index('NRDOK');
   NRDOK.prefix(TYPYZAM.KOD,);
   {? NRDOK.first()
   ||
      NRDOK.index('NRDOK_AB');
      {? TYPYZAM.R='Z' | TYPYZAM.R='W'
      || NRDOK.prefix('ZK_N','ZK_N',TYPYZAM.KOD,)
      |? TYPYZAM.R='D'
      || NRDOK.prefix('ZD_NAG','ZD_NAG',TYPYZAM.KOD,)
      ?};
      {? ~NRDOK.first()
      || FUN.info('Kod numeracji %1 niezgodny z typem dokumentu.'@[TYPYZAM.KOD]);
         _wyn:='KOD'
      ?}
   ||
      FUN.info('Brak numeracji o kodzie %1.'@[TYPYZAM.KOD]);
      _wyn:='KOD'
   ?}
?};

{? _wyn=''
||
   _kod:=TYPYZAM.T;
   _ref:=TYPYZAM.ref();
   TYPYZAM.cntx_psh();
   _ndx:=TYPYZAM.ndx_tmp(,,'T',,,'T',,);
   TYPYZAM.index(_ndx);
   TYPYZAM.prefix(_kod,_kod);
   {? TYPYZAM.first()
   ||
      {!
      |?
        {? TYPYZAM.ref()<>_ref | _akcja='add'
        || FUN.info('Istnieje już typ %1.'@[_kod]); _wyn:='TYPZAM'
        ?};
        _wyn='' & TYPYZAM.next()
      !}
   ?};
   TYPYZAM.ndx_drop(_ndx);
   TYPYZAM.cntx_pop()
?};
{? _wyn=''
|| ETZAPZAM.index('TZAM');
   ETZAPZAM.prefix(TYPYZAM.ref());
   TYPYZAM.ZAP:={? ETZAPZAM.first() || 'T' || 'N' ?}
?};
:: Sprawdzanie poprawnosci zwrotu planowania i znacznika kontunuacji po przekroczeniu
{? _wyn=''
|| _wyn:=exec('pl_force_chk','px_utils','TYPYZAM')
?};
_wyn


\typz_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja przed usun dla typow zamowien TYPYZAM
::  OLD: \typz_del/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? exec('mod_typ','typyzam','TYPYZAM')
||
   _czy_zam:=sql({? TYPYZAM.R='Z'
                 || 'select count(ZK_N.T) ILE from @ZK_N where ZK_N.T=:_a'
                 || 'select count(ZD_NAG.T) ILE from @ZD_NAG where ZD_NAG.T=:_a'
                 ?},TYPYZAM.ref);

   {? (_czy_zam.first & _czy_zam.ILE<>0)
   ||
      FUN.info('Wybrany typ jest powiązany z zamówieniami.\nUsunięcie niemożliwe.'@)
   ||
::    usuwamy przypisane typy zapotrzebowan
      ETZAPZAM.index('TZAM'); ETZAPZAM.prefix(TYPYZAM.ref());
      {? ETZAPZAM.first || {! |? ETZAPZAM.del !} ?};
      exec('delfakso','fakso','faktodef','TYZ',TYPYZAM.ref());
      _wyn:=1
   ?}
?};
_wyn


\infd_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: rr [2008]
:: OPIS: informacje dodatkowe dla typow zamowien
::   WY: ''
::  OLD: \infd_zam/autfakso.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.TYPYZAM:=TYPYZAM.ref();
POM.TYPYDOK:=POM.TYPYSP:=null;

FAKSO.cntx_psh();
FAKSO.use('faktodef');
FAKSO.win_sel('WERT');
FAKSO.index('TYZ');
FAKSO.prefix(BEER.TYPYZAM);
FAKSO.select();
FAKSO.cntx_pop();
BEER.TYPYZAM:=null;
''


\typyzam_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Formuła eksportująca wartość parametru TYPYZAM dla czynności
::   WE: _a - TYPYZAM.ref() - wartość parametru
::       _b - rodzaj
::   WY: STRING - treść formuły która się wykona po stronie importu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_typyzam:=_a;
_rodzaj:=_b;

_fml:='';

TYPYZAM.cntx_psh();
TYPYZAM.clear();
{? TYPYZAM.seek(_typyzam)
||
   _fml:=exec('formulizer_common','#b_export');
   _fml+='
      TYPYZAM.cntx_psh();
      TYPYZAM.index(\'TYP\');
      TYPYZAM.prefix(\''+_rodzaj+'\',\''+TYPYZAM.T+'\',);
      {? TYPYZAM.first()
      || _result.REF:=TYPYZAM.ref();
         _result.RESULT:=1
      || _result.RESULT:=0;
         _result.REF:=null();
         {? _komm>0
         ||
            _msg:=\'Nie znaleziono typu dokumentu zamówień o symbolu: %1\'@[\''+TYPYZAM.T+'\'];
            exec(\'import_komm\',\'#b_export\',_msg)
         ?}
      ?};
      TYPYZAM.cntx_pop();
      _result
   ';
   _fml:=exec('formulizer_clean','#b_export',_fml)
?};
TYPYZAM.cntx_pop();
_fml


\infdodef_size
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS:
::   WE: _a 'TYPYDOK'/'TYPYSP'/'TYPYZAM'
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_ind:={? _a='TYPYDOK' || 'TYM' |? _a='TYPYSP' || 'TYP' |? _a='TYPYZAM' || 'TYZ' || '' ?};
{? _ind<>''
||
   FAKSO.cntx_psh();
   FAKSO.use('faktodef');
   FAKSO.index(_ind);
   FAKSO.prefix(($(_a+'.ref()'))());
   _res:=FAKSO.size();
   FAKSO.cntx_pop()
?};
_res

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:39 b508424136f4a87d365aca64eb5e282fb985e0035b8001b4d202fa50830d44c545b0818faef4d70b6ea58f081840b41773099ccb1b6b88980e03b690ac7df9f7cd88b1b5529abf0c562a9e4969e316af0af605ef2f3809f92bb43d73dc9f3ea5b9730bc001e9cfdaaf7818a2e0690c9ceab210647b6bf33ef0f6215b2db9e4d9
