:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: faktury_nag.fml
:: Utworzony: 26.03.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Obsługa dokumentów sprzedaży i zakupu - nagłówki dokumentów
::            !!! Nowe funkcje dopisywać w faktury_nag1.fml !!!
::======================================================================================================================

\buffer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Zwraca obiekt nazwany - bufor tabeli FAKS
::   WY: obj_new()
::----------------------------------------------------------------------------------------------------------------------
exec('FAKS','buffer')


\pr_d_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: Przed redakcja daty wystawienia
::   WY: 0-na popraw przy numeracji okresowej jak okres jest rozny od daty wystawienia 1-jest ok
::  OLD: \pr_d_wys/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.T().PAR='T'
|| return(0)
|| FZ.DWBE:=FAKS.DW;
   _wyn:=~((1+menu_txt())='P'
      & FAKS.DW<>date(0,0,0) & ((FAKS.DW~2)<>ST.AM | (FAKS.DW~1)<>ST.AR)
      & exec('czyokres','numery'));
   {? _wyn
:: korekta zbiorcza z wystawionymi korektami cząstkowymi
   || _wyn:=exec('kznf1_czy_ed','faktury_nag')
   ?};
   _wyn
?}


\ae_dw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: po radakcji FAKS.DW - data wystawienia
::  OLD: \ae_dw/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? FAKS.WHERE='K' || FZ.DWBE:=FAKS.TZ:=FAKS.DW ?};
{? (1+menu_txt())='P' & FAKS.T().KOR='T' & FAKS.FKSQL<>''
|| FAKS.cntx_psh;
   FAKS.use(8+FAKS.FKSQL);
   FAKS.prefix();
   {? FAKS.seek(FAKS.FKSQL)
   || xx_daw:=FAKS.DW
   ?};
   FAKS.cntx_pop
?};
{? FAKS.SZ='S' & FAKS.T().KOR='T' & FAKS.D=date(0,0,0)
|| {? FAKS.T().HIS='T' || xx_daw:=date(0,0,0)
   |? (1+menu_txt())='P' & 'MG'*FAKS.WHERE || xx_daw:=FAKS.DW
   ?}
?};

{? FAKS.SZ='S' & FAKS.T().KOR='T' & FAKS.DZ=date(0,0,0) & exec('czy_zwrot','faktury_nag',FAKS.ref())='T'
|| FAKS.DZ:=FAKS.DW
?};

{? (1+menu_txt())='P' & ((FAKS.DW~2)<>ST.AM | (FAKS.DW~1)<>ST.AR) & exec('czyokres','numery')
|| FUN.info('Numeracja faktur jest okresowa (zależna od miesiąca i roku)\n'
            'Należy podać datę wystawienia z okresu %1.'@ [form(date(ST.AR,ST.AM,0),,8)]);
   _wyn:=0
|? FAKS.T().KOR='T' & FAKS.DW<xx_daw
|| {? FAKS.T().HIS='T'
   || {? FKOR.DF=date(0,0,0)
      || FUN.info('Należy wprowadzić datę faktury korygowanej przed zmianą daty wystawienia.'@)
      || FUN.info('Nieprawidłowa data wystawienia korekty.\n'
          'Data powinna być większa lub równa od daty faktury korygowanej: %1.'@[form(xx_daw)])
      ?}
   || FUN.info('Nieprawidłowa data wystawienia korekty.\n'
         'Data powinna być większa lub równa od daty: %1.'@[form(xx_daw)])
   ?};
   _wyn:=0
|? FAKS.T().KOR='T'
  & {? FAKS.SZ='Z'
    || _msg:='Data wystawienia lub Data otrzymania musi pochodzić z miesiąca %1.'@[form(date(ST.AR,ST.AM,0),,8)];
       {? (FAKS.DW<date(ST.AR,ST.AM,1) | FAKS.DW>date(ST.AR,ST.AM,0))
       || (FAKS.DO<date(ST.AR,ST.AM,1) | FAKS.DO>date(ST.AR,ST.AM,0))
       || 0
       ?}
    || _msg:='Data wystawienia musi pochodzić z bieżącego miesiąca %1.'@[form(date(ST.AR,ST.AM,0),,8)];
       (FAKS.DW<date(ST.AR,ST.AM,1) | FAKS.DW>date(ST.AR,ST.AM,0))
    ?}
|| FUN.info(_msg);
   _wyn:=0
|? exec('get','#params',300803,2)='T' &
   FAKS.SYMF<>'' &
   FAKS.DW<(_data_wyst:=exec('FindAndGet','#table',FAKS,FAKS.SYMF,,"DW",0);_data_wyst)
|| FUN.info('Data wystawienia faktury nie może być wcześniejsza niż data wystawienia paragonu (%1).'@[$_data_wyst]);
   _wyn:=0
|| {? FAKS.SZ='S' & FAKS.D=date(0,0,0) & FAKS.PLISTA='T' & FAKS.WHERE<>'M'
   || FAKS.D:=FAKS.DW
   ?};
   {? FZ.DWBE<>FAKS.DW || exec('akt_tz','faktury_plat') ?};
   _wyn:=1
?};
{? _wyn & FAKS.SZ='S' & FAKS.T().KOR='T' & FAKS.D=date(0,0,0)
|| FAKS.D:=FAKS.DW
?};
{? FAKS.SZ='S' & FAKS.WHERE='L' & FAKS.DO=date(0,0,0)
|| FAKS.D:=FAKS.DW
?};
{? _wyn
|| {!
   |? _wyn0:=exec('f_kh_gv_sprawdz','faktury_nag1','FAKS',0,1);
      _wyn:=_wyn0.WYNIK;
      &_wyn0;
      _wyn<>0 & _wyn<>1
   !}
?};
_wyn


\pr_d_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcja daty sprzedazy dla faktur
::   WY: 0-faktura z magazynu, faktura do paragonu   1-inne dokumenty
::  OLD: \pr_d_spr/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
DPOZ.WPR_D:=fld();
{? FAKS.T().PAR='T'
   | params_exec('faks_fld_czy_ed','faktury_nag')=0
|| return(0)
|| _wyn:=1;
   {? FAKS.SZ='S' & FAKS.WHERE='L'
   ||
:: data sprzedaży nieredagowalna na dokumencie zaliczkowym sprzedaży
      _wyn:=0

   |? FAKS.SZ='S' & FAKS.T().PAR='N' & FAKS.T().FIS='T' & FAKS.SYMF<>''
   ||
:: faktura wystawiona do paragonu
      _wyn:=0
   ?};
   {? _wyn=1
   ||
      {? FAKS.T().KOR='T'
      ||
         _wyn:=1
      |? FAKS.WHERE='G' & (1+menu_txt())='P'
      ||
         FAP.index('FAP');
         FAP.prefix(FAKS.ref);
         {? FAP.first() || {! |? _wyn:=FAP.M().RODZ='U'; _wyn & FAP.next() !} ?}
      ||
         _wyn:=FAKS.WHERE<>'M' | FAKS.PLISTA='N'
      ?}
   ?};
   _wyn
?}


\po_d_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: po redakcji FAKS.D
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.ID_S_VAT<>'' & DPOZ.WPR_D<>fld() || FAKS.ID_S_VAT:='' ?};
params_exec('faks_fld_fill','faktury_nag1');
_podp:={? var_pres('var_fakpop',params_get())<0
        | params_get().var_fakpop.PODP_DO
        | params_get().var_fakpop.POP_DS=FAKS.D
       || 0
       || 1
       ?};
{? FAKS.SZ='S' & (FAKS.T().KOR='T' | FAKS.WHERE<>'N')
 & {? FAKS.DO>=FAKS.D || _podp || {? FAKS.DO=date(0,0,0) || _podp || 1 ?} ?}
|| params_get().var_fakpop.PODP_DO:=1;
   params_set(params_get());
   FAKS.DO:=FAKS.DO_NA_DR:=FAKS.D
?};
{? FAKS.SZ='S' & FAKS.T().KOR='N' & FAKS.IST_TYP='W' & 'DS'*exec('get','#params',300605,2)>0
|| FAKS.IST_OKR:=exec('faks_ist_okr_bl','faktury_nag')
?};
exec('faks_win_edit_btn_opt','faktury_nag');
exec('set_efld_opt','faktury_nag');
1


\where
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Zwraca wartość HELP.WHERE
::   WY: HELP.WHERE
::  OLD: \where/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
HELP.WHERE


\be_fa_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: przed radakcja pola FAKS.KH - kontrahent
::       POMOC.LOCK - zmienna ustawiana w szczegolnych przypadkach aby zablokowac edycje pola
::  OLD: \be_fa_kh/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
::{? fld()=null() | cur_nfld()=translate('Kod'@) || 1 || return(0) ?};
{? FAKS.PROJEKTY
   & FAKS.KH
   & FAKS.T().PROJZKH='T'
|| return(0)
?};

_f_nip_pole:=(cur_tfld()=INTRAST & cur_afld()='F_NIP');

{? ~_f_nip_pole
|| DPOZ.WPR_S:=$fld
?};

{? FAKS.WHERE='K'
|| {? ~_f_nip_pole
   || HELP.KHB:=fld
   ?};
   HELP.KH_ODB:=FAKS.KH_ODB;
   return(exec('kznf2_czy_ed','faktury_nag'))
?};

{? FAKS.T().KOR='T' & FAKS.T().HIS='N' & (FAKS.SZ='Z' | exec('faks_fld_czy_ed','faktury_nag','KH')=0)
|| return(0)
|? params_exec('faks_fld_czy_ed','faktury_nag')=0
|| return(0)
?};

::zablokowany kontrahent jeżeli są już pozycje z projektem
FAP.cntx_psh();
FAP.use((FAP.name()-3)+(ref_name(FAKS.ref())+3));
FAP.index('POZF');
FAP.prefix(FAKS.ref());
{? FAP.first()
||
   {!|?
      {? FAP.PROJEKTY<>null() || FAP.cntx_pop();return(0) ?};
      FAP.next()
   !}
?};
FAP.cntx_pop();

:: zablokowana korekta nagłówkowa dla faktur zaliczkowych
{? FAKS.T().KOR='T' & FAKS.WHERE='L' || return(0) ?};

{? FAKS.T().PAR='T' & ~_f_nip_pole
|| return(0)
?};

{? POMOC.LOCK='' | POMOC.LOCK='I'
||
   {? ~_f_nip_pole
   || HELP.KHB:=fld
   ?};
   HELP.KH_ODB:=FAKS.KH_ODB;
::   (FAKS.T().KOR='N' | FAKS.T().KOR='Z' | FAKS.T().HIS='T') &
   {? FAKS.SZ='S' | (1+menu_txt())<>'P'
   || 1
   || exec('FindInSet','#table','FAP2DK','FAKS',$FAKS.ref,'Z')=null
      & exec('FindInSet','#table','FAP2DK','FAKS',$FAKS.ref,'E')=null
   ?}
||
   0
?}


\kznf2_czy_ed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: sprawdza czy jest lista faktur dla korekty zbiorczej
::   WY: 1-brak pozycji, 0-wpp
::  OLD: \kznf2_czy_ed/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_kz_uid:=exec('FindAndGet','#table',FAKS,FAKS.ref(),,"FAKS.uidref()",'');
FAKS_KZF.cntx_psh();
FAKS_KZF.index('KZ_UID');
FAKS_KZF.prefix(_kz_uid);
_wyn:=~FAKS_KZF.first();
FAKS_KZF.cntx_pop();
_wyn


\ae_fa_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: po redakcji kontrahenta w naglowku dokumentu sprzedazy
::  OLD: \ae_fa_kh/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_f_nip_pole:=(cur_tfld()=INTRAST & cur_afld()='F_NIP');
{? ~_f_nip_pole & fld()=null
||
   exec('find_sql','#table','KH','SNIP;KOD;NAZ;SKR;UL;DOM;LOKAL','','FAKS.KH','13;5;25;10;15','RED','','')
?};
{? _f_nip_pole | fld()=FAKS.PROJEKTY
|| _fld:=FAKS.KH
|| _fld:=fld()
?};
{!
|? _wyn:=1;
   {? _wyn & _fld<>HELP.KHB
   || _wyn:=exec('ae_kh','kontrahent',,_fld,0)
   ?};
   {? _wyn & _fld<>HELP.KHB
   || _wyn0:=exec('f_kh_gv_sprawdz','faktury_nag1','FAKS',0,1);
      _wyn:=_wyn0.WYNIK;
      &_wyn0;
      {? _wyn=-1
      || _fld:=FAKS.KH
      ?}
   ?};
   _wyn<>0 & _wyn<>1
!};
{? _wyn & _fld<>HELP.KHB
||
   _nip_par:=exec('FindAndGet','#table',FAKS,FAKS.SYMF,,"NIP",'');
   _nip_fak:=FAKS.KH().NIP;
   {? _wyn & _nip_par<>'' & exec('niptostr','#string',_nip_par)<>exec('niptostr','#string',_nip_fak)
   ||
      _wyn:=FUN.ask('NIP kontrahenta na fakturze (%1)\nróżny od NIPu podanego na paragonie (%2).'
         '\n\nAkceptujesz wybranego kontrahenta?'@[_nip_fak,_nip_par])
   ?}
?};
{? _wyn
||
   {? _fld<>HELP.KHB & FAKS.WHERE<>'K'
   ||
      FAKS.ID_S_VAT:='';
      {? FAKS.SZ='S' & FAKS.WHERE<>'L' & FAKS.T().KOR='T'
      ||
         _wyn:=params_exec('faks_fld_fill','faktury_nag1','KH');
         {? _wyn
         ||
            {? FAKS.WHERE='N'
            ||
               exec('clr_odb','kontrahent');
               exec('duplikuj_dane','faktury_wspolne','KH','KH_ODB')
            ?};
            exec('faks_win_edit_btn_opt','faktury_nag');
            exec('set_efld_opt','faktury_nag')
         ?};
         {? _wyn=0 || return(_wyn) ?}
      ?};
      _poz_pl:=0;
      FAKS.PL:=
         {? XINFO.SLP<>null & _fld<>null()
         ||
            _plat:=exec('sp_plat','kontrahent',_fld);
            _plat=null & FAKS.PL<>null;
            {? FAKS.SYMF<>'' & _plat<>null & FAKS.PL<>null
            ||
               {? FUN.ask('Forma płatności na dokumencie różni się od formy płatności wybranego kontrahenta.\n'
                     'Czy zmienić formę płatności?'@)
               ||
                  _plat
               ||
                  _poz_pl:=-1;
                  FAKS.PL
               ?}

            |? _plat=null & FAKS.PL<>null
               &  FUN.ask('Kontrahent %1 - %2 \nnie ma przypisanej domyślnej formy płatności.\n'
                     'Czy pozostawić aktualnie podaną na fakturze?'@[FAKS.KH().KOD, FAKS.KH().NAZ])
            ||
               _poz_pl:=1;
               FAKS.PL
            ||
               _plat
            ?}
         ||
            null
         ?};
      {? _poz_pl<>-1
      ||
         FZ.FORMAPLA:=FAKS.PL().KOD;
         FZ.PL:=FAKS.PL;
         FZ.TERMPLAT:={? ~_poz_pl || exec('term_plat','faktury_plat',,'N',FAKS.ref()) || FZ.TERMPLAT ?};
         FAKS.TZ:=FZ.TERMPLAT;
         exec('plat_one','faktury_plat',FAKS.ref());
         FAKS.KPW:='';
         FAKS.WD:='';
         FAKS.RTRANSPO:=''
      ?}
   ?};

   KH_DOD.HAN:=__War_f('KH_DOD','HAN',FAKS.KH);
   {? Plugin.runnable('ZWS_HAN_001')
   || FAKS.HAN:=Plugin.run('ZWS_HAN_001','FAKS')
   |? FAKS.SZ='S' & FAKS.WHERE='K'
   || FAKS.HAN:=null
   |? FAKS.SZ='S' & FAKS.HAN=null
   || FAKS.HAN:=KH_DOD.HAN
   |? FAKS.SZ='S'
    & (FAKS.WHERE<>'N' | exec('faks_fld_czy_ed','faktury_nag','HAN')=0)
    & FAKS.HAN & KH_DOD.HAN & FAKS.HAN<>KH_DOD.HAN
    & FUN.choice('Do kontrahenta %1 — %2\njest przypisany handlowiec: %3 — %4.\n'
           'Na fakturze podano handlowca: %5 — %6.\n\nWybierz jedną z opcji:'@
           [FAKS.KH().KOD, FAKS.KH().SKR, KH_DOD.HAN().KOD, KH_DOD.HAN().NAZ, FAKS.HAN().KOD, FAKS.HAN().NAZ]
           ,1,'Handlowiec kontrahenta'@)
   || FAKS.HAN:=KH_DOD.HAN
   ?};
   {? ~(FAKS.SZ='S' & FAKS.T().PAR='N' & FAKS.T().FIS='T' & FAKS.SYMF<>'') & FAKS.T().KOR='N' & $FAKS.KH<>DPOZ.WPR_S
   ||
      exec('taz_sd_set','ceny');
      _kh_rab:=exec('sp_plat','kontrahent',FAKS.KH,1);
      _zk_rab:=exec('zk_rab','ceny',FAKS.ref);
      FAKS.RAB:={? _zk_rab[2] || _zk_rab[2] |? _kh_rab || _kh_rab || 0 ?};
      {? TAZ.RAB_N_BE=0 & _zk_rab[2]=0 || TAZ.RAB_N_BE:=FAKS.RAB ?}
   ?};
   {? FAKS.WHERE<>'N'
   ||
      exec('duplikuj_dane','faktury_wspolne','KH','KH_ODB')
   ?};

:: NIP UE
   {? FAKS.KH=null()
   || INTRAST.NIP:=FAKS.NIP_UE:=''
   || {? INTRAST.NIP<>''
      ||
         _nip:=INTRAST.NIP;
         _snip:={? (1+(2-_nip))=' ' || (2+_nip)+(3-_nip) || _nip ?};
         NIPY.index('SNIP');
         NIPY.prefix(FAKS.KH,_snip);
         {? NIPY.first()
         ||
            INTRAST.NIP:=FAKS.NIP_UE:={? NIPY.next() || '' || exec('nip_ue','kontrahent') ?}
         ||
            INTRAST.NIP:=FAKS.NIP_UE:=''
         ?}
      ?};
      {? INTRAST.NIP='' & (FAKS.T().UE='T' | FAKS.KH().TYP='U')
      ||
         FAKS.NIP_UE:='';
         NIPY.index('SNIP');
         NIPY.prefix(FAKS.KH);
         {? NIPY.first()
         ||
            INTRAST.NIP:=FAKS.NIP_UE:={? NIPY.next() || '' || exec('nip_ue','kontrahent') ?};
            {? INTRAST.NIP=''
            ||
::          Jeżeli do kontrahenta przypisano więcej NIP-ów, to sprawdzam czy posiada NIP domyślny
               NIPY.index('DEFAULT');
               NIPY.prefix(FAKS.KH,'T');
               {? NIPY.first()
               ||
                  INTRAST.NIP:=FAKS.NIP_UE:={? NIPY.next() || '' || exec('nip_ue','kontrahent') ?}
               ?}
            ?}
        ?}
      ?}
   ?};

:: intrastat
   exec('ist_wart_faks','faktury_nag',0);

:: konto kontrahenta
   {? FAKS.SZ='Z'
   ||
      {? FAKS.KH<>null & FAKS.KH<>HELP.KHB
      ||
         SKID_RBK.cntx_psh();
         SKID_RBK.index('RD');
         SKID_RBK.prefix(RACHBANK.FIRMA,'KH',#exec('kh2rbk','faktury_wspolne'),'T');
         {? SKID_RBK.first()
         ||
            FAKS.SKID_RBK:=SKID_RBK.ref();
            FAKS.NB:=SKID_RBK.BANK().NB;
            FAKS.RBK:=SKID_RBK.N
         ?};
         SKID_RBK.cntx_pop()
      ?}
   ?};

:: zlecenie fakturowania
   {? FAKS.SZ='S' & $FAKS.KH<>DPOZ.WPR_S & type_of(params_get())>0 & var_pres('var_fakpop',params_get())>0
   ||
      _fakz:=
         {? params_get().var_fakpop.FAKZ
         || $params_get().var_fakpop.FAKZ
         || exec('FindInSet','#table','FAKZ2FAP','FAKS',null(),FAKS.ref(),"FAKZ2FAP.FAKZ",,,'')
         ?};
      {? _fakz<>''
      ||
         _kh:=exec('FindAndGet','#table',FAKZ,_fakz,,"FAKZ.KH",null());
         {? _kh<>FAKS.KH
         ||
            params_get().var_fakpop.FAKZ:=null();
            FAKS.DA_ZAL:=date(0,0,0);
            FAKS.KW_ZAL:=0
         ?}
      ?}
   ?};

:: typ rabatu
   {? FAKS.SZ='S' & FAKS.KH & $FAKS.KH<>DPOZ.WPR_S
   ||
      exec('rab_typ_bd','ceny','FAKS');
      {? DPOZ.WPR_R
      || FAKS.RAB_TYP:={? FAKS.KH().RAB_TYP='' || exec('rab_typ_bl','ceny') || KH.RAB_TYP ?}
      ?}
   ?}
?};
{? _wyn & FAKS.MAG<>null() & FAKS.MAG().COS='T'
|| {? ~FAKS.KH().COS
   || FUN.info('Wybrano magazyn konsygnacyjny kontrahent %1 nie ma takiej obsługi.'@[FAKS.KH().KOD]);
      _wyn:=0
   |? FAKS.MAG().DLAKH<>null() & FAKS.MAG().DLAKH<>FAKS.KH
   || FUN.info('Wybrano magazyn konsygnacyjny dla kontrahenta %1 - niezgodny kontrahent.'@[FAKS.MAG().DLAKH().KOD]);
      FAKS.KH().KOD;
      _wyn:=0
   ?}
?};
:: kontrola pozycji pod kątem magazynów konsygnacyjnych a kontrahentem
{? _wyn & FAKS.WHERE='G' & ~exec('ctrlCOS','faktury_nag1',FAKS.ref(),FAKS.KH,FAKS.KH().COS)
|| FUN.info('Na pozycjach dokumentu wybrano magazyn konsygnacyjny nie można zmienić kontrahenta.'@);
   _wyn:=0
?};

:: NIP
{? _wyn
|| {? FAKS.KH
   || {? FAKS.KH().SNIP=''
      || {? FAKS.T().PAR<>'T'
         || FAKS.NIP:=INTRAST.F_NIP:=''
         ?}
      |? FAKS.KH().SNIP=FAKS.KH().PESEL
      || FAKS.NIP:=FAKS.KH().NIP;
         INTRAST.F_NIP:=''
      || FAKS.NIP:=FAKS.KH().NIP;
         INTRAST.F_NIP:=FAKS.KH().SNIP
      ?}
   || INTRAST.F_NIP:=''
   ?}
?};

:: opcje przycisków
exec('faks_win_edit_btn_opt','faktury_nag');
exec('set_efld_opt','faktury_nag');
{? _wyn & FAKS.KH<>HELP.KHB
||
   exec('clr_odb','kontrahent');
   exec('duplikuj_dane','faktury_wspolne','','KH_ODB',0);
   exec('faks_wal_set','faktury_nag1',1);
   Plugin.run('AFTER_KH_ODB_001',HELP.KHB,HELP.KH_ODB);
   {? FAKS.T().ZAK='T' & FAKS.KH & FAKS.NRKSEF=''
   || exec('czy_zak_powinien_ksef','zbl_dok',FAKS.KH,FAKS.T,FAKS.DW,1)
   ?};
   HELP.KHB:=FAKS.KH
?};
{? _wyn || HELP.KH_ODB:=FAKS.KH_ODB ?};
_wyn


\ist_wart_faks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: wypelnianie atrybutow intrastat w FAKS
::   WE: [_a]-1-ustawiac FAKS.IST_TYP; 0-wpp
::  OLD: \ist_wart_faks/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=1 ?};

{? FAKS.T().UE='T'
||
   _ist_typ:='';
   _ist_typ:={? FAKS.IST_TYP='' & _a=1 || exec('faks_ist_typ_bl','faktury_nag') || FAKS.IST_TYP ?};
   {? _ist_typ<>'' & FAKS.IST_OKR<>''
   ||
      FAKS.IST_TYP:=_ist_typ;
      {? FAKS.KPW=''
      ||
         {? 2+FAKS.NIP_UE<>'PL' & exec('find_sl','intrastat','049',2+FAKS.NIP_UE)<>null || FAKS.KPW:=2+FAKS.NIP_UE ?}
      ?};
      {? FAKS.RTRANSAK='' || FAKS.RTRANSAK:=TYPYSP.RTRANSAK ?};
      _progp:=exec('prog','intrastat',date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1),'P');
      _progw:=exec('prog','intrastat',date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1),'W');

      {? FAKS.KH<>null & exec('czy_prog_s','intrastat',_ist_typ,_progw,_progp)=1
      ||
         {? FAKS.WD='' || FAKS.WD:=FAKS.KH().WD ?};
         {? FAKS.RTRANSPO='' || FAKS.RTRANSPO:=KH.RTRANSPO ?}
      ?}
   ?}
?}


\bd_faks_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: przed wyswietleniem pol tabli FAKS
::  OLD: \bd_faks_fld/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| 1
|| _afld:=cur_afld();
   {? _afld='NETTO' & cur_kwin()='s_sel' & cur_tab()=FAP
   ||
:: aktualizacji pozycji menu w oknie pozycji faktury
      {? ~BPMN.DISPLAY || exec('fap_actions','faktury_poz',cur_win(1,1)) ?}
   ?};
   {? exec('upr_cscz','ceny')
   || ''
   || 0
   ?}
?}


\bd_fak_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [$12.10]
:: OPIS: przed wyswietleniem FAKS.RAB
::  OLD: \bd_fak_r/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| 1
|| {? {? cur_tab=FAP | cur_tab=FAKS || exec('upr_cscz','ceny') || exec('upr_cs','ceny') ?}
   || {? (FAKS.SZ='S' & FAKS.T().PAR='N' & FAKS.T().FIS='T' & FAKS.SYMF<>'')
       | exec('czy_ed_rab_n','ceny')=0
      || ''
      || ''
      ?}
   ?}
?}


\be_fak_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: podpowiadanie wartosci rabatu na podstawie danych dodatkowych kontrahenta
::   WY: czy mozliwa redakcja pola FAKS.RAB
::  OLD: \be_fak_r/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_wyn:={? cur_tab=FAP | cur_tab=FAKS || exec('upr_cscz','ceny') || exec('upr_cs','ceny') ?};
{? _wyn & FAKS.SZ='S' & FAKS.T().PAR='N' & FAKS.T().FIS='T' & FAKS.SYMF<>''
||
:: faktura wystawiona do paragonu lub zaliczka
   _wyn:=0
?};
{? _wyn & exec('faks_fld_czy_ed','faktury_nag')=0
:: korekta zbiorcza z wystawionymi korektami cząstkowymi
|| _wyn:=0
|? _wyn & FAKS.WHERE='K'
      &
   exec('FindInSet','#table','FAKS_KZR','UNIK',
      'T',exec('FindAndGet','#table',FAKS,FAKS.ref(),,"FAKS.uidref()",''),,1,,null())
||
:: korekta zbiorcza z rabatem kwotowym
   _wyn:=0
?};
{? _wyn & FAKS.WHERE='N'
:: korekta danych nagłówkowych
|| _wyn:=0
?};
{? _wyn=1
||
   exec('spr_rab','ceny',FAKS.RAB)
?};
{? _wyn & FAKS.T().KOR<>'Z' || _wyn:=exec('czy_ed_rab_n','ceny') ?};
_wyn


\b_e_fkonh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Przed redakcją FAKS.KK
::   WY: 0 - nieredagowalne, 1-redagowalne
::  OLD: \b_e_fkonh/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
HELP.KON:='F';
exec('be_f_kon','faktury_nag')
& exec('faks_fld_czy_ed','faktury_nag')


\be_f_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza czy mozna edytowac konto w naglowku faktury
::   WY: 1/0
::  OLD: \be_f_kon/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? exec('get','#params',{? BEER.SZ='S' || 300101 || 200101 ?},2)='N'
|| _wyn:=0
?};
_wyn


\bd_mag_faks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: Przed wyswietleniem pola magazyn na dokumencie sprzedazy
::   WY: kolor wyszarzenia
::  OLD: \bd_mag_faks/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? FAKS.MAG<>null() & ~exec('be_famag','faktury_nag') || _wyn:=exec('findfnrd','color') ?};
_wyn


\be_famag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Zwraca HELP.WMAG
::   WY: HELP.WMAG
::  OLD: \be_famag/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
FAKS.WHERE='G' & exec('FindInSet','#table','FAP','FAP',FAKS.ref())=null()


\ae_famag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: po edycji magazynu w naglowku dokumentu sprzedazy
::   WY: 1/0
::  OLD: \ae_famag/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_wyn:=exec('czy_z_ok','okresy',1,,,,fld);
{? _wyn=1 || exec('czy_z_ok','okresy',2,,,,fld) ?};
{? _wyn=1
|| _wyn:=exec('set_UserUpr','b_perm','MG',1,'N')
?};
{? _wyn & FAKS.WHERE='G' & FAKS.MAG<>null & FAKS.MAG().SKL='T'
|| FUN.info('Niedostępna opcja wystawienia dokumentu sprzedaży w magazynie typu skład celny.'@);
   _wyn:=0
|? _wyn & FAKS.WHERE='G' & FAKS.MAG<>null & FAKS.MAG().PAL='T'
|| FUN.info('W magazynie z obsługą palet fakturę można wystawić na podstawie dokumentu magazynowego.'@);
   _wyn:=0
|? _wyn & FAKS.WHERE='G' & FAKS.MAG<>null
|| _time:=exec('spr_dttm','magazyn_inw',FAKS.MAG,FAKS.D,1);
   {? (*_time)>(*time(23,59,0)) || _time:=time(0,0,0) ?};
:: kontrola inwentaryzacji na wprowadzonym magazynie
   exec('sprd_inw','magdok_wspolne',FAKS.D,FAKS.MAG,0
    ,'Data dokumentu musi być większa od daty inwentaryzacji.'@,,_time);
:: kontrola przeceny na wprowadzonym magazynie
   _opc:={? (1+FAKS.MAG().TYP)='E' || exec('sprprzec','magazyn_przec',FAKS.MAG,FAKS.D,_time)>0 || 0 ?};
   {? _opc=1
   || FUN.info('W magazynie %1 wprowadzono przecenę z datą równą lub późniejszą od daty dokumentu.'
          '\nMożliwe wprowadzenie nowych dokumentów na indeksy materiałowe nie ujęte w arkuszu lub'
          '\nnależy podać większą datę tworzonego dokumentu.'@[FAKS.MAG().SYM])
   |? _opc=2
   || FUN.info('W magazynie %1 istnieje otwarty arkusz przecen.'
          '\nMożliwe wprowadzenie nowych dokumentów na indeksy materiałowe nie ujęte w arkuszu.'@ [FAKS.MAG().SYM])
   ?}
?};
{? _wyn & FAKS.MAG<>null() & FAKS.MAG().COS='T'
|| {? ~FAKS.KH().COS
   || FUN.info('Wybrano magazyn konsygnacyjny kontrahent %1 nie ma takiej obsługi.'@[FAKS.KH().KOD]);
      _wyn:=0
   |? FAKS.MAG().DLAKH<>null() & FAKS.MAG().DLAKH<>FAKS.KH
   || FUN.info('Wybrano magazyn konsygnacyjny dla kontrahenta %1 - niezgodny kontrahent.'@[FAKS.MAG().DLAKH().KOD]);
      FAKS.KH().KOD;
      _wyn:=0
   ?}
?};
_wyn


\bl_han
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Zwraca BEER.HAN
::   WY: BEER.HAN
::  OLD: \bl_han/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.HAN


\be_han
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: przed redakcją FAKS.HAN
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.T().KOR='T' & FAKS.T().HIS='N' & exec('faks_fld_czy_ed','faktury_nag','HAN')=0
|| 0
|| params_exec('faks_fld_czy_ed','faktury_nag')
?}


\ae_han
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: po redakcji FAKS.HAN
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('faks_fld_fill','faktury_nag1');
exec('faks_win_edit_btn_opt','faktury_nag');
exec('set_efld_opt','faktury_nag');
1


\pw_fkred
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy pole jest do edycji - na okienku redagowania faktury
::   WY: odpowiednie podswietlenie
::  OLD: \pw_fkred/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| 1
|| ''
?}


\czy_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: rr [2008]
:: OPIS: dodatkowa formulka ustalajaca czy stosowac okienko walutowe
::  OLD: \czy_wal/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
_oldw:=BEER.WW;
_oldl:=BEER.LW;
exec('ustaw_ww','eurusd',{? BEER.SZ='S' || 'F' || 'K' ?});
exec('ust_lw','eurusd',0);
_wyn:=BEER.LW;
BEER.WW:=_oldw;
BEER.LW:=_oldl;
_wyn


\po_faksw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji pola FAKS.WAL
::   WY: czy mozna opuscic redakcje pola 1-tak 0-nie
::  OLD: \po_faksw/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? chk_fld()
|| {? cur_tfld.WAL=exec('bl_nwal','ustawienia') | DPOZ.WPR_S<>$cur_tfld.WAL
   ||
      cur_tfld.SWAL:=cur_tfld.NSWAL:=2;
      {? KSTE.WAL=INFO.NAROD
      ||
         cur_tfld.KRS:=cur_tfld.NKRS:=0;
         cur_tfld.DTK:=cur_tfld.NDTK:=date(0,0,0)

      |? cur_tfld()=FAKS
      ||
         {? FAKS.WAL=FAKS.NWAL & FAKS.WAL<>INFO.NAROD
         ||
            FAKS.KRS:=1;
            FAKS.DTK:=FAKS.DW
         ?}
      ?};
      cur_tfld.BTK:=cur_tfld.NBTK:='';
      cur_tfld.RTK:=cur_tfld.NRTK:=0;
      cur_tfld.NTK:=cur_tfld.NNTK:=''
   ?};
   exec('set_efld_opt','faktury_nag');
   1
|| 0
?}


\kznf1_czy_ed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: sprawdza czy sa wystawione korekty do faktur korekty zbiorczej
::   WY: 1-brak korekt, 0-wpp
::  OLD: \kznf1_czy_ed/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_kz_uid:=exec('FindAndGet','#table',FAKS,FAKS.ref(),,"FAKS.uidref()",'');
FAKS_KZF.cntx_psh;
FAKS_KZF.index('KZ_UID');
FAKS_KZF.prefix(_kz_uid);
{? FAKS_KZF.first
||
   {!
   |? _wyn:=FAKS_KZF.KOR='';
      _wyn & FAKS_KZF.next
   !}
?};
FAKS_KZF.cntx_pop;

_wyn


\pw_fnetw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed wyswietleniem pola sumy netto w walucie
::   WY: jesli nieedytowalna to zakolorowanie
::  OLD: \pw_fnetw/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
exec('upr_cscz','faktury_wspolne')


\wz_faodb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: wzorzec FAKS.KH_ODB
::  OLD: \wz_faodb/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.KH:=FAKS.KH;
exec('kh_odb_f_set','kontrahent');
''


\be_faodb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed redakcja odbiorcy na fakturze, pole FAKS.KH_ODB
::   WY: 1/0
::  OLD: \be_faodb/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? FAKS.KH=null
   | params_exec('faks_fld_czy_ed','faktury_nag')=0
   | (FAKS.SZ='Z' & FAKS.T().KOR='T')
|| _wyn:=0
?};
{? _wyn || _wyn:=exec('FindInSet','#table','OPAK_N','FAKS',$FAKS.ref(),,,,,null())=null() ?};
{? _wyn || HELP.KH_ODB:=FAKS.KH_ODB ?};
_wyn


\ae_faodb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Po redakcji FAKS.KH_ODB
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_wyn:=params_exec('faks_fld_fill','faktury_nag1','KH_ODB');
{? _wyn
||
   {? HELP.KH_ODB<>FAKS.KH_ODB
   ||
      _condition:=0;
      {? FAKS.LKSQL<>'' || _condition:=exec('FindAndGet','#table',FAKS,FAKS.LKSQL,,"FAKS.KH_ODB",null())=FAKS.KH_ODB ?};
      exec('duplikuj_dane','faktury_wspolne','','KH_ODB',_condition)
   ?};
   exec('faks_win_edit_btn_opt','faktury_nag');
   exec('set_efld_opt','faktury_nag');
   {? FAKS.KH_ODB<>HELP.KH_ODB
   || exec('faks_wal_set','faktury_nag1',1);
      Plugin.run('AFTER_KH_ODB_001',HELP.KHB,HELP.KH_ODB);
      HELP.KH_ODB:=FAKS.KH_ODB
   ?}
?};
_wyn


\bl_fakss
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wartosc poczatkowa FAKS.STS
::  OLD: \bl_fakss/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? BEER.SZ='S' || ST.STS || ST.STZ ?}


\bd_do_ue
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: przed wyswietleniem FAKS.DO_UE - transakcja trojstronna
::  OLD: \bd_do_ue/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('be_do_ue','faktury_nag') || '' || exec('findfnv','#color') ?}


\be_do_ue
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: przed radakcja FAKS.DO_UE - transakcja trojstronna
::  OLD: \be_do_ue/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
FAKS.T().UE='T'
& exec('faks_fld_czy_ed','faktury_nag')


\ae_do_ue
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: po redakcji FAKS.DO_UE
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.T().UE='T' & fld()='N' & FAKS.IST_TYP=''
|| _ist_okr:=exec('faks_ist_okr_bl','faktury_nag');
   {? _ist_okr<>''
   || _progw:=exec('prog','intrastat',date(#(4+_ist_okr),#(_ist_okr+2),1),'W');
      {? _progw<>'N'
      ||
         FAKS.IST_OKR:=_ist_okr;
         FAKS.IST_TYP:='W';
         params_exec('faks_ist_typ_pr','faktury_nag')
      ?}
   ?}
?};
exec('t_or_n','#field')


\bd_nipue
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: przed wyswietleniem pola FAKS.NIP_UE
::  OLD: \bd_nipue/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
1


\be_nipue
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: przed redakcja pola FAKS.NIP_UE
::  OLD: \be_nipue/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
1


\f3_nipue
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: formula na F3 dla pola FAKS.NIP_UE
::  OLD: \f3_nipue/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
exec('f3_kontr','kontrahent',7,'FAKS.KH',0,'INTRAST.NIP')


\ae_nipue
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: po redakcji pola FAKS.NIP_UE
::  OLD: \ae_nipue/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_v_ret:=1;
_v:=0;
{? 1
|| {? fld()=''
   || FAKS.NIP_UE:='';
      _kl_kod:='';
      _kl_nr:=0;
      NIPY.index('SNIP');
      NIPY.prefix(FAKS.KH);
      {? (FAKS.KH) & NIPY.first()
      || {? ~NIPY.next()
           & (_v_ret:=
             {? FAKS.KH
             || FUN.ask('Wypełnić pole symbolem NIP\n z kartoteki symboli NIP kontrahenta w UE?'@)
             || FUN.ask('Wypełnić pole symbolem NIP\n z kartoteki symboli NIP licencjobiorcy w UE?'@)
             ?})
         || fld(NIPY.SNIP); FAKS.NIP_UE:=exec('nip_ue','kontrahent')
         || _v_ret:=0
         ?}
      |? 0
      || _v_ret:={? FAKS.KH
                 || FUN.ask('Brak symboli NIP UE dla kontrahenta.\nKontynuować?'@)
                 || FUN.ask('Brak symboli NIP UE dla licencjobiorcy.\nKontynuować?'@)
                 ?}
      || _v_ret:=0
      ?}
   ||
      NIPY.index('SNIP2');
      NIPY.prefix(fld());
      {? NIPY.first()
      || {? NIPY.first() & ~NIPY.next()
         || fld(NIPY.SNIP);
            FAKS.NIP_UE:=exec('nip_ue','kontrahent')
         || exec('f3_nipue','faktury_nag');
            FAKS.NIP_UE:=exec('nip_ue','kontrahent')
         ?}
      |? 0
      || _v_ret:=FUN.ask('Niezgodność symbolu NIP UE z danymi licencjobiorcy.\nKontynuować?'@)
      || _v_ret:=FUN.ask('Niezgodność symbolu NIP UE z danymi kontrahenta.\nKontynuować?'@)
      ?}
   ?}
?};
_v_ret


\be_kwzal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: przed redakcja pola kwota zaliczki FAKS.KW_ZAL
::  OLD: \be_kwzal/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
params_get().var_fakpop.FLD:=fld();
params_get().var_fakpop.FLD_F3:=0;
{? FAKS.T().KOR='T'
|| FAKS.KW_ZAL*=(-1)
?};
(FAKS.SZ='S' & FAKS.T().KOR='N' & FAKS.T().PAR='N' | FAKS.WHERE='L') & exec('upr_cscz','ceny')
& exec('faksv_r_zal','faktury_vat',$FAKS.ref())=0


\f3_kwzal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: F3 FAKS.KW_ZAL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.T().KOR='N'
|| params_exec('zlf_slo_zal','faktury_nag')
|| ~~
?}


\ae_kwzal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: po redakcji pola kwota zaliczki FAKS.KW_ZAL
::  OLD: \ae_kwzal/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? FAKS.T().KOR='N' & FAKS.KW_ZAL<=0 & FAKS.WHERE='L'
||
   FUN.info('Należy podać kwotę większą od zera.'@);
   _wyn:=0
|? FAKS.T().KOR='T' & FAKS.KW_ZAL<0
||
   FUN.info('Kwota zaliczki nie może być mniejsza od zera.'@);
   _wyn:=0
?};
{? _wyn=1 & FAKS.T().KOR='T'
||
   FAKS.KW_ZAL:=fabs(FAKS.KW_ZAL);
   _pozost:=0;
   _rk:=FAKS.FKSQL;
   _nk:=form(8+FAKS.FKSQL);
   FAKS.cntx_psh();
   FAKS.use(_nk);
   FAKS.clear();
   {? FAKS.seek(_rk,_nk)
   ||
      FAPOW.index('FAKS_K');
      FAPOW.prefix($FAKS.ref(),'N');
      {? FAPOW.first()
      || _pozost:=exec('zal_sum','faktury_zalicz')
      ?}
   ?};
   FAKS.cntx_pop();

   {? _pozost-FAKS.KW_ZAL<0
   ||
      FUN.info('Maksymalna kwota korekty: %1 %2.'@ [form(_pozost,,2), FAKS.WAL().KOD]);
      FAKS.KW_ZAL:=_pozost;
      _wyn:=0
   ||
      FAKS.KW_ZAL:=FAKS.KW_ZAL*(-1)
   ?}
|? params_get().var_fakpop.FLD<>fld() & params_get().var_fakpop.FLD_F3=0
||
:: Zwolnie zlecenia fakturowania jeśli na fakturze podano inną kwotę zaliczki
   _fakz:=params_get().var_fakpop.FAKZ;
   _r_lock:=params_get().var_fakpop.FAKZ_RLOCK;
   {? _fakz
   ||
      FAKZ.cntx_psh();
      FAKZ.use(ref_name(_fakz));
      FAKZ.prefix();
      {? FAKZ.seek(_fakz)
      ||
         exec('r_unlock_one','#table',FAKZ,FAKZ.ref(),_r_lock)
      ?};
      FAKZ.cntx_pop()
   ?};
   params_get().var_fakpop.FAKZ:=null();
   params_get().var_fakpop.FAKZ_RLOCK:=0
?};
_wyn


\faks_rbkb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula na blank FAKS.SKID_RBK
::  OLD: \faks_rbkb/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
:: szuka rachunku domyslnego
{? BEER.SZ='S'
||
:: domyślny rachunek ze stanowiska sprzedaży
   {? FAKS.STS || _ref:=exec('FindInSet','#table','RBK_RD','STS',FAKS.WAL,FAKS.STS,"RBK_RD.SKID_RBK",,,null()) ?};
:: domyślny rachunek z oddziału
   {? _ref=null() || _ref:=exec('FindInSet','#table','RBK_RD','ODDZ',FAKS.WAL,FAKS.ODDZ,"RBK_RD.SKID_RBK",,,null()) ?};
:: domyślny rachunek ogólny
   {? _ref=null()
   ||
      SKID_RBK.cntx_psh();
      SKID_RBK.prefix();
      {? SKID_RBK.find_tab(
            ,'FIRMA',,'=',null()
            ,'TAB',,'=',REF.INFO
            ,'RD',,'=','T'
            ,'WAL',,'=',FAKS.WAL)
      ||
         _ref:=SKID_RBK.ref()
      ?};
      SKID_RBK.cntx_pop()
   ?};
:: uzupełnieni pól tabeli FAKS
   {? _ref
   ||
      SKID_RBK.cntx_psh();
      SKID_RBK.prefix();
      {? SKID_RBK.seek(_ref) & SKID_RBK.AKTYWNY='T'
      ||
         B.cntx_psh();
         FAKS.NB:=SKID_RBK.BANK().NB;
         FAKS.RBK:=SKID_RBK.N;
         B.cntx_pop()
      ?};
      SKID_RBK.cntx_pop()
   ?}
?};
_ref


\rbk_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula przed redakcja FAKS.SKID_RBK
::   WE: [_a] - 0/1 - wołane dla FAKS.VSKIDRBK
::  OLD: \rbk_be/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_rvat:={? var_pres('_a')=type_of(0) || _a || 0 ?};

:: DRO_TODO_AWI:  w Merti redakcja rachunków bankowych w dokumencie zakupu wymaga dodatkowych modyfikacji
::                dlatego tymczasowo _rvat:=0 co wyłącza redakcję
:: _rvat:=0; MW: zastąpione przez "0 & _rvat" w miejscach, które mają się tymczasowo nigdy nie wykonać

{? ~params_exec('faks_fld_czy_ed','faktury_nag') || return(0) ?};
RACHBANK.KB_5R_BD:='RACHBANK.KB_5R:=RB.get_rbtx(1,SKID_RBK.ref(),SKID_RBK.KRAJ().KODISO)';
RACHBANK.KB_4R_BD:='RACHBANK.KB_4R:=RB.get_rbtx(2,SKID_RBK.N,SKID_RBK.KRAJ().KODISO)';
RACHBANK.KB_4R_AE:='SKID_RBK.N:=RB.get_rbel(2,RACHBANK.KB_4R,SKID_RBK.KRAJ().KODISO); '+RACHBANK.KB_4R_BD
   +'; exec(\'ae_rb\',\'rachunki\')';
RACHBANK.KB_1R_BE:=RACHBANK.KB_1R_F3:=RACHBANK.KB_1R_AE:=RACHBANK.KB_4R_BE:=RACHBANK.KB_4R_F3:='';
:: tymczasowo wyłączone
{? 0 & _rvat & FAKS.SZ='Z'
||
   ROZNE.KKBAN:=1; PAR_WYDR.TABAKR:='KH'; PAR_WYDR.REF:=#FAKS.KH;
   RACHBANK.KB_5R_BD:='RACHBANK.KB_5R:=RB.get_rbtx(1,SKID_RBK.ref())'
?};

_red:='RED_RACH';
:: tymczasowo wyłączone
{? 0 & _rvat & FAKS.SZ='Z' || _red:='RED_RBO' ?};
SKID_RBK.win_edit(_red);
_sel:='SLO_RBL';
:: tymczasowo wyłączone
{? 0 & _rvat & FAKS.SZ='Z' || _sel:='SLO_RBO' ?};
SKID_RBK.win_dict(_sel);
SKID_RBK.win_sel(_sel);
SKID_RBK.actions(_sel,'Wk:Wk');
SKID_RBK.win_patt('SZUK');
RACHBANK.AKTYWNY:='T';
exec('f_set_rbk','faktury_nag',_rvat);
1


\rbk_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula po redakcji FAKS.SKID_RBK
::  OLD: \rbk_ae/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_RBK.f_clear(1);
SKID_RBK.actions('SLO_RBL');
FAKS.NB:=FAKS.SKID_RBK().BANK().NB;
FAKS.RBK:=FAKS.SKID_RBK().N;
params_exec('faks_fld_fill','faktury_nag1');
exec('faks_win_edit_btn_opt','faktury_nag');
exec('set_efld_opt','faktury_nag');
1


\fak_nbb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula na blank FAKS.NB
::  OLD: \fak_nbb/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.SKID_RBK<>null
|| FAKS.NB:=FAKS.SKID_RBK().BANK().NB
|| ''
?}


\fak_nrbb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula na blank FAKS.RBK
::  OLD: \fak_nrbb/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.SKID_RBK<>null
|| FAKS.RBK:=FAKS.SKID_RBK().N
|| ''
?}


\faks_kpw_reg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: warunki na wyswietlenie lub redagowanie pola FAKS.KPW
::   WE: _a - 'PW' - dla funkcji przed wyswietleniem, 'PR' - dla funkcji przed redakcja
::   WY: _a = 'PW' - kolor lub ''
::          = 'PR' - 1 - redakcja dozwolona, 0 - wpp
::       _b = 0 - wolane dla FAKS, 1 - wolane dla FAP
::  OLD: \faks_kpw_reg/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_b:={? _>=2 || {? var_pres('_b')=1 || _b || 0 ?} || 0 ?};

_kolor:=exec('findfnv','#color');
{? FAKS.IST_TYP='' | _b=1 & FAP.M().RODZ='U'
|| {? _a = 'PW' || return(_kolor) || return(0) ?}
|| {? _a = 'PW' || return('') || return(1) ?}
?}


\faks_kpw_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem FAKS.KPW
::   WY: kolor
::  OLD: \faks_kpw_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('faks_kpw_reg','faktury_nag','PW')


\faks_kpw_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja FAKS.KPW
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \faks_kpw_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('faks_kpw_reg','faktury_nag','PR')


\faks_kpw_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: klawisz F3 FAKS.KPW
::  OLD: \faks_kpw_f3/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('slownik','intrastat','049',FAKS.KPW)


\faks_kpw_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: po redakcji FAKS.KPW
::   WY: 1 - spelnione warunki, 0 - wpp
::  OLD: \faks_kpw_po/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_return:=1;

:: regula R13
{? fld='PL' || _return:=0
:: sprawdzenie czy wartosc istnieje w slowniku 049
|? FAKS.KPW<>'' & exec('find_sl','intrastat','049',FAKS.KPW)=null || _return:=0
?};

{? _return=0
|| FUN.info('Niedozwolona wartość pola Kraj przeznaczenia wysyłki.'@)
?};

_return


\faks_wd_reg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: warunki na wyswietlenie lub redagowanie pola FAKS.WD
::   WE: _a - 'PW' - dla funkcji przed wyswietleniem, 'PR' - dla funkcji przed redakcja
::   WY: _a = 'PW' - kolor lub ''
::          = 'PR' - 1 - redakcja dozwolona, 0 - wpp
::       _b = 0 - wolane dla FAKS, 1 - wolane dla FAP
::  OLD: \faks_wd_reg/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_b:={? _>=2 || {? var_pres('_b')=1 || _b || 0 ?} || 0 ?};

_kolor:=exec('findfnrd','color');
_ist_typ:=FAKS.IST_TYP;
_progp:='N';
_progw:='N';
{? _ist_typ<>'' & FAKS.IST_OKR<>''
||
   _progp:=exec('prog','intrastat',date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1),'P');
   _progw:=exec('prog','intrastat',date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1),'W')
?};

{? _ist_typ='' | _b=1 & FAP.M().RODZ='U'
||
   {? _a = 'PW' || return(_kolor) || return(0) ?}
|? exec('czy_prog_s','intrastat',_ist_typ,_progw,_progp)=0
||
   {? _a = 'PW' || return(_kolor) || return(0) ?}
||
   {? _a = 'PW' || return('') || return(1) ?}
?}


\faks_wd_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem FAKS.WD
::   WY: kolor
::  OLD: \faks_wd_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('faks_wd_reg','faktury_nag','PW')


\faks_wd_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja FAKS.WD
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \faks_wd_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('faks_wd_reg','faktury_nag','PR')


\faks_wd_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: klawisz F3 FAKS.WD
::  OLD: \faks_wd_f3/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('slownik','intrastat','002',FAKS.WD)


\faks_wd_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: po redakcji FAKS.WD
::   WY: 1 - spelnione warunki, 0 - wpp
::  OLD: \faks_wd_po/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_return:=1;

:: sprawdzenie czy wartosc istnieje w slowniku 002
{? FAKS.WD<>'' & exec('find_sl','intrastat','002',FAKS.WD)=null || _return:=0 ?};

{? _return=0
|| FUN.info('Niedozwolona wartość pola Warunki dostawy.'@)
?};

_return


\faks_rtransa_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem FAKS.RTRANSAK
::   WY: kolor
::  OLD: \faks_rtransa_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('faks_kpw_reg','faktury_nag','PW')


\faks_rtransa_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja FAKS.RTRANSAK
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \faks_rtransa_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.IST_TYP='' & (1+menu_txt())='P'
|| exec('FindInSet','#table','FAP2DK','FAKS',$FAKS.ref,FAKS.WHERE)=null
|| 1
?} & exec('faks_kpw_reg','faktury_nag','PR')


\faks_rtransa_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: klawisz F3 FAKS.RTRANSAK
::  OLD: \faks_rtransa_f3/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('slownik','intrastat','004',FAKS.RTRANSAK)


\faks_rtransa_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: po redakcji FAKS.RTRANSAK
::   WY: 1 - spelnione warunki, 0 - wpp
::  OLD: \faks_rtransa_po/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_return:=1;

:: sprawdzenie czy wartosc istnieje w slowniku 004
{? FAKS.RTRANSAK<>'' & exec('find_sl','intrastat','004',FAKS.RTRANSAK)=null || _return:=0 ?};

{? _return=0
|| FUN.info('Niedozwolona wartość pola Rodzaj transakcji.'@)
?};

_return


\faks_rtransp_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem FAKS.RTRANSPO
::   WY: kolor
::  OLD: \faks_rtransp_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('faks_wd_reg','faktury_nag','PW')


\faks_rtransp_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja FAKS.RTRANSPO
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \faks_rtransp_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('faks_wd_reg','faktury_nag','PR')


\faks_rtransp_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: klawisz F3 FAKS.RTRANSPO
::  OLD: \faks_rtransp_f3/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('slownik','intrastat','005',FAKS.RTRANSPO)


\faks_rtransp_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: po redakcji FAKS.RTRANSPO
::   WY: 1 - spelnione warunki, 0 - wpp
::  OLD: \faks_rtransp_po/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_return:=1;

:: sprawdzenie czy wartosc istnieje w slowniku 005
{? FAKS.RTRANSPO<>'' & exec('find_sl','intrastat','005',FAKS.RTRANSPO)=null || _return:=0 ?};

{? _return=0
|| FUN.info('Niedozwolona wartość pola Rodzaj transportu.'@)
?};

_return


\faks_ist_typ_re
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: warunki na wyswietlenie lub redagowanie pola FAKS.IST_TYP
::   WE: _a - 'PW' - dla funkcji przed wyswietleniem, 'PR' - dla funkcji przed redakcja
::   WY: _a = 'PW' - kolor lub ''
::          = 'PR' - 1 - redakcja dozwolona, 0 - wpp
::       _b = 0 - wolane dla FAKS, 1 - wolane dla FAP
::  OLD: \faks_ist_typ_re/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_b:={? _>=2 || {? var_pres('_b')=1 || _b || 0 ?} || 0 ?};

_kolor:=exec('findfnv','#color');

{? exec('faks_ist_typ','faktury_nag',1)
|| {? _a = 'PW' || return('') || return(1) ?}
|| {? _a = 'PW' || return(_kolor) || return(0) ?}
?}


\faks_ist_typ_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: wrt.pocz. FAKS.IST_TYP
::   WY: 'P'-przywoz, 'W'-wywoz, ''
::  OLD: \faks_ist_typ_bl/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_return:='';

TYPYSP.cntx_psh();
_ist_typ:={? FAKS.T().UE = 'T' || {? FAKS.WHERE<>'L' || {? FAKS.SZ='Z' || 'P' || 'W' ?} || '' ?} || '' ?};
{? _ist_typ<>'' & FAKS.IST_OKR<>''
||
   _progp:=exec('prog','intrastat',date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1),'P');
   _progw:=exec('prog','intrastat',date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1),'W');
   {? exec('czy_prog_p','intrastat',_ist_typ,_progw,_progp)=1 || _return:=_ist_typ ?}
?};
TYPYSP.cntx_pop();

_return


\faks_ist_typ_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja FAKS.IST_TYP
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \faks_ist_typ_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
:: Ustawianie gwiazdek
exec('set_efld_opt','faktury_nag');
DPOZ.WPR_S:=FAKS.IST_TYP;
exec('faks_ist_typ_re','faktury_nag','PR')


\faks_ist_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: uwzględnienie w intrastat dokumentu sprzedaży lub zakupu - nie dotyczy / przywóz / wywóz
::   WE: _a - typ sprawdzenia:
::             =0-weryfikacja FAKS.IST_TYP,
::             =1-możliwość zmiany FAKS.IST_TYP
::   WY: jeśli:
::          _a=1 - 0-zmiana FAKS.IST_TYP nie dostępna, 1-dostępna
::          _a=0 - 0-wartość FAKS.IST_TYP dostępna, 1-nie dostępna
::----------------------------------------------------------------------------------------------------------------------
_przed:=_a;
_da2isto:={? FAKS.IST_OKR='' || date(FAKS.DW~1,FAKS.DW~2,1) || date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1) ?};
{? _przed
||
:: dostępność redakcji
   FAKS.T().UE='T'
      &
   FAKS.WHERE<>'L'
      &
   ~(var_pres('__gen')>0 & __gen)
      &
   (
::    dokument sprzedaży - dozwolona zmiana typu deklaracji - przekroczony próg wyzozu
      FAKS.SZ='S' & FAKS.T().KOR='N' & (FAKS.IST_TYP='' | exec('get','#params',300604,2)='T')
                  & exec('prog','intrastat',_da2isto,'W')<>'N'
         |
::    dokument zakupu - przekroczony próg dla przywozu
      FAKS.SZ='Z' & FAKS.T().KOR='N' & exec('prog','intrastat',_da2isto,'P')<>'N'
         |
::    korekta sprzedaży lub zakupu - przekroczony próg dla wywozu lub przywozu
      FAKS.T().KOR='T' & (exec('prog','intrastat',_da2isto,'W')<>'N' | exec('prog','intrastat',_da2isto,'P')<>'N')
         |
::    dokument sprzedaży - transakcja trójstronna - przekroczony próg dla wywozu
      FAKS.SZ='S' & FAKS.DO_UE='T' & exec('prog','intrastat',_da2isto,'W')<>'N'
   )
|? FAKS.T().UE='N'
||
   0
||
:: zabronione przypadki
:: dokument sprzedaży - intrastat przywóz
   FAKS.SZ='S' & FAKS.T().KOR='N' & FAKS.IST_TYP='P'
      |
:: dokument sprzedaży - nie dotyczy intrastat
   FAKS.SZ='S' & FAKS.DO_UE='N' & FAKS.T().KOR='N' & FAKS.IST_TYP='' & exec('get','#params',300604,2)<>'T'
               & exec('prog','intrastat',_da2isto,'W')<>'N'
      |
:: dokument sprzedaży - transakcja trójstronna - intrastat przywóz
   FAKS.SZ='S' & FAKS.DO_UE='T' & FAKS.IST_TYP='P'
      |
:: korekta sprzedaży - intrastat przywóz - nie przekroczony próg dla przywozu
   FAKS.SZ='S' & FAKS.T().KOR='T' & FAKS.IST_TYP='P' & exec('prog','intrastat',_da2isto,'P')='N'
      |
:: korekta sprzedaży - intrastat wywóz - nie przekroczony próg dla wywozu
   FAKS.SZ='S' & FAKS.T().KOR='T' & FAKS.IST_TYP='W' & exec('prog','intrastat',_da2isto,'W')='N'
      |
:: korekta sprzedaży - nie dotyczy intrastat - nie transakcja trójstronna i niedozwolona zmiana typu deklaracji
:: - nie przekroczony próg dla wywozu
   FAKS.SZ='S' & FAKS.T().KOR='T' & FAKS.IST_TYP='' & FAKS.DO_UE<>'T' & exec('get','#params',300604,2)<>'T'
               & exec('prog','intrastat',_da2isto,'W')<>'N'
      |
:: dokument zakupu - intrastat wywóz
   FAKS.SZ='Z' & FAKS.T().KOR='N' & FAKS.IST_TYP='W'
      |
:: korekta zakupu - intrastat przywóz - nie przekroczony próg dla przywozu
   FAKS.SZ='Z' & FAKS.T().KOR='T' & FAKS.IST_TYP='P' & exec('prog','intrastat',_da2isto,'P')='N'
      |
:: korekta zakupu - intrastat wywóz - nieprzekroczony próg dla wywozu
   FAKS.SZ='Z' & FAKS.T().KOR='T' & FAKS.IST_TYP='W' & exec('prog','intrastat',_da2isto,'W')='N'
?}


\faks_ist_typ_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: po redakcji FAKS.IST_TYP
::  OLD: \faks_ist_typ_po/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('faks_ist_typ','faktury_nag',0)
|| FAKS.IST_TYP:=exec('faks_ist_typ_bl','faktury_nag')
?};
{? FAKS.IST_TYP=''
|| FAKS.KPW:='';
   FAKS.WD:='';
   FAKS.RTRANSAK:='';
   FAKS.RTRANSPO:='';
   FAKS.IST_OKR:=''
|? FAKS.IST_OKR=''
|| FAKS.IST_OKR:=exec('faks_ist_okr_bl','faktury_nag')
?};
{? DPOZ.WPR_S<>FAKS.IST_TYP
||
   FAKS.WD:='';
   FAKS.RTRANSPO:='';
   exec('ist_wart_faks','faktury_nag',0)
?};
win_disp;
1


\wz_r_o
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: wzorzec FAKS.IST_OKR
::  OLD: \wz_r_o/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
'999999&'


\faks_ist_okr_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: wartosc poczatkowa FAKS.IST_OKR
::   WY: rrrrmm
::  OLD: \faks_ist_okr_bl/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_dt:=FAKS.DW;
{? FAKS.T<>null() & FAKS.SZ='S' & FAKS.T().KOR='N'
|| _dt_jak:=exec('get','#params',300605,2);
   {? _dt_jak='S' & FAKS.D<>date(0,0,0)
   || _dt:=FAKS.D
   |? _dt_jak='D' & FAKS.DO<>date(0,0,0)
   || _dt:=FAKS.DO
   ?}
?};
_da2isto:=date(_dt~1,_dt~2,1);
{? TYPYSP.UE='T'
   &  {? TYPYSP.ZAK='T' || exec('prog','intrastat',_da2isto,'P')<>'N'
      || exec('prog','intrastat',_da2isto,'W')<>'N'
      ?}
|| form(_dt~1,-4,,'9 ') + form(_dt~2,-2)
|| ''
?}


\faks_ist_okr_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem FAKS.IST_OKR
::   WY: kolor
::  OLD: \faks_ist_okr_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('faks_kpw_reg','faktury_nag','PW')


\faks_ist_okr_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem FAKS.IST_OKR
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \faks_ist_okr_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
__istokr:=FAKS.IST_OKR;
exec('faks_kpw_reg','faktury_nag','PR')


\faks_ist_okr_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: klawisz f3 FAKS.IST_OKR
::   WE: rrrrmm - jesli wybrano wartosc ze slownika, ~~ - wpp
::  OLD: \faks_ist_okr_f3/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_return:=~~;

OKR.cntx_psh();
OKR.win_sel('WER_1');
OKR.index('OKR');
OKR.prefix(REF.FIRMA);
{? FAKS.IST_OKR <> '' || OKR.find_key(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2)) ?};
{? OKR.select(,1,1)
|| _return:=form(form(OKR.ROK,,,'9 '),-4) + form(OKR.MC,-2)
?};
OKR.cntx_pop();

_return


\faks_ist_okr_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: po redakcji FAKS.IST_OKR
::  OLD: \faks_ist_okr_po/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('chk_istokr','faktury_nag',FAKS.IST_OKR)
||
   _prog:=exec('prog','intrastat',date(#(4+fld),#(fld+2),1),FAKS.IST_TYP);
   {? _prog='N'
   || FUN.info('Okres nie dotyczy Intrastat.'@); 0
::   |? FAKS.SZ='Z' & FAKS.T().KOR='T' & FAKS.IST_TYP='W' &
::      exec('prog','intrastat',date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1),'P')<>exec('prog','intrastat',date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1),'W')
::      | FAKS.SZ='S' & FAKS.T().KOR='T' & FAKS.IST_TYP='P' &
::      exec('prog','intrastat',date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1),'P')<>exec('prog','intrastat',date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1),'W')
::   || FUN.info('Różne progi w przywozie i wywozie dla tego okresu.'@); 0
   |? _prog<>exec('prog','intrastat',date(#(4+__istokr),#(__istokr+2),1),FAKS.IST_TYP)
   || {? FUN.ask('W wybranym okresie obowiązuje inny próg Intrastat.\nZatwierdzić zmiany?'@)
      || exec('set_efld_opt','faktury_nag');
         win_disp; 1
      || 0
      ?}
   || 1
   ?}
?}


\chk_istokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: sprawdza poprawnosc okresu intrastat
::   WE: _a-'RRRRMM'
::   WY: 1-ok, 0-wpp
::  OLD: \chk_istokr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_rok:=#(4+_a); _mie:=#(_a+2);
OKR.cntx_psh;
OKR.index('OKR'); OKR.prefix(REF.FIRMA,_rok,_mie);
{? ~OKR.first
||
   FUN.info('Niepoprawnie wypełnione pole: Okres deklaracji.'@); _wyn:=0
?};
OKR.cntx_pop;
_wyn


\pw_brtw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: przed wyswietleniem pola sumy brutto w walucie
::   WY: jesli nieedytowalna to zakolorowanie
::  OLD: \pw_brtw/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
exec('upr_cscz','faktury_wspolne')


\faks_ndvat_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: przed redakcja FAKS.NDVAT
::  OLD: \faks_ndvat_pr/ist02.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.WHERE='K' || return(exec('kznf2_czy_ed','faktury_nag')) ?};
{? FAKS.WHERE='N' || return(0) ?};
FAKS.T().FIS='N' & FAKS.SZ='S'


\faks_ndvat_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: po redakcji FAKS.NDVAT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
1


\be_do
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: przed redakcją FAKS.DO - data otrzymania
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
DPOZ.WPR_D:=fld();
params_exec('faks_fld_czy_ed','faktury_nag')


\ae_do
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji FAKS.DO - data otrzymania
::  OLD: \ae_do/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.ID_S_VAT<>'' & DPOZ.WPR_D<>fld() || FAKS.ID_S_VAT:='' ?};
params_exec('faks_fld_fill','faktury_nag1');
exec('faks_win_edit_btn_opt','faktury_nag');
exec('set_efld_opt','faktury_nag');
{? FAKS.SZ='S' & FAKS.WHERE<>'N' & var_pres('var_fakpop',params_get())>0
|| params_get().var_fakpop.PODP_DO:=1;
   params_set(params_get())
?};
{? var_pres('ZMIEN_DD',params_get())=type_of(1)
|| 1
|| _do:=fld();
   FAKS.DO_NA_DR:=_do;
   {? FAKS.SZ='S' & FAKS.WHERE='L'
   || FAKS.D:={? _do=date(0,0,0) || FAKS.DW || _do ?}
   |? FAKS.SZ='S'& FAKS.T().PAR='T' & exec('get','#params',300137,2)='T'
   || {? _do<>date(0,0,0) & _do<FAKS.D
      || FAKS.D:=_do
      ?}
   ?};
   {? FAKS.SZ='S' & FAKS.T().KOR='N' & FAKS.IST_TYP='W' & 'DS'*exec('get','#params',300605,2)>0
   || FAKS.IST_OKR:=exec('faks_ist_okr_bl','faktury_nag')
   ?}
?};
1


\faks_cb_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: wartosc poczatkowa FAKS.CB
::  OLD: \faks_cb_bl/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? BEER.SZ='S' || '' || 'N' ?}


\faks_cb_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: przed redakcja FAKS.CB
::  OLD: \faks_cb_pr/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? type_of(params_get())<>type_of(~~) & var_pres('bl_fixml',params_get())=type_of('') & params_get().bl_fixml='T'
||
   return(1)
?};
_wyn:=params_exec('kznf2_czy_ed','faktury_nag');
{? _wyn
||
   FAP.cntx_psh();
   FAP.index('FAP'); FAP.prefix(FAKS.ref);
   _wyn:=~FAP.first();
   FAP.cntx_pop()
?};
_wyn


\pwtypdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietleniem pola pola FAKS.TYPYDOK
::  OLD: \pwtypdok/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.T().KOR='N' & FAKS.WHERE='G'
|| {? FAKS.TYPYDOK<>null() & ~exec('prtypdok','faktury_nag')
   || _wyn:=exec('findfnrd','color')
   || ''
   ?}
|| exec('findfnv','#color')
?}


\prtypdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola FAKS.TYPYDOK
::  OLD: \prtypdok/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.T().KOR='N' & FAKS.WHERE='G' & exec('FindInSet','#table','FAP','FAP',FAKS.ref())=null
|| 1
|| 0
?}


\potypdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pola FAKS.TYPYDOK w razie braku uprawnien komunikat
::  OLD: \potypdok/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.TYPYDOK<>null
|| _typy:=exec('get','#params',1001,2,OPERATOR.USER);
   {? FAKS.MAG<>null & exec('FindInSet','#table','T2MG','T',FAKS.MAG)<>null
    & exec('FindInSet','#table','T2MG','T',FAKS.TYPYDOK,FAKS.MAG)=null
   || FUN.info('Brak uprawnień do danego typu dokumentu w magazynie.\nDokumentu nie będzie można zaakceptować.'@)
   |? form(_typy)<>'' & ~(_typy*(FAKS.TYPYDOK().T+' '))
   || FUN.info('Użytkownik nie ma uprawnień do danego typu dokumentu .\nDokumentu nie będzie można zaakceptować.'@)
   ?}
?};
~~


\wz_powkor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: wzorzec powodow korekt
::  OLD: \wz_powkor/wzorce.fml
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,INFO);
INFO.POWKOR();
''


\faks_powkor_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: przed redakcja FAKS.POWKOR
::  OLD: \faks_powkor_be/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
{? (FAKS.WHERE='N' | FAKS.WHERE='K') & exec('kznf1_czy_ed','faktury_nag')
:: korekta zbiorcza z wystawionymi korektami cząstkowymi
|| exec('be_fap_powkor','faktury_nag')
?}


\be_fap_powkor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: przed redakcja FAP.POWKOR
::  OLD: \be_fap_powkor/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
{? INFO.POWKOR
|| INFO.POWKOR();
   SLO.hdr_sel(''); SLO.hdr_sel(SLU.OP);
   1
|| 0
?}


\wystinne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wystawia pozostale faktury
::   WE: [_a] - where np. 'M' domyslnie 'P'
::       [_b] - czy tworzy WZ domyslnie 'N' - parametr [_m] dla FD.ADDFAK()
::       [_c] - KH.ref() - domyslnie null
::       [_d] - ZK_N.ref() - domyslnie null - jesli _d<>null to znaczy ze faktura tworzona jest z zamowienia
::       [_e] - FAKS.ref() - domyslnie null - ref() Faktury powiazanej
::       [_f] - czy drukowac i wystawiac paragon (0 - tak ,  1 - nie)
::       [_g] - ceny netto ('N') / brutto ('T') / dowolnie ('') <-domyslnie
::       [_h] - kwota zaliczki, domyslnie 0
::       [_i] - TYPYSP.SPP ['N'/'T'/'']
::       [_j] - typ dokumentu sprzedazy - domyslnie brak
::       [_k] - przepisz pozycje na podstawie danych - domyślnie nie
::       [_l] - handlowiec
::       [_m] - dokument tworzony z EDOKUM
::       params_get()   - ustawiane w main w !lsp_fak_drfp.fml
::                      - ustawiane w main w !lsp_fak_drza.fml
::   WY: null lub FAKS.ref
::  OLD: \wystinne/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='P' ?} || _a:='P' ?};
{? _>=2 || {? type_of(_b)<>2 || _b:='N' ?} || _b:='N' ?};
{? _>=3 || {? type_of(_c)<>7 || _c:=null ?} || _c:=null ?};
{? _>=4 || {? type_of(_d)<>7 || _d:=null ?} || _d:=null ?};
{? _>=5 || {? type_of(_e)<>7 || _e:=null ?} || _e:=null ?};
{? _>=6 || {? type_of(_f)<>1 || _f:=0 ?} || _f:=0 ?};
{? _>=7 || {? type_of(_g)<>2 || _g:='' ?} || _g:='' ?};
{? _>=8 || {? type_of(_h)<>1 || _h:=0 ?} || _h:=0 ?};
{? _>=9 || {? type_of(_i)<>2 || _i:='' ?} || _i:='' ?};
{? _>=10 || {? type_of(_j)<>2 || _j:='' ?} || _j:='' ?};
{? _>=11 || {? type_of(_k)<>1 || _k:=0 ?} || _k:=0 ?};
{? _>=12 || {? type_of(_l)<>7 || _l:=null() ?} || _l:=null() ?};
{? _>=13 || {? type_of(_m)<>7 || _m:=null() ?} || _m:=null() ?};
:: wynik funkcji
_wyn:=null();
:: zmienne
BEER.SZ:={? _a='E' | _a='Z' | _a='l' || 'Z' || 'S' ?};
{? _a='l' || _a:='L' ?};
_kw_zal:=_h;
BEER.HAN:=null();
INTRAST.F_NIP:='';
_wg_edokum:=_m<>null();
_continue:=1;
_p_lock:=POMOC.LOCK;
:: parametry czynności
_in:=~~; _in_is:=0;
_out:=~~; _out_is:=0;
_mp:=~~; _mp_is:=0;
_context:=~~; _context_is:=0; _context_bl:=0;
{? type_of(params_get())=type_of(obj_new('obj'))
||
   {? var_pres('in',params_get())=type_of(obj_new('obj'))
   ||
      _in:=params_get().in; _in_is:=type_of(_in)=type_of(obj_new('obj'))
   ?};
   _out:=params_get().out; _out_is:=type_of(_out)=type_of(obj_new('obj'));
   _mp:=params_get().mp; _mp_is:=type_of(_mp)=type_of(obj_new('obj'));
   {? var_pres('context',params_get())=type_of(obj_new('obj'))
   ||
      _context:=params_get().context; _context_is:=type_of(_context)=type_of(obj_new('obj'));
      _context_bl:=var_pres('BL',_context)=type_of('') & _context.BL='T'
   ?}
?};
:: wymagalność stanowiska sprzedaży lub zakupu
_stn:={? BEER.SZ='S' || exec('czy_sts','ustawienia') |? BEER.SZ='Z' || exec('czy_stz','ustawienia') || 0 ?};
:: parametry walutowości
exec('ustaw_ww','eurusd',{? BEER.SZ='S' || 'F' || 'K' ?}); exec('ust_lw','eurusd',0);
{? _stn=1 & {? _a='M' || exec('czy_z_ok','okresy',{? BEER.SZ='S' || 2 || 3 ?})
            || exec('czy_z_ok','okresy',{? BEER.SZ='S' || -2 || -3 ?})
            ?}
||
:: można rejestrować dokument w okresie
   FAKS.cntx_psh();
:: zgłoszenie jednorazowe
   _zlp:=null();
   {? _in_is & var_pres('ZLP',_in)=type_of(null()) || _zlp:=_in.ZLP ?};
   {? _zlp<>null()
   ||
      ZLE.cntx_psh();
      ZLP.cntx_psh();
::    usuwanie zaznaczen
      _ndx:=ZLP.ndx_tmp('',,'ZLE','KH',,'F',,,'FAKS',,);
      ZLP.index(_ndx);
      ZLP.prefix(ZLP.ZLE().KH,'T','N');
      {? ZLP.first()
      ||
         {!
         |?
            {? ZLP.TEN='*' & 10+ZLP.USER=10+username()
            || ZLP.TEN:=' ';
               ZLP.put()
            ?};
            ZLP.next()
         !}
      ?};
      ZLP.ndx_drop(_ndx);
      ZLP.prefix();
      {? ZLP.seek(_zlp)
      ||
::       zaznacznie
         exec('zazn_biez','umowy_faktury');
         _continue:=ZLP.TEN='*' & ZLP.USER=20+username()
      ?};
      {? _continue
      ||
         POMOC.LOCK:='T';
         _c:=ZLP.ZLE().KH;
         _g:=ZLP.CB
      ?}
   ?};
:: miejsce wystawienia faktury
   HELP.WHERE:=FAKS.WHERE:=_a;
:: typ dokumentu sprzedaży
   _typ:=exec('tsp_fak','typysp',{? BEER.SZ='Z' & HELP.WHERE='L' || 'l' || HELP.WHERE ?},_g,,_i,_j);
   {? _continue & _typ<>null & (TYPYSP.clear(); TYPYSP.seek(_typ))
   ||
::    parametry numeracji
      POM.TYPDOK:=TYPYSP.KOD;
      POM.NRT:=TYPYSP.NRT;
::    zerowanie FAKS.UWAGI
      FAKS.memo_set(,'UWAGI');
::    wartość rabatu w nagłówku przed redakcją
      TAZ.RAB_N_BE:=0;
::    faktura generująca dokument
      {? _a='G'
      ||
::       ustawienie filtru na TYPYDOK
         TYPYDOK.f_clear();
         TYPYDOK.index('TYP');
         TYPYDOK.prefix();
         TYPYDOK.f_set('T',,'"TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'N\' and "TYPYDOK".DS=\'T\' and "TYPYDOK".DK=\'N\' '
                  +{? TYPYSP.FIS='T' || 'and "TYPYDOK".UE=\'N\' ' || '' ?});
         TYPYDOK.win_dict('SLO')
      ?};
:: wg zleceń fakturowania
      _esc:=0;
      _fakz:=obj_new('FAKTURUJ','TAB','NAME');
      _fakz.FAKTURUJ:=0;
      _fakz.NAME:=FAKZ.name();
      {? _in_is & var_pres('FAKZ',_in)=type_of(null())
      ||
         _fakz.FAKTURUJ:=1;
         _Tab:=_fakz.TAB:=tab_tmp(,'REF','INTEGER','REF');
         {? _in.FAKZ
         ||
            {? exec('FindAndGet','#table',FAKZ,_in.FAKZ,,"FAKZ.STAT_REJ='T' & FAKZ.CZY_FAK='N'",0)
            ||
               _Tab.REF:=#_in.FAKZ;
               _Tab.add()
            ||
               FUN.info('Zlecenie fakturowania nie spełnia kryteriów.'@
                  +'\nZadanie zostanie zakończone.'@);
               _esc:=1
            ?}
         ||
            FUN.info('Nie znaleziono zlecenia fakturowania'@);
            _esc:=1
         ?}
      |? _in_is & var_pres('ZLF',_in)=type_of('') & _in.ZLF='TAK'
      ||
         _oddz:=ST.ODDZ;
         _ar:=ST.AR;
         _am:=ST.AM;
         FAKZ.cntx_psh();
         FAKZ.f_clear();
         {? ST.STS
         ||
            FAKZ.index('STS_DF1');
            FAKZ.prefix(ST.AR,ST.AM,REF.FIRMA,ST.ODDZ,$ST.STS,'T','N','N')
         ||
            FAKZ.index('DF1');
            FAKZ.prefix(ST.AR,ST.AM,REF.FIRMA,ST.ODDZ,'T','N','N')
         ?};
         {? _context_is & var_pres('FAKZ',_context)=type_of(null()) || FAKZ.seek(_context.FAKZ) ?};
         FAKZ.win_sel('SEL');
         params_set('fakz',_fakz);
         {? FAKZ.select(,1,1)
         ||
            _Tab:=_fakz.TAB;
            _fakz.FAKTURUJ:=1;
            _fakz.NAME:=FAKZ.name()
         ||
            _esc:=1
         ?};
         FAKZ.cntx_pop();
         __PARSES.setVal('OddzialLogProd',_oddz);
         _args:=__PARSES.args('OkresRok');
         _args.OBSZAR:='LSP';
         _args.AR:=_ar;
         _args.AM:=_am;
         __PARSES.setVal('OkresRok',_args);
         __PARSES.setEnv(_mp.buf_act.UID);
         {? FAKZ.win_sel('?')<>'SEL'
         || _sts:={? ST.STS || '(\''+$ST.STS+'\')' || '' ?};
            _sort:='DF';
            _from:='';
            _where:="FAKZ.AR=:_a "
                     +{? FILTER.STATUS='M' || "and FAKZ.AM=:_b " || "" ?}
                     +{? _sts='' || "" || "and FAKZ.STS in :_c" ?};
            {? FAKZ.sel_size() || FAKZ.sel_adel() ?};
            FAKZ.prefix();
            FAKZ.f_set(_sort,_from,_where,ST.AR,ST.AM,_sts)
         ?}
      ?};
:: wg dokumentu w obiegu
      {? ~_esc & _wg_edokum
      || _wg_edokum:=2;
         exec('edok_psh','open_tab');
         exec('open_edok','open_tab',ref_name(_m)+2);
         EDOKUM.prefix();
         {? ~EDOKUM.seek(_m) || _esc:=0 ?}
      ?};
:: Dokument Businesslink
      {? _context_bl
      ||
         __PARSES.setVal('OddzialLogProd',_context.ODDZ);
         _args:=__PARSES.args('OkresRok');
         _args.OBSZAR:='LZK';
         _args.AR:=_context.DW~1;
         _args.AM:=_context.DW~2;
         __PARSES.setVal('OkresRok',_args);
         __PARSES.setEnv(_mp.buf_act.UID)
      ?};
:: dodanie nagłówka dokumentu
      {? ~_esc
       & {? ~_wg_edokum
         || exec('add','faktury_nag',TYPYSP.ref,,,_c,,,,,,,,_b,,,,,,,,,,_l)
         || exec('add','faktury_nag',TYPYSP.ref(),EDOKUM.DOP,,_c,,,,,'T',,EDOKUM.DW,'O',,,EDOKUM.DO,EDOKUM.SYM,$_m)
         ?}
       & (_r_lock:=exec('r_lock_one','#table',FAKS,FAKS.ref()))
      ||
::       aktualizacja informacji dodatkowych
         exec('inf_dod','fakso',0,'faktu');

         BEER.WYSTFAKS:=FAKS.ref();
         _dod_nag:=1;
         FAKS.WHERE:=_a;
         {? FAKS.WHERE='P'
         || exec('faks_wal_set','faktury_nag1')
         ?};

         {? _wg_edokum
         ||
:: wg dokumentu w obiegu
::          kwota zaliczki i data zaliczki
            _kw_zal:=0;
            _dokzal:=EDOKUM.TYP().FAKT_ZAL='T';
            _wg_brt:={? FAKS.SZ='S' || FAKS.T().FIS='T' || EDOKUM.TYP().TYP_CENY='B' ?};
            _dokwal:=FAKS.WAL<>INFO.NAROD;
            _zakupy:=0 & BEER.SZ='Z';
            {? _dokzal
            || _da_zal:=EDOKUM.DOP
            || _da_zal:=date(0,0,0)
            ?};

            {? _zakupy || exec('faksv_rm','faktury_vat',$FAKS.ref) ?};
            {? ~_dokwal
            || EVAT.index('EDOKUM');
               EVAT.prefix(EDOKUM.ref());
               {? EVAT.first()
               || {!
                  |? {? _dokzal || _kw_zal+={? _wg_brt || EVAT.BRUTTO || EVAT.NETTO ?} ?};
                     _cena:={? _wg_brt || EVAT.BRUTTO || EVAT.NETTO ?};
                     exec('ADDPOZF','faktury_poz',null(),1,_cena,0,EVAT.PR,,,,,,,,,,,,,);
                     {? _zakupy
                     || exec('edok2vat','faktury_vat',$FAKS.ref(),EVAT.PR,EVAT.NETTO,EVAT.VAT,EVAT.BRUTTO)
                     ?};
                     EVAT.next()
                  !};
                  FAKSV.cntx_psh();
                  FAKSV.index('FF_SV');
                  FAKSV.prefix('',$FAKS.ref());
                  _loop:=FAKSV.first();
                  {!
                  |? _loop
                  |!
                     FAKSV.R:=1;
                     _loop:=FAKSV.put() & FAKSV.next()
                  !};
                  FAKSV.cntx_pop()
               ?}
            || _cena:={? _wg_brt || EDOKUM.WART || EDOKUM.NETTO ?};
               exec('ADDPOZF','faktury_poz',null(),1,_cena,0,null(),null(),,_cena,1,EDOKUM.WAL,,,,,,,,);
               {? _dokzal || _kw_zal:=EDOKUM.WART ?}
            ?};
            EDOKUM.STATUS:=exec('ustal_status','obiegi_log',EDOKUM.uidref());
            EDOKUM.FAKS:=$FAKS.ref();
            EDOKUM.DOK_POW:=FAKS.uidref();
            EDOKUM.LOG_PRZ:='T';
            EDOKUM.put(1);
            {? FAKS.WAL=INFO.NAROD || FAKS.WAL:=FAKS.NWAL:=INFO.NAROD || FAKS.WAL:=EDOKUM.WAL ?};
            {? FAKS.WHERE='L' || FAKS.D:=_da_zal || FAKS.DA_ZAL:=_da_zal ?};
            FAKS.KW_ZAL:=_kw_zal;
            FAKS.OBI_POW:=EDOKUM.uidref();
            FAKS.TZ:=EDOKUM.TP;
            FZ.FORMAPLA:=EDOKUM.PLATNOSC().KOD;
            FZ.PL:=EDOKUM.PLATNOSC;
            FZ.TERMPLAT:=exec('term_plat','faktury_plat','PL','N',FAKS.ref());
            exec('plat_one','faktury_plat',FAKS.ref());
            FAKS.put(1)

         |? _fakz.FAKTURUJ
         ||
:: wg zleceń fakturowania
            PROJEKTY.cntx_psh();
            FAKZ.cntx_psh();
            FAKZ.use(_fakz.NAME);
            FAKZ.prefix();
            _loop:=_Tab.first();
::          forma płatności z projektu
            _pl:=null();
            _projekty:=null();
            _projzakr_ok:=FAKS.T().PROJZAKR=exec('projzakr_wszystkie','projekty')
               | FAKS.T().PROJZAKR=exec('projzakr_zewnetrzne','projekty');
            {? _projzakr_ok
            ||
               _pl:=~~;
               _projekty:=~~;
               _loop:=_Tab.first();
               {!
               |? _loop
               |!
                  {? FAKZ.seek(_Tab.REF,)
                  || {? _pl=~~ || _pl:=FAKZ.PROJEKTY().PL ?};
                     {? _projekty=~~ || _projekty:=FAKZ.PROJEKTY ?};
                     {? _projekty<>FAKZ.PROJEKTY || _projekty:=null() ?};
                     _ok:=_pl=FAKZ.PROJEKTY().PL
                  ?};
                  _loop:=_ok & _Tab.next()
               !}
            ?};
::          kwota zaliczki i data zaliczki
            _da_zal:=date(0,0,0);
            _kw_zal:=0;
            _zlf:=null();
            _loop:=_Tab.first();
            {!
            |? _loop
            |!
               _continue:=1;
               {? FAKZ.seek(_Tab.REF,)
               || {? FAKZ.ZAL='T'
                  || _zlf:=FAKZ.ref();
                     _da_zal:=FAKZ.DA_ZAL;
                     _kw_zal:=FAKZ.WB;
                     _continue:=0
                  |? _zlf=null()
                  || _zlf:=FAKZ.ref()
                  ?}
               ?};
               _loop:=_continue & _Tab.next()
            !};
::          uzupełnienie nagłówka dokumentu wg danych z zleceń fakturowania
            {? FAKZ.seek(_zlf)
            ||
               {? FAKZ.DF<>date(0,0,0) || FAKS.D:=FAKS.DO:=FAKZ.DF ?};
               FAKS.DW:=FAKZ.DW;
               {? FAKS.DW=date(0,0,0) || FAKS.DW:=FAKS.D ?};
               FAKS.DO_NA_DR:=FAKS.DO;

               FAKS.PROJEKTY:=_projekty;
               FAKS.KH:=FAKZ.KH;
               FAKS.KH_ODB:=FAKZ.KH_ODB;

::             sprawdzenie walutowości
               {? FAKZ.WAL<>null || FAKS.WAL:=FAKZ.WAL ?};
::             generowanie subkonta
               exec('subkonta','rachunki',2,FAKZ.KH);
::             podpowiadanie subkonta
               RACHBANK.AKTYWNY:='T';
               _kh_ref:=exec('kh2rbk','faktury_wspolne');
               exec('rb_aktywne','rachunki',REF.FIRMA().SYMBOL+'KH2',#_kh_ref);
               {? SKID_RBK.size=1 & SKID_RBK.first()
               || FAKS.SKID_RBK:=SKID_RBK.ref;
                  FAKS.RBK:=SKID_RBK.N
               ?};
::             -----

               FAKS.HAN:=__War_f('KH_DOD','HAN',FAKS.KH);
               exec('duplikuj_dane','faktury_wspolne','KH','KH_ODB');
               {? FAKS.WHERE='L' || FAKS.DO:=_da_zal || FAKS.DA_ZAL:=_da_zal ?};
               FAKS.KW_ZAL:=_kw_zal;
               exec('del_plat','faktury_plat',FAKS.ref());
               exec('plat_default','faktury_plat',{? FAKS.T().PAR<>'T' || FAKS.KH || FAKS.T().KH ?},_pl);
               {? FAKS.put()
               ||
::                wyłączenie kopiowania uwag na nagłówek dokumentu
                  {? 0 & FAKZ.UWAGI
                  || FAKS.memo_put(FAKZ.memo_get('r','UWAGI'),'UWAGI');
                     FAKS.memo_get(,'UWAGI')
                  ?};
::                zapis w tabeli powiązań zleceń fakturowania z pozycjami faktur lub fakturami
                  exec('fakz2fap_add','faktury_wspolne',FAKZ.uidref(),FAKS.ref,null());
::                Uzupełnienie pozostałych danych dla FAKS wg wtyczki
                  Plugin.run('FAKS_FAKZ_001','FAKS')
               ?}
            ?};
::          dodanie pozycji wg zleceń fakturowania
            _ask:=-1;
            _loop:=_Tab.first();
            {!
            |? _loop
            |!
               {? FAKZ.seek(_Tab.REF,) & FAKZ.ZAL='N'
               ||
                  _projekty:={? _projzakr_ok || FAKZ.PROJEKTY || null() ?};
                  _fakz_proj:=FAKZ.PROJEKTY;
                  _cena:={? TYPYSP.FIS='T' || FAKZ.CB || FAKZ.CN ?};
                  _vat:=exec('m_vat','material',FAKZ.M,FAKZ.KH,,FAKZ.DF~1,FAKZ.DF~2);
                  {? var_press('_tab_del')>100 || obj_del(_tab_del) ?};
                  _tab_del:=tab_tmp(1,'REF','INTEGER','Referencja'@);
:: sprawdzeenie czy można połączyć pozycje
                  _Tab.cntx_psh();
                  FAKZ.cntx_psh();
                  _ktm:=FAKZ.M;
                  _wal:={? FAKZ.WAL<>null || FAKZ.WAL ?};
                  _il:=FAKZ.IL;
                  {? _Tab.next()
                  ||
                     {!|?
                        {? _ask<>0
                        & FAKZ.seek(_Tab.REF,)
                        & FAKZ.ZAL='N'
                        & _ktm=FAKZ.M
                        & _fakz_proj=FAKZ.PROJEKTY
                        & _cena={? TYPYSP.FIS='T' || FAKZ.CB || FAKZ.CN ?}
                        & _vat=exec('m_vat','material',FAKZ.M,FAKZ.KH,,FAKZ.DF~1,FAKZ.DF~2)
                        & _wal={? FAKZ.WAL<>null || FAKZ.WAL ?}
                        & ({? _ask=-1 || _ask:=FUN.ask('Czy łączyć zlecenia fakturowania\ndo jednej pozycji?'@)?};_ask)
                        ||
                           _il_n:=FAKZ.IL;
                           _ref:=_Tab.REF;
                           _Tab.cntx_psh();_notlast:={? _Tab.last() & _Tab.REF=_ref || 0 || 1 ?}; _Tab.cntx_pop();
                           {? _Tab.del(1) || _tab_del.REF:=_ref; _tab_del.add(); _il+=_il_n;_notlast || _Tab.next() ?}
                        || _Tab.next()
                        ?}
                     !}
                  ?};
                  _Tab.cntx_pop();
                  FAKZ.cntx_pop();

                  {? exec('ADDPOZF','faktury_poz',FAKZ.M,_il,_cena,0,_vat,,,
                     {? FAKS.WAL().KOD<>'PLN' || _cena || 0 ?},,
                     {? FAKZ.WAL<>null || FAKZ.WAL ?},,,,,,,,_projekty)
                  ||
                     {? FAKZ.UWAGI || FAP.memo_put(FAKZ.memo_get('r','UWAGI'),'UWAGI') ?};
::                   zapis w tabeli powiązań zleceń fakturowania z pozycjami faktur
                     exec('fakz2fap_add','faktury_wspolne',FAKZ.uidref(),FAKS.ref,FAP.ref());
                     FAKZ.cntx_psh();
                     FAKZ.prefix();
                     {? _tab_del.first()
                     ||
                        {!|?
                           {? FAKZ.seek(_tab_del.REF,)
                           || exec('fakz2fap_add','faktury_wspolne',FAKZ.uidref(),FAKS.ref,FAP.ref())
                           ?};
                           _tab_del.next()
                        !}
                     ?};
                     FAKZ.cntx_pop();
::                   naliczenie opłat dodatkowych
                     exec('actTAXS','oplaty_dod',FAP.FAKS().uidref(),FAP.uidref(),FAP.M,null());
::                   aktualizacja informacji dodatkowych
                     exec('inf_dod','fakso',0,'fakpo');
::                   Uzupełnienie pozostałych danych dla FAP wg wtyczki
                     Plugin.run('FAKS_FAKZ_001','FAP')
                  ?};
                  {? var_press('_tab_del')>100 || obj_del(_tab_del) ?}
               ?};
               _loop:=_Tab.next()
            !};
            FAKZ.cntx_pop();
            PROJEKTY.cntx_pop()

         |? _a='L'
         ||
:: dokument zaliczkowy
            exec('taz_sd_set','ceny');
            _kh_rab:=exec('sp_plat','kontrahent',FAKS.KH,1);
            _zk_rab:=exec('zk_rab','ceny',FAKS.ref);
            FAKS.RAB:={? _zk_rab[2] || _zk_rab[2] |? _kh_rab || _kh_rab || 0 ?};
            {? TAZ.RAB_N_BE=0 & _zk_rab[2]=0 || TAZ.RAB_N_BE:=FAKS.RAB ?};
            exec('fill_kraj_vat','faktury_nag1',_e,_d);
            {? _d<>null
            ||
:: dokument zaliczkowy: z zamówienia
::             kwota zaliczki: jaki % wartosci zamowienia
               _procent:=0;
               _param:=exec('get','#params',300300,1);
               {? _h>0
               || _procent:=0
               |? _param<=0
               || HELP.win_edit('PROCENT');
                  {? HELP.edit("{? HELP.PRC<0 || FUN.info('Należy podać procent większy od zera.'@); 'PRC' || '' ?}")
                  || _procent:=HELP.PRC
                  ?}
               || _procent:=_param
               ?};

               ZK_N.cntx_psh();
               ZK_N.prefix();
               {? ZK_N.seek(_d)
               || DISP.RAB:=FAKS.RAB:=ZK_N.RAB;
                  {? _h>0
                  || FAKS.KW_ZAL:=_h$2
                  |? _procent
                  || _narod:=ZK_N.WAL=exec('bl_nwal','ustawienia');
                     _kw_zal:=FAKS.KW_ZAL:=(exec('oblBRTZal','magdok_wspolne',ZK_N.ref(),~_narod)*(_procent/100))$2
                  ?};
                  FAKS.WAL:=ZK_N.WAL;
                  FAKS.KRS:=FAKS.NKRS:=ZK_N.KRS;
                  FAKS.DTK:=FAKS.NDTK:=ZK_N.DTK;
                  FAKS.HAN:=ZK_N.HAN;
                  FAKS.put(1);

                  FZ.FORMAPLA:=ZK_N.PL().KOD;
                  FZ.PL:=ZK_N.PL;
                  FZ.TERMPLAT:=exec('term_plat','faktury_plat','PL','N',FAKS.ref());
                  exec('plat_one','faktury_plat',FAKS.ref())
               ?};
               ZK_N.cntx_pop()

            |? _e<>null
            ||
:: dokument zaliczkowy: kolejny
               _wal:=INFO.NAROD;
               _krs:=0;
               _dtk:=date(0,0,0);
               _han:=null;

               FAKS.cntx_psh();
               FAKS.use(ref_name(_e));
               FAKS.prefix();
               {? FAKS.seek(_e)
               ||
                  _wal:=FAKS.WAL;
                  _krs:=FAKS.KRS;
                  _dtk:=FAKS.DTK;
                  _han:=FAKS.HAN;
                  _ndvat:=FAKS.NDVAT
               ?};
               FAKS.cntx_pop();

               FAKS.WAL:=_wal;
               FAKS.KRS:=FAKS.NKRS:=_krs;
               FAKS.DTK:=FAKS.NDTK:=_dtk;
               FAKS.HAN:=_han;
               FAKS.NDVAT:=_ndvat;
               {? _h>0
               ||
:: dokument zaliczkowy: kolejny i podano kwotę zaliczki
                  FAKS.KW_ZAL:=_h$2;
                  FAKS.put(1)
               ?}

            |? _h>0
            ||
:: dokument zaliczkowy: pierwszy i podano kwotę zaliczki
               FAKS.KW_ZAL:=_h$2;
               FAKS.put(1)
            ?}
         ?};
:: dokument Businesslink
         {? _context_bl
         ||
            FAKS.DW:=_context.DW;
            FAKS.KH:=_context.KH;
            FAKS.KH_ODB:=_context.KH_ODB;
            {? FAKS.put()
            ||
               {? XINFO.SLP<>null
               || exec('plat_default','faktury_plat',FAKS.KH)
               ?};
               exec('FindAndGet','#table',DOKUM,_context.DOKUM,,"
                  @.DOKUM.REFSQL:=_b;
                  @.DOKUM.BL_STAT:=exec('during_registration','zbl_stat');
                  @.DOKUM.put()
               ",,$FAKS.ref())
            ?}
         ?};

:: parametry
         _var_wystinne:=obj_new('WHERE','ZK_N','FAKS','CZY_DRUK','KW_ZAL','ZLP');
         _var_wystinne.WHERE:=_a;
         _var_wystinne.ZK_N:=_d;
         _var_wystinne.FAKS:=_e;
         _var_wystinne.CZY_DRUK:=_f;
         _var_wystinne.KW_ZAL:=_kw_zal;
         _var_wystinne.ZLP:=_zlp;
         _var_fakpop:=exec('var_fakpop','faktury_nag');
         _var_fakpop.RAB:=FAKS.RAB;
         _var_fakpop.KRS:=FAKS.KRS;
         _var_fakpop.NKRS:=FAKS.NKRS;
         _var_fakpop.R_LOCK:=_r_lock;
         _var_fakpop.PO_FIRST:=1;
         {? _fakz.FAKTURUJ
         || _var_fakpop.PO_FIRST:=2
         ?};

::       Parametr 'context' wykorzystywany w:
::       - exec('faks_pozycje_red','faktury_nag')
::       - exec('faks_zakoncz_red','faktury_nag')
::       Parametry 'var_wystinne','var_fakpop' wykorzystywany w:
::       - exec('faks_pozycje_red','faktury_nag')
::       - exec('faks_zakoncz_red','faktury_nag')
::       - exec('put',faktury_nag') -> exec('putfak',faktury_nag') -> exec('putfakb',faktury_nag')
::       - exec('fak_pop_po','faktury_nag',_dod_nag)
::       - exec('wystinne_po','faktury_nag')
         params_set('context',params_get(),'var_wystinne',_var_wystinne,'var_fakpop',_var_fakpop);

         {? _k
         ||
:: utworzenie pozycji dokumentu wg danych w systemie
            exec('wystinne_po','faktury_nag',_dod_nag);
            _var_fakpop.RAB:=FAKS.RAB;
            _var_fakpop.KRS:=FAKS.KRS;
            _var_fakpop.NKRS:=FAKS.NKRS;
            _var_fakpop.KH:=FAKS.KH;
            _var_fakpop.ODB:=FAKS.KH_ODB;
            _var_fakpop.WAL:=FAKS.WAL;
            _var_fakpop.PL:=FAKS.PL;
            _var_fakpop.IST_TYP:=FAKS.IST_TYP;
            _var_fakpop.RTRANSAK:=FAKS.RTRANSAK;
            _var_fakpop.R_LOCK:=_r_lock;
            _var_fakpop.PO_FIRST:=0
         ?};
         exec('faks_win_edit_set','faktury_nag');
         _dod_nag:=exec('put','faktury_nag',1);
         {? KH_ODB.f_active() || KH_ODB.f_clear() ?};
         {? FAKS.STAT_REJ='N'
         || _dod_nag:=exec('fak_pop_po','faktury_nag',{? _dod_nag || 1 || -1 ?},1);
            {? _var_fakpop.PO_FIRST=1 || exec('wystinne_po','faktury_nag',_dod_nag); _var_fakpop.PO_FIRST:=2 ?}
         ?};
         {? _dod_nag & exec('FindInSet','#table','FAP','FAP',FAKS.ref())=null()
         || BPMN.END:=1;
            params_exec('pozycje_fak','faktury_poz',,exec('acts_schem_faks','faktury_poz'));
            {? BPMN.END=2 & exec('FindInSet','#table','FAP','FAP',FAKS.ref())<>null()
            || exec('faks_zakoncz_red','faktury_nag')
            ?}
         ?};
         {? _dod_nag
         ||
            exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock);
            _wyn:=FAKS.ref()
         ?}
      |? ~_esc
      || FUN.info('Nie udało się utworzyć faktury.'@)
      ?};
      {? _wg_edokum=2 || exec('edok_pop','open_tab') ?};
      {? _a='G' || TYPYDOK.f_clear() ?}
   ?};
   {? _zlp<>null()
   ||
      {? ZLP.get()
      ||
         ZLP.TEN:='';
         ZLP.put()
      ?};
      ZLP.cntx_pop();
      ZLE.cntx_pop()
   ?};
   FAKS.cntx_pop()
?};
POMOC.LOCK:=_p_lock;
_wyn


\wystinne_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Obsługa dołącz po zakończeniu edycji (FAKS.edit)
::   WE: _a - wynik funkcji edit
::       params_get()   - ustawiany w exec('wystinne','faktury_nag')
::----------------------------------------------------------------------------------------------------------------------
_dod_nag:=_a;
_var_wystinne:=params_get().var_wystinne;

_a:=_var_wystinne.WHERE;
_d:=_var_wystinne.ZK_N;
_e:=_var_wystinne.FAKS;
_f:=_var_wystinne.CZY_DRUK;
_h:=_var_wystinne.KW_ZAL;
_zlp:=_var_wystinne.ZLP;

{? _dod_nag=1
||
   {? _a='L' & _d<>null
   ||
:: utworzenie pozycji na podstawie pozycji zamowienia sprzedaży
      exec('zkp2fap','faktury_zalicz',_d)

   |? _a='L' & _d=null & _e<>null
   ||
:: utworzenie pozycji na podstwie wczesniejszej faktury zaliczikowej
      exec('fap2fap','faktury_zalicz',_e)

   |? _a='L' & _d=null & _h>0 & exec('FindInSet','#table','FAKZ2FAP','FAKS',FAKS.ref(),null())
   ||
:: utworzenie pozycji na podstawie wpłaty gotówkowej
      exec('wpl2fap','kasa_wplaty')

   |? _a='L' & _zlp<>null()
   ||
:: utworzenie pozycji na podstawie zgłoszenia jednorazowego _zlp
      exec('zle_fak','umowy_zlecenia',_zlp,1)

   |? _a='J'
   ||
:: utworzenie pozycji na podstawie zgłoszeń jednorazowych
      exec('zle_fak','umowy_zlecenia',_zlp,0)
   ?};
   {? _a='L'
   ||
:: dokument zaliczkowy - utworzenie FAPOW
      exec('fp_add','faktury_zalicz',FAKS.ref(),_d,_e,_zlp)
   ?};
:: aktualizacja pozycji dokumentu
   FAP.index('FAP');
   FAP.prefix(FAKS.ref());
   {?  FAP.first()
   ||
      {!
      |?
::       naliczenie opłat dodatkowych
         exec('actTAXS','oplaty_dod',FAP.FAKS().uidref(),FAP.uidref(),FAP.M,null());
::       informacje dodatkowe - pozycja
         exec('inf_dod','fakso',0,'fakpo');
         FAP.next()
      !}
   ?};
:: aktualizacja wartości dokumentu
   exec('sumfak','faktury_wspolne');
:: aktualizacja wartosci platnosci - jeszcze przed drukowaniem
   {? FAKS.AKC<>'T' || exec('plat_przel','faktury_plat',FAKS.ref()) ?};
:: informacje dodatkowe - nagłówek
   exec('inf_dod','fakso',0,'faktu')
?};
~~


\check
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza czy wypelnione sa wszystkie pola na fakturze
::   WE: 0 - dokument manualny (domyślnie), 1 - import z komunikatu EDI
::  OLD: \check/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _edi:=_a
|| _edi:=0
?};
_wyn:='';

{? FAKS.T().KOR='Z' || return(exec('faks_kzn_val','faktury_nag1')) ?};

{? FAKS.AKC='T' || return(_wyn) ?};

{? FAKS.AKC<>'T' & ~_edi || exec('plat_przel','faktury_plat',FAKS.ref) ?};
_checkpla:=exec('check_plat','faktury_plat',FAKS.ref);

:: kontrahent
{? (_wyn='' | _edi) & FAKS.KH=null
|| {? _edi & var_pres('FIND_KH2')=type_of('') & FIND_KH2<>''
   || _msg:='Należy podać kontrahenta (nieznany kod: %1)'@[FIND_KH2]
   || _msg:='Należy podać kontrahenta.'@
   ?};
   {? _edi
   || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='KH'
?};
{? _wyn='' | (_edi & FAKS.KH<>null())
|| _wyn0:=exec('f_kh_gv_sprawdz','faktury_nag1','FAKS',1,0);
   {? ~_wyn0.WYNIK
   || _msg:=_wyn0.MSG;
      {? _edi
      || exec('add_kom','#message',gsub(_msg,'\n',' '),4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='KH'
   ?};
   &_wyn0
?};
{? (_wyn='' | (_edi & FAKS.KH<>null())) & FAKS.SZ='S'
||
   exec('kh_blok','faktury_nag','faks_check',_edi)
?};

:: NIP UE
{? _wyn='' & FAKS.T().UE='T' & FAKS.NIP_UE<>'' & INTRAST.NIP='' || INTRAST.NIP:=FAKS.NIP_UE ?};
{? (_wyn='' | _edi) & FAKS.T().UE='T' & INTRAST.NIP='' & (FAKS.SZ='S' | FAKS.SZ='Z' & FAKS.IST_TYP<>'')
   & exec('nip_ue_required','intrastat')
|| _msg:='Należy podać NIP UE.'@;
   {? _edi
   || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='NIP'
?};

:: Data wystawienia
{? _wyn='' & exec('get','#params',300803,2)='T' &
   FAKS.SYMF<>'' &
   FAKS.DW<(_data_wyst:=exec('FindAndGet','#table',FAKS,FAKS.SYMF,,"DW",0);_data_wyst)
|| _msg:='Data wystawienia faktury nie może być wcześniejsza niż data wystawienia paragonu (%1).'@[$_data_wyst];
   {? _edi
   || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='DW'
?};

:: handlowiec
::{? _wyn=''
::||
::   {? FAKS.SZ='S' & FAKS.HAN=null & (FAKS.T().KOR='N' | FAKS.T().HIS='T')
::   || FUN.info('Należy podać handlowca.'@);
::      _wyn:='HAN'
::   ?}
::?};

:: zewnętrzny symbol faktury
{? (_wyn='' | _edi) & FAKS.SZ='Z' & FAKS.T().UE='N' & FAKS.WHERE<>'E'
|| {? FAKS.ID=''
   || _msg:='Należy podać numer dokumentu nadany przez wystawcę.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='ID'
   ?}
?};

:: dokument korygowany
{? (_wyn='' | _edi) & FAKS.T().HIS='T' & FAKS.T().KOR='T'
|| {? FAKS.KOR=''
   || _msg:='Symbol dokumentu korygowanego musi być wypełniony.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='KOR'
   ?}
?};

:: data wystawienia
{? _wyn='' | _edi
|| {? FAKS.DW<>date(0,0,0)
   || _wyn:=exec('chk_dw','faktury_nag',_edi)
   || _msg:='Należy podać datę wystawienia.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='DW'
   ?}
?};
{? _wyn='' | _edi
|| _msg:='';
   _ctrl_dt:={? FAKS.SZ='Z'
             || _msg:='Rok jednej z dat (wystawienia, otrzymania) musi być zgodny z okresem obrachunkowym.'@;
                ST.AR<>(FAKS.DW~1) & ST.AR<>(FAKS.DO~1)
             || _msg:='Rok daty wystawienia niezgodny z okresem obrachunkowym.'@;
                ST.AR<>(FAKS.DW~1)
             ?};
   {? _ctrl_dt
   || {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='DW'
   ?}
?};

:: data sprzedaży/zaliczki
{? _wyn='' | _edi
|| {? FAKS.D<>date(0,0,0)
   || _wyn:=exec('chk_d','faktury_nag',_edi)
   || {? FAKS.WHERE='L'
      || _msg:='Należy podać datę zaliczki.'@;
         {? _edi
         || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
         || FUN.info(_msg)
         ?}
      || _msg:='Należy podać datę sprzedaży.'@;
         {? _edi
         || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
         || FUN.info(_msg)
         ?}
      ?};
      _wyn:='D'
   ?}
?};
{? (_wyn='' | _edi) & FAKS.KOR<>''
|| _ref:=FAKS.LKSQL;
   _name:=form(8+FAKS.LKSQL);
   _dat:=date(0,0,0);
   FAKS.cntx_psh();
   FAKS.clear();
   {? FAKS.seek(_ref,_name)
   || _dat:=FAKS.DW
   ?};
   FAKS.cntx_pop();
   {? FAKS.DW<_dat & _dat<>date(0,0,0) & FAKS.T().HIS<>'T'
   || _msg:='Data korekty musi być większa od daty dokumentu korygowanego.\n'
            'Data dokumentu korygowanego: %1.'@ [$_dat];
      {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:={? FAKS.WHERE='N' || 'DW' || 'D' ?}
   ?}
?};

:: data dostawy
{? (_wyn='' | _edi) & FAKS.SZ='S' & FAKS.WHERE<>'L' & FAKS.DO<>date(0,0,0)
|| {? FAKS.DO<FAKS.D
   || _msg:='Data dostawy nie może być wcześniejsza od daty sprzedaży.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='DO'
   ?}
?};
{? (_wyn='' | _edi) & FAKS.SZ='Z' & FAKS.WHERE<>'E'
|| {? FAKS.DO=date(0,0,0)
   || _msg:='Należy podać datę otrzymania.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='DO'
   ?}
?};

:: data zwrotu
_tow:=0;
{? FAKS.SZ='S' & FAKS.T().KOR='T'
|| FAP.cntx_psh;
   FAP.index('FAP'); FAP.prefix(FAKS.ref);
   {? FAP.first
   || {!
      |?
         _tow:=FAP.M().RODZ='T';
         _tow=0 & FAP.next
      !}
   ?};
   FAP.cntx_pop
?};
{? _wyn='' | _edi
||
   {? FAKS.WHERE<>'L' & FAKS.SZ='S' & FAKS.WHERE<>'L' & FAKS.T().KOR='T' & _tow=1
   || {? FAKS.DZ=date(0,0,0)
      || {? exec('czy_zwrot','faktury_nag',FAKS.ref())='T'
         || _msg:='Należy podać datę zwrotu.'@;
            {? _edi
            || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
            || FUN.info(_msg)
            ?};
            _wyn:='DZ'
         ?}
      |? exec('FindInSet','#table','OKR','OKR',FAKS.DZ~1,REF.FIRMA)=null
      || _msg:='Brak zdefiniowanego roku obrachunkowego dla daty zwrotu: %1.\n'
               'Należy podać datę zwrotu z innego roku.'@ [form(FAKS.DZ)];
         {? _edi
         || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
         || FUN.info(_msg)
         ?};
         _wyn:='DZ'
      ?}
   ?}
?};
{? _wyn='' | _edi
|| {? FAKS.WHERE<>'L' & FAKS.SZ='S' & FAKS.WHERE<>'L' & FAKS.T().KOR='T' & FAKS.DZ<FAKS.D & _tow=1
      & exec('czy_zwrot','faktury_nag',FAKS.ref())='T'
   || _msg:='Data zwrotu powinna być większa lub równa dacie sprzedaży.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:={? ~FAKS.WGZWR || 'DZ' || 'D' ?}
   ?}
?};
:: data korekty historycznej
{? (_wyn='' | _edi) & FAKS.T().HIS='T' & FAKS.T().KOR='T'
|| {? FKOR.DF=date(0,0,0)
   || _msg:='Data dokumentu korygowanego nie może być zerowa.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='DF'
   |? FKOR.DF>FAKS.DW
   || _msg:='Data dokumentu korygowanego nie może być większa od daty dokumentu.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='DF'
   ?}
?};

:: forma, termin płatności
{? _wyn='' | _edi
|| {? (_checkpla=0 | _checkpla=1)
         &
      (
         {? FAKS.WAL<>FAKS.NWAL || FAKS.NETW>0 || FAKS.NETTO>0 ?}
            |
         FAKS.T().KOR='N'
            |
         FAKS.SZ='S' & FAKS.T().KOR='T' & exec('get','#params',100301,2)='T'
      )
   || _msg:='Należy podać sposób płatności.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='FORMAPLA'
   |? _checkpla=2 & exec('term_pr','faktury_plat')
   || TYPYSP.cntx_psh();
      _txt:='Termin płatności nie może być wcześniejszy od daty wystawienia.'@;
      {? FAKS.SYMF<>'' & FAKS.T().PAR='N'
      || _txt:='Termin płatności nie może być wcześniejszy od daty wystawienia paragonu.'@
      ?};
      TYPYSP.cntx_pop();
      _msg:='Należy podać prawidłowy termin płatności.\n'@+_txt;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='TERMPLAT'
   ?}
?};
{? (_wyn='' | (_edi & FAKS.KH<>null())) & FAKS.SZ='S' & FAKS.WHERE<>'M' & FAKS.T().KOR='N' & FAKS.T().PAR<>'T'
|| _platnosc:=exec('sp_plat','kontrahent',FAKS.KH);
   {? _platnosc=null & FAKS.PLISTA='T'
   || _msg:='Brak domyślnego sposobu płatności kontrahenta.\n'
       'Niemożliwa automatyczna aktualizacja płatności dokumentu.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?}
   ?}
?};
{? _wyn='' & ~_edi & _checkpla=4 & FAKS.SZ='Z' & FAKS.T().KOR='N' & FAKS.AKC<>'T'
|| {? ~exec('chk_plat_faks_zdnag','faktury_plat')
   || _wyn:='FORMAPLA'
   ?}
?};

:: sprawdza zgodnosc rachunku (potem subkonta kontrahenta)/konto kontrahenta dla zakupowych
{? (_wyn='' | (_edi & FAKS.KH<>null())) & FAKS.SKID_RBK<>null
||
   {? FAKS.SZ='S' & FAKS.T().PAR='N'
   ||
      SKID_RBK.index('WEKTOR');
      SKID_RBK.prefix(REF.INFO,FAKS.SKID_RBK().N,FAKS.SKID_RBK().N);
      {? ~SKID_RBK.first()
      ||
         _kh:=exec('kh2rbk','faktury_wspolne');
         _rbk_ok:=0;
         SKID_RBK.index('TAB');
         SKID_RBK.prefix(RACHBANK.FIRMA,REF.FIRMA().SYMBOL+'KH2',REF.FIRMA().SYMBOL+'KH2',#_kh);
         {? SKID_RBK.first()
         ||
            {!
            |?
               {? FAKS.SKID_RBK=SKID_RBK.ref()
               || _rbk_ok:=1
               ?};
               _rbk_ok=0 & SKID_RBK.next()
            !}
         ?};
         {? _rbk_ok=0
         || {? FAKS.SKID_RBK().TAB='KH'
            || _rbk_ok:=exec('FindInSet','#table','KH_DOD','KH_DOD',FAKS.SKID_RBK().REF,REF.FIRMA,
               "KH_DOD.FAKTOR='T'",,,0)
            ?}
         ?};
         {? _rbk_ok=0
         ||
            _skr:=exec('FindAndGet','#table',KH,_kh,,"KH.SKR",'');
            _msg:='Kontrahent %1\nnie posiada subkonta o numerze:\n%2'@ [_skr, FAKS.SKID_RBK().N];
            {? _edi
            || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
            || FUN.info(_msg)
            ?};
            FAKS.SKID_RBK:=null;
            _wyn:='SKID_RBK'
         ?}
      ?}
   |? FAKS.SZ='Z'
   ||
      _rbk_ok:=0;
      SKID_RBK.index('TAB');
      SKID_RBK.prefix(RACHBANK.FIRMA,'KH','KH',#FAKS.KH);
      {? SKID_RBK.first()
      ||
         {!
         |?
            {? FAKS.SKID_RBK=SKID_RBK.ref()
            || _rbk_ok:=1
            ?};
            _rbk_ok=0 & SKID_RBK.next()
         !}
      ?};
      {? _rbk_ok=0
      ||
         _msg:='Kontrahent %1\nnie posiada rachunku bankowego o numerze:\n%2'@ [FAKS.KH().SKR, FAKS.SKID_RBK().N];
         {? _edi
         || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
         || FUN.info(_msg)
         ?};
         FAKS.SKID_RBK:=null;
         _wyn:='SKID_RBK'
      ?}
   ?};

   {? (_wyn='' | _edi) & FAKS.SZ='S' & FAKS.SKID_RBK<>null & FAKS.VSKIDRBK<>null
   || _msg:='';
      _kh_fak:=exec('kh_faktor','edi_fo_ksef');
      _kh_fakv:=exec('kh_faktor_v','edi_fo_ksef');
      {? _kh_fak<>null() & _kh_fakv<>null() & _kh_fak<>_kh_fakv
      || _msg:='Niezgodność rachunku i rachunku VAT - różni faktorzy.'@
      |? _kh_fak<>null() & _kh_fakv=null()
      || _msg:='Niezgodność rachunku (faktor) i rachunku VAT.'@
      |? _kh_fak=null() & _kh_fakv<>null()
      || _msg:='Niezgodność rachunku i rachunku VAT (faktor).'@
      ?};
      {? _msg<>''
      || {? _edi
         || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
         || FUN.info(_msg)
         ?};
         _wyn:='SKID_RBK'
      ?}
   ?};

   {? (_wyn='' | _edi) & FAKS.WAL<>FAKS.NWAL
         &
      FAKS.SKID_RBK().WAL<>FAKS.WAL
         &
      (FAKS.WHERE='N' | FAKS.T().KOR<>'T')
   || {? _edi
      || _msg:='Waluta rachunku bankowego (%1) jest niezgodna z walutą handlową %2.'@
               [SKID_RBK.WAL().KOD,FAKS.WAL().KOD];
         exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || {? FUN.ask('Waluta rachunku bankowego (%1) jest niezgodna z walutą handlową %2.'
            '\nCzy wznowić redakcję rachunku bankowego?'@[SKID_RBK.WAL().KOD,FAKS.WAL().KOD])
         || _wyn:='SKID_RBK'
         ?}
      ?}
   ?}
?};
{? (_wyn='' | _edi) & FAKS.WAL=FAKS.NWAL & FAKS.SZ='S' & FAKS.VSKIDRBK
|| _msg:='Dokument niewalutowy.\nUsunięto dane z pola "Rachunek VAT".'@;
   {? _edi
   || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
   || FUN.info(_msg)
   ?};
   FAKS.VSKIDRBK:=null();
   FAKS.VNB:='';
   FAKS.VRBK:=''
?};

:: powód korekty
_ctrl:=exec('get','#params',{? FAKS.SZ='Z' || 200209 || 300209 ?},2)='T' | FAKS.WHERE='N';
{? (_wyn='' | _edi) & FAKS.T().KOR<>'N' & _ctrl & FAKS.TZP=''
|| _msg:='Należy podać powód korekty.'@;
   {? _edi
   || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='TZP'
?};
_ctrlp:=FAKS.WHERE='N' | FAKS.WHERE='K';
{? (_wyn='' | _edi) & _ctrlp & FAKS.POWKOR=null()
|| _msg:='Należy podać powód korekty w pozycji.'@+
   {? INFO.POWKOR
   || ''
   || '\n\nPodanie powodu korekty niemożlwie ze względu na '
      'niewypełniony słownik powodów korekt w stałych systemu.'@
   ?};
   {? _edi
   || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:={? exec('faks_powkor_be','faktury_nag') || 'POWKOR' || 'TZP' ?}
?};

_dataf:={? FAKS.T().KOR='T' || FAKS.DW || FAKS.D ?};
_time:={? FAKS.MAG<>null() || exec('spr_dttm','magazyn_inw',FAKS.MAG,_dataf,1) || time(0,0,0) ?};
{? (*_time)>(*time(23,59,0)) || _time:=time(0,0,0) ?};
:: kontrola inwentaryzacji na magazynie dla faktur typu G z wypelnionym magazynem
{? _wyn='' & ~_edi & FAKS.WHERE='G' & FAKS.MAG<>null & ~exec('sprd_inw','magdok_wspolne',_dataf,FAKS.MAG,0,,,_time)
|| _wyn:='MAG'
?};

:: kontrola rabatu
{? _wyn='' & ~_edi & ~(FAKS.SZ='S' & FAKS.T().PAR='N' & FAKS.T().FIS='T' & FAKS.SYMF<>'') & FAKS.KOR='' & FAKS.RAB<>TAZ.RAB_N_BE
||
   _wyn:=params_exec('chk_rab_n','ceny',FAKS,)
?};

:: kurs, data kursu
{? (_wyn='' | _edi) & (exec('spr_ww','eurusd',0) | FAKS.WAL<>INFO.NAROD)
||
   {? FAKS.WAL<>FAKS.NWAL
   ||
      {? FAKS.KRS=0 & ~(FAKS.T().SPPK='N' & FAKS.T().KOR='Z')
      || _msg:='Niewypełniony kurs.'@;
         {? _edi
         || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
         || FUN.info(_msg)
         ?};
         _wyn:='KRS'

      |? FAKS.DTK=date(0,0,0) & ~(FAKS.T().SPPK='N' & FAKS.T().KOR='Z' & FAKS.KRS=0 )
      || _msg:='Należy podać datę kursu.'@;
         {? _edi
         || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
         || FUN.info(_msg)
         ?};
         _wyn:='DTK'
      ?}
   ?};
   {? _wyn='' & FAKS.WAL<>INFO.NAROD
   ||
      {? FAKS.NKRS=0 & ~(FAKS.T().SPPK='N' & FAKS.T().KOR='Z')
      || _msg:='Niewypełniony kurs.'@;
         {? _edi
         || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
         || FUN.info(_msg)
         ?};
         _wyn:='NKRS'

      |? FAKS.NDTK=date(0,0,0) & ~(FAKS.T().SPPK='N' & FAKS.T().KOR='Z' & FAKS.NKRS=0 )
      || _msg:='Należy podać datę kursu.'@;
         {? _edi
         || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
         || FUN.info(_msg)
         ?};
         _wyn:='NDTK'
      ?}
   ?}
?};

:: warunki dla dokumentow typu UE
{? (_wyn='' | _edi) & FAKS.DW<>date(0,0,0) || _wyn:=exec('chk_f','faktury_nag',_edi,'N') ?};

:: limit kredytowy
{? (_wyn='' | (_edi & FAKS.KH<>null())) & FAKS.SZ='S' & FAKS.SYMF=''
||
   _klim:=null;
   _dok_mag:='N';
   KH_DOD.KLIM:=__War_f('KH_DOD','KLIM',FAKS.KH);
   {? KH_DOD.KLIM<>null
   ||
      _klim:=KH_DOD.KLIM;
      _dok_mag:=KH_DOD.KLIM().DOK_SUM
   ||
      _klim:=FAKS.KH().GRKH().KLIM;
      _dok_mag:=FAKS.KH().GRKH().KLIM().DOK_SUM
   ?};
   _cur_brutto:={? FAKS.WHERE='M' & _dok_mag='T' || 0 || _cur_brutto:=FAKS.BRUTTO ?};
   _wyn:={? exec('lim_kred','limit_kredyt',FAKS.KH,date(),INFO.NAROD,5,_klim,_cur_brutto,_edi,'faktu')
         || ''
         || {? (POMOC.LOCK='' | POMOC.LOCK='I') & FAKS.WHERE<>'M' & FAKS.KOR='' || 'KH' || 'DW' ?}
         ?}
?};

:: kwota zaliczki
{? (_wyn='' | _edi) & (FAKS.WHERE='L' & FAKS.T().KOR='N' | FAKS.DA_ZAL<>date(0,0,0)) & FAKS.KW_ZAL=0
|| {? FAKS.DA_ZAL<>date(0,0,0)
   || _msg:='Należy podać kwotę zaliczki lub usunąć datę zaliczki.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?}
   || _msg:='Należy podać kwotę zaliczki.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?}
   ?};
   _wyn:='KW_ZAL'
?};

{? _wyn=''
||
   _wyn:=exec('polafaks_chk','jpk_log',FAKSPOLA)
?};

:: projekt
{? _wyn='' & ~_edi & type_of(params_get())>100 & var_pres('var_fakpop',params_get())>100
   & (FAKS.PROJEKTY<>params_get().var_fakpop.PROJEKTY
      | FAKS.PROJEKTY & (FAKS.KH_ODB<>params_get().var_fakpop.ODB | FAKS.PL<>params_get().var_fakpop.PL))
|| _wyn:=exec('tabdok_chk','projekty',FAKS);
   params_get().var_fakpop.PROJEKTY:=FAKS.PROJEKTY
?};

:: subkonto
:: !!! Wyznaczenie subkonta ma być przed wyznaczeniem numeru aby raz wyświetlić pytanie o ustalenie subkonta
{? _wyn='' & ~_edi
   & var_pres('var_fakpop',params_get())=type_of(obj_new('obj_new'))
   & var_pres('KH',params_get().var_fakpop)=type_of(null())
   & (
         params_get().var_fakpop.KH<>FAKS.KH
            |
         params_get().var_fakpop.WAL<>FAKS.WAL
     )
|| {? FAKS.SZ='S' & FAKS.T().PAR='N'
   ||
      exec('rbk','faktury_nag')
   ?}
?};

{? _wyn='' & FAKS.NR=0 & FAKS.SYM=''
:: Wyznaczenie numeru jeśli nie określony w trakcie redakcji nagłówka
:: !!! Wyznaczenie numeru ma być na końcu tej funkcji !!!
|| {? exec('wol_nr','numery','FAKS',,1)
   || _wyn:='NR'
   ?}
?};

{? (_wyn='' | _edi) & ~{? (';MG'*FAKS.WHERE)>1 & FAKS.MAG<>null
                       || exec('czy_z_ok','okresy',2,{? _edi || 1 || 2 ?},,,FAKS.MAG)
                       || 1
                       ?}
|| _wyn:='DW'
?};

:: wynik
_wyn


\chk_dw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: kontrola FAKS.DW - data wystawienia
::   WE: 0 - dokument manualny (domyślnie), 1 - import z komunikatu EDI, 2 -akcja grupowa
::       [_b] - Formuła potrzebna do przy zakańczaniu _komroot
::       [_c] - String  potrzebna do przy zakańczaniu _komid
::       [_d] - 0-korekta zbiorcza; 1-korekty pojedyncza
::  OLD: \chk_dw/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _edi:=_a
|| _edi:=0
?};
{? var_pres('_b')=type_of("")
|| _komroot:=_b
|| _komroot:=""
?};
{? var_pres('_c')=type_of('')
|| _komid:=_c
|| _komid:=''
?};
_wyn:='';
{? FAKS.T().KOR='T' & FAKS.DW<xx_daw
|| _msg:='Nieprawidłowa data wystawienia korekty.\n'
    'Data powinna być większa lub równa od daty: %1.'@ [form(xx_daw)];
   {? _edi
   || _msg:=gsub(_msg,'\n',' ');
      {? _edi=2 || _komroot(_komid,_d) ?};
      exec('add_kom','#message',_msg,4,{? FAKS.ID='' | _edi=2 || FAKS.SYM || FAKS.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='DW'
|? FAKS.T().KOR='T'
 & {? FAKS.SZ='Z'
   || _msg:='Data wystawienia lub Data otrzymania musi pochodzić z miesiąca %1.'@[form(date(ST.AR,ST.AM,0),,8)];
      {? (FAKS.DW<date(ST.AR,ST.AM,1) | FAKS.DW>date(ST.AR,ST.AM,0))
      || (FAKS.DO<date(ST.AR,ST.AM,1) | FAKS.DO>date(ST.AR,ST.AM,0))
      || 0
      ?}
   || _msg:='Data wystawienia musi pochodzić z bieżącego miesiąca obrachunkowego.'@;
      (FAKS.DW<date(ST.AR,ST.AM,1) | FAKS.DW>date(ST.AR,ST.AM,0))
   ?}
|| {? _edi
   || {? _edi=2 || _komroot(_komid,_d) ?};
      exec('add_kom','#message',_msg,4,{? FAKS.ID='' | _edi=2  || FAKS.SYM || FAKS.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='DW'
?};
{? (_wyn='' | _edi) & exec('get','#params',300136,2)='T'
|| {? (_wyn='' | _edi) & FAKS.T().KOR='N'
   || {? FAKS.T().UE='T' & FAKS.DO<>date(0,0,0)
      || _ile:=15;
         _end:=date(FAKS.DO~1,FAKS.DO~2,0);
         {? FAKS.DW>(_end+_ile)
         || _msg:='Wystawienie dokumentu wewnątrzwspólnotowego następuje\n'
                  'nie później niż %1 dni po miesiącu w którym nastąpiła operacja.'@ [$_ile];
            {? _edi
            || _msg:=gsub(_msg,'\n',' ');
               {? _edi=2 || _komroot(_komid,_d) ?};
               exec('add_kom','#message',_msg,4,{? FAKS.ID='' | _edi=2 || FAKS.SYM || FAKS.ID ?})
            || FUN.info(_msg)
            ?};
            _wyn:='DW'
         ?}
      |? FAKS.SZ='S'
      || {? FAKS.KH().TYP='I'
         || _ile:=90;
            _end:=FAKS.D;
            {? FAKS.D>(_end+_ile)
            || _msg:='Wystawienie dokumentu VAT następuje\n'
                     'nie później niż %1 dni od daty sprzedaży.'@ [$_ile];
               {? _edi
               || _msg:=gsub(_msg,'\n',' ');
                  {? _edi=2 || _komroot(_komid,_d) ?};
                  exec('add_kom','#message',_msg,4,{? FAKS.ID='' | _edi=2 || FAKS.SYM || FAKS.ID ?})
               || FUN.info(_msg)
               ?};
               _wyn:='DW'
            ?}
         |? FAKS.DO<>date(0,0,0)
         || _ile:=15;
            _end:=date(FAKS.DO~1,FAKS.DO~2,0);
            {? FAKS.DW>(_end+_ile)
            || _msg:='Wystawienie dokumentu VAT następuje'
                     '\nnie później niż %1 dni od końca miesiąca,'
                     '\nw którym dostarczono towar czy wykonano usługę.'@ [$_ile];
               {? _edi
               || _msg:=gsub(_msg,'\n',' ');
                  {? _edi=2 || _komroot(_komid,_d) ?};
                  exec('add_kom','#message',_msg,4,{? FAKS.ID='' | _edi=2 || FAKS.SYM || FAKS.ID ?})
               || FUN.info(_msg)
               ?};
               _wyn:='DW'
            ?}
         ?}
      ?}
   ?}
?};
_wyn


\chk_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: kontrola FAKS.D - data sprzedazy
::   WE: 0 - dokument manualny (domyślnie), 1 - import z komunikatu EDI
::  OLD: \chk_d/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _edi:=_a
|| _edi:=0
?};
_wyn:='';
{? FAKS.T().KOR='N'
|| _msg:='';
   _ctrl_dt:={? FAKS.SZ='Z'
             || _msg:='Data wystawienia lub Data otrzymania musi pochodzić z miesiąca %1.\n'
                      'Zmieniono Datę wystawienia na ostatnią datę tego miesiąca.'@[form(date(ST.AR,ST.AM,0),,8)];
                {? (FAKS.DW<date(ST.AR,ST.AM,1) | FAKS.DW>date(ST.AR,ST.AM,0))
                || (FAKS.DO<date(ST.AR,ST.AM,1) | FAKS.DO>date(ST.AR,ST.AM,0))
                || 0
                ?}
             || _msg:='Data wystawienia musi pochodzić z miesiąca %1.\n'
                      'Zmieniono ją na ostatnią datę tego miesiąca.'@[form(date(ST.AR,ST.AM,0),,8)];
                (FAKS.DW<date(ST.AR,ST.AM,1) | FAKS.DW>date(ST.AR,ST.AM,0))
             ?};
   {? _ctrl_dt
   || {? _edi
      || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
      || FUN.info(_msg)
      ?};
      FAKS.DW:=date(ST.AR,ST.AM,0);
      win_disp();
      _wyn:='DW'
   ?}
?};
_wyn


\kh_blok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: czy kontrahent jest zablokowany
::   WE: _a - miejsce wywołania
::       _b - 0/1 - edi
::   WY: 1-bezwarunkowo 0-warunkowo lub bez blokady
::  OLD: \kh_blok/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
_where:=_a;
_edi:={? var_pres('_b')=type_of(0) || _b || 0 ?};
_wyn:=0;

exec('dok_maga','powdok',0);
_kh_dod_b:=exec('kh_dod_b','kontrahent',_where,FAKS.KH,__list_zk.first());
{? FAKS.KH<>null & (_kh_dod_b='B' | _kh_dod_b='W')
||
   _width:=40;
   _txt:=form('UWAGA'@,_width)+'\n\n';
   _msg:={? _kh_dod_b='W'
         || form('Kontrahent zablokowany warunkowo.'@,_width)
         |? _kh_dod_b='B'
         || form('Kontrahent zablokowany bezwarunkowo.'@,_width)
         ?};
   _txt+=_msg;
   {? _edi
   || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
   |? var_pres('__kom')>100
   || __kom.add(form(_msg),7)
   || FUN.info(_txt)
   ?};
   {? _kh_dod_b='B'
   || _wyn:=1
   ?}
?};
_wyn


\chk_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: sprawdzenie poprawnosci wypelnienia pol dotyczacych INTRASTAT w tabeli FAKS
::   WE: _a - 0 - dokument manualny (domyślnie), 1 - import z komunikatu EDI
::       _b - status akceptacji dokumentu
::   WY: akronim niepoprawnie wypelnionego pola, ''-wpp
::  OLD: \chk_f/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_edi:=_a;
_akc:=_b;

_wyn:='';

{? _akc='N' & exec('get','#params',100202,2)<>'T' | FAKS.WHERE='L'
||
   FAKS.IST_OKR:=FAKS.IST_TYP:='';
   return('')
?};

{? exec('faks_ist_typ','faktury_nag',0)
||
   _msg:='Niepoprawnie wypełnione pole: Typ deklaracji.'@;
   {? _edi
   || exec('add_kom','#message',_msg,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='IST_TYP'
||
   {? FAKS.IST_TYP='' | FAKS.IST_OKR=''
   ||
      FAKS.IST_OKR:=FAKS.IST_TYP:=''
   ||
      _ist_typ:=FAKS.IST_TYP;
      _progp:=exec('prog','intrastat',date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1),'P');
      _progw:=exec('prog','intrastat',date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1),'W');
      _wyn:=exec('check','intrastat',FAKS,_ist_typ,_progw,_progp,_akc,_edi);
      {? _wyn=''
      ||
         {? exec('chk_istokr','faktury_nag',FAKS.IST_OKR)=0 || _wyn:='IST_OKR' ?}
      ?}
   ?}
?};
_wyn


\rbk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: ustala rachunek bankowy na dokumencie sprzedazy
::   WE: [_a] - 0/1-działanie automatyczne
::  OLD: \rbk/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_auto:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_rbksize:=_rbk_ok:=0;
SKID_RBK.cntx_psh();
{? exec('ps_65','rachunki')='T'
||

   SKID_RBK.index('AKTYWNY');
   SKID_RBK.prefix(RACHBANK.FIRMA,REF.FIRMA().SYMBOL+'KH2',#exec('kh2rbk','faktury_wspolne'),'T');
   {? SKID_RBK.first()
   || _skid_rbk:=null();
      _rbk:='';
      _nb:=null();
      _rbkrs:=exec('zwrrbkrs','rachunki');
      {? exec('FindAndGet','#table',SKID_RBK,_rbkrs,,"@.SKID_RBK.WAL",null())=FAKS.WAL
      ||
         {!
         |?
            {? SKID_RBK.SKID_RBK=#_rbkrs
               & exec('FindAndGet','#table',SKID_RBK,SKID_RBK.SKID_RBK,SKID_RBK.name(),"RD='T'",0)
            || _rbksize+=1;
               {? FAKS.SKID_RBK=SKID_RBK.ref()
               || _rbk_ok:=1
               ?};
               _skid_rbk:=SKID_RBK.ref();
               _rbk:=SKID_RBK.N;
               _nb:=SKID_RBK.BANK().NB
            ?};
            _rbk_ok=0 & SKID_RBK.next()
         !}
      ?}
   ?};
   {? _rbksize=1 & _rbk_ok=0
         &
      (
         _auto=1
            |
         FUN.ask('Kontrahent posiada subkonto nr %1.\nUmieścić subkonto w dokumencie?'@[_rbk])
      )
   ||
      FAKS.SKID_RBK:=_skid_rbk;
      FAKS.RBK:=_rbk;
      FAKS.NB:=_nb

   |? _auto=0
         &
      _rbksize>1 & _rbk_ok=0
         &
      FUN.ask('Kontrahent posiada subkonta.'
         '\nWyświetlić subkonta kontrahenta w celu umieszczenia wybranego, w dokumencie?'@)
   ||
      exec('rbk_be','faktury_nag');
      SKID_RBK.win_sel('SLO_RBL'); SKID_RBK.actions('SLO_RBL','k:k');
      {? SKID_RBK.select()
      || FAKS.SKID_RBK:=SKID_RBK.ref();
         FAKS.RBK:=SKID_RBK.N;
         FAKS.NB:=SKID_RBK.BANK().NB
      ?};
      exec('rbk_ae','faktury_nag')
   ?}
?};
{? _auto=0 & _rbk_ok=0
||
   FAKS.cntx_psh();
   _skid_rbk:=exec('faks_rbkb','faktury_nag');
   _nb:=FAKS.NB;
   _rbk:=FAKS.RBK;
   FAKS.cntx_pop();
   {? _skid_rbk<>null() & FAKS.SKID_RBK<>_skid_rbk
         &
      FUN.ask('Domyślny numer rachunku dla wybranej waluty jest inny od podanego w dokumencie.'
         '\nRachunek domyślny: %1.'
         '\nRachunek na dokumencie: %2.'
         '\nZmienić numer rachunku na domyślny?'@[_rbk,{? FAKS.RBK='' || 'nie podano'@ || FAKS.RBK ?}])
   ||
      FAKS.SKID_RBK:=_skid_rbk;
      FAKS.NB:=_nb;
      FAKS.RBK:=_rbk
   ?}
?};
SKID_RBK.cntx_pop();
~~


\ustaw_fk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: ustawia sie na dodanej fakturze = jesli miesci sie ona w ograniczonej dziedzinie
::  OLD: \ustaw_fk/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
:: aktualne ustawienie w kartotece
_reffaks:=FAKS.ref;
{? BEER.WYSTFAKS<>null & FAKS.seek(BEER.WYSTFAKS)
|| ''
|| FAKS.seek(_reffaks)
?};
1


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2001]
:: OPIS: dodanie naglowka faktury
::   WE: [_a] - typ dokumentu sprzedazy
::       [_b] - data sprzedazy
::       [_c] - LKSQL
::       [_d] - kontrahent
::       [_e] - FKSQL
::       [_f] - symbol dokumentu korygowanego
::       [_g] - konto kosztow
::       [_h] - rabat
::       [_i] - czy automatyczna numeracja 'T' domyslnie 'N'
::       [_j] - FKORM kod automatycznej numeracji, domyslnie ''
::       [_k] - data wystawienia
::       [_l] - miejsce wystawiania dokumentu - rozne dzialanie, domyslnie 'N'
::       [_m] - ONUM
::       [_n] - OREFK ref odbiorcy danego kontrahenta
::       [_o] - OFKORM data otrzymania
::       [_p] - symbol faktury zakupowej lub identyfikator dla rozrachunku
::       [_q] - ref dokumentu w obiegu
::       [_r] - sposob obliczania rabatu
::       [_s] - typ rabatu w pozycji
::       [_t] - gratisy
::       [_u] - ukryty
::       [_v] - handlowiec
::       [_w] - $FAKS.ref() korekty zbiorczej
::       [_x] - PROJEKT.ref() domyślnie null
::       [_y] -
::       [_z] - sposób płatności
::   WY: 1-dodano 0-nie dodano
::  OLD: \FD.ADDFAK/funkcje.fml
::  OLD: \add_fak/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
{?_>=1||{?type_of(_a)<>7||_a:=null?}||_a:=null?};
{?_>=2||{?_b=~~||_b:=exec('thismont','faktury_wspolne')?}||_b:=exec('thismont','faktury_wspolne')?};
{?_>=3||{?type_of(_c)<>2||_c:=''?}||_c:=''?};
{?_>=4||{?type_of(_d)<>7||_d:=null?}||_d:=null?};
{?_>=5||{?type_of(_e)<>2||_e:=''?}||_e:=''?};
{?_>=6||{?type_of(_f)<>2||_f:=''?}||_f:=''?};
{?_>=7||{?type_of(_g)<>7||_g:=null?}||_g:=null?};
{?_>=8||{?type_of(_h)<>1||_h:=0?}||_h:=0?};
{?_>=9||{?type_of(_i)<>2||_i:='N'?}||_i:='N'?};
{?_>=10||{?type_of(_j)<>2||_j:=''?}||_j:=''?};
{?_>=11||{?_k=~~||_k:=exec('thismont','faktury_wspolne')?}||_k:=exec('thismont','faktury_wspolne')?};
{?_>=12||{?type_of(_l)<>2||_l:='N'?}||_l:='N'?};
{?_>=13||{?type_of(_m)<>1||_m:=0?}||_m:=0?};
{?_>=14||{?type_of(_n)<>7||_n:=null?}||_n:=null?};
{?_>=15||{?_o=~~||_o:=exec('thismont','faktury_wspolne')?}||_o:=exec('thismont','faktury_wspolne')?};
{?_>=16||{?type_of(_p)<>2||_p:=''?}||_p:=''?};
{?_>=17||{?type_of(_q)<>2||_q:=''?}||_q:=''?};
{?_>=18||{?type_of(_r)<>2||_r:=''?}||_r:=''?};
{?_>=19||{?type_of(_s)<>2||_s:=''?}||_s:=''?};
{?_>=20||{?type_of(_t)<>2||_t:=''?}||_t:=''?};
{?_>=21||{?type_of(_u)<>2||_u:='N'?}||_u:='N'?};
{?_>=22||{?type_of(_v)<>7||_v:=null()?}||_v:=null()?};
{?_>=23||{?type_of(_w)<>2||_w:=''?}||_w:=''?};
{?_>=24||{?type_of(_x)<>7||_x:=null() ?}|| _x:=null() ?};
{?_>=25||{?type_of(_y)<100||_y:=~~ ?}|| _y:=~~ ?};
{?_>=26||{?type_of(_z)<>7||_z:=~~ ?}|| _z:=~~ ?};

FAKS.prefix();
FAKS.blank(); FAKS.memo_set(,'UWAGI');
:: [rr] dodano obsluge wystawiania faktury z zamowien oraz z przenoszenia danych o walucie

_done:="";
_zk_rn:='';
{? _l='A'
|| _zk_rn:=exec('spr_zkrn','zamsiw_rea');
   {? _zk_rn=''
   || _l:='W'
   || _l:='Z';
      _ff:="exec('FindAndGet','#table',ZK_N,N,,\"HAN\",null())";
      FAKS.HAN:=exec('FindAndGet','#table',ZK_RN,_zk_rn,,_ff,null());
      _ff:="exec('FindAndGet','#table',ZK_N,N,,\"ODB\",null())";
      FAKS.KH_ODB:=exec('FindAndGet','#table',ZK_RN,_zk_rn,,_ff,null());
      _done:="VAR_DEL.delete('__zknswa','__zknkrs','__zknrtk','__zknntk','__zkndtk','__zknbtk','__zknipu')";
      _done();
      __zknswa:=ND.SWAL;
      __zknkrs:=ND.KRS;
      __zknrtk:=ND.RTK;
      __zknntk:=ND.NTK;
      __zkndtk:=ND.DTK;
      __zknbtk:=ND.BTK;
      __zknipu:=ND.NIP_UE
   ?}
?};

{? _l='O'
|| FAKS.HAN:=EDOKUM.HAN;
   FAKS.PL:=FZ.PL:=EDOKUM.PLATNOSC;
   FAKS.TZ:=FZ.TERMPLAT:=EDOKUM.TP;
   FAKS.WAL:=EDOKUM.WAL;
   FAKS.DTK:=FAKS.NDTK:=EDOKUM.DW;
   FAKS.KRS:=FAKS.NKRS:=EDOKUM.KURS
?};

{? _l='W'
||
:: informacje z dokumentu magazynowego
   FAKS.WAL:=ND.WAL;
   FAKS.RTK:=ND.RTK;
   FAKS.NTK:=ND.NTK;
   FAKS.BTK:=ND.BTK;
   FAKS.DTK:=ND.DTK;
   FAKS.SWAL:=ND.SWAL;
   FAKS.KRS:=ND.KRS;

   FAKS.NWAL:=ND.NWAL;
   FAKS.NRTK:=ND.NRTK;
   FAKS.NNTK:=ND.NNTK;
   FAKS.NBTK:=ND.NBTK;
   FAKS.NDTK:=ND.NDTK;
   FAKS.NSWAL:=ND.NSWAL;
   FAKS.NKRS:=ND.NKRS;

   FAKS.NIP_UE:=ND.NIP_UE;

   FAKS.KH_ODB:=ND.KH_ODB;
:: faktura wewnetrzna
   FAKS.KPW:=ND.KPW;
   FAKS.WD:=ND.WD;
   FAKS.RTRANSAK:=ND.RTRANSAK;
   FAKS.RTRANSPO:=ND.RTRANSPO;
   FAKS.SPOBLRAB:=ND.SPOBLRAB;
   FAKS.GRATISY:=ND.GRATISY;
   FAKS.KRAJ_VAT:=ND.KRAJ_VAT;
   FAKS.PROC:=ND.PROC;
   BEER.HAN:=null
|? _l='Z'
||
:: informacje z realizacji zamowienia
   ZK_RN.cntx_psh;
   ZK_RN.prefix();
   _ok:=_zk_rn<>'';
   {? _ok
   ||
      ZK_N.cntx_psh;
      _ff:="exec('FindAndGet','#table',ZK_N,N,,\"WAL\",null())";
      FAKS.WAL:=exec('FindAndGet','#table',ZK_RN,_zk_rn,,_ff,null());
      FAKS.RTK:=FAKS.NRTK:=__zknrtk;
      FAKS.NTK:=FAKS.NNTK:=__zknntk;
      FAKS.BTK:=FAKS.NBTK:=__zknbtk;
      FAKS.DTK:=FAKS.NDTK:=__zkndtk;
      FAKS.SWAL:=FAKS.NSWAL:=__zknswa;
      FAKS.KRS:=FAKS.NKRS:=__zknkrs;
      _ff:="exec('FindAndGet','#table',ZK_N,N,,\"HAN\",null())";
      BEER.HAN:=exec('FindAndGet','#table',ZK_RN,_zk_rn,,_ff,null());
      _ff:="exec('FindAndGet','#table',ZK_N,N,,\"NIP_UE\",null())";
      FAKS.NIP_UE:=exec('FindAndGet','#table',ZK_RN,_zk_rn,,_ff,null());
      _ff:="exec('FindAndGet','#table',ZK_N,N,,\"SPOBLRAB\",null())";
      FAKS.SPOBLRAB:=exec('FindAndGet','#table',ZK_RN,_zk_rn,,_ff,null());
      _ff:="exec('FindAndGet','#table',ZK_N,N,,\"GRATISY\",null())";
      FAKS.GRATISY:=exec('FindAndGet','#table',ZK_RN,_zk_rn,,_ff,null());
      _ff:="exec('FindAndGet','#table',ZK_N,N,,\"KRAJ_VAT\",null())";
      FAKS.KRAJ_VAT:=exec('FindAndGet','#table',ZK_RN,_zk_rn,,_ff,null());
      _ff:="exec('FindAndGet','#table',ZK_N,N,,\"PROC\",null())";
      FAKS.PROC:=exec('FindAndGet','#table',ZK_RN,_zk_rn,,_ff,null());
      ZK_N.cntx_pop
   ?};
   ZK_RN.cntx_pop
|? _l='J'
||
   {? _n=null() || _n:=ZLP.KH_ODB ?};
   FAKS.KH_ODB:=ZLP.KH_ODB;
   FAKS.HAN:=ZLP.HAN;
   FAKS.WAL:=ZLP.WAL
|? _l='P'
||
   FAKS.WAL:=FPACZ.WAL;
   FAKS.RTK:=FAKS.NRTK:=FPACZ.RTK;
   FAKS.NTK:=FAKS.NNTK:=FPACZ.NTK;
   FAKS.BTK:=FAKS.NBTK:=FPACZ.BTK;
   FAKS.DTK:=FAKS.NDTK:=FPACZ.DTK;
   FAKS.SWAL:=FAKS.NSWAL:=FPACZ.SWAL;
   FAKS.KRS:=FAKS.NKRS:=FPACZ.KRS
|? _l='K'
||
   FAKS.WAL:=FAKSZ.WAL;
   FAKS.RTK:=FAKSZ.RTK;
   FAKS.NRTK:=FAKSZ.NRTK;
   FAKS.NTK:=FAKSZ.NTK;
   FAKS.NNTK:=FAKSZ.NNTK;
   FAKS.BTK:=FAKSZ.BTK;
   FAKS.NBTK:=FAKSZ.NBTK;
   FAKS.DTK:=FAKSZ.DTK;
   FAKS.NDTK:=FAKSZ.NDTK;
   FAKS.SWAL:=FAKSZ.SWAL;
   FAKS.NSWAL:=FAKSZ.NSWAL;
   FAKS.KRS:=FAKSZ.KRS;
   FAKS.NKRS:=FAKSZ.NKRS
|| BEER.HAN:=null
?};

FAKS.T:=_a;
:projekty
PROJEKTY.cntx_psh();TYPYSP.cntx_psh();PROJTYPY.cntx_psh();
PROJEKTY.prefix();TYPYSP.prefix();PROJTYPY.prefix();
FAKS.PROJEKTY:=
{? _x<>null & PROJEKTY.seek(_x) & (FAKS.T().PROJZAKR='Wszystkie' | (4+PROJEKTY.T().R)=(4+FAKS.T().PROJZAKR))
|| _x
|| null
?};
PROJEKTY.cntx_pop();TYPYSP.cntx_pop();PROJTYPY.cntx_pop();

FAKS.NDVAT:=FAKS.T().NDVAT;
FAKS.D:=_b;
FAKS.DW:=_k;
FAKS.KH:=_d;
FAKS.KH_ODB:=_n;
FAKS.LKSQL:=_c;
FAKS.FKSQL:=_e;
FAKS.KOR:=_f;
FAKS.KK:=_g;
FAKS.RAB:=_h;
{? _s<>'' || FAKS.RAB_TYP:=_s ?};
{? _t<>'' || FAKS.GRATISY:=_t ?};
FAKS.CZYWZ:={? _l<>'T' || 'N' || _l ?};
FAKS.ONUM:=_m;
FAKS.DO:=FAKS.DO_NA_DR:={? FAKS.SZ='S' || _b || _o ?};
{? FAKS.KOR<>'' & _q='' || FAKS.KOR_ID:=_p || FAKS.ID:=_p ?};
FAKS.EDOKUM:=_q;
FAKS.SPOBLRAB:=_r;
{? FAKS.SPOBLRAB='' || FAKS.SPOBLRAB:=exec('get','#params',800810,2) ?};
FAKS.SPP:='';

:: intrastat
exec('ist_wart_faks','faktury_nag');
:: wymagany split payment
{? exec('sp_active','faktury_wspolne',FAKS.DW)
||
   FAKS.SP_WYM:=exec('sp_default','faktury_wspolne',FAKS.T)
?};

POM.TAB:='FAKS';
POM.TYPDOK:={? FAKS.T<>null || FAKS.T().KOD || '' ?};
POM.NRT:={? FAKS.T<>null || FAKS.T().NRT || '' ?};

{? FAKS.WHERE='M' | FAKS.WHERE='W' | (FAKS.WHERE='G' & exec('get','#params',2006,2,OPERATOR.USER)='T')
|| FAKS.MAG:={? ST.MAG().SKL='N' || ST.MAG || null ?}
|| FAKS.MAG:=null
?};

FAKS.WHERE1:=FAKS.WHERE;
{? FAKS.SZ='Z' & FAKS.WHERE='L'
|| TYPYSP.cntx_psh();
   FAKS.WHERE1:={? FAKS.T().UE='T' || 'E' || 'Z' ?};
   TYPYSP.cntx_pop()
?};

{? FAKS.WAL=FAKS.NWAL & FAKS.WAL<>INFO.NAROD
||
   FAKS.KRS:=1;
   FAKS.DTK:=FAKS.DW
?};

exec('zest','faktury_nag');

FAKS.HIDDEN:=_u;
FAKS.KZ:=_w;

{? FAKS.add()
|| {? FAKS.WHERE='M'
   || Plugin.run('AFTER_KH_ODB_001',null(),null());
      HELP.KHB:=FAKS.KH;
      HELP.KH_ODB:=FAKS.KH_ODB
   ?};
   {? FAKS.KH<>null & FAKS.HAN=null()
   ||
      FAKS.HAN:={? _v<>null() || _v || __War_f('KH_DOD','HAN',FAKS.KH) ?}
   ?};

   {? _i='T'
   || exec('fak_numer','numery',_j);
      exec('znak','numery','FAKS')
   ?};

   exec('duplikuj_dane','faktury_wspolne','KH',{? FAKS.KH_ODB || 'KH_ODB' || '' ?});
   FAKS.put();
   exec('putfakid','faktury_nag');

:: płatności
   {? _l='O'
   ||
::    dokumenty w obiegu
      exec('plat_obieg','faktury_plat',FAKS.ref,FZ.PL,FZ.TERMPLAT,FZ.TERMPLAT)
   ||
      exec('plat_default','faktury_plat',{? FAKS.T().PAR<>'T' || FAKS.KH || FAKS.T().KH ?},_z)
   ?};
   _wyn:=1

|? do_state
||
   _wyn:=0
||
   FUN.info('Dodanie faktury nie powiodło się.'@);
   {? _i='T'
   ||
      numer:=FAKS.NR;
      oldnumer:=1;
      exec('nr_old','numery')
   ?};
   _wyn:=0
?};
BEER.HAN:=null;
_done();
_wyn


\put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Modyfikacja nagłówka faktury
::   WE: [_a] - czy dodawany jest naglowek przed (1) lub po redakcji pozycji (0)
::       params_get()   - ustawiane w exec('wystinne','faktury_nag')
::   WY: czy zakonczono redakcje / czy byl ESC
::  OLD: \FD.PUTFAK/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.T().PAR='T'
|| FAKS.memo_get(,'UWAGI');
   {? FAKS.KH=null
   || FAKS.KH:=FAKS.T().KH;
      {? FAKS.KH().RAB_TYP<>'' || FAKS.RAB_TYP:=KH.RAB_TYP ?};
      FAKS.HAN:=__War_f('KH_DOD','HAN',FAKS.KH);
      FAKS.RAB:=__War_f('KH_DOD','RAB',FAKS.KH);
      TAZ.RAB_N_BE:=FAKS.RAB
   ?};
   exec('duplikuj_dane','faktury_wspolne','KH','KH_ODB');
   {? FAKS.KK=null & exec('get','#params',300101,2)='T' || FAKS.KK:=FAKS.T().KK ?};
   {? exec('check_plat','faktury_plat',FAKS.ref)<4
   || SLO.cntx_psh();
      SLO.prefix();
      {? FAKS.KH().PLATNOSC<>null & SLO.seek(FAKS.KH().PLATNOSC)
      || FZ.FORMAPLA:=SLO.KOD; FZ.PL:=SLO.ref();
         FZ.TERMPLAT:=exec('term_plat','faktury_plat','DW',,FAKS.ref());
         exec('plat_one','faktury_plat',FAKS.ref());
         {? FAKS.HAN & FAKS.T().ZAL<>'T'
         || FAKS.PL:=FZ.PL; FAKS.TZ:=FZ.TERMPLAT
         ?}
      ?};
      SLO.cntx_pop()
   ?};
   {? FAKS.NR=0 || exec('fak_numer','numery',''); exec('znak','numery','FAKS') ?}
?};
INTRAST.NIP:='';

{? exec('polafaks_get','jpk_log',FAKS.ref(),FAKS)
|| {? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
   {? _a=1
   || _wyn:=params_exec('putfakb','faktury_nag')
   || _wyn:=params_exec('putfak','faktury_nag')
   ?}
?};
_wyn


\putfakb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: edycja naglowka dokumentu od brutto - FAKS
::   WE: params_get()   - ustawiane w exec('wystinne','faktury_nag')
::   WY: czy zakonczono redakcje / czy byl ESC
::  OLD: \putfakb/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
{? FAKS.T().ZAK='T' & FAKS.KH & FAKS.NRKSEF=''
|| exec('czy_zak_powinien_ksef','zbl_dok',FAKS.KH,FAKS.T,FAKS.DW,1)
?};
FAKS.edit("params_exec('check','faktury_nag')")


\putfak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: edycja naglowka dokumentu - FAKS
::   WE: params_get()   - ustawiane w exec('wystinne','faktury_nag')
::   WY: czy zakonczono redakcje / czy byl ESC
::  OLD: \putfak/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
{!
|?
   _esc:=params_exec('putfakb','faktury_nag');
   {? _esc=0
   || {? {? FAKS.SZ='S'
         || FUN.ask('Rezygnacja z wystawienia dokumentu sprzedaży?'@)
         || FUN.ask('Rezygnacja z wystawienia dokumentu zakupu?'@)
         ?}
      || _wyn:=0
      || {? FAKS.NR=0 & FAKS.SYM='' || exec('fak_numer','numery',''); exec('znak','numery','FAKS') ?};
          _wyn:=1
      ?}
   || _wyn:=0
   ?};
   _wyn
!};
_esc


\putfakid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Aktualizacja FAKS.ID
::   WY: 0-niepowodzenie aktualizacji; 1-powodzenie aktualizacji
::  OLD: \FD.PUTFAKID/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
INTRAST.NIP:='';
{? FAKS.SZ<>'Z'
|| FO.index('NR'); FO.prefix();
   {? FO.find_key((300100))
   || _id:=($FO.TR)();
      {? type_of(_id)<>2 || _id:=FAKS.SYM ?}
   || _id:=FAKS.SYM
   ?};
   FAKS.ID:=_id;
   FAKS.put
?}


\zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: wypelnia pola FAKS.ZEST, FAKS.ZEST_AKC
::  OLD: \zest/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
TYPYSP.cntx_psh();
{? FAKS.SZ='S'
|| {? FAKS.WHERE='L'
   || FAKS.ZEST:='N';
      FAKS.ZEST_AKC:=FAKS.AKC
   |? FAKS.name()+2='hs'
:: faktura do korekty historycznej
   || FAKS.ZEST:='N';
      FAKS.ZEST_AKC:=FAKS.AKC
   |? FAKS.SYMF='' & FAKS.KZ=''
:: pozostale dokumenty
   || FAKS.ZEST:=FAKS.T().ZEST;
      FAKS.ZEST_AKC:=FAKS.AKC
   |? FAKS.SYMF<>'' & FAKS.T().PAR='T'
:: paragon
   || FAKS.ZEST:={? FAKS.SYMF_T().ZEST='T' || 'N' || FAKS.T().ZEST ?};
      FAKS.ZEST_AKC:=FAKS.AKC
   |? FAKS.SYMF<>'' & FAKS.T().PAR='N'
:: faktura do paragonu
   || FAKS.ZEST:=FAKS.T().ZEST;
      FAKS.ZEST_AKC:=FAKS.AKC
   |? FAKS.KZ<>''
:: korekta czesciowa do paragonu
   || _zest:='';
      _zestakc:='';
      FAKS.cntx_psh();
      FAKS.use(8+FAKS.KZ);
      FAKS.prefix();
      {? FAKS.seek(FAKS.KZ)
      || _zest:=FAKS.T().ZEST;
         _zestakc:=FAKS.AKC
      ?};
      FAKS.cntx_pop();
      FAKS.ZEST:=_zest;
      FAKS.ZEST_AKC:=_zestakc
   ?}
|? FAKS.SZ='Z'
|| {? FAKS.WHERE1='L'
   || FAKS.ZEST:='N';
      FAKS.ZEST_AKC:=FAKS.AKC
   || FAKS.ZEST:=FAKS.T().ZEST;
      FAKS.ZEST_AKC:=FAKS.AKC
   ?}
?};
TYPYSP.cntx_pop()


\istatr_faks2fap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przepisuje cechy intrastat z naglowka faktury do pozycji
::   WE: _a =1 - wyznaczyc FAP.KCN,FAP.KP
::  OLD: \istatr_faks2fap/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=0 ?};

{? FAP.M().RODZ='T'
|| {? FAKS.IST_TYP<>''
   || {? FAP.KCN=null | _a=1
      || _data:=exec('FindAndGet','#table',FAKS,FAP.FAKS,,"FAKS.D",date(0,0,0));
         FAP.KCN:=exec('daj_cn_ref','sklad',FAP.M,_data)
      ?}
   || FAP.KCN:=null()
   ?};
   _kodt:=FAP.KCN().KOD;
   _null:=1;
   {? FAKS.IST_TYP='P' | FAKS.IST_TYP='W'
   ||
      _null:=0;
      {? _kodt<>''
            &
         exec('rw3','intrastat',_kodt)=0
      ||
         _null:=1
      ?}
   ?};
   FAP.KPW:=FAKS.KPW;
   FAP.WD:={? _null || '' || FAKS.WD ?};
   FAP.RTRANSAK:={? _null || '' || FAKS.RTRANSAK ?};
   FAP.RTRANSPO:={? _null || '' || FAKS.RTRANSPO ?};
   {? exec('czy_kp','intrastat',FAKS.IST_TYP,FAKS.IST_OKR)
   || {? _null || FAP.KP:='' |? FAP.KP='' | _a=1 || exec('blank_kp','magdok_wspolne',FAP) ?}
   || {? FAKS.T().UE<>'T' || FAP.KP:='' ?}
   ?}
?}


\akt_kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: sprawdzanie i przypisywanie znacznika korygowany
::  OLD: \akt_kor/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? FAKS.KOR<>''
||
   _kh:=FAKS.KH;
   _sym:=FAKS.KOR;
   _wal:=FAKS.WAL;
   _krs:=FAKS.KRS;
   _nkrs:=FAKS.NKRS;
   _dtk:=FAKS.DTK;
   _ndtk:=FAKS.NDTK;
   _rabtyp:=FAKS.RAB_TYP;
   _kk:=FAKS.KK;
   FAKS.cntx_psh();
   FAKSPL.cntx_psh();
   _mask:=form(8+FAKS.LKSQL);
   _ref:=FAKS.LKSQL;
   FAKS.use(_mask);
   FAKSPL.use(('fakpl'+(_mask+3)));
   FAKS.prefix();
   {? FAKS.seek(_ref,)
   || FAKS.KORYG:='T';
      {? (FAKS.name()+2)='hs'
      ||
         FAKS.KH:=_kh;
         FAKS.SYM:=_sym;
         FAKS.WAL:=_wal;
         FAKS.KRS:=_krs;
         FAKS.NKRS:=_nkrs;
         FAKS.DTK:=_dtk;
         FAKS.NDTK:=_ndtk;
         FAKS.RAB_TYP:=_rabtyp;
         FAKS.KK:=_kk;
         {? var_pres('__HS_USTAW_DF_REF')>0 & __HS_USTAW_DF_REF=$FAKS.ref()
         || FAKS.DW:=FAKS.D:=FKOR.DF;
            FAKS.NRKSEF:=FKOR.NRKSEF
         ?}
      ?};
      FAKS.put()
   ?};
   FAKS.cntx_pop();
   FAKSPL.cntx_pop()
?};
''


\usun_fak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: usuwa dokument sprzedazy oraz powiazania
::   WE:  _a  1 - komunikaty
::            0 - bez komunikatow
::            2 - grupowe usuwanie z komunikatami
::       [_b] magazyn
::       [_c] - 0-korekta zbiorcza; 1-korekty pojedyncza
::   WY: 1 - usunal, 0 - nie usunal
::  OLD: \usun_fak/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_c')<>type_of(1) || _c:=1 ?};

{? FAKS.WHERE='K' | FAKS.WHERE='N'
||
   {? exec('faks_kzn_usu','faktury_nag1',_a)
   || _a:=2
   || return(0)
   ?}
?};

_wyn:=0;
:: kontrola akceptacji oraz zaksiegowania dokumentu
_ok:=FAKS.get();
_txt:='';
_width:=70;
_do_state:=do_state();
:: usuwanie dokumentu
{? _ok=1 & (_r_lock:=exec('r_lock_one','#table',FAKS,FAKS.ref()))
||
   {? _>=2  || {? type_of(_b)<>7 || _b:=FAKS.MAG ?} || _b:=FAKS.MAG ?};

   {? _c & _a<>2 || exec('ini_kom','#message','Usunięcie dokumentu sprzedaży'@) ?};
   __kom_gr:=FAKS.SYM;
   _kh:=FAKS.KH().KOD;

:: sprawdza czy mozna usunac
   {? FAKS.ZAK='T'
   || _txt:='Dokument jest zaksięgowany w systemie finansowo księgowym.'@;
      exec('add_kom','#message',_txt,7);
      _ok:=0
   ?};
   {? FAKS.AKC='T'
   || _txt:={? FAKS.SZ='S'
            || 'Zakończono już rejestrację dokumentu sprzedaży.'@
            || 'Zakończono już rejestrację dokumentu zakupu.'@
            ?};
      exec('add_kom','#message',_txt,7);
      _ok:=0
   ?};
   {? FAKS.KORYG ='T'
   || _txt:='Do dokumentu wystawiono dokument korygujący.'@;
      exec('add_kom','#message',_txt,7);
      _ok:=0
   ?};
   {? FAKS.PAR<>''
   || _txt:='Wydrukowano paragon fiskalny nr: %1.'@ [FAKS.PAR];
      exec('add_kom','#message',_txt,7);
      _ok:=0
   ?};
   {? FAKS.T().PAR='T' & FAKS.SYMF<>''
   || _txt:='Do paragonu wystawiono dokument sprzedaży nr: %1.'@ [exec('symf','faktury_wspolne',FAKS.SYMF)];
      exec('add_kom','#message',_txt,7);
      _ok:=0
   ?};
   {? FAKS.WHERE='L' & ~exec('fzal_chk','faktury_zalicz')
   || _txt:='Do faktury zaliczkowej wystawiono kolejne dokumenty.'@;
      exec('add_kom','#message',_txt,7);
      _ok:=0
   ?};
   {? _ok & FAKS.WHERE='P' & FAKS.SZ='S'
   ||
      _ok:=exec('opak_zwr','faktury_nag');
      {? _ok=0 || _a:=0 ?}
   ?};

:: komunikaty
   {? ~_ok & _a=1
   ||
      exec('add_kom','#message','Usunięcie dokumentu niemożliwe.'@,2);
      {? _c || exec('end_kom','#message') ?}
   ||
     {? _c & _a<>2 ||  VAR_DEL.delete('__kom') ?}
   ?};
:: kontrola blokady dokumentów magazynowych
   _blk:=0;
:: gdy _ok=1 dodatkowa kontrola powiazan
   {? _ok & _a & (exec('dok_maga','powdok',0); {? __tt.size || 1 || VAR_DEL.delete(__tt); 0 ?})
   ||
      _tt:='';
      __tt.clear();
      {? __tt.first
      ||
         {!
         |?
            _tt+=__tt.SYM+', ';
            _blk+=~__tt.BLK;
            __tt.next()
         !}
      ?};
      {? +_tt>(_width+1) || _tt:=((_width-2)+_tt)+'..' || _tt:=(_tt-2)+'.' ?};
      _txt+=form('Dokument jest powiązany z dokumentami magazynowymi:'@,_width);
      _txt+='\n'+form(_tt,_width);
      {? ~_blk
      || _txt+='\n'+form('Powiązania zostaną usunięte.'@,_width)+'\n\n'
      || _txt+='\n'+form('Aktualnie dokumenty magazynowe są zablokowane.'@,_width)+'\n\n'
      ?};
      VAR_DEL.delete(__tt)
   ?};
   {? _ok & exec('FindInSet','#table','MBWPL','ZAL',$FAKS.ref(),$FAKS.ref())<>null
   || _txt+=form('Dokument wprowadzony na podstawie wpłaty gotówkowej.'@,_width);
      _txt+='\n'+form('Powiązania zostaną usunięte.'@,_width)
   ?};
   {? _ok & exec('faks_z_pow','faktury_nag',FAKS.ref)
   || _txt+=form('Dokument jest powiązany ze zleceniami fakturowania.'@,_width)
   ?};

   {? _ok & ((_rr:=0; 1)| (_ok:=(_rr:=exec('spr_fakt','rezerwacje',FAKS.ref))<>0))
   ||
      _rea:=exec('spr_zfk','zamsiw_rea');
      {? _rea=1
      ||
         _txt+=form('Dokument jest powiązany z realizacją zamówienia.'@,_width);
         _txt+='\n'+form('Informacje o realizacji zamówień zostaną usunięte.'@,_width)+'\n\n'
      ?};

      {? exec('z_edokum','faktury_nag')
      ||
         _txt+=form('Dokument wprowadzony na podstawie dokumentu w obiegu.'@,_width);
         _txt+='\n'+form('Powiązania zostaną usunięte.'@,_width)+'\n\n'
      ?};

      _zak:={? _ok & FAKS.SZ='Z' || {? ~(_a%*2) || 2 || exec('czyfaksd','faktury_wspolne',FAKS.ref()) ?} || 1 ?};
      _ok:=_ok & _zak>0;

      {? _a=1 & _ok
      ||
         {? {? FAKS.SZ='S'
            || {? _blk
               || FUN.info(_txt+'\n\n'+'Nie można usunąć dokumentu sprzedaży %1.'@ [FAKS.SYM]);
                  0
               || FUN.ask(_txt+'\n\n'+'Usunąć dokument sprzedaży %1 wraz z pozycjami?'@ [FAKS.SYM])
               ?}
            || FUN.ask(_txt+'\n\n'+'Usunąć dokument zakupu %1 wraz z pozycjami?'@ [FAKS.SYM])
            ?}
         || _ok:=1
         || _ok:=0
         ?}
      ?};

      {? _ok=1
      ||
         {? _do_state=0 || do() ?};
         _l_log:=exec('llog_pocz','users',$FAKS.ref,'Usunięto dokument: kontrahent '+_kh
            +', symbol '+FAKS.SYM+', data '+$FAKS.D+', Netto '+$FAKS.NETTO+', VAT '
            +$FAKS.VAT+', Brutto '+$FAKS.BRUTTO);

::       usuwa dokumenty
         {? exec('deladok','dokum','FAKS')=1
         ||
            _czy_kom:=1;
::          usuwa informacje o korekcie historycznej
            {? FAKS.LKSQL<>'' & FAKS.T().HIS='T'
            ||
               FAKS.cntx_psh();
               FAP.cntx_psh();
               FAKSPL.cntx_psh();

               FAKS.use(form(8+FAKS.LKSQL));
               FAP.use('fakpo'+(5-form(8+FAKS.LKSQL)));
               FAKSPL.use('fakpl'+(5-form(8+FAKS.LKSQL)));

               FAKS.prefix();
               {? FAKS.seek(FAKS.LKSQL)
               || FAP.index('FAP');
                  FAP.prefix(FAKS.ref());
                  {? FAP.first() || {! |? FAP.del() !} ?};
                  exec('del_plat','faktury_plat',FAKS.ref());
                  {? do_state()<2 & ~Plugin.run('BEFORE_DELTAB_001',FAKS.ref()) & do_state() || undo() ?};
                  FAKS.del(1,1)
               ?};
               FAKSPL.cntx_pop();
               FAP.cntx_pop();
               FAKS.cntx_pop()
            ?};
            _roknd:=0;
::          usuwa informacje o realizacjach faktury
            {? _rea=1 || _roknd:=exec('usu_refk','faktury_nag') ?};

::          usuwa informacje o danych powiazanych z zakupami
            {? _zak>=2
            || {? _zak=3
               || _refnd:=exec('FindInSet','#table','FAP2DK','NFAKS',$FAKS.ref(),,"FAP2DK.ND",,,'')
               || _refnd:=''
               ?};
               exec('delfaksd','faktury_poz',FAKS.ref());
               exec('pow_zdzk','faktury_poz',$FAKS.ref());
               {? _refnd<>''
               || _msknd:=ND.name();
                  ND.cntx_psh();
                  exec('mag_open','open_tab',ST.ODDZ,form(8+_refnd)+2);
                  ND.clear();
                  {? ND.seek(_refnd,form(8+_refnd))
                  || {? exec('wyc_dok','magdok_nag',0,'N',,0)
                     || {? ~exec('usun_dwz','zamsiw_rea',null,$ND.ref())
                        || undo();
                           FUN.info('Nie udało się usunąć dokumentu: %1.'@ [ND.SYM])
                        ?}
                     || undo();
                        FUN.info('Nie udało się wycofać akceptacji dokumentu: %1.'@ [ND.SYM])
                     ?}
                  ?};
                  exec('mag_open','open_tab',ST.ODDZ,form(8+_msknd)+2);
                  ND.cntx_pop()
               ?}
            ?};

::          usuwa powiazanie z dokumentem w obiegu
            {? (6+FAKS.EDOKUM)=(6+EDOKUM.name()) || exec('eddelfak','faktury_wspolne',FAKS.EDOKUM) ?};

::          usuwa tabele stawek VAT
            exec('faksv_rm','faktury_vat',$FAKS.ref(),1);

::          usuwa informacje zaliczkowe
            exec('fzal_del','faktury_zalicz');

::          usuwa informacje o wplacie gotowkowej
            exec('fzal_del','kasa_wplaty',$FAKS.ref());

::          usuwa informacje dodatkowe
            FAKSO.index('FAKS');
            FAKSO.prefix(FAKS.ref());
            {? FAKSO.first()
            || {! |? FAKSO.del() !}
            ?};
::          usuwa podziały controllingowe
            SCH_XD.cntx_psh(); SCH_XD.use('scxd_'+(FAKS.name()+3));
            SCH_XD.index('FAKS'); SCH_XD.prefix(FAKS.ref());
            {? SCH_XD.first() || {! |? SCH_XD.del() !} ?};
            SCH_XD.cntx_pop();

::          powiazanie z paczka faktur
            FPACZ.cntx_psh();
            _fp_ref:=FAKS.FPACZKA;
            _fp_rodz:=FAKS.FPACZKA().RODZ;
            FPACZ.cntx_pop();

::          aktualizuje znacznik KORYG
            {? FAKS.KOR<>''
            || FAKS.cntx_psh();
               _mask:=form(8+FAKS.LKSQL);
               _ref:=FAKS.LKSQL;
               FAKS.prefix();
               {? FAKS.seek(_ref,_mask)
               || FAKS.KORYG:='N';
                  FAKS.put()
               ?};
               FAKS.cntx_pop()
            ?};

::          zerowanie pola dla paragonu gdy dokument od brutto (tylko taki mozna wystawiac dla paragonu)
::          w polu FAKS.SYMF jest refsql do paragonu
            {? FAKS.SZ='S' & FAKS.T().PAR='N' & FAKS.T().FIS='T' & FAKS.SYMF<>''
            ||
               _parag:=sql($"select FAKS.REFERENCE REF from @FAKS where FAKS.SYMF=':_a'",$FAKS.ref());
               _parag.clear();
               {? _parag.first()
               || {!
                  |?
                     FAKS.cntx_psh();
                     FAKS.use(8+_parag.REF);
                     FAKS.clear();
                     {? FAKS.seek(_parag.REF,8+_parag.REF) & FAKS.T().PAR='T' & FAKS.T().FIS='T'
                     ||
                        FAKS.SYMF:='';
                        FAKS.SYMF_T:=null();
                        FAP.cntx_psh();
                        FAP.use((FAP.name()-3)+(ref_name(FAKS.ref())+3));
                        FAP.index('FAP');
                        FAP.prefix(FAKS.ref());
                        _loop:=FAP.first();
                        {!
                        |? _loop
                        |!
                           FAP.SYMF_FAP:='';
                           _loop:=FAP.put() & FAP.next()
                        !};
                        FAP.cntx_pop();
                        exec('zest','faktury_nag');
                        {? FAKS.put()
                        ||
::                         zaliczki
                           FAPOW.cntx_psh();
                           FAPOW.index('FAKS');
                           FAPOW.prefix(_parag.REF);
                           _loop:=FAPOW.first();
                           {!
                           |? _loop
                           |!
                              FAPOW.END_SYM:='';
                              FAPOW.ROZ:='N';
                              _loop:=FAPOW.put() & FAPOW.next()
                           !};
                           FAPOW.cntx_pop()
                        ?}
                     ?};
                     FAKS.cntx_pop();
                     _parag.next()
                   !}
               ?};
               obj_del(_parag)
            ?};

::          usuniecie powiazania z dokumentami magazynowymi
            _nd_fml:="
               ND.index('FAKS_REF');
               ND.prefix($FAKS.ref(),$FAKS.ref());
               {!
               |?
                  _jest:=ND.first();
                  {? _jest=1
                  ||
                     ND.cntx_psh();
                     DK.cntx_psh();
                     ND.prefix();
                     ND.FAKS:=null;
                     ND.FAKS_REF:='';
                     ND.F:='N';
                     {? ND.put() || exec('opnf_del','opakow',$ND.ref()) ?};
                     {? FAKS.WGZWR
                     || DK.index('DOKMAG');
                        DK.prefix(ND.ref());
                        {? DK.first()
                        || {!
                           |? DK.FAP:='';
                              DK.put(1);
                              exec('delfap2dk','magdok_wspolne',$DK.ref());
                              DK.next()
                           !}
                        ?}
                     ?};
                     ND.cntx_pop();
                     DK.cntx_pop()
                  ?};
                  _jest
               !}
            ";
            ND.cntx_psh();
            DK.cntx_psh();
            _maska:=#(FAKS.name()+2);
            {? _roknd>0
            || _roknd-=2000
            || OKR.cntx_psh();
               OKR.index('MC');
               OKR.prefix(REF.FIRMA,1);
               {? OKR.first()
               || {!
                  |? _rokbf:=OKR.ROK-2000;
                     {? _rokbf>0
                     || _roknd:=_rokbf;
                        0
                     || OKR.next()
                     ?}
                  !}
               ?};
               OKR.cntx_pop()
            ?};
::          dodatkowo szuka powiazanych ND w pooprzednim roku
            {? _roknd>0 & _roknd<_maska
            || {! _jj:=_roknd.._maska
               |! ND.use('nagdo'+ST.ODDZ+form(_jj,-2,0,'99'));
                  DK.use('dokma'+ST.ODDZ+form(_jj,-2,0,'99'));
                  _nd_fml()
               !}
            || {! _jj:=_maska-1.._maska
               |! ND.use('nagdo'+ST.ODDZ+form(_jj,-2,0,'99'));
                  DK.use('dokma'+ST.ODDZ+form(_jj,-2,0,'99'));
                  _nd_fml()
               !}
            ?};
            ND.cntx_pop();
            DK.cntx_pop();

::          usuwanie szablonu rozliczenia
            exec('projdel','projekty',FAKS.ref());

::          usuwanie powiązania ze zleceniami fakturowania
            exec('fakz2fap_del','faktury_wspolne',FAKS.ref());

::          usuwanie pozycji
            FAKS.get();
            FAP.index('FAP');
            FAP.prefix(FAKS.ref());
            {? FAP.first()
            || _buf:=tab_tmp(1,'SQL','STRING[16]','');
               {!
               |? _buf.clear();
                  {? FAP.M().M_ATR().ARCH='T' & FAP.DK_C<>null & ~_buf.find_key($FAP.DK_C)
                  || _buf.blank();
                     _buf.SQL:=$FAP.DK_C;
                     _buf.add(1);
                     exec('arch_atr','mat_atr',1,FAP.DK_C,'')
                  ?};
                  exec('fap2del','faktury_poz',1,_rr,_kh)
               !};
               obj_del(_buf);
               VAR_DEL.delete('__msk')
            ?};
            exec('del_plat','faktury_plat',FAKS.ref());
            exec('faks_kzr_usu','faktury_nag1',FAKS.ref());
            POM.TAB:='FAKS';
            POM.TYPDOK:={? _c || FAKS.T().KOD |? FAKS.SZ='S' ||  'KZF' || 'KZZ' ?};
            {? do_state()<2 & ~Plugin.run('BEFORE_DELTAB_001',FAKS.ref()) & do_state() || undo() ?};
            exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock);
            numer:=FAKS.NR;
            oldnumer:=1;
            exec('nr_old','numery');
::          usuwanie powiązanego dokumentu opakowań
            exec('faks_del','faktury_nag',$FAKS.ref());
::          usunięcie danych dodatkowych
            exec('delpola','pola',FAKSPOLA,FAKS.ref());
::          usunięcie podmiotów
            exec('fakskh_del','faktury_wspolne',FAKS.ref());
            _txt:={? FAKS.SZ='S'
                  || 'Usunięto dokument sprzedaży.'@
                  || 'Usunięto dokument zakupu.'@
                  ?};
            _wyn:=FAKS.del(1,1);
            {? _wyn>0 & _a=2 || exec('add_kom','#message',_txt,88) ?};

::          powiazanie z paczka faktur
            {? _wyn>0 & _fp_ref<>null & _fp_rodz='T'
            ||
               FPACZ.cntx_psh();
               FPACZ.prefix();
               {? FPACZ.seek(_fp_ref)
               ||
::                Czyszczę logi błędów generacji (FPACZLOG)
                  exec('fpacz_log_del','umowy_faktury',FPACZ.ref());
                  FPACZ.del()
               ?};
               FPACZ.cntx_pop()

            |? _fp_ref<>null()
            ||
               exec('pacz_il','umowy_faktury',_fp_ref,0)
            ?}
         ||
            undo();
            _czy_kom:=0;
            FUN.info('Dokumentu %1 nie udało się usunąć,\nponieważ usunięcie załączników nie powiodło się.'@ [FAKS.SYM])
         ?};

         {? _wyn=0
         || undo();
            {? _czy_kom=1
            || FUN.info('Dokumentu %1 nie udało się usunąć.'@ [FAKS.SYM])
            ?}
         ?};
         exec('llog_kon','users',_l_log);
         {? _do_state=0 || end() ?}
      ?}
   ?};
   {? _wyn=0 || exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock) ?}
||
   {? _ok=1
   || exec('who_rlock_faks','faktury_nag')
   ?}
?};
_wyn


\fak_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: umozliwia poprawe faktury gdy nie jest zaksiegowana
::   WE: params_get()   - ustawiane w main w !lsp_fak_drfp.fml
::  OLD: \fak_pop/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.WHERE='K' || params_exec('faks_kzn_pop','faktury_nag1'); return ?};

_ok:=1;

:: _czy_edit_nag =1-edycja nagłowka dokumentu sprzedaży, 0-wpp
_czy_edit_nag:=1;
_txt:='';
{? FAKS.STAT_REJ='Z'
|| _txt+='Zakończono już rejestrację dokumentu.'@+'\n';
   _czy_edit_nag:=0
?};
{? FAKS.STAT_REJ='T'
|| _txt+='Dokument jest już zaakceptowany.'@+'\n';
   _czy_edit_nag:=0
?};
{? FAKS.ZAK='T'
|| _txt+='Dokument jest już zaksięgowany w systemie finansowo księgowym.'@+'\n';
   _czy_edit_nag:=0
?};
{? FAKS.STAT_REJ='A'
|| _txt+='Dokument został anulowany.'@+'\n';
   _czy_edit_nag:=0
?};

FAKS.cntx_psh();
{? _czy_edit_nag=1
||
   _r_lock:=exec('r_lock_one','#table',FAKS,FAKS.ref());
   {? ~_r_lock
   ||
      _ok:=-1;
      exec('who_rlock_faks','faktury_nag')
   ?}
?};

{? _czy_edit_nag=0
|| ~~
|? _ok=1
|| exec('polafaks_get','jpk_log',FAKS.ref(),FAKS);
   FAKS.memo_get(,'UWAGI');
   {? (FAKS.WHERE='L' & ~exec('fzal_chk','faktury_zalicz','P'))
   || FUN.info('Wystawiono kolejne dokumenty.\nModyfikacje niemożliwe.'@)
   ||
      FAKS.cntx_psh();
      FAKS.clear();
      {? FAKS.T().KOR='T'
      || _onum:=exec('FindAndGet','#table',FAKS,FAKS.LKSQL,,"FAKS.ONUM",0);
         exec('FindAndGet','#table',FAKS,FAKS.FKSQL,,"
            _onum:=_b; exec('szuk_kor','faktury_nag',$FAKS.ref(),FAKS.D,,,,_onum)",,_onum);
         exec('ustaw_df','faktury_nag')
      ?};
      {? FAKS.T().HIS='T' || exec('korh_rab','faktury_nag',FAKS.LKSQL,0) ?};
::    edycja
      exec('pop_exit','faktury_plat',0,FAKS.ref());
      FAKS.get();
      HELP.WMAG:=FAKS.WHERE='G' & exec('FindInSet','#table','FAP','FAP',FAKS.ref())=null;
      _krs:=FAKS.KRS;
      _nkrs:=FAKS.NKRS;

      _var_fakpop:=exec('var_fakpop','faktury_nag');
      _var_fakpop.PROJEKTY:=FAKS.PROJEKTY;
      _var_fakpop.RAB:=FAKS.RAB;
      _var_fakpop.KRS:=FAKS.KRS;
      _var_fakpop.NKRS:=FAKS.NKRS;
      _var_fakpop.KH:=FAKS.KH;
      _var_fakpop.ODB:=FAKS.KH_ODB;
      _var_fakpop.WAL:=FAKS.WAL;
      _var_fakpop.PL:=FAKS.PL;
      _var_fakpop.IST_TYP:=FAKS.IST_TYP;
      _var_fakpop.RTRANSAK:=FAKS.RTRANSAK;
      _var_fakpop.R_LOCK:=_r_lock;
      _var_fakpop.PO_FIRST:=0;
      _var_fakpop.FAKZ:=exec('FindAndGet','#table',FAKZ,
         exec('FindInSet','#table','FAKZ2FAP','FAKS',FAKS.ref(),null(),"FAKZ2FAP.FAKZ",,,''),,,null());

      TAZ.RAB_N_BE:=FAKS.RAB;

      POM.TAB:='FAKS';
      POM.TYPDOK:=FAKS.T().KOD;
      POM.NRT:=FAKS.T().NRT;
      {? FAKS.WHERE='G'
      || TYPYDOK.f_clear();
         TYPYDOK.index('TYP');
         TYPYDOK.prefix();
         TYPYDOK.f_set('T',,'"TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'N\' and "TYPYDOK".DS=\'T\' and "TYPYDOK".DK=\'N\' '
                  +{? FAKS.NIP_UE='' | FAKS.T().FIS='T' || 'and "TYPYDOK".UE<>\'T\' ' || '' ?});
         TYPYDOK.win_dict('SLO')
      ?};

      _faks:=~~;
      {? 5+FAKS.FKSQL=5+FAKS.name()
      ||
         _onum:=exec('FindAndGet','#table',FAKS,FAKS.LKSQL,,"FAKS.ONUM",0);
         FAKS.cntx_psh();
         FAKS.use(ref_name(FAKS.FKSQL));
         FAKS.cntx_psh();
         FAKS.prefix();
         {? FAKS.seek(FAKS.FKSQL)
         ||
            _faks:=exec('faks_przed_kor','faktury_nag',FAKS.DW,FAKS.T,exec('z_edokum','faktury_nag'),,_onum)
         ?};
         FAKS.cntx_pop();
         FAKS.cntx_pop()
      ?};

::    Parmater 'context' wykorzystywany w
::    - exec('faks_pozycje_red','faktury_nag')
::    - exec('faks_zakoncz_red','faktury_nag')
::    Parametr 'var_fakpop' wykorzystywany w:
::    - exec('faks_pozycje_red','faktury_nag')
::    - exec('faks_zakoncz_red','faktury_nag')
::    - exec('fak_pop_po',faktury_nag')
      params_set('context',params_get(),'var_fakpop',_var_fakpop,'faks',_faks);

      exec('faks_win_edit_set','faktury_nag');
      {? FAKS.T().ZAK='T' & FAKS.KH & FAKS.NRKSEF=''
      || exec('czy_zak_powinien_ksef','zbl_dok',FAKS.KH,FAKS.T,FAKS.DW,1)
      ?};
      _wyn:=FAKS.edit("params_exec('check','faktury_nag')");
      {? FAKS.STAT_REJ='N' || exec('fak_pop_po','faktury_nag',_wyn,0) ?};
      {? FAKS.WHERE='G' || TYPYDOK.f_clear() ?};
      FAKS.cntx_pop()
   ?};
   exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock)
?};
FAKS.cntx_pop();
FAKS.get;
''


\fak_pop_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Obsługa popraw po zakończeniu edycji (FAKS.edit)
::   WE: _a - wynik funkcji edit
::       _b - 0-nie pytaj czy usunąć fakturę, 1-pytaj czy usunąć fakturę
::       params_get()   - ustawiany w exec('wystinne','faktury_nag')
::   WY: 0-usunięto dokument, 1-zachowano dokument
::----------------------------------------------------------------------------------------------------------------------
_esc:=_a;
_ask:=_b;

_wyn:=1;

_var_fakpop:=params_get().var_fakpop;
_kh:=_var_fakpop.KH;
_odb:=_var_fakpop.ODB;
_wal:=_var_fakpop.WAL;
_pl:=_var_fakpop.PL;
_rab:=_var_fakpop.RAB;
_krs:=_var_fakpop.KRS;
_nkrs:=_var_fakpop.NKRS;
_ist_typ:=_var_fakpop.IST_TYP;
_rtransak:=_var_fakpop.RTRANSAK;
_r_lock:=_var_fakpop.R_LOCK;
_po_first:=_var_fakpop.PO_FIRST;
_fakz:=_var_fakpop.FAKZ;
_fakz_rlock:=_var_fakpop.FAKZ_RLOCK;

{? _po_first=1
:: Dotyczy wywołania dla Dołącz - wtedy jako wartości przd ustawia zmienne z nagłówka
|| _kh:=FAKS.KH;
   _odb:=FAKS.KH_ODB;
   _wal:=FAKS.WAL;
   _pl:=FAKS.PL;
   _rab:=FAKS.RAB;
   {? _krs=0 & exec('FindInSet','#table','FAP','FAP',FAKS.ref(),,"FAP.OPAK_GEN",,,'')<>'X'  || _krs:=FAKS.KRS ?};
   {? _nkrs=0 & exec('FindInSet','#table','FAP','FAP',FAKS.ref(),,"FAP.OPAK_GEN",,,'')<>'X' || _nkrs:=FAKS.NKRS ?};
   _ist_typ:=FAKS.IST_TYP;
   _rtransak:=FAKS.RTRANSAK
?};

{? _esc<=0
|| {? _esc=0
   || exec('pop_exit','faktury_plat',1,FAKS.ref())
   |? _esc=-1
   ||
::    put w celu zapisania biezacej numeracji dla FAKS
      FAKS.put();
      _usun_fak:=
         {? _ask=0
         || 1
         |? _ask=1
         || {? exec('FindInSet','#table','FAP','FAP',FAKS.ref())
            || {? FUN.ask('Dokument ma pozycje.\nCzy na pewno usunąć dokument?'@)
               || 1
               || {? FAKS.NR=0 || exec('fak_numer','numery',''); exec('znak','numery','FAKS') ?};
                  0
               ?}
            || 1
            ?}
         ?};
      {? _usun_fak
      || _ref:=FAKS.ref();
         {? exec('usun_fak','faktury_nag',0)
         || BEER.WYSTFAKS:=null;
            exec('r_unlock_one','#table',FAKS,_ref,_r_lock);
            _wyn:=0
         ?}
      || exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock)
      ?}
   ?};
   {? _fakz
   ||
::    Zwolnienie zlecenia fakturowania
      FAKZ.cntx_psh();
      FAKZ.use(ref_name(_fakz));
      FAKZ.prefix();
      {? FAKZ.seek(_fakz)
      ||
         exec('r_unlock_one','#table',FAKZ,FAKZ.ref(),_r_lock)
      ?};
      FAKZ.cntx_pop()
   ?}
|? FAKS.WHERE='K'
:: korekta zbiorcza
|| exec('faks_kzn_pop_po','faktury_nag1',_po_first<>2)
|? FAKS.WHERE='N'
:: Korekta danych nagłówkowych
|| {? FAKS.put() || FAKS.memo_put(,'UWAGI'); exec('polafaks_update','jpk_log'); exec('koryguj_nag','faktury_nag') ?}
||
:: aktualizacja cen
   _ok:=1;
   _ctrlCN:=exec('get','#params',800850,2);

   FAP.index('FAP');
   FAP.prefix(FAKS.ref);
::Usunięcie powiązanego cennika jeśli nie jest już aktualny
   {? _po_first<>3 & FAP.first() & FAKS.SZ='S' &  FAKS.T().KOR='N'
      & (FAKS.SYMF='' | exec('get','#params',300805,2)='T')
      & (_kh<>FAKS.KH | _wal<>FAKS.WAL
        | (exec('ctdt','ceny')='T' & (_pl<>FAKS.PL | exec('khodb_tar_zm_czy','ceny_dok',_odb,FAKS.KH_ODB))))
   ||
      {!|?
         {? FAP.TAR_H<>null()
         ||
            FAP.cntx_psh();
            FAKS.cntx_psh();
            _tar_h_tap:=$FAP.TAR_H().TAP;
            FAP.CPR:=0;
            FAP.CWAL:=0;
            VAR_DEL.delete('__TAP_LIST');
            exec('be_fapcp','faktury_poz',,'FAKS',2);
            {? var_pres('__TAP_LIST')=type_of('')
            & ( __TAP_LIST*_tar_h_tap)=0
            || FAP.cntx_pop();
               FAP.TAR_H:=null();
               FAP.TAR_TMS:=0;
               FAP.put()
            || FAP.cntx_pop()
            ?};
            VAR_DEL.delete('__TAP_LIST');
            FAKS.cntx_pop( )
         ?};
         FAP.next()
      !}
   ?};

   {? _po_first<>3 & FAP.first() & FAKS.SZ='S' &  FAKS.T().KOR='N'
      & (FAKS.SYMF='' | exec('get','#params',300805,2)='T')
      & (_kh<>FAKS.KH | _wal<>FAKS.WAL
        | (exec('ctdt','ceny')='T' & (_pl<>FAKS.PL | exec('khodb_tar_zm_czy','ceny_dok',_odb,FAKS.KH_ODB))))
      & _ctrlCN<>'B' & (_ctrlCN='T' | (FAKS.cntx_psh(); _ceny_mat_dok:=exec('ceny_mat_dok','ceny_dok',2,,FAKS,1);
      FAKS.cntx_pop(); _ceny_mat_dok))
   ||
      _result:=spli_str(exec('fap_czy_cennik','faktury_wspolne',_kh,_odb,_pl,_wal),' ');
      _ma_cennik:=_result[1];
      _choice:=#_result[2];

      {? _ma_cennik='N' & _choice=2 | _ma_cennik='T' & _choice=0
      ||
         {? _ma_cennik='T' & _choice=0
         ||  _msg:='Zmieniły się kryteria cenników.\nNależy wyznaczyć ponownie ceny.'@;
            {? FAKS.SYMF<>''
            || _msg:=_msg+'\n'+'Uwaga! Jest to dokument do paragonu.'@
            ?};
            _choice:=FUN.choice(_msg,,'Wg &cenników'@,'Wg &dokumentu'@)
         || _msg:='Zmieniły się kryteria cenników.\nBrak cennika zgodnego z aktualnymi kryteriami.'@;
            FUN.info(_msg)
         ?};
         _ok:={? _choice || exec('ceny_mat_dok','ceny_dok',1,,FAKS,1,,_choice=2) || 0 ?}
      ?}
   ?};
   {? _ok
   || exec('pop_exit','faktury_plat',2,FAKS.ref());
      FAKS.AR:={? FAKS.SZ='Z' || ST.AR || FAKS.DW~1 ?};
      FAKS.AM:={? FAKS.SZ='Z' || ST.AM || FAKS.DW~2 ?};
      exec('putfakid','faktury_nag');
      {? FAKS.SYMF<>'' & FAKS.WHERE='L' & FAKS.T().PAR='N'
      ||
::       aktualizacja symbolu faktury do paragonu na rozliczonym paragonie zaliczkowym
         FAPOW.cntx_psh();
         FAPOW.index('FAKS');
         FAPOW.prefix(FAKS.SYMF);
         _loop:=FAPOW.first();
         {!
         |? _loop
         |!
            FAPOW.END_SYM:=FAKS.SYM;
            FAPOW.ROZ:='T';
            _loop:=FAPOW.put() & FAPOW.next()
         !};
::       aktualizacja powiązań kolejnych zaliczek na fakturze do paragonu
         _ref_fak:=$FAKS.ref();
         _ref_kh:=FAKS.KH;
         FAPOW.index('FAKS');
         FAPOW.prefix(_ref_fak);
         _loop:=FAPOW.first();
         {!
         |? _loop
         |!
            _ref_fapow:=FAPOW.ref();

            FAPOW.cntx_psh();
            FAPOW.index('POZ');
            FAPOW.prefix(FAPOW.POZ);
            _loop:=FAPOW.first();
            {!
            |? _loop
            |!
               {? FAPOW.ref()<>_ref_fapow
               ||
                  _ref_fak:=
                     {? FAPOW.F=FAPOW.FAKS
                     || _ref_fak
                     || exec('FindAndGet','#table',FAKS,FAPOW.F,,"
                           {? FAKS.SYMF<>'' & exec('FindAndGet','#table',FAKS,FAKS.SYMF,,\"FAKS.KH\",null())=_b
                           || FAKS.SYMF
                           || $FAKS.ref()
                           ?}",_ref_fak,_ref_kh)
                     ?}
               ?};
               _loop:=FAPOW.next()
            !};
            FAPOW.cntx_pop();
            FAPOW.F:=_ref_fak;
            _loop:=FAPOW.put() & FAPOW.next()
         !};
         FAPOW.cntx_pop()
      ?}
   ?};
   {? _ok=0
   || exec('pop_exit','faktury_plat',1,FAKS.ref())
   |? ~FAKS.put(1)
   || FUN.info('Zapisanie poprawianego dokumentu nie powiodło się.'@)
   ||
      exec('polafaks_update','jpk_log',1);
      FAKS.memo_put(,'UWAGI');
::    aktualizacja rabatu na fakturze historycznej
      exec('akt_kor','faktury_nag');
      {? FAKS.T().HIS='T'
      || exec('korh_rab','faktury_nag',FAKS.LKSQL,1)
      ?};
      FAP.index('FAP');
      FAP.prefix(FAKS.ref);
      {? FAP.first()
      ||
         {!
         |?
            _zmiana:=_rab<>FAKS.RAB | _krs<>FAKS.KRS | _nkrs<>FAKS.NKRS | _rtransak<>FAKS.RTRANSAK;
            exec('istatr_faks2fap','faktury_nag');
            {? FAKS.T().HIS='T' & _zmiana
            || exec('wysw_kor','faktury_poz');
               exec('korh_lic','faktury_wspolne',0);
               FKOR.M:=FAP.M;
               exec('korh_put','faktury_poz',0)
            ?};
            {? _zmiana
            ||
               {? FAP.POZP
               ||
                  exec('wysw_kor','faktury_poz');
                  FAP.CWAL:=FAP.CWAL+FKOR.CWAL;
                  FAP.CPR:=FAP.CPR+FKOR.CPR;
                  FAP.CN:=FAP.CN+FKOR.CN;
                  FAP.CB:=FAP.CB+FKOR.CB;
                  exec('liczfak','faktury_wspolne');
                  FAP.CWAL:=FAP.CWAL-FKOR.CWAL;
                  FAP.CPR:=FAP.CPR-FKOR.CPR;
                  FAP.CN:=FAP.CN-FKOR.CN;
                  FAP.CB:=FAP.CB-FKOR.CB
               ||
                  exec('liczfak','faktury_wspolne',0)
               ?};
::             intrastat
               exec('liczfak_ist','faktury_wspolne',1,0)
            ?};
::          intrastat
            {? _ist_typ<>FAKS.IST_TYP
            ||
               {? FAKS.IST_TYP=''
               || _mat:=FAP.M;
                  FAP.M:=null();
                  exec('ist_wart_fap','faktury_wspolne',0,0);
                  FAP.M:=_mat
               || exec('liczfak_ist','faktury_wspolne',1,1)
               ?}
            ?};
::          projekty
            {? FAKS.PROJEKTY
            || FAP.PROJEKTY:=FAKS.PROJEKTY;
               exec('projdel','projekty',FAP.ref());
               exec('projwgfap','projekty',FAP.ref())
            |? FAP.PROJEKTY
            || exec('projdel','projekty',FAP.ref());
               exec('projwgfap','projekty',FAP.ref())
            ?};
            {? FAKS.KH<>FAP.KH | FAKS.KH_ODB<>FAP.KH_ODB | FAKS.HAN<>FAP.HAN
            || FAP.KH:=FAKS.KH;
               FAP.KH_ODB:=FAKS.KH_ODB;
               FAP.HAN:=FAKS.HAN
            ?};
            FAP.put();
::          aktualizacja kontrahentow dla rezerwacji = faktura typu G
            ZK_P.cntx_psh();
            ZK_P.index('FAP');
            ZK_P.prefix(FAP.ref());
            {? ZK_P.first() || {! |? ZK_P.KH:=FAP.FAKS().KH; ZK_P.put(1); ZK_P.next() !} ?};
            ZK_P.cntx_pop();
::          naliczenie opłat dodatkowych
            exec('actTAXS','oplaty_dod',FAP.FAKS().uidref(),FAP.uidref(),FAP.M,FAP.M);
            FAP.next()
         !}
      ?};
::    projekty
      {? FAKS.PROJEKTY
      || exec('projdel','projekty',FAKS.ref())
      ?};
::    zlecenia fakturowania
      {? _fakz
      || exec('fakz2fap_del','faktury_wspolne',FAKS.ref());
         _fakz_uidref:=exec('FindAndGet','#table',FAKZ,_fakz,,"FAKZ.uidref()",'');
         {? _fakz_uidref<>''
         || exec('fakz2fap_add','faktury_wspolne',_fakz_uidref,FAKS.ref(),null())
         ?};
         FAKZ.cntx_psh();
         FAKZ.use(ref_name(_fakz));
         FAKZ.prefix();
         {? FAKZ.seek(_fakz)
         ||
            exec('r_unlock_one','#table',FAKZ,FAKZ.ref(),_r_lock)
         ?};
         FAKZ.cntx_pop()
      |? FAKS.T().KOR<>'T'
      || FAKZ2FAP.cntx_psh();
         FAKZ2FAP.index('FAKS');
         FAKZ2FAP.prefix(FAKS.ref(),null());
         {? FAKZ2FAP.first()
         || _da_zal:=exec('FindAndGet','#table',FAKZ,FAKZ2FAP.FAKZ,,"FAKZ.DA_ZAL",date(0,0,0));
            _kw_zal:=exec('FindAndGet','#table',FAKZ,FAKZ2FAP.FAKZ,,"FAKZ.WB",0);
            {? _da_zal<>date(0,0,0) & _da_zal<>{? FAKS.WHERE='L' || FAKS.D || FAKS.DA_ZAL ?} | _kw_zal<>FAKS.KW_ZAL
            || exec('fakz2fap_del','faktury_wspolne',FAKS.ref())
            ?}
         ?};
         FAKZ2FAP.cntx_pop()
      ?};
::    aktualizacja zamowien
      exec('aktu_zkn','zamsiw_rea',FAKS.ref());
::    aktualizacja informacji dodatkowych
      exec('inf_dod','fakso',0,'faktu','P');
      {? FAKS.WHERE='L' || exec('fzal_pop','faktury_zalicz') ?};
      {? (FAKS.WHERE='P' | (FAKS.WHERE='G' & (FAKS.MAG=null | FAKS.MAG().MG_OPAK<>'')))
      ||
::       aktualizacja dokumentów opakowań
         exec('dok_pop','opakow',$FAKS.ref(),FAKS.KH,FAKS.D)
      ?};
      exec('sumfak','faktury_wspolne');
      exec('plat_przel','faktury_plat',FAKS.ref);
::    wycena
      {? FAKS.SZ='Z' & (_nkrs<>FAKS.NKRS | _rab<>FAKS.RAB)
      || exec('wycenND','faktury_wspolne',FAKS.ref(),,_rab<>FAKS.RAB)
      ?};

::    Aktualizacja wartości przed redakcją po aktualizacji dokumentu
      _var_fakpop.RAB:=FAKS.RAB;
      _var_fakpop.KRS:=FAKS.KRS;
      _var_fakpop.NKRS:=FAKS.NKRS;
      _var_fakpop.KH:=FAKS.KH;
      _var_fakpop.ODB:=FAKS.KH_ODB;
      _var_fakpop.WAL:=FAKS.WAL;
      _var_fakpop.PL:=FAKS.PL;
      _var_fakpop.IST_TYP:=FAKS.IST_TYP;
      _var_fakpop.RTRANSAK:=FAKS.RTRANSAK;
      _var_fakpop.FAKZ:=exec('FindAndGet','#table',FAKZ,
         exec('FindInSet','#table','FAKZ2FAP','FAKS',FAKS.ref(),null(),"FAKZ2FAP.FAKZ",,,''),,,null());
      _var_fakpop.FAKZ_RLOCK:=0;

      TAZ.RAB_N_BE:=FAKS.RAB
   ?}
?};
_wyn


\chk_nextdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: funkcja sprawdza czy kolejne korekty uwzglednione w deklaracji Intrastat
::   WE: _a-FAKS.ref
::   WY: 'T'-kolejne dokumenty powiazane sa na INTRASTAT; ='K'-sa kolejne dokumenty przy obowiazujacym progu S; ='N'-wpp
::  OLD: \chk_nextdok/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='  ';

_faks:={? FAKS.FKSQL<>'' || FAKS.FKSQL || $FAKS.ref ?};
_onum:=FAKS.ONUM;

_Tab:=FAKS.names;
FAKS.cntx_psh;
{? _Tab.first
||
   {!
   |?
      FAKS.use(_Tab.NAME);
      FAKS.index('OREFK'); FAKS.prefix(FAKS.SZ,_faks);
      {? FAKS.first
      ||
         {!
         |?
            {? FAKS.IST_OKR<>''
            ||
               _prog:=exec('prog','intrastat',date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1),FAKS.IST_TYP);
               {? _onum<FAKS.ONUM & FAKS.INTRA='T'
               ||
                  _wyn:=_prog+' '
               |? 1-_wyn<>'S' & _onum<FAKS.ONUM
               ||
                  _wyn:=(1+_wyn)+_prog
               ?}
            ?};
            (1+_wyn)<>'S' & FAKS.next
         !}
      ?};
      _Tab.next
   !}
?};
FAKS.cntx_pop;
_wyn


\fall_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: ustawianie odpowiedniego okienka redakcji w oknie FAKS.WER_ALL
::   WE: [_a] - czy wyswietlac display (0 - tak,  1 - nie, 2 - display z widocznym przycisk "Pozycje")
::  OLD: \fall_rek/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>1 || _a:=0 ?}  || _a:=0  ?};

_wyn:=0;
exec('ustaw_ww','eurusd',{? BEER.SZ='S' || 'F' || 'K' ?});
HELP.WHERE:=FAKS.WHERE;
{? _a = 2
||
   exec('faks_win_edit_set','faktury_nag', 2)
||
   exec('faks_win_edit_set','faktury_nag')
?};
{? FAKS.T().KOR='Z' || _wyn:=0
|? FAKS.T().KOR='T' || _wyn:=1
                    || _wyn:=0
?};
{? FAKS.T().HIS='T' & FAKS.KOR<>''
|| exec('korh_rab','faktury_nag',FAKS.LKSQL,0);
   exec('ustaw_df','faktury_nag')
?};
{? _a=0 | _a = 2
|| exec('bl_dokum_seek','zbl',FAKS) | exec('dokum_seek','zbl',FAKS);
   exec('polafaks_get','jpk_log',FAKS.ref(),FAKS);
   FAKS.memo_get(,'UWAGI');
   FAKS.display() ?};
_wyn


\korh_rab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: szuka rabatu z poprzedniej faktury i przypisuje do zmiennej FZ.RAB lub aktualizuje rabat na podstawie FZ.RAB
::   WE: _a - ref sql-owy faktury historycznej
::       _b - 1-przypisanie rabatu do faktury historycznej na podstawie FZ.RAB 0-przypisanie rabatu do FZ.RAB
::  OLD: \korh_rab/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_c')<>type_of(0) || _c:=0 ?};

{? _a<>''
||
   FAKS.cntx_psh();
   FAKS.use(form(8+_a));
   FAKS.clear();
   {? FAKS.seek(_a)
   || {? _b
      || FAKS.RAB:=FZ.RAB; FAKS.put(1)
      || FZ.RAB:=FAKS.RAB;
         {? _c
         || FAP.cntx_psh();
            FAP.use(5+FAP.name()+(8+_a+3));
            FAP.index('FAP');
            FAP.prefix(BB.sqlint(_a),_c);
            {? FAP.first()
            || FZ.RAB+=FAP.RAB1
            ?};
            FAP.cntx_pop()
         ?}
      ?}
   || FZ.RAB:=0
   ?};
   FAKS.cntx_pop()
?};
''


\kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: ustalenie wartości zmiennych xx_* przez analizę faktury i korekt do niej wystawionych
::   WE: _a - czy sprawdzac znaczniki akceptacji korekt - domyslnie 0=nie, 1-tak
::       [_b] - ONUM, do którego szukamy
::   WY: 0/1 - patrz opis \szuk_kor/faktury_nag.fml
::----------------------------------------------------------------------------------------------------------------------
_chk_akc:=_a;
_onum_max:={? var_pres('_b')=type_of(0) || _b || -1 ?};
{? FAKS.T().HIS='T'
|| {? FAKS.KOR<>''
   || exec('szuk_kor','faktury_nag',FAKS.FKSQL,FAKS.D,_chk_akc,,,_onum_max)
   || exec('szuk_kor','faktury_nag',$FAKS.ref(),date(2099,12,31),_chk_akc,,,_onum_max)
   ?}
|| exec('szuk_kor','faktury_nag',$FAKS.ref(),FAKS.D,_chk_akc,,,_onum_max)
?}


\szuk_kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: 1. szuka ostatniej korekty dla faktury podanej w parametrze
::       wynik jest wpisywany jest do zmiennych globalnych
::       2. wywołanie bez parametrów usuwa zmienne globalne i kończy działanie
::   WE: _a - ref sql faktury
::       _b - data sprzedazy z faktury
::       [_c] - czy sprawdzac znaczniki akceptacji korekt - domyslnie 0=nie, 1-tak
::       [_d] - pozycja
::       [_e] - uwzględnia również anulowane-1, 0-domyślnie bez anulowanych
::       [_f] - ONUM, do którego szukamy
::   WY: 1/0 czy znaleziono korekte - w przypadku parametru _c - zwraca 1-gdy zaakceptowane 0-gdy nie
::       ~~ - dla wywołania bez parametrów
::  OLD: \szuk_kor/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0
|| VAR_DEL.delete(
      'xx_ref','xx_ref_nag','xx_nam','xx_num',
      'xx_daw',
      'xx_bkrs','xx_bnkrs','xx_krs_ref','xx_krs','xx_nkrs',
      'xx_rab');
   return(~~)
?};

{? _>=3  || {? type_of(_c)<>1 || _c:=0 ?}    || _c:=0  ?};
{? _>=4  || {? type_of(_d)<>1 || _d:=0 ?}    || _d:=0  ?};
{? _>=5  || {? type_of(_e)<>1 || _e:=0 ?}    || _e:=0  ?};
_onum_max:={? var_pres('_f')=type_of(0) || _f || -1 ?};

_wyn:={? _c || 1 || 0 ?};

xx_ref:=0;
xx_ref_nag:=FAKS.ref();
xx_nam:='';
xx_num:=0;
xx_daw:=FAKS.DW;
{? FAKS.FKSQL<>''
||
   FAKS.cntx_psh;
   FAKS.use(8+FAKS.FKSQL); FAKS.prefix;
   {? FAKS.seek(FAKS.FKSQL)
   ||
      xx_daw:=FAKS.DW
   ?};
   FAKS.cntx_pop
?};
xx_bkrs:=0;
xx_bnkrs:=0;
xx_krs_ref:=$FAKS.ref();
xx_krs:=FAKS.KRS;
xx_nkrs:=FAKS.NKRS;
xx_rab:=FAKS.RAB;

_akt:=form(8+_a)-2;

FAKS.cntx_psh(); FAP.cntx_psh();
echo('Trwa szukanie dokumentów ...'@);

VAR_DEL.delete('X_Xa');
X_Xa:=tab_tmp(2
   ,'NUM','INTEGER',''
   ,'DW','DATE',''
   ,'REF','STRING[16]',''
   ,'POZ','INTEGER',''
   ,'NETTO','REAL',''
   ,'VAT','REAL',''
   ,'BRUTTO','REAL',''
   ,'D','DATE',''
   ,'KRS','REAL',''
   ,'NKRS','REAL',''
   ,'RAB','REAL','');

_msk:=exec('tab_mask','faktury_wspolne',5,form((_b~1)-2000,-2,0,'99'));
_msk.clear;
{? _msk.first
||
   _onum:=0;
   {!
   |?
      FAKS.use(_akt+_msk.ROK);
      {? _d>0
      ||
         FAP.use((5+FAP.name())+(_akt+1)+_msk.ROK);
         FAP.index('FAP')
      ?};
      FAKS.index('OREFK');
      FAKS.prefix(BEER.SZ,_a);
      {? FAKS.first
      ||
         {!
         |?
            {? FAKS.WHERE<>'N' & (FAKS.STAT_REJ<>'A' | _e)
            ||
               {? _onum<FAKS.ONUM & exec('FindAndGet','#table',FAKS,FAKS.KZ,,"WHERE",'')='N' & FAKS.AKC='T'
               ||
                  xx_ref_nag:=FAKS.ref();
                  _onum:=FAKS.ONUM
               ?};
               X_Xa.blank;
               X_Xa.REF:=$FAKS.ref;
               X_Xa.NUM:=FAKS.ONUM;
               X_Xa.DW:=FAKS.DW;
               X_Xa.D:=FAKS.D;
               X_Xa.KRS:=FAKS.KRS;
               X_Xa.NKRS:=FAKS.NKRS;
               X_Xa.RAB:=FAKS.RAB;
               {? _d>0
               ||
                  FAP.index('FAP');
                  FAP.prefix(FAKS.ref(),_d);
                  {? FAP.first()
                  ||
                     {!
                     |?
                        X_Xa.POZ:=FAP.POZ;
                        X_Xa.NETTO:=FAP.WN;
                        X_Xa.VAT:=FAP.WV;
                        X_Xa.BRUTTO:=FAP.WB;
                        X_Xa.add(1);
                        FAP.next()
                     !}
                  ?};
                  FAP.index('POZP');
                  FAP.prefix(FAKS.ref(),_d);
                  {? FAP.first()
                  ||
                     {!
                     |?
                        X_Xa.POZ:=FAP.POZ;
                        X_Xa.NETTO:=FAP.WN;
                        X_Xa.VAT:=FAP.WV;
                        X_Xa.BRUTTO:=FAP.WB;
                        X_Xa.add(1);
                        FAP.next()
                     !}
                  ?}
               ||
                  X_Xa.BRUTTO:=FAKS.BRUTTO;
                  X_Xa.add(1)
               ?};
               {? _c & _wyn || _wyn:=FAKS.AKC='T' ?}
            ?};
            FAKS.next
         !}
      ?};
      _msk.next
   !}
?};
{? X_Xa.size()>0
||
   _continue:=1;
   {? ~_c
   || _wyn:=X_Xa.last();
      _loop:=_wyn & _onum_max>=0;
      {!
      |? _loop
      |!
         _loop:={? X_Xa.NUM>_onum_max || {? X_Xa.NUM=1 || _continue:=0 ?}; X_Xa.prev() || 0 ?}
      !}
   ?};
   {? _continue>0
   ||
      xx_ref:=BB.sqlint(X_Xa.REF);
      xx_nam:=8+X_Xa.REF;
      xx_num:=X_Xa.NUM;
      xx_daw:=X_Xa.DW;
      xx_rab:=X_Xa.RAB;
      _kz:=0;
      _kz_krs:=0;
      _kz_nkrs:=0;
      _ii:=0;
      {!
      |?
         _ii+=1;
         {? exec('FindAndGet','#table',FAKS,X_Xa.REF,,"FAKS.KZ=''",0)
         ||
::       kursy z ostatniej korekty poprzedzającej nie będącej korektą zbiorczą
            xx_krs_ref:=X_Xa.REF;
            xx_krs:=X_Xa.KRS;
            xx_nkrs:=X_Xa.NKRS;
            0
         ||
            {? _ii=1
            ||
               _kz:=1;
::          kursy z korekty zbiorczej bezpośrednio poprzedzającej
               _kz_krs:=X_Xa.KRS;
               _kz_nkrs:=X_Xa.NKRS
            ?};
            X_Xa.prev()
         ?}
      !};
      {? _kz & (_kz_krs<>xx_krs | _kz_nkrs<>xx_nkrs)
      || xx_bkrs:=xx_krs;
         xx_bnkrs:=xx_nkrs
      ?}
   ?}
?};
echo();
FAKS.cntx_pop(); FAP.cntx_pop();
_wyn


\ustaw_df
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: ustawia pole FKOR.DF dla faktur korygujacych
::  OLD: \ustaw_df/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
FKOR.DF:=date(0,0,0);
FKOR.NRKSEF:='';
{? FAKS.FKSQL<>''
|| FAKS.cntx_psh();
   FAKS.use(form(8+FAKS.FKSQL));
   FAKS.clear();
   {? FAKS.seek(FAKS.FKSQL,form(8+FAKS.FKSQL))
   ||
      FKOR.DF:=FAKS.DW;
      FKOR.NRKSEF:=FAKS.NRKSEF;
      VAR_DEL.delete('__HS_USTAW_DF_REF');
      {? (FAKS.name()+2)='hs'
      || __HS_USTAW_DF_REF:=$FAKS.ref()
      ?}
   ?};
   FAKS.cntx_pop()
?};
1


\faks_zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zakonczenie redakcji dokumentu - zmiana statusu
::   WE: [_a] - 0/1 - operacja grupowa
::       [_b] - 1-automatyczna akceptacja 0(domyślnie)-nie
::   WY: 0 - nie zakończono redakcji dokumentu, 1 - zakończono redakcję dokumentu
::----------------------------------------------------------------------------------------------------------------------
_group:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_autoakc:={? var_pres('_b')=type_of(0) || _b || 0 ?};
_wyn:=0;

{? FAKS.STAT_REJ='T'
||
   _txt:='Dokument jest zaakceptowany.\nZadanie zostanie zakończone.'@;
   {? _group || exec('add_kom','#message',FAKS.SYM,1,gsub(_txt,'\n',' ')) || FUN.info(_txt) ?};
   _wyn:=1

|? FAKS.STAT_REJ='Z'
||
   _txt:='Zakończono rejestrację dokumentu.\nZadanie zostanie zakończone.'@;
   {? _group || exec('add_kom','#message',FAKS.SYM,1,gsub(_txt,'\n',' ')) || FUN.info(_txt) ?};
   _wyn:=1

|? FAKS.STAT_REJ='A'
||
   _txt:='Dokument został anulowany.\nZadanie zostanie zakończone.'@;
   {? _group || exec('add_kom','#message',FAKS.SYM,1,gsub(_txt,'\n',' ')) || FUN.info(_txt) ?};
   _wyn:=1

|? FAKS.T().VALIDATE<>null() & ~exec('validate','wzorce',FAKS.T().VALIDATE,FAKS,FAKS.ref())
||
   _wyn:=0

|? (FAKS.WHERE='K' | FAKS.WHERE='N') & _group
||
   _txt:='Grupowa akceptacja niedostępna.'@;
   exec('add_kom','#message',FAKS.SYM,1,gsub(_txt,'\n',' '));
   _wyn:=0

|? FAKS.STAT_REJ='N'
||
   FAKS.cntx_psh();
   exec('fak_akc','faktury_nag',BPMN.END<>2,_group);
   FAKS.cntx_pop();
   {? FAKS.get() || _wyn:=FAKS.STAT_REJ='Z' ?}
?};
{? _wyn & _autoakc
|| exec('faks_akceptuj','faktury_nag',1,_group);
   {? FAKS.T().KOR='T' & (';MG'*FAKS.WHERE)>1
   || {? exec('get','#params',300380,2)='T'
       & exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_DZWF')
       & exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_DAPZ')
       & exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_EAMG')
       & FAKS.DZ<>date(0,0,0)
      || _faks_ref:=$FAKS.ref();
         _oddz:=(FAKS.name()-2)+1;
         _okr:=form(FAKS.DZ~1,,0,'99')+2;

         exec('faks_zwrot','faktury_nag');

         exec('mag_psh','open_tab');
         exec('mag_open','open_tab',_oddz,_okr);
         ND.index('FAKS_REF');
         ND.prefix(_faks_ref,);
         {? ND.first()
         || {!
            |? exec('nd_zakoncz','magdok_nag',1,,1);
               ND.next()
            !}
         ?};
         exec('mag_pop','open_tab')
      ?}
   |? FAKS.T().KOR<>'T' & (';G'*FAKS.WHERE)>1
   || {? exec('get','#params',300380,2)='T'
       & exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_DWYF')
       & exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_DWYD')
       & exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_EAMG')
       & FAKS.D<>date(0,0,0)
      || _faks_ref:=$FAKS.ref();
         _oddz:=(FAKS.name()-2)+1;
         _okr:=form(FAKS.D~1,,0,'99')+2;

         exec('faks2nd','faktury_nag');

         exec('mag_psh','open_tab');
         exec('mag_open','open_tab',_oddz,_okr);
         ND.index('FAKS_REF');
         ND.prefix(_faks_ref,);
         {? ND.first()
         || {!
            |? exec('nd_zakoncz','magdok_nag',1,,1);
               ND.next()
            !}
         ?};
         exec('mag_pop','open_tab')
      ?}
   ?}
?};
_wyn


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zaznacza wymagalne pola w nagłówku faktury
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || FAKS.win_edit('?') ?};

:: okno informacyjne
{? _win_red=exec('faks_win_info','faktury_nag')
|| _enable:={? {? FAKS.f_active() || FAKS.f_get() || FAKS.get() ?} || 'enable=1' || 'enable=0' ?};
   _enabKZ:={? _enable='enable=1' & FAKS.T().KOR='Z' || 'enable=0' || _enable ?};
   FAKS.efld_opt(_win_red,_enable,,'NETW');
   FAKS.efld_opt(_win_red,_enable,,'BRTW');
   FAKS.efld_opt(_win_red,_enable,,'KW_ZAL');
   FAKS.efld_opt(_win_red,_enable,,'NWAL');
   FAKS.efld_opt(_win_red,_enable,,'WAL');
   FAKS.efld_opt(_win_red,_enabKZ,,'PL');
   FAKS.efld_opt(_win_red,_enabKZ,,'TZ');
   FAKS.efld_opt(_win_red,_enable,,'DW');
   FAKS.efld_opt(_win_red,_enable,,'D');
   _enabKZ:={? FAKS.WHERE='L' || 'enable=0' || _enabKZ ?};
   FAKS.efld_opt(_win_red,_enabKZ,,'DO');
   return()
?};

:: Projekt
{? FAKS.PROJEKTY=null() & (FAKS.T().PROJZAKR='' | TYPYSP.PROJZAKR=exec('projzakr_nie_dotyczy','projekty'))
|| FAKS.efld_opt(_win_red,'enable=0',,'PROJEKTY')
|| FAKS.efld_opt(_win_red,'enable=1',,'PROJEKTY')
?};

:: NIP
{? FAKS.T().PAR='T'
|| ~~
?};

:: NIP UE
{? FAKS.T().UE='T' & (FAKS.SZ='S' | FAKS.SZ='Z' & FAKS.IST_TYP<>'')
|| {? ~exec('nip_ue_required','intrastat')
   || FAKS.efld_opt(_win_red,'mark=0',INTRAST,'NIP')
   || FAKS.efld_opt(_win_red,'mark=1',INTRAST,'NIP')
   ?};
   FAKS.efld_opt(_win_red,'enable=1',INTRAST,'NIP')
|| FAKS.efld_opt(_win_red,'mark=0',INTRAST,'NIP');
   FAKS.efld_opt(_win_red,'enable=1',INTRAST,'NIP')
?};

:: Odbiorca
{? FAKS.T().PAR='N'
|| FAKS.efld_opt(_win_red,'enable=1',,'KH_ODB')
|| FAKS.efld_opt(_win_red,'enable=0',,'KH_ODB')
?};

:: Numer wystawcy
{? FAKS.SZ='Z' & FAKS.T().UE='N' & FAKS.WHERE<>'E'
|| FAKS.efld_opt(_win_red,'mark=1',,'ID')
|| FAKS.efld_opt(_win_red,'mark=0',,'ID')
?};

:: Data dostawy
{? FAKS.WHERE='L' & FAKS.SZ='S'
|| FAKS.efld_opt(_win_red,'enable=0',,'D');
   FAKS.efld_opt(_win_red,'enable=0',,'DZ')
|| FAKS.efld_opt(_win_red,'enable=1',,'D');
   FAKS.efld_opt(_win_red,'enable=1',,'DZ')
?};

:: Data zwrotu
{? FAKS.WHERE<>'L' & FAKS.SZ='S' & FAKS.T().KOR='T'
   & exec('czy_zwrot','faktury_nag',FAKS.ref())='T'
|| FAKS.efld_opt(_win_red,'mark=1',,'DZ')
|| FAKS.efld_opt(_win_red,'mark=0',,'DZ')
?};

:: Data zaliczki
{? FAKS.SZ='S' & FAKS.T().KOR='N' & FAKS.T().PAR='N' & FAKS.WHERE<>'L'
|| FAKS.efld_opt(_win_red,'enable=1',,'DA_ZAL')
|| FAKS.efld_opt(_win_red,'enable=0',,'DA_ZAL')
?};

:: Forma, termin płatności
{? FAKS.NETTO>0 | FAKS.T().KOR='N' | FAKS.SZ='S' & FAKS.T().KOR='T' & exec('get','#params',100301,2)='T'
|| FAKS.efld_opt(_win_red,'mark=1',FZ,'FORMAPLA');
   FAKS.efld_opt(_win_red,'mark=1',FZ,'TERMPLAT')
|| FAKS.efld_opt(_win_red,'mark=0',FZ,'FORMAPLA');
   FAKS.efld_opt(_win_red,'mark=0',FZ,'TERMPLAT')
?};

:: Numer rachunku bankowego
{? FAKS.T().PAR='T' | FAKS.T().KOR='Z'
|| FAKS.efld_opt(_win_red,'enable=0',,'SKID_RBK')
|| FAKS.efld_opt(_win_red,'enable=1',,'SKID_RBK')
?};
{? exec('wymagany_vskidrbk','faktury_nag')
|| FAKS.efld_opt(_win_red,'mark=1',,'VSKIDRBK')
|| FAKS.efld_opt(_win_red,'mark=0',,'VSKIDRBK')
?};

:: Powód korekty
_ctrln:=exec('get','#params',{? BEER.SZ='S' || 300209 || 200209 ?},2)='T' | FAKS.WHERE='N';
_ctrlp:=FAKS.WHERE='N' | FAKS.WHERE='K';
{? FAKS.T().KOR<>'N' & _ctrln
|| FAKS.efld_opt(_win_red,'mark=1',,'TZP')
|| FAKS.efld_opt(_win_red,'mark=0',,'TZP')
?};
{? FAKS.WHERE='N'
|| FAKS.efld_opt(_win_red,{? _ctrlp || 'mark=1' || 'mark=0' ?},,'POWKOR');
   FAKS.efld_opt(_win_red,'enable=1',,'POWKOR')
|| FAKS.efld_opt(_win_red,{? _ctrlp || 'mark=1' || 'mark=0' ?},,'POWKOR');
   {? FAKS.WHERE='K' | _ctrlp
   || FAKS.efld_opt(_win_red,'enable=1',,'POWKOR')
   || FAKS.efld_opt(_win_red,'enable=0',,'POWKOR')
   ?}
?};

:: Konto kosztowe
{? exec('get','#params',{? FAKS.SZ='S' || 300101 || 200101 ?},2)='N'
|| FAKS.efld_opt(_win_red,'enable=0',,'KK')
|| FAKS.efld_opt(_win_red,'enable=1',,'KK')
?};
:: Rabat
{? FAKS.RABA='T'
|| FAKS.efld_opt(_win_red,'mark=0',,'RAB');
   FAKS.efld_opt(_win_red,'mark=0',,'RABK');
   FAKS.efld_opt(_win_red,'enable=0',,'RAB');
   FAKS.efld_opt(_win_red,'enable=0',,'RABK')
|? FAKS.WHERE='K'
|| {? exec('FindInSet','#table','FAKS_KZR','UNIK',
         'T',exec('FindAndGet','#table',FAKS,FAKS.ref(),,"FAKS.uidref()",''),,1,,null())
   || FAKS.efld_opt(_win_red,'enable=0',,'RAB');
      FAKS.efld_opt(_win_red,'enable=1',,'RABK');
      FAKS.efld_opt(_win_red,'mark=0',,'RAB');
      FAKS.efld_opt(_win_red,'mark=1',,'RABK')
   |? FAKS.RAB
   || FAKS.efld_opt(_win_red,'enable=1',,'RAB');
      FAKS.efld_opt(_win_red,'enable=0',,'RABK');
      FAKS.efld_opt(_win_red,'mark=1',,'RAB');
      FAKS.efld_opt(_win_red,'mark=0',,'RABK')
   || FAKS.efld_opt(_win_red,'enable=1',,'RAB');
      FAKS.efld_opt(_win_red,'enable=1',,'RABK');
      FAKS.efld_opt(_win_red,'mark=1',,'RAB');
      FAKS.efld_opt(_win_red,'mark=1',,'RABK')
   ?}
?};
:: Kurs, data kursu dla waluty opodatkowania
{? FAKS.WAL<>FAKS.NWAL
|| FAKS.efld_opt(_win_red,'mark=1',,'KRS');
   FAKS.efld_opt(_win_red,'mark=1',,'DTK');
   FAKS.efld_opt(_win_red,'enable=1',,'SWAL');
   FAKS.efld_opt(_win_red,'enable=1',,'KRS');
   FAKS.efld_opt(_win_red,'enable=1',,'DTK');
   {? FAKS.T().SPPK='N' & FAKS.T().KOR='Z'
   ||
      FAKS.efld_opt(_win_red,'mark=0',,'KRS');
      {? FAKS.KRS=0 || FAKS.efld_opt(_win_red,'mark=0',,'DTK')?}
   ?}
|| FAKS.efld_opt(_win_red,'mark=0',,'KRS');
   FAKS.efld_opt(_win_red,'mark=0',,'DTK');
   FAKS.efld_opt(_win_red,'enable=0',,'SWAL');
   FAKS.efld_opt(_win_red,'enable=0',,'KRS');
   FAKS.efld_opt(_win_red,'enable=0',,'DTK')
?};

:: Kurs, data kursu dla waluty narodowej
{? FAKS.WAL<>INFO.NAROD
|| FAKS.efld_opt(_win_red,'mark=1',,'NKRS');
   FAKS.efld_opt(_win_red,'mark=1',,'NDTK');
   FAKS.efld_opt(_win_red,'enable=1',,'NSWAL');
   FAKS.efld_opt(_win_red,'enable=1',,'NKRS');
   FAKS.efld_opt(_win_red,'enable=1',,'NDTK');
   {? FAKS.T().SPPK='N' & FAKS.T().KOR='Z'
   ||
      FAKS.efld_opt(_win_red,'mark=0',,'NKRS');
      {? FAKS.NKRS=0 || FAKS.efld_opt(_win_red,'mark=0',,'NDTK')?}
   ?}
|| FAKS.efld_opt(_win_red,'mark=0',,'NKRS');
   FAKS.efld_opt(_win_red,'mark=0',,'NDTK');
   FAKS.efld_opt(_win_red,'enable=0',,'NSWAL');
   FAKS.efld_opt(_win_red,'enable=0',,'NKRS');
   FAKS.efld_opt(_win_red,'enable=0',,'NDTK')
?};

:: Magazyn, typ dokumentu magazynowego
{? FAKS.WHERE='G'
|| FAKS.efld_opt(_win_red,'enable=1',,'MAG');
   FAKS.efld_opt(_win_red,'enable=1',,'TYPYDOK')
|| FAKS.efld_opt(_win_red,'enable=0',,'MAG');
   FAKS.efld_opt(_win_red,'enable=0',,'TYPYDOK')
?};

:: Wartość netto, brutto w walucie
{? FAKS.WAL=FAKS.NWAL
|| FAKS.efld_opt(_win_red,'enable=0',,'NETW');
   FAKS.efld_opt(_win_red,'enable=0',,'BRTW');
   FAKS.efld_opt(_win_red,'enable=0',FZ,'WAL_H')
|| FAKS.efld_opt(_win_red,'enable=1',,'NETW');
   FAKS.efld_opt(_win_red,'enable=1',,'BRTW');
   FAKS.efld_opt(_win_red,'enable=1',FZ,'WAL_H')
?};

:: Wymagalność daty otrzymania na dokumencie zakupu
{? FAKS.WHERE='Z'
|| FAKS.efld_opt(_win_red,'mark=1',,'DO')
|| FAKS.efld_opt(_win_red,'mark=0',,'DO')
?};

:: Sprzedaż opodatkowana
{? FAKS.T().PAR='N'
|| FAKS.efld_opt(_win_red,'enable=1',,'NDVAT')
|| FAKS.efld_opt(_win_red,'enable=0',,'NDVAT')
?};

:: OSS, IOSS
{? KST.OSS<>'' | KST.IOSS<>''
|| FAKS.efld_opt(_win_red,'enable=1',,'KRAJ_VAT');
   FAKS.efld_opt(_win_red,'enable=1',,'PROC')
|| FAKS.efld_opt(_win_red,'enable=0',,'KRAJ_VAT');
   FAKS.efld_opt(_win_red,'enable=0',,'PROC')
?};

:: Transakcja trójstronna
{? FAKS.T().PAR='N'
|| FAKS.efld_opt(_win_red,'enable=1',,'DO_UE')
|| FAKS.efld_opt(_win_red,'enable=0',,'DO_UE')
?};

:: Zaliczki
{? FAKS.WHERE='L' & FAKS.T().KOR='N' | FAKS.DA_ZAL<>date(0,0,0)
|| FAKS.efld_opt(_win_red,'mark=1',,'KW_ZAL')
|| FAKS.efld_opt(_win_red,'mark=0',,'KW_ZAL')
?};

:: Intrastat
_ist:=
   {? FAKS.IST_OKR=''
   || 0
   || _progp:=exec('prog','intrastat',date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1),'P');
      _progw:=exec('prog','intrastat',date(#(4+FAKS.IST_OKR),#(FAKS.IST_OKR+2),1),'W');
      1
   ?};
{? _ist & exec('czy_prog_s','intrastat',FAKS.IST_TYP,_progw,_progp)
|| FAKS.efld_opt(_win_red,'mark=1',,'KPW');
   FAKS.efld_opt(_win_red,'mark=1',,'WD');
   FAKS.efld_opt(_win_red,'mark=1',,'RTRANSAK');
   FAKS.efld_opt(_win_red,'mark=1',,'RTRANSPO');
   FAKS.efld_opt(_win_red,'mark=1',,'IST_OKR')
|? _ist & exec('czy_prog_p','intrastat',FAKS.IST_TYP,_progw,_progp)
|| FAKS.efld_opt(_win_red,'mark=1',,'KPW');
   FAKS.efld_opt(_win_red,'mark=0',,'WD');
   FAKS.efld_opt(_win_red,'mark=1',,'RTRANSAK');
   FAKS.efld_opt(_win_red,'mark=0',,'RTRANSPO');
   FAKS.efld_opt(_win_red,'mark=1',,'IST_OKR')
|| FAKS.efld_opt(_win_red,'mark=0',,'KPW');
   FAKS.efld_opt(_win_red,'mark=0',,'WD');
   FAKS.efld_opt(_win_red,'mark=0',,'RTRANSAK');
   FAKS.efld_opt(_win_red,'mark=0',,'RTRANSPO');
   FAKS.efld_opt(_win_red,'mark=0',,'IST_OKR')
?};

:: Wymagany split payment
{? exec('sp_active','faktury_wspolne',FAKS.DW)
      |
   var_pres('SP_WYM',MPKW)=27
||
   {? FAKS.T().PAR='T'
   || FAKS.efld_opt(_win_red,'enable=0',,'SP_WYM')
   || FAKS.efld_opt(_win_red,'enable=1',,'SP_WYM')
   ?};
   {? exec('faks_fld_czy_ed','faktury_nag','SP_WYM')
   || FAKS.efld_opt(_win_red,'editable=1',,'SP_WYM')
   || FAKS.efld_opt(_win_red,'editable=0',,'SP_WYM')
   ?}
?};

::UWAGI
{? FAKS.T().KOR='T' & FAKS.T().HIS='N' & exec('kznf1_czy_ed','faktury_nag')<>1
|| FAKS.efld_opt(_win_red,'editable=0',,'UWAGI')
?}


\set_win_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dostosowuje okno słowników
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || FAKS.win_edit('?') ?};

{? _win_red='WRED'
||
   KH.win_dict('WER');
   KH.actions('WER','W')
?}


\faks_win_edit_btn_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.22]
:: OPIS: Ustawia opcje przycisków w oknie redakcji tabeli FAKS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__FAKS_WIN_EDIT')>0
||
   {? var_pres('BTN_KOR_DOK',__FAKS_WIN_EDIT)=type_of('')
   ||
      _options:={? FAKS.WHERE='K' | FAKS.WHERE='N' || 'state=normal' || 'state=grayed' ?};
      FAKS.btn_opt(__FAKS_WIN_EDIT.BTN_KOR_DOK,_options)
   ?};
   {? var_pres('BTN_SP_NIPUE',__FAKS_WIN_EDIT)=type_of('')
   ||
      KH.cntx_psh();
      _options:={? FAKS.NIP_UE<>'' & FAKS.KH().FIZYCZNY=2 || 'state=normal' || 'state=grayed' ?};
      KH.cntx_pop();
      FAKS.btn_opt(__FAKS_WIN_EDIT.BTN_SP_NIPUE,_options)
   ?};
   {? var_pres('BTN_SP_PODAT',__FAKS_WIN_EDIT)=type_of('')
   ||
      _options:={? FAKS.KH & FAKS.NIP<>'' || 'state=normal' || 'state=grayed' ?};
      FAKS.btn_opt(__FAKS_WIN_EDIT.BTN_SP_PODAT,_options)
   ?};
   {? exec('upgrade2325_blbc1','zbl') & var_pres('BTN_BSCHECK',__FAKS_WIN_EDIT)=type_of('')
   || _options:={? var_pres('__DOKUMZ_BC')>0 & __DOKUMZ_BC.DOKUMZ<>null() &
                exec('FindAndGet','#table',DOKUMZ,__DOKUMZ_BC.DOKUMZ,,"FILEBC<>null()",0)
                || 'state=normal'
                || 'state=grayed'
                ?};
      FAKS.btn_opt(__FAKS_WIN_EDIT.BTN_BSCHECK,_options)
   ?}
?}


\faks_win_edit_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Ustawia okno redakcji tabeli FAKS, wymagane pola, okna słowników
::   WE: [_a] - 1-tryb Display, 0-(domyślnie) nie Display, 2-tryb Display z przyciskiem "Pozycje"
::   WY: okienko
::----------------------------------------------------------------------------------------------------------------------
_disp:={? var_pres('_a')=type_of(0) || _a || 0 ?};
BPMN.END:=0;
VAR_DEL.delete('__FAKS_WIN_EDIT');
__FAKS_WIN_EDIT:=obj_new('BTN_KOR_DOK','BTN_SP_NIPUE','BTN_SP_PODAT','BTN_BSCHECK');
_win_red:=exec('faks_win_edit','faktury_nag');
{? _disp >= 1
||
   {? _disp = 2
   ||
     _ff:="params_exec('faks_pozycje_wer','faktury_nag', 2)";
     FAKS.win_ebtn(_win_red,'text='+'Poz&ycje'@+',btn_label_align=center,panel=bottom,align=begin,display=1',_ff)
   ?}
|| {? FAKS.T().KOR='Z' | FAKS.WHERE='N'
:: Korekta zbiorcza i nagłówkowa
   || _ff:="params_exec('faks_kzf_red','faktury_nag')";
      __FAKS_WIN_EDIT.BTN_KOR_DOK:=
         FAKS.win_ebtn(_win_red,'text='+'&Korygowane dokumenty'@+',btn_label_align=center,panel=bottom,align=begin',_ff)
   ?};
   _ff:="params_exec('faks_pozycje_red','faktury_nag')";
   FAKS.win_ebtn(_win_red,'text='+'Poz&ycje'@+',btn_label_align=center,panel=bottom,align=begin',_ff);
   _ff:="
      exec('nip2tmp','kontrahent',,,(2+FAKS.NIP_UE)+exec('niptostr','#string',(3-FAKS.NIP_UE)));
      exec('chk_nipue_kh','kontrahent',1);
      ''
   ";
   __FAKS_WIN_EDIT.BTN_SP_NIPUE:=
      FAKS.win_ebtn(_win_red,'text='+'&Sprawdź NIP-UE'@+',btn_label_align=center,panel=bottom,align=begin',_ff);
   _ff:="
      exec('chk_kh_in_vat','fks_vat',FAKS.KH,FAKS.NIP,1);
      ''
   ";
   __FAKS_WIN_EDIT.BTN_SP_PODAT:=
      FAKS.win_ebtn(_win_red,'text='+'Sprawdź poda&tnika'@+',btn_label_align=center,panel=bottom,align=begin',_ff);
   exec('faks_win_edit_btn_opt','faktury_nag');
   {? FAKS.T().KOR='N' & (';ZE'*FAKS.WHERE)>1
   || _ff:="params_exec('faks_rozlicz_koszt','faktury_nag')";
      FAKS.win_ebtn(_win_red,'text='+'&Koszty'@+',btn_label_align=center,panel=bottom,align=begin',_ff)
   ?}
?};
:: Rezultat kontroli Businesscheck
{? exec('upgrade2325_blbc1','zbl')
|| {? var_pres('__DOKUMZ_BC')<0 | __DOKUMZ_BC.REFSQL<>$FAKS.ref()
   || exec('faks_dokumzbc_seek','zbl')
   ?};
   {? var_pres('__DOKUMZ_BC')>0 & __DOKUMZ_BC.REFSQL=$FAKS.ref() & __DOKUMZ_BC.DOKUMZ<>null()
   || _ff:="DOKUMZ.cntx_psh();
         DOKUMZ.prefix();
         {? DOKUMZ.seek(__DOKUMZ_BC.DOKUMZ)
         || exec('blc_analyze','businesslink3',1)
         ?};
         DOKUMZ.cntx_pop();
         ''";
      __FAKS_WIN_EDIT.BTN_BSCHECK:=
         FAKS.win_ebtn(_win_red,'text='+'&Businesscheck'@+
                   ',btn_label_align=center,panel=bottom,align=begin,display=1',_ff);
      exec('faks_win_edit_btn_opt','faktury_nag')
   ?}
?};
{? _disp<1
|| _ff:="params_exec('faks_zakoncz_red','faktury_nag')";
   exec('zakoncz','#window',FAKS,_win_red,1,_ff,0,
      exec('help_red_zakoncz','#window','D'), exec('text_red_zakoncz','#window','D'));
   exec('ok_esc','#window',FAKS,_win_red,1,,,,,exec('help_red_ok','#window','Z'),exec('text_red_ok','#window')
   ,exec('help_red_esc','#window','A'))
?};
FAKS.win_edit(_win_red);
exec('set_efld_opt','faktury_nag',_win_red);
exec('sel_win_kh','ustawienia');
POJAZDY.win_dict('SLO_J'); POJAZDY.actions('SLO_J','W');
{? exec('get','#params',300231,2)='T' || KH_ODB.actions('WER','DO:DO') ?};
_win_red


\faks_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca okno redakcji tabeli FAKS
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
:: Ustawia BEER.LW
exec('ust_lw','eurusd',0);
_win_akr:=
   {? FAKS.T().KOR='N'
:: dokument
   ||
:: dokument zakupu
                           {? FAKS.SZ='Z'       || 'WREDZ'
:: dokument sprzedaży
                                                || 'WRED'
                           ?}
:: korekta nagłówkowa
   |? FAKS.WHERE='N'
   ||
                                                   'KN_DANE'
   |? FAKS.T().KOR='T'
:: korekta pojedyńcza
   ||
:: korekta zakupu
                           {? FAKS.SZ='Z'       || 'WREDZK'
:: korekta historyczna
                           |? FAKS.T().HIS='T'  || 'WREDKH'
:: korekta sprzedaży
                                                || 'WREDK'
                           ?}
   |? FAKS.T().KOR='Z'
:: korekta zbiorcza
   ||
:: sprzedaży
                           {? FAKS.SZ='S'       || 'KZ_RED'
:: zakupu
                                                || 'KZZ_RED'
                           ?}
:: nieobsługiwany przypadek
   ||                                              ''
   ?};

{? _win_akr='WRED' | _win_akr='WREDK' | _win_akr='WREDKH'
   | _win_akr='WREDZ' | _win_akr='WREDZK'
:: Tymczasowe okno redakcji
|| _title:=
      {? FAKS.T().KOR='N'
      || {? FAKS.SZ='S'
         || 'Dane dokumentu sprzedaży'@
         || {? FAKS.WHERE='E'
            || 'Dane dokumentu wewnętrznego'@
            || 'Dane dokumentu zakupu'@
            ?}
         ?}
      || {? FAKS.SZ='S'
         || 'Dane korekty sprzedaży'@
         || {? FAKS.WHERE='E'
            || 'Dane korekty wewnętrznej'@
            || 'Dane korekty zakupu'@
            ?}
         ?}
      ?};
   _ident:='#faksedit';
:: kolejne znaki identyfikatora okienka '#faksedit%1%2%3'[typ, podgląd dokum, kontrahent]
   {? FAKS.T().PAR='T'
   || _ident+='a___';
      _win_red:=FAKS.mk_edit(_title,,_ident,,,'html_maximized');
      FAKS.win_ewin(_win_red,,_win_akr)
   || _nueOrZal:=FAKS.T().UE='N' | FAKS.T().ZAL='T';
      _dokum:=exec('bl_dokum_seek','zbl',FAKS) | exec('dokum_seek','zbl',FAKS);
      _dokum_view:=_dokum & DOKUM.DOKUMI;
      _kh:=FAKS.WHERE='N' | exec('FindAndGet','#table',FAKS,FAKS.KZ,,"FAKS.WHERE='N'",0);
      _ident+={? _nueOrZal || 'b' || '_' ?};
      _ident+={? _dokum_view || 'a' || '_' ?};
      _ident+={? _kh || 'a' || '_' ?};
      _ident+={? FAKS.SZ='S' | _dokum || 'a' || '_' ?};
      {? _nueOrZal
      || _win_red:=FAKS.mk_edit(_title,,_ident,,,'html_maximized');
         FAKS.win_etab(_win_red,'Dane podstawowe'@);
         FAKS.win_ewin(_win_red,,_win_akr);
         FAKS.win_etab(_win_red,'Dane dodatkowe'@);
         FAKS.win_ewin(_win_red,FAKSPOLA,'RED')
      || _win_red:=FAKS.mk_edit(_title,,_ident,,,'html_maximized');
         FAKS.win_etab(_win_red,'Dane podstawowe'@);
         FAKS.win_ewin(_win_red,,_win_akr);
         FAKS.win_etab(_win_red,'Dane dodatkowe'@);
         FAKS.win_ewin(_win_red,FAKSPOLA,'RED');
         FAKS.win_etab(_win_red,'Dane do Intrastat'@);
         FAKS.win_ewin(_win_red,,'INTRA')
      ?};
      {? FAKS.SZ='S' | _dokum
      ||
         FAKS.win_etab(_win_red,'Dane e-dokumentu'@);
         FAKS.win_ewin(_win_red,DOKUM,'EDOKUMEN')
      ?};
      {? _dokum_view
      || FAKS.win_etab(_win_red,'Podgląd'@);
         FAKS.win_ewin(_win_red,DOKUM,'DOKUMI')
      ?};
      {? _kh
      || FAKS.win_etab(_win_red,'Kontrahent'@);
         FAKS.win_ewin(_win_red,,'KH')
      ?};
      FAKS.win_etab(_win_red,'Uwagi'@);
      FAKS.win_ewin(_win_red,,'UWAGI')
   ?};
   _win_red
|? _win_akr='KZ_RED' | _win_akr='KZZ_RED'
:: Tymczasowe okno redakcji
|| _dokum:=exec('bl_dokum_seek','zbl',FAKS) | exec('dokum_seek','zbl',FAKS);
   _dokum_view:=_dokum & DOKUM.DOKUMI;
   _ident:='#faksedit';
   _ident+='c';
   _ident+={? _dokum_view || 'a' || '_' ?};
   _ident+='_';
   _ident+={? FAKS.SZ='S' | _dokum || 'a' || '_' ?};
   _win_red:=FAKS.mk_edit('Dane korekty zbiorczej'@,,_ident,,,'html_maximized');
   FAKS.win_etab(_win_red,'Dane podstawowe'@);
   FAKS.win_ewin(_win_red,,_win_akr);
   FAKS.win_etab(_win_red,'Dane dodatkowe'@);
   FAKS.win_ewin(_win_red,FAKSPOLA,'RED');
   {? FAKS.SZ='S' | _dokum
   ||
      FAKS.win_etab(_win_red,'Dane e-dokumentu'@);
      FAKS.win_ewin(_win_red,DOKUM,'EDOKUMEN')
   ?};
   {? _dokum_view
   || FAKS.win_etab(_win_red,'Podgląd'@);
      FAKS.win_ewin(_win_red,DOKUM,'DOKUMI')
   ?};
   FAKS.win_etab(_win_red,'Uwagi'@);
   FAKS.win_ewin(_win_red,,'UWAGI');
   _win_red
|? _win_akr='KN_DANE'
:: Tymczasowe okno redakcji
|| _dokum:=exec('bl_dokum_seek','zbl',FAKS) | exec('dokum_seek','zbl',FAKS);
   _dokum_view:=_dokum & DOKUM.DOKUMI;
   _ident:='#faksdit';
   _ident+='d';
   _ident+={? _dokum_view || 'a' || '_' ?};
   _ident+='_';
   _ident+={? FAKS.SZ='S' | _dokum || 'a' || '_' ?};
   _win_red:=FAKS.mk_edit('Dane noty korygującej'@,,_ident,,,'html_maximized');
   FAKS.win_etab(_win_red,'Dane podstawowe'@);
   FAKS.win_ewin(_win_red,,_win_akr);
   FAKS.win_etab(_win_red,'Kontrahent'@);
   FAKS.win_ewin(_win_red,,'KH_K');
   FAKS.win_etab(_win_red,'Dane dodatkowe'@);
   FAKS.win_ewin(_win_red,,'KN_INNE');
   {? FAKS.SZ='S' | _dokum
   ||
      FAKS.win_etab(_win_red,'Dane e-dokumentu'@);
      FAKS.win_ewin(_win_red,DOKUM,'EDOKUMEN')
   ?};
   {? _dokum_view
   || FAKS.win_etab(_win_red,'Podgląd'@);
      FAKS.win_ewin(_win_red,DOKUM,'DOKUMI')
   ?};
   FAKS.win_etab(_win_red,'Uwagi'@);
   FAKS.win_ewin(_win_red,,'UWAGI');
   _win_red
:: Okno redkacji
|| _win_akr
?}


\faks_win_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca okno szczegółów tabeli FAKS
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
return('TINFO');
:: Ustawia BEER.LW
exec('ust_lw','eurusd',0);
{? 1| BEER.LW='W'
|| 'WINFO'
|| 'INFO'
?}


\faks_win_patt_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Ustawia okno wzorca i szukania tabeli FAKS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FAKS.win_patt(exec('faks_win_patt','faktury_nag'))


\faks_win_patt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca akronim okno wzorca i szukania tabeli FAKS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.SZ='S' || 'SZUK'
|? FAKS.SZ='Z' || 'SZUKZ'
?}


\fak_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: akceptuje dokument sprzedazy (formula wywolywana dla biezacego naglowka dokumentu sprzedazy)
::       dane naglowkowe powoduja komunikat przed pytaniem o akceptacje
::       dane zwiazane z pozycjami, wartosciami itp. daja komunikat po pytaniu o akceptacje
::   WE: [_a] - czy pytanie
::       [_b] - grupowa akceptacja
::       [_c] - 0-korekta zbiorcza; 1-korekty pojedyncza
::       [_d] - czy komunikat koncowy o akceptacji
::       [_e] - identyfikator grupujący komunikaty
::  OLD: \fak_akc/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=FAKS.sel_mark() ?} || _b:=FAKS.sel_mark() ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=1 ?} || _d:=1 ?};
{? _>=5 || {? type_of(_e)<>2 || _e:='' ?} || _e:='' ?};

_ok:=1;
_group:=_b;
_komid:={? _e<>'' || _e || {? _group | _c || '' || form(FAKS.NR,,,'99')+' - ' ?}+FAKS.SYM ?};
_czyakc:=1;
_nieakc:=0;
__sect_beg:=0;
_del_dsp:=-1;

{? FAKS.WHERE='K' | FAKS.WHERE='N'
||
   {? exec('check_tz','faktury_nag',~_group,'',_c,'',"")
   ||
      exec('faks_kzn_akc','faktury_nag1',_group)
   ?};
   return
?};

_nr:=FAKS.NR;
:: dla akcji grupowej
{? _group
|| _komid:={? FAKS.T().NRT=1 & _nr=0 || 'Kontrahent '@+FAKS.KH().KOD+' - '+FAKS.KH().SKR || FAKS.SYM ?};
   __kom.sect_clr();
   _a:=0
||
   {? var_pres('__kom')<100 | _c
   || {? FAKS.SZ='S'
      || exec('ini_kom','#message','Zakończenie rejestracji dokumentu sprzedaży'@)
      || exec('ini_kom','#message','Zakończenie rejestracji dokumentu zakupu'@)
      ?};
      __kom_on:=1
   ?}
?};
_komroot:="
   {? ~__sect_beg || __kom.sect_beg(_a); __sect_beg:=1 ?};
   {? _b | __kom.find_msg(_a) || __kom.set_root(_a) || __kom.sect_beg(_a) ?}
";

:: sprawdza czy uzytkownik ma uprawnienia do stanowiska sprzedazy z faktury
   _ok:=KHVZ.WIDOKI<>1;
   {? _ok & FAKS.STS<>null
   || _ok:={? FAKS.SZ='S'
           || _ok:=exec('spr_upr2','users','STS',FAKS.STS,'Brak uprawnień do stanowiska sprzedaży %1.'@ [FAKS.STS().KOD])
           || _ok:=exec('spr_upr2','users','STZ',FAKS.STS,'Brak uprawnień do stanowiska zakupu %1.'@ [FAKS.STS().KOD])
           ?}
   ?};
   {? _ok=1
   ||
      {? FAKS.WHERE='M' & FAKS.MAG<>null
      || _ok:=exec('czy_z_ok','okresy',{? FAKS.SZ='S' || 2 || 3 ?},,FAKS.AR,FAKS.AM,FAKS.MAG)
      || _ok:=exec('czy_z_ok','okresy',{? FAKS.SZ='S' || -2 || -3 ?},,FAKS.AR,FAKS.AM)
      ?}
   ?};
   {? _ok=1 & FAKS.FPACZKA
   ||
      {? FAKS.FPACZKA().STAT_GEN<>exec('stat_gen_done','umowy_faktury')
      ||
         _komroot(_komid,_c); __kom.add('Należy usunąć wygenerowane dokumenty paczki faktur %1 i ponownie je wygenerować.'@[
            exec('record','#to_string',FAKS.FPACZKA)],7);
         _ok:=0
      ?}
   ?};
   {? _ok=1
   || _checkpla:=exec('check_plat','faktury_plat',FAKS.ref);
      {? (_checkpla=0 | _checkpla=1)
            &
         (
            {? FAKS.WAL<>FAKS.NWAL || FAKS.NETW>0 || FAKS.NETTO>0 ?}
               |
            FAKS.T().KOR='N'
               |
            FAKS.SZ='S' & FAKS.T().KOR='T' & exec('get','#params',100301,2)='T'
         )
      || _komroot(_komid,_c); __kom.add('Należy podać sposób płatności.'@,7);
         _ok:=0
      |? _checkpla=2 & exec('term_pr','faktury_plat')
      || _komroot(_komid,_c); __kom.add('Należy podać prawidłowy termin płatności.'@+' '+
            'Termin płatności nie może być wcześniejszy od daty wystawienia.'@,7);
         _ok:=0
      ?}
   ?};
   {? _ok=1 & FAKS.KH<>null()
   || _wyn0:=exec('f_kh_gv_sprawdz','faktury_nag1','FAKS',1,0);
      {? ~_wyn0.WYNIK
      || _komroot(_komid,_c); __kom.add(gsub(_wyn0.MSG,'\n',' '),7);
         _ok:=0
      ?};
      &_wyn0
   ?};
   _act_uid:=exec('faks_dolacz_act_uid','faktury_nag',FAKS.WHERE,FAKS.T().KOR,FAKS.T().HIS,FAKS.OPAK,FAKS.SYMF);
   _sz:=FAKS.SZ;
   {? _ok=1 & _sz='S' & _act_uid='LSP_FAK_DRFP'
   || _ok:=(exec('chk_dw','faktury_nag',2,_komroot,_komid,_c)='')
   ?};

   {? _ok=1
   ||
      {? FAKS.get() & (_r_lock:=exec('r_lock_one','#table',FAKS,FAKS.ref()))
      ||
         {? FAKS.AKC='N'
         ||
            {? FAKS.SZ='S' || _ok:=~exec('kh_blok','faktury_nag','faks_akc') ?};

::          kontrola aktywnych indeksow dla korekty ze zwrotem magazynowym
            {? FAKS.SZ='S' & FAKS.T().KOR='T' || _ok:=exec('spr_makt','faktury_poz',FAKS.ref(),1) ?};

::          kontrola pozycji
            {? _ok=1
            ||
               _txt:=exec('spr_poz','faktury_poz',FAKS.ref(),1);
               {? _txt<>''
               || _komroot(_komid,_c);
                  {!
                  |? _nn:=_txt*'\n';
                     {? _nn>0
                     || _txt1:=(_nn-1)+_txt;
                        _txt:=_nn-_txt
                     || _txt1:=_txt;
                        _txt:=''
                     ?};
                     __kom.add(_txt1,7);
                     _txt<>''
                  !};
                  _ok:=0
               ?}
            ?};

            _txt_ask:='\n\nCzy kontynuować akceptację dokumentu?'@;

            {? _ok=1 & {? _a=0 || 1 || _czyakc:=FUN.ask('Zakończyć rejestrację dokumentu %1?'@ [FAKS.SYM]) ?}
            ||
::             sprawdzenie przypisania kontrahenta
               {? FAKS.KH=null
               ||
                  _komroot(_komid,_c); __kom.add('Nie wybrano kontrahenta na dokumencie.'@,7);
                  _ok:=0
               ?};
::             sprawdzenie wypelnienia nipu UE
               {? _ok & (FAKS.T().UE='T' | FAKS.TYPYDOK().UE='T') & (FAKS.SZ='S' | FAKS.SZ='Z' & FAKS.IST_TYP<>'')
                  & exec('nip_ue_required','intrastat')
               ||
                  {? form(FAKS.NIP_UE)=''
                  ||
                     _komroot(_komid,_c); __kom.add('Brak NIP UE kontrahenta na dokumencie.'@,7);
                     _ok:=0
                  ?}
               ?};
::             biała lista podatników
               {? _ok & FAKS.KZ=''
               ||
                  _blp:=exec('blp','faktury_nag',_group);
                  _ok:=_blp.WYN;
                  _txt:=_blp.TXT;
                  {? _txt<>'' || _komroot(_komid,_c); __kom.add(_txt,7) ?}
               ?};
               {? _ok=1
               ||
                  _zwrot:=-1;
::                sprawdzanie limitow, rabatow
                  {?
                     {? FAKS.SZ='S' & FAKS.KZ=''
                     ||
                        _klim:=null;
                        _dok_mag:='N';
                        KH_DOD.KLIM:=__War_f('KH_DOD','KLIM',FAKS.KH);
                        {? KH_DOD.KLIM<>null
                        ||
                           _klim:=KH_DOD.KLIM;
                           _dok_mag:=KH_DOD.KLIM().DOK_SUM
                        ||
                           _klim:=FAKS.KH().GRKH().KLIM;
                           _dok_mag:=FAKS.KH().GRKH().KLIM().DOK_SUM
                        ?};
                        _cur_brutto:={? FAKS.WHERE='M' & _dok_mag='T' || 0 || FAKS.BRUTTO ?};
                        _ok:=exec('lim_kred','limit_kredyt',FAKS.KH,date(),INFO.NAROD,6,_klim,_cur_brutto,,'faktu');
                        _ok
                     ||
                        1
                     ?}
                  ||
                     {? _ok & {? FAKS.WAL<>FAKS.NWAL || FAKS.NETW>0 || FAKS.NETTO>0 ?}
                        & exec('pla_sum','faktury_plat',FAKS.ref,1)<>exec('brutto','faktury_plat',FAKS.ref())
                     ||
                        _komroot(_komid,_c); __kom.add('Błędnie wprowadzone płatności dokumentu.'@,7);
                        _ok:=0
                     ?};
::                   sprawdzenie kwoty zaliczki
                     {? FAKS.KW_ZAL>0
                        & FAKS.WHERE<>'L' & FAKS.T().KOR='N'
                        & FAKS.KW_ZAL>{? FAKS.WAL<>FAKS.NWAL || FAKS.BRTW || FAKS.BRUTTO ?}
                     ||
                        _komroot(_komid,_c); __kom.add('Kwota zaliczki przekracza wartość faktury.'@,7);
                        _ok:=0
                     ?};
::                   intrastat
                     {? _ok=1
                     || _ok:=exec('chk_f','faktury_nag',0,'N')='';
                        {? _ok || _ok:=exec('chk_fakp_akc','faktury_poz') ?}
                     ?};
::                   sprawdza wartość dokumentu z powiązanym dokumentem w obiegu
                     {? _ok=1 & FAKS.EDOKUM<>''
                     || _ok:=exec('ctrl_warEDOKUM','faktury_nag',_komid,_c)
                     ?};
::                   sprawdza wartość dokumentu z powiązanym zleceniem fakturowania
                     {? _ok=1 & FAKS.T().KOR='T'
                      & (_fakz:=exec('FindInSet','#table','FAKZ2FAP','FAKS',FAKS.ref(),,"FAKZ2FAP.FAKZ+16",,,''))<>''
                     || exec('ctrl_warFAKZ','faktury_nag',_komid,_c,_fakz)
                     ?};
:: sprawdzenie pozycji wypelnienie cen sprzedazy
                     {? _ok=1
                     ||
                        FAP.index('FAP');
                        FAP.prefix(FAKS.ref());
                        {? FAP.first()
                        ||
                           _sumfak:=0;
                           {!
                           |?
                              {? FAKS.T().KOR='N'
                              ||
:: indeks
                                 {? FAKS.WHERE<>'L' & FAP.M=null()
                                    | FAP.NX=''
                                 || _komroot(_komid,_c); __kom.add('Nie wypełniono indeksu w pozycji nr %1'@[$FAP.POZ],4);
                                    _ok:=0
:: ilość
                                 |? FAKS.WHERE='G' & FAP.M().RODZ<>'U'
                                   & (FAKS.SYMF='' | exec('FindAndGet','#table',FAKS,FAKS.SYMF,,"T().PAR",'N')<>'T')
                                   & exec('FindInSet','#table','REZ','FAPR',$FAP.ref(),$FAP.ref())=null()
                                 || _komroot(_komid,_c);
                                    __kom.add('Nie wypełniono ilości z wskazaniem magazynu w pozycji nr %1'@[$FAP.POZ],4);
                                    _ok:=0
:: cena i rabat
                                 |? FAKS.SZ='S' | FAKS.EDOKUM<>''
                                 || {? FAP.CPR=0
                                    || _txt1:='Należy uzupełnić ceny sprzedaży dla wszystkich pozycji dokumentu.'@;
                                       _komroot(_komid,_c); __kom.add(_txt1,7);
                                       _ok:=0
                                    |? FAP.CN=0
                                    ||
                                       _txt1:='Należy zmienić rabat aby wartość wszystkich pozycji dokumentu była większa od zera.'@;
                                       _komroot(_komid,_c); __kom.add(_txt1,7);
                                       _ok:=0
                                    ?};
                                    MDOST.cntx_psh;
                                    MDOST.index('M');
                                    MDOST.prefix('S',FAP.M,null,FAKS.WAL);
                                    {? MDOST.first & MDOST.CMIN>0 & FAP.CN>0 & FAP.CN<MDOST.CMIN
                                    || _txt:='Pozycja %1, cena sprzedaży poniżej ceny minimalnej.'@ [$FAP.POZ];
                                       _komroot(_komid,_c); __kom.add(_txt,4)
                                    ?};
                                    MDOST.cntx_pop
                                 ?};
:: stawka vat
                                 {? _ok & FAP.SV=null()
                                 || _txt:='Pozycja %1, nie podano stawki vat.'@ [$FAP.POZ];
                                    _komroot(_komid,_c); __kom.add(_txt,4);
                                    _ok:=0
                                 ?}
                              ?};
                              {? _ok & FAKS.DSP_WPOZ='N' & FAP.D<>date(0,0,0)
                              ||
                                 {? _group
                                 ||
                                    _txt:='W pozycji %1, podano datę sprzedaży. Dokument musi mieć różne daty sprzedaży w pozycjach.'@ [$FAP.POZ];
                                    _komroot(_komid,_c); __kom.add(_txt,4);
                                    _ok:=0
                                 ||
                                    {? _del_dsp=1
                                     | FUN.ask(
                                          'Dokument ma taką samą datę sprzedaży we wszystkich pozycjach.'
                                          '\nNależy ją usunąć przed zakończeniem redakcji.'
                                          '\nCzy usunąć datę sprzedaży w pozycjach dokumentu?')
                                    ||
                                       _del_dsp:=1;
                                       _po_cenaw:=FAP.KRS<>FAKS.KRS;
                                       FAP.D:=date(0,0,0);
                                       FAP.SWAL:=2;
                                       FAP.RTK:=0;
                                       FAP.NTK:='';
                                       FAP.DTK:=date(0,0,0);
                                       FAP.BTK:='';
                                       FAP.KRS:=FAKS.KRS;
                                       {? _po_cenaw || _sumfak:=1; params_exec('po_cenaw','ceny',,0) ?};
                                       FAP.put()
                                    ||
                                       _ok:=0
                                    ?}
                                 ?}
                              ?};
                              FAP.next()
                           !};
                           {? _sumfak || exec('sumfak','faktury_wspolne') ?};
                           FAP.first()
                        ?}
                     ?}
                  ?}
               ?}
            ||
               _ok:=0
            ?};
:: kontrola terminu płatności
            {? _ok || _ok:=exec('check_tz','faktury_nag',~_group,_komid,_c,_txt_ask,_komroot) ?};
:: Rachunek VAT
            {? _ok=1 & exec('wymagany_vskidrbk','faktury_nag') & FAKS.VSKIDRBK=null()
            ||
               _komroot(_komid,_c); __kom.add('Należy podać "Rachunek VAT".',7);
               _ok:=0
            ?};
:: porównanie sposobu płatności faktury i zamówienia
            {? _ok
            ||
               {? exec('platSameZkn','faktury_plat',FAKS.ref())=0
               ||
                  _komroot(_komid,_c);
                  __kom.add('Sposób płatności inny niż na zamówieniu w co najmniej jednym z parametrów:'
                     '\nforma płatności, terminu płatności, wartość brutto.'@,19)
               ?}
            ?};

:: komunikat o braku podstawy zwolnienia od podatku jeśli jest w dokumencie stawka vat Zwol.
            {? exec('FindInSet','#table','FAKSV','FF_SV','Zwol.','',"1",1,$FAKS.ref(),0)
            ||
               exec('polafaks_get','jpk_log',FAKS.ref(),FAKS);

               {? FAKSPOLA.ZW<>'T'
               ||
                  _komroot(_komid,_c);
                  __kom.add('Nie podano podstawy prawnej zastosowania stawki zwolnionej w podatku VAT.'@,19)
               ?}
            ?};
:: usuniecie zerowych dolaczonych pozycji
            {? _ok & FAKS.T().KOR='T' || exec('del_zero','faktury_poz',FAKS.ref()) ?};
:: systemowe podmioty dodatkowe
            {? _ok
            ||
:: grupa VAT licencjobiorcy - podmiot dodatkowy
              exec('fakskh_auto','faktury_wspolne',,'G');
:: faktor - podmiot dodatkowy
              {? FAKS.SZ='S'
              || exec('fakskh_auto','faktury_wspolne',,'F')
              ?};
:: licencjobiorca jako członek grupy VAT albo jednostka samorządu terytorialnego - podmiot dodatkowy
               exec('fakskh_auto_dane_lic','faktury_wspolne');
:: odbiorca / wystawca jako członek grupy VAT albo jednostka samorządu terytorialnego - podmiot dodatkowy
               exec('fakskh_auto_dane_khodb','faktury_wspolne')
            ?};
:: przed akceptacja korekty zaliczki
            {? _ok=1 & FAKS.WHERE='L' & FAKS.T().KOR='T'
            ||
               {? exec('get','#params',{? BEER.SZ='S' || 300306 || 300308 ?},2)='N'
               ||
::                aktualizacja rozpiski stawek VAT w korekcie przed akceptacja
                  exec('sumfak','faktury_wspolne')
               ?};
               _pozost:=FAKS.KW_ZAL*(-1);
               _rk:=FAKS.FKSQL;
               _nk:=form(8+FAKS.FKSQL);
               FAKS.cntx_psh();
               FAKS.use(_nk);
               FAKS.clear();
               {? FAKS.seek(_rk,_nk)
               ||
                  FAPOW.index('FAKS_K');
                  FAPOW.prefix($FAKS.ref(),'N');
                  {? FAPOW.first()
                  || _pozost:=exec('zal_sum','faktury_zalicz')
                  ?}
               ?};
               FAKS.cntx_pop();
               {? _pozost<(FAKS.KW_ZAL*(-1)) | _pozost=0
               ||
                  _txt:='Maksymalna pozostała kwota do skorygowania: %1 %2.'@ [form(_pozost,,2), FAKS.WAL().KOD];
                  {? _pozost=0
                  ||
                     _ok:=0
                  ||
                     FAKS.KW_ZAL:=-_pozost;
                     {? FAKS.put()
                     ||
                        FAPOW.index('FAKS');
                        FAPOW.prefix($FAKS.ref());
                        {? FAPOW.first()
                        ||
                           FAPOW.KW:=-_pozost;
                           FAPOW.put()
                        ?}
                     ?}
                  ?};
                  _komroot(_komid,_c); __kom.add(_txt,7)
               ?};
               {? _ok || exec('plat_przel','faktury_plat',FAKS.ref()) ?}
            ?};
:: r_lock dla FAPOW
            {? _ok=1 || _ok:=exec('z_lock','faktury_zalicz',FAKS.KH,FAKS.WAL().KOD) ?};
:: rozliczenie zaliczek
            {? _ok=1 & FAKS.KW_ZAL=0
                  &
               FAKS.EDOKUM='' & FAKS.KZ=''
                  &
               (
                  FAKS.WHERE<>'L' & FAKS.T().ZAL_ROZ='T' & exec('rozl_na_par','faktury_zalicz',FAKS.SYMF)=0
                  | FAKS.WHERE<>'L' & FAKS.KOR<>'' & exec('kor2fak100','faktury_zalicz')
               )
            ||
::             usuniecie rozliczenia zaliczek, jeśli pozostały po nieudanym zakończeniu rejestracji dokumentu
               exec('fzal_del','faktury_zalicz');
               exec('faksv_rm','faktury_vat',$FAKS.ref());
               exec('faksv_mk','faktury_vat',$FAKS.ref());
::             ponowne rozliczenie zaliczek
               FAPOW.index('END_K');
               FAPOW.prefix($FAKS.ref(),'N');
               {? ~FAPOW.first()
               || exec('zal_sel','faktury_zalicz','',_group,_c,_komroot,_komid);
                  _chk_rozl_zal:=exec('chk_rozl_zal','faktury_zalicz');
                  {? _chk_rozl_zal.RESULT=0 || __kom.add(_chk_rozl_zal.INFO,7); _ok:=0 ?}
               ?}
            ?};
:: wymagany split payment
            {? _ok=1 & FAKS.KZ='' & exec('sp_active','faktury_wspolne',FAKS.DW)
            ||
::             wtyczka wdrożeniowa - Formuła na podzieloną płatność
               _sp:=Plugin.run('FAKS_SP_001',1,_group,_c,_komroot,_komid);
               {? _sp=-1
               ||
::                działanie domyślne
                  _ok:=exec('sp_chk','faktury_wspolne',0,_group,_c,_komroot,_komid)

               |? _sp=0
               ||
::                wtyczka wdrożeniowa blokuje zakończenie rejestracji dokumentu
                  _ok:=0
               ?}
            ?};
:: wtycznka wdrożeniowa - dodanie danych dodatkowych, które są umieszczane w wychodzącym dokumencie Businesslink
            {? FAKS.EDOKUMEN='T' || Plugin.run('BL_DOKUMXML_SET_DSP',FAKS.ref()) ?};

:: znacznik akceptacji
            {? _ok || exec('fak_akc_put','faktury_nag',_group,_c,_komroot,_komid) ?};

            exec('z_unlock','faktury_zalicz',FAKS.KH,FAKS.WAL().KOD)
         ||
            _komroot(_komid,_c); __kom.add('Rejestracja dokumentu jest już zakończona.'@,7);
            _ok:=0
         ?};
         exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock)
      ||
         {? _group
         ||
            _komroot(_komid,_c);
            exec('who_rlock_faks','faktury_nag',1)
         ||
            exec('who_rlock_faks','faktury_nag');
            _czyakc:=0
         ?};
         _ok:=0
      ?}
   ?};

{? _czyakc
|| {? _ok=0
   || {? ~_nieakc
      || _komroot(_komid,_c);
         {? ~_c
         || __kom.add('Akceptacja niemożliwa. Wystaw ponownie korektę po usunięciu zgłoszonych uwag i błędów.'@,2);
            __kom_on:=1
         || __kom.TAB.cntx_psh();
            __kom.TAB.prefix();
            {? __kom.TAB.first() & __kom.TAB.next()
            || __kom.add('Zakończenie niemożliwe.'@,2)
            || __kom_on:=0
            ?};
            __kom.TAB.cntx_pop()
         ?}
      ?}
   || {? FAKS.T().NRT=1 & _nr=0
      || _komroot(_komid,_c); __kom.add('Numer tymczasowy dokumentu został zmieniony na %1.'@ [FAKS.SYM],7)
      ?};
      {? FAKS.SZ='Z' & FAKS.T().KOR='N' & ~exec('zak2dk_c','mat_atr')
      || _komroot(_komid,_c);
         __kom.add('Istnieją pozycje faktury bez przypisanych cech atrybutów dostaw.'@,7);
         __kom.add('Nie będzie możliwe wygenerowanie dokumentu magazynowego dla magazynu typu DOSTAWY lub DOSTEWI.'@,7)
      ?};
      {? _group & ~(var_pres('__kom')<100) || _komroot(_komid,_c); __kom.add('Zakończono rejestrację dokumentu.'@,1) ?}
   ?}
?};

{? ~_group
|| {? ~_c || __kom.sect_end() ?};
   {? _d || {? _czyakc || exec('end_kom','#message') || VAR_DEL.delete('__kom') ?} ?}
?};

echo();
''


\fak_akc_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: zmienia znacznik zaakceptowania faktury i wywoluje reszte funkcji
::       (zaliczki, autoksiegowanie, tabela rozliczen)
::   WE: _a - grupowa akceptacja
::       _b - 0-korekta zbiorcza; 1-korekty pojedyncza
::       _c - komunikaty - funkcja pomocnicza
::       _d - komunikaty - identyfikator
::  OLD: \faks_akc/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
_group:=_a;
_nieKorZb:=_b;
_komroot:=_c;
_komid:=_d;

{? FAKS.STAT_REJ<>'A' & FAKS.AKC<>'T'
||
:: generacja pozycji opakowan
   {? FAKS.T().KOR='N' & (FAKS.WHERE='P' | (FAKS.WHERE='G' & (FAKS.MAG=null | FAKS.MAG().MG_OPAK<>'')))
   || exec('opak_wer','opakow',FAKS.ref(),,_group,_nieKorZb,_komroot,_komid)
   ?};

   {? FAKS.KZ='' | exec('FindAndGet','#table',FAKS,FAKS.KZ,,"WHERE='N'",0) || FAKS.AKC:='T' ?};
   {? FAKS.IST_TYP<>''
   ||
      FAKS.INTRAKC:={? FAKS.KZ='' || exec('get','#params',100202,2) || 'T' ?}
   ?};
   FAKS.STAT_REJ:='Z';
   FAKS.DA:=date();
   FAKS.CA:=time();
   exec('zest','faktury_nag');

:: aktualizacja numeracji po wyznaczeniu ostatecznego numeru
   VAR_DEL.delete('__nr0','__Real');
   __nr0:=FAKS.NR=0;
   {? __nr0
   ||
      __Real:={? FAKS.SZ='S' || ZK_RN || ZD_RN ?};
      _mw:=BEER.MW;
      _typdok:=POM.TYPDOK;
      _tab:=POM.TAB;
      BEER.MW:={? FAKS.SZ='S' || 'F' || 'K' ?};
      POM.TYPDOK:=FAKS.T().KOD;
      POM.TAB:='FAKS';
      POM.NRT:=0;

      FAKS.NR:=exec('numer_new','numery',{? do_state=0 || 'N' || 'PACZKA' ?})
   ?};
   _nip0:='';
   {? FAKS.T().PAR='T' & FAKS.NIP<>'' & FAKS.KH().NIP=''
   || _nip0:=FAKS.NIP
   ?};
   exec('duplikuj_dane_akc','faktury_wspolne');
   {? FAKS.NIP='' & _nip0<>''
   || FAKS.NIP:=_nip0
   ?};
   do();
   {? __nr0
   || exec('znak','numery','FAKS')
   ?};
   _put:=FAKS.put();
   {? __nr0
   ||
      __Real.cntx_psh; OKR.cntx_psh;
      __Real.use({? FAKS.SZ='S' || 'zkhin' || 'zdhin' ?}+ST.ODDZ+'__');
      __Real.index('FK'); __Real.prefix($FAKS.ref);
      {? __Real.first
      ||
         _lst:=obj_new(__Real.size);
         _ii:=0; {! |? _ii+=1; _lst[_ii]:=__Real.ref; __Real.next !};
         {! _ii..obj_len(_lst) |! {? __Real.seek(_lst[_ii]) || __Real.SFK:=FAKS.SYM; __Real.put ?} !};
         obj_del(_lst)
      ?};
      OKR.index('MC'); OKR.prefix(REF.FIRMA,1);
      {? OKR.first
      ||
         {!
         |?
            __Real.use({? FAKS.SZ='S' || 'zkhin' || 'zdhin' ?}+ST.ODDZ+(form(OKR.ROK,,,'99')+2));
            __Real.index('FK'); __Real.prefix($FAKS.ref);
            {? __Real.first
            ||
               _lst:=obj_new(__Real.size);
               _ii:=0; {! |? _ii+=1; _lst[_ii]:=__Real.ref; __Real.next !};
               {! _ii..obj_len(_lst) |! {? __Real.seek(_lst[_ii]) || __Real.SFK:=FAKS.SYM; __Real.put ?} !};
               obj_del(_lst)
            ?};
            OKR.next
         !}
      ?};
      __Real.cntx_pop; OKR.cntx_pop;
      BEER.MW:=_mw;
      POM.TYPDOK:=_typdok;
      POM.TAB:=_tab;
      {? FAKS.WHERE='L'
      ||
         FAPOW.cntx_psh; TYPYSP.cntx_psh;
         FAPOW.index('FAKS_K');
         FAPOW.prefix($FAKS.ref,FAKS.T().KOR);
         {? FAPOW.first
         ||
            {!
            |? FAPOW.FAKS_SYM:=FAKS.SYM;
               FAPOW.put & FAPOW.next
            !}
         ?};
         FAPOW.cntx_pop; TYPYSP.cntx_pop
      ?};
      FAKS_KZF.cntx_psh;
      FAKS_KZF.index('KOR');
      FAKS_KZF.prefix($FAKS.ref,);
      {? FAKS_KZF.first || {! |? FAKS_KZF.KOR_SYM:=FAKS.SYM; FAKS_KZF.put & FAKS_KZF.next !} ?};
      FAKS_KZF.cntx_pop
   ?};
   {? FAKS.WHERE<>'L'
   ||
      FAPOW.cntx_psh();
      FAPOW.index('END_K');
      FAPOW.prefix($FAKS.ref(),'N');
      _loop:=FAPOW.first();
      {!
      |? _loop
      |!
         {? __nr0 || FAPOW.END_SYM:=FAKS.SYM; FAPOW.put() ?};
         exec('set_fapow_akc','faktury_zalicz',FAPOW.FAKS,'N','T');
         exec('set_fapow_akc','faktury_zalicz',FAPOW.FAKS,'T','T');
         _loop:=FAPOW.next()
      !};
      FAPOW.cntx_pop()
   ?};
   end();
   VAR_DEL.delete('__nr0','__Real');

   {? _put
   ||
::    Dokument Businesslink
      DOKUM.index('DOKUM');
      DOKUM.prefix(REF.FIRMA,$FAKS.ref());
      _loop:=DOKUM.first();
      {!
      |? _loop
      |!
         {? DOKUM.BL='T' & DOKUM.DG_UID='' || exec('bl_act','zbl_dok','DZK',DOKUM.ref()) ?};
         _loop:=DOKUM.next()
      !};

::    opakowania
      {? (FAKS.WHERE='P' | (FAKS.WHERE='G' & (FAKS.MAG=null | FAKS.MAG().MG_OPAK<>'')))
      || exec('faks_akc','opakow',1)
      ?};

::    faktura zaliczkowa
      {? FAKS.WHERE='L' || exec('fp_akc','faktury_zalicz','T') ?};

::    korekty historyczne
      {? FAKS.T().KOR='T' & FAKS.T().HIS='T' || exec('hist_akc','faktury_nag',1,'Z') ?}

::    aktualizacja wartosci do kontrolingu
:: DRO_TODO_AWI_OK______: exec('add_wart_do_kon','schematy');
::      exec('add_wart_do_kon','schematy')
   ?}
?};
echo()


\legzfaks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: ustawienie kolorow rekordow
::  OLD: \legzfaks/firma.fml
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','FAKS#01','@F_INFO#01')


\faks_zmien_date_dostawy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zmiana daty dostawy na dokumencie sprzedaży z zakończoną redakcją
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.SZ<>'S' | FAKS.WHERE='L'
|| FUN.info('Zmiana daty dostawy dostępna tylko dla dokumentów sprzedaży niezaliczkowych.'@)
|? FAKS.STAT_REJ='N'
|| FUN.info('Nie zakończono rejestracji dokumentu.\nZmiana daty dostawy dostępna po wybraniu opcji Popraw.'@)
|? FAKS.ZAK='T'
|| FUN.info('Dokument zaksięgowany.\nZmiana daty dostawy niemożliwa.'@)
|? FAKS.STAT_REJ='A'
|| FUN.info('Dokument został anulowany.\nZmiana daty dostawy niemożliwa.'@)
|? exec('prn2mail','faktury_nag')
|| FUN.info('Dokument został wysłany e-mailem.\nZmiana daty dostawy niemożliwa.'@)
|? exec('czy_autoadd','dokum',FAKS.ref())
|| FUN.info('Utworzono PDF dla dokumentu.\nZmiana daty dostawy będzie możliwa po jego usunięciu.'@)
|| FAKS.cntx_psh();
   _valid:="
      {? FAKS.DO<>date(0,0,0) & FAKS.DO<FAKS.D
      || FUN.info('Data dostawy nie może być wcześniejsza od daty sprzedaży.'@);
         'DO'
      |? FAKS.CZY_DRUK<>'T'
      || FAKS.DO_NA_DR:=FAKS.DO; ''
      |? FAKS.CZY_DRUK='T' & FAKS.DO<>FAKS.DO_NA_DR
      || _txt1:={? FAKS.KOR='' || 'faktury' || 'korekty' ?};
         _choice:=FUN.choice('Zmienić datę dostawy na wydruku na: %1?'@ [form(FAKS.DO)],,'Tak'@,'Nie'@);
         {? _choice=0 || 'DO'
         |? _choice=1 || FAKS.DO_NA_DR:=FAKS.DO; ''
         |? _choice=2 || ''
         ?}
      || ''
      ?}
   ";
   params_set('ZMIEN_DD',1);
   FAKS.win_edit('DATADOST');
   {? FAKS.edit(_valid)
   || FAKS.put()
   ?};
   FAKS.cntx_pop()
?}


\faks_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dokument sprzedaży - Dołącz
::   WE: _a - UID czynności
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_z_ok','okresy',{? BEER.SZ='S' || -2 || -3 ?})

||
   _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:=_a;
   _params.AKCJA:='Dołącz';
   _params.PROC_START:='T';

   {? _a='LSP_FAK_DFPR' & FAKS.T().PAR='T' & FAKS.T().KOR='N' & FAKS.KORYG='N' & FAKS.STAT_REJ='T' & FAKS.SYMF=''
   || _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
      exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FAKS',FAKS.ref())
   ?};

   exec('mp_run','#b__box',_params)
?};
{? FAKS.f_active()>0 || FAKS.f_rfresh() ?};
::{? BEER.SZ='S'
::|| exec('lsp_fak_filtr','lsp')
::|| exec('lzk_zak_filtr','lzk')
::?};
~~


\faks_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dokument sprzedaży - Popraw
::----------------------------------------------------------------------------------------------------------------------
_star:=ST.AR;
_stam:=ST.AM;
ST.AR:=FAKS.AR;
ST.AM:=FAKS.AM;
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:=exec('faks_dolacz_act_uid','faktury_nag',FAKS.WHERE,FAKS.T().KOR,FAKS.T().HIS,FAKS.OPAK,FAKS.SYMF);
_params.UIDREF:=FAKS.uidref();
_params.AKCJA:='Popraw';

exec('mp_run','#b__box',_params);
ST.AR:=_star;
ST.AM:=_stam;
~~


\faks_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dokument sprzedaży - Usuń
::----------------------------------------------------------------------------------------------------------------------
params_exec('faks_usun','faktury_nag1')


\faks_pozycje_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument sprzedaży - Pozycje - okno wertowania
::   WE: [_a] - 1 - wyłączenie wszystkich pozycji menu, 0 - nie (domyślnie),
::              2 - wyłączenie wszystkich pozycji menu + tylko podgląd dokumentu
::       [_b] - FAP.uidref(), na którym ma stanąć selektor
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>1 || _a:=0 ?}  || _a:=0  ?};
{? var_pres('_b')=type_of('') || _uidref:=_b || _uidref:='' ?};
BPMN.END:=0;
{? _a=2
|| BPMN.DISPLAY:=1
?};
params_exec('pozycje_fak','faktury_poz',_a,exec('acts_schem_faks','faktury_poz'),_uidref);
''


\faks_pozycje_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dokument sprzedaży - Pozycje - okno redagowania
::   WE: params_get()   - ustawiane w exec('fak_pop','faktury_nag')
::                      - ustawiane w exec('wystinne','faktury_nag')
::                      - ustawiane w exec('koryguj','faktury_nag')
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_btnRuleResult:='';

FAP2DK.cntx_psh();
FAP2DK.use('fapto%1%2'[{? FAKS.SZ='S' || 'sp' || 'dk' ?},FAKS.ODDZ]);
_fld:=params_exec('faks_edit_finisher','faktury_nag',FAKS.ref());
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| BPMN.END:=1;
   _res:=exec('pozycje_fak','faktury_poz',,exec('acts_schem_faks','faktury_poz'));
   {? var_pres('_res')=type_of('') || _btnRuleResult:=_res ?};
   {? BPMN.END=2 || _btnRuleResult:=params_exec('faks_zakoncz_red','faktury_nag') ?};
   exec('set_efld_opt','faktury_nag')
?};
FAP2DK.cntx_pop();

_btnRuleResult


\faks_zakoncz_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dokument sprzedaży - Zakocz - okno wertowania
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
params_exec('faks_zakoncz_wer','faktury_nag1')


\faks_zakoncz_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dokument sprzedaży - Zakończ - okno redagowania
::   WE: params_get()   - ustawiane w exec('fak_pop','faktury_nag')
::                      - ustawiane w exec('wystinne','faktury_nag')
::                      - ustawiane w exec('koryguj','faktury_nag')
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().context.mp;
_autoakc:={? FAKS.SZ='S'
          || exec('autoAkc','#b__box',_mp,300080,'LSP_FAK_EASP')
          || exec('autoAkc','#b__box',_mp,200080,'LZK_ZAK_EZAK')
          ?};

_btnRuleResult:='';

_fld:=params_exec('faks_edit_finisher','faktury_nag',FAKS.ref());
{? var_pres('_fld')=type_of(0)
|| _btnRuleResult:=''
|? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| {? exec('faks_zakoncz','faktury_nag',,_autoakc)
   || _btnRuleResult:='key:F2';
      _mp.done()
   ?}
?};

_btnRuleResult


\faks_dolacz_act_uid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca UID czynności odpowiadający _a
::   WE: _a - FAKS.WHERE lub HELP.WHERE
::       _b - TYPYSP.KOR
::       _c - TYPYSP.HIS
::       _d - FAKS.OPAK
::       _e - FAKS.SYMF
::   WY: UID czynności
::----------------------------------------------------------------------------------------------------------------------
{? BEER.SZ='S'
||
   {? _a='A' | _a='J' || _a:='P' ?};
   _dopar:=_e<>'' & exec('FindAndGet','#table',FAKS,_e,,"T().PAR",'N')='T';
   {? _a='P' & _b='N' & _d<>'T'
             & ~_dopar           || 'LSP_FAK_DRFP'
   |? _dopar & _b='N'            || 'LSP_FAK_DFPR'
   |? _a='M' & _b='N'            || 'LSP_FAK_DZDM'
   |? _a='L' & _b='N'            || 'LSP_FAK_DRZA'
   |? _a='G' & _b='N' & _d<>'T'  || 'LSP_FAK_DGDM'
   |? (_a='G' | _a='P')
             & _b='N' & _d='T'   || 'LSP_FAK_DFOP'
   |?          _b='T' & _c='N'   || 'LSP_FAK_DKOR'
   |?          _b='T' & _c='T'   || 'LSP_FAK_DKHI'
   |? _a='K'                     || 'LSP_FAK_DKZB'
                                 || '???'
   ?}
|? BEER.SZ='Z'
|| _pow:=FAKS.GEN;
   {? _a='Z' & _b='N' & _pow     || 'LZK_ZAK_DZPZ'
   |? _a='Z' & _b='N'            || 'LZK_ZAK_DZAK'
   |? _a='E' & _b='N' & _pow     || 'LZK_ZAK_DWPZ'
   |? _a='E' & _b='N'            || 'LZK_ZAK_DWEW'
   |? _a='L' & _b='N'            || 'LZK_ZAK_DZAL'
   |?          _b='T'            || 'LZK_ZAK_DKOR'
   |? _a='K'                     || 'LZK_ZAK_DKZB'
                                 || '???'
   ?}
|| '???'
?}


\faks_wycofaj_wywo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: akcja "wycofaj akceptację dokumentu sprzedaży"
::       wywołanie wycofania jako czynności LSP_FAK_EWSP zamiast bezpośrednio jako zamiast "faks_wycofaj"
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LSP_FAK_EWSP';
_params.UIDREF:=FAKS.uidref();
_params.AKCJA:='Wycofaj';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FAKS',FAKS.ref());

exec('mp_run','#b__box',_params)


\faks_wycofaj_gr_b_wywo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: wywołanie przed grupową akcją wycofaj akceptacje dokumentu sprzedaży / zakupu
::       potrzebne przy testowego wprowadzeniu wycofania jako czynności
::----------------------------------------------------------------------------------------------------------------------
exec('wycbdok','faktury_wycof')


\faks_wycofaj_gr_a_wywo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: wywołanie po grupowej akcji wycofaj akceptacje dokumentu sprzedaży / zakupu
::       potrzebne przy wprowadzeniu wycofania jako czynności
::----------------------------------------------------------------------------------------------------------------------
exec('wycadok','faktury_wycof')


\faks_zak_wycofaj_wywo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: akcja "wycofaj akceptację dokumentu zakupu"
::       wywołanie wycofania jako czynności LZK_ZAK_EWZK zamiast bezpośrednio jako zamiast "faks_wycofaj"
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZAK_EWZK';
_params.UIDREF:=FAKS.uidref();
_params.AKCJA:='Wycofaj';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FAKS',FAKS.ref());

exec('mp_run','#b__box',_params)


\faks_wycofaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dokument sprzedaży - Wycofaj
::----------------------------------------------------------------------------------------------------------------------
params_exec('faks_wycofaj','faktury_nag1')


\fak_wyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: wycofuje akceptacje dokument sprzedazy (formula wywolywana dla
::       biezacego naglowka dokumentu sprzedazy)
::       [_a] - grupowa akceptacja
::       [_b] - 0-korekta zbiorcza; 1-korekty pojedyncza
::       [_c] - 0-bez pytania; 1-pytać czy wycofać
:: UPDATE:  2013-07  - ER/WRT/XP/12.30/1307/0043
::  OLD: \fak_wyc/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=FAKS.sel_mark() ?};
{? var_pres('_b')<>type_of(1) || _b:=1 ?};
{? var_pres('_c')<>type_of(1) || _c:=1 ?};

{? FAKS.WHERE='K' | FAKS.WHERE='N' || exec('faks_kzn_wyc','faktury_nag1',_c); return ?};

_stat_rej:=FAKS.STAT_REJ;

:: sprawdza czy uzytkownik ma uprawnienia do stanowiska sprzedazy z faktury
_ok:=1;
_komid:={? _b || 'Faktura ' || form(FAKS.NR,,,'99')+' - ' ?}+FAKS.SYM;
_czywyc:=1;

:: dla akcji grupowej
{? _a
|| __kom.sect_clr();
   __kom.sect_beg(_komid)
|| exec('ini_kom','#message','Wycofanie akceptacji faktury'@);
   __kom_on:=1;
   __kom.sect_beg(_komid)
?};

__lp:=0;

{? FAKS.STS<>null
|| _ok:=exec('spr_upr2','users','ST'+FAKS.SZ,FAKS.STS,'Brak uprawnień do stanowiska sprzedaży %1.'@ [FAKS.STS().KOD])
?};
{? _ok=1
||
   {? FAKS.WHERE='M' & FAKS.MAG<>null
   || _ok:=exec('czy_z_ok','okresy',2,,FAKS.AR,FAKS.AM,FAKS.MAG)
   || _ok:=exec('czy_z_ok','okresy',{? FAKS.SZ='S' || -2 || -3 ?},,FAKS.AR,FAKS.AM)
   ?}
?};
{? _ok=1
||
   {? FAKS.get()
   ||
      _r_lock:=exec('r_lock_one','#table',FAKS,FAKS.ref());
      {? _r_lock
      ||
         {? _a & FAKS.T().VALREC<>null() & ~exec('validate','wzorce',FAKS.T().VALREC,FAKS,FAKS.ref())
         || _ok:=0
         |? FAKS.ZAK<>'T'
         ||
            {? FAKS.KORYG<>'T'
            ||
               _intra:=0;
               {? FAKS.INTRA='T'
               || _rok:=2-FAKS.IST_OKR-2;
                  {? +_rok=2
                  || ISTTS.cntx_psh();
                     ISTTS.use('itts__'+_rok);
                     ISTTS.index('DOK');
                     ISTTS.prefix($FAKS.ref());
                     _intra:=ISTTS.first();
                     ISTTS.cntx_pop()
                  || _intra:=1
                  ?}
               ?};
               {? FAKS.AKC<>'T'
               ||
                  _txt:='Dokument nie jest zaakceptowany.'@;
                  __kom.add(_txt,7);
                  _ok:=0
               |? FAKS.STAT_REJ='A'
               ||
                  _txt:='Dokument został anulowany.'@;
                  __kom.add(_txt,7);
                  _ok:=0
               |? FAKS.INTRA='T' & _intra
               ||
                  _txt:='Dokument uwzględniony w deklaracji Intrastat.'@;
                  __kom.add(_txt,7);
                  _ok:=0
               |? FAKS.PAR<>''
               ||
                  _txt:='Dla dokumentu wydrukowany został paragon fiskalny nr %1.'@ [FAKS.PAR];
                  __kom.add(_txt,7);
                  _ok:=0
               |? FAKS.SZ='S' & FAKS.T().PAR='T' & FAKS.SYMF<>''
               ||
                  _txt:='Do paragonu wystawiono fakturę nr %1.'@ [exec('symf','faktury_wspolne',FAKS.SYMF)];
                  __kom.add(_txt,7);
                  _ok:=0
               |? exec('doc_in_ksef','faktury_nag1')
               ||
                  _txt:='Dokument ma status KSeF: %1.'@[FAKS.STATKSEF];
                  __kom.add(_txt,7);
                  _ok:=0
               |? (FAKS.EDI_W='T' | FAKS.EDI_W='B') & FAKS.T().KSEF='N'
               ||
                  _txt:='Na podstawie dokumentu utworzono komunikat EDI.'@;
                  __kom.add(_txt,7);
                  _ok:=0
               |? FAKS.SZ='Z' & FAKS.T().KOR='T' & exec('f_mdok','faktury_wspolne',2)=3
               ||
                  _txt:='Faktura jest powiązana z dokumentami magazynowymi.'
                     ' Należy usunąć powiązane dokumenty magazynowe przed wycofaniem akceptacji.'@;
                  __kom.add(_txt,7);
                  _ok:=0
               |? ( _nrrap:=exec('czyRaport','faktury_wspolne',FAKS.ref); _nrrap<>0)
               || _ok:=0
               |? _b & (_txt:=exec('czy_kzb','faktury_nag',$FAKS.ref))<>''
               || __kom.add(_txt,7);
                  _ok:=0
               ||
                  _ok:=1;
::                   zaliczki - czy byly juz rozliczane
                  {? FAKS.WHERE='L'
                  ||
                     FAPOW.clear;
                     FAPOW.index('FAKS_K');
                     FAPOW.prefix($FAKS.ref(),FAKS.T().KOR);
                     {? FAPOW.first()
                     ||
                        {!
                        |?
                           {? FAPOW.ROZ='T'
                           ||
                              __kom.add('Zaliczka była rozliczana.'@,7);
                              _ok:=0
                           ?};
                           _ok & FAPOW.next()
                        !}
                     ?}
                  |? FAKS.T().KOR='T'
                  ||
                     {? ~exec('czy_wyc_fapow','faktury_zalicz',$FAKS.ref)
                     ||
                        __kom.add('Niewystarczający stan nierozliczonej części zaliczki.'@,7);
                        _ok:=0
                     ?}
                  ?};

::                   fakturka z generacja na kilka magazynow - nie dotyczy faktur utworzonych do paragonu
                  _del_mag:=0;
                  {? ((FAKS.T().KOR='N' & FAKS.WHERE='G' & ~exec('rodz_fap','faktury_poz'))
                     | exec('f_mdok','faktury_wspolne',2)=1) & ~(FAKS.T().PAR='N' & FAKS.SYMF<>'')
                  ||

                     _del_mag:={? FAKS.T().KOR='T' || 2 || 1 ?};
                     _ok:=_czywyc:={? ~FAKS.WGZWR & exec('f_mdok','faktury_wspolne',2)=1
                                   || FUN.ask('Faktura jest powiązana z dokumentami magazynowymi.'
                                         '\nWycofanie akceptacji faktury spowoduje usunięcie dokumentów magazynowych.'
                                         '\nCzy usunąć dokumenty magazynowe?'@)
                                   || 1
                                   ?}
                  ?};

                  {? _ok=1 & FAKS.WHERE='K' & exec('f_mdok','faktury_wspolne',2)=3
                  ||
                     FUN.info('Faktura jest powiązana z dokumentami magazynowymi.'
                        '\nNależy usunąć powiązane dokumenty magazynowe przed wycofaniem akceptacji.'@);
                     _ok:=0
                  ?};

::                   r_lock dla FAPOW
                  {? _ok=1 & FAKS.SZ='S' || _ok:=exec('z_lock','faktury_zalicz',FAKS.KH,FAKS.WAL().KOD) ?};

                  {? _ok
                     & {? _a=0 & _b & _c || _czywyc:=FUN.ask('Wycofać akceptację dokumentu %1?'@ [FAKS.SYM]) || 1 ?}
                     & {? _del_mag & ~FAKS.WGZWR || _ok:=exec('wycdokmg','magdok_wspolne',_del_mag,0)>0; _ok || 1 ?}
                  ||
                     __FAPOWT:='KORWYC';
                     __FAPOWR:=null;
                     __kom.set_root(_komid);
                     {? FAKS.T().ZAL_ROZ='S' & FAKS.T().KOR='N'
                     ||
                        {? exec('fakt_100','faktury_zalicz','T',FAKS.SZ)='' || _ok:=0 ?}
                     || FAKS.AKC:='N';
                        FAKS.INTRAKC:='N';
                        FAKS.STAT_REJ:='N';
                        FAKS.DA:=date(0,0,0);
                        FAKS.CA:=time(0,0,0);
                        exec('zest','faktury_nag');
                        FAKS.CZY_DRUK:={? FAKS.CZY_DRUK='X' || 'X' || 'N' ?};
                        FAKS.STATKSEF:='';
                        FAKS.put()
                     ?};

                     {? _ok=1
                     ||
                        {? FAKS.T().KOR='T' & FAKS.T().HIS='T' || exec('hist_akc','faktury_nag',0,'N') ?};
::                      usuniecie wartosci do kontrolingu
:: DRO_TODO_AWI_OK______: exec('aktualizacja_s','schematy',FAKS.ref(),'U');
::                        exec('aktualizacja_s','schematy',FAKS.ref(),'U');

::                      zmiana statusu w FAPOW
                        {? FAKS.WHERE='L' || exec('fp_akc','faktury_zalicz','N') ?};
::                      usuniecie rozliczenia zaliczek
                        {? FAKS.WHERE<>'L' & 'TS'*FAKS.T().ZAL_ROZ
                           | FAKS.WHERE<>'L' & FAKS.KOR<>'' & exec('kor2fak100','faktury_zalicz')
                        || exec('fzal_del','faktury_zalicz')
                        ?};
                        exec('faksv_rm','faktury_vat',$FAKS.ref());
                        exec('faksv_mk','faktury_vat',$FAKS.ref());
::                      wycofanie akceptacji powiazanego dokumentu opakowan
                        {? (FAKS.WHERE='P' | (FAKS.WHERE='G' & (FAKS.MAG=null | FAKS.MAG().MG_OPAK<>'')))
                        || exec('faks_akc','opakow',0)
                        ?}
                     ?};
                     VAR_DEL.delete('__FAPOWT','__FAPOWR');

                     {? _ok || exec('plat_przel','faktury_plat',FAKS.ref()) ?};

::                   Dokument Businesslink
                     {? _ok
                     ||
                        DOKUM.index('DOKUM');
                        DOKUM.prefix(REF.FIRMA,$FAKS.ref());
                        _loop:=DOKUM.first();
                        {!
                        |? _loop
                        |!
                           {? DOKUM.BL='T' & DOKUM.DG_UID='' || exec('bl_act','zbl_dok','DZK',DOKUM.ref()) ?};
                           _loop:=DOKUM.next()
                        !}
                     ?};

:: systemowe podmioty dodatkowe
                     {? _ok
                     || exec('fakskh_auto_del','faktury_wspolne')
                     ?};

                     {? _ok
                     || _del_autoadd:=exec('del_autoadd','dokum',FAKS.ref(),_a);
                        FAKS.get();
                        FAKS.CZY_DRUK:={? _del_autoadd=1 || 'X' || 'N' ?};
                        FAKS.INTRA:='N';
                        FAKS.put()
                     ?}
                  ?};
                  __kom.set_root(_komid);

                  {? FAKS.SZ='S' || exec('z_unlock','faktury_zalicz',FAKS.KH,FAKS.WAL().KOD) ?}

               ?}
            ||
               __kom.add('Wystawiono dokument korygujący.'@,7);
               _ok:=0
            ?}
         ||
            __kom.add('Dokument jest zaksięgowany.'@,7);
            _ok:=0
         ?};
         exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock)
      ||
         {? _a
         ||
            exec('who_rlock_faks','faktury_nag',1)
         ||
            exec('who_rlock_faks','faktury_nag');
            _czywyc:=0
         ?};
         _ok:=0
      ?}
   ||
      {? _a
      ||
         exec('who_rlock_faks','faktury_nag',1)
      ||
         exec('who_rlock_faks','faktury_nag')
      ?};
      _ok:=0
   ?}
?};

{? _czywyc
||
   {? _ok=0
   || __kom_on:=1;
      {? _stat_rej='A' || __kom.add('Wycofanie akceptacji i zakończenia niemożliwe.'@,2)
      |? _stat_rej='T' || __kom.add('Wycofanie akceptacji i zakończenia niemożliwe.'@,2)
      |? _stat_rej='Z' || __kom.add('Wycofanie zakończenia niemożliwe.'@,2)
      ?}
   || {? _stat_rej='A' || __kom.add('Dokument został anulowany.'@,38)
      |? _stat_rej='T' || __kom.add('Akceptacja i zakończenie zostały wycofane.'@,38)
      |? _stat_rej='Z' || __kom.add('Zakończenie zostało wycofane.'@,38)
      ?}
   ?}
?};

{? ~_a
|| __kom.sect_end();
   {? ~_a || {? _czywyc || exec('end_kom','#message') || VAR_DEL.delete('__kom') ?} ?}
?};

echo();
''


\czy_kzb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: sprawdza czy dokument _a powstal z korekty zbiorczej
::   WE: _a - $FAKS.ref
::   WY: komunikat korekty lub ''
::  OLD: \czy_kzb/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
FAKS_KZF.cntx_psh; FAKS.cntx_psh;
FAKS_KZF.index('FAK'); FAKS_KZF.prefix(_a,);
{? FAKS_KZF.first || _wyn:='Dokument uwzględniony w korekcie zbiorczej %1.'@ [FAKS_KZF.FAKS().SYM] ?};
{? _wyn=''
||
   FAKS_KZF.index('KOR'); FAKS_KZF.prefix(_a,);
   {? FAKS_KZF.first || _wyn:=_txt:='Dokument utworzony z korekty zbiorczej %1.'@ [FAKS_KZF.FAKS().SYM]?}
?};
FAKS_KZF.cntx_pop; FAKS.cntx_pop;
_wyn


\faks_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: dokumenty powiazane z faktura
::       formula przed dla akcji Zalaczniki okna FAKS.WER_ALL
::  OLD: \faks_dok/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
exec('sel_dok','dokum','FAKS',,FAKS.STAT_REJ='A',,1)


\korekty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: inicjuje wystawianie faktur
::   WE: [_a] - FAKS.ref - ref dokumentu korygowanego
::             (gdy podamy to nie pyta o KH i FAKS)
::       _b - typ dokumnetu sprzedazy
::  OLD: \korekty/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};
_kors:=_a;
_typysp_t:=_b;

BEER.SZ:='S';
:: sprawdzenie czy kontrola stanowiska sprzedazy
_wymaga:=exec('get','#params',2102,2,OPERATOR.USER);
{? exec('czy_z_ok','okresy',-2) & (_wymaga<>'T' | _wymaga='T' & ST.STS<>null)
|| FAKS.cntx_psh();
   KH_ODB.actions('WER','u');
   _edit:=0;
   FKOR.WHAT:='F';
   ROKMC.AR:=ST.AR;
   ROKMC.AM:=ST.AM;
   ROKMC.KH:=null;
   ROKMC.KH_ODB:=null;
   ROKMC.win_edit('KOR');
   {?
      {? _a=null
      || KH.cntx_psh();
         KH.win_dict('WER');
         KH.actions('WER','W');
         _edit:=ROKMC.edit();
         KH.cntx_pop();
         _edit
      || FAKS.clear();
         {? FAKS.seek(_a)
         || ROKMC.AR:=FAKS.AR;ROKMC.AM:=FAKS.AM;1
         || 0
         ?}
      ?}
   ||
      {? ST.AR=ROKMC.AR & ROKMC.AM>ST.AM
      ||
         FUN.info('Nie można wystawić korekty do dokumentów\nz przyszłych okresów.'@)
      ||
         {? (ROKMC.AR>0 & ST.AR<>ROKMC.AR) | FKOR.WHAT='H'
         || exec('open','open_tab',ST.ODDZ,{? FKOR.WHAT<>'H' || 2-$ROKMC.AR || 'hs' ?})
         ?};
         _koryguj:=0;
         {? _a=null
         ||
            {? FKOR.WHAT<>'H'
            ||
               _ind:='FAKS.ndx_tmp(,,\'SZ\',,,\'T\',\'KOR\',,\'STAT_REJ\',,';
               _pfx:='FAKS.prefix('''+BEER.SZ+'\',\'N\',\'T\'';

               {? ROKMC.AR<>0
               ||
                  _ind+=',\'AR\',,';
                  _pfx+=',ROKMC.AR'
               ?};
               {? ROKMC.AM<>0
               ||
                  _ind+=',\'AM\',,';
                  _pfx+=',ROKMC.AM'
               ?};
               {? ROKMC.KH<>null
               ||
                  _ind+=',\'KH\',,';
                  _pfx+=',ROKMC.KH'
               ?};
               {? ROKMC.KH_ODB<>null
               ||
                  _ind+=',\'KH_ODB\',,';
                  _pfx+=',ROKMC.KH_ODB'
               ?};
               {? _wymaga='T'
               ||
                  _ind+=',\'STS\',,';
                  _pfx+=',ST.STS'
               ?};

               _ind+=')';
              _pfx+=')'

            ||
               _ind:='FAKS.ndx_tmp(,,\'SZ\',,,\'STAT_REJ\',,';
               _pfx:='FAKS.prefix('''+BEER.SZ+'\',\'T\'';

               {? ROKMC.KH<>null
               ||
                  _ind+=',\'KH\',,';
                  _pfx+=',ROKMC.KH'
               ?};
               {? ROKMC.KH_ODB<>null
               ||
                  _ind+=',\'KH_ODB\',,';
                  _pfx+=',ROKMC.KH_ODB'
               ?};
               {? _wymaga='T'
               ||
                  _ind+=',\'STS\',,';
                  _pfx+=',ST.STS'
               ?};

               _ind+=')';
               _pfx+=')'
            ?};

            _ndx:=($_ind)();
            FAKS.index(_ndx);
            ($_pfx)();

            _FAKS:=tab_tmp(1
               ,'NR'       ,'INTEGER'     ,'Numer'@
               ,'SYM'      ,'STRING[20]'  ,'Symbol'@
               ,'DW'       ,'DATE'        ,'Data wystawienia'@
               ,'KH'       ,'STRING[150]' ,'Kontrahent'@
               ,'NETTO'    ,'REAL'        ,'Netto'@
               ,'BRUTTO'   ,'REAL'        ,'Brutto'@
               ,'NWAL'     ,'STRING[8]'   ,'Waluta'@
               ,'UIDREF'   ,'STRING[48]'  ,'FAKS.uidref()'@);
            _loop:=FAKS.first();
            {!
            |? _loop
            |!
               _FAKS.NR:=FAKS.NR;
               _FAKS.SYM:=FAKS.SYM;
               _FAKS.DW:=FAKS.DW;
               _FAKS.KH:=FAKS.KH().NAZ_P;
               _FAKS.NETTO:=FAKS.NETTO;
               _FAKS.BRUTTO:=FAKS.BRUTTO;
               _FAKS.NWAL:=FAKS.NWAL().KOD;
               _FAKS.UIDREF:=FAKS.uidref();
               _FAKS.add();
               _loop:=FAKS.next()
            !};
            _wer:=_FAKS.mk_sel('Rejestracja korekty'@,,,'faksrejkorekty',,,,,'U');
            _FAKS.win_fld(_wer,,'NR',,,5,,,'Numer'@);
            _FAKS.win_fld(_wer,,'SYM',,,20,,,'Symbol'@);
            _FAKS.win_fld(_wer,,'DW',,,10,,,'Data wystawienia'@);
            _FAKS.win_fld(_wer,,'KH',,,20,,,'Kontrahent'@);
            _FAKS.win_fld(_wer,,'NETTO',,,10,2,,'Netto'@);
            _FAKS.win_fld(_wer,,'BRUTTO',,,10,2,,'Brutto'@);
            _FAKS.win_fld(_wer,,'NWAL',,,6,,,'Waluta'@);
            _FAKS.win_act(_wer,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
            _fb:="
               FAKS.cntx_psh();
               FAKS.use(8+(cur_tab().UIDREF+16));
               FAKS.prefix();
               {? FAKS.seek(cur_tab().UIDREF) || exec('pozycje_fak','faktury_poz') ?};
               FAKS.cntx_pop()";
            _FAKS.win_act(_wer,,'Formuła','Poz&ycje'@@,,,_fb);
            _fb:="
               FAKS.cntx_psh();
               FAKS.use(8+(cur_tab().UIDREF+16));
               FAKS.prefix();
               {? FAKS.seek(cur_tab().UIDREF) || exec('fall_rek','faktury_nag') ?};
               FAKS.cntx_pop()";
            _FAKS.win_act(_wer,,'Wyświetl',,,,_fb);
            _ff:="
               FAKS.cntx_psh();
               FAKS.use(8+(cur_tab().UIDREF+16));
               FAKS.prefix();
               _result:={? FAKS.seek(cur_tab().UIDREF) || exec('faks_sym_ib','faktury_nag')() || '' ?};
               FAKS.cntx_pop();
               _result";
            _FAKS.win_fml(_wer,,'SYM',,'ICON_BEFORE',_ff);
            _FAKS.win_sel(_wer);
            _FAKS.hdr_sel();
            {? FKOR.WHAT<>'H'
            || _FAKS.hdr_sel(' '+'do faktury sprzedaży'@)
            || _FAKS.hdr_sel(' '+'do faktury historycznej'@)
            ?};
            _koryguj:=_FAKS.select() & FAKS.seek(_FAKS.UIDREF);
            FAKS.ndx_drop(_ndx)
         || _koryguj:=FAKS.seek(_a)
         ?};
         {? _koryguj || params_exec('koryguj','faktury_nag',,,_typysp_t) ?};
         {? (ROKMC.AR>0 & ST.AR<>ROKMC.AR) | FKOR.WHAT='H' || exec('open','open_tab',ST.ODDZ,2-$ST.AR) ?}
      ?}
   || {? _edit=1 || FUN.info('Nie znaleziono dokumentu korygowanego.'@) ?}
   ?};
   KH_ODB.actions('WER','');
   FAKS.cntx_pop()
|? _wymaga='T' & ST.STS=null
|| FUN.info('Ponieważ w parametrach systemu ustawiono kontrolę wypełnienia stanowiska sprzedaży,\n'
      'ażeby skorzystać z tej funkcji systemu należy wybrać stanowisko sprzedaży.'@)
?}


\koryguj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: inicjuje korygowanie faktury
::   WE: [_a] - 0-dokument z dokumentu w obiegu; 1-wpp; -1-zlecenie fakturowania
::       [_b] - 0-korekta zbiorcza; 1-korekty pojedyncza
::       _c - typ dokumentu sprzedazy
::       [_d] - wskazanie na EDOKUM
::       [_e] - wskazanie na FAKZ
::       [_f] - indeksy do korekty - dotyczy korekty zbiorczej
::       [_g] - 0 - korekta inna, 1 - pierwsza korekta nagłówkowa, 2 - druga korekta nagłówkowa
::       [_h] - 0-bez naliczania FAKSV korekty zbiorczej, 1-z naliczaniem FAKSV korekty zbiorczej
::       [_i] - dokument zwrotu
::  OLD: \koryguj/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
_zwykla:={? var_pres('_a')=type_of(1) || _a || 1 ?};
_pojedyncza:={? var_pres('_b')=type_of(1) || _b || 1 ?};
_typysp_t:=_c;
_edokum:={? var_pres('_d')<>type_of(null()) || null() || _d ?};
_fakz:={? var_pres('_e')<>type_of(null()) || null() || _e ?};
_m2kor:={? var_pres('_f')<>type_of(FAKS) || ~~ || _f ?};
_kor_iter:={? var_pres('_g')<>type_of(0) || 0 || _g ?};
_licz_faksv_kz:={? var_pres('_h')<>type_of(0) || 1 || _h ?};
_zwrot:={? var_pres('_i')<>type_of(null()) || null() || _i ?};
:: Dokument Businesslink
_context:=~~;
_context_bl:=0;
_type_of_obj:=type_of(obj_new('obj'));
{? type_of(params_get())=_type_of_obj & var_pres('context',params_get())=_type_of_obj
||
   _context:=params_get().context;
   _context_bl:=var_pres('BL',_context)=type_of('') & _context.BL='T'
?};
_kornag:=-1;
{? type_of(params_get())=_type_of_obj & var_pres('in',params_get())=_type_of_obj
   & var_pres('KORNAG',params_get().in)=type_of('')
||
   _kornag:=params_get().in.KORNAG='T'
?};

{? _pojedyncza
||
   exec('ini_kom','#message','Wynik tworzenia korekty'@)
||
:: korekta zabiorcza
:: korekta nagłówkowa
   _kz:=__faks_kzf_env.KZ;
   _kz_uid:=__faks_kzf_env.KZ_UID;
   _kz_buf:=__faks_kzf_env.KZ_BUF;
   _kz_w2r:=__faks_kzf_env.KZ_W2R
?};
_kgr:={? FAKS.SZ='Z' || FAKS.ID || FAKS.SYM ?};

_ok:=1;
FAKS.cntx_psh();
FAP.cntx_psh();
ND.cntx_psh();

_txt:='';
{? FAKS.T().PAR='T' & FAKS.SYMF=''
|| _txt:='Wystawienie korekty zablokuje możliwość wystawienia faktury do paragonu.'@
?};

{? FAKS.WHERE='K'
|| _txt:='Funkcja niedostępna dla korekt zbiorczych.'@;
   __kom.set_root(_kgr); exec('add_kom','#message',_txt,7,_kgr);
   _ok:=0
|? FAKS.STAT_REJ='A'
||
   _txt:='Dokument został anulowany. Wystawienie dokumentu korekty niemożliwe.'@;
   __kom.set_root(_kgr); exec('add_kom','#message',_txt,7,_kgr);
   _ok:=0
|? FAKS.STAT_REJ<>'T'
||
   _txt:='Dokument nie jest zaakceptowany. Wystawienie dokumentu korekty niemożliwe.'@;
   __kom.set_root(_kgr); exec('add_kom','#message',_txt,7,_kgr);
   _ok:=0
|? (FAKS.T().KOR<>'T' | FAKS.T().HIS='T')
   &  ~exec('kor','faktury_nag',1)
||
   exec('szuk_kor','faktury_nag',$FAKS.ref(),FAKS.D,1);
   FAKS.cntx_psh();
   FAKS.seek(xx_ref,xx_nam);
   _kor_id:=FAKS.ID;
   _kor_date:=FAKS.D;
   FAKS.cntx_pop();
   _txt:='Do dokumentu%1 były już wystawiane dokumenty korygujące.'@[{? _kgr<>'' || ' ' || '' ?}+_kgr];
   __kom.set_root(_kgr); exec('add_kom','#message',_txt,7,_kgr);
   _txt:='Ponieważ istnieje niezaakceptowany dokument korygujący%1, wystawiony %2, '
         'utworzenie kolejnego jest niemożliwe.'@[{? _kor_id<>'' || ' ' || '' ?}+_kor_id,$_kor_date];
   __kom.set_root(_kgr); exec('add_kom','#message',_txt,7,_kgr);
   _ok:=0
|? FAKS.T().KOR='T' & FAKS.T().HIS='N'
||
   _txt:='Dokument jest korygujący. Wystawienie korekty niemożliwe.'@;
   __kom.set_root(_kgr); exec('add_kom','#message',_txt,7,_kgr);
   _ok:=0
|? FAKS.WHERE='L' & (HELP.WHERE:=FAKS.WHERE; ~exec('fzal_chk','faktury_zalicz','K'))
||
   _txt:='Wystawiono kolejne dokumenty. Wystawienie korekty możliwe tylko do ostatniego dokumentu.'@;
   __kom.set_root(_kgr); exec('add_kom','#message',_txt,7,_kgr);
   _ok:=0
|? FAKS.SZ='Z' & exec('FindInSet','#table','FAP','FAP',FAKS.ref())=null
||
   _txt:='Faktura zakupu posiada wyłącznie pozycje tabeli VAT. Wystawienie korekty niemożliwe.'@;
   __kom.set_root(_kgr); exec('add_kom','#message',_txt,7,_kgr);
   _ok:=0
|? FAKS.T().PAR='T' & FAKS.SYMF<>''
||
   _txt:='Do paragonu wystawiono fakturę %1. Wystawienie korekty niemożliwe.'@ [exec('symf','faktury_wspolne',FAKS.SYMF)];
   __kom.set_root(_kgr); exec('add_kom','#message',_txt,7,_kgr);
   _ok:=0

|? _txt='' | FUN.ask(_txt+'\n'+'Wystawić korektę do dokumentu %1?'@[FAKS.SYM])
||
   _ok:=1
||
   _ok:=0
?};

{? _ok & FAKS.SZ='S' & __War_f('KH_DOD','B',FAKS.KH)='B'
||
   FUN.info('Kontrahent zablokowany bezwarunkowo.'@)
?};

{? _ok=1
|| _fk:=FAKS.ref();
   _r_lock:=exec('r_lock_one','#table',FAKS,_fk);
   {? ~_r_lock
   ||
      {? _pojedyncza
      ||
         exec('who_rlock_faks','faktury_nag')
      ||
         __kom.set_root(_kgr); exec('who_rlock_faks','faktury_nag',1)
      ?};
      _ok:=0
   ?}
?};

{? _ok
||
:: typ dokumentu
   HELP.WHERE:=FAKS.WHERE;
   _help_wh:=FAKS.WHERE;
   {? _help_wh='L' || _zal:='T' || _zal:='N' ?};
   _zknfk:=ZAKR.ZKNFK;
   _ts:=
      {? _pojedyncza
      || _where:=
            'UE=\''+FAKS.T().UE+'\' and KOR=\'T\' and ZAL=\''+_zal+'\' and HIS=\'N\' and FIS=\''+FAKS.T().FIS+
            '\'and ZAK=\''+{? BEER.SZ='Z' || 'T' || 'N' ?}+'\''+
            ' and SPP=\''+FAKS.T().SPP+'\' and VATZPOZ=\''+FAKS.T().VATZPOZ+'\'';
         {? _typysp_t<>''
         || _where+=' and TYPYSP.T=\''+_typysp_t+'\''
         |? BEER.SZ='S'
         || _tp2tp:=exec('tpsp2kor_lista','typysp',FAKS.T);
            {? _tp2tp<>''
            || _where+=' and "TYPYSP".T in ('+_tp2tp+')'
            ?}
         ?};
         {? ref_name(_zwrot)=''
         || exec('tsp_upr','typysp',_where,,,,2)
         || ZAKR.ZKNFK:=2;
            ZAKR.win_edit('KORZWR');
            {? exec('get','#params',300210)='T'
            || ZAKR.efld_opt('KORZWR','mark=1',,'POWKOR')
            || ZAKR.efld_opt('KORZWR','mark=0',,'POWKOR')
            ?};
            {? ZAKR.edit("_powkor:=exec('get','#params',300210)='T';
                          {? form(ZAKR.TYPYSP)='' || FUN.info('Wymagane wskazanie typu dokumentu.'@); 'TYPYSP'
                          |? ZAKR.TZP=''          || FUN.info('Wymagane wskazanie powodu korekty (nagłówek).'@); 'TZP'
                          |? _powkor
                           & ZAKR.POWKOR=null()   || FUN.info('Wymagane wskazanie powodu korekty.'@); 'POWKOR'
                          || ''
                          ?}")
            || exec('FindInSet','#table','TYPYSP','TYPYKOD',ZAKR.TYPYSP,ZAKR.TYPYSP)
            || null()
            ?}
         ?}
      || __kz_t
      ?};
   ZAKR.ZKNFK:=_zknfk;
   {? _ts
   ||
::    parametry numeracji dla pojedynczej korekty
      POM.TYPDOK:=TYPYSP.KOD;
      POM.NRT:=TYPYSP.NRT;
::    ustalenie wartości zmiennych xx_*
      _kor:=exec('kor','faktury_nag',0);
::    FKSQL, LKSQL, OFNUM
      _fksql:=$FAKS.ref();
      _lksql:=$FAKS.ref();
      _ofnum:=1;
      {? _kor
      ||
         _fksql:={? FAKS.T().HIS='T' & FAKS.KOR<>'' || FAKS.LKSQL || $FAKS.ref() ?};
         _lksql:=form(xx_nam)+((('0'*8)+(-BB.hex(xx_ref)))+8);
         _ofnum:=xx_num+1
      ?};
::    data wystawienia
      _dw:=
         {? ref_name(_fakz)<>''
         || exec('FindAndGet','#table',FAKZ,_fakz,,"{? DF<>date(0,0,0) || DF || DW ?}",date())
         |? ~_pojedyncza
         || _kz_buf.get('DW')
         |? _context_bl & _context.DW>=date(ST.AR,ST.AM,1) & _context.DW<=date(ST.AR,ST.AM,0)
         || _context.DW
         |? date()>=date(ST.AR,ST.AM,1) & date()<=date(ST.AR,ST.AM,0)
         || date()
         || date(ST.AR,ST.AM,0)
         ?};
::      {? _kor<>0 & FAKS.T().HIS<>'T'
::      || _txt:='Do dokumentu %1 były już wystawiane dokumenty korygujące.'@ [FAKS.SYM];
::         __kom.set_root(_kgr); exec('add_kom','#message',_txt,7,_kgr)
::      ?};
      _faks:=exec('faks_przed_kor','faktury_nag',_dw,_ts,_zwykla,_kor);
:: dodanie nagłówka korekty
      {? ST.AR<>ROKMC.AR | FKOR.WHAT='H'
      || exec('open','open_tab',ST.ODDZ,2-$ST.AR)
      ?};
      _memo:='';
      {? ~_kor_iter
      || FAKS.memo_set('','UWAGI')
      || _memo:=FAKS.memo_get('r','UWAGI')
      ?};
::    BEER.HAN=null() aby nie uzupełniało FAKS.HAN na FAKS.blank()
      BEER.HAN:=null();
::    ???
      FZ.TERMPLAT:=date(0,0,0);
      {? {? _zwykla
         || exec('add','faktury_nag',_ts,_faks.D,_lksql,_faks.KH,_fksql,_faks.SYM,,_faks.RAB,,,_faks.DW,,_ofnum
               ,,,,,,,,{? _pojedyncza || 'N' || 'T' ?},_faks.HAN,{? _pojedyncza || '' || $_kz ?})
         || exec('add','faktury_nag',_ts,EDOKUM.DOP,_lksql,_faks.KH,_fksql,_faks.SYM,,_faks.RAB,,,EDOKUM.DW,'O',_ofnum
               ,,EDOKUM.DO,EDOKUM.SYM,$EDOKUM.ref,,,,,_faks.HAN)
         ?}
      ||
::       !!! START - lock nagłówka ma być zaraz po zakończeniu funkcji exec('add','faktury_nag')
::                   nie wstawiać pomiędzy żadnego kodu
         _r_lock1:=exec('r_lock_one','#table',FAKS,FAKS.ref());
::       !!! END

::       nagłówek korekty
         BEER.WYSTFAKS:=FAKS.ref;
::       korekta do zwrotu
         {? ref_name(_zwrot)<>'' || FAKS.TZP:=ZAKR.TZP ?};
::       dokument w obiegu
         {? _edokum<>null()
         || FAKS.TZP:=exec('FindAndGet','#table',EDOKUM,_edokum,,"KOR_PRZY",'');
            FAKS.TZ:=exec('FindAndGet','#table',EDOKUM,_edokum,,"TP",date(0,0,0));
            FZ.FORMAPLA:=exec('FindAndGet','#table',EDOKUM,_edokum,,"PLATNOSC().KOD",'');
            FZ.PL:=exec('FindAndGet','#table',EDOKUM,_edokum,,"PLATNOSC",null());
            FZ.TERMPLAT:=exec('term_plat','faktury_plat','PL','N',FAKS.ref());
            exec('plat_one','faktury_plat',FAKS.ref())
         ?};
::       zlecenie fakturowania
         {? ref_name(_fakz)<>''
         || {? FAKS.UWAGI=null()
            || {? FAKZ.UWAGI || FAKS.memo_set(FAKZ.memo_get('r','UWAGI'),'UWAGI') ?}
            ?};
            _uid:=exec('FindAndGet','#table',FAKZ,_fakz,,"uidref()",'');
            {? _uid<>'' || exec('fakz2fap_add','faktury_wspolne',_uid,FAKS.ref(),null()) ?}
         ?};
::       korekta częściowa ???
         {? ~_pojedyncza
         ||
            FAKS.AR:={? FAKS.SZ='Z' || ST.AR || FAKS.DW~1 ?};
            FAKS.AM:={? FAKS.SZ='Z' || ST.AM || FAKS.DW~2 ?}
         ?};
::       waluta handlowa
         FAKS.WAL:=exec('FindAndGet','#table',FAKS,_faks.KRS_REF,,"WAL",null());
         FAKS.RTK:=exec('FindAndGet','#table',FAKS,_faks.KRS_REF,,"RTK",0);
         FAKS.NTK:=exec('FindAndGet','#table',FAKS,_faks.KRS_REF,,"NTK",'');
         FAKS.BTK:=exec('FindAndGet','#table',FAKS,_faks.KRS_REF,,"BTK",'');
         FAKS.DTK:=exec('FindAndGet','#table',FAKS,_faks.KRS_REF,,"DTK",date(0,0,0));
         FAKS.SWAL:=exec('FindAndGet','#table',FAKS,_faks.KRS_REF,,"SWAL",0);
         FAKS.BKRS:=_faks.BKRS;
         FAKS.KRS:=_faks.KRS;
::       waluta opodatkowania
         FAKS.NWAL:=exec('FindAndGet','#table',FAKS,_faks.KRS_REF,,"NWAL",null());
         FAKS.NRTK:=exec('FindAndGet','#table',FAKS,_faks.KRS_REF,,"NRTK",0);
         FAKS.NNTK:=exec('FindAndGet','#table',FAKS,_faks.KRS_REF,,"NNTK",'');
         FAKS.NBTK:=exec('FindAndGet','#table',FAKS,_faks.KRS_REF,,"NBTK",'');
         FAKS.NDTK:=exec('FindAndGet','#table',FAKS,_faks.KRS_REF,,"NDTK",date(0,0,0));
         FAKS.NSWAL:=exec('FindAndGet','#table',FAKS,_faks.KRS_REF,,"NSWAL",0);
         FAKS.BNKRS:=_faks.BNKRS;
         FAKS.NKRS:=_faks.NKRS;
::       intrastat
         FAKS.KPW:=_faks.KPW;
         FAKS.WD:=_faks.WD;
         FAKS.RTRANSAK:=_faks.RTRANSAK;
         FAKS.RTRANSPO:=_faks.RTRANSPO;
         FAKS.IST_TYP:=_faks.IST_TYP;
         FAKS.IST_OKR:=_faks.IST_OKR;
::       nip_ue, odbiorca
         FAKS.NIP_UE:=_faks.NIP_UE;
         FAKS.KH_ODB:=_faks.KH_ODB;
         {? _context_bl & FAKS.KH_ODB=null()
         || FAKS.KH_ODB:=_context.KH_ODB
         ?};
::       projekty
         FAKS.PROJEKT:=_faks.PROJEKT;
         FAKS.PROJEKTY:=_faks.PROJEKTY;
::       parametry wyliczeń
         FAKS.CB:=_faks.CB;
         FAKS.SPOBLRAB:=_faks.SPOBLRAB;
         FAKS.RAB_TYP:=_faks.RAB_TYP;
         FAKS.GRATISY:=_faks.GRATISY;
         FAKS.NDVAT:=_faks.NDVAT;
         FAKS.DO_UE:=_faks.DO_UE;
         {? FAKS.WHERE<>'L' || FAKS.KW_ZAL:=0 ?};
::       data otrzymania
         {? _zwykla || FAKS.DO:=_faks.DO ?};
         {? _zwykla || FAKS.DO_NA_DR:=_faks.DO_NA_DR ?};
::       pozostałe
         FAKS.KOR_ID:=_faks.ID;
         FAKS.MAG:=_faks.MAG;
         {? exec('sp_active','faktury_wspolne',FAKS.DW) || FAKS.SP_WYM:=_faks.SP_WYM ?};
         FAKS.CZY_DRUK:='N';
         FAKS.KRAJ_VAT:=_faks.KRAJ_VAT;
         FAKS.PROC:=_faks.PROC;
::       rachunek bankowy
         {? FAKS.SZ='Z'
         ||
            {? FAKS.KH<>null & FAKS.KH<>HELP.KHB
            ||
               SKID_RBK.cntx_psh();
               SKID_RBK.index('RD');
               SKID_RBK.prefix(RACHBANK.FIRMA,'KH',#exec('kh2rbk','faktury_wspolne'),'T');
               {? SKID_RBK.first()
               ||
                 FAKS.SKID_RBK:=SKID_RBK.ref();
                 FAKS.NB:=SKID_RBK.BANK().NB;
                 FAKS.RBK:=SKID_RBK.N
               ?};
               SKID_RBK.cntx_pop()
            ?}
         ||
            FAKS.SKID_RBK:=_faks.SKID_RBK;
            FAKS.NB:=_faks.NB;
            FAKS.RBK:=_faks.RBK;
            FAKS.VSKIDRBK:=_faks.VSKIDRBK;
            FAKS.VNB:=_faks.VNB;
            FAKS.VRBK:=_faks.VRBK
         ?};

::       aktualizacja nagłówka korekty
         {? _zwrot<>null()
         || FAKS.WGZWR:=1;
            FAKS.DZ:=exec('FindAndGet','#table',ND,_zwrot,,"D",date(0,0,0))
         ?};
         {? _kornag=1
         ||
            FAKS.WHERE:='N';
            FZ.FORMAPLA:=''; FZ.TERMPLAT:=date(0,0,0); exec('del_plat','faktury_plat',FAKS.ref())
         ?};
         {? FAKS.WHERE='N' | _pojedyncza=0 & _kor_iter=0 | _kor_iter=1
         ||
            exec('duplikuj_dane','faktury_wspolne','KH','KH_ODB')
         ?};
         FAKS.put();
         {? _kor_iter || FAKS.memo_set(_memo,'UWAGI'); FAKS.memo_put() ?};
         _ref:=FAKS.ref();

:: dokument Businesslink
         {? _context_bl
         ||
            exec('FindAndGet','#table',DOKUM,_context.DOKUM,,"
               @.DOKUM.REFSQL:=_b;
               @.DOKUM.BL_STAT:=exec('during_registration','zbl_stat');
               @.DOKUM.put()
            ",,$FAKS.ref())
         ?};

::       parametry cenników
         TAZ.RAB_TYP:=FAKS.RAB_TYP;
         DISP.RAB:=FAKS.RAB;
         DISP.RABO:={? exec('czyrabp','ceny',TAZ.RAB_TYP) || '%' || FAKS.WAL().KOD ?};
         DISP.RABZTYP:=exec('rabztyp','ceny',TAZ.RAB_TYP);
::       informacje dodatkowe
         BEER.MSK:='faktu';
         exec('inf_dod','fakso',-1);
::       kopiowanie pozycji
         exec('copypoz','faktury_poz',_ref,FAKS.name(),_pojedyncza,ref_name(_zwrot)<>'',xx_krs_ref,
            {? _pojedyncza || ~~ || _kz_buf?});
::       ustawienie się na nagłówku korekty i prefix na jej pozycje
         FAKS.seek(_ref);
         FAP.index('FAP');
         FAP.prefix(FAKS.ref());
         {? _pojedyncza
::       korekta pojedyncza
         ||
::          dupliku dane
            exec('duplikuj_dane','faktury_wspolne','KH',{? FAKS.KH_ODB || 'KH_ODB' || '' ?});
::          kopiowanie podmiotów
            exec('fakskh_copy','faktury_wspolne',exec('FindAndGet','#table',FAKS,FAKS.LKSQL,,,null()),_ref);
::          aktualizacja wartości korekty
            exec('sumfak','faktury_wspolne');
::          korekta zaliczki
            {? FAKS.WHERE='L'
            ||
               exec('fp_addk','faktury_zalicz');

               exec('faksv_rm','faktury_vat',$FAKS.ref());
               exec('faksv_mk','faktury_vat',$FAKS.ref())
            ?};

            _var_koryguj:=obj_new('ZWYKLA');
            _var_koryguj.ZWYKLA:=_zwykla;
            _var_fakpop:=exec('var_fakpop','faktury_nag');
            _var_fakpop.RAB:=FAKS.RAB;
            _var_fakpop.KRS:=FAKS.KRS;
            _var_fakpop.NKRS:=FAKS.NKRS;
            _var_fakpop.RTRANSAK:=FAKS.RTRANSAK;
            _var_fakpop.R_LOCK:=_r_lock;
            _var_fakpop.PO_FIRST:=0;

::          Parmater 'context' wykorzystywany w:
::          - exec('faks_pozycje_red','faktury_nag')
::          - exec('faks_zakoncz_red','faktury_nag')
::          Parametry 'var_koryguj', 'var_fakpop' wykorzystywany w:
::          - exec('faks_pozycje_red','faktury_nag')
::          - exec('faks_zakoncz_red','faktury_nag')
::          - exec('put',faktury_nag') -> exec('putfak',faktury_nag') -> exec('putfakb',faktury_nag')
::          - exec('fak_pop_po','faktury_nag',_dod_nag)
::          - exec('koryguj_po','faktury_nag')
            params_set('context',params_get(),'var_fakpop',_var_fakpop,'var_koryguj',_var_koryguj,'faks',_faks);

            exec('faks_win_edit_set','faktury_nag','edit');
            _dod_nag:=exec('put','faktury_nag',1);
            {? FAKS.STAT_REJ='N'
            || _dod_nag:=exec('fak_pop_po','faktury_nag',{? _dod_nag || 1 || -1 ?},_var_fakpop.PO_FIRST=2);
               {? _var_fakpop.PO_FIRST=1 & _dod_nag
               || exec('koryguj_po','faktury_nag')
               ?};
               {? _dod_nag & _var_fakpop.PO_FIRST=0
               || {? FAKS.WHERE='N'
                  || exec('faks_kzf','faktury_nag')

                  || BPMN.END:=1;
                     params_exec('pozycje_fak','faktury_poz');
                     {? BPMN.END=2 & exec('FindInSet','#table','FAP','FAP',FAKS.ref())<>null()
                     || _var_fakpop.PO_FIRST:=2;
                        exec('faks_zakoncz_red','faktury_nag')
                     ?}
                  ?}
               ?}
            ?};
            {? _dod_nag=0 || BEER.WYSTFAKS:=null ?};
            exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock1)
::       korekta zbiorcza
::       korekta nagłówkowa
         ||
            exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock1);
::       korekta zbiorcza
::       lub korekta danych nagłówkowych - anulowanie obrotu
::       lub korekta danych nagłókowych - przywrócenie obrotu
::          numeracja
            POM.TAB:='FAKS';
            POM.TYPDOK:={? FAKS.SZ='S' || 'KZF' || 'KZZ' ?};
            exec('add_grnr','numery',POM.TYPDOK);
            POM.NRT:=0;
            FAKS.NR:=exec('numer_new','numery','PACZKA');
            exec('znak','numery','FAKS');
::          data wystawienia
            FAKS.DW:=_kz_buf.get('DW');
::          data zwrotu
            FAKS.DZ:=_kz_buf.get('DW');
::          powód korekty
            FAKS.TZP:=_kz_buf.get('TZP');
            FAKS.POWKOR:=_kz_buf.get('POWKOR');
::          sposób rozliczenia vat
            FAKS.NDVAT:=_kz_buf.get('NDVAT');
::          wystawił korektę
            FAKS.USER:=_kz_buf.get('USER');
::          typ korekty zbiorczej lub nagłówkowej
            FAKS.KZ_T:=_kz_buf.get('T');
::          korekta zbiorcza według cen netto/brutto
            _wg_cb:=exec('FindAndGet','#table',TYPYSP, FAKS.KZ_T,,"TYPYSP.FIS='T'",0);
::          korekta zbiorcza walutowa
            _dwal:=FAKS.WAL<>FAKS.NWAL;
::          rabat dotyczy wszystkich pozycji - _all_m2okr=1
            _all_m2kor:=type_of(_m2kor)=type_of(~~);
            {? _kor_iter=0
::       korekta zbiorcza
            ||
::             rabat dotyczy wszystkich pozycji - doliczenie w nagłówku korekty częściowej
               {? _all_m2kor || FAKS.RAB+=_kz_buf.get('RAB') ?};
::             waluta handlowa
               {? _kz_buf.get('KRS')
               || FAKS.SWAL:=_kz_buf.get('SWAL');
                  FAKS.KRS:=_kz_buf.get('KRS');
                  FAKS.RTK:=_kz_buf.get('RTK');
                  FAKS.NTK:=_kz_buf.get('NTK');
                  FAKS.DTK:=_kz_buf.get('DTK');
                  FAKS.BTK:=_kz_buf.get('BTK')
               ?};
::             waluta opodatkowania
               {? _kz_buf.get('NKRS')
               || FAKS.NSWAL:=_kz_buf.get('NSWAL');
                  FAKS.NKRS:=_kz_buf.get('NKRS');
                  FAKS.NRTK:=_kz_buf.get('NRTK');
                  FAKS.NNTK:=_kz_buf.get('NNTK');
                  FAKS.NDTK:=_kz_buf.get('NDTK');
                  FAKS.NBTK:=_kz_buf.get('NBTK')
               ?}
            ?};
            {? _kor_iter=0 | _kor_iter=2
::       korekta zbiorcza
::       lub korekta danych nagłókowych - przywrócenie obrotu
            ||
               FAKS.NIP_UE:=_kz_buf.get('NIP_UE')
            ?};
            {? _kor_iter=1
::       korekta danych nagłówkowych - anulowanie obrotu
            ||
::             kopiowanie podmiotów
               exec('fakskh_copy','faktury_wspolne',exec('FindAndGet','#table',FAKS,FAKS.LKSQL,,,null()),_ref);
               exec('duplikuj_dane','faktury_wspolne','KH',{? FAKS.KH_ODB || 'KH_ODB' || '' ?});
               FAKS.DZ:=date(0,0,0)

            |? _kor_iter=2
::       korekta danych nagłókowych - przywrócenie obrotu
            ||
::             kopiowanie podmiotów
               exec('fakskh_copy','faktury_wspolne',exec('FindAndGet','#table',FAKS,_kz,,,null()),_ref);
               {? FAKS.PROJEKTY().T().R=exec('zewnetrzny','projtypy') || FAKS.PROJEKTY:=null() ?};
               FAKS.KH:=_kz_buf.get('KH');
               FAKS.NAZ:=_kz_buf.get('NAZ');
               FAKS.KH_KRISO:=_kz_buf.get('KH_KRISO');
               FAKS.KH_KRAJ:=_kz_buf.get('KH_KRAJ');
               FAKS.MIASTO:=_kz_buf.get('MIASTO');
               FAKS.UL:=_kz_buf.get('UL');
               FAKS.DOM:=_kz_buf.get('DOM');
               FAKS.LOKAL:=_kz_buf.get('LOKAL');
               FAKS.KPOCZ:=_kz_buf.get('KPOCZ');
               FAKS.POCZ:=_kz_buf.get('POCZ');
               FAKS.NIP:=_kz_buf.get('NIP');
               FAKS.KH_ODB:=_kz_buf.get('KH_ODB');
               FAKS.O_KRISO:=_kz_buf.get('O_KRISO');
               FAKS.O_KRAJ:=_kz_buf.get('O_KRAJ');
               FAKS.O_NAZ:=_kz_buf.get('O_NAZ');
               FAKS.O_MIASTO:=_kz_buf.get('O_MIASTO');
               FAKS.O_UL:=_kz_buf.get('O_UL');
               FAKS.O_DOM:=_kz_buf.get('O_DOM');
               FAKS.O_LOKAL:=_kz_buf.get('O_LOKAL');
               FAKS.O_KPOCZ:=_kz_buf.get('O_KPOCZ');
               FAKS.O_POCZ:=_kz_buf.get('O_POCZ');
               FAKS.O_NIP:=_kz_buf.get('O_NIP');
               FAKS.HAN:=_kz_buf.get('HAN');
               FAKS.D:=_kz_buf.get('D');
               FAKS.DO:=_kz_buf.get('DO');
               FAKS.DO_NA_DR:=_kz_buf.get('DO_NA_DR');
               FAKS.DZ:=date(0,0,0);
               FAKS.SKID_RBK:=_kz_buf.get('SKID_RBK');
               FAKS.NB:=_kz_buf.get('NB');
               FAKS.RBK:=_kz_buf.get('RBK');
               {? exec('sp_active','faktury_wspolne',FAKS.DW) || FAKS.SP_WYM:=_kz_buf.get('SP_WYM') ?}
            ?};
::          wspólne
            FAKS.put;
            exec('akt_kor','faktury_nag');
::          aktualizacja pozycji
            _rab1:=_kz_buf.get('RAB');
::          _lksql, _lksql_r - poprzedzająca faktura zbiorcza
            _lksql_r:=null();
            _lksql:='';
            {? FAKS.LKSQL<>FAKS.FKSQL
            ||
               _jest_kz:=0;
               _lksql:=FAKS.LKSQL;
               _loop:=1;
               {!
               |? _loop
               |!
                  _loop:=exec('FindAndGet','#table',FAKS,_lksql,,"FAKS.KZ=''",0);
                  {? ~_loop
                  ||
                     _kz:=exec('FindAndGet','#table',FAKS,_lksql,,"FAKS.KZ",0);
                     {? exec('FindAndGet','#table',FAKS,_kz,,"FAKS.RABA='T'",0) || _jest_kz+=1 || _jest_kz-=1 ?};
                     _loop:=1
                  ?};
                  {? _loop
                  ||
                     _lksql:=exec('FindAndGet','#table',FAKS,_lksql,,"FAKS.LKSQL",'');
                     _loop:=_jest_kz>=0 & _lksql<>''
                  ?}
               !};
               {? _jest_kz
               ||
                  _lksql_r:=exec('FindAndGet','#table',FAKS,_lksql,,,null())
               ||
                  _lksql:=''
               ?}
            ?};
            _continue:=1;
            FAKS_KZR.index('UNIK');
            FAKS_KZR.prefix(_kz_uid,'N');
            FAP.index('FAP');
            FAP.prefix(FAKS.ref);
            {? FAP.first()
            ||
               _przed:=obj_new('WAR','IL','CENA','RABP','RAB','CN','FAKS_RAB');
               _po:=obj_new('WAR','CENA','RAB');
               {!
               |?
::                pobranie wartości po korekcie przed zmianą
                  exec('wysw_kor','faktury_poz');
                  _przed.WAR:={? _wg_cb || FKOR.BBWAL || FKOR.BWWAL ?};
                  _przed.IL:=FKOR.BIL;
                  _przed.CENA:={? _dwal || FKOR.CWAL || FKOR.BCPR ?};
::                rabat pozycja
                  _przed.RABP:=FKOR.FRAB;
::                rabat nagłówek
                  _przed.RAB:=FKOR.RAB;
                  _przed.CN:=FKOR.BCN;
                  _przed.FAKS_RAB:=exec('FindAndGet','#table',FAKS,FAKS.LKSQL,,"FAKS.RAB",0);
                  FAP.get();
                  _liczfak:=0;
                  {? _kz_buf.get('RABK')>0
                  ||
:: korekta zbiorcza - liczona od kwoty rabatu
::                   _rab_uid - identyfikator kfalifikujący rabat
                     _rab_uid:=exec('faks_kzr_rab_uid','faktury_nag1',_kz_uid,FAP.M);
                     {? FAKS_KZR.find_key(_rab_uid,) & _kz_w2r.find_key(_rab_uid,)
                     ||
                        _war_rab:=0;
                        {? _kz_w2r.WAR2RAB
                        ||
                           _war_rab:=(_przed.WAR / _kz_w2r.WAR2RAB * (FAKS_KZR.RABK-FAKS_KZR.WAR_RABK))$2
                        ?};
                        {? _war_rab
                        ||
:: DRO_TODO_AWI: (KZ):   : czy zaokrąglać do 2 miejsc? ... teraz jest to konieczne bo nie będzie można, przy kolejnej
:: DRO_TODO_AWI: (KZ):   : korekcie, wyjść na tą samą wartość ... ale jeśli zaokrąglenia będą zbyt duże to trzeba będzie
:: DRO_TODO_AWI: (KZ):   : zwiększyć dokładność
                           _dokl_rab1:=2;
::                         algorytm dla różnych metod liczenia rabatu w poyzcjach
                           _po.WAR:=_przed.WAR-_war_rab;
                           _po.CENA:=(_po.WAR/_przed.IL)$FAP.M().DOKL_S;
                           _po.RAB:=((1-_po.CENA/_przed.CENA)*100)$_dokl_rab1;
                           {? FAKS.RAB_TYP='P'
                           ||
                              FAP.RAB1+=_po.RAB-_przed.RAB-_przed.RABP

                           |? FAKS.RAB_TYP='S'
                           ||
                              _rab_nag:=100+(_po.RAB-100)*100/(100-_przed.RABP);
                              FAP.RAB1+=(_rab_nag-_przed.RAB)

                           |? FAKS.RAB_TYP='K' | FAKS.RAB_TYP='W'
                           ||
                              _kwrabj:=_przed.CENA-_po.CENA;
                              _kwrabj_nag:=_kwrabj-_przed.RAB-_przed.RABP;
                              FAP.RAB1+=(_kwrabj_nag/_przed.CENA*100)$_dokl_rab1
                           ?};
                           _liczfak:=1
                        ?}
                     ?}

                  |? _kz_buf.get('RABA')='T'
                  ||
:: korekta zbiorcza - anulowanie
:: DRO_TODO_AWI: (KZ):   : UWAGA
:: DRO_TODO_AWI: (KZ):   : tutaj potrzebna funkcja sprawdzająca zgodność dokumentu
:: DRO_TODO_AWI: (KZ):   : jeśli np. ilość się różni to korekta niemożliwa (do ustalenia zestaw kontrolowanych
:: DRO_TODO_AWI: (KZ):   : atrybutów dokumentu) teraz rządzi przypadek - dopiero po utworzeniu korekty zbiorczej
:: DRO_TODO_AWI: (KZ):   : anulującej widzimy, że dokumenty wystawione po korekcie zbiorczej przeznaczonej
:: DRO_TODO_AWI: (KZ):   : do anulowania zmieniły wartości tak, że uniemożliwiają anulowanie korekty zbiorczej
:: DRO_TODO_AWI: (KZ):   : - wtedy trzba skorgować dane tak aby miały stan jak po wystawieniu korekty zbiorczej
:: DRO_TODO_AWI: (KZ):   : przeznaczonej do anulowania
                     {? _lksql=''
                     ||
                        exec('add_kom','#message','Nie znaleziono poprzedzającej korekty zbiorczej,'
                           ' która nie była anulowana.'@,7,FAKS_KZF.FAK_SYM);
                        _continue:=0
                     ||
                        FAP.cntx_psh();
                        FAP.use((5+FAP.name())+(ref_name(_lksql)+3));
                        _rab1:=exec('FindInSet','#table','FAP','FAP',FAP.POZ,_lksql_r,"
                           FAKS.cntx_psh();
                           FAKS.use(ref_name(FAP.FAKS));
                           _kor:=FAP.FAKS().T().KOR;
                           FAKS.cntx_pop();
                           FAP.RAB1
                        ",,,FAP.RAB1);
                        FAP.cntx_pop();
                        FAP.RAB1:=_rab1;
                        _liczfak:=1
                     ?}
                  ||
:: korekta zbiorcza - procentowa
                     {? _all_m2kor=0 & _m2kor.find_key($FAP.M) || FAP.RAB1+=_rab1 ?};
                     _liczfak:=1
                  ?};
                  {? _liczfak
                  ||
::                   przeliczamy pozycję tylko jak jest korygowana
                     exec('liczfak','faktury_wspolne',0);
                     {? _kz_buf.get('RABK')>0
                     ||
                        _kz_w2r.WAR2RAB-=_przed.WAR;
                        _kz_w2r.put();
                        FAKS_KZR.WAR_RABK-={? _wg_cb || FAP.BWAL || FAP.WWAL ?};
                        {? FAKS_KZR.WAR2RAB>0 || FAKS_KZR.WAR_RAB:=(FAKS_KZR.WAR_RABK/FAKS_KZR.WAR2RAB*100)$2 ?};
                        FAKS_KZR.put()
                     ?};
::                   intrastat
                     exec('liczfak_ist','faktury_wspolne',1,0);
                     FAP.POWKOR:=_kz_buf.get('POWKOR');
::                   sprawdzenie ceny po rabacie
                     {? _przed.CN+FAP.CN<=0
                     ||
                        _continue:=0;
                        __kom.set_root(_kgr);
                        exec('add_kom','#message','Pozycja %1 po korekcie ma cenę mniejsza lub równą zero.'@[$FAP.POZ],7,FAKS_KZF.FAK_SYM);
                        exec('add_kom','#message','Nie wystawiono korekty do dokumentu.'@,7,FAKS_KZF.FAK_SYM)
                     ?}
                  ?};
                  _continue & FAP.put() & FAP.next()
               !}
            ?};
::          zapamiętanie w korekcie zbiorczej
            FAKS_KZF.KOR:=$FAKS.ref;
            FAKS_KZF.KOR_NR:=FAKS.NR;
            FAKS_KZF.KOR_SYM:=FAKS.SYM;
            {? FAKS_KZF.put()
            || exec('sumfak','faktury_wspolne',,_licz_faksv_kz);
               {? _continue & FAKS.AKC='N'
               || __kom.set_root(_kgr);
                  exec('fak_akc','faktury_nag',0,,0,0,{? ~_b || FAKS_KZF.FAK_SYM || '' ?})
               ?}
            ?}
         ?}
      ?};
      HELP.WHERE:=_help_wh
   ?};
   exec('r_unlock_one','#table',FAKS,_fk,_r_lock)
?};
{? ST.AR<>ROKMC.AR | FKOR.WHAT='H'
||
   FAKS.use('faktu'+ST.ODDZ+{? FKOR.WHAT<>'H' || (2-$ROKMC.AR) || 'hs' ?});
   FAP.use('fakpo'+ST.ODDZ+{? FKOR.WHAT<>'H' || (2-$ROKMC.AR) || 'hs' ?});
   FAKSPL.use('fakpl'+ST.ODDZ+{? FKOR.WHAT<>'H' || (2-$ROKMC.AR) || 'hs' ?})
?};
ND.cntx_pop();
FAP.cntx_pop();
FAKS.cntx_pop();
{? _pojedyncza
||
:: porządki po wywołaniu exec('szuk_kor','faktury_nag')
   exec('szuk_kor','faktury_nag');
   exec('end_kom','#message')
?};
''


\koryguj_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Obsługa koryguj po zakończeniu edycji (FAKS.edit)
::   WE: params_get()   - ustawiany w exec('koryguj','faktury_nag')
::----------------------------------------------------------------------------------------------------------------------
_var_koryguj:=params_get().var_koryguj;

_zwykla:=_var_koryguj.ZWYKLA;

{? _zwykla=1
|| {? FAKS.WHERE='L'
:: korekta zaliczki
   || exec('fp_addk','faktury_zalicz');
      _faks:=$FAKS.ref();
      exec('faksv_rm','faktury_vat',_faks);
      exec('faksv_mk','faktury_vat',_faks)
   ?}
?}


\var_fakpop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zmienna - Poprawa nagłowka
::   WY: uchwyt do zmiennej
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new('PROJEKTY','RAB','KRS','NKRS','KH','ODB','WAL','PL'
   ,'IST_TYP','RTRANSAK'
   ,'R_LOCK','PO_FIRST','FLD','FLD_F3'
   ,'FAKZ','FAKZ_RLOCK','PODP_DO','POP_DS');
_wyn.KH:=null();
_wyn.PROJEKTY:=null();
_wyn.FAKZ:=null();
_wyn.FAKZ_RLOCK:=0;
_wyn.PODP_DO:=0;
_wyn.POP_DS:=FAKS.D;
_wyn


\faks_edit_finisher
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Kod wykańczający po FAKS.edit() w różnych kontekstach
::   WE: _a - FAKS.ref()
::       params_get()   - ustawiane w exec('fak_pop','faktury_nag')
::                      - ustawiane w exec('wystinne','faktury_nag')
::                      - ustawiane w exec('koryguj','faktury_nag')
::----------------------------------------------------------------------------------------------------------------------
:: Sprawdzenie poprawności wypełnienia pól nagłówka dokumentu sprzedaży
_fld:=params_exec('check','faktury_nag');
{? var_pres('_fld')=type_of(0)
||
   _fld

|? _fld<>''
||
   _fld
||
   _faks:=_a;
   _out:=params_get().context.out;
   _mp:=params_get().context.mp;
   _akcja:={? var_pres('akcja',params_get().context)>0 || params_get().context.akcja || 'START_TODO' ?};
   _var_fakpop:=params_get().var_fakpop;
   {? _akcja='Dołącz' | _akcja='START_TODO' | _akcja='Fakturuj' | _akcja='Zamówienie' | _mp.pathProc()
   ||
      params_set('var_fakpop',_var_fakpop);
      exec('fak_pop_po','faktury_nag',1,0);
      {? _var_fakpop.PO_FIRST=1
      ||
         {? var_pres('var_wystinne',params_get())=type_of(obj_new('obj'))
         || params_set('var_wystinne',params_get().var_wystinne,'var_fakpop',_var_fakpop);
            exec('wystinne_po','faktury_nag',1)
         |? var_pres('var_koryguj',params_get())=type_of(obj_new('obj'))
         || params_set('var_koryguj',params_get().var_koryguj,'var_fakpop',_var_fakpop);
            exec('koryguj_po','faktury_nag')
         |? var_pres('var_korhis',params_get())=type_of(obj_new('obj'),'var_fakpop',_var_fakpop)
         || exec('kor_his_po','faktury_nag',1)
         ?}

      |? FAKS.WHERE='J'
      ||
::       fakturowanie zgłoszeń jednorazowych
::       jeśli dokument nie ma pozycji to ponowienie dodania pozycji pozycji
         FAP.cntx_psh();
         FAP.index('FAP');
         FAP.prefix(FAKS.ref());
         {? ~FAP.first()
         ||
            {? var_pres('var_wystinne',params_get())=type_of(obj_new('obj'))
            || params_set('var_wystinne',params_get().var_wystinne,'var_fakpop',_var_fakpop);
               exec('wystinne_po','faktury_nag',1)
            ?}
         ?};
         FAP.cntx_pop()
      ?};
      _var_fakpop.PO_FIRST:=2

   |? _akcja='Popraw' | _mp.pathTodo()
   ||
      params_set('var_fakpop',_var_fakpop);
      exec('fak_pop_po','faktury_nag',1,0)
   ?};
   ''
?}


\pr_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: przed redakcja pola rok dla korekty
::   WY: 1-korekta zwyklej faktury 0-korekta faktury historycznej
::  OLD: \pr_rok/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? FKOR.WHAT<>'H' || 1 || 0 ?}


\f3_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: F3 dla pola rok - wystawianie korekty
::   WY: wybrany rok
::  OLD: \f3_rok/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_rok:=ROKMC.AR;
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
_acr:=OKR.mk_sel('Rok'@,'N',,'ksyfmnnywwgstra',,,10);
OKR.win_fld(_acr,,'ROK',,,,,,'ROK'@,1);
OKR.win_act(_acr,,'Formuła','Wybierz'@@,,,"sel_exit()",,1,,,,'W');
OKR.win_sel(_acr);
{? OKR.select() || _rok:=OKR.ROK ?};
OKR.cntx_pop();
_rok


\po_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: po redakcji pola rok dla korekty
::   WY: 1/0
::  OLD: \po_rok/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_msg:='';
{? ROKMC.AR<=0
|| _msg:='Należy podać rok.'@
?};
{? _msg='' & ROKMC.AR>ST.AR
|| _msg:='Rok dla dokumentów nie może być większy niż aktywny\n(wybrany w parametrach pracy systemu).'@
?};
{? _msg=''
||
   OKR.cntx_psh();
   OKR.index('OKR');
   OKR.prefix(REF.FIRMA,ROKMC.AR);
   {? ~OKR.first()
   || _msg:='Brak zdefiniowanego okresu rozliczeniowego dla podanego roku.'@
   ?};
   OKR.cntx_pop()
?};
{? +_msg
|| FUN.info(_msg);0
|| 1
?}


\ae_mc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: po redakcji pola miesiac
::   WY: 1/0
::  OLD: \ae_mc/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? fld()<0 | fld()>12 || FUN.info('Nieprawidłowa wartość pola miesiąc.'@); _wyn:=0 ?};
_wyn


\be_rmckh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: przed redakcja ROKMC.KH_ODB i ROKMC.KH_MSC
::  OLD: \be_rmckh/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
KH_MSC.f_clear();
KH_MSC_Z.KH:=ROKMC.KH;
ROKMC.KH<>null


\rkprz011
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: akcja rekord - kolorowanie
::  OLD: \rkprz011/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.SZ='S'
|| exec('rekprzed','color','FAKS#01')
|| exec('rekprzed','color','ZAK#01')
?}


\faks_sym_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła określiająca ikony
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
"
   {? FAKS.STAT_REJ='T' || exec('zaakceptowany','icon')
   |? FAKS.STAT_REJ='Z' || exec('zarejestrowany','icon')
   |? FAKS.STAT_REJ='N' || exec('pusta','#icon')
   |? FAKS.STAT_REJ='A' || exec('anulowany','icon')
   || exec('pusta','#icon')
   ?}
"


\hist_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: nadanie/wycofanie znacznika akceptacji faktury historycznej
::   WE: _a - 1-akceptacja 0-wycofanie akceptacji
::       _b - 'Z'-zakończenie, 'T'-akceptacja
::   WY: 1-udalo sie 0-niestety nie
::  OLD: \hist_akc/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_nam:=form(8+FAKS.FKSQL);
_ref:=FAKS.FKSQL;
FAKS.cntx_psh;
FAKS.use(_nam);
FAKS.clear;
{? FAKS.seek(_ref,_nam)
|| FAKS.AKC:={? _a || 'T' || 'N' ?};
   FAKS.INTRAKC:={? _a & FAKS.IST_TYP<>'' || exec('get','#params',100202) || 'N' ?};
   FAKS.STAT_REJ:=_b;
   exec('zest','faktury_nag'); _wyn:=FAKS.put(1)
?};
FAKS.cntx_pop;
_wyn


\po_what
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po zmiennej FKOR.WHAT dla WHAT='H' wyzerowanie pola ROKMC.AR
::  OLD: \po_what/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
{? FKOR.WHAT='H'
||
   ROKMC.AR:=ST.AR;
   ROKMC.AM:=ST.AM
?};
win_disp();
1


\kor_his_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Obsługa dołącz po zakończeniu edycji (FAKS.edit)
::   WE: _a - _a - wynik funkcji edit
::       params_get()   - ustawiany w kor_his w !lsp_fak_dkhi.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| BEER.MSK:='faktu';
   exec('inf_dod','fakso',-1)
?}


\fz_walh_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Przed wyświetleniem FZ.WAL_H
::----------------------------------------------------------------------------------------------------------------------
FZ.WAL_H:=FAKS.WAL;
''


\faks_kzf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: faktury korekty zbiorczej
::   WE: [_a] - 0/1 - zakładka w obszarze
::       [_b] - 0/1 - aktywacja okna
::       [_c] - zmienna do przekazywania zmiennych
::  OLD: \faks_kzf/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_tab_in_area:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_grp_disp:={? _tab_in_area=1 || _b=0 || 0 ?};
_var:={? _tab_in_area=1 || _c || exec('pozycje_fak_var','faktury_poz') ?};

{? _tab_in_area=0 & FAKS.WHERE<>'K' & FAKS.WHERE<>'N'
||
   FUN.info('Funkcja niedostępna.\nDotyczy korekt zbiorczych.'@); return
?};

params_set(params_get());

_r_lock:=0;
{? _tab_in_area<>2 & ~_grp_disp
||
   _r_lock:=exec('r_lock_one','#table',FAKS,FAKS.ref());
   {? ~_r_lock || exec('who_rlock_faks','faktury_nag'); return ?}
?};

_done:="VAR_DEL.delete('__faks_kzf_env')";
{? ~_tab_in_area || _done() ?};
_kz_uid:=exec('FindAndGet','#table',FAKS,FAKS.ref(),,"FAKS.uidref()",'');
:: środowisko korekty zbiorczej
exec('faks_kzf_env','faktury_nag1',$FAKS.ref());

{? ~_tab_in_area | _tab_in_area=2
||
   _wer:=exec('faks_kzf_wer','faktury_nag1',_tab_in_area);
   FAKS_KZF.win_sel(_wer);
   {? ~_tab_in_area || FAKS_KZF.cntx_psh() ?}
?};

FAKS_KZF.index('KZ_UID');
FAKS_KZF.prefix(_kz_uid);

{? _tab_in_area
||
   _var.R_LOCK:=_r_lock;
   {? _tab_in_area=2 || _wer ?}
||
   _result:=FAKS_KZF.select();
   FAKS_KZF.cntx_pop();
:: pobranie aktualnego nagłówka korekty zbiorczej
   FAKS.get();
   FAKS.memo_get(,'UWAGI');
   exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock);
   _result
?}


\faks_kzf_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_var:=_a;
exec('r_unlock_one','#table',FAKS,FAKS.ref(),_var.R_LOCK)


\faks_kzf_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: usuwanie faktur do korygowania
::   WE: _a - FAKS.ref() - korekty zbiorczej
::       _b - 0-usuwać zaznaczone, 1-usuwać wszystkie
::  OLD: \faks_kzf_usu/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_kz:=_a;
_del_all:=_b;

{? _del_all
||
   _Sel:=tab_tmp(
      ,'KOR_NR'   ,'INTEGER'     ,'KOR_NR'
      ,'REF'      ,'INTEGER'     ,'REF');
   {? FAKS_KZF.first
   ||
      {!
      |?
         _Sel.KOR_NR:=FAKS_KZF.KOR_NR;
         _Sel.REF:=#FAKS_KZF.ref;
         _Sel.add & FAKS_KZF.next
      !}
   ?}
||
   _Sel:=FAKS_KZF.sel_aget;
   FAKS_KZF.sel_adel;

   {? {? _Sel.first
      || ~FUN.ask('Usunąć zaznaczone faktury z listy do korygowania?'@)
      || ~FUN.ask('Usunąć fakturę z listy do korygowania?'@)
      ?}
   || return(0)
   ?};

   {? ~_Sel.first || _Sel.REF:=#FAKS_KZF.ref; _Sel.add ?}
?};

{? _Sel.last()
||
   exec('ini_kom','#message','Wynik usuwania faktur z korekty zbiorczej'@);
   {!
   |?
      {? FAKS_KZF.seek(_Sel.REF,)
      || {? FAKS_KZF.KOR<>'' || exec('faks_kzf_kus','faktury_nag',0,0,_kz) ?};
         {? FAKS_KZF.KOR='' || FAKS_KZF.del ?}
      ?};
      _Sel.prev()
   !};
:: aktualizacja wartości do rabatu
   exec('faks_kzr_war2rab_licz','faktury_nag1');
:: aktualizacja kwoty naliczonego rabatu
   exec('faks_kzr_war_rabk_licz','faktury_nag1');
:: tworzenie tymczasowej definicji rabatu
   exec('faks_kzr_copy','faktury_nag1',FAKS.ref(),'N',0);
   exec('end_kom','#message')
?};

0


\faks_kzf_kus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: usuwa korekte wystawiona do faktury
::   WE: _a - wyswietlac pytania
::       _b - inicjowac komunikaty
::       _c - FAKS.ref() korekty zbiorczej
::  OLD: \faks_kzf_kus/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_kom:=_a;
_ini_kom:=_b;
_kz:=_c;

_Sel:=FAKS_KZF.sel_aget;
FAKS_KZF.sel_adel;

{? _kom
|| {? ~FUN.ask({? _Sel.first || 'Usunąć zaznaczone korekty?'@ || 'Usunąć korektę?'@ ?})
   || FAKS_KZF.sel_adel;
      return(0)
   ?}
?};

{? _kom & FAKS.WHERE='N'
||
   _loop:=_Sel.first();
   {!
   |? _loop
   |!
      _loop:=_Sel.del()
   !};
   _loop:=FAKS_KZF.last();
   {!
   |? _loop
   |!
      _Sel.REF:=#FAKS_KZF.ref;
      _loop:=_Sel.add() & FAKS_KZF.prev()
   !}
||
   {? ~_Sel.first || _Sel.REF:=#FAKS_KZF.ref; _Sel.add ?}
?};

{? _Sel.first
||
   FAKS.get;
   _kor_nag:=FAKS.WHERE='N';
   {? _ini_kom || exec('ini_kom','#message','Wynik tworzenia korekt'@) ?};

   _oddz:=FAKS.ODDZ;
   FAKS.cntx_psh;
   {!
   |?
      {? FAKS_KZF.seek(_Sel.REF,)
      ||
         {? FAKS_KZF.KOR=''
         ||
            exec('add_kom','#message','Do faktury nie wystawiono korekty zbiorczej.'@,7,FAKS_KZF.FAK_SYM)
         ||
            exec('open','open_tab',_oddz,8+FAKS_KZF.KOR+2);
            FAKS.prefix;
            {? FAKS.seek(FAKS_KZF.KOR)
            ||
               {? _kor_nag & FAKS.AKC='N'
               ||
                  FAKS.AKC:='T';
                  FAKS.KZ_AKC:='N';
                  exec('zest','faktury_nag');
                  FAKS.put()
               ?};
               {? FAKS.AKC='T' || exec('fak_wyc','faktury_nag',1,0) ?};
               {? FAKS.get & FAKS.AKC='N' & exec('usun_fak','faktury_nag',0,,0)
               ||
                  FAKS_KZF.KOR:='';
                  FAKS_KZF.KOR_NR:=0;
                  FAKS_KZF.KOR_SYM:='';
                  FAKS_KZF.NETTO:=FAKS_KZF.VAT:=FAKS_KZF.BRUTTO:=0;
                  FAKS_KZF.NETW:=FAKS_KZF.BRTW:=0;
                  FAKS_KZF.put
               ?}
            ?}
         ?}
      ?};
      _Sel.next
   !};
   {? _kor_nag
   ||
      FAKS_KZF.cntx_psh();
      _loop:=FAKS_KZF.last();
      {!
      |? _loop
      |!
         _loop:=
            {? FAKS_KZF.KOR<>''
            ||
               exec('FindAndGet','#table',FAKS,FAKS_KZF.KOR,,"
                  FAKS.AKC:='N';
                  FAKS.KZ_AKC:='N';
                  exec('zest','faktury_nag');
                  FAKS.put()
               ",'');
               0
            ||
               FAKS_KZF.prev()
            ?}
      !};
      FAKS_KZF.cntx_pop()
   ?};
   FAKS.cntx_pop;

:: aktualizacja wartości FAKS_KZF, FAKS na podstawie korekt częściowych
   exec('sumfakkzf','faktury_wspolne',$_kz);
:: aktualizacja wartości do rabatu
   exec('faks_kzr_war2rab_licz','faktury_nag1');
:: aktualizacja kwoty naliczonego rabatu
   exec('faks_kzr_war_rabk_licz','faktury_nag1');
:: tworzenie tymczasowej definicji rabatu
   exec('faks_kzr_copy','faktury_nag1',_kz,'N',0);

   exec('open','open_tab',ST.ODDZ,$ST.AR+2);

   {? _ini_kom || exec('end_kom','#message') ?}
?};

0


\faks_kzf_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dokument sprzedaży - Korygowane pozycje - okno redagowania
::   WE: params_get()   - ustawiane w exec('fak_pop','faktury_nag')
::                      - ustawiane w exec('wystinne','faktury_nag')
::                      - ustawiane w exec('koryguj','faktury_nag')
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_btnRuleResult:='';

_fld:=params_exec('faks_edit_finisher','faktury_nag',FAKS.ref());
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| {? params_exec('faks_kzf','faktury_nag')
   || _btnRuleResult:='key:F2'
   ?}
?};

_btnRuleResult


\faks_wal_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Przed redagowaniem FAKS.WAL
::----------------------------------------------------------------------------------------------------------------------
{? exec('jakiwal','eurusd','SLWAL','walut')
   & params_exec('kznf2_czy_ed','faktury_nag')
|| FAKS.T().PAR='N'
?}


\faks_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: przed FAKS.del() - szuka powiazanego dokumentu opakowan do usuniecia
::   WE: _a - $FAKS.ref()
::  OLD: \faks_del/opakow.fml
::----------------------------------------------------------------------------------------------------------------------
OPAK_N.cntx_psh();
OPAK_N.index('FAKS');
OPAK_N.prefix(_a);
{? OPAK_N.first()
||
   OPAK_N.clear();
   OPAK_N.FAKS:='';
   OPAK_N.put();

   OPAK_P.cntx_psh();
   OPAK_P.index('OPAK_N');
   OPAK_P.prefix(OPAK_N.ref());
   {? ~OPAK_P.first()
   || exec('opkn_del','opakow',0,'F')
   ?};
   OPAK_P.cntx_pop()
?};
OPAK_N.cntx_pop();
''


\wystkzak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: wystawienie korekty zakupowej
::   WE: [_a] - FAKS.ref - ref dokumentu korygowanego
::             (gdy podamy to nie pyta o KH i FAKS)
::       _b - typ dokumnetu sprzedazy
::  OLD: \wystkzak/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};
_typysp_t:=_b;
:: Dokument Businesslink
_context:=~~;
_context_bl:=0;
{? type_of(params_get())<>~~ & var_pres('context',params_get())=type_of(obj_new('obj'))
||
   _context:=params_get().context;
   _context_bl:=var_pres('BL',_context)=type_of('') & _context.BL='T'
?};

BEER.WYSTFAKS:=null;
FAKS.cntx_psh;
BEER.SZ:='Z';
:: sprawdzenie czy kontrola stanowiska sprzedazy
_wymaga:=exec('get','#params',6102,2,OPERATOR.USER);
{? exec('czy_z_ok','okresy',-3) & (_wymaga<>'T' | _wymaga='T' & ST.STZ<>null)
||
   _oddz:=ST.ODDZ;
   _ar:=ST.AR;
   FKOR.KH:=null;
   ROKMC.AR:=ST.AR;
   FKOR.win_edit('KZK');
:: Okna słowników
   KH.win_dict('SEL');
   KH.actions('SEL','W');
   {? {? _a=null
      || {? _context_bl
         ||
            {? ST.ODDZ='' || ST.ODDZ:=_context.ODDZ ?};
            ROKMC.AR:=_context.DW~1; {? ST.AR=0 || ST.AR:=ROKMC.AR ?};
            FKOR.KH:=_context.KH;
            FKOR.WHAT:={? exec('FindAndGet','#table',TYPYSP,_context.TYPYSP,,"TYPYSP.UE='T'",0) || 'W' || 'F' ?}
         ?};
         _edit:=FKOR.edit("exec('chk_kor_rej','faktury_nag')");
         _edit
      || FAKS.clear();{? FAKS.seek(_a) || ROKMC.AR:=FAKS.AR;ROKMC.AM:=FAKS.AM;1 || 0 ?}
      ?}
   ||
      {? ST.ODDZ<>_oddz | ST.AR<>ROKMC.AR
      || exec('open','open_tab',ST.ODDZ,2-$ROKMC.AR)
      ?};
      {? _a=null
      ||
         _where:={? FKOR.WHAT='W' || 'E' || 'Z' ?};
         _where1:=_where;
         {? _context_bl
         ||
            _where1:={? exec('FindAndGet','#table',TYPYSP,_context.TYPYSP,,"TYPYSP.UE='T'",0) || 'E' || 'Z' ?};
            {? exec('FindAndGet','#table',TYPYSP,_context.TYPYSP,,"TYPYSP.ZAL='T'",0) || _where:='L' ?}
         ?};
         _ndx:=FAKS.ndx_tmp('',,'SZ',,,'T','PAR',,'T','KOR',,'AKC',,,'WHERE',,,'WHERE1',,,'KH',,,'STS',,);
         FAKS.index(_ndx);
         {? _wymaga='T'
         || FAKS.prefix(BEER.SZ,'N','N','T',_where,_where1,FKOR.KH,ST.STZ)
         || FAKS.prefix(BEER.SZ,'N','N','T',_where,_where1,FKOR.KH)
         ?};

         _FAKS:=tab_tmp(1
            ,'NR'       ,'INTEGER'     ,'Numer'@
            ,'ID'       ,'STRING[50]'  ,'Zewnętrzny symbol dokumentu'@
            ,'SYM'      ,'STRING[20]'  ,'Symbol'@
            ,'DW'       ,'DATE'        ,'Data wystawienia'@
            ,'KH'       ,'STRING[150]' ,'Kontrahent'@
            ,'NETTO'    ,'REAL'        ,'Netto'@
            ,'BRUTTO'   ,'REAL'        ,'Brutto'@
            ,'NWAL'     ,'STRING[8]'   ,'Waluta'@
            ,'UIDREF'   ,'STRING[48]'  ,'FAKS.uidref()'@);
         _loop:=FAKS.first();
         {!
         |? _loop
         |!
            _FAKS.NR:=FAKS.NR;
            _FAKS.ID:=FAKS.ID;
            _FAKS.SYM:=FAKS.SYM;
            _FAKS.DW:=FAKS.DW;
            _FAKS.KH:=FAKS.KH().NAZ_P;
            _FAKS.NETTO:=FAKS.NETTO;
            _FAKS.BRUTTO:=FAKS.BRUTTO;
            _FAKS.NWAL:=FAKS.NWAL().KOD;
            _FAKS.UIDREF:=FAKS.uidref();
            _FAKS.add();
            _loop:=FAKS.next()
         !};
         _wer:=_FAKS.mk_sel('Rejestracja korekty'@,,,'faksrejkorekty',,,,,'U');
         _FAKS.win_fld(_wer,,'NR',,,5,,,'Numer'@);
         _FAKS.win_fld(_wer,,'ID',,,20,,,'Zewnętrzny symbol dokumentu'@);
         _FAKS.win_fld(_wer,,'SYM',,,20,,,'Symbol'@);
         _FAKS.win_fld(_wer,,'DW',,,10,,,'Data wystawienia'@);
         _FAKS.win_fld(_wer,,'KH',,,20,,,'Kontrahent'@);
         _FAKS.win_fld(_wer,,'NETTO',,,10,2,,'Netto'@);
         _FAKS.win_fld(_wer,,'BRUTTO',,,10,2,,'Brutto'@);
         _FAKS.win_fld(_wer,,'NWAL',,,6,,,'Waluta'@);
         _FAKS.win_act(_wer,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
         _fb:="
            FAKS.cntx_psh();
            FAKS.use(8+(cur_tab().UIDREF+16));
            FAKS.prefix();
            {? FAKS.seek(cur_tab().UIDREF) || exec('pozycje_fak','faktury_poz') ?};
            FAKS.cntx_pop()";
         _FAKS.win_act(_wer,,'Formuła','Poz&ycje'@@,,,_fb);
         _fb:="
            FAKS.cntx_psh();
            FAKS.use(8+(cur_tab().UIDREF+16));
            FAKS.prefix();
            {? FAKS.seek(cur_tab().UIDREF) || exec('fall_rek','faktury_nag') ?};
            FAKS.cntx_pop()";
         _FAKS.win_act(_wer,,'Wyświetl',,,,_fb);
         _ff:="
            FAKS.cntx_psh();
            FAKS.use(8+(cur_tab().UIDREF+16));
            FAKS.prefix();
            _result:={? FAKS.seek(cur_tab().UIDREF) || exec('faks_sym_ib','faktury_nag')() || '' ?};
            FAKS.cntx_pop();
            _result";
         _FAKS.win_fml(_wer,,'SYM',,'ICON_BEFORE',_ff);
         _FAKS.win_sel(_wer);
         _FAKS.hdr_sel();
         {? FKOR.WHAT='F'
         || _FAKS.hdr_sel(' '+'do dokumentu zakupu'@)
         || _FAKS.hdr_sel(' '+'do dokumentu wewnętrznego'@)
         ?};
         _koryguj:=_FAKS.select() & FAKS.seek(_FAKS.UIDREF);
         FAKS.ndx_drop(_ndx)

      || _koryguj:=FAKS.seek(_a);
         {? _koryguj || ROKMC.AR:=FAKS.AR ?};
         HELP.KHB:=null();
         HELP.KH_ODB:=null()
      ?};


      {? _koryguj || params_exec('koryguj','faktury_nag',,,_typysp_t) ?};
      {? ST.ODDZ<>_oddz | ST.AR<>_ar
      || ST.ODDZ:=_oddz;
         ST.AR:=_ar;
         exec('open','open_tab',ST.ODDZ,2-$ST.AR)
      ?}
   || {? _edit=1 || FUN.info('Nie znaleziono dokumentu korygowanego.'@) ?}
   ?};
   KH.actions('SEL')
|? _wymaga='T' & ST.STZ=null
|| FUN.info('Ponieważ w parametrach systemu ustawiono kontrolę wypełnienia stanowiska zakupów,\n'
    'aby skorzystać z tej funkcji systemu należy wybrać stanowisko zakupu.'@)
?};
FAKS.cntx_pop;
exec('ustaw_fk','faktury_nag',BEER.WYSTFAKS);
1


\context_lsp_fak_dzdm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: kontekst czynności LSP_FAK_DZDM
::   WE: [_a] - 'Z'-zamówienie sprzedaży 'D'-dostaw domyślnie brak ''
::       [_b] - klucz grupujący domyślnie brak
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>2 || _a:='' ?}  || _a:='' ?};
{? _>=2  || {? type_of(_b)<>2 || _b:='' ?}  || _b:='' ?};

_context:=obj_new('REF');
{? _a=''
|| _context.REF:=null()
|? _a='Z' & _b<>''
|| _context.REF:=exec('FindInSet','#table','ZK_RN','GRP_KEY',_b-1,,"ZK_RN.N",,,null());
   {? _context.REF=null()
   || ZK_RN.cntx_psh();
      _Mask:=ZK_RN.names();
      _loop:=_Mask.first();
      {!
      |? _loop
      |!
         ZK_RN.use(_Mask.NAME);
         _context.REF:=exec('FindInSet','#table','ZK_RN','GRP_KEY',_b-1,,"ZK_RN.N",,,null());
         _loop:=_context.REF=null() & _Mask.next()
      !};
      ZK_RN.cntx_pop()
   ?}
|? _a='D' & _b<>''
|| _context.REF:=exec('FindInSet','#table','ZD_RN','GRP_KEY',_b-1,,"ZD_RN.ZD_NAG",,,null())
|| _context.REF:=null()
?};
_context


\faks_sym_it
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła określająca ikony
::----------------------------------------------------------------------------------------------------------------------
"{? FAKS.SZ='S' & ((';GMN'*FAKS.WHERE)>1 | FAKS.T().HIS='T')
 || {? exec('wydaFaks','faktury_wspolne')
    || exec('zafakturowany','icon')
    |? FAKS.WHERE='G' & FAKS.T().KOR='N' & ~exec('onlyUsl','faktury_wspolne',FAKS.ref())
    || exec('brakdokumentu','icon')
    || exec('pusta','#icon')
    ?}
 |? FAKS.SZ='Z'
 || {? FAKS.GEN | exec('przyFaks','faktury_wspolne',FAKS.ref)
    || exec('zafakturowany','icon')
    || exec('pusta','#icon')
    ?}
 || ''
 ?}
"


\usu_refk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: usuwa informacje o realizacjach dla danej faktury
::  OLD: \usu_refk/zkd.fml
::   WY: 0 lub najmniejsza rok
::----------------------------------------------------------------------------------------------------------------------
params_exec('usu_refk','faktury_nag1')


\who_rlock_faks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Sprawdzenie kto blokuje rekord FAKS
::   WE: _a - 0-sprawdzać kto blokuje, 1-nie sprawdzać i zapisać informację do __kom
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')=type_of(0) & _a
|| __kom.add('Dokument obsługuje inny użytkownik.'@,7)
|| {? FUN.ask('Dokument %1 obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@ [FAKS.SYM]) & FAKS.r_lock(1,,1)
   || FAKS.r_unlock()
   ?}
?}


\gen_zz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: generuje dokumenty zwrotu do dokumentu korekty
::       !! UWAGA -> nie ma juz miejsca na zmienne lokalne, nalezy uzywac globalnych
::   WE: _a - TYPYDOK.ref
::       [_b] - czy automatyczna generacja dokumentu 0-nie (domyślnie) 1-tak
::   WY: czy wygenerowano dokumenty
::  OLD: \gen_zz/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_typydok:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_wyn:=0;
Ddok:=null;
VAR_DEL.delete('__fksql','__notkor','__typwn','__typpn','__kh_wn','__kh_pn','__odbwn','__odbpn','__genaut');
__notkor:=FAKS.WHERE='N';
__genaut:={? var_pres('_b')=type_of(0) || _b || 0 ?};
__fksql:=FAKS.FKSQL;
{? __notkor
|| __typwn:=exec('FindInSet','#table','TYPYDOK','KRZ','T','N',,1,'T',null());
   __typpn:=exec('FindInSet','#table','TYPYDOK','KRZ','T','T',,1,'T',null());
   __kh_wn:=FAKS.KH;
   __kh_pn:=exec('FindAndGet','#table',FAKS,FAKS.FKSQL,,"KH",null());
   __odbwn:=FAKS.KH_ODB;
   __odbpn:=exec('FindAndGet','#table',FAKS,FAKS.FKSQL,,"KH_ODB",null());
   _typydok:=__typpn
|| __typwn:=__typpn:=__kh_wn:=__kh_pn:=__odbwn:=__odbwn:=null()
?};
FAKS.cntx_psh;
{? FAKS.SZ<>'S' | FAKS.T().KOR<>'T'
|| FUN.info('Dostępne dla korekt sprzedaży.'@);
   _wyn:=-1
|? FAKS.T().HIS='N' & exec('dok_maga_fa','faktury_nag',__fksql)
|| _wyn:=-3
|? __notkor & (__typwn=null() | __typpn=null())
|| FUN.info('Brak definicji typów dokumentów korygujących (przychodowy/rozchodowy, korygujący, zewnętrzny).'@);
   _wyn:=-1
||
   _continue:=1;
:: czy korekta historyczna
   _hist:=FAKS.T().HIS='T';
   FAKS.cntx_psh();
   FAP.index('FAP');
   FAP.prefix(FAKS.ref);

   _il_mag:=sql('select reference ref from MG');
   {? _il_mag.last()
   ||
      _ost_mag:=(BB.sqlint(_il_mag.REF))
   ||
      {? do_state()=0 || FUN.info('Brak zdefiniowanych magazynów. Wystawienie dokumentu zwrotu niemożliwe.'@) ?};
      FAKS.cntx_pop(); FAKS.cntx_pop();
      return(0)
   ?};

   {? var_pres('mag')>100 || obj_del(mag) ?};
   mag:=obj_new(_ost_mag); {! _i:=1.._ost_mag |! mag[_i]:=0 !};

:: szukanie faktury pierwotnej
   _fkor:=FAKS.KOR;

:: dla faktury do paragonu szukanie paragonu by znalezc dokument magazynowy
   FAKS.cntx_psh();
   FAKS.use(ref_name(__fksql));
   FAKS.clear();
   {? FAKS.seek(__fksql) & (5+FAKS.SYMF)='faktu'
   ||
      _rsql:=sql($"select FAKS.REFERENCE REF from @FAKS where FAKS.SYMF=':_a'",$FAKS.ref())
   ||
      _rsql:=tab_tmp(,'REF','STRING[16]',); _rsql.REF:=__fksql; _rsql.add()
   ?};
   FAKS.cntx_pop();

   VAR_DEL.delete('X_Xa','__sqlfap','__pozfap','__matfap','__fapwar','__dkcref','__jsprz','__wgewi');

   X_Xa:=tab_tmp(
      ,'POZ','INTEGER','Poz'
      ,'SYM','STRING[20]','Dok.mag.'
      ,'P','INTEGER','Poz'
      ,'KTM','STRING[50]','Indeks'
      ,'MG','STRING[10]','Magazyn'
      ,'IL','REAL','Ilość'
      ,'IL_KOR','REAL','Ilość do korekty'
      ,'C','REAL','Cena'
      ,'DK_C','STRING[20]','Cecha'
      ,'RDK','INTEGER','rdk'
      ,'NDK','STRING[8]','ndk'
      ,'REF','STRING[16]','ref'
      ,'DOST','DATE','Data dost.'
      ,'JM','STRING[20]','Jm'
      ,'PAL','STRING[30]','Paleta'
      ,'TW','DATE','Termin ważności'
      ,'CZY','STRING[1]','Czy term.ważn.'
      ,'DKC','STRING[1]','Czy wymagana cecha'
      ,'WAR01','STRING[25]','Atr.cechy dost. 1'
      ,'WAR02','STRING[25]','Atr.cechy dost. 2'
      ,'WAR03','STRING[25]','Atr.cechy dost. 3'
      ,'WAR04','STRING[25]','Atr.cechy dost. 4'
      ,'WAR05','STRING[25]','Atr.cechy dost. 5'
      ,'WAR06','STRING[25]','Atr.cechy dost. 6'
      ,'WAR07','STRING[25]','Atr.cechy dost. 7'
      ,'WAR08','STRING[25]','Atr.cechy dost. 8'
      ,'WAR09','STRING[25]','Atr.cechy dost. 9'
      ,'WAR10','STRING[25]','Atr.cechy dost. 10'
      ,'WS2','REAL','współczynnik'
      ,'IL2','REAL','ilość druga'
      ,'IL_KOM','REAL','ilość magazynowa'
      ,'J2','STRING[10]','jednostka magazynowa'
      ,'JSQL','STRING[16]','SQL drugiej jednostki'
      ,'JS','STRING[10]','jm'
      ,'WGEWI','INTEGER','jedn.podstawowa'
      ,'KP','STRING[2]','kraj pochodzenia'
   );
   exec('war_hid','ceny',X_Xa,'C');
::    tabela X_Xb
   VAR_DEL.delete('X_Xb');

   X_Xb:=tab_tmp(,'POZ','INTEGER','Poz'
          ,'KTM','STRING[50]','Indeks'
          ,'N','STRING[100]','Nazwa'
          ,'IL','REAL','Skorygowano o ilość'
          ,'IL_MAG','REAL','Rozpisano na dok.'
          ,'REF','STRING[16]','Ref'
          ,'JM','STRING[20]','Jm'
          ,'CZY','STRING[1]','Czy term.ważn.'
          ,'DKC','STRING[1]','Czy wymagana cecha'
          ,'JS','STRING[10]','jm');

::    sprawdzanie w magazynach
   _ar:=FAKS.AR;_am:=FAKS.AM;
   _bufdk:=tab_tmp(1,'REF','STRING[16]','');

   FAKS.cntx_psh();
   FAP.cntx_psh();
   _one_par:=_rsql.first() & ~_rsql.next();
   _loop:=_rsql.first();
   {!
   |? _loop
   |!
:: >>> loop
      _rf:=null;
      _fapnam:=FAP.name()-2;
      FAKS.use(ref_name(__fksql));
      FAP.use(_fapnam+(ref_name(__fksql)+2));
      FAKS.clear();
      {? FAKS.seek(_rsql.REF)
      ||
         _rf:=FAKS.ref()
      ||
         FUN.emsg('Nie znaleziono faktury pierwotnej - %1.'@[_fkor]);
         VAR_DEL.delete('mag');
         _szukf:=0
      ?};

      FAP.index('FAP');
      FAP.prefix(FAKS.ref);
      {? FAP.first()
      ||
         {!
         |?
            __sqlfap:=$FAP.ref();
            __pozfap:={? FAP.SYMF_FAP='' || FAP.POZ || exec('FindAndGet','#table',FAP,FAP.SYMF_FAP,,"FAP.POZ",0) ?};
            __matfap:=FAP.M;
            __dkcref:={? FAP.M().M_ATR=null() | FAP.DK_C=null() || '' || $FAP.DK_C ?};
            __jsprz:=FAP.JM().KOD;
            __wgewi:=exec('czyJS','jm',FAP.M);
            _continue:={? _one_par || 1 || FAP.SYMF_FAP<>'' ?};
            {? _continue=0
            ||
               FUN.info('Brak powiązania pozycji faktury z pozycją paragonu.\nZwrot do magazynu jest niedostępny.'@)
            ?};
            {? _continue & FAP.FAKS().T().HIS='N'
            ||
               FAKS.cntx_psh();
               FAP.cntx_psh();
               FAP2DK.cntx_psh();
               exec('open','open_tab',ST.ODDZ,(8+$FAP.ref())+2,'sp');
               FAP2DK.index('NFAP');
               FAP2DK.prefix($FAP.ref());
               {? FAP2DK.first()
               ||
                  {!
                  |? _fapil:=fabs(FAP.IL2);
                     exec('open','open_tab',ST.ODDZ,(8+FAP2DK.DK)+2,'sp');
                     DK.index('FAP');
                     DK.prefix(__sqlfap,__sqlfap);
                     {? DK.first()
                     ||
                        {!
                        |? _czy_z_ok:=exec('czy_z_ok','okresy',1,,,,DK.N().MAG);
                           {? _continue || _continue:=_czy_z_ok ?};
                           _mdst:=(1+DK.N().MAG().TYP)='D';
                           _autoroz:=DK.N().TYP().P='T'
                                   | DK.N().TYP().P='N' & _mdst & (';FL'*DK.N().TYP().AFIFO)>1;
                           {? _continue
                            & DK.M().RODZ='T' & (_autoroz | DK.ZP=0) & __matfap=DK.M
                            & (~_mdst | __dkcref='' | __dkcref=$DK.DK_C | (DK.ZP & __dkcref<>$DK.DK_C))
                            & ~(DK.N().TYP().DK='T' & DK.N().TYP().Z='T')
                            & (_bufdk.clear(); ~_bufdk.find_key($DK.ref(),))
                           ||
                              X_Xa.blank();
                              X_Xa.POZ:=__pozfap;
                              X_Xa.SYM:=DK.N().SYM;
                              X_Xa.P:=DK.P;
                              X_Xa.KTM:=DK.M().KTM;
                              X_Xa.MG:=DK.N().MAG().SYM;
                              X_Xa.IL:=DK.IL-exec('iljestzz','faktury_nag',__fksql,DK.RDK,DK.NDK,$DK.ref(),FAP.POZ);
                              X_Xa.C:=exec('cena_mag','ceny',DK.M,DK.RDK,DK.NDK,,DK.C);
                              X_Xa.RDK:=DK.RDK;
                              X_Xa.NDK:=DK.NDK;
                              X_Xa.DK_C:=DK.DK_C().SYM;
                              {! _i:=1..10
                              |! ($('X_Xa.WAR'+form(_i,-2,,'99')))():=($('DK.DK_C().WAR'+form(_i,-2,,'99')))()
                              !};
                              X_Xa.REF:=BB.refsql(DK.ref);
                              X_Xa.JM:=DK.M().J().KOD;
                              X_Xa.CZY:=DK.M().CZY_TW;
                              X_Xa.TW:=DK.TW;
                              X_Xa.DKC:={? DK.M().M_ATR<>null || 'T' || 'N' ?};
                              X_Xa.J2:=DK.J2().KOD;
                              X_Xa.JSQL:=$DK.J2;
                              X_Xa.WS2:={? DK.T2='M' & DK.WS2>0 || 1/DK.WS2 || DK.WS2 ?};
                              X_Xa.IL2:=DK.IL2;
                              _fapil-=DK.IL2;
                              X_Xa.JS:=__jsprz;
                              X_Xa.WGEWI:=__wgewi;
                              X_Xa.KP:=DK.KP;
                              {? X_Xa.IL>0
                              || X_Xa.add();
                                 _bufdk.blank();
                                 _bufdk.REF:=$DK.ref();
                                 _bufdk.add(1)
                              ?};
                              DK.cntx_psh();
                              DK.index('DOKZP');
                              DK.prefix(DK.N,#DK.ref);
                              {? DK.first()
                              ||
                                 {!
                                 |?
                                    {? (DK.FAP='' | DK.FAP=__sqlfap)
                                     & __matfap=DK.M  & (~_mdst | __dkcref='' | __dkcref=$DK.DK_C)
                                     & (_bufdk.clear(); ~_bufdk.find_key($DK.ref(),))
                                    || X_Xa.blank();
                                       X_Xa.POZ:=__pozfap;
                                       X_Xa.SYM:=DK.N().SYM;
                                       X_Xa.P:=DK.P;
                                       X_Xa.KTM:=DK.M().KTM;
                                       X_Xa.MG:=DK.N().MAG().SYM;
                                       X_Xa.IL:=DK.IL-
                                          exec('iljestzz','faktury_nag',__fksql,DK.RDK,DK.NDK,$DK.ref(),FAP.POZ);
                                       X_Xa.C:=exec('cena_mag','ceny',DK.M,DK.RDK,DK.NDK,,DK.C);
                                       X_Xa.RDK:=DK.RDK;
                                       X_Xa.NDK:=DK.NDK;
                                       X_Xa.REF:=BB.refsql(DK.ref);
                                       X_Xa.JM:=FAP.M().J().KOD;
                                       X_Xa.CZY:=DK.M().CZY_TW;
                                       X_Xa.TW:=DK.TW;
                                       X_Xa.DK_C:=DK.DK_C().SYM;
                                       {! _i:=1..10
                                       |! ($('X_Xa.WAR'+form(_i,-2,,'99')))():=($('DK.DK_C().WAR'+form(_i,-2,,'99')))()
                                       !};
                                       X_Xa.DKC:={? DK.M().M_ATR<>null || 'T' || 'N' ?};
                                       X_Xa.J2:=DK.J2().KOD;
                                       X_Xa.WS2:={? DK.T2='M' & DK.WS2>0 || 1/DK.WS2 || DK.WS2 ?};
                                       X_Xa.IL2:=DK.IL2;
                                       X_Xa.JSQL:=$DK.J2;
                                       X_Xa.JS:=__jsprz;
                                       X_Xa.WGEWI:=__wgewi;
                                       X_Xa.KP:=DK.KP;
                                       {? X_Xa.IL>0
                                       || X_Xa.add();
                                          _bufdk.blank();
                                          _bufdk.REF:=$DK.ref();
                                          _bufdk.add(1)
                                       ?}
                                    ?};
                                    DK.next()
                                 !}
                              ?};
                              DK.cntx_pop()
                           ?};
                           _continue & DK.next()
                        !}
                     ?};
                     _continue & FAP2DK.next()
                  !};
                  exec('open','open_tab',ST.ODDZ,2-$_ar,'sp')
               ?};
               FAKS.cntx_pop();
               FAP.cntx_pop();
               FAP2DK.cntx_pop()
            ?};
            {? _continue & __notkor & FAP.M().RODZ='T' & FAP.POZP=0
            || _poz:=__pozfap;
               {? 'MG'*FAP.FAKS().WHERE & FAP.T2='G' & FAP.J2<>FAP.JM
               || _ilekor:=FAP.IL2
               || _ilekor:=FAP.IL
               ?};
               X_Xb.prefix(_poz);
               {? X_Xb.first()
               || X_Xb.IL+=_ilekor $FAP.M().DOKL;
                  X_Xb.put()
               ||
                  X_Xb.POZ:=_poz;
                  X_Xb.KTM:=FAP.M().KTM;
                  X_Xb.N:=FAP.M().N;
                  X_Xb.IL:=-_ilekor $FAP.M().DOKL;
                  X_Xb.REF:=BB.refsql(FAP.ref);
                  X_Xb.JM:=FAP.M().J().KOD;
                  X_Xb.CZY:=FAP.M().CZY_TW;
                  X_Xb.JS:=FAP.JM().KOD;
                  {? X_Xa.CZY<>'T' & FAP.M().SETW='P' || X_Xa.CZY='t' ?};
                  X_Xb.DKC:={? FAP.M().M_ATR<>null || 'T' || 'N' ?};
                  X_Xb.add()
               ?}
            ?};
            _continue & FAP.next()
         !}
      ?};
:: <<< loop
      _loop:=_continue & _rsql.next()
   !};
   obj_del(_bufdk);
   FAP.cntx_pop();
   FAKS.cntx_pop();
   exec('open','open_tab',ST.ODDZ,2-$ST.AR,'sp');

   FAKS.cntx_pop();

   X_Xb.fld_fml('IL','DISPLAY_FORMAT',"'out_prec='+
      {? (2+cur_kwin())='e_'
      || $exec('FindInSet','#table','M','MATKTM',cur_tab.KTM,cur_tab.KTM,\"M.DOKL\",,,0)
      || $ST.DOKL ?}");
   X_Xb.fld_fml('IL','EDIT_FORMAT',"'in_prec='+
      {? (2+cur_kwin())='e_'
      || $exec('FindInSet','#table','M','MATKTM',cur_tab.KTM,cur_tab.KTM,\"M.DOKL\",,,0)
      || $ST.DOKL ?}");
   X_Xb.fld_fml('IL_MAG','DISPLAY_FORMAT',"'out_prec='+
      {? (2+cur_kwin())='e_'
      || $exec('FindInSet','#table','M','MATKTM',cur_tab.KTM,cur_tab.KTM,\"M.DOKL\",,,0)
      || $ST.DOKL ?}");
   X_Xb.fld_fml('IL_MAG','EDIT_FORMAT',"'in_prec='+
      {? (2+cur_kwin())='e_'
      || $exec('FindInSet','#table','M','MATKTM',cur_tab.KTM,cur_tab.KTM,\"M.DOKL\",,,0)
      || $ST.DOKL ?}");

   {? _continue & FAP.first()
   ||
      {!
      |?
         {? FAP.M().RODZ='T' & FAP.POZP=0
         || __fapwar:=exec('fap_war','faktury_poz',,0);
            {? __fapwar='-I' | (__fapwar='+I' & FAP.POZP)
            || _poz:={? FAP.FAKS().T().HIS='T'
                     || FAP.POZ
                     || {? FAP.POZP<>0
                        || exec('zwr_pozp','faktury_nag',FAP.FAKS().LKSQL,FAP.POZP)
                        || exec('zwr_pozp','faktury_nag',FAP.FAKS().LKSQL,FAP.POZ)
                        ?}
                     ?};
               {? 'MG'*FAP.FAKS().WHERE & FAP.T2='G' & FAP.J2<>FAP.JM
               || _ilekor:=FAP.IL2
               || _ilekor:=FAP.IL
               ?};
               X_Xb.prefix(_poz);
               {? X_Xb.first()
               || X_Xb.IL+=_ilekor $FAP.M().DOKL;
                  X_Xb.put()
               ||
                  X_Xb.POZ:=_poz;
                  X_Xb.KTM:=FAP.M().KTM;
                  X_Xb.N:=FAP.M().N;
                  X_Xb.IL:=_ilekor $FAP.M().DOKL;
                  X_Xb.REF:=BB.refsql(FAP.ref);
                  X_Xb.JM:=FAP.M().J().KOD;
                  X_Xb.CZY:=FAP.M().CZY_TW;
                  X_Xb.DKC:={? FAP.M().M_ATR<>null || 'T' || 'N' ?};
                  X_Xb.JS:=FAP.JM().KOD;
                  X_Xb.add();
                  {? _hist
                  || X_Xa.blank();
                     X_Xa.POZ:=FAP.POZ ;
                     X_Xa.SYM:='';
                     X_Xa.P:=FAP.POZ;
                     X_Xa.KTM:=FAP.M().KTM;
                     _mg:=ST.MAG().SYM;
                     X_Xa.MG:=
                        {? exec('canByDoneZz2Mg','magdok_wspolne',_mg,FKOR.TYPYDOK)
                           & exec('czy_z_ok','okresy',1,0,,,ST.MAG)
                        || _mg
                        || ''
                        ?};
                     X_Xa.IL:=-{? (FAP.T2='G' | FAP.FAKS().WHERE='G') & FAP.IL2<>0
                               || FAP.IL2
                               || FAP.IL
                               ?} $FAP.M().DOKL;
                     X_Xa.J2:=FAP.J2().KOD;
                     X_Xa.WS2:=1;
                     X_Xa.IL2:=X_Xa.IL;
                     X_Xa.JSQL:=$FAP.J2;
                     X_Xa.C:=0;
                     X_Xa.RDK:=0;
                     X_Xa.NDK:='';
                     X_Xa.REF:='';
                     X_Xa.JM:=FAP.M().J().KOD;
                     X_Xa.CZY:=FAP.M().CZY_TW;
                     X_Xa.DKC:={? FAP.M().M_ATR<>null || 'T' || 'N' ?};
                     X_Xa.JS:=FAP.JM().KOD;
                     X_Xa.KP:=FAP.KP;
                     X_Xa.add()
                  ?}
               ?}
            ?}
         ?};
         FAP.next()
      !}
   ?};

::    ustawianie wartosci domyslnych
   X_Xb.prefix();
   {? _continue & X_Xb.first()
   ||
      {!
      |?
         _m_il:=X_Xb.IL;
         X_Xa.prefix(X_Xb.POZ);
         {? X_Xa.first()
         || {!
            |?
               {? |_m_il>=X_Xa.IL
               || X_Xa.IL_KOR:=-X_Xa.IL
               || X_Xa.IL_KOR:=_m_il
               ?};
               X_Xa.IL_KOM:={? ~X_Xa.WGEWI
                            || X_Xa.IL_KOR
                            || {? X_Xa.JM<>X_Xa.J2 & X_Xa.WS2>0 || X_Xa.IL_KOR/X_Xa.WS2 || 0 ?}
                            ?};
               X_Xa.put();
               _m_il:=_m_il - X_Xa.IL_KOR;
               X_Xa.next() & _m_il<>0
            !}
         ?};
         X_Xb.IL_MAG:=X_Xb.IL-_m_il;
         {? __notkor || X_Xb.IL:=X_Xb.IL_MAG ?};
         X_Xb.put();
         X_Xb.next()
      !}
   ?};

   {? _continue
   ||
::       typ dokumentu ZZ
      _typ_dok:=exec('FindAndGet','#table',TYPYDOK,_typydok,,"TYPYDOK.T",'');
      {? _typ_dok<>''
      || _typ_dok:='"TYPYDOK".T=\''+_typ_dok+'\''
      || _typ_dok:=exec('tpkor2zz_lista','typysp',FAKS.T);
         {? _typ_dok<>''
         || _typ_dok:='"TYPYDOK".T in ('+_typ_dok+')'
::         || _typ_dok:=exec('get','#params',300501,2);
::            {? _typ_dok=''
::            || _typ_dok:='"TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DN=\'T\''
::                         +'and "TYPYDOK".TD=\'\' and "TYPYDOK".DS=\'N\''
::            ?}
         || _typ_dok:='"TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DN=\'T\''
                      +'and "TYPYDOK".TD=\'\' and "TYPYDOK".DS=\'N\''
         ?}
      ?};
      _wz:=FKOR.TYPYDOK:=exec('typ_dok','lmg',_typ_dok);
      FKOR.KK:=FKOR.TYPYDOK().KK;
      KK.win_dict('SLO');

::       ustawianie okienka
      exec('ustaw_ww','eurusd',{? BEER.SZ='S' || 'F' || 'K' ?}); exec('ust_lw','eurusd',1);
      _edit:=exec('fap_win_disp_kor','faktury_poz');
      FAP.win_edit(_edit);
      DK.win_edit('G'+BEER.LW+'RED2R');

::       okno X_Xa
      _acr:=X_Xa.mk_sel('Ilości na dokumentach magazynowych wg magazynów'@,,0,'#sgenzzs_xa'+{? _hist || 'his' || '' ?},1,,,,'U');
      {? ~_hist
      ||
         X_Xa.win_fld(_acr,,'POZ',,,-3,,1,'Pozycja'@);
         X_Xa.win_fld(_acr,,'SYM',,,-10,,1,'Dokument magazynowy'@);
         X_Xa.win_fld(_acr,,'P',,,-3,,1,'Pozycja'@);
         X_Xa.win_fld(_acr,,'KTM',,,-10,,1,'Indeks'@);
         X_Xa.win_fld(_acr,,'MG',,,-7,,1,'Magazyn'@);
         X_Xa.win_fld(_acr,FKOR,'DK_CZZ',,,6,,0,'Cecha'@);
         X_Xa.win_fld(_acr,,'IL',,,11,3,1,'Ilość'@);
         X_Xa.win_fld(_acr,,'JM',,,-4,,1,'jm'@);
         X_Xa.win_fld(_acr,,'C',,,8,2,1,'Cena'@);
         X_Xa.win_fld(_acr,,'IL_KOR',,,11,3,,'Ilość do korekty'@);
         X_Xa.win_fld(_acr,,'JS',,,-4,,1,'jm'@);
         X_Xa.win_fld(_acr,,'PAL',,,8,,0,'Paleta'@);
         X_Xa.win_fld(_acr,,'TW',,,10,,0,'Termin ważności'@);
         X_Xa.win_fld(_acr,,'CZY',,,-3,,1,,,'Czy wymagany termin ważności'@,2,,"'T'","'N'");
         X_Xa.win_fld(_acr,,'DKC',,,-3,,1,,,'Czy wymagana cecha'@,2,,"'T'","'N'")
      ||
         X_Xa.win_fld(_acr,,'POZ',,,-3,,1,'Pozycja'@);
         X_Xa.win_fld(_acr,,'KTM',,,20,,1,'Indeks'@);
         X_Xa.win_fld(_acr,FKOR,'MAGZZ',,,7,,0,'Magazyn'@);
         X_Xa.win_fld(_acr,FKOR,'DK_CZZ',,,6,,0,'Cecha'@);
         X_Xa.win_fld(_acr,,'IL',,,11,3,1,'Ilość'@);
         X_Xa.win_fld(_acr,,'JM',,,-4,,1,'jm'@);
         X_Xa.win_fld(_acr,,'C',,,8,2,0,'Cena'@);
         X_Xa.win_fld(_acr,,'IL_KOR',,,11,3,1,'Ilość do korekty'@);
         X_Xa.win_fld(_acr,,'JS',,,-4,,1,'jm'@);
         X_Xa.win_fld(_acr,,'PAL',,,8,,0,'Paleta'@);
         X_Xa.win_fld(_acr,,'TW',,,10,,0,'Termin ważności'@);
         X_Xa.win_fld(_acr,,'CZY',,,3,,1,,,'Czy wymagany termin ważności'@,2,,"'T'","'N'");
         X_Xa.win_fld(_acr,,'DKC',,,3,,1,,,'Czy wymagana cecha'@,2,,"'T'","'N'")
      ?};
::    czy wymagane konto
      {? FKOR.TYPYDOK().WK='T' || X_Xa.win_fld(_acr,FKOR,'KK','SYM','KONTASYS',12,,,'Konto'@) ?};

      _fb:="{? X_Xa.REF<>''
            || ND.cntx_psh();
               DK.cntx_psh();
               DK.use(8+X_Xa.REF);
               DK.clear();
               {? DK.seek(X_Xa.REF)
               || ND.use(8+$DK.N);
                  exec('disp_dkm','magdok_poz')
               ?};
               DK.cntx_pop();
               ND.cntx_pop()
            ?}";
      X_Xa.win_act(_acr,0,'Wyświetl',,,,,_fb);
      X_Xa.win_act(_acr,0,'Popraw',,,,,,1);
      _rekord_fb:="
         _mg:={? FAKS.T().HIS='T' || FKOR.MAGZZ || X_Xa.MG ?};
         _act:=
            {? exec('FindInSet','#table','MG','MAGAZYNY',_mg,,\"MG.PAL<>'T'\",,,0)
            || 'Y'
            || ''
            ?};
         X_Xa.actions_grayed(cur_win(1,1),_act);
         ~~
      ";
      {? ~_hist
      ||
         X_Xa.win_act(_acr,0,'Rekord',,,,_rekord_fb,"exec('zz2std','faktury_nag')")
      ||
         X_Xa.win_act(_acr,0,'Formuła','&Rozpisz'@@,,,"exec('rozphist','faktury_nag')",,0,,,,'R');
         X_Xa.win_act(_acr,0,'Formuła','&Usuń'@@,,,"exec('delphist','faktury_nag')",,0,,,,'U');
         X_Xa.win_act(_acr,0,'Rekord',,,,_rekord_fb,"exec('zz2hist','faktury_nag')")
      ?};
      X_Xa.win_act(_acr,0,'Formuła','Prz&ypisz paletę'@@,,,"exec('adzz_pal','faktury_nag')",,0,1
                       ,"exec('adzz_pal','faktury_nag')",,'Y');

      X_Xa.fld_fml('IL','DISPLAY_FORMAT',"'out_prec='+
         {? (2+cur_kwin())='e_'
         || $exec('FindInSet','#table','M','MATKTM',cur_tab.KTM,cur_tab.KTM,\"M.DOKL\",,,0)
         || $ST.DOKL ?}");
      X_Xa.fld_fml('IL','EDIT_FORMAT',"'in_prec='+
         {? (2+cur_kwin())='e_'
         || $exec('FindInSet','#table','M','MATKTM',cur_tab.KTM,cur_tab.KTM,\"M.DOKL\",,,0)
         || $ST.DOKL ?}");
      X_Xa.fld_fml('IL_KOR','DISPLAY_FORMAT',"'out_prec='+
         {? (2+cur_kwin())='e_'
         || $exec('FindInSet','#table','M','MATKTM',cur_tab.KTM,cur_tab.KTM,\"M.DOKL\",,,0)
         || $ST.DOKL ?}");
      X_Xa.fld_fml('IL_KOR','EDIT_FORMAT',"'in_prec='+
         {? (2+cur_kwin())='e_'
         || $exec('FindInSet','#table','M','MATKTM',cur_tab.KTM,cur_tab.KTM,\"M.DOKL\",,,0)
         || $ST.DOKL ?}");
      X_Xa.fld_fml('C','DISPLAY_FORMAT',"'out_prec='+
         {? (2+cur_kwin())='e_'
         || $exec('FindInSet','#table','M','MATKTM',cur_tab.KTM,cur_tab.KTM,\"M.DOKL_C\",,,0)
         || $ST.DOKL_C ?}");
      X_Xa.fld_fml('C','EDIT_FORMAT',"'in_prec='+
         {? (2+cur_kwin())='e_'
         || $exec('FindInSet','#table','M','MATKTM',cur_tab.KTM,cur_tab.KTM,\"M.DOKL_C\",,,0)
         || $ST.DOKL_C ?}");
      FKOR.fld_fml('ILZ','EDIT_FORMAT',"'in_prec='+
         {? (2+cur_kwin())='e_'
         || $exec('FindInSet','#table','M','MATKTM',X_Xa.KTM,X_Xa.KTM,\"M.DOKL\",,,0)
         || $ST.DOKL ?}");

      X_Xa.fld_fml('PAL','BEFORE_DISPLAY',"exec('pwzz_pal','faktury_nag')");
      X_Xa.fld_fml('PAL','BEFORE_EDIT',"exec('przz_pal','faktury_nag')");
      X_Xa.fld_fml('PAL','F3',"exec('f3zz_pal','faktury_nag')");
      X_Xa.fld_fml('PAL','AFTER_EDIT',"exec('pozz_pal','faktury_nag')");
      {? _hist
      || X_Xa.fld_fml('TW','BEFORE_DISPLAY',"exec('pwzz_ptw','faktury_nag',0,1)");
         X_Xa.fld_fml('TW','BEFORE_EDIT',"exec('przz_ptw','faktury_nag',0,1)")
      || X_Xa.fld_fml('TW','BEFORE_DISPLAY',"exec('pwzz_ptw','faktury_nag',,1)");
         X_Xa.fld_fml('TW','BEFORE_EDIT',"exec('przz_ptw','faktury_nag',,1)")
      ?};
      X_Xa.fld_fml('DK_C','BEFORE_DISPLAY',"exec('pwzz_ptw','faktury_nag')");
      X_Xa.fld_fml('DK_C','BEFORE_EDIT',"exec('przz_ptw','faktury_nag')");

      X_Xa.win_sel(_acr);

::       okno X_Xb
      _acb:=X_Xb.mk_sel('Pozycje korygowane'@,,0,'#sgenzzwa_xa'+{? _hist || 'his' || '' ?},,,,,'U');
      X_Xb.win_fld(_acb,,'POZ',,,-3,,,'Pozycja'@);
      X_Xb.win_fld(_acb,,'KTM',,,29,,,'Indeks'@);
      X_Xb.win_fld(_acb,,'N',,,40,,,'Nazwa'@);
      X_Xb.win_fld(_acb,,'IL',,,12,3,,'Skorygowano o ilość'@);
      X_Xb.win_fld(_acb,,'IL_MAG',,,-12,3,,'Rozpisano na dokumencie'@);
      X_Xb.win_fld(_acb,,'JS',,,4,,,'jm'@);
      X_Xb.win_fld(_acb,,'CZY',,,-3,,1,,,'Czy wymagany termin ważności'@,2,,"'T'","'N'");
      X_Xb.win_fld(_acb,,'DKC',,,-3,,1,,,'Czy wymagana cecha'@,2,,"'T'","'N'");
      {? ~_hist
      || X_Xb.win_act(_acb,0,'Formuła','&Akceptuj'@@,,,,"exec('wer2hist','faktury_nag',0)",1,,,,'A')
      || X_Xb.win_act(_acb,0,'Formuła','&Akceptuj'@@,,,,"exec('wer2hist','faktury_nag',1)",1,,,,'A')
      ?};
      X_Xb.win_btn(_acb,'text=%1,btn_label_align=center,panel=bottom,align=begin'['&Akceptuj'@],'menu:A');
      X_Xb.win_act(_acb,0,'Wyświetl',,,,,
                    "{? FAP.find_key(X_Xb.POZ) & FAP.FAKS().T().HIS='N'
                     || exec('wysw_kor','faktury_poz');
                        DOKUM.cntx_psh();
                        exec('bl_dokum_seek','zbl',FAKS);
                        FAP.display;
                        DOKUM.cntx_pop()
                     ?}");
      X_Xb.win_sel(_acb);

      _grp:=$('X_Xa.prefix(X_Xb.POZ);_il:=0;
               {? X_Xa.first() || {! |? _il+=X_Xa.IL_KOR;X_Xa.next() !} ?};
               X_Xb.IL_MAG:=_il;X_Xb.put();win_disp();X_Xa.first();
               grp_disp(X_Xa,\''+_acr+'\')');
      _gr2:=$('
               X_Xa.cntx_psh();
               _il:=0;
               {? X_Xa.first()
               || {!
                  |? _il+=X_Xa.IL_KOR;
                     X_Xa.next()
                  !}
               ?};
               X_Xb.IL_MAG:=_il;
               X_Xb.put();
               X_Xa.cntx_pop();
               grp_disp(X_Xb,\''+_acb+'\')');

      _sel:=X_Xb.grp_make('Dokument: '@+FAKS.SYM,,'#zzxdok_mag'+{? _hist || 'his' || '' ?});
      X_Xb.grp_sel(_sel,X_Xb,_acb,,_grp,,,10,,,,,'maximized_with_title');
      X_Xb.grp_splt(_sel,,'horizontal','tab1');
      X_Xb.grp_sel(_sel,X_Xa,_acr,,_gr2,0,12,,,,,,'maximized_with_title');

      X_Xb.win_sel(_sel)
   ?};

::    generowanie dokumentu
::    dodatkowo sprawdzenie uprawnien do typow dokumentow
   {? _continue & (__genaut | X_Xb.select()) & (_wz:=exec('sprtypzz','faktury_nag',_wz))<>null
   ||
::       pobranie wolnych numerów
      VAR_DEL.delete('MG_ZZ_NR');
      MG_ZZ_NR:=tab_tmp(
         ,'MG','STRING[8]','Magazyn'
         ,'NR','INTEGER','Nr');
      _red:=ND.mk_edit('Dokument zwrotu'@,,'nd_nr');
      ND.win_efld(_red,,'NR');
      ND.win_efld(_red,,'SYM',,,,,1);
      ND.win_edit(_red);
      _cfg:=',btn_label_align=center,panel=bottom,align=end';
      ND.win_ebtn(_red,'text='+'&OK'+_cfg,'key:F2');
      ND.win_ebtn(_red,'text='+'&Anuluj'+_cfg,'key:Esc');

      _mg:=~~;
      X_Xa.prefix();
      _loop:=X_Xa.first() & X_Xb.first();
      {!
      |? _loop
      |!
         {? _mg<>X_Xa.MG
         ||
            _mg:=X_Xa.MG;
            _mg_ref:=exec('FindInSet','#table','MG','MAGAZYNY',_mg,_mg,,1,,null());
            ND.blank();
            ND.AR:=FAKS.DZ~1;
            ND.AM:=FAKS.DZ~2;
            {? __notkor || ND.TYP:=__typpn || ND.TYP:=_wz ?};
            {? _mg_ref<>null()
            || ND.MAG:=_mg_ref
            ?};
            POM.TAB:='ND';
            POM.TYPDOK:=ND.TYP().KOD;
            {? exec('spr_wol','numery')
            || FUN.info('W numeracji występują wolne numery.'@);
               _nr:=exec('nr_dok','numery','ND');
               {? type_of(_nr)=type_of(0) & exec('nr_new','numery')
               || MG_ZZ_NR.MG:=_mg;
                  MG_ZZ_NR.NR:=_nr;
                  MG_ZZ_NR.add()
               ?}
            ?}
         ?};
         _loop:=X_Xa.next()
      !};

      {? var_pres('__lp')>0 & type_of(__lp)=1 || 1 || __lp:=1 ?};
      {? ~__genaut || do() ?};

      {? X_Xb.first()
      ||
::          klucz grupujący
         _grp_key:=tm_stamp()+'1';

         {!
         |?
            echo('Trwa generowanie dokumentów zwrotu ...'@,$X_Xb.POZ);
            _sref:=X_Xb.REF;
            FAP.clear();
            {? ~FAP.seek(_sref,FAP.name()) || undo() ?};

            _m_il:=X_Xb.IL;
            X_Xa.prefix(X_Xb.POZ);
            {? X_Xa.first()
            || {!
               |?
                  {? X_Xa.IL_KOR<>0 & do_state()<>2
                  || _pal:={? X_Xa.PAL='' || null || exec('FindInSet','#table','PAL','PAL',X_Xa.PAL,X_Xa.PAL) ?}
                  || _pal:=null
                  ?};

                  {? _pal<>null & X_Xa.IL_KOR<>0 & do_state()<>2
                  || PAL.cntx_psh();
                     PAL.clear();
                     {? PAL.seek(_pal)
                     || PAL.AKT:='T';
                        PAL.RSQL:=$PAL.ref();
                        PAL.put()
                     ?};
                     PAL.cntx_pop();
                     PAL_POZ.cntx_psh();
                     PAL_POZ.clear();
                     PAL_POZ.blank();
                     PAL_POZ.clear();
                     PAL_POZ.PAL:=_pal;
                     PAL_POZ.IL:=PAL_POZ.ILP:=-X_Xa.IL_KOR;
                     PAL_POZ.AKT:='T';
                     PAL_POZ.M:=FAP.M;
                     PAL_POZ.TW:=X_Xa.TW;
                     PAL_POZ.JM:=FAP.M().J;
                     PAL_POZ.C:=X_Xa.C;
                     PAL_POZ.DK_C:={? X_Xa.DK_C<>''
                                   || exec('FindInSet','#table','DK_C','SYM',X_Xa.DK_C,X_Xa.DK_C)
                                   || null
                                   ?};
                     exec('uzupIDkod','magdok_palety',PAL_POZ);
                     PAL_POZ.add(1);
                     PAL_POZ.cntx_pop();
                     exec('znacznik','magdok_palety',_pal);
                     exec('ktm2pal','magdok_palety',0)
                  ?};

                  {? ~_hist
                  || _sref:=X_Xa.REF;
                     exec('open','open_tab',(1+(5-X_Xa.REF)),(2+(6-X_Xa.REF)),'sp');
                     DK.clear();
                     {? ~DK.seek(_sref,)
                    || undo(); _dk:=null; _magazyn:=null
                     || _dk:=DK.ref; _magazyn:=DK.N().MAG
                     ?};
                     exec('open','open_tab',ST.ODDZ,2-$ST.AR,'sp');
                     {? X_Xa.IL_KOR<>0 & do_state<>2
                     || exec('one_poz_p','faktury_wspolne',_wz,_rf,_ar,_am,FAP.M,
                         X_Xa.IL_KOR,FKOR.BIL,_dk,FAP.ref,_magazyn,_hist,X_Xa.DOST,X_Xa.C,X_Xa.DK_C,_pal,X_Xa.TW
                         ,_grp_key,X_Xa.IL_KOM,X_Xa.WS2,X_Xa.JSQL,X_Xa.KP)
                     ?}
                  || _dk:=null; _magazyn:=exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG);
                     {? X_Xa.IL_KOR<>0 & do_state<>2
                     || exec('one_poz_p','faktury_wspolne',_wz,_rf,_ar,_am,FAP.M,
                         X_Xa.IL_KOR,FKOR.BIL,_dk,FAP.ref,_magazyn,_hist,X_Xa.DOST,X_Xa.C,X_Xa.DK_C,_pal,X_Xa.TW
                         ,_grp_key,X_Xa.IL_KOM,X_Xa.WS2,X_Xa.JSQL,X_Xa.KP)
                     ?}
                  ?};
                  X_Xa.next()
               !}
            ?};
            X_Xb.next()
         !};
::          tworzenie informacji dodatkowych
         {! _i:=1.._ost_mag
         |! {? mag[_i]<>null
            || _oldmag:=ND.name()+2;
               exec('mag_open','open_tab',ST.ODDZ,ref_name(mag[_i])+2);
               ND.clear();
               {? ND.seek(mag[_i]) & ND.Z='N'
               || exec('inf_dod','fakso',0,'nagdo');
                  exec('dk_sum','magdok_wspolne',ND.ref());
                  {? __notkor
                  ||
::                      utworzenie przeciwstawnego dokumentu na podstawie danego
                     {? ~exec('copyND2ND','faktury_nag',ND.ref(),__typwn,__kh_wn,__odbwn) || undo() ?}
                  ?}
               ?};
               exec('mag_open','open_tab',ST.ODDZ,_oldmag)
            ?}
         !}
      ?};
      {? do_state<>2
      || _wyn:=1
      ?};
      {? ~__genaut || end() ?};
      {? _wyn=0
      ||
::          przywracanie wolnych numerów
         _loop:=MG_ZZ_NR.first();
         {!
         |? _loop
         |!
            numer:=MG_ZZ_NR.NR;
            oldnumer:=1;
            exec('nr_old','numery');

            _loop:=MG_ZZ_NR.next()
         !}
      ?};
      {? var_pres('__zam')>100 || exec('odt_zk_tymc','zamsiw_wspolne') ?}
   ?};
   exec('fap_win_edel','faktury_poz',_edit)
?};
FAKS.cntx_pop();
VAR_DEL.delete('__sqlfap','__pozfap','__matfap','mag','__fapwar','__dkcref','__jsprz');
VAR_DEL.delete('__fksql','__notkor','__genaut');
echo();
_wyn


\zz2std
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: po popraw kontrola pozycji na ZZ-tce
::  OLD: \zz2std/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? X_Xa.IL_KOR>0 || FUN.info('Należy podać ujemną ilość do korekty.'@); _wyn:='IL_KOR' ?};
{? _wyn='' || X_Xa.IL_KOM:={? ~X_Xa.WGEWI
                           || X_Xa.IL_KOR
                           || {? X_Xa.JM<>X_Xa.J2 & X_Xa.WS2>0 || X_Xa.IL_KOR/X_Xa.WS2 || 0 ?} ?}
                           ?};
{? _wyn='' & |X_Xa.IL_KOM>0 & |X_Xa.IL_KOM>X_Xa.IL
|| FUN.info('Ilość do korekty jest większa od ilości dla pozycji.'@); _wyn:='IL_KOR'
|? _wyn='' & X_Xa.IL_KOM=0 & |X_Xa.IL_KOR>X_Xa.IL
|| FUN.info('Ilość do korekty jest większa od ilości dla pozycji.'@); _wyn:='IL_KOR'
?};
{? _wyn='' || _wyn:=exec('zz_kk','faktury_nag') ?};

_wyn


\zz_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: kontrola konta kosztowego dla typow ZZ
::  OLD: \zz_kk/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? FKOR.TYPYDOK().WK='T' & FKOR.KK=null
||
   FUN.info('Dla dokumentu zwrotu typu %1 wymagane jest podanie konta kosztowego.'@[FKOR.TYPYDOK().T]);
   _wyn:='KK'
?};
_wyn


\rozphist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: rozpisuje dana pozycje na kilka
::  OLD: \rozphist/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
params_exec('rozphist','faktury_nag1')


\delphist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: usuwa pozycje z rozpisania
::  OLD: \delphist/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
params_exec('delphist','faktury_nag1')


\zz2hist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po popraw kontrola pozycji na ZZ-tce - dla korekty historycznej
::   WY: ''-jest OK lub pole niewypelnione
::  OLD: \zz2hist/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
params_exec('zz2hist','faktury_nag1')


\spr_magh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy podano prawidlowy magazyn i czy mamy do niego uprawnienia
::  OLD: \spr_magh/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
params_exec('spr_magh','faktury_nag1')


\adzz_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przypisuje palete do zaznaczonych pozycji
::  OLD: \adzz_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
params_exec('adzz_pal','faktury_nag1')


\pwzz_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietleniem pola palety dla za
::  OLD: \pwzz_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? X_Xa.MG<>'' & exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG,"MG.PAL",,,'')='T'
|| 1
|| ''
?}


\przz_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola palety dla dok.zwrotu
::  OLD: \przz_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? X_Xa.MG<>'' & exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG,"MG.PAL",,,'')='T'
|| 1
|| 0
?}


\f3zz_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: klawisz F3 pola palety dla dok.zwrotu
::  OLD: \f3zz_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
params_exec('f3zz_pal','faktury_nag1')


\pozz_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pola palety dla dok.zwrotu
::  OLD: \pozz_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
params_exec('pozz_pal','faktury_nag1')


\pwzz_ptw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietleniem pola TW dla ZZ
::   WE: [_a] - 1(domyślnie)-dotyczy normanej korekty, 0-historycznej
::       [_b] - 1-dotyczy terminu 0(domyślnie)-nie
::  OLD: \pwzz_ptw/mws.fml
::       \pwzz_ptw/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 1 ?};
  _tw:={? var_pres('_b')=type_of(0) || _b || 0 ?};
{? ~_tw
|| {? {? _tryb
      || X_Xa.MG<>'' & exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG,"MG.PAL",,,'')='T'
      || (~-X_Xa.CZY)='T'
      ?}
   || 1
   || ''
   ?}
|| {? (~-X_Xa.CZY)='T' | (X_Xa.MG<>'' & exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG,"MG.PAL",,,'')='T')
   || 1
   || ''
   ?}
?}


\przz_ptw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola TW dla ZZ
::   WE: [_a] - 1(domyślnie)-dotyczy normanej korekty, 0-historycznej
::       [_b] - 1-dotyczy terminu 0(domyślnie)-nie
::  OLD: \przz_ptw/mws.fml
::       \przz_ptw/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 1 ?};
  _tw:={? var_pres('_b')=type_of(0) || _b || 0 ?};
{? ~_tw
|| {? {? _tryb
      || X_Xa.MG<>'' & exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG,"MG.PAL",,,'')='T'
      || (~-X_Xa.CZY)='T'
      ?}
   || 1
   || 0
   ?}
|| {? (~-X_Xa.CZY)='T' | (X_Xa.MG<>'' &  exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG,"MG.PAL",,,'')='T')
   || 1
   || 0
   ?}
?}


\iljestzz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: oblicza ilosc juz przypisana na ZZ-tkach
::   WE: _a - ref SQL-owy korygowanej faktury
::       _b - RDK
::       _c - NDK
::       _d - $DK.ref (WZ-ki)
::       _e - FAP.POZ pozycja korygowanej faktury
::   WY: ilosc przypisana na ZZ-tkach
::  OLD: \iljestzz/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_faks:=exec('FindAndGet','#table',FAKS,_a,,,null());
_poz:=_e;
_wyn:=0;

_fak:=FAKS.name()-2;
_fap:=FAP.name()-2;
_dk:=DK.name()-2;

FAKS.cntx_psh();
FAP.cntx_psh();
DK.cntx_psh();
FAKS.use(ref_name(_faks));
FAP.use(_fap+(FAKS.name()+2));
FAP.index('FAP');
FAP.prefix(_faks,_poz);
{? FAP.first()
||
   _reffap:=$FAP.ref; _fksql:=$FAP.FAKS;
   _msk:=exec('tab_mask','faktury_wspolne',5,form(ST.AR-2000,-2,0,'99'));
   _msk.clear;
   {? _msk.first
   || {!
      |? FAKS.use(_fak+_msk.ROK);
         FAP.use(_fap+_msk.ROK);
         DK.use(_dk+_msk.ROK);

         FAKS.clear();
         FAKS.index('OREFK');
         FAKS.prefix('S',_fksql);
         {? FAKS.first
         || {!
            |?
               FAP.index('FAP');
               FAP.prefix(FAKS.ref,_poz);
               {? FAP.first || _wyn+=exec('pob_z_zz','faktury_nag',$FAP.ref(),_b,_c,_d) ?};
               FAKS.next
            !}
         ?};
         _msk.next
      !}
   ?}
?};

FAKS.cntx_pop();
FAP.cntx_pop();
DK.cntx_pop();
_wyn


\pob_z_zz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: pobiera ilosci z ZZ-tki o zgodnych RDK,NDK
::   WE: _a - ref SQL-owy FAP-a
::       _b - RDK
::       _c - NDK
::       _d - $DK.ref (WZ-ki)
::   WY: ilosc przypisana na ZZ-tkach
::  OLD: \pob_z_zz/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? _a<>''
||
   DK.index('FAP');
   DK.prefix(_a,_a);
   {? DK.first()
   ||
      {!
      |?
         _wyn+={? DK.PLUS='T' & DK.RDK=_b & DK.NDK=_c & DK.REF_KOR=_d || DK.IL || 0 ?};
         DK.next()
      !}
   ?}
?};
_wyn


\wer2hist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: weryfikacja pozycji do zwrotu z korekty historycznej
::   WE: _a - 0-zwykla korekta 1-korekta historyczna
::   WY: 1-jest OK 0-nie
::  OLD: \wer2hist/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_pal:=0;
_tw:=0;
_dat:=0;
_dkc:=0;
_beerm:=BEER.M;
_info:=1;

{? _a
|| X_Xa.cntx_psh();
   X_Xa.clear();
   X_Xa.prefix(X_Xb.POZ);
   {? X_Xa.first()
   || {!
      |? {? exec('zz2hist','faktury_nag')<>'' || _info:=_wyn:=0 ?};
         BEER.M:=exec('FindInSet','#table','M','MATKTM',X_Xa.KTM,X_Xa.KTM);
         {? _wyn  & X_Xa.MG<>'' & exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG,"MG.PAL",,,'')='T'
         || {?  X_Xa.PAL=''
            || _wyn:=0;
               _pal:=1
            |? BEER.M().CZY_TW='T' & X_Xa.TW=date(0,0,0)
            || _wyn:=0;
               _tw:=1
            |? (1+exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG,"MG.TYP",,,''))='D'
              & BEER.M().M_ATR<>null & X_Xa.DK_C=''
            || _wyn:=0;
               _dkc:=1
            ?}
         |? X_Xa.MG<>''
         || _mag:=exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG);
            _time:=exec('spr_dttm','magazyn_inw',FAKS.MAG,FAKS.DZ,1);
            {? (*_time)>(*time(23,59,0)) || _time:=time(0,0,0) ?};
            {? exec('sprprzec','magazyn_przec',_mag,FAKS.DZ,BEER.M,_time)>=3
            || _wyn:=0;
               _dat:=1
            |? (1+exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG,"MG.TYP",,,''))='D'
              & BEER.M().M_ATR<>null & X_Xa.DK_C=''
            || _wyn:=0;
               _dkc:=1
            ?}
         ?};
         _wyn & X_Xa.next()
      !}
   ?};
   X_Xa.cntx_pop()
|| X_Xb.cntx_psh();
   X_Xb.clear();
   {? X_Xb.first()
   || {!
      |? _wyn:=X_Xb.IL=X_Xb.IL_MAG;
         _wyn & X_Xb.next()
      !}
   ?};
   X_Xb.cntx_pop();
   X_Xa.cntx_psh();
   X_Xa.clear();
   X_Xa.prefix(X_Xb.POZ);
   {? X_Xa.first()
   || {!
      |? BEER.M:=exec('FindInSet','#table','M','MATKTM',X_Xa.KTM,X_Xa.KTM);
         {? X_Xa.MG<>'' & exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG,"MG.PAL",,,'')='T'
         || {?  X_Xa.PAL=''
            || _wyn:=0;
               _pal:=1
            |? BEER.M().CZY_TW='T' & X_Xa.TW=date(0,0,0)
            || _wyn:=0;
               _tw:=1
            |? (1+exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG,"MG.TYP",,,''))='D'
              & BEER.M().M_ATR<>null & X_Xa.DK_C=''
            || _wyn:=0;
               _dkc:=1
            ?}
         |? X_Xa.MG<>''
         || _mag:=exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG);
            _time:=exec('spr_dttm','magazyn_inw',FAKS.MAG,FAKS.DZ,1);
            {? (*_time)>(*time(23,59,0)) || _time:=time(0,0,0) ?};
            {? exec('sprprzec','magazyn_przec',_mag,FAKS.DZ,BEER.M,_time)>=3
            || _wyn:=0;
               _dat:=1
            |? (1+exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG,"MG.TYP",,,''))='D'
              & BEER.M().M_ATR<>null & X_Xa.DK_C=''
            || _wyn:=0;
               _dkc:=1
            ?}
         ?};
         _wyn & X_Xa.next()
      !}
   ?};
   X_Xa.cntx_pop()
?};
BEER.M:=_beerm;
{? ~_wyn & _info
|| FUN.info('Niezgodności na pozycjach.'@
    +{? _pal || '\nW magazynach z obsługą palet wymagane jest przypisanie palety dla każdej pozycji.'@ || '' ?}
    +{? _tw || '\nNiektóre z indeksów wymagają przypisania terminu ważności.'@ || '' ?}
    +{? _dat || '\nNiektóre z indeksów są na arkuszu przecen należy zmienić datę zwrotu korekty.'@ || '' ?}
    +{? _dkc || '\nNiektóre z indeksów wymagają przypisania cechy dostawy (magazyn typu DOSTAWY, DOSTEWI).'@ || '' ?})
?};
{? _wyn=1 & exec('zz_kk','faktury_nag')<>'' || _wyn:=0 ?};
{? _wyn=1 || sel_exit() ?};
_wyn


\zwr_pozp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: zwraca wartosc pola POZP dla pierwszego dokumentu typu korekta
::   WE: _a - LKSQL - ref poprzedniego dokumentu
::       _b - FAP.POZ
::   WY: wartosc FAP.POZP
::  OLD: \zwr_pozp/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=_b;

FAKS.cntx_psh();
FAP.cntx_psh();
FAKS.use(form(8+_a));
FAP.use('fakpo'+(form(8+_a)+3));
FAKS.clear();
{? FAKS.seek(_a,form(8+_a)) & FAKS.T().KOR='T'
|| FAP.index('FAP');
   FAP.prefix(FAKS.ref());
   {? FAP.find_key(_b)
   || _wyn:={? FAP.POZP<>0
            || FAP.POZP
            || exec('zwr_pozp','faktury_nag',FAKS.LKSQL,FAP.POZ)
            ?}
   ?}
?};
FAKS.cntx_pop();
FAP.cntx_pop();
_wyn


\sprtypzz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdza czy w wyborze wystepuja
::   WE: _a - wybrany typ dokumentu
::   WY: zwraca ref typu dokumentu lub null
::  OLD: \sprtypzz/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=_a;
_typ_dok:=exec('tpkor2zz_lista','typysp',FAKS.T);
{? _typ_dok<>''
|| _typ_dok:='"TYPYDOK".T in ('+_typ_dok+')'
::|| _typ_dok:=exec('get','#params',300501,2)
::?};
::{? _typ_dok=''
|| _typ_dok:='"TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DN=\'T\''
             +'and "TYPYDOK".TD=\'\' and "TYPYDOK".DS=\'N\''
?};

_magi:=sql('select distinct :_a.MG, 0 OGR from :_a where :_a.IL_KOR<>0',X_Xa);
{? _magi.size() & _magi.first()
|| {!
   |? _mag:=exec('FindInSet','#table','MG','MAGAZYNY',_magi.MG,_magi.MG);
      {? exec('FindInSet','#table','T2MG','T',_mag)<>null || _magi.OGR:=1; _magi.put(1) ?};
      _magi.next()
   !};
   _mags:=sql('select :_a.MG from :_a where :_a.OGR=1 ',_magi);
   {? _mags.size() & _mags.first()
   || _tab:=obj_new(_mags.size());
      _i:=0;
      {!
      |? _i+=1;
         _tab[_i]:=exec('FindInSet','#table','MG','MAGAZYNY',_mags.MG,_mags.MG);
         _mags.next()
      !};
      _typs:=exec('typ_dok','lmg',_typ_dok,,,1,_tab);
      TYPYDOK.cntx_psh();
      TYPYDOK.clear(); _akts:={? TYPYDOK.seek(_a) || TYPYDOK.T+' ' || '???' ?};
      TYPYDOK.cntx_pop();
      {? _typs*_akts
      || _wyn:=_a
      || FUN.info('Ponieważ wybrany typ dokumentu %1 nie jest dostępny na wszystkich magazynach,\n'
            'których dotyczy zwrot konieczne jest wybranie innego typu.'@[form(_akts)]);
         _wyn:=exec('typ_dok','lmg',_typ_dok,,,,_tab)
      ?}
   ?}
?};
_wyn


\spr_datd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: edycja oraz sprawdzenie daty dla dokumentu magazynowego
::   WE: _a - sprawdzenie inwentaryzacji: null - sprawdza ZK_RP (zamowienia), MAG.ref - bierze pod uwage podany magazyn
::       [_b] - godzina domyśłnie time(0,0,0)
::   WY: 1-jest OK 0-nie jest
::  OLD: \spr_datd/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_time:={? var_pres('_b')=type_of(time()) || _b || time(0,0,0) ?};

par1:=_a;
{? FAKS.DZ=date(0,0,0)
|| FUN.info('Data nie może być zerowa.'@); _wyn:=0
|? ~exec('czy_z_ok','okresy',-1,,FAKS.DZ~1,FAKS.DZ~2)
|| _wyn:=0
|? {? par1=null
   || {? exec('spr_zzo','zamsiw_rea',FAKS.DZ)
      || {? ~exec('sprd_rea','zamsiw_rea',FAKS.DZ,_time)
         || FUN.info('Na jednym z magazynów wprowadzono inwentaryzację.'@); _wyn:=0
         || _wyn:=1
         ?}
      || FUN.info('Jeden z magazynów jest zamknięty.'@); _wyn:=0
      ?}
   || _mag:=ST.MAG;ST.MAG:=par1;
      _okr:=exec('czy_z_ok','okresy',1);
      ST.MAG:=_mag;
      {? _okr
      || {? ~exec('sprd_inz','magazyn_inw',FAKS.DZ,par1,_time)
         || FUN.info('W magazynie wprowadzono inwentaryzację.'@); _wyn:=0
         || _wyn:=1
         ?}
      || _wyn:=0
      ?}
   ?}
|| _wyn:=1
?};
&par1;
_wyn


\pw_magzz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed wyswietleniem magazynu dla zwrotu - korekta faktury
::  OLD: \pw_magzz/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
{? X_Xa.MG<>''
|| FKOR.MAGZZ:=exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG,"MG.SYM",,,'')
|| FKOR.MAGZZ:=''
?};
1


\f3_magzz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: F3 dla magazynu dla zwrotu - korekta faktury
::  OLD: \f3_magzz/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
params_exec('f3_magzz','faktury_nag1')


\po_magzz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji magazynu dla zwrotu - korekta faktury
::  OLD: \po_magzz/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
params_exec('po_magzz','faktury_nag1')


\czy_zwrot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Sprawdzenie czy zwracano ilość
::   WE:
::   WY: T/N
::----------------------------------------------------------------------------------------------------------------------
_wyn:='N';
FAP.cntx_psh();
FAP.index('FAP');
FAP.prefix(_a);
_loop:=FAP.first();
{!
|? _loop
|!
   {? FAP.M().RODZ='T' & FAP.IL<0 || _wyn:='T' ?};
   _loop:=_wyn='N' & FAP.next()
!};
FAP.cntx_pop();
_wyn


\dok_maga_fa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Sprawdza czy są dokumenty wydań do faktury korygowanej _a i czy są zaakceptowane
::   WE: _a
::   WY: 0-są dokumenty i są zaakceptowane, 1-brak dokumentów lub są niezzakceptowane
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
FAKS.cntx_psh();
FAKS.use(8+_a);
FAKS.prefix();
{? FAKS.seek(_a)
|| ND.cntx_psh();
   exec('dok_maga','powdok',0);
   _Tab:=__tt;
   VAR_DEL.delete('__tt');
   _loop:=_Tab.first();
   _ref:='';
   {? _loop=0 || FUN.info('Korygowany dokument nie jest powiązany z wydaniem magazynowym.'@); _wyn:=1 ?};
   {? _wyn=0
   ||
      {!
      |? _loop
      |!
         {? _ref<>_Tab.REF
         || ND.use(8+_Tab.REF);
            ND.prefix();
            _wyn:={? ND.seek(_Tab.REF)=0 || FUN.info('Nie znaleziono dokumentu.'@); _wyn:=1 ?};
            {? _wyn=0 & ND.STAT_REJ<>'T' || FUN.info('Niezaakceptowany dokument magazynowy: %1'@[ND.SYM]); _wyn:=1 ?};
            _ref:=_Tab.REF
         ?};
         _loop:=_wyn=0 & _Tab.next()
      !}
   ?};
   ND.cntx_pop()
?};
FAKS.cntx_pop();
_wyn


\faks_zakoncz_fap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dokument sprzedaży - Zakończ - okno redagowania
::   WE: params_get()   - ustawiane w exec('fak_pop','faktury_nag')
::                      - ustawiane w exec('wystinne','faktury_nag')
::                      - ustawiane w exec('koryguj','faktury_nag')
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_act_uid:=exec('faks_dolacz_act_uid','faktury_nag',FAKS.WHERE,FAKS.T().KOR,FAKS.T().HIS,FAKS.OPAK,FAKS.SYMF);
exec('btn_EndPosition','okienka',_act_uid,FAKS.uidref(),FAKS
 ,'Zakończ_wer','Zakończyć rejestrację dokumentu %1?'@[FAKS.SYM])


\par2fak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wystawia dokument sprzedazy na podstawie paragonu
::   WE: _a - tabela ref-ów sql paragonów
::  OLD: \par2fak/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
_wyn:=0;
_ref_new:=null;
_ref_fak:='';
_refpar:=_a;
_one:=_refpar.size()=1;
_first:=1;

:: maska biezaca
_fak_name:=(6+FAKS.name())+(('00'+form(ST.AR))+2);
BEER.WYSTFAKS:=FAKS.ref();
FAKS.cntx_psh();
FAP.cntx_psh();

_refpar.clear();
{? _refpar.first()
|| {!
   |?
::    maska paragonu
      FAP.use('fakpo'+((8+_refpar.FAKS)+3));
      FAP.clear();

      FAKS.use(8+_refpar.FAKS);
      FAKS.clear();

      {? FAKS.seek(_refpar.FAKS,8+_refpar.FAKS)
      ||
::       paragon w buforze
         {? _first
         || _ref_old:=FAKS.ref();
            _ref_par:=$FAKS.ref();
            _typ_par:=FAKS.T;
            _przel:=FAKS.T().FIS;
            _typ:=FAKS.T().DOKSP;
            _ds:=FAKS.D;
            _kh:=FAKS.KH;
            _han:=FAKS.HAN;
            _pl:=FAKS.PL;
            _tz:=FAKS.TZ;
            _ok:=1;
            _first:=0
         ?};

         {? ~FAKS.r_lock(1,1,1)
         ||
            {? FUN.ask('Dokument %1 obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@[FAKS.SYM]) & FAKS.r_lock(1,,1)
            || FAKS.r_unlock()
            ?};
            _ok:=0
         || _refpar.LOCK:='T';
            _refpar.put(1)
         ?};
         {? _ok=1 & FAKS.AKC<>'T'
         || FUN.info('Paragon jest niezaakceptowany.\nNiemożliwe wystawienia dokumentu sprzedaży.'@);
            _ok:=0
         ?};
         {? _ok=1 & FAKS.SYMF<>''
         || FUN.info('Do paragonu wystawiono już fakturę %1.'@[exec('symf','faktury_wspolne',FAKS.SYMF)]);
            _ok:=0
         ?};
         {? _ok=1 & FAKS.KORYG='T'
         || FUN.info('Do paragonu wystawiono już korektę %1.\nNiemożliwe wystawienia dokumentu sprzedaży.'@
               [exec('symf','faktury_wspolne',FAKS.SYMF)]);
            _ok:=0
         ?};
         {? _ok=1 & FAKS.WHERE='L' & exec('FindInSet','#table','FAPOW','LACZ','T',$FAKS.ref(),,,,null())<>null()
         || FUN.info('Paragon zaliczkowy był rozliczany.\nUtworzenie faktury do paragonu niemożliwe.'@);
            _ok:=0
         ?}
      ||
         FUN.info('System nie odnalazł wskazanego paragonu.'@)
      ?};
      _ok & _refpar.next()
   !}
?};
FAKS.cntx_pop();
FAP.cntx_pop();

{? _ok=1 & FUN.ask({? _one
                   || 'Czy utworzyć fakturę sprzedaży na podstawie paragonu?'@
                   || 'Czy utworzyć fakturę sprzedaży na podstawie wybranych paragonów?'@
                   ?})
||
   _zal:={? FAKS.WHERE='L' || 'T' || 'N' ?};
   _where:='KOR=\'N\' and ZAL=\''+_zal+'\' and PAR=\'N\' and DRPAR=\'N\' and ZAK=\'N\' and FIS=\''+_przel+'\'';
   _where+={? _typ<>'' || ' and TYPYSP.T=\''+_typ+'\'' || '' ?};

   _in:=params_get().in;
   {? var_pres('TYPYSP',_in)=type_of(null()) & _in.TYPYSP<>null()
   || _typsp:=_in.TYPYSP
   || _typsp:=exec('tsp_upr','typysp',_where,,,,2)
   ?};

   TYPYSP.cntx_psh();
   {? _typsp<>null & (TYPYSP.prefix(); TYPYSP.seek(_typsp))
   ||
      POM.TAB:='FAKS';
      POM.TYPDOK:=TYPYSP.KOD;
      POM.NRT:=TYPYSP.NRT;

      _reffak:='';
      _typfak:=null();
      _first:=1;

      do();
      _refpar.clear();
      {? _refpar.first()
      || {!
         |?
::          maska paragonu
            FAP.cntx_psh();
            FAP.use('fakpo'+((8+_refpar.FAKS)+3));
            FAP.clear();

            FAKS.cntx_psh();
            FAKS.use(8+_refpar.FAKS);
            FAKS.clear();

            {? FAKS.seek(_refpar.FAKS,8+_refpar.FAKS)
            || _refpold:=FAKS.ref();
::             maska biezaca
               {? _first
               || FAKS.cntx_psh();
                  FAKS.use(_fak_name);
                  FAKS.clear();
                  exec('zest','faktury_nag');
                  {? FAKS.add()
                  ||
                     BEER.WYSTFAKS:=FAKS.ref();
                     _ref_new:=FAKS.ref();
                     _ref_fak:=$FAKS.ref();
                     FAKS.DW:=exec('thismont','faktury_wspolne');
                     FAKS.AR:={? FAKS.SZ='Z' || ST.AR || FAKS.DW~1 ?};
                     FAKS.AM:={? FAKS.SZ='Z' || ST.AM || FAKS.DW~2 ?};
                     FAKS.T:=_typsp;
                     FAKS.NR:=0;
                     FAKS.SYM:='';
                     _snip:=exec('niptostr','#string',FAKS.NIP);
                     FAKS.KH:=exec('FindInSet','#table','KH','SNIP',_snip,2,,1);
                     FAKS.NAZ:=FAKS.KH().NAZ_P;
                     FAKS.MIASTO:=KH.MIASTO;
                     FAKS.UL:=KH.UL;
                     FAKS.DOM:=KH.DOM;
                     FAKS.LOKAL:=KH.LOKAL;
                     FAKS.KPOCZ:=KH.KPOCZ;
                     FAKS.POCZ:=KH.POCZ;
                     FAKS.PAR:='';
                     FAKS.AKC:='N';
                     FAKS.INTRAKC:='N';
                     FAKS.STAT_REJ:='N';
                     FAKS.ZAK:='N';
::                   dla faktury bedzie przypisany refsql() paragonu
                     FAKS.SYMF:=_ref_par;
                     FAKS.SYMF_T:=_typ_par;
                     FAKS.STS:=ST.STS;
                     FAKS.DR:=date;
                     FAKS.CR:=time;
                     FAKS.USER:=exec('user_n','blank');
                     FAKS.CZY_DRUK:='N';
                     {? exec('sp_active','faktury_wspolne',FAKS.DW)
                     ||
                        FAKS.SP_WYM:=exec('sp_default','faktury_wspolne',FAKS.T)
                     ?};
                     exec('zest','faktury_nag');
::                   forma i termin płatności pobierane z paragonu
                     FAKSPL.cntx_psh();
                     FAKSPL.index('FAKS');
                     FAKSPL.prefix(_ref_old);
                     _loop:=FAKSPL.first();
                     {!
                     |? _loop
                     |!
                        FAKSPL.cntx_psh();
                        FAKSPL.prefix();
                        FAKSPL.FAKS:=_ref_new;
                        FAKSPL.add();
                        FAKSPL.cntx_pop();
                        _loop:=FAKSPL.next()
                     !};
                     FAKSPL.cntx_pop();
                     exec('plat_sel','faktury_plat',FAKS);
                     {? FAKS.put()
                     || _reffak:=$FAKS.ref();
                        _typfak:=FAKS.T
                     ?};
                     _first:=0;
                     _wyn:=1
                  || FUN.info('Faktury nie udało się utworzyć.'@);
                     _wyn:=0
                  ?};
                  FAKS.cntx_pop()
               ?};
::             wraca do maski paragonu (FAKS paragon w buforze)

               {? _reffak<>'' & _typfak
               ||
::                dla paragonu jest ref wystawionej faktury
                  FAKS.SYMF:=_reffak;
                  FAKS.SYMF_T:=_typfak;
                  exec('zest','faktury_nag');
                  FAKS.put()
               ?};

               {? _ref_new<>null
               ||
::                przepisanie pozycji
::                maska paragonu
                  FAP.index('FAP');
                  FAP.prefix(_refpold);
                  {? FAP.first()
                  || {!
                     |?
::                      w masce dla paragonu
                        FAP.get();
                        FAP.memo_get(,'UWAGI');

::                      FAP maska biezaca
                        FAKS.cntx_psh();
                        FAP.cntx_psh();
                        FAP.use('fakpo'+((8+_ref_fak)+3));
                        FAP.clear();
                        FAP.FAKS:=_ref_new;
                        FAP.POZ:=exec('NewOrder','#table','FAP','POZ','FAP',_ref_new);
                        FAP.TAR_H:=exec('tar_h_copy','ceny_dok',FAP.TAR_H,8+_ref_fak+3);
                        FAP.KH:=exec('FindAndGet','#table',FAKS,_ref_new,,"KH",null());
                        FAP.KH_ODB:=exec('FindAndGet','#table',FAKS,_ref_new,,"KH_ODB",null());
                        FAP.add();
                        FAP.memo_put(,'UWAGI');
                        _symf_fap:=$FAP.ref();
                        FAKS.use(ref_name(FAP.FAKS));
::                      naliczenie opłat dodatkowych
                        exec('actTAXS','oplaty_dod',FAP.FAKS().uidref(),FAP.uidref(),FAP.M,null());
::                      informacje dodatkowe
                        exec('inf_dod','fakso',0,'fakpo');
                        FAKS.cntx_pop();
                        FAP.cntx_pop();
::                      FAP wraca do maski paragonu
                        FAP.SYMF_FAP:=_symf_fap;
::                      w masce dla paragonu
                        FAP.put() & FAP.next()
                     !}
                  ?};
::                przepisanie zaliczki z paragonu na fakturę do paragonu
                  {? FAKS.WHERE='L'
                  ||
                     FAPOW.cntx_psh();
                     FAPOW.index('FAKS');
                     FAPOW.prefix(_refpar.FAKS);
                     _loop:=FAPOW.first();
                     {!
                     |? _loop
                     |!
                        FAPOW.cntx_psh();
                        FAPOW.FAKS:=_ref_fak;
                        _sym_new:=exec('FindAndGet','#table',FAKS,FAPOW.FAKS,,"FAKS.SYM",'');
                        FAPOW.FAKS_SYM:=_sym_new;
                        FAPOW.prefix();
                        FAPOW.add();
                        FAPOW.cntx_pop();
                        FAPOW.END_SYM:=_sym_new;
                        FAPOW.ROZ:='T';
                        _loop:=FAPOW.put() & FAPOW.next()
                     !};
                     FAPOW.cntx_pop();
                     exec('sumfak','faktury_wspolne')
                  ?}
               ?}
            || FUN.info('System nie odnalazł wskazanego paragonu.'@);
               _wyn:=0
            ?};
            FAKS.cntx_pop();
            FAP.cntx_pop();
            _wyn & _refpar.next()
         !};
::       maska biezaca
         FAP.cntx_psh();
         FAP.use('fakpo'+((8+_ref_fak)+3));
         FAP.clear();

         FAKS.cntx_psh();
         FAKS.use(_fak_name);
         FAKS.clear();

         {? FAKS.seek(_ref_new)
         ||
            exec('sumfak','faktury_wspolne');
            end;
            _r_lock:=exec('r_lock_one','#table',FAKS,FAKS.ref());
            {? ~_r_lock
            ||
               _ok:=-1;
               exec('who_rlock_faks','faktury_nag')
            ||
:: parametry
               _var_wystinne:=obj_new('WHERE','ZK_N','FAKS','CZY_DRUK','KW_ZAL','ZLP');
               _var_wystinne.WHERE:='P';
               _var_wystinne.ZK_N:=null();
               _var_wystinne.FAKS:=_a;
               _var_wystinne.CZY_DRUK:='N';
               _var_wystinne.KW_ZAL:=0;
               _var_wystinne.ZLP:=null();
               _var_fakpop:=exec('var_fakpop','faktury_nag');
               _var_fakpop.RAB:=FAKS.RAB;
               _var_fakpop.KRS:=FAKS.KRS;
               _var_fakpop.NKRS:=FAKS.NKRS;
               _var_fakpop.R_LOCK:=1;
               _var_fakpop.PO_FIRST:=1;

               params_set('context',params_get(),'var_wystinne',_var_wystinne,'var_fakpop',_var_fakpop);

               exec('faks_win_edit_set','faktury_nag');
               _wyn:=_dod_nag:=exec('put','faktury_nag',1);
               {? FAKS.STAT_REJ='N'
               || _wyn:=_dod_nag:=exec('fak_pop_po','faktury_nag',{? _dod_nag || 1 || -1 ?},1);
                  {? _var_fakpop.PO_FIRST=1 || exec('wystinne_po','faktury_nag',_dod_nag); _var_fakpop.PO_FIRST:=2 ?}
               ?};
               {? _wyn<>0
               || exec('putfakid','faktury_nag');
::                      informacje dodatkowe
                  exec('inf_dod','fakso',0,'faktu')
               ?};
               {? _dod_nag || exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock) ?}
            ?}
         ?};

         FAKS.cntx_pop();
         FAP.cntx_pop()
      ?};
      {? _wyn=1 || _wyn:=end() || undo() ?}
   ?};
   TYPYSP.cntx_pop()
?};
FAKS.f_rfresh();
:: ustawia sie na dodanym rekordzie
{? (8+$BEER.WYSTFAKS)=FAKS.name() || exec('ustaw_fk','faktury_nag',BEER.WYSTFAKS) ?};
_wyn


\ptab_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: dodaje do tab_tmp __par_tab niezafkturowane paragony w roku
::   WE: _a - rok
::  OLD: \ptab_add/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
_stsupr:=exec('get','#params',2102,2,OPERATOR.USER)='T';
_stss:={? _stsupr=1 || exec('stss','users',OPERATOR.USER,'STS') || '' ?};

FAKS.cntx_psh();
FAKS.use('faktu'+ST.ODDZ+($_a+2));
_ind:=FAKS.ndx_tmp(,,'SZ',,,'T','PAR',,'SYMF',,,'STAT_REJ',,,'KORYG',,);
FAKS.index(_ind);
FAKS.prefix('S','T','','T','N');
{? FAKS.first()
||
   {!
   |?
      {? (~_stsupr | _stsupr & FAKS.STS & _stss*$FAKS.STS)
         & exec('czy_par_nip_ok','faktury_nag1',FAKS.NIP) & FAKS.r_lock(1,1,1)
      ||
         __par_tab.ROK:=FAKS.AR;
         __par_tab.STS:=FAKS.STS().KOD;
         __par_tab.TYP:=FAKS.T().T;
         __par_tab.SYMBOL:=FAKS.SYM;
         __par_tab.DW:=FAKS.DW;
         __par_tab.KH:=FAKS.KH().SKR;
         __par_tab.BRUTTO:=FAKS.BRUTTO;
         __par_tab.NIP:=FAKS.NIP;
         __par_tab.REF_PAR:=$FAKS.ref();
         __par_tab.ACCESS:='N';
         __par_tab.KRAJ_VAT:=FAKS.KRAJ_VAT().SYM;
         __par_tab.add()
      ?};
      FAKS.next()
   !}
?};
FAKS.ndx_drop(_ind);
FAKS.cntx_pop();
''


\opak_zwr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: czy rozlicza wartosciowo opakowanie (FAKS w buforze)
::  OLD: \opak_zwr/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
FAKS.cntx_psh();
FAP.cntx_psh();
FAP.index('FAP');
FAP.prefix(FAKS.ref());
{? FAP.first()
||
   _next:=1;
   OPAK_ZWR.index('REF_ROZL');
   {!
   |?
      OPAK_ZWR.prefix($FAP.ref);
      {? OPAK_ZWR.first()
      ||
         _next:=0;
         _wyn:=FUN.ask('Faktura rozlicza niezwrócone opakowania zwrotne.\nKontynuować?'@)
      ?};
      _next=1 & FAP.next()
   !}
?};
FAP.cntx_pop();
FAKS.cntx_pop();
_wyn


\faks_z_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: sprawdza powiazania pozycji faktury _a do zlecen fakturowania
::   WE: _a - FAKS.ref
::   WY: 1-sa powiazane pozycje, 0-wpp
::  OLD: \faks_z_pow/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
FAKZ2FAP.cntx_psh();
FAKZ2FAP.index('FAKS');
FAKZ2FAP.prefix(_a);
_wyn:=FAKZ2FAP.first();
FAKZ2FAP.cntx_pop();
_wyn


\chk_kor_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PS] [17.00]
:: OPIS: Sprawdza poprawność pól w okienku rejestracji korekty.
::   WY: Akronim niepoprawnie wypełnionego pola, lub ''
::----------------------------------------------------------------------------------------------------------------------
{? ROKMC.AR<=1900 | ROKMC.AR>2050 | ROKMC.AR>ST.AR
|| FUN.info('Niepoprawnie wypełnione pole: Rok.'@);
   'ROKMC.AR'
|? FKOR.KH().KOD=''
|| FUN.info('Niewypełnione pole: Kontrahent.'@);
   'KH'
|| ''
?}


\faks_rozlicz_koszt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument zakupu - Rozliczenie kosztów - okno redagowania
::   WE: params_get()   - ustawiane w exec('fak_pop','faktury_nag')
::                      - ustawiane w exec('wystinne','faktury_nag')
::                      - ustawiane w exec('koryguj','faktury_nag')
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_btnRuleResult:='';

_fld:=params_exec('faks_edit_finisher','faktury_nag',FAKS.ref());
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| exec('rozlkosz','faktury_wspolne')
?};

_btnRuleResult


\dz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Uzupełnienie daty zwrotu
::   WE:
::   WY: 0 - nie uzupełniono datę zwrotu, 1 - uzupełniono datę zwrotu
::----------------------------------------------------------------------------------------------------------------------
exec('dz','faktury_nag1')


\faks_szukaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Szukaj tabela FAKS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('faks_win_patt_set','faktury_nag');
1


\faks_projekty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Projekty tabela FAKS
::       Kontekst wywołania - rekord tabneli FAKS
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.T().PROJZAKR=exec('projzakr_nie_dotyczy','projekty')
|| FUN.info('Typ dokumentu niezwiązany z projektem.'@
      +'\n'+'Opcja niedostępna.'@);
   return()
?};

exec('faks_proj_or_rem','faktury_nag','P');
~~


\faks_rem_zgl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Zgłoszenia remontowe tabela FAKS
::       Kontekst wywołania - rekord tabeli FAKS
::----------------------------------------------------------------------------------------------------------------------
exec('faks_proj_or_rem','faktury_nag','R');
~~


\faks_proj_or_rem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Projekty (PROJEKTY) albo zgłoszenia remontowe (REM_ZGL) tabela FAKS
::       Kontekst wywołania - rekord tabeli FAKS
::   WE: _a - 'P'rojekty, zgłoszenia 'R'emontowe
::----------------------------------------------------------------------------------------------------------------------
_proj_or_rem:=_a;

REM_ZGL.win_dict('WERP');

_wer_grp:=PROJ2FAP.grp_make(
   {? _proj_or_rem='P' || 'Projekty'@ || 'Zgłoszenia remontowe'@ ?},,
   'projekty_grp'+(-_proj_or_rem),,,,,'normal'
);

{? FAKS.SZ='S'
|| PROJ2FAP.actions('WERS',{? FAKS.PROJEKTY || 'dpu:dR' || 'd:d' ?});
   _fb:="
      params_get().var.SZABLON:='N';
      _proj_or_rem:=params_get().var.PROJREM;
      {? FAKS.T().KOR='Z'
      || PROJ2FAP.index('KZ')
      || PROJ2FAP.index('FAKS')
      ?};
      PROJ2FAP.prefix('N',_proj_or_rem,FAKS.ref());
      PROJ2FAP.actions(cur_win(1,1),{? FAKS.ZAK='T' | FAKS.PROJEKTY || 'dpu:dR' || 'd:d' ?},,1)
   ";
   PROJ2FAP.grp_sel(_wer_grp,,'WERS','Rozliczenie'@,,,,,_fb,,,,'maximized');
   PROJ2FAP.win_fml('WERS',,'IL',,'SUM_FORMAT',"'out_prec='+$ST.DOKL");
   PROJ2FAP.win_fml('WERS',,'W',,'SUM_FORMAT',"'out_prec=2'");
   _fb:="
      params_get().var.SZABLON:='T';
      _proj_or_rem:=params_get().var.PROJREM;
      PROJ2FAP.index('SZABLON');
      PROJ2FAP.prefix('T',_proj_or_rem,FAKS.ref());
      PROJ2FAP.actions(cur_win(1,1),{? FAKS.ZAK='T' | FAKS.PROJEKTY || 'dpu:d' || '' ?},,1)
   ";
   PROJ2FAP.grp_sel(_wer_grp,,'WERS_SZ','Szablon rozliczenia'@,,,,,_fb,,,,'maximized');
   PROJ2FAP.win_fml('WERS_SZ',,'PROCENT',,'SUM_FORMAT',"'out_prec=2'");
   PROJ2FAP.win_sel(_wer_grp)
|| _werz:={? _proj_or_rem='P' || 'WERZ' || 'WRRZ' ?};
   _werz_sz:={? _proj_or_rem='P' || 'WERZ_SZ' || 'WRRZ_SZ' ?};
   PROJ2FAP.actions(_werz,{? _proj_or_rem='P' & FAKS.PROJEKTY || 'dpu:dR' || 'd:d' ?});
   _fb:="
      params_get().var.SZABLON:='N';
      _proj_or_rem:=params_get().var.PROJREM;
      PROJ2FAP.index('FAKS');
      PROJ2FAP.prefix('N',_proj_or_rem,FAKS.ref(),FAKS.NR);
      PROJ2FAP.actions(cur_win(1,1),{? FAKS.ZAK='T' | _proj_or_rem='P' & FAKS.PROJEKTY || 'dpu:dR' || 'd:d' ?},,1)
   ";
   PROJ2FAP.grp_sel(_wer_grp,,_werz,'Rozliczenie'@,,,,,_fb);
   PROJ2FAP.win_fml(_werz,,'IL',,'SUM_FORMAT',"'out_prec='+$ST.DOKL");
   PROJ2FAP.win_fml(_werz,,'W',,'SUM_FORMAT',"'out_prec=2'");
   _fb:="
      params_get().var.SZABLON:='T';
      _proj_or_rem:=params_get().var.PROJREM;
      PROJ2FAP.index('SZABLON');
      PROJ2FAP.prefix('T',_proj_or_rem,FAKS.ref());
      PROJ2FAP.actions(cur_win(1,1),{? FAKS.ZAK='T' | _proj_or_rem='P' & FAKS.PROJEKTY || 'dpu:d' || '' ?},,1)
   ";
   PROJ2FAP.grp_sel(_wer_grp,,_werz_sz,'Szablon'@,,,,,_fb);
   PROJ2FAP.win_fml(_werz_sz,,'PROCENT',,'SUM_FORMAT',"'out_prec=2'");
   PROJ2FAP.win_sel(_wer_grp)
?};

PROJ2FAP.fld_fml('PROCENT','EDIT_FORMAT',"'in_prec=2'");
PROJ2FAP.fld_fml('PROCENT','DISPLAY_FORMAT',"'out_prec=2'");

_var:=obj_new('SZABLON','PROJREM');
_var.SZABLON:='N';
_var.PROJREM:=_proj_or_rem;
params_set('TAB',FAKS,'var',_var);
PROJ2FAP.select();
~~


\faks_anuluj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: Anulowanie dokumentu sprzedaży/zakupu (bieżącego w buforze)
::   WE: [_a] - 1(domyślnie)-anulowanie 0-rezygnacja z anulacji
::   WY: czy anulowanie dokumentu się powiodło 0 - nie / 1- tak
::----------------------------------------------------------------------------------------------------------------------
_anul:={? var_pres('_a')=type_of(0) || _a || 1 ?};

_wyn:=0;

{? _r_lock:=exec('r_lock_one','#table',FAKS,FAKS.ref)
||
   do();
   {? FAKS.WHERE='K' | FAKS.WHERE='N'
   ||
      _kz_uid:=exec('FindAndGet','#table',FAKS,FAKS.ref(),,"FAKS.uidref()",'');
      {? _anul
      || FAKS.STAT_REJ:='A';
         FAKS.ZEST:='N'
      || FAKS.STAT_REJ:='Z';
         FAKS.ZEST:='T'
      ?};
      {? FAKS.put(1)
      ||
         {? _anul
         ||
            _del_autoadd:=exec('del_autoadd','dokum',FAKS.ref());
            FAKS.get();
            FAKS.CZY_DRUK:={? _del_autoadd=1 || 'X' || 'N' ?}
         ||
            FAKS.STATKSEF:=''
         ?};
         FAKS.put();
         _wyn:=1;
         FAKS.cntx_psh();
         exec('uidref_update','#b__box',FAKS.uidref(),'');
         FAKS.cntx_pop()
      ?};
      FAKS.cntx_psh();
      FAKS_KZF.cntx_psh();
      FAKS_KZF.index('KZ_UID');
      FAKS_KZF.prefix(_kz_uid);
      {? FAKS_KZF.first()
      || {!
         |? _name:=form(8+FAKS_KZF.KOR);
            {? _name<>''
            || FAKS.use(_name);
               FAKS.prefix();
               {? FAKS.seek(FAKS_KZF.KOR)
               || FAKS.STAT_REJ:='A';
                  FAKS.ZEST:='N';
                  {? FAKS.put(1)
                  || FAKS.cntx_psh();
                     exec('uidref_update','#b__box',FAKS.uidref(),'');
                     FAKS.cntx_pop()
                  ?}
               ?}
            ?};
            FAKS_KZF.next()
         !}
      ?};
      FAKS_KZF.cntx_pop();
      FAKS.cntx_pop()
   ||
      {? _anul
      || FAKS.STAT_REJ:='A';
         FAKS.ZEST:='N'
      || FAKS.STAT_REJ:='Z';
         FAKS.ZEST:='T'
      ?};
      {? FAKS.put(1)
      ||
         {? _anul
         ||
            _del_autoadd:=exec('del_autoadd','dokum',FAKS.ref());
            FAKS.get();
            FAKS.CZY_DRUK:={? _del_autoadd=1 || 'X' || 'N' ?}
         ||
            FAKS.STATKSEF:=''
         ?};
         FAKS.put();
         _wyn:=1;
         FAKS.cntx_psh();
         exec('uidref_update','#b__box',FAKS.uidref(),'');
         FAKS.cntx_pop()
      ?}
   ?};
   {?  do_state()<>1 || _wyn:=0 ?};
   end();
   exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock)
|| exec('who_rlock_faks','faktury_nag')
?};
_wyn


\po_faksw_opk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji pola FAKS.WAL
::   WY: czy mozna opuscic redakcje pola 1-tak 0-nie
::  OLD: \po_faksw/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? chk_fld()
|| {? cur_tfld.WAL=exec('bl_nwal','ustawienia') | DPOZ.WPR_S<>$cur_tfld.WAL
   ||
      cur_tfld.SWAL:=cur_tfld.NSWAL:=2;
      {? KSTE.WAL=INFO.NAROD
      ||
         cur_tfld.KRS:=cur_tfld.NKRS:=0;
         cur_tfld.DTK:=cur_tfld.NDTK:=date(0,0,0)
      ?};
      cur_tfld.BTK:=cur_tfld.NBTK:='';
      cur_tfld.RTK:=cur_tfld.NRTK:=0;
      cur_tfld.NTK:=cur_tfld.NNTK:=''
   ?};
   {? FAKSZ.WAL=FAKSZ.NWAL || FAKSZ.VATZERO:=0 ?};
   exec('set_efld_opt_opk','faktury_nag','WOPK');
   1
|| 0
?}


\set_efld_opt_opk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: wygasza pola dla okienek
::   WE: _a - akronim okienka
::----------------------------------------------------------------------------------------------------------------------
_win_red:=_a;
:: Kurs, data kursu dla waluty opodatkowania
{? FAKSZ.WAL<>FAKSZ.NWAL
|| FAKSZ.efld_opt(_win_red,'mark=1',,'KRS');
   FAKSZ.efld_opt(_win_red,'mark=1',,'DTK');
   FAKSZ.efld_opt(_win_red,'enable=1',,'SWAL');
   FAKSZ.efld_opt(_win_red,'enable=1',,'KRS');
   FAKSZ.efld_opt(_win_red,'enable=1',,'DTK')
|| FAKSZ.efld_opt(_win_red,'mark=0',,'KRS');
   FAKSZ.efld_opt(_win_red,'mark=0',,'DTK');
   FAKSZ.efld_opt(_win_red,'enable=0',,'SWAL');
   FAKSZ.efld_opt(_win_red,'enable=0',,'KRS');
   FAKSZ.efld_opt(_win_red,'enable=0',,'DTK')
?};

:: Kurs, data kursu dla waluty narodowej
{? FAKSZ.WAL<>INFO.NAROD
|| FAKSZ.efld_opt(_win_red,'mark=1',,'NKRS');
   FAKSZ.efld_opt(_win_red,'mark=1',,'NDTK');
   FAKSZ.efld_opt(_win_red,'enable=1',,'NSWAL');
   FAKSZ.efld_opt(_win_red,'enable=1',,'NKRS');
   FAKSZ.efld_opt(_win_red,'enable=1',,'NDTK')
|| FAKSZ.efld_opt(_win_red,'mark=0',,'NKRS');
   FAKSZ.efld_opt(_win_red,'mark=0',,'NDTK');
   FAKSZ.efld_opt(_win_red,'enable=0',,'NSWAL');
   FAKSZ.efld_opt(_win_red,'enable=0',,'NKRS');
   FAKSZ.efld_opt(_win_red,'enable=0',,'NDTK')
?};

{? FAKSZ.NWAL<>INFO.NAROD | FAKSZ.NWAL=FAKSZ.WAL
|| FAKSZ.efld_opt(_win_red,'enable=0',,'VATZERO')
|| FAKSZ.efld_opt(_win_red,'enable=1',,'VATZERO')
?};
~~


\kh_faks_colr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [12.30]
:: OPIS: Ustala procent wykonania dla pola z informacją o stanie wysyłki załączników
::  OLD: \kh_faks_colr/fak_fun.fml
::----------------------------------------------------------------------------------------------------------------------
params_exec('kh_faks_colr','faktury_nag1')


\prn2mail
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: Sprawdzenie czy wydruk został wysłany - kontekst bieżącego dokumentu
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_sym:=FAKS.SYM;
{? FAKS.CZY_DRUK='T'
|| DOKUM.cntx_psh();
   DOKUM.index('STAN');
   DOKUM.prefix(REF.FIRMA,$FAKS.ref,'T');
   {? DOKUM.first()
   || {!
      |? _res:=DOKUM.AUTOADD='T' & DOKUM.TYP='D' & DOKUM.SYM_SYS=_sym;
         ~_res & DOKUM.next()
      !}
   ?};
   DOKUM.cntx_pop()
?};
_res


\faks_dazal_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Przed redakcją FAKS.DA_ZAL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_get().var_fakpop.FLD:=fld();
FAKS.SZ='S' & FAKS.T().KOR='N' & FAKS.T().PAR='N' & FAKS.WHERE<>'L'


\faks_dazal_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Po redakcji FAKS.DA_ZAL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('faks_dazal_ae','faktury_nag1')


\zlf_slo_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Słownik zleceń fakturowania typu zaliczka
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('zlf_slo_zal','faktury_nag1')


\GenWgEDOKUM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: generacja dokumentu na podstawie Dokumentu w obiegu
::   WE: _a - ref EDOKUM-a
::       _b - typ dokumentu
::       _c - rodzaj dokumentu
::       [_d] - typ dokumentu sprzedaży
::   WY: _ref - FAKS-a lub null()
::----------------------------------------------------------------------------------------------------------------------
{? _>=4  || {? type_of(_d)<>2 || _d:='' ?}  || _d:=''  ?};

_wyn:=null();

BEER.SZ:=_b;
{? _c='Z'
|| HELP.WHERE:='L'
|? _b='Z'
|| _choice:=FUN.choice('Wybierz rodzaj dokumentu?'@,1,'Dokument &zakupu'@,'Dokument &wewnętrzny'@);
   {? _choice=0 || return(_wyn) ?};
   HELP.WHERE:={? _choice=2 || 'E' || 'Z' ?}
|| HELP.WHERE:='P'
?};

{? ~exec('upr_cscz','ceny',,BEER.SZ)
|| {? BEER.SZ='S'
   || FUN.info('Brak uprawnień do wartości sprzedaży.\nDodawanie dokumentów sprzedaży niedostępne.'@)
   || FUN.info('Brak uprawnień do wartości zakupu.\nDodawanie dokumentów zakupu niedostępne.'@)
   ?}
||
   exec('edok_psh','open_tab');
   exec('open_edok','open_tab',ref_name(_a)+2);
   EDOKUM.prefix();
   {? EDOKUM.seek(_a)
   || _rodz:=EDOKUM.TYP().RODZ_DOK;
      _tkor:=EDOKUM.KOREKTA;
      _tzal:=EDOKUM.TYP().FAKT_ZAL;
      _khrf:={? EDOKUM.KH<>null() || exec('FindInSet','#table','KH','KOD',EDOKUM.KH().KOD,2) || null() ?};
      {? _b=_rodz & {? _tzal='T' || _c='Z' || 1 ?} & {? _tkor='T' || _c='K' || 1 ?}
      || {? _tkor='N'
         || _where:={? BEER.SZ='Z' & HELP.WHERE='L' || 'l' || HELP.WHERE ?};
            _wyn:=params_exec('wystinne','faktury_nag',_where,,_khrf,,,,,,,_d,1,,_a)
         || _evatadd:=0;
            {? BEER.SZ='S'
            || _Tab:=sql($"
                 select SYM, DW, FAKS.REFERENCE REF from @FAKS where FAKS.SYM=':_a' and FAKS.ODDZ=':_b'
                 ",EDOKUM.SYM_KOR,ST.ODDZ)
            || _Tab:=sql($"
                 select SYM, DW, FAKS.REFERENCE REF from @FAKS where FAKS.ID=':_a' and FAKS.ODDZ=':_b'
                 ",EDOKUM.SYM_KOR,ST.ODDZ)
            ?};
            _wer:=_Tab.mk_sel('Faktury do korekty'@,,,'djgvncjkzbjkhoi');
            _fb:="sel_exit";
            _Tab.win_fld(_wer,,'SYM',,,20,,,'Symbol'@);
            _Tab.win_fld(_wer,,'DW',,,10,,,'Data wystawienia'@);
            _Tab.win_act(_wer,,'Formuła','Wybierz'@@,,,_fb,,1);
            _Tab.win_sel(_wer);
            {? ~_Tab.first
            || FUN.info('Nie znaleziono faktury korygowanej: %1.'@[EDOKUM.SYM_KOR])
            |? _Tab.size=1 | _Tab.select
            || {? FAKS.name<>8+_Tab.REF
               || exec('open','open_tab',ST.ODDZ,8+_Tab.REF+2)
               ?};
               _ref:=FAKS.ref;
               FAKS.prefix();
               {? FAKS.seek(_Tab.REF)
               || ROKMC.AR:=FAKS.AR;
                  BEER.WYSTFAKS:=null();
                  HELP.KHB:=null();
                  HELP.KH_ODB:=null();
                  exec('koryguj','faktury_nag',0,,_d,EDOKUM.ref())
               ?};
               {? ST.AR<>ROKMC.AR
               || exec('open','open_tab',ST.ODDZ,2-$ST.AR)
               ?};
               _evatadd:=FAKS.seek(BEER.WYSTFAKS)
            ?};
            {? _evatadd
            || EDOKUM.STATUS:=exec('ustal_status','obiegi_log',EDOKUM.uidref());
               EDOKUM.FAKS:=$FAKS.ref();
               EDOKUM.DOK_POW:=FAKS.uidref();
               EDOKUM.LOG_PRZ:='T';
               EDOKUM.put(1);
               FAKS.EDOKUM:=$EDOKUM.ref();
               FAKS.OBI_POW:=EDOKUM.uidref();
               FAKS.put(1)
            ?}
         ?}
      ||
::       niepoprawne typy
         _wyn:=null()
      ?}
   ?};
   exec('edok_pop','open_tab')
?};
_wyn


\ctrlEDOKUM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: kontroluje czy podany parametr EDOKUM spełnia kryteria wystawienia dokumentu w obszarach logistycznych
::   WE: _a - ref EDOKUM-a
::       _b - typ dokumentu
::       _c - rodzaj dokumentu
::   WY: 1-spełnia 0-nie -1-został zafakturowany do pominięcia 2-spełnia jednakże czeka na akceptacje
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
exec('edok_psh','open_tab');
exec('open_edok','open_tab',ref_name(_a)+2);
EDOKUM.prefix();
{? EDOKUM.seek(_a)
|| {? EDOKUM.FAKS<>''
   || _res:=-1
   || _rodz:=EDOKUM.TYP().RODZ_DOK;
      _tkor:=EDOKUM.KOREKTA;
      _tzal:=EDOKUM.TYP().FAKT_ZAL;
      _res:=EDOKUM.STATUS='T' & (_b=_rodz) & {? _tzal='T' || _c='Z' || 1 ?} & {? _tkor='T' || _c='K' || 1 ?}
   ?}
?};
exec('edok_pop','open_tab');
_res


\ctrl_warEDOKUM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: kontroluje czy podany dokument sprzedaży/zakupu jest zgodny co do wartości z dokumentem w obiegu
::       Uwaga. Kontekst wywołania na tabeli FAKS
::   WE: _a - parametr dla KOMM-a
::       _b - parametr dla KOMM-a
::   WY: 1-OK 0-nie jest dobrze
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? FAKS.EDOKUM<>''
|| _komroot:="{? _b | __kom.find_msg(_a) || __kom.set_root(_a) || __kom.sect_beg(_a) ?}";
   _netto:=0;
   _brutto:=0;
   _wg_brt:=FAKS.T().FIS='T';
   _wg_zak:=FAKS.SZ='Z';
   exec('edok_psh','open_tab');
   exec('open_edok','open_tab',form(8+FAKS.EDOKUM)+2);
   EDOKUM.prefix();
   {? EDOKUM.seek(FAKS.EDOKUM)
   || _netto:=EDOKUM.NETTO;
      _brutto:=EDOKUM.WART
   ?};
   exec('edok_pop','open_tab');
   {? FAKS.WAL<>INFO.NAROD
   || {? _wg_zak
      || {? FAKS.NETW<>_netto
         || _komroot(_a,_b);
            __kom.add('Niezgodność wartości netto w walucie dokumentu %1 '
                      'z wartością na dokumencie w obiegu %2.'@[$FAKS.NETW,$_netto],4);
            _res:=0
         |? FAKS.BRTW<>_brutto
         || _komroot(_a,_b);
            __kom.add('Niezgodność wartości brutto w walucie dokumentu %1 '
                      'z wartością na dokumencie w obiegu %2.'@[$FAKS.BRTW,$_brutto],4);
            _res:=0
         ?}
      |? ~_wg_brt
      || {? FAKS.NETW<>_netto
         || _komroot(_a,_b);
            __kom.add('Niezgodność wartości netto w walucie dokumentu %1 '
                      'z wartością na dokumencie w obiegu %2.'@[$FAKS.NETW,$_netto],4);
            _res:=0
         ?}
      || {? FAKS.BRTW<>_brutto
         || _komroot(_a,_b);
            __kom.add('Niezgodność wartości brutto w walucie dokumentu %1 '
                      'z wartością na dokumencie w obiegu %2.'@[$FAKS.BRTW,$_brutto],4);
            _res:=0
         ?}
      ?}
   || {? _wg_zak
      || {? FAKS.NETTO<>_netto
         || _komroot(_a,_b);
            __kom.add('Niezgodność wartości netto dokumentu %1 '
                      'z wartością na dokumencie w obiegu %2.'@[$FAKS.NETTO,$_netto],4);
            _res:=0
         |? FAKS.BRUTTO<>_brutto
         || _komroot(_a,_b);
            __kom.add('Niezgodność wartości brutto dokumentu %1 '
                      'z wartością na dokumencie w obiegu %2.'@[$FAKS.BRUTTO,$_brutto],4);
            _res:=0
         ?}
      |? ~_wg_brt
      || {? FAKS.NETTO<>_netto
         || _komroot(_a,_b);
            __kom.add('Niezgodność wartości netto dokumentu %1 '
                      'z wartością na dokumencie w obiegu %2.'@[$FAKS.NETTO,$_netto],4);
            _res:=0
         ?}
      || {? FAKS.BRUTTO<>_brutto
         || _komroot(_a,_b);
            __kom.add('Niezgodność wartości brutto dokumentu %1 '
                      'z wartością na dokumencie w obiegu %2.'@[$FAKS.BRUTTO,$_brutto],4);
            _res:=0
         ?}
      ?}
   ?}
?};
_res


\GenWgFAKZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: generacja dokumentu korekty na podstawie zlecenia fakturowania
::   WE: _a - ref FAKZ-a lub null jeśli wybór
::       [_b] - typ dokumentu sprzedaży
::   WY: _ref - FAKS-a lub null()
::----------------------------------------------------------------------------------------------------------------------
_fakz:={? var_pres('_a')=type_of(null()) || _a || null() ?};
{? _>=2  || {? type_of(_b)<>2 || _b:='' ?}  || _b:=''  ?};

_wyn:=null();

BEER.SZ:='S';

{? ~exec('upr_cscz','ceny',,BEER.SZ)
|| FUN.info('Brak uprawnień do wartości sprzedaży.\nDodawanie dokumentów sprzedaży niedostępne.'@)
|| _msk:=ref_name(_fakz);
   {? _msk=''
   || _oddz:=ST.ODDZ;
      _ar:=ST.AR;
      _am:=ST.AM;
      FAKZ.cntx_psh();
      FAKZ.f_clear();
      {? ST.STS
      || FAKZ.index('STS_DF1');
         FAKZ.prefix(ST.AR,ST.AM,REF.FIRMA,ST.ODDZ,$ST.STS,'T','N','T')
      || FAKZ.index('DF1');
         FAKZ.prefix(ST.AR,ST.AM,REF.FIRMA,ST.ODDZ,'T','N','T')
      ?};
      FAKZ.win_sel('SEL_ONE');
      {? FAKZ.select(,1,1)
      || _fakz:=FAKZ.ref();
         _msk:=ref_name(_fakz)
      ?};
      FAKZ.cntx_pop();
      __PARSES.setVal('OddzialLogProd',_oddz);
      _args:=__PARSES.args('OkresRok');
      _args.OBSZAR:='LSP';
      _args.AR:=_ar;
      _args.AM:=_am;
      __PARSES.setVal('OkresRok',_args);
      __PARSES.setEnv('LSP_FAK_DKOR');
      {? FAKZ.win_sel('?')<>'SEL'
      || _sts:={? ST.STS || '(\''+$ST.STS+'\')' || '' ?};
         _sort:='DF';
         _from:='';
         _where:="FAKZ.AR=:_a "
                  +{? FILTER.STATUS='M' || "and FAKZ.AM=:_b " || "" ?}
                  +{? _sts='' || "" || "and FAKZ.STS in :_c" ?};
         {? FAKZ.sel_size() || FAKZ.sel_adel() ?};
         FAKZ.prefix();
         FAKZ.f_set(_sort,_from,_where,ST.AR,ST.AM,_sts)
      ?}
   ?};
   {? _msk<>''
   || FAKZ.cntx_psh();
      FAKZ.use(_msk);
      FAKZ.prefix();
      {? FAKZ.seek(_fakz)
      || _evatadd:=0;
         _Tab:=sql($"
              select SYM, DW, FAKS.REFERENCE REF from @FAKS where FAKS.SYM=':_a' and FAKS.ODDZ=':_b' and FAKS.KH=:_c
              ",FAKZ.SYM_KOR,ST.ODDZ,FAKZ.KH);
         _wer:=_Tab.mk_sel('Faktury do korekty'@,,,'#kor_zlec_fakt');
         _fb:="sel_exit";
         _Tab.win_fld(_wer,,'SYM',,,20,,,'Symbol'@);
         _Tab.win_fld(_wer,,'DW',,,10,,,'Data wystawienia'@);
         _Tab.win_act(_wer,,'Formuła','Wybierz'@@,,,_fb,,1);
         _Tab.win_sel(_wer);
         {? ~_Tab.first
         || FUN.info('Nie znaleziono faktury korygowanej: %1.'@[FAKZ.SYM_KOR])
         |? _Tab.size=1 | _Tab.select
         || {? FAKS.name()<>8+_Tab.REF || exec('open','open_tab',ST.ODDZ,8+_Tab.REF+2) ?};
            _ref:=FAKS.ref;
            FAKS.prefix();
            {? FAKS.seek(_Tab.REF)
            || ROKMC.AR:=FAKS.AR;
               BEER.WYSTFAKS:=null();
               HELP.KHB:=null();
               HELP.KH_ODB:=null();
               exec('koryguj','faktury_nag',1,,_b,,_fakz)
            ?};
            {? ST.AR<>ROKMC.AR || exec('open','open_tab',ST.ODDZ,2-$ST.AR) ?};
            _wyn:=BEER.WYSTFAKS;
            _evatadd:=FAKS.seek(BEER.WYSTFAKS)
         ?};
         {? _evatadd
         || FAKZ.CZY_FAK:='T';
            FAKZ.put(1)
         ?}
      ?};
      FAKZ.cntx_pop()
   ?}
?};
_wyn


\ctrlFAKZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: kontroluje czy podany parametr FAKZ spełnia kryteria wystawienia dokumentu
::   WE: _a - ref FAKZ
::   WY: 1-spełnia 0-nie -1-został zafakturowany do pominięcia 2-spełnia jednakże czeka na akceptacje
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_msk:=ref_name(_a);
{? _msk<>''
|| FAKZ.cntx_psh();
   FAKZ.use(_msk);
   FAKZ.prefix();
   {? FAKZ.seek(_a)
   || _res:=FAKZ.FIRMA=REF.FIRMA & FAKZ.ODDZ=ST.ODDZ & FAKZ.KOREKTA='T';
      {? _res & FAKZ.CZY_FAK<>'N'
      || _res:=-1
      |? _res & FAKZ.STAT_REJ<>'T'
      || _res:=2
      ?}
   ?};
   FAKZ.cntx_pop()
?};
_res


\ctrl_warFAKZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: kontroluje czy podany dokument sprzedaży/zakupu jest zgodny co do wartości z korektą zlecenia fakturowania
::       Uwaga. Kontekst wywołania na tabeli FAKS
::   WE: _a - parametr dla KOMM-a
::       _b - parametr dla KOMM-a
::       _c - zlecenie fakturowania - SQL
::   WY: 1-OK 0-nie jest dobrze
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_fakz:=_c;
{? _fakz<>''
|| _komroot:="{? _b | __kom.find_msg(_a) || __kom.set_root(_a) || __kom.sect_beg(_a) ?}";
   _netto:=exec('FindAndGet','#table',FAKZ,_fakz,,"WN",0);
   _brutto:=exec('FindAndGet','#table',FAKZ,_fakz,,"WB",0);
   {? FAKS.T().FIS<>'T'
   || {? FAKS.NETTO<>_netto
      || _komroot(_a,_b);
         __kom.add('Niezgodność wartości netto dokumentu %1 '
                   'z wartością na zleceniu fakturowania korekty %2.'@[$FAKS.NETTO,$_netto],4);
         _res:=0
      ?}
   || {? FAKS.BRUTTO<>_brutto
      || _komroot(_a,_b);
         __kom.add('Niezgodność wartości brutto dokumentu %1 '
                   'z wartością na zleceniu fakturowania korekty %2.'@[$FAKS.BRUTTO,$_brutto],4);
         _res:=0
      ?}
   ?}
?};
_res


\f_set_rbk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
::   WE: [_a] - 0/1 - wołane dla FAKS.VSKIDRBK
:: OPIS: Ustawia filtr dla rachunków bankowych
::----------------------------------------------------------------------------------------------------------------------
_rvat:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_sort:='N,TAB';

_kh:=exec('kh2rbk','faktury_wspolne');
{? FAKS.SZ='S' & _rvat
|| _kh_faktor:=exec('kh_faktor','edi_fo_ksef')
|| _kh_faktor:=null()
?};

_where1:={? RACHBANK.AKTYWNY<>'' || 'AKTYWNY=\':_a\'' || '' ?};
{? FAKS.SZ='S' & _rvat
|| {? _where1<>''
   || _where1+=' and '
   ?};
   _where1+='"WAL"=\''+$INFO.NAROD+'\''
?};
{? _where1<>''
|| _where1+=' and '
?};
{? RACHBANK.FIRMA
|| _where1+='FIRMA=:_b'
|| _where1+='FIRMA is null'
?};

{? FAKS.SZ='S'
|| _where2:='"TAB"=\''+__Firma+'INFO\'';
   {? _kh<>null & exec('ps_65','rachunki')='T'
   || _where2+=' or ("TAB"=\''+REF.FIRMA().SYMBOL+'KH2\' and "REF"=\''+$#_kh+'\' ) '
   ?};
   _where2+=' or ("TAB"=\'KH\' and "REF" in ' +
            '(select reference_num(kh) from kh_dod '+
            'where faktor = \'T\' and firma = \''+$REF.FIRMA+'\'))';
   _where2:='('+_where2+')'
|| _where2:='"TAB"=\'KH\' and "REF"=\''+$#_kh+'\''
?};

_where:=_where1+' and '+_where2;

SKID_RBK.index('TAB');
SKID_RBK.prefix();
SKID_RBK.f_set(_sort,,_where,RACHBANK.AKTYWNY,RACHBANK.FIRMA);
SKID_RBK.hdr_sel();
SKID_RBK.hdr_sel(exec('rbk_kh_tyt','rachunki',KH.SKR));
~~


\rbk_zakres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Zmienia zakres filtra prezentowanych rachunków bankowych
::----------------------------------------------------------------------------------------------------------------------
RACHBANK.win_edit('ZAKRES');
_akt:=RACHBANK.AKTYWNY;
{? RACHBANK.edit()
|| _domain:=exec('cur_domain_sym','#b__box');
   {? _domain='LSP'
   || exec('f_set_rbk','faktury_nag')
   |? _domain='FKS'
   || exec('f_set_rbk','dok_fks1')
   ?}
|| RACHBANK.AKTYWNY:=_akt
?};
~~


\brakNipNaPar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.51]
:: OPIS: Informuje, że brak NIP na paragonie przy włączonym drukowaniu NIP na paragonie
::   WE: _a - $FAKS.ref()
::       _b - 0-nie informować, 1-informować
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _b=0 || return(0) ?};
__result:=_b;
exec('FindAndGet','#table',FAKS,_a,,"
   {? FAKS.NIP=''
   &  (
      ST.FIS & exec('get','#params',300164)*('|'+ST.FIS().KOD+'|')
      | exec('get','#params',2160,2,OPERATOR.USER)='T'
      )
   ||
      FUN.info('Nie podano NIP na paragonie.'@);
      __result:=0
   ?}
");
_result:=__result;
VAR_DEL.delete('__result');
_result


\koryguj_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: Generowanie danych korekty nagłówkowej
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_kor:=FAKS.ref();
_fksql:=FAKS.FKSQL;
_powkor:=FAKS.POWKOR;

_kz_uid:=exec('FindAndGet','#table',FAKS,_kor,,"FAKS.uidref()",'');

FAKS.cntx_psh();
FAKS_KZF.cntx_psh();
FAKS_KZF.index('KZ_UID');
FAKS_KZF.prefix(_kz_uid);

{? ~FAKS_KZF.first()
||
   do();
:: FAKS_KZF -  dodanie dwóch zapisów w celu wygenerowania korekty zerującej obrót
::             i przywracającej obrót wg nowych kryteriów
   FAKS_KZF.blank(1);
   FAKS_KZF.FAKS:=_kor;
   FAKS_KZF.FAKS_UID:=_kz_uid;
   FAKS_KZF.FAK:=_fksql;
   exec('FindAndGet','#table',FAKS,_fksql,,"
      FAKS_KZF.FAK_DW:=FAKS.DW;
      FAKS_KZF.FAK_SYM:=FAKS.SYM;
      FAKS_KZF.FAK_TYP:=FAKS.T
      ");
   FAKS_KZF.add();
   FAKS_KZF.add();
:: dostosowanie danych korekty nagłówkowej
   FAKS.put();
   exec('del_plat','faktury_plat',_kor);
   FAP.index('FAP');
   FAP.prefix(_kor);
   _loop:=FAP.first();
   {!
   |? _loop
   |!
      _loop:=exec('fap2del','faktury_poz',0)
   !};
   end()
?};
FAKS_KZF.cntx_pop();
FAKS.cntx_pop()


\copyND2ND
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Uproszczona kopia dokumentu rozchodowego na podstawie przychodu 1-1
::   WE: _a - ref ND
::       _b - typ dokumentu
::       [_c] - kontrahent
::       [_d] - odbiorca
::   WY: 1-wszystko się udało 0-niestety
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
{? _a<>null() & _b<>null()
|| ND.cntx_psh();
   DK.cntx_psh();
   _refZ:=_a;
   _refDO:=null();
   ND.prefix();
   {? ND.seek(_refZ)
   || ND.KH:=_c;
      ND.TYP:=_b;
      ND.KH_ODB:=_d;
      POM.TAB:='ND';
      POM.TYPDOK:=exec('FindAndGet','#table',TYPYDOK,_b,,"KOD",'');
      POM.NRT:=exec('FindAndGet','#table',TYPYDOK,_b,,"NRT",0);
      ND.NR:=0;
      {? ND.add(1)
      || ND.NR:=exec('numer_new','numery','PACZKA');
         exec('znak','numery','ND');
         {? ND.put(1)
         || _refDO:=ND.ref();
            _res:=1
         || {? do_state()<2 & ~Plugin.run('BEFORE_DELTAB_001',ND.ref()) & do_state() || undo() ?};
            numer:=ND.NR;
            oldnumer:=1;
            exec('nr_old','numery');
            ND.del()
         ?}
      ?};
      {? _refDO<>null()
      || DK.index('DOKMAG');
         DK.prefix(_refZ);
         {? DK.first()
         || {!
            |? ND.cntx_psh();
               DK.cntx_psh();
               DK.prefix();
               DK.N:=_refDO;
               DK.KH:=DK.N().KH;
               DK.KH_ODB:=DK.N().KH_ODB;
               DK.PLUS:={? DK.PLUS='T' || 'N' || 'T' ?};
               {? ~DK.add(1) || _res:=0 ?};
               ND.cntx_pop();
               DK.cntx_pop();
               _res & DK.next()
            !}
         ?}
      ?}
   ?};
   {? _res || exec('dk_sum','magdok_wspolne',_refDO) ?};
   ND.cntx_pop();
   DK.cntx_pop()
?};
_res


\faks_dz_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: przed redakcją FAKS.DZ - data otrzymania
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
FAKS.WHERE<>'N' & ~FAKS.WGZWR


\faks_dz_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: po redakcją FAKS.DZ - data otrzymania
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
1


\faks_kopiuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Dokument sprzedaży/zakupu - Kopiuj
::----------------------------------------------------------------------------------------------------------------------
params_exec('faks_kopiuj','faktury_nag1')


\faks_kopiuj_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Dokumenty sprzedaży/zakupu - Kopiuj (przed grupą rekordów)
::----------------------------------------------------------------------------------------------------------------------
params_exec('faks_kopiuj_bg','faktury_nag1')


\faks_kopiuj_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Dokumenty sprzedaży/zakupu - Kopiuj (po grupie rekordów)
::----------------------------------------------------------------------------------------------------------------------
params_exec('faks_kopiuj_ag','faktury_nag1')


\kopiuj_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Walidacja parametrów kopiowania dokumentów sprzedaży
::   WE: [_a] - czy sprawdzać pole z liczbą kopii (domyślnie 0 - nie)
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _chk_lk:=_a || _chk_lk:=0 ?};

_result:='D';
_okro:=exec('szuk_okro','okresy',HELP.D);
{? _okro=null()
|| FUN.info('Brak okresu zgodnego z podaną datą: %1.'@[$HELP.D])
|| _status:=exec('status','okresy',_okro,'LSP');
   {? _status=-1
   || FUN.info('Brak dziedziny %1.'@['LSP'])
   |? _status=0
   || FUN.info('Okres %1 jest niedostępny.'@[exec('FindAndGet','#table',OKRO,_okro,,"NAZWA+' '+$ROK",'')])
   |? _status=1
   || _result:=1
   |? _status=2
   || FUN.info('Okres %1 jest zamknięty.'@[exec('FindAndGet','#table',OKRO,_okro,,"NAZWA+' '+$ROK",'')])
   ?}
?};

{? _chk_lk & type_of(_result)=type_of(0) & _result=1
|| _lk:=exec('get','#params',300204,1);
   {? HELP.LK>_lk
   || FUN.info('Za dużo kopii.\nMaksymalna liczba kopii to %1.'@[$_lk]);
      HELP.LK:=_lk;
      _result:='LK'
   |? exec('itsPositive','#field',1,,HELP.LK)=0
   || _result:='LK'
   ?}
?};

_result


\kornag_fld2kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: pola do korekty nagłówkowej
::   WE: _a - 0/1 zwracać akrnim bieżącego pola
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_p300211:=
   {? {? var_pres('_a')=type_of(0) || _a || 0 ?}
   || '|'+cur_afld()+'|'
   || '|'+exec('get','#params',300211)+'|'
   ?};
{? _p300211*'|KH|' || _p300211+='NAZ|KH_KRISO|KH_KRAJ|MIASTO|UL|DOM|LOKAL|KPOCZ|POCZ|NIP|' ?};
{? _p300211*'|KH_ODB|' || _p300211-=1; _p300211+=exec('kornag_fld2kor_khodb','faktury_nag') ?};
{? _p300211*'|SKID_RBK|' || _p300211+='VSKIDRBK|' ?};
_p300211


\kornag_fld2kor_khodb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: pola do korekty nagłówkowej - odbiorca
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'|O_NAZ|O_KRISO|O_KRAJ|O_MIASTO|O_UL|O_DOM|O_LOKAL|O_KPOCZ|O_POCZ|O_NIP|'


\kornag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: korekta nagłówkowa
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;

_faks:=params_get.faks;
_fld2kor:=1-exec('kornag_fld2kor','faktury_nag');
{? _fld2kor='|' || return(0) ?};
_wsk:=_fld2kor*'|';

{!
|? _wsk & _wyn=0
|!
   _fld:=_wsk+_fld2kor-1; _fld2kor:=_wsk-_fld2kor; _wsk:=_fld2kor*'|';
   _ff:='_a.'+_fld;
   _bval:=($_ff)(_faks);
   _val:=($_ff)(FAKS);
   _wyn:=_bval<>_val
!};
_wyn


\faks_fld_czy_ed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: czy można edytować pole w tabeli FAKS
::   WE: [_a] - akronim pola
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_fld:={? var_pres('_a')=type_of('') || _a || cur_afld() ?};
{? _fld='NIP' || _fld:='NIP_UE' ?};
_fld:='|'+_fld+'|';

{? FAKS.WHERE='K'
||
:: korekta zbiorcza bez wystawionych korekt cząstkowych
   exec('kznf1_czy_ed','faktury_nag')

|? FAKS.WHERE='N'
||
:: korekta nagłówkowa
   {? exec('kornag_fld2kor','faktury_nag')*_fld
   || exec('kznf1_czy_ed','faktury_nag')
   ?}

|? FAKS.SZ='S' & FAKS.T().KOR='T' & FAKS.T().HIS='N'
||
   {? '|KH|'*_fld || 0
   |? exec('kornag_fld2kor','faktury_nag')*_fld || 0
   || 1
   ?}
||
   1
?}


\display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Lista zadań TO-DO, podgląd dokumentu
::   WE: [_a] - ref dokumentu,
::----------------------------------------------------------------------------------------------------------------------
_rezultat:=0;
{? var_press('_a')=7
|| FAKS.cntx_psh();
   FAKS.use(ref_name(_a));
   {? FAKS.seek(_a)
   || exec('FAKS','display')
   || FUN.emsg('Dokument o identyfikatorze: %1 nie istnieje'@[exec('val2display','#convert',_a)])
   ?};
   FAKS.cntx_pop()
|| _rezultat:=-1
?};
_rezultat


\faks_dane_do_intrastat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Dane do intrastat - nagłówek dokumentu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('faks_dane_do_intrastat','faktury_nag1')


\faks_przed_kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: zwraca wartości pól nagłówka korekty przed ich zmianą
::   WE: _a - data wystawienia
::       _b - typ dokumentu
::       _c - 0-dokument z dokumentu w obiegu; 1-wpp
::       [_d] - wynik funkcji \kor/faktury_nag.fml
::       [_e] - ONUM, do którego szukamy
::   WY: obj_new
::----------------------------------------------------------------------------------------------------------------------
_dw:=_a;
_ts:=_b;
_zwykla:=_c;
_onum_max:={? var_pres('_e')=type_of(0) || _e || -1 ?};
_kor:=
   {? var_pres('_d')=type_of(0)
   || _d
   |? FAKS.FKSQL=''
   || exec('kor','faktury_nag',0,0)
   || exec('FindAndGet','#table',FAKS,FAKS.FKSQL,,"_onum_max:=_b; exec('kor','faktury_nag',0,_onum_max)",0,_onum_max)
   ?};
::    _faks - wartości pól nagłówka korekty przed ich zmianą
_faks:=obj_new(
   'SYM','WHERE',
   'KH','NIP_UE','KH_ODB','HAN',
      'NAZ','KH_KRISO','KH_KRAJ','MIASTO','UL','DOM','LOKAL','KPOCZ','POCZ','NIP',
      'O_NAZ','O_KRISO','O_KRAJ','O_MIASTO','O_UL','O_DOM','O_LOKAL','O_KPOCZ','O_POCZ','O_NIP',
   'KPW','WD','RTRANSAK','RTRANSPO','IST_TYP','IST_OKR',
   'PROJEKT','PROJEKTY',
   'CB','SPOBLRAB','RAB_TYP','GRATISY','NDVAT','DO_UE',
   'ID','MAG','SP_WYM',
   'DW','D','DO','DO_NA_DR','DZ',
   'SKID_RBK','NB','RBK',
   'VSKIDRBK','VNB','VRBK',
   'RAB',
   'KRS_REF','BKRS','KRS','BNKRS','NKRS',
   'KRAJ_VAT','PROC');
:: dane pobrane z korygowanej faktury
::    symbol korygowanej faktury
_faks.SYM:=FAKS.SYM;
_faks.WHERE:=FAKS.WHERE;
::    rabat
_faks.RAB:=FAKS.RAB;
::    kursy handlowy, opodatkowania
_faks.KRS_REF:=$FAKS.ref();
_faks.KRS:=FAKS.KRS;
_faks.NKRS:=FAKS.NKRS;
::    kontrahent, nip_ue, odbiorca, handlowiec
_faks.KH:=FAKS.KH;
_faks.NIP_UE:=FAKS.NIP_UE;
_faks.NAZ:=FAKS.NAZ;
_faks.KH_KRISO:=FAKS.KH_KRISO;
_faks.KH_KRAJ:=FAKS.KH_KRAJ;
_faks.MIASTO:=FAKS.MIASTO;
_faks.UL:=FAKS.UL;
_faks.DOM:=FAKS.DOM;
_faks.LOKAL:=FAKS.LOKAL;
_faks.KPOCZ:=FAKS.KPOCZ;
_faks.POCZ:=FAKS.POCZ;
_faks.NIP:=FAKS.NIP;
_faks.KH_ODB:=FAKS.KH_ODB;
_faks.O_NAZ:=FAKS.O_NAZ;
_faks.O_KRISO:=FAKS.O_KRISO;
_faks.O_KRAJ:=FAKS.O_KRAJ;
_faks.O_MIASTO:=FAKS.O_MIASTO;
_faks.O_UL:=FAKS.O_UL;
_faks.O_DOM:=FAKS.O_DOM;
_faks.O_LOKAL:=FAKS.O_LOKAL;
_faks.O_KPOCZ:=FAKS.O_KPOCZ;
_faks.O_POCZ:=FAKS.O_POCZ;
_faks.O_NIP:=FAKS.O_NIP;
_faks.HAN:=FAKS.HAN;
::    intrastat
_faks.KPW:=FAKS.KPW;
_faks.WD:=FAKS.WD;
_faks.RTRANSAK:=FAKS.RTRANSAK;
_faks.RTRANSPO:=FAKS.RTRANSPO;
_faks.IST_TYP:=FAKS.IST_TYP;
_faks.IST_OKR:=FAKS.IST_OKR;
::    projekty
_faks.PROJEKT:=FAKS.PROJEKT;
_faks.PROJEKTY:=FAKS.PROJEKTY;
::    parametry wyliczeń
_faks.CB:=FAKS.CB;
_faks.SPOBLRAB:=FAKS.SPOBLRAB;
_faks.RAB_TYP:=FAKS.RAB_TYP;
_faks.GRATISY:=FAKS.GRATISY;
_faks.NDVAT:=FAKS.NDVAT;
_faks.DO_UE:=FAKS.DO_UE;
::    data sprzedaży/zaliczki, data dostawy
_faks.D:=FAKS.D;
::    data otrzymania
_faks.DO:=FAKS.DO;
_faks.DO_NA_DR:=FAKS.DO_NA_DR;
::    rachunek
_faks.SKID_RBK:=FAKS.SKID_RBK;
_faks.NB:=FAKS.NB;
_faks.RBK:=FAKS.RBK;
::    rachunek vat
_faks.VSKIDRBK:=FAKS.VSKIDRBK;
_faks.VNB:=FAKS.VNB;
_faks.VRBK:=FAKS.VRBK;
::    pozostałe
_faks.ID:=FAKS.ID;
_faks.MAG:=FAKS.MAG;
_faks.SP_WYM:=exec('sp_default','faktury_wspolne',_ts);
:: dane pobrane z korekty lub korekty częściowej
{? _kor=1 & (ref_name(xx_ref_nag)+2)<>'hs'
||
::    rabat
   _faks.RAB:=xx_rab;
::    kursy handlowy, opodatkowania
   _faks.KRS_REF:=xx_krs_ref;
   _faks.KRS:=xx_krs;
   _faks.NKRS:=xx_nkrs;
::    kontrahent, nip_ue, odbiorca, handlowiec
   _faks.KH:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"KH",_faks.KH);
   _faks.NIP_UE:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"NIP_UE",_faks.NIP_UE);
   _faks.NAZ:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"NAZ",_faks.NAZ);
   _faks.KH_KRISO:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"KH_KRISO",_faks.KH_KRISO);
   _faks.KH_KRAJ:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"KH_KRAJ",_faks.KH_KRAJ);
   _faks.MIASTO:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"MIASTO",_faks.MIASTO);
   _faks.UL:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"UL",_faks.UL);
   _faks.DOM:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"DOM",_faks.DOM);
   _faks.LOKAL:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"LOKAL",_faks.LOKAL);
   _faks.KPOCZ:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"KPOCZ",_faks.KPOCZ);
   _faks.POCZ:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"POCZ",_faks.POCZ);
   _faks.NIP:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"NIP",_faks.NIP);
   _faks.KH_ODB:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"KH_ODB",_faks.KH_ODB);
   _faks.O_NAZ:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"O_NAZ",_faks.O_NAZ);
   _faks.O_KRISO:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"O_KRISO",_faks.O_KRISO);
   _faks.O_KRAJ:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"O_KRAJ",_faks.O_KRAJ);
   _faks.O_MIASTO:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"O_MIASTO",_faks.O_MIASTO);
   _faks.O_UL:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"O_UL",_faks.O_UL);
   _faks.O_DOM:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"O_DOM",_faks.O_DOM);
   _faks.O_LOKAL:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"O_LOKAL",_faks.O_LOKAL);
   _faks.O_KPOCZ:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"O_KPOCZ",_faks.O_KPOCZ);
   _faks.O_POCZ:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"O_POCZ",_faks.O_POCZ);
   _faks.O_NIP:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"O_NIP",_faks.O_NIP);
   _faks.HAN:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"HAN",_faks.HAN);
::    rachunek
   _faks.SKID_RBK:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"SKID_RBK",_faks.SKID_RBK);
   _faks.NB:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"NB",_faks.NB);
   _faks.RBK:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"RBK",_faks.RBK);
::    rachunek vat
   _faks.VSKIDRBK:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"VSKIDRBK",_faks.VSKIDRBK);
   _faks.VNB:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"VNB",_faks.VNB);
   _faks.VRBK:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"VRBK",_faks.VRBK);
::    data sprzedaży
   _faks.D:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"D",_faks.D);
::    data otrzymania
   _faks.DO:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"DO",_faks.DO);
   _faks.DO_NA_DR:=exec('FindAndGet','#table',FAKS,xx_ref_nag,,"DO_NA_DR",_faks.DO_NA_DR)
?};
:: dane pobrane dla korekty historycznej
{? FAKS.T().HIS='T' & FAKS.KOR<>''
||
::    symbol korygowanej faktury
   _faks.SYM:=FAKS.KOR
?};
:: dane pobrane z faktury lub korekty
::    kursy handlowy, opodatkowania dla wartości przed korektą
_faks.BKRS:=xx_bkrs;
_faks.BNKRS:=xx_bnkrs;
::    data wystawienia
_faks.DW:=_dw;
:: pozostałe
{? exec('sp_active','faktury_wspolne',{? _zwykla || _faks.DW || EDOKUM.DW ?}) || _faks.SP_WYM:=FAKS.SP_WYM ?};
_faks.KRAJ_VAT:=FAKS.KRAJ_VAT;
_faks.PROC:=FAKS.PROC;
_faks


\z_edokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Czy dokument z dokumentu w obiegu
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
FAKS.EDOKUM<>'' & (6+FAKS.EDOKUM)=(6+EDOKUM.name())


\faks_sp_wym_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: przed redakcją FAKS.SP_WYM
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
params_exec('faks_fld_czy_ed','faktury_nag')


\faks_sp_wym_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: przed redakcją FAKS.SP_WYM
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? exec('faks_fld_czy_ed','faktury_nag')
||
   params_exec('faks_fld_fill','faktury_nag1');
   exec('faks_win_edit_btn_opt','faktury_nag');
   exec('set_efld_opt','faktury_nag')
?};
1


\addnag_mwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.14]
:: OPIS: Dodaje nagłówek dokumentu - używana w webserwisie
::   WE: _a - "bufor" tabeli FAKS
::   WY: null() / FAKS.ref()
::----------------------------------------------------------------------------------------------------------------------
_buffer:=_a;
exec('add','faktury_nag',
   _buffer.T,
   _buffer.D,
   _buffer.LKSQL,
   _buffer.KH,
   _buffer.FKSQL,
   _buffer.KOR,
   _buffer.KK,
   _buffer.RAB,
   'T',
   'FAK',
   _buffer.DW,
   ,
   _buffer.ONUM,
   _buffer.KH_ODB,
   ,,,,,,,,,,,
   _buffer.PL
);
:aktualizacja pól
FAKS.cntx_psh();
{? type_of(_buffer.HAN)=0
||
   FAKS.HAN:=null()
?};
{? type_of(_buffer.ID)=2
||
   FAKS.ID:=_buffer.ID
?};
{? (exec('get','#params',300802,2)='T') & (type_of(_buffer.ID)=2)
||
   FAKS.SYM:=_buffer.ID
?};
FAKS.WHERE:=_buffer.WHERE;
FAKS.TZ:=_buffer.TZ;
FAKS.PL:=_buffer.PL;
FAKS.STS:=_buffer.STS;
FAKS.memo_set(_buffer.UWAGI,'UWAGI');
FAKS.prefix();
{? FAKS.put() || FAKS.memo_put(,'UWAGI') ?};
FAKS.cntx_pop();

FAKS.ref()


\addnag_mwa_g
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.14]
:: OPIS: Dodaje nagłówek dokumentu - używana w webserwisie
::   WE: _a - "bufor" tabeli FAKS
::   WY: null() / FAKS.ref()
::----------------------------------------------------------------------------------------------------------------------
_buffer:=_a;
exec('add','faktury_nag',
   _buffer.T,
   _buffer.D,
   _buffer.LKSQL,
   _buffer.KH,
   _buffer.FKSQL,
   _buffer.KOR,
   _buffer.KK,
   _buffer.RAB,
   'T',
   'FAK',
   _buffer.DW,
   ,
   _buffer.ONUM,
   _buffer.KH_ODB,
   ,,,,,,,,,,,
   _buffer.PL
);
:aktualizacja pól
FAKS.cntx_psh();
{? type_of(_buffer.HAN)=0
||
   FAKS.HAN:=null()
?};
{? type_of(_buffer.ID)=2
||
   FAKS.ID:=_buffer.ID
?};
{? (exec('get','#params',300802,2)='T') & (type_of(_buffer.ID)=2)
||
   FAKS.SYM:=_buffer.ID
?};
FAKS.WHERE:=_buffer.WHERE;
FAKS.MAG:=_buffer.MAG;
FAKS.TZ:=_buffer.TZ;
FAKS.PL:=_buffer.PL;
FAKS.STS:=_buffer.STS;
FAKS.prefix();
FAKS.put();
FAKS.cntx_pop();

FAKS.ref()


\faks_dane_do_intrastat_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Dane do intrastat - akceptacja
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('faks_dane_do_intrastat_akc','faktury_nag1')


\faks_dane_do_intrastat_wyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Dane do intrastat - wycofanie akceptacji
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('faks_dane_do_intrastat_wyc','faktury_nag1')


\vrbk_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.51_52_2]
:: OPIS: Przed redakcją FAKS.VSKIDRBK
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.SZ='S' & FAKS.WAL=FAKS.NWAL || return(0) ?};

exec('rbk_be','faktury_nag',1)


\vrbk_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.51_52_2]
:: OPIS: Po redakcją FAKS.VSKIDRBK
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? params_exec('rbk_ae','faktury_nag',1)
||
   FAKS.VNB:=FAKS.VSKIDRBK().BANK().NB;
   FAKS.VRBK:=FAKS.VSKIDRBK().N;
   1
?}


\intrast_pops
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Ustawia zmienną INTRAST.POPS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('intrast_pops','faktury_nag1')


\dop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Data operacji
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.SZ='S' & FAKS.WHERE<>'L' & FAKS.T().HIS<>'T' & PAR_SKID.get(308)='T'
|| {? FAKS.DO<>date(0,0,0) || FAKS.DO || FAKS.D ?}
|| FAKS.D
?}


\wymagany_vskidrbk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Czy wymagane wypełnienie pola FAKS.VSKIDRBK?
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
FAKS.WAL<>FAKS.NWAL & FAKS.BRUTTO>0
   &
exec('get','#params',100326,2)='T'
   &
FAKS.SP_WYM='T'


\blp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Sprawdza BLP
::   WE: _a - grupowa akceptacja
::   WY: obj_new
::----------------------------------------------------------------------------------------------------------------------
_group:=_a;
_wyn:=obj_new('WYN','TXT');
_wyn.WYN:=1;
_wyn.TXT:='';
_txt:='';
_px00327:=exec('get','#params',{? FAKS.SZ='Z' || 200327 || 300327 ?},2);
{? _px00327<>'N' & exec('spr_typ','blp',FAKS.KH)
||
   _txt_ask:='\n\nCzy kontynuować akceptację dokumentu?'@;
:: sprawdzenie kontahenta
   _blp_d:=exec('dop','faktury_wspolne');
   _blp:=exec('check','blp','K',FAKS.KH().SNIP,_blp_d);
   FAKS.ID_S_VAT:=_blp.ID_REQ;
   FAKS.put();
   {? _blp.ACTIVE<>'T'
   || {? _blp.ACTIVE='N'
      ||
         _txt:='Nieaktywny podatnik VAT na dzień %1.'@[$_blp_d];
         {? _group | _px00327='T'
         ||
            _wyn.WYN:=0
         ||
            _wyn.WYN:=FUN.ask(_txt+_txt_ask)
         ?}
      ||
         _txt:='Nie powiodło się sprawdzenie podatnika VAT.'@;
         {? _group
         ||
            _wyn.WYN:=0
         ||
            _wyn.WYN:=FUN.ask(_txt+_txt_ask)
         ?}
      ?}
   ||
      {? FAKS.SZ='Z' & FAKS.NB<>'' & exec('spr_rb','blp','FAKS')
      ||
         obj_del(_blp);
:: sprawdzenie rachunku bankowego
         _blp:=exec('check','blp','B',FAKS.KH().SNIP,_blp_d,FAKS.RBK);
         {? _blp.ACTIVE<>'T'
         ||
            {? _blp.ACTIVE='N'
            ||
               _txt:='Nieaktywny rachunek bankowy %1 na dzień %2.'@[FAKS.RBK,$_blp_d];
               {? _group | _px00327='T'
               ||
                  _wyn.WYN:=0
               ||
                  _wyn.WYN:=FUN.ask(_txt+_txt_ask)
               ?}
            ||
               _txt:='Nie powiodło się sprawdzenie rachunku bankowego %1.'@[FAKS.NB];
               {? _group
               ||
                  _wyn.WYN:=0
               ||
                  _wyn.WYN:=FUN.ask(_txt+_txt_ask)
               ?}
            ?}
         ?}
      ?}
   ?}
?};
_wyn.TXT:=_txt;
_wyn


\faks_kzf_w_intra
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Czy dokument uwzględniony deklaracji Intrastat?
::   WE: _a - FAKS.ref()
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_faks:=_a;
_result:=0;
_kz_uid:=exec('FindAndGet','#table',FAKS,_a,,"FAKS.uidref()",'');
FAKS_KZF.cntx_psh();
FAKS_KZF.index('KZ_UID');
FAKS_KZF.prefix(_kz_uid);
_loop:=FAKS_KZF.first();
{!
|? _loop
|!
   _result:=exec('FindAndGet','#table',FAKS,FAKS_KZF.KOR,,"FAKS.INTRA='T'",0);
   _loop:=_result=0 & FAKS_KZF.next()
!};
FAKS_KZF.cntx_pop();
_result


\zal_lista
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.51]
:: OPIS: Lista zaliczek powiązanych z dokumentem
::   WE: _a - FAKS.ref()
::   WY: uchwyt do tabeli
::  OLD: \zal_lista/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_faks:=$_a;

_Tab:=tab_tmp(1
   ,'FAKS_SYM','STRING[20]','Symbol'
   ,'DW','DATE','Data wystawienia'
   ,'KW','REAL','Kwota zaliczki'
   ,'WAL','STRING[8]','Waluta'
   ,'FAKS','STRING[20]','$FAKS.ref()');

{? FAKS.WHERE='L'
||
:: zaliczki powiązane
   FAPOW.index('FAKS_K');
   FAPOW.prefix(_faks,'N');
   {? FAPOW.first()
   ||
      _qq:="
         select distinct
            FAPOW.FAKS_SYM as FAKS_SYM,
            FAPOW.DW as DW,
            FAPOW.KW_PO_K as KW,
            FAPOW.WAL as WAL,
            FAPOW.FAKS as FAKS
         from
            FAPOW
         where
            FAPOW.F=':_a'
            and FAPOW.FAKS_SYM<>':_b'
            and FAPOW.KH=:_c
            and FAPOW.WAL=':_d'
            and FAPOW.KOREKTA='N'
            and FAPOW.AKC='T'
            and FAPOW.POZ<:_e
      ";
      _Tab1:=sql($_qq,FAPOW.F,FAPOW.FAKS_SYM,FAPOW.KH,FAPOW.WAL,FAPOW.POZ);
      _loop:=_Tab1.first();
      {!
      |? _loop
      |!
         _Tab.blank();
         _Tab.FAKS_SYM:=_Tab1.FAKS_SYM;
         _Tab.DW:=_Tab1.DW;
         _Tab.KW:=_Tab1.KW;
         _Tab.WAL:=_Tab1.WAL;
         _Tab.FAKS:=_Tab1.FAKS;
         _loop:=_Tab.add() & _Tab1.next()
      !}
   ?}
||
:: rozliczone zaliczki
   FAKSV.cntx_psh();
   FAPOW.index('END_K');
   FAPOW.prefix(_faks,'N');
   _loop:=FAPOW.first();
   {!
   |? _loop
   |!
      _Tab.blank();
      _Tab.FAKS_SYM:=FAPOW.FAKS_SYM;
      _Tab.DW:=FAPOW.DW;
      _Tab.KW:=FAPOW.KW;
      _Tab.WAL:=FAPOW.WAL;
      _Tab.FAKS:=FAPOW.FAKS;
      _loop:=_Tab.add() & FAPOW.next()
   !};
   FAKSV.cntx_pop()
?};

::_Tab.win_sel(_Tab.mk_sel('',,1,'zal_lista'));
::_Tab.select();

_Tab


\check_tz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Sprawdzenie terminu zapłaty
::   WE: _a - czy pytanie
::       _b - _komid
::       _c - 0-korekta zbiorcza; 1-korekty pojedyncza
::       _d - _txt_ask
::       _e - _komroot
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_a:=_a;
_komid:=_b;
_c:=_c;
_txt_ask:=_d;
_komroot:=_e;
_wyn:=1;
{? var_pres('WIELKOSC',XINFO)=27
||
   _p300216:=exec('get','#params',300216,2);
   _p300217:=exec('get','#params',300217,2);
   _brutto:=exec('brutto','faktury_plat',FAKS.ref());
   {? FAKS.SZ='S' & _brutto<>0
   ||
      _dlu:=FAKS.KH().WIELKOSC;
      _wie:=XINFO.WIELKOSC;
      _par_tz:=_p300216;
      {? _brutto<0
      ||
         _dlu:=XINFO.WIELKOSC;
         _wie:=FAKS.KH().WIELKOSC;
         _par_tz:=_p300217
      ?};
::    _d_pub - dłużnik publiczny
      _d_pub:=_dlu='publiczny';
::    _d_pub - dłużnik duży
      _d_big:=_dlu='duży';
::    _w_mms - wierzyciel mikro lub mały lub średni
      _w_mms:=_wie<>'' & 'mikro|mały|średni'*_wie;
      _ldni:=
         {? _d_big & _w_mms || XINFO.L_D_POZ
         |? _d_pub || XINFO.L_D_PUB
         || 0
         ?};
      {? _ldni
      ||
         _tz:=FAKS.DW+_ldni;
         {? exec('get','#params',300202,2)='T'
         ||
            {! |? exec('spr_kal','faktury_plat',_tz)=1
            |! _tz+=1
            !}
         ?};
         {? FAKS.TZ>_tz
         ||
            _txt:='Przekroczono maksymalny termin płatności %1.'@[$_tz];
            {? FAKS.WHERE<>'K'  || _komroot(_komid,_c); __kom.add(_txt,7) ?};
            {? _a=0 | _par_tz='T'
            ||
               {? FAKS.WHERE='K' || FUN.info(_txt) ?};
               {? _par_tz<>'N' || _wyn:=0 ?}

            |? _par_tz='P'
            ||
               _wyn:=FUN.ask(_txt+_txt_ask)
            ?}
         ?}
      ?}
   ?}
?};
_wyn


\faks_sym_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Formuła określająca ikony
::----------------------------------------------------------------------------------------------------------------------
"{? FAKS.SZ='Z'
 || {? FAKS.OBI_POW<>''
    || 'xwin16.png:90'
    || exec('pusta','#icon')
    ?}
 || ''
 ?}
"


\faks_war_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Formuła określająca ikony dla powiązanych opłat
::----------------------------------------------------------------------------------------------------------------------
"{? exec('FindInSet','#table','FAKS_K','TAXS',FAKS.uidref())<>null()
 || 'xwin16.png:10'
 || exec('pusta','#icon')
 ?}
"


\info_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PD] [22.26]
:: OPIS: Kolor pola FAKS.INFO
::----------------------------------------------------------------------------------------------------------------------
{? 5+FAKS.INFO=5+'Brak załączników'@        || Color.fnd_kol('F_INFO#01#01')
|? 5+FAKS.INFO=5+'Nie wysłano załączników'@ || Color.fnd_kol('F_INFO#01#02')
|? 5+FAKS.INFO=5+'Załącznik'@               || Color.fnd_kol('F_INFO#01#03')
|? 5+FAKS.INFO=5+'Wysłano załączniki'@      || Color.fnd_kol('F_INFO#01#04')
|| ''
?}


\info_blank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Informacja o załącznikach
::----------------------------------------------------------------------------------------------------------------------
'Brak załączników'@


\faks_akceptuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument zakupu - Akceptuj
::       Obsługa w formule main
::   WE: [_a] - 0(domyślnie) 1-automatyczna akcja
::       [_b] - akcja grupowa
::----------------------------------------------------------------------------------------------------------------------\
_autoakc:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_group:={? var_pres('_b')=type_of(0) || _b || 0 ?};
{? FAKS.SZ='S'
||
   _Sel:=FAKS.sel_aget();
   {? _autoakc & _Sel.first() || {! |? _Sel.del() !} ?};
   {? ~_Sel.first() || _Sel.REF:=#FAKS.ref(); _Sel.add() ?};

   _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='LSP_FAK_EASP';
   _params.AKCJA:={? _autoakc || 'AkceptujAuto' || 'Akceptuj' ?};
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   {? _autoakc
   ||
      _params.GRUPA:={? _group || 'T' || 'N' ?}

   |? _Sel.first() & _Sel.next()
   ||
      _params.GRUPA:='T';
      {? ~FUN.ask('Zaakceptować zaznaczone dokumenty?'@) || return(0) ?};
      exec('ini_kom','#message','Grupowe akceptuj'@)

   |? FAKS.EDOKUMEN='T'
   ||
      _params.GRUPA:='T';
      {? ~FUN.ask('Zaakceptować dokument %1?'@[FAKS.SYM]) || return(0) ?};
      exec('ini_kom','#message','Grupowe akceptuj'@)
   ?};

   _loop:=_Sel.first();
   {? _loop
   ||
      _size:=_Sel.size();
      _licz:=0;
      _prgs:=100*_licz/_size;
      progress(_prgs,'\nTrwa akceptacja (%1\%)\n'@[$int(_prgs)],'Akceptuj'@)
   ?};
   {!
   |? _loop
   |!
      _licz+=1;
      _prgs:=100*_licz/_size;
      progress(_prgs,'\nTrwa akceptacja dokumentu %1 (%2\%)\n'@[
         exec('record','#to_string',FAKS.ref()),$int(_prgs)],'Akceptuj'@);
      {? FAKS.seek(_Sel.REF,)
      ||
         _params.UIDREF:=FAKS.uidref();
         exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FAKS',FAKS.ref());

         exec('mp_run','#b__box',_params)
      ?};
      _loop:=_Sel.next()
   !};
   prgs_clr();
   {? ~_autoakc & _params.GRUPA='T'
   ||
      exec('end_kom','#message');
      exec('grp_dr_done','param_wydr');
      FAKS.sel_adel()
   ?};
   0
||
   _Sel:=FAKS.sel_aget();
   {? _autoakc & _Sel.first() || {! |? _Sel.del() !} ?};
   {? ~_Sel.first() || _Sel.REF:=#FAKS.ref(); _Sel.add() ?};

   _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='LZK_ZAK_EZAK';
   _params.AKCJA:={? _autoakc || 'AkceptujAuto' || 'Akceptuj' ?};
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   {? _Sel.first() & _Sel.next()
   ||
      _params.GRUPA:='T';
      {? ~FUN.ask('Zaakceptować zaznaczone dokumenty?'@) || return(0) ?};
      exec('ini_kom','#message','Grupowe akceptuj'@)
   ?};

   _loop:=_Sel.first();
   {!
   |? _loop
   |!
      {? FAKS.seek(_Sel.REF,)
      ||
         _params.UIDREF:=FAKS.uidref();
         exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FAKS',FAKS.ref());

         exec('mp_run','#b__box',_params);

         FAKS.get();

         {? FAKS.EDOKUMEN<>'T' & FAKS.CZY_DRUK='X' & FAKS.STAT_REJ='T' & FAKS.WHERE<>'G'
         || exec('fak_druk_gr','faktury_wspolne',1,'LSP_FAK_ZWFS','Area Utwórz PDF',,1)
         ?}
      ?};
      _loop:=_Sel.next()
   !};
   {? _params.GRUPA='T'
   ||
      exec('end_kom','#message');
      FAKS.sel_adel()
   ?};
   0
?}


\faks_zwrot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Zwrot do magazynu
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_DZWF';
_params.UIDREF:=FAKS.uidref();
_params.AKCJA:='Zwrot';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'KORS',FAKS.ref());

exec('mp_run','#b__box',_params)


\faks2nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokumenty magazynowe na podstawie faktury
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_DWYF';
_params.UIDREF:=FAKS.uidref();
_params.AKCJA:='Wydania';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FAKS',FAKS.ref());

exec('mp_run','#b__box',_params)

:Sign Version 2.0 jowisz:1045 2024/02/20 14:59:52 9b9050c5c82d09579dee818a96c90e99164135ad1d521ff205570cd08de4c76b4c9dacaf6bafccd755e6da71687a79f69ab20ad138e33d9e802d7384dd52e0751d26d8a53ce08f8693c68c46742940fe82dd4f8b8aef2e70ed2102a7546f55141088ed8aedf957692bb35b2584084eaceb334a92dd7f134fad26f9bcd66b0bd4
