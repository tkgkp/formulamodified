:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: transport_koszt.fml
:: Utworzony: 04.02.2020
:: Autor: [rr]
:: Systemy:
::======================================================================================================================
:: Zawartość: Koszty dla transportu i dyspozycji transportowych
::======================================================================================================================


\koszty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wyświetlenie i wprowadzenie kosztów
::----------------------------------------------------------------------------------------------------------------------
TR_Z.TR_NAG:=null();
TR_Z.TR_NZL:=TR_NZL.ref();
TR_Z.MJS:='D';

_arch:=(TR_KOS.name()+4)<>'____';
{? _arch
|| _awep:=TR_KOS.actions('WEP','dpUC:d');
   _awer:=TR_KOS.actions('WER','dpUFE:d')
|| _awer:=TR_KOS.actions('WER','')
?};
_fb:="TR_KOS.index('TR_NZL_R');
      TR_KOS.prefix(TR_NZL.ref(),'T');
      exec('refresh_sum','transport_koszt');
      grp_disp(TR_KOS,'WER');
      TR_KOS.index('TR_NZL_P');
      TR_KOS.prefix(TR_NZL.ref(),'T');
      grp_disp(TR_KOS,'WEP')
     ";
_fr:="TR_Z.KPLAN:='T';
      TR_Z.KREAL:='N'";
_win_grp:=TR_KOS.grp_make('Koszty transportu'@,_fb,'koszt_grp',,,,_fr);
_fb:="exec('before_plan','transport_koszt')";
_fa:="exec('after_plan','transport_koszt')";
_fr:="exec('refresh_sum','transport_koszt')";
TR_KOS.grp_sel(_win_grp,,'WEP',,_fr,,,10,_fb,_fa,,,'maximized_with_title');
TR_KOS.grp_splt(_win_grp,,'horizontal','rzeczywiste',0);

_fb:="exec('before_real','transport_koszt')";
_fa:="exec('after_real','transport_koszt')";
_fr:="exec('refresh_sum','transport_koszt')";
TR_KOS.grp_sel(_win_grp,,'WER',,_fr,,,10,_fb,_fa,,,'maximized_with_title');


TR_KOS.win_sel(_win_grp);
TR_KOS.select();
{? _arch
|| TR_KOS.actions('WEP',_awep);
   TR_KOS.actions('WER',_awer)
|| TR_KOS.actions('WER',_awer)
?};
~~


\koszty_tra
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wyświetlenie i wprowadzenie kosztów
::----------------------------------------------------------------------------------------------------------------------
TR_Z.TR_NAG:=TR_NAG.ref();
TR_Z.TR_NZL:=null();
TR_Z.MJS:='N';

_arch:=(TR_KOS.name()+4)<>'____';
{? _arch
|| _awen:=TR_KOS.actions('WEN','dpUR:d');
   _awer:=TR_KOS.actions('WER','dpUFE:d')
|| _awer:=TR_KOS.actions('WER','d:d')
?};
_fb:="TR_KOS.index('TR_NAG');
      TR_KOS.prefix(TR_Z.TR_NAG);
      grp_disp(TR_KOS,'WEN');
      TR_KOS.index('TR_NAG_R');
      TR_KOS.prefix(TR_Z.TR_NAG,'T');
      exec('refresh_sum','transport_koszt');
      grp_disp(TR_KOS,'WER')
     ";
_win_grp:=TR_KOS.grp_make('Koszty transportu'@,_fb,'koszt_grp',,,);
_fb:="exec('before_tran','transport_koszt')";
_fa:="exec('after_tran','transport_koszt')";
_fr:="exec('refresh_sum','transport_koszt')";
TR_KOS.grp_sel(_win_grp,,'WEN',,_fr,,,10,_fb,_fa,,,'maximized_with_title');
TR_KOS.grp_splt(_win_grp,,'horizontal','rzeczywiste',0);

_fb:="exec('before_tras','transport_koszt')";
_fa:="exec('after_tras','transport_koszt')";
_fr:="exec('refresh_sum','transport_koszt')";
TR_KOS.grp_sel(_win_grp,,'WER',,_fr,,,10,_fb,_fa,,,'maximized_with_title');

TR_KOS.win_sel(_win_grp);
TR_KOS.select();
{? _arch
|| TR_KOS.actions('WEN',_awen);
   TR_KOS.actions('WER',_awer)
|| TR_KOS.actions('WER',_awer)
?};
~~

\koszty_pla
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wyświetlenie i wprowadzenie kosztów - planowanych
::----------------------------------------------------------------------------------------------------------------------
TR_Z.TR_NAG:=null();
TR_Z.TR_NZL:=TR_NZL.ref();
TR_Z.MJS:='D';
TR_Z.KPLAN:='T';
TR_Z.KREAL:='N';

_arch:=(TR_KOS.name()+4)<>'____';
{? _arch
|| _awep:=TR_KOS.actions('WEP','dpUC:d')
?};
TR_KOS.index('TR_NZL_P');
TR_KOS.prefix(TR_Z.TR_NZL,'T');
TR_KOS.actions('WEP','C');
TR_KOS.win_sel('WEP');
TR_KOS.select();
TR_KOS.actions('WEP','');
{? _arch
|| TR_KOS.actions('WEP',_awep)
?};
~~


\before_plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Przegląd planowanych kosztów
::----------------------------------------------------------------------------------------------------------------------
TR_KOS.cntx_psh();
TR_Z.KPLAN:='T';
TR_Z.KREAL:='N';
TR_Z.TR_NAG:=null();
TR_KOS.index('TR_NZL_P');
TR_KOS.prefix(TR_Z.TR_NZL,'T');
exec('refresh_sum','transport_koszt');
~~


\after_plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Przegląd planowanych kosztów
::----------------------------------------------------------------------------------------------------------------------
TR_KOS.cntx_pop();
~~


\before_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Przegląd rzeczywistych kosztów
::----------------------------------------------------------------------------------------------------------------------
TR_KOS.cntx_psh();
TR_Z.KPLAN:='N';
TR_Z.KREAL:='T';
TR_Z.TR_NAG:=null();
TR_KOS.index('TR_NZL_R');
TR_KOS.prefix(TR_Z.TR_NZL,'T');
exec('refresh_sum','transport_koszt');
~~


\after_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Przegląd rzeczywistych kosztów
::----------------------------------------------------------------------------------------------------------------------
TR_KOS.cntx_pop();
~~


\before_tran
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Przegląd planowanych kosztów
::----------------------------------------------------------------------------------------------------------------------
TR_KOS.cntx_psh();
TR_Z.KPLAN:='N';
TR_Z.KREAL:='T';
TR_Z.TR_NZL:=null();
TR_KOS.index('TR_NAG');
TR_KOS.prefix(TR_Z.TR_NAG);
exec('refresh_sum','transport_koszt');
~~


\after_tran
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Przegląd planowanych kosztów
::----------------------------------------------------------------------------------------------------------------------
TR_KOS.cntx_pop();
~~



\before_tras
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Przegląd planowanych kosztów
::----------------------------------------------------------------------------------------------------------------------
TR_KOS.cntx_psh();
TR_Z.KPLAN:='N';
TR_Z.KREAL:='T';
TR_Z.TR_NZL:=null();
TR_KOS.index('TR_NAG_R');
TR_KOS.prefix(TR_Z.TR_NAG,'T');
exec('refresh_sum','transport_koszt');
~~


\after_tras
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Przegląd planowanych kosztów
::----------------------------------------------------------------------------------------------------------------------
TR_KOS.cntx_pop();
~~


\refresh_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Odświeżenie podsumowania
::----------------------------------------------------------------------------------------------------------------------
TR_Z.RN:=TR_Z.RB:=TR_Z.RV:=0;

TR_KOS.cntx_psh();
{? TR_Z.TR_NAG<>null()
|| _buf:=tab_tmp(1,'SQL','STRING[16]','');
   TR_KOS.index('TR_NAG_R');
   TR_KOS.prefix(TR_Z.TR_NAG);
   {? TR_KOS.first()
   || {!
      |? {? TR_KOS.TR_NZL<>null() & (_buf.clear(); _buf.prefix($TR_KOS.TR_NZL); ~_buf.first())
         || _buf.blank();
            _buf.SQL:=$TR_KOS.TR_NZL;
            _buf.add(1);
            TR_KOS.cntx_psh();
            TR_KOS.index('TR_NZL_P');
            TR_KOS.prefix(TR_KOS.TR_NZL);
            {? TR_KOS.first()
            || {!
               |? {? TR_KOS.PLAN='T' || TR_Z.RN-=TR_KOS.WN; TR_Z.RV-=TR_KOS.WV; TR_Z.RB-=TR_KOS.WB ?};
                  {? TR_KOS.REAL='T' || TR_Z.RN+=TR_KOS.WN; TR_Z.RV+=TR_KOS.WV; TR_Z.RB+=TR_KOS.WB ?};
                  TR_KOS.next()
               !}
            ?};
            TR_KOS.cntx_pop()
         ?};
         TR_KOS.next()
      !}
   ?};
   obj_del(_buf)
|| TR_KOS.index('TR_NZL_P');
   TR_KOS.prefix(TR_Z.TR_NZL);
   {? TR_KOS.first()
   || {!
      |? {? TR_KOS.PLAN='T' || TR_Z.RN-=TR_KOS.WN; TR_Z.RV-=TR_KOS.WV; TR_Z.RB-=TR_KOS.WB ?};
         {? TR_KOS.REAL='T' || TR_Z.RN+=TR_KOS.WN; TR_Z.RV+=TR_KOS.WV; TR_Z.RB+=TR_KOS.WB ?};
         TR_KOS.next()
      !}
   ?}
?};
TR_KOS.cntx_pop();
~~


\posv_ktr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: po redakcji pola stawka VAT
::----------------------------------------------------------------------------------------------------------------------
{? TR_KOS.SV<>null
|| exec('suma_ktr','transport_koszt');
   1
|| FUN.info('Należy podać stawkę VAT.'@);
   0
?}


\suma_ktr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: oblicza wartosc po redakcji pola
::----------------------------------------------------------------------------------------------------------------------
_wsp:=(#((TR_KOS.SV().KOD*'%')+TR_KOS.SV().KOD-1))*0.01;
{? _wsp<>0
|| TR_KOS.WV:=TR_KOS.WN*_wsp $2
|| TR_KOS.WV:=0
?};
TR_KOS.WB:=TR_KOS.WN+TR_KOS.WV;
1


\prwn_ktr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przed redakcja pola TR_KOS.WN
::----------------------------------------------------------------------------------------------------------------------
TR_KOS.WAL=INFO.NAROD


\pown_ktr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: po redakcji pola wartosc netto
::----------------------------------------------------------------------------------------------------------------------
{? TR_KOS.WN>0
|| exec('suma_ktr','transport_koszt');
   1
|| FUN.info('Należy podać wartość netto.'@);
   0
?}


\powv_ktr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: po redakcji pola wartosc VAT
::----------------------------------------------------------------------------------------------------------------------
exec('suma_ktr','transport_koszt');
1


\powb_ktr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: po redakcji pola wartosc brutto
::----------------------------------------------------------------------------------------------------------------------
exec('suma_ktr','transport_koszt');
1


\powal_ktr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: po redakcji pola waluta
::----------------------------------------------------------------------------------------------------------------------
{? TR_KOS.WAL<>null
|| 1
|| FUN.info('Należy podać walutę.'@);
   0
?}


\prww_ktr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przed redakcja pola wartosci w walucie
::   WY: jesli waluta rozna od narodowej to mozna edytowac
::----------------------------------------------------------------------------------------------------------------------
TR_KOS.WAL<>exec('bl_wal','ustawienia')


\poww_ktr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: po redakcji pola wartosc w walucie
::----------------------------------------------------------------------------------------------------------------------
{? TR_KOS.WW>0
|| TR_KOS.WN:={? TR_KOS.KRS<>0 || TR_KOS.WN:=TR_KOS.WW*TR_KOS.KRS || TR_KOS.WW ?} $2;
   1
|| FUN.info('Należy podać wartość w walucie.'@);
   0
?}


\prkrs_ktr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przed redakcja pola kurs dla waluty
::   WY: jesli waluta rozna od narodowej to mozna edytowac
::----------------------------------------------------------------------------------------------------------------------
TR_KOS.WAL<>INFO.NAROD


\pokrs_ktr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: po redakcji pola kurs na koszcie transportu
::----------------------------------------------------------------------------------------------------------------------
{? TR_KOS.KRS>0
|| TR_KOS.WN:={? TR_KOS.KRS<>0 || TR_KOS.WN:=TR_KOS.WW*TR_KOS.KRS || TR_KOS.WW ?} $2;
   1
|| FUN.info('Należy podać wartość kursu.'@);
   0
?}


\bl_kplan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wartość początkowa pola TR_KOS.PLAN
::----------------------------------------------------------------------------------------------------------------------
TR_Z.KPLAN


\bl_kreal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wartość początkowa pola TR_KOS.REAL
::----------------------------------------------------------------------------------------------------------------------
TR_Z.KREAL


\bl_trnzl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wartość początkowa TR_KOS.TR_NZL
::----------------------------------------------------------------------------------------------------------------------
TR_Z.TR_NZL


\bl_trnag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wartość początkowa TR_KOS.TR_NAG
::----------------------------------------------------------------------------------------------------------------------
TR_Z.TR_NAG


\chk_ktr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: sprawdza czy wypelniono dla TR_KOS pola Opis i Wartosc netto
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? form(TR_KOS.OPIS)=''
|| FUN.info('Należy podać opis kosztu.'@);
   _res:='OPIS'
|? TR_KOS.WAL<>INFO.NAROD & TR_KOS.WW<=0
|| FUN.info('Należy podać wartość w walucie większą od zera.'@);
   _res:='WW'
|? TR_KOS.WN<=0
|| FUN.info('Należy podać wartość netto większą od zera.'@);
   _res:='WN'
|? TR_KOS.SV=null
|| FUN.info('Należy podać stawkę VAT.'@);
   _res:='SV'
|? TR_KOS.TR_NAG<>null() & TR_KOS.TR_NZL=null() & TR_KOS.WN<TR_KOS.WR
|| FUN.info('Wartość rozpisana kosztu ogólnego to %1.\n'
            'Bez zmiany rozliczenia nie można zmienić wartości netto na mniejszą.'@[$TR_KOS.WR]);
   TR_KOS.WN:=TR_KOS.WR;
   _res:='WN'
|| ''
?};
_res


\del_ktr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: usunięcie kosztu
::----------------------------------------------------------------------------------------------------------------------
TR_KOS.get();
{? TR_KOS.DOK_REF<>''
|| FUN.info('Koszt został dodany do dokumentu %1.'
    '\nUsunięcie kosztu niemożliwe.'@[exec('FindAndGet','#table',ND,TR_KOS.DOK_REF,,"SYM",'')]);
   return(0)
?};
{? exec('isCopy2ND','transport_koszt',TR_KOS.IDADD)
|| FUN.info('Koszt został przeniesiony do kosztów dokumentu magazynowego.\n'
    'Ażeby usunąć koszt należy usunąć przeniesione koszty na powiązanym dokumencie magazynowym.\n'
    'Można również zaktualizować wartość kosztu na dokumencie magazynowym opcja: "Przenieś na dokument".'
    '\n\nUsunięcie kosztu niemożliwe.'@);
   return(0)
?};
_opc:={? TR_KOS.REAL='T' || 2+{? TR_KOS.ID_POW<>'' || 1 || 0 ?} || 1 ?};
{? _opc & FUN.ask({? _opc=3
                  || 'Czy usunąć rzeczywisty koszt transportu?'
                     '\n\nUwaga. Koszt powiązany z kosztem planowanym.\nPowiązanie zostanie usunięte.'@
                  |? _opc=2
                  || 'Czy usunąć rzeczywisty koszt transportu?'@
                  || 'Czy usunąć planowany koszt transportu?'@
                  ?})
|| {? _opc=3
   || TR_KOS.cntx_psh();
      TR_KOS.prefix();
      {? TR_KOS.seek(TR_KOS.ID_POW)
      || TR_KOS.ID_POW:='';
         TR_KOS.put(1)
      ?};
      TR_KOS.cntx_pop();
      TR_KOS.del()
   || TR_KOS.del()
   ?}
?};
~~


\plan2real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: usunięcie kosztu
::----------------------------------------------------------------------------------------------------------------------
_tab:=TR_KOS.sel_aget();
_refresh:=0;
TR_KOS.sel_adel();
TR_KOS.cntx_psh();
{? ~_tab.size()
|| _tab.blank();
   _tab.REF:=#TR_KOS.ref();
   _tab.add(1)
?};
{? _tab.first() & FUN.ask('Czy przenieść wskazane koszty jako rzeczywiste?'@)
|| {!
   |? {? (TR_KOS.prefix(); TR_KOS.seek(_tab.REF,)) & TR_KOS.REAL='N' & TR_KOS.ID_POW=''
      || TR_KOS.ID_POW:=TR_KOS.uidref();
         TR_KOS.PLAN:='N';
         TR_KOS.REAL:='T';
         {? TR_KOS.add(1)
         || _uidref:=TR_KOS.uidref();
            _refresh:=1;
            {? (TR_KOS.prefix(); TR_KOS.seek(_tab.REF,)) & TR_KOS.REAL='N'
            || TR_KOS.ID_POW:=_uidref;
               TR_KOS.put(1)
            ?}
         ?}
      ?};
      _tab.next()
   !}
?};
TR_KOS.cntx_pop();
{? _refresh || grp_disp(TR_KOS,'WER') ?};
~~


\rek_ktr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: usunięcie kosztu
::----------------------------------------------------------------------------------------------------------------------
_act:={? TR_Z.KREAL='T' || 'R' || 'F' ?}
     +{? TR_KOS.ID_KOS<>'' | TR_KOS.FAK='Z' | (TR_KOS.ID_POW<> & TR_KOS.PLAN='T') || 'pUF' || '' ?}+
     +{? TR_KOS.TR_NZL<>null() & TR_KOS.TR_NZL().KH=null() || 'F' || '' ?};
TR_KOS.actions_grayed('WER',_act);
~~


\autorozl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wyswietla i aktualizuje koszty
::----------------------------------------------------------------------------------------------------------------------
_trREF:=TR_NAG.ref();
TR_Z.WAL:=exec('bl_wal','ustawienia');

{? var_pres('__trakos')>100 || obj_del(__trakos) ?};
__trakos:=tab_tmp(3,'TREE','TREE_REF',''
           ,'LAB','STRING[100]',''
           ,'REF','STRING[20]',''
           ,'WAR','REAL',''
           ,'ROZ','REAL',''
           ,'FIL','REAL',''
           ,'FWB','REAL',''
           ,'NZL','STRING[20]',''
           ,'KRAJ','STRING[20]',''
           ,'MIASTO','STRING[30]',''
           ,'UL','STRING[150]',''
           ,'NUMER','STRING[40]',''
           ,'LOKAL','STRING[8]',''
           ,'UID','STRING[48]',''
           ,'BLK','INTEGER',''
           ,'WAL','STRING[3]','');

_win_sel:=__trakos.mk_sel('Rozpisane kosztów dla transportu: %1'@[TR_NAG.SYM],'P',,'pow_traksel',,,
   __trakos.size(),1);
__trakos.win_fld(_win_sel,,'LAB',,,52,,1,'');
__trakos.win_fld(_win_sel,,'KRAJ',,,10,,1,'Kraj'@);
__trakos.win_fld(_win_sel,,'MIASTO',,,10,,1,'Miasto'@);
__trakos.win_fld(_win_sel,,'UL',,,15,,1,'Ulica'@);
__trakos.win_fld(_win_sel,,'NUMER',,,10,,1,'Numer'@);
__trakos.win_fld(_win_sel,,'LOKAL',,,8,,1,'Lokal'@);
__trakos.win_fld(_win_sel,,'WAR',,,12,2,1,'Do rozpisania'@);
__trakos.win_fld(_win_sel,,'FIL',,,12,0,1,'Ilość pozycji'@);
__trakos.win_fld(_win_sel,,'ROZ',,,12,2,0,'Wartość rozpisana'@);
__trakos.win_fld(_win_sel,,'WAL',,,6,,1,'Waluta'@);
__trakos.win_act(_win_sel,0,'Popraw',,,,"exec('pop_trak','transport_koszt')"
  ,"exec('roz_trak','transport_koszt',__trakos.TREE)",1);
__trakos.win_act(_win_sel,0,'Formuła','Ro&zpisz proporcjonalnie'@@,,,"exec('autotrak','transport_koszt')",,0,1,
   "exec('autotrak','transport_koszt')");
__trakos.win_act(_win_sel,0,'Formuła','&Akceptuj'@@,,,,"exec('akc_trak','transport_koszt')",,0);
__trakos.win_act(_win_sel,0,'Rekord',,,,"exec('rek1trak','transport_koszt')","exec('rek2trak','transport_koszt')",0);
__trakos.tr_fml(_win_sel,,"1");
__trakos.win_fml(_win_sel,,'LAB',,'ICON_BEFORE',"
   {? __trakos.TREE=0
   ||
      {? __trakos.tr_state()=1
      || 'xwin16.png:75'
      || 'xwin16.png:74'
      ?}
   || 'xwin16.png:76'
   ?}
");
__trakos.win_sel(_win_sel);
__trakos.fld_fml('WAR','DISPLAY_FORMAT',"{? __trakos.TREE || 'empty=1' || 'empty=0' ?}");

TR_NZL.cntx_psh();
TR_KOS.cntx_psh;
TR_KOS.index('TR_NAG');
TR_KOS.prefix(_trREF);
{? TR_KOS.first()
|| {!
   |? _trUID:=TR_KOS.uidref();
      __trakos.clear;
      __trakos.blank;
      __trakos.TREE:=0;
      __trakos.LAB:=TR_KOS.OPIS;
      __trakos.WAL:=TR_KOS.WAL().KOD;
      __trakos.WAR:={? TR_Z.WAL=TR_KOS.WAL || TR_KOS.WN || TR_KOS.WW ?};
      __trakos.ROZ:=TR_KOS.WR;
      __trakos.REF:=$TR_KOS.ref;
      __trakos.FIL:=0;
      __trakos.FWB:=0;
      __trakos.NZL:=$TR_KOS.ref;
      __trakos.UID:=_trUID;
      _korzen:={? __trakos.add(1) || #__trakos.ref || 0 ?};
      _ali:=0;
      _alw:=0;
      _wal:=__trakos.WAL;
      _roz:=__trakos.WAR;
      TR_NZL.index('TR_NAG');
      TR_NZL.prefix(_trREF,'no');
      {? TR_NZL.first()
      || {!
         |? __trakos.clear;
            __trakos.blank;
            __trakos.LAB:=TR_NZL.SYM+' [%1]'@[TR_NZL.KTM];
            __trakos.KRAJ:=TR_NZL.KRAJ;
            __trakos.MIASTO:=TR_NZL.MIASTO;
            __trakos.UL:=TR_NZL.UL;
            __trakos.NUMER:=TR_NZL.NUMER;
            __trakos.LOKAL:=TR_NZL.LOKAL;
            __trakos.TREE:=_korzen;
            __trakos.WAR:=_roz;
            __trakos.WAL:=_wal;
            __trakos.ROZ:=exec('FindInSet','#table','TR_KOS','ID_KOS',TR_NZL.ref(),_trUID
                           ,"{? @.TR_Z.WAL=@.TR_KOS.WAL || @.TR_KOS.WN || @.TR_KOS.WW ?}",,,0);
            __trakos.FIL:=exec('FindInSet','#table','TR_ZL','POZREF','',TR_NZL.ref(),"@.TR_ZL.size()",,,0);
            __trakos.FWB:=0;
            __trakos.REF:=$TR_KOS.ref();
            __trakos.NZL:=$TR_NZL.ref();
            __trakos.UID:=_trUID;
            _ali+=__trakos.FIL;
            _alw+=__trakos.WAR;
            _tr_nzl:=exec('FindAndGet','#table',TR_NZL,__trakos.NZL,,,null());
            __trakos.BLK:=exec('FindInSet','#table','TR_KOS','ID_KOS'
                           ,TR_NZL.ref(),__trakos.UID,"@.TR_KOS.M<>null()",,,0);
            __trakos.add(1);
            TR_NZL.next()
         !}
      ?};
      __trakos.clear;
      {? __trakos.seek(_korzen,)
      || __trakos.FIL:=_ali;
         __trakos.FWB:=_alw;
         __trakos.put(1);
         exec('roz_trak','transport_koszt',_korzen)
      ?};
      TR_KOS.next()
   !}
?};

__trakos.clear();
__trakos.select();
TR_NZL.cntx_pop();
TR_KOS.cntx_pop();
grp_disp(TR_KOS,'WER');
~~


\roz_trak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: aktualizuje wartosc rozliczona
::   WE: _a - __trakos.TREE
::----------------------------------------------------------------------------------------------------------------------
{? _a<>0
|| _roz:=0;
   __trakos.cntx_psh;
   __trakos.clear;
   __trakos.prefix(_a);
   {? __trakos.first || {! |? _roz+=__trakos.ROZ; __trakos.next !} ?};
   __trakos.clear;
   {? __trakos.seek(_a,) || __trakos.ROZ:=_roz; __trakos.put(1) ?};
   __trakos.cntx_pop
?};
1


\pop_trak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przed akcja popraw = sprawdzamy czy pozostalo cos do rozpisania
::----------------------------------------------------------------------------------------------------------------------
{? __trakos.TREE & __trakos.ROZ
|| ~__trakos.BLK
|| _ref:=__trakos.TREE;
   _all:=0;
   _roz:=0;
   __trakos.cntx_psh;
   __trakos.clear;
   _all:={? __trakos.seek(_ref,) || __trakos.WAR || 0 ?};
   __trakos.prefix(_ref);
   {? __trakos.first || {! |? _roz+=__trakos.ROZ; __trakos.next !} ?};
   __trakos.cntx_pop;
   _all>_roz
?}


\autotrak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: automatyczna rozpiska kosztow
::----------------------------------------------------------------------------------------------------------------------
_tab:=__trakos.sel_aget();  __trakos.sel_adel();

{? _tab.size & FUN.ask('Rozpisanie kosztów dotyczyć będzie zaznaczonych rekordów.\nCzy kontynuować?'@)
||
:: rozpiska automatyczna wg zaznaczonych rekordow
   _rozp:=tab_tmp(2,'TREE','INTEGER',''
           ,'REF','INTEGER',''
           ,'ALI','REAL',''
           ,'ROZ','REAL','');

   __trakos.cntx_psh;

   _tab.clear;
   {? _tab.first
   || {!
      |? {? (__trakos.clear; __trakos.seek(_tab.REF,))
         || {? __trakos.TREE=0
            || _ref:=#__trakos.ref;
               __trakos.clear;
               __trakos.prefix(_ref);
               {? __trakos.first
               || {!
                  |? {? ~__trakos.BLK
                     || _rozp.clear;
                        _rozp.blank;
                        _rozp.TREE:=_ref;
                        _rozp.REF:=#__trakos.ref;
                        _rozp.ALI:=__trakos.FIL;
                        _rozp.ROZ:=__trakos.ROZ;
                        _rozp.add(1)
                     ?};
                     __trakos.next
                  !}
               ?}
            |? ~__trakos.BLK & (_rozp.clear; _rozp.prefix(__trakos.TREE); ~_rozp.find_key(#__trakos.ref))
            || _rozp.clear;
               _rozp.blank;
               _rozp.TREE:=__trakos.TREE;
               _rozp.REF:=#__trakos.ref;
               _rozp.ALI:=__trakos.FIL;
               _rozp.ROZ:=__trakos.ROZ;
               _rozp.add(1)
            || ''
            ?}
         ?};
         _tab.next
      !}
   ?};
   obj_del(_tab);

   _pozp:=sql('select distinct :_a.TREE TREE, sum(:_a.ALI) ALI, sum(:_a.ROZ) ROZ from :_a '+
           ' group by :_a.TREE order by 1 ',_rozp);
   _pozp.clear;
   {? _pozp.first
   || {!
      |? {? (__trakos.clear; __trakos.seek(_pozp.TREE,); __trakos.WAR-__trakos.ROZ+_pozp.ROZ>0)
         || _ali:=_pozp.ALI;
            _roz:=__trakos.WAR-__trakos.ROZ+_pozp.ROZ;
            _rok:=__trakos.WAR-__trakos.ROZ+_pozp.ROZ;
            _max:=0;
            _rgr:=null;
            _rozp.clear;
            _rozp.prefix(_pozp.TREE);
            {? _rozp.first
            || {!
               |? {? (__trakos.clear; __trakos.seek(_rozp.REF,))
                  || __trakos.ROZ:={? _ali>0 || _roz*(__trakos.FIL/_ali) $2 || 0 ?};
                     __trakos.put(1);
                     {? __trakos.FIL>_max || _max:=__trakos.FIL; _rgr:=__trakos.ref ?};
                     _rok-=__trakos.ROZ
                  ?};
                  _rozp.next
               !}
            ?};
            {? _rok<>0 & _rgr<>null & (__trakos.clear; __trakos.seek(_rgr))
            || __trakos.ROZ+=_rok;
               __trakos.put
            ?}
         ?};
         exec('roz_trak','transport_koszt',_pozp.TREE);
         _pozp.next
      !}
   ?};
   __trakos.cntx_pop;
   obj_del(_rozp);
   obj_del(_pozp)
||
:: rozpiska automatyczna dla wszystkich rekordow
   __trakos.cntx_psh;
   __trakos.clear;
   __trakos.prefix(0);
   {? __trakos.first
   || {!
      |? _alw:=__trakos.FWB;
         _ali:=__trakos.FIL;
         _roz:=__trakos.WAR;
         _rok:=__trakos.WAR;
         _ref:=#__trakos.ref;
         _max:=0;
         _rgr:=null;
         __trakos.cntx_psh;
         __trakos.clear;
         __trakos.prefix(_ref);
         {? __trakos.first
         || {!
            |? {? ~__trakos.BLK
               || __trakos.ROZ:={? _ali>0 || _roz*(__trakos.FIL/_ali) $2 || 0 ?};
                  __trakos.put(1);
                  {? __trakos.FIL>_max || _max:=__trakos.FIL; _rgr:=__trakos.ref ?};
                  _rok-=__trakos.ROZ
               ?};
               __trakos.next
            !}
         ?};
         {? _rok<>0 & _rgr<>null & (__trakos.clear; __trakos.seek(_rgr))
         || __trakos.ROZ+=_rok;
            __trakos.put
         ?};
         __trakos.cntx_pop;
         exec('roz_trak','transport_koszt',#__trakos.ref);
         __trakos.next
      !}
   ?};
   __trakos.cntx_pop
?};
1


\rek1trak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: rekord przed
::----------------------------------------------------------------------------------------------------------------------
__trakos.ROZ<>0 & __trakos.TREE


\rek2trak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: rekord po
::----------------------------------------------------------------------------------------------------------------------
_ref:=__trakos.TREE;
_poz:=#__trakos.ref;
_all:=0;
_roz:=0;
__trakos.cntx_psh;
__trakos.clear;
_all:={? __trakos.seek(_ref,) || __trakos.WAR || 0 ?};
__trakos.prefix(_ref);
{? __trakos.first || {! |? _roz+={? (#__trakos.ref)<>_poz || __trakos.ROZ || 0 ?}; __trakos.next !} ?};
__trakos.cntx_pop;
{? __trakos.ROZ>(_all-_roz)
|| FUN.info('Zbyt duża wartość.\nWartość pozostała: %1.'@[form((_all-_roz),,2,'99')]);
   __trakos.ROZ:=(_all-_roz);
   0
|| 1
?}


\akc_trak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: akceptacja rozpiski kosztow
::----------------------------------------------------------------------------------------------------------------------
__trakos.cntx_psh();
__trakos.clear();
_txt:='';
_rozp:=tab_tmp(1,'UID','STRING[48]','','ROZ','REAL','');

{? __trakos.first()
|| {!
   |? {? __trakos.TREE=0
      || _rozp.blank();
         _rozp.UID:=__trakos.UID;
         _rozp.ROZ:=0;
         _rozp.add(1);
         {? __trakos.WAR<>__trakos.ROZ
         || _txt:='Nie wszystkie koszty zostały dokładnie rozpisane.\nZaakceptować rozpisane wartości kosztów?'@
         ?}
      ?};
      __trakos.next()
   !}
?};
__trakos.cntx_pop();
{? _txt='' || _txt:='Zaakceptować rozpisane wartości kosztów?'@ ?};
{? FUN.ask(_txt)
|| sel_exit();

   __trakos.clear();
   {? __trakos.first()
   || {!
      |? {? __trakos.TREE
         || _trUID:=__trakos.UID;
            _trNZL:={? __trakos.NZL<>'' || exec('FindAndGet','#table',TR_NZL,__trakos.NZL,,,null()) || null() ?};

            {? _trNZL<>null()
            || TR_KOS.index('ID_KOS');
               TR_KOS.prefix(_trUID,_trNZL);
               {? __trakos.ROZ>0
               || {? TR_KOS.first()
                  || {? TR_KOS.WAL=TR_Z.WAL
                     || TR_KOS.WN:=__trakos.ROZ
                     || TR_KOS.WW:=__trakos.ROZ;
                        TR_KOS.WN:={? TR_KOS.KRS<>0 || TR_KOS.WN:=TR_KOS.WW*TR_KOS.KRS || TR_KOS.WW ?} $2
                     ?};
                     exec('suma_ktr','transport_koszt');
                     TR_KOS.put(1)
                  || TR_KOS.prefix();
                     TR_KOS.blank();
                     TR_KOS.WAL:=exec('FindAndGet','#table',TR_KOS,_trUID,,"WAL",null());
                     TR_KOS.KRS:=exec('FindAndGet','#table',TR_KOS,_trUID,,"KRS",null());
                     TR_KOS.TR_NAG:=null();
                     TR_KOS.TR_NZL:=_trNZL;
                     TR_KOS.PLAN:='N';
                     TR_KOS.REAL:='T';
                     TR_KOS.OPIS:=exec('FindAndGet','#table',TR_KOS,_trUID,,"OPIS",'');
                     TR_KOS.ID_KOS:=_trUID;
                     {? TR_KOS.WAL=TR_Z.WAL
                     || TR_KOS.WN:=__trakos.ROZ
                     || TR_KOS.WW:=__trakos.ROZ;
                        TR_KOS.WN:={? TR_KOS.KRS<>0 || TR_KOS.WN:=TR_KOS.WW*TR_KOS.KRS || TR_KOS.WW ?} $2
                     ?};
                     TR_KOS.SV:=exec('FindAndGet','#table',TR_KOS,_trUID,,"SV",null());
                     exec('suma_ktr','transport_koszt');
                     TR_KOS.add(1)
                  ?};
                  _rozp.clear();
                  _rozp.prefix(_trUID);
                  {? _rozp.first()
                  || _rozp.ROZ+=__trakos.ROZ;
                     _rozp.put(1)
                  ?}
               |? TR_KOS.first()
               || TR_KOS.del()
               ?}
            |? __trakos.ROZ>0
            || TR_KOS.prefix();
               TR_KOS.blank();
               TR_KOS.WAL:=exec('FindAndGet','#table',TR_KOS,_trUID,,"WAL",null());
               TR_KOS.KRS:=exec('FindAndGet','#table',TR_KOS,_trUID,,"KRS",null());
               TR_KOS.TR_NAG:=null();
               TR_KOS.TR_NZL:=_trNZL;
               TR_KOS.PLAN:='N';
               TR_KOS.REAL:='T';
               TR_KOS.OPIS:=exec('FindAndGet','#table',TR_KOS,_trUID,,"OPIS",'');
               TR_KOS.ID_KOS:=_trUID;
               {? TR_KOS.WAL=TR_Z.WAL
               || TR_KOS.WN:=__trakos.ROZ
               || TR_KOS.WW:=__trakos.ROZ;
                  TR_KOS.WN:={? TR_KOS.KRS<>0 || TR_KOS.WN:=TR_KOS.WW*TR_KOS.KRS || TR_KOS.WW ?} $2
               ?};
               TR_KOS.SV:=exec('FindAndGet','#table',TR_KOS,_trUID,,"SV",null());
               exec('suma_ktr','transport_koszt');
               TR_KOS.add(1);
               _rozp.clear();
               _rozp.prefix(_trUID);
               {? _rozp.first()
               || _rozp.ROZ+=__trakos.ROZ;
                  _rozp.put(1)
               ?}
            ?}
         ?};
         __trakos.next()
      !}
   ?};
   _rozp.clear();
   {? _rozp.first()
   || {!
      |? TR_KOS.prefix();
         {? TR_KOS.seek(_rozp.UID)
         || TR_KOS.WR:=_rozp.ROZ;
            TR_KOS.put(1)
         ?};
         _rozp.next()
      !}
   ?}
?};

obj_del(_rozp);
~~


\poz_rozl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wyświetla pozycje rozliczenia
::----------------------------------------------------------------------------------------------------------------------
_trUID:=TR_KOS.uidref();
_winsel:=TR_KOS.win_sel('?');
_rn:=TR_KOS.WN-TR_KOS.WR;
_wsp:=(#((TR_KOS.SV().KOD*'%')+TR_KOS.SV().KOD-1))*0.01;
_rv:={? _wsp>0 || _rn*_wsp$2 || 0 ?};
_rb:=_rn+_rv;
TR_KOS.cntx_psh();
TR_KOS.index('ID_KOS');
TR_KOS.prefix(_trUID);
{? TR_KOS.first()
|| TR_Z.RN:=_rn;
   TR_Z.RV:=_rv;
   TR_Z.RB:=_rb;
   TR_KOS.win_sel('ROZL');
   TR_KOS.select()
|| FUN.info('Brak powiązanych kosztów rozliczający koszt ogólny: %1.'@[TR_KOS.OPIS])
?};
TR_KOS.cntx_pop();
~~


\tr_kos_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: ustawienie kolorowania dla kosztów transportu
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_wer:=cur_win(1,1);
_act:='';

_sel:=TR_KOS.sel_size()>0;

_act:={? ~_sel & (TR_KOS.REAL='T'
       | (TR_KOS.PLAN='T' & TR_KOS.ID_POW<>''))
                                   || 'C' || 'E' ?}
     +{? ~_sel & (TR_KOS.ID_KOS<>''
       | TR_KOS.FAK='Z'
       | (TR_KOS.PLAN='T' & TR_KOS.ID_POW<>'')
       | (TR_KOS.TR_NAG<>null() & exec('FindInSet','#table','TR_KOS','ID_KOS',TR_KOS.uidref(),,,,null())<>null()))
                                   || 'pU' || '' ?}
     +{? ~_sel & ((TR_KOS.TR_NZL<>null() & TR_KOS.TR_NZL().KH=null()) | TR_KOS.DOK_REF<>'')
                                   || 'E' || '' ?}
     +{? ~_sel & (TR_KOS.REAL='T' & (TR_KOS.M<>null() | exec('isCopy2ND','transport_koszt',TR_KOS.IDADD)<0))
                                   || 'P' || '' ?}
     +{? ~_sel & (TR_Z.KREAL='T' & ~exec('isCopy2ND','transport_koszt'))
                                   || 'N' || '' ?};

{? _wer='WER' & TR_Z.TR_NAG<>null() || _act:='D'+_act+':D' ?};
TR_KOS.actions_grayed(_wer,_act);

_res:={? TR_KOS.DOK_REF<>'' || 'TR_KOS#01#02'
      |? TR_KOS.ID_KOS<>''  || 'TR_KOS#01#01'
      |? TR_KOS.ID_POW<>''  || 'TR_KOS#01#03'
      || ''
      ?};
_res


\dane2fak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: podanie dodatkowych danych do fakturowania
::----------------------------------------------------------------------------------------------------------------------
TR_KOS.get();
{? TR_KOS.DOK_REF<>''
|| FUN.info('Koszt został dodany do dokumentu %1.'
    '\nZmiana danych niemożliwa.'@[exec('FindAndGet','#table',ND,TR_KOS.DOK_REF,,"SYM",'')]);
   return(0)
?};
_rodz:=POMOC.RODZ;
POMOC.RODZ:='U';
_win_red:='FAP';
_win_mat:=M.win_dict('NL_WERU');
_win_act:=M.actions('NL_WERU','W');
TR_Z.WAL:=exec('bl_wal','ustawienia');
TR_Z.win_edit(_win_red);
TR_KOS.get();
{? TR_Z.WAL=TR_KOS.WAL
|| TR_Z.efld_opt(_win_red,'editable=0',TR_KOS,'CW');
   TR_Z.efld_opt(_win_red,'editable=1',TR_KOS,'CN');
   TR_Z.efld_opt(_win_red,'editable=0',TR_KOS,'CB');
   TR_Z.efld_opt(_win_red,'mark=1',TR_KOS,'CN');
   TR_Z.efld_opt(_win_red,'mark=0',TR_KOS,'CW')
|| TR_Z.efld_opt(_win_red,'editable=1',TR_KOS,'CW');
   TR_Z.efld_opt(_win_red,'editable=0',TR_KOS,'CN');
   TR_Z.efld_opt(_win_red,'editable=0',TR_KOS,'CB');
   TR_Z.efld_opt(_win_red,'mark=0',TR_KOS,'CN');
   TR_Z.efld_opt(_win_red,'mark=1',TR_KOS,'CW')
?};
TR_Z.efld_opt(_win_red,'mark=0',TR_KOS,'SV');
{? TR_Z.edit("{? TR_KOS.M<>null()
              || {? TR_KOS.IL<=0
                 || FUN.info('Należy podać ilość większą od zera.'@);
                    'IL'
                 |? TR_KOS.CN<=0
                 || {? TR_KOS.WAL<>exec('bl_wal','ustawienia')
                    || FUN.info('Nalezy podać cenę w walucie wiekszą od zera.'@);
                       'CW'
                    || FUN.info('Nalezy podać cenę netto wiekszą od zera.'@);
                       'CN'
                    ?}
                 || ''
                 ?}
              |? TR_KOS.M=null()
              || {? FUN.ask('Nie wskazano usługi.\nCzy koszt nie będzie dostępny do fakturowania?'@) || '' || 'M' ?}
              || ''
              ?}")
|| {? TR_KOS.M<>null() || TR_KOS.FAK:='T' || TR_KOS.FAK:='N' ?};
   TR_KOS.put(1)
?};
POMOC.RODZ:=_rodz;
M.win_dict(_win_mat);
M.actions('NL_WERU',_win_act);
~~


\pr_dfk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przed redakcją danych do fakturowania
::----------------------------------------------------------------------------------------------------------------------
1


\po_dfk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: po redakcji danych do fakturowania
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
_res:=1;
{? _fld='IL'
|| {? TR_KOS.IL<=0
   || _res:=0;
      FUN.info('Należy podać ilość.'@)
   || _res:=1;
      {? TR_KOS.WAL<>exec('bl_wal','ustawienia')
      || {? TR_KOS.CW=0
         || TR_KOS.CW:=TR_KOS.WW/TR_KOS.IL $TR_KOS.M().DOKL_C;
            TR_KOS.CN:=TR_KOS.CW*TR_KOS.KRS $TR_KOS.M().DOKL_C
         ?}
      || {? TR_KOS.CN=0 || TR_KOS.CN:=TR_KOS.WN/TR_KOS.IL $TR_KOS.M().DOKL_C ?}
      ?};
      exec('ceny_ktr','transport_koszt')
   ?}
|? _fld='CN'
|| {? TR_KOS.CN<=0
   || _res:=0;
      FUN.info('Cena netto musi być większa od zera.'@)
   || _res:=1;
      exec('ceny_ktr','transport_koszt')
   ?}
|? _fld='CB'
|| {? TR_KOS.CN<=0
   || _res:=0;
      FUN.info('Cena netto musi być większa od zera.'@)
   || _res:=1;
      exec('ceny_ktr','transport_koszt')
   ?}
|? _fld='CW'
|| {? TR_KOS.CN<=0
   || _res:=0;
      FUN.info('Cena w walucie musi być większa od zera.'@)
   || _res:=1;
      _cn:=TR_KOS.CW*TR_KOS.KRS $TR_KOS.M().DOKL_C;
      {? _cn<>TR_KOS.CN || TR_KOS.CN:=_cn ?};
      exec('ceny_ktr','transport_koszt')
   ?}
?};
_res


\ceny_ktr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: oblicza wartosc po redakcji pola
::----------------------------------------------------------------------------------------------------------------------
_wsp:=(#((TR_KOS.SV().KOD*'%')+TR_KOS.SV().KOD-1))*0.01;
{? _wsp<>0
|| _cv:=TR_KOS.CN*_wsp $2
|| _cv:=0
?};
TR_KOS.CB:=TR_KOS.CN+_cv;
{? TR_KOS.IL>0 & TR_KOS.CN>0
|| _sum:=0;
   _ww:=TR_KOS.IL*TR_KOS.CW$2;
   _wn:=TR_KOS.IL*TR_KOS.CN$2;
   {? TR_KOS.WW<>_ww || _sum:=1; TR_KOS.WW:=_ww ?};
   {? TR_KOS.WN<>_wn || _sum:=1; TR_KOS.WN:=_wn ?};
   {? _sum || exec('suma_ktr','transport_koszt') ?}
?};
1


\tr_kos2fap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: dodaje pozycje kosztów do faktury
::----------------------------------------------------------------------------------------------------------------------
_r_lock:=exec('r_lock_one','#table',FAKS,FAKS.ref);
{? ~_r_lock
||
   exec('who_rlock_faks','faktury_nag');
   return(0)
?};
TR_KOS.cntx_psh();
TR_KOS.index('KH_FAK');
{? FAKS.KH_ODB<>null()
|| TR_KOS.prefix('T',FAKS.WAL,FAKS.KH,FAKS.KH_ODB)
|| TR_KOS.prefix('T',FAKS.WAL,FAKS.KH)
?};
{? TR_KOS.first()
|| TR_KOS.win_sel('SEL');
   TR_KOS.select()
|| FUN.info('Aktualnie brak kosztów transportu dla kontrahenta %1'@[FAKS.KH().KOD+' '+FAKS.KH().SKR])
?};
TR_KOS.cntx_pop();
exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock);
~~


\wyb_tr_kos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przenosi zaznaczone koszty na faktury
::----------------------------------------------------------------------------------------------------------------------
_faksuid:=FAKS.uidref();
_tab:=TR_KOS.sel_aget();
TR_KOS.sel_adel();
{? ~_tab.size()
|| _tab.blank();
   _tab.REF:=#TR_KOS.ref();
   _tab.add(1)
?};
TR_KOS.cntx_psh();
{? _tab.first() & FUN.ask('Przenieść zaznaczone koszty transprotu na dokument sprzedaży %1?'@[FAKS.SYM])
|| _ok:=1;
   do();
   {!
   |? {? (TR_KOS.prefix(); TR_KOS.seek(_tab.REF,))
      || exec('przyjdod','jm',$TR_KOS.M().J,1,TR_KOS.IL);
         _fap:=exec('ADDPOZF','faktury_poz',TR_KOS.M,TR_KOS.IL,TR_KOS.CN,0
            ,exec('m_vat','material',TR_KOS.M,FAKS.KH,exec('exp_ue','typysp'),ST.AR,ST.AM,TR_KOS.SV,2)
            ,,,TR_KOS.CW,TR_KOS.KRS,TR_KOS.WAL,TR_KOS.M().J,,,,,,);
         {? _fap
         || TR_KOS.FAK:='Z';
            TR_KOS.POZ_REF:=FAP.uidref();
            TR_KOS.DOK_REF:=_faksuid;
            TR_KOS.put(1)
         || _ok:=0;
            undo()
         ?}
      ?};
      _ok & _tab.next()
   !};
   end();
   exec('liczfak','faktury_wspolne');
   exec('sumfak','faktury_wspolne');
   sel_exit()
?};
TR_KOS.cntx_pop();
obj_del(_tab);
~~


\pow_tr_kos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: zwraca uidref-a kosztu transportu na podstawie pozycji faktury
::   WE: _a - uidref FAP
::   WY: uidref TR_KOS lub pusty string
::----------------------------------------------------------------------------------------------------------------------
_res:='';
exec('opentr_psh','open_tab');
_msk:=TR_KOS.names();
{? _msk.first()
|| {!
   |? TR_KOS.use(_msk.NAME);
      TR_KOS.index('POZ_REF');
      TR_KOS.prefix(_a);
      {? TR_KOS.first() || _res:=TR_KOS.uidref() ?};
      _res='' & _msk.next()
   !}
?};
obj_del(_msk);
exec('opentr_pop','open_tab');
_res


\disp_tr_kos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wyświetla dane kosztu
::----------------------------------------------------------------------------------------------------------------------
_rodz:=POMOC.RODZ;
_win_red:='DISP';
TR_Z.WAL:=exec('bl_wal','ustawienia');
TR_Z.win_edit(_win_red);
TR_KOS.get();
_enable:={? TR_KOS.M=null() || 'enable=0' || 'enable=1' ?};
TR_Z.efld_opt(_win_red,_enable,TR_KOS,'M');
TR_Z.efld_opt(_win_red,_enable,TR_KOS,'IL');
TR_Z.efld_opt(_win_red,_enable,TR_KOS,'CW');
TR_Z.efld_opt(_win_red,_enable,TR_KOS,'CN');
TR_Z.efld_opt(_win_red,_enable,TR_KOS,'CB');
TR_Z.efld_opt(_win_red,_enable,TR_KOS,'KRS');
TR_Z.display();
~~


\pr_opis_tr_kos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przed redakcją pola opis
::----------------------------------------------------------------------------------------------------------------------
TR_KOS.ID_POW=''


\copyKoszt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: przenosi koszty transportu na utworzony dokument
::   WE: _a - TR_NZL.ref()
::       _b - ND.uidref()
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_do_state:=do_state();
_err:=0;
TR_NZL.cntx_psh();
TR_NZL.prefix();
{? TR_NZL.seek(_a)
|| {? TR_NZL.WHERE='TR_NZL' & TR_NZL.DOK_REF<>''
   || _tr_nzl:=exec('FindAndGet','#table',TR_NZL,TR_NZL.DOK_REF,,,null());
      _idnd:=exec('FindAndGet','#table',ND,_b,,"IDADD",'');
      {? _tr_nzl<>null() & _idnd<>''
      || _msk:=ref_name(_b)+3;
         {? ~_do_state || do() ?};
         TR_KOS.cntx_psh();
         FAKS_K.cntx_psh();
         FAP_K.cntx_psh();
         TR_KOS.index('TR_NZL_R');
         TR_KOS.prefix(_tr_nzl,'T');
         {? TR_KOS.first()
         || FAKS_K.use((FAKS_K.name()-3)+_msk);
            FAP_K.use((FAP_K.name()-3)+_msk);
            {!
            |? FAKS_K.index('IDTR');
               FAKS_K.prefix('N',TR_KOS.IDADD,_idnd);
               {? FAKS_K.first()
               || {? exec('FindInSet','#table','FAP_K','DK',FAKS_K.ref())<>null()
                  || _err+=1
                  || FAKS_K.OPIS:=TR_KOS.OPIS;
                     FAKS_K.SV:=TR_KOS.SV;
                     FAKS_K.WN:=TR_KOS.WN;
                     FAKS_K.WV:=TR_KOS.WV;
                     FAKS_K.WB:=TR_KOS.WB;
                     FAKS_K.WAL:=TR_KOS.WAL;
                     FAKS_K.WW:=TR_KOS.WW;
                     FAKS_K.KRS:=TR_KOS.KRS;
                     FAKS_K.put(1)
                  ?}
               || FAKS_K.prefix();
                  FAKS_K.blank();
                  FAKS_K.FAKS:=null();
                  FAKS_K.IDND:=_idnd;
                  FAKS_K.OPIS:=TR_KOS.OPIS;
                  FAKS_K.SV:=TR_KOS.SV;
                  FAKS_K.WN:=TR_KOS.WN;
                  FAKS_K.WV:=TR_KOS.WV;
                  FAKS_K.WB:=TR_KOS.WB;
                  FAKS_K.WAL:=TR_KOS.WAL;
                  FAKS_K.WW:=TR_KOS.WW;
                  FAKS_K.KRS:=TR_KOS.KRS;
                  FAKS_K.ROZLICZ:='T';
                  FAKS_K.IDTR:=TR_KOS.IDADD;
                  FAKS_K.INMG:=1;
                  {? ~FAKS_K.add(1)
                  || _res:=0;
                     undo()
                  ?}
               ?};
               _res & TR_KOS.next()
            !}
         ?};
         TR_KOS.cntx_pop();
         FAKS_K.cntx_pop();
         FAP_K.cntx_pop();
         {? ~_do_state || end() ?}
      ?}
   ?}
?};
TR_NZL.cntx_pop();
{? _err
|| FUN.info('Część kosztów została rozliczona na dokumencie magazynowym.\n'
            'W takiej sytuacji koszt należy zmieniać i redagować na dokumencie magazynowym.\n'
            'Wówczas zmiany zostaną naniesione bezpośrednio do kosztów transportu.\n\n'
            'Pominięto w aktualizacji %1 kosztów rozliczonych.'@[$_err])
?};
_res


\isCopy2ND
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: sprawdza dostępność akcji do aktualizacji kosztów
::   WE: [_a] - TR_KOS.IDADD - kontrola czy koszt przypisany do dokumentu domyślnie brak kontroli
::   WY: 1-dostępna (lub koszt przypisany) 0-nie (lub koszt nie przypisany do dokumentu)
::       -1-koszt został rozliczony
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_roz:=0;
_idtr:={? var_pres('_a')=type_of('') || _a || '' ?};
_trnag:=TR_NZL.TR_NAG;
_trgrp:=TR_NZL.GRP;
{? (';ZD_NAG;ZDP_NAG;'*TR_NZL.WHERE)>1 & _trnag<>null() & _trgrp<>''
|| TR_NZL.cntx_psh();
   TR_NZL.index('ORDERMG');
   TR_NZL.prefix(_trnag,'TR_NZL','R',_trgrp);
   {? TR_NZL.first()
   || {!
      |? _res:=TR_NZL.DOK_REA*'nagdo';
         {? _res & _idtr<>''
         || _idnd:=exec('FindAndGet','#table',ND,TR_NZL.DOK_REA,,"IDADD",'');
            {? _idnd<>''
            || FAKS_K.cntx_psh();
               FAKS_K.use('fakkk'+(ref_name(TR_NZL.DOK_REA)+3));
               FAKS_K.index('IDTR');
               FAKS_K.prefix('N',_idtr,_idnd);
               {? FAKS_K.first()
               || {? exec('FindInSet','#table','FAP_K','DK',FAKS_K.ref())<>null() || _res:=-1 ?}
               || _res:=0
               ?};
               FAKS_K.cntx_pop()
            ?}
         ?};
         _res>0 & TR_NZL.next()
      !}
   ?};
   TR_NZL.cntx_pop()
?};
_res


\copy2nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: aktualizuje lub dodaje koszt transportu na utworzony dokument
::----------------------------------------------------------------------------------------------------------------------
_trnag:=TR_NZL.TR_NAG;
_trgrp:=TR_NZL.GRP;
{? (';ZD_NAG;ZDP_NAG;'*TR_NZL.WHERE)>1 & _trnag<>null() & _trgrp<>''
|| TR_NZL.cntx_psh();
   TR_NZL.index('ORDERMG');
   TR_NZL.prefix(_trnag,'TR_NZL','R',_trgrp);
   {? TR_NZL.first() & FUN.ask('Przenieść lub zaktualizować koszty na dokumentach magazynowych?'@)
   || {!
      |? {? TR_NZL.DOK_REA*'nagdo'
         || _uid:=exec('FindAndGet','#table',ND,TR_NZL.DOK_REA,,"uidref()",'');
            {? _uid<>'' || exec('copyKoszt','transport_koszt',TR_NZL.ref(),_uid) ?}
         ?};
         TR_NZL.next()
      !}
   ?};
   TR_NZL.cntx_pop()
?};
~~


:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:35 1bacd23e04364a203978aec2a3449bc938b6ddedde0ae8e72e5fd85f09ccc6df882d941a2130f00fdfa0ef7792e3a545e3e073f919fcd5dd1a010f728fc119182614774d567ebcbbf8b92047c2daaf95f367278af752c3fa32d4da83a779fdaae5814bd4dc71c01980aa8bfcd47784d4a8d41fdade27c9cfd08df3fd3898bd49
