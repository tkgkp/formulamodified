:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zamowienia.fml
:: Utworzony: 2015-01-16
:: Autor: Mario
::======================================================================================================================
:: Zawartość: Formuły do obsługi zamówień. Uniwersalne do wykorzystania w czynnościach
::======================================================================================================================


\czy_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2005]
:: OPIS: czy oferta jest powiązana z zamówieniem
::   WE:  [_a] - czy wyświetlać komunikat
::  OLD: \czy_zam/oferty.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>1 || _a:=0 ?}  || _a:=0  ?};
_ofe:='';
ZK_N.cntx_psh();
_zam:=0;
_indn:=ZK_N.ndx_tmp('',,'OFE',,);
ZK_N.index(_indn);
ZK_N.prefix(OFE.ref());
{? ZK_N.first()
||
   _ofe:=ZK_N.SYM;
   {? _a=1 || FUN.info('Utworzono zamówienie na podstawie oferty.'@,ST.MSG) ?};
   _zam:=1
?};
ZK_N.ndx_drop(_indn);
:: sprawdzanie archiwum
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first() & _ofe=''
||
   {!
   |?
      ZK_N.use('zknag'+ST.ODDZ+($OKR.ROK+2));
      _indn:=ZK_N.ndx_tmp('',,'OFE',,);
      ZK_N.index(_indn);
      ZK_N.prefix(OFE.ref());
      {? ZK_N.first()
      || _ofe:=ZK_N.SYM;
         {? _a=1 || FUN.info('Utworzono zamówienie na podstawie oferty.'@,ST.MSG) ?};
         _zam:=1
      ?};
      ZK_N.ndx_drop(_indn);
      OKR.next() & _ofe=''
   !}
?};
ZK_N.cntx_pop();
_zam


\wyb_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wybor typu zamowienia
::   WE: _a - rodzaj 'Z' - zam.klienta 'D' - zam.dostaw 'W' - zam.wewnetrzne 'PD' - plan dostaw
::       [_b]- 0-bez typu WWW   1-wszystkie uprawnione typy
::   WY: uidref TYPYZAM
::  OLD: \wyb_zam/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};
_wyn:=null;
TYPYZAM.win_sel('SEL');
TYPYZAM.index('TYP');
TYPYZAM.prefix();
{? (_a='D' | _a='PD') & ~TYPYZAM.find_key('D')
||
   BEER.TYPYZAM:=null;
   FUN.info('Brak zdefiniowanych typów zamówień dostaw.\n'@)

|? (_a='W' | _a='PD') & ~TYPYZAM.find_key('W')
||
   BEER.TYPYZAM:=null;
   BEER.TYPYZAMW:=null;
   FUN.info('Brak zdefiniowanych typów zamówień wewnętrznych.\n'@)
||
   {? _a='PD'
   ||
      _ztp:=0;
      _complex:='N';
      _win_red:='UZUSTAN';
      PD_K.cntx_psh(); BEER.cntx_psh();
      PD_K.win_edit(_win_red);
      BEER.TYPYZAM:=null();
      BEER.TYPYZAMW:=null();
      _env:=obj_new('R','WIN_RED');
      _env.WIN_RED:=_win_red;
      params_set('env',_env);
      _zamd_fml:=BEER.fld_fml('TYPYZAM','BEFORE_EDIT',"params_get().env.R:='D'");
      _zamw_fml_be:=BEER.fld_fml('TYPYZAMW','BEFORE_EDIT',"params_get().env.R:='W'");
      _zamw_fml_ae:=BEER.fld_fml('TYPYZAMW','AFTER_EDIT',"
         _env:=params_get().env;
         {? BEER.TYPYZAMW
         || PD_K.efld_opt(_env.WIN_RED,'mark=0',BEER,'TYPYZAM')
         || PD_K.efld_opt(_env.WIN_RED,'mark=1',BEER,'TYPYZAM')
         ?}
      ");
      BEER.ZTP:=null;
      BEER.COMPLEX:='N';
      {? (_tr:=exec('get','#params',3006,2,OPERATOR.USER))<>''
      || {? TYPYZAM.find_key('D',_tr,_tr)
         || BEER.TYPYZAM:=TYPYZAM.ref()
         ?}
      ?};
      ZTP.f_clear();TYPYZAM.f_clear();
      _typ_fml:=TYPYZAM.fld_fml('R','BLANK',"params_get().env.R");

      {? exec('FindInSet','#table','PD_MG','MM','T',PD_N.ref(),,,null())
      || {? (_tr:=exec('get','#params',3015,2,OPERATOR.USER))<>''
         || {? TYPYZAM.find_key('W',_tr,_tr)
            || BEER.TYPYZAMW:=TYPYZAM.ref()
            ?}
         ?};
         PD_K.efld_opt(_win_red,'enable=1',BEER,'TYPYZAMW')
      || PD_K.efld_opt(_win_red,'enable=0',BEER,'TYPYZAMW')
      ?};

      {? exec('tte_lic','tte')='T'
      || PD_K.efld_opt(_win_red,'enable=1',BEER,'ZTP');
         PD_K.efld_opt(_win_red,'enable=1',BEER,'COMPLEX')
      || PD_K.efld_opt(_win_red,'enable=0',BEER,'ZTP');
         PD_K.efld_opt(_win_red,'enable=0',BEER,'COMPLEX')
      ?};

      _res:=0;
      {? PD_K.edit("{? BEER.TYPYZAMW=null() || __CHK.record(BEER,,'TYPYZAM') || 1 ?}")
      ||
         _res:=1;
         _typyzam:=BEER.TYPYZAM;
         _typyzamw:=BEER.TYPYZAMW;
         {? BEER.ZTP<>null || _ztp:=1 ?};
         _complex:=BEER.COMPLEX
      ?};
      TYPYZAM.fld_fml('R','BLANK',_typ_fml);
      BEER.fld_fml('TYPYZAM','BEFORE_EDIT',_zamd_fml);
      BEER.fld_fml('TYPYZAMW','BEFORE_EDIT',_zamw_fml_be);
      BEER.fld_fml('TYPYZAMW','AFTER_EDIT',_zamw_fml_ae);
      PD_K.cntx_pop(); BEER.cntx_pop();
      {? _res
      ||
         BEER.TYPYZAM:=_typyzam;
         BEER.TYPYZAMW:=_typyzamw;
         BEER.ZTP:={? _ztp || ZTP.ref() || null() ?};
         BEER.COMPLEX:=_complex
      ||
         BEER.TYPYZAM:=null();
         BEER.TYPYZAMW:=null();
         BEER.ZTP:=null();
         BEER.COMPLEX:='N'
      ?}
   ||
      _tr:=exec('get','#params',{? _a='Z' || 3004 |? _a='W' || 3014 || 3024 ?},2,OPERATOR.USER);
      BEER.TYPYZAM:={? exec('typ_zamm','zamowienia',_tr,_a,_b) || TYPYZAM.ref() || null() ?};
      BEER.TYPYZAMW:=null();
      BEER.ZTP:=null();
      BEER.COMPLEX:='N'
   ?};
   _wyn:=BEER.TYPYZAM
?};
_wyn


\typ_zamm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wybor typow zamowien
::   WE: _a - parametr uzytkownika 3004 - uprawnione TYPYZAM
::       _b - rodzaj 'Z' - zam klienta 'D' - zam dostaw
::      [_c]- 0-bez typu WWW i LN   1-wszystkie uprawnione typy
::  OLD: \typ_zamm/fo_usr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};

VAR_DEL.delete('XTDM');
_wyn:=1;

XTDM:=sql('select T, NAZ, REFERENCE REF, \' \' INF, MOB, ZAP from TYPYZAM where TYPYZAM.R = \':_a\' ',_b);
_acr:=XTDM.ndx_tmp('',0,'T',,0,'T',,0);
XTDM.index(_acr);
{? XTDM.first()
|| _zam_www:='';
   _zam_ln:='';
   {!
   |?
      {? _a<>''
      || _nr:={? _a*(' '+XTDM.T+' ') || 1 || _a*(XTDM.T+' ')=1 ?}
      || _nr:=1
      ?};
      _www:={? _c=1 || 1 || XTDM.T<>_zam_www ?};
      _ln:={? _c=1 || 1 || XTDM.T<>_zam_ln ?};
      {? _nr & _www & _ln
      || XTDM.next()
      || XTDM.del()
      ?}
   !}
?};
_acr_sel:=XTDM.mk_sel('Typy zamówień '@,'T',0,'fo_use_typ_zam',,,,,'U');
XTDM.win_fld(_acr_sel,,'T',,,8,,0,'Typ'@);
XTDM.win_fld(_acr_sel,,'NAZ',,,40,,0,'Nazwa'@);
XTDM.win_fld(_acr_sel,,'INF',,,-3,,0,'Informacja'@);
XTDM.win_act(_acr_sel,,'Formuła','&Wybierz'@@,,'Wybór bieżącego zapisu'@
   ,$('exec(\'ten_typz\',\'zamowienia\',\''+_b+'\',XTDM.REF)'),,1,,,,'W');
{? _b='Z'
|| XTDM.win_act(_acr_sel,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','XTDM#01')",,,,,,'L');
   XTDM.win_fml(_acr_sel,,'INF',,'ICON_BEFORE',"
               {? XTDM.MOB='T'
               || 'xwin16.png:167'
               || ''
               ?}")
|? _b='W'
|| XTDM.win_act(_acr_sel,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','XTDM#02')",,,,,,'L');
   XTDM.win_fml(_acr_sel,,'INF',,'ICON_BEFORE',"
               {? XTDM.ZAP='T'
               || 'xwin16.png:37'
               |? XTDM.MOB='T'
               || 'xwin16.png:167'
               || ''
               ?}")
|? _b='D'
|| XTDM.win_act(_acr_sel,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','XTDM#03')",,,,,,'L');
   XTDM.win_fml(_acr_sel,,'INF',,'ICON_BEFORE',"
               {? XTDM.ZAP='T'
               || 'xwin16.png:37'
               |? XTDM.MOB='T'
               || 'xwin16.png:167'
               || ''
               ?}")
?};
XTDM.win_sel(_acr_sel);
{? _b='Z'
|| {? (_tr:=exec('get','#params',3005,2,OPERATOR.USER))<>''
   || XTDM.first(); XTDM.find_key(_tr,_tr)
   ?}
|? _b='D'
|| {? (_tr:=exec('get','#params',3006,2,OPERATOR.USER))<>''
   || XTDM.first(); XTDM.find_key(_tr,_tr)
   ?}
|? _b='W'
|| {? (_tr:=exec('get','#params',3015,2,OPERATOR.USER))<>''
   || XTDM.first(); XTDM.find_key(_tr,_tr)
   ?}
?};
{? XTDM.size()=0
|| FUN.info({? _b='Z'
            || 'Brak uprawnionych typów zamówień sprzedaży.'@
            || 'Brak uprawnionych typów zamówień dostaw.'@
            ?});
   _wyn:=0
|? XTDM.size()=1
|| TYPYZAM.prefix();
   {? TYPYZAM.seek(exec('FindAndGet','#table','TYPYZAM',XTDM.REF,,,null()))
   || BEER.TYPYZAM:=TYPYZAM.ref
   ?}
||
   {? BEER.NAWIGTEN=0
   || _wyn:=XTDM.select(,1,8)
   ?}
?};
_wyn


\ten_typz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: Akcja Ten na oknie wertowania tabeli XTDM
::       _a - rodzaj 'Z' - zam klienta 'D' - zam dostaw
::       _b - $TYPYZAM.ref
::  OLD: \ten_typz/fo_usr.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.MENU_PTH+='T';
TYPYZAM.prefix();
_wyn:=
   {? TYPYZAM.seek(exec('FindAndGet','#table','TYPYZAM',_b,,,null()))
   || BEER.TYPYZAM:=TYPYZAM.ref();
      BEER.R:=TYPYZAM.R;
      sel_exit()
   ?};
BEER.MENU_PTH-=1;
_wyn


\pw_znzap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: ustawienie zmiennej EANX.ZAP
::  OLD: \pw_znzap/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_stan:=exec('stan_zap','zamowienia');
EANX.ZAP:={? _stan=-1 || 'N'
          |? _stan=0  || 'T'
          |? _stan=1  || 'A'
          |? _stan=2  || 'O'
          || ''
          ?}


\stan_zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza stan zapotrzebowania/wniosku
::   WE: [_a] - wartość pola EZAPOT domyślnie pusty string
::   WY: 0-otwarte 1-zaakceptowane 2-odrzucone -1-brak zapotrzebowania -2-bez zapotrzebowania
::  OLD: \stan_zap/skid_obg.fml
::  OLD: \stan_zap/magdok_wspolne.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};

_wyn:=-1;
_bez:=0;
_edokum:={? _a<>''
         || _a
         |? ~type_of(cur_tab)
         || ''
         |? cur_tab()=ZD_NAG
         || _bez:=ZD_NAG.T().ZAP<>'T';
            ZD_NAG.EZAPOT
         |? cur_tab()=ZK_N
         || _bez:=ZK_N.T().ZAP<>'T';
            ZK_N.EZAPOT
         || ''
         ?};

{? ~_bez & _edokum<>''
|| _status:=exec('FindAndGet','#table',EDOKUM,_edokum,,"STATUS",'');
   _zam:=exec('FindAndGet','#table',EDOKUM,_edokum,,"ZAM",'');
   _wyn:={? _zam='T' | _status='T' ||  1
         |? _status='O' ||  2
         |? _status=''  || -1
         || 0
         ?}
|? _bez
|| _wyn:=-2
?};
_wyn


\czy_del_zd4zk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: sprawdza czy istnieje powiazana pozycja zamowienia sprzedazy
::   WE: [_a] - ZD_POZ.ref
::       [_b] - 1 zaznaczone pozycje
::   WY: 0-nie usuwac zamowienia dostawy dedykowanego dla zamowienia sprzedazy, 1 lub 2-wpp
::  OLD: \czy_del_zd4zk/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(null) || _a:=null() ?};
{? var_pres('_b')<>type_of(1) || _b:=0 ?};

_del:=1;

ZD_POZ.cntx_psh();
ZD_POZ.index('POZ');
ZD_POZ.prefix(ZD_NAG.ref());

{? {? _a
   || ZD_POZ.seek(_a)
   || ZD_POZ.first()
   ?}
||
   {!
   |?
      ZK_P.cntx_psh();
      ZK_P.index('ZD_POZ'); ZK_P.prefix($ZD_POZ.ref());
      {? ZK_P.first()
      ||
         {? ~FUN.ask(
               {? _b | _a=0
               || 'Co najmniej pozycja nr %1 jest powiązana z pozycją lub pozycjami zamówienia sprzedaży/wewnętrznego.'@
                  [$ZD_POZ.POZ]
               || 'Pozycja nr %1 jest powiązana z pozycją lub pozycjami zamówienia sprzedaży/wewnętrznego.'@
                  [$ZD_POZ.POZ]
               ?}
               +{? _a || {? _b
                         || '\n'+'Czy usunąć zaznaczone pozycje?'@
                         || '\n'+'Czy usunąć pozycję?'@
                         ?}
                      || '\n'+'Czy usunąć zamówienie?'@ ?})
         || _del:=0
         || _del:=2
         ?}
      ?};
      ZK_P.cntx_pop();
      OKR.cntx_psh();
      OKR.index('MC'); OKR.prefix(REF.FIRMA,1);
      {? _del & OKR.first()
      ||
         {!
         |?
            ZK_P.cntx_psh();
            ZK_P.use('zkpoz'+ST.ODDZ+($OKR.ROK+2));
            ZK_P.index('ZD_POZ'); ZK_P.prefix($ZD_POZ.ref());
            {? ZK_P.first()
            ||
               {? _del=1
                & ~FUN.ask('Pozycja %1 jest powiązana z co najmniej jedną '
                           'pozycją zamówienia sprzedaży/wewnętrznego.'@[$ZD_POZ.POZ]
                          +{? _a || '\n'+'Czy usunąć pozycję?'@ || '\n'+'Czy usunąć zamówienie?'@ ?})
               || _del:=0
               || _del:=2
               ?}
            ?};
            ZK_P.cntx_pop();
            _del=1 & OKR.next()
         !}
      ?};
      OKR.cntx_pop();
      _a=null & _del=1 & ZD_POZ.next()
   !}
?};

ZD_POZ.cntx_pop();
_del


\del_zkbdelzd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: usuniecie powiazania pozycji zam. sprzed. przed usunieciem pozycji dedykowanej pozycji zam. dost.
::  OLD: \del_zkbdelzd/zd.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_P.cntx_psh;
ZK_P.index('ZD_POZ'); ZK_P.prefix($ZD_POZ.ref);
{? ZK_P.first
||
   {!
   |?
      ZK_P.cntx_psh;
      ZK_P.prefix;
      ZK_P.ZD_POZ:='';
      ZK_P.put;
      ZK_P.cntx_pop;
      ZK_P.next
   !}
?};
ZK_P.cntx_pop;
OKR.cntx_psh;
OKR.index('MC'); OKR.prefix(REF.FIRMA,1);
{? OKR.first
||
   {!
   |?
      ZK_P.cntx_psh;
      ZK_P.use('zkpoz'+ST.ODDZ+($OKR.ROK+2));
      ZK_P.index('ZD_POZ'); ZK_P.prefix($ZD_POZ.ref);
      {? ZK_P.first
      ||
         {!
         |?
            ZK_P.cntx_psh;
            ZK_P.prefix;
            ZK_P.ZD_POZ:='';
            ZK_P.put;
            ZK_P.cntx_pop;
            ZK_P.next
         !}
      ?};
      ZK_P.cntx_pop;
      OKR.next
   !}
?};
OKR.cntx_pop


\zkp2zdp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: pozycje zamowien sprzedazy do dostawy dedykowanej
::   WE: _a - ZD_POZ.ref
::       _b - =0-dla pozycji zam. dost., =1-dla zam. dost.
::  OLD: \zkp2zdp/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? 5+$_a='zdpoz' & _b
||
   ZD_POZ.cntx_psh;
   ZD_POZ.use(8+$_a);
   ZD_POZ.prefix;
   _a:={? ZD_POZ.seek(_a) || ZD_POZ.ZD_NAG || null ?};
   ZD_POZ.cntx_pop
|? 5+$_a='stc__'
||
   SC.cntx_psh;
   SC.use(ref_name(_a));
   SC.prefix;
   {? SC.seek(_a)
   ||
      DK.cntx_psh;
      DK.use(SC.NDK);
      DK.prefix;
      {? DK.seek(SC.RDK,)
      ||
         {? DK.ZAM_RP=''
         ||
            FUN.info('Dostawa nie jest dedykowana dla zamówień sprzedaży.'@);
            _a:=null
         ||
            ZD_RP.cntx_psh;
            ZD_RP.use(8+DK.ZAM_RP);
            ZD_RP.prefix;
            {? ZD_RP.seek(DK.ZAM_RP)
            ||
               _a:=ZD_RP.ZD_POZ
            ?};
            ZD_RP.cntx_pop
         ?}
      ?};
      DK.cntx_pop
   ?};
   SC.cntx_pop
?};

{? _a=null || return ?};

_Tab:=sql($"
      select
         ZK_N.DP DP,
         ZK_N.NR NR,
         ZK_N.SYM SYM,
         ZK_P.POZ POZ,
         ZK_P.DT DT,
         ZK_P.ILZ ILZ,
         ZK_P.ILP ILP,
         ZK_P.ILR ILR,
         TYPYZAM.R RODZ
      from
         @ZK_P
         join @ZD_POZ using (ZK_P.ZD_POZ,ZD_POZ.REFERENCE)
         join @ZK_N using (ZK_P.N,ZK_N.REFERENCE)
         join TYPYZAM using(ZK_N.T,TYPYZAM.REFERENCE)
      where
      "+
      {? _b
      || $"ZD_POZ.ZD_NAG=:_a"
      || $"ZK_P.ZD_POZ=:_a"
      ?}
   ,_a);

_etyk:={? _Tab.first() & _Tab.RODZ='W'
       || 'Pozycje zamówień wewnętrznych dostaw dedykowanych'@
       || 'Pozycje zamówień sprzedaży dostaw dedykowanych'@
       ?};
_doda:={? _Tab.first() & _Tab.RODZ='W'
       || 'wewnetrznego'@
       || 'sprzedaży'@
       ?};

_wer:=_Tab.mk_sel(_etyk,,,'aaxfeepakfcswad',,,,,'U');
_Tab.win_sel(_wer);
_Tab.win_fld(_wer,,'DP',,,8,,,'Data przyjęcia'@,,'Data zamówienia %1'@[_doda]);
_Tab.win_fld(_wer,,'NR',,,-7,,,'Numer'@,,'Numer zamówienia %1'@[_doda]);
_Tab.win_fld(_wer,,'SYM',,,-20,,,'Symbol'@,,'Symbol zamówienia %1'@[_doda]);
_Tab.win_fld(_wer,,'POZ',,,-7,,,'Pozycja'@,,'Numer pozycji na zamówieniu'@);
_Tab.win_fld(_wer,,'DT',,,-14,,,'Termin realizacji'@,,'Termin realizacji zamówienia'@);
_Tab.win_fld(_wer,,'ILZ',,,-14,ST.DOKL,,'Ilość zamawiana'@,,'Zamawiana ilość pozycji'@);
_Tab.win_fld(_wer,,'ILP',,,-18,ST.DOKL,,'Ilość pozycji do realizacji'@,,'Ilość pozycji pozostała do realizacji'@);
_Tab.win_fld(_wer,,'ILR',,,-14,ST.DOKL,,'Ilość zrealizowana'@,,'Ilość pozycji zrealizowana'@);
{? _Tab.first() || _Tab.select || FUN.info('Nie dotyczy dostaw dedykowanych.'@) ?}


\chk_wd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja rekord po dla warunkow dostawy
::  OLD: \chk_wd/defin.fml
::----------------------------------------------------------------------------------------------------------------------
__CHK.record(ZDSWD,,'KOD')


\reazeann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: realizacja na podstawie wskazanych zamknietych operacji na urzadzeniach mobilnych
::   WE: _a - ref SQL danego zamowienia
::       [_b] - 1-fakturowac 0-nie(domyslnie)
::   WY: 1-zrealizowano 0-nie
::  OLD: \reazeann/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

_wyn:=0;
VAR_DEL.delete('__czyrea','__czyfakt');
__czyfakt:={? _b || 2 || _b ?};
__czyrea:='';

ZD_NAG.cntx_psh();
ZD_POZ.cntx_psh();
ZK_N.cntx_psh();
ZK_P.cntx_psh();
EANN.cntx_psh();
EANP.cntx_psh();

{? (5+_a)='zknag'
|| _typ:='Z';
   _refzam:=exec('FindAndGet','#table','ZK_N',_a,,,null())
|| _typ:='D';
   _refzam:=exec('FindAndGet','#table','ZD_NAG',_a,,,null())
?};

EANN.index('AKT');
EANN.prefix('T',_a,_a);
{? EANN.first()
|| EANN.win_sel('GRP');
   EANN.select();
   _wyn:=__czyrea
?};

ZD_NAG.cntx_pop();
ZD_POZ.cntx_pop();
ZK_N.cntx_pop();
ZK_P.cntx_pop();
EANN.cntx_pop();
EANP.cntx_pop();
VAR_DEL.delete('__czyrea','__czyfakt');
_wyn


\zapot_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [230]
:: OPIS: Sprawdza, czy powiazane zapotrzebowanie jest zaakceptowane
::   WE: _a - ref sql zapotrzebowania
::   WY: 1/0 - jest zaakceptowane, nie jest zaakceptowane (lub go nie ma)
::  OLD: \zapot_akc/zd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('stan_zap','zamowienia')=1


\arch_zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: zmienia odwolanie do zamowienia przy archiwizacji
::   WE: _a - ref EDOKUM
::       _b - ref SQL-owy nowego odwolania
::       _c - uidref EDOKUM
::       _d - uidref zamówienia
::  OLD: \arch_zap/zd.fml
::----------------------------------------------------------------------------------------------------------------------
:: zapotrzebowanie
{? _a<>''
|| _kod:=form(8+_a)+2;
   EDOKUM.cntx_psh();
   EDOKUM.use('skid_v'+_kod); EDOKUM.index('ID'); EDOKUM.prefix();
   {? EDOKUM.seek(_a,form(8+_a))
   || EDOKUM.ZD_NAG:=_b;
      EDOKUM.put(1)
   ?};
   EDOKUM.cntx_pop()
?};
:: dokument w obiegu
{? _c<>''
|| _sql:={? (+_c)=48 || _c+16 || _c ?};
   _kod:=form(8+_sql)+2;
   EDOKUM.cntx_psh();
   EDOKUM.use('skid_v'+_kod); EDOKUM.index('ID'); EDOKUM.prefix();
   {? EDOKUM.seek(_sql,form(8+_sql))
   || EDOKUM.DOK_POW:=_d;
      {? EDOKUM.put(1) & (form(8+_sql)+2)<>'__'
      || exec('ob_close_ext','obiegi2',EDOKUM.ref())
      ?}
   ?};
   EDOKUM.cntx_pop()
?}


\zam_arch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: aktualizacja zlaczen sref po przeniesieniu zamowienia sprzedazy lub dostawy do/z archiwum
::   WE: _a - ZK_N.ref() lub ZD_NAG.ref() - stary
::       _b - ZK_P.ref() lub ZD_POZ.ref() - stary
::       _c - ZK_N.ref() lub ZD_NAG.ref() - nowy
::       _d - ZK_P.ref() lub ZD_POZ.ref() - nowy
::  OLD: \zam_arch/pd_k.fml
::----------------------------------------------------------------------------------------------------------------------
_zkn_o:=$_a;
_zkp_o:=$_b;
_zkn_n:=$_c;
_zkp_n:=$_d;

:: koszyk
PD_K.cntx_psh();
PD_K.index('ZAM_REF1');
PD_K.prefix(_zkn_o,_zkp_o);
_loop:=PD_K.first();
{!
|? _loop
|!
   PD_K.cntx_psh();
   PD_K.prefix();
   PD_K.ZAM_REF:=_zkn_n;
   PD_K.POZ_REF:=_zkp_n;
   PD_K.put();
   PD_K.cntx_pop();
   _loop:=PD_K.first()
!};
PD_K.cntx_pop();

:: dostaw dedykowana
PD_K_DD.cntx_psh();
PD_K_DD.index('ZK_P');
PD_K_DD.prefix(_zkp_o);
_loop:=PD_K_DD.first();
{!
|? _loop
|!
   PD_K_DD.cntx_psh();
   PD_K_DD.prefix();
   PD_K_DD.ZK_P:=_zkp_n;
   PD_K_DD.put();
   PD_K_DD.cntx_pop();
   _loop:=PD_K_DD.first()
!};
PD_K_DD.cntx_pop();

:: zamówienia
PD_K_ZAM.cntx_psh();
PD_K_ZAM.index('RSQL');
PD_K_ZAM.prefix(_zkn_o,);
_loop:=PD_K_ZAM.first();
{!
|? _loop
|!
   PD_K_ZAM.cntx_psh();
   PD_K_ZAM.prefix();
   PD_K_ZAM.RSQL:=_zkn_n;
   PD_K_ZAM.put();
   PD_K_ZAM.cntx_pop();
   _loop:=PD_K_ZAM.first()
!};
PD_K_ZAM.cntx_pop()


\plz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: utworzenie tabeli dla planowanych zamowien
::  OLD: \plz/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
tab_tmp(9
   ,'DD'       ,'DATE'        ,'Data dostawy'
   ,'DZ'       ,'DATE'        ,'Data zamówienia'
   ,'SYM'      ,'STRING[20]'  ,'Symbol zamówienia'
   ,'KH_SKR'   ,'STRING[10]'  ,'Kontrahent - skrót'
   ,'WAL'      ,'STRING[8]'   ,'Waluta'
   ,'KRS'      ,'REAL'        ,'Kurs'
   ,'R'        ,'STRING[1]'   ,'Rodzaj zamówienia [D/W]'
   ,'MG'       ,'STRING[8]'   ,'Magazyn'
   ,'Z_MG'     ,'STRING[8]'   ,'Z magazynu'
   ,'RSQL'     ,'STRING[16]'  ,'$ZD_NAG.ref() lub $ZK_N.ref()')


\plz_fill
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: laczy pozycje koszyka z planowanym zamowieniem
::  OLD: \plz_fill/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
PD_K.cntx_psh();
{? PD_K.TYPYZAM().R='D'
:: zamowienia dostaw
||
   ZD_NAG.cntx_psh();
   _krs:={? PD_K.WAL=INFO.NAROD || 0 || PD_K.KRS ?};
   {? PD_K.ZAM_REF<>''
:: powiazanie koszyk zamowienie dostawy juz istnieje
   ||
      ZD_NAG.use(8+PD_K.ZAM_REF);
      ZD_NAG.prefix();
      {? ZD_NAG.seek(PD_K.ZAM_REF)
      || {? ZD_NAG.r_lock(1,1,1)
         || _params:=exec('plz_a','zamowienia');
            _params.TAB:=__Plz;
            _params.DD:=ZD_NAG.DTPREAL;
            _params.DZ:=ZD_NAG.DATA;
            _params.SYM:=ZD_NAG.SYM;
            _params.KH_SKR:=ZD_NAG.KH().SKR;
            _params.WAL:=ZD_NAG.WAL().KOD;
            _params.KRS:=ZD_NAG.KRS;
            _params.R:='D';
            _params.RSQL:=PD_K.ZAM_REF;
            exec('plz_add','zamowienia',_params)
         || _sym:=PD_K.PD_N().SYM;
            {? __kom.find_msg(_sym)
            || __kom.set_root(_sym)
            || __kom.sect_beg(_sym)
            ?};
            _ktm:=PD_K.M().KTM;
            {? __kom.find_msg(_ktm)
            || __kom.set_root(_ktm)
            || __kom.sect_beg(_ktm)
            ?};
            __kom.sect_beg($PD_K.ID);
            __kom.add('Pozycja koszyka pominięta, bo zakwalifikowana do zamówienia %1'
                      ', które obsługuje inny użytkownik.'@[ZD_NAG.SYM],7);
            __kom.sect_end()
         ?}
      ?}
:: brak powiazania koszyk zamowienie dostawy
   ||
      _params1:=exec('zd_nag_add_a','zamowienia');
      _params1.KH:=PD_K.KH;
      _params1.TYPYZAM:=PD_K.TYPYZAM;
      _params1.DD:=PD_K.DD;
      _params1.DZ:=PD_K.DZ;
      _params1.WAL:=PD_K.WAL;
      _params1.KRS:=_krs;

      ZD_NAG.use('zdnag'+PD_K.MG().ODDZ+'__');
      ZD_NAG.index('PD');
      ZD_NAG.prefix('N',null(),_params1.KH,_params1.TYPYZAM,_params1.DD,_params1.DZ,_params1.WAL,_params1.KRS);
      {? ZD_NAG.first()
      || _zd_nag:=ZD_NAG.ref()
      || exec('addZamPlan','zamowienia',PD_K.ref());
         _zd_nag:={? PD_Z.RSQL<>'' || exec('FindAndGet','#table',ZD_NAG,PD_Z.RSQL,,,null()) || null() ?}
      ?};
      {? _zd_nag
      || ZD_NAG.cntx_psh();
         ZD_NAG.use(ref_name(_zd_nag));
         ZD_NAG.prefix();
         {? ZD_NAG.seek(_zd_nag)
         ||
            {? ZD_NAG.r_lock(1,1,1)
            || PD_K.prefix();
               PD_K.ZAM_REF:=$_zd_nag;
               PD_K.ZAM_SYM:=ZD_NAG.SYM;
               {? PD_K.put()
               || _params:=exec('plz_a','zamowienia');
                  _params.TAB:=__Plz;
                  _params.DD:=ZD_NAG.DTPREAL;
                  _params.DZ:=ZD_NAG.DATA;
                  _params.SYM:=ZD_NAG.SYM;
                  _params.KH_SKR:=ZD_NAG.KH().SKR;
                  _params.WAL:=ZD_NAG.WAL().KOD;
                  _params.KRS:=ZD_NAG.KRS;
                  _params.R:='D';
                  _params.RSQL:=PD_K.ZAM_REF;
                  exec('plz_add','zamowienia',_params);
                  exec('dd','plan_dostaw',PD_K.ref())
               ?}
            || _sym:=PD_K.PD_N().SYM;
               {? __kom.find_msg(_sym)
               || __kom.set_root(_sym)
               || __kom.sect_beg(_sym)
               ?};
               _ktm:=PD_K.M().KTM;
               {? __kom.find_msg(_ktm)
               || __kom.set_root(_ktm)
               || __kom.sect_beg(_ktm)
               ?};
               __kom.sect_beg($PD_K.ID);
               __kom.add('Pozycja koszyka pominięta, bo zakwalifikowana do zamówienia %1'
                         ', które obsługuje inny użytkownik.'@[ZD_NAG.SYM],7);
               __kom.sect_end()
            ?}
         ?};
         ZD_NAG.cntx_pop()
      ?}
   ?};
   ZD_NAG.cntx_pop()
|? PD_K.TYPYZAM().R='W'
:: zamowienia wewnetrzne
||
   ZK_N.cntx_psh();
   {? PD_K.ZAM_REF<>''
:: powiazanie koszyk zamowienie dostawy juz istnieje
   ||
      ZK_N.use(8+PD_K.ZAM_REF);
      ZK_N.prefix();
      {? ZK_N.seek(PD_K.ZAM_REF) & ZK_N.r_lock(1,1,1)
      || _params:=exec('plz_a','zamowienia');
         _params.TAB:=__Plz;
         _params.DD:=ZK_N.DT;
         _params.DZ:=ZK_N.DP;
         _params.SYM:=ZK_N.SYM;
         _params.MG:=ZK_N.MD().SYM;
         _params.Z_MG:=ZK_N.MG().SYM;
         _params.R:='W';
         _params.RSQL:=PD_K.ZAM_REF;
         exec('plz_add','zamowienia',_params)
      ?}
:: brak powiazania koszyk zamowienie dostawy
   ||
      _params1:=exec('zk_n_add_a','zamowienia');
      _params1.TYPYZAM:=PD_K.TYPYZAM;
      _params1.DD:=PD_K.DD;
      _params1.DZ:=PD_K.DZ;
      _params1.MG:=PD_K.MG;
      _params1.Z_MG:=PD_K.Z_MG;
      ZK_N.use('zknag'+PD_K.Z_MG().ODDZ+'__');
      ZK_N.index('PD'); ZK_N.prefix('N',_params1.TYPYZAM,_params1.DZ,_params1.DD,_params1.Z_MG,_params1.MG);
      {? ZK_N.first()
      || _zk_n:=ZK_N.ref()
      || exec('addZamPlan','zamowienia',PD_K.ref());
         _zk_n:={? PD_Z.RSQL<>'' || exec('FindAndGet','#table',ZK_N,PD_Z.RSQL,,,null()) || null() ?}
      ?};
      {? _zk_n & ZK_N.r_lock(1,1,1)
      ||
         PD_K.prefix();
         PD_K.ZAM_REF:=$_zk_n;
         PD_K.ZAM_SYM:=ZK_N.SYM;
         {? PD_K.put()
         || _params:=exec('plz_a','zamowienia');
            _params.TAB:=__Plz;
            _params.DD:=ZK_N.DT;
            _params.DZ:=ZK_N.DP;
            _params.SYM:=ZK_N.SYM;
            _params.MG:=ZK_N.MD().SYM;
            _params.Z_MG:=ZK_N.MG().SYM;
            _params.R:='W';
            _params.RSQL:=PD_K.ZAM_REF;
            exec('plz_add','zamowienia',_params)
         ?}
      ?}
   ?};
   ZK_N.cntx_pop()
?};
PD_K.cntx_pop()


\plz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: parametry tabeli planowanych zamowien
::  OLD: \plz_a/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=obj_new('TAB','DD','DZ','SYM','KH_SKR','WAL','KRS','R','MG','Z_MG','RSQL');
_args.TAB:=null();
_args.DD:=date(0,0,0);
_args.DZ:=date(0,0,0);
_args.SYM:='';
_args.KH_SKR:='';
_args.WAL:='';
_args.KRS:=0;
_args.R:='';
_args.MG:='';
_args.Z_MG:='';
_args.RSQL:='';
_args


\plz_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: dodanie planowanego zamowienia do listy
::   WE: _a - tabela zwracana przez exec('plz_a','zamowienia')
::  OLD: \plz_add/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_params:=_a;
_Tab:=_params.TAB;

{? _Tab.find_key(_params.DD,_params.DZ,_params.SYM,_params.KH_SKR,_params.WAL,_params.KRS,_params.R,_params.MG,_params.Z_MG)
|| 1
|| _Tab.blank();
   _Tab.DD:=_params.DD;
   _Tab.DZ:=_params.DZ;
   _Tab.SYM:=_params.SYM;
   _Tab.KH_SKR:=_params.KH_SKR;
   _Tab.WAL:=_params.WAL;
   _Tab.KRS:=_params.KRS;
   _Tab.R:=_params.R;
   _Tab.MG:=_params.MG;
   _Tab.Z_MG:=_params.Z_MG;
   _Tab.RSQL:=_params.RSQL;
   _Tab.add()
?}


\zd_nag_add_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: argument funkcji exec('zd_nag_add','zamowienia')
::  OLD: \zd_nag_add_a/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=obj_new('KH','TYPYZAM','DD','DZ','WAL','KRS');
_args.KH:=null();
_args.TYPYZAM:=null();
_args.DD:=date(0,0,0);
_args.DZ:=date(0,0,0);
_args.WAL:=null();
_args.KRS:=0;
_args


\zd_nag_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: dodanie naglowka zamowienia dostawy (ZD_NAG)
::   WE: tablica zwraca przez exec('zd_nag_add_a','zamowienia')
::  OLD: \zd_nag_add/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;

_params:=_a;

BEER.TYPYZAM:=null();
POM.TAB:='ZD_NAG';
POM.TYPDOK:='';
TYPYZAM.cntx_psh();
TYPYZAM.prefix();
{? TYPYZAM.seek(_params.TYPYZAM)
||
   POM.TYPDOK:=TYPYZAM.KOD;
   BEER.TYPYZAM:=TYPYZAM.ref()
?};
TYPYZAM.cntx_pop();
{? POM.TAB='' | POM.TYPDOK='' || return(0) ?};

ZD_NAG.blank();
ZD_NAG.KH:=_params.KH;
ZD_NAG.T:=_params.TYPYZAM;
ZD_NAG.DTPREAL:=_params.DD;
ZD_NAG.DATA:=_params.DZ;
ZD_NAG.WAL:=_params.WAL;
ZD_NAG.KRS:=_params.KRS;
ZD_NAG.DTK:=PD_K.DZ;
ZD_NAG.prefix();
{? ZD_NAG.add()
|| {? ZD_NAG.r_lock(1,1,1)
   || _var:=obj_new('MAXN');
      {? exec('wol_nr','numery',POM.TAB,'N',0,1,_var)=-1
      || _red:=ZD_NAG.mk_edit('Zamówienie do dostawcy'@,,'zd_nag_nr');
         ZD_NAG.win_efld(_red,,'NR');
         ZD_NAG.win_efld(_red,,'SYM',,,,,1);
         ZD_NAG.win_edit(_red);
         _cfg:=',btn_label_align=center,panel=bottom,align=end';
         ZD_NAG.win_ebtn(_red,'text='+'&Zapisz'@+_cfg,'key:F2');
         ZD_NAG.win_ebtn(_red,'text='+'&Anuluj'@+_cfg,'key:Esc');
         {? ZD_NAG.edit("chk_rec('NR')")
         || _wyn:=1
         || _wyn:=exec('znak','numery',POM.TAB)
         ?};
         ZD_NAG.r_unlock()
      || _wyn:={? _var.MAXN=1 || 1 || exec('znak','numery',POM.TAB) ?};
         ZD_NAG.r_unlock()
      ?};
      obj_del(_var)
   ?}
?};
_wyn


\zk_n_add_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: argument funkcji exec('zk_n_add','zamowienia')
::  OLD: \zk_n_add_a/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=obj_new('KH','TYPYZAM','DD','DZ','MG','Z_MG');
_args.KH:=null();
_args.TYPYZAM:=null();
_args.DD:=date(0,0,0);
_args.DZ:=date(0,0,0);
_args.MG:=null();
_args.Z_MG:=null;
_args


\zk_n_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: dodanie naglowka zamowienia wewnetrznego (ZK_N)
::   WE: tablica zwraca przez exec('zk_n_add_a','zamowienia')
::  OLD: \zk_n_add/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_params:=_a;

BEER.TYPYZAM:=null();
POM.TAB:='ZK_N';
POM.TYPDOK:='';
TYPYZAM.cntx_psh();
TYPYZAM.prefix();
{? TYPYZAM.seek(_params.TYPYZAM)
||
   POM.TYPDOK:=TYPYZAM.KOD;
   BEER.TYPYZAM:=TYPYZAM.ref()
?};
TYPYZAM.cntx_pop();
{? POM.TAB='' | POM.TYPDOK='' || return(0) ?};

do();
ZK_N.blank();
ZK_N.T:=_params.TYPYZAM;
ZK_N.DP:=_params.DZ;
ZK_N.DT:=_params.DD;
ZK_N.MG:=_params.Z_MG;
ZK_N.MD:=_params.MG;
ZK_N.PL_FORCE:=ZK_N.T().PL_FORCE;
ZK_N.PL_DIR:=ZK_N.T().PL_DIR;
ZK_N.PL_DATA:=ZK_N.DT;
ZK_N.PL_TIME:=time(0,0,0);
exec('wol_nr','numery',POM.TAB);
ZK_N.prefix();
{? ZK_N.add()
|| exec('znak','numery',POM.TAB)
?};
end()


\plz_okna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: definicja okien dla planowanych zamowien
::  OLD: \plz_okna/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
__plzw:=__Plz.mk_sel('Planowane zamówienia'@,,,'adbbeqoqppokjhg',,,,,'U');
__Plz.win_fld(__plzw,,'DD',,,-10,,,'Data dostawy'@);
__Plz.win_fld(__plzw,,'DZ',,,-10,,,'Data zamówienia'@);
__Plz.win_fld(__plzw,,'SYM',,,20,,,'Symbol zamówienia'@);
__Plz.win_fld(__plzw,,'KH_SKR',,,10,,,'Dostawca'@);
__Plz.win_fld(__plzw,,'WAL',,,-3,,,'Waluta'@);
__Plz.win_fld(__plzw,,'KRS',,,10,4,,'Kurs'@);
__Plz.win_fld(__plzw,,'MG',,,8,,,'Magazyn'@);
__Plz.win_fld(__plzw,,'Z_MG',,,-8,,,'Z magazynu'@);
_fb:="exec('addZamPlan','zamowienia')";    __Plz.win_act(__plzw,1,'Formuła','&Dołącz'@@,,,_fb,,1,,,,'D');
                                           __Plz.win_act(__plzw,0,'Formuła','&Dołącz'@@,,,_fb,,,,,,'D');
_fb:="exec('plz_bpop','zamowienia')";      __Plz.win_act(__plzw,0,'Formuła','&Popraw'@@,,,_fb,,,,,,'P');
_fb:="exec('plz_busu','zamowienia')";      __Plz.win_act(__plzw,0,'Formuła','&Usuń'@@,,,_fb,,,1,_fb,,'U');
_fb:="exec('plz_bpolacz','zamowienia')";   __Plz.win_act(__plzw,0,'Formuła','P&ołącz'@@,,,_fb,,,1,_fb,,'O');
_fb:="exec('plz_bakc','zamowienia')";      __Plz.win_act(__plzw,0,'Formuła','&Akceptuj'@@,,,_fb,,1,1,_fb,,'A');
_fb:="exec('plz_bidzdozd','zamowienia')";  __Plz.win_act(__plzw,0,'Formuła','&Idź do zamówienia'@@,,,_fb,,,,,,'I');
_fb:="exec('plz_bwys','zamowienia')";      __Plz.win_act(__plzw,0,'Wyświetl',,,,_fb);
_fb:="exec('plz_bdndpdk','zamowienia')";   __Plz.dnd_sel(__plzw,,'records.PD_K',_fb);
__Plz.fld_attr('RSQL',2);

__pdkwe3:=exec('pd_k_wer3','plan_dostaw');
__pdkwe4:=exec('pd_k_wer4','plan_dostaw');

__plzwgr:=__Plz.grp_make('Planowane zamówienia'@,,'vnvreouhefuhdfa');
_far:="
   PD_K.cntx_psh(); grp_disp(PD_K,__pdkwe3); PD_K.cntx_pop();
   PD_K.cntx_psh(); grp_disp(PD_K,__pdkwe4); PD_K.cntx_pop()
";
__Plz.grp_sel(__plzwgr,,__plzw,,_far,,,10,,,,,'maximized');
__Plz.grp_splt(__plzwgr,,'vertical','planow');
_fb:="
   __Plz.cntx_psh();
   _jest:={? __Plz.f_active() || __Plz.f_first() || __Plz.first() ?};
   __Plz.cntx_pop();
   PD_K.cntx_psh();
   PD_K.index('SIDZAMP');
   PD_K.prefix(PD_K.ses_id(),{? _jest || __Plz.RSQL || 'brak' ?});
   PD_K.first()
";
_fa:="
   PD_K.cntx_pop()
";
__Plz.grp_sel(__plzwgr,PD_K,__pdkwe3,,,,,,_fb,_fa,,,'maximized_with_title');
__Plz.grp_splt(__plzwgr,,'horizontal','nieplanow');
_fb:="
   PD_K.cntx_psh();
   PD_K.index('SIDZAMP');
   PD_K.prefix(PD_K.ses_id(),'',);
   PD_K.first()
";
_fa:="
   PD_K.cntx_pop()
";
__Plz.grp_sel(__plzwgr,PD_K,__pdkwe4,,,,,,_fb,_fa,,,'maximized_with_title');

__Plz.win_sel(__plzwgr)


\plz_bdod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: dodanie naglowka planowanego zamowienia
::   WE: [_a] - wskazanie na pozycje koszyka lub null() - domyślnie
::   WY: ref zamówienia
::  OLD: \plz_bdod/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 ||_a:=null() ?} || _a:=null() ?};

_wyn:=null();
__Plz.cntx_psh();
_plz:=__Plz.ref();
{? TYPYZAM.R='D'
||
   _params1:=exec('zd_nag_add_a','zamowienia');
   PD_K.cntx_psh();
   {? _a<>null() & (PD_K.clear(); PD_K.seek(_a))
   || _params1.KH:=PD_K.KH;
      _params1.TYPYZAM:=PD_K.TYPYZAM;
      _params1.DD:=PD_K.DD;
      _params1.DZ:=PD_K.DZ;
      _params1.WAL:=PD_K.WAL;
      _params1.KRS:={? PD_K.WAL=INFO.NAROD || 0 || PD_K.KRS ?}
   || _params1.KH:=PD_K.KH;
      _params1.TYPYZAM:=TYPYZAM.ref();
      _params1.DD:=date();
      _params1.DZ:=date();
      _params1.WAL:=INFO.NAROD;
      _params1.KRS:=0
   ?};
   PD_K.cntx_pop();
   {? exec('zd_nag_add','zamowienia',_params1)
   || _wyn:=ZD_NAG.ref();
      _params:=exec('plz_a','zamowienia');
      _params.TAB:=__Plz;
      _params.DD:=ZD_NAG.DTPREAL;
      _params.DZ:=ZD_NAG.DATA;
      _params.SYM:=ZD_NAG.SYM;
      _params.KH_SKR:=ZD_NAG.KH().SKR;
      _params.WAL:=ZD_NAG.WAL().KOD;
      _params.KRS:=ZD_NAG.KRS;
      _params.R:='D';
      _params.RSQL:=$ZD_NAG.ref();
      {? exec('plz_add','zamowienia',_params)
      ||
         _plz:=__Plz.ref()
      ?}
   ?}
|? TYPYZAM.R='W'
||
   _params1:=exec('zk_n_add_a','zamowienia');
   PD_K.cntx_psh();
   {? _a<>null() & (PD_K.clear(); PD_K.seek(_a))
   || _params1.TYPYZAM:=PD_K.TYPYZAM;
      _params1.DD:=PD_K.DD;
      _params1.DZ:=PD_K.DZ;
      _params1.MG:=PD_K.MG;
      _params1.Z_MG:=PD_K.Z_MG
   || _params1.KH:=null();
      _params1.TYPYZAM:=TYPYZAM.ref();
      _params1.DD:=date();
      _params1.DZ:=date()
   ?};
   PD_K.cntx_pop();
   {? exec('zk_n_add','zamowienia',_params1)
   ||
      ZK_N.r_lock(1,1,1);
      _wyn:=ZK_N.ref();
      _params:=exec('plz_a','zamowienia');
      _params.TAB:=__Plz;
      _params.DD:=ZK_N.DT;
      _params.DZ:=ZK_N.DP;
      _params.SYM:=ZK_N.SYM;
      _params.MG:=ZK_N.MD().SYM;
      _params.Z_MG:=ZK_N.MG().SYM;
      _params.R:='W';
      _params.RSQL:=$ZK_N.ref();
      {? exec('plz_add','zamowienia',_params)
      ||
         _plz:=__Plz.ref()
      ?}
   ?}
?};
__Plz.cntx_pop();
__Plz.seek(_plz);
_wyn


\plz_bpop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: poprawa naglowka planowanego zamowienia
::  OLD: \plz_bpop/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_Sel:=__Plz.sel_aget();
{? ~_Sel.first() || _Sel.REF:=#__Plz.ref(); _Sel.CRC:=__Plz.crc(); _Sel.add() ?};

{? _Sel.first() & _Sel.next()
||
   FUN.info('Do realizacji.'@);
   __Plz.sel_adel();
   return(0)
|? _Sel.first()
||
   {? __Plz.R='D'
   ||
      ZD_NAG.cntx_psh();
      ZD_NAG.use(8+__Plz.RSQL);
      ZD_NAG.prefix();
      {? ZD_NAG.seek(__Plz.RSQL)
      || _sz:='Z'; _sz==BEER.SZ;
         _mw:='W'; _mw==BEER.MW;
         exec('ustaw_ww','eurusd',BEER.MW);
         ZD_NAG.cntx_psh();
         exec('zdnag_popraw','zamowienia');
         ZD_NAG.cntx_pop();
         {? ZD_NAG.get()
         ||
            ZD_NAG.r_lock(1,1,1);
            _params:=exec('plz_a','zamowienia');
            _params.TAB:=__Plz;
            _params.DD:=ZD_NAG.DTPREAL;
            _params.DZ:=ZD_NAG.DATA;
            _params.SYM:=ZD_NAG.SYM;
            _params.KH_SKR:=ZD_NAG.KH().SKR;
            _params.WAL:=ZD_NAG.WAL().KOD;
            _params.KRS:=ZD_NAG.KRS;
            _params.R:='D';
            _params.RSQL:=$ZD_NAG.ref();
            exec('plz_put','zamowienia',_params)
         ?};
         _sz==BEER.SZ;
         _mw==BEER.MW
      ?};
      ZD_NAG.cntx_pop()
   |? __Plz.R='W'
   ||
      ZK_N.cntx_psh();
      ZK_N.use(8+__Plz.RSQL);
      ZK_N.prefix();
      {? ZK_N.seek(__Plz.RSQL)
      || _sz:='S'; _sz==BEER.SZ;
         _mw:='Z'; _mw==BEER.MW;
         exec('ustaw_ww','eurusd',BEER.MW);
         ZK_N.cntx_psh();
         ZK_N.win_edit('REDW');
         exec('zknag_popraw','zamowienia');
         ZK_N.cntx_pop();
         {? ZK_N.get()
         ||
            ZK_N.r_lock(1,1,1);
            _params:=exec('plz_a','zamowienia');
            _params.TAB:=__Plz;
            _params.DD:=ZK_N.DT;
            _params.DZ:=ZK_N.DP;
            _params.SYM:=ZK_N.SYM;
            _params.MG:=ZK_N.MD().SYM;
            _params.Z_MG:=ZK_N.MG().SYM;
            _params.R:='W';
            _params.RSQL:=$ZK_N.ref();
            exec('plz_put','zamowienia',_params)
         ?};
         _sz==BEER.SZ;
         _mw==BEER.MW
      ?};
      ZK_N.cntx_pop()
   ?};
   __Plz.sel_adel()
?};
0


\pd_k_typyzam_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: przed redakcja PD_K.TYPYZAM
::  OLD: \pd_k_typyzam_be/pd_k.fml
::----------------------------------------------------------------------------------------------------------------------
TYPYZAM.prefix();
TYPYZAM.f_clear();
TYPYZAM.f_set('T',,'R=\'W\' or R=\'D\'');
_wer:=TYPYZAM.mk_sel('Typy zamówień'@,'P',,'djfdnuehrqqkkeh',1,,,,'U');
TYPYZAM.win_fld(_wer,,'T',,,8,,,'Typ'@);
TYPYZAM.win_fld(_wer,,'NAZ',,,30,,,'Nazwa'@);
_fb:="sel_exit()"; TYPYZAM.win_act(_wer,0,'Formuła','&Akceptuj'@@,,,_fb,,1,,,,'A');
TYPYZAM.win_sel(_wer);
1


\pd_k_typyzam_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: po redakcji PD_K.TYPYZAM
::  OLD: \pd_k_typyzam_ae/pd_k.fml
::----------------------------------------------------------------------------------------------------------------------
TYPYZAM.f_clear();
1


\plz_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: aktualizacja planowanego zamowienia do listy
::   WE: _a - tabela zwracana przez exec('plz_a','zamowienia')
::  OLD: \plz_put/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_params:=_a;
_Tab:=_params.TAB;

_Tab.DD:=_params.DD;
_Tab.DZ:=_params.DZ;
_Tab.SYM:=_params.SYM;
_Tab.KH_SKR:=_params.KH_SKR;
_Tab.WAL:=_params.WAL;
_Tab.KRS:=_params.KRS;
_Tab.R:=_params.R;
_Tab.MG:=_params.MG;
_Tab.Z_MG:=_params.Z_MG;
_Tab.RSQL:=_params.RSQL;
_Tab.put()


\zknag_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienie wewnętrzne - Popraw
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_ZAM_DRZK';
_params.UIDREF:=ZK_N.uidref();
_params.AKCJA:='Popraw';

exec('mp_run','#b__box',_params)


\zdnag_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zamówienie dostaw - Popraw
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZDS_DZAD';
_params.UIDREF:=ZD_NAG.uidref();
_params.AKCJA:='Popraw';

exec('mp_run','#b__box',_params)


\plz_busu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: usun tabeli __Plz
::----------------------------------------------------------------------------------------------------------------------
_Sel:=__Plz.sel_aget();
{? ~_Sel.first() || _Sel.REF:=#__Plz.ref(); _Sel.CRC:=__Plz.crc(); _Sel.add() ?};

{? {? _Sel.first() & _Sel.next()
   || FUN.ask('Usunąć pozycje?'@)
   || FUN.ask('Usunąć pozycję?'@)
   ?}
||
   PD_K.cntx_psh();
   _loop:=_Sel.first();
   {!
   |? _loop
   |!
      {? __Plz.seek(_Sel.REF,)
      ||
         PD_K.index('SIDZAMP');
         PD_K.prefix(PD_K.ses_id(),__Plz.RSQL);
         {? PD_K.first()
         ||
            {!
            |?
               PD_K.cntx_psh();
               PD_K.prefix();
               PD_K.ZAM_REF:='';
               PD_K.ZAM_SYM:='';
               PD_K.put();
               PD_K.cntx_pop();
               PD_K.first()
            !}
         ?};
         exec('plz_del','zamowienia',__Plz.RSQL)
      ?};
      _loop:=_Sel.next()
   !};
   PD_K.cntx_pop();
   __Plz.sel_adel()
?};

0


\del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: usunięcie zamówienia
::   WE: _a - $ZD_POZ.ref lub $ZK_P.ref
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

{? _ref='' || return() ?};

PD_K.cntx_psh();
PD_K.index('ZAM_REF1');
PD_K.prefix(_ref);
{? ~PD_K.first()
||
   {? 5+_ref='zdnag'
   ||
      exec('zd_nag_del','zamowienia',_ref);
      ZD_NAG.cntx_psh();
      ZD_NAG.use(8+_ref);
      ZD_NAG.prefix();
      {? ZD_NAG.seek(_ref) || ZD_NAG.r_unlock() ?};
      ZD_NAG.cntx_pop()
   |? 5+_ref='zknag'
   ||
      exec('zk_n_del','zamowienia',_ref);
      ZK_N.cntx_psh();
      ZK_N.use(8+_ref);
      ZK_N.prefix();
      {? ZK_N.seek(_ref) || ZK_N.r_unlock() ?};
      ZK_N.cntx_pop()
   ?}
?};
PD_K.cntx_pop()


\plz_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: usuniecie planowanego zamowienia z listy
::   WE: _a - $ZD_POZ.ref lub $ZK_P.ref
::   WY: -1-nie wykonano __Plz.del, 0/1-wynik __Plz.del()
::  OLD: \plz_del/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

{? _ref='' || return() ?};

_result:=-1;

exec('del','zamowienia',_ref);
{? exec('FindAndGet','#table',ref_tab(_ref),_ref,,,null())=null() & __Plz.get()
|| _result:=__Plz.del()
?};
_result


\zd_nag_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: usuniecie naglowka zamowienia dostawy (ZD_NAG)
::   WE: _a - $ZD_NAG.ref()
::  OLD: \zd_nag_del/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

ZD_NAG.cntx_psh();
ZD_NAG.use(8+_ref);
ZD_NAG.prefix();
{? ZD_NAG.seek(_ref) & ZD_NAG.r_lock(1,1,1)
||
   {? ZD_NAG.count()
   || ZD_NAG.r_unlock()
   || _params:=exec('mp_run_a','#b__box');
      _params.ACT_UID:='LZK_ZDS_DZAD';
      _params.UIDREF:=ZD_NAG.uidref();
      _params.AKCJA:='Usuń_z_planu';
      _params.GRUPA:={? var_pres('__Plz')>117 || __Plz.sel_size()>0 || 0 ?};

      exec('mp_run','#b__box',_params)
   ?}
?};
ZD_NAG.cntx_pop()


\zk_n_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: usuniecie naglowka zamowienia wewnetrznego (ZK_N)
::   WE: _a - $ZK_N.ref()
::  OLD: \zk_n_del/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

ZK_N.cntx_psh();
ZK_N.use(8+_ref);
ZK_N.prefix();
{? ZK_N.seek(_ref) & ZK_N.r_lock(1,1,1)
||
   {? ZK_N.count()
   || ZK_N.r_unlock()
   || _params:=exec('mp_run_a','#b__box');
      _params.ACT_UID:='LMG_ZAM_DRZK';
      _params.UIDREF:=ZD_NAG.uidref();
      _params.AKCJA:='Usuń_z_planu';
      _params.GRUPA:={? var_pres('__Plz')>117 || __Plz.sel_size()>0 || 0 ?};

      exec('mp_run','#b__box',_params)
   ?}
?};
ZK_N.cntx_pop()


\plz_bpolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: połączenie planowanych zamowien w jedno
::  OLD: \plz_bpolacz/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_Sel:=__Plz.sel_aget();
{? ~_Sel.first() || _Sel.REF:=#__Plz.ref(); _Sel.CRC:=__Plz.crc(); _Sel.add() ?};

_ret:=1;
_zam_ref:=null();
_zam_sym:='';
{? _Sel.first() & _Sel.next()
||
   _ret:=0;
   _rodz:='';
   _wal:='';
   _krs:=0;
   __Plz.cntx_psh();
   _Plz:=exec('plz','zamowienia');
   _params:=exec('plz_a','zamowienia');
   _params.TAB:=_Plz;
   _loop:=_Sel.first();
   {!
   |? _loop
   |!
      {? __Plz.seek(_Sel.REF,)
      || {? _rodz='' || _rodz:=__Plz.R || _ret:=_rodz<>__Plz.R ?};
         _params.DD:=__Plz.DD;
         _params.DZ:=__Plz.DZ;
         _params.SYM:=__Plz.SYM;
         _params.KH_SKR:=__Plz.KH_SKR;
         _params.WAL:=__Plz.WAL;
         {? _wal='' || _wal:=__Plz.WAL || _ret:={? _wal<>__Plz.WAL || 2 ?} ?};
         _params.KRS:=__Plz.KRS;
         {? _krs=0 || _krs:=__Plz.KRS || _ret:={? _krs<>__Plz.KRS || 3 ?} ?};
         _params.R:=__Plz.R;
         _params.RSQL:=__Plz.RSQL;
         exec('plz_add','zamowienia',_params)
      ?};
      _loop:=_ret=0 & _Sel.next()
   !};
   {? _ret=1
   ||
      FUN.info('Wybrano zamówienia dostaw i wewnętrzne.\nPołączenie niedostępne.'@)
   |? _ret=2
   ||
      FUN.info('Zamówienia dotyczą różnych walut.\nPołączenie niedostępne.'@)
   |? _ret=3
   ||
      FUN.info('Zamówienia dotyczą różnych kursów walut.\nPołączenie niedostępne.'@)
   ||
      _ret:=1;
      _wer:=_Plz.mk_sel('Wybierz zamówienie docelowe'@,,,'nejnaowenfnjdsa',,,,,'U');
      _Plz.win_fld(_wer,,'DD',,,-10,,,'Data dostawy'@);
      _Plz.win_fld(_wer,,'DZ',,,-10,,,'Data zamówienia'@);
      _Plz.win_fld(_wer,,'SYM',,,20,,,'Symbol zamówienia'@);
      _Plz.win_fld(_wer,,'KH_SKR',,,10,,,'Kontrahent'@);
      _Plz.win_fld(_wer,,'WAL',,,-3,,,'Waluta'@);
      _Plz.win_fld(_wer,,'KRS',,,10,4,,'Kurs'@);
      _fb:="sel_exit()";   _Plz.win_act(_wer,0,'Formuła','&Wybierz'@@,,,_fb,,1,,,,'W');
      _Plz.win_sel(_wer);
      {? _Plz.select()
      || {? _Plz.R='D'
         ||
            ZD_NAG.cntx_psh();
            ZD_NAG.use(8+_Plz.RSQL);
            ZD_NAG.prefix();
            _zam_ref:=exec('FindAndGet','#table',ZD_NAG,_Plz.RSQL,,,null());
            _zam_sym:=ZD_NAG.SYM;
            ZD_NAG.cntx_pop()
         ||
            ZK_N.cntx_psh();
            ZK_N.use(8+_Plz.RSQL);
            ZK_N.prefix();
            _zam_ref:=exec('FindAndGet','#table',ZK_N,_Plz.RSQL,,,null());
            _zam_sym:=ZK_N.SYM;
            ZK_N.cntx_pop()
         ?};
         _ret:=0
      ?}
   ?};
   __Plz.cntx_pop()
|| FUN.info('Należy wskazać co najmniej dwa zamówienia.'@)
?};

{? _ret || return(0) ?};

PD_K.cntx_psh(); __Plz.cntx_psh();

_loop:=_Sel.first();
{!
|? _loop
|!
   {? __Plz.seek(_Sel.REF,) & __Plz.RSQL<>$_zam_ref
   ||
      PD_K.index('SIDZAMP'); PD_K.prefix(PD_K.ses_id(),__Plz.RSQL);
      _loop1:=PD_K.first();
      {!
      |? _loop1
      |!
         PD_K.cntx_psh();
         PD_K.prefix();
         PD_K.ZAM_REF:=$_zam_ref;
         PD_K.ZAM_SYM:=_zam_sym;
         PD_K.put();
         PD_K.cntx_pop();
         _loop1:=PD_K.first()
      !};
      exec('plz_del','zamowienia',__Plz.RSQL)
   ?};
   _loop:=_Sel.next()
!};

PD_K.cntx_pop(); __Plz.cntx_pop();
__Plz.sel_adel();
0


\plz_bakc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: akceptacja planowanych zamówień
::  OLD: \plz_bakc/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_Sel:=__Plz.sel_aget();
{? ~_Sel.first() || _Sel.REF:=#__Plz.ref(); _Sel.CRC:=__Plz.crc(); _Sel.add() ?};

:: sprawdzenie czy sa nieaktualne pozycje
__Plz.cntx_psh(); PD_K.cntx_psh();
exec('ini_kom','#message','Usuwanie pozycji'@);
_loop:=_Sel.first();
{!
|? _loop
|!
   _del:=0;
   {? __Plz.seek(_Sel.REF,)
   ||
      {? __Plz.R='D'
      || {? __Plz.KH_SKR=''
         || _del:=1;
            __kom_on:=1;
            __kom.set_root(__Plz.SYM);
            __kom.add('Nie podany dostawca. Zamówienie zostało pominięte.'@,2,,1)
         ?}
      |? __Plz.R='W'
      || 1
      ?};
      PD_K.index('REFRESH'); PD_K.prefix(PD_K.ses_id(),'T',__Plz.RSQL);
      {? PD_K.first()
      || _message:='Pozycja planu wymaga ponownej analizy.'@;
         {? ~__kom.find_msg(_message)
         || __kom_on:=1;
            __kom.set_root(PD_K.M().KTM);
            __kom.add(_message,7,,1)
         ?}
      ?}
   ?};
   _loop:={? _del || _Sel.del() || _Sel.next() ?}
!};
exec('end_kom','#message');

{? ~_Sel.first()
|| __Plz.cntx_pop(); PD_K.cntx_pop();
   return(0)
?};

{? _wariant:=
      {? _Sel.first() & _Sel.next()
      || FUN.choice('Jak utworzyć pozycje zamówień?'@,,'Grupować pozycje ilościowo'@,'Grupowć pozycje wartościowo'@
            ,'Bez grupowania pozycji'@)
      || FUN.choice('Jak utworzyć pozycje zamówienia?'@,,'Grupować pozycje ilościowo'@,'Grupowć pozycje wartościowo'@
            ,'Bez grupowania pozycji'@)
   ?}
||
   PD_Z.REFRESH:=0;
   _params:=exec('zd_poz_add_a','zamowienia');
   _params1:=exec('zk_p_add_a','zamowienia');
   _loop:=_Sel.first();
   {!
   |? _loop
   |!
      {? __Plz.seek(_Sel.REF,)
      ||
         PD_K.index('SIDZAMP');
         PD_K.prefix(PD_K.ses_id(),__Plz.RSQL,'',);
         _loop1:=PD_K.first();
         {!
         |? _loop1
         |!
            {? __Plz.R='D'
            ||
               _jmz:=PD_K.JMZ & PD_K.JM<>PD_K.J2;
               _params.ZAM_REF:=PD_K.ZAM_REF;
               _params.M:=PD_K.M;
               _params.JM:={? ~_jmz || PD_K.JM || PD_K.J2 ?};
               _params.J2:={? ~_jmz || PD_K.J2 || PD_K.M().J ?};
               _params.WS2:={? ~_jmz || PD_K.WS2 || 1/PD_K.WS2 ?};
               _params.T2:=PD_K.T2;
               _params.IL_ZAM:={? ~_jmz || PD_K.ILP || PD_K.IL2 ?};
               _params.IL:={? ~_jmz || PD_K.ILP || PD_K.IL2 ?};
               _params.IL2:={? ~_jmz || PD_K.IL2 || PD_K.ILP ?};
               _params.CENA:=PD_K.CENA;
               _params.CWAL:=PD_K.CWAL;
               _params.WAL:=PD_K.WALK;
               _params.KRS:={? PD_K.WAL=INFO.NAROD || 0 || PD_K.KRS ?};
               ZD_NAG.cntx_psh();
               ZD_NAG.use(8+PD_K.ZAM_REF);
               ZD_NAG.prefix();
               {? ZD_NAG.seek(PD_K.ZAM_REF)
               || {? ZD_NAG.WAL<>INFO.NAROD
                  || _params.WAL:=ZD_NAG.WAL;
                     _params.KRS:=ZD_NAG.KRS;
                     {? _params.CWAL=0 & _params.KRS>0 || _params.CWAL:=(_params.CENA/_params.KRS)$PD_K.M().DOKL_C  ?}
                  ?}
               ?};
               ZD_NAG.cntx_pop();
               _params.MG:=PD_K.MG;
               _params.IL_POZ:={? ~_jmz || PD_K.ILP || PD_K.IL2 ?};
               _params.DK_C:=PD_K.DK_C;
               _poz:=exec('zd_poz_add','zamowienia',_params,_wariant);
               {? _poz.REF
               || PD_K.cntx_psh();
                  PD_K.prefix();
                  PD_K.POZ_REF:=$_poz.REF;
                  PD_K.ZAM_POZ:=_poz.POZ;
                  PD_K.CZY_ZAM:='T';
                  PD_K.ILP-=_poz.IL;
                  {? PD_K.put()
                  ||
                     PD_P.cntx_psh();
                     PD_P.prefix();
                     {? PD_P.seek(PD_K.PD_P)
                     || PD_P.ILKOSZYK:=exec('ilwkoszyku','plan_dostaw',PD_K.PD_N,PD_K.PD_P);
                        PD_P.put()
                     ?};
                     PD_P.cntx_pop();
                     exec('dd','plan_dostaw',PD_K.ref())
                  ?};
                  PD_K.cntx_pop()
               ?};
               &_poz
            |? __Plz.R='W'
            ||
               _params1.ZAM_REF:=PD_K.ZAM_REF;
               _params1.M:=PD_K.M;
               _params1.JM:=PD_K.JM;
               _params1.J2:=PD_K.J2;
               _params1.WS2:=PD_K.WS2;
               _params1.T2:=PD_K.T2;
               _params1.ILZ:=PD_K.ILP;
               _params1.IL2:=PD_K.IL2;
               _params1.CENA:=PD_K.CENA;
               _params1.DK_C:=PD_K.DK_C;
               _poz:=exec('zk_p_add','zamowienia',_params1,_wariant);
               {? _poz.REF
               || PD_K.cntx_psh();
                  PD_K.prefix();
                  PD_K.POZ_REF:=$_poz.REF;
                  PD_K.ZAM_POZ:=_poz.POZ;
                  PD_K.CZY_ZAM:='T';
                  PD_K.ILP-=_poz.IL;
                  {? PD_K.put()
                  ||
                     PD_P.cntx_psh();
                     PD_P.prefix();
                     {? PD_P.seek(PD_K.PD_P)
                     || PD_P.ILKOSZYK:=exec('ilwkoszyku','plan_dostaw',PD_K.PD_N,PD_K.PD_P);
                        PD_P.put()
                     ?};
                     PD_P.cntx_pop()
                  ?};
                  PD_K.cntx_pop()
               ?};
               &_poz
            ?};
            _loop1:=PD_K.first()
         !};
::       obliczanie wartosci zamowienia
         {? __Plz.R='D'
         || ZD_NAG.cntx_psh();
            ZD_NAG.use(ref_name(__Plz.RSQL));
            {? ZD_NAG.seek(__Plz.RSQL)
            || exec('war_zam','zamdst_wspolne',ZD_NAG.ref,,_wariant=1);
               exec('inf_dod','fakso',0,'zdnag');
               exec('zdnag_popraw','zamowienia')
            ?};
            ZD_NAG.cntx_pop()

         |? __Plz.R='W'
         || ZK_N.cntx_psh(); ZK_P.cntx_psh();
            ZK_N.use(ref_name(__Plz.RSQL));
            ZK_P.use('zkpoz'+(ZK_N.name()+3));
            {? ZK_N.seek(__Plz.RSQL)
            || exec('aktznzkn','zamsiw_nag',ZK_N.ref(),1);
               exec('inf_dod','fakso',0,'zknag');
               exec('zknag_popraw','zamowienia')
            ?};
            ZK_N.cntx_pop(); ZK_P.cntx_pop()
         ?}
      ?};
      _loop:=_Sel.next()
   !};
   PD_Z.REFRESH:=1;
   sel_exit()
?};

__Plz.cntx_pop(); PD_K.cntx_pop();
0


\zd_poz_add_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: parametr funkcji zd_poz_add
::  OLD: \zd_poz_add_a/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=obj_new('ZAM_REF','M','JM','J2','WS2','T2','IL_ZAM','IL','IL2','WAL','CENA','CWAL','KRS','MG','IL_POZ','DK_C');
_args.ZAM_REF:='';
_args.M:=null();
_args.JM:=null();
_args.J2:=null();
_args.WS2:=0;
_args.T2:='';
_args.IL_ZAM:=0;
_args.IL:=0;
_args.IL2:=0;
_args.WAL:=null();
_args.CENA:=0;
_args.CWAL:=0;
_args.KRS:=0;
_args.MG:=null();
_args.IL_POZ:=0;
_args.DK_C:=null();
_args


\zd_poz_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: dodanie pozycji zamowienia dostaw
::   WE: _a - tabela zwracana przez exec('zd_poz_add_a','zamowienia')
::       _b - 1-grupowac pozycje ilościowo, 2-grupować pozycje wartościowo, 3-bez grupowania
::  OLD: \zd_poz_add/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_paramsa:=_a;
_wariant:=_b;
_wyn:=obj_new('REF','POZ','IL');

_zdn:=null();
ZD_NAG.cntx_psh(); ZD_POZ.cntx_psh();
ZD_NAG.use(8+_paramsa.ZAM_REF);
ZD_NAG.prefix();
{? ZD_NAG.seek(_paramsa.ZAM_REF)
|| _zdn:=ZD_NAG.ref();
   _put:=0;
   ZD_POZ.use('zdpoz'+(8+_paramsa.ZAM_REF+3));
   ZD_POZ.index('DAM');
   ZD_POZ.prefix(_zdn,_paramsa.M);
   {? _wariant=1 | _wariant=2
   ||
      _loop:=ZD_POZ.first();
      {!
      |? _loop
      |!
         {? _wariant=1
         ||
            _put:=
               ZD_POZ.JM=_paramsa.JM
               & ZD_POZ.J2=_paramsa.J2
               & ZD_POZ.WS2=_paramsa.WS2
               & ZD_POZ.T2=_paramsa.T2
               & ZD_POZ.WAL=_paramsa.WAL
               & ZD_POZ.DK_C=_paramsa.DK_C

         |? _wariant=2
         ||
            _put:=
               ZD_POZ.JM=_paramsa.JM
               & ZD_POZ.J2=_paramsa.J2
               & ZD_POZ.WS2=_paramsa.WS2
               & ZD_POZ.T2=_paramsa.T2
               & ZD_POZ.WAL=_paramsa.WAL
               & ZD_POZ.CENA=_paramsa.CENA
               & ZD_POZ.CWAL=_paramsa.CWAL
               & {? ZD_NAG.WAL<>INFO.NAROD || 1 || ZD_POZ.KRS=_paramsa.KRS ?}
               & ZD_POZ.DK_C=_paramsa.DK_C
         ?};
         _loop:=_put=0 & ZD_POZ.next()
      !}
   ?};
   _continue:=0;
   {? _put=1
   || ZD_POZ.IL_ZAM+=_paramsa.IL;
      ZD_POZ.IL+=_paramsa.IL;
      ZD_POZ.IL_KOR:=ZD_POZ.IL-ZD_POZ.IL_ZAM;
      ZD_POZ.IL_POZ:=ZD_POZ.IL;
      {? ZD_POZ.WS2=1 || ZD_POZ.IL2:=ZD_POZ.IL ?};
      exec('aktdil2','zamdst_poz');
      exec('zdp_obl','zamdst_poz');
      _continue:=ZD_POZ.put()
   || ZD_POZ.index('POZ');
      ZD_POZ.prefix(_zdn);
      ZD_POZ.blank();
      ZD_POZ.ZD_NAG:=_zdn;
      ZD_POZ.M:=_paramsa.M;
      ZD_POZ.JM:=_paramsa.JM;
      ZD_POZ.J2:=_paramsa.J2;
      ZD_POZ.WS2:=_paramsa.WS2;
      ZD_POZ.T2:=_paramsa.T2;
      ZD_POZ.IL_ZAM:=_paramsa.IL_ZAM;
      ZD_POZ.IL:=_paramsa.IL;
      ZD_POZ.IL2:=_paramsa.IL2;
      ZD_POZ.WAL:=_paramsa.WAL;
      ZD_POZ.CENA:=_paramsa.CENA;
      ZD_POZ.CWAL:=_paramsa.CWAL;
      ZD_POZ.KRS:=_paramsa.KRS;
      exec('zdp_obl','zamdst_poz');
      ZD_POZ.MG:=_paramsa.MG;
      ZD_POZ.IL_POZ:=_paramsa.IL_POZ;
      ZD_POZ.DK_C:=_paramsa.DK_C;
      ZD_POZ.KH:=ZD_POZ.ZD_NAG().KH;
      ZD_POZ.KH_MSC:=ZD_POZ.ZD_NAG().KH_MSC;
      ZD_POZ.TRN:=ZD_POZ.ZD_NAG().TRN;
      ZD_POZ.POJAZD:=ZD_POZ.ZD_NAG().POJAZD;
      _continue:=ZD_POZ.add()
   ?};
   {? _continue
   ||
      exec('inf_dod','fakso',0,'zdpoz');
      {? ZD_POZ.MG<>null
      || exec('obl_stan','magazyn_stan',ZD_POZ.M,1,ZD_POZ.MG)
      ?};
      _wyn.REF:=ZD_POZ.ref();
      _wyn.POZ:=ZD_POZ.POZ;
      _wyn.IL:=_paramsa.IL
   ?}
?};
ZD_NAG.cntx_pop(); ZD_POZ.cntx_pop();
_wyn


\zk_p_add_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: parametr funkcji zk_p_add
::  OLD: \zk_p_add_a/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=obj_new('ZAM_REF','M','JM','J2','WS2','T2','ILZ','IL2','CENA','DK_C');
_args.ZAM_REF:='';
_args.M:=null();
_args.JM:=null();
_args.J2:=null();
_args.WS2:=0;
_args.T2:='';
_args.ILZ:=0;
_args.IL2:=0;
_args.CENA:=0;
_args.DK_C:=null();
_args


\zk_p_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: dodanie pozycji zamowienia wewnetrznego
::   WE: _a - tabela zwracana przez exec('zk_p_add_a','zamowienia')
::       _b - 1-grupowac pozycje ilościowo, 2-grupować pozycje wartościowo, 3-bez grupowania
::  OLD: \zk_p_add/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_paramsa:=_a;
_wartiant:=_b;

_wyn:=obj_new('REF','POZ','IL');

_zkn:=null();
ZK_N.cntx_psh(); ZK_P.cntx_psh();
ZK_N.use(8+_paramsa.ZAM_REF);
ZK_N.prefix();
{? ZK_N.seek(_paramsa.ZAM_REF)
|| _put:=0;
   _zkn:=ZK_N.ref();
   BEER.RMAG:=ZK_N.MG;
   ZK_P.use('zkpoz'+(8+_paramsa.ZAM_REF+3));
   ZK_P.index('MATN');
   ZK_P.prefix('A','Z',_zkn,1,_paramsa.M);
   {? _wartiant=1 | _wartiant=2
   ||
      _loop:=ZK_P.first();
      {!
      |? _loop
      |!
         _put:=
            ZK_P.JM=_paramsa.JM
            & ZK_P.J2=_paramsa.J2
            & ZK_P.WS2=_paramsa.WS2
            & ZK_P.T2=_paramsa.T2
            & ZK_P.CENA=_paramsa.CENA
            & ZK_P.DK_C=_paramsa.DK_C;
         _loop:=_put=0 & ZK_P.next()
      !}
   ?};
   _continue:=0;
   {? _put=1
   || ZK_P.ILZ+=_paramsa.ILZ;
      ZK_P.ILP:=ZK_P.ILZ;
      _mjs:=ATR.MJS;
      ATR.MJS:='ZK_P';
      exec('aktzil2','zamsiw_poz');
      ATR.MJS:=_mjs;
      exec('war_pozz','zamsiw_poz');
      {? ZK_P.put()
      || {? ZK_P.REZ || exec('rez_pozy','rezerwacje',5) ?};
         _wyn.REF:=ZK_P.ref();
         _wyn.POZ:=ZK_P.POZ;
         _wyn.IL:=_paramsa.ILZ
      ?}
   || ZK_P.index('TYPN');
      ZK_P.prefix('A','Z',_zkn,1);
      BEER.ZK_N:=_zkn;
      BEER.TYP:='Z';
      ZK_P.blank();
      ZK_P.N:=_zkn;
      ZK_P.M:=_paramsa.M;
      ZK_P.JM:=_paramsa.JM;
      ZK_P.J2:=_paramsa.J2;
      ZK_P.WS2:=_paramsa.WS2;
      ZK_P.T2:=_paramsa.T2;
      ZK_P.ILZ:=_paramsa.ILZ;
      ZK_P.IL2:=_paramsa.IL2;
      ZK_P.CENA:=_paramsa.CENA;
      ZK_P.ILP:=ZK_P.ILZ;
      ZK_N.use(ref_name(ZK_P.N));
      ZK_P.TRN:=ZK_P.N().TRN;
      ZK_P.RR:=ZK_N.RR;
      ZK_P.RM:=ZK_N.RM;
      ZK_P.RT:=ZK_N.RT;
      ZK_P.REZ:=exec('bl_zkpre','zamsiw_poz');
      {? ZK_P.REZ || ZK_P.DOR:=ZK_P.ILZ ?};
      ZK_P.DK_C:=_paramsa.DK_C;
      exec('war_pozz','zamsiw_poz');
      ZK_P.KH:=ZK_P.N().KH;
      ZK_P.KH_ODB:=ZK_P.N().ODB;
      {? ZK_P.add()
      || exec('inf_dod','fakso',0,'zkpoz');
         _rez:=ZK_P.REZ;
         {? ZK_P.NR=0 || ZK_P.NR:=exec('blnr_kol','zamsiw_poz',ZK_P.M) ?};
         {? ZK_P.REZ
         || ZK_P.ILR:=ZK_P.ILP:=ZK_P.ILZ
         || ZK_P.ILP:=ZK_P.ILZ; ZK_P.ILR:=0
         ?};
         ZK_P.put(1);
         exec('rozp_rez','rezerwacje');
         ZK_P.REZ:=_rez;
         ZK_P.DOST:=0;
         ZK_P.put(1);
         {? ZK_P.REZ
         || exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
            exec('aktu_stu','zamsiw_wspolne',ZK_P.M,1,1)
         || _zkp:=tab_tmp(1,'MAT','STRING[16]','','ZKP','STRING[16]','');
            _zkp.blank(); _zkp.MAT:=$ZK_P.M; _zkp.ZKP:=$ZK_P.ref(); _zkp.add(1);
            exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,ZK_P.ILZ,$ZK_P.N,_zkp);
            obj_del(_zkp)
         ?};
         _wyn.REF:=ZK_P.ref();
         _wyn.POZ:=ZK_P.POZ;
         _wyn.IL:=_paramsa.ILZ
      ?}
   ?}
?};
ZK_N.cntx_pop(); ZK_P.cntx_pop();
_wyn


\plz_bidzdozd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: idz do zamowienia z planowanego zamowienia
::  OLD: \plz_bidzdozd/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=__Plz.RSQL;
exec('idz2zam','zamowienia',_ref);
{? 5+_ref='zdnag'
||
   ZD_NAG.cntx_psh();
   ZD_NAG.use(8+_ref);
   ZD_NAG.prefix();
   {? ~ZD_NAG.seek(_ref)
   || __Plz.del()
   ?};
   ZD_NAG.cntx_pop()
|? (5+_ref)='zknag'
||
   ZK_N.cntx_psh();
   ZK_N.use(8+_ref);
   ZK_N.prefix();
   {? ~ZK_N.seek(_ref)
   || __Plz.del()
   ?};
   ZK_N.cntx_pop()
?}


\idz2zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: Podgląd zamowienia
::   WE: _a - $ZAM.ref
::  OLD: \idz2zam/pd_zam.fml
:: ~OST: INFORK
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

_Tab:=ref_tab(_ref);

_uidref:={? _Tab=ZD_NAG
         || exec('FindAndGet','#table',ZD_NAG,_ref,,"ZD_NAG.uidref()",'')
         |? _Tab=ZK_N
         || exec('FindAndGet','#table',ZK_N,_ref,,"ZK_N.uidref()",'')
         || ''
         ?};

{? _uidref='' || FUN.info('Nie znaleziono zamówienia.'@); return() ?};
{? exec('interm','#system')
|| _params:=exec('obj_ntab_set','#array',,'LINK',_uidref);
   _link_interm:=link_uri(_params);
   cli_open_link(_link_interm)
||
   _domain:={? _Tab=ZD_NAG
            || 'LZK'
            || 'LMG'
            ?};
   _color:=exec('FindInSet','#table','B_DOMAIN','SYMBOL',_domain,,"B_DOMAIN.COLOR",1,,'');
   mb_fork(,'START_PROCES'
      ,'color='+exec('color_conv','#convert',_color)
      ,'LINK',_uidref)
?};
~~


\plz_bwys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: przed wyswietl z planowanego zamowienia
::----------------------------------------------------------------------------------------------------------------------
exec('zam_wys','zamowienia',__Plz)


\zam_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: wyswietla naglowek zamowienia
::   WE: _a - TABELA
::  OLD: \zam_wys/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=_a;
_ref:=_Tab.RSQL;

{? (5+_ref)='zknag'
|| ZK_N.cntx_psh();
   ZK_N.use(8+_ref);
   ZK_N.prefix();
   {? ZK_N.seek(_ref)
   || exec('zknag_win_edit_set','zamsiw_nag',0,1,,1);
      exec('dispWithFakso','fakso','ZK_N')
   ?};
   ZK_N.cntx_pop()
|? (5+_ref)='zdnag'
|| ZD_NAG.cntx_psh();
   ZD_NAG.use(8+_ref);
   ZD_NAG.prefix();
   {? ZD_NAG.seek(_ref)
   || exec('zdnag_win_edit_set','zamdst_nag',1,1);
      exec('dispWithFakso','fakso','ZD_NAG')
   ?};
   ZD_NAG.cntx_pop()
?};
~~


\plz_bdndpdk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: dnd z PD_K do __Plz
::   WE: [_a] 0(domyślnie)- drag&drop, 1-akcja
::  OLD: \plz_bdndpdk/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};

_cur:=__Plz.ref();
{? ~_tryb
|| _dest:=dnd_info('dest_record');
   _Dnd:=dnd_info('dropped_records')
|| _dest:=null();
   __Plz.cntx_psh();
   _sel:=__Plz.mk_sel('Wybór zamówienia'@,,,'adbbeqoqppoksel',,,,,'U');
   __Plz.win_fld(_sel,,'DD',,,-10,,,'Data dostawy'@);
   __Plz.win_fld(_sel,,'DZ',,,-10,,,'Data zamówienia'@);
   __Plz.win_fld(_sel,,'SYM',,,20,,,'Symbol zamówienia'@);
   __Plz.win_fld(_sel,,'KH_SKR',,,10,,,'Dostawca'@);
   __Plz.win_fld(_sel,,'WAL',,,-3,,,'Waluta'@);
   __Plz.win_fld(_sel,,'KRS',,,10,4,,'Kurs'@);
   __Plz.win_fld(_sel,,'MG',,,8,,,'Magazyn'@);
   __Plz.win_fld(_sel,,'Z_MG',,,-8,,,'Z magazynu'@);
   _fb:="sel_exit";                           __Plz.win_act(_sel,0,'Formuła','&Wybierz'@@,,,_fb,,1,,,,'W');
   _fb:="exec('plz_bidzdozd','zamowienia')";  __Plz.win_act(_sel,0,'Formuła','&Idź do zamówienia'@@,,,_fb,,,,,,'I');
   _fb:="exec('plz_bwys','zamowienia')";      __Plz.win_act(_sel,0,'Wyświetl',,,,_fb);
   __Plz.win_sel(_sel);
   {? __Plz.select() || _dest:=__Plz.ref() ?};
   __Plz.cntx_pop();

   {? cur_tab(1).sel_size()
   || _Dnd:=cur_tab(1).sel_aget();
      cur_tab(1).sel_adel()
   || _Dnd:=tab_tmp(1,'REF','INTEGER','');
      _Dnd.blank();
      _Dnd.REF:=#cur_tab(1).ref();
      _Dnd.add(1)
   ?}
?};

:: dodanie naglowka zamowienia
{? _dest=null()
|| FUN.info('Należy wskazać zamówienie.'@)
?};

{? _dest=null() || return() ?};

{? ~__Plz.seek(_dest) || return() ?};

exec('ini_kom','#message','Zamawiaj'@);
:: sprawdzenie czy jednolite pozycje tzn. dotyczace tylko zamowien dostaw lub tylko wewnetrznych
_ret:=0;
_rodz:=__Plz.R;
_mg:=__Plz.MG;
_z_mg:=__Plz.Z_MG;

:: konwersja sref na ref zamowienia
_zam_ref:=null();
_zam_sym:='';
{? __Plz.R='D'
||
   ZD_NAG.cntx_psh();
   ZD_NAG.use(8+__Plz.RSQL);
   ZD_NAG.prefix();
   {? ZD_NAG.seek(__Plz.RSQL)
   ||
      _zam_ref:=ZD_NAG.ref();
      _zam_sym:=ZD_NAG.SYM;
      _oddz:=ZD_NAG.ODDZ
   ?};
   ZD_NAG.cntx_pop()
||
   ZK_N.cntx_psh();
   ZK_N.use(8+__Plz.RSQL);
   ZK_N.prefix();
   {? ZK_N.seek(__Plz.RSQL)
   ||
      _zam_ref:=ZK_N.ref();
      _zam_sym:=ZK_N.SYM;
      _oddz:=ZK_N.ODDZ
   ?};
   ZK_N.cntx_pop()
?};

:: aktualizacja zamowienia w pozycjach koszyka
PD_K.cntx_psh();
PD_K.prefix();
_loop:=_Dnd.first();
{!
|? _loop
|!
   {? PD_K.seek(_Dnd.REF,)
   ||
      {? PD_K.ZAM_REF=__Plz.RSQL
      || __kom_on:=1;
         __kom.set_root($PD_K.ID);
         __kom.add('Pozycja koszyka jest już przypisana do zamówienia.'@,7)
      ?};
      {? __Plz.R='D'
      ||
         _pdk_oddz:=PD_K.MG().ODDZ;
         {? _rodz<>PD_K.TYPYZAM().R
         || __kom_on:=1;
            __kom.set_root($PD_K.ID);
            __kom.add('Pozycja koszyka dotyczy zamówienia wewnetrznego. Została pominięta.'@,7)
         |? _oddz<>_pdk_oddz
         || __kom_on:=1;
            __kom.set_root($PD_K.ID);
            __kom.add('Pozycja koszyka dotyczy oddziału %1. Została pominięta.'@[_pdk_oddz],7)
         || PD_K.ZAM_REF:=$_zam_ref;
            PD_K.ZAM_SYM:=_zam_sym;
            PD_K.put()
         ?}
      ||
         {? _rodz<>PD_K.TYPYZAM().R
         || __kom_on:=1;
            __kom.set_root($PD_K.ID);
            __kom.add('Pozycja koszyka dotyczy zamówienia dostaw. Została pominięta.'@,7)
         |? _mg<>PD_K.MG().SYM
         || __kom_on:=1;
            __kom.set_root($PD_K.ID);
            __kom.add('Pozycja koszyka dotyczy innego magazynu docelowego. Została pominięta.'@,7)
         |? _z_mg<>PD_K.Z_MG().SYM
         || __kom_on:=1;
            __kom.set_root($PD_K.ID);
            __kom.add('Pozycja koszyka dotyczy innego magazynu źródłowego. Została pominięta.'@,7)
         || PD_K.ZAM_REF:=$_zam_ref;
            PD_K.ZAM_SYM:=_zam_sym;
            PD_K.put()
         ?}
      ?}
   ?};
   _loop:=_Dnd.next()
!};
PD_K.cntx_pop();

exec('end_kom','#message')


\addZamPlan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienie dostaw - z planu dostaw
::   WE: [_a] - wskazanie na pozycje koszyka lub null() - domyślnie
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 ||_a:=null() ?} || _a:=null() ?};

TYPYZAM.cntx_psh();
TYPYZAM.prefix();
_rodz:=PD_K.TYPYZAM().R;

PD_Z.RSQL:='';


{? _rodz='D'
||
:: __ZD_PROC powoływane w \pd2zam/zamowienia.fml
   _zd_proc:=var_pres('__ZD_PROC')=type_of(null());
   _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='LZK_ZDS_DZAD';
   _params.AKCJA:='Plan_dostaw';
   _params.PROC_START:='T';
   {? _zd_proc & __ZD_PROC
   ||
::    uruchamianie zapamiętanego procesu
      _params.PROC_SYM:=exec('FindAndGet','#table',B_PROC,__ZD_PROC,,"SYMBOL",'');
      _params.PROC_VER:=exec('FindAndGet','#table',B_PROC,__ZD_PROC,,"VER",'')
   ?};

   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYPYZAM',TYPYZAM.ref());
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'PD_K',PD_K.ref());
   exec('mp_run','#b__box',_params);
   {? _zd_proc & var_pres('B_PREL',_params)<>type_of(~~) & _params.B_PREL
   ||
::    zapamiętanie uruchomionego procesu
      __ZD_PROC:=exec('FindAndGet','#table',B_PREL,_params.B_PREL,,"B_PROC",null())
   ?}

|? _rodz='W'
||
:: __ZW_PROC powoływane w \pd2zam/zamowienia.fml
   _zw_proc:=var_pres('__ZW_PROC')=type_of(null());
   _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='LMG_ZAM_DRZK';
   _params.AKCJA:='Plan_dostaw';
   _params.PROC_START:='T';
   {? _zw_proc & __ZW_PROC
   ||
::    uruchamianie zapamiętanego procesu
      _params.PROC_SYM:=exec('FindAndGet','#table',B_PROC,__ZW_PROC,,"SYMBOL",'');
      _params.PROC_VER:=exec('FindAndGet','#table',B_PROC,__ZW_PROC,,"VER",'')
   ?};

   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYPYZAM',TYPYZAM.ref());
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'PD_K',PD_K.ref());
   exec('mp_run','#b__box',_params);
   {? _zw_proc & var_pres('B_PREL',_params)<>type_of(~~) & _params.B_PREL
   ||
::    zapamiętanie uruchomionego procesu
      __ZW_PROC:=exec('FindAndGet','#table',B_PREL,_params.B_PREL,,"B_PROC",null())
   ?}
?};
TYPYZAM.cntx_pop();
~~


\zakr_ind
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: ustawia zakres na zamowieniach klienta
::  OLD: \zakr_ind/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? BEER.TYPYZAM<>null
||
   _ind:='''T'',,,';
   _prf:='BEER.TYPYZAM,'
|? ZAKR.RODZ_ZAM<>''
|| _ind:='''T'',''R'',,';
   _prf:='\''+{? ZAKR.RODZ_ZAM='S' || 'Z' || 'W' ?}+'\','
|| _ind:='';
   _prf:=''
?};

BEER.ZAKR:='';
{? BEER.NAWIG='ZK' | KHVZ.WIDOKI & KHVZ.NAWIG='ZK'
||
   {? ZAKR.KH<>null
   || _ind+='''KH'',,,';_prf+='ZAKR.KH,';BEER.ZAKR+='kontr. '+ZAKR.KH().KOD+' | '
   ?};
   {? ZAKR.HAN<>null
   || _ind+='''HAN'',,,';_prf+='ZAKR.HAN,';BEER.ZAKR+='handl. '+ZAKR.HAN().KOD+' | '
   ?};
   {? ZAKR.US<>null
   || _ind+='''US'',,,';_prf+='ZAKR.US,';BEER.ZAKR+='użytkownik '+ZAKR.US().KOD+' | '
   ?}
|? BEER.NAWIG='ZW' | KHVZ.WIDOKI & KHVZ.NAWIG='ZW'
||
   {? ZAKR.WYD<>null
   || _ind+='''WYD'',,,';_prf+='ZAKR.WYD,';BEER.ZAKR+='wydział '+ZAKR.WYD().KOD+' | '
   ?};
   {? ZAKR.ZL<>null
   || ZAKR.ZLSYM:=ZAKR.ZL().SYM;
      _ind+='''ZL'',,,';_prf+='ZAKR.ZL,';BEER.ZAKR+='zlecenie '+ZAKR.ZL().SYM+' | '
   ?};
   {? ZAKR.US<>null
   || _ind+='''US'',,,';_prf+='ZAKR.US,';BEER.ZAKR+='użytkownik '+ZAKR.US().KOD+' | '
   ?}
?};

BEER.ZAKR:=BEER.ZAKR-2;

{? _ind<>''
|| _ind:=_ind-1;_prf:=_prf-1;
   ZK_N.ndx_drop();
   _ndx:=($('ZK_N.ndx_tmp('''',,'+_ind+',\'NR\',,)'))();
   ZK_N.index(_ndx);
   ($('ZK_N.prefix('+_prf+')'))()
?};
''


\zam_deleted_in_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Obsługa sytuacji, że jest czynność na liście todo, ale zamówienie zostało usunięte/anulowane/zarchiwizowane
::   WE: _a - obj_new - obiekt Menadżera Procesów
::       [_b] - INTEGER - 0/[1] - czy errorować proces, jeżeli 0 to jest robiony .done()
::       [_c] - INTEGER: [0] - dotyczy zamówienia, 1 - dotyczy potwierdzenia zamówienia
::       [_d] - INTEGER: [0] - usunięte, 1 - wysłane do archiwum, 2 - anulowane
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_mp:=_a;

_error:=1;
{? var_pres('_b')=type_of(0)
|| _error:=_b
?};
_zamp:=0;
{? var_pres('_c')=type_of(0)
|| _zamp:=_c
?};
_what:=0;
{? var_pres('_d')=type_of(0)
|| _what:=_d
?};

{? _zamp>0
|| _msg:=exec('zamp_deleted_msg','zamowienia',_what)
|| _msg:=exec('zam_deleted_msg','zamowienia',_what)
?};

{? _mp.isService()=0 & _mp.CLEANER=0
|| FUN.emsg(_msg)
?};
{? _error>0
|| _mp.error(_msg)
|| _mp.done()
?};
~~


\zam_deleted_msg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Komunikat o usunięciu/zarchiwizowaniu zamówienia
::   WE: [_a] - INTEGER: [0] - usunięte, 1 - wysłane do archiwum, 2 - anulowane
::----------------------------------------------------------------------------------------------------------------------
_what:=0;
{? var_pres('_a')=type_of(0)
|| _what:=_a
?};
{? _what=2
|| 'Zamówienie anulowano - czynność została zakończona.'@@
|? _what=1
|| 'Zamówienie przesłano do archiwum - czynność została zakończona.'@@
|| 'Zamówienie nie zostało odnalezione, prawdopodobnie zostało usunięte.'@@
?}


\zamp_deleted_msg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Komunikat o usunięciu/zarchiwizowaniu potwierdzenia zamówienia
::   WE: [_a] - INTEGER: [0] - usunięte, 1 - wysłane do archiwum
::----------------------------------------------------------------------------------------------------------------------
_what:=0;
{? var_pres('_a')=type_of(0)
|| _what:=_a
?};
{? _what=1
|| 'Potwierdzenie zamówienie przesłano do archiwum - czynność została zakończona.'@@
|| 'Potwierdzenie zamówienie nie zostało odnalezione, prawdopodobnie zostało usunięte.'@@
?}

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 3433638cb50ab48907d5da28b62b12d5254d811ce1ef563bed295cca6884f471d1080c17cf8e550979ac00d371fc055dbd5a89aab6a369aaafdeefee5aac294d365c6214643e14500e6b212071fb7653351422d0b6ded5f2085f2a9025772ff814b3860dd65feef56e1547645e733e53ec2fb9e2c15443d3ab9e4b543a073f6c
