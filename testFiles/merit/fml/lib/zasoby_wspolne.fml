:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zasoby_wspolne.fml
:: Utworzony: 24.05.2017
:: Autor: AMK
::======================================================================================================================
:: Zawartość: Obsługa zasobów wspólnych
::======================================================================================================================


\zm_zasob_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Dołączanie zmian w zasobach
::----------------------------------------------------------------------------------------------------------------------
{? ~ZM_ZASOB.ZASOBY
|| FUN.info('Nie znaleziono zapisu w bazie zasobów wspólnych.'@)
|| {? ZM_ZASOB.ZASOBY().TYP='P' & POJAZDY.SRSR<>null
   || {? POJAZDY.r_lock(1,1,1)
      || ZASOB_ZM.cntx_psh();
         exec('init','fst');
         SRST.index('SROD');
         SRSR.prefix(); SRST.prefix();
         POJAZDY.SRSR();
         {? SRST.lock(1,1,1)
         || SRST.unlock();
            {? SSTALE.AR & SSTALE.AO
            || SRST.prefix(SRSR.ref(),SSTALE.AR,SSTALE.AO)
            || exec('szuk_okr','okresy',date());
               {? ROZNE.UT_OKROD
               || SRST.prefix(SRSR.ref(),ROZNE.UT_OKROD().ROK,ROZNE.UT_OKROD)
               || SRST.prefix(SRSR.ref(),null,null)
               ?}
            ?};
            {? SRST.first()
            || {? FINFO.ZAS_MT<>null
               || exec('m_drdz','fst',FINFO.ZAS_MT().TYP)
               || FUN.emsg('W podstawowych parametrach środków trwałych nie ustawiono typu dokumentu zmiany\n'
                           'właściwości dla zmian zasobów. Należy uzupełnić parametr w obszarze Ustawienia i parametryzacja.'@)
               ?}
            || FUN.emsg('Nie znaleziono środka trwałego w bieżącym okresie. Środek został dodany\n'
                        'w okresie późniejszym lub został już zlikwidowany w kartotece środków.'
                        'Zmiany dla pojazdów powiązanych z kartoteką środków można wprowadzać tylko'
                        'w okresach w których środek istnieje w kartotece środków.'@)
            ?}
         || FUN.emsg('Środek trwały związany z zasobem został zablokowany przez innego użytkownika.\n'
                     'Wprowadzanie zmian nie jest możliwe'@)
         ?};
         ZASOB_ZM.cntx_pop();
         POJAZDY.r_unlock()
      || FUN.info('Dane zasobu wykorzystywane przez innego uzytkownika.'@)
      ?}
   || {? (ZM_ZASOB.ZASOBY().TYP='P' & POJAZDY.r_lock(1,1,1)) |
         (ZM_ZASOB.ZASOBY().TYP<>'P' & NRKRTSIM.r_lock(1,1,1))
      || ZASOB_ZM.cntx_psh();
         ZASOB_ZM.blank(1);
         exec('lic','zam_okr_rok');
         {? __LIC.find_key('FST')
         || ZASOB_ZM.win_edit('RED')
         || ZASOB_ZM.win_edit('RED_DO')
         ?};
         _ref:=null;
         ZASOB_ZM.index('DISP'); ZASOB_ZM.prefix(ZM_ZASOB.ZASOBY);
         {? ZASOB_ZM.last()
         || {? ZASOB_ZM.DATADO<>date(0,0,0)
            || ZASOB_ZM.DATAOD:=ZASOB_ZM.DATADO+1
            |? ZASOB_ZM.DATAOD<>date(0,0,0)
            || ZASOB_ZM.DATAOD:=ZASOB_ZM.DATAOD+1
            ?};
            ZASOB_ZM.DATADO:=date(0,0,0)
         || ZASOB_ZM.ZASOBY:=ZM_ZASOB.ZASOBY;
            ZASOB_ZM.LIM_RODZ:='B';
            ZASOB_ZM.DATAOD:=date()
         ?};
         ZASOB_ZM.ZM_DATA:=date();
         ZASOB_ZM.ZM_GODZ:=time();
         ZASOB_ZM.USERS:=OPERATOR.USER;
         {? ZASOB_ZM.edit("exec('spr_zm_zasob','zasoby_wspolne')") & ZASOB_ZM.add()
         || exec('zam_poprz','zasoby_wspolne');
            _ref:=ZASOB_ZM.ref();
            ZASOB_ZM.memo_put(,'UWAGI');
            _file:=ZASOB_ZM.bl_file('ZAL');
            {? _file<>''
            || ZASOB_ZM.bl_put('ZAL',_file)
            ?};
            exec('refr_zasob','zasoby_wspolne')
         ?};
         ZASOB_ZM.cntx_pop();
         {? _ref || ZASOB_ZM.seek(_ref) ?};
         {? ZM_ZASOB.ZASOBY().TYP='P'
         || POJAZDY.r_unlock()
         || NRKRTSIM.r_unlock()
         ?}
      || FUN.info('Dane zasobu wykorzystywane przez innego uzytkownika.'@)
      ?}
   ?}
?}


\zm_zasob_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Poprawianie zmian w zasobach
::----------------------------------------------------------------------------------------------------------------------
{? ZASOB_ZM.get()
|| ZASOB_ZM.ZASOBY();
   {? ZASOB_ZM.r_lock(1,1,1) & ZASOBY.r_lock(1,1,1)
   || {? ZASOB_ZM.SRDO_Z<>null
      || exec('init','fst');
         SRST.index('SROD');
         SRSR.prefix(); SRDO.prefix(); SRST.prefix();
         POJAZDY.SRSR(); ZASOB_ZM.SRDO_Z();
         SRST.prefix(SRSR.ref(),SSTALE.AR,SSTALE.AO);
         {? SRST.first()
         || exec('m_drdz','fst')
         || FUN.emsg('Nie znaleziono środka trwałego w bieżącym okresie. Środek został dodany\n'
                     'w okresie późniejszym lub został już zlikwidowany w kartotece środków.'
                     'Zmiany dla pojazdów powiązanych z kartoteką środków można edytować tylko'
                     'w okresach, w których środek istnieje w kartotece środków.'@)
         ?}
      || ZASOB_ZM.win_edit('RED');
         {? ZASOB_ZM.edit("exec('spr_zm_zasob','zasoby_wspolne')") & ZASOB_ZM.put()
         || exec('zam_poprz','zasoby_wspolne');
            ZASOB_ZM.memo_put(,'UWAGI');
            _file:=ZASOB_ZM.bl_file('ZAL');
            {? _file<>''
            || ZASOB_ZM.bl_put('ZAL',_file)
            ?};
            exec('refr_zasob','zasoby_wspolne')
         ?}
      ?};
      unlock_r()
   || FUN.info('Zmiana zasobu lub zasób wykorzystywany przez innego użytkownika.'@);
      unlock_r()
   ?}
|| FUN.info('Nie znaleziono zmiany zasobu.'@)
?}


\zm_zasob_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Usuwanie zmian w zasobach
::----------------------------------------------------------------------------------------------------------------------
{? ZASOB_ZM.get()
|| {? ZASOB_ZM.r_lock(1,1,1)
   || _lock:={? ZASOB_ZM.ZASOBY().TYP='P'
             || POJAZDY.r_lock(1,1,1)
             |? ZASOB_ZM.ZASOBY().TYP='S'
             || NRKRTSIM.r_lock(1,1,1)
             ?};
      {? _lock
      || {? ZASOB_ZM.SRDO_Z<>null
         || ZASOB_ZM.cntx_psh();
            exec('init','fst');
            SRST.index('SROD');
            SRSR.prefix(); SRDO.prefix();
            POJAZDY.SRSR(); ZASOB_ZM.SRDO_Z();
            SRST.prefix(SRSR.ref(),SSTALE.AR,SSTALE.AO);
            {? SRST.first()
            || exec('m_drdz','fst')
            || FUN.emsg('Nie znaleziono środka trwałego w bieżącym okresie.'@)
            ?};
            ZASOB_ZM.cntx_pop()
         || {? FUN.ask('Usunąć zmianę w zasobie?'@)
            || {? ZASOB_ZM.del(,1)
               || exec('zasob_zm_trig','zasoby_wspolne',3);
                  exec('refr_zasob','zasoby_wspolne')
               ?}
            ?}
         ?}
      || FUN.info('Dane zasobu wykorzystywane przez innego uzytkownika.'@)
      ?};
      unlock_r()
   || FUN.info('Zmiana zasobu wykorzystywana przez innego użytkownika.'@)
   ?}
|| FUN.info('Nie znaleziono zmiany zasobu.'@)
?}


\spr_zm_zasob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Sprawdzenie zmiany w zasobie
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
_ref:={? -menu_txt()='popraw' || ZASOB_ZM.ref() || null ?};
_od:=ZASOB_ZM.DATAOD; _do:=ZASOB_ZM.DATADO;
{? ZASOB_ZM.DATAOD=date(0,0,0)
|| FUN.info('Nie wprowadzono daty początkowej obowiązywania zmiany.'@); _zwrot:='DATAOD'
?};
{? _zwrot='' & ZASOB_ZM.DATAOD<>date(0,0,0) & ZASOB_ZM.DATADO<>date(0,0,0) & ZASOB_ZM.DATADO<ZASOB_ZM.DATAOD
|| FUN.info('Nieprawidłowa kolejność dat.'@); _zwrot:='DATAOD'
?};
{? _zwrot=''
|| ZASOB_ZM.cntx_psh(); ZASOB_ZM.index('DISP'); ZASOB_ZM.prefix(ZASOB_ZM.ZASOBY,ZASOB_ZM.DATAOD);
   {? ZASOB_ZM.first() & (_ref=null | ZASOB_ZM.ref()<>_ref)
   || FUN.info('Istnieje zapis o zmianie zasobu na podaną datę od.'@); _zwrot:='DATAOD'
   ?};
   ZASOB_ZM.cntx_pop()
?};
{? _zwrot=''
|| ZASOB_ZM.cntx_psh(); ZASOB_ZM.index('DISP'); ZASOB_ZM.prefix(ZASOB_ZM.ZASOBY);
   {? ZASOB_ZM.find_le(_od) & (_ref=null | ZASOB_ZM.ref()<>_ref) &
      ZASOB_ZM.DATADO<>date(0,0,0) & ZASOB_ZM.DATADO>=_od
   || FUN.info('Istnieje zapis pokrywający się datami.'@); _zwrot:='DATAOD'
   ?};
   ZASOB_ZM.cntx_pop()
?};
{? _zwrot='' & ZASOB_ZM.DATADO=date(0,0,0)
|| ZASOB_ZM.cntx_psh(); ZASOB_ZM.index('DISP'); ZASOB_ZM.prefix(ZASOB_ZM.ZASOBY);
   {? ZASOB_ZM.find_ge(_od+1) & (_ref=null | ZASOB_ZM.ref()<>_ref)
   || FUN.info('Data do nie może być datą pustą. Istnieje kolejny zapis w tabeli zmian.'@); _zwrot:='DATADO'
   ?};
   ZASOB_ZM.cntx_pop()
?};
{? _zwrot='' & ZASOB_ZM.DATADO<>date(0,0,0)
|| ZASOB_ZM.cntx_psh(); ZASOB_ZM.index('DISP'); ZASOB_ZM.prefix(ZASOB_ZM.ZASOBY);
   {? ZASOB_ZM.find_ge(_do) & (_ref=null | ZASOB_ZM.ref()<>_ref) & ZASOB_ZM.DATAOD<=_od
   || FUN.info('Istnieje zapis pokrywający się datami.'@); _zwrot:='DATADO'
   ?};
   ZASOB_ZM.cntx_pop()
?};
{? _zwrot=''
|| {? ZASOB_ZM.LIM_RODZ='W' & ~ZASOB_ZM.LIM_WAL
   || FUN.info('Nie wybrano waluty.'@); _zwrot:='LIM_WAL'
   |? ZASOB_ZM.LIM_RODZ='I' & ~ZASOB_ZM.LIM_JM
   || FUN.info('Nie wybrano jednostki miary.'@); _zwrot:='LIM_JM'
   |? ZASOB_ZM.LIM_RODZ<>'B' & ZASOB_ZM.LIM_WART$2<=0
   || FUN.info('Wartość limitu musi być większa od zera.'@); _zwrot:='LIM_WART'
   ?}
?};
{? _zwrot='DATADO'
|| exec('lic','zam_okr_rok');
   {? __LIC.find_key('FST') || _zwrot:='DATAOD' ?}
?};
_zwrot


\zam_poprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Zamknięcie daty poprzedniego zapisu
::----------------------------------------------------------------------------------------------------------------------
ZASOB_ZM.cntx_psh();
ZASOB_ZM.index('DISP');
ZASOB_ZM.prefix(ZM_ZASOB.ZASOBY);
{? ZASOB_ZM.first()
|| {! |?
      _ref:=ZASOB_ZM.ref();
      ZASOB_ZM.cntx_psh();
      {? ZASOB_ZM.next()
      || _od:=ZASOB_ZM.DATAOD-1
      || _od:=date(0,0,0)
      ?};
      ZASOB_ZM.cntx_pop();
      {? ZASOB_ZM.DATADO=date(0,0,0) | ZASOB_ZM.DATADO<>_od
      || ZASOB_ZM.DATADO:=_od;
         ZASOB_ZM.put()
      ?};
      ZASOB_ZM.next()
   !}
?};
ZASOB_ZM.cntx_pop()


\refr_zasob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Odświeżenie zasobu
::----------------------------------------------------------------------------------------------------------------------
{? ZM_ZASOB.ZASOBY
|| ZASOBY.cntx_psh(); ZASOBY.prefix();
   {? ZM_ZASOB.ZASOBY().TYP='P'
   || grp_disp(POJAZDY,'WER')
   |? ZASOBY.TYP='S'
   || grp_disp(NRKRTSIM,'WER')
   ?};
   ZASOBY.cntx_pop()
?}


\arfr_zasoby
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Po odświeżeniu okienka wertowania zasobów
::   WE: _a - 1 - pojazdy
::            2 - numery kart SIM
::----------------------------------------------------------------------------------------------------------------------
_curtab:=CurTab;
grp_disp(ZASOB_ZM,{? _a=1 || 'WER1' || 'WER2' ?});
ZM_ZASOB.ZASOBY:=null();
{? (_a=1 & POJAZDY.get()) | (_a=2 & NRKRTSIM.get())
|| {? _a=1 & grp_empty(POJAZDY,'WER')
   || ZM_ZASOB.ZASOBY:=null()
   |? _a=2 & grp_empty(NRKRTSIM,'WER')
   || ZM_ZASOB.ZASOBY:=null()
   || ZASOBY.cntx_psh(); ZASOBY.index('ZASOBY');
      {? _a=1
      || ZASOBY.prefix(POJAZDY.ID)
      || ZASOBY.prefix(NRKRTSIM.ID)
      ?};
      {? ZASOBY.first() || ZM_ZASOB.ZASOBY:=ZASOBY.ref() ?};
      ZASOBY.cntx_pop()
   ?}
?};
{? _a=1 | _a=2
|| _gray:='';
   {? ZM_ZASOB.ZASOBY
   || POZF.index('ZASOB1'); POZF.prefix(ZM_ZASOB.ZASOBY)
   || POZF.index('ZASOB'); POZF.prefix(null(),null());
      _gray:='DW:DW'
   ?};
   POZF.actions_grayed(POZF.win_sel('?'),_gray);
   grp_disp(POZF,POZF.win_sel('?'))
?};

CurTab:=_curtab;
1


\bobs_zm_zas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Przed obsługą okienka zmian w zasobach
::   WE: _a - 1 - pojazdy
::            2 - numery kart SIM
::----------------------------------------------------------------------------------------------------------------------
ZASOB_ZM.index('DISP'); _ref:=null;
{? (_a=1 & POJAZDY.get()) | (_a=2 & NRKRTSIM.get())
|| ZASOBY.cntx_psh(); ZASOBY.index('ZASOBY');
   {? _a=1
   || ZASOBY.prefix(POJAZDY.ID)
   || ZASOBY.prefix(NRKRTSIM.ID)
   ?};
   {? ZASOBY.first() || _ref:=ZASOBY.ref() ?};
   ZASOBY.cntx_pop()
?};
_wer:='WER'+$_a;
{? ~_ref
|| ZASOB_ZM.actions_grayed(_wer,'DPU:D')
|| ZASOB_ZM.actions_grayed(_wer,'')
?};
ZASOB_ZM.prefix(_ref);
CurTab:=_a;
1


\zasob_zm_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Triggery dla tabeli ZASOB_ZM
::   WE: 1 - add po
::       2 - put po
::       3 - del po
::----------------------------------------------------------------------------------------------------------------------
{? ZM_ZASOB.ZASOBY
|| _jorg:=_osoba:=null;
   ZASOBY.cntx_psh(); ZASOBY.prefix();
   ZM_ZASOB.ZASOBY();
   ZASOB_ZM.cntx_psh(); ZASOB_ZM.index('DISP'); ZASOB_ZM.prefix(ZASOBY.ref());
   {? ZASOB_ZM.last()
   || _jorg:=ZASOB_ZM.JORG; _osoba:=ZASOB_ZM.OSOBA
   ?};
   ZASOB_ZM.cntx_pop();
   {? ZASOBY.TYP='P'
   || POJAZDY.cntx_psh(); POJAZDY.index('ID'); POJAZDY.prefix(ZASOBY.KARTOTEK);
      {? POJAZDY.first()
      || POJAZDY.OSOBA:=_osoba; POJAZDY.JORG:=_jorg; POJAZDY.put()
      ?};
      POJAZDY.cntx_pop()
   |? ZASOBY.TYP='S'
   || NRKRTSIM.cntx_psh(); NRKRTSIM.index('ID'); NRKRTSIM.prefix(ZASOBY.KARTOTEK);
      {? NRKRTSIM.first()
      || NRKRTSIM.OSOBA:=_osoba; NRKRTSIM.JORG:=_jorg; NRKRTSIM.put()
      ?};
      NRKRTSIM.cntx_pop()
   ?};
   ZASOBY.cntx_pop()
?};
~~


\projekty_jorg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Jednostka organizacyjna zmiany w zasobie - ustawianie obsługi
::----------------------------------------------------------------------------------------------------------------------
exec('set_fml','#field',UD_POM,'OKOSZ',
        "UD_POM.OKOSZ:={? ZASOB_ZM.JORG
                       || ZASOB_ZM.JORG().SYMBOL
                       || ''
                       ?}; ~~",
        "1",
        "_typ:=_sch:=null;
         UD_TYP.index('SYMBOL'); UD_TYP.prefix('PODZORG',);
         {? UD_TYP.first()
         || _typ:=UD_TYP.ref();
            UD_SCH.index('SYMBOL'); UD_SCH.prefix(UD_TYP.ref(),'STRORG',);
            {? UD_SCH.first() || _sch:=UD_SCH.ref() ?}
         ?};
         exec('ud_def_symbol_f3','schemat',_typ,_sch)",
        "{? fld()='' || ZASOB_ZM.JORG:=null; return(1) ?};
         _sch:=null;
         {? PROJEKTY.T().SJO
         || _sch:=PROJEKTY.T().SJO
         || UD_TYP.index('SYMBOL'); UD_TYP.prefix('PODZORG',);
            {? UD_TYP.first()
            || UD_SCH.index('SYMBOL'); UD_SCH.prefix(UD_TYP.ref(),'STRORG',);
               {? UD_SCH.first() || _sch:=UD_SCH.ref() ?}
            ?}
         ?};
         _ref:=exec('ud_def_symbol_ae','schemat',_sch);
         {? _ref
         || ZASOB_ZM.JORG:=_ref;
            fld(ZASOB_ZM.JORG().SYMBOL)
         ?};
         1
        "
     )


\dsp_lim_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Na wyświetl dla pola ZASOB_ZM.LIM_RODZ
::----------------------------------------------------------------------------------------------------------------------
{? ZASOB_ZM.LIM_RODZ='B' | ZASOB_ZM.LIM_RODZ='P'
|| {? cur_win='RED_L_ZS'
   || SRDO.efld_opt('RED_L_ZS','mark=0,enable=0',ZASOB_ZM,'LIM_WAL');
      SRDO.efld_opt('RED_L_ZS','mark=0,enable=0',ZASOB_ZM,'LIM_JM')
   || ZASOB_ZM.efld_opt(ZASOB_ZM.win_edit('?'),'mark=0,enable=0',,'LIM_WAL');
      ZASOB_ZM.efld_opt(ZASOB_ZM.win_edit('?'),'mark=0,enable=0',,'LIM_JM')
   ?}
|? ZASOB_ZM.LIM_RODZ='W'
|| {? cur_win='RED_L_ZS'
   || SRDO.efld_opt('RED_L_ZS','mark=1,enable=1',ZASOB_ZM,'LIM_WAL');
      SRDO.efld_opt('RED_L_ZS','mark=0,enable=0',ZASOB_ZM,'LIM_JM')
   || ZASOB_ZM.efld_opt(ZASOB_ZM.win_edit('?'),'mark=1,enable=1',,'LIM_WAL');
      ZASOB_ZM.efld_opt(ZASOB_ZM.win_edit('?'),'mark=0,enable=0',,'LIM_JM')
   ?}
|? ZASOB_ZM.LIM_RODZ='I'
|| {? cur_win='RED_L_ZS'
   || SRDO.efld_opt('RED_L_ZS','mark=0,enable=0',ZASOB_ZM,'LIM_WAL');
      SRDO.efld_opt('RED_L_ZS','mark=1,enable=1',ZASOB_ZM,'LIM_JM')
   || ZASOB_ZM.efld_opt(ZASOB_ZM.win_edit('?'),'mark=0,enable=0',,'LIM_WAL');
      ZASOB_ZM.efld_opt(ZASOB_ZM.win_edit('?'),'mark=1,enable=1',,'LIM_JM')
   ?}
?};
{? ZASOB_ZM.LIM_RODZ='B'
|| {? cur_win='RED_L_ZS'
   || SRDO.efld_opt('RED_L_ZS','mark=0,enable=0',ZASOB_ZM,'LIM_WART')
   || ZASOB_ZM.efld_opt(ZASOB_ZM.win_edit('?'),'mark=0,enable=0',,'LIM_WART')
   ?}
|| {? cur_win='RED_L_ZS'
   || SRDO.efld_opt('RED_L_ZS','mark=1,enable=1',ZASOB_ZM,'LIM_WART')
   || ZASOB_ZM.efld_opt(ZASOB_ZM.win_edit('?'),'mark=1,enable=1',,'LIM_WART')
   ?}
?};
1


\ae_lim_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Po redakcji pola ZASOB_ZM.LIM_RODZ
::----------------------------------------------------------------------------------------------------------------------
exec('dsp_lim_rodz','zasoby_wspolne');
{? ZASOB_ZM.LIM_RODZ='B' | ZASOB_ZM.LIM_RODZ='P'
|| ZASOB_ZM.LIM_WAL:=ZASOB_ZM.LIM_JM:=null; ZASOB_ZM.LIM_WART:=0
|? ZASOB_ZM.LIM_RODZ='W'
|| ZASOB_ZM.LIM_JM:=null
|? ZASOB_ZM.LIM_RODZ='I'
|| ZASOB_ZM.LIM_WAL:=null
?};
1


\wal_zas_edi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Przed redakcją pola ZASOB_ZM.LIM_WAL
::----------------------------------------------------------------------------------------------------------------------
{? FINFO.SLWAL().SLU=null
|| FUN.info('Nie ustalono słownika walut.'@); 0
|| SLO.index('SL');
   SLO.prefix(SLU.ref());
   exec('slu_okn','slo_slu');
   1
?}


\del_zasob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Usuwanie powiązanego zasobu
::   WE: _a - 1 - pojazdy
::            2 - karty SIM
::   WY: 1/0 - czy operacja się powiodła
::----------------------------------------------------------------------------------------------------------------------
_delr:=1;
ZASOBY.cntx_psh(); ZASOBY.index('ZASOBY');
{? _a=1
|| ZASOBY.prefix(POJAZDY.ID)
|| ZASOBY.prefix(NRKRTSIM.ID)
?};
{? ZASOBY.first()
|| {? ZASOBY.count()>0
   || ZASOB_ZM.cntx_psh(); ZASOB_ZM.index('DISP'); ZASOB_ZM.prefix(ZASOBY.ref());
      {? ZASOB_ZM.size()=ZASOBY.count()
      || {! |?
            _delr:=ZASOB_ZM.del(,1);
            {? _delr=1 || exec('zasob_zm_trig','zasoby_wspolne',3); 0 |? _delr=0 || undo(); 0 || 1 ?}
         !};
         _delr:=ZASOBY.del(,1);
         {? _delr=0 || undo() ?}
      || _delr:=0
      ?};
      ZASOB_ZM.cntx_pop()
   || _delr:=ZASOBY.del(,1);
      {? _delr=0 || undo() ?}
   ?}
?};
ZASOBY.cntx_pop();
_delr


\normy_emisji
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Dołączanie norm emisji spalin
::----------------------------------------------------------------------------------------------------------------------
PAL_NORM.cntx_psh(); PAL_NORM.index('UNIK'); PAL_NORM.prefix();
{? ~PAL_NORM.find_key('EURO 1')
|| PAL_NORM.NORMA:='EURO 1';
   PAL_NORM.OPIS:='Obowiązywała od 1993 roku. Dyrektywa 91/441/EC [11] dla samochodów osobowych oraz dla osobowych.';
   PAL_NORM.OPIS+=' i lekkich ciężarówek - 93/59/EEC.';
   PAL_NORM.add(1)
?};
{? ~PAL_NORM.find_key('EURO 2')
|| PAL_NORM.NORMA:='EURO 2';
   PAL_NORM.OPIS:='Obowiązywała od 1996 roku. Dyrektywa 94/12/EC (& 96/69/EC) dla samochodów osobowych.';
   PAL_NORM.add(1)
?};
{? ~PAL_NORM.find_key('EURO 3')
|| PAL_NORM.NORMA:='EURO 3';
   PAL_NORM.OPIS:='Obowiązywała od 2000 roku. Dyrektywa 98/69/EC [12] dla wszystkich pojazdów.';
   PAL_NORM.add(1)
?};
{? ~PAL_NORM.find_key('EURO 4')
|| PAL_NORM.NORMA:='EURO 4';
   PAL_NORM.OPIS:='Obowiązywała od 2006 roku. Dyrektywa 98/69/EC (& 2002/80/EC) dla wszystkich pojazdów.';
   PAL_NORM.add(1)
?};
{? ~PAL_NORM.find_key('EURO 5')
|| PAL_NORM.NORMA:='EURO 5';
   PAL_NORM.OPIS:='Obowiązywała od 2009 roku.';
   PAL_NORM.OPIS+=' Rozporządzenie 2007/715/EC[13] dla lekkich samochodów osobowych i użytkowych.';
   PAL_NORM.add(1)
?};
{? ~PAL_NORM.find_key('EURO 6')
|| PAL_NORM.NORMA:='EURO 6';
   PAL_NORM.OPIS:='Obowiązuje od 2014 roku. Rozporządzenie 2007/715/EC[13] dla ciężkich pojazdów samochodowych.';
   PAL_NORM.add(1)
?};
PAL_NORM.cntx_pop()


\rodzaje_paliw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Dołączanie rodzajów paliw
::----------------------------------------------------------------------------------------------------------------------
RODZPAL.cntx_psh(); RODZPAL.index('KOD'); RODZPAL.prefix();
{? ~RODZPAL.find_key('CNG')
|| RODZPAL.KOD:='CNG'; RODZPAL.NAZWA:='Gaz ziemny'; RODZPAL.add(1)
?};
{? ~RODZPAL.find_key('LPG')
|| RODZPAL.KOD:='LPG'; RODZPAL.NAZWA:='Propan - butan'; RODZPAL.add(1)
?};
{? ~RODZPAL.find_key('NAFTA')
|| RODZPAL.KOD:='NAFTA'; RODZPAL.NAZWA:='Nafta'; RODZPAL.add(1)
?};
{? ~RODZPAL.find_key('E85')
|| RODZPAL.KOD:='E85'; RODZPAL.NAZWA:='Mieszanina bioetanolu i benzyny'; RODZPAL.add(1)
?};
{? ~RODZPAL.find_key('ON')
|| RODZPAL.KOD:='ON'; RODZPAL.NAZWA:='Olej napędowy'; RODZPAL.add(1)
?};
{? ~RODZPAL.find_key('Pb95')
|| RODZPAL.KOD:='Pb95'; RODZPAL.NAZWA:='Benzyna bezołowiowa 95'; RODZPAL.add(1)
?};
{? ~RODZPAL.find_key('Pb98')
|| RODZPAL.KOD:='Pb98'; RODZPAL.NAZWA:='Benzyna bezołowiowa 98'; RODZPAL.add(1)
?};
RODZPAL.cntx_pop()


\rkprz_zasob_zm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Rekord przed w tabeli zmian w zasobach
::----------------------------------------------------------------------------------------------------------------------
ZM_ZASOB.RODZ_LIM:={? ZASOB_ZM.LIM_RODZ='B'
                   || 'Brak'
                   |? ZASOB_ZM.LIM_RODZ='P'
                   || 'Procentowy'
                   |? ZASOB_ZM.LIM_RODZ='W'
                   || 'Wartościowy'
                   |? ZASOB_ZM.LIM_RODZ='I'
                   || 'Ilościowy'
                   ?};
0


\an_zas_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Dołączanie nagłówka analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
AN_ZAS.blank(1);
AN_ZAS.FIRMA:=REF.FIRMA;
AN_ZAS.A:='N';
{? AN_ZAS.edit("exec('spr_an_zas','zasoby_wspolne')") || AN_ZAS.add() ?}


\an_zas_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Poprawianie nagłówka analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
{? AN_ZAS.get()
|| {? AN_ZAS.r_lock(1,1,1)
   || {? AN_ZAS.A='T'
      || unlock_r();
         FUN.info('Definicja analizy zasobów jest aktywna.'@)
      || {? AN_ZAS.edit("exec('spr_an_zas','zasoby_wspolne')")
         || AN_ZAS.put()
         ?};
         unlock_r()
      ?}
   || FUN.info('Definicja analizy zasobów wykorzystywana przez innego użytkownika.'@)
   ?}
|| FUN.info('Nie znaleziono definicji analizy zasobów.'@)
?}


\an_zas_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Usuwanie nagłówka definicji analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
{? AN_ZAS.get()
|| {? AN_ZAS.r_lock(1,1,1)
   || {? AN_ZAS.A='T'
      || unlock_r();
         FUN.info('Definicja analizy zasobów jest aktywna.'@)
      || {? FUN.ask('Usunąć definicję analizy zasobów?'@)
         || do();
            AN_ZASP.index('DISP'); AN_ZASP.prefix(AN_ZAS.ref());
            {? AN_ZASP.first()
            || {! |?
                  _delr:=AN_ZASP.del(,1);
                  {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
               !}
            ?};
            AN_ZASW.index('UNIK'); AN_ZASW.prefix(AN_ZAS.ref());
            {? AN_ZASW.first()
            || {! |?
                  _delr:=AN_ZASW.del(,1);
                  {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
               !}
            ?};
            _delr:=AN_ZAS.del(,1);
            {? _delr=0 || undo() ?};
            end()
         || unlock_r()
         ?}
      ?}
   || FUN.info('Definicja analizy zasobów wykorzystywana przez innego użytkownika.'@)
   ?}
|| FUN.info('Nie znaleziono definicji analizy zasobów.'@)
?}


\spr_an_zas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Sprawdzanie parametrów definicji analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
_ref:={? -menu_txt()='popraw' || AN_ZAS.ref() || null ?};
{? AN_ZAS.NAZ=''
|| FUN.info('Nie wprowadzono nazwy definicji analizy zasobów .'@); _zwrot:='NAZ'
?};
{? _zwrot=''
|| AN_ZAS.cntx_psh(); AN_ZAS.index('DISP'); AN_ZAS.prefix(AN_ZAS.FIRMA,AN_ZAS.NAZ,);
   {? AN_ZAS.first() & (_ref=null | AN_ZAS.ref()<>_ref)
   || FUN.info('Istnieje definicja analizy zasobów o podanej nazwie.'@); _zwrot:='NAZ'
   ?};
   AN_ZAS.cntx_pop()
?};
_zwrot


\rkprz_an_zas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Rekord przed dla nagłówka definicji analiz zasobów
::----------------------------------------------------------------------------------------------------------------------
{? AN_ZAS.A='T'
|| AN_ZAS.actions_grayed('WER','APU')
|| AN_ZAS.actions_grayed('WER','E')
?};
ZM_ZASOB.RODZZAS:={? AN_ZAS.RODZZAS='P'
                  || 'Pojazdy'
                  |? AN_ZAS.RODZZAS='S'
                  || 'Karty SIM'
                  || ''
                  ?};
0


\bed_anzas_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Przed redakcją pól z formułami w nagłówku definicji analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
ZMIENNE.RODZAJ:='v'; FORMULA.win_dict('FORMULY');
1


\dsp_rodz_zwr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Na wyświetl dla pola AN_ZASP.RODZ_ZWR
::----------------------------------------------------------------------------------------------------------------------
{? AN_ZASP.RODZ_ZWR=1
|| AN_ZASP.efld_opt(AN_ZASP.win_edit('?'),'mark=0,enable=0',,'POTR')
|| AN_ZASP.efld_opt(AN_ZASP.win_edit('?'),'mark=0,enable=1',,'POTR')
?};
{? AN_ZASP.RODZ_ZWR<>3
|| AN_ZASP.efld_opt(AN_ZASP.win_edit('?'),'mark=0,enable=0',,'LICZ')
|| AN_ZASP.efld_opt(AN_ZASP.win_edit('?'),'mark=1,enable=1',,'LICZ')
?};
1


\ae_rodz_zwr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Po redakcji pola AN_ZASP.RODZ_ZWR
::----------------------------------------------------------------------------------------------------------------------
exec('dsp_rodz_zwr','zasoby_wspolne');
{? AN_ZASP.RODZ_ZWR=1 || AN_ZASP.POTR:='N' ?};
{? AN_ZASP.RODZ_ZWR=3
|| {? AN_ZASP.LICZ=0 || AN_ZASP.LICZ:=2 ?}
|| AN_ZASP.LICZ:=0
?};
1


\ae_licz_an_zasp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Po redakcji pola AN_ZASP.LICZ
::----------------------------------------------------------------------------------------------------------------------
{? AN_ZASP.RODZ_ZWR=3 & AN_ZASP.LICZ<0
|| FUN.info('Liczba miejsc po przecinku musi być większa od zera.'@); 0
|| 1
?}


\ae_szer_an_zasp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Po redakcji pola AN_ZASP.SZER
::----------------------------------------------------------------------------------------------------------------------
{? AN_ZASP.SZER<=0 | AN_ZASP.SZER>30
|| FUN.info('Szerokość kolumny musi być z przedziału 1-30'@); 0
|| 1
?}


\an_zasp_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Dołączanie kolumny definicji analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
{? AN_ZASP.get()
|| _lp:=AN_ZASP.LP; _ref:=AN_ZASP.ref()
|| _lp:=1; _ref:=null
?};
AN_ZASP.blank(1);
AN_ZASP.NAG:=AN_ZAS.ref();
AN_ZASP.A:='T'; AN_ZASP.POTR:='N';
AN_ZASP.LP:=_lp;
{? AN_ZASP.edit("exec('spr_an_zasp','zasoby_wspolne')") & AN_ZASP.add()
|| exec('an_zasp_przenumeruj','zasoby_wspolne',_lp,AN_ZASP.ref())
?}


\an_zasp_przenumeruj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Przenumerowanie rekordów w AN_ZASP
::   WE: _a - numer początkowy
::       _b - ref, którego nie zmieniać
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| AN_ZASP.cntx_psh(); AN_ZASP.index('DISP'); AN_ZASP.prefix(AN_ZAS.ref());
   {? AN_ZASP.last()
   || {! |?
         {? AN_ZASP.LP<_a
         || 0
         || {? ~_b | (_b & AN_ZASP.ref()<>_b)
            || AN_ZASP.LP+=1; AN_ZASP.put()
            ?};
            AN_ZASP.prev()
         ?}
      !}
   ?};
   AN_ZASP.cntx_pop()
?}


\an_zasp_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Poprawianie definicji kolumny analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
{? AN_ZAS.get()
|| {? AN_ZASP.get()
   || {? AN_ZASP.r_lock(1,1,1)
      || {? AN_ZASP.edit("exec('spr_an_zasp','zasoby_wspolne')")
         || AN_ZASP.put()
         ?};
         unlock_r()
      || FUN.info('Kolumna definicji analizy zasobów wykorzystywana przez innego użytkownika.'@)
      ?}
   || FUN.info('Nie znaleziono kolumny definicji analizy zasobów.'@)
   ?}
|| FUN.info('Nie znaleziono definicji analizy zasobów.'@)
?}


\an_zasp_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Poprawianie kolumny definicji analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
{? AN_ZAS.get()
|| {? AN_ZASP.get()
   || {? AN_ZASP.r_lock(1,1,1)
      || {? FUN.ask('Usunąć kolumnę definicji analizy zasobów?'@) & AN_ZASP.del(,1)
         || _lp:=1;
            AN_ZASP.cntx_psh(); AN_ZASP.index('DISP'); AN_ZASP.prefix(AN_ZAS.ref());
            {? AN_ZASP.first()
            || {! |?
                  AN_ZASP.LP:=+_lp; AN_ZASP.put(); _lp+=1;
                  AN_ZASP.next()
               !}
            ?};
            AN_ZASP.cntx_pop()
         || unlock_r()
         ?}
      || FUN.info('Kolumna definicji analizy zasobów wykorzystywana przez innego użytkownika.'@)
      ?}
   || FUN.info('Nie znaleziono kolumny definicji analizy zasobów.'@)
   ?}
|| FUN.info('Nie znaleziono definicji analizy zasobów.'@)
?}


\an_zasp_dza
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Dołączanie kolumny definicji analizy zasobów - dołącz za
::----------------------------------------------------------------------------------------------------------------------
_lp:=AN_ZASP.LP+1;
AN_ZASP.blank(1);
AN_ZASP.NAG:=AN_ZAS.ref();
AN_ZASP.A:='T'; AN_ZASP.POTR:='N';
AN_ZASP.LP:=_lp;
{? AN_ZASP.edit("exec('spr_an_zasp','zasoby_wspolne')") || AN_ZASP.add() ?}


\spr_an_zasp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Sprawdzanie parametrów kolumny definicji analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
_ref:={? -menu_txt()='popraw' || AN_ZASP.ref() || null ?};
{? ~AN_ZASP.FORMULA || FUN.info('Nie wybrano formuły na wartość kolumny.'@); _zwrot:='FORMULA' ?};
{? _zwrot='' & AN_ZASP.OPISKOL=''
|| FUN.info('Nie wprowadzono opisu kolumny.'@); _zwrot:='OPISKOL'
?};
{? _zwrot='' & (AN_ZASP.SZER<=0 | AN_ZASP.SZER>30)
|| FUN.info('Szerokość kolumny musi być z przedziału 1-30'@); _zwrot:='SZER'
?};
{? _zwrot='' & AN_ZASP.RODZ_ZWR=3 & AN_ZASP.LICZ<0
|| FUN.info('Liczba miejsc po przecinku musi być większa od zera.'@); _zwrot:='LICZ'
?};
_zwrot


\rkprz_an_zasp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Rekord przed dla pozycji definicji analiz zasobów
::----------------------------------------------------------------------------------------------------------------------
ZM_ZASOB.RODZ_ZWR:={? AN_ZASP.RODZ_ZWR=1
                   || 'Tekst'
                   |? AN_ZASP.RODZ_ZWR=2
                   || 'Liczba całkowita'
                   || 'Liczba rzeczywista'
                   ?};
0


\rpo_an_zasw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Rekord po dla wydruków definicji analiz zasobów
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(AN_ZASW,,'OPIS','WYDRUK');
{? _zwrot=''
|| {? __CHK.index(AN_ZASW,-menu_txt(,)='popraw')<>'' || _zwrot:='OPIS' ?}
?};
_zwrot


\arfr_an_zas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Po odświeżeniu w okienku grupowym definicji analiz zasobów
::----------------------------------------------------------------------------------------------------------------------
grp_disp(AN_ZASP,'WER');
grp_disp(AN_ZASW,'WER');
1


\bobs_an_zasp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Przed obsługą dla tabeli AN_ZASP
::----------------------------------------------------------------------------------------------------------------------
AN_ZASP.index('DISP');
{? ~AN_ZAS.get() | AN_ZAS.A='T'
|| AN_ZASP.actions_grayed('WER','DPU:D')
|| AN_ZASP.actions_grayed('WER','')
?};
{? ~AN_ZAS.get()
|| AN_ZASP.prefix(null)
|| AN_ZASP.prefix(AN_ZAS.ref())
?};
1


\bobs_an_zasw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Przed obsługą dla tabeli AN_ZASW
::----------------------------------------------------------------------------------------------------------------------
AN_ZASW.index('UNIK');
{? ~AN_ZAS.get() | AN_ZAS.A='T'
|| AN_ZASW.actions_grayed('WER','DPU:D')
|| AN_ZASW.actions_grayed('WER','')
?};
{? ~AN_ZAS.get()
|| AN_ZASW.prefix(null)
|| AN_ZASW.prefix(AN_ZAS.ref())
?};
1


\an_zas_up
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KS [22.26]
:: OPIS: Schemat podziałów dla typów dokumentów w obiegu
::----------------------------------------------------------------------------------------------------------------------
exec('zmien_lpa','#dragdrop','LP','DISP',,,'U')


\an_zas_down
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KS [22.26]
:: OPIS: Schemat podziałów dla typów dokumentów w obiegu
::----------------------------------------------------------------------------------------------------------------------
exec('zmien_lpa','#dragdrop','LP','DISP',,,'D')


\an_zas_number
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KS [22.26]
:: OPIS: Schemat podziałów dla typów dokumentów w obiegu
::----------------------------------------------------------------------------------------------------------------------
exec('zmien_lpa','#dragdrop','LP','DISP',,,'N')


\an_zas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Przeglądanie definicji analiz zasobów
::----------------------------------------------------------------------------------------------------------------------
AN_ZASP.dnd_sel('WER',,'records.AN_ZASP',"AN_ZASP.cntx_psh();
                                          _ref:=dnd_info('dest_record');
                                          {? AN_ZASP.seek(_ref)
                                          || exec('zmien_lp','#dragdrop','LP','DISP')
                                          ?};
                                          AN_ZASP.cntx_pop()");
AN_ZAS.cntx_psh(); AN_ZAS.index('DISP'); AN_ZAS.prefix(REF.FIRMA);
{? ~AN_ZAS.first()
|| AN_ZASP.actions_grayed('WER','DPU:D');
   AN_ZASW.actions_grayed('WER','dpu:d')
|| AN_ZASP.actions_grayed('WER','');
   AN_ZASW.actions_grayed('WER','')
?};
AN_ZAS.win_sel('WER_GR'); AN_ZAS.win_edit('RED'); AN_ZAS.select();
AN_ZASP.win_edit('RED');
AN_ZAS.cntx_pop()


\an_zas_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Ref analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
AN_ZAS.ref()


\an_zas_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Aktywacja definicji analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
{? AN_ZAS.get()
|| {? AN_ZAS.r_lock(1,1,1)
   || {? FUN.ask('Aktywować definicję analizy zasobów?'@)
      || AN_ZAS.A:='T'; AN_ZAS.put()
      ?};
      unlock_r()
   || FUN.info('Definicja analizy zasobów wykorzystywana przez innego użytkownika.'@)
   ?}
|| FUN.info('Nie znaleziono definicji analizy zasobów.'@)
?}


\an_zas_deakt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Dezaktywacja definicji analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
{? AN_ZAS.get()
|| {? AN_ZAS.r_lock(1,1,1)
   || {? FUN.ask('Dezaktywować definicję analizy zasobów?'@)
      || AN_ZAS.A:='N'; AN_ZAS.put()
      ?};
      unlock_r()
   || FUN.info('Definicja analizy zasobów wykorzystywana przez innego użytkownika.'@)
   ?}
|| FUN.info('Nie znaleziono definicji analizy zasobów.'@)
?}


\zasoby_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Parametry pracy dla zasobów
::----------------------------------------------------------------------------------------------------------------------
_rok:=SSTALE.AR;
_okr:=SSTALE.AO;
_odd:=OPERATOR.DEPT;
_wal:=SSTALE.WAL;
{? __PARSES.editDom('FKS','FST')
|| {? _rok<>SSTALE.AR | _odd<>OPERATOR.DEPT | _okr<>SSTALE.AO | _wal<>SSTALE.WAL
   || AreaTitle.setTitle();
      exec('set_title','zasoby_wspolne');
      1
   ?}
?}


\set_title
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Ustawia tytuł w zasobach
::----------------------------------------------------------------------------------------------------------------------
::POJAZDY.hdr_sel(); POJAZDY.hdr_sel(' — %1'[SSTALE.AO().NAZ+' '+SSTALE.AO().ROK().NAZ]);
POZF.hdr_sel(); POZF.hdr_sel(' — %1'[SSTALE.AO().NAZ+' '+SSTALE.AO().ROK().NAZ]);
1


\bl_rodzzas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Wartość początkowa pola AN_ZAS.RODZZAS
::----------------------------------------------------------------------------------------------------------------------
ZM_ZASOB.KODRODZZ


\bv_zasoby
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Przed odświeżeniem zakładek dotyczących zasobów
::   WE: _a - nr zakładki
::----------------------------------------------------------------------------------------------------------------------
:: UWAGA: zgodnie z formułą \zws_zas/zws.fml
:: Górny panel (panel0) parametr _a tej formuły:
:: 1. zakładka panel0 - Pojazdy
:: 2. zakładka penel0 - Numery kart SIM
:: 3. zakładka panel0 - Zasoby remontowe (widok płaski z filtrami)
:: 4. zakładka panel0 - Zasoby remontowe (widok w drzewie)
:: Dolny panel (bottom):
:: 1. zakładka bottom - Zmiany w zasobach (dla pojazdów)
:: 2. zakładka bottom - Zmiany w zasobach (dla numerów kart SIM)
:: 3. zakładka bottom - Pozycja faktur (dla pojazdów i numerów kart SIM)
:: 4. zakładka bottom - Zgłoszenia remontowe (dla zasobów remontowych)
:: 5. zakładka bottom - Planowane zdarzenia - harmonogram (dla zasobów remontowych)
:: 6. zakładka bottom - Planowane zdarzenia - przebiegi (dla zasobów remontowych)
:: 7. zakładka bottom - Osoby użytkujące zasób (dla zasobów remontowych)
:: 8. zakładka bottom - Gwarancje (dla zasobów remontowych)
:: 9. zakładka bottom - Przebiegi (dla zasobów remontowych)
:: 10. zakładka bottom - Załączniki (dla zasobów remontowych)
:: 11. zakładka bottom - Problemy produkcyjne (dla zasobów remontowych)
::----------------------------------------------------------------------------------------------------------------------
CurTab:=_a;

{? CurTab=1 | CurTab=2
|| {? CurTab=1
   || tab_hide(2,1,'bottom');
      tab_show(1,'bottom')
   || tab_hide(1,1,'bottom');
      tab_show(2,'bottom')
   ?};
   tab_hide(4,1,'bottom');
   tab_hide(5,1,'bottom');
   tab_hide(6,1,'bottom');
   tab_hide(7,1,'bottom');
   tab_hide(8,1,'bottom');
   tab_hide(9,1,'bottom');
   tab_hide(10,1,'bottom');
   tab_hide(11,1,'bottom');
   tab_show(3,'bottom')
|? CurTab=3
|| tab_hide(1,1,'bottom');
   tab_hide(2,1,'bottom');
   tab_hide(3,1,'bottom');
   tab_show(4,'bottom');
   tab_show(5,'bottom');
   tab_show(6,'bottom');
   tab_show(7,'bottom');
   tab_show(8,'bottom');
   tab_show(9,'bottom');
   tab_show(10,'bottom');
   tab_show(11,'bottom');
   ~~
?};
~~


\bl_pf_zasob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Wartość poczatkowa POZF.ZASOB
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid') <> ''
|| null
|| ZM_ZASOB.ZASOBY
?}


\use_pozan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Ustawianie maski tabeli POZAN na podstawie aktualnego refa tabeli ANZASPE
::----------------------------------------------------------------------------------------------------------------------
_m:=$(#ANZASPE.ref()); _m:=('000'+_m)+4;
POZAN.use('poza'+_m)


\zasob_zm_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Formuła na wyświetl dla tabeli ZASOB_ZM - zmiany w zasobach
::----------------------------------------------------------------------------------------------------------------------
{? ZASOB_ZM.SRDO_Z<>null
|| SRDO.cntx_psh();
   {? SRDO.name()<>'srdor'+REF.FIRMA().SYMBOL || SRDO.use('srdor'+REF.FIRMA().SYMBOL) ?};
   SRDO.prefix();
   ZASOB_ZM.SRDO_Z();
   SRDO.win_edit('RED_L_ZS');
   {? SRDO.JORG<>null
   || EDIT_ES.JORG:=SRDO.JORG().SYMBOL
   || EDIT_ES.JORG:=''
   ?};

   SRDO.display();
   SRDO.cntx_pop()
|| ZASOB_ZM.win_edit('RED');
   ZASOB_ZM.display()
?}


\zasob_zm_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Wyświetlanie załącznika podpiętego do zmiany dla zasobu
::----------------------------------------------------------------------------------------------------------------------
{? ZASOB_ZM.ZAL
|| exec('bl_view','#blob',ZASOB_ZM,'ZAL')
|| FUN.emsg('Bieżący zapis zmiany nie posiada podpiętego załącznika.'@)
?}


\zsb_blank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [1700]
:: OPIS: Utworzenie nowego rekordu zmian w zasobie
::   WE: _a = SRSR.ref() - wskazanie na środek trwały
::----------------------------------------------------------------------------------------------------------------------
ZASOB_ZM.blank(1);
_zsb:=exec('find_zas_poj','edi_wspolne',_a);
ZASOB_ZM.ZASOBY:=_zsb;
_rodz:=''; _jm:=null; _wal:=null; _wart:=0;
ZASOB_ZM.cntx_psh();
ZASOB_ZM.index('DISP');
ZASOB_ZM.prefix(_zsb);
{? ZASOB_ZM.last()
|| _loop:=1;
   {! |?
      {? ZASOB_ZM.DATAOD<=SRDO.DW
      || _loop:=0;
         _rodz:=ZASOB_ZM.LIM_RODZ;
         _jm:=ZASOB_ZM.LIM_JM;
         _wal:=ZASOB_ZM.LIM_WAL;
         _wart:=ZASOB_ZM.LIM_WART
      ?};
      _loop & ZASOB_ZM.prev()
   !}
?};
ZASOB_ZM.cntx_pop();
{? _rodz<>'' || ZASOB_ZM.LIM_RODZ:=_rodz || ZASOB_ZM.LIM_RODZ:='B' ?};
ZASOB_ZM.LIM_JM:=_jm;
ZASOB_ZM.LIM_WAL:=_wal;
{? ZASOB_ZM.LIM_RODZ<>'B' || ZASOB_ZM.LIM_WART:=_wart || ZASOB_ZM.LIM_WART:=0 ?}


\anal_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Uaktualnianie wartości podsumowania analizy
::----------------------------------------------------------------------------------------------------------------------
AN_ZASP.cntx_psh(); AN_ZASP.index('DISP1'); AN_ZASP.prefix(ANZASPE.DEFAN,'T');
{? AN_ZASP.first()
|| {! |?
      {? AN_ZASP.RODZ_ZWR<>1
      || _wart:='TAB_PODS.KOL'+form(AN_ZASP.LP,-2)+'+=TMPANZAS.KOL'+form(AN_ZASP.LP,-2);
         ($_wart)()
      ?};
      AN_ZASP.next()
   !};
   TAB_PODS.put()
?};
AN_ZASP.cntx_pop()


\anal_pods_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Utworzenie tabelki z podsumowaniem analizy
::----------------------------------------------------------------------------------------------------------------------
AN_ZASP.cntx_psh(); AN_ZASP.index('DISP1'); AN_ZASP.prefix(ANZASPE.DEFAN,'T');
{? AN_ZASP.first()
|| _czy_war:=0;
   {! |?
      _czy_war:=AN_ZASP.RODZ_ZWR<>1;
      ~_czy_war & AN_ZASP.next()
   !};
   {? _czy_war
   || _tab:='tab_tmp(1';
      {! |?
         {? AN_ZASP.RODZ_ZWR<>1
         || _tab+=',\'KOL'+form(AN_ZASP.LP,-2)+'\',';
            _tab+={? AN_ZASP.RODZ_ZWR=2
                  || '\'INTEGER\','
                  || '\'REAL\','
                  ?};
            _tab+='\''+AN_ZASP.OPISKOL+'\''
         ?};
         AN_ZASP.next()
      !};
      _tab+=')';
      TAB_PODS:=($_tab)();
      OKNANZAS:=TAB_PODS.mk_edit('Podsumowanie analizy'@);
      {? AN_ZASP.first()
      || {! |?
            {? AN_ZASP.RODZ_ZWR<>1
            || _poleokn:='TAB_PODS.win_efld(OKNANZAS,,';
               _poleokn+='\'KOL'+form(AN_ZASP.LP,-2)+'\',,,40,';
               _poleokn+={? AN_ZASP.RODZ_ZWR=3 || $AN_ZASP.LICZ || '' ?}+',,';
               _poleokn+='\''+AN_ZASP.OPISKOL+'\',,\''+AN_ZASP.OPISKOL+'\')';
               ($_poleokn)()
            ?};
            AN_ZASP.next()
         !}
      ?};
      TAB_PODS.win_edit(OKNANZAS);
      {? ~TAB_PODS.first() || TAB_PODS.blank(1); TAB_PODS.add() ?}
   || FUN.info('Analiza nie posiada żadnych kolumn wartościowych.'@)
   ?}
?};
AN_ZASP.cntx_pop();
1


\del_anal_pods
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Skasowanie tabelki z podsumowaniem analizy
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TAB_PODS','OKNANZAS')


\anal_pods
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Podsumowanie analizy
::----------------------------------------------------------------------------------------------------------------------
TMPANZAS.cntx_psh();
{? ~TMPANZAS.sel_size() || exec('anal_pods_t','zasoby_wspolne') ?};
{? TMPANZAS.sel_size()
|| exec('anal_wart','zasoby_wspolne')
|? TMPANZAS.f_active()
|| {? TMPANZAS.f_first()
   || {! |?
         exec('anal_wart','zasoby_wspolne');
         TMPANZAS.f_next()
      !}
   ?}
|| {? TMPANZAS.first()
   || {! |?
         exec('anal_wart','zasoby_wspolne');
         TMPANZAS.next()
      !}
   ?}
?};
{? ~TMPANZAS.sel_size() || TAB_PODS.display(); exec('del_anal_pods','zasoby_wspolne') ?};
TMPANZAS.cntx_pop();
1


\anal_pods_gpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Grupa po - podsumowanie analizy
::----------------------------------------------------------------------------------------------------------------------
TAB_PODS.display();
exec('del_anal_pods','zasoby_wspolne')


\wyd_an
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Wydruki analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
AN_ZASW.cntx_psh(); AN_ZASW.index('UNIK'); AN_ZASW.prefix(ANZASPE.DEFAN);
{? AN_ZASW.first()
|| _tab:=~~;
   _tab:=exec('REPTAB','#object');
   {! |?
      _tab.add(AN_ZASW.OPIS,AN_ZASW.WYDRUK,"1");
      AN_ZASW.next()
   !};
   exec('rep_exec','#b_report','ZWS_ZAS_ANAD',,,1,,,,_tab)
|| FUN.info('Nie zdefiniowano wydruków dla wybranej definicji analizy zasobów.'@)
?};
AN_ZASW.cntx_pop()


\utw_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Utworzenie tabeli i okienka dla analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
AN_ZASP.cntx_psh(); AN_ZASP.index('DISP1'); AN_ZASP.prefix(ANZASPE.DEFAN,'T');
{? AN_ZASP.first()
||
:: okienko z analizą
   _tab:='tab_tmp(2,'+
         '\'ID\',\'STRING[10]\',\'Identyfikator\','+
         '\'ZASOB\',\'STRING[60]\',\'Zasób\','+
         '\'NAZWISKO\',\'STRING[30]\',\'Nazwisko\','+
         '\'PIERWSZE\',\'STRING[20]\',,'+
         '\'JORG\',\'STRING[16]\',\'Jednostka\','+
         '\'JORG_OP\',\'STRING[60]\',\'Opis\'';
   _czy_war:=0;
   {! |?
      {? ~_czy_war || _czy_war:=AN_ZASP.RODZ_ZWR<>1 ?};
      _tab+=',\'KOL'+form(AN_ZASP.LP,-2)+'\',';
      _tab+={? AN_ZASP.RODZ_ZWR=1
            || '\'STRING[30]\','
            |? AN_ZASP.RODZ_ZWR=2
            || '\'INTEGER\','
            || '\'REAL\','
            ?};
      _tab+='\''+AN_ZASP.OPISKOL+'\'';
      AN_ZASP.next()
   !};
   _tab+=')';
   TMPANZAS:=($_tab)();
:: okno wertowania
   OKNANZAS:=TMPANZAS.mk_sel('Analiza zasobów - %1'@[ANZASPE.OPIS],'P',,'tmpanzas_wer',,,,,'U');
   TMPANZAS.win_act(OKNANZAS,,'Kolejność');
   AN_ZASW.cntx_psh(); AN_ZASW.index('UNIK'); AN_ZASW.prefix(ANZASPE.DEFAN);
   {? AN_ZASW.first()
   || TMPANZAS.win_act(OKNANZAS,,'Formuła','&Druku&j'@@,,,"exec('wyd_an','zasoby_wspolne')",,,,,,'D')
   ?};
   AN_ZASW.cntx_pop();
   TMPANZAS.win_fld(OKNANZAS,,'ID',,,10,,,'Zasób'@);
   TMPANZAS.win_fld(OKNANZAS,,'ZASOB',,,20,,,'Opis'@);
   TMPANZAS.win_fld(OKNANZAS,,'NAZWISKO',,,15,,,'Osoba'@);
   TMPANZAS.win_fld(OKNANZAS,,'PIERWSZE',,,10);
   TMPANZAS.win_fld(OKNANZAS,,'JORG',,,10,,,'Jednostka'@);
   {? _czy_war
   || TMPANZAS.win_act(OKNANZAS,,'Formuła','Podsumowanie'@@,,'Podsumowanie kolumn wartościowych',,
                       "exec('anal_pods','zasoby_wspolne')",1,1,
                       "exec('anal_pods_t','zasoby_wspolne')","exec('anal_pods_gpo','zasoby_wspolne')")
   ?};
   {? AN_ZASP.first()
   || {! |?
         _poleokn:='TMPANZAS.win_fld(OKNANZAS,,';
         _poleokn+='\'KOL'+form(AN_ZASP.LP,-2)+'\',,,';
         _poleokn+=$AN_ZASP.SZER+',';
         _poleokn+={? AN_ZASP.RODZ_ZWR=3 || $AN_ZASP.LICZ || '' ?}+',,';
         _poleokn+='\''+AN_ZASP.OPISKOL+'\',,\''+AN_ZASP.OPISKOL+'\',0,1)';
         ($_poleokn)();
         AN_ZASP.next()
      !}
   ?};
   TMPANZAS.win_sel(OKNANZAS)
?};
AN_ZASP.cntx_pop();
_zwrot


\utw_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Wprowadzenie rekordów do tabeli tymczasowej pozycji analizy
::----------------------------------------------------------------------------------------------------------------------
AN_ZASP.cntx_psh(); AN_ZASP.prefix();
POJAZDY.cntx_psh(); POJAZDY.index('ID');
NRKRTSIM.cntx_psh(); NRKRTSIM.index('ID');
{! |?
   POZAN.index('LP'); POZAN.prefix(ANZASPE.ref(),ZASOBY.ref(),'T');
   {? POZAN.first()
   || TMPANZAS.blank(1);
      {? ZASOBY.TYP='P'
      || POJAZDY.prefix(ZASOBY.KARTOTEK);
         {? POJAZDY.first()
         || TMPANZAS.ID:=POJAZDY.NRREJ;
            TMPANZAS.ZASOB:=POJAZDY.NAZ;
            {? POJAZDY.OSOBA
            || TMPANZAS.NAZWISKO:=POJAZDY.OSOBA().NAZWISKO;
               TMPANZAS.PIERWSZE:=OSOBA.PIERWSZE
            ?};
            {? POJAZDY.JORG
            || TMPANZAS.JORG:=POJAZDY.JORG().SYMBOL;
               TMPANZAS.JORG_OP:=UD_SKL.OPIS
            ?}
         ?}
      |? ZASOBY.TYP='S'
      || NRKRTSIM.prefix(ZASOBY.KARTOTEK);
         {? NRKRTSIM.first()
         || TMPANZAS.ID:=NRKRTSIM.NR_KARTY;
            TMPANZAS.ZASOB:=NRKRTSIM.OPIS;
            {? NRKRTSIM.OSOBA
            || TMPANZAS.NAZWISKO:=NRKRTSIM.OSOBA().NAZWISKO;
               TMPANZAS.PIERWSZE:=OSOBA.PIERWSZE
            ?};
            {? NRKRTSIM.JORG
            || TMPANZAS.JORG:=NRKRTSIM.JORG().SYMBOL;
               TMPANZAS.JORG_OP:=UD_SKL.OPIS
            ?}
         ?}
      ?};
      {! |?
         _kol:='TMPANZAS.KOL'+form(POZAN.DEF().LP,-2)+':=POZAN.';
         _kol+={? AN_ZASP.RODZ_ZWR=1
               || 'WART_01'
               |? AN_ZASP.RODZ_ZWR=2
               || 'WART_03'
               || 'WART_02'
               ?};
         ($_kol)();
         POZAN.next()
      !};
      TMPANZAS.add()
   ?};
   ZASOBY.next()
!};
POJAZDY.cntx_pop(); NRKRTSIM.cntx_pop(); AN_ZASP.cntx_pop()


\poz_anzaspe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Pozycje analiz zasobów
::----------------------------------------------------------------------------------------------------------------------
{? ANZASPE.get()
|| {? ANZASPE.r_lock(1,1)
   || POZAN.cntx_psh(); exec('use_pozan','zasoby_wspolne');
      POZAN.index('LP'); POZAN.prefix(ANZASPE.ref());
      {? POZAN.first()
      || ZASOBY.cntx_psh(); ZASOBY.index('TYP'); ZASOBY.prefix(ANZASPE.DEFAN().RODZZAS);
         {? ZASOBY.first() & exec('utw_tab','zasoby_wspolne')
         || exec('utw_tmp','zasoby_wspolne');
            TMPANZAS.select()
         ?};
         VAR_DEL.delete('TMPANZAS','OKNANZAS');
         ZASOBY.cntx_pop()
      || FUN.info('Analiza nie zawiera pozycji.'@)
      ?};
      POZAN.cntx_pop();
      unlock_r(); 1
   || FUN.info('Analiza zasobów wykorzystywana przez innego użytkownika.'@)
   ?}
|| FUN.info('Nie znaleziono analizy zasobów.'@)
?}


\gen_poz_ana
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Generowanie pozycji analizy dla konkretnego zasobu
::   WE: _a - typ zasobu 'P' - pojazdy
::                       'S' - karty SIM
::----------------------------------------------------------------------------------------------------------------------
POZAN.blank(1);
_ok:=0;
_wart:=($(AN_ZASP.FORMULA().FORMULA))();
{? AN_ZASP.RODZ_ZWR=1 & (type_of(_wart)=type_of('')) || _ok:=1; POZAN.WART_01:=_wart ?};
{? AN_ZASP.RODZ_ZWR=2 & (type_of(_wart)=type_of(0)) || _ok:=1; POZAN.WART_03:=_wart ?};
{? AN_ZASP.RODZ_ZWR=3 & (type_of(_wart)=type_of(0)) || _ok:=1; POZAN.WART_02:=_wart ?};
{? _ok
|| POZAN.NAG:=ANZASPE.ref();
   POZAN.ZAS:=ZASOBY.ref();
   POZAN.DEF:=AN_ZASP.ref();
   POZAN.add()
?}


\anzaspe_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Tworzenie pozycji wykonania analizy zasobów.
::   WE: _a - nagłowek analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
ANZASPE.cntx_psh(); ANZASPE.prefix();
{? _a & ANZASPE.seek(_a)
|| AN_ZAS.cntx_psh(); AN_ZAS.prefix(); ANZASPE.DEFAN();
   AN_ZASP.cntx_psh(); AN_ZASP.index('DISP1'); AN_ZASP.prefix(AN_ZAS.ref(),'T');
   {? AN_ZASP.first()
   || POZAN.cntx_psh(); exec('use_pozan','zasoby_wspolne'); POZAN.index('UNIK'); POZAN.prefix();
      POJAZDY.cntx_psh(); POJAZDY.index('ID');
      NRKRTSIM.cntx_psh(); NRKRTSIM.index('ID');
      ZASOBY.cntx_psh(); ZASOBY.index('TYP'); ZASOBY.prefix(AN_ZAS.RODZZAS);
      {? ZASOBY.first()
      || {? AN_ZAS.FORMULAP || ($(AN_ZAS.FORMULAP().FORMULA))() ?};
         {! |?
            _dalej:=0;
            {? ZASOBY.TYP='P'
            || POJAZDY.prefix(ZASOBY.KARTOTEK);
               _dalej:=(POJAZDY.first() & POJAZDY.A='T')
            |? ZASOBY.TYP='S'
            || NRKRTSIM.prefix(ZASOBY.KARTOTEK);
               _dalej:=(NRKRTSIM.first() & NRKRTSIM.A='T')
            ?};
            {? _dalej & AN_ZASP.first()
            || {! |?
                  exec('gen_poz_ana','zasoby_wspolne',ZASOBY.TYP);
                  AN_ZASP.next()
               !}
            ?};
            ZASOBY.next()
         !};
         {? AN_ZAS.FORMULAK || ($(AN_ZAS.FORMULAK().FORMULA))() ?}
      ?};
      ZASOBY.cntx_pop(); POZAN.cntx_pop(); NRKRTSIM.cntx_pop(); POJAZDY.cntx_pop()
   ?};
   AN_ZAS.cntx_pop(); AN_ZASP.cntx_pop()
?};
ANZASPE.cntx_pop()


\przel_anzaspe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Przeliczanie analizy zasobów
::----------------------------------------------------------------------------------------------------------------------
{? ANZASPE.get()
|| {? ANZASPE.r_lock(1,1)
   || {? FUN.ask('Przeliczyć analizę zasobów?'@)
      || do();
         POZAN.cntx_psh(); exec('use_pozan','zasoby_wspolne');
         POZAN.index('UNIK'); POZAN.prefix(ANZASPE.ref());
         {? POZAN.first()
         || {! |?
               _delr:=POZAN.del(,1);
               {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
            !}
         ?};
         params_exec('anzaspe_poz','zasoby_wspolne',ANZASPE.ref());
         POZAN.cntx_pop();
         end()
      ?};
      unlock_r()
   || FUN.info('Analiza zasobów wykorzystywana przez innego użytkownika.'@)
   ?}
|| FUN.info('Nie znaleziono analizy zasobów.'@)
?}

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:36 104b81da096e6563bc3f3a2aec912948a66efcda92d1676eb88dc4b90cf4a2d264fd26fa162e1813e2c49013300941ebdfddfc372238655ac075f24c03dde0aefd3ca80734ff1087da7334463fee8fb45e001c4d9b20ef4f595964185ba0c04308f80c4e994f3ffda426d55f020b350e571f0046cb097e9473900f618e8a520d
