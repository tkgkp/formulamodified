:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: zal_kom.fml [12.41]
:: Utworzony: 2014/05/14
:: Autor: TMR
::======================================================================================================================
:: Zawartosc: Formuly do obslugi komunikatów do zalacznikow
::======================================================================================================================


\getZalCzestWysw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
:: OPIS: Funkcja zwracająca częstotliwość wyświetlania komunikatu dla wybranego typu załącznika
::   WE: _a [REFERENCE] - wskazanie na typ załącznika
::   WY:    [STRING]    - częstotliwość wyświetlania (J - jednorazowe, K - każdorazowe)
::----------------------------------------------------------------------------------------------------------------------
_slo_naz:={? var_pres('_a')=type_of(null) || _a || return('') ?};
_czw:='';
ZAL_KOM.cntx_psh();
ZAL_KOM.index('TYP');
ZAL_KOM.prefix(_slo_naz);
{? ZAL_KOM.first()
|| _czw:=ZAL_KOM.CZW
?};
ZAL_KOM.cntx_pop();
_czw


\findPotwZal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
:: OPIS: Funkcja wyszukująca załącznik na podstawie ustawionego bufora tabeli ZALACZ
::   WY: obiekt z polami potw, data i czas
::----------------------------------------------------------------------------------------------------------------------
_fml:="
   _res:=obj_new('potw','data','czas');
   _res.potw:='';
   _res.data:=date(0,0,0);
   _res.czas:=time(0,0,0);
   {? ZALACZ.find_tab(1,
                      'TYP_ZAL',,'=', ZALACZ.TYP_ZAL,"+
                      {? ZALACZ.OSOBA<>null() || "'OSOBA',,'=', ZALACZ.OSOBA," || "" ?}+
                      {? ZALACZ.P<>null()     || "'P',,'=', ZALACZ.P,"         || "" ?}+
                      {? ZALACZ.H<>null()     || "'H',,'=', ZALACZ.H,"         || "" ?}+
                      {? ZALACZ.H_UM<>null()  || "'H_UM',,'=', ZALACZ.H_UM,"   || "" ?}+
                      {? ZALACZ.ZC<>null()    || "'ZC',,'=', ZALACZ.ZC,"       || "" ?}+
                      "'POTW',,'<>', '?',
                       'POTW',,'<>', ''
                     )
   || _res.potw:=ZALACZ.POTW;
      _res.data:=ZALACZ.POB_D;
      _res.czas:=ZALACZ.POB_G
   ?};
   _res
";
ZALACZ.cntx_psh();
_res:=($_fml)();
ZALACZ.cntx_pop();
_res


\ae_czw_zal_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
:: OPIS: Po redakcji pola CZW
::----------------------------------------------------------------------------------------------------------------------
win_disp();
~~


\bd_czr_zal_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41 - DPA]
:: OPIS: Przed wyświetleniem pola CZR
::----------------------------------------------------------------------------------------------------------------------
{? ZAL_KOM.CZW='K'
|| 0
|| 1
?}


\be_czr_zal_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41 - DPA]
:: OPIS: Przed redagowaniem pola CZR
::----------------------------------------------------------------------------------------------------------------------
{? ZAL_KOM.CZW='K'
|| 0
|| 1
?}


\get_TEXT
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
:: OPIS: Pobiera treść komunikatu
::   WE: _a - [REFERENCE] - wskazanie na ZAL_KOM
::   WY:      [STRING] - treść komunikatu
::----------------------------------------------------------------------------------------------------------------------
_ref:={? var_pres('_a')=type_of(null) || _a || return('') ?};
_txt:='';
ZAL_KOM.cntx_psh();
ZAL_KOM.prefix();
{? ZAL_KOM.seek(_ref)
|| _txt:=ZAL_KOM.memo_txt(,1,'TEXT')
?};
ZAL_KOM.cntx_pop();
_txt


\get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
:: OPIS: Wyszukuje definicję komunikatu
::   WE: _a - [REFERENCE] - wskazanie na SLO_NAZ
::   WY:      [REFERENCE] - wskazanie na definicję komunikatu lub null()
::----------------------------------------------------------------------------------------------------------------------
_typ_zal:={? var_pres('_a')=type_of(null) || _a || return(0) ?};
_res:=null();
ZAL_KOM.cntx_psh();
ZAL_KOM.index('TYP');
ZAL_KOM.prefix(_typ_zal);
{? ZAL_KOM.first()
|| _res:=ZAL_KOM.ref()
?};
ZAL_KOM.cntx_pop();
_res


\isReq
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Sprawdza czy wymagane jest potwierdzenie pobrania załącznika
::   WE: _a [REFERENCE] - wskazanie na załącznik
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_ref:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};

ZALACZ.cntx_psh();
ZALACZ.index('S1');
ZALACZ.prefix();
{? ZALACZ.seek(_ref)
|| {? ZALACZ.OSOBA<>null() | ZALACZ.P<>null()
   || ZAL_KOM.cntx_psh();
      ZAL_KOM.index('TYP');
      ZAL_KOM.prefix(ZALACZ.TYP_ZAL);
      {? ZAL_KOM.first()
      ||
:: wyświetlanie komunikatu jednorazowe
         {? ZAL_KOM.CZW='J'
         || {? ZAL_KOM.CZR='T'
:: dla typu
            || {? var_pres('_res')>100 || obj_del(_res) ?};
               _res:=exec('findPotwZal','zal_kom');
               {? _res.potw=''
               || _result:=1
               || {? ZAL_KOM.ZGODA='T' & _res.potw<>'T'
                  || _result:=1
                  ?}
               ?}
:: dla załącznika
            |? ZAL_KOM.CZR='Z'
            || {? ZALACZ.POTW<>'T' & ZALACZ.POTW<>'N'
               || _result:=1
               || {? ZAL_KOM.ZGODA='T' & ZALACZ.POTW<>'T'
                  || _result:=1
                  ?}
               ?}
            ?};
:: sprawdzenie czy się nie zmienił komunikat od ostatniego potwierdzenia
            {? _result=0 &
               ((ZAL_KOM.TEXT_D>ZALACZ.POB_D)
               |
               ((ZAL_KOM.TEXT_D=ZALACZ.POB_D) & (ZAL_KOM.TEXT_G>ZALACZ.POB_G)))
            ||
               {? exec('isNotEmpty','zal_pobh',ZALACZ.ref())
               || _lastKom:=form(exec('getLastKom','zal_pobh',ZALACZ.ref()));
                  {? hash(_lastKom,'md5')<>ZAL_KOM.TEXT_H
                  || _result:=1
                  ?}
               ?}
            ?}
:: wyświetlanie komunikatu za każdym razem przy próbie pobrania
         |? ZAL_KOM.CZW='K'
         || _result:=1
         ?}
      ?};
      ZAL_KOM.cntx_pop()
   ?}
?};
ZALACZ.cntx_pop();
_result


\saveAnswer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Zapisuje odpowiedź użytkownika na wyświetlony komunikat
::   WE: _a [REFERENCE] - wskzanie na załącznik
::       _b [STRING]    - odpowiedź (T/N)
::   WY: '' lub komunikat błędu
::----------------------------------------------------------------------------------------------------------------------
_result:='';
   _ref:={? var_pres('_a')=type_of(null) || _a || return('Błędny typ parametru "Załącznik"'@) ?};
_answer:={? var_pres('_b')=type_of('')   || _b || return('Błędny typ parametru "Odpowiedź"'@) ?};

{? _answer<>'T' & _answer<>'N' & _answer<>''
|| _result:='Potwierdzenie może przyjmować wartości \'T\', \'N\' lub \'\'.\n'
            'Nie dokonano zapisu informacji.'@;
   return(_result)
?};

ZALACZ.cntx_psh();
ZALACZ.index('S1');
ZALACZ.prefix();
{? ZALACZ.seek(_ref)
|| {? ZALACZ.OSOBA<>null() | ZALACZ.P<>null()
   || _can_get:=0;
      ZAL_KOM.cntx_psh();
      ZAL_KOM.index('TYP');
      ZAL_KOM.prefix(ZALACZ.TYP_ZAL);
      {? ZAL_KOM.first()
      || {? (ZAL_KOM.ZGODA<>'T') | ((ZAL_KOM.ZGODA='T') & (_answer='T' | _answer=''))
         || _can_get:=1
         || _result:='Do pobrania wybranego typu załącznika wymagane jest udzielenie zgody.'@
         ?}
      || _can_get:=1
      ?};
      ZAL_KOM.cntx_pop();
      {? _can_get
      || ZALACZ.POTW:={? _answer<>'' || _answer || ZALACZ.POTW ?};
         ZALACZ.POB_D:=date();
         ZALACZ.POB_G:=time();
         {? ZALACZ.put()
         || {? app_info('web_sesid')<>''
            || OPERATOR.USER:=exec('users','#users',exec('operatorKod','#users'))
            ?};
            exec('add','zal_pobh',ZALACZ.ref(),OPERATOR.USER)
         ?}
      ?}
   || _result:='Osoba zapisująca potwierdzenie nie jest osobą przypisaną do załącznika.'@
   ?}
|| _result:='Nie znaleziono załącznika'@
?};
ZALACZ.cntx_pop();
_result

:Sign Version 2.0 jowisz:1028 2019/06/07 16:00:04 53775f27f01c8e5eca5a87d605b57265fac5a66bb0573811113770c1658c122249705c3509d2aec147efbc26868dd51de90cdd5ccd8e8fc9c46224174e6d1653f7c1fbc92ab66bf928c7ac195e43b1c8a2004077802615bad0718aaa28dedaba4b9bbdcc8165ef9a7f021034bc46bb38304e138e06bb3622fc7ccbbcce956b93
