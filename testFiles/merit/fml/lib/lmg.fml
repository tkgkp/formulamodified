:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: lmg.fml
:: Utworzony: 27.01.2015
:: Autor: mario
::======================================================================================================================
:: Zawartość: Formuły oraz wywoływacze obszaru LMG
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła inicjująca dla obszaru LMG
::----------------------------------------------------------------------------------------------------------------------
:: Podczytanie INFO.KRAJ - kraj waluty opodatkowania
exec('czytaj','#stalesys',,INFO,FINFO);
exec('czytaj','#stalesys',,XINFO,'SLWYDZIA','SLJEZYK','SLWAL');
exec('czytaj','#stalesys',,KST,'BDO','KRAJ','OSS','IOSS');

:: Podczytanie parametrów oddziału
KSTE.prefix; KSTE.first();

:: Ustawia zmienne informujące o dostępie do wartości sprzedaży, zakupu, magazynowych
exec('upr_set','ceny');

:: Formuła podczytująca dane specyficzne dla firmy
__War_f:="exec('FindInSet','#table',_a,_a,_c,REF.FIRMA,$(_a+'.'+_b))";

:: Walutowość dla sprzedaży
BEER.MW:='M';
HELP.WHERE:='M';
HELP.DKRED:='T';

:: Obiekt do obsługi parametrów
exec('Tpar_decl','tech_param');

:: RB - objekt obsługujący rachunki bankowe
exec('RB','object');

:: Ustawia BEER.WW, BEER.LW
exec('ustaw_ww','eurusd','M');
exec('ust_lw','eurusd',0);

:: Obiekt do obsługi dokumentacji elektronicznej + domyślna instancja
exec('declare','tech_doc');

:: Ustawienie prezycji pól w oknach
exec('fld_prec','win_ust');

:: ikony zwiazane ze statusem dostawy
exec('skid_kus','statexam');

:: Salda i obroty kont i rozrachunków
exec('F','object');

:: drukarki kodów kreskowych
{? exec('on','#mwapi')=0 || exec('myDPRINT','object') ?};

:: format dla reklamacji
exec('f_DISP_EDIT','reklamacje');

:: konta kosztowe
BPMN.KK_DOM:='LMG';

ZK_N.fld_fml('PR','DISPLAY_FORMAT',"'out_prec=2'");
~~


\pr_mgtyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: formuła przed redakcją pola typ magazynu
::   WY: czy można edytować pole typ magazynu
::  OLD: \pr_mgtyp/defin.fml
::       \mg_skl_be/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? (1+POM.POP_MG)='T'
||
   ND.cntx_psh();
   INN.cntx_psh();
:: dokumenty
   ND.index('NAGNUM');
   ND.prefix(MG.ref());
   _wyn:=~ND.first();
:: inwentura
   {? _wyn
   || INN.index('INN');
      INN.prefix(MG.ref());
      _wyn:=~INN.first()
   ?};
:: przecena
   {? _wyn
   || INN.use('inw_nwyc');
      INN.index('INN');
      INN.prefix(MG.ref());
      _wyn:=~INN.first()
   ?};
:: sprawdzenie wszystkich lat
   {? _wyn=1
   || _lata:=sql('select distinct ROK from OKR');
      {? _lata.size()>1 & _lata.first()
      || {!
         |? ND.use('nagdo'+MG.ODDZ+(2-$_lata.ROK));
            INN.use('inw_n'+MG.ODDZ+(2-$_lata.ROK));
            ND.index('NAGNUM');
            ND.prefix(MG.ref());
            _wyn:=~ND.first();
            {? _wyn
            || INN.index('INN');
               INN.prefix(MG.ref());
               _wyn:=~INN.first()
            ?};
            _wyn & _lata.next()
         !}
      ?}
   ?};
   ND.cntx_pop();
   INN.cntx_pop()
?};
_wyn


\pr_mg_sl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przed redakcją pola czy stosować wymiary
::       sprawdza czy była już stosowana lokalizacja - istnienie DK_L, DK_LI
::   WY: 1/0
::  OLD: \pr_mg_sl/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? POM.LMO
|| _wyn:=0
|? (1+POM.POP_MG)='T' & ST.ODDZ<>''
|| OKR.cntx_psh();
   DK_L.cntx_psh();
   DK.cntx_psh();
   DK_LN.cntx_psh();
   DK_LI.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.last()
   || {!
      |?
         DK_LN.use('dokln'+ST.ODDZ+($OKR.ROK+2));
         DK_L.use('doklk'+ST.ODDZ+($OKR.ROK+2));
         DK.use('dokma'+ST.ODDZ+($OKR.ROK+2));
         DK_LI.use('dokli'+ST.ODDZ+($OKR.ROK+2));
         _wyn:=exec('FindInSet','#table','DK_L','MG',MG.ref())=null;
         {? _wyn || _wyn:=exec('FindInSet','#table','DK','DK_SM',MG.ref())=null ?};
         {? _wyn || _wyn:=exec('FindInSet','#table','DK_LI','MG',MG.ref())=null ?};
         _wyn & OKR.prev()
      !}
   ?};
   OKR.cntx_pop();
   DK_L.cntx_pop();
   DK.cntx_pop();
   DK_LN.cntx_pop();
   DK_LI.cntx_pop()
?};
_wyn


\czyuzpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: sprawdza czy uzyto palet na podanym magazynie
::   WE: _a - ref magazynu
::   WY: 1-nie uzyto 0-uzyto
::  OLD: \czyuzpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
PAL.cntx_psh();
:: przypisanie palety do magazynu
PAL.index('MGPAL');
PAL.prefix(ST.ODDZ,'T',_a);
_wyn:=~PAL.first();
{? _wyn
|| PAL.index('MGPAL');
   PAL.prefix(ST.ODDZ,'N',_a);
   _wyn:=~PAL.first()
?};
PAL.cntx_pop();
_wyn


\sprmgean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza powiązania lokalizacji z danego magazynu
::   WE: _a - ref magazynu
::   WY: liczba powiązań do lokalizacji
::  OLD: \sprmgean/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
EANL.index('MG');
EANL.prefix('T',_a);
{? EANL.first() || {! |? _wyn+=EANL.count(); EANL.next() !} ?};
EANL.prefix('N',_a);
{? EANL.first() || {! |? _wyn+=EANL.count(); EANL.next() !} ?};
_wyn


\del_mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: formuła Usuń - definicje magazynów - tab. MG
::  OLD: \del_mg/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_pow:=MG.count()-(MG.EANL<>null)-exec('mg_ile_upr','lmg',MG.ref());

_eanl:=exec('sprmgean','lmg',MG.ref())-(MG.EANL<>null);

{? _pow & _eanl
|| FUN.info('Z magazynem powiązano dokumenty, lokalizacje lub uprawnienia.\nUsunięcie magazynu niemożliwe.'@);
   _wyn:=0
?};
{? _wyn=1
||
:: sprawdza czy sa powiazane dokumenty opakowan
   _txt:='Istnieją dokumenty powiązane z magazynem opakowań %1.'@[MG.MG_OPAK];
   _txt+='\nUsunięcie magazynu %1 niemożliwe.'@[MG.SYM];
   _wyn:=exec('be_mg_op','opakow',_txt)
?};
{? _wyn & FUN.ask('Czy usunąć magazyn?'@)
|| _ok:=0;
   do();
   _ndx:=BUFMG.ndx_tmp(,,'MG',,);
   BUFMG.index(_ndx);
   BUFMG.prefix(MG.ref);
   {? BUFMG.first() || {! |? BUFMG.del() !} ?};
   BUFMG.ndx_drop(_ndx);
   USERS_UP.cntx_psh();
   USERS_UP.index('USM');
   USERS_UP.prefix('MG');
   {? USERS_UP.first()
   || {!
      |? {? USERS_UP.MG=MG.ref()
         || USERS_UP.del()
         || USERS_UP.next()
         ?}
      !}
   ?};
   USERS_UP.cntx_pop();
   MG.EANL:=null;
   MG.put(1);
   EANL.index('MG');
   EANL.prefix('T',MG.ref());
   {? EANL.first() || {! |? EANL.del() !} ?};
   EANL.prefix('N',MG.ref());
   {? EANL.first() || {! |? EANL.del() !} ?};
   {? MG.count()=0 || _ok:=MG.del(,1) ?};
   end();
   {? ~_ok
   || FUN.info('Z magazynem powiązano dokumenty, lokalizacje lub uprawnienia.\nUsunięcie magazynu niemożliwe.'@)
   ?}
?}


\mg_ile_upr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: sprawdza liczbę użytkowników uprawnionych do danego magazynu
::   WE: _a - MG.ref
::   WY: ilosc użytkowników
::----------------------------------------------------------------------------------------------------------------------
_sql:='select users from users_up where akr = \'MG\' and mg = \'' + $_a + '\'';
_tab:=sql(_sql);
_wyn:=_tab.size();
_wyn


\typ_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wybór typu dokumentu magazynowego na podstawie podanych parametrów
::   WE:  _a  - parametry dla prefiksu (dodawane do warunku where poprzedzone and )
::              np. '"TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'N\' ';
::       [_b] - opis dla okienka wertowania
::       [_c] - formuła na akcje "WYBIERZ" - formuła powinna zwracać wynik: 1 - Ok, 0 - błąd
::       [_d] - rodzaj wyniku: 0-ref lub 1-string z typami dokumentów
::       [_e] - tablica magazynów (MG.ref()) do kontroli (domyślnie nie sprawdzać)
::       [_f] - komunikat zastępujący informacje o braku uprawnionych dokumentów
::       [_g] - uchwyt okienka
::       [_h] - czy kontrola wg użytkownika 1-domyślnie 0-nie
::       [_i] - typ dokumentu (TYPYDOK.T)
::       [_j] - 1-założyć tylko ograniczenie 0-nie(domyślnie), -1-tak jak 0, dodatkowo wyświetla okienko dla
::              jednego rekordu
::   WY: _wyn [_d]
::            0 - ref wybranego typu dokumentu lub null gdy nie wybrano
::                w przypadku _j=1 wynik nie ma znaczenia
::            1 - STRING zawierający typy wg podanych parametrów (wtedy nie ma select)
::  OLD: \typ_dok/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>2 || _b:='Wybór typu dokumentu'@ ?} || _b:='Wybór typu dokumentu'@ ?};
{? _>=3 || {? type_of(_c)<>3 || _c:="" ?} || _c:="" ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?}  || _d:=0  ?};
{? _>=5 || {? type_of(_e)<>117 || _ilemag:=0 || _ilemag:=obj_len(_e) ?}  || _ilemag:=0  ?};
{? _>=6
|| {? type_of(_f)<>2 || _f:='Brak uprawnionych typów dokumentów.'@ ?}
|| _f:='Brak uprawnionych typów dokumentów.'@
?};
{? _>=7 || {? type_of(_g)<>2 || _g:='' ?} || _g:='' ?};
{? _>=8 || {? type_of(_h)<>1 || _h:=1 ?} || _h:=1 ?};
{? _>=9 || {? type_of(_i)<>2 || _i:='' ?} || _i:='' ?};
{? _>=10 || {? type_of(_j)<>1 || _j:=0 ?} || _j:=0 ?};

{? _c=""
||
   _form:="{? TYPYDOK.KOD<>''
           || sel_exit(); 1
           || FUN.info('Nieuzupełniony kod numeracji dla %1.'@[TYPYDOK.T]); 0
           ?}"
|| _form:=_c
?};

_wyn:=null;

_sort:='T,NAZ';
_from:='';
_where:='';

:: sprawdzanie wg uprawnień użytkownika + uprawnienia na magazynie
_tr:={? _h || exec('get','#params',1001,2,OPERATOR.USER) || '' ?};
{? _tr<>''
||
   TYPYDOK.prefix();
   {? TYPYDOK.first()
   ||
      {!
      |?
         {? {? _tr*(' '+TYPYDOK.T+' ') || 1 || _tr*(TYPYDOK.T+' ')=1 ?}
         || {? _ilemag
            || _ii:=0; _usun:=0;
               {!
               |? _ii+=1;
                  {? exec('FindInSet','#table','T2MG','T',_e[_ii])<>null()
                   & exec('FindInSet','#table','T2MG','T',TYPYDOK.ref(),_e[_ii])=null()
                  || _usun:=1; 0
                  || _ii<_ilemag
                  ?}
               !};
               {? ~_usun || _where+='"TYPYDOK".T='''+TYPYDOK.T+''' or ' ?}
            || _where+='"TYPYDOK".T='''+TYPYDOK.T+''' or '
            ?}
         ?};
         TYPYDOK.next()
      !};
      {? _where='' & _ilemag || _where+='"TYPYDOK".T=''brak'' or ' ?}
   ?}
|? _ilemag
||
   TYPYDOK.prefix();
   {? TYPYDOK.first()
   || {!
      |? _ii:=0; _usun:=0;
         {!
         |? _ii+=1;
            {? exec('FindInSet','#table','T2MG','T',_e[_ii])<>null()
             & exec('FindInSet','#table','T2MG','T',TYPYDOK.ref(),_e[_ii])=null()
            || _usun:=1; 0
            || _ii<_ilemag
            ?}
         !};
         {? ~_usun || _where+='"TYPYDOK".T='''+TYPYDOK.T+''' or ' ?};
         TYPYDOK.next()
      !}
   ?};
   {? _where='' || _where+='"TYPYDOK".T=''brak'' or ' ?}
?};

{? _where<>''
||
   _where:=_where -3;
   {? _a<>''
   || _where:='('+_where+') and '+_a
   || _where:='('+_where+')'
   ?}
|? _a<>''
|| _where:=' '+_a
|| _where:=''
?};

:: tworzenie okienka
TYPYDOK.index('TYP');
TYPYDOK.prefix();
TYPYDOK.f_set(_sort,_from,_where);
{? _j<=0
|| {? _g=''
   || _win_sel:=TYPYDOK.mk_sel(_b,'P',,'osdsmatdnzxctda',,,,,'U','T');
      TYPYDOK.win_fld(_win_sel,,'T',,,,,,'Typ'@);
      TYPYDOK.win_fld(_win_sel,,'NAZ',,,,,,'Nazwa'@);
      TYPYDOK.win_act(_win_sel,0,'Formuła','Wybierz'@@,,'Wybór bieżącego zapisu'@,,_form,1);
      TYPYDOK.win_act(_win_sel,0,'Szukaj');
      TYPYDOK.win_act(_win_sel,,'Kolejność')
   || _win_sel:=_g
   ?};
   TYPYDOK.win_sel(_win_sel)
?};

_sel:=1;
{? _j<=0 & _d=0
||
   {? TYPYDOK.f_first()
   ||
      {? ~_j & TYPYDOK.f_size()=1
      || {? TYPYDOK.KOD<>''
         || _ok:=1;
            {? _c<>"" || _ok:=_c() ?};
            {? var_pres('_ok')=type_of(0)
            || {? _ok>0
               || _wyn:=TYPYDOK.ref()
               || _wyn:=null()
               ?}
            || _wyn:=TYPYDOK.ref()
            ?}
         || _wyn:=null;
            FUN.info('Nieuzupełniony kod numeracji dla %1.'@[TYPYDOK.T])
         ?}
      ||
         {? (_tr:=exec('get','#params',1002,2,OPERATOR.USER))<>''
         || TYPYDOK.f_find(_tr)
         ?};
         {? BEER.NAWIGHIG=1 & TYPYDOK.seek(BEER.NAWIGREF)
         ||
            BEER.NAWIGHIG:=0;
            exec('ten_typ','magdok_wspolne')
         ?};
         {? _i<>''
         || {? TYPYDOK.f_find(_i) & TYPYDOK.T=_i
            || {? TYPYDOK.KOD<>''
               || _wyn:=TYPYDOK.ref();
                  _form()
               || _wyn:=null;
                  FUN.info('Nieuzupełniony kod numeracji dla %1.'@[TYPYDOK.T])
               ?}
            || FUN.info('Podany typ dokumentu jest niedostępny.'@);
               _wyn:=null
            ?}
         |? BEER.NAWIGTEN=0 & TYPYDOK.select(,1,12)
         ||
            {? TYPYDOK.KOD<>''
            || _wyn:=TYPYDOK.ref()
            || _wyn:=null;
               FUN.info('Nieuzupełniony kod numeracji dla %1.'@[TYPYDOK.T])
            ?}
         || _sel:=0
         ?}
      ?}
   || FUN.info(_f)
   ?}
?};
{? _d=1
||
   _wyn:='';
   {? TYPYDOK.f_first()
   || {! |? _wyn+=TYPYDOK.T+' ';TYPYDOK.f_next() !}
   ?}
?};
{? _j<=0 || TYPYDOK.f_clear() ?};
_wyn


\lmg_lic
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła sprawdzająca licencję dla obszaru LMG
::   WY: 'T' - jest licencja, 'N' - nie ma licencji
::----------------------------------------------------------------------------------------------------------------------
_result:='N';
_domain:=exec('domain_ref','#b_domain','LMG');
{? _domain<>null()
|| {? exec('lic','#b_domain',_domain)=1
   || _result:='T'
   ?}
?};
_result


\lmg_mag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Główna formuła obszaru roboczego LMG_MAG - Dokumenty magazynowe
::----------------------------------------------------------------------------------------------------------------------
exec('init','lmg');

:: typy dokumentów zwrotu
::_typ_dok:=exec('get','#params',300501,2);
::{? _typ_dok=''
::|| _typ_dok:='"TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DN=\'T\''
::             +'and "TYPYDOK".TD=\'\' and "TYPYDOK".DS=\'N\''
::?};
_typ_dok:='"TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DN=\'T\''
          +'and "TYPYDOK".TD=\'\' and "TYPYDOK".DS=\'N\'';
BEER.TZWR:=';'+gsub(exec('typ_dok','lmg',_typ_dok,,,1),' ',';');
TYPYDOK.blank();

:: okno wywoływacza
::   exec('slo_m_ok','defin',POMOC.RODZ);

::   exec('ust_okna','zlec3');

:: Ustalenie treści linku
_params:=params_get();
{? type_of(_params)>0 & var_pres('LINK',_params)
|| _link:=_params.LINK
|| _link:=''
?};
{? type_of(_params)>0 & var_pres('PROJ_REF',_params)
|| VAR_DEL.delete('__PROJ_REF');__PROJ_REF:=_params.PROJ_REF
?};
_oddz:='';
_rok:=_mc:=0;
_mag:=_typ:=_oddz_ref:=null();

:: Obsługa linku
{? _link<>''
::    Ustalenie parametrów na podstawie przekazanego rekordu
|| _dobrze:=1;
   {? ref_tab(_link)=ND
   || _oddz:=exec('FindAndGet','#table',ND,_link,,"ODDZ",'');
      _rok:=exec('FindAndGet','#table',ND,_link,,"AR",0);
      _mc:=exec('FindAndGet','#table',ND,_link,,"AM",0);
      _mag:=exec('FindAndGet','#table',ND,_link,,"MAG",null());
      _typ:=exec('FindAndGet','#table',ND,_link,,"TYP",null())
   |? ref_tab(_link)=DK
   || _oddz:=exec('FindAndGet','#table',DK,_link,,"exec('FindAndGet','#table',@.ND,N,,\"ODDZ\",'')",'');
      _rok:=exec('FindAndGet','#table',DK,_link,,"exec('FindAndGet','#table',@.ND,N,,\"AR\",0)",0);
      _mc:=exec('FindAndGet','#table',DK,_link,,"exec('FindAndGet','#table',@.ND,N,,\"AM\",0)",0);
      _mag:=exec('FindAndGet','#table',DK,_link,,"exec('FindAndGet','#table',@.ND,N,,\"MAG\",null())",null());
      _typ:=exec('FindAndGet','#table',DK,_link,,"exec('FindAndGet','#table',@.ND,N,,\"TYP\",null())",null())
   ?};
   {? _oddz='' | _rok=0 | _mc=0 | _mag=null() | _typ = null()
   || _dobrze:=0;
      FUN.info('Nie odnaleziono dokumentu magazynowego: %1'@[exec('record','#to_string',_link)])
   ?};

   {? _dobrze
   || _oddz_ref:=exec('FindInSet','#table','ODDZ','KOD2',_oddz,,,1);
::    Wykluczenie dostępu na podstawie uprawnień do danych - oddziały
      {? ~exec('spr_upr','users','ODDZ',_oddz_ref)
      || _dobrze:=0
      ?}
   ?};

   {? _dobrze
::   Wykluczenie dostępu na podstawie uprawnień do danych - magazyny
   || __PARSES.setVal('OddzialLogProd',_oddz);
      {? ~exec('spr_upr','users','MG',_mag)
      || _dobrze:=0
      ?}
   ?};

   {? _dobrze
::       Ustalenie parametrów sesji
   || __PARSES.setVal('OddzialLogProd',_oddz);
      _args:=__PARSES.args('OkresRok');
      _args.OBSZAR:='LMG';
      _args.AR:=_rok;
      _args.AM:=_mc;
      __PARSES.setVal('OkresRok',_args);
      __PARSES.setVal('Magazyn',_mag)
   || return(0)
   ?}

?};

{? ~exec('typydok_'+exec('spr_uprTyp','lmg'),'lmg') || return(0) ?};

{? _link<>'' & ~TYPYDOK.f_seek(_typ)
|| TYPYDOK.f_clear();
   FUN.info('Brak uprawnień do typu dokumentu %1.'@[exec('record','#to_string',_typ)]);
   return(0)
?};

:: ikonki dla pól
exec('eanx_wys','okienka');

BEER.TYPYDOK:=null();
ST.TYPYDOK:=TYPYDOK.ref();
DISP.TYP:='';
DISP.KHNAZ:='';
POM.TAB:='ND';
POM.TYPDOK:=ST.TYPYDOK().KOD;
POM.NRT:=ST.TYPYDOK().NRT;
BEER.SZ:={? TYPYDOK.P='N' || 'S' || 'Z' ?};
POMOC.RODZ:='T';
FILTER.TYPYDOK:=null();
FILTER.ND:=ND.ref();

ND.index('NAGDOK');
ND.prefix(ST.AR,ST.AM,ST.MAG,TYPYDOK.ref());
FAKS.win_dict('WER6');
ND.win_sel('WER');

BEER.HIDESHOW:='11';
BEER.HIDESHOW+={? exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_ZPSM') || '1' || '0' ?};
BEER.HIDESHOW+={? exec('chk_role','#b__box',OPERATOR.USER,'LMO_PAL_PPAL') || '1' || '0' ?};
BEER.HIDESHOW+={? exec('chk_role','#b__box',OPERATOR.USER,'LMG_OPK_PSOP') || '1' || '0' ?};
BEER.HIDESHOW+='1';
BEER.HIDESHOW+='1';
BEER.HIDESHOW+={? exec('chk_role','#b__box',OPERATOR.USER,'LTR_ZLE_DMAG')
                | exec('chk_role','#b__box',OPERATOR.USER,'LTR_ZLE_PMAG') || '11' || '00' ?};
BEER.HIDESHOW+={? ST.JM2='T' & exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_ZPSM') || '1' || '0' ?};
BEER.HIDESHOW+={? ST.DK_AT || '1' || '0' ?};

FILTER.STATUS:='M';
VAR.WGSTMG:=1;

_win_grp:=ND.grp_make(,"exec('DokMR','lmg');exec('hideORshow','lmg');tab_sel(1)",'dokum_mag',,,
"exec('exit','zws',_a)");

_size:=TYPYDOK.f_size();

TYPYDOK.win_sopt('TYP_MAG','select_record_checkbox=0');
:: Dokumenty
ND.grp_sel(_win_grp,TYPYDOK,'TYP_MAG','Dokumenty'@,"exec('pd_grp_typydok','lmg');tab_sel(1)",,,28
 ,"exec('pr_grp_typydok','lmg')",,,,'maximized','TYPY_DOK');
ND.tab_splt(_win_grp,,'vertical','dokumenty','0, 33%');
ND.grp_sel(_win_grp,ND,'WERP',,"exec('pd_grp_nd','lmg')",,,28
 ,"exec('pr_grp_nd','lmg')",,,,'maximized','WER',1);

:: Reorganizacje
ND.grp_sel(_win_grp,DK_LN,'WER','Reorganizacje'@,"exec('pd_grp_dk_ln','lmg')",,,_size
 ,"exec('pr_grp_dk_ln','lmg')",,,,'maximized','REO');

:: Stany magazynowe
ND.grp_sel(_win_grp,SM,'STANY_ML','Stany magazynowe'@,"exec('pd_grp_sm','lmg')",,,_size
 ,"exec('pr_grp_sm','lmg')",,,,'maximized');

:: Palety
ND.grp_sel(_win_grp,PAL,'SEL','Palety'@,"exec('pogrppal','magdok_palety')",,,_size
 ,"exec('prgrppal','magdok_palety')",,,,'maximized_with_title');
ND.tab_splt(_win_grp,'tab0','vertical','pozycje');
ND.grp_sel(_win_grp,PAL_POZ,'WER',,"",,,10
 ,"exec('pwpalpoz','magdok_palety')","exec('popalpoz','magdok_palety')",,,'maximized_with_title');
ND.tab_splt(_win_grp,'pozycje','horizontal','bezozn');
ND.grp_sel(_win_grp,PAL,'BEZ',,"",,,10
 ,"exec('prbezpal','magdok_palety')","exec('pobezpal','magdok_palety')",,,'maximized_with_title');

:: Opakowania
_env:=exec('env','opakow_stany');
params_set('env',_env);
exec('stany','opakow_stany',ND,_win_grp);

:: Wszystkie dokumenty
ND.grp_sel(_win_grp,,'WER1_ALL','Wszystkie dokumenty'@,"exec('pd_allDok','lmg')",,,10
 ,"exec('pr_allDok','lmg')","exec('po_allDok','lmg')",,,'maximized_with_title');
ND.tab_splt(_win_grp,'tab0','horizontal','pozycje');
ND.grp_sel(_win_grp,DK,'WER_POZ',,,,,,,,,,'maximized_with_title');
ND.tab_splt(_win_grp,,'horizontal','panel2','24, 67%');
ND.grp_sel(_win_grp,OPAK_P,'SEL',,,,,,,,,,'maximized_with_title');

:: Wszystkie pozycje
ND.grp_sel(_win_grp,DK,'ALL','Pozycje dokumentów'@,"exec('pd_allPoz','lmg')",,,10
 ,"exec('pr_allPoz','lmg')","exec('po_allPoz','lmg')",,,'maximized_with_title');

:: Dyspozycje załadunku
ND.grp_sel(_win_grp,TR_NZL,'MAGALL','Dyspozycje załadunku'@,"exec('pd_TR_NZL','lmg','Z')",,,10
 ,"exec('pr_TR_NZL','lmg','Z')","exec('po_TR_NZL','lmg','Z')",,,'maximized_with_title');
ND.tab_splt(_win_grp,'tab0','horizontal','pozycjeZ');
ND.grp_sel(_win_grp,TR_ZL,'MAG',,"exec('pd_TR_ZLM','ltr')",,,6
 ,"exec('pr_TR_ZLM','ltr')",,,,'maximized_with_title');
ND.tab_splt(_win_grp,'pozycjeZ','horizontal','pozyZD');
ND.grp_sel(_win_grp,TR_ZLM,'WER',,,,,,,,,,'maximized_with_title');
:: Dyspozycje rozładunku
ND.grp_sel(_win_grp,TR_NZL,'MAGALL','Dyspozycje rozładunku'@,"exec('pd_TR_NZL','lmg','R')",,,10
 ,"exec('pr_TR_NZL','lmg','R')","exec('po_TR_NZL','lmg','R')",,,'maximized_with_title');
ND.tab_splt(_win_grp,'tab0','horizontal','pozycjeR');
ND.grp_sel(_win_grp,TR_ZL,'MAG',,"exec('pd_TR_ZLM','ltr')",,,6
 ,"exec('pr_TR_ZLM','ltr')",,,,'maximized_with_title');
ND.tab_splt(_win_grp,'pozycjeR','horizontal','pozyRD');
ND.grp_sel(_win_grp,TR_ZLM,'WER',,,,,,,,,,'maximized_with_title');

:: Stany magazynowe druga jednostka
ND.grp_sel(_win_grp,SM,'STANY2ML','Stany wg drugiej jm'@,"exec('pd_grp_sm2','lmg')",,,_size
 ,"exec('pr_grp_sm2','lmg')",,,,'maximized');

:: Atesty
ND.grp_sel(_win_grp,DK_AT,'WER','Atesty'@,,,,10
 ,"exec('pr_allPoz','lmg')","exec('po_allPoz','lmg')",,,'maximized');

ND.win_sel(_win_grp);
exec('lmg_mag_stn_act','lmg');
:: wyłączenie ceny i wartości dla magazynów ilościowych
ND.fld_fml('WAR','DISPLAY_FORMAT',"{? ND.MAG().IL='T' || 'empty=1' || 'empty=0' ?}");
DK.fld_fml('WAR','DISPLAY_FORMAT',"{? DK.N().MAG().IL='T' || 'empty=1' || 'empty=0' ?}");
DK.fld_fml('C','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $DK.M().DOKL_C || $ST.DOKL_C ?}+','+{? DK.N().MAG().IL='T' || 'empty=1' || 'empty=0' ?}");
:: ikonki
ND.win_fml('WERP',,'SYM',,'ICON_BEFORE',exec('nd_sym_ib','magdok_nag'));
ND.win_fml('WERP',,'NR',,'ICON_BEFORE',exec('nd_sym_it','magdok_nag'));
ND.win_fml('WER1_ALL',,'SYM',,'ICON_BEFORE',exec('nd_sym_ib','magdok_nag'));
ND.win_fml('WER1_ALL',,'NR',,'ICON_BEFORE',exec('nd_sym_it','magdok_nag'));
ND.win_fml('WERP',,'WAR',,'ICON_BEFORE',exec('nd_war_ib','magdok_nag'));
ND.win_fml('WER1_ALL',,'WAR',,'ICON_BEFORE',exec('nd_war_ib','magdok_nag'));
DK.win_fml('WER_POZ',ATR,'INDATR',,'ICON_BEFORE',exec('ATR_INDATR','magdok_poz'));
DK.win_fml('ALL',,'N','SYM','ICON_BEFORE',exec('nd_sym_ib','magdok_nag'));
TR_NZL.win_fml('MAGALL',,'SYM',,'ICON_BEFORE',exec('tr_nzl_sym_ib','transport_zlec'));
_formikon:="{? TR_ZL.ILRB>0
            || 'xwin16.png:61'
            || ''
            ?}";
TR_ZL.win_fml('MAG',,'ILRB',,'ICON_BEFORE',_formikon);
_formikon:="{? TR_ZL.ILRW>0
            || 'xwin16.png:83'
            || ''
            ?}";
TR_ZL.win_fml('MAG',,'ILRW',,'ICON_BEFORE',_formikon);
_formikon:="{? TR_ZL.ILRD>0
            || 'xwin16.png:16'
            || ''
            ?}";
TR_ZL.win_fml('MAG',,'ILRD',,'ICON_BEFORE',_formikon);
TR_ZL.fld_fml('ILRB','DISPLAY_FORMAT',"{? TR_ZL.TR_NZL().RODZ='Z' || 'empty=0' || 'empty=1' ?}");
TR_ZL.fld_fml('ILRW','DISPLAY_FORMAT',"{? TR_ZL.TR_NZL().RODZ='Z' || 'empty=0' || 'empty=1' ?}");
TR_ZL.fld_fml('ILRD','DISPLAY_FORMAT',"{? TR_ZL.TR_NZL().RODZ='Z' || 'empty=0' || 'empty=1' ?}");

exec('hideORshow','lmg');

AreaTitle.setTabWin(ND,~~);
AreaTitle.setTitle();

{? _link <> ''
|| BEER.TYPYDOK:=TYPYDOK.ref();
   {? ref_tab(_link)=ND & ND.seek(_link)
   || ND.select(,1,5,,'WER',,1)
   |? ref_tab(_link)=DK & DK.seek(_link,,1) & ND.seek(DK.N)
   || _f:=$('{? ND.ref() || exec(\'nd_pozycje_wer\',\'magdok_nag\',\'%1\')?}'[_link]);
      ND.select(,1,5,,'WER',_f,1)
   || return(0)
   ?}
|| ND.select()
?};
TYPYDOK.win_sopt('TYP_MAG','select_record_checkbox=1');
~~


\pr_grp_typydok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przed obsługą okienko dla TYPYDOK
::----------------------------------------------------------------------------------------------------------------------
_status:=FILTER.STATUS;

{? var_pres('__ND_FCLEAR')=type_of(0) & __ND_FCLEAR
|| {? ND.sel_size()>0
   || ND.sel_adel()
   ?};
   ND.f_clear();
   __ND_FCLEAR:=0
?};

{? _status<>'' & _status<>FILTER.STATUS
|| exec('filtrND','magdok_nag',FILTER.STATUS);
   {? FILTER.ND<>null() || ND.seek(FILTER.ND) ?};
   FILTER.TYPYDOK:=null();
   FILTER.ND:=null();
   grp_disp(ND,'WERP')
|? FILTER.TYPYDOK<>null()
|| {? {? TYPYDOK.f_active() || TYPYDOK.f_seek(FILTER.TYPYDOK) || TYPYDOK.seek(FILTER.TYPYDOK) ?}
   || BEER.TYPYDOK:=FILTER.TYPYDOK;
      exec('filtrND','magdok_nag',FILTER.STATUS);
      {? FILTER.ND<>null() || ND.seek(FILTER.ND) ?};
      FILTER.TYPYDOK:=null();
      FILTER.ND:=null();
      grp_disp(ND,'WERP')

   ?}
?};
FILTER.TYPYDOK:=null();
FILTER.ND:=null();
1


\pd_grp_typydok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przed odświeżeniem okienko dla TYPYDOK
::----------------------------------------------------------------------------------------------------------------------
_lmg_act:={? AreaTitle.area='TTE_KOO'
          || {? TYPYDOK.P='T' || 'TTE_WYK_DKOW' || 'TTE_WYK_DKOP' ?}
          || {? TYPYDOK.P='T' || 'LMG_MAG_DAPZ' || 'LMG_MAG_DWYD' ?}
          ?};
_czy_upr:=exec('chk_role','#b__box',OPERATOR.USER,_lmg_act);
{? ~TYPYDOK.sel_size() & ~{? TYPYDOK.f_active() || TYPYDOK.f_size() || TYPYDOK.size() ?}
|| BEER.TYPYDOK:=null();
   exec('filtrND','magdok_nag',FILTER.STATUS,1);
   {? FILTER.ND<>null() || ND.seek(FILTER.ND) ?};
   FILTER.ND:=null();
   grp_disp(ND,'WERP')
|? ~_czy_upr | TYPYDOK.ref()<>BEER.TYPYDOK
|| BEER.TYPYDOK:=TYPYDOK.ref();
   exec('filtrND','magdok_nag',FILTER.STATUS);
   {? FILTER.ND<>null() || ND.seek(FILTER.ND) ?};
   FILTER.ND:=null();
   grp_disp(ND,'WERP')
?};
1


\pr_grp_nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przed obsługą okienko dla ND
::----------------------------------------------------------------------------------------------------------------------
DISP.DISP:=0;
exec('nd_actions','magdok_nag');
exec('hideORshow','lmg');
grp_disp(TYPYDOK,'TYP_MAG');
1


\pd_grp_nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przed odświeżeniem okienko dla ND
::----------------------------------------------------------------------------------------------------------------------
BEER.MENU_PTH:='MR';
1


\n_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: Formula Rekord przed dla okienek wertowania tabeli N
::  OLD: \n_kol/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.ZAK='T'  || 'ND#01#01'
|? ND.Z='T'  || 'ND#01#02'
|| ''
?}


\nd_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: kolorowanie rekordow pozycji wydan zewnetrznych
::  OLD: \nd_kol/wysylki.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=-1;
POMOC.STAN:='';
DK.cntx_psh();
DK.index('DOKZP');
DK.prefix(ND.ref(),0);
{? DK.first()
||
   {!
   |?
      _il:=exec('obl_wys','magdok_wspolne',$DK.ref());
      {? _il=0
      ||
         {? _wyn=-1
         || _wyn:=0
         |? _wyn=2
         || _wyn:=1
         ?}
      |? _il>0 & _il<DK.IL2
      ||
         _wyn:=1
      |? _il>=DK.IL2
      ||
         {? _wyn=-1
         || _wyn:=2
         |? _wyn=0
         || _wyn:=1
         ?}
      ?};
      _wyn<>1 & DK.next()
   !}
?};
DK.cntx_pop();
{? _wyn=2
||
   POMOC.STAN:='X';
   'ND#02#03'
|? _wyn=1
|| 'ND#02#02'
|| 'ND#02#01'
?}


\dk_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: kolorowanie DK dla kart magazynowych
::  OLD: \dk_kol/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.PLUS='T'
|| 'DK#01#01'
|? DK.PLUS='N'
|| 'DK#01#02'
|| ''
?}


\dk_kol_sur
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2011]
:: OPIS: Powiazane pozycje
::  OLD: \dk_kol/sur_nlim.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.ZL=VAR.A_ZLEC & VAR.A_ZLEC<>null
|| 'DK#02#01'
|| ''
?}


\kol_dk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: kolorowanie ilosci do rozpisania
::  OLD: \kol_dk_l/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANX.ILP>0 || 'DK_L#01#01'
|? EANX.ILP<0 || 'DK_L#01#02'
|| 1
?}


\mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: MG.ref
::  OLD: \mg/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
MG.ref


\typydok_plus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: typy dokumentów przychodowych
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? exec('FindInSet','#table','T2MG','T',ST.MAG)<>null
|| _tab:=obj_new(1); _tab[1]:=ST.MAG
|| _tab:=0
?};
{? ST.MAG().SKL='T' & exec('FindInSet','#table','T2MG','T',ST.MAG)=null
|| FUN.info('Dla magazynu typu skład celny należy przypisać typy dokumentów do magazynu.'@);
   _wyn:=0
|| _typ:={? TYPYDOK.P='T' || TYPYDOK.T || '' ?};
   TYPYDOK.f_clear();
   _prod:=exec('tte_lic','tte');
   exec('typ_dok','lmg','"TYPYDOK".P=\'T\' and '
    +{? _prod='N' || '"TYPYDOK".WYR=\'N\'' || '"TYPYDOK".KOOP=\''+ST.MAG().KOOP+'\'' ?}
    ,,,,_tab,,'TYP_MAG',,,1);
   _par:={? _typ<>'' || _typ || exec('get','#params',1002,,OPERATOR.USER) ?};
   {? _par<>''
   || {? TYPYDOK.f_last() || {! |? {? TYPYDOK.T=_par || 0 || TYPYDOK.f_prev() ?} !} ?}
   || TYPYDOK.f_first()
   ?}
?};
{? _wyn || ZAKR.PLMINALL:='P' ?};
_wyn


\typydok_minus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: typy dokumentów rozchodowych
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? exec('FindInSet','#table','T2MG','T',ST.MAG)<>null
|| _tab:=obj_new(1); _tab[1]:=ST.MAG
|| _tab:=0
?};
{? ST.MAG().SKL='T' & exec('FindInSet','#table','T2MG','T',ST.MAG)=null
|| FUN.info('Dla magazynu typu skład celny należy przypisać typy dokumentów do magazynu.'@);
   _wyn:=0
|| _typ:={? TYPYDOK.P='N' || TYPYDOK.T || '' ?};
   TYPYDOK.f_clear();
   _prod:=exec('tte_lic','tte');
   exec('typ_dok','lmg','"TYPYDOK".P=\'N\' and '
    +{? _prod='N' || '"TYPYDOK".WYR=\'N\'' || '"TYPYDOK".KOOP=\''+ST.MAG().KOOP+'\'' ?}
    ,,,,_tab,,'TYP_MAG',,,1);
   _par:={? _typ<>'' || _typ || exec('get','#params',1002,,OPERATOR.USER) ?};
   {? _par<>''
   || {? TYPYDOK.f_last() || {! |? {? TYPYDOK.T=_par || 0 || TYPYDOK.f_prev() ?} !} ?}
   || TYPYDOK.f_first()
   ?}
?};
{? _wyn || ZAKR.PLMINALL:='M' ?};
_wyn


\typydok_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: wszystkie typy dokumentów
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? exec('FindInSet','#table','T2MG','T',ST.MAG)<>null
|| _tab:=obj_new(1); _tab[1]:=ST.MAG
|| _tab:=0
?};
{? ST.MAG().SKL='T' & exec('FindInSet','#table','T2MG','T',ST.MAG)=null
|| FUN.info('Dla magazynu typu skład celny należy przypisać typy dokumentów do magazynu.'@);
   _wyn:=0
|| _typ:=TYPYDOK.T;
   TYPYDOK.f_clear();
   _prod:=exec('tte_lic','tte');
   exec('typ_dok','lmg',{? _prod='N' || '"TYPYDOK".WYR=\'N\'' || '"TYPYDOK".KOOP=\''+ST.MAG().KOOP+'\'' ?}
    ,,,,_tab,,'TYP_MAG',,,1);
   _par:={? _typ<>'' || _typ || exec('get','#params',1002,,OPERATOR.USER) ?};
   {? _par<>''
   || {? TYPYDOK.f_last() || {! |? {? TYPYDOK.T=_par || 0 || TYPYDOK.f_prev() ?} !} ?}
   || TYPYDOK.f_first()
   ?}
?};
{? _wyn || ZAKR.PLMINALL:='A' ?};
_wyn


\lmg_mag_param_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zmiana parametrów pracy obszaru LMG_MAG, TTE_KOO
::----------------------------------------------------------------------------------------------------------------------
{? AreaTitle.area='TTE_KOO'
|| BPMN.TYP_MG:='K'
|| BPMN.TYP_MG:=''
?};

_oddz:=ST.ODDZ;
_mg:=ST.MAG;
_okr_ref:=ST.OKR_REF;
_sts:=ST.STS;
_typydok:=TYPYDOK.ref();
{? {? exec('authorized','#b__box','LMG_MAG','LMG') || __PARSES.editDom('LMG')
   |? exec('authorized','#b__box','LMG_MAG','TTE') || __PARSES.editDom('TTE')
   || 0
   ?}
|| {? _mg<>ST.MAG | _okr_ref<>ST.OKR_REF | _sts<>ST.STS
   || FILTER.TYPYDOK:=null();
      FILTER.ND:=null();
      {? _oddz<>ST.ODDZ || exec('init','lmg') ?};
      {? DK.f_active() || DK.f_clear() ?};
      {? _okr_ref<>ST.OKR_REF || ND.blank(0); DK.blank(0) ?};
      exec('typydok_'+exec('spr_uprTyp','lmg'),'lmg');
      {? {? TYPYDOK.f_active() || TYPYDOK.f_seek(_typydok) || TYPYDOK.seek(_typydok) ?}
      || BEER.TYPYDOK:=TYPYDOK.ref()
      ?};
      grp_disp(TYPYDOK,'TYP_MAG');
      {? FILTER.STATUS='M' || ND.index('NAGDOK') || ND.index('NAGROK') ?};
      {? {? TYPYDOK.f_active() || TYPYDOK.f_get() || TYPYDOK.get() ?}
      || ST.TYPYDOK:=BEER.TYPYDOK:=TYPYDOK.ref();
         {? FILTER.STATUS='M'
         || ND.prefix(ST.AR,ST.AM,ST.MAG,TYPYDOK.ref())
         || ND.prefix(ST.AR,ST.MAG,TYPYDOK.ref())
         ?};
         ND.first()
      || FUN.info('Brak uprawnionych typów dokumentów.\nObszar zostanie zamknięty.'@);
         sel_exit()
      ?};
      exec('nd_actions','magdok_nag');
      grp_disp(ND,'WERP');
      exec('lmg_mag_stn_act','lmg');
      exec('hideORshow','lmg');
      AreaTitle.setTitle()
   ?}
?}


\stany_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: stany w danym magazynie ST.MAG
::   WE: [_a] 1(domyślnie)-okienko wertowania 0-nie (zakładka)
::       [_b] 1-wg drugiej jednostki magazynowej 0(domyślnie)-nie
::  OLD: \stany/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>1 || _a:=1 ?}  || _a:=1  ?};
_jmg:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_params:=params_get();
{? type_of(_params)>0 & var_pres('LINK',_params)>0
|| _link:=_params.LINK
|| _link:=''
?};
{? _link<>''
||
::    Ustalenie parametrów na podstawie przekazanego rekordu
   _dobrze:=1;
   _oddz:=exec('FindAndGet','#table',SM,_link,,"SM.MAG().ODDZ",'');
   _mag:=exec('FindAndGet','#table',SM,_link,,"SM.MAG",null);

   {? _oddz='' |_mag=null()
   || _dobrze:=0;
      FUN.info('Nie odnaleziono pozycji stanu magazynowanego: %1'@[exec('record','#to_string',_link)])
   ?};

   {? _dobrze
   || _oddz_ref:=exec('FindInSet','#table','ODDZ','KOD2',_oddz,,,1);
::   Wykluczenie dostępu na podstawie uprawnień do danych - oddziały
      {? ~exec('spr_upr','users','ODDZ',_oddz_ref)
      || _dobrze:=0
      ?}
   ?};

   {? _dobrze
::   Wykluczenie dostępu na podstawie uprawnień do danych - magazyny
   || __PARSES.setVal('OddzialLogProd',_oddz);
      {? ~exec('spr_upr','users','MG',_mag)
      || _dobrze:=0
      ?}
   ?};

   {? _dobrze
::       Ustalenie parametrów sesji
   || __PARSES.setVal('OddzialLogProd',_oddz);
      __PARSES.setVal('Magazyn',_mag)
   || return(0)
   ?}
?};

{? ST.MAG<>null()
||
   BEER.ESC:=0;
   {? ~(ST.MAG().TYP*'DOST')
   || SM.btn_sopt('STANY_MG','ATRYB','state=grayed');
      SM.btn_sopt('STANY_MG','FIND','state=grayed')
   || SM.btn_sopt('STANY_MG','ATRYB','state=normal');
      SM.btn_sopt('STANY_MG','FIND','state=normal')
   ?};
   HELP.WHERE:='M';
   {? ~_jmg
   || SM.index('ASA');
      SM.prefix(ST.MAG,'T')
   || SM.index('ASA2');
      SM.prefix(ST.MAG,'T','T')
   ?};

   {? exec('FindInSet','#table','M_ATR','TYP','B')<>null()
   || SM.win_edit('SZUKB'); SM.win_patt('SZUKB')
   || SM.win_edit('SZUK'); SM.win_patt('SZUK')
   ?};

    _win_grp:=SM.grp_make(,"",'stany_mag',,,);
    SM.grp_sel(_win_grp,SM,'STANY_MG','Stany magazynowe'@,"exec('pd_grp_sm','lmg')",,,25
          ,"exec('pr_grp_sm','lmg',1)",,,,'maximized');
    SM.grp_sel(_win_grp,SM,'STANY2MG','Stany wg drugiej jm'@,"exec('pd_grp_sm2','lmg')",,,25
          ,"exec('pr_grp_sm2','lmg',1)",,,,'maximized');
   _win_sel:={? _a
             || _ident:='stanoneg'; _idgrp:='grponem'; 'STANY_MG'
             || _ident:='stanonel'; _idgrp:='grponel'; 'STANY_ML'
             ?};
   SM.win_sel({? _a || _win_grp || _win_sel ?});
::   _grp:=SM.grp_make(,,_idgrp,,,"exec('exit','zws',_a)");
::   SM.grp_sel(_grp,,_win_sel,,,,,,,,,,'maximized',_ident);
::   SM.win_sel(_grp);
::   SM.hdr_sel();
::   SM.hdr_sel(' w magazynie: '+ST.MAG().SYM);


:: Stany magazynowe
   {? _a
   ||
      AreaTitle.setTabWin(SM,~~);
      AreaTitle.setTitle();
      {? _link<>''
      ||
         {? SM.seek(_link)
         ||
            SM.select(,1,5,,,,1)
         ||
            FUN.info('Nie odnaleziono pozycji stanu magazynowego\n%1.'@[exec('record','#to_string',_link)])
         ?}
      ||
         SM.select(,1,10)
      ?};
      SM.actions(_win_sel,'');
      POMOC.MGR:=null()
   ?}
|| FUN.info('Nie wybrano magazynu w parametrach pracy programu.'@)
?};
~~


\stany_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: stany magazynowe wg zamowien / wg magazynow / wg zamowienia
::       w zaleznosci od akcji rekord na wywolanym okienku
::   WE: [_a] miejsce wywoławania:
::              0-ALL-wsz (domyślnie)
::              1-SPR-sprzedaż
::              2-ZAM-zamówienia
::       [_b] 1(domyślnie)-okienko wertowania 0-nie (zakładka)
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>1 || _a:=0 ?}  || _a:=0  ?};
{? _>=2  || {? type_of(_b)<>1 || _b:=1 ?}  || _b:=1  ?};

BEER.ESC:=0;
_hdr:=_a=2;
_czypal:=ZK_N.MG().PAL='T';
POMOC.RODZ:='T';
M.win_edit('RED');
ZK_N.MG:=null;
DPOZ.DT:=date();
POMOC.MGR:=null();
_beersz:=BEER.SZ;
BEER.SZ:='S';

_par:={? _a=0 || 'ALL'
      |? _a=1 || 'SPR'
      |? _a=2 || 'ZAM'
      || ''
      ?};
_atrdst:=0;
BEER.ST_ZAKR:=_par;
{? ~exec('samgdost','mat_atr',_par)
|| M.btn_sopt('STANY','ATRYB','state=grayed');
   M.btn_sopt('STANY','FIND','state=grayed')
|| _atrdst:=1;
   M.btn_sopt('STANY','ATRYB','state=normal');
   M.btn_sopt('STANY','FIND','state=normal')
?};

BEER.TYP:='T';
M.index('ARODZ');
M.prefix('T','T');
{? _par<>''
|| M.actions('STANY',{? KSTE.CT<>'T'|| 'C' || '' ?}
    +{? _atrdst || '' || 'B' ?}
    +{? ~_hdr || 'P' || '' ?})
?};
_sel:='STANY_MG';
exec('addsmmag','magazyn_stan');
M.win_sel(_sel);
{? _hdr
|| M.hdr_sel();
   M.hdr_sel('Stany magazynowe (WIDOK WG UPRAWNIEŃ ZAMÓWIEŃ SPRZEDAŻY)'@)
?};
{? _b
|| BEER.RS:=11;
   exec('zakrMag','lmg');
   AreaTitle.setTabWin(M,~~);
   AreaTitle.setTitle();
   _wyn:=M.select(,{? _a=1 || M.seek(BEER.M) || M.seek(M.ref()) ?},30);
   M.actions('STANY','');
   BEER.SZ:=_beersz;
   MG.f_clear()
?};
''


\pr_grp_sm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przed obsługą okienko dla SM
::   WE: [_a] 0-wyłącz klawisz 1-włącz
::----------------------------------------------------------------------------------------------------------------------
_btn:={? var_pres('_a')=type_of(0) || _a || 0 ?};
{? ~_btn
|| SM.btn_sopt('STANY_MG','STN_ALL_MAG','state=grayed')
|| SM.btn_sopt('STANY_MG','STN_ALL_MAG','state=normal')
?};
exec('stany_one','lmg',0);
1


\pd_grp_sm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przed odświeżeniem okienko dla SM
::----------------------------------------------------------------------------------------------------------------------
1


\pr_grp_mstn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przed obsługą okienko dla MG
::----------------------------------------------------------------------------------------------------------------------
MG.f_first();
grp_disp(MG,'STN');
1


\pd_grp_mstn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przed odświeżeniem okienko dla MG
::----------------------------------------------------------------------------------------------------------------------
grp_disp(MG,'STN');
1


\rek_grp_stn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Rekord przed wyświetleniem stanu
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__smmag')
|| __smmag.clear();
   __smmag.prefix(MG.SYM,);
   BEER.ST_MG:={? __smmag.first() || __smmag.STAN || 0 ?}
|| BEER.ST_MG:=BEER.SD
?};
''


\lmg_dsm_param_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zmiana parametrów pracy obszaru LMG_DSM
::----------------------------------------------------------------------------------------------------------------------
BPMN.TYP_MG:='';
_oddz:=ST.ODDZ;
_okr_ref:=ST.OKR_REF;
{? __PARSES.editDom('LMG')
|| {? _okr_ref<>ST.OKR_REF
   || FILTER.TYPYDOK:=null();
      FILTER.ND:=null();
      {? DK.f_active() || DK.f_clear() ?}
   ?};
   {? _oddz<>ST.ODDZ || exec('init','lmg') ?};
   exec('stany_one','lmg',0,cur_win(1,1)='STANY2ML');
   exec('lmg_mag_stn_act','lmg');
   _typydok:=TYPYDOK.ref();
   exec('typydok_'+exec('spr_uprTyp','lmg'),'lmg');
   {? {? TYPYDOK.f_active() || TYPYDOK.f_seek(_typydok) || TYPYDOK.seek(_typydok) ?}
   || BEER.TYPYDOK:=TYPYDOK.ref()
   |? {? TYPYDOK.f_active() || TYPYDOK.f_first() || TYPYDOK.first() ?}
   || BEER.TYPYDOK:=TYPYDOK.ref()
   ?};
   grp_disp(TYPYDOK,'TYP_MAG');
   {? FILTER.STATUS='M' || ND.index('NAGDOK') || ND.index('NAGROK') ?};
   {? {? TYPYDOK.f_active() || TYPYDOK.f_get() || TYPYDOK.get() ?}
   || ST.TYPYDOK:=BEER.TYPYDOK:=TYPYDOK.ref();
      {? FILTER.STATUS='M'
      || ND.prefix(ST.AR,ST.AM,ST.MAG,TYPYDOK.ref())
      || ND.prefix(ST.AR,ST.MAG,TYPYDOK.ref())
      ?};
      ND.first()
   || FUN.info('Brak uprawnionych typów dokumentów.\nObszar zostanie zamknięty.'@);
      sel_exit()
   ?};
   exec('nd_actions','magdok_nag');
   grp_disp(ND,'WERP');
   exec('hideORshow','lmg');
   AreaTitle.setTitle()
?}


\lmg_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Główna formuła obszaru LMG_ZAM - zamówienia wewnętrzne
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__typzsp','__typz_w','__zakr_w');

:: Środowisko
_env:=obj_new('PX');
_params:=params_get();
{? type_of(_params)>0 & var_pres('LINK',_params)>0
|| _link:=_params.LINK;
   params_set('env',_env,'LINK',_params.LINK)
|| _link:='';
   params_set('env',_env)
?};
{? type_of(_params)>0 & var_pres('PROJ_REF',_params)
|| VAR_DEL.delete('__PROJ_REF');__PROJ_REF:=_params.PROJ_REF
?};

:: dostępne typy zamówień wewnętrznych
_p3014:=exec('get','#params',3014,2,OPERATOR.USER);
:: domyślny typ zamówinia wewnętrznego
_p3015:=exec('get','#params',3014,2,OPERATOR.USER);

_sql:="
   select
    T, NAZ, REFERENCE REF, ' ' INF, MOB, ZAP
   from TYPYZAM
    where TYPYZAM.R='W'";
_sql+={? _p3014=''
      || ""
      || " and ':_a' like '% '||TYPYZAM.T||' %' "
      ?};
_sql+=" order by T, T ";
{? _p3014<>'' || _p3014:=' '+_p3014+' ' ?};

:: ikonki dla pól
exec('eanx_wys','okienka');

{? _link<>''
|| {? ref_tab(_link)=ZK_N
   ||
::    Ustalenie parametrów na podstawie przekazanego rekordu
      _dobrze:=1;
      _oddz:=exec('FindAndGet','#table',ZK_N,_link,,"ZK_N.ODDZ",'');
      {? ST.ODDZ<>_oddz
      ||
         {? type_of(_mag:=exec('FindAndGet','#table',ZK_N,_link,,"ZK_N.MG",''))=type_of(null())
         ||
            USERS_UP.cntx_psh();
            USERS_UP.index('MG');
            USERS_UP.prefix(OPERATOR.USER,'MG',_oddz);
            USERS_UP.first();
            _mag:=USERS_UP.MG;
            USERS_UP.cntx_pop()
         ?};

         {? _oddz=''
         || _dobrze:=0;
            FUN.info('Nie odnaleziono nagłówka zamówienia: %1'@[exec('record','#to_string',_link)])
         ?};

         {? _dobrze
         || _oddz_ref:=exec('FindInSet','#table','ODDZ','KOD2',_oddz,,,1);
::   Wykluczenie dostępu na podstawie uprawnień do danych - oddziały
            {? ~exec('spr_upr','users','ODDZ',_oddz_ref)
            || _dobrze:=0
            ?}
         ?};

         {? _dobrze
::       Ustalenie parametrów sesji
         || __PARSES.setVal('OddzialLogProd',_oddz);
            __PARSES.setVal('Magazyn',_mag);
            ST.ODDZ:=_oddz
         || return(0)
         ?}
      ?};

      _maska:=exec('FindAndGet','#table',ZK_N,_link,,"name()");
      {? (_maska+2)<>'__'
      ||
         ZK_N.use(_maska);
         ZK_P.use((ZK_P.name()-2)+(_maska+2));
         ZAKR.ARCH_ROK:='20'+(_maska+2)
      ?}
::======================================================================================================================
   |? ref_tab(_link)=ZK_P
   ||
::    Ustalenie parametrów na podstawie przekazanego rekordu
      _dobrze:=1;
      _zkp:=exec('FindAndGet','#table',ZK_P,_link,,"ZK_P.N",'');
      _oddz:=exec('FindAndGet','#table',ZK_N,_zkp,,"ZK_N.ODDZ",'');
      {? ST.ODDZ<>_oddz
      ||
         {? _mag:=exec('FindAndGet','#table',ZK_N,_link,,"ZK_N.MG",'')=''
         ||
            USERS_UP.cntx_psh();
            USERS_UP.index('MG');
            USERS_UP.prefix(OPERATOR.USER,'MG',_oddz);
            USERS_UP.first();
            _mag:=USERS_UP.MG;
            USERS_UP.cntx_pop()
         ?};

         {? _oddz=''
         || _dobrze:=0;
            FUN.info('Nie odnaleziono nagłówka zamówienia: %1'@[exec('record','#to_string',_link)])
         ?};

         {? _dobrze
         || _oddz_ref:=exec('FindInSet','#table','ODDZ','KOD2',_oddz,,,1);
::   Wykluczenie dostępu na podstawie uprawnień do danych - oddziały
            {? ~exec('spr_upr','users','ODDZ',_oddz_ref)
            || _dobrze:=0
            ?}
         ?};

         {? _dobrze
::       Ustalenie parametrów sesji
         || __PARSES.setVal('OddzialLogProd',_oddz);
            __PARSES.setVal('Magazyn',_mag);
            ST.ODDZ:=_oddz
         || return(0)
         ?}
      ?};

      _link_p:=exec('FindAndGet','#table',ZK_P,_link,,"N",'');
      _maska:=exec('FindAndGet','#table',ZK_N,_link_p,,"name()");
      _maska_p:=exec('FindAndGet','#table',ZK_P,_link,,"name()");
      {? (_maska+2)<>'__'
      ||
         ZK_N.use(_maska);
         ZK_P.use(_maska_p);
         ZAKR.ARCH_ROK:='20'+(_maska+2)
      ?}
   ?};

   {? ref_tab(_link)=ZK_N & ZK_N.seek(_link)
         ||
            _kh:=ZAKR.KH;
            _han:=ZAKR.H;
            _us:=OPERATOR.USER;
            ZAKR.US:=null;
            ZAKR.KH:=null;
            ZAKR.HAN:=null
         |? ref_tab(_link)=ZK_P & ZK_P.seek(_link)
         || {? ZK_N.seek(ZK_P.N)
            ||
               _kh:=ZAKR.KH;
               _han:=ZAKR.H;
               _us:=OPERATOR.USER;
               ZAKR.US:=null;
               ZAKR.KH:=null;
               ZAKR.HAN:=null ?}

         || FUN.info('Nie odnaleziono zamówienia lub pozycji \n%1.'@[exec('record','#to_string',_link)])
   ?}
?};

__typzsp:=sql(_sql,_p3014);
:: okienko typów zamówień
__typz_w:=__typzsp.mk_sel('Typy zamówień'@,'T',0,'__typzwe_win',,,,,'U','T');
__typzsp.win_fld(__typz_w,,'T',,,8,,0,'Typ'@);
__typzsp.win_fld(__typz_w,,'NAZ',,,32,,0,'Nazwa'@);
__typzsp.win_act(__typz_w,0,'Szukaj');
__typzsp.win_act(__typz_w,0,'Kolejność');

:: okienko zakresu
__zakr_w:=ZAKR.mk_edit('Zakres zamówień'@,,'#zamwew_zakres');
ZAKR.win_ewin(__zakr_w,,'ZAM_W');
ZAKR.win_ebtn(__zakr_w,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1,edit=0'['&Zmień'@]
 ,"edit_start(); '' ");
exec('ok_esc','#window',ZAKR,__zakr_w);

_win_grp:=ZK_N.grp_make(,"params_exec('zamwew_be','lmg')",'zamwew_grp',,,"exec('exit','zws',_a)");

{? exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_ZPTM')
|| ZK_N.grp_sel(_win_grp,__typzsp,__typz_w,'Zamówienia wewnętrzne'@,"exec('zamwew_typ_ar','lmg')"
    ,,,10,"params_exec('zamwew_typ_be','lmg')",,,,'maximized');
   __typzsp.win_sopt(__typz_w,'select_record_checkbox=0');
::   ZK_N.tab_splt(_win_grp,'tab0','horizontal','zakres');
::   ZK_N.grp_edit(_win_grp,ZAKR,__zakr_w,,"exec('zamwew_zakr_ar','lmg')",,,,'maximized','zamwew_zakr');
   ZK_N.tab_splt(_win_grp,,'vertical','zam','0, 20%');
   ZK_N.grp_sel(_win_grp,,'WERW',,"exec('zamwew_zk_n_ar','lmg')",,,23,,,,,'maximized'
    ,'zamwew_zk_n',1);
   ZK_N.tab_splt(_win_grp,'zam','horizontal','info','0, 67%');
   ZK_N.grp_edit(_win_grp,,'INFW',,,"exec('zamwew_info_be','lmg')",,, 'maximized');
   ZK_N.grp_sel(_win_grp,M,'STANY_UP','Stany magazynowe'@,"",,,23,"exec('stan_mg_up','magazyn_stan','W')",,,,'maximized');
   ZK_N.tab_splt(_win_grp,'tab0','vertical','stany','0, 80%');
   _far:="";
   _fb:="";
   exec('addsmmag','magazyn_stan');
   ZK_N.grp_sel(_win_grp,__smmag,__smmag.win_sel('?'),,_far,,,23,_fb,,,,'maximized');
   __smmag.win_sopt(__smmag.win_sel('?'),'select_record_checkbox=0');
   _far:="";
   _fb:="exec('pr_allZPoz','lmg')";
   _fa:="{? ~ZK_P.sel_size() || ZK_P.f_clear() ?}";
   ZK_N.grp_sel(_win_grp,ZK_P,'ALLW','Pozycje dokumentów'@,_far,,,23,_fb,_fa,,,'maximized');
   _far:="";
   _fb:="exec('pr_allZReal','lmg')";
   _fa:="exec('done_zaz','zamsiw_rea','ZK_RN');
   {? ~ZK_RN.sel_size() || ZK_RN.f_clear() ?}";
   ZK_N.grp_sel(_win_grp,ZK_RN,'ALLWERW','Realizacje zamówień'@,_far,,,23,_fb,_fa,,,'maximized')
|| ZK_N.grp_sel(_win_grp,__typzsp,__typz_w,'Zamówienia wewnętrzne'@,"exec('zamwew_typ_ar','lmg')"
    ,,,10,"params_exec('zamwew_typ_be','lmg')",,,,'maximized');
::   ZK_N.tab_splt(_win_grp,'tab0','horizontal','zakres');
::   ZK_N.grp_edit(_win_grp,ZAKR,__zakr_w,,"exec('zamwew_zakr_ar','lmg')",,,,'maximized');
   ZK_N.tab_splt(_win_grp,,'vertical','zam');
   ZK_N.grp_sel(_win_grp,,'WERW',,"exec('zamwew_zk_n_ar','lmg')",,,23,,,,,'maximized_with_title','zamwew_zk_n',1);
   ZK_N.tab_splt(_win_grp,'zam','horizontal','info');
   ZK_N.grp_edit(_win_grp,,'INFW',,,"exec('zamwew_info_be','lmg')",,, 'maximized');
   _far:="";
   _fb:="exec('pr_allZPoz','lmg')";
   _fa:="{? ~ZK_P.sel_size() || ZK_P.f_clear() ?}";
   ZK_N.grp_sel(_win_grp,ZK_P,'ALLW','Pozycje dokumentów'@,_far,,,23,_fb,_fa,,,'maximized_with_title');
      _far:="";
   _fb:="exec('pr_allZReal','lmg')";
   _fa:="exec('done_zaz','zamsiw_rea','ZK_RN');
   {? ~ZK_RN.sel_size() || ZK_RN.f_clear() ?}";
   ZK_N.grp_sel(_win_grp,ZK_RN,'ALLWERW','Realizacje zamówień'@,_far,,,23,_fb,_fa,,,'maximized_with_title')
?};

ZK_N.win_sel(_win_grp);

ZK_N.win_fml('WERW',,'SYM',,'ICON_BEFORE',exec('zknag_sym_ib','zamsiw_nag'));
ZK_N.win_fml('WERW',,'DP',,'ICON_BEFORE',exec('zknag_tra_ib','zamsiw_nag'));
ZK_N.win_fml('WERW',,'STAN',,'ICON_BEFORE',exec('zknag_sym_ob','zamsiw_nag'));
ZK_P.win_fml('ALLW',,'N','SYM','ICON_BEFORE',exec('zknag_sym_ib','zamsiw_nag'));
ZK_P.win_fml('ALLW',,'N','DP','ICON_BEFORE',exec('zknag_tra_ib','zamsiw_nag'));
ZK_P.win_fml('ALLW',ZK_N,'STAN',,'ICON_BEFORE',exec('zknag_sym_ob','zamsiw_nag'));

{? __typzsp.size()
|| exec('init','lmg');
   AreaTitle.setTabWin(ZK_N,~~);
   AreaTitle.setTitle();
      {? _link<>''
      ||
         VAR_DEL.delete('__spr_z_2');
         __spr_z_2:=1;
         {? ref_tab(_link)=ZK_N & ZK_N.seek(_link)
         ||
            ZK_N.select(,1,5,,,,1);
            ZAKR.KH:=_kh;
            ZAKR.HAN:=_han;
            ZAKR.US:=_us
         |? ref_tab(_link)=ZK_P & ZK_P.seek(_link)
         ||
            {? ZK_N.seek(ZK_P.N)
            ||
               VAR_DEL.delete('__spr_z');
               __spr_z:=1;
               ZK_N.select(,1,5,,,'Y',1);
               ZAKR.KH:=_kh;
               ZAKR.HAN:=_han;
               ZAKR.US:=_us ?}
         || FUN.info('Nie odnaleziono zamówienia lub pozycji \n%1.'@[exec('record','#to_string',_link)])
         ?}
      || ZK_N.select()
      ?}
|| FUN.info('Brak uprawnionych typów zamówień wewnętrznych.\n'
           'Przegląd zamówień wewnętrznych nie jest możliwy.'@)
?};
VAR_DEL.delete('__typzsp','__typz_w','__zakr_w');
~~


\zamwew_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przed obsługą dla okienka grupowego
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
__typzsp.first();
:: Ustawienie się na domyślnym typie zamówienia
_tr:=exec('get','#params',3015,2,OPERATOR.USER);
__typzsp.find_key(_tr,_tr);
grp_disp(__typzsp,__typz_w);
exec('zakr_get','zamsiw_nag');
:: grp_edisp(ZAKR,__zakr_w);
BEER.TYPYZAM:=exec('FindAndGet','#table',TYPYZAM,__typzsp.REF,,,null());
exec('zakr_set_wew','zamsiw_nag',0);
~~


\zamwew_typ_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Po odświeżeniu dla __typzsp
::----------------------------------------------------------------------------------------------------------------------
_old:=BEER.TYPYZAM;
BEER.TYPYZAM:=exec('FindAndGet','#table',TYPYZAM,__typzsp.REF,,,null());
{? BEER.TYPYZAM=null()
|| ZK_N.index('GRP_KEY'); ZK_N.prefix('xxx')
|| exec('zakr_set_wew','zamsiw_nag',_old=BEER.TYPYZAM)
?};
grp_disp(ZK_N,'WERW');
grp_edisp(ZK_N,'INFW');
~~


\zamwew_typ_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przed obsługą dla __typzsp
::----------------------------------------------------------------------------------------------------------------------
_params:=params_get();
{? type_of(_params)>0 & var_pres('LINK',_params)>0 & __spr_z_2
|| _link:=_params.LINK;
   __spr_z_2:=0
|| _link:=''
?};

{? _link<>''
|| ref_tab(_link)=ZK_N & ZK_N.seek(_link);
_filtrtyp:=ZK_N.T
|| _filtrtyp:=exec('FindAndGet','#table',ZK_N,FILTER.ZK_N,,"T",null()) ?};
{? BEER.TYPYZAM<>_filtrtyp
|| _ref:=__typzsp.ref();
   {? __typzsp.f_active()
   || {? __typzsp.f_first()
      || {!
         |? {? __typzsp.REF=$_filtrtyp
            || _ref:=null();
               0
            || __typzsp.f_next()
            ?}
         !}
      ?};
      {? _ref<>null() || __typzsp.f_seek(_ref) ?}
   || {? __typzsp.first()
      || {!
         |? {? __typzsp.REF=$_filtrtyp
            || _ref:=null();
               0
            || __typzsp.next()
            ?}
         !}
      ?};
      {? _ref<>null() || __typzsp.seek(_ref) ?}
   ?}
?};
BEER.TYPYZAM:=exec('FindAndGet','#table',TYPYZAM,__typzsp.REF,,,null());
~~


\zamwew_zakr_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Po odświeżeniu dla ZK_N
::----------------------------------------------------------------------------------------------------------------------
exec('zakr_set_wew','zamsiw_nag',0);
exec('zamwew_zk_n_ar','lmg','WERW',0);
grp_disp(ZK_N,'WERW');
~~


\zamwew_zk_n_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Po odświeżeniu dla ZK_N
::   WE: [_a] - akronim okienka
::       [_b] - 1-grp_disp (domyślnie) 0-nie
::----------------------------------------------------------------------------------------------------------------------
_win:={? var_pres('_a')<>type_of('') | _a='' || cur_win(1,1) || _a ?};
_disp:={? var_pres('_b')<>type_of(0) || _b:=1 || _b ?};

_sel:=ZK_N.sel_size();
{? {? ZK_N.f_active() || {? _disp || _sel | ZK_N.f_get() || 1 ?} || ZK_N.get() ?}
|| DISP.CTRLMG:={? ZK_N.E='2' | ZK_N.MG<>null()
                || 1
                || exec('get','#params',{? ZK_N.LIM<>'T' || 3540 || 3542 ?},2,OPERATOR.USER)<>'T'
                ?};
   ZK_N.actions_grayed(_win,'');
   _msk:=ZK_N.name()+2;
   _czykpl:={? ZK_N.E<>'2' & (';TP'*exec('get','#params',600702,2))>1 || '' || 'W' ?};
   _inftra:={? ~exec('czyTRANSPORT','transport_wspolne',ZK_N.uidref()) || 'N(B(I))' || '' ?};
   _czydtr:={? ZK_N.STAT_REJ='T' & ZK_N.STAN<>'ZRE' & ZK_N.LIM<>'T'
             & exec('czyTR_NZL','transport_wspolne',ZK_N.uidref())
            || ''
            || 'N(B(T))'
            ?}+
            {? exec('czyTR_NZL','transport_wspolne',ZK_N.uidref(),1) || 'U' || '' ?};
   _czywyc:={? _msk<>'__'
             | ZK_N.STAT_REJ='T' & ~exec('chk_role','#b__box',OPERATOR.USER,'LMG_ZAM_DRZA')
             | ZK_N.STAT_REJ='Z' & ~exec('chk_role','#b__box',OPERATOR.USER,'LMG_ZAM_DRZK')
             | ZK_N.STAT_REJ='N'
            || 'W'
            || ''
            ?};
   _prod:=exec('tte_lic','tte');
   _www:=0;
   _czyrea:={? exec('FindInSet','#table','ZK_RN','ZAM',ZK_N.ref())=null() || 'I' || '' ?};
   _lim:={? ZK_N.LIM='T' || 'N' || '' ?};

::   {? ZK_N.LIM='T'
::   || ZK_N.actions('WERW',{? _prod='N' || 'UPI(KAEX)' || 'AWUPI(K)' ?},,1)
::   || ZK_N.actions('WERW',{? _prod='N' || 'I(AEX'+{? _www || 'K' || '' ?}+')' || {? _www || 'I(K)' || '' ?} ?},,1)
::   ?};
   _actions:=_czyrea+
      {? ZK_N.T().MOB<>'T' || 'W'  || '' ?}+
      {? ~((#ZK_N.E)%*2)   || _czykpl+{? DISP.CTRLMG || 'R' || '' ?} || '' ?}+
      {? _msk<>'__'        || 'RDPUZAWEN(PAŻJODCKWNEŚÓB(TI))TR:DE'
      |? ZK_N.LIM='T'      || {? _prod='N' || 'UPN(KAEX)' || 'AZUPN(K)N(HW)' ?}+_czydtr
      |? ZK_N.STAT_REJ='N' || 'WRAN(H'+_czywyc+')'+_czydtr+_inftra
      |? ZK_N.STAT_REJ='Z' || 'WRUZT(D)N(H'+_czywyc+_lim+')'+_czydtr+_inftra
      |? ZK_N.STAT_REJ='T' || 'AUZN(H'+_czywyc+_lim+')'+_czydtr+_inftra
      |? ZK_N.STAT_REJ='A' || 'PUZARWN(PJHWNODŻ)'+_czydtr+_inftra
      || ''
      ?};
   _pactions:=Plugin.run('SEL_ACTIONS_001','ZK_N',_actions);
   ZK_N.actions_grayed(_win,{? _pactions<>'*' || _pactions || _actions ?})
|? ~ZK_N.size()
|| ZK_N.actions_grayed(_win,'');
   _msk:=ZK_N.name()+2;
   _actions:=
      {? _msk<>'__'        || 'RIŻDPUZAWEN(PAŻJODCKWNEŚB(TI))T:DE'
      || ''
      ?};
   ZK_N.actions_grayed(_win,_actions)
?};
{? _disp || grp_edisp(ZK_N,'INFW') ?};
~~


\zamwew_info_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przed obsługą dla ZK_N INFO
::----------------------------------------------------------------------------------------------------------------------
_win_red:='INFW';
_enable:={? {? ZK_N.f_active() || ZK_N.f_size() || ZK_N.size() ?} || 'enable=1' || 'enable=0' ?};
ZK_N.efld_opt(_win_red,_enable,,'ZL');
ZK_N.efld_opt(_win_red,_enable,,'WYD');
ZK_N.efld_opt(_win_red,_enable,,'US');
ZK_N.efld_opt(_win_red,_enable,,'PR');
~~


\zam_zakr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: ustalenie zakresu dla zamowien
::  OLD: \zam_zakr/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_zakr_w:=ZAKR.mk_edit('Zakres zamówień'@,,'#zamwew2zakres');
ZAKR.win_ewin(_zakr_w,,'ZAM_W');
exec('ok_esc','#window',ZAKR,_zakr_w);

ZAKR.win_edit(_zakr_w);
{? ZAKR.edit()
|| exec('zamwew_zakr_ar','lmg')
::   grp_edisp(ZAKR,__zakr_w)
?}


\zkn_parametry
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zmiana parametrów pracy obszaru LMG_ZAM
::----------------------------------------------------------------------------------------------------------------------
_oddz:=ST.ODDZ;
{? __PARSES.editDom('LMG')
|| {? _oddz<>ST.ODDZ
   || exec('init','lmg');
      exec('zakr_set_wew','zamsiw_nag',0);
      AreaTitle.setTitle();
      grp_disp(ZK_N,'WERW')
   || AreaTitle.setTitle()
   ?};
   ''
?}


\parses_nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła ustala PARSES dla ND
::   WE: UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;

_result:=1;

{? var_pres('ND',_in)=type_of(null()) & _in.ND
|| ND.cntx_psh();
   ND.use(ref_name(_in.ND));
   ND.prefix();
   {? ND.seek(_in.ND)
   || __PARSES.setVal('OddzialLogProd',ND.ODDZ);
      __PARSES.setVal('Magazyn',ND.MAG);
      _args:=__PARSES.args('OkresRok');
      _args.OBSZAR:='LMG';
      _args.AR:=ND.AR;
      _args.AM:=ND.AM;
      __PARSES.setVal('OkresRok',_args);
      _result:=1
   ?};
   ND.cntx_pop()
|? var_pres('FAKS',_in)=type_of(null()) & _in.FAKS
|| FAKS.cntx_psh();
   FAKS.use(ref_name(_in.FAKS));
   FAKS.prefix();
   {? FAKS.seek(_in.FAKS)
   || __PARSES.setVal('OddzialLogProd',FAKS.ODDZ);
      _args:=__PARSES.args('OkresRok');
      _args.OBSZAR:='LMG';
      _args.AR:=FAKS.AR;
      _args.AM:=FAKS.AM;
      __PARSES.setVal('OkresRok',_args);
      _result:=1
   ?};
   FAKS.cntx_pop()
?};

_result


\lmg_mob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Główna formuła wywoływacza LMG_MOB - Mobilne magazyny
::----------------------------------------------------------------------------------------------------------------------
exec('init','lmg');
exec('operac_sel','magazyn_mob',exec('get','#params',600701,2),'M')


\permissions_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Sprawdzenie uprawnień
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WE: _a - 0-nie sprawdzać uprawnień do magazynów, 1-sprawdzać uprawnienia do magazynów
::   WY: 0-brak uprawnień, 1-są uprawnienia
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || _a:=1 ?};

_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

_service:=_mp.isService();
{? ~_service
||
:: Sprawdzenie uprawnień obszaru
   _opis:=obj_new('TXT'); _opis.TXT:='';
   params_set('in',_in,'user',OPERATOR.USER,'mp',_mp,'opis',_opis);
   {? exec('permissions_domain','lmg')=0
   || _txt:='Brak uprawnień do uruchomienia czynności.'@;
      {? _opis.TXT<>'' || FUN.info(_txt+'\n\n'+_opis.TXT) ?};
      _mp.error(_txt);
      return(0)
   ?};
:: Sprawdzenie uprawnień czynności
   params_set('in',_in,'user',OPERATOR.USER,'mp',_mp,'out',_out);
   _err:=exec('permissions','lmg',_a);
   {? _err<0
   || _txt:={? _err=-1 || 'Brak uprawnień do typu dokumentu w danym magazynie. Czynność nie zostanie uruchomiona.'@
            |? _err=-2 || 'Nie określony rok w parametrach. Czynność nie zostanie uruchomiona.'@
            |? _err=-3 || 'Brak uprawnień do oddziału. Czynność nie zostanie uruchomiona.'@
            || 'Brak uprawnień do uruchomienia czynności.'@
            ?};
      FUN.info(_txt);
      _mp.error(_txt);
      return(0)
   ?}
?};
1


\lmg_opk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Główna formuła wywoływacza LMG_OPK - Opakowania
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__czywyb');
{? ~exec('opk_permissions','magdok_wspolne')
|| FUN.info('Brak w systemie magazynów opakowań.'@);
   return(0)
?};
exec('init','lmg');

_env:=exec('env','opakow_stany');
params_set('env',_env);

__czywyb:=0;
__stn:=exec('chk_role','#b__box',OPERATOR.USER,'LMG_OPK_PSOP');
__rej:=exec('chk_role','#b__box',OPERATOR.USER,'LMG_OPK_POPK');
__add:=exec('chk_role','#b__box',OPERATOR.USER,'LMG_OPK_DPOP');

__opak:=tab_tmp(,'OPAK','STRING[20]','OPAK');

_fb:="
   _env:=params_get().env;
   params_set(params_get());
   {? __rej | __add || _env.DOK_OPAK_POZ:=4 ?};
   {? __stn | __add || _env.STANY_MAG_MAG_POZ:=_env.MAG.size() ?};
   {? __rej | __add || grp_disp(__mg_opak,__mg_sel)
   |? __stn | __add || grp_disp(_env.MAG,_env.stany_mag_wer_mag)
   ?}
";
_grp:=__opak.grp_make('Opakowania'@,_fb,'opakowania',,,"exec('exit','zws')",,'maximized');
{? __rej | __add || exec('opak_red','opakow',_grp) ?};
exec('stany','opakow_stany',__opak,_grp);
__opak.win_sel(_grp);
__opak.select();

VAR_DEL.delete('__opak','__czywyb','__stn','__rej','__add');
VAR_DEL.delete('__mg_opak','__mg_sel','__opkn_sel','__opkp_sel');
~~


\lmg_opk_param_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zmiana parametrów pracy obszaru LMG_OPK
::----------------------------------------------------------------------------------------------------------------------
BPMN.TYP_MG:='O';
_oddz:=ST.ODDZ;
_okr_ref:=ST.OKR_REF;
{? __PARSES.editDom('LMG')
|| {? _okr_ref<>ST.OKR_REF
   || FILTER.TYPYDOK:=null();
      FILTER.ND:=null();
      {? DK.f_active() || DK.f_clear() ?}
   ?};
   {? _oddz<>ST.ODDZ
   ||
      exec('init','lmg');
      _env:=params_get().env;
      _MAG:=_env.MAG;
      _MAG.prefix(ST.ODDZ);
      __mg_opak.prefix(ST.ODDZ);
      params_set(params_get());
      grp_disp(__mg_opak,__mg_sel)
   ?};
   OPAK_N.index('RMMP');
   {? __mg_opak.TREE_REF=0
   || OPAK_N.prefix(ST.AR,ST.AM,__mg_opak.MAGAZYN,'')
   || OPAK_N.prefix(ST.AR,ST.AM,__mg_opak.MAGAZYN,__mg_opak.PLUS)
   ?};
   OPAK_N.first();
   AreaTitle.setTitle()
?}


\lmg_int
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Główna formuła obszaru LMG_INT - Deklaracje INTRASTAT przywóz
::----------------------------------------------------------------------------------------------------------------------
:: Funkcja wołająca kartotekę materiałową w wersji 12.41
::exec('intrast','ist01');
_env:=exec('env','intrastat');

{? _env.initObszar('Przywóz')
|| _env.winMain();
   params_set('env',_env);
   AreaTitle.setArea('LMG_INT');
   AreaTitle.setTabWin(IST,_env.WIN_MAIN);
   AreaTitle.setTitle();
   _switch:=IST.select();
   _env.doneObszar();
   {? _switch || exec('lsp_int','lsp') ?}
?}


\pr_grp_dk_ln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przed obsługą okienko dla DK_LN
::----------------------------------------------------------------------------------------------------------------------
{? ST.MAG().SL='T'
|| exec('reorgmag','lmg')
|| tab_hide(2)
?};
1


\pd_grp_dk_ln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przed odświeżeniem okienko dla DK_LN
::----------------------------------------------------------------------------------------------------------------------
1


\reorgmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: dokumenty reorganizacji magazynu
::   WE: [_a] - ref DK_LN (domyslnie null)
::       [_a] - 'M'-miesięcznie (domyślnie) 'R'-rocznie
::  OLD: \reorgmag/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};
{? _>=2 || {? type_of(_b)<>2 || _b:=FILTER.STATUS ?} || _b:=FILTER.STATUS ?};

_menupth:=BEER.MENU_PTH;
BEER.MENU_PTH:='RR';
{? ST.MAG().SL<>'T'
|| FUN.info('Magazyn bez zastosowania wymiarów (lokalizacja, termin ważności).'@)
|| BEER.MENU_PTH:='MO';
   EANX.MG:=ST.MAG;
   EANX.WYLZAL:={? EANX.MG().MWS='T' || 'N' || 'T' ?};
   DK_LN.index('MG');
   {? FILTER.STATUS='M'
   || DK_LN.prefix(ST.MAG,ST.AR,ST.AM)
   || DK_LN.prefix(ST.MAG,ST.AR)
   ?};
   DK_LN.win_sel('WER');
   DK_LN.win_fml('WER',,'D',,'ICON_BEFORE',exec('dk_ln_stat_rej','magdok_wymiary'));
   DK_LN.win_fml('WER',,'RODZ',,'ICON_BEFORE',"exec('dk_ln_rodz','magdok_wymiary')");
   {? _a<>null() || DK_LN.seek(_a); DK_LN.select(,1) ?}
?};
{? _a<>null() || BEER.MENU_PTH:=_menupth ?};
~~


\lmg_mag_stn_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zapala lub wygasza akcje dla stanów wg wymiarów
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_ZLOK') | ST.MAG().SL<>'T'
|| SM.actions_grayed('STANY_ML','MO:')
|| SM.actions_grayed('STANY_ML','')
?};
~~


\lmg_reo_param_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zmiana parametrów pracy obszaru reorganizacji
::----------------------------------------------------------------------------------------------------------------------
BPMN.TYP_MG:='R';
_oddz:=ST.ODDZ;
_mg:=ST.MAG;
_okr_ref:=ST.OKR_REF;
_typydok:=TYPYDOK.ref();
{? __PARSES.editDom('LMG')
|| {? _okr_ref<>ST.OKR_REF | _mg<>ST.MAG
   || FILTER.TYPYDOK:=null();
      FILTER.ND:=null();
      {? _oddz<>ST.ODDZ || exec('init','lmg') ?};
      {? DK.f_active() || DK.f_clear() ?};
      {? _okr_ref<>ST.OKR_REF || ND.blank(0); DK.blank(0) ?};
      exec('typydok_'+exec('spr_uprTyp','lmg'),'lmg');
      {? {? TYPYDOK.f_active() || TYPYDOK.f_seek(_typydok) || TYPYDOK.seek(_typydok) ?}
      || BEER.TYPYDOK:=TYPYDOK.ref()
      ?};
      grp_disp(TYPYDOK,'TYP_MAG');
      {? FILTER.STATUS='M' || ND.index('NAGDOK') || ND.index('NAGROK') ?};
      {? {? TYPYDOK.f_active() || TYPYDOK.f_get() || TYPYDOK.get() ?}
      || ST.TYPYDOK:=BEER.TYPYDOK:=TYPYDOK.ref();
         {? FILTER.STATUS='M'
         || ND.prefix(ST.AR,ST.AM,ST.MAG,TYPYDOK.ref())
         || ND.prefix(ST.AR,ST.MAG,TYPYDOK.ref())
         ?};
         ND.first()
      || FUN.info('Brak uprawnionych typów dokumentów.\nObszar zostanie zamknięty.'@);
         sel_exit()
      ?};
      exec('reorgmag','lmg');
      exec('nd_actions','magdok_nag');
      grp_disp(ND,'WERP');
      exec('hideORshow','lmg');
      AreaTitle.setTitle()
   ?}
?}


\hideORshow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Pokazanie lub wygaszenie zakładek
::----------------------------------------------------------------------------------------------------------------------
{? AreaTitle.area<>'TTE_KOO'
|| {? (+BEER.HIDESHOW)=11
   || {? ST.MAG().SL<>'T' || tab_hide(2) || tab_show(2) ?};
      {? (1+(2-BEER.HIDESHOW))='0' || tab_hide(3) || tab_show(3) ?};
      {? (1+(3-BEER.HIDESHOW))='0' | ST.MAG().PAL<>'T' || tab_hide(4) || tab_show(4) ?};
      {? (1+(4-BEER.HIDESHOW))='0' | ST.MAG().MG_OPAK='' || tab_hide(5); tab_hide(6) || tab_show(5); tab_show(6) ?};
      {? (1+(7-BEER.HIDESHOW))='0' || tab_hide(9); tab_hide(10) || tab_show(9); tab_show(10) ?};
      {? (1+(9-BEER.HIDESHOW))='0' || tab_hide(11) || tab_show(11) ?};
      {? (1+(10-BEER.HIDESHOW))='0' || tab_hide(12) || tab_show(12) ?}
   ?}
?};
~~


\lmg_osm_param_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zmiana parametrów pracy obszaru stanów opakowań
::----------------------------------------------------------------------------------------------------------------------
BPMN.TYP_MG:='O';
_oddz:=ST.ODDZ;
_okr_ref:=ST.OKR_REF;
{? __PARSES.editDom('LMG')
|| {? _okr_ref<>ST.OKR_REF
   || FILTER.TYPYDOK:=null();
      FILTER.ND:=null();
      {? DK.f_active() || DK.f_clear() ?}
   ?};
   {? _oddz<>ST.ODDZ || exec('init','lmg') ?};
   _typydok:=TYPYDOK.ref();
   exec('typydok_'+exec('spr_uprTyp','lmg'),'lmg');
   {? {? TYPYDOK.f_active() || TYPYDOK.f_seek(_typydok) || TYPYDOK.seek(_typydok) ?}
   || BEER.TYPYDOK:=TYPYDOK.ref()
   |? {? TYPYDOK.f_active() || TYPYDOK.f_first()() || TYPYDOK.first() ?}
   || BEER.TYPYDOK:=TYPYDOK.ref()
   ?};
   grp_disp(TYPYDOK,'TYP_MAG');
   {? FILTER.STATUS='M' || ND.index('NAGDOK') || ND.index('NAGROK') ?};
   {? {? TYPYDOK.f_active() || TYPYDOK.f_get() || TYPYDOK.get() ?}
   || ST.TYPYDOK:=BEER.TYPYDOK:=TYPYDOK.ref();
      {? FILTER.STATUS='M'
      || ND.prefix(ST.AR,ST.AM,ST.MAG,TYPYDOK.ref())
      || ND.prefix(ST.AR,ST.MAG,TYPYDOK.ref())
      ?};
      ND.first()
   || FUN.info('Brak uprawnionych typów dokumentów.\nObszar zostanie zamknięty.'@);
      sel_exit()
   ?};
   exec('nd_actions','magdok_nag');
   grp_disp(ND,'WERP');
   exec('hideORshow','lmg');
   AreaTitle.setTitle()
?}


\lmg_bad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Główna formuła obszaru roboczego LMG_BAD - Badania i kwalifikacje dostaw
::  OLD: \kwalifikacjadst/statexam.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};
{? ~exec('bad_permissions','magdok_wspolne')
|| FUN.info('Brak uprawnień do magazynów typu DOSTAWY lub DOSTEWI.'@);
   return(0)
?};
exec('init','lmg');

AreaTitle.setTabWin(BADH,~~);

{? ~exec('chk_role','#b__box',OPERATOR.USER,'LMG_BAD_PKWA')
 & (exec('chk_role','#b__box',OPERATOR.USER,'LMG_BAD_PBAD')
  | exec('chk_role','#b__box',OPERATOR.USER,'LMG_BAD_DWYK')
  | exec('chk_role','#b__box',OPERATOR.USER,'LMG_BAD_EAKC'))
|| exec('Badania_sel_','statexam')
|| VAR_DEL.delete('__czywyb');
   __czywyb:=1;
   {!
   |? {? __czywyb
      || __czywyb:=0;
         AreaTitle.setTitle();
         exec('kwalifikacjadst','statexam')
      ?};
      __czywyb
   !};
   VAR_DEL.delete('__czywyb')
?};
~~


\lmg_bad_param_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zmiana parametrów pracy obszaru LMG_BAD
::----------------------------------------------------------------------------------------------------------------------
BPMN.TYP_MG:='D';
_oddz:=ST.ODDZ;
_okr_ref:=ST.OKR_REF;
{? __PARSES.editDom('LMG')
|| {? _okr_ref<>ST.OKR_REF
   || FILTER.TYPYDOK:=null();
      FILTER.ND:=null();
      {? DK.f_active() || DK.f_clear() ?}
   ?};
   {? _oddz<>ST.ODDZ || exec('init','lmg') ?};
   sel_exit();
   __czywyb:=1
?}


\permissions_domain
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na uprawnienia obszaru
::   WE: params_get().in - parametry wejściowe czynności
::       params_get().user - użytkownik dla którego sprawdzane są uprawnienia
::       params_get().mp - Menedżer Procesów
::   WY: 0 - użytkownik nie ma uprawnień do czynności
::       1 - użytkownik ma uprawnienia do czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_user:=params_get().user;
_mp:=params_get().mp;

_wyn:=1;

_opis:='';

:: Sprawdzenie czy jest ustawiony rok
{? _wyn
|| _wyn:=ST.AR>0;
   {? _wyn=0 || _opis+='\n- okresu' ?}
?};

{? _wyn=0 & var_pres('opis',params_get())
|| params_get().opis.TXT:='Brak uprawnień do:'+_opis
?};

_wyn


\permissions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na uprawnienia dla czynności
::   WE: params_get().in - parametry wejściowe czynności
::           params_get().user - użytkownik dla którego sprawdzane są uprawnienia
::           params_get().mp - Menedżer Procesów
::   WE: _a - 0-nie sprawdzać uprawnień do magazynów, 1-sprawdzać uprawnienia do magazynów
::   WY: 0 - użytkownik nie ma uprawnień do czynności
::       -1 - brak uprawnień do typu dokumentu
::       1 - użytkownik ma uprawnienia do czynności
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || _a:=1 ?};

_in:=params_get().in;
_out:=params_get().out;
_user:=params_get().user;
_mp:=params_get().mp;

_wyn:=0;
_res:=1;

_opis:='';
_mag:=ST.MAG;
_rok:=ST.AR;
_odd:=ST.ODDZ_REF;
{? var_pres('ND',_in)=type_of(null()) & ref_name(_in.ND)<>''
|| _mag:=exec('FindAndGet','#table',ND,_in.ND,,"MAG",ST.MAG);
   _rok:=exec('FindAndGet','#table',ND,_in.ND,,"AR",ST.AR);
   _ods:=exec('FindAndGet','#table',ND,_in.ND,,"ODDZ",ST.ODDZ);
   _odd:={? _ods<>'' || exec('FindInSet','#table','ODDZ','KOD2',_ods,_ods) || ST.ODDZ_REF ?};
   {? _odd=null() || _odd:=ST.ODDZ_REF ?}
|? var_pres('ND',_out)=type_of(null()) & ref_name(_out.ND)<>''
|| _mag:=exec('FindAndGet','#table',ND,_out.ND,,"MAG",ST.MAG);
   _rok:=exec('FindAndGet','#table',ND,_out.ND,,"AR",ST.AR);
   _ods:=exec('FindAndGet','#table',ND,_out.ND,,"ODDZ",ST.ODDZ);
   _odd:={? _ods<>'' || exec('FindInSet','#table','ODDZ','KOD2',_ods,_ods) || ST.ODDZ_REF ?};
   {? _odd=null() || _odd:=ST.ODDZ_REF ?}
?};

{? _a
|| _wyn:=exec('usr_upr','b_perm','MG',_mag,_user)
|| _wyn:=1
?};

{? _wyn=0 || _opis+='\n- magazynu' ?};

:: Sprawdzenie uprawnień do typu dokumentu
{? _wyn & var_pres('TYPYDOK',_in)=type_of(null()) & _in.TYPYDOK
|| _typydok:=exec('FindAndGet','#table',TYPYDOK,$_in.TYPYDOK,,,null());
   T2MG.cntx_psh();
   T2MG.index('T');
   T2MG.prefix(ST.MAG);
   {? T2MG.first() || _wyn:=T2MG.find_key(_typydok) ?};
   T2MG.cntx_pop();
   {? _wyn
   || _typy:=exec('get','#params',1001,2,_user);
      _typydok_t:=exec('FindAndGet','#table',TYPYDOK,$_in.TYPYDOK,,"TYPYDOK.T",'');
      {? form(_typy)<>'' || _wyn:=(_typy*(_typydok_t+' '))>0 ?}
   ?};

   {? _wyn=0 || _opis+='\n- typu dokumentu'; _res:=-1 ?}
?};

:: Sprawdzenie czy jest ustawiony rok
{? _wyn
|| _wyn:=_rok>0;
   {? _wyn=0 || _opis+='\n- okresu'; _res:=-2 ?}
?};

:: Sprawdzenie czy jest ustawiony oddział
{? _wyn
|| {? ST.ODDZ=''
   || _wyn:=0
   || _wyn:=exec('usr_upr','b_perm','ODDZ',_odd,_user)
   ?};
   {? _wyn=0 || _opis+='\n- oddziału'; _res:=-3 ?}
?};

{? _wyn=0 & var_pres('opis',params_get())>0
|| params_get().opis.TXT:='Brak uprawnień do:'+_opis
?};

{? _res<0 || _wyn:=_res ?};
_wyn


\zam_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wyswietlenie danych dodatkowych zamkniecia okresu
::       przed zamknieciem czesciowym beda tylko komunikaty o edycji dokumentow, bez blokady
::  OLD: \zam_dok/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? 1+OKR.ZAM<>'T'
||
::   exec('zamnlock','defin',OKR.ROK,OKR.MC);
::   exec('zamflock','defin',OKR.ROK,OKR.MC);
::   exec('zamok_a','defin');
::   exec('zamok_d','defin');
   OKRD.win_sel('WER');
   OKRD.win_edit('RED');
   OKRD.index('OKR');
   OKRD.prefix(OKR.ref);
   OKRD.select()
||
   FUN.info('Okres jest już zamknięty końcowo.'@)
?}


\lmg_dsa_param_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zmiana parametrów pracy obszaru LMG_DSM
::----------------------------------------------------------------------------------------------------------------------
BPMN.TYP_MG:='';
_oddz:=ST.ODDZ;
_okr_ref:=ST.OKR_REF;
{? __PARSES.editDom('LMG')
|| {? _okr_ref<>ST.OKR_REF
   || FILTER.TYPYDOK:=null();
      FILTER.ND:=null();
      {? DK.f_active() || DK.f_clear() ?}
   ?};
   {? _oddz<>ST.ODDZ || exec('init','lmg') ?};
   exec('stany_one','lmg',0,cur_win(1,1)='STANY2MG');
   exec('lmg_mag_stn_act','lmg');
   AreaTitle.setTitle()
?}


\lmg_dsm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Główna formuła obszaru roboczego LMG_DSM - Stany magazynowe
::----------------------------------------------------------------------------------------------------------------------
exec('init','lmg');

_params:=params_get();
{? type_of(_params)>0 & var_pres('LINK',_params)>0
|| _link:=_params.LINK
|| _link:=''
?};

BEER.ESC:=1;
{!
|? {? _link<>'' || params_exec('stany_one','lmg'); _link:=''; 1
   |? BEER.ESC=1
   || _win_grp:=SM.grp_make(,"",'stany_mag',,,"exec('exit','zws',_a)");
:: Stany magazynowe
      SM.grp_sel(_win_grp,SM,'STANY_MG','Stany magazynowe'@,"exec('pd_grp_sm','lmg')",,,25
       ,"exec('pr_grp_sm','lmg',1)",,,,'maximized');
:: Stany magazynowe druga jednostka
      SM.grp_sel(_win_grp,SM,'STANY2MG','Stany wg drugiej jm'@,"exec('pd_grp_sm2','lmg')",,,25
       ,"exec('pr_grp_sm2','lmg',1)",,,,'maximized');
:: Atesty
      SM.grp_sel(_win_grp,DK_AT,'WER','Atesty'@,"exec('pd_grp_Atest','lmg')",,,25
       ,"exec('pr_grp_Atest','lmg',1)",,,,'maximized');
      SM.win_sel(_win_grp);
      AreaTitle.setTabWin(SM,~~);
      AreaTitle.setTitle();
      VAR_DEL.delete('__SM_M');
      __SM_M:=SM.M;
      _fm:="{? var_pres('__SM_M')>0
            || {? __SM_M<>null() & SM.M<>__SM_M
               || SM.blank();
                  SM.M:=__SM_M;
                  {? ~SM.find_rec()
                  || SM.first()
                  ?}
               ?};
               VAR_DEL.delete('__SM_M')
            ?}";
      VAR.WGSTMG:=1;
      SM.select(,,,,,_fm);
      1
   |? BEER.ESC=2 || exec('stany_all','lmg'); 1
   || 0
   ?}
!}


\spr_uprTyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Sprawdza uprawnienia do czynności i ustala typ dokumentów do wyświetlenia
::   WY: napis - plus/minus/all domyślnie
::----------------------------------------------------------------------------------------------------------------------
_wyn:='all';
{? AreaTitle.area='TTE_KOO'
|| {? exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_DKOW') & ~exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_DKOP')
   || _wyn:='plus'
   |? exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_DKOP') & ~exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_DKOW')
   || _wyn:='minus'
   ?}
|| {? ~exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_PMAG')
   || {? exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_DAPZ')
      || _wyn:='plus'
      |? exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_DWYD')
      || _wyn:='minus'
      ?}
   ?}
?};
_wyn


\zakrMag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: ustawia zakres magazynów wg uprawnionych
::----------------------------------------------------------------------------------------------------------------------
MG.f_clear();
MG.f_set('ODDZ,SYM,NAZ');
{? MG.f_first()
|| {!
   |? _upr:=0;
      _oddz:=exec('FindInSet','#table','ODDZ','KOD2',MG.ODDZ,MG.ODDZ);
      _upr:=MG.ODDZ=ST.ODDZ & exec('usr_upr','b_perm','ODDZ',_oddz,OPERATOR.USER);
      {? _upr
      || _upr:=exec('usr_upr','b_perm','MG',MG.ref(),OPERATOR.USER)
      ?};
      {? _upr || MG.f_next() || MG.f_del() ?}
   !}
?};
MG.f_first();
~~


\pr_allDok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: przed dla wszystkich dokumentów
::----------------------------------------------------------------------------------------------------------------------
_nd:=ND.ref();
_tref:=TYPYDOK.ref();
_in:='(';
{? TYPYDOK.f_first() || {! |? _in+='\''+$TYPYDOK.ref()+'\','; TYPYDOK.f_next() !}; TYPYDOK.f_seek(_tref) ?};
_in:=(_in-1)+')';
{? (+_in)=1 || _in:='(\'\')' ?};
ND.sel_adel();
ND.prefix();
ND.f_clear();
ND.f_set('TYP(Z),TYP(P),D,NR',,'\"ND\".MAG=:_a and \"ND\".TYP in '+_in,ST.MAG);
ND.f_seek(_nd);
~~


\po_allDok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: po dla wszystkich dokumentów
::----------------------------------------------------------------------------------------------------------------------
DISP.DISP:=0;
BEER.TYPYDOK:=null;
{? ND.sel_size()=0
|| ND.f_clear()
|| __ND_FCLEAR:=1
?};
~~


\pd_allDok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: przed dla pozycji wszystkich dokumentów
::----------------------------------------------------------------------------------------------------------------------
DISP.DISP:=1;
{? ND.sel_size()
|| _size:=1
|? ND.f_active()
|| {? (_size:=ND.f_size()) || ND.f_get() ?}
|| {? (_size:=ND.size()) || ND.get() ?}
?};
DK.win_edit(DK.mk_edit());
DK.index('DOKMAG');
DK.prefix({? _size || ND.ref() || null() ?});
DK.actions_grayed('WER_POZ',{? ST.MAG().SL<>'T' || 'M' || '' ?});
grp_disp(DK,'WER_POZ',0,1);
{? ST.MAG().MG_OPAK<>'' | 1
|| exec('opak_wer','opakow',null);
   grp_disp(OPAK_P,'SEL',0,1)
?};
{? (ND.sel_size() | {? ND.f_active() || ND.f_size() || ND.size() ?})
   & (FILTER.STATUS='R' | ND.AM=ST.AM)
|| FILTER.TYPYDOK:=ND.TYP;
   FILTER.ND:=ND.ref()
|| FILTER.TYPYDOK:=null();
   FILTER.ND:=null()
?};
~~


\lmg_all_param_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zmiana parametrów pracy obszaru LMG_MAG, TTE_KOO - dla wszystkich dokumentów
::----------------------------------------------------------------------------------------------------------------------
{? AreaTitle.area='TTE_KOO'
|| BPMN.TYP_MG:='K'
|| BPMN.TYP_MG:=''
?};

_oddz:=ST.ODDZ;
_mg:=ST.MAG;
_okr_ref:=ST.OKR_REF;
_sts:=ST.STS;
_typydok:=TYPYDOK.ref();
{? {? exec('authorized','#b__box','LMG_MAG','LMG') || __PARSES.editDom('LMG')
   |? exec('authorized','#b__box','LMG_MAG','LZK') || __PARSES.editDom('LZK')
   |? exec('authorized','#b__box','LMG_MAG','LSP') || __PARSES.editDom('LSP')
   |? exec('authorized','#b__box','LMG_MAG','TTE') || __PARSES.editDom('TTE')
   || 0
   ?}
|| {? _mg<>ST.MAG | _okr_ref<>ST.OKR_REF | _sts<>ST.STS
   || FILTER.TYPYDOK:=null();
      FILTER.ND:=null();
      {? _oddz<>ST.ODDZ || exec('init','lmg') ?};
      {? DK.f_active() & 0 || DK.f_clear() ?};
      {? _okr_ref<>ST.OKR_REF || ND.blank(0); DK.blank(0) ?};
      exec('typydok_'+exec('spr_uprTyp','lmg'),'lmg');
      {? {? TYPYDOK.f_active() || TYPYDOK.f_seek(_typydok) || TYPYDOK.seek(_typydok) ?}
      || BEER.TYPYDOK:=TYPYDOK.ref()
      ?};
      ND.index('EAN');
      ND.prefix(ST.MAG);
      ND.first();
      exec('nd_actions','magdok_nag');
      exec('pr_allDok','lmg');
      exec('lmg_mag_stn_act','lmg');
      exec('hideORshow','lmg');
      exec('pr_allPoz','lmg');
      AreaTitle.setTitle()
   ?}
?}


\parses_dk_ln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła ustala PARSES dla DK_LN
::   WE: UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;

_result:=1;

{? var_pres('DK_LN',_in)=type_of(null()) & _in.DK_LN
|| DK_LN.cntx_psh();
   DK_LN.use(ref_name(_in.DK_LN));
   DK_LN.prefix();
   {? DK_LN.seek(_in.DK_LN)
   || _oddz:=(6+DK_LN.name())+1;
      __PARSES.setVal('OddzialLogProd',_oddz);
      __PARSES.setVal('Magazyn',DK_LN.MG);
      _args:=__PARSES.args('OkresRok');
      _args.OBSZAR:='LMG';
      _args.AR:=DK_LN.AR;
      _args.AM:=DK_LN.AM;
      __PARSES.setVal('OkresRok',_args);
      _result:=1
   ?};
   DK_LN.cntx_pop()
|? var_pres('ND',_in)=type_of(null()) & _in.ND
|| ND.cntx_psh();
   ND.use(ref_name(_in.ND));
   ND.prefix();
   {? ND.seek(_in.ND)
   || __PARSES.setVal('OddzialLogProd',ND.ODDZ);
      __PARSES.setVal('Magazyn',ND.MAG);
      _args:=__PARSES.args('OkresRok');
      _args.OBSZAR:='LMG';
      _args.AR:=ND.AR;
      _args.AM:=ND.AM;
      __PARSES.setVal('OkresRok',_args);
      _result:=1
   ?};
   ND.cntx_pop()
|? var_pres('EANN',_in)=type_of(null()) & _in.EANN
|| EANN.cntx_psh();
   EANN.use(ref_name(_in.EANN));
   EANN.prefix();
   {? EANN.seek(_in.EANN)
   || _oddz:=(5+EANN.name())+1;
      __PARSES.setVal('OddzialLogProd',_oddz);
      _result:=1
   ?};
   EANN.cntx_pop()
?};

_result


\raport_sm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JF [2006]
:: OPIS: akcja zestawienia z okienka stanow
::  OLD: \sm_druk/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
SM.cntx_psh();
:rep_exec('lmg_sm_*');
exec('rep_exec','#b_report','LMG_MAG_XXXX','lmg_sm_*','Wydruki stanów magazynowych',1);
M.cntx_pop();
SM.cntx_pop();
~~


\sql_sm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.02]
:: OPIS: akcja zapytania SQL z okienka stanow
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
SM.cntx_psh();
exec('m_sql','#sql','LMG_MAG_ZPSM','Stan magazynu');
M.cntx_pop();
SM.cntx_pop();
~~


\raport_sm_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.02]
:: OPIS: akcja zestawienia z okienka stanow dla wszystkich magazynów
::----------------------------------------------------------------------------------------------------------------------
MG.cntx_psh();
M.cntx_psh();
SM.cntx_psh();
exec('rep_exec','#b_report','LMG_MAG_XXXX','lmg_msm_*','Wydruki stanów magazynowych',1);
MG.cntx_pop();
M.cntx_pop();
SM.cntx_pop();
~~


\sql_sm_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.02]
:: OPIS: akcja zapytania SQL z okienka stanow dla wszystkich magazynów
::----------------------------------------------------------------------------------------------------------------------
MG.cntx_psh();
M.cntx_psh();
SM.cntx_psh();
exec('m_sql','#sql','LMG_MAG_ZPTM','Stan magazynów');
MG.cntx_pop();
M.cntx_pop();
SM.cntx_pop();
~~


\pr_allPoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: przed dla wszystkich dokumentów
::----------------------------------------------------------------------------------------------------------------------
_dk:=exec('FindInSet','#table','DK','DOKMAG',1,ND.ref());
{? var_pres('__ND_FCLEAR')=type_of(0) & __ND_FCLEAR
|| {? ND.sel_size()>0
   || ND.sel_adel()
   ?};
   ND.f_clear();
   __ND_FCLEAR:=0
?};
_tref:=TYPYDOK.ref();
_in:='(';
{? TYPYDOK.f_first() || {! |? _in+='\''+$TYPYDOK.ref()+'\','; TYPYDOK.f_next() !}; TYPYDOK.f_seek(_tref) ?};
_in:=(_in-1)+')';
{? (+_in)=1 || _in:='(\'\')' ?};
DK.sel_adel();
DK.index('ALL');
DK.prefix();
{? DK.sel_size() || DK.sel_adel() ?};
DK.f_clear();
DK.f_set('N(D),PLUS,N(SYM),P','join ND using(ND.REFERENCE,DK.N)','\"ND\".MAG=:_a and \"ND\".TYP in '+_in,ST.MAG);
DK.f_seek(_dk);
_dost:=ST.MAG().TYP*'DOST';
{? ~_dost || DK.actions('ALL','A',,1) || DK.actions('ALL','',,1) ?};
exec('pd_allPoz','lmg');
~~


\po_allPoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: po dla wszystkich dokumentów
::----------------------------------------------------------------------------------------------------------------------
DISP.DISP:=0;
BEER.TYPYDOK:=null;
{? ~DK.sel_size() || DK.f_clear() ?};
~~


\pd_allPoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: przed dla pozycji wszystkich dokumentów
::----------------------------------------------------------------------------------------------------------------------
DISP.DISP:=1;
{? (
      DK.sel_size()
      |
      {? DK.f_active() || DK.f_size() || DK.size() ?}
   )
   & (FILTER.STATUS='R' | DK.N().AM=ST.AM)
|| FILTER.TYPYDOK:=DK.N().TYP;
   FILTER.ND:=DK.N
|| FILTER.TYPYDOK:=null();
   FILTER.ND:=null()
?};
~~


\disp_all_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.02]
:: OPIS: wyświetlenie całego dokumentu
::   WE: [_a] - uidref ND
::----------------------------------------------------------------------------------------------------------------------
_uid:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || '' ?};
_refn:=null();
_refp:=null();

ND.cntx_psh();
DK.cntx_psh();
FAKS.cntx_psh();
{? _uid<>''
|| _msk:=form(8+(_uid+16));
   ND.use(_msk);
   DK.use('dokma'+(_msk+3));
   ND.prefix();
   {? ND.seek(_uid)
   || {? ND.FAKS_REF<>'' || FAKS.use(form(8+ND.FAKS_REF)) ?};
      _refn:=ND.ref();
      _refp:=exec('FindInSet','#table','DK','DOKMAG',ND.ref(),,,,,null());
      ND.SYM
   ?}
|| _refn:=DK.N;
   _refp:=DK.ref();
   DK.N().SYM
?};
_red:=exec('nd_win_edit_set','magdok_nag',1);

DK.index('DOKMAG');
DK.prefix(_refn);
DK.seek(_refp);
DK.N().SYM;
DISP.FAKS:=exec('zwr_symbol_fak','magdok_wspolne');
exec('dselWithNag','okienka','DK','WER_DOK','ND',_red);
ND.cntx_pop();
DK.cntx_pop();
FAKS.cntx_pop();
~~


\disp_all_zaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.02]
:: OPIS: wyświetlenie całego zamówienia
::   WE: [_a] - uidref ZK_N-a
::----------------------------------------------------------------------------------------------------------------------
_uid:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || '' ?};
_refn:=null();
_refp:=null();

ZK_N.cntx_psh();
ZK_P.cntx_psh();
{? _uid<>''
|| _msk:=form(8+(_uid+16));
   ZK_N.use(_msk);
   ZK_P.use('zkpoz'+(_msk+3));
   ZK_N.prefix();
   {? ZK_N.seek(_uid)
   || _refn:=ZK_N.ref();
      _refp:=exec('FindInSet','#table','ZK_P','NAG',ZK_N.ref(),,,,,null());
      ZK_N.SYM
   ?}
|| _refn:=ZK_P.N;
   _refp:=ZK_P.ref();
   ZK_P.N().SYM
?};
_edit:=ZK_N.win_edit('?');
_sele:=ZK_P.win_sel('?');
_red:=ZK_N.mk_edit('',,'zamwew_xxx');
ZK_N.win_ewin(_red,,'REDW');
ZK_N.win_edit(_red);
ZK_P.win_sel('ZAMW_DOK');
exec('set_efld_opt','zamsiw_nag');

ZK_P.index('NAG');
ZK_P.prefix(_refn);
ZK_P.seek(_refp);
exec('dselWithNag','okienka','ZK_P','ZAMW_DOK','ZK_N',_red,,'Zamówienie %1'@[ZK_P.N().SYM]);
ZK_N.win_edit(_edit);
ZK_P.win_sel(_sele);
ZK_N.cntx_pop();
ZK_P.cntx_pop();
~~


\DokMR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: pobranie desktopu
::----------------------------------------------------------------------------------------------------------------------
FILTER.STATUS:='M';

exec('filtrND','magdok_nag',FILTER.STATUS);
grp_disp(ND,'WERP',1,1);
~~


\pr_allZPoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: przed dla wszystkich pozycji zamówień
::----------------------------------------------------------------------------------------------------------------------
_zkp:=exec('FindInSet','#table','ZK_P','NAG',1,ZK_N.ref());
_tref:=__typzsp.ref();
_in:='(';
{? __typzsp.f_active()
|| {? __typzsp.f_first() || {! |? _in+='\''+__typzsp.REF+'\','; __typzsp.f_next() !}; __typzsp.f_seek(_tref) ?}
|| {? __typzsp.first() || {! |? _in+='\''+__typzsp.REF+'\','; __typzsp.next() !}; __typzsp.seek(_tref) ?}
?};
_in:=(_in-1)+')';
{? (+_in)=1 || _in:='(\'\')' ?};
ZK_P.prefix();
{? ZK_P.sel_size() || ZK_P.sel_adel() ?};
ZK_P.f_clear();
ZK_P.f_set('N(DP),N(SYM),POZ'
   ,'join ZK_N using(ZK_N.REFERENCE,ZK_P.N)'
   ,'\"ZK_P\".RODZ=\'W\' and \"ZK_N\".T in '+_in);
ZK_P.f_seek(_zkp);
~~


\pr_TR_NZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przed dla dyspozycji w magazynie
::   WE: _a - 'Z'-załadunek (domyślnie) 'R'-rozładunek
::----------------------------------------------------------------------------------------------------------------------
TR_NZL.cntx_psh();
_rodz:={? var_pres('_a')=type_of('') & (';ZR'*_a)>1 || _a || 'Z' ?};

TR_NZL.index('MG');
TR_NZL.prefix('TR_NZL',ST.MAG,_rodz);
exec('pd_TR_NZL','lmg',_rodz);
~~


\po_TR_NZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: po dla dyspozycji w magazynie
::   WE: _a - 'Z'-załadunek (domyślnie) 'R'-rozładunek
::----------------------------------------------------------------------------------------------------------------------
_rodz:={? var_pres('_a')=type_of('') & (';ZR'*_a)>1 || _a || 'Z' ?};
TR_NZL.cntx_pop();
{? ZAKR.PLMINALL='A' || params_exec('typydok_all','lmg')
|? ZAKR.PLMINALL='P' || params_exec('typydok_plus','lmg')
|? ZAKR.PLMINALL='M' || params_exec('typydok_minus','lmg')
?};
~~


\pd_TR_NZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przed dla dyspozycji w magzynie
::   WE: _a - 'Z'-załadunek (domyślnie) 'R'-rozładunek
::----------------------------------------------------------------------------------------------------------------------
_rodz:={? var_pres('_a')=type_of('') & (';ZR'*_a)>1 || _a || 'Z' ?};
_size:=TR_NZL.sel_size() | {? TR_NZL.f_active() || TR_NZL.f_size() || TR_NZL.size() ?};
TR_ZL.index('POZ');
TR_ZL.prefix({? _size || TR_NZL.ref() || null() ?});
grp_disp(TR_ZL,'MAG');
~~


\lmg_dsp_param_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Zmiana parametrów pracy obszaru LMG_MAG - od strony dyspozycji w magazynie
::----------------------------------------------------------------------------------------------------------------------
BPMN.TYP_MG:='';
_oddz:=ST.ODDZ;
_okr_ref:=ST.OKR_REF;
{? __PARSES.editDom('LMG')
|| {? _okr_ref<>ST.OKR_REF
   || FILTER.TYPYDOK:=null();
      FILTER.ND:=null();
      {? DK.f_active() || DK.f_clear() ?}
   ?};
   {? _oddz<>ST.ODDZ
   || exec('init','lmg');
      exec('init','ltr')
   ?};
   exec('pr_TR_NZL','lmg');
   exec('nd_actions','magdok_nag');
   grp_disp(ND,'WERP');
   exec('hideORshow','lmg');
   AreaTitle.setTitle()
?}


\pd_grp_sm2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed odświeżeniem okienko dla SM dla drugiej jednostki ewidencyjnej
::----------------------------------------------------------------------------------------------------------------------
1


\pr_grp_sm2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed obsługą okienko dla SM dla drugiej jednostki ewidencyjnej
::   WE: [_a] 0-wyłącz klawisz 1-włącz
::----------------------------------------------------------------------------------------------------------------------
_btn:={? var_pres('_a')=type_of(0) || _a || 0 ?};
{? ~_btn
|| SM.btn_sopt('STANY2MG','STN_ALL_MAG','state=grayed')
|| SM.btn_sopt('STANY2MG','STN_ALL_MAG','state=normal')
?};
exec('stany_one','lmg',0,1);
1


\biq_sm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Analiza BI w obszarze "Stany magazynowe"
::----------------------------------------------------------------------------------------------------------------------
exec('np_run','#b__box','BIQ_LMG_DSMA')


\biq_nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Analiza BI w obszarze "Dokumenty magazynowe"
::----------------------------------------------------------------------------------------------------------------------
exec('np_run','#b__box','BIQ_LMG_MAGA')


\pr_allZReal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: przed dla wszystkich realizacji zamówień
::----------------------------------------------------------------------------------------------------------------------
exec('init_zaz','zamsiw_rea','ZK_RN');
_zkrn:=exec('FindInSet','#table','ZK_RN','ZAM',ZK_N.ref());
_tref:=__typzsp.ref();
_in:='(';
{? __typzsp.f_active()
|| {? __typzsp.f_first() || {! |? _in+='\''+__typzsp.REF+'\','; __typzsp.f_next() !}; __typzsp.f_seek(_tref) ?}
|| {? __typzsp.first() || {! |? _in+='\''+__typzsp.REF+'\','; __typzsp.next() !}; __typzsp.seek(_tref) ?}
?};
_in:=(_in-1)+')';
{? (+_in)=1 || _in:='(\'\')' ?};
ZK_RN.prefix();
{? ZK_RN.sel_size() || ZK_RN.sel_adel() ?};
ZK_RN.f_clear();
ZK_RN.f_set('N(NR),DR,TR'
   ,'join ZK_N using(ZK_N.REFERENCE,ZK_RN.N)'
   ,'\"ZK_N\".T in '+_in);
ZK_RN.f_seek(_zkrn);
~~


\zakr_mag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: zakres dokumentów magazynowych
::----------------------------------------------------------------------------------------------------------------------
FILTER.win_edit('STATUS');
{? FILTER.edit()
|| exec('filtrND','magdok_nag',FILTER.STATUS);
   grp_disp(ND,'WERP',1,1);
   AreaTitle.setTitle()

?};
~~


\pr_Atest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: przed dla atestów
::----------------------------------------------------------------------------------------------------------------------
DK_AT.index('KOD');
DK_AT.prefix();
exec('po_Atest','lmg');
~~


\po_Atest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: po dla atestów
::----------------------------------------------------------------------------------------------------------------------
~~


\pd_grp_Atest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Przed odświeżeniem okienko dla DK_AT w stanach magazynowych
::----------------------------------------------------------------------------------------------------------------------
1


\pr_grp_Atest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed obsługą okienko dla DK_AT w stanach magazynowych
::----------------------------------------------------------------------------------------------------------------------
DK_AT.index('KOD');
DK_AT.prefix();
1

:Sign Version 2.0 jowisz:1045 2023/11/21 14:46:44 b3bfa23851e278306b6035d60303a2cf6dc6171019a15f75435c5dd17dca5c996fbd04bea6d830966785d48a1cbf90029b8c94ef10d8a36981f595d5cebd3633ae5637257b89da52afea8384ff66e32e7681737254a824d3af54bb47d5fb4c942787d74abf877eec7d921ebb3e7e5307c15ad840e8a85e28e3a5058cc45f95a1
