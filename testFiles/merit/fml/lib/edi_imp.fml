:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: edi_imp.fml
:: Utworzony: 08.06.2016
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Mechanizm importów
::======================================================================================================================


\mech_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: Mechanizm importu danych z innych systemów
::   WE: _a - 1-import, 2-definicje
::       _b - domena
::  OLD: \mech_imp/edison.fml
:: ~OST: INWINBTN
::----------------------------------------------------------------------------------------------------------------------
_opc:=_a;
_domain:=_b;
_win_grp:={? var_press('_c')>0 || _c || null ?};
_tab:={? var_press('_win_grp')>0 & _opc=1 || 1 || 0 ?};

EDI_Z.B_DOMAIN:={? _domain='' || null() || exec('FindInSet','#table','B_DOMAIN','SYMBOL',_domain) ?};

_wyn:=0;

EDI_I.cntx_psh();
{? 1
||
   VAR_DEL.delete('__selimp','__winimp','__gridef','__griimp','__wybopc','__nazsys','__nazxpe','__weredii','__ndxedii'
      ,'__weredji','__selimp_btnimp','__w_patt','__w_edit','__win_edit_i','__d_patt','__d_edit','__win_edit_d');

   __ndxedii:=EDI_I.ndx_tmp('',0,'ISTDEF',,0,'D',,1,'T',,1);

   __selimp:=tab_tmp(4,'TREE','TREE_REF','galazka'
              ,'LAB','STRING[100]','Etykieta'@
              ,'LP','INTEGER','lp'
              ,'SYM','STRING[20]','oznaczenie'
              ,'NAZ','STRING[100]','nazwa'
              ,'SQL','STRING[16]','ref SQL'
              ,'BLK','INTEGER','czy blokowane');
   __nazsys:=tab_tmp(2,'NAZ','STRING[20]','System'
              ,'NA2','STRING[20]','System'
              ,'OPIS','STRING[100]','Opis'
              ,'REF','INTEGER','wskazanie w drzewie');

   _Domain:=app_info('domain');
   _loop:=_Domain.first();
   {!
   |? _loop
   |!
      {? _domain='' | _Domain.SYMBOL=_domain
      || __nazsys.clear(); __nazsys.blank();
         __nazsys.NAZ:=__nazsys.NA2:=_Domain.SYMBOL;
         __nazsys.OPIS:=_Domain.NAME;
         __nazsys.add()
      ?};
      _loop:=_Domain.next()
   !};

   _win_sys:=__nazsys.mk_sel('Wybór systemów'@,'P',,'#inf_ediisys');
   __nazsys.win_fld(_win_sys,,'NAZ',,,20,,1,'Nazwa'@);
   __nazsys.win_fld(_win_sys,,'OPIS',,,30,,1,'Opis'@);
   __nazsys.win_act(_win_sys,0,'Formuła','&Przypisz'@@,,,"exec('addsysmi','edi_imp')",,1,1,"exec('addsysmi','edi_imp')",,'P');
   __nazsys.win_act(_win_sys,0,'Formuła','&Usuń przypisanie'@@,,,"exec('delsysmi','edi_imp')",,,1,"exec('delsysmi','edi_imp')",,'U');
   __nazsys.win_act(_win_sys,0,'Rekord',,,,"exec('reksysmi','edi_imp')");
   __nazsys.win_act(_win_sys,0,'Szukaj');
   __nazsys.win_sel(_win_sys);

   _win_sel:=__selimp.mk_sel('Mechanizm importów'@,'P',,'#inf_ediisel',,,__selimp.size(),1);
   __winimp:=_win_sel;

   __selimp.win_fld(_win_sel,,'LAB',,,28,,1,'',,'Etykieta importu'@);
   __selimp.win_fld(_win_sel,,'LP',,,5,,1,'Lp.'@,,'Liczba porządkowa'@);
   __selimp.win_fld(_win_sel,,'SYM',,,20,,1,'Symbol'@,,'Symbol identyfikujący import'@);
   __selimp.win_fld(_win_sel,,'NAZ',,,62,,1,'Nazwa'@,,'Pełna nazwa importu'@);

   __selimp.win_act(_win_sel,0,'Formuła','&Zwiń/rozwiń całość'@@,,'Zwijanie/rozwijanie całości'@,
             "exec('zwrw_all','#tree','__selimp','TREE',__winimp)",,1,,,,'Z');
   __selimp.win_act(_win_sel,0,'Formuła','&Dołącz'@@,,,"exec('addmechi','edi_imp')",,,,,,'D');
   __selimp.win_act(_win_sel,1,'Formuła','&Dołącz'@@,,,"exec('addmechi','edi_imp')",,,,,,'D');
   __selimp.win_act(_win_sel,0,'Formuła','&Popraw'@@,,,"exec('addmechi','edi_imp',1)",,,,,,'P');
   __selimp.win_act(_win_sel,0,'Formuła','&Usuń'@@,,,"exec('delmechi','edi_imp')",,,,,,'U');
   __selimp.win_act(_win_sel,1,'Formuła','Odśwież de&finicję'@@,,,"exec('odsmechi','edi_imp')",,,,,,'F');
   __selimp.win_act(_win_sel,0,'Formuła','Odśwież de&finicję'@@,,,"exec('odsmechi','edi_imp')",,,,,,'F');
   __selimp.win_act(_win_sel,0,'Formuła','K&opiuj'@@,,,"exec('copmechi','edi_imp')",,,,,,'O');
   __selimp.win_act(_win_sel,0,'Formuła','&Test importu'@@,,,"exec('tstmechi','edi_imp')",,,,,,'T');
   __selimp.win_act(_win_sel,0,'Menu','Pomoc&nicze'@,,,,,,,,,'N');
   __selimp.win_act(_win_sel,0,'Formuła','&Kody informacyjne'@@,'Pomoc&nicze'@,,"exec('mimpkodi','edi_imp')",,,,,,'K');
   __selimp.win_act(_win_sel,0,'Formuła','&Renumeracja pozycji'@@,'Pomoc&nicze'@,,"exec('mimprenu','edi_imp')",,,,,,'R');
   __selimp.win_act(_win_sel,0,'Formuła','--Y','Pomoc&nicze'@);
::   __selimp.win_act(_win_sel,0,'Formuła','&Importuj'@@,'Pomoc&nicze'@,,"exec('mimpdimp','edi_imp')",,,,,,'I');
::   __selimp.win_act(_win_sel,0,'Formuła','&Eksportuj'@@,'Pomoc&nicze'@,,"exec('mimpdexp','edi_imp')",,,,,,'E');
   __selimp.win_act(_win_sel,0,'Formuła','Spe&cyfikacja'@@,,,"exec('specmimp','edi_imp')",,,1,"exec('specmimp','edi_imp')",,'C');
::   {? _opc=2
::   || __selimp.win_btn(_win_sel,'text='+'&Importuj'@+
::         ',btn_label_align=center,panel=bottom,align=begin','menu:NI');
::      __selimp.win_btn(_win_sel,'text='+'&Eksportuj'@+
::         ',btn_label_align=center,panel=bottom,align=begin','menu:NE')
::   ?};
   {? _opc=1
   || _fb:="
         ISTDEF.cntx_psh();
         ISTDEF.prefix();
         {? ISTDEF.seek(__selimp.SQL)
         || _params:=exec('mp_run_a','#b__box');
            _params.ACT_UID:='ZWS_EDI_UNIW';
            _params.PROC_START:='T';
            _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
            exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYP',exec('edi_stale_txt','#b_port','M'));
            exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ISTDEF',ISTDEF.ref());
            exec('mp_run','#b__box',_params)
         ?};
         ISTDEF.cntx_pop()";
      __selimp.win_act(_win_sel,0,'Formuła','&Importuj'@@,,,_fb,,,,,,'I');
      _fb:="sel_exit()";
      __selimp_btnimp:=__selimp.win_btn(_win_sel,
         'text=%1,btn_label_align=center,panel=right,align=begin'['Importuj'@],'menu:I');
      __selimp.btn_opt(__selimp_btnimp,'tooltip='+'Uruchom import zaznaczonej definicji'@)
   ?};
   __selimp.win_act(_win_sel,0,'Formuła','Druku&j'@@,,,
                    "exec('wydrmimp','edi_imp')",,,1,"exec('wydrmimp','edi_imp')",,'J',,'icon=print');
   __selimp.win_act(_win_sel,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','__selimp#01')",,,,,,'L');
   __selimp.win_act(_win_sel,0,'Rekord',,,,"exec('rekmechi','edi_imp')");
   __selimp.win_act(_win_sel,0,'Szukaj');
   __selimp.win_act(_win_sel,0,'Kolejność');
   __selimp.win_act(_win_sel,0,'Wyświetl',,,,"exec('dispdefi','edi_imp')");

   __selimp.tr_fml(_win_sel,,"{? _a || {? __selimp.TREE=0 || 1 || _a ?} || _a ?}");
   __selimp.win_fml(_win_sel,,'LAB',,'ICON_BEFORE',"
            {? ~__selimp.TREE & (1+__selimp.SYM)='X'
            || 'xwin16.png:27'
            |? ~__selimp.TREE
            || {? EDI_Z.B_DOMAIN().SYMBOL=__selimp.LAB
               || 'xwin16.png:28'
               || 'xwin16.png:72'
               ?}
            |? (_wyn:=exec('sprdefmi','edi_imp'))
            || 'xwin16.png:'+form(_wyn)
            || ''
            ?}
        ");
   __selimp.win_sel(_win_sel);

:: okienko rejestracji informacji o importach
   _win_inf:=EDI_I.mk_sel('Dziennik importów'@,'P',,'#inf_ediiimp',,,,,'U');
   EDI_I.win_fld(_win_inf,,'D',,,10,,1,'Data rejestracji'@,,'Data uruchomienia importu'@);
   EDI_I.win_fld(_win_inf,,'T',,,8,,1,'Czas rejestracji'@,,'Czas uruchomienia importu'@);
   EDI_I.win_fld(_win_inf,,'SYM',,,20,,1,'Plik danych'@,,'Plik, z którego były odczytywane dane do importu'@);
   EDI_I.win_fld(_win_inf,,'FNAME',,,20,,1,'Log importu'@,,'Plik, w którym zapisano informacje o rezultacie importu'@);
   EDI_I.win_fld(_win_inf,,'US','DANE',,20,,1,'Rejestrował'@,,'Użytkownik, który uruchomił import'@);
   EDI_I.win_act(_win_inf,,'Menu','Log importu'@@,,'Informacja o wykonanym imporcie'@,,,,,,,'L');
   EDI_I.win_act(_win_inf,,'Menu','Plik danych'@@,,'Informacja o danych importowanych'@,,,,,,,'P');
   EDI_I.win_act(_win_inf,,'Formuła','&Pokaż'@@,'#L',,"exec('edi_i_zal','edi_wspolne')",,,,,,'P');
   EDI_I.win_act(_win_inf,,'Formuła','&Zapisz'@@,'#L',,"exec('edi_i_kop_zal','edi_wspolne')",,,,,,'Z');
   EDI_I.win_act(_win_inf,,'Formuła','&Pokaż'@@,'#P',,"exec('edi_i_pod','edi_wspolne')",,,,,,'P');
   EDI_I.win_act(_win_inf,,'Formuła','&Zapisz'@@,'#P',,"exec('edi_i_kop_pod','edi_wspolne')",,,,,,'Z');
   EDI_I.win_act(_win_inf,,'Szukaj');
   EDI_I.win_act(_win_inf,,'Kolejność');

   __w_patt:=EDI_I.win_patt('?');
   __w_edit:=EDI_I.win_edit('?');
   __win_edit_i:=EDI_I.mk_edit('Dziennik importów'@,0);
   EDI_I.win_efld(__win_edit_i,,'D',,,10,,,'Data rejestracji'@,,'Data uruchomienia importu'@);
   EDI_I.win_efld(__win_edit_i,,'T',,,8,,,'Czas rejestracji'@,,'Czas uruchomienia importu'@);
   EDI_I.win_efld(__win_edit_i,,'SYM',,,20,,,'Plik danych'@,,'Plik, z którego były odczytywane dane do importu'@);
   EDI_I.win_efld(__win_edit_i,,'FNAME',,,20,,,'Log importu'@,,'Plik, w którym zapisano informacje o rezultacie importu'@);
   EDI_I.win_efld(__win_edit_i,,'US','DANE',,30,,,'Zarejestrował'@,,'Użytkownik, który uruchomił import'@);
   EDI_I.win_edit(__win_edit_i);
   EDI_I.win_patt(__win_edit_i);

   __d_patt:=EDI_D.win_patt('?');
   __d_edit:=EDI_D.win_edit('?');
   __win_edit_d:=EDI_D.mk_edit('Pozycja importu'@,0);
   EDI_D.win_efld(__win_edit_d,,'LP',,,4,,,'Lp.'@);
   EDI_D.win_efld(__win_edit_d,,'K',,,10,,,'Kod komunikatu'@);
   EDI_D.win_efld(__win_edit_d,,'OP',,,60,,,'Opis komunikatu'@);
   EDI_D.win_efld(__win_edit_d,,'TAB',,,8,,,'Tabela'@);
   EDI_D.win_efld(__win_edit_d,,'FLD',,,8,,,'Pole'@);
   EDI_D.win_efld(__win_edit_d,,'FLF',,,60,,,'Formuła pola'@);
   EDI_D.win_efld(__win_edit_d,,'RL',,,60,,,'Formuła logiczna'@);
   exec('ok_esc','#window',EDI_D,__win_edit_d);
   EDI_D.win_edit('RED');
   EDI_D.win_patt(__win_edit_d);

   __weredii:=obj_new(16);
   __weredii[1]:=_win_inf;

   __gridef:=__selimp.grp_make('Mechanizm importów'@,,'mechimp_defi');
   __griimp:=__selimp.grp_make('EDI i mechanizm importów'@,,'mechimp_impo',,,"exec('exit','zws',_a)");
   __selimp.grp_sel(__gridef,__selimp,__winimp,,"exec('odswdefi','edi_imp')",,,12,,,,,'maximized_with_title');
   __selimp.grp_splt(__gridef,,'horizontal','tab1');
   __selimp.grp_sel(__gridef,EDI_D,'WERI',,,0,14,12,"exec('odswdef2','edi_imp')",,,,'maximized_with_title');
   __selimp.win_sel(__gridef);
   __selimp.grp_sel(__griimp,__selimp,__winimp,,"exec('odswimpo','edi_imp')",,,12,,,,,'maximized_with_title');
   __selimp.grp_splt(__griimp,,'horizontal','tab1');

   {? _tab
   ||
     _bef:="
:: dolne zakładki
         {? var_press('__bot_tab')=type_of(1)
         ||
            tab_hide(,1,'bottom');
            {? __bot_tab>0
            ||
               _int:=1;
               {!|?
                  tab_show(_int,'bottom');
                  _int+=1;
                  _int<=__bot_tab
               !}
            ?}
         ?};
         {? var_press('__win_edit_i')>0
         ||
            EDI_I.win_edit(__win_edit_i);
            EDI_I.win_patt(__win_edit_i);
            EDI_D.win_edit('RED');
            EDI_D.win_patt(__win_edit_d)
         ?}";
     ISTDEF.grp_sel(_win_grp,__selimp,__winimp,'Mechanizm importów'@,"exec('odswimpo','edi_imp')",,,,_bef,,,,'maximized'
     ,'mechimp_impo');
     ISTDEF.grp_splt(_win_grp,,'horizontal','bottom','15,50%')
   ?};

   _il:=0;
   _aktokr:=(date()~1);
   _lstokr:=_aktokr+9;
   VAR_DEL.delete('__okr','__bot_tab');
   __okr:=tab_tmp(1,'ROK','STRING[4]','');
   _msk:=EDI_I.names();
   _maski:=sql('select distinct substr(:_a.NAME,7,8) ROK from :_a order by 1',_msk);
   {? _maski.first()
   || {!
      |? _r2:=_maski.ROK;
         {? exec('allDigit','#valid',_r2,1)
         || _rok:=form(2000+(#(_r2)),,0,'99');
            _add:=0;
            {? (#_rok)<_aktokr
            || _lstokr-=1;
               _add:=1
            |? (#_rok)<=_lstokr
            || _add:=1
            ?};
            {? _add
            || __okr.clear();
               {? ~__okr.find_key(_rok)
               || __okr.blank();
                  __okr.ROK:=_rok;
                  __okr.add(1)
               ?}
            ?}
         ?};
         _maski.next()
      !};
      __okr.clear();
      {? ~__okr.find_key(form(_aktokr,,0,'99'))
      || __okr.blank();
         __okr.ROK:=form(_aktokr,,0,'99');
         __okr.add(1)
      ?}
   ?};
   obj_del(_msk);
   obj_del(_maski);
   {? __okr.first()
   || _rok:=(#__okr.ROK)-1;
      {!
      |? _new:=(#__okr.ROK);
         {? (_new-_rok)>1
         || _next:=__okr.next();
            {! _i:=(_rok+1)..(_new-1)
            |! __okr.blank();
               __okr.ROK:=form(_i,,0,'99');
               __okr.add(1)
            !};
            _rok:=(_i+1);
            _next
         || _rok:=_new;
            __okr.next()
         ?}
      !}
   || {! _i:=(_aktokr-3).._aktokr
      |! __okr.blank();
         __okr.ROK:=form(_i,,0,'99');
         __okr.add(1)
      !}
   ?};
   _nrzakl:=0;
   __okr.clear();
   __bot_tab:=0;
   {? __okr.last()
   || _bier:=__okr.ROK;
      {!
      |? EDI_I.cntx_psh();
         EDI_I.use('edi_i'+'_'+(__okr.ROK+2));
         EDI_I.clear();
         {? EDI_I.first() | 1
         || _il+=1;
            {? (#__okr.ROK)=_aktokr || _nrzakl:=_il ?};
            __weredii[_il]:=_win_inf;
            _form:=$('czy_dsp:=1;bie_r:='+__okr.ROK+';__weredji:=__weredii['+$_il+'];
            _ref:=exec(\'FindAndGet\',\'#table\',\'ISTDEF\',__selimp.SQL,,,null());
            EDI_I.use(\'edi_i\'+\'_\'+($bie_r+2));
            EDI_I.index(__ndxedii);
            EDI_I.prefix(_ref);
            EDI_I.first()');
            _forp:=$('bie_r:='+__okr.ROK+';__weredji:=__weredii['+$_il+'];
              {? czy_dsp=1 || grp_disp(EDI_I,__weredji,0,1) ?};czy_dsp:=0;exec(\'odswimp2\',\'edi_imp\')');
            __selimp.grp_sel(__griimp,EDI_I,__weredii[_il],__okr.ROK,_forp,0,14,12,_form,,,,'maximized_with_title');
            {? _tab
            ||
               __tab_num+=1;
               _ae:="__tab_id:=cur_win_id(1)";
              ISTDEF.grp_sel(_win_grp,EDI_I,__weredii[_il],__okr.ROK,_forp,0,14,12,_form,_ae,,,'maximized_with_title',
              'imp'+$__tab_num);
              __bot_tab+=1
            ?}
         ?};
         EDI_I.cntx_pop();
         __okr.prev() & _il<16
      !};
      bie_r:=_bier
   ?};
   VAR_DEL.delete('__okr');

::   tab_sel(_nrzakl,'tab1');
   __selimp.win_sel(__griimp);
   __weredji:=__weredii[1];

:: generacja galezi drzewa
   exec('mechinit','edi_imp',_opc,_domain);

   EDI_D.dnd_sel('WERI',,'records.EDI_D',"exec('renumedid','edi_defff')");
   __wybopc:=_opc; __selimp.first();
   {? ~_tab
   ||
      _wyn:=exec('mech2imp','edi_imp',__wybopc);
      EDI_D.dnd_sel('WERI',,'records.EDI_D',"");

      EDI_D.win_patt(__d_patt);
      EDI_D.win_edit(__d_edit);
      EDI_I.win_patt(__w_patt);
      EDI_I.win_edit(__w_edit);

      VAR_DEL.delete('__selimp','__winimp','__gridef','__griimp','__wybopc','__nazsys','__nazxpe','__weredii','__ndxedii'
         ,'__weredji','__selimp_btnimp','__w_patt','__w_edit','__win_edit_i','__d_patt','__d_edit','__win_edit_d')
   ?}
?};
EDI_I.cntx_pop();
_wyn


\odswimp2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: Odswieza informacje o imporcie
::  OLD: \odswimp2/edison.fml
::----------------------------------------------------------------------------------------------------------------------
{? __selimp.BLK || EDI_I.actions(__weredji,'LP',,1) || EDI_I.actions(__weredji,'',,1) ?};
1


\mechinit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wypelnia startowe dane
::   WE: _a - 1-import, 2-definicje
::       _b - domena
::  OLD: \mechinit/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_opc:=_a;
_domain:=_b;

:: __nazxpe - bieżąca dziedzina
__nazxpe:=0;
_lp:=1;
__nazsys.clear();
{? __nazsys.first()
|| {!
   |? _lp+=1;
      __selimp.blank();
      __selimp.TREE:=0;
      __selimp.LAB:=__nazsys.NAZ;
      __selimp.LP:=_lp;
      __selimp.SYM:=__nazsys.NAZ;
      __selimp.NAZ:='dotyczy dziedziny '+__nazsys.OPIS;
      __selimp.SQL:='';
      __selimp.BLK:=~(_domain='' | __nazsys.NAZ=_domain);
      {? __selimp.add()
      || {? __nazsys.NAZ=_domain || __nazxpe:=#__selimp.ref() ?};
         __nazsys.REF:=#__selimp.ref();
         __nazsys.put(1)
      ?};
      __nazsys.next()
   !}
?};

ISTDEF.win_sel('W_EDI');
SKID.ISTDEF:='M';
ISTDEF.win_edit('R_EDI');

ISTDEF.index('VER');
ISTDEF.prefix('XPERTIS','M');
{? ISTDEF.first()
|| {!
   |? {? _opc=2 | _opc=1 & ISTDEF.ACTION='T'
      ||
         EDI_S.index('ISTDEF');
         EDI_S.prefix(ISTDEF.ref());
         {? EDI_S.first()
         || {!
            |? __selimp.blank();
               __nazsys.clear();
               {? __nazsys.find_key(EDI_S.SYSTEM,EDI_S.SYSTEM)
               || __selimp.TREE:=__nazsys.REF;
                  __selimp.LAB:=form(ISTDEF.LP,3)+'.'+ISTDEF.K;
                  __selimp.LP:=ISTDEF.LP;
                  __selimp.SYM:=ISTDEF.K;
                  __selimp.NAZ:=ISTDEF.N;
                  __selimp.SQL:=$ISTDEF.ref();
                  __selimp.BLK:=~(_domain='' | EDI_S.SYSTEM=_domain);
                  __selimp.add()
               ?};
               EDI_S.next()
            !}
         ?}
      ?};
      ISTDEF.next()
   !};
   {? _opc=1
   || __selimp.cntx_psh();
      __selimp.prefix(0);
      _loop:=__selimp.first();
      {!
      |? _loop
      |!
         __selimp.cntx_psh();
         __selimp.prefix();
         _del:=~__selimp.find_key(#__selimp.ref());
         __selimp.cntx_pop();
         _loop:={? _del || __selimp.del() || __selimp.next() ?}
      !};
      __selimp.cntx_pop()
   ?}
?};
~~


\mech2imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: Okienka mechanizmu importu
::   WE: _a - typ opcji 2-definicje 1-importy
::       _b - czy wyjscie 1-domyslnie
::  OLD: \mech2imp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
__selimp.win_sel({? _a=2 || __gridef
                 |? _a=1 || __griimp
                 || __winimp ?});
__selimp.hdr_sel('');
__selimp.hdr_sel({? _a=2 || ' - DEFINICJE'
                 |? _a=1 || ''
                 || ''
                 ?});
__selimp.select(,1)


\addsysmi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przypisuje wybrane systemy do komunikatu
::  OLD: \addsysmi/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=__nazsys.sel_aget();
__nazsys.sel_adel();
__nazsys.cntx_psh();
{? _tab.first()
|| {? FUN.ask('Czy przypisać definicję importu do wybranych systemów?'@)
   || __nazsys.clear();
      {!
      |? {? __nazsys.seek(_tab.REF,)
         || EDI_S.clear();
            EDI_S.blank();
            EDI_S.ISTDEF:=ISTDEF.ref();
            EDI_S.SYSTEM:=__nazsys.NAZ;
            EDI_S.add(1)
         ?};
         _tab.next()
      !}
   ?}
|| {? FUN.ask('Czy przypisać definicję importu do wskazanego systemu?'@)
   || EDI_S.clear();
      EDI_S.blank();
      EDI_S.ISTDEF:=ISTDEF.ref();
      EDI_S.SYSTEM:=__nazsys.NAZ;
      EDI_S.add(1)
   ?}
?};
__nazsys.cntx_pop();
~~


\delsysmi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: usuwa przypisanie wybranych systemow do komunikatu
::  OLD: \delsysmi/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=__nazsys.sel_aget();
__nazsys.sel_adel();
__nazsys.cntx_psh();
{? _tab.first()
|| {? FUN.ask('Czy usunąć przypisanie definicji importu do wybranych systemów?'@)
   || __nazsys.clear();
      {!
      |? {? __nazsys.seek(_tab.REF,)
         || EDI_S.index('ISTDEF');
            EDI_S.prefix(ISTDEF.ref());
            {? EDI_S.find_key(__nazsys.NAZ,__nazsys.NAZ) || EDI_S.del() ?}
         ?};
         _tab.next()
      !}
   ?}
|| {? FUN.ask('Czy usunąć przypisanie definicji importu do wskazanego systemu?'@)
   || EDI_S.index('ISTDEF');
      EDI_S.prefix(ISTDEF.ref());
      {? EDI_S.find_key(__nazsys.NAZ,__nazsys.NAZ) || EDI_S.del() ?}
   ?}
?};
__nazsys.cntx_pop();
~~


\reksysmi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: podswietlenie rekordow powiazanych
::  OLD: \reksysmi/edison.fml
::----------------------------------------------------------------------------------------------------------------------
EDI_S.index('ISTDEF');
EDI_S.prefix(ISTDEF.ref(),__nazsys.NAZ,);
EDI_S.first()


\addmechi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: Dolaczenie/poprawa definicji importu
::   WE: [_a] 0(domyslnie)-dolaczenie, 1-poprawa
::  OLD: \addmechi/edison.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

EDI_Z.ISTD_PD:={? ~_a || 'D' || 'P' ?};

_refik:=__selimp.ref();
__selimp.cntx_psh();
__selimp.clear(); _system:={? __selimp.seek(__selimp.TREE,) || __selimp.LAB || 'XPERTIS' ?}; __selimp.cntx_pop();
ISTDEF.cntx_psh();
ISTDEF.clear();
{? ~_a
|| ISTDEF.blank();
   ISTDEF.IST_ISTK:='M';
   ISTDEF.SYSTEM:='XPERTIS';
   ISTDEF.memo_set(,'OPIS');
   _ok:=1
|| {? ISTDEF.seek(__selimp.SQL)
   || ISTDEF.memo_get(,'OPIS');
      _ok:=1
   || _ok:=0
   ?}
?};
ISTDEF.win_edit('IMP');
exec('set_efld_opt','edi_def',,ISTDEF);
{? _ok & ISTDEF.edit("exec('valid_edi_defin','edi_imp',EDI_Z.ISTD_PD)")
|| do();
   {? {? ~_a || ISTDEF.add() || ISTDEF.put() ?}
   || ISTDEF.memo_put(,'OPIS');
      {? ~_a
::    przypisanie do systemow - domyslnie brak = do wszystkich
      || EDI_S.index('ISTDEF');
         EDI_S.prefix(ISTDEF.ref(),EDI_S.SYSTEM,);
         {? ~EDI_S.first()
         || EDI_S.clear();
            EDI_S.blank();
            EDI_S.ISTDEF:=ISTDEF.ref();
            EDI_S.SYSTEM:=EDI_Z.B_DOMAIN().SYMBOL;
            EDI_S.add(1)
         ?};
         __selimp.blank();
         __selimp.TREE:=__nazxpe;
         __selimp.LAB:=form(ISTDEF.LP,3)+'.'+ISTDEF.K;
         __selimp.LP:=ISTDEF.LP;
         __selimp.SYM:=ISTDEF.K;
         __selimp.NAZ:=ISTDEF.N;
         __selimp.SQL:=$ISTDEF.ref();
         __selimp.BLK:=0;
         __selimp.add();
         _refik:=__selimp.ref()
      || __selimp.LAB:=form(ISTDEF.LP,3)+'.'+ISTDEF.K;
         __selimp.LP:=ISTDEF.LP;
         __selimp.SYM:=ISTDEF.K;
         __selimp.NAZ:=ISTDEF.N;
         __selimp.SQL:=$ISTDEF.ref();
         __selimp.BLK:=0;
         __selimp.put(1)
      ?}
   ?};
   end()
?};
ISTDEF.cntx_pop();
__selimp.seek(_refik);
~~


\valid_edi_defin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2006]
:: OPIS: Formula sprawdza poprawnosc wporawadzanego rekordu
::   WE: _a = 'P' - formula uruchomiona na popraw
::          = 'D' - formula uruchomiona na dolacz
::   WY: '' - poprawnie wypelniono dane w definicji
::       wpp - akronim pola ktore nie jest prowidlowo wypelnione
::  OLD: \valid_edi_defin/skid_edi.fml
::----------------------------------------------------------------------------------------------------------------------
_mechi:=ISTDEF.IST_ISTK='M';
_system:='XPERTIS';

:: bezposrednio redagowanym polem jest ISTDEF.K, pole ISTDEF.VER uzupelniane w tle
ISTDEF.VER:=ISTDEF.K;
_rr:=__CHK.record(ISTDEF,,'K','N','FR');
{? ISTDEF.W<>'T' || ISTDEF.MSC:='' ?};
{? _rr=''
|| _ref:={? _a='P' || ISTDEF.ref() || null() ?};
   _ver:=ISTDEF.VER;
   _domain:=EDI_Z.B_DOMAIN().SYMBOL;
   ISTDEF.cntx_psh();
   ISTDEF.index('VER');
   ISTDEF.prefix(_system,ISTDEF.IST_ISTK,ISTDEF.VER);
   {? ISTDEF.first
   || {!
      |?
         {? ISTDEF.VER=_ver & _ref<>ISTDEF.ref
         || _war:=exec('FindInSet','#table','EDI_S','ISTDEF',ISTDEF.ref(),,"EDI_S.SYSTEM",,,'');
            {? _war<>''
            || FUN.info('Występuje już komunikat o podanym kodzie. Systemu %1.\nZmień kod komunikatu.'@[_war])
            || FUN.info('Występuje już komunikat o podanym kodzie.\nZmień kod komunikatu.'@)
            ?};
            _rr:='K';
            0
         || 1
         ?} & ISTDEF.next()
      !}
   ?};
   ISTDEF.cntx_pop()
?};
{? _rr='' & ISTDEF.ACTION='T' & ISTDEF.FMMAIN=''
|| FUN.info('Należy podać formułę główną definiującą parametry czynności.'@);
   _rr:='FMMAIN'
?};
_rr


\odsmechi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: odswieza drzewo zdefiniowanych importow
::  OLD: \odsmechi/edison.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy odświeżyć drzewo definicji mechanizmu importów?'@)
|| _lab:=__selimp.LAB;
   _zer:='';
   {? (_tree:=__selimp.TREE)<>0
   || __selimp.clear();
      {? __selimp.seek(_tree,) || _zer:=__selimp.LAB ?}
   ?};
   __selimp.erase();
   exec('mechinit','edi_imp',2,EDI_Z.B_DOMAIN().SYMBOL);
   __selimp.clear();
   {? __selimp.last()
   || {!
      |? {? __selimp.LAB=_lab & exec('czygalaz','edi_imp',__selimp.TREE,_zer)
         || 0
         || __selimp.prev()
         ?}
      !}
   ?}
?}


\czygalaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy jest to podgalaz podanej etykiety
::   WE: _a - TREE_REF gornej galezi
::       _b - etykieta nadrzednej galezi
::   WY: 1-tak 0-nie
::  OLD: \czygalaz/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? _b<>''
|| __selimp.cntx_psh();
   __selimp.clear();
   _wyn:=__selimp.seek(_a,) & __selimp.LAB=_b;
   __selimp.cntx_pop()
?};
_wyn


\delmechi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: usuniecie definicji importu
::  OLD: \delmechi/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_buf:=tab_tmp(1,'REF','INTEGER','');
{? ISTDEF.seek(__selimp.SQL)
|| _sql:=__selimp.SQL;
   __selimp.cntx_psh();
   __selimp.clear();
   {? __selimp.first()
   || {!
      |? {? __selimp.SQL=_sql
         || _buf.clear();
            _buf.blank();
            _buf.REF:=#__selimp.ref();
            _buf.add()
         ?};
         __selimp.next()
      !}
   ?};
   __selimp.cntx_pop();
   _ok:=1
|| _ok:=0
?};
{? _ok & exec('edi_usu_defin','edi_def')
|| __selimp.next();
   __selimp.cntx_psh();
   _buf.clear();
   {? _buf.first()
   || {!
      |? {? (__selimp.clear(); __selimp.seek(_buf.REF,)) || __selimp.del() ?};
         _buf.next()
      !}
   ?};
   __selimp.cntx_pop()
?};
obj_del(_buf);
~~


\copmechi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: usuwa przypisanie wybranych systemow do komunikatu
::  OLD: \copmechi/edison.fml
::----------------------------------------------------------------------------------------------------------------------
{? ISTDEF.seek(__selimp.SQL)
|| ISTDEF.cntx_psh();
   __selimp.cntx_psh();
   _ref_new:=exec('kopiuj_def','edi_def');
:: wpisanie nowych zapisow
   {? _ref_new<>null & (ISTDEF.clear(); ISTDEF.seek(_ref_new))
   || EDI_S.index('ISTDEF');
      EDI_S.prefix(ISTDEF.ref());
      {? ~EDI_S.first()
      || EDI_S.clear();
         EDI_S.blank();
         EDI_S.ISTDEF:=ISTDEF.ref();
         EDI_S.SYSTEM:=EDI_Z.B_DOMAIN().SYMBOL;
         EDI_S.add(1)
      ?};
      __selimp.blank();
      __selimp.TREE:=__nazxpe;
      __selimp.LAB:=form(ISTDEF.LP,3)+'.'+ISTDEF.K;
      __selimp.LP:=ISTDEF.LP;
      __selimp.SYM:=ISTDEF.K;
      __selimp.NAZ:=ISTDEF.N;
      __selimp.SQL:=$ISTDEF.ref();
      __selimp.BLK:=0;
      __selimp.add()
   ?};
   ISTDEF.cntx_pop();
   __selimp.cntx_pop()
?}


\impmechi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wykonanie wybranego importu
::   WE: _a - ISTDEF.ref()
::  OLD: \impmechi/edison.fml
::----------------------------------------------------------------------------------------------------------------------
ISTDEF.cntx_psh();
ISTDEF.clear();
{? ISTDEF.seek(_a)
||
   _rok:=date()~1;
   EDI_I.use('edi_i'+'_'+form(_rok-2000,-2,0,'99'));
:: statystyki użycia
   exec('stat_add','st_common','A_EDI','IMP',ISTDEF.K,ISTDEF.N);
::
   exec('impmechi_read','edi_imp',ISTDEF.ref());
:: statystyki użycia
   exec('stat_add','st_common','A_EDIE','IMP',ISTDEF.K,ISTDEF.N)
?};
ISTDEF.cntx_pop()


\impmechi_read
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: odczyt plikow z komunikatami edi
::   WE: [_a] - konkretny ref komunikatu
::       [_b] - ilosc linii komunikatu (domyslnie 65535) [PARAMETR WYŁĄCZONY]
::       [_c] - odczyt testowy 0(domyslnie)-nie 1-tak
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_istdef:={? var_press('_a')=type_of(null()) || _a || null ?};
EDI_Z.TEST:={? var_press('_c')=type_of(0) || _c || 0 ?};

{? ~EDI_Z.TEST || _edi:=exec('edi','edi_wspolne') ?};

SKID.ISTDEF:='E';
EDI_Z.WR:='R';
BEER.MW:='';

{? _istdef
||
   ISTDEF.clear();
   {? ISTDEF.seek(_istdef) || EDI_Z.C:=ISTDEF.ref() ?};
:: inicjacja bazy komunikatow
   VAR_DEL.delete('__lp');
   exec('ini_kom','#message','Informacje o błędach odczytu'@,,,1,200);
   __lp:=0;

   VAR_DEL.delete('filemimp','file_csv');
   file_csv:='';

   _wynik:=($EDI_Z.C().FR)();
   {? type_of(_wynik)<>1
   ||
      exec('logOrInfo','edi_wspolne','Formuła odczytu importu musi zwracać wartość liczbową.'@);
      _ok:=0

   |? _wynik
   ||
      {? file_csv=''
      ||
         exec('logOrInfo','edi_wspolne','Formuła odczytu importu nie określa pliku z danymi.'@);
         _ok:=0
      ||
         filemimp:='mimp'
                  +form(date()~1-2000,-2,0,'99')+form(date()~2,-2,0,'99')+form(date()~3,-2,0,'99')
                  +form(time()~1,-2,0,'99')+form(time()~2,-2,0,'99')+form(time()~3,-2,0,'99')
                  +'.log';
         _bsl:={? sys_name(1)='WINDOWS' || '\\\\' || '/' ?};
         {? var_pres('__kom')>100
         ||
            {? ~__kom.get_size() & EDI_Z.TEST
            ||
               exec('add_kom','#message','Brak niezgodności typów danych w strukturze pliku.'@,1,'Test komunikatu'@);
               exec('add_kom','#message','Testowy odczyt do 20 linii pliku.'@,1,'Test komunikatu'@)
            ?};
            {? EDI_Z.TEST | ~_edi.sza
            ||
               __kom.select(,,,,{? _>0 & type_of(_a)=2 || _a || ''?})
            ?};
            __kom.save(filemimp);
            {? ~EDI_Z.TEST || __kom.save(_edi.LOG) ?};
            obj_del(__kom);
            &__kom
         ?};
         {? ~EDI_Z.TEST
         ||
            _edi.plikAdd(pth_dir(filemimp)+_bsl+filemimp,pth_dir(filemimp)+_bsl);
            {? fexists(file_csv,1) || _edi.plikAdd(pth_dir(file_csv)+_bsl+file_csv,pth_dir(file_csv)+_bsl) ?};
            _kusr:=exec('name','users');
            _usr:=exec('FindInSet','#table','USERS','USR_KKOD',_kusr,_kusr);
            _dzien_a:=exec('dzien_add','edi_wspolne',EDI_Z.C,EDI_Z.WR,date(),time(),_usr,EDI_Z.DOK,EDI_Z.SYM,EDI_Z.KH,''
               ,filemimp
               ,pth_dir(filemimp)+_bsl+filemimp
               ,{? fexists(file_csv,1) || pth_dir(file_csv)+_bsl+file_csv || '' ?});
            {? _dzien_a=null
            ||
               exec('logOrInfo','edi_wspolne','Nie powiodło się dodanie zapisu do dziennika.'@);
               _ok:=0
            ||
               ferase(pth_dir(filemimp)+_bsl+filemimp,0)
            ?}
         ?}
      ?}

   |? _wynik=0
   ||
      {? EDI_Z.TEST | ~_edi.sza
      ||
         {? var_pres('__kom')>100
         ||
            {? __kom.get_size() || __kom.select(,,,,{? _>0 & type_of(_a)=2 || _a || ''?}) ?}
         ?}
      ?};
      {? ~EDI_Z.TEST
      ||
         {? var_pres('__kom')>100
         ||
            __kom.save(_edi.LOG)
         ?};
         _edi.err()
      ?}
   ?};

   VAR_DEL.delete('__kom','filemimp','file_csv')
?}


\linemimp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: zwraca ilosc linii komunikatu
::   WE: _a - ref definicji
::   WY: wartosc liczbowa lub zero
::  OLD: \linemimp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
EDI_D.cntx_psh();
EDI_D.index('K');
EDI_D.prefix(_a,'_LINE');
{? EDI_D.first()
|| {!
   |? {? EDI_D.K='_LINE' & EDI_D.M='I'
      || _wyn:=#EDI_D.FLF;
         0
      || EDI_D.next()
      ?}
   !}
?};
EDI_D.cntx_pop();
_wyn


\tstmechi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wykonanie wybranego importu
::  OLD: \tstmechi/edison.fml
::----------------------------------------------------------------------------------------------------------------------
ISTDEF.cntx_psh();
ISTDEF.clear();
{? __selimp.TREE<>0 & ISTDEF.seek(__selimp.SQL)
||
   _line:=100;
   exec('impmechi_read','edi_imp',ISTDEF.ref(),_line,1)
?};
ISTDEF.cntx_pop()


\mimpkodi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: dodaje wybrane kody informacyjne
::  OLD: \mimpkodi/edison.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy dodać wybrane kody informacyjne do komunikatu?\n\n'
        'UWAGA. Zostaną dodane tylko brakujące kody\n'
        '(w przypadku kodu typu klucz unikalny zostanie dodany kolejny kod o kolejnym numerze).'@)
|| VAR_DEL.delete('__kodimi');
   __kodimi:=tab_tmp(1,'FIL','STRING[1]',''
              ,'KEY','STRING[1]',''
              ,'INI','STRING[1]',''
              ,'BLA','STRING[1]',''
              ,'DLG','STRING[1]',''
              ,'LIN','STRING[1]',''
              ,'AKT','STRING[1]',''
              ,'END','STRING[1]',''
              ,'SEP','STRING[1]','');

   __kodimi.blank();
   __kodimi.FIL:='T';
   __kodimi.KEY:='T';
   __kodimi.INI:='T';
   __kodimi.BLA:='T';
   __kodimi.DLG:='T';
   __kodimi.LIN:='T';
   __kodimi.AKT:='T';
   __kodimi.END:='T';
   __kodimi.SEP:='T';
   __kodimi.add(1);

   _win_edit:=__kodimi.mk_edit('Kody informacyjne'@,0);
   __kodimi.win_efld(_win_edit,,'FIL',,,1,,,'Plik importu'@,,'T-tak N-nie'@);
   __kodimi.win_efld(_win_edit,,'KEY',,,1,,,'Unikalny klucz'@,,'T-tak N-nie'@);
   __kodimi.win_efld(_win_edit,,'DLG',,,1,,,'Sprawdzenie dokładności długości pola'@,,'T-tak N-nie'@);
   __kodimi.win_efld(_win_edit,,'LIN',,,1,,,'Liczba linii komunikatu'@,,'T-tak N-nie'@);
   __kodimi.win_efld(_win_edit,,'INI',,,1,,,'Formuła inicjująca odczyt'@,,'T-tak N-nie'@);
   __kodimi.win_efld(_win_edit,,'BLA',,,1,,,'Wartości początkowe'@,,'T-tak N-nie'@);
   __kodimi.win_efld(_win_edit,,'AKT',,,1,,,'Dodanie lub aktualizacja'@,,'T-tak N-nie'@);
   __kodimi.win_efld(_win_edit,,'END',,,1,,,'Formuła kończąca odczyt'@,,'T-tak N-nie'@);
   __kodimi.win_efld(_win_edit,,'SEP',,,1,,,'Formuła zwracająca separator pól'@,,'T-tak N-nie'@);
   __kodimi.win_edit(_win_edit);

   {? __kodimi.edit("exec('mimpkich','edi_imp')")
   || _ref:=exec('FindAndGet','#table','ISTDEF',__selimp.SQL,,,null());
      {? (~-__kodimi.FIL)='T' || exec('mimpadki','edi_imp',_ref,'_FILE') ?};
      {? (~-__kodimi.KEY)='T' || exec('mimpadki','edi_imp',_ref,'_UKEY') ?};
      {? (~-__kodimi.DLG)='T' || exec('mimpadki','edi_imp',_ref,'_DLG') ?};
      {? (~-__kodimi.LIN)='T' || exec('mimpadki','edi_imp',_ref,'_LINE') ?};
      {? (~-__kodimi.INI)='T' || exec('mimpadki','edi_imp',_ref,'_INI') ?};
      {? (~-__kodimi.BLA)='T' || exec('mimpadki','edi_imp',_ref,'_BL_') ?};
      {? (~-__kodimi.AKT)='T' || exec('mimpadki','edi_imp',_ref,'_AKT') ?};
      {? (~-__kodimi.END)='T' || exec('mimpadki','edi_imp',_ref,'_END') ?};
      {? (~-__kodimi.SEP)='T' || exec('mimpadki','edi_imp',_ref,'_SEP') ?}
   ?};
   VAR_DEL.delete('__kodimi')
?};
~~


\mimpkich
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdzenie poprawności wypełnionych danych
::  OLD: \mimpkich/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? ~('nNTt'*__kodimi.FIL) || FUN.info('Prawidłowe wartości pola T-tak N-nie'@); _wyn:='FIL'
|? ~('nNTt'*__kodimi.KEY) || FUN.info('Prawidłowe wartości pola T-tak N-nie'@); _wyn:='KEY'
|? ~('nNTt'*__kodimi.INI) || FUN.info('Prawidłowe wartości pola T-tak N-nie'@); _wyn:='INI'
|? ~('nNTt'*__kodimi.BLA) || FUN.info('Prawidłowe wartości pola T-tak N-nie'@); _wyn:='BLA'
|? ~('nNTt'*__kodimi.DLG) || FUN.info('Prawidłowe wartości pola T-tak N-nie'@); _wyn:='DLG'
|? ~('nNTt'*__kodimi.LIN) || FUN.info('Prawidłowe wartości pola T-tak N-nie'@); _wyn:='LIN'
|? ~('nNTt'*__kodimi.AKT) || FUN.info('Prawidłowe wartości pola T-tak N-nie'@); _wyn:='AKT'
|? ~('nNTt'*__kodimi.END) || FUN.info('Prawidłowe wartości pola T-tak N-nie'@); _wyn:='END'
?};
_wyn


\mimpadki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: dodanie kodu informacyjnego
::   WE: _a - ref ISTDEF
::       _b - kod informacyjny
::  OLD: \mimpadki/edison.fml
::----------------------------------------------------------------------------------------------------------------------
EDI_Z.C:=_a;

:: sprawdzenie czy dany kod juz istnieje
_ok:=1; _nr:='';
EDI_D.index('K');
EDI_D.prefix(_a,_b);
{? _b='_UKEY'
|| {? EDI_D.last()
   || _nr:=5-EDI_D.K;
      {? _nr=''
      || _nr:='2'
      || _nr:=%((%(1+_nr))+1)+(1-_nr)
      ?}
   ?}
|| {? EDI_D.first() || {! |? {? EDI_D.K=_b || _ok:=0; 0 || EDI_D.next() ?} !} ?}
?};

{? _ok & _a<>null
|| EDI_D.prefix();
   EDI_D.blank();
   EDI_D.G:=_a;
   EDI_D.K:={? _b='_UKEY' || _b+_nr || _b ?};
   EDI_D.T:='N';
   EDI_D.OP:={? _b='_FILE' || 'Plik importu'
             |? _b='_UKEY' || 'Unikalny klucz'
             |? _b='_DLG' || 'Sprawdzenie dokładności długości pola'
             |? _b='_LINE' || 'Liczba linii komunikatu'
             |? _b='_INI' || 'Formuła inicjująca odczyt'
             |? _b='_BL_' || 'Wartości początkowe'
             |? _b='_AKT' || 'Dodanie lub aktualizacja'
             |? _b='_END' || 'Formuła kończąca odczyt'
             |? _b='_SEP' || 'Formuła zwracająca separator pól'
             || '???'
             ?};
   EDI_D.M:='I';
   EDI_D.TAB:='';
   EDI_D.FLD:='';
   EDI_D.RL:='';
   EDI_D.FLF:='';
   EDI_D.DL:=0;
   EDI_D.WYM:='N';
   {? EDI_D.G<>null || EDI_D.add(1) ?}
?};
~~


\mimprenu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: renumeracja pozycji komunikatu
::   WE: [_a] - 1-bez pytania 0-z pytaniem(domyslnie)
::       [_b] - od numeru o jeden 0-od poczatku(domyslnie)
::       [_c] - 0(domyslnie) 1-przy dolaczeniu
::  OLD: \mimprenu/edison.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};

{? _a | FUN.ask('Czy przenumerować pozycję definicji importu?'@)
|| _nr:=0;
   EDI_D.cntx_psh();
   EDI_D.index('LP');
   EDI_D.prefix(ISTDEF.ref());
   {? ISTDEF.IST_ISTK='E' & ~EDI_D.first() & ~_c
   || FUN.info('Brak pozycji struktury.\nDołączenie pozycji dostępne po ponownym wejściu w okienku struktury.'@)
   || {? ~_b
      || {? EDI_D.first()
         || {!
            |? _nr+=1;
               EDI_D.LP:=_nr;
               EDI_D.put(1);
               EDI_D.next()
            !}
         ?}
      || {? EDI_D.last()
         || {!
            |? {? EDI_D.LP>=_b
               || EDI_D.LP+=1;
                  EDI_D.put(1);
                  EDI_D.prev()
               || 0
               ?}
            !}
         ?}
      ?}
   ?};
   EDI_D.cntx_pop()
?}


\mimpdexp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: eksport definicji mechanizmu importow
::  OLD: \mimpdexp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('FindInSet','#table','ISTDEF','K','M','XPERTIS')=null
|| FUN.info('Brak zdefiniowanych definicji mechanizmu importów.\nEksport niemożliwy.'@)
|? FUN.ask('Czy rozpocząć eksport definicji mechanizmu importów?'@)
|| exec('edidefek','edi_imp');
   FUN.info('Zakończono eksport definicji mechanizmu importów.'@)
?}


\edidefek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: eksport definicji komunikatow typu ff
::    WE:
::  OLD: \edidefek/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_domain:=EDI_Z.B_DOMAIN().SYMBOL;
{? _domain='' || return() ?};

EDI_S.index('SYSTEM');
EDI_S.prefix(_domain);
_loop:=EDI_S.first();
{!
|? _loop
|!
   exec('edidefek_core','edi_imp');
   _loop:=EDI_S.next()
!}


\edidefek_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: eksport definicji komunikatow typu ff
::   WE: _a - pth
::       _b - EDI_S.ref()
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_pth:={? var_pres('_a')=type_of('') || _a || '' ?};
_ref:={? var_pres('_b')=type_of(null()) || _b || null() ?};

_result:='';

{? _pth<>'' & _ref=null() | _pth='' & _ref || return(_result) ?};

_wg_pth:=_pth='';
{? ~_wg_pth
|| _sep:=exec('sep','#file',{? 1+_pth='@' || 0 || 2 ?});
   _pth+=_sep;
   _pth:=gsub(_pth,'\\','\\\\')
?};

_domain:=EDI_S.SYSTEM;

ISTDEF.cntx_psh();
ISTDEF.prefix();
{? ISTDEF.seek(EDI_S.ISTDEF) & ISTDEF.IST_ISTK='M' & ISTDEF.SYSTEM='XPERTIS'
||
   _plik:='mimpdef_'+_domain+'_'+ISTDEF.K+'.txt';
   _file:=fopen(_pth+_plik,'uw',_wg_pth);
   {? ~_file
   ||
      FUN.info(exec('msg','edi_wspolne','ERR_FOPEN')+exec('inf_path','edi_wspolne',_plik)+'.')
   ||
      _result:=_plik;
      fwrite(_file,'ISTDEF');
      fwrite(_file,form(ISTDEF.K)+'^'+form(ISTDEF.N)+'^'+form(ISTDEF.W)+'^'
         +form(ISTDEF.R)+'^'+form(ISTDEF.FW)+'^'+form(ISTDEF.FR)+'^'
         +form(ISTDEF.ACTION)+'^'+form(ISTDEF.FMMAIN)+'^'
         +form(ISTDEF.LP)+'^');
      _memo:='';
      {!
      |? _memo:=ISTDEF.memo_txt(+_memo,1,'OPIS'); +_memo
      |!
         fwrite(_file,_memo)
      !};
      fwrite(_file,'----------!');

      fwrite(_file,'EDI_D');
      EDI_D.cntx_psh();
      EDI_D.index('LP');
      EDI_D.prefix(ISTDEF.ref());
      {? EDI_D.first()
      || {!
         |? fwrite(_file,form(EDI_D.LP,,0,'99')+'^'+form(EDI_D.K)+'^'+form(EDI_D.T)
              +'^'+form(EDI_D.OP)+'^'+form(EDI_D.M)+'^'+form(EDI_D.TAB)+'^'+form(EDI_D.FLD)
              +'^'+form(EDI_D.RL)+'^'+form(EDI_D.FLF)+'^'+form(EDI_D.FLE)
              +'^'+form(EDI_D.DL)+'^'+form(EDI_D.WYM)+'^'+form(EDI_D.UPPER)
              +'^'+form(EDI_D.G().K)+'^');
            _memo:='';
            {!
            |? _memo:=EDI_D.memo_txt(+_memo,1,'OPIS'); +_memo
            |!
               fwrite(_file,_memo)
            !};
            fwrite(_file,'----------!');
            EDI_D.next()
         !}
      ?};
      EDI_D.cntx_pop();

      fclose(_file)
   ?}
?};
ISTDEF.cntx_pop();
_result


\edidefim
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: import definicji komunikatow typu ff
::   WE: _a - pth
::       _b - fname
::       _c - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _d - INTEGER - komunikaty: 0 - wszystkie, 1 - tylko o błędach
::   WY: 1-wykonano import 0-zrezygnowano
::  OLD: \edidefim/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_pth:={? var_pres('_a')=type_of('') || _a || '' ?};
_fname:={? var_pres('_b')=type_of('') || _b || '' ?};
_mode:={? var_press('_c')=type_of(0) || _c || 0 ?};
_mode_msg:={? var_press('_d')=type_of(0) || _d || 0 ?};

_result:='';
_delCounter:=0;

{? _pth<>'' & _fname='' | _pth='' & _fname<>''
|| _result:='Błędne parametry wejściowe \edidefim/edi_imp.fml.'@;
   return(_result)
?};
_wg_pth:=_pth='';

_system:='XPERTIS';
_ist_istk:='M';
_domain:=EDI_Z.B_DOMAIN().SYMBOL; {? _domain='' || return('Brak symbolu domeny.') ?};

_wyb_mimp:=exec('wyb_mimp','edi_imp',_pth,_fname);
_tabwyb:=_wyb_mimp.TAB;
_result:=_wyb_mimp.RESULT;
{? _result<>'' || return(_result) ?};
_wg_pth:=_pth='';
{? ~_wg_pth
|| _separ:=exec('sep','#file',{? 1+_pth='@' || 0 || 2 ?});
   _pth+=_separ;
   _pth:=gsub(_pth,'\\','\\\\')
?};

_clearEdi:="{| EDI_D |!
               index(\'K\');
               prefix(_a);
               {? first ||
                  {!|? del !}
               ?};
               prefix
            |}
           ";

_loop:=_tabwyb.first();
{!
|? _loop
|!
   _file:=fopen(_pth+_tabwyb.FILENAME,'ur',_wg_pth);
   {? ~_file
   ||
      FUN.info(exec('msg','edi_wspolne','ERR_FOPEN')+exec('inf_path','edi_wspolne',_plik)+'.')
   ||
      _ok:=1;
      _tab:='';
      {!
      |? _ok & (_w:=fread(_file))<>'\n'
      |!
         {? _w='ISTDEF'
         ||
            _tab:=_w

         |? _w='EDI_D'
         ||
            _tab:=_w

         ||
            {? _tab='ISTDEF'
            ||
               SKID.ISTDEF:=_ist_istk;
               ISTDEF.prefix(); ISTDEF.blank();
               {? var_pres('_istdef')>0 || obj_del(_istdef) ?};
::             tablica nazwana przechowująca dane wyciągane z pliku do późniejszego zapisania w buforze tabeli
               _istdef:=obj_new('ist_istk','system','k','ver','n','w','r','fw','fr','format','action','fmmain','lp');
               _istdef.ist_istk:=_ist_istk;
               _istdef.system:=_system;
               _nr:=_w*'^';
               _ko:=(_nr-1)+_w;
               _istdef.k:=_istdef.ver:=_tabwyb.NKO;
               _w:=_nr-_w; _nr:=_w*'^';
               _istdef.n:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _istdef.w:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _istdef.r:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _istdef.fw:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _istdef.fr:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _istdef.format:='F';
               _istdef.action:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _istdef.fmmain:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _istdef.lp:=#form((_nr-1)+_w); _w:=_nr-_w; _nr:=_w*'^';

               _doPutIst:="ISTDEF.cntx_psh();
                           ISTDEF.index(\'DATA\');
                           ISTDEF.prefix(_a.system,_a.ist_istk,ISTDEF.RODZAJ,ISTDEF.NR,ISTDEF.DATA,_a.ver,);
                           {? ISTDEF.first()
                           || _res:=exec(\'assign_istdef\',\'edi_imp\',_a);
                              _ret:={? _res || ISTDEF.put(1) || 0 ?}
                           || ISTDEF.prefix();
                              ISTDEF.blank();
                              _ret:=_b(_a)
                           ?};
                           _ret
                          ";

               _doAddIst:="_res:=exec(\'assign_istdef\',\'edi_imp\',_a);
                           {? _res || ISTDEF.add(1) || 0 ?}
                          ";

               _ok:={? _mode
                    || _doPutIst(_istdef,_doAddIst)
                    || _doAddIst(_istdef)
                    ?};

               {? _ok
               ||
                  {? ~_mode_msg
                  || _result:='Zaimportowano: %1'@[_istdef.k]
                  ?};
                  _memout:=0;
                  _eol:='';
                  _memout:=fopen('null','w!',,,1); _ok:=_memout.is_open();
                  {!
                  |? _w:=fread(_file);
                     {? _w='\n'
                     || {? _ok || ISTDEF.memo_put(_memout,'OPIS') ?};
                        0
                     |? (_w*'----------!')
                     || {? _ok || ISTDEF.memo_put(_memout,'OPIS') ?};
                        0
                     || {? _ok || fwrite(_memout,_eol+_w); _eol:='\n' ?};
                        1
                     ?}
                  !};
                  &_memout

               |? ~_wg_pth
               ||
                  _result:='Pominięto import: %1'@[_istdef.k]
               ?};
               {? _mode & _ok || ISTDEF.cntx_pop() ?};

               EDI_S.prefix();
               EDI_S.blank();
               EDI_S.SYSTEM:=_domain;
               ISTDEF.index('K'); ISTDEF.prefix(_system,_ist_istk,_tabwyb.NKO);
               _istdefRef:=EDI_S.ISTDEF:={? ISTDEF.first() || ISTDEF.ref() || null ?};
               _ok:={? ~_mode
                    || {? EDI_S.ISTDEF=null() || 0 || EDI_S.add(1) ?}
                    || {? EDI_S.ISTDEF=null()
                       || 0
                       || EDI_S.cntx_psh();
                          EDI_S.index('ISTDEF');
                          EDI_S.prefix(_istdefRef,_domain);
                          {? EDI_S.first()
                          || EDI_S.cntx_pop();
                             1
                          || EDI_S.cntx_pop();
                             EDI_S.ISTDEF:=_istdefRef;
                             EDI_S.add(1)
                          ?}
                       ?}
                    ?}

            |? _ok & _tab='EDI_D'
            ||
               _addEdi:="_res:=exec(\'assign_edi_d\',\'edi_imp\',_a);
                         {? _res || EDI_D.add(1) || 0 ?}
                        ";

               EDI_D.prefix(); EDI_D.blank();
               {? var_pres('_edi_d')>0 || obj_del(_edi_d) ?};
::             tablica nazwana przechowująca dane wyciągane z pliku do późniejszego zapisania w buforze tabeli
               _edi_d:=obj_new('lp','k','t','op','m','tab','fld','rl','flf','fle','dl','wym','upper','g');
               _nr:=_w*'^';
               _edi_d.lp:=#form((_nr-1)+_w); _w:=_nr-_w; _nr:=_w*'^';
               _edi_d.k:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _edi_d.t:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _edi_d.op:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _edi_d.m:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _edi_d.tab:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _edi_d.fld:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _edi_d.rl:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _edi_d.flf:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _edi_d.fle:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _edi_d.dl:=#form((_nr-1)+_w); _w:=_nr-_w; _nr:=_w*'^';
               _edi_d.wym:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _edi_d.upper:=(_nr-1)+_w; _w:=_nr-_w; _nr:=_w*'^';
               _edi_d.g:=ISTDEF.ref();

               {? _delCounter=0 & _edi_d.g<>null || _clearEdi(_edi_d.g); _delCounter+=1 ?};

               _ok:={? _edi_d.g=null
                    || 0
                    || _addEdi(_edi_d)
                    ?};

               _memout:=0;
               _eol:='';
               {? _ok || _memout:=fopen('null','w!',,,1); _ok:=_memout.is_open() ?};
               {!
               |? _w:=fread(_file);
                  {? _w='\n'
                  || {? _ok || EDI_D.memo_put(_memout,'OPIS') ?};
                     0
                  |? (_w*'----------!')
                  || {? _ok || EDI_D.memo_put(_memout,'OPIS') ?};
                     0
                  || {? _ok || fwrite(_memout,_eol+_w); _eol:='\n' ?};
                     1
                  ?}
               !};
               &_memout
            ?}
         ?}
      !};
      _delCounter:=0;
      fclose(_file)
   ?};
   _loop:=_tabwyb.next()
!};
_result


\mimpdimp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: import definicji mechanizmu importow
::  OLD: \mimpdimp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy rozpocząć import definicji mechanizmu importów?'@)
|| _lab:=__selimp.LAB;
   {? exec('edidefim','edi_imp')=''
   || FUN.info('Zakończono import definicji mechanizmu importów.'@);
      __selimp.erase();
      exec('mechinit','edi_imp',2,EDI_Z.B_DOMAIN().SYMBOL);
      __selimp.clear();
      {? __selimp.last() || {! |? {? __selimp.LAB=_lab || 0 || __selimp.prev() ?} !} ?}
   ?}
?}


\wyb_mimp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: import definicji komunikatow
::   WE: _a - pth
::       _b - fname
::   WY: tabela wybranych importow
::  OLD: \wyb_mimp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_pth:={? var_pres('_a')=type_of('') || _a || '' ?};
_fname:={? var_pres('_b')=type_of('') || _b || '' ?};

_result:=obj_new('TAB','RESULT');
_result.RESULT:='';

_wg_pth:=_pth='';

_wyb_imp:=tab_tmp(2
   ,'KOD'      ,'STRING[20]'  ,''
   ,'KO2'      ,'STRING[20]'  ,''
   ,'NAZ'      ,'STRING[50]'  ,''
   ,'BYL'      ,'STRING[1]'   ,''
   ,'WYB'      ,'STRING[1]'   ,''
   ,'WYK'      ,'STRING[1]'   ,''
   ,'NKO'      ,'STRING[20]'  ,''
   ,'FILENAME' ,'STRING[64]'  ,'');
_result.TAB:=_wyb_imp;

{? _pth<>'' & _fname='' | _pth='' & _fname<>''
|| _result.RESULT:='Błędne parametry wejściowe \wyb_imp/edi_imp.fml.'@;
   return(_result)
?};

_domain:=EDI_Z.B_DOMAIN().SYMBOL;
_ok:=0;

_Tab:=
   {? _wg_pth
   || files('mimpdef_'+_domain+'_*.txt')
   || tab_tmp(1,'FILENAME','STRING[64]','')
   ?};
{? ~_wg_pth
|| _separ:=exec('sep','#file',{? 1+_pth='@' || 0 || 2 ?});
   _pth+=_separ;
   _pth:=gsub(_pth,'\\','\\\\');
   _Tab.FILENAME:=_fname;
   _Tab.add()
?};

_loop:=_Tab.first();
{!
|? _loop
|!
   _file:=fopen(_pth+_Tab.FILENAME,'ur',_wg_pth);
   {? ~_file
   ||
      _result.RESULT:=exec('msg','edi_wspolne','ERR_FOPEN')+exec('inf_path','edi_wspolne',_plik)+'.';
      FUN.info(_result.RESULT)
   ||
      _tab:='';
      {!
      |? (_w:=fread(_file))<>'\n' & _w<>'EDI_D'
      |!
         {? _w='ISTDEF'
         ||
            _tab:=_w
         ||
            {? _tab='ISTDEF'
            ||
               _wyb_imp.clear();
               _wyb_imp.blank();
               _nr:=_w*'^'; _wyb_imp.KOD:=_wyb_imp.KO2:=_wyb_imp.NKO:=(_nr-1)+_w; _w:=_nr-_w;
               _nr:=_w*'^'; _wyb_imp.NAZ:=(_nr-1)+_w; _w:=_nr-_w;
               _wyb_imp.FILENAME:=_Tab.FILENAME;
               _byl:=0;
               _wyk:=0;
               ISTDEF.cntx_psh();
               EDI_S.cntx_psh();
               EDI_D.cntx_psh();
               ISTDEF.index('K');
               ISTDEF.prefix('XPERTIS','M',_wyb_imp.KOD);
               {? ISTDEF.first()
               ||
                  {!
                  |?
                     {? ISTDEF.K=_wyb_imp.KOD
                     ||
                        _byl:=1;
                        _wyk:=ISTDEF.count();
                        EDI_S.index('ISTDEF');
                        EDI_S.prefix(ISTDEF.ref());
                        _wyk-=EDI_S.size();
                        EDI_D.index('LP');
                        EDI_D.prefix(ISTDEF.ref());
                        _wyk-=EDI_D.size();
                        0
                     ||
                        ISTDEF.next()
                     ?}
                  !}
               ?};
               ISTDEF.cntx_pop();
               EDI_S.cntx_pop();
               EDI_D.cntx_pop();
               _wyb_imp.BYL:={? _byl || 'T' || 'N' ?};
               _wyb_imp.WYK:={? _wyk || 'T' || 'N' ?};
               _wyb_imp.WYB:={? _wg_pth || 'N' || 'T' ?};
               _wyb_imp.add(1);

               {!
               |? _w:=fread(_file);
                  {? _w='\n'
                  || 0
                  |? (_w*'----------!')
                  || 0
                  || 1
                  ?}
               !}
            ?}
         ?}
      !};
      fclose(_file)
   ?};
   _loop:=_Tab.next()
!};

{? ~_wyb_imp.first()
||
   _result.RESULT:='Brak komunikatów do importu.'@;
   FUN.info(_result.RESULT)

|? _wg_pth
||
   _win_sel:=_wyb_imp.mk_sel('Wybór definicji importów'@,,0,'wyb_mimp_imp',,,,,'U');
   _wyb_imp.win_sel(_win_sel);
   _wyb_imp.win_fld(_win_sel,,'WYB',,,7,,0,'Wybór'@,,,2,,"\'T\'","\'N\'",);
   _wyb_imp.win_fld(_win_sel,,'KOD',,,,,1,'Kod'@);
   _wyb_imp.win_fld(_win_sel,,'NAZ',,,,,1,'Nazwa'@);
   _wyb_imp.win_fld(_win_sel,,'BYL',,,7,,1,'Jest'@,,,2,,"\'T\'","\'N\'",);
   _wyb_imp.win_fld(_win_sel,,'WYK',,,7,,1,'Używany'@,,,2,,"\'T\'","\'N\'",);
   _wyb_imp.win_fld(_win_sel,,'NKO',,,,,0,'Nowy kod'@);
   _wyb_imp.win_act(_win_sel,0,'Formuła','&Akceptuj'@@,,,"sel_exit();1","",0,,,,'A');
   _wyb_imp.win_act(_win_sel,0,'Popraw',,,,"exec('popwmimp','edi_imp')",,0);
   _wyb_imp.win_act(_win_sel,0,'Formuła','&Wybór'@@,,,,"exec('wybwmimp','edi_imp',1)",1,1,"exec('wybwmimp','edi_imp',1)",,'W');
   _wyb_imp.win_act(_win_sel,0,'Formuła','&Rezygnacja'@@,,,,"exec('wybwmimp','edi_imp',0)",0,1,"exec('wybwmimp','edi_imp',0)",,'R');
   _wyb_imp.win_act(_win_sel,0,'Rekord',,,,"exec('actswitch','edi_imp')","exec('rekwmimp','edi_imp')",0);
   _ok:=_wyb_imp.select()
||
   _ok:=1
?};
_wyb_imp.clear();
{? _ok
||
   {? _wyb_imp.first || {! |? {? _wyb_imp.WYB='T' || _wyb_imp.next() || _wyb_imp.del() ?} !} ?}
||
   _wyb_imp.erase()
?};
_result


\popwmimp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdzenie czy mozna poprawiac
::   WY: 1-mozna 0-nie mozna
::  OLD: \popwmimp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_curtab:=cur_tab();
{? _curtab.WYK='T'
|| 1
|| FUN.info('Funkcja dostępna wyłącznie dla definicji importu używanej w systemie.'@);
   0
?}


\wybwmimp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wybor importow do importu
::   WE: _a - 1-wybor 0-rezygnacja
::   WY: tabela wybranych importow
::  OLD: \wybwmimp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_curtab:=cur_tab();
_tab:=_curtab.sel_aget();
_curtab.sel_adel();
_curtab.cntx_psh();
{? _tab.first()
|| {? {? _a
      || FUN.ask('Czy wybrać zaznaczone definicje importu?\n'
            'Uwaga. Definicje importów używane w systemie należy wybrać funkcją Popraw.'@)
      || FUN.ask('Czy rezygnacja z wyboru zaznaczonych definicji importu?'@)
      ?}
   || {!
      |? {? (_curtab.clear(); _curtab.seek(_tab.REF,))
          & (_curtab.WYK<>'T' | _curtab.WYK='T' & exec('rekwmimp','edi_imp',1,1)='')
         || _curtab.WYB:={? _a || 'T' || 'N' ?};
            _curtab.put(1)
         ?};
         _tab.next()
      !}
   ?}
|| {? {? _a
      || {? _curtab.WYK='T' & _curtab.NKO=_curtab.KOD
         || FUN.info('Definicja importu wykorzystywana w systemie.\n'
               'W celu jej wyboru należy zmienić jej kod (funkcja Popraw).'@);
            0
         |? _curtab.WYK='T' & exec('rekwmimp','edi_imp',1)<>''
         || 0
         || 1
         ?}
      || 1
      ?}
   || _curtab.WYB:={? _a || 'T' || 'N' ?};
      _curtab.put(1)
   ?}
?};
obj_del(_tab);
_curtab.cntx_pop();
~~


\rekwmimp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdzenie poprawnosci
::   WE: [_a] - 1-sprawdzenie bez zaznaczenia wyboru 0-z zaznaczeniem (domyslnie)
::       [_b] - 1-bez komunikatow 0-z komunikatami (domyslnie)
::   WY: ''-jak OK lub akronim pola gdy nie jest dobrze
::  OLD: \rekwmimp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

_wyn:='';
_curtab:=cur_tab();
{? _curtab.WYK='T' & _curtab.WYB='T' & _curtab.NKO=''
|| {? ~_b
   || FUN.info('Ponieważ import o kodzie: %1 był wykonywany w systemie\n'
         'definicja importu zostanie zapisana pod nowym kodem.\n'
         'Wymagany nowy kod definicji importu.'@[_curtab.KOD])
   ?};
   _wyn:='NKO'
|? _curtab.WYK='T' & (_a |_curtab.WYB='T') & _curtab.NKO<>''
|| _jest:=0;
   ISTDEF.cntx_psh();
   ISTDEF.index('K');
   ISTDEF.prefix('XPERTIS','M',_curtab.NKO);
   {? ISTDEF.first()
   || {!
      |? {? ISTDEF.K=_curtab.NKO
         || _jest:=1;
            0
         || ISTDEF.next()
         ?}
      !}
   ?};
   ISTDEF.cntx_pop();
   {? _jest
   || {? ~_b
      || FUN.info('Podany kod: %1 jest już wykorzystywany w systemie.\n'
            'Należy podać inny.'@[_curtab.NKO])
      ?};
      _wyn:='NKO'
   ||
::    sprawdzenie w aktualnej tabelce
      _nko:=_curtab.NKO;
      _aref:=_curtab.ref();
      _kod:='';
      _curtab.cntx_psh();
      _curtab.clear();
      {? _curtab.first()
      || {!
         |? {? _curtab.ref<>_aref & _curtab.NKO=_nko
            || _jest:=1;
               _kod:=_curtab.KOD;
               0
            || _curtab.next()
            ?}
         !}
      ?};
      _curtab.cntx_pop();
      {? _jest
      || {? ~_b
         || FUN.info('Podany kod: %1 przypisano do definicji o kodzie: %2.\n'
               'Należy podać inny.'@[_curtab.NKO,_kod])
         ?};
         _wyn:='NKO'
      ?}
   ?}
|? _curtab.WYK='T' & _curtab.WYB='N' & _curtab.NKO<>''
||
:: sprawdzenie w aktualnej tabelce
   _jest:=0;
   _nko:=_curtab.NKO;
   _aref:=_curtab.ref();
   _kod:='';
   _curtab.cntx_psh();
   _curtab.clear();
   {? _curtab.first()
   || {!
      |? {? _curtab.ref<>_aref & _curtab.NKO=_nko
         || _jest:=1;
            _kod:=_curtab.KOD;
            0
         || _curtab.next()
         ?}
      !}
   ?};
   _curtab.cntx_pop();
   {? _jest
   || {? ~_b
      || FUN.info('Podany kod: %1 przypisano do definicji o kodzie: %2.\n'
            'Należy podać inny.'@[_curtab.NKO,_kod])
      ?};
      _wyn:='NKO'
   ?}
?};
_wyn


\delwmimp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: usuwa definicje niewykorzytywana by ja nadpisac
::   WE: _a - kod komunikatu
::       _b - wg path
::  OLD: \delwmimp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_wg_pth:=_b;
_do:=do_state()=0;
{? _do || do() ?};
_ref:=null;
ISTDEF.cntx_psh();
ISTDEF.index('K');
ISTDEF.prefix('XPERTIS','M',_a);
{? ISTDEF.first()
|| {!
   |? {? ISTDEF.K=_a
      || _ref:=ISTDEF.ref();
         0
      || ISTDEF.next()
      ?}
   !}
?};
{? _ref<>null
|| EDI_S.index('ISTDEF');
   EDI_S.prefix(_ref);
   {? EDI_S.first() || {! |? EDI_S.del() !} ?};
   EDI_D.index('LP');
   EDI_D.prefix(_ref);
   {? EDI_D.first() || {! |? EDI_D.del() !} ?};
   ISTDEF.del();
   {? _wg_pth
   ||
      __selimp.cntx_psh();
      __selimp.clear();
      {? __selimp.first() || {! |? {? __selimp.SQL=$_ref || __selimp.del() || __selimp.next() ?} !} ?};
      __selimp.cntx_pop()
   ?}
?};
ISTDEF.cntx_pop();
{? _do || end() ?};
~~


\specmimp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: specyfikacja importu
::  OLD: \specmimp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
__selimp.cntx_psh();
_buf:=__selimp.sel_aget();
__selimp.sel_adel();
{? _buf.first()
|| _tab:=tab_tmp(2,'SQL','STRING[16]','','REF','INTEGER','');
   {!
   |? {? (__selimp.clear(); __selimp.seek(_buf.REF,))
      || {? ~__selimp.TREE
         || _korzen:=__selimp.ref();
            __selimp.clear();
            __selimp.prefix(_korzen);
            {? __selimp.first()
            || {!
               |? _tab.clear();
                  {? ~_tab.find_key(__selimp.SQL)
                  || _tab.blank();
                     _tab.REF:=#__selimp.ref();
                     _tab.SQL:=__selimp.SQL;
                     _tab.add(1)
                  ?};
                  __selimp.next()
               !}
            ?}
         || _tab.clear();
            {? ~_tab.find_key(__selimp.SQL)
            || _tab.blank();
               _tab.REF:=#__selimp.ref();
               _tab.SQL:=__selimp.SQL;
               _tab.add(1)
            ?}
         ?}
      ?};
      _buf.next()
   !};
   obj_del(_buf)
|? ~_buf.first() & ~__selimp.TREE
|| _tab:=tab_tmp(1,'REF','INTEGER','');
   _korzen:=__selimp.ref();
   __selimp.clear();
   __selimp.prefix(_korzen);
   {? __selimp.first()
   || {!
      |? _tab.blank();
         _tab.REF:=#__selimp.ref();
         _tab.add(1);
         __selimp.next()
      !}
   ?}
|| _tab:=tab_tmp(1,'REF','INTEGER','')
?};

{? _tab.first()
|| {? _eksport:=FUN.choice('Czy zapisać struktury importu do plików?\nUwaga. Istniejące pliki zostaną nadpisane.'@,,'Specyfikacja nagłówków', 'Eksport danych')
   ||
::    inicjacja bazy komunikatow
      exec('ini_kom','#message','Informacje o zapisie specyfikacji'@);
      {!
      |? {? (__selimp.clear(); __selimp.seek(_tab.REF,))
         || exec('spe2mimp','edi_imp',0, _eksport)
         ?};
         _tab.next()
      !};
::    komunikat o wyniku funkcji
      exec('end_kom','#message')
   ?}
|| exec('spe2mimp','edi_imp')
?};
__selimp.cntx_pop();
~~


\spe2mimp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: specyfikacja importu
::   WE: [_a] 1(domyslnie)-z komunikatami 0-bez komunikatow - drzewo komunikatow
::       [_b] 2-eksport z przykładowymi danymi 1-eksport bez przykładowych danych
::  OLD: \spe2mimp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
_export:={? var_pres('_b')=type_of(0) & _b=2 || 1 || 0 ?};

_ch:=';';
_str:='';
_naglowki:='';
_dane:='';
_fil:='';
_ok:=0;
VAR_DEL.delete('__Mask');
__Mask:='';

_ref:=exec('FindAndGet','#table','ISTDEF',__selimp.SQL,,,null());
ISTDEF.cntx_psh();
_defName:='';
_defDesc:='';
{? ISTDEF.seek(_ref,,1) || _defName:=ISTDEF.K; _defDesc:=ISTDEF.N ?};
_errDesc:={? +_defName & +_defDesc
          || ', w definicji: %1 (%2).\nUtworzenie pliku .csv dla tej definicji zostanie pominięte'@[_defName,_defDesc]
          || ''
          ?};
ISTDEF.cntx_pop();
EDI_Z.C:=_ref;
EDI_D.index('LP');
EDI_D.prefix(_ref);
{? EDI_D.first()
|| _ok:=1;
   {!
   |? {? EDI_D.M='I' & EDI_D.K='_FILE' || _fil:=EDI_D.FLF
      |? EDI_D.M='P' || _naglowki+={? +_naglowki || _ch || '' ?}+EDI_D.K
      ?};
      EDI_D.next()
   !}
?};
_str:=_naglowki;

{? ~_ok
|| {? _a
   || FUN.info('Nie zdefiniowano struktury importu.\nZapis specyfikacji niemożliwy.'@)
   || exec('add_kom','#message','Nie zdefiniowano struktury importu: %1.'@[__selimp.SYM],145,'SPECYFIKACJA')
   ?}
|? _fil=''
|| {? _a
   || FUN.info('Brak informacji o pliku importu (Kody struktury _FILE).\nZapis specyfikacji niemożliwy.'@)
   || exec('add_kom','#message','Brak informacji o pliku importu (Kody struktury _FILE): %1.'@[__selimp.SYM]
       ,145,'SPECYFIKACJA')
   ?}
|? _str=''
|| {? _a
   || FUN.info('Brak kodów w definicji z polami importu (kody dotyczące Pozycji).\nZapis specyfikacji niemożliwy.'@)
   || exec('add_kom','#message','Brak kodów w definicji z polami importu (kody dotyczące Pozycji): %1.'@[__selimp.SYM]
       ,145,'SPECYFIKACJA')
   ?}
|? {? _a || _choice:=FUN.choice('Czy zapisać strukturę importu do pliku %1?'@[_fil],,'Specyfikacja nagłówków', 'Eksport danych') || 1 ?}
|| {? {? _a || _choice=2 || _export ?}
   || {? EDI_D.first()
      || _ok:=1;
         _tab:='';
         _next:=1;
         _existTab:=0;
         _again:=1;
         {!
         |? {!
::          Wykluczenie pól pomocniczych i tabel tymczasowych
            |? _tab:=EDI_D.TAB;
               _kind:=exec('csv_acr_kind','edi_imp',_tab);
               {? _kind='N' || FUN.error('Nieprawidłowa nazwa tabeli/zmiennej: %1%2.'[_tab,_errDesc]); return() ?};
               {? _kind='T' || exec('begin_csv_dane','edi_imp', _tab) ?};
               {? EDI_D.M='P' & _tab<>''
               || _dane+= ';' +
                  {?  EDI_D.FLD = '' | (2 + _tab) = '__' | _kind='Z'
                  || {? +EDI_D.FLE  > 0 || $($(EDI_D.FLE))() || ' ' ?}
                  || $($(_tab + '.' + EDI_D.FLD))()
                  ?};
                  EDI_D.next()
               |? EDI_D.M='I' & EDI_D.K='_EXP' & (_kind='T' | _kind='Z')
               || {? ($(EDI_D.FLE))()
                  ||  EDI_D.next()
                  || {? ~($(_tab + '.next()'))()
                     || _next:=0; _dane:=''; EDI_D.last(); 0
                     || EDI_D.first()
                     ?}
                  ?}
               || EDI_D.next()
               ?}
            !};

            {? _dane<>'' & 1+_dane=';'
            || _dane:=1-_dane
            ?};
            {? _dane<>''
            || _str+='\n' + _dane
            ?};
            _dane:='';
            _do:=0;
            {? _tab<>'' & (2 + _tab) <> '__'
            ||
::             Specjalna obsługa definicji X2M wynikająca z tego, że nazwy definicji nie pokrywają się z nazwami tabel
::             tak jak w przypadku innych definicji ze standardu
               {? _defName*'_X2M'
               || _tab:=exec('map_x2m','edi_imp',_defName)
               ?};
::             Sprawdzenie, czy istnieje akronim tabeli o nazwie przekazywanej w polu SYMBOL
               {! _tab_nr:=1 .. tab_num
               |?  _again
               |!  _acronym:=tab_acr(_tab_nr);
                  {? tab_real(_tab_nr)
                  || {? _acronym=_defName
                     || _again:=0;
                        _existTab:=1
                     ?}
                  ?}
               !};
               _do:={? EDI_D.first() & +_tab
                    || {? _existTab
                       || {? (($(_defName+'.names()'))()).size()=1
                          || {? _tab<>_defName || _tab:=_defName ?};
                             ($(_tab + '.next()'))()
                          ?}
                       || ($(_tab + '.next()'))()
                       ?}
                    ?}
            || _do:=EDI_D.next()
            ?};
            _do & _next
         !};
         exec('end_csv_dane','edi_imp')
      ?}
   || {? EDI_D.first()
      || _ok:=1;
         _tab:='';
         _next:=1;
         {!
         |? _next
         |! _tab:=EDI_D.TAB;
            _kind:=exec('csv_acr_kind','edi_imp',_tab);
            {? _kind='N' || FUN.error('Nieprawidłowa nazwa tabeli/zmiennej: %1%2.'@[_tab,_errDesc]); _ok:=0 ?};
            _next:=EDI_D.next()
         !}
      ?}
   ?};

   {? _ok
      || _name:=_fil;
      _file:=fopen(_name,'ur',1);
      _isfile:={? _file || fclose(_file);1 || 0 ?};
      {? {? _isfile
         || {? _a
            || FUN.ask('Plik %1 już istnieje, nadpisać?'@[_fil])
            || exec('add_kom','#message','Nadpisano istniejący plik %1.'@[_fil],93,'SPECYFIKACJA');
               1
            ?}
         || 1
         ?}
      ||  _file:=fopen(_name,'uw',1);
         {? _file
         || fwrite(_file,_str);
            fclose(_file);
            {? _a
            || FUN.info('Struktura importu została zapisana do pliku:\n'@+exec('inf_path','edi_wspolne',_name))
            || exec('add_kom','#message','Zapisano plik: %1.'@[exec('inf_path','edi_wspolne',_name)],56,'SPECYFIKACJA')
            ?}
         || {? _a
            || FUN.info('Błąd otwarcia pliku.\nStruktura nie została zapisana.'@)
            || exec('add_kom','#message','Błąd otwarcia pliku: %1.'@[_fil],184,'SPECYFIKACJA')
            ?}
         ?}
      ?}
   ?}
?}


\wydrmimp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wydruk zaznaczonych importow
::  OLD: \wydrmimp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
:: sprawdzamy czy zaznaczono galezie z importami
_ok:=0; _wiele:=0;
__selimp.cntx_psh();
_tab:=__selimp.sel_aget();
{? _tab.size()
|| _wiele:=1;
   _tab.clear();
   {? _tab.first()
   || {!
      |? _ok:=(__selimp.clear(); __selimp.seek(_tab.REF,)) & __selimp.TREE<>0;
         ~_ok & _tab.next()
      !}
   ?}
|| _ok:=__selimp.TREE<>0
?};
obj_del(_tab);
__selimp.cntx_pop();

_opc:=0;
{? ~_ok & FUN.ask('Czy wydrukować zestawienie zdefiniowanych importów?'@)
|| __selimp.sel_adel();
   _opc:=2
|? _ok & ~_wiele
|| _opc:=FUN.choice('Wybierz jedną z opcji:'@,,'Specyfikacja importu'@,'Zestawienie importów'@)
|? _ok & _wiele & FUN.ask('Czy wydrukować specyfikacje zaznaczonych importów?'@)
|| _opc:=1
?};
{? _opc=1 || exec('rep_exec','#b_report','','wsp_im1',,,,,,,,'W')
|? _opc=2 || exec('rep_exec','#b_report','','wsp_im2',,,,,,,,'W')
|? ~(~_wiele & ~_ok) & _opc
|| {? _wiele
   || FUN.info('Nie zaznaczono importów.\nWydruk niemożliwy.'@)
   || FUN.info('Nie wybrano importu.\nWydruk niemożliwy.'@)
   ?}
?}


\rekmechi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: akcja rekord - wylaczenie akcji
::  OLD: \rekmechi/edison.fml
::----------------------------------------------------------------------------------------------------------------------
__selimp.actions(__winimp,{? __wybopc=2
                          || {? __selimp.BLK || 'TD' || '' ?}+{? __selimp.TREE || 'W' || 'TWPUON(KRY):N(KRY)' ?}
                          || {? __selimp.BLK | ~__selimp.TREE || 'TW' || '' ?}+'FDUPON:FD'
                          ?},,1);
__selimp.actions_grayed(__winimp,{? __selimp.TREE || '' || 'I' ?});
{? __wybopc=1
|| {? __selimp.TREE
   || __selimp.btn_opt(__selimp_btnimp,'state=normal')
   || __selimp.btn_opt(__selimp_btnimp,'state=grayed')
   ?}
?};
''


\dispdefi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: Wyswietla naglowek importu
::  OLD: \dispdefi/edison.fml
::----------------------------------------------------------------------------------------------------------------------
ISTDEF.clear();
{? __selimp.TREE<>0 & ISTDEF.seek(__selimp.SQL)
|| ISTDEF.memo_get(,'OPIS');
   ISTDEF.win_edit('IMP');
   ISTDEF.display()
?}


\sprdefmi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdzenie poprawnosc definicji komunikatu
::   WY: kod ikonki lub 0 gdy ok
::  OLD: \sprdefmi/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? __selimp.TREE
|| _fil:=0;
   _poz:=0;
   _key:=0;
   ISTDEF.cntx_psh();
   EDI_D.cntx_psh();
   ISTDEF.clear();
   {? ISTDEF.seek(__selimp.SQL)
   || EDI_D.index('LP');
      EDI_D.prefix(ISTDEF.ref());
      {? EDI_D.first()
      || {!
         |? {? EDI_D.M='I' & EDI_D.K='_FILE' || _fil:=+EDI_D.FLF
            |? EDI_D.M='P' || _poz+=1
            |? EDI_D.M='I' & (5+EDI_D.K)='_UKEY' || _key+=1
            ?};
            EDI_D.next()
         !}
      ?}
   ?};
   ISTDEF.cntx_pop();
   EDI_D.cntx_pop();
   {? ~_poz || _wyn:=101
   |? ~_fil || _wyn:=190
   |? ~_key || _wyn:=111
   ?}
?};
_wyn


\odswdefi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: Odswieza definicje importu
::  OLD: \odswdefi/edison.fml
::----------------------------------------------------------------------------------------------------------------------
{? __selimp.size()
|| _ref:=exec('FindAndGet','#table','ISTDEF',__selimp.SQL,,,null());
   EDI_Z.C:=_ref;
   EDI_D.index('LP');
   EDI_D.prefix(_ref);
   EDI_D.first()
|| EDI_D.index('LP');
   EDI_D.prefix(null);
   EDI_D.first()
?};
grp_disp(EDI_D,'WERI');
~~


\odswdef2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: Odswieza definicje importu
::  OLD: \odswdef2/edison.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~__selimp.TREE || EDI_D.actions('WERI','d:d',,1) || EDI_D.actions('WERI','',,1) ?};
1


\odswimpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: Odswieza informacje o imporcie
::   WE: _a - numer okienka
::  OLD: \odswimpo/edison.fml
::----------------------------------------------------------------------------------------------------------------------
EDI_I.cntx_psh();
{? __selimp.size() | 1
|| _ref:=exec('FindAndGet','#table','ISTDEF',__selimp.SQL,,,null());
   {? var_pres('bie_r')<0 || bie_r:=date()~1 ?};
   EDI_I.use('edi_i'+'_'+($bie_r+2));
   EDI_I.index(__ndxedii);
   EDI_I.prefix(_ref);
   EDI_I.first()
|| EDI_I.index(__ndxedii);
   EDI_I.prefix(null);
   EDI_I.first()
?};
grp_disp(EDI_I,__weredji,,1);
EDI_I.cntx_pop();
{? var_press('__tab_id')=type_of('') & __tab_id<>'' & 3+__tab_id='imp' & #(3-__tab_id)
|| tab_sel(#(3-__tab_id),'bottom')
?};
~~


\initmimp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: powolanie tabel do kontroli danych
::   WE: _a - ref ISTDEF
::  OLD: \initmimp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('err_mimp','tab_ukey','def_ukey','dlg_mimp');

tab_ukey:=tab_tmp(3,'KOD','STRING[20]',''
           ,'KO2','STRING[20]',''
           ,'WA1','STRING[100]',''
           ,'WA2','STRING[100]',''
           ,'WA3','STRING[100]',''
           ,'WA4','STRING[100]',''
           ,'WA5','STRING[100]',''
           ,'WA6','STRING[100]','');

err_mimp:=tab_tmp(1,'RODZ','STRING[20]',''
           ,'OPIS','STRING[255]',''
           ,'LINE','STRING[100]','');

def_ukey:=tab_tmp(1,'KOD','STRING[20]',''
           ,'DE1','STRING[20]',''
           ,'DE2','STRING[20]',''
           ,'DE3','STRING[20]',''
           ,'DE4','STRING[20]',''
           ,'DE5','STRING[20]',''
           ,'DE6','STRING[20]',''
           ,'WA1','STRING[100]',''
           ,'WA2','STRING[100]',''
           ,'WA3','STRING[100]',''
           ,'WA4','STRING[100]',''
           ,'WA5','STRING[100]',''
           ,'WA6','STRING[100]',''
           ,'FLF','STRING[100]','');
dlg_mimp:=tab_tmp(2,'KOD','STRING[20]',''
           ,'KO2','STRING[20]','');

:: wypelnia tabele zdefiniowanych kluczow unikalnych
EDI_D.cntx_psh();
EDI_D.index('LP');
EDI_D.prefix(_a);
{? EDI_D.first()
|| {!
   |? {? EDI_D.M='I' & (5+EDI_D.K)='_UKEY'
      || _dan:=exec('sprdefuk','edi_imp',_a,EDI_D.FLF);
         {? _dan.size()
         || def_ukey.clear();
            def_ukey.blank();
            def_ukey.KOD:=EDI_D.K;
            def_ukey.FLF:=EDI_D.FLF;
            _dan.clear();
            {? _dan.first()
            || _i:=0;
               {!
               |? _i+=1;
                  ($('def_ukey.DE'+$_i))():=_dan.DEF;
                  _i<6 & _dan.next()
               !}
            ?};
            def_ukey.add(1)
         ?};
         obj_del(_dan)
      |? EDI_D.M='I' & EDI_D.K='_DLG'
      || exec('wypdlgmi','edi_imp',_a,EDI_D.FLF)
      ?};
      EDI_D.next()
   !}
?};
EDI_D.cntx_pop();
~~


\sprdefuk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza definicje klucza unikalnego i zwraca tabele danych jak jest ok lub brak rekordow w tabeli danych
::   WE: _a - ref ISTDEF
::       _b - string do sprawdzenia
::   WY: tabela danych
::  OLD: \sprdefuk/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=tab_tmp(1,'DEF','STRING[20]','');
_ch:=',';
_buf:=_b;
{!
|? _nr:=_buf*_ch; {? _nr || _war:=form((_nr-1)+_buf); _buf:=_nr-_buf || _war:=form(_buf); _buf:='' ?};
   {? _war<>'' & exec('jest_kod','edi_imp',_a,_war)
   || _wyn.clear();
      _wyn.blank(1);
      _wyn.DEF:=_war;
      _wyn.add(1)
   ?};
   _buf<>''
!};
_wyn


\jest_kod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy istniej kod w komunikacie
::   WE: _a - ref ISTDEF
::       _b - string do sprawdzenia
::   WY: 1-jest 0-nie ma
::  OLD: \jest_kod/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
EDI_D.cntx_psh();
EDI_D.index('K');
EDI_D.prefix(_a,_b);
{? EDI_D.first()
|| {!
   |? _wyn:=EDI_D.K=_b & EDI_D.M='P';
      ~_wyn & EDI_D.next()
   !}
?};
EDI_D.cntx_pop();
_wyn


\wypdlgmi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wypelnia tabele danymi do kontroli dokladnej dlugosci
::   WE: _a - ref ISTDEF
::       _b - string do sprawdzenia
::   WY: tabela danych
::  OLD: \wypdlgmi/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_ch:=',';
_buf:=_b;
{!
|? _nr:=_buf*_ch; {? _nr || _war:=form((_nr-1)+_buf); _buf:=_nr-_buf || _war:=form(_buf); _buf:='' ?};
   {? _war<>'' & exec('jest_kod','edi_imp',_a,_war)
   || dlg_mimp.clear();
      {? ~dlg_mimp.find_key(_war,_war)
      || dlg_mimp.blank();
         dlg_mimp.KOD:=dlg_mimp.KO2:=_war;
         dlg_mimp.add(1)
      ?}
   ?};
   _buf<>''
!};
~~


\sprPIS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy dany komunikat zawiera tylko kody o miejscu wystapienia PIS
::   WY: 1-jest OK 0-nie jest dobrze
::  OLD: \sprPIS/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
EDI_D.cntx_psh();
EDI_D.index('LP');
EDI_D.prefix(EDI_Z.C);
{? EDI_D.first()
|| {!
   |? _wyn:='PIS'*EDI_D.M;
      _wyn & EDI_D.next()
   !}
?};
EDI_D.cntx_pop();
_wyn


\wyczysuk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: czysci e=wartosci w buforze
::  OLD: \wyczysuk/edison.fml
::----------------------------------------------------------------------------------------------------------------------
def_ukey.clear();
{? def_ukey.first()
|| {!
   |? {! _i:=1..6 |! ($('def_ukey.WA'+$_i))():='' !};
      def_ukey.put(1);
      def_ukey.next()
   !}
?}


\ctrlpola
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: kontrola aktualnego rekordu i zapisanie ewentualnego bledu do pliku
::   WE: _a - nr linii odczytywanego pliku
::       _b - wartosc
::  OLD: \ctrlpola/edison.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDI_D.DL>0 & (+_b)>EDI_D.DL & EDI_D.T<>'N'
|| err_mimp.clear();
   err_mimp.blank();
   err_mimp.RODZ:='PRZEKROCZONA DŁUGOŚĆ';
   err_mimp.OPIS:='Nieprawidłowa długość pola '+EDI_D.K+' (max. '+form(EDI_D.DL,,0,'99')+'): '+form(+_b,,0,'99')+'.';
   err_mimp.LINE:='linia: '+form(_a,10,0,'99');
   err_mimp.add(1)
|? EDI_D.WYM='T' & form(_b)=''
|| err_mimp.clear();
   err_mimp.blank();
   err_mimp.RODZ:='WYMAGANA WARTOŚĆ';
   err_mimp.OPIS:='Brak wartości pola '+EDI_D.K+' (pomijane są znaki SPACJI).';
   err_mimp.LINE:='linia: '+form(_a,10,0,'99');
   err_mimp.add(1)
|? EDI_D.DL>0 & (dlg_mimp.clear(); dlg_mimp.find_key(EDI_D.K,EDI_D.K)) & (+_b)<>EDI_D.DL
|| err_mimp.clear();
   err_mimp.blank();
   err_mimp.RODZ:='DOKŁADNA DŁUGOŚĆ';
   err_mimp.OPIS:='Wymagana dokładna długość pola '+EDI_D.K+' (dług. '+form(EDI_D.DL,,0,'99')+'): '+form(+_b,,0,'99')+'.';
   err_mimp.LINE:='linia: '+form(_a,10,0,'99');
   err_mimp.add(1)
|? EDI_D.TAB<>'' & EDI_D.T<>'S' & ~exec('ctrltypp','edi_imp',EDI_D.T,_b)
|| err_mimp.clear();
   err_mimp.blank();
   err_mimp.RODZ:='NIEPOPRAWNY TYP';
   err_mimp.OPIS:='Niepoprawny typ wartości pola '+EDI_D.K
     +' (wymagany typ '+{? EDI_D.T='N' || 'Numeryczny'
                        |? EDI_D.T='D' || 'Data'
                        |? EDI_D.T='G' || 'Godzina'
                        || ''
                        ?}+'): '+form(_b)+'.';
   err_mimp.LINE:='linia: '+form(_a,10,0,'99');
   err_mimp.add(1)
?};
:: dodaje wartosc do kluczy unikalnych
def_ukey.clear();
{? def_ukey.first()
|| {!
   |? _i:=0;
      {!
      |? _i+=1;
         {? ($('def_ukey.DE'+$_i))()=EDI_D.K
         || ($('def_ukey.WA'+$_i))():=_b;
            def_ukey.put(1)
         ?};
         _i<6
      !};
      def_ukey.next()
   !}
?}


\ctrl_key
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: kontrola aktualnej linii pod katem unikalnych kluczy
::   WE: _a - nr linii odczytywanego pliku
::  OLD: \ctrl_key/edison.fml
::----------------------------------------------------------------------------------------------------------------------
def_ukey.clear();
{? def_ukey.first()
|| {!
   |? tab_ukey.clear();
      tab_ukey.prefix(def_ukey.KOD,def_ukey.KOD,def_ukey.WA1,);
      {? tab_ukey.first()
       & tab_ukey.find_tab('first','WA2',,'=',def_ukey.WA2
                                  ,'WA3',,'=',def_ukey.WA3
                                  ,'WA4',,'=',def_ukey.WA4
                                  ,'WA5',,'=',def_ukey.WA5
                                  ,'WA6',,'=',def_ukey.WA6
                                  ,'WA1',,'=',def_ukey.WA1)
      || err_mimp.clear();
         err_mimp.blank();
         err_mimp.RODZ:='UNIKALNOŚĆ';
         err_mimp.OPIS:='Powielenie unikalnego klucza o kodzie '+def_ukey.KOD+' (pola klucza: '+def_ukey.FLF+').';
         err_mimp.LINE:='linia: '+form(_a,10,0,'99');
         err_mimp.add(1)
      || tab_ukey.blank();
         tab_ukey.KOD:=tab_ukey.KO2:=def_ukey.KOD;
         {! _i:=1..6 |! ($('tab_ukey.WA'+$_i))():=($('def_ukey.WA'+$_i))() !};
         tab_ukey.add(1)
      ?};
      def_ukey.next()
   !}
?}


\err_mimp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdzenie czy sa bledy warunkow i ewentualne przeniesienie je do komunikatow
::   WY: 1-sa 0-nie ma
::  OLD: \err_mimp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
err_mimp.clear();
{? err_mimp.first()
|| _wyn:=1;
   {!
   |? _ico:={? (1+err_mimp.RODZ)='U' || 63
            |? (1+err_mimp.RODZ)='W' || 185
            |? (1+err_mimp.RODZ)='P' || 8
            |? (1+err_mimp.RODZ)='J' || 184
            |? (1+err_mimp.RODZ)='Z' || 38
            |? (1+err_mimp.RODZ)='I' || 81
            |? (1+err_mimp.RODZ)='B' || 185
            |? (1+err_mimp.RODZ)='D' || 85
            |? (1+err_mimp.RODZ)='N' || 145
            |? (1+err_mimp.RODZ)='O' || 15
            || 4
            ?};
      exec('add_kom','#message',err_mimp.LINE+'  ->  '+err_mimp.OPIS,_ico,err_mimp.RODZ);
      err_mimp.next()
   !}
?};
_wyn


\donemimp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: usuniecie tabel do kontroli danych
::  OLD: \donemimp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('err_mimp','tab_ukey','def_ukey','dlg_mimp');
~~


\infomimp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: zwraca tabele danych o imporcie
::   WE: _a - ref ISTDEF
::   WY: tabela danych 1-systemy 2-plik 3-klucze unikalne
::  OLD: \infomimp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new(3);
{! _i..3 |! _wyn[_i]:='' !};
EDI_S.cntx_psh();
EDI_S.index('ISTDEF');
EDI_S.prefix(_a);
{? EDI_S.first()
|| _wyn[1]+={? +_wyn[1] || ', ' || '' ?}+EDI_S.SYSTEM
|| _wyn[1]:='XPERTIS'
?};
EDI_S.cntx_pop();
EDI_D.cntx_psh();
EDI_D.index('LP');
EDI_D.prefix(_a);
{? EDI_D.first()
|| {!
   |? {? EDI_D.M='I' & EDI_D.K='_FILE'
      || _wyn[2]:=EDI_D.FLF
      |? EDI_D.M='I' & (5+EDI_D.K)='_UKEY'
      || _wyn[3]+={? +_wyn[3] || '; ' || '' ?}+EDI_D.FLF
      ?};
      EDI_D.next()
   !}
?};
EDI_D.cntx_pop();
_wyn


\ctrltypp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: kontrola typu pola NDG
::   WE: _a - typ pola
::       _b - wartosc
::   WY: 1-jest OK 0-nie jest dobrze
::  OLD: \ctrltypp/edison.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? _a='N'
|| _b:=STR.gsub(_b,' ','');
   _b:=STR.gsub(_b,',','.');
   {? _b<>'' || _wyn:=exec('allDigit','#valid',_b) ?}
|? _a='D'
|| {? _b='' || _b:='0000-00-00' ?};
   _yy:=4+_b;
   _mm:=2+(5-_b);
   _dd:=_b+2;
   _wyn:=((+_b)=10)
    & exec('allDigit','#valid',_yy)
    & exec('allDigit','#valid',_mm)
    & exec('allDigit','#valid',_dd)
    & {? ~(#_yy) || ~(#_mm) & ~(#_dd) || 1 ?}
|? _a='G'
|| {? _b='' || _b:='00:00:00' ?};
   _nn:=_b;
   _wsk:=_nn*':';
   {? _wsk
   || _wyn:=exec('allDigit','#valid',(_wsk-1)+_nn); _nn:=_wsk-_nn;
      _wsk:=_nn*':';
      {? _wyn
      || {? _wsk
         || _wyn:=exec('allDigit','#valid',(_wsk-1)+_nn); _nn:=_wsk-_nn;
            _wyn:=_nn='' | exec('allDigit','#valid',(_wsk-1)+_nn)
         || _wyn:=_nn='' | exec('allDigit','#valid',(_wsk-1)+_nn)
         ?}
      ?}
   || _wyn:=0
   ?}
?};
_wyn


\renuedid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: renumeracja pozycji po usunieciu
::  OLD: \renuedid/edison.fml
::----------------------------------------------------------------------------------------------------------------------
exec('mimprenu','edi_imp',1)


\actswitch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PS] [17.00]
:: OPIS: Ustawia domyślnie zaznaczoną akcję, "Wybór" lub "Rezygnacja", w zalezności od tego,
::       czy rekord jest zaznaczony.
::   WE: [_a] - STRING - akronim tabeli, domyślnie - obecnie używana
::       [_b] - STRING - akronim okienka selekcji, domyślnie - obecnie wyświetlane
::----------------------------------------------------------------------------------------------------------------------
_curtab:={? var_pres('_a')=type_of('') || _a || cur_tab() ?};
_curwin:={? var_pres('_b')=type_of('') || _b || cur_win() ?};
_curtab.actions(_curwin,,{? _curtab.WYB='T' || 'R:' || 'W:' ?},1);
~~


\begin_csv_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [wesos] [19.42]
:: OPIS: czynności przed eksportem danych przykładowych
::   WE: _a [STRING] - akronim tabeli
::----------------------------------------------------------------------------------------------------------------------
{? var_press('tablice_acr') < 0 || exec('list_decl','#list'); tablice_acr:=obj_new(@.CLASS.List) ?};
{? ~exec('founded_csv_dane','edi_imp', _a)
|| tablice_acr.add(_a);
   ($(_a + '.cntx_psh()'))();
   ($(_a + '.first()'))()
?}


\founded_csv_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [wesos] [19.42]
:: OPIS: informuje o tym czy znalazł zadany akronim w liście
::   WE: [_a] akronim tabeli
::   WY: [1] - znaleziono
::       [0] - nie znaleziono
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
{? tablice_acr.first()
|| {! |?
      {? tablice_acr.get() = _a || _res:=1 ?};
      tablice_acr.next()
   !}
?};
return(_res)


\end_csv_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [wesos] [19.42]
:: OPIS: czynności po eksporcie danych przykładowych
::   WE:
::----------------------------------------------------------------------------------------------------------------------
{? var_press('tablice_acr') >= 0
|| {? tablice_acr.first()
   ||
      {! |?
         _tab:=tablice_acr.get();
         ($(_tab + '.cntx_pop()'))();
         tablice_acr.next()
      !}
   ?};
   obj_del(tablice_acr);
   VAR_DEL.delete('tablice_acr')
?};
VAR_DEL.delete('__Mask')


\assign_istdef
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przypisuje do bufora tabeli ISTDEF odpowiednie wartości z tablicy podanej jako argument.
::   WE: _a [DICT] - tablica nazwana z wartościami dla pól bufora tabeli ISTDEF
::   WY: 0/1 - nie udało / udało się przypisać zawartość tablicy do bufora
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<100 || return(0) ?};
_buffer:=_a;

ISTDEF.IST_ISTK:=_buffer.ist_istk;
ISTDEF.SYSTEM:=_buffer.system;
ISTDEF.K:=_buffer.k;
ISTDEF.VER:=_buffer.ver;
ISTDEF.N:=_buffer.n;
ISTDEF.W:=_buffer.w;
ISTDEF.R:=_buffer.r;
ISTDEF.FW:=_buffer.fw;
ISTDEF.FR:=_buffer.fr;
ISTDEF.FORMAT:=_buffer.format;
ISTDEF.ACTION:=_buffer.action;
ISTDEF.FMMAIN:=_buffer.fmmain;
ISTDEF.LP:=_buffer.lp;

1


\assign_edi_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przypisuje do bufora tabeli EDI_D odpowiednie wartości z tablicy podanej jako argument.
::   WE: _a [DICT] - tablica nazwana z wartościami dla pól bufora tabeli EDI_D
::   WY: 0/1 - nie udało / udało się przypisać zawartość tablicy do bufora
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<100 || return(0) ?};
_buffer:=_a;

EDI_D.LP:=_buffer.lp;
EDI_D.K:=_buffer.k;
EDI_D.T:=_buffer.t;
EDI_D.OP:=_buffer.op;
EDI_D.M:=_buffer.m;
EDI_D.TAB:=_buffer.tab;
EDI_D.FLD:=_buffer.fld;
EDI_D.RL:=_buffer.rl;
EDI_D.FLF:=_buffer.flf;
EDI_D.FLE:=_buffer.fle;
EDI_D.DL:=_buffer.dl;
EDI_D.WYM:=_buffer.wym;
EDI_D.UPPER:=_buffer.upper;
EDI_D.G:=_buffer.g;

1


\max_lp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wyszukuje maksymalny numer Lp z pola LP w tabeli ISTDEF.
::   WE: _a[DICT] - tablica nazwana z elementami bufora tabeli ISTDEF potrzebnymi do indeksu tymczasowego.
::   WY: masymalny numer Lp dla pola LP tabeli ISTDEF lub 0
::----------------------------------------------------------------------------------------------------------------------
_istdefBuff:={? var_pres('_a')>100 || _a || return(0) ?};

_maxLp:=0;
_data0:=date(0,0,0);

_ndxLp:=ISTDEF.ndx_tmp(,,'SYSTEM',,,'IST_ISTK',,,'RODZAJ',,,'NR',,,'DATA',,,'LP',,);
ISTDEF.index(_ndxLp);
ISTDEF.prefix('XPERTIS','M','IMPORT',null,_data0);
{? ISTDEF.last() || _maxLp:=ISTDEF.LP ?};
ISTDEF.ndx_drop(_ndxLp);
{? _maxLp>0 || _maxLp+=1 ?};
_maxLp


\csv_acr_kind
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Określa rodzaj dla przekazanego ciągu znaków (tabela/zmienna strukturalna/inny komunikat/nieprawidłowy komunikat)
::       w celu dalszego postępowowania z eksportem przykładowych danych csv.
::   WE: _a [STRING] - przekazany ciąg znaków
::   WY: T/Z/I/N - tabela/zmienna strukturalna/inny komuniakat EDI/nieprawidłowy komunikat
::----------------------------------------------------------------------------------------------------------------------
_name:={? var_pres('_a')>0 || _a || '' ?};

{? _name='' | (2 + _a) = '__' || return('I') ?};
_kind:='N';
{! _ii:=1..tab_num()
|! {? _a=tab_acr(_ii)
   || {? tab_real(_ii) || _kind:='T' || _kind:='Z' ?};
      _ii:=tab_num()
   ?}
!};
_kind


\map_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Zwraca nazwę tabeli, której dotyczy import w przypadku definicji dotyczących X2M na podstawie nazwy definicji.
::   WE: _a [STRING] - nazwa definicji
::   WY: _tabName - nazwa tabeli
::----------------------------------------------------------------------------------------------------------------------
_tabName:='';
_defName:={? var_pres('_a')=type_of('') & +_a || _a || return(_tabName) ?};

:: nazwy, dla których pierwszy sposób przetwarzania (nazwa tabeli + _X2M)
_regNames:='PKO_X2M|P_INFO_X2M|RD_X2M|H_UM_X2M|H_X2M|';
_regNames+='N_X2M|G_X2M|K_X2M|RH_X2M|ZC_INFO_X2M|O_X2M|LS_X2M|ZC_X2M|DS_X2M|LSS_X2M|KP_X2M|KZ_X2M|TZ_X2M';
:: nazwy, dla których drugi sposób przetwarzania (nazwa tabeli + _X2M + _ZC)
_zcNames:='P_X2M_ZC|H_X2M_ZC|H_UM_X2M_ZC|O_X2M_ZC|LS_X2M_ZC';
:: nazwy, dla których trzeci sposób przetwarzania (nazwa tabeli + _X2M + _KTR)
_ktrNames:='P_X2M_KTR|H_UM_X2M_KTR|H_X2M_KTR';
{? _regNames*_defName
|| _tabName:=_defName-4
|? _zcNames*_defName
|| _tabName:=_defName-7
|? _ktrNames*_defName
|| _tabName:=_defName-8
|? 'BADANIE_X2M'*_defName
|| _tabName:='BDO'
?};
_tabName

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:37 b9b0531e884b2cf74ce1a393dac454f9a92003354ca0da5265acb63037317ded004c76a6cab046f3f058fb904d04cb10c5a28f23a3b2caff7519db8b9d65c7411bad9aae8fe7a19a9082c3eba6309ea8b2550047a36222e34bdd68ed90a9369f9ed18977d4c2166d801e7cfc1f5abd61cbfaa50f650ca462fad3ad2fcebd4666
