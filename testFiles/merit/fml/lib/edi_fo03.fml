:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: edi_fo03.fml
:: Utworzony: 04.07.2019
:: Autor: PD
:: Systemy:
::======================================================================================================================
:: Zawartość: Modyfikacje formuł do obsługi komunikatów EDI
::======================================================================================================================

\r_faks_ds
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: read - dokument sprzedaży - start document
::       [PD] zakomentowano fragment z weryfikazją wersji komunikatu
::       [PD] oryginał formuły - 'r_faks_ds','edi_fo01'
::   WE: _a - [F]aktura, [K]orekta
::   WY: -1/0/1
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_pres('_a')=type_of('') || _a || '' ?};
{? _typ='' | 'FK'*_typ=0
||
   FUN.info('Nieprawidłowy parametr funkcji r_faks_ds.'@);
   return(-1)
?};
_result:=1;
:: _def_pid - identyfikator pozycji definicji: cbc:CustomizationID - weryfikacja wersji komunikatu
:_def_pid:={? _typ='F' || '62a13f2232bf29aea545199e90dfa24ee9b3e19a'  || '294d17b632a359fc1cd1ded9996059d8f4ac26a4' ?};
:_valID:=0;
:_val:=exec('id_val','edi_xml',_def_pid);
:{? var_pres('_val')<>type_of(~~)
:      &
:   var_pres('[1]',_val)<>type_of(~~)
:||
:   _valID:=
:      {? _typ='F'
:      ||
:         _val[1]='urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0'
:      ||
:         _val[1]='urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0#extended#urn:fdc:www.efaktura.gov.pl:ver1.0'
:      ?}
:?};
:{? _valID=0
:||
:   exec('add_kom','#message','Niepoprawna wersja komunikatu.',4,__XML.ID);
:   return(-1)
:?};
VAR_DEL.delete('__N','__V','__P');
{? _result
||
   EDI_Z.POMIN:='N';
   BEER.WYSTFAKS:=null()
?};
_result

\sv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: wyznacza SLO.ref() dla kodu stawki vat _a
::       [PD] zmodyfikowano wartość _val
::       [PD] oryginał formuły - 'sv','edi_fo01'
::   WE: _a - kategoria
::             Kod   Opis
::             AE    Odwrotne opodatkowanie - Vat Reverse Charge
::             E     Nie podlega opodatkowaniu - Exempt from Tax
::             S     Standardowa stawka - Standard rate
::             Z     0% opodatkowania - Zero rated goods
::             G     Pozycja eksportowana, bez naliczania podatku - Free export item, tax not charged
::             O     Usługi nieopodatkowane - Services outside scope of tax
::             K     Wyłączenie opodatkowania  dla wewnątrz wspólnotowej dostawy towarów
::                   lub usług - VAT exempt for EEA intra-community supply of goods and services
::             L     Podatek pośredni na Wyspach Kanaryjskich (Canary
::             M     Podatek w przypadku produkcji, usług i importu w Ceucie i Melilli
::       _b - [STRING] procent
::       _c - rodzaj
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
{? _c='VAT'
||
   SLO.cntx_psh();
   SLO.index('SL');
   SLU.cntx_psh();
   SLU.index('NAZ');
   SLU.prefix('~STAWKI VAT PL');
   {? ~SLU.first()
   ||
      ~~

   |? _a='S'
   ||
::    'bd' przypisywane w formule - start document
      {? _b<>'bd'
      ||
         _val:=(' '+($(#_b)))+2;
         SLO.prefix(SLU.ref(),_val+' %');

         {? SLO.first() || _result:=SLO.ref() ?}
      ?}

   |? _a='AE'
   ||
      SLO.prefix(SLU.ref(),' -o');
      {? SLO.first() || _result:=SLO.ref() ?}

   |? _a='E'
   ||
      SLO.prefix(SLU.ref(),'Zwol.');
      {? SLO.first() || _result:=SLO.ref() ?}

   |? _a='Z'
   ||
      SLO.prefix(SLU.ref(),' 0 %');
      {? SLO.first() || _result:=SLO.ref() ?}

   |? _a='G'
   ||
      SLO.prefix(SLU.ref(),' -');
      {? SLO.first() || _result:=SLO.ref() ?}

   |? _a='O'
   ||
      SLO.prefix(SLU.ref(),' -');
      {? SLO.first() || _result:=SLO.ref() ?}

   |? _a='K'
   ||
      SLO.prefix(SLU.ref(),' -zw0');
      {? SLO.first() || _result:=SLO.ref() ?}
   ?};
   SLU.cntx_pop();
   SLO.cntx_pop()
?};
_result

\faksv_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: wartość w stawkach - koniec
::       [PD] zmodyfikowano wartość FAKSV.SV
::       [PD] oryginał formuły - 'faksv_end','edi_fo01'
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_verify:=exec('verify','edi_xml');
_kor:=POM.TYPYSP().KOR='T';
_wal:=FAKS.WAL<>FAKS.NWAL;
{? _verify
||
   {? _wal=0
   ||
::      _nwal:=exec('bl_nwal','ustawienia');
      FAKSV.SV:=exec('sv','edi_fo03',__V.SV_ID,__V.SV_P,__V.SV_TSID);
      FAKSV.WAL:=exec('wal','edi_fo01',__V.WAL);
      {? FAKSV.SV=null()
      ||
         _msg:='Brak stawki vat (%1,%2,%3) w systemie.'@[__V.SV_ID,__V.SV_P,__V.SV_TSID];
         exec('add_kom','#message',_msg,2,__XML.ID);
         exec('add_kom','#message',_msg,2,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?});
         _result:=0

      |? FAKSV.WAL=null()
      ||
         _msg:='Brak waluty %1 w systemie.'@[__V.WAL];
         exec('add_kom','#message',_msg,2,__XML.ID);
         exec('add_kom','#message',_msg,2,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?});
         _result:=0

::      |? FAKS.WAL<>_nwal
::      ||
::         _dok_w:=FAKSV.WAL().KOD;
::         FAKSV.WAL==_nwal;
::         _oddz_w:=FAKSV.WAL().KOD;
::         FAKSV.WAL==_nwal;
::         exec('add_kom','#message','Waluta opodatkowania dokumentu (%1)'
::            ' jest niezgodna z walutą opodatkowania oddziału (%2)'[_dok_w,_oddz_w],2,__XML.ID);
::         _result:=0
      |? __V.SV_ID<>'AE'
      || _stvat:=#((FAKSV.SV().KOD*'%')+FAKSV.SV().KOD-1);
         {? _stvat>0 & __V.WV=0
         || _msg:='Brak wartości VAT dla stawki VAT (%1,%2,%3).'@[__V.SV_ID,__V.SV_P,__V.SV_TSID];
            exec('add_kom','#message',_msg,2,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
         ?};
         {? __V.WN=0
         || _msg:='Brak wartości netto dla stawki VAT (%1,%2,%3).'@[__V.SV_ID,__V.SV_P,__V.SV_TSID];
            exec('add_kom','#message',_msg,2,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
         ?}
      ?}
   ?}

|? _wal=0
||
   _sv:=exec('sv','edi_fo03',__V.SV_ID,__V.SV_P,__V.SV_TSID);
   {? _sv=null()
   ||
      _result=0
   ||
      _wn:=0;
      _wv:=0;
      {? _kor
      ||
         _VT:=__N.VT;
         {? _VT.find_key(__V.SV_ID,__V.SV_P,)
         ||
            _wn:=_VT.WN;
            _wv:=_VT.WV
         ?}
      ?};
      FAKSV.FAKS:=$BEER.WYSTFAKS;
      FAKSV.WN:=__V.WN-_wn;
      FAKSV.WV:=__V.WV-_wv;
      FAKSV.WB:=FAKSV.WN+FAKSV.WV;
      {? __V.UDF_CZY & FAKS.WAL<>FAKS.NWAL
      || FAKSV.WW:=__V.WN_wal+__V.WV_wal;
         FAKSV.WWN:=__V.WN_wal;
         FAKSV.WWV:=__V.WV_wal
      || FAKSV.WW:=FAKSV.WB
      ?};
      FAKSV.SV:=_sv;
      _result:=FAKSV.add()
   ?}
?};
_result

\kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Wyszukiwanie kontrahenta
::       [PD] zmodyfikowano parametry wejściowe
::       [PD] oryginał formuły - 'kh','edi_fo01'
::   WE: _a - gln
::       _b - nip
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: gln
{? _a<>''
||
   exec('find_kh','edi_form',_a)
:: nip
|? _b<>''
||
   exec('FindInSet','#table','KH','SNIP',_b,2,,1,,0)
?}

\dok_ord
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [19.42]
:: OPIS: dokumenty do zapisu - zamówienie
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=obj_new('DOK','TXT');
_result.DOK:=~~;
_result.TXT:='';

_edi:=__ZWSEDIUNIW;
_ref:=_edi.REF;

_Sel:=exec('doc2write','edi_xml');

:: jeden dokument
{? _ref
|| _add:=0;
   ZD_NAG.cntx_psh();
   ZD_NAG.use(ref_name(_ref));
   ZD_NAG.prefix();
   {? ZD_NAG.seek(_ref)
   || _zdnag:=ZD_NAG.ref();
      _sym:=ZD_NAG.SYM;
      _kh:=ZD_NAG.KH;
      _add:=1
   ?};
   ZD_NAG.cntx_pop();
   {? _add
   || _Sel.REF:=$_zdnag;
      _Sel.ID:=_sym;
      _Sel.KH:=$_kh;
      DEZEZW.cntx_psh();
      DEZEZW.index('WR');
      DEZEZW.prefix('ZWS',EDI_Z.C,EDI_Z.WR,_kh,);
      _Sel.PATH:={? DEZEZW.last() || DEZEZW.FILE_PTH || '' ?};
      DEZEZW.cntx_pop();
      {? _Sel.add()
      || _result.DOK:=_Sel
      ?}
   ?};
   return(_result)
?};
{? _edi.sza
|| _result.TXT:='Przetwarzanie bezdialogowe. Nie wskazano dokumentu.';
   return(_result)
?};

:: wiele dokumentów
 _sort:='KH,DATA,SYM';
      _from:='join KH using("ZD_NAG".KH,KH.reference) '+
         'join DEZEZW using(DEZEZW.KH,KH.reference) '+
         'join TYPYZAM using("ZD_NAG".T,TYPYZAM.reference) ';
      _where:='DEZEZW.ISTDEF like :_a'+
         ' and DEZEZW.WR = \':_b\''+
         ' and DEZEZW.B = \'N\''+
         ' and TYPYZAM.R = \'D\''+
         ' and "ZD_NAG".EDI_W = \'N\''+
         ' and "ZD_NAG".ST = \'A\''+
         ' and "ZD_NAG".DATA >= DEZEZW.OD and ("ZD_NAG".DATA <= DEZEZW.DO or DEZEZW.DO is null)';
ZD_NAG.prefix();
ZD_NAG.f_set(_sort,_from,_where,EDI_Z.C,EDI_Z.WR);

{? ZD_NAG.f_first()
||
   _result.DOK:=_Sel;
   DEZEZW.cntx_psh();
   VAR_DEL.delete('__SEL');
   __SEL:=_Sel;
   _wer:=ZD_NAG.mk_sel('EDI - dokumenty do zapisu'@,,0,,,,,,'U');
   ZD_NAG.win_sel(_wer);
   ZD_NAG.win_fld(_wer,,'KH','NAZ',,30,,1,'Kontrahent'@);
   ZD_NAG.win_fld(_wer,,'DATA',,,10,,1,'Data'@);
   ZD_NAG.win_fld(_wer,,'SYM',,,20,,1,'Symbol'@);
   ZD_NAG.win_fld(_wer,,'WAR',,,12,2,1,'Wartość'@);
   ZD_NAG.win_act(_wer,0,'Szukaj',,,,,,0);
   _fb:="
      _Sel:=ZD_NAG.sel_aget();
      {? ~_Sel.first() || _Sel.REF:=#ZD_NAG.ref(); _Sel.add() ?};
      _loop:=_Sel.first();
      {!
      |? _loop
      |!
         {? ZD_NAG.seek(_Sel.REF,)
         ||
            __SEL.REF:=$ZD_NAG.ref();
            __SEL.ID:=ZD_NAG.SYM;
            __SEL.KH:=$ZD_NAG.KH;
            DEZEZW.index('WR');
            DEZEZW.prefix('ZWS',EDI_Z.C,EDI_Z.WR,ZD_NAG.KH);
            __SEL.PATH:={? DEZEZW.last() || DEZEZW.FILE_PTH || '' ?};
            __SEL.add()
         ?};
         _loop:=_Sel.next()
      !};
      sel_exit();
      0
   ";
   ZD_NAG.win_act(_wer,0,'Formuła','Zapisz'@,,'Uruchamia zapis wybranych dokumentów'@,_fb,,1,1,_fb);
   ZD_NAG.win_act(_wer,0,'Wyświetl',,,,"ZD_NAG.f_get(); exec('fall_rek','faktury_nag')",,0);

   ZD_NAG.select();

   VAR_DEL.delete('__SEL');
   DEZEZW.cntx_pop()
?};
ZD_NAG.f_clear();

_result


\dok_desadv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [19.42]
:: OPIS: dokumenty do zapisu - awizo
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;

_Sel:=exec('doc2write','edi_xml');

:: wiele dokumentów
 _sort:='KH,D,SYM';
      _from:='join KH using("ND".KH,KH.reference) '+
         'join DEZEZW using(DEZEZW.KH,KH.reference) '+
         'join TYPYDOK using("ND".TYP,TYPYDOK.reference) ';
      _where:='DEZEZW.ISTDEF like :_a'+
         ' and DEZEZW.WR = \':_b\''+
         ' and DEZEZW.B = \'N\''+
         ' and TYPYDOK.Z = \'T\''
         ' and TYPYDOK.P = \'N\''+
         ' and "ND".EDI_W = \'N\''+
         ' and "ND".Z = \'T\''+
         ' and "ND".D >= DEZEZW.OD and ("ND".D <= DEZEZW.DO or DEZEZW.DO is null)';
ND.prefix();
ND.f_set(_sort,_from,_where,EDI_Z.C,EDI_Z.WR);

{? ND.f_first()
||
   _result:=_Sel;
   DEZEZW.cntx_psh();
   VAR_DEL.delete('__SEL');
   __SEL:=_Sel;
   _wer:=ND.mk_sel('EDI - dokumenty do zapisu'@,,0,,,,,,'U');
   ND.win_sel(_wer);
   ND.win_fld(_wer,,'KH','NAZ',,30,,1,'Kontrahent'@);
   ND.win_fld(_wer,,'D',,,10,,1,'Data'@);
   ND.win_fld(_wer,,'SYM',,,20,,1,'Symbol'@);
   ND.win_fld(_wer,,'WAR',,,12,2,1,'Wartość'@);
   ND.win_act(_wer,0,'Szukaj',,,,,,0);
   _fb:="
      _Sel:=ND.sel_aget();
      {? ~_Sel.first() || _Sel.REF:=#ND.ref(); _Sel.add() ?};
      _loop:=_Sel.first();
      {!
      |? _loop
      |!
         {? ND.seek(_Sel.REF,)
         ||
            __SEL.REF:=$ND.ref();
            __SEL.ID:=ND.SYM;
            __SEL.KH:=$ND.KH;
            DEZEZW.index('WR');
            DEZEZW.prefix('ZWS',EDI_Z.C,EDI_Z.WR,ND.KH);
            __SEL.PATH:={? DEZEZW.last() || DEZEZW.FILE_PTH || '' ?};
            __SEL.add()
         ?};
         _loop:=_Sel.next()
      !};
      sel_exit();
      0
   ";
   ND.win_act(_wer,0,'Formuła','Zapisz'@,,'Uruchamia zapis wybranych dokumentów'@,_fb,,1,1,_fb);
   ND.win_act(_wer,0,'Wyświetl',,,,"ND.f_get(); exec('fall_rek','faktury_nag')",,0);

   ND.select();

   VAR_DEL.delete('__SEL');
   DEZEZW.cntx_pop()
?};
ND.f_clear();

_result

\ord_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [19.42]
:: OPIS: poczatek zamówienia sprzedaży
::   WE: _a - typ dokumentu zakupu
::       _b - identyfikator dokumentu
::       _c - oddział
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
BEER.TYPYZAM:=exec('FindInSet','#table','TYPYZAM','TYP',_a,'Z');
EDI_Z.POMIN:='N';
_typyzam:=_a;
_id:=_b;
_oddz:=_c;
ST.ODDZ:=_oddz;

_result:=1;
_verify:=exec('verify','edi_xml');

BEER.ZK_N:=null();

{? BEER.TYPYZAM=null()
||
   EDI_Z.POMIN:='T';
   exec('add_kom','#message','Brak typu dokumentu %1.'[_typyzam],4,_id);
   _result:=0
||

   POM.NRT:=POM.TYPYDOK().NRT;
   BEER.SZ:='S';
   POM.TAB:='ZK_N';
   POM.TYPDOK:=exec('FindInSet','#table','TYPYZAM','TYP',_a,'Z',"TYPYZAM.KOD",,,'');

   {? _verify=1
   ||
        ZK_N.clear(); ZK_N.blank(); ZK_N.memo_set(,'UW');
        FIND_KH1:='';
        FIND_KH2:='';

      ~~
   ||
      _date:=ZK_N.DP;
      _result:=0;

         __PARSES.setVal('OddzialLogProd',_oddz);
         _args:=__PARSES.args('OkresRok');
         _args.OBSZAR:='LSP';
         _args.AR:=_date~1;
         _args.AM:=_date~2;
         __PARSES.setVal('OkresRok',_args);
         {? __PARSES.setEnv('LSP_ZKN_DRZK')
         ||
            ZK_N.SPOBLRAB:=exec('get','#params',800810,2);
            ZK_N.RAB_TYP:={? ZK_N.T().R='W' || '' || 'P' ?};
            ZK_N.SPP:=exec('spp_bl','ceny');
            {? exec('add_zkn','edi_form',0)
            ||
               BEER.ZK_N:=ZK_N.ref();
               _result:=1
            ?}
         ?}
   ?}
?};
_result


\add_zkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: rr [2008]
:: OPIS: dodaje pozycje zamowienia do systemu,
::       EDI_Z.POMIN ustawiane dla komunikatow xml w systuacji kiedy nie mozna odczytac komunikatu
::       poniewaz dokument juz istnieje w systemie
::       [PD] dodano warunek z wartością _verify
::       [PD] oryginał formuły - 'add_zkp','edi_fo01'
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_verify:=exec('verify','edi_xml');
_edi:=exec('edi','edi_wspolne');
_context:=_edi.context;
_Map:={? _context.TYPE=exec('context_type_bl','edi_wspolne') || _context.MAP || ~~ ?};

{? _verify=1
|| {? type_of(_Map)<>type_of(~~) & __P.MKODK_KTM<>''
   || _Map.KTM:=__P.MKODK_KTM;
      _Map.add()
   ?};
   {? ZK_P.M=null()
   || {? _context.TYPE=exec('context_type_bl','edi_wspolne') & ZK_N.KH
      || {? __P.MKODK_KODK='' & __P.MKODK_KTM='' & __P.MKODK_N=''
         || _msg:='Pozycja %1: brak danych identyfikujących indeks.'@[$ZK_P.POZ]
         || {? ZK_N.KH=DOKUM.KH
            || exec('kodt_add','edi_fo_ufd',ZK_N.KH,__P.MKODK_KODK,__P.MKODK_KTM,__P.MKODK_N);
               _msg:='Pozycja %1: wymagane mapowanie indeksu (%2; %3; %4).'@[$ZK_P.POZ,__P.MKODK_KODK,__P.MKODK_KTM,
                     __P.MKODK_N]
            || _msg:='Pozycja %1: Niedostępne wymagane mapowanie indeksu jeśli niezgodny kontrahent (%2;%3).'@[
                     $ZK_P.POZ,DOKUM.KH().SNIP,ZK_N.KH().SNIP]
            ?};
            _result:=0
         ?}
      || {? var_pres('FIND_M')=type_of('')
         || {? FIND_M=''
            || _msg:='Pozycja %1: nie wypełniono materiału (nie podano kodu).'[$ZK_P.POZ]
            || _msg:='Pozycja %1: nie wypełniono materiału (nieznany kod: %2).'[$ZK_P.POZ,FIND_M]
            ?}
         || _msg:='Pozycja %1: nie wypełniono materiału.'[$FAP.POZ]
         ?}
      ?};
      _result:=0;
      {? ZK_N.ZAM_KL<>'' | ZK_N.SYM<>''
      || exec('add_kom','#message',_msg,2,'%1 (%2)'[__XML.ID,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?}])
      || exec('add_kom','#message',_msg,2,__XML.ID)
      ?}
   || {? __P.MAPINFO='T'
      || _jm:=exec('ufd2jm','edi_fo_ufd',__P.JM);
         _jmm:=ZK_P.M().J().KOD
      || _jm_kh:=exec('FindAndGet','#table',MKODK,__P.MKODK,,"MKODK.JMK().KOD",'');
         _jm:=exec('ufd2jm','edi_fo_ufd',__P.JM);
         {? _jm_kh<>'' & _jm_kh<>_jm
         || _msg:='Pozycja %1: jednostka (%2) niezgodna z jednostką kontrahenta (%3).'[$ZK_P.POZ,_jm,_jm_kh];
            {? ZK_N.ZAM_KL<>'' | ZK_N.SYM<>''
            || exec('add_kom','#message',_msg,2,'%1 (%2)'[__XML.ID,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?}])
            || exec('add_kom','#message',_msg,2,__XML.ID)
            ?}
         || _jm:=exec('ufd2jm','edi_fo_ufd',__P.JM);
            _jmm:=ZK_P.M().J().KOD
         ?}
      ?};
      {? _jm<>'' & _jmm<>_jm
      || _msg:='Pozycja %1: jednostka (%2) niezgodna z jednostką materiału (%3).'[$ZK_P.POZ,_jm,_jmm];
         {? ZK_N.ZAM_KL<>'' | ZK_N.SYM<>''
         || exec('add_kom','#message',_msg,2,'%1 (%2)'[__XML.ID,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?}])
         || exec('add_kom','#message',_msg,2,__XML.ID)
         ?}
      ?}
   ?};
:: wypełnienie kursu, żeby w logu nie było komunikatu o jego braku
   _wal:=ZK_N.WAL<>exec('bl_wal','ustawienia');
   {? _wal & __P.KRS>0 & ZK_N.KRS<>ZK_P.KRS
   || ZK_N.KRS:=ZK_P.KRS;
      ZK_N.DTK:=ZK_N.DP
   ?}
|| {? EDI_Z.POMIN='N'
   || {? BEER.ZK_N=null
      || FUN.info(exec('msg','edi_wspolne','ERR_EDI_BRAK_WSK_ZK_N'))
      || BEER.TYP:='Z'; BEER.ZK_N:=ZK_P.N;
         _wal:=ZK_N.WAL<>exec('bl_wal','ustawienia');
         {? _wal & __P.KRS>0 & ZK_N.KRS<>ZK_P.KRS
         || ZK_N.KRS:=ZK_P.KRS;
            ZK_N.DTK:=ZK_N.DP;
            ZK_N.put()
         ?};
         ZK_P.RMAG:=ZK_P.MG:={? (ZK_P.RODZ='Z' | ZK_P.M().RODZ<>'U') || ZK_P.N().MG || null() ?};
         ZK_P.DOST:=0;
         ZK_P.REZ:=0;
         ZK_P.ILP:=ZK_P.ILZ;
         ZK_P.JM:=ZK_P.M().J;
         ZK_P.IL2:=ZK_P.ILP;
         ZK_P.WS2:=1;
         ZK_P.T2:='G';
         ZK_P.J2:=ZK_P.JM;
         ZK_P.NR:=exec('bl_nrpoz','zamsiw_poz');
         ZK_P.ILBEZ:=ZK_P.ILP;
         ZK_P.CZYBEZ:='T';
         ZK_P.ZBB:='T';
         ZK_P.KH:=ZK_P.N().KH;
         ZK_P.KH_ODB:=ZK_P.N().ODB;
         {? ZK_P.add(1)
         || exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
            _zkp:=ZK_P.ref();
            exec('admatzkp','rezerwacje',$ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N,$ZK_P.ref());
            {? exec('get','#params',100300,2)='T' & exec('get','#params',3001,2,OPERATOR.USER)='T'
            || ZK_P.cntx_psh();
               ZK_P.REZ:=0;
               exec('rez_pozy','rezerwacje',0,,,,,0);
               ZK_P.cntx_pop();
               ZK_P.get()
            ?};
            exec('war_pozz','zamsiw_poz');
            exec('chk_pozy','zamsiw_poz',1);
            ZK_P.put(1);
            exec('inf_dod','fakso',0,'zkpoz')
         ?}
      ?}
   ?}
?};

_result


\end_zkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: koniec zamowienia
::       [PD] dodano warunek z wartością _verify
::       [PD] usunięto exec('akt_rezy','rezerwacje')
::       [PD] oryginał formuły - 'end_zkn','edi_form'
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------

_verify:=exec('verify','edi_xml');
{? _verify=1
   ||
      1
   ||

   exec('aktznzkn','zamsiw_nag',BEER.ZK_N,1);
   exec('obl_warz','zamsiw_nag',BEER.ZK_N);
   1
?}

\bl_zkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: rr [2008]
:: OPIS: poczatek pozycji zamowienia
::       [PD] dodano warunek z wartością _verify
::       [PD] oryginał formuły - 'bl_zkp','edi_form'
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------

VAR_DEL.delete('__P');
__P:=obj_new(
       'SV_ID','SV_P','SV_TSID',
       'PRICEA',
       'MAPINFO',
       'JM',
       'MKODK','MKODK_KODK','MKODK_KTM','MKODK_N',
       'KRS');
__P.SV_ID:=''; __P.SV_P:='bd';
__P.PRICEA:=0;
__P.MAPINFO:='N';
__P.JM:='';
__P.MKODK:=null(); __P.MKODK_KODK:=''; __P.MKODK_KTM:=''; __P.MKODK_N:='';
__P.KRS:=0;

_verify:=exec('verify','edi_xml');
{? ~_verify=1
|| ZK_P.clear(); ZK_P.blank(); ZK_P.T:='Z'; ZK_P.N:=BEER.ZK_N; ZK_P.M:=null();
   FIND_M:=''
?};
1


\desadv_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [19.42]
:: OPIS: poczatek dokumentu przychodowego
::   WE: _a - numer dokumentu
::       _b - typ dokumentu przychodowego
::       _c - magazyn
::       _d - data dokumentu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_verify:=exec('verify','edi_xml');
EDI_Z.POMIN:='N';
{? _verify=1
||
   ND.clear(); ND.blank();
   FIND_KH2:=''
||

   _nrdok:=_a;
   _typydok_t:=_b;
   _mg_sym:=_c;
   _date:=_d;

:: DRO_TODO_AWI: jeśli jest zamówienie to pobierać z niego magazyn - założenie, że magazyn jest jeden dla całego zamówienia

   _typydok:=exec('FindInSet','#table','TYPYDOK','TYP',_typydok_t,_typydok_t);
   _mg:=exec('FindInSet','#table','MG','MAGAZYNY',_mg_sym,_mg_sym,,1);
   _oddz:=exec('FindAndGet','#table',MG,_mg,,"MG.ODDZ",'');
   BEER.NDPOW:=null();

   {? _date=~~ | _date=date(0,0,0)
   || _date:=date();
      ND.D:=_date;
      exec('add_kom','#message','Zmieniono pustą datę na datę bieżącą.'@,4,_nrdok)
   ?};

   {? _typydok=null()
   ||
      exec('add_kom','#message','Brak typu dokumentu %1.'@[_a],4,_nrdok);
      return(0)
   |? _mg=null()
   ||
      exec('add_kom','#message','Brak magazynu %1.'@[_c],4,_nrdok);
      return(0)
   |? _oddz=''
   ||
      exec('add_kom','#message','Nie określono oddziału.'@,4,_nrdok);
      return(0)
   ||
      _result:=0;
      POM.TAB:='ND';
      POM.TYPDOK:=exec('FindInSet','#table','TYPYDOK','TYP',_typydok_t,_typydok_t,"TYPYDOK.T",,,'');
      POM.NRT:=exec('FindInSet','#table','TYPYDOK','TYP',_typydok_t,_typydok_t,"TYPYDOK.NRT",,,0);

:: ustawienie środowiska pracy
      __PARSES.setVal('OddzialLogProd',_oddz);
      __PARSES.setVal('Magazyn',_mg);
      _args:=__PARSES.args('OkresRok');
      _args.OBSZAR:='LMG';
      _args.AR:=_date~1;
      _args.AM:=_date~2;
      __PARSES.setVal('OkresRok',_args);
      {? __PARSES.setEnv('LMG_MAG_DAPZ')
      ||
         _nd:=exec('addnag','magdok_nag',_mg,ST.AR,ST.AM,_typydok,'N',,ND.D,,,,,,,,,-1);
         ND.prefix();
         {? _nd & ND.seek(_nd)
         ||

            _result:=1;
            BEER.NDPOW:=_nd
         ?}
      ?}
   ?}
?};
_result

\add_nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: aktualizacja nagłówka dokumentu przychodowego
::       [PD] dodano warunek z wartością _verify
::       [PD] oryginał formuły - 'add_nd','edi_form'
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');

{? _verify=1
||
   1
||
   {? EDI_Z.POMIN='N'
   || {? ND.D=date(0,0,0)
      || ND.D:=date()
      ?};
      {? ND.KH<>null()
      || _Chk:=sql('
            select SYM
            from @ND
            where KH=:_a and ID=\':_b\'
         '
         ,ND.KH,ND.ID);
         {? _Chk.first()
         || EDI_Z.SYM:=_Chk.SYM;
            exec('add_kom','#message','Dokument magazynowy %1 jest już w systemie'@[EDI_Z.SYM],2,ND.ID);
            EDI_Z.SYM:='';
            EDI_Z.POMIN:='T'
         ?}
      ?}
   ?};
   {? EDI_Z.POMIN='N'
   || ND.NR:=exec('numer_new','numery','PACZKA');
      exec('znak','numery','ND');
      exec('poland_save','jpk_log',0);
      ND.EDI_R:='T';
      ND.put();
:: dodanie informacji do tabeli z komunikatem zwrotnym
      exec('nd_valid','magdok_nag',1);
       exec('add_kom','#message','Dodano dokument magazynowy: %1'@[ND.SYM],1,{? ND.ID='' || ND.SYM || ND.ID ?});
      EDI_Z.DOK:=BB.refsql(ND.ref()); EDI_Z.SYM:=ND.SYM; EDI_Z.KH:=ND.KH;
      1
   ||
      {? BEER.NDPOW || exec('n_usun','magdok_nag',0) ?};
      0
   ?}
?}

\bl_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: dodanie pozycji dokumentu przychodowego
::       [PD] dodano warunek z wartością _verify
::       [PD] oryginał formuły - 'bl_dk','edi_form'
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------

_verify:=exec('verify','edi_xml');

{? _verify=1
||
   1
||

   {? EDI_Z.POMIN='N'
   ||
      DK.prefix();

      ATR.MJS:='DK';
      exec('ustawprz','magdok_poz');

      BEER.MW:='M';
      exec('ustaw_ww','eurusd',BEER.MW); BEER.LW:={? BEER.WW || 'W' || '' ?};

      BEER.TAB:='DK';

      FIND_M:='';

      DK.blank();
      DK.WAL:={? DK.N().WAL<>null || DK.N().WAL || INFO.NAROD ?};
      exec('istatr_nd2dk','magdok_poz');
      DK.KH:=DK.N().KH;
      DK.KH_ODB:=DK.N().KH_ODB;
      DK.add()
   ?}
?}


\add_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: aktualizacja pozycji dokumentu przychodowego
::       [PD] dodano warunek z wartością _verify
::       [PD] oryginał formuły - 'add_dk','edi_form'
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_verify:=exec('verify','edi_xml');

{? _verify=1
||
   1
||
   exec('add_dk','edi_form')
?}


\end_nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: zakonczenie dokumentu przychodowego
::   WE: _a - numer zamówienia kupującego
::       [PD] dodano warunek z wartością _verify
::       [PD] oryginał formuły - 'end_nd','edi_form'
::   WY:
::----------------------------------------------------------------------------------------------------------------------

 _verify:=exec('verify','edi_xml');

{? _verify=1
||
   1
||

   _nrdok:={? var_pres('_a')=type_of('') || _a || '' ?};

   _nd:=BEER.NDPOW;

   {? _nd
   ||
      {? EDI_Z.POMIN='N'
      ||
         EDI_Z.SYM:=ND.SYM; EDI_Z.KH:=ND.KH;
::    aktualizacja wartości dokumentu
         exec('dk_sum','magdok_wspolne',_nd);
::    wygenerowanie realizacji zamówienia
         _kh:=ND.KH;
         {? _kh & _nrdok<>''
         ||
            _Zd_nag:=sql('
               select ZD_NAG.REFERENCE REF
               from @ZD_NAG
               where KH=:_a and SYM=\':_b\' '
               ,_kh,_nrdok);
            {? _Zd_nag.first() & ~_Zd_nag.next()
            ||
               _zd_nag:=exec('FindAndGet','#table',ZD_NAG,_Zd_nag.REF,,,null());
               {? _zd_nag
               ||
                  VAR_DEL.delete('__pozydk');
                  __pozydk:=tab_tmp(3
                     ,'SQL','STRING[16]',''
                     ,'ILE','REAL',''
                     ,'ILP','REAL','');
                  do();
                  exec('reawgzam','zamdst_rea',_zd_nag,$_nd,_zd_nag);
                  end()
               ?}
            ?}
         ?};
         1

      |? EDI_Z.POMIN='T'
      ||
         exec('n_usun','magdok_nag',0);
         0
      ?}
   ?}
?}

\zkn_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [19.42]
:: OPIS: start group zamówienia sprzedaży
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__matakt');
__matakt:=tab_tmp(2
         ,'REF','STRING[16]',''
         ,'NRK','INTEGER',''
         ,'ILR','REAL',''
         ,'ZKP','STRING[16]',''
         ,'ZKN','STRING[16]','');
exec('init','lsp');
1


\zkn_e
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [19.42]
:: OPIS: end group zamówienia sprzedaży
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('akt_rezy','rezerwacje');
VAR_DEL.delete('__matakt');
1


\date_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [19.42]
:: OPIS: end group zamówienia sprzedaży
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of(date())
||
   _date:='%1-%2-%3'[form(_a~1,,,'99'),form(_a~2,-2),form(_a~3,-2)]
||
   _date:=''
?};
_date


\fap_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.14]
:: OPIS: sprawdzenie czy pozycja ma wymagany split payment
::----------------------------------------------------------------------------------------------------------------------
{? (FAP.FAKS().SP_WYM='T') & FAP.M & (FAP.M().SP_WYM='T')
||
   FAP.SP_WYM:='T'
?}

\codebybuyer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.14]
:: OPIS: wypełnienie pola codebybuyer
::----------------------------------------------------------------------------------------------------------------------
KH_DOD.cntx_psh();
KH_DOD.index('KH_DOD');
KH_DOD.prefix(REF.FIRMA, FAKS.KH);
{? KH_DOD.first()
||
   _wyn:=KH_DOD.NASZ_KOD
||
   _wyn:=''
?};
KH_DOD.cntx_pop();
_wyn


\find_kh_zkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.14]
:: OPIS: wyznaczanie KH.reference na podstawie GLN
::   WE: _a - GLN kontrahneta
::   WY: KH.reference jesli KH.GLN = _a, null - wpp
::----------------------------------------------------------------------------------------------------------------------
{? _a='' || return(null()) ?};
_wyn:=exec('FindInSet','#table','KH','GLN',_a,2,,1);
{? $_wyn<>''
||
   ZK_N.KH:=_wyn
||
   _wyn:=exec('FindInSet','#table','KH_ODB','GLN',_a,,,1);
   {? $_wyn<>''
   ||
      ZK_N.ODB:=_wyn
   ||
      FIND_KH1:=_a
   ?}
?}


\find_msc_zkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.14]
:: OPIS: wyznaczanie KH_MSC.reference na podstawie GLN
::   WE: _a - GLN miejsca doastawy
::   WY: KH.reference jesli KH.GLN = _a, null - wpp
::----------------------------------------------------------------------------------------------------------------------
{? _a='' || return(null()) ?};
KH_MSC.cntx_psh();
_ind:=KH_MSC.ndx_tmp(,,'GLN',,);
KH_MSC.index(_ind);
KH_MSC.prefix(_a,);
{? KH_MSC.first()
||
   _wyn:=KH_MSC.ref()
||
   _wyn:=null()
?};
KH_MSC.ndx_drop(_ind);
KH_MSC.cntx_pop();
_wyn


\find_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Wyszukiwanie kontrahenta
::   WE: _a - gln
::       _b - nip
::       _c - kod
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('')
|| _a:=''
?};
{? var_pres('_b')<>type_of('')
|| _b:=''
?};
{? var_pres('_c')<>type_of('')
|| _c:=''
?};
_kh:=null();
:: gln
{? _a<>''
|| _kh:=exec('find_kh','edi_form',_a)
?};
:: nip
{? _b<>'' & _kh=null()
|| _kh:=exec('FindInSet','#table','KH','SNIP',_b,2,,1,,null())
?};
:: nip
{? _c<>'' & _kh=null()
|| _kh:=exec('FindInSet','#table','KH','KOD',_c,2,,1,,null())
?};
_kh


\find_wal_zkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: wyznaczanie waluty
::   WE: _a - Kod waluty
::   WY: referencja waluty lub null
::----------------------------------------------------------------------------------------------------------------------
{? _a='' || return(null()) ?};
_wal:=exec('FindInSet','#table','SLO','KOD',_a,,,1,,null());
{? _wal<>null()
||
   ZK_N.WAL:=_wal
?};
~~

:Sign Version 2.0 jowisz:1045 2023/08/21 15:49:01 1da6b87db8e4900ce0053b82ca727866cd7867e8665bcc8388f0d3e581714554432fedb57d15a0c52061c1247ae81f05e2059113ad524ab00b31aae1eb9e9c57c73127ec4570334181155b73063aa4d355ab4503f35fd3c8b03441969514aab0225e57074862c0150e90171db4a0f70f515ffad2e37c53231d2e2219bbbe9bbc
