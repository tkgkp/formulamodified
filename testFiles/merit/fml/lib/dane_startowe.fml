:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: dane_startowe.fml
:: Utworzony: 18.12.2014
:: Autor: AMK
::======================================================================================================================
:: Zawartość:  Dane wczytywane na starcie systemu
::======================================================================================================================


\dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dane startowe
::  OLD: /skid_new.fml
::----------------------------------------------------------------------------------------------------------------------
exec('dane1','dane_startowe');

exec('uz_pl','dane_startowe');
exec('uz_kody','dane_startowe');
exec('init_tab', 'dane_startowe');
exec('init_rr', 'dane_startowe');
exec('init_rp', 'dane_startowe');
exec('edeklaracje','dane_startowe');
exec('slo_naz','dane_startowe');
exec('slo_kod','dane_startowe');
exec('slo_rodz','dane_startowe');
exec('zal_kom','dane_startowe');
exec('diet_zagr','dane_startowe');
exec('init_deleg','dane_startowe');
exec('innesrtr','dane_startowe');
exec('samdelty','dane_startowe');
exec('formula_p','dane_startowe');
exec('kt','dane_startowe');
exec('init_format','dane_startowe');
exec('kart_dod','dane_startowe');
exec('reg_reps','rap_zew');
exec('kom_rp','dane_startowe');
exec('tzl','dane_startowe');
exec('rodzaj_szkolenia','dane_startowe');
exec('h_zm','dane_startowe');
exec('cp','dane_startowe');
exec('r_klkw','dane_startowe');
exec('r_opczyt','dane_startowe');
exec('r_wewy','dane_startowe');
exec('r_czyt','dane_startowe');
exec('R_ZMIANY','dane_startowe');
exec('A_SCP','dane_startowe');
exec('bl_cdtab','dane_startowe');
exec('urlop_rodzicielski','dane_startowe');
exec('plob','dane_startowe');
exec('rodzaje_oddelegowania','dane_startowe');
exec('zasw_ZUS_do_oddel','dane_startowe');
exec('rub_graf','dane_startowe');

exec('za_typ','dane_startowe');
exec('zz_asyst','dane_startowe');
exec('zz_typ','dane_startowe');
exec('zz_met','dane_startowe');
exec('zf_skl','dane_startowe');
exec('zz_fml','dane_startowe');

exec('datepar','dane_startowe');

exec('portal_wnioski','dane_startowe');

exec('uzupelnij','lista_par');

exec('os_zwslo','dane_startowe');
exec('os_grru','dane_startowe');

exec('ppsf','dane_startowe');
exec('kontrola_trzezwosci','dane_startowe');
~~


\dane1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Dane startowe - dane podstawowe
::----------------------------------------------------------------------------------------------------------------------
KST_DEF.cntx_psh();
KST_DEF.index('SYMBOL');
KST_DEF.prefix();
: czy aktualizować konfiguracje przy starcie zerowym?
{? ~KST_DEF.first()
|| exec('init_wer','#stalesys')
||
:: ewentualna naprawa błędnych KST_WAR
   exec('xinfo_base_id_repair','sl_api')
?};
KST_DEF.cntx_pop();
exec('stalesys','#stalesys');

:: glówna jednostka księgowa -------------------------------------------------------------------------------------------
exec('odd_new','ustawienia');

:: waluty --------------------------------------------------------------------------------------------------------------
SLU.cntx_psh(); SLU.index('NAZ'); SLU.prefix('WALUTY');
{? ~SLU.first()
|| SLU.blank(); SLU.NAZ:='WALUTY';
   SLU.OP:='waluty';
   SLU.WZ:='Waluta';
   SLU.DL:=3;
   SLU.SYSTEM:='N';
   {? SLU.add()
   || SLUAPPL.cntx_psh();
      SLUAPPL.index('NAZ');
      SLUAPPL.prefix('F',SLU.NAZ);
      {? ~SLUAPPL.first()
      || SLUAPPL.blank();
         SLUAPPL.GDZIE:='F';
         SLUAPPL.SLU:=SLU.ref();
         SLUAPPL.add()
      ?};
      SLUAPPL.cntx_pop()
   ?}
|| SLUAPPL.cntx_psh();
   SLUAPPL.index('NAZ');
   SLUAPPL.prefix('F',SLU.NAZ);
   {? ~SLUAPPL.first()
   || SLUAPPL.blank();
      SLUAPPL.GDZIE:='F';
      SLUAPPL.SLU:=SLU.ref();
      SLUAPPL.add()
   ?};
   SLUAPPL.cntx_pop()
?};
SLU.cntx_pop();
WAL.cntx_psh(); WAL.index('WAL_SYM'); WAL.prefix();
SLUAPPL.cntx_psh(); SLUAPPL.index('NAZ'); SLUAPPL.prefix('F');
SLO.cntx_psh(); SLO.index('SL'); SLO.prefix();
_uchwyt:=fopen('wal.dfg','ur',1);
{? _uchwyt
|| {! |?
      _str:=fread(_uchwyt);
      {? _str<>'\n' & +|_str
      || _sep:='@';
         _x:=_str*_sep;
         _wal:=(((_x-_str)*_sep)-1)+(_x-_str);
         {? SLUAPPL.find_key('WALUTY') & SLUAPPL.SLU().NAZ='WALUTY'
         || SLU.cntx_psh(); SLUAPPL.SLU();
            {? ~WAL.find_key(_wal) | WAL.SYM<>_wal
            || WAL.blank();
               WAL.SYM:=_wal;
               WAL.KOD:=(_str*_sep-1)+_str; _str:=_str*_sep-_str; _str:=_str*_sep-_str;
               WAL.J:=#((_str*_sep-1)+_str); _str:=_str*_sep-_str;
               WAL.NAZ:=(_str*_sep-1)+_str; _str:=_str*_sep-_str;
               {? _str+1='@' || _str:=_str-1 ?};
               WAL.KRAJ:=_str;
               WAL.add(1);
               {? ~SLO.find_key(SLU.ref(),WAL.SYM) | SLO.KOD<>WAL.SYM
               || SLO.blank();
                  SLO.KOD:=WAL.SYM;
                  SLO.TR:=WAL.NAZ;
                  SLO.add(1)
               ?};
               SLO.ref()
            ?};
            SLU.cntx_pop()
         ?}
      ?};
      _str<>'\n'
   !};
   fclose(_uchwyt)
?};
WAL.cntx_pop(); SLUAPPL.cntx_pop(); SLO.cntx_pop();

:: cechy do dekretacji
B_DOMAIN.cntx_psh();
B_DOMAIN.index('SYMBOL'); B_DOMAIN.prefix();
{? B_DOMAIN.first()
|| {!
   |? {? 'MB'*B_DOMAIN.TCALL
      || ATRDEF.blank();
         ATRDEF.SYSTEM:=B_DOMAIN.SYMBOL;
         ATRDEF.AKRONIM:='ZAPIS_WN'; ATRDEF.OPIS:='Dekretacja Wn';
         ATRDEF.TYP_CECH:='SKID01'; ATRDEF.TYP:='S'; ATRDEF.CZY_FOR:='T';
         ATRDEF.add(1);
         ATRDEF.AKRONIM:='ZAPIS_MA'; ATRDEF.OPIS:='Dekretacja Ma';
         ATRDEF.TYP_CECH:='SKID01'; ATRDEF.TYP:='S'; ATRDEF.CZY_FOR:='T';
         ATRDEF.add(1)
      ?};
      B_DOMAIN.next()
   !}
?};
B_DOMAIN.cntx_pop();

:: kraje UE i stawki VAT UE---------------------------------------------------------------------------------------------
KRAJE.cntx_psh(); KRAJE.index('KRAJE'); KRAJE.prefix();
SLU.cntx_psh(); SLU.index('NAZ'); SLU.prefix();
SLUAPPL.cntx_psh(); SLUAPPL.index('NAZ'); SLUAPPL.prefix('F');
SLO.cntx_psh(); SLO.index('SL'); SLO.prefix();
WAL.cntx_psh(); WAL.index('WAL_SYM'); WAL.prefix();
{? ~SLU.find_key('~KRAJE UE') | SLU.NAZ<>'~KRAJE UE'
|| SLU.blank(); SLU.SYSTEM:='T'; SLU.NAZ:='~KRAJE UE'; SLU.OP:='Kraje UE';
   SLU.WZ:='Kraj'; SLU.DL:=2; SLU.add()
?};
_slu:=SLU.ref();
{? ~SLUAPPL.find_key('~KRAJE UE') | SLUAPPL.SLU().NAZ<>'~KRAJE UE'
|| SLUAPPL.blank(1); SLUAPPL.GDZIE:='F'; SLUAPPL.SLU:=_slu; SLUAPPL.add()
?};
SLUAPPL.SLU();
_uchwyt:=fopen('kraje_ue.dfg','ur',1);
{? _uchwyt
|| {! |?
      _str:=fread(_uchwyt);
      {? _str<>'\n' & +|_str
      || _sym:=2+_str; _iso:=(5+_str)+2; _str:=6-_str; _x:=_str*'#'; _naz:=(_x-1)+_str; _str:=_x-_str;
         _wal:=3+_str;
         _iban:=_str; {! _i:=1..5 |! _p:=_iban*'#'; _iban:=_p-_iban !};
         {? SLUAPPL.find_key('WALUTY')
         || SLU.cntx_psh(); SLUAPPL.SLU();
            _wal:={? _wal=''
                  || null
                  |? WAL.find_key(_wal) & WAL.SYM=_wal
                  || _wal:={? SLO.find_key(SLU.ref(),_wal) & SLO.KOD=_wal || SLO.ref() || null ?}
                  || WAL.blank(); WAL.SYM:=_wal; _str:=4-_str;
                     _x:=_str*'#'; WAL.KRAJ:=(_x-1)+_str; _str:=_x-_str;
                     _x:=_str*'#'; WAL.NAZ:=(_x-1)+_str; _str:=_x-_str;
                     _x:=_str*'#'; WAL.KOD:=(_x-1)+_str; _str:=_x-_str;
                     _x:=_str*'#'; WAL.J:=#((_x-1)+_str); _str:=_x-_str;
                     WAL.add(1);
                     {? ~SLO.find_key(SLU.ref(),_wal) | SLO.KOD<>_wal
                     || SLO.blank(); SLO.KOD:=WAL.SYM; SLO.TR:=WAL.NAZ; SLO.add()
                     ?}; SLO.ref()
                  ?};
            SLU.cntx_pop();
            {? ~KRAJE.find_key(_sym) | KRAJE.SYM<>_sym
            || KRAJE.blank();
               KRAJE.SYM:=_sym; KRAJE.NAZ:=_naz; KRAJE.KODISO:=_iso; KRAJE.WAL:=_wal; KRAJE.IBAN:=_iban;
               KRAJE.add()
            || {? KRAJE.KODISO<>_iso | KRAJE.WAL<>_wal
               || KRAJE.KODISO:=_iso; KRAJE.WAL:=_wal; KRAJE.put()
               ?}
            ?};
            {? ~SLO.find_key(SLU.ref(),KRAJE.SYM)
            || SLO.blank();
               SLO.KOD:=KRAJE.SYM;
               SLO.TR:=KRAJE.NAZ;
               SLO.add(1)
            ?}
         ?}
      ?};
      _str<>'\n'
   !};
   fclose(_uchwyt)
?};
_uchwyt:=fopen('stawki_ue.dfg','ur',1);
{? _uchwyt
|| {! |?
      _str:=fread(_uchwyt);
      {? _str<>'\n' & +|_str
      || {? ~SLU.find_key(14+_str) | SLU.NAZ<>14+_str
         || SLU.blank(); SLU.SYSTEM:='T'; SLU.NAZ:=14+_str; SLU.WZ:='prosty'; SLU.DL:=8;
            SLU.OP:='Stawki VAT w kraju '+{? KRAJE.find_key(SLU.NAZ+2) || KRAJE.NAZ || '' ?};
            SLU.add()
         ?};
         _slu:=SLU.ref();
         {? ~SLUAPPL.find_key(14+_str) | SLUAPPL.SLU().NAZ<>14+_str
         || SLUAPPL.blank(1); SLUAPPL.GDZIE:='F'; SLUAPPL.SLU:=_slu; SLUAPPL.add()
         ?};
         SLUAPPL.SLU();
         _str:=15-_str;
         {? ~SLO.find_key(SLU.ref(),1-form(('Q'+(6+_str))))
         || SLO.blank();
            SLO.KOD:=1-form(('Q'+(6+_str)));
            SLO.TR:=7-_str;
            SLO.add(1)
         |? SLO.TR<>7-_str
         || SLO.TR:=7-_str;
            SLO.put()
         ?}
      ?};
      _str<>'\n'
   !};
fclose(_uchwyt)
?};
KRAJE.cntx_pop(); SLU.cntx_pop(); SLUAPPL.cntx_pop(); SLO.cntx_pop(); WAL.cntx_pop();
exec('kodZUSKraju','dane_startowe');


:: Slownik platnosci ZUS i rachunki bankowe ZUS-------------------------------------------------------------------------
exec('RB','object');
KRAJE.cntx_psh(); KRAJE.index('KRAJE'); KRAJE.prefix('PL');
{? KRAJE.first()
|| _krajref:=KRAJE.ref()
|| KRAJE.blank(1);
   KRAJE.SYM:='PL';
   KRAJE.NAZ:='Polska';
   KRAJE.KODISO:='PL';
   KRAJE.IBAN:='T';
   KRAJE.KODZUS:='PL';
   KRAJE.add();
   _krajref:=KRAJE.ref()
?};
KRAJE.cntx_pop();
SKID_RBK.cntx_psh(); SKID_RBK.index('TAB'); SKID_RBK.prefix();
SLO.cntx_psh(); SLO.index('SL');
SLU.cntx_psh(); SLU.index('NAZ'); SLU.prefix('~Płatności ZUS',);
PAR_WYDR.TABAKR:='ZUS'; PAR_WYDR.REF:=null;
{? ~SLU.first()
|| SLU.blank(); SLU.SYSTEM:='T'; SLU.NAZ:='~Płatności ZUS'; SLU.WZ:='prosty';
   SLU.OP:='Rodzaje płatności ZUS';
   SLU.DL:=4;
   SLU.prefix();
   {? SLU.add(1)
   || SLUAPPL.cntx_psh();
      SLUAPPL.index('NAZ');
      SLUAPPL.prefix('F',SLU.NAZ);
      {? ~SLUAPPL.first()
      || SLUAPPL.blank();
         SLUAPPL.GDZIE:='F';
         SLUAPPL.SLU:=SLU.ref();
         SLUAPPL.add()
      ?};
      SLUAPPL.cntx_pop()
   ?}
?};
:: bank NBP i oddział obsługujący płatności ZUS (jeżeli nie ma)
_banorg:=null;
BANORG.cntx_psh();
BANORG.index('NDX1');
BANORG.prefix(101);
{? ~BANORG.first()
|| BANORG.AKTYWNY='T';
   BANORG.ID:=101;
   BANORG.KOD:='NBP';
   BANORG.KODZ:='0';
   BANORG.NAZ:='Narodowy Bank Polski';
   BANORG.NRCB:='';
   {? BANORG.add() || _banorg:=BANORG.ref() ?}
|| _banorg:=BANORG.ref()
?};
BANORG.cntx_pop();
B.cntx_psh();
B.index('BANKID');
B.prefix('10101023');
{? ~B.first()
|| B.BANORG:=_banorg;
   B.K:='00-919';
   B.KOD:=exec('first_free','homebank');
   B.KODISO:=_krajref;
   B.M:='Warszawa';
   B.NB:='Narodowy Bank Polski - O/Okr. w Warszawie - Rozliczenia ZUS';
   B.NUMER:='10101023';
   B.STATUS:='B';
   B.SWIFT:='NBPLPLPWXXX';
   B.UL:='ul. Świętokrzyska 11/21';
   B.add()
?};
B.cntx_pop();
:: rachunki bankowe do obsługi ZUS
SLO.prefix(SLU.ref());
_rb:='83101010230000261395100000';
_bb:='10101023';
{? ~SLO.find_key('U_SP')
|| SLO.blank();
   SLO.KOD:='U_SP';
   SLO.TR:='Ubezpieczenia społeczne';
   {? SLO.add()
   || SKID_RBK.blank();
      SKID_RBK.SLU:=SLU.ref();
      SKID_RBK.SLO:=SLO.ref();
      SKID_RBK.N:=_rb;
      SKID_RBK.BANK:=RB.getrbank(1,_bb,XINFO.KRAJ);
      SKID_RBK.KRAJ:=_krajref;
      SKID_RBK.WAL:=HINFO.NAROD;
      SKID_RBK.add()
   ?}
|| SKID_RBK.prefix(null,'ZUS','ZUS',0,SLO.ref());
   {? SKID_RBK.first() & SKID_RBK.N<>_rb
   || SKID_RBK.N:=_rb;
      SKID_RBK.BANK:=RB.getrbank(1,_bb,XINFO.KRAJ);
      SKID_RBK.put()
   |? ~SKID_RBK.first()
   || SKID_RBK.blank();
      SKID_RBK.SLU:=SLU.ref();
      SKID_RBK.SLO:=SLO.ref();
      SKID_RBK.N:=_rb;
      SKID_RBK.BANK:=RB.getrbank(1,_bb,XINFO.KRAJ);
      SKID_RBK.KRAJ:=_krajref;
      SKID_RBK.WAL:=HINFO.NAROD;
      SKID_RBK.add()
   ?}
?};
_rb:='78101010230000261395200000';
_bb:='10101023';
{? ~SLO.find_key('U_ZD')
|| SLO.blank();
   SLO.KOD:='U_ZD';
   SLO.TR:='Ubezpieczenie zdrowotne';
   {? SLO.add()
   || SKID_RBK.prefix();
      SKID_RBK.blank();
      SKID_RBK.SLU:=SLU.ref();
      SKID_RBK.SLO:=SLO.ref();
      SKID_RBK.N:=_rb;
      SKID_RBK.BANK:=RB.getrbank(1,_bb,XINFO.KRAJ);
      SKID_RBK.KRAJ:=_krajref;
      SKID_RBK.WAL:=HINFO.NAROD;
      SKID_RBK.add()
   ?}
|| SKID_RBK.prefix(null,'ZUS','ZUS',0,SLO.ref());
   {? SKID_RBK.first() & SKID_RBK.N<>_rb
   || SKID_RBK.N:=_rb;
      SKID_RBK.BANK:=RB.getrbank(1,_bb,XINFO.KRAJ);
      SKID_RBK.put()
   |? ~SKID_RBK.first()
   || SKID_RBK.prefix();
      SKID_RBK.blank();
      SKID_RBK.SLU:=SLU.ref();
      SKID_RBK.SLO:=SLO.ref();
      SKID_RBK.N:=_rb;
      SKID_RBK.BANK:=RB.getrbank(1,_bb,XINFO.KRAJ);
      SKID_RBK.KRAJ:=_krajref;
      SKID_RBK.WAL:=HINFO.NAROD;
      SKID_RBK.add()
   ?}
?};
_rb:='73101010230000261395300000';
_bb:='10101023';
{? ~SLO.find_key('FPFG')
|| SLO.blank();
   SLO.KOD:='FPFG';
   SLO.TR:='Fundusz Pracy i Fundusz Gwarantowanych Świadczeń Pracowniczych';
   {? SLO.add()
   || SKID_RBK.prefix();
      SKID_RBK.blank();
      SKID_RBK.SLU:=SLU.ref();
      SKID_RBK.SLO:=SLO.ref();
      SKID_RBK.N:=_rb;
      SKID_RBK.BANK:=RB.getrbank(1,_bb,XINFO.KRAJ);
      SKID_RBK.KRAJ:=_krajref;
      SKID_RBK.WAL:=HINFO.NAROD;
      SKID_RBK.add()
   ?}
|| SKID_RBK.prefix(null,'ZUS','ZUS',0,SLO.ref());
   {? SKID_RBK.first() & SKID_RBK.N<>_rb
   || SKID_RBK.N:=_rb;
      SKID_RBK.BANK:=RB.getrbank(1,_bb,XINFO.KRAJ);
      SKID_RBK.put()
   |? ~SKID_RBK.first()
   || SKID_RBK.prefix();
      SKID_RBK.blank();
      SKID_RBK.SLU:=SLU.ref();
      SKID_RBK.SLO:=SLO.ref();
      SKID_RBK.N:=_rb;
      SKID_RBK.BANK:=RB.getrbank(1,_bb,XINFO.KRAJ);
      SKID_RBK.KRAJ:=_krajref;
      SKID_RBK.WAL:=HINFO.NAROD;
      SKID_RBK.add()
   ?}
?};
_rb:='68101010230000261395400000';
_bb:='10101023';
{? ~SLO.find_key('FEP')
|| SLO.blank();
   SLO.KOD:='FEP';
   SLO.TR:='Fundusz Emerytur Pomostowych';
   {? SLO.add()
   || SKID_RBK.prefix();
      SKID_RBK.blank();
      SKID_RBK.SLU:=SLU.ref();
      SKID_RBK.SLO:=SLO.ref();
      SKID_RBK.N:=_rb;
      SKID_RBK.BANK:=RB.getrbank(1,_bb,XINFO.KRAJ);
      SKID_RBK.KRAJ:=_krajref;
      SKID_RBK.WAL:=HINFO.NAROD;
      SKID_RBK.add()
   ?}
|| SKID_RBK.prefix(null,'ZUS','ZUS',0,SLO.ref());
   {? SKID_RBK.first() & SKID_RBK.N<>_rb
   || SKID_RBK.N:=_rb;
      SKID_RBK.BANK:=RB.getrbank(1,_bb,XINFO.KRAJ);
      SKID_RBK.put()
   |? ~SKID_RBK.first()
   || SKID_RBK.prefix();
      SKID_RBK.blank();
      SKID_RBK.SLU:=SLU.ref();
      SKID_RBK.SLO:=SLO.ref();
      SKID_RBK.N:=_rb;
      SKID_RBK.BANK:=RB.getrbank(1,_bb,XINFO.KRAJ);
      SKID_RBK.KRAJ:=_krajref;
      SKID_RBK.WAL:=HINFO.NAROD;
      SKID_RBK.add()
   ?}
?};
BANORG.cntx_psh(); B.cntx_psh();
BANORG.index('NDX');
BANORG.prefix('60000','NBP ZUS',);
_org:=_bank:=null;
{? BANORG.first()
|| _org:=BANORG.ref()
|| BANORG.blank();
   BANORG.KOD:='60000';
   BANORG.KODZ:='';
   BANORG.AKTYWNY:='T';
   BANORG.NAZ:='NBP ZUS';
   BANORG.NRCB:='';
   {? BANORG.add() || _org:=BANORG.ref() ?}
?};
{? _org
|| B.index('BANK');
   B.prefix('NBP ZUS SKŁADKI','60000002');
   {? B.first()
   || _bank:=B.ref()
   || B.blank();
      B.BANORG:=_org;
      B.KOD:='';
      B.KODISO:=_krajref;
      B.NB:='NBP ZUS SKŁADKI';
      B.NUMER:='60000002';
      B.STATUS:='B';
      {? B.add() || _bank:=B.ref() ?}
   ?}
?};

{? ~SLO.find_key('ZUS')
|| SLO.blank();
   SLO.KOD:='ZUS';
   SLO.TR:='ZUS e-składka';
   {? SLO.add()
   || SKID_RBK.prefix(REF.FIRMA,'ZUS','ZUS',0,SLO.ref());
      {? ~SKID_RBK.first()
      || SKID_RBK.prefix();
         SKID_RBK.blank();
         SKID_RBK.FIRMA:=REF.FIRMA;
         SKID_RBK.TAB:='ZUS';
         SKID_RBK.SLU:=SLU.ref();
         SKID_RBK.SLO:=SLO.ref();
         SKID_RBK.N:='';
         SKID_RBK.BANK:=_bank;
         SKID_RBK.KRAJ:=_krajref;
         SKID_RBK.WAL:=HINFO.NAROD;
         SKID_RBK.add()
      ?}
   ?}
|| SKID_RBK.prefix(REF.FIRMA,'ZUS','ZUS',0,SLO.ref());
   {? ~SKID_RBK.first()
   || SKID_RBK.prefix();
      SKID_RBK.blank();
      SKID_RBK.FIRMA:=REF.FIRMA;
      SKID_RBK.TAB:='ZUS';
      SKID_RBK.SLU:=SLU.ref();
      SKID_RBK.SLO:=SLO.ref();
      SKID_RBK.N:='';
      SKID_RBK.BANK:=_bank;
      SKID_RBK.KRAJ:=_krajref;
      SKID_RBK.WAL:=HINFO.NAROD;
      SKID_RBK.add()
   ?}
?};
BANORG.cntx_pop(); B.cntx_pop();
SKID_RBK.cntx_pop(); SLO.cntx_pop(); SLU.cntx_pop();

:: Tłumaczenia
exec('init','tlumaczenia');
:: Słowniki i wzorce slowników------------------------------------------------------------------------------------------
RS.cntx_psh(); RS.index('RS'); RS.prefix();
UD_TYP.cntx_psh(); UD_TYP.index('SYMBOL'); UD_TYP.prefix();
F_ZATR.cntx_psh(); F_ZATR.index('UNIQUE'); F_ZATR.prefix();
{? ~F_ZATR.find_key('P') | ~F_ZATR.find_key('Z')
|| exec('dod_f_zatr','f_zatr')
?};
F_ZATR.index('UNIQUE'); F_ZATR.prefix();
{? ~RS.find_key('Bank',)
|| RS.blank();
   RS.WZ:='Bank'; RS.TAB:='B'; RS.KOD:='KOD';RS.TR:='NB';
   RS.add()
?};
{? ~RS.find_key('Kartoteka osób',)
|| RS.blank();
   RS.WZ:='Kartoteka osób'; RS.TAB:='OSOBA'; RS.KOD:='IMEX'; RS.TR:='PIERWSZE+\' \'+NAZWISKO';
   RS.add()
?};
{? ~RS.find_key('Komórki org.',)
|| RS.blank();
   RS.WZ:='Komórki org.'; RS.TAB:='UD_SKL'; RS.KOD:='SYMBOL'; RS.TR:='OPIS';
   {? UD_TYP.find_key('PODZORG','PODZORG')
   || RS.UD_TYP:=UD_TYP.ref
   ?};
   RS.add()
?};
{? ~RS.find_key('Kontrahent',)
|| RS.blank();
   RS.WZ:='Kontrahent'; RS.TAB:='KH'; RS.KOD:='KOD'; RS.TR:='NAZ';
   RS.add()
?};
{? ~RS.find_key('Kraj',)
|| RS.blank(); RS.WZ:='Kraj'; RS.TAB:='KRAJE'; RS.KOD:='SYM'; RS.TR:='NAZ';
   RS.add()
?};
{? ~RS.find_key('Obiekty kosztowe',)
|| RS.blank();
   RS.WZ:='Obiekty kosztowe'; RS.TAB:='UD_SKL'; RS.KOD:='SYMBOL'; RS.TR:='OPIS';
   {? UD_TYP.find_key('OB_KOSZ','OB_KOSZ')
   || RS.UD_TYP:=UD_TYP.ref
   ?};
   RS.add()
?};
{? ~RS.find_key('Osoba',)
|| RS.blank();
   RS.WZ:='Osoba'; RS.TAB:='OS'; RS.KOD:='KOD'; RS.TR:='exec(\'wz_osoba\',\'slo_slu\',OSOBA(),3,4,1)';
   RS.add()
?};
{? ~RS.find_key('Projekty_id',)
|| RS.blank();
   RS.WZ:='Projekty_id'; RS.TAB:='PROJEKTY'; RS.KOD:='ID_KSG'; RS.TR:='NAZWA';
   RS.add()
?};
{? ~RS.find_key('Rachunki bankowe',)
|| RS.blank();
   RS.WZ:='Rachunki bankowe'; RS.TAB:='SKID_RBK'; RS.KOD:='KOD';RS.TR:='exec(\'wz_rbk\',\'slo_slu\')';
   RS.add()
?};
{? ~RS.find_key('Urząd skarbowy',)
|| RS.blank();
   RS.WZ:='Urząd skarbowy'; RS.TAB:='US'; RS.KOD:='SYM'; RS.TR:='NU';
   RS.add()
?};
{? ~RS.find_key('Waluta',)
|| RS.blank();
   RS.WZ:='Waluta'; RS.TAB:='WAL'; RS.KOD:='SYM'; RS.TR:='NAZ';
   RS.add()
?};
{? ~RS.find_key('Wydział',)
|| RS.blank();
   RS.WZ:='Wydział'; RS.TAB:='UD_DEF'; RS.KOD:='SYMBOL'; RS.TR:='OPIS';
   {? UD_TYP.find_key('PODZORG','PODZORG')
   || RS.UD_TYP:=UD_TYP.ref();
      UD_SCH.cntx_psh(); UD_SCH.index('SYMBOL'); UD_SCH.prefix(UD_TYP.ref);
      {? UD_SCH.find_key('STRORG','STRORG') || RS.UD_SCH:=UD_SCH.ref ?};
      UD_SCH.cntx_pop()
   ?};
   RS.add()
?};
{? ~RS.find_key('Zlecenia',)
|| RS.blank(); RS.WZ:='Zlecenia'; RS.TAB:='ZL'; RS.KOD:='ID_KSG'; RS.TR:='SYM+\' \'+OPIS';
   RS.add()
?};
{? ~RS.find_key('Pracownik',)
|| RS.blank();
   RS.WZ:='Pracownik'; RS.TAB:='SLO_OSOB'; RS.KOD:='ID';RS.TR:='exec(\'wz_osoba\',\'slo_slu\',OSOBA(),1,3,4)';
   {? F_ZATR.find_key('P')
   || RS.F_ZATR:=F_ZATR.ref()
   ?};
   RS.add()
?};
{? ~RS.find_key('Zleceniobiorca',)
|| RS.blank();
   RS.WZ:='Zleceniobiorca'; RS.TAB:='SLO_OSOB'; RS.KOD:='ID';RS.TR:='exec(\'wz_osoba\',\'slo_slu\',OSOBA(),1,3,4)';
   {? F_ZATR.find_key('Z')
   || RS.F_ZATR:=F_ZATR.ref()
   ?};
   RS.add()
?};
{? ~RS.find_key('Umowy_id',)
|| RS.blank();
   RS.WZ:='Umowy_id'; RS.TAB:='UDT'; RS.KOD:='ID_KSG'; RS.TR:='OPIS';
   RS.add()
?};
{? ~RS.find_key('Umowy_symbol',)
|| RS.blank();
   RS.WZ:='Umowy_symbol'; RS.TAB:='UDT'; RS.KOD:='SYM'; RS.TR:='OPIS';
   RS.add()
?};
{? ~RS.find_key('Firma',)
|| RS.blank();
   RS.WZ:='Firma'; RS.TAB:='FIRMA'; RS.KOD:='SYMBOL'; RS.TR:='OPIS';
   RS.add()
?};
RS.index('RS'); RS.prefix();

:: TODO: zmiana fiks/emag na prosty, przed emisja usunać zbędna część kodu
{? RS.find_key('fiks')
|| RS.WZ:='prosty';
   RS.put(1)
?};
:: to zostawic
{? ~RS.find_key('prosty')
|| RS.blank(); RS.WZ:='prosty';
   RS.add()
?};
:: END to zostawic
_wz:=RS.WZ;
VAR_DEL.delete('__rs_pros','__rs_emag','__rs_prod');
__rs_pros:=RS.ref();
{? RS.find_key('emag') || __rs_emag:=RS.ref() || __rs_emag:=null ?};
{? RS.find_key('prod') || __rs_prod:=RS.ref() || __rs_prod:=null ?};
{? __rs_emag<>null | __rs_prod<>null
|| ZR_DSLO.prefix();
   ZR_DSLO.for_each("{? ZR_DSLO.RS<>null & ZR_DSLO.RS=__rs_emag
                     || ZR_DSLO.RS:=__rs_pros;
                        ZR_DSLO.put()
                     |? ZR_DSLO.RS<>null & ZR_DSLO.RS=__rs_prod
                     || ZR_DSLO.RS:=__rs_pros;
                        ZR_DSLO.put()
                     ?}")
?};
{? RS.find_key('emag') & RS.count()=0 || RS.del() ?};
{? RS.find_key('prod') & RS.count()=0 || RS.del() ?};
RS.seek(__rs_pros);
VAR_DEL.delete('__rs_pros','__rs_emag','__rs_prod');
SLU.cntx_psh();
SLU.prefix();
SLU.for_each("{? SLU.WZ='fiks' | SLU.WZ='emag' | SLU.WZ='prod' || SLU.WZ:='prosty'; SLU.put() ?}");
SLU.cntx_pop();
:: END TODO: zmiana fiks/emag na prosty, przed emisja usunać zbędna część kodu

{? ~RS.find_key('~Płatności')
|| RS.blank(); RS.WZ:='~Płatności';
   RS.add();
   exec('new_par','slo_slu',RS.ref(),1,'Czy gotówka?','TAK_NIE');
   exec('new_par','slo_slu',RS.ref(),2,'Liczba dni płatności','INTEGER');
   exec('new_par','slo_slu',RS.ref(),4,'Płatność dostępna w POS','TAK_NIE');
   exec('new_par','slo_slu',RS.ref(),5,'Typ płatności','STRING');
   exec('new_par','slo_slu',RS.ref(),6,'Termin płat. liczony od daty?','S_O_W');
   exec('new_par','slo_slu',RS.ref(),7,'Czy drukować termin płatności?','TAK_NIE')
?};
{? ~RS.find_key('~Rozliczenie VAT')
|| RS.blank(); RS.WZ:='~Rozliczenie VAT';
   RS.add();
   exec('new_par','slo_slu',RS.ref(),1,'Do rozl. w nast. okresie?','TAK_NIE');
   exec('new_par','slo_slu',RS.ref(),2,'Ile max. dni do rozliczenia?','INTEGER');
   exec('new_par','slo_slu',RS.ref(),3,'Rozliczenie do terminu pł.?','TAK_NIE');
   exec('new_par','slo_slu',RS.ref(),4,'Rozliczenie przy zapłacie?','TAK_NIE');
   exec('new_par','slo_slu',RS.ref(),5,'Zmiana grup pod. przy utracie odl.?','TAK_NIE')
?};
{? ~RS.find_key('~Powody korekt')
|| RS.blank; RS.WZ:='~Powody korekt';
   RS.add();
   exec('new_par','slo_slu',RS.ref(),1,'Rozliczenie w bieżącym okresie?','TAK_NIE')
?};
UD_TYP.cntx_pop(); RS.cntx_pop(); F_ZATR.cntx_pop();


SLU.cntx_psh(); SLU.index('NAZ'); SLU.prefix();
SLUAPPL.cntx_psh(); SLUAPPL.index('NAZ'); SLU.prefix();
SLO.cntx_psh(); SLO.index('SL'); SLO.prefix();

SLU.prefix('~RODZAJE KWOT');
{? ~SLU.first
|| SLU.blank(); SLU.SYSTEM:='T'; SLU.NAZ:='~RODZAJE KWOT';
   SLU.OP:='Rodzaje kwot do schematów VAT';
   SLU.WZ:=_wz;
   SLU.DL:=8;
   SLU.add()
?};
SLUAPPL.prefix('F','~RODZAJE KWOT');
{? ~SLUAPPL.first()
|| SLUAPPL.blank(1); SLUAPPL.GDZIE:='F';
   SLUAPPL.SLU:=SLU.ref();
   SLUAPPL.add()
?};
{? FINFO.SLKWOT<>SLUAPPL.ref() || FINFO.SLKWOT:=SLUAPPL.ref(); exec('zapisz','#stalesys',1,FINFO,'SLKWOT') ?};

SLO.prefix(SLU.ref(),'Brutto');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='Brutto';
   SLO.TR:='Kwota brutto';
   SLO.add()
?};
SLO.prefix(SLU.ref,'Netto');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='Netto';
   SLO.TR:='Kwota netto';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'NettoCit');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='NettoCit';
   SLO.TR:='Kwota netto cit';
   SLO.add()
?};
SLO.prefix(SLU.ref,'Podatek');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='Podatek';
   SLO.TR:='Kwota podatku do dekretacji';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'PodatRej');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='PodatRej';
   SLO.TR:='Kwota podatku w rejestrze VAT';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'Cło');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='Cło';
   SLO.TR:='Kwota cła';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'WartCel');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='WartCel';
   SLO.TR:='Wartość celna';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'Akcyza');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='Akcyza';
   SLO.TR:='Akcyza';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'Manipula');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='Manipula';
   SLO.TR:='Koszty Manipulacyjne';
   SLO.add()
?};
SLO.prefix(SLU.ref,'WarFak');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='WarFak';
   SLO.TR:='Wartości dokumentów powiązanych';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'WarDod');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='WarDod';
   SLO.TR:='Wartość dodatkowa';
   SLO.add()
?};
SLO.prefix(SLU.ref,'WarCit');
{? ~SLO.first
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='WarCit';
   SLO.TR:='Wartość dokumentów powiązanych cit';
   SLO.add
?};
SLO.prefix(SLU.ref(),'KorZaokr');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='KorZaokr';
   SLO.TR:='Korekta Zaokrągleń';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'Konto(1)');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='Konto(1)';
   SLO.TR:='Konta do dekretacji dla pola Konto(1)';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'Konto(2)');
{? ~SLO.first()
  || SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='Konto(2)';
     SLO.TR:='Konta do dekretacji dla pola Konto(2)';
     SLO.add()
?};
SLO.prefix(SLU.ref(),'PKontrol');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='PKontrol';
   SLO.TR:='Kwoty z podziałów dla controllingu';
   SLO.add()
|? SLO.TR<>'Kwoty z podziałów dla controllingu'
|| SLO.TR:='Kwoty z podziałów dla controllingu';
   SLO.put()
?};
SLO.prefix(SLU.ref(),'VatPKont');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='VatPKont';
   SLO.TR:='Vat w koszty wg podziałów dla controllingu';
   SLO.add()
|? SLO.TR<>'Vat w koszty wg podziałów dla controllingu'
|| SLO.TR:='Vat w koszty wg podziałów dla controllingu';
   SLO.put()
?};
SLO.prefix(SLU.ref(),'VatKonto');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='VatKonto';
   SLO.TR:='Vat w koszty wg pola Konto(1)';
   SLO.add()
|? SLO.TR<>'Vat w koszty wg pola Konto(1)'
|| SLO.TR:='Vat w koszty wg pola Konto(1)';
   SLO.put()
?};
SLO.prefix(SLU.ref(),'Vat_odl');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='Vat_odl';
   SLO.TR:='Kwota podatku VAT do odliczenia';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'VatKoszt');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='VatKoszt';
   SLO.TR:='Kwota podatku VAT w koszty';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'pfNetto');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='pfNetto';
   SLO.TR:='Pozycja faktury - kwota netto';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'pfVat');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='pfVat';
   SLO.TR:='Pozycja faktury - kwota VAT';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'pfBrutto');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='pfBrutto';
   SLO.TR:='Pozycja faktury - kwota brutto';
   SLO.add()
?};


SLU.prefix('~TYPY RÓŻNIC');
{? ~SLU.first()
|| SLU.blank(); SLU.SYSTEM:='T'; SLU.NAZ:='~TYPY RÓŻNIC';
   SLU.OP:='Rodzaje różnic pomiędzy prawem bilansowym i podatkowym';
   SLU.WZ:=_wz;
   SLU.DL:=3;
   SLU.add()
?};
SLUAPPL.prefix('F','~TYPY RÓŻNIC');
{? ~SLUAPPL.first()
|| SLUAPPL.blank(1); SLUAPPL.GDZIE:='F';
   SLUAPPL.SLU:=SLU.ref();
   SLUAPPL.add()
?};
SLO.prefix(SLU.ref(),'+TR');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='+TR';
   SLO.TR:='Trwała różnica dodatnia';
   SLO.add()
?};
SLO.prefix(SLU.ref,'-TR');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='-TR';
   SLO.TR:='Trwała różnica ujemna';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'+PP');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='+PP';
   SLO.TR:='Różnica przejściowa dodatnia - początek';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'-PP');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='-PP';
   SLO.TR:='Różnica przejściowa ujemna - początek';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'+PK');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='+PK';
   SLO.TR:='Różnica przejściowa dodatnia - koniec';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'-PK');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='-PK';
   SLO.TR:='Różnica przejściowa ujemna - koniec';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'+IN');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='+IN';
   SLO.TR:='Inna różnica dodatnia';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'-IN');
{? ~SLO.first()
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='-IN';
   SLO.TR:='Inna różnica ujemna';
   SLO.add()
?};

'-----------------RODZAJE KWOT - DELEFGACJE ---------------';
SLU.prefix('~KWOTY W DELEGACJACH');
SLO.index('SL');
{? ~SLU.first()
|| SLU.blank(); SLU.SYSTEM:='T'; SLU.NAZ:='~KWOTY W DELEGACJACH';
   SLU.OP:='Rodzaje kwot do dekretacji delegacji';
   SLU.WZ:=_wz;
   SLU.DL:=3;
   SLU.add()
?};
SLUAPPL.prefix('F','~KWOTY W DELEGACJACH');
{? ~SLUAPPL.first()
|| SLUAPPL.blank(1); SLUAPPL.GDZIE:='F';
   SLUAPPL.SLU:=SLU.ref();
   SLUAPPL.add()
?};
SLO.prefix(SLU.ref(),'WAP');
{? ~SLO.first
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='WAP';
   SLO.TR:='Wartość przejazdu';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'DIE');
{? ~SLO.first
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='DIE';
   SLO.TR:='Dieta';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'RYN');
{? ~SLO.first
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='RYN';
   SLO.TR:='Ryczałt za nocleg';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'RYK');
{? ~SLO.first
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='RYK';
   SLO.TR:='Ryczałt za komunikację';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'PLO');
{? ~SLO.first
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='PLO';
   SLO.TR:='Przejazd na lotnisko lub z lotniska';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'WDN');
{? ~SLO.first
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='WDN';
   SLO.TR:='Wydatki netto';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'WDB');
{? ~SLO.first
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='WDB';
   SLO.TR:='Wydatki brutto';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'ZAL');
{? ~SLO.first
|| SLO.blank(); SLO.SLU:=SLU.ref(); SLO.KOD:='ZAL';
   SLO.TR:='Zaliczki';
   SLO.add()
?};
SLU.cntx_pop(); SLUAPPL.cntx_pop(); SLO.cntx_pop();
exec('slgrvat','dane_startowe');
exec('slewid','dane_startowe');
exec('rodz_dok','dane_startowe');

_nazwa:='~TYPY OKRESÓW';
SLU.cntx_psh(); SLU.index('WZORZEC'); SLU.prefix('prosty',_nazwa);
{? ~SLU.first()
|| SLU.blank();
   SLU.SYSTEM:='T'; SLU.NAZ:=_nazwa; SLU.WZ:='prosty';
   SLU.OP:='Rodzaje okresów sprawozdawczych';
   SLU.DL:=3;
   SLU.prefix();
   SLU.add(1)
?};
_slu:=SLU.ref();
SLUAPPL.cntx_psh(); SLUAPPL.index('NAZ'); SLUAPPL.prefix('F',_nazwa,);
{? ~SLUAPPL.first()
|| SLUAPPL.blank(); SLUAPPL.SLU:=_slu; SLUAPPL.add()
?};
exec('kody_wsk','sprfin');
_f:="{? _a='M99' & SLO.find_key('M13') & SLO.TR='Bilans zamknięcia'
     || SLO.KOD:='M99'; SLO.put()
     |? ~SLO.find_key(_a)
     || SLO.blank();
        SLO.KOD:=_a;
        SLO.TR:=_b;
        SLO.add(1)
     ?}";
SLO.cntx_psh(); SLO.index('SL'); SLO.prefix(_slu);
_f('M00','Bilans otwarcia');
_f('M01','Miesiąc - styczeń');
_f('M02','Miesiąc - luty');
_f('M03','Miesiąc - marzec');
_f('M04','Miesiąc - kwiecień');
_f('M05','Miesiąc - maj');
_f('M06','Miesiąc - czerwiec');
_f('M07','Miesiąc - lipiec');
_f('M08','Miesiąc - sierpień');
_f('M09','Miesiąc - wrzesień');
_f('M10','Miesiąc - październik');
_f('M11','Miesiąc - listopad');
_f('M12','Miesiąc - grudzień');
_f('M99','Bilans zamknięcia');
_f('K01','Kwartał - I');
_f('K02','Kwartał - II');
_f('K03','Kwartał - III');
_f('K04','Kwartał - IV');
_f('P01','Półrocze - I');
_f('P02','Półrocze - II');
_f('R00','Rok');
SLU.cntx_pop(); SLUAPPL.cntx_pop(); SLO.cntx_pop();
exec('typy_jedn','dane_startowe');
exec('wsk','dane_startowe');
exec('addr_cho','dane_startowe');

:: Uzupełnienie słownika JPK_SLO
exec('init_slo','jpk_v');

exec('gswn','dane_startowe');
exec('gspn','dane_startowe');
exec('zrpn','dane_startowe');

~~


\init_urz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła dodaje parametry urządzeń i standardowe urządzenia zewnętrzne
::  OLD: \init_urz/skid_uz.fml
::----------------------------------------------------------------------------------------------------------------------
:: Definicje i parametry dla urzadzeń
URZ_KAT.prefix();
URZ_KAT.NAZWA:='DRUKARKA';
URZ_KAT.add(1);
URZ_KAT.NAZWA:='CZYTNIK';
URZ_KAT.add(1);

URZ_KOM.prefix();
URZ_KAT.index('NAZWA');
URZ_KAT.prefix('DRUKARKA','DRUKARKA');
{? URZ_KAT.first() || _kat:=URZ_KAT.ref() || _kat:=null ?};
{? _kat
|| URZ_KOM.URZ_KAT:=_kat;
   URZ_KOM.KOD:='DPL';
   URZ_KOM.OPIS:='Język DPL';
   URZ_KOM.add(1);

   URZ_KOM.URZ_KAT:=_kat;
   URZ_KOM.KOD:='EPL2';
   URZ_KOM.OPIS:='Język EPL2';
   URZ_KOM.add(1);

   URZ_KOM.URZ_KAT:=_kat;
   URZ_KOM.KOD:='TSPL';
   URZ_KOM.OPIS:='Język TSPL';
   URZ_KOM.add(1);

   URZ_KOM.URZ_KAT:=_kat;
   URZ_KOM.KOD:='ZPL';
   URZ_KOM.OPIS:='Język ZPL';
   URZ_KOM.add(1)
?};
URZ_KAT.index('NAZWA');
URZ_KAT.prefix('CZYTNIK','CZYTNIK');
{? URZ_KAT.first() || _kat:=URZ_KAT.ref() || _kat:=null ?};
{? _kat
|| URZ_KOM.URZ_KAT:=_kat;
   URZ_KOM.KOD:='YMODEM';
   URZ_KOM.OPIS:='Protokół YMODEM';
   URZ_KOM.add(1);

   URZ_KOM.URZ_KAT:=_kat;
   URZ_KOM.KOD:='TXT';
   URZ_KOM.OPIS:='Dane tekstowe ASCII';
   URZ_KOM.add(1)
?};

:: Urządzenia
URZ.prefix();
URZ_KAT.index('NAZWA');
URZ_KAT.prefix('DRUKARKA','DRUKARKA');
{? URZ_KAT.first() || _kat:=URZ_KAT.ref() || _kat:=null ?};
{? _kat
|| URZ.blank();
   URZ.NAZWA:='DATAMAX';
   URZ.URZ_KAT:=_kat;
   URZ_KOM.index('KATKOD');
   URZ_KOM.prefix(_kat,'DPL','DPL');
   {? URZ_KOM.first() || _kom:=URZ_KOM.ref() || _kom:=null ?};
   URZ.URZ_KOM:=_kom;
   URZ.PORT:='COM1:';
   URZ.RODZPODL:='L';
   URZ.add(1);

   URZ.blank();
   URZ.NAZWA:='ZEBRA';
   URZ.URZ_KAT:=_kat;
   URZ_KOM.index('KATKOD');
   URZ_KOM.prefix(_kat,'EPL2','EPL2');
   {? URZ_KOM.first() || _kom:=URZ_KOM.ref() || _kom:=null ?};
   URZ.URZ_KOM:=_kom;
   URZ.PORT:='LPT1:';
   URZ.RODZPODL:='L';
   URZ.add(1);

   URZ.blank();
   URZ.NAZWA:='ZEBRA_ZPL';
   URZ.URZ_KAT:=_kat;
   URZ_KOM.index('KATKOD');
   URZ_KOM.prefix(_kat,'ZPL','ZPL');
   {? URZ_KOM.first() || _kom:=URZ_KOM.ref() || _kom:=null ?};
   URZ.URZ_KOM:=_kom;
   URZ.PORT:='LPT1:';
   URZ.RODZPODL:='L';
   URZ.add(1);

   URZ.blank();
   URZ.NAZWA:='CLEVER';
   URZ.URZ_KAT:=_kat;
   URZ_KOM.index('KATKOD');
   URZ_KOM.prefix(_kat,'TSPL','TSPL');
   {? URZ_KOM.first() || _kom:=URZ_KOM.ref() || _kom:=null ?};
   URZ.URZ_KOM:=_kom;
   URZ.PORT:='COM1:';
   URZ.RODZPODL:='L';
   URZ.add(1)
?};
URZ_KAT.index('NAZWA');
URZ_KAT.prefix('CZYTNIK','CZYTNIK');
{? URZ_KAT.first() || _kat:=URZ_KAT.ref() || _kat:=null ?};
{? _kat
|| URZ.blank();
   URZ.NAZWA:='PDT 3100';
   URZ.URZ_KAT:=_kat;
   URZ_KOM.index('KATKOD');
   URZ_KOM.prefix(_kat,'TXT','TXT');
   {? URZ_KOM.first() || _kom:=URZ_KOM.ref() || _kom:=null ?};
   URZ.URZ_KOM:=_kom;
   URZ.PORT:='COM1:';
   URZ.RODZPODL:='L';
   URZ.add(1)
?};

:: Typy pól w definicjach etykiet w trybie prostym
URZ_LABT.TYP:='TEKST';
URZ_LABT.add(1);
URZ_LABT.TYP:='KOD KRESKOWY';
URZ_LABT.add(1);
URZ_LABT.TYP:='LINIA';
URZ_LABT.add(1);
URZ_LABT.TYP:='OBRAZ';
URZ_LABT.add(1);

:: Wielkości fontów dla pól tekstowych w etykietach definiowanych w języku
:: DPL (drukarki DATAMAX), EPL2 (Zebra) i TSPL (Clever)
URZ.prefix();
URZ_KAT.index('NAZWA');
URZ_KAT.prefix('DRUKARKA','DRUKARKA');
{? URZ_KAT.first() || _kat:=URZ_KAT.ref() || _kat:=null ?};
{? _kat
|| URZ_KOM.index('KATKOD');
   URZ_KOM.prefix(_kat,'DPL','DPL');
   {? URZ_KOM.first()
   ||
:: Uzupelnienie danych po transferze 11.10->11.20
      URZ_FONT.prefix();
      URZ_FONT.for_each("{? URZ_FONT.URZ_KOM=null || URZ_FONT.URZ_KOM:=URZ_KOM.ref(); URZ_FONT.put(1) ?}");

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:=' 6 pt.';
      URZ_FONT.KOD:='A06';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:=' 8 pt.';
      URZ_FONT.KOD:='A08';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='10 pt.';
      URZ_FONT.KOD:='A10';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='12 pt.';
      URZ_FONT.KOD:='A12';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='14 pt.';
      URZ_FONT.KOD:='A14';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='18 pt.';
      URZ_FONT.KOD:='A18';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='24 pt.';
      URZ_FONT.KOD:='A24';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='30 pt.';
      URZ_FONT.KOD:='A30';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='36 pt.';
      URZ_FONT.KOD:='A36';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='48 pt.';
      URZ_FONT.KOD:='A48';
      URZ_FONT.add(1)
   ?};

   URZ_KOM.index('KATKOD');
   URZ_KOM.prefix(_kat,'EPL2','EPL2');
   {? URZ_KOM.first()
   || URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:=' 6 pt.';
      URZ_FONT.KOD:='1';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:=' 7 pt.';
      URZ_FONT.KOD:='2';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='10 pt.';
      URZ_FONT.KOD:='3';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='12 pt.';
      URZ_FONT.KOD:='4';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='24 pt.';
      URZ_FONT.KOD:='5';
      URZ_FONT.add(1)
   ?};

   URZ_KOM.index('KATKOD');
   URZ_KOM.prefix(_kat,'TSPL','TSPL');
   {? URZ_KOM.first()
   || URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='8x12';
      URZ_FONT.KOD:='1';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='12x20';
      URZ_FONT.KOD:='2';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='16x24';
      URZ_FONT.KOD:='3';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='24x32';
      URZ_FONT.KOD:='4';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='32x48';
      URZ_FONT.KOD:='5';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='14x19';
      URZ_FONT.KOD:='6';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='21x27';
      URZ_FONT.KOD:='7';
      URZ_FONT.add(1);

      URZ_FONT.URZ_KOM:=URZ_KOM.ref();
      URZ_FONT.SIZE:='14x25';
      URZ_FONT.KOD:='8';
      URZ_FONT.add(1)
   ?}
?};

exec('tagi','%etykiety');
exec('eant','%etykiety');

:: Rodzaje kodów kreskowych
URZ_KAT.index('NAZWA');
URZ_KAT.prefix('DRUKARKA','DRUKARKA');
{? URZ_KAT.first() || _kat:=URZ_KAT.ref() || _kat:=null ?};
{? _kat
|| URZ_KOM.index('KATKOD');
   URZ_KOM.prefix(_kat,'DPL','DPL');
   {? URZ_KOM.first()
   || URZ_BAR.URZ_KOM:=URZ_KOM.ref();
      URZ_BAR.KOD:='Code 3 of 9';
      URZ_BAR.SYMBOL:='A';
      URZ_BAR.add(1);

      URZ_BAR.URZ_KOM:=URZ_KOM.ref();
      URZ_BAR.KOD:='Code 128';
      URZ_BAR.SYMBOL:='E';
      URZ_BAR.add(1)
   ?};
   URZ_KOM.prefix(_kat,'EPL2','EPL2');
   {? URZ_KOM.first()
   || URZ_BAR.URZ_KOM:=URZ_KOM.ref();
      URZ_BAR.KOD:='Code 39';
      URZ_BAR.SYMBOL:='3';
      URZ_BAR.add(1);

      URZ_BAR.URZ_KOM:=URZ_KOM.ref();
      URZ_BAR.KOD:='Code 128';
      URZ_BAR.SYMBOL:='1';
      URZ_BAR.add(1)
   ?};

   URZ_KOM.prefix(_kat,'TSPL','TSPL');
   {? URZ_KOM.first()
   || URZ_BAR.URZ_KOM:=URZ_KOM.ref();
      URZ_BAR.KOD:='Code 39';
      URZ_BAR.SYMBOL:='39';
      URZ_BAR.add(1);

      URZ_BAR.URZ_KOM:=URZ_KOM.ref();
      URZ_BAR.KOD:='Code 128';
      URZ_BAR.SYMBOL:='128';
      URZ_BAR.add(1)
   ?}
?};

:: Dopuszczalne wysokosci kodow kreskowych
URZ_BARH.index('URZ_BARH');
URZ_BARH.prefix();
{? ~URZ_BARH.first()
|| URZ_KAT.index('NAZWA');
   URZ_KAT.prefix('DRUKARKA','DRUKARKA');
   {? URZ_KAT.first() || _kat:=URZ_KAT.ref() || _kat:=null ?};
   {? _kat
   || URZ_KOM.index('KATKOD');
      URZ_KOM.prefix(_kat,'DPL','DPL');
      {? URZ_KOM.first()
      || URZ_BARH.URZ_KOM:=URZ_KOM.ref();
         URZ_BARH.KOD:='000';
         URZ_BARH.WYS:='Domyślna';
         URZ_BARH.add(1);

         {! _i:=1..999 |!
            URZ_BARH.URZ_KOM:=URZ_KOM.ref();
            _kod:=$_i;
            {? 3-(+_kod)>0 || _kod:=('0'*(3-(+_kod)))+_kod ?};
            URZ_BARH.KOD:=_kod;
            URZ_BARH.WYS:=form(_i*0.254,,2)+' mm';
            {? +URZ_BARH.WYS<10 || URZ_BARH.WYS:=(' '*(10-(+URZ_BARH.WYS)))+URZ_BARH.WYS ?};
            URZ_BARH.add(1)
         !}
      ?};

      URZ_KOM.prefix(_kat,'EPL2','EPL2');
      {? URZ_KOM.first()
      || {! _i:=1..1000 |!
            URZ_BARH.URZ_KOM:=URZ_KOM.ref();
            URZ_BARH.KOD:=$_i;
            URZ_BARH.WYS:=form(_i/8,7,3)+' mm';
            URZ_BARH.add(1)
         !}
      ?};

      URZ_KOM.prefix(_kat,'TSPL','TSPL');
      {? URZ_KOM.first()
      || {! _i:=1..1000 |!
            URZ_BARH.URZ_KOM:=URZ_KOM.ref();
            URZ_BARH.KOD:=$_i;
            URZ_BARH.WYS:=form(_i/8,7,3)+' mm';
            URZ_BARH.add(1)
         !}
      ?}
   ?}
?};

:: Etykiety dla drukarek
URZ_KAT.index('NAZWA');
URZ_KAT.prefix('DRUKARKA','DRUKARKA');
{? URZ_KAT.first() || _kat:=URZ_KAT.ref() || _kat:=null ?};
{? _kat
|| URZ_LAB.index('URZ_LAB');
   URZ_LAB.prefix();
   URZ_KOM.index('KATKOD');
   URZ_KOM.prefix(_kat,'DPL','DPL');
   {? URZ_KOM.first()
   || URZ_LAB.blank();
      URZ_LAB.URZ_KOM:=URZ_KOM.ref();
      URZ_LAB.KOD:='Podstawowa';
      URZ_LAB.OPIS:='Nazwa firmy i kod kreskowy z nr inwentarzowym.';
      URZ_LAB.ROZM_X:=50;
      URZ_LAB.ROZM_Y:=25;
      URZ_LAB.ODSTEP:=3;
      URZ_LAB.TRYB:='Z';
      {? URZ_LAB.add(1)
      || URZ_LABZ.blank();
         URZ_LABZ.LP:=1;
         URZ_LABZ.POZ:='<STX>L<CR>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=2;
         URZ_LABZ.POZ:='H20<CR>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=3;
         URZ_LABZ.POZ:='D11<CR>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=4;
         URZ_LABZ.POZ:='191100000680016<FIRMA><CR>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=5;
         URZ_LABZ.POZ:='1E0004000100016<NRI><CR>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=6;
         URZ_LABZ.POZ:='E<CR>';
         URZ_LABZ.add(1)
      ?}
   ?};

   {? URZ_KOM.first()
   || URZ_LAB.blank();
      URZ_LAB.URZ_KOM:=URZ_KOM.ref();
      URZ_LAB.KOD:='Podstawowa 2';
      URZ_LAB.OPIS:='Nazwa środka, kod kreskowy.';
      URZ_LAB.ROZM_X:=50;
      URZ_LAB.ROZM_Y:=25;
      URZ_LAB.ODSTEP:=3;
      URZ_LAB.TRYB:='Z';
      {? URZ_LAB.add(1)
      || URZ_LABZ.blank();
         URZ_LABZ.LP:=1;
         URZ_LABZ.POZ:='<STX>L<CR>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=2;
         URZ_LABZ.POZ:='H20<CR>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=3;
         URZ_LABZ.POZ:='D11<CR>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=4;
         URZ_LABZ.POZ:='191100000680016<NST><CR>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=5;
         URZ_LABZ.POZ:='1E0004000100016<NRI><CR>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=6;
         URZ_LABZ.POZ:='E<CR>';
         URZ_LABZ.add(1)
      ?}
   ?};

   {? URZ_KOM.first()
   || URZ_LAB.blank();
      URZ_LAB.URZ_KOM:=URZ_KOM.ref();
      URZ_LAB.KOD:='Skanowanie';
      URZ_LAB.OPIS:='Etykieta do skanowanych faktur.';
      URZ_LAB.ROZM_X:=50;
      URZ_LAB.ROZM_Y:=25;
      URZ_LAB.ODSTEP:=3;
      URZ_LAB.TRYB:='Z';
      {? URZ_LAB.add(1)
      || URZ_LABZ.blank();
         URZ_LABZ.LP:=1;
         URZ_LABZ.POZ:='<STX>L<CR>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=2;
         URZ_LABZ.POZ:='H20<CR>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=3;
         URZ_LABZ.POZ:='D11<CR>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=4;
         URZ_LABZ.POZ:='191100000680016<FIRMA><CR>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=5;
         URZ_LABZ.POZ:='1E0004000100016<TIMESTMP><CR>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=6;
         URZ_LABZ.POZ:='E<CR>';
         URZ_LABZ.add(1)
      ?}
   ?};

   {? URZ_KOM.first()
   || URZ_LAB.blank();
      URZ_LAB.URZ_KOM:=URZ_KOM.ref();
      URZ_LAB.KOD:='Podstawowa 3';
      URZ_LAB.OPIS:='Nazwa środka, kod kreskowy.';
      URZ_LAB.ROZM_X:=50;
      URZ_LAB.ROZM_Y:=25;
      URZ_LAB.ODSTEP:=3;
      URZ_LAB.TRYB:='P';
      {? URZ_LAB.add(1)
      || URZ_LABP.blank();

         URZ_LABT.index('URZ_LABT');
         URZ_LABT.prefix('TEKST','TEKST');
         URZ_LABT.first();
         URZ_LABP.URZ_LABT:=URZ_LABT.ref();
         URZ_LABP.POZ_X:=2;
         URZ_LABP.POZ_Y:=18;
         URZ_LABP.ROTACJA:='1';
         URZ_FONT.index('URZ_KOD');
         URZ_FONT.prefix(URZ_LAB.URZ_KOM,'A08','A08');
         URZ_FONT.first();
         URZ_LABP.FONTSIZE:=URZ_FONT.ref();
         URZ_LABP.TXT_RODZ:='T';
         URZ_TAG.index('URZ_TAG');
         URZ_TAG.prefix('<NST>','<NST>');
         URZ_TAG.first();
         URZ_LABP.URZ_TAG:=URZ_TAG.ref();
         URZ_LABP.add(1);

         URZ_LABT.index('URZ_LABT');
         URZ_LABT.prefix('KOD KRESKOWY','KOD KRESKOWY');
         URZ_LABT.first();
         URZ_LABP.URZ_LABT:=URZ_LABT.ref();
         URZ_LABP.POZ_X:=2;
         URZ_LABP.POZ_Y:=5;
         URZ_LABP.ROTACJA:='1';
         URZ_LABP.TXT_RODZ:='T';
         URZ_TAG.index('URZ_TAG');
         URZ_TAG.prefix('<NRI>','<NRI>');
         URZ_TAG.first();
         URZ_LABP.URZ_TAG:=URZ_TAG.ref();
         URZ_BAR.index('URZ_BAR');
         URZ_BAR.prefix(URZ_KOM.ref(),'Code 128','Code 128');
         URZ_BAR.first();
         URZ_LABP.BARCODE:=URZ_BAR.ref();
         URZ_BARH.index('URZ_BARH');
         URZ_BARH.prefix(URZ_KOM.ref(),'028','028');
         URZ_BARH.first();
         URZ_LABP.URZ_BARH:=URZ_BARH.ref();
         URZ_LABP.add(1)
      ?}
   ?};

   URZ_KOM.index('KATKOD');
   URZ_KOM.prefix(_kat,'EPL2','EPL2');
   {? URZ_KOM.first()
   || URZ_LAB.blank();
      URZ_LAB.URZ_KOM:=URZ_KOM.ref();
      URZ_LAB.KOD:='Podstawowa';
      URZ_LAB.OPIS:='Nazwa firmy i kod kreskowy z nr inwentarzowym.';
      URZ_LAB.ROZM_X:=50;
      URZ_LAB.ROZM_Y:=25;
      URZ_LAB.ODSTEP:=3;
      URZ_LAB.TRYB:='Z';
      {? URZ_LAB.add(1)
      || URZ_LABZ.blank();
         URZ_LABZ.LP:=1; URZ_LABZ.POZ:='<LF>N<LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=2; URZ_LABZ.POZ:='Q<HEIGHT>,<HOLE><LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=3; URZ_LABZ.POZ:='q<WIDTH><LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=4; URZ_LABZ.POZ:='I8,B<LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=5;
         URZ_LABZ.POZ:='A24,10,0,1,1,2,N,"<FIRMA>"<LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=6;
         URZ_LABZ.POZ:='B24,50,0,1A,2,3,80,B,"<NRI>"<LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=7;
         URZ_LABZ.POZ:='P1<LF>';
         URZ_LABZ.add(1)
      ?}
   ?};

   URZ_KOM.index('KATKOD');
   URZ_KOM.prefix(_kat,'TSPL','TSPL');
   {? URZ_KOM.first()
   || URZ_LAB.blank();
      URZ_LAB.URZ_KOM:=URZ_KOM.ref();
      URZ_LAB.KOD:='Rozszerzona';
      URZ_LAB.OPIS:='Nazwa firmy,kod kreskowy z nr inwentarzowym, grupa środka pionowo.';
      URZ_LAB.ROZM_X:=50;
      URZ_LAB.ROZM_Y:=25;
      URZ_LAB.ODSTEP:=2;
      URZ_LAB.TRYB:='Z';
      {? URZ_LAB.add(1)
      || URZ_LABZ.blank();
         URZ_LABZ.LP:=1;
         URZ_LABZ.POZ:='CODEPAGE 852<CR><LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=2;
         URZ_LABZ.POZ:='SIZE <WIDTH_MM> mm,<HEIGHT_MM> mm<CR><LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=3;
         URZ_LABZ.POZ:='SPEED 2<CR><LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=4;
         URZ_LABZ.POZ:='DENSITY 11<CR><LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=5;
         URZ_LABZ.POZ:='SET CUTTER OFF<CR><LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=6;
         URZ_LABZ.POZ:='DIRECTION 0<CR><LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=7;
         URZ_LABZ.POZ:='REFERENCE 0,0<CR><LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=8;
         URZ_LABZ.POZ:='CLS<CR><LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=9;
         URZ_LABZ.POZ:='GAP <HOLE_MM> mm,0<CR><LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=10;
         URZ_LABZ.POZ:='SET COM1 96,N,8,1<CR><LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=11;
         URZ_LABZ.POZ:='TEXT 90,40,"3",0,1,1,"<FIRMA>"<CR><LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=12;
         URZ_LABZ.POZ:='BARCODE 40,80,"128",65,1,0,2,2,"<NRI>"<CR><LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=13;
         URZ_LABZ.POZ:='TEXT 10,130,"3",270,1,1,"<GRUPA>"<CR><LF>';
         URZ_LABZ.add(1);

         URZ_LABZ.blank();
         URZ_LABZ.LP:=14;
         URZ_LABZ.POZ:='PRINT 1<CR><LF>';
         URZ_LABZ.add(1)
      ?}
   ?}
?};

:: Porty i adresy
URZ_PORT.index('NAZWA');
URZ_PORT.prefix();
{? ~URZ_PORT.first()
|| URZ_PORT.NAZWA:='LPT1:';
   URZ_PORT.add(1);
   URZ_PORT.NAZWA:='COM1:';
   URZ_PORT.add(1);
   URZ_PORT.NAZWA:='|czytnik@194.92.38.95|com1:';
   URZ_PORT.add(1)
?};

:: Podpowiedzi
URZ_KAT.index('NAZWA');
URZ_KAT.prefix('DRUKARKA','DRUKARKA');
{? URZ_KAT.first() || _kat:=URZ_KAT.ref() || _kat:=null ?};
{? _kat=null
|| FUN.emsg('W definicjach systemu brak kategorii sprzętu: DRUKARKA.'@);
   return(0)
?};
URZ_KOM.index('KATKOD');
URZ_KOM.prefix(_kat,'DPL','DPL');
{? URZ_KOM.first() || _kom:=URZ_KOM.ref() || _kom:=null ?};
{? _kom=null
|| FUN.emsg('W definicjach systemu brak języka drukarki: DPL.'@);
   return(0)
?};

URZ_KOM.index('KATKOD');
URZ_KOM.prefix(_kat,'EPL2','EPL2');
{? URZ_KOM.first() || _kom:=URZ_KOM.ref() || _kom:=null ?};
{? _kom=null
|| FUN.emsg('W definicjach systemu brak języka drukarki: EPL2.'@);
   return(0)
?};

URZ_KOM.index('KATKOD');
URZ_KOM.prefix(_kat,'TSPL','TSPL');
{? URZ_KOM.first() || _kom:=URZ_KOM.ref() || _kom:=null ?};
{? _kom=null
|| FUN.emsg('W definicjach systemu brak języka drukarki: TSPL.'@);
   return(0)
?}


\init_format
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła uzupełniająca formaty plików z danymi z czytników kodów kreskowych
::  OLD: \init_format/skid_uz.fml
::----------------------------------------------------------------------------------------------------------------------
:: Dostępne parametry
FILE_DPR.NAZWA:='JEDNOSTKA KSIĘGOWA';
FILE_DPR.add(1);
FILE_DPR.NAZWA:='JEDNOSTKA ORGANIZACYJNA';
FILE_DPR.add(1);
FILE_DPR.NAZWA:='NUMER INWENTARZOWY';
FILE_DPR.add(1);
FILE_DPR.NAZWA:='POMIESZCZENIE';
FILE_DPR.add(1);
FILE_DPR.NAZWA:='PRACOWNIK';
FILE_DPR.add(1);

FILE_DPR.NAZWA:='PRZEWODNIK/POZYCJA';
FILE_DPR.add(1);
FILE_DPR.NAZWA:='ILOŚĆ';
FILE_DPR.add(1);

:: TXT COMMA PROSTY ===============================================================
FILE_FRM.blank();
FILE_FRM.KOD:='DENSO TXT (NRI)';
FILE_FRM.OPIS:='Pobierany tylko nr inwentarzowy.';
FILE_FRM.R_PLIK:='TXT';
FILE_FRM.EXT:='czt';
FILE_FRM.SEP:=',';
_add:=FILE_FRM.add(1);

{? _add
|| FILE_PAR.blank();
   FILE_PAR.FILE_FRM:=FILE_FRM.ref();
   FILE_PAR.KOD:='NUMER INWENTARZOWY';
   FILE_PAR.WARTOSC:=1;
   FILE_PAR.add(1)
?};

:: TXT COMMA Z LOKALIZACJA ===============================================================
FILE_FRM.blank();
FILE_FRM.KOD:='DENSO TXT (POM,NRI)';
FILE_FRM.OPIS:='Pobierany nr inwentarzowy i inwentaryzacja.';
FILE_FRM.R_PLIK:='TXT';
FILE_FRM.EXT:='czt';
FILE_FRM.SEP:=',';
_add:=FILE_FRM.add(1);

{? _add
|| FILE_PAR.blank();
   FILE_PAR.FILE_FRM:=FILE_FRM.ref();
   FILE_PAR.LP:=1;
   FILE_PAR.KOD:='POMIESZCZENIE';
   FILE_PAR.WARTOSC:=1;
   FILE_PAR.add(1);

   FILE_PAR.blank();
   FILE_PAR.FILE_FRM:=FILE_FRM.ref();
   FILE_PAR.LP:=2;
   FILE_PAR.KOD:='NUMER INWENTARZOWY';
   FILE_PAR.WARTOSC:=2;
   FILE_PAR.add(1)
?};

:: TXT COMMA UNITECH ===============================================================
FILE_FRM.blank();
FILE_FRM.KOD:='UNITECH TXT (NRI,JORG,KSIE,POM,PRAC)';
FILE_FRM.OPIS:='Plik z kolektora Unitech PT600, pobierane: nr inwentarzowy, lokalizacja, osoba odpowiedzialna.';
FILE_FRM.R_PLIK:='TXT';
FILE_FRM.EXT:='czt';
FILE_FRM.SEP:=',';
_add:=FILE_FRM.add(1);

{? _add
|| FILE_PAR.blank();
   FILE_PAR.FILE_FRM:=FILE_FRM.ref();
   FILE_PAR.LP:=1;
   FILE_PAR.KOD:='NUMER INWENTARZOWY';
   FILE_PAR.WARTOSC:=1;
   FILE_PAR.add(1);

   FILE_PAR.blank();
   FILE_PAR.FILE_FRM:=FILE_FRM.ref();
   FILE_PAR.LP:=2;
   FILE_PAR.KOD:='JEDNOSTKA KSIĘGOWA';
   FILE_PAR.WARTOSC:=2;
   FILE_PAR.add(1);

   FILE_PAR.blank();
   FILE_PAR.FILE_FRM:=FILE_FRM.ref();
   FILE_PAR.LP:=3;
   FILE_PAR.KOD:='JEDNOSTKA ORGANIZACYJNA';
   FILE_PAR.WARTOSC:=3;
   FILE_PAR.add(1);

   FILE_PAR.blank();
   FILE_PAR.FILE_FRM:=FILE_FRM.ref();
   FILE_PAR.LP:=4;
   FILE_PAR.KOD:='POMIESZCZENIE';
   FILE_PAR.WARTOSC:=4;
   FILE_PAR.add(1);

   FILE_PAR.blank();
   FILE_PAR.FILE_FRM:=FILE_FRM.ref();
   FILE_PAR.LP:=5;
   FILE_PAR.KOD:='PRACOWNIK';
   FILE_PAR.WARTOSC:=5;
   FILE_PAR.add(1)
?};

:: TXT DAT DENSO ===============================================================
FILE_FRM.blank();
FILE_FRM.KOD:='DENSO DAT (POM,NRI)';
FILE_FRM.OPIS:='Plik z kolektora DENSO, dane w paczkach po 32 bajty. 12 - lokalizacja, 20 - nr inwentarzowy.';
FILE_FRM.EXT:='dat';
FILE_FRM.R_PLIK:='BIN';
FILE_FRM.SEP:='';
_add:=FILE_FRM.add(1);

{? _add
|| FILE_PAR.blank();
   FILE_PAR.FILE_FRM:=FILE_FRM.ref();
   FILE_PAR.LP:=1;
   FILE_PAR.KOD:='POMIESZCZENIE';
   FILE_PAR.WARTOSC:=12;
   FILE_PAR.add(1);

   FILE_PAR.blank();
   FILE_PAR.FILE_FRM:=FILE_FRM.ref();
   FILE_PAR.LP:=2;
   FILE_PAR.KOD:='NUMER INWENTARZOWY';
   FILE_PAR.WARTOSC:=20;
   FILE_PAR.add(1)
?}


\bl_rs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Wartość początkowa pola ZR_DSLO.RS
::  OLD: \bl_rs/skid_slu.fml
::----------------------------------------------------------------------------------------------------------------------
RS.ref()


\pl_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [2011]
:: OPIS: Uzupełnienie słownika krajów i walut o wartości podstawowe - fragment wydzielony z nowedane/nowedane
::       Start - kraj Polska, waluty - złoty polski oraz lista walut z pliku wal.dfg
::  OLD: \pl_pl/nowedane.fml
::----------------------------------------------------------------------------------------------------------------------
exec('tworz_rs','dane_startowe');
SLU.cntx_psh(); SLO.cntx_psh(); KRAJE.cntx_psh();
KRAJE.index('KODISO'); KRAJE.prefix();
{? ~KRAJE.find_key('PL')
|| SLU.index('NAZ'); SLU.prefix('WALUTY');
   SLO.index('SL');
   {? ~SLU.first()
   || blwz:='';
      SLU.blank();
      SLU.NAZ:='WALUTY';
      SLU.OP:='waluty';
      SLU.WZ:='Waluta';
      SLU.SYSTEM:='N';
      SLU.DL:=3;
      {? SLU.add()
      || SLUAPPL.cntx_psh();
         SLUAPPL.index('NAZ');
         SLUAPPL.prefix('F',SLU.NAZ);
         {? ~SLUAPPL.first()
         || SLUAPPL.blank();
            SLUAPPL.GDZIE:='F';
            SLUAPPL.SLU:=SLU.ref();
            SLUAPPL.add()
         ?};
         SLUAPPL.cntx_pop()
      ?};
      &blwz
   ?};
   SLO.prefix(SLU.ref,'PLN');
   {? ~SLO.first()
   || SLO.blank();SLO.SLU:=SLU.ref(); SLO.KOD:='PLN';
      SLO.TR:='Złoty';
      SLO.add();
      WAL.cntx_psh();
      WAL.index('WAL_SYM');
      WAL.prefix('PLN');
      {? ~WAL.first()
      || WAL.blank();
         WAL.KOD:='985';
         WAL.SYM:='PLN';
         WAL.J:=1;
         WAL.NAZ:='Złoty';
         WAL.KRAJ:='Polska';
         WAL.add()
      ?};
      WAL.cntx_pop()
   ?};
   KRAJE.blank();
   KRAJE.SYM:='PL';
   KRAJE.NAZ:='Polska';
   KRAJE.WAL:=SLO.ref();
   KRAJE.KODISO:='PL';
   KRAJE.IBAN:='T';
   KRAJE.KODZUS:='PL';
   KRAJE.add()
?};
SLU.cntx_pop(); SLO.cntx_pop(); KRAJE.cntx_pop();
exec('kodZUSKraju','dane_startowe')


\kodZUSKraju
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Na podstawie pliku krajezus.dfg uzupełnia w słowniku brakujące informacje o kodzie kraju wg nomenklatury ZUS.
::       Formuła nie nadpisuje już istniejących zapisów
::  OLD: \kodZUSKraju/nowedane.fml
::----------------------------------------------------------------------------------------------------------------------
KRAJE.cntx_psh(); KRAJE.prefix();
{? KRAJE.find_tab(,'KODZUS',,'=','')
|| _TABIM:=tab_tmp(,'KRAJ','STRING[40]','Kraj','KOD','STRING[2]','Kod');
   _TABIM.import('krajezus.dfg',0,1,'|','UTF-8',,'KRAJ',,1,,'KOD',,2,);
   {? _TABIM.size
   || {? KRAJE.first
      || {! |?
            {? +KRAJE.KODZUS=0
            || _kraj:=STR.maz2nop(~-KRAJE.NAZ);
               {? STR.gsub(_kraj,'.','')='USA' || _kraj:='STANY ZJEDNOCZONE' ?};
               {? _TABIM.find_tab(,'KRAJ',,'=',_kraj)
               || KRAJE.KODZUS:=_TABIM.KOD;
                  KRAJE.put(1)
               ?}
            ?};
            KRAJE.next()
         !}
      ?}
   ?}
?};
KRAJE.cntx_pop();
:: dane definicji urządzeń zewnętrznych
exec('init_urz','dane_startowe');
1


\tworz_rs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GL [8.70]
:: OPIS: Utworzenie słownika banków i walut jeśli nie istnieją
::  OLD: \tworz_rs/waluty.fml
::----------------------------------------------------------------------------------------------------------------------
RS.index('RS');
RS.prefix('Waluta');
{? ~RS.first ||
   RS.blank;
   RS.WZ:='Waluta'; RS.TAB:='WAL'; RS.KOD:='SYM'; RS.TR:='NAZ';
   RS.add
?};
SLO.index('SL');
SLU.index('NAZ');
SLU.prefix('WALUTY');
{? ~SLU.first
|| SLU.blank;SLU.NAZ:='WALUTY';
   SLU.OP:='waluty';
   SLU.WZ:='Waluta';
   SLU.DL:=3;
   SLU.SYSTEM:='N';
   {? SLU.add()
   || SLUAPPL.cntx_psh();
      SLUAPPL.index('NAZ');
      SLUAPPL.prefix('F',SLU.NAZ);
      {? ~SLUAPPL.first()
      || SLUAPPL.blank();
         SLUAPPL.GDZIE:='F';
         SLUAPPL.SLU:=SLU.ref();
         SLUAPPL.add()
      ?};
      SLUAPPL.cntx_pop()
   ?};
   SLO.prefix;
   {? ~SLO.first
   || _uchwyt:=fopen('wal.dfg','ur',1);
      {? _uchwyt
      || WAL.index('WAL_KOD');
         WAL.prefix();
         {! |? _str:=fread(_uchwyt);
               {? _str<>'\n' & +|_str
               || _x:=_str*'@';
                  _wal:=(((_x-_str)*'@')-1)+(_x-_str);
                  {? ~WAL.find_key(_wal) | WAL.KOD<>_wal
                  || WAL.blank();
                     WAL.SYM:=_wal;
                     WAL.KOD:=(_str*'@'-1)+_str; _str:=_str*'@'-_str; _str:=_str*'@'-_str;
                     WAL.J:=#((_str*'@'-1)+_str); _str:=_str*'@'-_str;
                     WAL.NAZ:=(_str*'@'-1)+_str; _str:=_str*'@'-_str;
                     WAL.KRAJ:=(_str*'@'-1)+_str;
                     WAL.add();
                     {? ~SLO.find_key(SLU.ref,WAL.SYM) | SLO.KOD<>WAL.SYM
                     || SLO.blank;
                        SLO.SLU:=SLU.ref;
                        SLO.KOD:=WAL.SYM;
                        SLO.TR:=WAL.NAZ;
                        SLO.add
                     ?}
                  ?}
               ?};
               _str<>'\n'
         !};
         WAL.index('WAL_SYM');
         fclose(_uchwyt)
      ?}
   ?}
?};


SLUAPPL.cntx_psh(); SLUAPPL.index('NAZ'); SLUAPPL.prefix('F');

RS.prefix('Bank');
{? ~RS.first ||
   RS.blank;
   RS.WZ:='Bank'; RS.TAB:='B'; RS.KOD:='KOD';RS.TR:='NB';
   RS.add
?};
SLU.index('NAZ'); SLU.prefix('BANKI');
{? ~SLU.first
|| SLU.blank(); SLU.SYSTEM:='N';SLU.NAZ:='BANKI';
   SLU.OP:='banki';
   SLU.WZ:='Bank';
   SLU.DL:=5;
   {? SLU.add()
   || SLUAPPL.cntx_psh();
      SLUAPPL.index('NAZ');
      SLUAPPL.prefix('F',SLU.NAZ);
      {? ~SLUAPPL.first()
      || SLUAPPL.blank();
         SLUAPPL.GDZIE:='F';
         SLUAPPL.SLU:=SLU.ref();
         SLUAPPL.add()
      ?};
      SLUAPPL.cntx_pop()
   ?}
?};
RS.prefix('prosty');
{? ~RS.first
|| RS.blank();
   RS.WZ:='prosty';
   RS.add
?};
SLU.index('NAZ'); SLU.prefix('Języki');
{? ~SLU.first
|| SLU.blank();
   SLU.NAZ:='Języki';
   SLU.WZ:='prosty';
   SLU.DL:=3;
   SLU.OP:='Języki - narodowy i obce';
   SLU.SYSTEM:='N';
   {? SLU.add
   || SLUAPPL.cntx_psh();
      SLUAPPL.index('NAZ');
      SLUAPPL.prefix('F',SLU.NAZ);
      {? ~SLUAPPL.first()
      || SLUAPPL.blank();
         SLUAPPL.GDZIE:='F';
         SLUAPPL.SLU:=SLU.ref();
         SLUAPPL.add()
      ?};
      SLUAPPL.cntx_pop();
      SLO.prefix();
      SLO.blank;
      SLO.KOD:='ANG';
      SLO.TR:='Angielski';
      SLO.add;
      SLO.blank;
      SLO.KOD:='POL';
      SLO.TR:='Polski';
      SLO.add
   ?}
?};
RS.prefix();
SLUAPPL.cntx_pop()


\wsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Utworzenie tabeli WSK na starcie systemu
::  OLD: \wsk/skid.fml
::----------------------------------------------------------------------------------------------------------------------
WSK.cntx_psh(); WSK.index('RODZ'); WSK.prefix();
WSK.RODZ:='T'; WSK.WART:='PB'; WSK.TRESC:='Pozabilansowe'; WSK.add(1);
WSK.RODZ:='T'; WSK.WART:='BL'; WSK.TRESC:='Bilansowe'; WSK.add(1);
WSK.RODZ:='T'; WSK.WART:='BW'; WSK.TRESC:='Wynikowe'; WSK.add(1);
{? WSK.find_key('T','P1')
|| WSK.TRESC:='Pozabilansowe - jednoroczne'; WSK.put()
|| WSK.RODZ:='T'; WSK.WART:='P1'; WSK.TRESC:='Pozabilansowe - jednoroczne'; WSK.add(1)
?};
{? WSK.find_key('T','PC')
|| WSK.TRESC:='Pozabilansowe - cit'; WSK.put()
|| WSK.RODZ:='T'; WSK.WART:='PC'; WSK.TRESC:='Pozabilansowe - cit'; WSK.add(1)
?};
WSK.RODZ:='S'; WSK.WART:='A'; WSK.TRESC:='Aktywne'; WSK.add(1);
WSK.RODZ:='S'; WSK.WART:='P'; WSK.TRESC:='Pasywne'; WSK.add(1);
WSK.RODZ:='S'; WSK.WART:='D'; WSK.TRESC:='Aktywno-pasywne'; WSK.add(1);
WSK.RODZ:='R'; WSK.WART:='R'; WSK.TRESC:='Rozrachunkowe'; WSK.add(1);
WSK.RODZ:='R'; WSK.WART:='P'; WSK.TRESC:='Pozostałe'; WSK.add(1);
WSK.RODZ:='B'; WSK.WART:='B'; WSK.TRESC:='Budżetowe'; WSK.add(1);
WSK.RODZ:='B'; WSK.WART:='P'; WSK.TRESC:='Pozostałe'; WSK.add(1);
WSK.RODZ:='K'; WSK.WART:='1'; WSK.TRESC:='Kurs zakupu'; WSK.add(1);
WSK.RODZ:='K'; WSK.WART:='2'; WSK.TRESC:='Kurs sprzedaży'; WSK.add(1);
WSK.RODZ:='K'; WSK.WART:='3'; WSK.TRESC:='Kurs średni'; WSK.add(1);
WSK.RODZ:='Z'; WSK.WART:='T';WSK.TRESC:='Wg rejestrów księgowych'; WSK.add(1);
WSK.RODZ:='Z'; WSK.WART:='N';WSK.TRESC:='Ogólny'; WSK.add(1);
WSK.WART:='';
WSK.RODZ:='C'; WSK.TRESC:='Należność'; WSK.add(1);
WSK.RODZ:='C'; WSK.TRESC:='Zobowiązanie'; WSK.add(1);
WSK.RODZ:='D'; WSK.TRESC:='Natychmiastowe'; WSK.add(1);
WSK.RODZ:='D'; WSK.TRESC:='Uproszczone'; WSK.add(1);
WSK.RODZ:='N'; WSK.TRESC:='Bilansowe i wynikowe'; WSK.add(1);
WSK.RODZ:='N'; WSK.TRESC:='Pozabilansowe'; WSK.add(1);
WSK.RODZ:='N'; WSK.TRESC:='Wszystkie konta'; WSK.add(1);
WSK.RODZ:='X'; WSK.TRESC:='Należności';WSK.add(1);
WSK.RODZ:='X'; WSK.TRESC:='Zobowiązania';WSK.add(1);
WSK.RODZ:='X'; WSK.TRESC:='Pomocnicze';WSK.add(1);
WSK.RODZ:='X'; WSK.TRESC:='Wszystkie';WSK.add(1);
WSK.RODZ:='Y'; WSK.TRESC:='próbne';WSK.add(1);
WSK.RODZ:='Y'; WSK.TRESC:='końcowe';WSK.add(1);
WSK.RODZ:='A'; WSK.TRESC:='Bilans otwarcia';WSK.add(1);
WSK.RODZ:='A'; WSK.TRESC:='Obroty'; WSK.add(1);
WSK.RODZ:='A'; WSK.TRESC:='Saldo';WSK.add(1);
WSK.RODZ:='A'; WSK.TRESC:='Per Saldo';WSK.add(1);
WSK.RODZ:='A'; WSK.TRESC:='Różnica stron';WSK.add(1);
WSK.RODZ:='A'; WSK.TRESC:='Miesiąc';WSK.add(1);
WSK.RODZ:='A'; WSK.TRESC:='Miesiąc-różn. stron';WSK.add(1);
WSK.RODZ:='P'; WSK.TRESC:='Bilans otwarcia';WSK.add(1);
WSK.RODZ:='P'; WSK.TRESC:='Obroty'; WSK.add(1);
WSK.RODZ:='P'; WSK.TRESC:='Saldo';WSK.add(1);
WSK.RODZ:='P'; WSK.TRESC:='Per Saldo';WSK.add(1);
WSK.RODZ:='P'; WSK.TRESC:='Różnica stron';WSK.add(1);
WSK.RODZ:='P'; WSK.TRESC:='Miesiąc';WSK.add(1);
WSK.RODZ:='P'; WSK.TRESC:='Miesiąc-różn. stron';WSK.add(1);
WSK.RODZ:='J'; WSK.TRESC:='Bilans otwarcia';WSK.add(1);
WSK.RODZ:='J'; WSK.TRESC:='Obroty'; WSK.add(1);
WSK.RODZ:='J'; WSK.TRESC:='Saldo';WSK.add(1);
WSK.RODZ:='J'; WSK.TRESC:='Różnica stron';WSK.add(1);
WSK.RODZ:='J'; WSK.TRESC:='Miesiąc';WSK.add(1);
WSK.RODZ:='G'; WSK.WART:='40';  WSK.TRESC:='Koszty wg rodzajów';WSK.add(1);
WSK.RODZ:='G'; WSK.WART:='50';  WSK.TRESC:='Koszty wg działaln.';WSK.add(1);
WSK.RODZ:='G'; WSK.WART:='52';  WSK.TRESC:='Koszty sprzedaży';WSK.add(1);
WSK.RODZ:='G'; WSK.WART:='55';  WSK.TRESC:='Koszty zarządu';WSK.add(1);
WSK.RODZ:='G'; WSK.WART:='60';  WSK.TRESC:='Produkty, pr. w toku';WSK.add(1);
WSK.RODZ:='G'; WSK.WART:='64';  WSK.TRESC:='RMK, rezerwy';WSK.add(1);
WSK.RODZ:='G'; WSK.WART:='70';  WSK.TRESC:='Koszty wytworzenia';WSK.add(1);
WSK.RODZ:='G'; WSK.WART:='79';  WSK.TRESC:='Koszty i obroty wewn.';WSK.add(1);
WSK.RODZ:='G'; WSK.WART:='94';  WSK.TRESC:='Rozliczenie kosztów';WSK.add(1);
WSK.RODZ:='G'; WSK.WART:='86';  WSK.TRESC:='Wynik';WSK.add(1);
WSK.RODZ:='I'; WSK.WART:='NAL'; WSK.TRESC:='Należność';WSK.add(1);
WSK.RODZ:='I'; WSK.WART:='ZOB'; WSK.TRESC:='Zobowiązanie';WSK.add(1);
WSK.RODZ:='I'; WSK.WART:='RMK'; WSK.TRESC:='Rozliczenie Międzyokresowe Kosztów';WSK.add(1);
WSK.RODZ:='I'; WSK.WART:='RMP'; WSK.TRESC:='Rozliczenie Międzyokresowe Przychodów';WSK.add(1);
WSK.RODZ:='I'; WSK.WART:='NOD'; WSK.TRESC:='Odsetki od należności';WSK.add(1);
WSK.RODZ:='I'; WSK.WART:='ZOD'; WSK.TRESC:='Odsetki od zobowiązań';WSK.add(1);
WSK.RODZ:='I'; WSK.WART:='INN'; WSK.TRESC:='Rozrachunek techniczny';WSK.add(1);
WSK.RODZ:='E'; WSK.WART:='0';   WSK.TRESC:='bieżącego'; WSK.add(1);
WSK.RODZ:='E'; WSK.WART:='1';   WSK.TRESC:='poprzedniego'; WSK.add(1);
WSK.RODZ:='E'; WSK.WART:='2';   WSK.TRESC:='wstecz dwa lata'; WSK.add(1);
WSK.RODZ:='F'; WSK.WART:='';    WSK.TRESC:='FIKS'; WSK.add(1);
WSK.cntx_pop()


\slgrvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Utworzenie slownika grup podatkowych na starcie systemu
::   WE: _a - akronim tabeli stalych systemu (opcja)
::       _b - akronim pola tabeli stalych systemu dla slownika (opcja)
::  OLD: \slgrvat/skid.fml
::----------------------------------------------------------------------------------------------------------------------
SLU.index('NAZ');
SLUAPPL.index('NAZ');
SLO.index('SL');
SLU.prefix('~GRUPY PODATKOWE');
{? ~SLU.first()
|| blwz:='';
   SLU.blank;SLU.SYSTEM:='T';SLU.NAZ:='~GRUPY PODATKOWE';
   SLU.OP:='Grupy podatkowe';
   SLU.WZ:='prosty';
   SLU.DL:=8;
   SLU.add
?};
SLUAPPL.prefix('F','~GRUPY PODATKOWE');
{? ~SLUAPPL.first()
|| SLUAPPL.blank();
   SLUAPPL.SLU:=SLU.ref();
   SLUAPPL.add()
?};
{? _=2 & _a<>'' & _b<>''
|| {? ($(_a+'.'+_b))()<>SLUAPPL.ref()
   || ($(_a+'.'+_b+':=SLUAPPL.ref'))();
      exec('zapisz','#stalesys',1,($_a)(),_b)
   ?}
?};
SLO.prefix(SLU.ref,'ZInwePod');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZInwePod';
   SLO.TR:='Nabycie środków trw. - całk. odliczenie';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZInwPodZ');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZInwPodZ';
   SLO.TR:='Nabycie środków trw. - częściowe odlicz.';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZInwPodS');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZInwPodS';
   SLO.TR:='Nabycie samochodów - częściowe odlicz.';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZInwPods');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZInwPods';
   SLO.TR:='Nabycie samochodów - odliczenie bez % struktury';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZInwPodN');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZInwPodN';
   SLO.TR:='Nabycie środków trw. - czyn. nieopodat.';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZInwNPod');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZInwNPod';
   SLO.TR:='Nabycie środków trw. - brak odliczenia';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZakupPod');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZakupPod';
   SLO.TR:='Pozostałe nabycie - całk. odliczenie';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZakuPodZ');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZakuPodZ';
   SLO.TR:='Pozostałe nabycie - częściowe odliczenie';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZakuPodS');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZakuPodS';
   SLO.TR:='Pozostałe nabycie do samochodów - częściowe odliczenie';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZakuPods');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZakuPods';
   SLO.TR:='Pozostałe nabycie do samochodów - odlicz. bez % stru.';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZakuPodN');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZakuPodN';
   SLO.TR:='Pozostałe nabycie - czyn. nieopodat.';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZPozNPod');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZPozNPod';
   SLO.TR:='Pozostałe nabycie - brak odliczenia';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZPozNPal');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZPozNPal';
   SLO.TR:='Nabycie paliw - brak odliczenia';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZInwNSam');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZInwNSam';
   SLO.TR:='Nab. samochodów - brak podat. naliczon.';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZakPRopZ');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZakPRopZ';
   SLO.TR:='Nab. u rol. rycz. - częściowe odliczenie';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZakPRopN');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZakPRopN';
   SLO.TR:='Nab. u rol. rycz. - czyn. nieopodat.';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZakuPRop');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZakuPRop';
   SLO.TR:='Nab. u rol. rycz. - całk. odliczenie';
   SLO.add
?};
SLO.prefix(SLU.ref,'ZakupNpr');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ZakupNpr';
   SLO.TR:='Nab. u rol. rycz. - brak odliczenia';
   SLO.add
?};
SLO.prefix(SLU.ref,'Sprzedaż');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='Sprzedaż';
   SLO.TR:='Sprzedaż towarów i usług';
   SLO.add
?};
SLO.prefix(SLU.ref,'SprzPodr');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='SprzPodr';
   SLO.TR:='Sprzedaż eksportowa - zwrot podróżnym';
   SLO.add
?};
SLO.prefix(SLU.ref,'SprArt22');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='SprArt22';
   SLO.TR:='Kwoty objęte zaniech. poboru pod.';
   SLO.add
?};
SLO.prefix(SLU.ref,'Darowizn');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='Darowizn';
   SLO.TR:='Darowizna';
   SLO.add
?};
SLO.prefix(SLU.ref,'Osobiste');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='Osobiste';
   SLO.TR:='Przekazanie na potrzeby osobiste';
   SLO.add
?};
SLO.prefix(SLU.ref,'Reklama');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='Reklama';
   SLO.TR:='Przek.na potrzeby reprezentacji i reklamy';
   SLO.add
?};
SLO.prefix(SLU.ref,'SprzWys');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='SprzWys';
   SLO.TR:='Sprzedaż wysyłkowa w UE';
   SLO.add
?};
SLO.prefix(SLU.ref,'SprzOsP');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='SprzOsP';
   SLO.TR:='Dostawy dla osób prawnych w UE';
   SLO.add
?};
SLO.prefix(SLU.ref,'Dotacje');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='Dotacje';
   SLO.TR:='Dotacje, subwencje, dopłaty';
   SLO.add
?};
SLO.prefix(SLU.ref,'Próbki');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='Próbki';
   SLO.TR:='Próbki towarów';
   SLO.add
?};
SLO.prefix(SLU.ref,'Druki');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='Druki';
   SLO.TR:='Druki reklamowe i informacyjne';
   SLO.add
?};
SLO.prefix(SLU.ref,'Prezenty');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='Prezenty';
   SLO.TR:='Prezenty o małej wartości';
   SLO.add
?};
SLO.prefix(SLU.ref,'SprNObr');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='SprNObr';
   SLO.TR:='Czynności nie wliczane do obrotu';
   SLO.add
?};
SLO.prefix(SLU.ref,'SprPozKr');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='SprPozKr';
   SLO.TR:='Dostawy, usługi poza terytorium kraju';
   SLO.add
?};
SLO.prefix(SLU.ref,'SprPKWSU');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='SprPKWSU';
   SLO.TR:='Wewnątrzwspólnotowe świadczenie usług';
   SLO.add
?};
SLO.prefix(SLU.ref(),'SprPDost');
{? ~SLO.first()
|| SLO.blank();SLO.SLU:=SLU.ref();SLO.KOD:='SprPDost';
   SLO.TR:='Dostawa towarów - podatnik nabywca';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'SprPDosu');
{? ~SLO.first()
|| SLO.blank();SLO.SLU:=SLU.ref();SLO.KOD:='SprPDosu';
   SLO.TR:='Dostawa usług - podatnik nabywca';
   SLO.add()
?};
SLO.prefix(SLU.ref(),'SprOOEne');
{? ~SLO.first()
|| SLO.blank();SLO.SLU:=SLU.ref();SLO.KOD:='SprOOEne';
   SLO.TR:='Dostawa gazu, energii i uprawnień do emisji CO2 - Odwrotne obciążenie VAT';
   SLO.add()
?}


\slewid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Utworzenie slownika rodzajow ewidencji VAT na starcie systemu
::   WE: _a - akronim tabeli stalych systemu (opcja)
::       _b - akronim pola tabeli stalych systemu dla slownika (opcja)
::  OLD: \slewid/skid.fml
::----------------------------------------------------------------------------------------------------------------------

KVAT.prefix();
SLU.index('NAZ');
SLUAPPL.index('NAZ');
SLO.index('SL');
SLU.prefix('~RODZAJE EWIDENCJI');
{? ~SLU.first
|| blwz:='';
   SLU.blank;SLU.SYSTEM:='T';SLU.NAZ:='~RODZAJE EWIDENCJI';
   SLU.OP:='Rodzaje ewidencji VAT';
   SLU.WZ:='prosty';
   SLU.DL:=8;
   SLU.add
?};
SLUAPPL.prefix('F','~RODZAJE EWIDENCJI');
{? ~SLUAPPL.first()
|| SLUAPPL.blank();
   SLUAPPL.SLU:=SLU.ref();
   SLUAPPL.add()
?};
{? _=2 & _a<>'' & _b<>''
|| {? ($(_a+'.'+_b))()<>SLUAPPL.ref()
   || ($(_a+'.'+_b+':=SLUAPPL.ref'))();
      exec('zapisz','#stalesys',1,($_a)(),_b)
   ?}
?};
SLO.prefix(SLU.ref,'ZakuKraj');
{? ~SLO.first()
|| SLO.blank;SLO.SLU:=SLU.ref; SLO.KOD:='ZakuKraj'; SLO.TR:='Nabycie towarów i usług w kraju';
   SLO.add
?};
KVAT.blank;
KVAT.SYM:='ZakupKraj';  KVAT.NAZ:='Nabycie towarów i usług w kraju';
KVAT.add(1);

SLO.prefix(SLU.ref,'ZakOpod');
{? ~SLO.first()
|| SLO.blank;SLO.SLU:=SLU.ref; SLO.KOD:='ZakOpod'; SLO.TR:='Dostawa towarów - podatnik nabywca';
   SLO.add
?};
KVAT.blank;
KVAT.SYM:='ZakOpod';  KVAT.NAZ:='Podatnik nabywca - odwrotne obciąż.';
KVAT.add(1);

KVAT.blank;
KVAT.SYM:='ZakOpoZ';  KVAT.NAZ:='Podatnik nabywca - dostawca zagr.';
KVAT.add(1);

SLO.prefix(SLU.ref,'Sprzedaż');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='Sprzedaż'; SLO.TR:='Dostawy towarów i usług (kraj., eksport)';
   SLO.add
?};
KVAT.blank;
KVAT.SYM:='SprzKraj'; KVAT.NAZ:='Dostawa na terytorium kraju';
KVAT.add(1);

KVAT.blank;
KVAT.SYM:='SprzEksp';  KVAT.NAZ:='Eksport towarów i usług (opodatk.)';
KVAT.add(1);

SLO.prefix(SLU.ref,'ImpTowar');
{? ~SLO.first
  || SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ImpTowar'; SLO.TR:='Import towarów';
     SLO.add
?};
KVAT.blank;
KVAT.SYM:='ImpTowar';  KVAT.NAZ:='Import towarów';
KVAT.add(1);

KVAT.blank;
KVAT.SYM:='ImpTowUp';  KVAT.NAZ:='Import towarów - proc. uproszczona';
KVAT.add(1);

SLO.prefix(SLU.ref,'Brak');
{? ~SLO.first
  || SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='Brak'; SLO.TR:='Brak';
     SLO.add
?};
KVAT.blank;
KVAT.SYM:='SprzNOp';  KVAT.NAZ:='Czynności nieopodat. w kraju';
KVAT.add(1);
KVAT.blank;
KVAT.SYM:='_SprzNOp';  KVAT.NAZ:='Czynności nieopodat. - odbiorca UE';
KVAT.add(1);

SLO.prefix(SLU.ref,'ImpUsług');
{? ~SLO.first
  || SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='ImpUsług'; SLO.TR:='Import usług';
     SLO.add
?};
KVAT.blank;
KVAT.SYM:='ImpUsług';  KVAT.NAZ:='Import usług';
KVAT.add(1);
KVAT.blank;
KVAT.SYM:='_WWspNus';  KVAT.NAZ:='Import usług (wewnątrzwspólnotowe)';
KVAT.add(1);

SLO.prefix(SLU.ref,'_WWspNab');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='_WWspNab'; SLO.TR:='Wewnątrzwspólnotowe nabycie';
   SLO.add
?};
KVAT.blank;
KVAT.SYM:='_WWspNab';  KVAT.NAZ:='Wewnątrzwspólnotowe nabycie';
KVAT.add(1);
KVAT.blank;
KVAT.SYM:='_WWspNaw';  KVAT.NAZ:='Wewnątrzwsp. nabycie (obrót wł.)';
KVAT.add(1);
KVAT.blank;
KVAT.SYM:='_WWspNat';  KVAT.NAZ:='Wewnątrzwsp. nabycie (tr. trójstr.)';
KVAT.add(1);
KVAT.blank;
KVAT.SYM:='_WWspNST';  KVAT.NAZ:='Wewnątrzwsp. nab. środków tran.';
KVAT.add(1);

SLO.prefix(SLU.ref,'_WWspDos');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='_WWspDos'; SLO.TR:='Wewnątrzwspólnotowa dostawa';
   SLO.add
?};
KVAT.blank;
KVAT.SYM:='_WWspDos';  KVAT.NAZ:='Wewnątrzwspólnotowa dostawa';
KVAT.add(1);
KVAT.blank;
KVAT.SYM:='_WWspDow';  KVAT.NAZ:='Wewnątrzwsp. dostawa (obrót wł.)';
KVAT.add(1);
KVAT.blank;
KVAT.SYM:='_WWspDot';  KVAT.NAZ:='Wewnątrzwsp. dostawa (tr. trójstr.)';
KVAT.add(1)


\rodz_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Utworzenie slownika rodzajow dokumentow na starcie systemu
::   WE: _a - akronim tabeli stalych systemu
::       _b - akronim pola tabeli stalych systemu dla slownika
::  OLD: \rodz_dok/skid.fml
::----------------------------------------------------------------------------------------------------------------------
SLU.index('NAZ'); SLUAPPL.index('NAZ');
SLO.index('SL'); SLU.prefix('~RODZAJE DOKUMENTÓW');
{? ~SLU.first
|| blwz:='';
   SLU.blank(); SLU.SYSTEM:='T'; SLU.NAZ:='~RODZAJE DOKUMENTÓW';
   SLU.OP:='Rodzaje dokumentów';
   SLU.WZ:='prosty';
   SLU.POM:='N';
   SLU.DL:=8;
   SLU.add
?};
SLUAPPL.prefix('F','~RODZAJE DOKUMENTÓW');
{? ~SLUAPPL.first()
|| SLUAPPL.blank();
   SLUAPPL.SLU:=SLU.ref();
   SLUAPPL.add()
?};
SLO.prefix(SLU.ref,'BO');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='BO';
   SLO.TR:='Bilans otwarcia';
   SLO.add
?};
SLO.prefix(SLU.ref,'SAD');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='SAD';
   SLO.TR:='Dokument SAD';
   SLO.add
?};
SLO.prefix(SLU.ref,'PROSTY');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='PROSTY';
   SLO.TR:='Dokument prosty';
   SLO.add
?};
SLO.prefix(SLU.ref,'VAT');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='VAT';
   SLO.TR:='Dokument VAT';
   SLO.add
?};
SLO.prefix(SLU.ref,'KOR_BO');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='KOR_BO';
   SLO.TR:='Korekta bilansu otwarcia';
   SLO.add
?};
SLO.prefix(SLU.ref,'WEW');
{? ~SLO.first
|| SLO.blank;SLO.SLU:=SLU.ref;SLO.KOD:='WEW';
   SLO.TR:='Dokument wewnętrzny';
   SLO.add
?}


\uz_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DPU
:: OPIS: Uzupelnienie bazy PL (jezeli z jakiegos powodu czegos brak)
::  OLD: \uz_pl/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
PL.cntx_psh();
PL.prefix();
{? ~PL.find_tab(,'KDPL',,'=','852')
|| PL.blank();
   PL.KDPL:='852'; PL.NPL:='standard 852';
   PL.AD:=164;PL.CD:=143;PL.ED:=168;PL.LD:=157;PL.ND:=227;PL.OD:=224;PL.SD:=151;PL.ZID:=141;PL.ZD:=189;
   PL.AM:=165;PL.CM:=134;PL.EM:=169;PL.LM:=136;PL.NM:=228;PL.OM:=162;PL.SM:=152;PL.ZIM:=171;PL.ZM:=190;
   PL.add(1)
?};
{? ~PL.find_tab(,'KDPL',,'=','maz')
|| PL.blank();
   PL.KDPL:='maz'; PL.NPL:='standard Mazovia';
   PL.AD:=143;PL.CD:=149;PL.ED:=144;PL.LD:=156;PL.ND:=165;PL.OD:=163;PL.SD:=152;PL.ZID:=160;PL.ZD:=161;
   PL.AM:=134;PL.CM:=141;PL.EM:=145;PL.LM:=146;PL.NM:=164;PL.OM:=162;PL.SM:=158;PL.ZIM:=166;PL.ZM:=167;
   PL.add(1)
?};
{? ~PL.find_tab(,'KDPL',,'=','lt2')
|| PL.blank();
   PL.KDPL:='lt2'; PL.NPL:='standard Latin 2';
   PL.AD:=161;PL.CD:=198;PL.ED:=202;PL.LD:=163;PL.ND:=209;PL.OD:=211;PL.SD:=166;PL.ZID:=172;PL.ZD:=175;
   PL.AM:=177;PL.CM:=230;PL.EM:=234;PL.LM:=179;PL.NM:=241;PL.OM:=243;PL.SM:=182;PL.ZIM:=188;PL.ZM:=191;
   PL.add(1)
?};
{? ~PL.find_tab(,'KDPL',,'=','bez')
|| PL.blank();
   PL.KDPL:='bez'; PL.NPL:='bez polskich znaków';
   PL.AD:=65;PL.CD:=67;PL.ED:=69;PL.LD:=76;PL.ND:=78;PL.OD:=79;PL.SD:=83;PL.ZID:=90;PL.ZD:=90;
   PL.AM:=97;PL.CM:=99;PL.EM:=101;PL.LM:=108;PL.NM:=110;PL.OM:=111;PL.SM:=115;PL.ZIM:=122;PL.ZM:=122;
   PL.add(1)
?};
{? ~PL.find_tab(,'KDPL',,'=','win')
|| PL.blank();
   PL.KDPL:='win'; PL.NPL:='standard Windows';
   PL.AD:=165;PL.CD:=198;PL.ED:=202;PL.LD:=163;PL.ND:=209;PL.OD:=211;PL.SD:=140;PL.ZID:=143;PL.ZD:=175;
   PL.AM:=185;PL.CM:=230;PL.EM:=234;PL.LM:=179;PL.NM:=241;PL.OM:=243;PL.SM:=156;PL.ZIM:=159;PL.ZM:=191;
   PL.add(1)
?};
{? ~PL.find_tab(,'KDPL',,'=','UT8')
|| PL.blank();
   PL.KDPL:='UT8'; PL.NPL:='UTF-8';
   PL.SYS:='maz_utf8';
   PL.add(1)
?};
PL.cntx_pop()


\uz_kody
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: blank bazy HBKN (jeżeli z jakiegoś powodu jest pusta)
::  OLD: \uz_kody/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
HBKN.prefix();
{? HBKN.size()=0
|| HBKN.KD:='e'; HBKN.NP:='koniec linii';
   HBKN.add();
   HBKN.KD:='l'; HBKN.NP:='koniec strony';
   HBKN.add();
   HBKN.KD:='r'; HBKN.NP:='rekord';
   HBKN.add();
   HBKN.KD:='n'; HBKN.NP:='nagłówek';
   HBKN.add();
   HBKN.KD:='x'; HBKN.NP:='rekord kontrolny';
   HBKN.add()
?}


\init_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DPU
:: OPIS: formuła tworząca tabelę grup bilansowych
::----------------------------------------------------------------------------------------------------------------------
TAB.cntx_psh();
TAB.prefix();
{? ~TAB.first()
|| TAB.blank();
   TAB.POZ:='S1';
   TAB.O:='Grunty';
   TAB.add();
   TAB.blank();
   TAB.POZ:='S2';
   TAB.O:='Budynki i budowle';
   TAB.add();
   TAB.blank();
   TAB.POZ:='S3';
   TAB.O:='Urządzenia techniczne';
   TAB.add();
   TAB.blank();
   TAB.POZ:='S4';
   TAB.O:='Środki transportu';
   TAB.add();
   TAB.blank();
   TAB.POZ:='WN';
   TAB.O:='Wartości niematerialne i prawne';
   TAB.add()
?};
TAB.cntx_pop();
''


\init_rr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DPU
:: OPIS: formuła zakładająca tabelę rodzajów rozchodu
::  OLD: \init_rr/initmdb.fml
::----------------------------------------------------------------------------------------------------------------------
ROZ.cntx_psh();
ROZ.index('ROZCHODR');
{? ~ROZ.first()
|| ROZ.blank(); ROZ.R:='LIKWIDACJA'      ;ROZ.OPIS:='Likwidacja'; ROZ.add();
   ROZ.blank(); ROZ.R:='SPRZEDAŻ'        ;ROZ.OPIS:='Sprzedaż'; ROZ.add();
   ROZ.blank(); ROZ.R:='KRADZIEŻ'        ;ROZ.OPIS:='Kradzież'; ROZ.add();
   ROZ.blank(); ROZ.R:='UTRATA'          ;ROZ.OPIS:='Utrata'; ROZ.add();
   ROZ.blank(); ROZ.R:='ZŁOMOWANIE'      ;ROZ.OPIS:='Złomowanie'; ROZ.add();
   ROZ.blank(); ROZ.R:='PRZEMIESZCZENIE' ;ROZ.OPIS:='Przemieszczenie'; ROZ.add();
   ROZ.blank(); ROZ.R:='PRZEKAZANIE'     ;ROZ.OPIS:='Przekazanie'; ROZ.add();
   ROZ.blank(); ROZ.R:='DAROWIZNA'       ;ROZ.OPIS:='Darowizna'; ROZ.add()
?};
ROZ.cntx_pop()


\init_ma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DPU
:: OPIS: Formuła zakładająca tabelę metod amortyzacji
::   WE: [_a] - jeżeli jest _a i = 1 to wykonuje dodawanie bez względu na to czy tabela MA jest pusta czy nie
::----------------------------------------------------------------------------------------------------------------------
{? ~MA.first | (_>0 & type_of(_a)=type_of(0) & _a=1)
||
:: degresywna bilansowa
    MA.blank(); MA.K:='DFB'; MA.N:='Degresywna bilansowa';MA.CZESTO:='M';MA.T:='Degresywna'; MA.PD:='SRD.PodstDegrFin()';
    MA.PL:='SRST.WARF'; MA.NISKO:='N';MA.MP:=1; MA.RODZAJ:='F'; MA.add(1);
:: degresywna podatkowa
    MA.blank(); MA.K:='DPR'; MA.N:='Degresywna podatkowa';MA.CZESTO:='M';MA.T:='Degresywna'; MA.PD:='SRD.PodstDegrPod()';
    MA.PL:='SRST.WARP'; MA.NISKO:='N';MA.MP:=1;  MA.RODZAJ:='P'; MA.add(1);
:: degresywna dodatkowa
    MA.blank(); MA.K:='DPD'; MA.N:='Degresywna dodatkowa';MA.CZESTO:='M';MA.T:='Degresywna'; MA.PD:='SRD.PodstDegrDod()';
    MA.PL:='SRST.WARD'; MA.NISKO:='N';MA.MP:=1;  MA.RODZAJ:='D'; MA.add(1);
:: liniowa podatkowa
    MA.blank(); MA.K:='LIP'; MA.N:='Liniowa podatkowa';MA.CZESTO:='M';MA.T:='Liniowa'; MA.PD:='';
    MA.PL:='SRST.WARP'; MA.NISKO:='N';MA.MP:=1;  MA.RODZAJ:='P'; MA.add(1);
:: liniowa bilansowa
    MA.blank(); MA.K:='LIB'; MA.N:='Liniowa bilansowa';MA.CZESTO:='M';MA.T:='Liniowa'; MA.PD:='';
    MA.PL:='SRST.WARF'; MA.NISKO:='N';MA.MP:=1;  MA.RODZAJ:='F'; MA.add(1);
:: liniowa dodatkowa
    MA.blank(); MA.K:='LID'; MA.N:='Liniowa dodatkowa';MA.CZESTO:='M';MA.T:='Liniowa'; MA.PD:='';
    MA.PL:='SRST.WARD'; MA.NISKO:='N';MA.MP:=1;  MA.RODZAJ:='D'; MA.add(1);
:: jednorazowe umorzenie podatkowe
    MA.blank(); MA.K:='UJP'; MA.N:='Jednorazowe umorzenie podatkowe';MA.CZESTO:='M';MA.T:='Liniowa'; MA.PD:='';
    MA.PL:='SRST.WARP*12000'; MA.NISKO:='T';MA.MP:=0;  MA.RODZAJ:='P'; MA.add(1);
:: jednorazowe umorzenie bilansowe
    MA.blank(); MA.K:='UJB'; MA.N:='Jednorazowe umorzenie bilansowe';MA.CZESTO:='M';MA.T:='Liniowa'; MA.PD:='';
    MA.PL:='SRST.WARF*12000'; MA.NISKO:='T';MA.MP:=0;  MA.RODZAJ:='F'; MA.add(1);
:: jednorazowe umorzenie dodatkowe
    MA.blank(); MA.K:='UJD'; MA.N:='Jednorazowe umorzenie dodatkowe';MA.CZESTO:='M';MA.T:='Liniowa'; MA.PD:='';
    MA.PL:='SRST.WARD*12000'; MA.NISKO:='T';MA.MP:=0;  MA.RODZAJ:='D'; MA.add(1);
:: naturalna bilansowa
    MA.blank(); MA.K:='NAT'; MA.N:='Naturalna bilansowa';MA.CZESTO:='M';MA.T:='Naturalna'; MA.PD:='';
    MA.PL:='SRST.WARF'; MA.NISKO:='N';MA.MP:=0;  MA.RODZAJ:='F'; MA.add(1);
:: liniowa dzienna bilansowa
    MA.blank(); MA.K:='LDB'; MA.N:='Liniowa dzienna bilansowa';MA.CZESTO:='M';MA.T:='Liniowa'; MA.PD:='';
    MA.PL:='SRST.WARF'; MA.NISKO:='N';MA.MP:=0; MA.PDM:='T'; MA.RODZAJ:='F'; MA.add(1);
:: brak naliczania amortyzacji podatkowej
    MA.blank(); MA.K:='BNP'; MA.N:='Brak naliczania amortyzacji podatkowej';MA.CZESTO:='M';MA.T:='Liniowa'; MA.PD:='';
    MA.PL:='0'; MA.NISKO:='T';MA.MP:=1;  MA.RODZAJ:='P'; MA.add(1);
:: brak naliczania amortyzacji bilansowej
    MA.blank(); MA.K:='BNB'; MA.N:='Brak naliczania amortyzacji bilansowej';MA.CZESTO:='M';MA.T:='Liniowa'; MA.PD:='';
    MA.PL:='0'; MA.NISKO:='T';MA.MP:=1;  MA.RODZAJ:='F'; MA.add(1);
:: brak naliczania amortyzacji dodatkowej
    MA.blank(); MA.K:='BND'; MA.N:='Brak naliczania amortyzacji dodatkowej';MA.CZESTO:='M';MA.T:='Liniowa'; MA.PD:='';
    MA.PL:='0'; MA.NISKO:='T';MA.MP:=1;  MA.RODZAJ:='D'; MA.add(1);
:: zawieszenie amortyzacji podatkowej
    MA.blank(); MA.K:='ZAP'; MA.N:='Zawieszenie amortyzacji podatkowej';MA.CZESTO:='M';MA.T:='Liniowa'; MA.PD:='';
    MA.PL:='0'; MA.NISKO:='N';MA.MP:=1;  MA.RODZAJ:='P'; MA.add(1);
:: zawieszenie amortyzacji bilansowej
    MA.blank(); MA.K:='ZAB'; MA.N:='Zawieszenie amortyzacji bilansowej';MA.CZESTO:='M';MA.T:='Liniowa'; MA.PD:='';
    MA.PL:='0'; MA.NISKO:='N';MA.MP:=1;  MA.RODZAJ:='F'; MA.add(1);
:: zawieszene amortyzacji dodatkowej
   MA.blank(); MA.K:='ZAD'; MA.N:='Zawieszenie amortyzacji dodatkowej';MA.CZESTO:='M';MA.T:='Liniowa'; MA.PD:='';
    MA.PL:='0'; MA.NISKO:='N';MA.MP:=1;  MA.RODZAJ:='D'; MA.add(1)
?};
''


\init_rp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DPU
:: OPIS: formuła zakładająca tabelę rodzajów przychodu
::  OLD: \init_rp/initmdb.fml
::----------------------------------------------------------------------------------------------------------------------
_add:="PRZYCHOD.blank(); PRZYCHOD.R:=_a; PRZYCHOD.OPIS:=_b; PRZYCHOD.add()";

PRZYCHOD.cntx_psh();
PRZYCHOD.index('PRZYCHOR');
{? ~PRZYCHOD.first()
|| _add('ZAKUP','Zakup');
   _add('INWESTYCJA','Inwestycja');
   _add('APORT','Aport (wkład rzeczowy)');
   _add('PRZEMIESZCZENIE','Przemieszczenie');
   _add('DAROWIZNA','Darowizna');
   _add('OTRZ_NIEODPLAT',
      'Otrzymane nieodpłatnie o charakterze infrastruktury technicznej na mocy czynności cywilnoprawnych');
   _add('OTRZ_SKARB_PAN',
      'Otrzymane w nieodpłatne użytkowanie od Skarbu Państwa lub jednostek samorządu terytorialnego');
   _add('NAJEM',
      'Środki trwałe otrzymane na podstawie umowy najmu, dzierżawy lub leasingu, z których wynika prawo '
      'ich amortyzowania przez użytkującego');
   _add('NABYCIE_GRUNTU',
      'Nabycie gruntów i ewentualnie obiektów trwale z nim związanych w drodze zasiedzenia (na mocy wyroku sądu)');
   _add('UJAWNIENIE','Ujawnienie środka trwałego');
   _add('PRZEKWALIFIKOW.','Przekwalifikowanie z materiałów')
?};
PRZYCHOD.cntx_pop()


\edeklaracje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodanie wersji e-deklaracji
::----------------------------------------------------------------------------------------------------------------------
exec('add_ver','xml','FKS',date(2006,10,01),'VAT7',9,2);
exec('add_ver','xml','FKS',date(2008,12,01),'VAT7',10,3);
exec('add_ver','xml','FKS',date(2010,01,01),'VAT7',11,4);
exec('add_ver','xml','FKS',date(2011,01,01),'VAT7',12,5);
exec('add_ver','xml','FKS',date(2013,01,01),'VAT7',13,6);
exec('add_ver','xml','FKS',date(2013,04,01),'VAT7',14,7);
exec('add_ver','xml','FKS',date(2015,07,01),'VAT7',15,8);
exec('add_ver','xml','FKS',date(2016,01,01),'VAT7',16,9);
exec('add_ver','xml','FKS',date(2017,01,01),'VAT7',17,10);
exec('add_ver','xml','FKS',date(2018,07,01),'VAT7',18,11);
exec('add_ver','xml','FKS',date(2019,01,01),'VAT7',19,12);
exec('add_ver','xml','FKS',date(2019,11,01),'VAT7',20,13);
exec('add_ver','xml','FKS',date(2020,04,01),'V7M',1,21);
exec('add_ver','xml','FKS',date(2022,01,01),'V7M',2,22);
exec('add_ver','xml','FKS',date(2020,04,01),'V7K',1,15);
exec('add_ver','xml','FKS',date(2022,01,01),'V7K',2,16);
exec('add_ver','xml','FKS',date(2008,12,01),'VAT7D',1);
exec('add_ver','xml','FKS',date(2010,01,01),'VAT7D',2,2);
exec('add_ver','xml','FKS',date(2011,01,01),'VAT7D',3,3);
exec('add_ver','xml','FKS',date(2013,01,01),'VAT7D',4,4);
exec('add_ver','xml','FKS',date(2013,04,01),'VAT7D',5,5);
exec('add_ver','xml','FKS',date(2015,07,01),'VAT7D',6,6);
exec('add_ver','xml','FKS',date(2016,01,01),'VAT7D',7,7);
exec('add_ver','xml','FKS',date(2007,02,01),'POD',1);
exec('add_ver','xml','FKS',date(2010,01,01),'POD',2);
exec('add_ver','xml','FKS',date(2013,07,01),'POD',3);
exec('add_ver','xml','FKS',date(2017,01,11),'POD',4);
exec('add_ver','xml','FKS',date(2010,01,01),'PODK',2);
exec('add_ver','xml','FKS',date(2013,07,01),'PODK',3);
exec('add_ver','xml','FKS',date(2017,01,11),'PODK',4);
exec('add_ver','xml','FKS',date(2009,11,01),'CIT8',21);
exec('add_ver','xml','FKS',date(2015,01,01),'CIT8',22);
exec('add_ver','xml','FKS',date(2015,01,01),'CIT8',23);
exec('add_ver','xml','FKS',date(2016,01,01),'CIT8',24);
exec('add_ver','xml','FKS',date(2017,01,01),'CIT8',25);
exec('add_ver','xml','FKS',date(2018,01,01),'CIT8',26);
exec('add_ver','xml','FKS',date(2018,01,01),'CIT8',27);
exec('add_ver','xml','FKS',date(2019,01,01),'CIT8',28);
exec('add_ver','xml','FKS',date(2020,01,01),'CIT8',29);
exec('add_ver','xml','FKS',date(2021,01,01),'CIT8',31);
exec('add_ver','xml','FKS',date(2022,01,01),'CIT8',32);
exec('add_ver','xml','FKS',date(2015,07,01),'VAT27',1);
exec('add_ver','xml','FKS',date(2017,01,11),'VAT27',2);
exec('add_ver','xml','FKS',date(2015,07,01),'VAT27K',1);
exec('add_ver','xml','FKS',date(2021,04,01),'VIUDO',1,1);
::Poczatek modyfikacji dla Maclex
exec('add_ver','xml','FKS',date(2010,01,01),'O27',1);
exec('add_ver','xml','FKS',date(2010,01,01),'O28',1);
exec('add_ver','xml','FKS',date(2020,01,01),'O29',1);
exec('add_ver','xml','FKS',date(2010,01,01),'O23',1);
exec('add_ver','xml','FKS',date(2010,01,01),'O23',2);
exec('add_ver','xml','FKS',date(2010,01,01),'O28z',1);
exec('add_ver','xml','FKS',date(2007,01,01),'B27s',1);
exec('add_ver','xml','FKS',date(2010,01,01),'B27s',2);
exec('add_ver','xml','FKS',date(2007,01,01),'B28s',1);
exec('add_ver','xml','FKS',date(2010,01,01),'B28s',2);
exec('add_ver','xml','FKS',date(2007,01,01),'T23',1);
exec('add_ver','xml','FKS',date(2010,01,01),'T23',2);
exec('add_ver','xml','FKS',date(2007,01,01),'T27',1);
exec('add_ver','xml','FKS',date(2007,01,01),'T28',1);
exec('add_ver','xml','FKS',date(2007,01,01),'TPLW',1);
exec('add_ver','xml','FKS',date(2007,01,01),'TRBN',1);
exec('add_ver','xml','FKS',date(2007,01,01),'TRBZ',1);
::Koniec modyfikacji dla MacLex;
exec('add_ver','xml','FKS',date(2006,12,01),'CIT2',17);

exec('add_ver','xml','PPL',date(2007,1,1),'PIT4R',1,1);
exec('add_ver','xml','PPL',date(2008,5,1),'PIT4R',2,2);
exec('add_ver','xml','PPL',date(2009,1,1),'PIT4R',3,3);
exec('add_ver','xml','PPL',date(2013,11,21),'PIT4R',4,4,',9,10,');
exec('add_ver','xml','PPL',date(2014,12,8),'PIT4R',5,5,',9,10,');
exec('add_ver','xml','PPL',date(2016,1,1),'PIT4R',6,6,',9,10,');
exec('add_ver','xml','PPL',date(2018,1,1),'PIT4R',7,7,',7,8,');
exec('add_ver','xml','PPL',date(2018,12,6),'PIT4R',8,8,',2,3,4,6,7,10,');
exec('add_ver','xml','PPL',date(2019,1,1),'PIT4R',9,9,',2,3,4,6,7,10,');
exec('add_ver','xml','PPL',date(2020,11,13),'PIT4R',10,10,',2,3,4,6,7,9,');
exec('add_ver','xml','PPL',date(2021,1,1),'PIT4R',11,11,',2,3,4,6,7,9,');
exec('add_ver','xml','PPL',date(2021,4,2),'PIT4R',12,12,',2,3,4,6,7,9,');
exec('add_ver','xml','PPL',date(2023,1,1),'PIT4R',13,13,',2,3,4,6,7,9,');
exec('add_ver','xml','PPL',date(2007,1,1),'PIT8AR',1,1);
exec('add_ver','xml','PPL',date(2008,5,1),'PIT8AR',2,1);
exec('add_ver','xml','PPL',date(2012,5,1),'PIT8AR',3,2);
exec('add_ver','xml','PPL',date(2013,10,10),'PIT8AR',4,3,',1,2,3,4,5,6,7,8,9,10,11,12,13,');
exec('add_ver','xml','PPL',date(2014,12,8),'PIT8AR',5,4,',1,2,3,4,5,6,7,8,9,10,11,12,13,');
exec('add_ver','xml','PPL',date(2015,1,20),'PIT8AR',6,5,',1,2,3,4,5,6,7,8,9,10,11,12,13,14,');
exec('add_ver','xml','PPL',date(2016,1,1),'PIT8AR',7,6,',1,2,3,4,5,6,7,8,9,10,11,12,13,14,');
exec('add_ver','xml','PPL',date(2018,1,1),'PIT8AR',8,7,',1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,');
exec('add_ver','xml','PPL',date(2019,1,1),'PIT8AR',9,8,',1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,');
::jezeli mamy AK 20.42_06 ze zmiana def to pelna parametryzacja wiersz dla PIT-8AR
_wakt:=',1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,';
exec('add_ver','xml','PPL',date(2020,11,13),'PIT8AR',10,9,_wakt);
exec('add_ver','xml','PPL',date(2021,1,1),'PIT8AR',11,10,_wakt);
exec('add_ver','xml','PPL',date(2021,4,2),'PIT8AR',12,11,_wakt);
_wakt:=',1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,';
exec('add_ver','xml','PPL',date(2022,1,1),'PIT8AR',13,12,_wakt);
::zmiany 2023 wiersz 41 to blok F. ODSETKI, O KTÓRYCH MOWA W ART. 8 UST. 2 PKT 2 USTAWY O POMOCY PAŃSTWA
::W OSZCZĘDZANIU NA CELE MIESZKANIOWE9)
_wakt:=',1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,41,';
exec('add_ver','xml','PPL',date(2023,1,1),'PIT8AR',14,13,_wakt);
exec('add_ver','xml','PPL',date(2008,7,1),'PIT11',1);
exec('add_ver','xml','PPL',date(2009,1,1),'PIT11',2,17,',2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2011,1,1),'PIT11',3,18,',2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2012,1,1),'PIT11',4,19,',2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2013,10,11),'PIT11',5,20,',2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2014,12,8),'PIT11',6,21,',2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2015,2,23),'PIT11',7,22,',2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2016,1,1),'PIT11',8,23,',2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2018,1,1),'PIT11',9,24,',2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2019,1,1),'PIT11',10,25,',3,4,5,7,8,');
exec('add_ver','xml','PPL',date(2020,11,13),'PIT11',11,26,',3,4,5,7,8,');
exec('add_ver','xml','PPL',date(2021,3,4),'PIT11',12,27,',1,3,4,5,7,8,10,');
exec('add_ver','xml','PPL',date(2022,1,1),'PIT11',13,28,',1,4,5,6,9,10,12,');
exec('add_ver','xml','PPL',date(2022,11,9),'PIT11',14,29,',1,4,5,6,9,10,15,');
exec('add_ver','xml','PPL',date(2009,1,1),'PIT40',2,16,',2,3,4,5,6,7,');
exec('add_ver','xml','PPL',date(2012,1,1),'PIT40',3,17,',2,3,4,5,6,7,');
exec('add_ver','xml','PPL',date(2013,11,25),'PIT40',4,19,',2,3,4,5,6,7,');
exec('add_ver','xml','PPL',date(2014,12,12),'PIT40',5,20,',2,3,4,5,6,7,');
exec('add_ver','xml','PPL',date(2015,11,17),'PIT40',6,22,',2,3,4,5,6,7,');
exec('add_ver','xml','PPL',date(2013,10,10),'PIT8C',6,6);
exec('add_ver','xml','PPL',date(2014,12,5),'PIT8C',7,7);
exec('add_ver','xml','PPL',date(2016,1,1),'PIT8C',8,8);
exec('add_ver','xml','PPL',date(2018,1,1),'PIT8C',9,9);
exec('add_ver','xml','PPL',date(2019,1,1),'PIT8C',10,10);
exec('add_ver','xml','PPL',date(2022,8,10),'PIT8C',11,11);
exec('add_ver','xml','PPL',date(2013,10,10),'IFT1',10,10,',1,2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2014,12,22),'IFT1',11,11,',1,2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2015,2,13),'IFT1',12,12,',1,2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2016,1,1),'IFT1',13,13,',1,2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2018,1,1),'IFT1',14,14,',1,2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2019,1,1),'IFT1',15,15,',1,2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2021,1,1),'IFT1',16,16,',1,2,3,4,5,6,7,8,9,10,11,12,');
exec('add_ver','xml','PPL',date(2013,10,10),'IFT1R',10,10,',1,2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2014,12,22),'IFT1R',11,11,',1,2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2015,2,13),'IFT1R',12,12,',1,2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2016,1,1),'IFT1R',13,13,',1,2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2018,1,1),'IFT1R',14,14,',1,2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2019,1,1),'IFT1R',15,15,',1,2,3,4,5,6,7,8,9,10,');
exec('add_ver','xml','PPL',date(2021,1,1),'IFT1R',16,16,',1,2,3,4,5,6,7,8,9,10,11,12,');
VAT_VER.clear()


\slo_naz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła uzupełnia pozycje słownika SLO_NAZ.
::   WE:
::   WY:
::  OLD: \links/links.fml
::----------------------------------------------------------------------------------------------------------------------
_add:="exec('slo_naz','ext_slo',_a,_b,,1)";

: ZAL - Typy Załączników - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_typ:=exec('slo_typ','ext_slo','ZAL');

_add(_typ,'CV');
_add(_typ,'List motywacyjny');

_add(_typ,'Umowa o pracę');
_add(_typ,'Aneks do umowy');

_add(_typ,'Umowa cywilnoprawna');
_add(_typ,'Rachunek do umowy cywilnoprawnej');

_add(_typ,'Opis stanowiska');

_add(_typ,'Świadectwo szkolne');
_add(_typ,'Dyplom ukończenia studiów drugiego stopnia');
_add(_typ,'Dyplom ukończenia studiów pierwszego stopnia');

_add(_typ,'Dokument dla potrzeb GIODO');

_add(_typ,'Dokument IMiR');
_add(_typ,'Dokument RMUA');
_add(_typ,'Lista płac');

_add(_typ,'Informacje podatkowe');
_add(_typ,'Oświadczenie PIT-12');
_add(_typ,'Oświadczenie dotyczące kosztów z praw autorskich');
_add(_typ,
   'PIT-2: Oświadczenie pracownika dla celów obliczania miesięcznych zaliczek na podatek dochodowy od osób fizycznych'
);
_add(_typ,'Oświadczenia-przychód zwolniony od podatku');
_add(_typ,'Zagraniczny numer identyfikacyjny podatnika');

_add(_typ,'Orzeczenia lekarskie');

_add(_typ,'Świadectwo Kwalifikacyjne');

_add(_typ,'Prawo Wykonywania Zawodu');
_add(_typ,'Zawieszenie uprawnień zawodowych');

_add(_typ,'Świadectwo pracy');

_add(_typ,'Świadectwo urodzenia');
_add(_typ,'Akt zgonu');

_add(_typ,'Korekta ZUS');

_add(_typ,'Inne');

_add(_typ,'Umowa lojalnościowa');

_add(_typ,'Ruchomy czas pracy');
_add(_typ,'Wniosek o udzielenie czasu wolnego');

_add(_typ,'Wniosek o urlop rodzicielski');

_add(_typ,'Deklaracja/wniosek PPK');

_add(_typ,'Dokumenty informacji podatkowych');

_add(_typ,'_NIEUZUPEŁNIONY_');
_add(_typ,'Kara podlegająca zatarciu');
_add(_typ,'Karta ewidencji czasu pracy');
_add(_typ,'Wniosek urlopowy');
_add(_typ,'Wniosek o opiekę bezpłatną');
_add(_typ,'Wniosek o urlop bezpłatny');
_add(_typ,'Wniosek o urlop okolicznościowy');
_add(_typ,'Wniosek o zwolnienie od pracy (Art. 188 Kp)');

_add(_typ,'Potwierdzenie znajomości języka obcego');

_add(_typ,'Informacja o okresie przechowywania akt pracowniczych');
_add(_typ,'Informacja o sposobie wypłaty wynagrodzenia');
_add(_typ,'Informacja o warunkach pracy');
_add(_typ,'Przeszeregowanie');
_add(_typ,'Wypowiedzenie warunków umowy o pracę');
_add(_typ,'Zaświadczenie do zasiłku rodzinnego');
_add(_typ,'Zaświadczenie o zatrudnieniu i zarobkach');
_add(_typ,'Zmiana wysługi');
_add(_typ,'Zwolnienie bez wypowiedzenia');
_add(_typ,'Zwolnienie za wypowiedzeniem');
_add(_typ,'Zwolnienie ze skróconym okresem wypowiedzenia');

:: załączniki do wniosków dla dziedziny POR
_add(_typ,'Akt urodzenia dziecka');
_add(_typ,'Decyzja o odroczeniu obowiązku szkolnego');
_add(_typ,'Oświadczenie o (nie)korzystaniu z urlopu ojcowskiego');
_add(_typ,'Postanowienie sądu o przysposobieniu dziecka');

_add(_typ,exec('_duplikat','portal_walidacja').name);
_add(_typ,exec('_erp7','portal_walidacja').name);
_add(_typ,exec('_ppk_opif','portal_walidacja').name);
_add(_typ,exec('_rdcr','portal_walidacja').name);
_add(_typ,exec('_ppk_wodw','portal_walidacja').name);
_add(_typ,exec('_nadg_w','portal_walidacja').name);
_add(_typ,exec('_ppk_drwd','portal_walidacja').name);
_add(_typ,exec('_edp','portal_walidacja').name);
_add(_typ,exec('_ppk_wou','portal_walidacja').name);
_add(_typ,exec('_zaliczka','portal_walidacja').name);
_add(_typ,exec('_ppk_dwwd','portal_walidacja').name);
_add(_typ,exec('_ppk_dwwp','portal_walidacja').name);
_add(_typ,exec('_wn_zzal','portal_walidacja').name);
_add(_typ,exec('_zmiana_us','portal_walidacja').name);
_add(_typ,exec('_rachunek','portal_walidacja').name);
_add(_typ,exec('_wozda','portal_walidacja').name);
_add(_typ,exec('_woz','portal_walidacja').name);
_add(_typ,exec('_wzz','portal_walidacja').name);
_add(_typ,exec('_zmiana_wdo','portal_walidacja').name);
_add(_typ,exec('_zmiana_dowod','portal_walidacja').name);
_add(_typ,exec('_zmiana_paszport','portal_walidacja').name);
_add(_typ,exec('_ppk_dowu25','portal_walidacja').name);
_add(_typ,exec('_zmiana_pesel','portal_walidacja').name);
_add(_typ,exec('_zmiana_nip','portal_walidacja').name);
_add(_typ,exec('_zmiana_obywatelstwa','portal_walidacja').name);
_add(_typ,exec('_szkolenie','portal_walidacja').name);
_add(_typ,exec('_praktyka','portal_walidacja').name);
_add(_typ,exec('_premia','portal_walidacja').name);
_add(_typ,exec('_nadg_p','portal_walidacja').name);
_add(_typ,exec('_czw','portal_walidacja').name);
_add(_typ,exec('_odb','portal_walidacja').name);
_add(_typ,exec('_ppsf','portal_walidacja').name);
_add(_typ,exec('_njo','portal_walidacja').name);
_add(_typ,exec('_dofs','portal_walidacja').name);
_add(_typ,exec('_opieka','portal_walidacja').name);
_add(_typ,exec('_opiekun','portal_walidacja').name);
_add(_typ,exec('_zod','portal_walidacja').name);
_add(_typ,exec('_zoc','portal_walidacja').name);
_add(_typ,exec('_odbp','portal_walidacja').name);
_add(_typ,exec('_pit_zero_26','portal_walidacja').name);
{? exec('is_pzd01','ppsf')
|| _add(_typ,'Kontrola obecności alkoholu lub obecności innej substancji niż alkohol');
   _add(_typ,'Praca zdalna - uzgodnienia');
   _add(_typ,'Praca zdalna - oświadczenia');
   ~~
?};
:: załączniki dla wniosków dla dziedziny PEP
_add(_typ,exec('_zlozenie_dok','portal_walidacja').name);
: ROZWUM - Tryb rozwiązania umowy o pracę  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_typ:=exec('slo_typ','ext_slo','ROZWUM');

_add(_typ,'emerytura');
_add(_typ,'likwidacja zakładu');
_add(_typ,'porozumienie pomiędzy zakładami');
_add(_typ,'porozumienie stron');
_add(_typ,'porzucenie stanowiska pracy');
_add(_typ,'poważne naruszenie obowiązków prac.');
_add(_typ,'renta');
_add(_typ,'reorganizacja zakładu');
_add(_typ,'rozwiązanie umowy z art. 52 Kp');
_add(_typ,'upadłość zakładu');
_add(_typ,'wypowiedzenie przez pracownika');
_add(_typ,'wypowiedzenie przez przedsiębiorstwo');
_add(_typ,'z upływem czasu na który była zawarta');
_add(_typ,'zwolnienie dyscyplinarne');

~~


\slo_kod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [17.00]
::  MOD: MicKoc [22.26]
:: OPIS: Formuła uzupełnia pozycje słownika SLO_KOD.
::   WE: [_a][INTEGER] - 0*/1 Czy zwrócić tylko formułę update? Domyślnie 0- dotychczasowe działanie
::   WY:
::  OLD: \links/links.fml
::----------------------------------------------------------------------------------------------------------------------
_dajUpdate:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_update:="
   {? ~(_put:=SLO_KOD.find_key(_a,_b,))
   || SLO_KOD.blank(1);
      SLO_KOD.SLO_TYP:=_a;
      SLO_KOD.KOD:=_b
   ?};
   _zmiana:=0;
   {? SLO_KOD.NAZWA<>_c
   || SLO_KOD.NAZWA:=_c;
      _zmiana+=1
   ?};
   {? var_pres('_d')=type_of('') & SLO_KOD.SYSTEM<>_d
   || SLO_KOD.SYSTEM:=_d;
      _zmiana+=1
   ?};
   {? SLO_KOD.SYSTEM<>'N' & SLO_KOD.SYSTEM<>'T'
   || SLO_KOD.SYSTEM:='N';
      _zmiana+=1
   ?};
   {? _put
   || {? _zmiana
      || SLO_KOD.put()
      || 1
      ?}
   || SLO_KOD.add()
   ?}
";
{? _dajUpdate
|| return(_update)
?};

SLO_KOD.cntx_psh();
SLO_KOD.index('KOD');
SLO_KOD.prefix();

: Typ aktywnosci naukowej
_typ:=exec('slo_typ','ext_slo','AKTNAUK');
_update(_typ,'PUBLIK','Publikacja','T');
&_typ;

: Grupy pracownikow
_typ:=exec('slo_typ','ext_slo','GRUPPRAC');
_update(_typ,'MPKwgG','Pracownicy z miesięcznym podziałem kosztów wg godzin','T');
_update(_typ,'UR_EK_12','Pracownicy z 12 miesięcznym wyliczeniem do urlopu oraz ekwiwalentu','T');
_update(_typ,'PR_NIEDZ','Pracownicy z dopuszczalną pracą w niedziele na podstawie ustawy o ograniczeniu handlu','T');
_update(_typ,'PRZERWY','Grupy niepłatnych przerw w pracy','T');
Cntx.psh(SLO_TYP,SLO_KOD,GRUPRODZ);
GRUPRODZ.prefix();
{? ~GRUPRODZ.first()
|| _update(_typ,'PRAC_1','Pracownicy grupy 1 z przypisaną niepłatną przerwą w pracy','N');
   _ref1:=exec('kod_ref','ext_slo','GRUPPRAC','PRZERWY','Grupy niepłatnych przerw w pracy');
   _ref2:=exec('kod_ref','ext_slo','GRUPPRAC','PRAC_1','Pracownicy grupy 1 z przypisaną niepłatną przerwą w pracy');
   {? _ref1 & _ref2
   || exec('add2rodz','grupprac',_ref1,_ref2)
   ?}
?};
Cntx.pop(SLO_TYP,SLO_KOD,GRUPRODZ);
&_typ;

: Rodzaj numeru identyfikacyjnego
_typ:=exec('slo_typ','ext_slo','RZNIP');
_update(_typ,'1','NUMER IDENTYFIKACYJNY TIN','T');
_update(_typ,'2','NUMER UBEZPIECZENIOWY','T');
_update(_typ,'3','PASZPORT','T');
_update(_typ,'4','URZĘDOWY DOKUMENT STWIERDZAJĄCY TOŻSAMOŚĆ','T');
_update(_typ,'8','INNY RODZAJ IDENTYFIKACJI PODATKOWEJ','T');
_update(_typ,'9','INNY DOKUMENT POTWIERDZAJĄCY TOŻSAMOŚĆ','T');
&_typ;

: Rodzaj umow na czas okreslony z uzasadnieniem podania zawarcia umowy
_typ:=exec('slo_typ','ext_slo','OKR_UZAS');
_update(_typ,'1','w celu zastępstwa pracownika w czasie jego usprawiedliwionej nieobecności w pracy','T');
_update(_typ,'2','w celu wykonywania pracy o charakterze dorywczym lub sezonowym','T');
_update(_typ,'3','w celu wykonywania pracy przez okres kadencji ','T');
_update(_typ,'4','gdy pracodawca wskaże obiektywne przyczyny leżące po jego stronie','T');
&_typ;

: Typ badania lekarskiego
_typ:=exec('slo_typ','ext_slo','BADLEKT');
_update(_typ,'WSTĘPNE','Badanie wstępne','T');
_update(_typ,'OKRES','Badanie okresowe','T');
_update(_typ,'KONTROL','Badanie kontrolne','T');
&_typ;

: Rodzaj pracy (związany ze stanowiskiem pracy).
_typ:=exec('slo_typ','ext_slo','RODZPRAC');
_update(_typ,'A','Praca w szczególnych warunkach','T');
_update(_typ,'B','Praca o szczególnym charakterze','T');
&_typ;

: Typ NIEZNANY konieczny
_typ:=exec('slo_typ','ext_slo','NIEZNANY');
_update(_typ,'NIEZNANY','Nieokreślony','T');

: Typ pełnionych obowiązków
_typ:=exec('slo_typ','ext_slo','TYPPOZ');
_update(_typ,'AKCWNIO','Akceptacja wniosków urlopowych','T');
_update(_typ,'DOSTINF','Dostęp do danych pracownika','T');
_update(_typ,'PLANCZP','Planowanie czasu pracy','T');
&_typ;

: Statusy listy płac
_typ:=exec('slo_typ','ext_slo','LISTAT');
_update(_typ,'LSLP_AKT','Zaktualizowano numery składników listy','T');
_update(_typ,'ZBLP_AKT','Zaktualizowano numery składników zbiorówki','T');
_update(_typ,'OBLICZ','Termin ostatniej redakcji składników listy płac.','T');
_update(_typ,'KAL_AKT','Aktualizacja danych po zmianie kalendarza.','T');

: Statusy przebiegu zatrudnienia
_typ:=exec('slo_typ','ext_slo','H_STAT');
_update(_typ,'T_ZM_WYM','Tarcza antykryzysowa - zmiana wymiaru zatrudnienia','T');
_update(_typ,'T_ZM_WAR','Tarcza antykryzysowa - zmiana stawki wynagrodzenia','T');

: rodzaje profili
{? (_typ:=exec('slo_typ','ext_slo','PROFTYP'))<>null
|| _update(_typ,'B','bazowy');
   _update(_typ,'O','ogólny');
   _update(_typ,'S','szczegółowy')
?};
: statusy formularza
{? (_typ:=exec('slo_typ','ext_slo','ZA_FORM'))<>null
|| _update(_typ,'P','przygotowany');
   _update(_typ,'W','edytowany');
   _update(_typ,'Z','zamknięty')
?};
: statusy szablonu
{? (_typ:=exec('slo_typ','ext_slo','ZA_ZESTS'))<>null
|| _update(_typ,'U','ukryty');
   _update(_typ,'W','widoczny')
?};
: statusy ankiety
{? (_typ:=exec('slo_typ','ext_slo','ZA_ZESTA'))<>null
|| _update(_typ,'P','przygotowywana');
   _update(_typ,'U','udostępniona');
   _update(_typ,'Z','zamknięta')
?};
: rodzaj szkolenia
{? (_typ:=exec('slo_typ','ext_slo','SZK_RODZ'))<>null
|| _update(_typ,'W','wewnętrzne');
   _update(_typ,'Z','zewnętrzne')
?};
: status szkolenia
{? (_typ:=exec('slo_typ','ext_slo','SZK_STAN'))<>null
|| _update(_typ,'A','anulowane');
   _update(_typ,'P','planowane');
   _update(_typ,'W','wykonane');
   _update(_typ,'Z','zatwierdzone')
?};
: rodzaj zgloszenia zapotrzebowania
{? (_typ:=exec('slo_typ','ext_slo','ZGL_TYP'))<>null
|| _update(_typ,'U','użytkownik');
   _update(_typ,'P','pracownik');
   _update(_typ,'S','przełożony');
   _update(_typ,'M','matryca szkoleń')
?};
: wynik weryfikacji zgloszenia zapotrzebowania
{? (_typ:=exec('slo_typ','ext_slo','WER_WYN'))<>null
|| _update(_typ,'X','oczekujące');
   _update(_typ,'A','anulowane');
   _update(_typ,'O','odrzucone');
   _update(_typ,'Z','zaakceptowane')
?};
: atrybuty osob
{? (_typ:=exec('slo_typ','ext_slo','ZZ_OSOBA'))<>null
|| _update(_typ,'TRENER','osoba prowadząca szkolenia i seminaria')
?};
: rodzaje mobilnosci
{? (_typ:=exec('slo_typ','ext_slo','MOB_TYP'))<>null
|| _update(_typ,'NM','Brak mobilności');
   _update(_typ,'BR','Bez relokacji');
   _update(_typ,'KR','Krajowa');
   _update(_typ,'MN','Międzynarodowa');
   _update(_typ,'BO','Bez ograniczeń')
?};
: rodzaje wynikłego zapotrzebowania
{? (_typ:=exec('slo_typ','ext_slo','TYP_ZAP'))<>null
|| _update(_typ,'A','związane ze stanowiskiem');
   _update(_typ,'B','nie związane ze stanowiskiem');
   _update(_typ,'C','zarządzanie');
   _update(_typ,'D','języki');
   _update(_typ,'E','technika biurowa');
   _update(_typ,'F','BHP');
   _update(_typ,'G','szkolenia dyplomowe i akademickie');
   _update(_typ,'H','Uprawnienia')
?};
: podstawa realizacji zapotrzebowania
{? (_typ:=exec('slo_typ','ext_slo','POD_REAL'))<>null
|| _update(_typ,'A','szkolenie adaptacyjne');
   _update(_typ,'E','szkolenie e-learning');
   _update(_typ,'O','Ocena pracownicza');
   _update(_typ,'K','przesunięcie z poprzedniego planu');
   _update(_typ,'P','plan');
   _update(_typ,'M','matryca');
   _update(_typ,'R','bieżąca potrzeba')
?};
: opis budzetu dla planu szkolen
{? (_typ:=exec('slo_typ','ext_slo','SZB_OROD'))<>null
|| _update(_typ,'PLAN','Plan szkoleń')
?};
: pozycje budzetu dla planu szkolen
{? (_typ:=exec('slo_typ','ext_slo','SZB_PROD'))<>null
|| _update(_typ,'PLAN','Plan szkoleń')
?};
: rodzaj zmiany zatrudnienia
{? (_typ:=exec('slo_typ','ext_slo','ZP_DET'))<>null
|| _update(_typ,'+P','przeszeregowanie');
   _update(_typ,'+Z','zatrudnienie');
   _update(_typ,'-P','przeniesienie');
   _update(_typ,'-Z','zwolnienie');
   _update(_typ,'.','pracujący')
?};
: status planu zatrudnienia
{? (_typ:=exec('slo_typ','ext_slo','ZP_OKR'))<>null
|| _update(_typ,'P','przygotowywany');
   _update(_typ,'O','obowiązujący');
   _update(_typ,'A','archiwalny');
   _update(_typ,'E','edytowany')
?};
: status oferty zatrudnienia
{? (_typ:=exec('slo_typ','ext_slo','RP_OFE_S'))<>null
|| _update(_typ,'P','przygotowywana');
   _update(_typ,'U','udostępniana');
   _update(_typ,'A','archiwalna')
?};
: rodzaj oferty zatrudnienia
{? (_typ:=exec('slo_typ','ext_slo','RP_OFE_R'))<>null
|| _update(_typ,'Z','zewnętrzna');
   _update(_typ,'W','wewnętrzna')
?};
: status uczestnika etapu procesu
{? (_typ:=exec('slo_typ','ext_slo','RP_OSET'))<>null
|| _update(_typ,'O','oczekujący');
   _update(_typ,'N','odrzucony');
   _update(_typ,'R','rezerwowy');
   _update(_typ,'T','zakwalifikowany');
   _update(_typ,'X','rezygnacja');
   _update(_typ,'W','w obiegu wniosku kadrowego');
   _update(_typ,'B','przekazany do systemu Kadry i Płace');
   _update(_typ,'Z','zatrudniony')
?};
: status procesu rekrutacji
{? (_typ:=exec('slo_typ','ext_slo','RP_PROC'))<>null
|| _update(_typ,'P','przygotowywany');
   _update(_typ,'O','oczekujący');
   _update(_typ,'Z','zakończony');
   _update(_typ,'A','aktywny')
?};
: status etapu procesu rekrutacji
{? (_typ:=exec('slo_typ','ext_slo','RP_PRET'))<>null
|| _update(_typ,'O','oczekujący');
   _update(_typ,'Z','zakończony');
   _update(_typ,'A','aktywny')
?};
: status jednorazowego badania opinii
{? (_typ:=exec('slo_typ','ext_slo','ZA_INSTS'))<>null
|| _update(_typ,'A','aktywne');
   _update(_typ,'Z','zakończone')
?};
{? (_typ:=exec('slo_typ','ext_slo','ZA_ZEST'))<>null
|| _update(_typ,'O','ocena');
   _update(_typ,'T','test');
   _update(_typ,'S','sondaż')
?};
: rodzaje pytań dla testu i sondazu
{? (_typ:=exec('slo_typ','ext_slo','ZA_TEST'))<>null
|| _update(_typ,'J','jednokrotnego wyboru');
   _update(_typ,'W','wielokrotnego wyboru');
   _update(_typ,'O','otwarte')
?};

: Miejsca użycia załączników
{? (_typ:=exec('slo_typ','ext_slo','ZAOM'))<>null()
|| _update(_typ,'H_UM','Umowa ze współpracownikiem','T');
   _update(_typ,'H','Przebieg umowy ze współpracownikiem','T');
   _update(_typ,'ZC','Umowa cywilnoprawna','T');
   _update(_typ,'RH','Rachunek do umowy cywilnoprawnej','T');
   _update(_typ,'STAZ','Świadectwo pracy','T');
   _update(_typ,'P_IPOD','Dane podatkowe','T');
   _update(_typ,'PIT12O','Oświadczenie PIT-12','T');
   _update(_typ,'OS_ZNIP','Zagraniczny nr identyfikacyjny podatnika','T');
   _update(_typ,'OS_PAB','Prawa autorskie - koszty i blokady','T');
   _update(_typ,'RD','Rodzina','T');
   _update(_typ,'BDO','Badanie lekarskie','T');
   _update(_typ,'OS_SZKOL','Ukończona szkoła','T');
   _update(_typ,'UPR_ZAWO','Uprawnienie zawodowe','T');
   _update(_typ,'UPR_ZAWZ','Okres zawieszenia uprawnień zawodowych','T');
   _update(_typ,'ZJ','Znajomość języka','T');
   _update(_typ,'KORN','Korekta ZUS','T');
   _update(_typ,'UMLOJN','Umowa lojalnościowa','T');
   _update(_typ,'VAT_DEK','Deklaracje podatkowe','T');
   _update(_typ,'A_RWN','Ruchomy czas pracy','T');
   _update(_typ,'R_ODN','Wniosek o udzielenie czasu wolnego','T');
   _update(_typ,'RD_OKR','Wniosek o urlop rodzicielski','T');
   _update(_typ,'OS_ZWPOD','Oświadczenia-przychód zwolniony od podatku','T');
   _update(_typ,'NWU','Wnioski urlopowe','T');
   _update(_typ,'OS_ZWZAL','Wnioski dotyczące podatków','T');
:: Funckjonalności jeszcze nieprzeniesione z Xpertisa.
::   _update(_typ,'BHP_S','Skierowania na badania','T');
::   _update(_typ,'KZP_P','Pożyczkobiorcy','T');
   {? exec('is_pzd01','ppsf')
   || _update(_typ,'PPSF_PO','Praca zdalna - oświadczenia','T');
      _update(_typ,'PPSF_H','Praca zdalna - uzgodnienia','T');
      ~~
   ?};

   ~~
?};

:: Rozporządzenie Ministra Rodziny, Pracy i Polityki Społecznej z dnia 10 grudnia 2018 r.
:: w sprawie dokumentacji pracowniczej (Dz. U. 2018 poz. 2369).

:: § 3. 2)
{? (_typ:=exec('slo_typ','ext_slo','AktOsobB'))<>null()
|| _update(_typ,'a','Oświadczenia lub dokumenty dotyczące danych osobowych, gromadzone w związku z nawiązaniem '
      'stosunku pracy','T');
   _update(_typ,'b','Umowy o pracę, a jeżeli umowa nie została zawarta z zachowaniem formy pisemnej – potwierdzenie '
      'ustaleń co do stron, rodzaju oraz warunków umowy','T');
   _update(_typ,'c','Zakres czynności / obowiązków, jeżeli pracodawca dodatkowo w tej formie określił zadania '
      'pracownika wynikające z rodzaju pracy','T');
   _update(_typ,'d','Dokumenty dotyczące wykonywania przez pracownika pracy w szczególnych warunkach lub o szczególnym '
      'charakterze  (Dz. U. z 2018 r. poz. 1924)','T');
   _update(_typ,'e','Potwierdzenia zapoznania się przez pracownika z: treścią regulaminu pracy, przepisami oraz '
      'zasadami BHP, zakresem informacji objętych tajemnicą','T');
   _update(_typ,'f','Potwierdzenia poinformowania pracownika o: warunkach zatrudnienia, ich zmiany, celu i zakresie '
      'oraz sposobie zastosowania monitoringu, ...','T');
   _update(_typ,'g','Potwierdzenia otrzymania przez pracownika młodocianego oraz jego przedstawiciela ustawowego '
      'informacji o ryzyku zawodowym (art. 201 § 3 Kp)','T');
   _update(_typ,'h','Dokumenty potwierdzające ukończenie wymaganego szkolenia w zakresie bezpieczeństwa i higieny '
      'pracy','T');
   _update(_typ,'i','Oświadczenia dotyczące wypowiedzenia warunków pracy lub płacy lub zmiany tych warunków w innym '
      'trybie','T');
   _update(_typ,'j','Dokumenty dotyczące powierzenia pracownikowi mienia z obowiązkiem zwrotu albo do wyliczenia się '
      '(art. 124 i art. 125 Kp)','T');
   _update(_typ,'k','Dokumenty związane z podnoszeniem kwalifikacji zawodowych przez pracownika, ze zdobywaniem lub '
      'uzupełnianiem wiedzy i umiejętności','T');
   _update(_typ,'l','Dokumenty związane z przyznaniem pracownikowi nagrody lub wyróżnienia (art. 105 Kp)','T');
   _update(_typ,'m','Dokumenty związane z ubieganiem się i korzystaniem przez pracownika z urlopu: macierzyńskiego, '
      'rodzicielskiego, ojcowskiego lub wychowawczego','T');
   _update(_typ,'n','Dokumenty związane z łączeniem korzystania z urlopu rodzicielskiego z wykonywaniem pracy '
      'u pracodawcy udzielającego tego urlopu','T');
   _update(_typ,'o','Dokumenty związane z obniżeniem wymiaru czasu pracy, w przypadku pracownika uprawnionego do '
      'urlopu wychowawczego (art. 186⁷ Kp)','T');
   _update(_typ,'p','Oświadczenie pracownika będącego rodzicem lub opiekunem dziecka o zamiarze lub o braku zamiaru '
      'korzystania z uprawnień związanych z rodzicielstwem','T');
   _update(_typ,'q','Dokumenty związane z udzielaniem urlopu bezpłatnego (art. 174 i art. 174¹ Kp)','T');
   _update(_typ,'r','Skierowania na badania lekarskie i orzeczenia lekarskie dotyczące wstępnych, okresowych i '
      'kontrolnych badań lekarskich','T');
   _update(_typ,'s','Umowy o zakazie konkurencji, jeżeli strony zawarły taką umowę w okresie pozostawania w stosunku '
      'pracy (art. 101¹ § 1 Kp)','T');
   _update(_typ,'t','Wniosek pracownika o poinformowanie właściwego okręgowego inspektora pracy o zatrudnianiu '
      'pracowników pracujących w nocy (art. 151⁷ § 6 Kp)','T');
   _update(_typ,'u','Dokumenty związane ze współdziałaniem pracodawcy z reprezentującą pracownika zakładową '
      'organizacją związkową','T');
   _update(_typ,'v','Dokumenty dotyczące wykonywania pracy w formie telepracy','T')
?};

:: § 3. 3)
{? (_typ:=exec('slo_typ','ext_slo','AktOsobC'))<>null()
|| _update(_typ,'a','Oświadczenia związane z rozwiązaniem umowy o pracę','T');
   _update(_typ,'b','Wnioski dotyczące wydania, sprostowania lub uzupełnienia świadectwa pracy','T');
   _update(_typ,'c','Dokumenty dotyczące niewypłacenia pracownikowi ekwiwalentu pieniężnego za urlop wypoczynkowy '
      '(art. 171 § 3 Kp)','T');
   _update(_typ,'d','Kopie wydanych świadectw pracy','T');
   _update(_typ,'e','Potwierdzenia dokonania czynności związanych z zajęciem wynagrodzenia za pracę w związku '
      'z prowadzonym postępowaniem egzekucyjnym','T');
   _update(_typ,'f','Umowy o zakazie konkurencji po ustaniu stosunku pracy, jeżeli strony zawarły takie umowy '
      '(art. 101² § 1 Kp)','T');
   _update(_typ,'g','Skierowania i orzeczenia lekarskie badań okresowych - substancje i czynniki rakotwórcze '
      'lub pyły zwłókniające (art. 229 § 5 pkt 2 Kp)','T')
?};

:: § 6. 1)
{? (_typ:=exec('slo_typ','ext_slo','DokP6p1'))<>null()
|| _update(_typ,'a','Ewidencja czasu pracy','T');
   _update(_typ,'b','Wnioski pracownika dotyczące czasu pracy (art. 188, art. 142-144, art. 140¹ § 1, 2)','T');
   _update(_typ,'c','Dokumenty (art. 140 Kodeksu pracy, art. 151³ Kodeksu pracy)','T');
   _update(_typ,'d','Zgody (art. 148 pkt 3 i art. 178 § 2 Kodeksu pracy, art. 178 § 1 Kodeksu pracy)','T')
?};

:: Obrazy firmy
{? (_typ:=exec('slo_typ','ext_slo','TYPBLOBF'))<>null()
|| _update(_typ,'logo','Logo firmy','T');
   _update(_typ,'footer','Logo firmy w stopce','T');
   _update(_typ,'logo_h','Logo firmy - nagłówek wiadomości','T');
   _update(_typ,'logo_f','Logo firmy - stopka wiadomości','T')
?};

:: Dodatkowe informacje
{? (_typ:=exec('slo_typ','ext_slo','P_DODINF'))<>null()
|| _update(_typ,'KONTAKT','Informacje kontaktowe (wewnątrz firmy)','T')
?};

:: Rodzaje płatników
{? (_typ:=exec('slo_typ','ext_slo','RODZ_PL'))<>null()
|| _update(_typ,'UM_PRAC','Art. 32. – stosunek pracy','T');
   _update(_typ,'UM_ZLEC','Art. 41. - umowy cywilnoprawne','T');
   _update(_typ,'UM_SZKOL','Art. 35. - praktyka absolwencka lub staż uczniowski','T')
?};

:: Rodzaj badania trzeźwości
{? (_typ:=exec('slo_typ','ext_slo','KOT_RODZ'))<>null()
|| _update(_typ,'ALKO','Obecność alkoholu','T');
   _update(_typ,'NARKO','Obecność innych substancji','T')
?};

:: Stan trzeźwości
{? (_typ:=exec('slo_typ','ext_slo','KOTLIMIT'))<>null()
|| _update(_typ,'TRZEŹWY','Pracownik trzeźwy','T');
   _update(_typ,'UŻYCIE','Pracownik w stanie po użyciu alkoholu','T');
   _update(_typ,'NIETRZ.','Pracownik w stanie nietrzeźwości','T');
   _update(_typ,'TAK_INNA','Pracownik po użyciu innej substancji niż alkohol','T');
   _update(_typ,'NIE_INNA','Brak śladów użycia innych substancji niż alkohol','T')
?};

:: Oświadczenia wniosków o urlop opiekuńczy
{? (_typ:=exec('slo_typ','ext_slo','NWOPO'))<>null()
|| _update(_typ,'NIESP','osoba niebędąca członkiem rodziny','T');
   _update(_typ,'SYN','syn','T');
   _update(_typ,'CORKA','córka','T');
   _update(_typ,'MATKA','matka','T');
   _update(_typ,'OJCIEC','ojciec','T');
   _update(_typ,'MALZONEK','małżonek','T')
?};

SLO_KOD.cntx_pop()


\add_diet_zagr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.10]
:: OPIS: Dodawanie rekordu do tabeli ze stawkami diet zagranicznych
::   WE: _a = nazwa kraju, _b = symbol waluty, _c = dieta, _d = ryczalt a nocleg
::  OLD: \add_diet_zagr/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? KRAJE.find_key(_a) & KRAJE.NAZ=_a & WAL.find_key(_b)
|| DIETZAGR.KRAJ:=KRAJE.ref();
   DIETZAGR.WAL:=WAL.ref();
   DIETZAGR.STAWKA:=_c;
   DIETZAGR.RYCZ_NOC:=_d;
   DIETZAGR.add(1)
?}


\diet_zagr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Uzupełnienie tabeli stawek dla diet zagranicznych
::----------------------------------------------------------------------------------------------------------------------
DIETZAGR.index('OD');
DIETZAGR.prefix(date(2013,1,29));
KRAJE.index('NAZ'); KRAJE.prefix();
WAL.index('WAL_SYM'); WAL.prefix();
DIETZAGR.blank(1);
DIETZAGR.OD:=date(2013,1,29);
exec('add_diet_zagr','dane_startowe','Afganistan','EUR',47,140);
exec('add_diet_zagr','dane_startowe','Albania','EUR',41,120);
exec('add_diet_zagr','dane_startowe','Algieria','EUR',50,200);
exec('add_diet_zagr','dane_startowe','Andora','EUR',50,160);
exec('add_diet_zagr','dane_startowe','Angola','USD',61,180);
exec('add_diet_zagr','dane_startowe','Arabia Saudyjska','EUR',45,180);
exec('add_diet_zagr','dane_startowe','Argentyna','USD',50,150);
exec('add_diet_zagr','dane_startowe','Armenia','EUR',42,145);
exec('add_diet_zagr','dane_startowe','Australia','AUD',88,250);
exec('add_diet_zagr','dane_startowe','Austria','EUR',52,130);
exec('add_diet_zagr','dane_startowe','Azerbejdżan','EUR',43,150);
exec('add_diet_zagr','dane_startowe','Bangladesz','USD',50,120);
exec('add_diet_zagr','dane_startowe','Belgia','EUR',48,160);
exec('add_diet_zagr','dane_startowe','Białoruś','EUR',42,130);
exec('add_diet_zagr','dane_startowe','Bośnia i Hercegowina','EUR',41,100);
exec('add_diet_zagr','dane_startowe','Brazylia','EUR',43,120);
exec('add_diet_zagr','dane_startowe','Bułgaria','EUR',40,120);
exec('add_diet_zagr','dane_startowe','Chile','USD',60,120);
exec('add_diet_zagr','dane_startowe','Chiny','EUR',55,170);
exec('add_diet_zagr','dane_startowe','Chorwacja','EUR',42,125);
exec('add_diet_zagr','dane_startowe','Cypr','EUR',43,160);
exec('add_diet_zagr','dane_startowe','Czechy','EUR',41,120);
exec('add_diet_zagr','dane_startowe','Dania','DKK',406,1300);
exec('add_diet_zagr','dane_startowe','Egipt','USD',55,150);
exec('add_diet_zagr','dane_startowe','Ekwador','USD',44,110);
exec('add_diet_zagr','dane_startowe','Estonia','EUR',41,100);
exec('add_diet_zagr','dane_startowe','Etiopia','USD',55,300);
exec('add_diet_zagr','dane_startowe','Finlandia','EUR',48,160);
exec('add_diet_zagr','dane_startowe','Francja','EUR',50,180);
exec('add_diet_zagr','dane_startowe','Grecja','EUR',48,140);
exec('add_diet_zagr','dane_startowe','Gruzja','EUR',43,140);
exec('add_diet_zagr','dane_startowe','Hiszpania','EUR',50,160);
exec('add_diet_zagr','dane_startowe','Indie','EUR',38,190);
exec('add_diet_zagr','dane_startowe','Indonezja','USD',60,120);
exec('add_diet_zagr','dane_startowe','Irak','USD',60,120);
exec('add_diet_zagr','dane_startowe','Iran','EUR',41,95);
exec('add_diet_zagr','dane_startowe','Irlandia','EUR',52,160);
exec('add_diet_zagr','dane_startowe','Islandia','EUR',56,160);
exec('add_diet_zagr','dane_startowe','Izrael','EUR',50,160);
exec('add_diet_zagr','dane_startowe','Japonia','YPY',7532,22000);
exec('add_diet_zagr','dane_startowe','Jemen','USD',48,160);
exec('add_diet_zagr','dane_startowe','Jordania','EUR',40,95);
exec('add_diet_zagr','dane_startowe','Kambodża','USD',45,100);
exec('add_diet_zagr','dane_startowe','Kanada','CAD',71,190);
exec('add_diet_zagr','dane_startowe','Kazachstan','EUR',41,140);
exec('add_diet_zagr','dane_startowe','Kenia','EUR',41,150);
exec('add_diet_zagr','dane_startowe','Kirgistan','USD',41,150);
exec('add_diet_zagr','dane_startowe','Kolumbia','USD',49,120);
exec('add_diet_zagr','dane_startowe','Kongo Republika Demokratyczna','USD',66,220);
exec('add_diet_zagr','dane_startowe','Korea Południowa','EUR',46,170);
exec('add_diet_zagr','dane_startowe','Koreańska Republika Ludowo-Demokratyczna','EUR',48,170);
exec('add_diet_zagr','dane_startowe','Kostaryka','USD',50,140);
exec('add_diet_zagr','dane_startowe','Kuba','EUR',42,110);
exec('add_diet_zagr','dane_startowe','Kuwejt','EUR',39,200);
exec('add_diet_zagr','dane_startowe','Laos','USD',54,100);
exec('add_diet_zagr','dane_startowe','Liban','USD',57,150);
exec('add_diet_zagr','dane_startowe','Libia','EUR',39,80);
exec('add_diet_zagr','dane_startowe','Liechtenstein','CHF',88,200);
exec('add_diet_zagr','dane_startowe','Litwa','EUR',39,130);
exec('add_diet_zagr','dane_startowe','Luksemburg','EUR',48,160);
exec('add_diet_zagr','dane_startowe','Łotwa','EUR',57,132);
exec('add_diet_zagr','dane_startowe','Macedonia','EUR',39,125);
exec('add_diet_zagr','dane_startowe','Malezja','EUR',41,140);
exec('add_diet_zagr','dane_startowe','Malta','EUR',43,180);
exec('add_diet_zagr','dane_startowe','Maroko','EUR',41,140);
exec('add_diet_zagr','dane_startowe','Meksyk','USD',53,140);
exec('add_diet_zagr','dane_startowe','Mołdowa','EUR',41,85);
exec('add_diet_zagr','dane_startowe','Monako','EUR',50,180);
exec('add_diet_zagr','dane_startowe','Mongolia','EUR',45,140);
exec('add_diet_zagr','dane_startowe','Niderlandy','EUR',50,130);
exec('add_diet_zagr','dane_startowe','Niemcy','EUR',49,150);
exec('add_diet_zagr','dane_startowe','Nigeria','EUR',46,240);
exec('add_diet_zagr','dane_startowe','Norwegia','NOK',451,1500);
exec('add_diet_zagr','dane_startowe','Nowa Zelandia','USD',58,180);
exec('add_diet_zagr','dane_startowe','Pakistan','USD',38,200);
exec('add_diet_zagr','dane_startowe','Palestyńska Władza Narodowa','EUR',50,160);
exec('add_diet_zagr','dane_startowe','Panama','USD',52,140);
exec('add_diet_zagr','dane_startowe','Peru','USD',50,150);
exec('add_diet_zagr','dane_startowe','Portugalia','EUR',49,120);
exec('add_diet_zagr','dane_startowe','Republika Południowej Afryki','USD',52,275);
exec('add_diet_zagr','dane_startowe','Rosja','EUR',48,200);
exec('add_diet_zagr','dane_startowe','Rumunia','EUR',38,100);
exec('add_diet_zagr','dane_startowe','San Marino','EUR',48,174);
exec('add_diet_zagr','dane_startowe','Senegal','EUR',44,120);
exec('add_diet_zagr','dane_startowe','Serbia i Czarnogóra','EUR',40,100);
exec('add_diet_zagr','dane_startowe','Singapur','USD',56,230);
exec('add_diet_zagr','dane_startowe','Słowacja','EUR',43,120);
exec('add_diet_zagr','dane_startowe','Słowenia','EUR',41,130);
exec('add_diet_zagr','dane_startowe','Stany Zjednoczone Ameryki (USA)','USD',59,200);
exec('add_diet_zagr','dane_startowe','Syria','USD',50,150);
exec('add_diet_zagr','dane_startowe','Szwajcaria','CHF',88,200);
exec('add_diet_zagr','dane_startowe','Szwecja','SEK',459,1800);
exec('add_diet_zagr','dane_startowe','Tadżykistan','EUR',41,140);
exec('add_diet_zagr','dane_startowe','Tajlandia','USD',42,110);
exec('add_diet_zagr','dane_startowe','Tanzania','USD',53,150);
exec('add_diet_zagr','dane_startowe','Tunezja','EUR',37,100);
exec('add_diet_zagr','dane_startowe','Turcja','USD',53,173);
exec('add_diet_zagr','dane_startowe','Turkmenistan','EUR',47,90);
exec('add_diet_zagr','dane_startowe','Ukraina','EUR',41,180);
exec('add_diet_zagr','dane_startowe','Urugwaj','USD',50,80);
exec('add_diet_zagr','dane_startowe','Uzbekistan','EUR',41,140);
exec('add_diet_zagr','dane_startowe','Wenezuela','USD',60,120);
exec('add_diet_zagr','dane_startowe','Węgry','EUR',44,130);
exec('add_diet_zagr','dane_startowe','Wielka Brytania','GBP',35,200);
exec('add_diet_zagr','dane_startowe','Wietnam','USD',53,160);
exec('add_diet_zagr','dane_startowe','Włochy','EUR',48,174);
exec('add_diet_zagr','dane_startowe','Wybrzeże Kości Słoniowej','EUR',33,100);
exec('add_diet_zagr','dane_startowe','Zimbabwe','EUR',39,90);
exec('add_diet_zagr','dane_startowe','Zjednoczone Emiraty Arabskie','EUR',39,200)


\init_deleg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Parametry delegacji i diet
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,XINFO,'DIETA','RYCZ_NOC','RYCZ_KOM','SNIAD','OBIAD','KOLACJA','ZRYCZKOM',
     'ZSNIAD','ZOBIAD','ZKOLACJA','PRC_NOCL');
_zmiana:=0;
{? XINFO.DIETA=0 || XINFO.DIETA:=30; _zmiana:=1 ?};
{? XINFO.RYCZ_NOC=0 || XINFO.RYCZ_NOC:=150; _zmiana:=1 ?};
{? XINFO.RYCZ_KOM=0 || XINFO.RYCZ_KOM:=20; _zmiana:=1 ?};
{? XINFO.SNIAD=0 || XINFO.SNIAD:=25; _zmiana:=1 ?};
{? XINFO.OBIAD=0 || XINFO.OBIAD:=50; _zmiana:=1 ?};
{? XINFO.KOLACJA=0 || XINFO.KOLACJA:=25; _zmiana:=1 ?};
{? XINFO.ZRYCZKOM=0 || XINFO.ZRYCZKOM:=10; _zmiana:=1 ?};
{? XINFO.ZSNIAD=0 || XINFO.ZSNIAD:=15; _zmiana:=1 ?};
{? XINFO.ZOBIAD=0 || XINFO.ZOBIAD:=30; _zmiana:=1 ?};
{? XINFO.ZKOLACJA=0 || XINFO.ZKOLACJA:=30; _zmiana:=1 ?};
{? XINFO.PRC_NOCL=0 || XINFO.PRC_NOCL:=25; _zmiana:=1 ?};
{? _zmiana=1
|| exec('zapisz','#stalesys',date(),XINFO,'DIETA','RYCZ_NOC','RYCZ_KOM','SNIAD','OBIAD','KOLACJA','ZRYCZKOM',
        'ZSNIAD','ZOBIAD','ZKOLACJA','PRC_NOCL')
?}


\innesrtr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Tabela innych srodkow transportu
::----------------------------------------------------------------------------------------------------------------------
INNESRTR.index('NAZWA');
INNESRTR.prefix();
{? ~INNESRTR.first()
|| INNESRTR.NAZWA:='Samolot';
   INNESRTR.add(1);
   INNESRTR.NAZWA:='Pociąg';
   INNESRTR.add(1);
   INNESRTR.NAZWA:='Prom';
   INNESRTR.add(1)
?}


\samdelty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Tabele rodzajow pojazdow i stawek za 1 km przebiegu do delegacji
::----------------------------------------------------------------------------------------------------------------------
SAMDELTY.index('RODZAJ');
SAMDELTY.prefix();
SAMDELTY.RODZAJ:='OSOBOWY_DO_900';
SAMDELTY.OPIS:='Dla sam. osob. z silnikiem o poj. skok. do 900 cm3';
SAMDELTY.add(1);
SAMDELTY.RODZAJ:='OSOBOWY_POW_900';
SAMDELTY.OPIS:='Dla sam. osob. z silnikiem o poj. skok. > 900 cm3';
SAMDELTY.add(1);
SAMDELTY.RODZAJ:='MOTOCYKL';
SAMDELTY.OPIS:='Dla motocykla';
SAMDELTY.add(1);
SAMDELTY.RODZAJ:='MOTOROWER';
SAMDELTY.OPIS:='Dla motoroweru';
SAMDELTY.add(1);
SAMDELEG.index('RODZAJ');
SAMDELEG.prefix();
{? SAMDELTY.find_key('OSOBOWY_DO_900','OSOBOWY_DO_900')
|| SAMDELEG.RODZAJ:=SAMDELTY.ref();
   SAMDELEG.STAWKA:=0.5214;
   SAMDELEG.DATA:=date(2007,11,14);
   SAMDELEG.add(1)
?};
{? SAMDELTY.find_key('OSOBOWY_POW_900','OSOBOWY_POW_900')
|| SAMDELEG.RODZAJ:=SAMDELTY.ref();
   SAMDELEG.STAWKA:=0.8358;
   SAMDELEG.DATA:=date(2007,11,14);
   SAMDELEG.add(1)
?};
{? SAMDELTY.find_key('MOTOCYKL','MOTOCYKL')
|| SAMDELEG.RODZAJ:=SAMDELTY.ref();
   SAMDELEG.STAWKA:=0.2302;
   SAMDELEG.DATA:=date(2007,11,14);
   SAMDELEG.add(1)
?};
{? SAMDELTY.find_key('MOTOROWER','MOTOROWER')
|| SAMDELEG.RODZAJ:=SAMDELTY.ref();
   SAMDELEG.STAWKA:=0.1382;
   SAMDELEG.DATA:=date(2007,11,14);
   SAMDELEG.add(1)
?}


\h_zm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Uzupełnienie słownika H_ZM przy starcie zerowym programu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_add:="H_ZM.KZ:=_a;
       H_ZM.R:=_b;
       H_ZM.add(1)";

H_ZM.prefix();
{? H_ZM.size()<4
|| _add('Z','przeszeregowanie itp');
   _add('W','urlop wychowawczy');
   _add('O','służba wojskowa');
   _add('B','urlop bezpłatny')
?};
~~


\rodzaj_szkolenia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Uzupełnienie słownika rodzajów szkolenia przy starcie zerowym
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SLO_TYP.index('SYMBOL');
SLO_TYP.prefix('SZK_RODZ',);
{? SLO_TYP.first()
|| exec('kod_ref','ext_slo',SLO_TYP.ref(),'W','wewnętrzne');
   exec('kod_ref','ext_slo',SLO_TYP.ref(),'Z','zewnętrzne')
|| SLO_TYP.SYMBOL:='SZK_RODZ';
   SLO_TYP.OPIS:='Rodzaj szkolenia';
   SLO_TYP.DL_KOD:=SLO_TYP.DL_NAZ:=0;
   {? SLO_TYP.add(1)
   || exec('kod_ref','ext_slo',SLO_TYP.ref(),'W','wewnętrzne');
      exec('kod_ref','ext_slo',SLO_TYP.ref(),'Z','zewnętrzne')
   ?}
?};
~~


\formula_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuły uniwersalne.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FORMULA.cntx_psh();
FORMULA.index('FORMULA4');

_add:="
   FORMULA.prefix(_a,_b,);
   {? ~FORMULA.first()
   || FORMULA.blank(1);
      FORMULA.RODZAJ:=_a;
      FORMULA.SKROT:=_b;
      FORMULA.NAZWA:=_c;
      FORMULA.FORMULA:=_d;
      FORMULA.add()
   ?}
";

:: Formuły do ustalenia podstawy dodatków (H.S2, H.S3)
_add('P','HS1','płacy zasadniczej','H.S1');
_add('P','NK','minimalnego wynagrodzenia za pracę',
   '_val:=KST.NK; exec(\'czytaj\',\'#stalesys\',_a,KST,\'NK\'); _val==KST.NK');
_add('P','PRZWYN','przeciętnego wynagrodzenia',
   '_val:=KST.PRZWYN; exec(\'czytaj\',\'#stalesys\',_a,KST,\'PRZWYN\'); _val==KST.PRZWYN');
_add('P','SK','kw. ogr. rocznej podst. wym. skł. na ubezp. emeryt. i rent.',
   '_val:=KST.SK; exec(\'czytaj\',\'#stalesys\',_a,KST,\'SK\'); _val==KST.SK');

:: Formuły do wyznaczania konta kosztów na podstawie projektu
_add('Q','PROJKK','Wyznaczanie konta kosztów do godzin pracy na podstawie projektu',
   'exec(\'kk_wg_projektu\',\'%personel\',_a,_b,_c)');

:: Formuły odczytu danych z czytników RCP od różnych dostawców
_add('X','HSKDATA','Import danych z czytników HSK DATA','exec(\'hskdata\',\'%personel\',_a)');
_add('X','KFAP','Import danych z czytników KFAP','exec(\'kfap\',\'%personel\',_a)');
_add('X','UNICARD','Import danych z czytników UNICARD','exec(\'unicard\',\'%personel\',_a)');
FORMULA.cntx_pop();

~~


\kt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Typy list płac.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dod_f_zatr','f_zatr');
exec('__F_ZATR','object');

_add:="
   {? KT.find_key(_a)
   || return()
   ?};
   KT.blank();
   KT.T:=_a;
   KT.N:=_b;
   KT.K:=_c;
   KT.F:=_d;
   KT.L:=_e;
   KT.KA:=_f;
   KT.F_ZATR:=_g;
   KT.ZC:=_h;
   KT.add()
";

_f_zatr:=__F_ZATR.find('P');
_kal_nazw:=exec('standard_ref','kalendarz');

KT.cntx_psh();
KT.index('KRYTERIA');
KT.prefix(exec('ref_firma','ustawienia'));

: Symbol, Opis, Kryterium, Formuły, Listy do obliczeń, Kalendarz, Forma współpracy, Umowy-zlecenia
_add('UMY','umysłowi','exec(\'czy_prac\',\'lista_plac\')','U','*',_kal_nazw,_f_zatr,'N');
_add('FIZ','fizyczni','exec(\'czy_prac\',\'lista_plac\')','F','*',_kal_nazw,_f_zatr,'N');
: funkcjonalne
_add('DOD','lista dodatkowa','','D','*',_kal_nazw,_f_zatr,'N');
_add('ZXX','dla rozliczeń z ZUS','','Z','*',_kal_nazw,_f_zatr,'N');
: zbiorówki
_add('SUM','sumacyjna miesięczna','','S','*',_kal_nazw,_f_zatr,'N');
_add('KWA','sumacyjna kwartalna','','S','*',_kal_nazw,_f_zatr,'N');
_add('POL','sumacyjna półroczna','','S','*',_kal_nazw,_f_zatr,'N');
_add('ROK','sumacyjna roczna','','S','*',_kal_nazw,_f_zatr,'N');
: zlecenia
_f_zatr:=__F_ZATR.find('Z');
_add('ZLC','umowy cywilnoprawne','exec(\'czy_zlec\',\'lista_plac\')','R','*',_kal_nazw,_f_zatr,'T');

KT.cntx_pop();

~~


\kart_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Kartoteki dodatkowe.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_add:="exec('kart_def','kart_dod',_a)";

_add('DOD_KWAL');
_add('FP_FGSP');
_add('KART_NIP');
_add('PODW_MAC');
_add('WYR_KAR');
_add('SZKOLBHP');
_add('PODW_OCH');
_add('WYR_TARC');
~~


\kom_rp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Rodzaje potrąceń komorniczych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
KOM_RP.cntx_psh();
KOM_RP.index('KOM_RP');
KOM_RP.prefix();
R.cntx_psh();
R.index('RUBKOD');
R.prefix();

_add:=
::----------------------------------------------------------------------------------------------------------------------
::   WE:  _a  [NUMBER] - Numer rubryki płacowej.
::       [_b] [STRING] - Nazwa potrącenia [domyślnia: nazwa rubryki].
::       [_c] [NUMBER] - Priorytet [domyślnie: 0].
::       [_d] [STRING] - Napis interpretowany jako formuła na wartość potrącenia [domyślnie: ''].
::       [_e] [NUMBER] - Wolny od potrącenia % wynagrodzenia zasadniczego [domyślnie: 0].
::       [_f] [NUMBER] - Wolny od potrącenia % minimalnego wynagrodzenia [domyślnie: 0].
::       [_g] [STRING] - Czy potrącenie jest zaliczką [domyślnie: 'N'].
::       [_h] [NUMBER] - Wolny od potrącenia % zasiłku [domyślnie: 0].
::       [_i] [NUMBER] - Wolny od potrącenia % najniższej emerytury [domyślnie: 0].
::       [_j] [STRING] - Czy potrącenie jest związane z alimentami [domyślnie: 'N'].
::       [_k] [STRING] - Czy potrącenie inne niewystępujące w KP [domyślnie: 'N'].
::----------------------------------------------------------------------------------------------------------------------

   "  {? R.find_key(_a)
      || _nazwa:={? var_pres('_b')=type_of('') || _b || R.RT ?};
         {? ~KOM_RP.find_key(_nazwa,R.ref())
         || KOM_RP.blank(1);
            KOM_RP.R:=R.ref();
            KOM_RP.N:=_nazwa;
            KOM_RP.P:={? var_pres('_c')=type_of(0) || _c || 0 ?};
            KOM_RP.F:={? var_pres('_d')=type_of('') || _d || '' ?};
            KOM_RP.PROC:={? var_pres('_e')=type_of(0) || _e || 0 ?};
            KOM_RP.MIN:={? var_pres('_f')=type_of(0) || _f || 0 ?};
            KOM_RP.ZAL:={? var_pres('_g')=type_of('') || _g || 'N' ?};
            KOM_RP.ZUS:={? var_pres('_h')=type_of(0) || _h || 0 ?};
            KOM_RP.EMER:={? var_pres('_i')=type_of(0) || _i || 0 ?};
            KOM_RP.ALIMENTY:={? var_pres('_j')=type_of('') || _j || 'N' ?};
            KOM_RP.INNE:={? var_pres('_k')=type_of('') || _k || 'N' ?};
            KOM_RP.add()
         ?}
      ?}
   ";

_add(#__RUB.sys_sql(21111),'Alimenty',1,,40,,'N',40,50,'T');
_add(#__RUB.sys_sql(21112),'Komornik',2,,50,100,'N',75,75);
_add(827,'Potrącenie zaliczki',3,,50,75,'T',75,60);
:: Kod związany z obsługą modułu Pożyczki (w niedalekiej przyszłości).
::_add(811,,3,,50,75,'T',75,60)
_add(7066,'Potrącenie - pojazdy',4,,50,75,'N',75,60,,'T');
_add(7067,'Potrącenie - SIM',4,,50,75,'N',75,75,,'T');

R.cntx_pop();
KOM_RP.cntx_pop();
~~


\tzl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Inicjacja typów przelewów (zleceń)
::----------------------------------------------------------------------------------------------------------------------
TZL.cntx_psh();
TZL.index('KOD'); TZL.prefix();
{? ~TZL.first()
|| _fun:="TZL.KOD:=_a; TZL.OPIS:=_b; TZL.add()";
   _fun('FKS: Rozrachunki','Przelewy do rozrachunków');
   _fun('FKS: Zaliczki','Przelewy z zaliczek pracowniczych');
   _fun('HBN: Prosty','Przelewy jednorazowe');
   _fun('HBN: US','Przelewy jednorazowe dla US/UC');
   _fun('HBN: ZUS','Przelewy jednorazowe dla ZUS');
   _fun('PPL: Komornik','Przelewy z płac potrąceń komorniczych');
   _fun('PPL: Płace','Przelewy z płac dla pracowników');
   _fun('PPL: PPK','Przelewy wpłat na PPK');
   _fun('PPL: Umowy','Przelewy z umów zleceń dla zleceniobiorców');
   _fun('PPL: US','Przelewy z płac dla US');
   _fun('PPL: ZUS','Przelewy z płac dla ZUS');
   _fun('PPL: ZUS_FEP','Przelewy z płac dla ZUS: FEP');
   _fun('PPL: ZUS_FPFG','Przelewy z płac dla ZUS: FP i FGSP');
   _fun('PPL: ZUS_U_SP','Przelewy z płac dla ZUS: ubezp. społ.');
   _fun('PPL: ZUS_U_ZD','Przelewy z płac dla ZUS: ubezp. zdrow.');
:: _fun('WSZYSTKIE','Wszystkie przelewy');
   ~~
?};
TZL.cntx_pop()


\cp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Charakter pracy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
CP.cntx_psh();
CP.index('CHARPRAC');
CP.prefix();

:: Parametry: _a=R, _b=S, _c=O.
_add:="
   {? ~(_put:=CP.find_key(_a,_b,))
   || CP.blank();
      CP.R:=_a;
      CP.S:=_b
   ?};
   _zmiana:=0;
   {? CP.O<>_c
   || CP.O:=_c;
      _zmiana+=1
   ?};
   {? CP.CP<>(_cp:='%1/%2' [CP.R,CP.S])
   || CP.CP:=_cp;
      _zmiana+=1
   ?};
   {? _put
   || {? _zmiana
      || CP.put()
      ?}
   || CP.add()
   ?}
";

_add('FIZ','UMY','Pracownik fizyczny rozliczany ryczałtowo');
_add('UMY','FIZ','Pracownik umysłowy rozliczany godzinowo');
_add('FIZ','FIZ','Pracownik fizyczny rozliczany godzinowo');
_add('UMY','UMY','Pracownik umysłowy rozliczany ryczałtowo');

CP.cntx_pop();
~~


\zal_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.14]
:: OPIS: Komentarze podczas pobierania załączników
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: komentarz dla załącznika typu "infomracja podatkowa"
_slo_naz:=null();
_slo_typ:=exec('slo_typ','ext_slo','ZAL');

{? _slo_typ<>null()
||
:: wyszukanie rekordu w SLO_NAZ dla załączników z typem 'Informacje podatkowe'
   SLO_NAZ.cntx_psh();
   SLO_NAZ.index('NAZWA');
   SLO_NAZ.prefix(_slo_typ);
   {? SLO_NAZ.first()
   || _dalej:=1;
      {!
      |? {? (-SLO_NAZ.NAZWA)*'informacje podatkowe'
         || _dalej:=0;
            _slo_naz:=SLO_NAZ.ref()
         ?};
         _dalej & SLO_NAZ.next()
      !}
   ?};
   SLO_NAZ.cntx_pop();

   {? _slo_naz<>null()
   || ZAL_KOM.cntx_psh();
      ZAL_KOM.index('TYP');
      ZAL_KOM.prefix(_slo_naz);
      {? ~ZAL_KOM.first()
      || ZAL_KOM.TYP_ZAL:=_slo_naz;
         ZAL_KOM.CZW:='J';
         ZAL_KOM.CZR:='Z';
         _text:='Pobranie informacji podatkowej na dysk jest jednoznaczne'
                ' z potwierdzeniem otrzymania informacji/deklaracji podatkowej.'+'\n'+
                'Na podstawie Art. 39. 1 ustawy z dnia 26 lipca 1991 r. o podatku dochodowym od osób fizycznych.';
         ZAL_KOM.memo_set(_text,'TEXT');
         {? ZAL_KOM.add()
         || _ok:=ZAL_KOM.memo_put()
         ?}
      ?};
      ZAL_KOM.cntx_pop()
   ?}
?};
~~


\r_klkw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.28]
:: OPIS: Uzupełnienie tabeli R_KLKW
::   WE:
::   WY:
::  OLD: \r_klkwal/nowedane.fml
::----------------------------------------------------------------------------------------------------------------------
R_KLKW.cntx_psh();
R_KLKW.index('R_KLKW');
R_KLKW.prefix();
{? ~R_KLKW.find_key('status',)
|| R_KLKW.O:='status';
   R_KLKW.add()
?};
{? ~KST.R_KW
|| KST.R_KW:=R_KLKW.ref();
   exec('zapisz','#stalesys',date(),KST,'R_KW')
?};
{? ~R_KLKW.find_key('tryb+mod',)
|| R_KLKW.O:='tryb+mod';
   R_KLKW.add()
?};
R_KLKW.cntx_pop();
~~


\r_opczyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.28]
:: OPIS: Uzupełnienie tabeli R_OPCZYT - czytniki.
::   WE:
::   WY:
::  OLD: \links/links.fml
::----------------------------------------------------------------------------------------------------------------------
R_OPCZYT.cntx_psh();
R_OPCZYT.index('R_OPCZYS');
R_OPCZYT.prefix();
_czyt:=
   "  {? ~R_OPCZYT.find_key(_a,'<SYSTEM>')
      || R_OPCZYT.SYMBOL:='<SYSTEM>';
         R_OPCZYT.K:=_a;
         R_OPCZYT.O:=_b;
         R_OPCZYT.PORTAL:=R_OPCZYT.SL:='T';
         R_OPCZYT.add(1)
      ?}
   ";
_czyt('SYS_1','PORTAL');
_czyt('SYS_2','AUTO_KALEND');
_czyt('SYS_3','EXCEL');
_czyt('SYS_4','RĘCZNIE');
_czyt('SYS_5','POZA SIEDZIBĄ');
R_OPCZYT.cntx_pop();
~~


\r_wewy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.42]
:: OPIS: Uzupełnienie tabeli R_WEWY - wejścia i wyjścia.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_add:=
   "  R_WEWY.blank();
      R_WEWY.ST:=_a;
      R_WEWY.TP:=_b;
      R_WEWY.RD:=_c;
      R_WEWY.MD:=_d;
      R_WEWY.TR:=_e;
      R_WEWY.SYSTEM:='T';
      R_WEWY.add()
   ";

R_WEWY.cntx_psh();
R_WEWY.prefix();
{? ~R_WEWY.first()
|| _add(2,'WEJŚCIE','normalne',0,0);
   _add(3,'WYJŚCIE','normalne',0,1);
   _add(4,'WEJŚCIE','służbowe',1,0);
   _add(5,'WYJŚCIE','służbowe',1,1)
?};
R_WEWY.cntx_pop();
~~


\r_czyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.42]
:: OPIS: Uzupełnienie tabeli R_CZYT - dostawcy czytników.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_add:=
   "  R_CZYT.blank();
      R_CZYT.N:=_a;
      R_CZYT.C:=_b;
      R_KLKW.cntx_psh();
      R_KLKW.index('R_KLKW');
      R_KLKW.prefix(_c,);
      {? R_KLKW.first()
      || R_CZYT.K:=R_KLKW.ref()
      ?};
      R_KLKW.cntx_pop();
      FORMULA.cntx_psh();
      FORMULA.index('FORMULA4');
      FORMULA.prefix('X',_d);
      {? FORMULA.first()
      || R_CZYT.FORMULA:=FORMULA.ref()
      ?};
      FORMULA.cntx_pop();
      R_CZYT.P:=_e;
      R_CZYT.add()
   ";

R_CZYT.cntx_psh();
R_CZYT.prefix();
{? ~R_CZYT.first()
|| _add('HSK DATA','RCP 2000','status','HSKDATA','rcptmp.fil');
   _add('KFAP S.A.','KFAP','tryb+mod','KFAP','rcp.txt');
   _add('UNICARD','KOMIKO','tryb+mod','UNICARD','rejestr.rej')
?};
R_CZYT.cntx_pop();
~~


\R_ZMIANY
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc 18.02
:: OPIS: Wczytanie definicji pracy zmianowej. Import danych z pliku tekstowego do tabeli.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
R_ZMIANY.clear();
{? ~R_ZMIANY.size()
|| exec('zmiany_domyslne','prc_zmiany')
?};
~~


\A_SCP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.02]
:: OPIS: Dodanie podstawowego systemu czasu pracy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
A_SCP.cntx_psh();
A_SCP.prefix();
{? ~A_SCP.first()
|| A_SCP.blank(1);
   A_SCP.NAZ:='podstawowy';
   A_SCP.ND:=time(8,0,0);
   A_SCP.NST:=time(40,0,0);
   A_SCP.OD:=time(11,0,0);
   A_SCP.OT:=time(35,0,0);
   A_SCP.DOM:='T';
   A_SCP.add()
?};
A_SCP.cntx_pop()


\za_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Typy ankiet
::   WE:
::   WY:
::  OLD: \init_sys/zz_data.fml
::----------------------------------------------------------------------------------------------------------------------
ZA_TYP.clear;
ZA_TYP.index('SYMBOL');
_add:="
   {? ~ZA_TYP.find_key(_a,_b,_b)
   || ZA_TYP.blank(1);
      ZA_TYP.ZA_TYP:=_a;
      ZA_TYP.SYMBOL:=_b;
      ZA_TYP.OPIS:=_c;
      ZA_TYP.SYSTEM:=_d;
      ZA_TYP.add()
   |? ZA_TYP.SYSTEM<>_d
   || ZA_TYP.SYSTEM:=_d;
      ZA_TYP.put
   ?};
   ZA_TYP.ref
";
_set:="
   {? ZA_TYP.memo_txt(,1,_a)<>_b
   || ZA_TYP.memo_set(_b,_a);
      ZA_TYP.memo_put(,_a)
   ?}
";
: szkolenia
_ref1:=_add(0,'SZK_OPIS','Szkolenia','T');
: po szkoleniu
_ref2:=_add(_ref1,'PO','po szkoleniu','T');
_szk_joins:=
   'join ZA_ZEST using (ZA_TEST.ZA_ZEST,ZA_ZEST.REFERENCE) '+
   'join SZK_OPIS using (ZA_ZEST.ZZ_LINK,SZK_OPIS.ZZ_DOK)';
_szk_where:=
   'SZK_OPIS.REFERENCE=:_a';
: egzamin po szkoleniu
_add(_ref1,'ES','egzamin po szkoleniu','T');
: ocena szkolenia
{? _add(_ref2,'SZK','szkolenie','T')
|| _set('FORMULA',
      'SZK_OPIS.index(\'ZZ_DOK\');'+
      '{? ~SZK_OPIS.find_key(ref_name(ZA_ZEST.ZZ_LINK),ZA_ZEST.ZZ_LINK) || return(null) ?};'+
      '_a.table:=\'SZK_OPIS\';_a.field:=\'ZZ_OCENA\';_a.ref:=SZK_OPIS.ref');
   _set('F_JOINS',_szk_joins);
   _set('F_WHERE',_szk_where)
?};
: ocena merytoryki
{? _add(_ref2,'MER','merytoryka','T')
|| _set('FORMULA',
      'SZK_OPIS.index(\'ZZ_DOK\');'+
      '{? ~SZK_OPIS.find_key(ref_name(ZA_ZEST.ZZ_LINK),ZA_ZEST.ZZ_LINK) || return(null) ?};'+
      '_a.table:=\'SZK_OPIS\';_a.field:=\'OC_MER\';_a.ref:=SZK_OPIS.ref');
   _set('F_JOINS',_szk_joins);
   _set('F_WHERE',_szk_where)
?};
: ocena terminowosci
{? _add(_ref2,'TER','terminowosc','T')
|| _set('FORMULA',
      'SZK_OPIS.index(\'ZZ_DOK\');'+
      '{? ~SZK_OPIS.find_key(ref_name(ZA_ZEST.ZZ_LINK),ZA_ZEST.ZZ_LINK) || return(null) ?};'+
      '_a.table:=\'SZK_OPIS\';_a.field:=\'OC_TER\';_a.ref:=SZK_OPIS.ref');
   _set('F_JOINS',_szk_joins);
   _set('F_WHERE',_szk_where)
?};
: ocena kosztow
{? _add(_ref2,'KOS','koszt','T')
|| _set('FORMULA',
      'SZK_OPIS.index(\'ZZ_DOK\');'+
      '{? ~SZK_OPIS.find_key(ref_name(ZA_ZEST.ZZ_LINK),ZA_ZEST.ZZ_LINK) || return(null) ?};'+
      '_a.table:=\'SZK_OPIS\';_a.field:=\'OC_KOS\';_a.ref:=SZK_OPIS.ref');
   _set('F_JOINS',_szk_joins);
   _set('F_WHERE',_szk_where)
?};
: ocena wykonania
{? _add(_ref2,'WYK','wykonanie','T')
|| _set('FORMULA',
      'SZK_OPIS.index(\'ZZ_DOK\');'+
      '{? ~SZK_OPIS.find_key(ref_name(ZA_ZEST.ZZ_LINK),ZA_ZEST.ZZ_LINK) || return(null) ?};'+
      '_a.table:=\'SZK_OPIS\';_a.field:=\'OC_WYK\';_a.ref:=SZK_OPIS.ref');
   _set('F_JOINS',_szk_joins);
   _set('F_WHERE',_szk_where)
?};
: ocena organizatora
{? _add(_ref2,'ORG','organizator','T')
|| _set('FORMULA',
      'SZK_OPIS.index(\'ZZ_DOK\');'+
      '{? ~SZK_OPIS.find_key(ref_name(ZA_ZEST.ZZ_LINK),ZA_ZEST.ZZ_LINK) || return(null) ?};'+
      'SZK_ORG.clear;SZK_ORG.index(\'SZK_ORG\');'+
      '{?~SZK_ORG.find_key(SZK_OPIS.ORG().NAZWA)||return(null)?};'+
      '_a.table:=\'SZK_ORG\';_a.field:=\'ZZ_OCENA\';_a.ref:=SZK_ORG.ref');
   _set('F_JOINS',
      'join ZA_ZEST using (ZA_TEST.ZA_ZEST,ZA_ZEST.REFERENCE) '+
      'join SZK_OPIS using (ZA_ZEST.ZZ_LINK,SZK_OPIS.ZZ_DOK)');
   _set('F_WHERE','SZK_OPIS.ORG=:_a')
?};
: ocena trenera
{? _add(_ref2,'TRE','trener','T')
|| _set('FORMULA',
      'SZK_OPIS.index(\'ZZ_DOK\');'+
      '{? ~SZK_OPIS.find_key(ref_name(ZA_ZEST.ZZ_LINK),ZA_ZEST.ZZ_LINK) || return(null) ?};'+
      'SZK_TREN.clear;SZK_TREN.index(\'ZZ_OSOBA\');'+
      '{?~SZK_TREN.find_key(SZK_OPIS.TRENER)||return(null)?};'+
      '_a.table:=\'SZK_TREN\';_a.field:=\'ZZ_OCENA\';_a.ref:=SZK_TREN.ref');
   _set('F_JOINS',
      'join ZA_ZEST using (ZA_TEST.ZA_ZEST,ZA_ZEST.REFERENCE) '+
      'join SZK_OPIS using (ZA_ZEST.ZZ_LINK,SZK_OPIS.ZZ_DOK) '+
      'join SZK_TREN using (SZK_OPIS.TRENER,SZK_TREN.ZZ_OSOBA)');
   _set('F_WHERE','SZK_TREN.REFERENCE=:_a')
?};
: ocena materialow - dodatkowo
_add(_ref2,'MAT','materiały','T');
: skuteczność szkolenia
_ref2:=_add(_ref1,'SK','skuteczność','T');
: ocena skuteczności
{? _add(_ref2,'SKU','skuteczność','T')
|| _set('FORMULA',
      'SZK_OPIS.index(\'ZZ_DOK\');'+
      '{? ~SZK_OPIS.find_key(ref_name(ZA_ZEST.ZZ_LINK),ZA_ZEST.ZZ_LINK) || return(null) ?};'+
      '_a.table:=\'SZK_OPIS\';_a.field:=\'OC_SKU\';_a.ref:=SZK_OPIS.ref');
   _set('F_JOINS',_szk_joins);
   _set('F_WHERE',_szk_where)
?};
: rekrutacja
_ref1:=_add(0,'RP_PROC','Rekrutacja','T');
: dla kandydata
_ref2:=_add(_ref1,'PR','wstępna','T');
{? _add(_ref2,'OSOBA','samoocena','T')
|| _set('FORMULA','RP_OSET.RP_PROCO();_a.table:=\'RP_PROCO\';_a.field:=\'ZZ_OCENA\';_a.ref:=RP_PROCO.ref()')
?};
: po spotkaniu
_ref2:=_add(_ref1,'PO','po spotkaniu','T');
: ocena kandydata
{? _add(_ref2,'ETAP','ocena etapu','T')
|| _set('FORMULA','_a.table:=\'RP_OSET\';_a.field:=\'ZZ_OCENA\';_a.ref:=RP_OSET.ref')
?};
{? _add(_ref2,'PROCES','ocena kandydata','T')
|| _set('FORMULA','RP_OSET.RP_PROCO();_a.table:=\'RP_PROCO\';_a.field:=\'ZZ_OCENA\';_a.ref:=RP_PROCO.ref')
?};
: badanie opinii
_add(_ref1,'Z','badanie opinii','T')


\zz_asyst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Tworzy kreatory.
::   WE:
::   WY:
::  OLD: \data/zz_asst.fml
::----------------------------------------------------------------------------------------------------------------------
: Grupy kreatorów
exec('utworz','phr_kreatory','G','Generowanie',,'Asystenci odpowiedzialni za automatyzację tworzenia danych.');
exec('utworz','phr_kreatory','R','Raportowanie',,'Asystenci przygotowujący zestawienia i raporty dla użytkownika.');
exec('utworz','phr_kreatory','K','Kontrola',,'Asystenci weryfikujący kompletność i spójność zgromadzonych danych.');

: Kompetencje
exec('utworz','phr_kreatory','GB_KK','Kryteria dla bieżącej kompetencji na podstawie:');
exec('utworz','phr_kreatory','GB_KK_S','Opisów stanowisk',"exec('gb_kk_s','phr_kreatory')");
exec('utworz','phr_kreatory','GB_KK_K','Kryteriów doboru wskazanej kompetencji',"exec('gb_kk_k','phr_kreatory')");

exec('utworz','phr_kreatory','GW_KK','Kryteria dla wybranych kompetencji na podstawie:');
exec('utworz','phr_kreatory','GW_KK_S','Opisów stanowisk',"exec('gw_kk_s','phr_kreatory')");
exec('utworz','phr_kreatory','GW_KK_K','Kryteriów doboru bieżącej kompetencji',"exec('gw_kk_k','phr_kreatory')");
::exec('utworz','phr_kreatory','GW_KK_S_A','Kryteria dla wybranych kompetencji na podstawie opisów stanowisk',
::   "exec('gw_kk_s','phr_kreatory')"
::);

exec('utworz','phr_kreatory','G_MO','Typy i metody oceny dla:');
exec('utworz','phr_kreatory','GB_MO','Bieżącej kompetencji',"exec('gb_mo','phr_kreatory')");
exec('utworz','phr_kreatory','GW_MO','Wybranych kompetencji',"exec('gw_mo','phr_kreatory')");
::exec('utworz','phr_kreatory','GW_MO_A','-Typy i metody oceny dla wybranych kompetencji',
::   "exec('gw_mo','phr_kreatory')"
::);

exec('utworz','phr_kreatory','RB_K_OPIS','Dokument opisu kompetencji',"exec('rb_k_opis','phr_kreatory')");
::exec('utworz','phr_kreatory','RW_K_OPIS','-Dokumenty opisów kompetencji','kompopis2');
::exec('utworz','phr_kreatory','RW_K_PRAC','-Wykaz pracowników posiadających wybrane kompetencje','kompprac21');

: Lista kompetencji (ZWS_PAR_PLKO)
_key:='#ZWS_PAR_PLKO#ZZ_KOMP#CFG#';
exec('polacz','phr_kreatory',_key,'R','RB_K_OPIS');

: Kompetencje a stanowiska (ZWS_PAR_PKST)
: - Okno kompetencji
_key:='#ZWS_PAR_PKST#ZZ_KOMP#WEO#';
exec('polacz','phr_kreatory',_key,'R','RB_K_OPIS');
exec('polacz','phr_kreatory',_key,'G','GB_KK','GW_KK');
exec('polacz','phr_kreatory',_key,'GB_KK','GB_KK_S','GB_KK_K');
exec('polacz','phr_kreatory',_key,'GW_KK','GW_KK_S','GW_KK_K');
: - Okno stanowisk
_key:='#ZWS_PAR_PKST#ZZ_KRYT#KOMP#';
exec('polacz','phr_kreatory',_key,'R','RB_K_OPIS');
exec('polacz','phr_kreatory',_key,'G','GB_KK');
exec('polacz','phr_kreatory',_key,'GB_KK','GB_KK_S','GB_KK_K');

: Typy ocen dla kompetencji (ZWS_PAR_PROK)
: - Okno kompetencji
_key:='#ZWS_PAR_PROK#ZZ_KOMP#WEO#';
exec('polacz','phr_kreatory',_key,'R','RB_K_OPIS');
exec('polacz','phr_kreatory',_key,'G','G_MO');
exec('polacz','phr_kreatory',_key,'G_MO','GB_MO','GW_MO');

: Profile
exec('utworz','phr_kreatory','GN_KP','Definicja profilu ogólnego i kryteria doboru dla oceny pracownika na podstawie:');
exec('utworz','phr_kreatory','GW_KP','Kryteria doboru dla bieżącego profilu oceny pracownika na podstawie:');
exec('utworz','phr_kreatory','GN_KP_S','Opisów stanowisk',"exec('gn_kp_s','phr_kreatory')");
exec('utworz','phr_kreatory','GN_KP_J','Jednostek organizacyjnych',"exec('gn_kp_j','phr_kreatory')");
exec('utworz','phr_kreatory','GN_KP_SJ','Stanowisk w jednostkach organizacyjnych',"exec('gn_kp_sj','phr_kreatory')");
exec('utworz','phr_kreatory','GW_KP_S','Opisów stanowisk',"exec('gw_kp_s','phr_kreatory')");
exec('utworz','phr_kreatory','GW_KP_J','Jednostek organizacyjnych',"exec('gw_kp_j','phr_kreatory')");
exec('utworz','phr_kreatory','GW_KP_SJ','Stanowisk w jednostkach organizacyjnych',"exec('gw_kp_sj','phr_kreatory')");

: Profile kompetencji
_key:='#ZWS_PAR_PPKO#ZZ_PROF#CFG_X#';
exec('polacz','phr_kreatory',_key,'G','GN_KP','GW_KP');
exec('polacz','phr_kreatory',_key,'GN_KP','GN_KP_S','GN_KP_J','GN_KP_SJ');
exec('polacz','phr_kreatory',_key,'GW_KP','GW_KP_S','GW_KP_J','GW_KP_SJ');
_key:='#ZWS_PAR_PPKO#ZZ_PROF#CFG_X#O#';
exec('polacz','phr_kreatory',_key,'G','GN_KP','GW_KP');
exec('polacz','phr_kreatory',_key,'GN_KP','GN_KP_S','GN_KP_J','GN_KP_SJ');
exec('polacz','phr_kreatory',_key,'GW_KP','GW_KP_S','GW_KP_J','GW_KP_SJ');
_key:='#ZWS_PAR_PPKO#ZZ_PROF#CFG_X#S#';
exec('polacz','phr_kreatory',_key,'G','GW_KP');
exec('polacz','phr_kreatory',_key,'GW_KP','GW_KP_S','GW_KP_J','GW_KP_SJ');


: Procesy ocen
exec('utworz','phr_kreatory','R_O_OP','Dokumenty ocen pracowniczych',"exec('r_o_op','phr_kreatory')");
exec('utworz','phr_kreatory','R_O_KM','Ranking najlepiej ocenionych według kompetencji',
   "exec('r_o_km','phr_kreatory')"
);
exec('utworz','phr_kreatory','R_O_KO','Różnica między wartością oczekiwaną a uzyskaną według kompetencji',
   "exec('r_o_ko','phr_kreatory')"
);
exec('utworz','phr_kreatory','R_O_KP',
   'Porównanie faktycznych ocen kompetencji z oceną oczekiwaną na danym stanowisku, według kompetencji',
   "exec('r_o_kp','phr_kreatory')"
);
: - Oceny pracownicze
_key:='#POC_OCP_RPRO#ZO_PROC#WER#';
exec('polacz','phr_kreatory',_key,'R','R_O_OP','R_O_KM','R_O_KO','R_O_KP');

exec('utworz','phr_kreatory','GN-UE','Listy osób oceniających na podstawie:');
exec('utworz','phr_kreatory','GN-UE-S','Opisów stanowisk',"exec('gn_ue_s','phr_kreatory')");
exec('utworz','phr_kreatory','GN-UE-J','Jednostek organizacyjnych',"exec('gn_ue_j','phr_kreatory')");
exec('utworz','phr_kreatory','GN-UE-SJ','Stanowisk w jednostkach organizacyjnych',"exec('gn_ue_sj','phr_kreatory')");
exec('utworz','phr_kreatory','GN-F','Formularzy oceny pracowników na podstawie:');
exec('utworz','phr_kreatory','GN-F-ZSJ',
   'Zależności między stanowiskami i jednostkami organizacyjnymi',
   "exec('gn_ue_zsj','phr_kreatory')"
);
exec('utworz','phr_kreatory','GN-UO','Listy ocenianych pracowników na podstawie:');
exec('utworz','phr_kreatory','GN-UO-S','Opisów stanowisk',"exec('gn_uo_s','phr_kreatory')");
exec('utworz','phr_kreatory','GN-UO-J','Jednostek organizacyjnych',"exec('gn_uo_j','phr_kreatory')");
exec('utworz','phr_kreatory','GN-UO-SJ','Stanowisk w jednostkach organizacyjnych',"exec('gn_uo_sj','phr_kreatory')");
exec('utworz','phr_kreatory','K-UNF','Usuwanie niejednoznaczności w wyborze formularzy',
   "exec('form_fix','phr_kreatory')"
);
: formularze: oceniajacy
_key:='#POC_OFO#ZO_OSOBA#WER#';
exec('polacz','phr_kreatory',_key,'G','GN-UE','GN-F');
exec('polacz','phr_kreatory',_key,'GN-UE','GN-UE-S','GN-UE-J','GN-UE-SJ');
exec('polacz','phr_kreatory',_key,'GN-F','GN-F-ZSJ');
_key:='#POC_OFO_RFOC#ZO_OSOBA#WER#';
exec('polacz','phr_kreatory',_key,'G','GN-UE','GN-F');
exec('polacz','phr_kreatory',_key,'GN-UE','GN-UE-S','GN-UE-J','GN-UE-SJ');
exec('polacz','phr_kreatory',_key,'GN-F','GN-F-ZSJ');
: formularze: oceniani
_key:='#POC_OFO#ZO_TEST#WER#';
exec('polacz','phr_kreatory',_key,'G','GN-UO','GN-F');
exec('polacz','phr_kreatory',_key,'GN-UO','GN-UO-S','GN-UO-J','GN-UO-SJ');
exec('polacz','phr_kreatory',_key,'GN-F','GN-F-ZSJ');
exec('polacz','phr_kreatory',_key,'K','K-UNF');
_key:='#POC_OFO_RFOC#ZO_TEST#WER#';
exec('polacz','phr_kreatory',_key,'G','GN-UO','GN-F');
exec('polacz','phr_kreatory',_key,'GN-UO','GN-UO-S','GN-UO-J','GN-UO-SJ');
exec('polacz','phr_kreatory',_key,'GN-F','GN-F-ZSJ');
exec('polacz','phr_kreatory',_key,'K','K-UNF');

: Budżety szkoleń
exec('utworz','phr_kreatory','G_SZB_TP','Utworzenie pozycji według struktury organizacyjnej',
   "exec('g_szb_tp','phr_kreatory')"
);
_key:='#PSZ_TBS#SZB_POZ#WER#';
exec('polacz','phr_kreatory',_key,'G','G_SZB_TP');

: Szkolenia
exec('utworz','phr_kreatory','R_SZ_LOB','Lista obecności na szkoleniu',"exec('r_sz_lob','phr_kreatory')");
_key:='#PSZ_SDO#SZK_OPIS#SEL#';
exec('polacz','phr_kreatory',_key,'R','R_SZ_LOB');
_key:='#PSZ_SDO#SZK_OPIS#ORG#';
exec('polacz','phr_kreatory',_key,'R','R_SZ_LOB');

: Ankiety
_key:='#PBA_BPB#ZA_ZEST#FORM#';
exec('utworz','phr_kreatory','R_ZA_T','Ranking wyników według pytań',
   "exec('r_za_t','phr_kreatory')"
);
exec('polacz','phr_kreatory',_key,'R','R_ZA_T');
~~


\zz_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Typy ocen.
::   WE:
::  OLD: \init_typ/zz_data.fml
::  OLD: \init_sys/zz_data.fml
::----------------------------------------------------------------------------------------------------------------------
_update:=
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Sprawdza, czy typ o podanym kodzie już występuje w słowniku, jeśli nie, to tworzy odpowiedni zapis.
::   WE: _a - kod typu
::       _b - nazwa typu
::----------------------------------------------------------------------------------------------------------------------
   "  ZZ_TYP.index('KOD');
      ZZ_TYP.prefix(ZZ_POM.MODUL);
      {? ~ZZ_TYP.find_key(_a,_a)
      || ZZ_TYP.blank();
         ZZ_TYP.KOD:=_a;
         ZZ_TYP.NAZWA:=_b;
         ZZ_TYP.SYSTEM:='T';
         ZZ_TYP.WAGA:=1;
         ZZ_TYP.add(1)
      |? ZZ_TYP.NAZWA<>_b
      || ZZ_TYP.NAZWA:=_b;
         ZZ_TYP.put(1)
      ?}
   ";

:: Predefiniowane typy oceny
:: Oceny pracownicze
ZZ_POM.MODUL:='O';
_update('OU','ocena uzgodniona');
_update('OP','oceniani pracownicy');
_update('PS','samoocena');
_update('PB','bezpośredni przełożony');
_update('PW','przełożony wyższego szczebla');
_update('BP','bezpośredni podwładny');
_update('WB','bezpośredni współpracownik');
_update('WI','współpracownik');
_update('ED','ekspert dziedzinowy');
_update('HR','dział personalny');
:: Rekrutacja
ZZ_POM.MODUL:='R';
_update('OP','ocena kandydata');
_update('HR','dział personalny');
_update('PB','bezpośredni przełożony');
_update('ED','ekspert dziedzinowy');
:: Ankiety
ZZ_POM.MODUL:='A';
_update('OP','oceniający pracownik');
:: Dane portalowe
ZZ_POM.MODUL:='P';
_update('ODB','odbiorcy informacji portalowych');
~~


\zz_met
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Metody oceny.
::   WE:
::  OLD: \init_met/zz_data.fml
::  OLD: \init_sys/zz_data.fml
::----------------------------------------------------------------------------------------------------------------------
_update:=
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Tworzy/aktualizuje metodę oceny
::   WE: _a [STRING] - kod metody
::       _b [STRING] - nazwa metody
::       _c [STRING] - rodzaj (S, O)
::----------------------------------------------------------------------------------------------------------------------
   "  ZZ_MET.clear();
      ZZ_MET.index('KOD');
      {? ~ZZ_MET.find_key(_a,)
      || ZZ_MET.blank();
         ZZ_MET.KOD:=_a;
         ZZ_MET.NAZWA:=_b;
         ZZ_MET.RODZAJ:=_c;
         ZZ_MET.SYSTEM:='T';
         ZZ_MET.add(1)
      |? ZZ_MET.NAZWA<>_b | ZZ_MET.RODZAJ<>_c
      || ZZ_MET.NAZWA:=_b;
         ZZ_MET.RODZAJ:=_c;
         ZZ_MET.put(1)
      ?}
   ";

:: Predefiniowane metody oceny
_update('OO','ocena opisowa','O');
_update('WB','wartości bezpośrednie','S');
_update('SP','skala punktowa','S');
_update('KW','wartości kodowane','S');

~~


\zf_skl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Elementy formularzy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_add:=
::----------------------------------------------------------------------------------------------------------------------
::   WE:  _a  [REFERENCE] - Wskazanie firmy.
::        _b  [STRING]    - Kod elementu formularza.
::        _c  [STRING]    - Nazwa elementu formularza.
::        _d  [STRING]    - Element uwzględniany w protokole oceny? [T/N]
::        _f  [STRING]    - Element systemowy (zablokowany przed modyfikacjami)? [T/N]
::        _f  [STRING]    - Element statyczny formularza? [T/N]
::        _g  [STRING]    - Element walidowany? [T/N]
::       [_h] [STRING]    - Kod metody oceny.
::----------------------------------------------------------------------------------------------------------------------
   "  ZF_SKL.cntx_psh();
      ZF_SKL.index('KOD');
      ZF_SKL.prefix();
      {? ~ZF_SKL.find_key(_a,_b,)
      || ZF_SKL.blank();
         ZF_SKL.FIRMA:=_a;
         ZF_SKL.KOD:=_b;
         ZF_SKL.NAZWA:=_c;
         ZF_SKL.DOKUMENT:=_d;
         ZF_SKL.SYSTEM:=_e;
         ZF_SKL.STALY:=_f;
         ZF_SKL.WALIDUJ:=_g;
         {? var_pres('_h')=type_of('')
         || ZZ_MET.cntx_psh();
            ZZ_MET.index('KOD');
            ZZ_MET.prefix();
            {? ZZ_MET.find_key(_h,)
            || ZF_SKL.ZZ_MET:=ZZ_MET.ref()
            ?};
            ZZ_MET.cntx_pop()
         ?};
         ZF_SKL.add()
      ?};
      ZF_SKL.cntx_pop();
      ~~
   ";

_firma:=exec('ref_firma','ustawienia');
:: Elementy wydruku.
_add(_firma,'DP','Podstawowe dane pracownika','T','T','T','N');
_add(_firma,'P','Podpisy','T','T','T','N');
_add(_firma,'DN','Nagłówek dokumentu','T','T','T','N');
:: Pola opisowe.
_add(_firma,'NW','Najważniejsze wydarzenia','T','N','N','T','OO');
_add(_firma,'DDS','Działania dotyczące szkoleń','T','N','N','T','OO');
_add(_firma,'DPZ','Dyskusja na temat pryncypiów zachowania','T','N','N','T','OO');
_add(_firma,'MS','Mocne strony','T','N','N','T','OO');
_add(_firma,'OR','Obszary rozwoju','T','N','N','T','OO');
_add(_firma,'K1','Komentarz do oceny','T','N','N','T','OO');
_add(_firma,'OPK','Ocena opisowa przełożonego','T','T','N','T');
_add(_firma,'OPP','Ocena opisowa pracownika','T','T','N','T');
_add(_firma,'OPM','Ocena opisowa menadżera','T','N','N','T','OO');
_add(_firma,'POO','Podsumowująca ocena opisowa','T','T','N','T');
:: Elementy złożone.
_add(_firma,'RK','Rozwój kariery','T','T','N','T');
_add(_firma,'MB','Mobilność','T','T','N','T');
_add(_firma,'KD','Kwalifikacje dodatkowe','T','T','N','T');
_add(_firma,'PS','Potrzeby szkoleniowe','T','T','N','T');
_add(_firma,'CW','Weryfikacja realizacji wyznaczonych celów','T','T','N','T');
_add(_firma,'CN','Wyznaczenie celów na następny okres','T','T','N','T');
:: Zakładki.
_add(_firma,'SZ','Szkolenia','T','T','T','N');
_add(_firma,'ST','Statystyki','T','T','T','N');
:: Pozostałe elementy.
_add(_firma,'WP','Siatka kompetencji','T','T','T','N');
_add(_firma,'OK','Ocena kompetencji','T','T','N','T');
_add(_firma,'OO','Ocena ogólna','T','N','N','T','SP');
~~


\bl_cdtab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.22]
:: OPIS: Uzupełnianie tabeli CDTAB
::----------------------------------------------------------------------------------------------------------------------
CDTAB.cntx_psh();
CDTAB.index('CDTAB');
CDTAB.prefix();
{? ~CDTAB.find_key('KH',)
|| CDTAB.blank();
   CDTAB.AKRONIM:='KH';
   CDTAB.add()
?};
{? ~CDTAB.find_key('SRSR',)
|| CDTAB.blank();
   CDTAB.AKRONIM:='SRSR';
   CDTAB.add()
?};
CDTAB.cntx_pop()


\urlop_rodzicielski
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.22]
:: OPIS: Uzupełnienie słowników wymaganych do wprowadzania wniosków o urlop rodzicielski do świadectwa pracy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Uzupełnienie słownika podstaw prawnych do wniosków o urlop rodzicielski.
{? ~RD_PPRAW.size()
|| exec('podstawa_prawna','urlop_rodzicielski')
?};
:: Uzupełnienie słownika rodzajów nieobecności do wniosków o urlop rodzicielski.
{? ~RD_NB.size()
|| exec('nieobecnosci','urlop_rodzicielski')
?};
~~


\plob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.42]
:: OPIS: Funkcja dodaje formuły do obsługi obiektów lokalizacji w planowaniu czasu pracy
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: tabela, która posłuży nam jako do definicji lokalizacji
_tab:='UD_SKL';

:: sprawdzenie czy jest już jakakolwiek definicja dla bieżącej firmy
{? exec('exist','plob_ol')
|| return(~~)
?};

:: definicja formuł na akcje związane z obsługą lokalizacji
_name:=exec('formulaNames','plob');
_f_dod:=exec('update','plob_fo',_name.dodanie,''+"exec('dodaj','plob_l')");
_f_akt:=exec('update','plob_fo',_name.aktualizacja,''+
                "_msg:={? var_pres('_a')=type_of(0) || _a || 1 ?}; exec('aktualizuj','plob_l',_msg)");
_f_dez:=exec('update','plob_fo',_name.dezaktywacja,''+"exec('dezaktywuj','plob_l')");
_f_obdom:=exec('update','plob_fo',_name.domyslny,''+"exec('domyslny','plob_l',_a,_b)");
_f_prac:=exec('update','plob_fo',_name.pracownicy,''+"exec('pracownicy','plob_l',_a,_b,_c,_d,_e)");

:: dodajemy definicję obiektu lokalizacji
_ref:=exec('add','plob_ol',_tab,_f_dod,_f_dez,_f_akt,_f_obdom,_f_prac);
{? _ref
|| exec('aktywuj','plob_ol',_ref);
   {? exec('existActiv','plob_ol')
   || {? (_fml:=exec('getForm4Acr','plob_ol','F_DOD'))<>''
      || {? ($_fml)(0)
         || exec('aktywuj','plob_ol',_ref,1)
         ?}
      ?}
   ?}
?};
~~


\rodzaje_oddelegowania
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.42]
:: OPIS: Uzupełnienie tabeli rodzajów pozycji dla oddelegowania do pracy za granicą.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
Cntx.psh(H_ODDR,R);
R.index('RUBKOD');
H_ODDR.index('H_ODDRDN');
H_ODDR.prefix(exec('firma','ustawienia'));

_add:=
   "  H_ODDR.blank();
      H_ODDR.RODZ:=_a;
      H_ODDR.OPIS:=_b;
      H_ODDR.DIETA:=_c;
      H_ODDR.NOC:=_d;
      R.prefix(_e);
      H_ODDR.R:=
         {? R.first()
         || R.ref()
         || null()
         ?};
      H_ODDR.add()
   ";

{? ~H_ODDR.find_key('N','T')
|| exec('import','rubryki','g','7073',1,0);
   _add('Noclegi','Stawka za nocleg podczas oddelegowania do pracy za granicą','N','T',7073)
?};

{? ~H_ODDR.find_key('T','N')
|| exec('import','rubryki','g','7074',1,0);
   _add('Diety','Kwota diety za dzień pobytu za granicą','T','N',7074)
?};

Cntx.pop(H_ODDR,R);
~~


\zasw_ZUS_do_oddel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.42]
:: OPIS: Uzupełnienie słownika rodzajów zaświadczeń ZUS do oddelegowania za granicę.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_add:=
   "  _result:=0;
      {? ~H_ODDSZ.find_key(_a)
      || H_ODDSZ.SYMBOL:=_a;
         H_ODDSZ.OPIS:=_b;
         _result:=H_ODDSZ.add()
      ?};
      _result
   ";

H_ODDSZ.cntx_psh();
H_ODDSZ.index('SYMBOL');
H_ODDSZ.prefix();
{? H_ODDSZ.size()<8
|| _result+=_add('A1','Zaświadczenie o ubezpieczeniu - kraje UE, EOG i Szwajcaria');
   _result+=_add('PL-AU 1','Zaświadczenie o ubezpieczeniu - umowa między Rzecząpospolitą Polską a Australią');
   _result+=_add('PL-CAN01','Zaświadczenie o ubezpieczeniu - Umowa między Rzecząpospolitą Polską a Kanadą');
   _result+=_add('PL-KR 1','Zaświadczenie o ubezpieczeniu - Umowa między Rzecząpospolitą Polską a Koreą');
   _result+=_add('PL-RM 101','Zaświadczenie o ubezpieczeniu - Umowa między Rzecząpospolitą Polską a Macedonią');
   _result+=_add(
      'PL-MD 1',
      'Zaświadczenie o podleganiu ubezpieczeniu - Umowa między Rzecząpospolitą Polską a Republiką Mołdawii'
   );
   _result+=_add('PL-UA 1','Zaświadczenie o ubezpieczeniu - Umowa między Rzecząpospolitą Polską a Ukrainą');
   _result+=_add('PL-USA 1','Zaświadczenie o ubezpieczeniu - Umowa między Rzecząpospolitą Polską a USA')
?};
H_ODDSZ.cntx_pop();
_result


\rub_graf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Parametryzacja premii okresowych związanych z grafikami czasu pracy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
_tab:=obj_new(6);
_tab[1]:=7051;
_tab[2]:=7041;
_tab[3]:=7055;
_tab[4]:=7053;
_tab[5]:=7006;
_tab[6]:=7059;
PAR_POKR.index('PAR_POKR');
PAR_POKR.prefix();
_firma:=exec('ref_firma','ustawienia');
{! _ind:=1..obj_len(_tab)
|! _rub:=__RUB.ref(_tab[_ind]);
   {? ~PAR_POKR.find_key(_firma,_tab[_ind]) & _rub<>null()
   || PAR_POKR.blank();
      PAR_POKR.R:=_rub;
      PAR_POKR.RP:='S';
      PAR_POKR.RZ:='T';
      PAR_POKR.PTZO:='T';
      PAR_POKR.FIRMA:=_firma;
      PAR_POKR.add(1)
   ?}
!};
~~


\typy_jedn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Dodaje słownik typów jednostek
::----------------------------------------------------------------------------------------------------------------------
_nazwa:='~TYPY JEDNOSTEK';
SLU.index('WZORZEC'); SLU.prefix('prosty',_nazwa);
{? ~SLU.first()
|| SLU.blank();
   SLU.SYSTEM:='T'; SLU.NAZ:=_nazwa; SLU.WZ:='prosty';
   SLU.OP:='Typy jednostek';
   SLU.DL:=5;
   SLU.prefix();
   SLU.add(1)
?};
_slu:=SLU.ref();
SLUAPPL.index('NAZ'); SLUAPPL.prefix('F');
{? ~SLUAPPL.find_key(_nazwa) | SLUAPPL.SLU<>_slu
|| SLUAPPL.blank(); SLUAPPL.SLU:=_slu; SLUAPPL.add()
?};
_add_jedn:="
   SLO.cntx_psh();
   SLO.index('SL');
   SLO.prefix(SLU.ref());
   {? ~SLO.find_key(~-_a,)
   || SLO.blank(1);
      SLO.SLU:=SLU.ref();
      SLO.KOD:=~-_a;
      SLO.TR:=_a;
      SLO.add()
   ?};
   SLO.cntx_pop()
";
_add_jedn('Mała');
_add_jedn('Inna');
::_add_jedn('Mikro'); czy tu nie powinno być to dodane ?
_add_jedn('ASI');
~~


\addr_cho
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Dodaje słownik wyboru adresu ADDR_CHO
::----------------------------------------------------------------------------------------------------------------------
_names:='Kontrahenta.Odbiorcy kontrahenta.Miejsca dostawy.Posesji.Magazynu.Składowiska.Uzupełniony ręcznie';
_codes:='KH,KH_ODB,KH_MSC,POS,MG,WYS,MANUAL';

ADDR_CHO.cntx_psh();
ADDR_CHO.prefix();
{? ADDR_CHO.size()=0
||
   _names_tab:=spli_str(_names,'.');
   _codes_tab:=spli_str(_codes,',');
   _len:=obj_len(_names_tab);

   {! _i.._len
   |!
      ADDR_CHO.blank();
      ADDR_CHO.N:=_names_tab[_i];
      ADDR_CHO.K:=_codes_tab[_i];
      ADDR_CHO.add()
   !}
?};
ADDR_CHO.cntx_pop();
~~


\zz_fml
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła tworzy domyślne zapisy (kryteria formułowe) w tabeli ZZ_FML.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_update:=
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Sprawdza, czy typ o podanym kodzie już występuje w słowniku, jeśli nie, to tworzy odpowiedni zapis.
::   WE: _a [STRING] - Rodzaj zapisu (formuły).
::       _b [STRING] - Nazwa formuły.
::       _c [STRING] - Treść formuły.
::----------------------------------------------------------------------------------------------------------------------
   "  _rodzaj:=_a;
      _nazwa:=_b;
      _formula:={? var_pres('_c')=type_of($'') || $_c || _c ?};
      ZZ_FML.cntx_psh();
      ZZ_FML.index('NAZWA');
      ZZ_FML.prefix(_rodzaj);
      {? ~ZZ_FML.find_key(_nazwa,_nazwa)
      || ZZ_FML.blank();
         ZZ_FML.RODZAJ:=_rodzaj;
         ZZ_FML.NAZWA:=_nazwa;
         ZZ_FML.FORMULA:=_formula;
         ZZ_FML.add()
      |? ZZ_FML.FORMULA<>_formula
      || ZZ_FML.FORMULA:=_formula;
         ZZ_FML.put()
      ?};
      ZZ_FML.cntx_pop()
   ";

:: Dane portalowe
ZZ_POM.MODUL:='P';
_update('K','Wszyscy',"1");
_update('K','Forma współpracy: P (umowa o pracę)',
   "{? _a=P || F_ZATR.cntx_psh(); _ret:=P.F_ZATR().KOD='P'; F_ZATR.cntx_pop(); _ret ?}"
);
_update('K','Forma współpracy: Z (umowa cywilnoprawna)',
   "{? _a=P || F_ZATR.cntx_psh(); _ret:=P.F_ZATR().KOD='Z'; F_ZATR.cntx_pop(); _ret ?}"
);
_update('K','Forma współpracy: K (kontrakt menadżerski)',
   "{? _a=P || F_ZATR.cntx_psh(); _ret:=P.F_ZATR().KOD='K'; F_ZATR.cntx_pop(); _ret ?}"
);


~~


\slo_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła uzupełnia pozycje słownika SLO_RODZ.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_update:="
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Sprawdza, czy rodzaj o podanym kodzie już występuje w słowniku, jeśli nie, to tworzy odpowiedni zapis.
::   WE: _a [REFERENCE] - Typ zapisu
::       _b [STRING]    - Kod.
::       _c [STRING]    - Nazwa.
::       _d [STRING]    - Unikalność.
::----------------------------------------------------------------------------------------------------------------------
   {? ~SLO_RODZ.find_key(_b,)
   || _lp:={? SLO_RODZ.last() || SLO_RODZ.LP ?}+1;
      SLO_RODZ.blank(1);
      SLO_RODZ.SLO_KOD:=_a;
      SLO_RODZ.LP:=_lp;
      SLO_RODZ.KOD:=_b;
      SLO_RODZ.NAZWA:=_c;
      SLO_RODZ.UNIKALNY:=_d;
      SLO_RODZ.SYSTEM:={? var_pres('_e')=type_of('') & (_e='T' | _e='N') || _e || 'N' ?};
      SLO_RODZ.add()
   ?}
";

SLO_RODZ.cntx_psh();
SLO_RODZ.index('KOD');

:: Dodatkowe informacje: KONTAKT
_kod:=exec('kod','ext_slo','P_DODINF','KONTAKT');
SLO_RODZ.prefix(_kod);
{? ~SLO_RODZ.first()
|| _update(_kod,'POKOJ','Pokój','T');
   _update(_kod,'WEW','Telefon wewnętrzny','T','T');
   _update(_kod,'KOM','Telefon komórkowy','T','T');
   _update(_kod,'SKYPE','Skype','T');
   _update(_kod,'E_MAIL','E-mail','T','T')
?};

SLO_RODZ.cntx_pop();
~~


\datepar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Ustawienie parametrów zależnych od daty
::----------------------------------------------------------------------------------------------------------------------
_dpar:=exec('obj','datepar');
_dpar.system('FKS')
   .addPar('KOR_CIT','Liczba dni po terminie płatności dla korekt CIT za złe długi','I')
      .addVal(date(2020,1,1),90);
~~


\portal_wnioski
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Formuła tworząca definicje wniosków wykorzystywanych na portalu ABS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('def_wu_ogolny','etypy',1);
exec('def_wu_ojcowski','etypy',1);
~~


\gsxm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Aktualizacja miejsc prezentacji.
::   WE: [_a] [STRING] - Typ, dla którego będą tworzone zapisy [domyślnie:''].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_pres('_a')=type_of('') || _a || '' ?};

GSXM.cntx_psh();
GSXM.index('FLAGA');
GSXM.prefix();
_update:="
   _typ:=_a;
   _gsxm:={? var_pres('_b')=type_of(0) || _b ?};
   _flaga:=_c;
   _opis:=_d;
   _koment:={? var_pres('_e')=type_of('') || _e || '' ?};
   _max:={? var_pres('_f')=type_of(0) || _f || 0 ?};
   {? ~GSXM.find_key(_typ,_flaga,)
   || GSXM.blank();
      GSXM.TYP:=_typ;
      GSXM.GSXM:=_gsxm;
      GSXM.FLAGA:=_flaga;
      GSXM.OPIS:=_opis;
      GSXM.memo_set(_koment,'KOMENT');
      GSXM.MAX:=_max;
      GSXM.add() & GSXM.memo_put(,'KOMENT')
   || _put:=0;
      {? GSXM.GSXM<>_gsxm
      || GSXM.GSXM:=_gsxm;
         _put+=1
      ?};
      {? GSXM.OPIS<>_opis
      || GSXM.OPIS:=_opis;
         _put+=1
      ?};
      {? GSXM.MAX<>_max
      || GSXM.MAX:=_max;
         _put+=1
      ?};
      {? _put
      || GSXM.put()
      ?};
      {? GSXM.memo_txt(,1,'KOMENT')<>_koment
      || GSXM.memo_set(_koment,'KOMENT');
         GSXM.memo_put(,'KOMENT')
      ?}
   ?};
   #GSXM.ref()
";

{? _typ='GSPN'
|| _root:=_update(_typ,,'IsInPayHistory','Wynagrodzenia',
      '"Moje wynagrodzenia" -> na zakładce "Wynagrodzenia" (dane prezentowane w formie tabelki).',
      20
    );
   _update(_typ,_root,'IsOnPayAnalysisChart','Analiza wynagrodzeń',
      '"Moje wynagrodzenia" -> na zakładce "Analiza wynagrodzeń" (dane w postaci wykresu).\n'
      '"Mój zespół" -> "Warunki współpracy zespołu", na zakładce "Mój zespół", w kafelku "Aktualne warunki zespołu" '
      'należy kliknąć w imię, nazwisko konkretnego pracownika. Po otwarciu nowego widoku ("Karta pracownika"), '
      'dane (w postaci wykresu) prezentowane są w zakładce "Analiza wynagrodzeń".\n'
      '\n'
      '"Karta pracownika" (otwierana po kliknięciu w imię, nazwisko konkretnego pracownika) prezentowana jest jeszcze '
      'w wielu innych miejscach.'
   );
   _update(_typ,_root,'IsOnPayCompChart','Składniki',
      '"Moje wynagrodzenia" ->\n'
      ' * kafelek "Podsumowanie ostatniego wynagrodzenia", po wybraniu akcji "Szczegóły" - dane prezentowane w kafelku '
      '"Składniki" (w postaci wykresu kołowego);\n'
      ' * zakładka "Wynagrodzenia", po wybraniu konkretnej listy płac - dane prezentowane w kafelku '
      '"Składniki" (w postaci wykresu kołowego).'
   )

|? _typ='GSWN'
|| _update(_typ,,'IsInPersonCoopTerms','Szczegóły warunków / Historia zmian',
      '"Moje wynagrodzenia" -> na zakładce "Szczegóły warunków":\n'
      ' * kafelek "Szczegóły warunków" (dane w formie tabelki);\n'
      ' * kafelek "Historia zmian" (dane w formie wykresu).'
   );
   _update(_typ,,'IsInTeamCoopTerms','Aktualne warunki zespołu',
      '"Mój zespół" -> "Warunki współpracy zespołu", na zakładce "Mój zespół" (dane w postaci tabelki).',
      10
   );
   _update(_typ,,'IsInPersonRecord','Pracownik',
      '"Moje wynagrodzenia" -> kafelek "Umowa i warunki".\n'
      '"Mój zespół" -> "Warunki współpracy zespołu", na zakładce "Mój zespół", w kafelku "Aktualne warunki zespołu" '
      'należy kliknąć w imię, nazwisko konkretnego pracownika. Po otwarciu nowego widoku ("Karta pracownika"), '
      'dane prezentowane są w kafelku "Pracownik".\n'
      '\n'
      '"Karta pracownika" (otwierana po kliknięciu w imię, nazwisko konkretnego pracownika) prezentowana jest jeszcze '
      'w wielu innych miejscach.'
   )
?};

GSXM.cntx_pop();
~~


\gswn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Inicjalizacja elementów warunków współpracy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('gsxm','dane_startowe','GSWN');

GSWN.cntx_psh();
GSWN.index('LP');
GSWN.prefix(exec('firma','ustawienia'));
{? ~GSWN.first()
|| _add:="
      GSWN.prefix(exec('firma','ustawienia'),_a);
      _order:={? GSWN.last() || GSWN.LP+1 || 1 ?};
      GSWN.blank();
      GSWN.GSWN:=_a;
      GSWN.LP:=_order;
      GSWN.SYSTEM:=_b;
      {? var_pres('_c')=type_of(null())
      || GSWN.BNFTT:=_c
      || GSWN.NAZWA:=_c;
         GSWN.OPIS:=_d
      ?};
      {? GSWN.add()
      || #GSWN.ref()
      ?}
   ";

   GSXM.cntx_psh();
   GSXM.index('FLAGA');
   GSXM.prefix('GSWN',);
   GSXW.cntx_psh();
   GSXW.f_clear();
   GSXW.index('OPIS');
   GSXW.prefix();

   _gwyn:=_add(0,'T','WYNAGRODZENIE','Wynagrodzenie');
   R.cntx_psh();
   R.index('RUBKOD');
   R.prefix();
   _cfg:=spli_str(
::    Kod, nazwa [, widok1 [, widok2 [, widok3]]]
      '100,Płaca zasadnicza / Stawka godzinowa,IsInPersonCoopTerms,IsInPersonRecord,IsInTeamCoopTerms|'
      '101,,IsInPersonCoopTerms,IsInPersonRecord,IsInTeamCoopTerms|'
      '102,|'
      '110,,IsInPersonCoopTerms,IsInPersonRecord,IsInTeamCoopTerms',
      '|'
   );
   {! _lpe:=1 .. obj_len(_cfg)
   |! _poz:=spli_str(_cfg[_lpe],',');
      {? _add(_gwyn,'T',_poz[1],{? _poz[2]<>'' || _poz[2] |? R.find_key(#_poz[1]) || R.RT || _poz[1] ?})
      || {! _lpw:=3 .. obj_len(_poz)
         |! {? GSXM.find_key(_poz[_lpw],)
            || GSXW.blank();
               GSXW.FIRMA:=GSWN.FIRMA;
               GSXW.N:=GSWN.uidref();
               GSXW.GSXM:=GSXM.ref();
               GSXW.add()
            ?}
         !}
      ?};
      obj_del(_poz)
   !};
   R.cntx_pop();

   _gsxm:={? GSXM.find_key('IsInPersonCoopTerms',) || GSXM.ref() || null() ?};

   _gbenefit:=_add(0,'T','BENEFITY','Benefity');
   BNFTT.cntx_psh();
   BNFTT.index('AKRONIM');
   BNFTT.prefix(exec('firma','ustawienia'));
   {? BNFTT.first()
   || {!
      |? {? _add(_gbenefit,'N',BNFTT.ref()) & _gsxm
         || GSXW.blank();
            GSXW.FIRMA:=GSWN.FIRMA;
            GSXW.N:=GSWN.uidref();
            GSXW.GSXM:=_gsxm;
            GSXW.add()
         ?};
         BNFTT.next()
      !}
   ?};
   BNFTT.cntx_pop();

   GSXW.cntx_pop();
   GSXM.cntx_pop()
?};
GSWN.cntx_pop();

~~


\gspn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Inicjalizacja grup specjalnych (systemowych) i aktualizacja miejsc prezentacji.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('gsxm','dane_startowe','GSPN');

GSPN.cntx_psh();
GSPN.index('LP');
GSPN.prefix(exec('ref_firma','ustawienia'));
{? ~GSPN.first()
|| GSXM.cntx_psh();
   GSXM.index('FLAGA');
   GSXM.prefix('GSPN',);
   GSXW.cntx_psh();
   GSXW.f_clear();
   GSXW.index('OPIS');
   GSXW.prefix();
   GSPP.cntx_psh();
   GSPP.index('GSPNR');
   GSPP.prefix();
   R.cntx_psh();
   R.index('RUBKOD');
   R.prefix();

   _add:="
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Kod dodający informacje o grupie.
::   WE:  _a  [STRING] - Grupa systemowa [T/N].
::        _b  [STRING] - Symbol grupy.
::        _c  [STRING] - Etykieta grupy.
::       [_d] [STRING] - Tytuł kolumny [domyślnie: _c].
::       [_e] [STRING] - Kategoria składników grupy [X/+/-/I].
::       [_f] [STRING] - Lista kodów składników płacowych należących do grupy. Kod z minusem oznacza, że składnik ma
::                       być wysyłany na portal ze znakiem przeciwnym.
::       [_g] [STRING] - Lista kodów widoków.
::   WY: Wynik operacji.
::----------------------------------------------------------------------------------------------------------------------
      _system:=_a;
      _symbol:=_b;
      _etykieta:=_c;
      _tytul:={? var_pres('_d')=type_of('') || _d || _etykieta ?};
      _kat:={? var_pres('_e')=type_of('') || _e || 'X' ?};
      _poz:={? var_pres('_f')=type_of('') || _f || '' ?};
      _gsxms:={? var_pres('_g')=type_of('') || _g || '' ?};

      _lp:={? GSPN.last() || GSPN.LP ?}+1;
      GSPN.blank();
      GSPN.LP:=_lp;
      GSPN.SYSTEM:=_system;
      GSPN.SYMBOL:=_symbol;
      GSPN.TYTK:=_etykieta;
      GSPN.TYTW:=_tytul;
      GSPN.KAT:=_kat;
      {? GSPN.add() & _poz<>''
      || _ar:=spli_str(_poz,',');
         {! _lp:=1 .. obj_len(_ar)
         |! {? (_rn:=#_ar[_lp])<>0 & R.find_key(fabs(_rn))
            || GSPP.blank();
               GSPP.R:=R.ref();
               GSPP.MINUS:={? _rn<0 || 'T' || 'N' ?};
               GSPP.add()
            ?}
         !};
         {? _gsxms<>''
         || _poz:=spli_str(_gsxms,',');
            {! _lpw:=1 .. obj_len(_poz)
            |! {? GSXM.find_key(_poz[_lpw],)
               || GSXW.blank();
                  GSXW.FIRMA:=GSPN.FIRMA;
                  GSXW.N:=GSPN.uidref();
                  GSXW.GSXM:=GSXM.ref();
                  GSXW.add()
               ?}
            !};
            obj_del(_poz)
         ?}
      ?}
   ";

   exec('__RUB','object');
:: Ustalmy zakres danych statystycznych (informacyjnych). Domyślnie będą to: procent podatku,
:: wartości nominalne (płaca zasadnicza, stawka godzinowa, dodatki) i nieobecności.
   _nbs:=__RUB.sys_sql(91)+',90,91,92,93,';
   R.cntx_psh();
   R.index('RUBKLKOD');
   R.prefix('N',);
   {? R.first()
   || {!
      |? _nbs+='%1,' [$R.RN];
         R.next()
      !}
   ?};
   R.cntx_pop();

   _add('N','STAT','Dane statystyczne','Dane statystyczne','I',_nbs-1);
   _add('N','ZASADNICZE','Zasadnicze','Wynagrodzenie zasadnicze','+','100,105,200,499',
      'IsInPayHistory,IsOnPayAnalysisChart,IsOnPayCompChart');
   _add('N','DODATKI','Dodatki','Wynagrodzenie dodatkowe','+','101,102,103,106,107,108,110',
      'IsInPayHistory,IsOnPayAnalysisChart,IsOnPayCompChart');
   _add('N','PREMIE','Premie',,'+','150,7065,7099,7100,7101,7102',
      'IsInPayHistory,IsOnPayAnalysisChart,IsOnPayCompChart');
   _add('N','URLOP','Wyn./Śr. urlop.','Wynagrodzenie/Średnia urlop.','+','436,437,438,439,442',
      'IsInPayHistory,IsOnPayAnalysisChart,IsOnPayCompChart');
   _add('N','WYNCHOR','Wyn. chorob.','Wynagrodzenie chorobowe','+','465,467,468,469,470',
      'IsInPayHistory,IsOnPayAnalysisChart,IsOnPayCompChart');
   _add('T','$BRUTTO','Brutto','Wynagrodzenie brutto','+','500','IsInPayHistory');
   _add('N','ZASILKI','Zasiłki',,'+','510,511,512,513,516,517,523,524,7017,529,530,531,532,537,7018,7071',
      'IsInPayHistory,IsOnPayAnalysisChart,IsOnPayCompChart');
   _add('N','DELEGACJE','Delegacje',,'+','730,731,732,733,734,735',
      'IsInPayHistory,IsOnPayAnalysisChart,IsOnPayCompChart');
   _add('N','ZFSS','ZFŚS','Zakładowy Fundusz Świadczeń Socjalnych','+','7103,7104,746,7105,7106,7107',
      'IsInPayHistory,IsOnPayAnalysisChart,IsOnPayCompChart');
   _add('T','eMojeWyn_ZFSSZUS','Zwiększ. podst. ZUS','Zwiększenie podstawy ZUS','I','750',
      'IsInPayHistory');
   _add('N','ZUS','ZUS zatr.','ZUS zatrudniony','-','765,766,767','IsInPayHistory');
   _add('T','PPKPODSTAWA','PPK - podstawa','PPK - podstawa do wyliczenia wpłat',,$__RUB.sys_kod(70));
   _add('T','PPKPROCENTPODPL','PPK - % wpłaty podstawowej firmy','PPK - procent wpłaty podstawowej firmy',,
      $__RUB.sys_kod(710));
   _add('T','PPKPROCENTDODPL','PPK - % wpłaty dodatkowej firmy','PPK - procent wpłaty dodatkowej firmy',,
      $__RUB.sys_kod(711));
   _add('T','PPKPROCENTPODPR','PPK - % wpłaty podstawowej zatrudnionego',
      'PPK - procent wpłaty podstawowej zatrudnionego',,$__RUB.sys_kod(712));
   _add('T','PPKPROCENTDODPR','PPK - % wpłaty dodatkowej zatrudnionego',
      'PPK - procent wpłaty dodatkowej zatrudnionego',,$__RUB.sys_kod(713));
   _add('T','PPKSKLPODPL','PPK - wpłata podstawowa firmy',,,'%1,%2' [$__RUB.sys_kod(720),$__RUB.sys_kod(742)],
      'IsInPayHistory');
   _add('T','PPKSKLDODPL','PPK - wpłata dodatkowa firmy',,,$__RUB.sys_kod(721),'IsInPayHistory');
   _add('T','PPKSKLPODPR','PPK - wpłata podstawowa zatrudnionego',,'-',
      '%1,-%2' [$__RUB.sys_kod(722),$__RUB.sys_kod(741)],'IsInPayHistory');
   _add('T','PPKSKLDODPR','PPK - wpłata dodatkowa zatrudnionego',,'-',$__RUB.sys_kod(723),'IsInPayHistory');
   _add('T','eMojeWyn_ZFSSPOD','Zwiększ. podst. podatk.','Zwiększenie podstawy podatku','I','779');
   _add('N','ZPPRZYCHOD','ZP: Przychód','Zwolniony przychód (Art.21 ust. 1 pkt 148)','X','7094');
   _add('N','ZPKU','ZP: Koszty uzysk.','Koszty uzyskania dla zwolnionego przychodu (Art.21 ust. 1 pkt 148)','X','7096');
   _add('N','ZPULGA','ZP: Ulga','Ulga dla zwolnionego przychodu (Art.21 ust. 1 pkt 148)','X','7097');
   _add('N','SKLZDR','Skł. zdrow. pobr.','Składka zdrowotna pobrana','-','792','IsInPayHistory');
   _add('N','PODATEK','Podatek','Zaliczka na podatek dochodowy','-','797,798,799','IsInPayHistory');
   _add('N','KOMORNIK','Potr. komornicze','Potrącenia alimentacyjno-komornicze','-','824,825','IsInPayHistory');
   _add('N','POTRINNE','Potr. inne','Potrącenia inne','-','826,827,7066,7067,8310,811,812,822,823','IsInPayHistory');
   _add('T','$NETTO','Netto','Wynagrodzenie netto',,'990','IsInPayHistory');

   R.cntx_pop();
   GSPP.cntx_pop();
   GSXW.cntx_pop();
   GSXM.cntx_pop()
?};
GSPN.cntx_pop();

~~


\zrpn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Inicjalizacja standardowych kolumn zestawień rocznych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZRPN.cntx_psh();
ZRPN.index('POLE');
ZRPN.prefix(exec('ref_firma','ustawienia'));
{? ~ZRPN.first()
|| ZRPP.cntx_psh();
   ZRPP.prefix();
   R.cntx_psh();
   R.index('RUBKOD');
   R.prefix();

   _add:="
      ZRPN.blank();
      ZRPN.POLE:=_a;
      ZRPN.LP:=_b;
      ZRPN.OPIS:=_c;
      ZRPN.WIDOK:=_d;
      ZRPN.TYP:=_e;

      do();
      {? ZRPN.add() & var_pres('_g')=type_of('') & +_g
      || {? var_pres('_f')=type_of('') & +_f
         || ZRPP.blank();
            ZRPP.OPIS:=_f;
            _zrpp:={? ZRPP.add() || #ZRPP.ref() ?}
         || _zrpp:=0
         ?};
         _ar:=spli_str(_g,',');
         {! _lp:=1 .. obj_len(_ar)
         |! _rn:=#_ar[_lp];
            {? R.find_key(_rn)
            || ZRPP.blank();
               ZRPP.ZRPP:=_zrpp;
               ZRPP.R:=R.ref();
               ZRPP.add()
            ?}
         !}
      ?};
      end()
   ";

   _add('WZO',1,'Wynagrodzenie zasadnicze nominalne',1,'O',,'90,91');
   _add('WZR',2,'Wynagrodzenie zasadnicze wypłacone',1,'S',,'100');
   _add('WPR',3,'Pozostałe wynagrodzenie',2,'S','Premie','150');
   _add('PITR',4,'Przychód (PIT-11)',1,'S',,'765,766,767,780');
   _add('KPAR',5,'Korzyści z praw autorskich',1,'S',,'7136');

   R.cntx_pop();
   ZRPP.cntx_pop()
?};
ZRPN.cntx_pop();
~~


\os_zwslo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Wypełnienie słownika z typami zwolnionego przychodu.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
OS_ZWSLO.cntx_psh();
OS_ZWSLO.index('KOD');
OS_ZWSLO.prefix(exec('ref_firma','ustawienia'));
{? ~OS_ZWSLO.first()
|| _addOsZwslo:=
      "OS_ZWSLO.blank(1);
       OS_ZWSLO.KOD:=_b;
       OS_ZWSLO.RODZAJ:=_c;
       OS_ZWSLO.ROCZNE:=_d;
       OS_ZWSLO.ZDR:=_e;
       OS_ZWSLO.TYP:=_a;
       OS_ZWSLO.PODATNIK:=_f;
       OS_ZWSLO.ROZLICZ:=_g;
       OS_ZWSLO.PO:=_h;
       OS_ZWSLO.DO_OB:=_i;
       {? var_pres('_j')=type_of(0) & __RUB.find_def('S',_j)
       || OS_ZWSLO.RA_DEF:=RA_DEF.ref()
       ?};
       OS_ZWSLO.add(1)
      ";
   _dU:=date(2022,7,1)-1;
   _d0:=date(0,0,0);
   _addOsZwslo('O','ZWPOD','Młody pracownik (art. 21 ust. 1 pkt 148)',
               'N','T','N','T','T',_d0,90202);
   _addOsZwslo('O','ZWPODE','Emeryt (art. 21 ust. 1 pkt 154)',
               'N','T','N','T','N',_d0,90202);
   _addOsZwslo('O','ZWPODD','Wielodzietność (art. 21 ust. 1 pkt 153)',
               'N','T','N','T','N',_d0,90202);
   _addOsZwslo('O','ZWPODP','Powrót z zagranicy (art. 21 ust. 1 pkt 152)',
               'T','T','N','T','N',_d0,90202);
   _addOsZwslo('W','UZ_POD','Wniosek o niepobieranie zaliczek na podatek dochodowy',
               'N','T','T','T','N',_d0,90812);
   _addOsZwslo('W','KL_SRED','Wniosek o zaprzestanie stosowania ulgi dla klasy średniej',
               'T','T','T','N','N',_dU);
   _addOsZwslo('W','TP_ZAL_P','Wniosek o nieprzedłużanie terminów poboru zaliczek (pracownik)',
               'T','T','N','N','N',_dU);
   _addOsZwslo('W','TP_ZAL_Z','Wniosek o nieprzedłużanie terminów poboru zaliczek (zleceniobiorca)',
               'T','T','N','N','N',_dU);
   _addOsZwslo('W','KU_50%','Wniosek o niestosowanie 50% kosztów uzyskania przychodu',
               'N','T','T','N','T',_d0)
?};
OS_ZWSLO.cntx_pop();
~~


\os_grru
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Wypełnienie słownika rodzajów płatników (złączenie z rodzajami umów)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
OS_GRRU.trig_off('*','*');
OS_GRRU.cntx_psh();
OS_GRRU.prefix();
{? ~OS_GRRU.first()
|| SLO_KOD.cntx_psh();
   SLO_KOD.index('KOD');
   SLO_KOD.prefix(exec('slo_typ','ext_slo','RODZ_PL'));
   RU.cntx_psh();
   RU.index('K');
   RU.prefix(exec('slo_typ','ext_slo','UMZLEC'));
   {? SLO_KOD.find_key('UM_SZKOL')
   || _umowy:=spli_str('v,y',',');
      {! _ii:=1..obj_len(_umowy)
      |! {? RU.find_key(_umowy[_ii])
         || OS_GRRU.SLO_KOD:=SLO_KOD.ref();
            OS_GRRU.RU:=RU.ref();
            OS_GRRU.add()
         ?}
      !};
      obj_del(_umowy)
   ?};
   {? SLO_KOD.find_key('UM_ZLEC')
   || _umowy:=spli_str('1,2,3,4,5,6',',');
      {! _ii:=1..obj_len(_umowy)
      |! {? RU.find_key(_umowy[_ii])
         || OS_GRRU.SLO_KOD:=SLO_KOD.ref();
            OS_GRRU.RU:=RU.ref();
            OS_GRRU.add()
         ?}
      !};
      obj_del(_umowy)
   ?};
   RU.cntx_pop();
   SLO_KOD.cntx_pop()
?};
OS_GRRU.cntx_pop();
OS_GRRU.trig_on('*','*');
~~


\ppsf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.51]
:: OPIS: Praca poza siedzibą firmy - dane początkowe
::   WE: [_a] [NUMBER] - Tryb aktualizacji [0*/1].
::   WY: _ret [INTEGER] - 0/1. 0 - jeśli którakolwiek operacja (dodania, poprawienia) się niepowiodła
::----------------------------------------------------------------------------------------------------------------------
_update:=var_pres('_a')=type_of(0) & _a;
_ret:=1;

{? ~exec('is_pzd01','ppsf')
|| return(0)
?};

_fun:=obj_new('tSTRING','update','firma','r','t','l','rozd','no');
_fun.tSTRING:=type_of('');
_fun.update:=_update;
_fun.firma:=exec('firma','ustawienia');
_fun.r:="
   _kod:=_a;
   _nazwa:=_b;
   _skrot:=_c;
   _limity:=_d;
   _put:=PPSFR.find_key(_kod,);
   {? _put
   || {? .update=0
      || return(PPSFR.ref())
      ?}
   || PPSFR.blank();
      PPSFR.FIRMA:=.firma;
      PPSFR.KOD:=_kod
   ?};
   PPSFR.NAZWA:=_nazwa;
   PPSFR.SKROT:=_skrot;
   PPSFR.SYSTEM:='T';
   PPSFR.LIMITY:=_limity;
   {? {? _put || PPSFR.put() || PPSFR.add() ?}
   || PPSFR.ref()
   || null()
   ?}
";

_fun.t:="
   _ppsfr:=_a;
   _opis:=_b;
   _rn:=_c;
   _no:=_d;
   _skl_wn:=_e;

   _put:=PPSFT.find_key(_ppsfr,_opis,);
   {? _put
   || {? .update=0
      || return(PPSFT.ref())
      ?}
   || PPSFT.blank();
      PPSFT.FIRMA:=.firma;
      PPSFT.PPSFR:=_ppsfr;
      PPSFT.OPIS:=_opis
   ?};
   PPSFT.PPSF_NO:=_no;
   PPSFT.SKL_WN:=_skl_wn;
   {? _rn
   || {? R.find_key(_rn)
      || PPSFT.R:=R.ref()
      || return(0)
      ?}
   ?};
   PPSFT.SYSTEM:='T';
   {? _put
   || PPSFT.put()
   || PPSFT.add()
   ?}
";

_fun.l:="
   _ppsfr:=_a;
   _rok:=_b;
   _sl:=_c;
   _ll:=_d;
   _lg:=_e;

   _put:=PPSFL.find_key(_ppsfr,_rok);
   {? _put
   || {? .update=0
      || return(PPSFL.ref())
      ?}
   || PPSFL.blank();
      PPSFL.FIRMA:=.firma;
      PPSFL.PPSFR:=_ppsfr;
      PPSFL.P:=null();
      PPSFL.R:=_rok
   ?};
   PPSFL.SL:=_sl;
   PPSFL.L:=_ll;
   PPSFL.LG:=_lg;
   {? _put
   || PPSFL.put()
   || PPSFL.add()
   ?}
";

_fun.rozd:="
   _ppsfr:=_a;
   _kod:=_b;
   _nazwa:=_c;
   _zakres:=_d;
   _wart:=_e;
   _jml:=_f;
   _ol:=_g;
   _wybdni:=_h;
   _dx:=_i;

   _put:=PPSFROZD.find_key(_kod,);
   {? _put
   || {? .update=0
      || return(PPSFROZD.ref())
      ?}
   || PPSFROZD.blank();
      PPSFROZD.PPSFR:=_ppsfr;
      PPSFROZD.KOD:=_kod
   ?};
   PPSFROZD.NAZWA:=_nazwa;
   PPSFROZD.ZAKRES:=_zakres;
   {? type_of(_wart)=type_of(0)
   || PPSFROZD.WARTD:=_wart
   |? type_of(_wart)=type_of(time())
   || PPSFROZD.WARTG:=_wart
   ?};
   PPSFROZD.JML:=_jml;
   PPSFROZD.OL:=_ol;
   PPSFROZD.WYBDNI:=_wybdni;
   PPSFROZD.OSW:='T';
   {? +_dx
   || {! _lp:=1 .. 7
      |! {? _dx*$_lp
         || ($('PPSFROZD.D%1:=_a'[$_lp]))('T')
         ?}
      !}
   ?};
   {? _put
   || PPSFROZD.put()
   || PPSFROZD.add()
   ?}

";

_fun.no:="
   _kod:=_a;
   _opis:=_b;
   _system:=_c;

   _put:=PPSF_NO.find_key(_kod,);
   {? _put
   || {? .update=0
      || return(PPSF_NO.ref())
      ?}
   || PPSF_NO.blank();
      PPSF_NO.FIRMA:=.firma;
      PPSF_NO.KOD:=_kod
   ?};
   PPSF_NO.OPIS:=_opis;
   PPSF_NO.SYSTEM:=_system;
   _wx_size:=exec('ppsf_no_wx_size','ppsf');
   {! _lp:=1 .. _wx_size
   |! _ib:=_lp*2+2;
      _wx:={? var_pres('_[%1]'[$_ib])=.tSTRING || _[_ib] || '' ?};
      _trx:={? var_pres('_[%1]'[$(_ib+1)])=.tSTRING || _[_ib+1] || '' ?};
      {? (_wx<>'T' & _wx<>'N') | _trx=''
      || _wx:=_trx:=''
      ?};
      ($('PPSF_NO.W%1:=_a; PPSF_NO.TR%1:=_b'[$_lp]))(_wx,_trx)
   !};
   {? {? _put || PPSF_NO.put() || PPSF_NO.add() ?}
   || PPSF_NO.ref()
   || null()
   ?}
";

R.cntx_psh();
R.index('RUBKOD');
R.prefix();
PPSFR.cntx_psh();
PPSFR.index('KOD');
PPSFR.prefix(_fun.firma);
PPSFT.cntx_psh();
PPSFT.index('PPSFR');
PPSFT.prefix();
PPSFL.cntx_psh();
PPSFL.index('DOM');
PPSFL.prefix(_fun.firma,null());
PPSFROZD.cntx_psh();
PPSFROZD.index('RKOD');
PPSFROZD.prefix();
PPSF_NO.cntx_psh();
PPSF_NO.index('KOD');
PPSF_NO.prefix(_fun.firma);

_pzd01:=_fun.no('PZD01','Praca zdalna','T'
   ,'T','Na stanowisku pracy zdalnej w miejscu przeze mnie wskazanym i uzgodnionym z pracodawcą '
        'są zapewnione bezpieczne i higieniczne warunki tej pracy.'
   ,'T','Zapoznałem się/zapoznałam się z oceną ryzyka zawodowego na stanowisku pracy zdalnej '
        'i informacją z wyników tej oceny.'
   ,'T','Zapoznałem się/zapoznałam się z procedurą bezpieczeństwa i ochrony informacji na zdalnym stanowisku pracy '
        'i zobowiązuję się do jej przestrzegania.'
   ,'T','Zostałem/zostałam zapoznany/zapoznana ze sposobem potwierdzania obecności w pracy w dniu świadczenia pracy '
        'zdalnej okazjonalnej.'
   ,'T','Potwierdzam wolę stosowania zasad kontroli wykonywania pracy zdalnej, przestrzegania bezpieczeństwa '
        'i higieny pracy, bezpieczeństwa i ochrony informacji, w terminie wynikającym z niniejszego wniosku.'
);

_ret:=_pzd01 &
   _fun.r('DELEG','Delegacje','D','N') &
   _fun.r('KARMI','Karmienie piersią','','N');
_ppsfr:=_fun.r('ZDALN_ST','Praca zdalna stała','ZS','N');
{? _ppsfr
|| _ret*=(_fun.t(_ppsfr,'Praca zdalna stała',7138,_pzd01,'N')<>null());
   PPSFROZD.prefix(_ppsfr);
   {? _fun.update | ~PPSFROZD.first()
::    Rozkładów nie pielęgnujemy - dodajemy tylko na starcie (chyba, że update).
   || _ret*=
         _fun.rozd(_ppsfr,'ST','100% pracy zdalnej','S',7,'D','T','N','') &
         _fun.rozd(_ppsfr,'HYBRYDA_2DNI','Hybryda: dowolne 2 dni w tygodniu','H',2,'D','T','N','') &
         _fun.rozd(_ppsfr,'HYBRYDA_PN_WT','Hybryda: Poniedziałek, Wtorek','H',2,'D','T','T','12');
      ~~
   ?}
|| _ret:=0
?};
_ppsfr:=_fun.r('ZDALN_OK','Praca zdalna okazjonalna','ZO','T');
{? _ppsfr
|| _ret*=
      _fun.t(_ppsfr,'Praca zdalna okazjonalna',7135,_pzd01,'T') &
      _fun.l(_ppsfr,2023,'D',24,*0);
   PPSFROZD.prefix(_ppsfr);
   {? _fun.update | ~PPSFROZD.first()
::    Rozkładów nie pielęgnujemy - dodajemy tylko na starcie (chyba, że update).
   || _ret*=(_fun.rozd(_ppsfr,'D24','24 dni w roku','H',24,'D','R','N','')<>null());
      ~~
   ?}
|| _ret:=0
?};

PPSF_NO.cntx_pop();
PPSFROZD.cntx_pop();
PPSFL.cntx_pop();
PPSFT.cntx_pop();
PPSFR.cntx_pop();
R.cntx_pop();

PPSF_TA.cntx_psh();
PPSF_TA.clear();
_add:="
   {? (_a.index('KOD'); ~_a.find_key(_b)) & (_a.index('NAZWA'); ~_a.find_key(_c))
   || _a.blank();
      _a.KOD:=_b;
      _a.NAZWA:=_c;
      _a.SYSTEM:='T';
      _a.K:=_d;
      _a.add()
   || _a.ref()
   ?}
";
_ret*=
   _add(PPSF_TA,'DOMYŚLNY','Adres domyślny','T') &
   _add(PPSF_TA,'DODATKOWY','Adres dodatkowy','T') &
   _add(PPSF_TA,'AD HOC','Adres na potrzebę rejestracji pracy okazjonalnej','N');
PPSF_TA.cntx_pop();

_ret


\kontrola_trzezwosci
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Dane dla Kontroli trzeźwości
::   WE:
::   WY: 1/0/-1
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('is_pzd01','ppsf')
|| return(0)
?};
params_set('ret',_ret:=obj_new('ret'));
_ret.ret:=1;
Cntx.psh(SLO_KOD,SLO_TYP,KOT_JM,JM,KOTLIMIT);
Cntx.clr(SLO_KOD,SLO_TYP,KOT_JM,JM,KOTLIMIT);
:: aktualizacja SLO_KOD
SLO_KOD.index('KOD');
_addk:="
   params_set(_par:=params_get().ret);
   SLO_KOD.prefix(_a,_b,_b);
   {? ~SLO_KOD.first()
   || SLO_KOD.blank(1);
      SLO_KOD.SLO_TYP:=_a;
      SLO_KOD.KOD:=_b;
      SLO_KOD.NAZWA:=_c;
      SLO_KOD.SYSTEM:=_d;
      _par.ret*=SLO_KOD.add()
   ?};
   SLO_KOD.ref()
";
:: aktualizacja KOT_JM
_typ:=exec('slo_typ','ext_slo','KOT_RODZ');
KOT_JM.index('NUMER');
KOT_JM.clear();
JM.index('KOD');
JM.prefix();
_addKOT:="
   params_set(_par:=params_get().ret);
   {? ~KOT_JM.find_key(_a)
   || KOT_JM.blank();
      KOT_JM.LP:=_a;
      KOT_JM.JM:=_b;
      KOT_JM.SJM:=_c;
      KOT_JM.TYP:=_d;
      KOT_JM.KOT_RODZ:=_e;
      _par.ret*=KOT_JM.add(1)
   ?}
";
_addJM:="
   params_set(_par:=params_get().ret);
   {? ~JM.find_key(_a,)
   || JM.blank();
      JM.KOD:=_a;
      JM.NAZ:=_b;
      JM.DOKL:=_c;
      {? _par.ret*=JM.add(1) || JM.ref() || null() ?}
   || JM.ref()
   ?}
";
_addKOT(1,_addJM('promil','promil',2),'[‰]','T',_ref:=_addk(_typ,'ALKO','Obecność alkoholu','T'));
_addKOT(2,_addJM('mg/dm3','miligram/decymetr 3',2),'[mg/dm³]','T',_ref);
_addKOT(3,_addJM('T/N','test',0),'[T/N]','N',_addk(_typ,'NARKO','Obecność innych substancji','T'));
&_addKOT; &_typ; &_addJM;
:: aktualizacja KOTLIMIT
KOTLIMIT.index('UNIQ');
KOTLIMIT.prefix();
KOT_JM.index('UNIQ');
KOT_JM.prefix();
JM.index('KOD');
JM.prefix();
_addKOT:="
   params_set(_par:=params_get().ret);
   _kjm:={? KOT_JM.find_key(_jm:={? JM.find_key(_b,) || JM.ref() || null() ?}) || KOT_JM.ref() || null() ?};
   {? ~KOTLIMIT.find_key(_a,_jm)
   || KOTLIMIT.blank();
      KOTLIMIT.STAN:=_a;
      KOTLIMIT.KOT_JM:=_kjm;
      KOTLIMIT.WYNIK:=_c;
      KOTLIMIT.TEST:=_d;
      KOTLIMIT.OK:=_e;
      _par.ret*=KOTLIMIT.add(1)
   ?}
";
_typ:=exec('slo_typ','ext_slo','KOTLIMIT');
_addKOT(_addk(_typ,'TRZEŹWY','Pracownik trzeźwy','T'),'promil',0,'','T');
_addKOT(_addk(_typ,'TRZEŹWY','Pracownik trzeźwy','T'),'mg/dm3',0,'','T');
_addKOT(_addk(_typ,'UŻYCIE','Pracownik w stanie po użyciu alkoholu','T'),'promil',0.2,'','N');
_addKOT(_addk(_typ,'UŻYCIE','Pracownik w stanie po użyciu alkoholu','T'),'mg/dm3',0.1,'','N');
_addKOT(_addk(_typ,'NIETRZ.','Pracownik w stanie nietrzeźwości','T'),'promil',0.5,'','N');
_addKOT(_addk(_typ,'NIETRZ.','Pracownik w stanie nietrzeźwości','T'),'mg/dm3',0.25,'','N');
_addKOT(_addk(_typ,'TAK_INNA','Pracownik po użyciu innej substancji niż alkohol','T'),'T/N',0,'T','N');
_addKOT(_addk(_typ,'NIE_INNA','Brak śladów użycia innych substancji niż alkohol','T'),'T/N',0,'N','T');
&_typ; &_addKOT;
_typ:=exec('slo_typ','ext_slo','ZAOM');
_addk(_typ,'KOT_TEST','Kontrola trzeźwosci','T');
&_addk;
Cntx.pop(SLO_KOD,SLO_TYP,KOT_JM,JM,KOTLIMIT);
{? _ret.ret=0 || -1 || 1 ?}

:Sign Version 2.0 jowisz:1045 2023/12/14 14:25:16 2f2999420fbe851acbae8661f91a0da2d09d352e73f7182aec30ea3dad0a1f0be847e84471dc086540db54d5d49de47a63086fe5baee184af6029a96fbab888d15223e2d417dc281ebc05ceb75e43faf9e27e213c0f5d4998595ac5e1a181d2e5179b92f6f34f63d9effe8b82b7c14673153b43003e8351d2ac3453c359fdf2f
