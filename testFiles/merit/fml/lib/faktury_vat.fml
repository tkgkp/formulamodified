:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: faktury_vat.fml
:: Utworzony: 27.03.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Obsługa dokumentów sprzedaży i zakupu - rozpiska vat
::======================================================================================================================


\buffer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Zwraca obiekt nazwany - bufor tabeli FAKSV
::   WY: obj_new()
::----------------------------------------------------------------------------------------------------------------------
exec('FAKSV','buffer')


\faks_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wyswietla tabele stawek VAT - FAKSV
::   WE: [_a] - 1/0 czy select()
::  OLD: \faks_vat/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>1 || _a:=1 ?}  || _a:=1  ?};

_faks:=$FAKS.ref();
FAKSV.index('FF_SV');
FAKSV.prefix('',_faks);
FAKSV.win_sel('WER');
{? ~FAKSV.first()
||
   exec('faksv_mk','faktury_vat',_faks)
?};
exec('fsv_sum','faktury_vat');
FAKSV.first();
FAKSV.actions('WER','sk:sk',,1);
{? _a=1 || FAKSV.select() ?};
''


\faksv_mk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: tworzenie tabelki stawek VAT
::   WE: _a - FAKS.refsql
::  OLD: \faksv_mk/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_p300306:=exec('get','#params',{? BEER.SZ='S' || 300306 || 300308 ?},2)='N';

{? _p300306
||
   exec('faksv_mk_old','faktury_vat',_a);
   return
?};

_f_ref:=_a;
_f_name:=form(8+_a);
_sv:='brak';
_ww_z:=_wn_z:=_wv_z:=_wb_z:=_ww:=_wn:=_wv:=_wb:=0;
FAKSV.cntx_psh();
FAKS.cntx_psh();
FAP.cntx_psh();
FAKSPL.cntx_psh();
FAKSV.use('faksv'+(_f_name+3));
FAKSV.prefix();
FAKS.use(_f_name);
FAKS.prefix();
FAP.use('fakpo'+(_f_name+3));
FAP.prefix();
FAKSPL.use('fakpl'+(_f_name+3));
FAKSPL.prefix();
{? FAKS.seek(_f_ref,_f_name)
||
   _faks:=$FAKS.ref();
   _walutowa:=FAKS.WAL<>FAKS.NWAL;

   {? FAKS.WHERE='L'
   ||
::    ustalenie kwoty zaliczki w walucie handlowej i opodatkowania
      _kw_zal:=_kw_wal:=0;
      {? FAKS.T().KOR='N'
      ||
         _kw_zal:={? _walutowa || (FAKS.KW_ZAL*FAKS.KRS)$2 || FAKS.KW_ZAL ?};
         _kw_wal:=FAKS.KW_ZAL
      ||
         _kw_wal:=FAKS.KW_ZAL;
         _lksql:=FAKS.LKSQL;
         {!
         |? _lksql<>''
         |!
            FAKS.cntx_psh;
            FAKS.use(ref_name(_lksql));
            FAKS.prefix;
            {? ~FAKS.seek(_lksql)
            ||
               _lksql:=''
            ||
               _kw_wal+=FAKS.KW_ZAL;
               _lksql:=FAKS.LKSQL
            ?};
            FAKS.cntx_pop
         !};
         _kw_zal:={? _walutowa || (_kw_wal*FAKS.KRS)$2 || _kw_wal ?}
      ?};

::    rozpisanie kwoty zaliczki wg % wartosci dla poszczegolnych stawek
      exec('rozp_zal','faktury_zalicz',$FAKS.ref,_kw_wal,_kw_zal,0);

::    skopiowanie z przeciwnym znakiem rozpiski vat zaliczek z faktury wyjsciowej (z wszystkich FAPOW)
      {? FAKS.T().KOR='T'
      ||
         X_VAT.cntx_psh;
         _x_ndx:=X_VAT.ndx_tmp('',,'SV',,,'SV',,);
         X_VAT.index(_x_ndx);
         _lksql:=FAKS.LKSQL;
         {!
         |? _lksql<>''
         |!
            FAKS.cntx_psh;
            FAKS.use(ref_name(_lksql));
            FAKS.prefix;
            {? ~FAKS.seek(_lksql)
            ||
               _lksql:=''
            ||
               _lksql:=FAKS.LKSQL;
               FAKSV.cntx_psh;
               FAKSV.use((FAKSV.name-3)+(FAKS.name+3));
               FAKSV.index('FF_SV');
               FAKSV.prefix('',$FAKS.ref);
               {? FAKSV.first
               ||
                  {!
                  |?
                     X_VAT.prefix(FAKSV.SV().KOD,FAKSV.SV().KOD);
                     {? X_VAT.first()
                     ||
                        X_VAT.WWN_Z-=FAKSV.WWN_Z;
                        X_VAT.WWV_Z-=FAKSV.WWV_Z;
                        X_VAT.WW_Z-=FAKSV.WW_Z;
                        X_VAT.WN_Z-=FAKSV.WN_Z;
                        X_VAT.WV_Z-=FAKSV.WV_Z;
                        X_VAT.WB_Z-=FAKSV.WB_Z;
                        X_VAT.put()
                     ||
                        X_VAT.blank();
                        X_VAT.SV:=FAKSV.SV().KOD;
                        X_VAT.WAL:=FAKSV.WAL().KOD;
                        X_VAT.KRS_ZAL:=FAKSV.KRS_ZAL;
                        X_VAT.KRS_END:=FAKSV.KRS_END;
                        X_VAT.WWN_Z:=-FAKSV.WWN_Z;
                        X_VAT.WWV_Z:=-FAKSV.WWV_Z;
                        X_VAT.WW_Z:=-FAKSV.WW_Z;
                        X_VAT.WN_Z:=-FAKSV.WN_Z;
                        X_VAT.WV_Z:=-FAKSV.WV_Z;
                        X_VAT.WB_Z:=-FAKSV.WB_Z;
                        X_VAT.add()
                     ?};
                     FAKSV.next
                  !}
               ?};
               FAKSV.cntx_pop
            ?};
            FAKS.cntx_pop
         !};
         X_VAT.ndx_drop(_x_ndx);
         X_VAT.cntx_pop
      ?};

::    przepisanie rozpiski vat zaliczki lub korekty zaliczki z X_VAT do FAKSV
      {? X_VAT.first()
      ||
         {!
         |?
            exec('x_vat2faksv','faktury_vat',_faks,'');
            X_VAT.next()
         !}
      ?};

::    aktualizacja stawek vat dla nierozliczonej czesci zaliczki - wykonywane dla faktury
      FAKS.cntx_psh;
      FAKS.use(ref_name(_faks));
      FAKS.prefix;
      {? FAKS.seek(_faks)
      ||
         _krs:=FAKS.KRS;
         {? FAKS.T().KOR='N'
         ||
            _ref:=FAKS.ref;
            _onum:=0;
            _msk:=exec('tab_mask','faktury_wspolne',5,form((FAKS.D~1)-2000,-2,0,'99'));
            _msk.blank; _msk.ROK:='hs'; _msk.add(1);
            _msk.clear;
            {? _msk.first
            ||
               FAKS.cntx_psh;
               {!
               |? FAKS.use((form(8+$_faks)-2)+_msk.ROK);
                  FAKS.index('OREFK');
                  FAKS.prefix(BEER.SZ,_faks);
                  {? FAKS.first
                  || {!
                     |? {? _onum<FAKS.ONUM & FAKS.AKC='T'
                        || _ref:=FAKS.ref
                        ?};
                        FAKS.next
                     !}
                  ?};
                  _msk.next
               !};
               FAKS.cntx_pop
            ?};
::          zmiana X_VAT jesli byla korekta do faktury
            {? _ref<>FAKS.ref
            ||
::             wyznaczenie kwoty zaliczki po korekcie
               FAPOW.cntx_psh;
               FAPOW.index('LACZ'); FAPOW.prefix($FAKS.ref);
               _kw_wal:={? FAPOW.first || FAPOW.KW_PO_K ?};
               FAPOW.cntx_pop;
               _kw_zal:={? _walutowa || (_kw_wal*FAKS.KRS)$2 || _kw_wal ?};

::             rozpisanie kwoty zaliczki wg % wartosci dla poszczegolnych stawek
               exec('rozp_zal','faktury_zalicz',$_ref,_kw_wal,_kw_zal)
            ?}
         ?};

::       odjecie rozliczonych zaliczek
         _xx_ndx:=XX_VAT.ndx_tmp('',,'SV',,);
         XX_VAT.index(_xx_ndx);
         FAPOW.cntx_psh;
         FAPOW.index('LACZ');
         FAPOW.prefix($FAKS.ref,'T');
         {? FAPOW.first
         ||
            FAKSV.cntx_psh;
            FAKSV.index('FAPOW_SV');
            {!
            |?
               {? (var_pres('__FAPOWR')<0 | __FAPOWR<>FAPOW.ref)
                  & (var_pres('__FAPOWT')<0 | __FAPOWT='KORWYC')
               ||
                  FAKSV.prefix($FAPOW.ref);
                  {? FAKSV.first()
                  ||
                     {!
                     |?
                        {? XX_VAT.find_key(FAKSV.SV().KOD)
                        ||
                           XX_VAT.WW_Z-=FAKSV.WW_Z; _kw_wal-=FAKSV.WW_Z;
                           XX_VAT.WB_Z-=FAKSV.WB_Z;
                           XX_VAT.put
                        ||
                           XX_VAT.SV:=FAKSV.SV().KOD;
                           XX_VAT.WW_Z:=-FAKSV.WW_Z;
                           XX_VAT.WB_Z:=-FAKSV.WB_Z;
                           XX_VAT.add
                        ?};
                        FAKSV.next
                     !};
                     _kw_zal:={? _walutowa || (_kw_wal*FAKS.KRS)$2 || _kw_wal ?}
                  ?}
               ?};
               FAPOW.next
            !};
            FAKSV.cntx_pop
         ?};
         FAPOW.cntx_pop
      ?};
      FAKS.cntx_pop;

::    jesli wycofanie akceptacji to vat dla czesci nierozliczonej przepisywany wprost z przygotowanej rozpiski XX_VAT

::    petla po FAPOW w petli X_VAT (stawek Vat)
      FAPOW.cntx_psh;
      _fapownd:=FAPOW.ndx_tmp(,,'FAKS',,,'FAKS_END',,1,'KW_ROZ',,1);
      FAPOW.index(_fapownd);
      FAPOW.prefix(_faks);
      {? FAPOW.first()
      ||
         {!
         |?
            X_VAT.prefix();
            {? X_VAT.first() || {! |? X_VAT.del() !} ?};
            X_VAT2.prefix();
            {? X_VAT2.first() || {! |? X_VAT2.del() !} ?};
            _fapow:=FAPOW.ref();

::          aktualizacja FAKSV nierozliczonych FAPOW
::          var_pres('fapow') & fapow=FAPOW.ref - warunek dotyczy przypadku korekty zaliczki do zera
            {? FAPOW.ROZ='N' | var_pres('fapow')=type_of(null) & fapow=FAPOW.ref
            ||
::             dla FAPOW tworzone sa osobne rekordy FAKSV wg brutto_do_rozliczenia
::             wykorzystywane pozniej do rozliczania faktur koncowych

::             _kw_roz1 - FAPOW rozliczajacy - kwota do rozl. wg dostepnych stawek vat w nierozliczonej czesci zaliczki
::                        FAPOW pozostla czesc - kwota dozliczenia wg reszty
::                        FAPOW zaliczka - kwota do rozliczenia wg proporcji
::             _kw_roz2 - kwota do rozliczenia wg proporcji
               _kw_roz1:=exec('kw_roz1','faktury_zalicz',$FAPOW.ref);
               _kw_roz2:=exec('kw_roz2','faktury_zalicz',$FAPOW.ref);
               _fp_kw_zal:={? _walutowa || (_kw_roz1*_krs)$2 || _kw_roz1 ?};
               _fp_kw_wal:=_kw_roz1;

               {? XX_VAT.first()
               ||
                  _korekta:=_fp_kw_zal;
                  _kor_wal:=_fp_kw_wal;

::                petelka po XX_VAT - rozpisanie stawek VAT wg wielu FAPOW
                  {!
                  |?
                     X_VAT.blank();
                     X_VAT.SV:=XX_VAT.SV;
                     X_VAT.WAL:=XX_VAT.WAL;

                     {? FAPOW.FAKS_END=''
                     ||
                        {? _kw_zal || X_VAT.WB_Z:=XX_VAT.WB_Z ?};
                        {? _kw_wal || X_VAT.WW_Z:=XX_VAT.WW_Z ?};
                        {? _kw_roz2=0 & exec('faksv_r_zal','faktury_vat',_faks)
                        ||
                           X_VAT.WN_Z:=XX_VAT.WN_Z;
                           X_VAT.WV_Z:=XX_VAT.WV_Z
                        ?}
                     ||
                        {? var_pres('YY_VAT')>100
                        ||
                           {? YY_VAT.find_key(X_VAT.SV)
                           ||
                              {? _kw_zal || X_VAT.WB_Z:=(_fp_kw_zal*YY_VAT.WB_Z/YY_VAT.KW_WAL)$2 ?};
                              {? _kw_wal || X_VAT.WW_Z:=(_fp_kw_wal*YY_VAT.WW_Z/YY_VAT.KW_ZAL)$2 ?}
                           ?}
                        ||
                           FAKSV.cntx_psh;
                           FAKSV.use('faksv'+(8+FAPOW.FAKS_END+3));
                           FAKSV.index('FAKS_SV');
                           FAKSV.prefix($exec('FindAndGet','#table',FAKS,FAPOW.FAKS_END,,,null()),X_VAT.SV);
                           _vatwdok:=FAKSV.first;
                           _vatkwww:=FAKSV.WW;
                           _vatkwwb:=FAKSV.WB;
:: odjęcie rozliczonych zaliczek
                           FAPOW.cntx_psh;
                           FAPOW.index('END_K');
                           FAPOW.prefix(FAPOW.FAKS_END,'N');
                           _loop:=FAPOW.first();
                           {!
                           |? _loop
                           |!
                              {? FAPOW.ROZ='T' & FAPOW.ref()<>_fapow
                              ||
                                 FAKSV.index('FAPOW_SV');
                                 FAKSV.prefix($FAPOW.ref,X_VAT.SV);
                                 {? FAKSV.first()
                                 ||
                                    _vatkwww-=FAKSV.WW_Z;
                                    _vatkwwb-=FAKSV.WB_Z
                                 ?}
                              ?};
                              _loop:=FAPOW.next()
                           !};
                           FAPOW.cntx_pop();
                           FAKSV.cntx_pop;
                           {? (_kw_zal | _kw_wal) & _vatwdok
                           ||
                              X_VAT.WB_Z:={? _vatkwwb<_korekta || _vatkwwb |? _korekta<XX_VAT.WB_Z || _korekta || XX_VAT.WB_Z ?};
                              X_VAT.WW_Z:={? _vatkwww<_kor_wal || _vatkwww |? _kor_wal<XX_VAT.WW_Z || _kor_wal || XX_VAT.WW_Z ?};
                              XX_VAT.put
                           ?}
                        ?}
                     ?};
                     _korekta-=X_VAT.WB_Z;
                     _kor_wal-=X_VAT.WW_Z;

                     X_VAT.KRS_ZAL:=XX_VAT.KRS_ZAL;
                     X_VAT.KRS_END:=XX_VAT.KRS_END;

                     X_VAT.add & XX_VAT.next
                  !};

::                _korekta na FAKSV gdy wystapia roznice groszowe - aby zgadzala sie suma brutto
::                dotyczy tylko przypadku faktury, korekty zaliczkowej
                  {? X_VAT.first
                  ||
                     _kw_zal1:=_kw_zal;
                     _kw_wal1:=_kw_wal;
                     _loop:=X_VAT.first();
                     {!
                     |? _loop
                     |!
                        {? XX_VAT.find_key(X_VAT.SV) & _kw_zal
                        ||
                           {? _korekta<>0 | _kor_wal<>0
                           ||
                              _next:=X_VAT.next() & X_VAT.prev();
                              {? _next
                              ||
                                 _wart:=(_korekta*XX_VAT.WB_Z/_kw_zal1)$2; X_VAT.WB_Z+=_wart; _korekta-=_wart; _kw_zal1-=_wart;
                                 _wart:=(_kor_wal*XX_VAT.WW_Z/_kw_wal1)$2; X_VAT.WW_Z+=_wart; _kor_wal-=_wart; _kw_wal1-=_wart
                              ||
                                 X_VAT.WB_Z+=_korekta; _korekta:=0;
                                 X_VAT.WW_Z+=_kor_wal; _kor_wal:=0
                              ?};
                              X_VAT.put()
                           ?};
::                         zmiana proporcji po rozliczeniu _kw_roz1
                           XX_VAT.WB_Z-=X_VAT.WB_Z; _kw_zal-=X_VAT.WB_Z;
                           XX_VAT.WW_Z-=X_VAT.WW_Z; _kw_wal-=X_VAT.WW_Z;
                           XX_VAT.put
                        ?};
                        _loop:=X_VAT.next()
                     !}
                  ?};

::                proporcjonalne rozliczenie pozostalej czesci rozliczenia
                  {? _kw_roz2 & _kw_zal
                  ||
                     _fp_kw_zal:={? _walutowa || (_kw_roz2*_krs)$2 || _kw_roz2 ?};
                     _fp_kw_wal:=_kw_roz2;

                     {? XX_VAT.first
                     ||
                        _korekta:=_fp_kw_zal;
                        _kor_wal:=_fp_kw_wal;

::                      petelka po XX_VAT - rozpisanie stawek VAT wg wielu FAPOW
                        {!
                        |?
                           _put:=X_VAT.find_key(XX_VAT.SV);
                           {? ~_put || X_VAT.blank ?};
                           X_VAT2.blank;
                           X_VAT.SV:=X_VAT2.SV:=XX_VAT.SV;
                           X_VAT.WAL:=XX_VAT.WAL;

                           _war:=(_fp_kw_zal*XX_VAT.WB_Z/_kw_zal)$2;
                           {? _kw_zal || X_VAT.WB_Z+=_war ?};
                           X_VAT2.WB_Z+=_war;
                           _korekta-=_war;

                           _war:=(_fp_kw_wal*XX_VAT.WW_Z/_kw_wal)$2;
                           {? _kw_wal || X_VAT.WW_Z+=_war ?};
                           X_VAT2.WW_Z+=_war;
                           _kor_wal-=_war;

                           X_VAT.KRS_ZAL:=XX_VAT.KRS_ZAL;
                           X_VAT.KRS_END:=XX_VAT.KRS_END;

                           {? _put || X_VAT.put || X_VAT.add ?};

                           X_VAT2.add & XX_VAT.next
                        !};

::                      _korekta na FAKSV gdy wystapia roznice groszowe - aby zgadzala sie suma brutto
                        {? (_korekta<>0 | _kor_wal<>0) & X_VAT.first & X_VAT2.first
                        ||
                           X_VAT.WB_Z+=_korekta; X_VAT2.WB_Z+=_korekta;
                           X_VAT.WW_Z+=_kor_wal; X_VAT2.WW_Z+=_kor_wal;
                           X_VAT.put; X_VAT2.put
                        ?};

::                      zmiana proporcji po rozliczeniu _kw_roz2
                        {? X_VAT2.first
                        ||
                           {!
                           |?
                              {? XX_VAT.find_key(X_VAT2.SV)
                              ||
                                 XX_VAT.WB_Z-=X_VAT2.WB_Z; _kw_zal-=X_VAT2.WB_Z;
                                 XX_VAT.WW_Z-=X_VAT2.WW_Z; _kw_wal-=X_VAT2.WW_Z;
                                 XX_VAT.put
                              ?};
                              X_VAT2.next
                           !}
                        ?}
                     ?}
                  ?}
               ?}
            ?};
            {? X_VAT.first
            ||
               {!
               |?
                  {? _kw_roz2 | exec('faksv_r_zal','faktury_vat',_faks)=0
                  ||
                     exec('x_vat_obl','faktury_vat')
                  ?};
::                przepisanie rozpiski vat FAPOWa z X_VAT do FAKSV
                  {? X_VAT.WW_Z | X_VAT.WB_Z || exec('x_vat2faksv','faktury_vat',_faks,$FAPOW.ref()) ?};
                  X_VAT.next
               !}
            ?};
            FAPOW.next()
         !}
      ?};
      FAPOW.ndx_drop(_fapownd);
      XX_VAT.ndx_drop(_xx_ndx);
      FAPOW.cntx_pop
   ||
:: dokumenty niezaliczkowe w tym rozliczajace zaliczki
      exec('x_vat_mk','faktury_vat',FAKS.ref(),,2);

      _krs_zal:=0;
      FAPOW.cntx_psh;
      FAPOW.index('END_K');
      FAPOW.prefix(_faks,'N');
      {? FAPOW.first()
      ||
::       korekta rozpiski vat dla FAKSV ręcznego
         {? exec('faksv_r_roz','faktury_vat',_faks) || exec('fapow_r','faktury_zalicz',_faks) ?};

::       jesli znajdzie FAPOW znaczy sie ze sa powiazane z FAKS zaliczki do rozliczenia
         _x_ndx:=X_VAT.ndx_tmp('',,'SV',,,'SV',,);
         X_VAT.index(_x_ndx);

::       petla po FAPOW - zaliczkach do rozliczenia
         {!
         |?
::          petla po stawkach VAT dla FAPOW + update X_VAT
            FAKSV.cntx_psh();
            FAKSV.use('faksv'+(form(8+FAPOW.FAKS)+3));
            FAKSV.index('FAPOW_SV');
            FAKSV.prefix($FAPOW.ref());
            {? FAKSV.first()
            ||
               _krs_zal:=FAKSV.KRS_ZAL;
               {!
               |?
                  X_VAT.prefix(FAKSV.SV().KOD,FAKSV.SV().KOD);
                  {? X_VAT.first()
                  ||
                     X_VAT.KRS_ZAL:=FAKSV.KRS_ZAL;
                     X_VAT.WWN_Z+=FAKSV.WWN_Z;
                     X_VAT.WWV_Z+=FAKSV.WWV_Z;
                     X_VAT.WW_Z+=FAKSV.WW_Z;
                     {? exec('faksv_r_roz','faktury_vat',$FAKS.ref())
                     ||
                        X_VAT.WB_Z+=FAKSV.WB_Z;
                        X_VAT.WN_Z+=FAKSV.WN_Z;
                        X_VAT.WV_Z+=FAKSV.WV_Z
                     ||
                        exec('war_zal','faktury_vat')
                     ?};
                     X_VAT.put()
                  ||
::                   gdy faktura koncowa nie ma stawki VAT takiej jak faktura zaliczkowa
                     X_VAT.blank();
                     X_VAT.KRS_ZAL:=FAKSV.KRS_ZAL;
                     X_VAT.KRS_END:=FAKS.KRS;
                     X_VAT.SV:=FAKSV.SV().KOD;
                     X_VAT.WAL:=FAKSV.WAL().KOD;
                     X_VAT.WWN_Z:=FAKSV.WWN_Z;
                     X_VAT.WWV_Z:=FAKSV.WWV_Z;
                     X_VAT.WW_Z:=FAKSV.WW_Z;
                     {? exec('faksv_r_roz','faktury_vat',$FAKS.ref())
                     ||
                        X_VAT.WB_Z:=FAKSV.WB_Z;
                        X_VAT.WN_Z:=FAKSV.WN_Z;
                        X_VAT.WV_Z:=FAKSV.WV_Z
                     ||
                        X_VAT.WB_Z:=0;
                        X_VAT.WN_Z:=0;
                        X_VAT.WV_Z:=0;
                        exec('war_zal','faktury_vat')
                     ?};
                     X_VAT.add()
                  ?};
                  FAKSV.next()
               !}
            ?};
            FAKSV.cntx_pop();

            FAPOW.next()
         !};

         X_VAT.ndx_drop(_x_ndx)
      ?};
      FAPOW.cntx_pop;

::    przepisanie X_VAT do FAKSV
      {? X_VAT.first()
      ||
         {!
         |?
::          gdy faktura koncowa ma inne stawki VAT niz faktura zaliczkowa trzeba uzupelnic X_VAT.KRS_ZAL (tworzy to SQL)
            {? _walutowa || X_VAT.KRS_ZAL:=_krs_zal; X_VAT.put() ?};
            exec('x_vat2faksv','faktury_vat',$FAKS.ref(),'');
            X_VAT.next()
         !}
      ?}
   ?}
?};
FAKSPL.cntx_pop();
FAP.cntx_pop();
FAKS.cntx_pop();
FAKSV.cntx_pop()


\faksv_mk_old
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: tworzenie tabelki stawek VAT
::   WE: _a - FAKS.refsql
::  OLD: \faksv_mk_old/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_f_ref:=_a;
_f_name:=form(8+_a);
_sv:='brak';
_ww_z:=_wn_z:=_wv_z:=_wb_z:=_ww:=_wn:=_wv:=_wb:=0;
FAKSV.cntx_psh();
FAKS.cntx_psh();
FAP.cntx_psh();
FAKSPL.cntx_psh();
FAKSV.use('faksv'+(_f_name+3));
FAKSV.prefix();
FAKS.use(_f_name);
FAKS.prefix();
FAP.use('fakpo'+(_f_name+3));
FAP.prefix();
FAKSPL.use('fakpl'+(_f_name+3));
FAKSPL.prefix();
{? FAKS.seek(_f_ref,_f_name)
||
   _faks:=$FAKS.ref();
   _walutowa:=FAKS.WAL<>FAKS.NWAL;

   {? FAKS.WHERE='L'
   ||
      _kw_zal:=_kw_wal:=0;

::    utworzenie X_VAT - wartosci faktury/korekty wg pozycji dokumentu
      exec('x_vat_mk','faktury_vat',FAKS.ref(),,1);

      {? exec('faksv_r_zal','faktury_vat',_faks)=0
      ||
::       ustalenie kwoty zaliczki w walucie handlowej i opodatkowania
         _kw_zal:=_kw_wal:=0;
         {? FAKS.T().KOR='N'
         ||
            _kw_zal:={? _walutowa || (FAKS.KW_ZAL*FAKS.KRS)$2 || FAKS.KW_ZAL ?};
            _kw_wal:=FAKS.KW_ZAL
         ||
            _kw_wal:=FAKS.KW_ZAL;
            _lksql:=FAKS.LKSQL;
            {!
            |? _lksql<>''
            |!
               FAKS.cntx_psh;
               FAKS.use(ref_name(_lksql));
               FAKS.prefix;
               {? ~FAKS.seek(_lksql)
               ||
                  _lksql:=''
               ||
                  _kw_wal+=FAKS.KW_ZAL;
                  _lksql:=FAKS.LKSQL
               ?};
               FAKS.cntx_pop
            !};
            _kw_zal:={? _walutowa || (_kw_wal*FAKS.KRS)$2 || _kw_wal ?}
         ?};

::       _brutto, _bwal - potrzebne do obliczen %-towych
         _brutto:=_bwal:=0;
         {? X_VAT.first
         ||
            {!
            |?
               {? X_VAT.WB=0
               ||
                  X_VAT.del
               ||
                  _brutto+=X_VAT.WB;
                  _bwal+={? _walutowa || X_VAT.WW || X_VAT.WB ?};
                  X_VAT.next
               ?}
            !}
         ?};

::       rozpisanie kwoty zaliczki wg % wartosci dla poszczegolnych stawek
         {? X_VAT.first()
         ||
            {? X_VAT.size()>1
            ||
::          gdy kilka stawek VAT
               _korekta:=_kw_zal;
               _kor_wal:=_kw_wal;
               {!
               |?
                  X_VAT.WB_Z:=((X_VAT.WB*_kw_zal)/_brutto)$2;
                  _korekta-=X_VAT.WB_Z;

                  X_VAT.WW_Z:=((X_VAT.WW*_kw_wal)/_bwal)$2;
                  _kor_wal-=X_VAT.WW_Z;

                  X_VAT.put();
                  X_VAT.next()
               !};
::             _korekta dla ostatniej stawki gdy wystapia roznice groszowe - aby zgadzala sie suma brutto
               {? _korekta<>0 | _kor_wal<>0
               ||
                  X_VAT.WB_Z:=X_VAT.WB_Z+_korekta;
                  X_VAT.WW_Z:=X_VAT.WW_Z+_kor_wal;
                  exec('x_vat_obl','faktury_vat',0);
                  X_VAT.put()
               ?}
            ||
               X_VAT.WB_Z:=_kw_zal$2;
               X_VAT.WW_Z:=_kw_wal$2;
               X_VAT.put()
            ?}
         ?};

::----------------------------------------------------------------------------------------------------------------------
::    gdy kilka stawek VAT - ustalenie ile na jaka stawke
::    nalezy dodac PARAMETR czy udostepnic edycje stawek VAT dla faktur zaliczkowych
::      {? X_VAT.size()>1;
::      ||
::         _acr:=X_VAT.mk_sel(,'N',0,'faksv_mk_acr');
::         X_VAT.win_fld(_acr,,'SV',,,8,,1,'Stawka VAT');
::         X_VAT.win_fld(_acr,,'WB_Z',,,12,2,,'Kwota zaliczki');
::         X_VAT.win_act(_acr,,'Formuła','Gotowe',,,,"sel_exit",1);
::         X_VAT.win_act(_acr,,'Popraw',,,,,,0);
::         X_VAT.win_sel(_acr);
::         {! |? X_VAT.select(); exec('x_vat_chk','faktury1') !}
::      ?};
::----------------------------------------------------------------------------------------------------------------------

::       obliczenie X_VAT - czesc zaliczkowa
         {? X_VAT.first()
         ||
            {!
            |?
               exec('x_vat_obl','faktury_vat',0);
               X_VAT.next()
            !}
         ?}
      ?};

::    skopiowanie X_VAT do XX_VAT
      exec('xx_vat_mk','faktury_vat');

::    skopiowanie z przeciwnym znakiem rozpiski vat zaliczek z faktury wyjsciowej (z wszystkich FAPOW)
      {? FAKS.T().KOR='T'
      ||
         X_VAT.cntx_psh;
         _x_ndx:=X_VAT.ndx_tmp('',,'SV',,,'SV',,);
         X_VAT.index(_x_ndx);
         _lksql:=FAKS.LKSQL;
         {!
         |? _lksql<>''
         |!
            FAKS.cntx_psh;
            FAKS.use(ref_name(_lksql));
            FAKS.prefix;
            {? ~FAKS.seek(_lksql)
            ||
               _lksql:=''
            ||
               _lksql:=FAKS.LKSQL;
               FAKSV.cntx_psh;
               FAKSV.use((FAKSV.name-3)+(FAKS.name+3));
               FAKSV.index('FF_SV');
               FAKSV.prefix('',$FAKS.ref);
               {? FAKSV.first
               ||
                  {!
                  |?
                     X_VAT.prefix(FAKSV.SV().KOD,FAKSV.SV().KOD);
                     {? X_VAT.first()
                     ||
                        X_VAT.WWN_Z-=FAKSV.WWN_Z;
                        X_VAT.WWV_Z-=FAKSV.WWV_Z;
                        X_VAT.WW_Z-=FAKSV.WW_Z;
                        X_VAT.WN_Z-=FAKSV.WN_Z;
                        X_VAT.WV_Z-=FAKSV.WV_Z;
                        X_VAT.WB_Z-=FAKSV.WB_Z;
                        X_VAT.put()
                     ||
                        X_VAT.blank();
                        X_VAT.SV:=FAKSV.SV().KOD;
                        X_VAT.WAL:=FAKSV.WAL().KOD;
                        X_VAT.KRS_ZAL:=FAKSV.KRS_ZAL;
                        X_VAT.KRS_END:=FAKSV.KRS_END;
                        X_VAT.WWN_Z:=-FAKSV.WWN_Z;
                        X_VAT.WWV_Z:=-FAKSV.WWV_Z;
                        X_VAT.WW_Z:=-FAKSV.WW_Z;
                        X_VAT.WN_Z:=-FAKSV.WN_Z;
                        X_VAT.WV_Z:=-FAKSV.WV_Z;
                        X_VAT.WB_Z:=-FAKSV.WB_Z;
                        X_VAT.add()
                     ?};
                     FAKSV.next
                  !}
               ?};
               FAKSV.cntx_pop
            ?};
            FAKS.cntx_pop
         !};
         X_VAT.ndx_drop(_x_ndx);
         X_VAT.cntx_pop
      ?};

::    przepisanie rozpiski vat zaliczki lub korekty zaliczki z X_VAT do FAKSV
      {? X_VAT.first()
      ||
         {!
         |?
            exec('x_vat2faksv','faktury_vat',_faks,'');
            X_VAT.next()
         !}
      ?};

::    aktualizacja stawek vat dla nierozliczonej czesci zaliczki - wykonywane dla faktury
      _krs:=FAKS.KRS;
      {? FAKS.T().KOR='N'
      ||
         _ref:=FAKS.ref;
         _onum:=0;
         _msk:=exec('tab_mask','faktury_wspolne',5,form((FAKS.D~1)-2000,-2,0,'99'));
         _msk.blank; _msk.ROK:='hs'; _msk.add(1);
         _msk.clear;
         {? _msk.first
         ||
            FAKS.cntx_psh;
            {!
            |? FAKS.use((form(8+$_faks)-2)+_msk.ROK);
               FAKS.index('OREFK');
               FAKS.prefix(BEER.SZ,_faks);
               {? FAKS.first
               || {!
                  |? {? _onum<FAKS.ONUM & FAKS.AKC='T'
                     || _ref:=FAKS.ref
                     ?};
                     FAKS.next
                  !}
               ?};
               _msk.next
            !};
            FAKS.cntx_pop
         ?};
::       zmiana X_VAT jesli byla korekta do faktury
         {? _ref<>FAKS.ref
         ||
            {? X_VAT.first || {! |? X_VAT.del !} ?};
            {? XX_VAT.first || {! |? XX_VAT.del !} ?};

::          utworzenie X_VAT - wartosci po ostatniej korekcie
            exec('x_vat_mk','faktury_vat',_ref,,1);

            {? exec('faksv_r_zal','faktury_vat',_faks)=0
            ||
::             wyznaczenie pozostalej do rozliczenia kwoty zaliczki
               _kw_zal:=_kw_wal:=0;
               FAPOW.cntx_psh;
               FAPOW.index('LACZ'); FAPOW.prefix($FAKS.ref,'N');
               {? FAPOW.first()
               ||
                  _kw_wal:=FAPOW.KW_ROZ;
                  FAKS.cntx_psh;
                  FAKS.use(8+$_ref);
                  FAKS.prefix;
                  {? FAKS.seek(_ref)
                  ||
                     _krs:=FAKS.KRS;
                     _kw_zal:={? _walutowa || (_kw_wal*_krs)$2 || _kw_wal ?}
                  ?};
                  FAKS.cntx_pop
               ?};
               FAPOW.cntx_pop;

::             _brutto, _bwal - potrzebne do obliczen %-towych
               _brutto:=_bwal:=0;
               {? X_VAT.first
               ||
                  {!
                  |?
                     {? X_VAT.WB=0
                     ||
                        X_VAT.del
                     ||
                        _brutto+=X_VAT.WB;
                        _bwal+={? _walutowa || X_VAT.WW || X_VAT.WB ?};
                        X_VAT.next
                     ?}
                  !}
               ?};

::             rozpisanie kwoty zaliczki wg % wartosci dla poszczegolnych stawek
               {? X_VAT.first()
               ||
                  {? X_VAT.size()>1
                  ||
::                   gdy kilka stawek VAT
                     _korekta:=_kw_zal;
                     _kor_wal:=_kw_wal;
                     {!
                     |?
                        X_VAT.WB_Z:=((X_VAT.WB*_kw_zal)/_brutto)$2;
                        _korekta-=X_VAT.WB_Z;

                        X_VAT.WW_Z:=((X_VAT.WW*_kw_wal)/_bwal)$2;
                        _kor_wal-=X_VAT.WW_Z;

                        X_VAT.put();
                        X_VAT.next()
                     !};
::                   _korekta dla ostatniej stawki gdy wystapia roznice groszowe - aby zgadzala sie suma brutto
                     {? _korekta<>0 | _kor_wal<>0
                     ||
                        X_VAT.WB_Z:=X_VAT.WB_Z+_korekta;
                        X_VAT.WW_Z:=X_VAT.WW_Z+_kor_wal;
                        exec('x_vat_obl','faktury_vat');
                        X_VAT.put()
                     ?}
                  ||
                     X_VAT.WB_Z:=_kw_zal$2;
                     X_VAT.WW_Z:=_kw_wal$2;
                     X_VAT.put()
                  ?}
               ?};

::             obliczenie X_VAT - czesc zaliczkowa
               {? X_VAT.first()
               ||
                  {!
                  |?
                     exec('x_vat_obl','faktury_vat');
                     X_VAT.next()
                  !}
               ?}
            ?};

::          skopiowanie X_VAT do XX_VAT
            exec('xx_vat_mk','faktury_vat')
         ?}
      ?};

::    dla FAPOW tworzone sa osobne rekordy FAKSV wg brutto_do_rozliczenia
::    wykorzystywane pozniej do rozliczania faktur koncowych
      FAPOW.cntx_psh;
      FAPOW.index('FAKS');
      FAPOW.prefix(_faks);
      {? FAPOW.first()
      ||
         X_VAT.prefix();
         {? X_VAT.first() || {! |? X_VAT.del() !} ?};

         _xx_ndx:=XX_VAT.ndx_tmp('',,'SV',,);
         XX_VAT.index(_xx_ndx);

::       petla po FAPOW w petli X_VAT (stawek Vat)
         {!
         |?
::          aktualizacja FAKSV nierozliczonych FAPOW
::          var_pres('fapow') & fapow=FAPOW.ref - warunek dotyczy przypadku korekty zaliczki do zera
            {? FAPOW.ROZ='N' | var_pres('fapow')=type_of(null) & fapow=FAPOW.ref
            ||
::             kwota do rozliczenia - juz po korekcie
               _fp_kw_zal:={? _walutowa || (FAPOW.KW_ROZ*_krs)$2 || FAPOW.KW_ROZ ?};
               _fp_kw_wal:=FAPOW.KW_ROZ;

               {? XX_VAT.first()
               ||
                  _korekta:=_fp_kw_zal;
                  _kor_wal:=_fp_kw_wal;

::                petelka po XX_VAT - rozpisanie stawek VAT wg wielu FAPOW
                  {!
                  |?
                     X_VAT.blank();
                     X_VAT.SV:=XX_VAT.SV;
                     X_VAT.WAL:=XX_VAT.WAL;

                     {? _kw_zal || X_VAT.WB_Z:=(_fp_kw_zal*XX_VAT.WB_Z/_kw_zal)$2 ?};
                     _korekta-=X_VAT.WB_Z;

                     {? _kw_wal || X_VAT.WW_Z:=(_fp_kw_wal*XX_VAT.WW_Z/_kw_wal)$2 ?};
                     _kor_wal-=X_VAT.WW_Z;

                     X_VAT.KRS_ZAL:=XX_VAT.KRS_ZAL;
                     X_VAT.KRS_END:=XX_VAT.KRS_END;

                     X_VAT.add();
                     {? exec('faksv_r_zal','faktury_vat',_faks)=0
                     ||
                        exec('x_vat_obl','faktury_vat')
                     ?};

::                   przepisanie rozpiski vat FAPOWa z X_VAT do FAKSV
                     {? X_VAT.WW_Z | X_VAT.WB_Z || exec('x_vat2faksv','faktury_vat',_faks,$FAPOW.ref()) ?};

                     XX_VAT.next()
                  !};

::                _korekta na FAKSV gdy wystapia roznice groszowe - aby zgadzala sie suma brutto
                  {? _korekta<>0 | _kor_wal<>0
                  ||
                     _fapow:=$FAPOW.ref();
                     _use:='faksv'+(form(8+FAPOW.FAKS)+3);
                     FAKSV.cntx_psh();
                     FAKSV.use(_use);
                     FAKSV.clear();
                     FAKSV.index('FAPOW_SV');
                     FAKSV.prefix(_fapow);
                     {? FAKSV.first()
                     ||
                        FAKSV.WB_Z:=FAKSV.WB_Z+_korekta;
                        _sv:=#((FAKSV.SV().KOD*'%')+FAKSV.SV().KOD-1)/100;
                        FAKSV.WN_Z:=(FAKSV.WB_Z/(1+_sv))$2;
                        FAKSV.WV_Z:=(FAKSV.WB_Z-FAKSV.WN_Z)$2;

                        FAKSV.WW_Z:=FAKSV.WW_Z+_kor_wal;

                        FAKSV.put()
                     ?};
                     FAKSV.cntx_pop()
                  ?}
               ?}
            ?};
            FAPOW.next()
         !};
         XX_VAT.ndx_drop(_xx_ndx)
      ?};
      FAPOW.cntx_pop
   ||
:: dokumenty niezaliczkowe w tym rozliczajace zaliczki
      exec('x_vat_mk','faktury_vat',FAKS.ref(),,2);

      _krs_zal:=0;
      FAPOW.cntx_psh;
      FAPOW.index('END_K');
      FAPOW.prefix(_faks,'N');
      {? FAPOW.first()
      ||
::       korekta rozpiski vat dla FAKSV ręcznego
         {? exec('faksv_r_roz','faktury_vat',_faks) || exec('fapow_r','faktury_zalicz',_faks) ?};

::       jesli znajdzie FAPOW znaczy sie ze sa powiazane z FAKS zaliczki do rozliczenia
         _x_ndx:=X_VAT.ndx_tmp('',,'SV',,,'SV',,);
         X_VAT.index(_x_ndx);

::       petla po FAPOW - zaliczkach do rozliczenia
         {!
         |?
::          petla po stawkach VAT dla FAPOW + update X_VAT
            FAKSV.cntx_psh();
            FAKSV.use('faksv'+(form(8+FAPOW.FAKS)+3));
            FAKSV.index('FAPOW_SV');
            FAKSV.prefix($FAPOW.ref());
            {? FAKSV.first()
            ||
               _krs_zal:=FAKSV.KRS_ZAL;
               {!
               |?
                  X_VAT.prefix(FAKSV.SV().KOD,FAKSV.SV().KOD);
                  {? X_VAT.first()
                  ||
                     X_VAT.KRS_ZAL:=FAKSV.KRS_ZAL;
                     X_VAT.WWN_Z+=FAKSV.WWN_Z;
                     X_VAT.WWV_Z+=FAKSV.WWV_Z;
                     X_VAT.WW_Z+=FAKSV.WW_Z;
                     {? exec('faksv_r_roz','faktury_vat',$FAKS.ref())
                     ||
                        X_VAT.WB_Z+=FAKSV.WB_Z;
                        X_VAT.WN_Z+=FAKSV.WN_Z;
                        X_VAT.WV_Z+=FAKSV.WV_Z
                     ||
                        exec('war_zal','faktury_vat')
                     ?};
                     X_VAT.put()
                  ||
::                   gdy faktura koncowa nie ma stawki VAT takiej jak faktura zaliczkowa
                     X_VAT.blank();
                     X_VAT.KRS_ZAL:=FAKSV.KRS_ZAL;
                     X_VAT.KRS_END:=FAKS.KRS;
                     X_VAT.SV:=FAKSV.SV().KOD;
                     X_VAT.WAL:=FAKSV.WAL().KOD;
                     X_VAT.WWN_Z:=FAKSV.WWN_Z;
                     X_VAT.WWV_Z:=FAKSV.WWV_Z;
                     X_VAT.WW_Z:=FAKSV.WW_Z;
                     {? exec('faksv_r_roz','faktury_vat',$FAKS.ref())
                     ||
                        X_VAT.WB_Z:=FAKSV.WB_Z;
                        X_VAT.WN_Z:=FAKSV.WN_Z;
                        X_VAT.WV_Z:=FAKSV.WV_Z
                     ||
                        X_VAT.WB_Z:=0;
                        X_VAT.WN_Z:=0;
                        X_VAT.WV_Z:=0;
                        exec('war_zal','faktury_vat')
                     ?};
                     X_VAT.add()
                  ?};
                  FAKSV.next()
               !}
            ?};
            FAKSV.cntx_pop();

            FAPOW.next()
         !};

         X_VAT.ndx_drop(_x_ndx)
      ?};
      FAPOW.cntx_pop;

::    przepisanie X_VAT do FAKSV
      {? X_VAT.first()
      ||
         {!
         |?
::          gdy faktura koncowa ma inne stawki VAT niz faktura zaliczkowa trzeba uzupelnic X_VAT.KRS_ZAL (tworzy to SQL)
            {? _walutowa || X_VAT.KRS_ZAL:=_krs_zal; X_VAT.put() ?};
            exec('x_vat2faksv','faktury_vat',$FAKS.ref(),'');
            X_VAT.next()
         !}
      ?}
   ?}
?};
FAKSPL.cntx_pop();
FAP.cntx_pop();
FAKS.cntx_pop();
FAKSV.cntx_pop()


\fsv_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: podsumy wyswietlane w okienku
::  OLD: \fsv_sum/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
SUM.WW_Z:=SUM.WN_Z:=SUM.WV_Z:=SUM.WB_Z:=SUM.WAR:=SUM.NETTO:=SUM.VAT:=SUM.BRUTTO:=0;
FAKSV.cntx_psh();
{? FAKSV.first()
||
   {!
   |?
      SUM.WW_Z+=FAKSV.WW_Z;
      SUM.WN_Z+=FAKSV.WN_Z;
      SUM.WV_Z+=FAKSV.WV_Z;
      SUM.WB_Z+=FAKSV.WB_Z;
      SUM.WAR+=FAKSV.WW;
      SUM.NETTO+=FAKSV.WN;
      SUM.VAT+=FAKSV.WV;
      SUM.BRUTTO+=FAKSV.WB;
      FAKSV.next()
   !}
?};
FAKSV.cntx_pop()


\x_vat2faksv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: przepisuje z tab_tmp X_VAT do tab. FAKSV
::   WE: _a - $FAKS.ref
::       _b - $FAPOW.ref
::  OLD: \x_vat2faksv/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
FAKSV.cntx_psh();
FAKSV.use('faksv'+(form(8+_a)+3));
FAKSV.index('FF_SV');
FAKSV.prefix(_b,_a,X_VAT.SV,);
_put:=FAKSV.first();
_faksv_r:=0;
_faksv_r_dok:=0;
_faksv_r_zal:=0;
_faksv_r_roz:=0;
{? _put
||
   _faksv_r:=FAKSV.R;
   _faksv_r_dok:=exec('faksv_r_dok','faktury_vat',_a);
   _faksv_r_zal:=exec('faksv_r_zal','faktury_vat',_a);
   _faksv_r_roz:=exec('faksv_r_roz','faktury_vat',_a)
?};
_wwn_r:=FAKSV.WWN_R;
_wwv_r:=FAKSV.WWV_R;
_ww_r:=FAKSV.WW_R;
_wn_r:=FAKSV.WN_R;
_wv_r:=FAKSV.WV_R;
_wb_r:=FAKSV.WB_R;
FAKSV.clear();
FAKSV.blank();
FAKSV.R:=_faksv_r;
FAKSV.FAKS:=_a;
FAKSV.FAPOW:=_b;
_kraj_vat:=BEER.KRAJ_VAT;
BEER.KRAJ_VAT:=exec('FindAndGet','#table',FAKS,FAKSV.FAKS,,"FAKS.KRAJ_VAT",null());
{? exec('jakislsv','ustawienia',2,_kraj_vat)=''
|| {? SLO.find_key(X_VAT.SV,) || FAKSV.SV:=SLO.ref ?}
?};
BEER.KRAJ_VAT:=_kraj_vat;
{? exec('jakiswal','ustawienia')
||
   SLO.index('SL');
   SLO.prefix(INFO.SLWAL().SLU);
   {? SLO.find_key(X_VAT.WAL,) || FAKSV.WAL:=SLO.ref ?}
?};
_nwal:=exec('bl_nwal','ustawienia');
{? _faksv_r_zal | FAKSV.WAL<>_nwal
|| FAKSV.WWN_Z:=X_VAT.WWN_Z;
   FAKSV.WWV_Z:=X_VAT.WWV_Z;
   FAKSV.WW_Z:=X_VAT.WW_Z
|| FAKSV.WWN_Z:=X_VAT.WN_Z;
   FAKSV.WWV_Z:=X_VAT.WV_Z;
   FAKSV.WW_Z:=X_VAT.WB_Z
?};
FAKSV.WN_Z:=X_VAT.WN_Z;
FAKSV.WV_Z:=X_VAT.WV_Z;
FAKSV.WB_Z:=X_VAT.WB_Z;
{? _faksv_r_dok | FAKSV.WAL<>_nwal
|| FAKSV.WWN:=X_VAT.WWN;
   FAKSV.WWV:=X_VAT.WWV;
   FAKSV.WW:=X_VAT.WW
|| FAKSV.WWN:=X_VAT.WN;
   FAKSV.WWV:=X_VAT.WV;
   FAKSV.WW:=X_VAT.WB
?};
{? _faksv_r_roz
||
   FAKSV.WWN_R:=_wwn_r;
   FAKSV.WWV_R:=_wwv_r;
   FAKSV.WW_R:=_ww_r;
   FAKSV.WN_R:=_wn_r;
   FAKSV.WV_R:=_wv_r;
   FAKSV.WB_R:=_wb_r
?};
FAKS.cntx_psh;
FAKS.use(8+FAKSV.FAKS);
FAKS.prefix;
{? FAKS.seek(FAKSV.FAKS)
||
   {? _faksv_r_dok | FAKS.T().VATZPOZ='T'
   ||
      FAKSV.WN:=X_VAT.WN;
      FAKSV.WV:=X_VAT.WV;
      FAKSV.WB:=X_VAT.WB
   ||
      _vat:=#((FAKSV.SV().KOD*'%')+FAKSV.SV().KOD-1)/100;
      {? TYPYSP.FIS='T'
      ||
         FAKSV.WB:=X_VAT.WB;
         FAKSV.WN:=(X_VAT.WB/(1+_vat))$2;
         FAKSV.WV:=(FAKSV.WB-FAKSV.WN)$2;
         FAKSV.WW:=X_VAT.WW;
         FAKSV.WWN:=(X_VAT.WW/(1+_vat))$2;
         FAKSV.WWV:=(FAKSV.WW-FAKSV.WWN)$2
      ||
         FAKSV.WN:=X_VAT.WN;
         FAKSV.WV:=(X_VAT.WN*_vat)$2;
         FAKSV.WB:=(FAKSV.WN+FAKSV.WV)$2;
         FAKSV.WWN:=X_VAT.WWN;
         FAKSV.WWV:=(X_VAT.WWN*_vat)$2;
         FAKSV.WW:=(FAKSV.WWN+FAKSV.WWV)$2
      ?};
      {? FAKSV.WAL=_nwal
      ||
         FAKSV.WWN:=FAKSV.WN;
         FAKSV.WWV:=FAKSV.WV;
         FAKSV.WW:=FAKSV.WB
      ?};
      exec('uzgvat','faktury_vat',FAKSV.FAKS,FAKSV.SV
         ,FAKSV.WN-X_VAT.WN,FAKSV.WV-X_VAT.WV,FAKSV.WB-X_VAT.WB
         ,FAKSV.WWN-X_VAT.WWN,FAKSV.WWV-X_VAT.WWV,FAKSV.WW-X_VAT.WW);
      {? FAKS.WHERE='L' || FAKSV.WW:=FAKSV.WN:=FAKSV.WV:=FAKSV.WB:=0 ?}
   ?};
   FAKSV.KRS_ZAL:=X_VAT.KRS_ZAL$4;
   FAKSV.KRS_END:=X_VAT.KRS_END$4;
   FAPOW.cntx_psh;
   FAPOW.index('END_K'); FAPOW.prefix(_a);
   {? FAPOW.first() & FAKSV.R=0
   ||
      FAKSV.WW_R:=(FAKSV.WW-FAKSV.WW_Z)$2;
      {? FAKSV.WAL<>_nwal
      ||
         {? FAKSV.WW_Z<>FAKSV.WW
         ||
            FAKSV.WB_R:=(FAKSV.WW_R*FAKSV.KRS_END)$2;
            _sv:=#((FAKSV.SV().KOD*'%')+FAKSV.SV().KOD-1)/100;
            FAKSV.WN_R:=(FAKSV.WB_R/(1+_sv))$2;
            FAKSV.WV_R:=(FAKSV.WB_R-FAKSV.WN_R)$2
         ?}
      ||
            FAKSV.WN_R:=(FAKSV.WN-FAKSV.WN_Z)$2;
            FAKSV.WV_R:=(FAKSV.WV-FAKSV.WV_Z)$2;
            FAKSV.WB_R:=(FAKSV.WB-FAKSV.WB_Z)$2
      ?}
   ?};
   FAPOW.cntx_pop
?};
FAKS.cntx_pop;
{? _put || FAKSV.put() || FAKSV.add() ?};
FAKSV.cntx_pop()


\x_vat_obl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: obliczanie wartosci Vat i Netto zaliczkowe z Brutto zal. - akcja tylko dla faktur zaliczkowych
::       X_VAT w buforze
::   WE: _a - 0/1 zerować resztę wartości
::  OLD: \x_vat_obl/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')=type_of(0) || _a || 1 ?};
_sv:=#((X_VAT.SV*'%')+X_VAT.SV-1)/100;
:: X_VAT.WB_Z - juz wyliczone i skorygowane groszowo
:: X_VAT.WW_Z - juz wyliczone i skorygowane groszowo
X_VAT.WN_Z:=(X_VAT.WB_Z/(1+_sv))$2;
X_VAT.WV_Z:=(X_VAT.WB_Z-X_VAT.WN_Z)$2;
X_VAT.WWN_Z:=(X_VAT.WW_Z/(1+_sv))$2;
X_VAT.WWV_Z:=(X_VAT.WW_Z-X_VAT.WWN_Z)$2;
:: zerowanie reszty
{? _a || X_VAT.WWN:=X_VAT.WWV:=X_VAT.WW:=X_VAT.WN:=X_VAT.WV:=X_VAT.WB:=0 ?};
X_VAT.put()


\x_vat_mk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: tworzy tab_tmp X_VAT - ile stawek VAT
::   WE: _a - FAKS.ref
::       _b - nie wykorzystywany
::       _c - 0-przed korektą, 1-po korekcie, 2-korekta
::  OLD: \x_vat_mk/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_faks:=_a;
{? do_state()=1 & var_pres('X_VAT')>100
||
   X_VAT.clear();
   {? X_VAT.first() || {! |? X_VAT.del() !} ?};
   X_VAT2.clear();
   {? X_VAT2.first() || {! |? X_VAT2.del() !} ?};
   _x_k_ndx:=X_VAT.ndx_tmp('',,'SV',,,'SV',,);
   X_VAT.index(_x_k_ndx);
   _x_k_nd2:=X_VAT2.ndx_tmp('',,'SV',,,'SV',,);
   X_VAT2.index(_x_k_nd2)
||
   VAR_DEL.delete('X_VAT');
   X_VAT:=tab_tmp(4
      ,'SV','STRING[8]','Stawka VAT'
      ,'WAL','STRING[8]','Waluta'
      ,'KRS_ZAL','REAL','Kurs zaliczki'
      ,'KRS_END','REAL','Kurs koncowej'
      ,'WWN_Z','REAL','Wart. netto w wal.zal.'
      ,'WWV_Z','REAL','Wart. VAT w wal.zal.'
      ,'WW_Z','REAL','Wart. w wal.zal.'
      ,'WN_Z','REAL','Wart. netto zal.'
      ,'WV_Z','REAL','Wart. VAT zal.'
      ,'WB_Z','REAL','Wart. brutto zal.'
      ,'WWN','REAL','Wart. w wal. netto'
      ,'WWV','REAL','Wart. w wal. VAT'
      ,'WW','REAL','Wart. w wal.'
      ,'WN','REAL','Wart. netto'
      ,'WV','REAL','Wart. VAT'
      ,'WB','REAL','Wart. brutto'
   );
   VAR_DEL.delete('X_VAT2');
   X_VAT2:=tab_tmp(4
      ,'SV','STRING[8]','Stawka VAT'
      ,'WAL','STRING[8]','Waluta'
      ,'KRS_ZAL','REAL','Kurs zaliczki'
      ,'KRS_END','REAL','Kurs koncowej'
      ,'WWN_Z','REAL','Wart. netto w wal.zal.'
      ,'WWV_Z','REAL','Wart. VAT w wal.zal.'
      ,'WW_Z','REAL','Wart. w wal.zal.'
      ,'WN_Z','REAL','Wart. netto zal.'
      ,'WV_Z','REAL','Wart. VAT zal.'
      ,'WB_Z','REAL','Wart. brutto zal.'
      ,'WW','REAL','Wart. w wal.'
      ,'WN','REAL','Wart. netto'
      ,'WV','REAL','Wart. VAT'
      ,'WB','REAL','Wart. brutto'
   );
   _x_k_ndx:=X_VAT.ndx_tmp('',,'SV',,,'SV',,);
   X_VAT.index(_x_k_ndx);
   _x_k_nd2:=X_VAT2.ndx_tmp('',,'SV',,,'SV',,);
   X_VAT2.index(_x_k_nd2)
?};

FAKS.cntx_psh; FAP.cntx_psh;
FAKS.use(ref_name(_faks));
FAKS.prefix();
{? FAKS.seek(_faks)
|| FAP.use('fakpo'+(FAKS.name+3))
|| FAKS.cntx_pop; FAP.cntx_pop;
   X_VAT.ndx_drop(_x_k_ndx);
   X_VAT2.ndx_drop(_x_k_nd2);
   return
?};

:: ustalenie kursu zaliczki i kursu rozliczenia zaliczki
_krs_zal:=_krs_end:=0;
{? FAKS.WHERE='L'
|| _krs_zal:=FAKS.KRS
|| _krs_end:=FAKS.KRS
?};

:: faktura VAT (w tym koncowa, korekta)
{? FAKS.T().KOR='N'
||
:: utworzenie X_VAT
   exec('x_vat_mk_r','faktury_vat',FAKS.ref(),,1);
   {? exec('faksv_r_dok','faktury_vat',$FAKS.ref())=0
   ||
      FAP.index('FAP');
      FAP.prefix(FAKS.ref());
      {? FAP.first()
      ||
         {!
         |?
            X_VAT.prefix(FAP.SV().KOD,FAP.SV().KOD);
            {? X_VAT.first()
            ||
               X_VAT.WWN+=FAP.WWAL;
               X_VAT.WWV+=FAP.VWAL;
               X_VAT.WW+=FAP.BWAL;
               X_VAT.WN+=FAP.WWAL_P;
               X_VAT.WV+=FAP.VWAL_P;
               X_VAT.WB+=FAP.BWAL_P;
               X_VAT.put()
            ||
               X_VAT.prefix();
               X_VAT.blank();
               X_VAT.SV:=FAP.SV().KOD;
               X_VAT.WAL:=FAP.FAKS().WAL().KOD;
               X_VAT.KRS_ZAL:=_krs_zal;
               X_VAT.KRS_END:=_krs_end;
               X_VAT.WWN:=FAP.WWAL;
               X_VAT.WWV:=FAP.VWAL;
               X_VAT.WW:=FAP.BWAL;
               X_VAT.WN:=FAP.WWAL_P;
               X_VAT.WV:=FAP.VWAL_P;
               X_VAT.WB:=FAP.BWAL_P;
               X_VAT.add()
            ?};

            FAP.next()
         !}
      ?}
   ?}
||
:: utworzenie X_VAT dla korekt
   exec('x_vat_mk_r','faktury_vat',FAKS.ref(),_c,1);
   {? exec('faksv_r_dok','faktury_vat',$FAKS.ref())=0
   ||
      FAP.index('FAP');
      FAP.prefix(FAKS.ref());
      {? FAP.first()
      ||
         {!
         |?
            exec('wysw_kor','faktury_poz');
::          przed korekta
            {? (_c=0 | _c=2) & FAP.POZP=0
            ||
               X_VAT.prefix(FKOR.SV().KOD,FKOR.SV().KOD);
               {? X_VAT.first()
               ||
                  X_VAT.WWN-=FKOR.WWAL;
                  X_VAT.WWV-=FKOR.VWAL;
                  X_VAT.WW-=FKOR.BWAL;
                  X_VAT.WN-=FKOR.WWAL_P;
                  X_VAT.WV-=FKOR.VWAL_P;
                  X_VAT.WB-=FKOR.BWAL_P;
                  X_VAT.put()
               ||
                  X_VAT.blank();
                  X_VAT.KRS_ZAL:=_krs_zal;
                  X_VAT.KRS_END:=_krs_end;
                  X_VAT.SV:=FKOR.SV().KOD;
                  X_VAT.WAL:=FAKS.WAL().KOD;
                  X_VAT.WWN:=-FKOR.WWAL;
                  X_VAT.WWV:=-FKOR.VWAL;
                  X_VAT.WW:=-FKOR.BWAL;
                  X_VAT.WN:=-FKOR.WWAL_P;
                  X_VAT.WV:=-FKOR.VWAL_P;
                  X_VAT.WB:=-FKOR.BWAL_P;
                  X_VAT.add()
               ?}
            ?};
::          po korekcie
            {? _c=1 | _c=2
            ||
               X_VAT.prefix(FAP.SV().KOD,FAP.SV().KOD);
               {? X_VAT.first()
               ||
                  X_VAT.WWN+=FKOR.BWWAL;
                  X_VAT.WWV+=FKOR.BVWAL;
                  X_VAT.WW+=FKOR.BBWAL;
                  X_VAT.WN+=FKOR.BWWAL_P;
                  X_VAT.WV+=FKOR.BVWAL_P;
                  X_VAT.WB+=FKOR.BBWAL_P;
                  X_VAT.put()
               ||
                  X_VAT.blank();
                  X_VAT.KRS_ZAL:=_krs_zal;
                  X_VAT.KRS_END:=_krs_end;
                  X_VAT.SV:=FAP.SV().KOD;
                  X_VAT.WAL:=FAKS.WAL().KOD;
                  X_VAT.WWN:=FKOR.BWWAL;
                  X_VAT.WWV:=FKOR.BVWAL;
                  X_VAT.WW:=FKOR.BBWAL;
                  X_VAT.WN:=FKOR.BWWAL_P;
                  X_VAT.WV:=FKOR.BVWAL_P;
                  X_VAT.WB:=FKOR.BBWAL_P;
                  X_VAT.add()
               ?}
            ?};

            FAP.next()
         !}
      ?}
   ?}
?};
FAKS.cntx_pop;
FAP.cntx_pop;

X_VAT.prefix();
X_VAT.first();
{? var_pres('X_VAT')>0 & var_pres('_x_k_ndx')>0  || X_VAT.ndx_drop(_x_k_ndx) ?};
{? var_pres('X_VAT2')>0 & var_pres('_x_k_nd2')>0  || X_VAT2.ndx_drop(_x_k_nd2) ?};
''


\x_vat_mk_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Uzupełnia X_VAT - z zapisów FAKSV.R=1 lub FAKSV.R=2
::       _a - FAKS.ref
::       _b - 0-przed korektą, 1-po korekcie, 2-korekta
::       _c - 0/1 - pierwsze wywołanie
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_faks:=$_a;
_first:=_c;
{? var_pres('_b')=type_of(0) & _b<>2
||
:: wartość przed korektą _b=0 lub _b=1
   exec('FindAndGet','#table',FAKS,FAKS.LKSQL,,"exec('x_vat_mk_r','faktury_vat',FAKS.ref(),_b,0)",,_b)
?};

{? _first=0 | var_pres('_b')<>type_of(0) | _b
||
:: wartość dokumentu
:: wartość po korekcie _b=1
:: wartość korekty _b=2

   _faksv_r_dok:=exec('faksv_r_dok','faktury_vat',_faks);
   _faksv_r_zal:=exec('faksv_r_zal','faktury_vat',_faks);

   FAKSV.index('FF_SV');
   FAKSV.prefix('',_faks);
   _loop:=FAKSV.first();
   {!
   |? _loop
   |!
      {? _faksv_r_dok | _faksv_r_zal
      ||
         X_VAT.prefix(FAKSV.SV().KOD,FAKSV.SV().KOD);
         {? X_VAT.first()
         ||
            {? _faksv_r_zal
            ||
               X_VAT.WWN_Z+=FAKSV.WWN_Z;
               X_VAT.WWV_Z+=FAKSV.WWV_Z;
               X_VAT.WW_Z+=FAKSV.WW_Z;
               X_VAT.WN_Z+=FAKSV.WN_Z;
               X_VAT.WV_Z+=FAKSV.WV_Z;
               X_VAT.WB_Z+=FAKSV.WB_Z
            ?};
            {? _faksv_r_dok
            ||
               X_VAT.WWN+=FAKSV.WWN;
               X_VAT.WWV+=FAKSV.WWV;
               X_VAT.WW+=FAKSV.WW;
               X_VAT.WN+=FAKSV.WN;
               X_VAT.WV+=FAKSV.WV;
               X_VAT.WB+=FAKSV.WB
            ?};
            X_VAT.put()
         ||
            X_VAT.prefix();
            X_VAT.blank();
            X_VAT.SV:=FAKSV.SV().KOD;
            X_VAT.WAL:=FAKSV.WAL().KOD;
::            X_VAT.KRS_ZAL:=_krs_zal;
::            X_VAT.KRS_END:=_krs_end;
            {? _faksv_r_zal
            ||
               X_VAT.WWN_Z:=FAKSV.WWN_Z;
               X_VAT.WWV_Z:=FAKSV.WWV_Z;
               X_VAT.WW_Z:=FAKSV.WW_Z;
               X_VAT.WN_Z:=FAKSV.WN_Z;
               X_VAT.WV_Z:=FAKSV.WV_Z;
               X_VAT.WB_Z:=FAKSV.WB_Z
            ?};
            {? _faksv_r_dok
            ||
               X_VAT.WWN:=FAKSV.WWN;
               X_VAT.WWV:=FAKSV.WWV;
               X_VAT.WW:=FAKSV.WW;
               X_VAT.WN:=FAKSV.WN;
               X_VAT.WV:=FAKSV.WV;
               X_VAT.WB:=FAKSV.WB
            ?};
            X_VAT.add()
         ?}
      ?};
      _loop:=FAKSV.next()
   !}
?}


\war_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
:: OPIS: wartosc w PLN liczona wg kursow faktur zaliczkowych (wg powiazanych FAPOW)
::       w buforze: FAPOW dla faktury koncowej oraz FAKSV dla kolejnej stawki VAT
::  OLD: \war_zal/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_use:='faksv'+(form(8+FAPOW.FAKS)+3);
FAKSV.cntx_psh();
FAKSV.use(_use);
FAKSV.clear();
FAKSV.index('FAPOW_SV');
FAKSV.prefix($FAPOW.ref(),FAKSV.SV().KOD);
{? FAKSV.first()
||
   X_VAT.WB_Z+=FAKSV.WB_Z;
   X_VAT.WN_Z+=FAKSV.WN_Z;
   X_VAT.WV_Z+=FAKSV.WV_Z
?};
FAKSV.cntx_pop();
''


\uzgvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: uzgadnia wartosc pozycji dokumentu z tabelka VAT (FAKSV)
::   WE: _a - $FAKS.ref
::       _b - VAT (SLO.ref)
::       _c - roznica na netto
::       _d - roznica na kwocie VAT
::       _e - roznica na brutto
::       _f - różnica na netto w walucie
::       _g - różnica na kwocie VAT w walucie
::       _h - różnica na brutto w walucie
::  OLD: \uzgvat/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKSV.WV<>X_VAT.WV | FAKSV.WN<>X_VAT.WN | FAKSV.WB<>X_VAT.WB
   | FAKSV.WWN<>X_VAT.WWN | FAKSV.WWV<>X_VAT.WWV | FAKSV.WW<>X_VAT.WW
||
   FAP.cntx_psh;
   FAP.index('FAP');
   FAP.prefix(exec('FindAndGet','#table',FAKS,_a,,,null()));
   {? FAP.first
   ||
      _put:=0;
      {!
      |? exec('wysw_kor','faktury_poz');
         {? FAP.SV=_b
         ||
            FAP.get();
            FAP.WWAL_P+=_c;
            FAP.VWAL_P+=_d;
            FAP.BWAL_P+=_e;
            FAP.WWAL+=_f;
            FAP.VWAL+=_g;
            FAP.BWAL+=_h;

            FAKS.NETTO+=_c;
            FAKS.VAT+=_d;
            FAKS.BRUTTO+=_e;
            FAKS.NETW+=_f;
            FAKS.BRTW+=_h;

            {? FAKSV.WAL=INFO.NAROD
            ||
               FAP.WWAL:=FAP.WN:=FAP.WWAL_P;
               FAP.VWAL:=FAP.WV:=FAP.VWAL_P;
               FAP.BWAL:=FAP.WB:=FAP.BWAL_P;

               FAKS.NETW:=FAKS.NETTO;
               FAKS.BRTW:=FAKS.BRUTTO
            ?};
            _put:=FAP.put & FAKS.put
         ?};
         _put=0 & FAP.next
      !}
   ?};
   FAP.cntx_pop
?}


\faksv_rm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: sprawdza czy rozpisana kwota jest zgodna z FAKS.KW_ZAL
::   WE: _a - $FAKS.ref
::       _b - =1-usuwac zapisy z FAKSV.R>0, =0-wpp
::  OLD: \faksv_rm/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<>type_of(1) || _b:=0 ?};

FAKSV.cntx_psh(); FAPOW.cntx_psh;
FAPOW.prefix;
FAKSV.use('faksv'+(form(8+_a)+3));
FAKSV.clear();
FAKSV.index('FAKS_SV');
FAKSV.prefix(_a);
FAKSV.win_sel('WER');
{? FAKSV.first()
||
   {!
   |?
      {? _b=0 & FAKSV.R
      || FAKSV.next()
      |? FAKSV.FAPOW=''
      || FAKSV.del()
      |? FAPOW.seek(FAKSV.FAPOW)
      ||
::       usuniecie FAKSV nierozliczonych FAPOW
::       var_pres('fapow') & fapow=FAPOW.ref - warunek dotyczy przypadku korekty zaliczki do zera
         {? FAPOW.ROZ='N' | var_pres('fapow')=type_of(null) & fapow=FAPOW.ref
         || FAKSV.del
         || FAKSV.next
         ?}
      ?}
   !}
?};
FAKSV.cntx_pop(); FAPOW.cntx_pop


\xx_vat_mk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: tworzy tab_tmp XX_VAT na podstawie X_VAT
::  OLD: \xx_vat_mk/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------

{? do_state()=1 & var_pres('XX_VAT')>100
||
   XX_VAT.clear();
   {? XX_VAT.first() || {! |? XX_VAT.del() !} ?}
||
   VAR_DEL.delete('XX_VAT');
   XX_VAT:=tab_tmp(4
      ,'SV','STRING[8]','Stawka VAT'
      ,'WAL','STRING[8]','Waluta'
      ,'KRS_ZAL','REAL','Kurs zaliczki'
      ,'KRS_END','REAL','Kurs koncowej'
      ,'WW_Z','REAL','Wart. w wal.zal.'
      ,'WN_Z','REAL','Wart. netto zal.'
      ,'WV_Z','REAL','Wart. VAT zal.'
      ,'WB_Z','REAL','Wart. brutto zal.'
      ,'WW','REAL','Wart. w wal.'
      ,'WN','REAL','Wart. netto'
      ,'WV','REAL','Wart. VAT'
      ,'WB','REAL','Wart. brutto'
   )
?};
X_VAT.cntx_psh();
{? X_VAT.first()
||
   {!
   |?
      XX_VAT.blank();
      XX_VAT.SV:=X_VAT.SV;
      XX_VAT.WAL:=X_VAT.WAL;
      XX_VAT.KRS_ZAL:=X_VAT.KRS_ZAL;
      XX_VAT.KRS_END:=X_VAT.KRS_END;
      XX_VAT.WW_Z:=X_VAT.WW_Z;
      XX_VAT.WN_Z:=X_VAT.WN_Z;
      XX_VAT.WV_Z:=X_VAT.WV_Z;
      XX_VAT.WB_Z:=X_VAT.WB_Z;
      XX_VAT.WW:=X_VAT.WW;
      XX_VAT.WN:=X_VAT.WN;
      XX_VAT.WV:=X_VAT.WV;
      XX_VAT.WB:=X_VAT.WB;
      XX_VAT.add();

      X_VAT.next()
   !}
?};
X_VAT.cntx_pop();
''


\faksv_zk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: oblicza sume na FAKSV dla faktur zakupowych
::   WE: _a - ref FAKS-a
::       _b - miejsce wywolania FAKS.WHERE
::  OLD: \faksv_zk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_faksvstv:=FAKSV.SV().KOD;
_rsql:=$_a;

:: oblicza wartosc wynikajaca z dokumentow magazynowych
_tab:=tab_tmp(3,'TYP','STRING[1]',''
       ,'STV','STRING[10]',''
       ,'ST2','STRING[10]',''
       ,'NET','REAL',''
       ,'VAT','REAL',''
       ,'BRT','REAL',''
       ,'WAL','REAL','');

_sfak:=0; _sdok:=0; _svat:=0;

FAP2DK.cntx_psh();
FAP2DK.index('FAKS');
FAP2DK.prefix(_b,_rsql);
{? FAP2DK.first()
||
   {!
   |? {? FAP2DK.ND<>''
      || ND.cntx_psh();
         DK.cntx_psh();
         ND.use(8+FAP2DK.ND);
         DK.use(8+FAP2DK.DK);
         DK.clear;
         {? DK.seek(FAP2DK.DK,form(8+FAP2DK.DK))
         || _tab.clear;
            _tab.prefix('M');
            {? _tab.find_key(DK.SV().KOD,DK.SV().KOD)
            || _wsp:=(#((_tab.STV*'%')+_tab.STV-1))*0.01;
               _dknet:=FAP2DK.IL*DK.C $2;
               _tab.NET+=_dknet $2;
               _tab.VAT+=_dknet*_wsp $2;
               _tab.BRT:=_tab.NET+_tab.VAT;
               _tab.put(1)
            || _tab.clear;
               _tab.blank;
               _tab.STV:=_tab.ST2:=DK.SV().KOD;
               _tab.NET:=FAP2DK.IL*DK.C $2;
               _wsp:=(#((_tab.STV*'%')+_tab.STV-1))*0.01;
               _tab.VAT:=_tab.NET*_wsp $2;
               _tab.BRT:=_tab.VAT+_tab.NET;
               _tab.TYP:='M';
               _tab.add(1)
            ?}
         ?};
         ND.cntx_pop();
         DK.cntx_pop()
      ?};
      FAP2DK.next()
   !}
?};
FAP2DK.cntx_pop();

:: obliczenie wartosci wprowadzonych "z reki"
FAKSV.cntx_psh();
FAKSV.use('faksv'+(form(8+_rsql)+3));
FAKSV.index('FAKS_SV');
FAKSV.prefix(_rsql);
{? FAKSV.first()
||
   {!
   |? {? FAKSV.R=1
      ||
         _tab.clear;
         _tab.prefix('R');
         {? _tab.find_key(FAKSV.SV().KOD,FAKSV.SV().KOD)
         || _tab.NET+=FAKSV.WN $2;
            _tab.VAT+=FAKSV.WV $2;
            _tab.BRT+=FAKSV.WB $2;
            _tab.WAL+=FAKSV.WW $2;
            _tab.put(1)
         || _tab.clear;
            _tab.blank;
            _tab.STV:=_tab.ST2:=FAKSV.SV().KOD;
            _tab.NET:=FAKSV.WN $2;
            _tab.VAT:=FAKSV.WV $2;
            _tab.BRT:=FAKSV.WB $2;
            _tab.WAL+=FAKSV.WW $2;
            _tab.TYP:='R';
            _tab.add(1)
         ?}
      ?};
      FAKSV.next
   !}
?};
FAKSV.cntx_pop();

:: obliczenie wartosci wg pozycji faktury
FAP.cntx_psh;
FAP.index('FAP');
FAP.prefix(_a);
{? FAP.first
|| {!
   |? _tab.clear;
      _tab.prefix('F');
      {? _tab.find_key(FAP.SV().KOD,FAP.SV().KOD)
      || _tab.NET+=FAP.WWAL_P $2;
         _tab.VAT+=FAP.VWAL_P $2;
         _tab.BRT+=FAP.BWAL_P $2;
         _tab.WAL+=FAP.BWAL $2;
         _tab.put(1)
      || _tab.clear;
         _tab.blank;
         _tab.STV:=_tab.ST2:=FAP.SV().KOD;
         _tab.NET:=FAP.WWAL_P $2;
         _tab.VAT:=FAP.VWAL_P $2;
         _tab.BRT:=FAP.BWAL_P $2;
         _tab.WAL+=FAP.BWAL $2;
         _tab.TYP:='F';
         _tab.add(1)
      ?};
      FAP.next
   !}
?};
FAP.cntx_pop;

_slu:=exec('FindInSet','#table','SLU','NAZ','~STAWKI VAT PL');

:: przepisanie danych do FAKSV
FAKSV.cntx_psh;
:: usuwamy stare informacje

:: dane wg wprowadzonych pozycji
_tab.clear;
_tab.prefix('F');
{? _tab.first
|| {!
   |? _sfak+=_tab.NET;
      _tab.next
   !}
?};

:: dane wg dokumentow magazynowych
_tab.clear;
_tab.prefix('M');
{? _tab.first
|| {!
   |? _sdok+=_tab.NET;
      _tab.next
   !}
?};

:: dane wg stawek
_ref:=null;
FAKSV.index('FAKS_SV');
FAKSV.prefix(_rsql);
{? FAKSV.first()
||
   {!
   |? {? _faksvstv=FAKSV.SV().KOD || _ref:=FAKSV.ref() ?};
      _svat+=FAKSV.WN;
      FAKSV.next
   !}
?};
FAKSV.cntx_pop;
{? _ref<>null || FAKSV.seek(_ref) ?};

obj_del(_tab);
{? var_pres('__zakin2')>100
|| __zakin2.cntx_psh;
   __zakin2.clear; {? __zakin2.find_key('F') || __zakin2.WAR:=_sfak; __zakin2.put(1) ?};
   __zakin2.clear; {? __zakin2.find_key('M') || __zakin2.WAR:=_sdok; __zakin2.put(1) ?};
   __zakin2.clear; {? __zakin2.find_key('W') || __zakin2.WAR:=_svat; __zakin2.put(1) ?};
   __zakin2.cntx_pop
?};
1


\suma_fsv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: oblicza wartosc sumaryczna wg pozycji na FAKSV
::  OLD: \suma_fsv/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
SUM.WAR:=0;
SUM.NETTO:=0;
SUM.VAT:=0;
SUM.BRUTTO:=0;
SUM.WW_Z:=0;
SUM.WN_Z:=0;
SUM.WV_Z:=0;
SUM.WB_Z:=0;

FAKSV.cntx_psh;
FAKSV.index('FAKS_SV');
FAKSV.prefix($FAKS.ref);
{? FAKSV.last
|| {!
   |? SUM.WW_Z+=FAKSV.WW_Z;
      SUM.WN_Z+=FAKSV.WN_Z;
      SUM.WV_Z+=FAKSV.WV_Z;
      SUM.WB_Z+=FAKSV.WB_Z;
      SUM.WAR+=FAKSV.WW;
      SUM.NETTO+=FAKSV.WN;
      SUM.VAT+=FAKSV.WV;
      SUM.BRUTTO+=FAKSV.WB;
      FAKSV.prev
   !}
?};
FAKSV.cntx_pop;
exec('faksv_zk','faktury_vat',FAKS.ref,FAKS.WHERE);
exec('fsv_sum','faktury_vat');
1


\faks_kz_faksv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: oblicza FAKSV korekty zbiorczej
::   WE: _a - $FAKS.ref() korekty zbiorczej
::  OLD: \faks_kz_faksv/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_kz:=_a;
_wal:=FAKS.WAL;
_dwal:=FAKS.WAL<>FAKS.NWAL;
_cn:=FAKS.T().FIS='N';
_sppk:=TYPYSP.SPPK='T';
_p300212:=exec('get','#params',300212);
_licz_zaokr:=
   FAKS.SZ='S'
      &
   (FAKS.T().KOR<>'Z' | ~_dwal | FAKS.KRS)
      &
   {? _p300212='SUMA Z KOREKT' || 0
   |? _p300212='WG STAWEK VAT' || 1
   |? _p300212='WG STAWEK VAT DOKUMENTY NIEWALUTOWE' || ~_dwal
   |? _p300212='WG STAWEK VAT DOKUMENTY WALUTOWE' || _dwal
   ?};
_Suma:=tab_tmp(2
   ,'SV'    ,'STRING[16]'  ,'Stawka VAT'
   ,'WW'    ,'REAL'        ,'Wartość w walucie'
   ,'WN_P'  ,'REAL'        ,'Wartość netto podatkowa wg FAP'
   ,'WV_P'  ,'REAL'        ,'Kwota VAT podatkowa wg FAP'
   ,'WB_P'  ,'REAL'        ,'Wartość brutto podatkowa wg FAP'
   ,'WN'    ,'REAL'        ,'Wartość netto narodowa wg FAP'
   ,'WV'    ,'REAL'        ,'Kwota VAT narodowa wg FAP'
   ,'WB'    ,'REAL'        ,'Wartość brutto narodowa wg FAP'
   ,'WN_P1' ,'REAL'        ,'Wartość netto podatkowa wg FAKSV'
   ,'WV_P1' ,'REAL'        ,'Kwota VAT podatkowa wg FAKSV'
   ,'WB_P1' ,'REAL'        ,'Wartość brutto podatkowa wg FAKSV'
   ,'WN1'   ,'REAL'        ,'Wartość netto narodowa wg FAKSV'
   ,'WV1'   ,'REAL'        ,'Kwota VAT narodowa wg FAKSV'
   ,'WB1'   ,'REAL'        ,'Wartość brutto narodowa wg FAKSV');
FAP.cntx_psh();
FAP.index('KZ');
FAP.prefix(_kz);
{? FAP.first()
||
:: agregacja wg stawek vat wartości handlowej (netto lub brutto) oraz netto, vat, brutto podatkowych i narodowych
   {!
   |?
      _put:=_Suma.find_key($FAP.SV,);
      {? ~_put || _Suma.blank ?};
      _Suma.SV:=$FAP.SV;
      _Suma.WW+={? _cn || FAP.WWAL || FAP.BWAL ?};
      _Suma.WN_P+=FAP.WWAL_P;
      _Suma.WV_P+=FAP.VWAL_P;
      _Suma.WB_P+=FAP.BWAL_P;
      _Suma.WN+=FAP.WN;
      _Suma.WV+=FAP.WV;
      _Suma.WB+=FAP.WB;
      {? _put || _Suma.put() || _Suma.add() ?};
      FAP.next()
   !};
:: liczymy wartości netto, vat, brutto opodatkowania i narodowe wg FAKSV i rozpisujemy zaokrąglenia jeśli wystąpią
   {? _licz_zaokr
   ||
      _walj:=exec('FindInSet','#table','WAL','WAL_SYM',FAKS.WAL().KOD,,"WAL.J",,,1);
      _walj:={? FAKS.WAL=INFO.NAROD || 1 || _walj ?};
      _krs:={? _dwal || FAKS.KRS || 1 ?};
      _nkrs:={? _dwal || FAKS.NKRS || 1 ?};
      _loop:=_Suma.first();
      {!
      |? _loop
      |!
         _vat:=exec('FindAndGet','#table',SLO,_Suma.SV,,"SLO.KOD",'');
         _vat:=#((_vat*'%')+_vat-1)/100;
         {? FAKS.T().FIS='T' | FAKS.CB='T'
         ||
            _Suma.WB_P1:=(_Suma.WW*_krs/_walj)$2;
            _Suma.WN_P1:=(_Suma.WB_P1/(1+_vat))$2;
            _Suma.WV_P1:=_Suma.WB_P1-_Suma.WN_P1;
            _Suma.WB1:=(_Suma.WW*_nkrs/_walj)$2;
            _Suma.WN1:=(_Suma.WB1/(1+_vat))$2;
            _Suma.WV1:=_Suma.WB1-_Suma.WN1
         ||
            _Suma.WN_P1:=(_Suma.WW*_krs/_walj)$2;
            _Suma.WV_P1:=(_Suma.WN_P1*_vat)$2;
            _Suma.WB_P1:=_Suma.WN_P1+_Suma.WV_P1;
            _Suma.WN1:=(_Suma.WW*_nkrs/_walj)$2;
            _Suma.WV1:=(_Suma.WN1*_vat)$2;
            _Suma.WB1:=_Suma.WN1+_Suma.WV1
         ?};
         {? _Suma.put()
         ||
::          rozpiska zaokrągleń na pozycje
            _zwn_p:=_Suma.WN_P1-_Suma.WN_P;
            _zwv_p:=_Suma.WV_P1-_Suma.WV_P;
            _zwb_p:=_Suma.WB_P1-_Suma.WB_P;
            _zwn:=_Suma.WN1-_Suma.WN;
            _zwv:=_Suma.WV1-_Suma.WV;
            _zwb:=_Suma.WB1-_Suma.WB;
            {? _zwn_p | _zwv_p | _zwb_p
               | _zwn | _zwv | _zwb
            ||
               _loop:=FAP.first();
               {!
               |? _loop
               |!
                  _loop:=
                     {? $FAP.SV=_Suma.SV
                     ||
                        FAP.WWAL_P+=_zwn_p;
                        FAP.VWAL_P+=_zwv_p;
                        FAP.BWAL_P+=_zwb_p;
                        FAP.WN+=_zwn;
                        FAP.WV+=_zwv;
                        FAP.WB+=_zwb;
                        {? ~_dwal
                        ||
                           FAP.WWAL:=FAP.WWAL_P;
                           FAP.VWAL:=FAP.VWAL_P;
                           FAP.BWAL:=FAP.BWAL_P
                        ?};
                        {? FAP.put()
                        ||
::                         aktualizacja wartości korekty częściowej i korekty zbiorczej
                           FAP.cntx_psh();
                           exec('FindAndGet','#table',FAKS,FAP.FAKS,,"
                              exec('sumfak','faktury_wspolne',,0)
                           ");
                           FAP.cntx_pop()
                        ?};
                        0
                     ||
                        FAP.next()
                     ?}
               !}
            ?}
         ?};
         _loop:=_Suma.next()
      !}
   ?};
:: zapisanie FAKSV korekty zbiorczej
   FAKSV.index('FAKS_SV');
   FAKSV.prefix(_kz);
   {? FAKSV.first || {! |? FAKSV.del !} ?};
   {? _Suma.first
   ||
      {!
      |?
         FAKSV.blank;
         FAKSV.FAKS:=_kz;
         FAKSV.WAL:=_wal;
         FAKSV.SV:=exec('FindAndGet','#table',SLO,_Suma.SV,,,null());
         FAKSV.WW:=_Suma.WW;
         {? _licz_zaokr
         ||
            FAKSV.WN:=_Suma.WN_P1;
            FAKSV.WV:=_Suma.WV_P1;
            FAKSV.WB:=_Suma.WB_P1
         ||
            FAKSV.WN:=_Suma.WN_P;
            FAKSV.WV:=_Suma.WV_P;
            FAKSV.WB:=_Suma.WB_P
         ?};
         FAKSV.add & _Suma.next
      !}
   ?}
?};
FAP.cntx_pop()


\edok2vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: generacja pozycji VAT do faktury FAKSV
::   WE: _a - ref FAKS-a
::       _b - procent VAT
::       _c - wartosc netto
::       _d - wartosc VAT
::       _e - wartosc brutto
::       [_f] - wartosc w walucie
::----------------------------------------------------------------------------------------------------------------------
{? _>=6 || {? type_of(_f)<>1 || _f:=0 ?} || _f:=0 ?};

FAKSV.cntx_psh();
FAKSV.clear();
FAKSV.blank();
FAKSV.FAKS:=_a;
FAKSV.R:=0;
FAKSV.SV:=_b;
FAKSV.WN:=_c;
FAKSV.WB:=_e;
FAKSV.WV:=_d;
FAKSV.WW:={? ~_f || _e || _f ?};
FAKSV.add();
FAKSV.cntx_pop();
1


\faksv_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Zwraca maksymalny FAKSV.R
::   WE: _a - $FAKS.ref()
::   WY: FAKSV.R
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
FAKSV.cntx_psh();
FAKSV.index('FF_SV');
FAKSV.prefix('',_a);
_loop:=FAKSV.first();
{!
|? _loop
|!
   _result:={? _result<FAKSV.R || FAKSV.R || _result ?};
   _loop:=FAKSV.next()
!};
FAKSV.cntx_pop();
_result


\faksv_r_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: FAKSV dokumentu powstał "ręcznie"
::       Jeśli nie podano _b wyszukiwany jest pierwszy FAKSV.R<>0
::   WE: [_a] - $FAKS.ref()
::       [_b] - FAKSV.R
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_faksv_r:={? var_pres('_b')=type_of(0) || _b || exec('faksv_r','faktury_vat',_a) ?};
::_faksv_r=1 | _faksv_r=3 | _faksv_r=5
BB.and(%_faksv_r,%1)>0


\faksv_r_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: FAKSV zaliczki powstał "ręcznie"
::       Jeśli nie podano _b wyszukiwany jest pierwszy FAKSV.R<>0
::   WE: [_a] - $FAKS.ref()
::       [_b] - FAKSV.R
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_faksv_r:={? var_pres('_b')=type_of(0) || _b || exec('faksv_r','faktury_vat',_a) ?};
::_faksv_r=2 | _faksv_r=3 | _faksv_r=6
BB.and(%_faksv_r,%2)>0


\faksv_r_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: FAKSV rozliczenia powstał "ręcznie"
::       Jeśli nie podano _b wyszukiwany jest pierwszy FAKSV.R<>0
::   WE: [_a] - $FAKS.ref()
::       [_b] - FAKSV.R
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_faksv_r:={? var_pres('_b')=type_of(0) || _b || exec('faksv_r','faktury_vat',_a) ?};
::_faksv_r=4 | _faksv_r=5 | _faksv_r=6
BB.and(%_faksv_r,%4)>0


\faksv_r_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Zwraca tabelę z wartościami rozliczonych zaliczek w podziale na stawki VAT
::   WE: _a - $FAKS.ref() faktury rozliczającej
::   WY: tabela
::----------------------------------------------------------------------------------------------------------------------
_FAKSV:=tab_tmp(1
   ,'SV','STRING[16]',''
   ,'WN_Z','REAL',''
   ,'WV_Z','REAL',''
   ,'WB_Z','REAL',''
   ,'WW_Z','REAL',''
   ,'WWN_Z','REAL',''
   ,'WWV_Z','REAL',''
   ,'KRS_ZAL','REAL','');
FAKSV.cntx_psh();
FAKSV.index('FF_SV');
FAKSV.prefix('',_a);
_loop:=FAKSV.first() & exec('faksv_r_roz','faktury_vat',_a);
{!
|? _loop
|!
   {? exec('faksv_r_roz','faktury_vat',,FAKSV.R)
   ||
      _FAKSV.SV:=$FAKSV.SV;
      _FAKSV.WN_Z:=FAKSV.WN-FAKSV.WN_R;
      _FAKSV.WV_Z:=FAKSV.WV-FAKSV.WV_R;
      _FAKSV.WB_Z:=FAKSV.WB-FAKSV.WB_R;
      _FAKSV.WW_Z:=FAKSV.WW-FAKSV.WW_R;
      _FAKSV.WWN_Z:=FAKSV.WWN-FAKSV.WWN_R;
      _FAKSV.WWV_Z:=FAKSV.WWV-FAKSV.WWV_R;
      _FAKSV.KRS_ZAL:=FAKSV.KRS_ZAL
   ?};
   _loop:=_FAKSV.add() & FAKSV.next()
!};
FAKSV.cntx_pop();
_FAKSV


\faksv_r_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Zwraca wartość rozliczonych zaliczek
::   WE: _a - $FAKS.ref() faktury rozliczającej
::   WY: wartość rozliczonych zaliczek
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_FAKSV:=exec('faksv_r_tab','faktury_vat',_a);
_loop:=_FAKSV.first();
{!
|? _loop
|!
   _result+=_FAKSV.WW_Z;
   _loop:=_FAKSV.next()
!};
_result


\faksv_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Przed Popraw FAKSV
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_win_red:='RED_R';
exec('faksv_set_efld_opt','faktury_vat');
{? FAKS.STAT_REJ<>'N'
||
   FUN.info('Poprawa niedostępna dla zakończonego dokumentu.'@);
   return()
?};
_walutowy:=FAKS.WAL<>FAKS.NWAL;
FAKSV.cntx_psh();
FAKSV.win_edit('RED_R');
{? FAKSV.edit()
||
   {? ~_walutowy
   ||
      FAKSV.WW_Z:=FAKSV.WB_Z;
      FAKSV.WW:=FAKSV.WB;
      FAKSV.WW_R:=FAKSV.WB_R
   ?};
   {? FAKSV.put()
   ||
      {? exec('faksv_r_zal','faktury_vat',$FAKS.ref())
      ||
         FAKS.KW_ZAL:=0;
         _loop:=FAKSV.first();
         {!
         |? _loop
         |!
            FAKS.KW_ZAL+=FAKSV.WW_Z;
            _loop:=FAKSV.next()
         !};
         {? FAKS.put()
         ||
            FAPOW.cntx_psh();
            FAPOW.index('FAKS_K');
            FAPOW.prefix($FAKS.ref());
            {? FAPOW.first()
            ||
               FAPOW.KW:=FAPOW.KW_PO_K:=FAPOW.KW_ROZ:=FAKS.KW_ZAL;
               FAPOW.put()
            ?};
            FAPOW.cntx_pop()
         ?}
      ?};
      exec('faksv_rm','faktury_vat',$FAKS.ref());
      exec('faksv_mk','faktury_vat',$FAKS.ref())
   ?}
?};
FAKSV.cntx_pop()


\faksv_set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Ustawia opcje pól okien redakcji tabeli FAKSV
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_walutowy:=FAKS.WAL<>FAKS.NWAL;
_options:='editable=%1'[$exec('faksv_r_zal','faktury_vat',,FAKSV.R)];
{? ~_walutowy
||
   FAKSV.efld_opt('RED_R','editable=0',,'WW_Z');
   FAKSV.efld_opt('RED_R','editable=0',,'WWV_Z');
   FAKSV.efld_opt('RED_R','editable=0',,'WWN_Z')
||
   FAKSV.efld_opt('RED_R',_options,,'WW_Z');
   FAKSV.efld_opt('RED_R',_options,,'WWV_Z');
   FAKSV.efld_opt('RED_R',_options,,'WWN_Z')
?};
FAKSV.efld_opt('RED_R',_options,,'WB_Z');
FAKSV.efld_opt('RED_R',_options,,'WV_Z');
FAKSV.efld_opt('RED_R',_options,,'WN_Z');
_options:='editable=%1'[$exec('faksv_r_dok','faktury_vat',,FAKSV.R)];
{? ~_walutowy
||
   FAKSV.efld_opt('RED_R','editable=0',,'WW');
   FAKSV.efld_opt('RED_R','editable=0',,'WWV');
   FAKSV.efld_opt('RED_R','editable=0',,'WWN')
||
   FAKSV.efld_opt('RED_R',_options,,'WW');
   FAKSV.efld_opt('RED_R',_options,,'WWV');
   FAKSV.efld_opt('RED_R',_options,,'WWN')
?};
FAKSV.efld_opt('RED_R',_options,,'WB');
FAKSV.efld_opt('RED_R',_options,,'WV');
FAKSV.efld_opt('RED_R',_options,,'WN');
_options:='editable=%1'[$exec('faksv_r_roz','faktury_vat',,FAKSV.R)];
{? ~_walutowy
||
   FAKSV.efld_opt('RED_R','editable=0',,'WW_R');
   FAKSV.efld_opt('RED_R','editable=0',,'WWV_R');
   FAKSV.efld_opt('RED_R','editable=0',,'WWN_R')
||
   FAKSV.efld_opt('RED_R',_options,,'WW_R');
   FAKSV.efld_opt('RED_R',_options,,'WWV_R');
   FAKSV.efld_opt('RED_R',_options,,'WWN_R')
?};
FAKSV.efld_opt('RED_R',_options,,'WB_R');
FAKSV.efld_opt('RED_R',_options,,'WV_R');
FAKSV.efld_opt('RED_R',_options,,'WN_R');
:: FAKSZ.R_?
FAKSZ.R_Z:={? exec('faksv_r_zal','faktury_vat',,FAKSV.R) || 'T' || 'N' ?};
FAKSZ.R_D:={? exec('faksv_r_dok','faktury_vat',,FAKSV.R) || 'T' || 'N' ?};
FAKSZ.R_R:={? exec('faksv_r_roz','faktury_vat',,FAKSV.R) || 'T' || 'N' ?};
{? FAKS.WHERE='L'
||
   FAKSV.efld_opt('RED_R','enable=1',FAKSZ,'R_Z');
   FAKSV.efld_opt('RED_R','enable=1',FAKSZ,'R_D');
   FAKSV.efld_opt('RED_R','enable=0',FAKSZ,'R_R')
||
   FAKSV.efld_opt('RED_R','enable=0',FAKSZ,'R_Z');
   FAKSV.efld_opt('RED_R','enable=1',FAKSZ,'R_D');
   FAKSV.efld_opt('RED_R','enable=1',FAKSZ,'R_R')
?}


\faksz_r_x_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Po redakcji FAKSZ.R_Z, FAKSZ.R_D, FAKSZ.R_R
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
FAKSV.R:={? FAKSZ.R_D='T' || 1 ?}+{? FAKSZ.R_Z='T' || 2 ?}+{? FAKSZ.R_R='T' || 4 ?};
exec('faksv_set_efld_opt','faktury_vat');
1


\faksv_rekb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Rekord przed FAKSV
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a || exec('faksv_set_efld_opt','faktury_vat') ?};
~~


\prkrsfsv
1

\pokrsfsv
1

\pr_wwfsv
1

\po_wwfsv
1

\po_wbfsv
1

\po_wvfsv
1

\po_svfsv
1


\wwn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [RR.XX]
:: OPIS: Wartość walutowa netto pozycji w stawce _b faktury _a
::   WE:
::   WY: Wartość walutowa netto pozycji
::----------------------------------------------------------------------------------------------------------------------
_faks:=_a;
_sv:=_b;
_wwn:=0;
FAP.cntx_psh();
FAP.use(gsub(FAP.name(1),'???',ref_name(_faks)+3));
FAP.index('FAP');
FAP.prefix(_faks);
_loop:=FAP.first();
{!
|? _loop
|!
   {? FAP.SV=_sv || _wwn+=FAP.WWAL ?};
   _loop:=FAP.next()
!};
FAP.cntx_pop();
_wwn


\wwn_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [RR.XX]
:: OPIS: Wartość walutowa netto zaliczek w stawce _b faktury _a
::   WE: _a - $FAKS.ref() - faktura
::       _b - stawka vat (napis)
::       _c - stawka vat (wartość)
::       _d - dokładność wartości
::   WY: Wartość walutowa netto zaliczek
::----------------------------------------------------------------------------------------------------------------------
_faks:=_a;
_sv:=_b;
_vat:=_c;
_dokl:=_d;
_wwn_z:=0;
FAPOW.cntx_psh();
FAPOW.index('END_K');
FAPOW.prefix(_faks,'N');
FAKSV.cntx_psh();
FAKSV.use(gsub(FAKSV.name(1),'???',8+FAPOW.FAKS+3));
FAKSV.cntx_psh();
FAKSV.index('FAPOW_SV');
FAKSV.prefix($FAPOW.ref(),_sv);
_loop:=FAKSV.first();
{!
|? _loop
|!
   _wwn_z+=(FAKSV.WW_Z/(1+_vat))$_dokl;
   _loop:=FAKSV.next()
!};
FAKSV.cntx_pop();
FAKSV.cntx_pop();
FAPOW.cntx_pop();
_wwn_z

:Sign Version 2.0 jowisz:1045 2024/02/21 10:48:41 b19fc7f1f4b6278767bcd27d9d7182a5b863823bdacf836f41d6916764548b56cd5c0c4a67ad394c7eb450b9a25180839e309526785f749913b8c8b238cdb150ad3d7acf0419b43c551605809d4e9bda2cf3bae117ee35eb6a523417013c69bd1071d5cffa2a1392c648360ec00dc093e62914a993f6b9281ceee5ba262478f8
