:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: users_upraw.fml [19.42]
:: Utworzony: 20.08.2019
:: Autor: MW
::======================================================================================================================
:: Zawartość: Formuły do obsługi tabeli USERS_UP (uprawnienia użytkowników do danych)
::======================================================================================================================

\TabUsersUp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Tymczasowa tabela uprawnień
::   WE: _a - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TR_RODZ)
::   WY: uchwyt tabeli
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | (_a<>'ODDZ' & _a<>'MG' & _a<>'STS' & _a<>'STZ' & _a<>'ZAM' & _a<>'ZAW'
   & _a<>'TR_RODZ')
|| _a:='ODDZ'
?};

_wyn:=tab_tmp(5
   ,'AKR','STRING[8]','Rodzaj uprawnienia'
   ,'USER_KOD','STRING[10]','User kod'
   ,'KOD','STRING[64]','Kod ODDZ MG STS'
   ,'USER_REF','STRING[16]','User ref'
   ,'REF','STRING[16]','Ref ODDZ MG STS'
   ,'ACCESS','STRING[1]','Uprawnienie'
   ,'FULL','STRING[1]','Pełne uprawnienia'
   ,'DOM','STRING[1]','Domyślny'
   ,'NR','INTEGER','Priorytet magazynu'
   ,'UIDREF','STRING[100]','Identyfikator rekordu'
   );

_pom:=tab_tmp(1
   ,'MG_REF','STRING[16]','Ref MAG'
   ,'MG_SYM','STRING[16]','Symbol MAG'
   ,'MG_UID','STRING[100]','Identyfikator rekordu'
   );
_pom_ndx:=_pom.ndx_tmp(,1,'MG_SYM',,);
_pom.index(_pom_ndx);

_add:="_wyn:=params_get().wyn;
       _wyn.blank();
       _wyn.AKR:=_a;
       _wyn.USER_REF:=_b;
       _wyn.USER_KOD:=_c;
       _wyn.REF:=_d;
       _wyn.KOD:=_e;
       _wyn.ACCESS:=_f;
       _wyn.FULL:=_g;
       _wyn.DOM:=_h;
       _wyn.NR:=_i;
       _wyn.UIDREF:=_j;
       _wyn.add(1)
      ";

USERS.cntx_psh();
USERS_UP.cntx_psh();
ODDZ.cntx_psh();
MG.cntx_psh();
STS.cntx_psh();
TR_RODZ.cntx_psh();

{? _a='ODDZ'
|| ODDZ.index('KOD');
   ODDZ.prefix()
|? _a='MG'
|| MG.index('MAG');
   MG.prefix()
|? _a='STS'
|| STS.index('KOD');
   STS.prefix('S')
|? _a='STZ'
|| STS.index('KOD');
   STS.prefix('Z')
|? 'ZAM;ZAW;'*_a
|| USERS_UP.index('MGNR');
   USERS_UP.prefix(null(),_a);
   {? USERS_UP.first()
   || {!
      |? _mg_ref:=USERS_UP.MG;
         _mg_sym:=USERS_UP.MG().SYM;
         _mg_uid:=USERS_UP.MG().uidref();
         _pom.blank();
         _pom.MG_REF:=$_mg_ref;
         _pom.MG_SYM:=_mg_sym;
         _pom.MG_UID:=_mg_uid;
         _pom.add(1);
         USERS_UP.next()
      !}
   ?}
|? _a='TR_RODZ'
|| TR_RODZ.index('KOD');
   TR_RODZ.prefix()
?};

USERS_UP.index({? 'MG;ZAM;ZAW;'*_a || 'MAG' || _a ?});

USERS.f_clear();
USERS.index('USR_AKOD');
USERS.prefix('T');

{? USERS.first()
|| {!
   |? _user_ref:=USERS.ref();
      _user_kod:=USERS.KOD;
      _moz_dostep:=exec('user_upraw_dostep','users_upraw',_a,_user_ref);
      _pelny:=_moz_dostep & exec('user_upraw_jak','users_upraw',_a,_user_ref)=2;
      _full:={? _pelny || 'T' || 'N' ?};
      USERS_UP.prefix(_user_ref,_a);
      {? _a='ODDZ' & ODDZ.first()
      || {!
         |? _access:={? _moz_dostep & (_pelny | USERS_UP.find_key(ODDZ.ref())) || 'T' || 'N' ?};
            params_set('wyn',_wyn);
            (_add)(_a,$_user_ref,_user_kod,$ODDZ.ref(),ODDZ.KOD,_access,_full,'N',0,USERS.uidref()+ODDZ.uidref());
            ODDZ.next()
         !}
      |? _a='MG' & MG.first()
      || {!
         |? _access:={? _moz_dostep & (_pelny | USERS_UP.find_key(MG.ref())) || 'T' || 'N' ?};
            params_set('wyn',_wyn);
            (_add)(_a,$_user_ref,_user_kod,$MG.ref(),MG.SYM,_access,_full,'N',0,USERS.uidref()+MG.uidref());
            MG.next()
         !}
      |? _a='STS' & STS.first()
      || {!
         |? _access:={? _moz_dostep & (_pelny | USERS_UP.find_key(STS.ref())) || 'T' || 'N' ?};
            params_set('wyn',_wyn);
            (_add)(_a,$_user_ref,_user_kod,$STS.ref(),STS.KOD,_access,_full,'N',0,USERS.uidref()+STS.uidref());
            STS.next()
         !}
      |? _a='STZ' & STS.first()
      || {!
         |? _access:={? _moz_dostep & (_pelny | USERS_UP.find_key(STS.ref())) || 'T' || 'N' ?};
            params_set('wyn',_wyn);
            (_add)(_a,$_user_ref,_user_kod,$STS.ref(),STS.KOD,_access,_full,'N',0,USERS.uidref()+STS.uidref());
            STS.next()
         !}
      |? 'ZAM;ZAW;'*_a & _pom.first()
      || {!
         |? {? _moz_dostep & USERS_UP.find_key(BB.sqlint(_pom.MG_REF))
            || _dom:=USERS_UP.DOM;
               _num:=USERS_UP.NR;
               _access:='T'
            || _dom:='N';
               _num:=0;
               _access:={? _pelny || 'T' || 'N' ?}
            ?};
            params_set('wyn',_wyn);
            (_add)(_a,$_user_ref,_user_kod,_pom.MG_REF,_pom.MG_SYM,_access,_full,_dom,_num,
                  USERS.uidref()+_pom.MG_UID);
            _pom.next()
         !}
      |? _a='TR_RODZ' & TR_RODZ.first()
      || {!
         |? _access:={? _moz_dostep & (_pelny | USERS_UP.find_key(TR_RODZ.ref())) || 'T' || 'N' ?};
            params_set('wyn',_wyn);
            (_add)(_a,$_user_ref,_user_kod,$TR_RODZ.ref(),TR_RODZ.KOD,_access,_full,'N',0,
                   USERS.uidref()+TR_RODZ.uidref());
            TR_RODZ.next()
         !}
      ?};
      USERS.next()
   !}
?};

USERS.cntx_pop();
USERS_UP.cntx_pop();
ODDZ.cntx_pop();
MG.cntx_pop();
STS.cntx_pop();
TR_RODZ.cntx_pop();

_wyn


\TabTarUp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Tymczasowa tabela uprawnień do cenników
::   WE: _a - rodzaj uprawnienia (S, D)
::   WY: uchwyt tabeli
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | (_a<>'S' & _a<>'D')
|| _a:='S'
?};

_wyn:=tab_tmp(5
   ,'AKR','STRING[1]','Rodzaj uprawnienia'
   ,'USER_KOD','STRING[10]','User kod'
   ,'KOD','STRING[20]','Kod cennika'
   ,'USER_REF','STRING[16]','User ref'
   ,'REF','STRING[16]','Ref cennika'
   ,'ACCESS','STRING[1]','Uprawnienie'
   ,'FULL','STRING[1]','Pełne uprawnienia'
   ,'UIDREF','STRING[100]','Identyfikator rekordu'
   );

_add:="_wyn:=params_get().wyn;
       _wyn.blank();
       _wyn.AKR:=_a;
       _wyn.USER_REF:=_b;
       _wyn.USER_KOD:=_c;
       _wyn.REF:=_d;
       _wyn.KOD:=_e;
       _wyn.ACCESS:=_f;
       _wyn.FULL:=_g;
       _wyn.UIDREF:=_h;
       _wyn.add(1)
      ";

USERS.cntx_psh();
TARUP.cntx_psh();
TARGN.cntx_psh();

TARGN.index('S');
TARGN.prefix(_a);
TARUP.index('USER');

USERS.f_clear();
USERS.index('USR_AKOD');
USERS.prefix('T');

{? USERS.first()
|| {!
   |? _user_ref:=USERS.ref();
      _user_kod:=USERS.KOD;
      _moz_dostep:=exec('user_upraw_dostep','users_upraw',_a,_user_ref);
      _pelny:=_moz_dostep & exec('user_upraw_jak','users_upraw','TAR'+_a,_user_ref)=2;
      _full:={? _pelny || 'T' || 'N' ?};
      TARUP.prefix(_user_ref,null());
      {? TARGN.first()
      || {!
         |? _access:={? _moz_dostep & (_pelny | TARUP.find_key(TARGN.ref())) || 'T' || 'N' ?};
            params_set('wyn',_wyn);
            (_add)(_a,$_user_ref,_user_kod,$TARGN.ref(),TARGN.KOD,_access,_full,USERS.uidref()+TARGN.uidref());
            TARGN.next()
         !}
      ?};
      USERS.next()
   !}
?};

USERS.cntx_pop();
TARUP.cntx_pop();
TARGN.cntx_pop();

_wyn


\TabKUserUpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Tymczasowa tabela uprawnień do do stanowisk kasowych
::   WY: uchwyt tabeli
::----------------------------------------------------------------------------------------------------------------------

_wyn:=tab_tmp(5
   ,'USER_KOD','STRING[10]','User kod'
   ,'KOD','INTEGER','Kod stanowiska'
   ,'USER_REF','STRING[16]','User ref'
   ,'REF','STRING[16]','Ref stanowiska'
   ,'ACCESS','STRING[1]','Uprawnienie'
   ,'FULL','STRING[1]','Pełne uprawnienia'
   ,'UIDREF','STRING[100]','Identyfikator rekordu'
   );

_add:="_wyn:=params_get().wyn;
       _wyn.blank();
       _wyn.USER_REF:=_a;
       _wyn.USER_KOD:=_b;
       _wyn.REF:=_c;
       _wyn.KOD:=_d;
       _wyn.ACCESS:=_e;
       _wyn.FULL:=_f;
       _wyn.UIDREF:=_g;
       _wyn.add(1)
      ";

USERS.cntx_psh();
KUSERUPR.cntx_psh();
STANKAS.cntx_psh();

STANKAS.index('KOD');
STANKAS.prefix();
KUSERUPR.index('KU_ST');

USERS.f_clear();
USERS.index('USR_AKOD');
USERS.prefix('T');

{? USERS.first()
|| {!
   |? _user_ref:=USERS.ref();
      _user_kod:=USERS.KOD;
      _moz_dostep:=exec('user_upraw_dostep','users_upraw','KAS',_user_ref);
      {? _moz_dostep
      || _pelny:=_moz_dostep & exec('user_upraw_jak','users_upraw','KAS',_user_ref)=2;
         _full:={? _pelny || 'T' || 'N' ?};
         KUSERUPR.prefix(_user_ref);
         {? STANKAS.first()
         || {!
            |? _access:={? _moz_dostep & (_pelny | KUSERUPR.find_key(STANKAS.ref())) || 'T' || 'N' ?};
               params_set('wyn',_wyn);
               (_add)($_user_ref,_user_kod,$STANKAS.ref(),STANKAS.KOD,_access,_full,USERS.uidref()+STANKAS.uidref());
               STANKAS.next()
            !}
         ?}
      ?};
      USERS.next()
   !}
?};

USERS.cntx_pop();
KUSERUPR.cntx_pop();
STANKAS.cntx_pop();

_wyn


\TabMKasaUpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Tymczasowa tabela uprawnień do do stanowisk kasowych
::   WY: uchwyt tabeli
::----------------------------------------------------------------------------------------------------------------------

_wyn:=tab_tmp(5
   ,'USER_KOD','STRING[10]','User kod'
   ,'NAZ','STRING[100]','Nazwa multikasy'
   ,'USER_REF','STRING[16]','User ref'
   ,'REF','STRING[16]','Ref multikasy'
   ,'ACCESS','STRING[1]','Uprawnienie'
   ,'FULL','STRING[1]','Pełne uprawnienia'
   ,'UIDREF','STRING[100]','Identyfikator rekordu'
   );

_add:="_wyn:=params_get().wyn;
       _wyn.blank();
       _wyn.USER_REF:=_a;
       _wyn.USER_KOD:=_b;
       _wyn.REF:=_c;
       _wyn.NAZ:=_d;
       _wyn.ACCESS:=_e;
       _wyn.FULL:=_f;
       _wyn.UIDREF:=_g;
       _wyn.add(1)
      ";

USERS.cntx_psh();
MKASAUPR.cntx_psh();
MKASA.cntx_psh();

MKASA.index('NAZ');
MKASA.prefix();
MKASAUPR.index('UNIK');

USERS.f_clear();
USERS.index('USR_AKOD');
USERS.prefix('T');

{? USERS.first()
|| {!
   |? _user_ref:=USERS.ref();
      _user_kod:=USERS.KOD;
      _moz_dostep:=exec('user_upraw_dostep','users_upraw','MKAS',_user_ref);
      {? _moz_dostep
      || _pelny:=_moz_dostep & exec('user_upraw_jak','users_upraw','MKAS',_user_ref)=2;
         _full:={? _pelny || 'T' || 'N' ?};
         MKASAUPR.prefix(_user_ref);
         {? MKASA.first()
         || {!
            |? _access:={? _moz_dostep & (_pelny | MKASAUPR.find_key(MKASA.ref())) || 'T' || 'N' ?};
               params_set('wyn',_wyn);
               (_add)($_user_ref,_user_kod,$MKASA.ref(),MKASA.NAZ,_access,_full,USERS.uidref()+MKASA.uidref());
               MKASA.next()
            !}
         ?}
      ?};
      USERS.next()
   !}
?};

USERS.cntx_pop();
MKASAUPR.cntx_pop();
MKASA.cntx_pop();

_wyn


\bperm_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Zwraca ref B_PERM dla danego rodzaju uprawnienia
::   WE: _a - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TARS, TARD, KAS, MKAS, TR_RODZ)
::   WY: ref B_PERM
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | (_a<>'ODDZ' & _a<>'MG' & _a<>'STS' & _a<>'STZ' & _a<>'ZAM' & _a<>'ZAW' &
   _a<>'TARS' & _a<>'TARD' & _a<>'KAS' & _a<>'MKAS' & _a<>'TR_RODZ')
|| _a:='ODDZ'
?};

_rodz:=_a;
_rodz1:=exec('rodz_uu2bp','b_perm',_rodz);

_bperm_ref:=null();
B_PERM.cntx_psh();
B_PERM.index('NAME');
B_PERM.prefix(_rodz1);
{? B_PERM.first()
|| _bperm_ref:=B_PERM.ref()
?};
B_PERM.cntx_pop();

_bperm_ref


\user_upraw_dostep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Sprawdza w tabeli B_PERM_U czy dany użytkownik może mieć dany rodzaj uprawnienia
::   WE: _a - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TARS, TARD, KAS, MKAS, TR_RODZ)
::       _b - ref użytkownika
::   WY: 1 - użytkownik może mieć uprawnienie
::       0 - użytkownik nie może mieć uprawnienia
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | (_a<>'ODDZ' & _a<>'MG' & _a<>'STS' & _a<>'STZ' & _a<>'ZAM' & _a<>'ZAW' &
   _a<>'TARS' & _a<>'TARD' & _a<>'KAS' & _a<>'MKAS' & _a<>'TR_RODZ')
|| _a:='ODDZ'
?};
{? var_pres('_b')<>type_of(null()) | _b=null()
|| return(0)
?};

_rodz:=_a;
_user_ref:=_b;
_bperm_ref:=exec('bperm_ref','users_upraw',_rodz);

B_PERM_U.cntx_psh();
B_PERM_U.index('USER');
B_PERM_U.prefix(REF.FIRMA,_user_ref,_bperm_ref);
_dostep:=(B_PERM_U.first());
B_PERM_U.cntx_pop();

_dostep


\user_upraw_ustaw_domysl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Dla uprawnienia użytkownika do magazynów realizujących zamówień ustawienie dokładnie jednego
::       magazynu domyślnego
::   WE: _a - rodzaj uprawnienia (ZAM, ZAW)
::       _b - ref użytkownika
::       _c - ref magazynu domyslnego
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | (_a<>'ZAM' & _a<>'ZAW')
|| _a:='ZAM'
?};
{? var_pres('_b')<>type_of(null()) | _b=null()
|| return(~~)
?};
{? var_pres('_c')<>type_of(null()) | _c=null()
|| return(~~)
?};

_rodz:=_a;
_user_ref:=_b;
_mag_ref:=_c;

USERS_UP.cntx_psh();
USERS_UP.index('MAG');
USERS_UP.prefix(_user_ref,_a);
{? USERS_UP.first()
|| {!
   |? {? USERS_UP.MG=_mag_ref & USERS_UP.DOM<>'T'
      || USERS_UP.DOM:='T';
         USERS_UP.put()
      |? USERS_UP.MG<>_mag_ref & USERS_UP.DOM='T'
      || USERS_UP.DOM:='N';
         USERS_UP.put()
      ?};
      USERS_UP.next()
   !}
?};
USERS_UP.cntx_pop();
~~


\user_upraw_usun_blad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Usunięcie błędnych rekordów z tabeli USERS_UP
::   WE: _a - nazwa uprawnienia: np.: ODDZ, domyślnie pusta = wszystkie uprawniena
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | (_a<>'ODDZ' & _a<>'MG' & _a<>'STS' & _a<>'STZ' & _a<>'ZAM' & _a<>'ZAW'
   & _a<>'TR_RODZ' & _a<>'TARD' & _a <>'TARS')
|| _a:=''
?};
_rodz:=_a;

{? _rodz<>''
|| _bp_ref:=exec('bperm_ref','users_upraw',_rodz)
|| _bp_ref:=null()
?};

B_PERM_U.cntx_psh();

{? _rodz='' | _rodz='ODDZ' | _rodz='MG' | _rodz='STS' | _rodz='STZ' | _rodz='ZAM' | _rodz='ZAW' | _rodz='TR_RODZ'
|| USERS_UP.cntx_psh();
   USERS_UP.prefix();
   _fml:="
       _rodz:=params_get().rodz;
       _bp_ref:=params_get().bp_ref;
       {? _rodz='' | USERS_UP.AKR=_rodz
       || {? (USERS_UP.AKR='ODDZ' & USERS_UP.ODDZ=null()) |
             ((USERS_UP.AKR='MG' | USERS_UP.AKR='ZAM' | USERS_UP.AKR='ZAW') & USERS_UP.MG=null()) |
             (USERS_UP.AKR='STS' & USERS_UP.STS=null()) |
             (USERS_UP.AKR='STZ' & USERS_UP.STZ=null()) |
             (USERS_UP.AKR='TR_RODZ' & USERS_UP.TR_RODZ=null())
          || USERS_UP.del(1)
          |? USERS_UP.USERS<>null()
          || {? _rodz=''
             || _bp_ref:=exec('bperm_ref','users_upraw',USERS_UP.AKR)
             ?};
             B_PERM_U.index('USER');
             B_PERM_U.prefix(REF.FIRMA,USERS_UP.USERS,_bp_ref);
             {? ~B_PERM_U.first()
             || USERS_UP.del(1)
             ?}
          ?}
       ?}";
   params_set('rodz',_rodz,'bp_ref',_bp_ref);
   USERS_UP.for_each(_fml);
   USERS_UP.cntx_pop()
?};

{? _rodz='' | _rodz='TARD' | _rodz='TARS'
|| TARUP.cntx_psh();
   TARUP.prefix();
   _fml:="
       _rodz:=params_get().rodz;
       _bp_ref:=params_get().bp_ref;
       {? _rodz='' | TARUP.TARGN().SD=_rodz+1
       || {? _rodz=''
          || _bp_ref:=exec('bperm_ref','users_upraw','TAR'+TARUP.TARGN().SD)
          ?};
          B_PERM_U.index('USER');
          B_PERM_U.prefix(REF.FIRMA,TARUP.USER,_bp_ref);
          {? ~B_PERM_U.first()
          || TARUP.del(1)
          ?}
       ?}";
   params_set('rodz',_rodz,'bp_ref',_bp_ref);
   TARUP.for_each(_fml);
   TARUP.cntx_pop()
?};

B_PERM_U.cntx_pop();
~~


\usr_upr_wylicz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Zwraca poprawny zakres uprawnień użytkownika, gdy są oznaczone jako "do wybranych" lub "brak"
::       W buforze użytkownik (USERS) i uprawnienie (B_PERM_U)
::   WE: _a - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TARS, TARD, TR_RODZ, KAS, MKAS)
::       _b - tryb działania : 0 - po imporcie z xls (domyślnie),
::                             1 - zadanie potransferowe po wprowadzeniu uprawnień oznaczonych "do wszystkich"
::   WY: zakres uprawnień: 0 - brak 1 - do wybranych 2 - do wszystkiego ~~ - bez zmian
::----------------------------------------------------------------------------------------------------------------------
_perm:=_a;
_tryb:=0;
{? var_pres('_b')=type_of(0)
|| _tryb:=_b
?};
_ret:=~~;
_user:=B_PERM_U.USER;
_jak0:={? B_PERM_U.FULL='T' || 2 |? B_PERM_U.ACCESS='T' || 1 || 0?};

{? _jak0=2
|| return(~~)
?};

{? _perm='ODDZ'
|| {? exec('FindInSet','#table','USERS_UP','ODDZ','ODDZ',_user,,,,null())=null()
   || _ret:=0
   || _ret:=1
   ?}
|? _perm='MG'
|| {? exec('FindInSet','#table','USERS_UP','MAG','MG',_user,,,,null())=null()
   || _ret:=0
   || _ret:=1
   ?}
|? _perm='STS'
|| {? exec('FindInSet','#table','USERS_UP','STS','STS',_user,,,,null())=null()
   || {? _tryb=1 & exec('get','#params',2102,2,_user)<>'T'
      || _ret:=2
      || _ret:=0
      ?}
   || _ret:=1
   ?}
|? _perm='STZ'
|| {? exec('FindInSet','#table','USERS_UP','STZ','STZ',_user,,,,null())=null()
   || {? _tryb=1 & exec('get','#params',6102,2,_user)<>'T'
      || _ret:=2
      || _ret:=0
      ?}
   || _ret:=1
   ?}
|? _perm='ZAM'
|| {? exec('FindInSet','#table','USERS_UP','MAG','ZAM',_user,,,,null())=null()
   || {? _tryb=1
      || _ret:=2
      || _ret:=0
      ?}
   || _ret:=1
   ?}
|? _perm='ZAW'
|| {? exec('FindInSet','#table','USERS_UP','MAG','ZAW',_user,,,,null())=null()
   || {? _tryb=1
      || _ret:=2
      || _ret:=0
      ?}
   || _ret:=1
   ?}
|? _perm='TR_RODZ'
|| {? exec('FindInSet','#table','USERS_UP','TR_RODZ','TR_RODZ',_user,,,,null())=null()
   || {? _tryb=1
      || _ret:=2
      || _ret:=0
      ?}
   || _ret:=1
   ?}
|? _perm='KAS'
|| {? exec('FindInSet','#table','KUSERUPR','KU_ST',_user,,,,,null())=null()
   || _ret:=0
   || _ret:=1
   ?}
|? _perm='MKAS'
|| {? exec('FindInSet','#table','MKASAUPR','UNIK',_user,,,,,null())=null()
   || {? _tryb=1
      || _ret:=2
      || _ret:=0
      ?}
   || _ret:=1
   ?}
|? _perm='TARS' | _perm='TARD'
|| _sd:=_perm+1;
   _jest:=0;
   TARUP.cntx_psh();
   TARUP.index('USER');
   TARUP.prefix(_user,null());
   {? TARUP.first()
   || {!
      |? {? TARUP.TARGN().SD=_sd
         || _jest:=1
         ?};
         ~_jest & TARUP.next()
      !}
   ?};
   {? _jest
   || _ret:=1
   || {? _tryb=1
      || _ret:=2
      || _ret:=0
      ?}
   ?};
   TARUP.cntx_pop()
?};

{? _ret<>~~ & _ret=_jak0
|| _ret:=~~
?};

_ret


\usr_upr_0
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do danych - zadanie potransferowe
::   WE: _a - rodzaj uprawnienia (STS, STZ, ZAM, ZAW, TR_RODZ, TARS, TARD, MKAS)
::----------------------------------------------------------------------------------------------------------------------
_rodz:=_a;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=0;
__lmod:=0;

_bp_ref:=exec('bperm_ref','users_upraw',_rodz);

USERS.cntx_psh();
B_PERM_U.cntx_psh();

USERS.index('USR_KKOD');
USERS.prefix();
{? USERS.first()
|| {!
   |? B_PERM_U.index('USER');
      B_PERM_U.prefix(REF.FIRMA,USERS.ref(),_bp_ref);
      {? B_PERM_U.first()
      || __lrec+=1;
         _jak:=exec('usr_upr_wylicz','users_upraw',_rodz,1);
         {? _jak<>~~
         || __lmod+=1;
            B_PERM_U.FULL:={? _jak=2 || 'T' || 'N' ?};
            B_PERM_U.ACCESS:={? _jak || 'T' || 'N' ?};
            B_PERM_U.put()
         ?}
      ?};
      USERS.next()
   !}
?};

USERS.cntx_pop();
B_PERM_U.cntx_pop();

_msg:='Zaktualizowano uprawnienia użytkowników do ';
{? _rodz='STS'
|| _msg+='stanowisk sprzedaży'
|? _rodz='STZ'
|| _msg+='stanowisk zakupu'
|? _rodz='ZAM'
|| _msg+='magazynów realizujących zamówienia sprzedaży'
|? _rodz='ZAW'
|| _msg+='magazynów realizujących zamówienia wewnętrzne'
|? _rodz='TR_RODZ'
|| _msg+='kategorii transportu'
|? _rodz='TARS'
|| _msg+='cenników sprzedaży'
|? _rodz='TARD'
|| _msg+='cenników dostawców'
|? _rodz='MKAS'
|| _msg+='multikas'
?};
_msg+='.';
__UPG.msg(_msg);
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');

1


\usr_upr_napraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do danych - np. po imporcie
::   WE: _a - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TARS, TARD, KAS, MKAS, TR_RODZ)
::----------------------------------------------------------------------------------------------------------------------
_rodz:=_a;

_bp_ref:=exec('bperm_ref','users_upraw',_rodz);

USERS.cntx_psh();
B_PERM_U.cntx_psh();

USERS.index('USR_KKOD');
USERS.prefix();
{? USERS.first()
|| {!
   |? B_PERM_U.index('USER');
      B_PERM_U.prefix(REF.FIRMA,USERS.ref(),_bp_ref);
      {? B_PERM_U.first()
      || _jak:=exec('usr_upr_wylicz','users_upraw',_rodz);
         {? _jak<>~~
         || B_PERM_U.FULL:={? _jak=2 || 'T' || 'N' ?};
            B_PERM_U.ACCESS:={? _jak || 'T' || 'N' ?};
            B_PERM_U.put()
         ?}
      ?};
      USERS.next()
   !}
?};

USERS.cntx_pop();
B_PERM_U.cntx_pop();

~~


\user_upraw_ustaw_pelne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Ustawienie pełnych uprawnień w tabeli USERS_UP, TARUP, KUSERUPR lub MKASAUPR
::   WE: _a - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TARS, TARD, KAS, MKAS, TR_RODZ)
::       _b - ref użytkownika
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | (_a<>'ODDZ' & _a<>'MG' & _a<>'STS' & _a<>'STZ' & _a<>'ZAM' & _a<>'ZAW' &
   _a<>'TARS' & _a<>'TARD' & _a<>'KAS' & _a<>'MKAS' & _a<>'TR_RODZ')
|| return(~~)
?};
{? var_pres('_b')<>type_of(null()) | _b=null()
|| return(~~)
?};

_rodz:=_a;
_user:=_b;

{? _rodz='KAS'
|| KUSERUPR.cntx_psh();
   STANKAS.cntx_psh();
   KUSERUPR.index('KU_ST');
   KUSERUPR.prefix(_user);
   STANKAS.index('KOD');
   STANKAS.prefix();
   {? STANKAS.first()
   || {!
      |? {? ~KUSERUPR.find_key(STANKAS.ref())
         || KUSERUPR.blank();
            KUSERUPR.KU:=_user;
            KUSERUPR.STANKAS:=STANKAS.ref();
            KUSERUPR.UPR:='T';
            KUSERUPR.add()
         ?};
         STANKAS.next()
      !}
   ?};
   STANKAS.cntx_pop();
   KUSERUPR.cntx_pop()

|? _rodz='MKAS'
|| MKASAUPR.cntx_psh();
   MKASA.cntx_psh();
   MKASAUPR.index('UNIK');
   MKASAUPR.prefix(_user);
   MKASA.index('NAZ');
   MKASA.prefix();
   {? MKASA.first()
   || {!
      |? {? ~MKASAUPR.find_key(MKASA.ref())
         || MKASAUPR.blank();
            MKASAUPR.USER:=_user;
            MKASAUPR.MKASA:=MKASA.ref();
            MKASAUPR.MKASAN:=MKASA.NAZ;
            MKASAUPR.add()
         ?};
         STANKAS.next()
      !}
   ?};
   MKASA.cntx_pop();
   MKASAUPR.cntx_pop()

|? _rodz='TARS' | _rodz='TARD'
|| TARUP.cntx_psh();
   TARGN.cntx_psh();
   TARUP.index('USER');
   TARUP.prefix(_user,null());
   TARGN.index('S');
   TARGN.prefix(_rodz+1);
   {? TARGN.first()
   || {!
      |? {? ~TARUP.find_key(TARGN.ref())
         || TARUP.blank();
            TARUP.USER:=_user;
            TARUP.TARGN:=TARGN.ref();
            TARUP.add()
         ?};
         TARGN.next()
      !}
   ?};
   TARGN.cntx_pop();
   TARUP.cntx_pop()

|| USERS_UP.cntx_psh();
   ODDZ.cntx_psh();
   MG.cntx_psh();
   STS.cntx_psh();

   USERS_UP.index({? 'MG;ZAM;ZAW;'*_rodz || 'MAG' || _rodz ?});
   USERS_UP.prefix(_user,_rodz);

   {? _rodz='ODDZ'
   || ODDZ.index('KOD');
      ODDZ.prefix();
      {? ODDZ.first()
      || {!
         |? {? ~USERS_UP.find_key(ODDZ.ref())
            || USERS_UP.blank();
               USERS_UP.USERS:=_user;
               USERS_UP.AKR:=_rodz;
               USERS_UP.ODDZ:=ODDZ.ref();
               USERS_UP.add()
            ?};
            ODDZ.next()
         !}
      ?}
   |? _rodz='MG'
   || MG.index('MAG');
      MG.prefix();
      {? MG.first()
      || {!
         |? {? ~USERS_UP.find_key(MG.ref())
            || USERS_UP.blank();
               USERS_UP.USERS:=_user;
               USERS_UP.AKR:=_rodz;
               USERS_UP.MG:=MG.ref();
               USERS_UP.add()
            ?};
            MG.next()
        !}
      ?}
   |? _rodz='STS'
   || STS.index('KOD');
      STS.prefix('S');
      {? STS.first()
      || {!
         |? {? ~USERS_UP.find_key(STS.ref())
            || USERS_UP.blank();
               USERS_UP.USERS:=_user;
               USERS_UP.AKR:=_rodz;
               USERS_UP.STS:=STS.ref();
               USERS_UP.add()
            ?};
            STS.next()
         !}
      ?}
   |? _rodz='STZ'
   || STS.index('KOD');
      STS.prefix('Z');
      {? STS.first()
      || {!
         |? {? ~USERS_UP.find_key(STS.ref())
            || USERS_UP.blank();
               USERS_UP.USERS:=_user;
               USERS_UP.AKR:=_rodz;
               USERS_UP.STZ:=STS.ref();
               USERS_UP.add()
            ?};
            STS.next()
         !}
      ?}
   |? 'ZAM;ZAW;TR_RODZ'*_rodz
   || {!
      |? USERS_UP.first()
      |! USERS_UP.del(1)
      !}
   ?};

   USERS_UP.cntx_pop();
   ODDZ.cntx_pop();
   MG.cntx_pop();
   STS.cntx_pop()

?};

~~


\user_upraw_jak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Sprawdza w tabeli B_PERM_U jakie uprawnienie danego rodzaju ma dany użytkownik
::   WE: _a - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TARS, TARD, KAS, MKAS, TR_RODZ)
::       _b - ref użytkownika
::   WY: 2 - do wszystkich (B_PERM_U.FULL)
::       1 - do wybranych  (B_PERM_U.ACCESS)
::       0 - brak
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | (_a<>'ODDZ' & _a<>'MG' & _a<>'STS' & _a<>'STZ' & _a<>'ZAM' & _a<>'ZAW' &
   _a<>'TARS' & _a<>'TARD' & _a<>'KAS' & _a<>'MKAS' & _a<>'TR_RODZ')
|| return(0)
|| _rodz:=_a
?};
{? var_pres('_b')<>type_of(null()) | _b=null()
|| _user_ref:=OPERATOR.USER
|| _user_ref:=_b
?};
_rodz_bp:=exec('rodz_uu2bp','b_perm',_rodz);
_jak:=0;
{? Perm.hasFull(_rodz_bp,_user_ref)
|| _jak:=2
|? Perm.hasPermissions(_rodz_bp,_user_ref)
|| _jak:=1
?};
_jak


\usr_upr_uzupełnij_pelne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Uzupełnienie pełnych uprawnień użytkowników do danych - po dopisaniu nowej pozycji słownika
::   WE: _a - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TARS, TARD, KAS, MKAS, TR_RODZ)
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | (_a<>'ODDZ' & _a<>'MG' & _a<>'STS' & _a<>'STZ' & _a<>'ZAM' & _a<>'ZAW' &
   _a<>'TARS' & _a<>'TARD' & _a<>'KAS' & _a<>'MKAS' & _a<>'TR_RODZ')
|| return(~~)
?};
_rodz:=_a;

USERS.cntx_psh();
USERS.index('USR_AKOD');
USERS.prefix('T');
{? USERS.first()
|| {!
   |? _user_ref:=USERS.ref();
      {? exec('user_upraw_jak','users_upraw',_rodz,_user_ref)=2
      || exec('user_upraw_ustaw_pelne','users_upraw',_rodz,_user_ref)
      ?};
      USERS.next()
   !}
?};
USERS.cntx_pop();
~~


\ctrlTR_RODZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Kontrola uprawnień do ról lub czynnośći dla TR_RODZ
::   WE: _a - użytkownik
::   WY: 1-ma uprawnienia, 0-nie ma
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_user:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_bperm:=exec('FindInSet','#table','B_PERM','NAME','TR_RODZ',,,1,,null());
{? _bperm<>null() & _user<>null()
|| B_PERM_A.cntx_psh();
   B_PERM_A.index('B_PERM');
   B_PERM_A.prefix(_bperm);
   {? B_PERM_A.first()
   || {!
      |? _res:=exec('chk_role','#b__box',_user,B_PERM_A.B_ACTION().UID);
         ~_res & B_PERM_A.next()
      !}
   ?};
   B_PERM_A.cntx_pop()
?};
_res

:Sign Version 2.0 jowisz:1045 2023/09/29 12:54:10 d99e769d12eeec0caf1ec413a430d070bc9e0cff29a6a588e7b49317565316d084f6dce40f1470b12149f3cf64014080a65b2377b111ee461cbf6fae070acb0ebf1ad9f1ec00246a5c6893f4507f1e62e9e75af4f0a4e5d594a6212975649d0e67648add2196f9fc0fe04c551886e47d474fd35bcc8b499d9ccaf0125b9de1db
