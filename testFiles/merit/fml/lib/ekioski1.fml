:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: ekioski1.fml
:: Utworzony: 05.04.2023
:: Autor: AKUL
::======================================================================================================================
:: Zawartość: Obsługa e-kiosków
::======================================================================================================================


\paleta_fill
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Wypełnia tabelę z pozycjami palet na podstawie przekazanego kodu palety.
::       Wymagane zainicjowane środowisko __ENV_REJ
::   WE: _a - STRING - kod palety
::       [_b] - REAL - ilość, gdy paleta ma tylko jedną pozycję, to zostanie uzupełniona dla niej podana ilość
::   WY: 1 - ok, 0 - brak zgodnych indeksów na palecie, -1 - nieprawidłowy stan palety
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_kodk:={? var_pres('_a')=type_of('') || _a || '' ?};
_ilosc:={? var_pres('_b')=type_of(0) || _b || 0 ?};
{? var_pres('__ENV_REJ')>100 & _kodk<>''
|| _pal:=__ENV_REJ.TAB_P;
   _pal.erase();
   PAL.cntx_psh();
   PAL.use('palety');
   PAL.index('PAL');
   PAL.prefix();
:: Ustalenie filtru na palety, które mogą być wykorzystane do rozchodowania surowca
   exec('pal2dk_filter','magdok_poz');
   {? PAL.f_find(_kodk,)
   || PAL_POZ.cntx_psh();
      {? PAL.AKT='N'
      || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
      || PAL_POZ.use('paletyp')
      ?};
      PAL_POZ.index('PAL');
      PAL_POZ.prefix(PAL.ref());
      {? PAL_POZ.first()
      ||
         _lok_dflt:=null();
::       Określenie lokalizacji
         SL.cntx_psh();
         SL.index('PALM');
         SL.prefix(PAL.MG,PAL_POZ.M,PAL.ref());
         {? SL.first()
         || _lok_dflt:=SL.EANL
         ?};
         SL.cntx_pop();
         {? _lok_dflt=null()
         || MG.cntx_psh();
            _lok_dflt:=PAL.MG().EANL;
            MG.cntx_pop()
         ?};
         _tab:=__ENV_REJ.TAB_N;
         _tab.cntx_psh();
         _tab.index(__ENV_REJ.NDX_N);
         {!
         |?
::          Sprawdzenie czy indeks występuje na liście zapotrzebowań operacji zlecenia
            _tab.prefix($PAL_POZ.M,);
            {? _tab.first()
            || _zlim:=exec('FindAndGet','#table','ZLIM',_tab.ZLIMREF,,,null());
               _zl:=exec('FindAndGet','#table','ZL',_tab.ZLREF,,,null());
::             Sprawdzenie zgodności z cechą
               {? _zl<>null() & _zlim<>null() & exec('dkc_compare','zl_limit',PAL_POZ.DK_C,_zlim,,0)>0
               || _pal.KODK:=PAL.KODK;
                  _pal.KTM:=PAL_POZ.M().KTM;
                  _pal.M:=PAL_POZ.M().N;
                  _pal.MREF:=$PAL_POZ.M;
                  _pal.IL:=0;
::                  _pal.IL:={? PAL_POZ.size()=1 || _ilosc || 0 ?};
                  _pal.ILC:=PAL_POZ.IL;
                  _pal.ILP:=PAL_POZ.ILP;
                  _pal.JM:=PAL_POZ.M().J().KOD;
                  _pal.DKCREF:=$PAL_POZ.DK_C;
                  _pal.PAL:=$PAL.ref();
                  _pal.PAL_POZ:=$PAL_POZ.ref();
                  _pal.MGREF:=$PAL.MG;
                  _pal.EANLREF:=$_lok_dflt;
::                Wyszukanie dostawy
                  _dost:=
                     {? PAL_POZ.SCSQL<>''
                     || (8+PAL_POZ.SCSQL)+form(BB.sqlint(PAL_POZ.SCSQL),-8,0,'99')
                     || exec('last_dst','magdok_palety',PAL_POZ.M,PAL_POZ.PAL,PAL_POZ.C,PAL_POZ.DK_C,PAL_POZ.IL)
                     ?};
                  _tab_nost:=exec('aktrdndk','magdok_palety',PAL.MG,#form(8-_dost),form(8+_dost),PAL_POZ.PAL);
                  _nost:=form(_tab_nost[2])+form(_tab_nost[1],-8,0,'99');
                  {? _nost<>_dost
                  || _dost:=_nost
                  ?};
                  obj_del(_tab_nost);
::                  _pal.RSC:=PAL_POZ.SCSQL;
                  _pal.RSC:=$exec('FindAndGet','#table',DK,#form(8-_dost),form(8+_dost),,null());
                  _pal.LIL:=_tab.LIL;
                  _pal.ZLIMREF:=_tab.ZLIMREF;
                  _pal.add()
               ?}
            ?};
            PAL_POZ.next()
         !};
::       Jak tylko jedna pasująca pozycja to uzupełniam ilość
         {? _pal.size()=1
         || _pal.IL:=_ilosc;
            _pal.put()
         ?};
         _res:=_pal.size()>0;
         {? _res=0
         || FUN.info('Brak pozycji na palecie o indeksie materiałowym zgodnym z surowcami do rozliczenia.'@)
         ?};
         _tab.cntx_pop()
      ?};
      PAL_POZ.cntx_pop()
   |? PAL.find_key(_kodk,)
   || _res:=-1;
      FUN.info('Stan zeskanowanej palety nie pozwala na obsługę rozliczenia surowców zlecenia.'@)
   ?};
   PAL.cntx_pop();
   {? PAL.f_active() || PAL.f_clear() ?}
?};
_res


\paleta_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Wyświetla okno z pozycjami załadowanej palety.
::       Wymagane zainicjowane środowisko __ENV_REJ
::   WE:
::   WY: 0/1 - zatwierdzenie/anulowanie zmian
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? var_pres('__ENV_REJ')>100
|| USERS.cntx_psh();
   _wyn_ok:=eSelect.wyn_OK;
   eSelect.wyn_OK:=0;
   eLevel.up(__ENV_REJ.TAB_P,__ENV_REJ.WER_P,'PALETA');

:: Takie czary, żeby zadziałały tłumaczenia poniżej (teksty MUSZĄ być identyczne)
'WYLOGUJ'@;
   _before:="
      exec('load','#desktop','ctr_user_info','ekiosk_user_info2.dsk',,,,,,0);
      exec('set_value','#desktop','','ctr_user_info','fld_prac@user_info',VEK.P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE);
      exec('set_value','#desktop','','ctr_user_info','fld_info@user_info',VEK.A_WYD().KOD);

::    Druga linia informacji
      _info2:=exec('second_line','ekioski');
      exec('set_value','#desktop','','ctr_user_info','fld_line2@user_info',_info2);

      exec('load','#desktop','ctr_menu_nav','ekiosk_menu_nav.dsk',,,,,,0);
      exec('set_value','#desktop','','ctr_menu_nav','btn_logout@menu_nav','WYLOGUJ'@);
:: nav
      exec('set_visible','#desktop','','ctr_menu_nav','btn_info@menu_nav',0);
::      exec('set_enabled','#desktop','','ctr_menu_nav','btn_info@menu_nav',__ENV_REJ.TAB.size()>0);
      exec('set_visible','#desktop','','ctr_menu_nav','btn_filter@menu_nav',0);

      _tab:=exec('elements_menuPal_table','ekioski1');
      exec('load','#desktop','ctr_menu_pal','ekiosk_menu_pal.dsk',,,,,_tab,1);

      __ENV_REJ.TAB_P.first();
      ~~
   ";

   _grp:=USERS.grp_make('PALETA'@,_before,'pal_grp',,,,,,'jterm');
   exec('create','#desktop',USERS,'ctr_user_info',_grp,{? VEK.DPI=96 || 4 || 3 ?},eSelect.grp_width,,,,,,);
   USERS.grp_splt(_grp,,'horizontal','pozioma_1',0);
:: -----------------------------------------------
   _before:="
      ~~
   ";
:: Takie czary, żeby zadziałały tłumaczenia poniżej (teksty MUSZĄ być identyczne)
::   'Surowiec: %1, łączna ilość pobrana: %2 %3'@['','',''];
   _after_refresh:="
::    Ustawienie focusa na polu z ilością
      exec('grab_focus','#desktop','','ctr_menu_pal','fld_il@menu_pal');
      exec('set_value','#desktop','','ctr_menu_pal','fld_il@menu_pal','');
::    Trzecia linia informacji (informacje o palecie, surowcu)
      _info3:='';
      {? __ENV_REJ.TAB_P.size()>0
      ||  _dokl:=exec('jaka_dok_m','jm',exec('FindAndGet','#table',M,__ENV_REJ.TAB_P.MREF,,null()));
          _info3:='Paleta: %1, kod kreskowy: %2'@[exec('FindAndGet','#table',PAL,__ENV_REJ.TAB_P.PAL,
            ,\"PAL.TPAL().TYP\",''),exec('FindAndGet','#table',PAL,__ENV_REJ.TAB_P.PAL,,\"PAL.KODK\",'')];
          _info3+=' | Surowiec: %1, norma: %4 %3, pobrano: %2 %3'@[__ENV_REJ.TAB_P.M
                    ,form(exec('FindAndGet','#table',ZLIM,__ENV_REJ.TAB_P.ZLIMREF,,\"ZLIM.IL_RW-ZLIM.IL_ZW\",0)
                    ,,_dokl),__ENV_REJ.TAB_P.JM,form(__ENV_REJ.TAB_P.LIL,,_dokl)]
      ?};
      exec('set_value','#desktop','','ctr_user_info','fld_line3@user_info',_info3);
      ~~
   ";
   USERS.grp_sel(_grp,__ENV_REJ.TAB_P,__ENV_REJ.WER_P,,_after_refresh,,,{? VEK.DPI=96 || 6 || 5 ?},_before,,,,
                 'maximized_with_title','sur_wer_p',1);
   USERS.grp_splt(_grp,,'horizontal','pozioma_2',0);
:: -----------------------------------------------
   exec('create','#desktop',USERS,'ctr_menu_pal',_grp,{? VEK.DPI=96 || 15 || 12 ?},eSelect.grp_width,,,,1);
   USERS.grp_splt(_grp,,'horizontal','pozioma_4',0);
:: -----------------------------------------------
   exec('create','#desktop',USERS,'ctr_menu_nav',_grp,{? VEK.DPI=96 || 3 || 2 ?},eSelect.grp_width);
   USERS.win_sel(_grp);

   {? USERS.select() & eSelect.wyn_OK>0
   || _wyn:=1
   ?};
   USERS.cntx_pop();
   eSelect.wyn_OK:=_wyn_ok;
   eLevel.down()
?};
_wyn


\elements_menuPal_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Tabela elementów tłumaczonych w desktopie ekiosk_menu_pal.dsk
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('elements_table','#desktop');

_tab.blank();
_tab.ID_SYS:='btn_pal_save@menu_pal';
_tab.NAME:='Zapisz'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='fld_il@menu_pal';
_tab.NAME:='Ilość'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_accept@menu_pal';
_tab.NAME:='Akceptuj'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_anuluj@menu_pal';
_tab.NAME:='Anuluj'@;
_tab.add();

_tab


\btn_pal_save
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Przycisk Zapisz w oknie rozpisywania palety
::----------------------------------------------------------------------------------------------------------------------
_pal:=__ENV_REJ.TAB_P;
_tab:=__ENV_REJ.TAB_N;
_il_str:=exec('get_value','#desktop','','ctr_menu_pal','fld_il@menu_pal');
_il:=exec('str2real','#convert',_il_str);
{? _il_str<>''
|| {? _pal.size()=0
   || FUN.info('Brak danych do modyfikacji. Funkcja nieaktywna.'@);
      exec('set_value','#desktop','','ctr_menu_pal','fld_il@menu_pal','');
      return()
   ?};
   _tab.cntx_psh();
   _tab.index(__ENV_REJ.NDX_N);
   _tab.prefix(_pal.MREF,);
   {? _tab.first()
   || _can_continue:=1;
      _ktm:=exec('FindAndGet','#table','M',_pal.MREF,,"M.ref()",null());
::   _mg:=exec('FindAndGet','#table','MG',_pal.MGREF,,"MG.ref()",null());
::   _dk_c:=exec('FindAndGet','#table','DK_C',_pal.DKCREF,,"DK_C.ref()",null());
      _dokl:=exec('jaka_dok_m','jm',_ktm);
      _il:={? _dokl>0
           || _il$ _dokl
           || ceil(_il)
           ?};
      {? var_pres('_sctab')>100 || obj_del(_sctab) ?};
      {? _pal.RSC<>''
      || _sctab:=exec('sc_tmp_scean','magazyn_stan',null(),,,,_pal.RSC)
      || _sctab:=~~
      ?};
::    Sprawdzam dostępny stan magazynowy dla podanej pozycji
      _stan:=exec('rej_mat_chk_stan','zl_common',null(),_tab.ZLIMREF,_pal.MGREF,_tab.ZLREF
                  ,_pal.RSC,_pal.EANLREF,'ZGP','T',1,_sctab,,1,,_pal.KODK);
::   _stan:=exec('FindAndGet','#table',PAL_POZ,_pal.PAL_POZ,,"PAL_POZ.ILP",0);
      {? _il<0
      || FUN.info('Ilość musi być większa od zera'@)
      || {? _il>_stan
         || _txt:='Brak wystarczającej ilości materiału \'%1\'.\n'
                  'Pobierana ilość: %2.\nAktualny stan: %3.\n'
                  'Pobrać maksymalną dostępną ilość na stanie?'@
                  [_pal.KTM,form(_il,,_dokl),form(_stan,,_dokl)];
            {? FUN.ask(_txt)
            || _il:=_stan
            || _can_continue:=0
            ?}
         ?};
         {? _can_continue>0
         ||
::          Brak błędów, przypisuje magazyn i jego aktualny stan
::         _tab.STAN:=_stan;
            _pal.IL:=_il;
            _pal.put();
            grp_disp(__ENV_REJ.TAB_P,__ENV_REJ.WER_P)
         ?}
      ?};
      exec('set_value','#desktop','','ctr_menu_pal','fld_il@menu_pal','')
   ?};
   _tab.cntx_pop()
?};
~~


\btn_pal_accept
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Obsługa przycisk Akceptuj/Anuluj w oknie rozpisywania palety podcza rozliczania surowców
::   WE: _a - INTEGER - rodzaj działania: 1 - zatwierdzenie (przycisk Akceptuj), [0] - rezygnacja (przycisk Anuluj)
::----------------------------------------------------------------------------------------------------------------------
_type:={? var_pres('_a')=type_of(0) || _a || 0 ?};
{? _type>0
||
:: Akceptacja
   _ok:=1;
   _pal:=__ENV_REJ.TAB_P;
   _pal.cntx_psh();
   _pal.prefix();
   {? _pal.first()
   ||
      _empty:=1;
::    Walidacja
      {!
      |?
         {? _empty>0 & _pal.IL>0
         || _empty:=0
         ?};
         _pal.next()
      !}
   ?};
   _pal.cntx_pop();
   {? _empty>0
   || _ok:=0;
      FUN.info('Ilość na przynajmniej jednej pozycji palety musi być określona.'@)
   ?};
   {? _ok>0
   || eSelect.wyn_OK:=1;
      sel_exit()
   ?}
||
:: Rezygnacja
   exec('rec_esc','ekioski')
?};
~~


\remonty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Obsługa przycisku Remonty
::----------------------------------------------------------------------------------------------------------------------
exec('rem_zgl_filter','ekioski1');

{? REM_ZGL.f_active() || REM_ZGL.f_first() ?};

USERS.cntx_psh();

eSelect.wer_rem_zgl:='EWER';
eLevel.up(REM_ZGL,eSelect.wer_rem_zgl,'REM_ZGL',"exec('action_display','remonty_zgloszenia',REM_ZGL.ref())",
   "exec('rem_zgl_filter_change','ekioski1')");

:: Takie czary, żeby zadziałały tłumaczenia poniżej (teksty MUSZĄ być identyczne)
'WYLOGUJ'@;
_before:="
   exec('load','#desktop','ctr_user_info','ekiosk_user_info.dsk',,,,,,0);
   exec('set_value','#desktop','','ctr_user_info','fld_prac@user_info',VEK.P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE);
   exec('set_value','#desktop','','ctr_user_info','fld_info@user_info',VEK.A_WYD().KOD);
   exec('load','#desktop','ctr_menu_nav','ekiosk_menu_nav.dsk',,,,,,0);
   exec('set_value','#desktop','','ctr_menu_nav','btn_logout@menu_nav','WYLOGUJ'@);
:: filtr
   exec('set_visible','#desktop','','ctr_menu_nav','btn_filter@menu_nav',1);
:: info
   exec('set_visible','#desktop','','ctr_menu_nav','btn_info@menu_nav',1);

   _tab:=exec('elements_menuRem_table','ekioski1');
   exec('load','#desktop','ctr_menu_rem','ekiosk_menu_rem.dsk',,,,,_tab,1);
   exec('set_value','#desktop','','ctr_menu_rem','fld_przeb@menu_rem','');

   grp_disp(REM_ZGL,eSelect.wer_rem_zgl,0,1);
   ~~
";

_grp:=USERS.grp_make('Remonty'@,_before,'ek_menu_rem',,,,,,'jterm');
exec('create','#desktop',USERS,'ctr_user_info',_grp,{? VEK.DPI=96 || 2 || 1 ?},eSelect.grp_width);
USERS.grp_splt(_grp,,'horizontal','pozioma_1');
:: -----------------------------------------------
_after_refresh:="
   {? grp_empty(REM_ZGL,eSelect.wer_rem_zgl)
   || exec('set_visible','#desktop','','ctr_menu_rem','',0)
   || exec('set_value','#desktop','','ctr_menu_rem','fld_przeb@menu_rem','');
      _czy_przeb:=exec('chk_role','#b__box',OPERATOR.USER,'TRE_TRE_DPRZ')
         & REM_ZGL.REM_ZAS<>null() & REM_ZGL.REM_ZAS().PRZ_MODE<>'N';
      exec('set_visible','#desktop','','ctr_menu_rem','btn_rej_przeb@menu_rem',_czy_przeb);
      exec('set_visible','#desktop','','ctr_menu_rem','fld_przeb@menu_rem',_czy_przeb);
      exec('set_visible','#desktop','','ctr_menu_rem','lab_przeb@menu_rem',_czy_przeb);
      exec('set_visible','#desktop','','ctr_menu_rem','keyboard',_czy_przeb);
::    Wyznaczenie etykiety dot. przebiegów
      {? _czy_przeb>0
      || {? REM_ZAS.PRZ_MODE='P'
         || _mode:='Przebieg przyrostowy'@
         |? REM_ZAS.PRZ_MODE='C'
         ||
::          Wyznaczenie wartości ostatnio zarejestrowanego przebiegu
            _prz:=0;
            _jm:=REM_ZAS.PRZ_JM().KOD;
            _ts:=exec('create','#tm_stamp',date(),time());
            REM_ZASP.cntx_psh();
            REM_ZASP.index('ZASTS');
            REM_ZASP.prefix(REM_ZGL.REM_ZAS);
            {? REM_ZASP.find_le(_ts)
            ||_prz:=REM_ZASP.PRZ
            ?};
            REM_ZASP.cntx_pop();
            _mode:='Przebieg całkowity (%1 %2)'@[$_prz,_jm]
         || _mode:='Przebieg'@
         ?};
         exec('set_value','#desktop','','ctr_menu_rem','lab_przeb@menu_rem',_mode)
      ?};
      exec('set_visible','#desktop','','ctr_menu_rem','btn_rem_czyn@menu_rem'
         ,exec('chk_role','#b__box',OPERATOR.USER,'TRE_ZGL_RZGL'));
      ~~
   ?}
";
USERS.grp_sel(_grp,REM_ZGL,eSelect.wer_rem_zgl,,_after_refresh,,,{? VEK.DPI=96 || 11 || 10 ?},,,,,'maximized',,1);
USERS.grp_splt(_grp,,'horizontal','pozioma_3',0);
:: -----------------------------------------------
_before:="
   {? grp_empty(REM_ZGL,eSelect.wer_rem_zgl)
   || exec('set_visible','#desktop','','ctr_menu_rem','',0)
   || ~~
   ?}
";
_after:="
   ~~
";
exec('create','#desktop',USERS,'ctr_menu_rem',_grp,{? VEK.DPI=96 || 13 || 10 ?},eSelect.grp_width,,,,,,,_before,_after);
USERS.grp_splt(_grp,,'horizontal','pozioma_4',0);
:: -----------------------------------------------
exec('create','#desktop',USERS,'ctr_menu_nav',_grp,{? VEK.DPI=96 || 3 || 2 ?},eSelect.grp_width);

USERS.win_sel(_grp);

USERS.select();
USERS.cntx_pop();

{? REM_ZGL.f_active() || REM_ZGL.f_clear() ?};

eLevel.down();
~~


\elements_menuRem_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Tabela elementów tłumaczonych w desktopie ekiosk_menu_rem.dsk
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('elements_table','#desktop');

_tab.blank();
_tab.ID_SYS:='btn_rej_przeb@menu_rem';
_tab.NAME:='<html><center>'+gsub('Rejestruj\nprzebieg'@,'\n','<br>')+'</html>';
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_rem_czyn@menu_rem';
_tab.NAME:='Czynności'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='lab_przeb@menu_rem';
_tab.NAME:='Przebieg'@;
_tab.add();

_tab


\btn_rej_przeb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Przycisk Rejestruj przebieg w oknie obsługi remontów
::----------------------------------------------------------------------------------------------------------------------
_il_str:=exec('get_value','#desktop','','ctr_menu_rem','fld_przeb@menu_rem');
_il:=exec('str2real','#convert',_il_str);
{? _il_str<>''
|| _rem_zgl:=REM_ZGL.ref();
   _rem_zas:=REM_ZGL.REM_ZAS;

   _args:=exec('mp_run_a','#b__box');
   _args.ACT_UID:='TRE_TRE_DPRZ';
   _args.UIDREF:=exec('FindAndGet','#table',REM_ZGL,_rem_zgl,,"uidref()",'');
   _args.AKCJA:='DOŁĄCZ_EKIOSK';
   _args.PROC_START:='T';
   _args.CONTEXT:=obj_new('REM_ZASP','PRZ');
   _args.CONTEXT.REM_ZASP:=null();
   _args.CONTEXT.PRZ:=_il;

   _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
   exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'REM_ZAS',_rem_zas);
   exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'REM_ZGL',_rem_zgl);
::   exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'PRZ',_il);

   exec('mp_run','#b__box',_args);
   grp_disp(REM_ZGL,eSelect.wer_rem_zgl,1,1)
?};
~~


\btn_rem_czyn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Przycisk Czynności w oknie obsługi remontów
::----------------------------------------------------------------------------------------------------------------------
REM_CZYU.cntx_psh();
REM_CZYU.index('EK_NR');
REM_CZYU.prefix(REM_ZGL.ref());

{? ~REM_CZYU.first()
|| FUN.info('Brak zdefiniowanych czynności do wykonania dla danego zgłoszenia remontowego.'@);
   REM_CZYU.cntx_pop();
   return()
?};

USERS.cntx_psh();

eSelect.wer_rem_czyu:='EWER';
eLevel.up(REM_CZYU,eSelect.wer_rem_czyu,'REM_CZYU');

:: Takie czary, żeby zadziałały tłumaczenia poniżej (teksty MUSZĄ być identyczne)
'WYLOGUJ'@;
_before:="
   exec('load','#desktop','ctr_user_info','ekiosk_user_info2.dsk',,,,,,0);
   exec('set_value','#desktop','','ctr_user_info','fld_prac@user_info',VEK.P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE);
   exec('set_value','#desktop','','ctr_user_info','fld_info@user_info',VEK.A_WYD().KOD);

:: Druga linia informacji
   _sym:=
      {? REM_ZGL.REM_ZAS().TWRKPLC<>null()
      || 'stanowisko: %1'[REM_ZGL.REM_ZAS().TWRKPLC().KOD]
      |? REM_ZGL.REM_ZAS().TWRKZBR<>null()
      || 'gniazdo: %1'[REM_ZGL.REM_ZAS().TWRKZBR().SYMBOL]
      || ''
      ?};
   _info2:='Zgłoszenie: %1, zasób: %2, %3'@
      [REM_ZGL.SYM, REM_ZGL.REM_ZAS().SYMBOL,_sym];
   exec('set_value','#desktop','','ctr_user_info','fld_line2@user_info',_info2);

   exec('load','#desktop','ctr_menu_nav','ekiosk_menu_nav.dsk',,,,,,0);
   exec('set_value','#desktop','','ctr_menu_nav','btn_logout@menu_nav','WYLOGUJ'@);
:: filtr
   exec('set_visible','#desktop','','ctr_menu_nav','btn_filter@menu_nav',0);
:: info
   exec('set_visible','#desktop','','ctr_menu_nav','btn_info@menu_nav',0);

   _tab:=exec('elements_remczyn_table','ekioski1');
   exec('load','#desktop','ctr_rem_czyn','ekiosk_rem_czyn.dsk',,,,,_tab,1);
   exec('set_value','#desktop','','ctr_rem_czyn','fld_czas@rem_czyn','');
   grp_disp(REM_CZYU,eSelect.wer_rem_czyu,0,1);
   ~~
";

_grp:=USERS.grp_make('Remonty'@,_before,'ek_rem_czyn',,,,,,'jterm');
exec('create','#desktop',USERS,'ctr_user_info',_grp,{? VEK.DPI=96 || 4 || 3 ?},eSelect.grp_width);
USERS.grp_splt(_grp,,'horizontal','pozioma_1');
:: -----------------------------------------------
_after_refresh:="
   {? grp_empty(REM_CZYU,eSelect.wer_rem_czyu)
   || exec('set_visible','#desktop','','ctr_rem_czyn','',0)
   || exec('set_value','#desktop','','ctr_rem_czyn','fld_czas@rem_czyn','');
      _wyk:=REM_CZYU.WYK='T';
      exec('set_enabled','#desktop','','ctr_rem_czyn','btn_wyk@rem_czyn',~_wyk);
      exec('set_enabled','#desktop','','ctr_rem_czyn','btn_wyc@rem_czyn',_wyk)
   ?}
";
USERS.grp_sel(_grp,REM_CZYU,eSelect.wer_rem_czyu,,_after_refresh,,,{? VEK.DPI=96 || 9 || 8 ?},,,,,'maximized',,1);
USERS.grp_splt(_grp,,'horizontal','pozioma_3',0);
:: -----------------------------------------------
_before:="
   {? grp_empty(REM_CZYU,eSelect.wer_rem_czyu)
   || exec('set_visible','#desktop','','ctr_rem_czyn','',0)
   || ~~
   ?}
";
_after:="
   ~~
";
exec('create','#desktop',USERS,'ctr_rem_czyn',_grp,{? VEK.DPI=96 || 13 || 10 ?},eSelect.grp_width,,,,,,,_before,_after);
USERS.grp_splt(_grp,,'horizontal','pozioma_4',0);
:: -----------------------------------------------
exec('create','#desktop',USERS,'ctr_menu_nav',_grp,{? VEK.DPI=96 || 3 || 2 ?},eSelect.grp_width);

USERS.win_sel(_grp);

USERS.select();
USERS.cntx_pop();
REM_CZYU.cntx_pop();

eLevel.down();
~~


\elements_remczyn_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Tabela elementów tłumaczonych w desktopie ekiosk_menu_rem.dsk
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('elements_table','#desktop');

_tab.blank();
_tab.ID_SYS:='fld_czas@rem_czyn';
_tab.NAME:='Czas'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_wyk@rem_czyn';
_tab.NAME:='Wykonaj'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_wyc@rem_czyn';
_tab.NAME:='Wycofaj'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_rej_przeb@menu_rem';
_tab.NAME:='<html><center>'+gsub('Rejestruj\ngodziny'@,'\n','<br>')+'</html>';
_tab.add();

_tab


\btn_czyn_wyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Przycisk Wykonaj/Wycofaj w oknie obsługi czynności remontowych
::   WE: [_a] - rodzaj akcji: 0 - wycofanie, [1] - akceptacja
::----------------------------------------------------------------------------------------------------------------------
_akc:={? var_pres('_a')=type_of(0) || _a || 1 ?};
{? _akc=0 & REM_CZYU.WYK='T'
|| exec('rem_czyu_wyc','zasoby')
|? _akc>0 & REM_CZYU.WYK<>'T'
|| exec('rem_czyu_wyk','zasoby')
?};
grp_disp(REM_CZYU,eSelect.wer_rem_czyu,1,1);
~~


\rem_zgl_filter
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Ustawia filtr w oknie zgłoszeń remontowych
::   WE: [_a] - zakres wyświetlanych zgłoszeń: [0] - wszystkie, 1 - tylko przypisane do zalogowanego pracownika
::----------------------------------------------------------------------------------------------------------------------
_moje:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_where:=_sort:=_from:='';
_sort:='ARC,SYM';
_from:='
   join REM_ZAS using (REM_ZGL.REM_ZAS, REM_ZAS.REFERENCE)
   left join REM_CZYU using (REM_ZGL.REFERENCE, REM_CZYU.REM_ZGL)
';
_where:='
   REM_ZGL.STAT_REJ=\':_a\'
   and REM_ZGL.WERYFIK=\'T\'
   and REM_ZGL.ODDZ=\':_b\'
   and (REM_ZAS.TWRKZBR is not null or REM_ZAS.TWRKPLC is not null)
   and ((1=:_e and REM_CZYU.REFERENCE is not null) or (1=:_f and REM_ZAS.PRZ_MODE<>\'N\'))
';
{? VEK.A_WYD<>null()
|| _from+='
      left join TWRKPLC using (REM_ZAS.TWRKPLC, TWRKPLC.REFERENCE)
      left join TWRKZBR using (REM_ZAS.TWRKZBR, TWRKZBR.REFERENCE)
   ';
   _where+=' and (TWRKPLC.WYD=:_c or TWRKZBR.WYD=:_c) '
?};
{? VEK.TWRKPLC<>null()
|| _where+=' and REM_ZAS.TWRKPLC=:_d '
?};
_upr_rea:=exec('chk_role','#b__box',OPERATOR.USER,'TRE_ZGL_RZGL');
_upr_przeb:=exec('chk_role','#b__box',OPERATOR.USER,'TRE_TRE_DPRZ');
_status_verified:=exec('status_verified','remonty_zgloszenia');

{? _moje>0
|| _tab:=tab_tmp(1,'REF','STRING[16]','');
   exec('ftab_add_uid','remonty_zgloszenia',_tab,'TRE_ZGL_RZGL',_status_verified);
   exec('ftab_add_usr','remonty_zgloszenia',_tab,'USR_WA');
   exec('ftab_add_usr','remonty_zgloszenia',_tab,'USR_WPR');
   exec('ftab_add_usr','remonty_zgloszenia',_tab,'USR_ZAT');
   _from+=' join :_g using(REM_ZGL.REFERENCE,:_g.REF) '
?};

REM_ZGL.f_set(_sort,_from,_where,_status_verified,VEK.INIT_ODD,VEK.A_WYD,VEK.TWRKPLC
   ,_upr_rea,_upr_przeb,{? _moje>0 || _tab || ~~ ?});
~~


\rem_zgl_filter_change
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Przycisk do zmiany zakresu wyświetlania danych w oknie zgłoszeń remontowych
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Wybierz zakres wyświetlanych zgłoszeń:'@,,'Wszystkie'@,'Moje'@);
{? _choice=1
|| exec('rem_zgl_filter','ekioski1')
|? _choice=2
|| exec('rem_zgl_filter','ekioski1',1)
?};
grp_disp(REM_ZGL,eSelect.wer_rem_zgl,1,1);
~~


\btn_rej_wyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Przycisk Rejestruj wykonanie w oknie obsługi czynności remontowych - rejestracja godzin pracownika
::----------------------------------------------------------------------------------------------------------------------
_il_str:=exec('get_value','#desktop','','ctr_rem_czyn','fld_czas@rem_czyn');
_il:=exec('str2real','#convert',_il_str);
{? _il_str<>''
|| exec('rem_grg_action_add','!tre_zgl_rzgl',1,VEK.P,_il,REM_CZYU.ref());
   grp_disp(REM_CZYU,eSelect.wer_rem_czyu,1,1)
|| FUN.info('Czas musi być określony.'@)
?};
~~


\paleta_kkod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Przycisk Zapisz w rozpisce surowców dla palet
::----------------------------------------------------------------------------------------------------------------------
_tab:=__ENV_REJ.TAB_N;
_rez:=__ENV_REJ.TAB;
_ndx:=__ENV_REJ.NDX3;

_il_str:=exec('get_value','#desktop','','ctr_menu_sur','fld_il_sur@menu_sur');
_il:=exec('str2real','#convert',_il_str);
:: Pole z kodem kreskowym w okienku (z czytnika kodów kreskowych)
_pkod:=exec('get_value','#desktop','','ctr_menu_sur','fld_paleta@menu_sur');
_mat:=exec('FindAndGet','#table','M',_tab.MREF,,"M.ref()",null());
_ktm:=exec('FindAndGet','#table','M',_tab.MREF,,"M.KTM",'');
_dokl:=exec('jaka_dok_m','jm',_mat);
_il_dor:=_tab.LIL-_tab.IL;

_ok:=1;
_refpal:=null();
_czyrozpa:=0;
_nolst:=0;
{? _pkod<>'' & _il_str='' & _il_dor>0
|| _il_str:=$_il_dor;
   _il:=_il_dor;
   exec('set_value','#desktop','','ctr_menu_sur','fld_il_sur@menu_sur',form(_il,,_dokl,'99'))
?};
{? _pkod<>''
|| __palkpl.cntx_psh();
   __palkpl.index(__palki2);
   __palkpl.prefix(BEER.AKTZKN,_pkod,);
:: ewentualne dodanie do wyboru palety przyjętej w trakcie realizacji, gdy jej nie ma na liście
   {? ~__palkpl.first()
   || __palkpl.cntx_psh();
      exec('infwgpal','zamsiw_rea',,_pkod);
      __palkpl.cntx_pop()
   ?};
   {? __palkpl.first() & ~__palkpl.WYB
   || _refpal:=__palkpl.ref();
      _pal:=exec('FindAndGet','#table',PAL,__palkpl.SQL,,,null());
      {? _il>0 & _pal<>null() & _mat<>null()
      || _bufrozpa:=exec('allORpart','magdok_palety',_pal,_mat,_il);
         {? _bufrozpa=2
         || {? FUN.ask('Pobranie całej palety %1?\n\n'
                       'Uwaga.\n'
                       'Pobrane zostaną wszystkie surowce\n'
                       'z danej palety w ilości dostępnej na niej.'@[_pkod])
            || _czyrozpa:=2
            || _czyrozpa:=1
            ?}
         || _czyrozpa:=~_bufrozpa
         ?}
      ?}
   ||
::    sprawdzenie czy są palety do rozpakowania
      {? exec('sprPALrozp','zamsiw_palety',_pkod,_mat,_il)
      || _nolst:=1;
         _ok:=1;
         _czyrozpa:=1
      || _ok:=-1
      ?}
   ?};
   __palkpl.cntx_pop()
|| FUN.info('Należy podać kod palety.'@);
   _ok:=0
?};

{? _refpal=null() & ~_nolst
|| FUN.info('Palety %1 nie można wybrać.\n\n'
            'Nie jest dostępna do realizacji wykonania\n'
            '(niezgodność indeksu, niezgodność ilości).'@[_pkod])
?};

_can_continue:=1;
:: wybór konkretnej palety
{? _ok=1
|| {? _il_str<>''
   ||
      _il:={? _dokl>0
           || _il$ _dokl
           || ceil(_il)
           ?};
      {? _il<=0
      || FUN.info('Należy podać ilość większą od zera.'@);
         return()
      |? _tab.IL>=_tab.LIL
      || FUN.info('Wszystkie pobrania zostały rozpisane.'@);
         exec('set_value','#desktop','','ctr_menu_sur','fld_il_sur@menu_sur','');
         exec('set_value','#desktop','','ctr_menu_sur','fld_dostawa@menu_sur','');
         return()
      |? _tab.size()=0
      || FUN.info('Brak danych do modyfikacji. Funkcja nieaktywna.'@);
         exec('set_value','#desktop','','ctr_menu_sur','fld_il_sur@menu_sur','');
         return()
::      |? _il<0
::      || FUN.info('Ilość musi być większa od zera'@)
      |? (_il+_tab.IL)>_tab.LIL
      || _ilpob:=_tab.LIL-_tab.IL;
         FUN.info('Zbyt duża ilość do pobrania.\nMaksymalnie można pobrać %1.'@[form(_ilpob,,_dokl,'99')]);
         exec('set_value','#desktop','','ctr_menu_sur','fld_il_sur@menu_sur',form(_ilpob,,_dokl,'99'));
         return()
      ?};
      {? _tab.ZRPREF<>'' & (__zknrea.prefix(); __zknrea.seek(_tab.ZRPREF))
      || exec('wybRealPAL','zamsiw_palety',_refpal,_czyrozpa%*2,_ktm,_il,{? _refpal=null() || _pkod || '' ?})
      ?};
      {? _can_continue
      || _reftab:=_tab.ref();
         _tab.cntx_psh();
         _tab.prefix();
         {? _czyrozpa<2 || _tab.seek(_reftab) || _tab.first() ?};
         {!
         |? {? _tab.ZRPREF<>'' & (__zknrea.prefix(); __zknrea.seek(_tab.ZRPREF))
            || exec('ilRealPAL','zamsiw_palety');
               __zknrea.get();
               _tab.IL:=__zknrea.REA;
               {? _tab.put()
               || _rez.index(_ndx);
                  _rez.prefix(_tab.ZRPREF);
                  {? _rez.first() || {! |? _rez.del() !} ?};
                  _rez.prefix();
                  __palkpl.cntx_psh();
                  __pozkpl.cntx_psh();
                  {? __palkpl.first()
                  || {!
                     |? {? __palkpl.WYB
                        || {? (8+__palkpl.SQL)<>'material'
                           || _rez.blank();
                              _rez.KOD:=__palkpl.KOD;
                              _rez.LOK:=__palkpl.LOK;
                              _rez.ILW:=__palkpl.ILW;
                              _rez.ZRPREF:=_tab.ZRPREF;
                              _rez.REFTYM:=$__palkpl.ref();
                              _rez.add(1)
                           || __pozkpl.clear();
                              __pozkpl.prefix($__palkpl.ref());
                              {? __pozkpl.first()
                              || {!
                                 |? {? __palkpl.KOD=('<%1>'[_tab.KTM])
                                    || _rez.blank();
                                       _rez.KOD:=__palkpl.KOD;
                                       _rez.LOK:=__pozkpl.KTM;
                                       _rez.ILW:=__pozkpl.ROZ;
                                       _rez.ZRPREF:=_tab.ZRPREF;
                                       _rez.REFTYM:=$__pozkpl.ref();
                                       _rez.add(1)
                                    ?};
                                    __pozkpl.next()
                                 !}
                              ?}
                           ?}
                        ?};
                        __palkpl.next()
                     !}
                  ?};
                  __palkpl.cntx_pop();
                  __pozkpl.cntx_pop()
               ?}
            ?};
            _czyrozpa=2 & _tab.next()
         !};
         _tab.cntx_pop()
      ?};
      grp_disp(__ENV_REJ.TAB_N,__ENV_REJ.WER_N,1);
      exec('set_value','#desktop','','ctr_menu_sur','fld_il_sur@menu_sur','');
      exec('set_value','#desktop','','ctr_menu_sur','fld_paleta@menu_sur','')
   ?}
?};
~~


\isMagPAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: sprawdza, czy wykonanie dotyczy magazynu paletowego
::   WE: [_a] - ZL.ref()
::       [_b] - ZGP.ref() - domyślnie brak
::   WY: 1-realizacja w magazynie paletowym 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;

_err:=0;
_erz:=0;
_era:=0;
_erd:=0;

_ZLref:={? var_pres('_a')=type_of(null()) & 5+ref_name(_a)='zlec_' || _a || null() ?};
_ZLwej:=_ZLref;
_selrea:=2;
_pathArea:=0;

_zlwar:="";
_dodwar:="1";
_ZLgrup:=0;

_zgp:={? var_pres('_b')=type_of(null()) || _b || null() ?};

VAR_DEL.delete('__qreazld','__qzknzl','__qgrpzl','__qlstlim');

__qreazld:=0;

:: tabela zaznaczeń zleceń pierwszego poziomu
_zazzl:=tab_tmp(1,'ZL','STRING[16]','');
__qgrpzl:=0;
_beerzkn:=BEER.ZK_N;
BEER.ZK_N:=null();

:: prefix po zamówieniach związanych ze zleceniem
{? _ZLref<>null()
|| DISP.CTRLMG:=exec('get','#params',3542,2,OPERATOR.USER)<>'T';
   __qzknzl:=tab_tmp(1,'ZK_N','STRING[16]','','ZL','STRING[16]','');
   _ZLbuf:=_ZLref;
   _tabzl:=ZL.sel_aget();
   {? ~_tabzl.size()
    & (exec('FindAndGet','#table',ZL,_ZLref,,"RODZAJ",'')='N' | _ZLref=exec('top_level','zl_link',_ZLref))
   || _tabzl.blank();
      _tabzl.REF:=#_ZLref;
      _tabzl.add(1)
   ?};
   __qgrpzl:={? _tabzl.size() || 1 || -1 ?};
   {? __qgrpzl & _tabzl.first()
   || {!
      |? ZL.cntx_psh();
         ZL.prefix();
         {? ZL.seek(_tabzl.REF,) & ZL.ref()=exec('top_level','zl_link',ZL.ref())
         || _zazzl.blank();
            _zazzl.ZL:=$ZL.ref();
            _zazzl.add(1)
         ?};
         ZL.cntx_pop();
         _tabzl.next()
      !}
   ?};
   BEER.ZK_N:=null();
   ZK_N.index('ZLNR');
   ZK_N.prefix(_ZLref,'A');
   {? ZK_N.first()
   || {? _pathArea=2
      || _ZLwyd:=null();
::       Czy przypadek wydania do limitów podczas zamykania zlecnia prodykcyjnego (kontrola zamknięcia zlecenia)
         _czy_zam:=var_pres('__ZLIM4LIM')>100;
         _tab:=cur_tab(1,1);
         _tab_zlim:={? _czy_zam>0 || __ZLIM4LIM || _tab ?};
         {? _tab.sel_size()
         || _tab.cntx_psh();
            _tab.prefix();
            {? _tab.first()
            || {!
               |?
                  _first:={? _czy_zam>0 || _tab_zlim.prefix(#_ZLref,$_tab.ref()); _tab_zlim.first() || 1 ?};
                  {? _tab.sel_mark() & _first>0
                  || _ZLwyd:=exec('FindAndGet','#table','SLO',_tab_zlim.WYD_REF,SLO.name(),,null());
                     0
                  || _tab.next()
                  ?}
               !}
            ?};
            _tab.cntx_pop()
         || _first:={? _czy_zam>0 || _tab_zlim.prefix(#_ZLref,$_tab.ref()); _tab_zlim.first() || 1 ?};
            {? _first>0
            || _ZLwyd:=exec('FindAndGet','#table','SLO',_tab_zlim.WYD_REF,SLO.name(),,null())
            ?}
         ?};
         {!
         |? {? ZK_N.WYD=_ZLwyd
            || BEER.ZK_N:=ZK_N.ref();
               0
            || ZK_N.next()
            ?}
         !};
         obj_del(_tab)
      || BEER.ZK_N:=ZK_N.ref()
      ?}
   |? exec('FindAndGet','#table',ZL,_ZLref,,"RODZAJ",'')<>'P'
   || BEER.ZK_N:=null();
      _nrnzl:=exec('FindAndGet','#table',ZL,_ZLref,,"NRNZL",'');
      {? ~_nrnzl || _nrnzl:=exec('FindAndGet','#table',ZL,_ZLref,,"UNRZL",'') ?};
      {? _nrnzl
      || ZL.cntx_psh();
         ZL.index('NRNZL');
         ZL.prefix(_nrnzl);
         {? ZL.first()
         || {!
            |? BEER.ZK_N:=exec('FindInSet','#table','ZK_N','ZLNR','A',ZL.ref());
               {? BEER.ZK_N<>null() & {? DISP.CTRLMG || ~(BEER.ZK_N().STAN*'REA') || BEER.ZK_N().STAN='ZRE' ?}
               || _erz+=1; BEER.ZK_N:=null()
               ?};
               {? BEER.ZK_N<>null() & BEER.ZK_N().AKC<>'T' || _era+=1 ?};
               {? BEER.ZK_N<>null() & BEER.ZK_N().DP>date(ST.AR,ST.AM,0) || _erd+=1 ?};
               {? BEER.ZK_N=null()
               || ZL.next()
               || _ZLref:=ZL.ref();
                  0
               ?}
            !}
         ?};
         ZL.cntx_pop()
      ?}
   ?};
   __qlstlim:=exec('wyp_lstl','zamsiw_rea',_pathArea,_ZLref,,_zgp);
   _tabzl.clear();
   {? _tabzl.first()
   || _ZLgrup:=1;
      __qzknzl.clear();
      {? BEER.ZK_N<>null() & {? DISP.CTRLMG || ~(BEER.ZK_N().STAN*'REA') || BEER.ZK_N().STAN='ZRE' ?}
      || _erz+=1; BEER.ZK_N:=null()
      ?};
      {? BEER.ZK_N<>null() & BEER.ZK_N().AKC<>'T' || _era+=1; BEER.ZK_N:=null() ?};
      {? BEER.ZK_N<>null() & BEER.ZK_N().DP>date(ST.AR,ST.AM,0) || _erd+=1; BEER.ZK_N:=null() ?};
      {? BEER.ZK_N<>null() & ~__qzknzl.find_key($BEER.ZK_N,)
      || __qzknzl.blank();
         __qzknzl.ZK_N:=$BEER.ZK_N;
         __qzknzl.ZL:=$_ZLref;
         __qzknzl.add(1)
      ?};
      _beerzkn:=BEER.ZK_N;
      ZL.cntx_psh();
      ZK_N.cntx_psh();
      {!
      |? {? (ZL.prefix();ZL.seek(_tabzl.REF,)) & ZL.ref()<>_ZLbuf
         || _ok:=0;
            _ZLgrp:=ZL.ref();
            ZK_N.index('ZLNR');
            ZK_N.prefix(ZL.ref,'A');
            {? ZK_N.first()
            || __qzknzl.clear();
               {? ZK_N.AKC='T' & ~__qzknzl.find_key($ZK_N.ref(),)
               || __qzknzl.blank();
                  __qzknzl.ZK_N:=$ZK_N.ref();
                  __qzknzl.ZL:=$ZL.ref();
                  __qzknzl.add(1);
                  {? _beerzkn=null() || _beerzkn:=BEER.ZK_N:=ZK_N.ref() ?}
               ?};
               _ok:=1
            |? ZL.RODZAJ<>'P'
            || _nrnzl:=ZL.NRNZL;
               {? ~_nrnzl || _nrnzl:=ZL.UNRZL ?};
               {? _nrnzl
               || ZL.cntx_psh();
                  ZL.index('NRNZL');
                  ZL.prefix(_nrnzl);
                  {? ZL.first()
                  || {!
                     |?
                        BEER.ZK_N:=exec('FindInSet','#table','ZK_N','ZLNR','A',ZL.ref());
                        {? BEER.ZK_N<>null() & {? DISP.CTRLMG || ~(BEER.ZK_N().STAN*'REA') || BEER.ZK_N().STAN='ZRE' ?}
                        || _erz+=1; BEER.ZK_N:=null()
                        ?};
                        {? BEER.ZK_N<>null() & BEER.ZK_N().AKC<>'T' || _era+=1; BEER.ZK_N:=null() ?};
                        {? BEER.ZK_N<>null() & BEER.ZK_N().DP>date(ST.AR,ST.AM,0) || _erd+=1; BEER.ZK_N:=null() ?};
                        {? BEER.ZK_N=null()
                        || ZL.next()
                        || _ZLgrp:=ZL.ref();
                           __qzknzl.clear();
                           {? ~__qzknzl.find_key($BEER.ZK_N,)
                           || __qzknzl.blank();
                              __qzknzl.ZK_N:=$BEER.ZK_N;
                              __qzknzl.ZL:=$ZL.ref();
                              __qzknzl.add(1);
                              {? _beerzkn=null() || _beerzkn:=BEER.ZK_N ?}
                           ?};
                           _ok:=1;
                           0
                        ?}
                     !}
                  ?};
                  ZL.cntx_pop()
               ?}
            ?};
            {? _ok || exec('wyp_lstl','zamsiw_rea',_pathArea,_ZLgrp,__lstlim,_zgp) ?}
         ?};
         _tabzl.next()
      !};
      BEER.ZK_N:=_beerzkn;
      ZL.cntx_pop();
      ZK_N.cntx_pop()
   ?};
   obj_del(_tabzl);
   {? BEER.ZK_N=null()
   || _err:=1
   || ZK_N.prefix();
      ZK_N.seek(BEER.ZK_N)
   ?}
?};
VAR_DEL.delete('__qreazld','__qzknzl','__qgrpzl','__qlstlim');

_res:=BEER.ZK_N().MG<>null & BEER.ZK_N().MG().PAL='T';
BEER.ZK_N:=_beerzkn;
_res


\btn_usunlrez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Usunięcie rezerwacji
::----------------------------------------------------------------------------------------------------------------------
_tab:=__ENV_REJ.TAB_N;
_rez:=__ENV_REJ.TAB;
_ndx:=__ENV_REJ.NDX3;
_mgp:=__ENV_REJ.MGP;

{? ~_rez.size()
|| FUN.info('Brak pobrań.'@)
|| {? (_opc:=FUN.choice('Czy usunąć pobrania?'@,,'&Wybrane'@,'Wszys&tkie'@); _opc)
    & _tab.ZRPREF<>'' & (__zknrea.prefix(); __zknrea.seek(_tab.ZRPREF))
   || {? _opc=2
      || {? ~_mgp
         || _rez.index(_ndx);
            _rez.prefix(_tab.ZRPREF);
            {? _rez.first()
            || {!
               |? _rezref:=_rez.ref();
                  _next:=_rez.next();
                  _rez.cntx_psh();
                  _rez.prefix();
                  {? _rez.seek(_rezref)
                  || _zk_rp:=_rez.ZK_RP;
                     _ref:=__zknrea.ref();
                     __zknrea.cntx_psh();
                     __zknrea.clear();
                     __zknrea.prefix(_ref);
                     {? __zknrea.first()
                     || {!
                        |? {? __zknrea.REF=_zk_rp
                           || exec('zatw_wyb','zamsiw_rea',0);
                              _rez.del();
                              0
                           || __zknrea.next()
                           ?}
                        !}
                     |? (__zknrea.prefix(); __zknrea.seek(_tab.ZRPREF))
                     || exec('zatw_wyb','zamsiw_rea',0);
                        _rez.del()
                     ?};
                     __zknrea.cntx_pop();
                     __zknrea.get();
                     _tab.IL:=__zknrea.REA;
                     _tab.put()
                  ?};
                  _rez.cntx_pop();
                  _next
               !}
            ?}
         || _rez.index(_ndx);
            _rez.prefix(_tab.ZRPREF);
            {? _rez.first()
            || {!
               |? _rezref:=_rez.ref();
                  _next:=_rez.next();
                  _rez.cntx_psh();
                  _rez.prefix();
                  {? _rez.seek(_rezref)
                  || _zrpref:=_rez.ZRPREF;
                     {? _rez.REFTYM<>'' & _rez.ZRPREF<>'' & ref_tab(_zrpref)=__zknrea
                     || {? ref_tab(_rez.REFTYM)=__palkpl
                        || _tab.cntx_psh();
                           __palkpl.cntx_psh();
                           __zknrea.cntx_psh();
                           __palkpl.prefix();
                           {? __palkpl.seek(_rez.REFTYM) & (__zknrea.prefix(); __zknrea.seek(_zrpref))
                           || exec('wybzkkpl','zamsiw_palety',0,1);
                              __palkpl.get();
                              {? ~__palkpl.WYB
                              || _rez.del();
                                 exec('ilRealPAL','zamsiw_palety');
                                 __zknrea.get();
                                 _tab.prefix();
                                 {? _tab.first() & _tab.find_tab('first','ZRPREF',,'=',_zrpref)
                                 || _tab.IL:=__zknrea.REA;
                                    _tab.put(1)
                                 ?}
                              ?};
                              __zknrea.get()
                           ?};
                           _tab.cntx_pop();
                           __zknrea.cntx_pop();
                           __palkpl.cntx_pop()
                        |? ref_tab(_rez.REFTYM)=__pozkpl
                        || _tab.cntx_psh();
                           __palkpl.cntx_psh();
                           __zknrea.cntx_psh();
                           __pozkpl.cntx_psh();
                           __pozkpl.prefix();
                           {? __pozkpl.seek(_rez.REFTYM)
                            & (__zknrea.prefix(); __zknrea.seek(_zrpref))
                            & (__palkpl.prefix(); __palkpl.seek(__pozkpl.SQL))
                           || _mat:=(1-__palkpl.KOD)-1;
                              _roz:=__pozkpl.ROZ;
                              __palkpl.ILW-=_roz;
                              __pozkpl.del();
                              {? __palkpl.ILW>0
                              || __palkpl.put(1)
                              || __palkpl.del()
                              ?};
                              __zrekpl.clear();
                              __zrekpl.prefix(BEER.AKTZKN);
                              {? __zrekpl.find_key(_mat,_mat)
                              || __zrekpl.ROZ-=_roz;
                                 __zrekpl.ILP:=__zrekpl.ILR-__zrekpl.ILW-__zrekpl.ROZ;
                                 __zrekpl.put(1)
                              ?};
                              _rez.del();
                              exec('ilRealPAL','zamsiw_palety');
                              __zknrea.get();
                              _tab.prefix();
                              {? _tab.first() & _tab.find_tab('first','ZRPREF',,'=',_zrpref)
                              || _tab.IL:=__zknrea.REA;
                                 _tab.put(1)
                              ?}
                           ?};
                           _tab.cntx_pop();
                           __palkpl.cntx_pop();
                           __zknrea.cntx_pop();
                           __pozkpl.cntx_pop()
                        ?}
                     ?}
                  ?};
                  _rez.cntx_pop();
                  _next
               !}
            ?}
         ?}
      |? _opc=1
      || {? ~_mgp
         || _zk_rp:=_rez.ZK_RP;
            _ref:=__zknrea.ref();
            __zknrea.cntx_psh();
            __zknrea.clear();
            __zknrea.prefix(_ref);
            {? __zknrea.first()
            || {!
               |? {? __zknrea.REF=_zk_rp
                  || exec('zatw_wyb','zamsiw_rea',0);
                     _rez.del();
                     0
                  || __zknrea.next()
                  ?}
               !}
            |? (__zknrea.prefix(); __zknrea.seek(_tab.ZRPREF))
            || exec('zatw_wyb','zamsiw_rea',0);
               _rez.del()
            ?};
            __zknrea.cntx_pop();
            __zknrea.get();
            _tab.IL:=__zknrea.REA;
            _tab.put()
         || _zrpref:=_rez.ZRPREF;
            {? _rez.REFTYM<>'' & _rez.ZRPREF<>'' & ref_tab(_zrpref)=__zknrea
            || {? ref_tab(_rez.REFTYM)=__palkpl
               || _tab.cntx_psh();
                  __palkpl.cntx_psh();
                  __zknrea.cntx_psh();
                  __palkpl.prefix();
                  {? __palkpl.seek(_rez.REFTYM) & (__zknrea.prefix(); __zknrea.seek(_zrpref))
                  || exec('wybzkkpl','zamsiw_palety',0,1);
                     __palkpl.get();
                     {? ~__palkpl.WYB
                     || _rez.del();
                        exec('ilRealPAL','zamsiw_palety');
                        __zknrea.get();
                        _tab.prefix();
                        {? _tab.first() & _tab.find_tab('first','ZRPREF',,'=',_zrpref)
                        || _tab.IL:=__zknrea.REA;
                           _tab.put(1)
                        ?}
                     ?};
                     __zknrea.get()
                  ?};
                  _tab.cntx_pop();
                  __zknrea.cntx_pop();
                  __palkpl.cntx_pop()
               |? ref_tab(_rez.REFTYM)=__pozkpl
               || _tab.cntx_psh();
                  __palkpl.cntx_psh();
                  __zknrea.cntx_psh();
                  __pozkpl.cntx_psh();
                  __pozkpl.prefix();
                  {? __pozkpl.seek(_rez.REFTYM)
                   & (__zknrea.prefix(); __zknrea.seek(_zrpref))
                   & (__palkpl.prefix(); __palkpl.seek(__pozkpl.SQL))
                  || _mat:=(1-__palkpl.KOD)-1;
                     _roz:=__pozkpl.ROZ;
                     __palkpl.ILW-=_roz;
                     __pozkpl.del();
                     {? __palkpl.ILW>0
                     || __palkpl.put(1)
                     || __palkpl.del()
                     ?};
                     __zrekpl.clear();
                     __zrekpl.prefix(BEER.AKTZKN);
                     {? __zrekpl.find_key(_mat,_mat)
                     || __zrekpl.ROZ-=_roz;
                        __zrekpl.ILP:=__zrekpl.ILR-__zrekpl.ILW-__zrekpl.ROZ;
                        __zrekpl.put(1)
                     ?};
                     _rez.del();
                     exec('ilRealPAL','zamsiw_palety');
                     __zknrea.get();
                     _tab.prefix();
                     {? _tab.first() & _tab.find_tab('first','ZRPREF',,'=',_zrpref)
                     || _tab.IL:=__zknrea.REA;
                        _tab.put(1)
                     ?}
                  ?};
                  _tab.cntx_pop();
                  __palkpl.cntx_pop();
                  __zknrea.cntx_pop();
                  __pozkpl.cntx_pop()
               ?}
            ?}
         ?}
      ?};
      grp_disp(__ENV_REJ.TAB_N,__ENV_REJ.WER_N,1);
      exec('set_value','#desktop','','ctr_menu_sur','fld_il_sur@menu_end','')
   ?}
?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 23c2d08e8f54b296b7da4b39f1b597a0edbee88192ce4b5a686a4bdd40cf06a8f48e261199e0b0f4476d03f0e5eaa683d069075dae21a5dc9ec1ee7fa458b288dbed010dd45c239964c9020ee20853ea02426649387fc379fa014e7c205c9edfb64028d2907a8fea9381f357212fdb47b73120015f5c9e669bfd2526de4088ca
