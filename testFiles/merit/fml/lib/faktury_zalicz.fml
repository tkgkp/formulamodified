:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: faktury_zalicz.fml
:: Utworzony: 27.03.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Obsługa zaliczek sprzedaży i zakupu
::======================================================================================================================


\czy_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: sprawdza czy jest to faktura koncowa
::  OLD: \czy_end/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
FAPOW.index('END_K');
FAPOW.prefix($FAKS.ref(),'N');
FAPOW.first()


\rozp_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: rozpisanie zaliczki
::   WE: _a - $FAKS.ref - zaliczka
::       _b - kwota zaliczki w walucie
::       _c - kwota zaliczki w opodatkowania
::       _d - 0/1 zerować resztę wartości
::  OLD: \rozp_zal/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_faks:=_a;
_kw_wal:=_b;
_kw_zal:=_c;
_d:={? var_pres('_d')=type_of(0) || _d || 1 ?};

FAKS.cntx_psh;
FAKS.use(ref_name(_faks));
FAKS.prefix;
{? FAKS.seek(_faks)
||
   _walutowa:=FAKS.WAL<>INFO.NAROD;

:: utworzenie X_VAT - wartosci faktury/korekty wg pozycji dokumentu
   exec('x_vat_mk','faktury_vat',FAKS.ref(),,1);

   {? exec('faksv_r_zal','faktury_vat',_faks)=0
   ||
::    _brutto, _bwal - potrzebne do obliczen %-towych
      _brutto:=_bwal:=0;
      {? X_VAT.first
      ||
         {!
         |?
            {? X_VAT.WB=0
            ||
               X_VAT.del
            ||
               _brutto+=X_VAT.WB;
               _bwal+={? _walutowa || X_VAT.WW || X_VAT.WB ?};
               X_VAT.next
            ?}
         !}
      ?};

::    rozpisanie kwoty zaliczki wg % wartosci dla poszczegolnych stawek
      {? X_VAT.first()
      ||
         {? X_VAT.size()>1
         ||
::       gdy kilka stawek VAT
            _korekta:=_kw_zal;
            _kor_wal:=_kw_wal;
            {!
            |?
               X_VAT.WB_Z:=((X_VAT.WB*_kw_zal)/_brutto)$2;
               _korekta-=X_VAT.WB_Z;

               X_VAT.WW_Z:=((X_VAT.WW*_kw_wal)/_bwal)$2;
               _kor_wal-=X_VAT.WW_Z;

               X_VAT.put();
               X_VAT.next()
            !};
::          _korekta dla ostatniej stawki gdy wystapia roznice groszowe - aby zgadzala sie suma brutto
            {? _korekta<>0 | _kor_wal<>0
            ||
               X_VAT.WB_Z:=X_VAT.WB_Z+_korekta;
               X_VAT.WW_Z:=X_VAT.WW_Z+_kor_wal;
               exec('x_vat_obl','faktury_vat',_d);
               X_VAT.put()
            ?}
         ||
            X_VAT.WB_Z:=_kw_zal$2;
            X_VAT.WW_Z:=_kw_wal$2;
            X_VAT.put()
         ?}
      ?};

::----------------------------------------------------------------------------------------------------------------------
::    gdy kilka stawek VAT - ustalenie ile na jaka stawke
::    nalezy dodac PARAMETR czy udostepnic edycje stawek VAT dla faktur zaliczkowych
::      {? X_VAT.size()>1;
::      ||
::         _acr:=X_VAT.mk_sel(,'N',0,'faksv_mk_acr');
::         X_VAT.win_fld(_acr,,'SV',,,8,,1,'Stawka VAT');
::         X_VAT.win_fld(_acr,,'WB_Z',,,12,2,,'Kwota zaliczki');
::         X_VAT.win_act(_acr,,'Formuła','Gotowe',,,,"sel_exit",1);
::         X_VAT.win_act(_acr,,'Popraw',,,,,,0);
::         X_VAT.win_sel(_acr);
::         {! |? X_VAT.select(); exec('x_vat_chk','faktury1') !}
::      ?};
::----------------------------------------------------------------------------------------------------------------------

::    obliczenie X_VAT - czesc zaliczkowa
      {? X_VAT.first()
      ||
         {!
         |?
            exec('x_vat_obl','faktury_vat',_d);
            X_VAT.next()
         !}
      ?}
   ?};
:: skopiowanie X_VAT do XX_VAT
   exec('xx_vat_mk','faktury_vat')
?};
FAKS.cntx_pop()


\kw_roz1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: zwraca __FAPOWK.KW_ROZ1
::  OLD: \kw_roz1/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',{? BEER.SZ='S' || 300306 || 300308 ?},2)='N'
   | var_pres('__FAPOWK')<0            || FAPOW.KW_ROZ
|? __FAPOWK.find_key(_a)               || __FAPOWK.KW_ROZ1
?}


\kw_roz2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: zwraca __FAPOWK.KW_ROZ2
::  OLD: \kw_roz2/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',{? BEER.SZ='S' || 300306 || 300308 ?},2)='N'
   | var_pres('__FAPOWK')<0            || 0
|? __FAPOWK.find_key(_a)               || __FAPOWK.KW_ROZ2
?}


\zal_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: suma dla ustalonej dziedziny FAPOW
::  OLD: \zal_sum/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
SUM.KW:=SUM.KW_ROZ:=SUM.KW_POZ:=0;
FAPOW.cntx_psh();
_ref:=FAPOW.ref;
{? {? FAPOW.f_active()>0 || FAPOW.f_first() || FAPOW.first() ?}
||
   {!
   |?
      {? FAPOW.ROZ='N'
      ||
         SUM.KW_POZ+=FAPOW.KW_ROZ
      |? FAPOW.ROZ='T'
      ||
         SUM.KW_ROZ+=FAPOW.KW_ROZ
      ?};
      SUM.KW+=FAPOW.KW_ROZ;
      {? FAPOW.f_active()>0 || FAPOW.f_next() || FAPOW.next() ?}
   !}
?};
{? FAPOW.f_active || FAPOW.f_seek(_ref) ?};
FAPOW.cntx_pop();
SUM.KW_POZ


\zkp2fap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: automatyczne utworzenie pozycji FAP na podstawie pozycji zamowienia
::   WE: _a - ZK_N.ref
::  OLD: \zkp2fap/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh();
ZK_P.cntx_psh();
ZK_N.clear();
{? ZK_N.seek(_a)
||
   ZK_P.clear();
   ZK_P.index('TYPN');
   ZK_P.prefix(ZK_N.A,'Z',ZK_N.ref,1);
   {? ZK_P.first()
   ||
      {!
      |? _ilz:={? ZK_P.IL2<>0 || ZK_P.IL2 || ZK_P.ILZ ?};
         _jm:={? ZK_P.J2<>null() || ZK_P.J2 || ZK_P.M().J ?};
         {? ZK_P.J2<>ZK_P.M().J
         || _ild:=ZK_P.ILZ;
            _j2:=ZK_P.M().J;
            _ws2:=ZK_P.WS2
         || _ild:=_ilz;
            _j2:=_jm;
            _ws2:=1
         ?};
         exec('przyjdod','jm',$_j2,_ws2,_ild);
         exec('ADDPOZF','faktury_poz',ZK_P.M,_ilz,ZK_P.CENA,ZK_P.RAB
            ,exec('m_vat','material',ZK_P.M,ZK_N.KH,exec('exp_ue','typysp'),ST.AR,ST.AM,ZK_P.SV,2,,,ZK_N.KRAJ_VAT)
            ,,,ZK_P.CWAL,ZK_P.KRS,ZK_P.WAL,_jm,,ZK_P.RABK,ZK_P.TAR_H,ZK_P.PROMO,,ZK_P.TAR_TMS);
         ZK_P.next()
      !}
   ?}
?};
ZK_P.cntx_pop();
ZK_N.cntx_pop();
''


\fap2fap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: automatyczne utworzenie pozycji FAP na podstawie wczesniejszej zaliczki
::   WE: _a - FAKS.ref - poprzedania zaliczka
::  OLD: \fap2fap/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_new_faks:=FAKS.ref();

FAKS.cntx_psh(); FAP.cntx_psh(); TYPYSP.cntx_psh;
FAKS.use(ref_name(_a));
FAP.use('fakpo'+(ref_name(_a)+3));
FAP.index('FAP');
FAP.prefix(_a);
{? FAP.first()
||
   {!
   |?
      FAP.cntx_psh();
      FAKS.use(ref_name(_new_faks));
      FAP.use('fakpo'+(ref_name(_new_faks)+3));
      FAP.clear();
      FAP.FAKS:=_new_faks;
      {? FAP.M
      ||
         FAP.SV:=exec('m_vat','material',FAP.M,FAP.FAKS().KH,
            FAP.FAKS().T().EXPORT='T' | FAP.FAKS().T().UE='T' & TYPYSP.ZAK='N',FAKS.AR,FAKS.AM,FAP.SV,2,,FAKS.SZ,
            FAKS.KRAJ_VAT);
         exec('liczfak','faktury_wspolne');
         exec('liczfak_ist','faktury_wspolne',1,1)
      ?};
      FAP.KH:=FAP.FAKS().KH;
      FAP.KH_ODB:=FAP.FAKS().KH_ODB;
      FAP.add();
      FAP.cntx_pop();

      FAP.next()
   !}
?};
FAKS.cntx_pop(); FAP.cntx_pop(); TYPYSP.cntx_pop;
''


\fp_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: dodanie FAPOW po utworzeniu FAK_ZAL
::   WE: [_a] - FAKS.ref - nowa zaliczka
::       [_b] - ZK_N.ref
::       [_c] - FAKS.ref - zaliczka pierwotna
::       [_d] - ZLP.ref
::  OLD: \fp_add/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};
{? _>=2 || {? type_of(_b)<>7 || _b:=null ?} || _b:=null ?};
{? _>=3 || {? type_of(_c)<>7 || _c:=null ?} || _c:=null ?};
_zlp:={? var_pres('_d')=type_of(null()) || _d || null() ?};
_result:=null();
_faks:=_zk_n:=_zk_n_sym:='';
FAPOW.cntx_psh();
FAKS.cntx_psh();
ZK_N.cntx_psh();
FAKS.clear();
:: utworzenie nowych FAPOW
{? FAKS.seek(_a)
||
   _faks:=_f_pierw:=BB.refsql(FAKS.ref);
   ZK_N.clear();
   {? _b<>null & ZK_N.seek(_b) || _zk_n:=BB.refsql(ZK_N.ref);_zk_n_sym:=ZK_N.SYM ?};
:: odszukanie FAPOW.F pierwotnej faktury
   {? _c<>null
   ||
      FAPOW.clear();
      FAPOW.index('FAKS_K');
      FAPOW.prefix(BB.refsql(_c),'N');
      {? FAPOW.first()
      || _f_pierw:=FAPOW.F
      ?}
   ?};
:: lecgoł
   FAPOW.clear();
   FAPOW.blank();
:: FAPOW.POZ - kolejny nr - na blank
   FAPOW.FAKS:=_faks;
   FAPOW.F:=_f_pierw;
   FAPOW.KW:=FAPOW.KW_PO_K:=FAPOW.KW_ROZ:=FAKS.KW_ZAL;
:: FAPOW.ZAL=T - na blank
   FAPOW.KH:=FAKS.KH;
   FAPOW.ZK_N:=_zk_n;
   FAPOW.ZK_N_SYM:=_zk_n_sym;
   FAPOW.FAKS_SYM:=FAKS.SYM;
   FAPOW.DW:=FAKS.DW;
   FAPOW.D:=FAKS.D;
   FAPOW.KOREKTA:='N';
   FAPOW.KORYGOW:='N';
   FAPOW.ROZ:='N';
   FAPOW.FAKS_END:=FAPOW.END_SYM:='';
   FAPOW.WAL:=FAKS.WAL().KOD;
   FAPOW.ZLP:=exec('FindAndGet','#table',ZLP,$_zlp,,"ZLP.uidref()",'');
   {? FAPOW.ZLP<>'' || FAPOW.Z_ZLP:='T' ?};
   {? FAPOW.add() || _result:=FAPOW.ref() ?}
?};
ZK_N.cntx_pop();
FAKS.cntx_pop();
FAPOW.cntx_pop();
_result


\fzal_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: sprawdza czy mozna edytowac, usuwac, korygowac korekte
::   WE: [_a] - co z korekta
::  OLD: \fzal_chk/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
_wyn:=1;
_faks:=$FAKS.ref();
{? _a<>'K'
||
   FAPOW.index('FAKS');
   FAPOW.prefix(_faks);
   {? FAPOW.first()
   ||
      {!|?
         {? FAPOW.ROZ='T'
         ||
::          zaliczka rozliczona
            _wyn:=0
         |? FAPOW.KORYGOW='T'
         ||
::          byla korygowana
            _wyn:=0
         ?};
         FAPOW.next() & _wyn
      !}
   ?}
||
:: chcemy skorygowac
:: liczy ile jescze pozostalo do rozliczenia
   FAPOW.index('FAKS_K');
   FAPOW.prefix(BB.refsql(FAKS.ref),'N');
   {? FAPOW.first()
   || _wyn:=exec('zal_sum','faktury_zalicz')
   ?}
?};
_wyn


\fzal_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: usuwanie FAPOW po usunieciu FAKS lub dla faktury koncowej usuniecie info w powiazanych FAPOW
::  OLD: \fzal_del/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_faks:=$FAKS.ref();
{? FAKS.WHERE='L'
||
:: zaliczki lub korekty zaliczek
   FAPOW.index('FAKS');
   FAPOW.prefix(_faks);
   {? FAPOW.first()
   ||
      {!
      |?
         FAPOW.del()
      !}
   ?}
||
:: lub gdy faktura koncowa
   _f_pierw:='';
   _ndx:=FAPOW.ndx_tmp('',,'FAKS_END',,,'KOREKTA',,,'ROZ',,,'FAKS_SYM',,,'END_SYM',,);
   FAPOW.index(_ndx);
   FAPOW.prefix(_faks,'N');
   {? FAPOW.first()
   ||
      {!
      |?
         FAPOW.cntx_psh();
         FAPOW.clear();
         FAPOW.ROZ:='N';
         FAPOW.FAKS_END:='';
         FAPOW.END_SYM:='';
         FAPOW.put();
         exec('fp_lacz','faktury_zalicz',FAPOW.FAKS);
         exec('set_fapow_akc','faktury_zalicz',FAPOW.FAKS,'N','T');
         FAPOW.cntx_pop();

         FAPOW.first()
      !}
   ?};
   FAPOW.ndx_drop(_ndx)
?};
''


\fp_lacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: laczenie podzielonych, nierozliczonych FAPOW
::   WE: _a - FAKS.refsql
::  OLD: \fp_lacz/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
FAPOW.cntx_psh();
FAPOW.index('LACZ');
FAPOW.prefix(_a,'N');
{? FAPOW.first() & FAPOW.size()>1
||
   _sum_kw_roz:=0;
   {!
   |?
      _sum_kw_roz+=FAPOW.KW_ROZ;
      FAPOW.next()
   !};
   FAPOW.last();
   {!
   |?
      {? FAPOW.size>1 | _sum_kw_roz=0
      ||
         FAKSV.cntx_psh;
         _use:='faksv'+(form(8+FAPOW.FAKS)+3);
         FAKSV.use(_use);
         FAKSV.index('FAPOW_SV');
         FAKSV.prefix($FAPOW.ref);
         {? FAKSV.first || {! |? FAKSV.del !} ?};
         FAKSV.cntx_pop;
         FAPOW.del()
      ||
         FAPOW.KW_ROZ:=_sum_kw_roz;
         FAPOW.put();
         0
      ?}
   !};

:: stawki Vat w polaczonej zalicze
   exec('faksv_rm','faktury_vat',FAPOW.FAKS);
   exec('faksv_mk','faktury_vat',FAPOW.FAKS)

|? exec('faksv_r_zal','faktury_vat',FAPOW.FAKS)
||
:: stawki Vat w polaczonej zalicze
   exec('faksv_rm','faktury_vat',FAPOW.FAKS);
   exec('faksv_mk','faktury_vat',FAPOW.FAKS)
?};
FAPOW.cntx_pop();
''


\fzal_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: po popraw tylko dla zaliczek
::  OLD: \fzal_pop/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_faks:=$FAKS.ref();
FAPOW.index('FAKS');
FAPOW.prefix(_faks);
{? FAPOW.first()
||
   FAPOW.FAKS_SYM:=FAKS.SYM;
:: wczesniej przy popraw FAKS jest kontrola czy aby nie ma kolejnych dokumentów
:: dlatego nie bedzie innych powiazanych korekt lub czesciowo rozliczonych zaliczek
   {? FAPOW.KOREKTA='N'
   ||
      FAPOW.KW:=FAPOW.KW_PO_K:=FAPOW.KW_ROZ:=FAKS.KW_ZAL
   ||
      FAPOW.KW:=FAKS.KW_ZAL
   ?};
   FAPOW.DW:=FAKS.DW;
   FAPOW.D:=FAKS.D;
   FAPOW.KH:=FAKS.KH;
   FAPOW.WAL:=FAKS.WAL().KOD;
   FAPOW.put()
?};
''


\z_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: r_lock dla wszystkich zaliczek kontrahenta
::   WE: _a - KH.ref
::       _b - WALuta String[8]
::  OLD: \z_lock/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;

KH.cntx_psh();
{? KH.seek(_a) || _kh_skr:=KH.SKR ?};
KH.cntx_pop();

FAPOW.cntx_psh();
FAPOW.index('ZAL');
FAPOW.prefix(ST.ODDZ,'',_a,_b);
{? FAPOW.first()
||
   {!|?
      _wyn:=FAPOW.r_lock(1,1,1);
      {? _wyn=0 & FUN.ask('Inny użytkownik obsługuje zaliczki dla kontrahenta %1.\n'
                          'Czy chcesz zobaczyć kto?'@[_kh_skr])
      || FAPOW.r_lock(1,0,1)
      ?};
      _wyn & FAPOW.next()
   !}
?};
FAPOW.cntx_pop();
{? _wyn=0 || exec('z_unlock','faktury_zalicz',_a,_b) ?};
_wyn


\z_unlock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: r_unlock dla wszystkich zaliczek kontrahenta
::   WE: _a - KH.ref
::       _b - WALuta String[8]
::  OLD: \z_unlock/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
FAPOW.cntx_psh();
FAPOW.index('ZAL');
FAPOW.prefix(ST.ODDZ,'',_a,_b);
{? FAPOW.first()
||
   {!
   |?
      FAPOW.r_unlock();
      FAPOW.next()
   !}
?};
FAPOW.cntx_pop();
''


\fp_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: ustawia znacznik akceptacji FAPOW.AKC dla faktur zaliczkowych (FAKS w buforze)
::   WE: _a - T/N
::  OLD: \fp_akc/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
FAPOW.index('FAKS_K');
FAPOW.prefix($FAKS.ref(),FAKS.T().KOR);
{? FAPOW.first()
||
   fapow:=null;
   {!
   |?
      FAPOW.AKC:=_a;
      {? FAPOW.put()
      ||
         {? FAKS.T().KOR='T'
         ||
::          szuka korygowanych FAPOW
            _kw_kor:=FAPOW.KW;
            _pozostalo:=_kw_kor*(-1);
            _f_pierw:=FAPOW.F;
            _czy_add:=1;
            FAPOW.cntx_psh();
            FAPOW.index('FAKS_K');
            FAPOW.prefix(_f_pierw,'N');
            {? FAPOW.first()
            ||
::             petla po FAPOW dla zaliczki - rozmnozonych przez czesciowa realizacje
               {!
               |?
                  {? _a='T'
                  ||
                     _czy_add:=0;
                     FAPOW.KW_PO_K+=_kw_kor;
                     {? FAPOW.ROZ='N'
                     ||
                        {? FAPOW.KW_ROZ>_pozostalo
                        || _pomniejsz:=_pozostalo
                        || _pomniejsz:=FAPOW.KW_ROZ
                        ?};
                        FAPOW.KW_ROZ-=_pomniejsz;
                        _pozostalo-=_pomniejsz
                     ?};
                     FAPOW.KORYGOW:='T';
                     {? FAPOW.KW_ROZ=0 || fapow:=FAPOW.ref; FAPOW.ROZ:='T' ?}
                  ||
::                   powieksza kwote po korekcie
                     FAPOW.KW_PO_K-=_kw_kor;
::                   znaczniki czy korygowany (moga byc inne korekty)
                     {? FAPOW.KW=FAPOW.KW_PO_K || FAPOW.KORYGOW:='N' ?};
::                   znacznik czy rozliczony (korekta czasem ustawia na T)
                     {? FAPOW.FAKS_END='' || FAPOW.ROZ:='N' ?};
::                   powiekszenie kwoty do rozliczenia (ale tylko jeden raz..)
                     {? FAPOW.ROZ='N' & _czy_add=1 || FAPOW.KW_ROZ-=_kw_kor;_czy_add:=0 ?}
                  ?};
                  FAPOW.put();
                  FAPOW.next()
               !}
            ?};
::          _czy_add - jesli wszystkie pozycje sa rozliczone faktura koncowa
::          to tworzy nowy zapis FAPOW z kwota korekty - pozycja potrzebna do rozliczenia tej kwoty
            {? _czy_add=1
            ||
               FAPOW.KW_ROZ:=-_kw_kor;
               FAPOW.ROZ:='N';
               FAPOW.FAKS_END:=FAPOW.END_SYM:='';
::             pozostale dane w buforze
               FAPOW.add()
            ?};
::          polacz nierozliczone - sumuje sie kwota nierozliczona
            exec('fp_lacz','faktury_zalicz',_f_pierw);
::          FAKSV dla korygowanej zaliczki
            exec('faksv_rm','faktury_vat',_f_pierw);
            exec('faksv_mk','faktury_vat',_f_pierw);
            FAPOW.cntx_pop()
         ?}
      ?};
      FAPOW.next()
   !};
   VAR_DEL.delete('fapow')
?};
''


\rozl_na_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: sprawdza czy jest rozliczenie zaliczek na paragonie _a
::   WE: _a-$FAKS.ref
::   WY: 1-jest rozliczenie zaliczek na paragonie, 0-nie ma rozliczena
::  OLD: \rozl_na_par/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? _a<>''
||
   FAKS.cntx_psh();
   FAKS.use(8+_a);
   FAKS.clear();
   {? FAKS.seek(_a)
   ||
      FAPOW.cntx_psh();
      FAPOW.index('END_K');
      FAPOW.prefix($FAKS.ref(),'N');
      _wyn:=FAPOW.first();
      FAPOW.cntx_pop()
   ?};
   FAKS.cntx_pop()
?};
_wyn


\kor2fak100
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: sprawdza czy korygowana faktura jest rozliczajaca lub rozliczając 100%
::       i dodatkowo czy korekta "zwraca" wartość faktury
::   WY: 0-nie, 1-tak
::  OLD: \kor2fak100/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;

{? exec('FindAndGet','#table',FAKS,FAKS.FKSQL,,"T().ZAL_ROZ<>'N'",0)
||
   _wyn:=
      {? FAKS.WAL<>FAKS.NWAL
      || exec('FindAndGet','#table',FAKS,FAKS.FKSQL,,"BRTW",0)=-FAKS.BRTW
      || exec('FindAndGet','#table',FAKS,FAKS.FKSQL,,"BRUTTO",0)=-FAKS.BRUTTO
      ?}
?};

_wyn


\zal_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wyswietla liste zaliczek podczas wystawiania faktury i rozlicza wybrane czesci zaliczek
::   WE: _a - NIEWYKORZYSTYWANE - ''-domyślna, $ZK_N.ref faktura tworzona jest z zamowienia
::       _b - grupowa akceptacja
::       _c - 0-korekta zbiorcza; 1-korekty pojedyncza
::       _d - komunikaty - funkcja pomocnicza
::       _e - komunikaty - identyfikator
::   WY: 1/0 czy rozliczono
::  OLD: \zal_sel/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_zkn:=_a;
_group:=_b;
_nieKorZb:=_c;
_komroot:=_d;
_komid:=_e;

{? BEER.SZ='S' & exec('upr_cs','ceny')=0
||
   _txt:='Brak uprawnień do wartości sprzedaży. Rozliczenie zaliczek niedostępne.'@;
   _komroot(_komid,_nieKorZb); __kom.add(_txt,7);
   return()

|? BEER.SZ='Z' & exec('upr_cz','ceny')=0
||
   _txt:='Brak uprawnień do wartości zakupu. Rozliczenie zaliczek niedostępne.'@;
   _komroot(_komid,_nieKorZb); __kom.add(_txt,7);
   return()
?};

_wart_fak:=
   {? FAKS.WAL<>INFO.NAROD
   || FAKS.BRTW
   || FAKS.BRUTTO
   ?};

_in:=
   {? FAKS.LKSQL=''
   ||
      ''
   ||
      _wyn:='\''+FAKS.LKSQL+'\'';
      FAKS.cntx_psh;
      {!
      |?
         FAKS.use(8+FAKS.LKSQL);
         FAKS.prefix;
         {? FAKS.seek(FAKS.LKSQL) & FAKS.LKSQL<>''
         || _wyn+=',\''+FAKS.LKSQL+'\''
         || FAKS.LKSQL:=''
         ?};
         FAKS.LKSQL<>''
      !};
      FAKS.cntx_pop;
      _wyn
   ?};

_kraj_vat:={? FAKS.KRAJ_VAT || '=''%1'''[$FAKS.KRAJ_VAT] || 'is null' ?};
_proc:={? FAKS.PROC || '=''%1'''[$FAKS.PROC] || 'is null' ?};

_Fapow:=sql(
   {? FAKS.T().KOR='N'
    | FAKS.T().KOR='T' & _wart_fak>0
   ||
      $"
         select
            FAPOW.ZK_N_SYM ZK_N_SYM,
            FAPOW.FAKS_SYM FAKS_SYM,
            FAPOW.DW DW,
            FAPOW.KW KW,
            FAPOW.KORYGOW KORYGOW,
            FAPOW.KW_PO_K KW_PO_K,
            FAPOW.KW_ROZ KW_ROZ,
            FAPOW.WAL WAL,
            FAPOW.ROZ ROZ,
            FAPOW.ZLP ZLP,
            FAPOW.Z_ZLP Z_ZLP,
            FAPOW.ZK_N ZK_N,
            FAPOW.REFERENCE FAPOW
         from
            FAPOW
            join KH using (FAPOW.KH,KH.reference)
            join @FAKS using (FAPOW.FAKS,FAKS.reference)
         where
            FAPOW.ODDZ=':_a'
            and KH.KOD=':_c'
            and FAPOW.WAL=':_d'
            and FAPOW.KOREKTA='N'
            and FAPOW.ROZ='N'
            and FAPOW.AKC='T'
            and (FAPOW.ZK_N=':_e' or ':_e'='')
            and FAPOW.DW<=to_date(:_f)
            and FAKS.KRAJ_VAT :_h and FAKS.PROC :_i
         order by
            DW
      "
   ||
      $"
         select
            FAPOW.ZK_N_SYM ZK_N_SYM,
            FAPOW.FAKS_SYM FAKS_SYM,
            FAPOW.DW DW,
            FAPOW.KW KW,
            FAPOW.KORYGOW KORYGOW,
            FAPOW.KW_PO_K KW_PO_K,
            FAPOW.WAL WAL,
            FAPOW.ROZ ROZ,
            FAPOW.ZLP ZLP,
            FAPOW.Z_ZLP Z_ZLP,
            FAPOW.ZK_N ZK_N,
            min(FAPOW.REFERENCE) FAPOW,
            sum(FAPOW.KW_ROZ) KW_ROZ
         from
            FAPOW
            join @FAKS using (FAPOW.FAKS,FAKS.reference)
         where
            FAPOW.FAKS_END in (:_g)
            and FAPOW.ROZ='T'
            and FAKS.KRAJ_VAT :_h and FAKS.PROC :_i
         group by
            FAPOW.ZK_N_SYM, FAPOW.FAKS_SYM, FAPOW.DW, FAPOW.KW,FAPOW.KORYGOW,FAPOW.KW_PO_K,FAPOW.WAL,FAPOW.ROZ,
            FAPOW.ZLP,FAPOW.Z_ZLP,FAPOW.ZK_N
         order by
            DW
      "
   ?}
   ,ST.ODDZ,'',FAKS.KH().KOD,FAKS.WAL().KOD,_zkn,FAKS.DW,_in,_kraj_vat,_proc);

_wer:=_Fapow.mk_sel(,,,'zdpacleoefhbadf',,,,,'U');
_Fapow.win_sel(_wer);
_Fapow.win_fld(_wer,,'ZK_N_SYM',,,20,,,'Zamówienie'@);
_Fapow.win_fld(_wer,,'Z_ZLP',,,20,,,'Zgłoszenie'@,,,2,,"'T'","'N'");
_Fapow.win_fld(_wer,,'FAKS_SYM',,,20,,,'Dokument zaliczkowy'@);
_Fapow.win_fld(_wer,,'DW',,,10,,,'Data wystawienia'@);
_Fapow.win_fld(_wer,,'KW',,,12,2,,'Kwota zaliczki'@);
_Fapow.win_fld(_wer,,'KORYGOW',,,3,,,'Korygowano'@,,,2,,"'T'","'N'");
_Fapow.win_fld(_wer,,'KW_PO_K',,,12,2,,'Po korekcie'@);
_Fapow.win_fld(_wer,,'KW_ROZ',,,12,2,,'Do rozliczenia'@);
_Fapow.win_fld(_wer,,'WAL',,,8,,,'Waluta'@);
_Fapow.win_fld(_wer,,'ROZ',,,3,,,'Rozliczono'@,,,2,,"'T'","'N'");
_fb:="FAPOW.cntx_psh; FAPOW.clear; {? FAPOW.seek(cur_tab.FAPOW) || exec('fzal_poz','faktury_zalicz') ?}; FAPOW.cntx_pop";
_Fapow.win_act(_wer,,'Formuła','Po&zycje'@@,,,_fb,,,,,,'Z');
_fb:="exec('zal_rozl','faktury_zalicz')";
_fbg:="exec('zal_prgr','faktury_zalicz')";
_fag:="exec('zal_pogr','faktury_zalicz')";
_Fapow.win_act(_wer,,'Formuła','&Rozlicz'@@,,,_fb,,1,1,_fbg,_fag,'R');
_fb:="exec('zal_podz','faktury_zalicz')";
_Fapow.win_act(_wer,,'Formuła','&Podziel'@@,,,_fb,,,,,,'P');
_fb:="FAPOW.cntx_psh; FAPOW.clear; {? FAPOW.seek(cur_tab.FAPOW) || exec('zal_kor','faktury_zalicz')  ?}; FAPOW.cntx_pop";
_Fapow.win_act(_wer,,'Formuła','K&orekty'@@,,,_fb,,,,,,'O');
_fb:="FAPOW.cntx_psh; FAPOW.clear; {? FAPOW.seek(cur_tab.FAPOW) || exec('zal_vat','faktury_zalicz') ?}; FAPOW.cntx_pop";
_Fapow.win_act(_wer,,'Formuła','Wg stawek &vat'@@,,,_fb,,,,,,'V');
_Fapow.win_act(_wer,,'Menu','Fu&nkcje'@@,,,,,,,,,'N');
_fb:="_Fapow:=cur_tab(1,1); exec('record','display',_Fapow.ZK_N)";
_Fapow.win_act(_wer,,'Formuła','Z&amówienie'@@,'#N',,_fb,,,,,,'A');
_Fapow.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['Z&amówienie'@],'menu:NA');
_fb:="_Fapow:=cur_tab(1,1); exec('record','display',_Fapow.ZLP)";
_Fapow.win_act(_wer,,'Formuła','Z&głoszenie'@@,'#N',,_fb,,,,,,'G');
_Fapow.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['Z&głoszenie'@],'menu:NG');
{? FAKS.SZ='S' & exec('chk_role','#b__box',OPERATOR.USER,'LSP_FAK_ZWFS')
|| _Fapow.win_act(_wer,,'Menu','Druku&j'@@,,,,,,,,,'J');
   _fb:="FAPOW.cntx_psh; FAPOW.clear;
         {? FAPOW.seek(cur_tab.FAPOW) || exec('fzal_prn','faktury_zalicz',0) ?};
         FAPOW.cntx_pop";
   _Fapow.win_act(_wer,,'Formuła','Druku&j'@@,'#J',,_fb,,,,,,'J');
   _fb:="FAPOW.cntx_psh; FAPOW.clear;
         {? FAPOW.seek(cur_tab.FAPOW) || exec('fzal_prn','faktury_zalicz',1) ?};
         FAPOW.cntx_pop";
   _Fapow.win_act(_wer,,'Formuła','Utwórz &PDF'@@,'#J',,_fb,,,,,,'P')
?};
_Fapow.win_act(_wer,,'Szukaj');
_Fapow.win_act(_wer,,'Kolejność');
_fb:="
   _Fapow:=cur_tab(1,1);
   _wer:=_Fapow.win_sel('?');
   _zkn:={? _Fapow.ZK_N='' || 'N(A)' || '' ?};
   _zlp:={? _Fapow.ZLP='' || 'N(G)' || '' ?};
   _act:=_zkn+_zlp;
   _Fapow.actions_grayed(_wer,_act)
";
_Fapow.win_act(_wer,,'Rekord',,,,_fb);

:: odfiltrowanie zaliczek zakupowych lub sprzedazowych oraz niezaakceptowanych
FAPOW.cntx_psh(); FAKS.cntx_psh();
_loop:=_Fapow.first();
{!
|? _loop
|!
   FAPOW.use(8+_Fapow.FAPOW);
   FAPOW.prefix();
   {? FAPOW.seek(_Fapow.FAPOW)
   ||
      FAKS.use(8+FAPOW.FAKS);
      FAKS.prefix();
      _loop:=
         {? FAKS.seek(FAPOW.FAKS) & (FAKS.SZ<>BEER.SZ | FAKS.STAT_REJ<>'T')
         || _Fapow.del()
         || _Fapow.next()
         ?}
   ||
      _loop:=_Fapow.next()
   ?}
!};
FAPOW.cntx_pop(); FAKS.cntx_pop();
:: _fpa_zal - sposób rozliczenia zaliczki okroślony w paczce faktur
_fpa_zal:=FAKS.FPACZKA().ZAL;
{? _Fapow.first()
      &
   (_group=0 | _fpa_zal='' | _fpa_zal<>'N')
||
:: Sposób rozliczenia:
:: - pominięcie rozliczenia:
::    - brak zaliczek do rozliczenia
::    - akceptacja grupowa dokumentów i dokument pochodzi z poczki faktur, która ma ustawienie:
::       - Sposób rozliczenia zaliczek=Nie rozliczaj
:: - automatyczne:
::    - akceptacja grupy dokumentów i dokument pochodzi z paczki faktur, która ma ustawienie:
::       - Sposób rozliczenia zaliczek=Do zgłoszeń
::       - lub Sposób rozliczenia zaliczek=Do zgłoszeń i niepowiązane
:: - manualne (do rozliczenia dostępne wszystkie nierozliczone zaliczki):
::    - akceptacja pojedynczego dokumentu
::    - akceptacja grupy dokumentów i dokument nie pochodzi z paczki faktur
   _auto:=_group=1 & (_fpa_zal='J' | _fpa_zal='T');
   {? _auto=1
   ||
      _Zlp:=sql($
      "
         select distinct
            ':' || ZLP.IDADD || ZLP.REFERENCE UIDREF
         from
            @ZLP
            join @FAP using(ZLP.FAP,FAP.REFERENCE)
            join @FAKS using(FAP.FAKS,FAKS.REFERENCE)
         where
            FAKS.REFERENCE=:_a
         order by
            UIDREF
      "
      ,FAKS.ref())
   ?};
   {? _auto=0
   ||
:: rozliczenie zaliczek - manualne
      {? _group
      ||
         _txt:='UWAGA: Pominięto rozliczenie zaliczek '
               'bo opcja jest niedostępne w ramach grupowego przetwarzania dokumentów.'@;
         _komroot(_komid,_nieKorZb);
         __kom.add(_txt,4,,1);
         _wyn:=1
      ||
         _faks:=FAPOW.FAKS;
         _Fapow.win_sel(_wer);
         _Fapow.hdr_sel;
         _Fapow.hdr_sel('Zaliczki do rozliczenia dokumentu %1 opiewającego na %2 %3 do zapłaty'@
                        [FAKS.SYM,form({? FAKS.WAL<>INFO.NAROD || FAKS.BRTW || FAKS.BRUTTO ?},,2),FAKS.WAL().KOD]);
         {? _Fapow.select()
         ||
            exec('plat_przel','faktury_plat',FAKS.ref());
            _wyn:=1
         ?}
      ?}
   ||
:: rozliczenie zaliczek - automatyczne
::    _Sel - zaliczki brane do rozliczenia
      _Sel:=_Fapow.sel_aget();
      _loop:=_Fapow.first();
      _to:={? _fpa_zal='J' || 1 || 2 ?};
      {! _ii:=1.._to
      |!
         {!
         |? _loop
         |!
            _zlp:=exec('FindAndGet','#table',ZLP,_Fapow.ZLP,,"ZLP.uidref()",'');
            _loop:=
               {? _ii=1 & _Zlp.find_key(_zlp,)
                     |
                  _ii=2 & _Fapow.ZLP=''
               ||
::             zaliczka dotyczy zgłoszenia jednorazowego, które jest na fakturze (te zaliczki mają priorytet)
::             lub zaliczka niepowiązana ze zgłoszeniem (te są dodawane po zaliczkach powiązanych ze zgłoszeniem)
                  _Sel.REF:=#_Fapow.ref();
                  _Sel.add() & _Fapow.next()
               ||
                  _Fapow.next()
               ?}
         !};
         _loop:=_Fapow.first()
      !};
::    rozliczenie zaliczek
      _loop:=_Sel.first();
      {? _loop
      ||
         {? exec('zal_prgr','faktury_zalicz',_Fapow,_Sel)
         ||
            {!
            |? _loop
            |!
               {? _Fapow.seek(_Sel.REF)
               ||
                  {? _auto
                  ||
                     _zal:=exec('FindAndGet','#table',FAPOW,_Fapow.FAPOW,,"FAPOW.FAKS",'');
                     _txt:='Rozliczono zaliczkę %1.'@[exec('record','#to_string',_zal)];
                     _komroot(_komid,_nieKorZb); __kom.add(_txt,7)
                  ?};
                  exec('zal_end','faktury_zalicz',_Fapow,_group,_nieKorZb,_komroot,_komid)
               ?};
               _loop:=_Sel.next()
            !};
            exec('zal_pogr','faktury_zalicz',_auto)
         ?}
      ?}
   ?}
?};
:: grupowanie podzielonych FAPOW - np. podczas select zostaly podzielone ale nie zostalo wybrane nic do rozliczenia
{! _ii:=1..2
|!
   FAPOW.index('ZAL');
   FAPOW.prefix(ST.ODDZ,'',FAKS.KH,FAKS.WAL().KOD,'N','N',{? _ii=1 || 'T' || 'N' ?},_zkn);
   {? FAPOW.first()
   ||
      {!
      |?
         exec('fp_lacz','faktury_zalicz',FAPOW.FAKS);
         FAPOW.next()
      !}
   ?}
!};
_wyn


\fzal_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wyswietla pozycje faktury zaliczkowej
::  OLD: \fzal_poz/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_f_ref:=FAPOW.FAKS;
_f_name:=form(8+FAPOW.FAKS);
FAPOW.cntx_psh();
FAKS.cntx_psh();
FAP.cntx_psh();
FAKSPL.cntx_psh();
FAKS.use(_f_name);
FAKSPL.use('fakpl'+(_f_name+3));
FAKS.clear();
{? FAKS.seek(_f_ref,_f_name)
||
   FAP.use('fakpo'+(_f_name+3));
   FAP.clear();
   exec('pozycje_fak','faktury_poz',,'N(W)')
?};
FAKSPL.cntx_pop();
FAP.cntx_pop();
FAKS.cntx_pop();
FAPOW.cntx_pop();
''


\zal_rozl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: rozliczanie zaznaczonych zaliczek
::  OLD: \zal_rozl/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab.sel_size=0
||
   {? exec('zal_prgr','faktury_zalicz')
   ||
      exec('zal_end','faktury_zalicz');
      exec('zal_pogr','faktury_zalicz')
   ?}
||
   exec('zal_end','faktury_zalicz')
?}


\zal_prgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: przed akcja grupowa Rozlicz
::   WE: [_a] - tabela z zaliczkami
::       [_b] - zaliczki brane do rozliczenia
::  OLD: \zal_prgr/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_Fapow:={? var_pres('_a')=type_of(FIRMA) || _a || cur_tab(1,1) ?};
_Sel:={? var_pres('_b')=type_of(FIRMA) || _b || _Fapow.sel_aget() ?};

X_kw_roz:=0;
_ok:=1;

exec('jak_rozp_kw_roz','faktury_zalicz',_Fapow,_Sel);
:: wartość zaliczek wybranych do rozliczenia
_war:=0;
_Fapow.cntx_psh;
{? ~_Sel.first || _Sel.REF:=#_Fapow.ref; _Sel.add ?};
_Sel.cntx_psh();
{? _Sel.first
||
   {!
   |?
      {? _Fapow.seek(_Sel.REF,)
      ||
         _war+=_Fapow.KW_ROZ
      ?};
      _Sel.next
   !}
?};
_Sel.cntx_pop();
_Fapow.cntx_pop;

{? FAKS.T().KOR='T'
||
   _wart_fak:=exec('FindAndGet','#table',FAKS,FAKS.FKSQL,,"
      _wart_fak:=0;
      FAKSV.cntx_psh();
      FAKSV.index('FF_SV');
      FAKSV.prefix('',$FAKS.ref());
      _loop:=FAKSV.first();
      {!
      |? _loop
      |!
         _wart_fak+=FAKSV.WW_Z;
         _loop:=FAKSV.next()
      !};
      FAKSV.cntx_pop();
      _wart_fak
   ",0);
   {? _wart_fak<0 || _wart_fak:=-_wart_fak ?};
   _ok:=_war>=_wart_fak;
   {? ~_ok || FUN.info('Za mała kwota zaliczki do rozliczenia.'@) ?}
||
   {? exec('faksv_r_roz','faktury_vat',$FAKS.ref())
   ||
      _faksv_r_war:=exec('faksv_r_war','faktury_vat',$FAKS.ref());
      {? _faksv_r_war & _war<>_faksv_r_war
      ||
         FUN.info('Należy rozliczyć zaliczkę w kwocie %1 %2.'@[$_faksv_r_war,FAKS.WAL().KOD]);
         _ok:=1
      ?}
   ?}
?};

{? ~_ok || _Fapow.sel_adel ?};

_ok


\zal_pogr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: po akcji grupowej Rozlicz
::   WE: [_a] - 0-rozliczenie manualne, 1-rozliczenie automatyczne
::  OLD: \zal_pogr/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_auto:={? var_pres('_a')=type_of(0) || _a || 0 ?};
{? _auto=0 || sel_exit() ?};
VAR_DEL.delete('__FAPOWK');
exec('sumfak','faktury_wspolne')


\jak_rozp_kw_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: tabelka opisujaca jak rozpisac kwote zaliczki
::   WE: [_a] - tabela z zaliczkami
::       [_b] - zaliczki brane do rozliczenia
::  OLD: \jak_rozp_kw_roz/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',{? BEER.SZ='S' || 300306 || 300308 ?},2)='N' || return ?};

_Fapow:={? var_pres('_a')=type_of(FIRMA) || _a || cur_tab(1,1) ?};
_Sel:={? var_pres('_b')=type_of(FIRMA) || _b || _Fapow.sel_aget() ?};

:: __FAPOWK rozpiska rozliczenia dla wskazanych zaliczek
VAR_DEL.delete('__FAPOWK');
__FAPOWK:=tab_tmp(1
   ,'FAPOW'    ,'STRING[16]'  ,'$FAPOW.ref'
   ,'KW_ROZ1'  ,'REAL'        ,'_kw_roz1'
   ,'KW_ROZ2'  ,'REAL'        ,'_kw_roz2');

:: _Fksv rozpiska wartosci wg stawek VAT z faktury rozliczajacej
_Faksv:=tab_tmp(1
   ,'SV'       ,'STRING[8]'   ,'SLO.KOD - stawka VAT'
   ,'WW'       ,'REAL'        ,'Wartość w stawce');

_faks:=$FAKS.ref;
FAKSV.cntx_psh;
FAKSV.use('faksv'+(8+_faks+3));
FAKSV.index('FAKS_SV');
FAKSV.prefix($exec('FindAndGet','#table',FAKS,_faks,,,null()));
{? FAKSV.first
||
   {!
   |?
      _Faksv.SV:=FAKSV.SV().KOD;
      _Faksv.WW:=FAKSV.WW;
      _Faksv.add & FAKSV.next
   !}
?};
FAKSV.cntx_pop;

_wart_fak:=
   {? FAKS.WAL<>INFO.NAROD
   || FAKS.BRTW
   || FAKS.BRUTTO
   ?};

FAPOW.cntx_psh;
{? ~_Sel.first || _Sel.REF:=#_Fapow.ref; _Sel.add ?};
{? _Sel.first
||
   FAPOW.prefix;
   {!
   |?
      _ref:={? _Fapow=FAPOW || FAPOW.ref |? _Fapow.seek(_Sel.REF,) || _Fapow.FAPOW ?};
      {? FAPOW.seek(_ref)
      ||
         FAKS.cntx_psh;
         exec('czesc_faksv_mk1','faktury_zalicz',FAPOW.FAKS);
         exec('czesc_faksv_mk2','faktury_zalicz',FAPOW.FAKS);
         FAKS.cntx_pop;
         __FAPOWK.FAPOW:=$FAPOW.ref;
         _kw_roz:=0;
         {? XX_VAT.first
         ||
            {!
            |?
               {? _Faksv.find_key(XX_VAT.SV)
               ||
                  _war:={? _Faksv.WW>XX_VAT.WW_Z || XX_VAT.WW_Z || _Faksv.WW ?};
                  _kw_roz+=_war;
                  _Faksv.WW-=_war;
                  _Faksv.put
               ?};
               XX_VAT.next
            !}
         ?};
         __FAPOWK.KW_ROZ1:={? _kw_roz<_wart_fak || _kw_roz || _wart_fak ?};
         __FAPOWK.KW_ROZ2:={? FAPOW.KW_ROZ>_wart_fak || _wart_fak || FAPOW.KW_ROZ ?}-__FAPOWK.KW_ROZ1;
         __FAPOWK.add;
::       w _wart_fak ustalamy wartosc do rozpisania proporcjonalnego
         _wart_fak-=__FAPOWK.KW_ROZ1
      ?};
      _wart_fak & _Sel.next
   !};
   {? __FAPOWK.first
   ||
      {!
      |?
         {? _wart_fak<__FAPOWK.KW_ROZ2
         ||
            __FAPOWK.KW_ROZ2:=_wart_fak;
            _wart_fak:=0;
            __FAPOWK.put
         ||
            _wart_fak-=__FAPOWK.KW_ROZ2
         ?};
         __FAPOWK.next
      !}
   ?}
?};
FAPOW.cntx_pop


\czesc_faksv_mk1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: rozpiska zaliczki dla faktury
::   WE: _a - $FAKS.ref - zaliczka
::  OLD: \czesc_faksv_mk1/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_faks:=_a;
FAKS.cntx_psh;
FAKS.use(ref_name(_faks));
FAKS.prefix;
{? FAKS.seek(_faks)
||
   _walutowa:=FAKS.WAL<>INFO.NAROD;

   _kw_zal:={? _walutowa || (FAKS.KW_ZAL*FAKS.KRS)$2 || FAKS.KW_ZAL ?};
   _kw_wal:=FAKS.KW_ZAL;

:: rozpisanie kwoty zaliczki wg % wartosci dla poszczegolnych stawek
   exec('rozp_zal','faktury_zalicz',$FAKS.ref,_kw_wal,_kw_zal)
?};
FAKS.cntx_pop


\czesc_faksv_mk2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: zmiana rozpiski zaliczki jesli byla korygowana
::   WE: _a - $FAKS.ref - zaliczka
::  OLD: \czesc_faksv_mk2/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_faks:=_a;

FAKS.cntx_psh;
FAKS.use(ref_name(_faks));
FAKS.prefix;
{? FAKS.seek(_faks)
||
   _walutowa:=FAKS.WAL<>INFO.NAROD;

   _kw_zal:={? _walutowa || (FAKS.KW_ZAL*FAKS.KRS)$2 || FAKS.KW_ZAL ?};
   _kw_wal:=FAKS.KW_ZAL;

   {? FAKS.T().KOR='N'
   ||
      _ref:=FAKS.ref;
      _onum:=0;
      _msk:=exec('tab_mask','faktury_wspolne',5,form((FAKS.D~1)-2000,-2,0,'99'));
      _msk.blank; _msk.ROK:='hs'; _msk.add(1);
      _msk.clear;
      {? _msk.first
      ||
         FAKS.cntx_psh;
         {!
         |? FAKS.use((form(8+$_faks)-2)+_msk.ROK);
            FAKS.index('OREFK');
            FAKS.prefix(BEER.SZ,_faks);
            {? FAKS.first
            || {!
               |? {? _onum<FAKS.ONUM & FAKS.AKC='T'
                  || _ref:=FAKS.ref
                  ?};
                  FAKS.next
               !}
            ?};
            _msk.next
         !};
         FAKS.cntx_pop
      ?};
::    zmiana X_VAT jesli byla korekta do faktury
      {? _ref<>FAKS.ref
      ||
::       wyznaczenie kwoty zaliczki po korekcie
         FAPOW.cntx_psh;
         FAPOW.index('LACZ'); FAPOW.prefix($FAKS.ref);
         _kw_wal:={? FAPOW.first || FAPOW.KW_PO_K ?};
         FAPOW.cntx_pop;
         _kw_zal:={? _walutowa || (_kw_wal*FAKS.KRS)$2 || _kw_wal ?};

::       rozpisanie kwoty zaliczki wg % wartosci dla poszczegolnych stawek
         exec('rozp_zal','faktury_zalicz',$_ref,_kw_wal,_kw_zal)
      ?}
   ?};

:: odjecie rozliczonych zaliczek
   _xx_ndx:=XX_VAT.ndx_tmp('',,'SV',,);
   XX_VAT.index(_xx_ndx);
   FAPOW.cntx_psh;
   FAPOW.index('LACZ');
   FAPOW.prefix($FAKS.ref,'T');
   {? FAPOW.first
   ||
      FAKSV.cntx_psh;
      FAKSV.use('faksv'+(ref_name(FAKS.ref())+3));
      FAKSV.index('FAPOW_SV');
      {!
      |?
         {? (var_pres('__FAPOWR')<0 | __FAPOWR<>FAPOW.ref)
            & (var_pres('__FAPOWT')<0 | __FAPOWT='KORWYC')
         ||
            FAKSV.prefix($FAPOW.ref);
            {? FAKSV.first()
            ||
               {!
               |?
                  {? XX_VAT.find_key(FAKSV.SV().KOD)
                  ||
                     XX_VAT.WW_Z-=FAKSV.WW_Z; _kw_wal-=FAKSV.WW_Z;
                     XX_VAT.WB_Z-=FAKSV.WB_Z;
                     XX_VAT.put
                  ?};
                  FAKSV.next
               !};
               _kw_zal:={? _walutowa || (_kw_wal*FAKS.KRS)$2 || _kw_wal ?}
            ?}
         ?};
         FAPOW.next
      !};
      FAKSV.cntx_pop
   ?};
   FAPOW.cntx_pop
?};
FAKS.cntx_pop


\zal_podz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: przed rozliczeniem mozna podzielic nierozliczona zaliczke na czesci
::  OLD: \zal_podz/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
FAPOW.cntx_psh();
FAPOW.clear;

_kw:=0;

_ok:=FAPOW.seek(cur_tab(1,1).FAPOW);

{? _ok & FAPOW.ROZ='T' || FUN.info('Podział rozliczonych zaliczek niedostępny.'@); _ok:=0 ?};

{? _ok
|| FAPOW.cntx_psh();
   FAPOW.win_edit('RED_PODZ');
   FAPOW.KW:=0;
   _valid:="
      {? FAPOW.KW>=FAPOW.KW_ROZ || FUN.info('Kwota musi być mniejsza od kwoty bazowej.'@);0
      |? FAPOW.KW<=0 || FUN.info('Podaj wartość większą od zera.'@);0 || 1
      ?}
   ";
   {? FAPOW.edit(_valid)
   || _ok:=1;
      _kw:=FAPOW.KW
   || _ok:=0
   ?};
   FAPOW.cntx_pop();
   {? _ok
   ||
      cur_tab(1,1).seek(exec('fp_podz','faktury_zalicz',_kw$2))
   ?}
?};

FAPOW.cntx_pop();
1


\fp_podz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: dzielenie FAPOW - w buforze jest dzielony FAPOW
::   WE: _a - kwota pozostala po podziale
::       [_b] - tabela z zaliczkami
::  OLD: \fp_podz/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_Fapow:={? var_pres('_b')=type_of(FIRMA) || _b || cur_tab(1,1) ?};

_result:=_Fapow.ref();

_fref:=FAPOW.ref();
_kw_roz:=FAPOW.KW_ROZ;
FAPOW.KW_ROZ:=_a;
{? FAPOW.put()
||
:: bedzie nowy rekord
   FAPOW.cntx_psh();
   FAPOW.clear();
   FAPOW.index('POZ');
   _new_poz:=exec('NewOrder','#table','FAPOW','POZ',,1);
   FAPOW.cntx_pop();
   FAPOW.POZ:=_new_poz;
   FAPOW.ROZ:='N';
   FAPOW.KW_ROZ:=_kw_roz-_a;
   FAPOW.FAKS_END:=FAPOW.END_SYM:='';
:: reszta danych ta sama co FAPOW z bufora
   {? FAPOW.add()
   || {? exec('get','#params',{? BEER.SZ='S' || 300306 || 300308 ?},2)='T'
         & var_pres('__FAPOWK')>100
      || __FAPOWK.FAPOW:=$FAPOW.ref();
         __FAPOWK.KW_ROZ1:=0;
         __FAPOWK.KW_ROZ2:=FAPOW.KW_ROZ;
         __FAPOWK.add()
      ?};
      _Fapow.KW_ROZ:=_a;
      {? _Fapow.put || _result:=_Fapow.ref() ?};
      _Fapow.ROZ:='N';
      _Fapow.KW_ROZ:=_kw_roz-_a;
      _Fapow.FAPOW:=$FAPOW.ref;
      _Fapow.add
   ?}
?};
:: stawki Vat w podzielonej zalicze
exec('faksv_rm','faktury_vat',FAPOW.FAKS);
exec('faksv_mk','faktury_vat',FAPOW.FAKS);
_result


\zal_kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wyswietla powiazane korekty
::  OLD: \zal_kor/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_f_pierw:=FAPOW.FAKS;
FAPOW.cntx_psh();
FAPOW.index('F_K');
FAPOW.prefix(_f_pierw,'T','T');
{? FAPOW.first()
||
   FAPOW.cntx_psh();
   FAPOW.win_sel('WER_KOR');
   FAPOW.select(,,,'Z');
   FAPOW.cntx_pop()
||
   FUN.info('Brak korekt.'@)
?};
FAPOW.cntx_pop();
1


\zal_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: stawki vat dla FAPOW
::  OLD: \zal_vat/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAPOW.KOREKTA='N'
||
   _fapow:=$FAPOW.ref();
   _use:='faksv'+(form(8+FAPOW.FAKS)+3);
   FAKSV.cntx_psh();
   FAKSV.use(_use);
   FAKSV.clear();
   FAKSV.index('FAPOW_SV');
   FAKSV.prefix(_fapow);
   FAKSV.win_sel('WER');
   exec('fsv_sum','faktury_vat');
   FAKSV.select();
   FAKSV.cntx_pop()
|| FUN.info('Nie dotyczy ze względu na sposób rozliczania zaliczek.'@)
?};
''


\zal_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: rekord przed - FAPOW -> WER_ZAL
::  OLD: \zal_rek/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1)=FAPOW & var_pres('__infpdk')>0
|| DISP.TYP_DOK2:=exec('FindAndGet','#table',FAKS,FAPOW.FAKS,,"T().T",'');
   DISP.NR_DOK2:=exec('FindAndGet','#table',FAKS,FAPOW.FAKS,,"NR",0);
   DISP.SYM_DOK2:=FAPOW.FAKS_SYM;
   DISP.DAT_DOK2:=FAPOW.DW;
   grp_edisp(DISP,'INFDOK')
?};
0


\wyst_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: wystawianie zaliczki bez powiazania z zamowieniem
::   WE: [_a] - ZK_N.ref
::       [_b] - poprzednia zaliczka
::       [_c] - 'L'-zaliczka sprzedazy, 'l'-zaliczka zakupu
::       [_d] - 1-pytanie o wystawienie kolejnej zaliczki, 0-wpp
::       [_e] - kwota zaliczki
::       params_get()   - ustawiane w main w !lsp_fak_drza.fml
::  OLD: \wyst_zal/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};
{? _>=2 || {? type_of(_b)<>7 || _b:=null ?} || _b:=null ?};
{? _>=3 || {? type_of(_c)<>2 || _c:='L' ?} || _c:='L' ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
{? var_pres('_e')<>type_of(1) || _e:=0 ?};

_in:=params_get().in;
_zlp_is:=var_pres('ZLP',_in)=type_of(null()) & _in.ZLP<>null();

_ask:=_d=1 & _zlp_is=0;

{? ~exec('upr_cscz','ceny',2,{? _c='L' || 'S' || 'Z' ?})
||
   FUN.info('Brak uprawnień do wartości sprzedaży.\nDodawanie faktur zaliczkowych niedostępne.'@);
   return('')

|? _ask & FUN.ask('Wystawić kolejną zaliczkę do innego istniejącego dokumentu zaliczkowego?'@)
||
   KH.actions('WER','W');
   POMOC.KH:=null;
   POMOC.win_edit('ZALICZKA');
   {? POMOC.edit()
   ||
      _a:=POMOC.KH;
      FAPOW.prefix();
      FAPOW.f_clear();
      _from:='join KH using (FAPOW.KH,KH.reference)';
      _where:='
         "FAPOW".ODDZ=\':_a\'
         and "FAPOW".SYS=\':_b\'
         and (KH.KOD=\':_c\' or \':_c\'=\'\')
         and "FAPOW".KOREKTA=\'N\'
         and "FAPOW".ROZ=\'N\'
         and "FAPOW".AKC=\'T\'
         and "FAPOW".DW<=to_date(:_d)
      ';
      _sort:='FAKS_SYM, POZ';
      FAPOW.f_set(_sort,_from,_where,ST.ODDZ,'',POMOC.KH().KOD,date());
      {? FAPOW.f_first()
      ||
         _fp_sel:=FAPOW.mk_sel('Nierozliczone zaliczki'@,'P',,'__wyst_zal_sel_',,,,,'U');
         FAPOW.win_fld(_fp_sel,,'FAKS_SYM',,,20,,,'Faktura zaliczkowa'@);
         FAPOW.win_fld(_fp_sel,,'KH','KOD',,10,,,'Kontrahent'@);
         FAPOW.win_fld(_fp_sel,,'KH','NAZ',,30,,,'Nazwa'@);
         FAPOW.win_fld(_fp_sel,,'DW',,,10,,,'Data przyjęcia'@);
         FAPOW.win_fld(_fp_sel,,'KW_ROZ',,,14,2,,'Do rozliczenia'@);
         FAPOW.win_fld(_fp_sel,,'WAL',,,8,,,'Waluta'@);
         FAPOW.win_act(_fp_sel,0,'Formuła','&Wybierz'@@,,,,"sel_exit()",1,,,,'W');
         FAPOW.win_act(_fp_sel,0,'Formuła','Poz&ycje'@@,,,,"exec('fzal_poz','faktury_zalicz')",,,,,'Y');
         FAPOW.win_act(_fp_sel,,'Kolejność');
         FAPOW.win_sel(_fp_sel);
         {? FAPOW.select()
         ||
            _faks:=FAPOW.FAKS;
            FAKS.cntx_psh();
            FAKS.use(8+_faks);
            FAKS.prefix();
            {? FAKS.seek(_faks,8+_faks)
            ||
               _a:=FAKS.KH;
               _b:=FAKS.ref()
            ?};
            FAKS.cntx_pop()
         ||
            FUN.info('Nie wskazano dokumentu zaliczkowego.\nZostanie wystawiona nowa faktura zaliczkowa.'@)
         ?}
      ||
         FUN.info('Brak nierozliczonych dokumentów zaliczkowych.\nZostanie wystawiona nowa faktura zaliczkowa.'@)
      ?};
      FAPOW.f_clear()
   ||
      FUN.info('Zostanie wystawiona nowa faktura zaliczkowa.'@)
   ?};
   KH.actions('WER')
?};
POMOC.LOCK:=$_b;
_typ:='';
{? _b
||
   _typ:=exec('FindAndGet','#table',FAKS,_b,,"exec('FindAndGet','#table',TYPYSP,FAKS.T,,\"TYPYSP.T\",'')",'')
?};
params_exec('wystinne','faktury_nag',_c,,_a,,_b,,,_e,,_typ);
POMOC.LOCK:='';
''


\bl_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: blank() FAPOW.POZ
::  OLD: \bl_poz/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
FAPOW.cntx_psh();
FAPOW.index('POZ');
{? FAPOW.last()
|| _wyn:=FAPOW.POZ+1
?};
FAPOW.cntx_pop();
_wyn


\czy_fapow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [12.30]
:: OPIS: Sprawdza czy naglowek faktury zaliczkowej posiada prawidlowo wypelnione zapisy zaliczkowe
::   WY: 1 - Prawidłowo / 0 -  Blad w danych
::  OLD: \czy_fapow/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? FAKS.WHERE='L' & FAKS.AKC='N'
||
   FAPOW.index('FAKS_K');
   FAPOW.prefix($FAKS.ref(),FAKS.T().KOR);
   {? ~FAPOW.first()
   ||
      FUN.info('Nagłówek faktury zaliczkowej nie został prawidłowo zapisany w bazie danych.\n'
               'Usuń nagłówek i wpisz go ponownie.'@);
     _wyn:=0
   ?}
?};
_wyn


\zal_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: rozliczenie faktur koncowych
::   WE: _a - tabela z zaliczkami
::       _b - grupowa akceptacja
::       _c - 0-korekta zbiorcza; 1-korekty pojedyncza
::       _d - komunikaty - funkcja pomocnicza
::       _e - komunikaty - identyfikator
::  OLD: \zal_end/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_Fapow:={? var_pres('_a')=type_of(FIRMA) || _a || cur_tab(1,1) ?};
{? _=5
||
   _group:=_b;
   _nieKorZb:=_c;
   _komroot:=_d;
   _komid:=_e
?};
FAPOW.cntx_psh();
FAPOW.clear();

_ok:=FAPOW.seek(_Fapow.FAPOW);

{? exec('get','#params',{? BEER.SZ='S' || 300306 || 300308 ?},2)='T'
||
   _ok:=__FAPOWK.find_key($FAPOW.ref) & (__FAPOWK.KW_ROZ1 | __FAPOWK.KW_ROZ2)
?};

_wart:={? FAKS.WAL<>INFO.NAROD || FAKS.BRTW || FAKS.BRUTTO ?};
_wart_fak:=
   {? exec('faksv_r_roz','faktury_vat',$FAKS.ref())
   || exec('faksv_r_war','faktury_vat',$FAKS.ref())
   || _wart
   ?};

{? _ok
   & (FAKS.T().KOR='N' & _wart_fak>=X_kw_roz
      | FAKS.T().KOR='T' & _wart_fak>0)
||
   _faks_end:=FAPOW.FAKS_END:=$FAKS.ref();
   FAPOW.END_SYM:=FAKS.SYM;
   FAPOW.put();
   FAPOW.cntx_psh;
   X_kw_roz+=FAPOW.KW_ROZ;
   {? _wart=_wart_fak & _wart_fak<=X_kw_roz & FAKS.T().KOR='N'
   ||
      _txt:='Faktura została rozliczona całkowicie.'@;
      {? _=0
      ||
         FUN.info(_txt)
      ||
         _komroot(_komid,_nieKorZb); __kom.add(_txt,7)
      ?};
      {? FAKS.SZ='S' & exec('get','#params',300305,2)='T'
         | FAKS.SZ='Z' & exec('get','#params',300307,2)='T'
      ||
         _fak_100:=exec('fakt_100','faktury_zalicz','S',FAKS.SZ);
         {? _fak_100<>''
         || FAPOW.cntx_psh();
            FAPOW.index('END_K');
            FAPOW.prefix(_faks_end);
            {? FAPOW.first()
            || {!
               |? _ref:=FAPOW.ref(); _ok:=FAPOW.next();
                  FAPOW.cntx_psh();
                  FAPOW.clear();
                  {? FAPOW.seek(_ref)
                  || FAPOW.END_SYM:=_fak_100;
                     FAPOW.put(1)
                  ?};
                  FAPOW.cntx_pop();
                  _ok
               !}
            ?};
            FAPOW.cntx_pop();
            FAPOW.get()
         ?}
      ?}
   ?};
   {? _wart_fak<X_kw_roz
   ||
      exec('fp_podz','faktury_zalicz',(FAPOW.KW_ROZ-(X_kw_roz-_wart_fak))$2,_Fapow)
   ?};
   FAPOW.cntx_pop;
   FAPOW.get;
   FAPOW.ROZ:='T';
   FAPOW.put()
|? _ok & FAKS.T().KOR='T' & _wart_fak<0 & -_wart_fak>=-X_kw_roz
||
:: YY_VAT rozpiska dla korekty faktury 100% wg stawek vat wskazanego rozliczenia
:: wykorzystywane w wariancie 300306='T' lub 300308='T'
   VAR_DEL.delete('YY_VAT');
   YY_VAT:=tab_tmp(4
      ,'SV','STRING[8]','Stawka VAT'
      ,'WAL','STRING[8]','Waluta'
      ,'KRS_ZAL','REAL','Kurs zaliczki'
      ,'KRS_END','REAL','Kurs koncowej'
      ,'WW_Z','REAL','Wart. w wal.zal.'
      ,'WB_Z','REAL','Wart. brutto zal.'
      ,'KW_WAL','REAL','Wart. rozl. w wal.'
      ,'KW_ZAL','REAL','Wart. rozl. w narod.');
   FAKSV.cntx_psh;
   FAKSV.index('FAPOW_SV');
   FAKSV.prefix($FAPOW.ref);
   {? FAKSV.first
   ||
      {!
      |?
         YY_VAT.SV:=FAKSV.SV().KOD;
         YY_VAT.WAL:=FAKSV.WAL().KOD;
         YY_VAT.KRS_ZAL:=FAKSV.KRS_ZAL;
         YY_VAT.KRS_END:=FAKSV.KRS_END;
         YY_VAT.WW_Z:=FAKSV.WW_Z;
         YY_VAT.WB_Z:=FAKSV.WB_Z;
         YY_VAT.KW_WAL:=-_wart_fak;
         YY_VAT.KW_ZAL:={? YY_VAT.KRS_END || (YY_VAT.KW_WAL*YY_VAT.KRS_END)$2 || YY_VAT.KW_WAL ?};
         YY_VAT.add & FAKSV.next
      !}
   ?};
   FAKSV.cntx_pop;
   __FAPOWT:='KORAKC';
   __FAPOWR:=FAPOW.ref;
   _kw_roz:={? -_wart_fak-X_kw_roz>_Fapow.KW_ROZ || _Fapow.KW_ROZ || -_wart_fak-X_kw_roz ?};
   _faks_end:=FAPOW.FAKS_END:=$FAKS.ref();
   FAPOW.END_SYM:=FAKS.SYM;
   FAPOW.KW_ROZ:=0;
   FAPOW.ROZ:='N';
   FAPOW.AKC:='N';
   FAPOW.cntx_psh;
   FAPOW.prefix;
   _fapowo:=FAPOW.ref;
   {? FAPOW.add
   ||
      {? exec('get','#params',{? BEER.SZ='S' || 300306 || 300308 ?},2)='T'
      ||
         {? __FAPOWK.find_key($_fapowo) || __FAPOWK.FAPOW:=$FAPOW.ref; __FAPOWK.put ?}
      ?};
      X_kw_roz+=_kw_roz;
      FAPOW.cntx_psh;
      exec('fp_podz','faktury_zalicz',{? -_wart_fak<-X_kw_roz || (-_kw_roz+(-X_kw_roz+_wart_fak))$2 || -_kw_roz ?},_Fapow);
      FAPOW.cntx_pop
   ?};
   FAPOW.get;
   FAPOW.ROZ:='T';
   {? FAPOW.put()
   ||
      FAPOW.cntx_psh();
      FAPOW.index('LACZ');
      FAPOW.prefix(FAPOW.FAKS,'T');
      _loop:=FAPOW.first();
      {!
      |? _loop
      |!
         {? FAPOW.AKC='N' || exec('set_fapow_akc','faktury_zalicz',FAPOW.FAKS,'N','N') ?};
         _loop:=FAPOW.next()
      !};
      FAPOW.cntx_pop()
   ?};
   FAPOW.cntx_pop;
   VAR_DEL.delete('__FAPOWT','__FAPOWR','YY_VAT')
?};

FAPOW.cntx_pop();
''


\fakt_100
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: dla faktur 100% nadanie nowego numeru wg numeracji
::   WE: _a - 'S'-zmiana na fakture 100%, 'T'-wycofanie akceptacji faktury 100% (ustawia FAKS.AKC:='N')
::       _b - FAKS.SZ
::   WY: nadany symbol FAK100%
::  OLD: \fakt_100/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:='';
BEER.SZ:=_b;

_new_typ:=
   {? BEER.SZ='S'
   || exec('tsp_upr','typysp'
         ,'KOR=\'N\' and ZAL=\'N\' and ZAK=\'N\' and FIS=\''+FAKS.T().FIS+'\' and ZAL_ROZ=\''+_a+'\'',,,,2)
   || exec('tsp_upr','typysp'
         ,'KOR=\'N\' and ZAL=\'N\' and ZAK=\'T\' and FIS=\''+FAKS.T().FIS+'\' and ZAL_ROZ=\''+_a+'\'',,,,2)
   ?};

{? _new_typ<>null
||
:: usuniecie nadanego wczesniej numeru
   POM.TAB:='FAKS';
   POM.TYPDOK:=FAKS.T().KOD;
   numer:=FAKS.NR;
   oldnumer:=1;
   exec('nr_old','numery');

:: nadanie nowego numeru wg parametru
   FAKS.T:=_new_typ;
   {? FZ.TYPYSP<>null
   ||
      FZ.TYPYSP:=_new_typ
:: DRO_TODO_AWI_MOD_____: exec('zakr_all','faktury0')
::      exec('zakr_all','faktury0')
   ?};

   POM.TAB:='FAKS';
   POM.TYPDOK:=FAKS.T().KOD;
   POM.NRT:=0;
   FAKS.NR:=0;
   {? exec('spr_wol','numery')
   || {? FUN.ask('W numeracji dokumentów generowanych podczas\n'
                 'akceptacji dokumentu występują wolne numery.\n'
                 'Czy chcesz je wykorzystać?'@)
      || FAKS.NR:=exec('nr_dok','numery','FAKS','T')
      ?}
   ?};
   {? FAKS.NR=0
   || FAKS.NR:=exec('numer_new','numery','PACZKA')
   ?};
   exec('znak','numery','FAKS');
   {? _a='T'
   || exec('zest','faktury_nag');
      FAKS.AKC:='N';
      FAKS.INTRAKC:='N';
      FAKS.STAT_REJ:='N'
   ?};
   {? FAKS.put() || _wyn:=FAKS.SYM ?}
?};
_wyn


\czy_wyc_fapow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: sprawdza czy wystarczajacy stan nierozliczonej czesci zaliczek przed wycofaniem akceptacji korekty
::   WE: _a - $FAKS.ref - korekty
::   WY: 1-ok, 0-nok
::  OLD: \czy_wyc_fapow/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
FAPOW.cntx_psh;
FAPOW.index('END_K');
FAPOW.prefix(_a);
{? FAPOW.first
:: petla po ujemnych rozliczonych zaliczkach korekty
||
   {!
   |?
      {? FAPOW.KW_ROZ<0
      ||
         _kw_roz:=-FAPOW.KW_ROZ;
         FAPOW.cntx_psh;
         FAPOW.index('LACZ');
         FAPOW.prefix(FAPOW.FAKS,'N');
::       sprawdzenie czy wystarczajacy stan nierozliczonej czesci zaliczki
         _wyn:={? FAPOW.first || _kw_roz<=FAPOW.KW_ROZ ?};
         FAPOW.cntx_pop
      ?};
      _wyn & FAPOW.next
   !}
?};
FAPOW.cntx_pop;
_wyn


\fp_addk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: dodanie FAPOW KOREKTA='T' po utworzeniu ZAL-KOR
::  OLD: \fp_addk/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_faks:=_f_pierw:=_zk_n:='';
_rk:=FAKS.FKSQL;
_nk:=form(8+FAKS.FKSQL);
_kw_kor:=FAKS.KW_ZAL;
FAKS.cntx_psh();
FAKS.use(_nk);
FAKS.clear();
{? FAKS.seek(_rk,_nk)
|| _f_pierw:=$FAKS.ref()
?};
FAKS.cntx_pop();

_faks:=$FAKS.ref();
FAPOW.clear();
FAPOW.blank();
:: FAPOW.POZ - kolejny nr - na blank
FAPOW.F:=_f_pierw;
FAPOW.FAKS:=_faks;
FAPOW.KW:=FAKS.KW_ZAL;
FAPOW.KW_PO_K:=FAPOW.KW_ROZ:=0;
:: FAPOW.ZAL=T - na blank
FAPOW.KH:=FAKS.KH;
FAPOW.ZK_N:=_zk_n;
FAPOW.FAKS_SYM:=FAKS.SYM;
FAPOW.DW:=FAKS.DW;
FAPOW.D:=FAKS.D;
FAPOW.KOREKTA:='T';
FAPOW.KORYGOW:='N';
FAPOW.ROZ:='K';
FAPOW.FAKS_END:=FAPOW.END_SYM:='';
FAPOW.WAL:=FAKS.WAL().KOD;
FAPOW.add()


\fzmbwpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: akcja faktura zaliczkowa
::   WE: [_a] 1-automatycznie 0-nie(domyslnie)
::       [_b] typ dokumentu sprzedaży - domyślnie: brak
::   WY: w przypadku automatu zwraca opis bledu lub pusty string
::  OLD: \fzmbwpl/mobhan.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};

_wyn:='';
_typ_fak:={? _b<>'' || exec('FindAndGet','#table',TYPYZAM,_b,,"T",'') || '' ?};

{? MBWPL.STAN='R'
|| FUN.info('Wpłata na raporcie kasowym.\nWystawienie faktury zaliczkowej niemożliwe.'@)
|? MBWPL.STAN='A'
|| FUN.info('Wpłata anulowana.\nWystawienie faktury zaliczkowej niemożliwe.'@)
|? MBWPL.STAN='P'
|| {? ~_a & MBWPL.SQL<>''
   || ZK_N.cntx_psh();
      ZK_N.use(form(8+MBWPL.SQL));
      ZK_N.clear();
      {? ZK_N.seek(MBWPL.SQL)
      || _ref_fak:=exec('wyst_zzl','faktury_zalicz',MBWPL.WAR,_b);
         {? _ref_fak>0
         || FAKS.cntx_psh();
            {? FAKS.seek(_ref_fak,)
            || MBWPL.ZAL:=$FAKS.ref();
               MBWPL.put(1)
            ?};
            FAKS.cntx_pop()
         ?}
      ?};
      ZK_N.cntx_pop()
   |? _a | (~_a & FUN.ask('Czy wystawić fakturę zaliczkową na podstawie wpłaty gotówkowej?'@))
   ||
::    kontrola domyslnych parametrow
      _stvat:=exec('get','#params',300600,2);
      _jm:=exec('get','#params',300601,2);
      _slu:=exec('FindInSet','#table','SLU','NAZ','~STAWKI VAT '+KSTE.KRAJ().KOD);

::    szukamy odwolan wg parametrow
      _ref_st:=null;
      {? _stvat<>''
      || SLO.cntx_psh();
         SLO.index('SL');
         SLO.prefix(_slu,_stvat);
         {? SLO.first()
         || {!
            |? {? SLO.KOD=_stvat
               || _ref_st:=SLO.ref();
                  0
               || SLO.next()
               ?}
            !}
         ?};
         SLO.cntx_pop()
      ?};

      _ref_jm:={? _jm<>'' || exec('FindInSet','#table','JM','KOD',_jm,_jm) || null ?};

      {? _ref_st=null
      || {? ~_a
         || FUN.info('Brak domyślnej stawki VAT (parametr ogólny 300600).\n'
             'Wystawienie faktury zaliczkowej niemożliwe.'@)
         || _wyn:='err: Brak domyślnej stawki VAT dla zaliczki'@
         ?}
      |? _ref_jm=null
      || {? ~_a
         || FUN.info('Brak domyślnej jednostki miary (parametr ogólny 300601).\n'
             'Wystawienie faktury zaliczkowej niemożliwe.'@)
         || _wyn:='err: Brak domyślnej jednostki miary dla zaliczki'@
         ?}
      || {? ~_a
         || HELP.WHERE:='L';
            BEER.HAN:=MBWPL.HAN;
            _typ:={? _typ_fak<>'' || _typ_fak || exec('get','#params',300602,2) ?};
            BEER.WYSTFAKS:=null();
            params_exec('wystinne','faktury_nag','L',,MBWPL.KH,null,null,,null,MBWPL.WAR,,_typ,1,MBWPL.HAN);
            {? BEER.WYSTFAKS<>null()
            || MBWPL.ZAL:=$BEER.WYSTFAKS;
               MBWPL.put(1);
               FAKS.cntx_psh();
               FAKS.use(ref_name(BEER.WYSTFAKS));
               {? FAKS.seek(BEER.WYSTFAKS) || FAKS.r_unlock() ?};
               FAKS.cntx_pop()
            ?}
         || _typ:={? _typ_fak<>'' || _typ_fak || exec('get','#params',300602,2) ?};
            _ref_typ:={? _typ<>'' || exec('FindInSet','#table',TYPYSP,'TYPYKOD',_typ,_typ) || null ?};

            {? _ref_typ<>null & exec('add','faktury_nag',_ref_typ,MBWPL.DATA,,MBWPL.KH,,,,0,'T','',MBWPL.DATA,'L')=1
            || _ref_fak:=#FAKS.ref();
               exec('sumfak','faktury_wspolne');
               {? _ref_fak>0
               || FAKS.cntx_psh();
                  {? FAKS.seek(_ref_fak,)
                  || MBWPL.ZAL:=$FAKS.ref();
                     MBWPL.put(1)
                  ?};
                  FAKS.cntx_pop()
               ?}
            || _wyn:='err: Brak domyślnego typu dokumentu sprzedaży dla zaliczki'@
            ?}
         ?}
      ?}
   ?}
?};
_wyn


\wyst_zzl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wystawianie faktury zaliczkowej z zamowienia
::   WE: [_a] - wartosc zaliczki (domyslnie 0)
::       [_b] - typ dokumentu sprzedaży
::  OLD: \wyst_zzl/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>1 || _a:=0 ?}  || _a:=0  ?};
{? _>=2  || {? type_of(_b)<>2 || _b:='' ?} || _b:=''  ?};

_typ_fak:={? _b<>'' || exec('FindAndGet','#table',TYPYZAM,_b,,"T",'') || '' ?};

_ref_fak:=0;
{? ~exec('spr_zam','faktury_zalicz')
|| 0
|? ~exec('upr_cscz','ceny')
|| FUN.info('Brak uprawnień do wartości sprzedaży.\nDodawanie faktur zaliczkowych niedostępne.'@)
|? exec('zam_lock','zamsiw_nag') & ZK_N.r_lock(1,1,1)
||
:: trzeba sprawdzic czy to kolejna zal. do zam.
   _ask:=1;
   _p_rsql:='';
   HELP.WHERE:='L';
   _zk_n:=$ZK_N.ref();
   _ndx:=FAPOW.ndx_tmp('',,'KH',,,'ZAL',,,'ZK_N',,,'KOREKTA',,,'FAKS_SYM',,);
   FAPOW.index(_ndx);
   FAPOW.prefix(ZK_N.KH,'T',_zk_n,'N');
   {? FAPOW.first()
   ||
      _p_rsql:=FAPOW.F;
      _ask:=FUN.choice('Do zamówienia zostały już wystawione faktury zaliczkowe.\nWybierz opcję:'@,
               ,'Wystaw kolejną'@
               ,'Pokaż wystawione zaliczki'@
               );
      {? _ask=2
      ||
         exec('zal_sum','faktury_zalicz');
         FAPOW.win_sel('WER_ZAL');
         DISP.HEAD:='Kwota';
         FAPOW.select(,,,'RP')
      ?}
   ?};
   FAPOW.ndx_drop(_ndx);
   {? _ask=1
   ||
      _p_ref:=null;
      {? _p_rsql<>''
      ||
         FAKS.cntx_psh();
         FAKS.use(8+_p_rsql);
         FAKS.clear();
         {? FAKS.seek(_p_rsql,8+_p_rsql)
         || _p_ref:=FAKS.ref()
         ?};
         FAKS.cntx_pop()
      ?};
      _ref_fak:=params_exec('wystinne','faktury_nag','L',,ZK_N.KH,ZK_N.ref(),_p_ref,,ZK_N.CB,_a,ZK_N.SPP,_typ_fak,1)
   ?};
   ZK_N.r_unlock()
?};
{? _a<>0 || _ref_fak || '' ?}


\zal_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wyswietla wplacone zaliczki do zamowienia
::  OLD: \zal_zam/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_N.T().R='W'
|| FUN.info('Opcja dotyczy wyłącznie zamówień sprzedaży.'@)
|| _zk_n:=$ZK_N.ref();
   _ndx:=FAPOW.ndx_tmp('',,'KH',,,'ZK_N',,,'KOREKTA',,,'FAKS_SYM',,);
   FAPOW.clear();
   FAPOW.index(_ndx);
   FAPOW.prefix(ZK_N.KH,_zk_n,'N');
   {? FAPOW.first()
   ||
      exec('zal_sum','faktury_zalicz');
      FAPOW.win_fml('WER_ZAL',,'FAKS_SYM',,'ICON_BEFORE',exec('fapow_sym_ib','faktury_zalicz'));
      FAPOW.win_sel('WER_ZAL');
      DISP.HEAD:='Kwota';
      FAPOW.select(,,,'RP')
   || FUN.info('Brak zaliczek dla zamówienia %1.'@[ZK_N.SYM])
   ?};
   FAPOW.ndx_drop(_ndx)
?};
''


\spr_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: sprawdza zamowieni przed wystawianiem faktury zaliczkowej z zamowienia
::  OLD: \spr_zam/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? ZK_N.STAT_REJ='N' || FUN.info('Nie zakończono redakcji zamówienia.'@); _wyn:=0 ?};
{? ZK_N.STAT_REJ<>'T' || FUN.info('Zamówienie nie jest zaakceptowane.'@); _wyn:=0 ?};
{? _wyn=1 & #ZK_N.E=2 & exec('ctrlZamFaks','magdok_wspolne',ZK_N.ref())
|| FUN.info('Zamówienie jest zrealizowane.'@);
   _wyn:=0
?};
_kh_dod_b:=exec('kh_dod_b','kontrahent','zkn_zal',ZK_N.KH,2);
{? _wyn=1 & (_kh_dod_b='B' |_kh_dod_b='T') || FUN.info('Kontrahent zablokowany.'@); _wyn:=0 ?};
_wyn


\faks_sym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wpisuje symbol faktury na zapisach pod zaliczką
::   WE: _a - $FAKS.ref
::----------------------------------------------------------------------------------------------------------------------
FAPOW.index('FAKS');
FAPOW.prefix(_a,);
{? FAPOW.first()
|| FAPOW.FAKS_SYM:=exec('FindAndGet','#table',FAKS,_a,,"SYM",'');
   FAPOW.put(1)
?}


\faks_pdf_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument zaliczkowy - Utwórz PDF
::  OLD: \fzal_prn/zalicz.fml
::  OLD: \faks_pdf_zal/!lzk_zak_zwfs.fml
::----------------------------------------------------------------------------------------------------------------------
exec('fzal_prn','faktury_zalicz',1)


\faks_prn_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument zaliczkowy - Drukuj
::  OLD: \fzal_prn/zalicz.fml
::  OLD: \faks_prn_zal/!lzk_zak_zwfs.fml
::----------------------------------------------------------------------------------------------------------------------
exec('fzal_prn','faktury_zalicz',0)


\fzal_prn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument zaliczkowy - Utwórz PDF
::   WE: _a - 0-Drukuj 1-Utwórz PDF
::  OLD: \fzal_prn/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
_pdf:={? var_press('_a')=type_of(0) || _a || 0 ?};

_f_ref:=FAPOW.FAKS;
_f_name:=form(8+FAPOW.FAKS);
FAKS.cntx_psh; FAKSPL.cntx_psh; FAKSV.cntx_psh; FAPOW.cntx_psh; FAP.cntx_psh;
FAKS.use(_f_name);
FAKSPL.use('fakpl'+(_f_name+3));
FAKSV.use('faksv'+(_f_name+3));
FAP.use('fakpo'+(_f_name+3));
FAKS.clear();
{? FAKS.seek(_f_ref,_f_name)
|| _akcja:={? _pdf || 'Area Utwórz PDF' || 'Area Drukuj' ?};
   _uid:={? FAKS.SZ='S' || 'LSP_FAK_ZWFS' || 'LZK_ZAK_ZWFS' ?};
   exec('fak_druk_gr','faktury_wspolne',_pdf,_uid,_akcja,,1)
?};
FAKS.cntx_pop; FAKSPL.cntx_pop; FAKSV.cntx_pop; FAPOW.cntx_pop; FAP.cntx_pop;
''


\fapow_sym_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła ikony dla STAT_REJ
::----------------------------------------------------------------------------------------------------------------------
"  _stat_rej:=exec('FindAndGet','#table',FAKS,FAPOW.FAKS,,\"STAT_REJ\",'N');
   {? _stat_rej='T' || exec('zaakceptowany','icon')
   |? _stat_rej='Z' || exec('zarejestrowany','icon')
   |? _stat_rej='N' || exec('pusta','#icon')
   |? _stat_rej='A' || exec('anulowany','icon')
   || exec('pusta','#icon')
   ?}
"


\fapow_kw_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: Przed wyświetleniem FAPOW.KW
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('upr_cscz','faktury_wspolne')


\fapow_kw_po_k_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: Przed wyświetleniem FAPOW.KW_PO_K
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('upr_cscz','faktury_wspolne')


\fapow_kw_roz_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: Przed wyświetleniem FAPOW.KW_ROZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('upr_cscz','faktury_wspolne')


\chk_rozl_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: Sprawdza zgodność rozliczenia zaliczki "ręcznych" zapisów vat
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=obj_new('RESULT','INFO');
_result.RESULT:=1;
FAKSV.cntx_psh();
FAKSV.index('FF_SV');
FAKSV.prefix('',$FAKS.ref());
_loop:=FAKSV.first();
{!
|? _loop
|!
   {? exec('faksv_r_roz','faktury_vat',,FAKSV.R) & FAKSV.WW_R
   ||
      {? FAKSV.WW_Z<>FAKSV.WW-FAKSV.WW_R
      ||
         _result.INFO:='Niezgodność rozliczenia zaliczki w stawce %1.\n'
            'Należy prawidłowo wskazać zaliczki do rozliczenia podczas zakończenia rejestracji dokumentu.'@[
            FAKSV.SV().KOD];
         _result.RESULT:=0
      ?}
   ?};
   _loop:=_result.RESULT & FAKSV.next()
!};
FAKSV.cntx_pop();
_result


\fapow_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Rozpisanie kwot
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_faks:=_a;
:: pobranie wartości rozliczonych zaliczek wg stawek vat
_FAKSV:=exec('faksv_r_tab','faktury_vat',_faks);
:: rozpisanie _FAKSV na rozliczone zaliczki proporcją wartości
_kw_roz:=0;
FAKSV.cntx_psh();
FAPOW.cntx_psh();
FAPOW.index('END_K');
FAPOW.prefix(_faks,'N');
_loop:=FAPOW.first();
{!
|? _loop
|!
   _kw_roz+=FAPOW.KW_ROZ;
   _loop:=FAPOW.next()
!};
_loop:=FAPOW.first() & _kw_roz;
{!
|? _loop
|!
   _wsp:=FAPOW.KW_ROZ/_kw_roz;
   FAKSV.index('FAPOW_SV');
   FAKSV.prefix($FAPOW.ref());
   _loop:=FAKSV.first(); {! |? _loop |! _loop:=FAKSV.del() !};
   _loop:=_FAKSV.first();
   {!
   |? _loop
   |!
      FAKSV.blank();
      FAKSV.FAKS:=FAPOW.FAKS;
      FAKSV.FAPOW:=$FAPOW.ref();
      FAKSV.SV:=exec('FindAndGet','#table',SLO,_FAKSV.SV,,,null());
      FAKSV.WN_Z:=(_wsp*_FAKSV.WN_Z)$2;
      FAKSV.WV_Z:=(_wsp*_FAKSV.WV_Z)$2;
      FAKSV.WB_Z:=(_wsp*_FAKSV.WB_Z)$2;
      FAKSV.WW_Z:=(_wsp*_FAKSV.WW_Z)$2;
      FAKSV.WWN_Z:=(_wsp*_FAKSV.WWN_Z)$2;
      FAKSV.WWV_Z:=(_wsp*_FAKSV.WWV_Z)$2;
      FAKSV.KRS_ZAL:=_FAKSV.KRS_ZAL;
      {? (
            FAKSV.WN_Z | FAKSV.WV_Z | FAKSV.WB_Z
               |
            FAKSV.WW_Z | FAKSV.WWN_Z | FAKSV.WWV_Z
         )
            &
         FAKSV.add()
      ||
         _FAKSV.WN_Z-=FAKSV.WN_Z;
         _FAKSV.WV_Z-=FAKSV.WV_Z;
         _FAKSV.WB_Z-=FAKSV.WB_Z;
         _FAKSV.WW_Z-=FAKSV.WW_Z;
         _FAKSV.WWN_Z-=FAKSV.WWN_Z;
         _FAKSV.WWV_Z-=FAKSV.WWV_Z;
         _FAKSV.put()
      ?};
      _loop:=_FAKSV.next()
   !};
   _kw_roz-=FAPOW.KW_ROZ;
   _loop:=FAPOW.next()
!};
FAPOW.cntx_pop();
FAKSV.cntx_pop()


\set_fapow_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Ustawia FAPOW.AKC na _c
::   WE: _a - $FAKS.ref faktury zaliczkowej
::       _b - T/N - rozliczona
::       _b - T/N - zaakceptowana
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FAPOW.cntx_psh();
FAPOW.index('LACZ');
FAPOW.prefix(_a,_b);
_loop:=FAPOW.first();
{!
|? _loop
|!
   FAPOW.AKC:=_c;
   _loop:=FAPOW.put() & FAPOW.next()
!};
FAPOW.cntx_pop()

:Sign Version 2.0 jowisz:1045 2024/02/23 12:33:06 7b8fe5869a7646492c87c46b24edc540642ec64e8b7f66451b7ea6575e3ccd181f4c6a377452943e057f22b5d5edd10c2ac77b3ba365657a5575a10dd316736cb1ba4fbd0a35c866e03e132fec098da1a210d34ddd55918c34dac4fcaf12758f80be1bf6acad6baba506199b549140bb904fc300b991a2710ff124326ba10d6f
