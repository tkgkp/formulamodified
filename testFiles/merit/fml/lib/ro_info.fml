:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: ro_info.fml
:: Utworzony: 17.01.2018
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Formuły informujące o zakresie przetwarzania danych osobowych.
::            Poprzez "dane osobowe" rozumiane są:
::            (na podstawie: https://edugiodo.giodo.gov.pl/file.php/1/REJ/REJ_R06_03.html pkt 7)
::                * Nazwiska i imiona;                * Numer Identyfikacji Podatkowej;
::                * Imiona rodziców;                  * Miejsce pracy;
::                * Data urodzenia;                   * Zawód;
::                * Miejsce urodzenia;                * Wykształcenie;
::                * Adres zamieszkania lub pobytu;    * Seria i numer dowodu osobistego;
::                * Numer ewidencyjny PESEL;          * Numer telefonu.
::======================================================================================================================
:: Plik zawiera formuły:
::    - Jednostkowe, zwracające informacje o zakresie przetwarzania w ramach konkretnej tabeli. Ich nazwy są zgodne
::      z akronimem tabeli.
::    - Nagłówkowe, wywoływane przez silnik, które wynik budują z odpowiednich formuł jednostkowych.
::
:: Do formuł nagłówkowych wywoływanych przez silnik (zawartych w pliku) przekazywany jest jeden argument - tablica
:: elementów nazwanych z następującymi elementami:
::    SRC      - Tablica nazwana (patrz \ref_arg/ro_cfg.fml) z informacją o rekordzie, dla którego ma być określony
::               zakres przetwarzania.
::    RODO     - Obiekt klasy RODO.
::    INFB     - Tabela tymczasowa do umieszczania informacji o zakresie przetwarzania danych.
::    RET      - Tablica nazwana (patrz \ret_val/ro_cfg.fml) do umieszczenia statusu wyszukiwania.
::    APP      - Początkowo ~~. Jeśli formuła ma zwrócić dodatkowe załączniki, to musi to być tablica n-elementowa,
::               gdzie n jest liczbą załączników. W każdej komórce musi być umieszczone wskazanie na strukturę opisującą
::               załącznik (tablicę nazwaną):
::                DATA [TABLE] - alias tabeli tymczasowej zawierającej dane do zapisania
::                NAME [STRING] - nazwa pliku csv (z rozszerzeniem) do którego będą zapisane dane
::                DESC [STRING] - opis załącznika
::               do tworzenia tablicy zaleca się użycie formuły \appendix/ro_req.fml
::    REQT_KEY - Symbol typu żądania: PERSONAL_DATA_INFO, MOVE_DATA_TO_DIGIT, PERSONAL_DATA_REMOVE, ...
::======================================================================================================================


\umprac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.22]
:: OPIS: Formuła nagłówkowa dla umów o pracę.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:  _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('osoba','ro_info',_a,'P');
~~


\umzlec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.22]
:: OPIS: Formuła nagłówkowa dla umów cywilnoprawnych.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:  _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('osoba','ro_info',_a,'Z');
~~


\spadkobierca
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła nagłówkowa dla praw majątkowych.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:  _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('osoba','ro_info',_a,'Z','M');
~~


\kontrakt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła nagłówkowa dla umów kontraktowych.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:  _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('osoba','ro_info',_a,'K');
~~


\rcp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [19.22]
:: OPIS: Formuła nagłówkowa dla osób do ewidencji czasu pracy.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:  _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('osoba','ro_info',_a,'R');
~~


\tymczas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [19.22]
:: OPIS: Formuła nagłówkowa dla umów pracowników tymczasowych.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:  _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('osoba','ro_info',_a,'T');
~~


\osoba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.22]
:: OPIS: Formuła jednostkowa, dla tabeli OSOBA.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:  _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::        _b  [STRING] - Typ obsługiwanej osoby:
::                         P - pracownik;
::                         K - kontraktowiec;
::                         Z - zleceniobiorca;
::                         R - osoba do ewidencji czasu pracy;
::                         T - pracownik tymczasowy.
::       [_c] [STRING] - Dla zleceniobiorców typ umów:
::                         C - umowy cywilnoprawne (bez 'm') [domyślnie];
::                         M - prawa majątkowe - spadek (tylko 'm').
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;
_typ:=_b;
_umz:={? var_pres('_c')=type_of('') & _c='M' || 'M' || 'C' ?};

_INFB:=_arg.INFB;
_RODO:=_arg.RODO;
exec('set_infb','ro_cfg',_INFB,OSOBA);
_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

{? _arg.SRC.TABELA=OSOBA
|| OSOBA.cntx_psh();
   OSOBA.prefix();
   {? OSOBA.seek(_arg.SRC.REF)
   || _ins(_INFB,'[TABELA]','Dane osobowe');
      _ins(_INFB,'Nazwisko',OSOBA.NAZWISKO);
      _ins(_INFB,'Imię',OSOBA.PIERWSZE);
      _ins(_INFB,'Drugie imię',OSOBA.DRUGIE);
      _ins(_INFB,'Imię Matki',OSOBA.MATKA);
      _ins(_INFB,'Imię Ojca',OSOBA.OJCIEC);
      _ins(_INFB,'Data urodzenia',OSOBA.UR_DATA);
      _ins(_INFB,'Miejsce urodzenia',OSOBA.UR_MIEJ);
      _ins(_INFB,'PESEL',OSOBA.PESEL);
      _ins(_INFB,'NIP',OSOBA.NIP);
      _ins(_INFB,'Dowód osobisty',OSOBA.DOWOD);
      {? var_pres('ZAW',OSOBA)=26
      || ZAW.cntx_psh();
         ZAW.prefix();
         _ins(_INFB,'Zawód wyuczony',OSOBA.ZAW().ZD);
         ZAW.cntx_pop()
      ?};
:     załączniki
      {? exec('app4req','ro_req',_arg.REQT_KEY)
      || exec('osoba_zal','ro_info',_arg,_typ,_umz)
      ?}
   ||
      _arg.RET.STATUS:=-1;
      _arg.RET.INFO:=_RODO.msg.noRec(_arg.SRC.TABELA)
   ?};
   OSOBA.cntx_pop()
?};

~~


\osoba_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.22]
:: OPIS: Uzupełenia informacje pozwalające na wygenerowanie załączników z dodatkowymi danymi.
::   WE: _a [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::       _b [STRING] - Typ obsługiwanej osoby:
::                      P - pracownik;
::                      K - kontraktowiec;
::                      Z - zleceniobiorca;
::                      R - osoba do ewidencji czasu pracy;
::                      T - pracownik tymczasowy.
::       _c [STRING] - Dla zleceniobiorców typ umów:
::                         C - umowy cywilnoprawne (bez 'm');
::                         M - prawa majątkowe - spadek (tylko 'm').
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: pozostałe dane w postaci załączników
_arg:=_a;
_typ:=_b;
_umz:=_c;

_arg.APP:=obj_new('OS_ZNIP','H','ZC','P_INFO','P_IPOD','PKO','PB','OS_ADRES','RD','STAZ','OS_SZKOL','WOJ');

{? var_pres('OS_ZNIP')=type_of(OSOBA)
|| _OS_ZNIP:=sql(
      'select OS_ZNIP.OD as "Od daty", OS_ZNIP.DO as "Do daty", '+
         'SLO_KOD.NAZWA as "Rodzaj numeru", KRAJE.NAZ as "Kraj wydania", OS_ZNIP.ZNIP as "Numer" '+
      'from OS_ZNIP left join SLO_KOD using(OS_ZNIP.RZNIP,SLO_KOD.REFERENCE) '+
                   'left join KRAJE using(OS_ZNIP.KRAJZNIP,KRAJE.REFERENCE) '+
      'where OS_ZNIP.OSOBA=:_a '+
      'order by 1, 2',
      OSOBA.ref()
   );
   _arg.APP.OS_ZNIP:=exec('appendix','ro_req',_OS_ZNIP,'znip.csv','Zagraniczny numer identyfikacyjny podatnika')
?};

{? _typ<>'Z'
||
: Przebieg zatrudnienia
   _H:=sql(
      'select P.IP as "Identyfikator pracownika", '+
         'H_UM.OD as "Umowa - od", H_UM.DO as "Umowa - do", H_UM.NUMER as "Numer umowy", RU.O as "Typ umowy", '+
         'H.OD as "Przeszeregowanie od", H.DO as "Przeszeregowanie do", '+
         'STN.ST as "Stanowisko", UD_SKL.OPIS as "Jednostka organizacyjna", '+
         'CP.O as "Charakter pracy" '+
         {? var_pres('MIEJSCE',H)>0
         || ', H.MIEJSCE as "Miejsce pracy"'
         |? var_pres('MIEJSCE',H_UM)>0
         || ', H_UM.MIEJSCE as "Miejsce pracy"'
         || ''
         ?}+
         {? var_pres('INNE',H)>0
         || ', H.INNE as "Inne warunki"'
         |? var_pres('INNE',H_UM)>0
         || ', H_UM.INNE as "Inne warunki"'
         || ''
         ?}+
         {? var_pres('PRZEDST',H)>0
         || ', H.PRZEDST as "Przedstawiciel pracodawcy"'
         |? var_pres('PRZEDST',H_UM)>0
         || ', H_UM.PRZEDST as "Przedstawiciel pracodawcy"'
         || ''
         ?}+
      'from H left join H_UM using(H.UMOWA,H_UM.REFERENCE) '+
         'left join P using(H_UM.P,P.REFERENCE) '+
         'left join RU using(H.RU,RU.REFERENCE) '+
         'left join H_ZM using(H.KZ,H_ZM.REFERENCE) '+
         'left join STN using(H.ST,STN.REFERENCE) '+
         'left join UD_SKL using(H.WYDZIAL,UD_SKL.REFERENCE) '+
         'left join CP using(H.CP,CP.REFERENCE) '+
         'left join SLO as WAL using(H.WAL,WAL.REFERENCE) '+
         {? var_pres('S2P',H)>0 || 'left join FORMULA as S2P using(H.S2P,S2P.REFERENCE) ' || '' ?}+
         {? var_pres('S3P',H)>0 || 'left join FORMULA as S3P using(H.S3P,S3P.REFERENCE) ' || '' ?}+
         {? var_pres('F_ZATR',P)=26 || 'left join F_ZATR using(P.F_ZATR,F_ZATR.REFERENCE) ' || '' ?}+
      'where P.OSOBA=:_a and H_ZM.KZ=\'Z\' '+
         {? var_pres('FIRMA',P)=26 || ' and P.FIRMA=:_b' || '' ?}+
         {? var_pres('F_ZATR',P)=26 || 'and F_ZATR.KOD=\''+_typ+'\' ' || '' ?}+
      'order by 1, 2, 6',
      OSOBA.ref(),REF.FIRMA
   );
   _arg.APP.H:=exec('appendix','ro_req',_H,'przebieg.csv','Przebieg zatrudnienia');

: Dane podatkowe
   _P_IPOD:=sql(
      'select P.IP as "Identyfikator pracownika", P_IPOD.OD as "Od", '+
         'case '+
            'when P_IPOD.KU=\'B\' then \'Brak\' '+
            'when P_IPOD.KU=\'N\' then \'Normalne\' '+
            'when P_IPOD.KU=\'Z\' then \'Zwiększone\' '+
            'else \'?\' '+
         'end as "Koszty uzyskania", '+
         'case '+
            'when P_IPOD.UP=\'B\' then \'Brak\' '+
            'when P_IPOD.UP=\'N\' then \'Normalna\' '+
            'when P_IPOD.UP=\'D\' then \'Dodatkowa\' '+
            'when P_IPOD.UP=\'Z\' then \'Normalna i dodatkowa\' '+
            'else \'?\' '+
         'end as "Ulga podatkowa", '+
         'case '+
            'when P_IPOD.PU=\'1\' then \'1/12 kwoty zmniejszającej podatek\' '+
            'when P_IPOD.PU=\'2\' then \'1/24 kwoty zmniejszającej podatek\' '+
            'when P_IPOD.PU=\'3\' then \'1/36 kwoty zmniejszającej podatek\' '+
            'else \'?\' '+
         'end as "Podział dla ulgi normalnej", '+
         'case '+
            'when P_IPOD.OP=\'T\' then \'Tak\' '+
            'when P_IPOD.OP=\'N\' then \'Nie\' '+
            'else \'?\' '+
         'end as "Obniżony próg" '+
      'from P_IPOD join P using(P_IPOD.P,P.REFERENCE) '+
      'where P.OSOBA=:_a '+
      'order by 1',
      OSOBA.ref()
   );
   _arg.APP.P_IPOD:=exec('appendix','ro_req',_P_IPOD,'p_ipod.csv','Dane podatkowe',1);

: Okres poprzedniego zatrudnienia
   _usp:=var_pres('USPKOD',STAZ)=26;
   _STAZ:=sql(
      'select STAZ.DR as "Data rozpoczęcia", STAZ.DZ as "Data zakończenia", STAZ.F as "Pracodawca", '+
         'STN.ST as "Stanowisko", '+
         {? _usp
         || 'USPKOD.OPIS as "Przyczyna ustania stosunku" '
         || 'ROU.NAZWA as "Sposób rozwiązania umowy" '
         ?}+
      'from STAZ '+
         'left join STN using(STAZ.STN,STN.REFERENCE) '+
         {? _usp
         || 'left join S_ZUS as USPKOD using(STAZ.USPKOD,USPKOD.REFERENCE) '
         || 'left join SLO_NAZ as ROU using(STAZ.ROU,ROU.REFERENCE) '
         ?}+
      'where STAZ.OSOBA=:_a '+{? var_pres('FIRMA',STAZ)=26 || 'and STAZ.FIRMA=:_b ' || '' ?}+
      'order by 1, 2',
      OSOBA.ref(),REF.FIRMA
   );
   _arg.APP.STAZ:=exec('appendix','ro_req',_STAZ,'staz.csv','Okres poprzedniego zatrudnienia',1);

: Dane wojskowe
   _WOJ:=sql(
      'select SLO_NAZ.NAZWA as "Stopień", WOJ.KW as "Nr książeczki", '+
         'WOJ.SP as "Specjalizacja", WOJ.SZ as "Sztab", WOJ.MOB as "Przydział" '+
      'from WOJ left join SLO_NAZ using(WOJ.SW,SLO_NAZ.REFERENCE) '+
      'where WOJ.OSOBA=:_a',
      OSOBA.ref()
   );
   _arg.APP.WOJ:=exec('appendix','ro_req',_WOJ,'wojsko.csv','Dane wojskowe')

|? _typ='Z'
||
: Umowy cywilnoprawne
   _jp:=var_pres('P',ZC)=26;
   _jf:=_jp & var_pres('FIRMA',ZC)=26;
   _ZC:=sql(
      'select '+
         {? _jp || 'P.IP' || 'substr(PRZ.REFERENCE,9,8)' ?}+' as "Identyfikator zleceniobiorcy", '+
         'ZC.DU as "Od dnia", ZC.DW as "Do dnia", ZC.DZ as "Data zawarcia", ZC.NU as "Numer umowy", '+
         'RU.O as "Rodzaj umowy", '+
         'case ZC.TYP '+
            'when \'N\' then \'Ustalona kwota\' '+
            'when \'M\' then \'Miesięczne\' '+
            'when \'G\' then \'Godzinowe\' '+
            'when \'D\' then \'Dzienne\' '+
            'else \'Inny\' '+
         'end as "Rodzaj rozliczenia", '+
         'ZC.TRESC as "Treść umowy", '+
         'ZC.RC as "Podatek zryczałtowany [T/N]?", ZC.PPD as "% podatku", '+
         'TTUB.OPIS as "Tytuł ubezpieczenia", '+
         'PREM.OPIS as "Prawo do emerytury", '+
         'STNP.OPIS as "Niepełnosprawność", '+
         'ZC.ZUS as "Ubezpieczenie emerytalno-rentowe [T/N]", '+
         {? var_pres('WN_ZUS',ZC)>0 || 'ZC.WN_ZUS as "Emeryt.-rent. dobrowolne [T/N]", ' || '' ?}+
         'ZC.FC as "Ubezpieczenie chorobowe [T/N]", '+
         {? var_pres('WN_FC',ZC)>0 || 'ZC.WN_FC as "Chorobowe dobrowolne [T/N]", ' || '' ?}+
         'ZC.FW as "Ubezpieczenie wypadkowe [T/N]", '+
         'ZC.KC as "Ubezpieczenie zdrowotne [T/N]", '+
         'ZC.FP as "Fundusz Pracy [T/N]", '+
         'ZC.FG as "FGŚP", '+
         'ZC.FEP as "FEP" '+
      'from ZC '+
         {? _jp || 'left join P using(ZC.P,P.REFERENCE) ' || 'left join PRZ using(ZC.PRZ,PRZ.REFERENCE) ' ?}+
         'left join RU using(ZC.RU,RU.REFERENCE) '+
         'left join SLO using(ZC.WAL,SLO.REFERENCE) '+
         'left join S_ZUS TTUB using(ZC.TTUB,TTUB.REFERENCE) '+
         'left join S_ZUS PREM using(ZC.PREM,PREM.REFERENCE) '+
         'left join S_ZUS STNP using(ZC.STNP,STNP.REFERENCE) '+
      'where ZC.OSOBA=:_a '+{? _jf || 'and P.FIRMA=:_b ' || '' ?}+
         'and RU.K'+{? _umz='M' || '=' || '<>' ?}+'\'m\' '+
      'order by 1, 2',
      OSOBA.ref(),REF.FIRMA
   );
   _arg.APP.ZC:=exec('appendix','ro_req',_ZC,'zlecenia.csv','Umowy cywilnoprawne')
?};

: Wykształcenie
_OS_SZKOL:=sql(
   'select OS_SZKOL.OD as "Od", OS_SZKOL.DO as "Do", RODZAJ.NAZWA as "Typ szkoły", ADRES.NAZWA as "Nazwa szkoły", '+
      'OS_SZKOL.WYDZIAL as "Wydział", OS_SZKOL.KIERUNEK as "Kierunek", OS_SZKOL.SPEC as "Specjalność", '+
      'WYK.WK as "Wykształcenie" '+
      {? var_pres('TYTULZ',OS_SZKOL)=26 || ',TYTULZ.NAZWA as "Tytuł zawodowy" ' || '' ?}+
      {? var_pres('DZTZ',OS_SZKOL)=26 || ',DZTZ.NAZWA as "Dziedzina uzyskania tytułu zawodowego" ' || '' ?}+
      {? var_pres('ZAW',OS_SZKOL)=26 || ', ZAW.ZD as "Zawód wyuczony"' || '' ?}+
   'from OS_SZKOL '+
      'left join SLO_NAZ as RODZAJ using(OS_SZKOL.RODZAJ,RODZAJ.REFERENCE) '+
      'left join ADRES using(OS_SZKOL.SZKOLA,ADRES.REFERENCE) '+
      'left join WYK using(OS_SZKOL.WYK,WYK.REFERENCE) '+
      {? var_pres('TYTULZ',OS_SZKOL)=26
      || 'left join SLO_NAZ as TYTULZ using(OS_SZKOL.TYTULZ,TYTULZ.REFERENCE) '
      || ''
      ?}+
      {? var_pres('DZTZ',OS_SZKOL)=26 || 'left join SLO_NAZ as DZTZ using(OS_SZKOL.DZTZ,DZTZ.REFERENCE) ' || '' ?}+
      {? var_pres('ZAW',OS_SZKOL)=26 || 'left join ZAW using(OS_SZKOL.ZAW,ZAW.REFERENCE) ' || '' ?}+
   'where OS_SZKOL.OSOBA=:_a',
   OSOBA.ref()
);
_arg.APP.OS_SZKOL:=exec('appendix','ro_req',_OS_SZKOL,'szkola.csv','Wykształcenie obejmujące ukończone szkoły',1);

: Członkowie rodziny
_RD:=sql(
   'select '+
      'RD.NA as "Nazwisko" '+
      {? var_pres('RODOWE',RD)>0 || ', RD.RODOWE as "Nazwisko rodowe" ' || '' ?}+
      ', RD.IM as "Imię", RD.IMD as "Drugie imię", RD.PESEL, RD.DA as "Data urodzenia" '+
      {? var_pres('UR_MIEJ',RD)>0 || ', RD.UR_MIEJ as "Miejsce urodzenia" ' || '' ?}+
      ', STPK.OPIS as "Stopień pokrewieństwa" '+
      {? var_pres('OJCIEC',RD)>0 || ', RD.OJCIEC as "Imię Ojca" ' || '' ?}+
      {? var_pres('OJCIECN',RD)>0 || ', RD.OJCIECN as "Nazwisko Ojca" ' || '' ?}+
      {? var_pres('MATKA',RD)>0 || ', RD.MATKA as "Imię Matki" ' || '' ?}+
      {? var_pres('NIP',RD)>0 || ', RD.NIP ' || '' ?}+
      {? var_pres('DOWOD',RD)>0 || ', RD.DOWOD as "Numer dowodu osobistego" ' || '' ?}+
      {? var_pres('PASZPORT',RD)>0 || ', RD.PASZPORT as "Numer paszportu" ' || '' ?}+
      {? var_pres('ADRINNY',RD)>0
      || {? var_pres('KRAJ',RD)=26 || ', case when RD.ADRINNY=\'T\' then KRAJE.NAZ else \'\' end as "Kraj" ' || '' ?}+
         {? var_pres('KOD',RD)>0
         || ', case when RD.ADRINNY=\'T\' then RD.KOD else \'\' end as "Kod pocztowy" '
         || ''
         ?}+
         {? var_pres('POCZTA',RD)>0
         || ', case when RD.ADRINNY=\'T\' then RD.POCZTA else \'\' end as "Poczta" '
         || ''
         ?}+
         {? var_pres('MIASTO',RD)>0
         || ', case when RD.ADRINNY=\'T\' then RD.MIASTO else \'\' end as "Miejscowość" '
         || ''
         ?}+
         {? var_pres('GMINA',RD)>0 || ', case when RD.ADRINNY=\'T\' then RD.GMINA else \'\' end as "Gmina" ' || '' ?}+
         {? var_pres('ULICA',RD)>0 || ', case when RD.ADRINNY=\'T\' then RD.ULICA else \'\' end as "Ulica" ' || '' ?}+
         {? var_pres('DOM',RD)>0 || ', case when RD.ADRINNY=\'T\' then RD.DOM else \'\' end as "Nr domu" ' || '' ?}+
         {? var_pres('LOKAL',RD)>0
         || ', case when RD.ADRINNY=\'T\' then RD.LOKAL else \'\' end as "Nr lokalu" '
         || ''
         ?}+
         {? var_pres('TEL',RD)>0 || ', case when RD.ADRINNY=\'T\' then RD.TEL else \'\' end as "Nr telefonu" ' || '' ?}
      || ''
      ?}+
   'from RD left join S_ZUS as STPK using(RD.STPK,STPK.REFERENCE) '+
      {? var_pres('KRAJ',RD)>0 || 'left join KRAJE using(RD.KRAJ,KRAJE.REFERENCE) ' || '' ?}+
   'where RD.OSOBA=:_a '+
   'order by 5, 1, 2, 3',
   OSOBA.ref()
);
_arg.APP.RD:=exec('appendix','ro_req',_RD,'rodzina.csv','Członkowie rodziny');

: Informacje ubezpieczeniowe
_P_INFO:=sql(
   'select P_INFO.OD as "Od dnia", '+
      'ADRES.NAZWA as "Fundusz Ochrony Zdrowia", P_INFO.DTUM as "Data umowy z FOZ", '+
      'TPID.OPIS as "Typ identyfikatora", '+
      'TTUB.OPIS as "Tytuł ubezpieczenia", '+
      'PREM.OPIS as "Prawo do emerytury", '+
      'STNP.OPIS as "Niepełnosprawność", '+
      'NZPR.OPIS as "Niezdolność do pracy", '+
      'P_INFO.STNP_OD as "Niepełnosprawność - od dnia", '+
      'P_INFO.STNP_DO as "Niepełnosprawność - do dnia", '+
      'P_INFO.SZCZNIEP as "Szczególne schorzenie", '+
      'P_INFO.ORZECZ as "Orzecznik", '+
      'SZCZKOD.OPIS as "Kod pracy w szczególnych warunkach", '+
      'P_INFO.SZCZOD as "Praca w szczególnych warunkach - od", '+
      'P_INFO.SZCZDO as "Praca w szczególnych warunkach - do" '+
   'from P_INFO '+
      'left join ADRES using(P_INFO.KC,ADRES.REFERENCE) '+
      'left join S_ZUS as TPID using(P_INFO.TPID,TPID.REFERENCE) '+
      'left join S_ZUS as TTUB using(P_INFO.TTUB,TTUB.REFERENCE) '+
      'left join S_ZUS as PREM using(P_INFO.PREM,PREM.REFERENCE) '+
      'left join S_ZUS as STNP using(P_INFO.STNP,STNP.REFERENCE) '+
      'left join S_ZUS as NZPR using(P_INFO.NZPR,NZPR.REFERENCE) '+
      'left join S_ZUS as SZCZKOD using(P_INFO.SZCZKOD,SZCZKOD.REFERENCE) '+
   'where P_INFO.OSOBA=:_a '+{? var_pres('FIRMA',P_INFO)=26 || 'and P_INFO.FIRMA=:_b ' || '' ?}+
   'order by 1',
   OSOBA.ref(),REF.FIRMA
);
_arg.APP.P_INFO:=exec('appendix','ro_req',_P_INFO,'p_info.csv','Informacje ubezpieczeniowe');

: Rachunki bankowe
_PKO:=sql(
   'select PKO.N as "Numer rachunku", B.NB as "Nazwa banku" '+
   'from PKO join B using(PKO.BA,B.REFERENCE) '+
   'where PKO.OSOBA=:_a '+
   'order by 1',
   OSOBA.ref()
);
_arg.APP.PKO:=exec('appendix','ro_req',_PKO,'rachunki.csv','Rachunki bankowe');

: Przelewy bankowe
_kda:=spli_str({? _typ='Z' || 'KALI: umowa|PPL: Umowy' || 'KALI: płace|PPL: Płace' ?},'|');
_kdw:='';
{! _lp:=1 .. obj_len(_kda)
|! _kdw+='PB.KD like \''+_kda[_lp]+'%\' or '
!};
{? _kdw<>''
|| _kdw:='and ('+(_kdw-4)+')'
?};

_PB:=sql(
   'select PB.W as "Nazwa wierzyciela", PB.RW as "Rachunek wierzyciela", '+
      'PB.KP as "Kod pocztowy", PB.M as "Miejscowość", PB.UL as "Ulica", '+
      'PB.DP as "Data przelewu", PB.TYT as "Tytuł przelewu" '+
   'from @PB '+
   'where PB.OSOBA=:_a '+_kdw,
   OSOBA.ref()
);
_arg.APP.PB:=exec('appendix','ro_req',_PB,'przelewy.csv','Przelewy');

: Adresy
_OS_ADRES:=sql(
   'select OS_ADRES.OD as "Od", OS_ADRES.DO as "Do", '+
      'case OS_ADRES.RODZAJ '+
         'when \'S\' then \'Adres zameldowania\' '+
         'when \'C\' then \'Adres zamieszkania\' '+
         'when \'K\' then \'Adres do korespondencji\' '+
         'when \'I\' then \'Inny\' '+
         'else \'Nieokreślony\' '+
      'end as "Typ adresu", '+
      'KRAJE.NAZ as "Kraj", '+
      'OS_ADRES.WOJEWODZ as "Województwo", OS_ADRES.POWIAT as "Powiat", OS_ADRES.GMINA as "Gmina", '+
      'OS_ADRES.KOD as "Kod pocztowy", OS_ADRES.POCZTA as "Poczta", OS_ADRES.MIASTO as "Miejscowość", '+
      'OS_ADRES.ULICA as "Ulica", OS_ADRES.DOM as "Nr domu", OS_ADRES.LOKAL as "Nr lokalu / mieszkania", '+
      'OS_ADRES.TEL as "Nr telefonu", OS_ADRES.EMAIL as "E-mail" '+
   'from OS_ADRES left join KRAJE using(OS_ADRES.KRAJ,KRAJE.REFERENCE) '+
   'where OS_ADRES.OSOBA=:_a '+
   'order by 1',
   OSOBA.ref()
);
_arg.APP.OS_ADRES:=exec('appendix','ro_req',_OS_ADRES,'adresy.csv','Adresy');

~~


\os_adres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.22]
:: OPIS: Formuła jednostkowa, dla tabeli OSOBA.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:   _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;

_INFB:=_arg.INFB;
_RODO:=_arg.RODO;
exec('set_infb','ro_cfg',_INFB,OS_ADRES);
_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

{? _arg.SRC.TABELA=OSOBA
|| OS_ADRES.cntx_psh();
   OS_ADRES.prefix();
   OS_ADRES.f_set('OSOBA,OD',,'"OS_ADRES".OSOBA=:_a',_arg.SRC.REF);
   {? OS_ADRES.f_first()
   || KRAJE.cntx_psh();
      KRAJE.prefix();
      {!
      |? _kat:=
            {? OS_ADRES.RODZAJ='S'
            || 'Adres pobytu stałego'
            |? OS_ADRES.RODZAJ='C'
            || 'Adres zamieszkania'
            |? OS_ADRES.RODZAJ='K'
            || 'Adres do korespondencji'
            || 'Adres'
            ?};
         _ins(_INFB,'[TABELA]',_kat);
         _ins(_INFB,'Obowiązuje od',OS_ADRES.OD);
         _ins(_INFB,'Obowiązuje do',OS_ADRES.DO);
         _ins(_INFB,'Kraj',OS_ADRES.KRAJ().SYM);
         _ins(_INFB,'Województwo',OS_ADRES.WOJEWODZ);
         _ins(_INFB,'Powiat',OS_ADRES.POWIAT);
         _ins(_INFB,'Gmina',OS_ADRES.GMINA);
         _ins(_INFB,'Kod pocztowy',OS_ADRES.KOD);
         _ins(_INFB,'Poczta',OS_ADRES.POCZTA);
         _ins(_INFB,'Miasto',OS_ADRES.MIASTO);
         _ins(_INFB,'Ulica',OS_ADRES.ULICA);
         _ins(_INFB,'Dom',OS_ADRES.DOM);
         _ins(_INFB,'Lokal',OS_ADRES.LOKAL);
         _ins(_INFB,'Telefon',OS_ADRES.TEL);
         _ins(_INFB,'E-mail',OS_ADRES.EMAIL);
         OS_ADRES.f_next()
      !};
      KRAJE.cntx_pop()
   ?};
   OS_ADRES.f_clear();
   OS_ADRES.cntx_pop()
?};
~~


\rd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.22]
:: OPIS: Formuła jednostkowa, dla tabeli OSOBA.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:   _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;

_INFB:=_arg.INFB;
_RODO:=_arg.RODO;
exec('set_infb','ro_cfg',_INFB,RD);
_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

{? _arg.SRC.TABELA=RD
|| RD.cntx_psh();
   RD.prefix();
   {? RD.seek(_arg.SRC.REF)
   || _ins(_INFB,'[TABELA]','Członek rodziny');
      _ins(_INFB,'Nazwisko',RD.NA);
      _ins(_INFB,'Imię',RD.IM);
      _ins(_INFB,'Drugie imię',RD.IMD);
      {? var_pres('MATKA',RD)=27
      || _ins(_INFB,'Imię Matki',RD.MATKA)
      ?};
      {? var_pres('OJCIEC',RD)=27
      || _ins(_INFB,'Imię Ojca',RD.OJCIEC)
      ?};
      _ins(_INFB,'Data urodzenia',RD.DA);
      {? var_pres('UR_MIEJ',RD)=27
      || _ins(_INFB,'Miejsce urodzenia',RD.UR_MIEJ)
      ?};
      _ins(_INFB,'PESEL',RD.PESEL);
      {? var_pres('NIP',RD)=27
      || _ins(_INFB,'NIP',RD.NIP)
      ?};
      {? var_pres('DOWOD',RD)=27
      || _ins(_INFB,'Dowód osobisty',RD.DOWOD)
      ?};
      {? var_pres('ADRINNY',RD)=27 & RD.ADRINNY='T'
      || KRAJE.cntx_psh();
         KRAJE.prefix();
         _ins(_INFB,'[TABELA]','Adres członka rodziny');
         _ins(_INFB,'Kraj',RD.KRAJ().SYM);
         _ins(_INFB,'Gmina',RD.GMINA);
         _ins(_INFB,'Kod pocztowy',RD.KOD);
         _ins(_INFB,'Poczta',RD.POCZTA);
         _ins(_INFB,'Miasto',RD.MIASTO);
         _ins(_INFB,'Ulica',RD.ULICA);
         _ins(_INFB,'Dom',RD.DOM);
         _ins(_INFB,'Lokal',RD.LOKAL);
         _ins(_INFB,'Telefon',RD.TEL);
         KRAJE.cntx_pop()
      ?}
   ||
      _arg.RET.STATUS:=-1;
      _arg.RET.INFO:=_RODO.msg.noRec(_arg.SRC.TABELA)
   ?};
   RD.cntx_pop()

|? _arg.SRC.TABELA=OSOBA
|| RD.cntx_psh();
   RD.prefix();
   RD.f_set('OSOBA,DA',,'"RD".OSOBA=:_a',_arg.SRC.REF);
   {? RD.f_first()
   || _SRC:=_arg.SRC;
      obj_del(_arg.SRC);
      {!
      |? _arg.SRC:=exec('ref_arg','ro_cfg',RD,$RD.ref());
         exec('rd','ro_info',_arg);
         obj_del(_arg.SRC);
         RD.f_next()
      !};
      _arg.SRC:=_SRC
   ?};
   RD.f_clear();
   RD.cntx_pop()
?};
~~


\os_szkol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.22]
:: OPIS: Formuła jednostkowa, dla tabeli OSOBA.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:   _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;

_INFB:=_arg.INFB;
_RODO:=_arg.RODO;
exec('set_infb','ro_cfg',_INFB,OS_SZKOL);
_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

{? _arg.SRC.TABELA=OSOBA
|| OS_SZKOL.cntx_psh();
   OS_SZKOL.prefix();
   OS_SZKOL.f_set('OSOBA,OD',,'"OS_SZKOL".OSOBA=:_a',_arg.SRC.REF);
   {? OS_SZKOL.f_first()
   || SLO_NAZ.cntx_psh();
      SLO_NAZ.prefix();
      ADRES.cntx_psh();
      ADRES.prefix();
      WYK.cntx_psh();
      WYK.prefix();
      {!
      |? _ins(_INFB,'[TABELA]','Ukończona szkoła');
         _ins(_INFB,'Od',OS_SZKOL.OD);
         _ins(_INFB,'Od',OS_SZKOL.DO);
         _ins(_INFB,'Typ szkoły',OS_SZKOL.RODZAJ().NAZWA);
         _ins(_INFB,'Nazwa szkoły',OS_SZKOL.SZKOLA().NAZWA);
         _ins(_INFB,'Wykształcenie',OS_SZKOL.WYK().WK);
         {? var_pres('ZAW',OS_SZKOL)=26
         || ZAW.cntx_psh();
            ZAW.prefix();
            _ins(_INFB,'Zawód wyuczony',OS_SZKOL.ZAW().ZD);
            ZAW.cntx_pop()
         ?};
         OS_SZKOL.f_next()
      !};
      WYK.cntx_pop();
      ADRES.cntx_pop();
      SLO_NAZ.cntx_pop()
   ?};
   OS_SZKOL.f_clear();
   OS_SZKOL.cntx_pop()
?};
~~


\rp7_os
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.22]
:: OPIS: Formuła jednostkowa, dla tabeli RP7_OS.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:   _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;

_INFB:=_arg.INFB;
_RODO:=_arg.RODO;
exec('set_infb','ro_cfg',_INFB,RP7_OS);
_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

{? _arg.SRC.TABELA=RP7_OS
|| RP7_OS.cntx_psh();
   RP7_OS.prefix();
   {? RP7_OS.seek(_arg.SRC.REF)
   || _ins(_INFB,'[TABELA]','Dane osobowe (RP7)');
      _ins(_INFB,'Nazwisko',RP7_OS.NAZWISKO);
      _ins(_INFB,'Imię',RP7_OS.PIERWSZE);
      _ins(_INFB,'Drugie imię',RP7_OS.DRUGIE);
      _ins(_INFB,'Imię Matki',RP7_OS.MATKA);
      _ins(_INFB,'Imię Ojca',RP7_OS.OJCIEC);
      _ins(_INFB,'Data urodzenia',RP7_OS.UR_DATA);
      _ins(_INFB,'Miejsce urodzenia',RP7_OS.UR_MIEJ);
      _ins(_INFB,'PESEL',RP7_OS.PESEL);
      _ins(_INFB,'NIP',RP7_OS.NIP);
      _ins(_INFB,'Dowód osobisty',RP7_OS.DOWOD);
      _ins(_INFB,'Paszport',RP7_OS.PASZPORT);
      _ins(_INFB,'[TABELA]','Adres (RP7)');
      _ins(_INFB,'Województwo',RP7_OS.WOJEWODZ);
      _ins(_INFB,'Powiat',RP7_OS.POWIAT);
      _ins(_INFB,'Gmina',RP7_OS.GMINA);
      _ins(_INFB,'Kod pocztowy',RP7_OS.KOD);
      _ins(_INFB,'Poczta',RP7_OS.POCZTA);
      _ins(_INFB,'Miasto',RP7_OS.MIASTO);
      _ins(_INFB,'Ulisa',RP7_OS.ULICA);
      _ins(_INFB,'Dom',RP7_OS.DOM);
      _ins(_INFB,'Lokal',RP7_OS.LOKAL);
      _ins(_INFB,'Telefon',RP7_OS.TEL)
   ||
      _arg.RET.STATUS:=-1;
      _arg.RET.INFO:=_RODO.msg.noRec(_arg.SRC.TABELA)
   ?};
   RP7_OS.cntx_pop()
?};
~~


\szk_tren
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.22]
:: OPIS: Formuła jednostkowa, dla tabeli RP7_OS.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:   _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;

_INFB:=_arg.INFB;
_RODO:=_arg.RODO;
exec('set_infb','ro_cfg',_INFB,SZK_TREN);
_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

{? _arg.SRC.TABELA=SZK_TREN
|| SZK_TREN.cntx_psh();
   SZK_TREN.prefix();
   {? SZK_TREN.seek(_arg.SRC.REF)
   || ZZ_OSOBA.cntx_psh();
      ZZ_OSOBA.prefix();
      {? SZK_TREN.ZZ_OSOBA().get()
      || _ins(_INFB,'[TABELA]','Trener');
         _ins(_INFB,'Nazwisko',ZZ_OSOBA.NAZWISKO);
         _ins(_INFB,'Imię',ZZ_OSOBA.PIERWSZE);
         _ins(_INFB,'Drugie imię',ZZ_OSOBA.DRUGIE);
         _ins(_INFB,'PESEL',ZZ_OSOBA.PESEL)
      ?};
      ZZ_OSOBA.cntx_pop()
   ||
      _arg.RET.STATUS:=-1;
      _arg.RET.INFO:=_RODO.msg.noRec(_arg.SRC.TABELA)
   ?};
   SZK_TREN.cntx_pop()
?};
~~


\adres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.22]
:: OPIS: Formuła jednostkowa, dla tabeli ADRES.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:   _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;

_INFB:=_arg.INFB;
_RODO:=_arg.RODO;
exec('set_infb','ro_cfg',_INFB,ADRES);
_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

{? _arg.SRC.TABELA=ADRES
|| ADRES.cntx_psh();
   ADRES.prefix();
   {? ADRES.seek(_arg.SRC.REF)
   || _ins(_INFB,'[TABELA]','Wierzyciel');
      _arr:=spli_str(ADRES.NAZWA,' ');
      _len:=obj_len(_arr);
      _ins(_INFB,'Nazwisko',_arr[1]);
      {? _len>1
      || _ins(_INFB,'Imię',_arr[2])
      ?};
      {? _len>2
      || _ins(_INFB,'Drugie imię',_arr[3])
      ?};
      obj_del(_arr);
      _ins(_INFB,'Kod pocztowy',ADRES.KOD_POCZ);
      _ins(_INFB,'Poczta',ADRES.POCZTA);
      _ins(_INFB,'Miasto',ADRES.MIASTO);
      _ins(_INFB,'Ulica',ADRES.ULICA);
      _ins(_INFB,'Dom',ADRES.DOM);
      _ins(_INFB,'Lokal',ADRES.LOKAL);
      _ins(_INFB,'Telefon',ADRES.TEL);
      _ins(_INFB,'Faks',ADRES.FAX);
      _ins(_INFB,'Email',ADRES.EMAIL)

   || _arg.RET.STATUS:=-1;
      _arg.RET.INFO:=_RODO.msg.noRec(_arg.SRC.TABELA)
   ?};
   ADRES.cntx_pop()
?};

~~


\rp_osoba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.22]
:: OPIS: Formuła jednostkowa, dla tabeli RP7_OS.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:   _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;

_INFB:=_arg.INFB;
_RODO:=_arg.RODO;
exec('set_infb','ro_cfg',_INFB,RP_OSOBA);
_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

{? _arg.SRC.TABELA=RP_OSOBA
|| RP_OSOBA.cntx_psh();
   RP_OSOBA.prefix();
   {? RP_OSOBA.seek(_arg.SRC.REF)
   || _ins(_INFB,'[TABELA]','Dane osobowe kandydata');
      _ins(_INFB,'Nazwisko',RP_OSOBA.NAZWISKO);
      _ins(_INFB,'Imię',RP_OSOBA.PIERWSZE);
      _ins(_INFB,'Drugie imię',RP_OSOBA.DRUGIE);
      _ins(_INFB,'Data urodzenia',RP_OSOBA.DATA_UR);
      _ins(_INFB,'Kod pocztowy',RP_OSOBA.KOD);
      _ins(_INFB,'Miasto',RP_OSOBA.MIASTO);
      _ins(_INFB,'Ulica',RP_OSOBA.ULICA);
      _ins(_INFB,'Dom',RP_OSOBA.DOM);
      _ins(_INFB,'Lokal',RP_OSOBA.LOKAL);
      _ins(_INFB,'Telefon',RP_OSOBA.TEL);
      _ins(_INFB,'Email',RP_OSOBA.EMAIL);
      WYK.cntx_psh();
      WYK.prefix();
::    _ins(_INFB,'Wykształcenie',RP_OSOBA.WYK().WK);
      WYK.cntx_pop()
   ||
      _arg.RET.STATUS:=-1;
      _arg.RET.INFO:=_RODO.msg.noRec(_arg.SRC.TABELA)
   ?};
   RP_OSOBA.cntx_pop()
?};
~~


\kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.22]
:: OPIS: Formuła jednostkowa, dla tabeli danych kontrahenta.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE: _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::       _b - Tablica parametryzacji
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_param:={? var_pres('_b')=type_of(obj_new('obj')) || _b || exec('param','ro_info') ?};
exec('kontrah','ro_info',_a,_param);
exec('os_adres','ro_info',_a)


\kontrah
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.22]
:: OPIS: Formuła jednostkowa, dla tabeli KH.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE: _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::       _b - Tablica parametryzacji
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;
_param:=_b;

_INFB:=_arg.INFB;
_RODO:=_arg.RODO;
exec('set_infb','ro_cfg',_INFB,KH);
_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

{? _arg.SRC.TABELA=KH
|| KH.cntx_psh(); KH.prefix();
   {? KH.seek(_arg.SRC.REF)
   || _ins(_INFB,'[TABELA]','Dane osobowe');
      _ins(_INFB,'Nazwa pełna',KH.NAZ_P);
      _ins(_INFB,'PESEL',KH.PESEL);
      _ins(_INFB,'NIP',KH.NIP);
      NIPY.cntx_psh();
      NIPY.index('SNIP');
      NIPY.prefix(KH.ref());
      {? NIPY.first()
      || SLO.cntx_psh();
         SLO.prefix();
         {!
         |? {? NIPY.KRAJ().KOD<>'PL'
            || _ins(_INFB,'NIP'+' '+NIPY.KRAJ().KOD,NIPY.KRAJ().KOD+' '+NIPY.NIP)
            ?};
            NIPY.next()
         !};
         SLO.cntx_pop()
      ?};
      NIPY.cntx_pop();
      _ins(_INFB,'REGON',KH.REG);
      _ins(_INFB,'Dowód tożsamości',KH.SN_DT);
      _ins(_INFB,'Siedziba - kraj',KH.KRAJ);
      _ins(_INFB,'Siedziba - miasto',KH.MIASTO);
      _ins(_INFB,'Siedziba - ulica',KH.UL);
      _ins(_INFB,'Siedziba - kod pocztowy',KH.KPOCZ);
      _ins(_INFB,'Siedziba - poczta',KH.POCZ);
      _ins(_INFB,'E-mail',KH.EM);
      _ins(_INFB,'Strona www',KH.WWW);
      _ins(_INFB,'Telefon 1',KH.TEL);
      _ins(_INFB,'Telefon 2',KH.TX);
      _ins(_INFB,'Fax',KH.FAX);
      SKID_RBK.cntx_psh(); SKID_RBK.index('TAB');
      {? var_pres('FIRMA',SKID_RBK)>0
      || SKID_RBK.prefix(REF.FIRMA,'KH','KH',#KH.ref())
      || SKID_RBK.prefix('KH','KH',#KH.ref())
      ?};
      {? SKID_RBK.first()
      || {! |?
            _ins(_INFB,'Rachunek bankowy',SKID_RBK.N);
            SKID_RBK.next()
         !}
      ?};
      SKID_RBK.cntx_pop();
      _ins(_INFB,'Status kontrahenta',KH.POPIS);

::    pozostałe załączniki kontrahenta
      {? exec('app4req','ro_req',_arg.REQT_KEY)
      || exec('kontrah_zal','ro_info',_arg,_param)
      ?};
      ~~
   ||
      _arg.RET.STATUS:=-1;
      _arg.RET.INFO:=_RODO.msg.noRec(_arg.SRC.TABELA)
   ?};
   KH.cntx_pop()
?};
~~


\kontrah_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Dodatkowe załączniki dla kontrahenta
::   WE: _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::       _b - Tablica parametryzacji
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
exec('zal','ro_info',_a,KH,_b)


\zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.22]
:: OPIS: Dodatkowe załączniki dla rekordu w buforze tabeli _b
::   WE: _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::       _b - uchwyt do tabeli
::       _c - Tablica parametryzacji
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;
_Tab2tl:=_b;
_param:=_c;

_arg.APP:=obj_new( 'FAKSS'
                  ,'FAKSZ'
                  ,'KH_MSC'
                  ,'KH_ODB'
                  ,'ND'
                  ,'SKID_RBK'
                  ,'OS_ADRES'
                  ,'DOK'
                  ,'EDOKUM'
                  ,'OFE'
                  ,'ZD_NAG'
                  ,'ZK_N'
                  ,'PW'
                  ,'ZL'
                  ,'PROJEKTY'
                  ,'KPO'
                  );

_FAKSS:=tab_tmp(3
   ,'DW'       ,'DATE'        ,'Data wystawienia'
   ,'SYM'      ,'STRING[20]'  ,'Symbol'
   ,'IND'      ,'STRING[100]' ,'Towar/Usługa'
   ,'IL'       ,'REAL'        ,'Ilość'
   ,'JM'       ,'STRING[100]' ,'jm'
);

_FAKSZ:=tab_tmp(3
   ,'DW'       ,'DATE'        ,'Data wystawienia'
   ,'SYM'      ,'STRING[20]'  ,'Symbol'
   ,'IND'      ,'STRING[100]' ,'Towar/Usługa'
   ,'IL'       ,'REAL'        ,'Ilość'
   ,'JM'       ,'STRING[100]' ,'jm'
);

_KH_MSC:=tab_tmp(3,
   'NAZ'    ,'STRING[150]' ,'Nazwa'
   ,'OS'    ,'STRING[30]'  ,'Osoba kontaktowa'
   ,'TEL'   ,'STRING[60]'  ,'Telefon'
   ,'EMAIL' ,'STRING[60]'  ,'E-mail'
   ,'KPOCZ' ,'STRING[9]'   ,'Kod pocztowy'
   ,'MIASTO','STRING[30]'  ,'Miasto'
   ,'UL'    ,'STRING[150]' ,'Ulica'
);

_KH_ODB:=tab_tmp(3,
   'NAZ'    ,'STRING[150]','Nazwa'
   ,'NIP'   ,'STRING[100]','NIP'
   ,'NRD'   ,'STRING[100]','Nr dowodu tożsamości'
   ,'EM'    ,'STRING[100]','E-mail'
   ,'KPOCZ' ,'STRING[100]','Kod pocztowy'
   ,'MIASTO','STRING[100]','Miasto'
   ,'UL'    ,'STRING[150]','Ulica'
   ,'DOM'   ,'STRING[150]','Dom'
   ,'LOKAL' ,'STRING[150]','Lokal'
);

_KPO:=tab_tmp(3
   ,'R'        ,'STRING[4]'   ,'Rok'
   ,'M'        ,'STRING[2]'   ,'Miesiąc'
   ,'SYM'      ,'STRING[20]'  ,'Symbol'
   ,'ODP'      ,'STRING[6]'   ,'Rodzaj odpadu'
   ,'MASA'     ,'REAL'        ,'Masa'
);

_ND:=tab_tmp(3
   ,'DW'       ,'DATE'        ,'Data wystawienia'
   ,'TYP'      ,'STRING[71]'  ,'Rodzaj dokumentu'
   ,'SYM'      ,'STRING[20]'  ,'Symbol'
   ,'IND'      ,'STRING[100]' ,'Towar/Usługa'
   ,'IL'       ,'REAL'        ,'Ilość'
   ,'JM'       ,'STRING[100]' ,'jm'
);

_SKID_RBK:=tab_tmp(1,
   'N'       ,'STRING[50]','Nr rachunku'
   ,'BANK'   ,'STRING[100]','Bank'
   ,'WALUTA' ,'STRING[100]','Waluta'
);

_OS_ADRES:=tab_tmp(1,
   'TEL'     ,'STRING[15]','Telefon'
   ,'EMAIL'  ,'STRING[100]','E-mail'
   ,'KOD'    ,'STRING[100]','Kod pocztowy'
   ,'MIASTO' ,'STRING[100]','Miasto'
   ,'ULICA'  ,'STRING[150]','Ulica'
   ,'DOM'    ,'STRING[100]','Nr domu'
   ,'LOKAL'  ,'STRING[100]','Nr lokalu'
);

_OFE:=tab_tmp(3
   ,'DW'       ,'DATE'        ,'Data'
   ,'SYM'      ,'STRING[20]'  ,'Symbol'
   ,'IND'      ,'STRING[100]' ,'Towar/Usługa'
   ,'IL'       ,'REAL'        ,'Ilość'
   ,'JM'       ,'STRING[100]' ,'jm'
);

_ZD_NAG:=tab_tmp(3
   ,'DW'       ,'DATE'        ,'Data'
   ,'SYM'      ,'STRING[20]'  ,'Symbol'
   ,'IND'      ,'STRING[100]' ,'Towar/Usługa'
   ,'IL'       ,'REAL'        ,'Ilość'
   ,'JM'       ,'STRING[100]' ,'jm'
);

_ZK_N:=tab_tmp(3
   ,'DW'       ,'DATE'        ,'Data'
   ,'SYM'      ,'STRING[20]'  ,'Symbol'
   ,'IND'      ,'STRING[100]' ,'Towar/Usługa'
   ,'IL'       ,'REAL'        ,'Ilość'
   ,'JM'       ,'STRING[100]' ,'jm'
);

_PW:=tab_tmp(1,
   'NRP','INTEGER','Nr pozycji wyciągu',
   'DK','DATE','Data księgowania',
   'RBK','STRING[50]','Rachunek bankowy kontrahenta',
   'TYTOP','STRING[162]','Tytuł'
);

_ZL:=tab_tmp(2
   ,'OD'       ,'DATE'        ,'Data'
   ,'SYM'      ,'STRING[20]'  ,'Symbol'
   ,'OPIS'     ,'STRING[255]' ,'Opis'
);

_PROJ:=tab_tmp(2
   ,'OD'       ,'DATE'        ,'Data'
   ,'SYM'      ,'STRING[20]'  ,'Symbol'
   ,'DZ'       ,'DATE'        ,'Data'
);


_DOK:=tab_tmp(1,
      'DTO','DATE','Data wystawienia',
      'NK','STRING[20]','Symbol dokumentu',
      'OKRESV','STRING[20]','Okres rozliczenia VAT',
      'KH','STRING[150]','Nazwa',
      'NIP','STRING[15]','NIP',
      'MIASTO','STRING[30]','Miasto',
      'UL','STRING[150]','Ulica',
      'POCZ','STRING[40]','Poczta',
      'D3','STRING[10]','Termin płatności'
   );


_EDOKUM:=tab_tmp(1,
   'DW','DATE','Data wystawienia',
   'SYM','STRING[35]','Symbol dokumentu',
   'KH','STRING[150]','Nazwa',
   'NIP','STRING[15]','NIP',
   'MIASTO','STRING[30]','Miasto',
   'UL','STRING[150]','Ulica',
   'POCZ','STRING[40]','Poczta',
   'TR','STRING[80]','Opis',
   'TP','DATE','Termin płatności'
);

:: Dane połaczone relacyjnie wyciągamy za pomocą testlink()
{? _Tab2tl.count()
||
   _Tl:=_Tab2tl.testlink(,_Tab2tl.count());
   _loop:=_Tl.first();
   {!
   |? _loop
   |! _skip:=0; _del:=0; _ff:="";
      _Tab:=($_Tl.TABELA)();
      _Tab.cntx_psh(); _Tab.use(_Tl.MASKA); _Tab.prefix();
      {? _Tab.seek(_Tl.REF,)
      || _crc:=_Tab.crc();
         {? _Tl.TABELA='FAKS'
         || _Tab1:={? FAKS.SZ='S' || _FAKSS || _FAKSZ ?};
            FAP.cntx_psh();
            FAP.use((5+FAP.name())+(ref_name(FAKS.ref())+3));
            FAP.cntx_psh();
            FAP.index('FAP');
            FAP.prefix(FAKS.ref());
            _loop:=FAP.first();
            {!
            |? _loop
            |!
               _Tab1.DW:=FAKS.DW;
               _Tab1.SYM:=FAKS.SYM;
               _Tab1.IND:=FAP.NX;
               _Tab1.IL:=FAP.IL;
               _Tab1.JM:=FAP.JM().KOD;
               _loop:=_Tab1.add() & FAP.next()
            !};
            FAP.cntx_pop();
            FAP.cntx_pop();
            obj_del(_Tab1)
         |? _Tl.TABELA='KH_MSC'
         || _KH_MSC.blank();
            _KH_MSC.NAZ:=KH_MSC.NAZ;
            _KH_MSC.OS:=KH_MSC.OS;
            _KH_MSC.TEL:=KH_MSC.TEL;
            _KH_MSC.EMAIL:=KH_MSC.EMAIL;
            _KH_MSC.KPOCZ:=KH_MSC.KPOCZ;
            _KH_MSC.MIASTO:=KH_MSC.MIASTO;
            _KH_MSC.UL:=KH_MSC.UL;
            _KH_MSC.add()
         |? _Tl.TABELA='KH_ODB'
         || _KH_ODB.blank();
            _KH_ODB.NAZ:=KH_ODB.NAZ;
            _KH_ODB.NIP:=KH_ODB.NIP;
            _KH_ODB.NRD:=KH_ODB.NRD;
            _KH_ODB.EM:=KH_ODB.EM;
            _KH_ODB.KPOCZ:=KH_ODB.KPOCZ;
            _KH_ODB.MIASTO:=KH_ODB.MIASTO;
            _KH_ODB.UL:=KH_ODB.UL;
            _KH_ODB.DOM:=KH_ODB.DOM;
            _KH_ODB.LOKAL:=KH_ODB.LOKAL;
            _KH_ODB.add()
         |? _Tl.TABELA='KPO'
         || _KPO.blank();
            _KPO.R:=form(KPO.AR,,,'99');
            _KPO.M:=form(KPO.AM,,,'99');
            _KPO.SYM:=KPO.SYM;
            _KPO.ODP:=KPO.ODP().KOD;
            _KPO.MASA:=KPO.IL;
            _KPO.add()
         |? _Tl.TABELA='ND'
         || _Tab1:=_ND;
            DK.cntx_psh();
            DK.use((5+DK.name())+(ref_name(ND.ref())+3));
            DK.cntx_psh();
            DK.index('DOKMAG');
            DK.prefix(ND.ref());
            _loop:=DK.first();
            {!
            |? _loop
            |!
               _Tab1.DW:=ND.D;
               _Tab1.SYM:=ND.SYM;
               _Tab1.TYP:=ND.TYP().T+' - '+ TYPYDOK.NAZ;
               _Tab1.IND:=DK.M().N;
               _Tab1.IL:=DK.IL;
               _Tab1.JM:=DK.JM().KOD;
               _loop:=_Tab1.add() & DK.next()
            !};
            DK.cntx_pop();
            DK.cntx_pop();
            obj_del(_Tab1)
         |? _Tl.TABELA='PW' & PW.ODD().FIRMA=REF.FIRMA
         || _Tab1:=_PW;
            _Tab1.NRP:=PW.NRP;
            _Tab1.DK:=PW.DK;
            _Tab1.RBK:=PW.RBK;
            _Tab1.TYTOP:=PW.TYTOP;
            _Tab1.add();
            obj_del(_Tab1)
         |? _Tl.TABELA='OS_ADRES'
         || _OS_ADRES.blank();
            _OS_ADRES.TEL:=OS_ADRES.TEL;
            _OS_ADRES.EMAIL:=OS_ADRES.EMAIL;
            _OS_ADRES.KOD:=OS_ADRES.KOD;
            _OS_ADRES.MIASTO:=OS_ADRES.MIASTO;
            _OS_ADRES.ULICA:=OS_ADRES.ULICA;
            _OS_ADRES.DOM:=OS_ADRES.DOM;
            _OS_ADRES.LOKAL:=OS_ADRES.LOKAL;
            _OS_ADRES.add()
         |? _Tl.TABELA='OFE'
         || _Tab1:=_OFE;
            OFP.cntx_psh();
            OFP.index('OFE_P');
            OFP.prefix(OFE.ref());
            _loop:=OFP.first();
            {!
            |? _loop
            |!
               _Tab1.DW:=OFE.DU;
               _Tab1.SYM:=OFE.SYM;
               _Tab1.IND:=OFP.M().N;
               _Tab1.IL:=OFP.IL;
               _Tab1.JM:=OFP.M().J().KOD;
               _loop:=_Tab1.add() & OFP.next()
            !};
            OFP.cntx_pop();
            obj_del(_Tab1)
         |? _Tl.TABELA='PROJEKTY' | _Tl.TABELA='PROJETAP'
         || PROJEKTY.cntx_psh();
            {? _Tl.TABELA='PROJETAP' || PROJETAP.PROJEKTY() ?};
            _Tab1:=_PROJ;
            _Tab1.OD:=PROJEKTY.RDATA_OD;
            _Tab1.DZ:={? PROJEKTY.DAT_ZAM=date(0,0,0) || PROJEKTY.RDATA_DO || PROJEKTY.DAT_ZAM ?};
            _Tab1.SYM:=
               {? var_pres('SYM',PROJEKTY)>0
               || PROJEKTY.SYM
               |? var_pres('SYM_PROJ',PROJEKTY)>0
               || PROJEKTY.SYM_PROJ
               || ''
               ?};
            {? ~_Tab1.find_key(_Tab1.OD,_Tab1.SYM) || _Tab1.add() ?};
            PROJEKTY.cntx_pop();
            obj_del(_Tab1)
         |? _Tl.TABELA='ZD_NAG'
         || _Tab1:=_ZD_NAG;
            ZD_POZ.cntx_psh();
            ZD_POZ.use((5+ZD_POZ.name())+(ref_name(ZD_NAG.ref())+3));
            ZD_POZ.cntx_psh();
            ZD_POZ.index('POZ');
            ZD_POZ.prefix(ZD_NAG.ref());
            _loop:=ZD_POZ.first();
            {!
            |? _loop
            |!
               _Tab1.DW:=ZD_NAG.DATA;
               _Tab1.SYM:=ZD_NAG.SYM;
               _Tab1.IND:=ZD_POZ.M().N;
               _Tab1.IL:=ZD_POZ.IL;
               _Tab1.JM:=ZD_POZ.JM().KOD;
               _Tab1.add();
               _loop:=ZD_POZ.next()
            !};
            ZD_POZ.cntx_pop();
            ZD_POZ.cntx_pop();
            obj_del(_Tab1)
         |? _Tl.TABELA='ZK_N'
         || _Tab1:=_ZK_N;
            ZK_P.cntx_psh();
            ZK_P.use((5+ZK_P.name())+(ref_name(ZK_N.ref())+3));
            ZK_P.cntx_psh();
            ZK_P.index('NAG');
            ZK_P.prefix(ZK_N.ref());
            _loop:=ZK_P.first();
            {!
            |? _loop
            |!
               {? ZK_P.TOP
               ||
                  _Tab1.DW:=ZK_N.DP;
                  _Tab1.SYM:=ZK_N.SYM;
                  _Tab1.IND:=ZK_P.M().N;
                  _Tab1.IL:=ZK_P.IL2;
                  _Tab1.JM:=ZK_P.J2().KOD;
                  _Tab1.add()
               ?};
               _loop:=ZK_P.next()
            !};
            ZK_P.cntx_pop();
            ZK_P.cntx_pop();
            obj_del(_Tab1)
         |? _Tl.TABELA='ZL'
         || _Tab1:=_ZL;
            _Tab1.OD:=ZL.OD;
            _Tab1.SYM:=ZL.SYM;
            _Tab1.OPIS:=ZL.OPIS;
            _Tab1.add();
            obj_del(_Tab1)
         |? _Tl.TABELA='DOK' & DOK.ODD().FIRMA=REF.FIRMA
         || exec('dok_info','ro_info',_DOK)
         |? _Tl.TABELA='EDOKUM' & ~exec('a_lic','zam_okr_rok','FKS') & EDOKUM.ODD().FIRMA=REF.FIRMA
         || exec('edk_info','ro_info',_EDOKUM)
         ?}
      ?};
      _Tab.cntx_pop();
      obj_del(_Tab);
      _loop:=_Tl.del()
   !};


   {? _param.FAKSS || _arg.APP.FAKSS:=exec('appendix','ro_req',_FAKSS,'sprzedaz.csv','Dokumenty sprzedaży',1) ?};
   {? _param.FAKSZ || _arg.APP.FAKSZ:=exec('appendix','ro_req',_FAKSZ,'zakup.csv','Dokumenty zakupu',1) ?};
   {? _param.KH_MSC || _arg.APP.KH_MSC:=exec('appendix','ro_req',_KH_MSC,'miejsca dostaw.csv','Miejsca dostaw',1) ?};
   {? _param.KH_ODB || _arg.APP.KH_ODB:=exec('appendix','ro_req',_KH_ODB,'odbiorcy.csv','Odbiorcy kontrahenta',1) ?};
   {? _param.ND || _arg.APP.ND:=exec('appendix','ro_req',_ND,'dok_mag.csv','Dokumenty magazynowe',1) ?};
   {? _param.OS_ADRES || _arg.APP.OS_ADRES:=exec('appendix','ro_req',_OS_ADRES,'adresy.csv','Adresy do korespondencji',1) ?};
   {? _param.OFE || _arg.APP.OFE:=exec('appendix','ro_req',_OFE,'oferty.csv','Oferty dla kontrahenta',1) ?};
   {? _param.ZD_NAG || _arg.APP.ZD_NAG:=exec('appendix','ro_req',_ZD_NAG,'zamowienia dostaw.csv','Zamówienia do kontrahenta',1) ?};
   {? _param.ZK_N || _arg.APP.ZK_N:=exec('appendix','ro_req',_ZK_N,'zamowienia.csv','Zamówienia od kontrahenta',1) ?};
   {? _param.PW || _arg.APP.PW:=exec('appendix','ro_req',_PW,'wyciagi.csv','Wyciągi bankowe',1) ?};
   {? _param.ZL || _arg.APP.ZL:=exec('appendix','ro_req',_ZL,'zlecenia.csv','Zlecenia produkcyjne',1) ?};
   {? _param.PROJEKTY || _arg.APP.PROJEKTY:=exec('appendix','ro_req',_PROJ,'projekty.csv','Projekty',1) ?};
   {? _param.KPO || _arg.APP.KPO:=exec('appendix','ro_req',_KPO,'karty odpadow.csv','Karty przekazania odpadów',1) ?};
   obj_del(_Tl)
?};

{? _Tab2tl=KH
||
:: Pozostałe dane nie połączone relacyjnie
   SKID_RBK.cntx_psh(); SKID_RBK.index('TAB');
   {? var_pres('FIRMA',SKID_RBK)>0
   || SKID_RBK.prefix(REF.FIRMA,'KH','KH',#KH.ref())
   || SKID_RBK.prefix('KH','KH',#KH.ref())
   ?};
   {? SKID_RBK.first()
   || {!
      |? _SKID_RBK.blank();
         _SKID_RBK.N:=SKID_RBK.N;
         _SKID_RBK.BANK:=SKID_RBK.BANK().NB;
         _SKID_RBK.WALUTA:=SKID_RBK.WAL().KOD;
         _SKID_RBK.add();
         SKID_RBK.next()
      !};
      {? _param.SKID_RBK || _arg.APP.SKID_RBK:=exec('appendix','ro_req',_SKID_RBK,'rachunki_bank.csv','Rachunki bankowe',1) ?}
   ?};
   SKID_RBK.cntx_pop();

   _tab:=DOK.names();
   DOK.cntx_psh();
   {? _tab.last()
   || _ndx2:=DOK.ndx_tmp(,1,'KH',,0);
      {! |?
         DOK.use(_tab.NAME); DOK.index(_ndx2); DOK.prefix(KH.SKR);
         {? DOK.first()
         || {! |?
               {? ~DOK.WYS & DOK.KH<>'' & DOK.ODD().FIRMA=REF.FIRMA
               || exec('dok_info','ro_info',_DOK)
               ?};
               DOK.next()
            !}
         ?};
         _tab.prev()
      !};
      DOK.ndx_drop()
   ?};
   DOK.cntx_pop();

   _ndx1:=SLO.ndx_tmp(,1,'SLU','WZ',0,'KOD',,0,'KOD',,0);
   SLO.cntx_psh(); SLO.index(_ndx1); SLO.prefix('Kontrahent',KH.KOD,KH.KOD);
   {? SLO.first()
   || {! |?
         {? SLO.count()
         ||
            _Tl:=SLO.testlink(,SLO.count()); _loop:=_Tl.first();
            {!
            |? _loop
            |! _Tab:=($_Tl.TABELA)();
               _Tab.cntx_psh(); _Tab.use(_Tl.MASKA); _Tab.prefix();
               {? _Tab.seek(_Tl.REF,)
               || {? _Tl.TABELA='DOK' & DOK.ODD().FIRMA=REF.FIRMA
                  || exec('dok_info','ro_info',_DOK)
                  |? _Tl.TABELA='EDOKUM' & ~exec('a_lic','zam_okr_rok','FKS') & EDOKUM.ODD().FIRMA=REF.FIRMA
                  || exec('edk_info','ro_info',_EDOKUM)
                  ?}
               ?};
               _Tab.cntx_pop();
               obj_del(_Tab);
               _loop:=_Tl.del()
            !};
            obj_del(_Tl)
         ?};
         SLO.next()
      !}
   ?};
   SLO.cntx_pop(); SLO.ndx_drop()

?};
{? _param.DOK || _arg.APP.DOK:=exec('appendix','ro_req',_DOK,'dokumenty.csv','Dokumenty VAT',1) ?};
{? _param.EDOKUM || _arg.APP.EDOKUM:=exec('appendix','ro_req',_EDOKUM,'edokum.csv','Faktury w obiegu',1) ?};
~~


\dok_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.22]
:: OPIS: Dodatkowe załączniki dla dokumentu księgowego DOK
::   WE: _a - uchwyt do tabeli wyjściowej INFO (_DOK)
::----------------------------------------------------------------------------------------------------------------------
_DOK:=_a;
DOK_REJ.cntx_psh(); DOK_REJ.prefix();
                  SLO.cntx_psh(); SLO.prefix();
                  _vat:=(DOK.DOK_REJ().SLO().KOD='VAT' | DOK.DOK_REJ().SLO().KOD='SAD');
                  DOK_REJ.cntx_pop(); SLO.cntx_pop();
                  {? _vat
                  || _DOK.blank();
                     _DOK.DTO:=DOK.DTO;
                     _DOK.NK:=DOK.NK;
                     {? DOK.OKRVAT
                     || OKRO_F.cntx_psh(); OKRO_F.prefix();
                        _DOK.OKRESV:=DOK.OKRVAT().NAZ;
                        OKRO_F.cntx_pop()
                     ?};
                     _DOK.NIP:=DOK.NIP;
                     {? var_pres('KH_FULL',DOK)>0 & var_pres('MIASTO',DOK)>0 &
                        var_pres('UL',DOK)>0 & var_pres('POCZ',DOK)>0
                     || _DOK.KH:=DOK.KH_FULL;
                        _DOK.MIASTO:=DOK.MIASTO;
                        _DOK.UL:=DOK.UL;
                        _DOK.POCZ:=DOK.POCZ
                     || _DOK.KH:=DOK.KH
                     ?};
                     _DOK.D3:=$DOK.D3;
                     _DOK.add()
                  ?}


\edk_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.22]
:: OPIS: Dodatkowe załączniki dla dokumentu księgowego DOK
::   WE: _a - uchwyt do tabeli wyjściowej INFO (_EDOKUM)
::----------------------------------------------------------------------------------------------------------------------
_EDOKUM:=_a;
TYPOBIEG.cntx_psh(); TYPOBIEG.prefix();
_faktura:=(EDOKUM.TYPOBIEG().NAZWA='Obieg faktur');
TYPOBIEG.cntx_pop();
{? _faktura
|| _EDOKUM.blank();
   _EDOKUM.DW:=EDOKUM.DW;
   _EDOKUM.SYM:=EDOKUM.SYM;
   _EDOKUM.TP:=EDOKUM.TP;
   {? EDOKUM.KH<>null
   || SLO.cntx_psh(); SLO.prefix();
      KH.cntx_psh(); KH.index('KOD'); KH.prefix(2,EDOKUM.KH().KOD,);
      {? KH.first()
      || _EDOKUM.NIP:=KH.NIP;
         _EDOKUM.KH:=KH.NAZ_P
      ?};
      KH.cntx_pop(); SLO.cntx_pop()
   ?};
   {? var_pres('MIASTO',EDOKUM)>0 & var_pres('UL',EDOKUM)>0 & var_pres('POCZ',EDOKUM)>0
   || _EDOKUM.MIASTO:=EDOKUM.MIASTO;
      _EDOKUM.UL:=EDOKUM.UL;
      _EDOKUM.POCZ:=EDOKUM.POCZ
   ?};
   _EDOKUM.add()
?}


\kh_odb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.22]
:: OPIS: Formuła jednostkowa, dla tabeli KH_ODB.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE: _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::       _b - Tablica parametryzacji
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;
_param:={? var_pres('_b')=type_of(obj_new('obj')) || _b || exec('param','ro_info') ?};

_INFB:=_arg.INFB;
_RODO:=_arg.RODO;
exec('set_infb','ro_cfg',_INFB,KH_ODB);
_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

{? _arg.SRC.TABELA=KH_ODB
||
   KH_ODB.cntx_psh();
   KH_ODB.prefix();
   {? KH_ODB.seek(_arg.SRC.REF)
   || _ins(_INFB,'[TABELA]','Kontakty kontrahenta - odbiorcy');
      _ins(_INFB,'Nazwa',KH_ODB.NAZ);
      _ins(_INFB,'NIP',KH_ODB.NIP);
      _ins(_INFB,'Dowód osobisty',KH_ODB.NRD);
      _ins(_INFB,'E-mail',KH_ODB.EM);
      _ins(_INFB,'Miasto',KH_ODB.MIASTO);
      _ins(_INFB,'Ulica',KH_ODB.UL);
      _ins(_INFB,'Kod pocztowy',KH_ODB.KPOCZ);
      _ins(_INFB,'Kraj',KH_ODB.KRAJ);
::    pozostałe załączniki odbiorcy
      {? exec('app4req','ro_req',_arg.REQT_KEY)
      || exec('kh_odb_z','ro_info',_arg,_param)
      ?}
   ||
      _arg.RET.STATUS:=-1;
      _arg.RET.INFO:=_RODO.msg.noRec(_arg.SRC.TABELA)
   ?};
   KH_ODB.cntx_pop()
?};
~~


\kh_odb_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.22]
:: OPIS: Dodatkowe załączniki dla odbiorcy
::   WE: _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::       _b - Tablica parametryzacji
::----------------------------------------------------------------------------------------------------------------------
exec('zal','ro_info',_a,KH_ODB,_b)


\kh_msc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.22]
:: OPIS: Formuła jednostkowa, dla tabeli KH_MSC.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE: _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::       _b - Tablica parametryzacji
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;
_param:={? var_pres('_b')=type_of(obj_new('obj')) || _b || exec('param','ro_info') ?};

_INFB:=_arg.INFB;
_RODO:=_arg.RODO;
exec('set_infb','ro_cfg',_INFB,KH_MSC);
_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

{? _arg.SRC.TABELA=KH_MSC
||
   KH_MSC.cntx_psh();
   KH_MSC.prefix();
   {? KH_MSC.seek(_arg.SRC.REF)
   || _ins(_INFB,'[TABELA]','Kontakty kontrahenta - miejsca dostaw');
      _ins(_INFB,'Nazwa',KH_MSC.NAZ);
      _ins(_INFB,'Adres e-mail',KH_MSC.EMAIL);
      _ins(_INFB,'Telefon',KH_MSC.TEL);
      _ins(_INFB,'Miasto',KH_MSC.MIASTO);
      _ins(_INFB,'Ulica',KH_MSC.UL);
      _ins(_INFB,'Kod pocztowy',KH_MSC.KPOCZ);
      _ins(_INFB,'Kraj',KH_MSC.KRAJ);
::    pozostałe załączniki miejsca dostawy
      {? exec('app4req','ro_req',_arg.REQT_KEY)
      || exec('kh_msc_z','ro_info',_arg,_param)
      ?}
   ||
      _arg.RET.STATUS:=-1;
      _arg.RET.INFO:=_RODO.msg.noRec(_arg.SRC.TABELA)
   ?};
   KH_MSC.cntx_pop()
?};
~~


\kh_msc_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.22]
:: OPIS: Dodatkowe załączniki dla miejsca dostawy
::   WE: _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::       _b - Tablica parametryzacji
::----------------------------------------------------------------------------------------------------------------------
exec('zal','ro_info',_a,KH_MSC,_b)


\han
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.22]
:: OPIS: Formuła jednostkowa, dla tabeli HAN.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE: _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::       _b - Tablica parametryzacji
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;
_param:={? var_pres('_b')=type_of(obj_new('obj')) || _b || exec('param','ro_info') ?};

_INFB:=_arg.INFB;
_RODO:=_arg.RODO;
exec('set_infb','ro_cfg',_INFB,HAN);
_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

{? _arg.SRC.TABELA=HAN
||
   HAN.cntx_psh();
   HAN.prefix();
   {? HAN.seek(_arg.SRC.REF)
   || _ins(_INFB,'[TABELA]','Pracownik - handlowiec');
      _ins(_INFB,'Nazwa',HAN.NAZ);
      _ins(_INFB,'Adres e-mail',HAN.EMAIL);
      _ins(_INFB,'Telefon',HAN.TEL);
      _ins(_INFB,'Adres',HAN.ADR);
::    pozostałe załączniki handlowca
      {? exec('app4req','ro_req',_arg.REQT_KEY)
      || exec('han_z','ro_info',_arg,_param)
      ?}
   ||
      _arg.RET.STATUS:=-1;
      _arg.RET.INFO:=_RODO.msg.noRec(_arg.SRC.TABELA)
   ?};
   HAN.cntx_pop()
?};
~~


\han_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.22]
:: OPIS: Dodatkowe załączniki dla handlowca
::   WE: _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::       _b - Tablica parametryzacji
::----------------------------------------------------------------------------------------------------------------------
exec('zal','ro_info',_a,HAN,_b)


\kh_osob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.22]
:: OPIS: Formuła jednostkowa, dla tabeli KH_OSOB.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:   _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;

_INFB:=_arg.INFB;
_RODO:=_arg.RODO;
exec('set_infb','ro_cfg',_INFB,KH_OSOB);
_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

{? _arg.SRC.TABELA=KH_OSOB
|| KH_OSOB.cntx_psh(); KH_OSOB.prefix();
   {? KH_OSOB.seek(_arg.SRC.REF)
   || _ins(_INFB,'[TABELA]','Dane osobowe');
      _ins(_INFB,'Nazwisko',KH_OSOB.NAZWISKO);
      _ins(_INFB,'Imię',KH_OSOB.IMIE);
      _ins(_INFB,'E-mail',KH_OSOB.EMAIL);
      _ins(_INFB,'Telefon',KH_OSOB.TEL);
      _ins(_INFB,'Telefon komórkowy',KH_OSOB.GSM);
      _ins(_INFB,'Faks',KH_OSOB.FAKS);
      {? var_pres('STANOW',KH_OSOB)>0
      || _ins(_INFB,'Stanowisko',KH_OSOB.STANOW)
      ?}
   || _arg.RET.STATUS:=-1;
      _arg.RET.INFO:=_RODO.msg.noRec(_arg.SRC.TABELA)
   ?};
   KH_OSOB.cntx_pop()
?};

~~


\vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.22]
:: OPIS: Formuła jednostkowa, dla tabeli VAT_PS.
::       UWAGA: Poprawność argumentu wywołania NIE jest weryfikowana.
::   WE:   _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;

_INFB:=_arg.INFB;
_RODO:=_arg.RODO;
_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";
{? _arg.SRC.TABELA=DOK
|| exec('set_infb','ro_cfg',_INFB,DOK);
   DOK.cntx_psh(); DOK.use(_arg.SRC.MASKA); DOK.prefix();
   {? DOK.seek(_arg.SRC.REF)
   || _ins(_INFB,'[TABELA]','Ostatni dokument VAT lub SAD');
      {? var_pres('KH_FULL',DOK)>0 & var_pres('MIASTO',DOK)>0 &
         var_pres('UL',DOK)>0 & var_pres('POCZ',DOK)>0
      || _ins(_INFB,'Nazwa',DOK.KH_FULL);
         _ins(_INFB,'Nazwa',DOK.MIASTO);
         _ins(_INFB,'Nazwa',DOK.UL);
         _ins(_INFB,'Nazwa',DOK.POCZ)
      || _ins(_INFB,'Nazwa i adres',DOK.KH)
      ?};
      _ins(_INFB,'NIP',DOK.NIP);
::    Lista dokumentów VAT
      {? exec('app4req','ro_req',_arg.REQT_KEY)
      || exec('vat_zal','ro_info',_arg,DOK.NIP)
      ?}
   || _arg.RET.STATUS:=-1;
      _arg.RET.INFO:=_RODO.msg.noRec(_arg.SRC.TABELA)
   ?};
   DOK.cntx_pop()
?};
~~


\vat_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.22]
:: OPIS: Dodatkowe załączniki dla dokumentów VAT
::   WE: _a  [ARRAY]  - Tablica elementów nazwanych określająca parametry działania (patrz metryka pliku).
::       _b - NIP
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_arg:=_a;
_arg.APP:=obj_new('DOK');
_DOK:=tab_tmp(1,
      'DTO','DATE','Data wystawienia',
      'NK','STRING[20]','Symbol dokumentu',
      'OKRESV','STRING[20]','Okres rozliczenia VAT',
      'KH','STRING[150]','Nazwa',
      'NIP','STRING[15]','NIP',
      'MIASTO','STRING[30]','Miasto',
      'UL','STRING[150]','Ulica',
      'POCZ','STRING[40]','Poczta',
      'D3','STRING[10]','Termin płatności'
   );
DOK.cntx_psh();
ROK_F.cntx_psh(); ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA);
OKRO_F.cntx_psh(); OKRO_F.index('ROK');
{? ROK_F.first()
|| _ndx:=DOK.ndx_tmp(,1,'NIP',,0);
   {! |?
      OKRO_F.prefix(ROK_F.ref());
      {? OKRO_F.first()
      || {! |?
            DOK.use('doku'+ROK_F.KOD+form(OKRO_F.NR,-2)); DOK.index(_ndx); DOK.prefix(_b,);
            {? DOK.first()
            || {! |?
                  DOK_REJ.cntx_psh(); DOK_REJ.prefix();
                  SLO.cntx_psh(); SLO.prefix();
                  _vat:=(DOK.DOK_REJ().SLO().KOD='VAT' | DOK.DOK_REJ().SLO().KOD='SAD');
                  DOK_REJ.cntx_pop(); SLO.cntx_pop();
                  {? _vat
                  || _DOK.blank();
                     _DOK.DTO:=DOK.DTO;
                     _DOK.NK:=DOK.NK;
                     {? DOK.OKRVAT
                     || OKRO_F.cntx_psh(); OKRO_F.prefix();
                        _DOK.OKRESV:=DOK.OKRVAT().NAZ;
                        OKRO_F.cntx_pop()
                     ?};
                     _DOK.NIP:=DOK.NIP;
                     {? var_pres('KH_FULL',DOK)>0 & var_pres('MIASTO',DOK)>0 &
                        var_pres('UL',DOK)>0 & var_pres('POCZ',DOK)>0
                     || _DOK.KH:=DOK.KH_FULL;
                        _DOK.MIASTO:=DOK.MIASTO;
                        _DOK.UL:=DOK.UL;
                        _DOK.POCZ:=DOK.POCZ
                     || _DOK.KH:=DOK.KH
                     ?};
                     _DOK.D3:=$DOK.D3;
                     _DOK.add()
                  ?};
                  DOK.next()
               !}
            ?};
            OKRO_F.next()
         !}
      ?};
      ROK_F.next()
   !}
?};
ROK_F.cntx_pop(); DOK.cntx_pop(); OKRO_F.cntx_pop();
DOK.ndx_drop();
_arg.APP.DOK:=exec('appendix','ro_req',_DOK,'vat_dok.csv','Dokumenty VAT',1);
~~


\param
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.22]
:: OPIS: Parametryzacja załączników: 0-załącznik pomijany, 1-załącznik generowany
::   WE:
::   WY: tablica patrametryzacji z domyślnymi wrtościami
::----------------------------------------------------------------------------------------------------------------------
:: FAKSS - 'sprzedaz.csv','Dokumenty sprzedaży'
:: FAKSZ - 'zakup.csv','Dokumenty zakupu'
:: KH_MSC - 'miesca dostaw.csv','Miejsca dostaw'
:: KH_ODB - 'odbiorcy.csv','Odbiorcy kontrahenta'
:: ND - 'dok_mag.csv','Dokumenty magazynowe'
:: SKID_RBK - 'rachunki_bank.csv','Rachunki bankowe'
:: OS_ADRES - 'adresy.csv','Adresy do korespondencji'
:: DOK - 'dokumenty.csv','Dokumenty VAT'
:: EDOKUM - 'edokum.csv','Faktury w obiegu'
:: OFE - 'oferty.csv','Oferty dla kontrahenta'
:: ZD_NAG - 'zamowienia dostaw.csv', 'Zamówienia do kontrahenta'
:: ZK_N - 'zamowienia.csv','Zamówienia od kontrahenta'
:: PW - 'wyciagi.csv','Wyciągi bankowe'
:: ZL - 'zlecenia.csv','Zlecenia produkcyjne'
:: PROJEKTY - 'projekty.csv','Projekty'
:: KPO - 'karty odpadow.csv','Karty przekazania odpadów'
_ret:=obj_new(
   'FAKSS'
   ,'FAKSZ'
   ,'KH_MSC'
   ,'KH_ODB'
   ,'ND'
   ,'SKID_RBK'
   ,'OS_ADRES'
   ,'DOK'
   ,'EDOKUM'
   ,'OFE'
   ,'ZD_NAG'
   ,'ZK_N'
   ,'PW'
   ,'ZL'
   ,'PROJEKTY'
   ,'KPO');
{! _ii:=1..obj_len(_ret)
|!
   _ret[_ii]:=1
!};
_ret.ZL:=0;
_ret.PROJEKTY:=0;
_ret

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 4be707d8af67215c0ff63c835582739a783d8572a9c7d706cab99edd8ff04126786cd02e5d050d40acadfb4925674c8d5fa35912cc11028b4ff5d547d958d230caa9eebe007e0466ede5a895f41734fb9517d5a114720d9794e54a64714cf1f67540ddfaaae9a938d982d9e26558dc86f18ae75e97bf55b994ede6e0c7a474b0
