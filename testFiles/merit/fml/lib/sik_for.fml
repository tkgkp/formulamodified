:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: sik_for.fml
:: Utworzony: ??.??.????
:: Autor: -
::======================================================================================================================
:: Zawartosc:  Zbior funkcji obslugujacych analizy na potrzeby programu IF
::======================================================================================================================


\pracuje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: Funkcja zwraca ile osob pracuje na dzien OKRO_F.KON.
::       Uzwglednia parametry kategorii: plec, mlodociani (lub nie), forme naboru,
::       pelnoetatowi, obcokrajowiec, niepelnosprawny/rencista
::   WE: [_a] - 0 lub brak - wszyscy, 1 - tylko zatrudnieni na umowy okresowe
::       _c.._j - odpowiadaja parametra SIK.P1..SIK.P8
::       _k - kod sprawozdania
::       _l - podstawowe miejsce pracy?
::             'T'  - tak [domyslnie]
::             'N'  - nie
::             'TN' - bez znaczenia
::      [_m][INTEGER] - 0/1 - Czy pominąć w obliczeniach oddelegowanych, domyślnie 0 - nie pomijaj
::      [_n][INTEGER] - 0/1 - Czy pominąć w obliczeniach zatrudnionych równolegle, domyślnie 0 - nie pomijaj
::----------------------------------------------------------------------------------------------------------------------
{? _>0
|| exec('clear','sik_for')
|| _b:=OKRO_F.KON
?};
{? var_pres('_b')<>type_of(date) | _b~1=0 || return(0) ?};

_kon:=date(_b~1,_b~2,0);
_SP1:={? var_pres('_c')=type_of('') || _c || SIK.P1 ?};
_SP2:={? var_pres('_d')=type_of('') || _d || SIK.P2 ?};
_SP3:={? var_pres('_e')=type_of('') || _e || SIK.P3 ?};
_SP4:={? var_pres('_f')=type_of('') || _f || SIK.P4 ?};
_SP5:={? var_pres('_g')=type_of('') || _g || SIK.P5 ?};
_SP6:={? var_pres('_h')=type_of('') || _h || SIK.P6 ?};
_SP7:={? var_pres('_i')=type_of('') || _i || SIK.P7 ?};
_SP8:={? var_pres('_j')=type_of('') || _j || SIK.P8 ?};
_spraw:={? var_pres('_k')=type_of('') || _k || GR_SIK.SKROT ?};
_pmp:={? var_pres('_l')=type_of('') || _l || 'T' ?};

_bezterm:={? var_pres('_a')=type_of(0) & _a=1 || 0 || 1 ?};
_bezOdd:={? var_pres('_m')=type_of(0) || _m || 0 ?};
_bezAktStaz:={? var_pres('_n')=type_of(0) || _n || 0 ?};
P.cntx_psh();
H.cntx_psh();
H.index('_HISTKOD');
P.index('PRACOSOB');
P.prefix(exec('ref_firma','ustawienia'),__F_ZATR.P);
N.index('NIEOBECN');
_koniec:={? _SP8='P-ROK' || date(_kon~1-1,12,0) || _kon ?};
_ret:=0;
{? P.first()
|| _p3_len:=MS.fld_len('SIK','P3');
   _osoba:=null();
   _z03:=4+_spraw='Z_03';
   {!
   |? {? (~_z03 | _osoba<>P.OSOBA) &
         ((P.DZ=date(0,0,0) | P.DZ>=_koniec) & P.DZA<=_koniec) &
         (_SP1='' | P.OSOBA().PLEC=~-_SP1) &
         (_SP4='' |
            (_SP4='T' & P.OSOBA().UR_DATA<>date(0,0,0) & ((#(_koniec-P.OSOBA().UR_DATA))~1)-1>=18) |
            (_SP4='N' & P.OSOBA().UR_DATA<>date(0,0,0) & ((#(_koniec-P.OSOBA().UR_DATA))~1)-1<18)) &
         (_SP6='' |
            (_SP6=P.OSOBA().OBCY)) &
         (_SP7='' |
            (_SP7='niepełnosprawny' & {? exec('zn_ttub','pracownik',P.OSOBA,_koniec) || P_INFO.STNP().KOD <> '0' ?}) |
            (_SP7='rencista' & {? exec('zn_ttub','pracownik',P.OSOBA,_koniec) || P_INFO.PREM().KOD <> '0' ?})) &
         (_SP3='' |
            (1+_SP3<>'~' & (_p3_len+P.FNA().NAZWA)*_SP3) |
            (1+_SP3='~' & _SP3*(_p3_len+P.FNA().NAZWA)=0))
      || _dalej:=0; _um:=1;
         _wynik:=0;
         H.prefix(P.ref(),'Z');
         {? H.first()
         || {? H.find_le(_koniec) & H.OD<=_koniec & (H.DO=date(0,0,0) | H.DO>=_koniec) &
               ((_SP2='') | (_SP2='T' & H.RWY=1) | (_SP2='N' & H.RWYL<>H.RWYM)) &
               (_bezterm | (_um:=H.UMOWA().RU().K<>'C')) &
               _pmp*H.PMP
            || _dalej:=1; _wynik+=1
            ?}
         ?};
         {? 4+_spraw='Z_06' | _z03
         || H.prefix(P.ref(),'Z');
            {? H.first() & _dalej
            || {? H.find_le(_koniec) & H.OD<=_koniec & (H.DO=date(0,0,0) | H.DO>=_koniec)
                  & (_bezterm | (_um:=H.UMOWA().RU().K<>'C'))
                  & _pmp*H.PMP
               || {! _ind:=1..2
                  |! {? _dalej
                     || {? var_pres('_rub')>100 || obj_del(_rub) ?};
                        _rub:={? _ind=1 || __RUB.sys_rub(133) || __RUB.sys_rub(112) ?};
                        {? _rub.first()
                        || {!
                           |? N.index('NIPRACNB');
                              N.prefix('N',P.ref,_rub.RN);
                              {? N.find_le(_koniec) & N.OD<=_koniec & N.DO>=_koniec
                              || {!
                                 |? __KAL.rdat(N.OD,_koniec);
                                    {? __KAL.year*12+__KAL.month>=3
                                    || _wynik-=1; _dalej:=0
                                    || _n_od:=N.OD;
                                       N.prev & N.DO=(_n_od-1)
                                    ?}
                                 !}
                              ?};
                              _rub.next
                           !}
                        ?}
                     ?}
                  !}
               ?}
            ?}
         ?};
         {? _dalej & (_bezterm | _um)
         || N.index('NIEOBECN');
            N.prefix('N',P.ref);
            {? N.find_le(_koniec) & N.DO>=_koniec
            || {? __RUB.sys_attr(N.NB,1222,_koniec)
               || _wynik-=1; _dalej:=0
               ?}
            ?}
         ?};
::       Odjęcie oddelegownego w danym dniu:
         {? _dalej & _bezOdd
         || _odd:=exec('czy_odd_bzus','oddelegowanie',P.ref(),_koniec,0);
            {? _odd.st
            || _wynik-=1;
               _dalej:=0
            ?};
            obj_del(_odd)
         ?};
::       Odjęcie z okresem zatrudnienia w danym dniu (praca równolegle w innej firmie):
         {? _dalej & _bezAktStaz
         || STAZ.cntx_psh();
            STAZ.index('_STAZE');
            STAZ.prefix(exec('firma','ustawienia'),P.OSOBA);
            {? STAZ.find_le(_koniec)
            || {!
               |? {? STAZ.DZ=date(0,0,0) | STAZ.DZ>=_koniec
                  || _wynik-=1;
                     _dalej:=0
                  ?};

                  _dalej & STAZ.next() & STAZ.DR<=_koniec
               !}
            ?};
            STAZ.cntx_pop()
         ?};

         _ret+=_wynik;
         {? _z03 & _wynik || _osoba:=P.OSOBA ?}
      ?};
      P.next()
   !}
?};
P.cntx_pop();
H.cntx_pop();
_ret


\przyjeto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: Funkcja zwraca ile osob przyjeto w okresie:
::       Okres uzalezniony jest od wartosci 8 parametru kategorii:
::       - 'GUS' od poczatku roku do OKRO_F.KON
::       - pozostale wartosci - od OKRO_F.POCZ do OKRO_F.KON
::       Uzwglednia parametry kategorii: plec, wyksztalcenie, forme naboru,
::       czy pierwsza praca.
::   WE: _c.._j - odpowiadaja parametra SIK.P1..SIK.P8
::       _k - PMP (T/N)
::       _l - tabela wyszukiwan
::      [_m] - integer - czy tabela wyniku
:: UWAGA: przekazanie jakichkolwiek parametrow powoduje wyczyszczeenie bufora i odczyt z parametrow
::----------------------------------------------------------------------------------------------------------------------
{? _>0
|| exec('clear','sik_for')
|| _a:=OKRO_F.POCZ;
   _b:=OKRO_F.KON
?};
{? var_pres('_a')<>type_of(date) | var_pres('_b')<>type_of(date) | _a~1=0 | _b~1=0 | _a>_b || return(0) ?};

_SP1:={? var_pres('_c')=type_of('') || _c || SIK.P1 ?};
_SP2:={? var_pres('_d')=type_of('') || _d || SIK.P2 ?};
_SP3:={? var_pres('_e')=type_of('') || _e || SIK.P3 ?};
_SP4:={? var_pres('_f')=type_of('') || _f || SIK.P4 ?};
_SP5:={? var_pres('_g')=type_of('') || _g || SIK.P5 ?};
_SP6:={? var_pres('_h')=type_of('') || _h || SIK.P6 ?};
_SP7:={? var_pres('_i')=type_of('') || _i || SIK.P7 ?};
_SP8:={? var_pres('_j')=type_of('') || _j || SIK.P8 ?};
_pmp:={? var_pres('_k')=type_of('') || _k || '' ?};
_tab_p:={? var_pres('_l')=type_of(OSOBA) || _l || 0 ?};

_spr_tab:="{? type_of(_a)=type_of(0) || 1 || _a.prefix(_b,_c,_d); _a.first() ?}";
_spr_p:="{? _e='GUS'
         || _tab:=sql('
                     select
                        P.DZA, P.DZ, P.OSOBA, P.IP, P.F_ZATR
                     from
                        P join
                        OSOBA
                     where
                        P.OSOBA=:_a
                        and
                        P.IP<>:_c
                        and
                        P.DZA<=to_date(:_b)
                        and
                        (P.DZ is null or P.DZ>=to_date(:_b))
                        and
                        P.F_ZATR=:_d
                        and
                        P.FIRMA=:_e
                     ',_a,_d,_b,_c,_f
                     );
            {? _tab.size>0
            || return(0)
            || return(1)
            ?}
         || return(1)
         ?}";

_tab_wyn:={? var_pres('_m')=type_of(0) || _m ?};
{? _tab_wyn
|| _tab:=tab_tmp(2,
      'IMIE','STRING[25]','Imię',
      'NAZWISKO','STRING[30]','Nazwisko',
      'PESEL','STRING[11]','PESEL',
      'OSOBA','INTEGER','Osoba',
      'P','INTEGER','Pracownik',
      'IP','INTEGER','IP',
      'WY','REAL','Wymiar',
      'PLEC','STRING[1]','Płeć',
      'PMP','STRING[1]','PMP',
      'RU','STRING[1]','RU',
      'NB','STRING[1]','NB'
   )
?};
{? _SP6=''
|| exec('rehab','sik_for','INIT',_a,_b);
   exec('bezpl','sik_for','INIT',_a,_b)
|| exec('rehab','sik_for','BLANK');
   exec('bezpl','sik_for','BLANK')
?};

{? _SP8='GUS'
|| _pocz:=date(_b~1,1,1);
   _kon:=_b
|| _pocz:=_a;
   _kon:=_b
?};

P.cntx_psh();
H.cntx_psh();
STAZ.cntx_psh();
STAZ.index('_STAZE');
H.index('_HISTKOD');
P.index('PRACOZAT');
P.prefix(exec('ref_firma','ustawienia'),__F_ZATR.P);
_wynik:=0;
{? P.first()
|| _p3_len:=MS.fld_len('SIK','P3');
   {!
   |? H.prefix(P.ref(),'Z');
      {? H.first() & H.find_le(_kon) & H.OD<=_kon & (H.DO=date(0,0,0) | H.DO>=_pocz) &
         (H.PMP=_pmp | _pmp='')
      ||
         exec('rehab','sik_for','RUN');
         exec('bezpl','sik_for','RUN');
:     Powrot ze sw.rehab. lub urlopu bezplatnego trwajacego ponad 3 m-ce, jezeli nie wiaze sie z faktycznym zwolnieniem,
:     jest traktowany jako zatrudnienie.
         {? (__REHAB.LOD | __BEZPL.LOD) & (P.DZ=date(0,0,0) | (P.DZ<>__REHAB.DO & P.DZ<>__BEZPL.DO)) &
            (_SP1='' | P.OSOBA().PLEC=~-_SP1) &
            (_SP3='' |
               (1+_SP3<>'~' & (_p3_len+P.FNA().NAZWA) * _SP3) |
               (1+_SP3='~' & _SP3*(_p3_len+P.FNA().NAZWA)=0)) &
            (_SP5='' |
               (1+_SP5<>'~' & P.OSOBA().WYK().WK * _SP5) |
               (1+_SP5='~' & _SP5*P.OSOBA().WYK().WK=0)) &
            _SP6=''
         || {? _SP2='' & _spr_tab(_tab_p,P.OSOBA().NAZWISKO, OSOBA.PIERWSZE, OSOBA.PESEL) &
               _spr_p(P.OSOBA,P.IP,P.F_ZATR,date(_a~1,_a~2,_a~3)-1,_SP8,exec('ref_firma','ustawienia'))
            || _wynik+=1;
               {? _tab_wyn
               || _tab.OSOBA:=#P.OSOBA;
                  _tab.P:=#P.ref;
                  _tab.WY:=H.RWY;
                  _tab.PLEC:=P.OSOBA().PLEC;
                  _tab.IMIE:=OSOBA.PIERWSZE;
                  _tab.NAZWISKO:=OSOBA.NAZWISKO;
                  _tab.PESEL:=OSOBA.PESEL;
                  _tab.IP:=P.IP;
                  _tab.PMP:=H.PMP;
                  _tab.RU:=H.UMOWA().RU().K;
                  _tab.NB:='N';
                  _tab.add()
               ?}
            || H.prefix(P.ref(),'Z');
               {? H.first() & ((_SP2='T' & H.WY=1) | (_SP2='N' & H.WYL<>H.WYM)) &
                  _spr_tab(_tab_p,P.OSOBA().NAZWISKO, OSOBA.PIERWSZE, OSOBA.PESEL) &
                  _spr_p(P.OSOBA,P.IP,P.F_ZATR,date(_a~1,_a~2,_a~3)-1,_SP8,exec('ref_firma','ustawienia'))
               || _wynik+=1;
                  {? _tab_wyn
                  || _tab.OSOBA:=#P.OSOBA;
                     _tab.P:=#P.ref;
                     _tab.WY:=H.RWY;
                     _tab.PLEC:=P.OSOBA().PLEC;
                     _tab.IMIE:=OSOBA.PIERWSZE;
                     _tab.NAZWISKO:=OSOBA.NAZWISKO;
                     _tab.PESEL:=OSOBA.PESEL;
                     _tab.IP:=P.IP;
                     _tab.PMP:=H.PMP;
                     _tab.RU:=H.UMOWA().RU().K;
                     _tab.NB:='N';
                     _tab.add()
                  ?}
               ?}
            ?}
         ?};

         {? P.DZA<>date(0,0,0) & P.DZA>=_pocz & P.DZA<=_kon
         || {? (_SP1='' | P.OSOBA().PLEC=~-_SP1) &
               (_SP3='' |
                  (1+_SP3<>'~' & (_p3_len+P.FNA().NAZWA) * _SP3) |
                  (1+_SP3='~' & _SP3*(_p3_len+P.FNA().NAZWA)=0)) &
               (_SP5='' |
                  (1+_SP5<>'~' & P.OSOBA().WYK().WK * _SP5) |
                  (1+_SP5='~' & _SP5*P.OSOBA().WYK().WK=0))
            || {? _SP6='pierwsza praca'
               || {? (1+_SP5<>'~' & P.OSOBA().WYK().WK * _SP5) |
                     (1+_SP5='~' & _SP5*P.OSOBA().WYK().WK=0)
                  || OS_SZKOL.index('DO'); OS_SZKOL.prefix(P.OSOBA);
                     {? _SP5='' | (OS_SZKOL.last() & date(_pocz~1,_pocz~2-12,_pocz~3)<=OS_SZKOL.DO)
                     || STAZ.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
                        _ok:=~STAZ.first()
                     || _ok:=0
                     ?}
                  || STAZ.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
                     _ok:=~STAZ.first()
                  ?}
               |? _SP6='kolejna praca'
               || STAZ.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
                  H.prefix(P.ref(),'Z');
                  {? STAZ.first() & H.first & STAZ.DR<H.OD
                  || _ok:=1
                  || _ok:=0
                  ?}
               || _ok:=1
               ?};
               {? _ok
               || {? _SP2='' & _spr_tab(_tab_p,P.OSOBA().NAZWISKO, OSOBA.PIERWSZE, OSOBA.PESEL) &
                     _spr_p(P.OSOBA,P.IP,P.F_ZATR,date(_a~1,_a~2,_a~3)-1,_SP8,exec('ref_firma','ustawienia'))
                  || _wynik+=1;
                     {? _tab_wyn
                     || _tab.OSOBA:=#P.OSOBA;
                        _tab.P:=#P.ref;
                        _tab.WY:=H.RWY;
                        _tab.PLEC:=P.OSOBA().PLEC;
                        _tab.IMIE:=OSOBA.PIERWSZE;
                        _tab.NAZWISKO:=OSOBA.NAZWISKO;
                        _tab.PESEL:=OSOBA.PESEL;
                        _tab.IP:=P.IP;
                        _tab.PMP:=H.PMP;
                        _tab.RU:=H.UMOWA().RU().K;
                        _tab.NB:='N';
                        _tab.add()
                     ?}
                  || H.prefix(P.ref(),'Z');
                     {? H.first() & ((_SP2='T' & H.WY=1) | (_SP2='N' & H.WYL<>H.WYM)) &
                        _spr_tab(_tab_p,P.OSOBA().NAZWISKO, OSOBA.PIERWSZE, OSOBA.PESEL) &
                        _spr_p(P.OSOBA,P.IP,P.F_ZATR,date(_a~1,_a~2,_a~3)-1,_SP8,exec('ref_firma','ustawienia'))
                     || _wynik+=1;
                        {? _tab_wyn
                        || _tab.OSOBA:=#P.OSOBA;
                           _tab.P:=#P.ref;
                           _tab.WY:=H.RWY;
                           _tab.PLEC:=P.OSOBA().PLEC;
                           _tab.IMIE:=OSOBA.PIERWSZE;
                           _tab.NAZWISKO:=OSOBA.NAZWISKO;
                           _tab.PESEL:=OSOBA.PESEL;
                           _tab.IP:=P.IP;
                           _tab.PMP:=H.PMP;
                           _tab.RU:=H.UMOWA().RU().K;
                           _tab.NB:='N';
                           _tab.add()
                        ?}
                     ?}
                  ?}
               ?}
            ?}
         ?}
      ?};
      P.next()
   !}
?};
P.cntx_pop();
H.cntx_pop();
STAZ.cntx_pop();
{? _tab_wyn
|| _tab
|| _wynik
?}


\zwolnin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: Funkcja zwraca ile osob zwolniono w okresie:
::       Okres uzalezniony jest od wartosci 8 parametru kategorii:
::       - 'GUS' od poczatku roku do OKRO_F.KON
::       - pozostale wartosci - od OKRO_F.POCZ do OKRO_F.KON
::       _c.._j - odpowiadaja parametra SIK.P1..SIK.P8
::       _k - PMP (T/N)
::       _l - tabela wyszukiwan
::      [_m] - integer - czy tabela wyniku
::       Uzwglednia parametry kategorii: plec, sposob rozwiazania umowy,
::       niepelnoetatowych
::----------------------------------------------------------------------------------------------------------------------
{? _>0
|| exec('clear','sik_for')
|| _a:=OKRO_F.POCZ;
   _b:=OKRO_F.KON
?};
{? var_pres('_a')<>type_of(date) | var_pres('_b')<>type_of(date) | _a~1=0 | _b~1=0 | _a>_b || return(0) ?};

_kody_zus:=obj_new('przedsi', 'zakład', 'pracownik', 'renta', 'emeryt', 'porozumieniestron', 'zupływemczasu',
                   'własnaprośba', 'urlopwychowawczy', 'urlopbezpłatny' );

{? _a~1>2018
|| _code_set:=exec('gus_z06_bf_kom_nr','sik_for');
   exec('gus_z06_load_set','sik_for',_code_set,{? fexists('cli_gus_z06.txt',1) || 'cli_gus_z06.txt' || 'std_gus_z06.dfg' ?} );

   _f_kod:="_tmp:=sql('select * from :_a where KOMORKA=:_b',_a,_b);
            _kody:='';
            {? _tmp.first()
            || {!
               |? _kody+=_tmp.KOD_ZUS;
                  _tmp.next()
               !}
            ?};
            {? _kody<>'' || _kody || 'bezkodu' ?}";

:: od 2019 przyczyna rozwiązania stosunku pracy jest związana z konkretnymi kodami uzywanymi w ZUS ZWUA
   _kody_zus.przedsi:=_f_kod(_code_set,14);
   _kody_zus.zakład:=_f_kod(_code_set,15);
   _kody_zus.pracownik:=_f_kod(_code_set,16);
   _kody_zus.renta:=_f_kod(_code_set,17);
   _kody_zus.emeryt:=_f_kod(_code_set,18);
   _kody_zus.porozumieniestron:=_f_kod(_code_set,19);
   _kody_zus.zupływemczasu:=_f_kod(_code_set,21);
   _kody_zus.własnaprośba:='bezkodu';
   _kody_zus.urlopwychowawczy:='archiwalny';
   _kody_zus.urlopbezpłatny:='archiwalny'
?};

_SP1:={? var_pres('_c')=type_of('') || _c || SIK.P1 ?};
_SP2:={? var_pres('_d')=type_of('') || _d || SIK.P2 ?};
_SP3:={? var_pres('_e')=type_of('') || _e || SIK.P3 ?};
_SP4:={? var_pres('_f')=type_of('') || _f || SIK.P4 ?};
_SP5:={? var_pres('_g')=type_of('') || _g || SIK.P5 ?};
_SP6:={? var_pres('_h')=type_of('') || _h || SIK.P6 ?};
_SP7:={? var_pres('_i')=type_of('') || {? _a~1>2018 & var_pres('USPKOD',P)=26 || exec('rb_nosp','#string',_i) || _i ?} || SIK.P7 ?};
_SP8:={? var_pres('_j')=type_of('') || _j || SIK.P8 ?};
_pmp:={? var_pres('_k')=type_of('') || _k || '' ?};
_tab_p:={? var_pres('_l')=type_of(OSOBA) || _l || 0 ?};

_spr_tab:="{? type_of(_a)=type_of(0) || 1 || _a.prefix(_b,_c,_d); _a.first() ?}";
_spr_p:="{? _e='GUS'
         || _tab:=sql('
                     select
                        P.DZA, P.DZ, P.OSOBA, P.IP, P.F_ZATR
                     from
                        P join
                        OSOBA
                     where
                        P.OSOBA=:_a
                        and
                        P.IP<>:_c
                        and
                        P.DZA<=to_date(:_b)
                        and
                        (P.DZ is null or P.DZ>=to_date(:_b))
                        and
                        P.F_ZATR=:_d
                        and
                        P.FIRMA=:_e
                     ',_a,_d,_b,_c,_f
                     );
            {? _tab.size>0
            || return(0)
            || return(1)
            ?}
         || return(1)
         ?}";

_tab_wyn:={? var_pres('_m')=type_of(0) || _m ?};
{? _tab_wyn
|| _tab:=tab_tmp(2,
      'IMIE','STRING[25]','Imię',
      'NAZWISKO','STRING[30]','Nazwisko',
      'PESEL','STRING[11]','PESEL',
      'OSOBA','INTEGER','Osoba',
      'P','INTEGER','Pracownik',
      'IP','INTEGER','IP',
      'WY','REAL','Wymiar',
      'PLEC','STRING[1]','Płeć',
      'PMP','STRING[1]','PMP',
      'RU','STRING[1]','RU',
      'NB','STRING[1]','NB'
   )
?};

exec('rehab','sik_for','INIT',_a,_b);
exec('bezpl','sik_for','INIT',_a,_b);

{? _SP8='GUS'
|| _pocz:=date(_b~1,1,1)-1;
   _kon:=_b-1
|| _pocz:=_a;
   _kon:=_b
?};

P.cntx_psh();
H.cntx_psh();
H.index('_HISTKOD');
P.index('PRACOZAT');
P.prefix(exec('ref_firma','ustawienia'),__F_ZATR.P);
RU.cntx_psh();
RU.prefix();
_wynik:=0;
{? P.first()
|| {!
   |?
      exec('rehab','sik_for','RUN');
      exec('bezpl','sik_for','RUN');
:     Poczatek sw.rehabilitacyjnego lub urlopu bezplatnego trwajacego ponad 3 m-ce to rowniez "zwolnienie", oczywiscie
:     jezeli pytamy o zwolnienie z powodu "renty" lub z dowolnego powodu.
      {? (__REHAB.LDO | __BEZPL.LDO) &
         (_SP1='' | P.OSOBA().PLEC=~-_SP1)
      || {? _SP2='' & _spr_tab(_tab_p,P.OSOBA().NAZWISKO, OSOBA.PIERWSZE, OSOBA.PESEL)
         || _wyn1:={? _SP7='' || __BEZPL.LDO+__REHAB.LDO |? _SP7='renta' || __REHAB.LDO ?};
            _wynik+=_wyn1;
            {? _wyn1 & _tab_wyn
            || _tab.OSOBA:=#P.OSOBA;
               _tab.P:=#P.ref;
               _tab.WY:=H.RWY;
               _tab.PLEC:=P.OSOBA().PLEC;
               _tab.IMIE:=OSOBA.PIERWSZE;
               _tab.NAZWISKO:=OSOBA.NAZWISKO;
               _tab.PESEL:=OSOBA.PESEL;
               _tab.IP:=P.IP;
               _tab.PMP:=H.PMP;
               _tab.RU:=H.UMOWA().RU().K;
               _tab.NB:='N';
               _tab.add()
            ?}
         || H.prefix(P.ref(),'Z');
            {? H.find_le(_kon) & H.OD<=_kon & (_pocz<=H.DO | H.DO=date(0,0,0)) &
               ((_SP2='T' & H.RWY=1) | (_SP2='N' & H.RWYL<>H.RWYM)) & (H.PMP=_pmp | _pmp='') &
               _spr_tab(_tab_p,P.OSOBA().NAZWISKO, OSOBA.PIERWSZE, OSOBA.PESEL) &
               _spr_p(P.OSOBA,P.IP,P.F_ZATR,date(_a~1,12,31),_SP8,exec('ref_firma','ustawienia'))
            || _wyn1:={? _SP7='' || __BEZPL.LDO+__REHAB.LDO |? _SP7='renta' || __REHAB.LDO ?};
               _wynik+=_wyn1;
               {? _wyn1 & _tab_wyn
               || _tab.OSOBA:=#P.OSOBA;
                  _tab.P:=#P.ref;
                  _tab.WY:=H.RWY;
                  _tab.PLEC:=P.OSOBA().PLEC;
                  _tab.IMIE:=OSOBA.PIERWSZE;
                  _tab.NAZWISKO:=OSOBA.NAZWISKO;
                  _tab.PESEL:=OSOBA.PESEL;
                  _tab.IP:=P.IP;
                  _tab.PMP:=H.PMP;
                  _tab.RU:=H.UMOWA().RU().K;
                  _tab.NB:='N';
                  _tab.add()
               ?}
            ?}
         ?}
      ?};
:     Jezeli zwolnienie z pracy nastepuje w dniu powrotu ze sw.rehab. lub urlopu bezplatnego, to przyczyna jest
:     sw.rehab. lub urlop bezplatny - pracownik zostal "zwolniony" idac na sw.rehab. lub urlop bezplatny.
      {? P.DZ<>date(0,0,0) & P.DZ<=_kon & P.DZ>=_pocz & P.DZ<>__REHAB.DO & P.DZ<>__BEZPL.DO
      || {? (_SP1='' | P.OSOBA().PLEC=~-_SP1)
         || H.prefix(P.ref(),'Z');
            {? H.last() &
               ((_SP2='') | (_SP2='T' & H.WY=1) | (_SP2='N' & H.WYL<>H.WYM)) &
               (
                  {? _a~1>2018 & var_pres('USPKOD',P)=26
                  || (_SP7='') |
                     (1+_SP7<>'~' & {? P.USPKOD || ($('_a.'+_SP7))(_kody_zus)*P.USPKOD().KOD || 0 ?}) |
                     (1+_SP7='~' & {? P.USPKOD || ($('_a.'+_SP7))(_kody_zus)*P.USPKOD().KOD=0 || 1 ?})
                  || (_SP7='') | (1+_SP7<>'~' & P.ROU().NAZWA*_SP7) | (1+_SP7='~' & _SP7*P.ROU().NAZWA=0)
                  ?}
               )  & (H.PMP=_pmp | _pmp='') & _spr_tab(_tab_p,P.OSOBA().NAZWISKO, OSOBA.PIERWSZE, OSOBA.PESEL) &
               _spr_p(P.OSOBA,P.IP,P.F_ZATR,date(_a~1,12,31),_SP8,exec('ref_firma','ustawienia'))
            || _wynik+=1;
               {? _tab_wyn
               || _tab.OSOBA:=#P.OSOBA;
                  _tab.P:=#P.ref;
                  _tab.WY:=H.RWY;
                  _tab.PLEC:=P.OSOBA().PLEC;
                  _tab.IMIE:=OSOBA.PIERWSZE;
                  _tab.NAZWISKO:=OSOBA.NAZWISKO;
                  _tab.PESEL:=OSOBA.PESEL;
                  _tab.IP:=P.IP;
                  _tab.PMP:=H.PMP;
                  _tab.RU:=H.UMOWA().RU().K;
                  _tab.NB:='N';
                  _tab.add()
               ?}
            ?}
         ?}
      ?};
      P.next()
   !}
?};
P.cntx_pop();
RU.cntx_pop();
H.cntx_pop();
{? _tab_wyn
|| _tab
|| _wynik
?}


\clear
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [1210]
:: OPIS: Wyczyszczenie zawartosci buforow
::----------------------------------------------------------------------------------------------------------------------
SIK.P1:='';
SIK.P2:='';
SIK.P3:='';
SIK.P4:='';
SIK.P5:='';
SIK.P6:='';
SIK.P7:='';
SIK.P8:='';
1


\nb3mc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.10]
:: OPIS: Procedura do zbierania informacji i obslugi statystycznej nieobecnosci trwajacych powyzej 3 miesiecy.
::       Biblioteka wykorzystywana przez procedury:
::       * sik_for.fml \rehab
::       * sik_for.fml \bezpl
::   WE: _a - Rodzaj obslugiwanej akcji:
::          BLANK - Utworzenie zmiennej tablicowej i wypelnienie jej zerowymi wartosciami.
::          RUN   - Wlasciwe przetwarzanie danych.
::             _b - Zmienna tablicowa do analizy. Poprawnosc tablicy (ze wzgledow optymalizacyjnych) NIE jest
::                  weryfikowana
::   WY: Zalezy od parametru wywolania.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || return() ?};

_d0:=date(0,0,0);

{? _a='BLANK'
|| _tab:=obj_new('POCZ','KON','LOD','LDO','OD','DO','TAB','N');
   _tab.POCZ:=_tab.KON:=_tab.OD:=_tab.DO:=_d0;
   _tab.LOD:=_tab.LDO:=0;
   _tab.TAB:=tab_tmp(2,'OD','DATE',,'DO','DATE',,'LOD','INTEGER',,'LDO','INTEGER',,'REHAB','STRING[1]',);
   _tab

|? _a='RUN'
|| {? ~( var_pres('_b')>100 & obj_len(_b)=8 ) || return() ?};
   _tab:=_b;

   _tab.LOD:=_tab.LDO:=0;
   _tab.OD:=_tab.DO:=_d0;

   {? _tab.TAB.first() || _tab.TAB.erase() ?};

:  Zebranie informacji o wszystkich nieobecnosciach, laczenie okresow ciaglosci.
   _tab.N.prefix($P.ref(),);
   _dn:=_tab.N.first();
   {!
   |? _dn
   |! {? _tab.TAB.last() & _tab.TAB.DO+1=_tab.N.OD
      || _tab.TAB.DO:=_tab.N.DO;
         _tab.TAB.REHAB:=_tab.N.REHAB;
         _tab.TAB.put()
      || _tab.TAB.blank();
         _tab.TAB.REHAB:=_tab.N.REHAB;
         _tab.TAB.OD:=_tab.N.OD;
         _tab.TAB.DO:=_tab.N.DO;
         _tab.TAB.add()
      ?};
      _dn:=_tab.N.next()
   !};

:  Funkcja zwracajaca liczbe miesiecy miedzy datami.
   _lmcy:="__KAL.rdat(_a,_b); __KAL.year*12+__KAL.month";

:  Analiza danych.
   _dn:=_tab.TAB.first();
   {!
   |? _dn
   |! {? _tab.TAB.DO<_tab.POCZ-1 | _tab.KON<_tab.TAB.OD | (_tab.TAB.OD<_tab.POCZ-1 & _tab.KON<_tab.TAB.DO)
:        Nieobecnosc wzieta w zwiazku z ewentualna ciagloscia, nie dotyczy badanego okresu.
:        Nieobecnosc zakonczona w dniu _tab.POCZ-1 moze oznaczac powrot w dniu _tab.POCZ.
      || ~~

      |? (!_tab='@.__REHAB' & ( _tab.TAB.OD<_tab.POCZ | _tab.KON<=_tab.TAB.DO)) |
:        ^ Specjalna obsluga swiadczen rehabilitacyjnych na przelomie roku.
:        Poniewaz osoba przebywajaca na swiadczeniu w ostatnim dniu okresu sprawozdawczego NIE jest uznawana za
:        pracujaca, to niezaleznie od dlugosci tego swiadczenia, poczatek takiego okresu uznajemy za zwolnienie,
:        a koniec za przyjecie.
         _lmcy(_tab.TAB.OD,_tab.TAB.DO)>=3
:        Czy okres trwa ponad 3 m-ce?
      || _put:=0;

:        Czy poczatek analizowanej nieobecnosci mozna uznac za poczatek "czasowego skreslenia z ewidencji"?
:        - nieobecnosci typu swiadczenie rehabilitacyjne
         {? !_tab='@.__REHAB' & _tab.TAB.REHAB='T'
         || {? _tab.TAB.OD<_tab.POCZ-1 & _tab.TAB.DO<_tab.KON
            || {? _tab.OD=_d0 || _tab.OD:=_tab.TAB.OD ?};
               _tab.TAB.LOD:=1;
               _put+=1
            ?};

:        Czy koniec analizowanego okresu mozemy uznac za koniec "czasowego skreslenia z ewidencji"?
            {? _tab.POCZ-1<=_tab.TAB.OD & _tab.TAB.DO>=_tab.KON & _tab.TAB.OD<=_tab.KON
            || _tab.TAB.LDO:=1;
               _tab.DO:=_tab.TAB.DO;
               _put+=1
            ?}


:        - pozostale nieobecnosci
         ||
:           Liczba Miesiecy w Poprzednim Okresie.
            _lmpo:={? _tab.TAB.OD<_tab.POCZ-1 & _tab.TAB.DO<_tab.KON || _lmcy(_tab.TAB.OD,_tab.POCZ-1) ?};

            {? _lmpo>=3
            || {? _tab.OD=_d0 || _tab.OD:=_tab.TAB.OD ?};
               _tab.TAB.LOD:=1;
               _put+=1
            ?};


:           Liczba Miesiecy do Konca Okresu.
            _lmko:={? _tab.TAB.DO>=_tab.KON ||_lmcy(_tab.TAB.OD,_tab.KON) ?};

:        Czy koniec analizowanego okresu mozemy uznac za koniec "czasowego skreslenia z ewidencji"?
            {? _lmko>=3 & _tab.POCZ-1<=_tab.TAB.OD & _tab.TAB.DO>=_tab.KON & _tab.TAB.OD<_tab.KON
            || _tab.TAB.LDO:=1;
               _tab.DO:=_tab.TAB.DO;
               _put+=1
            ?}
         ?};
         {? _put
         || _tab.LOD+=_tab.TAB.LOD;
            _tab.LDO+=_tab.TAB.LDO;
            _tab.TAB.put()
         ?}
      ?};
      _dn:=_tab.TAB.next()
   !};
   ~~

?}


\rehab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.10]
:: OPIS: Procedura sprawdza, czy w zadanym okresie biezacy pracownik rozpoczal lub zakonczyl (zgodnie z parametrem)
::       swiadczenie rehabilitacyjne trwajace ponad 3 m-ce.
::       Procedura wykorzystuje (w celu optymalizacji) zmienna globalna __REHAB i przechowywuje w niej tablice z
::       nazwanymi elementami:
::          LOD - Liczba rozpoczetych okresow.
::          LDO - Liczba zakonczonych okresow.
::          OD  - Data poczatkowa pierwszej zakwalifikowanej nieobecnosci typu sw.rehab.
::          DO  - Data koncowa ostatniej zakwalifikowanej nieobecnosci typu sw.rehab.
::          TAB - Tablica tymczasowa z zakwalifikowanymi okresami.
::          N   - Tablica tymczasowa z nieobecnosciami rehabilitacyjnymi wszystkich pracownikow.
::   WE: _a - Rodzaj obslugiwanej akcji:
::          BLANK - Utworzenie odpowiednich zmiennych i nadanie im zerowych wartosci.
::          INIT  - Utworzenie odpowiednich zmiennych i nadanie im odpowiednich wartosci.
::             _b - Data poczatkowa badanego okresu.
::             _c - Data koncowa badanego okresu.
::          RUN   - Wlasciwe przetwarzanie danych.
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || return() ?};

_jest:=var_pres('__REHAB')>100;

{? _a='BLANK'
|| {? _jest || obj_del(__REHAB) ?};
   __REHAB:=exec('nb3mc','sik_for','BLANK')
|? _a='INIT'
|| _td:=type_of(#0);
   {? _=3 & type_of(_b)=_td & type_of(_c)=_td
   || _pocz:=_b;
      _kon:=_c
   || return()
   ?};
   {? _jest &
      var_pres('POCZ',__REHAB)=_td & __REHAB.POCZ=_pocz & var_pres('KON',__REHAB)=_td & __REHAB.KON=_kon
   || return()
   || exec('rehab','sik_for','BLANK');
      __REHAB.POCZ:=_pocz;
      __REHAB.KON:=_kon;
      _sql:='select N.P, N.OD, N.DO , \'T\' REHAB from N join R ';
      _sql+='where N.FIRMA=:_c and N.KOR=\'N\' and N.OD<=to_date(:_a) and N.DO>=to_date(:_a) and R.RN in (:_b)';
      _sql+='order by N.P, N.OD, N.DO';
:     Szczegolna obsluga na przelomie okresow wymaga jego rozszerzenia o dzien przed i dzien po.
      __REHAB.N:=sql(_sql,_kon,__RUB.sys_sql(1222,_kon),exec('ref_firma','ustawienia'))
   ?}
|? _a='RUN'
|| {? ~_jest | __REHAB.POCZ=#0 || return() ?};
   exec('nb3mc','sik_for','RUN',__REHAB)
?};
~~


\bezpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.10]
:: OPIS: Procedura sprawdza, czy w zadanym okresie biezacy pracownik rozpoczal lub zakonczyl (zgodnie z parametrem)
::       urlop bezplatny trwajacy ponad 3 m-ce. Analizowane sa zapisy zarowno z tabeli nieobecnosci jak i przebiegu
::       zatrudnienia.
::       Procedura wykorzystuje (w celu optymalizacji) zmienna globalna __BEZPL i przechowywuje w niej tablice z
::       nazwanymi elementami:
::          LOD - Liczba rozpoczetych okresow.
::          LDO - Liczba zakonczonych okresow.
::          OD  - Data poczatkowa pierwszej zakwalifikowanej nieobecnosci typu urlop bezplatny.
::          DO  - Data koncowa ostatniej zakwalifikowanej nieobecnosci typu urlop bezplatny.
::          TAB - Tablica tymczasowa z zakwalifikowanymi okresami.
::          N   - Tablica tymczasowa z urlopami bezplatnymi wszystkich pracownikow.
::   WE: _a - Rodzaj obslugiwanej akcji:
::          BLANK - Utworzenie odpowiednich zmiennych i nadanie im zerowych wartosci.
::          INIT  - Utworzenie odpowiednich zmiennych i nadanie im odpowiednich wartosci.
::             _b - Data poczatkowa badanego okresu.
::             _c - Data koncowa badanego okresu.
::          RUN   - Wlasciwe przetwarzanie danych.
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || return() ?};

_jest:=var_pres('__BEZPL')>100;
_d0:=date(0,0,0);

{? _a='BLANK'
|| {? _jest || obj_del(__BEZPL) ?};
   __BEZPL:=exec('nb3mc','sik_for','BLANK')
|? _a='INIT'
|| _td:=type_of(#0);
   {? _=3 & type_of(_b)=_td & type_of(_c)=_td
   || _pocz:=_b;
      _kon:=_c
   || return()
   ?};
   {? _jest &
      var_pres('POCZ',__BEZPL)=_td & __BEZPL.POCZ=_pocz & var_pres('KON',__BEZPL)=_td & __BEZPL.KON=_kon
   || return()
   || exec('bezpl','sik_for','BLANK');
      __BEZPL.POCZ:=_pocz;
      __BEZPL.KON:=_kon;
      _sql:='';
      _sql+='select N.P, N.OD, N.DO, \'N\' REHAB from N join R ';
      _sql+='where N.FIRMA=:_d and N.KOR=\'N\' and N.OD<=to_date(:_b) and N.DO>=to_date(:_a) and R.RN in (:_c) ';
      _sql+='order by N.P, N.OD, N.DO ';
:     Uwzglednijmy ewentualna ciaglosc sprzed badanego okresu - poczatek analizy przesunmy o 3 m-ce wstecz.
      _dt:=date(_pocz~1,(_pocz~2)-3,1)-1;
      _rs:=__RUB.sys_sql(63211,_kon);
      {? _rs=''
::       Jeżeli system nie jest prawidłowo skonfigurowany (brak składników w atrybucie), to wyświetlamy odpowiedni
::       komunkat. Żeby jednak przetwarzanie nie "wysapało" się, zapytanie SQL wykonamy dla rubryki o kodzie 0.
::       Ten sprytny manewr sprawi, że w wyniku dostaniemy pustą (ale mimo wszystko) tabelę tymczasową, którą można
::       dalej "przetwarzać".
      || FUN.emsg(
            'System nie jest skonfigurowany prawidłowo. Brakuje definicji atrybutu:\n'
            '"%1 - %2" na dzień %3.'@ ['63211',__RUB.get_name('S',63211),$_kon]+'\n'+
            'Dane dotyczące urlopów bezpłatnych nie będą prawidłowe.'@
         );
         _rs:='0'
      ?};
      __BEZPL.N:=sql(_sql,_dt,_kon,_rs,exec('ref_firma','ustawienia'))
   ?}
|? _a='RUN'
|| {? ~_jest | __BEZPL.POCZ=#0 || return() ?};
   exec('nb3mc','sik_for','RUN',__BEZPL)
?};
~~


\gus_z06_bf_kom_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [12.51]
:: OPIS: Bufor na dane dotyczące przypisania kodu ZUS stosunku pracy do konkretnej komórki w druku GUS Z-06
::   WE:
::   WY:
::  OLD: \bf_kom_nr/gus.fml
::----------------------------------------------------------------------------------------------------------------------
return(tab_tmp(1,'KOD_ZUS','STRING[3]','Kod Zus ustania stosunku pracy'@,
                 'KOMORKA','STRING[2]','NUMER komórki'@))


\gus_z06_load_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [12.51]
:: OPIS: Wczytuje dane z pliku tekstowego dotyczące przypisania kodów ustania stosunku pracy do komórek z druku Z-06
::   WE: _a - [TABLE] - tabela na wczytywane dane
::       _b - nazwa pliku z ustawieniami
::   WY: 0/1
::  OLD: \load_set_z06/gus.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_tab:=_a;

_exist:=fopen(_b,'ur',1);
{? _exist
|| fclose(_exist);
   _result:=_tab.import(_b,,,';','UTF-8',,
                        'KOD_ZUS'      ,,1,,
                        'KOMORKA'   ,,2,1
                       )
?};
_result


\gus_z06_save_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [12.51]
:: OPIS: Eksportuje dane dotyczące przypisania kodów ustania stosunku pracy do komórek z druku Z-06 do pliku tekstowego
::   WE: _a - [TABLE] - tabela z danymi do zapisania
::       _b - nazwa pliku z ustawieniami
::   WY: 0/1
::  OLD: \save_set_z06/gus.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:={? var_pres('_a')=type_of(SYSLOG) || _a || return(~~) ?};

_fname:=_b;

_file:=fopen(_fname,'uw',1,0,1);

{? _file.is_open()
|| _sep:=';';
   _tab.cntx_psh();
   {? _tab.first()
   || {!
      |? {? _tab.KOMORKA<>''
         || _line:=_tab.KOD+_sep+_tab.KOMORKA+_sep;
            _file.fwrite(_line)
         ?};
         _tab.next()
      !}
   ?};
   _tab.cntx_pop();
   _file.fclose()
?};
~~


\pracuje_miesiac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [23.25]
:: OPIS: Funkcja oblicza ile osób pracuje w danym miesiącu sprawozdawczym.
::   WE: _a [NUMBER] - Rok
::       _b [NUMBER] - Miesiąc
::      [_c] [STRING] - Czy jednostka sprawozdawcza ma być podstawowym miejscem pracy? ['T'/'N'/'TN'*]
::      [_d] [STRING] - Symbole rodzajów umów jakie zaliczają osobę jako pracującą, oddzielone przecinkami np. 'B,C'.
::                      Domyślnie - 'C' (Umowa na czas nieokreślony)
::      [_e] [NUMBER] - Atrybut systemowy zawierający kody nieobecności dyskwalifikujące osobę dla conajmniej 1 dnia
::                      nieobecności.
::      [_f] [NUMBER] - Atrybut systemowy zawierający kody nieobecności dyskwalifikujące osobę dla conajmniej 1 dnia
::                      nieobecności. (Atrybut dodatkowy - rozszerzy kody zawarte w atrybucie podanym argumentem [_f].)
::      [_g] [NUMBER] - Atrybut systemowy zawierający kody nieobecności dyskwalifikujące osobę dla conajmniej 3 miesięcy
::                      nieobecności.
::      [_h] [NUMBER] - [h...] - Kolejne numery atrybutów systemowych dla nieobecności dyskwalifikujących osobę dla
::                      conajmniej 3 miesięcy.
::   WY: [NUMBER] - Wynik
::----------------------------------------------------------------------------------------------------------------------
_year:={? var_pres('_a')=type_of(0) || _a || return(0) ?};
_mth:={? var_pres('_b')=type_of(0) || _b || return(0) ?};
_podstawowe:={? var_pres('_c')=type_of('') & (_c='T'|_c='N') || _c || 'TN' ?};
_typyUmow:={? var_pres('_d')=type_of('') || ',%1,'[_d] || 'C' ?};
_sysAtr1D:={? var_pres('_e')=type_of(0) || _e || 0 ?};
_sysAtrDodatkowe:={? var_pres('_f')=type_of(0) || _f || 0 ?};
_dlugie_nieob:={? _>6 || 1 || 0 ?};
_len:=_-6;
{? _dlugie_nieob
|| _sysAtr3M:=obj_new(_len);
   {! _ii:=1.._len |!
      _sysAtr3M[_ii]:={? var_pres('_[%1]'[$(6+_ii)])=type_of(0) || _[6+_ii] || 0 ?}
   !}
?};
_startDate:=date(_year,_mth,1);
_endDate:=date(_year,_mth,0);
_result:=0;
P.cntx_psh();
H.cntx_psh();
N.cntx_psh();
N.index('NIEOBECN');
H.index('_HISTKOD');
P.index('PRACOSOB');
P.prefix(exec('ref_firma','ustawienia'),'P');
{? P.first()
||
   _osoba:=null();
   _add:=0;
:: Nieobecności na 1 dzień
   _kody1D:=__RUB.sys_sql(_sysAtr1D,_endDate); {? _kody1D='' || _kody1D:='0' ?};
   _kodyDodatkowe:=__RUB.sys_sql(_sysAtrDodatkowe,_endDate); {? _kodyDodatkowe='' || _kodyDodatkowe:='0' ?};

   _NIEOB1D:=exec('nb3mc','sik_for','BLANK');
   _sql:='select N.P, N.OD, N.DO , \'N\' as REHAB ';
   _sql+='from N join R ';
   _sql+='where N.FIRMA=:_a and N.KOR=\'N\' and  N.OD<=to_date(:_c) and N.DO>=to_date(:_b) and R.RN in (:_d,:_e) ';
   _sql+='order by N.P, N.OD, N.DO';
   _NIEOB1D.N:=sql(_sql,exec('ref_firma','ustawienia'),_startDate,_endDate,_sysAtr1D,_sysAtrDodatkowe);
:: Teraz 3 miesięczne nieobecności
   _startDate3mc:=date(_year,_mth-3,0);
   _endDate3mc:={? _mth+3 > 12 || date(_year+1,_mth+3-12,0) || date(_year,_mth+3,0) ?};

   _sql:='select N.P, N.OD, N.DO , \'N\' as REHAB ';
   _sql+='from N join R ';
   _sql+='where N.FIRMA=:_a and N.KOR=\'N\' and  N.OD<=to_date(:_c) and N.DO>=to_date(:_b) and R.RN in (:_d) ';
   _sql+='order by N.P, N.OD, N.DO';

   _lmcy:="__KAL.rdat(_a,_b); __KAL.year*12+__KAL.month";

   {? _dlugie_nieob
   || _kody3M:=obj_new(_len);
      {! _ii:=1.._len |!
         _kody3M[_ii]:=__RUB.sys_sql(_sysAtr3M[_ii],_endDate);
         {? _kody3M[_ii]='' || _kody3M[_ii]:='0' ?}
      !};
      _NIEOB3M:=obj_new(_len);
      {! _ii:=1.._len |!
         _NIEOB3M[_ii]:=exec('nb3mc','sik_for','BLANK');
         _NIEOB3M[_ii].N:=sql(_sql,exec('ref_firma','ustawienia'),_startDate3mc,_endDate3mc,_kody3M[_ii]);
         _NIEOB3M[_ii].POCZ:=_startDate;
         _NIEOB3M[_ii].KON:=_endDate
      !}
   ?};
   {! |?
      {? P.OSOBA <> _osoba & (P.OSOBA().UR_DATA<>date(0,0,0) & ((#(_endDate-P.OSOBA().UR_DATA))~1)-1>=18)
         & ((P.DZ=date(0,0,0) | P.DZ>=_endDate) & P.DZA<=_endDate)
      ||
         H.prefix(P.ref(), 'Z');
            {? H.first()
            || {? H.find_le(_endDate) & H.OD<=_endDate & (H.DO=date(0,0,0) | H.DO>=_startDate)
                  & (_typyUmow * ',%1,'[H.UMOWA().RU().K]) & (_podstawowe * H.PMP)
               || _NIEOB1D.N.prefix($P.ref(), );
                  {? ~_NIEOB1D.N.first()
                  ||
                     _add:=1;
                     {? _dlugie_nieob
                     || {! _ii:=1.._len |!
::                   łączenie okresów ciągłości nieobecności
                           exec('nb3mc','sik_for','RUN',_NIEOB3M[_ii]);
                           {? _NIEOB3M[_ii].TAB.first()
                           || {! |?
                                 {? _NIEOB3M[_ii].TAB.OD<=_NIEOB3M[_ii].KON & _NIEOB3M[_ii].TAB.DO>=_NIEOB3M[_ii].POCZ
                                    & (_lmcy(_NIEOB3M[_ii].TAB.OD,_NIEOB3M[_ii].TAB.DO)>=3)
                                 || _add-=1
                                 ?};
                                 _NIEOB3M[_ii].TAB.next()
                              !}
                           ?}
                        !}
                     ?}
                  ?}
               ?}
            ?}
      ?};
   {? _add=1 || _osoba:= P.OSOBA; _result+=1 ?};
   _add:=0;
   P.next()
   !}
?};
N.cntx_pop();
P.cntx_pop();
H.cntx_pop();
return(_result)


:Sign Version 2.0 jowisz:1045 2024/02/08 12:33:00 9ac75bdf068ee02f2baef53ad3e760f8212453003738ef40e6caadd5d6a20bd65eb31743889129bec5d072e32715abfa7c2bd0943d95e22846463a30787fba7c02db406a5aa5a92286c98e9478b84994d3a898a9fab8c74c4ccd5fe8d7785556c26a98797e3b210557a264ccc1115610e19a10160ef1baf69519968378c73efd
