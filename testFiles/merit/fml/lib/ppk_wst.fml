:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: ppk_wst.fml [12.51]
:: Utworzony: 2019/03/27
:: Autor: jaws
:: Systemy: PPK
::======================================================================================================================
:: Zawartość: Formuły odpowiedzialne za obsługę tabeli struktury wniosków.
::======================================================================================================================


\_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Przed dołączeniem lub poprawieniem wiersza tabeli PPK_WST.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
{? PPK_WST.BLOKADA='T'
|| PPK_WST.ZMIANA:='T'
?};
1


\_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli PPK_WST.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_modb','ppk_wst')


\_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli PPK_WST.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_modb','ppk_wst')


\_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyzwalacz przed usunięciem wiersza tabeli PPK_WST.
::   WE:
::   WY: 0/1 - wiersz może/nie może być usunięty
::----------------------------------------------------------------------------------------------------------------------
1


\r_pa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Formuła na wzorzec dla pola R wiersza tabeli PPK_WST.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
R.prefix();
R.f_set('RN',,'RN in (:_a)',__RUB.sys_sql(71));
''


\r_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Po redakcji pola R w wierszu tabeli PPK_WST.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
{? PPK_WST.R<>null
|| _rn:=','+$PPK_WST.R().RN+',';
   {? (','+__RUB.sys_sql(7901)+',')*_rn<>0 || PPK_WST.ZMIANA:='T'
   |? (','+__RUB.sys_sql(790)+',')*_rn=0 || PPK_WST.ZMIANA:='N'
   ?}
?};
win_disp();
1


\bl_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Po redakcji pola ZMIANA w wierszu tabeli PPK_WST.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('r_ae','ppk_wst')


\zm_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Przed wyświetleniem pola ZMIANA w wierszu tabeli PPK_WST.
::   WE:
::   WY: 0/1 - zawartość pola widoczna/ukryta
::----------------------------------------------------------------------------------------------------------------------
PPK_WST.BLOKADA<>'T'


\zm_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Przed redakcją pola ZMIANA w wierszu tabeli PPK_WST.
::   WE:
::   WY: 0/1 - pole dostępne/zablokowane
::----------------------------------------------------------------------------------------------------------------------
{? PPK_WST.BLOKADA='T'
|| return(0)
?};

{? PPK_WST.R<>null
|| _rn:=','+$PPK_WST.R().RN+',';
   {? (','+__RUB.sys_sql(7901)+',')*_rn=0
   || (','+__RUB.sys_sql(790)+',')*_rn<>0
   ?}
?}


\rek_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Po edycji wiersza tabeli PPK_WST.
::   WE:
::   WY: 1 w przypadku gdy rekord jest poprawny, akronim wymaganego pola lub 0 gdy doszło do powielenia klucza.
::----------------------------------------------------------------------------------------------------------------------
__CHK.table(PPK_WST,-menu_txt()='popraw')


\wnd_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: "Okienko przed" wszystkich okienek tabeli PPK_WST.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,KST_PPK);

PPK_WST.fld_fml('ZMIANA','BEFORE_DISPLAY',{? KST_PPK.PWP_UKW='T' || "*" || "1" ?});

R.cntx_psh();
R.win_dict('SLO');
1


\wnd_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: "Okienko po" wszystkich okienek tabeli PPK_WST.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
PPK_WST.fld_fml('ZMIANA','BEFORE_DISPLAY',"*");

R.f_clear();
R.cntx_pop();
1


\dodaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Tworzy zapis w tabeli PPK_WRD.
::   WE: _a _PPK_WRD - wskazanie rodzaju wniosku
::       _b INTEGER - kod składnika listy płac
::       _c STRING - blokada naliczania wpłaty [T/N]
::       _d STRING - procent wpłat ustalony indywidualnie [T/N]
::   WY: wskazanie utworzonego/istniejącego zapisu lub null w przypadku błędu
::UWAGA: poprawność argumentów wywołania nie jest weryfikowana
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_ppk_wrd:=_a;
_rub:=__RUB.ref(_b);
_blokada:={? var_pres('_c')=type_of('') & _c<>'' & 'TN'*_c<>0 || _c || 'N' ?};
_zmiana:=
   {? _blokada<>'T'
   || {? var_pres('_d')=type_of('') & _d<>'' & 'TN'*_d<>0 || _d || 'N' ?}
   || 'N'
   ?};

_ret:=null;
PPK_WST.cntx_psh();
PPK_WST.index('UNIQUE');
PPK_WST.prefix(_ppk_wrd);
{? ~PPK_WST.find_tab(0,'R',,'=',_rub)
|| PPK_WST.blank(1);
   PPK_WST.PPK_WRD:=_ppk_wrd;
   PPK_WST.R:=_rub;
   PPK_WST.BLOKADA:=_blokada;
   PPK_WST.ZMIANA:=_zmiana;
   {? PPK_WST.add()
   || _ret:=PPK_WST.ref()
   ?}
|| _ret:=PPK_WST.ref()
?};
PPK_WST.cntx_pop();
_ret

:Sign Version 2.0 jowisz:1028 2019/10/14 09:21:32 5e6d28a7f9228e72f3c615d31cbf3bcb08555a6aa4d95e1b890fd370c8d7527108babfa8083dfefbbb583e555681b1af2de53c7ff4f0a4ee4d6c8178cafbba662b341743a76430263ec250b7c18bca9d22cd04e8dff3a0bc109b486b83611c6eba07f5ac5ef5a7bd8bd18be345eb7f386e20d9035e8f7c3523412c2bcdca8f2d
