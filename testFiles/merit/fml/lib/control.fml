:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: control.fml
:: Utworzony: 17.03.2015 [17.00]
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły do obsługi controllingu
::======================================================================================================================


\bw_poz_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Formula na okienko przed
::   WE: _a  - nr zakładki
::      [_b] - czy odswieżyć okno dokumentu
::  OLD: \bw_poz_sel/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(80)='T' & exec('hide_podz_prac','control')
|| tab_hide(_a)
?};
{? var_press('_b')>0 & _b || grp_edisp(DOK,'RDOKPOZ') ?};
1


\hide_podz_prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Sprawdza uprawnienia do przegladania danych modeli kadrowo-placowych
::  OLD: \hide_podz_prac/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
5+DOK.ZAR='KALI:' & ~exec('chk_upr_plac','control')


\chk_upr_plac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Sprawdza uprawnienia do przegladania danych modeli kadrowo-placowych
::   WE: [_a] - uzytkownik (USERS)
::  OLD: \chk_upr_plac/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=OPERATOR.USER ?};
exec('chk_role','#b__box',_a,'CTR_PDM_ZMOP')


\formula
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Zwraca wyrazenie MDX na podstawie K_FORM.F
::   WE: _a - wskazanie na UD_DEF
::       _b - model
::  OLD: \formula/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.cntx_psh();
{? type_of(_a)=type_of('')
|| UD_DEF.seek(BIT.sqlint(_a),)
|| UD_DEF.seek(_a)
?};
_mdx:='';
SKIDXDUD.index('POZ'); SKIDXDUD.prefix(UD_DEF.UD_SKL);
_only_l:=SKIDXDUD.first() & SKIDXDUD.ONLY_L='T';
K_WERSJE.index('K_W_OBL');
K_FORM.cntx_psh();
K_FORM.index('K_W_OBL'); K_FORM.prefix(UD_DEF.ref());
{? K_FORM.first()
|| {!
   |? _mdx1:='';
      K_WERSJE.prefix(K_FORM.K_W_OBL);
      _dalej:=0;
      {? K_WERSJE.first()
      || _mdx1:='iif(';
         {!
         |? {? K_WERSJE.CZY_KALK='N'
            || _mdx1+='[Wersja].CURRENTMEMBER.properties(\'\'KEY\'\')=\'\''+$K_WERSJE.ref()+'\'\' or ';
               _dalej:=1
            ?};
            K_WERSJE.next()
         !};
         _mdx1:=_mdx1-3
      ?};
      {? _dalej
      || {? _mdx=''
         || _mdx:=_mdx1+','+
            exec('get_mdx','control',K_FORM.ref(),_b,_only_l)+
            ','+
            {? _only_l
            || 'CalculationPassValue(['+SKID_MBP.NAZ+'].['+SKID_MBP.NAZ+'].&['+$UD_DEF.UD_SKL+'].DATAMEMBER,0)'
            || 'RollupChildren(['+SKID_MBP.NAZ+'].['+SKID_MBP.NAZ+'].currentmember,['+SKID_MBP.NAZ+'].CURRENTMEMBER.Properties("UNARY_OPERATOR"))'
            ?}+')'
         || _mdx:=_mdx1+','+
               exec('get_mdx','control',K_FORM.ref(),_b,_only_l)+','+_mdx+')'
         ?}
      ?};
      K_FORM.next()
   !}
|? _only_l
|| _mdx:='CalculationPassValue(['+SKID_MBP.NAZ+'].['+SKID_MBP.NAZ+'].&['+$UD_DEF.UD_SKL+'].DATAMEMBER,0)'
?};
K_FORM.cntx_pop();
UD_DEF.cntx_pop();
_mdx
::iif([WERSJE].[Wersja].CURRENTMEMBER.NAME='Plan 1',[DIM 1].[Wymiar1_Struktura].&[ud_skl  000000f2],)
::RollupChildren([DIM 1].[Wymiar1_Struktura].&[ud_skl  000000f2],[DIM 1].[Wymiar1_Struktura].CURRENTMEMBER.Properties("UNARY_OPERATOR"))
::aggregate([DIM 1].[Wymiar1_Struktura].currentmember.children)
::RollupChildren([DIM 1].[Wymiar1_Struktura].currentmember,[DIM 1].[Wymiar1_Struktura].CURRENTMEMBER.Properties("UNARY_OPERATOR"))
::iif([WERSJE].[Wersja].CURRENTMEMBER.NAME='Plan 1',[DIM_1].[Pozycje budżetowe].&[ud_skl  000000f2],RollupChildren([DIM_1].[Pozycje budżetowe].currentmember,[DIM_1].[Pozycje budżetowe].CURRENTMEMBER.Properties("UNARY_OPERATOR")))


\get_mdx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Zwraca wyrazenie MDX na podstawie K_FORM.F - cd
::   WE: _a - wskazanie na K_FORM
::       _b - model
::       _c - tylko liscie
::  OLD: \get_mdx/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_mdx:='';
K_FORM.cntx_psh(); K_FORM.prefix();
{? K_FORM.seek(_a)
|| {? K_FORM.TYP='W' | _c
   || _mdx:='CalculationPassValue(['+SKID_MBP.NAZ+'].['+SKID_MBP.NAZ+'].&['+$K_FORM.UD_DEF().UD_SKL+'].DATAMEMBER,0)'
   |? K_FORM.TYP='F'
   || _fml:=K_FORM.memo_txt(0,1,'F');
      {? _fml<>''
      || _fml:=STR.gsub(_fml,'{?','iif(');
         _fml:=STR.gsub(_fml,'||',',');
         _fml:=STR.gsub(_fml,'?}',')');
         {!
         |? _p:=_fml*'[';
            {? _p
            ||
               {? 1+(_p-_fml)='['
               || _mdx+=(_p-1)+_fml;
                  _fml:=(_p+1)-_fml;
                  _p:=_fml*']]';
                  _mdx+=(_p-1)+_fml;
                  _fml:=(_p+1)-_fml;
                  1
               || _mdx+=_p+_fml;
                  _fml:=_p-_fml;
                  _p:=_fml*']';
                  {? _p
                  || _kod:=(_p+_fml)-1;
                     UD_SKL.cntx_psh();
                     UD_SKL.index('SYMBOL'); UD_SKL.prefix(K_FORM.UD_DEF().UD_SKL().UD_TYP,_kod,_kod);
                     {? UD_SKL.first()
                     || _mdx+=SKID_MBP.NAZ+'].['+SKID_MBP.NAZ+'].&['+$UD_SKL.ref()+']'
                     ?};
                     UD_SKL.cntx_pop();
                     _fml:=_p-_fml;
                     1
                  ?}
               ?}
            ?}
         !};
         _mdx+=_fml
      ?}
   ?}
?};
K_FORM.cntx_pop();
_mdx


\test_fun_leaf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Sprawdzenie czy formula dla pozycji budzetowej nie powoduje zapetlen
::   WE:  _a  - elemen dla którego wykonuje sie sprawdzenie
::        _b  - popraw/dolacz
::       [_c] - poziom 1/0
::  OLD: \test_fun_leaf/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
K_FORM.cntx_psh();
K_FORM.index('K_W_OBL');
K_FORM.prefix(UD_DEF.ref(),K_FORM.K_W_OBL);
_edit:=_>=2 & _b;
_first:=_edit | K_FORM.first();
{? _edit | _first
|| {!
   |? {? K_FORM.TYP='F'
      || _fml:=K_FORM.memo_txt(0,~_edit,'F');
         {!
         |? _p:=_fml*'[';
            {? _p
            || _fml:=_p-_fml;
               _p:=_fml*']';
               _sym:=(_p-1)+_fml;
               UD_DEF.cntx_psh();
               UD_DEF.index('SCHSYM'); UD_DEF.prefix(SKID_MBP.UD_SCH,_sym,_sym);
               {? UD_DEF.first()
               || {? UD_DEF.UD_SKL<>_a
                  || _ok:=exec('test_fun_leaf','control',_a)
                  || _ok:=0
                  ?}
               ?};
               UD_DEF.cntx_pop();
               _fml:=_p-_fml;
               _ok
            || 0
            ?}
         !}
      |? K_FORM.TYP='W'
      || _ok:=_a<>UD_DEF.UD_SKL | _=3 & _c
      ?};
      _edit=0 & K_FORM.next()
   !}
|| UD_DEF.cntx_psh();
   UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBP.UD_SCH,UD_DEF.ref());
   {? UD_DEF.first()
   || {!
      |? {? UD_DEF.ZN_AGR<>'~'
         || {? UD_DEF.UD_SKL<>_a
            || _ok:=exec('test_fun_leaf','control',_a)
            || _ok:=0
            ?}
         ?};
         _ok & UD_DEF.next()
      !}
   || _ok:=_a<>UD_DEF.UD_SKL
   ?};
   UD_DEF.cntx_pop()
?};
K_FORM.cntx_pop();
_ok


\ud_def_in_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.20]
:: OPIS: Czy element schematu danych użyty w widokach
::   WE: [_a] - czy pokazac komunkat [1]-tak 0-nie
::       [_b] - wskazanie na wariant obliczen
::  OLD: \ud_def_in_view/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=1 ?};
_ok:=1;
SKID_MBN.cntx_psh(); SKID_MBP.cntx_psh();
SKID_MBP.index('LP');
K_N_VIEW.index('K_W_OBL');
K_P_VIEW.index('SKID_MBP');
K_E_VIEW.index('UD_SKL');
{? SKID_MBN.first()
|| {!
   |? SKID_MBP.prefix(SKID_MBN.ref());
      {? SKID_MBP.first()
      || {!
         |? {? SKID_MBP.UD_SCH=UD_DEF.UD_SCH
            || {? _>1
               || K_N_VIEW.prefix(SKID_MBN.ref(),_b)
               || K_N_VIEW.prefix(SKID_MBN.ref())
               ?};
               {? K_N_VIEW.first()
               || {!
                  |? K_P_VIEW.prefix(K_N_VIEW.ref(),SKID_MBP.ref());
                     {? K_P_VIEW.first()
                     || {!
                        |? K_E_VIEW.prefix(K_P_VIEW.ref(),UD_DEF.UD_SKL);
                           _ok:=~K_E_VIEW.first();
                           _ok & K_P_VIEW.next()
                        !}
                     ?};
                     _ok & K_N_VIEW.next()
                  !}
               ?}
            ?};
            _ok & SKID_MBP.next()
         !}
      ?};
      _ok & SKID_MBN.next()
   !}
?};
SKID_MBN.cntx_pop(); SKID_MBP.cntx_pop();
{? ~_ok & _a
|| FUN.info('Element \''+UD_DEF.SYMBOL+'\' użyty w widoku danych.\nNie można dołączać elementów podrzędnych.')
?};
_ok


\run_exe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Wywoluje plik
::  OLD: \run_exe/skid_con.fml
:: ~OST: INFCOPY,INFERASE,INSYSTEM,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
fcopy('Controlling.exe','@'+tmp_dir()+'/Controlling.exe',1,0,1);
_ok:=system('@'+tmp_dir()+'/Controlling.exe EXECUTE22.26',1);
ferase('@'+tmp_dir()+'/config.txt',0);
_ok


\usu_mod0
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [12.41]
:: OPIS: Usuwanie modeli - pomocnicza
::   WE: _a - tabela masek K__POZ
::       _b - tabela masek K__WAR
::       _c - 1-wartosci i definicja 0-tylko wartosci
::  OLD: \usu_mod0/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
K__NAG.cntx_psh();
K__NAG.index('DISP'); K__NAG.prefix(K__NAG.FIRMA,K__NAG.TREE);
_ref:={? K__NAG.next() |
         K__NAG.prev() |
         K__NAG.TREE & (K__NAG.prefix(); K__NAG.seek(K__NAG.TREE,))
      || K__NAG.ref()
      || null
      ?};
K__NAG.cntx_pop();
_maska:=exec('maska','control')-2;
_a.prefix('yb'+_maska);
_b.prefix('yx'+_maska);
K__WAR.cntx_psh();
{? _b.first()
|| {! |?
      K__WAR.use(_b.NAME);
      K__WAR.index('K__POZ'); K__WAR.prefix();
      {? K__WAR.first()
      || {! |?
            _delr:=K__WAR.del(,1);
            {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
         !}
      ?};
      _b.next()
   !}
?};
K__WAR.cntx_pop();
K__POZ.cntx_psh();
{? _a.first()
|| {! |?
      K__POZ.use(_a.NAME);
      K__POZ.index('K__NAG'); K__POZ.prefix();
      {? K__POZ.first()
      || {! |?
            _delr:=K__POZ.del(,1);
            {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
         !}
      ?};
      _a.next()
   !}
?};
K__POZ.cntx_pop();
{? _c=1
|| _delr:=K__NAG.del(,1);
   {? _delr=0
   || K__NAG.r_unlock()
   |? _ref
   || K__NAG.seek(_ref)
   ?}
|| K__NAG.r_unlock()
?}


\rok_nstd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Czy zakres lat w harmonogramie dotyczy lat niestandardowych
::  OLD: \rok_nstd/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
ROK_F.cntx_psh();
ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA);
{? ROK_F.first()
|| _rdo:=K_HARM.DO().ROK;
   K_HARM.OD().ROK();
   {!
   |? _ok:=ROK_F.LOBR<>12 | ROK_F.POCZ_ROK~2<>1 | ROK_F.POCZ_ROK~3<>1;
      _ok=0 & ROK_F.ref()<>_rdo & ROK_F.next()
   !}
?};
ROK_F.cntx_pop();
_ok


\kharmp_stat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Ustawia pola statusu pozycji harmonogramu
::   WE: _a - status
::       _b - login uzytkownika
::  OLD: \kharmp_stat/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=1 || _b:='' ?};
K_HARM_P.STATUS:=_a;
K_HARM_P.AKTYWNY:={? _a='N' | _a='P' | _a='Z' || 'N' || 'T' ?};
{? _a='U'
|| K_HARM_P.UZU:=exec('kuser_seek','control',_b);
   K_HARM_P.DATA_UZU:=date();
   K_HARM_P.DATA_AKC:=date(0,0,0);
   K_HARM_P.AKC:=null;
   {? K_HARM_P.ZN_AKC='T' || K_HARM_P.D_R_AKC:=date() ?}
|? _a='A'
|| K_HARM_P.AKC:=exec('kuser_seek','control',_b);
   K_HARM_P.DATA_AKC:=date();
   {? K_HARM_P.KTO_AKC=K_HARM_P.KTO_UZU | K_HARM_P.ZN_AKC='N'
   || K_HARM_P.UZU:=K_HARM_P.AKC;
      K_HARM_P.DATA_UZU:=K_HARM_P.DATA_AKC;
      K_HARM_P.D_R_AKC:=K_HARM_P.DATA_AKC
   ?}
|? _a='N' | _a='W'
|| K_HARM_P.UZU:=null;
   K_HARM_P.AKC:=null;
   K_HARM_P.DATA_UZU:=date(0,0,0);
   K_HARM_P.DATA_AKC:=date(0,0,0);
   {? _a='W'
   || K_HARM_P.D_R_UZU:=date();
      {? K_HARM_P.ZN_AKC='T' & K_HARM_P.ZN_RET='N' || K_HARM_P.D_R_AKC:=date(0,0,0) ?}
   ?}
|? _a='P'
|| K_HARM.cntx_psh();
   _typ:=K_HARM_P.K_HARM().ARKUSZ;
   K_HARM.cntx_pop();
   {? _typ='G' & K_HARM_P.GOOGLEID<>''
   || exec('GSheet','object');
      {? K_HARM_P.KTO_UZU
      || GSheet.setPermission(exec('koordynator','control'),K_HARM_P.GOOGLEID,K_HARM_P.KTO_UZU().GOOGLE,'writer')
      ?};
      {? K_HARM_P.KTO_AKC
      || GSheet.setPermission(exec('koordynator','control'),K_HARM_P.GOOGLEID,K_HARM_P.KTO_AKC().GOOGLE,'writer')
      ?};
      GSheet.setPermission(exec('koordynator','control'),K_HARM_P.GOOGLEID,GSheet.serviceUser(),'writer')
   ?}
?}


\odbc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Zwraca napis do polaczenia ODBC
::  OLD: \odbc/skid_con.fml
:: ~OST: INODBCDSN
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__XLSXODBC')<=0
|| _usr:='odbc';
   _psw:='odbc123';
   _odbc:=odbc_dsn();
   _p:=_odbc*'UID';
   _odbc_n:=(_p+3)+_odbc+_usr+';';
   _odbc:=(_p+3)-_odbc;
   _p:=_odbc*';';
   _odbc:=_p-_odbc;
   _p:=_odbc*'PWD';
   _odbc_n+=(_p+3)+_odbc+_psw+';';
   _odbc:=(_p+3)-_odbc;
   _p:=_odbc*';';
   _odbc:=_p-_odbc;
   _odbc_n+=_odbc;
   __XLSXODBC:=_odbc_n-1+'0'
?};
__XLSXODBC


\set_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Ustawia pole zmiennej ze statusem
::  OLD: \set_status/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
UNPAR.P10:=
{? K_HARM_P.STATUS='N'
|| 'nieaktywne'@
|? K_HARM_P.STATUS='P'
|| 'przygotowane'@
|? K_HARM_P.STATUS='W'
|| {? K_HARM_P.ZN_RET='T'
   || 'odrzucone'@
   || 'wysłane'@
   ?}
|? K_HARM_P.STATUS='U'
|| 'uzupełnione'@
|? K_HARM_P.STATUS='A'
|| 'zaakceptowane'@
|? K_HARM_P.STATUS='Z'
|| 'wycofane'@
?}


\knv_copy1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Akcja kopiuj okna WER tabeli K_N_VIEW - pomocnicza
::   WE: _a - nazwa
::       _b - pozycja harmonogramu
::       _c - typ widoku (Szablon,Pozycja)
::       _d - akceptacja widoku 'T' lub 'N'
::  OLD: \knv_copy1/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K_N_VIEW.cntx_psh();
K_N_VIEW.prefix();
K_N_VIEW.NAZ:=_a;
K_N_VIEW.K_HARM_P:=_b;
K_N_VIEW.AKC:=_d;
K_N_VIEW.TYP:=_c;
_ref_b:=K_N_VIEW.ref();
{? K_N_VIEW.add()
|| _czas:=K_P_VIEW.SKID_MBP=null & _c='P' & exec('rok_nstd','control');
   _ref:=K_N_VIEW.ref();
   K_P_VIEW.index('SKID_MBP'); K_P_VIEW.prefix(_ref_b);
   {? K_P_VIEW.first()
   || {!
      |? K_P_VIEW.cntx_psh(); K_P_VIEW.prefix();
         K_P_VIEW.K_N_VIEW:=_ref; K_P_VIEW.add(); _ref2:=K_P_VIEW.ref();
         K_P_VIEW.cntx_pop();
         {? _c<>'P' | K_P_VIEW.SKID_MBP<>null | exec('rok_nstd','control')=0
         || K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_P_VIEW.ref());
            {? K_E_VIEW.first()
            || {!
               |? K_E_VIEW.cntx_psh(); K_E_VIEW.prefix();
                  K_E_VIEW.K_P_VIEW:=_ref2; K_E_VIEW.add();
                  K_E_VIEW.cntx_pop();
                  K_E_VIEW.next()
               !}
            ?}
         ?};
         K_P_VIEW.next()
      !}
   ?}
?};
K_N_VIEW.cntx_pop()


\k_p_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Akcja pozycje tabeli K_N_VIEW
::  OLD: \k_p_view/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TT_KPV_B','TT_KPV_T');
_tab:="
   tab_tmp(2,
      'TREE','TREE_REF','Tree',
      'LP','INTEGER','lp',
      'KOD','STRING[1]','Kod'@,
      'NAZ','STRING[30]','Nazwa'@,
      'REF','INTEGER',,
      'SUMA','INTEGER','Podsumowanie'@
   )
";
_win:="
   _zn:=_a;
   _txt:={? _zn='B' || 'e dostępne'
         |? _zn='T' || 'e'
         ?};
   _a:=($('TT_KPV_'+_a))();
   {? _zn='T'
   || _win:=_a.mk_sel('Pozycj%1'@[_txt],'P',,'kpview'+(-_zn),,,,1)
   || _win:=_a.mk_sel('Pozycj%1'@[_txt],'P',,'kpview'+(-_zn),,,,,'U')
   ?};
   {? _zn='T'
   || _a.win_fld(_win,,'NAZ');
      _a.win_fld(_win,,'SUMA',,,3,,,,,,2,,\"1\",\"0\",\"2\")
   || _a.win_fld(_win,,'NAZ',,,43)
   ?};
   {? _zn='T'
   || _a.win_act(_win,,'Formuła','Elementy'@@,,,,\"exec('k_e_view','control',TT_KPV_T)\",1,,,,'E');
      _a.win_btn(_win,'text=%1,panel=right,align=begin'['Elementy'@],'menu:E')
   ?};
   {? K_N_VIEW.AKC<>'T' & _zn='T'
   || _a.win_act(_win,,'Formuła','Podsumowanie'@@,,,,\"
         TT_KPV_T.cntx_psh();
         TT_KPV_T.prefix(TT_KPV_T.TREE);
         _size:=TT_KPV_T.size();
         TT_KPV_T.cntx_pop();
         {? _size=TT_KPV_T.LP
         || FUN.info('Akcja niedostępna dla ostatniego elementu.'@)
         |? K_P_VIEW.SKID_MBP().LP=1
         || FUN.info('Akcja niedostępna dla pozycji budżetowej.'@)
         || {? TT_KPV_T.SUMA=0
            || _ok:=exec('k_p_view_suma','control');
               {? _ok=0
               || _ok:=FUN.ask(
                     'Zbyt duża liczba elementów. Po wygenerowaniu arkusza\n'
                     'formuła sumująca przekroczy maksymalny rozmiar.\n'
                     'Czy kontynuować?'@)
               ?}
            || _ok:=1
            ?};
            {? _ok
            || TT_KPV_T.SUMA:=TT_KPV_T.SUMA;
               TT_KPV_T.put();
               K_P_VIEW.ZN_SUMA:=TT_KPV_T.SUMA;
               K_P_VIEW.put()
            ?}
         ?}
      \",,,,,'P')
   ?};
   {? _zn<>'B'
   || _a.win_act(_win,,'Formuła','Legenda'@@,,,,\"
         exec('legenda','color','$$Nie wybrano elementów pozycji')
      \",,,,,'L')
   ?};
   {? _zn='T'
   || _a.win_act(_win,,'Rekord',,,,\"
      {? TT_KPV_T.KOD='T'
      || TT_KPV_T.actions_grayed(cur_win(1,1),'EP')
      |? TT_KPV_T.KOD='F'
      || TT_KPV_T.actions_grayed(cur_win(1,1),'P')
      || TT_KPV_T.actions_grayed(cur_win(1,1),'')
      ?};
      K_P_VIEW.index('SKID_MBP'); K_P_VIEW.prefix(K_N_VIEW.ref());
      {? K_P_VIEW.find_key(cur_tab(1,1).REF)
      || K_E_VIEW.cntx_psh(); K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_P_VIEW.ref());
         _ok:=K_E_VIEW.first();
         K_E_VIEW.cntx_pop();
         TT_KPV_T.cntx_psh();
         TT_KPV_T.prefix(TT_KPV_T.TREE);
         _size:=TT_KPV_T.size();
         TT_KPV_T.cntx_pop();
         {? _size=TT_KPV_T.LP | K_P_VIEW.SKID_MBP().LP=1
         || TT_KPV_T.SUMA:=2;
            K_P_VIEW.ZN_SUMA:=0; K_P_VIEW.put()
         ?};
         ~_ok
      ?}
   \")
   ?};
   _win
";

TT_KPV_B:=_tab(); win_b:=_win('B'); TT_KPV_B.win_sel(win_b);
TT_KPV_T:=_tab(); TT_KPV_T.win_sel(_win('T'));
_gr:=TT_KPV_B.grp_make('Pozycje widoku modelu'@,"
   TT_KPV_T.first(); grp_disp(TT_KPV_T,TT_KPV_T.win_sel('?'));
   exec('btn_akc_upd','control')
",'ttkpvsel',40,8);
btnPanel:=TT_KPV_B.mk_edit('',,'#akcpanel',,,,'auto');
btnA:=TT_KPV_B.win_ebtn(btnPanel,'text=%1,btn_label_align=center,panel=left,align=begin,display=1'['&Akceptuj'@],"exec('knv_akc_btn','control',1)");
btnN:=TT_KPV_B.win_ebtn(btnPanel,'text=%1,btn_label_align=center,panel=left,align=begin,display=1'['A&nuluj akceptację'@],"exec('knv_akc_btn','control',0)");

TT_KPV_B.grp_sel(_gr,,TT_KPV_B.win_sel('?'),,,,,15,"TT_KPV_T.tr_set(1,,1);grp_disp(TT_KPV_T,TT_KPV_T.win_sel('?'),0)",,,,'maximized_with_title');
TT_KPV_B.grp_splt(_gr,,'vertical','right',61);
TT_KPV_B.grp_sel(_gr,TT_KPV_T,TT_KPV_T.win_sel('?'),,,,,15,,,,,'maximized_with_title');
TT_KPV_B.grp_splt(_gr,'','vertical','r2');
TT_KPV_B.grp_edit(_gr,,btnPanel,,,,,,'maximized');
TT_KPV_B.win_sel(_gr);

dnd_interm:="
   kpv_chg:=1;
   _z:=($('TT_KPV_'+(1+_a)))();
   _do:=($('TT_KPV_'+(_a+1)))();
   _tab:=_z.ref(); _ref:=null;
   _dest:=_do.ref();
   _ok:=1;
   {? _tab
   ||  {? _z.seek(_tab)
         || _z_kod:=_z.KOD;
            {? _z.KOD='W' | _z.KOD='K'
            || K_P_VIEW.index('K_P_VIEW');
               K_P_VIEW.prefix(K_N_VIEW.ref(),_a+1);
               {? K_P_VIEW.first()
               || {!
                  |? K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_P_VIEW.ref());
                     {? K_P_VIEW.SKID_MBP=null
                     || {? K_E_VIEW.first()
                        || {!
                           |? _ok:=K_E_VIEW.SUMA=0 & 1+K_E_VIEW.SLO().KOD='M';
                              _ok & K_E_VIEW.next()
                           !}
                        ?}
                     || {? K_E_VIEW.first()
                        || {!
                           |? {? K_E_VIEW.SUMA
                              || _ok:=0
                              || UD_DEF.index('PODTEC'); UD_DEF.prefix(K_P_VIEW.SKID_MBP().UD_SCH,K_E_VIEW.UD_SKL);
                                 {? UD_DEF.first()
                                 || UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBP.UD_SCH,UD_DEF.ref());
                                    _ok:=~UD_DEF.first()
                                 ?}
                              ?};
                              _ok & K_E_VIEW.next()
                           !}
                        ?}
                     ?};
                     _ok & K_P_VIEW.next()
                  !}
               ?}
            |? _z.KOD='F'
            || {? _z.REF=0
               || K_P_VIEW.cntx_psh();
                  K_P_VIEW.index('SKID_MBP'); K_P_VIEW.prefix(K_N_VIEW.ref(),_z.REF);
                  {? K_P_VIEW.first()
                  || K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_P_VIEW.ref());
                     {? K_E_VIEW.first()
                     || {!
                        |? {? 1+K_E_VIEW.SLO().KOD<>'M'
                           || _ok:=-1
                           ?};
                           _ok<>-1 & K_E_VIEW.next()
                        !}
                     ?}
                  ?};
                  K_P_VIEW.cntx_pop()
               || K_P_VIEW.cntx_psh();
                  K_P_VIEW.index('SKID_MBP'); K_P_VIEW.prefix(K_N_VIEW.ref(),_z.REF);
                  {? K_P_VIEW.first()
                  || K_E_VIEW.index('UD_SKL'); K_E_VIEW.prefix(K_P_VIEW.ref());
                     {? K_E_VIEW.first()
                     || {!
                        |? {? K_E_VIEW.SUMA
                           || _ok:=-1
                           || UD_DEF.index('PODTEC'); UD_DEF.prefix(K_P_VIEW.SKID_MBP().UD_SCH,K_E_VIEW.UD_SKL);
                              {? UD_DEF.first()
                              || UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBP.UD_SCH,UD_DEF.ref());
                                 {? UD_DEF.first()
                                 || _ok:=-1
                                 ?}
                              ?};
                              {? _ok<>-1
                              || K_FORM.index('K_W_OBL'); K_FORM.prefix(UD_DEF.ref(),K_N_VIEW.K_W_OBL);
                                 {? K_FORM.first() & K_FORM.TYP='F'
                                 || _ok:=-1
                                 ?}
                              ?}
                           ?};
                           _ok<>-1 & K_E_VIEW.next()
                        !}
                     ?}
                  ?};
                  K_P_VIEW.cntx_pop()
               ?}
            |? _z.KOD='T'
            || _ok:=0
            ?};
            {? _ok>0
            || {? _a+1='B'
               || _do.LP:=0;
                  _do_kod:='B'
               || _lp:=1;
                  _do.cntx_psh();
                  {? _dest=null & _do.last()
                  || _do.prefix(0,);
                     _do.last();
                     _dest:=_do.ref()
                  ?};
                  {? _do.seek(_dest)
                  || {? _do.KOD='T'
                     || _do.cntx_psh();
                        _do.prefix(_dest,);
                        {? _do.last() || _lp:=_do.LP+1 || _lp:=1 ?};
                        _do.cntx_pop()
                     || _lp:=_do.LP
                     ?};
                     _r:=_do.ref();
                     _tree:={? _do.KOD='T'
                            || _do.ref()
                            || _do.TREE
                            ?};
                     _do_kod:={? _do.KOD='T'
                              || {? _do.NAZ*'kolumn' || 'K'
                                 |? _do.NAZ*'wiersz' || 'W'
                                 |? _do.NAZ*'filtr'  || 'F'
                                 ?}
                              || _do.KOD
                              ?};
                     _do.cntx_psh();
                     _do.index(_do.ndx_tmp(,,'KOD',,));
                     _do.prefix(_do_kod,);
                     {? _do.last()
                     || {!
                        |? {? _do.LP>=_lp
                           || _do.LP+=1;
                              _do.put()
                           ?};
                           _do.LP>_lp & _do.prev()
                        !}
                     ?};
                     _do.cntx_pop()
                  ?};
                  _do.cntx_pop();
                  _do.LP:=_lp;
                  _do.TREE:=_tree
               ?};
               _do.KOD:=_do_kod;
               _do.REF:=_z.REF;
               _do.NAZ:=_z.NAZ;
               _do.add();
               _z.del();
               {? 1+_a<>'B'
               || _z.cntx_psh();
                  _z.index(_z.ndx_tmp(,,'KOD',,));
                  _z.prefix(_z_kod,);
                  {? _z.first()
                  || _lp:=1;
                     {!
                     |? _z.LP:=_lp; _z.put(); _lp+=1;
                        _z.next()
                     !}
                  ?};
                  _z.cntx_pop()
               ?};
               exec('kpvexe1','control',_z,_z_kod);
               exec('kpvexe1','control',_do,_do_kod)
            ?}
         ?}

   ?};
   {? _ok>0
   || _z.first();
      _do.first();
      grp_disp(_z,{? _z=TT_KPV_B || win_b || _z.win_sel('?') ?})
   |? _ok=-1
   || FUN.info('Wsród pozycji przenoszonych do filtra są\nelementy z wartościami wyliczeniowymi.'@)
   || {? _a+1='W'
      || FUN.info('W wierszu są elemnty z wartościami wyliczeniowymi.'@)
      |? 1+_a='T'
      || ~~
      || FUN.info('W kolumne są elemnty z wartościami wyliczeniowymi.'@)
      ?}
   ?}
";

dnd:="
   kpv_chg:=1;
   _z:=($('TT_KPV_'+(1+_a)))();
   _do:=($('TT_KPV_'+(_a+1)))();
   _tab:=dnd_info('dropped_records'); _ref:=null;
   _dest:=dnd_info('dest_record');
   _ok:=1;
   {? _tab.first()
   || {!
      |? {? _z.seek(_tab.REF,)
         || _z_kod:=_z.KOD;
            {? _z.KOD='W' | _z.KOD='K'
            || K_P_VIEW.index('K_P_VIEW');
               K_P_VIEW.prefix(K_N_VIEW.ref(),_a+1);
               {? K_P_VIEW.first()
               || {!
                  |? K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_P_VIEW.ref());
                     {? K_P_VIEW.SKID_MBP=null
                     || {? K_E_VIEW.first()
                        || {!
                           |? _ok:=K_E_VIEW.SUMA=0 & 1+K_E_VIEW.SLO().KOD='M';
                              _ok & K_E_VIEW.next()
                           !}
                        ?}
                     || {? K_E_VIEW.first()
                        || {!
                           |? {? K_E_VIEW.SUMA
                              || _ok:=0
                              || UD_DEF.index('PODTEC'); UD_DEF.prefix(K_P_VIEW.SKID_MBP().UD_SCH,K_E_VIEW.UD_SKL);
                                 {? UD_DEF.first()
                                 || UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBP.UD_SCH,UD_DEF.ref());
                                    _ok:=~UD_DEF.first()
                                 ?}
                              ?};
                              _ok & K_E_VIEW.next()
                           !}
                        ?}
                     ?};
                     _ok & K_P_VIEW.next()
                  !}
               ?}
            |? _z.KOD='F'
            || {? _z.REF=0
               || K_P_VIEW.cntx_psh();
                  K_P_VIEW.index('SKID_MBP'); K_P_VIEW.prefix(K_N_VIEW.ref(),_z.REF);
                  {? K_P_VIEW.first()
                  || K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_P_VIEW.ref());
                     {? K_E_VIEW.first()
                     || {!
                        |? {? 1+K_E_VIEW.SLO().KOD<>'M'
                           || _ok:=-1
                           ?};
                           _ok<>-1 & K_E_VIEW.next()
                        !}
                     ?}
                  ?};
                  K_P_VIEW.cntx_pop()
               || K_P_VIEW.cntx_psh();
                  K_P_VIEW.index('SKID_MBP'); K_P_VIEW.prefix(K_N_VIEW.ref(),_z.REF);
                  {? K_P_VIEW.first()
                  || K_E_VIEW.index('UD_SKL'); K_E_VIEW.prefix(K_P_VIEW.ref());
                     {? K_E_VIEW.first()
                     || {!
                        |? {? K_E_VIEW.SUMA
                           || _ok:=-1
                           || UD_DEF.index('PODTEC'); UD_DEF.prefix(K_P_VIEW.SKID_MBP().UD_SCH,K_E_VIEW.UD_SKL);
                              {? UD_DEF.first()
                              || UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBP.UD_SCH,UD_DEF.ref());
                                 {? UD_DEF.first()
                                 || _ok:=-1
                                 ?}
                              ?};
                              {? _ok<>-1
                              || K_FORM.index('K_W_OBL'); K_FORM.prefix(UD_DEF.ref(),K_N_VIEW.K_W_OBL);
                                 {? K_FORM.first() & K_FORM.TYP='F'
                                 || _ok:=-1
                                 ?}
                              ?}
                           ?};
                           _ok<>-1 & K_E_VIEW.next()
                        !}
                     ?}
                  ?};
                  K_P_VIEW.cntx_pop()
               ?}
            |? _z.KOD='T'
            || _ok:=0
            ?};
            {? _ok>0
            || {? _a+1='B'
               || _do.LP:=0;
                  _do_kod:='B'
               || _lp:=1;
                  _do.cntx_psh();
                  {? _dest=null & _do.last()
                  || _do.prefix(0,);
                     _do.last();
                     _dest:=_do.ref()
                  ?};
                  {? _do.seek(_dest)
                  || {? _do.KOD='T'
                     || _do.cntx_psh();
                        _do.prefix(_dest,);
                        {? _do.last() || _lp:=_do.LP+1 || _lp:=1 ?};
                        _do.cntx_pop()
                     || _lp:=_do.LP
                     ?};
                     _r:=_do.ref();
                     _tree:={? _do.KOD='T'
                            || _do.ref()
                            || _do.TREE
                            ?};
                     _do_kod:={? _do.KOD='T'
                              || {? _do.NAZ*'kolumn' || 'K'
                                 |? _do.NAZ*'wiersz' || 'W'
                                 |? _do.NAZ*'filtr'  || 'F'
                                 ?}
                              || _do.KOD
                              ?};
                     _do.cntx_psh();
                     _do.index(_do.ndx_tmp(,,'KOD',,));
                     _do.prefix(_do_kod,);
                     {? _do.last()
                     || {!
                        |? {? _do.LP>=_lp
                           || _do.LP+=1;
                              _do.put()
                           ?};
                           _do.LP>_lp & _do.prev()
                        !}
                     ?};
                     _do.cntx_pop()
                  ?};
                  _do.cntx_pop();
                  _do.LP:=_lp;
                  _do.TREE:=_tree
               ?};
               _do.KOD:=_do_kod;
               _do.REF:=_z.REF;
               _do.NAZ:=_z.NAZ;
               _do.add();
               _z.del();
               {? 1+_a<>'B'
               || _z.cntx_psh();
                  _z.index(_z.ndx_tmp(,,'KOD',,));
                  _z.prefix(_z_kod,);
                  {? _z.first()
                  || _lp:=1;
                     {!
                     |? _z.LP:=_lp; _z.put(); _lp+=1;
                        _z.next()
                     !}
                  ?};
                  _z.cntx_pop()
               ?};
               exec('kpvexe1','control',_z,_z_kod);
               exec('kpvexe1','control',_do,_do_kod)
            ?}
         ?};
         _ok>0 & _tab.next()
      !}
   ?};
   {? _ok>0
   || _z.first();
      _do.first();
      grp_disp(_z,{? _z=TT_KPV_B || win_b || _z.win_sel('?') ?})
   |? _ok=-1
   || FUN.info('Wsród pozycji przenoszonych do filtra są\nelementy z wartościami wyliczeniowymi.'@)
   || {? _a+1='W'
      || FUN.info('W wierszu są elemnty z wartościami wyliczeniowymi.'@)
      |? 1+_a='T'
      || ~~
      || FUN.info('W kolumne są elemnty z wartościami wyliczeniowymi.'@)
      ?}
   ?}
";



exec('k_p_view_dnd','control');

_add:="
{? _a='T'
|| TT_KPV_T.LP:=0;
   TT_KPV_T.KOD:='T';
   TT_KPV_T.REF:=0;
   TT_KPV_T.NAZ:=_d;
   TT_KPV_T.SUMA:=_e;
   TT_KPV_T.add()
|? _a='B'
|| TT_KPV_B.LP:=_b;
   TT_KPV_B.KOD:=_a;
   TT_KPV_B.REF:=_c;
   TT_KPV_B.NAZ:=_d;
   TT_KPV_B.SUMA:=_e;
   TT_KPV_B.add()
|| {? _a='K' || _naz:='Pozycje w kolumnie'
   |? _a='W' || _naz:='Pozycje w wierszu'
   |? _a='F' || _naz:='Pozycje filtra'
   ?};
   {? var_press('_naz') & TT_KPV_T.find_tab(,'NAZ',,'=',_naz,'TREE',,'=',0)
   || TT_KPV_T.TREE:=TT_KPV_T.ref;
      TT_KPV_T.LP:=_b;
      TT_KPV_T.KOD:=_a;
      TT_KPV_T.REF:=_c;
      TT_KPV_T.NAZ:=_d;
      TT_KPV_T.SUMA:={? _a='F' || 2 || _e ?};
      TT_KPV_T.add()
   ?}
?}
";
_add('T',,,'Pozycje w kolumnie',2);
_add('T',,,'Pozycje w wierszu',2);
_add('T',,,'Pozycje filtra',2);

K_P_VIEW.index('SKID_MBP'); K_P_VIEW.prefix(K_N_VIEW.ref());
SKID_MBP.cntx_psh();
SKID_MBP.index('LP'); SKID_MBP.prefix(K_N_VIEW.SKID_MBN);
{? SKID_MBP.first()
|| {!
   |? {? K_P_VIEW.find_key(SKID_MBP.ref())
      || _add(K_P_VIEW.TYP,K_P_VIEW.LP,SKID_MBP.ref(),SKID_MBP.NAZ,K_P_VIEW.ZN_SUMA)
      || _add('B',0,SKID_MBP.ref(),SKID_MBP.NAZ,0)
      ?};
      SKID_MBP.next()
   !}
?};
SKID_MBP.cntx_pop();
{? K_P_VIEW.find_key(null)
|| _add(K_P_VIEW.TYP,K_P_VIEW.LP,0,'Czas',K_P_VIEW.ZN_SUMA)
|| _add('B',0,0,'Czas',0)
?};
TT_KPV_B.hdr_sel(' - %1'@[K_N_VIEW.NAZ]);
TT_KPV_B.select();
VAR_DEL.delete('TT_KPV_B','TT_KPV_T','win_b')


\k_e_view_up
exec('zmien_lpa','#dragdrop','LP','K_E_VIEW',,,'U')


\k_e_view_down
exec('zmien_lpa','#dragdrop','LP','K_E_VIEW',,,'D')


\k_e_view_number
exec('zmien_lpa','#dragdrop','LP','K_E_VIEW',,,'N')


\k_e_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Akcja elemnty tabeli opartej na tabeli K_P_VIEW
::   WE: _a - tabela zrodlowa
::  OLD: \k_e_view/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TT_KEV','TT_KEVI1','TT_KEVI2');
TT_KEV:=tab_tmp(2,
   'TREE','TREE_REF','',
   'SYM','STRING[16]','Symbol'@,
   'OPIS','STRING[60]','Opis'@,
   'REF','INTEGER',,
   'SEL','INTEGER',,
   'WYM','INTEGER',,
   'AKT','INTEGER',
);
TT_KEVI1:=TT_KEV.index('?');
TT_KEVI2:=TT_KEV.ndx_tmp('',1,'REF',,);
TT_KEVI3:=TT_KEV.ndx_tmp('',1,'SYM',, ,'SYM',,);
K_P_VIEW.cntx_psh(); K_P_VIEW.index('SKID_MBP'); K_P_VIEW.prefix(K_N_VIEW.ref());
K_P_VIEW.find_key(_a.REF);
{? K_P_VIEW.SKID_MBP
|| {? K_N_VIEW.UD_SKL & K_P_VIEW.SKID_MBP().LP<>3
   || {? K_P_VIEW.SKID_MBP().LP=1
      || UD_DEF.index('SKLREF'); UD_DEF.prefix(K_N_VIEW.UD_SKL);
         K_P_VIEW.SKID_MBP().UD_SCH;
         {? UD_DEF.first()
         || exec('kev_add','control',0,0)
         ?}
      |? SKID_MBP.LP=2
      || UD_DEF.index('SCHSYM'); UD_DEF.prefix(K_P_VIEW.SKID_MBP().UD_SCH);
         {? UD_DEF.find_key(K_N_VIEW.UD_SKL().SYMBOL,)
         || exec('kev_add','control',0,0)
         ?}
      ?}
   || UD_DEF.index('SYMBOL'); UD_DEF.prefix(K_P_VIEW.SKID_MBP().UD_SCH,0);
      {? UD_DEF.first()
      || {!
         |? exec('kev_add','control',0,0);
            UD_DEF.next()
         !}
      ?}
   ?}
|| exec('kev_slo','control')
?};
TT_KEV.cntx_psh(); TT_KEV.prefix(0);
{? TT_KEV.first()
|| {!
   |? exec('kev_sel','control');
      TT_KEV.next()
   !}
?};
TT_KEV.cntx_pop();
__win:=TT_KEV.mk_sel('Elementy '@,'P',,'keview',,,,1);
TT_KEV.win_fld(__win,,'SYM',,,25);
TT_KEV.win_fld(__win,,'OPIS',,,40);
{? K_N_VIEW.AKC<>'T'
||
::   TT_KEV.win_act(__win,,'Formuła','Wybierz',,,,"exec('kev_ten','control')",1);
   TT_KEV.win_act(__win,,'Formuła','Zaznacz'@@,,,,"exec('kev_ten','control')",,,,,'Z');
   TT_KEV.win_btn(__win,'text=%1,panel=right,align=begin'['Zaznacz'@],'menu:Z');
   TT_KEV.win_act(__win,,'Formuła','Odznacz'@@,,,,"exec('kev_ten','control')",,,,,'O');
   TT_KEV.win_btn(__win,'text=%1,panel=right,align=begin'['Odznacz'@],'menu:O');
   {? K_P_VIEW.SKID_MBP=null
   || TT_KEV.win_act(__win,,'Formuła','Dołącz wykonanie'@@,,,,"exec('kev_ten_wyk','control')",,,,,'D')
   ?};
   {? UD_DEF.UD_SCH().UD_TYP().SYMBOL='STANPRAC'
   || TT_KEV.win_act(__win,,'Formuła','Filtr dla kierownika'@@,,,,"
         TT_KEV.cntx_psh; exec('kierownicy','control'); TT_KEV.cntx_pop
      ",,,,,'F')
   ?};
   TT_KEV.win_act(__win,,'Rekord',,,,"
      {? TT_KEV.SEL=0 | TT_KEV.SEL=2
      || TT_KEV.actions_grayed(__win,'O');
         TT_KEV.actions(__win,,'Z',1)
      || TT_KEV.actions_grayed(__win,'Z');
         TT_KEV.actions(__win,,'O',1)
      ?}
   ")
?};
TT_KEV.win_act(__win,,'Formuła','Zwiń/&rozwiń'@@,,,,"exec('zwrw_all','#tree','TT_KEV','TREE',__win)",,,,,'R');
TT_KEV.win_fml(__win,,'SYM',,'ICON_BEFORE',"
   'xwin16.png:'+
   {? TT_KEV.SEL=0
   || '180'
   |? TT_KEV.SEL=1
   || '179'
   || '178'
   ?}
");
TT_KEV.win_fml(__win,,'OPIS',,'ICON_BEFORE',"
   {? TT_KEV.AKT
   || ''
   || 'xwin16.png:8'

   ?}
");
{? K_N_VIEW.AKC='N'
|| _fun:="
      _ref:=dnd_info('dest_record');
      {? _ref=null & K_E_VIEW.last() || _ref:=K_E_VIEW.ref() ?};
      _tab:=dnd_info('dropped_records'); _ok:=1;
      K_E_VIEW.cntx_psh(); K_E_VIEW.prefix();
      {? _tab.first()
      || {!
         |? {? K_E_VIEW.seek(_tab.REF,)
            || _ok:=K_E_VIEW.K_P_VIEW=K_P_VIEW.ref()
            ?};
            _ok & _tab.next()
         !}
      ?};
      K_E_VIEW.cntx_pop();
      {? _ok & K_E_VIEW.seek(_ref) || exec('zmien_lp','#dragdrop','LP','K_E_VIEW',_tab) ?}
   ";
   {? K_P_VIEW.SKID_MBP
   || K_E_VIEW.dnd_sel('WER_P',,'records.K_E_VIEW',_fun)
   || K_E_VIEW.dnd_sel('WER_C',,'records.K_E_VIEW',_fun)
   ?};
   TT_KEV.dnd_sel(__win,,'records.K_E_VIEW',"
      K_E_VIEW.cntx_psh(); K_E_VIEW.prefix();
      _tab:=dnd_info('dropped_records');
      {? _tab.first()
      || {!
         |? {? K_E_VIEW.seek(_tab.REF,)
            || exec('bd_kev','control',0)
            ?};
            _tab.next()
         !}
      ?};
      K_E_VIEW.cntx_pop();
      {? K_P_VIEW.SKID_MBP
      || grp_disp(K_E_VIEW,'WER_P')
      || grp_disp(K_E_VIEW,'WER_C')
      ?}
   ");
   {? K_P_VIEW.TYP='F'
   || _next:=1
   || K_P_VIEW.cntx_psh();
      K_P_VIEW.index('K_P_VIEW');
      K_P_VIEW.prefix(K_N_VIEW.ref(),K_P_VIEW.TYP);
      _next:=K_P_VIEW.next();
      K_P_VIEW.cntx_pop()
   ?};
   {? K_P_VIEW.SKID_MBP
   || K_E_VIEW.actions('WER_P',{? _next || 'DT' || '' ?})
   || K_E_VIEW.actions('WER_C',{? _next || 'D' || '' ?})
   ?}
|| {? K_P_VIEW.SKID_MBP
   || K_E_VIEW.dnd_sel('WER_P',,'records.K_E_VIEW');
      K_E_VIEW.actions('WER_P','DTUP')
   || K_E_VIEW.dnd_sel('WER_C',,'records.K_E_VIEW');
      K_E_VIEW.actions('WER_C','UDTUP')
   ?};
   TT_KEV.dnd_sel(__win,,'records.K_E_VIEW')
?};
TT_KEV.win_act(__win,,'Formuła','Legenda'@@,,,,"exec('legenda','color','#TT_KEV#01')",,,,,'L');
_gr:=TT_KEV.grp_make('Elementy pozycji widoku'@,"
   K_E_VIEW.first();
   {? K_P_VIEW.SKID_MBP || grp_disp(K_E_VIEW,'WER_P') || grp_disp(K_E_VIEW,'WER_C') ?}
",'#tt_kev_sel');
TT_KEV.grp_sel(_gr,,__win,,,,,,,,,,'maximized_with_title');
TT_KEV.grp_splt(_gr,,'vertical','bottom');
{? K_P_VIEW.SKID_MBP
|| TT_KEV.grp_sel(_gr,K_E_VIEW,'WER_P',,,,,,,,,,'maximized_with_title')
|| TT_KEV.grp_sel(_gr,K_E_VIEW,'WER_C',,,,,,,,,,'maximized_with_title')
?};
TT_KEV.win_sel(_gr);
K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_P_VIEW.ref());
TT_KEV.select();
K_P_VIEW.cntx_pop();
VAR_DEL.delete('TT_KEV','TT_KEVI1','TT_KEVI2','__win')


\kev_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Pomocnicza do akcji elementy tabeli opartej na tabeli K_P_VIEW
::   WE: _a - ref nadrzedny
::       _b - wymagany przy zaznaczeniu elementu nadrzednego 1-tak 0-nie
::  OLD: \kev_add/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~TT_KEV.find_key(_a,UD_DEF.SYMBOL) | TT_KEV.SYM<>UD_DEF.SYMBOL
|| TT_KEV.TREE:=_a;
   TT_KEV.SYM:=UD_DEF.SYMBOL;
   TT_KEV.OPIS:=UD_DEF.OPIS;
   TT_KEV.REF:=#UD_DEF.UD_SKL;
   TT_KEV.WYM:=_b;
   UD_SKL.cntx_psh();
   TT_KEV.AKT:=UD_DEF.UD_SKL().AKTYWNY='T';
   UD_SKL.cntx_pop();
   K_E_VIEW.cntx_psh(); K_E_VIEW.index('UD_SKL'); K_E_VIEW.prefix(K_P_VIEW.ref());
   TT_KEV.SEL:=K_E_VIEW.find_key(TT_KEV.REF);
   K_E_VIEW.cntx_pop();
   {? TT_KEV.add()
   || K_FORM.index('K_W_OBL'); K_FORM.prefix(UD_DEF.ref(),K_N_VIEW.K_W_OBL);
      {? K_FORM.first()
      || {? K_FORM.TYP<>'W'
         || {? K_FORM.TYP='F'
            || TT_KEV.cntx_psh();
               exec('kev_add2','control',1);
               TT_KEV.cntx_pop()
            ?};
            exec('kev_add1','control',~(K_FORM.TYP='F'))
         ?}
      || exec('kev_add1','control',1)
      ?}
   ?}
?}


\kev_add1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Pomocnicza do akcji elementy tabeli opartej na tabeli K_P_VIEW
::   WE: _a - wymagany przy zaznaczeniu elementu nadrzednego 1-tak 0-nie
::  OLD: \kev_add1/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=TT_KEV.ref();
UD_DEF.cntx_psh();
UD_DEF.index('SYMBOL'); UD_DEF.prefix(K_P_VIEW.SKID_MBP().UD_SCH,UD_DEF.ref());
{? UD_DEF.first()
|| {!
   |? exec('kev_add','control',_ref,_a);
      UD_DEF.next()
   !}
?};
UD_DEF.cntx_pop()


\kev_add2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Pomocnicza do akcji elementy tabeli opartej na tabeli K_P_VIEW
::   WE: _a - wymagany przy zaznaczeniu elementu nadrzednego 1-tak 0-nie
::  OLD: \kev_add2/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_fml:=K_FORM.memo_txt(0,1,'F');
{? _fml<>''
|| _ref:=TT_KEV.ref();
   {!
   |? _p:=_fml*'[';
      {? _p
      || _fml:=_p-_fml;
         _p:=_fml*']';
         _sym:=(_p-1)+_fml;
         UD_DEF.cntx_psh();
         UD_DEF.index('SCHSYM'); UD_DEF.prefix(K_P_VIEW.SKID_MBP().UD_SCH,_sym,_sym);
         {? UD_DEF.first()
         || exec('kev_add','control',_ref,_a)
         ?};
         UD_DEF.cntx_pop();
         _fml:=_p-_fml;
         1
      ?}
   !}
?}


\bd_kev
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przed usunieciem elementu widoku dla pozycji widoku typu czas
::   WE: [_a] - czy pytanie przed usunieciem? [1]-tak 0-nie
::  OLD: \bd_kev/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=1 ?};
{? ~K_E_VIEW.sel_size() & _a & ~FUN.ask('Usunąć elementy?'@) || return ?};
K_E_VIEW.cntx_psh();
_ref:={? K_E_VIEW.next() | K_E_VIEW.prev() || K_E_VIEW.ref() ?};
K_E_VIEW.cntx_pop();
{? K_E_VIEW.SUMA
|| {? K_E_VIEW.del(,1)
   || K_E_VIEW.cntx_psh(); K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_P_VIEW.ref());
      _lp:=0;
      {? K_E_VIEW.first()
      || {!
         |? _lp+=1;
            K_E_VIEW.LP:=_lp; K_E_VIEW.put();
            K_E_VIEW.next()
         !}
      ?};
      K_E_VIEW.cntx_pop()
   ?}
|? K_E_VIEW.CZY_WYK='T'
|| SLO.prefix();
   TT_KEV.cntx_psh(); TT_KEV.index(TT_KEVI2);
   K_E_VIEW.cntx_psh(); K_E_VIEW.index('SLO'); K_E_VIEW.prefix(K_P_VIEW.ref());
   _l:=K_E_VIEW.LAT;
   {? TT_KEV.find_key(K_E_VIEW.SLO)
   || TT_KEV.index(TT_KEVI1);
      {!
      |? {? TT_KEV.TREE & TT_KEV.seek(TT_KEV.TREE,)
         || {? SLO.seek(TT_KEV.REF,) & K_E_VIEW.find_key(SLO.ref(),'T',_l)
            || K_E_VIEW.del()
            ?};
            1
         ?}
      !}
   ?};
   K_E_VIEW.cntx_pop();
   TT_KEV.cntx_pop();
   K_E_VIEW.del();
   {? ~K_E_VIEW.sel_size()
   || exec('gad_kev','control')
   ?}
|| TT_KEV.cntx_psh(); TT_KEV.index(TT_KEVI2);
   _ok:=
   {? K_E_VIEW.UD_SKL
   || TT_KEV.find_key(K_E_VIEW.UD_SKL)
   || TT_KEV.find_key(K_E_VIEW.SLO)
   ?};
   {? _ok
   || TT_KEV.index(TT_KEVI1);
      exec('kev_ten','control')
   ?};
   TT_KEV.cntx_pop()
?};
{? _ref || K_E_VIEW.seek(_ref) ?};
{? _a & ~K_E_VIEW.sel_size()
|| grp_disp(TT_KEV,__win)
?}


\gbd_kev
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Grupa przed usunieciu elementu widoku dla pozycji widoku typu czas
::  OLD: \gbd_kev/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy usunąć zaznaczone elementy widoku?'@)
|| sel_nchk();
   1
?}


\gad_kev
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Grupa po usunieciu elementu widoku dla pozycji widoku typu czas
::  OLD: \gad_kev/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K_E_VIEW.cntx_psh(); K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_P_VIEW.ref());
{? K_E_VIEW.first()
|| _lp:=0;
   {!
   |? K_E_VIEW.LP:=_lp+=1;
      K_E_VIEW.put();
      K_E_VIEW.next()
   !}
?};
K_E_VIEW.cntx_pop();
grp_disp(TT_KEV,__win)


\kev_ten
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Akcja ten tabeli opartej na tabeli K_E_VIEW
::   WE: [_a] - zaznaczyc? 1-tak 0-nie
::       [_b] - lat wstecz dla wykonania
::  OLD: \kev_ten/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_sel:=TT_KEV.SEL;
_child:=-1;
{? var_pres('_b')<=0
|| _b:=0
?};
{? var_pres('_a')<=0
|| _child:=exec('has_child','control');
   _a:={? _b=0 & _sel=1 || {? _child || 2 || 0 ?} || 1 ?}
?};
{? _a=1
|| TT_KEV.cntx_psh();
   TT_KEV.prefix(TT_KEV.ref());
   {? TT_KEV.first()
   || {!
      |? {? TT_KEV.WYM || exec('kev_ten','control',_a,_b) ?};
         TT_KEV.next()
      !}
   ?};
   TT_KEV.cntx_pop()
?};
exec('kevten1','control',{? _child<>-1 | ~exec('has_child','control') || _a |? TT_KEV.SEL=0 || 2 || TT_KEV.SEL ?},_b);
{? _child=0
|| {? _a<>1 & TT_KEV.WYM
   || TT_KEV.cntx_psh();
      {!
      |? {? TT_KEV.TREE & TT_KEV.seek(TT_KEV.TREE,)
         || exec('kevten1','control',0,_b);
            1
         ?}
      !};
      TT_KEV.cntx_pop()
   ?}
?};
{? _child<>-1
|| {? _a=1
   || TT_KEV.cntx_psh();
      {!
      |? {? TT_KEV.TREE & TT_KEV.seek(TT_KEV.TREE,)
         || TT_KEV.cntx_psh(); TT_KEV.prefix(TT_KEV.ref());
            _all:=1;
            {? TT_KEV.first()
            || {!
               |? _all*={? TT_KEV.WYM || TT_KEV.SEL || 1 ?};
                  _all & TT_KEV.next()
               !}
            ?};
            TT_KEV.cntx_pop();
            {? _all
            || exec('kevten1','control',{? TT_KEV.SEL=0 || 2 || TT_KEV.SEL ?},_b)
            ?};
            1
         ?}
      !};
      TT_KEV.cntx_pop()
   ?};
   {? ~_a & ~K_E_VIEW.sel_size()
   || K_E_VIEW.cntx_psh(); K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_P_VIEW.ref());
      _lp:=0;
      {? K_E_VIEW.first()
      || {!
         |? _lp+=1;
            K_E_VIEW.LP:=_lp; K_E_VIEW.put();
            K_E_VIEW.next()
         !}
      ?};
      K_E_VIEW.cntx_pop()
   ?};
   {? K_P_VIEW.SKID_MBP
   || grp_disp(K_E_VIEW,'WER_P')
   || grp_disp(K_E_VIEW,'WER_C')
   ?}
?}


\kevten1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Akcja ten tabeli opartej na tabeli K_E_VIEW
::   WE: _a - zaznaczyc? 1-tak 0-nie
::       _b - lat wstecz dla wykonania
::  OLD: \kevten1/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
UD_SKL.cntx_psh(); UD_SKL.prefix();
SLO.prefix();
K_E_VIEW.cntx_psh();
{? K_P_VIEW.SKID_MBP
|| K_E_VIEW.index('UD_SKL')
|| K_E_VIEW.index('SLO')
?};
K_E_VIEW.prefix(K_P_VIEW.ref());
{? K_P_VIEW.SKID_MBP & UD_SKL.seek(TT_KEV.REF,) |
   K_P_VIEW.SKID_MBP=null & SLO.seek(TT_KEV.REF,)
|| _ref:={? K_P_VIEW.SKID_MBP || UD_SKL.ref() || SLO.ref() ?};
   {? _a=1
   || _jest:=K_P_VIEW.SKID_MBP & K_E_VIEW.find_key(UD_SKL.ref()) |
             ~K_P_VIEW.SKID_MBP & K_E_VIEW.find_key(SLO.ref(),{? _b || 'T' || 'N' ?},_b);
      {? (_b | TT_KEV.SEL<>1) & ~_jest
      ||
::         {? K_P_VIEW.TYP<>'F' | ~exec('has_child','control')
         {? ~exec('has_child','control') | K_P_VIEW.TYP<>'F' & exec('lastpoz','control')
         || K_E_VIEW.K_P_VIEW:=K_P_VIEW.ref();
            {? K_P_VIEW.SKID_MBP
            || K_E_VIEW.UD_SKL:=_ref
            || K_E_VIEW.SLO:=_ref;
               K_E_VIEW.OPIS:=TT_KEV.OPIS;
               K_E_VIEW.CZY_WYK:={? _b=0 || 'N' || 'T' ?};
               K_E_VIEW.LAT:=_b
            ?};
            K_E_VIEW.cntx_psh();
            K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_P_VIEW.ref());
            _lp:={? K_E_VIEW.last() || K_E_VIEW.LP || 0 ?}+1;
            K_E_VIEW.cntx_pop();
            K_E_VIEW.LP:=_lp;
            K_E_VIEW.SUMA:=0;
            K_E_VIEW.READONLY:='N';
            K_E_VIEW.add();
            {? _b=0
            || TT_KEV.SEL:=1; TT_KEV.put();
               exec('kevten2','control',_a,_b)
            ?}
         || TT_KEV.SEL:=2; TT_KEV.put();
            exec('kevten2','control',_a,_b)
         ?}
      ?}
   || {? exec('has_child','control') & _a=1
      || {? TT_KEV.SEL &
            (K_P_VIEW.SKID_MBP & K_E_VIEW.find_key(_ref) |
             K_P_VIEW.SKID_MBP=null & K_E_VIEW.find_key(_ref,{? _b || 'T' || 'N' ?},_b))
         || exec('kev_del','control')
         ?};
         TT_KEV.SEL:=2; TT_KEV.put();
         exec('kevten2','control',_a,_b)

      || {? TT_KEV.SEL &
            (K_P_VIEW.SKID_MBP & K_E_VIEW.find_key(_ref) |
             K_P_VIEW.SKID_MBP=null & K_E_VIEW.find_key(_ref,{? _b || 'T' || 'N' ?},_b))
         || exec('kev_del','control')
         ?};
         TT_KEV.SEL:=_a; TT_KEV.put();
         exec('kevten2','control',_a,_b)

      ?}
   ?}
?};
K_E_VIEW.cntx_pop();
UD_SKL.cntx_pop()


\kevten2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Akcja ten tabeli opartej na tabeli K_E_VIEW
::   WE: _a - zaznaczyc? 1-tak 0-nie
::       _b - lat wstecz dla wykonania
::  OLD: \kevten2/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_sym:=TT_KEV.SYM; _sel:=TT_KEV.SEL; _ref:=TT_KEV.ref();
TT_KEV.cntx_psh(); TT_KEV.index(TT_KEVI3); TT_KEV.prefix(_sym,_sym);
{? TT_KEV.first()
|| {!
   |? {? TT_KEV.ref()<>_ref
      || TT_KEV.cntx_psh(); TT_KEV.prefix();
         TT_KEV.SEL:=_sel; TT_KEV.put();
         TT_KEV.cntx_pop()
      ?};
      TT_KEV.next()
   !}
?};
TT_KEV.cntx_pop()


\has_child
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Czy galaz ma podpiete galezie w tabeli tymczasowej TT_KEV
::  OLD: \has_child/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
TT_KEV.cntx_psh(); TT_KEV.prefix(TT_KEV.ref());
_ok:=TT_KEV.first();
TT_KEV.cntx_pop();
_ok


\lastpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Czy pozycja widoku jest ostatnia danego typu
::  OLD: \lastpoz/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K_P_VIEW.cntx_psh(); K_P_VIEW.index('K_P_VIEW'); K_P_VIEW.prefix(K_P_VIEW.K_N_VIEW,K_P_VIEW.TYP);
_lp:={? K_P_VIEW.last() || K_P_VIEW.LP || 0 ?};
K_P_VIEW.cntx_pop();
K_P_VIEW.LP=_lp


\kev_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Usuniecie elementu widoku
::  OLD: \kev_del/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K_E_VIEW.cntx_psh();
K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_E_VIEW.K_P_VIEW);
{? K_E_VIEW.del(,1)=2
|| {!
   |? K_E_VIEW.LP-=1;
      K_E_VIEW.put();
      K_E_VIEW.next()
   !}
?};
K_E_VIEW.cntx_pop()


\kev_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Uzupełnia tabele tymczasowa TT_KEV dla okresow
::  OLD: \kev_slo/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
SLU.index('NAZ'); SLU.prefix('~TYPY OKRESÓW');
{? SLU.first() & SLU.NAZ='~TYPY OKRESÓW'
|| SLO.index('SL');
   _fun:="
      SLO.prefix(SLU.ref());
      {? SLO.find_key(_a)
      || TT_KEV.TREE:=_b;
         TT_KEV.SYM:=SLO.KOD;
         TT_KEV.OPIS:={? _>2 || _c || SLO.TR ?};
         TT_KEV.REF:=#SLO.ref();
         K_E_VIEW.cntx_psh(); K_E_VIEW.index('SLO'); K_E_VIEW.prefix(K_P_VIEW.ref(),SLO.ref());
         TT_KEV.SEL:=K_E_VIEW.first();
         K_E_VIEW.cntx_pop();
         TT_KEV.WYM:=1;
         TT_KEV.AKT:=1;
         TT_KEV.add();
         SLO.next()
      ?}
   ";
   _fun2:="
      SLO.prefix(SLU.ref());
      OKRO_F.index('KWARTAL'); OKRO_F.prefix(ROK_F.ref(),_a);
      {? OKRO_F.first()
      || {!
         |? _kod:={? OKRO_F.NR=ROK_F.LOBR+1 || 'M99' || 'M'+(('0'+$OKRO_F.NR)+2) ?};
            {? SLO.find_key(_kod)
            || TT_KEV.TREE:=_b;
               TT_KEV.SYM:=SLO.KOD;
               TT_KEV.OPIS:=OKRO_F.NAZ;
               TT_KEV.REF:=#SLO.ref();
               K_E_VIEW.cntx_psh(); K_E_VIEW.index('SLO'); K_E_VIEW.prefix(K_P_VIEW.ref(),SLO.ref());
               TT_KEV.SEL:=K_E_VIEW.first();
               K_E_VIEW.cntx_pop();
               TT_KEV.WYM:=1;
               TT_KEV.add()
            ?};
            OKRO_F.next()
         !}
      ?}
   ";
   {? K_N_VIEW.K_HARM_P
   || _ok:=0;
      ROK_F.index('KOD'); ROK_F.prefix(REF.S_FIRMA);
      {? ROK_F.first()
      || _rdo:=K_HARM.DO().ROK;
         K_HARM.OD().ROK();
         _ref:=ROK_F.ref(); _lo:=ROK_F.LOBR;
         {!
         |? {? _lo<ROK_F.LOBR
            || _lo:=ROK_F.LOBR;
               _ref:=ROK_F.ref()
            ?};
            ROK_F.ref()<>_rdo & ROK_F.next()
         !};
         {? ROK_F.seek(_ref)
         || _ok:=2
         ?}
      ?}
   || _ok:=1
   ?};
   {? _ok
   || _fun('R00',0); _r_rok:=TT_KEV.ref();
         _fun('P01',_r_rok); _r_pol:=TT_KEV.ref();
            _fun('K01',_r_pol); _r_kw:=TT_KEV.ref();
               {? _ok=1
               || _fun('M00',_r_kw); _fun('M01',_r_kw); _fun('M02',_r_kw); _fun('M03',_r_kw)
               || _fun2(1,_r_kw)
               ?};
           _fun('K02',_r_pol); _r_kw:=TT_KEV.ref();
               {? _ok=1
               || _fun('M04',_r_kw); _fun('M05',_r_kw); _fun('M06',_r_kw)
               || _fun2(2,_r_kw)
               ?};
         _fun('P02',_r_rok); _r_pol:=TT_KEV.ref();
            _fun('K03',_r_pol); _r_kw:=TT_KEV.ref();
               {? _ok=1
               || _fun('M07',_r_kw); _fun('M08',_r_kw); _fun('M09',_r_kw)
               || _fun2(3,_r_kw)
               ?};
           _fun('K04',_r_pol); _r_kw:=TT_KEV.ref();
               {? _ok=1
               || _fun('M10',_r_kw); _fun('M11',_r_kw); _fun('M12',_r_kw); _fun('M99',_r_kw)
               || _fun2(4,_r_kw)
               ?}
   ?}
?}


\kev_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Ustawia znacznik zaznaczenia na tabeli tymczasowej TT_KEV
::  OLD: \kev_sel/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
::{? TT_KEV.SEL=1 || return(1) ?};
_zn:=0; _all:=0;
TT_KEV.cntx_psh(); TT_KEV.prefix(TT_KEV.ref());
{? TT_KEV.first()
|| _sel:=0;
   {!
   |? exec('kev_sel','control');
      _sel+=(TT_KEV.SEL<>0);
      TT_KEV.next()
   !};
   _all:=_sel=TT_KEV.size()
?};
TT_KEV.cntx_pop();
{? _all
|| K_E_VIEW.cntx_psh();
   {? K_P_VIEW.SKID_MBP
   || K_E_VIEW.index('UD_SKL')
   || K_E_VIEW.index('SLO')
   ?};
   K_E_VIEW.prefix(K_P_VIEW.ref());
   _zn:={? K_E_VIEW.find_key(TT_KEV.REF) || 1 || 2 ?};
   K_E_VIEW.cntx_pop();
   TT_KEV.SEL:=_zn; TT_KEV.put()
?}


\kev_ten_wyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Rekord po tabeli K_E_VIEW
::  OLD: \kev_ten_wyk/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
undefine();
define('LAT',1, 'Lat wstecz'@,'Liczba lat wstecz dla wykonania'@,,10);
{? def_edit("
      _r:=chk_rec();
      {? _r='' & DEFINE.LAT<0
      || FUN.info('Liczba lat wstecz powinna być dodatnia.'@);
         _r:='LAT'
      ?};
      _r
   ",'Wykonanie'@)
|| exec('kev_ten','control',,DEFINE.LAT)
?};
undefine()


\kpvexe1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Uaktualinia zapisy w tabeli K_P_VIEW na podtawie danych w tabelach tymczasowych
::   WE: _a - tabela tmczasowa
::       _b - wartość pola KOD modyfikowanego rekordu
::  OLD: \kpvexe1/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_typ:=_b;
K_P_VIEW.index('SKID_MBP'); K_P_VIEW.prefix(K_N_VIEW.ref());
_a.cntx_psh();
{? _typ='B'
|| {? _a.first()
   || {!
      |? {? K_P_VIEW.find_key(_a.REF)
         || K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_P_VIEW.ref());
            {? K_E_VIEW.first()
            || {! |? K_E_VIEW.del() !}
            ?};
            K_P_VIEW.del()
         ?};
         _a.next()
      !}
   ?}
|| _ndx:=_a.ndx_tmp(,,'KOD',,);
   _a.index(_ndx);
   _a.prefix(_typ);
   {? _a.first()
   || {!
      |? {? K_P_VIEW.find_key(_a.REF)
         || K_P_VIEW.LP:=_a.LP;
            K_P_VIEW.TYP:=_typ;
            K_P_VIEW.ZN_SUMA:={? _a.SUMA=2 || 0 || _a.SUMA ?};
            K_P_VIEW.put()
         || K_P_VIEW.K_N_VIEW:=K_N_VIEW.ref();
            K_P_VIEW.LP:=_a.LP;
            K_P_VIEW.TYP:=_typ;
            K_P_VIEW.ZN_SUMA:={? _a.SUMA=2 || 0 || _a.SUMA ?};
            SKID_MBP.cntx_psh(); SKID_MBP.prefix();
            K_P_VIEW.SKID_MBP:={? _a.REF & SKID_MBP.seek(_a.REF,) || SKID_MBP.ref() || null ?};
            SKID_MBP.cntx_pop();
            K_P_VIEW.add()
         ?};
         _a.next()
      !}
   ?}
?};
_a.cntx_pop()


\k_p_view_suma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Czy mozliwe zaznaczene podsumowania na pozycji widoku danych
::  OLD: \k_p_view_suma/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_str:='';
K_P_VIEW.cntx_psh();
K_P_VIEW.index('K_P_VIEW'); K_P_VIEW.prefix(K_P_VIEW.K_N_VIEW,K_P_VIEW.TYP,);
K_E_VIEW.index('K_E_VIEW');
_ile:=1;
{!
|? {? K_P_VIEW.next()
   || K_E_VIEW.prefix(K_P_VIEW.ref());
      _ile*=K_E_VIEW.size();
      1
   ?}
!};
K_P_VIEW.cntx_pop();
K_E_VIEW.prefix(K_P_VIEW.ref());
_ele:=K_E_VIEW.size();
{! _i:=1.._ele
|! _str+='+A'+$(_i*_ile)
!};
_ile:=+_str;
_ile<=8192


\knv_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Akcja akceptuj/anuluj tabeli K_N_VIEW
::   WE: _a - 1-akceptacja 0-anulowanie akceptacji
::  OLD: \knv_akc/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| {? K_N_VIEW.AKC='N'
   || {? exec('kpv_chk','control',0)
      || K_N_VIEW.AKC:='T';
         K_N_VIEW.cntx_psh(); K_N_VIEW.prefix();
         K_N_VIEW.put();
         K_N_VIEW.cntx_pop()
      ?}
   || FUN.info('Szablon jest już zaakceptowany.'@)
   ?}
|| {? K_N_VIEW.AKC='T'
   || K_N_VIEW.AKC:='N';
      K_N_VIEW.cntx_psh(); K_N_VIEW.prefix();
      K_N_VIEW.put();
      K_N_VIEW.cntx_pop()
   || FUN.info('Szablon nie jest zaakceptowany.'@)
   ?}
?}


\kpv_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Sprawdza poprawnosc pozycji w widoku modelu
::   WE:  _a  - sprawdzac czy sa pozycje
::       [_b] - czy pokazywac komunikaty [1] - tak, 0 - nie
::  OLD: \kpv_chk/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=1 || _b:=1 ?};
_ok:=1;
K_P_VIEW.cntx_psh();
K_P_VIEW.index('K_P_VIEW');
K_P_VIEW.prefix(K_N_VIEW.ref(),'K');
{? ~K_P_VIEW.first()
|| {? _b || FUN.info('Brak elementu w kolumnie.'@) ?};
   _ok:=0
?};
{? _ok
|| K_P_VIEW.prefix(K_N_VIEW.ref(),'W');
   {? ~K_P_VIEW.first()
   || {? _b || FUN.info('Brak elementu w wierszu.'@) ?};
      _ok:=0
   ?}
?};
{? _ok
|| K_P_VIEW.prefix(K_N_VIEW.ref());
   SKID_MBP.cntx_psh();
   SKID_MBP.index('LP'); SKID_MBP.prefix(K_N_VIEW.SKID_MBN);
   {? K_P_VIEW.size()<>SKID_MBP.size()+1
   || {? _b || FUN.info('Istnieją pozycje nie przypisane\ndo kolumny, wiersza lub filtru.'@) ?};
      _ok:=0
   ?};
   SKID_MBP.cntx_pop()
?};
{? _ok & _a
|| K_P_VIEW.prefix(K_N_VIEW.ref());
   {? K_P_VIEW.first()
   || K_E_VIEW.index('K_E_VIEW');
      {!
      |? K_E_VIEW.prefix(K_P_VIEW.ref());
         _ok:=K_E_VIEW.first();
         _ok & K_P_VIEW.next()
      !};
      {? _ok=0
      || {? _b || FUN.info('Brak elementów w pozycjach widoku.'@) ?}
      ?}
   ?}
?};
{? _ok
|| K_P_VIEW.prefix(K_N_VIEW.ref());
   {? K_P_VIEW.first()
   || K_E_VIEW.index('K_E_VIEW');
      {!
      |? K_E_VIEW.prefix(K_P_VIEW.ref());
         _ok:=~K_E_VIEW.first() | K_E_VIEW.SUMA=0 | K_E_VIEW.SUMATYP<>'P' | ~K_E_VIEW.last() | K_E_VIEW.SUMA=0 | K_E_VIEW.SUMATYP='P';
         _ok & K_P_VIEW.next()
      !};
      {? _ok=0
      || {? _b || FUN.info('Element sumacyjny nie może być\npierwszym elementem w pozycjach widoku.'@) ?}
      ?}
   ?}
?};
K_HARM.cntx_psh();
K_HARM_P.cntx_psh();
_typ:=K_N_VIEW.K_HARM_P().K_HARM().ARKUSZ;
K_HARM_P.cntx_pop();
K_HARM.cntx_pop();
{? _ok & _typ='E'
|| K_P_VIEW.prefix(K_N_VIEW.ref());
   {? K_P_VIEW.first()
   || K_E_VIEW.index('K_E_VIEW');
      {!
      |? {? K_P_VIEW.ZN_SUMA
         || _ok:=exec('k_p_view_suma','control')
         ?};
         _ok & K_P_VIEW.next()
      !};
      {? _ok=0
      || {? _b
         || _ok:=FUN.ask(
               'Zbyt duża liczba elementów w podsumowaniu \'%1\'.\n'
               'Po wygenerowaniu arkusza formuła sumująca\n'
               'przekroczy maksymalny rozmiar i \n'
               'będzie zawierać wpis ZBYT_DŁUGA_FORMUŁA.\n'
               'Czy kontynuować?'@[K_P_VIEW.SKID_MBP().NAZ])
         ?}
      ?}
   ?}
?};
{? _ok & _typ='G'
|| _licz:=obj_new('W','K','F');
   _licz.W:=exec('licz','control','W');
   _licz.K:=exec('licz','control','K');
   _licz.F:=exec('licz','control','F');
   _row:=3+_licz.K.POZ+_licz.W.ELE;
   _col:=_licz.W.POZ+_licz.K.ELE;
   _ile:=_row*_col*_licz.F.ELE;
   {? _ile>2000000
   || FUN.info(
         'Zbyt duża liczba elementów w widoku.\n'
         'Liczba komórek w wygenerowanym arkuszu Google: %1.\n'
         'Dozwolona liczba komórek to 2.000.000.'@[form(_ile)]
      );
      _ok:=0
   ?}
?};
K_P_VIEW.cntx_pop();
_ok


\licz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Oblicza liczbę elementów wskazanego typu
::   WE: _a - typ
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_licz:=obj_new('POZ','ELE');
_licz.POZ:=0;
_licz.ELE:=0;
K_P_VIEW.prefix(K_N_VIEW.ref(),_a);
{? K_P_VIEW.first()
|| _licz.POZ:=K_P_VIEW.size();
   _licz.ELE:=1;
   {!
   |? K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_P_VIEW.ref());
      {? K_P_VIEW.SKID_MBP=null
      || _ile:=K_E_VIEW.size();
         _lat:=(K_HARM.DO().ROK().POCZ_ROK~1)-(K_HARM.OD().ROK().POCZ_ROK~1)+1;
         _licz.ELE*=_ile*_lat
      || _licz.ELE*=K_E_VIEW.size()
      ?};
      K_P_VIEW.next()
   !}
?};
_licz


\set_kev_lp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Ustawia pole LP elemntow widoku danych
::   WE: _a - naprawiac ewentualne bledy numeracji? 1-tak 0-nie
::   WY: czy byly bledy numeracji?
::  OLD: \set_kev_lp/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_err:=0;
K_P_VIEW.cntx_psh();
K_E_VIEW.cntx_psh();
K_P_VIEW.index('K_P_VIEW');
K_P_VIEW.prefix(K_N_VIEW.ref());
{? K_P_VIEW.first()
|| {!
   |? K_E_VIEW.index('K_E_VIEW');
      K_E_VIEW.prefix(K_P_VIEW.ref());
      {? K_E_VIEW.first()
      || _lp:=0;
         {!
         |? _nlp:=_lp+=1;
            {? K_E_VIEW.LP<>_nlp
            || {? _a
               || K_E_VIEW.LP:=_nlp;
                  K_E_VIEW.put()
               ?};
               _err:=1
            ?};
            (_err=0 | _a) & K_E_VIEW.next()
         !}
      ?};
      (_err=0 | _a) & K_P_VIEW.next()
   !}
?};
K_E_VIEW.cntx_pop();
K_P_VIEW.cntx_pop();
_err


\btn_akc_upd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Odświeżenie dostępności przycisków
::----------------------------------------------------------------------------------------------------------------------
{? K_HARM_P.STATUS='Z'
|| TT_KPV_B.btn_eopt(btnPanel,btnA,'state=grayed');
   TT_KPV_B.btn_eopt(btnPanel,btnN,'state=grayed')
|? K_N_VIEW.AKC='T'
|| TT_KPV_B.btn_eopt(btnPanel,btnA,'state=grayed');
   TT_KPV_B.btn_eopt(btnPanel,btnN,'state=normal')
|| TT_KPV_B.btn_eopt(btnPanel,btnA,'state=normal');
   TT_KPV_B.btn_eopt(btnPanel,btnN,'state=grayed')
?}


\knv_akc_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Akcja na przycisk Akceptuj lub Anuluj widoku danych
::   WE: _a - 1-akceptacja 0-anulowanie
::----------------------------------------------------------------------------------------------------------------------
{? K_N_VIEW.K_HARM_P
|| exec('k_harm_p_akc_vi','control',_a,0)
|| exec('knv_akc','control',_a)
?};
exec('btn_akc_upd','control');
exec('k_p_view_dnd','control');
''


\k_p_view_dnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia drag&drop w oknie z pozycjami widoku danych
::----------------------------------------------------------------------------------------------------------------------
{? K_N_VIEW.AKC<>'T'
|| TT_KPV_B.dnd_sel(win_b,,'records.kpviewt',"dnd('TB')");
   TT_KPV_B.win_act(win_b,,'Formuła','Do Pozycji',,,"dnd_interm('BT')");
   TT_KPV_T.dnd_sel(TT_KPV_T.win_sel('?'),,'records.kpviewb',"dnd('BT')");
   TT_KPV_T.win_act(TT_KPV_T.win_sel('?'),,'Formuła','Cofnij z Pozycji',,,"dnd_interm('TB')")
|| TT_KPV_B.dnd_sel(win_b,,'records.kpviewt',"");
   TT_KPV_T.dnd_sel(TT_KPV_T.win_sel('?'),,'records.kpviewb',"")
?}


\kharm_stat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Zmiana statusu harmonogramu
::   WE: _a - status
::  OLD: \kharm_stat/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K_HARM.cntx_psh(); K_HARM.prefix();
K_HARM.STATUS:=_a;
{? _a='Z' | _a='K'
|| K_HARM.STATUS_K:=_a
|| K_HARM.STATUS_K:='A'
?};
K_HARM.put();
K_HARM.cntx_pop()


\ex_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przygotowuje pseudo formule dla excela
::   WE: _a - ref sql tabeli K_P_VIEW
::       _b - tabela wyniku procedury wbudowanej
::  OLD: \ex_form/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K_P_VIEW.prefix();
{? K_P_VIEW.seek(BIT.sqlint(_a),)
|| K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_P_VIEW.ref());
   ind0:=_b.index('?');
   ind1:=_b.ndx_tmp(,,'SYM',,);
   SKIDXDUD.index('POZ'); SKIDXDUD.prefix();
   fml:="
      _kod:=0;
      _b.cntx_psh(); _b.index(ind1); _b.prefix(_a);
      {? _b.first()
      || _kod:=_b.LP
      ?};
      _b.cntx_pop();
      $_kod
   ";
   fml_ud:="
      _typ:='';
      K_FORM.index('K_W_OBL'); K_FORM.prefix(UD_DEF.ref(),K_P_VIEW.K_N_VIEW().K_W_OBL);
      {? K_FORM.first()
      || _typ:=K_FORM.TYP
      ?};
      {? _c=1
      || {? K_E_VIEW.SUMA
         || _b.SYMBOL:=K_E_VIEW.SYMBOL;
            _b.OPIS:=K_E_VIEW.OPIS2;
            _b.SYM:='Suma';
            _f:='_';
            _b.cntx_psh();
            _b.index(ind0);
            {!
            |? {? K_E_VIEW.SUMATYP<>'N' & _b.prev() |
                  K_E_VIEW.SUMATYP='N' & _b.next()
               || {? |_b.FORMULA1='' & _b.SUMATYP=''
                  || _f+='['+$_b.LP+']+'
                  ?};
                  1
               ?}
            !};
            _b.cntx_pop();
            _f:=_f-1
         ?}
      |? _typ='F'
      || _f:='';
         _fml:=K_FORM.memo_txt(0,1,'F');
         {? _fml<>''
         || _fml:=STR.gsub(_fml,'{?','JEŻELI(');
            _fml:=STR.gsub(_fml,'||',';');
            _fml:=STR.gsub(_fml,'?}',')');
            {!
            |? _p:=_fml*'[';
               {? _p
               || _f+=(_p-1)+_fml;
                  _fml:=_p-_fml;
                  _p:=_fml*']';
                  _sym:=(_p-1)+_fml;
                  UD_DEF.cntx_psh();
                  UD_DEF.index('SCHSYM'); UD_DEF.prefix(K_P_VIEW.SKID_MBP().UD_SCH,_sym,_sym);
                  {? UD_DEF.first()
                  || _f1:=fml_ud(_a+1,_b,0);
                     {? _f1=''
                     || _f1:=fml(UD_DEF.SYMBOL,_b);
                        {? _f1<>'0'
                        || _f+='['+_f1+']'
                        ?}
                     || _f+='('+_f1+')'
                     ?}
                  ?};
                  UD_DEF.cntx_pop();
                  _fml:=_p-_fml;
                  1
               || _f+=_fml;
                  0
               ?}
            !}
         ?}
      || UD_DEF.cntx_psh();
         UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBP.UD_SCH,UD_DEF.ref());
         {? _typ<>'W' & UD_DEF.first()
         || _f:='';
            {!
            |? {? SKID_MBP.LP=1
               || SKIDXDUD.index('POZ'); SKIDXDUD.prefix(UD_DEF.UD_SKL);
                  {? UD_DEF.ZN_AGR<>'~' & SKIDXDUD.first()
                  || __Czy_l:=__Czy_l | SKIDXDUD.ONLY_L='T';
                     _zn:=UD_DEF.ZN_AGR;
                     {? _zn='*' | _zn='/'
                     || _ff:=fml_ud(_a+1,_b,0);
                        {? _ff<>''
                        || _f:={? _f<>'' || '( '+_f+' )'+_zn || '' ?}+'('+_ff+')'
                        ?}
                     || _ff:=fml_ud(_a+1,_b,0);
                        {? _ff<>''
                        || _f+={? _f<>'' | _zn='-' || _zn || '' ?}+'('+_ff+')'
                        ?}
                     ?}
                  ?}
               || _ff:=fml_ud(_a+1,_b,0);
                  {? _ff<>''
                  || _f+={? _f<>'' || '+' || '' ?}+_ff
                  ?}
               ?};
               UD_DEF.next()
            !}
         || {? _a=0
            || _f:=''
            || _ff:=fml(UD_DEF.SYMBOL,_b);
               _f:={? _ff<>'0' || '['+_ff+']'  || '' ?}
            ?}
         ?};
         UD_DEF.cntx_pop()
      ?};
      _f
   ";
   {! _iter:=0..1
   |! {? _b.first()
      || {!
         |? {? K_E_VIEW.find_key(_b.LP)
            || _ok:=0;
               _formula:='';
               {? _iter=1 & K_E_VIEW.SUMA
               || _formula:=fml_ud(0,_b,_iter);
                  _ok:=1
               |? _iter=0 & K_E_VIEW.UD_SKL
               || UD_DEF.index('PODTEC');
                  UD_DEF.prefix(K_P_VIEW.SKID_MBP().UD_SCH);
                  {? UD_DEF.find_key(K_E_VIEW.UD_SKL)
                  || __Czy_l:=0;
                     _formula:=fml_ud(0,_b,_iter);
                     {? _formula<>''
                     || SKIDXDUD.prefix();
                        _formula:=
                        {? SKID_MBP.LP=1 & SKIDXDUD.find_key(UD_DEF.UD_SKL) & SKIDXDUD.ONLY_L='T' | __Czy_l
                        || 'L'
                        || '_'
                        ?}+_formula
                     ?}
                  ?};
                  _ok:=1
::               _formula
               ?};
               {? _ok
               || _b.FORMULA1:=200+_formula; _formula:=200-_formula;
                  _b.FORMULA2:=200+_formula; _formula:=200-_formula;
                  _b.FORMULA3:=200+_formula; _formula:=200-_formula;
                  _b.FORMULA4:=200+_formula; _formula:=200-_formula;
                  _b.FORMULA5:=200+_formula; _formula:=200-_formula;
                  _b.FORMULA6:=200+_formula; _formula:=200-_formula;
                  _b.FORMULA7:=200+_formula; _formula:=200-_formula;
                  _b.FORMULA8:=200+_formula; _formula:=200-_formula;
                  _b.FORMULA9:=200+_formula; _formula:=200-_formula;
                  _b.FORMULAA:=200+_formula; _formula:=200-_formula;
                  _b.FORMULAB:=200+_formula; _formula:=200-_formula;
                  _b.put();
                  {!
                  |? {? _formula<>''
                     || _b.FORMULA1:=200+_formula; _formula:=200-_formula;
                        _b.FORMULA2:=200+_formula; _formula:=200-_formula;
                        _b.FORMULA3:=200+_formula; _formula:=200-_formula;
                        _b.FORMULA4:=200+_formula; _formula:=200-_formula;
                        _b.FORMULA5:=200+_formula; _formula:=200-_formula;
                        _b.FORMULA6:=200+_formula; _formula:=200-_formula;
                        _b.FORMULA7:=200+_formula; _formula:=200-_formula;
                        _b.FORMULA8:=200+_formula; _formula:=200-_formula;
                        _b.FORMULA9:=200+_formula; _formula:=200-_formula;
                        _b.FORMULAA:=200+_formula; _formula:=200-_formula;
                        _b.FORMULAB:=200+_formula; _formula:=200-_formula;
                        _b.add()
                     ?}
                  !}
               ?}
            ?};
            _b.next()
         !}
      ?}
   !}
?}


\ex_formt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przygotowuje pseudo formule dla excela - wymiar czasu
::   WE: _a - ref sql tabeli K_P_VIEW
::       _b - tabela wyniku procedury wbudowanej
::       _c - nr rekordu K_HARM
::  OLD: \ex_formt/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K_HARM.prefix();
K_P_VIEW.prefix();
{? K_P_VIEW.seek(BIT.sqlint(_a),) & (_c=0 | K_HARM.seek(_c,))
|| K_E_VIEW.index('K_E_VIEW'); K_E_VIEW.prefix(K_P_VIEW.ref());
   ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.S_FIRMA);
   OKRO_F.index('FIRMA_NR'); OKRO_F.prefix();
   {? _c=0
   || OKRO_F.cntx_psh();
      OKRO_F.index('KON'); OKRO_F.prefix(REF.S_FIRMA);
      {? OKRO_F.find_ge(date())
      || OKRO_F.ROK()
      || ROK_F.last()
      ?};
      OKRO_F.cntx_pop();
      OKRO_F.cntx_psh();
      OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
      OKRO_F.first(); _o1:=OKRO_F.ref();
      OKRO_F.last(); _o2:=OKRO_F.ref();
      OKRO_F.cntx_pop()
   || _o1:=K_HARM.OD;
      _o2:=K_HARM.DO
   ?};
   _lp:=1;
   _r2:={? OKRO_F.seek(_o2) || OKRO_F.ROK || null ?};
   {? OKRO_F.seek(_o1) & _r2
   || OKRO_F.ROK();
      {!
      |? {? K_E_VIEW.first()
         || {!
            |? ROK_F.cntx_psh(); OKRO_F.cntx_psh();
               _kod:=K_E_VIEW.SLO().KOD;
               _n:=#(SLO.KOD+2);
               _k:=1+_kod;
               _b.blank();
               {? K_E_VIEW.SUMA
               || _b.LP:=_lp; _lp+=1;
                  _b.SYMBOL:=K_E_VIEW.SYMBOL;
                  _b.OPIS:=K_E_VIEW.OPIS2;
                  _b.SYM:='Suma';
                  _b.SUMATYP:=K_E_VIEW.SUMATYP;
                  _b.READONLY:='T';
                  _b.add()
               |? _k='M'
               || OKRO_F.index('ROK');
                  {? _n=99
                  || OKRO_F.prefix(ROK_F.ref())
                  || OKRO_F.prefix(ROK_F.ref(),_n)
                  ?};
                  {? (_n=99 & OKRO_F.last() | _n<>99 & OKRO_F.first()) & exec('okr_in','control',_kod,_o1,_o2,K_E_VIEW.LAT)
                  || _b.LP:=_lp; _lp+=1;
                     {? _n=0
                     || _b.SYMBOL:='00 '+ROK_F.NAZ;
                        _b.OPIS:='Bilans otwarcia '+ROK_F.NAZ
                     |? _n=99
                     || _b.SYMBOL:='99 '+ROK_F.NAZ;
                        _b.OPIS:='Bilans zamknięcia '+ROK_F.NAZ
                     || _b.SYMBOL:=(3+OKRO_F.NAZ)+' '+ROK_F.NAZ;
                        _b.OPIS:=OKRO_F.NAZ+' '+ROK_F.NAZ
                     ?};
                     _b.SYM:=_kod+ROK_F.NAZ;
                     _b.REF:=$OkroF;
                     _b.CZY_WYK:={? K_E_VIEW.CZY_WYK='' || 'N' || K_E_VIEW.CZY_WYK ?};
                     _b.READONLY:=K_E_VIEW.READONLY;
                     _b.add()
                  ?}
               |? _k='K'
               || _jest:=1;
                  OKRO_F.index('KWARTAL'); OKRO_F.prefix(ROK_F.ref(),_n);
                  {? OKRO_F.first()
                  || {!
                     |? ROK_F.cntx_psh();
                        _jest:=exec('okr_in','control','M'+('0'+$OKRO_F.NR)+2,_o1,_o2,K_E_VIEW.LAT);
                        _rok:=ROK_F.ref();
                        ROK_F.cntx_pop();
                        _jest & OKRO_F.next()
                     !}
                  ?};
                  {? _jest & ROK_F.seek(_rok)
                  || _b.LP:=_lp; _lp+=1;
                     _b.SYMBOL:='kw '+$_n+' '+ROK_F.NAZ;
                     _b.OPIS:='kwartał '+$_n+' '+ROK_F.NAZ;
                     _b.SYM:=_kod+ROK_F.NAZ;
                     _b.add()
                  ?}
               |? _k='P'
               || _jest:=1;
                  OKRO_F.index('POLROCZE'); OKRO_F.prefix(ROK_F.ref(),_n);
                  {? OKRO_F.first()
                  || {!
                     |? ROK_F.cntx_psh();
                        _jest:=exec('okr_in','control','M'+('0'+$OKRO_F.NR)+2,_o1,_o2,K_E_VIEW.LAT);
                        _rok:=ROK_F.ref();
                        ROK_F.cntx_pop();
                        _jest & OKRO_F.next()
                     !}
                  ?};
                  {? _jest & ROK_F.seek(_rok)
                  || _b.LP:=_lp; _lp+=1;
                     _b.SYMBOL:='pół '+$_n+' '+ROK_F.NAZ;
                     _b.OPIS:='półrocze '+$_n+' '+ROK_F.NAZ;
                     _b.SYM:=_kod+ROK_F.NAZ;
                     _b.add()
                  ?}
               || _jest:=1;
                  OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
                  {? OKRO_F.first()
                  || {!
                     |? ROK_F.cntx_psh();
                        _jest:=exec('okr_in','control','M'+('0'+$OKRO_F.NR)+2,_o1,_o2,K_E_VIEW.LAT);
                        _rok:=ROK_F.ref();
                        ROK_F.cntx_pop();
                        _jest & OKRO_F.next()
                     !}
                  ?};
                  {? _jest & ROK_F.seek(_rok)
                  || _b.LP:=_lp; _lp+=1;
                     _b.SYMBOL:='rok '+ROK_F.NAZ;
                     _b.OPIS:='rok '+ROK_F.NAZ;
                     _b.SYM:=_kod+ROK_F.NAZ;
                     _b.add()
                  ?}
               ?};
               ROK_F.cntx_pop(); OKRO_F.cntx_pop();
               K_E_VIEW.next()
            !}
         ?};
         _r2<>ROK_F.ref() & ROK_F.next()
      !}
   ?};
   fml:="
      _kod:=1;
      _b.cntx_psh(); _b.index(ind1); _b.prefix(_a);
      {? _b.first()
      || _kod:=_b.LP
      ?};
      _b.cntx_pop();
      $_kod
   ";
   ind0:=_b.index('?');
   ind1:=_b.ndx_tmp(,,'SYM',,);
   {? _b.first()
   || {!
      |? _k:=1+_b.SYM;
         _r:=_b.SYM+4;
         {? _b.SYM='Suma'
         || _typsuma:=_b.SUMATYP;
            _formula:='';
            _b.cntx_psh();
            _b.index(ind0);
            _last:='';
            {!
            |? {? _typsuma<>'N' & _b.prev() |
                  _typsuma='N' & _b.next()
               || {? 1+_b.SYM='M'
                  || {? _last='' | _last=_b.SYMBOL+4
                     || _last:=_b.SYMBOL+4;
                        _formula+='['+$_b.LP+']+';
                        1
                     ?}
                  || 1
                  ?}
               ?}
            !};
            _b.cntx_pop();
            _formula:='_'+_formula-1;
            _b.FORMULA1:=200+_formula; _formula:=200-_formula;
            _b.FORMULA2:=200+_formula; _formula:=200-_formula;
            _b.FORMULA3:=200+_formula; _formula:=200-_formula;
            _b.FORMULA4:=200+_formula;
            _b.put()
         |? _k<>'M'
         || ROK_F.index('NAZWA'); ROK_F.prefix(REF.S_FIRMA,3-_b.SYM,);
            {? ROK_F.first()
            || _formula:='';
               _n:=#(2+(1-_b.SYM));
               {? _k='K'
               || OKRO_F.index('KWARTAL'); OKRO_F.prefix(ROK_F.ref,_n)
               |? _k='P'
               || OKRO_F.index('POLROCZE'); OKRO_F.prefix(ROK_F.ref,_n)
               || OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref)
               ?};
               {? OKRO_F.first()
               || {!
                  |? _nr:=
                     {? OKRO_F.NR=ROK_F.LOBR+1
                     || 99
                     || OKRO_F.NR
                     ?};
                     _formula+='['+{? _nr=0 | _nr=99 || 'B' || '' ?}+fml('M'+(('0'+$_nr)+2)+_r,_b)+']+';
                     OKRO_F.next()
                  !}
               ?};
               _formula:='_'+_formula-1;
               _b.FORMULA1:=200+_formula; _formula:=200-_formula;
               _b.FORMULA2:=200+_formula; _formula:=200-_formula;
               _b.FORMULA3:=200+_formula; _formula:=200-_formula;
               _b.FORMULA4:=200+_formula;
               _b.put()
            ?}
         ?};
         _b.next()
      !}
   ?}
?};
VAR_DEL.delete('OkroF')


\okr_in
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Czy okres wskazany przez kod slownika i biezacy rok miesci sie w zakresie
::   WE: _a - kod pozycji slownika
::       _b - okres poczatkowy
::       _c - okres koncowy
::       _d - lat wstecz wobec biezacego
::  OLD: \okr_in/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? _d<>0
|| ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.S_FIRMA);
   {! _i:=1.._d
   |? _ok
   |! _ok:=ROK_F.prev()
   !};
   {? _ok
   || OKRO_F.cntx_psh(); OKRO_F.index('ROK');
      OKRO_F.prefix();
      _n1:={? OKRO_F.seek(_b) || OKRO_F.NR ?};
      _n2:={? OKRO_F.seek(_c) || OKRO_F.NR ?};
      {? OKRO_F.find_key(ROK_F.ref(),_n1) || _b:=OKRO_F.ref() ?};
      {? OKRO_F.find_key(ROK_F.ref(),_n2) || _c:=OKRO_F.ref() ?};
      OKRO_F.cntx_pop()
   ?}
?};
{? _ok
|| _fun:="
      ROK_F.cntx_psh();
      _r:=$(OKRO_F.ROK().POCZ_ROK~1)+(('0'+$OKRO_F.NR)+2);
      ROK_F.cntx_pop();
      _r
   ";
   _ok:=0;
   _n:=#(_a+2);
   {? _n=99 || _n:=ROK_F.LOBR+1 ?};
   OKRO_F.cntx_psh();
   OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref(),_n);
   {? OKRO_F.first()
   || OkroF:=OKRO_F.ref;
      _dp:=_fun();
      OKRO_F.prefix();
      {? OKRO_F.seek(_b)
      || _ok:=_dp>=_fun()
      ?};
      {? _ok & OKRO_F.seek(_c)
      || _ok:=_dp<=_fun()
      ?}
   ?};
   OKRO_F.cntx_pop()
?};
_ok


\ini_win_harm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia ikony okien harmonogramów
::   WE: _a - okno
::       _b - tabela
::       _c - pole
::----------------------------------------------------------------------------------------------------------------------
formikon:="
   {? K_HARM_P.STATUS='W'
   || {? K_HARM_P.ZN_RET='T'
      || 'xwin16.png:81'
      || 'xwin16.png:77'
      ?}
   |? K_HARM_P.STATUS='U'
   || 'xwin16.png:79'
   |? K_HARM_P.STATUS='A'
   || 'xwin16.png:38'
   |? K_HARM_P.STATUS='Z'
   || 'xwin16.png:78'
   || ''
   ?}
";
K_HARM_P.win_fml(_a,_b,_c,,'ICON_BEFORE',formikon);
&formikon


\init_kharm_var
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia formuły zmiennych
::----------------------------------------------------------------------------------------------------------------------
UNPAR.P11_BV:='';
UNPAR.PRF1_BE:=UNPAR.PRF2_BE:='exec(\'be_kharm\',\'!ctr_hbd_dhar\')';
UNPAR.PRF1_AE:='{? K_HARM.OD().ROK<>UNPAR.PRF1 || K_HARM.OD:=null ?};1';
UNPAR.PRF2_AE:='{? K_HARM.DO().ROK<>UNPAR.PRF2 || K_HARM.DO:=null ?};1';
SKID_MBN.win_sel('SLO');
UNPAR.P12:='A';
UNPAR.P12_BV:=UNPAR.P12_BE:=UNPAR.P12_AE:='';
UNPAR.P1_BV:='{? ~($UNPAR.P1_BE)() || UNPAR.P1:=2 |? UNPAR.P1=2 || UNPAR.P1:=0 ?}; 1';
UNPAR.P1_BE:='-menu_txt()<>\'popraw\' & (K_HARM_P.cntx_psh(); _r:=K_HARM_P.first(); K_HARM_P.cntx_pop(); _r)';
UNPAR.P1_AE:='{? UNPAR.P1=2 || UNPAR.P1:=0 ?}; 1';
UNPAR.P2:=0;
UNPAR.P10_BV:='exec(\'set_status\',\'control\')';
UNPAR.P16_BV:=UNPAR.P17_BV:='';
UNPAR.P16:=UNPAR.P17:=''


\zmien_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Zmiana statusu zadania bez edycji arkusza planu
::  OLD: \zmien_status/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0; _iuser:='';
_usr:=exec('name','users');
USERS.index('USR_KKOD'); USERS.prefix(_usr,_usr);
{? USERS.first()
|| _iuser:=USERS.KOD
?};
{? _iuser<>''
|| _typ:='';
   {? K_HARM_P.STATUS='W'
   || {? exec('can_status','control','A')
      || {? (K_HARM_P.KTO_UZU=K_HARM_P.KTO_AKC | K_HARM_P.ZN_AKC='N')
         || {? FUN.ask('Zmienić status zadania na \'uzupełnione\'?')
            || _ok:=1;
               exec('kharmp_stat','control','A',_iuser);
               K_HARM_P.DATA_UZU:=date()
            ?}
         |? FUN.ask('Zmienić status zadania na \'uzupełnione\'?')
         || _ok:=1;
            exec('kharmp_stat','control','U',_iuser)
         ?};
         {? _ok
         || _typ:='A';
            K_HARM_P.ZN_RET:='N';
            K_HARM_P.UWAGI:='';
            _ok:=K_HARM_P.put()
         ?}
      ?}
   |? K_HARM_P.STATUS='U'
   || {? exec('can_status','control','B')
      || {? K_HARM_P.ZN_UZU='T'
         || _typ:='B';
            _nr:=FUN.choice('Na jaki status zmienić zadanie?'@,1,'Wysłane'@,'Zaakceptowane'@,'Odrzucone'@);
            {? _nr=1
            || exec('kharmp_stat','control','W',_iuser);
               K_HARM_P.ZN_RET:='N';
               K_HARM_P.UWAGI:='';
               K_HARM_P.put();
               _ok:=0
            |? _nr=2
            || exec('kharmp_stat','control','A',_iuser);
               K_HARM_P.ZN_RET:='N';
               K_HARM_P.UWAGI:='';
               _ok:=K_HARM_P.put()
            |? _nr=3
            || exec('kharmp_stat','control','W',_iuser);
               K_HARM_P.ZN_RET:='T';
               K_HARM_P.UWAGI:='';
               _ok:=K_HARM_P.put()
            ?}
         || {? FUN.ask('Zmienić status zadania na \'zaakceptowane\'?'@)
            || _typ:='A';
               exec('kharmp_stat','control','A',_iuser);
               K_HARM_P.ZN_RET:='N';
               K_HARM_P.UWAGI:='';
               _ok:=K_HARM_P.put()
            ?}
         ?}
      ?}
   |? K_HARM_P.STATUS='A'
   || K_HARM_P.cntx_psh();
      _stat:=
      {? K_HARM_P.K_HARM_P=0
      || 'P'
      |? K_HARM_P.seek(K_HARM_P.K_HARM_P,)
      || K_HARM_P.STATUS
      || ''
      ?};
      K_HARM_P.cntx_pop();
      {? _stat<>'P'
      || FUN.info('Zadanie nadrzędne nie jest w przygotowaniu.\nZmiana statusu niemożliwa.'@)
      || {? exec('can_status','control','B')
         || _typ:='B';
            K_HARM_P.cntx_psh(); K_HARM_P.index('K_HARM'); K_HARM_P.prefix(K_HARM_P.K_HARM,K_HARM_P.ref());
            _jest:=K_HARM_P.first();
            K_HARM_P.cntx_pop();
            {? _jest
            || {? FUN.ask('Zmienić status zadania na \'w przygotowaniu\'?'@)
               || _ok:=1;
                  exec('kharmp_stat','control','P',_iuser)
               ?}
            || {? K_HARM_P.ZN_AKC='N' | K_HARM_P.KTO_UZU=K_HARM_P.KTO_AKC
               || {? FUN.ask('Czy zmienić status zadania na \'wysłane\'?'@)
                  || _ok:=1;
                     exec('kharmp_stat','control','W',_iuser)
                  ?}
               |? K_HARM_P.ZN_UZU='N'
               || {? FUN.ask('Czy zmienić status zadania na \'uzupełnione\'?')
                  || _ok:=1;
                     exec('kharmp_stat','control','U',_iuser)
                  ?}
               |? _nr:=FUN.choice('Na jaki status zmienić zadanie?'@,1,'Wysłane'@,'Uzupełnione'@)
               || _ok:=1;
                  {? _nr=1
                  || exec('kharmp_stat','control','W',_iuser)
                  || exec('kharmp_stat','control','U',_iuser)
                  ?}
               ?}
            ?};
            {? _ok
            || K_HARM_P.UWAGI:='';
               K_HARM_P.ZN_RET:='N';
               _ok:=K_HARM_P.put()
            ?}
         ?}
      ?}
   ?};
   {? _ok
   || khpusr:=USERS.ref();
      exec('koniec','ctr_bha',_typ,_iuser);
      VAR_DEL.delete('khpusr')
   ?}
?}


\can_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Czy uzytkownik może zmienić status zadania
::   WE: _a - znak czynności: A-uzupełnienie B-akceptacja
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('hasAction','users','CTR_HBD_DZ'+_a+'A')
|| {? _a='A'
   || FUN.info('Brak uprawnień do czynności uzupełniania.'@)
   || FUN.info('Brak uprawnień do czynności akceptacji.'@)
   ?};
   0
|| 1
?}


\upd_stat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Aktualizacja statusow pozycji harmonogramu po zmianie statusu biezacej pozycji
::   WE:  _a  - wskazanie na zmieniona pozycje harmonogramu
::        _b  - login uzytkownika internetowego
::       [_c] - tm_stamp
::   WY: czy uruchomiono nowe zadania
::  OLD: \upd_stat/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_nowe:=0;
K_HARM_P.cntx_psh();
K_HARM_P.index('K_HARM'); K_HARM_P.prefix();
{? K_HARM_P.seek(_a)
|| {? K_HARM_P.STATUS='A'
   || {!
      |? _ok:=K_HARM_P.seek(K_HARM_P.K_HARM_P,);
         {? _ok
         || K_HARM_P.cntx_psh(); K_HARM_P.prefix(K_HARM_P.K_HARM,K_HARM_P.ref());
            _zm:=0;
            {? K_HARM_P.first()
            || {!
               |? _zm:=K_HARM_P.STATUS<>'A';
                  _zm=0 & K_HARM_P.next()
               !}
            ?};
            K_HARM_P.cntx_pop();
            {? _zm=0 & K_HARM_P.STATUS='P'
            || {? K_HARM_P.ZN_UZU='T'
               || K_HARM_P.D_R_UZU:=date();
                  exec('kharmp_stat','control','W',_b)
               || K_HARM_P.D_R_AKC:=date();
                  exec('kharmp_stat','control','U',_b)
               ?};
               {? var_press('_c')>0
               || K_HARM_P.TM_STAMP:=_c;
                  _nowe+=1
               ?};
               K_HARM_P.put()
            ?};
            K_HARM_P.K_HARM_P<>0
         ?}
      !};
      K_HARM_P.prefix(K_HARM_P.K_HARM,0);
      {? K_HARM_P.first()
      || {!
         |? _ok:=K_HARM_P.STATUS='A';
            _ok & K_HARM_P.next()
         !};
         {? _ok
         || K_HARM.cntx_psh(); K_HARM.prefix();
            {? K_HARM.seek(K_HARM_P.K_HARM)
            || exec('kharm_stat','control','K')
            ?};
            K_HARM.cntx_pop()
         ?}
      ?}
   |? K_HARM_P.STATUS='P'
   || _u:=K_HARM_P.UWAGI;
      _zn:=K_HARM_P.ZN_RET;
      K_HARM_P.cntx_psh();
      K_HARM_P.index('K_HARM'); K_HARM_P.prefix(K_HARM_P.K_HARM,K_HARM_P.ref());
      {? K_HARM_P.first()
      || {!
         |? exec('kharmp_stat','control',{? K_HARM_P.ZN_UZU='T' || 'W' || 'U' ?},_b);
            K_HARM_P.ZN_RET:=_zn;
            K_HARM_P.UWAGI:=_u;
            {? var_press('_c')>0
            || K_HARM_P.TM_STAMP:=_c;
               _nowe+=1
            ?};
            K_HARM_P.put();
            K_HARM_P.next()
         !}
      ?};
      K_HARM_P.cntx_pop();
      K_HARM.cntx_psh(); K_HARM.prefix();
      {? K_HARM.seek(K_HARM_P.K_HARM)
      || exec('kharm_stat','control','T')
      ?};
      K_HARM.cntx_pop()
   ?}
?};
K_HARM_P.cntx_pop();
_nowe


\kuser_seek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Odnajduje uzytkownika Controlingowego
::   WE: _a - login uzytkownika internetowego
::  OLD: \kuser_seek/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_ku:=null;
USERS.index('USR_AKOD'); USERS.prefix('T',_a,_a);
{? USERS.first()
|| _ku:=USERS.ref()
?};
_ku


\ed_xlsx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Edycja arkusza z budżetem
::   WE: [_a] - [1]-edycja 0-przeglądanie
:: ~OST: INBLEDIT
::----------------------------------------------------------------------------------------------------------------------
K_HARM.cntx_psh();
{? K_HARM_P.K_HARM().ARKUSZ='G' & exec('interm','#system')
|| FUN.emsg(exec('interm_nacc_msg','#system'));
   K_HARM.cntx_pop();
   return(0)
?};
K_HARM.cntx_pop();
{? exec('cli_functions','#system')=0
|| FUN.emsg(exec('indevice_nacc_msg','#system'));
   return(0)
?};
{? var_press('_a')<=0 || _a:=1 ?};
{? exec('is_arkusz','control')
|| K_HARM_P.cntx_psh(); K_HARM_P.prefix();
   K_HARM.cntx_psh();
   {? K_HARM_P.K_HARM().ARKUSZ='G'
   || {!
      |? {? K_HARM_P.STATUS='U'
         || _pyt:=FUN.choice(
               'Uzupełnienie zadania budżetowego: %1.'@[K_HARM_P.NAZ],2,
               'Wyślij dane','Edytuj arkusz'@,'Odrzuć','Akceptuj'
            );
            {? _pyt=3 || _pyt:=5 ?}
         || _pyt:=FUN.choice(
               'Uzupełnienie zadania budżetowego: %1.'@[K_HARM_P.NAZ],2,
               'Wyślij dane','Edytuj arkusz'@,'Pobierz dane','Zakończ'
            )
         ?};
         {? _pyt=1
         || exec('send_google','control',0)
         |? _pyt=2
         || exec('open_http','control',K_HARM_P.LINK)
         |? _pyt=3
         || exec('get_google','control',0)
         |? _pyt=4
         || {? exec('akc_harm','control',#K_HARM_P.ref(),OPERATOR.USER().KOD,'')<>''
            || _pyt:=0
            ?}
         |? _pyt=5
         || undefine();
            define('UWAGI','','Powód'@,,255,50,);
            _ok:=def_btn('text=%1'['OK'@],'key:F2');
            _anuluj:=def_btn('text=%1'['Anuluj'@],'key:Esc');
            def_bopt(_ok,'tooltip='+exec('help_red_ok','#window','P'));
            def_bopt(_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
            {? def_edit(,'Powód odrzucenia'@)
            || _tab:=proc_exec('ret_harm@kontrol',#K_HARM_P.ref(),OPERATOR.USER().KOD,DEFINE.UWAGI);
               {? _tab.first() & _tab.OK
               || _pyt:=0
               ?}
            ?};
            undefine()
         ?};
         _pyt<>0
      !}
   || {? _a
      || K_HARM_P.bl_edit('EXCEL')
      || exec('bl_view','#blob',K_HARM_P,'EXCEL')
      ?}
   ?};
   K_HARM.cntx_pop();
   K_HARM_P.cntx_pop()
?}


\lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Blokuje/odblokowuje rekordy K__NAG i K_HARM
::   WE: _a - nr rekordu K_HARM
::       _b - 1-blokuje 0-odblokowuje
::   WY: operacja sie udala 1-tak 0-nie
::  OLD: \lock/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
K_HARM.index('K_WERSJE'); K_HARM.prefix();
{? K_HARM.seek(_a,)
|| _sql:="
      _str:=
      'select REFERENCE as REF from K__NAG where '+
          'SKID_MB='':_a'' and '+
          'K_WERSJE='':_b'' and '+
          'ROK_F>='':_c'' and ROK_F<='':_d''';
      sql(_str,$K_HARM.SKID_MBN,$K_HARM.K_WERSJE,$K_HARM.OD().ROK,$K_HARM.DO().ROK)
   ";
   {? _b
   || {? K_HARM.r_lock(1,1)
      || _ok:=1;
         _t:=_sql();
         {? _t.first()
         || {!
            |? K__NAG.use(form(8+_t.REF));
               _ok:=K__NAG.seek(BIT.sqlint(_t.REF+8),) & K__NAG.r_lock(1,1);
               _ok & _t.next()
            !};
            {? _ok=0 & _t.first()
            || {!
               |? K__NAG.use(form(8+_t.REF));
                  {? K__NAG.seek(BIT.sqlint(_t.REF+8),)
                  || K__NAG.r_unlock()
                  ?};
                  _t.next()
               !};
               K_HARM.r_unlock()
            ?}
         ?}
      ?}
   || _t:=_sql();
      {? _t.first()
      || {!
         |? K__NAG.use(form(8+_t.REF));
            {? K__NAG.seek(BIT.sqlint(_t.REF+8),)
            || K__NAG.r_unlock()
            ?};
            _t.next()
         !};
         K_HARM.r_unlock()
      ?};
      K_HARM.r_unlock();
      _ok:=1
   ?}
?};
_ok


\kpoz_index
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Tworzy indeks tymczasowy dla wyniku procedury wbudowanej wg pozycji w filtrze
::   WE: _a - wynik procedury wbudowanej (:RS)
::       _b - ref sql K_P_VIEW
::  OLD: \kpoz_index/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K_P_VIEW.index('K_P_VIEW'); K_P_VIEW.prefix();
{? K_P_VIEW.seek(BIT.sqlint(_b),)
|| K_P_VIEW.prefix(K_P_VIEW.K_N_VIEW,'F');
   {? K_P_VIEW.first()
   || _ndx:='_a.ndx_tmp(,';
      {!
      |? _ndx+=','+
         {? K_P_VIEW.SKID_MBP
         || '\'WYMIAR0'+$K_P_VIEW.SKID_MBP().LP+'\''
         || '\'OKRES\''
         ?}+',,';
         K_P_VIEW.next()
      !};
      _ndx+=',\'REF\',,)';
      _ind:=($(_ndx))(_a);
      _a.index(_ind)
   ?}
?}


\add_poz1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Dodaje grupowo pozycje planu
::   WE: _a - wskazanie na podwersje
::       _b,...,_ - napis z separatorem @
::   WY: czy dodano/zmodyfikowano pozycje planu 1/0
::  OLD: \add_poz1/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_tmp:=obj_new(5);
{! _ii:=2.._
|? _[_ii]<>''
|! {? _[_ii]<>''
   || STR.split(_[_ii],'%');
      {! _jj:=1..5
      |! _tmp[_jj]:=STR.get_word()
      !};
      {! _jj:=1..5
      |? _tmp[_jj]<>''
      |! STR.split(_tmp[_jj],'@');
         _wart:=STR.get_word();
         _ro:=STR.get_word();
         _r1:=STR.get_word();
         _r2:=STR.get_word();
         _r3:=STR.get_word();
         _r4:=STR.get_word();
         _r5:=STR.get_word();
         exec('add_poz','control',_wart,_ro,_r1,_r2,_r3,_r4,_r5,_a)
      !}
   ?}
!};
1


\add_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Dodaje pozycje planu
::   WE: _a - wartosc
::       _b - ref sql OKRO_F
::       _c - ref sql UD_SKL - wymiar 1
::       _d - ref sql UD_SKL - wymiar 2
::       _e - ref sql UD_SKL - wymiar 3
::       _f - ref sql UD_SKL - wymiar 4
::       _g - ref sql UD_SKL - wymiar 5
::       _h - wskazanie na podwersje
::   WY: czy dodano/zmodyfikowano pozycje planu 1/0
::  OLD: \add_poz/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
OKRO_F.prefix();
{? OKRO_F.seek(BIT.sqlint(_b),)
|| K__NAG.index('UNIK1'); K__NAG.prefix(REF.S_FIRMA,K_HARM.SKID_MBN,K_HARM.K_WERSJE,OKRO_F.ROK,_h);
   _ok:=
   {? K__NAG.first()
   || 1
   || K__NAG.prefix(REF.S_FIRMA,K_HARM.SKID_MBN,K_HARM.K_WERSJE,OKRO_F.ROK);
      {? ~K__NAG.find_key(null)
      || _ok:=exec('add_k_nag','control',null)
      || _ok:=1
      ?};
      {? _ok
      || {? ~K__NAG.find_key(_h)
         || exec('add_k_nag','control',_h)
         || 1
         ?}
      || 0
      ?}
   ?};
   {? _ok
   || _udskl:="
         UD_SKL.prefix();
         {? UD_SKL.seek(BIT.sqlint(_a),)
         || UD_SKL.ref()
         || null
         ?}
      ";
      _dalej:=1;
      VAR_DEL.delete('wym');
      wym:=obj_new(_-3);
      _dokl:=2;
      {! _i:=1..obj_len(wym)
      |! wym[_i]:=_udskl(_[_i+2]);
         {? _i=1
         || SKIDXDUD.index('POZ'); SKIDXDUD.prefix();
            {? SKIDXDUD.find_key(wym[_i])
            || _dalej:=~SKIDXDUD.DONTSAVE;
               {? SKIDXDUD.WART_IL='I' || _dokl:=SKIDXDUD.PREC ?}
            ?}
         ?}
      !};
      {? _dalej
      || K__POZ.use('yb'+exec('maska','control'));
         K__POZ.index('RODZAJ');
         _prfx:='K__POZ.prefix(3,K__NAG.ref(),OKRO_F.ref()';
         {! _i:=1..obj_len(wym)
         |! _prfx+=',wym['+$_i+']'
         !};
         _prfx+=')';
         ($_prfx)();
         _wart:=#STR.gsub(_a,',','.');
         {? K__POZ.first()
         || K__POZ.WART:=_wart$_dokl;
            {? SKIDXDUD.A_SEND
            || K__POZ.cntx_psh();
               ($(SKIDXDUD.A_SEND().FORMULA))();
               K__POZ.cntx_pop();
               K__POZ.get()
            ?};
            {? K__POZ.WART=0 & K__POZ.WART_N=0 & K__POZ.WART_NB=0
            || _ret:=K__POZ.del()
            || _ret:=K__POZ.put();
               {? _ret
               || K__POZ.memo_set(,'MEMO');
                  _ret:=K__POZ.memo_put(,'MEMO')
               ?}
            ?}
         |? _wart<>0
         || K__POZ.blank();
            K__POZ.K__NAG:=K__NAG.ref();
            K__POZ.OKRES:=OKRO_F.ref();
            K__POZ.WART:=_wart$_dokl;
            {! _i:=1..obj_len(wym)
            |! ($('K__POZ.WYMIAR'+(('0'+$_i)+2)+':=_a'))(wym[_i])
            !};
            K__POZ.RODZAJ:=3;
            _ret:=K__POZ.add();
            {? _ret & SKIDXDUD.A_SEND
            || K__POZ.cntx_psh();
               ($(SKIDXDUD.A_SEND().FORMULA))();
               K__POZ.cntx_pop();
               {? K__POZ.get() & K__POZ.WART=0 & K__POZ.WART_N=0 & K__POZ.WART_NB=0
               || K__POZ.del()
               ?}
            ?}
         || _ret:=1
         ?}
      ?}
   ?}
?};
VAR_DEL.delete('wym');
_ret


\add_k_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Dodanie naglowka zagregowanych wartosci do controllingu na podstawie budzetu
::   WE: _a - podwersja
::  OLD: \add_k_nag/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K__NAG.cntx_psh(); K__NAG.index('UNIK'); K__NAG.prefix();
_kod_nr:=
{? K__NAG.last()
|| #K__NAG.KOD
|| -1
?}+1;
_kod:=('00000'+$_kod_nr)+6;
K__NAG.cntx_pop();
K__NAG.FIRMA:=REF.S_FIRMA;
K__NAG.KOD:=_kod;
K__NAG.SKID_MB:=K_HARM.SKID_MBN;
K__NAG.K_WERSJE:=K_HARM.K_WERSJE;
K__NAG.ROK_F:=OKRO_F.ROK;
K__NAG.OPIS:='Plan dla controlingu'+{? _a || ' - podwersja' || '' ?};
K__NAG.FIRMA:=REF.FIRMA;
K__NAG.K_PODWER:=_a;
K__NAG.TREE:={? _a || #K__NAG.ref() || 0 ?};
K__NAG.add()


\add_kom1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Dodaje grupowo komentarze pozycje planu
::   WE: _a - wskazanie na podwersje
::       _b,...,_ - napis z separatorem |
::   WY: czy dodano/zmodyfikowano pozycje planu 1/0
::  OLD: \add_kom1/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
STR.split(_b,'|');
_ro:=STR.get_word();
_r1:=STR.get_word();
_r2:=STR.get_word();
_r3:=STR.get_word();
_r4:=STR.get_word();
_r5:=STR.get_word();
_kom:='';
{! _ii:=3.._
|? _[_ii]<>''
|! _kom+=_[_ii]
!};
exec('add_kom','control',_kom,_ro,_r1,_r2,_r3,_r4,_r5,_a)


\add_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Dodaje komentarz do pozycji planu
::   WE: _a - komentarz
::       _b - ref sql OKRO_F
::       _c - ref sql UD_SKL - wymiar 1
::       _d - ref sql UD_SKL - wymiar 2
::       _e - ref sql UD_SKL - wymiar 3
::       _f - ref sql UD_SKL - wymiar 4
::       _g - ref sql UD_SKL - wymiar 5
::       _h - wskazanie na podwersje
::   WY: czy dodano/zmodyfikowano pozycje planu 1/0
::  OLD: \add_kom/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
OKRO_F.prefix();
{? OKRO_F.seek(BIT.sqlint(_b),)
|| K__NAG.index('UNIK1'); K__NAG.prefix(REF.S_FIRMA,K_HARM.SKID_MBN,K_HARM.K_WERSJE,OKRO_F.ROK,_h);
   _ok:=
   {? K__NAG.first()
   || 1
   || K__NAG.prefix(REF.S_FIRMA,K_HARM.SKID_MBN,K_HARM.K_WERSJE,OKRO_F.ROK);
      {? ~K__NAG.find_key(null)
      || _ok:=exec('add_k_nag','control',null)
      || _ok:=1
      ?};
      {? _ok & ~K__NAG.find_key(_h)
      || _ok:=exec('add_k_nag','control',_h)
      ?}
   ?};
   {? _ok
   || _udskl:="
         UD_SKL.prefix();
         {? UD_SKL.seek(BIT.sqlint(_a),)
         || UD_SKL.ref()
         || null
         ?}
      ";
      VAR_DEL.delete('wym');
      wym:=obj_new(_-3);
      {! _i:=1..obj_len(wym)
      |! wym[_i]:=_udskl(_[_i+2])
      !};
      K__POZ.use('yb'+exec('maska','control'));
      K__POZ.index('K__NAG');
      _prfx:='K__POZ.prefix(K__NAG.ref(),OKRO_F.ref()';
      {! _i:=1..obj_len(wym)
      |! _prfx+=',wym['+$_i+']'
      !};
      _prfx+=')';
      ($_prfx)();
      {? K__POZ.first()
      || {? ~K__POZ.memo_set(_a,'MEMO') || _ret:=-1 ?}; {? _ret>-1 || _ret:=K__POZ.memo_put(,'MEMO') ?}
      || K__POZ.blank();
         K__POZ.K__NAG:=K__NAG.ref();
         K__POZ.OKRES:=OKRO_F.ref();
         K__POZ.WART:=0;
         {! _i:=1..obj_len(wym)
         |! ($('K__POZ.WYMIAR'+(('0'+$_i)+2)+':=_a'))(wym[_i])
         !};
         K__POZ.RODZAJ:=3;
         _ret:=K__POZ.add();
         {? _ret
         || {? ~K__POZ.memo_set(_a,'MEMO') || _ret:=-1 ?}; {? _ret>-1 || _ret:=K__POZ.memo_put(,'MEMO') ?}
         ?}
      ?}
   ?}
?};
VAR_DEL.delete('wym');
_ret


\b_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Ustawienie wartości początkowych wysyłanych do arkusza budżetowego
::   WE: _a - tabela docelowa
::       _b - widok danych (ref_sql)
::       _c - nr harmonogramu
::  OLD: \b_get/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('ele','max','nr','zm');
K_HARM.prefix();
{? K_HARM.seek(_c,)
|| K_P_VIEW.prefix();
   {? K_P_VIEW.seek(BIT.sqlint(_b),)
   || SKID_MBP.index('LP');
      SKID_MBP.prefix(K_P_VIEW.K_N_VIEW().SKID_MBN);
      _ile:=SKID_MBP.size();
      ele:=obj_new(_ile);
      nr:=obj_new(_ile);
      max:=obj_new(_ile);
      zm:=obj_new(_ile);
      K_E_VIEW.index('K_E_VIEW');
      K_P_VIEW.index('SKID_MBP');
      K_P_VIEW.prefix(K_P_VIEW.K_N_VIEW);
      {? K_P_VIEW.first()
      || {!
         |? {? K_P_VIEW.SKID_MBP
            || _lp:=K_P_VIEW.SKID_MBP().LP;
               ele[_lp]:=K_P_VIEW.ref();
               K_E_VIEW.prefix(K_P_VIEW.ref());
               max[_lp]:=K_E_VIEW.size();
               nr[_lp]:=1;
               zm[_lp]:=1
            ?};
            K_P_VIEW.next()
         !};
         OKRO_F.index('FIRMA_NR');
         OKRO_F.prefix();

         K_E_VIEW.prefix();
         SKIDXDUD.index('POZ');
         SKIDXDUD.prefix();
         _a.blank(1);
         _ref:=0;
         {!
         |? exec('b_get_set','control');
            {? SKIDXDUD.find_key(K__POZ.WYMIAR01)
            || {? SKIDXDUD.B_GET
               || K_HARM.OD();
                  {!
                  |? K__POZ.OKRES:=OKRO_F.ref();
                     K__POZ.cntx_psh();
                     _wart:=($SKIDXDUD.B_GET().FORMULA)();
                     K__POZ.cntx_pop();
                     {? _wart
                     || _a.WART:=_wart;
                        _a.OKRES:='N'+$OKRO_F.ref();
                        _a.WYMIAR01:=$K__POZ.WYMIAR01;
                        _a.WYMIAR02:=$K__POZ.WYMIAR02;
                        _a.WYMIAR03:=$K__POZ.WYMIAR03;
                        _a.WYMIAR04:=$K__POZ.WYMIAR04;
                        _a.WYMIAR05:=$K__POZ.WYMIAR05;
                        _a.REF:=$_ref; _ref+=1;
                        _a.add()
                     ?};
                     OKRO_F.ref()<>K_HARM.DO & OKRO_F.next()
                  !}
               ?}
            ?};
            exec('b_get_next','control')
         !}
      ?}
   ?}
?}


\b_get_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Ustawia bufor K__POZ
::  OLD: \b_get_set/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{! _i:=1..obj_len(ele)
|! {? zm[_i] & K_E_VIEW.find_key(ele[_i],nr[_i])
   || ($('K__POZ.WYMIAR0'+$_i+':=_a'))(K_E_VIEW.UD_SKL);
      zm[_i]:=0
   ?}
!}


\b_get_next
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Ustawia bufor zmiennych
::  OLD: \b_get_next/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_end:=0;
_ok:=1;
{! _i:=obj_len(ele)//-1..1
|? _ok
|! nr[_i]+=1;
   zm[_i]:=1;
   {? nr[_i]>max[_i]
   || nr[_i]:=1;
      {? _i=1
      || _end:=1;
         _ok:=0
      ?}
   || _ok:=0
   ?}
!};
_end=0


\k_harm_p_first
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca następne zadanie do uruchomienia
::   WE: _a - wyjscie czynnoci
::       _b - znacznik czasowy
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
K_HARM_P.cntx_psh();
K_HARM_P.index('TMSTAMP');
K_HARM_P.prefix(_b,);
{? K_HARM_P.first()
|| _ref:=K_HARM_P.ref();
   K_HARM_P.prefix();
   K_HARM_P.TM_STAMP+='1';
   K_HARM_P.put();
   _a.TYP:={? K_HARM_P.STATUS='W' || 'U' || 'A' ?}
?};
K_HARM_P.cntx_pop();
_a.K_HARM_P:=_ref;
_ref


\k_harm_p_next
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca następne zadanie do uruchomienia
::   WE: _a - znacznik czasowy
::   WY: czy następny element dostępny
::----------------------------------------------------------------------------------------------------------------------
_next:=0;
K_HARM_P.cntx_psh();
K_HARM_P.index('TMSTAMP');
K_HARM_P.prefix(_a,);
_next:=K_HARM_P.first();
K_HARM_P.cntx_pop();
_next


\can_fun_run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Czy mozna uruchomic proces dla okresu
::   WE: [_a] - czy bez sprawdzenia typu
::   WE: [_b] - okres
::  OLD: \can_fun_run/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
{? var_pres('_b')>0
|| OKRO_F.cntx_psh();
   OKRO_F.prefix();
   OKRO_F.seek(_b)
?};
_ok:=1;
{? OKRO_F.ZAM_CON='T' & ( _a | '1,10,11,12,13,14,17'*($CON_RODF.NUM_TYP+',')>0)
|| ROK_F.cntx_psh();
   exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Okres '+form(OKRO_F.NR,-2,,' ,')+' '+OKRO_F.ROK().NAZ+' jest zamknięty controllingowo.',0,null,null,SKID_MBN.ref(),'');
   ROK_F.cntx_pop();
   _ok:=0
?};
{? var_pres('_b')>0
|| OKRO_F.cntx_pop()
?};
_ok


\eksp_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Eksport schematu
::   WE: _a - niezadeklarowane   - eksport biezacego schematu do wskazanego katalogu
::            zadeklarowane (=1) - eksport wszystkich domyslnych schematow pobranych ze zmiennych
::                                 dwym[_i] do katalogu ze zmiennej PAR_WYDR.PATH_TXT
::                                 lub PAR_WYDR.PATHLTXT (w systemi LINUX)
::            zadeklarowane (=2) - eksportowanie biezacego schematu (stworzenie kopii) przed
::                                 importowaniem nowej zawartosci z pliku
::            zadeklarowane (=3) - eksport bieżącego schematu do katalogu wskazanego w path_lok
::       _b - liczba wymiarow
::       _c - katalog na pliki po stronie serwera
::  OLD: \eksp_sch/skid_xd.fml
:: ~OST: INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
{? exec('cli_functions','#system')=0
|| FUN.emsg(exec('indevice_nacc_msg','#system'));
   return(0)
?};
_ret:=1;
{? var_pres('_a')<=0 || _a:=0 ?};
{? var_pres('_b')<=0 || _b:=0 ?};
_dir:={? var_pres('_c')=type_of('') || _c || '' ?};
{? _a=3 | PAR_SKID.get(80)='T'
|| _lock:={? _a=0 & cur_tab(1,1)<>SKID_MBP || 1 || 0 ?};
   {? _a<>0 | (_a=0 & ((_lock & UD_SCH.r_lock(1,1)) | ~_lock))
   || UDSKL:=tab_tmp(2,'TYP','INTEGER','Typ'@,
                       'SYMBOL','STRING[24]','Symbol'@,
                       'OPIS','STRING[60]','Opis'@,
                       'SYM_NAD','STRING[24]','Symbol nadrzędnego'@,
                       'OPIS_NAD','STRING[60]','Opis nadrzędnego'@,
                       'NR_TREE','INTEGER','Drzewo'@,
                       'UD_SCH','STRING[8]','Symbol UD_SCH'@);
      INDSKL:=UDSKL.ndx_tmp('',1,'TYP',,0,'NR_TREE',,0,'SYMBOL',,0,'SYMBOL',,0);
      UDSKL.index(INDSKL); UDSKL.prefix();
      _okno:=UDSKL.mk_sel('Elementy w schemacie'@,'T',,'udskl');
      UDSKL.win_fld(_okno,,'SYMBOL');
      UDSKL.win_fld(_okno,,'OPIS');
      UDSKL.win_act(_okno,,'Formuła','Anuluj'@@,,'Anulowanie operacji'@,,
                      "sel_exit(); eksport:=0",1,,,,'A');
      UDSKL.win_act(_okno,,'Formuła','Kontynuuj'@@,,'Kontynuacja operacji'@,,
                      "sel_exit(); eksport:=1",,,,,'K');
      UDSKL.win_sel(_okno);
      _licznik:=1;
      UD_SCH.cntx_psh(); UD_SCH.index('SYMBOL'); UD_SCH.prefix();
      UD_DEF.cntx_psh(); SKIDXNAP.cntx_psh();
      UD_SKL.cntx_psh(); UD_SKL.index('SYMBOL'); UD_SKL.prefix();
      {! |?
         {? _a=3 | _a=0 | _a=2 | (_a=1 & UD_SCH.seek(dwym[_licznik]))
         || UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref());
            {? UD_DEF.first()
            || {! |?
                  _kod:=_opis:='';
                  UD_DEF.UD_SKL();
                  _kod:=UD_SKL.SYMBOL; _opis:=UD_SKL.OPIS;
                  {? UD_DEF.UD_DEF<>0
                  || UD_DEF.cntx_psh(); UD_DEF.prefix();
                     {? UD_DEF.seek(UD_DEF.UD_DEF,UD_DEF.name())
                     || UD_DEF.UD_SKL();
                        exec('addudskl','control',2,_kod,_opis,UD_SKL.SYMBOL,_licznik,UD_SCH.SYMBOL,UD_SKL.OPIS)
                     ?};
                     UD_DEF.cntx_pop()
                  || exec('addudskl','control',2,_kod,_opis,'',_licznik,UD_SCH.SYMBOL,'')
                  ?};
                  UD_DEF.next()
               !}
            ?}
         ?};
         _licznik+=1;
         {? _a=0 | _a=2 | _a=3 || 0 |? _a=1 || _licznik<(_b+1) ?}
      !};
      UD_SCH.cntx_pop(); UD_DEF.cntx_pop(); SKIDXNAP.cntx_pop(); UD_SKL.cntx_pop();
      {? _a=0
      || UDSKL.prefix(2);
         {? UDSKL.first()
         ||
            __dir_controling:=fmk_tmp_dir(0);
            _path:=_path1:=__dir_controling.get_path()+'/schemat.txt';
            {? _path<>''
            || _path:=exec('path','#file',_path);
               exec('path_save','control',_path,sys_name(0)<>'WINDOWS');
               erroreks:=0;
               exec('eksp_sch1','control',_path1);
               {? erroreks
               || FUN.info('Wystąpiły błędy podczas eksportu danych.'@)
               ||
                  dlg_save(_path1,0)
               ?};
               VAR_DEL.delete('erroreks')
            ?}
         || FUN.info('Brak poprawnie zdefiniowanych elementów schematu %1.'@[UD_SCH.SYMBOL])
         ?}
      |? _a=1
      || {? _dir<>'' & (_dir+1)<>'/' || _dir+='/' ?};
         {? _dir<>''
         || exec('path_save','control',_dir,sys_name(0)<>'WINDOWS');
            {! _i:=1.._b
            |! UDSKL.prefix(2,_i);
               {? UDSKL.first() || _ret*=exec('eksp_sch1','control',_dir+'wym'+$_i+'.txt',nwym[_i]) ?}
            !}
         ?}
      |? _a=2
      || _is_file:=0;
         _path_lok:=fmkdir(_dir,'dir');
         {? _path_lok<>''
         || _path:=_path_lok+'/';
::          _path:=exec('path','#file',path_lok);
            exec('path_save','control',_path,sys_name(0)<>'WINDOWS');
            UDSKL.prefix(2);
            {? UDSKL.first()
            || _time:=time(); _date:=date();
               _naz_pl:=-UD_SCH.SYMBOL+
                        '_'+form((_date~1),4,,'9')+form((_date~2),-2)+form((_date~3),-2)+
                        '_'+form((_time~1),-2)+form((_time~2),-2)+form((_time~3),-2)+'.txt';
               _is_file+=exec('eksp_sch1','control',_path+_naz_pl)
            ?}
         ?};
         {? _is_file & FUN.ask('Czy zapisać kopię zapasową schematu?')
         || _zipname:=_dir+'/Archiwum.zip';
            fpack_add(_zipname,_path_lok);
            dlg_save(_zipname,0)
         ?}
      ||
         {?  var_press('path_lok') & path_lok<>''
         || UDSKL.prefix(2);
            {? UDSKL.first() || exec('eksp_sch1','control',path_lok+'m4_schemat_'+(-UD_SCH.SYMBOL)+'.txt') ?}
         ?}
      ?};
      VAR_DEL.delete('UDSKL'); VAR_DEL.delete('INDSKL');
      VAR_DEL.delete('__dir_controling');
      {? _a=0 || UD_SCH.r_unlock() ?}
   || FUN.info('Bieżący schemat jest obsługiwany przez innego operatora.'@)
   ?}
|| FUN.info('W systemie wyłączona jest ewidencja podziałów controllingowych.'@)
?};
_ret


\addudskl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Dodanie zapisow do tabeli tymczasowej (UDSKL)
::   WE: _a - (1/2) - typ - blad/zapis dla eksportu
::       _b - symbol
::       _c - opis
::       _d - symbol nadrzednego
::       _e - nr drzewa
::       _f - symbol schematu
::       _g - opis nadrzednego
::  OLD: \addudskl/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_add:=1;
{? var_pres('m4_pref')>0 & type_of(m4_pref)=type_of('')
|| _add:=(((+m4_pref)+_b)=m4_pref)
?};
{? _add
|| {? ~UDSKL.find_key(_a,_e,_b,_b)
   || UDSKL.TYP:=_a; UDSKL.SYMBOL:=_b; UDSKL.OPIS:=_c; UDSKL.SYM_NAD:=_d;
      UDSKL.NR_TREE:=_e; UDSKL.UD_SCH:=_f; UDSKL.OPIS_NAD:=_g; UDSKL.add()
   ?};
   {? var_pres('m4_exp')>0 & m4_exp & var_pres('m4_dud')>0 & m4_dud
   || UD_TYP.cntx_psh(); UD_TYP.index('SYMBOL'); UD_TYP.prefix();
      {? UD_SKL.UD_TYP().SYMBOL='POZ_BUD'
      || JM.cntx_psh(); JM.index('KOD'); JM.prefix();
         SKIDXDUD.cntx_psh(); SKIDXDUD.index('POZ'); SKIDXDUD.prefix(UD_SKL.ref());
         {? SKIDXDUD.first()
         || _exp:=UD_SKL.SYMBOL+'@';
            _exp+=SKIDXDUD.WART_IL+'@'+SKIDXDUD.JM().KOD+'@'+JM.NAZ+'@'+$SKIDXDUD.PREC+'@'+SKIDXDUD.STR+'@';
            _exp+=SKIDXDUD.WSK_WAL+'@'+SKIDXDUD.WAL().KOD+'@'+SKIDXDUD.CIW+'@'+SKIDXDUD.ZN_AGR+'@'+SKIDXDUD.ONLY_L+'@';
            _exp+=SKIDXDUD.TYP_NAR+'@';
            fwrite(m4_dud,_exp)
         ?};
         SKIDXDUD.cntx_pop(); JM.cntx_pop()
      ?};
      UD_TYP.cntx_pop()
   ?}
?}


\addnapeks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Dodaje rekord do tabeli SKIDXNAP podczas eksportu dla biezacego rekordu w UD_SKL
::   WY: (1/0) - udalo/nie udalo sie dodac rekordu
::  OLD: \addnapeks/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
SKIDXNAP.cntx_psh(); SKIDXNAP.index('UD_SKL'); SKIDXNAP.prefix(UD_SKL.ref());
{? ~SKIDXNAP.first()
|| _nazwa:=UD_SKL.SYMBOL;
   {? _nazwa<>''
   || SKIDXNAP.UD_SKL:=UD_SKL.ref();
      SKIDXNAP.UD_TYP:=UD_SKL.UD_TYP;
      SKIDXNAP.NAZWA:=_nazwa;
      _zwrot:=SKIDXNAP.add(1)
   ?}
?};
SKIDXNAP.cntx_pop();
_zwrot


\path_save
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Zapamietywanie biezacej sciezki w bazie
::   WE: _a - sciezka, _b - (0/1) - WINDOWS/LINUX
::  OLD: \path_save/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
PARWYD.index('USER'); PARWYD.prefix(exec('user_ref','param_wydr',10+username()));
{? PARWYD.first()
|| {? ~_b
   || PARWYD.PATH_TXT:=PAR_WYDR.PATH_TXT:=_a
   || PARWYD.PATHLTXT:=PAR_WYDR.PATHLTXT:=_a
   ?}; PARWYD.put()
?}


\eksp_sch1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Eksport schematu (formula wewnetrzna)
::   WE: _a - nazwa pliku wyjsciowego wraz ze sciezka
::       _b - nazwa wymiaru
::  OLD: \eksp_sch1/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<2
|| _b:='0'
|| {? type_of(_b)<>type_of('a') || _b:='0' ?}
?};
_plik:=_a;
_a:=STR.maz2w95(_a);
_uchwyt:=fopen(_a,'w',0);
{? _uchwyt
|| _linia:=maz_utf8(_b+'\tOpis\tElement nadrzędny\tElement Nadrzędny_Opis');
   {? (1+sys_name())<>'W' || _linia+=%13 ?};
   fwrite(_uchwyt,_linia);
   {! |?
      _linia:=UDSKL.SYMBOL+'\t'+
              UDSKL.OPIS+'\t'+
              {? UDSKL.SYM_NAD<>''
              || UDSKL.SYM_NAD+'\t'+UDSKL.OPIS_NAD
              || ''
              ?};
      _linia:=maz_utf8(_linia);
      fwrite(_uchwyt,_linia);
      UDSKL.next()
   !};
   fclose(_uchwyt);
   1
|| {? var_pres('erroreks')>0 || erroreks:=1 ?};
   FUN.info('Błąd otwarcia pliku\n%1'@[_plik])
?}


\war_mod_ini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2011]
:: OPIS: Wartosci dla modeli - inicjowanie
::   WE: _a - 1 - select
::            2 - export
::  OLD: \war_mod_ini/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? REF.S_FIRMA=REF.GRUPA | _a=1
|| {? SSTALE.AR=K__NAG.ROK_F
   || UD_POM.OKR_ZAP:=SSTALE.AO
   || UD_POM.OKR_ZAP:=null;
      OKRO_F.cntx_psh();
      OKRO_F.index('ROK'); OKRO_F.prefix(K__NAG.ROK_F);
      {? OKRO_F.first() & OKRO_F.next() || UD_POM.OKR_ZAP:=OKRO_F.ref() ?};
      OKRO_F.cntx_pop()
   ?}
|| UD_POM.OKR_ZAP:=SSTALE.AO
?};
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(K__NAG.SKID_MB);
ile_wym:=SKID_MBP.size();
SKID_MBP.cntx_pop();
{? ile_wym
|| K__POZ.cntx_psh();
   K__WAR.cntx_psh();
   {? _a=1
   || exec('tab_war','control',1)
   || exec('tab_war','control')
   ?};
   exec('zm_okr','control');
   symb_zm:=obj_new(15); ref_zm:=obj_new(15); nr_7:=0;
   {! _i:=1..15 |! symb_zm[_i]:=''; ref_zm[_i]:=null !};
   {? _a=1
   || exec('tab_war_okn','control')
   ?};
   OKRO_F.cntx_psh();
   OKRO_F.index('ROK'); OKRO_F.prefix(K__NAG.ROK_F);
   {? OKRO_F.first()
   || {!
      |? _maska:=exec('maska','control');
         K__POZ.use('yb'+_maska); K__POZ.index('K__NAG'); K__POZ.prefix(K__NAG.ref());
         K__WAR.use('yx'+_maska); K__WAR.index('K__POZ'); K__WAR.prefix();
         {? K__POZ.first()
         || TAB_WAR.index(ind_war1);
            {!
            |? _pref:='TAB_WAR.prefix(_a,K__POZ.RODZAJ';
               {! _i:=1..ile_wym
               |! symb_zm[_i]:=($('K__POZ.WYMIAR'+form(_i,-2)+'().SYMBOL'))();
                  ref_zm[_i]:=($('K__POZ.WYMIAR'+form(_i,-2)))();
                  _pref+=','''+exec('ciapek','control',symb_zm[_i])+''''
               !};
               _pref+=')';
               _siodem:=ceil((K__POZ.OKRES().NR+1)/7); _kol:=0;
               {! _i:=1..ilsied
               |! ($_pref)(_i);
                  {? _i=_siodem
                  || {? TAB_WAR.first()
                     || ($('TAB_WAR.WAR'+form(K__POZ.OKRES().NR+1-_kol,-2)+'+=K__POZ.WART'))();
                        TAB_WAR.put()
                     || TAB_WAR.blank(1);
                        TAB_WAR.SIODEMKA:=_i;
                        {! _j:=1..ile_wym
                        |! ($('TAB_WAR.WYMIAR'+form(_j,-2)+':=K__POZ.WYMIAR'+form(_j,-2)+'().SYMBOL'))();
                           ($('TAB_WAR.WYMREF'+form(_j,-2)+':=#K__POZ.WYMIAR'+form(_j,-2)))();
                           ($('TAB_WAR.OPIS'+form(_j,-2)+':=K__POZ.WYMIAR'+form(_j,-2)+'().OPIS'))()
                        !};
                        ($('TAB_WAR.WAR'+form(K__POZ.OKRES().NR+1-_kol,-2)+':=K__POZ.WART'))();
                        TAB_WAR.RODZAJ:=K__POZ.RODZAJ;
                        TAB_WAR.add()
                     ?}
                  || {? ~TAB_WAR.first()
                     || TAB_WAR.blank(1);
                        TAB_WAR.SIODEMKA:=_i;
                        {! _j:=1..ile_wym
                        |! ($('TAB_WAR.WYMIAR'+form(_j,-2)+':=K__POZ.WYMIAR'+form(_j,-2)+'().SYMBOL'))();
                           ($('TAB_WAR.WYMREF'+form(_j,-2)+':=#K__POZ.WYMIAR'+form(_j,-2)))();
                           ($('TAB_WAR.OPIS'+form(_j,-2)+':=K__POZ.WYMIAR'+form(_j,-2)+'().OPIS'))()
                        !};
                        TAB_WAR.RODZAJ:=K__POZ.RODZAJ;
                        TAB_WAR.add()
                     ?}
                  ?};
                  _kol+=7
               !};
               K__POZ.next()
            !}
         ?};
         OKRO_F.next()
      !}
   ?};
   OKRO_F.cntx_pop();
   {? _a=1
   || nr_7:={? REF.S_FIRMA=REF.GRUPA
            || 1
            || {? SSTALE.AR<>K__NAG.ROK_F | SSTALE.AO().POCZ=date(0,0,0)
               || 1
               || ceil(SSTALE.AO().NR/7)
               ?}
            ?};
      exec('tab_war_help','control');
      exec('tab_war_sel2','control');
      TAB_WAR.select()
   ?};
   K__POZ.cntx_pop();
   K__WAR.cntx_pop()
|| FUN.info('Podany w definicji model nie zawiera poziomów.'@)
?}


\tab_war_okn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2011]
:: OPIS: Wartosci dla modeli - stworzenie okienka
::  OLD: \tab_war_okn/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBP.cntx_psh();
SKID_MBP.index('LP'); SKID_MBP.prefix(K__NAG.SKID_MB);
{! _i:=1..25 |! ($('POMOC.K'+$_i+':='''''))() !};
_okno:=TAB_WAR.mk_sel({? K__NAG.ROK_F().NAZ<>''
                      || 'Wartości dla controllingu - rok obrotowy %1'@[K__NAG.ROK_F().NAZ]
                      || 'Wartości dla controllingu'@
                      ?},
                      'P',,'tab_war_sel',,,,,'U',,,,,'html_maximized');
okno:=_okno;
_edit:=TAB_WAR.mk_edit('Wartości dla controllingu'@,,'tab_war_red');
{! _i:=1..ile_wym
|! _szer:={? ile_wym<=5 || 10 || 3 ?};
   TAB_WAR.win_fld(_okno,,'WYMIAR'+form(_i,-2),,,_szer);
   {? SKID_MBP.find_key(_i)
   || ($('POMOC.K'+$_i+':=SKID_MBP.NAZ'))();
      TAB_WAR.win_efld(_edit,,'WYMIAR'+form(_i,-2),,,60,,,SKID_MBP.NAZ);
      TAB_WAR.win_efld(_edit,,'OPIS'+form(_i,-2),,,,,,,1)
   ?};
   TAB_WAR.fld_opt(_okno,'col_name="%1"'[($('POMOC.K'+$_i))()],,'WYMIAR'+form(_i,-2))
!};
OKRO_F.cntx_psh();
OKRO_F.index('ROK'); OKRO_F.prefix(K__NAG.ROK_F);
_ileokr:=OKRO_F.size();
OKRO_F.cntx_pop();
{! _i:=1.._ileokr
|! TAB_WAR.win_fld(_okno,,'WAR0'+$_i,,,7,2)
!};
K__POZ.cntx_psh();
OKRO_F.cntx_psh();
OKRO_F.index('ROK'); OKRO_F.prefix(K__NAG.ROK_F);
_jest:=0;
{? OKRO_F.first()
|| {!
   |? K__POZ.use('yb'+exec('maska','control'));
      K__POZ.index('RODZAJ'); K__POZ.prefix(5,K__NAG.ref());
      _jest:=K__POZ.first();
      _jest=0 & OKRO_F.next()
   !}
?};
OKRO_F.cntx_pop();
K__POZ.cntx_pop();
{? K__NAG.K_WERSJE().CZY_SYS='T' | _jest
|| TAB_WAR.win_act(_okno,0,'Formuła','Zapisy'@@,,'Zapisy dla pozycji'@,,"exec('zap_mod','control')",1)
?};
::TAB_WAR.win_act(_okno,0,'Formuła','Poprzednie okresy'@@,,'Przeglądanie wartości dla poprzednich okresów'@,,"exec('war_okr','control',2)",,,,,'P');
::TAB_WAR.win_act(_okno,0,'Formuła','Następne okresy'@@,,'Przeglądanie wartości dla następnych okresów'@,,"exec('war_okr','control',1)",,,,,'N');
TAB_WAR.win_act(_okno,0,'Rekord',,,,"exec('rekprzed','color','TAB_WAR#01#')");
TAB_WAR.win_act(_okno,0,'Formuła','Legenda'@@,,'Opis znaczenia kolorów wierszy'@,,"exec('legenda','color','TAB_WAR#')",,,,,'L');
TAB_WAR.win_act(_okno,,'Kolejność');
::TAB_WAR.win_btn(_okno,'text=%1,btn_label_align=center,panel=right,align=begin'['Poprzednie okresy'@],'menu:P');
::TAB_WAR.win_btn(_okno,'text=%1,btn_label_align=center,panel=right,align=begin'['Następne okresy'@],'menu:N');
TAB_WAR.win_sel(_okno);
TAB_WAR.win_edit(_edit);
SKID_MBP.cntx_pop()


\tab_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2011]
:: OPIS: Wartosci dla modeli - stworzenie tabelek tymczasowych
::   WE: Czy tabelka na potrzeby wyświetlenia danych? (1 - tak, 0/brak -nie)
::  OLD: \tab_war/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
{? _=0 | ~_a
|| TAB_WAR:=tab_tmp(17,'SIODEMKA','INTEGER','',
                    'RODZAJ','INTEGER','',
                    'WYMIAR01','STRING[16]','S01',
                    'WYMIAR02','STRING[16]','S02',
                    'WYMIAR03','STRING[16]','S03',
                    'WYMIAR04','STRING[16]','S04',
                    'WYMIAR05','STRING[16]','S05',
                    'WYMIAR06','STRING[16]','S06',
                    'WYMIAR07','STRING[16]','S07',
                    'WYMIAR08','STRING[16]','S08',
                    'WYMIAR09','STRING[16]','S09',
                    'WYMIAR10','STRING[16]','S10',
                    'WYMIAR11','STRING[16]','S11',
                    'WYMIAR12','STRING[16]','S12',
                    'WYMIAR13','STRING[16]','S13',
                    'WYMIAR14','STRING[16]','S14',
                    'WYMIAR15','STRING[16]','S15',
                    'OPIS01','STRING[60]','O01',
                    'OPIS02','STRING[60]','O02',
                    'OPIS03','STRING[60]','O03',
                    'OPIS04','STRING[60]','O04',
                    'OPIS05','STRING[60]','O05',
                    'OPIS06','STRING[60]','O06',
                    'OPIS07','STRING[60]','O07',
                    'OPIS08','STRING[60]','O08',
                    'OPIS09','STRING[60]','O09',
                    'OPIS10','STRING[60]','O10',
                    'OPIS11','STRING[60]','O11',
                    'OPIS12','STRING[60]','O12',
                    'OPIS13','STRING[60]','O13',
                    'OPIS14','STRING[60]','O14',
                    'OPIS15','STRING[60]','O15',
                    'WYMREF01','INTEGER','',
                    'WYMREF02','INTEGER','',
                    'WYMREF03','INTEGER','',
                    'WYMREF04','INTEGER','',
                    'WYMREF05','INTEGER','',
                    'WYMREF06','INTEGER','',
                    'WYMREF07','INTEGER','',
                    'WYMREF08','INTEGER','',
                    'WYMREF09','INTEGER','',
                    'WYMREF10','INTEGER','',
                    'WYMREF11','INTEGER','',
                    'WYMREF12','INTEGER','',
                    'WYMREF13','INTEGER','',
                    'WYMREF14','INTEGER','',
                    'WYMREF15','INTEGER','',
                    'WAR01','REAL','W1',
                    'WAR02','REAL','W2',
                    'WAR03','REAL','W3',
                    'WAR04','REAL','W4',
                    'WAR05','REAL','W5',
                    'WAR06','REAL','W6',
                    'WAR07','REAL','W7'
                )
|| TAB_WAR:=tab_tmp(17,'SIODEMKA','INTEGER','',
                    'RODZAJ','INTEGER','',
                    'WYMIAR01','STRING[16]','S01',
                    'WYMIAR02','STRING[16]','S02',
                    'WYMIAR03','STRING[16]','S03',
                    'WYMIAR04','STRING[16]','S04',
                    'WYMIAR05','STRING[16]','S05',
                    'WYMIAR06','STRING[16]','S06',
                    'WYMIAR07','STRING[16]','S07',
                    'WYMIAR08','STRING[16]','S08',
                    'WYMIAR09','STRING[16]','S09',
                    'WYMIAR10','STRING[16]','S10',
                    'WYMIAR11','STRING[16]','S11',
                    'WYMIAR12','STRING[16]','S12',
                    'WYMIAR13','STRING[16]','S13',
                    'WYMIAR14','STRING[16]','S14',
                    'WYMIAR15','STRING[16]','S15',
                    'OPIS01','STRING[60]','O01',
                    'OPIS02','STRING[60]','O02',
                    'OPIS03','STRING[60]','O03',
                    'OPIS04','STRING[60]','O04',
                    'OPIS05','STRING[60]','O05',
                    'OPIS06','STRING[60]','O06',
                    'OPIS07','STRING[60]','O07',
                    'OPIS08','STRING[60]','O08',
                    'OPIS09','STRING[60]','O09',
                    'OPIS10','STRING[60]','O10',
                    'OPIS11','STRING[60]','O11',
                    'OPIS12','STRING[60]','O12',
                    'OPIS13','STRING[60]','O13',
                    'OPIS14','STRING[60]','O14',
                    'OPIS15','STRING[60]','O15',
                    'WYMREF01','INTEGER','',
                    'WYMREF02','INTEGER','',
                    'WYMREF03','INTEGER','',
                    'WYMREF04','INTEGER','',
                    'WYMREF05','INTEGER','',
                    'WYMREF06','INTEGER','',
                    'WYMREF07','INTEGER','',
                    'WYMREF08','INTEGER','',
                    'WYMREF09','INTEGER','',
                    'WYMREF10','INTEGER','',
                    'WYMREF11','INTEGER','',
                    'WYMREF12','INTEGER','',
                    'WYMREF13','INTEGER','',
                    'WYMREF14','INTEGER','',
                    'WYMREF15','INTEGER','',
                    'WAR01','REAL','W1',
                    'WAR02','REAL','W2',
                    'WAR03','REAL','W3',
                    'WAR04','REAL','W4',
                    'WAR05','REAL','W5',
                    'WAR06','REAL','W6',
                    'WAR07','REAL','W7',
                    'WAR08','REAL','W8',
                    'WAR09','REAL','W9',
                    'WAR010','REAL','W10',
                    'WAR011','REAL','W11',
                    'WAR012','REAL','W12',
                    'WAR013','REAL','W13',
                    'WAR014','REAL','W14',
                    'WAR015','REAL','W15',
                    'WAR016','REAL','W16',
                    'WAR017','REAL','W17',
                    'WAR018','REAL','W18',
                    'WAR019','REAL','W19',
                    'WAR020','REAL','W20',
                    'WAR021','REAL','W21',
                    'WAR022','REAL','W22',
                    'WAR023','REAL','W23',
                    'WAR024','REAL','W24',
                    'WAR025','REAL','W25'
                )
?};
ind_war1:=TAB_WAR.index('?');
_ind:='TAB_WAR.ndx_tmp('''',1,';
_ind3:=_ind+'\'SIODEMKA\',,0,';
{! _i:=1..15
|! _ind+=''''+'WYMIAR'+form(_i,-2)+''',,0,';
   _ind3+=''''+'WYMIAR'+form(_i,-2)+''',,0,'
!};
_ind:=_ind-1;
_ind3:=_ind3-1;
_ind+=')';
_ind3+=')';
ind_war2:=($_ind)();
ind_war3:=($_ind3)()


\zm_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2011]
:: OPIS: Wartosci dla modeli - ustawianie zmiennych
::  OLD: \zm_okr/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
OKRO_F.cntx_psh();
OKRO_F.index('ROK'); OKRO_F.prefix(K__NAG.ROK_F);
_il_okr:=OKRO_F.size();
OKRO_F.cntx_pop();
ilsied:=ceil(_il_okr/7)


\ciapek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2011]
:: OPIS: Dorzuca \ jesli w ciagu sa znaki '
::   WE: _a - badany string
::  OLD: \ciapek/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a*'''' & +_a
|| _pr1:=_a; _pr2:='';
   {! _x:=1..(+_pr1)
   |! _pr2+={? 1+_pr1='''' || '\\'+(1+_pr1) || (1+_pr1) ?};
      _pr1:=(1-_pr1)
   !};
   _pr2
|| _a
?}


\tab_war_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wartosci - ustawienie zakresu
::  OLD: \tab_war_sel/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_WAR.index(ind_war1); TAB_WAR.prefix(nr_7);
{? TAB_WAR.size()
|| _find:='TAB_WAR.find_key(TAB_WAR.RODZAJ,';
   {! _i:=1..ile_wym
   |! _find+={? _i=1 || '''' || ',''' ?}+exec('ciapek','control',($('TAB_WAR.WYMIAR'+form(_i,-2)))())+''''
   !};
   _find+=')';
   ($_find)()
?};
_wykl:='';
{? nr_7=1 || _wykl+='P' ?};
{? nr_7=ilsied || _wykl+='N' ?};
TAB_WAR.actions_grayed(TAB_WAR.win_sel('?'),_wykl);
{! _i:=16..22
|! ($('POMOC.K'+$_i+':='''''))()
!};
OKRO_F.cntx_psh();
OKRO_F.index('ROK'); OKRO_F.prefix(K__NAG.ROK_F); _okres:={? nr_7=1 || 0 || -1 ?}; _siodem:=1;
{? OKRO_F.first()
|| {! |?
      _okres+=1;
      {? _okres=7 || _okres:=0; _siodem+=1 ?};
      {? _siodem=nr_7
      || POMOC.K16:=OKRO_F.NAZ;
         {? OKRO_F.next() || POMOC.K17:=OKRO_F.NAZ ?};
         {? OKRO_F.next() || POMOC.K18:=OKRO_F.NAZ ?};
         {? OKRO_F.next() || POMOC.K19:=OKRO_F.NAZ ?};
         {? OKRO_F.next() || POMOC.K20:=OKRO_F.NAZ ?};
         {? OKRO_F.next() || POMOC.K21:=OKRO_F.NAZ ?};
         {? OKRO_F.next() || POMOC.K22:=OKRO_F.NAZ ?};
         {! _ii:=1..7
         |! TAB_WAR.fld_opt(TAB_WAR.win_sel('?'),'col_name="%1"'[($('POMOC.K'+$(_ii+15)))()],TAB_WAR,'WAR0'+$_ii)
         !};
         0
      || OKRO_F.next()
      ?}
   !}
?};
OKRO_F.cntx_pop();
1


\war_mod_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2011]
:: OPIS: Wartosci dla modeli - kasowanie
::  OLD: \war_mod_del/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TAB_WAR','ind_war1','ind_war2','ilsied','symb_zm','ref_zm','nr_7','ile_wym')


\okn_skl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [2011]
:: OPIS: Ustawienie okienka redakcyjnego tabeli UD_SKL
::  OLD: \okn_skl/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_TYP.SYMBOL='POZ_BUD' | UD_TYP.SYMBOL='SPR_PB'
|| UD_SKL.win_edit('REDPB')
|| UD_SKL.win_edit('RED')
?}


\dspsumsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Na wyswietl dla pol SKID.SKXDRAZE i SKID.SKXDPOZO
::   WY: 1/0 - czy wyswietlac wartosci w polach
::  OLD: \dspsumsk/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| _tab:=EPODZ;
   {? var_pres('typobi')<=0
   || {? EDOKUM.TYP().TYPOBIEG().NAZWA='Obieg faktur'
      || typobi:=1
      |? EDOKUM.TYP().TYPOBIEG().NAZWA='Obieg wniosków'
      || typobi:=2
      |? EDOKUM.TYP().TYPOBIEG().NAZWA='Obieg delegacji'
      || typobi:=3
      ?}
   ?};
   {? var_pres('typobi')>0
   || PAR_WYDR.RPAR3:=EDOKUM.NETTO;
      {? typobi=3 || PAR_WYDR.RPAR3:=100 ?}
   ?}
|| _tab:=cur_tab(1,1)
?};
_dsp:=1;
_tab.cntx_psh();
{? _tab.f_active()
|| {? _tab.f_first()
   || _model:=_tab.SKID_MB;
      {! |?
         _dsp:=(_model=_tab.SKID_MB);
         _dsp & _tab.f_next()
      !}
   ?}
|| {? _tab.first()
   || _model:=_tab.SKID_MB;
      {! |?
         _dsp:=(_model=_tab.SKID_MB);
         _dsp & _tab.next()
      !}
   ?}
?};
{? _dsp & {? app_info('web_sesid')='' || cur_afld()='SKXDRAZE' || 1 ?}
|| _val:=0;
   {? _tab.f_active()
   || _next:=_tab.f_first();
      {! |? _next
      |! _val+=_tab.WART;
         _next:=_tab.f_next()
      !}
   || _sum:=sql('select sum(:_b) sum_col from prefixed_table(:_a)',_tab,'WART');
      {? _sum.first() || _val:=_sum.SUM_COL ?}
   ?};
   {? app_info('web_sesid')=''
   || fld(_val)
   || SKID.SKXDRAZE:=_val
   ?};
   SKID.SKXDPOZO:=PAR_WYDR.RPAR3-SKID.SKXDRAZE
?};
{? _dsp & app_info('web_sesid')='' & cur_afld()='SKXDPOZO' & _tab.f_active()
|| _dsp:=0
?};
_tab.cntx_pop();
_dsp


\ae_skidxd_mb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula po redakcji pola SKIDXD.SKID_MB
::  OLD: \ae_skidxd_mb/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
_tab:={? app_info('web_sesid')<>''
      || EPODZ
      || cur_tab(1,1)
      ?};
_pole:={? app_info('web_sesid')<>''
       || EPODZ.SKID_MB
       || fld()
       ?};
_model:=0;
{? app_info('web_sesid')<>''
|| _par:=web_global_params_get();
   {? type_of(_par)>100 & var_pres('mod_war',_par)>0
   || _model:=_par.mod_war
   ?}
?};
{? _tab.SKID_MB=null
|| UD_POM.SKID_MBN:=null;
   FUN.info('Nie wybrano modelu.'@); _zwrot:=0
|? (app_info('web_sesid')='' & _pole<>UD_POM.SKID_MBN & UD_POM.SKID_MBN<>null) |
   (app_info('web_sesid')<>'' & #EPODZ.SKID_MB<>_model & _model)
|| {? ~exec('defmodel','control',_pole)
   || FUN.info('Nie zdefiniowano wymiarów dla wybranego modelu.'
              '\nZdefiniuj prawidłowo model lub wybierz inny model.'@);
      _zwrot:=0
   || UD_POM.JORG:=''; _tab.JORG:=null;
      UD_POM.OKOSZ:=''; _tab.OKOSZ:=null;
      UD_POM.PBUD:=''; _tab.PBUD:=null;
      UD_POM.WYM4:=''; _tab.WYM4:=null;
      UD_POM.WYM5:=''; _tab.WYM5:=null;
      {? var_pres('KONTO')>100 & var_pres('K1',KONTO)=27 || KONTO.K1:='' ?};
      {? _tab=EPODZ || EPODZ.WART:=0; EPODZ.WAL:=EPODZ.JM:=null ?}
   ?}
?};
{? app_info('web_sesid')=''
|| {? _tab=EPODZ || exec('set_var_podz','obiegi') ?};
   win_disp()
|| web_global_params_set(exec('obj_ntab_set','#array',_par,
                         'mod_war',#EPODZ.SKID_MB
                         ));
   exec('pola_epodz','obiegi',2)
?};
_zwrot


\defmodel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ  [2008]
:: OPIS: Sprawdzenie czy model jest poprawnie zdefiniowany
::   WE: _a - ref modelu dla controllingu
::   WY: 0 - nie zdefiniowano zadnego wymiaru
::       1 - zdefiniowano co najmniej jeden wymiar
::  OLD: \defmodel/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBP.index('LP');
SKID_MBP.prefix(_a);
SKID_MBP.first()


\ae_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Po redakcji pola SKIDXD.WART
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab.KURS
|| cur_tab.WARTW:=(cur_tab.WART*jedn/cur_tab.KURS)$2
|| {? cur_tab.WARTW || cur_tab.KURS:=(cur_tab.WART*jedn/cur_tab.WARTW)$6 ?};
   {? cur_tab(1,1).JM
   || _prec:=6;
      {? UD_TYP.index('SYMBOL'); UD_TYP.prefix('POZ_BUD','POZ_BUD'); UD_TYP.first()
      || {? UD_SKL.prefix(UD_TYP.ref(),UD_POM.PBUD,UD_POM.PBUD); UD_SKL.first()
         || SKIDXDUD.index('POZ'); SKIDXDUD.prefix(UD_SKL.ref());
            {? SKIDXDUD.first() || _prec:=SKIDXDUD.PREC ?}
         ?}
      ?};
      cur_tab(1,1).WART:=cur_tab(1,1).WART$_prec
   ?}
?}


\chk_skl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Sprawdza wystepowanie elementu w schemacie
::   WE: _a: typ schematu; _b: element; [_c: dialog: 0 - nie, 1 - tak]
::       _d - schemat z modelu (opcjonalny jezeli nie podamy TO jest brany domyslny)
::  OLD: \chk_skl/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<3 || _c:=0 ?}; _ret:=0; _kom:=0;
UD_TYP.index('SYMBOL');
{? ~_ret
|| {? var_pres('po_ok')<=0 & ~+_b
   || {? _a='PODZORG' || _m:='jednostki organizacyjnej'
      |? _a='OB_KOSZ' || _m:='obiektu kosztów'
      |? _a='POZ_BUD' || _m:='pozycji budżetowej'
      || _m:=''
      ?};
      {? _c || _kom:=1; FUN.info('Nie wskazano %1'@[_m]) ?}
   || UD_TYP.prefix(_a,_a);
      {? UD_TYP.first()
      || UD_SKL.index('SYMBOL'); UD_SKL.prefix(UD_TYP.ref(),_b);
         {? UD_SKL.first()
         || {? UD_SKL.LISTA<>'T' &  {? var_pres('wybntree')>0 & (cur_afld()='PBUD_R' | cur_afld()='PBUD_M' | cur_afld()='PBUD_S' | cur_afld()='PBUD_U') || 0 || 1 ?}
            || {? _c & ~_kom
               || FUN.info('Element %1 nie może być wykorzystywany w ewidencji.\n'@[UD_SKL.SYMBOL]);
                  _kom:=1
               ?}
            || {? var_pres('po_ok')<=0 || fld(UD_SKL.SYMBOL) ?};
               UD_SCH.index('SYMBOL'); UD_SCH.prefix(UD_TYP.ref(),_d,_d);
               {? UD_SCH.first()
               || UD_DEF.index('PODTEC'); UD_DEF.prefix(UD_SCH.ref(),UD_SKL.ref());
                  {? UD_DEF.first() || _ret:=1 ?}
               ?}
            ?}
         ?}
      ?};
      {? _c & +_b & ~_ret & ~_kom
      || {? _a='PODZORG' || _m:='Podana jednostka organizacyjna'@
         |? _a='OB_KOSZ' || _m:='Podany obiekt kosztów'@
         |? _a='POZ_BUD' || _m:='Podana pozycja budżetowa'@
         || _m:=''
         ?};
         FUN.info('%1 nie występuje w schemacie.'@[_m]); _kom:=1
      ?}
   ?}
?};
_ret


\ust_pods
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Ustawianie podsumowan w okienkach wertowania tabeli SKIDXD
::  OLD: \ust_pods/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
SKID.SKXDRAZE:=SKID.SKXDPOZO:=0;
SKIDXD.cntx_psh();
_ref:=SKIDXD.ref();
SKIDXD.index('DOK'); SKIDXD.prefix(DOK.ref());
{? SKIDXD.first()
|| {! |?
      {? {? -menu_txt='popraw' || SKIDXD.ref()<>_ref || 1 ?} &
         exec('czy_wart','control')
      || SKID.SKXDRAZE+=SKIDXD.WART
      ?};
      SKIDXD.next()
   !}
?};
SKIDXD.cntx_pop();
{? -menu_txt<>'usuń' & exec('czy_wart','control')
|| SKID.SKXDRAZE+=SKIDXD.WART
?};
SKID.SKXDPOZO:=PAR_WYDR.RPAR3-SKID.SKXDRAZE;
1


\czy_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Sprawdza, czy element jest wartosciowy
::  OLD: \czy_wart/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
SKIDXDUD.cntx_psh();
SKIDXDUD.index('POZ'); SKIDXDUD.prefix(SKIDXD.PBUD);
_wart:=(SKIDXDUD.first() & SKIDXDUD.WART_IL='W');
SKIDXDUD.cntx_pop(); _wart


\dim_name
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca nazwe wymiaru
::   WE: _a - wskazanie na model
::       _b - nr wymiaru
::----------------------------------------------------------------------------------------------------------------------
{? _a<>null
|| SKID_MBP.index('LP');
   SKID_MBP.prefix(_a);
   {? _b & SKID_MBP.find_key(_b)
   || SKID_MBP.NAZ
   || ''
   ?}
|| ''
?}


\be_dim
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed redakcją wymiaru modelu
::   WE: _a - wskazanie na model
::       _b - nr elementu
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| SKID_MBP.cntx_psh();
   SKID_MBP.index('LP'); SKID_MBP.prefix(_a,_b);
   _jest:=SKID_MBP.first();
   {? _jest
   || SKID_MBP.UD_SCH().UD_TYP()
   ?};
   SKID_MBP.cntx_pop();
   _jest
?}


\f3_dim
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Klawisz F3 dla wymiaru
::   WE: _a  - wskazanie na model
::       _b  - nr elementu
::----------------------------------------------------------------------------------------------------------------------
_domain:=~~;
{? var_press('F3DimArea')>0
|| _domain:=exec('cur_domain_sym','#b__box');
   {? _domain=''
   || _domain:=3+AreaTitle.area
   ?}
?};

{? _a
|| {? _b=1 || ud_skl_pb:=1 ?};
   _sym:='';
   SKID_MBP.cntx_psh();
   SKID_MBP.index('LP'); SKID_MBP.prefix(_a,_b);
   {? SKID_MBP.first()
   || SKID_MBP.UD_SCH().UD_TYP();
      {? app_info('web_sesid')<>''
      || UD_POM.UDDEFUPR:=exec('ud_def_upr_id','control')
      ?};
      _sym:={? UD_POM.UDDEFUPR<>''
            || exec('ud_def_upr_f3','control',SKID_MBP.ref())
            || exec('ud_def_symbol_f3','schemat',SKID_MBP.UD_SCH().UD_TYP,SKID_MBP.UD_SCH,_domain)
            ?}
   ?};
   SKID_MBP.cntx_pop();
   VAR_DEL.delete('ud_skl_pb');
   _sym
?}


\ae_dim
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Po redakcji wymiaru
::   WE: _a - wskazanie na model
::       _b - nr elementu
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _ref:=null;
   SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(_a,_b);
   {? SKID_MBP.first()
   || SKID_MBP.UD_SCH().UD_TYP();
      _ok:=1;
      {? app_info('web_sesid')<>''
      || UD_POM.UDDEFUPR:=exec('ud_def_upr_id','control');
         _sym:=form(wart_wym)
      || _sym:=fld()
      ?};
      {? UD_POM.UDDEFUPR='' | exec('is_ud_udt_upr','control',_sym)
      || _ref:=exec('ud_def_symbol_ae','schemat',UD_SCH.ref())
      ?};
      VAR_DEL.delete('wart_wym')
   ?};
   SKID_MBP.cntx_pop();
   _ref
|| null
?}


\enable_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia dostępność pól związnych z wartościami podziałów
::   WE: _a - miejsce operacji
::            1-rejestracja podziałów
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| _mod:=SKIDXD.SKID_MB<>null & SKIDXD.PBUD<>null;
   _typ:='';
   _wal:=0;
   SKIDXDUD.index('POZ');
   SKIDXDUD.prefix(SKIDXD.PBUD);
   {? SKIDXDUD.first()
   || UD_POM.WART_IL:=_typ:=SKIDXDUD.WART_IL;
      _wal:=SKIDXDUD.WSK_WAL='T'
   ?};
   _wal2:=_wal & SKIDXD.WAL<>null & SKIDXD.WAL<>exec('wal_nar','dok_fks');
   SKIDXD.efld_opt('RED','enable='+$(_mod & _typ='W' & _wal),SKIDXD,'WAL');
   SKIDXD.efld_opt('RED','mark='+$(_mod & _typ='W' & _wal),SKIDXD,'WAL');
   SKIDXD.efld_opt('RED','enable='+$(_mod & _typ='W' & _wal2),SKIDXD,'WARTW');
   SKIDXD.efld_opt('RED','mark='+$(_mod & _typ='W' & _wal2),SKIDXD,'WARTW');
   SKIDXD.efld_opt('RED','enable='+$(_mod & _typ='W' & _wal2),SKIDXD,'KURS');
   SKIDXD.efld_opt('RED','mark='+$(_mod & _typ='W' & _wal2),SKIDXD,'KURS');
   SKIDXD.efld_opt('RED','enable='+$(_mod & _typ='I'),SKIDXD,'JM')
?};
~~


\bv_skidxd_mb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed wyswietleniem SKIDXD.SKID_MB
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' | cur_tab(1,1)=PROJ_REF || return(1) ?};
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(cur_tab(1,1).SKID_MB);
{! _nr:=1..5
|! _jest:=SKID_MBP.find_key(_nr);
   _pole:={? _nr=1 || 'PBUD'
          |? _nr=2 || 'JORG'
          |? _nr=3 || 'OKOSZ'
          |? _nr=4 || 'WYM4'
          |? _nr=5 || 'WYM5'
          || ''
          ?};
   cur_tab(1,1).efld_opt(cur_tab(1,1).win_edit('?'),'enable='+$_jest,cur_tab(1,1),_pole);
   cur_tab(1,1).efld_opt(cur_tab(1,1).win_edit('?'),'enable='+$_jest,UD_POM,_pole);
   cur_tab(1,1).efld_opt(cur_tab(1,1).win_edit('?'),'enable='+$_jest,UD_POM,'NAZ_WYM'+$_nr);
   {? _pole='PBUD' | cur_tab(1,1)<>SCH_XD
   || cur_tab(1,1).efld_opt(cur_tab(1,1).win_edit('?'),'mark='+$_jest,UD_POM,'NAZ_WYM'+$_nr)
   || cur_tab(1,1).efld_opt(cur_tab(1,1).win_edit('?'),'mark=0',UD_POM,'NAZ_WYM'+$_nr)
   ?}
!};
SKID_MBP.cntx_pop();
~~


\field2dim
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca numer wymiaru na podstawie nazyw pola
::   WE: [_a] - akronim pola wymiaru, domyslnie biezaco edytowane pole
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=cur_afld() ?};
_a:=4+_a;
{? _a='PBUD'
|| 1
|? _a='JORG'
|| 2
|? _a='OKOS'
|| 3
|? _a='WYM4'
|| 4
|? _a='WYM5'
|| 5
?}


\dim2field
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca akronim pola wymiaru
::   WE: _a - nr wymiaru
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| 'PBUD'
|? _a=2
|| 'JORG'
|? _a=3
|| 'OKOSZ'
|| 'WYM'+$_a
?}


\bd_naz_wym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula przed wyswietleniem pola zmiennej nazwa wymiaru. Wypelnia pola
::       odpowiednia nazwa wymiaru o numerze podanym przez parametr _a
::   WE:  _a  - numer wymiaru w postaci stringu z zakresu 1..5
::  OLD: \bd_naz_wym/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_POM.SKID_MB
|| _nr:=#_a;
   _name:=exec('dim_name','control',UD_POM.SKID_MB,_nr);
   {? _name<>''
   || ($('UD_POM.NAZ_WYM'+_a))():=_name;
      ''
   || ($('UD_POM.NAZ_WYM'+_a))():='';
      Color.fnd_kol(Color.id_nv)
   ?}
|| ($('UD_POM.NAZ_WYM'+_a))():='';
   Color.fnd_kol(Color.id_nv)
?}


\beokrpoc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Przed redakcja pola UD_POM.OKR_POCZ
::  OLD: \beokrpoc/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_POM.ROK_POCZ<>null
|| UD_POM.ROK_POCZ();
   PROJ_ZM.ROKBLANK:=UD_POM.ROK_POCZ;
   1
|| UD_POM.OKR_POCZ:=null; 0
?}


\aeokrpoc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Po redakcji pola UD_POM.OKR_POCZ
::  OLD: \aeokrpoc/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_POM.OKR_POCZ=null
|| FUN.info('Nie wprowadzono okresu.'@); 0
|| win_disp(); 1
?}


\aeokrkon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Po redakcji pola UD_POM.OKR_KON
::  OLD: \aeokrkon/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_POM.OKR_KON=null
|| FUN.info('Nie wprowadzono okresu.'@); 0
|| win_disp(); 1
?}


\beokrkon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Przed redakcja pola UD_POM.OKR_KON
::  OLD: \beokrkon/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_POM.ROK_KON<>null
|| UD_POM.ROK_KON(); 1
|| UD_POM.OKR_KON:=null; 0
?}


\aerokkon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Po redakcji pola UD_POM.ROK_KON
::  OLD: \aerokkon/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? UD_POM.ROK_KON<>null
|| {? UD_POM.OKR_KON<>null
   || OKRO_F.index('ROK'); OKRO_F.prefix(UD_POM.ROK_KON);
      {? ~OKRO_F.seek(UD_POM.OKR_KON) || UD_POM.OKR_KON:=null; win_disp() ?}
   ?}
|| FUN.info('Nie wprowadzono roku.'@); _zwrot:=0
?};
_zwrot


\add_knag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Archiwum wartosci - dolaczanie
::   WE: [_a] - model
::       [_b] - wersja
::       [_c] - rok
::       [_d] - firma
::  OLD: \add_knag/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
K__NAG.blank(1);
K__NAG.SKID_MB:={? var_press('_a')>0 || _a || SKID_MBN.ref() ?};
K__NAG.K_WERSJE:={? var_press('_b')>0 || _b || K_WERSJE.ref() ?};
K__NAG.ROK_F:={? var_press('_c')>0 || _c || ROK_F.ref() ?};
K__NAG.FIRMA:={? var_press('_d')>0 || _d || REF.FIRMA ?};
_nr:=-1; _zwrot:=0;
{!
|? _nr+=1; K__NAG.KOD:=form(_nr,-6,0,'9');
   _zwrot:=K__NAG.add(1); ~_zwrot
!};
_zwrot


\k__poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Edycja rekordow w ta beli K__POZ
::   WE: _a - wartosc
::       _b - opcja - jesli zadeklarowana i rowna 1 - zawsze nadgrywanie wartosci
::       _c - opcja - rodzaj wartosci (zgodne z K__POZ.RODZAJ)
::  OLD: \k__poz/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<=0 || _b:=0 ?};
{? var_pres('_c')<=0 || _c:=0 ?};
_prec:=exec('zaokr','control',wym[1]);
OKRO_F.cntx_psh();
{? REF.S_FIRMA=REF.GRUPA & CON_FUN.CON_RODF().NUM_TYP=15 || OKRO_F_G.OKRO_F_G() ?};
K__POZ.index('RODZAJ');
K__POZ.prefix(_c,K__NAG.ref(),OKRO_F.ref(),wym[1],wym[2],wym[3],wym[4],wym[5],wym[6],wym[7],wym[8],wym[9],wym[10],wym[11],wym[12],wym[13],wym[14],wym[15]);
{? K__POZ.first()
|| {? _b || K__POZ.WART:=_a$_prec || K__POZ.WART+=_a$_prec ?};
   _ok:=K__POZ.put()
|| K__POZ.blank(1);
   K__POZ.K__NAG:=K__NAG.ref();
   K__POZ.OKRES:=OKRO_F.ref();
   K__POZ.WYMIAR01:=wym[1];
   K__POZ.WYMIAR02:=wym[2];
   K__POZ.WYMIAR03:=wym[3];
   K__POZ.WYMIAR04:=wym[4];
   K__POZ.WYMIAR05:=wym[5];
   K__POZ.WYMIAR06:=wym[6];
   K__POZ.WYMIAR07:=wym[7];
   K__POZ.WYMIAR08:=wym[8];
   K__POZ.WYMIAR09:=wym[9];
   K__POZ.WYMIAR10:=wym[10];
   K__POZ.WYMIAR11:=wym[11];
   K__POZ.WYMIAR12:=wym[12];
   K__POZ.WYMIAR13:=wym[13];
   K__POZ.WYMIAR14:=wym[14];
   K__POZ.WYMIAR15:=wym[15];
   K__POZ.WART:=_a$_prec;
   K__POZ.RODZAJ:=_c;
   _ok:=K__POZ.add()
?};
OKRO_F.cntx_pop();
_ok


\zaokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Ustala wskaznik zaokraglenia dla wartosci
::   WE: _a - ref pozycji budzetowej
::  OLD: \zaokr/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=2;
{? _a<>null
|| UD_SKL.cntx_psh(); UD_SKL.prefix();
   {? UD_SKL.seek(_a)
   || SKIDXDUD.cntx_psh();
      SKIDXDUD.index('POZ'); SKIDXDUD.prefix(UD_SKL.ref());
      {? SKIDXDUD.first() & SKIDXDUD.WART_IL='I' || _zwrot:=SKIDXDUD.PREC ?};
      SKIDXDUD.cntx_pop()
   ?};
   UD_SKL.cntx_pop()
?};
_zwrot


\aerokpoc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Po redakcji pola UD_POM.ROK_POCZ
::  OLD: \aerokpoc/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? UD_POM.ROK_POCZ<>null
|| {? UD_POM.OKR_POCZ<>null
   || OKRO_F.index('ROK'); OKRO_F.prefix(UD_POM.ROK_POCZ);
      {? ~OKRO_F.seek(UD_POM.OKR_POCZ) || UD_POM.OKR_POCZ:=null; win_disp() ?}
   ?}
|| FUN.info('Nie wprowadzono roku.'@); _zwrot:=0
?};
_zwrot


\opiszwym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGO [2008]
:: OPIS: Ustawienie wartoci zmiennej z opisem wymiarow dla modelu
::  OLD: \opiszwym/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
K_ES.W1:=K_ES.W2:=K_ES.W3:=K_ES.W4:=K_ES.W5:='';
{? ZM.SKID_MBN<>null
|| SKID_MBP.index('LP'); SKID_MBP.prefix(ZM.SKID_MBN);
   {? SKID_MBP.first()
   || {! |? {? SKID_MBP.LP>0 & SKID_MBP.LP<6
            || ($('K_ES.W'+$(SKID_MBP.LP)+':='+''''+SKID_MBP.NAZ+''''))()
            ?};
            SKID_MBP.next
      !}
   ?}
?};
KTRWP.fld_opt('SELEKCJ2','col_name="%1"'[K_ES.W1],KTRWP,'PBUD','SYMBOL');
KTRWP.fld_opt('SELEKCJ2','col_name="%1"'[K_ES.W2],KTRWP,'JORG','SYMBOL');
KTRWP.fld_opt('SELEKCJ2','col_name="%1"'[K_ES.W3],KTRWP,'OKOSZ','SYMBOL');
KTRWP.fld_opt('SELEKCJ2','col_name="%1"'[K_ES.W4],KTRWP,'WYM4','SYMBOL');
KTRWP.fld_opt('SELEKCJ2','col_name="%1"'[K_ES.W5],KTRWP,'WYM5','SYMBOL');
KTRWP.fld_opt('SELEKCJ3','col_name="%1"'[K_ES.W1],KTRWP,'PBUD','SYMBOL');
KTRWP.fld_opt('SELEKCJ3','col_name="%1"'[K_ES.W2],KTRWP,'JORG','SYMBOL');
KTRWP.fld_opt('SELEKCJ3','col_name="%1"'[K_ES.W3],KTRWP,'OKOSZ','SYMBOL');
KTRWP.fld_opt('SELEKCJ3','col_name="%1"'[K_ES.W4],KTRWP,'WYM4','SYMBOL');
KTRWP.fld_opt('SELEKCJ3','col_name="%1"'[K_ES.W5],KTRWP,'WYM5','SYMBOL');
1


\sel_mbn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: akcja Zmiana modelu
::   WE: _a - 1 - bez ustawianie danych
::            2 - ustawianie danych
::       _b - 1 - modele ewidencyjne "niepracownicze"
::            2 - modele "pracownicze"
::  OLD: \sel_mbn/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_o:=SKID_MBN.mk_sel('Model danych'@,'P',,'skidmbn1',,,,,'U');
SKID_MBN.win_fld(_o,,'KOD');
SKID_MBN.win_fld(_o,,'NAZ',,,60);
SKID_MBN.win_act(_o,,'Formuła','Wybierz'@@,,,"exec('tenmodel','control')",,1,,,,'W');
SKID_MBN.win_sel(_o);
{? cur_tab(1,1).name(1)='cog????' & (__F_ZATR.P='Z' | __F_ZATR.P='P')
|| SKID_MBN.index('TYP'); SKID_MBN.prefix('P')
|| SKID_MBN.index('EWID'); SKID_MBN.prefix('T','O')
?};
{? UD_POM.SKID_MB<>null || UD_POM.SKID_MB() || SKID_MBN.first() ?};
{? SKID_MBN.select(,1)
|| {? _a=1
   || 1
   || {? cur_tab(1,1).name(1)='cog????'
      || {? UD_POM.SKID_MB=KST_PAR.SKID_MB || CON_KG.actions('WER','dpu:d',,1) || CON_KG.actions('WER',,,1) ?};
         CON_KG.hdr_sel; grp_disp(CON_KG,'WER'); CON_KG.hdr_sel; CON_KG.hdr_sel(' %1'@[UD_POM.SKID_MB().KOD])
      |? cur_tab(1,1).name(1)='conkh'
      || {? VAR.CON='F'
         || CON_KH.prefix('F',SKID_MBN.ref); grp_disp(CON_KH,'WER_W')
         |? VAR.CON='P'
         || CON_KH.prefix('P',P.ref,SKID_MBN.ref); grp_disp(CON_KH,'WER_P')
         |? VAR.CON='Z'
         || CON_KH.prefix('Z',P.ref,SKID_MBN.ref); grp_disp(CON_KH,'WER_Z')
         ?}
      |? cur_tab(1,1).name(1)='cxnw????'
      || {? VAR.CON='P'
         || SmbnP:=SKID_MBN.ref();
            exec('con_kk_title','control','WER');
            grp_disp(P,'CTR',1);
            1
         |? VAR.CON='Z'
         || SmbnZ:=SKID_MBN.ref();
            exec('con_kk_title','control','WERZ');
            grp_disp(P,'CTR',1)
         ?}
      || CON_KH.prefix('R',RH.ref,SKID_MBN.ref);
         {? CON_KH.first
         || CON_KW.prefix(CON_KH.ref); CON_KW.first
         || exec('null_ud_pom','control'); CON_KH.SKID_MB:=SKID_MBN.ref; CON_KH.add;
            CON_KW.prefix(CON_KH.ref); CON_KW.first
         ?}
      ?}
   ?}
|| 0
?}


\tenmodel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MAKO [2010]
:: OPIS: Wartosci podzialow controllingowych
::  OLD: \tenmodel/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
{? SKID_MBP.first()
|| ZM.SKID_MBN:=UD_POM.SKID_MB:=SKID_MBN.ref();
   exec('opiszwym','control'); sel_exit()
|| FUN.info('Wybrany model nie zawiera zdefiniowanych pozycji.'@)
?};
SKID_MBP.cntx_pop();
1


\usu_mod2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Usuwanie wartosci dla modeli dla zadanego przedzialu okresow - formula wewnetrzna.
::       Musi byc wywolywana w transakcji.
::   WE: _a - rodzaj wartosci do skasowania (K__POZ.RODZAJ), string z wartosciami oddzielonymi przecinkami
::       [_b] - dodatkow formuła do wykonania
::  OLD: \usu_mod2/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
K_WERSJE.cntx_psh();
_wnsys:=K__NAG.K_WERSJE().CZY_SYS='N';
K_WERSJE.cntx_pop();
K__NAG.ROK_F();
K__POZ.cntx_psh();
K__WAR.cntx_psh();
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
{? OKRO_F.seek(UD_POM.OKR_P)
|| {!
   |? {? _wnsys | exec('can_fun_run','control',1)
      || _maska:=exec('maska','control');
         K__POZ.use('yb'+_maska); K__POZ.index('K__NAG');
         K__WAR.use('yx'+_maska); K__WAR.index('K__POZ');
         echo('Usuwanie wartości dla okresu: %1 %2'@[OKRO_F.NAZ,ROK_F.NAZ]);
         K__POZ.prefix(K__NAG.ref(),OKRO_F.ref());
         {? K__POZ.first()
         || {! |?
               {? _a*($K__POZ.RODZAJ)
               || _usun:=1;
                  {? var_press('_b')>0
                  || _usun:=_b()
                  ?};
                  {? _usun
                  || K__WAR.prefix(K__POZ.ref());
                     {? K__WAR.first()
                     || {! |?
                           _delr:=K__WAR.del(,1);
                           {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
                        !}
                     ?};
                     _delr:=K__POZ.del(,1);
                     {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
                  || K__POZ.next()
                  ?}
               || K__POZ.next()
               ?}
            !}
         ?}
      ?};
      OKRO_F.ref()<>UD_POM.OKR_K & OKRO_F.next()
   !}
?};
K__POZ.cntx_pop(); K__WAR.cntx_pop(); OKRO_F.cntx_pop();
echo()


\add_zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Aktualizacja wartosci dla przedzialu okresow - zapisy
::   WE: _a - 1 - dokumenty ksiegowe
::            2 - listy plac
::  OLD: \add_zap/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
K__WAR.prefix(); K__WAR.blank(1);
K__WAR.K__POZ:=K__POZ.ref();
K__WAR.RODZAJ:=_a;
_prec:=exec('zaokr','control',K__POZ.WYMIAR01);
{? _a=1
|| K__WAR.DATA:=DOK.DTW;
   K__WAR.SYM:=DOK.NK;
   K__WAR.REJ:=DOK.REJ;
   K__WAR.POZ:=DOK.NR;
   K__WAR.OPIS:=DOK.TR;
   K__WAR.KW:=SKIDXD.WART$_prec;
   K__WAR.REF_DOK:=$DOK.ref();
   K__WAR.KON:=SKIDXD.AN
|| K__WAR.LT:=CON_KK.O().LT;
   K__WAR.RN:=CON_KK.R().RN;
   K__WAR.RT:=CON_KK.R().RT;
   K__WAR.G:=CON_KK.G;
   K__WAR.PROC:=CON_KK.PROC;
   K__WAR.KW:=CON_KK.KW$_prec
?};
K__WAR.add()


\maska
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca maskę tabeli K__WAR i K__POZ na podstawie K__NAG i OKRO_F
::----------------------------------------------------------------------------------------------------------------------
-(('000'+exec('sys2sys','#convert',K__NAG.KOD,10,34))+4)+form(OKRO_F.NR,-2)


\is_k_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Czy pozycja budzetowa jest wyliczana formula
::   WE: _a - schemat (UD_SCH.ref)
::       _b - element schematu (UD_SKL.ref)
::       _c - wariant obliczen
::  OLD: \is_k_form/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_jest:=0;
UD_DEF.cntx_psh();
UD_DEF.index('PODTEC'); UD_DEF.prefix(_a,_b);
{? UD_DEF.first()
|| K_FORM.cntx_psh();
   K_FORM.index('K_W_OBL');
   K_FORM.prefix(UD_DEF.ref(),_c);
   _jest:=K_FORM.first() & K_FORM.TYP<>'W';
   K_FORM.cntx_pop()
?};
UD_DEF.cntx_pop();
_jest


\k_noty_prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Ustawia dziedzinę not
::  OLD: \k_noty_prefix/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? UNPAR.P11='U'
|| K__NOTY.index('USER');
   K__NOTY.prefix(OPERATOR.USER().KOD,)
|| K__NOTY.index('SYM');
   K__NOTY.prefix()
?};
K__NOTY.hdr_sel();
K__NOTY.hdr_sel(
   ' - '+SSTALE.AR().NAZ+' - '+{? UNPAR.P11='U' || 'użytkownika' || 'wszystkich' ?}
);
::exec('k_pnoty_filtr','skid_con');
~~


\zakres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2006]
:: OPIS: Ustawia tytul okienka i zakres dokumentow ksiegowych
::   WE: _a - 0 - niezakceptowane controllingowo
::            1 - zaakceptowane controllingowo, niezaakceptowane ksiegowo
::            2 - zaakceptowane controllingowo i ksiegowo
::            3 - wszystkie
::  OLD: \zakres/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=0
|| {? OPERATOR.DEPT
   || DOK.index('O_XD'); DOK.prefix(OPERATOR.DEPT,'N')
   || DOK.index('XD'); DOK.prefix('N')
   ?}
|? _a=1
|| {? OPERATOR.DEPT
   || DOK.index('O_XD'); DOK.prefix(OPERATOR.DEPT,'T','N')
   || DOK.index('XD'); DOK.prefix('T','N')
   ?}
|? _a=2
|| {? OPERATOR.DEPT
   || DOK.index('O_XD'); DOK.prefix(OPERATOR.DEPT,'T','T')
   || DOK.index('XD'); DOK.prefix('T','T')
   ?}
|| {? OPERATOR.DEPT
   || DOK.index('O_REJ'); DOK.prefix(OPERATOR.DEPT)
   || DOK.index('REJ'); DOK.prefix()
   ?}
?};
_string:=' - ';
{? REF.S_FIRMA=REF.GRUPA
|| _string+='Firma '+REF.FIRMA().SYMBOL+' - '+SSTALE.AO().NAZ+' '+SSTALE.AR().NAZ+' - '+
            {? OPERATOR.DEPT
            || 'jednostka księgowa '+OPERATOR.DEPT().OD
            || 'wszystkie jednostki księgowe'
            ?}+' - '
?};
_string+={? _a=3
         || 'wszystkie'
         |? _a=2
         || 'zaakceptowane controllingowo i zakończona rejestracja'
         |? _a=1
         || 'zaakceptowane controllingowo, niezakończona rejestracja'
         |? _a=0
         || 'niezaakceptowane controllingowo'
         ?};
DOK.win_sel('C_REN_XD');
DOK.hdr_sel(); DOK.hdr_sel(_string)


\dok_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zmiana parametrów pracy
::----------------------------------------------------------------------------------------------------------------------
_rok:=SSTALE.AR;
_odd:=OPERATOR.DEPT;
{? {? var_press('__pardok')>0 & __pardok=1 & REF.S_FIRMA=REF.GRUPA || exec('dok_fks_param','control') || __PARSES.editDom('CTR') ?}
|| exec('zakres','control',ROZNE.ZAKRES1);
   exec('k_noty_prefix','control');
   AreaTitle.setTitle();
   1
?}


\bl_udpom_skid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: wartosc na blank
::  OLD: \bl_udpom_skid/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
UD_POM.SKID_MB


\data_o
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS:  Wartosc poczatkowa CON_KG.D
::  OLD: \data_o/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.JESTLIST
|| date(O.R,O.M,1)
|| date(,,1)
?}


\pakt_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Na wyswietl dla elementow wymiaru
::   WE: _a - numer wymiaru
::       _b - 1 - wewnetrzna dla wyswietlania symbolu
::            2 - dla opisu
::  OLD: \pakt_pl/skid_pro.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:={? var_pres('pakt_pl')>0 & _a<>1
        || {? numtree=_a |
              (_a=2 & PROJPAKT.RJORG='F') |
              (_a=3 & (PROJPAKT.ROKOSZ='F' | ile_pozm<3)) | (_a=4 & (PROJPAKT.RWYM4='F' | ile_pozm<4)) |
              (_a=5 & (PROJPAKT.RWYM5='F' | ile_pozm<5))
           || 0
           || 1
           ?}
        || 1
        ?};
{? _b=2 || _zwrot:={? ~_zwrot || exec('findfnv','#color') || '' ?} ?};
_zwrot


\object
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Obiekt wspomagajacy wyliczenie danych do kontrolingu procentowo wedlug zapisu w tabeli G
::    metody: godz  - pobranie danych z tabeli G
::            proc  - wyliczenie podzialu procentowego wedlug 2 wymiarow : ob_kosz oraz podzorg
::            wyl_g - wyliczenie procentowego podzialu dla kwoty skladnika oraz zapisanie w wynikowej
::                    tabeli cxnw????
::                    parametry : _a - kwota
::                                _b - pozycja budzetowa nr ref
::                                _c - rubryka  nr ref
::                                _d - czy wliczac do podstawy skladek zus  T/N
::                                _e - pozycja budzetowa dla narzutow
::            erase - wyczyszczenie pomocniczej tabeli dla wartosci godzinowych
::  OLD: \object/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------

:Zadeklarowanie klasy RUB.
exec('__RUB','object');

obj_decl('CONTROL',

   obj_fld('KART_G',~~),

   obj_fld('KART_GODZ',~~),

   obj_fld('T_MBP',~~),

   obj_fld('WIN_NAZ',''),

   obj_fld('RUB',~~),

   obj_meth('__init',".KART_GODZ:=exec('kart_g','control'); .KART_G:=exec('kart_g','control');
      .T_MBP:=tab_tmp(1,
         'LP','INTEGER','Lp.',
         'UD_TYP','STRING[16]','Symbol',
         'UD_POM','STRING[16]','Akronim pola zmiennej',
         'POLE','STRING[16]','Akronim pola tabeli',
         'NAZ','STRING[30]','Nazwa pozycji modelu');
      .RUB:=obj_new(@.CLASS.RUB)"),

   obj_meth('godz',"
      .erase();

      CON_KH.cntx_psh(); CON_KH.index('CON_KHP'); CON_KH.prefix('P',P.ref,SKID_MBN.ref);
      CON_KG.index('CON_KGM'); CON_KG.prefix(P.ref,SKID_MBN.ref);
      {? CON_KG.first
      || {!
         |?
            {? .RUB.sys_attr(CON_KG.R().RN,10012)
            || .KART_G.blank;
               .KART_G.G:=CON_KG.R().RN; .KART_G.KW:=CON_KG.W;
               .KART_G.POZ_BUD:=#CON_KG.POZ_BUD; .KART_G.PODZORG:=#CON_KG.PODZORG;
               .KART_G.OB_KOSZ:=#CON_KG.OB_KOSZ; .KART_G.WYM4:=#CON_KG.WYM4; .KART_G.WYM5:=#CON_KG.WYM5;
               _jest_kh:=CON_KH.find_le(CON_KG.D);
               {? .T_MBP.first & _jest_kh
               || {!
                  |? {? ~($('CON_KG.'+.T_MBP.POLE))()
                     || ($('.KART_G.'+.T_MBP.POLE))():=#($('CON_KH.'+.T_MBP.POLE))();
                        {? .T_MBP.UD_TYP='PODZORG'
                        || ($('.KART_G.'+.T_MBP.POLE))():=#exec('h_find','pracownik','WYDZIAL',CON_KG.D)
                        ?}
                     ?}; .T_MBP.next
                  !}
               ?};
               {? _jest_kh
               || .KART_G.add
               ?}
            ?}; CON_KG.next
         !}
      ?};
      CON_KH.cntx_pop()"),

   obj_meth('proc',"
      _all:=0;
      {? .KART_G.first ||
         {! |? _all+=.KART_G.KW; .KART_G.next !};
         .KART_G.first;
         {! |? .KART_G.PROC:=(.KART_G.KW/_all*100); .KART_G.put; .KART_G.next !};
         _tab1:=sql('select G, POZ_BUD, PODZORG, OB_KOSZ, WYM4, WYM5, sum(PROC) PROC, sum(KW) KW
                    from :_a
                    group by G, POZ_BUD, PODZORG, OB_KOSZ, WYM4, WYM5',.KART_G);
         _tab:=sql('select POZ_BUD, PODZORG, OB_KOSZ, WYM4, WYM5, sum(PROC) PROC, sum(KW) KW, sum(G) G
                    from :_a
                    group by POZ_BUD, PODZORG, OB_KOSZ, WYM4, WYM5',.KART_G);
         .erase();
         _tab.first;
         _koniec:=_wyn:=100;
         {! |?
            _koniec-=_tab.PROC;
            {? _koniec<0
              || _koniec:=0; _tab.PROC:=_wyn; 0
              || _wyn-=_tab.PROC;
                 _tab.next
            ?}
         !};
         .add_g(.KART_G,_tab1);
         .add_g(.KART_GODZ,_tab)
      ?}"),

   obj_meth('wyl_g',"
      {? .KART_GODZ.first ||
         _koniec:=_a;
         {! |? _wyn:=(.KART_GODZ.PROC/100)*_a$2;
              _koniec-=_wyn;
              {? _a>0 & _koniec<0 |
                 _a<0 & _koniec>0
              || _wyn+=_koniec; _koniec:=0
              ?};
              _b:={? .KART_GODZ.POZ_BUD || .KART_GODZ.POZ_BUD || _b ?};
              _org:=.KART_GODZ.PODZORG; _ob:=.KART_GODZ.OB_KOSZ; _proc:=.KART_GODZ.PROC;
              _godz:=.KART_GODZ.KW; _wym4:=.KART_GODZ.WYM4; _wym5:=.KART_GODZ.WYM5;
              _stop:=.KART_GODZ.next;
              {? ~_stop & _koniec || _wyn+=_koniec ?};
              exec('dodaj','control',_b,_org,_ob,_c,_wyn,_d,1,_e,_proc,_godz,_wym4,_wym5,SKID_MBN.ref);
              _stop
         !}
      ?}",type_of(0),type_of(0),type_of(0),type_of(''),type_of(0)),

   obj_meth('wyl_godz',"
      {? .KART_G.first ||
         {! |? {? .KART_G.G=_a ||
                  _b:={? .KART_G.POZ_BUD || .KART_G.POZ_BUD || _b ?};
                  exec('dodaj','control',_b,.KART_G.PODZORG,.KART_G.OB_KOSZ,
                     _c,.KART_G.KW,'N',1,0,.KART_G.PROC,.KART_G.KW,.KART_G.WYM4,.KART_G.WYM5,SKID_MBN.ref)
               ?}; .KART_G.next
         !}
      ?}",type_of(0),type_of(0),type_of(0)),

   obj_meth('add_g',"
         {? _b.first ||
            {! |?
               _a.blank;
               _a.POZ_BUD:=_b.POZ_BUD; _a.PODZORG:=_b.PODZORG; _a.OB_KOSZ:=_b.OB_KOSZ;
               _a.PROC:=_b.PROC; _a.WYM4:=_b.WYM4; _a.WYM5:=_b.WYM5;
               _a.KW:=_b.KW; _a.G:=_b.G; _a.add; _b.next
            !}
         ?}",type_of(SYSLOG),type_of(SYSLOG)),

   obj_meth('erase',".KART_G.erase; .KART_GODZ.erase"),

:  parametr metody: SKID_MBN.ref
   obj_meth('ustaw',".T_MBP.erase;
      UD_TYP.cntx_psh(); UD_SCH.cntx_psh();
      SKID_MBP.cntx_psh; SKID_MBP.index('LP'); SKID_MBP.prefix(_a);
      {? SKID_MBP.first
      || {!
         |? .T_MBP.LP:=SKID_MBP.LP;
            .T_MBP.NAZ:=SKID_MBP.NAZ;
            .T_MBP.UD_TYP:=SKID_MBP.UD_SCH().UD_TYP().SYMBOL;
            {? SKID_MBP.LP=1 || .T_MBP.UD_POM:='PBUD'; .T_MBP.POLE:='POZ_BUD'
            |? SKID_MBP.LP=2 || .T_MBP.UD_POM:='JORG'; .T_MBP.POLE:='PODZORG'
            |? SKID_MBP.LP=3 || .T_MBP.UD_POM:='OKOSZ'; .T_MBP.POLE:='OB_KOSZ'
            |? SKID_MBP.LP=4 || .T_MBP.UD_POM:='WYM4'; .T_MBP.POLE:='WYM4'
            |? SKID_MBP.LP=5 || .T_MBP.UD_POM:='WYM5'; .T_MBP.POLE:='WYM5'
            ?};
            .T_MBP.add;
            SKID_MBP.next
         !}
      ?};
      SKID_MBP.cntx_pop;
      UD_SCH.cntx_pop();UD_TYP.cntx_pop()",type_of(null)),

:  parametry metody : _a-szukany symbol, _b-pole porownania, _c-pole wyniku
   obj_meth('spr_t',"
      _wyn:=''; .T_MBP.clear;
      {? .T_MBP.first
      || {! |? {? ($('.T_MBP.'+_b))()=_a || _wyn:=($('.T_MBP.'+_c))(); 0 || .T_MBP.next ?} !}
      ?}; _wyn",type_of(''),type_of(''),type_of(''))
)


\kart_g
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Powolanie tabeli pomocniczej dla obiektu CONTROL
::  OLD: \kart_g/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
tab_tmp(3,'POZ_BUD','INTEGER','Wymiar 1',
         'PODZORG','INTEGER','Wymiar 2',
         'OB_KOSZ','INTEGER','Wymiar 3',
         'WYM4','INTEGER','Wymiar 4',
         'WYM5','INTEGER','Wymiar 5',
         'G','INTEGER','Godziny',
         'KW','REAL','Wartość',
         'PROC','REAL','Procent')


\dodaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Funkcja dodaje nowy rekord do tabeli CON_KK
::   WE: _a - pozycja budzetowa
::       _b - jednostka organizacyjna
::       _c - obiekt kosztowy
::       _d - rubryka
::       _e - kwota
::       _f - czy wliczac do podstawy skladek zus
::       _g - 1 - pracownik; 0 - zlecenie
::       _h - pozycja budzetowa dla narzutow
::       _i - procent
::       _j - ilosc godzin
::       _k - wymiar 4
::       _l - wymiar 5
::       _m - model kontrolingu
::  OLD: \dodaj/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || return(0) ?};
{? var_pres('_b')<>type_of(0) || return(0) ?};
{? var_pres('_c')<>type_of(0) || return(0) ?};
{? var_pres('_d')<>type_of(0) || return(0) ?};
{? var_pres('_e')<>type_of(0) || return(0) ?};
{? var_pres('_f')<>type_of('') || return(0) ?};
{? var_pres('_g')<>type_of(0) || return(0) ?};
{? var_pres('_i')<>type_of(0) || _i:=100 ?};
{? var_pres('_j')<>type_of(0) || _j:=0 ?};
{? var_pres('_k')<>type_of(0) || return(0) ?};
{? var_pres('_l')<>type_of(0) || return(0) ?};
{? var_pres('_m')<>type_of(null) || return(0) ?};
_ok:=1;
CON_KK.blank();
{? _g
|| CON_KK.P:=P.ref(); CON_KK.O:=O.ref(); CON_KK.T:='P'
|| CON_KK.P:=P.ref(); CON_KK.RH:=RH.ref(); CON_KK.ROK:=RH.R; CON_KK.MC:=RH.M; CON_KK.T:='Z'
?};
{? R.seek(_d,) || CON_KK.R:=R.ref() || _ok:=0 ?};
{? _ok
|| UD_SKL.prefix();
   {? UD_SKL.seek(_a,) || CON_KK.POZ_BUD:=UD_SKL.ref() || _ok:=0 ?};
   {? UD_SKL.seek(_h,) || CON_KK.N_POZ_B:=UD_SKL.ref() ?}
?};
{? _ok
|| {? wym_prac
   || {? wym_prac=2
      || _skl:=exec('skl_prac','control');
         {? _skl || CON_KK.PODZORG:=_skl || _ok:=0 ?}
      || {? UD_SKL.seek(_b,) || CON_KK.PODZORG:=UD_SKL.ref() ?}
      ?};
      {? wym_prac=3
      || _skl:=exec('skl_prac','control');
         {? _skl || CON_KK.OB_KOSZ:=_skl || _ok:=0 ?}
      || {? UD_SKL.seek(_c,) || CON_KK.OB_KOSZ:=UD_SKL.ref() ?}
      ?};
      {? wym_prac=4
      || _skl:=exec('skl_prac','control');
         {? _skl || CON_KK.WYM4:=_skl || _ok:=0 ?}
      || {? UD_SKL.seek(_k,) || CON_KK.WYM4:=UD_SKL.ref() ?}
      ?};
      {? wym_prac=5
      || _skl:=exec('skl_prac','control');
         {? _skl || CON_KK.WYM5:=_skl || _ok:=0 ?}
      || {? UD_SKL.seek(_l,) || CON_KK.WYM5:=UD_SKL.ref() ?}
      ?};
      {? wym_prac=6
      || _skl:=exec('skl_prac','control');
         {? _skl || CON_KK.WYM6:=_skl || _ok:=0 ?}
      || {? UD_SKL.seek(_l,) || CON_KK.WYM6:=UD_SKL.ref() ?}
      ?}
   || {? UD_SKL.seek(_b,) || CON_KK.PODZORG:=UD_SKL.ref() ?};
      {? UD_SKL.seek(_c,) || CON_KK.OB_KOSZ:=UD_SKL.ref() ?};
      {? UD_SKL.seek(_k,) || CON_KK.WYM4:=UD_SKL.ref() ?};
      {? UD_SKL.seek(_l,) || CON_KK.WYM5:=UD_SKL.ref() ?}
   ?};
   CON_KK.SKID_MB:=mod_skop
?};
{? _ok
|| CON_KK.cntx_psh(); CON_KK.prefix();
   CON_KK.KW:=_e$2; CON_KK.Z:=_f;
   CON_KK.G:=_j$2; CON_KK.PROC:=_i$2;
   CON_KK.add();
   CON_KK.cntx_pop()
?}


\skl_prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Szuka elementu (UD_SKL) dla pracownika
::  OLD: \skl_prac/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=null;
UD_POW.cntx_psh();
UD_POW.index('SQL'); UD_POW.prefix(typ_prac,$P.ref());
{? UD_POW.first() || _zwrot:=UD_POW.UD_SKL ?};
UD_POW.cntx_pop();
_zwrot


\rek_prz_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Wypelnienie wartosci pol zmiennej UD_POM
::  OLD: \rek_prz_kh/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1).name(1)='godz????'
|| {? G.win_edit('?')='REDC'
   || CON_KG.index('CON_KGT');
      CON_KG.prefix();
      {? CON_KG.find_key(P.ref(),G.ref())
      || UD_POM.JORG:=CON_KG.PODZORG().SYMBOL;
         UD_POM.OKOSZ:=CON_KG.OB_KOSZ().SYMBOL;
         UD_POM.PBUD:=CON_KG.POZ_BUD().SYMBOL;
         UD_POM.WYM4:=CON_KG.WYM4().SYMBOL;
         UD_POM.WYM5:=CON_KG.WYM5().SYMBOL
      || exec('null_ud_pom','control')
      ?}
   ?}
|| UD_POM.JORG:=cur_tab(1,1).PODZORG().SYMBOL;
   UD_POM.OKOSZ:=cur_tab(1,1).OB_KOSZ().SYMBOL;
   UD_POM.PBUD:=cur_tab(1,1).POZ_BUD().SYMBOL;
   UD_POM.WYM4:=cur_tab(1,1).WYM4().SYMBOL;
   UD_POM.WYM5:=cur_tab(1,1).WYM5().SYMBOL
?};
''


\null_ud_pom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Wyczyszczenie wartosci pol zmiennej UD_POM
::  OLD: \null_ud_pom/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1).name(1)='godz????'
|| UD_POM.JORG:=''; CON_KG.PODZORG:=null;
   UD_POM.OKOSZ:=''; CON_KG.OB_KOSZ:=null;
   UD_POM.PBUD:=''; CON_KG.POZ_BUD:=null;
   UD_POM.WYM4:=''; CON_KG.WYM4:=null;
   UD_POM.WYM5:=''; CON_KG.WYM5:=null
|? cur_tab(1,1).name(1)='conkw'
|| UD_POM.JORG:=''; cur_tab(1,1).PODZORG:=null;
   UD_POM.OKOSZ:=''; cur_tab(1,1).OB_KOSZ:=null;
   UD_POM.WYM4:=''; cur_tab(1,1).WYM4:=null;
   UD_POM.WYM5:=''; cur_tab(1,1).WYM5:=null
|| UD_POM.JORG:=''; cur_tab(1,1).PODZORG:=null;
   UD_POM.OKOSZ:=''; cur_tab(1,1).OB_KOSZ:=null;
   UD_POM.PBUD:=''; cur_tab(1,1).POZ_BUD:=null;
   UD_POM.WYM4:=''; cur_tab(1,1).WYM4:=null;
   UD_POM.WYM5:=''; cur_tab(1,1).WYM5:=null
?};
''


\run_con
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przygotowuje plik konfiguracyjny na potrzeby programu Controling.exe oraz uruchamia go
::   WE:  _a  - typ operacji
::              1-instalacja kostki
::              2-aktualizacja kostki
::              3-aktualizacja wartosci
::              4-aktualizacja rol
::              5-aktualizacja raportow
::              6-usuniecie roli
::  OLD: \run_con/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('interm','#system')
|| FUN.emsg(exec('interm_nacc_msg','#system'));
   return(0)
?};
_f:=exec('fconfig_prolog','control');
{? _f
|| {? _a=1 | _a=2
   || exec('fconfig_cube','control',_f,_a)
   |? _a=3
   || K__NAG.K_WERSJE();
      exec('fconfig_value','control',_f,1,1)
   |? _a=4
   || exec('fconfig_role','control',_f)
   |? _a=5
   || exec('fconfig_rap','control',_f)
   |? _a=6
   || exec('fconfig_drole','control',_f)
   ?};
   fclose(_f)
?};
exec('run_exe','control')


\fconfig_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przygotowuje plik konfiguracyjny na potrzeby programu Controling.exe - prolog
::   WY: uchwyt do otwartego pliku lub 0
::  OLD: \fconfig_prolog/skid_con.fml
:: ~OST: INFOPEN,INODBCDSN
::----------------------------------------------------------------------------------------------------------------------
_f:=fopen('@!Tmp/config.txt','w',0,1);
{? _f
|| _obj:=exec('ms_sql_obj','control');
   exec('k_info_first','control');
   fwrite(_f,'[Param]');
   fwrite(_f,'sql_server='+_obj.ADDRESS);
   fwrite(_f,'as_server='+K_INFO.OLAP_PTH);
   fwrite(_f,'database=Macrologic Merit Controlling');
   fwrite(_f,'firma='+REF.S_FIRMA().SYMBOL+'@'+$REF.S_FIRMA);
   fwrite(_f,'system=Controlling');
   fwrite(_f,'odbc='+odbc_dsn());
   {? var_pres('conalert')>0 & conalert
   || fwrite(_f,'close_after_error')
   ?};
   {? _obj.DRIVER<>''
   || fwrite(_f,'sql_driver='+_obj.DRIVER)
   ?};
   fwrite(_f,'auto')
?};
_f


\k_info_first
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Ustawia rekord paametrow
::  OLD: \k_info_first/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~K_INFO.first()
|| K_INFO.OLAP_USR:=5;
   K_INFO.add()
|| 1
?}


\fconfig_rap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przygotowuje plik konfiguracyjny na potrzeby programu Controling.exe - raporty
::   WE: _a - uchwyt otwartego pliku konfiguracyjnego
::       _b - nazwa pliku raportu
::  OLD: \fconfig_rap/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
fwrite(_a,'[Raporty]');
{? TTRAP.first()
|| {!
   |? fwrite(_a,'raport='+$TTRAP.REF+'@'+TTRAP.PLIK+'@'+STR.maz2w95(TTRAP.NAZWA));
      TTRAP.next()
   !}
?}


\ae_con_ad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Po redakcji pola CON_AD tabeli USERS
::----------------------------------------------------------------------------------------------------------------------
USERS.efld_opt('CON_PASS','enable='+$(USERS.CON_AD='N'),POMOC,'HASLO1');
USERS.efld_opt('CON_PASS','enable='+$(USERS.CON_AD='N'),POMOC,'HASLO2');
USERS.efld_opt('CON_PASS','mark='+$(USERS.CON_AD='N'),POMOC,'HASLO1');
USERS.efld_opt('CON_PASS','mark='+$(USERS.CON_AD='N'),POMOC,'HASLO2');
win_disp();
1


\winlogin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Tworzy login uzytkownika
::   WE: _a - propozycja loginu
::  OLD: \winlogin/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_login:=100+_a;
USERS.cntx_psh();
USERS.index('WINLOGIN'); USERS.prefix();
{!
|? {? USERS.find_key(_login) & USERS.WINLOGIN=_login
   || _ile:=+_login;
      _ile:={? _ile=100 || 2 |? _ile=99 || 1 || 0 ?};
      _nlogin:=_login-_ile;
      _nr:=#(_login+2);
      _nr+=1;
      _nlogin:=_nlogin+(('0'+($_nr))+2);
      _login:=_nlogin;
      1
   ?}
!};
USERS.cntx_pop();
_login


\open_http
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Otwiera link w kontrolce w jtermie
::   WE:  _a  - link
::       [_b] - tytuł okna
::  OLD: \open_http/skid_con.fml
:: ~OST: INWEBBROWSER
::----------------------------------------------------------------------------------------------------------------------
_tyt:={? var_pres('_b')>0 || _b || 'Raport usług raportowania'@ ?};
__link:=_a;
_win_acr:=SYSLOG.mk_ctr(_tyt,'ctrl_webbrowser');
SYSLOG.win_ctr(_win_acr);
{? exec('runtime_r10','#system')
|| SYSLOG.win_cctr(_win_acr, 'ctr_id','@webframe');
   SYSLOG.control(,,"
   ctr_set(,'ctr_id', 'navigate', __link)
   ")
|| SYSLOG.win_cctr(_win_acr, 'ctr_id','@webbrowser2');
   SYSLOG.control(,,"
   ctr_set(,'ctr_id', 'setButtonBarVisible', 'true');
   ctr_set(,'ctr_id', 'setLocationBarVisible', 'true');
   ctr_set(,'ctr_id', 'setStatusBarVisible', 'true');
   ctr_set(,'ctr_id', 'closeAfterEscape', 'true');
   ctr_set(,'ctr_id', 'navigate', __link)
   ")
?};
VAR_DEL.delete('__link')


\olap_usr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Liczba uzytkownikow majacych urpawnienia do przegladania kostek OLAP
::  OLD: \olap_usr/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_lu:=0;
{? var_press('UserRap')<=0
|| UserRap:=exec('usersWithAction','users','CTR_RAP_ZZAP',REF.FIRMA)
?};
K_ROLE_U.cntx_psh();
{? UserRap.first()
|| K_ROLE_U.index('USERS'); K_ROLE_U.prefix();
   {!
   |? _lu+=K_ROLE_U.find_key(BIT.sqlint(UserRap.REF));
      UserRap.next()
   !}
?};
K_ROLE_U.cntx_pop();
_lu


\fconfig_drole
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przygotowuje plik konfiguracyjny na potrzeby programu Controling.exe - usuwa role
::   WE: _a - uchwyt otwartego pliku konfiguracyjnego
::  OLD: \fconfig_drole/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
fwrite(_a,'[Role]');
fwrite(_a,'usun='+STR.maz2w95(K_ROLE.NAZWA))


\can_run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Czy mozna wykonac operacje administracyjne
::   WE: [_a] - z komunikatami [1]-tak 0-nie
::  OLD: \can_run/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('k_info_first','control') & (exec('ms_sql_obj','control').ADDRESS='' | K_INFO.OLAP_PTH='')
|| {? _=0 | _a
   || FUN.info('Nie ustawiono adresów serwerów w parametrach programu.'@)
   ?};
   0
|| 1
?}


\fconfig_role
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przygotowuje plik konfiguracyjny na potrzeby programu Controling.exe - role
::   WE: _a - uchwyt otwartego pliku konfiguracyjnego
::  OLD: \fconfig_role/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
fwrite(_a,'[Role]');
{? TTROLE.first()
|| {!
   |? fwrite(_a,STR.maz2w95(TTROLE.NAZWA));
      TTROLE.next()
   !}
?}


\set_skid_mbn_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [12.10]
:: OPIS: Ustawia filtra dla SKID_MBN dla zainstalowanych modeli
::   WE: [_a] - typ 'O'-OLAP 'Q'-Qlik Sense 'S'-sprawozdania
::  OLD: \set_skid_mbn_f/skid_kns.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:='O' ?};
{? _a='S'
|| SKID_MBN.clear();
   SKID_MBN.f_set('KOD',,'SKID_MBN.CZY_SPR=\'T\'')
|| {? _a='O'
   || _typ:='K_INSMBN.CZY_INST=\'T\''
   |? _a='Q'
   || _typ:='K_INSMBN.KLIK=\'T\''
   || _typ:='SKID_MBN.CZY_OFZ=\'T\''
   ?};
   SKID_MBN.clear();
   SKID_MBN.f_set(
      'KOD',
      'join K_INSMBN using(SKID_MBN.REFERENCE,K_INSMBN.SKID_MBN)',
      'K_INSMBN.FIRMA=\''+$REF.FIRMA+'\' and '+_typ
   )
?}


\olap_adm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawienia serwera OLAP
::  OLD: \paramprcon/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_red:='CONTROL';
exec('k_info_first','control');
exec('b_spr_param','control');
SKID_MBN.win_dict('SLO');
XINFO.win_edit('CONTROL');
{? XINFO.edit("exec('spr_param','control')")
|| K_INFO.put()
?};
exec('a_spr_param','control')


\b_spr_param
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przed sprawdzeniem parametrow programu
::  OLD: \b_spr_param/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
UNPAR.P1_BE:='0';
UNPAR.P1_BV:='exec(\'findfnrd\',\'color\')';
UNPAR.P1:=exec('olap_usr','control');
__SQL_PTH:=K_INFO.SQL_PTH;
__OLAP_PTH:=K_INFO.OLAP_PTH;
K_INFO.fld_fml('SQL_PTH','F3',"exec('f3_sql_pth','control')");
1


\a_spr_param
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Po sprawdzeniu parametrow programu
::  OLD: \a_spr_param/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__SQL_PTH','__OLAP_PTH')


\spr_param
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Sprawdzenie parametrow programu
::  OLD: \spr_param/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? K_INFO.OLAP_USR<=0
|| FUN.info('Liczba użytkowników kostek OLAP\npowinna być większa od zera.'@); 'OLAP_USR'
|? _lu:=exec('olap_usr','control'); K_INFO.OLAP_USR<_lu
|| FUN.info('Liczba użytkowników kostek OLAP\nnie może być mniejsza niż %1.\n\n'
            'Tylu użytkowników posiada\njuż takie uprawnienia.'@[$_lu]
           );
   'OLAP_USR'
|| K_INSMBN.index('CZY_INST'); K_INSMBN.prefix('T');
   {? ~K_INSMBN.first()
   || ''
   |? __SQL_PTH<>K_INFO.SQL_PTH | __OLAP_PTH<>K_INFO.OLAP_PTH
   || {? var_pres('EXCEL_ENV')>0 |
         FUN.ask('Zmiana lokalizacji serwerów lub sterownika spowoduje\n'
                 'konieczność wykonania:\n\ninstalacji kostek,\nzasilenia kostek,\n'
                 'aktualizacji uprawnień,\nprzygotowanie budżetów,\nprzygotowanie raportów.\n\n'
                 'Czy kontynuować?'@)
      || K_INSMBN.prefix();
         K_INSMBN.for_each("{? K_INSMBN.CZY_INST='T' || K_INSMBN.CZY_INST:='N'; K_INSMBN.put() ?}");
         ''
      || 'SQL_PTH'
      ?}
   || ''
   ?}
?}


\fconfig_cube
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przygotowuje plik konfiguracyjny na potrzeby programu Controling.exe - kostka
::   WE: _a - uchwyt otwartego pliku konfiguracyjnego
::       _b - 1-instalacja 2-aktualizacja
::  OLD: \fconfig_cube/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
fwrite(_a,'[Cube]');
fwrite(_a,'model='+SKID_MBN.KOD+'@'+exec('model_typ','control')+'@18@6@'+K_INSMBN.CZY_NAR);
SKID_MBP.cntx_psh();
SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
{? SKID_MBP.first()
|| {!
   |?
::    nr_wymiaru@nazwa_wymiaru@dlugosc_pola_opisu
      fwrite(_a,'dim='+$SKID_MBP.LP+'@'+STR.maz2w95(SKID_MBP.NAZ)+'@60');
      SKID_MBP.next()
   !}
?};
SKID_MBP.cntx_pop();
{? _b=1
|| fwrite(_a,'install')
|| fwrite(_a,'update')
?}


\model_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Jaki typ zapisow ma zawierac kostka OLAP
::  OLD: \model_typ/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
exec('k_insmbn','konsolidacja');
{? K_INSMBN.CZY_DOK='T' & K_INSMBN.CZY_LIST='T' || 'M'
|? K_INSMBN.CZY_DOK='T' || 'O'
|? K_INSMBN.CZY_LIST='T' || 'P'
|| 'N'
?}


\fconfig_value
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przygotowuje plik konfiguracyjny na potrzeby programu Controling.exe - wartosci
::   WE: _a - uchwyt otwartego pliku konfiguracyjnego
::       _b - 1-dla naglowka wartosci
::            2-dla funkcji
::       _c - czy przetwarzac kostke
::  OLD: \fconfig_value/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
fwrite(_a,'[Cube]');
fwrite(_a,'model='+SKID_MBN.KOD+'@'+exec('model_typ','control')+'@16@8@'+K_INSMBN.CZY_NAR);
fwrite(_a,'value_ver='+$K_WERSJE.ref()+'@'+STR.maz2w95(K_WERSJE.SYM));
{? _b=1
|| fwrite(_a,'value_kod='+K__NAG.KOD)
|| fwrite(_a,'model_ref='+$SKID_MBN.ref());
   fwrite(_a,'value_from='+$UD_POM.OKR_POCZ);
   fwrite(_a,'value_to='+$UD_POM.OKR_KON)
?};
::fwrite(_a,'measure=Narastajaco dla okresow@[Measures].[N]');
fwrite(_a,'update_value');
{? _c
|| fwrite(_a,'process')
?}


\fconfig_proces
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przygotowuje plik konfiguracyjny na potrzeby programu Controling.exe - procesowanie wartosci
::   WE: _a - uchwyt otwartego pliku konfiguracyjnego
::  OLD: \fconfig_proces/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
fwrite(_a,'[Cube]');
{? CON_FUN.SKIDMWE || fwrite(_a,'model='+CON_FUN.SKIDMWE().KOD+'@'+exec('model_typ','control')) ?};
fwrite(_a,'process')


\spr_okr_con_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Zmiana okresu - wartosci podzialow dla pracownikow - sprawdzanie po okienku
::  OLD: \spr_okr_con_kk/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? UD_POM.ROK_KAL=null
|| FUN.info('Nie wybrano roku bilansowego.'@); _zwrot:='ROK_KAL'
?};
{? _zwrot='' & UD_POM.OKR_KAL=null
|| FUN.info('Nie wybrano okresu obrachunkowego.'@); _zwrot:='OKR_KAL'
?};
{? _zwrot='' & UD_POM.OKR_KAL().POCZ=date(0,0,0)
|| FUN.info('Nie można wybierać okresów technicznych\n("Bilans otwarcia" i "Bilans zamknięcia").'@); _zwrot:='OKR_KAL'
?};
_zwrot


\con_kk_title
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia tytul okna CON_KK
::   WE: _a - akronim okna
::----------------------------------------------------------------------------------------------------------------------
UD_POM.SKID_MB:={? _a='WER'
                || {? var_press('SmbnP')>0 || SmbnP || null ?}
                || {? var_press('SmbnZ')>0 || SmbnZ || null ?}
                ?};
UD_POM.OKR_KAL().ROK();
CON_KK.win_sel(_a);
CON_KK.hdr_sel();
_okres:=OKRO_F.NAZ+'/'+ROK_F.NAZ;
_model:={? UD_POM.SKID_MB || ', model: %1'@[UD_POM.SKID_MB().KOD] || '' ?};
CON_KK.hdr_sel(' - %1%2'@[_okres,_model]);
~~


\zm_okr_con_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Zmiana okresu - wartosci podzialow dla pracownikow
::  OLD: \zm_okr_con_kk/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_POM.win_edit('ROKOKR');
{? UD_POM.edit("exec('spr_okr_con_kk','control')")
|| _okno:={? VAR.CON='P' || 'WER' || 'WERZ' ?};
   exec('set_okr','control',_okno);
   grp_disp(P,'CTR',1)
?}


\set_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia dziedzine podzialow
::   WE: _a - akronim okna
::----------------------------------------------------------------------------------------------------------------------
exec('con_kk_title','control','WER');
exec('con_kk_title','control','WERZ');
_data:={? OKRO_F.NR=0 || OKRO_F.ROK().POCZ_ROK |? OKRO_F.POCZ=date(0,0,0) || OKRO_F.ROK().KON_ROK || OKRO_F.POCZ ?};
CON_KK.use('cxnw'+(2-$(_data~1))+form(_data~2,-2));
~~


\ar_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Formula po odswiezeniu okna z pracownikiem
::----------------------------------------------------------------------------------------------------------------------
{? VAR.CON='X'
|| _filtr:=P.f_active();
   {? P.sel_size() | _filtr & P.f_get() | ~_filtr & P.get()
   || REF.P:=P.ref();
      CON_KH.index('CON_KHP'); CON_KH.prefix('Z',REF.P,UD_POM.SKID_MB);
      CON_KH.actions('WER_Z','TZ:Z',,1)
   || REF.P:=null;
      CON_KH.index('CON_KHP'); CON_KH.prefix('Z',REF.P,UD_POM.SKID_MB);
      CON_KH.actions('WER_Z','TDZ:DZ',,1)
   ?};
   grp_disp(CON_KH,'WER_Z',1)
|? VAR.CON='D'
|| _filtr:=P.f_active();
   {? P.sel_size() | _filtr & P.f_get() | ~_filtr & P.get()
   || REF.P:=P.ref();
      CON_KH.index('CON_KHP'); CON_KH.prefix('P',REF.P,UD_POM.SKID_MB);
      CON_KH.actions('WER_P',':',,1)
   || REF.P:=null;
      CON_KH.index('CON_KHP'); CON_KH.prefix('P',REF.P,UD_POM.SKID_MB);
      CON_KH.actions('WER_P','D:D',,1)
   ?};
   grp_disp(CON_KH,'WER_P',1)
|? VAR.CON='P'
|| _filtr:=P.f_active();
   {? P.sel_size() | _filtr & P.f_get() | ~_filtr & P.get()
   || REF.P:=P.ref();
      CON_KK.index('CON_KKO'); CON_KK.prefix('P',P.ref(),SmbnP)
   || REF.P:=null;
      CON_KK.index('CON_KKO'); CON_KK.prefix('P',null,SmbnP)
   ?};
   grp_disp(CON_KK,'WER')
|? VAR.CON='Z'
|| _filtr:=P.f_active();
   {? P.sel_size() | _filtr & P.f_get() | ~_filtr & P.get()
   || REF.P:=P.ref();
      CON_KK.index('CON_KKZ'); CON_KK.prefix('Z',P.ref(),SmbnZ)
   || REF.P:=null;
      CON_KK.index('CON_KKO'); CON_KK.prefix('Z',null,SmbnZ)
   ?};
   grp_disp(CON_KK,'WERZ')
|| _filtr:=P.f_active();
   {? P.sel_size() | _filtr & P.f_get() | ~_filtr & P.get()
   || G.index('CONTROL'); G.prefix(P.ref(),UD_POM.OKR_KAL().POCZ~2,'G')
   || G.index('CONTROL'); G.prefix(null)
   ?};
   grp_disp(G,'DODCON')
?}


\ustal_model
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Ustalenie modelu
::   WE: _a - 1 - modele "niepracownicze"
::            2 - modele "pracownicze"
::   WY: Czy udalo sie ustalic model
::  OLD: \ustal_model/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
ZM.SKID_MBN:=UD_POM.SKID_MB:=null;
_jestmod:=0;
{? XINFO.SKID_MB<>null
|| XINFO.SKID_MB();
   {? _a=1
   || _jestmod:=1
   |? _a=2
   || SKID_MBN.index('TREE_KOD'); SKID_MBN.prefix(SKID_MBN.ref(),'P');
      _jestmod:=SKID_MBN.first()
   ?};
   {? _jestmod
   || SKID_MBP.cntx_psh();
      SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
      _jestmod:=SKID_MBP.first();
      SKID_MBP.cntx_pop()
   ?}
?};
{? _jestmod
|| ZM.SKID_MBN:=UD_POM.SKID_MB:=SKID_MBN.ref();
   exec('opiszwym','control');
   _zwrot:=1
|| _zwrot:=exec('sel_mbn','control',1,_a)
?};
_zwrot


\ar_con_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Formula na rekord po tabeli CON_KH
::  OLD: \con_kh_rekpo/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
_p:='P';
_spr:=__CHK.record(CON_KH,,'OD','SKID_MB');
{? _spr<>'' || return(_spr) ?};
{? VAR.CON<>'F'
|| CON.ustaw(CON_KH.SKID_MB);
   {? CON.T_MBP.first
   || _wym:=''; CON.T_MBP.next;
      {! |? _wym+={? CON.T_MBP.UD_TYP<>'PODZORG' || ',\''+CON.T_MBP.POLE+'\'' || '' ?}; CON.T_MBP.next !};
      {? +_wym
      || _spr:=($('__CHK.record(CON_KH,'+_wym+')'))();
         {? _spr<>'' || return(CON.spr_t(_spr,'POLE','UD_POM')) ?}
      ?}
   ?};
   {? ~VAR.P
   || ($('CON_KH.'+_p))():=($(_p+'.ref'))();
      CON_KH.F:={? VAR.CON='D' || 'P' |? VAR.CON='X' || 'Z' || VAR.CON ?}
   ?}
?};
_ref:={? VAR.P || CON_KH.ref() || null ?};
CON_KH.cntx_psh(); CON_KH.index('CON_KH'+_p);
{? VAR.CON='P'
|| CON_KH.prefix('P',P.ref(),UD_POM.SKID_MB)
|? VAR.CON='Z'
|| CON_KH.prefix('Z',P.ref(),UD_POM.SKID_MB)
|| CON_KH.index('CON_KHF'); CON_KH.prefix('F',UD_POM.SKID_MB)
?};
{? CON_KH.find_key(CON_KH.OD) & CON_KH.ref()<>_ref
|| FUN.info('Zapis na dzień %1 już występuje w kartotece.'@[CON_KH.OD$4]);
   _spr:='OD'
?};
CON_KH.cntx_pop();
_spr


\con_kh_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Ref rekordu tabeli CON_KH
::  OLD: \con_kh_ref/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
CON_KH.ref()


\br_con_kh
::----------------------------------------------------------------------------------------------------------------------
:: UTW: PK [2008]
:: OPIS: Wypelnienie wartosci pol zmiennej UD_POM
:: OLD: \rek_prz_kh/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1).name(1)='godz????'
|| {? G.win_edit('?')='REDC'
   || CON_KG.cntx_psh();
      CON_KG.index('CON_KGT');
      CON_KG.prefix();
      {? CON_KG.find_key(P.ref(),G.ref())
      || UD_POM.JORG:=CON_KG.PODZORG().SYMBOL;
         UD_POM.OKOSZ:=CON_KG.OB_KOSZ().SYMBOL;
         UD_POM.PBUD:=CON_KG.POZ_BUD().SYMBOL;
         UD_POM.WYM4:=CON_KG.WYM4().SYMBOL;
         UD_POM.WYM5:=CON_KG.WYM5().SYMBOL
      || exec('null_ud_pom','control')
      ?};
      CON_KG.cntx_pop()
   ?}
|| UD_POM.JORG:=cur_tab(1,1).PODZORG().SYMBOL;
   UD_POM.OKOSZ:=cur_tab(1,1).OB_KOSZ().SYMBOL;
   UD_POM.PBUD:=cur_tab(1,1).POZ_BUD().SYMBOL;
   UD_POM.WYM4:=cur_tab(1,1).WYM4().SYMBOL;
   UD_POM.WYM5:=cur_tab(1,1).WYM5().SYMBOL
?};
''


\bd_con_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Kasowanie naglowka schematu wraz z pozycjami
::  OLD: \usun_kh/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('del_conf','#table',CON_KH)
|| CON_KW.index('CON_HR');
   CON_KW.prefix(CON_KH.ref());
   do();
   {? CON_KW.first() || {! |? CON_KW.del() !} ?};
   CON_KH.del();
   end()
?}


\set_enabled2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia dostępność pól CON_KH
::----------------------------------------------------------------------------------------------------------------------
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(UD_POM.SKID_MB);
{! _nr:=1..5
|! _jest:=SKID_MBP.find_key(_nr);
   _pole:={? _nr=1 || 'POZ_BUD'
          |? _nr=2 || 'PODZORG'
          |? _nr=3 || 'OB_KOSZ'
          |? _nr=4 || 'WYM4'
          |? _nr=5 || 'WYM5'
          || ''
          ?};
   CON_KH.efld_opt('RED','enable='+$_jest,CON_KH,_pole);
   _pole:={? _nr=1 || 'PBUD'
          |? _nr=2 || 'JORG'
          |? _nr=3 || 'OKOSZ'
          |? _nr=4 || 'WYM4'
          |? _nr=5 || 'WYM5'
          || ''
          ?};
   ($('UD_POM.'+_pole+':=_a'))({? _jest || SKID_MBP.NAZ || '' ?});
   CON_KH.efld_opt('RED','enable='+$_jest,UD_POM,_pole);
   CON_KH.efld_opt('RED','enable='+$_jest,UD_POM,'NAZ_WYM'+$_nr);
   CON_KH.efld_opt('RED','mark='+$(_nr<>1 & _jest & SKID_MBP.UD_SCH().UD_TYP().SYMBOL<>'PODZORG'),UD_POM,'NAZ_WYM'+$_nr)
!};
SKID_MBP.cntx_pop();
~~


\set_fml
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia formuły okien redagowania
::----------------------------------------------------------------------------------------------------------------------
{! _lp:=1..5
|! exec('set_fml','#field',UD_POM,'NAZ_WYM'+$_lp,"
      _nr:=#(cur_afld()+1);
      fld(exec('dim_name','control',UD_POM.SKID_MB,_nr))
   ")
!};
exec('set_fml','#field',EDIT_VAR,'POZ_BUD',
   "EDIT_VAR.POZ_BUD:=cur_tab(1,1).POZ_BUD().SYMBOL;~~",
   "exec('ustaw_skl','control')",
   "exec('f3_dim','control',UD_POM.SKID_MB,1)",
   "{? fld()='' || cur_tab(1,1).POZ_BUD:=null; return(1) ?};
    _ref:=exec('ae_dim','control',UD_POM.SKID_MB,1);
    {? _ref
    || cur_tab(1,1).POZ_BUD:=_ref
    ?}
   "
);
exec('set_fml','#field',EDIT_VAR,'N_POZ_B',
   "EDIT_VAR.N_POZ_B:=cur_tab(1,1).N_POZ_B().SYMBOL;~~",
   "exec('ustaw_skl','control')",
   "exec('f3_dim','control',UD_POM.SKID_MB,1)",
   "{? fld()='' || cur_tab(1,1).N_POZ_B:=null; return(1) ?};
    _ref:=exec('ae_dim','control',UD_POM.SKID_MB,1);
    {? _ref
    || cur_tab(1,1).N_POZ_B:=_ref
    ?}
   "
);
exec('set_fml','#field',UD_POM,'PBUD',
   "UD_POM.PBUD:=cur_tab(1,1).POZ_BUD().SYMBOL;~~",
   "exec('ustaw_skl','control')",
   "exec('f3_dim','control',UD_POM.SKID_MB,1)",
   "{? fld()='' || cur_tab(1,1).POZ_BUD:=null; return(1) ?};
    _ref:=exec('ae_dim','control',UD_POM.SKID_MB,1);
    {? _ref
    || cur_tab(1,1).POZ_BUD:=_ref;
       fld(cur_tab(1,1).POZ_BUD().SYMBOL)
    ?}
   "
);
exec('set_fml','#field',UD_POM,'JORG',
   "UD_POM.JORG:=cur_tab(1,1).PODZORG().SYMBOL; ~~",
   "exec('be_dim','control',UD_POM.SKID_MB,2)",
   "exec('f3_dim','control',UD_POM.SKID_MB,2)",
   "  {? fld()='' || cur_tab(1,1).PODZORG:=null; return(1) ?};
      _ref:=exec('ae_dim','control',UD_POM.SKID_MB,2);
      {? _ref
      || cur_tab(1,1).PODZORG:=_ref;
         fld(cur_tab(1,1).PODZORG().SYMBOL)
      ?}
   "
);
exec('set_fml','#field',UD_POM,'OKOSZ',
   "UD_POM.OKOSZ:=cur_tab(1,1).OB_KOSZ().SYMBOL; ~~",
   "exec('be_dim','control',UD_POM.SKID_MB,3)",
   "exec('f3_dim','control',UD_POM.SKID_MB,3)",
   "  {? fld()='' || cur_tab(1,1).OB_KOSZ:=null; return(1) ?};
      _ref:=exec('ae_dim','control',UD_POM.SKID_MB,3);
      {? _ref
      || cur_tab(1,1).OB_KOSZ:=_ref;
         fld(cur_tab(1,1).OB_KOSZ().SYMBOL)
      ?}
   "
);
exec('set_fml','#field',UD_POM,'WYM4',
   "UD_POM.WYM4:=cur_tab(1,1).WYM4().SYMBOL; ~~",
   "exec('be_dim','control',UD_POM.SKID_MB,4)",
   "exec('f3_dim','control',UD_POM.SKID_MB,4)",
   "  {? fld()='' || cur_tab(1,1).WYM4:=null; return(1) ?};
      _ref:=exec('ae_dim','control',UD_POM.SKID_MB,4);
      {? _ref
      || cur_tab(1,1).WYM4:=_ref;
         fld(cur_tab(1,1).WYM4().SYMBOL)
      ?}
   "
);
exec('set_fml','#field',UD_POM,'WYM5',
   "UD_POM.WYM5:=cur_tab(1,1).WYM5().SYMBOL; ~~",
   "exec('be_dim','control',UD_POM.SKID_MB,5)",
   "exec('f3_dim','control',UD_POM.SKID_MB,5)",
   "  {? fld()='' || cur_tab(1,1).WYM5:=null; return(1) ?};
      _ref:=exec('ae_dim','control',UD_POM.SKID_MB,5);
      {? _ref
      || cur_tab(1,1).WYM5:=_ref;
         fld(cur_tab(1,1).WYM5().SYMBOL)
      ?}
   "
);
~~


\set_enabled
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia dostępność pól
::   WE: [_a] - akronim okna
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || return(1) ?};
{? var_press('_a')<=0 || _a:=CON_KW.win_edit('?') ?};
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(CON_KH.SKID_MB);
{! _nr:=1..5
|! _jest:=SKID_MBP.find_key(_nr);
   _pole:={? _nr=1 || 'POZ_BUD'
          |? _nr=2 || 'PODZORG'
          |? _nr=3 || 'OB_KOSZ'
          |? _nr=4 || 'WYM4'
          |? _nr=5 || 'WYM5'
          || ''
          ?};
   CON_KW.efld_opt(_a,'enable='+$_jest,CON_KW,_pole);
   _pole:={? _nr=1 || 'PBUD'
          |? _nr=2 || 'JORG'
          |? _nr=3 || 'OKOSZ'
          |? _nr=4 || 'WYM4'
          |? _nr=5 || 'WYM5'
          || ''
          ?};
   CON_KW.efld_opt(_a,'enable='+$_jest,UD_POM,_pole);
   CON_KW.efld_opt(_a,'enable='+$_jest,UD_POM,'NAZ_WYM'+$_nr);
   CON_KW.efld_opt(_a,'mark='+$(_jest & SKID_MBP.UD_SCH().UD_TYP().SYMBOL<>'PODZORG'),UD_POM,'NAZ_WYM'+$_nr)
!};
SKID_MBP.cntx_pop();
~~


\bv_con_kw_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed wyswietleniem CON_KW.CZY_FOR
::----------------------------------------------------------------------------------------------------------------------
_okno:=CON_KW.win_edit('?');
_slo:=CON_KW.CZY_FOR='N';
CON_KW.efld_opt(_okno,'enable='+$_slo,EDIT_VAR,'POZ_BUD');
CON_KW.efld_opt(_okno,'mark='+$_slo,EDIT_VAR,'POZ_BUD');
CON_KW.efld_opt(_okno,'enable='+$_slo,CON_KW,'POZ_BUD');
CON_KW.efld_opt(_okno,'enable='+$(~_slo),CON_KW,'FORM');
CON_KW.efld_opt(_okno,'mark='+$(~_slo),CON_KW,'FORM');
_enabled:=CON_KW.W='T';
CON_KW.efld_opt(_okno,'enable='+$_enabled,CON_KW,'N_POZ_B');
CON_KW.efld_opt(_okno,'enable='+$_enabled,EDIT_VAR,'N_POZ_B');
~~


\ae_con_kw_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Po redakcji CON_KW.CZY_FOR
::----------------------------------------------------------------------------------------------------------------------
win_disp();
1


\czy_formula
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Przed redakcja pola FORM tabeli CON_KW
::  OLD: \czy_formula/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
CON_KW.CZY_FOR='T'


\con_kh_skidmb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Wartosc poczatkowa pola CON_KK.SKID_MB
::   WY: CON_KH.SKID_MB
::  OLD: \con_kh_skidmb/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
CON_KH.SKID_MB


\ustaw_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Sprawdzenie procentu dla tej samej rubryki i pozycji budzetowej
::   WE: _a - jesli prawda to sprawdzenie wyliczenia przy rekord po
::            jesli fausz podpowiedz po redakcji pola obiekt kosztowy
::  OLD: \ustaw_proc/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>1 || _a:=0 ?};
{? ~CON_KW.OB_KOSZ & ~_a & CON_KW.win_edit('?')<>'REDZ'
|| CON_KW.G:='T'; CON_KW.PODZORG:=null; CON_KW.PROC:=100; win_disp; return(1)
?};
CON_KW.cntx_psh(); CON_KW.index('CON_HR');
CON_KW.prefix(CON_KW.CON_KH,CON_KW.POZ_BUD,CON_KW.R().RN);
_ref:={? VAR.P || CON_KW.ref() || null ?};
_proc:=0;
_wyn:=1;
{? CON_KW.PROC<>0 & ~_a || CON_KW.cntx_pop(); return(1) ?};
{? CON_KW.first()
|| {! |? {? CON_KW.ref()<>_ref || _proc+=CON_KW.PROC ?}; CON_KW.next() !};
   {? _proc>100 || _wyn:=0; _proc:=0 || _proc:=100-_proc; _wyn:=1 ?}
|| _proc:=100
?};
CON_KW.cntx_pop();
{? ~_a || CON_KW.PROC:=_proc; 1 || _wyn ?}


\proc_przed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Przed redakcja pol CON_KW.PODZORG, CON_KW.PROC, EDIT_VAR.PODZORG
::  OLD: \proc_przed/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
CON_KW.G<>'T' & CON_KW.ZUS<>'T'


\ustaw_skl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Przed redakcja pol w tabeli CON_KW
::  OLD: \ustaw_skl/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_KW.ZUS='T' ||
   {? cur_afld='G' | cur_afld='OB_KOSZ' | cur_afld='PODZORG' | cur_afld='WYM4' | cur_afld='WYM5' |
      cur_afld='W' | cur_afld='PROC' | cur_afld='N_POZ_B' ||
      return(0)
   ?}
?};
{? CON_KW.W='N' & cur_afld='N_POZ_B' || return(0) ?};
{? CON_KW.G='T' ||
   {? cur_afld='OB_KOSZ' || exec('ustaw_proc','control'); return(0)
   |? cur_afld='PODZORG' || return(0)
   ?}
?};
{? cur_afld='POZ_BUD' || {? CON_KW.CZY_FOR='T' || cur_tab.POZ_BUD:=null; win_disp; return(0) ?} ?};
1


\null_ud_pom2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: dolacz - schematy kontrolingu
::  OLD: \null_ud_pom2/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
exec('null_ud_pom','control');
VAR.P:=0; 1


\rek_prz_kh2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: popraw - schematy kontrolingu
::  OLD: \rek_prz_kh2/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rek_prz_kh','control');
VAR.P:=1


\profil
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Kopiowanie schematu profili
::  OLD: \profil/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_KH.F='F'
|| {? CON_KW.first()
   || FUN.info('Schemat do którego chcesz kopiować nie jest pusty.\nKopiowanie nie może być zrealizowane.'@);
      return(0)
   ?}
?};
__error:=0;
CON_KH.cntx_psh();
{? CON_KH.F<>'F'
|| undefine();
   define('OD',CON_KH.OD,'Data od której obowiązuje schemat'@);
   _ok:=def_btn('text='+'OK'@,'key:F2');
   _anuluj:=def_btn('text='+'Anuluj'@,'key:Esc');
   def_bopt(_ok,'tooltip='+exec('help_red_ok','#window','P'));
   def_bopt(_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
   {? def_edit("chk_rec",'Wprowadź dane'@)
   || exec('kopia_sel','control',CON_KH.F)
   ?};
   undefine()
|| _wer:=CON_KH.mk_sel('Wybór schematów do kopiowania'@,,0,'con_kh_cop',,10);
   CON_KH.win_fld(_wer,CON_KH,'OD',,,,,1,'Data od'@);
   CON_KH.win_fld(_wer,CON_KH,'O',,,,,1,'Opis'@);
   CON_KH.win_act(_wer,0,'Formuła','Wybierz'@@,,,,"exec('kopia_kontr','control',ref_con_kh,CON_KH.ref); sel_exit",1);
   CON_KH.win_sel(_wer);
   ref_con_kh:=CON_KH.ref;
   CON_KH.select();
   &ref_con_kh
?};
CON_KH.cntx_pop();
&__error;
CON_KW.prefix(CON_KH.ref)


\kopia_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS:
::   WE: _a - Pracownik Zleceniobiorca
::----------------------------------------------------------------------------------------------------------------------
pCopy1:=_a;
_grp:=UD_DEF.grp_make(''@,"",'ctr_pdz2');
UD_DEF.grp_sel(_grp,UD_DEF,'NAW_MIN',,"
   exec('filtruj_p','schemat','CTR',UD_DEF.ref(),pCopy1,'T','W');
   grp_disp(P,'CTR',1)
",,,,"",,,,'maximized_with_title');
UD_DEF.grp_splt(_grp,,'vertical','left');
UD_DEF.grp_sel(_grp,P,'CTR',,"

",,,10,"",,,,'maximized_with_title');
UD_DEF.cntx_psh();
UD_DEF.win_sel(_grp);
UD_DEF.select();
UD_DEF.cntx_pop();
VAR_DEL.delete('pCopy1')


\kopia_kontr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Skopiowanie pozycji miedzy schematami kontrolingu.
::   WE:  _a  - Ref rekordu tabeli CON_KH do którego kopiujemy pozycje tabeli CON_KW.
::        _b  - Ref rekordu tabeli CON_KH którego pozycje kopiujemy.
::       [_c] - Typ operacji: 1-import [0]-kopia
::  OLD: \kopia_kontr/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>7 || return(0) ?};
{? var_pres('_b')<>7 || return(0) ?};
{? var_pres('_c')<=0 || _c:=0 ?};
{? _b=_a ||
   __error+=1;
   {? _c=1
   || FUN.info(
         'Nie można wykonać importu tego samego schematu.\n'
         'Import nie może być zrealizowany.'@
      )
   || FUN.info(
         'Nie można wykonać kopiowania tego samego schematu.\n'
         'Kopiowanie nie może być zrealizowane.'@
      )
   ?};
   return(0)
?};
CON_KW.prefix(_a);
{? CON_KW.first()
|| __error+=1;
   FUN.info(
      'Schemat do którego chcesz kopiować nie jest pusty.\n'
      'Kopiowanie nie może być zrealizowane.'@
   );
   return(0)
?};
CON_KW.prefix(_b);
{? CON_KW.first()
|| {!
   |? _con:=CON_KW.ref();
      CON_KW.prefix();
      CON_KW.CON_KH:=_a;
      CON_KW.add();
      CON_KW.prefix(_b);
      CON_KW.seek(_con);
      CON_KW.next()
   !}
?};
1


\kontrobl
::----------------------------------------------------------------------------------------------------------------------
:: UTW: MGO  [2006]
:: OPIS: Funkcja wyswietla okienko z pozycjami podzialu kontrolingowego
::  OLD: \kontrobl/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZM.PLAN='r'
|| _okno:='SELEKCJ2'
|| _okno:='SELEKCJ3'
?};
VAR.EDITABLE:=1;
KTRWP.hdr_sel();
{? KTRWN.get()
|| KTRWP.use('kontwa'+KTRWN.ROK_F().KOD);
   KTRWP.hdr_sel(': %1'@[ZM.SKID_MBN().NAZ+' - '+KTRWN.OKRO_F().NAZ+' '+KTRWN.ROK_F().NAZ]);
   {? OPERATOR.DEPT=null
   || KTRWP.index('KTRWS'); KTRWP.prefix(KTRWN.ref())
   || KTRWP.index('KTRWJ'); KTRWP.prefix(KTRWN.ref(),OPERATOR.DEPT().OD)
   ?}
||
::   SROD.NRI:=SROD.NST:='';
   ZM.AMOR:=ZM.RAZEM:=ZM.PR:=0;
   KTRWP.use('kontwa__');
   KTRWP.hdr_sel(': %1'@[ZM.SKID_MBN().NAZ]);
   KTRWP.index('KTRWJ'); KTRWP.prefix(null)
?};
{? _okno='SELEKCJ2'
|| grp_disp(KTRWP,_okno)
?}


\szukokr_estra
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Szuka okresu z systemu Środki trwałe -
::       Ustawia wartosci w polach VAR.AR, VAR.AM
::   WE: _a - ref okresu (OKRO_F)
::  OLD: \szukokr_estra/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.AM:=VAR.AR:=0;
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix();
{? OKRO_F.seek(_a) & OKRO_F.NR>0 & OKRO_F.NR<=12
|| OKRO_F.ROK();
   {? ~exec('jest','#stalesys',KONST) | KONST.MP=0
   || VAR.AM:=OKRO_F.NR; VAR.AR:=(OKRO_F.POCZ~1)
   || _okres:=(OKRO_F.NR-KONST.MP);
      {? _okres<=0
      || _okres:=13-(|_okres);
         {? ROK_F.prev()
         || OKRO_F.prefix(ROK_F.ref());
            {? OKRO_F.size()=14  & OKRO_F.find_key(_okres)
            || VAR.AM:=OKRO_F.NR; VAR.AR:=(OKRO_F.POCZ~1)
            ?}
         ?}
      || VAR.AM:=OKRO_F.NR; VAR.AR:=(OKRO_F.POCZ~1)
      ?}
   ?}
?};
OKRO_F.cntx_pop(); ROK_F.cntx_pop(); 1


\mod_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca okno modeli
::   WE: [_a] - dlugosc pola z opisem
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=30 ?};
_okno:=SKID_MBN.mk_sel('Modele danych'@,'P',,'skidmbn1',,,,,'U');
SKID_MBN.win_fld(_okno,,'KOD');
SKID_MBN.win_fld(_okno,,'NAZ',,,_a);
_okno


\wymiar1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Piotr Jaskulski [2010]
:: OPIS: Kolorowanie wymiarow w systemie Estra
::  OLD: \wymiar1/tech_es.fml
::----------------------------------------------------------------------------------------------------------------------
K_ES.W:=K_ES.W1;exec('flddisp','color','FLD_NRD#01#')


\wymiar2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Piotr Jaskulski [2010]
:: OPIS: Kolorowanie wymiarow w systemie Estra
::  OLD: \wymiar2/tech_es.fml
::----------------------------------------------------------------------------------------------------------------------
K_ES.W:=K_ES.W2;exec('flddisp','color','FLD_NRD#01#')


\wymiar3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Piotr Jaskulski [2010]
:: OPIS: Kolorowanie wymiarow w systemie Estra
::  OLD: \wymiar3/tech_es.fml
::----------------------------------------------------------------------------------------------------------------------
K_ES.W:=K_ES.W3;exec('flddisp','color','FLD_NRD#01#')


\wymiar4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Piotr Jaskulski [2010]
:: OPIS: Kolorowanie wymiarow w systemie Estra
::  OLD: \wymiar4/tech_es.fml
::----------------------------------------------------------------------------------------------------------------------
K_ES.W:=K_ES.W4;exec('flddisp','color','FLD_NRD#01#')


\wymiar5
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Piotr Jaskulski [2010]
:: OPIS: Kolorowanie wymiarow w systemie Estra
::  OLD: \wymiar5/tech_es.fml
::----------------------------------------------------------------------------------------------------------------------
K_ES.W:=K_ES.W5;exec('flddisp','color','FLD_NRD#01#')


\editable
::----------------------------------------------------------------------------------------------------------------------
:: UTW: MGO  [2008]
:: OPIS: Przed redakcja wartosci kontrolingowych dla poszczegolnych wymiarow
::     : 1 - wymiar zdefiniowany; dostepne do redakcji
::     : 2 - wymiar niezdefiniowany; niedostepne do redakcji
::  OLD: \editable/kontrol.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.EDITABLE = 1
|| {? _a='POZ_BUD' & K_ES.W1<>'' || 1
   |? _a='PODZORG' & ((cur_tab()<>KTRD & cur_tab()<>KTRP) | K_ES.W2<>'') || 1
   |? _a='OB_KOSZ' & K_ES.W3<>'' || 1
   |? _a='WYMIAR4' & K_ES.W4<>'' || 1
   |? _a='WYMIAR5' & K_ES.W5<>'' || 1
   || 0
   ?}
|| 0
?}


\set_plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia plan amortyzacji na podstawie funkcji
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.PAR01=0
|| K_ES.SRSP:=null
|| SRSP.index('SRSP'); SRSP.prefix(%CON_FUN.PAR01);
   K_ES.SRSP:={? SRSP.first() || SRSP.ref() || null ?}
?}


\br_ktrwp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Akcja Rekord przed dla tabeli KTRWP
::  OLD: \srodkon1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_name:=ref_name(KTRWP.SROD_ID);
{? _name<>SRSR.name()
|| SRD.maski(5+_name+1)
?};
SRSR.index('SRSR'); SRSR.prefix();
EDIT_ES.SRSR:={? SRSR.seek(KTRWP.SROD_ID) || SRSR.ref() || null ?};
~~


\bv_ktrwp
::----------------------------------------------------------------------------------------------------------------------
:: UTW: MGO  [2006]
:: OPIS: Wyswietl wartosci kontrolingowe
::  OLD: \dispcont/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_POM.JORG:={? KTRWP.JORG<>null || KTRWP.JORG().SYMBOL || '' ?};
UD_POM.OKOSZ:={? KTRWP.OKOSZ<>null || KTRWP.OKOSZ().SYMBOL || '' ?};
UD_POM.PBUD:={? KTRWP.PBUD<>null || KTRWP.PBUD().SYMBOL || '' ?};
UD_POM.WYM4:={? KTRWP.WYM4<>null || KTRWP.WYM4().SYMBOL || '' ?};
UD_POM.WYM5:={? KTRWP.WYM5<>null || KTRWP.WYM5().SYMBOL || '' ?};
{? _a='S'
|| KTRWP.win_edit('REDAKCJA')
|| KTRWP.win_edit('REDAKCJ2')
?};
KTRWP.display();
''


\get_xlsx_www
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Pobiera arkusz excela w webtermie
::   WE: _a - uidref K_HARM_P
::       _b - typ zadania
::----------------------------------------------------------------------------------------------------------------------
K_HARM_P.cntx_psh();
K_HARM_P.prefix();
{? ~K_HARM_P.seek(_a)
|| FUN.info('Nie znaleziono zadania budżetowego.'@)
|? _b='A' & K_HARM_P.STATUS<>'W' | _b='B' & K_HARM_P.STATUS<>'U'
|| FUN.info('Status zadania \'%1\'.\nEdycja arkusza niedozwolona.'@[K_HARM_P.STAT_NAZ])
|| exec('k_harm_p_open','control',0)
?};
K_HARM_P.cntx_pop()


\br_skid_mbn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Rekord przed w okienku WER_C dla SKID_MBN
::  OLD: \br_skid_mbn/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
exec('k_insmbn','konsolidacja');
__SMBN_D:=K_INSMBN.CZY_DOK;
__SMBN_L:=K_INSMBN.CZY_LIST;
exec('czy_pers','control')


\czy_pers
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2011]
:: OPIS: Rekord przed w okienku WER_C dla SKID_MBN. Podswietlenie modeli zwiazanych z personelem.
::  OLD: \czy_pers/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
UD_POM.TYP:={? SKID_MBN.TYP='P'
            || 'Personel'
            |? SKID_MBN.TYP='O'
            || 'Ogólny'
            || ''
            ?};
SKID_MBN.TYP='P'


\bw_p_ctr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Okienko przed tabeli P okna CTR
::----------------------------------------------------------------------------------------------------------------------
{? var_press('pCopy1')<=0
|| P.actions('CTR','J',,1)
|| P.actions('CTR',,'J',1)
?}


\wzstrpb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Formula ustalajaca wlasciwy typ danych dla pol wskazujacych na sklad-
::       niki reprezentujace pozycje budzetowe. Wykorzystywana w formu-
::       lach na wzorzec dla wszystkich pol tego typu, ze wzgledu na koniecz-
::       nosc ustalenia typu danych do zaprefiksowania slownika skladnikow dla
::       szukania zapisow.
::  OLD: \wzstrpb/oddzial.fml
::----------------------------------------------------------------------------------------------------------------------
exec('szukaj_ud_typ','schemat','POZ_BUD'); ''


\wzstrok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Formula ustalajaca wlasciwy typ danych dla pol wskazujacych na sklad-
::       niki reprezentujace obiekty kosztowe. Wykorzystywana w formu-
::       lach na wzorzec dla wszystkich pol tego typu, ze wzgledu na koniecz-
::       nosc ustalenia typu danych do zaprefiksowania slownika skladnikow dla
::       szukania zapisow.
::  OLD: \wzstrok/oddzial.fml
::----------------------------------------------------------------------------------------------------------------------
exec('szukaj_ud_typ','schemat','OB_KOSZ'); ''


\wzstrorg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2006]
:: OPIS: Formula ustalajaca wlasciwy typ danych dla pol wskazujacych na sklad-
::       niki reprezentujace jednostki organizacyjne. Wykorzystywana w formu-
::       lach na wzorzec dla wszystkich pol tego typu, ze wzgledu na koniecz-
::       nosc ustalenia typu danych do zaprefiksowania slownika skladnikow dla
::       szukania zapisow.
::  OLD: \wzstrorg/oddzial.fml
::----------------------------------------------------------------------------------------------------------------------
exec('szukaj_ud_typ','schemat','PODZORG'); ''


\kharmp_todo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zadania ToDo zadań budżetowych
::----------------------------------------------------------------------------------------------------------------------
khpAll:=1;
exec('todo_select','#b__box',K_HARM_P.uidref());
VAR_DEL.delete('khpAll')


\kierownicy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2011]
:: OPIS: Zaznaczenie i przeniesienie do elementow widoku pracownikow wg zaleznosci sluzbowej
::  OLD: \kierownicy/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('szef')>100 || obj_del(szef) ?};
_szef:=tab_tmp(3,
   'NAZWISKO','STRING[30]','Nazwisko',
   'IMIE','STRING[20]','Imię',
   'T','STRING[9]','Nr teczki',
   'WYDZIAL','STRING[16]','Jednostka organizacyjna',
   'STN','STRING[80]','Stanowisko',
   'REF','INTEGER','Ref osoby');
exec('__F_ZATR','object');
P.index('PRACOZAT'); P.prefix(REF.FIRMA,__F_ZATR.P,'T');
{? P.first()
|| {!
   |? {? P.ST().K='T'
      || _szef.blank;
         _szef.NAZWISKO:=P.OSOBA().NAZWISKO;
         _szef.IMIE:=P.OSOBA().PIERWSZE;
         _szef.T:=P.T;
         _szef.WYDZIAL:=P.WYDZIAL().SYMBOL;
         _szef.STN:=P.ST().ST;
         _szef.REF:=#OSOBA.ref;
         _szef.add
      ?};
      P.next
   !};
   _podwlad:="
      {? OSOBA.seek(_a,)
      || _podwlad:=exec('prac_pod','stanprac',OSOBA.ref);
         _ind_sym:=TT_KEV.ndx_tmp(,1,'SYM',,,'SYM',,);
         _ind_tree:=TT_KEV.ndx_tmp(,1,'TREE',,,'SYM',,);
         {? _podwlad.first
         || {!
            |? TT_KEV.index(_ind_sym);
               {? TT_KEV.find_key('IP_'+(('00000000000'+$_podwlad.ID)+11),'IP_'+(('00000000000'+$_podwlad.ID)+11))
               || TT_KEV.index(_ind_tree);
                  exec('kev_ten','control')
               ?};
               _podwlad.next
            !}
         ?}
      ?}
   ";
   _okienko:=_szef.mk_sel('Kierownicy'@,'P',0,'prac_str_con_k',,,20,,'U');
   _szef.win_fld(_okienko,,'T',);
   _szef.win_fld(_okienko,,'NAZWISKO',,,20);
   _szef.win_fld(_okienko,,'IMIE',,,15);
   _szef.win_fld(_okienko,,'STN',,,30);
   _szef.win_fld(_okienko,,'WYDZIAL',,,15);
   _szef.win_act(_okienko,,'Formuła','Wybierz'@@,,,"sel_exit",,1);
   _szef.win_sel(_okienko);
   {? _szef.select || _podwlad(_szef.REF) ?}
?}


\get_qv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Zwraca wyrazenie w QV na podstawie K_FORM.F
::   WE: _a - wskazanie na K_FORM
::       _b - tylko liscie
::  OLD: \get_qv/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_qv:='';
K_FORM.cntx_psh(); K_FORM.prefix();
{? K_FORM.seek(_a,)
|| {? K_FORM.TYP='W' | _b='T'
   || _qv:=''
   |? K_FORM.TYP='F'
   || _fml:=K_FORM.memo_txt(0,1,'F');
      {? _fml<>''
      || _fml:=STR.gsub(_fml,'{?','if(');
         _fml:=STR.gsub(_fml,'||',',');
         _fml:=STR.gsub(_fml,'?}',')');
         _fml:=STR.gsub(_fml,'[','SUM(');
         _fml:=STR.gsub(_fml,']',')');
         _qv:=_fml
      ?}
   ?}
?};
K_FORM.cntx_pop();
_qv


\get_qv_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BF [17.00]
:: OPIS: Zwraca wyrazenie sformatowane pod QS na podstawie K_FORM.F lub drzewa powiązań
::   WE: _a - wskazanie na K_FORM
::       _b - tylko liscie
::       _c - wskazanie na UD_DEF
::----------------------------------------------------------------------------------------------------------------------
_qv:='';
K_FORM.cntx_psh(); K_FORM.prefix();
{? K_FORM.seek(_a,)
|| {? K_FORM.TYP='W' | _b='T'
   || _qv:=''
   |? K_FORM.TYP='F'
   || _fml:=K_FORM.memo_txt(0,1,'F');
      {? _fml<>''
      || _fml:=STR.gsub(_fml,']+[',']|[+');
         _fml:=STR.gsub(_fml,']-[',']|[-');
         _fml:={?1+_fml='['||_fml+(+_fml-1)||_fml?};
         _fml:={?_fml+1=']'||(+_fml-1)+_fml||_fml?};
         _fml:={?1+_fml<>'+' & 1+_fml<>'-'||'+'+_fml||_fml?};
         _qv:=_fml
      ?}
   ?}
?};
K_FORM.cntx_pop();
{? _qv=''
|| UD_DEF.cntx_psh(); UD_DEF.prefix();
   UD_DEF.seek(_c,);
      {? _b='T'
      ||   _qv:='+'+UD_DEF.SYMBOL
      ||   UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_DEF.UD_SCH,UD_DEF.ref());
      {? UD_DEF.first()
      || {!
         |? {? UD_DEF.ZN_AGR<>'~'
       || _zn:=UD_DEF.ZN_AGR;
          {?_qv<>''||_qv+=']|['?};
          _qv+=_zn+UD_DEF.SYMBOL
       ?};
       UD_DEF.next()
         !}
      || _qv:='+'+UD_DEF.SYMBOL
      ?}
    ?};
    UD_DEF.cntx_pop()
?};
_qv


\get_qv_zmienne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BF [18.02]
:: OPIS: Zwraca wyrazenie sformatowane pod QS na podstawie K_FORM.F lub drzewa powiązań. Uwzględnia tworzenie zmiennych
::   WE: _a - wskazanie na K_FORM
::       _b - tylko liscie
::       _c - wskazanie na UD_DEF
::----------------------------------------------------------------------------------------------------------------------
_qv:='';
K_FORM.cntx_psh(); K_FORM.prefix();
{? K_FORM.seek(_a,)
|| {? K_FORM.TYP='W' | _b='T'
   || _qv:=''
   |? K_FORM.TYP='F'
   || _fml:=K_FORM.memo_txt(0,1,'F');
      {? _fml<>''
      || _fml:=STR.gsub(_fml,']+[',']|[+');
         _fml:=STR.gsub(_fml,']-[',']|[-');
         _fml:={?1+_fml='['||_fml+(+_fml-1)||_fml?};
         _fml:={?_fml+1=']'||(+_fml-1)+_fml||_fml?};
         _fml:={?1+_fml<>'+' & 1+_fml<>'-'||'+'+_fml||_fml?};
         _qv:=_fml
      ?}
   ?}
?};
K_FORM.cntx_pop();
{? _qv=''
|| UD_DEF.cntx_psh(); UD_DEF.prefix();
   UD_DEF.seek(_c,);
   {? _b='T'
   || _qv:='+'+UD_DEF.SYMBOL
   ||      UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_DEF.UD_SCH,UD_DEF.ref());
      {? UD_DEF.first()
      || {!
         |? {? UD_DEF.ZN_AGR<>'~'
       || _zn:=UD_DEF.ZN_AGR;
          {?_qv<>''||_qv+=']|['?};
          _qv+=_zn+UD_DEF.SYMBOL
       ?};
       UD_DEF.next()
         !}
      || _qv:='+'+UD_DEF.SYMBOL
      ?};

      {?_qv*']|[*' | _qv*']|[/'
      ||_qv:='';
          {? UD_DEF.first()
         || {!
            |? {? UD_DEF.ZN_AGR<>'~'
          || _zn:=UD_DEF.ZN_AGR;
             {?_qv<>''||_qv+=_zn?};
             _qv+='#(vW($1,'+UD_DEF.SYMBOL+'))'
          ?};
          UD_DEF.next()
            !}
         || _qv:='+'+UD_DEF.SYMBOL
         ?}
      ?}
   ?};
   UD_DEF.cntx_pop()
?};
_qv


\get_qv_kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BF [18.02]
:: OPIS: Sprawdza czy w zwracanych formułach są pozycje oparte o zmienne i jeżeli tak to je podmienia
::   WE: _a - :RS
::----------------------------------------------------------------------------------------------------------------------

_tab:=tab_tmp(1,'SYMBOL','STRING[16]','Symbol','ZMIENNA','STRING[16]','Zmienna');
_a.first();
{!|?
 {?_a.ZMIENNA<>'    '||
   _tab.SYMBOL:=_a.SYMBOL;
   _tab.ZMIENNA:=_a.ZMIENNA;
   _tab.add()
 ?};
 _a.next()
!};
::Pętla wielokrotna po wszystkich pozycjach i sprawdzająca czy jeszcze gdzieś nie trzeba podmienić zmiennej
{!|?
  _czy_koniec:='T';
   _a.first();
   {!|?
       {? var_pres('_spltab')>100
       || obj_del(_spltab)
       ?};
       _byla_miana:='N';

       _f:=_a.F1+_a.F2+_a.F3+_a.F4+_a.F5+_a.F6+_a.F7+_a.F8+_a.F9+_a.F10+_a.F11+_a.F12+_a.F13+_a.F14;
      _spltab:=spli_str(_f,']|[');
      _max:=obj_len(_spltab);
      {! _ind:=1 .. _max |!
         {? _spltab[_ind] <> '' ||
              _tab.prefix(1-_spltab[_ind]);
              {? _tab.first()||
               _spltab[_ind]:=(1+_spltab[_ind])+'#('+_tab.ZMIENNA+'($1))';
               {?_a.ZMIENNA='    '||
                  _tab.clear();
                  _a.ZMIENNA:='v'+('000'+($(_tab.size()+1))+3);
                  _a.put();
                  _tab.SYMBOL:=_a.SYMBOL;
                  _tab.ZMIENNA:=_a.ZMIENNA;
                  _tab.add();
                  _czy_koniec:='N';
                   _byla_miana:='T'
               ?}

              ?}
         ?}
      !};

      {? _byla_miana='T'||
         _tmp_str:='';
         {! _ind:=1 .. _max |!
           {? (3+(1-_spltab[_ind]))<>'#(v'||
            _tmp_str:=_tmp_str+(1+_spltab[_ind])+'#(vW($1,'+(1-_spltab[_ind])+'))'
           ||
            _tmp_str:=_tmp_str+_spltab[_ind]
           ?}
         !};
         {?_f<>_tmp_str||
          _f:=_tmp_str;
          _a.F1:=200+_f; _f:=200-_f;
          _a.F2:=200+_f; _f:=200-_f;
          _a.F3:=200+_f; _f:=200-_f;
          _a.F4:=200+_f; _f:=200-_f;
          _a.F5:=200+_f; _f:=200-_f;
          _a.F6:=200+_f; _f:=200-_f;
          _a.F7:=200+_f; _f:=200-_f;
          _a.F8:=200+_f; _f:=200-_f;
          _a.F9:=200+_f; _f:=200-_f;
          _a.F10:=200+_f; _f:=200-_f;
          _a.F11:=200+_f; _f:=200-_f;
          _a.F12:=200+_f; _f:=200-_f;
          _a.F13:=200+_f; _f:=200-_f;
          _a.F14:=200+_f; _f:=200-_f;
          _a.put()
         ?}
      ?};
   _a.next()
   !};
 _czy_koniec='N'
!}


\dokl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca dokładność pozycji budżetowej
::   WE: _a - wskazanie na pozycję budżetową (UD_SKL)
::----------------------------------------------------------------------------------------------------------------------
_dokl:=2;
SKIDXDUD.cntx_psh();
SKIDXDUD.index('POZ'); SKIDXDUD.prefix(_a);
{? SKIDXDUD.first()
|| {? SKIDXDUD.WART_IL='I'
   || _dokl:=SKIDXDUD.PREC
   ?}
?};
SKIDXDUD.cntx_pop();
_dokl


\k_harm_p_akc_vi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Akceptacja/anulowanie widoku pozycji harmonogramu
::   WE:  _a  - tryb: 1-akceptacja 0-anulowanie
::       [_b] - pytać o zmianę? [1]-tak 0-nie
::  OLD: \k_harm_p_akc_vi/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_grp:=K_HARM_P.sel_size();
{? var_press('_b')<=0 || _b:=1 ?};
K_N_VIEW.index('SKID_MBN'); K_N_VIEW.prefix(K_HARM.SKID_MBN,K_HARM_P.ref());
{? K_N_VIEW.first()
|| {? K_HARM_P.STATUS<>'N' & K_HARM_P.STATUS<>'P'
   || {? ~_grp
      || FUN.info('Status pozycji harmonogramu uniemożliwia\nanulowanie akceptacji widoku.'@)
      ?}
   || {? _a=0
      || {? K_N_VIEW.AKC='T'
         || {? _grp & grkhptyp=0 |
              ~_grp & (_b=0 | FUN.ask('Czy anulować akceptację widoku danych'+
                       {? exec('is_arkusz','control')
                       || ' i\nusunąć arkusz do budżetowania'
                       || ''
                       ?}+'?'
                      ) )
            || K_HARM_P.EXCEL:=null;
               K_HARM_P.GOOGLEID:=K_HARM_P.LINK:='';
               exec('kharmp_stat','control','N');
               K_HARM_P.put();
               K_N_VIEW.AKC:='N';
               {? K_N_VIEW.put() & _grp
               || grkhpok+=1
               ?}
            ?}
         ?}
      || {? K_N_VIEW.AKC='N'
         || {? (~_grp | grkhptyp=1) & exec('kpv_chk','control',1,~_grp) &
               (_grp | _b=0 | FUN.ask('Czy zaakceptować widok danych?'@))
            || exec('set_kev_lp','control',1);
               K_N_VIEW.AKC:='T';
               {? K_N_VIEW.put() & _grp
               || grkhpok+=1
               ?}
            ?}
         ?}
      ?}
   ?}
|? ~_grp
|| FUN.info('Brak widoku danych.'@)
?}


\set_var
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia formuły zmiennych
::----------------------------------------------------------------------------------------------------------------------
{! _lp:=1..5
|! exec('set_fml','#field',UD_POM,'NAZ_WYM'+$_lp,"
      _nr:=#(cur_afld()+1);
      fld(exec('dim_name','control',SKIDXD.SKID_MB,_nr))
   ")
!};
SKIDXD.fld_fml('AN','BLANK',"KONTO.K1:=\'\'");
exec('set_fml','#field',UD_POM,'PBUD',
   "  UD_POM.PBUD:=SKIDXD.PBUD().SYMBOL;
      exec('enable_wart','control',1);
      ~~
   ",
   "exec('be_dim','control',SKIDXD.SKID_MB,1)",
   "exec('f3_dim','control',SKIDXD.SKID_MB,1)",
   "  {? fld()='' || SKIDXD.PBUD:=null; return(1) ?};
      _ref:=exec('ae_dim','control',SKIDXD.SKID_MB,1);
      {? _ref
      || SKIDXD.PBUD:=_ref;
         fld(SKIDXD.PBUD().SYMBOL);
         SKIDXDUD.index('POZ'); SKIDXDUD.prefix(SKIDXD.PBUD);
         {? SKIDXDUD.first()
         || {? SKIDXDUD.WART_IL='W'
            || {? SKIDXDUD.WSK_WAL='T'
               || {? SKIDXD.WAL=null || SKIDXD.WAL:=SKIDXDUD.WAL ?}
               || SKIDXD.WAL:=exec('wal_nar','dok_fks');
                  SKIDXD.WARTW:=0;
                  SKIDXD.KURS:=1
               ?};
               SKIDXD.JM:=null;
               {? SKIDXD.WART=0
               || _typ:=DOK.DOK_REJ().SLO().KOD;
                  _ile_juz:=0;
                  SKIDXDUD.cntx_psh();
                  SKIDXDUD.index('POZ');
                  SKIDXDUD.prefix(SKIDXD.PBUD);
                  {? (_typ='VAT' | _typ='SAD') & (-(6+menu_txt()))<>'popraw' &
                     (SKIDXDUD.WSK_WAL='N' | (SKIDXDUD.WSK_WAL='T' & (SKIDXDUD.WAL=exec('wal_nar','dok_fks') | SKIDXDUD.WAL=null)))
                  || SKIDXD.cntx_psh();
                     SKIDXD.index('SKIDXD'); SKIDXD.prefix(DOK.ref(),SKIDXD.SKID_MB);
                     {? SKIDXD.first()
                     || {!
                        |? SKIDXDUD.prefix(SKIDXD.PBUD);
                           {? SKIDXDUD.first() & SKIDXDUD.WART_IL='W'
                           || _ile_juz+=SKIDXD.WART
                           ?};
                           SKIDXD.next()
                        !}
                     ?};
                     SKIDXD.cntx_pop()
                  ?};
                  SKIDXDUD.cntx_pop();
                  SKIDXD.WART:=PAR_WYDR.RPAR3-_ile_juz;
                  {? SKIDXD.WART<0 || SKIDXD.WART:=0 ?}
               ?};
               SKIDXD.WART:=SKIDXD.WART$2
            || {? SKIDXD.JM=null || SKIDXD.JM:=SKIDXDUD.JM ?};
               SKIDXD.WAL:=null;
               SKIDXD.WARTW:=SKIDXD.KURS:=0;
               SKIDXD.WART:=SKIDXD.WART$SKIDXDUD.PREC
            ?}
         ?};
         1
      ?}
   "
);
exec('set_fml','#field',UD_POM,'JORG',
   "UD_POM.JORG:=SKIDXD.JORG().SYMBOL; ~~",
   "exec('be_dim','control',SKIDXD.SKID_MB,2)",
   "exec('f3_dim','control',SKIDXD.SKID_MB,2)",
   "  {? fld()='' || SKIDXD.JORG:=null; return(1) ?};
      _ref:=exec('ae_dim','control',SKIDXD.SKID_MB,2);
      {? _ref
      || SKIDXD.JORG:=_ref;
         fld(SKIDXD.JORG().SYMBOL)
      ?}
   "
);
exec('set_fml','#field',UD_POM,'OKOSZ',
   "UD_POM.OKOSZ:=SKIDXD.OKOSZ().SYMBOL; ~~",
   "exec('be_dim','control',SKIDXD.SKID_MB,3)",
   "exec('f3_dim','control',SKIDXD.SKID_MB,3)",
   "  {? fld()='' || SKIDXD.OKOSZ:=null; return(1) ?};
      _ref:=exec('ae_dim','control',SKIDXD.SKID_MB,3);
      {? _ref
      || SKIDXD.OKOSZ:=_ref;
         fld(SKIDXD.OKOSZ().SYMBOL)
      ?}
   "
);
exec('set_fml','#field',UD_POM,'WYM4',
   "UD_POM.WYM4:=SKIDXD.WYM4().SYMBOL; ~~",
   "exec('be_dim','control',SKIDXD.SKID_MB,4)",
   "exec('f3_dim','control',SKIDXD.SKID_MB,4)",
   "  {? fld()='' || SKIDXD.WYM4:=null; return(1) ?};
      _ref:=exec('ae_dim','control',SKIDXD.SKID_MB,4);
      {? _ref
      || SKIDXD.WYM4:=_ref;
         fld(SKIDXD.WYM4().SYMBOL)
      ?}
   "
);
exec('set_fml','#field',UD_POM,'WYM5',
   "UD_POM.WYM5:=SKIDXD.WYM5().SYMBOL; ~~",
   "exec('be_dim','control',SKIDXD.SKID_MB,5)",
   "exec('f3_dim','control',SKIDXD.SKID_MB,5)",
   "  {? fld()='' || SKIDXD.WYM5:=null; return(1) ?};
      _ref:=exec('ae_dim','control',SKIDXD.SKID_MB,5);
      {? _ref
      || SKIDXD.WYM5:=_ref;
         fld(SKIDXD.WYM5().SYMBOL)
      ?}
   "
)


\k_pnoty_suma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Suma pozycji noty
::  OLD: \k_pnoty_suma/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('zakl_war')>0 || return ?};
UD_POM.SUMA:=0;
K__PNOTY.cntx_psh(); SKIDXDUD.cntx_psh();
{? K__PNOTY.f_active()
|| {!
   |? SKIDXDUD.index('POZ');
      SKIDXDUD.prefix(K__PNOTY.WYM1);
      {? SKIDXDUD.first() & SKIDXDUD.WART_IL='W'
      || UD_POM.SUMA+=K__PNOTY.WART
      ?};
      K__PNOTY.f_next()
   !}
|? K__PNOTY.first()
|| {!
   |? SKIDXDUD.index('POZ');
      SKIDXDUD.prefix(K__PNOTY.WYM1);
      {? SKIDXDUD.first() & SKIDXDUD.WART_IL='W'
      || UD_POM.SUMA+=K__PNOTY.WART
      ?};
      K__PNOTY.next()
   !}
?};
K__PNOTY.cntx_pop(); SKIDXDUD.cntx_pop()


\msgmoderr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Komunikat o zablokowaniu modelu przez innego uzytkownika
::  OLD: \msgmoderr/skid_xd.fml
::  OLD: \msgmoderr/!ctr_pdm_zmoa.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Model obsługuje inny operator.\nZabroniony dostęp.'@)


\dod_prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2011]
:: OPIS: Odswiezenie listy pracownikow lub dodanie nowych wakatow
::  OLD: \dod_prac/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_wybor:=FUN.choice('Proszę określić sposób wprowadzania danych.'@,,
   'Aktualizacja listy pracowników'@,'Tworzenie nowych wakatów'@);
{? ~_wybor || return ?};

{? _wybor=1
::  Pracownicy
|| exec('generuj_prac','control',1)
:: wakaty
|? _wybor=2
||
   _tab:=sql('select distinct STN.ST, STN.REFERENCE REF, 0 ILE
      from STN
      where STN.Z=\'T\'
      order by 1');
   _tab.blank;
   _tab.ST:='(WAKAT_ZBIORCZO)';
   _tab.add;
   _okienko:=_tab.mk_sel('Nowe wakaty dla stanowiska'@,'N',0,'prac_str_con_s',,,20);
   _tab.win_fld(_okienko,,'ST',,,40,,1,'Stanowisko'@);
   _tab.win_fld(_okienko,,'ILE',,,10,,,'Ilość wakatów'@);
   _tab.win_act(_okienko,,'Popraw',,,,,,1);
   _tab.win_sel(_okienko);
   _tab.select;
   _symbol:=tab_tmp(1,'S','STRING[16]','SYMBOL');
   _ud_typ:=UD_DEF.UD_SCH().UD_TYP;
   _ud_sch:=UD_DEF.UD_SCH;
   {? _tab.first
   || UD_DEF.cntx_psh; UD_SKL.cntx_psh; UD_SKL.prefix; UD_POW.cntx_psh;
      UD_DEF.index('PODTEC'); UD_DEF.prefix;
      UD_POW.index('OPIS');
      UD_POW.prefix(UD_TYP.ref);
      {? UD_POW.find_key('RAZEM PRACOWNICY','RAZEM PRACOWNICY') & UD_DEF.find_key(_ud_sch,UD_POW.UD_SKL)
      || _rodzic:=UD_DEF.ref
      || _rodzic:=null
      ?};
      {!
      |? {? _tab.ILE
         || _ile:=_tab.ILE;
            {? _tab.ST<>'(WAKAT_ZBIORCZO)'
            || {! _ind:=1.._ile
               |! _n_ind:=_ind;
                  {!
                  |? _ud_stan:=($_n_ind+'_'+$UD_DEF.size+'_'+$(BIT.sqlint(_tab.REF)));
                     {? _symbol.find_key(_ud_stan) || _n_ind+=1 || 0 ?}
                  !};
                  skl_lis:='T';
                  exec('add_skl_pow','control',_ud_stan,'Wakat dla: '+_tab.ST,_ud_typ,_ud_sch,_rodzic,'STN','','W');
                  &skl_lis
               !}
            || {? ~UD_POW.find_key('(WAKAT_ZBIORCZO)','(WAKAT_ZBIORCZO)')
               || skl_lis:='T';
                  exec('add_skl_pow','control','(WAKAT_ZBIORCZO)','(WAKAT_ZBIORCZO)',_ud_typ,_ud_sch,_rodzic,'','','W');
                  &skl_lis
               ?}
            ?}
         ?};
         _tab.next
      !};
      UD_DEF.cntx_pop; UD_SKL.cntx_pop; UD_POW.cntx_pop
   ?}
?}


\generuj_prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2011]
:: OPIS: Generuje nowy schemat danych. Typ: STANPRAC, Schemat: STR_PRAC oraz definicje schematu .
::       Generuje rowniez pozycje na podstawie pracownikow wg stanowisk.
::  OLD: \generuj_prac/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=0 ?};
UD_TYP.cntx_psh;
UD_SCH.cntx_psh;
UD_DEF.cntx_psh;
UD_POW.cntx_psh;

UD_SKL.clear;
UD_POW.clear;
_end:="UD_TYP.cntx_pop; UD_SCH.cntx_pop; UD_POW.cntx_pop; UD_DEF.cntx_pop";

UD_POW.index('SQL');
UD_DEF.index('PODTEC');UD_DEF.clear;
UD_TYP.index('SYMBOL'); UD_TYP.prefix;
{? UD_TYP.find_key('STANPRAC','STANPRAC')
|| _ud_typ:=UD_TYP.ref
|| _ud_typ:=exec('dodaj_ud_typ','schemat','STANPRAC','Pracownicy w controllingu',,'N','N')
?};
{? ~_ud_typ || _end(); return(0) ?};

UD_SCH.index('SYMBOL'); UD_SCH.prefix;
{? UD_SCH.find_key(_ud_typ,'STR_PRAC','STR_PRAC')
|| _ud_sch:=UD_SCH.ref; _tree:=null
|| _tree:=_ud_sch:=exec('dodaj_ud_sch','schemat',_ud_typ,'STR_PRAC','Struktura pracowników')
?};
{? ~_ud_sch || _end(); return(0) ?};

{? _tree | _a
|| {? var_pres('tab')>100 || &tab ?};
   tab:=sql('
      select OSOBA.NAZWISKO N, OSOBA.PIERWSZE I, OSOBA.PESEL, P.IP IP, P.REFERENCE P_REF, 0 NEW,
         UD_SKL.SYMBOL WYDZIAL, STN.ST ST, 0 RODZIC, F_ZATR.KOD F_ZATR
      from P join OSOBA join UD_SKL using(P.WYDZIAL,UD_SKL.REFERENCE) join STN join F_ZATR
      where P.FIRMA=:_a',exec('ref_firma','ustawienia'));
   _index:=tab.ndx_tmp(,1,'N',,0,'I',,0,'IP',,0);
   _ind_new:=tab.ndx_tmp(,1,'NEW',,0,'N',,0,'I',,0,'IP',,0);
   tab.index(_index);
   {? ~tab.first || FUN.error('Brak listy pracowników.'@); _end(); return(1) ?};
   UD_SKL.index('SYMBOL'); UD_SKL.prefix(_ud_typ);

   UD_POW.index('OPIS');
   UD_POW.prefix(_ud_typ);
   {? ~UD_POW.find_key('RAZEM PRACOWNICY','RAZEM PRACOWNICY')
   || {? ~UD_SKL.find_key('RAZEM PRACOWNICY','RAZEM PRACOWNICY')
      || skl_lis:='N';
         _rodzic:=exec('add_skl_pow','control','RAZEM PRACOWNICY','RAZEM PRACOWNICY',_ud_typ,_ud_sch,null,'','','P');
         &skl_lis
      ?}
   ?};

   {? UD_POW.find_key('RAZEM PRACOWNICY','RAZEM PRACOWNICY')
   || {? ~UD_DEF.find_key(_ud_sch,UD_POW.UD_SKL)
      || UD_POW.UD_SKL();
         UD_DEF.UD_SCH:=_ud_sch;
         UD_DEF.UD_SKL:=UD_SKL.ref;
         UD_DEF.UD_POZ:=null;
         UD_DEF.SYMBOL:=UD_SKL.SYMBOL;
         UD_DEF.OPIS:=UD_SKL.OPIS;
         UD_DEF.UD_DEF:=null;
         {? UD_DEF.add(1)
         || _rodzic:=UD_DEF.ref
         || _rodzic:=null
         ?}
      || _rodzic:=UD_DEF.ref
      ?}
   || _rodzic:=null
   ?};
   {? ~UD_POW.find_key('NIEPRACOWNICY','NIEPRACOWNICY')
   || {? ~UD_SKL.find_key('NIEPRACOWNICY','NIEPRACOWNICY')
      || skl_lis:='T';
         exec('add_skl_pow','control','NIEPRACOWNICY','NIEPRACOWNICY',_ud_typ,_ud_sch,_rodzic,'','','P');
         &skl_lis
      ?}
   || {? _a & ~UD_DEF.find_key(_ud_sch,UD_POW.UD_SKL)
      || UD_POW.UD_SKL();
         skl_lis:='T';
         exec('add_skl_pow','control','NIEPRACOWNICY','NIEPRACOWNICY',_ud_typ,_ud_sch,_rodzic,'','','P',1);
         &skl_lis
      ?}
   ?};

   UD_POW.index('SQL');
   {!
   |? _jest:=0;
      UD_POW.prefix(_ud_typ,tab.P_REF);
      {? _a & UD_POW.first
      || {!
         |? {? 3+((2+(UD_POW.SYMBOL*'IP_'))-UD_POW.SYMBOL)=REF.FIRMA().SYMBOL
            || _jest:=1;
               {? ~UD_DEF.find_key(_ud_sch,UD_POW.UD_SKL)
               || UD_POW.UD_SKL();
                  skl_lis:='T';
                  exec('add_skl_pow','control',UD_SKL.SYMBOL,UD_SKL.OPIS,_ud_typ,_ud_sch,_rodzic,'P',
                  tab.P_REF,'P',1);
                  &skl_lis
               ?}
            ?};
            UD_POW.next()
         !}
      ?};
      {? _jest=0
      || {? _a
         || tab.NEW:=1; tab.RODZIC:=#_rodzic; tab.put()
         || skl_lis:='T';
            exec('add_skl_pow','control',{? tab.F_ZATR='P' || '' || tab.F_ZATR+'_' ?}+'IP_'+REF.FIRMA().SYMBOL+(('00000000'+$tab.IP)+8),tab.N+' '+tab.I,_ud_typ,_ud_sch,_rodzic,'P',
               tab.P_REF,'P');
            &skl_lis
         ?}
      ?};
      tab.next()
   !};
   UD_POW.index('WAKAT');
   {? _a
   || UD_POW.prefix(_ud_typ,'W');
      {? UD_POW.first
      || {!
         |? {? ~UD_DEF.find_key(_ud_sch,UD_POW.UD_SKL)
            || UD_POW.UD_SKL();
               UD_DEF.UD_SCH:=_ud_sch;
               UD_DEF.UD_SKL:=UD_SKL.ref;
               UD_DEF.UD_POZ:=null;
               UD_DEF.SYMBOL:=UD_SKL.SYMBOL;
               UD_DEF.OPIS:=UD_SKL.OPIS;
               UD_DEF.UD_DEF:=_rodzic;
               UD_DEF.add(1)
            ?};
            UD_POW.next
         !}
      ?};
      UD_POW.prefix
   ?};

   tab.index(_ind_new);
   tab.prefix(1);
   {? tab.first
   || _okienko:=tab.mk_sel('Nowozatrudnieni'@,'P',0,'prac_str_con_nz',,,20,,'U');
      tab.win_fld(_okienko,,'F_ZATR',);
      tab.win_fld(_okienko,,'IP',);
      tab.win_fld(_okienko,,'N',,,20,,,'Nazwisko'@);
      tab.win_fld(_okienko,,'I',,,15,,,'Imię'@);
      tab.win_fld(_okienko,,'ST',,,30,,,'Stanowisko'@);
      tab.win_fld(_okienko,,'WYDZIAL',,,15,,,'Wydział'@);
      tab.win_act(_okienko,,'Formuła','Na wakat'@@,,,"exec('prac_wakat','control')",,1,,,,'N');
      tab.win_act(_okienko,,'Formuła','Bez wakatu'@@,,,"skl_lis:='T';
         exec('add_skl_pow','control',{? tab.F_ZATR='P' || '' || tab.F_ZATR+'_' ?}+'IP_'+REF.FIRMA().SYMBOL+(('00000000000'+$tab.IP)+8),tab.N+' '+tab.I,UD_TYP.ref,
         UD_SCH.ref,tab.RODZIC,'P',tab.P_REF,'P');
         &skl_lis; tab.prefix; tab.NEW:=0; tab.put; tab.prefix(1); tab.first",,0,,,,'B');
      tab.win_sel(_okienko);
      tab.select()
   ?}
?};
_end();
1


\add_skl_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2011]
:: OPIS: Zapis do tabel: UD_SKL, UD_POW, UD_DEF
::   WE: _a - UD_SKL.SYMBOL
::       _b - UD_SKL.OPIS
::       _c - UD_SKL.UD_TYP
::       _d - UD_DEF.UD_SCH
::       _e - UD_DEF.UD_DEF
::       _f - UD_POW.TAB
::       _g - UD_POW.REF_SQL
::       _h - rodzaj UD_POW (S,W,P)
::       [_i] - opcjonalny - dodanie tylko elementu drzewa (wymagany prawidlowy bufor tabeli UD_SKL)
::   WY: jesli sie udalo dodac to ref UD_DEF w przeciwnym wypadku null
::  OLD: \add_skl_pow/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_i')>0
|| UD_DEF.UD_SCH:=_d;
   UD_DEF.UD_SKL:=UD_SKL.ref;
   UD_DEF.UD_POZ:=null;
   UD_DEF.SYMBOL:=_a;
   UD_DEF.OPIS:=_b;
   UD_DEF.UD_DEF:=_e;
   {? UD_DEF.add(1)
   || UD_DEF.ref
   || null
   ?}
||
   UD_SKL.blank(1); UD_SKL.UD_TYP:=_c; UD_SKL.SYMBOL:=_a;
   UD_SKL.OPIS:=_b; UD_SKL.AKTYWNY:='T'; UD_SKL.LISTA:=skl_lis;
   {? UD_SKL.add(1)
   || UD_POW.blank(1);
      UD_POW.UD_TYP:=_c;
      UD_POW.TAB:=_f;
      UD_POW.UD_SKL:=UD_SKL.ref;
      UD_POW.REF_SQL:=_g;
      UD_POW.REF_INT:=BIT.sqlint(_g);
      UD_POW.SYMBOL:=_a;
      UD_POW.OPIS:=_b;
      UD_POW.R:=_h;
      UD_POW.add(1);
      UD_DEF.UD_SCH:=_d;
      UD_DEF.UD_SKL:=UD_SKL.ref;
      UD_DEF.UD_POZ:=null;
      UD_DEF.SYMBOL:=UD_SKL.SYMBOL;
      UD_DEF.OPIS:=UD_SKL.OPIS;
      UD_DEF.UD_DEF:=_e;
      {? UD_DEF.add(1)
      || UD_DEF.ref
      || null
      ?}
   || null
   ?}
?}


\bv_k_pnoty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Przed wyswieteniem pozycji not
::   WE: [_a] - czy ustawiać zmienne? 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_old:=UD_POM.WXMODEL;
UD_POM.WXMODEL:=K__NOTY.SKID_MBN;
K__PNOTY.prefix(K__NOTY.ref());
{? _old<>UD_POM.WXMODEL | var_press('_a')>0 & _a
|| UD_POM.K1:=UD_POM.K2:=UD_POM.K3:=UD_POM.K4:=UD_POM.K5:='';
   SKID_MBP.cntx_psh();
   SKID_MBP.index('LP'); SKID_MBP.prefix(UD_POM.WXMODEL);
   {? SKID_MBP.first()
   || {!
      |? ($('POMOC.K'+$SKID_MBP.LP+':=_a'))(SKID_MBP.NAZ);
         exec('ud_pom_wym_en','control',SKID_MBP.LP,1);
         SKID_MBP.next()
      !}
   ?};
   {! _i:=SKID_MBP.LP+1..5
   |! ($('POMOC.K'+$_i+':=_a'))('');
      exec('ud_pom_wym_en','control',_i,0)
   !};
   SKID_MBP.cntx_pop()
?};
K__PNOTY.fld_opt('WER','col_name="%1"'[POMOC.K1],K__PNOTY,'WYM1','SYMBOL');
K__PNOTY.fld_opt('WER','col_name="%1"'[POMOC.K2],K__PNOTY,'WYM2','SYMBOL');
K__PNOTY.fld_opt('WER','col_name="%1"'[POMOC.K3],K__PNOTY,'WYM3','SYMBOL');
K__PNOTY.fld_opt('WER','col_name="%1"'[POMOC.K4],K__PNOTY,'WYM4','SYMBOL');
K__PNOTY.fld_opt('WER','col_name="%1"'[POMOC.K5],K__PNOTY,'WYM5','SYMBOL');
{? K__NOTY.STAT='T' | K__NOTY.ZAR<>OPERATOR.USER().KOD
|| K__PNOTY.actions('WER','DPU:D',,1)
|| K__PNOTY.actions('WER',,,1)
?}


\ud_pom_wym_en
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawienie dostępności pola okna redagowania RED tabeli K__PNOTY
::   WE: _a - nr pola
::       _b - dostępne? 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
K__PNOTY.efld_opt('RED','enable='+$_b,UD_POM,'W'+$_a+'_NAZ');
K__PNOTY.efld_opt('RED','mark='+$_b,UD_POM,'W'+$_a+'_NAZ');
K__PNOTY.efld_opt('RED','enable='+$_b,UD_POM,'W'+$_a);
K__PNOTY.efld_opt('RED','enable='+$_b,UD_POM,'W'+$_a+'_OPIS');
~~


\init_k_noty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Ustawia zmienne przed przeglądaniem not
::----------------------------------------------------------------------------------------------------------------------
UNPAR.P11:='U'; UNPAR.P11_BV:=UNPAR.P11_AE:='';
UD_POM.W1_FLD:='K__PNOTY.WYM1';
UD_POM.W2_FLD:='K__PNOTY.WYM2';
UD_POM.W3_FLD:='K__PNOTY.WYM3';
UD_POM.W4_FLD:='K__PNOTY.WYM4';
UD_POM.W5_FLD:='K__PNOTY.WYM5';
UD_POM.W1_AE:='exec(\'ae_k_pnoty_wym1\',\'!ctr_pdm_dnot\')';
UNPAR.PRF1:=SSTALE.AR; UNPAR.PRF1_BV:='';
UNPAR.POKR:=null; UNPAR.POKR_BE:='';
UD_POM.MODEL:=null;
UD_POM.K_WERSJE:=null;
SKID_MBN.win_sel('WER');
~~


\user_has_pass
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Czy użytkownik ma ustawiony login i hasło dla controllingu
::   WE: [_a] - czy komunikowac? [1]-tak 0-nie
::  OLD: \user_has_pass/!ctr_rap_zzup.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=1 ?};
{? USERS.WINLOGIN<>'' & (USERS.WIN_PASS<>'' | USERS.CON_AD='T')
|| 1
|? _a
|| FUN.info('Nie ustawiono użytkownikowi uwierzytelnienia dla controlingu.'@);
   0
?}


\podzialy_log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Podziały dla dokumentów logistycznych
::   WE: _a - 'S' - sprzedaż
::            'Z' - zakup
::            'M' - magazyn
::----------------------------------------------------------------------------------------------------------------------
exec('set_var_podz','control');
SCH_XD.cntx_psh();
UD_POM.CNTX:=_a;
SCH_XD.win_sel('WER'); SCH_XD.win_edit('RED');
{? _a='M'
|| SCH_XD.use('scxd_'+(ND.name()+3));
   SCH_XD.index('ND'); SCH_XD.prefix(ND.ref())
|? _a='S' | _a='Z'
|| SCH_XD.use('scxd_'+(FAKS.name()+3));
   SCH_XD.index('FAKS'); SCH_XD.prefix(FAKS.ref());
   _act:=exec('faks_dolacz_act_uid','faktury_nag',FAKS.WHERE,FAKS.T().KOR,FAKS.T().HIS,FAKS.OPAK,FAKS.SYMF);
   _blok:=~exec('hasAction','users',_act);
   {? _blok | FAKS.STAT_REJ='A'
   || SCH_XD.actions(SCH_XD.win_sel('?'),'GDPU:GD',,1)
   || SCH_XD.actions(SCH_XD.win_sel('?'),,,1)
   ?}
?};

SCH_XD.select();
SCH_XD.cntx_pop(); UD_POM.CNTX:=''


\set_var_podz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawia formuły zmiennych
::----------------------------------------------------------------------------------------------------------------------
{! _lp:=1..5
|! exec('set_fml','#field',UD_POM,'NAZ_WYM'+$_lp,
   "_nr:=#(cur_afld()+1);
    fld(exec('dim_name','control',SCH_XD.SKID_MB,_nr))
   ")
!};
exec('set_fml','#field',UD_POM,'PBUD',
   "UD_POM.PBUD:=SCH_XD.PBUD().SYMBOL;~~
   ",
   "exec('be_dim','control',SCH_XD.SKID_MB,1)",
   "exec('f3_dim','control',SCH_XD.SKID_MB,1)",
   "  {? fld()='' || SCH_XD.PBUD:=null; return(1) ?};
      _ref:=exec('ae_dim','control',SCH_XD.SKID_MB,1);
      {? _ref
      || SCH_XD.PBUD:=_ref;
         fld(SCH_XD.PBUD().SYMBOL);
         SKIDXDUD.index('POZ'); SKIDXDUD.prefix(SCH_XD.PBUD);
         {? SKIDXDUD.first()
         || {? SKIDXDUD.WART_IL='W'
            || SCH_XD.WAL:={? SKIDXDUD.WSK_WAL='T'
                           || SCH_XD.WAL
                           || exec('wal_nar','dok_fks')
                           ?};
               SCH_XD.JM:=null
            || {? SCH_XD.JM=null || SCH_XD.JM:=SKIDXDUD.JM ?};
               SCH_XD.WAL:=null
            ?}
         ?};
         1
      ?}
   "
);
exec('set_fml','#field',UD_POM,'JORG',
   "UD_POM.JORG:=SCH_XD.JORG().SYMBOL; ~~",
   "exec('be_dim','control',SCH_XD.SKID_MB,2)",
   "exec('f3_dim','control',SCH_XD.SKID_MB,2)",
   "  {? fld()='' || SCH_XD.JORG:=null; return(1) ?};
      _ref:=exec('ae_dim','control',SCH_XD.SKID_MB,2);
      {? _ref
      || SCH_XD.JORG:=_ref;
         fld(SCH_XD.JORG().SYMBOL)
      ?}
   "
);
exec('set_fml','#field',UD_POM,'OKOSZ',
   "UD_POM.OKOSZ:=SCH_XD.OKOSZ().SYMBOL; ~~",
   "exec('be_dim','control',SCH_XD.SKID_MB,3)",
   "exec('f3_dim','control',SCH_XD.SKID_MB,3)",
   "  {? fld()='' || SCH_XD.OKOSZ:=null; return(1) ?};
      _ref:=exec('ae_dim','control',SCH_XD.SKID_MB,3);
      {? _ref
      || SCH_XD.OKOSZ:=_ref;
         fld(SCH_XD.OKOSZ().SYMBOL)
      ?}
   "
);
exec('set_fml','#field',UD_POM,'WYM4',
   "UD_POM.WYM4:=SCH_XD.WYM4().SYMBOL; ~~",
   "exec('be_dim','control',SCH_XD.SKID_MB,4)",
   "exec('f3_dim','control',SCH_XD.SKID_MB,4)",
   "  {? fld()='' || SCH_XD.WYM4:=null; return(1) ?};
      _ref:=exec('ae_dim','control',SCH_XD.SKID_MB,4);
      {? _ref
      || SCH_XD.WYM4:=_ref;
         fld(SCH_XD.WYM4().SYMBOL)
      ?}
   "
);
exec('set_fml','#field',UD_POM,'WYM5',
   "UD_POM.WYM5:=SCH_XD.WYM5().SYMBOL; ~~",
   "exec('be_dim','control',SCH_XD.SKID_MB,5)",
   "exec('f3_dim','control',SCH_XD.SKID_MB,5)",
   "  {? fld()='' || SCH_XD.WYM5:=null; return(1) ?};
      _ref:=exec('ae_dim','control',SCH_XD.SKID_MB,5);
      {? _ref
      || SCH_XD.WYM5:=_ref;
         fld(SCH_XD.WYM5().SYMBOL)
      ?}
   "
)


\be_schxd_mb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula przed redakcja pola SCH_XD.SKID_MB.
::  OLD: \be_schxd_mb/schematy.fml
::----------------------------------------------------------------------------------------------------------------------
UD_POM.SKID_MBN:=SCH_XD.SKID_MB;
1


\ae_schxd_mb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula po redakcja pola SCH_XD.SKID_MB. Formula czysci pola z podzialami
::        jezeli uzytkownik zmienil model dla kontrolingu
::    WY: 1 - prawidlowo zredagowano pole
::        0 - w p.p.
::  OLD: \ae_schxd_mb/schematy.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? cur_tab(1,1).SKID_MB=null
|| FUN.info('Nie wybrano modelu.'@); _zwrot:=0
|? fld()<>UD_POM.SKID_MBN
|| {? ~exec('defmodel','control',fld())
   || FUN.info('Nie zdefiniowano wymiarów dla wybranego modelu.'@);
      _zwrot:=0
   || UD_POM.JORG:=''; cur_tab(1,1).JORG:=null;
      UD_POM.OKOSZ:=''; cur_tab(1,1).OKOSZ:=null;
      UD_POM.PBUD:=''; cur_tab(1,1).PBUD:=null;
      UD_POM.WYM4:=''; cur_tab(1,1).WYM4:=null;
      UD_POM.WYM5:=''; cur_tab(1,1).WYM5:=null
   ?}
?};
UD_POM.SKID_MB:=SCH_XD.SKID_MB;
win_disp(); _zwrot


\sch_wart_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2006]
:: OPIS: Po redakcji SCH_XD.WART
::  OLD: \ae_schxd_mb/schematy.fml
::----------------------------------------------------------------------------------------------------------------------
{? SCH_XD.PBUD=null
|| FUN.info('Nie wybrano pozycji budżetowej.'@)
|| SKIDXDUD.index('POZ'); SKIDXDUD.prefix(SCH_XD.PBUD);
   {? SKIDXDUD.first()
   || {? SKIDXDUD.WART_IL='W' || fld(fld$2)
      |? SKIDXDUD.WART_IL='I' || fld(fld$SKIDXDUD.PREC)
      ?}
   ?}
?};
1


\sch_wartw_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2006]
:: OPIS: Przed redakcja SCH_XD.WARTW
::  OLD: \sch_wartw_pr/schematy.fml
::--------------------------------------------------------------------------------------------------
SKIDXDUD.index('POZ');
SKIDXDUD.prefix(SCH_XD.PBUD);
{? SKIDXDUD.first()
|| SKIDXDUD.WART_IL='W' & SKIDXDUD.WSK_WAL='T'
?}


\sch_wartw_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2006]
:: OPIS: Po redakcji SCH_XD.WARTW
::  OLD: \sch_wartw_po/schematy.fml
::----------------------------------------------------------------------------------------------------------------------
fld(fld$2);
{? SCH_XD.WART=0 || SCH_XD.WART:=(SCH_XD.WARTW*SCH_XD.KURS)$2 ?}; 1


\sch_krs_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2006]
:: OPIS: Przed redakcja SCH_XD.KURS
::  OLD: \sch_krs_pr/schematy.fml
::----------------------------------------------------------------------------------------------------------------------
exec('sch_wartw_pr','control')


\sch_krs_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2006]
:: OPIS: Po redakcji SCH_XD.KURS
::  OLD: \sch_krs_po/schematy.fml
::----------------------------------------------------------------------------------------------------------------------
fld(fld$6);
{? SCH_XD.WART=0 || SCH_XD.WART:=(SCH_XD.WARTW*SCH_XD.KURS)$2 ?}; 1


\sch_rec_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2008]
:: OPIS: rekord po okna WER tabeli SCH_XD
::  OLD: \sch_rec_po/schematy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? SCH_XD.SKID_MB=null
|| FUN.emsg('Nie wybrano modelu controllingowego.'@); _wyn:='SKID_MB'
|| SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(SCH_XD.SKID_MB);
   {? SKID_MBP.first() & SCH_XD.PBUD=null
   || _wyn:='PBUD';
      FUN.emsg('Niewypełnione pole %1.'@[SKID_MBP.NAZ])
   ?};
   SKID_MBP.cntx_pop()
?};
{? _wyn='' & SCH_XD.WART=0 || FUN.emsg('Niewypełnione pole wartość.'@); _wyn:='WART' ?};
_wyn


\add_sch_xd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Dołączanie rekordu w SCH_XD
::----------------------------------------------------------------------------------------------------------------------
SCH_XD.blank();
{? UD_POM.CNTX='M'
|| SCH_XD.ND:=ND.ref()
|| SCH_XD.FAKS:=FAKS.ref()
?};
{? SCH_XD.edit("exec('sch_rec_po','control')") || SCH_XD.add() ?};
1


\put_sch_xd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Poprawianie rekordu w SCH_XD
::----------------------------------------------------------------------------------------------------------------------
{? SCH_XD.edit("exec('sch_rec_po','control')") || SCH_XD.put() ?};
1


\del_sch_xd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Usuwanie rekordu w SCH_XD
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć podział controllingowy?'@)
|| SCH_XD.del()
?}


\sch_xd_gen_aut
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Automatyczne generowanie podziałów dla dokumentu
::----------------------------------------------------------------------------------------------------------------------
SCH_XD.cntx_psh();
{? UD_POM.CNTX='M'
|| SCH_XD.index('ND_T'); SCH_XD.prefix(ND.ref(),'T')
|? UD_POM.CNTX='S' | UD_POM.CNTX='Z'
|| SCH_XD.index('FAKS_T'); SCH_XD.prefix(FAKS.ref(),'T')
?};
_jest:=SCH_XD.first();
{? (~_jest &
     FUN.ask('Utworzyć automatyczne podziały dla dokumentu?'@)
   ) |
   (_jest &
    FUN.ask('Uruchomienie funkcji spowoduje skasowanie wcześniej wygenerowanych podziałów automatycznych. Kontynuować?'@)
   )
|| {? _jest
   || {! |? SCH_XD.del() !}
   ?};
   CON_DEF.cntx_psh();
   {? UD_POM.CNTX='S' | UD_POM.CNTX='Z'
   || FAP.cntx_psh(); FAP.use('fakpo'+(FAKS.name()+3)); FAP.index('FAP'); FAP.prefix(FAKS.ref());
      {? FAP.first()
      || {! |?
            CON_DEF.index('CON_DEF1'); CON_DEF.prefix(FAKS.T,0);
            exec('sch_xd_gen_aut1','control');
            FAP.next()
         !}
      ?};
      FAP.cntx_pop()
   || DK.cntx_psh(); DK.use('dokma'+(ND.name()+3)); DK.index('DOKMAG'); DK.prefix(ND.ref());
      {? DK.first()
      || {! |?
            CON_DEF.index('CON_DEF2'); CON_DEF.prefix(ND.TYP,0);
            exec('sch_xd_gen_aut1','control');
            DK.next()
         !}
      ?};
      DK.cntx_pop()
   ?};
   CON_DEF.cntx_pop()
?};
SCH_XD.cntx_pop()


\sch_xd_gen_aut1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Automatyczne generowanie podziałów dla dokumentu - wewnętrzna
::   WY: 1/0 - znaleziono definicje podziałów
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
{? CON_DEF.first()
|| _zwrot:=1;
   {! |?
      {? CON_DEF.FORMPOCZ<>'' || ($CON_DEF.FORMPOCZ)() ?};
      exec('add_condef','control');
      CON_DEF.next()
   !}
?};
_zwrot


\add_condef
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Tworzenie podzialów logistycznych dla CON_DEF
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
SCH_XD.blank();
{? UD_POM.CNTX='M'
|| SCH_XD.ND:=ND.ref(); SCH_XD.DK:=DK.ref()
|| SCH_XD.FAKS:=FAKS.ref(); SCH_XD.FAP:=FAP.ref()
?};
SCH_XD.SKID_MB:=CON_DEF.SKID_MB;
{? CON_DEF.SKID_MB<>null
|| CON_DEF.SKID_MB();
   SKID_MBP.cntx_psh();
   SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
   _ile_wym:=SKID_MBP.size();
   SKID_MBP.cntx_pop();
   _mu:={? UD_POM.CNTX='M' || DK.M || FAP.M ?};
   {? _ile_wym=0
   || _ok:=0
   || _wym1:={? CON_DEF.ZN_PBUD='T'
             || CON_DEF.PBUD_S
             |? CON_DEF.ZN_PBUD='N'
             || {? CON_DEF.PBUD_F<>null || ($CON_DEF.PBUD_F().FORMULA)() || null ?}
             |? CON_DEF.ZN_PBUD='M' & _mu
             || exec('szuk_con_def_mu','control',_mu,CON_DEF.SKID_MB,1)
             || null
             ?};
      SCH_XD.PBUD:=exec('con_def_fml','control',_wym1,1);
      {? _ile_wym>1
      || _wym2:={? CON_DEF.ZN_JORG='T'
                || CON_DEF.JORG_S
                |? CON_DEF.ZN_JORG='N'
                || {? CON_DEF.JORG_F<>null || ($CON_DEF.JORG_F().FORMULA)() || null ?}
                |? CON_DEF.ZN_JORG='M' & _mu
                || exec('szuk_con_def_mu','control',_mu,CON_DEF.SKID_MB,2)
                || null
                ?};
         SCH_XD.JORG:=exec('con_def_fml','control',_wym2,2)
      ?};
      {? _ile_wym>2
      || _wym3:={? CON_DEF.ZN_OKOSZ='T'
                || CON_DEF.OKOSZ_S
                |? CON_DEF.ZN_OKOSZ='N'
                || {? CON_DEF.OKOSZ_F<>null || ($CON_DEF.OKOSZ_F().FORMULA)() || null ?}
                |? CON_DEF.ZN_OKOSZ='M' & _mu
                || exec('szuk_con_def_mu','control',_mu,CON_DEF.SKID_MB,3)
                || null
                ?};
         SCH_XD.OKOSZ:=exec('con_def_fml','control',_wym3,3)
      ?};
      {? _ile_wym>3
      || _wym4:={? CON_DEF.ZN_WYM4='T'
                || CON_DEF.WYM4_S
                |? CON_DEF.ZN_WYM4='N'
                || {? CON_DEF.WYM4_F<>null || ($CON_DEF.WYM4_F().FORMULA)() || null ?}
                |? CON_DEF.ZN_WYM4='M' & _mu
                || exec('szuk_con_def_mu','control',_mu,CON_DEF.SKID_MB,4)
                || null
                ?};
         SCH_XD.WYM4:=exec('con_def_fml','control',_wym4,4)
      ?};
      {? _ile_wym>4
      || _wym5:={? CON_DEF.ZN_WYM5='T'
                || CON_DEF.WYM5_S
                |? CON_DEF.ZN_WYM5='N'
                || {? CON_DEF.WYM5_F<>null || ($CON_DEF.WYM5_F().FORMULA)() || null ?}
                |? CON_DEF.ZN_WYM5='M' & _mu
                || exec('szuk_con_def_mu','control',_mu,CON_DEF.SKID_MB,5)
                || null
                ?};
         SCH_XD.WYM5:=exec('con_def_fml','control',_wym5,5)
      ?}
   ?};
   {? ~exec('spr_wym','control',CON_DEF.SKID_MB,5,_ile_wym) || _ok:=0 ?};
   {? CON_DEF.KW_F=null || _ok:=0 ?}
|| _ok:=0
?};
{? _ok
|| SKIDXDUD.cntx_psh();
   SKIDXDUD.index('POZ'); SKIDXDUD.prefix(SCH_XD.PBUD);
   SCH_XD.JM:={? SKIDXDUD.first() || SKIDXDUD.JM || null ?};
   SKIDXDUD.cntx_pop();
   SCH_XD.WAL:=exec('wal_nar','dok_fks');
   SCH_XD.AUT_GEN:='T';
   _prec:=exec('zaokr','control',SCH_XD.PBUD);
   _wart:=(($CON_DEF.KW_F().FORMULA)()*CON_DEF.KW_P/100)$_prec;
   SCH_XD.WART:=_wart;
   SCH_XD.add()
?}


\con_def_fml
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Zwraca UD_SKL na podstawie formuły
::   WE: _a - wynik formuły
::       _b - nr wymiaru
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=null;
{? type_of(_a)=type_of(null)
|| _zwrot:=_a
|? type_of(_a)=type_of('')
|| SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(CON_DEF.SKID_MB,_b);
   {? SKID_MBP.first()
   || UD_SCH.cntx_psh();
      UD_SKL.cntx_psh(); UD_SKL.index('SYMBOL'); UD_SKL.prefix(SKID_MBP.UD_SCH().UD_TYP,_a,);
      {? UD_SKL.first() || _zwrot:=UD_SKL.ref() ?};
      UD_SCH.cntx_pop(); UD_SKL.cntx_pop()
   ?};
   SKID_MBP.cntx_pop()
?};
_zwrot


\szuk_con_def_mu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Ustala element schematu (UD_SKL) dla definicji dla materiału lub usługi
::   WE: _a - ref materiału lub usługi (M.ref())
::       _b - ref modelu controllingowego (SKID_MBN.ref())
::       _c - numer wymiaru
::   WY: UD_SKL.ref()
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=null;
{? _a & _b
|| CON_DEF.cntx_psh(); CON_DEF.index('CON_DEF7'); CON_DEF.prefix(0,_a,_b);
   {? CON_DEF.first()
   || _zwrot:={? _c=1
              || {? CON_DEF.ZN_PBUD='T'
                 || CON_DEF.PBUD_S
                 |? CON_DEF.ZN_PBUD='N'
                 || {? CON_DEF.PBUD_F<>null || ($CON_DEF.PBUD_F().FORMULA)() || null ?}
                 || null
                 ?}
              |? _c=2
              || {? CON_DEF.ZN_JORG='T'
                 || CON_DEF.JORG_S
                 |? CON_DEF.ZN_JORG='N'
                 || {? CON_DEF.JORG_F<>null || ($CON_DEF.JORG_F().FORMULA)() || null ?}
                 || null
                 ?}
              |? _c=3
              || {? CON_DEF.ZN_OKOSZ='T'
                 || CON_DEF.OKOSZ_S
                 |? CON_DEF.ZN_OKOSZ='N'
                 || {? CON_DEF.OKOSZ_F<>null || ($CON_DEF.OKOSZ_F().FORMULA)() || null ?}
                 || null
                 ?}
              |? _c=4
              || {? CON_DEF.ZN_WYM4='T'
                 || CON_DEF.WYM4_S
                 |? CON_DEF.ZN_WYM4='N'
                 || {? CON_DEF.WYM4_F<>null || ($CON_DEF.WYM4_F().FORMULA)() || null ?}
                 || null
                 ?}
              || {? CON_DEF.ZN_WYM5='T'
                 || CON_DEF.WYM5_S
                 |? CON_DEF.ZN_WYM5='N'
                 || {? CON_DEF.WYM5_F<>null || ($CON_DEF.WYM5_F().FORMULA)() || null ?}
                 || null
                 ?}
              ?}
   ?};
   CON_DEF.cntx_pop()
?};
_zwrot


\spr_wym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdza wypelnienie wymiarow w tabeli z podziałami. Zwraca 0 jesli jeden z wymiarow jest pusty wpp 1.
::   WE: _a - ref modelu
::       _b - 1 - SKIDXD
::            2 - CON_KK
::            3 - PROJZGWP
::            4 - KTRWP
::            5 - SCH_XD
::       _c - liczba wymiarow (opcja)
::  OLD: \spr_wym/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=2
|| _c:=0;
   SKID_MBN.cntx_psh(); SKID_MBN.prefix();
   {? SKID_MBN.seek(_a)
   || SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
      _c:=SKID_MBP.size();
      SKID_MBP.cntx_pop()
   ?};
   SKID_MBN.cntx_pop()
?};
_zwrot:=0;
{? _c>0
|| _zwrot:=1;
   {? _b=1
   || UD_POM.SKL01:=SKIDXD.PBUD;
      UD_POM.SKL02:=SKIDXD.JORG;
      UD_POM.SKL03:=SKIDXD.OKOSZ;
      UD_POM.SKL04:=SKIDXD.WYM4;
      UD_POM.SKL05:=SKIDXD.WYM5
   |? _b=2
   || UD_POM.SKL01:=CON_KK.POZ_BUD;
      UD_POM.SKL02:=CON_KK.PODZORG;
      UD_POM.SKL03:=CON_KK.OB_KOSZ;
      UD_POM.SKL04:=CON_KK.WYM4;
      UD_POM.SKL05:=CON_KK.WYM5;
      UD_POM.SKL06:=CON_KK.WYM6
   |? _b=3
   || UD_POM.SKL01:=PROJZGWP.POZYCJA1;
      UD_POM.SKL02:=PROJZGWP.POZYCJA2;
      UD_POM.SKL03:=PROJZGWP.POZYCJA3;
      UD_POM.SKL04:=PROJZGWP.POZYCJA4;
      UD_POM.SKL05:=PROJZGWP.POZYCJA5
   |? _b=4
   || UD_POM.SKL01:=KTRWP.PBUD;
      UD_POM.SKL02:=KTRWP.JORG;
      UD_POM.SKL03:=KTRWP.OKOSZ;
      UD_POM.SKL04:=KTRWP.WYM4;
      UD_POM.SKL05:=KTRWP.WYM5
   || UD_POM.SKL01:=SCH_XD.PBUD;
      UD_POM.SKL02:=SCH_XD.JORG;
      UD_POM.SKL03:=SCH_XD.OKOSZ;
      UD_POM.SKL04:=SCH_XD.WYM4;
      UD_POM.SKL05:=SCH_XD.WYM5
   ?};
   {? UD_POM.SKL01=null
   || exec('msg_null_skl','control',1,_b=1,_a); _zwrot:=0
   || UD_POM.SKL01();
      {? exec('szuk_wym','control',_a,1)
      || exec('spr_akt','control',UD_POM.SKL01,UD_SCH.ref())
      ?}
   ?};
   {? _c>1
   || {? UD_POM.SKL02=null
      || exec('msg_null_skl','control',2,_b=1,_a); _zwrot:=0
      || UD_POM.SKL02();
         {? exec('szuk_wym','control',_a,2)
         || exec('spr_akt','control',UD_POM.SKL02,UD_SCH.ref())
         ?}
      ?}
   ?};
   {? _c>2
   || {? UD_POM.SKL03=null
      || exec('msg_null_skl','control',3,_b=1,_a); _zwrot:=0
      || UD_POM.SKL03();
         {? exec('szuk_wym','control',_a,3)
         || exec('spr_akt','control',UD_POM.SKL03,UD_SCH.ref())
         ?}
      ?}
   ?};
   {? _c>3
   || {? UD_POM.SKL04=null
      || exec('msg_null_skl','control',4,_b=1,_a); _zwrot:=0
      || UD_POM.SKL04();
         {? exec('szuk_wym','control',_a,4)
         || exec('spr_akt','control',UD_POM.SKL04,UD_SCH.ref())
         ?}
      ?}
   ?};
   {? _c>4
   || {? UD_POM.SKL05=null
      || exec('msg_null_skl','control',5,_b=1,_a); _zwrot:=0
      || UD_POM.SKL05();
         {? exec('szuk_wym','control',_a,5)
         || exec('spr_akt','control',UD_POM.SKL05,UD_SCH.ref())
         ?}
      ?}
   ?};
   {? _b=2 & _c>5
   || {? UD_POM.SKL06=null
      || exec('msg_null_skl','control',6,0,_a); _zwrot:=0
      || UD_POM.SKL06();
         {? exec('szuk_wym','control',_a,6)
         || exec('spr_akt','control',UD_POM.SKL06,UD_SCH.ref())
         ?}
      ?}
   ?}
?};
_zwrot


\spr_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzanie czy element przekazany parametrem jest aktywny, wykorzystywany w ewidencji
::       i nalezy do schematu przekazanego parametrem
::   WE: _a - ref badanego UD_SKL
::       _b - ref schematu UD_SCH
::   WY: 1/0 - jesli nie ma bledow 1, wpw 0
::  OLD: \spr_akt/skid_ktr.fml
::  OLD: \spr_akt/!ctr_pdm_patw.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
UD_SKL.cntx_psh(); UD_SKL.prefix();
{? UD_SKL.seek(_a)
|| UD_SCH.cntx_psh(); UD_SCH.prefix();
   {? UD_SCH.seek(_b)
   || {? UD_SKL.AKTYWNY<>'T'
      || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Element schematu '+UD_SCH.SYMBOL+' o symbolu '+UD_SKL.SYMBOL+' ('+UD_SKL.OPIS+') nie jest aktywny.',0,null,null,null,'');
         _zwrot:=0
      ?};
      {? UD_SKL.LISTA<>'T'
      || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Element schematu '+UD_SCH.SYMBOL+' o symbolu '+UD_SKL.SYMBOL+' ('+UD_SKL.OPIS+') nie jest wykorzystywany w ewidencji.',0,null,null,null,'');
         _zwrot:=0
      ?};
      UD_DEF.cntx_psh();
      UD_DEF.index('PODTEC'); UD_DEF.prefix(_b,_a);
      {? ~UD_DEF.first()
      || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Element o symbolu '+UD_SKL.SYMBOL+' ('+UD_SKL.OPIS+') nie jest wykorzystywany w schemacie '+UD_SCH.SYMBOL+'.',0,null,null,null,'');
         _zwrot:=0
      ?};
      {? _zwrot & var_pres('MAPA_IMP')>0 & var_pres('nr_wym')>0
      || ($('MAPA_IMP.OPIS'+form(nr_wym,-2)+':=UD_SKL.OPIS'))();
         ($('MAPA_IMP.WYM'+form(nr_wym,-2)+'REF:=#UD_SKL.ref()'))()
      ?};
      UD_DEF.cntx_pop()
   ?};
   UD_SCH.cntx_pop()
|| _zwrot:=0
?};
UD_SKL.cntx_pop();
_zwrot


\msg_null_skl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Komunikat o niewypelnionym wymiarze
::   WE: _a - numer wymiaru
::       _b - 1/0 - operacja dla dokumentow ksiegowych
::       _c - ref modelu
::  OLD: \msg_null_skl/skid_ktr.fml
::  OLD: \msg_null/!ctr_pdm_patw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _b
|| OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
   exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nieudane dodanie podziału - niewypełniony wymiar numer '+$_a+' dokument '+DOK.NK+' ('+
        $SSTALE.AO().NR+'/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',0,SSTALE.AR,SSTALE.AO,_c,$DOK.ref());
   OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop()
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nieudane dodanie podziału - niewypełniony wymiar numer '+$_a,0,null,null,_c,'')
?}


\szuk_wym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Ustawia w buforze schemat i jego typ. Numer schematu przekazany parametrem.
::   WE: _a - ref modelu
::       _b - numer schematu
::   WY: 1/0 - czy udalo sie ustalic schemat (UD_SCH)
::  OLD: \szuk_wym/skid_ktr.fml
::  OLD: \szuk_wym/!ctr_pdm_patw.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
SKID_MBN.index('KOD'); SKID_MBN.prefix();
{? SKID_MBN.seek(_a)
|| SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref(),_b);
   {? SKID_MBP.first() || _zwrot:=1; SKID_MBP.UD_SCH().UD_TYP() ?}
?};
_zwrot


\skid_mbn_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Blokowanie modelu
::----------------------------------------------------------------------------------------------------------------------
{? SKID_MBN.r_lock(1,1,1)
|| 1
|| FUN.info('Model jest obsługiwany przez innego użytkownika.'@)
?}


\bm_skid_mbn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Przed popraw dla tabeli SKID_MBN
::----------------------------------------------------------------------------------------------------------------------
{? exec('skid_mbn_lock','control')
|| {? SKID_MBN.edit("exec('ar_skid_mbn','control')")
   || SKID_MBN.put()
   ?};
   SKID_MBN.r_unlock()
?}


\ar_skid_mbn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Rekord po okna WER_C tabeli SKID_MBN
::  OLD: \ar_skid_mbn/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
_rr:=exec('chk_skid_mbn','control',(-menu_txt)='popraw');
{? _rr='' & (__SMBN_D<>K_INSMBN.CZY_DOK | __SMBN_L<>K_INSMBN.CZY_LIST) & K_INSMBN.CZY_INST='T'
|| {? FUN.ask('Zmiana pola \'Czy dokumenty\' lub \'Czy lista płac\'\nwymaga ponownej instalacji kostki.\n\nKontynuować?'@)
   || K_INSMBN.CZY_INST:='N'
   || _rr:='CZY_DOK'
   ?}
?};
_rr


\chk_skid_mbn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula sprawdza poprawnosc wprowadzonej naglowka modelu
::       dla controllingu
::   WE: _a - typ operacji: 1-popraw 0-dołącz
::   WY: '' - jezeli prawidlowo wypelniono naglowek modelu
::       w.p.p zwraca akronim pola ktory blednie zostal wypelniony
::  OLD: \chk_skid_mbn/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=-menu_txt()<>'dołącz' ?};
_rr:=__CHK.record(SKID_MBN,,'KOD','NAZ');
{? _rr='' & var_press('__MBNSPR')>0
|| _rr:=__CHK.record3(SKID_MBN,'W_SCH','Struktura grupy')
?};
_kod:=SKID_MBN.KOD;
{? _rr=''
|| {? '0123456789'*(1+_kod)
   || FUN.info('Kod modelu powinien zaczynać się od litery.'@);
      _rr:='KOD'
   || _ok:='qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM0123456789_';
      _l:=+_kod;
      {! _i:=1.._l
      |? _rr=''
      |! _z:=(_i+_kod)+1;
         {? _ok*_z=0
         || _rr:='KOD'
         ?}
      !};
      {? _rr<>''
      || FUN.info('Kod modelu zawiera zabroniony znak: \'%1\'.\nDozwolone są znaki alfanumeryczne.'@[_z])
      ?}
   ?}
?};
{? _rr=''
|| _ok:=1;
   _ref:={? _a || SKID_MBN.ref || null ?};
   SKID_MBN.cntx_psh();
   SKID_MBN.index('KOD'); SKID_MBN.prefix(_kod);
   {? SKID_MBN.first()
   || {! |? {? SKID_MBN.ref()<>_ref & SKID_MBN.KOD=_kod || _ok:=0 || 1 ?} & SKID_MBN.next !}
   ?};
   SKID_MBN.cntx_pop();
   {? ~_ok
   || FUN.info('Występuje już model o podanym kodzie.'@);
      _rr:='KOD'
   ?}
?};
_rr


\war_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Pokazywanie wartosci w nastepnych lub poprzednich okresach
::   WE: _a - (1/2) - nastepne/poprzednie
::  OLD: \war_okr/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1 || nr_7+=1 || nr_7-=1 ?};
exec('tab_war_sel','control');
1


\prac_wakat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2011]
:: OPIS: Przyporzadkowanie nowozatrudnionego pracownika do zdefiniowanego wakatu w systemie controlling
::  OLD: \prac_wakat/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('wakat')>100 || &wakat ?};
wakat:=sql('select UD_POW.REFERENCE POW, UD_SKL.REFERENCE SKL, UD_SKL.SYMBOL SYMBOL, UD_SKL.OPIS OPIS, UD_POW.OPIS, UD_POW.REF_SQL STN_SQL
   from UD_POW join UD_SKL
   where UD_POW.R =\'W\' and UD_POW.TAB=\'STN\'');
{? wakat.first
|| UD_POW.cntx_psh; UD_SKL.cntx_psh; UD_DEF.cntx_psh; UD_SCH.cntx_psh;
   _okienko:=wakat.mk_sel('Utworzone wakaty'@,'N',0,'prac_str_con_sw',,,20);
   wakat.win_fld(_okienko,,'SYMBOL',,,20,,1,'SYMBOL');
   wakat.win_fld(_okienko,,'OPIS',,,50,,1,'OPIS');
   wakat.win_act(_okienko,,'Formuła','&Wybierz'@@,,,"sel_exit",,1);
   wakat.win_sel(_okienko);
   {? wakat.select &
      FUN.ask(
         'Wybrany wakat zostanie zastąpiony przez dane związane z pracownikiem.\n'
         'Czy zastąpić: %1 danymi pracownika: %2 %3?'@[wakat.OPIS,tab.N,tab.I]
      )
   || _sym:={? tab.F_ZATR='P' || '' || tab.F_ZATR+'_' ?}+'IP_'+REF.FIRMA().SYMBOL+(('00000000000'+$tab.IP)+8);
      UD_POW.clear; UD_SKL.clear;
      UD_SCH.index('TECH'); UD_SCH.prefix;
      UD_DEF.index('PODTEC'); UD_DEF.prefix;
      {? UD_POW.seek(BIT.sqlint(wakat.POW),)
      || UD_POW.R:='w'; UD_POW.put();
         UD_POW.TAB:='P';
         UD_POW.R:='P';
         UD_POW.REF_SQL:=tab.P_REF;
         UD_POW.REF_INT:=BIT.sqlint(tab.P_REF);
         UD_POW.SYMBOL:=_sym;
         UD_POW.OPIS:=tab.N+' '+tab.I+' (na wakat: '+wakat.SYMBOL+')';
         {? UD_POW.add(1)
         || UD_POW.index('OPIS');
            UD_POW.prefix(UD_TYP.ref);
            {? UD_SKL.seek(#UD_POW.UD_SKL,)
            || UD_SKL.SYMBOL:=_sym;
               UD_SKL.OPIS:=tab.N+' '+tab.I+' (na wakat: '+wakat.SYMBOL+')';
               {? UD_SKL.put(1)
               || tab.prefix; tab.NEW:=0; tab.put; tab.prefix(1); tab.first;
                  {? UD_SCH.find_key('STANPRAC','STR_PRAC','STR_PRAC')
                  || {? UD_POW.find_key('RAZEM PRACOWNICY','RAZEM PRACOWNICY') & UD_DEF.find_key(UD_SCH.ref,UD_POW.UD_SKL)
                     || _ref_nad:=#UD_DEF.ref
                     || _ref_nad:=0
                     ?};
                     {? UD_DEF.find_key(UD_SCH.ref,UD_SKL.ref)
                     || UD_DEF.SYMBOL:=UD_SKL.SYMBOL;
                        UD_DEF.OPIS:=UD_SKL.OPIS;
                        UD_DEF.UD_DEF:=_ref_nad;
                        UD_DEF.put(1)
                     ?}
                  ?}
               ?}
            ?}
         ?}
      ?}
   ?};
   UD_POW.cntx_pop; UD_SKL.cntx_pop; UD_DEF.cntx_pop; UD_SCH.cntx_pop
|| FUN.emsg('Nie znaleziono wolnego wakatu.'@)
?};
&wakat


\bo_k_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed obsluga dla zakladek tabeli K__WAR
::   WE: _a - 1 - dokumenty
::            2 - listy plac
::            5 - noty
::  OLD: \bo_k_war/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| K__WAR.win_edit('RED'); K__WAR.win_patt('RED')
|| K__WAR.win_edit(); K__WAR.win_patt()
?};
zakl_war:=_a;
exec('k_war_zakr','control');
1


\k_war_zakr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Ustawianie dziedziny tabeli K__WAR
::  OLD: \k_war_zakr/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
K__WAR.hdr_sel();
K__WAR.hdr_sel(' dla okresu: %1 %2'@[UD_POM.OKR_ZAP().NAZ,K__NAG.ROK_F().NAZ]);
K__POZ.use('yb'+exec('maska','control'));
K__WAR.use('yx'+exec('maska','control'));
K__WAR.index({? zakl_war<>2 || 'DISP' || 'DISPPRAC' ?});
K__WAR.prefix(zakl_war,UD_POM.OKR_ZAP,ps[1],ps[2],ps[3],ps[4],ps[5],ps[6],ps[7],ps[8],ps[9],ps[10],ps[11],ps[12],ps[13],ps[14],ps[15])


\zap_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Zapisy, ktore skladaja sie na poszczegolne sumy
::  OLD: \zap_mod/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
echo(); zakl_war:=1;
ROK_F.cntx_psh(); OKRO_F.cntx_psh();
ps:=obj_new(15);
UD_SKL.cntx_psh(); UD_SKL.prefix();
{! _i:=1..15
|! ($('ps['+$_i+']:={? TAB_WAR.WYMREF'+form(_i,-2)+' & UD_SKL.seek(TAB_WAR.WYMREF'+form(_i,-2)+',UD_SKL.name()) || UD_SKL.ref() || null ?}'))();
   _str:='UD_POM.SKL'+form(_i,-2)+':=ps['+$_i+']'; ($_str)()
!};
_rok:=_rok:=UD_POM.OKR_ZAP().ROK;
_next:=_prev:=1;
OKRO_F.cntx_psh();
OKRO_F.index('ROK'); OKRO_F.prefix(_rok);
{? OKRO_F.seek(UD_POM.OKR_ZAP) & (~OKRO_F.next())
|| _next:=0
|? OKRO_F.seek(UD_POM.OKR_ZAP) & (~OKRO_F.prev())
|| _prev:=0
?};
_ukr:='';
OKRO_F.cntx_pop();
{? ~_next
|| _ukr:='Z(N)'
?};
{? ~_prev
|| _ukr:='Z(P)'
?};

{? TAB_WAR.RODZAJ=5
|| K__WAR.win_sel('WER_N_W');
   exec('bo_k_war','control',5);
   K__WAR.actions_grayed(K__WAR.win_sel('?'),_ukr+':'+_ukr);
   K__WAR.select()
|| _okn_grp:=K__WAR.grp_make('Zapisy'@,,'tab_k__war');
   {? K__NAG.SKID_MB().TYP<>'P'
   || K__WAR.grp_sel(_okn_grp,,'WER_W','Dokumenty'@,,,,,"exec('bo_k_war','control',1)",,,,'maximized')
   || K__WAR.grp_sel(_okn_grp,,'WER_P_W','Listy płac'@,,,,,"exec('bo_k_war','control',2)",,,,'maximized')
   ?};
   exec('bo_k_war','control',{? K__NAG.SKID_MB().TYP='O' || 1 || 2 ?});
   K__WAR.win_sel(_okn_grp);
   K__WAR.actions_grayed('WER_W',_ukr+':'+_ukr);
   K__WAR.actions_grayed('WER_P_W',_ukr+':'+_ukr);
   K__WAR.select()
?};

UD_SKL.cntx_pop(); ROK_F.cntx_pop(); OKRO_F.cntx_pop();
VAR_DEL.delete('ps','zakl_war')


\podzktrl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [2006]
:: OPIS: Podzialy dla controllingu
::   WE: _a (opcjonalnie) - (1/0) - czy blokowac dokument
::       [_b] - wyróżniki usuwanych akcji
::  OLD: \podzktrl/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('hide_podz_prac','control')
|| FUN.info('Przeglądanie podziałów kadrowo-płacowych\ndla controllingu jest wyłączone.'@);
   return(0)
?};
{? var_pres('_a')<=0 || _a:=0 ?};
{? var_pres('_b')<=0 || _b:='' ?};
{? ~_a | (_a & DOK.r_lock(1,1))
|| echo();
   SKID_MBN.win_dict('SLO');
   VPOZ.cntx_psh(); VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
   POZ.cntx_psh(); POZ.index('DOK'); POZ.prefix(DOK.ref()); POZ.first();
   KONTO.K1_BE:=''; KONTO.K1_AE:=''; KONTO.K1_RODZ:=2; KONTO.K1_WYM:=KONTO.K1_SYNT:=0;
   SKID.SKXDRAZE:=SKID.SKXDPOZO:=PAR_WYDR.RPAR3:=PAR_WYDR.RPAR4:=0;
   _w:=DOK.DOK_REJ().SLO().KOD;
   SKIDXD.index('DOKDSP'); SKIDXD.prefix(DOK.ref());
   {? SKIDXD.first()
   || {! |?
         {? (SKIDXDUD.cntx_psh();
             SKIDXDUD.index('POZ'); SKIDXDUD.prefix(SKIDXD.PBUD);
             _wart:=(SKIDXDUD.first() & SKIDXDUD.WART_IL='W');
             SKIDXDUD.cntx_pop(); _wart)
         || SKID.SKXDRAZE+=SKIDXD.WART
         ?}; SKIDXD.next()
      !}
   ?};
   {? _w<>'VAT' & _w<>'SAD'
   || PAR_WYDR.RPAR3:=SKID.SKXDRAZE
   |? VPOZ.first()
   || {!
      |? _vgr:=VPOZ.GRVAT().KOD;
         {? -_vgr='zinwnpod' | -_vgr='zpoznpal' | -_vgr='zpoznpod' | -_vgr='zakupnpr'
         || PAR_WYDR.RPAR3+=VPOZ.BRUTTO
         || PAR_WYDR.RPAR3+=VPOZ.NETTO;
            {? exec('gr_pod_typ','dok_fks',_vgr)=1
            || PAR_WYDR.RPAR3+=VPOZ.VATKOSZT
            ?}
         ?};
         VPOZ.next()
      !}
   ?};
   SKID.SKXDPOZO:=PAR_WYDR.RPAR3-SKID.SKXDRAZE;
   SKIDXD.win_edit('RED');
   exec('set_var','control');
   {? var_pres('be_ob')<=0 & var_pres('aut_ktrl')<=0
   || SKIDXD.win_sel('WER'+{? _w='VAT' | _w='SAD' || 'V' || '' ?});
      SKIDXD.actions('WER');
      SKIDXD.actions('WERV');
      {? DOK.WSK_XD<>'T'
      || {? _b='' || SKIDXD.select() || SKIDXD.select(,,,_b) ?}
      || SKIDXD.select(,,,_b+'duApR:dr'+_b)
      ?}
   ?};
   VPOZ.cntx_pop();
   POZ.cntx_pop();
   {? _a || DOK.r_unlock() ?}; echo()
|| FUN.info('Dokument obsługuje inny operator.\nZabroniony dostęp.'@)
?}


\beobskxd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Przed obsluga dla okienek grupowych tabeli POZ
::  OLD: \beobskxd/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
be_ob:=1; exec('podzktrl','control'); &be_ob; {? PAR_SKID.get(211)='T' || DOK.r_lock(1,1) ?};
1


\spr_wyk_model
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula sprawdza czy model przekazany przez par. _a nie zostal uzyty
::       w podzialach
::   WE: _a - SKID_MBN.ref
::   WY: 1 - model nie zostal użyty w podzialach
::       0 - model zostal uzyty w podzialach
::  OLD: \spr_wyk_model/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
_rr:=1;
SKID_MBN.cntx_psh(); SKID_MBN.prefix();
{? SKID_MBN.seek(_a)
|| _count:=SKID_MBN.count();
   {? _count>0
   || SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
      _size:=SKID_MBP.size();
      SKID_MBP.cntx_pop();
      K_INSMBN.index('SKID_MBN'); K_INSMBN.prefix(SKID_MBN.ref());
      _size+=K_INSMBN.size();
      {? _count<>_size
      || FUN.info(
            'Model '+SKID_MBN.KOD+' dla controllingu użyty został w strukturach %1.\nNie można modyfikować użytego modelu.'@
            [exec('nazwa','#system')]
         );
         _rr:=0
      ?}
   ?};
   {? _rr
   || {? SKID_MBN.TYP='P' & cur_tab(1,1).name='skid_mbp'
      || FUN.info('Wskazany model jest typu "Personel".\n Nie można go modyfikować.'@); _rr:=0
      || SKID_MBN.cntx_psh();
         SKID_MBN.index('TREE_KOD');
         SKID_MBN.prefix(#SKID_MBN.ref);
         {? SKID_MBN.first()
         || FUN.info('Wskazany model jest wzorcem dla modelu typu "Personel".\nNie można go modyfikować.'@); _rr:=0
         ?};
         SKID_MBN.cntx_pop()
      ?}
   ?}
|| FUN.info('Nie znaleziono wskazanego modelu dla controllingu.'@); _rr:=0
?};
SKID_MBN.cntx_pop();
_rr


\spr_nad_model
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2011]
:: OPIS: Sprawdzenie czy sa modele podrzedne
::   _a - SKID_MBN.ref
::  OLD: \spr_nad_model/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBN.cntx_psh; SKID_MBN.index('TREE'); SKID_MBN.prefix(_a);
{? SKID_MBN.first
|| FUN.emsg(
      'Istnieją modele podrzędne dla wybranego modelu.\n'
      'Należy najpierw usunąć modele podrzędne.'@
   );
   SKID_MBN.cntx_pop;
   0
|| SKID_MBN.cntx_pop;
   1
?}


\usun_skid_mbn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula usuwa model controllingowy wraz z pozycjami
::  OLD: \usun_skid_mbn/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('spr_wyk_model','control',SKID_MBN.ref) & exec('spr_nad_model','control',SKID_MBN.ref)
|| {? FUN.ask('Czy usunąć bieżący wiersz?'@)
   || {? exec('skid_mbn_lock','control')
      || SKID_MBP.index('LP');
         SKID_MBP.prefix(SKID_MBN.ref);
         do();
         {? SKID_MBP.first()
         || {! |? SKID_MBP.del !}
         ?};
         K_INSMBN.index('SKID_MBN'); K_INSMBN.prefix(SKID_MBN.ref());
         {? K_INSMBN.first()
         || {! |? K_INSMBN.del() !}
         ?};
         _next:=0;
         {? SKID_MBN.SKID_MBN
         || SKID_MBN.cntx_psh();
            SKID_MBN.index('TREE'); SKID_MBN.prefix(SKID_MBN.SKID_MBN);
            {? SKID_MBN.next() | SKID_MBN.prev()
            || _next:=#SKID_MBN.ref()
            || _next:=SKID_MBN.SKID_MBN
            ?};
            SKID_MBN.cntx_pop()
         ?};
         SKID_MBN.del();
         end();
         {? _next
         || SKID_MBN.seek(_next,)
         ?}
      ?}
   ?}
?}


\ae_k_pnoty_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Po redakcji K__PNOTY.WART
::----------------------------------------------------------------------------------------------------------------------
{? K__PNOTY.WYM1
|| fld(fld()$exec('dokl','control',K__PNOTY.WYM1))
?};
1


\arkusz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Zwraca typ arkusza
::----------------------------------------------------------------------------------------------------------------------
_typ:=PAR_SKID.get(112);
{? _typ='' || 'E' || _typ ?}


\is_arkusz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Czy z zadaniem harmonogramowania jest związany arkusz
::----------------------------------------------------------------------------------------------------------------------
K_HARM.cntx_psh();
_arkusz:=K_HARM_P.K_HARM().ARKUSZ;
_jest:={? _arkusz='G' || K_HARM_P.GOOGLEID<>'' || K_HARM_P.EXCEL<>null ?};
K_HARM.cntx_pop();
_jest


\gen_google_wym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Generowanie elementów
::  OLD: \gen_google_wym/!ctr_hbd_dhar.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=obj_new('W','K','F');
K_P_VIEW.index('K_P_VIEW');
K_P_VIEW.prefix(K_N_VIEW.ref(),'W'); _tab.W:=K_P_VIEW.size();
K_P_VIEW.prefix(K_N_VIEW.ref(),'K'); _tab.K:=K_P_VIEW.size();
K_P_VIEW.prefix(K_N_VIEW.ref(),'F'); _tab.F:=K_P_VIEW.size();
_tab


\gen_google_ele
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Generowanie elementów
::  OLD: \gen_google_ele/!ctr_hbd_dhar.fml
::----------------------------------------------------------------------------------------------------------------------
K_P_VIEW.cntx_psh();
K_P_VIEW.index('K_P_VIEW');
K_P_VIEW.prefix(K_N_VIEW.ref());
_lp:=1;
{? K_P_VIEW.first()
|| VAR_DEL.delete('TabNag');
   TabNag:=obj_new(
      'LISTA','first','next','name','opis','isFormula','formula','srow','scol','crow','ccol','row','col','hash',
      'WYM','SEEKON','seek'
   );
   TabNag.SEEKON:=0;
   TabNag.WYM:=obj_new(6);
   {! _i:=1..obj_len(TabNag.WYM) |! TabNag.WYM[_i]:=null !};
   TabNag.hash:=exec('create_set','#array','STRING[10]');
   TabNag.seek:="
      _lp:=TabNag.LISTA[_a].LP;
      TabNag.WYM[_lp]:={? _lp=6
                       || OKRO_F.prefix(); {? OKRO_F.seek(TabNag.LISTA[_a].TAB.REF) || OKRO_F.ref() || null ?}
                       || UD_SKL.prefix(); {? UD_SKL.seek(TabNag.LISTA[_a].TAB.REF) || UD_SKL.ref() || null ?}
                       ?}
   ";
   TabNag.first:="
      _first:=0;
      {! _i:=1..obj_len(TabNag.LISTA)
      |! {? TabNag.LISTA[_i].TYP=_a
         || {? TabNag.LISTA[_i].TAB.first() & TabNag.SEEKON
            || TabNag.seek(_i)
            ?};
            _first:=1
         ?}
      !};
      {? _a='K'
      || .col:=0;.ccol:=1
      || .row:=0;.crow:=1
      ?};
      {? _a='F' || 1 || _first ?}
   ";
   TabNag.next:="
      _ok:=1;
      _next:=0;
      _last:=1;
      {! _i:=obj_len(TabNag.LISTA)//-1..1
      |? _ok
      |! {? TabNag.LISTA[_i].TYP=_a
         || _next:=TabNag.LISTA[_i].TAB.next();
            {? _next
            || _ok:=0;
               {? _a='K'
               || .ccol+=1
               || .crow+=1
               ?};
               {? TabNag.SEEKON || TabNag.seek(_i) ?}
            || {? TabNag.LISTA[_i].TAB.first() & TabNag.SEEKON
               || TabNag.seek(_i)
               ?};
               {? _last
               || _last:=0;
                  {? _a='K'
                  || .col:=.ccol
                  || .row:=.crow
                  ?}
               ?}
            ?}
         ?}
      !};
      _next
   ";
   TabNag.name:="
      _name:='';
      {! _i:=1..obj_len(TabNag.LISTA)
      |! {? TabNag.LISTA[_i].TYP='F'
         || _name+=TabNag.LISTA[_i].TAB.SYMBOL+','
         ?}
      !};
      {? _name=''
      || 'Arkusz 1'
      || _name-1
      ?}
   ";
   TabNag.opis:="
      _desc:='';
      {! _i:=1..obj_len(TabNag.LISTA)
      |! {? TabNag.LISTA[_i].TYP='F'
         || _desc+=TabNag.LISTA[_i].WYM+': '+
                  {? TabNag.LISTA[_i].CZAS
                  || TabNag.LISTA[_i].TAB.OPIS
                  || '['+TabNag.LISTA[_i].TAB.SYMBOL+'] - '+TabNag.LISTA[_i].TAB.OPIS
                  ?}+', '
         ?}
      !};
      {? _desc=''
      || ''
      || _desc-2
      ?}
   ";
   TabNag.formula:="
      _ok:=1;
      _fml:='0';
      {! _i:=obj_len(TabNag.LISTA)//-1..1
      |? _ok
      |! {? TabNag.LISTA[_i].TYP=_a
         || _tab:=TabNag.LISTA[_i].TAB;
            _fml:=_tab.FORMULA1+_tab.FORMULA2+_tab.FORMULA3+_tab.FORMULA4;
            _ok:=0
         ?}
      !};
      {? _fml<>''
      || _fml:=1-_fml;
         _wyn:='';
         {!
         |? _p:=_fml*'[';
            {? _p
            || _wyn+=(_p-1)+_fml;
               _fml:=_p-_fml;
               _p:=_fml*']';
               _nr:=(_p-1)+_fml;
               {? 1+_nr='B' || _nr:=1-_nr ?};
               _fml:=_p-_fml;
               _wyn+={? _a='K'
                     || GSheet.cellName(.crow+.srow-1,.col+#_nr+.scol)
                     || GSheet.cellName(.row+#_nr+.srow-1,.ccol+.scol)
                     ?};
               1
            || _wyn+=_fml;
               0
            ?}
         !};
         _fml:='='+_wyn
      ?};
      _fml
   ";
   TabNag.isFormula:="
      _jest:=0;
      {! _i:=1..obj_len(TabNag.LISTA)
      |? _jest=0
      |! _jest:=TabNag.LISTA[_i].TAB.FORMULA1<>''
      !};
      _jest
   ";
   TabNag.LISTA:=obj_new(K_P_VIEW.size());
   {!
   |? K_P_VIEW.cntx_psh();
      TabNag.LISTA[_lp]:=obj_new('TAB','TYP','CZAS','WYM','LP');
      TabNag.LISTA[_lp].LP:={? K_P_VIEW.SKID_MBP || K_P_VIEW.SKID_MBP().LP || 6 ?};
      TabNag.LISTA[_lp].TYP:=K_P_VIEW.TYP;
      TabNag.LISTA[_lp].CZAS:=K_P_VIEW.SKID_MBP=null;
      TabNag.LISTA[_lp].WYM:={? K_P_VIEW.SKID_MBP || K_P_VIEW.SKID_MBP().NAZ || 'Okres' ?};
      TabNag.LISTA[_lp].TAB:={? K_P_VIEW.SKID_MBP
                             || proc_exec('k_e_view@kontrol',$K_P_VIEW.ref())
                             || proc_exec('k_e_time@kontrol',#K_HARM.ref(),$K_P_VIEW.ref())
                             ?};
::      TabNag.LISTA[_lp].TAB.win_sel(TabNag.LISTA[_lp].TAB.mk_sel(,,1));
::      TabNag.LISTA[_lp].TAB.select();
      K_P_VIEW.cntx_pop();
      _lp+=1;
      K_P_VIEW.next()
   !}
?};
K_P_VIEW.cntx_pop();
_tab:=obj_new('W','K','F');
_tab.W:=_tab.K:=_tab.F:=0;
{! _i:=1..obj_len(TabNag.LISTA)
|! {? TabNag.LISTA[_i].TYP='W'
   || {? _tab.W=0 || _tab.W:=1 ?};
      _tab.W*=TabNag.LISTA[_i].TAB.size()
   |? TabNag.LISTA[_i].TYP='K'
   || {? _tab.K=0 || _tab.K:=1 ?};
      _tab.K*=TabNag.LISTA[_i].TAB.size()
   || {? _tab.F=0 || _tab.F:=1 ?};
      _tab.F*=TabNag.LISTA[_i].TAB.size()
   ?}
!};
_tab


\send_google
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Wysyła wartości do arkusza google
::   WE: _a - miejsce wysyłania: 0,1-jTerm 2-webTerm
::----------------------------------------------------------------------------------------------------------------------
{? _a=1 & ~FUN.ask('Czy wysłać dane do arkusza Google?'@) || return ?};
K_HARM.cntx_psh();
K_HARM_P.K_HARM();
K_N_VIEW.index('SKID_MBN'); K_N_VIEW.prefix(K_HARM.SKID_MBN,K_HARM_P.ref());
{? K_N_VIEW.first()
|| exec('GSheet','object');
   GSheet.ID:=K_HARM_P.GOOGLEID;
   GSheet.Google:=_a<2;
   {? GSheet.ID=''
   || FUN.info('Brak sheetID.\nUtwórz arkusz Google.'@)
   |? (_init:=GSheet.init())>0
   || {? GSheet.open(GSheet.ID)
      || _okr:=null; _nag:=0;
         _size:=exec('gen_google_wym','control');
         _ele:=exec('gen_google_ele','control');
         {? _a<2 || PROGRESS.set(_ele.F*_ele.W*_ele.K,'Wysyłanie wartości do arkusza google ...') ?};
         TabNag.SEEKON:=1;
         _nr:=0;
         {? TabNag.first('F')
         || {!
            |? {? GSheet.openSheet(_nr)
               || GSheet.createRange(3+_size.K,_size.W,1);
                  {? TabNag.first('W')
                  || {!
                     |? GSheet.addRow();
                        {? TabNag.first('K')
                        || {!
                           |? _val:='0';
                              {? ~TabNag.isFormula()
                              || {? _okr<>TabNag.WYM[6]
                                 || _okr:=TabNag.WYM[6];
                                    OKRO_F.prefix();
                                    {? OKRO_F.seek(_okr)
                                    || K__NAG.index('UNIK1');
                                       K__NAG.prefix(K_HARM.FIRMA,K_HARM.SKID_MBN,K_HARM.K_WERSJE,OKRO_F.ROK,null);
                                       {? K__NAG.first()
                                       || _nag:=1;
                                          K__POZ.use('yb'+exec('maska','control'));
                                          K__POZ.index('RODZAJ');
                                          K__POZ.prefix()
                                       || _nag:=0
                                       ?}
                                    ?}
                                 ?};
                                 {? _nag
                                 || {? K__POZ.find_key(3,K__NAG.ref(),OKRO_F.ref(),TabNag.WYM[1],TabNag.WYM[2],TabNag.WYM[3],TabNag.WYM[4],TabNag.WYM[5])
                                    || _val:=$K__POZ.WART
                                    ?}
                                 ?}
                              ?};
                              GSheet.addCell(_val);
                              {? _a<2 || PROGRESS.next() ?};
                              TabNag.next('K')
                           !}
                        ?};
                        TabNag.next('W')
                     !}
                  ?};
                  GSheet.saveRange();

                  TabNag.srow:=3+_size.K+1;
                  TabNag.scol:=_size.W;
                  {? TabNag.first('K') & TabNag.first('W')
                  || {!
                     |? _fml:=TabNag.formula('K');
                        {? _fml<>''
                        || GSheet.repeat(TabNag.srow-1,TabNag.scol+TabNag.ccol-1,TabNag.srow+_ele.W-2,TabNag.scol+TabNag.ccol-1,_fml,2)
                        ?};
                        TabNag.next('K')
                     !}
                  ?};
                  {? TabNag.first('K') & TabNag.first('W')
                  || {!
                     |? _fml:=TabNag.formula('W');
                        {? _fml<>''
                        || GSheet.repeat(TabNag.srow+TabNag.crow-2,TabNag.scol,TabNag.srow+TabNag.crow-2,TabNag.scol+_ele.K-1,_fml,2)
                        ?};
                        TabNag.next('W')
                     !}
                  ?};
                  GSheet.execute()
               ?};
               _nr+=1;
               TabNag.next('F')
            !}
         ?};
         {? _a<2 || PROGRESS.close() ?}
      |? (_err:=GSheet.lastError())<>''
      || FUN.info(_err)
      ?};
      GSheet.close();
      1
   |? _init=-2 & _a<2
   || exec('config_error','gsheet')
   ?}
?};
K_HARM.cntx_pop()


\get_google
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Pobiera dane z arkusza google
::   WE: _a - miejsce wywołania: 0,1-jTerm 2,3-webTerm
::----------------------------------------------------------------------------------------------------------------------
{? _a=1 & ~FUN.ask('Czy pobrać dane z arkusza Google?'@) || return ?};
K_HARM.cntx_psh();
K_HARM_P.K_HARM();
K_N_VIEW.index('SKID_MBN'); K_N_VIEW.prefix(K_HARM.SKID_MBN,K_HARM_P.ref());
{? K_N_VIEW.first()
|| exec('GSheet','object');
   GSheet.ID:=K_HARM_P.GOOGLEID;
   GSheet.Google:={? _a<2 || 1 |? _a=2 || 0 || 2 ?};
   {? GSheet.ID=''
   || FUN.info('Brak sheetID.\nUtwórz arkusz Google.'@)
   |? (_init:=GSheet.init())>0
   || {? GSheet.open(GSheet.ID)
      || _okr:=null; _nag:=0;
         _size:=exec('gen_google_wym','control');
         _ele:=exec('gen_google_ele','control');
         {? _a<2 || PROGRESS.set(_ele.F*_ele.W*_ele.K,'Pobieranie wartości z arkusza google ...') ?};
         TabNag.SEEKON:=1;
         _nr:=0;
         {? TabNag.first('F')
         || {!
            |? {? GSheet.openSheet(_nr) & GSheet.getRange(4+_size.K,_size.W+1,4+_size.K+_ele.W,_size.W+1+_ele.K)
               || {? TabNag.first('W') & GSheet.firstRow()
                  || {!
                     |? {? TabNag.first('K') & GSheet.firstColumn()
                        || {!
                           |? {? ~TabNag.isFormula()
                              || _val:=GSheet.getDouble();
                                 exec('add_poz','control',$_val,$TabNag.WYM[6],$TabNag.WYM[1],$TabNag.WYM[2],$TabNag.WYM[3],$TabNag.WYM[4],$TabNag.WYM[5],null)
                              ?};
                              {? _a<2 || PROGRESS.next() ?};
                              TabNag.next('K') & GSheet.nextColumn()
                           !}
                        ?};
                        TabNag.next('W') & GSheet.nextRow()
                     !}
                  ?}
               ?};
               _nr+=1;
               TabNag.next('F')
            !};
            GSheet.close()
         ?};
         {? _a<2 || PROGRESS.close() ?}
      ?}
   |? _init=-2 & _a<2
   || exec('config_error','gsheet')
   ?}
?};
K_HARM.cntx_pop()


\koordynator
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Identyfikator koordynatora
::----------------------------------------------------------------------------------------------------------------------
'@!#Koordynator#!@'


\akc_harm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Akceptacja zadania
::   WE: _a - zadanie budżetowe
::       _b - użytkownik
::       _c - uwagi uzytkownika
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
_ref:={? var_press('_a')=type_of(1) || _a || #_a ?};
K_HARM_P.index('K_HARM'); K_HARM_P.prefix();
{? K_HARM_P.seek(_ref,)
|| {? K_HARM_P.STATUS='W'
   || {? K_HARM_P.KTO_UZU=K_HARM_P.KTO_AKC | K_HARM_P.ZN_AKC='N'
      || exec('kharmp_stat','control','A',_b);
         K_HARM_P.DATA_UZU:=date();
         K_HARM_P.DATA_AKC:=date()
      || exec('kharmp_stat','control','U',_b);
         K_HARM_P.DATA_UZU:=date();
         K_HARM_P.D_R_AKC:=date()
      ?};
      K_HARM_P.ZN_RET:='N';
      K_HARM_P.UWAGI:=_c;
      _typ:='A';
      _ok:=K_HARM_P.put()
   |? K_HARM_P.STATUS='U'
   || exec('kharmp_stat','control','A',_b);
      K_HARM_P.DATA_AKC:=date();
      K_HARM_P.ZN_RET:='N';
      K_HARM_P.UWAGI:=_c;
      _typ:='B';
      _ok:=K_HARM_P.put()
   ?}
?};
{? _ok
|| _typ
|| ''
?}


\k_harm_p_open
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Otwiera arkusz na www
::   WE: _a - 1-obszar 0-todo
:: ~OST: INEXEDIR
::----------------------------------------------------------------------------------------------------------------------
{? K_HARM_P.LINK<>''
|| _uzu:=K_HARM_P.STATUS='W';
   web_params_set('K_HARM_P',#K_HARM_P.ref(),'TYP',_a);
   {? _a || K_HARM_W.web_cntx_save() ?};
   web_choice("
      _typ:=web_params_get.TYP;
      {? _typ  || K_HARM_W.web_cntx_load() ?};
      _ref:=web_params_get.K_HARM_P;
      K_HARM_P.prefix();
      {? K_HARM_P.seek(_ref,)
      || _uzu:=K_HARM_P.STATUS='W';
         {? _a=0
         || REF.S_FIRMA:=exec('firma_ref','#firma',app_info('app_ident'));
            exec('send_google','control',2);
            {? GSheet.FILE<>''
            || _exe:='\"'+exe_dir()+'/mjrun.exe\" -wait -java -jar \"'+pth_dir('gsheet.jar')+'/gsheet.jar\" \"'+pth_dir(GSheet.FILE)+'/'+GSheet.FILE+'\"';
               _ok:=~system(_exe,1);
               ferase(GSheet.FILE,1);
               {? _ok
               || web_msg('Wysłano dane do arkusza Google.'@)
               || web_msg('Powstały błędy podczas wysyłania danych do arkusza Google.\nSzczegóły w pliku gsheet.log.txt na serwerze.'@,,'EXCLAM')
               ?}
            ?};
            1
         |? _a=1
         || web_open_link(K_HARM_P.LINK)
         |? _a=2
         || {? _uzu
            || REF.S_FIRMA:=exec('firma_ref','#firma',app_info('app_ident'));
               exec('get_google','control',2);
               _exe:='\"'+exe_dir()+'/mjrun.exe\" -wait -java -jar \"'+pth_dir('gsheet.jar')+'/gsheet.jar\" \"'+pth_dir(GSheet.FILE)+'/'+GSheet.FILE+'\"';
               _file1:=GSheet.FILE;
               _ok:=~system(_exe,1);
               {? _ok
               || exec('get_google','control',3)
               ?};
               ferase(_file1,1);
               ferase(GSheet.FILE,1);
               {? _ok
               || web_msg('Pobrano dane z arkusza Google.')
               || web_msg('Powstały błędy podczas wysyłania danych do arkusza Google.\nSzczegóły w pliku gsheet.log.txt na serwerze.'@,,'EXCLAM')
               ?}
            || POMOC.K1:='';
               web_params_set('K_HARM_P',#K_HARM_P.ref(),'TYP',web_params_get().TYP);
               {? web_params_get().TYP || K_HARM_W.web_cntx_save() ?};
               POMOC.web_edit('POWOD',,,,\"
                  _typ:=web_params_get().TYP;
                  {? _typ || K_HARM_W.web_cntx_load() ?};
                  {? _a='OK'
                  || {? POMOC.K1=''
                     || __CHK.err_empty('Powód')
                     || POMOC.web_eclose();
                        exec('env_wt_core','#web_srv');
                        _ref:=web_params_get.K_HARM_P;
                        K_HARM_P.prefix();
                        {? K_HARM_P.seek(_ref,)
                        || {? _typ || K_HARM_W.cntx_psh() ?};
                           proc_exec('ret_harm@kontrol',#K_HARM_P.ref(),app_info('web_user'),POMOC.K1);
                           {? _typ
                           || K_HARM_W.cntx_pop();
                              K_HARM_W.web_refresh('WEB')
                           ?}
                        ?}
                     ?}
                  |? _a='ANULUJ'
                  || POMOC.web_eclose()
                  ?}
               \")
            ?}
         |? _a=3
         || exec('env_wt_core','#web_srv');
            {? _typ || K_HARM_W.cntx_psh() ?};
            proc_exec('akc_harm@kontrol',#K_HARM_P.ref(),OPERATOR.USER().KOD);
            {? _typ
            || K_HARM_W.cntx_pop();
               K_HARM_W.web_refresh('WEB')
            ?}
         ?}
      ?}
   ",'Wybierz operację dla arkusza Google'@,'Wybierz'@,,,5,
   'Wyślij dane'@,'Edytuj arkusz'@,{? _uzu || 'Pobierz dane'@ || 'Odrzuć'@ ?},{? _uzu || 'Zakończ'@ || 'Akceptuj'@ ?},'Anuluj'@
   )
|| K_HARM_P.web_bl_download('EXCEL')
?}


\form_pbud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Ustawianie formuł dla tabeli FORM - UD_POM.PBUD
::----------------------------------------------------------------------------------------------------------------------
exec('set_fml','#field',UD_POM,'PBUD',
   "  UD_POM.PBUD:=FORM.PBUD().SYMBOL;
      ~~
   ",
   "exec('be_dim','control',FORM.SKID_MB,1)",
   "exec('f3_dim','control',FORM.SKID_MB,1)",
   "  {? fld()='' || FORM.PBUD:=null; return(1) ?};
      _ref:=exec('ae_dim','control',FORM.SKID_MB,1);
      {? _ref
      || FORM.PBUD:=_ref;
         fld(FORM.PBUD().SYMBOL);
         1
      ?}
   "
)


\bl_k_role_area
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Wartość początkowa K_ROLE.AREA
::----------------------------------------------------------------------------------------------------------------------
BPMN.SYM_DOM


\ud_def_upr_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Wyświetla schemat danych wg uprawnień
::   WE: _a - wymiar modelu
::----------------------------------------------------------------------------------------------------------------------
exec('ud_def_upr_gen','control');
_sym:={? app_info('web_sesid')<>'' || '' || fld() ?};
{? _sym=''
|| UD_DEF_W.index('TREE'); UD_DEF_W.prefix(UD_POM.UDDEFUPR,SKID_MBP.ref(),0)
|| UD_DEF_W.index('SYMBOL'); UD_DEF_W.prefix(UD_POM.UDDEFUPR,SKID_MBP.ref(),_sym)
?};
UD_DEF_W.first();
UD_DEF_W.index('TREE'); UD_DEF_W.prefix(UD_POM.UDDEFUPR,SKID_MBP.ref());
UD_DEF_W.first();
{? app_info('web_sesid')<>''
|| EPODZ.web_cntx_save();
   SKID_MBP.web_cntx_save();
   UD_DEF_W.web_win_init('SEL_WEB',,'title='+SKID_MBP.UD_SCH().OPIS);
   UD_DEF_W.web_select('SEL_WEB')
|| UD_DEF_W.win_sel('SEL');
   UD_DEF_W.hdr_sel();
   UD_DEF_W.hdr_sel(SKID_MBP.UD_SCH().OPIS);
   {? UD_DEF_W.select(,1,5)
   || UD_DEF_W.UD_SKL().SYMBOL
   ?}
?}


\ud_def_upr_gen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Tworzy schemat danych wg uprawnień
::----------------------------------------------------------------------------------------------------------------------
UD_DEF_W.index('TREE'); UD_DEF_W.prefix(UD_POM.UDDEFUPR,SKID_MBP.ref());
{? ~UD_DEF_W.first()
|| _sql:=sql(
      'select K_ROLE_D.UD_SKL '
      'from K_ROLE_D join K_ROLE join K_ROLE_U '
      'where K_ROLE_U.USERS=:_a and K_ROLE_D.SKID_MBP=:_b and K_ROLE.TYPE=\'B\''
      , OPERATOR.USER, SKID_MBP.ref()
   );
   UD_SKL.prefix();
   {? _sql.first()
   || {!
      |? {? UD_SKL.seek(_sql.UD_SKL)
         || exec('ud_def_upr_add','control')
         ?};
         _sql.next()
      !}
   ?}
?}


\ud_def_upr_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Dodaje element do uprawnionych
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.index('PODTEC'); UD_DEF.prefix(SKID_MBP.UD_SCH,UD_SKL.ref());
{? UD_DEF.first()
|| exec('ud_def_upr_add2','control',0);
   _ref:=UD_DEF_W.ref();
   UD_DEF.cntx_psh();
   UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBP.UD_SCH,UD_DEF.ref());
   {? UD_DEF.first()
   || {!
      |? exec('ud_def_upr_sec','control',1);
         exec('ud_def_upr_add2','control',_ref);
         UD_DEF.next()
      !}
   ?};
   UD_DEF.cntx_pop()
?}


\ud_def_upr_sec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.37]
:: OPIS: Dodaje elementy podrzędne do uprawnionych w przypadku, gdy jest więcej niż jedno zagnieżdzenie
::   WE: 1 - pierwsze wywołanie - 2 - kolejne wywołania
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.cntx_psh();
UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBP.UD_SCH,UD_DEF.ref());
{? UD_DEF.first()
|| exec('ud_def_upr_sec','control',2)
?};
UD_DEF.cntx_pop();
{? _a=2
|| {!
   |? exec('ud_def_upr_add2','control',0);
      UD_DEF.next()
   !}
?}


\ud_def_upr_add2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Dodaje element do uprawnionych
::   WE: _a - nadrzędny
::----------------------------------------------------------------------------------------------------------------------
UD_DEF_W.index('LISTA'); UD_DEF_W.prefix(UD_POM.UDDEFUPR,SKID_MBP.ref());
{? ~UD_DEF_W.find_key(UD_DEF.UD_SKL)
|| _ref:=_a;
   {? ~_a & UD_DEF.UD_DEF
   || UD_DEF.cntx_psh();
      UD_DEF.prefix();
      {? UD_DEF.seek(UD_DEF.UD_DEF)
      || exec('ud_def_upr_add2','control',_a);
         _ref:=UD_DEF_W.ref()
      ?};
      UD_DEF.cntx_pop()
   ?};
   {? ~UD_DEF_W.find_key(UD_DEF.UD_SKL)
   || UD_DEF_W.blank(1);
      UD_DEF_W.WEB_ID:=UD_POM.UDDEFUPR;
      UD_DEF_W.SKID_MBP:=SKID_MBP.ref();
      UD_DEF_W.TREE:=_ref;
      UD_DEF_W.UD_SKL:=UD_DEF.UD_SKL;
      UD_DEF_W.add()
   ?}
?}


\ud_def_upr_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Usuwa drzewo uprawnionych elementów
::   WE: _a - wymiar
::       _b - element
::----------------------------------------------------------------------------------------------------------------------
UD_DEF_W.cntx_psh();
UD_DEF_W.index('TREE2');
{? var_press('_a')>0
|| UD_DEF_W.prefix(UD_POM.UDDEFUPR,_a,_b)
|| UD_DEF_W.prefix(UD_POM.UDDEFUPR)
?};
{? UD_DEF_W.first()
|| {!
   |? exec('ud_def_upr_del','control',UD_DEF_W.SKID_MBP,UD_DEF_W.ref());
      UD_DEF_W.del()
   !}
?};
UD_DEF_W.cntx_pop()


\is_ud_udt_upr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Czy uzytkownik ma uprawnienia do wybrania danego elementu
::   WE: _a - symbol elementu
::----------------------------------------------------------------------------------------------------------------------
{? _a=''
|| 1
|| exec('ud_def_upr_gen','control');
   UD_DEF_W.index('SYMBOL');
   UD_DEF_W.prefix(UD_POM.UDDEFUPR,SKID_MBP.ref(),_a);
   {? UD_DEF_W.first()
   || {? app_info('web_sesid')=''
      || fld(UD_DEF_W.UD_SKL().SYMBOL)
      ?};
      1
   || FUN.info('Nie znaleziono elementu.'@);
      0
   ?}
?}


\ud_def_upr_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Zwraca identyfikator sesji
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(459)='T'
|| {? app_info('web_sesid')=''
   || 'j'+$UD_DEF_W.tm_stamp()
   || 'w'+app_info('web_sesid')
   ?}
|| ''
?}


\ud_def_w_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Akcja wybierz okna SEL_WEB tabeli UD_DEF_W
::----------------------------------------------------------------------------------------------------------------------
EPODZ.web_cntx_load();
SKID_MBP.web_cntx_load();
_acr:=web_top_fld_acr(1);
($('UD_POM.'+_acr+':=_a'))(UD_DEF_W.UD_SKL().SYMBOL);
($('EPODZ.'+_acr+':=_a'))(UD_DEF_W.UD_SKL);
UD_DEF_W.web_close();
web_top_fld_update(1,1);
1


\usun_wybrane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzanie czy mozna usunac dany wiersz
::  OLD: \usun_wybrane/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_usun:=1;
UD_DEF.cntx_psh(); UD_DEF.index('PODTEC');
SKID_MBP.cntx_psh(); SKID_MBP.index('LP');
SKID_MBK.cntx_psh(); SKID_MBK.index('UNIK');
SKID_MBE.cntx_psh(); SKID_MBE.index('ELEM');
UD_SCH.cntx_psh(); UD_SCH.prefix();
{! _i:=1..ile_wym
|? _usun=1
|! {? ~all_usu[_i]
   || SKID_MBK.prefix(CON_FUN.ref(),CON_FUN.SKIDMWE,_i);
      {? SKID_MBK.first()
      || _elem:=($('K__POZ.WYMIAR'+form(_i,-2)))();
         MAPAUSU.prefix(_i,$_elem);
         {? MAPAUSU.first()
         || _usun:=MAPAUSU.CZY_USU
         || SKID_MBE.prefix(SKID_MBK.ref(),_elem);
            {? SKID_MBE.first()
            || MAPAUSU.blank(1);
               MAPAUSU.NRWYM:=_i;
               MAPAUSU.UD_SKL:=$_elem;
               MAPAUSU.CZY_USU:=1;
               MAPAUSU.add()
            || SKID_MBP.prefix(CON_FUN.SKIDMWE,_i);
               {? SKID_MBP.first()
               || SKID_MBP.UD_SCH();
                  UD_DEF.prefix(UD_SCH.ref(),_elem);
                  {? UD_DEF.first()
                  || UD_DEF.prefix();
                     znal_nad:=0;
                     exec('usun_wybrane1','control',_elem,_i);
                     {? znal_nad
                     || _usun:=1
                     || MAPAUSU.blank(1);
                        MAPAUSU.NRWYM:=_i;
                        MAPAUSU.UD_SKL:=$_elem;
                        MAPAUSU.CZY_USU:=0;
                        MAPAUSU.add();
                        _usun:=0
                     ?}
                  ?}
               ?}
            ?}
         ?}
      ?}
   ?}
!};
SKID_MBK.cntx_pop(); SKID_MBE.cntx_pop(); SKID_MBP.cntx_pop(); UD_SCH.cntx_pop(); UD_DEF.cntx_pop();
VAR_DEL.delete('znal_nad');
_usun


\usun_wybrane1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzanie czy mozna usunac dany wiersz
::       Formula wewnetrzna szuka elementu ustawionego dla elementow podrzednych
::   WE: _a - ref badanego UD_SKL
::       _b - numer wymiaru
::  OLD: \usun_wybrane1/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_DEF.UD_DEF & UD_DEF.seek(UD_DEF.UD_DEF,UD_DEF.name())
|| SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
   {? SKID_MBE.first()
   || MAPAUSU.blank(1);
      MAPAUSU.NRWYM:=_b;
      MAPAUSU.UD_SKL:=$_a;
      MAPAUSU.CZY_USU:=1;
      MAPAUSU.add();
      znal_nad:=1
   || exec('usun_wybrane1','control',_a,_b)
   ?}
|| 0
?}


\olap_dim_name
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Zwraca nazwę wymiaru modelu w kostce OLAP
::   WE: _a - nazwa
::----------------------------------------------------------------------------------------------------------------------
_str:='.,;\'`:/\\*|?"&%$!+=[]{}';
{! _i:=1..+_str
|! _zn:=_i+_str+1;
   _a:=STR.gsub(_a,_zn,' ')
!};
form(_a)


\get_ud_skl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Zwraca wskazanie na element drzewa
::   WE: _a - wskazanie na model
::       _b - numer wymiaru
::       _c - symbol elementu drzewa
::----------------------------------------------------------------------------------------------------------------------
{? _a=null || return(null) ?};
_ud_skl:=null;
SKID_MBP.cntx_psh();
SKID_MBP.index('LP'); SKID_MBP.prefix(_a,_b);
{? SKID_MBP.first()
|| UD_SCH.cntx_psh();
   UD_SKL.cntx_psh();
   UD_SKL.index('SYMBOL'); UD_SKL.prefix(SKID_MBP.UD_SCH().UD_TYP,_c,);
   {? UD_SKL.first() || _ud_skl:=UD_SKL.ref() ?};
   UD_SKL.cntx_pop();
   UD_SCH.cntx_pop()
?};
SKID_MBP.cntx_pop();
_ud_skl


\chk_skid_mbp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula sprawdza poprawnosc wprowadzonej pozycji (wymiaru) modelu
::       dla controllingu
::   WE: _a - typ operacji: 1-poprawianie, o-dołączanie
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? SKID_MBP.NAZ=''
|| FUN.info('Nie wprowadzono nazwy pozycji modelu.'@); _zwrot:='NAZ'
?};
{? _zwrot='' & SKID_MBP.UD_SCH=null
|| FUN.info('Nie wybrano schematu danych.'@); _zwrot:='UD_SCH'
?};
{? _a || _ref:=SKID_MBP.ref() ?};
{? _zwrot=''
|| _naz:=SKID_MBP.NAZ;
   SKID_MBP.cntx_psh();
   SKID_MBP.index('NAZ'); SKID_MBP.prefix(SKID_MBN.ref(),_naz);
   {? SKID_MBP.first()
   || {! |?
         {? {? _a || SKID_MBP.ref()<>_ref || 1 ?} & SKID_MBP.NAZ=_naz
         || _zwrot:='NAZ';
            FUN.info('Występuje już pozycja o podanej nazwie.\nZmień nazwę pozycji modelu.'@)
         ?};
         _zwrot='' & SKID_MBP.next
      !}
   ?};
   SKID_MBP.cntx_pop()
?};
{? _zwrot=''
|| _ud_sch:=SKID_MBP.UD_SCH;
   SKID_MBP.cntx_psh();
   SKID_MBP.index('NAZ'); SKID_MBP.prefix(SKID_MBN.ref());
   {? SKID_MBP.first()
   || {! |?
         {? {? _a || SKID_MBP.ref()<>_ref || 1 ?} & SKID_MBP.UD_SCH=_ud_sch
         || FUN.info('Istnieje już pozycja z wybranym schematem danych.'@); _zwrot:='UD_SCH'
         ?};
         _zwrot='' & SKID_MBP.next()
      !}
   ?};
   SKID_MBP.cntx_pop()
?};
_zwrot


\chk_kfom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Sprawdza poprawnośc dabych w rekordzie K_FORM
::   WE: _a - typ operacji: 1-popraw 0-dołącz
::       _b - treść formuły
::----------------------------------------------------------------------------------------------------------------------
_chk:=
{? K_FORM.TYP='F'
|| __CHK.record(K_FORM,,'K_W_OBL','F')
|| __CHK.record(K_FORM,,'K_W_OBL')
?};
{? _chk=''
|| _ref:=K_FORM.ref();
   K_FORM.cntx_psh(); K_FORM.index('K_W_OBL'); K_FORM.prefix(UD_DEF.ref(),K_FORM.K_W_OBL);
   {? K_FORM.first() & (_a | _ref<>K_FORM.ref())
   || _chk:='K_W_OBL';
      FUN.info('Istnieje już definicja obliczeń dla wariantu: %1.'@[K_FORM.K_W_OBL().NAZ])
   ?};
   K_FORM.cntx_pop()
?};
{? _chk='' & exec('ud_def_in_view','control',0,K_FORM.K_W_OBL)=0
|| FUN.info('Element \'%1\' użyty w widoku danych ze wskazanym wariantem obliczeń.'@[UD_DEF.SYMBOL]);
   _chk:='K_W_OBL'
?};
{? _chk=''
|| _t:=_b;
   _tt:=''; _jest:=0;
   {!
   |? _p:=_t*'[[';
      {? _p
      || _jest:=1;
         _tt:=(_p-1)+_t;
         _t:=(_p+1)-_t;
         _p:=_t*']]';
         _t:=(_p+1)-_t;
         1
      ?}
   !};
   {? _jest
   || {? _t<>''
      || _tt+=_t
      ?};
      _t:=_tt
   ?};

   _ok:=1;
   _ok2:=1;
   _fml:='';
   {!
   |? _p:=_t*'[';
      {? _p
      || _fml+=(_p-1)+_t;

         _t:=_p-_t;
         _p:=_t*']';
         {? _p
         || _kod:=(_p+_t)-1;
            _fml+='1';
            _t:=_p-_t;
            UD_DEF.cntx_psh();
            UD_DEF.index('SCHSYM'); UD_DEF.prefix(UD_DEF.UD_SCH,_kod,_kod);
            _ok:=UD_DEF.first();
            UD_DEF.cntx_pop();
            _ok
         || _ok2:=0
         ?}
      ?}
   !};
   _fml+=_t;
   {? _ok=0
   || FUN.info('Brak elementu schematu o symbolu: \'%1\'.'@[_kod]);
      _chk:='F'
   |? _ok2=0
   || FUN.info('Brak znaku \']\'.'@);
      _chk:='F'
   |? _fml<>''
   || no_msg(1); on_error(2); errno();
      ($_fml)(); _err:=errno();
      on_error(0); no_msg(0);
      {? _err
      || FUN.info('Formuła zawiera błąd składniowy.'@);
         _chk:='F'
      |? _fml*'|?'
      || FUN.info('Użyto instrukcji wielowarunkowej (|?).'@);
         _chk:='F'
      |? _fml*'~' | _fml*'&' | STR.gsub(_fml,'||','')*'|'
      || FUN.info('Użyto operatora logicznego (~&|).'@);
         _chk:='F'
      ?}

   ?}
?};
{? _chk='' & exec('test_fun_leaf','control',UD_DEF.UD_SKL,1,1)=0
|| FUN.info('Element \'%1\' jest użyty w obliczeniach przypisanych do tej formuły.'@[UD_DEF.SYMBOL]);
   _chk:='F'
?};
_chk


\chk_k_wersje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Sprawdza poprawność danych w rekordzie tabeli K_WERSJE
::   WE: _a - typ operacji: 1-popraw, 0-dołącz
::       _b - treść formuły
::----------------------------------------------------------------------------------------------------------------------
_ok:=__CHK.record(K_WERSJE,,'SYM','OPIS','K_W_OBL');
{? _ok='' & K_WERSJE.CZY_KALK='T'
|| {? _b=''
   || __CHK.err_empty('Formuła');
      _ok:='MDX'
   ?}
?};
{? _ok=''
|| _ref:=K_WERSJE.ref(); _sym:=K_WERSJE.SYM;
   K_WERSJE.cntx_psh(); K_WERSJE.index('SYM'); K_WERSJE.prefix(_sym);
   {? K_WERSJE.first() & K_WERSJE.SYM=_sym & (~_a | _ref<>K_WERSJE.ref())
   || FUN.info('Istnieje wersja o symbolu: %1'@[_sym]);
      _ok:='SYM'
   ?};
   K_WERSJE.cntx_pop()
?};
{? _ok=''
|| K_WERSJE.cntx_psh();
   _t:=_b;
   _tt:=''; _jest:=0;
   _fml:='';
   {!
   |? _p:=_t*'[[';
      {? _p
      || _jest:=1;
         _tt:=(_p-1)+_t;
         _t:=(_p+1)-_t;
         _p:=_t*']]';
         _t:=(_p+1)-_t;
         1
      ?}
   !};
   {? _jest
   || {? _t<>''
      || _tt+=_t
      ?};
      _t:=_tt
   ?};
   _jest:=1;
   {!
   |? _p:=_t*'[';
      {? _p
      || _fml+=(_p-1)+_t;
         _t:=_p-_t;
         _p:=_t*']';
         {? _p
         || _kod:=(_p+_t)-1;
            _fml+='1';
            _t:=_p-_t;
            K_WERSJE.index('SYM'); K_WERSJE.prefix(_kod,);
            _jest:=K_WERSJE.first()
         ?}
      ?}
   !};
   _fml+=_t;
   {? _jest=0
   || FUN.info('Brak wersji o symbolu: %1.'@[_kod]);
      _ok:='MDX'
   |? _fml<>''
   || no_msg(1); on_error(2); errno();
      ($_fml)(); _err:=errno();
      on_error(0); no_msg(0);
      {? _err
      || FUN.info('MDX zawiera błąd składniowy.'@);
         _ok:='MDX'
      ?}
   || _ok:=''
   ?};
   K_WERSJE.cntx_pop()
?};
_ok


\ktrwp_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [21.37]
:: OPIS: Formuła dla akcji "Wartości dla podziału"
::   WE:
::----------------------------------------------------------------------------------------------------------------------
KTRWP.select()


\tab_war_sel2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Ustawienie zakresu wartości
::----------------------------------------------------------------------------------------------------------------------
TAB_WAR.index(ind_war1); TAB_WAR.prefix(1);
{? TAB_WAR.size()
|| _find:='TAB_WAR.find_key(TAB_WAR.RODZAJ,';
   {! _i:=1..ile_wym
   |! _find+={? _i=1 || '''' || ',''' ?}+exec('ciapek','control',($('TAB_WAR.WYMIAR'+form(_i,-2)))())+''''
   !};
   _find+=')';
   ($_find)()
?};
{! _i:=16..29
|! ($('POMOC.K'+$_i+':='''''))()
!};
OKRO_F.cntx_psh();
OKRO_F.index('ROK'); OKRO_F.prefix(K__NAG.ROK_F); _okres:={? nr_7=1 || 0 || -1 ?}; _siodem:=1;
_sizeof:=OKRO_F.size();
{? OKRO_F.first()
|| {! |?
      {? 1
      || {! _iii:=1.._sizeof
         |! _strhlp:='POMOC.K'+$(15+_iii)+':=OKRO_F.NAZ';
            ($_strhlp)();
            OKRO_F.next()
         !};
         {! _ii:=1.._sizeof
         |! TAB_WAR.fld_opt(TAB_WAR.win_sel('?'),'col_name="%1"'[($('POMOC.K'+$(_ii+15)))()],TAB_WAR,'WAR0'+$_ii)
         !};
         0
      || OKRO_F.next()
      ?}
   !}
?};
OKRO_F.cntx_pop();
1


\tab_war_help
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła pomocnicza dla tabeli tymczasowej TAB_WAR
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__tabs2_war');
__tabs2_war:=tab_tmp(17,'SIODEMKA','INTEGER','',
                    'RODZAJ','INTEGER','',
                    'WYMIAR01','STRING[16]','S01',
                    'WYMIAR02','STRING[16]','S02',
                    'WYMIAR03','STRING[16]','S03',
                    'WYMIAR04','STRING[16]','S04',
                    'WYMIAR05','STRING[16]','S05',
                    'WYMIAR06','STRING[16]','S06',
                    'WYMIAR07','STRING[16]','S07',
                    'WYMIAR08','STRING[16]','S08',
                    'WYMIAR09','STRING[16]','S09',
                    'WYMIAR10','STRING[16]','S10',
                    'WYMIAR11','STRING[16]','S11',
                    'WYMIAR12','STRING[16]','S12',
                    'WYMIAR13','STRING[16]','S13',
                    'WYMIAR14','STRING[16]','S14',
                    'WYMIAR15','STRING[16]','S15',
                    'OPIS01','STRING[60]','O01',
                    'OPIS02','STRING[60]','O02',
                    'OPIS03','STRING[60]','O03',
                    'OPIS04','STRING[60]','O04',
                    'OPIS05','STRING[60]','O05',
                    'OPIS06','STRING[60]','O06',
                    'OPIS07','STRING[60]','O07',
                    'OPIS08','STRING[60]','O08',
                    'OPIS09','STRING[60]','O09',
                    'OPIS10','STRING[60]','O10',
                    'OPIS11','STRING[60]','O11',
                    'OPIS12','STRING[60]','O12',
                    'OPIS13','STRING[60]','O13',
                    'OPIS14','STRING[60]','O14',
                    'OPIS15','STRING[60]','O15',
                    'WYMREF01','INTEGER','',
                    'WYMREF02','INTEGER','',
                    'WYMREF03','INTEGER','',
                    'WYMREF04','INTEGER','',
                    'WYMREF05','INTEGER','',
                    'WYMREF06','INTEGER','',
                    'WYMREF07','INTEGER','',
                    'WYMREF08','INTEGER','',
                    'WYMREF09','INTEGER','',
                    'WYMREF10','INTEGER','',
                    'WYMREF11','INTEGER','',
                    'WYMREF12','INTEGER','',
                    'WYMREF13','INTEGER','',
                    'WYMREF14','INTEGER','',
                    'WYMREF15','INTEGER','',
                    'WAR01','REAL','W1',
                    'WAR02','REAL','W2',
                    'WAR03','REAL','W3',
                    'WAR04','REAL','W4',
                    'WAR05','REAL','W5',
                    'WAR06','REAL','W6',
                    'WAR07','REAL','W7');
TAB_WAR.cntx_psh();
TAB_WAR.index(ind_war1); TAB_WAR.prefix(2);
exec('tab_war_help2','control',2);
TAB_WAR.index(ind_war1); TAB_WAR.prefix(3);
exec('tab_war_help2','control',3);
TAB_WAR.index(ind_war1); TAB_WAR.prefix(4);
exec('tab_war_help2','control',4);
VAR_DEL.delete('__tabs2_war');
TAB_WAR.cntx_pop();
1


\tab_war_help2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła pomocnicza dla tabeli tymczasowej TAB_WAR - wewnętrzna
::   WE: _a - prefix na tabeli TAB_WAR
::----------------------------------------------------------------------------------------------------------------------
{? _a=2
|| _dodaj:=7
|? _a=3
|| _dodaj:=14
|? _a=4
|| _dodaj:=21
?};
{? TAB_WAR.first()
|| {! |?
      __tabs2_war.blank();
      __tabs2_war.SIODEMKA:=TAB_WAR.SIODEMKA;
      __tabs2_war.RODZAJ:=TAB_WAR.RODZAJ;
      {! _i:=1..15
      |! _fml1:='__tabs2_war.WYMIAR'+form(_i,-2)+':=TAB_WAR.WYMIAR'+form(_i,-2);
         _fml2:='__tabs2_war.OPIS'+form(_i,-2)+':=TAB_WAR.OPIS'+form(_i,-2);
         _fml3:='__tabs2_war.WYMREF'+form(_i,-2)+':=TAB_WAR.WYMREF'+form(_i,-2);
         {? _i<=7
         || _fml4:='__tabs2_war.WAR'+form(_i,-2)+':=TAB_WAR.WAR'+form(_i,-2);
            ($_fml4)()
         ?};
         ($_fml4)();
         ($_fml1)();
         ($_fml2)();
         ($_fml3)()
      !};
      __tabs2_war.add();

      TAB_WAR.next()
   !}
?};
{? __tabs2_war.first()
|| TAB_WAR.prefix(1);
   {! |?
      TAB_WAR.blank();
      {? TAB_WAR.find_key(__tabs2_war.RODZAJ,__tabs2_war.WYMIAR01,__tabs2_war.WYMIAR02,__tabs2_war.WYMIAR03,
                          __tabs2_war.WYMIAR04,__tabs2_war.WYMIAR05,__tabs2_war.WYMIAR06,__tabs2_war.WYMIAR07,
                          __tabs2_war.WYMIAR08,__tabs2_war.WYMIAR09,__tabs2_war.WYMIAR10,__tabs2_war.WYMIAR11,
                          __tabs2_war.WYMIAR12,__tabs2_war.WYMIAR13,__tabs2_war.WYMIAR14,__tabs2_war.WYMIAR15)
      || {? _a<>4
         || {! _i:=1..7
            |! _fml5:='TAB_WAR.WAR0'+$(_i+_dodaj)+':=__tabs2_war.WAR'+form(_i,-2);
               ($_fml5)()
            !}
         || {! _i:=1..4
            |! _fml5:='TAB_WAR.WAR0'+$(_i+_dodaj)+':=__tabs2_war.WAR'+form(_i,-2);
               ($_fml5)()
            !}
         ?};
         TAB_WAR.put()
      ?};
      __tabs2_war.next()
   !}
?};
__tabs2_war.erase()


\okr_wyb_hlp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła pomocnicza w wyborze okresu dla zapisów
::   WE: _a - 1 - następny; 2 - poprzedni
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| _zmiana:=1
|| _zmiana:=-1
?};
_okr_zap:=UD_POM.OKR_ZAP; UD_POM.OKR_ZAP().ROK();
_rok:=UD_POM.OKR_ZAP().ROK;
_nr_akt:=UD_POM.OKR_ZAP().NR;
cur_tab(1,1).actions_grayed(cur_win(1,1),'');
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(_rok,_nr_akt+_zmiana);
{? OKRO_F.first() || UD_POM.OKR_ZAP:=OKRO_F.ref() ?};
OKRO_F.prefix(_rok);
_next:=_prev:=1;
{? OKRO_F.seek(UD_POM.OKR_ZAP) & (~OKRO_F.next())
|| _next:=0
|? OKRO_F.seek(UD_POM.OKR_ZAP) & (~OKRO_F.prev())
|| _prev:=0
?};
OKRO_F.cntx_pop();
{? ~_next
|| cur_tab(1,1).actions_grayed(cur_win(1,1),(1+(menu_pth()+2))+'('+(menu_pth()+1)+')'+':'
                           +(1+(menu_pth()+2))+'('+(menu_pth()+1)+')')
?};
{? ~_prev
||cur_tab(1,1).actions_grayed(cur_win(1,1),(1+(menu_pth()+2))+'('+(menu_pth()+1)+')'+':'
                           +(1+(menu_pth()+2))+'('+(menu_pth()+1)+')')
?};
exec('k_war_zakr','control',zakl_war)


\zmokres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Zmiana okresu
::----------------------------------------------------------------------------------------------------------------------
UD_POM.win_edit('OKRZAP');
_okr_zap:=UD_POM.OKR_ZAP; UD_POM.OKR_ZAP().ROK();
{? UD_POM.edit("exec('spr_okr','!ctr_pdm_zmod')") & _okr_zap<>UD_POM.OKR_ZAP
|| exec('k_war_zakr','control',zakl_war)
?};
_rok:=UD_POM.OKR_ZAP().ROK;
cur_tab(1,1).actions_grayed(cur_win(1,1),'');
OKRO_F.cntx_psh(); OKRO_F.index('ROK');
OKRO_F.prefix(_rok);
_next:=_prev:=1;
{? OKRO_F.seek(UD_POM.OKR_ZAP) & (~OKRO_F.next())
|| _next:=0
|? OKRO_F.seek(UD_POM.OKR_ZAP) & (~OKRO_F.prev())
|| _prev:=0
?};
_ukr:='';
OKRO_F.cntx_pop();
{? ~_next
|| _ukr:='Z(N)'
?};
{? ~_prev
|| _ukr:='Z(P)'
?};
{? TAB_WAR.RODZAJ=5
|| K__WAR.actions_grayed(K__WAR.win_sel('?'),_ukr+':'+_ukr)
|| K__WAR.actions_grayed('WER_W',_ukr+':'+_ukr);
   K__WAR.actions_grayed('WER_P_W',_ukr+':'+_ukr)
?}


\dok_fks_param
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [23.25]
:: OPIS: Zmiana parametrów pracy dla wartości controlingu - dokumenty księgowe, obsługa wielu firm
::----------------------------------------------------------------------------------------------------------------------
POMOC.CFIRMA:=REF.FIRMA;
POMOC.CROK_F:=SSTALE.AR;
POMOC.COKRO_F:=SSTALE.AO;
POMOC.CODD:=OPERATOR.DEPT;
POMOC.win_edit('PAR_DOK');
{? POMOC.edit()
|| REF.FIRMA:=POMOC.CFIRMA;
   SSTALE.AR:=POMOC.CROK_F;
   SSTALE.AO:=POMOC.COKRO_F;
   OPERATOR.DEPT:=POMOC.CODD;
   exec('open_tabele','open_tab')
?};
ODD.f_clear();
1


\ae_pomoc_cfirma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [23.25]
:: OPIS: Po edycji firmy w parametrach pracy
::----------------------------------------------------------------------------------------------------------------------
REF.FIRMA:=POMOC.CFIRMA;
ODD.prefix();
ODD.f_clear();
ODD.f_set('OD,N',
      'left join USERSDEP using(USERSDEP.DEPT,ODD.REFERENCE)',
      '(:_a=1 or USERSDEP.USERS=:_b) and ODD.FIRMA=:_c',Perm.hasFull('FJKS'),OPERATOR.USER,REF.FIRMA);
1


\ae_pomoc_crok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [23.25]
:: OPIS: Po edycji roku w parametrach pracy
::----------------------------------------------------------------------------------------------------------------------
SSTALE.AR:=POMOC.CROK_F;
1


\ae_pomoc_cokro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [23.25]
:: OPIS: Po edycji okresu w parametrach pracy
::----------------------------------------------------------------------------------------------------------------------
1


\ms_sql_obj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Zwraca obiekt do zarządzania adresem i sterownikiem MS SQL SERVER-a
::  OLD: \ms_sql_obj/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new(
   'ADDRESS','DRIVER',
   'read','return'
);
_obj.read:="
   {? K_INFO.SQL_PTH*'|'
   || _str:=spli_str(K_INFO.SQL_PTH,'|')
   || _str:=obj_new(2);
      _str[1]:='';
      _str[2]:=K_INFO.SQL_PTH
   ?};
   .DRIVER:=_str[1];
   .ADDRESS:=_str[2]
";
_obj.return:="
   _address:={? var_pres('_a')=type_of('') || _a || .ADDRESS ?};
   _driver:={? var_pres('_b')=type_of('') || _b || .DRIVER ?};
   {? _driver<>''
   || _driver+'|'+_address
   || _address
   ?}
";
_obj.read();
_obj


\f3_sql_pth
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Klawisz F3 pola K_INFO.SQL_PTH
::  OLD: \f3_sql_pth/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1,
   'ADDRESS','STRING[255]','Adres',
   'DRIVER','STRING[255]','Sterownik'
);
_tab.fld_fml('DRIVER','F3',"exec('f3_sql_driver','control')");
_red:=_tab.mk_edit('Serwer MS SQL',,'#sqlserverpar');
_tab.win_efld(_red,,'ADDRESS',,,100,,,'Adres');
_tab.win_efld(_red,,'DRIVER',,,100,,,'Sterownik');
_tab.win_edit(_red);
_obj:=exec('ms_sql_obj','control');
_tab.ADDRESS:=_obj.ADDRESS;
_tab.DRIVER:=_obj.DRIVER;
{? _tab.edit()
|| _obj.ADDRESS:=_tab.ADDRESS;
   _obj.DRIVER:=_tab.DRIVER;
   fld(_obj.return())
?}


\f3_sql_driver
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Klawisz F3 dla sterowników MS SQL
::  OLD: \f3_sql_driver/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new(
   'TAB',
   'add','select'
);
_obj.TAB:=_tab:=tab_tmp(1,
   'NAME','STRING[100]','Nazwa',
   'DESC','STRING[100]','Opis',
   'INFO','STRING[100]','Informacja'
);
_obj.add:="
   _tab:=.TAB;
   _tab.blank(1);
   _tab.DESC:=_a;
   _tab.NAME:=_b;
   _tab.INFO:=_c;
   _tab.add()
";
_obj.select:="
   _tab:=.TAB;
   _wer:=_tab.mk_sel('Sterowniki','P',,'#idsqldriver',,,,,'U');
   _tab.win_fld(_wer,,'NAME',,,15);
   _tab.win_fld(_wer,,'DESC',,,30);
   _tab.win_fld(_wer,,'INFO',,,30);
   _tab.win_act(_wer,,'Formuła','Wybierz'@@,,,\"sel_exit()\",,1);
   _tab.win_sel(_wer);
   _tab.prefix();
   _fld:=fld();
   {? _fld<>'' || _tab.find_key(_fld) | _tab.first() || _tab.first() ?};
   _tab.select(,1,3)
";

_obj.add('Microsoft OLE DB Driver for SQL Server','MSOLEDBSQL.1','Zalecany od MS SQL Server 2022');
_obj.add('Microsoft OLE DB Provider for SQL Server','SQLOLEDB.1','Zalecany do MS SQL Server 2019');

{? _obj.select()
|| fld(_obj.TAB.NAME)
?}

:Sign Version 2.0 jowisz:1045 2023/10/03 15:42:10 b0b3d863deddce0d5dc623e2a2122fee916fccb7d7e4a8fb91223898ae8a66f1dd5d54603faf9bc1ef5140db15a657cf8bc901d33807ab715d65d48249f53c0bf730e690ce5e79ec45ab13e64e20bbff37384df0187a4b1bb019b1a9fe8eb4e49ff7717d5e74e9ea442a878b0cb2543f3be8fc76668edf911d052211b473de68
