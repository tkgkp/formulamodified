:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: komornik.fml [2006]
:: Utworzony: 2006/12/13
:: Autor: PKOSO
::======================================================================================================================
:: Zawartość: Definicje funkcji wykorzystywanych do realizacji potraceń dla osób będacych pracownikami.
::======================================================================================================================


\usun_rozl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Kasowanie danych rozliczeń związanych z potrąceniem
::   WE: _a - jeśli 0 dla rachunku, 1 dla listy płac
::       _b - jeśli integer, to kasuje wszystko dla danej listy bądź rachunku
::   WY: 1 ok
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0)
|| return(0)
?};
{? _a
|| KOM_SP.index('KOM_SO');
   KOM_SP.prefix(OSOBA.ref(),O.ref(),P.ref())
|| KOM_SP.index('KOM_SR');
   KOM_SP.prefix(OSOBA.ref(),RH.ref())
?};
{? KOM_SP.first()
|| {!
   |? {? var_pres('_b')=type_of(0) | KOM_SP.TYP='A'
      || KOM_SP.del()
      || KOM_SP.next()
      ?}
   !}
?};
1


\sprawdz_priorytet
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Sprawdzenie priorytetu. Funkcja wywoływana podczas definiowania rodzajów potrąceń oraz redagowania konkretnych
::       wartości -  z poziomu konkretnej osoby.
::       Uwaga: zmiana argumentów wywołania.
::   WE: _a [TABLE]     - Alias tabeli.
::       _b [REFERENCE] - Ref poprawianego rekordu lub null() jeżeli rekord jest tworzony.
::       _c [INTEGER]   - Priorytet.
::       _d [REAL]      - Procent wynagrodzenia zasadniczego.
::       _e [REAL]      - Procent minimalnego wynagrodzenia.
::       _f [REAL]      - Procent zasiłku ZUS.
::       _g [REAL]      - Procent najniższej emerytury.
::       _h [REFERENCE] - Wskazanie na atrybut dodatkowych składnikow pomijanych
::   WY: 1 - ok
::       0 - błąd
::  OLD: \spr_prio/komornik.fml
::----------------------------------------------------------------------------------------------------------------------
_tn:=type_of(0);

{? var_press('_a')<>type_of(KOM_RP) |
   var_press('_b')<>type_of(null()) |
   var_press('_c')<>_tn | var_press('_d')<>_tn | var_press('_e')<>_tn | var_press('_f')<>_tn | var_press('_g')<>_tn
|| return(0)
?};
_attr:=null();
{? _a=KOM_OS
|| _val:="($('_a.KOM_RP().'+_b))(_a)";
   _attr:={? var_press('_h')=type_of(null())
          || _attr:=_h
          ?}
|| _val:="($('_a.'+_b))(_a)"
?};

_a.cntx_psh();
_ret:=1;
{? _a.first()
|| {!
   |?
      {? _a.P=_c & _a.ref()<>_b &
::       ^ |  Jeżeli to jest ten sam priorytet i inny rekord,
::       v |  i co najmniej jedna z wartości parametryzujących jest różna ...
         (_val(_a,'PROC')<>_d | _val(_a,'MIN')<>_e | _val(_a,'ZUS')<>_f | _val(_a,'EMER')<>_g |
         (_a=KOM_OS & _attr<>KOM_OS.RA_DEF))
::       ... to nie jest dobrze.
      || _ret:=0
      || _a.next()
      ?}
   !}
?};
_a.cntx_pop();
_ret


\kom_sp_view_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: ustawienie wyswietlanych rubryk
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::  OLD: \wysw_potr_przed/komornik.fml
::----------------------------------------------------------------------------------------------------------------------
KOM_SP.KOM_OS().KOM_RP().R()


\kom_sp_view_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Zmiana typu potrącenia na "Poprawiony".
::  OLD: \popraw_rozl/komornik.fml
::----------------------------------------------------------------------------------------------------------------------
KOM_SP.TYP:='P'


\kom_sp_potr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Wyświetlenie spłaty potrąceń realizowanych na bieżącej liście płac.
::   WE: _a [NUMBER] - Miejsce wywołania:
::                   1 - Funkcja wołana dla płac.
::                   0 - Funkcja wołana dla rachunku.
::  OLD: \wysw_potr/komornik.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0)
|| return(0)
?};

{? PAR_SKID.get(230)<>'T'
|| FUN.emsg('Parametr %1 (%2) nie jest ustawiony.\nPotrącenia pracownicze nie są realizowane.'@
      ['230',PAR_SKID.opis(230)]
   );
   return(0)
?};

_ochrona:=0;
KOM_SP.cntx_psh();
{? _a
:: Wywołanie z LS.
|| KOM_SP.index('KOM_SO');
   KOM_SP.prefix(OSOBA.ref(),O.ref(),P.ref());
   _ochrona:=(O.Z='T' | exec('czy_lista_z_nkor','nieobecnosc'))

:: Wywołanie z RH
|| _ochrona:=RH.BL='T';
   KOM_SP.index('KOM_SR');
   KOM_SP.prefix(OSOBA.ref(),RH.ref())
?};
KOM_SP.win_sel('POTR');
KOM_SP.win_edit('RED');

O.cntx_psh();
RH.cntx_psh();
P.cntx_psh();
_ha:={? _ochrona || 'pu' || '' ?};
_buf:=exec('save_fml_type','#field',KOM_SP,'BEFORE_EDIT');
exec('set_fml_type','#field',KOM_SP,'BEFORE_EDIT',"0");
exec('set_fml','#field',KOM_SP,'KW',,"*");
KOM_SP.hdr_sel(exec('win_title_ext','pracownik'));
KOM_SP.select(,,,_ha);
KOM_SP.hdr_sel();
{? _a
|| FUNKCJE.OBLICZ(1);
   FUNKCJE.buff.show_log();
   params_set(_par:=params_get());
   {? var_pres('_par')>100 & var_pres('cfg',_par)>100 & var_pres('nav',_par.cfg)>100 &
      var_pres('main',_par.cfg.nav)=type_of('')
   || grp_disp(P,_par.cfg.nav.main,0,1)
   ?}
?};
exec('restore_fml_type','#field',KOM_SP,'BEFORE_EDIT',_buf);
P.cntx_pop();
RH.cntx_pop();
O.cntx_pop();
{? ~_a & ~_ochrona
|| exec('oblicz','zlec_rh')
?};
KOM_SP.cntx_pop();
~~


\zalicz_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wyzwalacz "Usuń - przed" dla tabeli ZALICZ.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
EZAL.cntx_psh();
_blok:=ZALICZ.EZAL().ZAM='T';
EZAL.cntx_pop();
{? _blok
|| return(0)
?};

O.cntx_psh();
_blok:=ZALICZ.O().Z='T';
O.cntx_pop();
{? _blok
|| return(0)
?};

KOM_OS.cntx_psh();
KOM_OS.index('KOM_OZ');
KOM_OS.prefix(ZALICZ.FIRMA,'T',null(),ZALICZ.ref());
_blok:=KOM_OS.first();
KOM_OS.cntx_pop();
{? _blok
|| return(0)
?};

:: Aktualizacja kwot w nagłówku zaliczki.
:: Chirurgiczna aktualizacja (odejmowanie kwot z usuwanych pozycji) byłaby bardziej elegancka i efektywna, ale mniej
:: podatna na błędy. Przeliczanie całej kwoty nie pozwoli na rozsynchronizowanie sumatorów.
{? ZALICZ.EZAL
|| EZAL.cntx_psh();
   EZAL.prefix();
   ZALICZ.EZAL();
   EZALPOZ.cntx_psh();
   EZALPOZ.index('ZALICZKA');
   EZALPOZ.prefix(EZAL.ref());
   {? EZALPOZ.first()
   || {!
      |? {? 3+EZALPOZ.POCH='PPL'
         || EZALPOZ.del()
         || EZALPOZ.next()
         ?}
      !};
      EZAL.PRZYCHOD:=EZAL.ROZCHOD:=0;
      {? EZALPOZ.first()
      || {!
         |? EZAL.PRZYCHOD+=EZALPOZ.PRZYCHOD;
            EZAL.ROZCHOD+=EZALPOZ.ROZCHOD;
            EZALPOZ.next()
         !}
      ?}
   ?};
   EZALPOZ.cntx_pop();
   EZAL.WPLATA:=0;
   EZAL.PRZ_P:='N';
   EZAL.PLACE:='N';
   EZAL.put();
   EZAL.cntx_pop()
?};
1


\zalicz_potr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2009]
:: OPIS: Wygenerowanie potrącenia zaliczki.
::   WE: [_a] REFERENCE]  - Wskazanie firmy, w której ma powstać zapis [domyslnie: ]
::        _b  [REFERENCE] - Wskazanie osoby.
::        _c  [DATE]      - Data początkowa spłaty.
::        _d  [NUMBER]    - Kwota zadłużenia (musi być dodatnia).
::       [_e] [REFERENCE] - Wskazanie zaliczki w obiegu.
::       [_f] [REFERENCE] - Wskazanie zaliczki (wymagane, jeżeli podano parametr _e).
::   WY: Status operacji:
::          1 - Sukces (potrącenie wygenerowane).
::          0 - Porażka (być może błąd parametrów wywołania).
::----------------------------------------------------------------------------------------------------------------------
_firma:={? var_pres('_a')=type_of(null()) & _a<>null() & ref_tab(_a)=FIRMA || _a || exec('ref_firma','ustawienia') ?};

{? var_pres('_b')<>type_of(null()) | var_pres('_c')<>type_of(date()) | var_pres('_d')<>type_of(0)
|| return(0)
?};
{? _d<=0
|| return(0)
?};
{? var_pres('_e')<>type_of(null()) || _e:=null() ?};
{? var_pres('_f')<>type_of(null()) || _f:=null() ?};

{? _e & _f<>null()
|| return(0)
?};

_ret:=0;
KOM_RP.cntx_psh();
KOM_RP.index('KOM_RZ');
KOM_RP.prefix();
{? KOM_RP.find_key('T',)
|| KOM_OS.cntx_psh();
   KOM_OS.prefix();
   KOM_OS.blank();
   KOM_OS.FIRMA:=_firma;
   KOM_OS.OSOBA:=_b;
   KOM_OS.KOM_RP:=KOM_RP.ref();
   KOM_OS.OD:=_c;
   KOM_OS.A:='T';
   KOM_OS.P:=KOM_RP.P;
   KOM_OS.WART:=_d;
   KOM_OS.AUTO:='T';
   KOM_OS.EZAL:=_e;
   KOM_OS.ZALICZ:=_f;
   {? _ret:=KOM_OS.add(1)
   || {? _e
      || RAPLS.msg('',KOM_OS.OSOBA().NAZWISKO,KOM_OS.OSOBA().PIERWSZE,
            'W kartotece potrąceń został wygenerowany automatyczny zapis'@,
            'wprowadzony w obszarze "Zaliczki pracownicze".'@)
      || FUN.info('W kartotece potrąceń został wygenerowany automatyczny zapis dla\n%1.'@
            [KOM_OS.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE])
      ?}
   ?};
   KOM_OS.cntx_pop()
?};
KOM_RP.cntx_pop();
_ret


\zalicz_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2009]
:: OPIS: akcja usun w tabeli ZALICZ
::----------------------------------------------------------------------------------------------------------------------
EZAL.cntx_psh();
_blok:=ZALICZ.EZAL().ZAM='T';
EZAL.cntx_pop();
{? _blok
|| FUN.emsg(
      'Zapis dotyczy zaliczki wprowadzonej w obszarze "Zaliczki pracownicze".'@+'\n'+
      'Dokument posiada status "Zamknięty".'@+'\n'+
      'Akcja niedostępna.'@
   );
   return(0)
?};

O.cntx_psh();
_blok:=ZALICZ.O().Z='T';
O.cntx_pop();
{? _blok
|| FUN.emsg('Lista płac rozliczająca zaliczkę jest zamknięta.'@+'Akcja niedostępna.'@);
   return(0)
?};

KOM_OS.cntx_psh();
KOM_OS.index('KOM_OZ');
KOM_OS.prefix(ZALICZ.FIRMA,'T',null(),ZALICZ.ref());
_blok:=KOM_OS.first();
KOM_OS.cntx_pop();
{? _blok
|| FUN.emsg(
      'Istnieje wpis w potrąceniach pracowniczych dotyczący wybranej zaliczki.'@+'\n'+
      'Należy usunąć powiązane elementy.'@+'\n'+
      'Akcja niedostępna.'@
   );
   return(0)
?};

{? ~exec('del_ask','#table')
|| return(0)
?};

_txt:='';

{? ZALICZ.AUTO='T'
|| _txt+=
      'Zapis powiązany z dokumentem zaliczek w obszarze "Zaliczki pracownicze".'@+'\n'+
      'Akcja spowoduje usunięcie danych związanych z tym dokumentem.'@+'\n'
?};

{? ZALICZ.O
|| _txt+='Po usunięciu należy zweryfikować dane na liście płac: %1.'@ [ZALICZ.LT]+'\n'
?};

{? _txt='' | FUN.ask(_txt+'Czy na pewno usunąć bieżący wiersz?'@)
|| ZALICZ.del()
?}


\zalicz_ustaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2009]
:: OPIS: Zmiana listy rozliczającej zaliczkę.
::       Uwaga:
::          Zakładamy, ze funkcja wywoływana jest przy prawidłowo ustawionym buforze tabeli P.
::  OLD: \zalicz_lista/komornik.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZALICZ.A<>'T'
|| FUN.emsg('Zaliczka ze statusem NIEAKTYWNY.'@+'\n'+'Akcja niedostępna.'@);
   return(0)
?};

{? ZALICZ.O
|| {? ZALICZ.O<>O.ref()
   || FUN.emsg('Należy wybrać listę płac, która rozliczyła zaliczkę.'@);
      return(0)
   |? O.Z='T'
   || FUN.emsg('Wybrana lista płac musi być otwarta.'@);
      return(0)
   ?}
?};

{? ~FUN.ask('Akcja dotyczy zmiany listy, która realizuje zaliczkę.'@+'\n'+'Czy kontynuować?'@)
|| return(0)
?};


F_ZATR.cntx_psh();
_f_zatr:=P.F_ZATR().KOD;
F_ZATR.cntx_pop();

_ret:=exec('select','lista_plac','PPL',_f_zatr,'N',,'MR');
{? _ret.OK
|| ZALICZ.P:=P.ref();
   ZALICZ.O:=_ret.REF;
   ZALICZ.R:=_ret.R;
   ZALICZ.M:=_ret.M;
   ZALICZ.LT:=_ret.LT;
   ZALICZ.put()
|| ZALICZ.get();
   0
?}


\zalicz_red_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2009]
:: OPIS: rekord po tabeli ZALICZ
::   WY: akronim pola lub 1 jesli ok
::----------------------------------------------------------------------------------------------------------------------
{? (_chk:=__CHK.record(ZALICZ,,'R','M','KW'))<>''
|| return(_chk)
?};
_maxr:=5+date()~1;
{? ZALICZ.R<1900 | ZALICZ.R>_maxr
|| return(__CHK.err_fld(ZALICZ,'R',1,'Dozwolone wartości z przedziału %1-%2.'@ ['1900',$_maxr]))
|? ZALICZ.M<1 | ZALICZ.M>12
|| return(__CHK.err_fld(ZALICZ,'R',1,'Dozwolone wartości z przedziału %1-%2.'@ ['1','12']))
|? ZALICZ.KW<0
|| return(__CHK.err_fld(ZALICZ,'KW',1,'Wartość nie może być ujemna.'@))
?};
1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:35 0014e643c9d6e193c762a49fe9b9a6962c05901656ebb0d19ac85c56639effb823cb4db5e332621183e14d021bf625faf979ed3e5d97259b99f0f1b7900d9292d0ec15d552493118ebe456e8be6c42ae9bd0cd9b0dfa9a47661f690946365ab24e57adb253b9f6e8cce649186ec1872a7bec49c6b9cc08e7f0b03e03c3c78170
