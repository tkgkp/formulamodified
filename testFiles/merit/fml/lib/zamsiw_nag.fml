:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zamsiw_nag.fml
:: Utworzony: 06.07.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Obsługa zamówień sprzedaży/wewnętrznych - nagłówki zamówień
::======================================================================================================================


\buffer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.02]
:: OPIS: Zwraca obiekt nazwany - bufor tabeli ZK_N
::   WY: obj_new()
::----------------------------------------------------------------------------------------------------------------------
exec('ZK_N','buffer',"'Odb_KOD'")


\oblprea_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: oblicza procent realizacji na zamowieniu
::   WE: _a - ZK_N.ref()
::  OLD: \oblprea_zam/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh();
ZK_N.prefix();
{? ZK_N.r_lock(1,1,1,#_a,ref_name(_a)) & ZK_N.seek(_a)
|| ZK_N.get();
   BEER.ZK_N:=ZK_N.ref;
   _dan:=exec('obl_prea','zamsiw_nag');
   ZK_N.PR:=_dan[1]; ZK_N.E:=%_dan[2];
   ZK_N.put(1);
:: ustalenie statusu abstore
   _stan:=exec('zwr_etap','zamsiw_nag',#ZK_N.E);
   exec('abs_s_up','abstore_fun',ZK_N.ref(),_stan,ZK_N.STAN);

   ZK_N.STAN:=_stan;
   ZK_N.put(1);
   obj_del(_dan);
   ZK_N.r_unlock()
?};
ZK_N.cntx_pop();
1


\obl_prea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: oblicza stan realizacji danego zamowienia
::   WE:  _a  - ref naglowka
::       [_b] - czy aktualizowac stany magazynowe (0 - aktualizuje stany, 1 - korzysta z obliczonych stanow)
::   WY: _wyn - uchwyt tabelki 1-procent realizacji 2-stan
::  OLD: \obl_prea/zk.fml
::       \obl_prea/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:={? _=0 | _a=null || BEER.ZK_N || _a ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?}  || _b:=0  ?};

_wyn:=obj_new(2);
_wyn[1]:=0;
_wyn[2]:=48;

ZK_N.cntx_psh();
ZK_N.clear();
{? ZK_N.seek(_ref)
|| _wyn[1]:={? ZK_N.MIL>0 || (ZK_N.LIL/ZK_N.MIL) || 0 ?}*100 $2;
   _wyn[2]+={? ZK_N.ZNB='T' | ZK_N.ZBB='T' || 1 ?};
   _wyn[2]+={? ZK_N.ZNR='T' || 2 ?};
   _wyn[2]+={? ZK_N.ZNW='T' | ZK_N.ZBZ='T' || 4 ?}
?};
ZK_N.cntx_pop();

_wyn


\zwr_etap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: zwraca etap zamowienia klienta wg kodu
::   WE: _a - liczba
::   WY: status
::  OLD: \zwr_etap/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_oki:=1;
_wyn:='';
_end:={? var_pres('_b')=type_of(0) || _b || 0 ?};

{? _a=0 & ZK_N.name+2<>'__'
|| _oki:=0;
   _wyn:='ARCHIWALNE'
|? ZK_N.STAT_REJ='A'
|| _oki:=0;
   _wyn:='ANULOWANE'
|? exec('eann2zk','magdok_wspolne',ZK_N.ref(),1)='T'
|| _wyn:='WYS'
|? ZK_N.T().ZAP='T' & (_stan:=exec('stan_zap','zamowienia',ZK_N.EZAPOT); _stan<>1)
|| _oki:=0;
   {? _stan<1 || _wyn:='DO AKCEPT.'
   |? _stan=2 || _wyn:='ODRZUCONE'
   ?}
?};
{? _oki
||
:: kontrola zamkniętych pozycji
   ZK_P.cntx_psh();
   ZK_P.index('NAG');
   ZK_P.prefix(ZK_N.ref());
   _end:=ZK_P.first() & ZK_P.find_tab('first','END',,'=',1);
   ZK_P.cntx_pop();
   {? _a=8 || _a:=6 ?};
   {? _a=9 || _a:=7 ?};
   _wyn+={? (_a%*2)=1     || {? +_wyn || '-' || '' ?}+'REA' || '' ?};
   _wyn+={? ((_a%2)%*2)=1 || {? +_wyn || '-' || '' ?}+'ZRE' || '' ?};
   _wyn+={? (((_a%2)%2)%*2)=1 || {? +_wyn || '-' || '' ?}+'ZAM' || '' ?};
   _wyn+={? _end || {? +_wyn || '-' || '' ?}+'END' || '' ?}
?};
_wyn


\obl_warz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: procedura oblicza wartosc zamowienia oraz ustawia statusy zamowienia
::   WE:  _a  - ref zamowienia
::       [_b] - czy aktualizowac na pozycji informacje walutowe - domyslnie 0
::       [_c] - czy aktualizowac stany magazynowe (0 - aktualizuje stany, 1 - korzysta z obliczonych stanow)
::       [_d] - czy tylko okreslac status zamowienia ([0] - okresla wartosc i status, 1 - tylko status)
::   WY: zwraca wartosc netto zamowienia
::  OLD: \obl_warz/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};

_netto:=_brutto:=_nettow:=_bruttow:=_net:=_brt:=_netw:=_brtw:=0;
_lock:=0;
{? _a<>null & {? ZK_Z.R_LOCK='T' & ZK_Z.ZK_NLOCK=$_a || 1 || _lock:=ZK_N.r_lock(1,1,1,_a) ?}
||
   exec('st_licz_psh','ceny');
   ZK_N.cntx_psh;
   ZK_N.prefix();
   {? ZK_N.seek(_a)
   ||
      _gratisy:={? _d=0 || 'N' || ZK_N.GRATISY ?};
      exec('st_licz_wz','ceny','ZK_N');
      {? _d=0
      ||
         TAR_H.cntx_psh;
         TAP.cntx_psh();
         TAR.cntx_psh();
         ZK_P.cntx_psh;
         ZK_P.index('TYPN');
         ZK_P.prefix(ZK_N.A,'Z',_a,1);
         {? ZK_P.first
         ||
            _zb:=ZK_P.N().CB='T';
            _nwal:=exec('bl_nwal','ustawienia');
            {!
            |?
               {? _b=1
               ||
                  ZK_P.WAL:=ZK_N.WAL;
                  ZK_P.KRS:=ZK_N.KRS;
                  _walj:=exec('FindInSet','#table','WAL','WAL_SYM',TAZ.WAL().KOD,,"WAL.J",,,1);
                  {? ZK_P.WAL<>_nwal & ZK_P.CWAL>0
                  ||
                     ZK_P.CENA:=ZK_P.CWAL*ZK_P.KRS/_walj $2
                  |? ZK_P.WAL<>_nwal & ZK_P.CWAL=0 & ZK_P.KRS>0
                  ||
                     ZK_P.CWAL:=ZK_P.CENA/ZK_P.KRS*_walj $2;
                     ZK_P.CENA:=ZK_P.CWAL*ZK_P.KRS/_walj $2
                  |? ZK_P.WAL=_nwal
                  ||
                     ZK_P.CWAL:=0
                  ?}
               ?};
               exec('war_pozz','zamsiw_poz');
               _netto+=ZK_P.NETTO; _brutto+=ZK_P.BRUTTO; _nettow+=ZK_P.NETTOW; _bruttow+=ZK_P.BRUTTOW;
               _net+=ZK_P.NET; _brt+=ZK_P.BRT; _netw+=ZK_P.NETW; _brtw+=ZK_P.BRTW;

               {? ZK_P.TAR_H
               || TAR_H.use(ref_name(ZK_P.TAR_H));
                  {? ZK_P.TAR_H().TAP || TAP.use(ref_name(ZK_P.TAR_H().TAP)) ?}
               ?};
               {? _gratisy='N' & ZK_P.TAR_H().TAP().TAR().SD='G' || _gratisy:='T' ?};
               ZK_P.put & ZK_P.next
            !}
         ?};
         ZK_P.cntx_pop;
         TAR.cntx_pop();
         TAP.cntx_pop();
         TAR_H.cntx_pop
      ?};
      _dan:=exec('obl_prea','zamsiw_nag',_a,_c);
      ZK_N.get();
      ZK_N.PR:=_dan[1]; ZK_N.E:=%_dan[2];
      {? _d=0
      ||
         ZK_N.NETTO:=_netto; ZK_N.BRUTTO:=_brutto; ZK_N.NETTOW:=_nettow; ZK_N.BRUTTOW:=_bruttow;
         ZK_N.NET:=_net; ZK_N.BRT:=_brt; ZK_N.NETW:=_netw; ZK_N.BRTW:=_brtw
      ?};
      ZK_N.GRATISY:=_gratisy;
      ZK_N.put();
      VAR_DEL.delete('_dan');
      {? ZK_Z.R_LOCK<>'T' | ZK_Z.R_LOCK='T' & ZK_Z.ZK_NLOCK<>$ZK_N.ref() || ZK_N.r_unlock() ?};
      {? _lock || ZK_N.r_unlock() ?}
   ?};
   ZK_N.cntx_pop;
   ZK_N.get();
   exec('st_licz_pop','ceny')
?};
_netto


\aktznzkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizuje statusy zamowien wg podanej tabeli
::   WE: _a - tabela ref-ow sql-owych lub ZK_N.ref() w przypadku _b=1
::       [_b] - domyslnie 0 1-ref ZK_N
::  OLD: \aktznzkn/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

ZK_N.cntx_psh();
{? {? ~_b || _a.clear(); _a.first() || 1 ?}
|| {!
   |? ZK_N.clear();
      {? {? ~_b
         || (_rn:=BB.sqlint(_a.ZKN); _rn>0) & ZK_N.r_lock(1,1,1,_rn,form(8+_a.ZKN)) & ZK_N.seek(_a.ZKN)
         || (#_a)>0 & ZK_N.r_lock(1,1,1,#_a,ref_name(_a)) & ZK_N.seek(_a)
         ?} & ZK_N.r_lock(1,1,1)
      || _znb:={? exec('FindInSet','#table','ZK_P','ZNB','T',ZK_N.ref())<>null || 'T' || 'N' ?};
         _znw:={? exec('FindInSet','#table','ZK_P','ZNW','T',ZK_N.ref())<>null || 'T' || 'N' ?};
         _znr:={? exec('FindInSet','#table','ZK_P','ZNR','T',ZK_N.ref())<>null || 'T' || 'N' ?};
         _zbb:={? exec('FindInSet','#table','ZK_P','ZBB','T',ZK_N.ref())<>null || 'T' || 'N' ?};
         _zbz:={? exec('FindInSet','#table','ZK_P','ZBZ','T',ZK_N.ref())<>null || 'T' || 'N' ?};
         _rea:={? _znb='T' | _zbb='T' || 'T' || 'N' ?};
         _brk:={? _znw='T' | _zbz='T' || 'T' || 'N' ?};

         _dan:=exec('obl_limi','zamsiw_nag',ZK_N.ref());
         _end:=_dan[3]<>0;

         {? (ZK_N.ZNB<>_znb) | (ZK_N.ZNW<>_znw) | (ZK_N.ZNR<>_znr) | (ZK_N.ZBB<>_zbb)
          | (ZK_N.ZBZ<>_zbz) | (ZK_N.REA<>_rea) | (ZK_N.BRK<>_brk) | ZK_N.LIL<>_dan[1] | ZK_N.MIL<>_dan[2]
         || ZK_N.ZNB:=_znb;
            ZK_N.ZNW:=_znw;
            ZK_N.ZNR:=_znr;
            ZK_N.ZBB:=_zbb;
            ZK_N.ZBZ:=_zbz;
            ZK_N.REA:=_rea;
            ZK_N.BRK:=_brk;
            ZK_N.LIL:=_dan[1];
            ZK_N.MIL:=_dan[2];
            ZK_N.put()
         ?};
         obj_del(_dan);

         _dan:=exec('obl_prea','zamsiw_nag',ZK_N.ref());
         ZK_N.get();
         _pr:=_dan[1];
         _etap:=%_dan[2];
         _stan:=exec('zwr_etap','zamsiw_nag',_dan[2]);

         {? (ZK_N.PR<>_pr) | (ZK_N.E<>_etap) | (ZK_N.STAN<>_stan)
         ||
:: ustalenie statusu abstore
            exec('abs_s_up','abstore_fun',ZK_N.ref(),_stan,ZK_N.STAN);

            ZK_N.PR:=_pr;
            ZK_N.E:=_etap;
            ZK_N.STAN:=_stan;
            ZK_N.put(1)
         ?};
         obj_del(_dan);
         {? ~exec('lock_blk','zamsiw_nag',ZK_N.ref()) || ZK_N.r_unlock() ?}
      ?};
      {? ~_b || _a.next() || 0 ?}
   !}
?};
ZK_N.cntx_pop();
~~


\obl_limi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: oblicz licznik i mianownik ... dla procentu realizacji realizacji
::   WE: _a - ref ZK_N
::   WY: tabela danych lil i mil
::  OLD: \obl_limi/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new(3);
_wyn[1]:=0; _wyn[2]:=0; _wyn[3]:=0;
ZK_N.cntx_psh();
ZK_P.cntx_psh();
ZK_P.index('NAG');
ZK_P.prefix(_a);
{? ZK_P.first()
|| {!
   |? {? ZK_P.END
      || _wyn[3]+=1
      || _cn:={? ZK_P.RODZ='W' | ZK_P.CN=0 || 1 || ZK_P.CN ?};
         _wyn[2]+=(_cn*ZK_P.ILZ)$2;
         _wyn[1]+=(_cn*(ZK_P.ILZ-ZK_P.ILP))$2
      ?};
      ZK_P.next()
   !}
?};
ZK_N.cntx_pop();
ZK_P.cntx_pop();
_wyn


\init_blk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: init dla tabeli blokowanych zamowien
::  OLD: \init_blk/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__blkrez');
__blkrez:=tab_tmp(1,'SQL','STRING[16]','');
~~


\add_blk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: dodanie zapis do tabeli blokad
::   WE: _a - ZK_N.ref()
::   WY: 1 - zablokowano
::  OLD: \add_blk/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ZK_N.cntx_psh();
{?( #_a)>0 & (ZK_N.clear(); ZK_N.r_lock(1,1,1,#_a,ref_name(_a)) & ZK_N.seek(_a)) & ZK_N.r_lock(1,1,1)
|| _wyn:=1;
   __blkrez.clear();
   {? ~__blkrez.find_key($ZK_N.ref())
   || __blkrez.blank();
      __blkrez.SQL:=$ZK_N.ref();
      __blkrez.add(1)
   ?}
?};
ZK_N.cntx_pop();
_wyn


\del_blk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: usuniecie zapisu z tabeli blokad
::   WE: _a - ZK_N.ref()
::  OLD: \del_blk/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh();
{? (ZK_N.clear(); ZK_N.seek(_a)) & ZK_N.r_lock(1,1,1)
|| ZK_N.r_unlock();
   __blkrez.clear();
   {? __blkrez.find_key($_a) || __blkrez.del() ?}
?};
ZK_N.cntx_pop();
~~


\lock_blk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy jest blokada juz wczesniej zalozona
::   WE: _a - ZK_N.ref()
::   WY: 1-tak 0-nie
::  OLD: \lock_blk/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? var_pres('__blkrez')=118
|| __blkrez.clear();
   _wyn:=__blkrez.find_key($_a)
?};
_wyn


\done_blk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: done dla tabeli blokowanych zamowien - usuniecie blokad
::  OLD: \done_blk/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh();
__blkrez.clear();
{? __blkrez.first()
|| {!
   |? ZK_N.clear();
      {? ZK_N.seek(__blkrez.SQL,form(8+__blkrez.SQL)) || ZK_N.r_unlock() ?};
      __blkrez.next()
   !}
?};
ZK_N.cntx_pop();
VAR_DEL.delete('__blkrez');
~~


\war_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: oblicza wartosc zamowienia
::   WE: _a - ref zamowienia
::  OLD: \war_zam/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_netto:=_brutto:=_nettow:=_bruttow:=_net:=_brt:=_netw:=_brtw:=0;
BEER.NET_REA:=0; BEER.BRT_REA:=0;

ZK_N.cntx_psh();
ZK_P.cntx_psh();
ZK_P.prefix();
{? ZK_N.seek(_a)
||
   ZK_N.get();
   ZK_P.index('TYPN');
   ZK_P.prefix('A','Z',_a,1);
   {? ZK_P.first()
   ||
      {!
      |?
         exec('war_pozz','zamsiw_poz');
         _netto+=ZK_P.NETTO;
         _brutto+=ZK_P.BRUTTO;
         _net+=ZK_P.NET;
         _brt+=ZK_P.BRT;
         _nettow+=ZK_P.NETTOW;
         _bruttow+=ZK_P.BRUTTOW;
         _netw+=ZK_P.NETW;
         _brtw+=ZK_P.BRTW;
         ZK_P.next()
      !}
   ?};
   ZK_N.NETTO:=_netto;
   ZK_N.BRUTTO:=_brutto;
   ZK_N.NET:=_net;
   ZK_N.BRT:=_brt;
   ZK_N.NETTOW:=_nettow;
   ZK_N.BRUTTOW:=_bruttow;
   ZK_N.NETW:=_netw;
   ZK_N.BRTW:=_brtw;
   ZK_N.put(1)
?};
ZK_P.cntx_pop();
ZK_N.cntx_pop();
BEER.NET_REA:=_netto-_net $2;
BEER.BRT_REA:=_brutto-_brt $2


\bl_nzk_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Wartosc poczatkowa ZK_N.NR
::  OLD: \bl_zkn_n/zk.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.MW:='Z';
0


\zkn_dp_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: przed redakcją ZK_N.DP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
DPOZ.WPR_D:=fld();
exec('posDate','#field',3)


\poz_dp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji daty przyjecia
::   WY: czy opuscic redakcje pola
::  OLD: \poz_dp/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? ZK_N.DP=date(0,0,0)
|| FUN.info('Data przyjęcia zamówienia nie może być zerowa.'@);
   _wyn:=0
|? ZK_N.T().R='W' & ZK_N.DT=date(0,0,0)
|| ZK_N.DT:=ZK_N.DP+{? ZK_N.T().ILREA>0 || ZK_N.T().ILREA || 0 ?}
|? ZK_N.DT<ZK_N.DP
|| ZK_N.DT:=ZK_N.DP;
   {? ZK_N.PL_DATA=date(0,0,0) | ZK_N.PL_DATA<ZK_N.DP | -menu_txt()<>'popraw'
   || ZK_N.PL_DATA:=ZK_N.DT
   ?}
?};
{? _wyn & ZK_N.T().R='W'
||
:: kontrola dat zlecen
   {? ZK_N.ZL<>null & ZK_N.ZL().OD>ZK_N.DP
   || FUN.info('Zlecenie powołane jest z datą późniejszą niż data dokumentu.'@);
      _wyn:=0
   |? (1+menu_txt())='P'
   || ZK_P.cntx_psh();
      ZK_P.index('TYPN');
      ZK_P.prefix('A',BEER.TYP,BEER.ZK_N,1);
      {? ZK_P.first()
      || {!
         |? {? ZK_P.ZL<>null & ZK_P.ZL().OD>ZK_N.DP
            || FUN.info('Zlecenie powołane jest z datą późniejszą niż data dokumentu.'
                        '\nDotyczy pozycji nr %1.'@[$ZK_P.POZ]);
               _wyn:=0
            ?};
            _wyn=1 & ZK_P.next()
         !}
      ?};
      ZK_P.cntx_pop()
   ?}
?};
{? _wyn
|| {!
   |? _wyn0:=exec('f_kh_gv_sprawdz','faktury_nag1','ZK_N',0,1);
      _wyn:=_wyn0.WYNIK;
      &_wyn0;
      _wyn<>0 & _wyn<>1
   !}
?};
{? _wyn & DPOZ.WPR_D<>fld() || exec('akt_tz','faktury_plat') ?};
_wyn


\po_zkndt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [TS] [12.30]
:: OPIS: po redakcji pola ZK_N.DT
::  OLD: \po_zkndt/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_N.PL_DATA=date(0,0,0) | -menu_txt()<>'popraw'
|| ZK_N.PL_DATA:=ZK_N.DT
?};
{? DPOZ.WPR_D<>fld() || exec('akt_tz','faktury_plat') ?};
1


\pw_zknt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietlenie pol dla ZK_N, ZK_P, ZK__RN
::   WE: _a - rodzaj dla ktorego wyswietlamy
::  OLD: \pw_zknt/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_N.T().R=_a
|| ''
|| {? ZK_N.T().R='W'
   || ''
   || exec('findfnv','#color')
   ?}
?}


\prz_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: przed redakcja ZK_N.KH
::  OLD: \prz_kh/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_N.PROJEKTY
   & ZK_N.KH
   & ZK_N.T().PROJZKH='T'
|| return(0)
?};

ZK_Z.KH:=ZK_N.KH;
1


\poz_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: po wyborze kontrahenta na zamówieniu
::   WE: [_a] - 0(domyślnie) po polu 1-wg pola ZK_N.KH
::  OLD: \poz_kh/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};

{? _tryb
|| ZK_Z.KH:=null();
   _fld:=ZK_N.KH
|| _f_nip_pole:=(cur_tfld()=INTRAST & cur_afld()='F_NIP');
   {? ~_f_nip_pole & fld()=null
   || exec('find_sql','#table','KH','SNIP;KOD;NAZ;SKR;MIASTO;UL;DOM;LOKAL','','ZK_N.KH','13;5;25;10;15','RED','','')
   ?};
   {? _f_nip_pole | fld()=ZK_N.PROJEKTY
   || _fld:=ZK_N.KH
   || _fld:=fld()
   ?}
?};
{? _tryb
|| _wyn:=1
|| {!
   |? _wyn:=exec('ae_kh','kontrahent',,_fld);
      {? _wyn
      || _wyn0:=exec('f_kh_gv_sprawdz','faktury_nag1','ZK_N',0,1);
         _wyn:=_wyn0.WYNIK;
         &_wyn0;
         {? _wyn=-1
         || _fld:=ZK_N.KH
         ?}
      ?};
      _wyn<>0 & _wyn<>1
   !}
?};

{? _wyn
||
   {? ZK_Z.KH<>ZK_N.KH
   ||
      _poz_pl:=0;
      ZK_N.PL:={? XINFO.SLP<>null & _fld<>null()
               || _plat:=exec('sp_plat','kontrahent',_fld);
                  {? _plat=null & ZK_N.PL<>null
                    & FUN.ask('Kontrahent %1 - %2\n'
                              'nie ma przypisanej domyślnej formy płatności.\n'
                              'Czy pozostawić aktualnie podaną na zamówieniu?'@[ZK_N.KH().KOD,ZK_N.KH().NAZ])
                  || _poz_pl:=1;
                     ZK_N.PL
                  || _plat
                  ?}
               || null
               ?};
      {? ZK_N.DT=date(0,0,0)
      || ZK_N.DT:=ZK_N.DP+{? ZK_N.T().ILREA>0 || ZK_N.T().ILREA || 0 ?};
         {? ZK_N.PL_DATA=date(0,0,0) | ZK_N.PL_DATA<ZK_N.DP
         || ZK_N.PL_DATA:=ZK_N.DT
         ?}
      ?};
      exec('zkn_wal_set','zamsiw_nag',1);
      FZ.FORMAPLA:=ZK_N.PL().KOD;
      FZ.PL:=ZK_N.PL;
      FZ.TERMPLAT:={? ~_poz_pl
                   || exec('term_plat','faktury_plat',{? _tryb || 'PL' || '' ?},'N',ZK_N.ref())
                   || FZ.TERMPLAT
                   ?};
      ZK_N.TZ:=FZ.TERMPLAT;
      exec('plat_one','faktury_plat',ZK_N.ref());
      {? Plugin.runnable('ZWS_HAN_001')
      || ZK_N.HAN:=Plugin.run('ZWS_HAN_001','ZK_N')
      || ZK_N.HAN:=__War_f('KH_DOD','HAN',ZK_N.KH)
      ?};
      ZK_N.RAB:=exec('sp_plat','kontrahent',_fld,1);
      {? TAZ.RAB_N_BE=0 || TAZ.RAB_N_BE:=ZK_N.RAB ?};
      exec('spr_rab','ceny',ZK_N.RAB,,,'zknag');
      {? KH.DREA<>0 | (KH.DREA=0 & ZK_N.DT<>date(0,0,0))
      || {? ZK_N.DT=date(0,0,0) | _tryb | (ZK_N.DT<>(ZK_N.DP+KH.DREA)
          & FUN.ask('Domyślna liczba dni na realizację zamówienia dla kontrahenta %1 '
                    'wynosi: %2.\n'
                    'Wprowadzona na zamówieniu liczba dni to: '@[KH.KOD,form(KH.DREA,,0)]+
                    {? ZK_N.DT>=ZK_N.DP || form(ZK_N.DT-ZK_N.DP,,0) || '0' ?}+'.\n\n'+
                    {? ~KH.DREA
                    || 'Czy usunąć planowany termin realizacji?'@
                    || 'Czy zmienić planowany termin realizacji na domyślną liczbę dni?'@
                    ?}))
         || ZK_N.DT:={? ~KH.DREA || ZK_N.DT || ZK_N.DP+{? KH.DREA>0 || KH.DREA || 0 ?} ?}
         ?}
      |? KH.DREA=0 & ZK_N.DT=date(0,0,0)
      || ZK_N.DT:=ZK_N.DP+{? ZK_N.T().ILREA>0 || ZK_N.T().ILREA || 0 ?}
      ?};

::    typ rabatu
      exec('rab_typ_bd','ceny','ZK_N');
      {? DPOZ.WPR_R
      || ZK_N.RAB_TYP:={? ZK_N.KH().RAB_TYP='' || exec('rab_typ_bl','ceny') || ZK_N.KH().RAB_TYP ?}
      ?};
::    NIP UE
      exec('zkn_nip_ue','zamsiw_nag');
:: NIP
      {? ZK_N.KH
      || {? ZK_N.KH().SNIP=ZK_N.KH().PESEL
         || INTRAST.F_NIP:=''
         || INTRAST.F_NIP:=ZK_N.KH().SNIP
         ?}
      || INTRAST.F_NIP:=''
      ?}
   ?};
   {? ~_tryb
   || exec('set_efld_opt','zamsiw_nag');
::    opcje przycisków
      exec('zknag_win_edit_btn_opt','zamsiw_nag')
   ?}
?};
_wyn


\wz_zk_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: wzorzec ZK_N.ODB
::  OLD: \wz_zk_kh/zk.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.KH:=ZK_N.KH;
exec('kh_odb_f_set','kontrahent');
''


\be_zkodb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: przed redakcja odbiorcy na zamowieniu
::  OLD: \be_zkodb/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=~(ZK_N.KH=null);
_wyn


\pr_mgzkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdza czy sa pozycje na zamowieniu zarezerwowane wg dostaw
::   WY: 0-sa 1-nie ma
::  OLd: \pr_mgzkn/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
ZK_P.cntx_psh();
ZK_P.index('TYPN');
ZK_P.prefix('A','Z',ZK_N.ref(),1);
{? ZK_P.first()
|| {!
   |? _wyn:=~exec('sprwgdst','zamsiw_poz',ZK_N.ref(),ZK_P.POZ);
      _wyn & ZK_P.next()
   !}
?};
ZK_P.cntx_pop();
{? _wyn || exec('filtr_mg','zamsiw_nag',ZK_N.T().R='W',ZK_N.MD().SYM) ?};
_wyn


\filtr_mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: ustawia filtr na magazyny do realizacji zamowienia
::   WE: [_a] - 0(domyslnie)-zamowienie sprzedazy 1-zamowienie wewnetrzne
::       [_b] - symbol drugiego magazynu do przesuniecia jesli wypelniony - to wypada z dziedziny
::       [_c] - 1-bez paletowego 0(domyślnie)-z paletami jak są uprawnienia
::  OLD: \filtr_mg/zkw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};
_nopal:={? var_pres('_c')=type_of(0) || _c || 0 ?};

MG.f_clear();
MG.clear();
:: sprawdzam czy uprawnienia ogolne czy uzytkownika
USERS_UP.cntx_psh();
USERS_UP.index('MG');
USERS_UP.prefix(OPERATOR.USER,'ZA'+{? ~_a || 'M' || 'W' ?},ST.ODDZ_KOD);
_upr_us:=USERS_UP.first();
USERS_UP.cntx_pop();
{? _upr_us
|| {? ~_a
   || MG.f_set('SYM,NAZ','join USERS_UP','USERS_UP.USERS=:_a and USERS_UP.AKR=\'ZAM\' and \"MG\".ODDZ=\':_b\''
       +{? _nopal || ' and \"MG\".PAL=\'N\'' || '' ?}
       ,OPERATOR.USER,ST.ODDZ)
   || {? _b=''
      || MG.f_set('SYM,NAZ','join USERS_UP','USERS_UP.USERS=:_a and USERS_UP.AKR=\'ZAW\' and \"MG\".ODDZ=\':_b\''
          +{? _nopal || ' and \"MG\".PAL=\'N\'' || '' ?}
          ,OPERATOR.USER,ST.ODDZ,)
      || MG.f_set('SYM,NAZ','join USERS_UP','USERS_UP.USERS=:_a and USERS_UP.AKR=\'ZAW\' and \"MG\".ODDZ=\':_b\' and \"MG\".SYM<>\':_c\''
          +{? _nopal || ' and \"MG\".PAL=\'N\'' || '' ?}
          ,OPERATOR.USER,ST.ODDZ,_b)
      ?}
   ?}
|| USERS_UP.cntx_psh();
   MG.f_set('SYM,NAZ','','',OPERATOR.USER,ST.ODDZ);
   {? MG.f_first()
   || {!
      |? {? _nopal & MG.PAL='T'
         || MG.f_del()
         || USERS_UP.index('MG');
            USERS_UP.prefix(null,'ZA'+{? ~_a || 'M' || 'W' ?},ST.ODDZ_KOD,MG.ref());
            {? USERS_UP.first()
            || {? _b<>'' & _b=MG.SYM
               || MG.f_del()
               || MG.f_next()
               ?}
            || MG.f_del()
            ?}
         ?}
      !}
   ?};
   USERS_UP.cntx_pop()
?};
~~


\ae_zk_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: Sprawdza czy pole waluta na zamowieniu jest prawidlowo wypelnione
::   WY: czy mozna opuscic redakcje pola
::  OLD: \ae_zk_wal/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? chk_fld()
|| {? ZK_N.WAL=exec('bl_nwal','ustawienia') | DPOZ.WPR_S<>$ZK_N.WAL
   ||
      ZK_N.SWAL:=2;
      ZK_N.KRS:=0;
      ZK_N.DTK:=date(0,0,0);
      ZK_N.BTK:='';
      ZK_N.RTK:=0;
      ZK_N.NTK:=''
   ?};
   _wyn:=1
?};
exec('set_efld_opt','zamsiw_nag');
_wyn


\pr_typsz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: ustawia filtr na typy dokumentow
::  OLD: \pr_typsz/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
TYPYSP.f_clear();
_where:=
   "ZAL_ROZ<>'S' and KOR='N' and ZAL='N' and ZAK='N' and "+{? ZK_N.CB='T' || "FIS='T'" || "FIS='N'" ?}
   +" and "+{? ZK_N.SPP='T' || "SPP='T'" || "SPP='N'" ?};
exec('tsp_upr','typysp',_where,2,0,0);
1


\be_zkkon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: przed redakcja ZK_N.ZKON
::  OLD: \be_zkkon/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_Z.ZKON:=ZK_N.ZKON;
1


\ae_zkkon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2004]
:: OPIS: Po redakcji pola ZK_N.ZKON
::  OLD: \ae_zkkon/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()<>null & ZK_Z.ZKON<>ZK_N.ZKON & ZK_N.T().R='Z'
|| {? ZK_N.KH<>ZK_N.ZKON().KH
   || {? ZK_N.PROJEKTY & ZK_N.T().PROJZKH='T'
         & ZK_N.PROJEKTY().KH & ZK_N.ZKON().KH
         & ZK_N.PROJEKTY().KH<> ZK_N.ZKON().KH
      || FUN.info('Inny kontrahent na projekcie i na kontrakcie.'@
            +'\n\nProjekt: %1'@[exec('record','#to_string',ZK_N.PROJEKTY().KH)]
            +'\nKontrakt: %1'@[exec('record','#to_string',ZK_N.ZKON().KH)]
            +'\n\nObowiązuje kontrahent z projektu.'@)
      || ZK_N.KH:=ZK_N.ZKON().KH;
         exec('zkn_nip_ue','zamsiw_nag');
         _poz_pl:=0;
         ZK_N.PL:={? XINFO.SLP<>null
                  || _plat:=exec('sp_plat','kontrahent',ZK_N.KH);
                     {? _plat=null & ZK_N.PL<>null
                       & FUN.ask('Kontrahent %1 - %2\n'
                                 'nie ma przypisanej domyślnej formy płatności.\n'
                                 'Czy pozostawić aktualnie podaną na zamówieniu?'@[ZK_N.KH().KOD,ZK_N.KH().NAZ])
                     || _poz_pl:=1;
                        ZK_N.PL
                     || _plat
                     ?}
                  || null
                  ?};
         {? ZK_N.DT=date(0,0,0)
         || ZK_N.DT:=ZK_N.DP+{? ZK_N.T().ILREA>0 || ZK_N.T().ILREA || 0 ?};
            {? ZK_N.PL_DATA=date(0,0,0) | ZK_N.PL_DATA<ZK_N.DP
            || ZK_N.PL_DATA:=ZK_N.DT
            ?}
         ?};
         FZ.FORMAPLA:=ZK_N.PL().KOD;
         FZ.PL:=ZK_N.PL;
         FZ.TERMPLAT:={? ~_poz_pl || exec('term_plat','faktury_plat',,'N',ZK_N.ref()) || FZ.TERMPLAT ?};
         ZK_N.TZ:=FZ.TERMPLAT;
         exec('plat_one','faktury_plat',ZK_N.ref());
         ZK_N.RAB:=exec('sp_plat','kontrahent',ZK_N.KH,1);
         ZK_N.DT:={? KH.DREA=0
                  || ZK_N.DP+{? ZK_N.T().ILREA>0 || ZK_N.T().ILREA || 0 ?}
                  || ZK_N.DP+{? KH.DREA>0 || KH.DREA || 0 ?}
                  ?}
      ?}
   ?};
   {? ZK_N.ZKON().HAN<>null & ZK_N.HAN<>ZK_N.ZKON().HAN
   || ZK_N.HAN:=ZK_N.ZKON().HAN
   |? ZK_N.ZKON().HAN=null
   || ZK_N.HAN:=__War_f('KH_DOD','HAN',ZK_N.KH)
   ?};
:: opcje przycisków
   exec('zknag_win_edit_btn_opt','zamsiw_nag')

?};
1


\bl_typza
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Wartosc poczatkowa ZK_N.T
::  OLD: \bl_typza/zk.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.TYPYZAM


\bl_cbzkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: wartosc poczatkowa dla pola ZK_N.CB
::  OLD: \bl_cbkn/defin.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.FIS:=exec('get','#params',300150,2);
BEER.FIS


\pw_cbzkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: przed wyswietleniem ZK_N.CB
::  OLD: \pw_cbkn/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')=''
|| {? exec('FindInSet','#table','ZK_P','NAG',ZK_N.ref())=null & ZK_N.TR=null
   || ''
   || exec('findfnv','#color')
   ?}
|| ''
?}


\pr_cbzkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: przed redakcja ZK_N.CB
::  OLD: \pr_cbkn/defin.fml
::----------------------------------------------------------------------------------------------------------------------
exec('FindInSet','#table','ZK_P','NAG',ZK_N.ref())=null & ZK_N.TR=null


\po_cbzkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: po redakcji ZK_N.CB
::  OLD: \po_cbkn/defin.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.FIS:=ZK_N.CB;
1


\zk_n_kolor_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Przed wyswietl pola ZK_N.KOLOR
::   WY: String koloru
::  OLD: \zk_n_kolor_bd/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=ZK_N.KOLOR+','+ZK_N.KOLOR;
_wyn


\prwydzkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola ZK_N.WYD
::  OLD: \prwydzkn/zkw.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_N.PROJEKTY
   & ZK_N.WYD
   & ZK_N.T().PROJWJO='T'
|| return(0)
?};

_prod:=exec('tte_lic','tte');
_czyzkp:=(1+menu_txt())<>'d' & exec('FindInSet','#table','ZK_P','NAG',ZK_N.ref());

XINFO.SLWYDZIA();

{? ZK_N.ZL<>null
|| {? ~_czyzkp
   || {? (ZK_N.T().TYPYDOK<>null & ZK_N.T().TYPYDOK().WYR='T') | _prod='N'
      || ZK_N.WYD:=ZK_N.ZL().JORG;
         0
      || {? ~exec('chk_wyd','magdok_nag',ZK_N.WYD,ZK_N.ZL,0)
         || ZK_N.WYD:=ZK_N.ZL().JORG
         ?};
         1
      ?}
   || 0
   ?}
|| ZK_N.WYD:=null;
   0
?}


\powydzkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcji pola ZK_N.WYD
::  OLD: \powydzkn/zkw.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_N.ZL<>null
|| {? ZK_N.ZL().JORG=ZK_N.WYD
   || 1
   || exec('chk_wyd','magdok_nag',ZK_N.WYD,ZK_N.ZL,1)
   ?}
?}


\pr_mdzkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: ustawia filtr dla wyboru magazynu
::  OLD: \pr_mdzkn/zkw.fml
::----------------------------------------------------------------------------------------------------------------------
_p600400:=exec('get','#params',600400,2);
_par:=exec('get','#params',600401,2)='T';

{? ZK_N.T().TYPYDOK().TD<>'' | ZK_N.T().TYPYDOK=null
|| _only:={? ~_par & ZK_N.MG<>null() || ZK_N.MG().IL='T' || -1 ?};
   MG.f_clear();
   MG.clear();
   {? _p600400='T'
   || MG.f_set('SYM,NAZ','join USERS_UP','USERS_UP.USERS=:_a and USERS_UP.AKR=\'MG\' ',OPERATOR.USER)
   || MG.f_set('SYM,NAZ','join USERS_UP','USERS_UP.USERS=:_a and USERS_UP.AKR=\'MG\' and MG.ODDZ=\':_b\'',OPERATOR.USER,ST.ODDZ)
   ?};
   {? MG.f_first()
   || {!
      |? {? MG.ref()=ZK_N.MG | (_only>=0 & (MG.IL='T')<>_only)
         || MG.f_del()
         || MG.f_next()
         ?}
      !}
   ?};
   1
|| 0
?}


\blusrrea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wartosc poczatkowa uzytkownika realizujacego
::  OLD: \blusrrea/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_N.US


\pw_zre
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem BEER.ZRE
::  OLD: \pw_zre/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.ZRE:={? ZK_N.ZNR='T' || 'T' || 'N' ?}


\pw_rea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem BEER.REA
::  OLD: \pw_rea/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.REA:={? ZK_N.ZNB='T' | ZK_N.ZBB='T' || 'T' || 'N' ?}


\pw_brk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem BEER.BRK
::  OLD: \pw_brk/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.BRK:={? ZK_N.ZNW='T' | ZK_N.ZBZ='T' || 'T' || 'N' ?}


\zkn_pl_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Domyslne wartosci pol zwiazanych z planowaniem dla naglowka zamowienia
::       (blank pol ZK_N.PL_DIR, PL_FORCE)
::  OLD: \zkn_pl_bl/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_cur_afld:=cur_afld();
{? _cur_afld='PL_DIR'
|| BEER.TYPYZAM().PL_DIR
|? _cur_afld='PL_FORCE'
|| BEER.TYPYZAM().PL_FORCE
?}


\zkn_pl_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Przed wyswietleniem pol ZK_N.PL* (zwiazanych z planowaniem): PL_DIR, PL_DATA, PL_TIME, PL_FORCE
::  OLD: \zkn_pl_bd/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || return(1) ?};
_prod:=exec('tte_lic','tte')='T';
_cur_afld:=cur_afld();
_color:=exec('findfnrd','color');
_win:=cur_win(1,1);
_edit:=(2+cur_kwin())='e_';

{? _prod
|| {? _edit
   || ZK_N.efld_opt('RED','label_color=',,_cur_afld);
      ZK_N.efld_opt('REDW','label_color=',,_cur_afld)
   ?}
|| {? _edit
   || ZK_N.efld_opt('RED','label_color='+((_color*',')-_color),,_cur_afld);
      ZK_N.efld_opt('REDW','label_color='+((_color*',')-_color),,_cur_afld)
   ?}
?};

{? _cur_afld='PL_DIR'
|| _prod
|| {? _prod || 1 || _color ?}
?}


\zkn_pl_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Przed redakcja pol ZK_N.PL* (zwiazanych z planowaniem): PL_DIR, PL_DATA, PL_TIME, PL_FORCE
::  OLD: \zkn_pl_be/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('tte_lic','tte')='T'


\zkn_pl_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Po redakcji pol ZK_N.PL* (zwiazanych z planowaniem): PL_DIR, PL_DATA, PL_TIME
::  OLD: \zkn_pl_ae/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_cur_afld:=cur_afld();
{? _cur_afld='PL_TIME'
|| exec('valid_time','#field',ZK_N.PL_TIME)
|| 1
?}


\zkn_pl_fd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Format wyswietlania pol ZK_N.PL* (zwiazanych z planowaniem): PL_DIR, PL_DATA, PL_TIME
::  OLD: \zkn_pl_fd/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('tte_lic','tte')='T'
|| 'empty=0'
|| 'empty=1'
?}


\zakr_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Pobranie wartości zmiennej ZAKR
::----------------------------------------------------------------------------------------------------------------------
_user:=exec('name','users');
OZ.index('OZ');
OZ.prefix(_user,_user);
{? OZ.first()
|| ZAKR.KH:=OZ.ZK_KH;
   ZAKR.HAN:=OZ.ZK_HAN
?}


\zakr_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Ustawienie zakresu zamówień sprzedaży
::   WE: [_a] - 1-(domyślnie) zmiana wyłącznie prefiksu, 0- nie
::----------------------------------------------------------------------------------------------------------------------
_prf:={? var_pres('_a')=type_of(0) || _a || 1 ?};

_user:=OPERATOR.USER().KOD;
OZ.index('OZ');
OZ.prefix(_user,_user);
{? ~OZ.first()
|| OZ.blank();
   OZ.USER:=_user;
   OZ.US:=OPERATOR.USER;
   OZ.add()
?};
OZ.ZK_KH:=ZAKR.KH; OZ.ZK_HAN:=ZAKR.HAN; OZ.ZK_US:={? ZAKR.US=null || 2 || 1 ?};
OZ.put(1);
no_msg(1); exec('zakr_ind','zamsiw_nag',,_prf); _err:=errno(); no_msg(0)


\zakr_ind
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: ustawia zakres na zamowieniach dostaw
::   WE: _a - 0 - bez planu, 1 - z prefixem na plan (tylko na plan)
::          UWAGA
::          Parametr _a - niewykorzystywany
::       [_b] - 1-(domyślnie) zmiana wyłącznie prefiksu, 0- nie
::  OLD: \zakr_set/zd.fml
::  OLD: \zakr_ind/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_only:={? var_pres('_b')=type_of(0) || _b || 1 ?};

BEER.ZAKR:={? ZAKR.ARCH_ROK<>''
           || 'ARCHIWALNE Z '+ZAKR.ARCH_ROK+' ROKU '
           || 'WSZYSTKIE  '
           ?};
_maska:={? ZAKR.ARCH_ROK='' || '__' || ZAKR.ARCH_ROK+2 ?};
_zm_maski:=(ZK_N.name+2)<>_maska;
{? _zm_maski || exec('openz','open_tab',ST.ODDZ+_maska) ?};
ZK_N.clear;
_ind:={? BEER.TYPYZAM<>null()
      || '''T'',,,''T'',''R'',,'
      || '''T'',''R'',,'
      ?};
_prf:={? BEER.TYPYZAM<>null || 'BEER.TYPYZAM,''Z'',' || '''Z'',' ?};

{? ZAKR.KH<>null
|| _ind+='''KH'',,,';_prf+='ZAKR.KH,';
   BEER.ZAKR+=' kontr. '+ZAKR.KH().KOD+' | '
?};
{? ZAKR.HAN<>null
|| _ind+='''HAN'',,,';_prf+='ZAKR.HAN,';
   BEER.ZAKR+=' handlowiec '+ZAKR.HAN().KOD+' | '
?};
{? ZAKR.US<>null
|| _ind+='''US'',,,';_prf+='ZAKR.US,';
   BEER.ZAKR+=' użytkownik '+ZAKR.US().KOD+' | '
?};
{? ZAKR.PROJEKTY<>null
|| _ind+='''PROJEKTY'',,,';_prf+='ZAKR.PROJEKTY,';
   BEER.ZAKR+=' projekt '+ZAKR.PROJEKTY().SYM+' | '
?};
_ind+='''SYM'',,,';
BEER.ZAKR:=BEER.ZAKR-2;

{? _ind<>''
|| _ind:=_ind-1;_prf:=_prf-1;
   {? ~_only
   || ZK_N.ndx_drop();
      _ndx:=($('ZK_N.ndx_tmp('''',,'+_ind+')'))();
      ZK_N.index(_ndx)
   ?};
   ($('ZK_N.prefix('+_prf+')'))()
?};
''


\zam_reko
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: akcja rekord dla naglowkow zamowien
::   WY: kod koloru
::  OLD: \zam_reko/zk.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.ZK_N:=ZK_N.ref;
BEER.WG:=ZK_N.WG;
{? ZK_N.A='Z'
|| BEER.ETAP:=exec('zwr_etap','zamsiw_nag',0)
|| BEER.ETAP:=exec('zwr_etap','zamsiw_nag',#ZK_N.E)
?};

{? BEER.ETAP<>ZK_N.STAN & ZK_N.r_lock(1,1,1)
||
:: ustalenie statusu abstore
   exec('abs_s_up','abstore_fun',ZK_N.ref(),BEER.ETAP,ZK_N.STAN);

   ZK_N.STAN:=BEER.ETAP;
   ZK_N.put;
   ZK_N.r_unlock
?};

{? cli_ver()<>'mbasic' || exec('rekprzed','color','ZAM#01') ?}


\pw_nrea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed wyswietleniem zmiennej NREA
::  OLD: \pw_nrea/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_all:=0;
_brk:=0;
_war:=0;
_ref:=ZK_N.ref();
ZK_N.cntx_psh();
ZK_P.cntx_psh();

_poprea:=0;
REZ.cntx_psh();
REZ.index('ZK_NM');
REZ.prefix(_ref,'B');
{? REZ.first() || {! |? _poprea:=REZ.REA='T'; ~_poprea & REZ.next() !} ?};
REZ.cntx_pop();

{? _poprea & ~exec('lock_blk','zamsiw_nag',_ref)
|| ZK_N.cntx_psh();
   {? (ZK_N.clear(); ZK_N.r_lock(1,1,1,#_ref,ref_name(_ref)) & ZK_N.seek(ZK_N.ref())) & ZK_N.r_lock(1,1,1)
   || ZK_N.cntx_psh();
      ZK_P.cntx_psh();
      ZK_P.index('TYPN');
      ZK_P.prefix('A','Z',ZK_N.ref(),1);
      {? ZK_P.last()
      || {! |? exec('obl_ilp','zamsiw_rea'); ZK_P.prev() !}
      ?};
      ZK_P.cntx_pop();
      ZK_N.cntx_pop();
      ZK_N.r_unlock()
   ?};
   ZK_N.cntx_pop()
?};

ZK_P.index('TYPN');
ZK_P.prefix('A','Z',ZK_N.ref(),1);

{? ZK_P.first()
|| {!
   |? {? ZK_P.REZ & ZK_P.ILP>0
      || {? ZK_P.ILP>ZK_P.ILRB & ZK_P.ILRA>0
         || _mat:=ZK_P.M;
            _ref:=ZK_P.N;
            _byl:=0;
            ZK_N.cntx_psh();
            ZK_P.cntx_psh();
            ZK_P.index('MAT');
            ZK_P.prefix('A','Z',_mat);
            {? ZK_P.first()
            || {!
               |? {? ZK_P.REZ & ZK_P.N<>_ref & ZK_P.ILRB>0
                  || _war+=1;
                     _byl:=1;
                     0
                  || ZK_P.next()
                  ?}
               !}
            ?};
            ZK_N.cntx_pop();
            ZK_P.cntx_pop();
            {? ~_byl || _brk+=1 ?}
         |? ZK_P.ILRB>0
         || _all+=1
         ?}
      ?};
      ~_war & ZK_P.next()
   !}
?};
ZK_N.cntx_pop();
ZK_P.cntx_pop();
{? _war || _wyn:='W'
|? _brk || _wyn:='N'
|? _all || _wyn:='T'
|| _wyn:=''
?};
BEER.NREA:=_wyn


\pw_nklk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed wyswietleniem zmiennej NKLK
::  OLD: \pw_nklk/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_zam:=ZK_N.T().T+' / '+ZK_N.SYM+' / '+ZK_N.KH().KOD+' / '+form(ZK_N.R,-4,0,'99')+form(ZK_N.M,-2,0,'99');
HISZKP.index('ZAM');
HISZKP.prefix();
{? _zam<>'' & HISZKP.find_key(_zam,_zam)
|| BEER.NKLK:='T'
|| BEER.NKLK:=''
?}


\pw_strea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: Przed wyswietleniem ST_REA
::  OLD: \pw_strea/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
ZAKR.ST_REA:='  REA';
ZK_N.win_efml('INFZ',ZAKR,'ST_REA',,'ICON_BEFORE',"'xwin16.png:144'");
ZK_N.win_efml('INFW',ZAKR,'ST_REA',,'ICON_BEFORE',"'xwin16.png:144'");
''


\pw_stzam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: Przed wyswietleniem ST_ZAM
::  OLD: \pw_stzam/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
ZAKR.ST_ZAM:='  ZAM';
ZK_N.win_efml('INFZ',ZAKR,'ST_ZAM',,'ICON_BEFORE',"'xwin16.png:16'");
ZK_N.win_efml('INFW',ZAKR,'ST_ZAM',,'ICON_BEFORE',"'xwin16.png:16'");
''


\pw_stzre
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: Przed wyswietleniem ST_ZRE
::  OLD: \pw_stzre/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
ZAKR.ST_ZRE:='  ZRE';
ZK_N.win_efml('INFZ',ZAKR,'ST_ZRE',,'ICON_BEFORE',"'xwin16.png:38'");
ZK_N.win_efml('INFW',ZAKR,'ST_ZRE',,'ICON_BEFORE',"'xwin16.png:38'");
''


\pw_stwys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: Przed wyswietleniem ST_WYS
::  OLD: \pw_stwys/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
ZAKR.ST_WYS:='  WYS';
ZK_N.win_efml('INFZ',ZAKR,'ST_WYS',,'ICON_BEFORE',"'xwin16.png:166'");
ZK_N.win_efml('INFW',ZAKR,'ST_WYS',,'ICON_BEFORE',"'xwin16.png:166'");
''


\pw_stzap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: Przed wyswietleniem ST_ZAP
::  OLD: \pw_stzap/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
ZAKR.ST_ZAP:='ZAP';
ZK_N.win_fml('WERALL',ZAKR,'ST_ZAP',,'ICON_BEFORE',"'xwin16.png:37'");
'0:0:0,196:196:196'


\zam_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: dolaczenie nowego zamowienia
::  OLD: \zam_dol/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_context:=~~;
_context_is:=0;
_context_bl:=0;
{? type_of(params_get())=type_of(obj_new('obj'))
|| {? var_pres('context',params_get())=type_of(obj_new('obj'))
   || _context:=params_get().context;
      _context_is:=type_of(_context)=type_of(obj_new('obj'));
      _context_bl:=var_pres('BL',_context)=type_of('') & _context.BL='T'
   ?}
?};

_ok:=1;
ATR.MJS:='ZK_P';
USERS_UP.index('MG');
USERS_UP.prefix(null,'ZA'+{? BEER.TYPYZAM().R='Z' || 'M' || 'W' ?});
{? ~USERS_UP.first()
|| FUN.info({? BEER.TYPYZAM().R='Z'
            || 'Brak magazynów do realizacji zamówień sprzedaży.'@
            || 'Brak magazynów do realizacji zamówień wewnętrznych.'@
            ?}+'\n'+'Dołączenie zamówienia niemożliwe.'@);
   _ok:=0
?};

{? _ok=1
||
   _tab:=obj_new('UPR_WWW','ZAM_WWW','COM_WWW');
   _upr_www:=_tab.UPR_WWW:='N';
   _zam_www:=_tab.ZAM_WWW:='';
   _com_www:=_tab.COM_WWW:='';
   {? Plugin.run('TYP_ZAM_WWW_001',_tab)
   || _upr_www:=_tab.UPR_WWW;
      _zam_www:=_tab.ZAM_WWW;
      _com_www:=_tab.COM_WWW
   ?};
   obj_del(_tab);
   _msg:='';
   {? _zam_www<>'' & ZK_N.T().T=_zam_www
   || {? _upr_www='N'
      || _msg+='Brak uprawnień do dołączania zamówienia internetowego.'@;
         _res:=0
      |? _upr_www<>'T' & _com_www<>''
      || _msg+=_com_www;
         _res:=0
      ?}
   ?};
   {? _msg<>'' || FUN.info(_msg); _ok:=0 ?}
?};
{? _ok
|| exec('init_blk','zamsiw_nag');
   ZK_N.cntx_psh();
   BEER.DOL:=1;
   HELP.POP:=0;
   _bie_zam:=#ZK_N.ref();
   _new_zam:=null;

   POM.TAB:='ZK_N';
   POM.TYPDOK:=BEER.TYPYZAM().KOD;
   _czy_num:=exec('nr_pola','numery');
   ZK_N.prefix();
   ZK_N.blank();
   {? _czy_num & ZK_N.add() & exec('add_blk','zamsiw_nag',ZK_N.ref())
   ||
      BEER.ZK_N:=ZK_N.ref;
      ZK_Z.R_LOCK:='T';
      ZK_Z.ZK_NLOCK:=$ZK_N.ref();
      _new_zam:=ZK_N.ref();
      ZK_N.win_edit('RED'+{? BEER.NAWIG='ZW' || 'W' || '' ?});
      ZK_N.memo_set('','UW');
      exec('ustazprz','zamsiw_poz');
      ZK_N.SPOBLRAB:=exec('get','#params',800810,2);
      TAZ.RAB_N_BE:=0;

      _var_zknagpop:=exec('var_zknagpop','zamsiw_nag');
      _var_zknagpop.KH:=null();
      _var_zknagpop.WAL:=null();
      _var_zknagpop.KRS:=0;
      _var_zknagpop.MG:=null();
      _var_zknagpop.PL:=null();
      _var_zknagpop.ODB:=null();
      _var_zknagpop.DT:=date(0,0,0);
      _var_zknagpop.PL_DATA:=date(0,0,0);
      _var_zknagpop.PL_TIME:=time(0,0,0);
      _var_zknagpop.KRAJ_VAT:=null();
      _var_zknagpop.PROJEKTY:=null();
      _tran:='N';
      _sam:=null();
      _rab:=0;
      _var_zknagpop.PO_FIRST:=1;

      exec('zkn_wal_set','zamsiw_nag');

      params_set('context',params_get(),'var_zknagpop',_var_zknagpop);

:: Wtyczka do uzupełnienia projektu lub ewentualnie innych wartości początkowych
      {? Plugin.runnable('ZWS_PROJ_003')
      || _proj_ref:={? var_pres('__PROJ_REF')=type_of('') || __PROJ_REF || '' ?};
         Plugin.run('ZWS_PROJ_003','ZK_N',_proj_ref)
      ?};

:: dokument Businesslink
      {? _context_bl
      || ZK_N.DP:=_context.DP;
         ZK_N.KH:=_context.KH;
         ZK_N.DT:=ZK_N.DP+{? ZK_N.KH().DREA>0 || ZK_N.KH().DREA || 0 ?};
         {? ZK_N.put()
         || {? XINFO.SLP<>null
            || ZK_N.PL:=exec('sp_plat','kontrahent',ZK_N.KH);
               {? ZK_N.PL<>null()
               || FZ.FORMAPLA:=ZK_N.PL().KOD;
                  FZ.PL:=ZK_N.PL;
                  FZ.TERMPLAT:=date(0,0,0);
                  FZ.TERMPLAT:=exec('term_plat','faktury_plat','DT','N',ZK_N.ref());
                  ZK_N.TZ:=FZ.TERMPLAT;
                  exec('plat_one','faktury_plat',ZK_N.ref())
               ?}
            ?};
            exec('FindAndGet','#table',DOKUM,_context.DOKUM,,"
               @.DOKUM.REFSQL:=_b;
               @.DOKUM.BL_STAT:=exec('during_registration','zbl_stat');
               @.DOKUM.put()
            ",,$ZK_N.ref())
         ?}
      ?};

      exec('zknag_win_edit_set','zamsiw_nag');

      _nag_edit:=ZK_N.edit("params_exec('spr_nzam','zamsiw_nag')");
      {? ZK_N.STAT_REJ='N'
      || exec('zknag_pop_po','zamsiw_nag',_nag_edit)
      || exec('upd_zkp','zamsiw_poz',ZK_N.ref())
      ?};
      {? _nag_edit
      || exec('addTR_HKH','transport_wspolne',ZK_N);
         {? ZK_N.NR<>0 & ZK_N.SYM='' || exec('znak','numery','ZK_N') ?};
         _wyn:=ZK_N.put(1);
         {? _wyn
         ||
            ZK_N.memo_put(,'UW');
            exec('st_licz_wz','ceny','ZK_N');
            DISP.RAB:=ZK_N.RAB;
            DISP.RABO:={? exec('czyrabp','ceny',TAZ.RAB_TYP) || '%' || ZK_N.WAL().KOD ?};
            DISP.RABZTYP:=exec('rabztyp','ceny',TAZ.RAB_TYP);
            BEER.RMAG:=ZK_N.MG;
            BEER.NET_REA:=BEER.BRT_REA:=0;

            {? _wyn & _var_zknagpop.PO_FIRST=1
            || {? exec('FindInSet','#table','ZK_P','ZAM',ZK_N.ref())=null()
               || BPMN.END:=1;
                  exec('zam_poz','zamsiw_poz',,0);
                  ZK_N.get();
                  {? BPMN.END=2 & ZK_N.STAT_REJ='N' & exec('FindInSet','#table','ZK_P','ZAM',ZK_N.ref())<>null()
                  || exec('zknag_zakoncz_red','zamsiw_nag')
                  ?}
               ?};
               exec('inf_dod','fakso',0,'zknag')
            ?};
            exec('aktznzkn','zamsiw_nag',ZK_N.ref(),1);
            exec('obl_warz','zamsiw_nag',ZK_N.ref(),,0)

         ?};
         ZK_N.r_unlock()
      ||
::       usuwanie numeru
         ZK_N.r_unlock();
         _del:={? exec('FindInSet','#table','ZK_P','NAG',ZK_N.ref())<>null()
               || FUN.ask('Zamówienie ma pozycje.\nCzy na pewno usunąć zamówienie?'@)
               || 1
               ?};
         {? _del || exec('zam_usu','zamsiw_nag',1); _new_zam:=null ?}
      ?};
      MG.f_clear();
      ZK_Z.R_LOCK:='N';
      ZK_Z.ZK_NLOCK:=''
   || FUN.info('Nieudana próba zablokowania tabeli nagłówków zamówień.\nSpróbuj ponownie.'@)
   ?};
   ZK_N.cntx_pop();
   MG.f_clear();
   {? _new_zam=null
   ||
      {? _bie_zam>0 || ZK_N.seek(_bie_zam,) ?}
   ||
      {? ZK_N.seek(_new_zam)=0
      ||
         FUN.info('Aktualnie zredagowane zamówienie nie jest dostępne w ustawionym zakresie widoku zamówień.'@);
         {? _bie_zam>0 || ZK_N.seek(_bie_zam,) ?}
      ?}
   ?};
   exec('done_blk','zamsiw_nag');
   TYPYSP.f_clear()
?};
1


\spr_nzam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: sprawdza wypelnienie pol w naglowku zamowienia
::       kontrola limitu
::   WE: 0 - dokument manualny (domyślnie), 1 - import z komunikatu EDI
::       _b - webservice/edi
::       _c - nazwa konfiguracji (BASELINKER/ABSTOREB2B/ABSTOREB2C)
::  OLD: \spr_nzam/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _edi:=_a
|| _edi:=0
?};
{? var_pres('_b')=type_of('') & _b='webservice'
|| _webservice:=1
|| _webservice:=0
?};
_name_conf:={? var_pres('_c')=type_of('')|| _c || '' ?};
_wyn:='';
_prod:=exec('tte_lic','tte');
{? ZK_N.T=null()
|| _msg:='Należy wskazać typ zamówienia.'@;
   {? _edi
   || exec('add_kom','#message',_msg,4,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
   || FUN.emsg(_msg)
   ?};
   _wyn:='T'
|| {? ZK_N.AKC<>'T' & ~_webservice || exec('plat_przel','faktury_plat',ZK_N.ref) ?};
   _zam_spr:=ZK_N.T().R='Z';
   {? ZK_N.DP=date(0,0,0)
   || _msg:='Niepoprawna data przyjęcia zamówienia.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
      || FUN.emsg(_msg)
      ?};
      _wyn:='DP'
   ?};
   {? (_wyn='' | _edi) & _zam_spr & ZK_N.KH=null
   || _kh:=1;
      {? ZK_N.KHCLIENT<>''
      || KH.cntx_psh();
         KH.index('LOTUSUID');
         KH.prefix(2,ZK_N.KHCLIENT,);
         {? KH.first()
         || _kh:=0;
            ZK_N.KH:=KH.ref()
         || _kh:=2
         ?};
         KH.cntx_pop()
      ?};
      {? _kh=1
      || {? _edi & (var_pres('FIND_KH1')=type_of('') | var_pres('FIND_KH2')=type_of(''))
         || FIND_KH:='';
            {? var_pres('FIND_KH1')=type_of('') & FIND_KH1<>''
            || FIND_KH:=FIND_KH1
            ?};
            {? var_pres('FIND_KH2')=type_of('') & FIND_KH2<>''
            || {? FIND_KH<>''
               || FIND_KH+=', '
               ?};
               FIND_KH+=FIND_KH2
            ?};
            {? FIND_KH=''
            || _msg:='Należy wskazać kontrahenta (nie podano kodu).'@
            || _msg:='Należy wskazać kontrahenta (nieznany kod: %1).'@[FIND_KH]
            ?};
            &FIND_KH
         || _msg:='Należy wskazać kontrahenta.'@
         ?};
         {? _edi
         || exec('add_kom','#message',_msg,4,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
         || FUN.emsg(_msg)
         ?};
         _wyn:='KH'
      |? _kh=2
      || _msg:='Nie znaleziono kontrahenta o podanym identyfikatorze: %1.'@[ZK_N.KHCLIENT];
         {? _edi
         || exec('add_kom','#message',_msg,4,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
         || FUN.emsg(_msg)
         ?};
         _wyn:='KHCLIENT'
      ?}
   ?};
::   |? _zam_spr & ZK_N.HAN=null || FUN.emsg('Należy wskazać handlowca.'@); _wyn:='HAN'
   {? (_wyn='' | _edi) & ~exec('po_zterm','zamsiw_nag',_edi, _name_conf)
   || _wyn:='DT'
   ?};
   {? ~_edi & _wyn='' & _zam_spr & ZK_N.RAB<>TAZ.RAB_N_BE
   || _wyn:=params_exec('chk_rab_n','ceny',ZK_N)
   ?};
   _nwal:=exec('bl_nwal','ustawienia');
   {? (_wyn='' | _edi) & _zam_spr & ZK_N.WAL<>_nwal & ZK_N.KRS=0
   || _msg:='Należy podać kurs.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
      || FUN.emsg(_msg)
      ?};
      _wyn:='KRS'
   ?};
   {? (_wyn='' | _edi) & _zam_spr & ZK_N.WAL<>_nwal & ZK_N.KRS<0
   || _msg:='Kurs nie może być ujemny.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
      || FUN.emsg(_msg)
      ?};
      _wyn:='KRS'
   ?};
   {? (_wyn='' | _edi) & _zam_spr & ZK_N.WAL<>_nwal & ZK_N.KRS>0 & ZK_N.DTK=date(0,0,0)
   || _msg:='Należy podać datę kursu.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
      || FUN.emsg(_msg)
      ?};
      _wyn:='DTK'
   ?};
   {? (_wyn='' | _edi) & BEER.ZAMUPR & ZK_N.OFE<>null() & ZK_N.MG=null()
   || _msg:='Należy podać magazyn.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
      || FUN.emsg(_msg)
      ?};
      _wyn:='MG'
   ?};
   {? (_wyn='' | _edi) & _zam_spr & ZK_N.ODBID<>''
   || ZK_N.ODB:=exec('FindInSet','#table','KH_ODB','KH_ODB',ZK_N.ODBID,ZK_N.KH,,1,,null());
      {? ZK_N.ODB=null()
      || _msg:='Nie znaleziono odbiorcy o podanym identyfikatorze: %1.'@[ZK_N.ODBID];
         {? _edi
         || exec('add_kom','#message',_msg,4,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
         || FUN.emsg(_msg)
         ?};
         _wyn:='ODBID'
      ?}
   ?};
   {? (_wyn='' | _edi) & _zam_spr & ZK_N.OSOBID<>''
   || ZK_N.OSOB:=exec('FindInSet','#table','KH_OSOB','KH',ZK_N.OSOBID,ZK_N.KH,,1,,null());
      {? ZK_N.OSOB=null()
      || FUN.emsg('Nie znaleziono osoby kontaktowej o podanym identyfikatorze: %1.'@[ZK_N.OSOBID]);
         _wyn:='OSOBID'
      ?}
   ?};
   {? (_wyn='' | _edi) & _zam_spr & ZK_N.MGSYM<>''
   || ZK_N.MG:=exec('FindInSet','#table','MG','MAG',ZK_N.MGSYM,ZK_N.ODDZ,,1,,null());
      {? ZK_N.MG=null()
      || _msg:='Nie znaleziono magazynu o identyfikatorze %1 w oddziale %2.'@[ZK_N.MGSYM,ZK_N.ODDZ];
         {? _edi
         || exec('add_kom','#message',_msg,4,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
         || FUN.emsg(_msg)
         ?};
         _wyn:='MGSYM'
      ?}
   ?};
   {? (_wyn='' | _edi) & _prod='T' & ZK_N.T().R<>'D'
   || {? ~exec('po_zkn_pldata','zamsiw_nag',_edi, _name_conf)
      || _wyn:='PL_DATA'
      |? ~exec('valid_time','#field',ZK_N.PL_TIME,_edi)
      || {? _edi
         || _msg:='Godzina musi mieścić się w przedziale %1 ÷ %2.'@['0:0:0','23:59:59'];
             exec('add_kom','#message',_msg,4,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
         ?};
         _wyn:='PL_TIME'
      ?}
   ?};
   {? (_wyn='' | (_edi & ZK_N.KH<> null())) & _zam_spr
   ||
      _klim:=__War_f('KH_DOD','KLIM',ZK_N.KH); {? ~_klim || _klim:=ZK_N.KH().GRKH().KLIM ?};
      _wyn:={? exec('lim_kred','limit_kredyt',ZK_N.KH,date(),INFO.NAROD,1,_klim,ZK_N.BRT,~_edi,ZK_N.name())
            || ''
            || 'KH'
            ?}
   ?};
   {? _prod='N'
   ||
:: jezeli brak wspolpracy z produkcja, to przepisanie daty
      {? _edi & ZK_N.PL_DATA<>ZK_N.DT
      || _msg:='Zmieniono wewnętrzny termin realizacji na planowany termin realizacji zamówienia.';
         exec('add_kom','#message',_msg,2,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
      ?};
      ZK_N.PL_DATA:=ZK_N.DT
   ||
:: przy wspolpracy z produkcja uzupelnia wewnetrzny termin realizacji, o ile nieokreslony, to rowny terminowi realizacji
      {? ZK_N.PL_DATA=date(0,0,0)
      || ZK_N.PL_DATA:=ZK_N.DT;
         {? _edi
         || _msg:='Zmieniono wewnętrzny termin realizacji na planowany termin realizacji zamówienia.';
            exec('add_kom','#message',_msg,2,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
         ?}
       ?}
   ?};
:: kontrola wypełnienia miejsca dostawy dla transportu zewnętrznego
   {? _wyn='' & ZK_N.TR_ZEWN<>null() & ZK_N.TR_ZEWN().WYB_MSC & ZK_N.KH_MSC=null()
   || _msg:='Dla Rodzaju dostawy %1 należy podać Miejsce dostawy.'@[ZK_N.TR_ZEWN().KOD];
      {? _edi
      || exec('add_kom','#message',_msg,4,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
      || FUN.info(_msg)
      ?};
      _wyn:='KH_MSC'
   ?};
:: uzupelnia dane adresowe i transportowe
   {? _wyn=''
   ||
      {? ZK_N.KH_MSC<>null()
      ||
         ZK_N.TRN_KRAJ:=ZK_N.KH_MSC().KRAJ;
         ZK_N.TRN_MIA:=ZK_N.KH_MSC().MIASTO;
         ZK_N.TRN_UL:=ZK_N.KH_MSC().UL;
         ZK_N.TRN_KPOC:=ZK_N.KH_MSC().KPOCZ;
         ZK_N.TRN_POCZ:=ZK_N.KH_MSC().POCZ;
         ZK_N.TRN_OBS:=ZK_N.KH_MSC().OBS
      ||
         {? ZK_N.ODB<>null()
         ||
            ZK_N.TRN_KRAJ:=ZK_N.ODB().KRAJ;
            ZK_N.TRN_MIA:=ZK_N.ODB().MIASTO;
            ZK_N.TRN_UL:=ZK_N.ODB().UL;
            ZK_N.TRN_KPOC:=ZK_N.ODB().KPOCZ;
            ZK_N.TRN_POCZ:=ZK_N.ODB().POCZ;
            ZK_N.TRN_OBS:=ZK_N.ODB().OBS
         ||
            ZK_N.TRN_KRAJ:=ZK_N.KH().KRAJ;
            ZK_N.TRN_MIA:=ZK_N.KH().MIASTO;
            ZK_N.TRN_UL:=ZK_N.KH().UL;
            ZK_N.TRN_KPOC:=ZK_N.KH().KPOCZ;
            ZK_N.TRN_POCZ:=ZK_N.KH().POCZ;
            ZK_N.TRN_OBS:=ZK_N.KH().OBS
         ?}
      ?};
      {? ZK_N.TRN='T' & _edi
      || _msg:='Uzupełniono dane transportowe.';
         exec('add_kom','#message',_msg,2,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
      ?};

      ZK_N.RR:=ZK_N.DT~1;
      ZK_N.RM:=ZK_N.DT~2;
      ZK_N.RT:=exec('NumberOfWeek','#datetime',ZK_N.DT)
   ?};
:: Sprawdzanie poprawnosci zwrotu planowania i znacznika kontunuacji po przekroczeniu
   {? ~_edi & _wyn=''
   || _wyn:=exec('pl_force_chk','px_utils','ZK_N')
   ?};
:: projekt
   {? ~_edi & _wyn='' & type_of(params_get())>100 & var_pres('var_zknagpop',params_get())>100
      & (ZK_N.PROJEKTY<>params_get().var_zknagpop.PROJEKTY
         | ZK_N.PROJEKTY & (ZK_N.ODB<>params_get().var_zknagpop.ODB | ZK_N.PL<>params_get().var_zknagpop.PL))
   || _wyn:=exec('tabdok_chk','projekty',ZK_N);
      params_get().var_zknagpop.PROJEKTY:=ZK_N.PROJEKTY
   ?};
:: ewentualne uzupełnienie magazynów dla usług
   {? ~_edi & _wyn='' & ZK_N.MG<>null()
   || ZK_P.cntx_psh();
      ZK_P.index('TYPN');
      ZK_P.prefix('A','Z',ZK_N.ref(),1);
      {? ZK_P.first()
      || {!
         |? {? ZK_P.RMAG=null()
            || ZK_P.MG:=ZK_P.RMAG:={? (ZK_P.RODZ='Z' | ZK_P.M().RODZ<>'U') || ZK_N.MG || null() ?};
               ZK_P.put(1);
               exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1)
            ?};
            ZK_P.next()
         !}
      ?};
      ZK_P.cntx_pop()
   ?};
:: sparwdzenie pod względem komunikatów abstorowych
   {? _wyn='' & ZK_N.IDABSTOR<>0 & (+gsub(ZK_N.memo_txt(,0,'UW'),'\n','<br>')>9000)
   || FUN.info('Za długi opis dodatkowy.'@);
      _wyn:='UW'
   ?}
?};
{? _wyn=''
|| ZK_N.R:=ZK_N.DP~1;
   ZK_N.M:=ZK_N.DP~2;
   ZK_N.RR:=ZK_N.DT~1;
   ZK_N.RM:=ZK_N.DT~2;
   ZK_N.RT:=exec('NumberOfWeek','#datetime',ZK_N.DT)
?};
_wyn


\po_zterm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: formula po terminie realizacji
::   WE: 0 - dokument manualny (domyślnie), 1 - import z komunikatu EDI
::       _b- nazwa konfiguracji (BASELINKER/ABSTOREB2B/ABSTOREB2C)
::   WY: czy mozna opuscic redakcje pola
::  OLD: \po_zterm/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _edi:=_a
|| _edi:=0
?};
_name_conf:={? var_pres('_c')=type_of('')|| _c || '' ?};
_msg:='';
_wyn:=1;
{? ZK_N.DT<date()
& ~('ABSTOREB2B/ABSTOREB2C/BASLINKER'*_name_conf)
|| _msg:='Termin realizacji nie może być wcześniejszy\nod bieżącej daty.'@;
   _wyn:=0
|? ZK_N.DT<ZK_N.DP
|| _msg:='Termin realizacji nie może być wcześniejszy\nod daty przyjęcia zamówienia.'@;
   _wyn:=0
?};
{? _wyn=0
|| {? _edi
   || exec('add_kom','#message',_msg,4,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
   || FUN.emsg(_msg)
   ?}
?};
_wyn


\po_zkn_pldata
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Po wewnetrznym terminie realizacji ZK_N.PL_DATA
::   WE: 0 - dokument manualny (domyślnie), 1 - import z komunikatu EDI
::       _b - nazwa konfiguracji (BASELINKER/ABSTOREB2B/ABSTOREB2C)
::  OLD: \po_zkn_pldata/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _edi:=_a
|| _edi:=0
?};
_name_conf:={? var_pres('_b')=type_of('')|| _b || '' ?};
_msg:='';
_res:=1;
{? ZK_N.PL_DATA<>date(0,0,0) & ZK_N.PL_DATA>ZK_N.DT
|| _msg:='Wewnętrzny termin realizacji nie może być późniejszy niż planowany termin realizacji zamówienia.\n'
            'Należy podać wcześniejszą datę.'@;
   _res:=0
|? ZK_N.PL_DATA<>date(0,0,0) & ZK_N.PL_DATA<date() & _name_conf=''
|| _msg:='Wewnętrzny termin realizacji nie może być wcześniejszy od bieżącej daty.'@;
   _res:=0
?};
{? _res=0
|| {? _edi
   || exec('add_kom','#message',_msg,4,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
   || FUN.emsg(_msg)
   ?}
?};
_res


\zam_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: Formula Rekord przed dla okienak wertowania 'WER' tabeli ZK_N
::   WY: kod koloru
::  OLD: \zam_kol/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_beeretap:={? BEER.ETAP='END' || 'ZRE' || gsub(BEER.ETAP,'-END','') ?};

{? _beeretap*'WYS'         || 'ZAM#01#09'
|? _beeretap='REA'         || 'ZAM#01#01'
|? _beeretap='ZRE'         || 'ZAM#01#02'
|? _beeretap='ZAM'         || 'ZAM#01#03'
|? _beeretap='REA-ZRE'     || 'ZAM#01#04'
|? _beeretap='ZRE-ZAM'     || 'ZAM#01#05'
|? _beeretap='REA-ZAM'     || 'ZAM#01#06'
|? _beeretap='REA-ZRE-ZAM' || 'ZAM#01#07'
|? _beeretap='ARCHIWALNE'  || 'ZAM#01#08'
|? _beeretap='WYSYŁKA'     || 'ZAM#01#09'
|? _beeretap='DO AKCEPT.'  || 'ZAM#01#10'
|? _beeretap='ODRZUCONE'   || 'ZAM#01#10'
|? _beeretap='ANULOWANE'   || 'ZAM#01#11'
?}


\zam_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: popraw na zamowieniu
::  OLD: \zam_pop/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('zam_mod','zamsiw_nag',2) & exec('zam_sprz','zamsiw_nag')
||
   POM.TAB:='ZK_N';
   POM.TYPDOK:=ZK_N.T().KOD;

   _bie_zam:=#ZK_N.ref();
   _new_zam:=null;

   ZK_N.cntx_psh();
   ZK_N.prefix();
   {? ZK_N.r_lock(1,1,1)
   ||
      HELP.POP:=1;
      _wal:=#ZK_N.WAL;
      _krs:=ZK_N.KRS;
      _rab:=TAZ.RAB_N_BE:=ZK_N.RAB;
      _dom_mag:=ZK_N.MG;
      _term:=ZK_N.DT;
      _term_wew:=ZK_N.PL_DATA;
      _data_wew:=ZK_N.PL_TIME;
      _tran:=ZK_N.TRN;
      _sam:=ZK_N.POJAZD;
      _kh:=ZK_N.KH;
      _odb:=ZK_N.ODB;
      _pl:=ZK_N.PL;
      BEER.FIS:=ZK_N.CB;
      ZK_N.memo_get(,'UW');
      exec('pop_exit','faktury_plat',0,ZK_N.ref());

      _var_zknagpop:=exec('var_zknagpop','zamsiw_nag');
      _var_zknagpop.ZK_N.get();
      _var_zknagpop.PROJEKTY:=ZK_N.PROJEKTY;
      _var_zknagpop.KH:=ZK_N.KH;
      _var_zknagpop.WAL:=ZK_N.WAL;
      _var_zknagpop.KRS:=ZK_N.KRS;
      _var_zknagpop.MG:=ZK_N.MG;
      _var_zknagpop.PL:=ZK_N.PL;
      _var_zknagpop.ODB:=ZK_N.ODB;
      _var_zknagpop.DT:=ZK_N.DT;
      _var_zknagpop.PL_DATA:=ZK_N.PL_DATA;
      _var_zknagpop.PL_TIME:=ZK_N.PL_TIME;
      _var_zknagpop.TRN:=ZK_N.TRN;
      _var_zknagpop.SAM:=ZK_N.POJAZD;
      _var_zknagpop.RAB:=ZK_N.RAB;
      _var_zknagpop.PO_FIRST:=0;
      _var_zknagpop.HAN:=ZK_N.HAN;
      _var_zknagpop.KRAJ_VAT:=ZK_N.KRAJ_VAT;

      params_set('context',params_get(),'var_zknagpop',_var_zknagpop);

      exec('zknag_win_edit_set','zamsiw_nag');
      _nag_edit:=ZK_N.edit("params_exec('spr_nzam','zamsiw_nag')");
      {? _nag_edit
      ||
         exec('addTR_HKH','transport_wspolne',ZK_N);
         params_set('context',params_get(),'var_zknagpop',_var_zknagpop);
         {? ZK_N.STAT_REJ='N' || exec('zknag_pop_po','zamsiw_nag',_nag_edit) ?}
      ||
         exec('pop_exit','faktury_plat',1,ZK_N.ref())
      ?};
      exec('obl_warz','zamsiw_nag',ZK_N.ref,0,,0);
      ZK_N.r_unlock()
   ?};
   ZK_N.cntx_pop();
   MG.f_clear();
   TYPYSP.f_clear();
   {? _new_zam=null
   ||
      {? _bie_zam>0 || ZK_N.seek(_bie_zam,) ?}
   ||
      {? ZK_N.seek(_new_zam)=0
      ||
         FUN.info('Aktualnie zredagowane zamówienie nie jest dostępne w ustawionym zakresie widoku zamówień.'@);
         {? _bie_zam>0 || ZK_N.seek(_bie_zam,) ?}
      ?}
   ?}
?};
''


\zam_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: czy mozna wykonac akcje przeslana parametrem _a
::       gdy ZK_N.AKC='T' mozna tylko archiwizowac
::       gdy ZK_N.AKC='W' od strony Emaga mozna usunac, poprawic i archiwizowac
::       gdy ZK_N.AKC<>'W' & ZK_N.AKC<>'T' i typ<>ZAM-WWW mozna usunac, poprawic i archiwizowac
::       gdy ZK_N.AKC<>'W' & ZK_N.AKC<>'T' i typ=ZAM-WWW od strony Emaga edycja zablokowana
::   WE: _a - 1-Usun, 2-Popraw, 3-Archiwizuj
::   WY: _wyn - 1/0
::  OLD: \zam_mod/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_msg:='';
:: gdy ZK_N.AKC='T'
{? _a<3
|| {? ZK_N.STAT_REJ='Z'
   || _msg+='Zamówienie jest zakończone.'@;
      _wyn:=0
   |? ZK_N.AKC='T'
   || _msg+='Zamówienie jest zaakceptowane.'@;
      _wyn:=0
   ?}
?};
:: gdy ZK_N.AKC='N' - lub niewypelnione
{? _wyn & ZK_N.AKC<>'W' & ZK_N.AKC<>'T'
|| _tab:=obj_new('UPR_WWW','ZAM_WWW','COM_WWW');
   _upr_www:=_tab.UPR_WWW:='N';
   _zam_www:=_tab.ZAM_WWW:='';
   _com_www:=_tab.COM_WWW:='';
   {? Plugin.run('TYP_ZAM_WWW_001',_tab)
   || _upr_www:=_tab.UPR_WWW;
      _zam_www:=_tab.ZAM_WWW;
      _com_www:=_tab.COM_WWW
   ?};
   obj_del(_tab);
   _bmsg:='';
   {? _zam_www<>'' & ZK_N.T().T=_zam_www
   || {? _upr_www='N'
      || _bmsg+='Brak uprawnień do modyfikacji zamówienia internetowego.'@;
         _res:=0
      |? _upr_www<>'T' & _com_www<>''
      || _bmsg+=_com_www;
         _res:=0
      ?}
   ?};
   {? _bmsg<>'' || _msg+=_bmsg; _wyn:=0 ?}
?};
:: komunikat
{? _wyn=0
||
   {? _a=1
   || _msg+='\n'+'Usunięcie niemożliwe.'@
   |? _a=2
   || {? (ZK_N.name()+2)='__' & ZK_N.STAN<>'ZRE'
      || {? exec('tpp_lic','tpp')='T'
         || _txt:=_msg+'\n'+'Czy poprawić terminy realizacji?\n\n'
                       'Uwaga: termin realizacji i wewnętrzny termin realizacji zostaną zmienione\n'
                       'na pozycjach zamówienia, jeżeli będą mniejsze od terminów podanych w nagłówku zamówienia.\n'
                       'Zwroty planowania na pozycjach zamówienia nie będą modyfikowane.'@
         || _txt:=_msg+'\n'+'Czy poprawić termin realizacji?\n\n'
                       'Uwaga: termin realizacji zostanie zmieniony na pozycjach zamówienia,\n'
                       'jeżeli będzie mniejszy od terminu podanego w nagłówku zamówienia.'@
         ?};
         {? FUN.ask(_txt)
         || exec('termreal','zamsiw_nag')
         ?};
         _msg:=''
      ||
         _msg+='\n'+'Modyfikacja niemożliwa.'@
      ?}
   |? _a=3
   || _msg+='\n'+'Archiwizacja niemożliwa.'@
   ?};
   {? _msg<>'' || FUN.info(_msg) ?}
?};
_wyn


\termreal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: poprawa terminu realizacji
::  OLD: \termreal/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('zam_lock','zamsiw_nag') & ZK_N.r_lock(1,1,1)
||
   VAR_DEL.delete('__dtzkn');
   __dtzkn:=ZK_N.DP;
   _term:=ZK_N.DT;
   _winedit:=ZK_N.win_edit('?');
   {? ZK_N.IDABSTOR<> 0  || ZK_N.memo_get(,'UW'); ZK_N.win_edit('RED_ABS') || ZK_N.win_edit('REDDT') ?};
   {? ZK_N.edit("{? ZK_N.DT<__dtzkn
                 || FUN.info('Termin realizacji powinien być większy lub równy od daty: %1.'@[form(__dtzkn)]);
                    0
                 |? ZK_N.PL_DATA<__dtzkn
                 || FUN.info('Wewnętrzny termin realizacji powinien być większy lub równy od daty: %1'@[form(__dtzkn)]);
                    0
                 |? ZK_N.PL_DATA>ZK_N.DT
                 || FUN.info('Wewnętrzny termin realizacji nie może być późniejszy niż planowany termin'
                             ' realizacji zamówienia.\nNależy podać wcześniejszą datę.'@);
                    'PL_DATA'
                 |? ZK_N.IDABSTOR<>0 & (+gsub(ZK_N.memo_txt(,0,'UW'),'\n','<br>')>9000)
                 || FUN.info('Za długi opis dodatkowy.'@);
                    'UW'
                 || exec('pl_force_chk','px_utils','ZK_N')

                 ?}")
   ||
::    uzupelnia dane transportowe
      ZK_N.RR:=ZK_N.DT~1;
      ZK_N.RM:=ZK_N.DT~2;
      ZK_N.RT:=exec('NumberOfWeek','#datetime',ZK_N.DT);
      {? ZK_N.put(1)
      ||
::       poprawia terminy realizacji na pozycjach
         ZK_P.cntx_psh();
         ZK_P.index('NAG');
         ZK_P.prefix(ZK_N.ref());
         {? ZK_P.first()
         || {!
            |? _czyzm:=0;
               _dodt:=ZK_P.DODT;
               {? ZK_P.DT<ZK_N.DT
               || _czyzm:=1;
                  _term:=ZK_P.DT;
                  ZK_P.DT:=ZK_N.DT
               ?};
               {? ZK_P.PL_DATA<ZK_N.PL_DATA | (ZK_P.PL_DATA=ZK_N.PL_DATA & ZK_P.PL_TIME<ZK_N.PL_TIME)
               || ZK_P.PL_DATA:=ZK_N.PL_DATA;
                  ZK_P.PL_TIME:=ZK_N.PL_TIME
               ?};
               ZK_P.put();
               REZ.index('ZK_P');
               REZ.prefix(ZK_P.ref());
               {? _czyzm & REZ.first()
               || {!
                  |? {? (REZ.RODZ='B' | REZ.AUTO) & REZ.DODT=_term
                     || REZ.DODT:=REZ.ZK_P().DT;
                        _dodt:=REZ.DODT;
                        REZ.put(1)
                     ?};
                     REZ.next()
                  !}
               ?};
               {? _dodt<>ZK_P.DODT || ZK_P.DODT:=_dodt; ZK_P.put(1) ?};
               ZK_P.next()
            !}
         ?};
         ZK_P.cntx_pop();
::       Produkcja - jesli dostepny modul planow strategicznyych to po udanej
::       akceptacji zamowienia tworze obiekty planowania, lub uaktualniam stworzone wczesniej
         {? exec('tpp_lic','tpp')='T'
         || exec('zkn2obj','px_obj',ZK_N.ref())
         ?}
      ?};
      {? ZK_N.IDABSTOR<> 0  || ZK_N.memo_put(,'UW') ?}
   ?};
   ZK_N.win_edit(_winedit);
   VAR_DEL.delete('__dtzkn');
   exec('aktznzkn','zamsiw_nag',ZK_N.ref(),1);
   ZK_N.r_unlock()
?};
1


\zam_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: lock naglowka zamowien
::   WE: _a - czy pytac o osobe blokujaca
::   WY: _wyn - 0-zablokowany 1-bez blokady
::  OLD: \zam_lock/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=1 ?};

_wyn:=ZK_N.r_lock(1,1,1);
{? _wyn=0 & _a & FUN.ask('Zamówienie %1 obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@[ZK_N.SYM])
|| ZK_N.r_lock(1,,1)
?};
ZK_N.r_unlock();
_wyn


\zam_sprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: kontrola zamowienia klienta
::  OLD: \zam_sprz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? exec('FindInSet','#table','ZK_RN','ZAM',ZK_N.ref())<>null
|| FUN.info('Zamówienie było realizowane.\nModyfikacje nagłówka niemożliwa.'@)
|| _wyn:=exec('zam_lock','zamsiw_nag')
?};
_wyn


\zknmgnag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy na naglowku zamowienia zmieniono Magazyn
::   WE: _a - poprzedni domyslny magazyn
::       [_b] - 1-bez pytania 0-z pytaniem(domyślnie)
::   WY: 1-zatwierdzono nowa rozpiske rezerwacji lub jest OK 0-nie zatwierdzono
::  OLD: \zknmgnag/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<>type_of(0) || _b:=0 ?};

_wyn:=0;
_dom_mag:=_a;
_akt_mag:=ZK_N.MG;
{? _dom_mag<>_akt_mag & exec('FindInSet','#table','ZK_P','NAG',ZK_N.ref())<>null
|| {? _b
   || _wyn:=2
   |? FUN.ask('Zmodyfikowano pole magazyn w nagłówku zamówienia.\n'
              'Konieczne jest przeprowadzenie nowej rozpiski rezerwacji na pozycjach zamówienia.\n\n'
              'W przypadku wprowadzonych usług na pozycjach zamówienia\n'
              'konieczna jest zmiana magazynu lub ich usunięcie (magazyn bez usług).\n\n'
              'Czy rozpisać ponownie rezerwacje i zmodyfikować pozycje usługowe?'@)
   || _wyn:=2
   ?}
|| _wyn:=1
?};
_wyn


\zam_wyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wycofanie akceptacji zamowien klienta
::       sprawdza czy zamowienie jest zamowieniem internetowym => ustawia W
::   WE: [_a] - 0/1 czy komunikaty
::  OLD: \zam_wyc/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
_txt:='';
{? _a
|| exec('ini_kom','#message','Informacje o wycofaniu akceptacji lub zakończenia zamówienia.'@);
   __kom_gr:='Zamówienie nr: %1'@[ZK_N.SYM]
?};

_upr:={? ZK_N.T().R='Z'
      || exec('chk_EndOrAcc','#b__box','LSP_ZKN_DRZK','LSP_ZKN_ERZA')
      || exec('chk_EndOrAcc','#b__box','LMG_ZAM_DRZK','LMG_ZAM_DRZA')
      ?};

_czy_akc:=ZK_N.AKC<>'N' | ZK_N.STAT_REJ<>'N';
_czy_rej:=ZK_N.STAT_REJ='Z';
{? exec('eann2zk','magdok_wspolne',ZK_N.ref())<>''
||
   {? _a || exec('add_kom','#message','Zamówienie przesłane na urządzenie mobilne.'@,2) ?}

|? ZK_N.OBI_POW<>''
||
   {? _a || exec('add_kom','#message','Zamówienie zostało przesłane do obiegu. Wycofanie akceptacji niemożliwe.'@,2) ?}

|? (_rek:=exec('dokWITHrek','reklamacje',ZK_N.uidref()); _rek<>'')
|| {? _a
   || exec('add_kom','#message'
       ,'Zamówienie powiązane z reklamacją klienta %1. Wycofanie akceptacji niemożliwe.'@[2-_rek],2)
   ?}

|? exec('zam_lock','zamsiw_nag')
|| _recplug:=0;
   {? ZK_N.T().VALREC<>null() & ~exec('validate','wzorce',ZK_N.T().VALREC,ZK_N,ZK_N.ref())
   || _wyn:=0

   |? _czy_akc
   || _ask:=0;
      {? _upr=1 & ZK_N.STAT_REJ='T'
      || _ask:=FUN.choice('Wybierz jedną z opcji wycofania akceptacji lub zakończenia zamówienia %1'@[ZK_N.SYM]
                ,,'Akceptację i &zakończenie'@,'&Akceptację'@)
      |? (_upr=1 | _upr=2) & ZK_N.STAT_REJ='Z'
      || _ask:=FUN.ask('Wycofać zakończenie redakcji zamówienia %1?'@[ZK_N.SYM])
      |? _upr=4 & ZK_N.STAT_REJ='T'
      || _ask:=FUN.ask('Wycofać akceptację zamówienia %1?'@[ZK_N.SYM]);
         {? _ask || _ask:=2 ?}
      ?};

      {? _ask
      ||
         _tab:=obj_new('UPR_WWW','ZAM_WWW','COM_WWW');
         _upr_www:=_tab.UPR_WWW:='N';
         _zam_www:=_tab.ZAM_WWW:='';
         _com_www:=_tab.COM_WWW:='';
         {? Plugin.run('TYP_ZAM_WWW_001',_tab)
         || _upr_www:=_tab.UPR_WWW;
            _zam_www:=_tab.ZAM_WWW;
            _com_www:=_tab.COM_WWW
         ?};
         obj_del(_tab);
         _msg:='';
         {? _zam_www<>'' & ZK_N.T().T=_zam_www
         || {? _upr_www='N'
            || _msg+='Brak uprawnień do wycofania zamówienia internetowego.'@;
               _res:=0
            |? _upr_www<>'T' & _com_www<>''
            || _msg+=_com_www;
               _res:=0
            ?}
         ?};
         {? _msg<>''
         || {? _a || exec('add_kom','#message',_msg,2) ?}
         || _ok:=1;

::          sprawdza czy nie bylo realizacji
            ZK_RN.index('ZAM');
            ZK_RN.prefix(ZK_N.ref());
            {? ZK_RN.first()
            || {? _a || exec('add_kom','#message','Zamówienie było realizowane.'@,2) ?};
               _ok:=0
            ?};

::          dla zamowien www sprawdza czy nie ma rezerwacji
            {? ZK_N.T().T=_zam_www
            ||
               ZK_P.index('TYPN');
               ZK_P.prefix('A','Z',ZK_N.ref(),1);
               {? ZK_P.first()
               || {!
                  |? {? ZK_P.REZ<>0
                     || {? _a || exec('add_kom','#message','Pozycje zamówienia internetowego mają włączoną automatyczną rezerwację.'@,2) ?};
                        _ok:=0
                     ?};
                     _ok=1 & ZK_P.next()
                  !}
               ?}
            ?};

            {? _ok=1 & sql('select FAPOW.ZK_N_SYM from FAPOW where FAPOW.ZK_N=:_a',ZK_N.ref()).first()
            || {? _a || exec('add_kom','#message','Do zamówienia zostały już wystawione faktury zaliczkowe.'@,2) ?};
               _ok:=0
            ?};

::          powiazanie z transportem
            {? _ok=1
            ||
               ZK_P.index('TYPN');
               ZK_P.prefix('A','Z',ZK_N.ref(),1);
               {? ZK_P.first()
               ||
                  {!
                  |?
                     {? ZK_P.TRN='T' || _ok:=exec('spr_trnp','zamsiw_poz',$ZK_P.ref()) ?};
                     _ok=1 & ZK_P.next()
                  !};

                  {? _ok=0 & _a || exec('add_kom','#message','Zamówienie jest związane z transportem.'@,2) ?}
               ?}
            ?};

            {? _ok
            || exec('del_autoadd','dokum',ZK_N.ref());
               {? _ask=1
               || {? _upr_www<>'T' & ZK_N.T().T=_zam_www
                  || _recplug:=2;
                     ZK_N.AKC:='W';
                     ZK_N.STAT_REJ:='T'
                  || _recplug:=2;
                     ZK_N.AKC:='N';
                     ZK_N.STAT_REJ:='N'
                  ?};
                  {? ZK_N.put()
                  || {? _recplug=2 || _recplug:=1 ?};
                     {? _a
                     || {? _czy_rej
                        || exec('add_kom','#message','Wycofano zakończenie rejestracji zamówienia'@,1)
                        || exec('add_kom','#message','Wycofano akceptację i zakończenie rejestracji zamówienia'@,1)
                        ?}
                     ?};
::                   Produkcja - jesli dostepny modul planow strategicznych to po udanym
::                   wycofaniu akceptacji zamowienia uaktualniam obiekty planowane
                     {? exec('tpp_lic','tpp')='T'
                     || exec('zkn2obj','px_obj',ZK_N.ref())
                     ?}
                  ?}
               || _recplug:=2;
                  ZK_N.AKC:='N';
                  ZK_N.STAT_REJ:='Z';
                  {? ZK_N.put()
                  || {? _recplug=2 || _recplug:=1 ?};
                     {? _a ||  exec('add_kom','#message','Wycofano akceptację zamówienia'@,1) ?}
                  ?}
               ?};
               {? _recplug=1 || Plugin.run('AFTER_RECALL_001',{? ZK_N.T().R='Z' || 'ZS' || 'ZW' ?}) ?}
            ?}
         ?}
      ?}
   || {? _a || exec('add_kom','#message','Zamówienie nie jest zaakceptowane.'@,2) ?}
   ?}
?};
exec('end_kom','#message');
~~


\zam_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: usuniecie zamowienia
::   WE: [_a] - =1-usuwac zamowienie bez pytania, 0-wpp
::  OLD: \zam_usu/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=0 ?};

exec('delerrez','zamsiw_wspolne');
{? exec('kontrol_zl','zamsiw_nag')
||
   FUN.info(
      'Do jednej z pozycji zamówienia są już wystawione zlecenia.\n\n'
      'Usunięcie zamówienia zabronione.'@
   );
   0
|? exec('kontrol_res','zamsiw_nag')
||
   FUN.info(
      'Jedna z pozycji zamówienia znajduje się w planie zasobów.\n\n'
      'Usunięcie zamówienia zabronione.'@
   );
   0
|? exec('kontrol_px','zamsiw_nag')
||
   FUN.info(
      'Do jednej z pozycji zamówienia jest przypisany aktywny obiekt planistyczny.\n\n'
      'Usunięcie zamówienia zabronione.'@
   );
   0
|? exec('czy_dost_ded','zamsiw_wspolne') & exec('zam_mod','zamsiw_nag',1)
  & exec('zam_lock','zamsiw_nag') & ZK_N.r_lock(1,1,1)
|| {? ~ZK_N.PR
   || {? (_rr:=exec('spr_zamo','zamsiw_nag',ZK_N.ref()))<>0 & (_a=1 | FUN.ask('Usunąć całe zamówienie?'@))
      || _tab:=tab_tmp(1,'MAT','STRING[16]',''
                ,'ILR','REAL',''
                ,'NRK','INTEGER','');
         _zkn:=tab_tmp(1,'ZKN','STRING[16]','');
         _zkp:=tab_tmp(1,'ZKP','STRING[16]','');

         FAKSO.cntx_psh();
         FAKSO.use('fakto'+ST.ODDZ+'__');
         {? ZK_N.r_lock(1)
         ||

            do();
            exec('del_lnk','plan_dostaw',ZK_N.ref());
            _ref:=ZK_N.ref();
            ZK_P.index('NAG');
            ZK_P.prefix(_ref);
            {? ZK_P.first()
            || {!
               |?
                  exec('delprzyp','fakso','FAKSO','ZK_P',ZK_P.ref());
                  exec('delezkrp','zamsiw_rea',ZK_P.ref());
                  _tab.prefix();
                  {? ~_tab.find_key($ZK_P.M)
                  || _tab.blank();
                     _tab.MAT:=$ZK_P.M;
                     _tab.ILR:={? ZK_P.TOP || ZK_P.DOR || 0 ?};
                     _tab.NRK:=ZK_P.NR;
                     _tab.add(1)
                  || _tab.ILR+={? ZK_P.TOP || ZK_P.DOR || 0 ?};
                     {? ZK_P.NR<_tab.NRK || _tab.NRK:=ZK_P.NR ?};
                     _tab.put(1)
                  ?};
                  _kodmsk:=ST.ODDZ+form((ZK_P.DP~1)-2000,-2,0,'99');
                  _refzkp:=$ZK_P.ref();
                  _uidzkp:=ZK_P.uidref();
                  _dane:=obj_new(4);
                  _dane[1]:=$ZK_P.ref(); _dane[2]:=ZK_P.ILZ; _dane[3]:=ZK_P.M; _dane[4]:=ZK_P.N().KH;
                  exec('update','rezerwacje','ZK_P',ZK_P.ref(),ZK_P.RMAG,ZK_P.M,0);
                  _ok:=ZK_P.del();
                  exec('returnrt','rezerwacje',_refzkp,_kodmsk,_rr,_dane[4]);
                  exec('delaRekD','reklamacje',_uidzkp);
                  obj_del(_dane);
                  _ok
               !}
            ?};
            exec('del_palz','zamsiw_palety',ZK_N.ref());
            exec('zk_usun','zamsiw_poz',ZK_N.ref());
            exec('delprzyp','fakso','FAKSO','ZK_N',ZK_N.ref);
            exec('del_plat','faktury_plat',ZK_N.ref());
            {? ~exec('deladok','dokum','ZK_N')
            || undo();
               FUN.info('Nie można usunąć powiązanych załączników.\nUsunięcie zamówienia niemożliwe.'@)
            ?};
            {? ZK_N.count()=0
            ||
::             zmiana informacji o zmianach kolejnosci rezerwacji
               exec('del_zk_n','zamsiw_poz');
               {? do_state()<2 & ~Plugin.run('BEFORE_DELTAB_001',ZK_N.ref()) & do_state() || undo() ?};
               POM.TAB:='ZK_N';
               POM.TYPDOK:=BEER.TYPYZAM().KOD;
               numer:=ZK_N.NR;
               oldnumer:=1;
               _uid:=ZK_N.uidref();
               exec('nr_old','numery');
               _del:=ZK_N.del(1);
               _ok:=do_state();
               end();
               {? _del
               ||
::                Uruchamian cleanera - czyszcze pozostałe po zamówieniu zadania na TODO
                  exec('clean_record','#b__box',_uid,0)
               ?};

::             odtworzenie stanu pozostalych zamowien poza transakcja
               exec('utw_zk_tymc','zamsiw_wspolne');
               {? _ok
               ||
                  _tab.prefix();
                  {? _tab.first()
                  || {!
                     |? M.cntx_psh();
                        M.prefix();
                        {? M.seek(_tab.MAT)
                        || _buf:=exec('aktu_rez','rezerwacje',M.ref(),_tab.NRK,_tab.ILR,,_zkp);
                           _buf.clear();
                           {? _buf.first()
                           || {!
                              |? _zkn.clear();
                                 {? ~_zkn.find_key(_buf.ZKN)
                                 || _zkn.blank();
                                    _zkn.ZKN:=_buf.ZKN;
                                    _zkn.add(1)
                                 ?};
                                 _buf.next()
                              !}
                           ?};
                           obj_del(_buf)
                        ?};
                        M.cntx_pop();
                        _tab.next()
                     !};
                     exec('aktznzkn','zamsiw_nag',_zkn)
                  ?}
               ?};
               exec('odt_zk_tymc','zamsiw_wspolne');
               echo()
            || undo();
               end()
            ?}
         ?};
         FAKSO.cntx_pop();
         obj_del(_tab);
         obj_del(_zkn);
         obj_del(_zkp)
      ?}
   || {? ZK_N.PR=100
      || FUN.info('Zamówienie zrealizowano. Usunięcie niemożliwe.'@)
      || FUN.info('Zamówienie zrealizowano częściowo. Usunięcie niemożliwe.'@)
      ?}
   ?};
   ZK_N.r_unlock()
?};
1


\kontrol_zl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JA [2009]
:: OPIS: Sprawdza czy dane zamowienie ma dla jakiejs pozycji powolane zlecenie produkcyjne
::   WY: 0 / 1
::  OLD: \kontrol_zl/zk.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_P.cntx_psh();
ZK_P.index('NAG');
ZK_P.prefix(ZK_N.ref());
_kont:=0;
{? ZK_P.first()
|| {!
   |? ZLZAM.index('ZMZL');
      ZLZAM.prefix($ZK_P.ref());
      {? ZLZAM.first()
      || _kont:=1; 0
      || ZK_P.next()
      ?}
   !}
?};
ZK_P.cntx_pop();
_kont


\kontrol_px
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.10]
:: OPIS: Sprawdza czy dane zamowienie ma dla jakiejs pozycji powiazania z planowaniem strategicznym (PX)
::       Czysci pozostalosci po planach strategicznych i symulacjach
::   WY: 0 - brak powiazan
::       1 - pozostaly powiazania
::  OLD: \kontrol_px/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_px_ver:=exec('get_mainversion','px_ver');

ZK_N.cntx_psh();
ZK_P.cntx_psh();
PX_OBJ.cntx_psh();
ZK_P.index('NAG');
ZK_P.prefix(ZK_N.ref());
_kont:=0;
{? ZK_P.first()
|| {!
   |? PX_OBJ.index('ZK_P');
      PX_OBJ.prefix(ZK_P.name(),ZK_P.ref());
      {? PX_OBJ.first()
      || PX_POZ.index('PX_POZ');
         PX_POZ.prefix(_px_ver,PX_OBJ.ref());
::       Jezeli brak pozycji w wersji glownej, to kasujemy obiekt z powiazaniami
         {? ~PX_POZ.first()
         || _kont:=(exec('delete','px_obj',PX_OBJ.ref())=0)
         ?}
      ?};
      ~_kont & ZK_P.next()
   !}
?};
{? ~_kont
|| PX_OBJ.index('ZK_N');
   PX_OBJ.prefix(ZK_N.name(),ZK_N.ref());
   {? PX_OBJ.first()
   || {? PX_OBJ.count()=0
      || PX_OBJ.del()
      || _kont:=1
      ?}
   ?}
?};
ZK_N.cntx_pop();
ZK_P.cntx_pop();
PX_OBJ.cntx_pop();
_kont


\kontrol_res
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.10]
:: OPIS: Sprawdza czy dane zamowienie ma dla jakiejs pozycji powiazania z planem operacyjnym
::   WY: 0 / 1
::  OLD: \kontrol_res/zk.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_P.cntx_psh();
ZK_P.index('NAG');
ZK_P.prefix(ZK_N.ref());
PL_PART.cntx_psh();
PL_PART.index('ZK_P');
_result:=0;
{? ZK_P.first()
|| {!
   |?
      PL_PART.prefix(ZK_P.ref());
      {? PL_PART.first()
      || _result:=1
      ?};
      ZK_P.next()
   !}
?};
ZK_P.cntx_pop();
PL_PART.cntx_pop();
_result


\spr_zamo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy na pozycjach faktury sa pozycje z rezerwacji tymczasowych
::   WE: _a - ref zamowienia
::   WY: 1-sa i usunac 2-sa i odrezerwowac 0-rezygnacja 3-brak
::  OLD: \spr_zamo/zkd.fml
::       \spr_zamo/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=3;
_rodz:=exec('get','#params',3008,2,OPERATOR.USER);
{? _rodz='N'
|| _wyn:=1
|? _rodz='T'
|| _wyn:=2
|| ZK_P.cntx_psh();
   ZK_P.index('NAG');
   ZK_P.prefix(_a);
   {? ZK_P.first()
   || {!
      |? {? exec('czyhisrt','rezerwacje',$ZK_P.ref(),ST.ODDZ+form((ZK_P.DP~1)-2000,-2,0,'99'))
         || _wyn:=FUN.choice('Na pozycjach zamówienia są pozycje(a) powstałe z rezerwacji tymczasowych.\n'
                   'Wybierz jedną z opcji?'@,,'Wyłącznie usunięcie pozycji'@,'Przywrócenie rezerwacji'@)
         ?};
         _wyn=3 & ZK_P.next()
      !}
   ?};
   ZK_P.cntx_pop()
?};
_wyn


\zam_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akceptacja zamowien klienta
::   WE: [_a] - 0-z pytaniami(domyślnie) 1-bez
::       [_b] - 1-automatyczna akceptacja 0(domyślnie)-nie
::   WY: 1-zakończono rejestrację 0-nie
::  OLD: \zam_akc/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_auto:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_autoakc:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_wyn:=0;
_fld:='';
exec('bufAndgetRec','#table','ZK_N');
ZK_N.cntx_psh();
exec('ini_kom','#message','Informacje o zakończeniu rejestracji zamówienia.'@);
__kom_gr:='Zamówienie nr: %1'@[ZK_N.SYM];
KH_DOD.B:=__War_f('KH_DOD','B',ZK_N.KH);
{? KH_DOD.B='T' | KH_DOD.B='B'
|| exec('add_kom','#message','Kontrahent %1 - %2 zablokowany'@[ZK_N.KH().KOD,ZK_N.KH().SKR],2)
::|? ZK_N.T().R='Z' & ZK_N.HAN=null()
::|| exec('add_kom','#message','Nie podano handlowca w nagłówku zamówienia'@,2)
|? exec('zam_lock','zamsiw_nag') & ZK_N.r_lock(1,1,1)
||
   {? ZK_N.T().VALIDATE<>null() & ~exec('validate','wzorce',ZK_N.T().VALIDATE,ZK_N,ZK_N.ref())
   || _wyn:=0
   |? {? ZK_N.KH=null()
      || 0
      || _wyn0:=exec('f_kh_gv_sprawdz','faktury_nag1','ZK_N',1,0);
         _ok:=_wyn0.WYNIK;
         _msg:=_wyn0.MSG;
         &_wyn0;
         {? ~_ok
         || exec('add_kom','#message',gsub(_msg,'\n',' '),2)
         ?};
         ~_ok
      ?}
   || _wyn:=0
   |? ZK_N.STAT_REJ='N'
   ||
      _tzam_r:=ZK_N.T().R;
      BEER.ZK_N:=ZK_N.ref();
      BEER.TYP:='Z';
      {? _tzam_r='Z' || exec('zp_spr_c','zamsiw_nag',1) ?};

      _ok:=1;

      _tab:=obj_new('UPR_WWW','ZAM_WWW','COM_WWW');
      _upr_www:=_tab.UPR_WWW:='N';
      _zam_www:=_tab.ZAM_WWW:='';
      _com_www:=_tab.COM_WWW:='';
      {? Plugin.run('TYP_ZAM_WWW_001',_tab)
      || _upr_www:=_tab.UPR_WWW;
         _zam_www:=_tab.ZAM_WWW;
         _com_www:=_tab.COM_WWW
      ?};
      obj_del(_tab);
      _msg:='';
      {? _zam_www<>'' & ZK_N.T().T=_zam_www
      || {? _upr_www='N'
         || _msg+='Brak uprawnień do akceptacji zamówienia internetowego.'@;
            _res:=0
         |? _upr_www<>'T' & _com_www<>''
         || _msg+=_com_www;
            _res:=0
         ?}
      ?};
      {? _msg<>'' & ZK_N.AKC<>'W'
      || exec('add_kom','#message',_msg,2);
         _ok:=0
      ?};

::    płatności
      _plat_msg:='';
      {? ZK_N.NETTO & exec('pla_sum','faktury_plat',ZK_N.ref,1)<>exec('brutto','faktury_plat',ZK_N.ref())
      ||
         _plat_msg:='Wartość płatności dokumentu niezgodna z wartością dokumentu.'@;
         {? _auto
         ||
            exec('add_kom','#message',_plat_msg,19)
         ?}
      ?};
      _checkpla:=exec('check_plat','faktury_plat',ZK_N.ref);

      {? _checkpla=2 & exec('term_pr','faktury_plat')
      ||
         exec('add_kom','#message','Termin płatności nie może być wcześniejszy od daty wystawienia.'@,2);
         _ok:=0
      ?};

      {? _ok & ZK_N.DT=date(0,0,0)
      || exec('add_kom','#message','Nie określono terminu realizacji zamówienia.'@,2);
         _ok:=0
      ?};
      {? ZK_N.US=null() || exec('uzup_us','zamsiw_wspolne',OPERATOR.USER) ?};
::    sprawdzenie uprawnien do magazynow
      BEER.ZAMUPR:=exec('jakieupr','zamsiw_wspolne',_tzam_r='W');

      {? _ok
      ||
         ZK_P.index('TYPN');
         ZK_P.prefix('A','Z',ZK_N.ref(),1);
         {? ~ZK_P.first()
         || exec('add_kom','#message','Zamówienie nie posiada pozycji.'@,2);
            _ok:=0
         || {!
            |?
               {? BEER.ZAMUPR & ZK_P.M().RODZ='T' & ZK_P.RMAG=null
               ||
                  exec('add_kom','#message','Wymagane wypełnienie magazynu do realizacji zamówienia (w nagłówku lub we wszystkich pozycjach).'@,2);
                  _ok:=0;
                  _fld:='MG';
                  0
               |? ZK_P.M().RODZ='U' & ZK_P.RMAG=null() & _tzam_r<>'W'
               ||
                  exec('add_kom','#message','Wymagane wypełnienie magazynu dla pozycji usługowych.'@,2);
                  _ok:=0;
                  _fld:='MG';
                  0
               |? ZK_P.SV=null() & _tzam_r='Z'
               ||
                  exec('add_kom','#message','Pozycja %1: wymagane wypełnienie stawki VAT.'@[$ZK_P.POZ],2);
                  _ok:=0;
                  _fld:='SV';
                  ZK_P.next()
               ||
                  ZK_P.next()
               ?}
            !}
         ?}
      ?};

      _klim:=__War_f('KH_DOD','KLIM',ZK_N.KH); {? ~_klim || _klim:=ZK_N.KH().GRKH().KLIM ?};
      {? _ok &
        (_auto | FUN.ask('Zakończyć rejestrację zamówienia?'@
                  +{? ZK_N.T().ZAP='T'
                   || '\n\n'+'Uwaga. Zostanie wygenerowane zapotrzebowanie.'
                      '\nZamówienie będzie można zrealizować dopiero po akceptacji Zapotrzebowania.'@
                   || ''
                   ?}
                  +{? +_plat_msg || '\n\n'+_plat_msg || '' ?}))
       & exec('lim_kred','limit_kredyt',ZK_N.KH,date(),INFO.NAROD,2,_klim,ZK_N.BRT,,ZK_N.name())
      || _ok:={? ZK_N.T().ZAP='T' || exec('zdnagedz','zamdst_nag',1) || 1 ?};
         {? ~_ok
         || exec('add_kom','#message','Nie zostało wygenerowane zapotrzebowanie. Brak uprawnień.'@,2)
         || ZK_N.AKC:='N';
            ZK_N.STAT_REJ:='Z';
            {? ZK_N.put()
            || _wyn:=1;
               exec('add_kom','#message','Zakończono rejestrację zamówienia'@,1);

:: DRO:[rr] - płatności nie przenoszę
::               exec('akc_zk','skid_pla');

::             Produkcja - jesli dostepny modul planow strategicznych to po udanej
::             akceptacji zamowienia tworze obiekty planowania, lub uaktualniam stworzone wczesniej
               {? exec('tpp_lic','tpp')='T'
               || exec('zkn2obj','px_obj',ZK_N.ref())
               ?}
            ?}
         ?}
      ?}
   || exec('add_kom','#message'
        ,{? ZK_N.STAT_REJ='T' || 'Zamówienie jest zaakceptowane'@ || 'Zakończono rejestrację zamówienia'@ ?},2);
      _wyn:=1
   ?};
   {? _wyn || ZK_N.r_unlock() ?}
?};
{? _wyn & _auto & var_pres('__kom_on')=type_of(1) || __kom_on:=0 ?};
exec('end_kom','#message');
{? _wyn & _autoakc || exec('zknag_akceptuj','zamsiw_nag',1) ?};
{? _wyn & ~_auto || BPMN.END:=2 ?};
ZK_N.cntx_pop();
ZK_N.get();
_wyn


\zp_spr_c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza czy jest wypelniona cena w zamowieniu
::   WE: [_a] - 0-czy wypelniac __kom_gr (domyslnie) 1-nie
::   WY: czy wypelniono cene
::  OLD: \zp_spr_c/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_wyn:=1;
ZK_N.cntx_psh();
ZK_P.cntx_psh();

ZK_P.index('TYPN');
ZK_P.prefix('A',BEER.TYP,BEER.ZK_N,1);
{? ZK_P.first
||
   {? ~_a || __kom_gr:='Zamówienie nr: %1'@[ZK_P.N().SYM] ?};
   _byl:=0;
   {!
   |?
      exec('obl_ilp','zamsiw_rea');
      {? ZK_P.CENA=0 & ZK_P.ILP>0
      || {? ~_byl
         || __kom.sect_clr();
            __kom.sect_beg(__kom_gr);
            _byl:=1
         ?};
         exec('add_kom','#message','Pozycja nr %1 indeks: %2'@[$ZK_P.POZ,ZK_P.M().KTM],4);
         exec('add_kom','#message','- nie podano ceny sprzedaży - cenę należy uzupełnić w zamówieniu lub w dokumencie realizacji'@,110)
      ?};
      ZK_P.next & _wyn=1
   !}
?};
ZK_N.cntx_pop();
ZK_P.cntx_pop();
_wyn


\var_zknagpop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zmienna - Poprawa nagłowka
::   WY: uchwyt do zmiennej
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new('PO_FIRST','ZK_N','PROJEKTY','KH','WAL','KRS','MG','PL','ODB','DT','PL_DATA','PL_TIME','TRN','SAM','RAB',
'HAN','KRAJ_VAT');
_wyn.ZK_N:=exec('ZK_N','buffer'); _wyn.ZK_N.blank();
_wyn.PROJEKTY:=null();
_wyn


\zknag_win_edit_btn_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.22]
:: OPIS: Ustawia opcje przycisków w oknie redakcji tabeli ZK_N
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__ZKNAG_WIN_EDIT')>0
||
   {? var_pres('BTN_SP_NIPUE',__ZKNAG_WIN_EDIT)=type_of('')
   ||
      KH.cntx_psh();
      _options:={? ZK_N.NIP_UE<>'' & ZK_N.KH().FIZYCZNY=2 || 'state=normal' || 'state=grayed' ?};
      KH.cntx_pop();
      ZK_N.btn_opt(__ZKNAG_WIN_EDIT.BTN_SP_NIPUE,_options)
   ?};
   {? var_pres('BTN_SP_PODAT',__ZKNAG_WIN_EDIT)=type_of('')
   ||
      KH.cntx_psh();
      _options:={? ZK_N.KH().NIP<>'' || 'state=normal' || 'state=grayed' ?};
      KH.cntx_pop();
      ZK_N.btn_opt(__ZKNAG_WIN_EDIT.BTN_SP_PODAT,_options)
   ?}
?}


\zknag_win_edit_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Ustawia okno redakcji tabeli ZK_NAG, wymagane pola, okna słowników
::   WE: [_a] - czy klawisz pozycje 1(domyślnie)-tak 0-nie
::       [_b] - 1-tryb Display 0-(domyślnie) nie
::       [_c] - 1-z oferty 0-(domyślnie) nie
::       [_d] - bez zakładki "Podgląd", doda ją "dispWithFakso", 1-tak, 0-(domyślnie) nie
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || _a:=1 ?};
_disp:={? var_pres('_b')=type_of(0) || _b || 0 ?};
_ofer:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_bez_dokumi:={? var_pres('_d')=type_of(0) || _d || 0 ?};

BPMN.END:=0;
VAR_DEL.delete('__ZKNAG_WIN_EDIT');
__ZKNAG_WIN_EDIT:=obj_new('BTN_SP_NIPUE','BTN_SP_PODAT');

_win_red:=exec('zknag_win_edit','zamsiw_nag',,_bez_dokumi);
{? _disp
|| {? _a
   || _ff:="params_exec('zknag_pozycje_disp','zamsiw_nag')";
      ZK_N.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['Poz&ycje'@],_ff)
   ?}
|| {? ZK_N.STAT_REJ='N'
   || {? _a
      || _ff:="params_exec('zknag_pozycje_red','zamsiw_nag')";
         ZK_N.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin'['Poz&ycje'@],_ff)
      ?};

      _ff:="
         exec('nip2tmp','kontrahent',,,(2+ZK_N.NIP_UE)+exec('niptostr','#string',(3-ZK_N.NIP_UE)));
         exec('chk_nipue_kh','kontrahent',1);
         ''
      ";
      __ZKNAG_WIN_EDIT.BTN_SP_NIPUE:=
         ZK_N.win_ebtn(_win_red,'text='+'&Sprawdź NIP-UE'@+',btn_label_align=center,panel=bottom,align=begin',_ff);
      _ff:="
         KH.cntx_psh();
         exec('chk_kh_in_vat','fks_vat',ZK_N.KH,ZK_N.KH().NIP,1);
         KH.cntx_pop();
         ''
      ";
      __ZKNAG_WIN_EDIT.BTN_SP_PODAT:=
         ZK_N.win_ebtn(_win_red,'text='+'Sprawdź poda&tnika'@+',btn_label_align=center,panel=bottom,align=begin',_ff);
      exec('zknag_win_edit_btn_opt','zamsiw_nag');

      _ff:="params_exec('priority_action_red','#b__box')";
      ZK_N.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin'['Pr&iorytet'@],_ff);

      _ff:="params_exec('zknag_zakoncz_red','zamsiw_nag')";
      exec('zakoncz','#window',ZK_N,_win_red,1,_ff,0, exec('help_red_zakoncz','#window','Z'),
      exec('text_red_zakoncz','#window','Z'))
   ?};
   exec('ok_esc','#window',ZK_N,_win_red,1,,,,,exec('help_red_ok','#window','Z'),exec('text_red_ok','#window')
   ,exec('help_red_esc','#window','A'))
?};
ZK_N.win_edit(_win_red);
exec('set_efld_opt','zamsiw_nag',_win_red,_ofer);
exec('sel_win_kh','ustawienia');
exec('sel_win_typysp','ustawienia')


\zknag_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zwraca okno redakcji tabeli ZK_N
::   WE: [_a] - akronim okna
::       [_b] - bez zakładki "Podgląd", doda ją "dispWithFakso", 1 - tak, 0 - nie (domyślnie)
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || _a:={? ZK_N.T().R='W' || 'REDW' || 'RED' ?} ?};
{? var_pres('_b')<>type_of(0) || _b:=0 ?};

_win_akr:=_a;
_bez_dokumi:=_b;
{? _win_akr='RED'
:: Tymczasowe okno redakcji
|| {? _bez_dokumi
   || _dokum_view:=0
   || _dokum:=exec('bl_dokum_seek','zbl',ZK_N) | exec('dokum_seek','zbl',ZK_N);
      _dokum_view:=_dokum & DOKUM.DOKUMI
   ?};
   _win_red:=ZK_N.mk_edit('Zamówienie sprzedaży'@,,'#edzk_nspr',,,'html_maximized');
   {? _dokum_view
   || ZK_N.win_etab(_win_red,'Dane podstawowe'@)
   ?};
   ZK_N.win_ewin(_win_red,,_win_akr);
   {? _dokum_view
   || ZK_N.win_etab(_win_red,'Podgląd'@);
      ZK_N.win_ewin(_win_red,DOKUM,'DOKUMI')
   ?};
   _win_red
|? _win_akr='REDW'
:: Tymczasowe okno redakcji
|| _win_red:=ZK_N.mk_edit('Zamówienie wewnętrzne'@,,'#edzk_nwew',,,'html_maximized');
   ZK_N.win_ewin(_win_red,,_win_akr);
   _win_red
:: Okno redkacji
|| _win_akr
?}


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zaznacza wymagalne pola w nagłówku zamówienia sprzedaży
::   WE: _a - akronim okna redakcji
::       [_b] - 1-z oferty 0-nie (domyślnie)
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || ZK_N.win_edit('?') ?};
_ofer:={? var_pres('_b')=type_of(0) || _b || 0 ?};

:: Projekt
{? ZK_N.PROJEKTY=null() & (ZK_N.T().PROJZAKR='' | TYPYZAM.PROJZAKR=exec('projzakr_nie_dotyczy','projekty'))
|| ZK_N.efld_opt(_win_red,'enable=0',,'PROJEKTY')
|| ZK_N.efld_opt(_win_red,'enable=1',,'PROJEKTY')
?};

_czy_wal:=exec('spr_ww','eurusd',0);
_enwal:={? _czy_wal || 'enable=1' || 'enable=0' ?};
ZK_N.efld_opt(_win_red,_enwal,,'WAL');
_nwal:=exec('bl_nwal','ustawienia');
_czy_wal:=ZK_N.WAL<>_nwal;
_enwal:={? _czy_wal || 'enable=1' || 'enable=0' ?};
ZK_N.efld_opt(_win_red,_enwal,,'KRS');
ZK_N.efld_opt(_win_red,_enwal,,'DTK');
ZK_N.efld_opt(_win_red,_enwal,,'SWAL');
{? BEER.ZAMUPR & _ofer || ZK_N.efld_opt(_win_red,'mark=1',,'MG') || ZK_N.efld_opt(_win_red,'mark=0',,'MG') ?};
{? ZK_N.TR_ZEWN<>null() & ZK_N.TR_ZEWN().WYB_MSC=1
|| ZK_N.efld_opt(_win_red,'mark=1',,'KH_MSC')
|| ZK_N.efld_opt(_win_red,'mark=0',,'KH_MSC')
?};

:: OSS, IOSS
{? KST.OSS<>'' | KST.IOSS<>''
|| ZK_N.efld_opt(_win_red,'enable=1',,'KRAJ_VAT');
   ZK_N.efld_opt(_win_red,'enable=1',,'PROC')
|| ZK_N.efld_opt(_win_red,'enable=0',,'KRAJ_VAT');
   ZK_N.efld_opt(_win_red,'enable=0',,'PROC')
?};

''


\zknag_sym_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła ikony dla STAT_REJ
::----------------------------------------------------------------------------------------------------------------------
"  FILTER.ZK_N:=ZK_N.ref();
   {? ZK_N.STAT_REJ='T' || exec('zaakceptowany','icon')
   |? ZK_N.STAT_REJ='Z' || exec('zarejestrowany','icon')
   |? ZK_N.STAT_REJ='A' || exec('anulowany','icon')
   |? ZK_N.STAT_REJ='N' || exec('pusta','#icon')
   || exec('pusta','#icon')
   ?}
"


\zknag_pozycje_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienia sprzedaży - Pozycje - okno redagowania
::   WE: params_get()   - ustawiane w exec('zdnag_pop','zamdst_nag')
::                      - ustawiane w exec('zddol','zamdst_nag')
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_btnRuleResult:='';

_fld:=params_exec('zknag_edit_finisher','zamsiw_nag',ZK_N.ref());
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| _var_zknagpop:=params_get().var_zknagpop;
   _var_zknagpop.KH:=ZK_N.KH;
   _var_zknagpop.WAL:=ZK_N.WAL;
   _var_zknagpop.KRS:=ZK_N.KRS;
   _var_zknagpop.MG:=ZK_N.MG;
   _var_zknagpop.PL:=ZK_N.PL;
   _var_zknagpop.ODB:=ZK_N.ODB;
   _var_zknagpop.DT:=ZK_N.DT;
   _var_zknagpop.PL_DATA:=ZK_N.PL_DATA;
   _var_zknagpop.PL_TIME:=ZK_N.PL_TIME;
   _var_zknagpop.TRN:=ZK_N.TRN;
   _var_zknagpop.SAM:=ZK_N.POJAZD;
   _var_zknagpop.RAB:=ZK_N.RAB;
   _var_zknagpop.HAN:=ZK_N.HAN;
   _var_zknagpop.KRAJ_VAT:=ZK_N.KRAJ_VAT;
   _var_zknagpop.PROJEKTY:=ZK_N.PROJEKTY;
   params_set('var_zknagpop',_var_zknagpop);
   BPMN.END:=1;
   _flds:=obj_new(ZK_N.fld_num());
   exec('bufRec','#table','ZK_N',_flds);
   exec('zam_poz','zamsiw_poz',,0);
   exec('unbufRec','#table','ZK_N',_flds);
   obj_del(_flds);
   {? BPMN.END=2 || _btnRuleResult:=params_exec('zknag_zakoncz_red','zamsiw_nag') ?}
?};

_btnRuleResult


\zknag_edit_finisher
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Kod wykańczający po ZK_N.edit() w różnych kontekstach
::   WE: _a - ZK_N.ref()
::   WE: params_get()   - ustawiane w exec('zdnag_pop','zamdst_nag')
::                      - ustawiane w exec('zddol','zamdst_nag')
::----------------------------------------------------------------------------------------------------------------------
:: Sprawdzenie poprawności wypełnienia pól nagłówka dokumentu sprzedaży
_fld:=params_exec('spr_nzam','zamsiw_nag');
{? _fld<>''
|| _fld
|| exec('inf_dod','fakso',0,'zknag');
   _zk_n:=_a;
   _out:=params_get().context.out;
   _mp:=params_get().context.mp;
   _akcja:=params_get().context.akcja;
   _var_zknagpop:=params_get().var_zknagpop;

   {? _akcja='Dołącz' | _akcja='START_TODO' | _mp.pathProc()
   || params_set('var_zknagpop',_var_zknagpop);
      exec('zknag_pop_po','zamsiw_nag',1);
      _var_zknagpop.PO_FIRST:=2
   |? _akcja='Popraw' | _akcja='Oferta' | _mp.pathTodo()
   || params_set('var_zknagpop',_var_zknagpop);
      exec('zknag_pop_po','zamsiw_nag',1)
   ?};
   ''
?}


\zknag_pop_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Obsługa popraw po zakończeniu edycji (ZK_N.edit)
::   WE: _a - wynik działania edycji
::       [_b] - 1-wg oferty 0-nie(domyslnie)
::----------------------------------------------------------------------------------------------------------------------
{? _a=0 || return() ?};
{? var_pres('_b')<>type_of(1) || _b:=0 ?};

_var_zknagpop:=params_get().var_zknagpop;
_ZK_N:=_var_zknagpop.ZK_N;
_projekty:=_ZK_N.PROJEKTY;
_kh:=_var_zknagpop.KH;
_wal:=_var_zknagpop.WAL;
_krs:=_var_zknagpop.KRS;
_mg:=_var_zknagpop.MG;
_pl:=_var_zknagpop.PL;
_odb:=_var_zknagpop.ODB;
_term:=_var_zknagpop.DT;
_term_wew:=_var_zknagpop.PL_DATA;
_data_wew:=_var_zknagpop.PL_TIME;
_tran:=_var_zknagpop.TRN;
_sam:=_var_zknagpop.SAM;
_rab:=_var_zknagpop.RAB;
_po_first:=_var_zknagpop.PO_FIRST;
_han:=_var_zknagpop.HAN;
_kraj_vat:=_var_zknagpop.KRAJ_VAT;
_projekty:=_var_zknagpop.PROJEKTY;

{? _po_first=1
:: Dotyczy wywołania dla Dołącz - wtedy jako wartości przed ustawia zmienne z nagłówka
|| _projekty:=ZK_N.PROJEKTY;
   _kh:=ZK_N.KH;
   _wal:=ZK_N.WAL;
   _krs:=ZK_N.KRS;
   _mg:=ZK_N.MG;
   _pl:=ZK_N.PL;
   _odb:=ZK_N.ODB;
   _term:=ZK_N.DT;
   _term_wew:=ZK_N.PL_DATA;
   _data_wew:=ZK_N.PL_TIME;
   _tran:=ZK_N.TRN;
   _sam:=ZK_N.POJAZD;
   _rab:=ZK_N.RAB;
   _han:=ZK_N.HAN;
   _kraj_vat:=ZK_N.KRAJ_VAT
?};

{? ZK_N.STAT_REJ='N'
||
   ZK_N.cntx_psh();
   ZK_N.clear();
   {? _po_first || {? ZK_N.NR=0 || exec('fak_numer','numery','',0); exec('znak','numery','ZK_N') ?} ?};
   {? ZK_N.put()
         &
      ZK_N.memo_put()
         &
      (
         ZK_N.KH<>_kh | ZK_N.ODB<>_odb
         | ZK_N.WAL<>_wal | ZK_N.KRS<>_krs
         | ZK_N.PL<>_pl | ZK_N.DT<>_term
         | ZK_N.MG<>_mg | ZK_N.TRN<>_tran
         | ZK_N.PROJEKTY<>_projekty | ZK_N.HAN<>_han
         | ZK_N.KRAJ_VAT<>_kraj_vat
      )
   ||
::    aktualizacja cen
      _ok:=1;
      _ctrlCN:=exec('get','#params',800850,2);
      ZK_P.index('NAG');
      ZK_P.prefix(ZK_N.ref());
::Usunięcie powiązanego cennika jeśli nie jest już aktualny
      {? ZK_P.first & ZK_N.T().R='Z' & (_kh<>ZK_N.KH | _odb<>ZK_N.ODB | _wal<>ZK_N.WAL | _pl<>ZK_N.PL)
      ||
         {!|?
            {? ZK_P.TAR_H<>null()
            ||
               ZK_P.cntx_psh();
               _tar_h_tap:=$ZK_P.TAR_H().TAP;
               ZK_P.CENA:=0;
               ZK_P.CWAL:=0;
               VAR_DEL.delete('__TAP_LIST');
               exec('f3_ceny','zamsiw_poz',2);
               exec('bezpkwce','zamsiw_poz',1);
               {? var_pres('__TAP_LIST')=type_of('')
               & ( __TAP_LIST*_tar_h_tap)=0
               || ZK_P.cntx_pop();
                  ZK_P.TAR_H:=null();
                  ZK_P.TAR_TMS:=0;
                  ZK_P.put()
               || ZK_P.cntx_pop()
               ?};
               VAR_DEL.delete('__TAP_LIST')
            ?};
            ZK_P.next()
         !}
      ?};
      {? ZK_P.first & ZK_N.T().R='Z' & (_kh<>ZK_N.KH | _odb<>ZK_N.ODB | _wal<>ZK_N.WAL | _pl<>ZK_N.PL)
       & _ctrlCN<>'B' & (_ctrlCN='T' | exec('ceny_mat_dok','ceny_dok',2,,ZK_N,1))
      ||
         _ma_cennik:='N';
         _choice:=2;
         _result:=spli_str(exec('fap_czy_cennik','faktury_wspolne',_kh,_odb,_pl,_wal,ZK_P),' ');
         _ma_cennik:=_result[1];
         _choice:=#_result[2];

         {? _ma_cennik='N' & _choice<>2 || _ok:=1
         ||
            {? _choice=0 ||
               _choice:=FUN.choice('Zmieniły się kryteria cenników.\nNależy wyznaczyć ponownie ceny.'@,,
                  'Wg &cenników'@,'Wg &dokumentu'@)
            |? _ma_cennik='N' & _choice=2
            || _msg:='Zmieniły się kryteria cenników.\nBrak cennika zgodnego z aktualnymi kryteriami.'@;
               FUN.info(_msg)
            ?};
            _ok:=exec('ceny_mat_dok','ceny_dok',1,,ZK_N,1,,_choice=2,_wal<>ZK_N.WAL);
            {? _ok || exec('plat_przel','faktury_plat',ZK_N.ref) ?}
         ?}
      ?};
      MG.f_clear();
      {? _ok
      ||
         (_rez:=exec('zknmgnag','zamsiw_nag',_mg,_b));
         {? ~_rez || ZK_N.MG:=_mg ?}
      ?};
      {? _ok=0
      || ~~
      |? ZK_N.put()
      || exec('aktznzkn','zamsiw_nag',ZK_N.ref(),1);
         _new_zam:=ZK_N.ref();
         ZK_N.memo_put(,'UW');
         {? _wal<>#ZK_N.WAL | _krs<>ZK_N.KRS | _rab<>ZK_N.RAB
         ||
            BEER.ZK_N:=ZK_N.ref;
            BEER.WG:=ZK_N.WG;
            BEER.TYP:='Z';
            BEER.MW:='Z';
:: przeliczenie wartosci zamowienia wg nowego kursu i waluty
            exec('obl_warz','zamsiw_nag',ZK_N.ref,1)
         ?};

:: aktualizacja terminow realizacji dla pozycji zamowienia
         {? _term<>ZK_N.DT | _term_wew<>ZK_N.PL_DATA | _data_wew<>ZK_N.PL_TIME
         || _yes:=0; _yes_wew:=0;
            ZK_P.index('NAG');
            ZK_P.prefix(ZK_N.ref());
            {? ZK_P.first()
            || {? _term>ZK_N.DT & (_term_wew>ZK_N.PL_DATA | (_term_wew=ZK_N.PL_DATA & _data_wew>ZK_N.PL_TIME))
               || _yes:=_yes_wew:=FUN.ask(
                     'Zmieniono termin realizacji i wewnętrzny termin realizacji na wcześniejszy.\n'
                     'Czy zmienić terminy również na pozycjach zamówienia?'@)
               |? _term>ZK_N.DT
               || _yes:=FUN.ask(
                     'Zmieniono termin realizacji na wcześniejszy.\n'
                     'Czy zmienić termin również na pozycjach zamówienia?'@)
               |? _term_wew>ZK_N.PL_DATA | (_term_wew=ZK_N.PL_DATA & _data_wew>ZK_N.PL_TIME)
               || _yes_wew:=FUN.ask(
                     'Zmieniono wewnętrzny termin realizacji na wcześniejszy.\n'
                     'Czy zmienić termin również na pozycjach zamówienia?'@)
               ?};

               {!
               |? _czyzm:=0;
                  _termpoz:=ZK_P.DT;
                  {? _yes | ZK_P.DT<ZK_P.N().DT
                  || _czyzm:=1;
                     ZK_P.DT:=ZK_P.N().DT
                  ?};
                  {? _yes_wew | ZK_P.PL_DATA<ZK_P.N().PL_DATA
                   | (ZK_P.PL_DATA=ZK_P.N().PL_DATA & ZK_P.PL_TIME<ZK_P.N().PL_TIME)
                  || ZK_P.PL_DATA:=ZK_P.N().PL_DATA;
                     ZK_P.PL_TIME:=ZK_P.N().PL_TIME
                  ?};
                  {? _czyzm || ZK_P.DODT:=ZK_P.DT ?};
                  ZK_P.put(1);
                  REZ.index('ZK_P');
                  REZ.prefix(ZK_P.ref());
                  {? _czyzm & REZ.first()
                  || {!
                     |? {? (REZ.RODZ='B' | REZ.AUTO) & REZ.DODT=_termpoz
                        || REZ.DODT:=REZ.ZK_P().DT;
                           REZ.put(1)
                        ?};
                        REZ.next()
                     !}
                  ?};
                  ZK_P.next()
               !}
            ?}
         ?};

::       aktualizacja magazynu na pozycjach zamowienia
         {? _mg<>ZK_N.MG
         || exec('aktstatzkp','zamsiw_wspolne',_rez)
         ?};

::       aktualizacja transportu
         {? _tran<>ZK_N.TRN | _sam<>ZK_N.POJAZD
         ||
            _txt:='';
            {? _tran<>ZK_N.TRN || _txt+=' znacznik transportu,'@ ?};
            {? _sam<>ZK_N.POJAZD || _txt+=' samochód,'@ ?};
            ZK_P.index('TYPN');
            ZK_P.prefix('A','Z',ZK_N.ref(),1);
            {? ZK_P.first() & FUN.ask('Zmienić%1\nw pozycjach zamówienia?'@[(_txt-1)])
            ||
               {!
               |?
                  {? ZK_P.M().RODZ='T'
                  ||
                     {? _tran<>ZK_N.TRN || ZK_P.TRN:=ZK_N.TRN ?};
                     {? _sam<>ZK_N.POJAZD || ZK_P.POJAZD:=ZK_N.POJAZD ?};
                     ZK_P.put()
                  ?};
                  ZK_P.next()
               !}
            ?}
         ?};

::       aktualizacja stawki VAT wg historii
         ZK_P.index('TYPN');
         ZK_P.prefix('A','Z',ZK_N.ref,1);
         {? ZK_P.first
         ||
            _akt:=2;
            {!
            |?
               _sv:=exec('m_vat','material',ZK_P.M,ZK_N.KH,,ZK_N.DP~1,ZK_N.DP~2,
                  {? ZK_N.KRAJ_VAT<>_kraj_vat || null() || ZK_P.SV ?},2,,,ZK_N.KRAJ_VAT);
               {? _sv<>ZK_P.SV
               ||
                  {? _akt=2
                  ||
                     _akt:=ZK_N.KRAJ_VAT<>_kraj_vat;
                     {? ~_akt || _akt:=FUN.ask('Aktualizować stawkę VAT w pozycjach zamówienia?'@) ?}
                  ?};
                  {? _akt
                  ||
                     ZK_P.SV:=_sv;
                     ZK_P.put
                  ?}
               ?};
               _akt & ZK_P.next
            !}
         ?};

::       aktualizacja projektów oraz kontrahenta i odbiorcy
         {? ZK_N.PROJEKTY<>_projekty | ZK_N.KH<>_kh | ZK_N.ODB<>_odb | ZK_N.HAN<>_han
         ||
            ZK_P.index('TYPN');
            ZK_P.prefix('A','Z',ZK_N.ref,1);
            _loop:=ZK_P.first();
            {!
            |? _loop
            |!
               {? ZK_N.PROJEKTY<>_projekty || ZK_P.PROJEKTY:=ZK_N.PROJEKTY ?};
               {? ZK_N.KH<>_kh || ZK_P.KH:=ZK_N.KH ?};
               {? ZK_N.ODB<>_odb || ZK_P.KH_ODB:=ZK_N.ODB ?};
               {? ZK_N.HAN<>_han || ZK_P.HAN:=ZK_N.HAN ?};
               _loop:=ZK_P.put() & ZK_P.next()
            !}
         ?}
      ?}
   ?};

   {? HELP.POP
   || {? ZAKR.KH<>null & ZK_N.T().R='Z' & ZK_N.KH<>ZAKR.KH
      || FUN.info('Aktualnie zredagowane zamówienie nie jest dostępne w ustawionym zakresie widoku zamówień.'@)
      |? ZAKR.MAG<>null & ZK_N.MG<>ZAKR.MAG
      || FUN.info('Aktualnie zredagowane zamówienie nie jest dostępne w ustawionym zakresie widoku zamówień.'@)
      ?}
   ?};

   ZK_N.cntx_pop();
   ZK_N.get()
?}


\zknag_zakoncz_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienia sprzedaży - Zakończ - okno redagowania
::   WE: params_get()
::   WY: 'key:F2' - jeśli pola nagłówka zamówienia sprzedaży prawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka zamówienia sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().context.mp;
{? ZK_N.T().R='Z'
|| _autoakc:=exec('autoAkc','#b__box',_mp,300180,'LSP_ZKN_ERZA')
|| _autoakc:=exec('autoAkc','#b__box',_mp,600180,'LMG_MAG_EAMG')
?};

_btnRuleResult:='';

_fld:=params_exec('zknag_edit_finisher','zamsiw_nag',ZK_N.ref());
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| {? exec('zam_akc','zamsiw_nag',BPMN.END=2,_autoakc)
   || _btnRuleResult:='key:F2';
      _mp.done()
   ?}
?};

_btnRuleResult


\zknag_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Podgląd nagłówka zamówienia
::----------------------------------------------------------------------------------------------------------------------
_edit:=ZK_N.win_edit('?');
{? ZK_N.T().R='Z'
|| _win_red:=exec('zknag_win_edit','zamsiw_nag','RED')
|| _win_red:='REDW'
?};
ZK_N.win_edit(_win_red);
exec('set_efld_opt','zamsiw_nag');
ZK_N.display();
ZK_N.win_edit(_edit);
~~


\ZK_N_4_ZL_aKC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [2011]
:: OPIS: Zmienia status zamówienia wewnętrznego dla zlecenia
::   WE: _a - ZL.ref()/null() zlecenie, dla którego zamówienia mają mieć zmieniony status
::       _b - Nowy status zamówienia
::       [_c] - GROP.ref() grupa operacji, dla której zamówienia mają mieć zmieniony status
::  OLD: \ZK_N_4_ZL_aKC/zamowien.fml
::----------------------------------------------------------------------------------------------------------------------
  _ZLref:={? var_pres('_a')=type_of(ZL.ref())   || _a || return() ?};
_NewStat:={? var_pres('_b')=type_of('')         || _b || return() ?};
_GROPref:={? var_pres('_c')=type_of(GROP.ref()) || _c || null()   ?};

ZL.cntx_psh(); GROP.cntx_psh();
ZL.clear(); GROP.clear();

{? (_ZLref<>null() & ZL.seek(_ZLref)) | (_GROPref<>null() & GROP.seek(_GROPref))
|| _typzam:=exec('GetTYPYZAM4ZL','zamsiw_wspolne');
   {? _typzam<>null()
   || ZK_N.cntx_psh();
      {? _ZLref<>null()
      || ZK_N.index('ATZZLWYD');
         ZK_N.prefix('A',_typzam,_ZLref)
      || ZK_N.index('ATZGRWYD');
         ZK_N.prefix('A',_typzam,_GROPref)
      ?};
      {? ZK_N.first()
      || {!
         |? {? ZK_N.LIM='T'
             & ZK_N.AKC<>_NewStat
            || ZK_N.AKC:=_NewStat;
               ZK_N.STAT_REJ:=_NewStat;
               ZK_N.put(1);
::             Produkcja - jeśli dostępny moduł planów strategicznych to po udanej
::             edycji pozycji zamówienia aktualizuje obiekt planowania
               {? exec('tpp_lic','tpp')='T'
               || exec('zkn2obj','px_obj',ZK_N.ref())
               ?};

               {? var_pres('__zam')>100
               || {? ~__zam.find_key(#ZK_P.N)
                  || __zam.N:=#ZK_P.N;
                     __zam.add(1)
                  ?}
               ||
                  exec('oblprea_zam','zamsiw_nag',ZK_N.ref())
               ?}
            ?};
            ZK_N.next()
         !}
      ?};
      ZK_N.cntx_pop()
   ?}
?};

ZL.cntx_pop(); GROP.cntx_pop();
~~


\zmien_kolor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Zmienia kolor na aktualnie zaznaczonym zamówieniu
::  OLD: \zmien_kolor/zk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zk_kol_zmien','zamsiw_nag',$ZK_N.ref());
~~


\zk_kol_zmien
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Zmienia kolor zamówieniu podanemu w parametrze
::   WE: _a - Ref sql nagłówka zamówienia - $ZK_N.ref()
::       _b - kolor na który chcemy zmienić, jesli nie podany wyświetla okienko wyboru
::  OLD: \zk_kol_zmien/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0
|| return()
?};
ZK_N.cntx_psh();
ZK_N.clear();
{? ZK_N.seek(_a,ZK_N.name())
|| {? _=2
   || ZK_N.KOLOR:=_b;
      ZK_N.put()
   || exec('kolor_f3','zamsiw_nag');
      ZK_N.put()
   ?}
?};
ZK_N.cntx_pop();
~~


\kolor_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Formuła na F3 pola ZK_N.KOLOR
::  OLD: \kolor_f3/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_q:=exec('edit_color','#edit',ZK_N.KOLOR);
{? _q<>''
|| ZK_N.KOLOR:=_q
?};
~~


\prefaktz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizacja znacznikow dla wszytstkich ZK_N-ow w aktualnej dziedzinie
::  OLD: \prefaktz/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh();
{? ZK_N.first()
|| {!
   |? exec('aktznzkn','zamsiw_nag',ZK_N.ref(),1);
      ZK_N.next()
   !}
?};
ZK_N.cntx_pop();
~~


\zakr_ind_wew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: ustawia zakres na zamowieniach dostaw
::   WE:  _a  0 - bez planu, 1 - z prefixem na plan (tylko na plan)
::       [_b] - 1-(domyślnie) zmiana wyłącznie prefiksu, 0- nie
::  OLD: \zakr_set/zd.fml
::  OLD: \zakr_ind/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_only:={? var_pres('_b')=type_of(0) || _b || 1 ?};

BEER.ZAKR:={? ZAKR.ARCH_ROK<>''
           || 'ARCHIWALNE Z '+ZAKR.ARCH_ROK+' ROKU '
           || 'WSZYSTKIE  '
           ?};
_maska:={? ZAKR.ARCH_ROK='' || '__' || ZAKR.ARCH_ROK+2 ?};
_zm_maski:=(ZK_N.name+2)<>_maska;
{? _zm_maski || exec('openz','open_tab',ST.ODDZ+_maska) ?};
ZK_N.clear;
_ind:='''T'',,,''T'',''R'',,';
_prf:={? BEER.TYPYZAM<>null || 'BEER.TYPYZAM,''W'',' || 'null(),''W'',' ?};

{? ZAKR.WYD<>null
|| _ind+='''WYD'',,,';_prf+='ZAKR.WYD,';BEER.ZAKR+='wydział '+ZAKR.WYD().KOD+' | '
?};
{? ZAKR.ZL<>null
|| ZAKR.ZLSYM:=ZAKR.ZL().SYM;
   _ind+='''ZL'',,,';_prf+='ZAKR.ZL,';BEER.ZAKR+='zlecenie '+ZAKR.ZL().SYM+' | '
?};
{? ZAKR.US<>null
|| _ind+='''US'',,,';_prf+='ZAKR.US,';BEER.ZAKR+='użytkownik '+ZAKR.US().KOD+' | '
?};

_ind+='''SYM'',,,';
BEER.ZAKR:=BEER.ZAKR-2;

{? _ind<>''
|| _ind:=_ind-1;_prf:=_prf-1;
   {? ~_only
   || ZK_N.ndx_drop();
      _ndx:=($('ZK_N.ndx_tmp('''',,'+_ind+',\'NR\',,)'))();
      ZK_N.index(_ndx)
   ?};
   ($('ZK_N.prefix('+_prf+')'))()
?};
''


\zakr_set_wew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Ustawienie zakresu zamówień sprzedaży
::   WE: [_a] - 1-(domyślnie) zmiana wyłącznie prefiksu, 0- nie
::----------------------------------------------------------------------------------------------------------------------
_prf:={? var_pres('_a')=type_of(0) || _a || 1 ?};
_user:=OPERATOR.USER().KOD;
OZ.index('OZ');
OZ.prefix(_user,_user);
{? ~OZ.first()
|| OZ.blank();
   OZ.USER:=_user;
   OZ.US:=OPERATOR.USER;
   OZ.add()
?};
OZ.ZK_WYD:=ZAKR.WYD; OZ.ZK_ZL:=ZAKR.ZL; OZ.ZK_US:={? ZAKR.US=null || 2 || 1 ?};
OZ.put(1);
no_msg(1); exec('zakr_ind_wew','zamsiw_nag',0,_prf); _err:=errno(); no_msg(0)


\who_rlock_zkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: Sprawdzenie kto blokuje rekord ZK_N
::   WE: _a - 0-sprawdzać kto blokuje, 1-nie sprawdzać i zapisać informację do __kom
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & _a
|| __kom.add('Dokument obsługuje inny użytkownik.'@,7)
|| {? FUN.ask('Dokument %1 obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@ [ZK_N.SYM]) & ZK_N.r_lock(1,,1)
   || ZK_N.r_unlock()
   ?}
?}


\zkn_anuluj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: Anulowanie zamówienia sprzedaży/wewnętrznego (bieżącego w buforze)
::   WY: czy anulowanie dokumentu się powiodło 0 - nie / 1- tak
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? _r_lock:=exec('r_lock_one','#table',ZK_N,ZK_N.ref)
||
   _obl_stan:=tab_tmp(1
      ,'M',    'STRING[16]',  '$M.ref()');
   _wg_mg:={? ZK_N.T().R='Z' || 2 || 9 ?};
   do();
   ZK_N.cntx_psh();
   ZK_N.STAT_REJ:='A';
   ZK_N.A:='Z';
   {? ZK_N.put(1)
   ||
      {? ~_obl_stan.find_key($ZK_P.M)
      ||
         _obl_stan.M:=$ZK_P.M;
         _obl_stan.add()
      ?};
::    anulowanie operacji kompletacji
      _refsql:=$ZK_N.ref();
      EANN.cntx_psh();
      EANP.cntx_psh();
      _msk:=EANN.names();
      _msk.clear();
      {? _msk.first()
      || {!
         |? _mask:=form(_msk.NAME)+3;
            {? (1+_mask)=ST.ODDZ
            || exec('openean','open_tab',_mask);
               EANN.index('REFSQL');
               EANN.prefix(_refsql,);
               {? EANN.first()
               || _ile:=EANN.size();
                  {!
                  |? _ile-=1;
                     _ref:=EANN.ref(); _ok:=EANN.next();
                     EANN.cntx_psh();
                     EANN.prefix();
                     {? EANN.seek(_ref)
                     || {? EANN.TYP='W' | (_mask+2)<>'__'
                        || EANN.REFSQL:='';
                           EANN.put(1)
                        || {? ~exec('anuleann','magazyn_mob',0) || undo() ?}
                        ?}
                     ?};
                     EANN.cntx_pop();
                     _ile>0 & _ok
                  !}
               ?}
            ?};
            _msk.next()
         !}
      ?};
      EANN.cntx_pop();
      EANP.cntx_pop();
      _wyn:=1;
      ZK_N.cntx_psh();
      exec('uidref_update','#b__box',ZK_N.uidref(),'');
      ZK_N.cntx_pop();
::    usuniecie rezerwacji pozycji zamowienia
      {? ZK_N.name()+3=ST.ODDZ+'__'
      ||
         BEER.ZK_N:=ZK_N.ref();
         BEER.WG:=ZK_N.WG;
         BEER.TYP:='Z';
         ZK_P.index('TYPN');
         ZK_P.prefix('A',BEER.TYP,BEER.ZK_N,1);
         {? ZK_P.first()
         || exec('rez_pozy','rezerwacje',3,1)
         ?};

         {? exec('deaktpoz','zamsiw_wspolne',ZK_N.ref,'Z',1)
         || _deakt:=1
         ?}
      ?}
   ?};
   ZK_N.cntx_pop();
   {?  do_state()<>1 || _wyn:=0 ?};
   {? end()
   ||
      _loop:=_obl_stan.first();
      {!
      |? _loop
      |!
         _mat:=exec('FindAndGet','#table',M,_obl_stan.M,,,null());
         {? _mat
         ||
            BUFMG.index('US');
            BUFMG.prefix(OPERATOR.USER,_wg_mg);

            _loop:=BUFMG.first();
            {!
            |? _loop
            |!
               exec('obl_stan','magazyn_stan',_mat,1,BUFMG.MG);
               _loop:=BUFMG.next()
            !}
         ?};
         _loop:=_obl_stan.next()
      !};
::    Uruchamian cleanera - czyszcze pozostałe po zamówieniu zadania na TODO
      exec('clean_record','#b__box',ZK_N.uidref(),0)

   ?};
   exec('r_unlock_one','#table',ZK_N,ZK_N.ref(),_r_lock)
||
   exec('who_rlock_zkn','zamsiw_nag')
?};
_wyn


\po_typsz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: podpowiadanie NIP UE
::----------------------------------------------------------------------------------------------------------------------
exec('zkn_nip_ue','zamsiw_nag');
1


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.02]
:: OPIS: dodaje nagłówek zamówienia - formuła główna
::   WE: _a - 'webservice', 'edi'
::       _b - buffer ZK_N
::       _c - nazwa konfiguracji (BASELINKER/ABSTOREB2B/ABSTOREB2C)
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_context:=_a;
_zk_n:=_b;
_name_conf:={? var_pres('_c')=type_of('')|| _c || '' ?};
{? _context='edi'
|| exec('add_zkn','edi_form',,_context)
|? _context='webservice'
|| exec('add_zkn','zamsiw_nag',_zk_n,_context,_name_conf)
?}


\add_zkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.02]
:: OPIS: dodaje nagłówek zamówienia
::   WE: _a - buffer ZK_N
::       _b - 'webservice', 'edi'
::       _c - nazwa konfiguracji (BASELINKER/ABSTOREB2B/ABSTOREB2C)
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_Zk_n:=_a;
_context:=_b;
_name_conf:={? var_pres('_c')=type_of('')|| _c || '' ?};

_result:=0;

_typ:=exec('FindAndGet','#table',TYPYZAM,$_Zk_n.T,,"TYPYZAM.T",'');
{? _typ=''
||
   FUN.emsg('Nieprawidłowy typ zamówienia.'@);
   return(_result)
?};

exec('bl_zkn','edi_form',_typ,_Zk_n.ODDZ,'');
exec('fill_zkn','zamsiw_nag',_Zk_n,_name_conf);

{? exec('spr_nzam','zamsiw_nag',,_context,_name_conf)=''
||
   ZK_N.prefix();
   _result:=exec('add_zkn','edi_form',,_context,_name_conf)
?};
_result


\fill_zkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.02]
:: OPIS: uzupełnia pola niezbędne do prawidłowego działania zamówienia
::   WE: _a - buffer ZK_N
::       _c - nazwa konfiguracji (BASELINKER/ABSTOREB2B/ABSTOREB2C)
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_Zk_n:=_a;
_name_conf:={? var_pres('_c')=type_of('')|| _c || '' ?};
:: wartości przekazane
ZK_N.T:=_Zk_n.T;
ZK_N.ZAM_KL:=_Zk_n.ZAM_KL;
ZK_N.KH:=_Zk_n.KH;
ZK_N.HAN:=_Zk_n.HAN;
ZK_N.ODDZ:=_Zk_n.ODDZ;
ZK_N.DP:=_Zk_n.DP;
ZK_N.TP:=_Zk_n.TP;
ZK_N.DT:=_Zk_n.DT;
ZK_N.KHCLIENT:=_Zk_n.KHCLIENT;
ZK_N.ODB:=_Zk_n.ODB;
ZK_N.ODBID:=_Zk_n.ODBID;
ZK_N.OSOB:=_Zk_n.OSOB;
ZK_N.OSOBID:=_Zk_n.OSOBID;
ZK_N.MG:=_Zk_n.MG;
ZK_N.MGSYM:=_Zk_n.MGSYM;
ZK_N.IDABSTOR:=_Zk_n.IDABSTOR;
ZK_N.PL:=_Zk_n.PL;
ZK_N.PL:=_Zk_n.PL;
ZK_N.PL:=_Zk_n.PL;
ZK_N.ABS_SCON:=_Zk_n.ABS_SCON;
ZK_N.ABS_STA:=_Zk_n.ABS_STA;
ZK_N.BASLIN_K:=_Zk_n.BASLIN_K;
ZK_N.BASLIN_O:=_Zk_n.BASLIN_O;
ZK_N.BASLIN_H:=_Zk_n.BASLIN_H;
ZK_N.BASLIN_E:=_Zk_n.BASLIN_E;
ZK_N.TR_ZEWN:=_Zk_n.TR_ZEWN;
ZK_N.TRN:=_Zk_n.TRN;
ZK_N.KH_MSC:=_Zk_n.KH_MSC;
ZK_N.memo_set(_Zk_n.UW,'UW');
{? _name_conf=~(-'Abstoreb2c') || ZK_N.CB:='T' ?};
:: dodatkowe uzupełnienie
{? ZK_N.HAN=null()
   &
   (
      ZK_N.KH<>null() & exec('kh_dod_ini','kontrahent',ZK_N.KH,0)
      |
      ZK_N.KHCLIENT<>'' & exec('kh_dod_ini','kontrahent'
         ,exec('FindInSet','#table','KH','LOTUSUID',ZK_N.KHCLIENT,2,,1,,null()),0)
   )
||
   ZK_N.HAN:=KH_DOD.HAN
?};
ZK_N.PL_DATA:=ZK_N.DT;
~~


\zknag_pozycje_disp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [19.42]
:: OPIS: Zamówienia sprzedaży - Pozycje - okno wertowania, tylko podgląd
::----------------------------------------------------------------------------------------------------------------------
exec('zam_poz','zamsiw_poz',1,0);
''


\zknag_display_pozycje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [19.42]
:: OPIS: Podgląd nagłówka zamówienia + podgląd pozcycji
::----------------------------------------------------------------------------------------------------------------------
ZK_P.use((5+ZK_P.name())+(ref_name(ZK_N.ref())+3));
_edit:=ZK_N.win_edit('?');
exec('zknag_win_edit_set','zamsiw_nag',1,1);
ZK_N.memo_get(,'UW');
ZK_N.display();
ZK_N.win_edit(_edit);
~~


\zknag_tra_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Formuła określiająca ikony
::----------------------------------------------------------------------------------------------------------------------
"  _tra:=exec('czyTRANSPORT','transport_wspolne',ZK_N.uidref());
   {? _tra || exec('transpDO','icon')
   || exec('pusta','#icon')
   ?}
"


\pr_zkndt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: przed redakcją ZK_N.DT
::----------------------------------------------------------------------------------------------------------------------
DPOZ.WPR_D:=fld();
''


\zknag_sym_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Formuła określająca ikony
::----------------------------------------------------------------------------------------------------------------------
"{? ZK_N.STAN*'WYS'
 || 'xwin16.png:166'
 |? ZK_N.OBI_POW<>''
 || 'xwin16.png:90'
 || exec('pusta','#icon')
 ?}
"


\zam_clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Uniwersalna funkcja czyszcząca czynności dla zamówień sprzedaży - w razie potrzeby jak nie ma rekordu
::       kluczowego zrobi done albo error. Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: _a - _mp - obiekt Menadżera procesów
::       _b - tablica z parametrami wejściowymi
::   WY: obj_new() - obiekt wynikowy
::----------------------------------------------------------------------------------------------------------------------
_mp:=_a;
_in:=_b;

_can_continue:=1;
_obj:=obj_new('RESULT','ZK_N');
_obj.RESULT:=0;
_obj.ZK_N:=null();

_keyRefs:=_mp.getRefs();

{? obj_len(_keyRefs)>0
||
   {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];
      {? type_of(_kref)>0
      ||
         {? (5+ref_name(_kref))=(5+ZK_N.name())
         || _obj.ZK_N:=exec('FindAndGet','#table',ZK_N,_kref,,,null());
            {? _obj.ZK_N=null()
            ||
::             Nie znaleziono rekordu kluczowego powiązanego z zamówieniem, więc robię error
               _can_continue:=0;
               exec('zam_deleted_in_proc','zamowienia',_mp)
            |? ~_mp.isMicro() & exec('FindAndGet','#table',ZK_N,_obj.ZK_N,,"(name()+2)<>'__'",0)
            ||
::             Zamówienie przeniesione do archiwum, robię error
               _can_continue:=0;
               exec('zam_deleted_in_proc','zamowienia',_mp,,,1)
            |? ~_mp.isMicro() & exec('FindAndGet','#table',ZK_N,_obj.ZK_N,,"STAT_REJ='A'",0)
            ||
::             Zamówienie anulowane, robię error
               _can_continue:=0;
               exec('zam_deleted_in_proc','zamowienia',_mp,,,2)
            ?}
         ?}
      ?}
   !}
?};

{? _can_continue>0
||
:: jest parametr wejściowy ZK_N
   {? _obj.ZK_N=null() & var_pres('ZK_N',_in)=type_of(null())
   || _obj.ZK_N:=_in.ZK_N
   ?}
?};

{? _can_continue>0
|| _obj.RESULT:=1
?};
_obj


\zkn_obimus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.37]
:: OPIS: oznaczenie wymogu obiegu dla zamówienia sprzedaży / wewnętrznego
::   WE: _a - ZK_N.ref()
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh();
ZK_N.clear();
{? ZK_N.seek(_a,,1)
|| ZK_N.OBI_MUS:='T';
   ZK_N.put(1)
?};
ZK_N.cntx_pop();
~~


\zkonto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: wartość początkowa pola ZK_N.KK
::----------------------------------------------------------------------------------------------------------------------
TYPYZAM.KK


\zkn_wal_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Ustawienie waluty zamówienia sprzedaży wg typu, kontrahenta lub odbiorcy
::   WE: _a - czy wykonać "zkn_wal_set_po"
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0)
|| _a:=0
?};
{? ZK_N.T<>null() & ZK_N.T().R='Z' & exec('czy_poz','eurusd')
|| _wal:=null();
   KH.cntx_psh();
   KH_ODB.cntx_psh();
   {? ZK_N.ODB().KH_LNK<>null()
   || exec('kh_dod_ini','kontrahent',ZK_N.ODB().KH_LNK);
      {? KH_DOD.WAL<>null()
      || _wal:=KH_DOD.WAL
      ?}
   ?};
   {? _wal=null() & ZK_N.KH<>null()
   || exec('kh_dod_ini','kontrahent',ZK_N.KH);
      {? KH_DOD.WAL<>null()
      || _wal:=KH_DOD.WAL
      ?}
   ?};
   {? _wal=null() & ZK_N.T().WAL<>null()
   || _wal:=ZK_N.T().WAL
   ?};
   KH.cntx_pop();
   KH_ODB.cntx_pop();
   {? _wal=null()
   || _wal:=exec('bl_wal','ustawienia')
   ?};
   {? _wal<>null() & ZK_N.WAL<>_wal
   || ZK_N.WAL:=_wal;
      ZK_N.KRS:=0;
      {? ZK_N.WAL<>exec('bl_wal','ustawienia')
      || _bankrs:={? KSTE.BANKRS<>null() || KSTE.BANKRS || INFO.BANKRS ?};
         _typkrs:={? KSTE.TYPKRS<>null() || KSTE.TYPKRS || INFO.TYPKRS ?};
         {? _bankrs<>null()
         || exec('dkurs','eurusd',_bankrs,_typkrs,,'ZK_N.KRS');
            exec('po_krs','eurusd','ZK_N.KRS')
         ?}
      ?};
      {? _a
      || exec('zkn_wal_set_po','zamsiw_nag')
      ?}
   ?}
?};
~~


\zkn_wal_set_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Po ustawieniu waluty zamówienia sprzedaży wg typu, kontrahenta lub odbiorcy
::----------------------------------------------------------------------------------------------------------------------
{? ZK_N.WAL=exec('bl_nwal','ustawienia')
|| ZK_N.SWAL:=2;
   ZK_N.KRS:=0;
   ZK_N.DTK:=date(0,0,0);
   ZK_N.BTK:='';
   ZK_N.RTK:=0;
   ZK_N.NTK:=''
?};
exec('set_efld_opt','zamsiw_nag');
~~


\ae_zkodb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: po wyborze odbiorcy na zamówieniu
::----------------------------------------------------------------------------------------------------------------------
exec('zkn_wal_set','zamsiw_nag',1);
~~


\zkn_nip_ue
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Ustawia wartość ND.NIP_UE
::----------------------------------------------------------------------------------------------------------------------
_ue_czy:=0;
{? ZK_N.KH().TYP='U' | (ZK_N.TR<>null() & ZK_N.TR().UE='T') |
   (ZK_N.T().TYPYDOK<>null() & ZK_N.T().TYPYDOK().UE='T')
|| _ue_czy:=1
?};
{? INTRAST.NIP<>''
|| _nip:=INTRAST.NIP;
   {? _ue_czy
   || _snip:={? (1+(2-_nip))=' ' || (2+_nip)+(3-_nip) || _nip ?};
      NIPY.index('SNIP');
      NIPY.prefix(ZK_N.KH,_snip);
      {? NIPY.first()
      || INTRAST.NIP:=ZK_N.NIP_UE:={? NIPY.next() || '' || exec('nip_ue','kontrahent') ?}
      || INTRAST.NIP:=ZK_N.NIP_UE:=''
      ?}
   || INTRAST.NIP:=ZK_N.NIP_UE:=''
   ?}
?};
{? INTRAST.NIP='' & _ue_czy
|| ZK_N.NIP_UE:='';
   NIPY.index('SNIP');
   NIPY.prefix(ZK_N.KH);
   {? NIPY.first()
   || INTRAST.NIP:=ZK_N.NIP_UE:={? NIPY.next() || '' || exec('nip_ue','kontrahent') ?};
      {? INTRAST.NIP=''
      ||
::             Jeżeli do kontrahenta przypisano więcej NIP-ów, to sprawdzam czy posiada NIP domyślny
         NIPY.index('DEFAULT');
         NIPY.prefix(ZK_N.KH,'T');
         {? NIPY.first()
         || INTRAST.NIP:=ZK_N.NIP_UE:={? NIPY.next() || '' || exec('nip_ue','kontrahent') ?}
         ?}
      ?}
   ?}
?};
{? INTRAST.NIP='' & ~_ue_czy || ZK_N.NIP_UE:='' ?};
~~


\zknag_akceptuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument zakupu - Akceptuj
::       Obsługa w formule main
::   WE: [_a] - 0(domyślnie) 1-automatyczna akcja
::----------------------------------------------------------------------------------------------------------------------
_act_uid:={? ZK_N.T().R='Z' || 'LSP_ZKN_ERZA' || 'LMG_ZAM_DRZA' ?};
{? _act_uid<>''
|| _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:=_act_uid;
   _params.UIDREF:=ZK_N.uidref();
   _params.AKCJA:={? var_pres('_a')=type_of(0) & _a || 'AkceptujAuto' || 'Akceptuj' ?};
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZK_N',ZK_N.ref());

   exec('mp_run','#b__box',_params)
?}


\zkn_bs_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Ustawienie statusu dokumentu Businesslink dla zamówienia sprzedaży
::----------------------------------------------------------------------------------------------------------------------
DOKUM.cntx_psh();
DOKUM.index('DOKUM');
DOKUM.prefix(REF.FIRMA,$ZK_N.ref());
{? DOKUM.first()
|| {!
   |? {? DOKUM.BL='T' & DOKUM.DG_UID=''
      || exec('bl_act','zbl_dok','ORD',DOKUM.ref())
      ?};
      DOKUM.next()
   !}
?};
DOKUM.cntx_pop();
~~

:Sign Version 2.0 jowisz:1045 2023/10/18 13:16:54 e2a7003e9ce1ad0e45baf62392011ae080a1203bd3cd306fba4a0ec79e5a6dbb0b6185c300995a4955df73d8167e553b9324b0a98df657b0e74a07793e46aa446ce0fa93e19df793b23df4d9362b141643222db5fd53ec3d482517956ab9c037994867ac333d65d387a962876511a2617992bd4fee50b4c6e337a792fbf80798
