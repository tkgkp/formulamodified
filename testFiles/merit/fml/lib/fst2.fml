:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: fst2.fml
:: Utworzony: 05.07.2020
:: Autor: KN
:: Systemy: FST
::======================================================================================================================
:: Zawartość: Formuły obszaru FST
::======================================================================================================================
\tor_dodatkowy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------
_sql:='select * from MA where RODZAJ=';
{? __tor='podatkowy'
|| _sql+='''P'''
|? __tor='bilansowy'
|| _sql+='''F'''
?};
__tab:=sql(_sql);
{? __tab.first()
|| {! |?
         __tab.CZESTO_O:=__tab.K;
         {? __tor='podatkowy'
         || {? __tab.PD='SRD.PodstDegrPod()'
            || __tab.PD:='SRD.PodstDegrDod()'
            ?};
            {? _znak:='SRST.WARP'*__tab.PL
            || __tab.PL:=((_znak-1)+__tab.PL)+'SRST.WARD'+(__tab.PL+((+__tab.PL)-(_znak+9)))
            ?};
            {? 9+__tab.PL='SRST.WARP'
            || __tab.PL:='SRST.WARD'+(9-__tab.PL)
            ?}
         |? __tor='bilansowy'
         || {? __tab.PD='SRD.PodstDegrFin()'
            || __tab.PD:='SRD.PodstDegrDod()'
            ?};
            {? _znak:='SRST.WARF'*__tab.PL
            || __tab.PL:=((_znak-1)+__tab.PL)+'SRST.WARD'+(__tab.PL+((+__tab.PL)-(_znak+9)))
            ?};
            {? 9+__tab.PL='SRST.WARF'
            || __tab.PL:='SRST.WARD'+(9-__tab.PL)
            ?}
         ?};
         __tab.put;
         __tab.next()
   !}
?};
_akr:=__tab.mk_sel('Metody amortyzacji - tor dodatkowy'@,,,,,,10);
__tab.win_fld(_akr,,'K',,,,,,'Kod'@);
__tab.win_fld(_akr,,'N',,,,,,'Nazwa'@);
__tab.win_fld(_akr,,'T',,,,,1,'Typ'@);
__tab.win_fld(_akr,,'PD',,,30,,,'Podstawa degresywna'@);
__tab.win_fld(_akr,,'PL',,,30,,,'Podstawa inne metody'@);
::__tab.fld_fml('K','AFTER_EDIT',"exec('walidacja_kod','fst2')");
::__tab.win_act(_akr,,'Popraw');
__tab.win_act(_akr,,'Formuła','Popraw'@,,,"exec('popraw_ma','fst2')");
__tab.win_act(_akr,,'Formuła','Walidacja'@,,,"exec('walidacja_kod3','fst2')");
__tab.win_sel(_akr);

_akr:=__tab.mk_edit('Metody amortyzacji - tor dodatkowy'@);
__tab.win_efld(_akr,,'K',,,,,,'Kod'@);
__tab.win_efld(_akr,,'N',,,,,,'Nazwa'@);
__tab.win_efld(_akr,,'T',,,,,1,'Typ'@);
__tab.win_efld(_akr,,'PD',,,30,,,'Podstawa degresywna'@);
__tab.win_efld(_akr,,'PL',,,30,,,'Podstawa inne metody'@);
_zapisz:=__tab.win_ebtn(_akr,'text=Zapisz'@,'key:F2');
_anuluj:=__tab.win_ebtn(_akr,'text=Anuluj'@,'key:Esc');
__tab.btn_eopt(_akr,_zapisz,'tooltip='+exec('help_red_ok','#window','Z'));
__tab.btn_eopt(_akr,_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
__tab.win_edit(_akr);


{!
|? _ok:=__tab.select();
      _ok:=~exec('walidacja_kod2','fst2');
      _ok
!};


_sql:='select KOD as KOD1, '+
      'KOD as KOD2, '+
      'FIRMA, '+
      'KOM, '+
      'RODZ '+
      'from ZSKON where FIRMA=:_a and RODZ =';
{? __tor='podatkowy'
|| _sql+='''P'''
|? __tor='bilansowy'
|| _sql+='''F'''
?};
__tab2:=sql(_sql,REF.FIRMA);


{? __tab2.first()
|| {! |?
         __tab2.KOD1:='DOD_'+__tab2.KOD1;
         __tab2.put;
         __tab2.next()
   !}
?};
_akr:=__tab2.mk_sel('Zestawy kont - tor dodatkowy'@,,,,,,10);
__tab2.win_fld(_akr,,'KOD1',,,,,,'Kod zestawu kont'@);
__tab2.win_fld(_akr,,'KOM',,,,,,'Opis zestawu kont'@);
::__tab2.win_act(_akr,,'Popraw');
__tab2.win_act(_akr,,'Formuła','Popraw'@,,,"exec('popraw_zk','fst2')");
::__tab2.win_act(_akr,,'Formuła','Składniki zestawu',,,"exec('sklad_zes','fst2')");
__tab2.win_sel(_akr);
_akr:=__tab2.mk_edit('Zestawy kont - tor dodatkowy'@);
__tab2.win_efld(_akr,,'KOD1',,,,,,'Kod zestawu kont'@);
__tab2.win_efld(_akr,,'KOM',,,,,,'Opis zestawu kont'@);
_zapisz:=__tab2.win_ebtn(_akr,'text=Zapisz'@,'key:F2');
_anuluj:=__tab2.win_ebtn(_akr,'text=Anuluj'@,'key:Esc');
__tab2.btn_eopt(_akr,_zapisz,'tooltip='+exec('help_red_ok','#window','Z'));
__tab2.btn_eopt(_akr,_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
__tab2.win_edit(_akr);

__tab2.select();
do();
_fmaska:='r'+REF.FIRMA().SYMBOL;
SRDO.cntx_psh(); SRDT.cntx_psh(); SRSR.cntx_psh(); SRST.cntx_psh();
SRSW.cntx_psh(); SRZD.cntx_psh(); SRZF.cntx_psh(); SRXD.cntx_psh();
SRDO.use('srdo'+_fmaska);
SRDT.use('srdt'+_fmaska);
SRSR.use('srsr'+_fmaska);
SRST.use('srst'+_fmaska);
SRSW.use('srsw'+_fmaska);
SRZD.use('srzd'+_fmaska);
SRZF.use('srzf'+_fmaska);
SRXD.use('srxd'+_fmaska);
SRST.trig_off('*','*');
progress(0, 'Trwa uruchamianie obsługi dodatkowego toru amortyzacji.', 'Dodatkowy tor amortyzacji');
exec('typy_dokumentow','fst2');
progress(10, 'Trwa uruchamianie obsługi dodatkowego toru amortyzacji.', 'Dodatkowy tor amortyzacji');
exec('metody_amortyzacji','fst2');
progress(20, 'Trwa uruchamianie obsługi dodatkowego toru amortyzacji.', 'Dodatkowy tor amortyzacji');
exec('zestawy_kont','fst2');
progress(30, 'Trwa uruchamianie obsługi dodatkowego toru amortyzacji.', 'Dodatkowy tor amortyzacji');
exec('srsr_kopiuj_dod','fst2');
progress(50, 'Trwa uruchamianie obsługi dodatkowego toru amortyzacji.', 'Dodatkowy tor amortyzacji');
exec('srst_kopiuj_dod','fst2');
progress(70, 'Trwa uruchamianie obsługi dodatkowego toru amortyzacji.', 'Dodatkowy tor amortyzacji');
exec('srsw_kopiuj_dod','fst2');
progress(80, 'Trwa uruchamianie obsługi dodatkowego toru amortyzacji.', 'Dodatkowy tor amortyzacji');
exec('srdo_kopiuj_dod','fst2');
progress(90, 'Trwa uruchamianie obsługi dodatkowego toru amortyzacji.', 'Dodatkowy tor amortyzacji');
exec('srxd_kopiuj_dod','fst2');
exec('srzd_kopiuj_dod','fst2');
exec('srzf_kopiuj_dod','fst2');
progress(100, 'Trwa uruchamianie obsługi dodatkowego toru amortyzacji.', 'Dodatkowy tor amortyzacji');
prgs_clr();
SRDO.cntx_pop(); SRDT.cntx_pop(); SRSR.cntx_pop(); SRST.cntx_pop();
SRSW.cntx_pop(); SRZD.cntx_pop(); SRZF.cntx_pop(); SRXD.cntx_pop();
SRST.trig_on('*','*');
end();
&__tor; &__tab; &__tab2


\popraw_ma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------
{? __tab.edit("exec('walidacja_kod','fst2')")
|| __tab.put()
?}

\popraw_zk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------
{? __tab2.edit()
|| __tab2.put()
?}

\walidacja_kod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------

MA.cntx_psh();
MA.index('MA');
MA.prefix();
__tab.cntx_psh();
_ret:=1;
{? MA.find_key(__tab.K)
|| _ret:='K';
   FUN.emsg('Nieunikalny kod metody amortyzacji.')
?};
_kod:=__tab.K;
_licznik:=0;
{? __tab.first()
||
   {! |?
         {? _kod=__tab.K
         || _licznik+=1
         ?};
         __tab.next()
   !};
   {? _licznik>0
   || _ret:='K';
      FUN.emsg('Nieunikalny kod metody amortyzacji.')
   ?}
?};
MA.cntx_pop();
__tab.cntx_pop();
_ret

\walidacja_kod2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------
MA.cntx_psh();
MA.index('MA');
MA.prefix();
_msg:='Nieunikalne kody: ';
{? __tab.first()
|| {! |?
         {? MA.find_key(__tab.K)
         || _msg+=__tab.K+', '
         ?};
         __tab.next()
   !}
?};
{? __tab.first()
||
   {! |?
         __tab.cntx_psh();
         _kod:=__tab.K;
         _licznik:=0;
         __tab.first();
         {! |?
               {? _kod=__tab.K
               || _licznik+=1
               ?};
               __tab.next()
         !};
         {? _licznik>1
         || _msg+=_kod+', '
         ?};
         __tab.cntx_pop();
         __tab.next()
   !}
?};
{? +_msg=18
|| _msg:='Wszystkie kody są unikalne.';
   MA.cntx_pop();
   return(1)
|| _msg:=_msg-2;
   _msg+='. \nNależy poprawić kody na unikalne.';
   FUN.info(_msg);
   __tab.first();
   MA.cntx_pop();
   return(0)
?}

\walidacja_kod3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------
MA.cntx_psh();
MA.index('MA');
MA.prefix();
_msg:='Nieunikalne kody: ';
{? __tab.first()
|| {! |?
         {? MA.find_key(__tab.K)
         || _msg+=__tab.K+', '
         ?};
         __tab.next()
   !}
?};
{? __tab.first()
||
   {! |?
         __tab.cntx_psh();
         _kod:=__tab.K;
         _licznik:=0;
         __tab.first();
         {! |?
               {? _kod=__tab.K
               || _licznik+=1
               ?};
               __tab.next()
         !};
         {? _licznik>1
         || _msg+=_kod+', '
         ?};
         __tab.cntx_pop();
         __tab.next()
   !}
?};
{? +_msg=18
|| _msg:='Wszystkie kody są unikalne.';
   FUN.info(_msg);
   __tab.first();
   MA.cntx_pop();
   return(1)
|| _msg:=_msg-2;
   _msg+='. \nNależy poprawić kody na unikalne.';
   FUN.info(_msg);
   __tab.first();
   MA.cntx_pop();
   return(0)
?}

\typy_dokumentow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------

SRDT.cntx_psh();
SRDT.index('TYP');
SRDT.prefix();
{? SRDT.first()
|| {! |?
         {? __tor='podatkowy'
         || SRDT.WARD:=SRDT.WARP;
            SRDT.UMOD:=SRDT.UMOP;
            SRDT.MD:=SRDT.MP;
            SRDT.STAD:=SRDT.STAP;
            SRDT.WKD:=SRDT.WKP;
            SRDT.KONDOD:=SRDT.KONPOD
         |? __tor='bilansowy'
         || SRDT.WARD:=SRDT.WARF;
            SRDT.UMOD:=SRDT.UMOF;
            SRDT.MD:=SRDT.MF;
            SRDT.STAD:=SRDT.STAF;
            SRDT.WKD:=SRDT.WKF;
            SRDT.KONDOD:=SRDT.KONFIN
         ?};
         SRDT.put();
         SRDT.next()
   !}
?};
SRDT.cntx_pop()


\metody_amortyzacji
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------

MA.cntx_psh();
MA.index('MA_RODZ');
MA.prefix('D');
{? MA.first()
|| {! |?
         MA.del()
   !}
?};
MA.cntx_pop();
MA.cntx_psh();
MA.index('MA');
{? __tab.first()
|| {! |?
         {? MA.prefix(); MA.find_key(__tab.CZESTO_O)
         || MA.RODZAJ:='D';
            MA.K:=__tab.K;
            MA.N:=__tab.N;
            MA.PD:=__tab.PD;
            MA.PL:=__tab.PL;
            __tab.cntx_psh();
            {? __tab.first() & MA.T='Degresywna'
            || {! |?
                     {? __tab.CZESTO_O = MA.LIN
                     || MA.LIN:=__tab.K
                     ?};
                     __tab.next()
               !}
            ?};
            __tab.cntx_pop();
            MA.add(1)
         ?};
         __tab.next()
   !}
?};
MA.cntx_pop()

\zestawy_kont
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------

ZSKON.cntx_psh();
ZSKON.index('KOD');
ZSKON.prefix(REF.FIRMA,'D');
{? ZSKON.first()
|| {! |?
         ZSKON.del()
   !}
?};
ZSKON.cntx_pop();
ZSKON.cntx_psh();
ZSKON.index('KOD');
ZSKON.prefix();
{? __tor='podatkowy'
|| {? __tab2.first()
   || {! |?
            ZSKON.cntx_psh();
            {? ZSKON.find_key(REF.FIRMA,'P',__tab2.KOD2)
            || KKOSZ.cntx_psh();
               KKOSZ.index('KONTO');
               KKOSZ.prefix(ZSKON.ref());
               ZSKON.RODZ:='D';
               ZSKON.KOD:=__tab2.KOD1;
               ZSKON.KOM:=__tab2.KOM;
               ZSKON.add(1);
               {? KKOSZ.first()
               || {! |?
                        KKOSZ.cntx_psh();
                        KKOSZ.prefix();
                        KKOSZ.ZESTAW:=ZSKON.ref();
                        KKOSZ.add();
                        KKOSZ.cntx_pop();
                        KKOSZ.next()
                  !}
               ?};
               KKOSZ.cntx_pop()
            ?};
            ZSKON.cntx_pop();
            __tab2.next()
      !}
   ?}
|? __tor='bilansowy'
|| {? __tab2.first()
   || {! |?
            ZSKON.cntx_psh();
            {? ZSKON.find_key(REF.FIRMA,'F',__tab2.KOD2)
            || KKOSZ.cntx_psh();
               KKOSZ.index('KONTO');
               KKOSZ.prefix(ZSKON.ref());
               ZSKON.RODZ:='D';
               ZSKON.KOD:=__tab2.KOD1;
               ZSKON.KOM:=__tab2.KOM;
               ZSKON.add(1);
               {? KKOSZ.first()
               || {! |?
                        KKOSZ.cntx_psh();
                        KKOSZ.prefix();
                        KKOSZ.ZESTAW:=ZSKON.ref();
                        KKOSZ.add();
                        KKOSZ.cntx_pop();
                        KKOSZ.next()
                  !}
               ?};
               KKOSZ.cntx_pop()
            ?};
            ZSKON.cntx_pop();
            __tab2.next()
      !}
   ?}
?};
ZSKON.cntx_pop()


\srst_kopiuj_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------

SRST.cntx_psh();
SRST.index('AMOR');
SRST.prefix();
{? SRST.first()
|| {? __tor='podatkowy'
 || {! |?
          SRST.WARD:=SRST.WARP;
          SRST.UMOD:=SRST.UMOP;
          SRST.AMOD:=SRST.AMOP;
          SRST.NETD:=SRST.NETP;
          SRST.STAD:=SRST.STAP;
          SRST.WKD:=SRST.WKP;
          SRST.DPLD:=SRST.DPLP;
          _zes:=SRST.KONPOD().KOD;
          {? _zes<>''
          || {? __tab2.first()
             || {! |?
                     {? __tab2.KOD2=_zes
                     || _zes_d:=__tab2.KOD1
                     ?};
                      __tab2.next()
                !}
             ?};
             ZSKON.cntx_psh();
             ZSKON.index('KOD');
             ZSKON.prefix(REF.FIRMA,'D',_zes_d);
             {? ZSKON.first()
             || SRST.KONDOD:=ZSKON.ref()
             ?};
             ZSKON.cntx_pop()
          ?};
          _kod:=SRST.MP().K;
          {? __tab.first()
          || {! |?
                  {? __tab.CZESTO_O=_kod
                  || _kod_d:=__tab.K
                  ?};
                   __tab.next()
             !}
          ?};
          MA.cntx_psh();
          MA.index('MA');
          MA.prefix(_kod_d);
          {? MA.first()
          || SRST.MD:=MA.ref()
          ?};
          MA.cntx_pop();
          SRST.put();
          SRST.next()
    !}
 |? __tor='bilansowy'
 || {! |?
          SRST.WARD:=SRST.WARF;
          SRST.UMOD:=SRST.UMOF;
          SRST.AMOD:=SRST.AMOF;
          SRST.NETD:=SRST.NETF;
          SRST.STAD:=SRST.STAF;
          SRST.WKD:=SRST.WKF;
          SRST.DPLD:=SRST.DPLF;
          _zes:=SRST.KONFIN().KOD;
          {? _zes<>''
          || {? __tab2.first()
             || {! |?
                     {? __tab2.KOD2=_zes
                     || _zes_d:=__tab2.KOD1
                     ?};
                      __tab2.next()
                !}
             ?};
             ZSKON.cntx_psh();
             ZSKON.index('KOD');
             ZSKON.prefix(REF.FIRMA,'D',_zes_d);
             {? ZSKON.first()
             || SRST.KONDOD:=ZSKON.ref()
             ?};
             ZSKON.cntx_pop()
          ?};
          _kod:=SRST.MF().K;
          {? __tab.first()
          || {! |?
                  {? __tab.CZESTO_O=_kod
                  || _kod_d:=__tab.K
                  ?};
                   __tab.next()
             !}
          ?};
          MA.cntx_psh();
          MA.index('MA');
          MA.prefix(_kod_d);
          {? MA.first()
          || SRST.MD:=MA.ref()
          ?};
          MA.cntx_pop();
          SRST.put();
          SRST.next()
    !}
 ?}
?};
SRST.cntx_pop()


\srsr_kopiuj_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------

SRSR.cntx_psh();
SRSR.index('KIND');
SRSR.prefix();
{? SRSR.first()
|| {? __tor='podatkowy'
   || {! |?
            SRSR.WARD:=SRSR.WARP;
            SRSR.UMOD:=SRSR.UMOP;
            SRSR.NETD:=SRSR.NETP;
            SRSR.STAD:=SRSR.STAP;
            SRSR.WKD:=SRSR.WKP;
            SRSR.DPLD:=SRSR.DPLP;
            _zes:=SRSR.KONPOD().KOD;
            {? _zes<>''
            || {? __tab2.first()
               || {! |?
                       {? __tab2.KOD2=_zes
                       || _zes_d:=__tab2.KOD1
                       ?};
                        __tab2.next()
                  !}
               ?};
               ZSKON.cntx_psh();
               ZSKON.index('KOD');
               ZSKON.prefix(REF.FIRMA,'D',_zes_d);
               {? ZSKON.first()
               || SRSR.KONDOD:=ZSKON.ref()
               ?};
               ZSKON.cntx_pop()
            ?};
            _kod:=SRSR.MP().K;
            {? __tab.first()
            || {! |?
                    {? __tab.CZESTO_O=_kod
                    || _kod_d:=__tab.K
                    ?};
                     __tab.next()
               !}
            ?};
            MA.cntx_psh();
            MA.index('MA');
            MA.prefix(_kod_d);
            {? MA.first()
            || SRSR.MD:=MA.ref()
            ?};
            MA.cntx_pop();
            SRSR.put();
            SRSR.next()
      !}
   |? __tor='bilansowy'
   || {! |?
            SRSR.WARD:=SRSR.WARF;
            SRSR.UMOD:=SRSR.UMOF;
            SRSR.NETD:=SRSR.NETF;
            SRSR.STAD:=SRSR.STAF;
            SRSR.WKD:=SRSR.WKF;
            SRSR.DPLD:=SRSR.DPLF;
            _zes:=SRSR.KONFIN().KOD;
            {? _zes<>''
            || {? __tab2.first()
               || {! |?
                       {? __tab2.KOD2=_zes
                       || _zes_d:=__tab2.KOD1
                       ?};
                        __tab2.next()
                  !}
               ?};
               ZSKON.cntx_psh();
               ZSKON.index('KOD');
               ZSKON.prefix(REF.FIRMA,'D',_zes_d);
               {? ZSKON.first()
               || SRSR.KONDOD:=ZSKON.ref()
               ?};
               ZSKON.cntx_pop()
            ?};
            _kod:=SRSR.MF().K;
            {? __tab.first()
            || {! |?
                    {? __tab.CZESTO_O=_kod
                    || _kod_d:=__tab.K
                    ?};
                     __tab.next()
               !}
            ?};
            MA.cntx_psh();
            MA.index('MA');
            MA.prefix(_kod_d);
            {? MA.first()
            || SRSR.MD:=MA.ref()
            ?};
            MA.cntx_pop();
            SRSR.put();
            SRSR.next()
      !}
   ?}
?};
SRSR.cntx_pop()

\srsw_kopiuj_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------

SRSW.cntx_psh();
SRSW.index('DOFIN');
SRSW.prefix();
{? SRSW.first()
|| {? __tor='podatkowy'
   || {! |?
            SRSW.WARD:=SRSW.WARP;
            SRSW.UMOD:=SRSW.UMOP;
            SRSW.NETD:=SRSW.NETP;
            SRSW.AMOD:=SRSW.AMOP;
            _zes:=SRSW.KONPOD().KOD;
            {? _zes<>''
            || {? __tab2.first()
               || {! |?
                       {? __tab2.KOD2=_zes
                       || _zes_d:=__tab2.KOD1
                       ?};
                        __tab2.next()
                  !}
               ?};
               ZSKON.cntx_psh();
               ZSKON.index('KOD');
               ZSKON.prefix(REF.FIRMA,'D',_zes_d);
               {? ZSKON.first()
               || SRSW.KONDOD:=ZSKON.ref()
               ?};
               ZSKON.cntx_pop()
            ?};
            SRSW.put();
            SRSW.next()
      !}
   |? __tor='bilansowy'
   || {! |?
            SRSW.WARD:=SRSW.WARF;
            SRSW.UMOD:=SRSW.UMOF;
            SRSW.NETD:=SRSW.NETF;
            SRSW.AMOD:=SRSW.AMOF;
            _zes:=SRSW.KONFIN().KOD;
            {? _zes<>''
            || {? __tab2.first()
               || {! |?
                       {? __tab2.KOD2=_zes
                       || _zes_d:=__tab2.KOD1
                       ?};
                        __tab2.next()
                  !}
               ?};
               ZSKON.cntx_psh();
               ZSKON.index('KOD');
               ZSKON.prefix(REF.FIRMA,'D',_zes_d);
               {? ZSKON.first()
               || SRSW.KONDOD:=ZSKON.ref()
               ?};
               ZSKON.cntx_pop()
            ?};
            SRSW.put();
            SRSW.next()
      !}
   ?}
?};
SRSW.cntx_pop()

\srdo_kopiuj_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------

SRDO.cntx_psh();
SRDO.index('AUTO');
SRDO.prefix();
{? SRDO.first()
|| {? __tor='podatkowy'
   || {! |?
            SRDO.WARD:=SRDO.WARP;
            SRDO.UMOD:=SRDO.UMOP;
            SRDO.STAD:=SRDO.STAP;
            SRDO.WKD:=SRDO.WKP;
            SRDO.DPLD:=SRDO.DPLP;
            SRDO.WARSP_D:=SRDO.WARSP_P;
            _zes:=SRDO.KONPOD().KOD;
            {? _zes<>''
            || {? __tab2.first()
               || {! |?
                       {? __tab2.KOD2=_zes
                       || _zes_d:=__tab2.KOD1
                       ?};
                        __tab2.next()
                  !}
               ?};
               ZSKON.cntx_psh();
               ZSKON.index('KOD');
               ZSKON.prefix(REF.FIRMA,'D',_zes_d);
               {? ZSKON.first()
               || SRDO.KONDOD:=ZSKON.ref()
               ?};
               ZSKON.cntx_pop()
            ?};
            _kod:=SRDO.MP().K;
            {? _kod<>''
            || {? __tab.first()
               || {! |?
                       {? __tab.CZESTO_O=_kod
                       || _kod_d:=__tab.K
                       ?};
                        __tab.next()
                  !}
               ?};
               MA.cntx_psh();
               MA.index('MA');
               MA.prefix(_kod_d);
               {? MA.first()
               || SRDO.MD:=MA.ref()
               ?};
               MA.cntx_pop()
            ?};
            SRDO.put();
            SRDO.next()
      !}
   |? __tor='bilansowy'
   || {! |?
            SRDO.WARD:=SRDO.WARF;
            SRDO.UMOD:=SRDO.UMOF;
            SRDO.STAD:=SRDO.STAF;
            SRDO.WKD:=SRDO.WKF;
            SRDO.DPLD:=SRDO.DPLF;
            SRDO.WARSP_D:=SRDO.WARSP_F;
            _zes:=SRDO.KONFIN().KOD;
            {? _zes<>''
            || {? __tab2.first()
               || {! |?
                       {? __tab2.KOD2=_zes
                       || _zes_d:=__tab2.KOD1
                       ?};
                        __tab2.next()
                  !}
               ?};
               ZSKON.cntx_psh();
               ZSKON.index('KOD');
               ZSKON.prefix(REF.FIRMA,'D',_zes_d);
               {? ZSKON.first()
               || SRDO.KONDOD:=ZSKON.ref()
               ?};
               ZSKON.cntx_pop()
            ?};
            _kod:=SRDO.MF().K;
            {? _kod<>''
            || {? __tab.first()
               || {! |?
                       {? __tab.CZESTO_O=_kod
                       || _kod_d:=__tab.K
                       ?};
                        __tab.next()
                  !}
               ?};
               MA.cntx_psh();
               MA.index('MA');
               MA.prefix(_kod_d);
               {? MA.first()
               || SRDO.MD:=MA.ref()
               ?};
               MA.cntx_pop()
            ?};
            SRDO.put();
            SRDO.next()
      !}
   ?}
?};
SRDO.cntx_pop()


\srxd_kopiuj_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------

SRXD.cntx_psh();
SRXD.index('DOK_L');
SRXD.prefix();
{? SRXD.first()
|| {? __tor='podatkowy'
   || {! |?
            SRXD.WARD:=SRXD.WARP;
            SRXD.put();
            SRXD.next()
      !}
   |? __tor='bilansowy'
   || {! |?
            SRXD.WARD:=SRXD.WARF;
            SRXD.put();
            SRXD.next()
      !}
   ?}
?};
SRXD.cntx_pop()


\srzd_kopiuj_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------

SRZD.cntx_psh();
SRZD.index('SRZD');
SRZD.prefix();
{? SRZD.first()
|| {? __tor='podatkowy'
   || {! |?
            _zes:=SRZD.KONPOD().KOD;
            {? _zes<>''
            || {? __tab2.first()
               || {! |?
                       {? __tab2.KOD2=_zes
                       || _zes_d:=__tab2.KOD1
                       ?};
                        __tab2.next()
                  !}
               ?};
               ZSKON.cntx_psh();
               ZSKON.index('KOD');
               ZSKON.prefix(REF.FIRMA,'D',_zes_d);
               {? ZSKON.first()
               || SRZD.KONDOD:=ZSKON.ref()
               ?};
               ZSKON.cntx_pop()
            ?};
            _zes:=SRZD.ZK_POD().KOD;
            {? _zes<>''
            || {? __tab2.first()
               || {! |?
                       {? __tab2.KOD2=_zes
                       || _zes_d:=__tab2.KOD1
                       ?};
                        __tab2.next()
                  !}
               ?};
               ZSKON.cntx_psh();
               ZSKON.index('KOD');
               ZSKON.prefix(REF.FIRMA,'D',_zes_d);
               {? ZSKON.first()
               || SRZD.ZK_DOD:=ZSKON.ref()
               ?};
               ZSKON.cntx_pop()
            ?};
            SRZD.put();
            SRZD.next()
      !}
   |? __tor='bilansowy'
   || {! |?
            _zes:=SRZD.KONFIN().KOD;
            {? _zes<>''
            || {? __tab2.first()
               || {! |?
                       {? __tab2.KOD2=_zes
                       || _zes_d:=__tab2.KOD1
                       ?};
                        __tab2.next()
                  !}
               ?};
               ZSKON.cntx_psh();
               ZSKON.index('KOD');
               ZSKON.prefix(REF.FIRMA,'D',_zes_d);
               {? ZSKON.first()
               || SRZD.KONDOD:=ZSKON.ref()
               ?};
               ZSKON.cntx_pop()
            ?};
            _zes:=SRZD.ZK_FIN().KOD;
            {? _zes<>''
            || {? __tab2.first()
               || {! |?
                       {? __tab2.KOD2=_zes
                       || _zes_d:=__tab2.KOD1
                       ?};
                        __tab2.next()
                  !}
               ?};
               ZSKON.cntx_psh();
               ZSKON.index('KOD');
               ZSKON.prefix(REF.FIRMA,'D',_zes_d);
               {? ZSKON.first()
               || SRZD.ZK_DOD:=ZSKON.ref()
               ?};
               ZSKON.cntx_pop()
            ?};
            SRZD.put();
            SRZD.next()
      !}
   ?}
?};
SRZD.cntx_pop()


\srzf_kopiuj_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wprowadzenie toru dodatkowego
::  OLD:
::----------------------------------------------------------------------------------------------------------------------

SRZF.cntx_psh();
SRZF.index('SRODEK');
SRZF.prefix();
{? SRZF.first()
|| {? __tor='podatkowy'
   || {! |?
            SRZF.WARD:=SRZF.WARP;
            SRZF.ROZD:=SRZF.ROZP;
            SRZF.DATA_ZD:=SRZF.DATA_ZP;
            _zes:=SRZF.KONPOD().KOD;
            {? _zes<>''
            || {? __tab2.first()
               || {! |?
                       {? __tab2.KOD2=_zes
                       || _zes_d:=__tab2.KOD1
                       ?};
                        __tab2.next()
                  !}
               ?};
               ZSKON.cntx_psh();
               ZSKON.index('KOD');
               ZSKON.prefix(REF.FIRMA,'D',_zes_d);
               {? ZSKON.first()
               || SRZF.KONDOD:=ZSKON.ref()
               ?};
               ZSKON.cntx_pop()
            ?};
            SRZF.put();
            SRZF.next()
      !}
   |? __tor='bilansowy'
   || {! |?
            SRZF.WARD:=SRZF.WARF;
            SRZF.ROZD:=SRZF.ROZF;
            SRZF.DATA_ZD:=SRZF.DATA_ZF;
            _zes:=SRZF.KONFIN().KOD;
            {? _zes<>''
            || {? __tab2.first()
               || {! |?
                       {? __tab2.KOD2=_zes
                       || _zes_d:=__tab2.KOD1
                       ?};
                        __tab2.next()
                  !}
               ?};
               ZSKON.cntx_psh();
               ZSKON.index('KOD');
               ZSKON.prefix(REF.FIRMA,'D',_zes_d);
               {? ZSKON.first()
               || SRZF.KONDOD:=ZSKON.ref()
               ?};
               ZSKON.cntx_pop()
            ?};
            SRZF.put();
            SRZF.next()
      !}
   ?}
?};
SRZF.cntx_pop()


\set_srdo_pom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [nowa]
:: OPIS: Ustawienie wartości pól pomocniczych dla tabeli SRDO_POM
::   WE: [_a] - Rok podatkowy, [_b] - Okres podatkowy
::----------------------------------------------------------------------------------------------------------------------
{? _=0
|| _okr:=exec('find_prev_okro','fst',SRDO.OKRO_F().ROK,SRDO.OKRO_F().NR,1);
   _rok:=exec('find_rok_by_okro','fst',_okr);
   SRST.cntx_psh();
   SRST.index('SROD');
   SRST.prefix()
|| _rok:=_a;
   _okr:=_b
?};
{? SRST.find_key(SRDO.SRSR,_rok,_okr)
|| {? SRDO.RODZ='L'
   || SRDO_POM.NRI:=SRST.NRI;
      SRDO_POM.NST:=SRST.NST;
      SRDO_POM.JORG:=SRST.JORG;
      SRDO_POM.ODD:=SRST.ODD;
      SRDO_POM.POM:=SRST.POM;
      SRDO_POM.OSOBA:=SRST.OSOBA;
      SRDO_POM.PRCD:=SRST.P().OSOBA().NAZWISKO;
      SRDO_POM.PSTN:=SRST.P().ST().ST;
      SRDO_POM.PWYD:=SRST.P().WYDZIAL().SYMBOL;
      SRDO_POM.PRC:=SRST.P;
      SRDO_POM.KONPOD:=SRST.KONPOD;
      SRDO_POM.KONFIN:=SRST.KONFIN;
      {? FINFO.TOR_D='T'
      || SRDO_POM.KONDOD:=SRST.KONDOD
      ?};
      SRDO_POM.GR:=SRST.GR;
      SRDO_POM.R:=SRST.R;
::      {? SRDO.PRC=null()
::      || SRDO.PRC:=SRDO.SRSR().P
::      ?};
      {? SRDO.SRSR().BENEFIT='T'
      || EDIT_ES.PRCNAZ:=SRDO.PRC().OSOBA().NAZWISKO;
         EDIT_ES.STNAZ:=SRDO.PRC().ST().ST;
         EDIT_ES.WYDZNAZ:=SRDO.PRC().WYDZIAL().SYMBOL
      ?}
   |? SRDO.RODZ='M'
   || SRDO_POM.MP:=SRST.MP;
      SRDO_POM.MB:=SRST.MF;
      SRDO_POM.DPLP:=SRST.DPLP;
      SRDO_POM.DPLF:=SRST.DPLF;
      SRDO_POM.STAP:=SRST.STAP;
      SRDO_POM.STAB:=SRST.STAF;
      SRDO_POM.WKP:=SRST.WKP;
      SRDO_POM.WKF:=SRST.WKF;
      {? FINFO.TOR_D='T'
      || SRDO_POM.MD:=SRST.MD;
         SRDO_POM.DPLD:=SRST.DPLD;
         SRDO_POM.WKD:=SRST.WKD;
         SRDO_POM.STAD:=SRST.STAD
      ?}
   |? SRDO.RODZ='I'
   || SRDO_POM.SEZ:=SRSR.S;
      SRDO_POM.SCH_SEZ:=SRSR.SCH_SEZ
   ?}
|| {? SRDO.RODZ='L'
   || SRDO_POM.NRI:=SRDO.SRSR().NRI;
      SRDO_POM.NST:=SRDO.SRSR().NST;
      SRDO_POM.JORG:=SRDO.SRSR().JORG;
      SRDO_POM.ODD:=SRDO.SRSR().ODD;
      SRDO_POM.POM:=SRDO.SRSR().POM;
      SRDO_POM.OSOBA:=SRDO.SRSR().OSOBA;
      SRDO_POM.PRCD:=SRST.P().OSOBA().NAZWISKO;
      SRDO_POM.PRC:=SRST.P;
      SRDO_POM.KONPOD:=SRDO.SRSR().KONPOD;
      SRDO_POM.KONFIN:=SRDO.SRSR().KONFIN;
      {? FINFO.TOR_D='T'
      || SRDO_POM.KONDOD:=SRDO.SRSR().KONDOD
      ?};
      SRDO_POM.GR:=SRDO.SRSR().GR;
      SRDO_POM.R:=SRDO.SRSR().R
   |? SRDO.RODZ='M'
   || SRDO_POM.MP:=SRDO.SRSR().MP;
      SRDO_POM.MB:=SRDO.SRSR().MF;
      SRDO_POM.DPLP:=SRDO.SRSR().DPLP;
      SRDO_POM.DPLF:=SRDO.SRSR().DPLF;
      SRDO_POM.STAP:=SRDO.SRSR().STAP;
      SRDO_POM.STAB:=SRDO.SRSR().STAF;
      SRDO_POM.WKP:=SRDO.SRSR().WKP;
      SRDO_POM.WKF:=SRDO.SRSR().WKF;
      {? FINFO.TOR_D='T'
      || SRDO_POM.MD:=SRDO.SRSR().MD;
         SRDO_POM.DPLD:=SRDO.SRSR().DPLD;
         SRDO_POM.WKD:=SRDO.SRSR().WKD;
         SRDO_POM.STAD:=SRDO.SRSR().STAD
      ?}
   |? SRDO.RODZ='I'
   || SRDO_POM.SEZ:=SRDO.SRSR().S;
      SRDO_POM.SCH_SEZ:=SRDO.SRSR().SCH_SEZ
   ?}
?};
{? _=0 || SRST.cntx_pop() ?}


\sql_pra
::----------------------------------------------------------------------------------------------------------------------
:: UTW: JK [18.42]
:: OPIS: Selekcja danych do wydruku fst_o_zespra.rpm
::----------------------------------------------------------------------------------------------------------------------
_warunek:='where SRST.DE <= to_date(:_a) ';
_zakres:={? PAR_WYDR.ZAKRESDR = 0
         || _zakres:=''
         |? PAR_WYDR.ZAKRESDR = 1
         || _zakres:='and SRST.R = ''T'' '
         |? PAR_WYDR.ZAKRESDR = 2
         || _zakres:='and SRST.R = ''N'' '
         ?};
_jorg:={? PAR_WYDR.JORG=null
       || ''
       || 'and SYMBOL = '':_b'' '
       ?};
_oddzial:={? PAR_WYDR.ODD=null
          || ''
          || 'and OD = '':_c'' '
          ?};
_skres:={? PAR_WYDR.SKRESL=0
        || ''
        || 'and (Z<>''T'' or (Z=''T'' and SRSR.DES>to_date(:_a)) ) '
        ?};
_osoba:={? PAR_WYDR.OSOBA=null
        || ''
        || 'and SRST.OSOBA = :_d '
        ?};
_stale1:={? SSTALE.AO=null
         || ''
         || 'and SRST.ROK = '':_e'' '
         ?};
_stale2:={? SSTALE.AR=null
         || ''
         || 'and SRST.OKRES = '':_f'' '
         ?};

_warunek+=_zakres+_jorg+_oddzial+_skres+_osoba+_stale1+_stale2;

:: Zapytanie pomocnicze tworzace tabele TAB_SROD
_que_sro:='select SRST.reference as SRST_R, SRST.OSOBA as OSOBA_R, SRST.NST, SRST.NRI, SRST.DE,SRST.ROK, SRST.OKRES, SRST.NF, SRST.KIND, SRST.OKRO_F, SRST.GRP, ODD.reference as ODD_R, '
     + 'SRST.R, ODD.OD as OD, UD_SKL.SYMBOL as SYMBOL, SRSR.Z as Z, SRSR.DES, OSOBA.NAZWISKO as NAZWISKO, OSOBA.PIERWSZE as PIERWSZE, OSOBA.DRUGIE as DRUGIE '
     + 'from SRST '
     + 'join SRSR using (SRST.SRSR, SRSR.REFERENCE)'
     + 'join ODD using (SRST.ODD, ODD.REFERENCE)'
     + 'join UD_SKL using (SRST.JORG, UD_SKL.REFERENCE)'
     + 'join OSOBA using (SRST.OSOBA, OSOBA.REFERENCE)'
     + _warunek
     + 'order by NAZWISKO, SRST.NRI ';
TAB_SROD:=sql(_que_sro, PAR_WYDR.STAN_NA, PAR_WYDR.JORG().SYMBOL, PAR_WYDR.ODD().OD, PAR_WYDR.OSOBA, SSTALE.AO().RES, SSTALE.AO().OES)


\srdt_diff
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.02]
:: OPIS: Formuła porównuje typy dokumentów wartościowych w firmie pierwotnej i bieżącej
::   WE: _a - wskazanie na typ dokumentu wartościowego (SRDT.ref()),
::       _b - symbol firmy
::   WY: 0/1 (niezgodne/zgodne)
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? _=0 | type_of(_a)<>type_of(null) | _a=null || return(0) ?};
{? _<2 | type_of(_b)<>type_of('') | _b='' || return(0) ?};
SRDT.cntx_psh();
SRDT.prefix();
{? SRDT.seek(_a,ref_name(_a))
|| _typ:=SRDT.TYP;
   _warp:=SRDT.WARP;
   _warf:=SRDT.WARF;
   _ward:=SRDT.WARD;
   _umop:=SRDT.UMOP;
   _umof:=SRDT.UMOF;
   _umod:=SRDT.UMOD;
   _ostatek:=SRDT.OSTATEK;
   SRDT.cntx_psh();
   SRDT.use('srdtr'+_b);
   SRDT.index('SRDT');
   SRDT.prefix('W',_typ);
   {? SRDT.first()
   || {? SRDT.WARP=_warp & SRDT.WARF=_warf & SRDT.WARD=_ward
       & SRDT.UMOP=_umop & SRDT.UMOF=_umof & SRDT.UMOD=_umod
       & SRDT.OSTATEK=_ostatek
      || _wy:=1
      ?}
   ?};
   SRDT.cntx_pop()
?};
SRDT.cntx_pop();
_wy


\o_tabam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Procedura pomocnicza do wydruku fst_o_tabam.rpm
::   WE: _a = 1 - analitycznie, _a = 2 - syntetycznie
::       _b = 1 - trwałe, 2 - niskocenne, 0 - wszystkie
::       _c = rodzaj przychodu (PRZYCHOD.ref())
::       _d = rodzaj przychodu (ROZCHOD.ref())
::       _e = jednostka księgowa (null oznacza wszystkie)
::   WY: wskazanie na tabele tymczasowa
::----------------------------------------------------------------------------------------------------------------------
SRST.prefix(); SRSR.prefix(); MA.prefix(); TAM.prefix();
{? _b=0 || _r:=''
|? _b=1 || _r:='T'
|? _b=2 || _r:='N'
?};
{? FINFO.TOR_D='T'
||
   _sql:='select max(ODD.OD) as ODDZIAL,'
         'max(UD_SKL.SYMBOL) as JORG, '
         'SRSR.REFERENCE as ID, '
         'max(SRSR.ZALP100) as ZALP100, '
         'max(case when SRST.OKRES=:_c then SRST.NRI else null end) as NRI, '
         'max(TAM.GR) as GRUPA, '
         'max(SUBSTR(TAM.GR,1,1)) as GR, '
         'max(case when SRST.OKRES=:_c then SRST.NST else null end) as NST, '
         'max(case when SRST.OKRES=:_c then MA.K else null end) as MPOD, '
         'max(case when SRST.OKRES=:_c then MAF.K else null end) as MFIN, '
         'max(case when SRST.OKRES=:_c then MAD.K else null end) as MDOD, '
         'max(case when SRST.OKRES=:_c then SRST.STAP else null end) as STAP, '
         'max(case when SRST.OKRES=:_c then SRST.STAF else null end) as STAF, '
         'max(case when SRST.OKRES=:_c then SRST.STAD else null end) as STAD, '
         'max(case when SRST.OKRES=:_c then SRST.WKP else null end) as WKP, '
         'max(case when SRST.OKRES=:_c then SRST.WKF else null end) as WKF, '
         'max(case when SRST.OKRES=:_c then SRST.WKD else null end) as WKD, '
         'max(SRST.DE) as DE, '
         'max(SRST.DES) as DES, '
         'max(ROZ.R) as ROZCH, '
         'max(1) as MIE_OD, '
         'max(12) as MIE_DO, '
         'max(SRST.KIND) as AKTYWNY, '
         'max(case when SRST.OKRES=:_c then SRST.WARP else null end) as WARP, '
         'max(case when SRST.OKRES=:_c then SRST.UMOP else null end) as UMOP, '
         'max(case when SRST.OKRES=:_c then SRST.NETP else null end) as NETP, '
         'max(case when SRST.OKRES=:_c then SRST.WARF else null end) as WARF, '
         'max(case when SRST.OKRES=:_c then SRST.UMOF else null end) as UMOF, '
         'max(case when SRST.OKRES=:_c then SRST.NETF else null end) as NETF, '
         'max(case when SRST.OKRES=:_c then SRST.WARD else null end) as WARD, '
         'max(case when SRST.OKRES=:_c then SRST.UMOD else null end) as UMOD, '
         'max(case when SRST.OKRES=:_c then SRST.NETD else null end) as NETD, '
         'max(case when SRST.OKRES=1 then SRST.AMOP else null end) as AMP1, '
         'max(case when SRST.OKRES=2 then SRST.AMOP else null end) as AMP2, '
         'max(case when SRST.OKRES=3 then SRST.AMOP else null end) as AMP3, '
         'max(case when SRST.OKRES=4 then SRST.AMOP else null end) as AMP4, '
         'max(case when SRST.OKRES=5 then SRST.AMOP else null end) as AMP5, '
         'max(case when SRST.OKRES=6 then SRST.AMOP else null end) as AMP6, '
         'max(case when SRST.OKRES=7 then SRST.AMOP else null end) as AMP7, '
         'max(case when SRST.OKRES=8 then SRST.AMOP else null end) as AMP8, '
         'max(case when SRST.OKRES=9 then SRST.AMOP else null end) as AMP9, '
         'max(case when SRST.OKRES=10 then SRST.AMOP else null end) as AMP10, '
         'max(case when SRST.OKRES=11 then SRST.AMOP else null end) as AMP11, '
         'max(case when SRST.OKRES=12 then SRST.AMOP else null end) as AMP12, '
         'max(case when SRST.OKRES=1 then SRST.AMOF else null end) as AMF1, '
         'max(case when SRST.OKRES=2 then SRST.AMOF else null end) as AMF2, '
         'max(case when SRST.OKRES=3 then SRST.AMOF else null end) as AMF3, '
         'max(case when SRST.OKRES=4 then SRST.AMOF else null end) as AMF4, '
         'max(case when SRST.OKRES=5 then SRST.AMOF else null end) as AMF5, '
         'max(case when SRST.OKRES=6 then SRST.AMOF else null end) as AMF6, '
         'max(case when SRST.OKRES=7 then SRST.AMOF else null end) as AMF7, '
         'max(case when SRST.OKRES=8 then SRST.AMOF else null end) as AMF8, '
         'max(case when SRST.OKRES=9 then SRST.AMOF else null end) as AMF9, '
         'max(case when SRST.OKRES=10 then SRST.AMOF else null end) as AMF10, '
         'max(case when SRST.OKRES=11 then SRST.AMOF else null end) as AMF11, '
         'max(case when SRST.OKRES=12 then SRST.AMOF else null end) as AMF12, '
         'max(case when SRST.OKRES=1 then SRST.AMOD else null end) as AMD1, '
         'max(case when SRST.OKRES=2 then SRST.AMOD else null end) as AMD2, '
         'max(case when SRST.OKRES=3 then SRST.AMOD else null end) as AMD3, '
         'max(case when SRST.OKRES=4 then SRST.AMOD else null end) as AMD4, '
         'max(case when SRST.OKRES=5 then SRST.AMOD else null end) as AMD5, '
         'max(case when SRST.OKRES=6 then SRST.AMOD else null end) as AMD6, '
         'max(case when SRST.OKRES=7 then SRST.AMOD else null end) as AMD7, '
         'max(case when SRST.OKRES=8 then SRST.AMOD else null end) as AMD8, '
         'max(case when SRST.OKRES=9 then SRST.AMOD else null end) as AMD9, '
         'max(case when SRST.OKRES=10 then SRST.AMOD else null end) as AMD10, '
         'max(case when SRST.OKRES=11 then SRST.AMOD else null end) as AMD11, '
         'max(case when SRST.OKRES=12 then SRST.AMOD else null end) as AMD12 '
         'from SRST '
         'join ODD using (SRST.ODD, ODD.REFERENCE) '
         'join UD_SKL using (SRST.JORG, UD_SKL.REFERENCE) '
         'join TAM using (SRST.GR, TAM.REFERENCE) '
         'join SRSR using (SRST.SRSR, SRSR.REFERENCE) '
         'join MA using (SRST.MP,MA.REFERENCE) '
         'join MA as MAF using (SRST.MF,MAF.REFERENCE) '
         'join MA as MAD using (SRST.MD,MAD.REFERENCE) '
         'left join ROZ using (SRSR.ROZ, ROZ.REFERENCE) '
||
   _sql:='select max(ODD.OD) as ODDZIAL,'
         'max(UD_SKL.SYMBOL) as JORG, '
         'SRSR.REFERENCE as ID, '
         'max(SRSR.ZALP100) as ZALP100, '
         'max(case when SRST.OKRES=:_c then SRST.NRI else null end) as NRI, '
         'max(TAM.GR) as GRUPA, '
         'max(SUBSTR(TAM.GR,1,1)) as GR, '
         'max(case when SRST.OKRES=:_c then SRST.NST else null end) as NST, '
         'max(case when SRST.OKRES=:_c then MA.K else null end) as MPOD, '
         'max(case when SRST.OKRES=:_c then MAF.K else null end) as MFIN, '
         'max(case when SRST.OKRES=:_c then SRST.STAP else null end) as STAP, '
         'max(case when SRST.OKRES=:_c then SRST.STAF else null end) as STAF, '
         'max(case when SRST.OKRES=:_c then SRST.WKP else null end) as WKP, '
         'max(case when SRST.OKRES=:_c then SRST.WKF else null end) as WKF, '
         'max(SRST.DE) as DE, '
         'max(SRST.DES) as DES, '
         'max(ROZ.R) as ROZCH, '
         'max(1) as MIE_OD, '
         'max(12) as MIE_DO, '
         'max(SRST.KIND) as AKTYWNY, '
         'max(case when SRST.OKRES=:_c then SRST.WARP else null end) as WARP, '
         'max(case when SRST.OKRES=:_c then SRST.UMOP else null end) as UMOP, '
         'max(case when SRST.OKRES=:_c then SRST.NETP else null end) as NETP, '
         'max(case when SRST.OKRES=:_c then SRST.WARF else null end) as WARF, '
         'max(case when SRST.OKRES=:_c then SRST.UMOF else null end) as UMOF, '
         'max(case when SRST.OKRES=:_c then SRST.NETF else null end) as NETF, '
         'max(case when SRST.OKRES=1 then SRST.AMOP else null end) as AMP1, '
         'max(case when SRST.OKRES=2 then SRST.AMOP else null end) as AMP2, '
         'max(case when SRST.OKRES=3 then SRST.AMOP else null end) as AMP3, '
         'max(case when SRST.OKRES=4 then SRST.AMOP else null end) as AMP4, '
         'max(case when SRST.OKRES=5 then SRST.AMOP else null end) as AMP5, '
         'max(case when SRST.OKRES=6 then SRST.AMOP else null end) as AMP6, '
         'max(case when SRST.OKRES=7 then SRST.AMOP else null end) as AMP7, '
         'max(case when SRST.OKRES=8 then SRST.AMOP else null end) as AMP8, '
         'max(case when SRST.OKRES=9 then SRST.AMOP else null end) as AMP9, '
         'max(case when SRST.OKRES=10 then SRST.AMOP else null end) as AMP10, '
         'max(case when SRST.OKRES=11 then SRST.AMOP else null end) as AMP11, '
         'max(case when SRST.OKRES=12 then SRST.AMOP else null end) as AMP12, '
         'max(case when SRST.OKRES=1 then SRST.AMOF else null end) as AMF1, '
         'max(case when SRST.OKRES=2 then SRST.AMOF else null end) as AMF2, '
         'max(case when SRST.OKRES=3 then SRST.AMOF else null end) as AMF3, '
         'max(case when SRST.OKRES=4 then SRST.AMOF else null end) as AMF4, '
         'max(case when SRST.OKRES=5 then SRST.AMOF else null end) as AMF5, '
         'max(case when SRST.OKRES=6 then SRST.AMOF else null end) as AMF6, '
         'max(case when SRST.OKRES=7 then SRST.AMOF else null end) as AMF7, '
         'max(case when SRST.OKRES=8 then SRST.AMOF else null end) as AMF8, '
         'max(case when SRST.OKRES=9 then SRST.AMOF else null end) as AMF9, '
         'max(case when SRST.OKRES=10 then SRST.AMOF else null end) as AMF10, '
         'max(case when SRST.OKRES=11 then SRST.AMOF else null end) as AMF11, '
         'max(case when SRST.OKRES=12 then SRST.AMOF else null end) as AMF12 '
         'from SRST '
         'join ODD using (SRST.ODD, ODD.REFERENCE) '
         'join UD_SKL using (SRST.JORG, UD_SKL.REFERENCE) '
         'join TAM using (SRST.GR, TAM.REFERENCE) '
         'join SRSR using (SRST.SRSR, SRSR.REFERENCE) '
         'join MA using (SRST.MP,MA.REFERENCE) '
         'join MA as MAF using (SRST.MF,MAF.REFERENCE) '
         'left join ROZ using (SRSR.ROZ, ROZ.REFERENCE) '
?};
:: obsługa filtrowania wg grup
_grupa:=_sql_gr:='';
{? PAR_WYDR.WAR_GR=1
|| {? |PAR_WYDR.GRUPA <> ''
   || _lok:=|PAR_WYDR.GRUPA * '*';
      {? _lok
      || _lok-=1; _grupa:=(_lok+|PAR_WYDR.GRUPA) + '%'
      || _grupa:=|PAR_WYDR.GRUPA + '%'
      ?};
      _sql_gr+=' and TAM.GR like '':_f'''
   ?}
|? PAR_WYDR.WAR_GR=2 & (|PAR_WYDR.GRUPA_OD<>'' | |PAR_WYDR.GRUPA_DO<>'')
|| {? |PAR_WYDR.GRUPA_OD<>'' & |PAR_WYDR.GRUPA_DO<>''
   || _sql_gr+=' and TAM.GR BETWEEN '':_g'' and '':_h'''
   |? |PAR_WYDR.GRUPA_OD<>'' & |PAR_WYDR.GRUPA_DO=''
   || _sql_gr+=' and TAM.GR >= '':_g'''
   |? |PAR_WYDR.GRUPA_OD='' & |PAR_WYDR.GRUPA_DO<>''
   || _sql_gr+=' TAM.GR <= '':_h'''
   ?}
|? PAR_WYDR.WAR_GR=3
|| _sql_gr:=exec('get_grupy','fst',' and '+_sql_gr,'TAM.GR')
?};

{? PAR_WYDR.SKRESL=1
|| _skresl:='and (SRSR.Z<>''T'' or (SRSR.Z=''T'' and SRSR.DES>to_date(:_k)) ) '
|| _skresl:=''
?};

_sql+='where SRST.KIND=''T'' '+_skresl+' and SRST.ROK=:_a and (SRSR.ROK<:_a or (SRSR.ROK=:_a and SRSR.OKRES<=:_c)) '
      +{? _r<>'' || 'and SRST.R='':_b'' ' || ' and SRST.R<>''S'' ' ?}
      +{? _>2 & _c<>null || ' and SRSR.PRZYCHOD=:_d ' || '' ?}
      +{? _>3 & _d<>null || ' and SRSR.ROZ=:_e ' || '' ?}
      +{? _>4 & _e<>'' || ' and ODD.OD='':_i'' ' || '' ?}
      +{? PAR_WYDR.JORG<>null || ' and UD_SKL.SYMBOL='':_j'' '  || '' ?}
      +{? _sql_gr<>'' || _sql_gr || '' ?}
      +' group by SRSR.REFERENCE '
      +{? PAR_WYDR.ZESTAW=1 || ' order by ODDZIAL, NRI' || ' order by GR, NRI' ?};

_okres:=SSTALE.AO().OES;
{? _okres=0 || _okres:=1 |? _okres>12 || _okres:=12 ?};

VAR_DEL.delete('__tmp_sr');
__tmp_sr:=sql(_sql,SSTALE.AO().RES,_r,_okres,_c,_d,_grupa,|PAR_WYDR.GRUPA_OD,|PAR_WYDR.GRUPA_DO,_e,PAR_WYDR.JORG().SYMBOL,PAR_WYDR.STAN_NA);

:: uzupełnienie danych środków skreślonych
{? __tmp_sr.first()
|| __tmp_sr.for_each("
      {? __tmp_sr.NRI=''
      || SRSR.cntx_psh(); SRST.cntx_psh();
         SRSR.prefix(); SRST.prefix();
         {? SRSR.seek(__tmp_sr.ID,ref_name(__tmp_sr.ID))
         || SRST.index('PODAT');
            SRST.prefix(SRSR.ref());
            {? SRST.last()
            || __tmp_sr.NRI:=SRST.NRI;
               __tmp_sr.NST:=SRST.NST;
               __tmp_sr.MPOD:=SRST.MP().K;
               __tmp_sr.MFIN:=SRST.MF().K;
               {? FINFO.TOR_D='T' || __tmp_sr.MDOD:=SRST.MD().K ?};
               __tmp_sr.STAP:=SRST.STAP;
               __tmp_sr.STAF:=SRST.STAF;
               {? FINFO.TOR_D='T' || __tmp_sr.STAD:=SRST.STAD ?};
               __tmp_sr.WKP:=SRST.WKP;
               __tmp_sr.WKF:=SRST.WKF;
               {? FINFO.TOR_D='T' || __tmp_sr.WKD:=SRST.WKD ?};
               __tmp_sr.UMOP+=__tmp_sr.ZALP100;
               __tmp_sr.NETP-=__tmp_sr.ZALP100;
               __tmp_sr.put()
            ?}
         ?};
         SRSR.cntx_pop(); SRST.cntx_pop()
      || __tmp_sr.UMOP+=__tmp_sr.ZALP100;
         __tmp_sr.NETP-=__tmp_sr.ZALP100;
         __tmp_sr.put()
      ?}
     ")
?};

:: uzupełnienie o dokumenty wartościowe w przypadku MO_DO=2
:: Rozszerzono o aktualizację środków grupowych w przypadku likwidacji elementu z ustawionym parametrem MO_DO=1
{? __tmp_sr.first()
|| __tmp_sr.for_each("
         SRDO.cntx_psh(); SRST.cntx_psh(); SRSR.cntx_psh();
         SRSR.prefix(); SRST.prefix();
         _warp:=_warf:=_ward:=0;
         {? SRSR.seek(__tmp_sr.ID,ref_name(__tmp_sr.ID))
         || SRST.index('PODAT');
            SRST.prefix(SRSR.ref());
            {? SRST.last()
            || SRDO.index('SRODZAJ');
               SRDO.prefix(SRSR.ref,'W');
               {? SRDO.first()
               || {!
                  |? {? PAR_WYDR.MO_DO=2 & 1+SRDO.TYP().TYP='K' & (SRDO.DO<=PAR_WYDR.STAN_NA & SRDO.DO~2=PAR_WYDR.STAN_NA~2)
                     | (PAR_WYDR.MO_DO=1 & SRDO.Z='T' & SRSR.GRP='T')
                     || __tmp_sr.WARP+=SRDO.WARP;
                        __tmp_sr.WARF+=SRDO.WARF;
                        __tmp_sr.NETP+=SRDO.WARP;
                        __tmp_sr.NETF+=SRDO.WARF;
                        {? FINFO.TOR_D='T' || __tmp_sr.WARD+=SRDO.WARD; __tmp_sr.NETD+=SRDO.WARD ?}
                     ?};
                     SRDO.next()
                  !};
                  __tmp_sr.put()
               ?}
            ?}
         ?};
         SRSR.cntx_pop(); SRST.cntx_pop(); SRDO.cntx_pop()
     ")
?};

{? _a=2
|| {? PAR_WYDR.ZESTAW=2
   || {? FINFO.TOR_D='T'
      || _sql2:='select GR, SUM(AMP1) as AMP1, SUM(AMP2) as AMP2, SUM(AMP3) as AMP3, SUM(AMP4) as AMP4, '
                'SUM(AMP5) as AMP5, SUM(AMP6) as AMP6, SUM(AMP7) as AMP7, SUM(AMP8) as AMP8, SUM(AMP9) as AMP9, '
                'SUM(AMP10) as AMP10, SUM(AMP11) as AMP11, SUM(AMP12) as AMP12, SUM(AMF1) as AMF1, '
                'SUM(AMF2) as AMF2, SUM(AMF3) as AMF3, SUM(AMF4) as AMF4, SUM(AMF5) as AMF5, '
                'SUM(AMF6) as AMF6, SUM(AMF7) as AMF7, SUM(AMF8) as AMF8, SUM(AMF9) as AMF9, '
                'SUM(AMF10) as AMF10, SUM(AMF11) as AMF11, SUM(AMF12) as AMF12, SUM(AMD1) as AMD1, '
                'SUM(AMD2) as AMD2, SUM(AMD3) as AMD3, SUM(AMD4) as AMD4, SUM(AMD5) as AMD5, '
                'SUM(AMD6) as AMD6, SUM(AMD7) as AMD7, SUM(AMD8) as AMD8, SUM(AMD9) as AMD9, '
                'SUM(AMD10) as AMD10, SUM(AMD11) as AMD11, SUM(AMD12) as AMD12 '
                'FROM :_a GROUP BY GR ORDER BY GR'
      || _sql2:='select GR, SUM(AMP1) as AMP1, SUM(AMP2) as AMP2, SUM(AMP3) as AMP3, SUM(AMP4) as AMP4, '
                'SUM(AMP5) as AMP5, SUM(AMP6) as AMP6, SUM(AMP7) as AMP7, SUM(AMP8) as AMP8, SUM(AMP9) as AMP9, '
                'SUM(AMP10) as AMP10, SUM(AMP11) as AMP11, SUM(AMP12) as AMP12, SUM(AMF1) as AMF1, '
                'SUM(AMF2) as AMF2, SUM(AMF3) as AMF3, SUM(AMF4) as AMF4, SUM(AMF5) as AMF5, '
                'SUM(AMF6) as AMF6, SUM(AMF7) as AMF7, SUM(AMF8) as AMF8, SUM(AMF9) as AMF9, '
                'SUM(AMF10) as AMF10, SUM(AMF11) as AMF11, SUM(AMF12) as AMF12 '
                'FROM :_a GROUP BY GR ORDER BY GR'
      ?}
   |? PAR_WYDR.ZESTAW=1
   || {? FINFO.TOR_D='T'
      ||
         _sql2:='select ODDZIAL, SUM(AMP1) as AMP1, SUM(AMP2) as AMP2, SUM(AMP3) as AMP3, SUM(AMP4) as AMP4, '
                'SUM(AMP5) as AMP5, SUM(AMP6) as AMP6, SUM(AMP7) as AMP7, SUM(AMP8) as AMP8, SUM(AMP9) as AMP9, '
                'SUM(AMP10) as AMP10, SUM(AMP11) as AMP11, SUM(AMP12) as AMP12, SUM(AMF1) as AMF1, '
                'SUM(AMF2) as AMF2, SUM(AMF3) as AMF3, SUM(AMF4) as AMF4, SUM(AMF5) as AMF5, '
                'SUM(AMF6) as AMF6, SUM(AMF7) as AMF7, SUM(AMF8) as AMF8, SUM(AMF9) as AMF9, '
                'SUM(AMF10) as AMF10, SUM(AMF11) as AMF11, SUM(AMF12) as AMF12, SUM(AMD1) as AMD1, '
                'SUM(AMD2) as AMD2, SUM(AMD3) as AMD3, SUM(AMD4) as AMD4, SUM(AMD5) as AMD5, '
                'SUM(AMD6) as AMD6, SUM(AMD7) as AMD7, SUM(AMD8) as AMD8, SUM(AMD9) as AMD9, '
                'SUM(AMD10) as AMD10, SUM(AMD11) as AMD11, SUM(AMD12) as AMD12 '
                'FROM :_a GROUP BY ODDZIAL ORDER BY ODDZIAL'
      ||
         _sql2:='select ODDZIAL, SUM(AMP1) as AMP1, SUM(AMP2) as AMP2, SUM(AMP3) as AMP3, SUM(AMP4) as AMP4, '
                'SUM(AMP5) as AMP5, SUM(AMP6) as AMP6, SUM(AMP7) as AMP7, SUM(AMP8) as AMP8, SUM(AMP9) as AMP9, '
                'SUM(AMP10) as AMP10, SUM(AMP11) as AMP11, SUM(AMP12) as AMP12, SUM(AMF1) as AMF1, '
                'SUM(AMF2) as AMF2, SUM(AMF3) as AMF3, SUM(AMF4) as AMF4, SUM(AMF5) as AMF5, '
                'SUM(AMF6) as AMF6, SUM(AMF7) as AMF7, SUM(AMF8) as AMF8, SUM(AMF9) as AMF9, '
                'SUM(AMF10) as AMF10, SUM(AMF11) as AMF11, SUM(AMF12) as AMF12 '
                'FROM :_a GROUP BY ODDZIAL ORDER BY ODDZIAL'
      ?}
   ?};
   _tmp2:=sql(_sql2,__tmp_sr);
   _tmp2
|| __tmp_sr
?}


\o_tabbil
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Procedura pomocnicza do wydruku fst_o_tabbil.rpm
::   WE: _a = 0 - wszystkie, 1 - trwałe, 2 - niskocenne
::       _b = jednostka księgowa (ODD.ref()), jeżeli null to wszystkie
::       _c = rodzaj przychodu (PRZYCHOD.ref())
::       _d = rodzaj rozchodu (ROZ.ref())
::       _e = tylko skreślone (1/0)
::       _f = dane (1 - podatkowe, 2- bilansowe, 3 - podatkowe i bilansowe)
::       _g = 0 - uwzględniać skreślone w bieżącym roku przed Stan na dzień, 1 - nie uwzględniać
::       _h = miesiąc obowiązywania czy data operacji
::   WY: wskazanie na tabele tymczasowa
::----------------------------------------------------------------------------------------------------------------------
:: WARP, WARF, WARD - wartosc na poczatek roku (pod./bil./dod.)
:: WARP_ZW, WARF_ZW, WARD_ZW - wartość dodanych w trakcie roku środków (pod./bil./dod.)
:: WARP_SKR, WARF_SKR, WARD_SKR - wartosc skreslonych w trakcie roku środki (pod./bil./dod.)
:: WARP_KON, WARF_KON, WARD_KON - wartość na koniec okresu (pod./bil./dod.)
:: UMOP, UMOF, UMOD - umorzenie na początek roku (pod./bil./dod.)
:: UMP_CO, UMF_CO, UMD_CO - wartość amortyzacji w trakcie roku (pod./bil./dod.)
:: UMP_ZW, UMF_ZW, UMD_ZW - wartość umorzenia z dodanych środków (pod./bil./dod.)
:: UMP_SKR, UMF_SKR, UMD_SKR - umorzenie skreslonych z ewidencji (pod./bil./dod.)
:: UMP_KON, UMF_KON, UMD_KON - umorzenie na koniec okresu (pod./bil./dod.)

{? _=0
|| _a:=PAR_WYDR.ZAKRESDR;
   _b:=PAR_WYDR.ODD;
   _c:=PAR_WYDR.PRZYCHOD;
   _d:=PAR_WYDR.ROZCHOD;
   _e:=PAR_WYDR.SKR_ONLY;
   _f:=PAR_WYDR.DANE;
   _g:=PAR_WYDR.SKRESL;
   _h:=PAR_WYDR.MO_DO
?};

:: zakres rodzaju środków (wszystkie, trwałe, niskocenne)
{? _a=0 || _r:=''
|? _a=1 || _r:='T'
|? _a=2 || _r:='N'
?};

OKRO_F.cntx_psh();
OKRO_F.index('SRODKI');
OKRO_F.prefix(REF.FIRMA,SSTALE.AO().RES);
{? OKRO_F.first()
|| {? OKRO_F.OES=0 || OKRO_F.next() ?};
   _fokres:=OKRO_F.OES
?};
OKRO_F.cntx_pop();

:: w ciągu okresu
{? FINFO.TOR_D<>'T'
|| _sql:='select TAB.O as TAB_OPIS, '
      'sum(AMOP) as WARP, sum(AMOP) as WARP_ZW, '
      'sum(AMOP) as WARP_SKR, sum(AMOP) as WARP_KON, '
      'sum(AMOP) as UMOP, sum(AMOP) as UMP_ZW, '
      'sum(AMOP) as UMP_SKR, sum(AMOP) as UMP_KON, '
      'sum(AMOP) as UMP_CO, '
      'sum(AMOP) as AMOP, '
      'sum(AMOF) as WARF, sum(AMOF) as WARF_ZW, '
      'sum(AMOF) as WARF_SKR, sum(AMOF) as WARF_KON, '
      'sum(AMOF) as UMOF, sum(AMOF) as UMF_ZW, '
      'sum(AMOF) as UMF_SKR, sum(AMOF) as UMF_KON, '
      'sum(AMOF) as UMF_CO, '
      'sum(AMOF) as AMOF, '
      'max(SRSR.ZALP100) as ZALP100 '
      'from SRST join TAM using(SRST.GR, TAM.REFERENCE) '
      'join SRSR using(SRST.SRSR,SRSR.REFERENCE) '
      'join TAB using (TAM.BIL, TAB.REFERENCE) '
      'where SRST.GRP<>''T'' and SRST.ROK=:_a and SRST.OKRES<=:_b '
|| _sql:='select TAB.O as TAB_OPIS, '
      'sum(AMOP) as WARP, sum(AMOP) as WARP_ZW, '
      'sum(AMOP) as WARP_SKR, sum(AMOP) as WARP_KON, '
      'sum(AMOP) as UMOP, sum(AMOP) as UMP_ZW, '
      'sum(AMOP) as UMP_SKR, sum(AMOP) as UMP_KON, '
      'sum(AMOP) as UMP_CO, '
      'sum(AMOP) as AMOP, '
      'sum(AMOF) as WARF, sum(AMOF) as WARF_ZW, '
      'sum(AMOF) as WARF_SKR, sum(AMOF) as WARF_KON, '
      'sum(AMOF) as UMOF, sum(AMOF) as UMF_ZW, '
      'sum(AMOF) as UMF_SKR, sum(AMOF) as UMF_KON, '
      'sum(AMOF) as UMF_CO, '
      'sum(AMOF) as AMOF, '
      'sum(AMOD) as WARD, sum(AMOD) as WARD_ZW, '
      'sum(AMOD) as WARD_SKR, sum(AMOD) as WARD_KON, '
      'sum(AMOD) as UMOD, sum(AMOD) as UMD_ZW, '
      'sum(AMOD) as UMD_SKR, sum(AMOD) as UMD_KON, '
      'sum(AMOD) as UMD_CO, '
      'sum(AMOD) as AMOD, '
      'max(SRSR.ZALP100) as ZALP100 '
      'from SRST join TAM using(SRST.GR, TAM.REFERENCE) '
      'join SRSR using(SRST.SRSR,SRSR.REFERENCE) '
      'join TAB using (TAM.BIL, TAB.REFERENCE) '
      'where SRST.GRP<>''T'' and SRST.ROK=:_a and SRST.OKRES<=:_b and SRST.OKRES<>0 '
?};
{? _b<>null || _sql+=' and SRST.ODD=:_c ' ?};
{? _r<>'' || _sql+=' and SRST.R='':_d'' ' || ' and SRST.R<>''S'' ' ?};
:: dodatkowe warunki (przychód, rozchód, skreślenie)
{? _c<>null || _sql+=' and SRSR.PRZYCHOD=:_e ' ?};
{? _d<>null || _sql+=' and SRSR.ROZ=:_f ' ?};
{? _e=1
|| _sql+=' and SRSR.Z=''T'' '
|? _g=1
|| _sql+=' and (SRSR.Z<>''T'' or (SRSR.Z=''T'' and SRSR.DES>to_date(:_g))) '
?};
_sql+='GROUP BY TAB.O ORDER BY TAB_OPIS ';

_tmp:=sql(_sql,SSTALE.AO().RES,SSTALE.AO().OES,_b,_r,_c,_d,PAR_WYDR.STAN_NA);
{? _tmp.first()
|| {! |?
      _tmp.WARP:=_tmp.WARP_SKR:=_tmp.WARP_ZW:=_tmp.WARP_KON:=0;
      _tmp.UMOP:=_tmp.UMP_ZW:=_tmp.UMP_SKR:=_tmp.UMP_KON:=0;
      _tmp.WARF:=_tmp.WARF_SKR:=_tmp.WARF_ZW:=_tmp.WARF_KON:=0;
      _tmp.UMOF:=_tmp.UMF_ZW:=_tmp.UMF_SKR:=_tmp.UMF_KON:=0;
      _tmp.AMOP:=_tmp.AMOF:=0;
      {? FINFO.TOR_D='T'
      || _tmp.WARD:=_tmp.WARD_SKR:=_tmp.WARD_ZW:=_tmp.WARD_KON:=0;
         _tmp.UMOD:=_tmp.UMD_ZW:=_tmp.UMD_SKR:=_tmp.UMD_KON:=0;
         _tmp.AMOD:=0
      ?};
      {? _tmp.ZALP100>0 || _tmp.UMOP:=_tmp.ZALP100 ?};
      _tmp.put();
      _tmp.next()
   !};

:: początek okresu
   {? FINFO.TOR_D<>'T'
   || _sql:='select TAB.O as TAB_OPIS, '
            'sum(SRST.WARP) as WARP, '
            'sum(SRST.UMOP) as UMOP, '
            'sum(AMOP) as AMOP, '
            'sum(SRST.WARF) as WARF, '
            'sum(SRST.UMOF) as UMOF, '
            'sum(AMOF) as AMOF '
            'from SRST join TAM using(SRST.GR, TAM.REFERENCE) '
            'join SRSR using (SRST.SRSR,SRSR.REFERENCE) '
            'join TAB using (TAM.BIL, TAB.REFERENCE) '
            'where SRST.GRP<>''T'' and SRST.ROK=:_a and SRST.OKRES=:_b and SRSR.DE<to_date(:_c) '
   || _sql:='select TAB.O as TAB_OPIS, '
            'sum(SRST.WARP) as WARP, '
            'sum(SRST.UMOP) as UMOP, '
            'sum(AMOP) as AMOP, '
            'sum(SRST.WARF) as WARF, '
            'sum(SRST.UMOF) as UMOF, '
            'sum(AMOF) as AMOF, '
            'sum(SRST.WARD) as WARD, '
            'sum(SRST.UMOD) as UMOD, '
            'sum(AMOD) as AMOD '
            'from SRST join TAM using(SRST.GR, TAM.REFERENCE) '
            'join SRSR using (SRST.SRSR,SRSR.REFERENCE) '
            'join TAB using (TAM.BIL, TAB.REFERENCE) '
            'where SRST.GRP<>''T'' and SRST.ROK=:_a and SRST.OKRES=:_b and SRSR.DE<to_date(:_c) '
   ?};
   {? _b<>null || _sql+=' and SRST.ODD=:_d ' ?};
   {? _r<>'' || _sql+=' and SRST.R='':_e'' ' || ' and SRST.R<>''S'' ' ?};
:: dodatkowe warunki (przychód, rozchód, skreślenie)
   {? _c<>null || _sql+=' and SRSR.PRZYCHOD=:_f ' ?};
   {? _d<>null || _sql+=' and SRSR.ROZ=:_g ' ?};
   {? _e=1 || _sql+=' and SRSR.Z=''T'' ' ?};
   {? _g=1 || _sql+=' and (SRSR.Z<>''T'' or (SRSR.Z=''T'' and SRSR.DES>to_date(:_h))) ' ?};
   _sql+='GROUP BY TAB.O '
         'ORDER BY TAB_OPIS ';
   _pocz:=SSTALE.AR().POCZ_ROK;
   _tmp1:=sql(_sql,SSTALE.AO().RES,_fokres,_pocz,_b,_r,_c,_d,PAR_WYDR.STAN_NA);
   {? _tmp1.first()
   || {! |?
         {? _tmp.find_key(_tmp1.TAB_OPIS)
         || _tmp.WARP:=_tmp1.WARP;
            _tmp.UMOP:=_tmp.ZALP100+_tmp1.UMOP;
            _tmp.AMOP:=_tmp1.AMOP;
            _tmp.WARF:=_tmp1.WARF;
            _tmp.UMOF:=_tmp1.UMOF;
            _tmp.AMOF:=_tmp1.AMOF;
            {? FINFO.TOR_D='T'
            || _tmp.WARD:=_tmp1.WARD;
               _tmp.UMOD:=_tmp1.UMOD;
               _tmp.AMOD:=_tmp1.AMOD
            ?};
            _tmp.put()
         ?};
         _tmp1.next()
      !}
   ?};

:: ze zwiększenia (środki)
   {? FINFO.TOR_D<>'T'
   ||  _sql:='select TAB.O as TAB_OPIS, '
            'sum(SRSR.WARP) as WARP, '
            'sum(SRSR.UMOP) as UMOP, '
            'sum(SRSR.WARF) as WARF, '
            'sum(SRSR.UMOF) as UMOF '
            'from SRSR join SRST using (SRSR.REFERENCE, SRST.SRSR) '
            'join TAM using(SRST.GR, TAM.REFERENCE) '
            'join TAB using (TAM.BIL, TAB.REFERENCE) '
            'where SRSR.GRP<>''T''  and SRSR.ZB<>''T'' and SRSR.ROK=:_a and (SRSR.OKRES>=:_c and SRSR.OKRES<=:_b) '
            'and SRST.GRP<>''T'' and SRST.ROK=:_a and SRST.OKRES=:_b '
    ||  _sql:='select TAB.O as TAB_OPIS, '
            'sum(SRSR.WARP) as WARP, '
            'sum(SRSR.UMOP) as UMOP, '
            'sum(SRSR.WARF) as WARF, '
            'sum(SRSR.UMOF) as UMOF, '
            'sum(SRSR.WARD) as WARD, '
            'sum(SRSR.UMOD) as UMOD '
            'from SRSR join SRST using (SRSR.REFERENCE, SRST.SRSR) '
            'join TAM using(SRST.GR, TAM.REFERENCE) '
            'join TAB using (TAM.BIL, TAB.REFERENCE) '
            'where SRSR.GRP<>''T''  and SRSR.ZB<>''T'' and SRSR.ROK=:_a and (SRSR.OKRES>=:_c and SRSR.OKRES<=:_b) '
            'and SRST.GRP<>''T'' and SRST.ROK=:_a and SRST.OKRES=:_b '
   ?};
   {? _b<>null || _sql+=' and SRSR.ODD=:_d ' ?};
   {? _r<>'' || _sql+=' and SRSR.R='':_e'' ' || '' ?};
:: dodatkowe warunki (przychód, rozchód, skreślenie)
   {? _c<>null || _sql+=' and SRSR.PRZYCHOD=:_f ' ?};
   {? _e=1 || _sql+=' and SRSR.Z=''T'' ' ?};
   {? _g=1 || _sql+=' and (SRSR.Z<>''T'' or (SRSR.Z=''T'' and SRSR.DES>to_date(:_h))) ' ?};
   _sql+='GROUP BY TAB.O ORDER BY TAB_OPIS ';
   _tmp3:=sql(_sql,SSTALE.AO().RES,SSTALE.AO().OES,_fokres,_b,_r,_c,_d,PAR_WYDR.STAN_NA);
   {? _tmp3.first()
   || {! |?
         {? _tmp.find_key(_tmp3.TAB_OPIS)
         || _tmp.WARP_ZW:=_tmp3.WARP;
            _tmp.UMP_ZW:=_tmp3.UMOP;
            _tmp.WARF_ZW:=_tmp3.WARF;
            _tmp.UMF_ZW:=_tmp3.UMOF;
            {? FINFO.TOR_D='T'
            || _tmp.WARD_ZW:=_tmp3.WARD;
               _tmp.UMD_ZW:=_tmp3.UMOD
            ?};
            _tmp.put()
         ?};
         _tmp3.next()
      !}
   ?}
?};

:: ze zwiększenia (dokumenty)
{? _d=null
|| {? FINFO.TOR_D<>'T'
   || _sql:='select TAB.O as TAB_OPIS, '
            'sum(SRDO.WARP) as WARP, '
            'sum(SRDO.UMOP) as UMOP, '
            'sum(SRDO.WARF) as WARF, '
            'sum(SRDO.UMOF) as UMOF '
            'from SRDO join SRSR using (SRDO.SRSR,SRSR.REFERENCE) '
            'join SRST using (SRSR.REFERENCE, SRST.SRSR) '
            'join TAM using(SRST.GR, TAM.REFERENCE) '
            'join TAB using (TAM.BIL, TAB.REFERENCE) ';
            {? _h=2
            || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK=:_a and (extract(month from SRDO.DW)>=:_c and extract(month from SRDO.DW)<=:_b) '
                     'and SRDO.P=''+'' '
                     'and SRST.GRP<>''T'' and SRST.ROK=:_a and SRST.OKRES=:_b '
            || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK=:_a and (SRDO.OKRES>=:_c and SRDO.OKRES<=:_b) '
                     'and SRDO.P=''+'' '
                     'and SRST.GRP<>''T'' and SRST.ROK=:_a and SRST.OKRES=:_b '
            ?}
   || _sql:='select TAB.O as TAB_OPIS, '
            'sum(SRDO.WARP) as WARP, '
            'sum(SRDO.UMOP) as UMOP, '
            'sum(SRDO.WARF) as WARF, '
            'sum(SRDO.UMOF) as UMOF, '
            'sum(SRDO.WARD) as WARD, '
            'sum(SRDO.UMOD) as UMOD '
            'from SRDO join SRSR using (SRDO.SRSR,SRSR.REFERENCE) '
            'join SRST using (SRSR.REFERENCE, SRST.SRSR) '
            'join TAM using(SRST.GR, TAM.REFERENCE) '
            'join TAB using (TAM.BIL, TAB.REFERENCE) ';
            {? _h=2
            || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK=:_a and (extract(month from SRDO.DW)>=:_c and extract(month from SRDO.DW)<=:_b) '
                     'and SRDO.P=''+'' '
                     'and SRST.GRP<>''T'' and SRST.ROK=:_a and SRST.OKRES=:_b '
            || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK=:_a and (SRDO.OKRES>=:_c and SRDO.OKRES<=:_b) '
                     'and SRDO.P=''+'' '
                     'and SRST.GRP<>''T'' and SRST.ROK=:_a and SRST.OKRES=:_b '
            ?}
   ?};
   {? _b<>null || _sql+=' and SRSR.ODD=:_d ' ?};
   {? _r<>'' || _sql+=' and SRSR.R='':_e'' ' || '' ?};
:: dodatkowe warunki (przychód, rozchód, skreślenie)
   {? _c<>null || _sql+=' and SRDO.PRZYCHOD=:_f ' ?};
   {? _e=1 || _sql+=' and SRSR.Z=''T'' ' ?};
   {? _g=1 || _sql+=' and (SRSR.Z<>''T'' or (SRSR.Z=''T'' and SRSR.DES>to_date(:_h))) ' ?};
   _sql+='GROUP BY TAB.O ORDER BY TAB_OPIS ';
   _tmp5:=sql(_sql,SSTALE.AO().RES,SSTALE.AO().OES,_fokres,_b,_r,_c,_d,PAR_WYDR.STAN_NA);
   {? _tmp5.first()
   || {! |?
         {? _tmp.find_key(_tmp5.TAB_OPIS,)
         || _tmp.WARP_ZW+=(_tmp5.WARP);
            _tmp.UMP_ZW+=(_tmp5.UMOP);
            _tmp.WARF_ZW+=(_tmp5.WARF);
            _tmp.UMF_ZW+=(_tmp5.UMOF);
            {? FINFO.TOR_D='T'
            || _tmp.WARD_ZW+=(_tmp5.WARD);
               _tmp.UMD_ZW+=(_tmp5.UMOD)
            ?};
            _tmp.put()
         || _tmp.blank();
            _tmp.TAB_OPIS:=_tmp5.TAB_OPIS;
            _tmp.WARP_ZW:=_tmp5.WARP;
            _tmp.UMP_ZW:=_tmp5.UMOP;
            _tmp.WARF_ZW:=_tmp5.WARF;
            _tmp.UMF_ZW:=_tmp5.UMOF;
            {? FINFO.TOR_D='T'
            || _tmp.WARD_ZW+=(_tmp5.WARD);
               _tmp.UMD_ZW+=(_tmp5.UMOD)
            ?};
            _tmp.add()
         ?};
         _tmp5.next()
      !}
   ?}
?};

:: ze skreślenia (dokumenty)
{? _c=null
|| {? FINFO.TOR_D<>'T'
   || _sql:='select TAB.O as TAB_OPIS, '
            'sum(SRDO.WARP) as WARP, '
            'sum(SRDO.UMOP) as UMOP, '
            'sum(SRDO.WARF) as WARF, '
            'sum(SRDO.UMOF) as UMOF '
            'from SRDO join SRSR using (SRDO.SRSR,SRSR.REFERENCE) '
            'join TAM using(SRSR.GR, TAM.REFERENCE) '
            'join TAB using (TAM.BIL, TAB.REFERENCE) ';
            {? _h=2
            || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK=:_a and (extract(month from SRDO.DW)>=:_c and extract(month from SRDO.DW)<=:_b) '
                     'and SRDO.P=''-'' '
            || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK=:_a and (SRDO.OKRES>=:_c and SRDO.OKRES<=:_b) '
                     'and SRDO.P=''-'' '
            ?}
   || _sql:='select TAB.O as TAB_OPIS, '
            'sum(SRDO.WARP) as WARP, '
            'sum(SRDO.UMOP) as UMOP, '
            'sum(SRDO.WARF) as WARF, '
            'sum(SRDO.UMOF) as UMOF, '
            'sum(SRDO.WARD) as WARD, '
            'sum(SRDO.UMOD) as UMOD '
            'from SRDO join SRSR using (SRDO.SRSR,SRSR.REFERENCE) '
            'join TAM using(SRSR.GR, TAM.REFERENCE) '
            'join TAB using (TAM.BIL, TAB.REFERENCE) ';
            {? _h=2
            || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK=:_a and (extract(month from SRDO.DW)>=:_c and extract(month from SRDO.DW)<=:_b) '
                     'and SRDO.P=''-'' '
            || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK=:_a and (SRDO.OKRES>=:_c and SRDO.OKRES<=:_b) '
                     'and SRDO.P=''-'' '
            ?}
   ?};
   {? _b<>null || _sql+=' and SRSR.ODD=:_d ' ?};
   {? _r<>'' || _sql+=' and SRSR.R='':_e'' ' || '' ?};
:: dodatkowe warunki (przychód, rozchód, skreślenie)
   {? _d<>null || _sql+=' and SRDO.ROZ=:_g ' ?};
   {? _e=1 || _sql+=' and SRSR.Z=''T'' ' ?};
   {? _g=1 || _sql+=' and (SRSR.Z<>''T'' or (SRSR.Z=''T'' and SRSR.DES>to_date(:_h))) ' ?};
   _sql+='GROUP BY TAB.O ORDER BY TAB_OPIS ';
   _tmp4:=sql(_sql,SSTALE.AO().RES,SSTALE.AO().OES,_fokres,_b,_r,_c,_d,PAR_WYDR.STAN_NA);
   {? _tmp4.first()
   || {! |?
         {? _tmp.find_key(_tmp4.TAB_OPIS,)
         || _tmp.WARP_SKR+=_tmp4.WARP;
            _tmp.UMP_SKR+=_tmp4.UMOP;
            _tmp.WARF_SKR+=_tmp4.WARF;
            _tmp.UMF_SKR+=_tmp4.UMOF;
            {? FINFO.TOR_D='T'
            || _tmp.WARD_SKR+=_tmp4.WARD;
               _tmp.UMD_SKR+=_tmp4.UMOD
            ?};
            _tmp.put()
         || _tmp.blank();
            _tmp.TAB_OPIS:=_tmp4.TAB_OPIS;
            _tmp.WARP_SKR:=_tmp4.WARP;
            _tmp.UMP_SKR:=_tmp4.UMOP;
            _tmp.WARF_SKR:=_tmp4.WARF;
            _tmp.UMF_SKR:=_tmp4.UMOF;
            {? FINFO.TOR_D='T'
            || _tmp.WARD_SKR+=_tmp4.WARD;
               _tmp.UMD_SKR+=_tmp4.UMOD
            ?};
            _tmp.add()
         ?};
         _tmp4.next()
      !}
   ?}
?};

:: koniec okresu
{? _tmp.first()
|| {! |?
      _tmp.UMOP-=_tmp.AMOP;
      _tmp.WARP_KON:=_tmp.WARP+_tmp.WARP_ZW+_tmp.WARP_SKR;
      _tmp.UMP_KON:=_tmp.UMOP+_tmp.UMP_CO+_tmp.UMP_ZW+_tmp.UMP_SKR;
      _tmp.UMOF-=_tmp.AMOF;
      _tmp.WARF_KON:=_tmp.WARF+_tmp.WARF_ZW+_tmp.WARF_SKR;
      _tmp.UMF_KON:=_tmp.UMOF+_tmp.UMF_CO+_tmp.UMF_ZW+_tmp.UMF_SKR;
      {? FINFO.TOR_D='T'
      || _tmp.UMOD-=_tmp.AMOD;
         _tmp.WARD_KON:=_tmp.WARD+_tmp.WARD_ZW+_tmp.WARD_SKR;
         _tmp.UMD_KON:=_tmp.UMOD+_tmp.UMD_CO+_tmp.UMD_ZW+_tmp.UMD_SKR
      ?};
      _tmp.put();
      _tmp.next()
   !}
?};
_tmp


\o_tabzm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Procedura pomocnicza do wydruku fst_o_tabzm.rpm
::   WE: _a (PAR_WYDR.ZAKRESDR) = 0 - wszystkie, 1 - trwałe, 2 - niskocenne
::       _b (PAR_WYDR.ODD) = jednostka księgowa (ODD.ref()), jeżeli null to wszystkie
::       _c (PAR_WYDR.PRZYCHOD) = rodzaj przychodu (PRZYCHOD.ref())
::       _d (PAR_WYDR.ROZCHOD) = rodzaj rozchodu (ROZ.ref())
::       _e (PAR_WYDR.SKR_ONLY) = tylko skreślone (1/0)
::       _f (PAR_WYDR.RODZAJ) = 1 - analitycznie, 2 - syntetycznie
::       _g (PAR_WYDR.ZESTAW) = 1 - zestawienie wg jednostek księgowych, 2 - wg grup
::       _h (PAR_WYDR.JORG) = jednostka organizacyjna (UD_SKL.ref()), jeżeli null to wszystkie
::       _i (PAR_WYDR.SKRESL) = 0 - uwzględniać skreślone w bieżącym roku przed Stan na dzień, 1 - nie uwzględniać
::       _j (PAR_WYDR.MO_DO) = 1 - dokumenty wg daty obowiązywania, 2 - dokumenty wg daty operacji
::   WY: wskazanie na tabele tymczasowa
::----------------------------------------------------------------------------------------------------------------------
:: WARP, WARF, WARD - wartosc na poczatek roku (pod./bil./dod.)
:: WARP_ZW, WARF_ZW, WARD_ZW - wartość dodanych w trakcie roku środków (pod./bil./dod.)
:: WARP_ZWD, WARF_ZWD, WARD_ZWD - zwiekszenia wartości dokumentami (pod./bil./dod.)
:: WARP_SKR, WARF_SKR, WARD_SKR - wartosc skreslonych w trakcie roku środki (pod./bil./dod.)
:: WARP_KON, WARF_KON, WARD_KON - wartość na koniec okresu (pod./bil./dod.)
:: UMOP, UMOF, UMOD - umorzenie na początek roku (pod./bil./dod.)
:: UMP_CO, UMF_CO, UMD_CO - wartość amortyzacji w trakcie roku (pod./bil./dod.)
:: UMP_ZW, UMF_ZW, UMD_ZW - wartość umorzenia z dodanych środków (pod./bil./dod.)
:: UMP_ZWD, UMF_ZWD, UMD_ZWD - wartość umorzenia z dokumentów wartościowych (pod./bil./dod.)
:: UMP_SKR, UMF_SKR, UMD_SKR  - umorzenie skreslonych z ewidencji (pod./bil./dod.)
:: UMP_KON, UMF_KON, UMD_KON - umorzenie na koniec okresu (pod./bil./dod.)
:: AKTYWNY - czy srodek istnieje w j. księgowej w bieżącym okresie
:: MIE_OD, MIE_DO - zakres okresów w których środek istnieje w j. księgowej

{? _=0
|| _a:=PAR_WYDR.ZAKRESDR;
   _b:=PAR_WYDR.ODD;
   _c:=PAR_WYDR.PRZYCHOD;
   _d:=PAR_WYDR.ROZCHOD;
   _e:=PAR_WYDR.SKR_ONLY;
   _f:=PAR_WYDR.RODZAJ;
   _g:=PAR_WYDR.ZESTAW;
   _h:=PAR_WYDR.JORG;
   _i:=PAR_WYDR.SKRESL;
   _j:=PAR_WYDR.MO_DO
?};

:: zakres rodzaju środków (wszystkie, trwałe, niskocenne)
{? _a=0 || _r:=''
|? _a=1 || _r:='T'
|? _a=2 || _r:='N'
?};

:: obsługa filtrowania wg grup
_grupa:=_sql_gr:='';
{? PAR_WYDR.WAR_GR=1
|| {? |PAR_WYDR.GRUPA <> ''
   || _lok:=|PAR_WYDR.GRUPA * '*';
      {? _lok
      || _lok-=1; _grupa:=(_lok+|PAR_WYDR.GRUPA) + '%'
      || _grupa:=|PAR_WYDR.GRUPA + '%'
      ?};
      _sql_gr+=' and TAM.GR like '':_h'''
   ?}
|? PAR_WYDR.WAR_GR=2 & (|PAR_WYDR.GRUPA_OD<>'' | |PAR_WYDR.GRUPA_DO<>'')
|| {? |PAR_WYDR.GRUPA_OD<>'' & |PAR_WYDR.GRUPA_DO<>''
   || _sql_gr+=' and TAM.GR BETWEEN '':_i'' and '':_j'''
   |? |PAR_WYDR.GRUPA_OD<>'' & |PAR_WYDR.GRUPA_DO=''
   || _sql_gr+=' and TAM.GR >= '':_i'''
   |? |PAR_WYDR.GRUPA_OD='' & |PAR_WYDR.GRUPA_DO<>''
   || _sql_gr+=' TAM.GR <= '':_j'''
   ?}
|? PAR_WYDR.WAR_GR=3
|| _sql_gr:=exec('get_grupy','fst',' and '+_sql_gr,'TAM.GR')
?};

OKRO_F.cntx_psh();
OKRO_F.index('SRODKI');
OKRO_F.prefix(REF.FIRMA,SSTALE.AO().RES);
{? OKRO_F.first()
|| {? OKRO_F.OES=0 || OKRO_F.next() ?};
   _fokres:=OKRO_F.OES
?};
OKRO_F.cntx_pop();

:: w ciągu okresu
{? FINFO.TOR_D<>'T'
||
   _sql:='select SRST.NRI as NRI, '
         'max(ODD.OD) as ODDZIAL, '
         'max(TAM.GR) as GRUPA, '
         'max(SUBSTR(TAM.GR,1,1)) as GR, '
         'max(SRST.NST) as NST, '
         'max(UD_SKL.SYMBOL) as JORG, '
         'max(SRSR.ZALP100) as ZALP100, '
         'min(SRST.OKRES) as MIE_OD, '
         'max(SRST.OKRES) as MIE_DO, '
         'max(SRST.DEKRET) as AKTYWNY, '
         'sum(AMOP) as AMOP, '
         'sum(AMOP) as WARP, sum(AMOP) as WARP_ZW, sum(AMOP) as WARP_ZWD,'
         'sum(AMOP) as WARP_SKR, sum(AMOP) as WARP_KON, '
         'sum(AMOP) as UMOP, sum(AMOP) as UMP_ZW, sum(AMOP) as UMP_ZWD, '
         'sum(AMOP) as UMP_SKR, sum(AMOP) as UMP_KON, '
         'sum(AMOP) as UMP_CO, '
         'sum(AMOF) as AMOF, '
         'sum(AMOF) as WARF, sum(AMOD) as WARF_ZW, sum(AMOF) as WARF_ZWD, '
         'sum(AMOF) as WARF_SKR, sum(AMOF) as WARF_KON, '
         'sum(AMOF) as UMOF, sum(AMOF) as UMF_ZW, sum(AMOF) as UMF_ZWD, '
         'sum(AMOF) as UMF_SKR, sum(AMOF) as UMF_KON, '
         'sum(AMOF) as UMF_CO '
         'from SRST join TAM using(SRST.GR, TAM.REFERENCE) '
         'join SRSR using(SRST.SRSR,SRSR.REFERENCE) '
         'join UD_SKL using(SRST.JORG,UD_SKL.REFERENCE) '
         'join ODD using(SRST.ODD, ODD.REFERENCE) '
         'join TAB using (TAM.BIL, TAB.REFERENCE) '
         'where SRST.GRP<>''E'' and SRST.ROK=:_a and SRST.OKRES<=:_b and SRST.OKRES<>0 '
||
   _sql:='select SRST.NRI as NRI, '
         'max(ODD.OD) as ODDZIAL, '
         'max(TAM.GR) as GRUPA, '
         'max(SUBSTR(TAM.GR,1,1)) as GR, '
         'max(SRST.NST) as NST, '
         'max(UD_SKL.SYMBOL) as JORG, '
         'max(SRSR.ZALP100) as ZALP100, '
         'min(SRST.OKRES) as MIE_OD, '
         'max(SRST.OKRES) as MIE_DO, '
         'max(SRST.DEKRET) as AKTYWNY, '
         'sum(AMOP) as AMOP, '
         'sum(AMOP) as WARP, sum(AMOP) as WARP_ZW, sum(AMOP) as WARP_ZWD,'
         'sum(AMOP) as WARP_SKR, sum(AMOP) as WARP_KON, '
         'sum(AMOP) as UMOP, sum(AMOP) as UMP_ZW, sum(AMOP) as UMP_ZWD, '
         'sum(AMOP) as UMP_SKR, sum(AMOP) as UMP_KON, '
         'sum(AMOP) as UMP_CO, '
         'sum(AMOF) as AMOF, '
         'sum(AMOF) as WARF, sum(AMOF) as WARF_ZW, sum(AMOF) as WARF_ZWD, '
         'sum(AMOF) as WARF_SKR, sum(AMOF) as WARF_KON, '
         'sum(AMOF) as UMOF, sum(AMOF) as UMF_ZW, sum(AMOF) as UMF_ZWD, '
         'sum(AMOF) as UMF_SKR, sum(AMOF) as UMF_KON, '
         'sum(AMOF) as UMF_CO, '
         'sum(AMOD) as AMOD, '
         'sum(AMOD) as WARD, sum(AMOD) as WARD_ZW, sum(AMOD) as WARD_ZWD, '
         'sum(AMOD) as WARD_SKR, sum(AMOD) as WARD_KON, '
         'sum(AMOD) as UMOD, sum(AMOD) as UMD_ZW, sum(AMOD) as UMD_ZWD, '
         'sum(AMOD) as UMD_SKR, sum(AMOD) as UMD_KON, '
         'sum(AMOD) as UMD_CO '
         'from SRST join TAM using(SRST.GR, TAM.REFERENCE) '
         'join SRSR using(SRST.SRSR,SRSR.REFERENCE) '
         'join UD_SKL using(SRST.JORG,UD_SKL.REFERENCE) '
         'join ODD using(SRST.ODD, ODD.REFERENCE) '
         'join TAB using (TAM.BIL, TAB.REFERENCE) '
         'where SRST.GRP<>''E'' and SRST.ROK=:_a and SRST.OKRES<=:_b and SRST.OKRES<>0 '
?};
{? _b<>null || _sql+=' and SRST.ODD=:_c ' ?};
{? _h<>null || _sql+=' and SRST.JORG=:_g ' ?};
{? _r<>'' || _sql+=' and SRST.R='':_d'' ' || ' SRST.R<>''S'' ' ?};
:: dodatkowe warunki (przychód, rozchód, skreślenie)
{? _c<>null || _sql+=' and SRSR.PRZYCHOD=:_e ' ?};
{? _d<>null || _sql+=' and SRSR.ROZ=:_f ' ?};
{? _e=1
|| _sql+=' and SRSR.Z=''T'' '
|? _i=1
|| _sql+=' and (SRSR.Z<>''T''  or (SRSR.Z=''T'' and SRSR.DES>to_date(:_k))) '
?};
{? _sql_gr<>'' || _sql+=_sql_gr ?};
_sql+=' GROUP BY SRST.ODD, SRST.NRI '
      ' ORDER BY ODDZIAL, NRI ';

_tmp:=sql(_sql,SSTALE.AO().RES,SSTALE.AO().OES,_b,_r,_c,_d,_h,_grupa,|PAR_WYDR.GRUPA_OD,|PAR_WYDR.GRUPA_DO,PAR_WYDR.STAN_NA);
{? _tmp.first()
|| {! |?
      _tmp.WARP:=_tmp.WARP_SKR:=_tmp.WARP_ZW:=_tmp.WARP_ZWD:=_tmp.WARP_KON:=_tmp.AMOP:=0;
      _tmp.UMOP:=_tmp.UMP_ZW:=_tmp.UMP_ZWD:=_tmp.UMP_SKR:=_tmp.UMP_KON:=0;
      _tmp.WARF:=_tmp.WARF_SKR:=_tmp.WARF_ZW:=_tmp.WARF_ZWD:=_tmp.WARF_KON:=_tmp.AMOF:=0;
      _tmp.UMOF:=_tmp.UMF_ZW:=_tmp.UMF_ZWD:=_tmp.UMF_SKR:=_tmp.UMF_KON:=0;
      {? FINFO.TOR_D='T'
      || _tmp.WARD:=_tmp.WARD_SKR:=_tmp.WARD_ZW:=_tmp.WARD_ZWD:=_tmp.WARD_KON:=_tmp.AMOD:=0;
         _tmp.UMOD:=_tmp.UMD_ZW:=_tmp.UMD_ZWD:=_tmp.UMD_SKR:=_tmp.UMD_KON:=0
      ?};
      _tmp.MIE_OD:=1; _tmp.MIE_DO:=12; _tmp.AKTYWNY:='T';
      {? _tmp.ZALP100>0 || _tmp.UMOP:=_tmp.ZALP100 ?};
      _tmp.put();
      _tmp.next()
   !};

:: początek okresu
   {? FINFO.TOR_D<>'T'
   || _sql:='select SRST.NRI as NRI, '
            'ODD.OD as ODDZIAL, '
            'sum(SRST.WARP) as WARP, '
            'sum(SRST.AMOP) as AMOP, '
            'sum(SRST.UMOP) as UMOP, '
            'sum(SRST.WARF) as WARF, '
            'sum(SRST.AMOF) as AMOF, '
            'sum(SRST.UMOF) as UMOF '
            'from SRST join TAM using(SRST.GR, TAM.REFERENCE) '
            'join SRSR using (SRST.SRSR,SRSR.REFERENCE) '
            'join TAB using (TAM.BIL, TAB.REFERENCE) '
            'join ODD using (SRST.ODD, ODD.REFERENCE) '
            'where SRST.GRP<>''E'' and SRST.ROK=:_a and SRST.OKRES=:_b and SRSR.DE<to_date(:_c)'
   || _sql:='select SRST.NRI as NRI, '
            'ODD.OD as ODDZIAL, '
            'sum(SRST.WARP) as WARP, '
            'sum(SRST.AMOP) as AMOP, '
            'sum(SRST.UMOP) as UMOP, '
            'sum(SRST.WARF) as WARF, '
            'sum(SRST.AMOF) as AMOF, '
            'sum(SRST.UMOF) as UMOF, '
            'sum(SRST.WARD) as WARD, '
            'sum(SRST.AMOD) as AMOD, '
            'sum(SRST.UMOD) as UMOD '
            'from SRST join TAM using(SRST.GR, TAM.REFERENCE) '
            'join SRSR using (SRST.SRSR,SRSR.REFERENCE) '
            'join TAB using (TAM.BIL, TAB.REFERENCE) '
            'join ODD using (SRST.ODD, ODD.REFERENCE) '
            'where SRST.GRP<>''E'' and SRST.ROK=:_a and SRST.OKRES=:_b and SRSR.DE<to_date(:_c)'
   ?};
   {? _b<>null || _sql+=' and SRST.ODD=:_d ' ?};
   {? _r<>'' || _sql+=' and SRST.R='':_e'' ' || '  and SRST.R<>''S'' ' ?};
:: dodatkowe warunki (przychód, rozchód, skreślenie)
   {? _c<>null || _sql+=' and SRSR.PRZYCHOD=:_f ' ?};
   {? _d<>null || _sql+=' and SRSR.ROZ=:_g ' ?};
   {? _e=1 || _sql+=' and SRSR.Z=''T'' '
   |? _i=1 || _sql+=' and (SRSR.Z<>''T''  or (SRSR.Z=''T'' and SRSR.DES>to_date(:_k))) '
   ?};
   {? _sql_gr<>'' || _sql+=_sql_gr ?};
   _sql+=' GROUP BY ODD.OD, SRST.NRI '
         ' ORDER BY ODDZIAL, NRI ';
   _pocz:=SSTALE.AR().POCZ_ROK;
   _tmp1:=sql(_sql,SSTALE.AO().RES,_fokres,_pocz,_b,_r,_c,_d,_grupa,|PAR_WYDR.GRUPA_OD,|PAR_WYDR.GRUPA_DO,PAR_WYDR.STAN_NA);
   _tmp.prefix();
   {? _tmp1.first()
   || {! |?
         {? _tmp.find_key(_tmp1.ODDZIAL,_tmp1.NRI,)
         || _tmp.WARP:=_tmp1.WARP;
            _tmp.AMOP:=_tmp1.AMOP;
            _tmp.UMOP:=_tmp1.UMOP;
            _tmp.WARF:=_tmp1.WARF;
            _tmp.UMOF:=_tmp1.UMOF;
            _tmp.AMOF:=_tmp1.AMOF;
            {? FINFO.TOR_D='T'
            || _tmp.WARD:=_tmp1.WARD;
               _tmp.UMOD:=_tmp1.UMOD;
               _tmp.AMOD:=_tmp1.AMOD
            ?};
            _tmp.put()
         ?};
         _tmp1.next()
      !}
   ?};
:: ze zwiększenia (środki)
   {? FINFO.TOR_D<>'T'
   || _sql:='select SRSR.NRI as NRI, '
            'ODD.OD as ODDZIAL, '
            'max(TAM.GR) as GRUPA, '
            'max(SUBSTR(TAM.GR,1,1)) as GR, '
            'max(SRSR.NST) as NST, '
            'max(UD_SKL.SYMBOL) as JORG, '
            'sum(SRSR.WARP) as WARP, '
            'sum(SRSR.UMOP) as UMOP, '
            'sum(SRSR.WARF) as WARF, '
            'sum(SRSR.UMOF) as UMOF '
            'from SRSR join TAM using(SRSR.GR, TAM.REFERENCE) '
            'join ODD using (SRSR.ODD, ODD.REFERENCE) '
            'join UD_SKL using (SRSR.JORG, UD_SKL.REFERENCE) '
            'left join TAB using (TAM.BIL, TAB.REFERENCE) '
            'where SRSR.GRP<>''T'' and SRSR.ZB<>''T'' and SRSR.ROK=:_a and (SRSR.OKRES>=:_c and SRSR.OKRES<=:_b) '
   || _sql:='select SRSR.NRI as NRI, '
            'ODD.OD as ODDZIAL, '
            'max(TAM.GR) as GRUPA, '
            'max(SUBSTR(TAM.GR,1,1)) as GR, '
            'max(SRSR.NST) as NST, '
            'max(UD_SKL.SYMBOL) as JORG, '
            'sum(SRSR.WARP) as WARP, '
            'sum(SRSR.UMOP) as UMOP, '
            'sum(SRSR.WARF) as WARF, '
            'sum(SRSR.UMOF) as UMOF, '
            'sum(SRSR.WARD) as WARD, '
            'sum(SRSR.UMOD) as UMOD '
            'from SRSR join TAM using(SRSR.GR, TAM.REFERENCE) '
            'join ODD using (SRSR.ODD, ODD.REFERENCE) '
            'join UD_SKL using (SRSR.JORG, UD_SKL.REFERENCE) '
            'left join TAB using (TAM.BIL, TAB.REFERENCE) '
            'where SRSR.GRP<>''T'' and SRSR.ZB<>''T'' and SRSR.ROK=:_a and (SRSR.OKRES>=:_c and SRSR.OKRES<=:_b) '
   ?};
   {? _b<>null || _sql+=' and SRSR.ODD=:_d ' ?};
   {? _r<>'' || _sql+=' and SRSR.R='':_e'' ' || '' ?};
:: dodatkowe warunki (przychód, rozchód, skreślenie)
   {? _c<>null || _sql+=' and SRSR.PRZYCHOD=:_f ' ?};
   {? _e=1
   || _sql+=' and SRSR.Z=''T'' '
   |? _i=1
   || _sql+=' and (SRSR.Z<>''T'' or (SRSR.Z=''T'' and SRSR.DES>to_date(:_h))) '
   ?};
   _sql+=' GROUP BY ODD.OD, SRSR.NRI '
         ' ORDER BY ODDZIAL, NRI ';
   _tmp3:=sql(_sql,SSTALE.AO().RES,SSTALE.AO().OES,_fokres,_b,_r,_c,_d,PAR_WYDR.STAN_NA);
   {? _tmp3.first()
   || {! |?
         {? _tmp.find_key(_tmp3.ODDZIAL,_tmp3.NRI)
         || _tmp.WARP_ZW:=_tmp3.WARP;
            _tmp.UMP_ZW:=_tmp3.UMOP;
            _tmp.WARF_ZW:=_tmp3.WARF;
            _tmp.UMF_ZW:=_tmp3.UMOF;
            {? FINFO.TOR_D='T'
            || _tmp.WARD_ZW:=_tmp3.WARD;
               _tmp.UMD_ZW:=_tmp3.UMOD
            ?};
            _tmp.put()
         ?};
         _tmp3.next()
      !}
   ?}
?};

:: ze zwiększenia (dokumenty)
{? FINFO.TOR_D<>'T'
|| _sql:='select SRSR.NRI as NRI, '
         'ODD.OD as ODDZIAL, '
         'max(TAM.GR) as GRUPA, '
         'max(SUBSTR(TAM.GR,1,1)) as GR, '
         'max(SRSR.NST) as NST, '
         'max(UD_SKL.SYMBOL) as JORG, '
         'sum(SRDO.WARP) as WARP, '
         'sum(SRDO.UMOP) as UMOP, '
         'sum(SRDO.WARF) as WARF, '
         'sum(SRDO.UMOF) as UMOF '
         'from SRDO join SRSR using (SRDO.SRSR,SRSR.REFERENCE) '
         'join SRST using (SRDO.SRSR, SRST.SRSR ) '
         'join ODD using(SRSR.ODD, ODD.REFERENCE) '
         'join TAM using(SRST.GR, TAM.REFERENCE) '
         'join TAB using (TAM.BIL, TAB.REFERENCE) '
         'join UD_SKL using(SRSR.JORG,UD_SKL.REFERENCE) ';
   {? _j=2
   || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK=:_a and (extract(month from SRDO.DO)>=:_c and extract(month from SRDO.DO)<=:_b) '
            'and SRDO.P=''+'' and SRST.ROK=SRDO.ROK and SRST.OKRES=SRDO.OKRES '
   || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK_F=\':_a\' and (SRDO.OKRES>=:_c and SRDO.OKRES<=:_b) '
            'and SRDO.P=''+'' and SRST.ROK=SRDO.ROK and SRST.OKRES=SRDO.OKRES '
   ?}
|| _sql:='select SRSR.NRI as NRI, '
         'ODD.OD as ODDZIAL, '
         'max(TAM.GR) as GRUPA, '
         'max(SUBSTR(TAM.GR,1,1)) as GR, '
         'max(SRSR.NST) as NST, '
         'max(UD_SKL.SYMBOL) as JORG, '
         'sum(SRDO.WARP) as WARP, '
         'sum(SRDO.UMOP) as UMOP, '
         'sum(SRDO.WARF) as WARF, '
         'sum(SRDO.UMOF) as UMOF, '
         'sum(SRDO.WARD) as WARD, '
         'sum(SRDO.UMOD) as UMOD '
         'from SRDO join SRSR using (SRDO.SRSR,SRSR.REFERENCE) '
         'join SRST using (SRDO.SRSR, SRST.SRSR ) '
         'join ODD using(SRSR.ODD, ODD.REFERENCE) '
         'join TAM using(SRST.GR, TAM.REFERENCE) '
         'join TAB using (TAM.BIL, TAB.REFERENCE) '
         'join UD_SKL using(SRSR.JORG,UD_SKL.REFERENCE) ';
   {? _j=2
   || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK=:_a and (extract(month from SRDO.DO)>=:_c and extract(month from SRDO.DO)<=:_b) '
            'and SRDO.P=''+'' and SRST.ROK=SRDO.ROK and SRST.OKRES=SRDO.OKRES '
   || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK_F=\':_a\' and (SRDO.OKRES>=:_c and SRDO.OKRES<=:_b) '
            'and SRDO.P=''+'' and SRST.ROK=SRDO.ROK and SRST.OKRES=SRDO.OKRES '
   ?}
?};
{? _b<>null || _sql+=' and SRSR.ODD=:_d ' ?};
{? _r<>'' || _sql+=' and SRSR.R='':_e'' ' || '' ?};
:: dodatkowe warunki (przychód, rozchód, skreślenie)
{? _c<>null || _sql+=' and SRDO.PRZYCHOD=:_f ' ?};
{? _e=1
|| _sql+=' and SRSR.Z=''T'' '
|? _i=1
|| _sql+=' and (SRSR.Z<>''T''  or (SRSR.Z=''T'' and SRSR.DES>to_date(:_k))) '
?};
{? _sql_gr<>'' || _sql+=_sql_gr ?};
_sql+=' GROUP BY ODD.OD, SRSR.NRI '
      ' ORDER BY ODDZIAL, NRI ';
_tmp5:=sql(_sql,{? _j=2 || SSTALE.AO().RES || $SSTALE.AO().ROK ?},
                SSTALE.AO().OES,_fokres,_b,_r,_c,_d,_grupa,|PAR_WYDR.GRUPA_OD,|PAR_WYDR.GRUPA_DO,PAR_WYDR.STAN_NA);
{? _tmp5.first()
|| {! |?
      {? _tmp.find_key(_tmp5.ODDZIAL, _tmp5.NRI)
      || _tmp.WARP_ZWD:=(_tmp5.WARP);
         _tmp.UMP_ZWD:=(_tmp5.UMOP);
         _tmp.WARF_ZWD:=(_tmp5.WARF);
         _tmp.UMF_ZWD:=(_tmp5.UMOF);
         {? FINFO.TOR_D='T'
         || _tmp.WARD_ZWD:=(_tmp5.WARD);
            _tmp.UMD_ZWD:=(_tmp5.UMOD)
         ?};
         _tmp.put()
      || _tmp.blank();
         _tmp.NRI:=_tmp5.NRI;
         _tmp.ODDZIAL:=_tmp5.ODDZIAL;
         _tmp.GRUPA:=_tmp5.GRUPA;
         _tmp.GR:=_tmp5.GR;
         _tmp.NST:=_tmp5.NST;
         _tmp.JORG:=_tmp5.JORG;
         _tmp.WARP_ZWD:=(_tmp5.WARP);
         _tmp.UMP_ZWD:=(_tmp5.UMOP);
         _tmp.WARF_ZWD:=(_tmp5.WARF);
         _tmp.UMF_ZWD:=(_tmp5.UMOF);
         {? FINFO.TOR_D='T'
         || _tmp.WARD_ZWD:=(_tmp5.WARD);
            _tmp.UMD_ZWD:=(_tmp5.UMOD)
         ?};
         _tmp.MIE_OD:=1;
         _tmp.MIE_DO:=12;
         _tmp.AKTYWNY:='T';
         _tmp.add()
      ?};
      _tmp5.next()
   !}
?};

{? _c=null
||
:: ze skreślenia (dokumenty)
{? FINFO.TOR_D<>'T'
|| _sql:='select SRSR.NRI as NRI, '
         'ODD.OD as ODDZIAL, '
         'max(TAM.GR) as GRUPA, '
         'max(SUBSTR(TAM.GR,1,1)) as GR, '
         'max(SRSR.NST) as NST, '
         'max(UD_SKL.SYMBOL) as JORG, '
         'sum(SRDO.WARP) as WARP, '
         'sum(SRDO.UMOP) as UMOP, '
         'sum(SRDO.WARF) as WARF, '
         'sum(SRDO.UMOF) as UMOF '
         'from SRDO join SRSR using(SRDO.SRSR, SRSR.REFERENCE) '
         'join SRST using (SRDO.SRSR, SRST.SRSR ) '
         'join ODD using(SRSR.ODD, ODD.REFERENCE) '
         'join TAM using(SRST.GR, TAM.REFERENCE) '
         'join TAB using (TAM.BIL, TAB.REFERENCE) '
         'join UD_SKL using(SRSR.JORG,UD_SKL.REFERENCE) ';
   {? _j=2
   || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK=:_a and (extract(month from SRDO.DO)>=:_c and extract(month from SRDO.DO)<=:_b) '
            'and SRDO.P=''-'' and SRST.ROK=SRDO.ROK and SRST.OKRES=SRDO.OKRES '
   || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK_F=\':_a\' and (SRDO.OKRES>=:_c and SRDO.OKRES<=:_b) '
            'and SRDO.P=''-'' and SRST.ROK=SRDO.ROK and SRST.OKRES=SRDO.OKRES '
   ?}
|| _sql:='select SRSR.NRI as NRI, '
         'ODD.OD as ODDZIAL, '
         'max(TAM.GR) as GRUPA, '
         'max(SUBSTR(TAM.GR,1,1)) as GR, '
         'max(SRSR.NST) as NST, '
         'max(UD_SKL.SYMBOL) as JORG, '
         'sum(SRDO.WARP) as WARP, '
         'sum(SRDO.UMOP) as UMOP, '
         'sum(SRDO.WARF) as WARF, '
         'sum(SRDO.UMOF) as UMOF, '
         'sum(SRDO.WARD) as WARD, '
         'sum(SRDO.UMOD) as UMOD '
         'from SRDO join SRSR using(SRDO.SRSR, SRSR.REFERENCE) '
         'join SRST using (SRDO.SRSR, SRST.SRSR ) '
         'join ODD using(SRSR.ODD, ODD.REFERENCE) '
         'join TAM using(SRST.GR, TAM.REFERENCE) '
         'join TAB using (TAM.BIL, TAB.REFERENCE) '
         'join UD_SKL using(SRSR.JORG,UD_SKL.REFERENCE) ';
   {? _j=2
   || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK=:_a and (extract(month from SRDO.DO)>=:_c and extract(month from SRDO.DO)<=:_b) '
            'and SRDO.P=''-'' and SRST.ROK=SRDO.ROK and SRST.OKRES=SRDO.OKRES '
   || _sql+='where SRDO.RODZ=''W'' and SRDO.LINK_REF='''' and SRDO.ROK_F=\':_a\' and (SRDO.OKRES>=:_c and SRDO.OKRES<=:_b) '
            'and SRDO.P=''-'' and SRST.ROK=SRDO.ROK and SRST.OKRES=SRDO.OKRES '
   ?}
?};
   {? _b<>null || _sql+=' and SRSR.ODD=:_d ' ?};
   {? _r<>'' || _sql+=' and SRSR.R='':_e'' ' || '' ?};
:: dodatkowe warunki (przychód, rozchód, skreślenie)
   {? _d<>null || _sql+=' and SRDO.ROZ=:_g ' ?};
   {? _e=1 || _sql+=' and SRSR.Z=''T'' '
   |? _i=1 || _sql+=' and (SRSR.Z<>''T'' or (SRSR.Z=''T'' and SRSR.DES>to_date(:_k))) '
   ?};
   {? _sql_gr<>'' || _sql+=_sql_gr ?};
   _sql+=' GROUP BY ODD.OD, SRSR.NRI '
         ' ORDER BY ODDZIAL, NRI ';
   _tmp4:=sql(_sql,{? _j=2 || SSTALE.AO().RES || $SSTALE.AO().ROK ?},SSTALE.AO().OES,_fokres,_b,_r,_c,_d,_grupa,|PAR_WYDR.GRUPA_OD,|PAR_WYDR.GRUPA_DO,PAR_WYDR.STAN_NA,SRDO.DW~2);
   {? _tmp4.first()
   || {! |?
         {? _tmp.find_key(_tmp4.ODDZIAL,_tmp4.NRI)
         || _tmp.WARP_SKR:=_tmp4.WARP;
            _tmp.UMP_SKR:=_tmp4.UMOP;
            _tmp.WARF_SKR:=_tmp4.WARF;
            _tmp.UMF_SKR:=_tmp4.UMOF;
            {? FINFO.TOR_D='T'
            || _tmp.WARD_SKR:=_tmp4.WARD;
               _tmp.UMD_SKR:=_tmp4.UMOD
            ?};
            _tmp.put()
         || _tmp.blank();
            _tmp.NRI:=_tmp4.NRI;
            _tmp.ODDZIAL:=_tmp4.ODDZIAL;
            _tmp.GRUPA:=_tmp4.GRUPA;
            _tmp.GR:=_tmp4.GR;
            _tmp.NST:=_tmp4.NST;
            _tmp.JORG:=_tmp4.JORG;
            _tmp.WARP_SKR:=(_tmp4.WARP);
            _tmp.UMP_SKR:=(_tmp4.UMOP);
            _tmp.WARF_SKR:=(_tmp4.WARF);
            _tmp.UMF_SKR:=(_tmp4.UMOF);
            {? FINFO.TOR_D='T'
            || _tmp.WARD_SKR:=(_tmp4.WARD);
               _tmp.UMD_SKR:=(_tmp4.UMOD)
            ?};
            _tmp.MIE_OD:=1;
            _tmp.MIE_DO:=12;
            _tmp.AKTYWNY:='T';
            _tmp.add()
         ?};
         _tmp4.next()
      !}
   ?}
?};

:: koniec okresu
{? _tmp.first()
|| {! |?
      _tmp.WARP_KON:=_tmp.WARP+_tmp.WARP_ZW+_tmp.WARP_ZWD+_tmp.WARP_SKR;
      _tmp.UMP_KON:=_tmp.UMOP+_tmp.UMP_CO+_tmp.UMP_ZW+_tmp.UMP_ZWD+_tmp.UMP_SKR;
      _tmp.WARF_KON:=_tmp.WARF+_tmp.WARF_ZW+_tmp.WARF_ZWD+_tmp.WARF_SKR;
      _tmp.UMF_KON:=_tmp.UMOF+_tmp.UMF_CO+_tmp.UMF_ZW+_tmp.UMF_ZWD+_tmp.UMF_SKR;
      {? FINFO.TOR_D='T'
      || _tmp.WARD_KON:=_tmp.WARD+_tmp.WARD_ZW+_tmp.WARD_ZWD+_tmp.WARD_SKR;
         _tmp.UMD_KON:=_tmp.UMOD+_tmp.UMD_CO+_tmp.UMD_ZW+_tmp.UMD_ZWD+_tmp.UMD_SKR
      ?};
      _tmp.put();
      _tmp.next()
   !}
?};
{? _g=2
|| _idx:=_tmp.ndx_tmp(,,'GR',,,'NRI',,);
   _tmp.index(_idx)
?};

{? _f=2
|| {? _g=1 || _sql2:='select ODDZIAL, '
   |? _g=2 || _sql2:='select GR, '
   ?};
   {? FINFO.TOR_D<>'T'
   || _sql2+='SUM(WARP) as WARP, SUM(WARP_ZW) as WARP_ZW, SUM(WARP_ZWD) as WARP_ZWD, SUM(WARP_SKR) as WARP_SKR, SUM(WARP_KON) as WARP_KON, '
             'SUM(WARF) as WARF, SUM(WARF_ZW) as WARF_ZW, SUM(WARF_ZWD) as WARF_ZWD, SUM(WARF_SKR) as WARF_SKR, SUM(WARF_KON) as WARF_KON, '
             'SUM(AMOP) as AMOP, SUM(AMOF) as AMOF, '
             'SUM(UMOP) as UMOP, SUM(UMP_ZW) as UMP_ZW, SUM(UMP_ZWD) as UMP_ZWD, SUM(UMP_SKR) as UMP_SKR, SUM(UMP_KON) as UMP_KON, SUM(UMP_CO) as UMP_CO, '
             'SUM(UMOF) as UMOF, SUM(UMF_ZW) as UMF_ZW, SUM(UMF_ZWD) as UMF_ZWD, SUM(UMF_SKR) as UMF_SKR, SUM(UMF_KON) as UMF_KON, SUM(UMF_CO) as UMF_CO '
   || _sql2+='SUM(WARP) as WARP, SUM(WARP_ZW) as WARP_ZW, SUM(WARP_ZWD) as WARP_ZWD, SUM(WARP_SKR) as WARP_SKR, SUM(WARP_KON) as WARP_KON, '
             'SUM(WARF) as WARF, SUM(WARF_ZW) as WARF_ZW, SUM(WARF_ZWD) as WARF_ZWD, SUM(WARF_SKR) as WARF_SKR, SUM(WARF_KON) as WARF_KON, '
             'SUM(WARD) as WARD, SUM(WARD_ZW) as WARD_ZW, SUM(WARD_ZWD) as WARD_ZWD, SUM(WARD_SKR) as WARD_SKR, SUM(WARD_KON) as WARD_KON, '
             'SUM(AMOP) as AMOP, SUM(AMOF) as AMOF, SUM(AMOD) as AMOD, '
             'SUM(UMOP) as UMOP, SUM(UMP_ZW) as UMP_ZW, SUM(UMP_ZWD) as UMP_ZWD, SUM(UMP_SKR) as UMP_SKR, SUM(UMP_KON) as UMP_KON, SUM(UMP_CO) as UMP_CO, '
             'SUM(UMOD) as UMOD, SUM(UMD_ZW) as UMD_ZW, SUM(UMD_ZWD) as UMD_ZWD, SUM(UMD_SKR) as UMD_SKR, SUM(UMD_KON) as UMD_KON, SUM(UMD_CO) as UMD_CO, '
             'SUM(UMOF) as UMOF, SUM(UMF_ZW) as UMF_ZW, SUM(UMF_ZWD) as UMF_ZWD, SUM(UMF_SKR) as UMF_SKR, SUM(UMF_KON) as UMF_KON, SUM(UMF_CO) as UMF_CO '
   ?};
   _sql2+={? _g=1 || 'FROM :_a GROUP BY ODDZIAL ORDER BY ODDZIAL'
          |? _g=2 || 'FROM :_a GROUP BY GR ORDER BY GR'
          ?};
   _tmp2:=sql(_sql2,_tmp);
   _tmp2
|| _tmp
?}



\sql_sr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: Zapytanie SQL do wydruku FST_O_WAAMUM.RPM
::       w wersji:
::       PAR_WYDR.RODZAJ : 1=analityczne, 2=syntetyczne,
::       RODZAJ2: 1=srodki wszystkie, 2=jednorazowo umorzone,
::       3=całkowicie umorzone, 4=skreślone, 5=nowe
::       MAP    : kod metody podatkowej
::       MAF    : kod metody finansowej
::       MAD    : kod metody dodatkowej
::       FROM_DE: data eksploatacji od
::       TO_DE  : data eksploatacji do
::       ODD    : j. ksiegowa
::       GRUPA  : grupa srodkow trwalych np. 100, 1**
::       WART_PN: wartosci srodkow: poczatkowe, narastajaco
::   WE: _a = 1 analitycznej
::       _a = 2 syntetycznej
::   WY:
::  OLD: \sql_sr/equery.fml
::----------------------------------------------------------------------------------------------------------------------
:: tablica na elementy zapytan
_sql:=obj_new(21);
_sql[2]:=_sql[21]:=_sql[1]:='select * from SRDO where 0=1';

_sql[3]:=' SRST.AMOP as AM_POD ';
_sql[4]:=' SRST.AMOF as AM_FIN ';

{? PAR_WYDR.SKRESL=0
|| _sql[7]:=' where SRST.GRP<>''E'' and ((SRSR.Z<>''T'' and SRSR.ZB<>''T'' and SRST.OKRO_F = :_e) '
            ' or (SRSR.Z=''T'' and SRST.ROK_F=:_g and ((SRSR.DES>to_date(:_c) and SRST.OKRO_F = :_e) '
            ' or (SRSR.DES<=to_date(:_c) and SRSR.DES >= OKRO_F.POCZ and SRSR.DES <= OKRO_F.KON) '
            ' or (SRSR.DES<=to_date(:_c) and SRSR.DES < to_date(:_f) and SRST.OKRO_F = :_e))) '
            ' or (SRST.ROK_F=:_g and SRSR.ZB=''T'' and SRST.R<>''S''))'
|| _sql[7]:=' where SRST.GRP<>''E'' and SRST.OKRO_F = :_e'
?};
{? PAR_WYDR.SKR_ONLY = 1
|| _sql[7]+=' and (SRSR.Z = ''T'' or SRSR.ZB = ''T'') '
?};

{? PAR_WYDR.ZAKRESDR = 0
|| _sql[8]:=''
|? PAR_WYDR.ZAKRESDR = 1
|| _sql[8]:=' (SRST.R = ''T'' or SRST.R = ''S'') '
|? PAR_WYDR.ZAKRESDR = 2
|| _sql[8]:=' SRST.R = ''N'''
?};

{? _sql[8]<>''
|| _sql[7]+=' and' + _sql[8]
?};

{? PAR_WYDR.RODZAJ=1 & PAR_WYDR.SRODEK<>''
|| _sql[7]:=' where SRST.REFERENCE = '''+PAR_WYDR.SRODEK+''''
?};

{? PAR_WYDR.MO_DO=2 & PAR_WYDR.SKRESL = 1
|| _sql[7]+=' and (SRSR.Z <> ''T'' or SRSR.DES >= to_date(:_c) )'
?};

:: bez środków zbytych do innej firmy z grupy kapitałowej
{? FINFO.SPR_GRP='T' & PAR_WYDR.SKRESL<>0 || _sql[7]+=' and SRST.R<>''S'' ' ?};

:: Zapytanie pomocnicze tworzace tabele TAB_SROD
{? FINFO.TOR_D='T'
||
_sql[9]:='select SRSR.REFERENCE AS SROD_R,SRST.REFERENCE as SROD_RS,CAST(SRSR.IDADD as STRING_TYPE) || SRSR.REFERENCE as SR_IDADD,SRST.NST,SRST.NRI,SRSR.DE,SRSR.DES,SRSR.NF,SRSR.U,SRSR.DZ,TAM.GR as GRUPA, SUBSTR(TAM.GR,1,1) as GR,ODD.OD as ODDZIAL,'
           + 'SRST.UMOF,SRST.UMOD,SRST.UMOP+SRSR.ZALP100 as UMOP,SRST.WARF,SRST.WARP,SRST.WARD,SRST.NETP-SRSR.ZALP100 as NETP,SRST.NETF,SRST.NETD,SRST.WARP as PNETP,SRST.WARF as PNETF,SRST.WARD as PNETD,SRST.WKP,SRST.WKF,SRST.WKD,SRST.WARP,'
           + 'OSOBA.NAZWISKO as NAZWISKO, OSOBA.PIERWSZE as IMIE,'
           + 'SRSR.Z, 0 as MOZ, 0 as ROZ, SRST.AMOP as ULGA, OKRO_F.POCZ as O_POCZ, OKRO_F.KON as O_KON, '
           + 'SRST.STAP as STAWKA,SRST.STAF as STAFIN,SRST.STAD as STADOD,SRST.WKF,SRST.WKP,SRST.WKD,UD_SKL.SYMBOL as JORG,SRSR.DOKPRZ as "NOT",SRST.R as RODZSROD,'
           + 'MA.K as MAP,MAF.K as MAF,MAD.K as MAD,MA.T as MAPT,MAF.T as MAFT,MAD.T as MADT,ZSKON.KOD as KONTOP,ZSKONF.KOD as KONTOF,ZSKOND.KOD as KONTOD,'
           + 'ZSKONF.REFERENCE as KONTOF_R,ZSKON.REFERENCE as KONTOP_R,'
           + 'PRZYCHOD.R as PRZYCH,ROZ.R as ROZCH,SRSR.Z,SRSR.ZB,SRST.S,SRSR.DES,SRSR.DOKSKR as NDS, CAST (null as DATE_TYPE) as D_SPRZ, SEZ.KOD as SCHEMAT, '
           + _sql[3] + ',' + _sql[4] +', SRST.AMOD as AM_DOD, SRST.AMOP as ACT_AMP, SRST.AMOF as ACT_AMF,  SRST.AMOD as ACT_AMD, '
           + ' ''T'' as AKTYWNY, MA.MP as MIE_OD, MA.MP as MIE_DO '
||
_sql[9]:='select SRSR.REFERENCE AS SROD_R,SRST.REFERENCE as SROD_RS,CAST(SRSR.IDADD as STRING_TYPE) || SRSR.REFERENCE as SR_IDADD,SRST.NST,SRST.NRI,SRSR.DE,SRSR.DES,SRSR.NF,SRSR.U,SRSR.DZ,TAM.GR as GRUPA, SUBSTR(TAM.GR,1,1) as GR,ODD.OD as ODDZIAL,'
           + 'SRST.UMOF,SRST.UMOP+SRSR.ZALP100 as UMOP,SRST.WARF,SRST.WARP,SRST.NETP-SRSR.ZALP100 as NETP,SRST.NETF,SRST.WARP as PNETP,SRST.WARF as PNETF,SRST.WKP,SRST.WKF,SRST.WARP,'
           + 'OSOBA.NAZWISKO as NAZWISKO, OSOBA.PIERWSZE as IMIE,'
           + 'SRSR.Z, 0 as MOZ,  0 as ROZ, SRST.AMOP as ULGA, OKRO_F.POCZ as O_POCZ, OKRO_F.KON as O_KON, '
           + 'SRST.STAP as STAWKA,SRST.STAF as STAFIN,SRST.WKF,SRST.WKP,UD_SKL.SYMBOL as JORG,SRSR.DOKPRZ as "NOT",SRST.R as RODZSROD,'
           + 'MA.K as MAP,MAF.K as MAF,MA.T as MAPT,MAF.T as MAFT,ZSKON.KOD as KONTOP,ZSKONF.KOD as KONTOF,'
           + 'ZSKONF.REFERENCE as KONTOF_R,ZSKON.REFERENCE as KONTOP_R,'
           + 'PRZYCHOD.R as PRZYCH,ROZ.R as ROZCH,SRSR.Z,SRSR.ZB,SRST.S,SRSR.DES,SRSR.DOKSKR as NDS, CAST (null as DATE_TYPE) as D_SPRZ, SEZ.KOD as SCHEMAT, '
           + _sql[3] + ',' + _sql[4] +', SRST.AMOP as ACT_AMP, SRST.AMOF as ACT_AMF, '
           + ' ''T'' as AKTYWNY, MA.MP as MIE_OD, MA.MP as MIE_DO '
?};
::{? PAR_WYDR.PODSUM = 3
::|| _sql[9]+=',TAB_TSR.TYP as TYPSROD '
::?};
{? PAR_WYDR.PR_GR || _sql[9]+=',TAM.NGS as NGS ' ?};
{? PAR_WYDR.RODZAJ=1 || _sql[9]+=',MOD_KTO as SYM_OT ' ?};
_sql[10]:=_sql[9] + ':_a ' + 'where 0 = 1';
_sql[9]+=':_a ' + _sql[7];

{? FINFO.TOR_D='T'
||
_sql[11]:='from SRST '
           + 'join SRSR using (SRST.SRSR, SRSR.REFERENCE) '
           + 'join TAM using (SRST.GR,TAM.REFERENCE) '
           + 'join ODD using (SRST.ODD,ODD.REFERENCE) '
           + 'join UD_SKL using (SRST.JORG,UD_SKL.REFERENCE) '
           + 'join MA using (SRST.MP,MA.REFERENCE) '
           + 'join MA as MAF using (SRST.MF,MAF.REFERENCE) '
           + 'join MA as MAD using (SRST.MD,MAD.REFERENCE) '
           + 'join ZSKON using (SRST.KONPOD,ZSKON.REFERENCE) '
           + 'join ZSKON as ZSKONF using (SRST.KONFIN,ZSKONF.REFERENCE) '
           + 'join ZSKON as ZSKOND using (SRST.KONDOD,ZSKOND.REFERENCE) '
           + 'join PRZYCHOD using (SRSR.PRZYCHOD, PRZYCHOD.REFERENCE) '
           + 'left join ROZ using (SRSR.ROZ, ROZ.REFERENCE) '
           + 'left join SEZ using(SRST.SCH_SEZ, SEZ.REFERENCE) '
           + 'left join OKRO_F using (SRST.OKRO_F, OKRO_F.REFERENCE) '
           + 'left join OSOBA using(SRST.OSOBA, OSOBA.REFERENCE) '

||
_sql[11]:='from SRST '
           + 'join SRSR using (SRST.SRSR, SRSR.REFERENCE) '
           + 'join TAM using (SRST.GR,TAM.REFERENCE) '
           + 'join ODD using (SRST.ODD,ODD.REFERENCE) '
           + 'join UD_SKL using (SRST.JORG,UD_SKL.REFERENCE) '
           + 'join MA using (SRST.MP,MA.REFERENCE) '
           + 'join MA as MAF using (SRST.MF,MAF.REFERENCE) '
           + 'join ZSKON using (SRST.KONPOD,ZSKON.REFERENCE) '
           + 'join ZSKON as ZSKONF using (SRST.KONFIN,ZSKONF.REFERENCE) '
           + 'join PRZYCHOD using (SRSR.PRZYCHOD, PRZYCHOD.REFERENCE) '
           + 'left join ROZ using (SRSR.ROZ, ROZ.REFERENCE) '
           + 'left join SEZ using(SRST.SCH_SEZ, SEZ.REFERENCE) '
           + 'left join OKRO_F using (SRST.OKRO_F, OKRO_F.REFERENCE) '
           + 'left join OSOBA using(SRST.OSOBA, OSOBA.REFERENCE) '

?};
TAB_SROD:=sql(_sql[9] , _sql[11], sql(_sql[2], PAR_WYDR.STAN_NA), PAR_WYDR.STAN_NA,0,SSTALE.AO,SSTALE.AR().POCZ_ROK,SSTALE.AR);
TMP_SROD:=sql(_sql[10], _sql[11], sql(_sql[2], PAR_WYDR.STAN_NA), PAR_WYDR.STAN_NA,0,SSTALE.AO,SSTALE.AR().POCZ_ROK,SSTALE.AR);

{? exec('if_ok','fst', 'TAB_SROD')
  || _wy:=1;
     _ind:=TAB_SROD.ndx_tmp(,1,'SROD_R',,)
  || _ind:='';
     _wy:=0
?};

:: aktualizacja ulgi inwestycyjnej
{? TAB_SROD.first()
|| SRZF.index('SRODEKU');
   {! |?
      SRSR.cntx_psh();
      SRSR.prefix();
      {? SRSR.seek(TAB_SROD.SROD_R) || _ref:=SRSR.ref() || _ref:=null ?};
      SRSR.cntx_pop();
      SRZF.prefix(_ref,'U');
      TAB_SROD.ULGA:=0;
      {? SRZF.first()
      || {! |?
            TAB_SROD.ULGA+=SRZF.WARP;
            SRZF.next()
         !}
      ?};
      TAB_SROD.put();
      TAB_SROD.next()
   !}
?};

:: aktualizacja symbolu dokumentu przyjęcia środka do eksploatacji
{? PAR_WYDR.RODZAJ=1 & TAB_SROD.first()
|| SRDO.cntx_psh();
   SRDO.index('SRODZAJ');
   {! |?
      _ref:={? SRSR.seek(TAB_SROD.SROD_R,ref_name(TAB_SROD.SROD_R)) || SRSR.ref() || null() ?};
      SRDO.prefix();
      SRDO.prefix(_ref,'P');
      TAB_SROD.SYM_OT:={? SRDO.first() || SRDO.SYMBOL || ' - ' ?};
      TAB_SROD.put();
      TAB_SROD.next()
   !};
   SRDO.cntx_pop()
?};

{? TAB_SROD.first()
|| {! |?
:: Aktualizacja danych jeżeli bieżący okres to okres obowiązywania skreślenia lub późniejszy.
:: Aktualizacja amortyzacji bieżącej w przypadku środków skreślonych w poprzednich okresach bieżącego roku.
:: Aktualizacja miesiąca obowiązywania skreślenia.
      SRDO.cntx_psh(); SRSR.cntx_psh(); OKRO_F.cntx_psh();
      SRSR.prefix(); SRDO.prefix(); OKRO_F.prefix();
      {? SRSR.seek(TAB_SROD.SROD_R,ref_name(TAB_SROD.SROD_R))
      || {? SRSR.DOKSKR<>null
         || SRSR.DOKSKR();
            {? PAR_WYDR.MO_DO=1 & PAR_WYDR.SKRESL = 1 & TAB_SROD.Z='T'
            || TAB_SROD.MOZ:=SRSR.DOKSKR().OKRO_F().OES;
               TAB_SROD.ROZ:=SRSR.DOKSKR().OKRO_F().RES;
               TAB_SROD.put()
            ?};
            {? TAB_SROD.Z='T' & TAB_SROD.DES<>date(0,0,0) & PAR_WYDR.STAN_NA~1>=TAB_SROD.DES~1
            || {? SRSR.DOKSKR().OKRO_F().RES<SSTALE.AO().RES
                  | (SRSR.DOKSKR().OKRO_F().RES=SSTALE.AO().RES & SRSR.DOKSKR().OKRO_F().OES<=SSTALE.AO().OES)
                  | (SRSR.DOKSKR().DW<=PAR_WYDR.STAN_NA & PAR_WYDR.MO_DO<>1)
               || TAB_SROD.UMOP:=TAB_SROD.UMOP+SRSR.DOKSKR().UMOP;
                  TAB_SROD.NETP:=-TAB_SROD.UMOP;
                  {? TAB_SROD.UMOP<0 || TAB_SROD.UMOP:=0 ?};
                  {? TAB_SROD.NETP>0 || TAB_SROD.NETP:=0 ?};
                  TAB_SROD.PNETP:=TAB_SROD.WARP:=0;
                  TAB_SROD.UMOF:=TAB_SROD.UMOF+SRSR.DOKSKR().UMOF;
                  TAB_SROD.NETF:=-TAB_SROD.UMOF;
                  TAB_SROD.PNETF:=TAB_SROD.WARF:=0;
                  {? TAB_SROD.UMOF<0 || TAB_SROD.UMOF:=0 ?};
                  {? TAB_SROD.NETF>0 || TAB_SROD.NETF:=0 ?};
                  {? FINFO.TOR_D='T'
                  || TAB_SROD.UMOD:=TAB_SROD.UMOD+SRSR.DOKSKR().UMOD;
                     TAB_SROD.NETD:=-TAB_SROD.UMOD;
                     {? TAB_SROD.UMOD<0 || TAB_SROD.UMOD:=0 ?};
                     {? TAB_SROD.NETD>0 || TAB_SROD.NETD:=0 ?};
                     TAB_SROD.PNETD:=TAB_SROD.WARD:=0
                  ?};
                  {? PAR_WYDR.MO_DO=1 |
                     ((((SRSR.DOKSKR().DW~2)<(PAR_WYDR.STAN_NA~2) & ((SRSR.DOKSKR().DW~1)=(PAR_WYDR.STAN_NA~1)))
                        | ((SRSR.DOKSKR().DW~1)<(PAR_WYDR.STAN_NA~1))) & PAR_WYDR.MO_DO<>1)
                  || TAB_SROD.ACT_AMP:=0; TAB_SROD.ACT_AMF:=0;
                     {? FINFO.TOR_D='T' || TAB_SROD.ACT_AMD:=0 ?}
                  ?};
                  TAB_SROD.put()
               ?}
            ?}
         ?};

:: Aktualizacja dla dokumentów wartościowych jeżeli obowiązuje parametr wg. daty obowiązywania dokumentu (zamiast miesiąca)
:: Rozszerzono warunek o akutalizację zestawów środków dla parametru wg. miesiąca obowiązywania dokumentu
         {? PAR_WYDR.MO_DO=2 & SRSR.DOKSKR=null |  PAR_WYDR.MO_DO=1 & SRSR.GRP='T'
         || SRDO.index('SRODZAJ');
            SRDO.prefix(SRSR.ref(),'W');
            {? SRDO.first()
            || {! |?
                  {? SRDO.Z<>'T' & SRDO.OKRO_F<>SSTALE.AO & SRDO.DO>=SSTALE.AO().POCZ & SRDO.DO<=SSTALE.AO().KON
                     | (SRDO.Z='T' &  PAR_WYDR.MO_DO=1 & SRSR.GRP='T')
                  || TAB_SROD.WARP+=SRDO.WARP;
                     TAB_SROD.WARF+=SRDO.WARF;
                     TAB_SROD.UMOP+=SRDO.UMOP;
                     TAB_SROD.UMOF+=SRDO.UMOF;
                     TAB_SROD.NETP:=TAB_SROD.WARP-TAB_SROD.UMOP;
                     TAB_SROD.NETF:=TAB_SROD.WARF-TAB_SROD.UMOF;
                     {? FINFO.TOR_D='T'
                     || TAB_SROD.WARD+=SRDO.WARD;
                        TAB_SROD.UMOD+=SRDO.UMOD;
                        TAB_SROD.NETD:=TAB_SROD.WARD-TAB_SROD.UMOD
                     ?};
                     TAB_SROD.put()
                  ?};
                  SRDO.next()
               !}
            ?}
         ?}
      ?};
      OKRO_F.cntx_pop(); SRSR.cntx_pop(); SRDO.cntx_pop();
      TAB_SROD.next()
   !}
?};

:: aktualizacja amortyzacji narastająco
{? TAB_SROD.first()
|| {? FINFO.TOR_D='T'
   ||
      _am:=sql('select SRST.SRSR as SROD_R, sum(SRST.AMOP) as AM_POD, sum(SRST.AMOF) as AM_FIN, sum(SRST.AMOD) as AM_DOD from SRST '
               +'where SRST.ROK = '+$SSTALE.AO().RES+' and SRST.OKRES <= '+$SSTALE.AO().OES
               +' group by SRST.SRSR order by SROD_R')
   ||
      _am:=sql('select SRST.SRSR as SROD_R, sum(SRST.AMOP) as AM_POD, sum(SRST.AMOF) as AM_FIN from SRST '
               +'where SRST.ROK = '+$SSTALE.AO().RES+' and SRST.OKRES <= '+$SSTALE.AO().OES
               +' group by SRST.SRSR order by SROD_R')
   ?};
   {? _am.first()
   || {! |?
         _am.prefix(TAB_SROD.SROD_R);
         {? _am.first()
         || TAB_SROD.AM_POD:=_am.AM_POD;
            TAB_SROD.AM_FIN:=_am.AM_FIN;
            {? FINFO.TOR_D='T' || TAB_SROD.AM_DOD:=_am.AM_DOD ?}
         || TAB_SROD.AM_POD:=0;
            TAB_SROD.AM_FIN:=0;
            {? FINFO.TOR_D='T' || TAB_SROD.AM_DOD:=0 ?}
         ?};
         TAB_SROD.put();
         TAB_SROD.next()
      !}
   ?}
?};

:: obsługa środków sprzedanych w ramach grupy kapitałowej
{? TAB_SROD.first()
|| _idx:=SRSFIRMA.ndx_tmp(,1,'SRSR_Z',,);
   SRSFIRMA.index(_idx);
   {! |?
      {? TAB_SROD.ZB='T'
      || SRSFIRMA.prefix(':'+TAB_SROD.SR_IDADD);
         {? SRSFIRMA.first()
         || {? SRSFIRMA.DATA_Z >= TAB_SROD.O_POCZ & SRSFIRMA.DATA_Z <= TAB_SROD.O_KON
            || TAB_SROD.D_SPRZ:=SRSFIRMA.DATA_Z;
               TAB_SROD.put();
               TAB_SROD.next()
            || TAB_SROD.del()
            ?}
         || TAB_SROD.next()
         ?}
      || TAB_SROD.next()
      ?}
   !}
?};

:: Warunki do zapytania
{? _wy = 1
|| _sql[16] := ' where';
     {? PAR_WYDR.MAP <> null
   || {? _sql[16] <> ' where' || _sql[16] += ' and' ?};
      _sql[16] += ' MAP = '':_d''';
      _par3:=PAR_WYDR.MAP().K
   || _par3:=''
   ?};

   {? PAR_WYDR.MAF <> null
   || {? _sql[16] <> ' where' || _sql[16] += ' and' ?};
      _sql[16]+=' MAF = '':_e''';
      _par4:=PAR_WYDR.MAF().K
   || _par4:=''
   ?};

    {? PAR_WYDR.MAD <> null
   || {? _sql[16] <> ' where' || _sql[16] += ' and' ?};
      _sql[16]+=' MAD = '':_k''';
      _par5:=PAR_WYDR.MAD().K
   || _par5:=''
   ?};

   {? PAR_WYDR.FROM_DE <> date(0,0,0) ||
      {? _sql[16] <> ' where' || _sql[16] += ' and' ?};
      _sql[16]+=' DE >= to_date(:_f)'
   ?};

   {? PAR_WYDR.TO_DE <> date(0,0,0) ||
      {? _sql[16] <> ' where' || _sql[16] += ' and' ?};
      _sql[16]+=' DE <= to_date(:_g)'
   ?};

   {? PAR_WYDR.ODD <> null ||
   {? _sql[16] <> ' where' || _sql[16] += ' and' ?};
      _sql[16]+=' ODDZIAL = '':_b'''
   ?};

   {? PAR_WYDR.JORG <> null ||
   {? _sql[16] <> ' where' || _sql[16] += ' and' ?};
      _sql[16]+=' JORG = '':_h'''
   ?};

   _grupa:='';
   {? PAR_WYDR.WAR_GR = 1
   ||
      {? |PAR_WYDR.GRUPA <> ''
      || _lok:=|PAR_WYDR.GRUPA * '*';
         {? _lok
         || _lok-=1; _grupa:=(_lok+|PAR_WYDR.GRUPA) + '%'
         || _grupa:=|PAR_WYDR.GRUPA + '%'
         ?};
         {? _sql[16] <> ' where' || _sql[16]+=' and' ?};
         _sql[16]+=' GRUPA like '':_c'''
      ?}

   |? PAR_WYDR.WAR_GR = 2 & (|PAR_WYDR.GRUPA_OD <> '' | |PAR_WYDR.GRUPA_DO <> '')
   ||
      {? _sql[16] <> ' where' || _sql[16]+=' and' ?};
      {? |PAR_WYDR.GRUPA_OD <> '' & |PAR_WYDR.GRUPA_DO <> ''
      || _sql[16]+=' GRUPA BETWEEN '':_i'' and '':_j'''
      |? |PAR_WYDR.GRUPA_OD <> '' & |PAR_WYDR.GRUPA_DO = ''
      || _sql[16]+=' GRUPA >= '':_i'''
      |? |PAR_WYDR.GRUPA_OD = '' & |PAR_WYDR.GRUPA_DO <> ''
      || _sql[16]+=' GRUPA <= '':_j'''
      ?}
   |? PAR_WYDR.WAR_GR = 3
   || {? _sql[16] <> ' where' || _sql[16] += ' and' ?};
      _sql[16]:=exec('get_grupy','fst',_sql[16],'GRUPA')
   ?};

   {? PAR_WYDR.UMO_ONLY = 1
   || {? _sql[16] <> ' where' || _sql[16] += ' and' ?};
      _sql[16]+=' NETP <= 0 and NETF <= 0'
   ?};

   {? PAR_WYDR.PRZYCHOD <> null
   || {? _sql[16] <> ' where' || _sql[16]+=' and' ?};
      _sql[16]+=' PRZYCH = ''' + PAR_WYDR.PRZYCHOD().R + ''''
   ?};

   {? PAR_WYDR.ROZCHOD <> null
   || {? _sql[16] <> ' where' || _sql[16]+=' and' ?};
      _sql[16]+=' ROZCH = ''' + PAR_WYDR.ROZCHOD().R + ''''
   ?};

   {? PAR_WYDR.MO_DO=1 & PAR_WYDR.SKRESL=1
   || {? _sql[16] <> ' where' || _sql[16] += ' and' ?};
      _sql[16]+=' (Z <> ''T'' or (Z = ''T'' and ROZ = '+$SSTALE.AO().RES+' and MOZ >= '
               +$SSTALE.AO().OES +') or (Z = ''T'' and ROZ > '+$SSTALE.AO().RES+'))'
   ?};

   {? _sql[16] = ' where' || _sql[16] := '' ?};

:: Sortowanie
  {? _a = 1
  || {? PAR_WYDR.PODSUM = 2
     || _sql[17]:=' order by ODDZIAL, GRUPA, NRI'
     |? PAR_WYDR.PODSUM = 4
     || _sql[17]:=' order by ODDZIAL, JORG, GRUPA, NRI'
     || _sql[17]:=' order by GRUPA, NRI'
     ?}
  |? _a = 2
  || {? PAR_WYDR.PODSUM = 1
     || _sql[17]:=' order by GR'
     |? PAR_WYDR.PODSUM = 2
     || _sql[17]:=' order by ODDZIAL'
     |? PAR_WYDR.PODSUM = 4
     || _sql[17]:=' order by ODDZIAL, JORG'
     ?}
  ?}; {? _a = 1
  || {? PAR_WYDR.PODSUM = 2
     || _sql[17]:=' order by ODDZIAL, GRUPA, NRI'
     |? PAR_WYDR.PODSUM = 4
     || _sql[17]:=' order by ODDZIAL, JORG, GRUPA, NRI'
     || _sql[17]:=' order by GRUPA, NRI'
     ?}
  |? _a = 2
  || {? PAR_WYDR.PODSUM = 1
     || _sql[17]:=' order by GR'
     |? PAR_WYDR.PODSUM = 2
     || _sql[17]:=' order by ODDZIAL'
     |? PAR_WYDR.PODSUM = 4
     || _sql[17]:=' order by ODDZIAL, JORG'
     ?}
  ?};

:: Zapytanie oparte na tabeli tymczasowej TAB_SROD
  {? _a = 1
  || _sql[18]:='select * from :_a '
               + _sql[16] + ' '
               + _sql[17];
     exec('test_zakresu','fst');
     TAB_SQL:=sql(_sql[18], TAB_SROD, PAR_WYDR.ODD().OD, _grupa, _par3, _par4, PAR_WYDR.FROM_DE, PAR_WYDR.TO_DE, PAR_WYDR.JORG().SYMBOL, PAR_WYDR.GRUPA_OD, PAR_WYDR.GRUPA_DO, _par5)
  |? _a = 2
  || {? PAR_WYDR.PODSUM <= 1
     || {? PAR_WYDR.PR_GR
        || _sql[19]:='select GRUPA, NGS, ';
           _sql[20]:=' group by GRUPA, NGS ';
           _sql[17]:=' order by GRUPA, NGS '
        || _sql[19]:='select GR, ';
           _sql[20]:=' group by GR';
           _sql[17]:=' order by GR'
        ?}
     |? PAR_WYDR.PODSUM = 2
     || _sql[19]:='select ODDZIAL, ';
        _sql[20]:=' group by ODDZIAL'
     |? PAR_WYDR.PODSUM = 4
     || _sql[19]:='select JORG, ODDZIAL, ';
        _sql[20]:=' group by ODDZIAL, JORG'
     ?};
     {? FINFO.TOR_D='T'
     || _sql[18]:=_sql[19]
                  + 'sum(WARP) as SUM_WARP, sum(UMOP) as SUM_UMOP, sum(NETP) as SUM_NETP, '
                  + 'sum(WARF) as SUM_WARF, sum(UMOF) as SUM_UMOF, sum(NETF) as SUM_NETF, '
                  + 'sum(WARD) as SUM_WARD, sum(UMOD) as SUM_UMOD, sum(NETD) as SUM_NETD, '
                  + 'sum(AM_POD) as SUM_AMP, sum(AM_FIN) as SUM_AMF, sum(AM_DOD) as SUM_AMD, sum(ACT_AMP) as SUM_AMPA, sum(ACT_AMF) as SUM_AMFA, sum(ACT_AMD) as SUM_AMDA,'
                  + 'sum(ULGA) as SUM_ULGA, sum(PNETP) as SUM_PNEP, sum(PNETF) as SUM_PNEF, sum(PNETD) as SUM_PNED '
                  + 'from :_a '
                  + _sql[16]
                  + _sql[20]
                  + _sql[17]
     ||_sql[18]:=_sql[19]
                 + 'sum(WARP) as SUM_WARP, sum(UMOP) as SUM_UMOP, sum(NETP) as SUM_NETP, '
                 + 'sum(WARF) as SUM_WARF, sum(UMOF) as SUM_UMOF, sum(NETF) as SUM_NETF, '
                 + 'sum(AM_POD) as SUM_AMP, sum(AM_FIN) as SUM_AMF, sum(ACT_AMP) as SUM_AMPA, sum(ACT_AMF) as SUM_AMFA, '
                 + 'sum(ULGA) as SUM_ULGA, sum(PNETP) as SUM_PNEP, sum(PNETF) as SUM_PNEF '
                 + 'from :_a '
                 + _sql[16]
                 + _sql[20]
                 + _sql[17]
     ?};
     exec('test_zakresu','fst');
     TAB_SQL:=sql(_sql[18], TAB_SROD, PAR_WYDR.ODD().OD, _grupa, _par3, _par4, PAR_WYDR.FROM_DE, PAR_WYDR.TO_DE,  PAR_WYDR.JORG().SYMBOL, PAR_WYDR.GRUPA_OD, PAR_WYDR.GRUPA_DO)
  ?};

  {? exec('if_ok','fst', 'TAB_SQL',1)
  || _wy:=1
  || _wy:=0
  ?}
?};

{? var_pres('TAB_SROD')>0 || TAB_SROD.ndx_drop(_ind); obj_del(TAB_SROD)
|? var_pres('TAB_SROD')=0 || &TAB_SROD
?};
{? var_pres('TMP_SROD')>0 || obj_del(TMP_SROD)
|? var_pres('TMP_SROD')=0 || &TMP_SROD
   ?};
_wy


\prepare_okonta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przygotowanie danych dla wydruku fst_o_okonta.rpm
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.DANE=1
|| SRSW.index('OKR_P')
|? PAR_WYDR.DANE=2
|| SRSW.index('OKR_F')
|? PAR_WYDR.DANE=3
|| SRSW.index(SRSW.ndx_tmp('',1,'OKRO_F',,0, 'KONDOD',,0))
?};
{? PAR_WYDR.RODZAJ=1 & PAR_WYDR.KONTA=1
|| SRSW.prefix(SSTALE.AO);
   {? SRSW.first()
   || {! |?
         {? exec('srsw_druk','fst')
         || TAB_SQL.blank();
            TAB_SQL.ODDZIAL:=SRSW.SRST().ODD().OD;
            TAB_SQL.NRI:=SRSW.SRST().NRI;
            TAB_SQL.KONTO:={? PAR_WYDR.DANE=1
                           || SRSW.KONPOD().KOD
                           |? PAR_WYDR.DANE=2
                           || SRSW.KONFIN().KOD
                           |? PAR_WYDR.DANE=3
                           || SRSW.KONDOD().KOD
                           ?};
            TAB_SQL.NST:=SRSW.SRST().NST;
            TAB_SQL.JORG:=SRSW.SRST().JORG().SYMBOL;
            TAB_SQL.GRUPA:=SRSW.SRST().GR().GR;
            TAB_SQL.AMORT:={? PAR_WYDR.DANE=1
                           || SRSW.AMOP$2
                           |? PAR_WYDR.DANE=2
                           || SRSW.AMOF$2
                           |? PAR_WYDR.DANE=3
                           || SRSW.AMOD$2
                           ?};
            TAB_SQL.AMORTN:=0;
::          exec('sum_srsw_amor','fst',SRSW.SRZF,SSTALE.AO().RES,SSTALE.AO().OES,{? PAR_WYDR.DANE=1 || 'P' || 'F' ?},1);
            TAB_SQL.NETTO:={? PAR_WYDR.DANE=1
                           || SRSW.NETP$2
                           |? PAR_WYDR.DANE=2
                           || SRSW.NETF$2
                           |? PAR_WYDR.DANE=3
                           || SRSW.NETD$2
                           ?};
            TAB_SQL.PODSTAWA:={? PAR_WYDR.DANE=1
                              || SRSW.WARP$2
                              |? PAR_WYDR.DANE=2
                              || SRSW.WARF$2
                              |? PAR_WYDR.DANE=3
                              || SRSW.WARD$2
                              ?};
            TAB_SQL.UMORZENI:={? PAR_WYDR.DANE=1
                              || SRSW.UMOP$2
                              |? PAR_WYDR.DANE=2
                              || SRSW.UMOF$2
                              |? PAR_WYDR.DANE=3
                              || SRSW.UMOD$2
                              ?};
            TAB_SQL.PROCENT:=100;
            TAB_SQL.DE:=SRSW.SRST().SRSR().DE;
            TAB_SQL.add()
         ?};
         SRSW.next()
      !}
   ?}
|? PAR_WYDR.RODZAJ=1 & PAR_WYDR.KONTA>=2
|| {? PAR_WYDR.DANE=1 || SRSW.index('OKR_P') || SRSW.index('OKR_F') ?};
   SRSW.prefix(SSTALE.AO);
   {? SRSW.first()
   || {! |?
         {? exec('srsw_druk','fst')
         || KKOSZ.index('KONTO');
            KKOSZ.prefix({? PAR_WYDR.DANE=1
                         || SRSW.KONPOD
                         |? PAR_WYDR.DANE=2
                         || SRSW.KONFIN
                         |? PAR_WYDR.DANE=3
                         || SRSW.KONDOD
                         ?});

            _suma_k:=0;
            _suma_t:={? PAR_WYDR.DANE=1 || SRSW.AMOP$2
                     |? PAR_WYDR.DANE=2 || SRSW.AMOF$2
                     |? PAR_WYDR.DANE=3 || SRSW.AMOD$2
                     ?};
            _suma_p:=0;
            _max_am:=0;
            _max_ref:=null;

            {? KKOSZ.first()
            || {! |?
                  TAB_SQL.blank();
                  TAB_SQL.ODDZIAL:=SRSW.SRST().ODD().OD;
                  TAB_SQL.NRI:=SRSW.SRST().NRI;
                  TAB_SQL.KONTO:=KKOSZ.KONTO().SYM;
                  TAB_SQL.NST:=SRSW.SRST().NST;
                  TAB_SQL.JORG:=SRSW.SRST().JORG().SYMBOL;
                  TAB_SQL.GRUPA:=SRSW.SRST().GR().GR;
                  TAB_SQL.AMORT:=((KKOSZ.PR*({? PAR_WYDR.DANE=1
                                             || SRSW.AMOP$2
                                             |? PAR_WYDR.DANE=2
                                             || SRSW.AMOF$2
                                             |? PAR_WYDR.DANE=3
                                             || SRSW.AMOD$2
                                             ?}))/100)$2;
                  TAB_SQL.AMORTN:=0;
                  TAB_SQL.NETTO:=((KKOSZ.PR*({? PAR_WYDR.DANE=1
                                             || SRSW.NETP$2
                                             |? PAR_WYDR.DANE=2
                                             || SRSW.NETF$2
                                             |? PAR_WYDR.DANE=3
                                             || SRSW.NETD$2
                                             ?}))/100)$2;
                  TAB_SQL.PODSTAWA:={? PAR_WYDR.DANE=1
                                    || SRSW.WARP$2
                                    |? PAR_WYDR.DANE=2
                                    || SRSW.WARF$2
                                    |? PAR_WYDR.DANE=3
                                    || SRSW.WARD$2
                                    ?};
                  TAB_SQL.UMORZENI:={? PAR_WYDR.DANE=1
                                    || SRSW.UMOP$2
                                    |? PAR_WYDR.DANE=2
                                    || SRSW.UMOF$2
                                    |? PAR_WYDR.DANE=3
                                    || SRSW.UMOD$2
                                    ?};
                  TAB_SQL.PROCENT:=KKOSZ.PR;
                  TAB_SQL.DE:=SRSW.SRST().SRSR().DE;
                  TAB_SQL.add();

                  _suma_k+=TAB_SQL.AMORT;
                  _suma_p+=TAB_SQL.PROCENT;
                  {? _max_am<TAB_SQL.AMORT
                  || _max_am:=TAB_SQL.AMORT;
                     _max_ref:=TAB_SQL.ref()
                  ?};

                  KKOSZ.next()
               !};

::             wyrównanie amortyzacji jeżeli wystąpiły groszowe różnice.
               {? _suma_p=100 & _suma_k<>_suma_t
               || _diff:=_suma_t-_suma_k;
                  {? _max_ref<>null
                  || TAB_SQL.cntx_psh();
                     {? TAB_SQL.seek(_max_ref)
                     || TAB_SQL.AMORT+=_diff;
                        TAB_SQL.put()
                     ?};
                     TAB_SQL.cntx_pop()
                  ?}
               ?}

            ?}
         ?};
         SRSW.next()
      !}
   ?}
|? PAR_WYDR.RODZAJ=2 & PAR_WYDR.KONTA=1
|| SRSW.prefix(SSTALE.AO);
   {? SRSW.first()
   || {! |?
         {? exec('srsw_druk','fst')
         || _konto:={? PAR_WYDR.DANE=1
                    || SRSW.KONPOD().KOD
                    |? PAR_WYDR.DANE=2
                    || SRSW.KONFIN().KOD
                    |? PAR_WYDR.DANE=3
                    || SRSW.KONDOD().KOD
                    ?};
            TAB_SQL.prefix(_konto,);
            {? TAB_SQL.first() || _add:=0 || _add:=1 ?};
            {? _add
            || TAB_SQL.blank();
               TAB_SQL.KONTO:=_konto;
               TAB_SQL.AMORT:={? PAR_WYDR.DANE=1
                              || SRSW.AMOP$2
                              |? PAR_WYDR.DANE=2
                              || SRSW.AMOF$2
                              |? PAR_WYDR.DANE=3
                              || SRSW.AMOD$2
                              ?};
               TAB_SQL.add()
            || TAB_SQL.AMORT+={? PAR_WYDR.DANE=1
                              || SRSW.AMOP$2
                              |? PAR_WYDR.DANE=2
                              || SRSW.AMOF$2
                              |? PAR_WYDR.DANE=3
                              || SRSW.AMOD$2
                              ?};
               TAB_SQL.put()
            ?}
         ?};
         SRSW.next()
      !};
      TAB_SQL.prefix()
   ?}
|? PAR_WYDR.RODZAJ=2 & PAR_WYDR.KONTA=2
|| SRSW.prefix(SSTALE.AO);
   {? SRSW.first()
   || {! |?
         {? exec('srsw_druk','fst')
         || KKOSZ.index('KONTO');
            KKOSZ.prefix({? PAR_WYDR.DANE=1
                         || SRSW.KONPOD
                         |? PAR_WYDR.DANE=2
                         || SRSW.KONFIN
                         |? PAR_WYDR.DANE=3
                         || SRSW.KONDOD
                         ?});

            _suma_k:=0;
            _suma_t:={? PAR_WYDR.DANE=1 || SRSW.AMOP$2
                     |? PAR_WYDR.DANE=2 || SRSW.AMOF$2
                     |? PAR_WYDR.DANE=3 || SRSW.AMOD$2
                     ?};
            _suma_p:=0;
            _max_am:=0;
            _max_ref:=null;

            {? KKOSZ.first()
            || {! |?
                  TAB_SQL.prefix(KKOSZ.KONTO().SYM,);
                  {? TAB_SQL.first() || _add:=0 || _add:=1 ?};
                  {? _add
                  || TAB_SQL.blank();
                     TAB_SQL.KONTO:=KKOSZ.KONTO().SYM;
                     _amort:=((KKOSZ.PR*({? PAR_WYDR.DANE=1
                                                || SRSW.AMOP$2
                                                |? PAR_WYDR.DANE=2
                                                || SRSW.AMOF$2
                                                |? PAR_WYDR.DANE=3
                                                || SRSW.AMOD$2
                                                ?}))/100)$2;
                     TAB_SQL.AMORT:=_amort;
                     TAB_SQL.add()
                  || _amort:=((KKOSZ.PR*({? PAR_WYDR.DANE=1
                                                || SRSW.AMOP$2
                                                |? PAR_WYDR.DANE=2
                                                || SRSW.AMOF$2
                                                |? PAR_WYDR.DANE=3
                                                || SRSW.AMOD$2
                                                ?}))/100)$2;
                     TAB_SQL.AMORT+=_amort;
                     TAB_SQL.put()
                  ?};

                  _suma_k+=_amort;
                  _suma_p+=KKOSZ.PR;
                  {? _max_am<_amort
                  || _max_am:=_amort;
                     _max_ref:=TAB_SQL.ref()
                  ?};

                  KKOSZ.next()
               !};

::             wyrównanie amortyzacji jeżeli wystąpiły groszowe różnice.
               {? _suma_p=100 & _suma_k<>_suma_t
               || _diff:=_suma_t-_suma_k;
                  {? _max_ref<>null
                  || TAB_SQL.cntx_psh();
                     TAB_SQL.prefix();
                     {? TAB_SQL.seek(_max_ref)
                     || TAB_SQL.AMORT+=_diff;
                        TAB_SQL.put()
                     ?};
                     TAB_SQL.cntx_pop()
                  ?}
               ?}

            ?}
         ?};
         SRSW.next()
      !};
      TAB_SQL.prefix()
   ?}
?}


\sql_bo_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: Zapytanie SQL do wydruku FST_O_WARTBO.RPM, w wersji analitycznej
::   WY: 1/0
::  OLD: \sql_bo_1/equery.fml
::----------------------------------------------------------------------------------------------------------------------
_zakres:={? PAR_WYDR.ZAKRESDR = 0
         || _zakres:=''
         |? PAR_WYDR.ZAKRESDR = 1
         || _zakres:=' and SRST.R = ''T'''
         |? PAR_WYDR.ZAKRESDR = 2
         || _zakres:=' and SRST.R = ''N'''
         ?};
_warunek:='where SRST.KIND = ''T'' and SRST.R<>''S'' and SRST.OKRO_F = :_e' + _zakres;

_warun2:='';
_grupa:='';
{? PAR_WYDR.WAR_GR = 1
|| {? |PAR_WYDR.GRUPA <> ''
   || _lok:=|PAR_WYDR.GRUPA * '*';
      {? _lok
      || _lok-=1; _grupa:=(_lok+|PAR_WYDR.GRUPA)+'%'
      || _grupa:=|PAR_WYDR.GRUPA + '%'
      ?};
      _warun2+=' GRUPA LIKE '':_d'''
   ?}
|? PAR_WYDR.WAR_GR = 2 & (|PAR_WYDR.GRUPA_OD <> '' | |PAR_WYDR.GRUPA_DO <> '')
|| {? |PAR_WYDR.GRUPA_OD <> '' & |PAR_WYDR.GRUPA_DO <> ''
   || _warun2+=' GRUPA BETWEEN '':_e'' and '':_f'''
   |? |PAR_WYDR.GRUPA_OD <> '' & |PAR_WYDR.GRUPA_DO = ''
   || _warun2+=' GRUPA >= '':_e'''
   |? |PAR_WYDR.GRUPA_OD = '' & |PAR_WYDR.GRUPA_DO <> ''
   || _warun2+=' GRUPA <= '':_f'''
   ?}
|? PAR_WYDR.WAR_GR = 3 & PAR_WYDR.WYB_GRUP<>''
|| _warun2:=exec('get_grupy','fst','','GRUPA')
?};

{? FINFO.TOR_D<>'T'
|| _query:='select SRST.REFERENCE as SROD_R, SRST.NST, SRST.NRI, SRSR.DE, SRSR.DES AS DATA_SKR, TAM.GR AS GRUPA, SUBSTR(TAM.GR,1,1) AS GR, ODD.OD AS ODDZIAL, '
         + 'SRST.UMOF, (SRST.UMOP+SRSR.ZALP100) as UMOP, SRST.WARF, SRST.WARP, SRST.NETF, SRST.NETP, SRST.STAP as STAWKA, SRST.STAF as STAFIN, UD_SKL.SYMBOL AS JORG, '
         + 'MA.K AS MAP, MAF.K AS MAF, ZSKON.KOD AS KONTOP, ZSKONF.KOD AS KONTOF '
         + 'from SRST '
         + 'join SRSR using (SRST.SRSR, SRSR.REFERENCE)'
         + 'join TAM using (SRST.GR,TAM.REFERENCE) '
         + 'join ODD using (SRST.ODD,ODD.REFERENCE) '
         + 'join UD_SKL using (SRST.JORG,UD_SKL.REFERENCE) '
         + 'join MA using (SRST.MP,MA.REFERENCE) '
         + 'join MA AS MAF using (SRST.MF,MAF.REFERENCE) '
         + 'join ZSKON using (SRST.KONPOD,ZSKON.REFERENCE) '
         + 'join ZSKON AS ZSKONF using (SRST.KONFIN,ZSKONF.REFERENCE) '
         + _warunek
|| _query:='select SRST.REFERENCE as SROD_R, SRST.NST, SRST.NRI, SRSR.DE, SRSR.DES AS DATA_SKR, TAM.GR AS GRUPA, SUBSTR(TAM.GR,1,1) AS GR, ODD.OD AS ODDZIAL, '
         + 'SRST.UMOF, SRST.UMOD, (SRST.UMOP+SRSR.ZALP100) as UMOP, SRST.WARF, SRST.WARD, SRST.WARP, SRST.NETF, SRST.NETD, SRST.NETP, SRST.STAP as STAWKA, SRST.STAF as STAFIN, SRST.STAD as STADOD, UD_SKL.SYMBOL AS JORG, '
         + 'MA.K AS MAP, MAF.K AS MAF, MAD.K AS MAD, ZSKON.KOD AS KONTOP, ZSKONF.KOD AS KONTOF, ZSKOND.KOD AS KONTOD '
         + 'from SRST '
         + 'join SRSR using (SRST.SRSR, SRSR.REFERENCE)'
         + 'join TAM using (SRST.GR,TAM.REFERENCE) '
         + 'join ODD using (SRST.ODD,ODD.REFERENCE) '
         + 'join UD_SKL using (SRST.JORG,UD_SKL.REFERENCE) '
         + 'join MA using (SRST.MP,MA.REFERENCE) '
         + 'join MA AS MAF using (SRST.MF,MAF.REFERENCE) '
         + 'join MA AS MAD using (SRST.MD,MAD.REFERENCE) '
         + 'join ZSKON using (SRST.KONPOD,ZSKON.REFERENCE) '
         + 'join ZSKON AS ZSKONF using (SRST.KONFIN,ZSKONF.REFERENCE) '
         + 'join ZSKON AS ZSKOND using (SRST.KONDOD,ZSKOND.REFERENCE) '
         + _warunek
?};
exec('test_zakresu','fst');

_okres:=exec('get_bo','fst');
TAB_SROD:=sql(_query,SSTALE.AR().POCZ_ROK, _grupa, |PAR_WYDR.GRUPA_OD, |PAR_WYDR.GRUPA_DO, _okres);

{? exec('if_ok','fst', 'TAB_SROD')
|| _wy:=1;
   _ind:=TAB_SROD.ndx_tmp(,1,'SROD_R',,)
|| _wy:=0
?};

{? PAR_WYDR.ODD<>null
|| _warunek:=' where ODDZIAL = '':_b'''
|| _warunek:=''
?};

{? PAR_WYDR.JORG<>null
|| {? _warunek<>'' || _warunek+=' and' || ' where ' ?};
   _warunek+=' JORG = '':_c'''
?};

{? PAR_WYDR.ZESTAW=1
|| _order:=' order by ODDZIAL, NRI'
|| _order:=' order by GR, NRI'
?};

{? _warun2<>''
|| {? _warunek<>'' || _warunek+=' and ' || _warunek:=' where ' ?};
   _warunek+=_warun2
?};

_query:='select * from :_a' + _warunek + _order;

{? _wy = 1
|| TAB_SQL:=sql(_query, TAB_SROD, PAR_WYDR.ODD().OD, PAR_WYDR.JORG().SYMBOL, _grupa, |PAR_WYDR.GRUPA_OD, |PAR_WYDR.GRUPA_DO)
?};

{? exec('if_ok','fst', 'TAB_SQL',1)
|| _wy:=1
|| _wy:=0
?};

{? TAB_SQL.first()
|| {! |?
   {? TAB_SQL.DATA_SKR<=PAR_WYDR.STAN_NA & PAR_WYDR.MO_DO=2 & TAB_SQL.DATA_SKR<>date(0,0,0)
   || TAB_SQL.UMOP:=TAB_SQL.NETP:=TAB_SQL.WARP:=0;
      TAB_SQL.UMOF:=TAB_SQL.NETF:=TAB_SQL.WARF:=0;
      {? FINFO.TOR_D='T' || TAB_SQL.UMOD:=TAB_SQL.NETD:=TAB_SQL.WARD:=0 ?};
      TAB_SQL.put()
   ?};
   TAB_SQL.next()
   !}
?};

{? var_pres('TAB_SROD')>0 || TAB_SROD.ndx_drop(_ind); obj_del(TAB_SROD)
|? var_pres('TAB_SROD')=0 || &TAB_SROD
?};
_wy


\sql_bo_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: Zapytanie SQL do wydruku FST_O_WARTBO.RPM, w wersji syntetycznej
::   WY: 1/0
::  OLD: \sql_bo_2/equery.fml
::----------------------------------------------------------------------------------------------------------------------
_zakres:={? PAR_WYDR.ZAKRESDR = 0 || _zakres:=''
         |? PAR_WYDR.ZAKRESDR = 1 || _zakres:=' and SRST.R = ''T'''
         |? PAR_WYDR.ZAKRESDR = 2 || _zakres:=' and SRST.R = ''N'''
         ?};
_warunek:='where SRST.KIND = ''T'' and SRST.R<>''S'' and SRST.OKRO_F = :_e ' + _zakres;
_grupa:=_warun2:='';
{? PAR_WYDR.WAR_GR = 1
|| {? |PAR_WYDR.GRUPA <> ''
   || {? var_pres('__SYNTGR')>0
      || {? __SYNTGR=2
         || _grupa:=|PAR_WYDR.GRUPA+{? PAR_WYDR.GRUPA+1='.' || '' || '.' ?};
            _warun2+=' GRUPA = '':_d'''
         || _grupa:=(|PAR_WYDR.GRUPA)+'%';
            _warun2+=' GRUPA LIKE '':_d'''
         ?}
      || _grupa:=1+(|PAR_WYDR.GRUPA);
         _warun2+=' GRUPA = '':_d'''
      ?}
   ?}
|? PAR_WYDR.WAR_GR = 2 & (|PAR_WYDR.GRUPA_OD <> '' | |PAR_WYDR.GRUPA_DO <> '')
|| {? |PAR_WYDR.GRUPA_OD <> '' & |PAR_WYDR.GRUPA_DO <> ''
   || _warun2+=' GRUPA BETWEEN '':_e'' and '':_f'''
   |? |PAR_WYDR.GRUPA_OD <> '' & |PAR_WYDR.GRUPA_DO = ''
   || _warun2+=' GRUPA >= '':_e'''
   |? |PAR_WYDR.GRUPA_OD = '' & |PAR_WYDR.GRUPA_DO <> ''
   || _warun2+=' GRUPA <= '':_f'''
   ?}
|? PAR_WYDR.WAR_GR = 3 & PAR_WYDR.WYB_GRUP<>''
|| _warun2:=exec('get_grupy','fst','','GRUPA')
?};

{? PAR_WYDR.ZESTAW = 1
|| _zestaw:='ODDZIAL';
   _part1:='select ODDZIAL'
|? PAR_WYDR.ZESTAW = 2
|| _zestaw:='GRUPA, GR';
   _part1:='select GRUPA, GR'
?};
{? FINFO.TOR_D<>'T'
|| _query:=_part1+', SUM(UMOF) AS SUM_UMOF, SUM(NETF) AS SUM_NETF, '
          + 'SUM(WARF) AS SUM_WARF, '
          + 'SUM(UMOP) AS SUM_UMOP, '
          + 'SUM(NETP) AS SUM_NETP, '
          + 'SUM(WARP) AS SUM_WARP '
          + 'from :_a '
|| _query:=_part1+', SUM(UMOF) AS SUM_UMOF, SUM(NETF) AS SUM_NETF, '
          + 'SUM(WARF) AS SUM_WARF, '
          + 'SUM(UMOP) AS SUM_UMOP, '
          + 'SUM(NETP) AS SUM_NETP, '
          + 'SUM(WARP) AS SUM_WARP, '
          + 'SUM(UMOD) AS SUM_UMOD, '
          + 'SUM(NETD) AS SUM_NETD, '
          + 'SUM(WARD) AS SUM_WARD '
          + 'from :_a '
?};
{? FINFO.TOR_D<>'T'
|| _query4:='select GR as GRUPA, SUM(SUM_UMOF) AS SUM_UMOF, SUM(SUM_NETF) AS SUM_NETF, '
          + 'SUM(SUM_WARF) AS SUM_WARF, '
          + 'SUM(SUM_UMOP) AS SUM_UMOP, '
          + 'SUM(SUM_NETP) AS SUM_NETP, '
          + 'SUM(SUM_WARP) AS SUM_WARP '
          + 'from :_a '
          + 'group by GR '
          + 'order by 1'
|| _query4:='select GR as GRUPA, SUM(SUM_UMOF) AS SUM_UMOF, SUM(SUM_NETF) AS SUM_NETF, '
          + 'SUM(SUM_WARF) AS SUM_WARF, '
          + 'SUM(SUM_UMOP) AS SUM_UMOP, '
          + 'SUM(SUM_NETP) AS SUM_NETP, '
          + 'SUM(SUM_WARP) AS SUM_WARP, '
          + 'SUM(SUM_UMOD) AS SUM_UMOD, '
          + 'SUM(SUM_NETD) AS SUM_NETD, '
          + 'SUM(SUM_WARD) AS SUM_WARD '
          + 'from :_a '
          + 'group by GR '
          + 'order by 1'
?};
_query3:=' GROUP BY ' + _zestaw;
{? FINFO.TOR_D<>'T'
|| _query2:='select SRST.REFERENCE as SROD_R, SRST.NST, SUBSTR(TAM.GR,1,1) AS GR, '
         + 'TAM.GR as GRUPA, SRDO.DW, OKRO_F.POCZ as DO, SRDO.SYMBOL, ODD.OD AS ODDZIAL, SRST.UMOF, (SRST.UMOP+SRSR.ZALP100) as UMOP, SRST.WARF, SRST.WARP, SRST.NETP, SRST.NETF, UD_SKL.SYMBOL AS JORG '
         + 'from SRST '
         + 'join SRSR using (SRST.SRSR, SRSR.REFERENCE) '
         + 'left join SRDO using (SRSR.DOKSKR, SRDO.REFERENCE) '
         + 'left join OKRO_F using (SRDO.OKRO_F, OKRO_F.REFERENCE) '
         + 'join TAM using (SRST.GR,TAM.REFERENCE) '
         + 'join ODD using (SRST.ODD,ODD.REFERENCE) '
         + 'join UD_SKL using (SRST.JORG,UD_SKL.REFERENCE) '
         + _warunek
|| _query2:='select SRST.REFERENCE as SROD_R, SRST.NST, SUBSTR(TAM.GR,1,1) AS GR, '
         + 'TAM.GR as GRUPA, SRDO.DW, OKRO_F.POCZ as DO, ODD.OD AS ODDZIAL, SRST.UMOF, SRST.UMOD, (SRST.UMOP+SRSR.ZALP100) as UMOP, SRST.WARF, SRST.WARD, SRST.WARP, SRST.NETP, SRST.NETF,  SRST.NETD, UD_SKL.SYMBOL AS JORG '
         + 'from SRST '
         + 'join SRSR using (SRST.SRSR, SRSR.REFERENCE) '
         + 'left join SRDO using (SRSR.DOKSKR, SRDO.REFERENCE) '
         + 'left join OKRO_F using (SRDO.OKRO_F, OKRO_F.REFERENCE) '
         + 'join TAM using (SRST.GR,TAM.REFERENCE) '
         + 'join ODD using (SRST.ODD,ODD.REFERENCE) '
         + 'join UD_SKL using (SRST.JORG,UD_SKL.REFERENCE) '
         + _warunek
?};
exec('test_zakresu','fst');
_okres:=exec('get_bo','fst');
TAB_SROD:=sql(_query2, PAR_WYDR.STAN_NA, _grupa, |PAR_WYDR.GRUPA_OD, |PAR_WYDR.GRUPA_DO, _okres, date(0,0,0));
{? TAB_SROD.first()
|| {! |?
         {? PAR_WYDR.MO_DO=2
         || {? TAB_SROD.DW<>date(0,0,0) & TAB_SROD.DW<PAR_WYDR.STAN_NA
            || TAB_SROD.UMOP:=TAB_SROD.UMOF:=TAB_SROD.WARF:=TAB_SROD.WARP:=TAB_SROD.NETP:=TAB_SROD.NETF:=0;
               TAB_SROD.put()
            ?}
         |? PAR_WYDR.MO_DO=1
         || {? TAB_SROD.DO<>date(0,0,0) & TAB_SROD.DO<PAR_WYDR.STAN_NA
            || TAB_SROD.UMOP:=TAB_SROD.UMOF:=TAB_SROD.WARF:=TAB_SROD.WARP:=TAB_SROD.NETP:=TAB_SROD.NETF:=0;
               TAB_SROD.put()
            ?}
         ?};
         TAB_SROD.next()
   !}
?};
{? exec('if_ok','fst', 'TAB_SROD')
|| _wy:=1;
   _ind:=TAB_SROD.ndx_tmp(,1,'SROD_R',,)
|| _wy:=0
?};

:: Selekcja po j. ksiegowej
{? PAR_WYDR.ODD <> null
|| _warunek:=' where ODDZIAL = '':_b'''
|| _warunek:=''
?};

{? PAR_WYDR.JORG <> null
|| {? _warunek <> '' || _warunek+=' and' || _warunek:=' where ' ?};
   _warunek+=' JORG = '':_c'''
?};

{? _warun2<>''
|| {? _warunek<>'' || _warunek+=' and ' || _warunek:=' where ' ?};
   _warunek+=_warun2
?};

_query:=_query + _warunek + _query3;

{? _wy:=1 & (PAR_WYDR.PR_GR=1 | PAR_WYDR.ZESTAW<>2)
|| TAB_SQL:=sql(_query, TAB_SROD, PAR_WYDR.ODD().OD, PAR_WYDR.JORG().SYMBOL, _grupa, |PAR_WYDR.GRUPA_OD, |PAR_WYDR.GRUPA_DO);
   {? exec('if_ok','fst', 'TAB_SQL',1) || _wy:=1 || _wy:=0 ?}
|? _wy:=1 & PAR_WYDR.PR_GR=0
|| VAR_DEL.delete('__tab_tmp');
   __tab_tmp:=sql(_query, TAB_SROD, PAR_WYDR.ODD().OD, PAR_WYDR.JORG().SYMBOL, _grupa, |PAR_WYDR.GRUPA_OD, |PAR_WYDR.GRUPA_DO);
   TAB_SQL:=sql(_query4,__tab_tmp);
   VAR_DEL.delete('__tab_tmp');
   {? exec('if_ok','fst', 'TAB_SQL',1) || _wy:=1 || _wy:=0 ?}
?};

{? var_pres('TAB_SROD')>0 || TAB_SROD.ndx_drop(_ind); obj_del(TAB_SROD)
|? var_pres('TAB_SROD')=0 || &TAB_SROD
?};

_wy


\fak_zak_add_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Dodaje wartość do środka trwałego na podstawie faktury zakupu z dokumentu OT
::   WE: _a - SRDO.ref()
::----------------------------------------------------------------------------------------------------------------------
SRDO.cntx_psh(); SRDO.prefix();
SRSR.cntx_psh(); SRSR.prefix();
SRDZ.cntx_psh();
DOK.cntx_psh(); DOK.prefix();
VPOZ.cntx_psh(); VPOZ.index('VDOK'); VPOZ.prefix();
SRST.cntx_psh();
_wart:=0;
{? SRDO.seek(_a)
|| SRDZ.index('SRDZ'); SRDZ.prefix(SRDO.ref());
   {? SRDZ.first()
   || {! |?
         {? DOK.seek(SRDZ.DOK_REF,ref_name(SRDZ.DOK_REF))
         || VPOZ.use('pozv'+(DOK.name()+4)); VPOZ.prefix(DOK.ref());
            {? VPOZ.first()
            || {! |?
                  {? -(4+VPOZ.GRVAT().KOD)='zinw'
                  || _wart+=VPOZ.NETTO
                  ?};
                  VPOZ.next()
               !}
            ?}
         ?};
         SRDZ.next()
      !}
   ?}
?};
{? _wart>0 & SRDO.SRSR_E=null
|| SRDO.SRSR();
   SRSR.WARF:=SRSR.WARP:=SRSR.NETP:=SRSR.NETF:=_wart;
   {? FINFO.TOR_D='T' || SRSR.WARD:=SRSR.NETD:=_wart ?};
   {? SRSR.put()
   || SRD.updateRecState()
   ?}
|? _wart>0 & SRDO.SRSR_E<>null
|| SRDO.SRSR_E();
   SRSR.WARF:=SRSR.WARP:=SRSR.NETP:=SRSR.NETF:=_wart;
   {? FINFO.TOR_D='T' || SRSR.WARD:=SRSR.NETD:=_wart ?};
   {? SRSR.put()
   || SRD.updateRecState(SRDO.OKRO_F);
      SRD.rootUpdate(SRDO.SRSR,SRDO.OKRO_F)
   ?}
?};
SRDO.cntx_pop(); SRSR.cntx_pop(); SRDZ.cntx_pop(); DOK.cntx_pop(); VPOZ.cntx_pop(); SRST.cntx_pop();
SRSR.get()


\dol_fak_aut
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Uzupełnia dokument zakupu na OT przy dołączaniu automatycznym z procesu
::   WE: DOK.ref()
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh(); DOK.prefix();
{? DOK.seek(_a,ref_name(_a)) & DOK.DOK_REJ().ZAK_SR='T'
|| __T_SRDZ.prefix(); __T_SRDZ.blank();
   __T_SRDZ.NK:=DOK.NK;
   __T_SRDZ.DTW:=DOK.DTW;
   __T_SRDZ.DTO:=DOK.DTO;
   __T_SRDZ.TR:=DOK.TR;
   __T_SRDZ.DOK:=DOK.uidref();
   __T_SRDZ.add(1)
?};
DOK.cntx_pop(); 1


\sd_ins_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [23.25]
:: OPIS: Udostępnia do edycji listę ustawień wydruków.
::   WE: _a [STRING] - symbol dziedziny
::  OLD: \settings/skid_xr.fml
::  OLD: \xr_ins_select/rap_zew.fml
::  OLD: \sd_ins_select/fks.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | _a=''
|| return()
?};
_sym:=_a;

exec('sd_ins_dane','fst2',_sym);

_TAB:=exec('sd_ins_panel','fst2',_sym);
_TAB.select()


\sd_ins_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [23.25]
:: OPIS: Uzupełnia dane konfiguracji i ustawień SD.
::   WE: _a [STRING] - symbol dziedziny
::   WY: ~~
::  OLD: \xr_ins_dane/rap_zew.fml
::  OLD: \sd_ins_dane/fks.fml
::----------------------------------------------------------------------------------------------------------------------
_dom:=exec('domain_ref','#b_domain',_a);
{? _dom=null
|| return()
?};

:: szablony dokumentów
SD_UINS.cntx_psh();
SD_UINS.index('STAN');
SD_BDEF.cntx_psh();
SD_BDEF.index('UNIQUE');
SD_BDEF.prefix(_dom);
_loop:=SD_BDEF.first();
{!
|? _loop
|! {? ~SD_UINS.find_key(SD_BDEF.SD_DEF,OPERATOR.USER,'U')
   || SD_UINS.blank();
      SD_UINS.SD_DEF:=SD_BDEF.SD_DEF;
      SD_UINS.USERS:=OPERATOR.USER;
      SD_UINS.RODZAJ:='U';
      SD_UINS.STAN:='N';
      SD_UINS.add()
   ?};
   _loop:=SD_BDEF.next()
!};
SD_BDEF.cntx_pop();
SD_UINS.cntx_pop();
~~


\sd_ins_panel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [23.25]
:: OPIS: Tworzy tabelę i okna ustawień SD.
::   WE: _a [STRING] - symbol dziedziny
::   WY: alias tabeli tymczasowej
::  OLD: \xr_ins_panel/rap_zew.fml
::  OLD: \sd_ins_panel/fks.fml
::----------------------------------------------------------------------------------------------------------------------
_TAB:=exec('sd_ins_tabela','fst2',_a);

_TAB.win_sel(_wnd:=_TAB.mk_sel('Ustawienia wydruków'@,'P',,'#sd_ins_config',,,,,'U'));
_TAB.win_fld(_wnd,,'SD_STAN',,,,,,,,MS.comment(SD_UINS,'STAN'),2,,"'T'","'N'","'X'");
_TAB.win_fld(_wnd,,'NAZWA',,,,,,,,MS.comment(SD_DEF,'NAZWA'));
_TAB.win_act(_wnd,,'Formuła','Zmień'@,,'Zmiana sposobu przygotowania wydruku.'@,
   "exec('sd_ins_zmien_b','fst2',cur_tab(1,1))",
   "exec('sd_ins_zmien_a','fst2',cur_tab(1,1))",
   1
);
_TAB.win_act(_wnd,,'Rekord',,,,"
   _TAB:=cur_tab(1,1);
   _mod:=0;
   {? _TAB.SD_STAN<>'X' & SD_UINS.seek(_TAB.SD_UINS,,1) & _TAB.SD_STAN<>SD_UINS.STAN
   || _TAB.SD_STAN:=SD_UINS.STAN;
      _mod:=1
   ?};
   {? _mod<>0
   || _TAB.put()
   ?};
   ~~
");
_TAB.win_act(_wnd,,'Szukaj');
_TAB.win_act(_wnd,,'Kolejność');
_TAB.win_act(_wnd,,'Okienko',,,,
   "  SD_UINS.cntx_psh();
      1
   ",
   "  SD_UINS.cntx_pop();
      1
   "
);
_TAB.win_btn(_wnd,'text=%1'['Zmień'@],'menu:Z');

_TAB.win_edit(_wnd:=_TAB.mk_edit('Ustawienie wydruku'@,,'#xr_ins_edit'));
_TAB.win_esep(_wnd,'Dane podstawowe'@);
_TAB.win_efld(_wnd,,'SD_STAN',,,,,,,,MS.comment(SD_UINS,'STAN'),'check-box',
   'left_label=1,check_label="%1"'['Użyj szablonów dokumentów'@],
   "'T'","'N'"
);
exec('ok_esc','#window',_TAB,_wnd,,,,,1);

_TAB.win_patt(_wnd:=_TAB.mk_edit('Ustawienie wydruku'@,,'#xr_ins_patt'));
_TAB.win_esep(_wnd,'Dane podstawowe'@);
_TAB.win_efld(_wnd,,'SD_STAN',,,,,,,,MS.comment(SD_UINS,'STAN'),'radio-buttons',,
   'Dowolny'@,"''",
   'Włączony'@,"'T'",
   'Wyłączony'@,"'N'",
   'Niedostępny'@,"'X'"
);
_TAB.win_efld(_wnd,,'NAZWA',,,MS.fld_len(XR_DEF,'OPIS'),,1,,,MS.comment(SD_DEF,'NAZWA'));
exec('ok_esc','#window',_TAB,_wnd);

_TAB


\sd_ins_zmien_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [23.25]
:: OPIS: Przed akcją "Zmień" okna ustawień SD.
::   WE: _a [TABLE] - alias tabeli ustawień
::   WY: 0/1 - porzucono edycję/wprowadzić zmiany
::  OLD: \xr_ins_zmien_b/rap_zew.fml
::  OLD: \sd_ins_zmien_b/fks.fml
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_TAB:=_a;
_wnd:=_TAB.win_edit('?');

_TAB.efld_opt(_wnd,'enable=%1'[$(_TAB.SD_UINS<>'' & _TAB.SD_STAN<>'X')],,'SD_STAN');
_TAB.edit() & _TAB.put()


\sd_ins_zmien_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [23.25]
:: OPIS: Obsługa akcji "Zmień" okna ustawień SD.
::   WE: _a [TABLE] - alias tabeli ustawień
::   WY: ~~
::  OLD: \xr_ins_zmien_a/rap_zew.fml
::  OLD: \sd_ins_zmien_a/fks.fml
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_TAB:=_a;

SD_UINS.prefix();

{? _TAB.SD_STAN<>'X' & SD_UINS.seek(_TAB.SD_UINS)
|| SD_UINS.STAN:=_TAB.SD_STAN;
   SD_UINS.put()
?};
~~


\sd_ins_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [23.25]
:: OPIS: Tworzy tabelę ustawień SD.
::   WE: _a [STRING] - symbol dziedziny
::   WY: alias tabeli tymczasowej
::  OLD: \xr_ins_tabela/rap_zew.fml
::  OLD: \sd_ins_tabela/fks.fml
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_sym:=_a;

_dom:=exec('domain_ref','#b_domain',_sym);
{? _dom=null
|| return()
?};

:: tabela połączonych ustawień
_TAB:=tab_tmp(1,
   'NAZWA','STRING[%1]'[$MS.fld_len(SD_DEF,'NAZWA')],'Nazwa szablonów dokumentów'@,
   'SD_UINS','STRING[16]',SD_UINS.comment(),
   'SD_SYM','STRING[%1]'[$MS.fld_len(SD_DEF,'SYMBOL')],'Symbol szablonów dokumentów'@,
   'SD_STAN','STRING[1]','Szablon dokumentów'@
);

_TAB.fld_fml('NAZWA','BEFORE_DISPLAY',"cur_tab(1,1).SD_UINS<>''");

_TAB.fld_fml('SD_STAN','BEFORE_EDIT',"
   _TAB:=cur_tab(1,1);
   _TAB.SD_UINS<>'' & _TAB.SD_STAN<>'X'
");

:: zablokuj kolumny
_TAB.fld_attr(,2);

:: uzupełnij dane
SD_DEF.cntx_psh();
SD_UINS.cntx_psh();
SD_UINS.index('STAN');
SD_UINS.prefix();
SD_BDEF.cntx_psh();
SD_BDEF.index('UNIQUE');
SD_BDEF.prefix(_dom);
_loop:=SD_BDEF.first();
{!
|? _loop
|! {? SD_UINS.find_key(SD_BDEF.SD_DEF,OPERATOR.USER,'U')
   || _sds:=SD_BDEF.SD_DEF().SYMBOL;
      _TAB.blank();
      _TAB.NAZWA:=SD_BDEF.SD_DEF().NAZWA;
      _TAB.SD_UINS:=$SD_UINS.ref();
      _TAB.SD_SYM:=_sds;
      {? SD_BDEF.SD_DEF().DOSTEPNY='N'
      || _TAB.SD_STAN:='X';
         {? SD_UINS.STAN='T'
         || SD_UINS.STAN:='N';
            SD_UINS.put()
         ?}
      || _TAB.SD_STAN:=SD_UINS.STAN
      ?};
      _TAB.add()
   ?};
   _loop:=SD_BDEF.next()
!};
SD_BDEF.cntx_pop();
SD_UINS.cntx_pop();
SD_DEF.cntx_pop();

_TAB

:Sign Version 2.0 jowisz:1045 2024/02/07 13:26:55 2d775ef767ffeb0bc188f8405a4c7f13325d635fa05544d38dbd3a9889be3d6bb42516320914e4cfa08fe385d1d721641ff4bbd5760dfdd1ad1f1396985e2f59597718720b341c16c5aa5f0a04e8f1a024db5e6deb60ba414076c5f4a9b42e0a616acedd6610eb3e5398999b8af65e2f6a2f5809bd01296ebf529df1a7e1641e
