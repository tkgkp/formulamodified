:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: giodo.fml
:: Utworzony: 19.02.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Funkcje odpowiedzialne za realizacje obowiązków administratora nałożonych przez ustawe
::            o ochronie danych osobowych
::======================================================================================================================


\dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Dołączanie zapisu z danymi osobowymi
::   WE: _a - typ danych 'osoba' lub 'kh'
::       _b - ref tabeli KH lub OSOBA (w zależności od pierwszego parametru)
::       _c - data operacji na danych osobowych
::  OLD: \dol/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
GIODO_ED.TYP:=_a;
{? _a='osoba' | (_a='kh' & KH.FIZYCZNY=1)
|| exec('zapisz','giodo',_a,_b,_c,'W','Zarejestrowanie danych osobowych w systemie')
?};
1


\pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Modyfikacja zapisu z danymi osobowymi
::   WE: _a - typ danych 'osoba' lub 'kh'
::       _b - ref tabeli KH lub OSOBA (w zależności od pierwszego parametru)
::       _c - data operacji na danych osobowych
::  OLD: \pop/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
GIODO_ED.TYP:=_a;
exec('zapisz','giodo',_a,_b,_c,'M','Modyfikacja zapisu w bazie danych'); 1


\giokhbe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formuła przed poprawianiem znacznika KH.FIZYCZNY
::  OLD: \giokhbe/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
{? RS.TAB='KH' & fiz_kh<>KH.FIZYCZNY
|| {? KH.FIZYCZNY=1
   || FUN.info('W związku ze zmianą typu kontrahenta na osobę fizyczną\n'+
          'od tej chwili będą rejestrowane dla niego\n'+
          'operacje na danych osobowych.')
   || GIODO.index('GIODKH'); GIODO.prefix(KH.ref());
      {? GIODO.first()
      || {? FUN.choice('Zmiana typu kontrahenta na niebędącego osobą fizyczną\n'+
                       'spowoduje usunięcie dla niego historii operacji\n'+
                       'na danych osobowych.',,'Kontynuuj','Ustaw znacznik na osobę fiz.')=2
         || KH.FIZYCZNY:=1; exec('aekhfiz','kontrahent')
         ?}
      ?}
   ?}
?}


\giokhae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formuła po poprawianiu znacznika KH.FIZYCZNY
::  OLD: \giokhae/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
{? RS.TAB='KH'
|| {? KH.FIZYCZNY=1
   || {? KH.FIZYCZNY<>fiz_kh
      || exec('dol','giodo','kh',KH.ref(),date())
      ?}
   || GIODO.index('GIODKH'); GIODO.prefix(KH.ref());
      {? GIODO.first() || {! |? GIODO.del() !} ?}
   ?}
?}


\zapisz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: zapis informacji związanych z przetwarzaniem danych osobowych
::   WE: _a - typ danych 'osoba' lub 'kh'
::       _b - ref tabeli KH lub OSOBA (w zależności od pierwszego parametru)
::       _c - data operacji na danych osobowych
::       _d - kod operacji na danych osobowych
::       _e - opis operacji na danych osobowych (opcjonalnie)
::  OLD: \zapisz/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
_kto:=app_info('app_user')+' ('+userdata()+')';
GIODO_ED.TYP:=_a;
GIODO.blank();
{? _a='kh'
|| GIODO.index('GIODKH');   GIODO.prefix(); GIODO.OSOBA:=null; GIODO.KH:=_b
|| GIODO.index('GIODOSOB'); GIODO.prefix(); GIODO.OSOBA:=_b;   GIODO.KH:=null
?};
GIODO.KOD:=_d;
GIODO.DATA:=_c;
GIODO.OPER:=_kto;
{? GIODO.add() & var_pres('_e')=type_of('') & _e<>''
|| GIODO.memo_set(_e,'OPIS');
   GIODO.memo_put(,'OPIS')
?}


\czykhoso
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formuła sprawdzająca czy aktualny rekord tabeli SLO należy do
::       słownika zbudowanego w oparciu o wzorzec kontrahenta, osoby lub pracownika
::  OLD: \czykhoso/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
RS.index('RS'); RS.prefix();
{? RS.find_key(SLO.SLU().WZ)
|| {? RS.TAB='SLO_OSOB' & REF.WFIRM & (3+SLO.KOD)<>REF.FIRMA().SYMBOL
   || FUN.info('Wybrany pracownik jest z innej firmy niż bieżąca.'@); 0
   || _pre:=REF.WFIRM & RS.TAB<>'' & exec('czy_tab_glob','#table',RS.TAB)=0;
      {? RS.TAB='OSOBA'
      || GIODO_ED.TYP:='osoba'; OSOBA.index('IMEX'); OSOBA.prefix();
         OSOBA.find_key(#SLO.KOD)
      |? RS.TAB='KH'
      || GIODO_ED.TYP:='kh'; KH.index('KOD'); KH.prefix(2); KH.find_key(SLO.KOD)
      |? RS.TAB='OS'
      || GIODO_ED.TYP:='osoba'; OS.index('KOD'); OS.prefix();
         {? OS.find_key(SLO.KOD) || OS.OSOBA(); 1 ?}
      |? RS.TAB='SLO_OSOB'
      || GIODO_ED.TYP:='osoba'; SLO_OSOB.index('ID'); SLO_OSOB.prefix(RS.F_ZATR);
         {? SLO_OSOB.find_key({? ~_pre || #SLO.KOD || #(3-SLO.KOD) ?}) || SLO_OSOB.OSOBA(); 1 ?}
      || FUN.info('Funkcja dotyczy wyłącznie słowników \n'+
                  'kontrahentów, osób, pracowników i zleceniobiorców.'@); 0
      ?}
   ?}
?}


\giodo_osoba_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Wartość początkowa pola GIODO.OSOBA.
::  OLD: \bl_osoba/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
{? GIODO_ED.TYP='osoba' || OSOBA.ref() || null() ?}


\giodo_kh_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Wartość początkowa pola GIODO.KH.
::  OLD: \bl_kh/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
{? GIODO_ED.TYP='kh' || KH.ref() || null() ?}


\giodo_oper_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GL [8.60]
:: OPIS: Wartość początkowa pola GIODO.OPER.
::  OLD: \operator/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:='';
{? OPERATOR.USER<>null()
|| USERS.cntx_psh();
   _ret:=OPERATOR.USER().KOD+' ('+OPERATOR.USER().DANE+')';
   USERS.cntx_pop()
?};
_ret


\przel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Przekazanie danych w trakcie przelewow
::   WE: _a - typ danych 'osoba' lub 'kh'
::       _b - ref tabeli KH lub OSOBA (w zaleznosci od pierwszego parametru)
::       _c - ref SKID_RBK
::       _d - data (opcjonalny)
::   WY: 1/0 - udalo/nie udalo sie dodac zapis o przekazaniu danych osobowych
::  OLD: \przel/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
GIODO_ED.TYP:=_a;
{? ((_a='kh' & (KH.index('KOD'); KH.prefix(); KH.seek(_b) & KH.FIZYCZNY=1)) |
    _a='osoba') &
   {? var_pres('danodane')>0 || danodane=0 || 1 ?}
|| {? var_pres('_d')<=0 | _d=date(0,0,0) || _d:=date() ?};
   SKID_RBK.index('TAB'); SKID_RBK.prefix();
   {? SKID_RBK.seek(_c)
   || _zwrot:=exec('zapisz','giodo',_a,_b,_d,'U',
                   'Przekazanie danych w postaci przelewu\n'+
                   'odbiorcą danych jest:\n'+
                   {? SKID_RBK.BANK
                   || ~-(SKID_RBK.BANK().NB+
                      {? +B.M || ', '+{? +B.K || B.K+' ' || '' ?}+B.M || '' ?}+
                      {? +B.UL || ', '+B.UL || '' ?})
                   ?}
                  )
   ?}
?};
_zwrot


\rap_zus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GL [8.60]
:: OPIS: przekzanie danych w trakcie raportów do ZUS
::   WE: _a - data przekazania danych
::       _b - rodzaj raportu ZUS
::  OLD: \rap_zus/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zapisz','giodo','osoba',
   OSOBA.ref,
   _a,
   'U',
   'Dane osobowe przekazano w postaci raportu ZUS '+_b+'\n'+
   {? KST.ODDZ_ZUS
   || 'odbiorcą danych jest:\n'+
      ~-(KST.ODDZ_ZUS().NAZWA+
      {? +ADRES.MIASTO
      || ', '+{? +ADRES.KOD_POCZ || ADRES.KOD_POCZ+' ' || '' ?}+ADRES.MIASTO
      || ''
      ?}+
      {? +ADRES.ULICA || ', '+ADRES.ULICA || '' ?})
   || 'do Zakładu Ubezpieczeń Społecznych'
   ?}
)


\przelew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GL [8.60]
:: OPIS: przekazanie danych w trakcie przelewów
::   WE: _a - data przekazania danych
::  OLD: \przelew/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
B.cntx_psh();
exec('zapisz','giodo','osoba',
   OSOBA.ref,
   _a,
   'U',
   'Dane osobowe przekazano w postaci przelewu\n'+
   'odbiorcą danych jest:\n'+
   {? SKID_RBK.BANK
   || ~-(SKID_RBK.BANK().NB+
      {? +B.M || ', '+{? +B.K || B.K+' ' || '' ?}+B.M || '' ?}+
      {? +B.UL || ', '+B.UL || '' ?})
   || ~-ROZNE.NAZBAN
   ?}
);
B.cntx_pop()


\ini_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Inicjuje tabele tymczasowa wykorzystywana do sprawdzania czy w
::       wykonywanej funkcji dla biezacego kontrahenta dokonywano juz zapisu
::  OLD: \ini_tmp/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
GIODOTMP:=tab_tmp(2,'KOD','STRING[8]','Kod',
                    'KOD1','STRING[8]','Kod1')


\del_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Kasuje tabele tymczasowa wykorzystywana do sprawdzania czy w
::       wykonywanej funkcji dla biezacego kontrahenta dokonywanu juz zapisu
::  OLD: \del_tmp/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
obj_del(GIODOTMP)


\gen_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Sprawdza w tabeli tymczasowej czy w biezacej funkcji robiono juz
::       dla kontrahenta i ustawia zmienna danodane
::   WE: _a - kod kontrahenta
::  OLD: \gen_tmp/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
danodane:={? GIODOTMP.find_key(_a,_a)
          || 1
          || GIODOTMP.KOD:=GIODOTMP.KOD1:=_a; GIODOTMP.add(); 0
          ?}


\kod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Definicja dostępnych kodów udostępnienia danych osobowych.
::   WE:
::   WY: Tablica z uchwytem do utworzonej tabeli tymczasowej i jej indeksami.
::  OLD: \giodokod/skid_gio.fml
::  OLD: \kod_zd/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
_kod:=obj_new('TAB','NDX');

_kod.TAB:=tab_tmp(1,
   'LP','INTEGER','Lp.',
   'KOD','STRING[1]','Kod',
   'O','STRING[100]','Opis'
);
_kod.NDX:=obj_new('LP','KOD');
_kod.NDX.LP:=_kod.TAB.index('?');
_kod.NDX.KOD:=_kod.TAB.ndx_tmp(,,'KOD',,);

_add:="_a.blank(); _a.LP:=_a.size()+1; _a.KOD:=_b; _a.O:=_c; _a.add()";

_add(_kod.TAB,'W','Zarejestrowanie danych osobowych w systemie');
_add(_kod.TAB,'M','Modyfikacja zapisu w bazie danych');
_add(_kod.TAB,'U','Przekazanie danych');
_add(_kod.TAB,'I','Udzielenie informacji osobie zainteresowanej o zakresie przetwarzania jej danych osobowych');
_add(_kod.TAB,'Z','Wyrażenie zgody na udostępnianie danych');
_add(_kod.TAB,'Q','Wycofanie zgody na udostępnianie danych');

_kod.TAB.first();

_kod


\kod_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła ustala opis kodu na podstawie wartości i przypisuje go do zmiennej SKID.GIOOPIS.
::   WE: _a - Uchwyt do tablicy dostępnych kodów (patrz formuła: giodo.fml\kod). Poprawność argumentu nie jest
::            weryfikowana.
::       _b - Kod [DOMYŚLNIE: GIODO.KOD]
::       _c - Czy z komunikatem dla błędnego kodu:
::             0 - Nie [DOMYŚLNIE].
::             1 - Tak.
::   WY: 1 - Kod poprawny - opis ustawiony.
::       0 - Brak kodu - pusty lub niepoprawny - opisu nie udało się ustawić.
::----------------------------------------------------------------------------------------------------------------------
SKID.GIOOPIS:='';

_kod:=_a;
_wart:={? var_pres('_b')=type_of('') & +_b<=1 || _b || GIODO.KOD ?};

_ret:=1;

{? _wart<>''
|| _kod.TAB.index(_kod.NDX.KOD);
   _ret:=_kod.TAB.find_key(_wart,);
   {? _ret
   || SKID.GIOOPIS:=_kod.TAB.O
   |? var_pres('_c')=type_of(0) & _c
   || FUN.info('Wpisana wartość nie jest obsługiwana. Skorzystaj ze słownika.')
   ?}
?};

_ret


\giodo_kod_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa wyboru kodu udostępnienie danych osobowych.
::   WE:
::   WY:
::  OLD: \giodokod/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
_kod:=params_get().kod;
_kod.TAB.index(_kod.NDX.LP);
_kod.TAB.first();

_fml:='popup(0,\'Kody operacji\'';
{!
|? _fml+=','+'\''+_kod.TAB.KOD+' - '+_kod.TAB.O+'\',,"fld(\''+_kod.TAB.KOD+'\')"';
   _kod.TAB.next()
!};
_fml+=')';

($_fml)();
fld()


\giodo_kod_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Po redagowaniu pola GIODO.KOD.
::   WE:
::   WY:
::  OLD: \wys_op/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
exec('kod_opis','giodo',params_get().kod,GIODO.KOD,1)


\giodo_db
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Przed obsługą akcji "Dołacz" w oknie WER_OS tabeli GIODO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SKID.GIOOPIS:='';
1


\giodo_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Rekord - przed" w oknach wertowania tabeli GIODO.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('kod_opis','giodo',params_get().kod);
0


\giodo_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Rekord - po" w oknach wertowania tabeli GIODO.
::   WE:
::   WY:
::  OLD: \spr_dod/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
__CHK.record(GIODO,,'DATA','KOD')


\slogiodo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Edycja operacji na danych osobowych z poziomu SLO
::  OLD: \slogiodo/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
{? GIODO_ED.TYP='kh'
|| exec('edycjakh','giodo')
|| exec('edycjaos','giodo')
?}


\edycjaos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GL [8.60]
:: OPIS: Wyświetlenie informacji o operacjach na danych osobowych - osoby
::  OLD: \edycja/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
params_set('kod',exec('kod','giodo'));

_typ:='osoba';
GIODO_ED.TYP==_typ;
GIODO.cntx_psh();
GIODO.index('GIODDATA');
GIODO.prefix(OSOBA.ref());
GIODO.win_sel('WEROSI');
GIODO.win_edit('RED');
GIODO.win_patt('SZUK');
GIODO.select();
GIODO.cntx_pop();
GIODO_ED.TYP==_typ;
~~


\edycjakh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: wyswietlenie informacji o operacjach na danych osobowych - kontrahenci
::   WE: [_a] - 0 bez okienka 1 (domyslnie) z okienkiem
::       _b (opcja) - ref kontrahenta
::  OLD: \edycjakh/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();
{? cur_tab(1,1)=SLO
|| KH.index('KOD'); KH.prefix(2); _dalej:=KH.find_key(SLO.KOD)
|| _dalej:=1
?};
{? _dalej
|| params_set('kod',exec('kod','giodo'));
   {? var_pres('_a')<>type_of(1) || _a:=1 ?};
   {? var_pres('_b')<>type_of(null) || _b:=KH.ref() ?};
   GIODO_ED.TYP:='kh';
   GIODO.cntx_psh(); GIODO.index('GIODKH'); GIODO.prefix({? _b || _b || -1 ?});
   {? KH.FIZYCZNY=1
   || GIODO.win_sel('WERKH');
      GIODO.hdr_sel(); GIODO.hdr_sel({? _b || ': '+KH.SKR || '' ?});
      {? _a=1
      || {? exec('chk_role','#b__box',OPERATOR.USER,'ZWS_PAR_KKHR')
         || GIODO.select()
         || GIODO.select(,,,'DPU:D')
         ?}
      ?}
   || {? _a=1
      || FUN.info('Operacje na danych osobowych dostępne są\n'+
                  'tylko dla kontrahentów będących osobami fizycznymi.')
      ?}
   ?};
   GIODO.cntx_pop()
|| FUN.info('Nie znaleziono kontrahenta.')
?};
KH.cntx_pop()


\przekaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GL [8.60]
:: OPIS: przekazanie danych osobowych
::   WE: _a - data przekazania danych
::       _b - _z (dowolna ilosc parametrow)
::               informacja o przekazywanych danych
::  OLD: \przekaz/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(date) & _a<>date(0,0,0) & _>=2
|| _msg:='';
   {! _arg:=2.._ |! {? type_of(_[_arg])=type_of('') || _msg+=_[_arg] ?} !};
   exec('zapisz','giodo','osoba',OSOBA.ref,_a,'U',_msg)
?}


\data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GL [8.60]
:: OPIS: Przygotowanie daty przekazania danych osobowych
::   WE: [_a] - (opcjonalny) - rejestrowanie danych osobowych
::  OLD: \data/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
_data:=#0;
{? {? ~(var_press('_a')=type_of(1) & _a)
   || FUN.ask('Rejestrować przekazanie danych osobowych?'@)
   || 1
   ?}
|| undefine();
   define('DATA',date(),'Data przekazania danych osobowych'@);
   {? def_edit("DEFINE.DATA<>#0",FUN.TYT)
   || _data:=DEFINE.DATA
   ?};
   undefine
?};
_data

:Sign Version 2.0 jowisz:1045 2020/04/03 17:16:37 ceedbfd33cf4c10ddf1f2587184e60072f33553e00f360dcba4106bef34b3fe776f8d003b193444b3f7a1281f4d791d02a06d9b1a0cf51b5d9f0bd9ce471e8fe57ba96eecda4a2433c0df369627e69daf96caac6f59bbfb664bd36afb607799e63a8c73f795236b2edef81c442fbff110c5250936d290173e8b5e1c726dbf5ef
