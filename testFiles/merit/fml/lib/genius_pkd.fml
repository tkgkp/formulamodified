:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: genius_pkd.fml
:: Utworzony: 11.03.2022
:: Autor: TMR
:: Systemy:
::======================================================================================================================
:: Zawartość: Obsługa intencji ChatBot dla PKD
::======================================================================================================================


\informacje_pracownik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Obsługuje informacje zwrotne nt informacji o pracowniku.
::   WE:
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
:: upewnienie się, że jesteśmy w dobrej intencji
{? AI.INTENT<>'pracownik.informacje'
|| FUN.info('Błąd wywołania intencji');
   return(exec('erp_obj','genius'))
?};
exec('config','genius_pkd');

:: parametry wymagane
_startDate:=AI.getPar('startDate');
_endDate:=AI.getPar('endDate');

:: parametry opcjonalne
_nazwisko:=AI.getPar('nazwisko');
_imie:=AI.getPar('imie');
_idPracownika:=AI.getPar('idPracownika');
_akcja:=AI.getPar('akcja');
:_pracownikLicz:=AI.getPar('pracownikLicz');
_formaWspolpracy:=AI.getPar('formaWspolpracy');
_pracownikLicz:={? _formaWspolpracy<>''
                || {? _formaWspolpracy*'Wiele' || 'wiele' || 'jeden' ?}
                || ''
                ?};

:: parametry ustawione w sesji
_p_ref:=AI.getErpPar('p_ref');
{? _p_ref=~~ || _p_ref:='' ?};

_path:=AI.getErpPar('path');
{? _path=~~ || _path:='' ?};
{? +_path || AI.setErpPar('path',_path) ?};

{? _formaWspolpracy='' || _formaWspolpracy:=AI.getErpPar('formaWspolpracy') ?};
{? _formaWspolpracy=~~ || _formaWspolpracy:='' || _formaWspolpracy:=~-(1+_formaWspolpracy) ?};

{? _pracownikLicz='' || _pracownikLicz:=AI.getErpPar('pracownikLicz') ?};
{? _pracownikLicz=~~ || _pracownikLicz:='' ?};

{? _nazwisko='' || _nazwisko:=AI.getErpPar('nazwisko') ?};
{? _nazwisko=~~ || _nazwisko:='' ?};

_co_dalej:=AI.getErpPar('co_dalej');
{? _co_dalej=~~ || _co_dalej:='' ?};

{? +_co_dalej
|| _akcjaTmp:=exec('co_dalej_akcja','genius_pkd',_co_dalej);
   {? ~+_path |
      (_akcjaTmp='badania lekarskie' &
      (~(_path*'badania') | (_path*'nieaktualne' & ~(_co_dalej*'nieaktualne')) |
      (_path*'kończące_się' & ~(_co_dalej*'kończące_się')))) |
      (_akcjaTmp='nieobecności' &
      (~(_path*'nieobecności') | (_path*'WSZYSTKIE' & ~(_co_dalej*'WSZYSTKIE')) |
      (_path*'CHOROBA' & ~(_co_dalej*'CHOROBA')) | (_path*'URLOP' & ~(_co_dalej*'URLOP'))))
   || _path:=exec('getPathFromAction','genius_pkd',_co_dalej)
   ?};
   _akcja:=_akcjaTmp
|? +_akcja
|| {? ~+_path || _path:=exec('getPathFromAction','genius_pkd',_akcja) ?};
   _akcja:=exec('co_dalej_akcja','genius_pkd',_akcja)
?};

{? _akcja='capabilities'
|| return(exec('capabilities','genius_pkd'))
|? _akcja='koniec'
|| return(exec('sayonara','genius_pkd'))
?};

{? _akcja<>'nieobecności' & _akcja<>'stan rodzinny' & _akcja<>'ogólne' &
   _akcja<>'badania lekarskie'
|| return(exec('confused','genius_pkd'))
?};

{? var_pres('_erp')>0 || return(_erp) ?};

:: sprawdzenie czy w intencji określono już ścieżkę
{? _akcja='nieobecności' & _path<>''
|| {? _path='WSZYSTKIE_nieobecności' | _path='CHOROBA_nieobecności' | _path='URLOP_nieobecności' | _path='nieobecności'
   || {? _pracownikLicz='jeden' | +_nazwisko
      || _path:='%1_%2'[_path,'pracownik']
      |? _pracownikLicz='wiele'
      || _path:='%1_%2'[_path,'ogólnie']
      ?}
   ?};
   {? _path='WSZYSTKIE_nieobecności_ogólnie' | _path='CHOROBA_nieobecności_ogólnie' |
      _path='URLOP_nieobecności_ogólnie' |
      _path='nieobecności_pracownik' | _path='nieobecności_ogólnie' | _path='nieobecności'
   || _erpParams:=obj_new('path','formaWspolpracy','pracownikLicz','co_dalej','p_ref','nazwisko');
      _erpParams.formaWspolpracy:=_formaWspolpracy;
      _erpParams.pracownikLicz:=_pracownikLicz;
      _erpParams.nazwisko:=_nazwisko;
      _erpParams.p_ref:=_p_ref;
      _erpParams.co_dalej:=_co_dalej;
      {? _path='nieobecności_pracownik' | _path='nieobecności_ogólnie'
      || _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path,,_erpParams)
      || _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path,'many',_erpParams)
      ?};
      {? var_pres('_erp_path')>0
      || {?  var_pres('_erp')>0 || obj_del('_erp') ?};
         _erp:=_erp_path
      ?}
   ?}

::{? _akcja='nieobecności'
::|| {? (_pracownikLicz='jeden' & _path='') | +_nazwisko
::   || _path:='nieobecności_pracownik'
::   |? _pracownikLicz='wiele' & _path=''
::   || _path:='nieobecności_ogólnie'
::   ?}
|? _akcja='badania lekarskie' & (_path='kończące_się_badania_lekarskie' | _path='nieaktualne_badania_lekarskie')
|| {? _pracownikLicz='jeden' | +_nazwisko
   || {? _path='nieaktualne_badania_lekarskie'
      || _path:='nieaktualne_badania_pracownik'
      || _path:='kończące_się_badania_pracownik'
      ?}
   |? _pracownikLicz='wiele'
   || {? _path='nieaktualne_badania_lekarskie'
      || _path:='nieaktualne_badania_ogólnie'
      || _path:='kończące_się_badania_ogólnie'
      ?}
   ?}
|? _akcja='badania lekarskie' & _path=''
|| _choice:=
      {? (_pracownikLicz='jeden') | +_nazwisko
      || 'one'
      |? _pracownikLicz='wiele'
      || 'many'
      || ''
      ?};

   {? _choice<>''
:   || _erpParams:=obj_new('path','formaWspolpracy');
:      _erpParams.formaWspolpracy:=_formaWspolpracy;
:      _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path,_choice,_erpParams);
   || _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path,_choice);
      {? var_pres('_erp_path')>0
      || {?  var_pres('_erp')>0 || obj_del('_erp') ?};
         _erp:=_erp_path
      ?}
   ?}
?};

{? var_pres('_erp')>0 || return(_erp) ?};

:: Określenie formy współpracy
{? (_akcja='nieobecności' | _akcja='badania lekarskie' | _akcja='stan rodzinny') & _formaWspolpracy='' &
   ((_akcja<>'badania lekarskie' & _akcja<>'nieobecności') | (_path<>'' & _path<>'nieobecności'))
|| _erp_param:=exec('ask4Param','genius_pkd',_akcja,'formaWspolpracy',_path);
   {? var_pres('_erp_param')>0
   || {?  var_pres('_erp')>0 || obj_del('_erp') ?};
      _erp:=_erp_param
   ?}
?};
{? var_pres('_erp')>0 || return(_erp) ?};

{? ((_akcja='nieobecności' | _akcja='badania lekarskie') & _path='' & _nazwisko='') |
   (_akcja='badania lekarskie' & (_path='nieaktualne_badania_lekarskie' | _path='kończące_się_badania_lekarskie') &
      _nazwisko='') |
   (_akcja='nieobecności' & (_path='WSZYSTKIE_nieobecności' | _path='URLOP_nieobecności' |
   _path='CHOROBA_nieobecności') & _nazwisko='')
|| _erpParams:=obj_new('path','formaWspolpracy','pracownikLicz');
   _erpParams.formaWspolpracy:=_formaWspolpracy;
   _erpParams.pracownikLicz:=_pracownikLicz;
   _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path,,_erpParams);
:   _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path);
   {? var_pres('_erp_path')>0
   || {?  var_pres('_erp')>0 || obj_del('_erp') ?};
      _erp:=_erp_path
   ?}

|? (_akcja='nieobecności' & _path*'nieobecności_pracownik' &  _nazwisko='' & _p_ref='') |
   (_akcja='badania lekarskie' & (_path='nieaktualne_badania_pracownik' | _path='kończące_się_badania_pracownik' ) &
    _nazwisko='' & _p_ref='') |
   (_akcja='stan rodzinny' & _nazwisko='' & _p_ref='')
|| _erp:=exec('ask4nazwisko','genius_pkd',_formaWspolpracy)
?};

{? var_pres('_erp')>0 || return(_erp) ?};

{? (_akcja='nieobecności' & _path*'nieobecności_pracownik') |
    _akcja='stan rodzinny' |
   (_akcja='badania lekarskie' & (_path='nieaktualne_badania_pracownik' | _path='kończące_się_badania_pracownik'))
|| _erp_prac:=exec('ask4Pracownik','genius_pkd',_nazwisko,_p_ref,_path,_formaWspolpracy);
   {? var_pres('_erp_prac')>0
   || {?  var_pres('_erp')>0 || obj_del('_erp') ?};
      _erp:=_erp_prac
   ?}
?};

{? var_pres('_erp')>0 || return(_erp) ?};

{? _akcja='nieobecności'
|| _erp:=exec('nieobecnosci','genius_pkd',_path,_formaWspolpracy)
|? _akcja='stan rodzinny'
|| _erp:=exec('stan_rodzinny','genius_pkd',_formaWspolpracy)
|? _akcja='badania lekarskie'
|| _erp:=exec('badania_lekarskie','genius_pkd',_path,_formaWspolpracy)
|| {?  var_pres('_erp')>0 || obj_del('_erp') ?};
   _erp:=exec('confused','genius_pkd')
?};

:: jeżeli doszliśmy tu, to ustawiamy status interakcji na 1 i pytamy się co dalej
AI.setErpPar('co_dalej',~~);
_erp.interact.status:=1;
exec('erp_obj_add_question','genius_pkd',_erp);
_erp


\ask4Pracownik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Określenie pracownika na podstawie przekazanych parametrów
::   WE: _a [STRING] - nazwisko
::       _b [STRING] - wskazanie na rekord pracownika
::       _c [STRING] - wybrana ścieżka
::       [_d] [STRING] - forma współpracy (domyślnie 'P')
::   WY: obiekt _erp lub ~~
::----------------------------------------------------------------------------------------------------------------------
_nazwisko:={? var_pres('_a')=type_of('') || _a || '' ?};
   _p_ref:={? var_pres('_b')=type_of('') || _b || '' ?};
    _path:={? var_pres('_c')=type_of('') || _c || '' ?};
  _f_zatr:={? var_pres('_d')=type_of('') || _d || 'P' ?};

:: określenie wszystkich pracowników pasujących do przekazanego parametru
_sql_all:=''+"select P.REFERENCE as REF, NAZWISKO, PIERWSZE, T, IP
          from P join OSOBA using(P.OSOBA, OSOBA.reference)
          where "+
          {? +_p_ref
          || "P.REFERENCE='"+_p_ref+"'"
          || "UPPER(OSOBA.NAZWISKO) LIKE UPPER('"+_nazwisko+"')"
          ?};

:: sql pozostawiający tylko tych pracowników z tabeli :_a, którzy znajdują się również w tabeli :_b
_sql_join:=''+"
   select * from :_a join :_b using(:_a.REF,:_b.REF)
";

P.cntx_psh();
P.use('pracowni');
P.index('OSOBA');
P.prefix();
_P_ALL:=sql(_sql_all,_p_ref);
_P_DOST:=exec('dostepne_p','schemat','PKD',_f_zatr);
_P:=sql(_sql_join,_P_ALL,_P_DOST);
P.cntx_pop();
{? ~_P.first()
|| {? var_pres('_erp')>0 || obj_del('_erp') ?};
   _erp:=exec('erp_obj','genius_pkd',1,1,0);
   _erp.display_message:='Brak współpracownika o podanym nazwisku.';
   _erp.data[1].type:='link';
   _erp.data[1].values[1].icon:='bi info-circle-fill icon-size-lg';
   _erp.data[1].values[1].display_name:='';
   _erp.data[1].values[1].desc:='';
   _erp.data[1].values[1].link:='';
   return(_erp)
|? _P.size()>1
|| {? var_pres('_erp')>0 || obj_del('_erp') ?};
   _par:=obj_new('path','formaWspolpracy','nazwisko','p_ref');
   _par.path:=_path;
   _par.formaWspolpracy:=_f_zatr;
   _par.nazwisko:=_nazwisko;
   _erp:=exec('erp_obj','genius_pkd',_P.size(),1);
   _erp.display_message:='Wybierz współpracownika:';
   _ind:=1;
   P.cntx_psh();
   P.use('pracowni');
   P.index('OSOBA');
   P.prefix();
   {!
   |? {? P.seek(_P.REF)
      || _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-person-fill icon-size-lg';
         _erp.data[_ind].values[1].display_name:=exec('pracDesc','genius_pkd');
         _erp.data[_ind].values[1].desc:='';
         _par.p_ref:=_P.REF;
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
         _ind+=1
      ?};
      _P.next()
   !};
   P.cntx_pop();
   return(_erp)
|| AI.setErpPar('p_ref',_P.REF)
?};
~~


\ask4Path
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Określenie ścieżki działania
::   WE: _a [STRING] - wybrana akcja
::       [_b] [STRING] - wybrana ścieżka
::       [_c] [STRING] - liczba pracowników (one/many/)
::       [_d] [obj_new()] - parametry zapytania (musi zawierać 'path'!!!)
::   WY: obiekt _erp
::----------------------------------------------------------------------------------------------------------------------
 _akcja:={? var_pres('_a')=type_of('') || _a || '' ?};
  _path:={? var_pres('_b')=type_of('') || _b || '' ?};
_choice:={? var_pres('_c')=type_of('') || _c || '' ?};
   _par:={? var_pres('_d')=117
         || _d
         || _par1:=obj_new('path','co_dalej','p_ref');
            _par1.co_dalej:=AI.getErpPar('co_dalej');
            {? _par1.co_dalej=~~ || _par1.co_dalej:='' ?};
            _par1.p_ref:=AI.getErpPar('p_ref');
            {? _par1.p_ref=~~ || _par1.p_ref:='' ?};
            _par1
         ?};

{? AI.INTENT='pracownik.informacje'
|| {? _akcja='nieobecności'
   || {? _path='' | _path='nieobecności' | _path='nieobecności_pracownik' | _path='nieobecności_ogólnie'
      || _erp:=exec('erp_obj','genius_pkd',3,1);
         _erp.display_message:='Jaki rodzaj nieobecności chcesz zobaczyć?';
         _ind:=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-activity icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Choroba</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1_%2'['CHOROBA',_path];
         {? _par.co_dalej<>''
         || _par.co_dalej:='CHOROBA'
         ?};
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

         _ind+=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-brightness-high icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Urlop</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1_%2'['URLOP',_path];
         {? _par.co_dalej<>''
         || _par.co_dalej:='URLOP'
         ?};
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

         _ind+=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-files icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Wszystkie</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1_%2'['WSZYSTKIE',_path];
         {? _par.co_dalej<>''
         || _par.co_dalej:='WSZYSTKIE NIEOBECNOŚCI'
         ?};
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
         return(_erp)

      |? _path<>'' & _choice=''
      || _erp:=exec('erp_obj','genius_pkd',2,1);
         _erp.display_message:='Jaki zakres Cię interesuje?';
         _ind:=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-people-fill icon-size-lg';
         _erp.data[_ind].values[1].display_name:=
            '<b>Wszyscy %1</b>'[{? _par.formaWspolpracy='Z' || 'zleceniobiorcy' || 'pracownicy' ?}];
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1_%2'[_path,'ogólnie'];
         {? _par.pracownikLicz=''
         || _par.pracownikLicz:='wiele'
         ?};
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

         _ind+=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-person-fill icon-size-lg';
         _erp.data[_ind].values[1].display_name:=
            '<b>Wybrany %1</b>'[{? _par.formaWspolpracy='Z' || 'zleceniobiorca' || 'pracownik' ?}];
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1_%2'[_path,'pracownik'];
         {? _par.pracownikLicz=''
         || _par.pracownikLicz:='jeden'
         ?};
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
         return(_erp)

      || _erp:=exec('erp_obj','genius_pkd',2,1);
         _erp.display_message:='Jakie dane z wybranego okresu chcesz zobaczyć?';
         _ind:=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-bar-chart-fill icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Ogólną liczbę nieobecności</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1_%2'[_path,'stat'];
         _par.co_dalej:='';
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

::         _ind+=1;
::         _erp.data[_ind].type:='choice';
::         _erp.data[_ind].values[1].icon:='bi bi-person-fill icon-size-lg';
::         _erp.data[_ind].values[1].display_name:='<b>Nieobecności dotyczące wybranego współpracownika</b>';
::         _erp.data[_ind].values[1].desc:='';
::         _par.path:='nieobecności_pracownik';
::         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

         _ind+=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-people-fill icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Listę nieobecnych współpracowników</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1_%2'[_path,'list'];
         _par.co_dalej:='';
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
         return(_erp)
      ?}

   |? _akcja='badania lekarskie'
   || _erp:=exec('erp_obj','genius_pkd',2,1);

      _ind:=1;
      {? _path=''
      || _erp.display_message:='Jakie dane chcesz zobaczyć?';
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-hourglass-bottom icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Nieaktualne badania lekarskie</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:=
            {? _choice='many'
            || 'nieaktualne_badania_ogólnie'
            |? _choice='one'
            || 'nieaktualne_badania_pracownik'
            || 'nieaktualne_badania_lekarskie'
            ?};
         {? var_pres('co_dalej',_par)>0 & _par.co_dalej<>''
         || _par.co_dalej:='nieaktualne badania lekarskie'
         ?};
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

         _ind+=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-hourglass-split icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Kończące się badania lekarskie</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:=
            {? _choice='many'
            || 'kończące_się_badania_ogólnie'
            |? _choice='one'
            || 'kończące_się_badania_pracownik'
            || 'kończące_się_badania_lekarskie'
            ?};
         {? var_pres('co_dalej',_par)>0 & _par.co_dalej<>''
         || _par.co_dalej:='kończące się badania lekarskie'
         ?};
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
         return(_erp)
      |? _path<>''
      || _erp.display_message:='Jaki zakres Cię interesuje?';
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-people-fill icon-size-lg';
         _erp.data[_ind].values[1].display_name:=
            '<b>Wszyscy %1</b>'[{? _par.formaWspolpracy='Z' || 'zleceniobiorcy' || 'pracownicy' ?}];
         _erp.data[_ind].values[1].desc:='';
         _par.path:=
            {? _path='nieaktualne_badania_lekarskie'
            || 'nieaktualne_badania_ogólnie'
            |? _path='kończące_się_badania_lekarskie'
            || 'kończące_się_badania_ogólnie'
            ?};
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

         _ind+=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-person-fill icon-size-lg';
         _erp.data[_ind].values[1].display_name:=
            '<b>Wybrany %1</b>'[{? _par.formaWspolpracy='Z' || 'zleceniobiorca' || 'pracownik' ?}];
         _erp.data[_ind].values[1].desc:='';
         _par.path:=
            {? _path='nieaktualne_badania_lekarskie'
            || 'nieaktualne_badania_pracownik'
            |? _path='kończące_się_badania_lekarskie'
            || 'kończące_się_badania_pracownik'
            ?};
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
         return(_erp)
      ?}
   ?}

|? (AI.INTENT='koniec.umowy' | AI.INTENT='pracownik.zus' | AI.INTENT='praca.zdalna' | AI.INTENT='wnioski.urlopowe' |
    AI.INTENT='umowy.wspolpracownik' | AI.INTENT='nadgodziny.praca' | AI.INTENT='oddelegowania.zagraniczne') &
   ~(_path*'_współpracownik' | _path*'_pracownik' | _path*'_ogólnie' | _path*'|współpracownik|' | _path*'|ogólnie|')
:   ~(_path*'_ogólnie' | _path*'_współpracownik' | _path*'_pracownik')
|| {? _akcja='umowy o pracę' | _akcja='zgłoszenia do zus' | _akcja='praca zdalna' | _akcja='wnioski urlopowe' |
      _akcja='umowy współpracownika' | _akcja='nadgodziny' | _akcja='oddelegowania'
   || _erp:=exec('erp_obj','genius_pkd',2,1);
      _erp.display_message:='Jaki zakres Cię interesuje?';
      _ind:=1;
      _erp.data[_ind].type:='choice';
      _erp.data[_ind].values[1].icon:='bi bi-people-fill icon-size-lg';
      _erp.data[_ind].values[1].display_name:=
::         {? AI.INTENT='koniec.umowy'
::         || '<b>Wszyscy pracownicy</b>'
         {? AI.INTENT='pracownik.zus'
         || '<b>Wszyscy %1</b>'[{? _par.formaWspolpracy='Z' || 'zleceniobiorcy' || 'pracownicy' ?}]
         |? AI.INTENT='praca.zdalna' | AI.INTENT='wnioski.urlopowe' | AI.INTENT='umowy.wspolpracownik' |
            AI.INTENT='nadgodziny.praca' | AI.INTENT='oddelegowania.zagraniczne' | AI.INTENT='koniec.umowy'
         || '<b>Wszyscy %1</b>'[{? _par.formaWspolpracy='Z' || 'zleceniobiorcy'
                                |? _par.formaWspolpracy='P' || 'pracownicy'
                                || 'współpracownicy'
                                ?}]
         ?};
      _erp.data[_ind].values[1].desc:='';
      _par.path:=
::         {? AI.INTENT='koniec.umowy' || 'umowy_o_pracę_ogólnie'
         {? AI.INTENT='pracownik.zus' || 'zgłoszenia_do_zus_ogólnie'
         |? AI.INTENT='umowy.wspolpracownik' | AI.INTENT='nadgodziny.praca' | AI.INTENT='oddelegowania.zagraniczne' |
            AI.INTENT='koniec.umowy'
         || '%1|%2|'[_path,'ogólnie']
         || '%1_%2'[_path,'ogólnie']
         ?};
      _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

      _ind+=1;
      _erp.data[_ind].type:='choice';
      _erp.data[_ind].values[1].icon:='bi bi-person-fill icon-size-lg';
      _erp.data[_ind].values[1].display_name:=
::         {? AI.INTENT='koniec.umowy'
::         || '<b>Wybrany pracownik</b>'
         {? AI.INTENT='pracownik.zus'
         || '<b>Wybrany %1</b>'[{? _par.formaWspolpracy='Z' || 'zleceniobiorca' || 'pracownik' ?}]
         |? AI.INTENT='praca.zdalna' | AI.INTENT='wnioski.urlopowe' | AI.INTENT='umowy.wspolpracownik' |
            AI.INTENT='nadgodziny.praca' | AI.INTENT='oddelegowania.zagraniczne' | AI.INTENT='koniec.umowy'
         || '<b>Wybrany %1</b>'[{? _par.formaWspolpracy='Z' || 'zleceniobiorca'
                                |? _par.formaWspolpracy='P' || 'pracownik'
                                || 'współpracownik'
                                ?}]
         ?};
      _erp.data[_ind].values[1].desc:='';
      _par.path:=
::         {? AI.INTENT='koniec.umowy' || 'umowy_o_pracę_pracownik'
         {? AI.INTENT='pracownik.zus' || 'zgłoszenia_do_zus_pracownik'
         |? AI.INTENT='umowy.wspolpracownik' | AI.INTENT='nadgodziny.praca' | AI.INTENT='oddelegowania.zagraniczne' |
            AI.INTENT='koniec.umowy'
         || '%1|%2|'[_path,'współpracownik']
         || '%1_%2'[_path,'współpracownik']
         ?};
      _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
      return(_erp)
   ?}

::|? AI.INTENT='pracownik.zus'
::|| _erp:=exec('erp_obj','genius_pkd',2,1);
::   _erp.display_message:='Czy chcesz przygotować raport?';
::   _ind:=1;
::   _erp.data[_ind].type:='choice';
::   _erp.data[_ind].values[1].icon:='bi bi-check-lg icon-size-lg';
::   _erp.data[_ind].values[1].display_name:='Tak';
::   _erp.data[_ind].values[1].desc:='';
::   _par.path:=_path;
::   _par.co_dalej:='raport';
::   _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
::
::   _ind+=1;
::   _erp.data[_ind].type:='choice';
::   _erp.data[_ind].values[1].icon:='bi bi-x-lg icon-size-lg';
::   _erp.data[_ind].values[1].display_name:='Nie';
::   _erp.data[_ind].values[1].desc:='';
::   _par.path:=_path;
::   _par.co_dalej:='koniec';
::   _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
::   return(_erp)

|? AI.INTENT='uprawnienia.zawodowe'
|| {? _akcja='uprawnienia zawodowe'
   || {? _path=''
      || _erp:=exec('erp_obj','genius_pkd',3,1);

         _ind:=1;
         {? _path=''
         || _erp.display_message:='Jakie dane chcesz zobaczyć?';
            _erp.data[_ind].type:='choice';
            _erp.data[_ind].values[1].icon:='bi bi-hourglass-top icon-size-lg';
            _erp.data[_ind].values[1].display_name:='<b>Aktualne uprawnienia zawodowe</b>';
            _erp.data[_ind].values[1].desc:='';
            _par.path:='aktualne';
            _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

            _ind+=1;
            _erp.data[_ind].type:='choice';
            _erp.data[_ind].values[1].icon:='bi bi-hourglass-split icon-size-lg';
            _erp.data[_ind].values[1].display_name:='<b>Kończące się uprawnienia zawodowe</b>';
            _erp.data[_ind].values[1].desc:='';
            _par.path:='kończące';
            _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

            _ind+=1;
            _erp.data[_ind].type:='choice';
            _erp.data[_ind].values[1].icon:='bi bi-hourglass-bottom icon-size-lg';
            _erp.data[_ind].values[1].display_name:='<b>Nieaktualne uprawnienia zawodowe</b>';
            _erp.data[_ind].values[1].desc:='';
            _par.path:='nieaktualne';
            _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
            return(_erp)
         ?}

      || _ind:=1;

         UPR_ZAWK.cntx_psh();
         UPR_ZAWK.index('SYMBOL');
         UPR_ZAWK.prefix();
         _erp:=exec('erp_obj','genius_pkd',UPR_ZAWK.size()+1,1);

         {? UPR_ZAWK.first()
         || _erp.display_message:='Jakie uprawnienia chcesz zobaczyć?';
            {!
            |? _erp.data[_ind].type:='choice';
               _erp.data[_ind].values[1].icon:='bi bi-arrow-right-square icon-size-lg';
               _erp.data[_ind].values[1].display_name:='<b>%1</b>'[UPR_ZAWK.NAZWA];
               _erp.data[_ind].values[1].desc:='';
               _par.path:='%1_%2'[UPR_ZAWK.SYMBOL,_path];
               _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

               _ind+=1;
               UPR_ZAWK.next()
            !};
            _erp.data[_ind].type:='choice';
            _erp.data[_ind].values[1].icon:='bi bi-arrow-right-square icon-size-lg';
            _erp.data[_ind].values[1].display_name:='<b>Wszystkie</b>';
            _erp.data[_ind].values[1].desc:='';
            _par.path:='%1_%2'['EVERYTHING',_path];
            _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par)
         ?};

         UPR_ZAWK.cntx_pop();
         return(_erp)
      ?}
   ?}

|? AI.INTENT='wnioski.urlopowe'
|| {? _akcja='wnioski urlopowe'
   || _erp:=exec('erp_obj','genius_pkd',2,1);

      _ind:=1;
      {? _path='' | 1=1
      || _erp.display_message:='Jakie dane chcesz zobaczyć?';
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-file-earmark-x icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Niezaakceptowane wnioski urlopowe</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1%2'['niezaakceptowane',_path];
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

         _ind+=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-file-earmark-check icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Zaakceptowane wnioski urlopowe</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1%2'['zaakceptowane',_path];
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
         return(_erp)
      ?}
   ?}

|? AI.INTENT='praca.zdalna'
|| {? _akcja='praca zdalna'
   || _ind:=1;

      SLO_KOD.cntx_psh();
      SLO_KOD.index('KOD');
      SLO_KOD.prefix(exec('slo_typ','ext_slo','PPSFT'));
      _erp:=exec('erp_obj','genius_pkd',SLO_KOD.size()+1,1);

      {? SLO_KOD.first()
      || _erp.display_message:='Jakie dane chcesz zobaczyć?';
         {!
         |? _erp.data[_ind].type:='choice';
            _erp.data[_ind].values[1].icon:='bi bi-arrow-right-square icon-size-lg';
            _erp.data[_ind].values[1].display_name:='<b>%1</b>'[SLO_KOD.NAZWA];
            _erp.data[_ind].values[1].desc:='';
            _par.path:='%1%2'[SLO_KOD.KOD,_path];
            _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

            _ind+=1;
            SLO_KOD.next()
         !};
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-arrow-right-square icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Wszystkie</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1%2'['EVERYTHING',_path];
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par)
      ?};

      SLO_KOD.cntx_pop();
      return(_erp)
   ?}

|? AI.INTENT='umowy.wspolpracownik' | AI.INTENT='koniec.umowy'
|| {? _akcja='umowy współpracownika'
   || {? ~(_path*'|umowy_praca|' | _path*'|umowy_zlecenie|' | _path*'|umowy_razem|')
      || _erp:=exec('erp_obj','genius_pkd',3,1);

         _ind:=1;
         _erp.display_message:='Jaki rodzaj umów chcesz zobaczyć?';
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-file-earmark-text icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Umowy o pracę</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1|%2|'[_path,'umowy_praca'];
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

         _ind+=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-file-earmark-check icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Umowy cywilnoprawne</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1|%2|'[_path,'umowy_zlecenie'];
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

         _ind+=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-file-earmark icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Wszystkie umowy</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1|%2|'[_path,'umowy_razem'];
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
         return(_erp)

      |? ~(_path*'kończące' | _path*'aktywne' | _path*'nieaktywne' | _path*'wszystkie')
      || _erp:=exec('erp_obj','genius_pkd',3,1);

         _ind:=1;
         _erp.display_message:='Jakie zakres danych chcesz zobaczyć?';
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-hourglass-split icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Aktywne umowy</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1|%2|'[_path,'aktywne'];
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

         _ind+=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-hourglass-bottom icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Zakończone umowy</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1|%2|'[_path,'nieaktywne'];
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

::         _ind+=1;
::         _erp.data[_ind].type:='choice';
::         _erp.data[_ind].values[1].icon:='bi bi-hourglass-split icon-size-lg';
::         _erp.data[_ind].values[1].display_name:='<b>Kończące się umowy</b>';
::         _erp.data[_ind].values[1].desc:='';
::         _par.path:='%1|%2|'[_path,'kończące'];
::         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

         _ind+=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-hourglass icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Wszystkie umowy</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1|%2|'[_path,'wszystkie'];
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
         return(_erp)
      ?}
   ?}

|? AI.INTENT='nadgodziny.praca'
|| {? _akcja='nadgodziny'
   || {? ~(_path*'|rozliczone|' | _path*'|nierozliczone|' | _path*'|wszystkie|')
      || _erp:=exec('erp_obj','genius_pkd',3,1);

         _ind:=1;
         _erp.display_message:='Jakie nadgodziny chcesz zobaczyć?';
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-calendar2-check icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Rozliczone</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1|%2|'[_path,'rozliczone'];
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

         _ind+=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-calendar2-x icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Nierozliczone</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1|%2|'[_path,'nierozliczone'];
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

         _ind+=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-calendar2 icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Wszystkie</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1|%2|'[_path,'wszystkie'];
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
         return(_erp)
      ?}
   ?}

|? AI.INTENT='oddelegowania.zagraniczne'
|| {? _akcja='oddelegowania'
   || {? ~(_path*'|wybrane|' | _path*'|wszystkie|')
      || _erp:=exec('erp_obj','genius_pkd',2,1);

         _ind:=1;
         _erp.display_message:='Jaki zakres danych chcesz zobaczyć?';
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-check icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Wybrane państwo</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1|%2|'[_path,'wybrane'];
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

         _ind+=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-check-all icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>Wszystkie państwa</b>';
         _erp.data[_ind].values[1].desc:='';
         _par.path:='%1|%2|'[_path,'wszystkie'];
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

         return(_erp)
      ?}
   ?}
?};
~~


\makeLink4Par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Tworzy link dla przekazanego parametru. Link jest wykorzy
::   WE: _a  [DICT] - obiekt nazwany z parametrami stringowymi
::   WY: '' lub link
::----------------------------------------------------------------------------------------------------------------------
 _par:={? var_pres('_a')=117 || _a || return('') ?};

_link:='';

_names:=obj_ntab_names(_par);
{! _ind:=1 .. obj_len(_names)
|! {? _ind>1 || _link+=';' ?};
   _link+="AI.setErpPar('"+_names[_ind]+"','"+_par[_ind]+"')"
!};
{? +_link
|| {? AI.INTENT='koniec.umowy'
   || _link+=";exec('umowy_wspolpracownik','genius_pkd')"
:   || _link+=";exec('koniec_umowy','genius_pkd')"
   |? AI.INTENT='pracownik.zus'
   || _link+=";exec('pracownik_zus','genius_pkd')"
   |? AI.INTENT='send.sms.pracownik'
   || _link+=";exec('send_sms_pracownik','genius_pkd')"
   |? AI.INTENT='pracownik.zus'
   || _link+=";exec('pracownik_zus','genius_pkd')"
   |? AI.INTENT='uprawnienia.zawodowe'
   || _link+=";exec('uprawnienia_zawodowe','genius_pkd')"
   |? AI.INTENT='wnioski.urlopowe'
   || _link+=";exec('wnioski_urlopowe','genius_pkd')"
   |? AI.INTENT='praca.zdalna'
   || _link+=";exec('praca_zdalna','genius_pkd')"
   |? AI.INTENT='umowy.wspolpracownik'
   || _link+=";exec('umowy_wspolpracownik','genius_pkd')"
   |? AI.INTENT='nadgodziny.praca'
   || _link+=";exec('nadgodziny_praca','genius_pkd')"
   |? AI.INTENT='oddelegowania.zagraniczne'
   || _link+=";exec('oddelegowania','genius_pkd')"
   || _link+=";exec('informacje_pracownik','genius_pkd')"
   ?}
?};
_link


\getDates
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Pobranie dat z parametrów startDate i endDate.
::   WE:
::   WY: tabela tymczasowa z zakresem dat
::----------------------------------------------------------------------------------------------------------------------
_TAB:=tab_tmp(2,
   'TS_OD','REAL','Data od - time stamp',
   'TS_DO','REAL','Data do - time stamp',
   'DATA_OD','DATE','Data od',
   'DATA_DO','DATE','Data do',
   'TIME_OD','TIME','Godz od',
   'TIME_DO','TIME','Godz do'
);

:: zakładamy, że jest tyle samo parametrów startDate i endDate
_dateCount:=AI.getParCount('startDate');

{! _ind:=1 .. _dateCount
|! _startDate:=AI.getPar('startDate',_ind);
   _endDate:=AI.getPar('endDate',_ind);

   {? +_startDate | +_endDate
   || _TAB.blank(1);

      {? var_pres('_obj')>0 || obj_del(_obj) ?};
      _obj:=exec('iso_datetime_parse','#convert',_startDate);
      _TAB.DATA_OD:=_obj.date;
      _TAB.TIME_OD:=_obj.time;
      _TAB.TS_OD:=exec('create','#tm_stamp',_TAB.DATA_OD,_TAB.TIME_OD);

      {? var_pres('_obj')>0 || obj_del(_obj) ?};
      _obj:=exec('iso_datetime_parse','#convert',_endDate);
      _TAB.DATA_DO:=_obj.date;
      _TAB.TIME_DO:=_obj.time;
      _TAB.TS_DO:=exec('create','#tm_stamp',_TAB.DATA_DO,_TAB.TIME_DO);

      _TAB.add()
   ?}
!};
_TAB


\datesDesc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Zwraca opis zakresu dat
::   WE: _a [TABLE] - tabela z odczytanymi datami (zgodna z wynikiem funkcji \getDates/genius_pkd)
::   WY: '' lub napis
::----------------------------------------------------------------------------------------------------------------------
_result:='';
_TAB:={? var_pres('_a')=type_of(SYSLOG) || _a || return(_result) ?};

{? _TAB.first()
|| {!
   |? _result+='(%1 - %2)<br>'[$_TAB.DATA_OD,$_TAB.DATA_DO];
      _TAB.next()
   !}
?};
_result


\pracDesc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Zwraca opis pracownika (kontekst tabeli P musi być ustawiony
::----------------------------------------------------------------------------------------------------------------------
_result:='';
OSOBA.cntx_psh();
UD_SKL.cntx_psh();
STN.cntx_psh();
_result:='<b>%1 %2 (IP: %3, Teczka: %4, Wydział: %5, Stanowisko: %6)</b>'
         [P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,$P.IP,P.T,P.WYDZIAL().SYMBOL,P.ST().ST];
STN.cntx_pop();
UD_SKL.cntx_pop();
OSOBA.cntx_pop();
_result


\ask4nazwisko
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Zapytanie o nazwisko - interakcja.
::   WE: [_a] [STRING] - forma współpracy, (P/Z/W, domyślnie 'W' - współpracownik
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
_f_zatr:={? var_pres('_a')=type_of('') & 'P,Z,W'*_a || _a || 'W' ?};
_text:={? _f_zatr='P' || 'pracownika'
       |? _f_zatr='Z' || 'zleceniobiorcy'
       || 'współpracownika'
       ?};
_erp:=exec('erp_obj','genius');
_erp.display_message:='Podaj nazwisko %1:'[_text];
_erp.interact.status:=1;
_erp.interact.par[1].id:='nazwisko';
_erp.interact.par[1].for:=_erp.display_message;
_erp


\co_dalej_akcja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Zwraca informację o akcji jaka ma być podjęta na podstawie tego co wpisał użytkownik
::   WE: _a [STRING] - tekst wpisany przez użytkownika
::   WY: '' lub nazwa akcji
::----------------------------------------------------------------------------------------------------------------------
_akcja:='';
_co_dalej:={? var_pres('_a')=type_of('') || _a || return(_akcja) ?};

_co_dalej:=~-_co_dalej;

{? AI.INTENT='pracownik.informacje'
|| {? _co_dalej*'STAN RODZINNY' | _co_dalej*'STAN RODZINY' | _co_dalej*'RODZINA' | _co_dalej*'DZIECKO'
   || _akcja:='stan rodzinny'

   |? _co_dalej*'NIEOBECNOŚCI' | _co_dalej*'NIEOBECNOŚĆ' |
      _co_dalej*'CHOROBA' | _co_dalej*'CHOROBIE' | _co_dalej*'CHOROBĘ' | _co_dalej*'CHOROBY' |
      _co_dalej*'URLOP' | _co_dalej*'URLOPIE' | _co_dalej*'URLOPY'
   || _akcja:='nieobecności'

   |? _co_dalej*'BADANIA LEKARSKIE' | _co_dalej*'BADANIE LEKARSKIE' |
      _co_dalej*'NIEAKTUALNE BADANIA LEKARSKIE' | _co_dalej*'NIEAKTUALNE BADANIE LEKARSKIE' |
      _co_dalej*'NIEAKTUALNE BADANIA' | _co_dalej*'NIEAKTUALNE BADANIE' |
      _co_dalej*'KOŃCZĄCE SIĘ BADANIA LEKARSKIE' | _co_dalej*'KOŃCZĄCE SIĘ BADANIE LEKARSKIE' |
      _co_dalej*'KOŃCZĄCE SIĘ BADANIA' | _co_dalej*'KOŃCZĄCE SIĘ BADANIE' |
      _co_dalej*'KOŃCZĄCYMI SIĘ BADANIAMI LEKARSKIMI' | _co_dalej*'KOŃCZĄCYM SIĘ BADANIEM LEKARSKIM' |
      _co_dalej*'KOŃCZĄCYMI SIĘ BADANIAMI' | _co_dalej*'KOŃCZĄCYM SIĘ BADANIEM' |
      _co_dalej*'BADANIA' | _co_dalej*'BADANIE'
   || _akcja:='badania lekarskie'

::   |? _co_dalej*'TAK' | _co_dalej*'WYŚWIETL'
::   || _akcja:='capabilities'
   ?}

|? AI.INTENT='koniec.umowy' | AI.INTENT='umowy.wspolpracownik'
|| {? _co_dalej*'UMOWY' | _co_dalej*'UMOWA' | _co_dalej*'UMOWAMI' | _co_dalej*'UMOWĄ' | _co_dalej*'UMÓW' |
      _co_dalej*'PRACA' | _co_dalej*'PRACY' | _co_dalej*'PRACAMI' | _co_dalej*'PRACĄ' | _co_dalej*'PRAC' |
      _co_dalej*'ZLECENIA' | _co_dalej*'ZLECENIAMI' | _co_dalej*'ZLECENIEM' | _co_dalej*'ZLECENIE' |
      _co_dalej*'CYWILNOPRAWNA' | _co_dalej*'CYWILNOPRAWNYMI' | _co_dalej*'CYWILNOPRAWNĄ'
   || _akcja:='umowy współpracownika'
   ?};
   {? _co_dalej*'UMOWY O PRACE' | _co_dalej*'UMOWA O PRACĘ' |
      _co_dalej*'KONIEC UMOWY O PRACĘ' | _co_dalej*'KONIEC UMOWY' | _co_dalej*'KOŃCZĄCA SIĘ UMOWA' |
      _co_dalej*'KOŃCZĄCE SIĘ UMOWY'
   || _akcja:='umowy o pracę'

   |? _co_dalej*'POWIADOMIENIE' | _co_dalej*'POWIADOMIENIA' | _co_dalej*'WYŚLIJ POWIADOMIENIE' |
      _co_dalej*'WYŚLIJ POWIADOMIENIA' | _co_dalej*'TAK' | _co_dalej*'WYŚLIJ'
   || _akcja:='powiadomienia'
   ?}

|? AI.INTENT='pracownik.zus'
|| {? _co_dalej*'TAK' | _co_dalej*'WYGENERUJ' | _co_dalej*'OK' | _co_dalej*'ZATWIERDŹ' | _co_dalej*'RAPORT'
   || _akcja:='raport do zus'
   ?}

|? AI.INTENT='uprawnienia.zawodowe'
|| {? _co_dalej*'UPRAWNIENIA ZAWODOWE' | _co_dalej*'UPRAWNIENIE ZAWODOWE' | _co_dalej*'UPRAWNIENIEM ZAWODOWYM' |
      _co_dalej*'UPRAWNIEŃ ZAWODOWYCH' | _co_dalej*'UPRAWNIENIAMI ZAWODOWYMI' |
      _co_dalej*'UPRAWNIENIA' | _co_dalej*'UPRAWNIENIE' | _co_dalej*'UPRAWNIENIAMI' | _co_dalej*'UPRAWNIENIEM' |
      _co_dalej*'UPRAWNIEŃ' |
      _co_dalej*'CERTYFIKATY ZAWODOWE' | _co_dalej*'CERTYFIKATAMI ZAWODOWYMI' | _co_dalej*'CERTYFIKATEM ZAWODOWYM' |
      _co_dalej*'CERTYFIKATÓW ZAWODOWYCH' | _co_dalej*'CERTYFIKAT ZAWODOWY' |
      _co_dalej*'CERTYFIKATY' | _co_dalej*'CERTYFIKATAMI' | _co_dalej*'CERTYFIKATÓW' | _co_dalej*'CERTYFIKAT' |
      _co_dalej*'CERTYFIKATEM'
   || _akcja:='uprawnienia zawodowe'
   ?}

|? AI.INTENT='wnioski.urlopowe'
|| {? _co_dalej*'WNIOSKI URLOPOWE' | _co_dalej*'WNIOSEK URLOPOWY' | _co_dalej*'WNIOSKAMI URLOPOWYMI' |
      _co_dalej*'WNIOSKIEM URLOPOWYM' | _co_dalej*'WNIOSKÓW URLOPOWYCH' | _co_dalej*'WNIOSKU URLOPOWEGO' |
      _co_dalej*'WNIOSKI' | _co_dalej*'WNIOSEK' | _co_dalej*'WNIOSKAMI' | _co_dalej*'WNIOSKIEM' | _co_dalej*'WNIOSKÓW' |
      _co_dalej*'WNIOSKU'
   || _akcja:='wnioski urlopowe'

   |? _co_dalej*'POWIADOMIENIE' | _co_dalej*'POWIADOMIENIA' | _co_dalej*'WYŚLIJ POWIADOMIENIE' |
      _co_dalej*'WYŚLIJ POWIADOMIENIA'
   || _akcja:='powiadomienia'

   |? _co_dalej*'AKCEPTACJA' | _co_dalej*'AKCEPTACJE' | _co_dalej*'AKCEPTUJ' | _co_dalej*'ZAAKCEPTUJ' |
      _co_dalej*'WPROWADŹ' | _co_dalej*'WPROWADZENIE' | _co_dalej*'WPROWADŹ NIEOBECNOŚCI' |
      _co_dalej*'WPROWADŹ NIEOBECNOŚĆ' | _co_dalej*'ZAREJESTRUJ'
   || _akcja:='akceptacja'
   ?}

|? AI.INTENT='praca.zdalna'
|| {? _co_dalej*'PRACA POZA SIEDZIBĄ' | _co_dalej*'PRACUJĄCYCH POZA SIEDZIBĄ' | _co_dalej*'PRACUJĄ POZA SIEDZIBĄ' |
      _co_dalej*'POZA SIEDZIBĄ' |
      _co_dalej*'PRACA ZDALNA' | _co_dalej*'PRACY ZDALNEJ' |  _co_dalej*'PRACUJĄ ZDALNIE' | _co_dalej*'PRACĘ ZDALNĄ' |
      _co_dalej*'DELEGACJI' | _co_dalej*'DELEGACJA' | _co_dalej*'DELEGACJĘ' |
      _co_dalej*'KARMIENIE PIERSIĄ' | _co_dalej*'KARMIĄ PIERSIĄ' | _co_dalej*'KARMIENIU PIERSIĄ' |
      _co_dalej*'KARMIĄCYCH PIERSIĄ' | _co_dalej*'KARMIĄCYMI PIERSIĄ'
   || _akcja:='praca zdalna'
   ?}

|? AI.INTENT='nadgodziny.praca'
|| {? _co_dalej*'NADGODZINY' | _co_dalej*'NADGODZIN' | _co_dalej*'NADGODZINAMI' | _co_dalej*'NADGODZINACH' |
      _co_dalej*'ROZLICZONE' | _co_dalej*'ROZLICZONYMI' | _co_dalej*'ROZLICZONYCH' |
      _co_dalej*'NIEROZLICZONE' | _co_dalej*'NIEROZLICZONYMI' | _co_dalej*'NIEROZLICZONYCH' |
      _co_dalej*'WSZYSTKIE' | _co_dalej*'WSZYSTKIMI' | _co_dalej*'WSZYSTKICH'
   || _akcja:='nadgodziny'
   ?}

|? AI.INTENT='oddelegowania.zagraniczne'
|| {? _co_dalej*'ODDELEGOWANIA' | _co_dalej*'ODDELEGOWANIE' | _co_dalej*'ODDELEGOWANYCH' | _co_dalej*'ODDELEGOWANIAMI' |
      _co_dalej*'ODDELEGOWAŃ' | _co_dalej*'ODDELEGOWANIU' | _co_dalej*'ODDELEGOWANIACH'
   || _akcja:='oddelegowania'
   ?}
?};

{? _akcja=''
|| {? _co_dalej='TAK' | _co_dalej*'WYŚWIETL'
   || _akcja:='capabilities'

   |? _co_dalej='NIE' | _co_dalej*'KONIEC' | _co_dalej*'ZAKOŃCZ' | _co_dalej*'POMIŃ' | _co_dalej*'ANULUJ'
   || _akcja:='koniec'
   ?}
?};

_akcja


\capabilities_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Tekst z informacjami o możliwościach.
::   WE:
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
_capabilities:='';
{? AI.INTENT='pracownik.informacje'
|| _capabilities+='Mogę wyświetlić informacje na temat:';
   _capabilities+=
      '<ul>'
         '<li>badań lekarskich</li>'
            '<ul>'
               '<li>nieaktualnych</li>'
               '<li>kończących się</li>'
            '</ul>'
         '<li>nieobecności</li>'
         '<li>stanu rodzinnego</li>'
      '</ul>'
|? AI.INTENT='koniec.umowy'
|| _capabilities+='Oto co mogę dla Ciebie zrobić:';
   _capabilities+=
      '<ul>'
         '<li>wyświetlić informacje o kończących się umowach o pracę</li>'
         '<li>wysłać powiadomienia o kończących się umowach o pracę</li>'
      '</ul>'
|? AI.INTENT='pracownik.zus'
|| _capabilities+='Oto co mogę dla Ciebie zrobić:';
   _capabilities+=
      '<ul>'
         '<li>wyświetlić informacje o tym, kogo trzeba zgłosić do ZUS</li>'
         '<li>wygenerować raport zgłoszeniowy ZUS ZUA</li>'
      '</ul>'
?};
_capabilities


\capabilities
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Informacja o możliwościach.
::   WE:
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
AI.setErpPar('co_dalej',~~);
_erp:=exec('erp_obj','genius_pkd',2);
_erp.display_message:=exec('capabilities_txt','genius_pkd');
_erp.data[2].type:='label';
_erp.data[2].values[1].icon:='';
_erp.data[2].values[1].desc:='';
_erp.data[2].values[1].display_name:='Napisz jaki temat związany z wybranym pracownikiem Cię interesuje?';
_erp.interact.status:=1;
_erp


\sayonara
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Informacja o zakończeniu interakcji.
::   WE:
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
:: parametr ustawiony w sesji
_p_ref:=AI.getErpPar('p_ref');
{? _p_ref=~~ || _p_ref:='' ?};

_txt:={? +_p_ref
      || 'Skoro wiesz już wszystko o wybranym pracowniku, to czekam na następne polecenie...'
      || 'Skoro wiesz już wszystko o wybranym temacie, to czekam na następne polecenie...'
      ?};

AI.setErpPar('co_dalej',~~);
_erp:=exec('erp_obj','genius_pkd',1);
_erp.display_message:=_txt;
_erp.data[1].values[1].icon:='bi bi-emoji-wink';
_erp.interact.status:=0;
_erp


\confused
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Informacja o złej akcji.
::   WE:
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
AI.setErpPar('co_dalej',~~);
_erp:=exec('erp_obj','genius_pkd',1);
_erp.display_message:='Niestety ale nie zrozumiałem.<br> Spróbuj doprecyzować swoje pytanie.'
                      '</br>%1'[exec('capabilities_txt','genius_pkd')];
_erp.data[1].values[1].icon:='bi bi-emoji-dizzy icon-size-lg';
_erp.interact.status:=1;
_erp


\erp_obj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Zwraca pusty obiekt erp
::   WE: _a  [INTEGER] - rozmiar tablicy data (obsługa listy danych),
::      [_b] [DICT]    - rozmiar tablicy values dla kolejnych obiektów listy danych
::      [_c] [INTEGER] - czy kopiować status i parametry z obiektu AI? [0 - nie (domyślnie) / 1 - tak)
::       elementu tablicy data
::   WY: obiekt erp
::----------------------------------------------------------------------------------------------------------------------
_erp:=obj_new('sessionId','display_message','data','interact');
_erp.interact:=exec('erp_interact','genius');

_size_d:={? var_pres('_a')=type_of(0)          || _a || return(_erp)     ?};
_size_v:={? var_pres('_b')=type_of(obj_new(1)) || _b || obj_new(_size_d) ?};
_copyAI:={? var_pres('_c')=type_of(0)          || _c || 0                ?};

{? _ > 0 & _size_d > 0
|| _data:=obj_new(_size_d);
   {! _ind:=1.._size_d
   |! _data[_ind]:=obj_new('type','values');
      _size:={? var_pres('[%1]'[$_ind],_size_v)=1 || _size_v[_ind] || 1 ?};
      _data[_ind].values:=exec('erp_values','genius',_size)
   !};
   _erp.data:=_data
?};

{? _copyAI
|| _erp.interact.status:=AI.INTERACT.status;
   {! _ind:=1 .. obj_len(AI.INTERACT.par)
   |! _erp.interact.par[_ind].id:=AI.INTERACT.par[_ind].id;
      _erp.interact.par[_ind].for:=AI.INTERACT.par[_ind].for;
      _erp.interact.par[_ind].value:=AI.INTERACT.par[_ind].value
   !}
?};

_erp


\erp_obj_add_question
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Dodaje rekord do elementu "data" obiektu "erp" z pytaniem co dalej
::   WE: _a [OBJECT] - obiekt z danymi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_erp:={? var_pres('_a')=117 || _a || return() ?};
:_f_zatr:={? var_pres('_b')=type_of('') & 'P,Z'*_b || _b || 'P' ?};

:: parametr ustawiony w sesji
_p_ref:=AI.getErpPar('p_ref');
{? _p_ref=~~ || _p_ref:='' ?};

_txt:=
   {? AI.INTENT='pracownik.informacje'
   || {? +_p_ref
      || 'Czy chcesz wyświetlić jeszcze jakieś informacje o wybranym współpracowniku w analizowanym okresie?'
      || 'Czy chcesz wyświetlić jeszcze jakieś informacje w analizowanym okresie?'
      ?}
   ?};

_size_d:=obj_len(_erp.data)+1;
_data:=obj_new(_size_d);
{! _ind:=1..(_size_d-1)
|! _data[_ind]:=_erp.data[_ind]
!};

_data[_size_d]:=obj_new('type','values');
_data[_size_d].values:=exec('erp_values','genius',1);
_data[_size_d].type:='label';
_data[_size_d].values[1].icon:='';
_data[_size_d].values[1].display_name:='</br>%1'[_txt];
_data[_size_d].values[1].desc:='';
obj_del(_erp.data);
_erp.data:=_data;
_erp


\nieobecnosci
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Wyszukuje nieobecności pracownika w zakresie podanych dat
::   WE: _a   [STRING] - wybrana ściażka
::       [_b] [STRING] - wybrana forma współpracy (P/Z, domyślnie P)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_f_zatr:={? var_pres('_b')=type_of('') & 'P,Z'*_b || _b || 'P' ?};

_TAB:=exec('getDates','genius_pkd');
_datesDesc:=exec('datesDesc','genius_pkd',_TAB);

_erp:=exec('erp_obj','genius_pkd',1,1);

_chk_role:="
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_OPNN') |
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_ORNN')
";
_chk_access:="
   exec('dostepna_a','f_zatr',_a,'PKD_EZK_OPNN') |
   exec('dostepna_a','f_zatr',_a,'PKD_EZK_ORNN') |
   exec('dostepna_a','f_zatr',_a,'PPL_ZLC_PNIE') |
   exec('dostepna_a','f_zatr',_a,'PPL_ZLC_RNIE')
";
:: Kontrola uprawnień do przeglądania nieobecności
{? ~_chk_role()
|| _erp.display_message:='Niestety nie masz uprawnień do przeglądania nieobecności.'@;
   return(_erp)
|? ~_chk_access(_f_zatr)
|| _erp.display_message:='Niestety przeglądanie nieobecności nie jest dostępne dla wybranej formy współpracy.'@;
   return(_erp)
?};

_erp.display_message:='Nie znaleziono nieobecności.'+
{? _TAB.size()=1
||'<br> Badany okres to: <br>%1'[_datesDesc]
||'<br> Badane okresy to: <br>%1'[_datesDesc]
?};
_erp.data[1].type:='label';
_erp.data[1].values[1].icon:='bi bi-info-circle-fill icon-size-lg';

_path:={? var_pres('_a')=type_of('') || _a || return(_erp) ?};

{? _path<>'nieobecności_pracownik' & _path<>'nieobecności_ogólnie' &
   _path<>'URLOP_nieobecności_pracownik' & _path<>'URLOP_nieobecności_pracownicy' &
   _path<>'URLOP_nieobecności_ogólnie_stat' & _path<>'URLOP_nieobecności_ogólnie_list' &
   _path<>'CHOROBA_nieobecności_pracownik' & _path<>'CHOROBA_nieobecności_pracownicy' &
   _path<>'CHOROBA_nieobecności_ogólnie_stat' & _path<>'CHOROBA_nieobecności_ogólnie_list' &
   _path<>'WSZYSTKIE_nieobecności_pracownik' & _path<>'WSZYSTKIE_nieobecności_pracownicy' &
   _path<>'WSZYSTKIE_nieobecności_ogólnie_stat' & _path<>'WSZYSTKIE_nieobecności_ogólnie_list'
|| return(_erp)
?};

:: Ustalenie rodzaju nieobecności
_pat:=obj_new(4);
_rep:=obj_new(4);
_pat[1]:='_nieobecności_pracownik'; _pat[2]:='_nieobecności_pracownicy';
_pat[3]:='_nieobecności_ogólnie_stat'; _pat[4]:='_nieobecności_ogólnie_list';
_rep[1]:=''; _rep[2]:=''; _rep[3]:=''; _rep[4]:='';
_typeOfN:=gsub(_path,_pat,_rep);
obj_del(_pat,_rep);
_rub:={? _typeOfN='WSZYSTKIE' || 1
      |? _typeOfN='URLOP' || 11
      |? _typeOfN='CHOROBA' || 126
      || 1
      ?};
:__RUB.sys_attr(7158,11)

_l_nieob:=0;
_NIEOB:=tab_tmp(,
   'RN','INTEGER','Nr rubryki',
   'RT','STRING['+$MS.fld_len('R','RT')+']','Nazwa rubryki',
   'COUNT','INTEGER','Liczba wystąpień'
);
_PRAC:=tab_tmp(1,
   'REF','INTEGER','Pracownik'
);

P.cntx_psh();
OSOBA.cntx_psh();
P.use('pracowni');
N.cntx_psh();
F_ZATR.cntx_psh();

{? _path*'nieobecności_pracownik'
|| _p_ref:=AI.getErpPar('p_ref');
   _p_ref:=exec('FindAndGet','#table',P,_p_ref,,,null());
   N.index('NIEOBECN');
   N.prefix('N',_p_ref)
|? _path*'nieobecności_ogólnie_list'
|| N.index('NIEOBECN');
   {? P.f_active() || P.f_clear() ?};
   _P:=exec('dostepne_p','schemat','PKD',{? +_f_zatr || _f_zatr || '*' ?});
   P.f_set(,,'P.REFERENCE in (select :_a.REF from :_a)',_P)
|| N.index('NIOSOBNB');
   N.prefix('N',REF.FIRMA)
?};

:: Przetwarzanie nieobecności w kontekście pracownika lub jako statystyka
{? ~(_path*'nieobecności_ogólnie_list')
||
   {? N.first()
   || {? _path*'nieobecności_pracownik'
      || _erp_N:=exec('erp_obj','genius_pkd',N.size());
::       podczytanie pracownika
         N.P();
         _pracDesc:=exec('pracDesc','genius_pkd');
         _txt:={? _f_zatr='Z' || 'zleceniobiorcy' || 'pracownika' ?};
         _erp_N.display_message:='Nieobecności %1 %2: '@[_txt,_pracDesc]
      ?};
      _ind:=1;

::    przeglądamy nieobecności w przekazanych okresach
      {!
      |? {? _TAB.first()
         || {!
            |? _jest:=0;
               {? N.P().F_ZATR().KOD=_f_zatr & N.DO>=_TAB.DATA_OD & N.OD<=_TAB.DATA_DO &
                  __RUB.sys_attr(N.NB().RN,_rub)>0
               || {? _path*'nieobecności_pracownik'
                  || _erp_N.data[_ind].type:='link';
                     _erp_N.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
                     _erp_N.data[_ind].values[1].display_name:='%1 %2 <br>(%3 - %4)'[$N.NB().RN,N.NB().RT,$N.OD,$N.DO];
                     _erp_N.data[_ind].values[1].desc:='';
                     _erp_N.data[_ind].values[1].link:=
                        exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',N.uidref()))
                  || {? _NIEOB.find_tab(,'RN',,'=',N.NB().RN)
                     || _NIEOB.COUNT+=1;
                        _NIEOB.put(1)
                     || _NIEOB.RN:=R.RN;
                        _NIEOB.RT:=R.RT;
                        _NIEOB.COUNT:=1;
                        _NIEOB.add(1)
                     ?}
                  ?};
                  _jest:=1;
                  _l_nieob+=1;
                  _ind+=1
               ?};
               ~_jest & _TAB.next()
            !}
         ?};
         N.next()
      !};
      {? _path*'nieobecności_ogólnie_stat'
      || _erp_N:=exec('erp_obj','genius_pkd',1);
         _erp_N.display_message:='Statystyki dla nieobecności w okresie %1'@[_datesDesc]  ;
         _erp_N.data[1].type:='label';
         _erp_N.data[1].values[1].icon:='bi bi-dot icon-size-lg';
         _erp_N.data[1].values[1].display_name:='</br>'
            '<ul>'
               '<li>Łączna liczba nieobecności: <b>%1</b></li>'[$_l_nieob]+
               {? _NIEOB.first()
               || _opis:='<ul>';
                  {!
                  |? _opis+='<li>%1 - %2: <b>%3</b></li>'[$_NIEOB.RN,_NIEOB.RT,$_NIEOB.COUNT];
                     _NIEOB.next()
                  !};
                  _opis+='</ul>';
                  _opis
               || ''
               ?}+
            '</ul>';
         _erp_N.data[1].values[1].desc:='';
         _erp_N.data[1].values[1].link:=''
      ?}
   ?}

:: Przetwarzanie nieobecności w kontekście wielu pracowników
|| {? P.f_first()
   || _erp_N:=exec('erp_obj','genius_pkd',P.f_size());
      _txt:={? _f_zatr='Z' || 'zleceniobiorców' || 'pracowników' ?};
      _type:={? _typeOfN='URLOP' || 'na urlopie'
             |? _typeOfN='CHOROBA' || 'na chorobie'
             || 'nieobecnych'
             ?};
      _erp_N.display_message:='Lista %1 %2 w okresie %3 '@[_txt,_type,_datesDesc];
      _ind:=1;

      {!
      |? N.prefix('N',P.ref);
         {? N.first()
         || {!
            |? {? _TAB.first()
               || {!
                  |? _jest:=0;
                     {? N.P().F_ZATR().KOD=_f_zatr & N.DO>=_TAB.DATA_OD & N.OD<=_TAB.DATA_DO &
                        __RUB.sys_attr(N.NB().RN,_rub)>0
                     || {? ~_PRAC.find_key(#N.P)
                        || _erp_N.data[_ind].type:='link';
                           _erp_N.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
                           _erp_N.data[_ind].values[1].display_name:='%1'[exec('pracDesc','genius_pkd')];
                           _erp_N.data[_ind].values[1].desc:='';
                           _erp_N.data[_ind].values[1].link:='#';
                           _PRAC.REF:=#N.P;
                           _PRAC.add()
                        ?};
                        _jest:=1;
                        _l_nieob+=1;
                        _ind+=1
                     ?};
                     ~_jest & _TAB.next()
                  !}
               ?};
               ~_PRAC.find_key(#N.P) & N.next()
            !}
         ?};
         P.f_next()
      !}
   ?}
?};

{? _path*'nieobecności_ogólnie_list'
|| {? P.f_active() || P.f_clear() ?}
?};

F_ZATR.cntx_pop();
N.cntx_pop();
OSOBA.cntx_pop();
P.cntx_pop();

{? _l_nieob=0
|| _erp
|| _erp_N
?}


\stan_rodzinny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Wyszukuje stan rodzinny pracownika w zakresie podanych dat
::   WE: [_a] [STRING] - wybrana forma współpracy (P/Z, domyślnie P)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_f_zatr:={? var_pres('_a')=type_of('') & 'P,Z'*_a || _a || 'P' ?};
exec('config','genius_pkd');
:: Kontrola uprawnień do przeglądania stanu rodzinnego
_chk_role:="
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_DOS_PPRD') |
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_DOS_PRRO')
";
_chk_access:="
   exec('dostepna_a','f_zatr',_a,'PKD_DOS_PPRD') |
   exec('dostepna_a','f_zatr',_a,'PKD_DOS_PRRO')
";
{? ~_chk_role()
|| _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Niestety nie masz uprawnień do przeglądania stanu rodzinnego.'@;
   return(_erp)
|? ~_chk_access(_f_zatr)
|| _erp.display_message:='Niestety przeglądanie stanu rodzinnego nie jest dostępne dla wybranej formy współpracy.'@;
   return(_erp)
?};

_l_rd:=0;
_TAB:=exec('getDates','genius_pkd');
_p_ref:=AI.getErpPar('p_ref');
_p_ref:=exec('FindAndGet','#table',P,_p_ref,,,null());

P.cntx_psh();
P.use('pracowni');
P.prefix();
S_ZUS.cntx_psh();
RD.cntx_psh();
RD.index('_RODZINA');
{? P.seek(_p_ref)
|| RD.prefix(P.OSOBA);
   {? RD.first()
   || _datesDesc:=exec('datesDesc','genius_pkd',_TAB);
      _pracDesc:=exec('pracDesc','genius_pkd');
      _erp:=exec('erp_obj','genius_pkd',RD.size());
      _erp.display_message:='Stan rodzinny współpracownika %1 w okresie %2</br></br>'
         [_pracDesc, _datesDesc];
      _ind:=1;
::    przeglądamy stan rodzinny w przekazanych okresach
      {!
      |?
         {? _TAB.first()
         || {!
            |? _jest:=0;
               {? RD.UZOD<=_TAB.DATA_DO & (RD.UZDO<=_TAB.DATA_DO | RD.UZOD=#0)
               || _erp.data[_ind].type:='link';
                  _erp.data[_ind].values[1].desc:='<ul><li>%1 %2 %3 (%7):'
                     '</br>- data urodzenia: %4'
                     '</br>- data zgłoszenia: %5'
                     '</br>- data wyrejestrowania: %6</li></ul>'
                     [RD.NA,RD.IM,RD.IMD,$RD.DA,$RD.UZOD,$RD.UZDO,RD.STPK().LINIA];
                  _erp.data[_ind].values[1].display_name:='więcej';
                  _erp.data[_ind].values[1].link:=
                        exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',RD.uidref()));
                  _l_rd:=_jest:=1;
                  _ind+=1
               ?};
               ~_jest & _TAB.next()
            !}
         ?};
         RD.next()
      !}
   ?}
|| _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='';
   _erp.data[1].type:='label';
   _erp.data[1].values[1].icon:='bi bi-exclamation-diamond icon-size-lg';
   _erp.data[1].values[1].display_name:='Nie udało się ustawić kontekstu współpracownika.';
   _erp.data[1].values[1].desc:='';
   _erp.data[1].values[1].link:='';
   _l_rd+=1
?};
RD.cntx_pop();
S_ZUS.cntx_pop();
P.cntx_pop();

{? _l_rd=0
|| {? var_pres('_erp')>0 || obj_del(_erp) ?};
   _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Nie znaleziono danych dotyczących stanu rodzinnego.';
   _erp.data[1].type:='label';
   _erp.data[1].values[1].icon:='bi bi-info-circle-fill icon-size-lg';
   _erp.data[1].values[1].display_name:='';
   _erp.data[1].values[1].desc:='';
   _erp.data[1].values[1].link:=''
?};
_erp


\badania_lekarskie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Wyszukuje pracowników z nieaktualnymi/kończącymi się badaniami w podanym okresie
::   WE: _a [STRING] - wybrana ścieżka (path)
::       [_b] [STRING] - wybrana forma współpracy (P/Z, domyślnie P)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_f_zatr:={? var_pres('_b')=type_of('') & 'P,Z'*_b || _b || 'P' ?};

exec('config','genius_pkd');
_erp:=exec('erp_obj','genius_pkd',1,1);

:: Kontrola uprawnień do przeglądania badań lekarskich
_chk_role:="
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_OPBL') |
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_ORBL')
";
_chk_access:="
   exec('dostepna_a','f_zatr',_a,'PKD_EZK_OPBL') |
   exec('dostepna_a','f_zatr',_a,'PKD_EZK_ORBL')
";
{? ~_chk_role()
|| _erp.display_message:='Niestety nie masz uprawnień do przeglądania badań lekarskich.'@;
   return(_erp)
|? ~_chk_access(_f_zatr)
|| _erp.display_message:='Niestety przeglądanie badań lekarskich nie jest dostępne dla wybranej formy współpracy.'@;
   return(_erp)
?};

_erp.display_message:='Nie znaleziono badań lekarskich.';
_erp.data[1].type:='label';
_erp.data[1].values[1].icon:='bi bi-info-circle-fill icon-size-lg';

_path:={? var_pres('_a')=type_of('') || _a || return(_erp) ?};

{? _path<>'nieaktualne_badania_pracownik' & _path<>'nieaktualne_badania_ogólnie' &
   _path<>'kończące_się_badania_pracownik' & _path<>'kończące_się_badania_ogólnie'
|| return(_erp)
?};

_startDate:=AI.getPar('startDate');
_endDate:=AI.getPar('endDate');
_date_from:=
   {? _startDate=''
   || {? _path*'nieaktualne' || date() || date() ?}
   || exec('iso_datetime_parse','#convert',_startDate).date
   ?};
_date_to:=
   {? _endDate=''
   || {? _path*'nieaktualne' || date() || date()+30 ?}
   || exec('iso_datetime_parse','#convert',_endDate).date
   ?};

_erp_BD:=
   {? _path*'nieaktualne'
   || exec('badania_lekarskie_nieaktualne','genius_pkd',_path,_date_from,_date_to,_f_zatr)
   || exec('badania_lekarskie_konczace','genius_pkd',_path,_date_from,_date_to,_f_zatr)
   ?};

_erp_BD


\badania_lekarskie_nieaktualne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Wyszukuje pracowników z nieaktualnymi badaniami lekarskimi w podanym okresie
::   WE: _a [STRING] - path
::       _b [DATE] - data od
::       _c [DATE] - data do
::       [_d] [STRING] - wybrana forma współpracy (P/Z, domyślnie P)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_f_zatr:={? var_pres('_d')=type_of('') & 'P,Z'*_d || _d || 'P' ?};
_path:=_a;
_startDate:=_b;
_endDate:=_c;
_today:=date();
_controlDate:=_endDate;

_counter:=0;
_correct:=_total_correct:=0;
_incorrect:=_total_incorrect:=0;

P.cntx_psh();
P.use('pracowni');
P.prefix();
OSOBA.cntx_psh();
UD_SKL.cntx_psh();
UD_SKL.prefix();
STN.cntx_psh();
STN.prefix();
SLO_KOD.cntx_psh();
BDO.cntx_psh();
BDO.index('PDTO');

{? P.f_active() || P.f_clear() ?};
{? _path='nieaktualne_badania_pracownik'
|| _p_ref:=AI.getErpPar('p_ref');
   _p_ref:=exec('FindAndGet','#table',P,_p_ref,,,null());
   P.f_set(,,'P.REFERENCE=:_a',_p_ref)
|? _path='nieaktualne_badania_ogólnie'
|| _P:=exec('dostepne_p','schemat','PKD',_f_zatr,'T');
   P.f_set(,,'P.REFERENCE in (select :_a.REF from :_a)',_P)
?};

{? P.f_first() & _controlDate<>date(0,0,0)
|| _erp_BD:=exec('erp_obj','genius_pkd',P.f_size());
   _ind:=1;

   {!
   |? _counter+=1;
      _correct:=0;
      _incorrect:=0;
      BDO.prefix(P.ref);
      {? BDO.last()
      || {!
         |? _continue:=0;
            _bdo_do:={? BDO.DTUZ=#0 || BDO.DTNB || BDO.DTUZ ?};
            {? '|WSTĘPNE|OKRES|KONTROL|'*('|%1|'[BDO.TYP().KOD])
            ||
::             Aktualne badania
               {? BDO.DTO<=_controlDate & _bdo_do>=_controlDate
               || {? _path='nieaktualne_badania_pracownik'
                  || _erp_BD.display_message:='Nie znaleziono danych dotyczących nieaktualnych badań lekarskich.'
                  ?};
                  _correct+=1;
                  _total_correct+=1

::             Nieaktualne badania
               |? _bdo_do<_controlDate
               ||
::                Nieaktualne badania dla pracownika
                  {? _path='nieaktualne_badania_pracownik'
                  || _erp_BD.display_message:=
                        'Badania lekarskie pracownika %1 są nieaktualne na dzień %2.<br>Informacje o ostatnim badaniu:'
                        [exec('pracDesc','genius_pkd'),_controlDate$6];
                     _erp_BD.data[_ind].type:='link';
                     _erp_BD.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
                     _erp_BD.data[_ind].values[1].display_name:=
                        'Data orzeczenia: %1<br>Data kolejnego badania: %2'
                        [$BDO.DTO,$BDO.DTNB];
                     _erp_BD.data[_ind].values[1].desc:='';
                     _erp_BD.data[_ind].values[1].link:=
                        exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',BDO.uidref()))

::                Nieaktualne badania dla wszystkich pracowników
                  |? _path='nieaktualne_badania_ogólnie'
                  || {? ~_total_incorrect
                     || _erp_BD.display_message:='Badania lekarskie pracowników nieaktualne na dzień %1:'
                           [_controlDate$6]
                     ?};
                     _erp_BD.data[_ind].type:='link';
                     _erp_BD.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
                     _erp_BD.data[_ind].values[1].display_name:=
                        '%1<br>Data orzeczenia: %2<br>Data kolejnego badania: %3'
                        [exec('pracDesc','genius_pkd'),$BDO.DTO,$BDO.DTNB];
                     _erp_BD.data[_ind].values[1].desc:='';
                     _erp_BD.data[_ind].values[1].link:=
                        exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',BDO.uidref()))
                  ?};
                  _incorrect+=1;
                  _total_incorrect+=1

::             Wprowadzone badania, jeszcze nie obowiązujące
               |? BDO.DTO>_controlDate
               || _continue:=BDO.prev()
               ?}
            || _continue:=BDO.prev()
            ?};
            _continue
         !}
      ?};
      {? ~_correct & ~_incorrect
      || {? _path='nieaktualne_badania_pracownik'
         || _erp_BD.display_message:='Pracownik %1 nie ma wprowadzonych badań lekarskich.'
               [exec('pracDesc','genius_pkd')]

         |? _path='nieaktualne_badania_ogólnie'
         || {? ~_total_incorrect
            || _erp_BD.display_message:='Badania lekarskie pracowników nieaktualne na dzień %1:'[_controlDate$6]
            ?};
            _erp_BD.data[_ind].type:='link';
            _erp_BD.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
            _erp_BD.data[_ind].values[1].display_name:=
               '%1<br>Brak badań lekarskich'
               [exec('pracDesc','genius_pkd')];
            _erp_BD.data[_ind].values[1].desc:='';
            _erp_BD.data[_ind].values[1].link:='#'
         ?};
         _incorrect+=1;
         _total_incorrect+=1

      ?};
      _ind+=1;
      P.f_next()
   !}
?};

{? _counter=_total_correct
|| {? ~_counter
   || _erp_BD:=exec('erp_obj','genius_pkd',1,1)
   ?};

   {? _path='nieaktualne_badania_ogólnie'
   || _erp_BD.display_message:='Nie znaleziono danych dotyczących nieaktualnych badań lekarskich.';
      _erp_BD.data[1].type:='label';
      _erp_BD.data[1].values[1].icon:='bi bi-info-circle-fill icon-size-lg';
      _erp_BD.data[1].values[1].display_name:='';
      _erp_BD.data[1].values[1].desc:='';
      _erp_BD.data[1].values[1].link:=''
   ?}
?};

{? P.f_active() || P.f_clear() ?};

BDO.cntx_pop();
SLO_KOD.cntx_pop();
STN.cntx_pop();
UD_SKL.cntx_pop();
OSOBA.cntx_pop();
P.cntx_pop();

_erp_BD


\badania_lekarskie_konczace
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Wyszukuje pracowników z kończącymi się badaniami lekarskimi w podanym okresie
::   WE: _a [STRING] - path
::       _b [DATE] - data od
::       _c [DATE] - data do
::       [_d] [STRING] - wybrana forma współpracy (P/Z, domyślnie P)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_f_zatr:={? var_pres('_d')=type_of('') & 'P,Z'*_d || _d || 'P' ?};
_path:=_a;
_date_from:=_b;
_date_to:=_c;
_today:=date();
_validDate:=1;
_employment:='T';

_d0:=date(0,0,0);
_counter:=_ind:=0;

P.cntx_psh();
P.use('pracowni');
P.prefix();

{? P.f_active() || P.f_clear() ?};
{? _path='kończące_się_badania_pracownik'
|| _p_ref:=AI.getErpPar('p_ref');
   _p_ref:=exec('FindAndGet','#table',P,_p_ref,,,null());
   P.f_set(,,'P.REFERENCE=:_a',_p_ref)
|? _path='kończące_się_badania_ogólnie'
|| _P:=exec('dostepne_p','schemat','PKD',_f_zatr,'T');
   P.f_set(,,'P.REFERENCE in (select :_a.REF from :_a)',_P)
?};

{? P.f_first() & _validDate
|| _erp_BD:=exec('erp_obj','genius_pkd',P.f_size());
   _ind:=1;

   OSOBA.cntx_psh();
   OSOBA.prefix();
   UD_SKL.cntx_psh();
   UD_SKL.prefix();
   STN.cntx_psh();
   STN.prefix();
   SLO_KOD.cntx_psh();
   SLO_KOD.prefix();
   S_ZUS.cntx_psh();
   S_ZUS.prefix();
   BDO.cntx_psh();
   BDO.index('PDTO');

   {!
   |? BDO.prefix(P.ref());
      P.OSOBA();
      {? (_date_to=_d0 | P.DZA<=_date_to) & (P.DZ=_d0 | _date_from<=P.DZ | (_employment='T' & P.DZ>=date())) &
         BDO.last()
      || _okr:=1;
         _od:=_do:=_d0;
         {!
         |? {? '|WSTĘPNE|OKRES|KONTROL|'*('|%1|' [BDO.TYP().KOD])=0
            || BDO.prev()

            |? _okr=1
            || _okr+=1;
               _od:=BDO.DTO;
               _do:=BDO.DTZ;
               _opis:=BDO.TYP().NAZWA;
               _uidref:=BDO.uidref();
               {? BDO.WYNIK().KOD='21'
               || BDO.prev()
               ?}

            |? _okr=2
            || {? BDO.WYNIK().KOD<>'21' & _od<=BDO.DTZ & BDO.DTZ<_do
               || _do:=BDO.DTZ
               ?};
               0
            ?}
         !};
         {? _do<>_d0 & P.DZA<=_do & (P.DZ=_d0 | _do<=P.DZ | _employment='T') & _date_from<=_do &
            (_date_to=_d0 | _do<=_date_to)
         ||
::          Kończące się badania dla pracownika
            {? _path='kończące_się_badania_pracownik'
            || _erp_BD.display_message:=
                  'Badania lekarskie pracownika %1, których ważność kończy się w okresie od %2 do %3:'
                  [exec('pracDesc','genius_pkd'),_date_from$6,_date_to$6];
               _erp_BD.data[_ind].type:='link';
               _erp_BD.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
               _erp_BD.data[_ind].values[1].display_name:=
                  'Data orzeczenia: %1<br>Data kolejnego badania: %2'
                  [$_od,$_do];
               _erp_BD.data[_ind].values[1].desc:='';
               _erp_BD.data[_ind].values[1].link:=
                  exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',_uidref));
               _counter+=1

::          Kończące się badania dla wszystkich pracowników
            |? _path='kończące_się_badania_ogólnie'
            || {? ~_counter
               || _erp_BD.display_message:=
                     'Badania lekarskie pracowników, których ważność kończy się w okresie od %1 do %2:'
                     [_date_from$6,_date_to$6]
               ?};
               _erp_BD.data[_ind].type:='link';
               _erp_BD.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
               _erp_BD.data[_ind].values[1].display_name:=
                  '%1<br>Data orzeczenia: %2<br>Data kolejnego badania: %3'
                  [exec('pracDesc','genius_pkd'),$_od,$_do];
               _erp_BD.data[_ind].values[1].desc:='';
               _erp_BD.data[_ind].values[1].link:=
                  exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',_uidref));
               _counter+=1
            ?};
            _ind+=1
         ?}
      ?};
      P.f_next()
   !};

   BDO.cntx_pop();
   S_ZUS.cntx_pop();
   SLO_KOD.cntx_pop();
   STN.cntx_pop();
   UD_SKL.cntx_pop();
   OSOBA.cntx_pop()
?};

{? ~_counter
|| {? ~_ind || _erp_BD:=exec('erp_obj','genius_pkd',1,1) ?};
   _erp_BD.display_message:='Nie znaleziono danych dotyczących kończących się badań lekarskich.'
?};

{? P.f_active() || P.f_clear() ?};
P.cntx_pop();
_erp_BD


\config
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Powołanie wymaganych obiektów do obsługi bota
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('PAR_SKID','object');
exec('__F_ZATR','object');
exec('__RUB','object');
{? REF.FIRMA=null()
|| REF.FIRMA:=exec('firma_ref','#firma',app_info('app_ident'))
?};
{? OPERATOR.USER=null()
|| OPERATOR.USER:=exec('users','#users',exec('operatorKod','#users'))
?}


\getPathFromAction
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Zwraca informację o ścieżce na podstawie nazwy akcji wprowadzonej przez użytkownika
::   WE: _a [STRING] - nazwa akcji
::   WY: '' lub ścieżka
::----------------------------------------------------------------------------------------------------------------------
_action:={? var_pres('_a')=type_of('') || ~-_a || return('') ?};
_path:='';

{? AI.INTENT='pracownik.informacje'
||
:: Nieobecności
   {? _action*'WSZYSTKIE NIEOBECNOŚCI' | _action*'WSZYSTKICH NIEOBECNOŚCI'
   || _path:='WSZYSTKIE_nieobecności'

   |? _action*'NIEOBECNOŚCI' | _action*'NIEOBECNOŚCI' | _action*'NIEOBECNOŚĆ'
   || _path:='nieobecności'

   |? _action*'URLOP' | _action*'URLOPIE' | _action*'URLOPY'
   || _path:='URLOP_nieobecności'

   |? _action*'CHOROBA' | _action*'CHOROBIE' | _action*'CHOROBY' | _action*'CHOROBĘ'
   || _path:='CHOROBA_nieobecności'

:: Nieaktualne badania lekarskie
   |? _action*'NIEAKTUALNE BADANIA LEKARSKIE' | _action*'NIEAKTUALNE BADANIE LEKARSKIE' |
      _action*'NIEAKTUALNE BADANIA' | _action*'NIEAKTUALNE BADANIE' |
      _action*'NIEAKTUALNYCH BADANIACH' | _action*'NIEAKTUALNYCH BADAŃ' |
      _action*'NIEAKTUALNYMI BADANIAMI' | _action*'NIEAKTUALNYM BADANIEM'
   || _path:='nieaktualne_badania_lekarskie'

:: Kończące się badania lekarskie
   |? _action*'KOŃCZĄCE SIĘ BADANIA LEKARSKIE' | _action*'KOŃCZĄCE SIĘ BADANIE LEKARSKIE' |
      _action*'KOŃCZĄCE SIĘ BADANIA' | _action*'KOŃCZĄCE SIĘ BADANIE' |
      _action*'KOŃCZĄCYMI SIĘ BADANIAMI' | _action*'KOŃCZĄCYM SIĘ BADANIEM' |
      _action*'KOŃCZĄCYCH SIĘ BADANIACH' | _action*'KOŃCZĄCYM SIĘ BADANIU'
   || _path:='kończące_się_badania_lekarskie'
   ?}

|? AI.INTENT='uprawnienia.zawodowe'
|| {? _action*'NIEAKTUALNE' | _action*'NIEAKTUALNYCH' | _action*'NIEAKTUALNYMI' | _action*'NIEAKTUALNYM' |
      _action*'NIEAKTUALNY'
   || _path:='nieaktualne'

   |? _action*'AKTUALNE' | _action*'AKTUALNYCH' | _action*'AKTUALNYMI' | _action*'AKTUALNYM' | _action*'AKTUALNY'
   || _path:='aktualne'

   |? _action*'KOŃCZĄCE SIĘ' | _action*'KOŃCZĄCYMI SIĘ' | _action*'KOŃCZĄCYM SIĘ' | _action*'KOŃCZĄCYCH SIĘ' |
      _action*'KOŃCZĄCY SIĘ' |
      _action*'KOŃCZĄCE' | _action*'KOŃCZĄCYMI' | _action*'KOŃCZĄCYM' | _action*'KOŃCZĄCYCH' | _action*'KOŃCZĄCY'
   || _path:='kończące'
   ?}

|? AI.INTENT='wnioski.urlopowe'
|| {? _action*'NIEZAAKCEPTOWANE WNIOSKI URLOPOWE' | _action*'NIEZAAKCEPTOWANY WNIOSEK URLOPOWY' |
      _action*'NIEZAAKCEPTOWANE WNIOSKI' | _action*'NIEZAAKCEPTOWANY WNIOSEK' |
      _action*'NIEZAAKCEPTOWANYCH WNIOSKACH' | _action*'NIEZAAKCEPTOWANYCH WNIOSKÓW' |
      _action*'NIEZAAKCEPTOWANYMI WNIOSKAMI' | _action*'NIEZAAKCEPTOWANYM WNIOSKIEM'
   || _path:='niezaakceptowane'

   |? _action*'ZAAKCEPTOWANE WNIOSKI URLOPOWE' | _action*'ZAAKCEPTOWANY WNIOSEK URLOPOWY' |
      _action*'ZAAKCEPTOWANE WNIOSKI' | _action*'ZAAKCEPTOWANY WNIOSEK' |
      _action*'ZAAKCEPTOWANYMI WNIOSKAMI' | _action*'ZAAKCEPTOWANYM WNIOSKIEM' |
      _action*'ZAAKCEPTOWANYCH WNIOSKACH' | _action*'ZAAKCEPTOWANYM WNIOSKIEM'
   || _path:='zaakceptowane'
   ?}

|? AI.INTENT='praca.zdalna'
|| {? _action*'PRACA ZDALNA' | _action*'PRACY ZDALNEJ' | _action*'PRACĄ ZDALNĄ' | _action*'PRACUJĄ ZDALNIE' |
      _action*'PRACĘ ZDALNĄ' | _action*'PRACE ZDALNE'
   || _path:='ZDALNA'

   |? _action*'DELEGACJA' | _action*'DELEGACJI' | _action*'DELEGACJĘ' | _action*'DELEGACJĄ' | _action*'DELEGACJE' |
      _action*'DELEGACJACH'
   || _path:='DELEGAC'

   |? _action*'KARMIENIE PIERSIĄ' | _action*'KARMIĄ PIERSIĄ' | _action*'KARMIENIU PIERSIĄ' |
      _action*'KARMIĄCYCH PIERSIĄ' | _action*'KARMIĄCYMI PIERSIĄ'
   || _path:='KAR_PIER'
   ?}

|? AI.INTENT='umowy.wspolpracownik' | AI.INTENT='koniec.umowy'
|| _path:='';
   {? _action*'UMOWA O PRACĘ' | _action*'UMOWY O PRACĘ' | _action*'UMOWĘ O PRACĘ' | _action*'UMOWĄ O PRACĘ' |
      _action*'PRACA' | _action*'PRACĘ' | _action*'PRACY' |
::    Specjalna obsługa, robimy wyjątek dla kończących się umów, bo tylko obsługujemy umowy o pracę
      (_action*'UMOWA' & _action*'KOŃCZĄCE')
   || _path:='%1|%2|'[_path,'umowy_praca']
   |? _action*'UMOWA ZLECENIE' | _action*'UMOWĘ ZLECENIE' | _action*'UMOWY ZLECENIA' |
      _action*'ZLECENIE' | _action*'ZLECENIA' | _action*'CYWILNOPRAWNA'
   || _path:='%1|%2|'[_path,'umowy_zlecenie']
   ?};
   {? _action*'KOŃCZĄCE' | _action*'KOŃCZY' | _action*'KONIEC' | _action*'KOŃCZĄCYCH' | _action*'KOŃCZĄCYMI'
   || _path:='%1|%2|'[_path,'kończące']
   |? _action*'NIEAKTYWNE' | _action*'NIEAKTYWNYCH' | _action*'NIEAKTYWNYMI' | _action*'NIEAKTUALNE' |
      _action*'NIEAKTUALNYCH' | _action*'NIEAKTUALNYMI'
   || _path:='%1|%2|'[_path,'nieaktywne']
   |? _action*'AKTYWNE' | _action*'AKTYWNYCH' | _action*'AKTYWNYMI' | _action*'AKTUALNE' | _action*'AKTUALNYCH' |
      _action*'AKTUALNYMI' | _action*'OBOWIĄZUJĄCE' | _action*'OBOWIĄZUJĄCYCH' | _action*'OBOWIĄZUJĄCYMI'
   || _path:='%1|%2|'[_path,'aktywne']
   |? _action*'WSZYSTKIE' | _action*'WSZYSTKICH' | _action*'WSZYSTKIMI'
   || _path:='%1|%2|'[_path,'wszystkie']
   ?}

|? AI.INTENT='nadgodziny.praca'
|| _path:='';
   {? _action*'NIEROZLICZONE' | _action*'NIEROZLICZONYCH' | _action*'NIEROZLICZONYMI'
   || _path:='%1|%2|'[_path,'nierozliczone']
   |? _action*'ROZLICZONE' | _action*'ROZLICZONYCH' | _action*'ROZLICZONYMI'
   || _path:='%1|%2|'[_path,'rozliczone']
   |? _action*'WSZYSTKIE' | _action*'WSZYSTKICH' | _action*'WSZYSTKIMI'
   || _path:='%1|%2|'[_path,'wszystkie']
   ?}
?};

_path


\umowy_o_prace
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Wyszukuje pracowników z kończącymi się umowami o pracę w podanym okresie
::   WE: [_path] [STRING] - path
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('config','genius_pkd');
_erp:=exec('erp_obj','genius_pkd',1,1);

:: Kontrola uprawnień do przeglądania umów o pracę
_chk_role:="
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_PPZA') |
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_RPZA')
";
{? ~_chk_role()
|| _erp.display_message:='Niestety nie masz uprawnień do przeglądania umów o pracę.'@;
   return(_erp)
?};

_erp.display_message:='Nie znaleziono kończących się umów o pracę.';

_path:={? var_pres('_a')=type_of('') || _a || return(_erp) ?};

:{? _path<>'umowy_o_pracę_pracownik' & _path<>'umowy_o_pracę_ogólnie'
{? ~(_path*'|umowy_praca|' & _path*'|kończące|' & (_path*'|współpracownik|' | _path*'|ogólnie|'))
|| return(_erp)
?};

_date_from:=
   {? AI.getPar('startDate')=''
   || date()
   || exec('iso_datetime_parse','#convert',AI.getPar('startDate')).date
   ?};
_date_to:=
   {? AI.getPar('endDate')=''
   || date(0,0,0)
   || exec('iso_datetime_parse','#convert',AI.getPar('endDate')).date
   ?};

_counter:=_ind:=0;

P.cntx_psh();
P.use('pracowni');
P.prefix();

{? P.f_active() || P.f_clear() ?};
:{? _path='umowy_o_pracę_pracownik'
{? _path*'|współpracownik|'
|| _p_ref:=AI.getErpPar('p_ref');
   _p_ref:=exec('FindAndGet','#table',P,_p_ref,,,null());
   P.f_set(,
      'left join F_ZATR using(P.F_ZATR,F_ZATR.REFERENCE)',
      'P.REFERENCE=:_a and F_ZATR.KOD=\'P\'',_p_ref
   )
:|? _path='umowy_o_pracę_ogólnie'
|? _path*'|ogólnie|'
|| _P:=exec('dostepne_p','schemat','PKD','P');
   P.f_set(,,'P.REFERENCE in (select :_a.REF from :_a)',_P)
?};

{? P.f_first()
|| _erp_UOP:=exec('erp_obj','genius_pkd',P.f_size());
   _ind:=1;
   _where:=$(
      {? _date_to<>date(0,0,0)
      || '_a<=H.DO & H.DO<=_b'
      || '_a<=H.DO'
      ?}
   );
   _message:=
      {? _date_to=date(0,0,0)
      || 'po %1 r.'@ [_date_from$6]
      |? _date_from=_date_to
      || '%1 r.'@ [_date_from$6]
      || 'w okresie od %1 r. do %2 r.'@ [_date_from$6,_date_to$6]
      ?};

   OSOBA.cntx_psh();
   OSOBA.prefix();
   UD_SKL.cntx_psh();
   UD_SKL.prefix();
   STN.cntx_psh();
   STN.prefix();
   RU.cntx_psh();
   RU.prefix();
   H_UM.cntx_psh();
   H_UM.use('h_um');
   H_UM.prefix();
   H.cntx_psh();
   H.use('_hist');
   H.index('_HISTKOD');

   {!
   |? H.prefix(P.ref(),'Z',);
      P.OSOBA();
      {? H.last() & H.RU().K<>'C' & _where(_date_from,_date_to)
      ||
::       Pobranie listy przełożonych dla pracownika
         _superiors:='';
         _superiorsAll:=exec('show_kier','stanprac',P.ref,,,,,,1);
         {? _superiorsAll.first()
         || {!
            |? _level:=_superiorsAll.L;
               _superiors+=
                  '%1 %2 (IP: %3, Teczka: %4), '
                  [_superiorsAll.NAZWISKO,_superiorsAll.IMIE,$_superiorsAll.ID,_superiorsAll.T];
               _superiorsAll.next() & _superiorsAll.L=_level
            !}
         ?};
         obj_del(_superiorsAll);
         _superiors:={? _superiors<>'' || _superiors-2 || 'Brak' ?};

::       Kończące się umowy o pracę dla pracownika
:         {? _path='umowy_o_pracę_pracownik'
         {? _path*'|współpracownik|'
         || _erp_UOP.display_message:='Umowa o pracę pracownika %1 kończąca się %2:'
               [exec('pracDesc','genius_pkd'),_message];
            _erp_UOP.data[_ind].type:='link';
            _erp_UOP.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
            _erp_UOP.data[_ind].values[1].display_name:=
               'Przełożony: %1<br>Data rozpoczęcia: %2<br>Data zakończenia: %3'[_superiors,$H.UMOWA().OD,$H.DO];
            _erp_UOP.data[_ind].values[1].desc:='';
            _erp_UOP.data[_ind].values[1].link:=
               exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',H_UM.uidref()));
            _counter+=1

::       Kończące się umowy o pracę dla wszystkich pracowników
:         |? _path='umowy_o_pracę_ogólnie'
         |? _path*'|ogólnie|'
         || {? ~_counter
            || _erp_UOP.display_message:='Umowy o pracę pracowników kończące się %1:'[_message]
            ?};
            _erp_UOP.data[_ind].type:='link';
            _erp_UOP.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
            _erp_UOP.data[_ind].values[1].display_name:=
               '%1<br>Przełożony: %2<br>Data rozpoczęcia: %3<br>Data zakończenia: %4'
               [exec('pracDesc','genius_pkd'),_superiors,$H.UMOWA().OD,$H.DO];
            _erp_UOP.data[_ind].values[1].desc:='';
            _erp_UOP.data[_ind].values[1].link:=
               exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',H_UM.uidref()));
            _counter+=1
         ?};
         _ind+=1
      ?};
      P.f_next()
   !};

   H.cntx_pop();
   H_UM.cntx_pop();
   RU.cntx_pop();
   STN.cntx_pop();
   UD_SKL.cntx_pop();
   OSOBA.cntx_pop()
?};

{? ~_counter
|| {? ~_ind || _erp_UOP:=exec('erp_obj','genius_pkd',1,1) ?};
   _erp_UOP.display_message:='Nie znaleziono danych dotyczących kończących się umów o pracę.';
   _erp_UOP.interact.status:=0
|| _erp_UOP.interact.status:=1
?};

{? P.f_active() || P.f_clear() ?};

P.cntx_pop();

_erp_UOP


\koniec_umowy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Obsługuje informacje zwrotne nt kończących się umów o pracę.
::   WE:
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
:: upewnienie się, że jesteśmy w dobrej intencji
{? AI.INTENT<>'koniec.umowy'
|| FUN.info('Błąd wywołania intencji');
   return(exec('erp_obj','genius'))
?};
exec('config','genius_pkd');

:: parametry wymagane
_startDate:=AI.getPar('startDate');
_endDate:=AI.getPar('endDate');

:: parametry opcjonalne
     _akcjaUmowy:=AI.getPar('akcjaUmowy');
_waznoscDokumentu:=AI.getPar('waznoscDokumentu');
_nazwisko:=AI.getPar('nazwisko');
_imie:=AI.getPar('imie');
_idPracownika:=AI.getPar('idPracownika');
_pracownikLicz:=AI.getPar('pracownikLicz');
::_formaWspolpracy:=AI.getPar('formaWspolpracy');

:: parametry ustawione w sesji
_p_ref:=AI.getErpPar('p_ref');
{? _p_ref=~~ || _p_ref:='' ?};

_path:=AI.getErpPar('path');
{? _path=~~ || _path:='' ?};
{? +_path || AI.setErpPar('path',_path) ?};

{? _nazwisko='' || _nazwisko:=AI.getErpPar('nazwisko') ?};
{? _nazwisko=~~ || _nazwisko:='' ?};

::{? _formaWspolpracy='' || _formaWspolpracy:=AI.getErpPar('formaWspolpracy') ?};
::{? _formaWspolpracy=~~ || _formaWspolpracy:='' ?};

_co_dalej:=AI.getErpPar('co_dalej');
{? _co_dalej=~~ || _co_dalej:='' ?};

{? +_co_dalej
|| _akcja:=exec('co_dalej_akcja','genius_pkd',_co_dalej)
|| _akcja:='umowy o pracę'
?};

{? _akcja='capabilities'
|| return(exec('capabilities','genius_pkd'))
|? _akcja='koniec'
|| return(exec('sayonara','genius_pkd'))
?};

{? _akcja<>'umowy o pracę' & _akcja<>'powiadomienia'
|| return(exec('confused','genius_pkd'))
?};

{? var_pres('_erp')>0 || return(_erp) ?};

:: sprawdzenie czy w intencji określono już ścieżkę
{? _akcja='umowy o pracę' | _akcja='powiadomienia'
|| {? (_pracownikLicz='jeden' & _path='') | +_nazwisko
   || _path:={? _akcja='powiadomienia' || 'powiadomienia_pracownik' || 'umowy_o_pracę_pracownik' ?}
   |? _pracownikLicz='wiele' & _path=''
   || _path:={? _akcja='powiadomienia' || 'powiadomienia_ogólnie' || 'umowy_o_pracę_ogólnie' ?}
   ?}
?};

{? _akcja='umowy o pracę' & _path='' & _nazwisko=''
|| _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path);
   {? var_pres('_erp_path')>0
   || {?  var_pres('_erp')>0 || obj_del('_erp') ?};
      _erp:=_erp_path
   ?}
|? _akcja='umowy o pracę' & _path='umowy_o_pracę_pracownik' & _nazwisko='' & _p_ref=''
|| _erp:=exec('ask4nazwisko','genius_pkd','P')
?};

{? var_pres('_erp')>0 || return(_erp) ?};

::{? _akcja='umowy o pracę' & _formaWspolpracy=''
::|| _erp:=exec('ask4Param','genius_pkd',_akcja,'formaWspolpracy',_path);
::   {? var_pres('_erp_path')>0
::   || {?  var_pres('_erp')>0 || obj_del('_erp') ?};
::      _erp:=_erp_path
::   ?}
::?};
::{? var_pres('_erp')>0 || return(_erp) ?};

{? _path='umowy_o_pracę_pracownik'
|| _erp_prac:=exec('ask4Pracownik','genius_pkd',_nazwisko,_p_ref,_path,'P');
   {? var_pres('_erp_prac')>0
   || {?  var_pres('_erp')>0 || obj_del('_erp') ?};
      _erp:=_erp_prac
   ?}
?};

{? var_pres('_erp')>0 || return(_erp) ?};

{? _akcja='umowy o pracę'
|| _erp:=exec('umowy_o_prace','genius_pkd',_path)
|? _akcja='powiadomienia'
|| _erp:=exec('umowy_o_prace_powiadomienia','genius_pkd',_path)
|| {? var_pres('_erp')>0 || obj_del('_erp') ?};
   _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Podaj jakie informacje o wybranym pracowniku Cię interesują:';
   _erp.data[1].type:='link';
   _erp.data[1].values[1].icon:='bi bi-question-circle-fill icon-size-lg';
   _erp.data[1].values[1].display_name:='';
   _erp.data[1].values[1].desc:='';
   _erp.data[1].values[1].link:=''
?};

:: jeżeli doszliśmy tu, to ustawiamy status interakcji na 1 i pytamy się co dalej
AI.setErpPar('co_dalej',~~);
{? _erp.interact.status<>0
|| _erp.interact.status:=1;
   exec('choose_what_next','genius_pkd',_erp)
|| _erp.interact.status:=0
?};
_erp


\umowy_o_prace_powiadomienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Wysyła powiadomienia z informacją o kończących się umowach o pracę w podanym okresie
::   WE: _a [STRING] - path
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('config','genius_pkd');
_erp:=exec('erp_obj','genius_pkd',1,1);

:: Kontrola uprawnień do przeglądania umów o pracę
_chk_role:="
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_AKUM')
";
{? ~_chk_role()
|| _erp.display_message:='Niestety nie masz uprawnień do wysyłania powiadomień o kończących się umowach o pracę.'@;
   return(_erp)
?};

_erp.display_message:='Nie znaleziono kończących się umów o pracę.';

_path:={? var_pres('_a')=type_of('') || _a || return(_erp) ?};

:{? _path<>'powiadomienia_pracownik' & _path<>'powiadomienia_ogólnie'
{? ~(_path*'|powiadomienia|' & (_path*'|pracownik|' | _path*'|ogólnie|'))
|| return(_erp)
?};

_date_from:=
   {? AI.getPar('startDate')=''
   || date()
   || exec('iso_datetime_parse','#convert',AI.getPar('startDate')).date
   ?};
_date_to:=
   {? AI.getPar('endDate')=''
   || date(0,0,0)
   || exec('iso_datetime_parse','#convert',AI.getPar('endDate')).date
   ?};

_where:='';
:{? _path='powiadomienia_pracownik'
{? _path*'|pracownik|'
|| _p_ref:=AI.getErpPar('p_ref');
   _p_ref:=exec('FindAndGet','#table',P,_p_ref,,,null());
   _where:='"P".REFERENCE=\'%1\''[$_p_ref]
:   _where:='P.REFERENCE=%1 and F_ZATR.KOD=\'P\''[_p_ref]
:|? _path='powiadomienia_ogólnie'
:|| _P:=exec('dostepne_p','schemat','PKD','P','T')
:   _where:='P.REFERENCE in (select \''+$_P+'\'.REF from \''+$_P+'\')'
:   _where:='P.REFERENCE in (select "'+(!_P)+'".REF from "'+(!_P)+'"'
:   _where:="'P.REFERENCE in (select '+!_a+'.REF from '+!_a+''"(_P)
?};

exec('H_UM_send_mail','genius_pkd',_date_from,_date_to,_where);

_erp_UOP:=exec('erp_obj','genius_pkd',1,1);
_erp_UOP.display_message:='Zakończono przygotowanie powiadomień o kończących się umowach o pracę.';

_erp_UOP


\H_UM_send_mail
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: wysyłanie powiadomień o kończących się umowach o pracę
::   WE: _a [DATE] - początkowa data rozpatrywanego okresu
::       _b [DATE] - końcowa data rozpatrywanego okresu
::       [_c] [STRING] - SQL WHERE
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_startDate:=_a;
_endDate:=_b;
_where:=_c;

{? var_press('__PARSES')<100 || exec('start_proces','b_proces',0) ?};
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='PKD_EZK_AKUM';
_params.PROC_START:='T';
_params.GRUPA:='N';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OD',_startDate);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'DO',_endDate);
:exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'SQL_FROM','');
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'SQL_WHERE',_where);
:exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ODB','K');

exec('mp_run','#b__box',_params);

title('Genius',,1);
1


\pracownik_zus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Obsługuje informacje zwrotne nt konieczności zgłoszenia do zus.
::   WE:
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
:: upewnienie się, że jesteśmy w dobrej intencji
{? AI.INTENT<>'pracownik.zus'
|| FUN.info('Błąd wywołania intencji');
   return(exec('erp_obj','genius'))
?};
exec('config','genius_pkd');

:: parametry wymagane
_startDate:=AI.getPar('startDate');
_endDate:=AI.getPar('endDate');

:: parametry opcjonalne
_formaWspolpracy:=AI.getPar('formaWspolpracy');
_nazwisko:=AI.getPar('nazwisko');
_imie:=AI.getPar('imie');
_pracownikLicz:={? _formaWspolpracy<>''
                || {? _formaWspolpracy*'Wiele' || 'wiele' || 'jeden' ?}
                || ''
                ?};

:: parametry ustawione w sesji
_p_ref:=AI.getErpPar('p_ref');
{? _p_ref=~~ || _p_ref:='' ?};

_path:=AI.getErpPar('path');
{? _path=~~ || _path:='' ?};
{? +_path || AI.setErpPar('path',_path) ?};

{? _formaWspolpracy='' || _formaWspolpracy:=AI.getErpPar('formaWspolpracy') ?};
{? _formaWspolpracy=~~ || _formaWspolpracy:='' || _formaWspolpracy:=~-(1+_formaWspolpracy) ?};

{? _nazwisko='' || _nazwisko:=AI.getErpPar('nazwisko') ?};
{? _nazwisko=~~ || _nazwisko:='' ?};

_co_dalej:=AI.getErpPar('co_dalej');
{? _co_dalej=~~ || _co_dalej:='' ?};

{? +_co_dalej
|| _akcja:=exec('co_dalej_akcja','genius_pkd',_co_dalej)
|| _akcja:='zgłoszenia do zus'
?};

{? _akcja='capabilities'
|| return(exec('capabilities','genius_pkd'))
|? _akcja='koniec'
|| return(exec('sayonara','genius_pkd'))
?};

{? _akcja<>'zgłoszenia do zus' & _akcja<>'raport do zus'
|| return(exec('confused','genius_pkd'))
?};

{? var_pres('_erp')>0 || return(_erp) ?};

:: sprawdzenie czy w intencji określono już ścieżkę
{? _akcja='zgłoszenia do zus'
|| {? (_pracownikLicz='jeden' & _path='') | +_nazwisko
   || _path:='zgłoszenia_do_zus_pracownik'
   |? (_pracownikLicz='wiele' | -_pracownikLicz='pracownicy') & _path=''
   || _path:='zgłoszenia_do_zus_ogólnie'
   ?}
?};

:: Określenie formy współpracy
{? _akcja='zgłoszenia do zus' & _formaWspolpracy=''
|| _erp_param:=exec('ask4Param','genius_pkd',_akcja,'formaWspolpracy',_path);
   {? var_pres('_erp_param')>0
   || {?  var_pres('_erp')>0 || obj_del('_erp') ?};
      _erp:=_erp_param
   ?}
?};
{? var_pres('_erp')>0 || return(_erp) ?};

{? _akcja='zgłoszenia do zus' & _path='' & _nazwisko=''
|| _erpParams:=obj_new('path','formaWspolpracy');
   _erpParams.formaWspolpracy:=_formaWspolpracy;
   _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path,,_erpParams);
   {? var_pres('_erp_path')>0
   || {?  var_pres('_erp')>0 || obj_del('_erp') ?};
      _erp:=_erp_path
   ?}

|? _akcja='zgłoszenia do zus' & _path='zgłoszenia_do_zus_pracownik' & _nazwisko='' & _p_ref=''
|| _erp:=exec('ask4nazwisko','genius_pkd',_formaWspolpracy)
?};

{? var_pres('_erp')>0 || return(_erp) ?};

{? _path='zgłoszenia_do_zus_pracownik'
|| _erp_prac:=exec('ask4Pracownik','genius_pkd',_nazwisko,_p_ref,_path,_formaWspolpracy);
   {? var_pres('_erp_prac')>0
   || {?  var_pres('_erp')>0 || obj_del('_erp') ?};
      _erp:=_erp_prac
   ?}
?};

{? var_pres('_erp')>0 || return(_erp) ?};

{? _akcja='zgłoszenia do zus'
|| _erp:=exec('zgloszenia_pracownikow_do_zus','genius_pkd',_path,_formaWspolpracy)
|? _akcja='raport do zus'
|| _erp:=exec('pracownik_zus_raport','genius_pkd',_path,_formaWspolpracy)
|| {? var_pres('_erp')>0 || obj_del('_erp') ?};
   _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Podaj jakie informacje o wybranym pracowniku Cię interesują:';
   _erp.data[1].type:='link';
   _erp.data[1].values[1].icon:='bi bi-question-circle-fill icon-size-lg';
   _erp.data[1].values[1].display_name:='';
   _erp.data[1].values[1].desc:='';
   _erp.data[1].values[1].link:=''
?};

:: jeżeli doszliśmy tu, to ustawiamy status interakcji na 1 i pytamy się co dalej
AI.setErpPar('co_dalej',~~);
{? _akcja='zgłoszenia do zus' & _erp.interact.status<>0
|| _erp.interact.status:=1;
   exec('choose_what_next','genius_pkd',_erp)
|| _erp.interact.status:=0
?};

_erp


\zgloszenia_pracownikow_do_zus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Wyszukuje pracowników którzy powinni być zgłoszeni do ZUS w podanym okresie
::   WE: _a [STRING] - ścieżka dla wybranej akcji
::       _b [STRING] - forma współpracy (P/Z, domyślnie P)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_f_zatr:={? var_pres('_b')=type_of('') & 'P,Z'*_b || _b || 'P' ?};

exec('config','genius_pkd');
_erp:=exec('erp_obj','genius_pkd',1,1);

:: Kontrola uprawnień do przeglądania informacji o zgłoszeniach do ZUS
_chk_role:="
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_ZES_ZUBE') |
   exec('chk_role','#b__box',OPERATOR.USER,'PPL_ZLC_ZUBE')
";
_chk_access:="
   'P,Z'*_a
";
{? ~_chk_role()
|| _erp.display_message:='Niestety nie masz uprawnień do przeglądania informacji o zgłoszeniach do ZUS.';
   return(_erp)
|? ~_chk_access(_f_zatr)
|| _erp.display_message:=
      'Niestety przeglądanie informacji o zgłoszeniach do ZUS nie jest dostępne dla wybranej formy współpracy.'@;
   return(_erp)
?};

_erp.display_message:='Nie znaleziono danych dotyczących konieczności zgłoszenia do ZUS.';

_path:={? var_pres('_a')=type_of('') || _a || return(_erp) ?};
{? _path<>'zgłoszenia_do_zus_pracownik' & _path<>'zgłoszenia_do_zus_ogólnie'
|| return(_erp)
?};

_startDate:=
   {? AI.getPar('startDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('startDate')).date
   || date()
   ?};
_endDate:=
   {? AI.getPar('endDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('endDate')).date
   || date()
   ?};
_message:=
   {? _endDate=date(0,0,0)
   || 'po %1 r.'@ [_startDate$6]
   |? _startDate=_endDate
   || 'w dniu %1 r.'@ [_startDate$6]
   || 'w okresie od %1 r. do %2 r.'@ [_startDate$6,_endDate$6]
   ?};

_counter:=_ind:=0;

VAR_DEL.delete('ZUA');
ZUA:=exec('tabela_zus_zua','rap_zus',_f_zatr);

P.cntx_psh();
P.use('pracowni');
P.prefix();
{? P.f_active() || P.f_clear() ?};

{? _path='zgłoszenia_do_zus_pracownik'
|| _p_ref:=AI.getErpPar('p_ref');
   _p_ref:=exec('FindAndGet','#table',P,_p_ref,,,null());
   P.f_set(,
      'left join F_ZATR using(P.F_ZATR,F_ZATR.REFERENCE)',
      'P.REFERENCE=:_a and F_ZATR.KOD in (\':_b\')',
      _p_ref,_f_zatr
   )

|? _path='zgłoszenia_do_zus_ogólnie'
|| _P:=exec('dostepne_p','schemat','PKD',_f_zatr,'T');
   P.f_set(,,
      'P.REFERENCE in (select :_a.REF from :_a)',
      _P
   )
?};

{? P.f_first()
|| _erp_ZUS:=exec('erp_obj','genius_pkd',P.f_size());

   OSOBA.cntx_psh();
   OSOBA.prefix();
   F_ZATR.cntx_psh();
   F_ZATR.prefix();
   UD_SKL.cntx_psh();
   UD_SKL.prefix();
   STN.cntx_psh();
   STN.prefix();
   ZUS_RAP.cntx_psh();
   ZUS_RAP.prefix();
   ZC.cntx_psh();
   ZC.index('ZLECPRZ');
   ZC_INFO.cntx_psh();
   ZC_INFO.index('ZC');

   _ind:=1;
   {!
   |?
::    Ograniczamy współpracowników tylko do tych, tkórzy spełniają zasady rejestracji w ZUS (7 dni na rejestrację)
      {? P.F_ZATR().KOD='Z' | (P.DZA<=_endDate & _startDate<=exec('dzienRob','kalendarz',P.DZA+#PAR_SKID.get(296),1,0))
      || _active:=1;
::       Sprawdzenie dla pracowników
         {? P.F_ZATR().KOD='P'
         || _exist:=exec('repeat_zua','rap_zus',1,0,'P');
::          Sprawdzenie czy jest na oddelegowaniu bez ZUS w podanej dacie
            _oddBz:=exec('czy_odd_bzus','oddelegowanie',P.ref(),_endDate);
            {? ~_oddBz.st & _exist<>1
            || _active:=0
            ?};
            obj_del(_oddBz)

::       Sprawdzenie dla zleceniobiorców
         |? P.F_ZATR().KOD='Z'
         || _exist:=0;
            ZC.prefix(P.ref());
            {? ZC.first()
            || {!
               |? ZC_INFO.prefix(ZC.ref());
                  {? ZC_INFO.first()
                  || {!
                     |? _chk:=exec('chk_ubez','rap_zus','ZUA',1);
                        _rep:=exec('repeat_zua','rap_zus',1,0,'Z');
                        _exist:=ZC_INFO.DU<=_endDate & _chk & _rep &
                           _startDate<=exec('dzienRob','kalendarz',ZC_INFO.DU+#PAR_SKID.get(296),1,0);

                        ~_exist & ZC_INFO.next()
                     !}
                  ?};
                  ~_exist & ZC.next()
               !};
               {? _exist
               || _active:=0
               ?}
            ?}
         ?};

         {? ~_active
         || P.OSOBA();
::          Zgłoszenie do ZUS dla pracownika
            {? _path='zgłoszenia_do_zus_pracownik'
            || _erp_ZUS.display_message:=
:                  '%1 %2 nie jest zgłoszony do ZUS na dzień %3 r.'
:                  [{? _f_zatr='Z' || 'Zleceniobiorca' || 'Pracownik' ?},exec('pracDesc','genius_pkd'),_endDate$6];
                  '%1 %2 powinien być zgłoszony do ZUS %3'
                  [{? _f_zatr='Z' || 'Zleceniobiorca' || 'Pracownik' ?},exec('pracDesc','genius_pkd'),_message];
               _erp_ZUS.data[_ind].type:='link';
               _erp_ZUS.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
               {? P.F_ZATR().KOD='P'
               || _erp_ZUS.data[_ind].values[1].display_name:=
                     'Data zatrudnienia: %1<br>Należy zgłosić do dnia: %2'
                     [$P.DZA,$exec('dzienRob','kalendarz',P.DZA+#PAR_SKID.get(296),1,0)]
               || _erp_ZUS.data[_ind].values[1].display_name:=
                     'Data rozpoczęcia: %1<br>Należy zgłosić do dnia: %2'
                     [$ZC_INFO.DU,$exec('dzienRob','kalendarz',ZC_INFO.DU+#PAR_SKID.get(296),1,0)]
               ?};
               _erp_ZUS.data[_ind].values[1].desc:='';
               _erp_ZUS.data[_ind].values[1].link:='#';
               _counter+=1

::          Zgłoszenie do zus dla wszystkich pracowników
            |? _path='zgłoszenia_do_zus_ogólnie'
            || {? ~_counter
               || _erp_ZUS.display_message:=
:                     '%1, którzy nie są zgłoszeni do ZUS na dzień %2 r.:'
:                     [{? _f_zatr='Z' || 'Zleceniobiorcy' || 'Pracownicy' ?},_endDate$6]
                     '%1, którzy powinni być zgłoszeni do ZUS %2:'
                     [{? _f_zatr='Z' || 'Zleceniobiorcy' || 'Pracownicy' ?},_message]
               ?};
               _erp_ZUS.data[_ind].type:='link';
               _erp_ZUS.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
               {? P.F_ZATR().KOD='P'
               || _erp_ZUS.data[_ind].values[1].display_name:=
                     '%1<br>Data zatrudnienia: %2<br>Należy zgłosić do dnia: %3'
                     [exec('pracDesc','genius_pkd'),$P.DZA,$exec('dzienRob','kalendarz',P.DZA+#PAR_SKID.get(296),1,0)]
               || _erp_ZUS.data[_ind].values[1].display_name:=
                     '%1<br>Data rozpoczęcia: %2<br>Należy zgłosić do dnia: %3'
                     [exec('pracDesc','genius_pkd'),$ZC_INFO.DU,
                     $exec('dzienRob','kalendarz',ZC_INFO.DU+#PAR_SKID.get(296),1,0)]
               ?};
               _erp_ZUS.data[_ind].values[1].desc:='';
               _erp_ZUS.data[_ind].values[1].link:='#';
               _counter+=1
            ?};
            _ind+=1
         ?}
      ?};
      P.f_next()
   !};

   ZC_INFO.cntx_pop();
   ZC.cntx_pop();
   ZUS_RAP.cntx_pop();
   STN.cntx_pop();
   UD_SKL.cntx_pop();
   F_ZATR.cntx_pop();
   OSOBA.cntx_pop()
?};

{? ~_counter
|| {? ~_ind || _erp_ZUS:=exec('erp_obj','genius_pkd',1,1) ?};
   _erp_ZUS.display_message:='Nie znaleziono danych dotyczących konieczności zgłoszenia do ZUS.';
   _erp_ZUS.interact.status:=0
|| _erp_ZUS.interact.status:=1
?};

{? P.f_active() || P.f_clear() ?};
P.cntx_pop();
VAR_DEL.delete('ZUA');

_erp_ZUS


\send_sms_pracownik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Obsługuje wysłanie powiadomienia sms do pracownika.
::   WE:
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
:: Upewnienie się, że jesteśmy w dobrej intencji
{? AI.INTENT<>'send.sms.pracownik'
|| FUN.info('Błąd wywołania intencji');
   return(exec('erp_obj','genius'))
?};

:: Wczytanie konfiguracji
exec('config','genius_pkd');

:: Kontrola uprawnień do przeglądania informacji o zgłoszeniach do ZUS
{? ~exec('chk_role','!zws_sms_send')
|| _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Brak uprawnień do wysyłania wiadomości SMS.'@

:: Kontrola ustawienia tokenu SMSAPI
|? exec('get','#params',700020)=''
|| _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Brak wypełnionego parametru 700020.'@

:: Kontrola ustawienia nadawcy SMSAPI
|? exec('get','#params',700021)=''
|| _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Brak wypełnionego parametru 700021.'@
?};
{? var_pres('_erp')>0 || return(_erp) ?};

:: Parametry opcjonalne intencji
_nazwisko:=AI.getPar('nazwisko');
_imie:=AI.getPar('imie');
_tresc:=AI.getPar('tresc');
_formaWspolpracy:=AI.getPar('formaWspolpracy');

:: Parametry ustawione w sesji
_p_ref:={? AI.getErpPar('p_ref')<>~~ || AI.getErpPar('p_ref') || '' ?};
_nazwisko:={? _nazwisko='' & AI.getErpPar('nazwisko')<>~~ || AI.getErpPar('nazwisko') || _nazwisko ?};
_formaWspolpracy:={? _formaWspolpracy='' & AI.getErpPar('formaWspolpracy')<>~~
                  || ~-(1+AI.getErpPar('formaWspolpracy'))
                  || ~-(1+_formaWspolpracy)
                  ?};
_telefon:={? AI.getErpPar('telefon')<>~~ || AI.getErpPar('telefon') || '' ?};
_tresc:={? _tresc='' & AI.getErpPar('tresc')<>~~ || AI.getErpPar('tresc') || _tresc ?};
_wyslij:={? AI.getErpPar('wyslij')<>~~ || AI.getErpPar('wyslij') || '' ?};

:: Określenie formy współpracy
{? _formaWspolpracy=''
|| _erp_param:=exec('ask4Param','genius_pkd','sms do pracownika','formaWspolpracy');
   {? var_pres('_erp_param')>0
   || {?  var_pres('_erp')>0 || obj_del('_erp') ?};
      _erp:=_erp_param
   ?}
?};
{? var_pres('_erp')>0 || return(_erp) ?};

:: Uzyskanie nazwiska współpracownika
{? _nazwisko='' & _p_ref=''
|| _erp:=exec('ask4nazwisko','genius_pkd',_formaWspolpracy)
?};
{? var_pres('_erp')>0 || return(_erp) ?};

:: Wyszukanie współpracownika
{? _p_ref=''
|| _erp:=exec('ask4Pracownik','genius_pkd',_nazwisko,_p_ref,'',_formaWspolpracy);
   {? var_pres('_erp')<=0 & AI.getErpPar('p_ref')<>~~
   || _p_ref:=AI.getErpPar('p_ref')
   ?}
?};
{? var_pres('_erp')>0 || return(_erp) ?};

:: Określenie numeru telefonu współpracownika
{? _telefon=''
|| _erp:=exec('ask4Telefon','genius_pkd',_p_ref);
   {? var_pres('_erp')<=0 & AI.getErpPar('telefon')<>~~
   || _telefon:=AI.getErpPar('telefon')
   ?}
?};
{? var_pres('_erp')>0 || return(_erp) ?};

:: Określenie treści wiadomości SMS
{? _tresc=''
|| _erp:=exec('erp_obj','genius_pkd');
   _erp.display_message:='Podaj treść wiadomości:'@;
   _erp.interact.status:=1;
   _erp.interact.par[1].id:='tresc';
   _erp.interact.par[1].for:=_erp.display_message
?};
{? var_pres('_erp')>0 || return(_erp) ?};

:: Potwierdzenie wysłania wiadomości do współpracownika
{? _wyslij=''
|| P.cntx_psh();
   P.use('pracowni');
   P.prefix();
   OSOBA.cntx_psh();
   OSOBA.prefix();
   UD_SKL.cntx_psh();
   UD_SKL.prefix();
   STN.cntx_psh();
   STN.prefix();
   {? P.seek(_p_ref)
   || P.OSOBA();
      _erp:=exec('erp_obj','genius_pkd',2,1);
      _txt:={? _formaWspolpracy='P' || 'pracownika'
            |? _formaWspolpracy='Z' || 'zleceniobiorcy'
            || 'współpracownika'
            ?};
      _erp.display_message:=
         'Czy wysłać SMS do %1:<br>%2<br>'
         'o treści:<br><b>%3</b><br>'
         'na numer:<br><b>%4</b> ?<br><br>'
         [_txt,exec('pracDesc','genius_pkd'),_tresc,_telefon];
      _erp.interact.status:=1;
      _par:=obj_new('wyslij');
      _ind:=1;
      _erp.data[_ind].type:='choice';
      _erp.data[_ind].values[1].icon:='bi bi-check-lg icon-size-lg';
      _erp.data[_ind].values[1].display_name:='<b>Tak</b>';
      _erp.data[_ind].values[1].desc:='';
      _par.wyslij:='tak';
      _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
      _ind+=1;
      _erp.data[_ind].type:='choice';
      _erp.data[_ind].values[1].icon:='bi bi-x-lg icon-size-lg';
      _erp.data[_ind].values[1].display_name:='<b>Nie</b>';
      _erp.data[_ind].values[1].desc:='';
      _par.wyslij:='nie';
      _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par)

   || _erp:=exec('erp_obj','genius_pkd');
      _erp.display_message:='Nie udało się ustawić kontekstu współpracownika.'
   ?};
   STN.cntx_pop();
   UD_SKL.cntx_pop();
   OSOBA.cntx_pop();
   P.cntx_pop()
?};
{? var_pres('_erp')>0 || return(_erp) ?};

_erp:=exec('erp_obj','genius_pkd');
{? _wyslij='tak'
|| _wyn:=exec('send_sms','#sms_send',
      _telefon,
      _tresc,
      exec('get','#params',700021),
      '0',
      '0',
      date(),
      time()
   );

   {? type_of(json_parse(_wyn))=117
      & var_pres('list', json_parse(_wyn))>0
      & obj_len(json_parse(_wyn).list)>0
      & var_pres('error', json_parse(_wyn).list[1])=0
   || _erp.display_message:='Wiadomość została wysłana.'@
   || _erp.display_message:='Wystąpiły błędy przy wysyłce wiadomości.<br>Więcej informacji w logach.'@
   ?}

|| _erp.display_message:='Nie wysłano wiadomości.'
?};

_erp


\ask4Telefon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Określenie numeru telefonu pracownika na podstawie przekazanych parametrów
::   WE: _a [STRING] - wskazanie na rekord pracownika
::   WY: obiekt _erp lub ~~
::----------------------------------------------------------------------------------------------------------------------
_p_ref:={? var_pres('_a')=type_of('') || _a || '' ?};
_phone:='';

P.cntx_psh();
P.use('pracowni');
P.prefix();
P.seek(_p_ref);

:: W pierwszej kolejności sprawdzamy, czy w informacjach dodatkowych mamy telefon komórkowy (służbowy)
:: Sprawdzamy po kodzie oraz nazwie, żeby mieć pewność, że ktoś nie zmienił wykorzystania pola
_P_DODINF:=sql(
   'select distinct P_DODINF.TRESC as TEL '
   'from P_DODINF '
      'join SLO_RODZ using(P_DODINF.RODZ,SLO_RODZ.reference) '
   'where SLO_RODZ.SLO_KOD=\':_a\' and '
      'SLO_RODZ.KOD in (\'KOM\') and '
      'SLO_RODZ.NAZWA=\'Telefon komórkowy\' and '
      'P_DODINF.P=\':_b\' and '
      'P_DODINF.OD<=to_date(:_c) and '
      '(P_DODINF.DO is null or P_DODINF.DO>=to_date(:_c))',
   $exec('kod','ext_slo','P_DODINF','KONTAKT'),_p_ref,date()
);

{? _P_DODINF.first() & _P_DODINF.TEL<>''
|| _phone:=_P_DODINF.TEL
:: Jeśli nie mamy nic w informacjach dodatkowych, to sprawdzamy adresy osoby
|| _os_adres:=exec('telefon','osoba',P.OSOBA);
   {? _os_adres<>''
   || _phone:=_os_adres
   ?}
?};

P.cntx_pop();

{? _phone=''
|| {? var_pres('_erp')>0 || obj_del('_erp') ?};
   _erp:=exec('erp_obj','genius_pkd',1,1,0);
   _erp.display_message:='Wskazany współpracownik nie ma wprowadzonego numeru telefonu.';
   return(_erp)

|| AI.setErpPar('telefon',_phone)
?};

~~


\pracownik_zus_raport
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Przygotowuje raport XML z informacjami o pracownikach do zgłoszenia do zus.
::   WE: [_a] [STRING] - parametr path
::       [_b] [STRING] - forma współpracy (P/Z, domyślnie P)
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
_path:={? var_pres('_a')=type_of('') & _a<>'' || _a || 'zgłoszenia_do_zus_ogólnie' ?};
_f_zatr:={? var_pres('_b')=type_of('') & 'P,Z'*_b || _b || 'P' ?};

exec('__F_ZATR','object');
_f_zatr_prev:=__F_ZATR.P;
__F_ZATR.mod(_f_zatr,'P');

_zusType:='ZUA';
VAR_DEL.delete('zus');

P.cntx_psh();
P.use('pracowni');
P.prefix();

:_path:='zgłoszenia_do_zus_ogólnie';
_listOfP:=null;
{? _path='zgłoszenia_do_zus_pracownik'
|| _p_ref:=AI.getErpPar('p_ref');
   _p_ref:=exec('FindAndGet','#table',P,_p_ref,,,null());
   _listOfP:=sql(
      'select P.REFERENCE as REF, P.OSOBA as OSOBA from P '
      'where P.reference=\':_a\'',
      $_p_ref
   )

|? _path='zgłoszenia_do_zus_ogólnie'
|| _listOfP:=exec('dostepne_p','schemat','PKD',__F_ZATR.P,'T')
?};

_startDate:=
   {? AI.getPar('startDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('startDate')).date
   || date()
   ?};
_endDate:=
   {? AI.getPar('endDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('endDate')).date
   || date()
   ?};

_inTerm:=exec('interm','#system');
:: przygotowanie katalogu tymczasowego po stronie serwera dla pracy w inTerm
_file:='';
{? _inTerm
|| _tmp_dir:=fmk_tmp_dir(0);
   {? type_of(_tmp_dir)<>type_of(~~)
   || _pth:=_tmp_dir.get_path();
      _file:='';
      _sep:=exec('sep','#file',2);
      _file:=_pth+_sep
   || FUN.emsg('Nie udało się utworzenie katalogu tymczasowego po stronie serwera.'@);
      P.cntx_pop();
      return()
   ?}
?};
ZUS.blank();
ZUS.FOLDER:={? _inTerm || '' || exec('get','#profile',,OPERATOR.USER().KOD,'lokalny katalog raportów ZUS') ?};
ZUS.PLIK:=-_zusType;
ZUS.DATA:=_endDate;
ZUS.RAPORT:='ZUS '+_zusType;
ZUS.DATAG:=#0;
_erp:=exec('erp_obj','genius_pkd',1,1);
{? exec('zus_dialog','rap_zus',_zusType+' ',__F_ZATR.P,0,_file)
|| exec('oZus','rap_zus');
   exec('zus_%1_generuj'[-_zusType],'rap_zus',null(),__F_ZATR.P,'PKD',_listOfP,_startDate,'T');
   VAR_DEL.delete('zus');
   _erp.display_message:='Zakończono generowanie raportu ZUS ZUA.'@
|| _erp.display_message:='Anulowano generowanie raportu ZUS ZUA.'@
?};
{? ~_inTerm
|| exec('set','#profile',,OPERATOR.USER().KOD,'lokalny katalog raportów ZUS',ZUS.FOLDER)
?};

P.cntx_pop();

__F_ZATR.mod(_f_zatr_prev,'P');

_erp


\choose_what_next
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Dodaje rekord do elementu "data" obiektu "erp" z opcjami wyboru co dalej
::   WE: _a [OBJECT] - obiekt erp
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_erp:={? var_pres('_a')=117 || _a || return() ?};
_par:=obj_new('co_dalej','p_ref','path');

:: Parametry ustawione w sesji
_p_ref:=AI.getErpPar('p_ref');
{? _p_ref=~~ || _p_ref:='' ?};
_path:=AI.getErpPar('path');
{? _path=~~ || _path:='' ?};
_par.p_ref:=_p_ref;
_par.path:=_path;

:: Parametry do obiektu
_txt:=
   {? AI.INTENT='pracownik.zus'
   || {? +_p_ref
      || 'Czy chcesz wygenerować jeszcze raport do ZUS dla wybranego współpracownika?'
      || 'Czy chcesz wygenerować jeszcze raport do ZUS dla wskazanych współpracowników?'
      ?}
   |? AI.INTENT='koniec.umowy'
   || {? +_p_ref
      || 'Czy chcesz wygenerować powiadomienie do przełożonego o kończącej się umowie o pracę dla wybranego pracownika?'
      || 'Czy chcesz wygenerować powiadomienia do przełożonych o kończących się umowach o pracę dla wskazanych '
            'pracowników?'
      ?}
   |? AI.INTENT='wnioski.urlopowe'
   || {? _path*'niezaakceptowane'
      || {? +_p_ref
         || 'Czy chcesz wygenerować powiadomienie do przełożonych o konieczności akceptacji wniosku urlopowego '
               'podwładnego?'
         || 'Czy chcesz wygenerować powiadomienia do przełożonych o konieczności akceptacji wniosków urlopowych '
               'podwładnych?'
         ?}
      |? _path*'zaakceptowane'
      || {? +_p_ref
         || 'Czy chcesz wprowadzić nieobecności na podstawie wniosków urlopowych wybranego współpracownika?'
         || 'Czy chcesz wprowadzić nieobecności na podstawie wniosków urlopowych wybranych współpracowników?'
         ?}
      ?}
   ?};
_displayNameFirst:=
   {? AI.INTENT='pracownik.zus'     || 'Wygeneruj'
   |? AI.INTENT='koniec.umowy'      || 'Wygeneruj'
   |? AI.INTENT='wnioski.urlopowe'  || {? _path*'niezaakceptowane'
                                       || 'Wygeneruj powiadomienia'
                                       || 'Wprowadź nieobecności'
                                       ?}
   ?};
_displayNameSeond:='Zakończ';
_whatNextFirst:=
   {? AI.INTENT='pracownik.zus'     || 'raport do zus'
   |? AI.INTENT='koniec.umowy'      || 'powiadomienia'
   |? AI.INTENT='wnioski.urlopowe'  || {? _path*'niezaakceptowane' || 'powiadomienia' || 'akceptacja' ?}
   ?};
_whatNextSecond:='koniec';

_size:=obj_len(_erp.data);
_data:=obj_new(_size+3);
{! _ind:=1..(_size)
|! _data[_ind]:=_erp.data[_ind]
!};

:: Pierwsza linia z pytaniem co dalej
_size+=1;
_data[_size]:=obj_new('type','values');
_data[_size].values:=exec('erp_values','genius',1);
_data[_size].type:='label';
_data[_size].values[1].icon:='';
_data[_size].values[1].display_name:='<span></span>';
_data[_size].values[1].desc:='<br>%1'[_txt];
_data[_size].values[1].link:='';

_size+=1;
_data[_size]:=obj_new('type','values');
_data[_size].values:=exec('erp_values','genius',1);
_data[_size].type:='choice';
_data[_size].values[1].icon:='bi bi-check-lg icon-size-lg';
_data[_size].values[1].display_name:='<b>%1</b>'[_displayNameFirst];
_data[_size].values[1].desc:='';
_par.co_dalej:=_whatNextFirst;
_data[_size].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

_size+=1;
_data[_size]:=obj_new('type','values');
_data[_size].values:=exec('erp_values','genius',1);
_data[_size].type:='choice';
_data[_size].values[1].icon:='bi bi-x-lg icon-size-lg';
_data[_size].values[1].display_name:='<b>%1</b>'[_displayNameSeond];
_data[_size].values[1].desc:='';
_par.co_dalej:=_whatNextSecond;
_data[_size].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

obj_del(_erp.data);
_erp.data:=_data;
_erp


\ask4Param
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Określenie parametru działania
::   WE: _a [STRING] - wybrana akcja
::       _b [STRING] - parametr do uzupełnienia
::       [_c] [STRING] - wybrana ścieżka
::       [_d] [STRING] - liczba pracowników (one/many/)
::   WY: obiekt _erp
::----------------------------------------------------------------------------------------------------------------------
 _akcja:={? var_pres('_a')=type_of('') || _a || '' ?};
 _param:={? var_pres('_b')=type_of('') || _b || '' ?};
  _path:={? var_pres('_c')=type_of('') || _c || '' ?};
_choice:={? var_pres('_d')=type_of('') || _d || '' ?};
_par:=obj_new(_param,'path','co_dalej','p_ref');
_par.path:=AI.getErpPar('path');
{? _par.path=~~ || _par.path:='' ?};
_par.co_dalej:=AI.getErpPar('co_dalej');
{? _par.co_dalej=~~ || _par.co_dalej:='' ?};
_par.p_ref:=AI.getErpPar('p_ref');
{? _par.p_ref=~~ || _par.p_ref:='' ?};

{? AI.INTENT='koniec.umowy' | AI.INTENT='send.sms.pracownik' | AI.INTENT='pracownik.zus' |
   AI.INTENT='pracownik.informacje' | AI.INTENT='wnioski.urlopowe' | AI.INTENT='praca.zdalna' |
   AI.INTENT='umowy.wspolpracownik' | AI.INTENT='nadgodziny.praca' | AI.INTENT='oddelegowania.zagraniczne'
|| {? _akcja='umowy o pracę' | _akcja='sms do pracownika' | _akcja='zgłoszenia do zus' | _akcja='nieobecności' |
      _akcja='stan rodzinny' | _akcja='badania lekarskie' | _akcja='wnioski urlopowe' | _akcja='praca zdalna' |
      _akcja='umowy współpracownika' | _akcja='nadgodziny' | _akcja='oddelegowania'
   || {? _akcja='umowy współpracownika'
      || _erp:=exec('erp_obj','genius_pkd',3,1)
      || _erp:=exec('erp_obj','genius_pkd',2,1)
      ?};
      _erp.display_message:='Wybierz formę współpracy:';
      _ind:=1;
      _erp.data[_ind].type:='choice';
      _erp.data[_ind].values[1].icon:='bi bi-person-badge icon-size-lg';
      _erp.data[_ind].values[1].display_name:='<b>%1</b>'['Pracownicy'];
      _erp.data[_ind].values[1].desc:='';
      _par[1]:='P';
      _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

      _ind+=1;
      _erp.data[_ind].type:='choice';
      _erp.data[_ind].values[1].icon:='bi bi-file-earmark-person icon-size-lg';
      _erp.data[_ind].values[1].display_name:='<b>%1</b>'['Zleceniobiorcy'];
      _erp.data[_ind].values[1].desc:='';
      _par[1]:='Z';
      _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);

      {? _akcja='umowy współpracownika'
      || _ind+=1;
         _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-file-person icon-size-lg';
         _erp.data[_ind].values[1].display_name:='<b>%1</b>'['Współpracownicy'];
         _erp.data[_ind].values[1].desc:='';
         _par[1]:='W';
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par)
      ?};
      return(_erp)
   ?}
?};
~~


\uprawnienia_zawodowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Obsługuje informacje zwrotne nt informacji o uprawnieniach zawodowych (kończących się i nieaktualnych).
::   WE:
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
:: upewnienie się, że jesteśmy w dobrej intencji
{? AI.INTENT<>'uprawnienia.zawodowe'
|| FUN.info('Błąd wywołania intencji');
   return(exec('erp_obj','genius'))
?};
exec('config','genius_pkd');

:: Kontrola uprawnień do przeglądania uprawnień zawodowych
_chk_role:="
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_DOS_PPUZ') |
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_DOS_PRUZ')
";
{? ~_chk_role()
|| _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Niestety nie masz uprawnień do przeglądania uprawnień zawodowych.'@;
   return(_erp)
?};

:: parametry wymagane
_startDate:=AI.getPar('startDate');
  _endDate:=AI.getPar('endDate');

:: parametry opcjonalne
    _akcja:=AI.getPar('akcja');

:: parametry ustawione w sesji
     _path:={? AI.getErpPar('path')<>~~ || AI.getErpPar('path') || '' ?};
 _co_dalej:={? AI.getErpPar('co_dalej')<>~~ || AI.getErpPar('co_dalej') || '' ?};

{? +_co_dalej
|| {? ~+_path || _path:=exec('getPathFromAction','genius_pkd',_co_dalej) ?};
   _akcja:=exec('co_dalej_akcja','genius_pkd',_co_dalej)
|? +_akcja
|| {? ~+_path || _path:=exec('getPathFromAction','genius_pkd',_akcja) ?};
   _akcja:=exec('co_dalej_akcja','genius_pkd',_akcja)
?};

{? _akcja='capabilities'
|| return(exec('capabilities','genius_pkd'))

|? _akcja='koniec'
|| return(exec('sayonara','genius_pkd'))

|? _akcja<>'uprawnienia zawodowe'
|| return(exec('confused','genius_pkd'))
?};

:: sprawdzenie czy w intencji określono już ścieżkę
{? _akcja='uprawnienia zawodowe' & (_path='' | _path='aktualne' | _path='nieaktualne' | _path='kończące')
|| _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path);
   {? var_pres('_erp_path')>0
   || return(_erp_path)
   ?}
?};

{? _akcja='uprawnienia zawodowe'
|| _erp:=
      {? _path*'nieaktualne'
      || exec('uprawnienia_zawodowe_aktualne','genius_pkd','N',_path)
      |? _path*'aktualne'
      || exec('uprawnienia_zawodowe_aktualne','genius_pkd','A',_path)
      |? _path*'kończące'
      || exec('uprawnienia_zawodowe_konczace','genius_pkd',_path)
      || _erp:=exec('erp_obj','genius_pkd',1,1);
         _erp.display_message:='Nie znaleziono uprawnień zawodowych.';
         return(_erp)
      ?}
?};

_erp


\uprawnienia_zawodowe_konczace
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Wyszukuje osoby z kończącymi się uprawnieniami zawodowymi w podanym okresie
::   WE: [_a] [STRING] - ścieżka dla intencji
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_path:={? var_pres('_a')=type_of('') || _a || '' ?};
_date_from:=
   {? AI.getPar('startDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('startDate')).date
   || date()
   ?};
_date_to:=
   {? AI.getPar('endDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('endDate')).date
   || date()
   ?};
_message:=
   {? _date_to=date(0,0,0) || 'po %1 r.'@ [_date_from$6]
   |? _date_from=_date_to  || 'w dniu %1 r.'@ [_date_from$6]
   ||                         'w okresie od %1 r. do %2 r.'@ [_date_from$6,_date_to$6]
   ?};
_d0:=date(0,0,0);
_counter:=_ind:=0;

:: kontrola poprawności ścieżki
_pat:=obj_new(1);
_rep:=obj_new(1);
_pat[1]:='_kończące';
_rep[1]:='';
_uprzawk:=gsub(_path,_pat,_rep);
obj_del(_pat,_rep);
_correctPath:='|';
UPR_ZAWK.cntx_psh();
UPR_ZAWK.index('SYMBOL');
UPR_ZAWK.prefix();
{? UPR_ZAWK.first()
|| {!
   |? _correctPath+='%1_%2|'[UPR_ZAWK.SYMBOL,'kończące'];
      UPR_ZAWK.next()
   !}
?};
UPR_ZAWK.cntx_pop();
{? ~(_correctPath*'|%1|'[_path]) & _path<>'EVERYTHING_kończące'
|| return(_erp)
?};
{? _uprzawk='EVERYTHING' || _uprzawk:='' ?};

OSOBA.cntx_psh();
OSOBA.prefix();
P.cntx_psh();
P.use('pracowni');
P.prefix();

{? OSOBA.f_active() || OSOBA.f_clear() ?};
OSOBA.f_set(,,
   'REFERENCE in (select P.OSOBA from P where P.FIRMA=:_a)',
   exec('ref_firma','ustawienia')
);

_query:=
   'select '
      'UPR_ZAWO.REFERENCE as REF, '
      'UPR_ZAWO.OSOBA as OSOBA, '
      'UPR_ZAWO.DO as DO '
   'from UPR_ZAWO '
      'join UPR_ZAWK using (UPR_ZAWO.UPR_ZAWK,UPR_ZAWK.REFERENCE) '
   'where to_date(:_a)<=UPR_ZAWO.DO and UPR_ZAWO.DO<=to_date(:_b) '
      'and UPR_ZAWO.OSOBA in (select P.OSOBA from P where P.FIRMA=:_c) '+
      {? _uprzawk<>'' || 'and UPR_ZAWK.SYMBOL=\':_d\' ' || '' ?}+
   'order by OSOBA, DO';
_UPR_ZAWO:=sql(_query,_date_from,_date_to,exec('ref_firma','ustawienia'),_uprzawk);

{? OSOBA.f_first() & _UPR_ZAWO.size()
|| _erp_UZ:=exec('erp_obj','genius_pkd',_UPR_ZAWO.size());
   _ind:=1;

   UPR_ZAWO.cntx_psh();
   UPR_ZAWO.index('OUD');
   UPR_ZAWK.cntx_psh();
   UPR_ZAWK.prefix();

   {!
   |? UPR_ZAWO.prefix(OSOBA.ref());
      {? UPR_ZAWO.last()
      || {!
         |? {? UPR_ZAWO.DO<>_d0 & _date_from<=UPR_ZAWO.DO & UPR_ZAWO.DO<=_date_to &
               (_uprzawk='' | UPR_ZAWO.UPR_ZAWK().SYMBOL=_uprzawk)
            || {? ~_counter
               || _erp_UZ.display_message:='Uprawnienia zawodowe, których ważność kończy się %1:'[_message]
               ?};
               _erp_UZ.data[_ind].type:='link';
               _erp_UZ.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
               _erp_UZ.data[_ind].values[1].display_name:=
                  '<b>%1 %2 (PESEL: %3)</b><br>Nazwa: %4 (%5)<br>Numer: %6<br>Data ważności: %7'[
                  OSOBA.NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL,UPR_ZAWO.UPR_ZAWK().NAZWA,UPR_ZAWO.UPR_ZAWK().SYMBOL,
                  UPR_ZAWO.NR,$UPR_ZAWO.DO];
               _erp_UZ.data[_ind].values[1].desc:='';
               _erp_UZ.data[_ind].values[1].link:=
                  exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',UPR_ZAWO.uidref()));
               _counter+=1;
               _ind+=1
            ?};
            _nameRef:=UPR_ZAWO.UPR_ZAWK;
            _prev:=0;
            {? UPR_ZAWO.prev()
            || {!
               |? {? UPR_ZAWO.UPR_ZAWK<>_nameRef
                  || _prev:=1; 0
                  || UPR_ZAWO.prev()
                  ?}
               !}
            ?};
            _prev
         !}
      ?};

      OSOBA.f_next()
   !};

   UPR_ZAWK.cntx_pop();
   UPR_ZAWO.cntx_pop()
?};

P.cntx_pop();
OSOBA.cntx_pop();

{? ~_counter
|| {? ~_ind || _erp_UZ:=exec('erp_obj','genius_pkd',1,1) ?};
   _erp_UZ.display_message:='Nie znaleziono danych dotyczących kończących się uprawnień zawodowych.'
?};

_erp_UZ


\uprawnienia_zawodowe_aktualne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Wyszukuje pracowników z nieaktualnymi uprawnieniami zawodowymi w podanym okresie
::   WE: [_a] [STRING] - rodzaj uprawnień [A-aktualne/N-nieaktualne, domyślnie N]
::       [_b] [STRING] - ścieżka dla intencji
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_type:={? var_pres('_a')=type_of('') & 'A,N'*_a || _a || 'N' ?};
_path:={? var_pres('_b')=type_of('') || _b || '' ?};
_startDate:=
   {? AI.getPar('startDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('startDate')).date
   || date()
   ?};
_endDate:=
   {? AI.getPar('endDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('endDate')).date
   || date()
   ?};

_d0:=date(0,0,0);
_counter:=_ind:=0;

:: kontrola poprawności ścieżki
_pat:=obj_new(2);
_rep:=obj_new(2);
_pat[1]:='_aktualne'; _pat[2]:='_nieaktualne';
_rep[1]:=''; _rep[2]:='';
_uprzawk:=gsub(_path,_pat,_rep);
obj_del(_pat,_rep);
_correctPath:='|';
UPR_ZAWK.cntx_psh();
UPR_ZAWK.index('SYMBOL');
UPR_ZAWK.prefix();
{? UPR_ZAWK.first()
|| {!
   |? _correctPath+='%1_%2|%1_%3|'[UPR_ZAWK.SYMBOL,'nieaktualne','aktualne'];
      UPR_ZAWK.next()
   !}
?};
UPR_ZAWK.cntx_pop();
{? ~(_correctPath*'|%1|'[_path]) & _path<>'EVERYTHING_aktualne' & _path<>'EVERYTHING_nieaktualne'
|| return(_erp)
?};
{? _uprzawk='EVERYTHING' || _uprzawk:='' ?};

OSOBA.cntx_psh();
OSOBA.prefix();
P.cntx_psh();
P.use('pracowni');
P.prefix();

{? OSOBA.f_active() || OSOBA.f_clear() ?};
OSOBA.f_set(,,
   'REFERENCE in (select P.OSOBA from P where P.FIRMA=:_a)',
   exec('ref_firma','ustawienia')
);

_query:=
   'select '
      'UPR_ZAWO.REFERENCE as REF, '
      'UPR_ZAWO.OSOBA as OSOBA, '
      'UPR_ZAWO.DO as DO '
   'from UPR_ZAWO '
       'join UPR_ZAWK using (UPR_ZAWO.UPR_ZAWK,UPR_ZAWK.REFERENCE) '
   'where '+
      {? _type='N' || 'UPR_ZAWO.DO is not null and UPR_ZAWO.DO<=to_date(:_b) '
      |? _type='A' || 'UPR_ZAWO.OD<=to_date(:_a) and (UPR_ZAWO.DO is null or to_date(:_b)<=UPR_ZAWO.DO) '
      ?}+
      'and UPR_ZAWO.OSOBA in (select P.OSOBA from P where P.FIRMA=:_c) '+
      {? _uprzawk<>'' || 'and UPR_ZAWK.SYMBOL=\':_d\' ' || '' ?}+
   'order by OSOBA, DO';
_UPR_ZAWO:=sql(_query,_startDate,_endDate,exec('ref_firma','ustawienia'),_uprzawk);

{? OSOBA.f_first() & _UPR_ZAWO.size()
|| _erp_UZ:=exec('erp_obj','genius_pkd',_UPR_ZAWO.size());
   _ind:=1;

   UPR_ZAWO.cntx_psh();
   UPR_ZAWO.index('OUD');
   UPR_ZAWK.cntx_psh();
   UPR_ZAWK.prefix();

   {!
   |? UPR_ZAWO.prefix(OSOBA.ref());
      {? UPR_ZAWO.last()
      || {!
         |? {? {? _type='N' || UPR_ZAWO.DO<>_d0 & UPR_ZAWO.DO<=_endDate
               |? _type='A' || UPR_ZAWO.OD<=_startDate & (UPR_ZAWO.DO=_d0 | _endDate<=UPR_ZAWO.DO)
               ?} & (_uprzawk='' | UPR_ZAWO.UPR_ZAWK().SYMBOL=_uprzawk)
            || {? ~_counter
               || _erp_UZ.display_message:=
                     'Uprawnienia zawodowe, które są %1 na dzień %2:'
                     [{? _type='N' || 'nieaktualne' || 'aktualne' ?},_endDate$6]
               ?};
               _erp_UZ.data[_ind].type:='link';
               _erp_UZ.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
               _erp_UZ.data[_ind].values[1].display_name:=
                  '<b>%1 %2 (PESEL: %3)</b><br>Nazwa: %4 (%5)<br>Numer: %6<br>Data ważności: %7'[
                  OSOBA.NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL,UPR_ZAWO.UPR_ZAWK().NAZWA,UPR_ZAWO.UPR_ZAWK().SYMBOL,
                  UPR_ZAWO.NR,$UPR_ZAWO.DO];
               _erp_UZ.data[_ind].values[1].desc:='';
               _erp_UZ.data[_ind].values[1].link:=
                  exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',UPR_ZAWO.uidref()));
               _counter+=1;
               _ind+=1
            ?};
            _nameRef:=UPR_ZAWO.UPR_ZAWK;
            _prev:=0;
            {? UPR_ZAWO.prev()
            || {!
               |? {? UPR_ZAWO.UPR_ZAWK<>_nameRef
                  || _prev:=1; 0
                  || UPR_ZAWO.prev()
                  ?}
               !}
            ?};
            _prev
         !}
      ?};

      OSOBA.f_next()
   !};

   UPR_ZAWK.cntx_pop();
   UPR_ZAWO.cntx_pop()
?};

P.cntx_pop();
OSOBA.cntx_pop();

{? ~_counter
|| {? ~_ind || _erp_UZ:=exec('erp_obj','genius_pkd',1,1) ?};
   _erp_UZ.display_message:='Nie znaleziono danych dotyczących nieaktualnych uprawnień zawodowych.'
?};

_erp_UZ


\wnioski_urlopowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Obsługuje informacje zwrotne nt informacji o wnioskach urlopowych (zaakceptowanych i niezaakceptowanych).
::   WE:
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
:: upewnienie się, że jesteśmy w dobrej intencji
{? AI.INTENT<>'wnioski.urlopowe'
|| FUN.info('Błąd wywołania intencji');
   return(exec('erp_obj','genius'))
?};
exec('config','genius_pkd');

:: Kontrola uprawnień do przeglądania wniosków urlopowych
_chk_role:="
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_ORWN')
";
{? ~_chk_role()
|| _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Niestety nie masz uprawnień do przeglądania wniosków urlopowych.'@;
   return(_erp)
?};

:: parametry wymagane
      _startDate:=AI.getPar('startDate');
        _endDate:=AI.getPar('endDate');

:: parametry opcjonalne
          _akcja:=AI.getPar('akcja');
_formaWspolpracy:=AI.getPar('formaWspolpracy');
       _nazwisko:=AI.getPar('nazwisko');
           _imie:=AI.getPar('imie');
  _pracownikLicz:={? _formaWspolpracy<>''
                  || {? _formaWspolpracy*'Wiele' || 'wiele' || 'jeden' ?}
                  || ''
                  ?};

:: parametry ustawione w sesji
           _path:={? AI.getErpPar('path')<>~~ || AI.getErpPar('path') || '' ?};
       _co_dalej:={? AI.getErpPar('co_dalej')<>~~ || AI.getErpPar('co_dalej') || '' ?};
          _p_ref:={? AI.getErpPar('p_ref')<>~~ || AI.getErpPar('p_ref') || '' ?};
       _nazwisko:={? _nazwisko='' & AI.getErpPar('nazwisko')<>~~ || AI.getErpPar('nazwisko') || _nazwisko ?};
_formaWspolpracy:={? _formaWspolpracy='' & AI.getErpPar('formaWspolpracy')<>~~
                  || ~-(1+AI.getErpPar('formaWspolpracy'))
                  || ~-(1+_formaWspolpracy)
                  ?};

{? +_co_dalej
|| {? ~+_path || _path:=exec('getPathFromAction','genius_pkd',_co_dalej) ?};
   _akcja:=exec('co_dalej_akcja','genius_pkd',_co_dalej)
|? +_akcja
|| {? ~+_path || _path:=exec('getPathFromAction','genius_pkd',_akcja) ?};
   _akcja:=exec('co_dalej_akcja','genius_pkd',_akcja)
?};

{? _akcja='capabilities'
|| return(exec('capabilities','genius_pkd'))

|? _akcja='koniec'
|| return(exec('sayonara','genius_pkd'))

|? _akcja<>'wnioski urlopowe' & _akcja<>'powiadomienia' & _akcja<>'akceptacja'
|| return(exec('confused','genius_pkd'))
?};

:: Korekta ścieżki do uwzględnienie liczby współpracowników
{? _akcja='wnioski urlopowe' & ~(_path*'współpracownik' | _path*'ogólnie')
|| {? (_pracownikLicz='jeden') | +_nazwisko
   || _path:='%1_%2'[_path,'współpracownik']
   |? (_pracownikLicz='wiele' | -_pracownikLicz='pracownicy')
   || _path:='%1_%2'[_path,'ogólnie']
   ?}
?};

:: Określenie formy współpracy
{? _akcja='wnioski urlopowe' & _formaWspolpracy=''
|| _erp_param:=exec('ask4Param','genius_pkd',_akcja,'formaWspolpracy',_path);
   {? var_pres('_erp_param')>0
   || return(_erp_param)
   ?}
?};

:: Określenie nazwiska współpracownika
{? _akcja='wnioski urlopowe' & _path*'_współpracownik' & _nazwisko='' & _p_ref=''
|| _erp:=exec('ask4nazwisko','genius_pkd',_formaWspolpracy)
?};
{? var_pres('_erp')>0 || return(_erp) ?};

:: Określenie współpracownika
{? _akcja='wnioski urlopowe' & _path*'_współpracownik'
|| _erp_prac:=exec('ask4Pracownik','genius_pkd',_nazwisko,_p_ref,_path,_formaWspolpracy);
   {? var_pres('_erp_prac')>0
   || return(_erp_prac)
   || _p_ref:=AI.getErpPar('p_ref')
   ?}
?};

:: Określenie podstawowej ścieżki
{? _akcja='wnioski urlopowe' &
   (_path='' | _path='_współpracownik' | _path='_ogólnie' | ~(_path*'_współpracownik' | _path*'_ogólnie'))
|| _erpParams:=obj_new('path','formaWspolpracy','nazwisko','p_ref');
   _erpParams.formaWspolpracy:=_formaWspolpracy;
   _erpParams.nazwisko:=_nazwisko;
   _erpParams.p_ref:=_p_ref;
   _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path,,_erpParams);
   {? var_pres('_erp_path')>0
   || return(_erp_path)
   ?}
?};

{? _akcja='wnioski urlopowe'
|| _erp:=exec('wnioski_urlopowe_data','genius_pkd',_path,_formaWspolpracy)

|? _akcja='akceptacja'
|| _erp:=exec('wnioski_urlopowe_acceptance','genius_pkd',_path,_formaWspolpracy)

|? _akcja='powiadomienia'
|| _erp:=exec('wnioski_urlopowe_notification','genius_pkd',_path,_formaWspolpracy)

|| _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Nie znaleziono wniosków urlopowych.';
   return(_erp)
?};

:: Jeżeli doszliśmy tu, to ustawiamy status interakcji na 1 i pytamy się co dalej
AI.setErpPar('co_dalej',~~);
{? _erp.interact.status<>0
|| _erp.interact.status:=1;
   AI.setErpPar('path',_path);
   AI.setErpPar('p_ref',_p_ref);
   exec('choose_what_next','genius_pkd',_erp)
|| _erp.interact.status:=0
?};

_erp


\wnioski_urlopowe_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Wyszukuje wnioski urlopowe w podanym okresie
::   WE: _a [STRING] - ścieżka dla wybranej akcji
::       _b [STRING] - forma współpracy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('config','genius_pkd');
_erp:=exec('erp_obj','genius_pkd',1,1);

_erp.display_message:='Nie znaleziono danych dotyczących wniosków urlopowych.';

_path:={? var_pres('_a')=type_of('') || _a || return(_erp) ?};
_f_zatr:={? var_pres('_b')=type_of('') & 'P,Z,W'*_b || _b || return(_erp) ?};
{? _f_zatr='W' || _f_zatr:='' ?};

:: Kontrola poprawności ścieżki
{? _path<>'zaakceptowane_współpracownik' & _path<>'niezaakceptowane_współpracownik' &
   _path<>'zaakceptowane_ogólnie' & _path<>'niezaakceptowane_ogólnie'
|| return(_erp)
?};

_status:=
   {? _path='zaakceptowane_współpracownik' | _path='zaakceptowane_ogólnie'
   || 'T'
   || '?'
   ?};
_startDate:=
   {? AI.getPar('startDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('startDate')).date
   || date()
   ?};
_endDate:=
   {? AI.getPar('endDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('endDate')).date
   || date()
   ?};
_message:=
   {? _endDate=date(0,0,0) || 'po %1 r.'@ [_startDate$6]
   |? _startDate=_endDate  || 'w dniu %1 r.'@ [_startDate$6]
   ||                         'w okresie od %1 r. do %2 r.'@ [_startDate$6,_endDate$6]
   ?};
_cooperation:=
   {? _f_zatr='P' || {? _path*'_współpracownik' || 'Pracownik'      || 'Pracownicy' ?}
   |? _f_zatr='Z' || {? _path*'_współpracownik' || 'Zleceniobiorca' || 'Zleceniobiorcy' ?}
   ||                {? _path*'_współpracownik' || 'Współpracownik' || 'Współpracownicy' ?}
   ?};

_counter:=_ind:=0;

P.cntx_psh();
P.use('pracowni');
P.prefix();
{? P.f_active() || P.f_clear() ?};

{? _path='zaakceptowane_współpracownik' | _path='niezaakceptowane_współpracownik'
|| _p_ref:=AI.getErpPar('p_ref');
   _p_ref:=exec('FindAndGet','#table',P,_p_ref,,,null());
   P.f_set(,,'P.REFERENCE=:_a',_p_ref)

|? _path='zaakceptowane_ogólnie' | _path='niezaakceptowane_ogólnie'
|| _P:=exec('dostepne_p','schemat','PKD',{? +_f_zatr || _f_zatr || '*' ?},'T');
   P.f_set(,,'P.REFERENCE in (select :_a.REF from :_a)',_P)
?};

_query:=
   'select '
      'NWU.REFERENCE as REF, '
      'NWU.P as P, '
      'NWU.OD as OD '
   'from NWU '
   'where NWU.AZ=\':_a\' and to_date(:_b)<=NWU.DO and NWU.OD<=to_date(:_c) and NWU.OS_N is null and NWU.N is null '+
   {? _path*'_współpracownik' || 'and NWU.P=:_d '
   |? _path*'_ogólnie' || 'and NWU.P in (select :_d.REF from :_d) '
   ?}+
   'order by P, OD';
_NWU:=sql(_query,_status,_startDate,_endDate,{? _path*'_współpracownik' || _p_ref || _P ?});

{? P.f_first() & _NWU.size()
|| _erp_WU:=exec('erp_obj','genius_pkd',_NWU.size());

   NWU.cntx_psh();
   NWU.index('ZDATA');
   F_ZATR.cntx_psh();
   OSOBA.cntx_psh();
   R.cntx_psh();

   _ind:=1;

   {!
   |? NWU.prefix(P.ref(),_status);
      {? NWU.first()
      || {!
         |? {? (NWU.AZ=_status &
               ((P.F_ZATR().KOD='Z' & NWU.OS_N=null()) | (P.F_ZATR().KOD<>'Z' & NWU.N=null()))) &
               (_startDate<=NWU.DO & NWU.OD<=_endDate)
            || P.OSOBA();

::             Pobranie listy przełożonych dla współpracownika
               _superiors:='';
               _superiorsAll:=exec('show_kier','stanprac',P.ref,1,'TYPPOZ','AKCWNIO',,,1);
               {? _superiorsAll.first()
               || {!
                  |? _level:=_superiorsAll.L;
                     _superiors+=
                        '%1 %2 (IP: %3, Teczka: %4), '
                        [_superiorsAll.NAZWISKO,_superiorsAll.IMIE,$_superiorsAll.ID,_superiorsAll.T];
                     _superiorsAll.next() & _superiorsAll.L=_level
                  !}
               ?};
               obj_del(_superiorsAll);
               _superiors:={? _superiors<>'' || _superiors-2 || 'Brak' ?};

::             Wnioski urlopowe zaakceptowane/niezaakceptowane współpracownika
               {? _path='zaakceptowane_współpracownik' | _path='niezaakceptowane_współpracownik'
               || _erp_WU.display_message:=
                     '%1 %2%3 ma %4 wnioski urlopowe %5:'[
                     _cooperation,exec('pracDesc','genius_pkd'),
                     {? _superiors<>'Brak' || ', którego przełożonym jest %1,'[_superiors] || '' ?},
                     {? _status='T' || 'zaakceptowane' || 'niezaakceptowane' ?},_message];
                  _erp_WU.data[_ind].type:='link';
                  _erp_WU.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
                  _erp_WU.data[_ind].values[1].display_name:=
                     'Rodzaj urlopu: %1 - %2<br>Data rozpoczęcia: %3<br>Data zakończenia: %4'
                     [$NWU.R().RN,NWU.R().RT,$NWU.OD,$NWU.DO];
                  _erp_WU.data[_ind].values[1].desc:='';
                  _erp_WU.data[_ind].values[1].link:=
                     exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',NWU.uidref()));
                  _counter+=1

::             Wnioski urlopowe zaakceptowane/niezaakceptowane współpracowników
               |? _path='zaakceptowane_ogólnie' | _path='niezaakceptowane_ogólnie'
               || {? ~_counter
                  || _erp_WU.display_message:=
                        '%1, którzy mają %2 wnioski urlopowe %3:'
                        [_cooperation,{? _status='T' || 'zaakceptowane' || 'niezaakceptowane' ?},_message]
                  ?};
                  _erp_WU.data[_ind].type:='link';
                  _erp_WU.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
                  _erp_WU.data[_ind].values[1].display_name:=
                     '%1<br>Przełożony: %2<br>Rodzaj urlopu: %3 - %4<br>Data rozpoczęcia: %5<br>Data zakończenia: %6'
                     [exec('pracDesc','genius_pkd'),_superiors,$NWU.R().RN,NWU.R().RT,$NWU.OD,$NWU.DO];
                  _erp_WU.data[_ind].values[1].desc:='';
                  _erp_WU.data[_ind].values[1].link:=
                     exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',NWU.uidref()));
                  _counter+=1
               ?};
               _ind+=1
            ?};
            NWU.next()
         !}
      ?};
      P.f_next()
   !};

   R.cntx_pop();
   OSOBA.cntx_pop();
   F_ZATR.cntx_pop();
   NWU.cntx_pop()
?};

{? ~_counter
|| {? ~_ind || _erp_WU:=exec('erp_obj','genius_pkd',1,1) ?};
   _erp_WU.display_message:='Nie znaleziono danych dotyczących wniosków urlopowych.';
   _erp_WU.interact.status:=0
|| _erp_WU.interact.status:=1
?};

{? P.f_active() || P.f_clear() ?};
P.cntx_pop();

_erp_WU


\wnioski_urlopowe_acceptance
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Wprowadzenie nieobecności na podstawie wniosków urlopowych
::   WE: _a [STRING] - ścieżka dla wybranej akcji
::       _b [STRING] - forma współpracy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('config','genius_pkd');
_erp:=exec('erp_obj','genius_pkd',1,1);

_erp.display_message:='Nie udało się wprowadzić nieobecności na podstawie wniosków urlopowych.';

  _path:={? var_pres('_a')=type_of('')              || _a || return(_erp) ?};
_f_zatr:={? var_pres('_b')=type_of('') & 'P,Z,W'*_b || _b || return(_erp) ?};
{? _f_zatr='W' || _f_zatr:='' ?};

:: Kontrola poprawności ścieżki
{? _path<>'zaakceptowane_współpracownik' & _path<>'niezaakceptowane_współpracownik' &
   _path<>'zaakceptowane_ogólnie' & _path<>'niezaakceptowane_ogólnie'
|| return(_erp)
?};

_status:=
   {? _path='zaakceptowane_współpracownik' | _path='zaakceptowane_ogólnie'
   || 'T'
   || '?'
   ?};
_startDate:=
   {? AI.getPar('startDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('startDate')).date
   || date()
   ?};
_endDate:=
   {? AI.getPar('endDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('endDate')).date
   || date()
   ?};

P.cntx_psh();
P.use('pracowni');
P.prefix();
{? P.f_active() || P.f_clear() ?};

{? _path='zaakceptowane_współpracownik'
|| _p_ref:=AI.getErpPar('p_ref');
   _p_ref:=exec('FindAndGet','#table',P,_p_ref,,,null());
   P.f_set(,,'P.REFERENCE=:_a',_p_ref)
|? _path='zaakceptowane_ogólnie'
|| _P:=exec('dostepne_p','schemat','PKD',{? +_f_zatr || _f_zatr || '*' ?},'T');
   P.f_set(,,'P.REFERENCE in (select :_a.REF from :_a)',_P)
?};

:: przygotowanie komunikatów
exec('KOMM','#object');
KOMM.init();
{? FUN.ask('Czy na pewno chcesz wprowadzić nieobecności na podstawie zaznaczonych wniosków urlopowych?'@)
|| {? P.f_first()
   || {? var_press('__PARSES')<100 || exec('start_proces','b_proces',0) ?};
      _params:=exec('mp_run_a','#b__box');
      _params.ACT_UID:='PKD_EZK_ORWN';
      _params.AKCJA:='WPROWADŹ';
      _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
      _params.GRUPA:='T';

      NWU.cntx_psh();
      NWU.index('ZDATA');
      {!
      |? NWU.prefix(P.ref(),_status);
         {? NWU.first()
         || {!
            |? {? (NWU.AZ=_status &
                  ((P.F_ZATR().KOD='Z' & NWU.OS_N=null()) | (P.F_ZATR().KOD<>'Z' & NWU.N=null()))) &
                  (_startDate<=NWU.DO & NWU.OD<=_endDate)
               || _params.UIDREF:=NWU.uidref();
                  exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'NWU',NWU.ref());
                  exec('mp_run','#b__box',_params)
               ?};
               NWU.next()
            !}
         ?};
         P.f_next()
      !};
      NWU.cntx_pop();

      title('Genius',,1)
   ?};

:: wyświetlenie komunikatów
   KOMM.select('Raport z wprowadzania wniosku urlopowego'@)
?};

{? P.f_active() || P.f_clear() ?};
P.cntx_pop();

_erp_WU:=exec('erp_obj','genius_pkd',1,1);
_erp_WU.display_message:='Zakończono rejestrowanie nieobecności na podstawie wniosków urlopowych.';

_erp_WU


\wnioski_urlopowe_notification
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Wysyłanie powiadomienia do przełożonych o niezaakceptowanych wnioskach urlopowych
::   WE: _a [STRING] - ścieżka dla wybranej akcji
::       _b [STRING] - forma współpracy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('config','genius_pkd');
_erp:=exec('erp_obj','genius_pkd',1,1);

:: Kontrola uprawnień do wysyłania powiadomień o wnioskach urlopowych
_chk_role:="
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_AWDA')
";
{? ~_chk_role()
|| _erp.display_message:=
      'Niestety nie masz uprawnień do wysyłania powiadomień o niezaakceptowanych wnioskach urlopowych.';
   return(_erp)
?};

_erp.display_message:='Nie udało się wysłać powiadomień o niezaakceptowanych wnioskach urlopowych.';

_path:={? var_pres('_a')=type_of('') || _a || return(_erp) ?};
{? _path<>'niezaakceptowane_współpracownik' & _path<>'niezaakceptowane_ogólnie'
|| return(_erp)
?};

_f_zatr:={? var_pres('_b')=type_of('') || _b || return(_erp) ?};
{? _f_zatr='W' || _f_zatr:='' ?};
_date_from:=
   {? AI.getPar('startDate')=''
   || date()
   || exec('iso_datetime_parse','#convert',AI.getPar('startDate')).date
   ?};
_date_to:=
   {? AI.getPar('endDate')=''
   || date(0,0,0)
   || exec('iso_datetime_parse','#convert',AI.getPar('endDate')).date
   ?};

_where:='';
{? _path='niezaakceptowane_współpracownik'
|| _p_ref:=AI.getErpPar('p_ref');
   _p_ref:=exec('FindAndGet','#table',P,_p_ref,,,null());
   _where:='"P".REFERENCE=\'%1\''[$_p_ref]
|? _path='niezaakceptowane_ogólnie'
|| {? +_f_zatr
   || _where:='F_ZATR.KOD=\''+_f_zatr+'\''
   ?}
?};

{? var_press('__PARSES')<100 || exec('start_proces','b_proces',0) ?};
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='PKD_EZK_AWDA';
_params.PROC_START:='T';
_params.GRUPA:='N';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OD',_date_from);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'DO',_date_to);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'SQL_WHERE',_where);

exec('mp_run','#b__box',_params);

title('Genius',,1);

_erp_WU:=exec('erp_obj','genius_pkd',1,1);
_erp_WU.display_message:='Zakończono przygotowanie powiadomień do przełożonych o wnioskach urlopowych do akceptacji.';

_erp_WU


\praca_zdalna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Obsługuje informacje zwrotne nt informacji o pracy zdalnej.
::   WE:
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
:: upewnienie się, że jesteśmy w dobrej intencji
{? AI.INTENT<>'praca.zdalna'
|| FUN.info('Błąd wywołania intencji');
   return(exec('erp_obj','genius'))
?};
exec('config','genius_pkd');

:: Kontrola uprawnień do przeglądania pracy zdalnej (pracy poza siedzibą firmy)
_chk_role:="
   exec('chk_role','#b__box',OPERATOR.USER,'PPL_PLL_PPSF') |
   exec('chk_role','#b__box',OPERATOR.USER,'PPL_PLL_RPSF')
";
{? ~_chk_role()
|| _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Niestety nie masz uprawnień do przeglądania pracy poza siedzibą firmy.'@;
   return(_erp)
?};

:: parametry wymagane
      _startDate:=AI.getPar('startDate');
        _endDate:=AI.getPar('endDate');

:: parametry opcjonalne
          _akcja:=AI.getPar('akcja');
_formaWspolpracy:=AI.getPar('formaWspolpracy');
       _nazwisko:=AI.getPar('nazwisko');
           _imie:=AI.getPar('imie');
  _pracownikLicz:={? _formaWspolpracy<>''
                  || {? _formaWspolpracy*'Wiele' || 'wiele' || 'jeden' ?}
                  || ''
                  ?};

:: parametry ustawione w sesji
           _path:={? AI.getErpPar('path')<>~~ || AI.getErpPar('path') || '' ?};
       _co_dalej:={? AI.getErpPar('co_dalej')<>~~ || AI.getErpPar('co_dalej') || '' ?};
          _p_ref:={? AI.getErpPar('p_ref')<>~~ || AI.getErpPar('p_ref') || '' ?};
       _nazwisko:={? _nazwisko='' & AI.getErpPar('nazwisko')<>~~ || AI.getErpPar('nazwisko') || _nazwisko ?};
_formaWspolpracy:={? _formaWspolpracy='' & AI.getErpPar('formaWspolpracy')<>~~
                  || ~-(1+AI.getErpPar('formaWspolpracy'))
                  || ~-(1+_formaWspolpracy)
                  ?};

{? +_co_dalej
|| {? ~+_path || _path:=exec('getPathFromAction','genius_pkd',_co_dalej) ?};
   _akcja:=exec('co_dalej_akcja','genius_pkd',_co_dalej)
|? +_akcja
|| {? ~+_path || _path:=exec('getPathFromAction','genius_pkd',_akcja) ?};
   _akcja:=exec('co_dalej_akcja','genius_pkd',_akcja)
?};

{? _akcja='capabilities'
|| return(exec('capabilities','genius_pkd'))

|? _akcja='koniec'
|| return(exec('sayonara','genius_pkd'))

|? _akcja<>'praca zdalna'
|| return(exec('confused','genius_pkd'))
?};

:: Korekta ścieżki do uwzględnienie liczby współpracowników
{? _akcja='praca zdalna' & ~(_path*'współpracownik' | _path*'ogólnie')
|| {? (_pracownikLicz='jeden') | +_nazwisko
   || _path:='%1_%2'[_path,'współpracownik']
   |? (_pracownikLicz='wiele' | -_pracownikLicz='pracownicy')
   || _path:='%1_%2'[_path,'ogólnie']
   ?}
?};

:: Określenie formy współpracy
{? _akcja='praca zdalna' & _formaWspolpracy=''
|| _erp_param:=exec('ask4Param','genius_pkd',_akcja,'formaWspolpracy',_path);
   {? var_pres('_erp_param')>0
   || return(_erp_param)
   ?}
?};

:: Określenie nazwiska współpracownika
{? _akcja='praca zdalna' & _path*'_współpracownik' & _nazwisko='' & _p_ref=''
|| _erp:=exec('ask4nazwisko','genius_pkd',_formaWspolpracy)
?};
{? var_pres('_erp')>0 || return(_erp) ?};

:: Określenie współpracownika
{? _akcja='praca zdalna' & _path*'_współpracownik'
|| _erp_prac:=exec('ask4Pracownik','genius_pkd',_nazwisko,_p_ref,_path,_formaWspolpracy);
   {? var_pres('_erp_prac')>0
   || return(_erp_prac)
   ?}
?};

:: Określenie podstawowej ścieżki
{? _akcja='praca zdalna' &
   (_path='' | _path='_współpracownik' | _path='_ogólnie' | ~(_path*'_współpracownik' | _path*'_ogólnie'))
|| _erpParams:=obj_new('path','formaWspolpracy','nazwisko','p_ref');
   _erpParams.formaWspolpracy:=_formaWspolpracy;
   _erpParams.nazwisko:=_nazwisko;
   _erpParams.p_ref:=_p_ref;
   _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path,,_erpParams);
   {? var_pres('_erp_path')>0
   || {? var_pres('_erp')>0 || obj_del('_erp') ?};
      _erp:=_erp_path
   ?}
?};
{? var_pres('_erp')>0 || return(_erp) ?};

{? _akcja='praca zdalna'
|| _erp:=exec('praca_zdalna_data','genius_pkd',_path,_formaWspolpracy)

|| _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Nie znaleziono informacji o pracy poza siedzibą firmy.';
   return(_erp)
?};

:: Jeżeli doszliśmy tu, to ustawiamy status interakcji na 1 i pytamy się co dalej
AI.setErpPar('co_dalej',~~);
 _erp.interact.status:=0;

_erp


\praca_zdalna_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Wyszukuje informacje o pracy poza siedzibą firmy w podanym okresie
::   WE: _a [STRING] - ścieżka dla wybranej akcji
::       _b [STRING] - forma zatrudnienia
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('config','genius_pkd');
_erp:=exec('erp_obj','genius_pkd',1,1);

_erp.display_message:='Nie znaleziono danych dotyczących pracy poza siedzibą firmy.';

_path:={? var_pres('_a')=type_of('') || _a || return(_erp) ?};
_slokod:=spli_str(_path,'_')[1];
_pat:=obj_new(2);
_rep:=obj_new(2);
_pat[1]:='_współpracownik'; _pat[2]:='_ogólnie';
_rep[1]:=''; _rep[2]:='';
_slokod:=gsub(_path,_pat,_rep);
obj_del(_pat,_rep);
_correctPath:='|';
SLO_KOD.cntx_psh();
SLO_KOD.index('KOD');
SLO_KOD.prefix(exec('slo_typ','ext_slo','PPSFT'));
{? SLO_KOD.first()
|| {!
   |? _correctPath+='%1_%2|%1_%3|'[SLO_KOD.KOD,'współpracownik','ogólnie'];
      SLO_KOD.next()
   !}
?};
SLO_KOD.cntx_pop();
{? ~(_correctPath*'|%1|'[_path]) & _path<>'EVERYTHING_współpracownik' & _path<>'EVERYTHING_ogólnie'
|| return(_erp)
?};

_f_zatr:={? var_pres('_b')=type_of('') & 'P,Z'*_b || _b || return(_erp) ?};
{? _slokod='EVERYTHING' || _slokod:='' ?};
_startDate:=
   {? AI.getPar('startDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('startDate')).date
   || date()
   ?};
_endDate:=
   {? AI.getPar('endDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('endDate')).date
   || date()
   ?};
_message:=
   {? _endDate=date(0,0,0) || 'po %1 r.'@ [_startDate$6]
   |? _startDate=_endDate  || 'w dniu %1 r.'@ [_startDate$6]
   ||                         'w okresie od %1 r. do %2 r.'@ [_startDate$6,_endDate$6]
   ?};
_cooperation:=
   {? _f_zatr='P' || {? _path*'_współpracownik' || 'Pracownik'      || 'Pracownicy' ?}
   |? _f_zatr='Z' || {? _path*'_współpracownik' || 'Zleceniobiorca' || 'Zleceniobiorcy' ?}
   ||                {? _path*'_współpracownik' || 'Współpracownik' || 'Współpracownicy' ?}
   ?};

_counter:=_ind:=0;

P.cntx_psh();
P.use('pracowni');
P.prefix();
{? P.f_active() || P.f_clear() ?};

{? _path*'_współpracownik'
|| _p_ref:=AI.getErpPar('p_ref');
   _p_ref:=exec('FindAndGet','#table',P,_p_ref,,,null());
   P.f_set(,,'P.REFERENCE=:_a',_p_ref)

|? _path*'_ogólnie'
|| _P:=exec('dostepne_p','schemat','PKD',{? +_f_zatr || _f_zatr || '*' ?});
   P.f_set(,,'P.REFERENCE in (select :_a.REF from :_a)',_P)
?};

_query:=
   'select '
      'PPSFN.REFERENCE as REF, '
      'PPSFN.P as P, '
      'OSOBA.NAZWISKO as NAZWISKO, '
      'OSOBA.PIERWSZE as PIERWSZE, '
      'OSOBA.PESEL as PESEL, '
      'PPSFN.OD as OD '
   'from PPSFN join PPSFT using (PPSFN.PPSFT, PPSFT.REFERENCE) '
      'join SLO_KOD using (PPSFT.SLO_KOD,SLO_KOD.REFERENCE) '
      'join OSOBA using (PPSFN.OSOBA,OSOBA.REFERENCE) '
   'where PPSFN.FIRMA=:_a and PPSFN.OD<=to_date(:_c) and PPSFN.DO>=to_date(:_b) '+
   {? _path*'_współpracownik' || 'and PPSFN.P=:_d '
   |? _path*'_ogólnie' || 'and PPSFN.P in (select :_d.REF from :_d) '
   ?}+
   {? _slokod<>'' || 'and SLO_KOD.KOD=\':_e\' ' || '' ?}+
   'order by NAZWISKO,PIERWSZE,PESEL, OD';
_PPSFN:=sql(_query,exec('firma','ustawienia'),_startDate,_endDate,{? _path*'_współpracownik' || _p_ref || _P ?},_slokod);

{? _PPSFN.first()
|| _erp_PZ:=exec('erp_obj','genius_pkd',_PPSFN.size());

   OSOBA.cntx_psh();
   PPSFN.cntx_psh();
   PPSFT.cntx_psh();
   _ind:=1;

   {!
   |? {? P.f_seek(_PPSFN.P) & PPSFN.seek(_PPSFN.REF)
      || P.OSOBA();

:        Praca poza siedzibą firmy współpracownika (praca zdalna, delegacje, karmienie piersią)
         {? _path*'_współpracownik'
         || _erp_PZ.display_message:=
               '%1 %2 %3 pracuje poza siedzibą firmy:'[_cooperation,exec('pracDesc','genius_pkd'),_message];
            _erp_PZ.data[_ind].type:='link';
            _erp_PZ.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
            _erp_PZ.data[_ind].values[1].display_name:=
               'Rodzaj: %1<br>Data rozpoczęcia: %2<br>Data zakończenia: %3'
               [PPSFN.PPSFT().OPIS,$PPSFN.OD,$PPSFN.DO];
            {? PPSFN.PARTDAY='T'
            || _erp_PZ.data[_ind].values[1].display_name+='<br>Liczba godzin: %1'[$PPSFN.G]
            ?};
            _erp_PZ.data[_ind].values[1].desc:='';
            _erp_PZ.data[_ind].values[1].link:=
               exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',PPSFN.uidref()));
            _counter+=1

::       Praca poza siedzibą firmy współpracowników (praca zdalna, delegacje, karmienie piersią)
         |? _path*'_ogólnie'
         || {? ~_counter
            || _erp_PZ.display_message:='%1, którzy %2 pracują poza siedzibą firmy:'[_cooperation,_message]
            ?};
            _erp_PZ.data[_ind].type:='link';
            _erp_PZ.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
            _erp_PZ.data[_ind].values[1].display_name:=
               '%1<br>Rodzaj: %2<br>Data rozpoczęcia: %3<br>Data zakończenia: %4'
               [exec('pracDesc','genius_pkd'),PPSFN.PPSFT().OPIS,$PPSFN.OD,$PPSFN.DO];
            {? PPSFN.PARTDAY='T'
            || _erp_PZ.data[_ind].values[1].display_name+='<br>Liczba godzin: %1'[$PPSFN.G]
            ?};
            _erp_PZ.data[_ind].values[1].desc:='';
            _erp_PZ.data[_ind].values[1].link:=
               exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',PPSFN.uidref()));
            _counter+=1
         ?};
         _ind+=1
      ?};

      _PPSFN.next()
   !};

   PPSFT.cntx_pop();
   PPSFN.cntx_pop();
   OSOBA.cntx_pop()
?};

{? ~_counter
|| {? ~_ind || _erp_PZ:=exec('erp_obj','genius_pkd',1,1) ?};
   _erp_PZ.display_message:='Nie znaleziono danych dotyczących pracy poza siedzibą firmy.';
   _erp_PZ.interact.status:=0
|| _erp_PZ.interact.status:=1
?};

{? P.f_active() || P.f_clear() ?};
P.cntx_pop();

_erp_PZ


\umowy_wspolpracownik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Obsługuje informacje zwrotne nt umów pracownika (umowy o pracę, umowy zlecenia).
::   WE:
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
:: upewnienie się, że jesteśmy w dobrej intencji
:{? AI.INTENT<>'umowy.wspolpracownik'
{? AI.INTENT<>'koniec.umowy'
|| FUN.info('Błąd wywołania intencji');
   return(exec('erp_obj','genius'))
?};
exec('config','genius_pkd');

:: Kontrola uprawnień do przeglądania umów o pracę i cywilnoprawnych (wstępne sprawdzenie czy mamy cokolwiek)
_chk_role:="
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_PPZA') |
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_RPZA') |
   exec('chk_role','#b__box',OPERATOR.USER,'PPL_ZLC_RUZC') |
   exec('chk_role','#b__box',OPERATOR.USER,'PPL_ZLC_PUZC')
";
{? ~_chk_role()
|| _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Niestety nie masz uprawnień do przeglądania umów współpracowników.'@;
   return(_erp)
?};

:: parametry wymagane
      _startDate:=AI.getPar('startDate');
        _endDate:=AI.getPar('endDate');

:: parametry opcjonalne
          _akcja:=AI.getPar('akcjaUmowy');
   _waznoscUmowy:=AI.getPar('waznoscDokumentu');
_formaWspolpracy:=AI.getPar('formaWspolpracy');
       _nazwisko:=AI.getPar('nazwisko');
      _nazwisko2:=AI.getPar('nazwisko2');
           _imie:=AI.getPar('imie');
  _pracownikLicz:={? _formaWspolpracy<>''
                  || {? _formaWspolpracy*'Wiele' || 'wiele' || 'jeden' ?}
                  || ''
                  ?};

:: parametry ustawione w sesji
           _path:={? AI.getErpPar('path')<>~~ || AI.getErpPar('path') || '' ?};
       _co_dalej:={? AI.getErpPar('co_dalej')<>~~ || AI.getErpPar('co_dalej') || '' ?};
   _waznoscUmowy:={? AI.getErpPar('waznoscUmowy')<>~~ || AI.getErpPar('waznoscUmowy') || _waznoscUmowy ?};
          _p_ref:={? AI.getErpPar('p_ref')<>~~ || AI.getErpPar('p_ref') || '' ?};
      _osoba_ref:={? AI.getErpPar('osoba_ref')<>~~ || AI.getErpPar('osoba_ref') || '' ?};
       _nazwisko:={? _nazwisko='' & AI.getErpPar('nazwisko')<>~~ || AI.getErpPar('nazwisko') || _nazwisko ?};
_formaWspolpracy:={? _formaWspolpracy='' & AI.getErpPar('formaWspolpracy')<>~~
                  || ~-(1+AI.getErpPar('formaWspolpracy'))
                  || ~-(1+_formaWspolpracy)
                  ?};

{? +_co_dalej
|| _path:=gsub(_path,'umowy_praca',_co_dalej);
:   {? ~+_path || _path:=exec('getPathFromAction','genius_pkd',_co_dalej) ?};
   _akcja:=exec('co_dalej_akcja','genius_pkd',_co_dalej)
|? +_akcja
|| {? ~+_path || _path:=exec('getPathFromAction','genius_pkd','%1 %2'[_akcja,_waznoscUmowy]) ?};
   _akcja:=exec('co_dalej_akcja','genius_pkd',_akcja)
?};

{? _akcja='capabilities'
|| return(exec('capabilities','genius_pkd'))
|? _akcja='koniec'
|| return(exec('sayonara','genius_pkd'))
?};

{? _akcja<>'umowy współpracownika' & _akcja<>'powiadomienia'
|| return(exec('confused','genius_pkd'))
?};

{? var_pres('_erp')>0 || return(_erp) ?};

:: sprawdzenie czy w intencji określono już ścieżkę
{? (_akcja='umowy współpracownika' | _akcja='powiadomienia') & (_pracownikLicz<>'' | +_nazwisko) &
   ~(_path*'|współpracownik|' | _path*'|ogólnie|')
|| {? _pracownikLicz='jeden' | +_nazwisko
   || _path:='%1|%2|'[_path,'współpracownik']
   |? _pracownikLicz='wiele'
   || _path:='%1|%2|'[_path,'ogólnie']
   ?}
?};

:: Określenie formy współpracy
{? _akcja='umowy współpracownika' & _formaWspolpracy='' & _waznoscUmowy<>'kończące'
|| _erp_param:=exec('ask4Param','genius_pkd',_akcja,'formaWspolpracy',_path);
   {? var_pres('_erp_param')>0
   || return(_erp_param)
   ?}
|? _akcja='umowy współpracownika' & _formaWspolpracy='' & _waznoscUmowy='kończące'
|| _formaWspolpracy:='P'
?};

:: Określenie liczby współpracowników
{? _akcja='umowy współpracownika' & ~(_path*'|współpracownik|' | _path*'|ogólnie|') & _nazwisko=''
|| _erpParams:=obj_new('path','formaWspolpracy');
   _erpParams.formaWspolpracy:=_formaWspolpracy;
   _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path,,_erpParams);
   {? var_pres('_erp_path')>0
   || {?  var_pres('_erp')>0 || obj_del('_erp') ?};
      _erp:=_erp_path
   ?}
?};

:: Określenie nazwiska współpracownika
{? _akcja='umowy współpracownika' & _path*'|współpracownik|' & _nazwisko='' & _p_ref='' & _osoba_ref=''
|| _erp:=exec('ask4nazwisko','genius_pkd',_formaWspolpracy)
?};
{? var_pres('_erp')>0 || return(_erp) ?};

:: Określenie współpracownika
{? _akcja='umowy współpracownika' & _path*'|współpracownik|' & _nazwisko<>'' & _p_ref='' & _osoba_ref=''
|| _erp_prac:={? _formaWspolpracy<>'W'
              || exec('ask4Pracownik','genius_pkd',_nazwisko,_p_ref,_path,_formaWspolpracy)
              || exec('ask4Osoba','genius_pkd',_nazwisko,_osoba_ref,_path,_formaWspolpracy)
              ?};
   {? var_pres('_erp_prac')>0
   || return(_erp_prac)
   || {? _formaWspolpracy<>'W'
      || _p_ref:=AI.getErpPar('p_ref')
      || _osoba_ref:=AI.getErpPar('osoba_ref')
      ?}
   ?}
?};

:: Określenie podstawowej ścieżki (rodzaj umów, zakres)
{? _akcja='umowy współpracownika' & _path*'|umowa|' & 'PZ'*_formaWspolpracy
|| _path:=gsub(_path,'|umowa|',{? _formaWspolpracy='P' || '|umowy_praca|' || '|umowy_zlecenie|' ?})
|? _akcja='umowy współpracownika' & ~(_path*'umowy') & 'PZ'*_formaWspolpracy
|| _path:='%1|%2|'[_path,{? _formaWspolpracy='P' || 'umowy_praca' || 'umowy_zlecenie' ?}]
?};
{? _akcja='umowy współpracownika' & (
   ~(_path*'|umowy_praca|' | _path*'|umowy_zlecenie|' | _path*'|umowy_razem|') |
   ~(_path*'|aktywne|' | _path*'|nieaktywne|' | _path*'|kończące|' | _path*'|wszystkie|'))
|| _erpParams:=obj_new('path','formaWspolpracy','nazwisko','p_ref','osoba_ref');
   _erpParams.formaWspolpracy:=_formaWspolpracy;
   _erpParams.nazwisko:=_nazwisko;
   _erpParams.p_ref:=_p_ref;
   _erpParams.osoba_ref:=_osoba_ref;
   _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path,,_erpParams);
   {? var_pres('_erp_path')>0
   || return(_erp_path)
   ?}
?};

{? _akcja='umowy współpracownika' & _path*'|umowy_praca|' & _path*'|kończące|'
|| _erp:=exec('umowy_o_prace','genius_pkd',_path)
|? _akcja='umowy współpracownika'
|| _erp:=exec('umowy_wspolpracownik_data','genius_pkd',_path,_formaWspolpracy)
|? _akcja='powiadomienia'
|| _erp:=exec('umowy_o_prace_powiadomienia','genius_pkd',_path)
|| {? var_pres('_erp')>0 || obj_del('_erp') ?};
   _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Podaj jakie informacje o wybranym pracowniku Cię interesują:';
   _erp.data[1].type:='link';
   _erp.data[1].values[1].icon:='bi bi-question-circle-fill icon-size-lg';
   _erp.data[1].values[1].display_name:='';
   _erp.data[1].values[1].desc:='';
   _erp.data[1].values[1].link:=''
?};

:: jeżeli doszliśmy tu, to ustawiamy status interakcji na 1 i pytamy się co dalej
AI.setErpPar('co_dalej',~~);
{? _erp.interact.status<>0 & _path*'|umowy_praca|' & _path*'|kończące|'
|| _erp.interact.status:=1;
   exec('choose_what_next','genius_pkd',_erp)
|| _erp.interact.status:=0
?};
_erp


\umowy_wspolpracownik_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Wyszukuje współpracowników z umowami o pracę / umowami zlecenia w podanym okresie
::   WE: _a [STRING] - ścieżka
::       _b [STRING] - forma zatrudnienia [P/Z/W]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('config','genius_pkd');
_erp:=exec('erp_obj','genius_pkd',1,1);
_erp.display_message:='Nie znaleziono umów współpracowników.';

  _path:={? var_pres('_a')=type_of('')              || _a || return(_erp) ?};
_f_zatr:={? var_pres('_b')=type_of('') & 'P,Z,W'*_b || _b || return(_erp) ?};
{? _f_zatr='W' || _f_zatr:='' ?};

:: Kontrola poprawności ścieżki
{? ~((_path*'|kończące|' | _path*'|aktywne|' | _path*'|nieaktywne|' | _path*'|wszystkie|') &
     (_path*'|umowy_praca|' | _path*'|umowy_zlecenie|' | _path*'|umowy_razem|') &
     (_path*'|współpracownik|' | _path*'|ogólnie|')
    )
|| return(_erp)
?};

:: Kontrola uprawnień do przeglądania umów o pracę lub umów cywilnoprawnych
_chk_role:="
   _UP:=exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_PPZA') |
        exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_RPZA');
   _UZ:=exec('chk_role','#b__box',OPERATOR.USER,'PPL_ZLC_PUZC') |
        exec('chk_role','#b__box',OPERATOR.USER,'PPL_ZLC_RUZC');
   {? _a='P' || _UP
   |? _a='Z' || _UZ
   || _UP & _UZ
   ?}
";
{? ~_chk_role(_f_zatr)
|| _erp.display_message:='Niestety nie masz uprawnień do przeglądania umów współpracownika.'@;
   return(_erp)
?};

_date_from:=
   {? AI.getPar('startDate')=''
   || date()
   || exec('iso_datetime_parse','#convert',AI.getPar('startDate')).date
   ?};
_date_to:=
   {? AI.getPar('endDate')=''
   || date(0,0,0)
   || exec('iso_datetime_parse','#convert',AI.getPar('endDate')).date
   ?};

_counter:=_ind:=0;

P.cntx_psh();
P.use('pracowni');
P.prefix();
H.cntx_psh();
H.use('_hist');
H.prefix();
ZC.cntx_psh();
ZC.prefix();

{? (_path*'|umowy_praca|' | _path*'|umowy_razem|')
|| _where:={? _path*'|współpracownik|'
           || {? _f_zatr<>''
              || ' and P.REFERENCE=\''+AI.getErpPar('p_ref')+'\''
              || ' and P.OSOBA=\''+AI.getErpPar('osoba_ref')+'\''
              ?}
           || ''
           ?};
   _whereDate:=
      {? _path*'|aktywne|'
      || {? _date_to<>date(0,0,0)
         || 'H.OD<=to_date(:_b) and (H.DO is null or to_date(:_a)<=H.DO)'
         || '(H.DO is null or to_date(:_a)<=H.DO)'
         ?}
      |? _path*'|nieaktywne|'
      || {? _date_to<>date(0,0,0)
         || '(to_date(:_b)<H.OD or H.DO<to_date(:_a))'
         || 'to_date(:_b)<H.OD'
         ?}
      || '1=1'
      ?};
   {? H.f_active() || H.f_clear() ?};
   H.f_set(
      'OD',
      'join H_ZM using (H.KZ,H_ZM.REFERENCE) '
      '  join P using(H.P,P.REFERENCE)',
      'H_ZM.KZ=\'Z\' and '+_whereDate+_where,
      _date_from,_date_to
   )
?};
{? (_path*'|umowy_zlecenie|' | _path*'|umowy_razem|')
|| _where:={? _path*'|współpracownik|'
           || {? _f_zatr<>''
              || ' and ZC.P=\''+AI.getErpPar('p_ref')+'\''
              || ' and ZC.OSOBA=\''+AI.getErpPar('osoba_ref')+'\''
              ?}
           || ''
           ?};
   _whereDate:=
      {? _path*'|aktywne|'
      || {? _date_to=date(0,0,0)
         || 'DU<=to_date(:_b) and (DW is null or to_date(:_a)<=DW)'
         || '(DW is null or to_date(:_a)<=DW)'
         ?}
      |? _path*'|nieaktywne|'
      || {? _date_to=date(0,0,0)
         || '(to_date(:_b)<DU or DW<to_date(:_a))'
         || 'to_date(:_b)<DU'
         ?}
      || '1=1'
      ?};
   {? ZC.f_active() || ZC.f_clear() ?};
   ZC.f_set(
      'P,DU',,
      ''+_whereDate+_where,
      _date_from,_date_to
   )
?};

{? P.f_active() || P.f_clear() ?};
{? _path*'|współpracownik|'
|| {? _f_zatr<>''
   || _p_ref:=AI.getErpPar('p_ref');
      _p_ref:=exec('FindAndGet','#table',P,_p_ref,,,null());
      P.f_set(,
         'left join F_ZATR using(P.F_ZATR,F_ZATR.REFERENCE)',
         'P.REFERENCE=:_a and F_ZATR.KOD=\':_b\'',_p_ref,_f_zatr
      )
   || _osoba_ref:=AI.getErpPar('osoba_ref');
      _osoba_ref:=exec('FindAndGet','#table',OSOBA,_osoba_ref,,,null());
      P.f_set(,,
         'P.OSOBA=:_a and P.REFERENCE in (select :_b.REF from :_b)',
         _osoba_ref,exec('dostepne_p','schemat','PKD','*')
      )
   ?}
|? _path*'|ogólnie|'
|| _P:=exec('dostepne_p','schemat','PKD',{? _f_zatr<>'' || _f_zatr || '*' ?});
   P.f_set(
      'OSOBA(NAZWISKO),OSOBA(PIERWSZE),OSOBA(PESEL)',
      'join OSOBA using(P.OSOBA,OSOBA.REFERENCE)',
      'P.REFERENCE in (select :_a.REF from :_a)',_P
   )
?};

{? _path*'|współpracownik|'
|| _size:={? _path*'|umowy_praca|'    || H.f_size()
          |? _path*'|umowy_zlecenie|' || ZC.f_size()
          |? _path*'|umowy_razem|'    || H.f_size() + ZC.f_size() || 1
          ?}
|| _size:=P.f_size()
?};

{? P.f_first() & _size>0
|| _erp_UOP:=exec('erp_obj','genius_pkd',_size);
   _ind:=1;
   _where:=
      {? _path*'|nieaktywne|'
      || $( {? _date_to<>date(0,0,0)
            || '(_d<_a & _d<>date(0,0,0)) | _b<_c'
            || '_d<_a & _d<>date(0,0,0)'
            ?} )
      |? _path*'|aktywne|'
      || $( {? _date_to<>date(0,0,0)
            || '(_a<=_d | _d=date(0,0,0)) & _c<=_b'
            || '_a<=_d | _d=date(0,0,0)'
            ?} )
      || $('1=1')
      ?};
   _contract:=
      {? _path*'|umowy_praca|'    || 'Umowy o pracę'
      |? _path*'|umowy_zlecenie|' || 'Umowy zlecenia'
                                  || 'Umowy o pracę i umowy zlecenia'
      ?};
   _cooperation:=
      {? _f_zatr='P' || {? _path*'|współpracownik|' || 'pracownika'      || 'pracowników' ?}
      |? _f_zatr='Z' || {? _path*'|współpracownik|' || 'zleceniobiorcy'  || 'zleceniobiorców' ?}
      ||                {? _path*'|współpracownik|' || 'współpracownika' || 'współpracowników' ?}
      ?};
   _type:=
      {? _path*'|nieaktywne|' || 'nieaktywne'
      |? _path*'|aktywne|'    || 'aktywne'
      || ''
      ?};
   _period:=
      {? _date_to=date(0,0,0) || 'po %1 r.'@ [_date_from$6]
      |? _date_from=_date_to  || '%1 r.'@ [_date_from$6]
      ||                         'w okresie od %1 r. do %2 r.'@ [_date_from$6,_date_to$6]
      ?};

   OSOBA.cntx_psh();
   OSOBA.prefix();
   UD_SKL.cntx_psh();
   UD_SKL.prefix();
   STN.cntx_psh();
   STN.prefix();
   RU.cntx_psh();
   RU.prefix();
   H_UM.cntx_psh();
   H_UM.use('h_um');
   H_UM.index('OD');
   H_UM.prefix();
::   H.cntx_psh();
::   H.use('_hist');
::   H.index('_HISTKOD');
   ZC.cntx_psh();
   ZC.index('ZLECPRZ');

   {!
   |? P.OSOBA();
      {? exec('dest','f_zatr',P.F_ZATR,'KOD')='P' & (_path*'|umowy_praca|' | _path*'|umowy_razem|')
      ||
::         H.prefix(P.ref(),'Z',);
::         {? H.last()
         H_UM.prefix(P.ref());
         {? H_UM.last()
         || _exist:=0;
            {!
:            |? {? _where(_date_from,_date_to,H.OD,H.DO)
            |? {? _where(_date_from,_date_to,H_UM.OD,H_UM.DO)
               || _exist:=1;
::                Umowy dla współpracownika
                  {? _path*'|współpracownik|'
                  || {? ~_counter
                     || {? _f_zatr<>''
                        || _erp_UOP.display_message:='%1 %2 %3 %4 %5:'
                           [_contract,_cooperation,exec('pracDesc','genius_pkd'),_type,_period]
                        || _erp_UOP.display_message:='%1 %2 <b>%3 %4 (PESEL: %5)</b> %6 %7:'
                           [_contract,_cooperation,OSOBA.NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL,_type,_period]
                        ?}
                     ?};
                     _erp_UOP.data[_ind].type:='link';
                     _erp_UOP.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
                     _erp_UOP.data[_ind].values[1].display_name:=
                        'Rodzaj: %1<br>Numer: %2<br>Data rozpoczęcia: %3<br>Data zakończenia: %4'
::                        [H.RU().O,H.UMOWA().NUMER,$H.UMOWA().OD,$H.DO];
                        [H_UM.RU().O,H_UM.NUMER,$H_UM.OD,$H_UM.DO];
                     _erp_UOP.data[_ind].values[1].desc:='';
                     _erp_UOP.data[_ind].values[1].link:=
                        exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',H_UM.uidref()));
                     _counter+=1

::                Umowy dla wszystkich współpracowników
                  |? _path*'|ogólnie|'
                  || {? ~_counter
                     || _erp_UOP.display_message:='%1 %2 %3 %4:'[_contract,_cooperation,_type,_period]
                     ?};
                     _erp_UOP.data[_ind].type:='link';
                     _erp_UOP.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
                     _erp_UOP.data[_ind].values[1].display_name:='%1'[exec('pracDesc','genius_pkd')];
                     _erp_UOP.data[_ind].values[1].desc:='';
                     _erp_UOP.data[_ind].values[1].link:=
                        exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',H_UM.uidref()));
                     _counter+=1
                  ?};
                  _ind+=1
               ?};
::               (~(_path*'|ogólnie|') | ~_exist) & H.prev()
               (~(_path*'|ogólnie|') | ~_exist) & H_UM.prev()
            !}
         ?}
      |? exec('dest','f_zatr',P.F_ZATR,'KOD')='Z' & (_path*'|umowy_zlecenie|' | _path*'|umowy_razem|')
      || ZC.prefix(P.ref);
         {? ZC.first()
         || _exist:=0;
            {!
            |? {? _where(_date_from,_date_to,ZC.DU,ZC.DW)
               || _exist:=1;
::                Umowy dla współpracownika
                  {? _path*'|współpracownik|'
                  || {? ~_counter
                     || _erp_UOP.display_message:='%1 %2 %3 %4 %5:'
                        [_contract,_cooperation,exec('pracDesc','genius_pkd'),_type,_period]
                     ?};
                     _erp_UOP.data[_ind].type:='link';
                     _erp_UOP.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
                     _erp_UOP.data[_ind].values[1].display_name:=
                        'Rodzaj: %1<br>Numer: %2<br>Data rozpoczęcia: %3<br>Data zakończenia: %4'
                        [ZC.RU().O,ZC.NU,$ZC.DU,$ZC.DW];
                     _erp_UOP.data[_ind].values[1].desc:='';
                     _erp_UOP.data[_ind].values[1].link:=
                        exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',ZC.uidref()));
                     _counter+=1

::                Umowy dla wszystkich współpracowników
                  |? _path*'|ogólnie|'
                  || {? ~_counter
                     || _erp_UOP.display_message:='%1 %2 %3 %4:'[_contract,_cooperation,_type,_period]
                     ?};
                     _erp_UOP.data[_ind].type:='link';
                     _erp_UOP.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
                     _erp_UOP.data[_ind].values[1].display_name:='%1'[exec('pracDesc','genius_pkd')];
                     _erp_UOP.data[_ind].values[1].desc:='';
                     _erp_UOP.data[_ind].values[1].link:=
                        exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',ZC.uidref()));
                     _counter+=1
                  ?};
                  _ind+=1
               ?};
               (~(_path*'|ogólnie|') | ~_exist) & ZC.next()
            !}
         ?}
      ?};
      P.f_next()
   !};

   ZC.cntx_pop();
::   H.cntx_pop();
   H_UM.cntx_pop();
   RU.cntx_pop();
   STN.cntx_pop();
   UD_SKL.cntx_pop();
   OSOBA.cntx_pop()
?};

{? ~_counter
|| {? ~_ind || _erp_UOP:=exec('erp_obj','genius_pkd',1,1) ?};
   _erp_UOP.display_message:='Nie znaleziono danych dotyczących umów współpracownika.';
   _erp_UOP.interact.status:=0
|| _erp_UOP.interact.status:=1
?};

{? P.f_active() || P.f_clear() ?};

ZC.cntx_pop();
H.cntx_pop();
P.cntx_pop();

_erp_UOP


\ask4Osoba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Określenie osoby na podstawie przekazanych parametrów
::   WE: _a [STRING] - nazwisko
::       _b [STRING] - wskazanie na osobę
::       _c [STRING] - wybrana ścieżka
::       _d [STRING] - forma zatrudnienia
::   WY: obiekt _erp lub ~~
::----------------------------------------------------------------------------------------------------------------------
 _nazwisko:={? var_pres('_a')=type_of('') || _a || '' ?};
_osoba_ref:={? var_pres('_b')=type_of('') || _b || '' ?};
     _path:={? var_pres('_c')=type_of('') || _c || '' ?};
   _f_zatr:={? var_pres('_d')=type_of('') || _d || '' ?};

:: Określenie wszystkich osób pasujących do przekazanego parametru
_sql_all:=''+"select OSOBA.REFERENCE as REF, NAZWISKO, PIERWSZE, PESEL, PASZPORT
          from OSOBA
          where "+
          {? +_osoba_ref
          || "OSOBA.REFERENCE='"+_osoba_ref+"'"
          || "UPPER(OSOBA.NAZWISKO) LIKE UPPER('"+_nazwisko+"')"
          ?};

{? PAR_SKID.get(188)='T'
|| _sql_dost:=''+"select OSOBA.REFERENCE as REF, NAZWISKO, PIERWSZE, PESEL, PASZPORT
          from OSOBA
          where OSOBA.REFERENCE in
            (select distinct :_a.OSOBA from :_a)"
|| _sql_dost:=''+"select OSOBA.REFERENCE as REF, NAZWISKO, PIERWSZE, PESEL, PASZPORT
          from OSOBA
          where OSOBA.REFERENCE in
            (select P.OSOBA from P where P.FIRMA=:_a)"
?};

:: sql pozostawiający tylko tych pracowników z tabeli :_a, którzy znajdują się również w tabeli :_b
_sql_join:=''+"
   select * from :_a join :_b using(:_a.REF,:_b.REF)
";

OSOBA.cntx_psh();
OSOBA.prefix();
P.cntx_psh();
P.use('pracowni');
P.index('OSOBA');
P.prefix();
_OSOBA_ALL:=sql(_sql_all,_osoba_ref);
{? PAR_SKID.get(188)='T'
|| _OSOBA_DOST:=sql(_sql_dost,exec('dostepne_p','schemat','PKD','*'))
|| _OSOBA_DOST:=sql(_sql_dost,exec('ref_firma','ustawienia'))
?};
_OSOBA:=sql(_sql_join,_OSOBA_ALL,_OSOBA_DOST);
P.cntx_pop();
OSOBA.cntx_pop();

{? ~_OSOBA.first()
|| {? var_pres('_erp')>0 || obj_del('_erp') ?};
   _erp:=exec('erp_obj','genius_pkd',1,1,0);
   _erp.display_message:='Brak współpracownika o podanym nazwisku.';
   _erp.data[1].type:='link';
   _erp.data[1].values[1].icon:='bi info-circle-fill icon-size-lg';
   _erp.data[1].values[1].display_name:='';
   _erp.data[1].values[1].desc:='';
   _erp.data[1].values[1].link:='';
   return(_erp)
|? _OSOBA.size()>1
|| {? var_pres('_erp')>0 || obj_del('_erp') ?};
   _par:=obj_new('path','formaWspolpracy','nazwisko','osoba_ref');
   _par.path:=_path;
   _par.formaWspolpracy:=_f_zatr;
   _par.nazwisko:=_nazwisko;
   _erp:=exec('erp_obj','genius_pkd',_OSOBA.size(),1);
   _erp.display_message:='Wybierz współpracownika:';
   _ind:=1;
   P.cntx_psh();
   P.index('OSOBA');
   P.prefix();
   {!
   |? {? P.seek(_OSOBA.REF)
      || _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-person-fill icon-size-lg';
         _erp.data[_ind].values[1].display_name:=exec('pracDesc','genius_pkd');
         _erp.data[_ind].values[1].desc:='';
         _par.osoba_ref:=_OSOBA.REF;
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
         _ind+=1
      ?};
      _OSOBA.next()
   !};
   P.cntx_pop();
   return(_erp)
|| AI.setErpPar('osoba_ref',_OSOBA.REF)
?};
~~


\zamkniecie_miesiaca
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Umożliwia zamknięcie wybranego miesiąca rozliczeniowego poprzez proces.
::   WE:
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
:: upewnienie się, że jesteśmy w dobrej intencji
{? AI.INTENT<>'zamknij.miesiac'
|| FUN.info('Błąd wywołania intencji');
   return(exec('erp_obj','genius'))
?};
exec('config','genius_pkd');

:: parametry wymagane
_startDate:=AI.getPar('startDate');
  _endDate:=AI.getPar('endDate');

:: Przygotowanie daty (pobieramy zawsze z daty rozpoczęcia)
_date:=
   {? AI.getPar('startDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('startDate')).date
   || date()
   ?};
_year:=_date~1;
_month:=_date~2;

:: Wyszukanie odpowiedniego zapisu w A_OKRM
_error:='';
A_OKRM.cntx_psh();
A_OKRM.index('A_OKRMR');
A_OKRM.prefix(_year,_month);
{? A_OKRM.first()
|| {? A_OKRM.S<>'O'
   || _error:='ROZLICZENIE'
   |? A_OKRM.S_PLAN<>'Z'
   || _error:='PLANOWANIE'
   || _a_okrm:=A_OKRM.ref();
      _a_okrmS:=$A_OKRM.ref()
   ?}
|| _error:='BRAK'
?};
A_OKRM.cntx_pop();

:: Zabezpieczenie jeśli nie odnaleźliśmy wybranego miesiąca rozliczeniowego
{? _error<>''
|| _erp_ZM:=exec('erp_obj','genius_pkd',1,1);
   {? _error='BRAK'
   || _erp_ZM.display_message:='Nie znaleziono wybranego miesiąca rozliczeniowego (%1).'
      [date(_year,_month,1)$8]
   |? _error='ROZLICZENIE'
   || _erp_ZM.display_message:='Wybrany miesiąc rozliczeniowy (%1) jest już zamknięty.'
      [date(_year,_month,1)$8]
   |? _error='PLANOWANIE'
   || _erp_ZM.display_message:='Planowanie dla wybranego miesiąca rozliczeniowego (%1) nie zostało jeszcze zablokowane.'
      ' Zamknięcie miesiąca rozliczeniowego jest niemożliwe.'[date(_year,_month,1)$8]
   ?};
   return(_erp_ZM)
?};

:: Uruchomienie procesu
{? var_press('__PARSES')<100 || exec('start_proces','b_proces',0) ?};
_a_okrm_uidref:=exec('FindAndGet','#table',A_OKRM,_a_okrm,,"@.A_OKRM.uidref()",'');
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='PRC_MCR_WMRO';
_params.PROC_START:='T';
_params.PROC_SYM:='PER_ZAR';
_params.PROC_VER:='RR.xx';
_params.QUIET:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
_params.UIDREF:=_a_okrm_uidref;
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'A_OKRM',_a_okrm);

exec('mp_run','#b__box',_params);

title('Genius',,1);

_erp_ZM:=exec('erp_obj','genius_pkd',1,1);
_erp_ZM.display_message:='Zakończono zamykanie miesiąca rozliczeniowego (%1).'[date(_year,_month,1)$8];
_erp_ZM


\nadgodziny_praca
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Obsługuje informacje zwrotne nt nadgodzin współpracowników.
::   WE:
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
:: upewnienie się, że jesteśmy w dobrej intencji
{? AI.INTENT<>'nadgodziny.praca'
|| FUN.info('Błąd wywołania intencji');
   return(exec('erp_obj','genius'))
?};
exec('config','genius_pkd');

:: Kontrola uprawnień do przeglądania oddelegowań zagranicznych
_chk_role:="
   exec('chk_role','#b__box',OPERATOR.USER,'PPL_PLL_PGOD') |
   exec('chk_role','#b__box',OPERATOR.USER,'PPL_PLL_RGOD')
";
{? ~_chk_role()
|| _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Niestety nie masz uprawnień do przeglądania nadgodzin.'@;
   return(_erp)
?};

:: parametry wymagane
      _startDate:=AI.getPar('startDate');
        _endDate:=AI.getPar('endDate');

:: parametry opcjonalne
          _akcja:=AI.getPar('akcja');
_formaWspolpracy:=AI.getPar('formaWspolpracy');
       _nazwisko:=AI.getPar('nazwisko');
           _imie:=AI.getPar('imie');
  _pracownikLicz:={? _formaWspolpracy<>''
                  || {? _formaWspolpracy*'Wiele' || 'wiele' || 'jeden' ?}
                  || ''
                  ?};

:: parametry ustawione w sesji
           _path:={? AI.getErpPar('path')<>~~ || AI.getErpPar('path') || '' ?};
       _co_dalej:={? AI.getErpPar('co_dalej')<>~~ || AI.getErpPar('co_dalej') || '' ?};
          _p_ref:={? AI.getErpPar('p_ref')<>~~ || AI.getErpPar('p_ref') || '' ?};
       _nazwisko:={? _nazwisko='' & AI.getErpPar('nazwisko')<>~~ || AI.getErpPar('nazwisko') || _nazwisko ?};
_formaWspolpracy:={? _formaWspolpracy='' & AI.getErpPar('formaWspolpracy')<>~~
                  || ~-(1+AI.getErpPar('formaWspolpracy'))
                  || ~-(1+_formaWspolpracy)
                  ?};

{? +_co_dalej
|| {? ~+_path || _path:=exec('getPathFromAction','genius_pkd',_co_dalej) ?};
   _akcja:=exec('co_dalej_akcja','genius_pkd',_co_dalej)
|? +_akcja
|| {? ~+_path || _path:=exec('getPathFromAction','genius_pkd',_akcja) ?};
   _akcja:=exec('co_dalej_akcja','genius_pkd',_akcja)
?};

{? _akcja='capabilities'
|| return(exec('capabilities','genius_pkd'))
|? _akcja='koniec'
|| return(exec('sayonara','genius_pkd'))
|? _akcja<>'nadgodziny'
|| return(exec('confused','genius_pkd'))
?};
{? var_pres('_erp')>0 || return(_erp) ?};

:: sprawdzenie czy w intencji określono już ścieżkę
{? _akcja='nadgodziny' & (_pracownikLicz<>'' | +_nazwisko) &
   ~(_path*'|współpracownik|' | _path*'|ogólnie|')
|| {? _pracownikLicz='jeden' | +_nazwisko
   || _path:='%1|%2|'[_path,'współpracownik']
   |? _pracownikLicz='wiele'
   || _path:='%1|%2|'[_path,'ogólnie']
   ?}
?};

:: Określenie formy współpracy
{? _akcja='nadgodziny' & _formaWspolpracy=''
|| _erp_param:=exec('ask4Param','genius_pkd',_akcja,'formaWspolpracy',_path);
   {? var_pres('_erp_param')>0
   || return(_erp_param)
   ?}
?};

:: Określenie liczby współpracowników
{? _akcja='nadgodziny' & ~(_path*'|współpracownik|' | _path*'|ogólnie|') & _nazwisko=''
|| _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path);
   {? var_pres('_erp_path')>0
   || return(_erp_path)
   ?}
?};

:: Określenie nazwiska współpracownika
{? _akcja='nadgodziny' & _path*'|współpracownik|' & _nazwisko='' & _p_ref=''
|| _erp:=exec('ask4nazwisko','genius_pkd',_formaWspolpracy)
?};
{? var_pres('_erp')>0 || return(_erp) ?};

:: Określenie współpracownika
{? _akcja='nadgodziny' & _path*'|współpracownik|' & _nazwisko<>'' & _p_ref=''
|| _erp_prac:=exec('ask4Pracownik','genius_pkd',_nazwisko,_p_ref,_path,_formaWspolpracy);
   {? var_pres('_erp_prac')>0
   || return(_erp_prac)
   ?}
?};

:: Określenie podstawowej ścieżki (rodzaj umów, zakres)
{? _akcja='nadgodziny' & ~(_path*'|rozliczone|' | _path*'|nierozliczone|' | _path*'|wszystkie|')
|| _erpParams:=obj_new('path','formaWspolpracy','nazwisko','p_ref');
   _erpParams.formaWspolpracy:=_formaWspolpracy;
   _erpParams.nazwisko:=_nazwisko;
   _erpParams.p_ref:=_p_ref;
   _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path,,_erpParams);
   {? var_pres('_erp_path')>0
   || return(_erp_path)
   ?}
?};

{? _akcja='nadgodziny'
|| _erp:=exec('nadgodziny_praca_data','genius_pkd',_path,_formaWspolpracy)
|| {?  var_pres('_erp')>0 || obj_del('_erp') ?};
   _erp:=exec('confused','genius_pkd')
?};

_erp


\nadgodziny_praca_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Wyszukuje informacje o nadgodzinach w podanym okresie
::   WE: _a [STRING] - ścieżka dla wybranej akcji
::       _b [STRING] - forma współpracy [P/Z/W]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('config','genius_pkd');
_erp:=exec('erp_obj','genius_pkd',1,1);
_erp.display_message:='Nie znaleziono danych dotyczących nadgodzin.';

  _path:={? var_pres('_a')=type_of('')              || _a || return(_erp) ?};
_f_zatr:={? var_pres('_b')=type_of('') & 'P,Z,W'*_b || _b || return(_erp) ?};

:: Kontrola poprawności ścieżki
{? ~(_path*'|rozliczone|' | _path*'|nierozliczone|' | _path*'|wszystkie|') |
   ~(_path*'|współpracownik|' | _path*'|ogólnie|')
|| return(_erp)
?};

_startDate:=
   {? AI.getPar('startDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('startDate')).date
   || date()
   ?};
_endDate:=
   {? AI.getPar('endDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('endDate')).date
   || date()
   ?};
_message:=
   {? _endDate=date(0,0,0) || 'po %1 r.'@ [_startDate$6]
   |? _startDate=_endDate  || 'w dniu %1 r.'@ [_startDate$6]
   ||                         'w okresie od %1 r. do %2 r.'@ [_startDate$6,_endDate$6]
   ?};
_type:=
   {? _path*'|nierozliczone|' || 'nierozliczone nadgodziny'
   |? _path*'|rozliczone|'    || 'rozliczone nadgodziny'
   ||                            'nadgodziny'
   ?};
_cooperation:=
   {? _f_zatr='P' || {? _path*'|współpracownik|' || 'Pracownik'      || 'Pracownicy' ?}
   |? _f_zatr='Z' || {? _path*'|współpracownik|' || 'Zleceniobiorca' || 'Zleceniobiorcy' ?}
   ||                {? _path*'|współpracownik|' || 'Współpracownik' || 'Współpracownicy' ?}
   ?};
_counter:=_ind:=0;

P.cntx_psh();
P.use('pracowni');
P.prefix();
OSOBA.cntx_psh();
{? P.f_active() || P.f_clear() ?};

{? _path*'|współpracownik|'
|| _p_ref:=AI.getErpPar('p_ref');
   _p_ref:=exec('FindAndGet','#table',P,_p_ref,,,null());
   P.f_set(,,'P.REFERENCE=:_a',_p_ref)

|? _path*'|ogólnie|'
|| _P:=exec('dostepne_p','schemat','PKD',{? +_f_zatr || _f_zatr || '*' ?});
   P.f_set(
      'OSOBA(NAZWISKO),OSOBA(PIERWSZE),OSOBA(PESEL)',
      'join OSOBA using(P.OSOBA,OSOBA.REFERENCE)',
      'P.REFERENCE in (select :_a.REF from :_a)',_P
   )
?};

{? P.f_first()
|| _erp_NP:=exec('erp_obj','genius_pkd',P.f_size());

   _ind:=1;
   {!
   |? P.OSOBA();

::    Wyznaczenie odpowiedniej liczby nadgodzin
::    Wszystkie nadgodziny
      {? _path*'|wszystkie|' | _path*'|nierozliczone|'
      ||
:        _rub:=',55,56,63,';
         _rub:=',%1,-ODP,'[__RUB.sys_sql(812,_startDate)];
         _allOvertime:=exec('godzWOkresie','prc_plan',P.ref(),_startDate,_endDate,0,_rub)
      ?};
::    Rozliczone nadgodziny
      {? _path*'|rozliczone|' | _path*'|nierozliczone|'
      || _settledOvertime:=0;
         _startYear:=_startDate~1;
         _endYear:=_endDate~1;
         _startMonth:=_startDate~2;
         _endMonth:=_endDate~2;
         {! _year:= _startYear .. _endYear
         |! _monthS:={? _year=_startYear || _startMonth || 1 ?};
            _monthE:={? _year=_endYear || _endMonth || 12 ?};
            {! _month:= _monthS .. _monthE
            |! _tab:=exec('rozliczone_godziny','godziny',_year,_month,8121,,_startDate,_endDate);
               {? _tab.first()
               || {!
                  |? _settledOvertime+=_tab.G;
                     _tab.next()
                  !}
               ?};
               &_tab
            !}
         !}
      ?};
::    Nierozliczone nadgodziny
      {? _path*'|nierozliczone|'
      || _unsettledOvertime:=_allOvertime-_settledOvertime
      ?};

      _overtime:=
         {? _path*'|rozliczone|' || _settledOvertime
         |? _path*'|nierozliczone|' || _unsettledOvertime
         || _allOvertime
         ?};

      {? _overtime>0
      ||
:        Nadgodziny współpracownika
         {? _path*'|współpracownik|'
         || _erp_NP.display_message:='%1 %2 %3 ma %4:'[_cooperation,exec('pracDesc','genius_pkd'),_message,_type];
            _erp_NP.data[_ind].type:='link';
            _erp_NP.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
            _erp_NP.data[_ind].values[1].display_name:=
               'Liczba nadgodzin: %1'[$_overtime];
            _erp_NP.data[_ind].values[1].desc:='';
            _erp_NP.data[_ind].values[1].link:='#';
            _counter+=1

::       Nadgodziny współpracowników
         |? _path*'|ogólnie|'
         || {? ~_counter
            || _erp_NP.display_message:='%1, którzy %2 mają %3:'[_cooperation,_message,_type]
            ?};
            _erp_NP.data[_ind].type:='link';
            _erp_NP.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
            _erp_NP.data[_ind].values[1].display_name:=
               '%1<br>Liczba nadgodzin: %2'[exec('pracDesc','genius_pkd'),$_overtime];
            _erp_NP.data[_ind].values[1].desc:='';
            _erp_NP.data[_ind].values[1].link:='#';
            _counter+=1
         ?};
         _ind+=1
      ?};

      P.f_next()
   !}
?};

{? ~_counter
|| {? ~_ind || _erp_NP:=exec('erp_obj','genius_pkd',1,1) ?};
   _erp_NP.display_message:='Nie znaleziono danych dotyczących nadgodzin.'
?};

{? P.f_active() || P.f_clear() ?};
OSOBA.cntx_pop();
P.cntx_pop();

_erp_NP


\oddelegowania
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Obsługuje informacje zwrotne nt oddelegowań zagranicznych współpracowników.
::   WE:
::   WY: Obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
:: upewnienie się, że jesteśmy w dobrej intencji
{? AI.INTENT<>'oddelegowania.zagraniczne'
|| FUN.info('Błąd wywołania intencji');
   return(exec('erp_obj','genius'))
?};
exec('config','genius_pkd');

:: Kontrola uprawnień do przeglądania oddelegowań zagranicznych
_chk_role:="
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_OROD') |
   exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_OPOD')
";
{? ~_chk_role()
|| _erp:=exec('erp_obj','genius_pkd',1,1);
   _erp.display_message:='Niestety nie masz uprawnień do przeglądania oddelegowań za granicę.'@;
   return(_erp)
?};

:: parametry wymagane
      _startDate:=AI.getPar('startDate');
        _endDate:=AI.getPar('endDate');

:: parametry opcjonalne
          _akcja:=AI.getPar('akcja');
_formaWspolpracy:=AI.getPar('formaWspolpracy');
       _nazwisko:=AI.getPar('nazwisko');
           _imie:=AI.getPar('imie');
        _panstwo:=AI.getPar('panstwo');
  _pracownikLicz:={? _formaWspolpracy<>''
                  || {? _formaWspolpracy*'Wiele' || 'wiele' || 'jeden' ?}
                  || ''
                  ?};

:: parametry ustawione w sesji
           _path:={? AI.getErpPar('path')<>~~ || AI.getErpPar('path') || '' ?};
       _co_dalej:={? AI.getErpPar('co_dalej')<>~~ || AI.getErpPar('co_dalej') || '' ?};
          _p_ref:={? AI.getErpPar('p_ref')<>~~ || AI.getErpPar('p_ref') || '' ?};
        _panstwo:={? AI.getErpPar('panstwo')<>~~ || AI.getErpPar('panstwo') || _panstwo ?};
       _kraj_ref:={? AI.getErpPar('kraj_ref')<>~~ || AI.getErpPar('kraj_ref') || '' ?};
       _nazwisko:={? _nazwisko='' & AI.getErpPar('nazwisko')<>~~ || AI.getErpPar('nazwisko') || _nazwisko ?};
_formaWspolpracy:={? _formaWspolpracy='' & AI.getErpPar('formaWspolpracy')<>~~
                  || ~-(1+AI.getErpPar('formaWspolpracy'))
                  || ~-(1+_formaWspolpracy)
                  ?};

{? +_co_dalej
|| {? ~+_path || _path:=exec('getPathFromAction','genius_pkd',_co_dalej) ?};
   _akcja:=exec('co_dalej_akcja','genius_pkd',_co_dalej)
|? +_akcja
|| {? ~+_path || _path:=exec('getPathFromAction','genius_pkd',_akcja) ?};
   _akcja:=exec('co_dalej_akcja','genius_pkd',_akcja)
?};

{? _akcja='capabilities'
|| return(exec('capabilities','genius_pkd'))
|? _akcja='koniec'
|| return(exec('sayonara','genius_pkd'))
|? _akcja<>'oddelegowania'
|| return(exec('confused','genius_pkd'))
?};
{? var_pres('_erp')>0 || return(_erp) ?};

:: sprawdzenie czy w intencji określono już ścieżkę
{? _akcja='oddelegowania' & (_pracownikLicz<>'' | +_nazwisko) &
   ~(_path*'|współpracownik|' | _path*'|ogólnie|')
|| {? _pracownikLicz='jeden' | +_nazwisko
   || _path:='%1|%2|'[_path,'współpracownik']
   |? _pracownikLicz='wiele'
   || _path:='%1|%2|'[_path,'ogólnie']
   ?}
?};
{? _akcja='oddelegowania' & (_panstwo<>'' | _kraj_ref<>'') & ~(_path*'|wybrane|' | _path*'|wszystkie|')
|| _path:='%1|%2|'[_path,'wybrane']
?};

:: Określenie formy współpracy
{? _akcja='oddelegowania' & _formaWspolpracy=''
|| _erp_param:=exec('ask4Param','genius_pkd',_akcja,'formaWspolpracy',_path);
   {? var_pres('_erp_param')>0
   || return(_erp_param)
   ?}
?};

:: Określenie liczby współpracowników
{? _akcja='oddelegowania' & ~(_path*'|współpracownik|' | _path*'|ogólnie|') & _nazwisko=''
|| _erpParams:=obj_new('path','formaWspolpracy');
   _erpParams.formaWspolpracy:=_formaWspolpracy;
   _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path,,_erpParams);
   {? var_pres('_erp_path')>0
   || return(_erp_path)
   ?}
?};

:: Określenie nazwiska współpracownika
{? _akcja='oddelegowania' & _path*'|współpracownik|' & _nazwisko='' & _p_ref=''
|| _erp:=exec('ask4nazwisko','genius_pkd',_formaWspolpracy)
?};
{? var_pres('_erp')>0 || return(_erp) ?};

:: Określenie współpracownika
{? _akcja='oddelegowania' & _path*'|współpracownik|' & _nazwisko<>'' & _p_ref=''
|| _erp_prac:=exec('ask4Pracownik','genius_pkd',_nazwisko,_p_ref,_path,_formaWspolpracy);
   {? var_pres('_erp_prac')>0
   || return(_erp_prac)
   ?}
?};

:: Określenie ścieżki (jedno lub wiele państw)
{? _akcja='oddelegowania' & ~(_path*'|wybrane|' | _path*'|wszystkie|')
|| _erpParams:=obj_new('formaWspolpracy','nazwisko','p_ref','path');
   _erpParams.formaWspolpracy:=_formaWspolpracy;
   _erpParams.nazwisko:=_nazwisko;
   _erpParams.p_ref:=_p_ref;
   _erpParams.path:=_path;
   _erp_path:=exec('ask4Path','genius_pkd',_akcja,_path,,_erpParams);
   {? var_pres('_erp_path')>0
   || return(_erp_path)
   ?}
?};

:: Określenie państwa
{? _akcja='oddelegowania' & _path*'|wybrane|' & _kraj_ref=''
|| _erpParams:=obj_new('kraj_ref','formaWspolpracy','nazwisko','p_ref','path');
   _erpParams.formaWspolpracy:=_formaWspolpracy;
   _erpParams.nazwisko:=_nazwisko;
   _erpParams.p_ref:=_p_ref;
   _erpParams.path:=_path;
   _erp_kraj:=exec('ask4Panstwo','genius_pkd',_panstwo,_kraj_ref,_erpParams);
   {? var_pres('_erp_kraj')>0
   || return(_erp_kraj)
   || _kraj_ref:=AI.getErpPar('kraj_ref')
   ?}
?};

{? _akcja='oddelegowania'
|| _erp:=exec('oddelegowania_data','genius_pkd',_path,_formaWspolpracy,_kraj_ref,_panstwo)
|| {?  var_pres('_erp')>0 || obj_del('_erp') ?};
   _erp:=exec('confused','genius_pkd')
?};

_erp


\oddelegowania_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Wyszukuje informacje o oddelegowaniach w podanym okresie
::   WE: _a [STRING] - ścieżka dla wybranej akcji
::       _b [STRING] - forma współpracy [P/Z/W]
::       [_c] [STRING] - wskazania na państwo (jeśli brak to wszystkie państwa)
::       [_d] [STRING] - nazwa państwa (jeśli brak to wszystkie państwa)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('config','genius_pkd');
_erp:=exec('erp_obj','genius_pkd',1,1);

_erp.display_message:='Nie znaleziono danych dotyczących oddelegowań zagranicznych.';

       _path:={? var_pres('_a')=type_of('')              || _a || return(_erp) ?};
     _f_zatr:={? var_pres('_b')=type_of('') & 'P,Z,W'*_b || _b || return(_erp) ?};
    _country:={? var_pres('_c')=type_of('')              || _c || ''           ?};
_countryName:={? var_pres('_d')=type_of('')              || _d || ''           ?};

{? ~(_path*'|współpracownik|' | _path*'|ogólnie|') & ~(_path*'|wybrane|' | _path*'|wszystkie|')
|| return(_erp)
?};

_startDate:=
   {? AI.getPar('startDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('startDate')).date
   || date()
   ?};
_endDate:=
   {? AI.getPar('endDate')<>''
   || exec('iso_datetime_parse','#convert',AI.getPar('endDate')).date
   || date()
   ?};
_message:=
   {? _endDate=date(0,0,0)
   || 'po %1 r.'@ [_startDate$6]
   |? _startDate=_endDate
   || 'w dniu %1 r.'@ [_startDate$6]
   || 'w okresie od %1 r. do %2 r.'@ [_startDate$6,_endDate$6]
   ?};
_destination:=
   {? _countryName<>''
   || ' (%1)'[_countryName]
   || ''
   ?};
_cooperation:=
   {? _f_zatr='P' || {? _path*'|współpracownik|' || 'Pracownik'      || 'Pracownicy' ?}
   |? _f_zatr='Z' || {? _path*'|współpracownik|' || 'Zleceniobiorca' || 'Zleceniobiorcy' ?}
   ||                {? _path*'|współpracownik|' || 'Współpracownik' || 'Współpracownicy' ?}
   ?};
_counter:=_ind:=0;

P.cntx_psh();
P.use('pracowni');
P.prefix();
{? P.f_active() || P.f_clear() ?};
H_ODDE.cntx_psh();
H_ODDE.use('h_oddet');
H.cntx_psh();
H.use('_hist');

{? _path*'|współpracownik|'
|| _p_ref:=AI.getErpPar('p_ref');
   _p_ref:=exec('FindAndGet','#table',P,_p_ref,,,null());
   P.f_set(,,'P.REFERENCE=:_a',_p_ref)

|? _path*'|ogólnie|'
|| _P:=exec('dostepne_p','schemat','PKD',{? +_f_zatr || _f_zatr || '*' ?});
   P.f_set(,,'P.REFERENCE in (select :_a.REF from :_a)',_P)
?};

_query:=
   'select '
      'H_ODDE.REFERENCE as REF, '
      'H.P as P, '
      'H_ODDE.O_OD as OD, '
      'OSOBA.NAZWISKO as NAZWISKO, '
      'OSOBA.PIERWSZE as PIERWSZE, '
      'OSOBA.PESEL as PESEL '
:      'P.T as T '
   'from H_ODDE '
      'join H using (H_ODDE.H, H.REFERENCE) '
      'join P using (H.P, P.REFERENCE) '
      'join OSOBA using (P.OSOBA, OSOBA.REFERENCE) '
   'where H_ODDE.O_OD<=to_date(:_c) and H_ODDE.O_DO>=to_date(:_b) '+
      {? _path*'|współpracownik|' || 'and H.P=:_a '
      |? _path*'|ogólnie|' || 'and H.P in (select :_a.REF from :_a) '
      ?}+
      {? _country<>'' || 'and H_ODDE.KRAJ=\':_d\' ' || '' ?}+
   'order by NAZWISKO, PIERWSZE, PESEL, OD';
_H_ODDE:=sql(_query,
   {? _path*'|współpracownik|' || _p_ref || _P ?},_startDate,_endDate,_country
);

{? _H_ODDE.first()
|| _erp_OZ:=exec('erp_obj','genius_pkd',_H_ODDE.size());
   _ind:=1;

   OSOBA.cntx_psh();
   H_ODDE.cntx_psh();
   H_ODDA.cntx_psh();
   KRAJE.cntx_psh();

   {!
   |? {? P.f_seek(_H_ODDE.P) & H_ODDE.seek(_H_ODDE.REF)
      || P.OSOBA();

:        Oddelegowania współpracownika
         {? _path*'|współpracownik|'
         || _erp_OZ.display_message:=
               '%1 %2 %3 ma oddelegowania zagraniczne%4:'
               [_cooperation,exec('pracDesc','genius_pkd'),_message,_destination];
            _erp_OZ.data[_ind].type:='link';
            _erp_OZ.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
            _erp_OZ.data[_ind].values[1].display_name:=
               'Firma: %1<br>Miejsce: %2 %3<br>Data od: %4<br>Data do: %5'[
               {? H_ODDE.M_PRAC().NAZWA<>'' || H_ODDE.M_PRAC().NAZWA || '---' ?}, H_ODDE.KRAJ().NAZ,
               {? H_ODDA.MIASTO<>'' || '(%1)'[H_ODDA.MIASTO] || '' ?}, $H_ODDE.O_OD, $H_ODDE.O_DO];
            _erp_OZ.data[_ind].values[1].desc:='';
            _erp_OZ.data[_ind].values[1].link:=
               exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',H_ODDE.uidref()));
            _counter+=1

::       Oddelegowania współpracowników
         |? _path*'|ogólnie|'
         || {? ~_counter
            || _erp_OZ.display_message:=
                  '%1, którzy %2 mają oddelegowania zagraniczne%3:'[_cooperation,_message,_destination]
            ?};
            _erp_OZ.data[_ind].type:='link';
            _erp_OZ.data[_ind].values[1].icon:='bi bi-dot icon-size-lg';
            _erp_OZ.data[_ind].values[1].display_name:=
               '%1<br>Firma: %2<br>Miejsce: %3 %4<br>Data od: %5<br>Data do: %6'[
               exec('pracDesc','genius_pkd'), {? H_ODDE.M_PRAC().NAZWA<>'' || H_ODDE.M_PRAC().NAZWA || '---' ?},
               H_ODDE.KRAJ().NAZ, {? H_ODDA.MIASTO<>'' || '(%1)'[H_ODDA.MIASTO] || '' ?}, $H_ODDE.O_OD, $H_ODDE.O_DO];
            _erp_OZ.data[_ind].values[1].desc:='';
            _erp_OZ.data[_ind].values[1].link:=
               exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',H_ODDE.uidref()));
            _counter+=1
         ?};
         _ind+=1
      ?};

      _H_ODDE.next()
   !};

   KRAJE.cntx_pop();
   H_ODDA.cntx_pop();
   H_ODDE.cntx_pop();
   OSOBA.cntx_pop()
?};

{? ~_counter
|| {? ~_ind || _erp_OZ:=exec('erp_obj','genius_pkd',1,1) ?};
   _erp_OZ.display_message:='Nie znaleziono danych dotyczących oddelegowań zagranicznych.'
?};

H.cntx_pop();
H_ODDE.cntx_pop();
{? P.f_active() || P.f_clear() ?};
P.cntx_pop();

_erp_OZ


\ask4Panstwo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [23.25]
:: OPIS: Określenie państwa na podstawie przekazanych parametrów
::   WE: _a [STRING] - nazwa państwa
::       _b [STRING] - wskazanie na państwo
::       _c [STRING] - parametry
::   WY: obiekt _erp lub ~~
::----------------------------------------------------------------------------------------------------------------------
    _kraj:={? var_pres('_a')=type_of('')   || _a || '' ?};
_kraj_ref:={? var_pres('_b')=type_of('')   || _b || '' ?};
     _par:={? var_pres('_c')=117           || _c || obj_new('kraj_ref') ?};

:: Pierwsze określenie nazwy państwa
{? _kraj='' & _kraj_ref=''
|| _erp:=exec('erp_obj','genius');
   _erp.display_message:='Podaj nazwę państwa:';
   _erp.interact.status:=1;
   _erp.interact.par[1].id:='panstwo';
   _erp.interact.par[1].for:=_erp.display_message;
   return(_erp)
?};

:: określenie wszystkich państw pasujących do przekazanego parametru
_sql:=''+"select KRAJE.REFERENCE as REF, NAZ, SYM
          from KRAJE
          where "+
          {? +_kraj_ref
          || "KRAJE.REFERENCE='"+_kraj_ref+"'"
          || "UPPER(KRAJE.NAZ) LIKE UPPER('"+_kraj+"')"
          ?};

KRAJE.cntx_psh();
KRAJE.index('NAZ');
KRAJE.prefix();
_KRAJE:=sql(_sql);
KRAJE.cntx_pop();
{? ~_KRAJE.first()
|| {? var_pres('_erp')>0 || obj_del('_erp') ?};
   _erp:=exec('erp_obj','genius_pkd',1,1,0);
   _erp.display_message:='Brak państwa o podanej nazwie.';
   _erp.data[1].type:='link';
   _erp.data[1].values[1].icon:='bi info-circle-fill icon-size-lg';
   _erp.data[1].values[1].display_name:='';
   _erp.data[1].values[1].desc:='';
   _erp.data[1].values[1].link:='';
   return(_erp)

|? _KRAJE.size()>1
|| {? var_pres('_erp')>0 || obj_del('_erp') ?};
   _erp:=exec('erp_obj','genius_pkd',_KRAJE.size(),1);
   _erp.display_message:='Wybierz państwo:';
   _ind:=1;
   KRAJE.cntx_psh();
   KRAJE.index('NAZ');
   KRAJE.prefix();
   {!
   |? {? KRAJE.seek(_KRAJE.REF)
      || _erp.data[_ind].type:='choice';
         _erp.data[_ind].values[1].icon:='bi bi-geo-alt-fill icon-size-lg';
         _erp.data[_ind].values[1].display_name:='%1'[KRAJE.NAZ];
         _erp.data[_ind].values[1].desc:='';
         _par.kraj_ref:=_KRAJE.REF;
         _erp.data[_ind].values[1].link:=exec('makeLink4Par','genius_pkd',_par);
         _ind+=1
      ?};
      _KRAJE.next()
   !};
   KRAJE.cntx_pop();
   return(_erp)

|| AI.setErpPar('kraj_ref',_KRAJE.REF)
?};
~~

:Sign Version 2.0 jowisz:1045 2023/11/16 13:09:20 6d75ee65327dd9a64a77018c8836900e5ce74d87cca3d9d11af671709fb1582c16f2ec0fc45c41e8e4521a4607305df967b26da5944bcd35bc98f56ce67ae24e84c4d76ace001faab750d172e0fb8fb18a5b97b4ce86232e6f0f6e028207135b19922295c3d2ac489d21162c3744277eb8cbaf7371dd3d6144dace012446cf6e
