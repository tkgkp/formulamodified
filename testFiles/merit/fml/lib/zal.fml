:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: zal.fml [2008]
:: Utworzony: 2007/03/02
:: Autor: KFI
::======================================================================================================================
:: Zawartosc: Formuly do obslugi zalacznikow
::======================================================================================================================


\add_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KF [2008]
:: OPIS: Formuła zapisująca do bazy dokument wydrukowany do Worda lub do PDF-a.
::   WE:  _a [STRING]  - Parametr określa "typ" dokumentu:
::          an  - aneks,
::          de  - deklaracja podatkowa,
::          ecp - ewidencja czasu pracy,
::          gi  - zakres przetwarzanych danych (GIODO),
::          im  - dokument IMiR (miesięczny)
::          ir  - dokument IMiR (roczny)
::          li  - lista plac,
::          nwu - wnioski urlopowe (urlop wypoczynkowy / urlop "na żądanie"),
::          rm  - dokument RMUA,
::          sb  - skierowanie na badania (jeszcze nie przeniesione),
::          sw  - swiadectwo pracy,
::          um  - umowa o prace,
::          uz  - umowa-zlecenie,
::       [_b] [NUMBER] - Blokowanie wyświetlenia komunikatów [0*/1].
::       [_c] [STRING] - Nazwa pliku.
::       [_d] [DATE]   - Data IMIR (domyślnie: date()].
::       [_e] [ARRAY]  - Parametr określajacy sposób zachowania w przypadku istnienia poprzedniego załącznika tego
::                       samego rodzaju. Parametr jest tablicą o następujacych elementach:
::                         warunek  - formuła, wywoływana z poziomu znalezionego, "poprzedniego" załącznika,
::                                    która odpowiada na pytanie "czy nadpisać bieżący załącznik"?
::                                     0 - Nie nadpisywać - załącznik NIE zostanie utworzony.
::                                     1 - Nadpisywać - poprzedni załącznik zostanie zamieniony bieżącym [domyślnie].
::                                     2 - Wersjonować - załącznik zostanie utworzony z kolejnym numerem wersji w
::                                         nazwie.
::                         war      - informacja zwrotna - wynik formuły "warunek";
::                         byl      - informacja zwrotna - czy był "poprzedni" załącznik;
::                         ok       - informacja zwrotna - czy udało się utworzyć/zaktualizować załącznik.
::       [_f] [STRING] - Parametr określający rodzaj deklaracji podatkowej (dla _a='de').
::       [_g] [STRING] - Parametr określający okres dla deklaracji podatkowej IFT.
::  WY: tablica obj_new('UIDREF','NAZWA')
:: ~OST: INFERASE
::----------------------------------------------------------------------------------------------------------------------
_ret:=obj_new('UIDREF','NAZWA');
_ret.UIDREF:=_ret.NAZWA:='';
_f_ret:="
   {? _a
   || _b.UIDREF:=ZALACZ.uidref();
      _b.NAZWA:={? ZALACZ.ZAL || ZALACZ.bl_info('ZAL','NAME') || '' ?}
   ?};
   _a";
{? var_pres('_a')<>type_of('') || return(_ret) ?};
_b:=var_pres('_b')=type_of(1) & _b;
{? var_pres('_c')<>type_of('') || _c:='macrotmp.pdf' ?};
{? var_pres('_d')<>type_of(date) || _d:=date ?};
{? var_pres('_e')>100 & var_pres('warunek',_e)=type_of("") &
   var_pres('war',_e)>=0 & var_pres('byl',_e)>=0 & var_pres('ok',_e)>=0
|| _ovr:=_e
|| _ovr:=obj_new('warunek','war','byl','ok');
   _ovr.warunek:="1"
?};
{? var_pres('_f')<>type_of('') || _f:='' ?};
{? var_pres('_g')<>type_of('') || _g:='' ?};
_ovr.war:=_ovr.byl:=_ovr.ok:=0;
{? ',de,rm,li,gi,ecp,nwu,'*(','+_a+',')
:: Załączniki typu PDF.
|| _patname:=pth_dir('.pdf');
   _patname:=_patname+{? sys_name(1)='U_LINUX' || '/' || '\\' ?}+_c
|? _a='im' | _a='ir' | ((_a='um' | _a='an' | _a='uz' | _a='dz' | _a='sw') & _c<>'macrotmp.pdf')
|| _patname:=_c
|| _patname:='@!Tmp\\macrotmp.doc'
:  Zgodnie z dokumentacja backslash po @!Tmp w wersji linuxowej jest automatycznie zamieniany na slash.
:  Powyzszy zapis jest zatem prawidlowy zarowno dla wersji windowsowej jak i linuxowej.
?};
{? _plik:=fopen(_patname,'r')
|| fclose(_plik);
   _opis:='';
   _name_doc:='';

   _firma:=exec('ref_firma','ustawienia');

   {? _a='an'
   || _name:='Aneks od dnia - '+STR.maz2nop(H.OD$6)+'.doc'; _name_doc:='zaswuman.doc'
   |? _a='de'
   || _name:=_f+' - Informacja podatkowa za '+_g+($__Rok)+'.pdf'; _name_doc:='infopod.pdf'
   |? _a='rm'
   || _name:='RMUA - '+STR.maz2nop(date(O.RU,O.MU,1)$8)+'.pdf'; _name_doc:='rmua'
   |? _a='li'
   || _name:=-VAR.NAZWALIS+'.pdf';
      _opis:='Lista płac numer '+$O.N+' typu '+O.T().T+': '+date(O.R,O.M,1)$8+' r.';
      _name_doc:='lista.pdf'
   |? _a='gi'
   || _name:='Zakres przetwarzanych danych (GIODO).pdf'; _name_doc:='giodo.pdf'
   |? _a='im' | _a='ir'
   || _name:=
         'IMIR - '+
         {? _a='im' || STR.maz2nop(date(_d~1,_d~2,1)$8)+'.pdf'
         |? _a='ir' || STR.maz2nop($(_d~1))+'.pdf'
         ?};
      _name_doc:='imir.pdf'
   |? _a='ecp'
   || _okres:=(_patname+10)-4;
      _rok:=4+_okres;
      _mc:=_okres+2;
      _name:='emcp_'+_rok+'_'+_mc+'.pdf';
      _opis:='Ewidencja miesięczna czasu pracy: '+date(#_rok,#_mc,1)$8+' r.'
   |? _a='nwu'
   || _name:='wu_'+gsub($NWU.OD,'/','_')+'.pdf';
      _opis:='Wniosek urlopowy: '+$NWU.OD+' - '+$NWU.DO

   || _name_doc:='';
      {? _a='um'
      || _tmp:=' - '+STR.maz2nop(|H_UM.NUMER); _name_doc:='zaswumpr.doc'
      |? _a='sw'
      || _tmp:=' - '+STR.maz2nop(|P.T); _name_doc:='zaswsw.doc'
      || _tmp:=' - '+STR.maz2nop(|ZC.NU)
      ?};
      {? _tmp*'>' | _tmp*'<' | _tmp*'%' | _tmp*'$' | _tmp*'\\' | _tmp*'/' | _tmp*'*' | _tmp*'?' |
         _tmp*':' | _tmp*'|' | _tmp*'(' | _tmp*')' | _tmp*'['  | _tmp*']' | _tmp*'{' | _tmp*'}'
      || _tmp:=''
      ?};
      {? _a='um' || _name:='Umowa o prace'
      |? _a='sw' || _name:='Świadectwo pracy'
      |? _a='uz' || _name:='Umowa - zlecenie'
      || _name:='Umowa o dzielo'
      ?};
      _name+=_tmp+'.doc'
   ?};
   Cntx.psh(OSOBA,SLO_TYP,SLO_NAZ);
   P.OSOBA();
   ZALACZ.clear;
   ZALACZ.blank;
:: Dokumenty nie powinny być widoczne, ponieważ nie są podpisane
   {? ',um,an,dz,uz,'*(','+_a+',') & exec('lic','#b_domain','PEP')
   || ZALACZ.WWW:='N';
      ZALACZ.WWWE:='N';
      ZALACZ.WWWS:='N'
   ?};

   _exe:=obj_new('RODZAJ','TYP_ZAL','REFS','NAZWA','addSLO','dokument','set');
   _exe.addSLO:="
      SLO_TYP.index('SYMBOL');
      SLO_TYP.prefix('ZAL',);
      .TYP_ZAL:=null();
      {? SLO_TYP.first()
      || SLO_NAZ.index('NAZWA');
         SLO_NAZ.prefix(SLO_TYP.ref(),.NAZWA,);
         {? ~SLO_NAZ.first()
         || SLO_NAZ.blank(1);
            SLO_NAZ.SLO_TYP:=SLO_TYP.ref();
            SLO_NAZ.NAZWA:=.NAZWA;
            SLO_NAZ.SYSTEM:='T';
            {? SLO_NAZ.add()
            || .TYP_ZAL:=SLO_NAZ.ref()
            ?}
         || .TYP_ZAL:=SLO_NAZ.ref()
         ?}
      ?};
      (.)
   ";
   _exe.dokument:="
      {? _a='um' || .set('H_UM','H_UM','Umowa o pracę')
      |? _a='sw' || .set('P','P','Świadectwo pracy')
      |? _a='an' || .set('H','H','Aneks do umowy')
      |? _a='de' || .set('VAT_DEK','VAT_DEK','Informacje podatkowe')
      |? _a='rm' || .set('P','P','Dokument RMUA')
      |? _a='li' || .set('P','P','Lista płac')
      |? _a='gi' || .set('P','P','Dokument dla potrzeb GIODO')
      |? _a='im' | _a='ir' || .set('P','P','Dokument IMiR')
      |? _a='ecp'|| .set('P','P','Karta ewidencji czasu pracy')
      |? _a='nwu'|| .set('NWU','NWU','Wniosek urlopowy')
      || .set('ZC','ZC','Umowa cywilnoprawna')
      ?}
   ";
   _exe.set:="
      .RODZAJ:=_a;
      .REFS:=_b;
      .NAZWA:=_c
   ";
   _exe.dokument(_a);
   ZALACZ.TYP_ZAL:=_exe.addSLO().TYP_ZAL;
   ZALACZ.RODZAJ:=_exe.RODZAJ;
   exec('add_refs','zal',_exe.REFS);

   Cntx.pop(OSOBA,SLO_TYP,SLO_NAZ);

   _result:=0;
   ZALACZ.index('ZAL_NAME');
   ZALACZ.prefix(_firma,ZALACZ.OSOBA,ZALACZ.P,ZALACZ.RODZAJ,ZALACZ.TYP_ZAL,ZALACZ.NAG,);
   _ovr.byl:=ZALACZ.find_key(_name,);
   {? _ovr.byl
::    Załącznik już istnieje - być może nawet w kilku wersjach.
::    Niezależnie od parametryzacji (nadpisanie / utworzenie nowej wersji) należy ustalić:
::       - aktualną (ostatnią) nazwę pliku (wersji) [zmienna _last];
::       - (ewentualnie) nową nazwę pliku (wersji) [zmienna _name].
::    Zakładamy, że długość nazwy pliku jest znacznie mniejsza niż graniczne 64 znaki i "wklejenie" w nią informacji
::    o wersji będzie możliwe.
::    Ze sposobu tworzenia nazwy pliku (analiza kodu powyżej) wynika, że obcinanie nazwy (na końcu - no bo gdzie?)
::    mogłoby doprowadzić do usunięcia istotnych informacji.
   || _last:=_name;
      _aname:=exec('split_file_name','#file',_name);
      _vern:=1;
      {!
      |? _vers:={? _vern=1 || '' || ' wer.%1' [$_vern] ?};
         _name:='%1%2.%3' [_aname.fn,_vers,_aname.ext];
         {? ZALACZ.find_key(_name,)
         || _last:=_name;
            _vern+=1
         ?}
      !};
      exec('add_refs','zal',_exe.REFS);
::    Po wyjściu z pętli bieżącą pozycją tabeli ZALACZ jest ta, która zawiera rekord z plikiem o nazwie _last.
      _ovr.war:=_ovr.warunek();
      {? _ovr.war=1
::       Rekord istniał i jest zgoda na nadpisywanie, to:
::          - przywracamy ostatnią nazwę;
::          - uaktualniamy datę.
      || _name:=_last;
         ZALACZ.DTSIGN:=#0;
         ZALACZ.POB_D:=#0;
         ZALACZ.POB_G:=*0;
         ZALACZ.DATA:=date();
         _result:=1
      |? _ovr.war=2
::       Rekord istniał i jest zgoda na dodanie nowej wersji - dodajemy nowy załącznik.
      || ZALACZ.DTSIGN:=#0;
         ZALACZ.POB_D:=#0;
         ZALACZ.POB_G:=*0;
         _result:=_f_ret(ZALACZ.add(),_ret)
      ?}

   || _result:=_f_ret(ZALACZ.add(),_ret)
   ?};

   ZALACZ.prefix();
   {? _result
   || ZALACZ.LOK:=_opis;
      ZALACZ.bl_file('ZAL',1);
      ZALACZ.bl_put('ZAL',_patname,0,,_name,1);
      ZALACZ.ZAL_NAME:=ZALACZ.bl_info('ZAL', 'NAME');
      _ovr.ok:=_f_ret(ZALACZ.put(),_ret);
      ZALACZ.bl_file('ZAL',1);

      {? (ZALACZ.RODZAJ='H_UM' | ZALACZ.RODZAJ='H') & +ZALACZ.NAG=48 & PAR_SKID.get(180)='T'
::       ^ Praca z "brudnopisem", zapis umowy lub przebiegu.
      || _TAB:=ref_tab(ZALACZ.NAG);
         _maska:=ref_name(ZALACZ.NAG);
         {? _maska='h_um' | _maska='_hist'
::          ^ Załącznik w "czystopisie" - kopiujemy do brudnopisu.
         || ZALACZ.cntx_psh();
            ZALACZ.NAG:=_TAB.IDLNK;
            _f_ret(ZALACZ.add(),_ret);
            ZALACZ.cntx_pop()
         || _TAB.put()
::          ^ Załącznik w "brudnopisie" - aktualizacja (poprzez wyzwalacze) statusu rekordu właściciela.
         ?};
         obj_del(_TAB);
         &_TAB
      ?}

   ?};
   ferase(_patname);
   {? exec('interm','#system')
   || 1
   |? _name_doc<>'' & _a<>'im' & _a<>'ir'
   || ferase('@!Tmp\\'+_name_doc)
   || 1
   ?}
|| {? _b
   || FUN.emsg('Nie znaleziono pliku z wydrukiem.\nWydruk nie zostanie zapisany w systemie.'@)
   ?}
?};
_ret


\add_refs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KF [2008]
:: OPIS: Uzupelnia odpowiednimi ref'ami odpowiednie pola tabeli zalacznikow
::   WE: _a [STRING] - nazwa tabeli dla ktorej dodaje zalacznik(OSOBA,P,H_UM,H,ZC,RH)
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_acr:={? var_pres('_a')=type_of('') || _a || return(~~) ?};

_add_ref:="_form:=$('ZALACZ.'+_a+':='+_a+'.ref');_form()";
_add_uidref:="_form:=$('ZALACZ.NAG:='+_a+'.uidref');_form()";

:: uzupełnienie wskazania na osobę i pracownika (kontekst tabel musi być ustawiony)
_add_ref('OSOBA');
_add_ref('P');

:: uzupełnienie uidrefa tabeli, dla której dodajemy załącznik (pole ZALACZ.NAG)
{? _acr<>'P'
|| _add_uidref(_acr)
?};
~~


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41 - DPA]
:: OPIS: Czysci powiazania do rekordu tabeli ZALACZ
::   WE: _a - ZALACZ.ref()
::   WY: >0 - wyczyszczone,
::      <=0 - niewyczyszczone
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
{? do_state()=2 || return(-100) ?};

_result:=0;
_ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};

_can_continue:=1;

_mydo:=do_state()=0;
{? _mydo || do() ?};
:: --- powiązania do ---
{? exec('delete_all','zal_pobh',_ref)<=0
|| _can_continue:=0
?};
:: --- wszystkie powiazania usuniete? ---
{? _can_continue>0
|| _result:=1
|| undo()
?};

{? _mydo || end() ?};

_result


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.37]
:: OPIS: Formuła dołącza lub aktualizuje zapis tabeli ZALACZ wraz z załącznikiem. Formuła zakłada poprawne wypełnienie
::       buforów tabeli P oraz tabeli "właściciela".
::   WE: _a [ARRAY]- Tablica elementów nazwanych parametryzująca sposób dołączenia (aktualizacji) załącznika.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=obj_new(
:: Wynik działania formuły [0/1] (czy operacja zapisania/nadpisania załącznika zakończona powodzeniem).
   'ok',
:: Informacja czy był poprzedni załącznik [0/1].
   'existed',
:: Wynik sprawdzenia warunku dostarczonego poprzez _args.OVR [0/1/2].
   'ovr',
:: Nazwa, pod jaką został zapamiętany załącznik.
   'name',
:: Wskazanie rekordu, którego dotyczy(ło) przetwarzanie. Jeżeli ok=1, to jest to rekord zapisany / nadpisany.
:: Dla ok=0 będzie
   'uidref'
);

_result.ok:=_result.ovr:=_result.existed:=0;
_result.name:=_result.uidref:='';

_in:={? var_pres('_a')=type_of(obj_new(1)) || _a || return(_result) ?};

_args:=exec('add_args','zal');

{? (_check_in:=exec('add_check_in','zal',_in,_args))<>''
|| {? ~_args.HIDE_MSG
   || FUN.emsg(_check_in)
   ?};
   return(_result)
?};

{? _file:=fopen(_args.FILE_PATH,'r',_args.FILE_PTH)
|| fclose(_file);
   _aname:=exec('split_file_name','#file',_args.ZAL_NAME);
   _result.name:='%1.%2' [_aname.fn,_aname.ext];

   _firma:=exec('ref_firma','ustawienia');

   ZALACZ.prefix();
   ZALACZ.blank();

   ZALACZ.TYP_ZAL:=_args.SLO_NAZ;
   ZALACZ.RODZAJ:=_args.OWNER;

   OSOBA.cntx_psh();
   OSOBA.prefix();
   P.OSOBA();
   exec('add_refs','zal',_args.OWNER);
   OSOBA.cntx_pop();

   _action:='';
   ZALACZ.index('ZAL_NAME');
   ZALACZ.prefix(_firma,ZALACZ.OSOBA,ZALACZ.P,ZALACZ.RODZAJ,ZALACZ.TYP_ZAL,ZALACZ.NAG,);
   _result.existed:=ZALACZ.find_key(_result.name,);
   {? _result.existed
   || _last:=_result.name;
      _version:=obj_new('number','string');
      _version.number:=1;
      {!
      |? _version.string:={? _version.number=1 || '' || ' wer.%1' [$_version.number] ?};
         _result.name:='%1%2.%3' [_aname.fn,_version.string,_aname.ext];
         {? ZALACZ.find_key(_result.name,)
         || _last:=_result.name;
            _version.number+=1
         ?}
      !};
      _fileWritingOptions:=exec('file_ovr_options','zal');
      _result.ovr:=_args.OVR();
      {? _result.ovr=_fileWritingOptions.leave
      || _result.name:=_last
      |? _result.ovr=_fileWritingOptions.replace
      || _result.name:=_last;
         ZALACZ.DATA:=date();
         _action:='put'
      |? _result.ovr=_fileWritingOptions.add
      || _action:='add'
      ?};
      {? _action<>'add'
      || _result.uidref:=ZALACZ.uidref()
      ?}
   || _action:='add'
   ?};
   ZALACZ.prefix();
   {? _action<>''
   || do();
      ZALACZ.LOK:=_args.ZAL_DESC;
      {? _result.existed & _result.ovr<>_fileWritingOptions.leave
      || ZALACZ.DTSIGN:=ZALACZ.POB_D:=#0;
         ZALACZ.POB_G:=*0
      ?};
      {? _args.ADD_FORM(_action) & {? _action='put' || ZALACZ.put() || ZALACZ.add() ?} &
         ZALACZ.bl_put('ZAL',_args.FILE_PATH,_args.FILE_PTH,,_result.name,1)
      || _result.uidref:=ZALACZ.uidref()
      ?};
      _result.ok:=end()
   ?};

   {? _args.CLEAN_UP
   || ferase(_args.FILE_PATH)
   ?}

|| {? ~_args.HIDE_MSG
   || FUN.emsg('Nie znaleziono pliku z wydrukiem.\nWydruk nie zostanie zapisany w systemie.'@)
   ?}
?};

_result


\add_args
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.37]
:: OPIS: Formuła tworzy tablicę nazwaną z elementami parametryzującymi sposób dołączenia załącznika.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_args:=obj_new(
:: Wskazanie (SLO_NAZ.ref()) lub nazwa (SLO_NAZ.NAZWA) typu załącznika.
   'SLO_NAZ',
:: Czy załączany plik ma być poszukiwany zgodnie z deklaracją ścieżek [0/1*].
   'FILE_PTH',
:: Nazwa (dla FILE_PTH=1) lub bezwzględna ścieżka dostępu do pliku źródłowego. Może być porzedzona @.
   'FILE_PATH',
:: Nazwa pliku, pod którą będzie widoczny [domyślnie - na podstawie FILE_PATH]. Poprawność NIE jest weryfikowana.
   'ZAL_NAME',
:: Opis załącznika.
   'ZAL_DESC',
:: Akronim tabeli rekordu "właściciela" [domyślnie: 'P'].
   'OWNER',
:: Obsługa nadpisywania - warunek przekazany w postaci formuły, której wynik określa sposób zachowania w przypadku
:: istnienia załącznika w tabeli (patrz \file_ovr_options).
   'OVR',
:: Formuła z dodatkową obsługą (np. konkretnych pól tabeli ZALACZ).
:: Wynik [0/1] decyduje o możliwości wykonania operacji add/put.
:: Do formuły przekazywany jest parametr _a o wartości 'add' lub 'put'.
   'ADD_FORM',
:: Tryb wsadowy (bez komunikatów) [0*/1].
   'HIDE_MSG',
:: Czy po poprawnie wykonanej operacji dołączenia / aktualizacji rekordu tabeli ZALACZ usuwać załączony plik [0/1*]?
   'CLEAN_UP'
);

_args.SLO_NAZ:=~~;
_args.FILE_PTH:=1;
_args.FILE_PATH:=~~;
_args.ZAL_NAME:=~~;
_args.ZAL_DESC:='';
_args.OWNER:='P';
:: nadpisywanie pliku [domyślnie: "1"]
_args.OVR:="1";
:: wynik dodatkowej formuły wskazuje na zakończonie sukcesem [domyślnie "1"]
_args.ADD_FORM:="1";
:: bez komunikatów [domyślnie 0]
_args.HIDE_MSG:=0;
:: usuwanac załączany plik [domyślnie 1]
_args.CLEAN_UP:=1;

_args


\add_check_in
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.37]
:: OPIS: Formuła analizująca tablicę z elementami parametryzującymi sposób dołączenia załącznika.
::   WE: _a [ARRAY] - Tablica parametrów wejściowych
::       _b [ARRAY] - Tablica parametrów działania uzupełniana w ramach bieżącej funkcji
::   WY: '' jeśli parametry wejściowe są poprawne / komunikat z błędem wpp.
::----------------------------------------------------------------------------------------------------------------------
_in:=_a;
_args:=_b;

_slo_typ:=exec('slo_typ','ext_slo','ZAL');

_param:='SLO_NAZ';
{? var_pres(_param,_in)=type_of(null()) & _in.SLO_NAZ<>null() & ref_tab(_in.SLO_NAZ)=SLO_NAZ
|| SLO_NAZ.cntx_psh();
   SLO_NAZ.prefix();
   _ok:=SLO_NAZ.seek(_in.SLO_NAZ,,1) & SLO_NAZ.SLO_TYP=_slo_typ;
   SLO_NAZ.cntx_pop();
   {? _ok
   || _args.SLO_NAZ:=_in.SLO_NAZ
   || return('Wartość parametru "%1" nie jest poprawnym złączeniem do słownika nazw.'@[_param])
   ?}
|? var_pres(_param,_in)=type_of('')
|| _ref:=exec('FindInSet','#table','SLO_NAZ','NAZWA',_in.SLO_NAZ,_slo_typ,,1,_in.SLO_NAZ,null());
   {? _ref=null()
   || return('Wartość parametru "%1" [%2] nie jest poprawną nazwą dla typu załącznika.'@[_param,_in.SLO_NAZ])
   || _args.SLO_NAZ:=_ref
   ?}
|| return(
      'Wartość parametru "%1" nie jest poprawnym złączeniem do lub nazwą typu załącznika ze słownika nazw.'@[_param]
   )
?};

_param:='FILE_PTH';
{? var_pres(_param,_in)=type_of(0)
|| _args.FILE_PTH:=_in.FILE_PTH<>0
|| return('Nieprawidłowy typ parametru "%1".'@[_param])
?};

_param:='FILE_PATH';
{? var_pres(_param,_in)=type_of('')
|| {? _in.FILE_PATH=''
   || return('Brak wartości parametru "%1".'@[_param])
   |? fexists(_in.FILE_PATH,_args.FILE_PTH)<>1
   || return('Wartość parametru "%1" [%2]\nnie jest poprawną ścieżką lub brak dostępu do pliku.'@[_param,_in.FILE_PATH])
   || _args.FILE_PATH:=_in.FILE_PATH
   ?}
|| return('Nieprawidłowy typ parametru "%1".'@[_param])
?};

_param:='ZAL_NAME';
{? var_pres(_param,_in)=type_of('')
|| {? _in.ZAL_NAME<>'' & +_in.ZAL_NAME<=MS.fld_len(ZALACZ,'ZAL_NAME')
::    Poprawność nazwy NIE jest weryfikowana.
   || _args.ZAL_NAME:=_in.ZAL_NAME
   || return(
         'Wartość parametru "%1" [%2] nie jest poprawną nazwą dla załącznika możliwą do zapisania w systemie.'@
         [_param,_in.ZAL_NAME]
      )
   ?}

|| _apath:=spli_str(gsub(_in.FILE_PATH,'\\','/'),'/');
:: W FILE_PATH może być zarówno nazwa, jak i cała ścieżka dostępu do pliku. Separator katalogów nie zależy od systemu
:: operacyjnego. Spróbujmy ujednolicić temat: zamieńmy wszystkie \\ na / (powyżej), a następnie (ponizej) weźmy jedynie
:: ostatni z elementów (nazwa pliku wraz z rozszerzeniem).
   _fne:=exec('split_file_name','#file',_apath[obj_len(_apath)]);
   _args.ZAL_NAME:='%1.%2' [_fne.fn,_fne.ext]
?};

_param:='ZAL_DESC';
{? var_pres(_param,_in)=type_of('') & _in.ZAL_DESC<>''
|| _args.ZAL_DESC:=_in.ZAL_DESC
?};

_param:='OWNER';
{? var_pres(_param,_in)=type_of('')
|| {? _in.OWNER=''
   || return('Brak wartości parametru "%1".'@[_param])
   |? var_pres(_in.OWNER)<>type_of(SYSLOG)
   || return('Wartość parametru "%1" [%2] nie jest akronimem tabeli rekordu "właściciela".'@ [_param,_in.OWNER])
   || _args.OWNER:=_in.OWNER
   ?}
|| return('Nieprawidłowy typ parametru "%1".'@[_param])
?};

_param:='OVR';
{? var_pres(_param,_in)=type_of("")
|| _args.OVR:=_in.OVR
?};

_param:='ADD_FORM';
{? var_pres(_param,_in)=type_of("")
|| _args.ADD_FORM:=_in.ADD_FORM
?};

_param:='HIDE_MSG';
{? var_pres(_param,_in)=type_of(0)
|| _args.HIDE_MSG:=_in.HIDE_MSG
?};

_param:='CLEAN_UP';
{? var_pres(_param,_in)=type_of(0)
|| _args.CLEAN_UP:=_in.CLEAN_UP
?};

''


\file_ovr_options
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.37]
:: OPIS: Definiuje obiekt informujący o możliwych sposobach nadpisywania plików załączników.
::   WE:
::   WY: obiekt z możliwymi opcjami nadpisywania plików załączników
::----------------------------------------------------------------------------------------------------------------------
_options:=obj_new(
:: Pozostaw wcześniej utworzoną wersję (nie twórz nowej)
   'leave',
:: Zastąp nową wersją
   'replace',
:: Dołącz nową wersję, pozostawiając starą wersję
   'add'
);

_options.leave:=0;
_options.replace:=1;
_options.add:=2;

_options


\raport
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Procedura tworzy "obiekt" wspomagający wyświetlenie raportu z generowania załączników.
::   WE: [_a] [STRING] - Doklejka do tytuło okna wertowania.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_hdr:={? var_pres('_a')=type_of('') || ' - %1' [_a] || '' ?};

_RAPORT:=obj_new('TAB','add','show');

_RAPORT.TAB:=tab_tmp(1
:: Pracownik
   ,'T','STRING[%1]'[$MS.fld_len(P,'T')],MS.name(P,'T')
   ,'NAZWISKO','STRING[%1]'[$MS.fld_len(OSOBA,'NAZWISKO')],MS.name(OSOBA,'NAZWISKO')
   ,'PIERWSZE','STRING[%1]'[$MS.fld_len(OSOBA,'PIERWSZE')],MS.name(OSOBA,'PIERWSZE')
   ,'PESEL','STRING[%1]'[$MS.fld_len(OSOBA,'PESEL')],MS.name(OSOBA,'PESEL')
   ,'WYDZIAL','STRING[%1]'[$MS.fld_len(UD_SKL,'SYMBOL')],MS.name(P,'WYDZIAL')
:: Załącznik
   ,'TYP_ZAL','STRING[%1]'[$MS.fld_len(SLO_NAZ,'NAZWA')],MS.name(ZALACZ,'TYP_ZAL')
   ,'ZAL_NAME','STRING[%1]'[$MS.fld_len(ZALACZ,'ZAL_NAME')],MS.name(ZALACZ,'ZAL_NAME')
   ,'LOK','STRING[%1]'[$MS.fld_len(ZALACZ,'LOK')],MS.name(ZALACZ,'LOK')
:: Informacje dodatkowe
   ,'ZAPIS','STRING[1]','Zapis'@
   ,'EXISTED','STRING[1]','Istniał'@
   ,'OVR','INTEGER','Sposób rozwiązania konfliktu'@
:: Pola techniczne
   ,'ZALACZ','STRING[48]','ZALACZ.uidref()'
   ,'ZAL','BLOBIMAGE',
);
_RAPORT.TAB.fld_fml('T','DISPLAY_FORMAT',P.fld_fml('T','*DISPLAY_FORMAT'));

_ws:=_RAPORT.TAB.mk_sel('%1%2'['Raport z generowania załączników'@,_hdr],,,'#genzalrap',,,,,'U',,,,,'html_maximized');
_RAPORT.TAB.win_fld(_ws,,'T',,,,,,,,MS.comment(P,'T'));
_RAPORT.TAB.win_fld(_ws,,'NAZWISKO',,,20,,,,,MS.comment(OSOBA,'NAZWISKO'));
_RAPORT.TAB.win_fld(_ws,,'PIERWSZE',,,10,,,,,MS.comment(OSOBA,'PIERWSZE'));
_RAPORT.TAB.win_fld(_ws,,'PESEL',,,,,,,,MS.comment(OSOBA,'PESEL'));
_RAPORT.TAB.win_fld(_ws,,'WYDZIAL',,,-16,,,,,MS.comment(P,'WYDZIAL'));
_RAPORT.TAB.win_fld(_ws,,'EXISTED',,,-3,,,,,'Załącznik istniał przed generowaniem [T/N]'@,2,,"'T'","'N'");
_RAPORT.TAB.win_fld(_ws,,'ZAPIS',,,-3,,,,,'Nastąpił zapis załącznika do tabeli [T/N]'@,2,,"'T'","'N'");
_RAPORT.TAB.win_fld(_ws,,'OVR',,,-3,,,,,'Tryb nadpisywania: 0 - nie nadpisuj / 1 - nadpisuj / 2 - utwórz nową wersję'@);
_RAPORT.TAB.win_fld(_ws,,'TYP_ZAL',,,20,,,,,'Typ załącznika'@);
_RAPORT.TAB.win_fld(_ws,,'ZAL_NAME',,,20,,,,,'Nazwa załączonego pliku'@);
_RAPORT.TAB.win_fld(_ws,,'LOK',,,20,,,,,'Opis załącznika'@);
_RAPORT.TAB.win_act(_ws,,'Szukaj');
_RAPORT.TAB.win_act(_ws,,'Kolejność');
_RAPORT.TAB.win_sel(_ws);

_szer:=80;
_we:=_RAPORT.TAB.mk_edit('%1%2'['Raport z generowania załącznika'@,_hdr],,'#genzalrap',,,'html_maximized');
_RAPORT.TAB.win_esep(_we,'Pracownik'@);
_RAPORT.TAB.win_efld(_we,,'T',,,,,,,,MS.comment(P,'T'));
_RAPORT.TAB.win_efld(_we,,'NAZWISKO',,,_szer,,,,,MS.comment(OSOBA,'NAZWISKO'));
_RAPORT.TAB.win_efld(_we,,'PIERWSZE',,,_szer,,,,,MS.comment(OSOBA,'PIERWSZE'));
_RAPORT.TAB.win_efld(_we,,'PESEL',,,,,,,,MS.comment(OSOBA,'NAZWISKO'));
_RAPORT.TAB.win_efld(_we,,'WYDZIAL',,,_szer,,,,,MS.comment(P,'WYDZIAL'));
_RAPORT.TAB.win_esep(_we,'Status'@);
_RAPORT.TAB.win_efld(_we,,'EXISTED',,,,,,,,'Czy załącznik już istniał?'@
   ,'check-box','check_label="%1"'['Tak, załącznik istniał już przed generowaniem'@],"'T'","'N'"
);
_RAPORT.TAB.win_efld(_we,,'ZAPIS',,,,,,,,'Czy nastąpił zapis załącznika do tabeli?'@
   ,'check-box','check_label="%1"'['Tak, wygenerowany załącznik został zapisany do tabeli'@],"'T'","'N'"
);
_RAPORT.TAB.win_efld(_we,,'OVR',,,,,,,,'Sposób postępowania w przypadku, gdy załącznik już istnieje'@
   ,'radio-buttons',
   ,'Nie nadpisuj'@,"0"
   ,'Nadpisz nową zawartością'@,"1"
   ,'Dołącz nową wersję'@,"2"
);
_RAPORT.TAB.win_esep(_we,'Załącznik'@);
_RAPORT.TAB.win_efld(_we,,'TYP_ZAL',,,_szer,,,,,MS.comment(ZALACZ,'TYP_ZAL'));
_RAPORT.TAB.win_efld(_we,,'ZAL_NAME',,,_szer,,,,,MS.comment(ZALACZ,'ZAL_NAME'));
_RAPORT.TAB.win_efld(_we,,'LOK',,,_szer,,,,,MS.comment(ZALACZ,'LOK'));
_RAPORT.TAB.win_ecol(_we);
_RAPORT.TAB.win_efld(_we,,'ZAL',,,34,18,,,1);
exec('ok_esc','#window',_RAPORT.TAB,_we);

_RAPORT.TAB.win_edit(_we);

_RAPORT.add:="
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Metoda dodaje informację o utworzonym / zaktualizowanym załączniku. Formuła zakłada poprawne wypełnienie
::       bufora tabeli P.
::   WE: _a [ARRAY] - Tablica elementów nazwanych - wynik \add/zal.fml
::   WY:
::----------------------------------------------------------------------------------------------------------------------
   _arr:=_a;
   _ret:=0;
   ZALACZ.cntx_psh();
   ZALACZ.prefix();
   {? ZALACZ.seek(_arr.uidref)
   || OSOBA.cntx_psh();
      OSOBA.prefix();
      P.OSOBA();
      UD_SKL.cntx_psh();
      UD_SKL.prefix();
      SLO_NAZ.cntx_psh();
      SLO_NAZ.prefix();
      .TAB.blank();
      .TAB.T:=P.T;
      .TAB.NAZWISKO:=OSOBA.NAZWISKO;
      .TAB.PIERWSZE:=OSOBA.PIERWSZE;
      .TAB.PESEL:=OSOBA.PESEL;
      .TAB.WYDZIAL:=P.WYDZIAL().SYMBOL;
      .TAB.EXISTED:={? _arr.existed || 'T' || 'N' ?};
      .TAB.OVR:=_arr.ovr;
      .TAB.ZAPIS:={? _arr.ok || 'T' || 'N' ?};
      .TAB.TYP_ZAL:=ZALACZ.TYP_ZAL().NAZWA;
      .TAB.ZAL_NAME:=ZALACZ.ZAL_NAME;
      .TAB.LOK:=ZALACZ.LOK;
      .TAB.ZALACZ:=_arr.uidref;
      {? '.bmp.png.pdf.tif.jpg'*(-(ZALACZ.ZAL_NAME+4)) | '.tiff.jpeg'*(-(ZALACZ.ZAL_NAME+5))
::       Podłączamy załącznik, jeżeli jesteśmy w stanie wyświetlić jego podgląd.
::       MacroHELP: "II.10  Pola typu BLOBIMAGE i BLOBRAW w okienkach".
      || .TAB.ZAL:=ZALACZ.ZAL
      ?};
      _ret:=.TAB.add();
      SLO_NAZ.cntx_pop();
      UD_SKL.cntx_pop();
      OSOBA.cntx_pop()
   ?};
   ZALACZ.cntx_pop();
   _ret
";
_RAPORT.show:=".TAB.select()";

_RAPORT


\options_profile
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [22.26]
:: OPIS: Definiuje obiekt zwracający informacje o ustawieniach dla zapisu do pliku z ustawieniami (profile.upf)
::       dotyczących generowania załączników z wniosków kadrowych.
::   WE:
::   WY: obiekt z ustawieniami dla zapisu do pliku z ustawieniami (profile.upf)
::----------------------------------------------------------------------------------------------------------------------
_options:=obj_new(
:: Nazwa sekcji
   'sectionName',
:: Nazwa parametru
   'paramName'
);

_options.sectionName:='edokumzal';
_options.paramName:='Wnioski kadrowe, dla których generować załączniki';

_options

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 c4dec1453a23697e53dbca009d3f2539806213803795749bd4c512d2e69c72a891363c5a78a1a9f41042d76c32f971ebcf671797a035598769d67f4e1d80583fea1f108d840cc560a3f4fa0f52719a5f61f48fd9069ac93e4a60cf233a92ae45476b52d2632fcde8475f9e668fabe56c273865318fc9bf7cb9a835d1aa82a766
