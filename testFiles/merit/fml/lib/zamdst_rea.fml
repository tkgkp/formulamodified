:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zamdst_rea.fml
:: Utworzony: 06.07.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Obsługa zamówień dostaw - realizacje zamówień
::======================================================================================================================


\usun_rea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: usuniecie realizacji
::   WE:  _a  - ref dokumentu magazynowego w postaci SQL
::        _b  - 1 - usuniecie PZ-tki i realizacji  2- Usuniecie wylacznie realizacji 3-usunięcie realizacji usługowej
::       [_c] - czy zakladac transakcje 0 - tak 1 - nie
::  OLD: \usun_rea/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3  || {? type_of(_c)<>1 || _c:=0 ?}  || _c:=0  ?};


ND.cntx_psh();
ZD_RN.cntx_psh();
{? (5+_a)='zdhin'
|| ZD_RN.prefix();
   {? ZD_RN.seek(_a)
   || _pow:=exec('czy_rozu','magdok_wspolne',ZD_RN.ref());
      {? {? _pow
         || FUN.ask('Pozycje realizacji zamówienia są powiązane z dokumentami zakupu.\n'
                    'Usunięcie realizacji usunie te powiązania.\n\n'
                    'Usunąć realizację?'@)
         || FUN.ask('Usunąć realizację?'@)
         ?}
      || {? _c=0 || do() ?};
         exec('zdreusu','zamdst_rea',1);
         {? _c=0 || end() ?}
      ?}
   ?};
   _ok:=0
|| ZD_RN.index('ND');
   ZD_RN.prefix(_a,);
   _ok:=ZD_RN.first()
?};
{? _ok
|| _ile:=ZD_RN.size();
   {!
   |? _refzd:=ZD_RN.ref(); _next:=ZD_RN.next();
      ZD_RN.cntx_psh();
      ZD_RN.clear();
      {? ZD_RN.seek(_refzd)
      || ND.clear();
         {? ~_ile & _b=1
         || {? _c=0 || do() ?};
            exec('zdreusu','zamdst_rea',1);
            {? _c=0 || end() ?}
         |? _b<>3 & ND.seek(_a,8+_a)
         || _ile:=0;
            {? exec('blok_nd','magdok_nag','T')
            ||
               ND.r_unlock();
               {? _b=2
               || {? _c=0 || do() ?};
                  exec('usun_dpz','magdok_nag',_a,1);
                  {? _c=0 || end() ?}
               || exec('usun_dpz','magdok_nag',_a,-1)
               ?}
            ?}
         |? _b<>3 & (8+_a)=ND.name()
         ||
            {? FUN.ask('Brak dokumentu magazynowego w systemie.\n'@+
                       'Usunąć realizację?'@)
            ||
               {? _c=0 || do() ?};
               exec('zdreusu','zamdst_rea',1);
               {? _c=0 || end() ?}
            ?}
         |? _a=''
         ||
            {? {? _b<>3
               || FUN.ask('Brak powiązanego dokumentu magazynowego.\n'@+
                          'Usunąć realizację?'@)
               || FUN.ask('Realizacja dotycząca wyłącznie usług.\n'@+
                          'Usunąć realizację?'@)
               ?}
            ||
               {? _c=0 || do() ?};
               exec('zdreusu','zamdst_rea',1);
               {? _c=0 || end() ?}
            ?}
         ?}
      ?};
      ZD_RN.cntx_pop();
      _next
   !}
?};
ZD_RN.cntx_pop();
ND.cntx_pop();
''


\zdreusu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wlasciwe usuwanie realizacji zamowienia
::   WE:  _a - czy aktualizowac pozycje zamowienia 1 - tak, 0 - nie
::  OLD: \zdreusu/zd.fml
::----------------------------------------------------------------------------------------------------------------------
ZD_RP.index('POZ');
ZD_RP.prefix(ZD_RN.ref);
{? ZD_RP.first()
|| {!
   |? FAP2DK.index('ZD_RP');
      FAP2DK.prefix($ZD_RP.ref(),);
      {? FAP2DK.first() || {! |? exec('fapk_clear','magdok_wspolne'); FAP2DK.del() !} ?};

      _zam_rp:=$ZD_RP.ref();
::    aktualizacja pozycji dokumentow magazynowych
      _actodd:=1+(ZD_NAG.name()+3);
      OKR.cntx_psh();
      ND.cntx_psh();
      DK.cntx_psh();
      OKR.index('MC');
      OKR.prefix(REF.FIRMA,1);
      {? OKR.first()
      || {!
         |? ND.use('nagdo'+_actodd+form(OKR.ROK-2000,-2,0,'99'));
            DK.use('dokma'+_actodd+form(OKR.ROK-2000,-2,0,'99'));
            DK.index('ZAM_RP');
            DK.prefix(_zam_rp);
            {? DK.first
            || {!
               |? DK.cntx_psh();
                  DK.prefix();
                  DK.ZAM_RN:='';
                  DK.ZAM_RP:='';
                  DK.put(1);
                  DK.cntx_pop();
                  DK.first()
                !}
            ?};
            OKR.next()
         !}
      ?};
      OKR.cntx_pop();
      ND.cntx_pop();
      DK.cntx_pop();
      ZD_RP.del()
   !}
?};

_zd_nag_ref:=ZD_RN.ZD_NAG;
POM.TYPDOK:='ZDR'; POM.TAB:='ZD_RN';
numer:=ZD_RN.NR; oldnumer:=1;
exec('nr_old','numery');
ZD_RN.del();

:: jezeli trzeba to ustawiamy stan zamowienia
{? _a || exec('aktu_zam','zamdst_wspolne',_zd_nag_ref) ?};
''


\obl_rea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: oblicza ilosc zrealizowana dla pozycji potwierdzenia ZDP_POZ
::   WE: _a - ZDP_POZ.refsql()
::       _b - 0/1 - dane tylko z ZD_RP
::  OLD: \obl_rea/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_b:={? var_pres('_b')=type_of(0) || _b || 1 ?};
_obl:="
   _wyn:=0;
   ZD_RP.index('ZDP_POZ');
   ZD_RP.prefix(_a,_a);
   {? ZD_RP.first()
   ||
      {!
      |?
         {? _b
         ||
            _wyn+=ZD_RP.IL_ZRE
         ||
            ND.cntx_psh();
            DK.cntx_psh();
            OKR.cntx_psh();
            OKR.index('MC');
            OKR.prefix(REF.FIRMA,1);
            _loop:=OKR.first();
            {!
            |? _loop
            |!
               ND.use('nagdo'+ST.ODDZ+($OKR.ROK+2));
               DK.use('dokma'+ST.ODDZ+($OKR.ROK+2));
               DK.index('ZAM_RP');
               DK.prefix($ZD_RP.ref());
               _loop:=DK.first() & DK.N().Z='T';
               {!
               |? _loop
               |!
                  _wyn+=DK.IL;
                  _loop:=DK.next()
               !};
               _loop:=OKR.next()
            !};
            OKR.cntx_pop();
            ND.cntx_pop();
            DK.cntx_pop()
         ?};
         ZD_RP.next()
      !}
   ?};
   _wyn
";
ZD_RN.cntx_psh();
ZD_RP.cntx_psh();
:: w biezacej masce
ZD_RN.use('zdhin'+ST.ODDZ+'__');
ZD_RP.use('zdhip'+ST.ODDZ+'__');
_wyn+=_obl(_a,_b);
:: w archiwum
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first()
||
   {!
   |?
      ZD_RN.use('zdhin'+ST.ODDZ+($OKR.ROK+2));
      ZD_RP.use('zdhip'+ST.ODDZ+($OKR.ROK+2));
      _wyn+=_obl(_a,_b);
      OKR.next()
   !}
?};
OKR.cntx_pop();
ZD_RP.cntx_pop();
ZD_RN.cntx_pop();
_wyn


\zdre_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: dodanie realizacji dla zamowienia
::   WE: [_a] - 1-auto, 0-nie(domyślnie)
::       [_b] - potwierdzenie zamówień dostaw - ZDP_NAG.ref(), domyslnie null()
::       [_c] - dyspozycja w magazynie - TR_NZL.ref(), domyślnie null()
::  OLD: \zdre_dol/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('jest_nrd','numery','ZDR') || FUN.info('Brak definicji numeracji realizacji o kodzie ZDR.'@); return ?};
_auto:={? var_pres('_a')<>type_of(0) || 0 || _a ?};
_zdp_nag:={? var_pres('_b')<>type_of(null()) || null() || _b ?};
_tr_nzl:={? var_pres('_c')<>type_of(null()) || null() || _c ?};

BEER.MENU_PTH+='D';
{? exec('czy_z_ok','okresy',1,0)=1
||
   _st_mag:=ST.MAG;
   {? ZD_Z.CZY_ZD='T'
   ||
      ZD_NAG.get();
      {? ~('AC'*ZD_NAG.STAN)
      || {? ZD_NAG.STAN='N'
         || FUN.info('Należy zaakceptować zamówienie.\n'@+'Realizacja niemożliwa.'@)
         || FUN.info('Dla danego stanu zamówienia niedostępna jego realizacja.'@)
         ?}
      |? date(ST.AR,ST.AM,0)<ZD_NAG.DATA
      ||
         FUN.info('Data wystawienia zamówienia %1 jest późniejsza niż bieżący okres rozliczeniowy.\n'@[$ZD_NAG.DATA]+
                  'Wystawienie realizacji dla tego zamówienia w okresie %1 jest niemożliwe.'@[ST.OKR])
      ||
         exec('rea_zadd','zamdst_rea',_zdp_nag,_tr_nzl)
      ?}
   ?};
   ST.MAG:=_st_mag
||
   FUN.info('Okres obrachunkowy jest zamknięty.\nRealizacja w bieżącym okresie jest niemożliwa.'@)
?};
BEER.MENU_PTH-=1;
''


\rea_zadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: realizacja dla zamowienia - tworzy drzewko w podziale na magazyny - widok przyszlej realizacji
::   WE: [_a] - potwierdzenie zamówień dostaw - ZDP_NAG.ref(), domyslnie null()
::       [_b] - dyspozycja w magazynie - TR_NZL.ref(), domyslnie null()
::       [_c] - 1-tryb dodania do listy, 0(domyślnie)-nie
::       [_d] - pozycja do realizacji
::  OLD: \rea_zadd/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
exec('openzd_psh','open_tab');

_zdp_nag:={? var_pres('_a')<>type_of(null()) || null() || _a ?};
_tr_nzl:={? var_pres('_b')<>type_of(null()) || null() || _b ?};
_add_lst:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_zd_poz:={? var_pres('_d')=type_of(null()) || _d || null() ?};

BEER.UIDDOK:='';

ZD_NAG.get();
POMOC.ZD_NAG:=ZD_NAG.ref();
POMOC.ZDP_NAG:=_zdp_nag;
POMOC.TR_NZL:=_tr_nzl;

{? ZD_NAG.r_lock(1,1,1)
||
   _wyn:=0;
   {? ~_add_lst
   || VAR_DEL.delete('__rea_tab','__rea_sel','__mg_list','__rea_wym');
      __rea_wym:=tab_tmp(2,'REA','STRING[16]',''
       ,'DKC','STRING[16]',''
       ,'LOK','STRING[16]',''
       ,'TRM','DATE',''
       ,'PAL','STRING[16]',''
       ,'ILE','REAL',''
       ,'SCEAN','STRING[128]','')
   ?};
   {? POMOC.ZDP_NAG=null() & POMOC.TR_NZL=null()
   || _qq:=$"
         select
            case when M.RODZ='U' then '' else MG.SYM end as Magazyn,
            ZD_NAG.SYM as Sym,
            ZD_POZ.POZ as Poz,
            ZD_NAG.SYM||' poz. '||ZD_POZ.POZ as Opis,
            M.KTM as Indeks,
            M.N as Nazwa,
            JM.KOD as JM,
            JM.KOD as J2,
            ZD_POZ.IL as IL,
            ZD_POZ.IL_POZ as IL_POZ,
            ZD_POZ.IL as IL_REA,
            ZD_POZ.IL2 as IL2,
            ZD_POZ.CENA as Cena,
            ZD_POZ.CENA as Cena1,
            SLO.KOD as WAL,
            ZD_POZ.CWAL as CWAL,
            ' ' as Stan,
            M.N as Info,
            'N' as UPR_MG,
            'N' as ZAM_OKR,
            SPACE(16) as ZDPP_REF,
            ZD_POZ.reference as ZD_POZ,
            ZD_NAG.reference as ZD_NAG,
            MG.reference as MG_REF,
            M.reference as M_REF,
            MG.TYP MGTYP,
            'x' as X,
            'Z' as RODZ,
            MG.IL CZYIL,
            ZD_NAG.T as TYP_REF,
            M.DOKL as DOKL,
            M.DOKL_C as DOKL_C,
            '                              ' as PAL,
            ZD_NAG.DATA as TW,
            M.CZY_TW as CZY_TW,
            SPACE(50) as ZD_P_SYM,
            SPACE(16) as ZDPP_REF,
            SPACE(16) as TR_REF,
            M.RODZ TOWAR,
            ZD_NAG.JMZ JMZ,
            ZKON.SYM KONTRAKT
         from
            ZD_POZ
            join ZD_NAG using (ZD_POZ.ZD_NAG,ZD_NAG.reference)
            left join MG using (ZD_POZ.MG,MG.reference)
            join M using (ZD_POZ.M,M.reference)
            join JM using (ZD_POZ.JM,JM.reference)
            left join SLO using (ZD_POZ.WAL,SLO.reference)
            left join ZKON using (ZD_NAG.ZKON,ZKON.reference)
         where
            ZD_POZ.ZD_NAG=:_a and ZD_POZ.END=0 and (:_b='' or ZD_POZ.REFERENCE=:_b)
         order by
            1,2,3,4,5
      ";
      BEER.JMZ:=ZD_NAG.JMZ;
      {? ~_add_lst
      || __rea_tab:=sql(_qq,ZD_NAG.ref(),null())
      || _buf:=sql(_qq,ZD_NAG.ref(),_zd_poz)
      ?}
   |? POMOC.ZDP_NAG<>null() & POMOC.TR_NZL=null()
   || _qq:=$"
         select
            case when M.RODZ='U' then '' else MG.SYM end as Magazyn,
            ZD_NAG.SYM as Sym,
            ZD_POZ.POZ as Poz,
            ZD_NAG.SYM||' poz. '||ZD_POZ.POZ as Opis,
            M.KTM as Indeks,
            M.N as Nazwa,
            JM.KOD as JM,
            JM.KOD as J2,
            ZDP_POZ.IL as IL,
            ZDP_POZ.IL as IL_POZ,
            ZDP_POZ.IL as IL_REA,
            ZD_POZ.IL2 as IL2,
            ZDP_POZ.CENA as Cena,
            SLO.KOD as WAL,
            ZDP_POZ.CWAL as CWAL,
            ' ' as Stan,
            M.N as Info,
            'N' as UPR_MG,
            'N' as ZAM_OKR,
            ZDP_POZ.ZD_POZ as ZD_POZ,
            ZD_NAG.reference as ZD_NAG,
            MG.reference as MG_REF,
            M.reference as M_REF,
            MG.TYP as MGTYP,
            'x' as X,
            'P' as RODZ,
            MG.IL CZYIL,
            ZD_NAG.T as TYP_REF,
            M.DOKL as DOKL,
            M.DOKL_C as DOKL_C,
            '                              ' as PAL,
            ZD_NAG.DATA as TW,
            M.CZY_TW as CZY_TW,
            SPACE(50) as ZD_P_SYM,
            ZDP_POZ.reference as ZDPP_REF,
            SPACE(16) as TR_REF,
            M.RODZ TOWAR,
            ZD_NAG.JMZ JMZ,
            ZKON.SYM KONTRAKT
         from
            ZDP_POZ
            join ZD_POZ using (ZDP_POZ.ZD_POZ,ZD_POZ.reference)
            join ZD_NAG using (ZD_POZ.ZD_NAG,ZD_NAG.reference)
            left join MG using (ZD_POZ.MG,MG.reference)
            join M using (ZD_POZ.M,M.reference)
            join JM using (ZD_POZ.JM,JM.reference)
            left join SLO using (ZD_POZ.WAL,SLO.reference)
            left join ZKON using (ZDP_POZ.ZKON,ZKON.reference)
         where
            ZDP_POZ.ZDP_NAG=:_a and to_date(:_b)>=ZD_NAG.DATA and ZDP_POZ.END=0 and ZD_POZ.END=0
            and (:_c='' or ZDP_POZ.REFERENCE=:_c)
         order by
            1,2,3,4
      ";
      {? ~_add_lst
      || __rea_tab:=sql(_qq,POMOC.ZDP_NAG,date(ST.AR,ST.AM,0),null())
      || _buf:=sql(_qq,POMOC.ZDP_NAG,date(ST.AR,ST.AM,0),_zd_poz)
      ?}
   |? POMOC.ZDP_NAG=null() & POMOC.TR_NZL<>null()
   || _tt:=sql(
         'select '
         '  substr(TR_ZL.POZ_REF,33,16) POZ_REF, '
         '  substr(TR_ZL.DOK_REF,33,16) DOK_REF, '
         '  case when TR_ZL.ZIL>0 then TR_ZL.ZIL else TR_ZL.IL end as IL, '
         '  TR_ZL.REFERENCE as TR_REF '
         'from '
         '  TR_ZL '
         'where '
         '  TR_ZL.TR_NZL=:_a and TR_ZL.IL>0 '
         'order by '
         '  2,1',POMOC.TR_NZL);

      _qq:=$"
         select
            case when M.RODZ='U' then '' else MG.SYM end as Magazyn,
            ZD_NAG.SYM as Sym,
            ZD_POZ.POZ as Poz,
            ZD_NAG.SYM||' poz. '||ZD_POZ.POZ as Opis,
            M.KTM as Indeks,
            M.N as Nazwa,
            JM.KOD as JM,
            JM.KOD as J2,
            :_a.IL as IL,
            ZD_POZ.IL_POZ as IL_POZ,
            :_a.IL as IL_REA,
            ZD_POZ.IL2 as IL2,
            ZD_POZ.CENA as Cena,
            ZD_POZ.CENA as Cena1,
            SLO.KOD as WAL,
            ZD_POZ.CWAL as CWAL,
            ' ' as Stan,
            M.N as Info,
            'N' as UPR_MG,
            'N' as ZAM_OKR,
            SPACE(16) as ZDPP_REF,
            ZD_POZ.reference as ZD_POZ,
            ZD_NAG.reference as ZD_NAG,
            MG.reference as MG_REF,
            M.reference as M_REF,
            MG.TYP MGTYP,
            'x' as X,
            'D' as RODZ,
            MG.IL CZYIL,
            ZD_NAG.T as TYP_REF,
            M.DOKL as DOKL,
            M.DOKL_C as DOKL_C,
            '                              ' as PAL,
            ZD_NAG.DATA as TW,
            M.CZY_TW as CZY_TW,
            SPACE(50) as ZD_P_SYM,
            SPACE(16) as ZDPP_REF,
            :_a.TR_REF as TR_REF,
            M.RODZ TOWAR,
            ZD_NAG.JMZ JMZ,
            ZKON.SYM KONTRAKT
         from
            :_a
            join ZD_POZ using (:_a.POZ_REF,ZD_POZ.reference)
            join ZD_NAG using (:_a.DOK_REF,ZD_NAG.reference)
            left join MG using (ZD_POZ.MG,MG.reference)
            join M using (ZD_POZ.M,M.reference)
            join JM using (ZD_POZ.JM,JM.reference)
            left join SLO using (ZD_POZ.WAL,SLO.reference)
            left join ZKON using (ZD_NAG.ZKON,ZKON.reference)
         order by
            1,2,3,4,5
      ";
      __rea_tab:=sql(_qq,_tt);
      obj_del(_tt)
   |? POMOC.ZDP_NAG<>null() & POMOC.TR_NZL<>null()
   || _tt:=sql(
         'select '
         '  substr(TR_ZL.POZ_REF,33,16) POZ_REF, '
         '  substr(TR_ZL.DOK_REF,33,16) DOK_REF, '
         '  case when TR_ZL.ZIL>0 then TR_ZL.ZIL else TR_ZL.IL end as IL, '
         '  TR_ZL.REFERENCE as TR_REF '
         'from '
         '  TR_ZL '
         'where '
         '  TR_ZL.TR_NZL=:_a and TR_ZL.IL>0 '
         'order by '
         '  2,1',POMOC.TR_NZL);

      _qq:=$"
         select
            case when M.RODZ='U' then '' else MG.SYM end as Magazyn,
            ZD_NAG.SYM as Sym,
            ZD_POZ.POZ as Poz,
            ZD_NAG.SYM||' poz. '||ZD_POZ.POZ as Opis,
            M.KTM as Indeks,
            M.N as Nazwa,
            JM.KOD as JM,
            JM.KOD as J2,
            ZDP_POZ.IL as IL,
            ZDP_POZ.IL as IL_POZ,
            :_a.IL as IL_REA,
            ZDP_POZ.CENA as Cena,
            SLO.KOD as WAL,
            ZDP_POZ.CWAL as CWAL,
            ' ' as Stan,
            M.N as Info,
            'N' as UPR_MG,
            'N' as ZAM_OKR,
            ZDP_POZ.ZD_POZ as ZD_POZ,
            ZD_NAG.reference as ZD_NAG,
            MG.reference as MG_REF,
            M.reference as M_REF,
            MG.TYP as MGTYP,
            'x' as X,
            'D' as RODZ,
            MG.IL CZYIL,
            ZD_NAG.T as TYP_REF,
            M.DOKL as DOKL,
            M.DOKL_C as DOKL_C,
            '                              ' as PAL,
            ZD_NAG.DATA as TW,
            M.CZY_TW as CZY_TW,
            SPACE(50) as ZD_P_SYM,
            ZDP_POZ.reference as ZDPP_REF,
            :_a.TR_REF as TR_REF,
            M.RODZ TOWAR,
            ZD_NAG.JMZ JMZ,
            ZKON.SYM KONTRAKT
         from
            :_a
            join ZDP_POZ using(:_a.POZ_REF,ZDP_POZ.reference)
            join ZD_POZ using (ZDP_POZ.ZD_POZ,ZD_POZ.reference)
            join ZD_NAG using (ZD_POZ.ZD_NAG,ZD_NAG.reference)
            left join MG using (ZD_POZ.MG,MG.reference)
            join M using (ZD_POZ.M,M.reference)
            join JM using (ZD_POZ.JM,JM.reference)
            left join SLO using (ZD_POZ.WAL,SLO.reference)
            left join ZKON using (ZDP_POZ.ZKON,ZKON.reference)
         where ZDP_POZ.END=0 and ZD_POZ.END=0
         order by
            1,2,3,4,5
      ";
      __rea_tab:=sql(_qq,_tt);
      obj_del(_tt)
   ?};
   BEER.JMZ:=POMOC.ZD_NAG().JMZ;

:: oblicza ilosc pozostala do realizacji
   _Tab:={? ~_add_lst || __rea_tab || _buf ?};
   {? POMOC.ZDP_NAG<>null()
   || {? _Tab.first()
      || {!
         |? _jmz:=_Tab.JMZ & exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"JM<>J2 & WS2<>1",0);
            _jmg:=exec('FindAndGet','#table',M,_Tab.M_REF,,"J2",null());
            {? _jmg=null() & _jmz
            || _ws2:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"WS2",1);
               _dokl_m:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"M().DOKL",3);
               _dokl_c:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"M().DOKL_C",3);
               _Tab.IL:=_Tab.IL/_ws2 $_dokl_m;
               _Tab.JM:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"M().J().KOD",_Tab.JM);
               _Tab.CENA:=_Tab.CENA*_ws2 $ _dokl_c
            ?};
            {? _Tab.CZY_TW='T' & (_twd:=exec('FindAndGet','#table',M,_Tab.M_REF,,"TWD",0); _twd>0)
            || _Tab.TW:=date()+_twd
            || _Tab.TW:=date(0,0,0)
            ?};
            _Tab.IL_POZ:=_Tab.IL-exec('obl_rea','zamdst_rea',_Tab.ZDPP_REF);
            _Tab.CZY_TW:={? _Tab.CZY_TW='T' || '<' || '' ?};
            {? _Tab.IL_POZ>0
            || _Tab.IL_REA:=_Tab.IL_POZ
            || _Tab.X:='-'
            ?};
            _Tab.PAL:='';
            _Tab.ZD_P_SYM:='%1 z dnia %2'@[POMOC.ZDP_NAG().SYM,$POMOC.ZDP_NAG().D_WYS];
            _Tab.put();
            _Tab.next()
         !};

         _Tab.first();
         {!
         |?
            {? _Tab.X='-' || _Tab.del() || _Tab.next() ?}
         !}
      ?}
   ||
      {? _Tab.first()
      || {!
         |? _jmz:=_Tab.JMZ & exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"JM<>J2 & WS2<>1",0);
            _jmg:=exec('FindAndGet','#table',M,_Tab.M_REF,,"J2",null());
            exec('roz_ptw','zamdst_ptw',_Tab.ZD_POZ,$_Tab.ref());
            {? _jmg=null() & _jmz
            || _ws2:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"WS2",1);
               _dokl_m:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"M().DOKL",3);
               _dokl_c:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"M().DOKL_C",3);
               _Tab.IL_POZ:=_Tab.IL_POZ/_ws2 $_dokl_m;
               _Tab.JM:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"M().J().KOD",_Tab.JM);
               _Tab.CENA:=_Tab.CENA*_ws2 $ _dokl_c
            ?};
            _Tab.IL_POZ:=_Tab.IL_POZ-(__zdp_sum.IL_PTW-__zdp_sum.IL_REA);

::         __rea_tab.IL_POZ:=__rea_tab.IL_POZ;
            {? _Tab.CZY_TW='T' & (_twd:=exec('FindAndGet','#table',M,_Tab.M_REF,,"TWD",0); _twd>0)
            || _Tab.TW:=date()+_twd
            || _Tab.TW:=date(0,0,0)
            ?};
            _Tab.CZY_TW:={? _Tab.CZY_TW='T' || '<' || '' ?};
            {? _Tab.IL_POZ>0
            || {? _Tab.RODZ<>'D' || _Tab.IL_REA:=_Tab.IL_POZ ?}
            || _Tab.X:='-'
            ?};
            _stan:='X';
            _info:='System nie odnalazł aktywnego zamówienia.';
            ZD_NAG.cntx_psh();
            ZD_POZ.cntx_psh();
            ZD_POZ.clear();
            {? 8+_Tab.ZD_POZ=ZD_POZ.name() & ZD_POZ.seek(_Tab.ZD_POZ,8+_Tab.ZD_POZ)
            ||
               _stan:=ZD_POZ.ZD_NAG().STAN;
               _info:=POM.STAN
            ?};
            ZD_POZ.cntx_pop();
            ZD_NAG.cntx_pop();
            _Tab.STAN:=_stan;
            _Tab.INFO:='Zamówienie: '+_info;
            {? _Tab.TOWAR='U'
            ||
               _Tab.UPR_MG:='T'
            |? _Tab.MAGAZYN<>''
            ||
               {? _Tab.ZAM_OKR='T'
               || _Tab.INFO:='magazyn jest ZAMKNIĘTY'
               ?};
               {? exec('upr_mg','zamdst_rea',_Tab.MAGAZYN)
               ||
                  _Tab.UPR_MG:='T'
               ||
                  _Tab.UPR_MG:='N';
                  _Tab.INFO:='BRAK uprawnień do magazynu'
               ?}
            ?};
            _Tab.PAL:='';
            _Tab.IL:=_Tab.IL $_Tab.DOKL;
            _Tab.IL_POZ:=_Tab.IL_POZ $_Tab.DOKL;
            _Tab.IL_REA:=_Tab.IL_REA $_Tab.DOKL;
            _Tab.CENA:=_Tab.CENA $_Tab.DOKL_C;
            _Tab.CWAL:=_Tab.CWAL $_Tab.DOKL_C;
            _Tab.put();
            _Tab.next()
         !};
::    dodanie pozycji z potwierdzeń do realizacji
         {? var_pres('__zdp_roz')>100
         || _Tab.cntx_psh();
            __zdp_roz.clear();
            {? __zdp_roz.first()
            || {!
               |? {? __zdp_roz.REA_TAB<>'' & (_Tab.clear(); _Tab.seek(__zdp_roz.REA_TAB))
                  || {? _Tab.RODZ<>'D'
                     || _Tab.IL_REA:=_Tab.IL_POZ:=__zdp_roz.IL_PTW-__zdp_roz.IL_REA
                     || _Tab.IL_POZ:=__zdp_roz.IL_PTW-__zdp_roz.IL_REA
                     ?};
                     _Tab.X:='x';
                     _Tab.ZD_P_SYM:=__zdp_roz.OPIS;
                     _Tab.ZDPP_REF:=__zdp_roz.ZD_P_POZ;
                     {? __zdp_roz.CENA<>0 || _Tab.CENA:=__zdp_roz.CENA ?};
                     {? __zdp_roz.CWAL<>0 || _Tab.CWAL:=__zdp_roz.CWAL ?};
                     {? __zdp_roz.KONTRAKT<>'' || _Tab.KONTRAKT:=__zdp_roz.KONTRAKT ?};
                     _Tab.add(1)
                  ?};
                  __zdp_roz.next()
               !}
            ?};
            _Tab.cntx_pop()
         ?};
         VAR_DEL.delete('__zdp_roz');

         _Tab.first();
         {!
         |?
            {? _Tab.X='-' || _Tab.del() || _Tab.next() ?}
         !}
      ?}
   ?};
:: rozpisanie wg TR_ZL o ile istnieją
   {? POMOC.TR_NZL<>null() & __rea_tab.first()
   || TR_ZL.cntx_psh();
      TR_ZLM.cntx_psh();
      {!
      |?
         {? __rea_tab.TR_REF<>'' & (TR_ZL.prefix(); TR_ZL.seek(__rea_tab.TR_REF))
         || _iledowym:={? exec('FindAndGet','#table',MG,__rea_tab.MG_REF,,"SL='T'",0) || __rea_tab.IL_REA || 0 ?};
            TR_ZLM.index('TR_ZL');
            TR_ZLM.prefix(TR_ZL.ref());
            {? TR_ZLM.first()
            || {? TR_ZLM.PAL<>null()
               || __rea_tab.PAL:=TR_ZLM.PAL().KODK;
                  __rea_tab.put(1)
               ?};
               {!
               |? __rea_wym.blank();
                  __rea_wym.REA:=$__rea_tab.ref();
                  __rea_wym.LOK:=$TR_ZLM.LOK;
                  __rea_wym.DKC:={? TR_ZLM.DK_C=null() || 'xxx' || $TR_ZLM.DK_C ?};
                  __rea_wym.TRM:=TR_ZLM.TW;
                  __rea_wym.PAL:=$TR_ZLM.PAL;
                  __rea_wym.ILE:=TR_ZLM.IL;
                  __rea_wym.SCEAN:=TR_ZLM.SCEAN;
                  __rea_wym.add(1);
                  {? TR_ZLM.LOK<>null() || _iledowym-=TR_ZLM.IL ?};
                  TR_ZLM.next()
               !}
            ?};
            {? _iledowym>0 & TR_ZL.TR_NZL().EANL<>null()
            || __rea_wym.blank();
               __rea_wym.REA:=$__rea_tab.ref();
               __rea_wym.LOK:=$TR_ZL.TR_NZL().EANL;
               __rea_wym.ILE:=_iledowym;
               __rea_wym.add(1)
            ?}
         ?};
         __rea_tab.next()
      !};
      TR_ZL.cntx_pop();
      TR_ZLM.cntx_pop()
   ?};
:: sprawdza czy potwierdzenia nie sa blokowane (moga byc wlasnie edytowane lub realizowane)
   _unlock:=1;
   {? _Tab.first()
   ||
      ZDP_NAG.cntx_psh();
      ZDP_POZ.cntx_psh();
      {!
      |?
::       pozycje potwierdzen powiazane z pozycjami zamowien (tylko w biezacej masce - archiwalne nie moga byc edytowane)
         ZDP_POZ.index('ZD_POZ');
         ZDP_POZ.prefix(_Tab.ZD_POZ,_Tab.ZD_POZ);
         {? ZDP_POZ.first()
         ||
            {!
            |?
               {? ZDP_NAG.seek(ZDP_POZ.ZDP_NAG)
               ||
                  {? ~ZDP_NAG.r_lock(1,1,1)
                  ||
                     {? FUN.ask('Dokument obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@)
                     || ZDP_NAG.r_lock(1,,1)
                     ?};
                     _unlock:=0
                  ?};
                  ZDP_NAG.r_unlock()
               ||
                  _unlock:=0
               ?};
               _unlock=1 & ZDP_POZ.next()
            !}
         ?};
         _unlock=1 & _Tab.next()
      !};
      ZDP_NAG.cntx_pop();
      ZDP_POZ.cntx_pop()
   ?};
   {? _add_lst & (_buf.prefix(); _buf.first())
   || _num:=__rea_tab.fld_num();
      {!
      |? __rea_tab.cntx_psh();
         _ndx:=__rea_tab.ndx_tmp(,,'ZD_POZ',,);
         __rea_tab.index(_ndx);
         __rea_tab.prefix(_buf.ZD_POZ,);
         _add:=~__rea_tab.first() | ~__rea_tab.find_tab('first','ZDPP_REF',,'=',_buf.ZDPP_REF);
         __rea_tab.ndx_drop(_ndx);
         __rea_tab.cntx_pop();
         {? _add
         || __rea_tab.prefix();
            __rea_tab.blank();
            {! _ii:=1.._num |! __rea_tab[_ii]:=_buf[_ii] !};
            __rea_tab.add(1);
            _oki:=0;
            __mg_list.clear();
            __mg_list.prefix(__rea_tab.MAGAZYN,);
            {? __mg_list.first()
            || _oki:=1
            || __mg_list.blank();
               __mg_list.MAGAZYN:=__rea_tab.MAGAZYN;
               __mg_list.TOWAR:=__rea_tab.TOWAR;
               {? __mg_list.add(1) || _oki:=1 ?}
            ?};
            {? _oki & HELP.WAL<>exec('bl_nwal_mg','ustawienia')
            || __rea_tab.CENA:=
                  {? __rea_tab.CWAL
                  || __rea_tab.CWAL
                  |?  HELP.WAL<>null
                  || _dokl_c:=ZD_RP.ZD_POZ().M().DOKL_C;
                     {? __nd_krs>0
                     || _walj:=exec('FindInSet','#table','WAL','WAL_SYM',HELP.WAL().KOD,,"WAL.J",,,1);
                        (__rea_tab.CENA/__nd_krs*_walj)$exec('FindInSet','#table','M','MATKTM',__rea_tab.INDEKS,__rea_tab.INDEKS,"M.DOKL_C",,,ST.DOKL_C)
                     ?}
                  ?};
               __rea_tab.put()
            ?}
         ?};
         _buf.next()
      !}
   ?};
   {? _unlock=1 & ~_add_lst
   ||
::    utworzenie drzewka
      exec('rea_mk','zamdst_rea');
      {? _tr_nzl<>null() & BEER.UIDDOK<>''
      || exec('copyKoszt','transport_koszt',_tr_nzl,BEER.UIDDOK);
         exec('realDYSPdok','transport',_tr_nzl,BEER.UIDDOK)
      ?}
   |? ~_add_lst
   ||
      FUN.info('Realizacja zamówienia niemożliwa.'@)
   || _res:=_unlock=1
   ?}
||
   {? FUN.ask('Dokument obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@)
   || ZD_NAG.r_lock(1,,1)
   ?}
?};
ZD_NAG.r_unlock();
POMOC.ZD_NAG:=null;
exec('openzd_pop','open_tab');
_res


\upr_mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: czy USER ma uprawnienia do magazynu
::   WE: _a - SYMbol magazynu
::   WY: 1/0 - TAK/NIE
::  OLD: \upr_mg/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
USERS_UP.cntx_psh();
USERS_UP.index('MGS');
USERS_UP.prefix(OPERATOR.USER,'MG',_a,_a);
_wyn:=USERS_UP.first();
USERS_UP.cntx_pop();
_wyn


\rea_mk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: tworzy drzewko w podziale na magazyny - widok przyszlej realizacji
::       na podstawie __rea_tab utworzonej z potwierdzenia lub z zamowienia
::  OLD: \rea_mk/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;

:: parametry realizacji
VAR_DEL.delete('__nd_wal','__nd_swal','__nd_krs','__nd_dtk','__nd_kk','__nd_fzak','__nd_o'
   ,'__nd_kpw','__nd_wd','__nd_r_ak','__nd_r_po','__nd_sc','__nd_rtk','__nd_ntk','__nd_dla','__ilplus'
   ,'__filtrz','__winflt');

_tryb:={? POMOC.ZDP_NAG=null() || 0 || 1 ?};
_istr:=POMOC.TR_NZL<>null();

__filtrz:=tab_tmp(2,'SYM','STRING[20]','Symbol zamówienia'
           ,'ZDN','STRING[16]','ref SQL-owy'
           ,'DAT','DATE','Data przyjęcia'
           ,'TRM','DATE','Termin realizacji'
           ,'WYB','INTEGER','czy wbrano');
_filtrsel:=__winflt:=__filtrz.mk_sel('Zamówienia do realizacji dla %1 - %2'@[ZD_NAG.KH().KOD,ZD_NAG.KH().NAZ]
                      ,'P',,'#winiddfiltr',,,,,'U');
__filtrz.win_fld(_filtrsel,,'SYM',,,-18,,1,'Symbol'@);
__filtrz.win_fld(_filtrsel,,'DAT',,,10,,1,'Przyjęto'@);
__filtrz.win_fld(_filtrsel,,'TRM',,,10,,1,'Termin'@);
__filtrz.win_act(_filtrsel,0,'Formuła','Do &realizacji'@@,,'Przeniesienie zamówienia do realizacji'@,
                          ,"exec('add_zamr','zamdst_rea',1)",1,1,"exec('add_zamr','zamdst_rea',1)",,'R');
__filtrz.win_act(_filtrsel,0,'Rekord',,,,"exec('rekprzed','color','ZFIL#01')");
__filtrz.win_act(_filtrsel,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','ZFIL#01')",,,,,,'L');
__filtrz.win_act(_filtrsel,0,'Wyświetl',,,,"exec('dispzd_nag','zamdst_rea')");
__filtrz.win_btn(_filtrsel,'text=%1, panel=right, align=begin'['Do &realizacji'@],'menu:R',,,,,,'noempty');
__filtrz.win_sel(_filtrsel);

__nd_sc:=obj_new(7);
__ilplus:=(';ZR'*exec('get','#params',600803,2))>1;
_wgTR_NZL:=0;

{? ~__rea_tab.first()
||
   {? (';CT'*ZD_NAG.POTW)>1
   || FUN.info('Pozycje zamówienia zostały potwierdzone.\n'
               'Wystawione potwierdzenia zamówień dostaw nie zostały zaakceptowane lub przeniesiono je do archiwum.\n'
               'Aktualnie brak możliwości realizacji zamówienia dostaw %1.'@[ZD_NAG.SYM])
   || FUN.info('Brak pozycji do realizacji zamówienia dostaw %1.'@[ZD_NAG.SYM])
   ?};
   _ok:=0
|| _wgTR_NZL:=__rea_tab.RODZ='D'
?};

{? _ok=1
||
   {? ~_istr
   || exec('sprzdnkh','zamdst_rea',ZD_NAG.KH,ZD_NAG.T
       ,{? ZD_NAG.MG<>null() & ZD_NAG.MG().PAL='T' || ZD_NAG.MG || null() ?})
   || __filtrz.clear;
      __filtrz.blank();
      __filtrz.SYM:=ZD_NAG.SYM;
      __filtrz.DAT:=ZD_NAG.DATA;
      __filtrz.TRM:=ZD_NAG.DTPREAL;
      __filtrz.ZDN:=$ZD_NAG.ref();
      {? POMOC.ZD_NAG=ZD_NAG.ref() || __filtrz.WYB:=1 ?};
      __filtrz.add(1)
   ?};

   _p_lock:=POMOC.LOCK;
   _b_mw:=BEER.MW;
   _b_ww:=BEER.WW;
   _b_lw:=BEER.LW;

   POMOC.LOCK:='';
   BEER.MW:='M';
   exec('ustaw_ww','eurusd','M');
   exec('ust_lw','eurusd',0);

   DPOZ.SCKRSZM:=1;
   __cel:=exec('czycelny','zamdst_rea',ZD_NAG.ref());
   ND.clear();
   ND.blank(1);
   ND.D:=date;
   {? ND.D~1<>ST.AR | ND.D~2<>ST.AM || ND.D:=date(ST.AR,ST.AM,0) ?};
   ND.WAL:=exec('bl_wal','ustawienia'); ND.SWAL:=2;
   ND.NWAL:=exec('bl_nwal','ustawienia');
   {? ZD_NAG.MG<>null() || ND.MAG:=ZD_NAG.MG ?};
   {? __cel='S' || ND.SCWAL:=INFO.NAROD; ND.SCSWAL:=2 ?};
:: w celu pominiecia kontroli wypelnienia pol do intrastat
   ND.IST_TYP:={? exec('prog','intrastat',ND.D,'P')='N' || '' || 'P' ?};

   _win_red_nd:='ZD_REA';
   _win_red:=ND.mk_edit('Parametry realizacji'@,,'asjdfiwefadfg'+(-__cel));
   ND.win_etab(_win_red,'Dane podstawowe'@);
   ND.win_ewin(_win_red,,_win_red_nd);
   ND.win_etab(_win_red,'Dane do Intrastat'@);
   ND.win_ewin(_win_red,,'INTRA');
   {? __cel='S'
   || ND.win_etab(_win_red,'Dane składu celnego'@);
      ND.win_ewin(_win_red,,'ZD_SKLAD')
   ?};
   exec('ok_esc','#window',ND,_win_red);

   exec('set_efld_opt','magdok_nag',_win_red_nd);
   ND.win_edit(_win_red);
   {? ND.edit("
         _wyn:='';
         _it:=ND.IST_TYP; ND.IST_TYP:='';
         _wal:=exec('spr_ww','eurusd',0) & ND.WAL<>INFO.NAROD;
         {? _wal & ND.KRS=0
         || FUN.info('Wypełnij kurs na zakładce: Dane podstawowe.'@); _wyn:='KRS'
         |? _wal & ND.DTK=date(0,0,0)
         || FUN.info('Wypełnij datę kursu na zakładce: Dane podstawowe.'@); _wyn:='DTK'
         |? __cel='S' & ND.SCWAL=INFO.NAROD
         || FUN.info('Zmień walutę na inną niż narodowa na zakładce: Dane składu celnego.'@); _wyn:='SCWAL'
         |? __cel='S' & ND.SCKRS=0
         || FUN.info('Wypełnij kurs na zakładce: Dane składu celnego.'@); _wyn:='SCKRS'
         |? __cel='S' & ND.SCDTK=date(0,0,0)
         || FUN.info('Wypełnij datę kursu na zakładce: Dane składu celnego.'@); _wyn:='SCDTK'
         ?};
         ND.IST_TYP:=_it;
         _wyn
      ")
   ||
      HELP.WAL:=ND.WAL;
      __nd_wal:=ND.WAL;
      __nd_swal:=ND.SWAL;
      __nd_krs:=ND.KRS;
      __nd_dtk:=ND.DTK;
      __nd_rtk:=ND.RTK;
      __nd_ntk:=ND.NTK;
      __nd_btk:=ND.BTK;
      __nd_kk:=ND.KK;
      __nd_fzak:=ND.FZAK;
      __nd_o:=ND.O;
      __nd_kpw:=ND.KPW;
      __nd_wd:=ND.WD;
      __nd_r_ak:=ND.RTRANSAK;
      __nd_r_po:=ND.RTRANSPO;
      __nd_sc[1]:=ND.SCWAL;
      __nd_sc[2]:=ND.SCKRS;
      __nd_sc[3]:=ND.SCDTK;
      __nd_sc[4]:=ND.SCPOZ;
      __nd_sc[5]:=ND.SCPOW;
      __nd_sc[6]:=ND.SCSAD;
      __nd_sc[7]:=ND.SCNRR;
      __nd_dla:=ND.DLAKH
   ||
      _ok:=0
   ?};
   DPOZ.SCKRSZM:=0;

   POMOC.LOCK:=_p_lock;
   BEER.MW:=_b_mw;
   BEER.WW:=_b_ww;
   BEER.LW:=_b_lw
?};

{? _ok=1
||
:: kontrola zamkniecia magazynow
   {!
   |?
      MG.cntx_psh();
      MG.clear();
      {? MG.seek(__rea_tab.MG_REF) & exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,MG.ref())=0
      || __rea_tab.ZAM_OKR:='T'
      ?};
      MG.cntx_pop();
      __rea_tab.next()
   !};
   __rea_tab.first();
:: grupowanie tabeli wg MG
   _qq:=$"
      select distinct
         :_a.MAGAZYN as Magazyn,
         :_a.TOWAR as TOWAR
      from
         :_a
      order by 1
   ";
   __mg_list:=sql(_qq,__rea_tab);
:: przypisanie tree_ref-a, ustalenie ceny w wybranej walucie
   {? __mg_list.first()
   ||
      __rea_tab.cntx_psh();
      _ndx:=__rea_tab.ndx_tmp(,,'X',,,'MAGAZYN',,);
      __rea_tab.index(_ndx);
      {!
      |?
         __rea_tab.cntx_psh();
         __rea_tab.prefix('x',__mg_list.MAGAZYN);
         {? __rea_tab.first()
         ||
            {!
            |?
               {? HELP.WAL<>exec('bl_nwal_mg','ustawienia')
               || __rea_tab.CENA:=
                     {? __rea_tab.CWAL
                     || __rea_tab.CWAL
                     |?  HELP.WAL<>null
                     || _dokl_c:=ZD_RP.ZD_POZ().M().DOKL_C;
                        {? __nd_krs>0
                        || _walj:=exec('FindInSet','#table','WAL','WAL_SYM',HELP.WAL().KOD,,"WAL.J",,,1);
                           (__rea_tab.CENA/__nd_krs*_walj)$exec('FindInSet','#table','M','MATKTM',__rea_tab.INDEKS,__rea_tab.INDEKS,"M.DOKL_C",,,ST.DOKL_C)
                        ?}
                     ?}
               ?};
               __rea_tab.put();
               __rea_tab.next()
            !}
         ?};
         __rea_tab.cntx_pop();
         __mg_list.next()
      !};
      __rea_tab.ndx_drop(_ndx);
      __rea_tab.cntx_pop()
   ?};
:: okienko
   _ico_opis:="
         {? __rea_tab.IL_REA>0
         ||
            _p3020:={? __ilplus || 'T' || exec('get','#params',3020,2,OPERATOR.USER) ?};
            {? ({? _p3020='T' || 'Z' || '' ?}+'ACO')*__rea_tab.STAN>0 & (__rea_tab.MAGAZYN<>'' | __rea_tab.TOWAR='U')
                  & __rea_tab.UPR_MG='T' & __rea_tab.ZAM_OKR='N'
                  & (__rea_tab.CENA>0 | (__rea_tab.CENA=0 & 'DFL'*(1+__rea_tab.MGTYP)))
            || 'xwin16.png:38'
            || 'xwin16.png:81'
            ?}
         ||
            'xwin16.png:110'
         ?}
   ";

   _nopop:=_wgTR_NZL;
   __rea_sel:=__rea_tab.mk_sel('Pozycje do realizacji'@,'P',,'__rea_tab__',1,,,,'U',,,,,'maximized','','on');
   __rea_tab.win_fld(__rea_sel,,'OPIS',,,22,,1,'Zamówienie do realizacji'@);
   __rea_tab.win_fld(__rea_sel,,'ZD_P_SYM',,,9,,1,'Potwierdzenie'@);
   __rea_tab.win_fld(__rea_sel,,'KONTRAKT',,,9,,1,'Kontrakt'@);
   __rea_tab.win_fld(__rea_sel,,'MAGAZYN',,,8,,1,'Magazyn'@);
   __rea_tab.win_fld(__rea_sel,,'INDEKS',,,10,,1,'Indeks'@);
   __rea_tab.win_fld(__rea_sel,,'NAZWA',,,10,,1,'Nazwa'@);
   __rea_tab.win_fld(__rea_sel,,'JM',,,8,,1,'jm'@);
   __rea_tab.win_fld(__rea_sel,,'IL_POZ',,,-13,3,1,'Pozostało do realizacji'@);
   __rea_tab.win_fld(__rea_sel,,'IL_REA',,,-12,3,_nopop,'Ilość do realizacji'@);
   __rea_tab.win_fld(__rea_sel,,'CENA',,,-11,ST.DOKL_C,_nopop,'Cena realizacji'@);
   __rea_tab.win_fld(__rea_sel,HELP,'WAL','KOD',,3,,_nopop,'Waluta'@);
   __rea_tab.win_fld(__rea_sel,,'INFO',,,-17,,1,'Informacja dodatkowa'@);
   __rea_tab.win_fld(__rea_sel,,'PAL',,,10,,,'Paleta'@);
   __rea_tab.win_fld(__rea_sel,,'TW',,,10,,,'Termin ważności'@);
   __rea_tab.win_fld(__rea_sel,,'CZY_TW',,'Wymagany termin ważności'@,-2,,1,'Wymagany termin'@);
   {? ~_nopop || __rea_tab.win_act(__rea_sel,,'Popraw',,,,,,1) ?};
   {? ~_wgTR_NZL
   || __rea_tab.win_act(__rea_sel,,'Formuła','&Wypełnij'@@,,,,"exec('rea_mark','zamdst_rea',1)",,1,"sel_nchk()",,'W');
      __rea_tab.win_act(__rea_sel,,'Formuła','&Zeruj'@@,,,,"exec('rea_mark','zamdst_rea',0)",,1,"sel_nchk()",,'Z')
   ?};
   __rea_tab.win_act(__rea_sel,,'Formuła','Prz&ypisz paletę'@@,,,,"exec('adzd_pal','zamdst_rea')",,1,
      "exec('adzd_pal','zamdst_rea')",,'Y');
   __rea_tab.win_act(__rea_sel,,'Formuła','&Akceptuj'@@,,,"exec('rea_wio','zamdst_rea')",,,,,,'A');
   {? ~_wgTR_NZL
   || __rea_tab.win_act(__rea_sel,,'Formuła','Zmień &magazyn'@@,,,"exec('rmg_pop','zamdst_rea')",,,,,,'M')
   ?};
   __rea_tab.win_act(__rea_sel,,'Formuła','Pokaż &dokument'@@,,,"exec('rea_zpoz','zamdst_rea')",,,,,,'D');
   __rea_tab.win_act(__rea_sel,,'Formuła','Pokaż d&ostawy'@@,,,"exec('rea_dost','zamdst_rea')",,,,,,'O');
   {? ~_wgTR_NZL
   || __rea_tab.win_act(__rea_sel,0,'Formuła','Usuń z &realizacji'@@,,'Usunięcie zamówienia z realizacji'@,
                             ,"exec('del_zamr','zamdst_rea',1)",0,1,"exec('del_zamr','zamdst_rea',1)",,'R')
   ?};
   __rea_tab.win_act(__rea_sel,,'Formuła','&Legenda'@@,,,"exec('legenda','color','DOS#01')",,,,,,'L');
   __rea_tab.win_act(__rea_sel,,'Kolejność');
   __rea_tab.win_act(__rea_sel,,'Szukaj');
   __rea_tab.win_act(__rea_sel,,'Rekord',,,,"exec('rea_rek','zamdst_rea')","exec('rea_aepp','zamdst_rea')");
   __rea_tab.win_act(__rea_sel,,'Wyświetl',,,,"exec('disp_poz','zamdst_rea',__rea_tab.ZD_POZ)");
   __rea_tab.win_fml(__rea_sel,,'OPIS',,'ICON_BEFORE',_ico_opis);
   __rea_tab.win_sel(__rea_sel);

   __rea_tab.fld_fml('IL_POZ','EDIT_FORMAT'
    ,"'in_prec='+{? (2+cur_kwin())='e_' || $__rea_tab.DOKL || $ST.DOKL ?}");
   __rea_tab.fld_fml('IL_POZ','DISPLAY_FORMAT'
    ,"'out_prec='+{? (2+cur_kwin())='e_' || $__rea_tab.DOKL || $ST.DOKL ?}");
   __rea_tab.fld_fml('IL_REA','EDIT_FORMAT'
    ,"'in_prec='+{? (2+cur_kwin())='e_' || $__rea_tab.DOKL || $ST.DOKL ?}");
   __rea_tab.fld_fml('IL_REA','DISPLAY_FORMAT'
    ,"'out_prec='+{? (2+cur_kwin())='e_' || $__rea_tab.DOKL || $ST.DOKL ?}");
   __rea_tab.fld_fml('CENA','EDIT_FORMAT'
    ,"'in_prec='+{? (2+cur_kwin())='e_' || $__rea_tab.DOKL_C || $ST.DOKL_C ?}");
   __rea_tab.fld_fml('CENA','DISPLAY_FORMAT'
    ,"'out_prec='+{? (2+cur_kwin())='e_' || $__rea_tab.DOKL_C || $ST.DOKL_C ?}");

   __rea_tab.fld_fml('PAL','BEFORE_EDIT',"exec('przd_pal','zamdst_rea')");
   __rea_tab.fld_fml('PAL','F3',"exec('f3zd_pal','zamdst_rea')");
   __rea_tab.fld_fml('PAL','AFTER_EDIT',"exec('pozd_pal','zamdst_rea')");
   __rea_tab.fld_fml('TW','BEFORE_EDIT',"exec('przd_tw','zamdst_rea')");
   {? exec('upr_cm','ceny')=0 | exec('upr_cz','ceny')=0
   ||
      _ff:="0";
      __rea_tab.fld_fml('CENA','BEFORE_DISPLAY',_ff);
      __rea_tab.fld_fml('CENA','BEFORE_EDIT',_ff)
   ||
      __rea_tab.fld_fml('CENA','BEFORE_EDIT',"~(__rea_tab.CZYIL='T')")
   ?};

   __rea_tab.fld_fml('CENA','DISPLAY_FORMAT',"{? __rea_tab.CZYIL='T' || 'empty=1' || 'empty=0' ?}");
   __rea_tab.fld_fml('TW','DISPLAY_FORMAT',"{? ~exec('przd_tw','zamdst_rea')|| 'empty=1' || 'empty=0' ?}");

   {? ~_tryb
   || _winsel:=__zkrwi1:=__rea_tab.grp_make('Realizacja'@,,'#realgrpzad');
      __rea_tab.grp_sel(_winsel,__rea_tab,__rea_sel,,"exec('odsw_inf','zamdst_rea')",,,20,,,,,'maximized_with_title');
      __rea_tab.grp_splt(_winsel,,'horizontal','rez');
      __rea_tab.grp_sel(_winsel,__filtrz,_filtrsel,,"exec('odsw_poz','zamdst_rea')",,,8,"",,,,'maximized_with_title');
      __rea_tab.grp_splt(_winsel,'rez','vertical','mag');
      __rea_tab.grp_sel(_winsel,ZD_POZ,'WER_REA',,,,,8,"",,,,'maximized_with_title');
      __rea_tab.win_sel(_winsel);
      __rea_tab.dnd_sel(__rea_sel,,'records.#winiddfiltr',"exec('add_zamr','zamdst_rea')");
      __filtrz.dnd_sel(_filtrsel,,'records.__rea_tab__',"exec('del_zamr','zamdst_rea')")
   |? _tryb=1
   || _winsel:=__zkrwi1:=__rea_tab.grp_make('Realizacja'@,,'#realgrppad');
      __rea_tab.grp_sel(_winsel,__rea_tab,__rea_sel,,"exec('odswppoz','zamdst_rea')",,,20,,,,,'maximized_with_title');
      __rea_tab.grp_splt(_winsel,,'horizontal','rez');
      __rea_tab.grp_sel(_winsel,ZDP_POZ,'WER_REA',,"",,,8,"",,,,'maximized_with_title');
      __rea_tab.win_sel(_winsel);
      __rea_tab.dnd_sel(__rea_sel,,'records.#winiddfiltr',"exec('add_zamr','zamdst_rea')");
      __filtrz.dnd_sel(_filtrsel,,'records.__rea_tab__',"exec('del_zamr','zamdst_rea')")
   ?};
   {? _tryb
   || _kh:=POMOC.ZDP_NAG().KH;
      ZDP_POZ.index('REA');
      ZDP_POZ.prefix();
      ZDP_POZ.f_clear();
      ZDP_POZ.f_set('ZDP_NAG(D_WYS),ZDP_NAG(SYM),ZD_P_POZ'
         ,'join @ZDP_NAG'
         ,'\"ZDP_NAG\".STAT_REJ=\'T\' and ZDP_POZ.END=0 and \"ZDP_NAG\".KH=:_a and \"ZDP_NAG\".STAN in (\'R\',\'C\')'
         ,_kh);
      {? ZDP_POZ.f_first()
      || {!
         |? exec('obl_ptw','zamdst_ptw',ZDP_POZ.ZD_POZ,1);
            {? (ZDP_POZ.ZD_POZ*'__')=7 & __zdp_sum.IL_PTW>__zdp_sum.IL_REA
            || ZDP_POZ.f_next()
            || ZDP_POZ.f_del()
            ?}
         !};
         ZDP_POZ.f_first()
      ?}
   ?};
   __rea_tab.select();
   {? _tryb || ZDP_POZ.f_clear() ?};
   POMOC.LOCK:=_p_lock
?};
''


\rea_mark
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: zaznaczanie rekordu __rea_tab - pozycja do realizacji
::   WE: _a - 1-wypelnij 0-zeruj
::  OLD: \rea_mark/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_mark:="
   {? _a=0
   || __rea_tab.IL_REA:=0; __rea_tab.X:='x'
   || __rea_tab.IL_REA:=__rea_tab.IL_POZ; __rea_tab.X:='*'
   ?};
   __rea_tab.put()
";
_mark(_a);
''


\adzd_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przypisuje palete do zaznaczonych pozycji
::  OLD: \adzd_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=__rea_tab.sel_aget();
__rea_tab.sel_adel();
__rea_tab.cntx_psh();
_wgtab:=_tab.size;
:: sprawdzenie czy na zaznaczonych pozycjach magazyny sa typu palet
_sa:=0;
{? _wgtab
|| {? _tab.first()
   || {!
      |? {? (__rea_tab.clear(); __rea_tab.seek(_tab.REF,))
          & exec('FindAndGet','#table','MG',__rea_tab.MG_REF,,"PAL",'')='T'
         || _sa:=1
         ?};
         ~_sa & _tab.next()
      !}
   ?}
|| _sa:=exec('FindAndGet','#table','MG',__rea_tab.MG_REF,,"PAL",'')='T'
?};

_mg_pal:=sql('select distinct :_a.MG_REF, :_a.PAL from :_a where :_a.PAL<>\'\' order by 2',__rea_tab);

{? ~_sa
|| FUN.info({? _wgtab
            || 'Żadna z zaznaczonych pozycji nie dotyczy magazynu z obsługą palet.'@
            || 'Pozycja nie dotyczy magazynu z obsługą palet.'@
            ?});
   0
|? FUN.ask({? _wgtab
           || 'Czy przypisać paletę do zaznaczonych pozycji'@
           || 'Czy przypisać paletę do pozycji'@
           ?}+
    {? _wgtab & _tab.size()>1 || '\nUwaga. Pozycje dotyczące magazynów bez obsługi palet zostaną pominięte.'@ || '' ?})
|| _errmg:=0;
   PAL.f_clear();
   PAL.index('PAL');
   PAL.prefix();
   PAL.f_set('KODK',,'\"PAL\".STAN=\'N\' and \"PAL\".AKT=\'T\' and \"PAL\".RSQL=\'\' and \"PAL\".ODD=\':_a\'',ST.ODDZ);
   EANX.WHERE:='X';
   PAL.win_sel('SEL');
   PAL.win_dict('SEL');
   PAL.actions('SEL','IXWACTYMGZ');
   PAL.find_key(__rea_tab.PAL);
   {? PAL.select(,1)
   || {? _wgtab
      || _tab.clear;
         {? _tab.first()
         || {!
            |? {? (__rea_tab.clear(); __rea_tab.seek(_tab.REF,))
                & exec('FindAndGet','#table','MG',__rea_tab.MG_REF,,"PAL",'')='T'
               || _mg_pal.clear();
                  _add:={? _mg_pal.find_key(PAL.KODK)
                        || _mg_pal.MG_REF=__rea_tab.MG_REF
                        || 1
                        ?};
                  {? _add
                  || __rea_tab.PAL:=PAL.KODK;
                     __rea_tab.put(1)
                  || _errmg+=1
                  ?}
               ?};
               _tab.next()
            !}
         ?}
      |? exec('FindAndGet','#table','MG',__rea_tab.MG_REF,,"PAL",'')='T'
      || _mg_pal.clear();
         _add:={? _mg_pal.find_key(PAL.KODK)
               || _mg_pal.MG_REF=__rea_tab.MG_REF
               || 1
               ?};
         {? _add
         || __rea_tab.PAL:=PAL.KODK;
            __rea_tab.put(1)
         || _errmg+=1
         ?}
      ?}
   ?};
   PAL.f_clear();
   {? _errmg
   || FUN.info('Wybranej palety nie udało się przypisać ponieważ została już przypisana do innego magazynu.'@)
   ?}
?};
__rea_tab.cntx_pop();
~~


\rea_wio
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: realizacja zamowienia dostaw
::  OLD: \rea_wio/zd.fml
::----------------------------------------------------------------------------------------------------------------------
:: kontrola czy mozna realizowac
_stan:=_mag:=_cena:=_upr:=_okr:=_mx:=_pal:=_tw:=1;
_msg:='';
__rea_tab.cntx_psh();
_p3020:={? __ilplus || 'T' || exec('get','#params',3020,2,OPERATOR.USER) ?};
{? __rea_tab.first()
||
   {!
   |?
      exec('rea_rek','zamdst_rea');
      {? __rea_tab.IL_REA>0
      ||
         {? ({? _p3020='T' || 'Z' || '' ?}+'ACO')*__rea_tab.STAN=0 || _stan:=0 ?};
         {? (__rea_tab.MAGAZYN='' & __rea_tab.TOWAR='T') || _mag:=0 ?};
         {? ~(__rea_tab.CENA>0 | (__rea_tab.CENA=0 & 'DFL'*(1+__rea_tab.MGTYP))) || _cena:=0 ?};
         {? __rea_tab.MAGAZYN<>''
         ||
            {? __rea_tab.UPR_MG<>'T'
            || _upr:=0
            || {? __rea_tab.ZAM_OKR='T' || _okr:=0 ?}
            ?}
         ?};
         _mx:=exec('mx_brak','material',exec('FindAndGet','#table','MG',__rea_tab.MG_REF,,,null()),
                exec('FindAndGet','#table','M',__rea_tab.M_REF,,,null()));
         {? exec('FindAndGet','#table','MG',__rea_tab.MG_REF,,"PAL",'')='T' & __rea_tab.PAL='' || _pal:=0 ?};
         {? _tw & exec('FindAndGet','#table','MG',__rea_tab.MG_REF,,"PAL",'')='T'
           & exec('FindAndGet','#table','M',__rea_tab.M_REF,,"CZY_TW",'')='T'
           & __rea_tab.TW=date(0,0,0)
         || _tw:=0
         ?};
         {? _tw & exec('FindAndGet','#table','MG',__rea_tab.MG_REF,,"SL",'')='T'
           & exec('FindAndGet','#table','M',__rea_tab.M_REF,,"CZY_TW",'')='T'
           & __rea_tab.TW=date(0,0,0)
         || _tw:=0
         ?};
         {? _tw & exec('FindAndGet','#table','MG',__rea_tab.MG_REF,,"SL",'')='N'
           & exec('FindAndGet','#table','M',__rea_tab.M_REF,,"CZY_TW",'')='T'
           & exec('FindAndGet','#table','M',__rea_tab.M_REF,,"SETW",'')<>'W'
           & __rea_tab.TW=date(0,0,0)
         || _tw:=0
         ?}
      ?};
      __rea_tab.next()
   !}
?};
__rea_tab.cntx_pop();
{? _stan=0 || _msg+='Zamówieniom z pozycjami do realizacji należy nadać stan [Do realizacji].\n'@ ?};
{? _mag=0 || _msg+='Pozycjom do realizacji należy przypisać magazyn do realizacji.\n'@ ?};
{? _cena=0 || _msg+='Pozycjom do realizacji należy przypisać cenę.\n'@+
               'Dotyczy pozycji związanych z magazynami typu CEN ŚREDNICH i CEN EWIDENCYJNYCH.\n'@ ?};
{? _upr=0 || _msg+='Brak uprawnień do wszystkich magazynów przypisanych pozycjom do realizacji.\n'@ ?};
{? _okr=0 || _msg+='Magazyny przypisane do realizacji muszą mieć otwarty okres obrachunkowy.\n'@ ?};
{? _pal=0 || _msg+='Dla magazynów z obsługą palet należy podać palety.\n'@ ?};
{? _tw=0 || _msg+='Wybrano indeksy materiałowe wymagające określenia terminu ważności.\n'@ ?};
{? _msg<>''
||
   FUN.info(_msg+'\nRealizacja niemożliwa.'@)
|? _mx=1 | FUN.ask('Istnieje materiał nieprzypisany do magazynu.\nCzy przypisać indeksy do magazynu?'@)
||
   sel_exit();

:: grupowanie tabeli wg MG
   VAR_DEL.delete('__rea_dok');
   _qd:=$"
      select distinct
         case when :_a.TOWAR='T' then :_a.MAGAZYN else '- USŁUGI -' end as Magazyn,
         max('        ') as Typ,
         CURRENT_DATE as Data,
         :_a.MG_REF as MG_REF,
         max(TYPYZAM.TYPYDOK) as TYP_REF,
         :_a.RODZ as RODZ,
         CURRENT_TIME as Godz
      from
         :_a
         left join TYPYZAM using (:_a.TYP_REF,TYPYZAM.reference)
      where
         :_a.IL_REA>0
      group by
         :_a.MAGAZYN, CURRENT_DATE, CURRENT_TIME, :_a.MG_REF, :_a.RODZ, :_a.TOWAR
      order by 1
   ";
   __rea_dok:=sql(_qd,__rea_tab);

   __rea_dok.fld_fml('TYP','PATTERN',"exec('upper1','#blank')");

:: sprawdza czy dla magazynu nie wystepuje kilka domyslnych typow dokumentow
   _qt:=$"
      select distinct
         :_a.TYP_REF as TYP_REF
      from
         :_a
      where
         :_a.IL_REA>0
         and :_a.MG_REF=':_b'
   ";

:: uzupelnia domyslny typ dokumentu do realizacji
   {? __rea_dok.first()
   ||
      {!
      |? _mag:=exec('FindAndGet','#table','MG',__rea_dok.MG_REF,,,null());
         {? __rea_dok.MAGAZYN<>'- USŁUGI -' & _mag<>null()
         || __rea_dok.GODZ:=exec('spr_dttm','magazyn_inw',_mag,__rea_dok.DATA,1)
         || __rea_dok.GODZ:=time(0,0,0)
         ?};
         __rea_dok.put(1);
         {? __rea_dok.MAGAZYN='- USŁUGI -'
         || __rea_dok.TYP:='n.d.';
            __rea_dok.put(1)
         || _typ_ref:=null;
            _typ:='';
            VAR_DEL.delete('__rea_typ');
            __rea_typ:=sql(_qt,__rea_tab,__rea_dok.MG_REF);
::       sprawdza czy dla magazynu nie wystepuje kilka domyslnych typow dokumentow - wg zamowien
            _loop:=__rea_typ.first();
            {!
            |? _loop
            |!
               TYPYZAM.prefix();
               {? TYPYZAM.seek(__rea_typ.TYP_REF)
               ||
                  {? _typ_ref=null | _typ_ref=TYPYZAM.TYPYDOK
                  ||
                  _typ_ref:=TYPYZAM.TYPYDOK;
                  _typ:=TYPYZAM.TYPYDOK().T
                  ||
                     _typ_ref:=null;
                     _typ:=''
               ?}
            ?};
               _loop:=_typ_ref & __rea_typ.next()
            !};

            _ok:=0;
            MG.cntx_psh();
            MG.clear();
            {? MG.seek(__rea_dok.MG_REF)
            ||
               _ref_mg:=MG.ref();
               T2MG.index('T');
               T2MG.prefix(MG.ref());
               {? T2MG.first()
               ||
                  T2MG.prefix(MG.ref(),_typ_ref);
                  _ok:=T2MG.first()
               ||
                  _ok:=1
               ?}
            ?};
            MG.cntx_pop();

::       sprawdza czy uzytkownik ma uprawnienia do dodmyslnego dokumentu
            _p1001:=exec('get','#params',1001,2,OPERATOR.USER);
            {? _ok=1 & _p1001<>'' & _p1001*(_typ+' ')=0 || _ok:=0 ?};

            {? _ok=1
            ||
               __rea_dok.TYP:=_typ;
               __rea_dok.TYP_REF:=$_typ_ref
            ||
               __rea_dok.TYP:='';
               __rea_dok.TYP_REF:=''
            ?};

            {? __rea_dok.DATA~1<>ST.AR | __rea_dok.DATA~2<>ST.AM
            || __rea_dok.DATA:={? __rea_dok.TYP=''
                                 | exec('spr_datn','magdok_wspolne',_ref_mg,date(ST.AR,ST.AM,0)
                                    ,exec('FindInSet','#table','TYPYDOK','TYP',__rea_dok.TYP,__rea_dok.TYP),0,,0)
                               || date(ST.AR,ST.AM,0)
                               || date(0,0,0)
                               ?}
            ?};

            __rea_dok.put()
         ?};
         __rea_dok.next()
      !}
   ?};

   _akc_fml:="
      _ok:=1;
      __rea_dok.cntx_psh();
      {? __rea_dok.first()
      ||
         {!
         |? {? __rea_dok.DATA=date(0,0,0) | form(__rea_dok.TYP)='' || _ok:=0 ?};
            {? _ok>0 || _ok:=exec('spr_inwe','zamdst_rea',__rea_dok.MG_REF,__rea_dok.DATA,__rea_dok.GODZ) ?};
            {? _ok>0 || _ok:=exec('spr_prze','zamdst_rea',__rea_dok.MG_REF,__rea_dok.DATA,__rea_dok.GODZ) ?};
            {? _ok>0 || _ok:=exec('sprpozzd','zamdst_rea',__rea_dok.MAGAZYN,__rea_dok.DATA,__rea_dok.GODZ); {? ~_ok || _ok:=-4 ?} ?};
            _ok=1 & __rea_dok.next()
         !}
      ?};
      __rea_dok.cntx_pop();
      {? _ok=0
      || FUN.info('Należy określić datę realizacji oraz typ dokumentu realizacji dla wszystkich magazynów.'@)
      |? _ok=-5
      || FUN.info('W magazynie do realizacji jest otwarty arkusz inwentaryzacyjny\n'
                  '(Inwentaryzacja pełna).\n'
                  'Niemożliwe utworzenie dokumentu w tym magazynie.'@)
      |? _ok=-1
      || FUN.info('W magazynie do realizacji jest otwarty arkusz inwentaryzacyjny\n'
                  '(zawierający indeksy materiałowe realizowane zamówieniem).\n'@+
                  'Należy zmienić datę lub godzinę dokumentu na większą.'@)
      |? _ok=-3
      || FUN.info('W magazynie do realizacji jest otwarty arkusz przeceny\n'
                  '(zawierający indeksy materiałowe realizowane zamówieniem).\n'
                  'Data dokumentu jest mniejsza lub równa dacie przeceny.\n'@+
                  'Należy zmienić datę dokumentu na większą.'@)
      |? _ok=-2
      || FUN.info('W magazynie do realizacji jest zamknięty arkusz przeceny\n'
                  '(zawierający indeksy materiałowe realizowane zamówieniem).\n'
                  'Data dokumentu jest mniejsza lub równa dacie przeceny.\n'@+
                  'Należy zmienić datę dokumentu na większą.'@)
      ?};
::    kontrola dla wybranego typu dokumetu
      {? _ok=1
      ||
         TYPYDOK.index('TYP');
         TYPYDOK.prefix(__rea_dok.TYP,__rea_dok.TYP);
         {? TYPYDOK.first() & TYPYDOK.WK='T' & __nd_kk=null
         ||
            {? __nd_kk=null || __nd_kk:=TYPYDOK.KK ?};
            {? TYPYDOK.WK='T' & __nd_kk=null
            ||
               FUN.info('Typ %1 wymaga podania konta.\n'
                        'Należy wypełnić konto w parametrach realizacji\n'
                        'lub zmienić typ magazynowego dokumentu realizacji.'@[__rea_dok.TYP]);
               _ok:=0
            ?}
         ?}
      ?};
      {? _ok=1 || sel_exit() ?}
   ";

   _rea_sel:=__rea_dok.mk_sel('Dokumenty realizacji'@,'P',,'__rea_dok__',,10);
   __rea_dok.win_fld(_rea_sel,,'MAGAZYN',,,10,,1,'Magazyn'@);
   __rea_dok.win_fld(_rea_sel,,'DATA',,,-11,,,'Data realizacji'@);
   __rea_dok.win_fld(_rea_sel,,'GODZ',,,-8,,,'Czas realizacji'@);
   __rea_dok.win_fld(_rea_sel,,'TYP',,,-12,,,'Typ dokumentu'@);
   __rea_dok.win_act(_rea_sel,,'Popraw',,,,,,1);
   __rea_dok.win_act(_rea_sel,,'Formuła','&Akceptuj'@@,,,_akc_fml,,,,,,'A');
   __rea_dok.win_act(_rea_sel,,'Kolejność');
   __rea_dok.win_act(_rea_sel,,'Szukaj');
   __rea_dok.win_sel(_rea_sel);
   __rea_dok.fld_fml('TYP','F3',"exec('ae_popop','zamdst_rea',,1)");
   __rea_dok.fld_fml('TYP','BEFORE_EDIT',"exec('be_popop','zamdst_rea',__rea_dok.TYP,1)");
   __rea_dok.fld_fml('TYP','AFTER_EDIT',"exec('ae_popop','zamdst_rea',__rea_dok.TYP,1)");
   __rea_dok.fld_fml('DATA','AFTER_EDIT',"exec('ae_popop','zamdst_rea',__rea_dok.TYP,1)");
   __rea_dok.fld_fml('GODZ','AFTER_EDIT',"exec('ae_popop','zamdst_rea',__rea_dok.TYP,1)");
   {? __rea_dok.first()
   ||
      {? __rea_dok.select()
      ||
         _grp_key:=tm_stamp();
         __rea_dok.first();
         {!
         |?
            exec('rea_dok','zamdst_rea',_grp_key);
            __rea_dok.next()
         !}
      ||
         FUN.info('Zrezygnowano z realizacji.'@)
      ?}
   ||
      FUN.info('Nie wybrano pozycji do realizacji.'@)
   ?}
?};
''


\rea_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: rekord przed dla __rea_tab
::  OLD: \rea_rek/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_stan:='X';
_info:='System nie odnalazł aktywnego zamówienia.';
ZD_NAG.cntx_psh();
ZD_POZ.cntx_psh();
ZD_POZ.clear();
{? 8+__rea_tab.ZD_POZ=ZD_POZ.name() & ZD_POZ.seek(__rea_tab.ZD_POZ,8+__rea_tab.ZD_POZ)
||
   _stan:=ZD_POZ.ZD_NAG().STAN;
   _wyn:=exec('zdnag_rek','zamdst_nag');
   _info:=POM.STAN
?};
ZD_POZ.cntx_pop();
ZD_NAG.cntx_pop();
__rea_tab.STAN:=_stan;
__rea_tab.INFO:='Zamówienie: '+_info;

{? __rea_tab.TOWAR='U'
||
   __rea_tab.UPR_MG:='T'
|? __rea_tab.MAGAZYN<>''
||
   {? __rea_tab.ZAM_OKR='T'
   || __rea_tab.INFO:='magazyn jest ZAMKNIĘTY'
   ?};
   {? exec('upr_mg','zamdst_rea',__rea_tab.MAGAZYN)
   ||
      __rea_tab.UPR_MG:='T'
   ||
      __rea_tab.UPR_MG:='N';
      __rea_tab.INFO:='BRAK uprawnień do magazynu'
   ?}
?};

__rea_tab.put();
_akc:={? __rea_tab.TOWAR='U' || 'MOY' || '' ?};
:: sprawdzenie czy jest paleta podpięta
{? __rea_tab.PAL<>''
|| __rea_wym.cntx_psh();
   __rea_wym.clear();
   __rea_wym.prefix($__rea_tab.ref());
   {? __rea_wym.first() & __rea_wym.find_tab('first','PAL',,'<>','') || _akc+='Y' ?};
   __rea_wym.cntx_pop()
?};
{? __rea_tab.RODZ='D'
|| __rea_tab.actions(__rea_sel,_akc+'','A',1)
|| __rea_tab.actions(__rea_sel,_akc+'',,1)
?};
_wyn


\spr_inwe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza istnienie inwentury dla pozycji realizacji
::   WE: _a - ref SQL magazynu
::       _b - data
::       [_c] - sprawdzany czas
::   WY: 1-jest ok -1-nie jest dobrze -5-otwarta pełna inwentura
::  OLD: \spr_inwe/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_tim:={? var_pres('_c')=type_of(time()) || _c || time(0,0,0) ?};

_refmg:=exec('FindAndGet','#table','MG',_a,,,null());
_wyn:={? exec('czyinw_a','magazyn_inw',_refmg) || -5 || 1 ?};
__rea_tab.cntx_psh();
__rea_tab.clear();
{? _wyn=1 & __rea_tab.first()
|| {!
   |? {? __rea_tab.IL_REA>0 & __rea_tab.MG_REF=_a
      ||
         _refm:=exec('FindAndGet','#table','M',__rea_tab.M_REF,,,null());
         {? ~exec('sprd_inp','magazyn_inw',_refm,_b,_refmg,0,_tim) || _wyn:=-1 ?}
      ?};
      _wyn=1 & __rea_tab.next()
   !}
?};
__rea_tab.cntx_pop();
_wyn


\spr_prze
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza istnienie przeceny dla pozycji realizacji
::   WE: _a - ref SQL magazynu
::       _b - data
::       [_c] - godzina
::   WY: 1-jest ok -2,-3 -nie jest dobrze
::  OLD: \spr_prze/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_time:={? var_pres('_c')=type_of(time()) || _c || time(0,0,0) ?};
MG.cntx_psh();
_refmg:=exec('FindAndGet','#table','MG',_a,,,null());
MG.clear();
_ewi:={? MG.seek(_refmg) || MG.TYP*'EWI' || 0 ?};
MG.cntx_pop();
_wyn:=1;
__rea_tab.cntx_psh();
__rea_tab.clear();
{? _ewi & __rea_tab.first()
|| {!
   |? {? __rea_tab.IL_REA>0 & __rea_tab.MG_REF=_a
      || _refm:=exec('FindAndGet','#table','M',__rea_tab.M_REF,,,null());
         _prz:=exec('sprprzec','magazyn_przec',_refmg,_b,_refm,_time);
         {? _prz>=3 || _wyn:=_prz-6 ?}
      ?};
      _wyn=1 & __rea_tab.next()
   !}
?};
__rea_tab.cntx_pop();
_wyn


\sprpozzd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza pozycje realizacji pod katem dat na inwenturze
::   WE: _a - magazyn do sprawdzenia
::       _b - data do sprawdzenia
::       [_c] - godzina do sprawdzenia
::   WY: 1-jest OK 0-nie jest dobrze
::  OLD: \sprpozzd/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
_tim:={? var_pres('_c')=type_of(time()) || _c || time(0,0,0) ?};

_wyn:=1;
_txt:='';
_smg:='';
_mag:=exec('FindInSet','#table','MG','MAGAZYNY',_a,_a);

__rea_dok.cntx_psh();
__rea_tab.cntx_psh();
__rea_tab.clear();
{? __rea_tab.first()
||
   {!
   |? {? __rea_tab.MAGAZYN=_a & __rea_tab.IL_REA>0
      || _txt:='Pozycja '@+form(__rea_tab.POZ,,0,'99')+'.\nIndeks: '@+__rea_tab.INDEKS+'.\n';
         _ktm:=exec('FindAndGet','#table','M',__rea_tab.M_REF,,,null());
         _wyn:=exec('sprd_inp','magazyn_inw',_ktm,_b,_mag,0,_tim);
         {? ~_wyn || _smg:=_a ?}
      ?};
      _wyn & __rea_tab.next()
   !}
?};
__rea_dok.cntx_pop();
__rea_tab.cntx_pop();
{? ~_wyn & _txt<>'' & _smg<>''
|| FUN.info('Wprowadzono arkusz inwentaryzacji ciągłej dla magazynu %1,\n'
            'na którym wprowadzono indeks materiałowy.\n%2'
            'Należy zmienić datę lub godzinę.'@[_smg,_txt])
?};
_wyn


\ae_popop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: po popraw dla tabeli __rea_dok
::   WE: [_a] - typ dokumentu (TYPYDOK.T)
::       [_b] - 1-bez blokady pola, 0(domyślnie)-blokuj
::   WY: 1/0
::  OLD: \ae_popop/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='' ?};
_noblk:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_wyn:=1;
_usl:=__rea_dok.MAGAZYN='- USŁUGI -';
{? __rea_dok.DATA<date(ST.AR,ST.AM,1) | __rea_dok.DATA>date(ST.AR,ST.AM,0)
|| FUN.info('Data musi pochodzić z bieżącego okresu obrachunkowego.'@);
   _wyn:=0
|? (ZD_NAG.get(); __rea_dok.DATA<ZD_NAG.DATA)
|| FUN.info('Data musi być większa lub równa od daty wprowadzenia zamówienia.'@);
   __rea_dok.DATA:=ZD_NAG.DATA;
   _wyn:=0
|? ~_usl & ~exec('sprpozzd','zamdst_rea',__rea_dok.MAGAZYN,__rea_dok.DATA,__rea_dok.GODZ)
|| _wyn:=0
?};

{? ~_usl & _wyn
|| _ref_mg:=exec('FindAndGet','#table','MG',__rea_dok.MG_REF,,,null());
   {? __rea_dok.TYP<>'' & __rea_dok.DATA<>date(0,0,0)
    & ~exec('spr_datn','magdok_wspolne',_ref_mg,__rea_dok.DATA
        ,exec('FindInSet','#table','TYPYDOK','TYP',__rea_dok.TYP,__rea_dok.TYP),0,,0,,,__rea_dok.GODZ)
   || _wyn:=0
   ?}
?};

{? ~_usl & _wyn=1
||
   _skl:='N';
   _tab:=obj_new(1);
   MG.cntx_psh();
   MG.clear();
   {? MG.seek(__rea_dok.MG_REF)
   ||
      {? exec('FindInSet','#table','T2MG','T',MG.ref())<>null || _tab[1]:=MG.ref() || _tab[1]:=null ?};
      _skl:=MG.SKL
   ?};
   MG.cntx_pop();

:: podpowiadzanie typu
   {? _a<>'' & exec('FindInSet','#table','TYPYDOK','TYP',_a,_a)=null
   || TYPYDOK.cntx_psh();
      TYPYDOK.index('TYP');
      TYPYDOK.prefix(_a);
      {? TYPYDOK.first()
      || {!
         |? {? TYPYDOK.Z='T' & TYPYDOK.P='T' & TYPYDOK.DN='N' & {? _skl='T' || TYPYDOK.UE='N' || 1 ?}
             & TYPYDOK.KOOP='N' & TYPYDOK.DK='N'
            || _a:=__rea_dok.TYP:=TYPYDOK.T;
               __rea_dok.TYP_REF:=$TYPYDOK.ref();
               0
            || TYPYDOK.next()
            ?}
         !}
      ?};
      TYPYDOK.cntx_pop()
   ?};

   _get_typ:=
      $(
      {? _a='' || "{? TYPYDOK.f_size()>1 || sel_exit() ?};" || "" ?}+
      "
      __rea_dok.TYP:=TYPYDOK.T;
      __rea_dok.TYP_REF:=$TYPYDOK.ref();
      __rea_dok.put()
      ");
   _wyn:=
      null
      <>
      exec('typ_dok','lmg'
         ,'"TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DN=\'N\' and "TYPYDOK".KOOP=\'N\' '
          'and "TYPYDOK".DK=\'N\''+
         {? _skl='T'
         || 'and "TYPYDOK".UE=\'N\' '
         || ''
         ?}
         ,'Wybierz typ dokumentu w magazynie : '+__rea_dok.MAGAZYN
         ,_get_typ
         ,
         ,_tab
         ,
         ,
         ,
         ,_a);
   {? _wyn
   ||
      _wyn:=exec('spr_datn','magdok_wspolne',_tab[1],__rea_dok.DATA
             ,exec('FindInSet','#table','TYPYDOK','TYP',__rea_dok.TYP,__rea_dok.TYP),0,,0,,,__rea_dok.GODZ);
      {? ~_wyn || __rea_dok.DATA:=date(0,0,0); __rea_dok.put(1) ?}
   ?}
?};
{? _noblk & ~_wyn || _wyn:=1 ?};
_wyn


\rea_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: generacja pojedynczego dokumentu magazynowego i powiazanych dokumentow realizacji
::       na podstawie tabel __rea_dok, __rea_tab oraz parametrow __nd_*
::   WE: _a - zszywka (identyfikator jednoczesnych realizacji)
::   WY: ND.ref() - gdy dokument poprawnie wygenerowany
::  OLD: \rea_dok/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_grp_key:=_a+'1';

{? __rea_dok.MAGAZYN='- USŁUGI -' || return(exec('reaUdok','zamdst_rea',_a)) ?};

MG.cntx_psh();
_wyn:=null;
_ok:=1;

BEER.KRS:=0;
BEER.MW:='M';
HELP.WHERE:='Z';

MG.cntx_psh();
MG.clear();
{? MG.seek(__rea_dok.MG_REF)
|| ST.MAG:=MG.ref()
|| _ok:=0
?};
MG.cntx_pop();

TYPYDOK.cntx_psh();
TYPYDOK.clear();
{? TYPYDOK.seek(__rea_dok.TYP_REF)
|| ST.TYPYDOK:=TYPYDOK.ref()
|| _ok:=0
?};
TYPYDOK.cntx_pop();

{? _ok=1
||
   POM.TAB:='ND';
   POM.TYPDOK:=ST.TYPYDOK().KOD;
   POM.NRT:=ST.TYPYDOK().NRT;

   exec('ust_lw','eurusd',0);
   ST.TYPYDOK().T;

   ST.TYPYDOK;
   ND.cntx_psh();
   ND.clear();
   ND.blank();

   ND.KH:={? POMOC.ZD_NAG<>null || POMOC.ZD_NAG().KH |? POMOC.ZDP_NAG<>null || POMOC.ZDP_NAG().KH || null ?};
   ND.NIP_UE:={? POMOC.ZD_NAG<>null || POMOC.ZD_NAG().NIP_UE |? POMOC.ZDP_NAG<>null || POMOC.ZDP_NAG().NIP_UE || '' ?};
   ND.SPP:='';

   {? ND.KH<>null || POMOC.LOCK:=ND.KH().SKR ?};

   ND.D:=__rea_dok.DATA;
   ND.T:=__rea_dok.GODZ;

   ND.KK:=__nd_kk;
   ND.FZAK:=__nd_fzak;
   ND.O:=__nd_o;
   ND.DLAKH:={? ND.MAG().MWS='T' || __nd_dla || '' ?};

   {? ND.MAG().SKL='T'
   || ND.WAL:=INFO.NAROD;
      ND.SWAL:=2;
      ND.KRS:=0;
      ND.DTK:=date(0,0,0);
      ND.SCWAL:=__nd_sc[1];
      ND.SCKRS:=__nd_sc[2];
      ND.SCDTK:=__nd_sc[3];
      ND.SCPOZ:=__nd_sc[4];
      ND.SCPOW:=__nd_sc[5];
      ND.SCSAD:=__nd_sc[6];
      ND.SCNRR:=__nd_sc[7]
   |? INFO.WW='A' | ST.ODDZ_REF().TW*'M' | ST.ODDZ_REF().TW='' & INFO.TW*'M'
   || ND.WAL:=__nd_wal;
      ND.SWAL:=__nd_swal;
      ND.KRS:=__nd_krs;
      ND.NKRS:=__nd_krs;
      ND.DTK:=__nd_dtk;
      ND.NDTK:=__nd_dtk;
      ND.RTK:=ND.NRTK:=__nd_rtk;
      ND.NTK:=ND.NNTK:=__nd_ntk;
      ND.BTK:=ND.NBTK:=__nd_btk
   ?};
:: intrastat
   {? ND.TYP().UE='T'
   ||
      ND.KPW:=__nd_kpw;
      ND.WD:=__nd_wd;
      ND.RTRANSAK:=__nd_r_ak;
      ND.RTRANSPO:=__nd_r_po
   ?};
   exec('ist_wart_nd','magdok_nag');

   _nr:=exec('numer_new','numery',{? do_state=0 || 'N' || 'PACZKA' ?},1);
   {? _nr>=0
   ||
      _do_state:=do_state();
      {? _do_state=0 || do() ?};
      ND.GRP_KEY:=_grp_key;
      {? Plugin.exists('ZAMREA_DOKMAG_001') || Plugin.run('ZAMREA_DOKMAG_001','ND') ?};
      {? ND.add() & ND.r_lock(1)
      ||
         ND.NR:=_nr;
         exec('znak','numery','ND');
         ND.put();
         _n_ref:=ND.ref();
         _wyn:=ND.ref();
::       generacja ZD_RN i ZD_RP - naglowki i pozycje realizacji - dla aktualnego magazynu

         _ref_zdrn:={? ZD_RN.size() || ZD_RN.ref() || null ?};
         ZD_NAG.cntx_psh();
         ZD_POZ.cntx_psh();
         ZD_RN.cntx_psh();
         ZD_RP.cntx_psh();

         _qq:=$"
            select distinct
               :_a.ZD_NAG as ZD_NAG
            from
               :_a
            where
               :_a.IL_REA>0
               and :_a.MG_REF=:_b
            order by 1
         ";
         _zd_nag:=sql(_qq,__rea_tab,ST.MAG);
         {? _zd_nag.first()
         ||
            {!
            |?
               ZD_NAG.prefix();
               {? 8+_zd_nag.ZD_NAG=ZD_NAG.name() & ZD_NAG.seek(_zd_nag.ZD_NAG)
               ||
                  ZD_RN.clear();
                  ZD_RN.blank();
                  ZD_RN.ZD_NAG:=ZD_NAG.ref();
                  ZD_RN.SPZ:=ND.SYM;
                  ZD_RN.MG:=ST.MAG;
                  ZD_RN.ND:=$ND.ref();
                  ZD_RN.DND:=ND.D;
                  {? POMOC.ZDP_NAG<>null || ZD_RN.ZDP_NAG:=$POMOC.ZDP_NAG ?};
                  ZD_RN.GRP_KEY:=_grp_key;
                  _ok:=0;
                  {? ZD_RN.add()
                  ||
                     POM.TYPDOK:='ZDR'; POM.TAB:='ZD_RN';
                     exec('numer_new','numery','PACZKA');
                     exec('znak','numery','ZD_RN');
                     _ok:={? ZD_RN.NR=0 || undo; 0 || ZD_RN.put(1) ?}
                  ?};
                  {? var_pres('_projekt_ref')=type_of(null()) & _projekt_ref<>ZD_NAG.PROJEKTY
                  || _projekt_ref:=null()
                  || _projekt_ref:=ZD_NAG.PROJEKTY
                  ?};
                  {? _ok
                  ||
                     _ref_zdrn:=ZD_RN.ref();
::                   utworzenie pozycji ZD_RP
                     _ndx:=__rea_tab.ndx_tmp(,,'MAGAZYN',,,'ZD_NAG',,,'ZD_NAG',,,'POZ',,);
                     __rea_tab.index(_ndx);
                     __rea_tab.prefix(__rea_dok.MAGAZYN,_zd_nag.ZD_NAG,_zd_nag.ZD_NAG);
                     {? __rea_tab.first()
                     || _reagrp:=sql('select distinct :_a.REA, :_a.DKC, sum(:_a.ILE) ILE  '
                                     'from :_a group by :_a.REA, :_a.DKC order by 1,2',__rea_wym);
                        {!
                        |?
                           {? __rea_tab.IL_REA>0
                           ||
                              ZD_POZ.clear();
                              {? ZD_POZ.seek(__rea_tab.ZD_POZ)
                              ||
                                 _reagrp.clear();
                                 _reagrp.prefix($__rea_tab.ref());
                                 {? _reagrp.first()
                                 || {!
                                    |? __rea_wym.clear();
                                       __rea_wym.prefix($__rea_tab.ref(),_reagrp.DKC);
                                       {? __rea_wym.first()
                                       || _dk_ref:=null();
                                          ZD_RP.clear();
                                          ZD_RP.blank();
                                          ZD_RP.ZD_RN:=ZD_RN.ref();
                                          ZD_RP.ZD_POZ:=ZD_POZ.ref();
                                          ZD_RP.IL_ZRE:=_reagrp.ILE;
                                          ZD_RP.MG:=ST.MAG;
                                          ZD_RP.M:=ZD_POZ.M;
                                          ZD_RP.ZDP_POZ:=__rea_tab.ZDPP_REF;
                                          {? ZD_RP.add()
                                          || {!
                                             |? _dk_ref:=exec('gen_pozy','zamdst_rea',1,_dk_ref,ZD_POZ.PROJEKTY);
                                                __rea_wym.next()
                                             !}
                                          ?}
                                       ?};
                                       _reagrp.next()
                                    !}
                                 || ZD_RP.clear();
                                    ZD_RP.blank();
                                    ZD_RP.ZD_RN:=ZD_RN.ref();
                                    ZD_RP.ZD_POZ:=ZD_POZ.ref();
                                    ZD_RP.IL_ZRE:=__rea_tab.IL_REA;
                                    ZD_RP.MG:=ST.MAG;
                                    ZD_RP.M:=ZD_POZ.M;
                                    ZD_RP.ZDP_POZ:=__rea_tab.ZDPP_REF;
                                    {? ZD_RP.add()
                                    || exec('gen_pozy','zamdst_rea',,,ZD_POZ.PROJEKTY)
                                    ?}
                                 ?}
                              ?}
                           ?};
                           __rea_tab.next()
                        !};
                        obj_del(_reagrp)
                     ?};
                     __rea_tab.ndx_drop(_ndx)
                  ?}
               ?};
               exec('aktu_zam','zamdst_wspolne',ZD_NAG.ref(),__ilplus);
               _zd_nag.next()
            !}
         ?};

         ZD_RP.cntx_pop();
         ZD_RN.cntx_pop();
         ZD_POZ.cntx_pop();
         ZD_NAG.cntx_pop();
::projekty
         PROJEKTY.cntx_psh();TYPYDOK.cntx_psh();PROJTYPY.cntx_psh();
         PROJEKTY.prefix();TYPYDOK.prefix();PROJTYPY.prefix();
         {? var_pres('_projekt_ref')=type_of(null()) & _projekt_ref<>null() & PROJEKTY.seek(_projekt_ref)
         & (ND.TYP().PROJZAKR='Wszystkie' | (4+PROJEKTY.T().R)=(4+ND.TYP().PROJZAKR))
         || ND.PROJEKTY:=_projekt_ref; ND.put()
         ?};
         PROJEKTY.cntx_pop();TYPYDOK.cntx_pop();PROJTYPY.cntx_pop();

::       ustawia na ostatnio wygenerowanej realizacji
         {? _ref_zdrn<>null || ZD_RN.seek(_ref_zdrn) ?};

         exec('dk_sum','magdok_wspolne',_n_ref);
::       tworzy informacje dodatkowe
         exec('inf_dod','fakso',0,'nagdo');
         ND.r_unlock();

         {? _wyn=null
         || {? exec('deladok','dokum','ND')<>1 || undo() ?};
            {? do_state()<2 & ~Plugin.run('BEFORE_DELTAB_001',ND.ref()) & do_state() || undo() ?};
            numer:=ND.NR;
            oldnumer:=1;
            exec('nr_old','numery');
            ND.del()
         || BEER.UIDDOK:=exec('FindAndGet','#table',ND,_wyn,,"uidref()",'')
         ?}
      ?};
      {? _wyn=null || undo ?};
      {? _do_state=0 || end ?}
   ?};
   ND.cntx_pop()
?};
MG.cntx_pop();
POMOC.LOCK:='';
_wyn


\gen_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ 2009
:: OPIS: generowanie pozycji dokumentu magazynowego po dodaniu pozycji realizacji
::       rekord tabeli realizacji __rea_tab w buforze, powiazane ND, ZD_RP w buforze
::   WE: [_a] - 1-wg dodatkowej tabeli 0(domyślnie) nie
::       [_b] - dla _a=1: może być DK.ref ... domyślnie null()
::       [_c] - projekt domyślnie null
::   WY: 1/0 lub dla _a=1 DK.ref()
::  OLD: \gen_pozy/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_wgwym:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_projekt:={? var_press('_c')<>7 || null || _c ?};

_skl:=ND.MAG().SKL='T';
_dokl_c:=ZD_RP.ZD_POZ().M().DOKL_C;
{? HELP.WAL=exec('bl_nwal_mg','ustawienia')
|| _cwal:={? _skl=1 & ND.SCKRS>0 || (__rea_tab.CENA/ND.SCKRS)$_dokl_c || 0 ?};
   _cena:={? _skl=1 || (_cwal*ND.SCKRS)$_dokl_c || __rea_tab.CENA ?}
|? HELP.WAL<>exec('bl_nwal_mg','ustawienia') & HELP.WAL<>null
|| {? __nd_krs | _skl
   ||
      _cena:=(__rea_tab.CENA*{? _skl=1 || ND.SCKRS || __nd_krs ?})$_dokl_c;
      _cwal:=__rea_tab.CENA
   ||
      _cena:=__rea_tab.CENA1;
      _cwal:=__rea_tab.CWAL
   ?}
|| _cena:=0;
   _cwal:=0
?};

_pal:={? __rea_tab.PAL='' || null || exec('FindInSet','#table','PAL','PAL',__rea_tab.PAL,__rea_tab.PAL) ?};
_isdysp:=__rea_tab.TR_REF<>'';

{? _pal<>null
|| PAL.cntx_psh();
   PAL.clear();
   {? PAL.seek(_pal)
   || exec('znacznik','magdok_palety',PAL.ref());
      PAL.AKT:='T';
      PAL.RSQL:=$PAL.ref();
      PAL.put()
   ?};
   _ktm:=ZD_RP.ZD_POZ().M().KTM;
   PAL_POZ.cntx_psh();
   _add:=1;
   PAL_POZ.index('PAL');
   PAL_POZ.prefix(_pal,_ktm,_ktm);
   {? PAL_POZ.first() & {? _isdysp || _add:=0; 0 || 1 ?}
   || {!
      |? {? PAL_POZ.C=_cena & PAL_POZ.TW=__rea_tab.TW & PAL_POZ.DK_C=ZD_RP.ZD_POZ().DK_C
         || PAL_POZ.IL+=ZD_RP.IL_ZRE;
            PAL_POZ.ILP+=ZD_RP.IL_ZRE;
            PAL_POZ.put(1);
            _add:=0
         ?};
         _add & PAL_POZ.next()
      !}
   ?};
   {? _add
   || PAL_POZ.prefix();
      PAL_POZ.blank();
      PAL_POZ.PAL:=_pal;
      PAL_POZ.IL:=PAL_POZ.ILP:=ZD_RP.IL_ZRE;
      PAL_POZ.AKT:='T';
      PAL_POZ.M:=ZD_RP.ZD_POZ().M;
      PAL_POZ.TW:=__rea_tab.TW;
      PAL_POZ.JM:=PAL_POZ.M().J;
      PAL_POZ.C:=_cena;
      PAL_POZ.DK_C:=ZD_RP.ZD_POZ().DK_C;
      exec('uzupIDkod','magdok_palety',PAL_POZ);
      PAL_POZ.add(1)
   ?};
   PAL_POZ.cntx_pop();
   exec('ktm2pal','magdok_palety',0);
   PAL.cntx_pop()
?};

:: _dk_ref:=exec('napozdk','magdok_palety',ND.ref(),ZD_RP.ZD_POZ().M,ZD_RP.IL_ZRE,0,'x'
::          ,_cena,ZD_RP.ZD_POZ().DK_C,__rea_tab.TW);
_dk_ref:=null();
_scean:='';
{? _wgwym || _dk_ref:={? var_pres('_b')=type_of(null()) || _b || null() ?} ?};
{? _dk_ref=null
|| _dk_c:={? _wgwym & __rea_wym.DKC<>'xxx'
          || exec('FindAndGet','#table',DK_C,__rea_wym.DKC,,,ZD_RP.ZD_POZ().DK_C)
          || ZD_RP.ZD_POZ().DK_C
          ?};
   _term:={? _wgwym & __rea_wym.TRM<>date(0,0,0)
          || __rea_wym.TRM
          || __rea_tab.TW
          ?};
   {? _term=date(0,0,0) & ZD_RP.ZD_POZ().M().TWD>0 || _term:=ND.D+ZD_RP.ZD_POZ().M().TWD ?};
   _eanl:={? _wgwym & __rea_wym.LOK<>''
          || exec('FindAndGet','#table',EANL,__rea_wym.LOK,,,null())
          || null()
          ?};
   _scean:={? _wgwym & __rea_wym.SCEAN<>''
           || __rea_wym.SCEAN
           || ''
           ?};
   {? _wgwym & __rea_wym.PAL<>'' || _pal:=exec('FindAndGet','#table',PAL,__rea_wym.PAL,,,_pal) ?};
   _ilwym:={? _wgwym || __rea_wym.ILE || 0 ?};
   _dk_ref:=exec('gen_onep','zamdst_rea',ND.ref(),ZD_RP.ZD_POZ().M,ZD_RP.IL_ZRE,_cena,(_cena*ZD_RP.IL_ZRE)$2,_pal
             ,_dk_c,_term,_eanl,_ilwym,_scean)
|| {? _dk_ref<>null
   || _term:={? _wgwym & __rea_wym.TRM<>date(0,0,0)
             || __rea_wym.TRM
             || __rea_tab.TW
             ?};
      _eanl:={? _wgwym & __rea_wym.LOK<>''
             || exec('FindAndGet','#table',EANL,__rea_wym.LOK,,,null())
             || ND.MAG().EANL
             ?};
      _scean:={? _wgwym & __rea_wym.SCEAN<>''
              || __rea_wym.SCEAN
              || ''
              ?};
      {? _wgwym & __rea_wym.PAL<>'' || _pal:=exec('FindAndGet','#table',PAL,__rea_wym.PAL,,,_pal) ?};
      _ilwym:={? _wgwym || __rea_wym.ILE || ZD_RP.IL_ZRE ?};
      {? ~exec('add2dk_l','magdok_wspolne',_dk_ref,null,_eanl,null,_term,date(0,0,0),_ilwym,ND.MAG
           ,ZD_RP.ZD_POZ().M,,,_pal,,1,,_scean)
      || undo()
      ?}
   ?}
?};
{? _dk_ref<>null
|| DK.cntx_psh();
   DK.clear();
   {? DK.seek(_dk_ref)
   ||
      {? _skl
      || DK.SCC:=_cwal;
         DK.SCWAR:=(DK.SCC*DK.IL)$2;
         DK.WAL:=INFO.NAROD
      || DK.CWAL:=_cwal;
         DK.KURS:=__nd_krs;
         DK.WAL:=__nd_wal
      ?};
      DK.ZAM_RN:=$ZD_RP.ZD_RN;
      DK.ZAM_RP:=$ZD_RP.ref;
      _zd_nag:=$ZD_RP.ZD_RN().ZD_NAG;
      {? _zd_nag<>'' & var_pres('__reaptzd')=118
       & (__reaptzd.clear(); __reaptzd.prefix(_zd_nag,DK.N().GRP_KEY+(DK.name()+3)); ~__reaptzd.first())
      || __reaptzd.blank();
         __reaptzd.ZD_NAG:=_zd_nag;
         __reaptzd.ZAM_REA:=DK.N().GRP_KEY+(DK.name()+3);
         DK.GRP:='2';
         __reaptzd.add(1)
      ?};
      _jmg:=DK.M().J2;
      {? _jmg<>null() | ~BEER.JMZ
      || DK.J2:=ZD_RP.ZD_POZ().J2;
         DK.T2:=ZD_RP.ZD_POZ().T2;
         DK.WS2:=ZD_RP.ZD_POZ().WS2
      || DK.J2:=ZD_RP.ZD_POZ().JM;
         DK.T2:=ZD_RP.ZD_POZ().T2;
         DK.WS2:=1/ZD_RP.ZD_POZ().WS2
      ?};
      {? ZD_POZ.WAL=INFO.NAROD
      ||
         DK.C2:={? ZD_POZ.ZD_NAG().JMZ || ZD_POZ.CENA || ZD_POZ.CENA2 ?}
      ?};
      _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
      {? _dokl_s<0 || _dokl_s:=exec('jaka_dok_m','jm',DK.M) ?};
      DK.IL2:={? DK.WS2<>0 || DK.IL/DK.WS2 || DK.IL ?} $_dokl_s;
      exec('dk_sv','magdok_poz');
      {? (1+DK.N().MAG().TYP)='D' & DK.M<>null & DK.M().IDMOB='A' & DK.DK_C<>null
      || {? ~exec('czydkc_m','material',$DK.DK_C,DK.M) & ~(DK.DK_C().UZUP*'0')
         || _scean:=exec('mkodkKODK','kody_kresk',DK.M);
            exec('mkodkadd','kody_kresk',DK.M,_scean,$DK.DK_C)
         ?};
         DK.SCEAN:=exec('zwrdkc_m','material',$DK.DK_C,DK.M)
      ?};
:: projekty
      PROJEKTY.cntx_psh();TYPYDOK.cntx_psh();PROJTYPY.cntx_psh();ND.cntx_psh();
      PROJEKTY.prefix();TYPYDOK.prefix();PROJTYPY.prefix();ND.prefix();
      DK.N();
      DK.PROJEKTY:=
      {? var_press('_projekt')=7 & _projekt<>null & PROJEKTY.seek(_projekt)
      & (ND.TYP().PROJZAKR='Wszystkie' | (4+PROJEKTY.T().R)=(4+ND.TYP().PROJZAKR))
      || _projekt
      || null
      ?};
      PROJEKTY.cntx_pop();TYPYDOK.cntx_pop();PROJTYPY.cntx_pop();ND.cntx_pop();
      {? Plugin.exists('ZAMREA_DOKMAG_001') || Plugin.run('ZAMREA_DOKMAG_001','DK') ?};
      DK.put();
      {? _pal<>null()
      || _scsql:=$DK.ref();
         _stats:=DK.STATS;
         _dkc:=DK.DK_C;
         _cen:=DK.C;
         _ile:=DK.IL;
         _ktm:=DK.M().KTM;
         _jest:=0;
         PAL.cntx_psh();
         PAL_POZ.cntx_psh();
         PAL_POZ.index('PAL');
         PAL_POZ.prefix(_pal,_ktm,_ktm);
         {? PAL_POZ.first()
         || {!
            |? {? PAL_POZ.SCSQL='' & PAL_POZ.ILP=_ile & PAL_POZ.DK_C=_dkc
               || PAL_POZ.SCSQL:=_scsql;
                  PAL_POZ.STATS:=_stats;
                  PAL_POZ.C:=_cen;
                  PAL_POZ.put(1);
                  _jest:=1
               ?};
               ~_jest & PAL_POZ.next()
            !}
         ?};
         {? _jest || exec('statsPAL','magdok_palety',_pal) ?};
         PAL.cntx_pop();
         PAL_POZ.cntx_pop()
      ?};

::    naliczenie opłat dodatkowych
      exec('actTAXS','oplaty_dod',DK.N().uidref(),DK.uidref(),DK.M,DK.M);
::    tworzenie informacji dodatkowych
      exec('inf_dod','fakso',0,'dokma')
   ?};
:: dopisanie indeksow do magazynu
   exec('mx_add_auto','material',ND.MAG,DK.M,DK.M().A);

   DK.cntx_pop()
||
   undo();
   _wyn:=0
?};
{? _wgwym || _dk_ref || _wyn ?}


\gen_onep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: generacja jednej pozycji PZ-tki
::   WE: _a - ND.ref()
::       _b - M.ref()
::       _c - Ilosc realizowana
::       _d - cena PLN
::       _e - wartosc ewidencyjna
::       [_f] - paleta (stosowana wylacznie dla magazynow paletowych)
::       [_g] - ref cechy
::       [_h] - termin waznosci (magazyny paletowe) lub materiał z terminem na dostawie
::       [_i] - lokalizacja
::       [_j] - ilość dla wymiaru
::       [_k] - kod identyfikacyjny
::   WY: 1/0
::  OLD: \gen_onep/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=6  || {? type_of(_f)<>7 || _f:=null ?}  || _f:=null ?};
{? _>=7  || {? type_of(_g)<>7 || _g:=null ?}  || _g:=null ?};
{? _>=8  || {? type_of(_h)<>4 || _h:=date(0,0,0) ?}  || _h:=date(0,0,0) ?};
 _eanl:={? var_pres('_i')=type_of(null()) || _i || null() ?};
_ilwym:={? var_pres('_j')=type_of(0) & _j>0 || _j || _c ?};
_scean:={? var_pres('_k')=type_of('') & _k<>'' || _k || '' ?};

{? ~ND.seek(_a) || return(0) ?};

{? exec('FindAndGet','#table',M,_b,,"SETW<>'P'",1)
|| _tw:=date(0,0,0)
|| _tw:=_h
?};

_tmg:=(1+ND.MAG().TYP);
_ewi:=ND.MAG().TYP*'EWI';
{? _ewi
||
   _cena:=exec('biez_cen','ceny_dok',_b,ND.MAG,ND.D,,ND.T);
   {? _cena=0 || _cena:=_d ?};
   _warz:=_e
||
   _cena:=_d;
   _warz:=0
?};

_wyn:=exec('adddk','magdok_poz',_a,_b,_c,_cena,,,,,,,,,7,,,_g,,,,,,,_warz,,_scean,_tw);
{? _wyn<>null
|| {? _eanl=null() || _eanl:=ND.MAG().EANL ?};
   {? ~exec('add2dk_l','magdok_wspolne',_wyn,null,_eanl,null,_h,date(0,0,0),_ilwym,ND.MAG,_b,,,_f,,1)
   || undo()
   ?}
?};
_wyn


\rmg_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: popraw pozycje do realizacji
::  OLD: \rmg_pop/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_mg_be:=__rea_tab.MAGAZYN;
{? exec('FindInSet','#table','MG','MAGAZYNY',__rea_tab.MAGAZYN,__rea_tab.MAGAZYN,"MG.PAL",,,'')='N'
|| MG.cntx_psh();
   MG.clear();
   MG.f_clear();
   MG.f_set('SYM,NAZ'
      ,'join USERS_UP','USERS_UP.USERS=:_a and USERS_UP.AKR=\'MG\' and \"MG\".ODDZ=\':_b\' and \"MG\".PAL=\'N\''
      ,OPERATOR.USER,ST.ODDZ);
   MG.win_sel('SLO');
   {? MG.select()
   || _oki:=1;
      {? MG.COS='T'
      || {? MG.DLAKH<>null() & ZD_NAG.KH<>MG.DLAKH
         || FUN.info('Wskazano magazyn konsygnacyjny dla %1.\n'
                     'Wybór magazynu niemożliwy.'@[MG.DLAKH().SKR]);
            _oki:=0
         |? ~ZD_NAG.KH().COS
         || FUN.info('Nie zdefiniowano obsługi magazynów konsygnacyjnych dla dostawcy: %1.\n'
                     'Wybór magazynu niemożliwy.'@[ZD_NAG.KH().SKR]);
            _oki:=0
         ?}
      ?};
      {? _oki
      || __rea_tab.MAGAZYN:=MG.SYM;
         __rea_tab.MG_REF:=$MG.ref();
         __rea_tab.put()
      ?}
   ?};
   MG.f_clear();
   MG.cntx_pop()
|| FUN.info('Funkcja niedostępna dla magazynu z obsługą palet.'@)
?};
''


\rea_zpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: przegladanie pozycji zamowienia podczas realizacji
::  OLD: \rea_zpoz/zd.fml
::----------------------------------------------------------------------------------------------------------------------
ZDP_NAG.cntx_psh();
ZDP_POZ.cntx_psh();
ZD_NAG.cntx_psh();
ZD_POZ.cntx_psh();
ZD_POZ.clear();
{? 8+__rea_tab.ZD_POZ=ZD_POZ.name() & ZD_POZ.seek(__rea_tab.ZD_POZ,8+__rea_tab.ZD_POZ)
||
   _zd_nag:=ZD_POZ.ZD_NAG;
   echo(ZD_POZ.ZD_NAG().SYM);
   ZD_POZ.index('POZ');
   ZD_POZ.prefix(_zd_nag);
   ZD_POZ.first();
   ZD_POZ.win_sel('WER');
   ZD_POZ.actions('WER','CWZRPGDOUT:RGDO');
   ZD_POZ.select();
   echo()
||
   FUN.info('System nie odnalazł aktywnego zamówienia.'@)
?};
ZD_POZ.cntx_pop();
ZD_NAG.cntx_pop();
ZDP_POZ.cntx_pop();
ZDP_NAG.cntx_pop();
''


\rea_aepp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: po popraw - pozycja do realizacji
::  OLD: \rea_aepp/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
M.index('MATKTM');
M.prefix(__rea_tab.INDEKS,__rea_tab.INDEKS);
{? M.first()
|| _dokl:=exec('jaka_dok_m','jm',M.ref());
   _dokl_c:=M.DOKL_C
|| _dokl:=0;
   _dokl_c:=2
?};
__rea_tab.IL_REA:=__rea_tab.IL_REA$_dokl;
__rea_tab.CENA:=__rea_tab.CENA$_dokl_c;
{? __rea_tab.IL_REA<0
|| FUN.info('Należy podać ilość większą od zera.'@)
|? __rea_tab.IL_REA>__rea_tab.IL_POZ
|| {? __ilplus
   || _wyn:=1
   |? exec('get','#params',3020,2,OPERATOR.USER)='T'
   || _wyn:=FUN.ask('Ilość większa od ilości pozostałej do realizacji z zamówienia.\nCzy zrealizować większą ilość?'@)
   || FUN.info('Należy podać ilość mniejszą lub równą %1.'@[form(__rea_tab.IL_POZ,,3)]);
      _wyn:=0
   ?}
|| _wyn:=1
?};
{? _wyn=0 || __rea_tab.IL_REA:=__rea_tab.IL_POZ ?};
{? __rea_tab.IL_REA>0
|| __rea_tab.X:='*'
|| __rea_tab.X:='x'
?};
__rea_tab.put();
_wyn


\disp_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: wyswietlanie pozycji zamowienia dostaw
::   WE: _a - $ZD_POZ.ref()
::  OLD: \disp_poz/zd.fml
::----------------------------------------------------------------------------------------------------------------------
ZD_POZ.cntx_psh();
ZD_POZ.clear();
{? ZD_POZ.seek(_a)
||
   D_HELP.M_ZDPOZ:=ZD_POZ.M().KTM;
   exec('zdpo_wys','zamdst_poz')
?};
ZD_POZ.cntx_pop();
''


\przd_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola palety dla zam.dostaw
::  OLD: \przd_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('FindAndGet','#table','MG',__rea_tab.MG_REF,,"PAL",'')='T'
|| 1
|| 0
?}


\f3zd_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: klawisz F3 pola palety dla zam.dostaw
::  OLD: \f3zd_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
PAL.f_clear();
PAL.index('PAL');
PAL.prefix();
PAL.f_set('KODK',,'\"PAL\".STAN=\'N\' and \"PAL\".AKT=\'T\' and \"PAL\".RSQL=\'\'  and \"PAL\".ODD=\':_a\'',ST.ODDZ);
EANX.WHERE:='X';
PAL.win_sel('SEL');
PAL.win_dict('SEL');
PAL.actions('SEL','IXWACTYMGZ');
PAL.find_key(__rea_tab.PAL);
{? PAL.select(,1) || __rea_tab.PAL:=PAL.KODK ?};
PAL.f_clear();
~~


\pozd_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pola palety dla zam.dostaw
::  OLD: \pozd_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? __rea_tab.PAL<>''
|| _mg_pal:=sql('select distinct :_a.MG_REF, :_a.PAL from :_a where :_a.PAL<>\'\' order by 2',__rea_tab);
   PAL.cntx_psh();
   PAL.index('PAL');
   PAL.prefix(__rea_tab.PAL,__rea_tab.PAL);
   {? PAL.first()
   || {? PAL.STAN='N' & PAL.AKT='T' & PAL.RSQL=''
      || _mg_pal.clear();
         _add:={? _mg_pal.find_key(PAL.KODK)
               || _mg_pal.MG_REF=__rea_tab.MG_REF
               || 1
               ?};
         {? _add
         || __rea_tab.PAL:=PAL.KODK
         || FUN.info('Nie można wybrać podanej palety ponieważ została już przypisana do innego magazynu.'@);
            __rea_tab.PAL:=''
         ?}
      || FUN.info('Brak palety o podanym kodzie kreskowym lub paleta jest już wykorzystana.'@);
         __rea_tab.PAL:=''
      ?}
   || PAL.prefix(__rea_tab.PAL);
      {? PAL.first()
      || __rea_tab.PAL:='';
         {!
         |? {? PAL.STAN='N' & PAL.AKT='T' & PAL.RSQL=''
            || _mg_pal.clear();
               _add:={? _mg_pal.find_key(PAL.KODK)
                     || _mg_pal.MG_REF=__rea_tab.MG_REF
                     || 1
                     ?};
               {? _add
               || __rea_tab.PAL:=PAL.KODK;
                  0
               || PAL.next()
               ?}
            || PAL.next()
            ?}
         !};
         {? __rea_tab.PAL=''
         || FUN.info('Brak palety o podanym kodzie kreskowym lub paleta jest już wykorzystana.'@);
            __rea_tab.PAL:=''
         ?}
      || FUN.info('Brak palety o podanym kodzie kreskowym lub paleta jest już wykorzystana.'@);
         __rea_tab.PAL:=''
      ?}
   ?};
   PAL.cntx_pop()
|| 1
?}


\przd_tw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed redakcja pola term.ważn. dla zam.dostaw
::  OLD: \przd_tw/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('FindAndGet','#table','M',__rea_tab.M_REF,,"CZY_TW='T' | SETW='P'",0)
|| 1
|| 0
?}


\czycelny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdza czy na pozycjach zamowienia sa dane zwiazane z magazynem celnym
::   WE: _a - ref ZD_NAG
::   WY: 'S'-jest maagzyn celny ''-nie ma
::  OLD: \czycelny/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
ZD_POZ.cntx_psh();
ZD_POZ.index('POZ');
ZD_POZ.prefix(_a);
{? ZD_POZ.first()
|| {!
   |? _wyn:={? ZD_POZ.MG().SKL='T' || 'S' || '' ?};
      _wyn='' & ZD_POZ.next()
   !}
?};
ZD_POZ.cntx_pop();
_wyn


\zdna_rea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: realizacje zamowienia do dostawcy
::   WE: [_a] - ref SQL ZDP_NAG - potwierdzenia zamówień dostaw
::  OLD: \zdna_rea/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_zdp_nag:={? var_pres('_a')<>type_of('') || '' || _a ?};

_pomtab:=POM.TAB;
_pomtyp:=POM.TYPDOK;
_pomnrt:=POM.NRT;
BEER.MENU_PTH+='R';
_beermw:=BEER.MW;
ZD_Z.CZY_ZD:='T';
VAR_DEL.delete('__zdrea');
BEER.IWZ:='';
BEER.IFK:='';
{? _zdp_nag='' & ('AC'*ZD_NAG.STAN) & ZD_NAG.POTW='N' & (_ean:=exec('eann2zk','magdok_wspolne',ZD_NAG.ref()))<>''
|| {? _ean='J' | _ean='I'
   || {? FUN.ask('Zamówienie powiązane z operacjami na urządzeniach mobilnych.\n'
                 'Czy realizować na podstawie zakończonych operacji?'@)
      || exec('reazeann','zamowienia',$ZD_NAG.ref())
      ?}
   ?}
?};

{? _zdp_nag=''
|| ZD_RN.index('ZAM');
   ZD_RN.prefix(ZD_NAG.ref)
|| exec('ustawPRF','zamdst_rea',_a);
   ZD_RN.index('ZDP_NAG');
   ZD_RN.prefix(_a,_a,1)
?};
ZD_RN.win_sel('WER');
ZD_RN.win_fml('WER',,'SPZ',,'ICON_BEFORE',exec('zdrn_nd_sym_ib','zamdst_rea'));
POMOC.STRING:='';
POMOC.DATAS:='';

__zdrea:=1;

{? ZD_RN.first()
|| exec('zdrn_actions','zamdst_rea');
   ZD_RN.select()
|| {? _zdp_nag=''
   || FUN.info('Zamówienie nie było realizowane.'@)
   || FUN.info('Potwierdzenie zamówień dostaw nie było realizowane.'@)
   ?}
?};

ZD_RN.actions('WER','');
VAR_DEL.delete('__zdrea');
BEER.MW:=_beermw;
BEER.MENU_PTH-=1;
POM.TAB:=_pomtab;
POM.TYPDOK:=_pomtyp;
POM.NRT:=_pomnrt;
ZD_Z.CZY_ZD:='N';
''


\powzaldd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: Zalaczniki dla dokumentow magazynowych
::  OLD: \powzaldd/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_edit:=exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_DAPZ');
{? ZD_RN.ND='' & ZD_RN.SPZ='- USŁUGI -'
|| FUN.info('Realizacja dotyczyła usług.\nZałączniki niedostępne.'@)
|? ZD_RN.ND<>''
|| _akt:=ND.name();
   _msk:=form(8+ZD_RN.ND);
   ND.cntx_psh();
   DK.cntx_psh();
   {? _msk<>_akt || exec('open','open_tab',1+(_msk+3),_msk+2) ?};
   ND.clear();
   {? ND.seek(ZD_RN.ND) || exec('sel_dok','dokum','ND',{? _edit || 0 || 2 ?},,,1) ?};
   ND.cntx_pop();
   DK.cntx_pop()
?};
~~


\zdrn_actions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Wyszarzanie i wyłączanie akcji w oknie realizacji zamówień dostaw
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: U - usuń
_act0:=_act1:='';

{? ZD_NAG.name+2='__'
|| {? 'MQ'*ZD_NAG.STAN || _act1+='U' ?}
|? ZD_NAG.name+2<>'__'
   | (2+menu_pth())='ZJ'
   | (var_pres('__ptw_disp')>0 & POMOC.TAB<>'__')
   | var_pres('__rea_disp')>0
|| _act1:='U'
?};

:: wyłączone
ZD_RN.actions('WER',_act1+':'+_act0,,1);

:: wyszarzone
{? (_act1*'U')=1
|| ZD_RN.actions_grayed('WER','U')
|| ZD_RN.actions_grayed('WER','')
?}


\zdrn_nd_sym_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła określiająca ikony
::----------------------------------------------------------------------------------------------------------------------
"
   {? ZD_RN.ND<>''
   || exec('FindAndGet','#table',ND,ZD_RN.ND,,exec('nd_sym_i','magdok_nag'),exec('pusta','#icon'))
   || exec('pusta','#icon')
   ?}
"


\rea_pozy_dos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [17.00]
:: OPIS: pozycje realizacji
::----------------------------------------------------------------------------------------------------------------------
ZD_RP.clear;
ZD_RP.index('POZ');
ZD_RP.prefix(ZD_RN.ref());
ZD_RP.win_sel('WER');
ZD_RP.select;
''


\eanz_dst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: lista zamowien do realizacji
::   WE: [_a] - ref SQL-owy zamowienia
::       [_b] - ref SQL-owy ND
::       [_c] - 1-tryb powiązania po 1 pozycji 0(domyślnie)-nie
::   WY: 1-udało się coś powiązać 0-nic nie powiązano
::  OLD: \eanz_dst/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_tryb:={? var_pres('_c')=type_of(0) || _c || 0 ?};

VAR_DEL.delete('__potwzd');

{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};

_onezam:=_a<>'';
_gogo:=0;
_plus:=(';ZR'*exec('get','#params',600803,2))>1;

__zamdst:=tab_tmp(4,'TREE','TREE_REF','galazka'
           ,'LAB','STRING[100]','Etykieta'
           ,'KOD','STRING[50]','kod kh'
           ,'SYM','STRING[50]','symbol'
           ,'NUM','INTEGER','numer'
           ,'DAT','DATE','data'
           ,'POT','INTEGER','potwierdzenie'
           ,'REF','STRING[16]','ref SQL'
           ,'WYB','INTEGER','wybrano'
           ,'ILZ','REAL','il.zam.'
           ,'ILS','REAL','il.wg czytnika'
           ,'MAG','STRING[10]','magazyn'
           ,'SND','STRING[20]','dokument'
           ,'RND','STRING[16]','ref SQL dokumentu'
           ,'SQL','STRING[16]','ref SQL zamowienia'
           ,'GAL','STRING[16]','ref galezi wyjsciowej'
           ,'PQL','STRING[16]','ref SQL pozycji'
           ,'PTW','STRING[16]','ref SQL pozycji potwierdzenia'
           ,'RZD','STRING[16]','ref zamowienia'
           ,'REM','STRING[16]','ref SQL materiału'
           ,'DKC','STRING[16]','ref SQL cechy dostawy'
           ,'W01','STRING[25]','wart.atr. 1'
           ,'W02','STRING[25]','wart.atr. 2'
           ,'W03','STRING[25]','wart.atr. 3'
           ,'W04','STRING[25]','wart.atr. 4'
           ,'W05','STRING[25]','wart.atr. 5'
           ,'W06','STRING[25]','wart.atr. 6'
           ,'W07','STRING[25]','wart.atr. 7'
           ,'W08','STRING[25]','wart.atr. 8'
           ,'W09','STRING[25]','wart.atr. 9'
           ,'W10','STRING[25]','wart.atr. 10'
           ,'WAL','STRING[3]','waluta');
__poznd:=tab_tmp(4,'SQL','STRING[16]',''
           ,'KTM','STRING[50]',''
           ,'KT2','STRING[50]',''
           ,'DKC','STRING[16]',''
           ,'REM','STRING[16]',''
           ,'ILE','REAL',''
           ,'ILP','REAL',''
           ,'PQL','STRING[16]','');
__potwzd:=tab_tmp(3,'ZAM','STRING[16]',''
           ,'NPT','STRING[16]',''
           ,'POZ','STRING[16]',''
           ,'ILE','REAL',''
           ,'SPT','STRING[20]',''
           ,'PPT','STRING[16]',''
           ,'AKC','STRING[1]','');
{? var_pres('__pozydk')<118
|| __pozydk:=tab_tmp(3,'SQL','STRING[16]',''
           ,'ILE','REAL',''
           ,'ILP','REAL','')
?};

_selzdst:=__zamdst.mk_sel('Zamówienia dostaw do realizacji'@,'P',0,'#eanzam_dst',,,__zamdst.size(),1);
__zamdst.win_fld(_selzdst,,'LAB',,,25,0,1,'Etykieta'@);
__zamdst.win_fld(_selzdst,,'WAL',,,-3,,1,'Waluta'@);
__zamdst.win_fld(_selzdst,,'SND',,,20,0,1,'Dokument'@);
__zamdst.win_fld(_selzdst,,'SYM',,,20,,1,'Symbol/Indeks materiałowy'@);
__zamdst.win_fld(_selzdst,,'DAT',,,10,,1,'Data'@);
__zamdst.win_fld(_selzdst,,'MAG',,,10,,1,'Magazyn'@);
__zamdst.win_fld(_selzdst,,'ILZ',,,-10,3,1,'Ilość zamówiona'@);
__zamdst.win_fld(_selzdst,,'ILS',,,-10,3,1,'Ilość odczytana'@);
__zamdst.win_act(_selzdst,0,'Formuła','&Akceptuj'@@,,,"exec('eanz_and','zamdst_rea')",,1,,,,'A');
__zamdst.win_act(_selzdst,0,'Formuła','&Przypisz dokument'@@,,,"exec('eanz_gnd','zamdst_rea')",,,,,,'P');
__zamdst.win_act(_selzdst,0,'Formuła','&Wycofaj przypisanie'@@,,,"exec('eanz_gnd','zamdst_rea',0)",,,,,,'W');
__zamdst.win_act(_selzdst,0,'Rekord',,,,"~__zamdst.TREE & __zamdst.SND<>''",,1);
__zamdst.win_act(_selzdst,0,'Szukaj');
__zamdst.win_act(_selzdst,0,'Kolejność');
__zamdst.tr_fml(_selzdst,,"{? _a || {? __zamdst.TREE=0 || 1 || _a ?} || _a ?}");
__zamdst.win_fml(_selzdst,,'LAB',,'ICON_BEFORE',"
         {? (1+__zamdst.KOD)='D'
         || 'xwin16.png:116'
         || ''
         ?}");

__zamdst.win_sel(_selzdst);

_selgnd:=__gennd.mk_sel('Wygenerowane dokumenty'@,'P',0,'#eanzam_nd');
__gennd.win_fld(_selgnd,,'MGS',,,10,0,1,'Magazyn'@);
__gennd.win_fld(_selgnd,,'SYM',,,20,0,1,'Symbol'@);
__gennd.win_act(_selgnd,0,'Formuła','&Wybierz'@@,,,"sel_exit",,1,,,,'W');
__gennd.win_act(_selgnd,0,'Szukaj');
__gennd.win_act(_selgnd,0,'Kolejność');

__gennd.win_sel(_selgnd);

:: wypelnienie informacji o pozycjach dokumentow
exec('wyppoznd','zamdst_rea');
_errblk:=0;

_beerkh:=BEER.KH;
ZD_NAG.cntx_psh();
ZD_POZ.cntx_psh();

_kh:=sql('select distinct substr(:_a.MG2,17,16) KH from :_a ',__magik);

_kh.clear();
{? _kh.first()
|| {!
   |? {? (4+_kh.KH)<>'null'
      || __zamdst.clear();
         __zamdst.blank();
         __zamdst.TREE:=0;
         BEER.KH:=exec('FindAndGet','#table',KH,_kh.KH,,,null());
         __zamdst.LAB:=BEER.KH().KOD+' - '+BEER.KH().NAZ;
         __zamdst.KOD:=BEER.KH().KOD;
         _korzen:={? __zamdst.add(1) || __zamdst.ref() || null ?};
         {? _korzen<>null
         || {? ~_onezam
            || ZD_NAG.index('KH');
               ZD_NAG.prefix(BEER.KH);
               {? ZD_NAG.last() || {! |? {? ZD_NAG.T().MOB='T' || _gogo:=1; 0 || ZD_NAG.prev() ?} !} ?}
            || ZD_NAG.clear();
               _gogo:=(_rp:=BB.sqlint(_a); _rp>0) & ZD_NAG.r_lock(1,1,1,_rp,form(8+_a)) & ZD_NAG.seek(_a)
            ?};
            {? _gogo
            ||
::             sprawdzenie czy nie ma potwierdzen
               {!
               |?
                  {? 'AC'*ZD_NAG.STAN & (_onezam | ZD_NAG.T().MOB='T')
                   & {? ZD_NAG.T().ZAP='T' || ZD_NAG.EZAPOT<>'' & ~exec('zapot_akc','zamowienia',ZD_NAG.EZAPOT) || 1 ?}
                  || ZD_POZ.index('POZ');
                     ZD_POZ.prefix(ZD_NAG.ref());
                     {? ZD_POZ.first()
                     || {!
                        |? ZDP_POZ.index('ZD_POZ');
                           ZDP_POZ.prefix($ZD_POZ.ref(),$ZD_POZ.ref());
                           {? ZDP_POZ.first()
                           || {!
                              |? _ilrea:=exec('obl_rea','zamdst_rea',$ZDP_POZ.ref());
                                 _jmz:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,
                                         "exec('FindAndGet','#table','ZD_NAG',$ZD_NAG,,\"JMZ\",0) & WS2<>1",0);
                                 {? _jmz
                                 || _ws2:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"WS2",1);
                                    _ilrea:=(_ilrea*_ws2 $ ZDP_POZ.M().DOKL)
                                 ?};
                                 POMOC.REA:=_ilrea;
                                 _il_poz:=ZDP_POZ.IL-POMOC.REA;
                                 __potwzd.clear();
                                 {? _il_poz>0
                                 || {? ~__potwzd.find_key($ZD_NAG.ref(),$ZDP_POZ.ZDP_NAG,$ZD_POZ.ref())
                                    || __potwzd.blank();
                                       __potwzd.ZAM:=$ZD_NAG.ref();
                                       __potwzd.NPT:=$ZDP_POZ.ZDP_NAG;
                                       __potwzd.POZ:=$ZD_POZ.ref();
                                       __potwzd.ILE:=_il_poz;
                                       __potwzd.SPT:=ZDP_POZ.ZDP_NAG().SYM;
                                       __potwzd.PPT:=$ZDP_POZ.ref();
                                       __potwzd.AKC:=ZDP_POZ.ZDP_NAG().AKC;
                                       __potwzd.add(1)
                                    || __potwzd.ILE+=_il_poz;
                                       __potwzd.put(1)
                                    ?}
                                 ?};
                                 ZDP_POZ.next()
                              !}
                           ?};
                           ZD_POZ.next()
                        !}
                     ?}
                  ?};
                  {? _a='' || ZD_NAG.prev() || 0 ?}
               !}
            ?};
::          generacja wg potwierdzen
            ZD_NAG.cntx_psh();
            _zampot:='';
            __potwzd.clear();
            {? __potwzd.first()
            || {!
               |? {? __potwzd.AKC='T'
                  || {? _zampot<>(__potwzd.ZAM+__potwzd.NPT)
                      & (ZD_NAG.clear(); ZD_NAG.seek(__potwzd.ZAM))
                     || __zamdst.clear();
                        __zamdst.blank();
                        __zamdst.TREE:=_korzen;
                        __zamdst.LAB:='Potw.: '+__potwzd.SPT+'. Zam.: '+ZD_NAG.SYM;
                        __zamdst.KOD:='';
                        __zamdst.SQL:=__potwzd.NPT;
                        __zamdst.NUM:=ZD_NAG.NR;
                        __zamdst.SYM:=ZD_NAG.SYM;
                        __zamdst.DAT:=ZD_NAG.DATA;
                        __zamdst.POT:='CT'*ZD_NAG.POTW;
                        __zamdst.RZD:=$ZD_NAG.ref();
                        __zamdst.WAL:=ZD_NAG.WAL().KOD;
                        _kornag:={? __zamdst.add(1) || __zamdst.ref() || null ?};
                        _zampot:=__potwzd.ZAM+__potwzd.NPT
                     ?};
                     {? _kornag<>null & (ZD_POZ.clear(); ZD_POZ.seek(__potwzd.POZ))
                     || __zamdst.clear;
                        __zamdst.prefix(_kornag,ZD_POZ.M().N);
                        __zamdst.blank();
                        __zamdst.TREE:=_kornag;
                        __zamdst.LAB:=ZD_POZ.M().N;
                        __zamdst.KOD:=ZD_POZ.M().KTM;
                        __zamdst.SYM:=ZD_POZ.M().KTM;
                        __zamdst.MAG:=ZD_POZ.MG().SYM;
                        __zamdst.ILZ:=__potwzd.ILE;
                        __zamdst.PQL:=$ZD_POZ.ref();
                        __zamdst.PTW:=__potwzd.PPT;
                        __zamdst.DKC:={? ZD_POZ.DK_C<>null() || $ZD_POZ.DK_C || 'xxx' ?};
                        __zamdst.REM:=$ZD_POZ.M;
                        {? ZD_POZ.DK_C<>null()
                        || {? ZD_POZ.M().M_ATR<>null()
                           || {! _i..10
                              |! ($('__zamdst.W'+form(_i,-2,0,'99')))()
                               :=($('ZD_POZ.DK_C().WAR'+form(_i,-2,0,'99')))()
                              !}
                           || __zamdst.W01:=ZD_POZ.DK_C().SYM
                           ?}
                        ?};
                        {? _a<>''
                        || __zamdst.SQL:=__potwzd.NPT;
                           __zamdst.RZD:=$ZD_NAG.ref();
                           __zamdst.RND:=_b
                        ?};
                        __zamdst.add(1)
                     ?}
                  ?};
                  __potwzd.next()
               !}
            ?};
            ZD_NAG.cntx_pop();
::          generacja wg zamowien (to co pozostalo)
            _sum:=sql('select :_a.POZ, sum(:_a.ILE) ILE from :_a group by :_a.POZ order by 1',__potwzd);
            {!
            |?
               {? ('AC'*ZD_NAG.STAN | _plus) & (_onezam | ZD_NAG.T().MOB='T')
                & {? ZD_NAG.T().ZAP='T' || ZD_NAG.EZAPOT<>'' & ~exec('zapot_akc','zamowienia',ZD_NAG.EZAPOT) || 1 ?}
               || _sapoz:=0;
                  __zamdst.clear();
                  __zamdst.blank();
                  __zamdst.TREE:=_korzen;
                  __zamdst.LAB:='Typ: '+ZD_NAG.T().T+'. Zam.: '+ZD_NAG.SYM;
                  __zamdst.KOD:='';
                  __zamdst.SQL:=$ZD_NAG.ref();
                  __zamdst.NUM:=ZD_NAG.NR;
                  __zamdst.SYM:=ZD_NAG.SYM;
                  __zamdst.DAT:=ZD_NAG.DATA;
                  __zamdst.POT:='CT'*ZD_NAG.POTW;
                  __zamdst.RZD:=$ZD_NAG.ref();
                  __zamdst.WAL:=ZD_NAG.WAL().KOD;
                  _kornag:={? __zamdst.add(1) || __zamdst.ref() || null ?};
                  {? _kornag<>null
                  || ZD_POZ.index('POZ');
                     ZD_POZ.prefix(ZD_NAG.ref());
                     {? ZD_POZ.first()
                     || {!
                        |? {? (ZD_POZ.IL_POZ>0 | _plus)
                           || _sum.clear;
                              _sum.prefix($ZD_POZ.ref());
                              {? _sum.first()
                              || _ilpoz:=ZD_POZ.IL_POZ-_sum.ILE
                              || _ilpoz:=ZD_POZ.IL_POZ
                              ?};
                              {? _ilpoz>0 | _plus
                              || __zamdst.clear;
                                 __zamdst.prefix(_kornag,ZD_POZ.M().N);
                                 __zamdst.blank();
                                 __zamdst.TREE:=_kornag;
                                 __zamdst.RND:=_b;
                                 __zamdst.LAB:=ZD_POZ.M().N;
                                 __zamdst.KOD:=ZD_POZ.M().KTM;
                                 __zamdst.SYM:=ZD_POZ.M().KTM;
                                 __zamdst.MAG:=ZD_POZ.MG().SYM;
                                 __zamdst.ILZ:=_ilpoz;
                                 __zamdst.PQL:=$ZD_POZ.ref();
                                 __zamdst.DKC:={? ZD_POZ.DK_C<>null() || $ZD_POZ.DK_C || 'xxx' ?};
                                 __zamdst.REM:=$ZD_POZ.M;
                                 {? ZD_POZ.DK_C<>null()
                                 || {? ZD_POZ.M().M_ATR<>null()
                                    || {! _i..10
                                       |! _nr:=form(_i,-2,0,'99');
                                          ($('__zamdst.W'+_nr))():=($('ZD_POZ.DK_C().WAR'+_nr))()
                                       !}
                                    || __zamdst.W01:=ZD_POZ.DK_C().SYM
                                    ?}
                                 ?};
                                 {? _a<>''
                                 || __zamdst.SQL:=$ZD_NAG.ref();
                                    __zamdst.RZD:=$ZD_NAG.ref();
                                    __zamdst.RND:=_b
                                 ?};
                                 {? __zamdst.add(1) || _sapoz:=1 ?}
                              ?}
                           ?};
                           ZD_POZ.next()
                        !}
                     ?};
                     {? ~_sapoz
                     || __zamdst.clear();
                        {? __zamdst.seek(_kornag) || __zamdst.del() ?}
                     ?}
                  ?}
               ?};
               {? _a='' || ZD_NAG.next() || 0 ?}
            !};
            obj_del(_sum)
         ?}
      ?};
      _kh.next()
   !}
?};

ZD_NAG.cntx_pop();
ZD_POZ.cntx_pop();

_sa_poz:=0;
:: weryfikacja czy sa jakowes pozycje do realizacji wg dokumentu
_ktmdkc:=sql('select distinct :_a.REM, :_a.DKC from :_a order by 1,2',__poznd);
__zamdst.clear();
__zamdst.prefix(0);
{? __zamdst.first()
|| {!
   |? _jest:=0;
      _zamtree:=__zamdst.ref();
      __zamdst.cntx_psh();
      __zamdst.clear();
      __zamdst.prefix(_zamtree);
      {? __zamdst.first()
      || {!
         |? ZD_NAG.cntx_psh();
            ZD_NAG.clear();
            _blk:=(_rp:=BB.sqlint(__zamdst.RZD); _rp>0) & ZD_NAG.r_lock(1,1,1,_rp,form(8+__zamdst.RZD))
                 & ZD_NAG.seek(__zamdst.RZD) & ZD_NAG.r_lock(1,1,1);
            _errblk+=~_blk;
            ZD_NAG.cntx_pop();
            _tree:=__zamdst.ref();
            __zamdst.cntx_psh();
            {? _blk
            || __zamdst.clear();
               __zamdst.prefix(_tree);
               {? __zamdst.first()
               || {!
                  |? _dk_c:={? __zamdst.DKC='xxx'
                            || null()
                            || exec('FindAndGet','#table',DK_C,__zamdst.DKC,,,null())
                            ?};
                     _ktmdkc.clear();
                     _ktmdkc.prefix(__zamdst.REM);
                     {? _ktmdkc.first()
                     || _oki:=0;
                        {!
                        |? _dkwc:={? _ktmdkc.DKC='xxx'
                                  || null()
                                  || exec('FindAndGet','#table',DK_C,_ktmdkc.DKC,,,null())
                                  ?};
                           {? _dkwc=null() | exec('czyzawch','mat_atr',_dk_c,_dkwc)
                           || _oki:=1;
                              0
                           || _ktmdkc.next()
                           ?}
                        !};
                        {? _oki || __zamdst.next() || __zamdst.del() ?}
                     || __zamdst.del()
                     ?}
                  !};
                  _jest:=__zamdst.first()
               ?}
            || _jest:=0;
               __zamdst.clear();
               __zamdst.prefix(_tree);
               {? __zamdst.first() || {! |? __zamdst.del() !} ?}
            ?};
            __zamdst.cntx_pop();
            {? _jest
            || __zamdst.next()
            || {? _blk
               || ZD_NAG.cntx_psh();
                  ZD_NAG.clear();
                  {? ZD_NAG.seek(__zamdst.RZD) || ZD_NAG.r_unlock() ?};
                  ZD_NAG.cntx_pop()
               ?};
               __zamdst.del()
            ?}
         !};
         _jest:=__zamdst.first()
      ?};
      __zamdst.cntx_pop();
      {? _jest || _sa_poz+=1; __zamdst.next() || __zamdst.del() ?}
   !}
?};

{? ~_sa_poz & _errblk>0 & _a=''
|| FUN.info('Aktualnie zablokowano %1 zamówień dostaw.\nIch realizacja niemożliwa.'@[form(_errblk,,0,'99')])
|? _sa_poz & _a=''
|| FUN.info({? __gennd.size()=1
            || {? ~_errblk
               || 'Dla operacji przyjęcia dostawy wystawiono dokument magazynowy.\n'
                  'Możliwa realizacji wybranych zamówień dostaw (Do realizacji) wystawionymi dokumentami.\n'
                  'W tym celu należy je przypisać do wybranych z listy zamówień kontrahenta:\n'
                  '%1.\n\n'
                  'Akceptacja przypisania skutkuje realizacją wybranych zamówień dostaw.'@
                  [BEER.KH().KOD+' - '+BEER.KH().SKR]
               || 'Dla operacji przyjęcia dostawy wystawiono dokument magazynowy.\n'
                  'Możliwa realizacji wybranych zamówień dostaw (Do realizacji) wystawionymi dokumentami.\n'
                  'W tym celu należy je przypisać do wybranych z listy zamówień kontrahenta:\n'
                  '%1.\n\n'
                  'Akceptacja przypisania skutkuje realizacją wybranych zamówień dostaw.'
                  '\n\nUwaga. Aktualnie zablokowano %2 zam.dostaw.\nIch realizacja niemożliwa.'@
                  [BEER.KH().KOD+' - '+BEER.KH().SKR,form(_errblk,,0,'99')]
               ?}
            || {? ~_errblk
               || 'Dla operacji przyjęcia dostawy wystawiono dokumenty magazynowe.\n'
                  'Możliwa realizacji wybranych zamówień dostaw (Do realizacji) wystawionymi dokumentami.\n'
                  'W tym celu należy je przypisać do wybranych z listy zamówień kontrahenta:\n'
                  '%1.\n\n'
                  'Akceptacja przypisania skutkuje realizacją wybranych zamówień dostaw.'@
                  [BEER.KH().KOD+' - '+BEER.KH().SKR]
               || 'Dla operacji przyjęcia dostawy wystawiono dokumenty magazynowe.\n'
                  'Możliwa realizacji wybranych zamówień dostaw (Do realizacji) wystawionymi dokumentami.\n'
                  'W tym celu należy je przypisać do wybranych z listy zamówień kontrahenta:\n'
                  '%1.\n\n'
                  'Akceptacja przypisania skutkuje realizacją wybranych zamówień dostaw.'
                  '\n\nUwaga. Aktualnie zablokowano %2 zam.dostaw.\nIch realizacja niemożliwa.'@
                  [BEER.KH().KOD+' - '+BEER.KH().SKR,form(_errblk,,0,'99')]
               ?}
            ?})
?};

BEER.KH:=_beerkh;
_czywal:=tab_tmp(1,'ND','STRING[16]','');
_bufzam:=tab_tmp(1,'ZDND','STRING[40]','');
{? _sa_poz
|| __zamdst.clear();
   {? {? _a='' || __zamdst.select() || 1 ?}
   || __zamdst.clear();
      {? __zamdst.first()
      || {!
         |? {? __zamdst.RND<>'' & (_bufzam.clear(); _bufzam.prefix(__zamdst.RZD+__zamdst.RND); ~_bufzam.first())
            || {? ~_onezam & (_czywal.clear(); ~_czywal.find_key(__zamdst.RND))
               || exec('wybWalND','zamdst_rea',__zamdst.RND);
                  _czywal.blank();
                  _czywal.ND:=__zamdst.RND;
                  _czywal.add(1)
               ?};
               do();
               _res:=exec('reawgzam','zamdst_rea',__zamdst.RZD,__zamdst.RND,__zamdst.SQL,_tryb)<>2;
               end();
               {? _res
               || _bufzam.prefix();
                  _bufzam.blank();
                  _bufzam.ZDND:=__zamdst.RZD+__zamdst.RND;
                  _bufzam.add(1)
               ?}
            ?};
            __zamdst.next()
         !}
      ?}
   || FUN.info({? ___gennd.size()=1
               || 'Nie zaakceptowano realizacji zamówień wygenerowanym dokumentem magazynowym.'
                  '\nZamówienia dostaw nie zostaną zrealizowane.'@
               || 'Nie zaakceptowano realizacji zamówień wygenerowanymi dokumentami magazynowymi.'
                  '\nZamówienia dostaw nie zostaną zrealizowane.'@
               ?})
   ?}
?};
obj_del(_czywal);
obj_del(_bufzam);
:: odblokowanie zamowien
_unblk:=sql('select distinct :_a.RZD from :_a order by 1',__zamdst);
_unblk.clear();
{? _unblk.first()
|| {!
   |? ZD_NAG.cntx_psh();
      ZD_NAG.clear();
      {? _unblk.RZD<>'' & ZD_NAG.seek(_unblk.RZD) || ZD_NAG.r_unlock() ?};
      ZD_NAG.cntx_pop();
      _unblk.next()
   !}
?};
obj_del(_unblk);
VAR_DEL.delete('__potwzd');
_res


\eanz_and
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdzenie i akceptacja
::   WY: sel_exit lub 0 rezygnacja
::  OLD: \eanz_and/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_byl:=0;
__zamdst.cntx_psh();
__zamdst.clear();
{? __zamdst.first()
|| {!
   |? _byl+=__zamdst.RND<>'';
      __zamdst.next()
   !}
?};
__zamdst.cntx_pop();
{? ~_byl
|| _byl:=FUN.ask({? __gennd.size()=1
                 || 'Do żadnego z zamówień dostaw nie przypisano wystawionego dokumentu magazynowego.\n'
                    '\nCzy rezygnacja z realizacji zamówień dostaw?'@
                 || 'Do żadnego z zamówień dostaw nie przypisano wystawionych dokumentów magazynowych.\n'
                    '\nCzy rezygnacja z realizacji zamówień dostaw?'@
                 ?})
?};
{? _byl || sel_exit ?}


\eanz_gnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przypisuje dokument do zamowienia
::   WE: [_a] - 1-przypisanie (domyslnie) 0-odpisanie
::  OLD: \eanz_gnd/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

{? __zamdst.TREE>0 & ((4+__zamdst.LAB)='Typ:' | (6+__zamdst.LAB)='Potw.:')
|| {? _a
    & {? __zamdst.RND<>''
      || FUN.ask('Do zamówienia %1 przypisano dokument %2.\n Czy zastąpić innym?'@[__zamdst.SYM,__zamdst.SND])
      || 1
      ?}
   || _txt:='';
      __gennd.clear();
      __gennd.prefix('N');
      {? __gennd.select()
      || _spr:=exec('eanztest','zamdst_rea');
         _ok:=_spr<>0;
         {? ~_spr
         || _txt:='Żadna z pozycji dokumentu %1 nie występuję na zamówieniu %2.\n'
                  'Realizacja wskazanym dokumentem niemożliwa.'@[__gennd.SYM,__zamdst.SYM]
         |? _spr=2
         || _txt:='Tylko niektóre z pozycji dokumentu %1 występują na zamówieniu %2.\n'
                  'Realizacja wskazanym dokumentem uwzględni tylko '
                  'pozycje występujące na zamówieniu.'@[__gennd.SYM,__zamdst.SYM]
         ?}
      || _ok:=0
      ?};
      {? {? _ok
         || FUN.ask({? _txt<>'' || _txt+'\n\n' || '' ?}+
                'Czy realizować zamówienie %1 dokumentem %2'@[__zamdst.SYM,__gennd.SYM])
         || {? _txt<>'' || FUN.info(_txt) ?};
            0
         ?}
      || _ref:=__gennd.ref();
         __gennd.clear();
         {? __gennd.seek(_ref)
         || __gennd.WYB:=exec('ustawgwyb','zamdst_rea',1,__zamdst.ref(),__gennd.SQL,__zamdst.GAL);
            __gennd.put(1)
         ?};
         __zamdst.RND:=__gennd.SQL;
         __zamdst.SND:=__gennd.SYM;
         __zamdst.put(1)
      ?}
   |? ~_a
    & {? __zamdst.RND=''
      || FUN.info('Do zamówienia %1 nie przypisano dokumentu.'@[__zamdst.SYM]);
         0
      || 1
      ?}
   || _oki:=0;
      __gennd.clear();
      {? __gennd.first()
      || {!
         |? {? __gennd.SQL=__zamdst.RND
            || __gennd.WYB:=exec('ustawgwyb','zamdst_rea',0,__zamdst.ref(),__gennd.SQL,__zamdst.GAL);
               __gennd.put(1);
               _oki:=1;
               0
            || __gennd.next()
            ?}
         !}
      ?};
      {? _oki
      || __zamdst.RND:='';
         __zamdst.SND:='';
         __zamdst.put(1)
      || FUN.info('Nie znaleziono dokumentu.\nWycofanie przypisania się nie powiodło.'@)
      ?}
   ?}
?}


\eanztest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdzenie czy przypisanie dokumentu ma sens do zamowienia, tzn. czy sa jakies pozycje zgodne z dokumentem
::   WY: 1-jest wszystko OK, 2-cos tam jest, 0-niczego nie ma
::  OLD: \eanztest/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_buf:=tab_tmp(5,'KTM','STRING[50]',''
       ,'KT2','STRING[50]',''
       ,'MG1','STRING[10]',''
       ,'MG2','STRING[10]',''
       ,'DKC','STRING[16]',''
       ,'ILZ','REAL',''
       ,'ILD','REAL','');

_tree:=__zamdst.ref();
__zamdst.cntx_psh();
__zamdst.clear();
__zamdst.prefix(_tree);
{? __zamdst.first()
|| {!
   |? _buf.clear();
      {? _buf.find_key(__zamdst.KOD,__zamdst.KOD,__zamdst.MAG,__zamdst.MAG,__zamdst.DKC)
      || _buf.ILZ+=(__zamdst.ILZ-__zamdst.ILS);
         {? _buf.ILZ<0 || _buf.ILZ:=0 ?};
         _buf.put(1)
      || _buf.blank();
         _buf.KTM:=_buf.KT2:=__zamdst.KOD;
         _buf.ILZ:=__zamdst.ILZ-__zamdst.ILS;
         {? _buf.ILZ<0 || _buf.ILZ:=0 ?};
         _buf.MG1:=_buf.MG2:=__zamdst.MAG;
         _buf.DKC:=__zamdst.DKC;
         _buf.ILD:=0;
         _buf.add(1)
      ?};
      __zamdst.next()
   !}
?};
__zamdst.cntx_pop();
ND.cntx_psh();
DK.cntx_psh();
ND.clear();
{? ND.seek(__gennd.SQL)
|| DK.index('DOKMAG');
   DK.prefix(ND.ref());
   {? DK.first()
   || {!
      |? _dkc:={? DK.DK_C<>null() || $DK.DK_C || 'xxx' ?};
         _buf.clear();
         _buf.prefix(DK.M().KTM,DK.M().KTM,ND.MAG().SYM,ND.MAG().SYM);
         {? _buf.first()
         || _oki:=0;
            {? DK.DK_C=null()
            || _oki:=1
            || {!
               |? _dk_c:={? _buf.DKC='xxx' || null() || exec('FindAndGet','#table','DK_C',_buf.DKC,,,null()) ?};
                  {? exec('czyzawch','mat_atr',_dk_c,DK.DK_C)
                  || _oki:=1;
                     0
                  || _buf.next()
                  ?}
               !}
            ?};
            {? _oki
            || _buf.ILD+=DK.IL;
               _buf.put(1)
            ?}
         ?};
         DK.next()
      !}
   ?}
?};
ND.cntx_pop();
DK.cntx_pop();
_all:=0;
_cos:=0;
_buf.clear();
{? _buf.first()
|| _all:=-_buf.size();
   {!
   |? {? _buf.ILD>0
      || {? _buf.ILD<=_buf.ILZ
         || _all+=1;
            _cos+=1
         || _cos+=1
         ?}
      ?};
      _buf.next()
   !}
?};
obj_del(_buf);
{? ~_all || _wyn:=1
|? _cos  || _wyn:=2
|| _wyn:=0
?};
_wyn


\ustawgwyb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: aktualizuje wybrane pozycje
::   WE: _a - 1-przypisanie 0-wycofanie
::       _b - ref __zamdst
::       _c - __gennd.SQL
::       _d - wartosc pola GAL
::   WY: 'T'-wybrano wszystko 'N'-nie wszystko
::  OLD: \ustawgwyb/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_refgal:=__zamdst.ref();
_tree:={? _d<>'' || exec('FindAndGet','#table',__zamdst,_d,,,null()) || _b ?};

_wyn:='T';
__zamdst.cntx_psh();
{? _a
|| __zamdst.clear();
   _allilz:=0;
   __zamdst.prefix(_tree);
   {? __zamdst.last()
   || {! |? _allilz+=__zamdst.ILZ; __zamdst.prev() !};
      {!
      |? {? __zamdst.ILZ>__zamdst.ILS
         || _ildo:=__zamdst.ILZ-__zamdst.ILS;
            _rozp:=0;
            __poznd.clear();
            __poznd.prefix(_c,__zamdst.KOD,__zamdst.KOD);
            {? __poznd.first()
            || {!
               |? {? __poznd.PQL=''
                  || {? __poznd.ILE=_ildo
                     || __poznd.PQL:=__zamdst.PQL;
                        __poznd.put(1);
                        _rozp+=_ildo;
                        _ildo:=0
                     |? __poznd.ILE>_ildo
                     || _roz:=__poznd.ILE-_ildo;
                        __poznd.PQL:=__zamdst.PQL;
                        __poznd.ILE:=_ildo;
                        __poznd.put(1);
                        __poznd.PQL:='';
                        __poznd.ILE:=_roz;
                        __poznd.add(1);
                        _rozp+=_ildo;
                        _ildo:=0
                     |? __poznd.ILE<_ildo
                     || _roz:=_ildo-__poznd.ILE;
                        __poznd.PQL:=__zamdst.PQL;
                        __poznd.put(1);
                        _rozp+=__poznd.ILE;
                        _ildo:=_roz
                     ?};
                     _ildo>0 & __poznd.next()
                  || __poznd.next()
                  ?}
               !}
            ?};
            __zamdst.ILS+=_rozp;
            __zamdst.put(1)
         ?};
         __zamdst.next()
      !};
      {! |? _allilz-=__zamdst.ILS; __zamdst.prev() !}
   ?}
|| _allilz:=0;
   __zamdst.clear();
   __zamdst.prefix(_tree);
   {? __zamdst.first()
   || {!
      |? {? __zamdst.ILS>0
         || _ildo:=__zamdst.ILS;
            __poznd.clear();
            __poznd.prefix(_c,__zamdst.KOD,__zamdst.KOD);
            {? __poznd.first()
            || {!
               |? {? __poznd.PQL=__zamdst.PQL
                  || __zamdst.ILS-=__poznd.ILE;
                     __zamdst.put(1);
                     __poznd.PQL:='';
                     __poznd.put(1);
                     __poznd.next()
                  || __poznd.next()
                  ?}
               !}
            ?}
         ?};
         __zamdst.next()
      !}
   ?};
   {? _d<>''
   || __zamdst.clear();
      {? __zamdst.seek(_refgal)
      || __zamdst.del()
      ?}
   ?}
?};

{? _allilz>0
||
:: automatycznie dodaje pusta powiazana galazke
   __zamdst.clear();
   {? __zamdst.seek(_b)
   || _sql:=__zamdst.SQL;
      _brak:=1;

      __zamdst.clear();
      __zamdst.prefix(0);
      {? __zamdst.first()
      || _first:=__zamdst.ref();
         __zamdst.prefix(_first);
         {? __zamdst.first()
         || {!
            |? {? __zamdst.ref()<>_b & __zamdst.SQL=_sql & __zamdst.RND=''
               || _brak:=0;
                  0
               || __zamdst.next()
               ?}
            !}
         ?}
      ?};

      {? _brak & __zamdst.seek(_tree)
   || __zamdst.GAL:=$_tree;
      __zamdst.add(1)
   ?}
   ?}
?};

__poznd.clear();
__poznd.prefix(_c);
{? __poznd.first()
|| {!
   |? {? __poznd.PQL='' || _wyn:='N' ?};
      _wyn='T' & __poznd.next()
   !}
?};

__zamdst.cntx_pop();
_wyn


\wyppoznd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wypelnia tabele pozycji wygenerowanych dokumentow
::  OLD: \wyppoznd/ean.fml
::----------------------------------------------------------------------------------------------------------------------
__gennd.cntx_psh();
__gennd.clear();
{? __gennd.first()
|| {!
   |? ND.cntx_psh();
      DK.cntx_psh();
      ND.clear();
      {? ND.seek(__gennd.SQL)
      || DK.index('DOKMAG');
         DK.prefix(ND.ref());
         {? DK.first()
         || {!
            |? __poznd.clear();
               __poznd.prefix(__gennd.SQL);
               __poznd.blank();
               __poznd.SQL:=__gennd.SQL;
               __poznd.KTM:=__poznd.KT2:=DK.M().KTM;
               __poznd.DKC:={? DK.DK_C<>null() || $DK.DK_C || 'xxx' ?};
               __poznd.ILE:=DK.IL;
               __poznd.REM:=$DK.M;
               __poznd.add(1);
               DK.next()
            !}
         ?}
      ?};
      ND.cntx_pop();
      DK.cntx_pop();
      __gennd.next()
   !}
?};
__gennd.cntx_pop();
~~


\reawgzam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: tworzy realizacje zamowienia
::   WE: _a - ref SQL zamowienia
::       _b - ref SQL ND (dokumentu PZ)
::       _c - ref SQL potwierdzenia lub zamowienia
::       [_d] - 1-tryb powiązania po 1 pozycji 0(domyślnie)-nie
::   WY: 1-jest OK 0-nie
::  OLD: \reawgzam/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_d')=type_of(0) || _d || 0 ?};
VAR_DEL.delete('__wyb_dm');

_tab:=tab_tmp(1,'SQL','STRING[16]','',
       'ILE','REAL','');

_wyn:=1;

ZD_NAG.clear();
{? ZD_NAG.seek(exec('FindAndGet','#table',ZD_NAG,_a,,,null()))
|| _ref_zd:=ZD_NAG.ref();
   _ref_nd:=exec('FindAndGet','#table',ND,_b,,,null());
   _ref_pt:={? _a<>_c || exec('FindAndGet','#table',ZDP_NAG,_c,,,null()) || null ?};
   _rmag:=exec('FindAndGet','#table',ND,_b,,"MAG",null());

:: zalozenie naglowka realizacji
   _mag:=_rmag;
   _spz:='';
   _ref:=null;
   _czy_akc:=0;
   _czy_pal:=0;
   _czy_mob:={? _ref_nd<>null()
             || exec('FindAndGet','#table',ND,_ref_nd,,"exec('czyurmob','magdok_wspolne',1)",0)
             || 0
             ?};
   _plus:=(';ZR'*exec('get','#params',600803,2))>1;
   {? _mag<>null & (_ref:=exec('zdrn_add','zamdst_rea',_ref_zd,_mag,$_ref_pt))<>null
   || _mag_sym:={? MG.seek(_mag) || MG.SYM || '' ?};
      VAR_DEL.delete('__wyb_dm');
      __wyb_dm:=1;
      _buf:=tab_tmp(1,'RP','STRING[16]','');
::    kopiowanie  zd_poz -> zd_rp
      {? exec('zdpoz2zd','zamdst_rea',_ref_zd,_ref,_mag,0,_ref_pt,,_plus)
      ||
         _ll:={? _plus || 2 || 1 ?};
::       wypelniamy co ma byc na PZ-tce
         {! _ii:=1.._ll
         |! ZD_RP.index('POZ');
            ZD_RP.prefix(_ref);
            {? ZD_RP.first()
            || BEER.JMZ:=ZD_RP.ZD_POZ().ZD_NAG().JMZ;
               {!
               |? _ilreal:={? ZD_RP.ZDP_POZ=''
                           || ZD_RP.ZD_POZ().IL_POZ
                           |? (ZDP_POZ.clear; ZDP_POZ.seek(ZD_RP.ZDP_POZ))
                           || ZDP_POZ.IL-exec('obl_rea','zamdst_rea',$ZDP_POZ.ref())
                           || 0
                           ?};
                  _ilrewi:={? ~BEER.JMZ | ZD_POZ.M().J2<>null()
                           || _ilreal
                           || _ilreal/ZD_RP.ZD_POZ().WS2 $ ZD_RP.ZD_POZ().M().DOKL
                           ?};
                  _ilredk:=0;
::               _pozost:=_ilreal;
                  _pozost:=_ilrewi;

                  {? ((_ii=1 & _ilreal>0) | _ii=2)
                   & (~_tryb  | (_buf.clear(); _buf.prefix($ZD_RP.ref()); ~_buf.first()))
                  || DK.index('DOKMAG');
                     DK.prefix(_ref_nd);
                     _poz:={? DK.last() || DK.P || 0 ?};
                     DK.index('MAM');
                     DK.prefix(_ref_nd,ZD_RP.M);
                     {? DK.first()
                     || _czy_wal:=DK.N().WAL<>INFO.NAROD;
                        _czy_pal:=DK.N().MAG().PAL='T';
                        _czy_akc:=DK.Z='T';
                        _spz:=DK.N().SYM;
                        {!
                        |? __pozydk.clear();
                           {? __pozydk.find_key($DK.ref())
                           || _il_dk:=DK.IL-__pozydk.ILP
                           || _il_dk:=DK.IL
                           ?};
                           {? _il_dk>0
                            & {? ~_czy_akc
                              || (DK.C=0 | DK.C=ZD_RP.ZD_POZ().CENA)
                               & (DK.DK_C=null | exec('czyzawch','mat_atr',ZD_RP.ZD_POZ().DK_C,DK.DK_C))
                              || 1
                              ?}
                           || {? ~_czy_akc
                              || {? _czy_wal
                                 || DK.WAL:=DK.N().WAL;
                                    DK.KURS:=DK.N().KRS;
                                    DK.CWAL:=ZD_RP.ZD_POZ().CWAL;
                                    DK.C:=ZD_RP.ZD_POZ().CENA $ DK.M().DOKL_C;
                                    {? DK.CWAL=0 & DK.C<>0 || DK.CWAL:=DK.C/DK.KURS $DK.M().DOKL_Z ?};
                                    DK.C:=DK.CWAL*DK.KURS $DK.M().DOKL_C
                                 || DK.C:=ZD_RP.ZD_POZ().CENA $DK.M().DOKL_C
                                 ?};
                                 DK.WAR:=DK.C*DK.IL $2;
                                 {? DK.DK_C=null() || DK.DK_C:=ZD_RP.ZD_POZ().DK_C ?};
                                 {? _czy_pal || exec('cen2pal','ceny_dok',0,DK.C,DK.DK_C) ?};
                                 exec('ist_wart_dk','magdok_poz',1);
                                 exec('istatr_nd2dk','magdok_poz');
                                 DK.put(1)
                              ?};
                              {? {? ~_czy_akc
                                 || 1
                                 || (DK.DK_C=null | exec('czyzawch','mat_atr',ZD_RP.ZD_POZ().DK_C,DK.DK_C))
                                 ?}
                               & (~_tryb | DK.ZAM_RP='')
                              || _oznacz:=1;
                                 _buf.clear();
                                 _buf.prefix($ZD_RP.ref());
                                 {? ~_buf.first()
                                 || _buf.RP:=$ZD_RP.ref();
                                    _buf.add(1)
                                 || _oznacz:=~_tryb
                                 ?};
                                 {? _oznacz
                                 || DK.ZAM_RP:=$ZD_RP.ref();
                                    DK.ZAM_RN:=$_ref;
                                    DK.put(1)
                                 ?};
                                 _tab.clear();
                                 {? _tab.find_key($DK.ref())
                                 || {? _il_dk>0
                                    || _przypi:={? _ii=2 || _il_dk |? _pozost>=_il_dk || _il_dk || _pozost ?}
                                    || _przypi:=0
                                    ?};
                                    _update:=1
                                 || _przypi:={? _ii=2 || _il_dk |? _pozost>=_il_dk || _il_dk || _pozost ?};
                                    _update:=0
                                 ?};
                                 {? _przypi>0
                                 || _ilredk+=_przypi;
::                              _pozost:=_ilreal-_ilredk;
                                    _pozost:=_ilrewi-_ilredk;
                                    __pozydk.clear();
                                    {? __pozydk.find_key($DK.ref())
                                    || __pozydk.ILP+=_przypi;
                                       __pozydk.put(1)
                                    || __pozydk.blank();
                                       __pozydk.SQL:=$DK.ref();
                                       __pozydk.ILE:=DK.IL;
                                       __pozydk.ILP:=_przypi;
                                       __pozydk.add(1)
                                    ?};
                                    {? _update
                                    || _tab.ILE+=_przypi;
                                       _tab.put()
                                    || _tab.blank();
                                       _tab.SQL:=$DK.ref();
                                      _tab.ILE:=_przypi;
                                       _tab.add()
                                    ?}
                                 ?}
                              ?};
                              _pozost>0 & DK.next()
                           |? _il_dk>0 & DK.IL>_il_dk & ~_czy_mob
                           || _rozbij:=_il_dk;
                              DK.IL-=_il_dk;
                              exec('ist_wart_dk','magdok_poz',1);
                              exec('istatr_nd2dk','magdok_poz');
                              DK.put(1);
                              __pozydk.clear();
                              {? __pozydk.find_key($DK.ref())
                              || __pozydk.ILE:=DK.IL;
                                 __pozydk.put(1)
                              ?};
                              _refdk:=DK.ref();
                              _poz+=1;
                              DK.P:=_poz;
                              DK.C:=0;
                              DK.WAR:=0;
                              DK.DK_C:=null;
                              DK.IL:=_rozbij;
                              DK.KH:=DK.N().KH;
                              DK.KH_ODB:=DK.N().KH_ODB;
                              DK.add();
                              DK.RDK:=#DK.ref();
                              DK.NDK:=DK.name();
                              DK.PRDK:=DK.SRDK:=$.DK.ref();
                              DK.ZAM_RP:=$ZD_RP.ref();
                              DK.ZAM_RN:=$_ref;
                              DK.put(1);
                              _buf.clear();
                              _buf.prefix($ZD_RP.ref());
                              {? ~_buf.first()
                              || _buf.RP:=$ZD_RP.ref();
                                 _buf.add(1)
                              ?};
                              _ilredk:=DK.IL;
                              _newdk:=DK.ref();
                              DK_L.cntx_psh();
                              DK_L.index('DK');
                              DK_L.prefix(_refdk,null);
                              {? DK_L.last()
                              || {!
                                 |? {? DK_L.IL>0 & DK_L.IL<=_rozbij
                                    || _rozbij-=DK_L.IL;
                                       _refdkl:=DK_L.ref();
                                       _prev:=DK_L.prev();
                                       DK_L.cntx_psh();
                                       DK_L.clear();
                                       {? DK_L.seek(_refdkl)
                                       || DK_L.DK:=_newdk;
                                          DK_L.put(1)
                                       ?};
                                       DK_L.cntx_pop()
                                    |? DK_L.IL>_rozbij
                                    || DK_L.IL-=_rozbij;
                                       exec('reoIL2','magdok_wymiary');
                                       DK_L.put(1);
                                       DK_L.cntx_psh();
                                       DK_L.clear();
                                       DK_L.IL:=_rozbij;
                                       exec('reoIL2','magdok_wymiary');
                                       DK_L.DK:=_newdk;
                                       exec('uzupIDkod','magdok_palety',DK_L);
                                       DK_L.add(1);
                                       DK_L.cntx_pop();
                                       _rozbij:=0
                                    || _prev:=DK_L.prev()
                                    ?};
                                    _rozbij>0 & _prev
                                 !}
                              ?};
                              DK_L.cntx_pop();
                              DK.first()
                           |? _il_dk>0 & ~_czy_mob
                           || DK.C:=0;
                              DK.WAR:=0;
                              DK.DK_C:=null;
                              DK.put();
                              DK.first()
                           || _pozost>0 & DK.next()
                           ?}
                        !}
                     ?};
                     {? _ilredk>0
                     || {? _ii=1
                        || ZD_RP.IL_ZRE:=_ilredk
                        || ZD_RP.IL_ZRE+=_ilredk
                        ?};
                        ZD_RP.W:='*';
                        ZD_RP.put()
                     ?}
                  ?};
                  ZD_RP.next()
               !}
            ?}
         !};
::       sprawdzamy czy ma byc cos zrealizowane
         {? exec('zdr_test','zamdst_rea',_ref)
         ||
::          jest realizacja - aktualizujemy informacje w zam. i ustawiam status
            ZD_RN.cntx_psh();
            ZD_RN.clear;
            {? ZD_RN.seek(_ref)
            || ZD_RN.MG:=_mag; ZD_RN.ND:=$_ref_nd; ZD_RN.SPZ:=_spz;
               ZD_RN.DND:={? ZD_RN.ND<>'' || exec('FindAndGet','#table',ND,ZD_RN.ND,,"D",date(0,0,0)) || date(0,0,0) ?};
               ZD_RN.put();
               exec('aktu_zam','zamdst_wspolne',_ref_zd,_plus)
            ?};
            ZD_RN.cntx_pop()
         |? _ref<>null
         ||
::          nie ma realizacji - sprzatamy smieci
            ZD_RN.cntx_psh();
            ZD_RN.clear;
            {? ZD_RN.seek(_ref) || exec('zdreusu','zamdst_rea',0) ?};
            ZD_RN.cntx_pop();
            _wyn:=2
         || _wyn:=2
         ?}
      |? _ref<>null
      || ZD_RN.cntx_psh();
         ZD_RN.clear;
         {? ZD_RN.seek(_ref) || exec('zdreusu','zamdst_rea',0) ?};
         ZD_RN.cntx_pop()
      ?};
      obj_del(_buf)
   ?};
   exec('dk_sum','magdok_wspolne',_ref_nd)
|| _wyn:=0
?};
VAR_DEL.delete('__wyb_dm');
_wyn


\zdrn_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: dodanie naglowka dla realizacji zamowienia
::   WE:  _a  -  naglowek zamowienia (ZD_NAG.ref)
::        _b - magazyn
::        _c - ref SQL potwierdzenia
::   WY:  ref zalozonego rekordu
::  OLD: \zdrn_add/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null;
ZD_RN.cntx_psh();
ZD_RN.clear();
ZD_RN.blank();
ZD_RN.ZD_NAG:=_a;
ZD_RN.MG:=_b;
ZD_RN.ZDP_NAG:=_c;
{? ZD_RN.add() || _wyn:=ZD_RN.ref ?};
ZD_RN.cntx_pop();
_wyn


\zdpoz2zd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: kopiowanie pozycji zamowienia do realizacji
::   WE:  _a - skad ref do prefiksowania poz. zamowienia (ZD_NAG.ref)
::        _b - dokad ref do prefiksowania nowych pozycji realizacji (ZD_RN.ref)
::        _c - ref magazynu
::        [_d] - czy przypisywac ilosc wg max ilosci do realizacji domyslnie 1-tak 0-nie
::        [_e] - ref potwierdzenia
::        [_f] - ref zamowienia
::        [_g] - tryb zwiększenie realizacji
::   WY:  ilosc polaczanych rekordow
::  OLD: \zdpoz2zd/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=4  || {? type_of(_d)<>1 || _d:=1 ?}  || _d:=1  ?};
{? _>=5  || {? type_of(_e)<>7 || _e:=null ?}  || _e:=null  ?};
{? _>=6  || {? type_of(_f)<>7 || _f:=null ?}  || _f:=null  ?};
_plus:={? var_pres('_g')=type_of(0) || _g || 0 ?};

_count:=0;
{? _e=null
|| ZD_POZ.index('POZ');
   ZD_POZ.prefix(_a);
   {? ZD_POZ.first()
   || {!
      |? {? (ZD_POZ.IL_POZ>0 | _plus) & (ZD_POZ.MG=_c | _c=null)
         || exec('zdrp_add','zamdst_rea',_b,ZD_POZ.ref,{? _d || ZD_POZ.IL_POZ || 0 ?},ZD_POZ.MG,{? _d || 1 || 0 ?});
            _count+=1
         ?};
         ZD_POZ.next()
      !}
   ?}
|| ZDP_POZ.index('ZDP_NAG');
   ZDP_POZ.prefix(_e);
   {? ZDP_POZ.first()
   || {!
      |? {? ZDP_POZ.IL>0 & (ZD_POZ.clear(); ZD_POZ.seek(ZDP_POZ.ZD_POZ))
          & (ZD_POZ.MG=_c | _c=null) & ZD_POZ.ZD_NAG=_a
         || exec('zdrp_add','zamdst_rea',_b,ZD_POZ.ref,{? _d || ZD_POZ.IL || 0 ?},ZD_POZ.MG,{? _d || 1 || 0 ?}
              ,$ZDP_POZ.ref());
            _count+=1
         ?};
         ZDP_POZ.next()
     !}
   ?}
?};
_count


\zdrp_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: dodanie pozycji do realizacji zamowienia
::   WE:  _a - ref z naglowka realizacji
::        _b - ref z pozycji zamowienia - powiazanie z zamowieniem
::        _c - ilosc do zrealizowania (REAL)
::        _d - magazyn (MG.ref)
::        _e - czy pozycja jest zaznaczona 0 - nie, 1 - tak
::        [_f] - ref SQL pozycji potwierdzenia
::   WY: ref utworzonego rekordu
::  OLD: \zdrp_add/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=6 || {? type_of(_f)<>2 || _f:='' ?} || _f:='' ?};

_wyn:=null;
ZD_RP.index('POZ');
ZD_RP.prefix(_a);
ZD_RP.blank();
ZD_RP.ZD_RN:=_a;
ZD_RP.ZD_POZ:=_b;
ZD_RP.IL_ZRE:=_c;
ZD_RP.MG:=_d;
ZD_RP.M:=ZD_RP.ZD_POZ().M;
ZD_RP.W:={? _e || '*' || '' ?};
ZD_RP.ZDP_POZ:=_f;
{? ZD_RP.add() || _wyn:=ZD_RP.ref ?};
_wyn


\zdr_test
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdzenie czy w realizacji zaznaczono cos do wykonania
::       UWAGA funkcja usuwa zerowe pozycje
::   WE: [_a] - ref ZD_RN, domyslnie ZD_RN.ref()
::   WY:  0    - zadna z pozycji nie bedzie realizowana
::        <> 0 - ilosc pozycji do realizacji
::  OLD: \zdr_test/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>7 || _a:=ZD_RN.ref() ?}  || _a:=ZD_RN.ref() ?};

_count:=0;
ZD_RP.index('POZ');
ZD_RP.prefix(_a);
{? ZD_RP.first()
||
   {!
   |?
      {? ZD_RP.IL_ZRE
      || _count+=1;
         ZD_RP.next()
      || ZD_RP.del()
      ?}
   !}
?};
_count


\wybWalND
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: umożliwia wybór waluty na dokumencie
::   WE: _a - ref SQL ND
::
::  OLD: \wybWalND/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
ND.cntx_psh();
{? ND.seek(_a)
||
   _p_lock:=POMOC.LOCK;
   _b_mw:=BEER.MW;
   _b_ww:=BEER.WW;
   _b_lw:=BEER.LW;

   POMOC.LOCK:='';
   BEER.MW:='M';
   exec('ustaw_ww','eurusd','M');
   exec('ust_lw','eurusd',0);

   DPOZ.SCKRSZM:=1;

:: w celu pominiecia kontroli wypelnienia pol do intrastat
   _ist_typ:=ND.IST_TYP;
   ND.IST_TYP:=exec('nd_ist_typ_bl','magdok_nag');
:: ewentualne podpowiedzenie waluty z zamówienia dostaw
   {? ND.TYP().P='T' & (5+ZAKR.REFSQL)='zdnag' & exec('spr_ww','eurusd',0)
   || _wal:=exec('FindAndGet','#table',ZD_NAG,ZAKR.REFSQL,,"WAL",INFO.NAROD);
      {? _wal<>null() & _wal<>ND.WAL || ND.WAL:=_wal ?}
   ?};
   ND.win_edit('ZD_REA');
   {? ND.edit("
         _wyn:='';
         _it:=ND.IST_TYP; ND.IST_TYP:='';
         {? ND.WAL<>INFO.NAROD & ND.KRS=0
         || FUN.info('Wypełnij kurs na zakładce: Dane podstawowe.'@); _wyn:='KRS'
         |? ND.WAL<>INFO.NAROD & ND.DTK=date(0,0,0)
         || FUN.info('Wypełnij datę kursu na zakładce: Dane podstawowe.'@); _wyn:='DTK'
         ?};
         ND.IST_TYP:=_it;
         _wyn
      ")
   || ND.IST_TYP:=_ist_typ;
      HELP.WAL:=ND.WAL;
      ND.put(1)
   ?};
   DPOZ.SCKRSZM:=0;

   POMOC.LOCK:=_p_lock;
   BEER.MW:=_b_mw;
   BEER.WW:=_b_ww;
   BEER.LW:=_b_lw
?};
ND.cntx_pop();
~~


\rea_dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Przeglądanie informacji o dostawach danego indeksu materiałowego w magazynie
::----------------------------------------------------------------------------------------------------------------------
__rea_tab.cntx_psh();
_mag:=exec('FindAndGet','#table',MG,__rea_tab.MG_REF,,,null());
_mat:=exec('FindAndGet','#table',M,__rea_tab.M_REF,,,null());
exec('sm_dost','magazyn_stan',_mag,_mat);
__rea_tab.cntx_pop();
~~


\dk2zdnag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: aktualizacja zamowienia, realizacji na podstawie pozycji DK
::   WE: _a - parametr
::       _b - ref ND
::       _c - ref DK
::       _d - DK.ZAM_RN
::       _e - DK.ZAM_RP
::       _f - ref indeksu materiałowego
::       _g - ilosc
::       _h - indeks przed
::       _i - ilosc przed
::   WY - ref ZD_RN + ref ZD_RP w postaci SQL-a
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_rzkrn:=_d;
_par:=_a;
_refzd:=null();
{? _par='' | _par='N' | (_f=_h & _g=_i)
|| ''
|? (_rzkrn<>'' | (_rzkrn:=exec('pobzkrn','zamsiw_rea',_b))<>'') & _rzkrn*'__'
||
   {? exec('FindAndGet','#table',ZD_RN,_rzkrn,,"ZD_NAG().STAT_REJ",'')='A'
   ||
      FUN.info('Zamówienie jest anulowane. Pominięto aktualizację zamówienia i jego realizacji.'@);
      return('')
   ?};
   {? _par='P'
   || _opc:=FUN.choice('Pozycja (dokument) powstała w wyniku realizacji zamówienia.\nWybierz jedną z opcji:'@,,
                       'Aktualizować &zamówienie'@,'Aktualizować &realizację'@);
      {? _opc=1 || _par:='Z'
      |? _opc=2 || _par:='R'
      || _par:='N'
      ?}
   ?};
   {? _par='Z' | _par='R'
   || _dol:=_f<>_h;
      _ile:={? _f=_h || _g-_i || _g ?};
      BEER.MG:=ND.MAG;
      ZD_RN.cntx_psh();
      ZD_RP.cntx_psh();
      {? _e<>'' & ~_dol
      || ZD_RP.clear();
         {? ZD_RP.seek(_e)
         || BEER.JMZ:=ZD_RP.ZD_POZ().ZD_NAG().JMZ;
            _ilpoz:={? ~BEER.JMZ
                    || ZD_RP.ZD_POZ().IL_POZ
                    || ZD_RP.ZD_POZ().IL_POZ/ZD_RP.ZD_POZ().WS2 $ ZD_RP.ZD_POZ().M().DOKL
                    ?};
            {? (_par='R' | _par='Z') & (_ile<0 | _ile<=_ilpoz)
            || {? _par='R' & _ile<0 & _i>ZD_RP.IL_ZRE || _ile:=_g-ZD_RP.IL_ZRE ?};
               ZD_RP.IL_ZRE+=_ile;
               ZD_RP.put(1);
               _wyn:=$ZD_RP.ref();
               ZD_POZ.clear();
               {? ZD_POZ.seek(ZD_RP.ZD_POZ)
               || {? BEER.JMZ || _ile:=_ile/ZD_POZ.WS2 $ ZD_POZ.M().DOKL ?};
                  _refzd:=ZD_POZ.ZD_NAG;
                  ZD_POZ.IL_POZ-=_ile;
                  ZD_POZ.IL_ZRE+=_ile;
                  exec('zdp_obl','zamdst_poz');
                  {? ZD_POZ.put(1) || exec('war_zam','zamdst_wspolne',ZD_POZ.ZD_NAG) ?};
                  exec('obl_stan','magazyn_stan',ZD_POZ.M,1,ZD_POZ.MG,,,,,,0)

               ?}
            |? _par='R' & _ile>_ilpoz
            || _ile:=_ilpoz;
               ZD_RP.IL_ZRE+=_ile;
               ZD_RP.put(1);
               _wyn:=$ZD_RP.ref();
               ZD_POZ.clear();
               {? ZD_POZ.seek(ZD_RP.ZD_POZ)
               || _refzd:=ZD_POZ.ZD_NAG;
                  ZD_POZ.IL_POZ:=0;
                  ZD_POZ.IL_ZRE:=ZD_POZ.IL_ZAM;
                  exec('zdp_obl','zamdst_poz');
                  {? ZD_POZ.put(1) || exec('war_zam','zamdst_wspolne',ZD_POZ.ZD_NAG) ?};
                  exec('obl_stan','magazyn_stan',ZD_POZ.M,1,ZD_POZ.MG,,,,,,0)
               ?}
            |? _par='Z' & _ile>_ilpoz
            || _rozn:=_ile-_ilpoz;
               ZD_RP.IL_ZRE+=_ile;
               ZD_RP.put(1);
               _wyn:=$ZD_RP.ref();
               ZD_POZ.clear();
               {? ZD_POZ.seek(ZD_RP.ZD_POZ)
               || {? BEER.JMZ || _rozn:=_rozn/ZD_POZ.WS2 $ ZD_POZ.M().DOKL ?};
                  _refzd:=ZD_POZ.ZD_NAG;
                  ZD_POZ.IL_POZ:=0;
                  ZD_POZ.IL+=_rozn;
                  ZD_POZ.IL_ZRE:=ZD_POZ.IL;
                  ZD_POZ.IL_KOR:=ZD_POZ.IL-ZD_POZ.IL_ZAM;
                  _mjs:=ATR.MJS;
                  ATR.MJS:='ZD_POZ';
                  exec('aktdil2','zamdst_poz');
                  ATR.MJS:=_mjs;
                  exec('zdp_obl','zamdst_poz');
                  {? ZD_POZ.put(1) || exec('war_zam','zamdst_wspolne',ZD_POZ.ZD_NAG) ?};
                  exec('obl_stan','magazyn_stan',ZD_POZ.M,1,ZD_POZ.MG,,,,,,0)
               ?}
            ?}
         ?}
      || ZD_RN.clear();
         {? ZD_RN.seek(_rzkrn)
         ||
            _zd_rn:=ZD_RN.ref();
::          szukamy ZD_POZ o ilości pozostałej wiekszej lub równej zadanej dla danego nowego indeksu materiałowego
            _zdpoz:=exec('find_zdpoz','zamdst_poz',ZD_RN.ZD_NAG,_f,_ile,_par='Z');
            BEER.JMZ:=exec('FindAndGet','#table',ZD_NAG,ZD_RN.ZD_NAG,,"JMZ",0);
            _ilpoz:={? _zdpoz<>null()
                    || exec('FindAndGet','#table',ZD_POZ,_zdpoz,
                        ,"{? ~BEER.JMZ
                          || IL_POZ
                          || IL_POZ/{? WS2>0 || WS2 || 1 ?}$M().DOKL
                          ?}")
                    || 0
                    ?};
::          usuniecie poprzedniej realizacji
            {? _e<>''
            || ZD_RP.clear();
               {? ZD_RP.seek(_e)
               || _wyn:='';
                  ZD_POZ.clear();
                  {? ZD_POZ.seek(ZD_RP.ZD_POZ)
                  || {? BEER.JMZ
                     || _ilzre:=ZD_RP.IL_ZRE/ZD_POZ.WS2 $ ZD_POZ.M().DOKL
                     || _ilzre:=ZD_RP.IL_ZRE
                     ?};
                     _refzd:=ZD_POZ.ZD_NAG;
                     ZD_POZ.IL_POZ+=_ilzre;
                     ZD_POZ.IL_ZRE-=_ilzre;
                     exec('zdp_obl','zamdst_poz');
                     {? ZD_POZ.put(1) || exec('war_zam','zamdst_wspolne',ZD_POZ.ZD_NAG) ?};
                     exec('obl_stan','magazyn_stan',ZD_POZ.M,1,ZD_POZ.MG,,,,,,0)
                  ?};
                  ZD_RP.del()
               ?}
            ?};
::          dodajemy nowa pozycje realizacji
            {? _zdpoz<>null
            || ZD_RP.clear();
               ZD_RP.blank();
               ZD_RP.ZD_RN:=_zd_rn;
               ZD_RP.ZD_POZ:=_zdpoz;
               ZD_RP.IL_ZRE:=_ile;
               ZD_RP.MG:=BEER.MG;
               ZD_RP.M:=ZD_RP.ZD_POZ().M;
               {? ZD_RP.add(1) || _wyn:=$ZD_RP.ref() ?};
               ZD_POZ.clear();
               {? ZD_POZ.seek(ZD_RP.ZD_POZ)
               || _refzd:=ZD_POZ.ZD_NAG;
                  {? BEER.JMZ
                  || _ilzre:=ZD_RP.IL_ZRE/ZD_POZ.WS2 $ ZD_POZ.M().DOKL
                  || _ilzre:=ZD_RP.IL_ZRE
                  ?};
                  {? ZD_RP.IL_ZRE<=_ilpoz
                  || ZD_POZ.IL_POZ-=_ilzre;
                     ZD_POZ.IL_ZRE+=_ilzre
                  || _rozn:=_ilzre-_ilpoz;
                     ZD_POZ.IL_POZ:=0;
                     ZD_POZ.IL+=_rozn;
                     ZD_POZ.IL_ZRE:=ZD_POZ.IL_ZAM;
                     ZD_POZ.IL_KOR:=_ilpoz-ZD_POZ.IL_ZAM;
                     _mjs:=ATR.MJS;
                     ATR.MJS:='ZD_POZ';
                     exec('aktdil2','zamdst_poz');
                     ATR.MJS:=_mjs;
                     exec('zdp_obl','zamdst_poz')

                  ?};
                  {? ZD_POZ.put(1) || exec('war_zam','zamdst_wspolne',ZD_POZ.ZD_NAG) ?};
                  exec('obl_stan','magazyn_stan',ZD_POZ.M,1,ZD_POZ.MG,,,,,,0)
               ?}
            |? _par='Z'
            ||
::             tworzymy pozycje zamowienia i ja realizujemy
               ZD_NAG.clear();
               {? ZD_NAG.seek(ZD_RN.ZD_NAG)
               || ZD_POZ.clear();
                  ZD_POZ.blank();
                  ZD_POZ.M:=_f;
                  ZD_POZ.MG:={? ZD_POZ.M().RODZ='T' || BEER.MG || null() ?};
                  ZD_POZ.IL:=ZD_POZ.IL_KOR:=_g;
                  ZD_POZ.IL_ZRE:=_g;
                  ZD_POZ.IL_POZ:=0;
                  ZD_POZ.DK_C:={? $_c<>'' || exec('FindAndGet','#table',DK,_c,,"DK_C",null()) || null() ?};
                  ZD_POZ.JM:=ZD_POZ.M().J;
                  ZD_POZ.J2:=ZD_POZ.JM;
                  ZD_POZ.T2:='N';
                  ZD_POZ.WS2:=1;
                  ZD_POZ.IL2:=ZD_POZ.IL_ZAM;
                  ZD_POZ.KH:=ZD_POZ.ZD_NAG().KH;
                  ZD_POZ.KH_MSC:=ZD_POZ.ZD_NAG().KH_MSC;
                  ZD_POZ.TRN:=ZD_POZ.ZD_NAG().TRN;
                  ZD_POZ.POJAZD:=ZD_POZ.ZD_NAG().POJAZD;
                  exec('taz_sd_set','ceny');
                  {? {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?}
                  || KALK.JM:=KALK.J2:=ZD_POZ.M().J; KALK.WS2:=1;
                     exec('stplicz','ceny',ZD_POZ.IL);
                     {? ZD_POZ.MG<>null() & ZD_POZ.MG().IL='T'
                     || ZD_POZ.CENA:=0;
                        ZD_POZ.KRS:=0;
                        ZD_POZ.CWAL:=0
                     || {? ZD_POZ.ZD_NAG().WAL=INFO.NAROD
                        || exec('ceny_mat','ceny_mat',ZD_POZ.M,ZD_NAG.KH,'ZD_POZ.CENA',0,,'','N',INFO.NAROD
                            ,'',,0,,,0,0,0)
                        || exec('ceny_mat','ceny_mat',ZD_POZ.M,ZD_NAG.KH,'ZD_POZ.CWAL',0,,'','T',ZD_NAG.WAL
                            ,'ZD_POZ.CWAL',ZD_NAG.KRS,0,,,0,0,0)
                        ?}
                     ?};
                     exec('zdp_obl','zamdst_poz')
                  ?};
                  {? ZD_POZ.add(1)
                  || _refzd:=ZD_POZ.ZD_NAG;
                     exec('inf_dod','fakso',0,'zdpoz');
                     exec('war_zam','zamdst_wspolne',ZD_POZ.ZD_NAG);
                     exec('obl_stan','magazyn_stan',ZD_POZ.M,1,ZD_POZ.MG,,,,,,0);
                     ZD_RP.clear();
                     ZD_RP.blank();
                     ZD_RP.ZD_RN:=_zd_rn;
                     ZD_RP.ZD_POZ:=ZD_POZ.ref();
                     ZD_RP.IL_ZRE:=_g;
                     ZD_RP.MG:=BEER.MG;
                     ZD_RP.M:=ZD_RP.ZD_POZ().M;
                     {? ZD_RP.add(1) || _wyn:=$ZD_RP.ref() ?}
                  ?}
               ?}
            ?}
         ?}
      ?};
      {? _wyn<>'' & _refzd<>null() || exec('aktu_zam','zamdst_wspolne',_refzd) ?};
      ZD_RN.cntx_pop();
      ZD_RP.cntx_pop()
   ?}
?};
_wyn


\ustawPRF
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: ustawia pole PRF dla ZD_RN-a
::----------------------------------------------------------------------------------------------------------------------
_buf:=tab_tmp(1,'ND','STRING[16]','');
ZD_RN.cntx_psh();
ZD_RN.index('ZDP_NAG');
ZD_RN.prefix(_a,_a);
{? ZD_RN.first()
|| {!
   |? ZD_RN.PRF:=0;
      ZD_RN.put(1);
      ZD_RN.next()
   !}
?};
ZD_RN.prefix(_a,_a);
{? ZD_RN.first()
|| {!
   |? {? ZD_RN.PRF=0
      || _ref:=ZD_RN.ref(); _next:=ZD_RN.next();
         ZD_RN.cntx_psh();
         ZD_RN.prefix();
         {? ZD_RN.seek(_ref) & ZD_RN.ND<>'' & (_buf.clear(); _buf.prefix(ZD_RN.ND,); ~_buf.first())
         || ZD_RN.PRF:=1;
            ZD_RN.put(1);
            _buf.blank();
            _buf.ND:=ZD_RN.ND;
            _buf.add(1)
         ?};
         ZD_RN.cntx_pop();
         _next
      || ZD_RN.next()
      ?}
   !}
?};
ZD_RN.cntx_pop();
obj_del(_buf);
~~


\reaUdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: realizacja usług i powiazanych dokumentow realizacji
::       na podstawie tabel __rea_dok, __rea_tab oraz parametrow __nd_*
::   WE: _a - zszywka (identyfikator jednoczesnych realizacji)
::   WY: ND.ref() - gdy dokument poprawnie wygenerowany
::  OLD: \rea_dok/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_grp_key:=_a+'1';
_res:=0;

_do_state:=do_state();
{? _do_state=0 || do() ?};
:: generacja ZD_RN i ZD_RP - naglowki i pozycje realizacji - dla aktualnego magazynu

_ref_zdrn:={? ZD_RN.size() || ZD_RN.ref() || null ?};
ZD_NAG.cntx_psh();
ZD_POZ.cntx_psh();
ZD_RN.cntx_psh();
ZD_RP.cntx_psh();
_qq:=$"
   select distinct
      :_a.ZD_NAG as ZD_NAG
   from
      :_a
   where
      :_a.TOWAR='U'
   order by 1
";
_zd_nag:=sql(_qq,__rea_tab);
{? _zd_nag.first()
||
   {!
   |?
      ZD_NAG.prefix();
      {? 8+_zd_nag.ZD_NAG=ZD_NAG.name() & ZD_NAG.seek(_zd_nag.ZD_NAG)
      ||
         ZD_RN.clear();
         ZD_RN.blank();
         ZD_RN.ZD_NAG:=ZD_NAG.ref();
         ZD_RN.SPZ:='- USŁUGI -';
         ZD_RN.MG:=null();
         ZD_RN.ND:='';
         ZD_RN.DND:=date(0,0,0);
         {? POMOC.ZDP_NAG<>null || ZD_RN.ZDP_NAG:=$POMOC.ZDP_NAG ?};
         ZD_RN.GRP_KEY:=_grp_key;
         _ok:=0;
         {? ZD_RN.add()
         ||
            POM.TYPDOK:='ZDR'; POM.TAB:='ZD_RN';
            exec('numer_new','numery','PACZKA');
            exec('znak','numery','ZD_RN');
            _ok:={? ZD_RN.NR=0 || undo; 0 || ZD_RN.put(1) ?}
         ?};
         {? _ok
         || _res:=1;
            _ref_zdrn:=ZD_RN.ref();
::             utworzenie pozycji ZD_RP
            _ndx:=__rea_tab.ndx_tmp(,,'TOWAR',,,'ZD_NAG',,,'ZD_NAG',,,'POZ',,);
            __rea_tab.index(_ndx);
            __rea_tab.prefix('U',_zd_nag.ZD_NAG,_zd_nag.ZD_NAG);
            {? __rea_tab.first()
            || _reagrp:=sql('select distinct :_a.REA, :_a.DKC, sum(:_a.ILE) ILE  '
                            'from :_a group by :_a.REA, :_a.DKC order by 1,2',__rea_wym);
               {!
               |?
                  {? __rea_tab.IL_REA>0
                  ||
                     ZD_POZ.clear();
                     {? ZD_POZ.seek(__rea_tab.ZD_POZ)
                     ||
                        _reagrp.clear();
                        _reagrp.prefix($__rea_tab.ref());
                        {? _reagrp.first()
                        || {!
                           |? __rea_wym.clear();
                              __rea_wym.prefix($__rea_tab.ref(),_reagrp.DKC);
                              {? __rea_wym.first()
                              || _dk_ref:=null();
                                 ZD_RP.clear();
                                 ZD_RP.blank();
                                 ZD_RP.ZD_RN:=ZD_RN.ref();
                                 ZD_RP.ZD_POZ:=ZD_POZ.ref();
                                 ZD_RP.IL_ZRE:=_reagrp.ILE;
                                 ZD_RP.MG:=null();
                                 ZD_RP.M:=ZD_POZ.M;
                                 ZD_RP.ZDP_POZ:=__rea_tab.ZDPP_REF;
                                 ZD_RP.add()
                              ?};
                              _reagrp.next()
                           !}
                        || ZD_RP.clear();
                           ZD_RP.blank();
                           ZD_RP.ZD_RN:=ZD_RN.ref();
                           ZD_RP.ZD_POZ:=ZD_POZ.ref();
                           ZD_RP.IL_ZRE:=__rea_tab.IL_REA;
                           ZD_RP.MG:=ST.MAG;
                           ZD_RP.M:=ZD_POZ.M;
                           ZD_RP.ZDP_POZ:=__rea_tab.ZDPP_REF;
                           ZD_RP.add()
                        ?}
                     ?}
                  ?};
                  __rea_tab.next()
               !};
               obj_del(_reagrp)
            ?};
            __rea_tab.ndx_drop(_ndx)
         ?}
      ?};
      exec('aktu_zam','zamdst_wspolne',ZD_NAG.ref(),__ilplus);
      _zd_nag.next()
   !}
?};

ZD_RP.cntx_pop();
ZD_RN.cntx_pop();
ZD_POZ.cntx_pop();
ZD_NAG.cntx_pop();
:: ustawia na ostatnio wygenerowanej realizacji
{? _ref_zdrn<>null || ZD_RN.seek(_ref_zdrn) ?};
{? ~_res || undo() ?};
{? _do_state=0 || end ?};
_res


\be_popop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: przed popraw dla tabeli __rea_dok
::   WE: [_a] - typ dokumentu (TYPYDOK.T)
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
__rea_dok.MAGAZYN<>'- USŁUGI -'


\sprzdnkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: sprawdza czy istnieja zamowienia dla danego kontrahenta gotowe do realizacji = wiecej niz dwa
::   WE: _a - kontrahent
::       _b - typ zamowienia
::       _c - magazyn (jesli paletowy) lub null
::   WY: 1-wiecej niz jedno 0-tylko jedno lub wogole brak 2-jesli przypisano rozne dokumenty do realizacji
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
BEER.KH:=_a;
_pl:=ZD_NAG.PL;
_jmz:=ZD_NAG.JMZ;

ZD_NAG.cntx_psh();
ZD_NAG.index('AKC');
ZD_NAG.prefix('T',_b,_a);
{? ZD_NAG.first()
||
   {!
   |?
      {? (';AC'*ZD_NAG.STAN)>1
       & ZD_NAG.JMZ=_jmz & ZD_NAG.DATA<=date(ST.AR,ST.AM,0)
       & exec('realWGdysp','transport_wspolne',ZD_NAG.uidref(),1)
      || _wyn+=1;
::       wypelnienie filtru zamowien
         __filtrz.clear;
         __filtrz.blank();
         __filtrz.SYM:=ZD_NAG.SYM;
         __filtrz.DAT:=ZD_NAG.DATA;
         __filtrz.TRM:=ZD_NAG.DTPREAL;
         __filtrz.ZDN:=$ZD_NAG.ref();
         {? POMOC.ZD_NAG=ZD_NAG.ref() || __filtrz.WYB:=1 ?};
         __filtrz.add(1)
      ?};
      ZD_NAG.next()
   !}
?};
ZD_NAG.cntx_pop();
_wyn:={? _wyn>1 || 1 || 0 ?};
_wyn


\odsw_inf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: wyswietla informacje o zamowieniach
::----------------------------------------------------------------------------------------------------------------------
BEER.AKTZKN:=__rea_tab.ZD_NAG;
_zd_nag:=__rea_tab.ZD_NAG;
__filtrz.clear();
__filtrz.first() & __filtrz.find_tab('first','ZDN',,'=',_zd_nag);
grp_disp(__filtrz,__filtrz.win_sel('?'));
exec('odsw_poz','zamdst_rea');
1


\add_zamr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: dodaje pozycje zamowienia do realizacji
::   WE: [_a] - 0(domyślnie) - d&d 1-akcja 2-pozycje zamówienia 3-pozycje potwierdzeń
::  OLD: \add_zamr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_pzd_nag:=POMOC.ZD_NAG;
_pzdpnag:=POMOC.ZDP_NAG;

_err:=0;
_blk:=0;
{? ~_tryb
|| _tab:=dnd_info('dropped_records')
|| {? _tryb=1
   || {? __filtrz.sel_size()
      || _tab:=__filtrz.sel_aget();
         __filtrz.sel_adel()
      || _tab:=tab_tmp(1,'REF','INTEGER','');
         _tab.blank();
         _tab.REF:=#__filtrz.ref();
         _tab.add(1)
      ?}
   |? _tryb=2
   || {? ZD_POZ.sel_size()
      || _tab:=ZD_POZ.sel_aget();
         ZD_POZ.sel_adel()
      || _tab:=tab_tmp(1,'REF','INTEGER','');
         _tab.blank();
         _tab.REF:=#ZD_POZ.ref();
         _tab.add(1)
      ?}
   |? _tryb=3
   || {? ZDP_POZ.sel_size()
      || _tab:=ZDP_POZ.sel_aget();
         ZDP_POZ.sel_adel()
      || _tab:=tab_tmp(1,'REF','INTEGER','');
         _tab.blank();
         _tab.REF:=#ZDP_POZ.ref();
         _tab.add(1)
      ?}
   ?}
?};
{? _tab.size() & _tab.first()
|| _refwzor:={? POMOC.ZDP_NAG<>null() & _tryb=3 || $POMOC.ZDP_NAG || $POMOC.ZD_NAG ?};
   _blk:=0;
   __filtrz.cntx_psh();
   __rea_tab.cntx_psh();
   ZD_NAG.cntx_psh();
   ZD_POZ.cntx_psh();
   ZDP_NAG.cntx_psh();
   ZDP_POZ.cntx_psh();
   {!
   |? _ok:=-1;
      {? _tryb<2 & (__filtrz.clear; __filtrz.seek(_tab.REF,))
       & (ZD_NAG.clear(); ZD_NAG.seek(__filtrz.ZDN))
       & (_ok:=exec('jigsaw','zamsiw_wspolne',_refwzor,ZD_NAG.ref()); _ok)
::          & {? exec('add_blk','zamsiw_nag',ZK_N.ref()) || 1 || _blk+=1; 0 ?}
      || {? exec('rea_zadd','zamdst_rea',null(),null(),1)
         || __filtrz.WYB:=1;
            __filtrz.put(1)
         ?}
      |? _tryb=2 & (ZD_POZ.prefix(); ZD_POZ.seek(_tab.REF,))
       & (ZD_NAG.prefix(); ZD_NAG.seek(ZD_POZ.ZD_NAG))
       & (_ok:=exec('jigsaw','zamsiw_wspolne',_refwzor,ZD_NAG.ref()); _ok)
::          & {? exec('add_blk','zamsiw_nag',ZK_N.ref()) || 1 || _blk+=1; 0 ?}
      || {? exec('rea_zadd','zamdst_rea',null(),null(),1,ZD_POZ.ref())
         || __filtrz.prefix();
            {? __filtrz.first() & __filtrz.find_tab('first','ZDN',,'=',$ZD_NAG.ref())
            || __filtrz.WYB:=1;
               __filtrz.put(1)
            ?}
         ?}
      |? _tryb=3 & (ZDP_POZ.prefix(); ZDP_POZ.seek(_tab.REF,))
       & (ZDP_NAG.prefix(); ZDP_NAG.seek(ZDP_POZ.ZDP_NAG))
::       & (_ok:=exec('jigsaw','zamsiw_wspolne',_refwzor,ZD_NAG.ref()); _ok)
::          & {? exec('add_blk','zamsiw_nag',ZK_N.ref()) || 1 || _blk+=1; 0 ?}
      || {? exec('rea_zadd','zamdst_rea',ZDP_NAG.ref(),null(),1,ZDP_POZ.ref())
         || 'oki'
         ?}
      ?};
      _err+=_ok=0;
      _tab.next()
   !};
   __filtrz.cntx_pop();
   __rea_tab.cntx_pop();
   ZD_NAG.cntx_pop();
   ZD_POZ.cntx_pop();
   ZDP_NAG.cntx_pop();
   ZDP_POZ.cntx_pop()
?};
{? _err | _blk
|| FUN.info({? _err
            || 'Nie dodano do listy realizacji %1 zamówień\n'
               '(zmienił się ich status, np. zostały odakceptowane).'@[form(_err,,0,'99')]
            || ''
            ?}+
            {? _blk
            || {? _err || '\n\n' || '' ?}+'Nie dodano do listy realizacji %1 zamówień\n'
                                          '(zablokowane przez innego użytkownika).'@[form(_blk,,0,'99')]
            || ''
            ?})
?};
grp_disp(__rea_tab,__rea_sel);
POMOC.ZD_NAG:=_pzd_nag;
POMOC.ZDP_NAG:=_pzdpnag;
1


\del_zamr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: usuwa pozycje zamowienia do realizacji
::   WE: [_a] - tryb: 0(domyślnie) -d&, 1 - akcja
::  OLD: \del_zamr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_pzd_nag:=POMOC.ZD_NAG;
_pzdpnag:=POMOC.ZDP_NAG;

_akt:={? POMOC.ZDP_NAG=null() || $POMOC.ZD_NAG || '' ?};
_pozakt:=0;

{? ~_tryb
|| _tab:=dnd_info('dropped_records')
|| {? __rea_tab.sel_size()
   || _tab:=__rea_tab.sel_aget();
      __rea_tab.sel_adel()
   || _tab:=tab_tmp(1,'REF','INTEGER','');
      _tab.blank();
      _tab.REF:=#__rea_tab.ref();
      _tab.add(1)
   ?}
?};

{? _tab.size() & _tab.first()
|| _lst:=tab_tmp(2,'ZDN','STRING[16]','','REA','INTEGER','','SYM','STRING[20]','');

   __filtrz.cntx_psh();
   __rea_tab.cntx_psh();
   ZD_NAG.cntx_psh();
   {!
   |? {? (__rea_tab.clear; __rea_tab.seek(_tab.REF,))
      || {? (_akt<>__rea_tab.ZD_NAG)
         || _lst.clear();
            {? ~_lst.find_key(__rea_tab.ZD_NAG,#__rea_tab.ref())
            || _lst.blank();
               _lst.ZDN:=__rea_tab.ZD_NAG;
               _lst.REA:=#__rea_tab.ref();
               _lst.SYM:=__rea_tab.SYM;
               _lst.add(1)
            ?}
         || _pozakt:=_akt<>''
         ?}
      ?};
      _tab.next()
   !};

   _lst.clear();
   {? _lst.first()
   || {!
      |? __rea_tab.prefix();
         {? __rea_tab.seek(_lst.REA,)
         || __rea_tab.del();
            __filtrz.prefix(_lst.SYM,_lst.ZDN);
            {? __filtrz.first()
            || __rea_tab.cntx_psh();
               __rea_tab.prefix();
               _wyb:=~__rea_tab.first() | ~__rea_tab.find_tab('first','ZD_NAG',,'=',_lst.ZDN);
               __rea_tab.cntx_pop();
               {? _wyb || __filtrz.WYB:=0; __filtrz.put(1) ?}
            ?}
         ?};
         _lst.next()
      !}
   ?};

   obj_del(_lst);
   __filtrz.cntx_pop();
   __rea_tab.cntx_pop();
   ZD_NAG.cntx_pop();
   grp_disp(__rea_tab,__rea_sel);
   {? _akt<>'' || exec('odsw_inf','zamdst_rea') ?}
?};
POMOC.ZD_NAG:=_pzd_nag;
POMOC.ZDP_NAG:=_pzdpnag;
{? _pozakt
|| FUN.info('Uwaga. Nie zostały usunięte pozycje do realizacji z danego zamówienia dostaw.'@)
?};
1


\odsw_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: pokazuje pozycje zamówienia
::----------------------------------------------------------------------------------------------------------------------
_zd_nag:=exec('FindAndGet','#table',ZD_NAG,__filtrz.ZDN,,"ref()",null());
ZD_POZ.index('POZ');
ZD_POZ.prefix(_zd_nag);
ZD_POZ.first();
grp_disp(ZD_POZ,'WER_REA');
~~


\odswppoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: pokazuje pozycje zamówienia
::----------------------------------------------------------------------------------------------------------------------
_zdp_poz:={? __rea_tab.ZDPP_REF=''
          || _tree:=__rea_tab.ref();
             {? _tree=null()
             || ''
             || __rea_tab.cntx_psh();
                __rea_tab.prefix(_tree);
                _res:={? __rea_tab.first() || __rea_tab.ZDPP_REF || '' ?};
                __rea_tab.cntx_pop();
                _res
             ?}
          || __rea_tab.ZDPP_REF
          ?};
ZDP_POZ.f_seek(_zdp_poz);
grp_disp(ZDP_POZ,'WER_REA');
~~


\dispzd_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: wyswietla podglad naglowka zamowienia
::----------------------------------------------------------------------------------------------------------------------
__filtrz.cntx_psh();
ZD_NAG.cntx_psh();
ZD_NAG.clear();
{? ZD_NAG.seek(__filtrz.ZDN)
|| exec('zdnag_display','zamdst_nag')
?};
__filtrz.cntx_pop();
ZD_NAG.cntx_pop();
~~

:Sign Version 2.0 jowisz:1045 2024/01/22 14:40:28 3c8a3881e89f5e7bd0958e434fb70ff626abb10c7ca9931933739f1e55dff9cfe315f57bd3485bc4897bcef007430fbb025883a3b9511386d3b6dd5325692186402e00e990667d34df546dbfc0e95fc776d09f57b4d6831b4721ae0c54a916c407002b66d1a0ede7c5eefa271afa3d49a2b64b1b359f5bee2aa0f36e265fefc5
