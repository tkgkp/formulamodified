:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zam_okr_rok.fml
:: Utworzony: 16.12.2015
:: Autor: AMK
::======================================================================================================================
:: Zawartość: Obsługa zamykania lat i okresów
::======================================================================================================================


\zam_okr1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [????]
:: OPIS: Zamkniecie okresu obrachunkowego - formuła sprawdzająca
::       Bazuje na okresie z OKRESY.ZO
::   WE: _a - 0 = zamkniecie zwyklego okresu obrachunkowego od BO do grudnia
::            1 = zamkniecie roku
::       _b - 1/0 - czy wyświetlać pytanie o zamknięciu okresu/roku
::  OLD: \zam_okr/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
OKR_OBSZ.cntx_psh(); OKRO.cntx_psh();
OKRO_F.cntx_psh(); OKRO_F.prefix();
ROK_F.cntx_psh(); ROK_F.prefix();
_okroBO:=OKRESY.ZO().NAZ='Bilans otwarcia';
_okroBZ:=OKRESY.ZO().NAZ='Bilans zamknięcia';
VAR_DEL.delete('ZAMKNIJ');
ZAMKNIJ:=obj_new(@.CLASS.ZAM_CLASS);
ROK_F.cntx_psh(); ROK_F.prefix(); OKRO_F.ROK();
naz_okr:=OKRO_F.NAZ+' '+ROK_F.NAZ;
naz_rok:=ROK_F.NAZ;
ROK_F.cntx_pop();
_b_dom:=exec('szuk_b_dom','parses','FKS');
{? ~_b_dom
|| ZAMKNIJ.OK:=0;
   ZAMKNIJ.ERRTXT:='W systemie nie znaleziono zdefiniowanego obszaru Finanse.'@; _dalej:=0
?};
{? ZAMKNIJ.OK & _a=0 & OKRESY.ZO().ZAM='T'
|| ZAMKNIJ.OK:=0;
   ZAMKNIJ.ERRTXT:='Okres %1 jest zamknięty.'@[naz_okr];
   zam_okr:=1
?};
{? ZAMKNIJ.OK & _a=1 & OKRESY.ZR().ZAM='T'
|| ZAMKNIJ.OK:=0;
   ZAMKNIJ.ERRTXT:='Rok %1 jest zamknięty.'@[naz_rok];
   zam_okr:=1
?};
{? ZAMKNIJ.OK & _a=0
|| OKR_OBSZ.cntx_psh(); OKR_OBSZ.index('OKRO_F2'); OKR_OBSZ.prefix(_b_dom,OKRESY.ZO);
   {? ~OKR_OBSZ.first()
   || ZAMKNIJ.OK:=0;
      ZAMKNIJ.ERRTXT:='Okres %1 nie jest uruchomiony dla obszaru Finanse.'@[naz_okr]
   ?};
   OKR_OBSZ.cntx_pop()
?};
{? ZAMKNIJ.OK & ~exec('a_lic','zam_okr_rok',_b_dom)
|| ZAMKNIJ.OK:=0;
   ZAMKNIJ.ERRTXT:='Brak aktywnej licencji dla obszaru Finanse.'@
?};
{? ZAMKNIJ.OK
|| {? _a || exec('test_dok','zam_okr_rok',1) ?};
   {? _okroBZ & ~_a
   || ZAMKNIJ.OK:=0;
      ZAMKNIJ.ERRTXT:='Okresu \"Bilans zamknięcia\" nie można zamknąć tą akcją.'@
   ?}
?};
{? ZAMKNIJ.OK & _a=0
|| _bdomfst:=exec('szuk_b_dom','parses','FST');
   OKR_OBSZ.cntx_psh(); OKR_OBSZ.index('OKRO_F2'); OKR_OBSZ.prefix(_bdomfst,OKRESY.ZO);
   _o_fst:=OKR_OBSZ.first();
   OKR_OBSZ.cntx_pop();
   {? exec('a_lic','zam_okr_rok',_bdomfst) & _o_fst & OKRESY.ZO().AMOR<>'T'
   || ZAMKNIJ.OK:=0;
      ZAMKNIJ.ERRTXT:='Okres %1 nie jest zamknięty dla obszaru Środki trwałe.'@[naz_okr]
   ?}
?};
{? ZAMKNIJ.OK
|| ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
   OKRO_F.clear;  OKRO_F.index('ROK'); OKRO_F.prefix();
   exec('szuk_okr','zam_okr_rok',_a);
   {? ZAMKNIJ.OK
   || _ar:=SSTALE.AR; _ao:=SSTALE.AO;
      SSTALE.AR:=OKRESY.ZO().ROK; SSTALE.AO:=OKRESY.ZO;
      exec('open_tabele','open_tab');
      {? exec('blok_tab','zam_okr_rok')
      || exec('spr_zaks','zam_okr_rok',_a);
         {? ZAMKNIJ.OK & _b
         || {? _okroBZ
            || ZAMKNIJ.OK:=FUN.ask('Zamknąć rok %1?'@[naz_rok])
            || ZAMKNIJ.OK:=FUN.ask('Zamknąć okres %1?'@[naz_okr])
            ?};
            {? ~ZAMKNIJ.OK || ZAMKNIJ.ERRTXT:='Zrezygnowano z operacji.'@ ?}
         ?}
      || ZAMKNIJ.OK:=0; ZAMKNIJ.ERRTXT:='Nie powiodło się blokowanie tabel. Operacja przerwana.'@
      ?};
      exec('odbl_tab','zam_okr_rok');
      SSTALE.AR:=_ar; SSTALE.AO:=_ao
   ?}
?};
OKRO_F.cntx_pop(); ROK_F.cntx_pop(); OKR_OBSZ.cntx_pop(); OKRO.cntx_pop();
VAR_DEL.delete('naz_okr','naz_rok')


\zam_okr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [????]
:: OPIS: Zamkniecie okresu obrachunkowego - formuła zamykająca
::       Bazuje na okresie z OKRESY.ZO
::   WE: _a - 0 = zamkniecie zwyklego okresu obrachunkowego od BO do grudnia
::            1 = zamkniecie roku
::  OLD: \zam_okr/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
OKR_OBSZ.cntx_psh(); OKRO.cntx_psh();
OKRO_F.cntx_psh(); OKRO_F.prefix();
ROK_F.cntx_psh(); ROK_F.prefix();
_okroBO:=OKRESY.ZO().NAZ='Bilans otwarcia';
_okroBZ:=OKRESY.ZO().NAZ='Bilans zamknięcia';
ROK_F.cntx_psh(); ROK_F.prefix(); OKRO_F.ROK();
naz_okr:=OKRO_F.NAZ+' '+ROK_F.NAZ;
naz_rok:=ROK_F.NAZ;
ROK_F.cntx_pop();
{? ZAMKNIJ.OK
|| {? (_okroBZ | _okroBO) & BILANSP.BO & BILANSP.PROK & BILANSP.NROK
   || exec('tot_akt','zam_okr_rok');
      {? var_pres('spr_bo')<=0 | spr_bo
      || {? _okroBO & ZAMKNIJ.SIZE<=0 & ZAMKNIJ.OK
         || exec('bil_bo','zam_okr_rok')
         |? var_pres('spr_bo')<=0 & _okroBO & ZAMKNIJ.SIZE>0 & ZAMKNIJ.OK
         || ZAMKNIJ.OK:=0;
            ZAMKNIJ.ERRTXT:='W wyniku aktualizacji Bilansu otwarcia został stworzony dokument.'
                            '\nZamknięcie okresu \"Bilans otwarcia\" zostało przerwane.'@
         ?}
      ?};
      {? var_pres('spr_bo')>0 & spr_bo=0
      || ZAMKNIJ.OK:=0;
         ZAMKNIJ.ERRTXT:='W przypadku uruchomienia aktualizacji Bilansu otwarcia zostanie stworzony dokument.'
                         '\nZamknięcie roku zostało przerwane.'@
      ?};
      {? (var_pres('spr_bo')<=0 | spr_bo) & _okroBZ & ZAMKNIJ.OK & BILANSP.BO
      || exec('sum_bo','zam_okr_rok')
      ?}
   ?};
:   exec('odbl_tab','zam_okr_rok');
   _ar:=SSTALE.AR; _ao:=SSTALE.AO;
   SSTALE.AR:=OKRESY.ZR; SSTALE.AO:=OKRESY.ZO;
   exec('open_tabele','open_tab');
   {? ZAMKNIJ.OK
   || OKRESY.ZO().ROK();
      exec('zamknij','zam_okr_rok')
   ?};
   SSTALE.AR:=_ar; SSTALE.AO:=_ao
?};
OKRO_F.cntx_pop(); ROK_F.cntx_pop();
OKR_OBSZ.cntx_pop(); OKRO.cntx_pop();
VAR_DEL.delete('naz_okr','naz_rok');
echo()


\zam_okr3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [????]
:: OPIS: Zamkniecie okresu obrachunkowego - formuła końcowa
::       Bazuje na okresie z OKRESY.ZO
::   WE: _a - 0 = zamkniecie zwyklego okresu obrachunkowego od BO do grudnia
::            1 = zamkniecie roku
::       _b - 1/0 - czy wyświetlać pytanie o zamknięciu okresu/roku
::  OLD: \zam_okr/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
OKR_OBSZ.cntx_psh(); OKRO.cntx_psh();
OKRO_F.cntx_psh(); OKRO_F.prefix();
ROK_F.cntx_psh(); ROK_F.prefix();
_okroBO:=OKRESY.ZO().NAZ='Bilans otwarcia';
_okroBZ:=OKRESY.ZO().NAZ='Bilans zamknięcia';
ROK_F.cntx_psh(); ROK_F.prefix(); OKRO_F.ROK();
naz_okr:=OKRO_F.NAZ+' '+ROK_F.NAZ;
naz_rok:=ROK_F.NAZ;
ROK_F.cntx_pop();
{? ZAMKNIJ.OK
|| _dalej:={? _okroBZ
           || exec('k__histr','zam_okr_rok',OKRESY.ZR,'FKS','Z')
           || exec('k__hist','zam_okr_rok',OKRESY.ZO,'FKS','Z')
           ?};
   {? _dalej
   || {? _b || FUN.info({? _okroBZ || 'Rok' || 'Okres' ?}+' został zamknięty.') ?};
      _mp.done()
   ?}
|| {? var_pres('zam_okr')>0 & zam_okr
   || _mp.done()
   || {? _b
      || {? +ZAMKNIJ.ERRTXT
         || FUN.info(ZAMKNIJ.ERRTXT)
         || _kom:={? _okroBZ || 'roku.'@ || 'okresu.'@ ?};
            FUN.info('Niezidentyfikowany błąd zamknięcia %1'@[_kom])
         ?}
      ?}
   ?};
   exec('open_tabele','open_tab')
?};
VAR_DEL.delete('ZAMKNIJ');
OKRO_F.cntx_pop(); ROK_F.cntx_pop();
OKR_OBSZ.cntx_pop(); OKRO.cntx_pop();
VAR_DEL.delete('naz_okr','naz_rok')


\test_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Sprawdza, czy są zaksięgowane co najmniej próbnie wszystkie dokumenty z bieżącego roku i z BO następnego roku
::   WE: _a - zaedeklarowane - sprawdzanie również, czy sa dokumenty niezaksięgowane końcowo
::  OLD: \test_dok/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAMKNIJ.OK
|| OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(BILANSP.PROK);
   {? OKRO_F.first()
   || {! |?
         OKRO_F.ROK();
         _naz_okr:=OKRO_F.NAZ+' '+ROK_F.NAZ;
         DOK.use('doku'+ROK_F.KOD+form(OKRO_F.NR,-2));
         POZ.use('pozy'+ROK_F.KOD+form(OKRO_F.NR,-2));
         POW.use('pow_'+ROK_F.KOD+form(OKRO_F.NR,-2));
         DOK.prefix(); DOK.blank(1);
         DOK.ZP:='N';
         {? DOK.find_rec()
         || ZAMKNIJ.OK:=0;
            ZAMKNIJ.ERRTXT:='W okresie %1 istnieją niezaksięgowane dokumenty.'@[_naz_okr]
         ?};
         {? ZAMKNIJ.OK & var_pres('_a')>0
         || DOK.blank(1); DOK.ZK:='N';
            {? DOK.find_rec()
            || ZAMKNIJ.OK:=0;
               ZAMKNIJ.ERRTXT:='W okresie %1 istnieją niezaksięgowane końcowo dokumenty.'@[_naz_okr]
            ?}
         ?};
         OKRO_F.next() & ZAMKNIJ.OK
      !}
   ?};
   {? ZAMKNIJ.OK
   || DOK.use('doku'+BILANSP.NROK().KOD+form(BILANSP.BO().NR,-2));
      POZ.use('pozy'+BILANSP.NROK().KOD+form(BILANSP.BO().NR,-2));
      POW.use('pow_'+BILANSP.NROK().KOD+form(BILANSP.BO().NR,-2));
      DOK.prefix();  DOK.blank(1);
      DOK.ZP:='N';
      {? DOK.find_rec()
      || ZAMKNIJ.OK:=0;
         ZAMKNIJ.ERRTXT:='W okresie \"Bilans otwarcia\" roku %1 istnieją niezaksięgowane dokumenty.'@[BILANSP.NROK().NAZ]
      ?}
   || exec('open_tabele','open_tab')
   ?};
   OKRO_F.cntx_pop()
?};
ZAMKNIJ.OK


\szuk_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DPU
:: OPIS: Znalezienie okresu do zamknięcia
::   WE: _a - 0=zamkniecie zwyklego okresu obrachunkowego: Od BO do grudnia.
::            1=zamkniecie bilansu zamkniecia
::  OLD: \szuk_okr/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
OKRO_F.cntx_psh(); OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(REF.FIRMA);
{? OKRO_F.lock(1)
|| exec('okr_inf','zam_okr_rok');
   {? ZAMKNIJ.OK
   || OKRESY.ZO().ROK();
      {? (OKRO_F.NAZ='Bilans zamknięcia' & ~_a) |
           (OKRO_F.NAZ<>'Bilans zamknięcia' & _a)
      || ZAMKNIJ.ERRTXT:='Okresu %1 nie można zamknąć tą akcją.'@[naz_okr];
         ZAMKNIJ.OK:=0
      |? -OKRO_F.ZAM='t'
      ||  {? OKRO_F.NAZ='Bilans zamknięcia'
           ||  ZAMKNIJ.ERRTXT:='Rok %1 jest już zamknięty.'@[naz_rok]
           ||  ZAMKNIJ.ERRTXT:='Okres %1 jest już zamknięty.'@[naz_okr]
          ?};
         ZAMKNIJ.OK:=0
      |? OKRO_F.NAZ='Bilans otwarcia'
      || {? OKRO_F.prev()
         || {? OKRO_F.NAZ='Bilans zamknięcia' & -OKRO_F.ZAM<>'t'
            || ZAMKNIJ.ERRTXT:='Niezamknięty \"Bilans zamknięcia\" poprzedniego roku.'
                               '\nOperacja przerwana.'@; ZAMKNIJ.OK:=0
            ?}
         ?}
      |? OKRO_F.prev()
      || exec('szuk_pet','zam_okr_rok',_a)
      ?}
   ?};
   OKRO_F.unlock()
|| ZAMKNIJ.ERRTXT:='Nie można zablokować tabeli okresów.\nOperacja przerwana.'@;
   ZAMKNIJ.OK:=0
?};
OKRO_F.cntx_pop()


\okr_inf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DPU
:: OPIS: Sprawdza ciaglosc zamkniec okresow
::  OLD: \okr_inf/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_txt:='Brak ciągłości zamknięć okresów bilansowych.\nOperacja przerwana.'@;
_zo:=exec('zo','zam_okr_rok');
OKRO_F.cntx_psh(); OKRO_F.prefix();
ROK_F.cntx_psh(); ROK_F.prefix();
{? _zo<>null & OKRO_F.seek(_zo)
|| OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(REF.FIRMA);
   _poczr:=OKRO_F.ROK().POCZ_ROK; _nr:=OKRO_F.NR;
   {? _ok:=1; OKRO_F.first()
   || {! |?
         {? (OKRO_F.ROK().POCZ_ROK<_poczr) | (OKRO_F.ROK().POCZ_ROK=_poczr & OKRO_F.NR<=_nr)
         || {? -OKRO_F.ZAM<>'t' &
               (OKRO_F.NAZ<>'Bilans zamknięcia' & OKRO_F.NAZ<>'Bilans otwarcia')
              || ZAMKNIJ.OK:=0; _ok:=0;
                 ZAMKNIJ.ERRTXT:=_txt
              ?}
           |? (OKRO_F.ROK().POCZ_ROK>_poczr) | (OKRO_F.ROK().POCZ_ROK=_poczr & OKRO_F.NR>_nr)
           || {? -OKRO_F.ZAM='t'
              || ZAMKNIJ.OK:=0; _ok:=0;
                 ZAMKNIJ.ERRTXT:=_txt
              ?}
           ?};
           OKRO_F.next() & _ok
      !}
   ?}
?};
OKRO_F.cntx_pop(); ROK_F.cntx_pop();
1


\szuk_pet
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DPU
:: OPIS: Znalezienie okresu do zamknięcia - wewnętrzna
::   WE: _a - 0=zamkniecie zwyklego okresu obrachunkowego: Od BO do grudnia.
::            1=zamkniecie bilansu zamkniecia
::  OLD: \szuk_pet/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_cd:=1;
_rok:=OKRESY.ZR; _rok2:=null; _kod2:='';
{! |?
   {? _rok2=null & OKRO_F.ROK<>_rok || _rok2:=OKRO_F.ROK; _kod2:=OKRO_F.ROK().NAZ ?};
   {? -OKRO_F.ZAM<>'t'
   || {? OKRO_F.ROK<>_rok & OKRO_F.ROK<>_rok2
      || ZAMKNIJ.ERRTXT:='Niezamknięty rok %1.'@[_kod2];
         ZAMKNIJ.OK:=0;  _cd:=0
      |? (OKRO_F.NAZ<>'Bilans otwarcia' & OKRO_F.NAZ<>'Bilans zamknięcia') | _a
      || ZAMKNIJ.ERRTXT:='Niezamknięty okres %1 %2.'@[OKRO_F.NAZ,OKRO_F.ROK().NAZ];
         ZAMKNIJ.OK:=0; _cd:=0
        ?}
     || {? OKRO_F.ROK<>_rok & OKRO_F.ROK<>_rok2
        || _cd:=0
        ?}
     ?};
     OKRO_F.prev() & _cd
!};
1


\zo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Zwraca ostatni zamkniety okres firmy lub null
::  OLD: \zo/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh(); OKRO_F.cntx_psh();
_zo:=null;
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
OKRO_F.index('ZAM');
_ok:=0;
{? ROK_F.first()
|| {! |?
      OKRO_F.prefix(ROK_F.ref(),'T');
      _ok:={? OKRO_F.last() || _zo:=OKRO_F.ref(); 1  ?};
      _ok & ROK_F.next()
   !}
?};
ROK_F.cntx_pop(); OKRO_F.cntx_pop();
_zo


\blok_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????0]
:: OPIS: Zablokowanie tabel przy sprawdzeniu, czy dokumenty z zamykanego okresu są zaksięgowane
::  OLD: \blok_tab/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.lock(1,0,1)
|| 1
|| 0
?}


\odbl_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????0]
:: OPIS: Odblokowanie tabel przy sprawdzeniu, czy dokumenty z zamykanego okresu są zaksięgowane
::  OLD: \odbl_tab/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.unlock()


\spr_zaks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????0]
:: OPIS: Sprawdzanie, czy wszystkie dokumenty z zamykanego okresu są zaksięgowane
::  OLD: \spr_zaks/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
echo('Sprawdzenie, czy wszystkie dokumenty są zaksięgowane.'@);
DOK.prefix; DOK.blank(1); DOK.ZK:='N';
{? PAR_SKID.get(438)<>'T'
|| {? DOK.find_rec()
   || ZAMKNIJ.OK:=0;
      {? _a
      || ZAMKNIJ.ERRTXT:='Nie zaksięgowano końcowo wszystkich dokumentów z okresu BO następnego roku.'@
      || ZAMKNIJ.ERRTXT:='Nie zaksięgowano wszystkich dokumentów z okresu zamykanego (%1).'@[naz_okr]
      ?}
   ?}
|| DOK.prefix;
:: nie można zamknąć, jeżeli istnieje dokument nie z KSeF i niezaksięgowany końcowo
   _sql:=sql('select DOK.ZP, DOK.STATKSEF, DOK.ZK from DOK where (DOK.ZK=\'N\' and DOK.KSEF=\'N\') or'+
:: nie można zamknąć, jeżeli istnieje dokument KSeF, który nie jest anulowany/odrzucony i nie jest zaksięgowany końcowo
   '(DOK.KSEF=\'T\' and ((DOK.STATKSEF<>\'Anulowany w systemie\' and DOK.STATKSEF<>\'Anulowany\' and DOK.STATKSEF<>\'Wysłany, odrzucony\' and DOK.ZK=\'N\')'+
:: nie można zamknąć, jeżeli istnieje dokument KSeF anulowany/odrzucony i jest zaksięgowany próbnie i nie końcowo
                        'or ((DOK.STATKSEF=\'Anulowany w systemie\' or DOK.STATKSEF=\'Anulowany\' or DOK.STATKSEF=\'Wysłany, odrzucony\') and DOK.ZP=\'T\' and DOK.ZK=\'N\')))');
   {? _sql.size()>0
   || ZAMKNIJ.OK:=0;
      {? _a
      || ZAMKNIJ.ERRTXT:='Nie zaksięgowano końcowo wszystkich dokumentów z okresu BO następnego roku.'@
      || ZAMKNIJ.ERRTXT:='Nie zaksięgowano wszystkich dokumentów z okresu zamykanego (%1).'@[naz_okr]
      ?}
   ?}
?};
ZAMKNIJ.OK


\tot_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Właściwa akcja aktualizacji BO
::  OLD: \tot_akt/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
dok_rej:=null;
ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
{? ODD.first()
|| {! |?
      exec('bil_init','zam_okr_rok');
      exec('bil_otw','zam_okr_rok');
      ODD.next() & ZAMKNIJ.OK
   !}
?};
ODD.cntx_pop();
exec('tran_kon','zam_okr_rok');
VAR_DEL.delete('dok_rej')


\bil_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Inicjowanie aktualizacji BO
::  OLD: \bil_init/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_rbo:=BILANSP.BO().ROK;
BILANSP.PROK();
AN.use('koan__'+ROK_F.KOD);
AN_SLU.use('koansl'+ROK_F.KOD);
OBR.use('obroty'+ROK_F.KOD);
AN.index('WALSYM'); AN.prefix();
{? ZAMKNIJ.OK
|| REJ.index('KOD'); REJ.prefix(_rbo,ODD.ref());
   {? ~(REJ.find_key('~BO') & REJ.KOD='~BO')
   || ZAMKNIJ.ERRTXT:='Nie znaleziono rejestru \"~BO\" w jednostce księgowej %1.'@[ODD.OD];
      ZAMKNIJ.OK:=0
   ?}
?};
{? ZAMKNIJ.OK
|| SLU.index('NAZ'); SLU.prefix();
   {? SLU.find_key('~RODZAJE DOKUMENTÓW')
   || SLO.index('SL'); SLO.prefix(SLU.ref(),'BO');
      {? SLO.first()
      || DOK_REJ.index('NAZ'); DOK_REJ.prefix(REJ.ref());
         {? ZAMKNIJ.OK:=DOK_REJ.first()
         || {! |?
               {? ZAMKNIJ.OK:=DOK_REJ.SLO=SLO.ref()
               || 0
               || DOK_REJ.next()
               ?}
            !}
         ?};
         dok_rej:=DOK_REJ.ref();
         {? ~ZAMKNIJ.OK
         || ZAMKNIJ.ERRTXT:='Brak rodzaju dokumentu \"BO\" w jednostce księgowej %1.'@[ODD.OD]; ZAMKNIJ.OK:=0
         ?}
      || ZAMKNIJ.ERRTXT:='Brak pozycji \"BO\" w słowniku rodzajów dokumentów.'@; ZAMKNIJ.OK:=0
      ?}
   || ZAMKNIJ.ERRTXT:='Brak słownika rodzajów dokumentów.'@; ZAMKNIJ.OK:=0
   ?}
?};
ZAMKNIJ.OK


\bil_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Sprawdzanie zgodności kont bilansowym i pozabilansowych dla BO
::  OLD: \bil_bo/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
ZAMKNIJ.WN:=ZAMKNIJ.MA:=0;
KS.index('SYM'); KS.prefix(OKRESY.ZR); OKRESY.ZR();
POZ.prefix();
_w:=POZ.for_each("
    {? -POZ.DOK().ZK<>'t'
    || ZAMKNIJ.OK:=0; {? ~+ZAMKNIJ.ERRTXT || ZAMKNIJ.ERRTXT:='Istnieją dokumenty nie zaksięgowane końcowo.'@ ?}
    || {? KS.find_key(ROK_F.SYNT+POZ.KON)
       || {? -(1+KS.TYP)<>'p'
          || {? -POZ.STR='wn' || ZAMKNIJ.WN+=POZ.SUM || ZAMKNIJ.MA+=POZ.SUM ?}
          ?}
       || ZAMKNIJ.OK:=0; {? ~+ZAMKNIJ.ERRTXT || ZAMKNIJ.ERRTXT:='Nie znaleziono konta '@+KS.SYM+' w planie kont.'@ ?}
       ?}
    ?}
   ",1);
{? ~_w
|| ZAMKNIJ.OK:=0; {? ~+ZAMKNIJ.ERRTXT || ZAMKNIJ.ERRTXT:='Błąd przy przetwarzaniu rekordów tabeli POZ.'@ ?}
|? ZAMKNIJ.WN$2<>ZAMKNIJ.MA$2
|| ZAMKNIJ.OK:=0; {? ~+ZAMKNIJ.ERRTXT
                  || ZAMKNIJ.ERRTXT:='Saldo obrotów dla okresu \"Bilans otwarcia\" nie jest zerowe.'
                  '\nRóżnica wynosi (WN-MA): %1'
                  '\nOkresu nie można zamknąć.'@[form(ZAMKNIJ.WN-ZAMKNIJ.MA,14,2)] ?}
?};
ZAMKNIJ.OK


\bil_otw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: NN [17.00]
:: OPIS: Utworzenie dokumentu bilansu otwarcia w kolejnym roku
::  OLD: \bil_otw/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAMKNIJ.OK & exec('bil_dok','zam_okr_rok')
|| ZAMKNIJ.WN:=ZAMKNIJ.MA:=ZAMKNIJ.WNW:=ZAMKNIJ.MAW:=0
|| ZAMKNIJ.OK:=0
?};
AN.index('SYM'); AN.prefix();
{? ZAMKNIJ.OK & AN.first()
|| _sym:='';
   _ks_sym:='';
   OKRO_F.cntx_psh();
   _pocz:=_kon:=date(0,0,0);
   OKRO_F.index('ROK'); OKRO_F.prefix(BILANSP.NROK);
   {? OKRO_F.first() & OKRO_F.next() || _pocz:=OKRO_F.POCZ ?};
   {? OKRO_F.last() & OKRO_F.prev() || _kon:=OKRO_F.KON ?};
   {? _pocz=date(0,0,0) | _kon=date(0,0,0) || ZAMKNIJ.OK:=0 ?};
   OKRO_F.cntx_pop();
   {? ZAMKNIJ.OK
   || _par_wyr:=PAR_SKID.get(35)='T';
      _l_wyr:=0;
      exec('bo_poz','zam_okr_rok');
      {!
      |? {? -AN.KS().TYP='pb' | -KS.TYP='bl'
         || {? _sym=AN.SYM
            || AN.next() & ZAMKNIJ.OK
            || {? _par_wyr & _ks_sym<>AN.KS().SYM
               || _l_wyr:=exec('czy_wyr','wyrozniki',KS.ref());
                  {? _l_wyr
                  || VAR_DEL.delete('TT_POZ','ttpozind');
                     TT_POZ:=exec('tab_pow','zam_okr_rok',KS.ref(),KS.SYM,_l_wyr, AN.SYM);
                     {? var_pres('TT_POZ')<=0
                     || _l_wyr:=0
                     || ttpozind:=TT_POZ.ndx_tmp(,,'KONTO',,,'MNOZNIK',,,'WAL',,,'STR',,)
                     ?}
                  ?};
                  _ks_sym:=KS.SYM
               ?};
               _sym:=AN.SYM; exec('bil_poz','zam_okr_rok',_pocz,_kon,_l_wyr);
               __DBO.prefix(_sym,);
               {? __DBO.first() || {! |? __DBO.del() !} ?};
               1
            ?}
         || AN.next() & ZAMKNIJ.OK
         ?}
      !};
      exec('bo_poz1','zam_okr_rok');
      VAR_DEL.delete('TT_POZ','do_bo','okr_bo','ttpozind')
   ?}
?};
{? ZAMKNIJ.POZ=1 & var_pres('spr_bo')<=0 & ZAMKNIJ.DOK || DOK.del(); ZAMKNIJ.SIZE-=1 ?};
ZAMKNIJ.OK


\bil_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Utworzenie dokumentu bilansu otwarcia w kolejnym roku - dodanie nagłówka dokumentu
::  OLD: \bil_dok/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(REF.FIRMA);
{? ZAMKNIJ.OK
|| {? OKRESY.ZO().NAZ='Bilans zamknięcia'
   || OKRO_F.prev(); _data:=OKRO_F.KON+1
   |? OKRESY.ZO().NAZ='Bilans otwarcia'
   || OKRO_F.next(); _data:=OKRO_F.POCZ
   || _data:=OKRESY.ZO().KON+1
   ?};
   OKRO_F.cntx_psh(); ROK_F.cntx_psh();
   OKRO_F.ROK(); ROK_F.next();
   OKRO_F.cntx_pop(); ROK_F.cntx_pop();
   OP.use('operac'+BILANSP.PROK().KOD); OP.prefix();
   ZAP_OP.use('rozzap'+BILANSP.PROK().KOD); ZAP_OP.prefix();
   PAR_NAG.use('parnag'+BILANSP.PROK().KOD);
   PAR_POZ.use('parpoz'+BILANSP.PROK().KOD);
   DOK.use('doku'+BILANSP.NROK().KOD+form(BILANSP.BO().NR,-2));
   POZ.use('pozy'+BILANSP.NROK().KOD+form(BILANSP.BO().NR,-2));
   POW.use('pow_'+BILANSP.NROK().KOD+form(BILANSP.BO().NR,-2));
   DOK.index('REJ'); DOK.prefix(REJ.ref());
   POZ.index('DOK'); POZ.prefix();
   ODD.cntx_psh(); DOK.blank(); DOK.RVAT:=null; DOK.DOK_REJ:=dok_rej;
   ODD.cntx_pop();
   DOK.ODD:=ODD.ref();
   DOK.DTO:=DOK.DTW:=DOK.DOP:=_data;
   DOK.NK:='BO '+(4+BILANSP.NROK().NAZ)+'/'+$DOK.NR;
   {? var_pres('iddekpar')>0 || DOK.DOKZRODL:=iddekpar+'1' ?};
   {? var_pres('spr_bo')<=0
   || {? ZAMKNIJ.OK:=DOK.add() || ZAMKNIJ.DOK:=DOK.ref(); ZAMKNIJ.POZ:=1; ZAMKNIJ.SIZE+=1 ?}
   ?}
?};
ZAMKNIJ.OK


\tab_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Tworzy pomocnicza tabele tymczasowa z wyroznikami
::   WE: _a - wskazanie na konto syntetyczne
::       _b - symbol konta syntetycznego
::       _c - liczba wyroznikow
::       _d - symbol konta analitycznego
::   WY: tabela tymczasowa
:: UWAGA - jesli w nowym roku wystepuje ten sam slownik wyroznika na dowolnym poziomie, to wyrozniki przenosimy
::  OLD: \tab_pow/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_l_wyr:=_c;
VAR_DEL.delete('do_bo');
do_bo:=obj_new(_l_wyr); _ok:=0;
_select1:=_select2:=_select3:=_select4:=_order:=_ind:='';
KS_W.index('LP'); KS_W.prefix(_a);
{! _i:=1.._l_wyr |!
   do_bo[_i]:={? KS_W.find_key(_i) & KS_W.DO_BO='T' || 1 || 0 ?};
:: sprawdzenie czy w nowym roku istnieje taki sam wyroznik na dowolnym poziomie, poziom slownika w nowym roku zapisany w polach NPOZ?
   _poz_nrok:=0;
   {? do_bo[_i]
   || KS_W.cntx_psh(); SLUAPPL.cntx_psh(); KS.cntx_psh(); ROK_F.cntx_psh();
      _sl_prok:=KS_W.SLU;
      BILANSP.NROK();
      _k:=exec('an_bo','zam_okr_rok',_d);
      {? _k='' || _k:=_d ?};
      KS.index('SYM'); KS.prefix(ROK_F.ref, ROK_F.SYNT+_k);
      {? KS.first()
      || KS_W.index('KSSLU');
         KS_W.prefix(KS.ref, _sl_prok);
         {? KS_W.first()
         || _poz_nrok:=KS_W.LP
         || do_bo[_i]:=0
         ?}
      ?};
      KS_W.cntx_pop(); SLUAPPL.cntx_pop(); KS.cntx_pop(); ROK_F.cntx_pop()
   ?};
   _ok+=do_bo[_i];
   _select1+=','+{? do_bo[_i]
                || '(select /*+INDEX(POW, POZ)*/ case count(*) when 0 then 0 else 1 end from @POW where '+
                   'POW.REFERENCE between \'pow_:_a00'+(8*'0')+'\' and \'pow_:_a99'+(8*'f')+'\' '+
                   'and POW.POZ=P.REFERENCE and POW.LP='+$_i+')'
                || '0'
                ?}+' as LW'+$_i+','+$_poz_nrok+' as NPOZ'+$_i;
   _select2+=','+{? do_bo[_i]
                || '(select /*+INDEX(POW, POZ)*/ case count(*) when 0 then 0 else 1 end from @POW where '+
                   'POW.REFERENCE like \'pow_:_b%\' '+
                   'and POW.POZ=P.REFERENCE and POW.LP='+$_poz_nrok+')'
                || '0'
                ?}+' as LW'+$_i+','+$_poz_nrok+' as NPOZ'+$_i;
   _select3+=','+' '''+KS_W.SLU().SLU().WZ+''' as WZ'+$_i;
   _select4+=','+' '''+KS_W.SLU().SLU().WZ+''' as WZ'+$_i;
   _ind+=',\'LW'+$_i+'\',,';
   _order+=$(_i+7+(_i-1))+','
!};
{? _ok
|| _order:='1,'+_order+'7,6';
   ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
   OKRO_F.cntx_psh(); OKRO_F.prefix();
   _rok:=BILANSP.PROK().KOD;
   _naz:=BILANSP.PROK().NAZ;
   okr_bo:=BILANSP.BO().ROK().KOD+form(OKRO_F.NR,-2);
   OKRO_F.cntx_pop(); ROK_F.cntx_pop();
   VAR_DEL.delete('TT_POZ');
   _tt_poz:=sql('select '+
                'P.KON as KONTO, P.REFERENCE as REF, P.SUM, P.SUMW, \'                \' as SLO_WYR,'+
                'case P.STR when \'Ma\' then 1 else -1 end as STR, 1 as MNOZNIK,'+
                'case when P.WAL is null then \'0\' else P.WAL end as WAL'+_select1+_select3+
                ' from @POZ P join @DOK using (P.DOK,DOK.REFERENCE) '+
                'where P.REFERENCE between \'pozy:_a00'+(8*'0')+'\' and \'pozy:_a99'+(8*'f')+'\' '+
                'and DOK.REFERENCE between \'doku:_a00'+(8*'0')+'\' and \'doku:_a99'+(8*'f')+'\' '+
                'and P.KON like \''+_b+'%\' and DOK.ODD=\':_c\' order by '+_order+
                ' union all '+
                'select  '+
                'P.PKON as KONTO, P.REFERENCE as REF, P.SUM, P.SUMW, \'                \' as SLO_WYR,'+
                'case P.STR when \'Ma\' then 1 else -1 end as STR, -1 as MNOZNIK,'+
                'case when P.WAL is null then \'0\' else P.WAL end as WAL'+_select2+_select4+
                ' from @POZ P join @DOK using (P.DOK,DOK.REFERENCE) '+
                'where P.REFERENCE like \'pozy:_b%\' '+
                'and DOK.REFERENCE like \'doku:_b%\' '+
                'and P.PKON like \''+_b+'%\' and DOK.ODD=\':_c\' order by '+_order,
                _rok,okr_bo,BB.refsql(ODD.ref()) );
::    uzupełnia dla pozycji _tt_poz kod wyróznika
   {? _tt_poz.first
   || {! |? POZ.cntx_psh(); POW.cntx_psh();
            POZ.use(8+_tt_poz.REF); POZ.prefix();
            POZ.seek(BB.sqlint(_tt_poz.REF),8+_tt_poz.REF);
            _ref:=POZ.ref();

            POW.use('pow_'+(4-_tt_poz.REF-8));
            POW.index('POZ'); POW.prefix(_ref);
            {? POW.first() || _tt_poz.SLO_WYR:=$POW.SLO; _tt_poz.put() ?};
            POZ.cntx_pop(); POW.cntx_pop();
            _tt_poz.next()
      !}
   ?};
::    usunięcie kont, dla których suma wg wyróżników daje 0
   _tt_an:=sql('select KONTO, SLO_WYR, sum(:_a.SUM*:_a.STR*:_a.MNOZNIK) as SUMA from :_a group by KONTO,SLO_WYR order by 1,2',_tt_poz);
   {? _tt_poz.first
   || {! |? {? _tt_an.find_key(_tt_poz.KONTO,_tt_poz.SLO_WYR)
            || {? _tt_an.SUMA=0 || _tt_poz.del() || _tt_poz.next() ?}
            || _tt_poz.next()
            ?}
      !}
   ?};
   _tt_poz
|| ~~
?}

\an_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Wyszukuje nowe konto na podstawie danych w tabeli AN_BO
::   WE:  _a  - poprzednie konto analityczne (np. POZ.PKON)
::       [_b] - Czy pokazywac komunikat o blednym koncie? [1]-tak 0-nie
::       [_c] - Typ wyniku: [0]-konto lub ''; 1-konto lub '' lub '?...?'
::   WY: konto w nowym roku lub '' gdy bledne konto lub '?...?' brak reguly
::  OLD: \an_bo/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<0 || _b:=1 ?};
{? var_pres('_c')<0 || _c:=0 ?};
_kon:='';
AN_BO.cntx_psh();
AN_BO.index('ROK'); AN_BO.prefix();
{? (_r:=exec('findanbo','zam_okr_rok',_a))<>null & AN_BO.seek(_r)
|| _kon:=exec('konto','zam_okr_rok',_a);
   anal_rok:=ROK_F.ref();
   {? exec('akc_kont','edkonto',_kon)
   || {? _b
      || ZAMKNIJ.OK:=0;
         ZAMKNIJ.ERRTXT:='Reguła przypisania kont analitycznych:\n%1-> %2'
                         ' zwróciła błędne konto : %3'@[AN_BO.PKON,AN_BO.KON,_kon]
      ?};
      _kon:=''
   ?};
   VAR_DEL.delete('anal_rok')
|? _c=1
|| _kon:=35*'?'
?};
AN_BO.cntx_pop();
_kon


\bo_poz1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Tworzenie zapisow w dokumencie BO dla usunietych kont
::  OLD: \bo_poz1/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
__DBO.prefix();
{? __DBO.first()
|| POZ.cntx_psh(); POZ.prefix();
   POW.index('POZ');
   {!
   |? __DBOP.prefix(__DBO.ref());
      {? __DBOP.first()
      || {!
         |? {? POZ.seek(__DBOP.POZ,)
            || POW.prefix(POZ.ref());
               {? POW.last()
               || _l:=POW.LP;
                  _pow:='';
                  {! _i:=1.._l
                  |! {? POW.find_key(_i) || _pow+=$_i ?}
                  !};
                  __DBOP.POW:={? _pow='' || '0' || _pow ?};
                  __DBOP.put()
               ?}
            ?};
            __DBOP.next()
         !};
         __DBOP.cntx_psh();
         __DBOP.index(__DBOP1); __DBOP.prefix(__DBO.ref());
         {? __DBOP.first()
         || {!
            |? __DBOP.prefix(__DBO.ref(),__DBOP.POW,);
               {? __DBOP.first()
               || _poz_new:=null;
                  {? POZ.seek(__DBOP.POZ,)
                  || POZ.POZ:=ZAMKNIJ.POZ; POZ.DOK:=ZAMKNIJ.DOK;
                     POZ.A:=POZ.ZP:=POZ.ZK:='N';
                     POZ.SUM:=0;
                     POZ.SUMW:=0;
                     {? var_pres('spr_bo')<=0
                     || {? POZ.add() || ZAMKNIJ.POZ+=1; _poz_new:=POZ.ref() ?}
                     || spr_bo:=ZAMKNIJ.OK:=0
                     ?}
                  ?};
                  {? _poz_new
                  || {!
                     |? POZ.cntx_psh();
                        {? POZ.seek(__DBOP.POZ,)
                        || _poz:=POZ.ref();
                           _kw:=POZ.SUM*{? -POZ.STR='wn' || -1 || 1 ?};
                           _kww:=POZ.SUMW*{? -POZ.STR='wn' || -1 || 1 ?};
                           POW.cntx_psh();
                           POW.index('POZ'); POW.prefix(POZ.ref());
                           {? POW.first()
                           || {!
                              |? _k:={? -POZ.STR='wn' || -POW.KW || POW.KW ?};
                                 POW.cntx_psh();
                                 POW.prefix();
                                 {? ~POW.find_key(_poz_new,POW.LP,POW.SLU,POW.SLO)
                                 || POW.POZ:=_poz_new;
                                    POW.KW:=_k;
                                    POW.add()
                                 || POW.KW+=_k;
                                    {? POW.KW=0
                                    || POW.del()
                                    || POW.put()
                                    ?}
                                 ?};
                                 POW.cntx_pop();
                                 POW.next()
                              !}
                           ?};
                           POW.cntx_pop()
                        ?};
                        POZ.cntx_pop();
                        POZ.SUM+=_kw;
                        POZ.SUMW+=_kww;
                        __DBOP.next()
                     !};
                     {? POZ.SUM<0
                     || POZ.STR:='Wn'
                     || POZ.STR:='Ma';
                        POZ.SUM:=-POZ.SUM;
                        POZ.SUMW:=-POZ.SUMW;
                        POW.cntx_psh();
                        POW.prefix(POZ.ref());
                        {? POW.first()
                        || {!
                           |? POW.KW:=-POW.KW; POW.put();
                              POW.next()
                           !}
                        ?};
                        POW.cntx_pop()
                     ?};
                     {? POZ.SUM<>0
                     || {? var_pres('spr_bo')<=0 || POZ.put() ?}
                     || POW.cntx_psh();
                        POW.index('POZ'); POW.prefix(POZ.ref());
                        _jest:=POW.first();
                        POW.cntx_pop();
                        {? ~_jest & var_pres('spr_bo')<=0 || ZAMKNIJ.POZ-=POZ.del() ?}
                     ?}
                  ?}
               ?};
               __DBOP.prefix(__DBO.ref());
               {? var_pres('spr_bo')<=0 || 1 || spr_bo ?} & __DBOP.next()
            !}
         ?};
         __DBOP.cntx_pop()
      ?};
      __DBO.next()
   !};
   POZ.cntx_pop()
?};
VAR_DEL.delete('__DBO','__DBOP')


\bil_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Dodanie pozycji do dokumentu BO. Dodawane są pozycje dla kont o
::       tym samym symbolu. Jeżeli konto jednowalutowe 1 pozycja, dla
::       wielowalutowego może być kilka pozycji
::   WE: _a - data poczatkowa roku
::       _b - data końcowa roku
::       _c - liczba wyroznikow konta o ile wystepuja wymagane do przeniesienia, wpp 0
::  OLD: \bil_poz/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
echo('Trwa aktualizowanie Bilansu otwarcia. Proszę czekać... (%1) %2'@[ODD.OD,AN.SYM]);
ZAMKNIJ.WN:=ZAMKNIJ.MA:=ZAMKNIJ.WNW:=ZAMKNIJ.MAW:=ZAMKNIJ.WNWPLN:=ZAMKNIJ.MAWPLN:=ZAMKNIJ.WN_PLN:=ZAMKNIJ.MA_PLN:=0;
_sym:=AN.SYM;
s_rok:=s_bo:=s_rok_w:=s_bo_w:=s_rok_pln:=s_bo_pln:=0;
_abs:="{? _a<0 || -1 |? _a=0 || 0 || 1 ?}"; ZAMKNIJ.OK:=1;
AN.cntx_psh(); AN.index('SYM'); AN.prefix(_sym); AN.first();
{? _c
|| exec('akt_pow','zam_okr_rok',AN.KS,AN.SYM,_c, _a, _b);
   AN.cntx_pop()
|| {! |?
      {? AN.WAL<>FINFO.NAROD
      || exec('poz_wal','zam_okr_rok',_sym,AN.WAL);
         {? s_rok_w<>s_bo_w
         || s_rok-=s_rok_pln; s_bo-=s_bo_pln;
            {? s_rok_w=0 & s_bo_w=0
            || _tryb:=_abs(s_rok_pln)+_abs(s_bo_pln)
            || _tryb:=_abs(s_rok_w)+_abs(s_bo_w)
            ?};
            POZ.blank(1);
            POZ.POZ:=ZAMKNIJ.POZ; POZ.DOK:=ZAMKNIJ.DOK;
            POZ.PKON:=AN.SYM; POZ.WAL:=AN.WAL;
            POZ.A:=POZ.ZP:=POZ.ZK:='N';
            {? _tryb=0
            || POZ.STR:={? s_bo_w<0 || 'Wn' || 'Ma' ?};
               POZ.SUMW:=s_bo_w$2*{? POZ.STR='Wn' || 1 || -1 ?};
               POZ.SUM:=s_bo_pln$2*{? POZ.STR='Wn' || 1 || -1 ?};
               {? POZ.SUM<>0 | POZ.SUMW<>0
               || exec('poz_add','zam_okr_rok')
               ?};
               {? ZAMKNIJ.OK
               || POZ.POZ:=ZAMKNIJ.POZ;
                  POZ.STR:={? s_rok_w<0 || 'Wn' || 'Ma' ?};
                  POZ.SUMW:=s_rok_w$2*{? POZ.STR='Wn' || -1 || 1 ?};
                  POZ.SUM:=s_rok_pln$2*{? POZ.STR='Wn' || -1 || 1 ?};
                  {? POZ.SUM<>0
                  || exec('poz_add','zam_okr_rok')
                  ?}
               ?}
            || POZ.STR:={? _tryb<0 || 'Wn' || 'Ma' ?};
               POZ.SUMW:=(s_rok_w-s_bo_w)$2*{? POZ.STR='Wn' || -1 || 1 ?};
               POZ.SUM:=(s_rok_pln-s_bo_pln)$2*{? POZ.STR='Wn' || -1 || 1 ?};
               {? POZ.SUM<>0 | POZ.SUMW<>0
               || exec('poz_add','zam_okr_rok')
               ?}
            ?}
         ?}
      || OBR.index('AN_O'); OBR.prefix(AN.ref(),ODD.ref());
         {? ZAMKNIJ.OK & OBR.first()
         || {! |?
               ZAMKNIJ.WN+=OBR.WN;   ZAMKNIJ.MA+=OBR.MA;
               ZAMKNIJ.OK & OBR.next()
            !}
         ?};
         {? ZAMKNIJ.OK
         || s_rok+=-ZAMKNIJ.WN+ZAMKNIJ.MA; ZAMKNIJ.WN:=ZAMKNIJ.MA:=0;
            exec('poz_pln','zam_okr_rok'); s_bo+=-ZAMKNIJ.WN+ZAMKNIJ.MA
         ?}
      ?};
      AN.next() & ZAMKNIJ.OK
   !};
   AN.cntx_pop();
   {? ZAMKNIJ.OK & s_rok<>s_bo
   || POZ.blank(1);
      POZ.POZ:=ZAMKNIJ.POZ; POZ.DOK:=ZAMKNIJ.DOK;
      POZ.PKON:=AN.SYM;  POZ.A:=POZ.ZP:=POZ.ZK:='N';
      _tryb:=_abs(s_rok)+_abs(s_bo);
      {? _tryb=0
      || POZ.STR:={? s_bo<0 || 'Wn' || 'Ma' ?};
         POZ.SUM:=s_bo$2*{? POZ.STR='Wn' || 1 || -1 ?};
         exec('poz_add','zam_okr_rok');
         {? ZAMKNIJ.OK
         || POZ.POZ:=ZAMKNIJ.POZ;
            POZ.STR:={? s_rok<0 || 'Wn' || 'Ma' ?};
            POZ.SUM:=s_rok$2*{? POZ.STR='Wn' || -1 || 1 ?};
            exec('poz_add','zam_okr_rok')
         ?}
      || POZ.STR:={? _tryb<0 || 'Wn' || 'Ma' ?};
         POZ.SUM:=(s_rok-s_bo)$2*{? POZ.STR='Wn' || -1 || 1 ?};
         exec('poz_add','zam_okr_rok')
      ?}
   ?}
?};
{? ZAMKNIJ.OK
|| SLO.cntx_psh();
   SLO.index('SL'); SLO.prefix(FINFO.SLWAL().SLU);
   {? SLO.first()
   || {! |?
         {? SLO.ref()<>FINFO.NAROD
         || exec('find_op','zam_okr_rok',_a,_b,_sym,SLO.ref())
         ?};
         SLO.next()
      !}
   ?};
   exec('find_op','zam_okr_rok',_a,_b,_sym,FINFO.NAROD);
   SLO.cntx_pop()
?};
VAR_DEL.delete('s_rok','s_rok_w','s_rok_pln','s_bo','s_bo_w','s_bo_pln');
ZAMKNIJ.OK


\poz_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dodawanie pozycji do dokumentu BO
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('spr_bo')<=0
|| {? ZAMKNIJ.OK:=POZ.add() || ZAMKNIJ.POZ+=1 ?}
|| spr_bo:=ZAMKNIJ.OK:=0
?}


\akt_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: M.Palma,WS [8.70]
:: OPIS: Wyznacza obroty dla wyroznikow
::   WE: _a - wskazanie na konto syntetyczne
::       _b - symbl konta analitycznego
::       _c - liczba wyroznikow
::       _d - data poczatkowa roku
::       _e - data końcowa roku
::  OLD: \akt_pow/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
{? MLEX.FIKSB
|| TT_POZ.prefix(_b);
   {? TT_POZ.first()
   || POW.cntx_psh();
      _ilbr:=0;
      {! _i:=1.._c |!
         _wz:=($('TT_POZ.WZ'+$_i))();
         {? ($('TT_POZ.LW'+$_i))()<>0 & 'CzęśćDziałRozdziałParagrafPozycja'*_wz>0
         || _ilbr+=1
         ?}
      !};
      VAR_DEL.delete('__Tabbr');
      __Tabbr:=tab_tmp(5,
         'P1','STRING[8]',,
         'P2','STRING[8]',,
         'P3','STRING[8]',,
         'P4','STRING[8]',,
         'P5','STRING[8]',,
         'PATH','STRING[80]','Path',
         'KW','REAL',,
         'REF','INTEGER',);
      _kodr:=obj_new(5);
      _abs:="{? _a<0 || -1 |? _a=0 || 0 || 1?}";
      {! |?
         _p:=''; {! _i:=1.._c |! _p+=($('$TT_POZ.LW'+$_i))()+',' !};
         _wyr:=_p*'1';
         ($('TT_POZ.prefix(\''+_b+'\','+_p+'TT_POZ.WAL)'))();
         s_rok:=s_rok_w:=s_bo:=s_bo_w:=_lp:=0;
         __Tabbr.erase();

         {? TT_POZ.first()
         || exec('suma_wyr','zam_okr_rok');
            _lp+=1;
            {? s_rok<>s_bo
            || _tryb:=_abs(s_rok)+_abs(s_bo);
               _mnoznik:=TT_POZ.MNOZNIK;
               POZ.blank(1);
               POZ.POZ:=ZAMKNIJ.POZ; POZ.DOK:=ZAMKNIJ.DOK;
               POZ.PKON:=AN.SYM;
               POZ.A:=POZ.ZP:=POZ.ZK:='N';
               POZ.STR:={? _tryb=0
                        || {? _mnoznik=1
                           || {? s_rok<0 || 'Wn' || 'Ma' ?}
                           || {? s_bo<0 || 'Wn' || 'Ma' ?}
                           ?}
                        || {? _tryb<0 || 'Wn' || 'Ma' ?}
                        ?};
               POZ.WAL:={? TT_POZ.WAL='0'
                        || null
                        || SLO.prefix();
                           SLO.seek(BB.sqlint(TT_POZ.WAL),'sl_ogol');
                           SLO.ref()
                        ?};
               {? var_pres('spr_bo')<=0
               || {? POZ.add() || ZAMKNIJ.POZ+=1 ?}
               || spr_bo:=ZAMKNIJ.OK:=0
               ?};
               {? {? var_pres('spr_bo')<=0 || 1 || spr_bo ?}
               || {! |?
                     _new:=1;
                     {? _tryb=0 & _mnoznik<>TT_POZ.MNOZNIK
                     || _mnoznik:=TT_POZ.MNOZNIK;
                        POZ.POZ:=ZAMKNIJ.POZ;
                        POZ.STR:={? _tryb=0
                                 || {? _mnoznik=1
                                    || {? s_rok<0 || 'Wn' || 'Ma' ?}
                                    || {? s_bo<0 || 'Wn' || 'Ma' ?}
                                    ?}
                                 || {? _tryb<0 || 'Wn' || 'Ma' ?}
                                 ?};
                        POZ.SUM:=POZ.SUMW:=0;
                        _new:=0;
                        {? var_pres('spr_bo')<=0
                        || {? POZ.add() || ZAMKNIJ.POZ+=1 ?}
                        || spr_bo:=ZAMKNIJ.OK:=0
                        ?}
                     ?};
                     {? _wyr & _ilbr>1
                     || POZ.cntx_psh();
                        POZ.use(8+TT_POZ.REF); POZ.prefix();
                        POZ.seek(BB.sqlint(TT_POZ.REF),8+TT_POZ.REF);
                        _ref:=POZ.ref();
                        POZ.cntx_pop();
                        POW.use('pow_'+(4-TT_POZ.REF-8));
                        POW.index('POZ'); POW.prefix(_ref);
                        {? POW.first()
                        || _pathr:=_pathz:='';
                           _lpr:=0;
                           _poz:=0;
                           {! _i:=1..5 |! _kodr[_i]:='' !};
                           {! |?
                              _wz:=POW.SLU().SLU().WZ;
                              {? _ilbr>1 & 'CzęśćDziałRozdziałParagrafPozycja'*_wz>0
                              || {? _poz<>POW.LP || _lpr+=1 ?};
                                 _poz:=POW.LP;
                                 __Tabbr.clear();
                                 _kodr[_lpr]:=POW.SLO().KOD;
                                 {? _lpr=1 & ~__Tabbr.first()
                                 || __Tabbr.PATH:=POW.SLO().KOD;
                                    __Tabbr.P1:=POW.SLO().KOD;
                                    __Tabbr.P2:=__Tabbr.P3:=__Tabbr.P4:=__Tabbr.P5:='';
                                    __Tabbr.REF:=#POZ.ref();
                                    __Tabbr.add()
                                 ?};
                                 _st:='\''+_kodr[1]+'\'';
                                 {? _lpr>2
                                 || {! _i:=2.._lpr-1 |! {? _kodr[_i]<>'' || _st+=',\''+_kodr[_i]+'\'' ?} !}
                                 ?};
                                 _st:='__Tabbr.prefix('+_st+')';
                                 ($_st)();

                                 {? ~__Tabbr.first()
                                 || __Tabbr.P1:=_kodr[1];
                                    __Tabbr.P2:=_kodr[2];
                                    __Tabbr.P3:=_kodr[3];
                                    __Tabbr.P4:=_kodr[4];
                                    __Tabbr.PATH:=_pathr;
                                    {? _new=1
                                    || POZ.POZ:=ZAMKNIJ.POZ;
                                       POZ.STR:={? _tryb=0
                                                || {? _mnoznik=1
                                                   || {? s_rok<0 || 'Wn' || 'Ma' ?}
                                                   || {? s_bo<0 || 'Wn' || 'Ma' ?}
                                                   ?}
                                                || {? _tryb<0 || 'Wn' || 'Ma' ?}
                                                ?};
                                       POZ.SUM:=POZ.SUMW:=0;
                                       {? var_pres('spr_bo')<=0
                                       || {? POZ.add() || ZAMKNIJ.POZ+=1 ?}
                                       || spr_bo:=ZAMKNIJ.OK:=0
                                       ?}
                                    ?};
                                    __Tabbr.REF:=#POZ.ref();
                                    __Tabbr.clear();
                                    __Tabbr.add()
                                 || _st:='';
                                    {? _lpr>1
                                    || {! _i:=2.._lpr |! {? _kodr[_i]<>'' || _st+=',\''+_kodr[_i]+'\'' ?} !};
                                       _st:=1-_st;
                                       {? _st<>'' & ($('~__Tabbr.find_key('+_st+')'))()
                                       || __Tabbr.P1:=_kodr[1];
                                          __Tabbr.P2:=_kodr[2];
                                          __Tabbr.P3:=_kodr[3];
                                          __Tabbr.P4:=_kodr[4];
                                          __Tabbr.P5:=_kodr[5];
                                          __Tabbr.PATH:=_pathr;
                                          __Tabbr.add()
                                       ?}
                                    ?};
                                    {? #POZ.ref<>__Tabbr.REF
                                    || POZ.seek(__Tabbr.REF, POZ.name())
                                    ?}
                                 ?};
                                 _st:='';
                                 {! _i:=2..5 |! {? _kodr[_i]<>'' || '-'+_kodr[_i] || '' ?} !};
                                 _pathr:=_kodr[1]+_st
                              ?};
                              {? var_pres('spr_bo')<=0 || 1 || spr_bo ?} & POW.next()
                           !}
                        ?}
                     ?};
                     _wsp:=TT_POZ.MNOZNIK*{? (POZ.STR='Wn' & TT_POZ.STR=1)|(POZ.STR='Ma' & TT_POZ.STR=-1) || -1 || 1 ?};
                     POZ.SUM+=TT_POZ.SUM*_wsp;
                     {? POZ.WAL || POZ.SUMW+=TT_POZ.SUMW*_wsp ?};
                     {? var_pres('spr_bo')<=0 || POZ.put() ?};
                     {? _wyr & var_pres('spr_bo')<=0
                     || POZ.cntx_psh();
                        POZ.use(8+TT_POZ.REF); POZ.prefix();
                        POZ.seek(BB.sqlint(TT_POZ.REF),8+TT_POZ.REF);
                        _ref:=POZ.ref();
                        POZ.cntx_pop();
                        POW.use('pow_'+(4-TT_POZ.REF-8));
                        POW.index('POZ'); POW.prefix(_ref);
                        {? POW.first()
                        || {! |?
                              {? do_bo[POW.LP]
                              || _kw:=_wsp*POW.KW;
                                 POW.cntx_psh();
                                 POW.use('pow_'+okr_bo);
                                 POW.index('POZ');
                                 POW.prefix(POZ.ref());
                                 POW.POZ:=POZ.ref();
                                 {? POW.find_key(POW.LP,POW.SLU,POW.SLO)
                                 || POW.KW+=_kw; {? POW.KW=0 || POW.del() || POW.put() ?}
                                 || POW.KW:=_kw; POW.add()
                                 ?};
                                 POW.cntx_pop()
                              ?};
                              POW.next()
                           !}
                        ?}
                     ?};
                     {? var_pres('spr_bo')<=0 || 1 || spr_bo ?} & TT_POZ.next()
                  !}
               ?}
            || TT_POZ.last()
            ?}
         ?};
         TT_POZ.prefix(_b);
         {? var_pres('spr_bo')<=0 || 1 || spr_bo ?} & TT_POZ.next()
      !};
      POW.cntx_pop()
   ?}
||
   TT_POZ.prefix(_b);
:: w pierwszej czesci wyznaczenie obrotow dla wyroznikow - jesli sa roznice pomiedzy b.z. a b.o. to zapisy z b.o. sa najpierw stornowane
:: a potem przenoszone sa zapisy z b.z.
:: tabela TT_POW zawiera wyrozniki (z polem POZ.ref) z poprzedniego roku i z b.o. nowego roku
:: tabela _tt1 zawiera wyrozniki na ktorych zmienily sie obroty - jesli cos sie zmienilo to wycofanie wszystkich wyroznikow z b.o. i ponowne przeniesienie z b.z.
   {? TT_POZ.first()
   || VAR_DEL.delete('TT_POW');
      TT_POW:=tab_tmp(5,'REF_POZ', 'STRING[20]', 'REF_POZ',
                        'SLU', 'STRING[20]', 'SLU',
                        'SLO', 'STRING[8]', 'SLO',
                        'MNOZNIK', 'INTEGER', 'MNOZNIK',
                        'STR', 'INTEGER', 'STR',
                        'WAL', 'STRING[16]', 'WAL',
                        'LP', 'INTEGER', 'LP',
                        'SLUREF', 'INTEGER', 'SLUREF',
                        'SLOREF', 'INTEGER', 'SLOREF',
                        'LP_NEXT', 'INTEGER', 'LP_NEXT',
                        'KW', 'REAL', 'KW');
      POZ.cntx_psh(); POW.cntx_psh(); SLUAPPL.cntx_psh(); SLO.cntx_psh();
      POZ.prefix(); POW.index('POZ'); SLUAPPL.prefix(); SLO.prefix();
      {!|? _maska:=8+TT_POZ.REF;
           _ref:=BB.sqlint(TT_POZ.REF);
           {? POZ.name()<>_maska
           || POZ.use(_maska); POZ.prefix()
           ?};
           {? POW.name()<>('pow_'+(4-_maska))
           || POW.use('pow_'+(4-_maska)); POW.index('POZ')
           ?};
:: przepisanie wyroznikow z roku poprzedniego + z b.o. z roku nastepnego - tylko tych ktore maja byc przenoszone na nowy rok
           {? POZ.seek(_ref,)
           || POW.prefix(POZ.ref);
              {? POW.first()
              || {!|? {? TT_POZ.MNOZNIK=1
                      || _lp:=POW.LP
                      || _lp:=0; _i:=1;
                         {!|? _lp=0 & _i<=_c
                         |! {? ($('TT_POZ.NPOZ'+$_i))()=POW.LP
                            || _lp:=_i
                            ?};
                            _i+=1
                         !}
                      ?};
                      {? do_bo[_lp]
                      || TT_POW.blank();
                         TT_POW.MNOZNIK:=TT_POZ.MNOZNIK;
                         TT_POW.LP:=POW.LP;
                         TT_POW.SLU:=POW.SLU().SLU().NAZ;
                         TT_POW.SLO:=POW.SLO().KOD;
                         TT_POW.SLUREF:=#POW.SLU;
                         TT_POW.SLOREF:=#POW.SLO;
                         TT_POW.REF_POZ:=TT_POZ.REF;
                         TT_POW.STR:=TT_POZ.STR;
                         TT_POW.WAL:=TT_POZ.WAL;
                         {? TT_POZ.MNOZNIK=1
                         || TT_POW.LP_NEXT:=($('TT_POZ.NPOZ'+$POW.LP))()
                         ?};
                         {? ~TT_POW.find_rec()
                         || TT_POW.add()
                         ?};
                         TT_POW.KW+=POW.KW;
                         TT_POW.put()
                      ?};
                      POW.next()
                 !}
              ?}
           ?};
           TT_POZ.next()
      !};
      POZ.cntx_pop(); POW.cntx_pop();
      TT_POZ.cntx_psh();
      TT_POZ.index(ttpozind);
      exec('oczysc_tt','zam_okr_rok',_b,_c);
:: roznica pomiedzy obrotami na wyroznikach b.z. i b.o., wyrozniki, ktore pozostaja w tabeli _tt1 maja roznice
      _tt1:=sql('select sum(MNOZNIK*STR*KW), WAL, SLU, SLO from :_a '+
                'group by WAL, SLU, SLO '+
                'having sum(MNOZNIK*STR*KW)<>0', TT_POW);
      {? _tt1.first()
:: zmienily sie obroty na wyroznikach
      || _warunek:='(';
         {! _i:=1.._c
         |! {? _i>1 || _warunek+=' or ' ?};
            _warunek+='LW'+$_i+'=1'
         !};
         _warunek+=') ';
:: zsumowanie TT_POZ walutami stronami i latami
         _tt2:=sql('select sum("SUM") "SUM", sum(SUMW) SUMW, WAL, STR, MNOZNIK from :_a '+
                  'where KONTO=\''+_b+'\' '+
                  'and '+_warunek+
                  'group by WAL, STR, MNOZNIK '+
                  'order by WAL, MNOZNIK, STR', TT_POZ);
         {? _tt2.first()
         || POW.index('POZ');
            {!|? POZ.blank(1);
                 POZ.POZ:=ZAMKNIJ.POZ; POZ.DOK:=ZAMKNIJ.DOK;
                 POZ.PKON:=_b;
                 POZ.A:=POZ.ZP:=POZ.ZK:='N';
                 {? _tt2.STR=-1
                 || POZ.STR:='Wn'
                 || POZ.STR:='Ma'
                 ?};
                 POZ.SUM:=_tt2.MNOZNIK*_tt2.SUM;
                 POZ.SUMW:=_tt2.MNOZNIK*_tt2.SUMW;
                 POZ.WAL:={? _tt2.WAL='0'
                          || null
                          || SLO.prefix();
                             SLO.seek(BB.sqlint(_tt2.WAL),'sl_ogol');
                             SLO.ref()
                          ?};
                 {? var_pres('spr_bo')<=0
                 || ZAMKNIJ.OK:=POZ.add()
                 || spr_bo:=ZAMKNIJ.OK:=0
                 ?};
                 {? ZAMKNIJ.OK
                 || ZAMKNIJ.POZ+=1;
                    POW.prefix(POZ.ref);
                    TT_POZ.prefix(_b, _tt2.MNOZNIK, _tt2.WAL, _tt2.STR);
                    {? TT_POZ.first() & var_pres('spr_bo')<=0
                    || {!|? _p:=''; {! _i:=1.._c |! _p+=($('$TT_POZ.LW'+$_i))()+',' !};
                            _wyr:=_p*'1';
                            {? _wyr
                            || TT_POW.prefix(TT_POZ.REF);
                               {? TT_POW.first()
                               || {! |?
                                     {? SLUAPPL.seek(TT_POW.SLUREF,) & SLO.seek(TT_POW.SLOREF,)
                                     || POW.blank(1);
                                        POW.POZ:=POZ.ref;
                                        {? TT_POW.MNOZNIK=-1
                                        || POW.LP:=TT_POW.LP
                                        || POW.LP:=TT_POW.LP_NEXT
                                        ?};
                                        POW.SLU:=SLUAPPL.ref;
                                        POW.SLO:=SLO.ref;
                                        {? ~POW.find_rec() || POW.add() ?};
                                        POW.KW+=_tt2.MNOZNIK*TT_POW.KW;
                                        {? POW.KW=0
                                        || POW.del()
                                        || POW.put()
                                        ?}
                                     ?};
                                     TT_POW.next()
                                  !}
                               ?};
                               TT_POZ.del()
                            || TT_POZ.next()
                            ?}
                       !}
                    ?};
                    {? POW.size()=0 & POZ.SUM=0 & POZ.SUMW=0
                    || {? exec('czy_poz','zam_okr_rok',_b,POZ.WAL) | ~exec('find_op1','zam_okr_rok',_d,_e,_b,POZ.WAL)
                       || {? var_pres('spr_bo')<=0 & POZ.del() || ZAMKNIJ.POZ-=1 ?}
                       ?}
                    ?}
                 ?};
                 _tt2.next()
            !}
         ?};
         obj_del(_tt2)
      ?};
      obj_del(_tt1);
      TT_POZ.cntx_pop();
      SLUAPPL.cntx_pop(); SLO.cntx_pop();
      VAR_DEL.delete('TT_POW');
:: wykluczenie TT_POZ bez wyroznikow ktorych saldo jest zerowe
      {? TT_POZ.first()
      || _warunek:='(';
         {! _i:=1.._c
         |! {? _i>1 || _warunek+=' and ' ?};
            _warunek+='LW'+$_i+'=0'
         !};
         _warunek+=') ';
         _tt3:=sql('select sum(STR*MNOZNIK*"SUM") "SUM", sum(STR*MNOZNIK*SUMW) SUMW, WAL from :_a '+
                   'where KONTO=\''+_b+'\' '+
                   'and '+_warunek+
                   'group by WAL '+
                   'having sum(STR*MNOZNIK*"SUM")<>0 or sum(STR*MNOZNIK*SUMW)<>0 '+
                   'order by WAL ', TT_POZ);
         {? _tt3.first()
:: jesli zostaly rekordy w TT_POZ to dolaczenie ich zbiorcza kwota - sa to obroty bez wyroznikow
         ||
            {? TT_POZ.first()
            || _warunek:='(';
               {! _i:=1.._c
               |! {? _i>1 || _warunek+=' and ' ?};
                  _warunek+='LW'+$_i+'=0'
               !};
               _warunek+=') ';
               _tt4:=sql('select sum(MNOZNIK*"SUM") "SUM", sum(MNOZNIK*SUMW) SUMW, WAL, STR from :_a '+
                         'where KONTO=\''+_b+'\' '+
                         'and '+_warunek+
                         'group by WAL, STR '+
                         'having sum(MNOZNIK*"SUM")<>0 or sum(MNOZNIK*SUMW)<>0 '+
                         'order by WAL, STR', TT_POZ);
               {? _tt4.first()
               ||
                  {? var_pres('spr_bo')>0
                  || spr_bo:=ZAMKNIJ.OK:=0
                  || {! |?
                           POZ.blank(1);
                           POZ.POZ:=ZAMKNIJ.POZ; POZ.DOK:=ZAMKNIJ.DOK;
                           POZ.PKON:=_b;
                           POZ.A:=POZ.ZP:=POZ.ZK:='N';
                           {? _tt4.STR=-1
                           || POZ.STR:='Wn'
                           || POZ.STR:='Ma'
                           ?};
                           POZ.SUM:=_tt4.SUM;
                           POZ.SUMW:=_tt4.SUMW;
                           POZ.WAL:={? _tt4.WAL='0'
                                     || null
                                     || SLO.prefix();
                                        SLO.seek(BB.sqlint(_tt4.WAL),'sl_ogol');
                                        SLO.ref()
                                     ?};
                           {? POZ.add() || ZAMKNIJ.POZ+=1 ?};
                           _tt4.next()
                     !}
                  ?};
                  obj_del(_tt4)
               ?}
            ?};
            obj_del(_tt3)
         ?}
      ?}
   ?}
?}


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Inicjowanie obiektu do zamykania okresów i generowania BO
:: POLA: OK - jeżeli 0 to zamykanie okresu nie powiodło się
::       ERRTXT - komunikat o błędzie
::       WN - kwota wn w PLN
::       MA - kwota ma w PLN
::       WNW - kwota wn w walucie
::       MAW - kwota ma w walucie
::       WNWPLN - kwota wn w PLN dla waluty
::       MAWPLN - kwota ma w PLN dla waluty
::       WN_PLN - kwota wn w PLN dla wszystkich walut
::       MA_PLN - kwota ma w PLN dla wszystkich walut
::       WAL - waluta (ref SLO)
::       KONTO - symbol konta (pełne konto bez masek)
::       DOK - ref dokumentu w BO
::       POZ - kolejny numer pozycji w dokumencie
::       SIZE - ilość stworzonych dokumentów
:;       EDIT - czy edytować konto przy zmianie planu kont
::  OLD: \init/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ZAM_CLASS',@.CLASS)>0 || return(1) ?};
obj_decl('ZAM_CLASS',
   obj_fld('OK',1),
   obj_fld('ERRTXT', ''),
   obj_fld('WN', 0),
   obj_fld('MA', 0),
   obj_fld('WNW', 0),
   obj_fld('MAW', 0),
   obj_fld('WNWPLN', 0),
   obj_fld('MAWPLN', 0),
   obj_fld('WN_PLN', 0),
   obj_fld('MA_PLN', 0),
   obj_fld('WAL', null),
   obj_fld('KONTO', ''),
   obj_fld('DOK', null),
   obj_fld('POZ', 1),
   obj_fld('SIZE', 0),
   obj_fld('EDIT', 0),
   obj_meth('__init',"BILANSP.AROK:=OKRESY.ZR;  BILANSP.PROK:=BILANSP.NROK:=BILANSP.BO:=null;
                      ROK_F.cntx_psh(); OKRO_F.cntx_psh();
                      ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA); OKRO_F.index('ROK'); OKRO_F.prefix();
                      OKRESY.ZO().ROK();
                      {? OKRO_F.NAZ='Bilans otwarcia' | var_pres('akt_bo')>0
                      || BILANSP.NROK:=BILANSP.AROK:=ROK_F.ref(); BILANSP.BO:=OKRO_F.ref();
                         {? ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref()) & ROK_F.prev()
                         || BILANSP.PROK:=ROK_F.ref()
                         ?}
                      |? OKRO_F.NAZ='Bilans zamknięcia'
                      || BILANSP.PROK:=ROK_F.ref();
                         {? ROK_F.next()
                         || BILANSP.NROK:=BILANSP.AROK:=ROK_F.ref();
                            OKRO_F.prefix(ROK_F.ref());
                            {? OKRO_F.first() & OKRO_F.NAZ='Bilans otwarcia'
                            || BILANSP.BO:=OKRO_F.ref()
                            || _a.OK:=0;
                               _a.ERRTXT:='Pierwszy okres w następnym roku nie jest\n'
                                          'okresem \"Bilans otwarcia\" lub brak okresów  w następnym roku.'@
                            ?}
                         || _a.OK:=0; _a.ERRTXT:='Brak następnego roku.'@
                         ?}
                      ?};
                      ROK_F.cntx_pop();  OKRO_F.cntx_pop()"
           )
        )


\first_rok_obsz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Funkcja służy do sprawdzania, czy rok (ROK_F) jest pierwszy dla obszaru
::   WE: _a - ref obszaru (B_DOMAIN) lub skrócona nazwa obszaru (B_DOMAIN.SYMBOL)
::       _b - ref badanego roku
::   WY: 1/0 - tak/nie
::----------------------------------------------------------------------------------------------------------------------
_dom:=null; _zwrot:=0;
B_DOMAIN.cntx_psh(); B_DOMAIN.index('SYMBOL'); B_DOMAIN.prefix();
{? type_of(_a)=type_of(null)
|| {? B_DOMAIN.seek(_a) || _dom:=B_DOMAIN.ref() ?}
|? type_of(_a)=type_of('')
|| {? B_DOMAIN.find_key(_a,) || _dom:=B_DOMAIN.ref() ?}
?};
B_DOMAIN.cntx_pop();
{? _dom
|| OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(_b);
   {? OKRO_F.first() & OKRO_F.next() & OKRO_F.POCZ<>date(0,0,0)
   || _pocz:=OKRO_F.POCZ;
      OKR_OBSZ.cntx_psh(); OKR_OBSZ.index('OKRO_F'); OKR_OBSZ.prefix(REF.FIRMA,_dom);
      {? OKR_OBSZ.first()
      || {! |?
            OKR_OBSZ.OKRO_F & OKR_OBSZ.OKRO_F().POCZ=date(0,0,0) & OKR_OBSZ.next()
         !}
      ?};
      _zwrot:=OKR_OBSZ.OKRO_F & OKR_OBSZ.OKRO_F().POCZ<>date(0,0,0) & OKRO_F.POCZ=_pocz;
      OKR_OBSZ.cntx_pop()
   ?};
   OKRO_F.cntx_pop()
?};
_zwrot


\first_rok_obsz1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Funkcja służy do wczytania pierwszego roku (ROK_F) dla obszaru
::   WE: _a - ref obszaru (B_DOMAIN) lub skrócona nazwa obszaru (B_DOMAIN.SYMBOL)
::   WY: ref pierwszego roku dla obszaru
::----------------------------------------------------------------------------------------------------------------------
_dom:=null; _zwrot:=null;
B_DOMAIN.cntx_psh(); B_DOMAIN.index('SYMBOL'); B_DOMAIN.prefix();
{? type_of(_a)=type_of(null)
|| {? B_DOMAIN.seek(_a) || _dom:=B_DOMAIN.ref() ?}
|? type_of(_a)=type_of('')
|| {? B_DOMAIN.find_key(_a,) || _dom:=B_DOMAIN.ref() ?}
?};
B_DOMAIN.cntx_pop();
{? _dom
|| OKRO_F.cntx_psh();
   OKR_OBSZ.cntx_psh(); OKR_OBSZ.index('FOKROBSZ'); OKR_OBSZ.prefix(_dom,REF.FIRMA);

   {? OKR_OBSZ.first() & OKR_OBSZ.OKRO_F || _zwrot:=OKR_OBSZ.OKRO_F().ROK ?};
   OKR_OBSZ.cntx_pop(); OKRO_F.cntx_pop()
?};
_zwrot


\czy_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Znajdowanie pozycji dla konta
::   WE: _a - symbol konta analitycznego, _b - ref waluty
::  OLD: \czy_poz/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.cntx_psh(); _zwrot:=0;
POZ.index('PKON'); POZ.prefix(_a);
{? POZ.first()
|| {? _b=FINFO.NAROD
   || _zwrot:=1
   || {! |?
        _zwrot:=(POZ.WAL=_b);
        ~_zwrot & POZ.next()
      !}
   ?}
?};
POZ.cntx_pop();
_zwrot


\find_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Szuka rozrachunkow nierozliczonych w "starym" roku
::   WE: _a, _b - daty od i do, _c - symbol konta, _d - ref waluty
::  OLD: \find_op/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('czy_poz','zam_okr_rok',_c,_d) &
   exec('find_op1','zam_okr_rok',_a,_b,_c,_d)
|| {? var_pres('spr_bo')>0
   || spr_bo:=ZAMKNIJ.OK:=0
   || POZ.blank(1);
      POZ.POZ:=ZAMKNIJ.POZ; POZ.DOK:=ZAMKNIJ.DOK; POZ.PKON:=AN.SYM;
      POZ.WAL:={? _d=FINFO.NAROD || null || _d ?};
      POZ.A:=POZ.ZP:=POZ.ZK:='N'; POZ.STR:='Wn';
      POZ.SUMW:=POZ.SUM:=0;
      ZAMKNIJ.OK:=POZ.add(); {? ZAMKNIJ.OK || ZAMKNIJ.POZ+=1 ?}
   ?}
?}


\find_op1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Szuka rozrachunkow nierozliczonych w "starym" roku
::       (pomocnicza do \find_op)
::   WE: _a, _b - daty od i do, _c - symbol konta, _d - ref waluty
::  OLD: \find_op1/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
OP.cntx_psh();
OP.index('KON_O'); OP.prefix(_d,ODD.ref(),_c);
{? OP.first()
|| {! |?
      _zwrot:=exec('test_dat','zam_okr_rok',_a,_b);
      ~_zwrot & OP.next()
   !}
?};
OP.cntx_pop();
_zwrot


\test_dat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Sprawdza, czy rozrachunek ma zapis z przedziału dat
::   WE: _a - data od
::       _b - data do
::  OLD: \test_dat/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ZAP_OP.index('OP');
{? (OP.DO<_a) & (OP.WN$2<>OP.MA$2) || _wyn:=1 ?};
{? ~_wyn & (OP.DO>=_a) & (OP.DO<=_b) || _wyn:=1 ?};
{? ~_wyn
|| ZAP_OP.prefix(OP.ref());
   {? ZAP_OP.first()
   || {! |?
         {? ( (ZAP_OP.DATA>=_a) & (ZAP_OP.DATA<=_b) ) |
              ( (ZAP_OP.DATA<_a) & (OP.WN$2<>OP.MA$2) )
         || _wyn:=1
         ?};
         ZAP_OP.next() & ~_wyn
      !}
   ?}
?};
{? ~_wyn
|| _waluta:=OP.WAL;
   OP.cntx_psh(); OP.index('KON_OBW'); OP.prefix(OP.ODD,OP.AN,OP.SYM,OP.SYM,OP.SYM_ROK);
   {? OP.size()>1 & OP.first()
   || {! |?
         {? OP.WAL<>_waluta & (OP.WN$2<>OP.MA$2) || _wyn:=1 ?};
         ~_wyn & OP.next()
      !}
   ?};
   OP.cntx_pop()
?};
_wyn


\oczysc_tt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: M.Palma [12.30]
:: OPIS: usuniecie z tabeli TT_POW wzajemnie zerujacych sie rekordow
::       wyzerowanie TT_POZ.LW? dla rekordow przy ktorych nie pozostaly zadne wyrozniki
:: WE: _a - symbol konta
::     _b - liczba wyroznikow
::  OLD: \oczysc_tt/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
TT_POW.cntx_psh();
TT_POW.index(TT_POW.ndx_tmp(,,'WAL',,,'STR',,,'SLU',,,'SLO',,,'MNOZNIK',,));
:: usuniecie ewentualnych wzajemnie zerujacych sie rekordow z b.o.
_tt1:=sql('select WAL, STR, SLU, SLO, sum(KW) KW from :_a where MNOZNIK=-1 group by WAL, STR, SLU, SLO having sum(KW)=0',
          TT_POW);
{? _tt1.first()
|| {! |?
      TT_POW.prefix(_tt1.WAL, _tt1.STR, _tt1.SLU, _tt1.SLO, -1);
      {? TT_POW.first()
      || {!|? TT_POW.del() !}
      ?};
      _tt1.next()
   !}
?};
obj_del(_tt1);
TT_POW.index(TT_POW.ndx_tmp(,,'WAL',,,'SLU',,,'SLO',,,'MNOZNIK',,));
:: usuniecie ewentualnych wzajemnie zerujacych sie rekordow z b.z. i z b.o.
_tt1:=sql('select WAL, SLU, SLO, sum(STR*MNOZNIK*KW) KW from :_a group by WAL, SLU, SLO having sum(STR*MNOZNIK*KW)=0',
          TT_POW);
{? _tt1.first()
|| {! |?
      TT_POW.prefix(_tt1.WAL, _tt1.SLU, _tt1.SLO);
      {? TT_POW.first()
      || {! |? TT_POW.del() !}
      ?};
      _tt1.next()
   !}
?};
obj_del(_tt1);
TT_POW.cntx_pop();
:: wyczyszczenie znacznikow TT_POZ.LW?
TT_POZ.cntx_psh();
TT_POZ.prefix(_a);
{? TT_POZ.first()
|| {! |?
      TT_POW.prefix(TT_POZ.REF);
      {? TT_POW.size()=0
      || {! _i:=1.._b
         |! ($('TT_POZ.LW'+$_i+':=0'))()
         !};
         TT_POZ.put()
      ?};
      TT_POZ.next()
   !}
?};
TT_POZ.cntx_pop();
TT_POW.prefix()


\suma_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Saldo dla dziedziny wyroznikow
::  OLD: \suma_wyr/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
TT_POZ.cntx_psh();
s_bo:=s_rok:=s_bo_w:=s_rok_w:=0;
{? TT_POZ.first()
|| {! |?
      {? TT_POZ.MNOZNIK=-1
      || s_bo+=TT_POZ.SUM*TT_POZ.STR;
         s_bo_w+=TT_POZ.SUMW*TT_POZ.STR
      || s_rok+=TT_POZ.SUM*TT_POZ.STR;
         s_rok_w+=TT_POZ.SUMW*TT_POZ.STR
      ?};
      TT_POZ.next()
   !}
?};
TT_POZ.cntx_pop()


\poz_pln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Zlicza obroty w PLN dla konta
::  OLD: \poz_pln/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_sym:=AN.SYM;
DOK.cntx_psh(); POZ.cntx_psh();
POZ.index('PKON'); POZ.prefix(_sym);
{? POZ.first()
|| {! |?
      {? -POZ.DOK().ZP='t' &  POZ.DOK().ODD=ODD.ref()
      || {? -POZ.STR='wn' || ZAMKNIJ.WN+=POZ.SUM || ZAMKNIJ.MA+=POZ.SUM ?}
      ?};
      POZ.next() & ZAMKNIJ.OK
   !}
?};
DOK.cntx_pop();  POZ.cntx_pop();
ZAMKNIJ.OK


\poz_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formuła zlicza obroty dango konta, danej waluty oraz odpowiednio
::       kwotę w PLN
::   WE: _a - symbol konta
::       _b - ref waluty (SLO)
::  OLD: \poz_wal/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh(); OKRO_F.cntx_psh(); DOK.cntx_psh(); POZ.cntx_psh();
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
{? ZAMKNIJ.OK & BILANSP.PROK
|| BILANSP.PROK();
   ZAMKNIJ.WNW:=ZAMKNIJ.MAW:=ZAMKNIJ.WNWPLN:=ZAMKNIJ.MAWPLN:=0;
   OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
   {? ZAMKNIJ.OK & OKRO_F.first()
   || {! |?
         exec('poz_licz','zam_okr_rok',_a,_b,1);
         OKRO_F.next() & ZAMKNIJ.OK
      !}
   ?}
?};
s_rok_pln:=-ZAMKNIJ.WNWPLN+ZAMKNIJ.MAWPLN;
s_rok_w:=-ZAMKNIJ.WNW+ZAMKNIJ.MAW;
ZAMKNIJ.WNW:=ZAMKNIJ.MAW:=ZAMKNIJ.WNWPLN:=ZAMKNIJ.MAWPLN:=0;
BILANSP.BO().ROK();
exec('poz_licz','zam_okr_rok',_a,_b,-1);
s_bo_pln:=ZAMKNIJ.WNWPLN-ZAMKNIJ.MAWPLN;
s_bo_w:=ZAMKNIJ.WNW-ZAMKNIJ.MAW;
DOK.cntx_pop(); POZ.cntx_pop(); ROK_F.cntx_pop(); OKRO_F.cntx_pop()


\poz_licz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Liczy obroty dla podanego konta i podanej waluty
::   WE: _a - symbol konta
::       _b - ref waluty (tabela SLO)
::       _c - współczynnik 1=OK, -1=dla BO
::  OLD: \poz_licz/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_c')<=0 || _c:=1 ?};
DOK.use('doku'+ROK_F.KOD+form(OKRO_F.NR,-2));
POZ.use('pozy'+ROK_F.KOD+form(OKRO_F.NR,-2));
POW.use('pow_'+ROK_F.KOD+form(OKRO_F.NR,-2));
{? _c=-1
|| POZ.index('O_PKON'); POZ.prefix(ODD.ref(),_a)
|| POZ.index('O_KON'); POZ.prefix(ODD.ref(),_a)
?};
DOK.prefix();
{? POZ.first()
|| {! |?
      {? POZ.WAL=_b & POZ.DOK().ZP='T'
      || {? -POZ.STR='wn'
         || ZAMKNIJ.WNWPLN+=_c*POZ.SUM; ZAMKNIJ.WNW+=_c*POZ.SUMW
         || ZAMKNIJ.MAWPLN+=_c*POZ.SUM; ZAMKNIJ.MAW+=_c*POZ.SUMW
         ?}
      ?};
      POZ.next()
   !}
?}


\bo_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Zapisanie informacji o pozycjach dokumentow BO do tabeli tymczasowej
::  OLD: \bo_poz/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__DBO','__DBOP');
__DBO:=tab_tmp(2,
   'KON','STRING[35]','Konto',
   'WAL','INTEGER',
);
__DBOP:=tab_tmp(1,
   'DBO','INTEGER',,
   'POZ','INTEGER',,
   'POW','STRING[255]',
);
__DBOP1:=__DBOP.ndx_tmp('',1,'DBO',,0, 'POW',,0);
DOK.cntx_psh(); DOK_REJ.cntx_psh(); SLO.cntx_psh();
POZ.cntx_psh();
POZ.index('OKWAL_O1'); POZ.prefix('T','T',ODD.ref());
{? POZ.first()
|| {!
   |? {? POZ.DOK().DOK_REJ().SLO().KOD='BO'
      || {? ~__DBO.find_key(POZ.PKON,POZ.WAL)
         || __DBO.KON:=POZ.PKON;
            __DBO.WAL:=POZ.WAL;
            __DBO.add()
         ?};
         __DBOP.DBO:=__DBO.ref();
         __DBOP.POZ:=POZ.ref();
         __DBOP.add()
      ?};
      POZ.next()
   !}
?};
POZ.cntx_pop();
DOK.cntx_pop(); DOK_REJ.cntx_pop(); SLO.cntx_pop()


\tran_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formuła przypisuje nowe konta na podstawie starego konta
::  OLD: \tran_kon/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.index('PKON'); POZ.prefix();
{? POZ.first()
|| POZ.for_each("echo('Przypisanie nowych kont. Konto %1'@[POZ.PKON]);
                 {? (POZ.KON='' | POZ.KON*'?') & (-POZ.DOK().A<>'t') & (POZ.PKON<>'')
                 || {? (_wyn:=exec('szuk_kon','zam_okr_rok',POZ.PKON))<>''
                    || POZ.KON:=_wyn
                    || exec('realiz','zam_okr_rok')
                    ?};
                    KS.index('SYM'); KS.prefix();
                    KOM.index('SYS'); KOM.prefix();
                    {? +POZ.KON & KS.find_key(BILANSP.NROK, BILANSP.NROK().SYNT+POZ.KON)
                    || {? KOM.find_key(KS.ref, 'T')
                       || POZ.KOM:=KOM.ref
                       || KOM.blank(); KOM.NAZ:=KS.SYM+' - '+KS.NAZ; KOM.SYS:='T';
                          {? KOM.add() || POZ.KOM:=KOM.ref() ?}
                       ?}
                    ?};
                    POZ.put()
                 ?}")
?};
echo()


\szuk_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formuła szuka pierwszego napotkanego nowego konta, które jest przypisane do przetwarzanego starego konta.
::  OLD: \szuk_kon/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_kon:='';  _ok:=1;
POZ.cntx_psh();
POZ.index('O_PKON'); POZ.prefix(POZ.DOK().ODD,_a);
{? POZ.first()
|| {! |?
      {? POZ.KON<>'' & ~(POZ.KON*'?') || _kon:=POZ.KON; _ok:=0 ?};
      POZ.next() & _ok
   !}
?};
POZ.cntx_pop();
_kon


\realiz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formuła realizuje przypisanie nowego konta poprzez wykorzystanie
::       regul przeksztalcenia kont BO lub edycję uzytkownika.
::  OLD: \realiz/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
ZAMKNIJ.EDIT:=0;
BILANSP.win_edit('KONTO');
BILANSP.KS_S:=BILANSP.KS_N:=null; BILANSP.DL_S:=BILANSP.DL_N:=0;
{! _i:=1..10
|! ($('BILANSP.AN'+$_i+'_S:=BILANSP.AN'+$_i+'_N:=null'))();
   ($('BILANSP.SL'+$_i+'_S:=BILANSP.SL'+$_i+'_N:=null'))()
!};
_konto:=exec('tst_ks','zam_okr_rok');
exec('tst_bud','zam_okr_rok');
{? BILANSP.DL_N & ZAMKNIJ.OK
|| {! _i:=1 .. BILANSP.DL_N |!
      _konto+={? BILANSP.NROK().SEP=',' || '' || BILANSP.NROK().SEP ?};
      {? ($('BILANSP.SL'+$_i+'_N'))()
      || {? ($('BILANSP.AN'+$_i+'_N'))()
         || _konto+=($('BILANSP.AN'+$_i+'_N().KOD'))()
         || _konto+=($('BILANSP.SL'+$_i+'_N().DL*''?'''))()
         ?}
      || _konto+='?'
      ?}
   !}
|| {? BILANSP.DL_S<>BILANSP.DL_N || _konto+='?' ?}
?};
{? (_konto*'?' | (_k:=exec('an_bo','zam_okr_rok', POZ.PKON); _k<>'')) & ZAMKNIJ.OK
|| BILANSP.NROK();
   {? var_pres('_k')<=0 || _k:=exec('an_bo','zam_okr_rok', POZ.PKON) ?};
   {? _k<>''
   || POZ.KON:=_k; ZAMKNIJ.EDIT:=1
   || {? ZAMKNIJ.EDIT:=BILANSP.edit()
      || POZ.KON:=BILANSP.KS_N().SYM;
         {! _i:=1 .. BILANSP.DL_N |!
            POZ.KON+={? BILANSP.NROK().SEP=',' || '' || BILANSP.NROK().SEP ?};
            {? ($('BILANSP.SL'+$_i+'_N'))()
            || {? ($('BILANSP.AN'+$_i+'_N'))()
               || POZ.KON+=($('BILANSP.AN'+$_i+'_N().KOD'))()
               || POZ.KON+=($('BILANSP.SL'+$_i+'_N().DL*''?'''))()
               ?}
            || POZ.KON+='?'
            ?}
         !};
         {? POZ.KON<>'' & POZ.KON*'?'=0
         || AN_BO.ROK:=BILANSP.NROK;
            {? exec('maska','zam_okr_rok',POZ.PKON,POZ.KON)
            || AN_BO.cntx_psh();
               AN_BO.prefix();
               AN_BO.add();
               AN_BO.cntx_pop()
            ?}
         ?}
      ?}
   ?}
|| POZ.KON:=_konto; ZAMKNIJ.EDIT:=1
?};
ZAMKNIJ.EDIT


\tst_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formuła wypełnia pola kont syntetycznych zamiennej BILANSP przygotowując ją do edycji
::  OLD: \tst_ks/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_konto:=BILANSP.NROK().SYNT*'?';
{? ZAMKNIJ.OK
|| KS.index('SYM');  KS.prefix();
   {? KS.find_key(BILANSP.PROK, BILANSP.PROK().SYNT+POZ.PKON)
   || BILANSP.KS_S:=KS.ref()
   || ZAMKNIJ.OK:=0; ZAMKNIJ.ERRTXT:='Nie znaleziono poprzedniego konta - %1'@[BILANSP.PROK().SYNT+POZ.PKON]
   ?};
   {? KS.find_key(BILANSP.NROK, BILANSP.NROK().SYNT+POZ.KON) &
      BILANSP.PROK().SYNT=BILANSP.NROK().SYNT &
      ~(BILANSP.NROK().SYNT+POZ.KON*'?') & +POZ.KON>=BILANSP.NROK().SYNT
   || BILANSP.KS_N:=KS.ref();
      _konto:=BILANSP.NROK().SYNT+POZ.KON
   |? KS.find_key(BILANSP.NROK, BILANSP.NROK().SYNT+POZ.PKON)&
      BILANSP.PROK().SYNT=BILANSP.NROK().SYNT & +POZ.PKON
   || BILANSP.KS_N:=KS.ref();
      _konto:=BILANSP.NROK().SYNT+POZ.PKON
   |? _konto:=exec('szuk_syn','zam_okr_rok', POZ.PKON);
      ~(_konto*'?') & +_konto & KS.find_key(BILANSP.NROK, _konto)
   || BILANSP.KS_N:=KS.ref()
   |? KS.find_key(BILANSP.NROK, BILANSP.PROK().SYNT+POZ.PKON) &
      +POZ.PKON
   || BILANSP.KS_N:=KS.ref();
      _konto:=BILANSP.PROK().SYNT+POZ.PKON+'?'
   ?}
?};
_konto


\szuk_syn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Szukanie konta syntetycznego na podstawie tego co jest w nowym koncie
::   WE: _a - stare konto
::  OLD: \szuk_syn/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_kon:=BILANSP.NROK().SYNT*'?';  _ok:=1;
POZ.cntx_psh();
POZ.index('PKON'); POZ.prefix(BILANSP.PROK().SYNT+_a);
{? POZ.first()
|| {! |?
      {? POZ.KON<>'' & ~(BILANSP.NROK().SYNT+POZ.KON*'?') & +POZ.KON>=BILANSP.NROK().SYNT
      || _kon:=BILANSP.NROK().SYNT+POZ.KON;
         _ok:=0
      ?};
      POZ.next() & _ok
   !}
?};
POZ.cntx_pop();
_kon


\maska
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Tworzy regule przypisania kont analitycznych
::   WE: _a - konto "stare"
::       _b - konto "nowe"
::   WY: Czy operacja zakonczona sukcesem? 1-tak 0-nie
::  OLD: \maska/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
AN_BO.PKON:=_a;
AN_BO.KON:=_b;
_ok:=0;
KS.index('SYM'); BUD.index('KS');
_ks_a:=_ks_b:=null;
_sep_b:=ROK_F.SEP;
KS.prefix(ROK_F.ref(),ROK_F.SYNT+_b); {? KS.first() || _ks_b:=KS.ref() ?};
_kon:=ROK_F.SYNT+_b; _b:=ROK_F.SYNT-_b;
{? ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref()) & ROK_F.prev()
|| _sep_a:=ROK_F.SEP;
   KS.prefix(ROK_F.ref(),ROK_F.SYNT+_a); {? KS.first() || _ks_a:=KS.ref() ?};
   _pkon:=ROK_F.SYNT+_a; _a:=ROK_F.SYNT-_a;
   ROK_F.next()
?};
{? _ks_a<>null & _ks_b<>null
|| _hpoz:=1;
   BUD.prefix(_ks_a);
   {? BUD.first()
   || {! |?
         _ok:=1;
         _pkon+={? _sep_a=',' || '' || _a:=1-_a; _sep_a ?};
         _dl:=BUD.SLU().SLU().DL;
         _slu:=SLU.ref();
         _an_a:=_dl+_a; _a:=_dl-_a;
         _hb:=_b;
         _poz:=_hpoz; _hkon:='';
         {! |?
            {? _hb<>''
            || BUD.cntx_psh(); BUD.prefix(_ks_b);
               {? BUD.find_key(_poz)
               || {? _sep_b<>',' || _hb:=1-_hb ?};
                  _an_b:=BUD.SLU().SLU().DL+_hb; _hb:=SLU.DL-_hb;
                  {? _an_a=_an_b & _slu=BUD.SLU().SLU
                  || _kon+=_hkon+{? _sep_b=',' || '' || _sep_b ?}+_dl*'?';
                     _pkon+=_dl*'?';
                     _ok:=-1;
                     _hpoz:=_poz+1;
                      _b:=_hb
                  || _hkon+={? _sep_b=',' || '' || _sep_b ?}+_an_b; _ok:=1
                  ?}
               || {? _poz=1 || _ok:=0 ?}
               ?};
               BUD.cntx_pop();
               _poz+=1;
               _ok>0 & _poz<=10
            ?}
         !};
         {? _ok=1 || _pkon+=_an_a ?};
         BUD.next()
      !};
      {? +_b<>+_a || _kon+=(+_a)-_b ?}
   || _ok:=-1
   ?}
?};
{? _kon='' | _pkon=''
|| _ok:=0
|? _ok>0
|| _ok:=1;
   AN_BO.PKON:=_pkon;
   AN_BO.KON:=_kon
?};
_ok<>0


\tst_bud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formuła wypełnia pola budowy konta zamiennej BILANSP przygotowując ją do edycji.
::  OLD: \tst_bud/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
BUD.index('KS'); SLO.index('SL');  SLO.prefix();
{? BILANSP.KS_S
|| BUD.prefix(BILANSP.KS_S);  BILANSP.DL_S:=BUD.size();
   _dl_s:=BILANSP.PROK().SYNT+{? BILANSP.PROK().SEP=','||0||1?};
   _licz:=1;
   {? BUD.first()
   || {!|? ($('BILANSP.SL'+$_licz+'_S:=BUD.SLU().SLU'))();
           {? +POZ.PKON>=_dl_s &
              SLO.find_key(BUD.SLU().SLU, BUD.SLU().SLU().DL+(_dl_s-POZ.PKON))
           || ($('BILANSP.AN'+$_licz+'_S:=SLO.ref'))()
           ?};
           _dl_s+=BUD.SLU().SLU().DL+{? BILANSP.PROK().SEP=','||0||1?};
           _licz+=1;
           BUD.next()
      !}
   ?};
   _dl_s-={? BILANSP.PROK().SEP=','||0||1?}
?};
{? BILANSP.KS_N
|| BUD.prefix(BILANSP.KS_N);  BILANSP.DL_N:=BUD.size();
   _dl_n:=BILANSP.NROK().SYNT+{? BILANSP.NROK().SEP=','||0||1?};
   _licz:=1;
   {? BUD.first()
   || {!|? ($('BILANSP.SL'+$_licz+'_N:=BUD.SLU().SLU'))();
           {? +POZ.KON>=_dl_n &
              SLO.find_key(BUD.SLU().SLU, BUD.SLU().SLU().DL+(_dl_n-POZ.KON))
           || ($('BILANSP.AN'+$_licz+'_N:=SLO.ref'))()
           ?};
           _dl_n+=BUD.SLU().SLU().DL+{? BILANSP.NROK().SEP=','||0||1?};
           _licz+=1;
           BUD.next()
      !}
   ?};
   _dl_n-={? BILANSP.NROK().SEP=','||0||1?}
?};
_ile:=0;
{! _j:=1 .. BILANSP.DL_N
|! {? _j<=BILANSP.DL_S & ($('BILANSP.SL'+$_j+'_N & ~BILANSP.AN'+$_j+'_N'))() &
      exec('czy_rowne','zam_okr_rok',($('BILANSP.SL'+$_j+'_N'))(), ($('BILANSP.SL'+$_j+'_S'))(),_j)
   || ($('BILANSP.AN'+$_j+'_N:=BILANSP.AN'+$_j+'_S'))();
      _ile+=1
   ?}
!};
{? BILANSP.DL_S<>BILANSP.DL_N | _ile<>BILANSP.DL_N
|| {! _i:=1 .. BILANSP.DL_S |!
      {! _j:=1 .. BILANSP.DL_N |!
         {? ($('BILANSP.SL'+$_j+'_N & ~BILANSP.AN'+$_j+'_N'))() &
            exec('czy_rowne','zam_okr_rok',($('BILANSP.SL'+$_j+'_N'))(), ($('BILANSP.SL'+$_i+'_S'))(),_i)
         || ($('BILANSP.AN'+$_j+'_N:=BILANSP.AN'+$_i+'_S'))()
         ?}
      !}
   !}
?}


\czy_rowne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Sprawdza czy slowniki dla konta starego roku wzgledem nowego dla danego poziomu sa rowne.
::       Dla slownikow opartych na wzorcu emag i fiks zmniejsza kryteria porownania, sprawdza
::       dlugosc i nazwe slownika oraz zgodnosc kodu i tresc pozycji slownika analityki
::   WE: _a - SLU.ref nowe
::       _b - SLU.ref stare
::       _c - poziom analityki starego konta
::  OLD: \czy_rowne/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_dl_a:=_dl_b:=0;
_a=_b |
( (SLU.seek(_b); _dl_b:=SLU.DL; SLU.WZ='prosty') &
  (SLU.seek(_a); _dl_a:=SLU.DL; SLU.WZ='prosty') &
  _dl_a=_dl_b &
  SLU.NAZ=(BILANSP.NROK().NAZ+4)+', '+BILANSP.KS_N().SYM+', POZ.'+(('0'+$_c)+2) &
  (SLO.index('SL'); SLO.prefix();
   {? SLO.seek( ($('BILANSP.AN'+$_c+'_S'))() )
   || _tr:=SLO.TR;
      SLO.find_key(_a,SLO.KOD) & _tr=SLO.TR
   ?}
  )
)


\zamknij
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Właściwa akcja zamykania okresu
::  OLD: \zamknij/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAMKNIJ.OK
|| echo('Trwa zamykanie okresu. Proszę czekać ...'@);
   ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
   OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(REF.FIRMA);
   _poczr:=OKRESY.ZO().ROK().POCZ_ROK; _nr:=OKRESY.ZO().NR;
   OKRESY.ZO();
   {? OKRESY.ZO=null
   || OKRESY.ZO:=OKRO_F.ref();
      {? OKRO_F.ZAM='N'
      || OKRO_F.ZAM:='T'; OKRO_F.put();
         {? OKRO_F.NAZ='Bilans zamknięcia'
         || OKRO_F.ROK().ZAM:='T'; ROK_F.put()
         ?}
      || ZAMKNIJ.OK:=0; ZAMKNIJ.ERRTXT:='Błąd podczas zamykania okresu %1'@[naz_okr]
      ?}
   || {? {? ~OKRO_F.prev() || OKRO_F.NAZ='Bilans otwarcia' || 1 ?}
      || {? OKRESY.ZO=OKRO_F.ref() | _poczr<OKRO_F.ROK().POCZ_ROK
         || OKRESY.ZO();
            OKRESY.ZO:=OKRO_F.ref();
            {? OKRO_F.ZAM='N'
            || OKRO_F.ZAM:='T'; OKRO_F.put();
               {? OKRO_F.NAZ='Bilans zamknięcia'
               || OKRO_F.ROK().ZAM:='T'; ROK_F.put()
               ?}
            || ZAMKNIJ.OK:=0; ZAMKNIJ.ERRTXT:='Błąd podczas zamykania okresu %1'@[naz_okr]
            ?}
         || OKRESY.ZO();
            {? OKRO_F.ZAM='N'
            || OKRO_F.ZAM:='T'; OKRO_F.put();
               {? OKRO_F.NAZ='Bilans zamknięcia'
               || OKRO_F.ROK().ZAM:='T';
                  ROK_F.put()
               ?}
            || ZAMKNIJ.OK:=0; ZAMKNIJ.ERRTXT:='Błąd podczas zamykania okresu %1'@[naz_okr]
            ?}
         ?}
      || ZAMKNIJ.OK:=0; ZAMKNIJ.ERRTXT:='Błąd podczas zamykania okresu %1.\nBrak poprzedniego okresu.'@[naz_okr]
      ?}
   ?};
   OKRO_F.index('ROK');
   {? ZAMKNIJ.OK
   || OKRESY.ZR();
      OKRO_F.prefix(ROK_F.ref()); OKRESY.ZO();
      {? OKRO_F.next()
      || {? -OKRO_F.ZAM='t' & OKRESY.ZO
         || OKRO_F.prefix(); OKRESY.ZO();  OKRO_F.next(); OKRO_F.ROK()
         ?};
         _ar:=SSTALE.AR; _ao:=SSTALE.AO;
         SSTALE.AR:=OKRESY.ZR; SSTALE.AO:=OKRESY.ZO;
         exec('open_tabele','open_tab');
         SSTALE.AR:=_ar; SSTALE.AO:=_ao
      |? ROK_F.next()
      || OKRO_F.prefix(ROK_F.ref());
         {? OKRO_F.first()
         || {? -OKRO_F.ZAM='t' & OKRESY.ZO
            || OKRO_F.prefix(); OKRESY.ZO();  OKRO_F.next(); OKRO_F.ROK()
            ?};
            _ar:=SSTALE.AR; _ao:=SSTALE.AO;
            SSTALE.AR:=OKRESY.ZR; SSTALE.AO:=OKRESY.ZO;
            exec('open_tabele','open_tab');
            SSTALE.AR:=_ar; SSTALE.AO:=_ao
         ?}
      || ZAMKNIJ.OK:=0; ZAMKNIJ.ERRTXT:='Brak następnego roku bilansowego.'@
      ?};
      OKRO_F.prefix()
   ?}
?}


\sum_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Sprawdza bilansowanie się BO.
::  OLD: \sum_bo/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
BILANSP.BO().ROK();
DOK.use('doku'+ROK_F.KOD+form(OKRO_F.NR,-2));
POZ.use('pozy'+ROK_F.KOD+form(OKRO_F.NR,-2));
POW.use('pow_'+ROK_F.KOD+form(OKRO_F.NR,-2));
ZAMKNIJ.WN:=ZAMKNIJ.MA:=0;
KS.index('SYM'); KS.prefix(ROK_F.ref());
POZ.prefix();
_w:=POZ.for_each("
 {? KS.find_key(ROK_F.SYNT+POZ.KON)
 || {? -(1+KS.TYP)<>'p'
    || {? -POZ.STR='wn' || ZAMKNIJ.WN+=POZ.SUM || ZAMKNIJ.MA+=POZ.SUM ?}
    ?}
 || ZAMKNIJ.OK:=0; {? ~+ZAMKNIJ.ERRTXT || ZAMKNIJ.ERRTXT:='Nie znaleziono konta %1 w planie kont.'@[KS.SYM] ?}
 ?}
   ",1);
{? ~_w
|| ZAMKNIJ.OK:=0; {? ~+ZAMKNIJ.ERRTXT || ZAMKNIJ.ERRTXT:='Błąd przy przetwarzaniu rekordów tabeli POZ.'@ ?}
|? ZAMKNIJ.WN<>ZAMKNIJ.MA
|| ZAMKNIJ.OK:=0;
   {? ~+ZAMKNIJ.ERRTXT
   || ZAMKNIJ.ERRTXT:='Saldo obrotów dla okresu \"Bilans otwarcia\" nie jest zerowe.'
                      '\nRóżnica wynosi (WN-MA): %1'
                      '\nRoku nie można zamknąć.'@[form(ZAMKNIJ.WN-ZAMKNIJ.MA,16,2)]
   ?}
?};
ZAMKNIJ.OK


\k__hist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zamykanie i otwieranie okresów dla obszarów - zapisywanie w tabeli K__HIST
::   WE: _a - wskazanie na okres obrachunkowy (OKRO_F)
::       _b - ref obszaru (B_DOMAIN) lub skrócona nazwa obszaru (B_DOMAIN.SYMBOL)
::       _c - 'Z' - zamknięcie
::            'O' - otwarcie
::   WY: ref dodanego zapisu w K__HIST
::----------------------------------------------------------------------------------------------------------------------
_dom:=null; _zwrot:=null;
B_DOMAIN.cntx_psh(); B_DOMAIN.index('SYMBOL'); B_DOMAIN.prefix();
{? type_of(_b)=type_of(null)
|| {? B_DOMAIN.seek(_b) || _dom:=B_DOMAIN.ref() ?}
|? type_of(_b)=type_of('')
|| {? B_DOMAIN.find_key(_b,) || _dom:=B_DOMAIN.ref() ?}
?};
B_DOMAIN.cntx_pop();
{? _dom & _a & (_c='Z' | _c='O')
|| K__HIST.cntx_psh();
   K__HIST.prefix();
   K__HIST.blank(1);
   K__HIST.STATUS:=_c;
   K__HIST.STATOP:={? K__HIST.STATUS='Z' || 'Zamknięcie' || 'Otwarcie' ?};
   K__HIST.OKRO_F:=_a;
   K__HIST.B_DOMAIN:=_dom;
   K__HIST.DATA:=date();
   K__HIST.CZAS:=time();
   K__HIST.USER:=OPERATOR.USER;
   UD_POM.K2_OPIS:=OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ;
   {? K__HIST.STATUS='O'
   || K__HIST.win_edit('RED1');
      OKRO_F.cntx_psh(); OKRO_F.prefix(); K__HIST.OKRO_F();
      {? OKRO_F.ZAM='T'
      || OKRO_F.ZAM:='N';
         {? K__HIST.edit() & K__HIST.add() & OKRO_F.put() || _zwrot:=K__HIST.ref() ?}
      ?};
      OKRO_F.cntx_pop()
   || {? K__HIST.add() || _zwrot:=K__HIST.ref() ?}
   ?};
   K__HIST.cntx_pop()
?};
_zwrot


\k__histr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zamykanie i otwieranie okresów dla obszarów - zapisywanie w tabeli K__HIST
::   WE: _a - wskazanie na rok bilansowy (ROK_F)
::       _b - ref obszaru (B_DOMAIN) lub skrócona nazwa obszaru (B_DOMAIN.SYMBOL)
::       _c - 'Z' - zamknięcie
::            'O' - otwarcie
::   WY: ref dodanego zapisu w K__HIST
::----------------------------------------------------------------------------------------------------------------------
_dom:=null; _zwrot:=null;
B_DOMAIN.cntx_psh(); B_DOMAIN.index('SYMBOL'); B_DOMAIN.prefix();
{? type_of(_b)=type_of(null)
|| {? B_DOMAIN.seek(_b) || _dom:=B_DOMAIN.ref() ?}
|? type_of(_b)=type_of('')
|| {? B_DOMAIN.find_key(_b,) || _dom:=B_DOMAIN.ref() ?}
?};
B_DOMAIN.cntx_pop();
{? _dom & _a & (_c='Z' | _c='O')
|| K__HIST.cntx_psh();
   K__HIST.prefix();
   K__HIST.blank(1);
   K__HIST.STATUS:=_c;
   K__HIST.STATOP:={? K__HIST.STATUS='Z' || 'Zamknięcie' || 'Otwarcie' ?};
   K__HIST.ROK_F:=_a;
   K__HIST.B_DOMAIN:=_dom;
   K__HIST.DATA:=date();
   K__HIST.CZAS:=time();
   K__HIST.USER:=OPERATOR.USER;
   {? K__HIST.STATUS='O'
   || K__HIST.win_edit('RED2');
      ROK_F.cntx_psh(); ROK_F.prefix(); K__HIST.ROK_F();
      OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
      {? OKRO_F.last()
      || {? K__HIST.edit() & K__HIST.add() & OKRO_F.ZAM='T'
         || OKRO_F.ZAM:=ROK_F.ZAM:='N';
            {? OKRO_F.put() & ROK_F.put() || _zwrot:=K__HIST.ref() ?}
         ?}
      ?};
      OKRO_F.cntx_pop(); ROK_F.cntx_pop()
   || {? K__HIST.add() || _zwrot:=K__HIST.ref() ?}
   ?};
   K__HIST.cntx_pop()
?};
_zwrot


\a_lic
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Sprawdza, czy jest aktywna licencja dla obszaru
::   WE: _a - ref obszaru (B_DOMAIN) lub skrócona nazwa obszaru (B_DOMAIN.SYMBOL)
::----------------------------------------------------------------------------------------------------------------------
_find:=0; _dom:='';
B_DOMAIN.cntx_psh(); B_DOMAIN.index('SYMBOL'); B_DOMAIN.prefix();
{? type_of(_a)=type_of(null)
|| {? B_DOMAIN.seek(_a) || _dom:=B_DOMAIN.SYMBOL ?}
|? type_of(_a)=type_of('')
|| {? B_DOMAIN.find_key(_a,) || _dom:=B_DOMAIN.SYMBOL ?}
?};
B_DOMAIN.cntx_pop();
{? _dom<>''
|| __LIC.cntx_psh(); __LIC.index(lic_ind1); __LIC.prefix();
   _find:=__LIC.find_key(_dom);
   __LIC.cntx_pop()
?};
_find


\lic
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Tabelka z obszarami licencjonowanymi
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__LIC')<=0
|| __LIC:=exec('domain_lic','#b_domain');
   lic_ind1:=__LIC.ndx_tmp(,1,'SYMBOL',,); __LIC.index(lic_ind1); __LIC.prefix()
?}


\ustaw_bz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: W zmiennych OKRESY.ZO i OKRESY.ZR ustawia BZ i badany rok
::   WE: _a - ref roku
::----------------------------------------------------------------------------------------------------------------------
OKRESY.ZO:=OKRESY.ZR:=null;
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(_a);
{? OKRO_F.last() || OKRESY.ZO:=OKRO_F.ref(); OKRESY.ZR:=_a ?};
OKRO_F.cntx_pop()


\ustaw_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: W zmiennych OKRESY.ZO i OKRESY.ZR ustawia BO i badany rok
::   WE: _a - ref roku
::----------------------------------------------------------------------------------------------------------------------
OKRESY.ZO:=OKRESY.ZR:=null;
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(_a);
{? OKRO_F.first() || OKRESY.ZO:=OKRO_F.ref(); OKRESY.ZR:=_a ?};
OKRO_F.cntx_pop()


\findanbo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Odnajduje pasujaca regule
::   WE:  _a  - stare konto
::       [_b] - nowe konto
::   WY: wskazanie na regule (ref AN_BO)
::  OLD: \findanbo/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1; _ref:=null;
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
_rok_f:=ROK_F.ref();
{? ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref()) & ROK_F.prev()
|| AN_BO.cntx_psh(); AN_BO.index('ROK');
   AN_BO.prefix(_rok_f,ROK_F.SYNT+_a);
   {? ROK_F.next() & AN_BO.first() ||
      {! |?
         _ok:={? AN_BO.PKON*'?'
              || WYDRUKI.MASKA:=AN_BO.PKON; WYDRUKIN.DLKON:=+_a; ~exec('mask','konto',_a)
              || AN_BO.PKON<>_a
              ?} | (_=2 & ~(exec('konto','zam_okr_rok',_a)=_b));
         _ok & AN_BO.next()
      !}
   ?};
   {? _ok=0 || _ref:=AN_BO.ref() ?};
   AN_BO.cntx_pop()
?};
ROK_F.cntx_pop();
_ref


\konto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Zwraca nowe konto analityczne na podstawie masek przejscia z AN_BO
::   WE: _a: poprzednie konto analityczne (np. POZ.PKON)
::   WY: konto w nowym roku
::  OLD: \konto/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
_wy_kon:='';
_pkon:=AN_BO.PKON;
_kon:=AN_BO.KON;
{! _i:=1 .. +_kon |!
   _z:=(_i+_kon)+1;
   {? _z='?'
   || _p:=_pkon*'?';
      _pkon:=_p-_pkon;
      _a:=(_p-1)-_a;
      _wy_kon+=1+_a;
      _a:=1-_a
   || _wy_kon+=_z
   ?}
!};
_wy_kon


\is_an_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Sprawdza czy regula przypisania kont juz istnieje
::   WE: [_a] - czy przy akcji popraw w AN_BO? 1-tak [0]-nie
::   WY: Wskazanie na AN_BO lub null
::  OLD: \is_an_bo/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
_is:=null;
_pkon:=AN_BO.PKON;
_kon:=AN_BO.KON;
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA); AN_BO.ROK();
{? ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref()) & ROK_F.prev()
|| {? _a || _ref:=AN_BO.ref() ?};
   AN_BO.cntx_psh();
   AN_BO.index('ROK'); AN_BO.prefix(AN_BO.ROK,_pkon);
   {? AN_BO.first() & AN_BO.PKON=_pkon & (_a=0 | AN_BO.ref()<>_ref)
   || _is:=AN_BO.ref()
   || AN_BO.prefix(AN_BO.ROK,ROK_F.SYNT+_pkon);
      {? AN_BO.first() ||
         {! |?
            {? _a=0 | AN_BO.ref()<>_ref ||
               WYDRUKI.MASKA:=AN_BO.PKON;
               WYDRUKIN.DLKON:=+AN_BO.PKON;
               {? exec('mask','konto',_pkon) ||
                  WYDRUKI.MASKA:=AN_BO.KON;
                  WYDRUKIN.DLKON:=+AN_BO.KON;
                  _is:={? exec('mask','konto',_kon) || AN_BO.ref() || null ?}
               ?}
            ?};
            _is=null & AN_BO.next()
         !}
      ?}
   ?};
   AN_BO.cntx_pop()
?};
_is


\upd_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Aktualizuje nowe konto w pozycjach niezaakceptowanych dokumentow BO
::       na podstawie regul AN_BO
::   WY: Aktualizacja zakonczona powodzeniem? 1-tak 0-nie
::  OLD: \upd_poz/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
{? var_pres('rok_bo')>0 || ROK_F.seek(rok_bo) || AN_BO.ROK() ?};
OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref(),0);
{? OKRO_F.first() & ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref())
|| _synt:=AN_BO.PKON*'?';
   _prfx:={? _synt || _synt+AN_BO.PKON-1 || AN_BO.PKON ?};
   POZ.cntx_psh(); POZ.use('pozy'+ROK_F.KOD+'00'); POZ.index('PKON'); POZ.prefix(_prfx);
   DOK.cntx_psh(); DOK.use('doku'+ROK_F.KOD+'00'); DOK.prefix();
   _ok:=1;
   VAR_DEL.delete('TTPOZ');
   TTPOZ:=tab_tmp(1,
      'REF','INTEGER',,
      'KON','STRING[35]',
   );
   do();
   {? POZ.first() ||
      {! |?
         {? POZ.A='N' ||
            _kon:=exec('an_bo','zam_okr_rok',POZ.PKON,0,1);
            {? POZ.KON<>_kon
            || {? _kon=''
               || _ok:=0; undo()
               |? _kon<>35*'?'
               || TTPOZ.REF:=#POZ.ref();
                  TTPOZ.KON:=_kon;
                  TTPOZ.add()
               ?}
            ?}
         ?};
         POZ.next()
      !}
   ?};
   {? _ok & TTPOZ.first()
   || {!
      |? {? POZ.seek(TTPOZ.REF,) || POZ.KON:=TTPOZ.KON; POZ.put() ?};
         TTPOZ.next()
      !}
   ?};
   _ok:=end();
   POZ.cntx_pop(); DOK.cntx_pop();
   VAR_DEL.delete('TTPOZ');
   _ok
|| 0
?}


\sym2ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Zwraca wskazanie na KS na postawie symbolu konta analitycznego
::   WE: _a - rok konta
::       _b - dlugosc konta syntetycznego
::       _c - symbol konta analitycznego
::   WY: ref KS
::  OLD: \sym2ks/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
KS.cntx_psh();
KS.index('SYM'); KS.prefix(_a,_b+_c);
_ks:={? KS.first() || KS.ref || null ?};
KS.cntx_pop();
_ks


\ks_n_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Po redakcji nowego konta syntetycznego - aktualizacja BO
::  OLD: \ks_n_po/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
BUD.index('KS'); SLO.index('SL');  SLO.prefix();
{? BILANSP.KS_N
|| BUD.prefix(BILANSP.KS_N);  BILANSP.DL_N:=BUD.size();
   {! _i:=BILANSP.DL_N+1 .. 10 |!
      ($('BILANSP.AN'+$_i+'_N:=null'))();
      ($('BILANSP.SL'+$_i+'_N:=null'))()
   !};
   _dl_n:=BILANSP.NROK().SYNT+{? BILANSP.NROK().SEP=','||0||1?};
   _licz:=1;
   {? BUD.first()
   || {! |?
         {? ($('BILANSP.SL'+$_licz+'_N<>BUD.SLU().SLU'))()
         || ($('BILANSP.SL'+$_licz+'_N:=BUD.SLU().SLU'))();
            ($('BILANSP.AN'+$_licz+'_N:=null'))()
         ?};
         {! _i:=1 .. 10
         |! {? ($('BILANSP.SL'+$_i+'_S=BILANSP.SL'+$_licz+'_N'))()
            || ($('BILANSP.AN'+$_licz+'_N:=BILANSP.AN'+$_i+'_S'))()
            ?}
         !};
         {? ($('BILANSP.SL'+$_licz+'_S=BILANSP.SL'+$_licz+'_N'))()
         || ($('BILANSP.AN'+$_licz+'_N:=BILANSP.AN'+$_licz+'_S'))()
         ?};
         _dl_n+=BUD.SLU().SLU().DL+{? BILANSP.NROK().SEP=','||0||1?};
         _licz+=1;
         BUD.next()
      !}
   ?};
   _dl_n-={? BILANSP.NROK().SEP=','||0||1?}
|| BILANSP.DL_N:=0;
   {! _i:=1 .. 10
   |! ($('BILANSP.AN'+$_i+'_N:=null'))();
      ($('BILANSP.SL'+$_i+'_N:=null'))()
   !}
?};
1


\an_n_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Po redakcji pól BILANSP.AN_1N.. AN_10N
::  OLD: \an_n_pr/zam_okr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<=0 | type_of(_a)<>type_of(0)
|| 0
|| {? ($('BILANSP.SL'+$_a+'_N'))()
   || ($('BILANSP.SL'+$_a+'_N()'))();    1
   || 0
   ?}
?}

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:36 a0403375ca0c2e55c7a3280d63dceac88a8fc51713744399b4935f55529568ca1e88996f7b9006e5027f6217c97a5876fc8de563e0a3a75ee6086c6d09196fb2b982d023ac07949bcf66586c747f7f6215a4c4644307015ed4fcf2a08f6d62b89a968bfaf19b2f3911ff252925c19cdfff8028ed5cd73ec45aaac6c77f3eca80
