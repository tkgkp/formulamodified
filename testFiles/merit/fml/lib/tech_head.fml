:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: tech_head.fml
:: Utworzony: 23.02.2015
:: Autor: TS
::======================================================================================================================
:: Zawartość: Obsługa nagłówków kart technologicznych (T), wzorców (W) i technologii zleceń (Z) - tabela TKTL
::            Plik biblioteczny - wspólna obsługa dla TTE_TEC, TTE_WTE, TTE_PZL
::======================================================================================================================


\tech_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS
:: OPIS: Redagowanie technologii
::  OLD: \tech_red/tech.fml
::  TAG: <LISTA>
::----------------------------------------------------------------------------------------------------------------------
:: Ustalenie treści linku
_params:=params_get();
{? type_of(_params)>0 & var_pres('LINK',_params)=type_of('')
|| _link:=_params.LINK
|| _link:=''
?};

params_set('LINK',_link);
exec('b_tech_red','tech_head','T');
exec('tech_select','tech_head');
~~


\tbox_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70]
:: OPIS: Redakcja wzorców technologii
::  OLD: \tbox_red/tex_wzor.fml
::----------------------------------------------------------------------------------------------------------------------
:: Ustalenie treści linku
_params:=params_get();
{? type_of(_params)>0 & var_pres('LINK',_params)=type_of('')
|| _link:=_params.LINK
|| _link:=''
?};

params_set('LINK',_link);
exec('b_tech_red','tech_head','W');
exec('tech_select','tech_head');
~~


\b_tech_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Akcje przed wyświetleniem listy technologii
::   WE: _a - 'T'echnologia, 'W'zorzec
::  OLD: \b_tech_red/tech.fml
::       \b_tbox_red/tex_wzor.fml
::----------------------------------------------------------------------------------------------------------------------
_torw:=_a;

VAR.A_ZLEC:=null();
VAR.TOW_USL:='T';
VAR.FILTER:='N';
VAR.ACTION:='1';
VAR.A_TORW:=_torw;
VAR.ARCH:='N';

:: Okna bez tytułu - ustawiony później przez AreaTitle
{? _torw='W'
|| _grp:=TKTL.grp_make('',,'#tktl_grp_werwb',,,"exec('exit','zws',_a)")
|| _grp:=TKTL.grp_make('',,'#tktl_grp_wertb',,,"exec('exit','zws',_a)")
?};

:: Karty/wzorce bieżące
_f_ar:="
   _grayed:=':';
   {? TKTL.TYP=exec('ref_k_res','tech_head') || _grayed:='PUF(RALD)CZYN(YZHLGUWN)J'+_grayed ?};
   {? TKTL.TYP=null() || _grayed:='FCZYN(YZHLGUWN)J'+_grayed ?};
   {? TKTL.TYP().UTIL='N' || _grayed:='F(N)'+_grayed ?};
   {? TKTL.TYP().OPER='N' || _grayed:='F(O)Z(O)'+_grayed ?};
   {? TKTL.TYP().PAR='N' || _grayed:='F(P)'+_grayed ?};
   {? TKTL.TYP().CZAPLA='N' || _grayed:='N(LG)'+_grayed ?};
   {? TKTL.STAT_N='T' & TKTL.STAT_O='T' & TKTL.STAT_S='T' & TKTL.STAT_P='T' || _grayed:='ZN(W)'+_grayed ?};
   {? exec('get','#params',500405,type_of(''))='T'
   ||
::    Szybka akceptacja
      {? TKTL.STAN='T'
      || _grayed:='A'+_grayed+'A'
      ?}
   ||
::    Normalna akceptacja
      {? ~exec('tktl_ended','tech_head') | TKTL.STAN='T'
      || _grayed:='A'+_grayed+'A'
      ?}
   ?};
   {? TKTL.STAT_N='N' || _grayed:='N(YWG)Z(OSP)'+_grayed ?};
   {? TKTL.STAT_N='T' || _grayed:='Z(N)'+_grayed ?};
   {? TKTL.STAT_O='T' || _grayed:='Z(O)'+_grayed ?};
   {? TKTL.STAT_S='T' || _grayed:='Z(S)'+_grayed ?};
   {? TKTL.STAT_P='T' || _grayed:='Z(P)'+_grayed ?};
   {? ~exec('tktl_act','tech_head') || _grayed:='N(G)'+_grayed ?};
   _grayed:='N(H)'+_grayed;
   TKTL.actions_grayed(cur_win(1,1),_grayed);
   VAR.BL_WYD:=TKTL.JORG;
   ~~
";
_f_before:="VAR.ARCH:='N'; VAR.A_TABKTL:='A'; exec('tktl_use','tech_common','___'); TKTL.sel_adel();
            exec('set_filter','tech_head'); TMAT.f_clear(); TOPER.f_clear(); ~~";
{? _torw='W'
|| TKTL.grp_sel(_grp,,'WER_','Wzorce bieżące'@,_f_ar,,,,_f_before,,,,'maximized','T___')
|| TKTL.grp_sel(_grp,,'WER','Karty bieżące'@,_f_ar,,,,_f_before,,,,'maximized','T___')
?};

:: Karty nieaktualne
_f_ar:="
   _grayed:=':';
   {? TKTL.TYP=exec('ref_k_res','tech_head') || _grayed:='PUF(RALD)CZYN(YZHLGUWN)J'+_grayed ?};
   {? TKTL.TYP=null() || _grayed:='FCZYN(YZHLGUWN)J'+_grayed ?};
   {? TKTL.TYP().UTIL='N' || _grayed:='F(N)'+_grayed ?};
   {? TKTL.TYP().OPER='N' || _grayed:='F(O)Z(O)'+_grayed ?};
   {? TKTL.TYP().PAR='N' || _grayed:='F(P)'+_grayed ?};
   {? TKTL.TYP().CZAPLA='N' || _grayed:='N(LG)'+_grayed ?};
   {? TKTL.STAT_N='T' & TKTL.STAT_O='T' & TKTL.STAT_S='T' & TKTL.STAT_P='T' || _grayed:='ZN(W)'+_grayed ?};
   {? exec('get','#params',500405,type_of(''))='T'
   ||
::    Szybka akceptacja
      {? TKTL.STAN='T'
      || _grayed:='A'+_grayed+'A'
      ?}
   ||
::    Normalna akceptacja
      {? ~exec('tktl_ended','tech_head') | TKTL.STAN='T'
      || _grayed:='A'+_grayed+'A'
      ?}
   ?};
   {? TKTL.STAT_N='N' || _grayed:='N(YWG)Z(OSP)'+_grayed ?};
   {? TKTL.STAT_N='T' || _grayed:='Z(N)'+_grayed ?};
   {? TKTL.STAT_O='T' || _grayed:='Z(O)'+_grayed ?};
   {? TKTL.STAT_S='T' || _grayed:='Z(S)'+_grayed ?};
   {? TKTL.STAT_P='T' || _grayed:='Z(P)'+_grayed ?};
   {? ~exec('tktl_act','tech_head') || _grayed:='N(G)'+_grayed ?};
   _grayed:='N(H)'+_grayed;
   TKTL.actions_grayed(cur_win(1,1),_grayed);
   VAR.BL_WYD:=TKTL.JORG;
   ~~
";
_f_before:="VAR.ARCH:='N'; VAR.A_TABKTL:='N'; exec('tktl_use','tech_common','___'); TKTL.sel_adel();
            exec('set_nfilter','tech_head'); TMAT.f_clear(); TOPER.f_clear(); ~~";
{? _torw='W'
|| ~~
|| TKTL.grp_sel(_grp,,'WER','Karty nieaktualne'@,_f_ar,,,,_f_before,,,,'maximized','TKTLN')
?};

:: Karty produktów
{? _torw='T'
|| _f_ar:="
      _grayed:=':';
      {? TKTL.TYP=exec('ref_k_res','tech_head') || _grayed:='PUF(RALD)CZYN(ZLGUN)J'+_grayed ?};
      {? TKTL.TYP=null() || _grayed:='FCZYN(YZHLGUWN)J'+_grayed ?};
      {? TKTL.TYP().UTIL='N' || _grayed:='F(N)'+_grayed ?};
      {? TKTL.TYP().OPER='N' || _grayed:='F(O)Z(O)'+_grayed ?};
      {? TKTL.TYP().PAR='N' || _grayed:='F(P)'+_grayed ?};
      {? TKTL.TYP().CZAPLA='N' || _grayed:='F(L)N(G)'+_grayed ?};
      {? TKTL.STAT_N='T' & TKTL.STAT_O='T' & TKTL.STAT_S='T' & TKTL.STAT_P='T' || _grayed:='ZN(W)'+_grayed ?};
      {? exec('get','#params',500405,type_of(''))='T'
      ||
::       Szybka akceptacja
         {? TKTL.STAN='T'
         || _grayed:='A'+_grayed+'A'
         ?}
      ||
::       Normalna akceptacja
         {? ~exec('tktl_ended','tech_head') | TKTL.STAN='T'
         || _grayed:='A'+_grayed+'A'
         ?}
      ?};
      {? TKTL.STAT_N='N' || _grayed:='N(YWG)Z(OSP)'+_grayed ?};
      {? TKTL.STAT_N='T' || _grayed:='Z(N)'+_grayed ?};
      {? TKTL.STAT_O='T' || _grayed:='Z(O)'+_grayed ?};
      {? TKTL.STAT_S='T' || _grayed:='Z(S)'+_grayed ?};
      {? TKTL.STAT_P='T' || _grayed:='Z(P)'+_grayed ?};
      {? ~exec('tktl_act','tech_head') || _grayed:='N(G)'+_grayed ?};
      _grayed:='N(H)'+_grayed;
      TKTLW.actions_grayed(cur_win(1,1),_grayed);
      VAR.BL_WYD:=TKTL.JORG;
      ~~
   ";
   _f_before:="VAR.ARCH:='N'; VAR.A_TABKTL:='W'; exec('tktl_use','tech_common','___'); TKTLW.sel_adel();
               exec('set_wfilter','tech_head'); TMAT.f_clear(); TOPER.f_clear(); ~~";
   TKTL.grp_sel(_grp,TKTLW,'WER_K','Karty produktów'@,_f_ar,,,,_f_before,,,,'maximized','TKTLW')
?};

:: Wszystkie surowce technologiczne
_f_ar:="
   ~~
";
_f_before:="VAR.ARCH:='N'; VAR.A_TABKTL:='S'; exec('tktl_use','tech_common','___'); TKTL.sel_adel(); TMAT.sel_adel();
            exec('set_filter','tech_mater'); ~~";
_f_after:="~~";
{? _torw='W'
|| ~~
|| TKTL.grp_sel(_grp,TMAT,'ALL','Wszystkie surowce'@,_f_ar,,,,_f_before,_f_after,,,'maximized','TKTLS');
   exec('tmat_all_init','tech_mater')
?};

:: Wszystkie operacje technologiczne
_f_ar:="
   ~~
";
_f_before:="VAR.ARCH:='N'; VAR.A_TABKTL:='O'; exec('tktl_use','tech_common','___'); TKTL.sel_adel(); TOPER.sel_adel();
            exec('set_filter','tech_oper'); ~~";
_f_after:="~~";
{? _torw='W'
|| ~~
|| TKTL.grp_sel(_grp,TOPER,'ALL','Wszystkie operacje'@,_f_ar,,,,_f_before,_f_after,,,'maximized','TKTLO');
   exec('toper_all_init','tech_oper')
?};

:: Karty/wzorce archiwalne
exec('tktl_cntx_psh','tech_common');
exec('tktl_use','tech_common','_'+(($(date()~1))+2));
exec('tktl_cntx_pop','tech_common');
_f_ar:="
   _grayed:=':';
   {? TKTL.TYP=null() || _grayed:='FCZYN(YZHLGUWN)J'+_grayed ?};
   {? TKTL.TYP().UTIL='N' || _grayed:='F(N)'+_grayed ?};
   {? TKTL.TYP().OPER='N' || _grayed:='F(O)'+_grayed ?};
   {? TKTL.TYP().PAR='N' || _grayed:='F(P)'+_grayed ?};
   {? TKTL.TYP().CZAPLA='N' || _grayed:='N(L)'+_grayed ?};
   _grayed:='DPUAZN(YGZW)'+_grayed+'D';
   TKTL.actions_grayed(cur_win(1,1),_grayed);
   VAR.BL_WYD:=TKTL.JORG;
   ~~
";
_il:=0;
_Tab:=TKTL.names();
{? _Tab.last()
|| TKTL.cntx_psh();
   {!
   |? _maska:=_Tab.NAME+3;
      {? _maska<>'___'
      || TKTL.use(_Tab.NAME);
         TKTL.index('ASTN');
         TKTL.prefix(_torw,'T');
         {? TKTL.first() | _Tab.NAME+2=($(date()~1))+2
         || _il+=1;
            _f_before:=$("VAR.ARCH:='T';VAR.A_TABKTL:='M'; exec('tktl_use','tech_common','"+_maska+"');
                          TKTL.sel_adel(); exec('set_filter','tech_head'); TMAT.f_clear(); TOPER.f_clear(); ~~");
            _name:='Archiwum: %1'@[$(2000+#(_Tab.NAME+2))];
            TKTL.grp_sel(_grp,TKTL,{? _torw='W' || 'WER_' || 'WER' ?},_name,_f_ar,,,,_f_before,,,,'maximized','T'+_maska);
            _select:=1
         ?}
      ?};
      _Tab.prev() & _il<64
   !};
   TKTL.cntx_pop()
?};

TKTL.win_sel(_grp);
TKTL.win_patt({? _torw='W' || 'WZOR_' || 'WZOR' ?});

AreaTitle.setTabWin(TKTL,~~);
AreaTitle.setTitle();
~~


\tech_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.62] Filtr
:: OPIS: Selekcja kart technologicznych/wzorców
::  OLD: \tech_select/tech.fml
::----------------------------------------------------------------------------------------------------------------------
:: Ustalenie treści linku
_params:=params_get();
{? type_of(_params)>0 & var_pres('LINK',_params)=type_of('')
|| _link:=_params.LINK
|| _link:=''
?};

VAR.L_KTL:=null();

VAR.GRUPA:='N';
POMOC.MGR:=null();
POMOC.RODZ:='T';

KWAR.clear();
TKTL.clear();

VAR.P_NKTM:='';
VAR.DATE:=date(0,0,0);
VAR.TKW:=0;

{? _link <> ''
|| {? ref_tab(_link)=TKTLW
   || {? TKTLW.seek(_link)
      || TKTL.select(,1,10,,'TKTLW',,1)
      || FUN.info('Karta produktu o identyfikatorze %1 nie została odnaleziona.'@[_link]);
         return(0)
      ?}
   || _name:=ref_name(_link);
      _name:=_name+3;
      exec('tktl_use','tech_common',_name+3);
      {? TKTL.seek(_link)
      || {? exec('tktl_act','tech_head',,$TKTL.ref())
         || TKTL.select(,1,10,,'T'+_name,,1)
         || TKTL.select(,1,10,,'TKTLN',,1)
         ?}
      || return(0)
      ?}
   ?}
|| TKTL.select(,1,10)
?};

TKTL.f_clear();
TKTL.ndx_drop();
exec('tktl_use','tech_common','___');
~~


\bl_tktl_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.62] Filtr
:: OPIS: wartość początkowa TKTL.TYP
::   WY: TPKTL.ref() albo null(), gdy nie ustawiony filtr
::  OLD: \bl_tktl_typ/tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.FILTER='T'
|| FILTER.TPKTL
|| exec('tpktl_default','tech_head')
?}


\be_tktl_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.62] Filtr
:: OPIS: przed redakcją TKTL.TYP
::  OLD: \be_tktl_typ/tech.fml
::  TAG: <MBUILDER><BE>
::----------------------------------------------------------------------------------------------------------------------
:: W zatwierdzonym nagłówku nie modyfikujemy
{? TKTL.STAT_N='T'
|| 0

:: Przekazany typ karty, więc nie redagujemy
|? params_get().tpktl
|| 0

:: Przy ustawionym filtrze nie modyfikujemy
|? VAR.FILTER='T' & FILTER.TPKTL<>null()
|| 0

:: Dla technologii zlecenia - jeżeli są powiązania - to nie modyfikujemy
|? TKTL.TORW='Z' &
   (  _count:=0;
      TKTL.cntx_psh();
      _testlink:=TKTL.testlink(2);
      _testlink.prefix('ZL',);
      {? _testlink.first() || _testlink.del() ?};
      _testlink.prefix();
      TKTL.cntx_pop();
      _testlink.size()>0
   )
|| 0

:: Wpp modyfikacje
|| VAR.A_TPKTL:=TKTL.TYP;
   1
?}


\ae_tktl_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.62] PR/WRT/PRODUKCJ/7.41/0006
:: OPIS: Po redakcji TKTL.TYP
::       TKTL.TYP musi być rozsadną alternatywą dla VAR.A_TPKTL
::       1) jeżeli są już surowce, to nie może być typ z innym przypisaniem surowców
::       2) jeżeli są już N-P-U, to nie może być typ z innym przypisaniem N-P-U
::       3) jezeli są już parametry, to nie może być typ nieperametryzowany
::       4) jeżeli inne XJM i są kalkulacje, to ostrzeżenie (tylko)
::       5) jeżeli są już operacje, to nie może być typ bez operacji
::   WY: 0 / 1
::  OLD: \ae_tktl_typ/tech.fml
::  TAG: <MBUILDER><AE>
::----------------------------------------------------------------------------------------------------------------------
{? TKTL.TYP=null()
|| FUN.emsg('Pole "Typ" musi być wypełnione.'@);
   return(0)
?};
{? TKTL.TYP=exec('ref_k_res','tech_head')
|| FUN.emsg('Zastrzeżony typ karty — dotyczy tylko kompletacji.'@);
   return(0)
?};
{? TKTL.TYP=exec('ref_t_res','tech_head')
|| FUN.emsg('Zastrzeżony typ karty — należy wybrać inny.'@);
   return(0)
?};
_msg:='';
_Lp:=1;
_wyn:=
   {? chk_fld()
   || {?
::       zmiana typu karty
         {? TKTL.SERIA=0
         || TKTL.SERIA:=TKTL.XJM
         ?};
         VAR.A_TPKTL<>TKTL.TYP
      || _oko:={? VAR.A_TPKTL().OPER=TKTL.TYP().OPER
               || 1
               || ~exec('is_toper','tech_head',TKTL.ref())
               ?};
::       Wszystkie karty obsługiwane jako OO
         _okm:={? 1
::                  VAR.A_TPKTL().SUR=TKTL.TYP().SUR
               || 1
               || ~exec('is_tmat','tech_head',TKTL.ref())
               ?};
         _oku:={? 1
::                  VAR.A_TPKTL().UTIL=TKTL.TYP().UTIL
               || 1
               || ~exec('is_ttls','tech_head',TKTL.ref())
               ?};
         _okp:={? TKTL.TYP().PAR='T'
               || 1
               || ~exec('is_param','tech_head',TKTL.ref())
               ?};
         _okk:={? VAR.A_TPKTL().XJM=TKTL.TYP().XJM
               || 1
               || exec('kktl_chk','tech_head',TKTL.ref())=0
               ?};
         _okd:={? VAR.A_TPKTL().DJ=TKTL.TYP().DJ
               || 1
               || ~exec('is_tmat','tech_head',TKTL.ref())
               ?};
         {? ~_oko || _msg+=$_Lp+') '+'Nowy typ karty musi być zgodny z poprzednim\n'
                               'pod względem przypisania operacji.'@+'\n'; _Lp+=1 ?};
         {? ~_okm || _msg+=$_Lp+') '+'Nowy typ karty musi być zgodny z poprzednim\n'
                               'pod względem przypisania surowców.'@+'\n'; _Lp+=1 ?};
         {? ~_okd || _msg+=$_Lp+') '+'Nowy typ karty musi być zgodny z poprzednim\n'
                               'pod względem sposobu redagowania norm do jednostek miary.'@+'\n'; _Lp+=1 ?};
         {? ~_oku || _msg+=$_Lp+') '+'Nowy typ karty musi być zgodny z poprzednim\n'
                               'pod względem przypisania N-P-U.'@+'\n'; _Lp+=1 ?};
         {? ~_okp || _msg+=$_Lp+') '+'Nowy typ karty musi być parametryzowany.'@+'\n'; _Lp+=1 ?};
         {? ~_okk || _msg+=$_Lp+') '+'Różnica ilości jednostek miary\n'
                               'może prowadzić do odmiennych wyników kalkulacji.'@+'\n' ?};
         {? _msg<>'' || FUN.emsg(_msg) ?};
         _ok:=_oko & _okm & _oku & _okp & _okd;
         TKTL.XJM:=TKTL.TYP().XJM;
         TKTL.SERIA:=TKTL.XJM;
         TKTL.DEF_OPCK:=TKTL.TYP().DEF_OPCK;
         _ok
      || 1
      ?}
   || 0
   ?};
{? _wyn || {? TKTL.DEF_OPCK=null() || TKTL.DEF_OPCK:=TKTL.TYP().DEF_OPCK ?} ?};
_wyn


\bl_tktx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [12.30]
:: OPIS: Wartość początkowa TKTL.XJM
::  OLD: \bl_tktx/tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? TKTL.TYP<>null()
|| TKTL.TYP().XJM
|? VAR.A_TPKTL<>null()
|| VAR.A_TPKTL().XJM
|| 1
?}


\be_tktl_xjm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.41]
:: OPIS: Przed redakcją pola TKTL.XJM
::  OLD: \be_tktl_xjm/tech.fml
::  TAG: <MBUILDER><BE>
::----------------------------------------------------------------------------------------------------------------------
VAR.XJM:=TKTL.XJM;
{? TKTL.STAT_N='T'
|| 0
|? TKTL.TORW='Z' & exec('FindAndGet','#table',ZL,TKTL.ZL,,"RKTL<>''",1)
|| 0
|| 1
?}


\tktl_wz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.62] Filtr
:: OPIS: wzorzec na pole TKTL.NRK
::  OLD: \tktl_wz/tech.fml
::  TAG: <MBUILDER><PT>
::----------------------------------------------------------------------------------------------------------------------
{? VAR.FILTER='T'
|| _dl:=+FILTER.NRK;
   _buf:=FILTER.NRK;
   _wz:='';
   {! _i:=1.._dl |! _wz+='\\'+(1+_buf);_buf:=1-_buf !};
   _wz
|| ''
?}


\tktl_nrk_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Przed redakcją TKTL.NRK
::   WY: 0 / 1
::  OLD: \tktl_nrk_pr/tech.fml
::  TAG: <MBUILDER><BE>
::----------------------------------------------------------------------------------------------------------------------
TKTL.STAT_N='N'


\tktl_wer_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Blank na pole TKTL.WER
::   WY: '1.0' - String
::  OLD: \tktl_wer_bl/tech.fml
::       \jeden_zero/tech.fml
::----------------------------------------------------------------------------------------------------------------------
'1.0'


\tktl_wer_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Przed redakcją TKTL.WER
::   WY: 0 / 1
::  TAG: <MBUILDER><BE>
::----------------------------------------------------------------------------------------------------------------------
TKTL.STAT_N='N'


\tmask_ktm
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: przed redakcja pola TKTL.KTM
::  OLD: \tmask_ktm/tech.fml
::  TAG: <MBUILDER><BE>
::----------------------------------------------------------------------------------------------------------------------
exec('wpm_opis','material',FILTER.T_WPM,' — '+exec('zakr_naz','material',ZAKR.MATU));
::{? TKTL.STAT_N='T' || return(0) ?};
{? params_get().material || return(0) ?};
{? VAR.FILTER='T' || {? FILTER.KTM<>null() || return(0) ?} ?};
{? menu_txt()<>'Popraw' || return(1) ?};
TKTLW.index('REF');
TKTLW.prefix(TKTL.ref());
{? TKTLW.first() || {? TKTLW.next() || return(0) ?} ?};
1


\tktl_ktm_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: po redakcji TKTL.KTM
::   WY: 1 / 0
::  OLD: \tktl_ktm_ae/tech.fml
::  TAG: <MBUILDER><AE>
::----------------------------------------------------------------------------------------------------------------------
{? VAR.FILTER='T'
|| {? FILTER.GRUPA<>null() & FILTER.GRUPA<>TKTL.KTM().GRUPA
   || FUN.info('Zgodnie z ustawieniami filtra,\n'
         'produkt musi należeć do grupy: %1'@[FILTER.GRUPA().KOD],
      );
      return(0)
   |? FILTER.WPM<>'' & FILTER.WPM<>TKTL.KTM().R
   || FUN.info({? FILTER.WPM='W' || 'Zgodnie z ustawieniami filtra,\nprodukt musi być wyrobem.'@
               |? FILTER.WPM='P' || 'Zgodnie z ustawieniami filtra,\nprodukt musi być półfabrykatem.'@
                                 || 'Zgodnie z ustawieniami filtra,\nprodukt musi być??'@ ?},
      );
      return(0)
   ?}
?};

_result:=1;

{? TKTL.KTM=null()
|| M.hdr_sel()

|? TKTL.KTM().A<>'T'
|| FUN.info('Produktem karty technologicznej może być tylko aktywny materiał.'@);
   _result:=0

|| {? 'WP'*TKTL.KTM().R=0
   || FUN.info('Produktem karty technologicznej nie może być surowiec lub wyrób handlowy.'@);
      _result:=0
   || TKTL.JM:=TKTL.KTM().J;
      win_disp();
      M.hdr_sel()
   ?}
?};

_result


\tktl_jm_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Przed redakcją TKTL.JM
::   WY: 0 / 1
::  OLD: \tktl_jm_be/tech.fml
::  TAG: <MBUILDER><BE>
::----------------------------------------------------------------------------------------------------------------------
{? (TKTL.KTM<>null()) | (TKTL.TORW='W' & TKTL.STAN='T') || 0 || 1 ?}


\tktl_opis_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Przed redakcją TKTL.OPIS
::   WY: 0 / 1
::  OLD: \tktl_opis_be/tech.fml
::  TAG: <MBUILDER><BE>
::----------------------------------------------------------------------------------------------------------------------
1


\tktl_defopck_be
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: akcja przed redakcją pola domyślny wariant kalkulacji
::   WY: 1 - ok
::       0 - jezeli przerwano zapytanie SQL lub przerwano zakładanie filtra
::  OLD: \tktl_defopck_be/tech.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=sql('select TPKTLF.OPC as OPC from TPKTLF where TPKTLF.TYP=\':_a\'',$TKTL.TYP);
{? type_of(_tab)=type_of(~~)
||
   exec('err_sql','#sql');
   0
|| {? ~KWAR.f_set('NAZ',,'"KWAR"."REFERENCE" in (select OPC from :_a)',_tab)
   ||
      exec('err_psql','#sql');
      0
   ||
      {? KWAR.f_size()>1
      || 1
      || 0
      ?}
   ?}
?}


\be_tktl_rys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.41]
:: OPIS: Przed redakcją pola TKTL.RYS_NR
::  OLD: \be_tktl_rys/tech.fml
::  TAG: <MBUILDER><BE>
::----------------------------------------------------------------------------------------------------------------------
{? TKTL.TORW='Z' & TKTL.STAT_N='T'
|| 0
|| 1
?}


\tktl_seria_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Przed redakcją pola TKTL.SERIA
::  OLD: \tktl_seria_be/tech1.fml
::  TAG: <MBUILDER><BE>
::----------------------------------------------------------------------------------------------------------------------
{? TKTL.SERIA=0
|| TKTL.SERIA:=TKTL.XJM
?};
{? TKTL.TORW='Z' & TKTL.STAT_N='T'
|| 0
|? TKTL.TORW='Z' & exec('FindAndGet','#table',ZL,TKTL.ZL,,"RKTL<>''",1)
|| 0
|| 1
?}


\tktl_seria_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Po redakcji pola TKTL.SERIA
::  OLD: \tktl_seria_ae/tech1.fml
::  TAG: <MBUILDER><AE>
::----------------------------------------------------------------------------------------------------------------------
1


\tktl_jorg_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Przed redakcją pola TKTL.JORG
::   WY: 0 / 1
::  OLD: \tktl_jorg_be/tech1.fml
::  TAG: <MBUILDER><BE>
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('jakislw','wzorce')
|| 0
|? TKTL.TORW='Z' & TKTL.STAT_N='T'
|| 0
|| {? VAR.A_WYD<>null() || 0 || 1 ?}
?}


\tktl_jorg_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Po redakcji pola tabeli TKTL.JORG
::  OLD: \tktl_jorg_ae/tech1.fml
::----------------------------------------------------------------------------------------------------------------------
~~


\tktl_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: Obsługa na dołącz technologii, technologii zlecenia lub wzorca
::   WE: [_a] - M.ref() - jeżeli podany, to karta dla tego produktu
::       [_b] - TPKTL.ref() - jeżeli podany, to karta tego typu
::       [_c] - TKTL.ref() - wzorzec, na bazie którego dołączana jest karta. Jak podany to dane pobierane z wzorca.
::   WY: TKTL.ref() / null()
::  OLD: \tktl_add/tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) || _material:=_a || _material:=null() ?};
{? var_pres('_b')=type_of(null()) || _tpktl:=_b || _tpktl:=null() ?};
{? var_pres('_c')=type_of(null()) || _tktl_temp:=_c || _tktl_temp:=null() ?};
_res:=null();

_exit:=0;
_ktl:=TKTL.ref();
VAR.A_WYD:=null();
VAR.TKW:=0; VAR.DATE:=date(0,0,0);
KWAR.clear();

{? ~_exit
|| VAR.A_STAN:='N';

   {? VAR.A_TORW='T' || VAR.A_T:=FILTER.KTM || VAR.A_T:=null() ?};

   TKTL.blank();

   TKTL.NRK:={? VAR.FILTER='T' || FILTER.NRK || '' ?}+TKTL.ses_id()+' dodawana';

   {? VAR.A_TORW='T'
   || TKTL.JM:={? VAR.FILTER='T' & FILTER.KTM<>null() || FILTER.KTM().J || null() ?}
   |? VAR.A_TORW='Z'
   || TKTL.JM:=VAR.A_ZLEC().KTM().J
   || TKTL.JM:=null()
   ?};

   {? VAR.A_TORW='Z'
   || TKTL.ZL:=VAR.A_ZLEC
   ?};

   _wer:=TKTL.WER;
   _prev_ktl:=VAR.A_KTL;

   {!
   |? TKTL.WER:=_wer;
      no_msg(1); _add:=TKTL.add(); no_msg(0);
      {? _add
      || VAR.A_KTL:=TKTL.ref();
         exec('tktl_lock','tech_common',,'N');
         {? VAR.A_TORW='Z'
         || TKTL.NRK:=VAR.A_ZLEC().SYM; TKTL.WER:=exec('tktl_wer_bl','tech_head');
            TKTL.OPIS:=VAR.A_ZLEC().OPIS;
            TKTL.KTM:=VAR.A_ZLEC().KTM
         || {? _tktl_temp<>null()
            ||
::             Przepisanie danych z wzorca
               _jm:=TKTL.JM;
               _xjm:=TKTL.XJM;
               _seria:=TKTL.SERIA;
               _gktl:=TKTL.GKTL;
               TKTL.cntx_psh();
               TKTL.use(ref_name(_tktl_temp));
               TKTL.prefix();
               {? TKTL.seek(_tktl_temp)
               || _tpktl:=TKTL.TYP;
                  _jm:=TKTL.JM;
                  _xjm:=TKTL.XJM;
                  _gktl:=TKTL.GKTL
               ?};
               TKTL.cntx_pop();
               TKTL.TYP:=_tpktl;
               {? _material<>null()
               || TKTL.KTM:=_material;
                  TKTL.JM:=exec('FindAndGet','#table',M,_material,,"J",null())
               || TKTL.JM:=_jm
               ?};
               TKTL.XJM:=_xjm;
               TKTL.SERIA:=_xjm;
               TKTL.GKTL:=_gktl
            ||
               {? _tpktl<>null() || TKTL.TYP:=_tpktl ?};
               TKTL.KTM:=_material;
               TKTL.JM:=exec('FindAndGet','#table',M,_material,,"J",null())
            ?}
         ?};
         {? exec('enabled','zl_uslugi')
         || exec('mat_grp_f3','zl_uslugi',0,'W')
         || exec('slo_m_ok','material','T',0,,'W');
            ZAKR.MATU:='A';
            exec('filter','material','WP')
         ?};

         TPKTL.prefix();
         TPKTL.f_clear();
         {? ~TPKTL.f_set('TYP')
         ||
            exec('err_psql','#sql');
            exec('empty_f_set','#table',TPKTL)
         ?};
         exec('win_edit','tech_head','DOŁĄCZ');
         _first:=1;
         _fld:='TYP';
         {!
         |?
            {? VAR.A_TORW<>'Z'
            || {? _first
               || TKTL.NRK:={? VAR.FILTER='T'
                            || FILTER.NRK
                            || {? _material<>null()
                               || _ktm:=exec('FindAndGet','#table',M,_material,,"M.KTM",'');
                                  TKTL.NRK:=_ktm;
                                  TKTL.WER:=exec('find_wer','tech_head','T',M.KTM,'1.0');
                                  TKTL.OPIS:=_ktm
                               || ''
                               ?}
                            ?}
                ?}
            ?};
            _first:=0;
            xjm:=1;
::          Jeżeli jest zmienna środowiskowa env, to ją przepycham
            _params:=params_get();
            {? var_pres('_params')>100 & var_pres('env',_params)>100
            || params_set('env',_params.env,'STAT_N',TKTL.STAT_N,'used',0,'material',_material<>null(),'tpktl',_tpktl<>null())
            || params_set('STAT_N',TKTL.STAT_N,'used',0,'material',_material<>null(),'tpktl',_tpktl<>null())
            ?};
            {? _loop:=TKTL.edit("
                  _acronim:=exec('tktl_arec','tech_head',1);
                  {? _acronim<>''
                  || TKTL.STAT_N:=params_get().STAT_N
                  ?};
                  _acronim
                  ",,_fld);
                _loop
            || exec('stat_act','tech_head');
               {? TKTL.TORW='Z' | exec('chk_symbol','tech_head',TKTL.TORW,TKTL.NRK,TKTL.WER)>0
               || TKTL.put();
                  exec('tktlw_add','tech_prod');
                  {? TKTL.f_active()=1 | (TKTL.f_active()>1 & TKTL.f_test()) || TKTL.f_add() ?};
                  {? TKTL.f_active() || TKTL.f_rfresh() ?};
                  {? _tktl_temp<>null()
                  ||
::                   Jeżeli technologia dołączana wg wzorca, to przenoszeone z niej elementy
                     exec('insert_tbx','tech_arch',,,_tktl_temp)
                  ?};
                  exec('tktl_unlock','tech_common',,'N');
                  _res:=TKTL.ref();
                  _loop:=0
               || FUN.emsg(
                     {? TKTL.TORW='T' | TKTL.TORW='Z'
                     || 'Karta o numerze: %1 w wersji: %2 już istnieje — proszę poprawić.'@[TKTL.NRK,TKTL.WER]
                     || 'Wzorzec o symbolu: %1 w wersji: %2 już istnieje — proszę poprawić.'@[TKTL.NRK,TKTL.WER]
                     ?}
                   );
                  TKTL.STAT_N:='N';
                  _fld:='NRK';
                  _loop:=1
               ?}
            || exec('tktl_unlock','tech_common',,'N');
               _count:=TKTL.count();
               {? _count>0
               || {? FUN.ask(
                        'Zrezygnowano z dołączania karty technologicznej zlecenia.\n'
                        'Czy usunąć kartę i całą wprowadzoną zawartość?'@
                     )
                  || exec('TKTL_kasuj','tech_head',TKTL.ref());
                     TKTL.seek(_ktl)
                  || _res:=TKTL.ref()
                  ?}
               || TKTL.del();
                  TKTL.seek(_ktl)
               ?};
               _loop:=0
            ?};
            &xjm;
            _loop
         !};
         TPKTL.f_clear();
::       Przywracam tytuł i akcje w słowniku materiałów
         exec('filter_clear','material');
         _exit:=1
      || FUN.error(
            {? VAR.A_TORW='T'
            || 'Nie można dodać kolejnej karty o numerze:\n%1 w wersji: %2\n\nProszę wprowadzić inną wersję.'@[TKTL.NRK,TKTL.WER]
            || 'Nie można dodać kolejnego wzorca o symbolu:\n%1 w wersji: %2\n\nProszę wprowadzić inną wersję.'@[TKTL.NRK,TKTL.WER]
            ?}
         );
         undefine();
         {? VAR.A_TORW='T'
         || define('WER',_wer,'Wersja technologii'@,'Wersja technologii'@,6)
         || define('WER',_wer,'Wersja wzorca'@,'Wersja wzorca'@,6)
         ?};
         {? def_edit()
         || _wer:=DEFINE.WER;
            _exit:=0
         || _exit:=1
         ?}
      ?};
      ~_exit
   !}
?};

{? _res
|| {? TKTL.f_active()>1 & ~TKTL.f_test()
   || TKTL.f_seek(_prev_ktl);
      FUN.info('Dodany zapis nie znajduje się w bieżącym filtrze użytkownika.\nNależy zmienić filtr.'@)
   |? TKTL.f_active() & ~TKTL.f_seek(_res)
   || TKTL.f_seek(_prev_ktl);
      FUN.info('Dodany zapis nie znajduje się w aktualnie przeglądanej zakładce.'@)
   ?}
?};

_res


\tktl_add_nodialog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Dodaje kartę technologiczną w trybie bezdialogowym
::   WE: _a - M.ref() - jeżeli podany, to karta dla tego produktu
::       _b - TPKTL.ref() - jeżeli podany, to karta tego typu
::       [_c] - TKTL.ref() - wzorzec, na bazie którego dołączana jest karta. Jak podany to dane pobierane z wzorca.
::   WY: TKTL.ref lub null
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_material:=_a;
{? var_pres('_c')=type_of(null()) || _tktl_temp:=_c || _tktl_temp:=null() ?};
:: Jak podany wzorzec to typ przepisywany z niego
{? _tktl_temp<>null()
|| _typ:=exec('FindAndGet','#table',TKTL,_tktl_temp,,"TYP",null())
|| _typ:=_b
?};
_result:=null();

M.cntx_psh(); M.prefix();
TPKTL.cntx_psh(); TPKTL.prefix();
{? M.seek(_material) & TPKTL.seek(_typ)
||
   _tktl_src:=_tktl_temp;
   _ktm:=M.KTM;
   _naz:=M.N;
   {? _tktl_src=null() & M.COPY_SRC<>''
   || M.cntx_psh();
      M.index('IDADD');
      M.prefix(M.COPY_SRC);
      {? M.first()
      || _tktl_src:=exec('getdefaulttech','tech_common',M.ref(),0)
      ?};
      M.cntx_pop()
   ?};
   {? _tktl_src<>null
   ||
::    Kopiowanie domyślnej karty ze źródłowego materiału lub wzorca
      exec('tktl_cntx_psh','tech_common');
      exec('tktl_use','tech_common',ref_name(_tktl_src)+3);
      _args_copy:=exec('args_copy','tech_arch');
      _args_copy.DST_SYM:=M.KTM;
      _args_copy.DST_WER:=exec('find_wer','tech_head','T',M.KTM,'1.0');
      _args_copy.COPY_PROD:=0;
      _args_copy.COPY_KTM:=0;
      _args_copy.COPY_ZATW:=0;
      _args_copy.COPY_KALK:=0;
      _args_copy.DST_TORW:='T';

      {? exec('tktl_copy_act','tech_arch',_tktl_src,_args_copy,'T',0)>0
      || _result:=_args_copy.TKTL_DST;

         TKTL.cntx_psh(); TKTL.prefix();
         {? TKTL.seek(_result)
         || TKTL.STAT_N:='T';
            TKTL.STAN:='P';
            TKTL.OPIS:=_naz;
            TKTL.KTM:=_material;
            TKTL.put()
         ?};
         TKTL.cntx_pop()
      ?};
      exec('tktl_cntx_pop','tech_common')
   ||
::    Zakładanie pustej karty
      TKTL.blank();
      TKTL.TYP:=TPKTL.ref();
      TKTL.KTM:=M.ref();
      TKTL.NRK:=M.KTM;
      TKTL.OPIS:=M.N;
      TKTL.WER:=exec('find_wer','tech_head','T',TKTL.NRK,'1.0');
      TKTL.JM:=M.J;
      TKTL.XJM:=TPKTL.XJM;
      TKTL.SERIA:=TPKTL.XJM;
      TKTL.STAT_N:='T';
      TKTL.STAN:='P';
      {? TKTL.add()
      || _result:=TKTL.ref()
      ?}
   ?}
?};
M.cntx_pop();
TPKTL.cntx_pop();
_result


\find_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Znajduje nową pierwszą wolną wersję dla TKTL
::   WE: _a - STRING - T/W - technologia czy wzorzec
::       _b - STRING - symbol karty
::       _c - STRING - wersja wejściowa
::       [_d] - INTEGER - numer wywołania rekurencyjnego
::   WY: STRING - znaleziona wersja lub ''
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_torw:=_a;
_symbol:=_b;
_ver:=_c;
_nr:=~~;
_rec:=0;
{? var_pres('_d')=type_of(0)
|| _rec:=_d
?};

_result:='';

{? _rec<50
||
   TKTL.cntx_psh();
   TKTL.index('NRK');
   _precision:=-1;
   {? _ver*'.'>0
   || _fract_pos:=_ver*'.';
      _precision:=(+_ver)-_fract_pos
   |? _ver*','>0
   ||
      _fract_pos:=_ver*',';
      _precision:=(+_ver)-_fract_pos
   ?};

   {? #_ver>0
   || _nr:=#_ver
   ?};

   _chk:=0;
   {? type_of(_nr)=type_of(0)
   || _str:='';
      {? _precision>-1
      || _str:=form(_nr,,_precision,'..')
      || _str:=form(_nr,,,'..')
      ?};
      _chk:=exec('chk_symbol','tech_head',_torw,_symbol,_str)
   || _chk:=exec('chk_symbol','tech_head',_torw,_symbol,_ver)
   ?};

   {? _chk=0
   ||
::    Jest konflikt wyznaczam nowy numer
      _rec_ver:='';

      {? type_of(_nr)=type_of(0)
      || _nr:=exec('next_value','#math',_nr,,_precision);
         {? _precision>-1
         || _rec_ver:=form(_nr,,_precision,'..')
         || _rec_ver:=form(_nr,,,'..')
         ?}
      || _num:=1;
         {? _ver*'_'>0
         || _split:=spli_str(_ver,'_');
            _len:=obj_len(_split);
            {? _len>1
            || _last:=_split[_len];
               _nr:=#_last;
               _num:=exec('next_value','#math',_nr)
            ?}
         ?};
         _ver:=_ver-(+form(_num,,,'..'));

         _sep:='_';
         {? _ver+1='_'
         ||
::          Jeśli kończy się na _ to nie dodaję kolejnego podkreślnika
            _sep:=''
         ?};
         _rec_ver:=_ver+_sep+form(_num,,,'..')
      ?};
::    !!! REKURENCJA !!!
      _result:=exec('find_wer','tech_head',_torw,_symbol,_rec_ver,_rec+1)
   ||
::    Brak konfliktu biore to co przyszło
      {? type_of(_nr)=type_of(0)
      || {? _precision>-1
         || _result:=form(_nr,,_precision,'..')
         || _result:=form(_nr,,,'..')
         ?}
      || _result:=_ver
      ?}
   ?};
   TKTL.cntx_pop()
?};
_result


\tktl_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: Akcja na popraw technologii/wzorców
::   WE: [_a] - TKTL.ref() (domyślnie bieżący rekord TKTL)
::       [_b] - M.ref() produkt, dla którego będzie redagowana karta
::       [_c] - karta używana przez innego operatora
::       [_d] - TPKTL.ref() typ karty, którego dotyczy redakcja
::   WY: 0 / 1 (czy udało się zredagowac kartę)
::  OLD: \tktl_pop/tech.fml
::  TAG: <PUT>
::----------------------------------------------------------------------------------------------------------------------
TKTL.cntx_psh();
TKTL.clear();

{? var_pres('_a')=type_of(null())
|| {? ~TKTL.seek(_a)
   || TKTL.cntx_pop();
      return(0)
   ?}
?};
{? var_pres('_b')=type_of(null()) || _material:=_b || _material:=null() ?};
{? var_pres('_c')=type_of(0) || _used:=_c || _used:=0 ?};
{? var_pres('_d')=type_of(null()) || _tpktl:=_d || _tpktl:=null() ?};

{? VAR.GRP_MOD='' ||  VAR.GRP_MOD:='N' ?};
_ref_k_res:=exec('ref_k_res','tech_head');
{? _ref_k_res<>null() & TKTL.TYP=_ref_k_res
|| _msg:='Karta kompletacyjna — nie można poprawiać.'@;
   {? VAR.GRUPA='T'
   || KOMM.add(exec('grp_mod_msg','tech_head')+_msg)
   || FUN.emsg(_msg)
   ?};
   TKTL.cntx_pop();
   return(0)
?};

_res:=0;
KWAR.clear();

_chk:=exec('tktl_chk','tech_head',VAR.A_TORW<>'Z');

{? VAR.A_TORW='Z' | _chk
||
   _locked:=~_used & exec('tktl_lock','tech_common',,'N',1);
   _used:=~_locked;
   {? VAR.A_TORW='Z' | _locked
   ||
      {? VAR.GRP_MOD='N'
      ||
         exec('win_edit','tech_head',{? VAR.A_TORW='Z' & _locked || 'WYŚWIETL' |? _chk || 'POPRAW' || 'MENU' ?});
         {? exec('enabled','zl_uslugi')
         || exec('mat_grp_f3','zl_uslugi',0,'W')
         || exec('slo_m_ok','material','T',0,,'W');
            ZAKR.MATU:='A';
            exec('filter','material','WP')
         ?};

         TPKTL.prefix();
         TPKTL.f_clear();

         _where:='';
:      _where+='"TPKTL"."SUR"=\':_a\'';
:      {? TKTL.TYP().UTIL<>'N' || _where+=' and "TPKTL"."UTIL"=\':_b\'' ?};
:      {? TKTL.TYP().OPER='T' || _where+=' and "TPKTL"."OPER"=\'T\'' ?};

         {? ~TPKTL.f_set('TYP',,_where,
                         TKTL.TYP().SUR, TKTL.TYP().UTIL)
         ||
            exec('err_psql','#sql');
            exec('empty_f_set','#table',TPKTL)
         ?}
      ?};
      VAR.A_KTL:=TKTL.ref();
      VAR.A_WYD:=null();
      exec('ust_wyd','tech_head');
      _ktm:=TKTL.KTM;
      {!
      |?
         xjm:=1;
::       Jeżeli jest zmienna środowiskowa env, to ją przepycham
         _params:=params_get();
         {? var_pres('_params')>100 & var_pres('env',_params)>100
         || params_set('env',_params.env,'STAT_N',TKTL.STAT_N,'used',_used,'material',_material<>null(),'tpktl',_tpktl<>null())
         || params_set('STAT_N',TKTL.STAT_N,'used',_used,'material',_material<>null(),'tpktl',_tpktl<>null())
         ?};
         {? _locked=0
         || TKTL.display();
            _exit:=1
         || VAR.TKTL_XJM:=TKTL.XJM;
            VAR.TKTL_JM:=TKTL.JM;
            {? VAR.GRP_MOD='T' | TKTL.edit("
                  {? TKTL.STAN<>'T'
                  ||
                     _ok:=1;
                     {? TKTL.TORW<>'Z' & exec('chk_symbol','tech_head',TKTL.TORW,TKTL.NRK,TKTL.WER,TKTL.ref())=0
                     || FUN.emsg(
                           {? TKTL.TORW='T'
                           || 'Karta o numerze: %1 w wersji: %2 już istnieje — proszę poprawić.'@[TKTL.NRK,TKTL.WER]
                           || 'Wzorzec o symbolu: %1 w wersji: %2 już istnieje — proszę poprawić.'@[TKTL.NRK,TKTL.WER]
                           ?}
                         );
                        _ok:=0
                     ?};
                     {? _ok
                     || _acronim:=exec('tktl_arec','tech_head',1);
                        {? _acronim='' & exec('is_tmat','tech_head',TKTL.ref()) & TKTL.JM<>VAR.TKTL_JM
                        || {? ~FUN.ask('Zmodyfikowano jednostkę miary w nagłówku technologii. \nProcentowe zawartość '
                                       'surowców oraz zamienników zostaną przeliczone względem nowej jednostki miary. '
                                       '\nCzy chcesz kontynuować?'@)
                           || _acronim:={? TKTL.TORW='W' || 'JM' || 'KTM' ?}
                           ?}
                        ?};

                        {? _acronim<>''
                        || TKTL.STAT_N:=params_get().STAT_N
                        ?};
                        _acronim
                     || TKTL.STAT_N:=params_get().STAT_N;
                        0
                     ?}
                  || 1
                  ?}
               ")
            || exec('stat_act','tech_head');
               _ok:=1;
               {? VAR.GRP_MOD='T'
               || _ok:=exec('tktl_modify_frombfr','tech_head',__BUFF_GRP)
               ?};
               {? _ok>0
               || no_msg(1); _exit:=TKTL.put(); no_msg(0)
               ?};
               {? VAR.GRP_MOD='N'
               || {? ~_exit
                  || FUN.emsg(
                        {? TKTL.TORW='T'
                           || 'Karta o numerze: %1 w wersji: %2 już istnieje — proszę poprawić.'@[TKTL.NRK,TKTL.WER]
                           || 'Wzorzec o symbolu: %1 w wersji: %2 już istnieje — proszę poprawić.'@[TKTL.NRK,TKTL.WER]
                        ?}
                     )
                  ||
                     exec('desc_update','#b__box',TKTL.uidref());
::                   Aktualizuje procentowe zawartości surowców po zmianie ilości na nagłówku karty
                     {? TKTL.XJM<>VAR.TKTL_XJM
                     || {? exec('is_tmat','tech_head',TKTL.ref())
                        || _txt:='Zmodyfikowano ilość produktu na nagłówku technologii.\n'
                                 'Czy przeliczyć ilości surowców według zdefiniowanego składu procentowego? '
                                 '(pominięcie przeliczenia spowoduje wyznaczanie nowych procentowych zawartości '
                                 'surowców oraz zamienników technologii)\n'@;
                           {? exec('is_form','tech_head',TKTL.ref())
                           || _txt+='\n'+'UWAGA!\nSurowce/zamienniki technologii mają zdefiniowane formuły '
                                    'na wartości norm netto/brutto. Podczas przeliczania zawartość '
                                    'procentowa surowców może ulec zmianie. '
                                    'Czy mimo to przeliczyć ilości surowców?'@
                           ?};
                           {? FUN.ask(_txt)
                           || {? exec('is_tmat','tech_head',TKTL.ref()) & TKTL.JM<>VAR.TKTL_JM
                              ||
::                            Modyfikuje procentowe zawarotści surowców/zamienników po zmianie jednostki miary
                                 exec('xjmp_update','tech_mater',TKTL.ref(),1)
                              ?};
                              exec('sur_update','tech_mater',TKTL.ref())
                           || exec('xjmp_update','tech_mater',TKTL.ref())
                           ?}
                        ?}
                     |? exec('is_tmat','tech_head',TKTL.ref())
                     || exec('xjmp_update','tech_mater',TKTL.ref())
                     ?};
                     _res:=1
                  ?}
               || _res:=1
               ?}
            || _exit:=1
            ?}
         ?};
         &xjm;
         ~_exit
      !};
      TPKTL.f_clear();
      {? _ktm=null() & TKTL.KTM<>null()
      || exec('tktlw_add','tech_prod')
      |? TKTL.KTM=null()
      || exec('tktlw_del','tech_prod',TKTL.ref())
      |? _ktm<>TKTL.KTM
      || exec('tktlw_modyf','tech_prod')
      ?};
      _improve:=TKTL.IMPROVE;
      {? exec('is_improvement','tech_head',TKTL.ref())
      || TKTL.IMPROVE:='T'
      || TKTL.IMPROVE:='N'
      ?};
      {? _improve<>TKTL.IMPROVE || TKTL.put() ?};
      {? TKTL.IMPROVE='T'
      || exec('improve_update','tech_mater',TKTL.ref())
      ?};
      {? _ktm<>TKTL.KTM
      ||
::       Przepisanie zmian o produkcie podstawowym na surowce i operacje technologiczne
         exec('tktm_update','tech_common',TKTL.ref())
      ?};
::    Przywracam tytuł i akcje w słowniku materiałów
      exec('filter_clear','material');
      exec('tktl_unlock','tech_common',,'N');
::      {? TKTL.f_active()=1 | (TKTL.f_active()>1 & TKTL.f_test())
::      || ~~
::      || FUN.info('Zmodyfikowany zapis nie znajduje się w bieżącym filtrze użytkownika.\nNależy zmienić filtr.'@);
::         TKTL.f_del()
::      ?};
      ~~
   || _msg:={? VAR.A_TORW='W'
            || 'Karta jest w tej chwili redagowana,\nakcja nie może być wykonana'@
            || 'Wzorzec jest w tej chwili redagowany,\nakcja nie może być wykonana'@
            ?};
      {? VAR.GRUPA='T'
      || KOMM.add(exec('grp_mod_msg','tech_mater')+_msg)
      || FUN.info(_msg)
      ?}
   ?}
?};
TKTL.cntx_pop();
_res


\TKTL_usun
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: usuwa aktualną kartę technologiczną/wzorzec
::   WE: [_a] - TKTL.ref() (domyślnie bieżący rekord TKTL)
::   WY: 1 / 0 - czy udało się usunąć
::  OLD: \TKTL_usun/tech.fml
::----------------------------------------------------------------------------------------------------------------------
TKTL.cntx_psh();
TKTL.clear();

{? var_pres('_a')=type_of(null())
|| {? ~TKTL.seek(_a)
   || TKTL.cntx_pop();
      return(0)
   ?}
?};

:: Zabezpieczenie usunięte - z poziomu obszaru roboczego kart akcja jest wyszarzona
::{? TKTL.TYP=exec('ref_k_res','tech_head')
::|| FUN.emsg('Karta kompletacyjna — nie można usuwać.'@);
::   TKTL.cntx_pop();
::   return(0)
::?};

_tktl:=TKTL.ref();
_ok:=exec('tktl_chk','tech_head');
{? _ok
|| {? TKTL.STAN='N'
   || _pw:=sql('select TKTL.NRK from PLRELWYR join TKTL using (PLRELWYR.TECH,TKTL.REFERENCE)
                where TKTL.REFERENCE like '':_a%''',$TKTL.ref()
              );
      {? type_of(_pw)=type_of(~~)
      || exec('err_sql','#sql');
         TKTL.cntx_pop();
         return(0)
      ?};
      {? ~_pw.first()
      || _ok:=1
      || _txt:='Karta wykorzystywana w analizie wykonania'@;
         {? VAR.GRUPA='T' | do_state()
         || KOMM.add('%1 wersja %2 - %3'@[TKTL.NRK,TKTL.WER,_txt],4)
         || FUN.esmg(_txt)
         ?};
         _ok:=0
      ?}
   || _txt:={? VAR.A_TORW='T' || 'Usuwać można jedynie niezatwierdzone karty.'@ || 'Usuwać można jedynie niezatwierdzone wzorce.'@ ?};
      {? VAR.GRUPA='T' | do_state()
      || KOMM.add('%1 wersja %2 - %3'@[TKTL.NRK,TKTL.WER,_txt],4)
      || FUN.emsg(_txt)
      ?};
      _ok:=0
   ?}
?};
{? _ok
|| _kktl_chk:=exec('kktl_chk','tech_head',_tktl);
   {? _kktl_chk=2
   || _ok:=0;
      {? VAR.GRUPA='T' | do_state()
      || KOMM.add('Do karty %1 wersja %2 wykonano już i zatwierdzono kalkulacje.'@[TKTL.NRK,TKTL.WER],4)
      || FUN.emsg('Do karty wykonano już i zatwierdzono kalkulacje.\nNie można usunąć karty.'@)
      ?}
   |? _kktl_chk=1
   || _ok:=0;
      {? VAR.GRUPA='T' | do_state()
      || KOMM.add('Do karty %1 wersja %2 wykonano już kalkulacje.'@[TKTL.NRK,TKTL.WER],4)
      || FUN.emsg('Do karty wykonano już kalkulacje.\n'
                'Proszę najpierw usunąć kalkulacje, a następnie wykonać usunięcie karty.'@
         )
      ?}
   ?}
?};
{? _ok
|| {? {? VAR.GRUPA='T' | do_state()
      || 1
      || {? VAR.A_TORW='T'
         || FUN.ask('Czy usunąć całą kartę technologiczną?'@)
         || FUN.ask('Czy usunąć cały wzorzec technologii?'@)
         ?}
     ?}
   || _ok:=exec('TKTL_kasuj','tech_head',_tktl)
   || _ok:=0
   ?}
?};

TKTL.cntx_pop();
_ok


\TKTL_kasuj
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: kasuje kartę technologiczną
::   WE: _a - TKTL.ref()
::   WY: 0 / 1 (czy operacja się udała)
::  OLD: \TKTL/tkasuj.fml
::----------------------------------------------------------------------------------------------------------------------
_tktl:=_a;

exec('tktl_cntx_psh','tech_common');
exec('tktl_use','tech_common',ref_name(_tktl)+3);

_ok:=TKTL.seek(_tktl);
_result:=0;
_do:=do_state();
{? ~_do || do() ?};
{? _ok>0 & TKTL.TORW='Z' || _ok:=exec('ZL_kasuj','tech_head',_tktl) ?};
{? _ok>0 || _ok:=DocLib.del('TKTL',_tktl) ?};
{? _ok>0 || _ok:=exec('UAT_kasuj','tech_atr','TKTL',_tktl) ?};
{? _ok>0 || _ok:=exec('TKTLW_kasuj','tech_prod',_tktl) ?};
{? _ok>0 || _ok:=exec('TPAR_kasuj','tech_param',_tktl) ?};
{? _ok>0 || _ok:=exec('TCHMAT_kasuj','tech_mater',_tktl) ?};
{? _ok>0 || _ok:=exec('TMAT_kasuj','tech_mater',_tktl) ?};
{? _ok>0 || _ok:=exec('TACTTLS_kasuj','tech_tool',_tktl) ?};
{? _ok>0 || _ok:=exec('TECHZAMS_kasuj','tech_oper',_tktl) ?};
{? _ok>0 || _ok:=exec('TOPER_kasuj','tech_oper',_tktl) ?};
{? _ok>0 || _ok:=exec('delete4tktl','px_stage',_tktl) ?};
{? _ok>0 || _ok:=exec('delete4tktl','px_tex',_tktl) ?};
{? _ok>0
|| {? TKTL.del(1,1)=1
   || ~~
   ?}
|| undo()
?};

_result:=do_state();
{? ~_do || end() ?};

:: Komunikaty powstałe podczas usuwania składowych
{? _ok=-1
|| _msg:='Usunięcie karty technologicznej niemożliwe — istnieją powiązania w Planie strategicznym.'@;
   FUN.emsg(_msg)
?};

exec('tktl_cntx_pop','tech_common');
_result<>2


\ZL_kasuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Usunięcie powiązania zlecenia z kartą technologiczną zlecenia
::   WE: _a - TKTL.ref()
::----------------------------------------------------------------------------------------------------------------------
_tktl:=_a;

_ok:=1;

ZL.cntx_psh();
ZL.index('RTKTL');
ZL.prefix($_tktl,);
{? ZL.first()
|| ZL.prefix();
   ZL.TKTL:=null();
   ZL.RTKTL:='';
   _ok:=ZL.put()
?};
ZL.cntx_pop();
_ok


\prn_tktl
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: wydruk bieżącej karty technologicznej
::  OLD: \prn_tktl/drukujp.fml
::  TAG: <REPORT>
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','TTE_TEC_XXXX','tte_ktl*','Wydruki kart technologicznych',1);
1


\prn_tbox
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: wydruk bieżącego wzorca technologii
::  OLD: \prn_tbox/drukujp.fml
::  TAG: <REPORT>
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','TTE_TEC_XXXX','tte_ktb_*','Wydruki wzorców technologii',1);
1


\tktl_bre
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: PRZED REKORD w okienkach TKTL.WER, TKTL.DIC, TKTL.SLO
::   WY: Schemat kolorów
::  OLD: \tktl_bre/tech.fml
::----------------------------------------------------------------------------------------------------------------------
::TKTL.actions(TKTL.win_sel('?'),{?TKTL.STAN='T'||'DU'||''?},,1);
VAR.A_KTL:=TKTL.ref();
TKTL.TYP();
KKTL.cntx_psh(); KPOZK.cntx_psh();
VAR.TKW:=0; VAR.DATE:=date(0,0,0); VAR.A_PFAZ:=null();
KKTL.index('KZ');
KKTL.prefix(TKTL.ref(),'T',TKTL.KTM);
{? KKTL.first()
||
:: jest zatwierdzona aktywnie kalkulacja głównego produktu karty
   KPOZK.index('KR');
   KPOZK.prefix(KKTL.ref(),TKTL.TYP().CRUB);
   {? KPOZK.first() || VAR.TKW:=KPOZK.WART; VAR.DATE:=KKTL.DT ?}
|| KKTL.prefix(TKTL.ref(),'T',null());
   {? KKTL.first()
   ||
::    jest zatwierdzona aktywnie kalkulacja prototypowa
      KPOZK.index('KR');
      KPOZK.prefix(KKTL.ref(),TKTL.TYP().CRUB);
      {? KPOZK.first() || VAR.TKW:=KPOZK.WART; VAR.DATE:=KKTL.DT ?}
   ?}
?};
KKTL.cntx_pop(); KPOZK.cntx_pop();

:: okno redagowania
exec('win_edit','tech_head','WYŚWIETL');

:: kolorowanie
{? TKTL.TORW='T'
|| {? ~exec('tktl_act','tech_head',0) & TKTL.ARCH='T'
   || 'TKTL#01#03'
   |? TKTL.DEFAULT='T'
   || 'TKTL#01#01'
   |? TKTL.STAN='T'
   || 'TKTL#01#02'
   || ''
   ?}
||
   {? TKTL.STAN='T'
   || 'TKTL#02#01'
   || ''
   ?}
?}


\tktl_arec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Rekord po w okienku WER tabeli TKTL
::   WY: Akronim pola do ponownej redakcji
::   WE: [_a] - czy uruchomienie z poziomu poprawiania (1) czy dołączania (0) - domyślnie wg ściezki menu
::  TAG: <CHK>
::  OLD: \tktl_arec/tech1.fml
::       \tbox_arec/tech1.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _popraw:=_a || _popraw:=-menu_txt()='popraw' ?};

_chk:='';
{? TKTL.TORW='W'
|| _chk:=__CHK.record2(TKTL,'TYP',,'NRK','Symbol wzorca','WER',,'OPIS','Opis wzorca')
|| _chk:=__CHK.record2(TKTL,'TYP',,'NRK','Numer karty','WER',,'OPIS','Opis karty','JM','Jednostka miary')
?};
{? _chk=''
|| {? TKTL.XJM<=0
   || FUN.info('Ilość powinna być większa od zera.'@);
      _chk:='XJM'
   |? TKTL.SERIA<=0
   || FUN.info('Seria powinna być większa od zera.'@);
      _chk:='SERIA'
   || _chk:=__CHK.index(TKTL,_popraw)
   ?}
?};
{? _chk=''
||
:: Obsługa usług
   _chk:=exec('valid_tktl','zl_uslugi')
?};
_chk


\dat_wysw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.53] OWwPR011/5.3
:: OPIS: przed wyświetl dla pola VAR.DATE
::  OLD: \dat_wysw/tech.fml
::----------------------------------------------------------------------------------------------------------------------
~~


\dat_fd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Format wyświetlania pola VAR.DATE
::----------------------------------------------------------------------------------------------------------------------
{? VAR.DATE=date(0,0,0) || 'empty=1' || 'empty=0' ?}


\tkw_wysw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.53] OWwPR011/5.3
:: OPIS: przed wyświetl dla pola VAR.TKW
::  OLD: \tkw_wysw/tech.fml
::----------------------------------------------------------------------------------------------------------------------
~~


\tkw_fd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Format wyświetlania pola VAR.TKW
::----------------------------------------------------------------------------------------------------------------------
{? VAR.TKW=0 & VAR.DATE=date(0,0,0) || 'empty=1' || 'empty=0' ?}


\tktl_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: Sprawdzenie czy z nagłówkiem można cokolwiek robić
::   WE: [_a] - czy wyświetlać komunikaty (domyślnie 1 - tak)
::   WY: 0 / 1
::  OLD: \tktl_chk/tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _display:=_a || _display:=1 ?};

_torw:=VAR.A_TORW;

{? exec('tktl_lock','tech_common',,'N',~_display)
|| exec('tktl_unlock','tech_common',,'N');
   1
|| {? _torw='T'
   || _txt:='Karta %1 wersja %2 jest w tej chwili redagowana.'@[TKTL.NRK,TKTL.WER]
   |? _torw='Z'
   || _txt:='Karta zlecenia jest w tej chwili redagowana.'@
   || _txt:='Wzorzec %1 wersja %2 jest w tej chwili redagowany.'@[TKTL.NRK,TKTL.WER]
   ?};
   {? VAR.GRUPA='T'
   || KOMM.add(_txt,4)
   ?};
   0
?}


\ref_k_res
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Zwraca ref do zastrzeżonego typu technologii - kompletacja
::   WY: TPKTL.ref lub null()
::  OLD: \ref_k_res/tech1.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('find_k_res','tech_head') || TPKTL.ref() || null() ?}


\find_k_res
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Sprawdza istnienie zastrzeżonego typu technologii - kompletacja
::       Jeżeli znajdzie, to kursor tabeli TPKTL stoi na tym typie
::   WY: 1 / 0
::  OLD: \find_k_res/tech1.fml
::----------------------------------------------------------------------------------------------------------------------
exec('find_tpktl','tech_head',exec('k_res_string','tech_head'))


\ref_t_res
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Zwraca ref do zastrzeżonego typu technologii - uproszczona
::   WY: TPKTL.ref / null()
::  OLD: \ref_t_res/tech1.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('find_t_res','tech_head') || TPKTL.ref() || null() ?}


\find_t_res
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Sprawdza istnienie zastrzeżonego typu technologii - uproszczona
::       Jezeli znajdzie, to kursor tabeli TPKTL stoi na tym typie
::   WY: 1 / 0
::  OLD: \find_t_res/tech1.fml
::----------------------------------------------------------------------------------------------------------------------
exec('find_tpktl','tech_head',exec('t_res_string','tech_head'))


\find_tpktl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Sprawdza istnienie typu technologii
::       Jeżeli znajdzie, to kursor tabeli TPKTL stoi na tym typie
::   WE: _a - string (TPKTL.TYP)
::   WY: 1 / 0
::  OLD: \find_tpktl/tech1.fml
::----------------------------------------------------------------------------------------------------------------------
TPKTL.clear();
TPKTL.find_tab(,'TYP',,'=',_a)


\k_res_string
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Zwraca kod zastrzeżonego typu technologii - kompletacja
::   WY: '~KM'
::  OLD: \k_res_string/tech1.fml
::----------------------------------------------------------------------------------------------------------------------
'~KM'


\t_res_string
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Zwraca kod zastrzeżonego typu technologii - uproszczona
::   WY: '~TM'
::  OLD: \t_res_string/tech1.fml
::----------------------------------------------------------------------------------------------------------------------
'~TM'


\is_k_res
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Czy wskazany typ technologii jest technologią kompletacyjną
::   WE: TPKTL.ref()
::   WY: 1 / 0
::  OLD: \is_k_res/tech1.fml
::----------------------------------------------------------------------------------------------------------------------
TPKTL.cntx_psh();
_res:=_a=exec('ref_k_res','tech_head');
TPKTL.cntx_pop();
_res


\is_t_res
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Czy wskazany typ technologii jest technologią uproszczoną
::   WE: TPKTL.ref()
::   WY: 1 / 0
::  OLD: \is_t_res/tech1.fml
::----------------------------------------------------------------------------------------------------------------------
TPKTL.cntx_psh();
_res:=_a=exec('ref_t_res','tech_head');
TPKTL.cntx_pop();
_res


\kktl_chk
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: sprawdza czy do karty są jakieś kalkulacje
::   WE: _a - TKTL.ref()
::   WY: 0 - brak powiązań, 1 - są kalkulacje (wszystkie niezatwierdzone), 2 - są kalkulacje (niektóre zatwierdzone)
::  OLD: \kktl_chk/tex_kalk.fml
::----------------------------------------------------------------------------------------------------------------------
_tktl_ref:=_a;

_result:=0;

KKTL.clear();
KKTL.index('KWN');
KKTL.prefix(_tktl_ref);
{? KKTL.first()
|| _result:=1;
   {!
   |? {? KKTL.STAN<>'N' || _result:=2 ?};
      _result<2 & KKTL.next()
   !}
?};

_result


\win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Ustawia okno redagowania technologii
::       Kontekst pracy - ustawiona zmienna VAR.A_TORW
::   WE: _a - Tryb pracy: 'DOŁĄCZ', 'POPRAW', 'WYŚWIETL', 'MENU'
::  OLD: \win_edit/tech1.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') || _tryb:=_a || _tryb:='WYŚWIETL' ?};

{? VAR.A_TORW='T'
|| _red:={? _tryb='WYŚWIETL' || 'DISP' || {? TKTL.STAN<>'T' || 'RED' || 'REDA'?} ?};
   {? _red='RED'
   ||  _can_gen:=Plugin.runnable('TKTL_NRK_001') & (_tryb='DOŁĄCZ' | _tryb='POPRAW' ) & exec('tktl_nrk_pr','tech_head');
      {? TKTL.STAT_N='T'
      || TKTL.btn_eopt(_red,'DALEJ','state=grayed')
      || TKTL.btn_eopt(_red,'DALEJ','state=normal')
      ?};
      {? _can_gen
      || TKTL.btn_eopt(_red,'GENERUJ','state=normal')
      || TKTL.btn_eopt(_red,'GENERUJ','state=grayed')
      ?}
   ?}

|? VAR.A_TORW='Z'
|| _red:='REDZ';
   TKTL.btn_eopt(_red,'OPERACJE',{? TKTL.TYP().OPER='N' || 'state=grayed' || 'state=normal' ?});
   TKTL.btn_eopt(_red,'NPU',{? TKTL.TYP().UTIL='N' || 'state=grayed' || 'state=normal' ?});
   TKTL.btn_eopt(_red,'PARAMETRY',{? TKTL.TYP().PAR='N' || 'state=grayed' || 'state=normal' ?});
   {? TKTL.STAT_N='T' | _tryb='MENU'
   || TKTL.btn_eopt(_red,'DALEJ','state=grayed');
      TKTL.btn_eopt(_red,'WZORZEC','state=grayed')
   || TKTL.btn_eopt(_red,'DALEJ','state=normal');
      TKTL.btn_eopt(_red,'WZORZEC','state=normal')
   ?}

|| _red:={? _tryb='WYŚWIETL' || 'DISP_' || 'RED_' ?};
   {? _red='RED_'
   || _can_gen:=Plugin.runnable('TKTL_NRK_001') & (_tryb='DOŁĄCZ' | _tryb='POPRAW' ) & exec('tktl_nrk_pr','tech_head');
      {? TKTL.STAT_N='T'
      || TKTL.btn_eopt(_red,'DALEJ','state=grayed')
      || TKTL.btn_eopt(_red,'DALEJ','state=normal')
      ?};
      {? _can_gen
      || TKTL.btn_eopt(_red,'GENERUJ','state=normal')
      || TKTL.btn_eopt(_red,'GENERUJ','state=grayed')
      ?}
   ?}
?};

TKTL.win_edit(_red);

TKTL.hdr_edit();
{? _tryb='DOŁĄCZ'
|| TKTL.hdr_edit(' — '+'dołączanie'@)
|? _tryb='POPRAW'
|| TKTL.hdr_edit(' — '+'poprawianie'@)
|? _tryb='MENU' | _tryb='WYŚWIETL'
|| {? VAR.A_TORW='Z'
   || TKTL.hdr_edit(' — '+'szczegóły'@)
   |? VAR.A_TORW='W'
   || TKTL.hdr_edit('Dane wzorca technologii — szczegóły'@)
   || TKTL.hdr_edit('Dane karty technologicznej — szczegóły'@)
   ?}
?};
~~


\set_filter
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2006]
:: OPIS: Ustawia filtr programowy dla okna tabeli TKTL
::       Pod uwage brany jest kontekst: VAR.FILTER oraz FILTER.*
::   WE: [_a] - dodatkowe przefiltrowanie po technologiach posiadających zdefiniowane:
::              0 - operacje, 1 - surowce , 2 - NPU. Domyślnie -1 - nie uwzględniać parametru
::   WY: ~~
::  OLD: \set_filter/tech.fml
::----------------------------------------------------------------------------------------------------------------------
_exit:="
   exec('err_psql','#sql');
   exec('empty_f_set','#table',TKTL)
";
_what:={? var_pres('_a')=type_of(0) || _a || -1 ?};
TKTLW.clear(); TKTL.clear();
TKTLW.f_clear(1); TKTL.f_clear(1);
{? VAR.FILTER='N'
|| _where:='"TKTL".TORW=\':_a\' and "TKTL".ARCH=\':_b\' ';
   {? VAR.ARCH='N'
   || _where+='and ((TKTL.TERM_OD<=to_date(:_c) and TKTL.TERM_OD IS NOT NULL)
         or TKTL.TERM_OD IS NULL)
         and ((TKTL.TERM_DO>=to_date(:_c) and TKTL.TERM_DO IS NOT NULL)
         or TKTL.TERM_DO IS NULL)'
   ?};
   _from:='';
:: Dodatkowe przefiltrowanie po technologiach posiadających surowce, operacje lub NPU
   {? _what>=0
   || {? _what=0
      || _from:='join TOPER using (TOPER.NRK, TKTL.REFERENCE)'
      |? _what=1
      || _from:='join TMAT using (TMAT.NRK, TKTL.REFERENCE)'
      |? _what=2
      || _from:='join TACTTLS using (TACTTLS.NRK, TKTL.REFERENCE)'
      ?}
   ?};
   {? ~TKTL.f_set('NRK,WER',_from,_where,VAR.A_TORW, VAR.ARCH,date())
   ||
      _exit()
   ?}
||
   _where:='"TKTL".TORW=\':_a\'
            and "TKTL".ARCH=\':_b\'
            and "TKTL".TYP like \':_c%\'
            and "TKTL".STAN like \':_d%\'
            and "TKTL".DEFAULT like \':_e%\' ';
   {? VAR.ARCH='N'
   || _where+='
         and ((TKTL.TERM_OD<=to_date(:_j) and TKTL.TERM_OD IS NOT NULL)
         or TKTL.TERM_OD IS NULL)
         and ((TKTL.TERM_DO>=to_date(:_j) and TKTL.TERM_DO IS NOT NULL)
         or TKTL.TERM_DO IS NULL)
      '
   ?};
   {? FILTER.GRUPA<>null()
   || _where+=' and "M".MGR like \':_f%\''
   ?};
   {? FILTER.WPM<>''
   || _where+=' and "M".R like \':_g%\''
   ?};
   {? FILTER.KTM<>null()
   || _where+='and "TKTL".KTM like \':_h%\''
   ?};
   _where+='and "TKTL".NRK like \':_i%\'';
   {? ~TKTL.f_set('TORW,ARCH,NRK,WER',
                  'left join "M"', _where,
                  VAR.A_TORW, VAR.ARCH, $FILTER.TPKTL,
                  FILTER.STAN_KTL, FILTER.DEFAULT, $FILTER.GRUPA,
                  FILTER.WPM, $FILTER.KTM, FILTER.NRK,date)
   ||
      _exit()
   ?}
?};
~~


\set_wfilter
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Ustawia filtr programowy dla okna tabeli TKTLW
::       Pod uwage brany jest kontekst: VAR.FILTER oraz FILTER.*
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_exit:="
   exec('err_psql','#sql');
   exec('empty_f_set','#table',TKTLW)
";

TKTLW.clear(); TKTL.clear();
TKTLW.f_clear(1); TKTL.f_clear(1);
{? VAR.FILTER='N'
||
   {? ~TKTLW.f_set('TKTL(NRK),TKTL(WER)','join TKTL',
                  '"TKTL".TORW=\':_a\' and "TKTL".ARCH=\':_b\'',
                  VAR.A_TORW, VAR.ARCH)
   ||
      _exit()
   ?}
||
   _where:='"TKTL".TORW=\':_a\'
            and "TKTL".ARCH=\':_b\'
            and "TKTL".TYP like \':_c%\'
            and "TKTL".STAN like \':_d%\'
            and "TKTL".DEFAULT like \':_e%\'';
   {? FILTER.GRUPA<>null()
   || _where+=' and "M".MGR like \':_f%\''
   ?};
   {? FILTER.WPM<>''
   || _where+=' and "M".R like \':_g%\''
   ?};
   {? FILTER.KTM<>null()
   || _where+='and "TKTL".KTM like \':_h%\''
   ?};
   _where+='and "TKTL".NRK like \':_i%\'';
   {? ~TKTLW.f_set('TKTL(TORW),TKTL(ARCH),TKTL(NRK),TKTL(WER)',
                  'join TKTL left join "M"', _where,
                  VAR.A_TORW, VAR.ARCH, $FILTER.TPKTL,
                  FILTER.STAN_KTL, FILTER.DEFAULT, $FILTER.GRUPA,
                  FILTER.WPM, $FILTER.KTM, FILTER.NRK)
   ||
      _exit()
   ?}
?};
~~


\is_toper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.62]
:: OPIS: czy dla danej _a są operacje
::   WE: _a - TKTL.ref()
::  OLD: \is_toper/tech.fml
::----------------------------------------------------------------------------------------------------------------------
TOPER.cntx_psh();
TOPER.index('NNN');
TOPER.prefix(_a);
_result:=TOPER.first();
TOPER.cntx_pop();
_result


\is_tmat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.62]
:: OPIS: czy dla danej _a są materiały
::   WE: _a - TKTL.ref()
::  OLD: \is_tmat/tech.fml
::----------------------------------------------------------------------------------------------------------------------
TMAT.cntx_psh();
TMAT.index('NL');
TMAT.prefix(_a);
_result:=TMAT.first();
TMAT.cntx_pop();
_result


\is_ttls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.62]
:: OPIS: czy dla danej _a są N-P-U
::   WE: _a - TKTL.ref()
::  OLD: \is_ttls/tech.fml
::----------------------------------------------------------------------------------------------------------------------
TACTTLS.cntx_psh();
TACTTLS.index('KNROP');
TACTTLS.prefix(_a);
_result:=TACTTLS.first();
TACTTLS.cntx_pop();
_result


\is_param
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.62]
:: OPIS: czy dla danej _a są parametry
::   WE: _a - TKTL.ref()
::  OLD: \is_param/tech.fml
::----------------------------------------------------------------------------------------------------------------------
TPAR.cntx_psh();
TPAR.index('NN');
TPAR.prefix(_a);
_result:=TPAR.first();
TPAR.cntx_pop();
_result


\is_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: czy dla danej _a są atrybuty
::   WE: _a - TKTL.ref()
::----------------------------------------------------------------------------------------------------------------------
exec('exist','tech_atr','TKTL',_a)


\is_doc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: czy dla danej _a są dokumenty
::   WE: _a - TKTL.ref()
::----------------------------------------------------------------------------------------------------------------------
DocLib.exist('TKTL',_a)


\ust_wyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2009]
:: OPIS: Sprawdza czy jakieś elementy karty mają ustawioną fazę produkcji
::       i ustawia odpowiednio wartość VAR.A_WYD
::  OLD: \ust_wyd/tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.A_WYD=null()
|| TOPER.cntx_psh();
   TOPER.index('NNN');
   TOPER.prefix(VAR.A_KTL);
   {? TOPER.first()
   || {!
      |? {? TOPER.PFAZ<>null()
         || VAR.A_WYD:=TOPER.PFAZ().WYD;
            0
         || TOPER.next()
         ?}
      !}
   ?};
   TOPER.cntx_pop()
?};

{? VAR.A_WYD=null()
::   & VAR.A_KTL().TYP().SUR='K'
|| TMAT.cntx_psh();
   TMAT.index('ANL');
   TMAT.prefix('T',VAR.A_KTL);
   {? TMAT.first()
   || {!
      |? {? TMAT.PFAZ<>null()
         || VAR.A_WYD:=TMAT.PFAZ().WYD;
            0
         || TMAT.next()
         ?}
      !}
   ?};
   TMAT.cntx_pop()
?};

{? VAR.A_WYD=null()
::   & VAR.A_KTL().TYP().UTIL='K'
|| TACTTLS.cntx_psh();
   TACTTLS.index('AKNROP');
   TACTTLS.prefix('T',VAR.A_KTL);
   {? TACTTLS.first()
   || {!
      |? {? TACTTLS.PFAZ<>null()
         || VAR.A_WYD:=TACTTLS.PFAZ().WYD;
            0
         || TACTTLS.next()
         ?}
      !}
   ?};
   TACTTLS.cntx_pop()
?};
~~


\stat_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Aktualizuje dane powiązane ze statusem karty technologicznej
::       Kontekst wywołania - rekord TKTL
::----------------------------------------------------------------------------------------------------------------------
{? TKTL.TORW='Z'
|| {? TKTL.STAT_N='T' & TKTL.STAT_O='T' & TKTL.STAT_S='T' & TKTL.STAT_P='T'
   || TKTL.STAN:='T'
   ?}
||
:: Zabezpieczenie przed zmianą stanu przy poprawianiu aktywnej karty
   {? ~(TKTL.STAT_N='T' & TKTL.STAT_O='T' & TKTL.STAT_S='T' & TKTL.STAT_P='T')
   || {? TKTL.STAT_N='T'
      || TKTL.STAN:='P'
      ?}
   ?}
?};
~~


\tktl_ended
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Sprawdza, czy zakończono redakcję karty/wzorca we wszystkich (wymaganych) obszarach
::   WY: 0 / 1
::----------------------------------------------------------------------------------------------------------------------
{? TKTL.TYP().OPER='T'
|| _res:=TKTL.STAT_N='T' & TKTL.STAT_O='T' & TKTL.STAT_S='T' & TKTL.STAT_P='T'
|| _res:=TKTL.STAT_N='T' & TKTL.STAT_S='T' & TKTL.STAT_P='T'
?};
_res


\chk_symbol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.41]
:: OPIS: Sprawdza czy w kartotece technologii znajduje się karta o podanym symbolu i wersji
::       Sprawdza we wszystkich maskach!
::   WE: _a - STRING - TKTL.TORW
::       _b - STRING - TKTL.NRK
::       _c - STRING - TKTL.WER
::      [_d] - TKTL.ref(), którego nie uwzględniać w sprawdzaniu (przy poprawianiu rekordu)
::   WY: 0 - w którejś masce istnieje już technologia o takim symbolu i wersji
::       1 - nie ma technologii i takim symbolu i wersji
::  TAG: <PUBLICZNA><TECHNOLOGIE><KOPIOWANIE><CHK>
::  OLD: \chk_symbol/tech.fml
::----------------------------------------------------------------------------------------------------------------------
:: Tworzę obiekt z argumentami który przekażę do formuły for_each_mask
_args:=obj_new('TORW','NRK','WER','TKTL');
_args.TORW:=_a;
_args.NRK:=_b;
_args.WER:=_c;
_args.TKTL:={? var_pres('_d')=type_of(null()) || _d || null() ?};

:: Tworzę formułę którą wykonam we wszystkich maskach, formuła jako _b dostanie _args
_fml:="
   _args:=_b;
   _result:=1;
   TKTL.cntx_psh();
   TKTL.index('NRK');
   TKTL.prefix(_args.TORW,_args.NRK,_args.WER);
   {? TKTL.size()=0
   || _result:=1
   || {? TKTL.name()=ref_name(_args.TKTL) & TKTL.first() & TKTL.ref()=_args.TKTL
      || _result:=1
      || _result:=0
      ?}
   ?};
   TKTL.cntx_pop();
   _result
";

:: Uruchamiam iteracje po wszystkich maskach
_result:=exec('for_each_mask','#table',TKTL,_fml,,,_args,1);
_result


\tmp_sym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70] Wzorce technologii
:: OPIS: Prefiks dla symbolu wzorca tymczasowego
::  TAG: <PUBLICZNA><WZORCE_TECH><STAŁE_STR>
::  OLD: \tmp_sym/tex_wzor.fml
::----------------------------------------------------------------------------------------------------------------------
exec('all_tmp_sym','tech_head')+'*'+OPERATOR.USER().KOD+'*'


\all_tmp_sym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70] Wzorce technologii
:: OPIS: Prefiks dla symbolu wzorca tymczasowego (wszystkie tymczasowe wzorce)
::  TAG: <PUBLICZNA><WZORCE_TECH><STAŁE_STR>
::  OLD: \all_tmp_sym/tex_wzor.fml
::----------------------------------------------------------------------------------------------------------------------
'TMP'


\menu_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Inicjowanie kontekstu programu dla akcji menu dla kart technologicznych
::       Kontekst wywołania - rekord TKTL
::   WY: 0 / 1 - czy wyswietlac menu
::  OLD: \menu_start/tech1.fml
::----------------------------------------------------------------------------------------------------------------------
_komplet:=(TKTL.TYP().TYP=exec('k_res_string','tech_head'));

{? VAR.GRUPA='N'
||
   exec('s_tktl','tech_head');
   exec('start_tpar','tech_param',TKTL.KTM);
   {? exec('tktl_lock','tech_common',,'N',1)
   || exec('tktl_unlock','tech_common',,'N')
   || {? TKTL.TYP=null()
      || FUN.info('Karta jest w tej chwili dodawana do systemu, więc jej radakcja jest niemożliwa.'@);
         return('#DONTSHOW#')
      ?}
   ?}
?};
'#TITLE#'+
{? _komplet
|| 'Karta kompletacyjna dla produktu: '+TKTL.KTM().KTM
|| {? TKTL.TORW='T' || 'Karta technologiczna: ' || 'Wzorzec: ' ?}+TKTL.NRK+' wersja: '+TKTL.WER
?}


\menu_stop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Przywracanie kontekstu po wywolaniu menu dla kart technologicznych
::  OLD: \menu_stop/tech1.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.GRUPA='N'
|| exec('stop_tpar','tech_param')
?};
~~


\s_tktl
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Ustawienia dla dodatkowych parametrow karty technologicznej
::  OLD: \s_tktl/pset_var.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.A_KTL:=TKTL.ref();
VAR.A_TPKTL:=TKTL.TYP;
VAR.A_OP:=0;
VAR.OPER:=VAR.A_TPKTL().OPER;
VAR.SUR:=VAR.A_TPKTL().SUR;
VAR.UTIL:=VAR.A_TPKTL().UTIL;
VAR.XJM:=VAR.A_KTL().XJM;
VAR.A_UNROP:=0;
~~


\showzktl_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Argumet funkcji exec('showzktl','tech_head')
::----------------------------------------------------------------------------------------------------------------------
_args:=obj_new('ZL','SHOW','TPAR_ASK','TPAR_EDITED','TKTL','EDIT');

:: Zlecenie
_args.ZL:=null();
:: Czy wyświetlać nagłówek technologii zlecenia (wpp tylko generuje kartę)?
_args.SHOW:=1;
:: Czy redagować wartości parametrów?
_args.TPAR_ASK:=1;
:: Czy zatwierdzona redakcja wartości parametrów?
_args.TPAR_EDITED:=1;
:: Wygenerowana/redagowana karta technologiczna
_args.TKTL:=null();
:: Czy dostępna edycja
_args.EDIT:=1;
_args


\showzktl
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Przedstawienie karty technologicznej zlecenia
::   WE: _a - wynik funkcji exec('showzktl_a','tech_head')
::       [_b] - czy wyświetlać dialogi: [1]/0
::   WY: 1 - akcja udana,
::       0 - akcja nie udana, np. brak zgody na użycie archiwalnej technologii
::  OLD: \showzktl/zl_zktl.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_args:=_a;
_dialog:={? var_pres('_b')=type_of(0) || _b || 1 ?};
_zl:={? _args.ZL=null() || return() || _args.ZL ?};
_show:=_args.SHOW;
_tpar_ask:=_args.TPAR_ASK;

_var_grupa:=VAR.GRUPA;
VAR.GRUPA:='N';

_ok:=0;
ZL.cntx_psh();
ZL.prefix();
{? ZL.seek(_zl)
||
   _locked:=exec('zl_lock','zl_common',,'T',1);
   _used:=~_locked;
   {? _args.EDIT=0
   || _used:=1
   ?};

   TKTL.clear();
   _var_zlec:=VAR.A_ZLEC;
   _add:=0;
   {? VAR.A_ZLEC().KTL<>null()
   ||
      {? ~exec('tktl_act','tech_head',3) &  VAR.A_ZLEC().TKTL=null()
      || {? _dialog>0 & FUN.ask(
               'Do zlecenia została przypisana nieaktywna karta technologiczna.\n'
               'Czy generować technologię zlecenia na jej podstawie?'@
            )
         || _ok:=1
         || _ok:=0
         ?}
      || _ok:=1
      ?}
   |? VAR.A_ZLEC().RODZAJ='N'
   || _ok:=0
   |? VAR.A_ZLEC().SRCTECH='N'
   || _ok:=1
   |? VAR.A_ZLEC().RKTL<>'' & VAR.A_ZLEC().RTKTL=''
   || {? _dialog>0 & FUN.ask(
            'Do zlecenia została przypisana archiwalna karta technologiczna.\n'
            'Czy generować technologię zlecenia na jej podstawie?'@
         )
      || _ok:=1
      || _ok:=0
      ?}
   |? VAR.A_ZLEC().RTKTL<>''
   || _ok:=1
   || {? _dialog>0
      || FUN.emsg('Do zlecenia nie została przypisana technologia aby przedstawić proces.'@)
      ?};
      _ok:=0
   ?};
   {? _ok
   || {? ZL.RTKTL<>''
      ||
         _tktl_zl:=exec('FindAndGet','#table',TKTL,ZL.RTKTL,,"ZL",null());
         _args.TKTL:=exec('FindAndGet','#table',TKTL,ZL.RTKTL);
         {? _tktl_zl<>VAR.A_ZLEC
         || _add:=1
         ?}
      || _add:=1
      ?}
   ?};

   {? _add
   || _ok:= {? ~_used & ZL.RODZAJ='P' & ZL.SRCTECH<>'N'
            ||
::             Kopia karty źródłowej podpięta pod zlecenie
               VAR.A_ZLEC:=_var_zlec;
               _args_copy:=exec('args_copy','tech_arch');
               _args_copy.MASK_SRC:=(8+ZL.RKTL)+3;
               _args_copy.TKTL_SRC:=exec('FindAndGet','#table',TKTL,ZL.RKTL);
               _args_copy.DST_TMASK:=exec('samejedynki','#blank',23);
               _args_copy.DST_TORW:='Z';
               _args_copy.DST_STAN:='N';
               _args_copy.DST_ZL:=ZL.ref();
               _args_copy.DST_ZLNAD:=exec('get_nadzlec','zl_link',ZL.ref());
               _args_copy.DST_SYM:=ZL.SYM;
               _args_copy.DST_WER:=exec('tktl_wer_bl','tech_head');
               {? VAR.GRUPA<>'T' || _args_copy.TPAR_ASK:=1 ?};
               {? _tpar_ask=0 || _args_copy.TPAR_ASK:=0 ?};
               _args_copy.M_ONLY:=ZL.KTM;
               _args_copy.M_VALS:=ZL.KTM;
               _args_copy.FILL_SRC:=1;
               _args_copy.ZL_SET:=ZL.ref();
               _args_copy.TRANS:=1;
               _args_copy.STATUS_COPY:=0;
               _ok_copy:=exec('tktl_copy','tech_arch',_args_copy);
               _args.TKTL:=_args_copy.TKTL_DST;
               _args.TPAR_EDITED:=_args_copy.TPAR_EDITED;
               _ok_copy

            |? ~_used & ZL.RODZAJ='P' & ZL.SRCTECH='N'
            ||
::             Brak karty źródłowej - nowy nagłówek podpięty do zlecenia
               _show:=0;
               _args.SHOW:=1;
               VAR.A_ZLEC:=_var_zlec;
               VAR.A_KTL:=null();
               VAR.A_TORW:='Z';
               VAR.ARCH:='N';
               _tktl:=exec('tktl_add','tech_head');
               {? _tktl<>null()
               || _args.TKTL:=_tktl;
                  ZL.TKTL:=_tktl;
                  ZL.put()
               ?}

            || {? _dialog>0
               || FUN.emsg('Nie ma jeszcze stworzonej karty technologicznej zlecenia.'@)
               ?};
               0
            ?}
   ?};

   VAR.A_KTL:=exec('FindAndGet','#table',TKTL,VAR.A_ZLEC().RTKTL,,"ref()",null());
   _msk:=(8+ref_name(VAR.A_KTL))+3;
   exec('tktl_use','tech_common',_msk);
   VAR.DJ:=VAR.A_KTL().TYP().DJ;

   {? _ok & _show
   || TKTL.clear();
      {? TKTL.seek(VAR.A_KTL)
      || exec('s_tktl','tech_head');
         VAR.TOW_USL:='T';
         VAR.FILTER:='N';
         VAR.ACTION:='1';
         VAR.A_TORW:='Z';
         VAR.ARCH:='N';

         exec('tktl_pop','tech_head',,,_used);

::       Oznaczenie karty jako 'Ulepszenie'
         {? ~_used
         || _improve:=TKTL.IMPROVE;
            {? exec('is_improvement','tech_head',TKTL.ref())
            || TKTL.IMPROVE:='T'
            || TKTL.IMPROVE:='N'
            ?};
            {? _improve<>TKTL.IMPROVE || TKTL.put() ?}
         ?};
         ~~
      ?}
   ?};
   {? var_pres('ZTREE')>100 || ZTREE.reload() ?};

:: Oznaczenie zlecenia jako 'Ulepszenie'
   {? _ok & _args.EDIT>0
   || _improve:=ZL.IMPROVE;
      {? exec('is_improvement','zl_head',ZL.ref())
      || ZL.IMPROVE:='T'
      || ZL.IMPROVE:='N'
      ?};
      {? _improve<>ZL.IMPROVE || ZL.put() ?}
   ?};
   exec('zl_unlock','zl_common',,'T')
?};
ZL.cntx_pop();

VAR.GRUPA:=_var_grupa;

_ok


\tktl_szukaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Przed akcją szukaj w oknach wertowania tabeli TKTL
::----------------------------------------------------------------------------------------------------------------------
{? exec('enabled','zl_uslugi')
|| exec('mat_grp_f3','zl_uslugi',0,'W')
|| exec('slo_m_ok','material','T',0,,'W')
?};
~~


\tktlw_szukaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Przed akcją szukaj w oknach wertowania tabeli TKTLW
::----------------------------------------------------------------------------------------------------------------------
TKTLW.win_patt('SZUKAJ');
{? exec('enabled','zl_uslugi')
|| exec('mat_grp_f3','zl_uslugi',0,'W')
|| exec('slo_m_ok','material','T',0,,'W')
?};
~~


\tktl_fld_fd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Format wyświetlania pól tabeli TKTL (XJM, SERIA)
::----------------------------------------------------------------------------------------------------------------------
'out_prec='+{? (2+cur_kwin())='e_' || {? TKTL.KTM<>null() || $TKTL.KTM().DOKL || $ST.DOKL ?} || $ST.DOKL ?}


\tktl_fld_fe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Format redagowania pól tabeli TKTL (XJM, SERIA)
::----------------------------------------------------------------------------------------------------------------------
'in_prec='+{? TKTL.KTM<>null() || $TKTL.KTM().DOKL || $ST.DOKL ?}


\tpktl_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Wybór typu karty technologicznej - wykorzystywane przy parametryzacji czynności: TTE_TEC_DRTE, TTE_WTE_DRTE
::   WE: _a - TPKTL.ref() / ~~ - wartość parametru
::   WY: TPKTL.ref() / null()
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
TPKTL.win_sel('WERSLO');
TPKTL.f_set('TYP',,
   'TPKTL.REFERENCE<>:_a and TPKTL.REFERENCE<>:_b',
   exec('ref_k_res','tech_head'),
   exec('ref_t_res','tech_head')
);
{? TPKTL.f_size()=0
|| FUN.info('Brak dostępnych typów kart technologicznych.'@)
|? TPKTL.f_size()=1
|| TPKTL.f_first();
   _result:=TPKTL.ref()
|| {? var_pres('_a')=type_of(null()) || TPKTL.f_seek(_a) || TPKTL.f_first() ?};
   TPKTL.win_sel('WERSLO');
   {? TPKTL.select(,1,-1) || _result:=TPKTL.ref() ?}
?};
_result


\tpktl_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Formuła eksportująca wartość parametru TPKTL dla czynności
::   WE: _a - TPKTL.ref() - wartość parametru
::   WY: STRING - treść formuły która się wykona po stronie importu
::----------------------------------------------------------------------------------------------------------------------
_tpktl:=_a;

_fml:='';

TPKTL.cntx_psh();
TPKTL.clear();
{? TPKTL.seek(_tpktl)
||
   _fml:=exec('formulizer_common','#b_export');
   _fml+='
      TPKTL.cntx_psh();
      TPKTL.index(\'TYP\');
      TPKTL.prefix(\''+TPKTL.TYP+'\',);
      {? TPKTL.first()
      || _result.REF:=TPKTL.ref();
         _result.RESULT:=1
      || _result.RESULT:=0;
         _result.REF:=null();
         {? _komm>0
         ||
            _msg:=\'Nie znaleziono typu karty technologicznej o symbolu: %1\'@[\''+TPKTL.TYP+'\'];
            exec(\'import_komm\',\'#b_export\',_msg)
         ?}
      ?};
      TPKTL.cntx_pop();
      _result
   ';
   _fml:=exec('formulizer_clean','#b_export',_fml)
?};
TPKTL.cntx_pop();
_fml


\tktl_display_red_full
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy okno edycji wykorzystane na liście todo
::       Kontekst wywołania - rekord tabeli TKTL
::   WE: [_a] - tytuł okna
::       [_b] - nazwa przycisku 'Anuluj'
::       [_c] - obecność przycisku 'Akceptuj'
::   WY: akronim okna
::----------------------------------------------------------------------------------------------------------------------
_title:='Podgląd technologii %1'@[exec('TKTL','#to_string')];
{? var_pres('_a')=type_of('')
|| _title:=_a
?};

_anuluj_sym:='Anuluj'@;
{? var_pres('_b')=type_of('')
|| _anuluj_sym:=_b
?};

_btn_akc:=0;
{? var_pres('_c')=type_of(0)
|| _btn_akc:=_c
?};

_red:=TKTL.mk_edit(_title,,'tktl_ared',,,'html_maximized');
TKTL.win_ewin(_red,,'DISP');
_btn:=TKTL.win_ebtn(_red,'text=%1,align=begin,display=1'['Operacje'@],"exec('action_oper_button','tech_oper')");
task_attach('TTE_TEC_DRTO');
TKTL.btn_eopt(_red,_btn,{? TKTL.TYP().OPER='N' || 'state=grayed' || 'state=normal' ?});
_btn:=TKTL.win_ebtn(_red,'text=%1,align=begin,display=1'['Surowce'@],"exec('action_mater_button','tech_mater')");
task_attach('TTE_TEC_DRTS');
_btn:=TKTL.win_ebtn(_red,'text=%1,align=begin,display=1'['N-P-U'@],"exec('action_tools_button','tech_tool')");
task_attach('TTE_TEC_DRDP');
TKTL.btn_eopt(_red,_btn,{? TKTL.TYP().UTIL='N' || 'state=grayed' || 'state=normal' ?});
_btn:=TKTL.win_ebtn(_red,'text=%1,align=begin,display=1'['Parametry'@],"exec('action_params_button','tech_param')");
task_attach('TTE_TEC_DRDP');
TKTL.btn_eopt(_red,_btn,{? TKTL.TYP().PAR='N' || 'state=grayed' || 'state=normal' ?});
_btn:=TKTL.win_ebtn(_red,'text=%1,align=begin,display=1'['P&rodukty karty'@],"exec('action_products_button','tech_prod')");
task_attach('TTE_TEC_DRDP');
_btn:=TKTL.win_ebtn(_red,'text=%1,align=begin,display=1'['Atrybu&ty'@],"exec('action_attrib_button','tech_atr')");
task_attach('TTE_TEC_DRDP');
_btn:=TKTL.win_ebtn(_red,'text=%1,align=begin,display=1'['Doku&mentacja'@],"exec('action_docum_button','tech_doc')");
task_attach('TTE_TEC_DRDP');
_default:=0;
{? _btn_akc>0
|| _btn:=TKTL.win_ebtn(_red,'text=%1,align=end,display=1'['Akceptuj'@],"exec('action_button','!tte_tec_arte')");
   task_attach('TTE_TEC_ARTE');
   TKTL.btn_eopt(_red,_btn,'default=1');
   _default:=1;
   ~~
?};

_btn:=TKTL.win_ebtn(_red,'text=%1,align=end,display=1'[_anuluj_sym],"'key:Esc'");
{? _default=0
|| TKTL.btn_eopt(_red,_btn,'default=1')
?};

_red


\ae_tktl_od
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [19.42]
:: OPIS: Po redakcji pola TKTL.TERM_OD
::----------------------------------------------------------------------------------------------------------------------
{? TKTL.TERM_OD<>date(0,0,0) &  TKTL.TERM_DO<>date(0,0,0) &  TKTL.TERM_OD> TKTL.TERM_DO
|| _msg:='Data początkowa obowiązywania karty technologicznej nie może być późniejsza niż data końcowa.'@;
   {? VAR.GRUPA='T'
   || KOMM.add(exec('grp_mod_msg','tech_head')+_msg)
   || FUN.emsg(_msg)
   ?};
   0
|| 1
?}


\tktl_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [19.42]
:: OPIS: Sprawdza, czy karta jest aktualna
:: WE: _a:
::        - (brak pierwszego param. albo _a=0) praca w kontekście TKTL
::        - (_a=1) praca w kontekście ZL.KTL
::        - (_a=2) praca w kontekście ZL.TKTL
::        - (_a=3) praca w kontekśćie VAR.A_ZLEC.KTL
::        - (_a=4) praca w kontekśćie TMAT.KTL
::        - (_a=5) praca w kontekśćie TKTLW.TKTL()
::     _b: STRING REF sprawdzanej karty, działa tylko w przypadku gdy parametr _a równy 0
:: WY: 1 - aktualna, 0 - nieaktualna
::----------------------------------------------------------------------------------------------------------------------
_ktl:='';
_ref:='';
_res:=0;
{? _=0 | var_press('_a')<=0 || _a:=0 ?};
{? _a=0 || _ktl:=TKTL.ref; {? var_press('_b')=type_of('str') || _ref:=_b ?}
|? _a=1 || _ktl:=ZL.KTL
|? _a=2 || _ktl:=ZL.TKTL
|? _a=3 || _ktl:=VAR.A_ZLEC().KTL
|? _a=4 || _ktl:=TMAT.KTL
|? _a=5 || _ktl:=TKTLW.TKTL
|| return(-1)
?};
{? _ref=''
|| {? _ktl<>null()
   || TKTL.cntx_psh();
      _msk_old:=TKTL.name();
      _msk_new:=ref_name(_ktl);
      {? _msk_new<>'' & _msk_new<>_msk_old
      || TKTL.use(_msk_new)
      ?};
      TKTL.clear();
      {? TKTL.seek(_ktl)
      || {? (TKTL.TERM_OD>date() & TKTL.TERM_OD<>date(0,0,0)) |
            (TKTL.TERM_DO<date() & (TKTL.TERM_DO<>date(0,0,0)))
         || _res:=0
         || _res:=1
         ?}
      ?};
      TKTL.cntx_pop()
::      {? (_ktl.TERM_OD>date() & _ktl.TERM_OD<>date(0,0,0)) |
::         (_ktl.TERM_DO<date() & (_ktl.TERM_DO<>date(0,0,0)))
::      || _res:=0
::      || _res:=1
::      ?}
   ?}
|| TKTL.cntx_psh();
   _msk_old:=TKTL.name();
   _msk_new:=ref_name(_ref);
   {? _msk_new<>'' & _msk_new<>_msk_old
   || TKTL.use(_msk_new)
   ?};
   TKTL.clear();
   {? TKTL.seek(_ref)
   || {? (TKTL.TERM_OD>date() & TKTL.TERM_OD<>date(0,0,0)) |
         (TKTL.TERM_DO<date() & (TKTL.TERM_DO<>date(0,0,0)))
      || _res:=0
      || _res:=1
      ?}
   ?};
   TKTL.cntx_pop()
?};
_res


\set_nfilter
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [19.42]
:: OPIS: Ustawia filtr programowy dla okna tabeli TKTL (karty nieaktywne)
::       Pod uwage brany jest kontekst: VAR.FILTER oraz FILTER.*
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_exit:="
   exec('err_psql','#sql');
   exec('empty_f_set','#table',TKTL)
";

TKTLW.clear(); TKTL.clear();
TKTLW.f_clear(1); TKTL.f_clear(1);
{? VAR.FILTER='N'
||
   {? ~TKTL.f_set('NRK,WER',,
                  '"TKTL".TORW=\':_a\' and "TKTL".ARCH=\':_b\'
                   and (TKTL.TERM_OD>to_date(:_c)
                   or TKTL.TERM_DO<to_date(:_c))
                  ',
                  VAR.A_TORW, VAR.ARCH,date())
   ||
      _exit()
   ?}
||
   _where:='"TKTL".TORW=\':_a\'
            and "TKTL".ARCH=\':_b\'
            and "TKTL".TYP like \':_c%\'
            and "TKTL".STAN like \':_d%\'
            and "TKTL".DEFAULT like \':_e%\'
            and (TKTL.TERM_OD>to_date(:_c)
            or TKTL.TERM_DO<to_date(:_c))
            ';
   {? FILTER.GRUPA<>null()
   || _where+=' and "M".MGR like \':_f%\''
   ?};
   {? FILTER.WPM<>''
   || _where+=' and "M".R like \':_g%\''
   ?};
   {? FILTER.KTM<>null()
   || _where+='and "TKTL".KTM like \':_h%\''
   ?};
   _where+='and "TKTL".NRK like \':_i%\'';
   {? ~TKTL.f_set('TORW,ARCH,NRK,WER',
                  'left join "M"', _where,
                  VAR.A_TORW, VAR.ARCH, $FILTER.TPKTL,
                  FILTER.STAN_KTL, FILTER.DEFAULT, $FILTER.GRUPA,
                  FILTER.WPM, $FILTER.KTM, FILTER.NRK,date())
   ||
      _exit()
   ?}
?};
~~


\set_afilter
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Ustawia filtr programowy dla okna tabeli TKTL (karty aktynwe i nieaktywne)
::       Pod uwage brany jest kontekst: VAR.FILTER oraz FILTER.*
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_exit:="
   exec('err_psql','#sql');
   exec('empty_f_set','#table',TKTL)
";

TKTLW.clear(); TKTL.clear();
TKTLW.f_clear(1); TKTL.f_clear(1);
{? VAR.FILTER='N'
||
   {? ~TKTL.f_set('NRK,WER',,
                  '"TKTL".TORW=\':_a\' and "TKTL".ARCH=\':_b\'
                  ',
                  VAR.A_TORW, VAR.ARCH)
   ||
      _exit()
   ?}
||
   _where:='"TKTL".TORW=\':_a\'
            and "TKTL".ARCH=\':_b\'
            and "TKTL".TYP like \':_c%\'
            and "TKTL".STAN like \':_d%\'
            and "TKTL".DEFAULT like \':_e%\'
            ';
   {? FILTER.GRUPA<>null()
   || _where+=' and "M".MGR like \':_f%\''
   ?};
   {? FILTER.WPM<>''
   || _where+=' and "M".R like \':_g%\''
   ?};
   {? FILTER.KTM<>null()
   || _where+='and "TKTL".KTM like \':_h%\''
   ?};
   _where+='and "TKTL".NRK like \':_i%\'';
   {? ~TKTL.f_set('TORW,ARCH,NRK,WER',
                  'left join "M"', _where,
                  VAR.A_TORW, VAR.ARCH, $FILTER.TPKTL,
                  FILTER.STAN_KTL, FILTER.DEFAULT, $FILTER.GRUPA,
                  FILTER.WPM, $FILTER.KTM, FILTER.NRK)
   ||
      _exit()
   ?}
?};
~~


\leg_tktl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [19.42]
:: OPIS: Przed akcją Legenda dla okna WER tabeli TKTL
::----------------------------------------------------------------------------------------------------------------------
_id:=cur_win_id();
{? _id='TKTLN' | _id='T___'
|| exec('legenda','color','TKTL#01#01','TKTL#01#02')
|| exec('legenda','color','TKTL#01#02','TKTL#01#03')
?};
~~


\is_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: czy dla danej karty technologicznej(_a) są formuły przypisane do surowców lub zamienników
::   WE: _a - TKTL.ref()
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_tktl:=_a;
:: Sprawdzam surowce
TMAT.cntx_psh();
TMAT.index('NL');
TMAT.prefix(_tktl);
{? TMAT.first()
|| {!
   |?
      _result:=TMAT.FORMB<>'' | TMAT.FORMN<>'' | TMAT.DFORMB<>'' | TMAT.DFORMN<>'';
      TMAT.next() & _result=0
   !}
?};
TMAT.cntx_pop();
:: Sprawdzam zamienniki
{? _result=0
|| TCHMAT.cntx_psh();
   TCHMAT.index('NSL');
   TCHMAT.prefix(_tktl);
   {? TCHMAT.first()
   || {!
      |?
         _result:=TCHMAT.FORMB<>'' | TCHMAT.FORMN<>'' | TCHMAT.DFORMB<>'' | TCHMAT.DFORMN<>'';
         TCHMAT.next() & _result=0
      !}
   ?};
   TCHMAT.cntx_pop()
?};
_result


\is_improvement
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.14]
:: OPIS: Sprawdza, czy karta jest rodzaju 'Ulepszenie', czyli zawiera w surowcach jeden ze swoich produktów
::   WE: _a - TKTL.ref()
::   WY: 0 / 1
::----------------------------------------------------------------------------------------------------------------------
_tktl:=_a;

_result:=0;
_can_continue:=1;

:: Zakładamy, że wywołanie dotyczy bieżącej maski tabel "technologicznych"
TKTL.cntx_psh(); TKTLW.cntx_psh();

_chk:="
   _result:=(exec('FindAndGet','#table',TKTL,_a,,\"TKTL.KTM\",null())=_b);
   {? _result=0
   || TKTLW.index('REF');
      TKTLW.prefix(_a,_b);
      _result:=TKTLW.first()
   ?};
   _result
";

TKTL.prefix();
{? TKTL.seek(_tktl) & TKTL.TORW<>'W'
|| {? _can_continue>0
   || TMAT.cntx_psh();
      TMAT.index('NL');
      TMAT.prefix(_tktl);
      {? TMAT.first()
      || {!
         |? {? _chk(_tktl,{? TMAT.GRKTM='G' || TMAT.TGDFLT().PT || TMAT.PT ?})
            || _result:=1;
               _can_continue:=0
            ?};
            _can_continue>0 & TMAT.next()
         !}
      ?};
      TMAT.cntx_pop()
   ?};

   {? _can_continue>0
   || TCHMAT.cntx_psh();
      TCHMAT.index('NSL');
      TCHMAT.prefix(_tktl);
      {? TCHMAT.first()
      || {!
         |? {? _chk(_tktl,{? TCHMAT.GRKTM='G' || TCHMAT.TGDFLT().PT || TCHMAT.PT ?})
            || _result:=1;
               _can_continue:=0
            ?};
            _can_continue>0 & TCHMAT.next()
         !}
      ?};
      TCHMAT.cntx_pop()
   ?}
?};
TKTL.cntx_pop(); TKTLW.cntx_pop();

_result


\tktl_nrk_gen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Przycisk Generuj w oknie readakcyjnym technologii - generuje nr karty na podstawie wtyczki TKTL_NRK_001
::   WY: Wygenerowany numer karty lub wzorca technologii
::----------------------------------------------------------------------------------------------------------------------
_res:=TKTL.NRK;
_nrk:=Plugin.run('TKTL_NRK_001');
{? type_of(_nrk)=type_of('') & _nrk<>'' || _res:=_nrk ?};
_res


\tktl_has_wariant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Sprawdza, czy dana technologia posiada wariantowe operacje (dedykowane dla pierwszego lub ostatniego przew.)
::   WE: _a - TKTL.ref
::       [_b] - STRING - jakie operacje sprawdzać: 'FIRST' - tylko operacje wariantowe pierwszego przewodnika,
::          'LAST' - tylko operacje wariantowe ostatniego przewodnika, '' - wartość domyślna, dowolne operacje wariant.
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_ref:={? var_press('_a')=type_of(null()) || _a || null() ?};
_what:={? var_press('_b')=type_of('') || _b || '' ?};
_res:=0;
{? _ref<>null()
|| _msk:=ref_name(_ref)+3;
   TKTL.cntx_psh();
   TKTL.use('txktl'+_msk);
   TKTL.clear();
   {? TKTL.seek(_ref)
   || TOPER.cntx_psh();
      TOPER.use('txope'+_msk);
      TOPER.index('WHERE');
      {? _what<>'LAST'
      || TOPER.prefix(TKTL.ref(),'P');
         {? TOPER.first()
         || _res:=1
         ?}
      ?};
      {? _res=0 & _what<>'FIRST'
      || TOPER.prefix(TKTL.ref(),'O');
         {? TOPER.first()
         || _res:=1
         ?}
      ?};
      TOPER.cntx_pop()
   ?};
   TKTL.cntx_pop()
?};
_res


\tpktl_default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Zwraca domyślny tyu karty technologicznej
::   WY: TPKTL.ref() lub null()
::----------------------------------------------------------------------------------------------------------------------
_result:=null();

TPKTL.cntx_psh();
TPKTL.clear();
TPKTL.f_set('TYP',,
   'TPKTL.REFERENCE<>:_a and TPKTL.REFERENCE<>:_b',
   exec('ref_k_res','tech_head'),
   exec('ref_t_res','tech_head')
);
{? TPKTL.f_first()
|| {? TPKTL.f_size()=1
   ||
::    Jak tylko jeden typ to go zwracam
      _result:=TPKTL.ref()
::    Jak więcej typów to sprawdzenie czy jest ustalony w parametryzacji typ domyślny
   || _par:=exec('get','#params',500407,type_of(''));
      {? _par<>''
      || {? TPKTL.f_find(_par,)
         || _result:=TPKTL.ref()
         ?}
      ?}
   ?}
?};
TPKTL.cntx_pop();

_result


\grp_mod_msg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Zwraca informacje o technologii, którego będzie dotyczył komunikat błędu.
::       Działa na aktualnym buforze tabeli TKTL
::   WY: STRING z informacją o technologii
::----------------------------------------------------------------------------------------------------------------------
_grp_msg:='';
_nrk:=TKTL.NRK+' (wer.'+TKTL.WER+')';
_grp_msg:='Technologia %1'@[_nrk]+' - ';
_grp_msg


\tktl_modify_frombfr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Modyfikuje aktualny bufor tabeli TKTL na podstawie innego bufora (podczas grupowej modyfikacji danych)
::   WE: _a - bufor tabeli TKTL
::   WY: 0 - wystąpił błędy, rekord nie zostanie zmodfikowany / 1 - ok
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
_buffer_grp:={? var_pres('_a')>100 || _a || return(0) ?};

_chk_term:=0;
:: Terminy ważności
{? _buffer_grp.TERM_OD<>date(0,0,0) & TKTL.TERM_OD<>_buffer_grp.TERM_OD
|| _chk_term:=1;
   TKTL.TERM_OD:=_buffer_grp.TERM_OD
?};
{? _buffer_grp.TERM_DO<>date(0,0,0) & TKTL.TERM_DO<>_buffer_grp.TERM_DO
|| _chk_term:=1;
   TKTL.TERM_DO:=_buffer_grp.TERM_DO
?};
{? _chk_term>0
|| _ok:=exec('ae_tktl_od','tech_head')
?};

{? _ok>0
||
:: Grupa technologii
   {? _buffer_grp.GKTL<>null() & TKTL.GKTL<>_buffer_grp.GKTL
   || TKTL.GKTL:=_buffer_grp.GKTL
   ?}
?};

_ok

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:35 b18ad9ebe7680b45bf8db16497ad7e575c0477c8b0901e5c0b93299dd8594e49eb431f5318ae9887a670c46667c0a50e20bc5f6267b3a7812c9b8889e7450e4e7e0aa9e50db33c885d5621c0198058cecfb30b585acffb60bb78e66faf7ee20d3d8d905e3d1e2d76ce2b93ee034f24c666c1942b4d22c4b6139a84a46e1bd420
