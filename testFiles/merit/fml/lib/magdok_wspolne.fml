:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: magdok_wspolne.fml
:: Utworzony: 24.06.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Obsługa dokumentów magazynowych - formuły wspólne
::======================================================================================================================


\spr_datn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: sprawdzenie daty dokumentu + inwentury
::       formula przed redakcją pola ND.D
::   WE: [_a] - ref magazynu domyślnie ND.MAG
::       [_b] - data dokumentu domyślnie ND.D
::       [_c] - typ dokumentu domyślnie ND.TYP
::       [_d] - czy komunikaty, domyślnie 1 - tak, 0 - nie, 2 - tabela komunikatów (import EDI)
::       [_e] - czy sprawdzać monthok czy yearok
::       [_f] - sprawdzenie dat zlecen 1-tak (domyślnie), 0-nie
::       [_g] - komunikat do zastąpienia - domyślnie ''
::       [_h] - wywołanie z poziomu operacji na czytniku (domyslnie) null lub EANN.ref()
::       [_i] - godzina dokumentu domyślnie time(0,0,0)
::   WY: 1-jest OK 0-nie
::  OLD: \spr_datn/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_noCom:=_=0;
_poFLD:=_=0;

:: bez parametrów wyłączona walidacja daty ze względu na dodanie godziny
{? _poFLD || return(1) ?};

{? _>=1  || {? type_of(_a)<>7 || _a:=ND.MAG ?}  || _a:=ND.MAG  ?};
{? _>=2  || {? type_of(_b)<>4 || _b:=fld() ?}  || _b:=fld()  ?};
{? _>=3  || {? type_of(_c)<>7 || _c:=ND.TYP ?}  || _c:=ND.TYP  ?};
{? _>=4  || {? type_of(_d)<>1 || _d:=1 ?}  || _d:=1  ?};
{? _>=5  || {? type_of(_e)<>1 || _e:=1 ?}  || _e:=1  ?};
{? _>=6  || {? type_of(_f)<>1 || _f:=1 ?}  || _f:=1  ?};
{? _>=7  || {? type_of(_g)<>2 || _g:='' ?}  || _g:=''  ?};
{? _>=8  || {? type_of(_h)<>7 || _h:=null() ?}  || _h:=null() ?};
_time:={? var_pres('_i')=type_of(time()) || _i || ND.T ?};

{? _d=2
|| _edi:=1
|| _edi:=0
?};

:: przypisanie do zmiennej typu dokumentu do sprawdzenia
_d_help:=D_HELP.TYP;
D_HELP.TYP:=_c;

MG.cntx_psh();
_mg:=BEER.MG;
{?
   {? _e=1 || exec('monthok','parses',_b) || exec('yearok','parses',_b) ?}
      & exec('sprd_inw','magdok_wspolne',_b,_a,D_HELP.TYP().P='T',_g,_h,_time)
      & exec('spr_drea','magdok_wspolne')
||
:: sprawdza przecene
   {? (_opc:=exec('sprprzec','magazyn_przec',_a,_b,,_time))>0
   || BEER.MG:=_a;
      {? _d
      || {? _opc=1
         || {? exec('sprmdatn','magdok_wspolne',ND.ref())
            || {? ~_noCom
               || _msg:='W magazynie %1 wprowadzono przecenę z datą równą lub późniejszą od daty dokumentu.'
                   '\nMożliwe wprowadzenie nowych dokumentów na indeksy materiałowe nie ujęte w arkuszu lub'
                   '\nnależy podać większą datę tworzonego dokumentu.'@[BEER.MG().SYM];
                  {? _edi
                  || _msg:=gsub(_msg,'\n',' ');
                     exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
                  || FUN.info(_msg)
                  ?}
               ?};
               _wyn:=1
            || _msg:='W magazynie %1 wprowadzono przecenę z datą równą lub późniejszą od daty dokumentu.'
                '\nPonieważ na dokumencie znajdują się indeksy materiałowe ujęte w przecenie'
                '\nzmiana daty dokumentu na podaną jest niemożliwa.'@[BEER.MG().SYM];
               {? _edi
               || _msg:=gsub(_msg,'\n',' ');
                  exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
               || FUN.info(_msg)
               ?}
            ?}
         || {? exec('sprmdatn','magdok_wspolne',ND.ref())
            || {? ~_noCom
               || _msg:='W magazynie %1 istnieje otwarty arkusz przecen.'
                   '\nMożliwe wprowadzenie nowych dokumentów na indeksy materiałowe nie ujęte w arkuszu.'@[BEER.MG().SYM];
                  {? _edi
                  || _msg:=gsub(_msg,'\n',' ');
                     exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
                  || FUN.info(_msg)
                  ?}
               ?};
               _wyn:=1
            || _msg:='W magazynie %1 wprowadzono przecenę z datą równą lub późniejszą od daty dokumentu.'
                '\nPonieważ na dokumencie znajdują się indeksy materiałowe ujęte w przecenie'
                '\nzmiana daty dokumentu na podaną jest niemożliwa.'@[BEER.MG().SYM];
               {? _edi
               || _msg:=gsub(_msg,'\n',' ');
                  exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
               || FUN.info(_msg)
               ?}
            ?}
         ?}
      ?}
   |? ~exec('sprmdatn','magdok_wspolne',ND.ref(),ND.D,ND.T)
   || _msg:='W magazynie %1 wprowadzono przecenę z datą równą lub późniejszą od daty dokumentu.'
       '\nPonieważ na dokumencie znajdują się indeksy materiałowe ujęte w przecenie'
       '\nzmiana daty dokumentu na podaną jest niemożliwa.'@[BEER.MG().SYM];
      {? _edi
      || _msg:=gsub(_msg,'\n',' ');
         exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
      || FUN.info(_msg)
      ?}
   || _wyn:=1
   ?}
?};
BEER.MG:=_mg;
MG.cntx_pop();

:: kontrola dat zlecen
{? _f=1 & _wyn=1
|| {? ND.ZL<>null & ND.ZL().OD>ND.D
   || _msg:='Zlecenie powołane jest z datą późniejszą niż data dokumentu.'@;
      {? _edi
      || exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:=0
   || DK.cntx_psh();
      DK.index('DOKMAG'); DK.prefix(ND.ref());
      {? DK.first()
      ||
         {!
         |?
            {? DK.ZL<>null & DK.ZL().OD>ND.D
            || _msg:='Zlecenie powołane jest z datą późniejszą niż data dokumentu.'
                  '\nDotyczy pozycji nr %1.'@[$DK.P];
               {? _edi
               || _msg:=gsub(_msg,'\n',' ');
                  exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
               || FUN.info(_msg)
               ?};
               _wyn:=0
            ?};
            _wyn=1 & DK.next()
         !}
      ?};
      DK.cntx_pop()
   ?}
?};

{? _wyn & ND.KH<>null()
|| {!
   |? _wyn0:=exec('f_kh_gv_sprawdz','faktury_nag1','ND',_edi,~_edi);
      _wyn:=_wyn0.WYNIK;
      _msg:=_wyn0.MSG;
      &_wyn0;
      _wyn<>0 & _wyn<>1
   !};
   {? ~_wyn & _edi & _msg<>''
   || exec('add_kom','#message',gsub(_msg,'\n',' '),4,{? ND.ID='' || ND.SYM || ND.ID ?})
   ?}
?};

D_HELP.TYP:=_d_help;
{? _poFLD || 1 || _wyn ?}


\sprd_inw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS:  sprawdza podana date wg daty ostatniej inwentury
::   WE: _a - data do sprawdzenia
::       [_b] - magazyn .. domyslenie ST.MAG
::       [_c] - rodzaj operacji 1-przychod 0-rozchod (domyslnie)
::       [_d] - komunikat do zastapienia - domyslnie ''
::       [_e] - wywołanie z poziomu operacji na czytniku (domyslnie) null lub EANN.ref()
::       [_f] - godzina dokumentu
::  OLD: \sprd_inw/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>7 || _b:=ST.MAG ?} || _b:=ST.MAG ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};
{? _>=4 || {? type_of(_d)<>2 || _d:='' ?} || _d:='' ?};
{? _>=5 || {? type_of(_e)<>7 || _e:=null() ?} || _e:=null() ?};
_time:={? var_pres('_f')=type_of(time()) || _f || time(0,0,0) ?};

_wyn:=0;
_otw:=0;
:: symbol magazynu do komunikatu
_buf:=BEER.MG;
BEER.MG:=_b;
_sym_mg:=BEER.MG().SYM;
BEER.MG:=_buf;

_din:=date(0,0,0);
_tin:=time(0,0,0);
_msk:=INN.name();
OKR.cntx_psh();
INN.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.last()
|| {!
   |? INN.use((_msk-2)+form(OKR.ROK-2000,-2,0,'99'));
      INN.index('TYP');
      INN.prefix(_b,'A');
      {? INN.last()
      || _otw:=INN.D=date(0,0,0);
         {? _otw
         || {? _din=date(0,0,0) || _din:=INN.DI; _tin:=INN.TI ?}
         || {? _din=date(0,0,0) || _din:=INN.D; _tin:=INN.T ?}
         ?}
      ?};
      ~_otw & OKR.prev()
   !}
?};
INN.use(_msk);
OKR.cntx_pop();
INN.cntx_pop();
{? _a>_din | (_a=_din & _tin<>time(0,0,0) & _time>_tin)
|| _wyn:=exec('open_inw','magdok_wspolne',_b,null,_c)
|| {? var_pres('__kom')>100 & var_pres('__lp')>0
   || exec('add_kom','#message','Wprowadzono arkusz inwentaryzacji pełnej'
         ' dla magazynu %1, z datą: %2, godziną: %3'@[_sym_mg,form(_din),form(_tin)],4,,__lp+=1)
   || FUN.info('Wprowadzono arkusz inwentaryzacji pełnej\n'
         'dla magazynu %1, z datą: %2, godziną: %3.\n\n'@[_sym_mg,form(_din),form(_tin)]
         +{? _d='' || 'Data i godzina dokumentu musi być większa od daty i godziny inwentaryzacji.'@ || _d ?})
   ?};
   _wyn:=0
?};
{? _wyn & _e=null()
|| _wyn:=exec('sprpozdk','magdok_wspolne',_a,_time)
|? _wyn
|| _wyn:=exec('sprpozean','magdok_wspolne',_a,_e,_time)
?};
_wyn


\spr_drea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: kontrola daty realizacji
::  OLD: \spr_drea/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? ND.TYP().P='T' & var_pres('__zdrea')=1 & __zdrea=1
||
   _txt:='';
   {? ND.D<ZD_RN.ZD_NAG().DATA
   || _txt:='Data dokumentu nie może być wcześniejsza niż data wystawienia zamówienia: %1.'@[$ZD_RN.ZD_NAG().DATA]
   ?};
   {? _txt<>''
   ||
      FUN.info(_txt);
      _wyn:=0
   ?}
?};
_wyn


\sprmdatn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdzenie zgodnosci pozycyji dokumentu z przecenami
::   WE: _a - ref ND
::       [_b] - data
::       [_c] - godzina
::   WY: 1-nie ma przecen na indeksy z dokumentu 0-sa
::  OLD: \sprmdatn/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;

ND.cntx_psh();
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first()
|| _data:={? var_pres('_b')=type_of(date()) || _b || DK.N().D ?};
   _time:={? var_pres('_c')=type_of(time()) || _c || DK.N().T ?};
   {!
   |? _wyn:=exec('sprprzec','magazyn_przec',DK.N().MAG,_data,DK.M,_time)<3;
      {? _wyn & DK.N().MD<>null || _wyn:=exec('sprprzec','magazyn_przec',DK.N().MD,_data,DK.M,_time)<3 ?};
      _wyn & DK.next()
   !}
?};
ND.cntx_pop();
DK.cntx_pop();
_wyn


\open_inw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy na danym magazynie nie ma otwartej inwentaryzacji
::   WE: _a - magazyn ref
::       _b - indeks materiałowy ref (jeśli sprawdzamy na nagłówku to przyjmuje wartość null)
::       _c - typ operacji 1-przychod 0-rozchod
::   WY: 0-jest otwarta inwentaryzacja pełna 2-jest otwarta inwentaryzacja ciągła 1-jest OK
::  OLD: \open_inw/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_msk:=INN.name();
OKR.cntx_psh();
INN.cntx_psh();
INP.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.last()
|| {!
   |? INN.use((_msk-2)+form(OKR.ROK-2000,-2,0,'99'));
      INP.use('inw_p'+(INN.name+3));
      INN.index('INDP');
      INN.prefix(_a,date(0,0,0));
      {? INN.last
      || {? INN.TYP='A'
         ||
            {? _b=null & ~_c
            ||
::             naglowek dokumentu rozchodowego
               {? var_pres('__kom')>100 & var_pres('__lp')>0
               || {? __kom.find_msg('Dla magazynu %1 wprowadzono arkusz inwentaryzacji pełnej.'@[INN.MG().SYM]) = 0
                  || exec('add_kom','#message','Dla magazynu %1 wprowadzono arkusz inwentaryzacji pełnej.'@[INN.MG().SYM]
                      ,4,'Kontrola inwentaryzacji',__lp+=1);
                     exec('add_kom','#message','Dla dokumentu rozchodowego możliwe wprowadzanie jedynie pozycji '@
                      ,4,'Kontrola inwentaryzacji',__lp+=1);
                     exec('add_kom','#message','o indeksach nie ujętych na arkuszu inwentaryzacyjnym.'@
                      ,4,'Kontrola inwentaryzacji',__lp+=1)
                  ?}
               || FUN.info('Dla magazynu %1 wprowadzono arkusz inwentaryzacji pełnej.\n\n'
                   'Dla dokumentu rozchodowego możliwe wprowadzanie jedynie pozycji\n'
                   'o indeksach nie ujętych na arkuszu inwentaryzacyjnym.'@[INN.MG().SYM])
               ?};
               _wyn:=2
            |? _b=null & _c
            ||
::             naglowek dokumentu przychodowego = OK
               _wyn:=1
            ||
::             sprawdzenie po indeksie
               {? exec('FindInSet','#table','INP','KOD',_b,INN.ref)<>null
               || FUN.info('Dla magazynu %1 wprowadzono arkusz inwentaryzacji pełnej.\n'
                   'Na danym arkuszu istnieje już pozycja o podanym indeksie materiałowym.\n\n'
                   'Niemożliwe dołączenie pozycji o podanym indeksie.'@[INN.MG().SYM]);
                  _wyn:=0
               || _wyn:=1
               ?}
            ?}
         ||
::          inwenatryzacja ciagla -jedynie komunikat
            {? _b=null
            || _wyn:=2
            || _wyn:=1
            ?}
         ?}
      || _wyn:=1
      ?};
      _wyn=1 & OKR.prev
   !}
?};
INN.use(_msk);
INP.use('inw_p'+(INN.name+3));
OKR.cntx_pop();
INN.cntx_pop();
INP.cntx_pop();
_wyn


\sprpozdk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza pozycje dokumentu pod kątem dat na inwenturze
::   WE: _a - data do sprawdzenia
::       [_b] - godzina do sprawdzenia
::   WY: 1-jest OK 0-nie jest dobrze
::  OLD: \sprpozdk/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
_time:={? var_pres('_b')=type_of(time()) || _b || time(0,0,0) ?};

_wyn:=1;
_txt:='';
_smg:='';

ND.cntx_psh();
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(ND.ref());
{? DK.first()
|| {!
   |? _txt:='Pozycja %1.\nIndeks: %2.\n'@[form(DK.P,,0,'99'),DK.M().KTM];
      _wyn:=exec('sprd_inp','magazyn_inw',DK.M,_a,,0,_time);
      {? ~_wyn || _smg:=ND.MAG().SYM ?};
      {? _wyn & ND.MD<>null
      || _wyn:=exec('sprd_inp','magazyn_inw',DK.M,_a,ND.MD,0,_time);
         {? ~_wyn || _smg:=ND.MD().SYM ?}
      ?};
      _wyn & DK.next()
   !}
?};
ND.cntx_pop();
DK.cntx_pop();
{? ~_wyn & _txt<>'' & _smg<>''
|| FUN.info('Wprowadzono arkusz inwentaryzacji ciągłej dla magazynu %1,\n'
           'na którym wprowadzono indeks materiałowy.\n'@[_smg]
           +_txt
           +'Należy zmienić datę lub godzinę.'@)
?};
_wyn


\sprpozean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza pozycje operacji pod katem dat na inwenturze
::   WE: _a - data do sprawdzenia
::       _b - ref EANN
::       [_c] - godzina do sprawdzenia
::   WY: 1-jest OK 0-nie jest dobrze
::  OLD: \sprpozean/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
_time:={? var_pres('_c')=type_of(time()) || _c || time(0,0,0) ?};

_wyn:=1;
_txt:='';
_smg:='';

EANN.cntx_psh();
EANP.cntx_psh();
EANP.index('EANN');
EANP.prefix(_b);
{? EANP.first()
|| {!
   |? _txt:='Pozycja '+form(EANP.LP,,0,'99')+'.\nIndeks: '+EANP.M().KTM+'.\n';
      _wyn:=exec('sprd_inp','magazyn_inw',EANP.M,_a,EANP.LOKZ().MG,0,_time);
      {? ~_wyn || _smg:=EANP.LOKZ().MG().SYM ?};
      _wyn & EANP.next()
   !}
?};
EANN.cntx_pop();
EANP.cntx_pop();
{? ~_wyn & _txt<>'' & _smg<>''
|| FUN.info('Wprowadzono arkusz inwentaryzacji ciągłej dla magazynu %1,\n'
           'na którym wprowadzono indeks materiałowy.\n'@[_smg]
           +_txt
           +'Należy zmienić datę lub godzinę.'@)
?};
_wyn


\prdkllok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: Przed redakcja pola DK_L.LOK
::   WY: 1/0 - gdy spis lokalizacji
::  OLD: \prdkllok/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
~(DK_L.DK_LN<>null & DK_LN.RODZ='I')


\podkllok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: po redakcji pola DK_L.LOK
::   WY: 1-jest OK 0-powielony rekord
::  OLD: \podkllok/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? DK_L.DK<>null
|| DK_L.JM:=DK.M().J;
   _lok:=DK_L.LOK;
   _tw:=DK_L.TW;
   _dk:=DK_L.DK;
   _ref:={? (1+menu_txt())='P' || DK_L.ref() || null ?};
   _kod:={? DK_L.LOK<>null || DK_L.LOK().KOD || '<nie podano>' ?};
   _pal:=DK_L.PAL;
   _pak:={? DK_L.PAL<>null || DK_L.PAL().KODK || '<nie podano>' ?};
   DK_L.cntx_psh();
   DK_L.index('DK');
   DK_L.prefix(_dk,null,_lok,_pal,_tw);
   _wyn:=~(DK_L.first() & DK_L.ref()<>_ref);
   DK_L.cntx_pop();
   {? DK_L.DK().PLUS='T' & DK_L.DK().M().CZY_TW='T' & DK_L.TW=date(0,0,0)
   || FUN.info('Dla indeksu materiałowego %1\nwymagane jest podanie terminu ważności.'@[DK.M().KTM]);
      _wyn:=0
   |? ~_wyn
   || FUN.info('Przypisano wymiary\n(lokalizację: %1, termin ważności: %2, paletę: %3)\n'
       ' do bieżącej pozycji dokumentu.\n\n'
       'Należy podać inne dane.'@[_kod,form(_tw),_pak])
   ?}
|? DK_L.DK=null & exec('FindInSet','#table','DK_LI','DK_LN',DK_L.DK_LN)
|| {? exec('FindInSet','#table','DK_LI','DK_LNLOK',DK_L.LOK,DK_L.DK_LN)=null
   || FUN.info('Reorganizacja wg lokalizacji. Możliwe wprowadzenie jedynie\n'
       'lokalizacji zgodnej z przypisanymi do reorganizacji.'@);
      _wyn:=0
   ?}
?};
_wyn


\bl_dklil
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: podpowiada ilosc na DK_L-u
::  OLD: \bl_dklil/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? (1+menu_txt())='D'
|| EANX.ILP
|| 0
?}


\pw_mdkl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietleniem pola material
::  OLD: \pw_mdkl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? ST.MAG().PAL='T' & DK_L.Z='N' & DK_L.ZPALET<2 & DK_L.DK_LN().RODZ<>'B'
 & {? DK_L.DK_LN<>null || DK_LN.RODZ<>'D' & ~(DK_LN.RODZ='I' & exec('czy_zinw','magdok_wspolne',$DK_LN.ref())) || 0 ?}
|| exec('findfnv','#color')
|| ''
?}


\czy_zinw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: sprawdza
::   WE: _a - ref DK_LN-a
::   WY: 1-z inwentury 0-z reki
::  OLD: \czy_zinw/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
exec('FindInSet','#table','INN','DK_LN',_a,_a)<>null


\be_dklil
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009+]
:: OPIS: przed redakcja pola ilosc na DK_L
::  OLD: \be_dklil/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK_L.DK_LN<>null & DK_L.DK_LN().RODZ='B'
|| 1
|? ST.MAG().PAL='T'
|| 0
|| 1
?}


\ae_dklil
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009+]
:: OPIS: kontrola dokladnosci
::  OLD: \ae_dklil/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_mat:={? DK_L.DK<>null || DK.M || DK_L.M ?};
{? _mat<>null
|| _dokl_m:=exec('jaka_dok_m','jm',_mat);
   DK_L.IL:=DK_L.IL$_dokl_m;
   BEER.DKLJM:=exec('FindAndGet','#table',M,_mat,,"J",null());
   _j2:=exec('FindAndGet','#table',M,_mat,,"J2",null());
   {? _j2<>null()
   || DK_L.J2:=_j2;
      DK_L.WS2:=exec('oblWSP','jm',_mat)
   || DK_L.WS2:=0;
      DK_L.IL2:=0;
      DK_L.J2:=null()
   ?};
   exec('reoIL2','magdok_wymiary');
   exec('set_efld_m','magdok_wymiary');
   _mark:='mark='+{? (';DAPZ'*exec('FindAndGet','#table',M,_mat,,"IDMOB",''))>1 || '1' || '0' ?};
   {? DK_L.DK<>null()
   || DK.efld_opt(DK.win_edit('?'),_mark,,'SCEAN');
      DK.efld_opt(DK.win_edit('?'),'enable='+(_mark+1),,'SCEAN')
   || DK_L.efld_opt(DK_L.win_edit('?'),_mark,,'SCEAN');
      DK_L.efld_opt(DK_L.win_edit('?'),'enable='+(_mark+1),,'SCEAN');
      exec('set_efld_opt','magdok_wymiary')
   ?}
?};
win_disp();
1


\pr_mdkl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola material
::  OLD: \pr_mdkl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_twwgwym:=DK_L.M().SETW<>'P' | (DK_L.M().SETW='P' & exec('ctrlSETW','magdok_wspolne',DK_L.M,DK_L.SCSQL));
(ST.MAG().PAL<>'T' | (DK_L.DK_LN<>null & DK_L.DK_LN().RODZ='B')) & (cur_afld()<>'TWDO' | _twwgwym)


\prdkltw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: Przed redakcja pola DK_L.TW
::   WY: 1/0 - gdy spis lokalizacji
::  OLD: \prdkltw/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK_L.DK_LN=null() & DK_L.DK().M().SETW='P'
|| 0
|? DK_L.DK_LN<>null & DK_L.DK_LN().RODZ='B'
|| 1
|? DK_L.MG().PAL='T'
|| 0
|? DK_L.DK_LN<>null & DK_L.M().SETW='P'
|| _olddst:=exec('ctrlSETW','magdok_wspolne',DK_L.M,DK_L.SCSQL);
   {? ~_olddst & DK_L.SCSQL<>'' & DK_L.TW=exec('FindAndGet','#table',DK,DK_L.SCSQL,,"TW",date(0,0,0))
   || 0
   || exec('f3dkltw','magdok_wspolne',1);
      1
   ?}
|| ~(DK_L.DK_LN<>null & DK_LN.RODZ='I')
?}


\po_lokdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: dla magazynu typu MWS sprawdza jej zajetosc i ewentualnie uprzejmie informuje
::  OLD: \po_lokdo/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK_L.LOKDO<>null & DK_LN.MG().MWS='T' & (DK_L.LOKDO().ILPAL>0 | DK_L.LOKDO().OBJ>0)
|| _dan:=exec('procent','magazyn_stan');
   _pal:=DK_L.LOKDO().MG().PAL='T';
   _ileone:={? _pal || 1 || (DK_L.M().OBJ/{? DK_L.M().ILOBJ<>0 || DK_L.M().ILOBJ || 1 ?}) $3 ?};
   _ilem3:={? _pal || 1 || _ileone*DK_L.IL $3 ?};
   _procent:=_dan[1];
   _wolne:=_dan[3]-_dan[2];
   _zajete:=_dan[2]+_ilem3;
   _calosc:=_dan[3];
   _dokl_m:=exec('jaka_dok_m','jm',DK_L.M);
   _wolil:={? _pal || _wolne || (_wolne/{? _ileone<>0 || _ileone || 1 ?}) $_dokl_m ?};
   obj_del(_dan);
   {? _procent=100
   || FUN.info('Brak miejsca na podanej lokalizacji.'@)
   |? _zajete>_calosc
   || FUN.info(
         'Podano zbyt dużą ilość.'@+'\n'+
         {? _pal
         || 'Dostępne miejsce dla: %1 palet.'@[form(_wolne,,3,'99')]
         || 'Dostępne miejsce dla: %1 m³.'@[form(_wolne,,3,'99')]
         ?}+'\n'+
         {? ~_pal
         || 'Dostępne miejsce dla: %1 %2.'@[form(_wolil,,_dokl_m,'99'),DK_L.M().J().KOD]+'\n'
         ?}+'\n'+
         {? _pal
         || 'Z podaną ilością zajęte będzie: %1 palet.'@[form(_ilem3,,3,'99')]
         || 'Z podaną ilością zajęte będzie: %1 m³'@[form(_ilem3,,3,'99')]
         ?}+'\n'+
         'Brak miejsca na podanej lokalizacji.'@
      )
   ?}
?};
1


\pwpaldkl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietleniem pola DK_L.PAL, DK_L.PALDO
::  OLD: \pwpaldkl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? ST.MAG().PAL='T' | ((2+BEER.MENU_PTH)='MR' & ND.MAG().PAL='N' & ND.MD().PAL='T')
|| 1
|| exec('findfnv','#color')
?}


\prpaldkl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola DK_L.PAL, DK_L.PALDO
::   WE: [_a] - 1-tryb pól KODPAL 0(domyślnie)-nie
::   WY: 1-do edycji 0-nie
::  OLD: \prpaldkl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_allact:=exec('allActions','#string','wsSDpPUOACH%1'[{? ~_tryb || 'B' || '' ?}]);
_cur_afld:=cur_afld()='PALDO' | cur_afld()='KODPALD';
{? _cur_afld & ST.MAG().PAL='T'
|| {? DK_L.DK_LN<>null & DK_L.DK_LN().RODZ='I' & DK_L.ZPALET<2
   || PAL.f_clear();
      PAL.index('PAL');
      PAL.prefix();
      PAL.f_set('KODK',,'\"PAL\".STAN<>\'N\' and \"PAL\".AKT=\'T\' and \"PAL\".ODD=\':_a\'',ST.ODDZ);
      PAL.actions('SEL',_allact);
      EANX.WHERE:='P';
      PAL.win_sel('SEL');
      PAL.win_dict('SEL');
      1
   || 0
   ?}
|? (2+BEER.MENU_PTH)='MR' & ND.MD<>null & ND.MD().PAL='T' & ND.MAG().PAL='N'
|| PAL.f_clear();
   PAL.index('PAL');
   PAL.prefix();
   PAL.f_set('KODK',,'\"PAL\".STAN=\'N\' and \"PAL\".AKT=\'T\' and \"PAL\".ODD=\':_b\' '+
        ' and (\"PAL\".RSQL=\'\' or \"PAL\".RSQL=\':_a\') ',$ND.ref(),ND.MD().ODDZ);
   PAL.actions('SEL',_allact);
   EANX.WHERE:='P';
   PAL.win_sel('SEL');
   PAL.win_dict('SEL');
   1
|? (2+BEER.MENU_PTH)<>'MR' & ST.MAG().PAL='T' & DK_L.LOK<>null &  DK_L.ZPALET<>2
|| PAL.f_clear();
   PAL.index('PAL');
   PAL.prefix();
   {? DK_LN.RODZ<>'B'
   || PAL.f_set('KODK',,'\"PAL\".STAN<>\'N\' and \"PAL\".AKT=\'T\' and \"PAL\".ODD=\':_a\'',ST.ODDZ)
   || PAL.f_set('KODK',,'\"PAL\".STAN=\'N\' and \"PAL\".MKTM=\'\' and \"PAL\".AKT=\'T\' and \"PAL\".ODD=\':_a\''
       ,ST.ODDZ)
   ?};
   PAL.actions('SEL',_allact);
   EANX.WHERE:='P';
   PAL.win_sel('SEL');
   PAL.win_dict('SEL');
   1
|| 0
?}


\popaldkl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po dodaniu usunieciu pozycji palety
::  OLD: \popaldkl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? (2+BEER.MENU_PTH)='MR' & DK_L.PAL<>null
|| DK_L.PALDO:=DK_L.PAL;
   exec('uzupIDkod','magdok_palety',DK_L);
   PAL.cntx_psh();
   PAL.clear();
   {? PAL.seek(DK_L.PAL)
   || PAL.RSQL:=$ND.ref();
      PAL.put()
   ?};
   PAL.cntx_pop()
|| {? DK_L.ZPALET<2
   || DK_L.PALDO:=DK_L.PAL;
      exec('uzupIDkod','magdok_palety',DK_L)
   ?}
?};
1


\pwdklsce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem kodu identyfikacyjnego
::  OLD: \pwdklsce/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_edit:=(2+cur_kwin())='e_' & (cur_kwin()+3)<>'row';
{? _edit & (1+DK_L.MG().TYP)='D' & DK_L.MG().PAL<>'T' & DK_L.M<>null & (';DAPZ'*DK_L.M().IDMOB)>1
|| DK_L.win_efml(DK_L.win_edit('?'),,'SCEAN',,'ICON_BEFORE',"'xwin16.png:167'");
   ''
|? _edit
|| DK_L.win_efml(DK_L.win_edit('?'),,'SCEAN',,'ICON_BEFORE',"''");
   exec('findfnv','#color')
|| ''
?}


\prscean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed redakcja pola DK_L.SCEAN
::  OLD: \prscean/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
DK_L.DK=null & (1+DK_L.MG().TYP)='D' & DK_L.MG().PAL<>'T' & DK_L.M<>null & (';DAPZ'*DK_L.M().IDMOB)>1
& {? DK_L.M().IDZP || DK_L.M().SETW='W' || 1 ?}


\f3scean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: klawisz F3 dla pola DK_L.SCEAN
::  OLD: \f3scean/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('addscean','kody_kresk',3);
~~


\poscean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: po redakcji pola DK_L.SCEAN
::  OLD: \poscean/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK_L.SCEAN<>''
|| _ok:=0;
   SLD.cntx_psh();
   SLD.index('SCEAN');
   SLD.prefix(DK_L.SCEAN,DK_L.SCEAN,DK_L.MG);
   {? SLD.first()
   || {!
      |? _ok:=SLD.IL>0;
         ~_ok & SLD.next()
      !}
   ?};
   SLD.cntx_pop();
   {? ~_ok
   || FUN.info('Brak niezerowych dostaw dla podanego kodu identyfikacyjnego: %1.'@[DK_L.SCEAN]);
      0
   || 1
   ?}
|| 1
?}


\n_kolor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: ustawia kolor w wertowaniu N, info o powiazanej fakturze
::  OLd: \n_kolor/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
INTRAST.NIP:=ND.NIP_UE;
DISP.FAKS:=exec('zwr_symbol_fak','magdok_wspolne');
ST.MAG_SYM='';
{? ND.MD<>null || ST.MAG_SYM:=ND.MD().SYM ?};
DISP.TYP:=ND.TYP().T;
DISP.KHNAZ:=ND.KH().NAZ;
exec('nd_actions','magdok_nag');
exec('rekprzed','color','ND#01')


\zwr_symbol_fak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: Zwraca symbol dokumentu sprzedazy dla dokumentu magazynowego
::   WE: Dla naglowka dokumentu w buforze
::   WY: Symbol dokumentu sprzedazy lub '' gdy nie znaleziono
::  OLD: \zwr_symbol_fak/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? ND.FAKS=null
|| {? ND.FAKS_REF<>''
   || FAKS.cntx_psh();
      FAKS.use(8+ND.FAKS_REF);
      FAKS.prefix();
      {? FAKS.seek(ND.FAKS_REF,8+ND.FAKS_REF)
      || _wyn:=FAKS.SYM
      ?};
      FAKS.cntx_pop()
   ?}
|| FAKS.cntx_psh();
   FAKS.use('faktu'+(5-ND.name));
   _wyn:=ND.FAKS().SYM;
   FAKS.cntx_pop()
?};
_wyn


\pw_eanxw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: ustawia zmienna czy dokument jest podczas kompletacji wysylki
::  OLD: \pw_eanxw/ean.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.WYS:={? cur_tab(1,1)=INX
          || _wyn:={? exec('FindInSet','#table','EANN','AKT',$INX.ref(),'N')<>null || 'T' || '' ?}
          |? cur_tab(1,1)=ZK_N
          || exec('eann2zk','magdok_wspolne',ZK_N.ref())
          |? cur_tab(1,1)=ZD_NAG
          || exec('eann2zk','magdok_wspolne',ZD_NAG.ref())
          |? cur_tab(1,1)=ZDP_NAG
          || exec('eann2zk','magdok_wspolne',ZDP_NAG.ref())
          |? cur_tab(1,1)=DK_LN
          || _wyn:={? exec('FindInSet','#table','EANN','AKT',$DK_LN.ref(),'T')<>null
                   || 'T'
                   |? exec('FindInSet','#table','EANN','AKT',$DK_LN.ref(),'N',"EANN.STAN",,,'')='+'
                   || 'A'
                   || ''
                   ?}
          |? cur_tab(1,1)=ND
          || _wyn:=exec('stND2EANN','magazyn_mobi')
          || ''
          ?}


\eann2zk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdza czy zamowienie jest w wysylce lub na operacji wydania lub przyjecia
::   WE: _a - ref zamowienia lub potwierdzenia
::       [_b] - sprawdza czy jest choc jedna kompletacja (domyslnie 0-nie sprawdza)
::   WY: 'T'-tak ''-nie
::  OLD: \eann2zk/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

_wyn:='';
_ile:=0;
_akc:=0;
_brk:=0;
EANN.cntx_psh();
EANN.index('REFSQL');
EANN.prefix($_a,$_a);
{? EANN.first()
|| {!
   |? {? ~_b
      || {? EANN.AKT='T' & '.Z.O.R.!.X.'*('.'*EANN.STAN+'.') || _ile+=1 ?};
         {? EANN.AKT='T' & EANN.STAN='Z' || _akc+=1 ?}
      || _brk:=EANN.AKT='T' & '.Z.O.R.!.X.'*('.'*EANN.STAN+'.') & EANN.TYP='Z'
      ?};
      ~_brk & EANN.next()
   !}
||
:: kontrola powiązanych dyspozycji w magazynie
   _msk:=TR_NZL.name()+4;
   _uid:=exec('FindAndGet','#table',ref_tab(_a),_a,,"uidref()",'');
   {? _uid<>''
   || _tab:=tab_tmp(1,'SQL','STRING[16]','');
      exec('opentr_psh','open_tab');
      {? _msk<>'____' || exec('opentr','open_tab','____') ?};
      TR_ZL.index('DOK_REF');
      TR_ZL.prefix(_uid);
      {? TR_ZL.first()
      || {!
         |? {? TR_ZL.TR_NZL().WHERE='TR_NZL'
            || _tab.clear();
               _tab.prefix($TR_ZL.TR_NZL);
               {? ~_tab.first()
               || _tab.blank();
                  _tab.SQL:=$TR_ZL.TR_NZL;
                  _tab.add(1)
               ?}
            ?};
            TR_ZL.next()
         !}
      ?};
      exec('opentr_pop','open_tab');
      _tab.clear();
      {? _tab.first()
      || {!
         |? EANN.index('REFSQL');
            EANN.prefix(_tab.SQL,_tab.SQL);
            {? EANN.first()
            || {!
               |? {? ~_b
                  || {? EANN.AKT='T' & '.Z.O.R.!.X.'*('.'*EANN.STAN+'.') || _ile+=1 ?};
                     {? EANN.AKT='T' & EANN.STAN='Z' || _akc+=1 ?}
                  || _brk:=EANN.AKT='T' & '.Z.O.R.!.X.'*('.'*EANN.STAN+'.') & EANN.TYP='Z'
                  ?};
                  ~_brk & EANN.next()
               !}
            ?};
            ~_brk & _tab.next()
         !}
      ?};
      obj_del(_tab)
   ?}
?};
EANN.cntx_pop();
_wyn:={? _b || {? _brk || 'T' || '' ?}
      |? _akc=1 & _ile=1 || 'J'
      |? _akc>1 & _akc=_ile || 'I'
      |? _akc & _akc<>_ile || 'K'
      |? _ile=1 || 'T'
      |? _ile>1 || 'W'
      || ''
      ?};
_wyn


\nd_is_rp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Sprawdza czy dokument jest klasy RP czyli:
::       1. Przychodowy
::       2. Powiazany ze zleceniem
::       3. Powiazany z wyrobem
::       4. Wewnetrzny
::   WE: _a - ND.ref
::   WY: 0 - dokument nie jest dokumentem klasy RP
::       1 - dokument jest klasy RP
::  OLD: \nd_is_rp/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
_nd:=_a;

_result:=0;

:: Zwracam typ dokumentu
_typ:=exec('FindAndGet','#table',ND,#_nd,ref_name(_nd),"TYP",null());
{? _typ<>null()
||
   TYPYDOK.cntx_psh(); TYPYDOK.clear();
   {? TYPYDOK.seek(_typ)
   || {? TYPYDOK.P='T' & TYPYDOK.ZLEC='T' & TYPYDOK.WYR='T' & TYPYDOK.Z='N'
      || _result:=1
      |? exec('is_usluga_typ','zl_uslugi',TYPYDOK.ref())
      || _result:=1
      ?}
   ?};
   TYPYDOK.cntx_pop()
?};
_result


\nd_is_zp
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [12.30]
:: OPIS: Sprawdza czy dokument jest klasy ZP czyli:
::       1. Rozchodowy
::       2. Powiazany ze zleceniem
::       3. Powiazany z wyrobem
::       4. Wewnetrzny
::   WE: _a - ND.ref
::   WY: 0 - dokument nie jest dokumentem klasy RP
::       1 - dokument jest klasy RP
::  OLD: \nd_is_zp/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
_nd:=_a;

_result:=0;

:: Zwracam typ dokumentu
_typ:=exec('FindAndGet','#table',ND,#_nd,ref_name(_nd),"TYP",null());
{? _typ<>null()
||
   TYPYDOK.cntx_psh(); TYPYDOK.clear();
   {? TYPYDOK.seek(_typ)
   || {? TYPYDOK.P='N' & TYPYDOK.ZLEC='T' & TYPYDOK.WYR='T' & TYPYDOK.Z='N' & TYPYDOK.KOOP<>'T'
      || _result:=1
      ?}
   ?};
   TYPYDOK.cntx_pop()
?};
_result


\obl_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: oblicza ilosc w aktywnych planowanych transportach dla pozycji zam. ZK_POZ
::   WE: _a - ZK_P.refsql()
::  OLD: \obl_wys/wysylki.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ZKW_N.cntx_psh();
ZKW_P.cntx_psh();
ZKW_P.index('ZK_P');
ZKW_P.prefix(_a,_a);
{? ZKW_P.first()
|| {!
   |? _wyn+=ZKW_P.IL;
      ZKW_P.next()
   !}
?};

_mask:=ZKW_N.name()+3;
_odd:=1+_mask;
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first()
|| {!
   |? ZKW_N.cntx_psh();
      ZKW_P.cntx_psh();
      ZKW_N.use('zkpwn'+_odd+(form(OKR.ROK,,0,'99')+2));
      ZKW_P.use('zkpwp'+_odd+(form(OKR.ROK,,0,'99')+2));
      ZKW_P.index('ZK_P');
      ZKW_P.prefix(_a,_a);
      {? ZKW_P.first()
      || {!
         |? _wyn+=ZKW_P.IL;
            ZKW_P.next()
         !}
      ?};
      ZKW_P.cntx_pop();
      ZKW_N.cntx_pop();
      ~_wyn & OKR.next()
   !}
?};
OKR.cntx_pop();

ZKW_N.use('zkpwn'+_mask);
ZKW_P.use('zkpwp'+_mask);

ZKW_P.cntx_pop();
ZKW_N.cntx_pop();
_wyn


\spr_doku
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy na pozycjach dokumentu sa pozycje z rezerwacji tymczasowych
::   WE: _a - ref dokumentu
::   WY: 1-sa i usunac 2-sa i odrezerwowac 0-rezygnacja 3-brak
::  OLD: \spr_doku/rezerw.fml
::       \spr_doku/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=3;
_rodz:=exec('get','#params',3008,2,OPERATOR.USER);
{? _rodz='N'
|| _wyn:=1
|? _rodz='T'
|| _wyn:=2
|| DK.cntx_psh();
   DK.index('DOKMAG');
   DK.prefix(_a);
   {? DK.first()
   || {!
      |? {? exec('czyhisrt','rezerwacje',$DK.ref(),form(8+$DK.ref())+3)
         || _wyn:=FUN.choice('Na pozycjach dokumentu są pozycje(a) powstałe z rezerwacji tymczasowych.\n\n'
                             'Wybierz jedną z opcji usunięcia dokumentu?'@
                             ,,'Wyłącznie usunięcie pozycji'@,'Przywrócenie rezerwacji'@)
         ?};
         _wyn=3 & DK.next()
      !}
   ?};
   DK.cntx_pop()
?};
_wyn


\spr_zk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza czy dany dokument powstal z zamowienia
::   WE:  [_a] - 0-jesli sprawdzenie naglowka 1-sprawdzenie od pozycji
::        [_b] - 1-(domyslne) pokazywac komunikat 0-bez komunikatu
::        [_c] - 'd'-dolacz,'p'-popraw,'u'-usun,'r'-rezerwacje tymczasowe 'i'-informacja o zamowieniu
::        [_d] - kontekst wywołania: 0(domyślnie)-bez znaczenia 1-z pozycji dokumentów
::   WY:  1 - wszystko ok
::        2 - usunac realizacje zamowienia klienta
::        3 - usunac realizacje zamowienia dostaw
::        0 - nie mozna
::  OLD: \spr_zk/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0; _b:=1 ?};
{? _=1 || _b:=1 ?};
_czy_dk:={? var_pres('_d')=type_of(0) || _d || 0 ?};

_wyn:=1;
exec('list_zam','magdok_wspolne',ND.ref);
{? __list_zk.size>0
||
   _ok:=1;
   {? __list_zk.first
   ||
      {!
      |?
         {? __list_zk.A<>'A' | __list_zk.A='' || _ok:=0 ?};
         __list_zk.next & _ok=1
      !}
   ?};
   {? _ok=1
   ||
      _nd:=$ND.ref;
      ND.cntx_psh;
      ZK_RN.cntx_psh;
      ZK_RN.index('ND');
      ZK_RN.prefix(_nd);
      {? ZK_RN.first
      ||
::       sprawdzenie czy sa faktury
         _faks:=0;
         {!
         |?
            {? ZK_RN.FAKS<>'' & _faks=0 || _faks:=1 ?};
            ZK_RN.next()
         !};

::       przygotowanie komunikatu
         {? _faks=0
         || _size:=__list_zk.size();
            _ask:={? _size=1 || 'Dany dokument został wystawiony jako realizacja zamówienia nr: '@
                             || 'Dany dokument został wystawiony jako realizacja zamówień nr: '@ ?};
            {? __list_zk.first()
            || {!
               |? _ask+='\n'+__list_zk.SYM;
                  __list_zk.next()
               !}
            ?};
            _ask+='.';
            _ask+={? _c='i'
                  || ''
                  |? _czy_dk
                  || '\n'+'Czy modyfikować (dołączenie, poprawa lub usunięcie) pozycję dokumentu?'@
                  || '\n'+'Usunięcie dokumentu możliwe jedynie po usunięciu realizacji zamówień.'@
                  ?};
            _ask+={? _czy_dk | _c='i' || '' || '\n'+'Czy usunąć realizację zamówień?'@ ?};
            {? _c='i'
            || {? _b || FUN.info(_ask) ?};
               _wyn:=0
            |? FUN.ask(_ask)
            || _wyn:=2
            || _wyn:=0
            ?};
            0
         || _size:=__list_zk.size();
            _msg:={? _size=1 || 'Dany dokument został wystawiony jako realizacja zamówienia nr: '@
                             || 'Dany dokument został wystawiony jako realizacja zamówień nr: '@ ?};
            {? __list_zk.first()
            ||
               {!
               |?
                  _msg+='\n'+__list_zk.SYM ;
                  __list_zk.next()
              !}
            ?};
            _msg+='.\n'+'Ponieważ do realizacji zamówienia zostały wystawione dokumenty sprzedaży'@;
            _msg+='\n'+'Usunięcie dokumentu niemożliwe.'@;
            {? _b || FUN.info(_msg) ?};
            _wyn:=0;
            0
         ?}
      ?};
      ZK_RN.cntx_pop();
      ND.cntx_pop()
   ||
      _arch:=0;
      _size:=__list_zk.size();
      _msg:={? _size=1 || 'Dany dokument został wystawiony jako realizacja zamówienia nr: '@
                       || 'Dany dokument został wystawiony jako realizacja zamówień nr: '@ ?};
      {? __list_zk.first()
      ||
         {? _c='u'
         || TYPYDOK.cntx_psh;
            _wyn:={? ND.TYP().P='T' || 3 || 2 ?};
            TYPYDOK.cntx_pop
         ?};
         {!
         |?
            _ln:=__list_zk.SYM;
            {? (8+__list_zk.REF)+2<>'__'
            || _ln+=' - w archiwum,';
               _arch+=1
            ?};
            _msg+='\n'+form(_ln,33);
            __list_zk.next()
         !};
         _msg:=(form(_msg))+'.'
      ?};

      {? _czy_dk
      || {? _c='p' | _c='d'
         || _msg+='\n\n'+'Czy modyfikować (dołączenie, poprawa) pozycję dokumentu?'@
         ?}
      ?};
      {? _arch & _c='u'
      ||
         _msg+={? _a=1 || '\n\n'+'Usunięcie pozycji dokumentu możliwe po przywróceniu '@
                       || '\n\n'+'Usunięcie dokumentu możliwe po przywróceniu '@ ?}
            +{? _arch=1 || 'zamówienia archiwalnego.'@ || 'zamówień archiwalnych.'@ ?};
         _wyn:=0
      |? ~(_wyn=3 & _czy_dk) & _c='u'
      || _msg+='\n'+'Usunięcie dokumentu możliwe jedynie po usunięciu realizacji zamówień.'
                '\nCzy usunąć realizację zamówień?'@
      ?};
      {? ~_wyn | (_wyn=3 & _czy_dk) | _c='i'
      || {? _b || FUN.info(_msg) ?}
      || {? FUN.ask(_msg) || _wyn:={? _wyn>0 || _wyn || 1 ?} || _wyn:=0 ?}
      ?}
   ?}
||
:: brak powiaznych z realizacja pozycji dokumentu - kontroluje czy naglowek nie zostal wygenerowany automatycznie

:: zalozenie ze dokument nie jest jednoczesnie realizacja zamowien dostaw i sprzedazy
:: oraz ze dokument magazynowy jest podpiety pod jedno zamowienie

   {? ND.TYP().P='T'
   ||
      _jest:=exec('czy_zzam','magdok_wspolne','D',$ND.ref());
      {? _jest<>''
      || _kod:=20-_jest;
         _symbol:=form(20+_jest);
         {? _kod='A'
         || {? _b || FUN.info('Dany dokument został wystawiony automatycznie z zamówienia nr: %1.'
                              '\nPonieważ zamówienie zostało zarchiwizowane.'
                              '\nModyfikacja dokumentu niemożliwa.'
                              '\n\nOperację można wykonać po przeniesieniu zamówienia z archiwum.'@[_symbol]) ?};
            _wyn:=0
         |? _kod='M'
         || {? _b || FUN.info('Dany dokument został wystawiony automatycznie z zamówienia nr: %1.'
                              '\nPonieważ zamówienie zostało zamknięte.'
                              '\nModyfikacja dokumentu niemożliwa.'@[_symbol]) ?};
            _wyn:=0
         |? _c='i'
         || {? _b || FUN.info('Dany dokument został wystawiony automatycznie z zamówienia nr: %1.'@[_symbol]) ?};
            _wyn:=0
         ||
            {? ~_a
            || {? FUN.ask('Dany dokument został wystawiony automatycznie z zamówienia nr: %1.'
                   '\nUsunięcie dokumentu możliwe jedynie po usunięciu realizacji zamówienia.'
                   '\nCzy usunąć realizację zamówienia?'@[_symbol])
               || _wyn:=3
               || _wyn:=0
               ?}
            || _wyn:=FUN.ask('Dany dokument został wystawiony automatycznie z zamówienia nr: %1'
                  '.\nModyfikować pozycje?'@[_symbol])
            ?}
         ?}
      ?}
   ||
      _jest:=exec('czy_zzam','magdok_wspolne','Z',$ND.ref());
      {? _jest<>''
      || _kod:=20-_jest;
         _symbol:=form(20+_jest);
         {? _kod='A'
         || {? _b || FUN.info('Dany dokument został wystawiony automatycznie z zamówienia nr: %1.'
                              '\nPonieważ zamówienie zostało zarchiwizowane.'
                              '\nModyfikacja dokumentu niemożliwa.'
                              '\n\nOperację można wykonać po przeniesieniu zamówienia z archiwum.'@[_symbol]) ?};
            _wyn:=0
         |? _c='i'
         || {? _b || FUN.info('Dany dokument został wystawiony automatycznie z zamówienia nr: %1.'@[_symbol]) ?};
            _wyn:=0
         ||
            {? ~_a
            || {? FUN.ask('Dany dokument został wystawiony automatycznie z zamówienia nr: %1.'
                   '\nUsunięcie dokumentu możliwe jedynie po usunięciu realizacji zamówienia.'
                   '\nCzy usunąć realizację zamówienia?'@[_symbol])
               || _wyn:=2
               || _wyn:=0
               ?}
            || _wyn:=FUN.ask('Dany dokument został wystawiony automatycznie z zamówienia nr: %1'
                  '.\nModyfikować pozycje?'@[_symbol])
            ?}
         ?}
      ?}
   ?}
?};
_wyn


\list_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: tworzy liste zamowien powiazanych z dokumentem magazynowym
::   WE:  _a  - ref dokumentu magazynowego
::       [_b] - czy tworzyc nowa tabela
::              0 - tak (domyslnie)
::              1 - dopisuje do juz utworzonej tabeli
::   WY:  tabela tymczasowa (__list_zk) z lista zamowien dla dokumentu magazynowego
::  OLD: \list_zam/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?}  || _b:=0  ?};

{? _b=0
||
   VAR_DEL.delete('__list_zk');
   __list_zk:=tab_tmp(1,'REF','STRING[16]','ref sql zamówienia'@
                        ,'A','STRING[1]','Aktywne'@
                        ,'SYM','STRING[20]','Symbol'@)
?};

_dod:=0;
ND.cntx_psh();
DK.cntx_psh();
DK.use((DK.name()-3)+(ref_name(_a)+3));
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first()
||
   {!
   |?
      {? DK.ZAM_RN<>''
      || _dod:=1;
         _rn_name:=form(8+DK.ZAM_RN);
         {? (2+_rn_name)='zk'
         ||
            _rn_ref:=BB.sqlint(DK.ZAM_RN);
            ZK_RN.cntx_psh();
            ZK_RN.use(_rn_name);
            ZK_RN.clear();
            {? ZK_RN.seek(_rn_ref,_rn_name)
            ||
               _zk_n:=$ZK_RN.N;
               _zk_ref:=ZK_RN.N;
               {? ~__list_zk.find_key(_zk_n)
               ||
                  __list_zk.blank();
                  ZK_N.cntx_psh();
                  ZK_N.use('zknag'+(_rn_name+3));
                  ZK_N.prefix();
                  {? ZK_N.seek(_zk_ref)
                  || __list_zk.A:=ZK_N.A;
                     __list_zk.SYM:=ZK_N.SYM
                  ?};
                  ZK_N.cntx_pop();
                  __list_zk.REF:=_zk_n;
                  __list_zk.add()
               ?}
            ?};
            ZK_RN.cntx_pop()
         |? (2+_rn_name)='zd'
         ||
            _rn_ref:=BB.sqlint(DK.ZAM_RN);
            ZD_RN.cntx_psh();
            ZD_RN.use(_rn_name);
            ZD_RN.prefix();
            {? ZD_RN.seek(_rn_ref,_rn_name)
            ||
               _zk_n:=$ZD_RN.ZD_NAG;
               _zk_ref:=ZD_RN.ZD_NAG;
               {? ~__list_zk.find_key(_zk_n)
               ||
                  __list_zk.blank();
                  ZD_NAG.cntx_psh();
                  ZD_NAG.use('zdnag'+(_rn_name+3));
                  ZD_NAG.prefix();
                  {? ZD_NAG.seek(_zk_ref)
                  || __list_zk.A:={? (_rn_name+2)='__' || 'T' || 'Z' ?};
                     __list_zk.SYM:=ZD_NAG.SYM
                  ?};
                  ZD_NAG.cntx_pop();
                  __list_zk.REF:=_zk_n;
                  __list_zk.add()
               ?}
            ?};
            ZD_RN.cntx_pop()
         ?}
      ?};
      DK.next()
   !}
|? BEER.MENU_PTH='ZZRRDD' | BEER.MENU_PTH='ZZTRRDD'
|| _rn_name:=ref_name(ZK_RN.ref);
   _zk_n:=$ZK_RN.N;
   _zk_ref:=ZK_RN.N;
   {? ~__list_zk.find_key(_zk_n)
   ||
      __list_zk.blank();
      ZK_N.cntx_psh();
      ZK_N.use('zknag'+(_rn_name+3));
      ZK_N.prefix();
      {? ZK_N.seek(_zk_ref)
      || __list_zk.A:=ZK_N.A;
         __list_zk.SYM:=ZK_N.SYM
      ?};
      ZK_N.cntx_pop();
      __list_zk.REF:=_zk_n;
      __list_zk.add()
   ?}
|? BEER.MENU_PTH='ZWRMD' | BEER.MENU_PTH='ZWTRMD'
|| _rn_name:=ref_name(ZD_RN.ref);
   _zk_n:=$ZD_RN.ZD_NAG;
   _zk_ref:=ZD_RN.ZD_NAG;
   {? ~__list_zk.find_key(_zk_n)
   ||
      __list_zk.blank();
      ZD_NAG.cntx_psh();
      ZD_NAG.use('zdnag'+(_rn_name+3));
      ZD_NAG.prefix();
      {? ZD_NAG.seek(_zk_ref)
      || __list_zk.A:={? (_rn_name+2)='__' || 'T' || 'Z' ?};
         __list_zk.SYM:=ZD_NAG.SYM
      ?};
      ZD_NAG.cntx_pop();
      __list_zk.REF:=_zk_n;
      __list_zk.add()
   ?}
|| _dod:=2
?};
{? _dod
|| _nd:={? _dod=1 || _a || ND.ref() ?};
:: bonus dla zamowien sprzedazy szuka po ZK_RN
   ZK_N.cntx_psh();
   ZK_RN.cntx_psh();
   ZK_RN.index('ND');
   ZK_RN.prefix($_nd);
   {? ZK_RN.first()
   || _rn_name:=ref_name(ZK_RN.ref);
      _zk_n:=$ZK_RN.N;
      _zk_ref:=ZK_RN.N;
      {? ~__list_zk.find_key(_zk_n)
      ||
         __list_zk.blank();
         ZK_N.cntx_psh();
         ZK_N.use('zknag'+(_rn_name+3));
         ZK_N.prefix();
         {? ZK_N.seek(_zk_ref)
         || __list_zk.A:=ZK_N.A;
            __list_zk.SYM:=ZK_N.SYM
         ?};
         ZK_N.cntx_pop();
         __list_zk.REF:=_zk_n;
         __list_zk.add()
      ?}
   ?};
   ZK_N.cntx_pop();
   ZK_RN.cntx_pop()
?};
DK.cntx_pop();
ND.cntx_pop();
''


\czy_zzam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy dokument na podstawie zamowienia
::   WE: _a - typ sprawdzenia 'D'-zam.dostaw 'Z'-zam.sprzedazy
::       _b - ref SQL ND
::       [_c] - czy dodać do __list_zam
::   WY: symbol zamowinia lub pusty string
::  OLD: \czy_zzam/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};

_wyn:='';
_odd:=(form(8+_b)-2)+1;
{? _a='D'
||
:: dla przyspieszenia najpierw w aktualnej bazie
   ZD_NAG.cntx_psh();
   ZD_RN.cntx_psh();
   ZD_RN.index('ND');
   ZD_RN.prefix(_b);
   {? ZD_RN.first()
   || _wyn:=form(ZD_RN.ZD_NAG().SYM,20)+{? ZD_RN.ZD_NAG().SYM='M' || 'M' || '' ?};
      {? _c & var_pres('__list_zk')>100
      || {!
         |? __list_zk.A:='T';
            __list_zk.SYM:=ZD_RN.ZD_NAG().SYM;
            __list_zk.REF:=$ZD_RN.ZD_NAG;
            __list_zk.add(1);
            ZD_RN.next()
         !}
      ?}
   ?};

   {? _wyn='' | _c
   ||
::    jak sie nie udalo to sprawdzamy archiwum dla oddzialu
      _mzd:=ZD_NAG.name()-3;
      _akt:=ZD_RN.name()+3;
      _msk:=ZD_RN.names();
      _msk.clear();
      {? _msk.first()
      || {!
         |? _kod:=_msk.NAME+3;
            {? _kod<>_akt & (1+_kod)=_odd
            || ZD_NAG.use(_mzd+_kod);
               ZD_RN.use(_msk.NAME);
               ZD_RN.index('ND');
               ZD_RN.prefix(_b);
               {? ZD_RN.first()
               || _wyn:=form(ZD_RN.ZD_NAG().SYM,20)+'A';
                  {? _c & var_pres('__list_zk')>100
                  || {!
                     |? __list_zk.A:='T';
                        __list_zk.SYM:=ZD_RN.ZD_NAG().SYM;
                        __list_zk.REF:=$ZD_RN.ZD_NAG;
                        __list_zk.add(1);
                        ZD_RN.next()
                     !}
                  ?}
               ?}
            ?};
            (_wyn='' | _c) & _msk.next()
         !}
      ?}
   ?};
   ZD_NAG.cntx_pop();
   ZD_RN.cntx_pop()
|? _a='Z'
||
:: dla przyspieszenia najpierw w aktualnej bazie
   ZK_N.cntx_psh();
   ZK_RN.cntx_psh();
   ZK_RN.index('ND');
   ZK_RN.prefix(_b);
   _wyn:={? ZK_RN.first() || form(ZK_RN.N().SYM,20) || '' ?};

   {? _wyn=''
   ||
::    jak sie nie udalo to sprawdzamy archiwum dla oddzialu
      _mzd:=ZK_N.name()-3;
      _akt:=ZK_RN.name()+3;
      _msk:=ZK_RN.names();
      _msk.clear();
      {? _msk.first()
      || {!
         |? _kod:=_msk.NAME+3;
            {? _kod<>_akt & (1+_kod)=_odd
            || ZK_N.use(_mzd+_kod);
               ZK_RN.use(_msk.NAME);
               ZK_RN.index('ND');
               ZK_RN.prefix(_b);
               _wyn:={? ZK_RN.first() || form(ZK_RN.N().SYM,20)+'A' || '' ?}
            ?};
            _wyn='' & _msk.next()
         !}
      ?}
   ?};
   ZK_N.cntx_pop();
   ZK_RN.cntx_pop()
?};
_wyn


\spr_inwe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdzenie czy to dokument inwentaryzacji
::   WE: _a - czy komunikat 1-tak 0-nie
::  OLD: \spr_inwe/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=1 ?};
_wyn:=1;
_typ:={? ND.TYP().INW<>'N' & ND.TYP().P='T' || 'P'
      |? ND.TYP().INW<>'N' & ND.TYP().P='N' || 'M'
      || ''
      ?};
_mag:=ND.MAG; _dt:=ND.D; _nr:=ND.NR;
INN.cntx_psh();
INP.cntx_psh();
INX.cntx_psh();
INY.cntx_psh();
{? ND.TYP().INW='E'
|| INN.use('inw_nwyc');
   INP.use('inw_pwyc');
   INX.use('inw_xwyc');
   INY.use('inw_ywyc')
?};
{? _typ<>''
||
   INN.index('IND'+_typ);
   INN.prefix();
   {? INN.find_key(_mag,_dt,_nr)
   || _wyn:=0;
      {? _a
      || {? ND.TYP().INW='I'
         || FUN.info('Dokument wygenerowany automatycznie z arkusza inwentaryzacyjnego.'
             '\nUsunięcie możliwe jedynie z poziomu Inwentaryzacji.'@)
         || FUN.info('Dokument wygenerowany automatycznie z arkusza przecen.'
             '\nUsunięcie możliwe jedynie z poziomu Przeceny.'@)
         ?}
      ?}
   ?}
?};
INN.cntx_pop();
INP.cntx_pop();
INX.cntx_pop();
INY.cntx_pop();
_wyn


\skad_gen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza skad zostal wygenerowany dokument jezeli z faktury lub z nia powiazany zwraca odpowiedni komunikat
::   WE: _a - ref SQL-owy ND
::      [_b] - czy pytanie
::   WY: 1-nie jest generowany z fakturki 0-jest powiazany i operator zrezygnowal z usuwania
::  OLD: \skad_gen/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2  || {? type_of(_b)<>1 || _b:=1 ?}  || _b:=1  ?};
FAP2DK.index('NND');
FAP2DK.prefix(_a);
{? FAP2DK.first
||
   {? _b=1
   ||
      _wyn:=FUN.ask({? FAP2DK.RODZ='Z' || 'Dokument jest powiązany z fakturą zakupową.\n'
                                          'Jego usunięcie spowoduje usunięcie informacji o powiązaniach.\n'
                                          'Czy usunąć powiązania?'@
                                       || 'Dokument jest powiązany z fakturą wewnętrzną.\n'
                                          'Jego usunięcie spowoduje usunięcie informacji o powiązaniach.\n'
                                          'Czy usunąć powiązania?'@ ?})
   ||
      _wyn:=1
   ?};
   {? _wyn || _wyn+=1 ?}
|| _wyn:=1
?};
_wyn


\skad_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: usuniecie powiazan z fakturka zakupowa
::   WE: _a - ref SQL-owy ND
::  OLD: \skad_del/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
FAP2DK.index('NND');
FAP2DK.prefix(_a);
{? FAP2DK.first
|| {!
   |?
      exec('fapk_clear','magdok_wspolne',2);
      FAP2DK.del
   !}
?}


\fapk_clear
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [$12.10]
:: OPIS: aktualizacja danych dotyczacych kosztu
::   WE: [_a] 1-usunięto DK, 0(domyślnie) nie
::----------------------------------------------------------------------------------------------------------------------
_del:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_buf:=tab_tmp(1,'DKSQL','STRING[16]','');
{? FAP2DK.DK<>''
|| FAP_K.index('DKSQL');
   FAP_K.prefix(FAP2DK.DK);
   {? FAP_K.first()
   || {!
      |? _ref:=FAP_K.ref; _ok:=FAP_K.next();
         FAP_K.cntx_psh();
         FAP_K.clear;
         {? FAP_K.seek(_ref)
         || {? FAP_K.CK>0 & FAP_K.DKSQL<>''
            || {? FAP_K.WYC
               || {? (_buf.clear(); _buf.prefix(FAP_K.DKSQL,); ~_buf.first())
                  || _buf.blank();
                     _buf.DKSQL:=FAP_K.DKSQL;
                     _buf.add(1);
                     exec('delWYCcen','faktury_wspolne',FAP_K.DKSQL,FAP_K.CK);
                     FAP_K.WYC:=0;
                     FAP_K.CK:=0;
                     FAP_K.put(1)
                  || FAP_K.WYC:=0;
                     FAP_K.CK:=0;
                     FAP_K.put(1)
                  ?}
               ?};
               _act:=1
            ?};
            {? FAP_K.FAKS_K().INMG
            || {? _del
               || FAP_K.del()
               || FAP_K.FAP:=null();
                  FAP_K.WDK:=0;
                  {? FAP_K.put(1) & (FAKS_K.prefix(); FAKS_K.seek(FAP_K.FAKS_K))
                  || FAKS_K.FAKS:=null();
                     FAKS_K.put()
                  ?}
               ?}
            || FAP_K.IDND:='';
               FAP_K.DKSQL:='';
               FAP_K.WDK:=0;
               {? FAP_K.put(1) & (FAKS_K.prefix(); FAKS_K.seek(FAP_K.FAKS_K))
               || FAKS_K.IDND:='';
                  FAKS_K.put()
               ?}
            ?}
         ?};
         FAP_K.cntx_pop();
         _ok
      !}
   ?}
?};
{? FAP2DK.ND<>''
|| _idnd:=exec('FindAndGet','#table',ND,FAP2DK.ND,,"IDADD",'');
   {? _idnd<>''
   || FAKS_K.index('ND');
      FAKS_K.prefix('N',_idnd);
      {? FAKS_K.first()
      || {!
         |? _ref:=FAKS_K.ref(); _ok:=FAKS_K.next();
            FAKS_K.cntx_psh();
            FAKS_K.prefix();
            {? FAKS_K.seek(_ref)
            || {? FAKS_K.INMG
               || {? _del=2
                  || FAKS_K.del()
                  || FAKS_K.FAKS:=null();
                     FAKS_K.put()
                  ?}
               || FAKS_K.IDND:='';
                  FAKS_K.put()
               ?}
            ?};
            FAKS_K.cntx_pop();
            _ok
         !}
      ?}
   ?}
?};
obj_del(_buf);
''


\has_zlgd_nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Sprawdza, czy sa powiazania z rejestracja robocizny
::   WE: _a - ND.ref()
::   WY: 0 - brak powiazan
::       1 - są powiazania
::  OLD: \spr_zlgd/zl_akor1.fml
::----------------------------------------------------------------------------------------------------------------------
_nd:=_a;

_result:=0;
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_nd);

{? DK.first()
|| {!
   |?
      {? DK.ZL<>null()
      || _result:=exec('has_zlgd_dk','magdok_wspolne')
      ?};
      DK.next() & _result=0
   !}
?};
DK.cntx_pop();
_result


\has_zlgd_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Sprawdza, czy sa powiazania z rejestracja robocizny
::   WE: [_a] - DK.ref() lub bieżący rekord
::   WY: 0 - brak powiazan
::       1 - są powiazania
::----------------------------------------------------------------------------------------------------------------------
_ref:=null();
{? var_pres('_a')=type_of(DK.ref())
|| _ref:=_a
?};

_result:=0;
_can_continue:=1;

_args:=obj_new('RESULT','DK');

_rule:="
   _tab:=_a;
   _args:=_b;

   _can_continue:=1;
   _tab.cntx_psh();
   _tab.index('DK');
   _tab.prefix(_args.DK,);
   {? _tab.first()
   || _can_continue:=0;
      _args.RESULT:=1
   ?};
   _tab.cntx_pop();
   _can_continue
";

DK.cntx_psh();
{? _ref<>null()
|| DK.prefix();
   {? DK.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
|| {? DK.ZL<>null()
   || DK.ZL();
      _name:=5+ZLGD.name();
      _msk_start:=_name+ZL.ODDZ+(2-$(ZL.OD~1));
      _msk_end:=~~;
      {? ZL.STAN='Z'
      || _rok:=exec('max','#math',ZL.ROK_MAX,ZL.DO~1);
         _msk_end:=_name+ZL.ODDZ+(2-$(_rok))
      || _rok:=exec('max','#math',ZL.ROK_MAX,date()~1,ST.AR);
         _msk_end:=_name+ZL.ODDZ+(2-$(_rok))
      ?};

      _args.RESULT:=0;
      _args.DK:=DK.uidref();
      exec('for_each_mask','#table',ZLGD,_rule,_msk_start,_msk_end,_args,1);
      {? _args.RESULT>0
      || _result:=1
      ?};

      {? _result=0
      ||
         _name:=5+ZL_WYRGD.name();
         _msk_start:=_name+ZL.ODDZ+(2-$(ZL.OD~1));
         _msk_end:=~~;
         {? ZL.STAN='Z'
         || _rok:=exec('max','#math',ZL.ROK_MAX,ZL.DO~1);
            _msk_end:=_name+ZL.ODDZ+(2-$(_rok))
         || _rok:=exec('max','#math',ZL.ROK_MAX,date()~1,ST.AR);
            _msk_end:=_name+ZL.ODDZ+(2-$(_rok))
         ?};
         exec('for_each_mask','#table',ZL_WYRGD,_rule,_msk_start,_msk_end,_args,1);
         {? _args.RESULT>0
         || _result:=1
         ?}
      ?}
   ?}
?};
DK.cntx_pop();
_result


\nd_il_zpars
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Zlicza jaka ilosc z na wszystkich pozycjach naglowka dokumentu zostala powiazana z partiami
::   WE: _a - STRING - Sql ref naglowka dokumentu
::   WY: REAL - ilosc powiazana z partiami
::  OLD: \nd_il_zpars/zpars.fml
::----------------------------------------------------------------------------------------------------------------------
_dok_sql:=_a;

_result:=0;

DK.cntx_psh();
ND.cntx_psh();
{? ND.use(8+_dok_sql)
||
   ND.clear();
   {? ND.seek(_dok_sql)
   ||
      _msk:=DK.name()-3;
      DK.use(_msk+(ND.name+3));
      DK.index('DOKMAG');
      DK.prefix(ND.ref());
      {? DK.first()
      || {!
         |? _result+=exec('dk_il_zpars','magdok_wspolne',$DK.ref());
            DK.next()
         !}
      ?}
   ?}
?};
DK.cntx_pop();
ND.cntx_pop();
_result


\dk_il_zpars
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Zlicza jaka ilosc z pozycji dokumentu zostala powiazana z partiami
::   WE: _a - STRING - Sql ref $DK.ref()
::   WY: REAL - ilosc powiazana z partiami
::  OLD: \dk_il_zpars/zpars.fml
::----------------------------------------------------------------------------------------------------------------------
_dok_sql:=_a;

_result:=0;

ZPARS.cntx_psh();
DK.cntx_psh();
{? DK.use(8+_dok_sql)
||
   DK.clear();
   {? DK.seek(_dok_sql)
   ||
::    Ustawiam maske ZPARS
      _name:=ZPARS.name();

      _suffix:=8+_dok_sql+3;
      _prefix:=5+_name;

      _msk:=_prefix+_suffix;

      {? ZPARS.use(_msk)
      ||
         ZPARS.cntx_psh();
         ZPARS.clear();
         ZPARS.index('SQLDOK');
         ZPARS.prefix(_dok_sql);
         {? ZPARS.first()
         || {!
            |? _result+=ZPARS.IL;
               ZPARS.next()
            !}
         ?};
         ZPARS.cntx_pop()
      ?}
   ?}
?};
DK.cntx_pop();
ZPARS.cntx_pop();
_result


\spr_nd_lim
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Sprawdza, czy po usunieciu wszystkich pozycji dokumentu nie bedzie ujemnych stanow na limitach zlecen
::   WE: _a - ND.ref()
::   WY: 1 - ok, 0 - beda ujemne stany
::  OLD: \spr_nd_lim/zl_lim01.fml
::----------------------------------------------------------------------------------------------------------------------
_nd:=_a;

_tab:=tab_tmp(1,
   'ZLIM','STRING[16]','$ZLIM.ref()',
   'ZL','INTEGER','#ZL.ref()',
   'IL','REAL','Ilość'
);

DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_nd);
{? DK.first()
|| {!
   |? {? DK.ZLIM<>null()
      || _tab.prefix($DK.ZLIM);
         {? _tab.first()
         || _tab.IL+=DK.IL;
            _tab.put()
         || _tab.ZLIM:=$DK.ZLIM;
            _tab.ZL:=#DK.ZL;
            _tab.IL:=DK.IL;
            _tab.add()
         ?}
      ?};
      DK.next()
   !}
?};
DK.cntx_pop();

ZL.cntx_psh();
ZL.clear();
_ok:=1;
_tab.clear();
{? _tab.first()
|| {!
   |?
      {? ZL.seek(_tab.ZL,)
      || ZLIM.cntx_psh();
         exec('openmask','zl_common',ZL.ref());
         ZLIM.clear();
         {? ZLIM.seek(_tab.ZLIM)
         || _pob_il:=exec('ilosc_dk','zl_limit',ZLIM.ref(),0);
            {? _pob_il-_tab.IL<0
            || _ok:=0
            ?}
         ?};
         ZLIM.cntx_pop()
      ?};
      _ok & _tab.next()
   !}
?};
ZL.cntx_pop();

_ok


\nd_is_rw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Sprawdza czy dokument jest klasy RW czyli:
::       1. Rozchodowy
::       2. Powiazany ze zleceniem
::       3. NIE powiazany z wyrobem
::       4. Wewnetrzny
::   WE: _a - ND.ref
::   WY: 0 - dokument nie jest dokumentem klasy RW
::       1 - dokument jest klasy RW
::  OLD: \nd_is_rw/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
_nd:=_a;

_result:=0;

:: Zwracam typ dokumentu
_typ:=exec('FindAndGet','#table',ND,#_nd,ref_name(_nd),"TYP",null());
{? _typ<>null()
||
   TYPYDOK.cntx_psh(); TYPYDOK.clear();
   {? TYPYDOK.seek(_typ)
   || {? TYPYDOK.P='N' & TYPYDOK.ZLEC='T' & TYPYDOK.WYR='N' & TYPYDOK.Z='N'
      || _result:=1
      ?}
   ?};
   TYPYDOK.cntx_pop()
?};
_result


\nd_is_zw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Sprawdza czy dokument jest klasy ZW czyli:
::       1. Przychodowy
::       2. Powiazany ze zleceniem
::       3. Wewnetrzny
::   WE: _a - ND.ref
::   WY: 0 - dokument nie jest dokumentem klasy RP
::       1 - dokument jest klasy RP
::  OLD: \nd_is_zw/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
_nd:=_a;

_result:=0;

:: Zwracam typ dokumentu
_typ:=exec('FindAndGet','#table',ND,#_nd,ref_name(_nd),"TYP",null());
{? _typ<>null()
||
   _rodp:=exec('get','#params',500705,type_of(''));
   _rodp+=' ';
   TYPYDOK.cntx_psh(); TYPYDOK.clear();
   {? TYPYDOK.seek(_typ)
   || {? TYPYDOK.P='T' & TYPYDOK.ZLEC='T' & TYPYDOK.WYR='N' & TYPYDOK.Z='N'
      || {? _rodp*(TYPYDOK.T+' ')>0
         || _result:=0
         || _result:=1
         ?}
      ?}
   ?};
   TYPYDOK.cntx_pop()
?};
_result


\czyinwds
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS:  sprawdza czy na podanym magazynie inwentaryzacja o dacie mniejszej lub rownej dacie sprzedazy
::   WE: _a - magazyn
::       _b - data sprzedazy
::       [_c] - ref materialowy
::       [_d] - sprawdza domyslnie 0-wszystkie inwentury 1-tylko zamkniete 2-tylko otwarte
::       [_e] - 1-jeśli podano godzinę inwentury i data jest równa to pomiń 0-(domyslnie)-nie
::   WY: 0-brak 1-jest
::  OLD: \czyinwds/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>7 || _c:=null ?} || _c:=null ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
_ctrlT:={? var_pres('_e')=type_of(0) || _e || 0 ?};

_wyn:=0;
_msk:=INN.name();
OKR.cntx_psh();
INN.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.last()
|| {!
   |? INN.use((_msk-2)+form(OKR.ROK-2000,-2,0,'99'));
      INN.index('INDP');
      INN.prefix(_a);
      {? INN.last
      || {!
         |? {? {? INN.TYP='C' & ~_d
               || (_data:={? INN.D=date(0,0,0) || INN.DI |? _d=2 || _b-1 || INN.D ?};
                   _data>=_b)
                & {? _ctrlT & _data=_b
                  || {? INN.D=date(0,0,0) || INN.TI=time(0,0,0) || INN.T=time(0,0,0) ?}
                  || 1
                  ?}
               || (_data:={? INN.D=date(0,0,0) || INN.DI |? _d=2 || _b-1 || INN.D ?};
                   _data>=_b)
                & {? _ctrlT & _data=_b
                  || {? INN.D=date(0,0,0) || INN.TI=time(0,0,0) || INN.T=time(0,0,0) ?}
                  || 1
                  ?}
               ?}
            || {? _c=null
               || _wyn:=1
               || INP.cntx_psh;
                  INP.use('inw_p'+(INN.name+3));
                  INP.index('KOD'); INP.prefix(INN.ref,_c);
                  _wyn:=INP.first;
                  INP.cntx_pop
               ?}
            ?};
            ~_wyn & INN.next
         !}
      ?};
      ~_wyn & OKR.prev()
   !}
?};
INN.use(_msk);
OKR.cntx_pop();
INN.cntx_pop();
_wyn


\czy_kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2006]
:: OPIS: sprawdza czy korygowano caly dokument lub wskazana pozycja
::   WE: _a  ND.refsql lub DK.refsql
::   WY: 0/1 czy jest korekta pozycje
::  OLD: \czy_kor/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
DK.cntx_psh();
ND.cntx_psh();
ND.clear();
DK.clear();

{? 5+_a='nagdo'
|| {? ND.seek(_a,form(8+_a))
   || DK.index('DOKMAG');
      DK.prefix(ND.ref);
      {? DK.first()
      ||
         {!
         |?
            _wyn:=exec('czydkkor','magdok_wspolne',$DK.ref());
            ~_wyn & DK.next()
         !}
      ?}
   ?}
|? 5+_a='dokma'
|| _wyn:=exec('czydkkor','magdok_wspolne',_a)
?};

ND.cntx_pop();
DK.cntx_pop();
_wyn


\czydkkor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2006]
:: OPIS: sprawdza czy korygowano wskazana pozycje
::   WE:  _a  DK.refsql pozycji korygowanej
::   WY: 0/1 czy jest korekta pozycje
::  OLD: \czydkkor/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
DK.cntx_psh();
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first()
||
   {!
   |?
      DK.use(((8+_a)-2)+($OKR.ROK+2));
      DK.index('KOR');
      DK.prefix(_a);
      {? _a<>'' & DK.first()
      || _wyn:=1
      ?};
      _wyn=0 & OKR.next()
   !}
?};
OKR.cntx_pop();
DK.cntx_pop();
_wyn


\dk_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: oblicza wartosc dokumentu magazynowego (dziala w biezacej masce)
::   WE:  _a  - ref dokumentu magazynowego ND.ref
::       [_b] - czy poprawiac wartosc dokumentu pomimo akceptacji
::       [_c] - 1-aktualizacja pola ND.ZL, 0-nie(domyślnie)
::   WY: zwraca 1 obliczona wartosc
::  OLD: \FD.DK_SUM/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
_aktzl:={? var_pres('_c')=type_of(0) || _c || 0 ?};

_gratisy:='N';
_pzlec:=null();
ND.cntx_psh();
DK.cntx_psh();
DK.index('DOKMAG');DK.prefix(_a);
SUM.WAR:=SUM.NETTO:=SUM.VAT:=SUM.BRUTTO:=SUM.SCWAR:=0;
{? DK.first()
|| _zlec:=DK.N().ZL;
   {? _aktzl & (_zlec<>null() | DK.ZL<>null()) || _pzlec:=DK.ZL; _aktzl:=2 ?};

   TAR_H.cntx_psh(); TAP.cntx_psh(); TAR.cntx_psh();
   {!
   |? {? _aktzl=2 & DK.ZL<>null() & DK.ZL<>_zlec || _aktzl:=3 ?};
      {? DK.ZL<>_pzlec || _pzlec:=null() ?};
      {? DK.TAR_H || TAR_H.use(ref_name(DK.TAR_H)) ?};
      {? DK.TAR_H().TAP || TAP.use(ref_name(TAR_H.TAP)) ?};
      {? _gratisy='N' & DK.TAR_H().TAP().TAR().SD='G' || _gratisy:='T' ?};
      SUM.WAR+=DK.WAR;SUM.NETTO+=DK.WN;SUM.VAT+=DK.WV;SUM.BRUTTO+=DK.WB; SUM.SCWAR+=DK.SCWAR;
      DK.next()
   !};
   TAR_H.cntx_pop(); TAP.cntx_pop(); TAR.cntx_pop()
?};

::    przypisanie wartosci do naglowka dokumentu
ND.clear();
{? ND.seek(_a)
|| {? (_b | ND.Z<>'T') || ND.WAR:=SUM.WAR; ND.SCWAR:=SUM.SCWAR ?};
   ND.GRATISY:=_gratisy;
   {? _pzlec<>null() || ND.ZL:=_pzlec
   |? _aktzl=3       || ND.ZL:=null()
   ?};
   {? ND.put() & (_b | ND.Z<>'T') || exec('actTAXS','magdok_wspolne',ND.ref()) ?}
?};
DK.cntx_pop();
ND.cntx_pop();
SUM.WAR


\chk_wyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy istnieje niezakonczona/zakonczona inwentaryzacja pelna z data rozpoczecia wieksza lub rowna _a
::   WE: _a - data dokumentu
::       [_b] - rowniez zakonczona 1-tak 0-nie (domyslnie)
::       [_c] - dodatkowo sprawdzany jest indeks materialowy (dotyczy inwentaryzacji ciaglych)
::       [_d] - godzina dokumentu
::       [_e] - magazyn
::   WY: 1-jest ok 0-nie jest
::  OLD: \chk_wyc/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>7 || _c:=null() ?} || _c:=null() ?};
_time:={? var_pres('_d')=type_of(time()) || _d || time(0,0,0) ?};
 _mag:={? var_pres('_e')=type_of(null()) || _e || ST.MAG ?};

_wyn:=1;
_msk:=INN.name();
OKR.cntx_psh();
INN.cntx_psh();
INP.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.last()
|| {!
   |? INN.use((_msk-2)+form(OKR.ROK-2000,-2,0,'99'));
      {? _c<>null() || INP.use('inw_p'+((_msk-2)+1)+form(OKR.ROK-2000,-2,0,'99')) ?};
      {? _b
      || INN.index('INN');
         INN.prefix(_mag)
      || INN.index('TYP');
         INN.prefix(_mag,'A')
      ?};
      {? INN.last()
      ||
         {!
         |?
            {? INN.DI>=_a & (_time=time(0,0,0) | INN.TI>=_time)
             & {? ~_b || INN.D=date(0,0,0) || INN.D<>date(0,0,0) ?}
            || {? _c<>null() & INN.TYP='C'
               || _wyn:=exec('FindInSet','#table','INP','KOD',_c,INN.ref())=null()
               || _wyn:=0
               ?}
            ?};
            _wyn & INN.prev()
         !}
      ?};
      _wyn & OKR.prev()
   !}
?};
INN.use(_msk);
OKR.cntx_pop();
INN.cntx_pop();
INP.cntx_pop();
_wyn


\nie_zdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdzenie czy dany typ nie wystepuje w polu TD dla TYPYDOK
::   WE: _a - NDSQL powiazanego dokumentu
::       [_b] - 1-sprawdza czy mial byc zaakceptowany 0-nie sprawdza (domyslnie)
::   WY: 1-nie jest tworzony na podstawie innego dokumentu 0-jest 2-jest tworzony niezaakceptowany
::  OLD: \nie_zdok/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
_wyn:=1;
{? _a<>''
||
   TYPYDOK.cntx_psh();
   ND.cntx_psh();
   ND.use(form(8+_a));
   ND.prefix();
   {? ND.seek(_a)
   || _wyn:=2
   ?};
   ND.cntx_pop();
   TYPYDOK.cntx_pop()
?};
_wyn


\czyref_c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: dodanie jednej pozycji do arkusza
::   WE: _a - ref indeksu materialowego M.ref
::       _b - ref magazynu (domyslnie ST.MAG)
::       _c - cena
::       _d - ref SQL-owy dostawy
::   WY: ''-pierwsza dostawa 'symbol dokumentu dostawy'-nie
::  OLD: \czyref_c/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
exec('sc_tymczas','magazyn_stan',_b,_a,'');
{? __sc.first
|| {!
   |? {? __sc.CP=_c
      || {? __sc.PRDK=_d
         || {? _wyn<>'' || 0 || _wyn:='' ?}
         || ND.cntx_psh();
            DK.cntx_psh();
            ND.use('nagdo'+(form(8+__sc.PRDK)+3));
            DK.use('dokma'+(form(8+__sc.PRDK)+3));
            DK.clear();
            {? DK.seek(__sc.PRDK,form(8+__sc.PRDK))
            || _wyn:=
                  'Na magazynie typu ceny ewidencyjne możliwa poprawa\n'
                  'wyłącznie na pierwszej dostawie z ceną: %1.\n'
                  'Poprawa możliwa na dokumencie magazynu %2: %3,\n'
                  'z dnia %4, pozycja %5.'@
                  [form(_c,,0,'99'),DK.N().MAG().SYM,DK.N().SYM,form(DK.N().D),form(DK.P,,0,'99')]
            ?};
            ND.cntx_pop();
            DK.cntx_pop()
         ?};
         0
      || _wyn:='Na magazynie typu ceny ewidencyjne niemożliwa poprawa cen po przecenie.'@;
         __sc.next()
      ?}
   !}
?};
_wyn


\add2dk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: definiowanie lokalizacji do reorganizacji
::   WE: _a - ref DK
::       _b - ref DK_LN
::       _c - lokalizacja z
::       _d - lokalizacja do
::       _e - termin waznosci z
::       _f - termin waznosci do
::       _g - ilosc odczytana
::       _h - magazyn ref
::       _i - material ref
::       [_j] - czy pozycja dolaczona automatycznie
::       [_k] - ref FAP-a
::       [_l] - paleta z
::       [_m] - paleta do
::       [_n] - 1-update 0-nowy rekord (domyslnie)
::       [_o] - sposob wypelnienia pola ZPALET 0-nie dotyczy 1-cala paleta 2-rozpakowanie palety
::       [_p] - kod identyfikujacy dostawe
::       [_q] - ref SQL dostawy, domyślnie brak
::       [_r] - wskazanie na EANP - domyślnie brak
::   WY: 1 - odano 0 nie dodano
::  OLD: \add2dk_l/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=10 || {? type_of(_j)<>1 || _j:=0 ?} || _j:=0 ?};
{? _>=11 || {? type_of(_k)<>7 || _k:=null ?} || _k:=null ?};
{? _>=12 || {? type_of(_l)<>7 || _l:=null ?} || _l:=null ?};
{? _>=13 || {? type_of(_m)<>7 || _m:=null ?} || _m:=null ?};
{? _>=14 || {? type_of(_n)<>1 || _n:=0 ?} || _n:=0 ?};
{? _>=15 || {? type_of(_o)<>1 || _o:=0 ?} || _o:=0 ?};
{? _>=16 || {? type_of(_p)<>2 || _p:='' ?} || _p:='' ?};
{? _>=17 || {? type_of(_q)<>2 || _q:='' ?} || _q:='' ?};
_kplreo:={? var_pres('_r')=type_of('') & (+_r)=31 || _r || '' ?};

_wg_dk:=(_b=null)+(_k=null);
_lok:={? _c<>null || _c || DK_L.MG().EANL ?};

{? _d<>null()
 & exec('FindAndGet','#table',EANL,_d,,"MG",null())<>exec('FindAndGet','#table',EANL,_lok,,"MG",null())
|| _uiddo:=exec('FindAndGet','#table',EANL,_d,,"uidref()",null());
   _d:=null()
|| _uiddo:=''
?};

_wyn:=0;
DK.cntx_psh();
DK_L.cntx_psh();
{? _wg_dk
|| DK_L.index('DK');
   DK_L.prefix(_a,null)
?};

{? _n & _wg_dk & DK_L.find_key(_lok,_l,_e) & {? _o=2 || DK_L.PALDO=_m || 1 ?} & {? _p<>'' || DK_L.SCEAN=_p || 1 ?}
 & (_kplreo='' | DK_L.find_tab('first','KPLREO',,'=',_kplreo))
|| DK_L.IL+=_g;
   _typdok:={? _wg_dk || {? DK_L.DK().N().TYP().P='T' || 'P' || 'W' ?} || 'R' ?};
   exec('reoIL2','magdok_wymiary');
   _wyn:=DK_L.put(1)
|| DK_L.clear();
   DK_L.DK:=_a; {? _wg_dk || DK_L.DK().M ?};
   DK_L.blank();
   DK_L.DK:=_a;
   _typdok:={? _wg_dk || {? DK_L.DK().N().TYP().P='T' || 'P' || 'W' ?} || 'R' ?};
   DK_L.DK_LN:=_b;
   DK_L.DT:={? _wg_dk || date() || DK_L.DK_LN().DT ?};
   DK_L.TM:={? _wg_dk || time() || DK_L.DK_LN().TM ?};
   DK_L.US:={? _wg_dk || OPERATOR.USER || DK_L.DK_LN().US ?};
   DK_L.Z:={? _wg_dk=2
           || {? DK_L.DK().N().Z='T' | (';ZT'*DK_L.DK().N().STAT_REJ)>1 || 'T' || 'N' ?}
           |? _wg_dk=1
           || 'N'
           || DK_L.DK_LN().AKC
           ?};
   DK_L.MG:=_h;
   DK_L.Z_DO:='Z';
   DK_L.LOK:=_lok;
   DK_L.LOKDO:={? _d<>null || _d || DK_L.MG().EANL ?};
   DK_L.TW:=_e;
   DK_L.TWDO:=_f;
   DK_L.IL:=_g;
   DK_L.M:=_i;
   DK_L.AUTO:=_j;
   DK_L.JM:=DK_L.M().J;
   DK_L.FAP:=_k;
   DK_L.PAL:=_l;
   DK_L.PALDO:=_m;
   DK_L.ZPALET:=_o;
   DK_L.SCEAN:={? _p<>'' || _p |? _wg_dk & DK_L.DK().SCEAN<>'' || DK_L.DK().SCEAN || '' ?};
   DK_L.SCSQL:={? _q<>'' || _q
               |? _wg_dk & DK_L.DK().PLUS='T' & DK_L.DK().N().TYP().DN<>'T' || $_a
               |? _wg_dk & DK_L.DK().PLUS='T' & DK_L.DK().N().TYP().DN='T'  || DK_L.DK().SRDK
               || ''
               ?};
   {? DK_L.SCSQL='' & DK_L.SCEAN<>'' & DK_L.M().IDMOB='D'
   || DK_L.SCSQL:=exec('FindInSet','#table','MKODK','KK',DK_L.SCEAN,DK_L.SCEAN,"MKODK.RSQL",,,'')
   ?};
   {? DK_L.M().J2<>null()
   || DK_L.J2:=DK_L.M().J2;
      DK_L.WS2:=exec('oblWSP','jm',DK_L.M)
   ?};
   DK_L.UIDDO:=_uiddo;
   DK_L.KPLREO:=_kplreo;
   {? DK_L.DK_LN<>null() & DK_L.SCSQL='' & DK_L.MG().PAL<>'T' & DK_L.M().SETW='P'
   || _doroz:=DK_L.IL;
      _eanl:=$DK_L.LOKDO;
      _wgtw:=exec('scsqlWGtw','magdok_wspolne',DK_L.MG,DK_L.M,DK_L.TW,DK_L.DK_LN);
      {? _wgtw.size() & _wgtw.first()
      || _wgtw.clear();
         _wgtw.prefix(_eanl,);
         {? _wgtw.first()
         || {!
            |? {? _wgtw.SCSQL<>'brak' & _wgtw.IL>0
               || {? _wgtw.IL>=_doroz
                  || DK_L.SCSQL:=_wgtw.SCSQL;
                     exec('reoIL2','magdok_wymiary');
                     exec('uzupIDkod','magdok_palety',DK_L);
                     _wyn:=DK_L.add();
                     _doroz:=0
                  || DK_L.SCSQL:=_wgtw.SCSQL;
                     DK_L.IL:=_wgtw.IL;
                     exec('reoIL2','magdok_wymiary');
                     exec('uzupIDkod','magdok_palety',DK_L);
                     _wyn:=DK_L.add();
                     _doroz-=_wgtw.IL
                  ?}
               ?};
               _doroz & _wgtw.next()
            !}
         ?};
         {? _doroz>0 & (_wgtw.prefix(); _wgtw.first())
         || {!
            |? {? _wgtw.SCSQL<>'brak' & _wgtw.IL>0
               || {? _wgtw.IL>=_doroz
                  || DK_L.SCSQL:=_wgtw.SCSQL;
                     exec('reoIL2','magdok_wymiary');
                     exec('uzupIDkod','magdok_palety',DK_L);
                     _wyn:=DK_L.add();
                     _doroz:=0
                  || DK_L.SCSQL:=_wgtw.SCSQL;
                     DK_L.IL:=_wgtw.IL;
                     exec('reoIL2','magdok_wymiary');
                     exec('uzupIDkod','magdok_palety',DK_L);
                     _wyn:=DK_L.add();
                     _doroz-=_wgtw.IL
                  ?}
               ?};
               _doroz & _wgtw.next()
            !}
         ?}
      ?};
      obj_del(_wgtw);
      {? _doroz>0
      || DK_L.IL:=_doroz;
         DK_L.SCSQL:='';
         exec('reoIL2','magdok_wymiary');
         exec('uzupIDkod','magdok_palety',DK_L);
         _wyn:=DK_L.add(1)
      ?}
   || {? DK_L.DK<>null & DK_L.PAL<>null & _typdok='W' || exec('akt_palz','magdok_palety',DK_L.PAL,0) ?};
      exec('reoIL2','magdok_wymiary');
      exec('uzupIDkod','magdok_palety',DK_L);
      _wyn:=DK_L.add()
   ?}
?};
{? _wyn
|| PAL.cntx_psh();
   PAL_POZ.cntx_psh();
   {? DK_L.PAL<>null || exec('znacznik','magdok_palety',DK_L.PAL) ?};
   {? DK_L.PALDO<>null & DK_L.PAL<>DK_L.PALDO || exec('znacznik','magdok_palety',DK_L.PALDO) ?};
   PAL.cntx_pop();
   PAL_POZ.cntx_pop()
?};
DK.cntx_pop();
DK_L.cntx_pop();
_wyn


\uzycie_dostawy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10] na podstawie his_dokm/mag_fun.fml
:: OPIS: generowanie tabeli uzycia danej dostawy
::UWAGA: Brane pod uwage sa tylko dane, ktore nie maja wplywu na SC, czyli niezatwierdzone DK, rezerwacje na ZK_P
::   WE: _a - RDK
::       _b - NDK
::       _c - ref M
::   WY: obiekt klasy @.Class.cResult
::  OLD: \uzycie_dostawy/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_rdk:={?_>0 & type_of(_a)=type_of(0) || _a || 0  ?};
_ndk:={?_>1 & type_of(_b)=type_of('')|| _b || '' ?};

_result:=obj_new(@.Class.cResult);
_result.State:=0;
:: tabela wynikowa
_result.Result:=null();
:: suma uzycia
_result.Result2:=0;
:: suma uzycia - druga jednostka ewidencyjna
_result.Result3:=0;

{? _rdk=0 | _ndk=''
|| _result.WdrMsg:='wyd_z_dostawy/magazyn2.fml\nBłędna lista parametrów lub typów.';
   return(_result);
   ~~
?};

_oddz:=1+(_ndk+3);

ND.cntx_psh();
DK.cntx_psh();

:: zbieramy informacje
_tab:=tab_tmp(3
             ,'KIND','STRING[15]','Rodzaj'
             ,'SYM' ,'STRING[50]','Symbol/pozycja'
             ,'NAM' ,'STRING[8]' ,''
             ,'REF' ,'INTEGER'   ,''
             ,'IL'  ,'REAL'      ,'Ilość'
             ,'IL2' ,'REAL'      ,'Ilość 2'
             );

_result.State:=1;

OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? _result.State
 & OKR.first()
||
   {!
   |?
      ND.use('nagdo'+_oddz+($OKR.ROK+2));
      DK.use('dokma'+_oddz+($OKR.ROK+2));
      DK.index('DOST');
      DK.prefix('N',_rdk,_ndk);
      {? DK.first()
      ||
         {!
         |?
            {? DK.Z<>'T'
            || _tab.KIND:='W wydaniu';
               _tab.SYM:=DK.N().SYM+' poz.'+form(DK.P,4,,'99');
               _tab.NAM:=DK.name();
               _tab.REF:=#DK.ref();
               _tab.IL:=DK.IL;
               _tab.IL2:={? DK.M().J2<>null() || DK.IL2 || 0 ?};
               _tab.add();
               _result.Result2+=_tab.IL;
               _result.Result3+=_tab.IL2;
               ~~
            ?};
            DK.next()
         !}
      ?};
      DK.clear();
      OKR.next()
   !}
?};
OKR.cntx_pop();

ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();

_sc:=form(_ndk,8)+(-(('0000000'+BB.hex(_rdk))+8));

REZ.index('SC');
REZ.prefix(_c,_sc,_sc);
{? REZ.first()
|| {!
   |?
      _tab.KIND:='Rezerwacja';
      _tab.SYM:=REZ.ZK_P().N().SYM+' poz.'+form(REZ.ZK_P().POZ,4,,'99');
      _tab.NAM:=REZ.ZK_P().name();
      _tab.REF:=#REZ.ZK_P;
      _tab.IL:=REZ.ILR;
      _tab.IL2:={? REZ.M().J2<>null() || REZ.IL2 || 0 ?};
      _tab.add();
      _result.Result2+=_tab.IL;
      _result.Result3+=_tab.IL2;
      REZ.next()
   !}
?};
ZK_P.cntx_pop();
ZK_N.cntx_pop();
REZ.cntx_pop();

DK.cntx_pop();
ND.cntx_pop();
_result.Result:=_tab;
_result


\ile_rozp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: zwraca ilosc rozpisana na DK
::   WE: _a - ref SQL-owy DK
::       _b - rodzaj Z-zakup E-wewnetrzna
::   WY: sumaryczna ilosc rozpisana na dokumentach magazynowych
::  OLd: \ile_rozp/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
FAP2DK.cntx_psh();
FAP2DK.index('DK');
FAP2DK.prefix(_b,_a);
{? FAP2DK.first || {! |? _wyn+=FAP2DK.IL; FAP2DK.next !} ?};
FAP2DK.cntx_pop();
_wyn


\dk_is_rp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Sprawdza czy dokument jest klasy RP czyli:
::       1. Przychodowy
::       2. Powiazany ze zleceniem
::       3. Powiazany z wyrobem
::       4. Wewnetrzny
::   WE: _a - DK.ref()
::   WY: 0 - dokument nie jest dokumentem klasy RP
::       1 - dokument jest klasy RP
::  OLD: \dk_is_rp/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
_dk:=_a;

_result:=0;

DK.cntx_psh(); DK.clear();
{? DK.seek(_dk)
||
:: Zwracam ref naglowka
   _nd:=exec('FindAndGet','#table',DK,DK.ref(),,"N",null());
   {? _nd<>null()
   || _result:=exec('nd_is_rp','magdok_wspolne',_nd)
   ?}
?};
DK.cntx_pop();
_result


\dk_is_zp
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [12.30]
:: OPIS: Sprawdza czy dokument jest klasy ZP czyli:
::       1. Rozchodowy
::       2. Powiazany ze zleceniem
::       3. Powiazany z wyrobem
::       4. Wewnetrzny
::   WE: _a - DK.ref()
::   WY: 0 - dokument nie jest dokumentem klasy RP
::       1 - dokument jest klasy RP
::  OLD: \dk_is_zp/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
_dk:=_a;

_result:=0;

DK.cntx_psh(); DK.clear();
{? DK.seek(_dk)
||
:: Zwracam ref naglowka
   _nd:=exec('FindAndGet','#table',DK,DK.ref(),,"N",null());
   {? _nd<>null()
   || _result:=exec('nd_is_zp','magdok_wspolne',_nd)
   ?}
?};
DK.cntx_pop();
_result


\dk_is_zw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Sprawdza czy dokument jest klasy ZW czyli:
::       1. Przychodowy
::       2. Powiazany ze zleceniem
::       3. Wewnetrzny
::   WE: _a - DK.ref()
::   WY: 0 - dokument nie jest dokumentem klasy RP
::       1 - dokument jest klasy RP
::  OLD: \dk_is_zw/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
_dk:=_a;

_result:=0;

DK.cntx_psh(); DK.clear();
{? DK.seek(_dk)
||
:: Zwracam ref naglowka
   _nd:=exec('FindAndGet','#table',DK,DK.ref(),,"N",null());
   {? _nd<>null()
   || _result:=exec('nd_is_zw','magdok_wspolne',_nd)
   ?}
?};
DK.cntx_pop();
_result


\dk_is_rw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Sprawdza czy dokument jest klasy RW czyli:
::       1. Rozchodowy
::       2. Powiazany ze zleceniem
::       3. NIE powiazany z wyrobem
::       4. Wewnetrzny
::   WE: _a - DK.ref()
::   WY: 0 - dokument nie jest dokumentem klasy RW
::       1 - dokument jest klasy RW
::  OLD: \dk_is_rw/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
_dk:=_a;

_result:=0;

DK.cntx_psh(); DK.clear();
{? DK.seek(_dk)
||
:: Zwracam ref naglowka
   _nd:=exec('FindAndGet','#table',DK,DK.ref(),,"N",null());
   {? _nd<>null()
   || _result:=exec('nd_is_rw','magdok_wspolne',_nd)
   ?}
?};
DK.cntx_pop();
_result


\czy_wyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [12.10]
:: OPIS: Czy dokument na podstawie systemu Wyposazenie
::       W kontekscie: dokument i jego pozycja
::  OLD: \czy_wyp/wypkaro2.fml
::----------------------------------------------------------------------------------------------------------------------
_odp:=0;
:: DRO tu wstawić sprawdzanie czy jest licencja na wyposażenie
{? 0
|| TYPYDOK.cntx_psh();
   TYPYDOK.clear();
   _typ_dok:=ND.TYP().T;
   {? _typ_dok=(exec('get','#params',700523,2,null()))-1
    | _typ_dok=(exec('get','#params',700524,2,null()))-1
    | _typ_dok=(exec('get','#params',700525,2,null()))-1
    | _typ_dok=(exec('get','#params',700526,2,null()))-1
    | _typ_dok=(exec('get','#params',700527,2,null()))-1
   || _ndx:=KARO.ndx_tmp(,,'SRDK',,);
      KARO.index(_ndx);
      KARO.prefix($DK.ref());
      {? KARO.first
      || _odp:=1
      ?};
      KARO.ndx_drop(_ndx)
   ?};
   TYPYDOK.cntx_pop()
?};
_odp


\mx_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: przypisanie indeksu do magazynu
::  OLD: \mx_add/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? POMOC.RODZ<>'U' & DK.PLUS='T'
 & exec('FindInSet','#table','MX','M_MG',ST.MAG)<>null
 & exec('FindInSet','#table','MX','M_MG',M.ref,ST.MAG)=null
|| {? FUN.ask('Wybrany indeks materiałowy: %1\n'
              'nie jest przypisany do magazynu: %2.\n\n'
              'Czy przypisać podany indeks do magazynu?'@[M.KTM,ST.MAG().SYM])
   || MX.cntx_psh();
      MX.clear();
      MX.MG:=ST.MAG;
      MX.A:=M.A;
      MX.M:=M.ref();
      _statsM:=exec('statsM','statexam',M.ref());
      MX.DEFSTATS:={? _statsM=null() || MX.MG().DEFSTATS || _statsM ?};
      MX.add(1);
      MX.cntx_pop()
   || _ok:=0
   ?}
?};
_ok


\czyurmob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy z urzadzenia mobilnego
::   WE: [_a] - 1-sprawdzenie tylko dokumentu 0-również reorganizacji (domyślnie)
::   WY: 1-tak 0-nie
::  OLD: \czyurmob/ean2.fml
::       \czyz_mob/ean2.fml
::UWAGA: exec('czyz_mob','ean2') = exec('czyurmob','magdok_wspolne',1)
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_wyn:=0;
{? ~_a & exec('FindInSet','#table','DK_LN','ZDOK',$ND.ref(),$ND.ref())<>null
|| _wyn:=1
|| _msk1:=EANP.name();
   _msk2:=form((ND.D~1)-2000,-2,0,'99');
   EANP.cntx_psh();
   EANP.use((_msk1-2)+_msk2);
   EANP.clear();
   _wyn:=exec('FindInSet','#table','EANP','RNAG',$ND.ref(),$ND.ref())<>null;
   EANP.cntx_pop()
?};
_wyn


\zwrdkltw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: zwraca TW lub EANL wg DK_L jesli jest tylko wystepuje jedna
::   WE: _a - 1-EANL 2-TW 3-PAL
::   WY: w zaleznosci od _a 1-EANL.ref/null 2-TW/date(1,1,1) lub 1 w przypadku pustej dziedziny 3-PAL.uidref/''
::  OLD: \zwrdkltw/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:={? _a=1 | _a=3 || null |? _a=2 || date(1,1,1) || 0 ?};
DK_L.cntx_psh();
DK_L.index('DK');
DK_L.prefix(DK.ref(),null);
{? DK_L.first()
|| _wyn:={? _a=1 || DK_L.LOK |? _a=2 || DK_L.TW |? _a=3 || DK_L.IDPAL || 0 ?};
   {!
   |? {? _a=1 & _wyn<>DK_L.LOK
      || _wyn:=null;
         0
      |? _a=2 & _wyn<>DK_L.TW
      || _wyn:=date(1,1,1);
         0
      |? _a=3 & _wyn<>DK_L.IDPAL
      || _wyn:='';
         0
      || DK_L.next()
      ?}
   !}
|| _wyn:=1
?};
DK_L.cntx_pop();
_wyn


\uprmgzam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: Sprawdza czy dany magazyn jest na liscie uprawnionych do realizacji zamowien
::   WE: _a - ref magazynu lub null (jesli choc jeden spelnia kryteria)
::       _b - typ sprawdzenia ZAM-sprzedazy ZAW-wewnetrzne
::   WY: 1-tak 0-nie
::  OLD: \uprmgzam/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
USERS_UP.cntx_psh();
USERS_UP.index('MG');
{? _a=null() || USERS_UP.prefix(null,_b,ST.ODDZ) || USERS_UP.prefix(null,_b,ST.ODDZ,_a) ?};
_wyn:=USERS_UP.first();
USERS_UP.cntx_pop();
_wyn


\ilenadk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: zwraca ilosc z pozycji DK
::   WE: _a - ref SQL-owy DK
::   WY: ilosc
::  OLD: \ilenadk/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
DK.cntx_psh();
DK.clear;
_wyn:={? DK.seek(_a,form(8+_a)) || DK.IL || 0 ?};
DK.cntx_pop();
_wyn


\ctrldkzl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: kontrola wypelnienia pol DK.ZL lub DK.GROP dla dokumentow wewnetrznych
::   WE: _a - ref dokumentu
::   WY: 1-jest OK 0-nie jest dobrze
::  OLD: \ctrldkzl/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first()
|| {? DK.N().TYP().ZLEC='T' | DK.N().TYP().ZLEC='O'
   || {!
      |? _wyn:=(DK.ZL<>null() | DK.GROP<>null());
         _wyn & DK.next()
      !}
   ?}
?};
DK.cntx_pop();
_wyn


\ctrl_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: kontrola wypelnienia pol DK.DK_C dla dokumentow przychodowych
::   WE: _a - ref dokumentu
::       [_b] - 1-sprawdzenie czy sa pozycje z wymagalna cecha dostawy niezaleznie od magazynu 0(domyslnie)-nie
::   WY: 1-jest OK 0-nie jest dobrze
::  OLD: \ctrl_atr/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

_wyn:=1;
VAR_DEL.delete('__dkce');
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first() & ~(DK.N().INN='T' & DK.N().TYP().INW='E')
|| {? ~_b & (1+DK.N().MAG().TYP)='D' & DK.N().MAG().KOOP<>'T'
   || {!
      |? {? DK.M().RODZ='T'
         || _wyn:={? DK.PLUS='T'
                  || {? (DK.PRDK='' | DK.PRDK=$DK.ref() | DK.N().NDSQL<>'')
                     || DK.M().M_ATR=null() | (DK.M().M_ATR<>null & DK.DK_C<>null & ~(DK.DK_C().UZUP*'0'))
                     || 1
                     ?}
                  || (DK.M().M_ATR=null()
                    | (DK.M().M_ATR<>null & DK.DK_C<>null & ~(DK.DK_C().UZUP*'0')))
                    | {? DK.PRDK<>''
                      || __dkce:=exec('FindAndGet','#table',DK,DK.PRDK,,"DK.DK_C",null());
                         {? __dkce=null()
                         || 1
                         || _res:=0;
                            _prdk:=DK.PRDK;
                            _srdk:=DK.SRDK;
                            _mag:=DK.N().MAG;
                            DK.cntx_psh();
                            ND.cntx_psh();
                            ND.use('nagdo'+((8+_prdk)+3));
                            DK.use(8+_prdk);
                            DK.prefix();
                            {? DK.seek(_prdk) & DK.N().MAG<>_mag
                            || DK.DK_C:=__dkce;
                               {? DK.put(1)
                                & exec('FindInSet','#table','SC','SRDK',_srdk,,"SC.DK_C:=__dkce;SC.put(1)",1,,0)
                                & exec('FindAndGet','#table',DK,_srdk,,"DK_C:=__dkce;put(1)",0)
                               || _res:=1
                               ?}
                            ?};
                            DK.cntx_pop();
                            ND.cntx_pop();
                            _res
                         ?}
                      || 0
                      ?}
                  ?}
         ?};
         _wyn & DK.next()
      !}
   |? _b
   || {!
      |? {? DK.M().RODZ='T'
         || _wyn:={? DK.PLUS='N'
                  || DK.M().M_ATR=null() | (DK.M().M_ATR<>null & DK.DK_C<>null & ~(DK.DK_C().UZUP*'0'))
                  || DK.M().M_ATR<>null() & DK.DK_C<>null() & ~(DK.DK_C().UZUP*'0')
                  ?}
         ?};
         _wyn & DK.next()
      !}
   ?}
?};
DK.cntx_pop();
VAR_DEL.delete('__dkce');
_wyn


\ctrl_wym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: kontrola ilosci dla wymiarow podczas akceptacji dokumentu/reorganizacji
::   WE: _a - 0-ND 1-DK_LN
::       _b - [0]/1 - operacja grupowa (dla _a=0)
::   WY: 1-jest OK 0-nie jest dobrze
::  OLD: \ctrl_wym/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_group:={? ~_a & var_pres('_b')=type_of(0) || _b || 0 ?};

_ildkl:=tab_tmp(4,'MAT','STRING[16]',''
         ,'EANL','STRING[16]',''
         ,'TW','DATE',''
         ,'SCEAN','STRING[128]',''
         ,'ILE','REAL','');
_wyn:=1;
_data:=date();

{? ~_a
|| DK.cntx_psh();
   DK_L.cntx_psh();
   DK.index('DOKMAG');
   DK.prefix(ND.ref());
   {? DK.first()
   || {? ND.D>_data || _data:=ND.D ?};
      _mag:=DK.N().MAG;
      _aut:=DK.N().MAG().SP_REANL<>'N';
      _ptwmob:=exec('stND2EANN','magazyn_mobi')='A';
      {!
      |? {? DK.M().RODZ='T' & (~_ptwmob | DK.IL=DK.IL_PT)
         || _scean:={? DK.SCEAN='' || 'brak' || DK.SCEAN ?};
            DK_L.index('DK');
            DK_L.prefix(DK.ref(),null());
            {? DK_L.first()
            || {!
               |? _ildkl.clear();
                  {? _ildkl.find_key($DK.M,$DK_L.LOK,DK_L.TW,_scean)
                  || _ildkl.ILE+=DK_L.IL;
                     _ildkl.put(1)
                  || _ildkl.blank();
                     _ildkl.MAT:=$DK.M;
                     _ildkl.EANL:=$DK_L.LOK;
                     _ildkl.TW:=DK_L.TW;
                     _ildkl.SCEAN:=_scean;
                     _ildkl.ILE:=DK_L.IL;
                     _ildkl.add(1)
                  ?};
                  DK_L.next()
               !}
            || _ildkl.clear();
               {? _ildkl.find_key($DK.M,'brak',date(0,0,0),_scean)
               || _ildkl.ILE+=DK.IL;
                  _ildkl.put(1)
               || _ildkl.blank();
                  _ildkl.MAT:=$DK.M;
                  _ildkl.EANL:='brak';
                  _ildkl.TW:=date(0,0,0);
                  _ildkl.SCEAN:=_scean;
                  _ildkl.ILE:=DK.IL;
                  _ildkl.add(1)
               ?}
            ?}
         ?};
         DK.next()
      !}
   ?};
   DK.cntx_pop();
   DK_L.cntx_pop();
   _ildkl.clear();
   {? _ildkl.first()
   || {!
      |? _scean:={? _ildkl.SCEAN='brak' || '' || _ildkl.SCEAN ?};
         _stn:={? _ildkl.EANL='brak' & _aut
               || exec('stnilwym','magazyn_stan',_data,_mag,exec('FindAndGet','#table',M,_ildkl.MAT,,,null())
                       ,null(),date(0,0,0),_scean)
               |? _ildkl.EANL='brak' & ~_aut
               || 0
               || exec('stnilwym','magazyn_stan',_data,_mag,exec('FindAndGet','#table',M,_ildkl.MAT,,,null())
                       ,exec('FindAndGet','#table',EANL,_ildkl.EANL,,,null()),_ildkl.TW,_scean)
               ?};
         {? _ildkl.ILE>_stn || _wyn:=0 ?};
         _wyn & _ildkl.next()
      !}
   ?};
   {? ~_wyn
   || _txt:='Wymagana poprawa ilości wg wymiarów na pozycjach dokumentu.'@;
      {? _group
      || exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
      || exec('add_kom','#message',_txt,2)
      ?}
   ?}
|| DK_L.cntx_psh();
   DK_L.index('DK_LN');
   DK_L.prefix('Z',DK_LN.ref());
   {? DK_L.first()
   || {? DK_LN.D>_data || _data:=DK_LN.D ?};
      _mag:=DK_L.DK_LN().MG;
      _aut:=DK_L.DK_LN().MG().SP_REANL<>'N';
      {!
      |? _scean:={? DK_L.SCEAN='' || 'brak' || DK_L.SCEAN ?};
         _ildkl.clear();
         {? _ildkl.find_key($DK_L.M,$DK_L.LOK,DK_L.TW,_scean)
         || _ildkl.ILE+=DK_L.IL;
            _ildkl.put(1)
         || _ildkl.blank();
            _ildkl.MAT:=$DK_L.M;
            _ildkl.EANL:=$DK_L.LOK;
            _ildkl.TW:=DK_L.TW;
            _ildkl.SCEAN:=_scean;
            _ildkl.ILE:=DK_L.IL;
            _ildkl.add(1)
         ?};
         DK_L.next()
      !}
   ?};
   DK_L.cntx_pop();
   _ildkl.clear();
   {? _ildkl.first()
   || {!
      |? _scean:={? _ildkl.SCEAN='brak' || '' || _ildkl.SCEAN ?};
         _stn:={? _ildkl.EANL='brak' & _aut
               || exec('stnilwym','magazyn_stan',_data,_mag,exec('FindAndGet','#table',M,_ildkl.MAT,,,null())
                       ,null(),date(0,0,0),_scean)
               |? _ildkl.EANL='brak' & ~_aut
               || 0
               || exec('stnilwym','magazyn_stan',_data,_mag,exec('FindAndGet','#table',M,_ildkl.MAT,,,null())
                       ,exec('FindAndGet','#table',EANL,_ildkl.EANL,,,null()),_ildkl.TW,_scean)
               ?};
         {? _ildkl.ILE>_stn || _wyn:=0 ?};
         _wyn & _ildkl.next()
      !}
   ?}
?};
obj_del(_ildkl);
_wyn


\dok_po_kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [$12.10]
:: OPIS: sprawdza czy data wystawienia dokumentu _c jest pozniejsza od ostatniej korekty dostawy oznacznej _a, _b
::       !!! Nie odwolywac sie do naglowka dostawy. Funkcja wolana w transakcji. !!!
::   WE: _a-data wystawienia dokumentu
::       _b-DK.RDK
::       _c-DK.NDK
::       _d-MG.ref
::       _e-M.ref
::   WY: 1-data dokumentu pozniejsza od ostatniej korekty, 0-wpp
::  OLD: \dok_po_kor/pommag.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;

_mg:=_d;
_mat:=_e;

{? _mg=null | _mat=null || return(0) ?};

_rok_dost:=#('20'+(_c+2));
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first
||
   {!
   |?
      {? OKR.ROK>=_rok_dost
      ||
         DK.cntx_psh; ND.cntx_psh;
         DK.use((_c-2)+($OKR.ROK+2));
         ND.use('nagdo'+(1+(_c+3))+($OKR.ROK+2));
         DK.index('DOKPLUS');
         DK.prefix(_mg,_mat,'T','T',_b,_c,'C');
         {? DK.find_ge(_a)
         ||
            {? DK.N().D>_a
            ||
              _wyn:=0
            ?}
         ?};
         DK.cntx_pop; ND.cntx_pop
      ?};

      _wyn & OKR.next
   !}
?};
OKR.cntx_pop();
_wyn


\czy_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: ustala czy dokument jest bilansem typu BO - na razie bo symbolu dokumentu
::   WE: TYPYDOK.ref
::  OLD: \czy_bo/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
TYPYDOK.cntx_psh();
TYPYDOK.prefix();
{? TYPYDOK.seek(_a)
||
   {? TYPYDOK.T='BO' || _wyn:=1 ?}
?};
TYPYDOK.cntx_pop();
_wyn


\prpopdkl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed poprawieniem/usunieciem rekordu dla DK_L
::  OLD: \prpopdkl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.BUFLOK:=DK_L.LOK;
EANX.BUFPAL:=DK_L.PAL;
EANX.BUFIL:=DK_L.IL;
EANX.BUFPALDO:=DK_L.PALDO;
EANX.BUFZPAL:=DK_L.ZPALET;
EANX.BUFTW:=DK_L.TW;
EANX.BUFSCEAN:='';
{? DK_L.PAL=null | DK_L.ZPALET=2 | (1+menu_txt())='U'
|| 1
|| FUN.info('Operacja niedostępna dla pozycji z nierozpakowanej palety.'@);
   0
?}


\podeldkl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po usunieciu rekordu dla DK_L
::  OLD: \podeldkl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? ST.MAG().PAL='T'
||
:: aktualizacja dla magazynu paletowego
   {? EANX.BUFZPAL<2
   || _nag:=DK.N;
      DK.cntx_psh();
      DK_L.cntx_psh();
      DK_L.index('CZYPAL');
      DK_L.prefix(_nag,EANX.BUFPAL);
      {? DK_L.first()
      || {!
         |? {? DK_L.ZPALET<2 & (DK.clear(); DK.seek(DK_L.DK))
            || _ile:=DK_L.IL;
               _res:=DK_L.del();
               DK.IL-=_ile;
               DK.WAR:=(DK.IL*DK.C)$2;
               DK.put();
               {? DK.IL<=0 || exec('usun_dk','magdok_poz',1) ?}
            || _res:=DK_L.next()
            ?};
            _res
         !}
      ?};
      DK.cntx_pop();
      DK_L.cntx_pop();
      DK.get();
      DK.IL-=EANX.BUFIL;
      DK.WAR:=(DK.IL*DK.C)$2;
      DK.put();
      {? DK.IL<=0 || exec('usun_dk','magdok_poz',1) ?};
      exec('znacznik','magdok_palety',EANX.BUFPAL);
      {? DK.win_sel('?')*'WERL' || grp_disp(DK,'WER') ?}
   |? EANX.BUFZPAL=2
   || DK.IL-=EANX.BUFIL;
      DK.WAR:=(DK.IL*DK.C)$2;
      DK.put();
      exec('poz_bpal','magdok_palety',0,$EANX.BUFPALDO,$EANX.BUFPAL,DK.M().KTM,EANX.BUFIL,DK.C,EANX.BUFTW);
      exec('zwrilpal','magdok_palety',EANX.BUFPAL,DK.M().KTM,EANX.BUFIL,DK.C,EANX.BUFTW);
      {? DK.IL<=0 || exec('usun_dk','magdok_poz',1) ?};
      exec('znacznik','magdok_palety',EANX.BUFPAL);
      exec('znacznik','magdok_palety',EANX.BUFPALDO);
      {? DK.win_sel('?')*'WERL' || grp_disp(DK,'WER') ?}
   ?}
?};
1


\spr_dkin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza czy pozycja ktorakolwiek pozycji dokumentu magazynowego znajduje sie na inwenturze
::   WE:  _a - ND.ref
::  OLD: \spr_dkin/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1; "1 - nie ma pozycji na inwenturze, 0 - jest pozycja";

INPD.index('DK');

DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first
||
   {!
   |?
      INPD.prefix($DK.ref);
      {? INPD.first
      || _wyn:=0
      ?};
      _wyn=1 & DK.next
   !}
?};
DK.cntx_pop();
_wyn


\sprprcnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: sprawdza czy sa dokumenty przychodowe z pozniejszym czasem akceptacji - PRC- w buforze
::   WY: 0-brak pozniejszych dokumentow   1-sa dokumenty
::  OLD: \sprprcnd/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_mag:=ND.MAG;
_dd:=ND.D;
_da:=ND.DA;
_ta:=ND.TA;
_ref:=ND.ref();
ND.cntx_psh();
:: sprawdza PRC+
_ndx_p:=ND.ndx_tmp(,,'MAG',,,'INN',,,'TYP','INW',,'TYP','P',,'D',,);
ND.index(_ndx_p);
ND.prefix(_mag,'T','E','T',_dd);
{? ND.first()
|| {!
   |? {? ND.ref()<>_ref
      || _wyn:={? ND.STAT_REJ='Z' || 2
               |? ND.STAT_REJ='T' || 4
               || 0
               ?};
         0
      || ND.next()
      ?}
   !}
?};
ND.ndx_drop(_ndx_p);

{? ~_wyn
||
:: sprawdza niezaakceptowane
   _ndx_n:=ND.ndx_tmp(,,'MAG',,,'TYP','P',,'Z',,,'D',,);
   ND.index(_ndx_n);
   ND.prefix(_mag,'T','N');
   {? ND.find_ge(_dd) & {? ND.TYP().INW='E' || ND.next() || 1 ?}
   ||
      _wyn:=1
   ||
::    sprawdza zaakceptowane
      _ndx_z:=ND.ndx_tmp(,,'MAG',,,'TYP','P',,'Z',,,'DA',,,'TA',,);
      ND.index(_ndx_z);
      ND.prefix(_mag,'T','T');
      {? ND.find_ge(_da,_ta)
      || {!
         |? {? ND.ref()<>_ref
            || {? ND.D=_dd & ND.TYP().INW='E'
               || _wyn:={? ND.STAT_REJ='Z' || 2
                        |? ND.STAT_REJ='T' || 4
                        || 1
                        ?}
               |? ~exec('sprmdatn','magdok_wspolne',ND.ref())
               || _wyn:=1
               ?}
            ?};
            ~_wyn & ND.next()
         !}
      ?};
      ND.ndx_drop(_ndx_z)
   ?};
   ND.ndx_drop(_ndx_n)
?};
ND.cntx_pop();
_wyn


\sprdk2fp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy sa jakies pozycje nie powiazane z fakturami
::   WE: _a - ref ND
::       [_b] - rodzaj dokumentu do sprawdzenia domyslnie 'Z'-zakup 'E'-wewnetrzna
::       [_c] - 0-przerwanie sprawdzenia jezeli jest cos do fakturowania (domyslnie) 1-sprawdzenie wszystkich pozycji
::             -2-sprawdzenie, jak dla 0 bez uwzględnienia rodzaju
::   WY: 1-sa 0-nie ma 2-pozostaly wylacznie uslugi 3-sa i czesciowo sa zafakturowane
::       dla _c=-2:  1-zakup, 2-wewnętrzne, 0-brak
::  OLD: \sprdk2fp/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>2 || _b:='Z' ?} || _b:='Z' ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};

_wyn:=0;
_usl:=0;
_all:=0;
_sum:=0;
_what:=0;
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first()
||
   {!
   |? {? DK.M().RODZ='T'
      || {? _c=-2
         || _what:={? exec('FindInSet','#table','FAP2DK','DK',$DK.ref(),'Z')<>null() || 1
                   |? exec('FindInSet','#table','FAP2DK','DK',$DK.ref(),'E')<>null() || 2
                   || 0
                   ?}
         || _ilr:=exec('ile_rozp','magdok_wspolne',$DK.ref(),_b);
            {? ~_wyn || _wyn:=(DK.IL-_ilr)>0 ?};
            _all+=_ilr;
            _sum+=DK.IL
         ?}
      ||
         _usl:=1
      ?};
      {? _c=-2 || ~_what |? _c || 1 || ~_wyn ?} & DK.next
   !}
?};
DK.cntx_pop();
{? _c=-2
|| _wyn:=_what
|? ~_wyn & _usl
|| 2
|? _all=0
|| 1
|? _c & _wyn & _all<>_sum
|| 3
|| _wyn
?}


\ilwydmat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: zwraca ilosc w wydaniu dla podanego indeksu materialowego
::   WE: _a - ref materialu
::       _b - ref magazynu
::   WY: ilosc w wydaniu
::  OLD: \ilwydmat/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ND.cntx_psh();
DK.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first()
||
   {!
   |?
      DK.use('dokma'+ST.ODDZ+($OKR.ROK+2));
      ND.use('nagdo'+ST.ODDZ+($OKR.ROK+2));

::    rozchodowe niezaakceptowane
      DK.index('DOKPLUS');
      DK.prefix(_b,_a,'N','N');
      {? DK.first()
      || {!
         |? _wyn+=DK.IL;
            DK.next()
         !}
      ?};

      OKR.next()
   !}
?};
DK.cntx_pop();
ND.cntx_pop();
_wyn


\spr_rdst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza czy dane pozycje dostawy nie sa rezerwowane
::   WY: czy sa rezerwowane
::  OLD: \spr_rdst/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? ND.TYP().P='T'
|| _ref:=ND.ref();
   DK.cntx_psh();
   DK.index('DOKMAG');
   DK.prefix(_ref);
   {? DK.first()
   || {!
      |? {? (_op:=exec('czy_reze','magdok_wspolne',DK.M,DK.RDK,DK.NDK))<>''
         ||
            {? var_pres('__kom')>100
            ||
              exec('add_kom','#message','Poz. %1 jest zarezerwowana: %2 - %3.'@[$DK.P,DK.M().KTM,DK.M().N],4,,__lp+=1);
              exec('add_kom','#message','Wycofanie akceptacji niemożliwe.'@,2,,__lp+=1)
            ||
               FUN.info('Dostawa wg pozycji: %1 jest zarezerwowana.\n'
                  '\n\nIndeks materiałowy:\n%2 - %3'@[form(DK.P,,0,'99'),DK.M().KTM,DK.M().N]
                  +_op
                  +'\nWycofanie akceptacji niemożliwe.'@)
            ?};
            _wyn:=0;
            0
         || DK.next()
         ?}
      !}
   ?};
   DK.cntx_pop()
?};
_wyn


\czy_reze
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy istnieje rezerwacja na dostawie
::   WE: _a - ref M
::       _b - RDK
::       _c - NDK
::  OLD: \czy_reze/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_scsql:=form(_c)+form(('0'*8)+(-BB.hex(_b)),-8);
_wyn:='';
REZ.cntx_psh;
ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.index('SC');
REZ.prefix(_a,_scsql,_scsql);
{? REZ.first()
|| {!
   |? {? REZ.RODZ='B' & (';ZTF'*REZ.TYP)>1 & REZ.ILR>0 & REZ.ZLZAM=null()
      || {? var_pres('__kom')>100
         || {? REZ.TYP='Z'
            || exec('add_kom','#message','Zamówienie: %1 z dnia %2, dla: %3 '
               '%4'@[REZ.ZK_P().N().SYM,form(REZ.ZK_P().N().DP),form(REZ.ZK_P().N().KH().KOD),REZ.ZK_P().N().KH().SKR],7,,__lp+=1);
               exec('add_kom','#message','Ilość rezerwowana: %1'@[form(REZ.ILR,,3)],7,,__lp+=1)
            |? REZ.TYP='T'
            || exec('add_kom','#message','Rezerwacja tymczasowa dla: %1 %2'@[form(REZ.KH().KOD),REZ.KH().SKR],7,,__lp+=1);
               exec('add_kom','#message','Ilość rezerwowana: %1'@[form(REZ.ILR,,3)],7,,__lp+=1)
            |? REZ.TYP='F'
            || FAKS.cntx_psh();
               FAP.cntx_psh();
               _maska:=ref_name(REZ.FAP);
               {? _maska<>FAP.name()
               || FAKS.use('faktu'+(_maska+3));
                  FAP.use(_maska)
               ?};
               exec('add_kom','#message','Dostawa zarezerwowana dla faktury: %1'@[form(REZ.FAP().FAKS().SYM)],7,,__lp+=1);
               exec('add_kom','#message','Ilość rezerwowana: %1'@[form(REZ.ILR,,3)],7,,__lp+=1);
               FAKS.cntx_pop();
               FAP.cntx_pop()
            ?};
            _wyn:='~~'
         || {? REZ.TYP='Z'
            || _wyn+='Zamówienie: %1 z dnia %2'
                    ' dla:\n%3'@[REZ.ZK_P().N().SYM,form(REZ.ZK_P().N().DP),form(REZ.ZK_P().KH().KOD+'-'+REZ.ZK_P().KH().NAZ)];
               _wyn+='\n'+'Ilość rezerwowana: %1'@[form(REZ.ILR,,3)]
            |? REZ.TYP='T'
            || _wyn+='Rezerwacja tymczasowa dla:\n%1'@[form(REZ.KH().KOD+'-'+REZ.KH().NAZ)];
               _wyn+='\n'+'Ilość rezerwowana: %1'@[form(REZ.ILR,,3)]
            ?}
         ?}
      ?};
      REZ.next()
   !}
?};
REZ.cntx_pop;
ZK_N.cntx_pop();
ZK_P.cntx_pop();

_wyn


\wybwgupr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: wybor wg uprawnien uzytkownika do magazynow
::   WE: [_a] - 1 akcja grupowa, 0 (domyslne) akcja pojedyncza
::       [_b] 0(domyslnie)-zamowienie sprzedazy 1-zamowienie wewnetrzne
::       [_c] - 1-zaklada filtr na MG wg __smmag 0(domyslnie) nie
::       [_d] - 1-tylko magazynu typu DOSTAWY 0-nie(domyślnie)
::   WY: null-brak wyboru ref magazynu-wybrano magazyn -1-brak stanow na magazynach
::  OLD: \wybwgupr/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=ZK_N.T().R<>'Z' ?} || _b:=ZK_N.T().R<>'Z' ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};

{? _a
|| {? ZK_N.MG=null
   || BEER.RS:={? ~_b || 2 || 9 ?};
      exec('zwr_stan','magazyn_stan',M.ref,BEER.RS,null,1)
   || BEER.RS:=1;
      exec('zwr_stan','magazyn_stan',M.ref,BEER.RS,ZK_N.MG,1)
   ?}
?};

_wyn:=null;
USERS_UP.cntx_psh;
USERS_UP.index('MG');
USERS_UP.prefix(OPERATOR.USER,'ZA'+{? ~_b || 'M' || 'W' ?},ST.ODDZ_KOD);
__smmag.cntx_psh();
{? __smmag.first()
|| {!
   |? MG.cntx_psh();
      MG.prefix();
      {? MG.seek(__smmag.RSQL)
      || _pal:=MG.PAL='T';
         _skl:=MG.SKL='T'
      || _pal:=0;
         _skl:=0
      ?};
      MG.cntx_pop();
      __smmag.AKT:={? ~_pal & ~_skl & __smmag.STAN>=0 || 'T' || 'N' ?};
      __smmag.put(1);
      __smmag.next()
   !}
?};
_acr:=__smmag.ndx_tmp('',0,'AKT',,0,'MAG',,0);
__smmag.index(_acr);
__smmag.prefix('T');
_win_sel:=__smmag.mk_sel('Stany wg mag.: %1 - %2'@[M.KTM,M.N],'P',,'jsjdhfjshfseoka');
__smmag.win_fld(_win_sel,,'MAG',,,12,,,'Magazyn'@);
{? M.RODZ<>'U' || __smmag.win_fld(_win_sel,,'STAN',,,16,3,,'Stan'@) ?};
__smmag.win_act(_win_sel,0,'Formuła','&Wybierz'@@,,,,"sel_exit",1,0,,,'W');
__smmag.win_sel(_win_sel);
{? __smmag.first()
|| {? ~_c
   || {? __smmag.size()>1
      || {? __smmag.select()
         || MG.cntx_psh();
            MG.prefix();
            {? MG.seek(__smmag.RSQL) || _wyn:=MG.ref() ?};
            MG.cntx_pop()
         || _wyn:=-2
         ?}
      || MG.cntx_psh();
         MG.prefix();
         {? MG.seek(__smmag.RSQL) || _wyn:=MG.ref() ?};
         MG.cntx_pop()
      ?}
   || MG.prefix();
      MG.f_clear();
      MG.f_set('SYM');
      {? MG.f_first() || {! |? MG.f_del() !} ?};
      {!
      |? MG.cntx_psh();
         MG.prefix();
         {? MG.seek(__smmag.RSQL)
          & (~_d | (_d & MG.PAL='N' & (1+MG.TYP)='D' & exec('FindInSet','#table','SM','SM',REZ.M,MG.ref(),"SM.S",,,0)>0))
         || MG.f_add()
         ?};
         MG.cntx_pop();
         __smmag.next()
      !}
   ?}
|| _wyn:=-1
?};
__smmag.ndx_drop(_acr);
__smmag.cntx_pop();
USERS_UP.cntx_pop();
_wyn


\disp_dk_pom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: wyswietla informacje o powiazanym dokumencie magazynowym przesuniecia, kompletacja
::   WE: [_a] - bez blokowania dokumentu 1, 0-blokowanie dokumentu (domyslnie)
::  OLD: \disp_dk/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>1 || _a:=0 ?}  || _a:=0  ?};
ND.cntx_psh();
DK.cntx_psh();
FAKS.cntx_psh();
{? ref_name(ND.FAKS)<>'' || FAKS.use(ref_name(ND.FAKS)) ?};
exec('disp_dk','magdok_wspolne',1,$DK.N,,_a);
DK.cntx_pop();
ND.cntx_pop();
FAKS.cntx_pop();
''


\disp_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: wyswietlanie dokumentu magazynowego (w oknie z informacjami o naglowku dokumentu)
::       wraz z przelaczaniem opcji menu dla dokumentow magazynowych
::   WE: [_a] - czy wyswietlac opcje akceptacja / wycofanie akceptacji
::              0 - wyswietlac (domyslnie), 1 - nie wyswietlac
::              opcja pojawi sie tylko dla dokumentow w niezamknietym miesiacu
::       [_b] - ref dokumentu magazynowego w postaci sql
::              (domyslnie wartosci przyjmowane sa z tabeli ZK_RN)
::       [_c] - czy wyswietlac opcje dotyczace naglowka dokumentu wyswietl/popraw -
::              N - nie wyswietlac (domyslnie), T - wyswietlac
::              opcja popraw  pojawi sie tylko dla dokumentow w niezamknietym miesiacu
::       [_d] - blokowanie dokumentu - 0 (domyslnie), 1 - nie blokowac
::       [_e] - 0(domyślnie) okienko WER_DOK 1-okienko WER_REA
::   WY: czy dokument zaakceptowany T/N
::  OLD: \disp_dk/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>1 || _a:=0 ?}  || _a:=0  ?};
{? _>=2  || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};
{? _>=3  || {? type_of(_c)<>2 || _c:='N' ?} || _c:='N' ?};
{? _>=4  || {? type_of(_d)<>1 || _d:=0 ?}  || _d:=0  ?};
{? _>=5  || {? type_of(_e)<>1 || _e:=0 ?}  || _e:=0  ?};
_noact:={? var_pres('_f')=type_of('') || _f || '' ?};

_wyn:='';
{? _b=''
||
   _rwz:=BB.sqlint(ZK_RN.ND);
   _nwz:=8+ZK_RN.ND
||
   _rwz:=BB.sqlint(_b);
   _nwz:=8+_b
?};

ND.cntx_psh();
DK.cntx_psh();

_mask:=0;
{? ND.name()<>_nwz || _mask:=1;exec('open','open_tab',5-_nwz-2,6-_nwz) ?};

ND.prefix();
{? ND.seek(_rwz,_nwz) & exec('blok_nd','magdok_nag','T')
|| _atrmjs:=ATR.MJS;
   ATR.MJS:='DK';
   DK.fld_fml('C','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $DK.M().DOKL_C || $ST.DOKL_C ?}+','+{? ND.MAG().IL='T' || 'empty=1' || 'empty=0' ?}");
   DK.fld_fml('WAR','DISPLAY_FORMAT',"{? ND.MAG().IL='T' || 'empty=1' || 'empty=0' ?}");
   MX.index('MG');
   MX.prefix(ND.MAG);
   {? MX.first()
   || SCRP.TMG:=MX.ref()
   || SCRP.TMG:=null
   ?};

   {? _d || ND.r_unlock() ?};
   _old_ww:=BEER.WW;
   _old_mw:=BEER.MW;
   _old_lw:=BEER.LW;
   BEER.MW:='M';
   exec('ustaw_ww','eurusd','M');
   exec('ust_lw','eurusd',1);

   DISP.FAKS:=exec('zwr_symbol_fak','magdok_wspolne');
   TAZ.RAB_TYP:=ND.RAB_TYP;
   DISP.RAB:=ND.RAB;
   DISP.RABO:={? exec('czyrabp','ceny',TAZ.RAB_TYP) || '%' || ND.WAL().KOD ?};
   DISP.RABZTYP:=exec('rabztyp','ceny',TAZ.RAB_TYP);

   exec('ustawprz','magdok_poz');
   _st_mag:=ST.MAG;
   ST.MAG:=ND.MAG;
   EANX.MG:=ND.MAG;
   EANX.WYLZAL:={? EANX.MG().MWS='T' || 'N' || 'T' ?};
   SUM.WAR:=0;
   DK.index('DOKMAG');
   DK.prefix(ND.ref());
   {? DK.first() || {! |? SUM.WAR+=DK.WAR; DK.next() !} ?};
   DK.win_sel('WER_'+{? ND.MAG().MG_OPAK<>'' || 'G' || '' ?}+{? _e || 'REA' || 'DOK' ?});
   exec('dk_p_ib','magdok_poz','WER_'+{? _e || 'REA' || 'DOK' ?});
   DK_L.actions('WER','dup:d');
   exec('dkr_okna','magdok_poz',,0);
   _formikon:="{? ATR.INDATR='X'
               || ATR.INDATR:=''; 'xwin16.png:15'
               |? ATR.INDATR='N'
               || ATR.INDATR:=''; 'xwin16.png:91'
               |? ATR.INDATR='1'
               || ATR.INDATR:=''; 'xwin16.png:83'
               |? ATR.INDATR='2'
               || ATR.INDATR:=''; 'xwin16.png:184'
               |? ATR.INDATR='3'
               || ATR.INDATR:=''; 'xwin16.png:120'
               |? ATR.INDATR='4'
               || ATR.INDATR:=''; 'xwin16.png:49'
               |? ATR.INDATR='5'
               || ATR.INDATR:=''; 'xwin16.png:17'
               || ATR.INDATR:=''; ''
               ?}";
   DK.win_fml('WER',ATR,'INDATR',,'ICON_BEFORE',_formikon);
   DK.win_fml('WER_DOK',ATR,'INDATR',,'ICON_BEFORE',_formikon);
   DK.win_fml('WER_REA',ATR,'INDATR',,'ICON_BEFORE',_formikon);
   DK.win_fml('WER_KOO',ATR,'INDATR',,'ICON_BEFORE',_formikon);
   _formikon:="{? exec('FindInSet','#table','FAP_K','TAXS',DK.uidref())<>null()
               || 'xwin16.png:10'
               || exec('pusta','#icon')
               ?}";
   DK.win_fml('WER',DK,'WAR',,'ICON_BEFORE',_formikon);
   DK.win_fml('WER_DOK',DK,'WAR',,'ICON_BEFORE',_formikon);
   DK.win_fml('WER_REA',DK,'WAR',,'ICON_BEFORE',_formikon);

   _okr:=exec('czy_z_ok','okresy',1,0,ND.AR,ND.AM,ND.MAG);
   {? _a=1 | _okr=0
   || DPOZ.POZ:=0
   || DPOZ.POZ:=1
   ?};
   {? _c='N' | _okr=0
   || DPOZ.NAG:=0
   || DPOZ.NAG:=1
   ?};

   DK.select();
   _wyn:=DK.N().Z;
   DPOZ.NAG:=0;
   ST.MAG:=_st_mag;
   BEER.WW:=_old_ww;
   BEER.MW:=_old_mw;
   BEER.LW:=_old_lw;
   ATR.MJS:=_atrmjs;

   {? ~_d || ND.r_unlock() ?}
?};

{? _mask || exec('open','open_tab',ST.ODDZ,2-$(ST.AR)) ?};
DK.cntx_pop();
ND.cntx_pop();
_wyn


\szuk_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: szuka naglowka dla DK
::  OLD: \szuk_n/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ND.prefix();
ND.seek(DK.N);
ND.Z<>'T';
{? DK.M<>null
||
   POMOC.MGR:=DK.M().MGR;
   D_HELP.M:=DK.M().KTM
?};
exec('rekprzed','color','DK#01')


\sprpaldk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza pozycje realizacji pod katem dat na inwenturze
::   WE: _a - wielkosc zaznaczenia
::       _b - tablica zaznaczen
::       _c - ref palety
::       _d - data do sprawdzenia
::   WY: 1-jest OK 0-nie jest dobrze
::  OLD: \sprpaldk/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_txt:='';
_smg:='';

PAL.cntx_psh();
PAL_POZ.cntx_psh();
{? _a>0
|| _b.clear();
   {? _b.first()
   || {!
      |? {? (PAL.clear(); PAL.seek(_b.REF,))
         || PAL_POZ.index('PAL');
            PAL_POZ.prefix(PAL.ref());
            {? PAL_POZ.first()
            || {!
               |? {? PAL_POZ.ILP>0
                  || _txt:='Indeks: '+PAL_POZ.M().KTM+'.\n';
                     _wyn:=exec('sprd_inp','magazyn_inw',PAL_POZ.M,_d,ND.MAG,0,ND.T);
                     {? ~_wyn || _smg:=ND.MAG().SYM ?};
                     {? _wyn & ND.MD<>null
                     || _wyn:=exec('sprd_inp','magazyn_inw',PAL_POZ.M,_d,ND.MD,0,ND.T);
                        {? ~_wyn || _smg:=ND.MD().SYM ?}
                     ?}
                  ?};
                  _wyn & PAL_POZ.next()
               !}
            ?}
         ?};
         _wyn & _b.next()
      !}
   ?}
|| PAL_POZ.index('PAL');
   PAL_POZ.prefix(_c);
   {? PAL_POZ.first()
   || {!
      |? {? PAL_POZ.ILP>0
         || _txt:='Indeks: '+PAL_POZ.M().KTM+'.\n';
            _wyn:=exec('sprd_inp','magazyn_inw',PAL_POZ.M,_d,ND.MAG,0,ND.T);
            {? ~_wyn || _smg:=ND.MAG().SYM ?};
            {? _wyn & ND.MD<>null
            || _wyn:=exec('sprd_inp','magazyn_inw',PAL_POZ.M,_d,ND.MD,0,ND.T);
               {? ~_wyn || _smg:=ND.MD().SYM ?}
            ?}
         ?};
         _wyn & PAL_POZ.next()
      !}
   ?}
?};
PAL.cntx_pop();
PAL_POZ.cntx_pop();
{? ~_wyn & _txt<>'' & _smg<>''
|| FUN.info('Wprowadzono arkusz inwentaryzacji ciągłej dla magazynu %1,\n'
           'na którym wprowadzono indeks materiałowy.\n'@[_smg]
           +_txt
           +{? _a>0 || 'Należy zmienić datę.\nDodanie palet niemożliwe.'@
                    || 'Należy zmienić datę.\nDodanie palety niemożliwe.'@ ?})
?};
_wyn


\Get_TYPYDOK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [2011]
:: OPIS: Zwraca TYPYDOK.ref() dla domyślnego typu rozchodu na zlecenie, przychodu odpadów, raportu z produkcji, zwrotu
::   WE: _a - 'NLI', 'ODP', 'RAP', 'ZWR'
::  OLD: \Get_InMRDOK/sur_nlim.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a='NLI'
|| _fo_all:=500707;
   _fo_default:=500708
|? _a='ODP'
|| _fo_all:=500705;
   _fo_default:=500706
|? _a='RAP'
|| _fo_all:=500701;
   _fo_default:=500702
|? _a='ZWR'
|| _fo_all:=500709;
   _fo_default:=500710
|| FUN.wdrerror('Błędny parametr wywołania formuły \\Get_TYPYDOK/magdok_wspolne.fml.');
   return(null())
?};

_typydok:=null();

_typ_all:=exec('get','#params',_fo_all,2);
_typ_all:=exec('GetTabFromList','#table','TYPYDOK','T',_typ_all);
:: Jeżeli jest jeden dostępny, to on
{? _typ_all.size()=1
|| {? _typ_all.first()
   || _typydok:=exec('FindAndGet','#table',TYPYDOK,_typ_all.REF)
   ?}
:: Jeżeli więcej dostępnych, to domyślny
|? _typ_all.size()>1
|| _typ_default:=exec('get','#params',_fo_default,2);
   _typ_default:=exec('GetTabFromList','#table','TYPYDOK','T',_typ_default);
   {? _typ_default.first()
   || _typydok:=exec('FindAndGet','#table',TYPYDOK,_typ_default.REF)
   ?}
?};

_typydok


\his_dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: historia dostawy, zamowienia, faktury
::   WE: [_a] - $FAP.ref() lub $DK.ref() (wolane z tab. SC)
::              bez parametru-wywolane z pozycji dok. magazyn., z parametrem wywolane z pozycji dok. sprzed.
::              lub tabela dostaw
::       [_b] - 0(domyślnie) tryb normalny 1-do wyświetlenia na pozycji
::       [_c] - wskaznie na bieżacy dokument
::  OLD: \his_dost/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__hist')>117
|| _otab:=1;
   _ohist:=__hist;
   _ohsel:=__hsel;
   _ohprdk:=__hprdk
|| _otab:=0
?};
VAR_DEL.delete('__thist','__subpoz','__infprod');
__thist:=tab_tmp(1,'REF','STRING[16]','');
_par:=exec('get','#params',600060,1);
_rec:=#cfg_info('formula_recursion');
{? _rec>25 || _rec:=25 ?};
__subpoz:={? _par<=0 || _rec |? _par<=2 || 3 || _par ?};

__infprod:=1;
_pro:=exec('get','#params',600061,2);
{? _pro='N' | (_pro='P' & FUN.ask('Analiza powiązań dostawy z produkcją?'@))
|| __infprod:=0
?};

_set:=0;
_msk:=0;
_par:=(_=1);
_dkthis:={? var_pres('_c')=type_of('') & (+_c) || _c
         |? cur_tab()=SC & SC.PRDK<>SC.SRDK & SC.SRDK<>''
         || exec('FindAndGet','#table',DK,SC.SRDK,,"$ref()",'')
         |? cur_tab()=DK & DK.PRDK<>DK.SRDK & DK.SRDK<>''
         || exec('FindAndGet','#table',DK,DK.SRDK,,"$ref()",'')
         || ''
         ?};
{? var_pres('_a')=type_of('') & (5+_a)='dokma'
|| _msk:=1;
   _par:=0;
   ND.cntx_psh();
   DK.cntx_psh();
   SC.cntx_psh();
   DK.use(form(8+_a));
   DK.prefix();
   {? DK.seek(_a)
   || ND.use(ref_name(DK.N))
   || FUN.info('Nie znaleziono dostawy.'@);
      DK.cntx_pop();
      ND.cntx_pop();
      SC.cntx_pop();
      return(0)
   ?}
|| {? _par & var_pres('_a')<>type_of('') || _set:=1 ?}
?};
_disp:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_act_dks:=DK.actions_grayed('WER_DOK');

DISP.DISP:=1;
{? ~_set
 & {? _par
   || 5+_a='fakpo' & FAP.M().RODZ<>'T'
   || DK.M().RODZ<>'T'
   ?}
|| DISP.DISP:=0;
   FUN.info('Historia dostawy dostępna tylko dla materiału.'@);
   return
?};

VAR_DEL.delete('__nextwin');
__nextwin:=1;
_tt_ndx:=KOLIKO.ndx_tmp(,,'USER',,,'ID',,,'ID',,);
KOLIKO.index(_tt_ndx);
_dpozpoz:=DPOZ.POZ;
DPOZ.POZ:=0;
exec('his_init','magdok_wspolne');
__hprdk:='';

:: poziom zero
{? _par & ~_set
|| {? 5+_a='fakpo'
   ||
      _opis:='Materiał: '@+FAP.M().KTM+' - '+FAP.M().N+';'+' jm: '@+FAP.M().J().KOD;

      _dk_this:=sql($"select distinct DK.PRDK PRDK, DK.reference DK_REF from @DK where DK.FAP=':_a'",_a);
      _dk_tre1:=sql($"select distinct :_a.PRDK from :_a",_dk_this)
   ||
      1
   ?}
|| {? ~_set
   || __hprdk:=DK.PRDK;
      _opis:='Materiał: '@+DK.M().KTM+' - '+DK.M().N+';'+' jm: '@+DK.M().J().KOD;

      _dk_this:=sql($"select '                ' DK_REF from MG where 1=0");
      _dk_this.DK_REF:=$DK.ref();
      _dk_this.add();

      _dk_tre1:=sql($"select '                ' PRDK from MG where 1=0");
      _dk_tre1.PRDK:=DK.SRDK;
      _dk_tre1.add()
   || _a.clear();
      {? _a.first()
      || _dk_this:=sql($"select '                ' DK_REF from MG where 1=0");
         _dk_tre1:=sql($"select '                ' PRDK from MG where 1=0");
         {!
         |? _dk_this.DK_REF:=_a.REF;
            _dk_this.add();

            _dk_tre1.PRDK:=_a.REF;
            _dk_tre1.add();
            _a.next()
         !}
      ?}
   ?}
?};

:: partie produkcyjne
_dk_tre2:=sql($"select '                ' PRDK,  '                ' PARTIA from MG where 1=0");
_loop:=_dk_tre1.first() & __infprod;
{!
|? _loop
|!
   _Zpars:=sql('
      select distinct
         ZPARS.PARTIA PARTIA
      from
         @ZPARS
      where
         ZPARS.PRDK=\':_a\''
   ,_dk_tre1.PRDK);
   _loop:=_Zpars.first();
   {!
   |? _loop
   |!
      _Rp:=sql('
         select distinct
            DK.PRDK PRDK,
            DK.PARTIA PARTIA
         from
            @DK
            join @ND using(DK.N,ND.REFERENCE)
            join TYPYDOK using(ND.TYP,TYPYDOK.REFERENCE)
         where
            TYPYDOK.WYR=\'T\'
            and
            DK.PARTIA=:_a'
      ,exec('FindAndGet','#table',ZPARN,_Zpars.PARTIA,,,null()));
      _loop:=_Rp.first();
      {!
      |? _loop
      |!
         _dk_tre2.PRDK:=_Rp.PRDK;
         _dk_tre2.PARTIA:=_Rp.PARTIA;
         _loop:=_dk_tre2.add() & _Rp.next()
      !};
      &_Rp;
      _loop:=_Zpars.next()
   !};
   &_Zpars;
   _loop:=_dk_tre1.next()
!};

:: utworzenie listy dostaw
_dk_tree:=sql($"select '                ' PRDK,  '                ' PARTIA from MG where 1=0 order by 1,2");
_loop:=_dk_tre1.first();
{!
|? _loop
|!
   _dk_tree.PRDK:=_dk_tre1.PRDK;
   _loop:=_dk_tree.add() & _dk_tre1.next()
!};
_loop:=_dk_tre2.first();
{!
|? _loop
|!
   _dk_tree.PRDK:=_dk_tre2.PRDK;
   _dk_tree.PARTIA:=_dk_tre2.PARTIA;
   _loop:=_dk_tree.add() & _dk_tre2.next()
!};

:: tworzy tabele __hist dla dokumentow magazynowych
MG.cntx_psh();
ND.cntx_psh();
DK.cntx_psh();
M.cntx_psh();

_prdk:=_partia:='';
_tree_his:=null();
{! _ii:=1..2
|!
_addtree:=0;
{? _dk_tree.first()
||
   {!
   |?
      {? _prdk<>_dk_tree.PRDK
        & {? _ii=1 || _dk_tree.PARTIA='' || _dk_tree.PARTIA<>'' ?}
        & (_dk_tree.PARTIA='' | _partia='')
      || _dokument:={? _dk_tree.PARTIA='' || 'Historia dostawy'@ || 'Historia wg partii'@ ?};
         _typ:='';
         _magazyn:='';
::       _opis <- ustawiony wczesniej
         {? _set
         || _matold:=BEER.M;
            BEER.M:=exec('FindAndGet','#table',DK,_dk_tree.PRDK,,"M",null());
            _opis:={? BEER.M<>null()
                   || 'Materiał: '@+BEER.M().KTM+' - '+BEER.M().N+';'+' jm: '@+BEER.M().J().KOD
                   || ''
                   ?};
            BEER.M:=_matold
         ?};
         _plus:='';
         _rodz:='T'+{? _ii=1 || 'D' || 'P' ?};
         _this:=0;
         _dt:=date(0,0,0);
         _da:=date(0,0,0);
         _ta:=time(0,0,0);
         _pow:='';
         _kh:='';
         _dk_ref:='';
         _nd_ref:='';
         _zam_rn:='';
         _fap_ref:='';
         _faks_ref:='';
         _part_ref:='';

         _tree_ref:=exec('hist_add','magdok_wspolne',0,_dokument,_typ,_magazyn,_opis,_plus,_rodz,_this,_dt,_da,_ta
           ,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref,_faks_ref,_part_ref);
         _tree_his:=_tree_ref;
         _prdk:=_dk_tree.PRDK
      ?};

      {? _ii=2
        & _dk_tree.PARTIA<>''
        & _tree_his
        & _dk_tree.PARTIA<>_partia
      || _dokument:=exec('FindAndGet','#table',ZPARN,_dk_tree.PARTIA,,"SYM",'');
         _typ:='PARTIA';
         _magazyn:='';
         _opisPar:='Wyrób: %1; jm: %2'@
                    [exec('FindAndGet','#table',ZPARN,_dk_tree.PARTIA,,"ZL().KTM().KTM+' - '+ZL().KTM().N",''),
                     exec('FindAndGet','#table',ZPARN,_dk_tree.PARTIA,,"ZL().KTM().J().KOD",'')];
         _plus:='';
         _rodz:='X';
         _this:=0;
         _dt:=date(0,0,0);
         _da:=date(0,0,0);
         _ta:=time(0,0,0);
         _pow:='';
         _kh:='';
         _dk_ref:='';
         _nd_ref:='';
         _zam_rn:='';
         _fap_ref:='';
         _faks_ref:='';
         _part_ref:=_dk_tree.PARTIA;
         _zlec:=exec('FindAndGet','#table',ZPARN,_dk_tree.PARTIA,,"ZL().SYM",'');

         _tree_ref:=exec('hist_add','magdok_wspolne',_tree_his,_dokument,_typ,_magazyn,_opisPar,_plus,_rodz
                         ,_this,_dt,_da,_ta,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref,_faks_ref,_part_ref,_zlec);
         _partia:=_dk_tree.PARTIA
      ?};

::    DK.PRDK - refsql dokumentu pierwotnego
      {? {? _ii=1 || _dk_tree.PARTIA='' || _dk_tree.PARTIA<>'' ?}
        & _dk_tree.PRDK<>''
      ||
         DK.use(8+_dk_tree.PRDK);
         ND.use('nagdo'+((8+_dk_tree.PRDK)+3));
         DK.clear();
         ND.clear();
         {? DK.seek(_dk_tree.PRDK,8+_dk_tree.PRDK)
         ||
::          tworzy tabele __hist
            exec('his_dokm','magdok_wspolne',DK.N().MAG().SYM,DK.M().KTM,DK.RDK,DK.NDK,_tree_ref,ND.NDSQL,1)
         ?}
      ?};

      _dk_tree.next()
   !}
?}
!};

MG.cntx_pop();
ND.cntx_pop();
DK.cntx_pop();
M.cntx_pop();

:: info o biezacej/powiazanej pozycji DK
_ndx_this:=__hist.ndx_tmp(,,'RODZ',,,'DK_REF',,,'DK_REF',,);
__hist.index(_ndx_this);
{? _dk_this.first()
||
   {!
   |?
      {? _dkthis<>''
      || __hist.prefix('M',_dkthis,_dkthis)
      || __hist.prefix('M',_dk_this.DK_REF,_dk_this.DK_REF)
      ?};
      {? __hist.first() || __hist.THIS:={? _par || 2 || 1 ?}; __hist.put() ?};
      _dk_this.next()
   !}
?};
__hist.ndx_drop(_ndx_this);

:: pozostale elementy na podstawie dokumentow magazynowych
exec('his_zamd','magdok_wspolne');
exec('his_zamk','magdok_wspolne');
exec('his_fakz','magdok_wspolne','Z');
exec('his_fakz','magdok_wspolne','E');
exec('his_faks','magdok_wspolne');
:: info o biezacej pozycji FAP
{? ~_set & _par
||
   _ndx_fap:=__hist.ndx_tmp(,,'RODZ',,,'FAP_REF',,,'FAP_REF',,);
   __hist.index(_ndx_fap);
   __hist.prefix('S',_a,_a);
   {? ~_set
   || __hist.prefix('S',_a,_a);
   {? __hist.first()
   ||
      {!
      |?
         __hist.THIS:=1;
         __hist.put();
         __hist.next()
      !}
      ?}
   || _a.clear();
      {? _a.first()
      || {!
         |? __hist.prefix('S',_a.REF,_a.REF);
            {? __hist.first()
            ||
               {!
               |?
                  __hist.THIS:=1;
                  __hist.put();
                  __hist.next()
               !}
            ?};
            _a.next()
         !}
      ?}
   ?};
   __hist.ndx_drop(_ndx_fap)
?};
VAR_DEL.delete('__thist','__subpoz','__infprod');

_ndx_view:=__hist.ndx_tmp(,,'TREE_REF',,,'D',,,'DA',,,'TA',,,'POW',,1,'PLUS',,1);
__hist.index(_ndx_view);
{? ~_disp
|| __hist.select();
   {? _otab
   || VAR_DEL.delete('__hist','__hsel','__hprdk');
      __hist:=_ohist;
      __hsel:=_ohsel;
      __hprdk:=_ohprdk
   || VAR_DEL.delete('__hist','__hsel','__katalog','__hprdk','__hsub')
   ?};
   {? var_pres('_ndx_view')>0 & var_pres('__hist')>117 || __hist.ndx_drop(_ndx_view) ?};

   KOLIKO.ndx_drop(_tt_ndx);
   DPOZ.POZ:=_dpozpoz;
   VAR_DEL.delete('__nextwin')
?};
DISP.DISP:=0;


DK.actions_grayed('WER_DOK',_act_dks);
{? _msk
|| DK.cntx_pop();
   ND.cntx_pop();
   SC.cntx_pop()
?};
''


\his_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: init tabeli __hist - historia dostawy, powiazane dokumenty magazynowe
::   WE: _a - nazwa galezi glownej
::       _b - opis
::   WY: tree_ref galezi glownej
::  OLD: \his_init/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__hist','__hsel','__katalog','__hprdk','__hsub');

__hsub:=exec('get','#params',600060,1);
:: drzewko
__hist:=tab_tmp(2
   ,'TREE_REF','TREE_REF','Tree_ref'@
   ,'DOKUMENT','STRING[20]','Dokument'@
   ,'TYP','STRING[8]','Typ'@
   ,'MAGAZYN','STRING[8]','Magazyn'@
   ,'OPIS','STRING[200]','Opis'@
   ,'PLUS','STRING[2]','Plus'@
   ,'RODZ','STRING[2]','Rodzaj dokumentu'@
   ,'THIS','INTEGER','This'@
   ,'D','DATE','Data'@
   ,'DA','DATE','Data akceptacji'@
   ,'TA','TIME','Czas akceptacji'@
   ,'POW','STRING[1]','Powiązany'@
   ,'KH_SKR','STRING[10]','Skrót KH'@
   ,'DATA','STRING[10]','Data'@
   ,'DK_REF','STRING[16]','DK Ref'@
   ,'ND_REF','STRING[16]','ND Ref'@
   ,'ZAM_RN','STRING[16]','Ref nag. realizacji'@
   ,'FAP_REF','STRING[16]','FAP Ref'@
   ,'FAKS_REF','STRING[16]','FAKS Ref'@
   ,'DKC_REF','STRING[16]','DK_C Ref'@
   ,'PART_REF','STRING[16]','PARTIA Ref'@
   ,'ZLEC','STRING[20]','Zlecenie'@
   ,'IL','REAL','Ilość z dokumentu'@
   ,'PRDK','STRING[16]','dostawa'@
   ,'ROOT','STRING[1]','korzeń'
   ,'POZ','INTEGER','pozycja'
   ,'NRS','INTEGER','poziom zagłębienia'
   ,'SUB','INTEGER','podpoziom');

_icon_dok:="
   {? __katalog()
   ||
      {? __hist.PLUS='NT'
      ||
         {? __hist.tr_state()=1
         || KOLIKO.prefix(app_info('app_user'),'HD#P-','HD#P-')
         || KOLIKO.prefix(app_info('app_user'),'HD#P+','HD#P+')
         ?}
      ||
         {? __hist.tr_state()=1
         || KOLIKO.prefix(app_info('app_user'),'KAT#-','KAT#-')
         || KOLIKO.prefix(app_info('app_user'),'KAT#+','KAT#+')
         ?}
      ?}
   ||
      _pfx:='HD#'+(1+__hist.RODZ);
      KOLIKO.prefix(app_info('app_user'),_pfx,_pfx)
   ?};

   {? KOLIKO.first()
   || _icon:=KOLIKO.ICON;
      _file:=KOLIKO.FILE
   || _icon:=76;
      _file:='xwin16.png'
   ?};

   _file+':'+$_icon
";
_icon_ops:="
   {? 1+__hist.PLUS='T'
   || 'xwin16.png:27'
   |? 1+__hist.PLUS='N'
   || 'xwin16.png:28'
   || ''
   ?}
";
_view:="
   __hist.cntx_psh();
   __hist.clear();
   {? __hist.first()
   ||
      {!
      |?
         {? __hist.RODZ='M' & __hist.PLUS<>'NT' || __hist.tr_set(0,,,1) ?};
         __hist.next()
      !}
   ?};
   __hist.cntx_pop()
";
__katalog:="
   _wyn:=0;
   _hist_ref:=__hist.ref();
   _hist_sub:=__hist.SUB;
   _mag:=__hist.MAGAZYN;
   _plus:={? __hist.PLUS='T' || __hist.FAKS_REF='' & __hist.ZAM_RN='' || 0 ?};
   _ndr:=__hist.ND_REF;
   __hist.cntx_psh();
   _ndx:=__hist.ndx_tmp(,,'TREE_REF',,,'TREE_REF',,);
   __hist.index(_ndx);
   __hist.prefix(_hist_ref,_hist_ref);
   _wyn:=__hist.first();
   _build:=~_wyn & _hist_sub;
   {? ~_build & _wyn & _hist_sub
   || _build:=1;
      {! |? {? __hist.PLUS='T' & __hist.FAKS_REF='' & __hist.ZAM_RN='' || _build:=0; 0 || __hist.next() ?} !}
   ?};
   {? __hsub>2 & _build & _plus
   || VAR_DEL.delete('__thist','__subpoz');
      __thist:=tab_tmp(1,'REF','STRING[16]','');
      __subpoz:=__hist.NRS+1;
      _ktm:=exec('FindAndGet','#table',DK,__hist.DK_REF,,\"M().KTM\",'');
      _rdk:=exec('FindAndGet','#table',DK,__hist.DK_REF,,\"RDK\",'');
      _ndk:=exec('FindAndGet','#table',DK,__hist.DK_REF,,\"NDK\",'');
      exec('his_dokm','magdok_wspolne',_mag,_ktm,_rdk,_ndk,_hist_ref,_ndr,3);
      VAR_DEL.delete('__thist','__subpoz');
      __hist.prefix(_hist_ref,_hist_ref);
      _wyn:=__hist.first()
   ?};
   __hist.ndx_drop(_ndx);
   __hist.cntx_pop();
   _wyn
";
_pow_fml:=$'exec(\'his_pdok\',\'magdok_wspolne\',\"exec(\'pow_prz\',\'magdok_wspolne\')\")';
_act_fml:="
   _act:='';
   {? __hist.TREE_REF=0 || _act+='P' ?};
   {? +__hist.PLUS<>2 || _act+='I' ?};
   {? +__hist.DK_REF=0 || _act+='Z' ?};
   __hist.actions(__hsel,_act,,1);
   exec('rekprzed','color','HD#01')
";
_zalaczniki:="
   {? +__hist.DK_REF
   || DK.cntx_psh();
      DK.use(8+__hist.DK_REF);
      DK.prefix();
      {? DK.seek(__hist.DK_REF)
      || exec('dk_zalacznikidk','dokuml')
      ?};
      DK.cntx_pop()
   ?}
";
:: okienko drzewka
__hsel:=__hist.mk_sel('Historia dostaw'@,'P',,'_his_dost_tree_',,,,1,,,,,,'html_maximized');
__hist.win_fld(__hsel,,'DOKUMENT',,,25,,,'Dokument'@);
__hist.win_fld(__hsel,,'POZ',,,7,,,'Pozycja'@);
__hist.win_fld(__hsel,,'MAGAZYN',,,8,,,'Magazyn'@);
__hist.win_fld(__hsel,,'TYP',,,8,,,'Typ'@);
__hist.win_fld(__hsel,,'KH_SKR',,,10,,,'Kontrahent'@);
__hist.win_fld(__hsel,,'ZLEC',,,20,,,'Zlecenie'@);
__hist.win_fld(__hsel,,'DATA',,,10,,,'Data'@);
__hist.win_fld(__hsel,,'OPIS',,,50,,,'Opis'@);
__hist.win_act(__hsel,,'Formuła','Zwiń/&rozwiń'@@,,,,"exec('zwrw_all','#tree','__hist','TREE_REF')");
__hist.win_act(__hsel,,'Formuła','Pokaż dokument'@@,,,"exec('his_pdok','magdok_wspolne')",,1);
__hist.win_act(__hsel,,'Formuła','Pow&iązany dokument'@@,,,_pow_fml);
__hist.win_act(__hsel,,'Formuła','Załączniki'@@,,,_zalaczniki);
__hist.win_act(__hsel,,'Formuła','&Historia skrócona'@@,,,"exec('his_hakt','magdok_wspolne')");
__hist.win_act(__hsel,,'Formuła','Legenda'@@,,,"exec('his_legn','magdok_wspolne')");
__hist.win_act(__hsel,,'Rekord',,,,_act_fml);
__hist.win_act(__hsel,,'Okienko',,,,_view);
__hist.win_act(__hsel,,'Szukaj');
__hist.win_fml(__hsel,,'DOKUMENT',,'ICON_BEFORE',_icon_dok);
__hist.win_fml(__hsel,,'OPIS',,'ICON_BEFORE',_icon_ops);
__hist.fld_fml('POZ','DISPLAY_FORMAT',"{? (';MSZ'*__hist.RODZ)>1 || 'empty=0' || 'empty=1' ?}");
__hist.tr_fml(__hsel,,"{? _a || 1 || 0 ?}",__katalog);
__hist.win_sel(__hsel);
''


\his_pdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: historia dostawy - pokaz dokument
::   WE: [_a] - formula do wykonania
::  OLD: \his_pdok/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>3 || _a:="" ?} || _a:="" ?};

{? (__hist.RODZ='X' & __hist.PART_REF<>'')
 | {? __hist.RODZ='M' & __hist.DK_REF<>'' & __hist.ND_REF<>'' & __hist.PART_REF<>''
   || FUN.ask('Dokument powiązany z partią produkcyjną\n'
              'Czy pokazać informację o parti %1?'@[exec('FindAndGet','#table',ZPARN,__hist.PART_REF,,"SYM",'')])
   || 0
   ?}
||
:: partia powiązania
   exec('FindAndGet','#table',ZPARN,__hist.PART_REF,
    ,"_env:=0;
      {? var_pres('CR_ENV')=117 || _env:=1; _cr_env:=CR_ENV ?};
      exec('select_zpars','magdok_partie');
      {? _env || CR_ENV:=_cr_env ?}",~~)
|? (1+__hist.RODZ)='T'
||
:: root
   FUN.info('Wybierz jedną z pozycji historii dostawy.'@)
|? __hist.RODZ='D' & __hist.ZAM_RN<>''
||
:: zamowienie dostawy
   ZD_NAG.cntx_psh();
   ZD_POZ.cntx_psh();
   ZD_RN.cntx_psh();
   ZD_RP.cntx_psh();
   ZDP_NAG.cntx_psh();
   ZDP_POZ.cntx_psh();

   _mask:=(8+__hist.ZAM_RN)+3;
   exec('openzd','open_tab',_mask);

   ZD_RN.clear();
   {? ZD_RN.seek(__hist.ZAM_RN,8+__hist.ZAM_RN)
   ||
      ZD_NAG.clear();
      {? ZD_NAG.seek(ZD_RN.ZD_NAG)
      || exec('zd_pst','zamdst_nag');
         ZD_POZ.index('POZ');
         ZD_POZ.prefix(ZD_NAG.ref());
         ZD_POZ.first();
         ZD_POZ.win_sel('WER');
         _allact:=exec('allActions','#string','wsS');
         _aktact:=ZD_POZ.actions('WER',_allact);
         ZD_NAG.KH().KOD;
         ZD_POZ.select();
         ZD_POZ.actions('WER',_aktact)
      ?}
   ?};

   exec('openzd','open_tab',ST.ODDZ+'__');

   ZD_RP.cntx_pop();
   ZD_RN.cntx_pop();
   ZD_POZ.cntx_pop();
   ZD_NAG.cntx_pop();
   ZDP_NAG.cntx_pop();
   ZDP_POZ.cntx_pop();
   ''
|? (__hist.RODZ='K' | __hist.RODZ='W') & __hist.ZAM_RN<>''
||
:: zamowienie klienta + zamowienia wewnetrzne
   ZK_N.cntx_psh();
   ZK_P.cntx_psh();
   ZK_RN.cntx_psh();
   ZK_RP.cntx_psh();
   ZKW_N.cntx_psh();
   ZKW_P.cntx_psh();
   REZ.cntx_psh();

   _mask:=(8+__hist.ZAM_RN)+3;
   exec('openz','open_tab',_mask);

   ZK_RN.clear();
   {? ZK_RN.seek(__hist.ZAM_RN,8+__hist.ZAM_RN)
   ||
      ZK_N.clear();
      {? ZK_N.seek(ZK_RN.N)
      || BEER.ZK_N:=ZK_N.ref();
         ZK_P.index('TYPN');
         ZK_P.prefix(ZK_N.A,'Z',ZK_N.ref(),1);
         ZK_P.first();
         {? __hist.RODZ='K'
         || ZK_P.win_sel('ZAMZ');
            _allact:=exec('allActions','#string','wsS');
            _aktact:=ZK_P.actions('ZAMZ',_allact)
         || ZK_P.win_sel('ZAMW');
            _allact:=exec('allActions','#string','ws');
            _aktact:=ZK_P.actions('ZAMW',_allact)
         ?};
         ZK_P.select();
         ZK_P.actions({? __hist.RODZ='K' || 'ZAMZ' || 'ZAMW' ?},_aktact)
      ?}
   ?};

   exec('openz','open_tab',ST.ODDZ+'__');

   ZK_RP.cntx_pop();
   ZK_RN.cntx_pop();
   ZK_P.cntx_pop();
   ZK_N.cntx_pop();
   ZKW_N.cntx_pop();
   ZKW_P.cntx_pop();
   REZ.cntx_pop();
   ''
|? __hist.RODZ='M' & __hist.DK_REF<>'' & __hist.ND_REF<>''
||
:: dokument magazynowy
   FAKS.cntx_psh();
   FAP.cntx_psh();
   ND.cntx_psh();
   DK.cntx_psh();

   {?  var_pres('__hisfil')>0 & __hisfil=1 || DK.f_clear(); __hisfil:=2 ?};
   _oddz:=1+((8+__hist.ND_REF)+3);
   _rok:=(8+__hist.ND_REF)+2;
   echo('Oddział: %1; Rok: %2'@[_oddz,_rok]);
   exec('open','open_tab',_oddz,_rok);

   ND.clear();
   {? ND.seek(__hist.ND_REF,8+__hist.ND_REF)
   ||
      {? $_a=''
      ||
         SUM.WAR:=0;
         DK.index('DOKMAG');
         DK.prefix(ND.ref);
         {? DK.first()
         ||
            {!
            |?
               SUM.WAR+=DK.WAR;
               DK.next()
            !};
            DK.first
         ?};
         exec('dkr_okna','magdok_poz',,0);
         _wer:='WER_DOK';
         DK.win_fml(_wer,ATR,'INDATR',,'ICON_BEFORE',exec('icon_indatr','magdok_wspolne'));
         DK.win_sel(_wer);
         exec('dk_p_ib','magdok_poz',_wer);
         DISP.FAKS:=exec('zwr_symbol_fak','magdok_wspolne');
         DK.select()
      ||
         _a()
      ?}
   ?};

   exec('open','open_tab',ST.ODDZ,2-$(ST.AR));

   DK.cntx_pop();
   ND.cntx_pop();
   FAKS.cntx_pop();
   FAP.cntx_pop();
   ''
|? (__hist.RODZ='S' | __hist.RODZ='Z') & __hist.FAP_REF<>'' & __hist.FAKS_REF<>''
||
:: dokument sprzedazy :: dokument zakupu
   exec('fak_disp','magdok_wspolne',__hist.FAKS_REF)
||
   FUN.info('Nie znaleziono dokumentu.'@)
?};
echo();
''


\fak_disp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: wyswietla dokument sprzedazy/zakupu
::   WE: _a - $FAKS.ref refsql dokumentu
::  OLD: \fak_disp/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
exec('psh_cntx','powdok');

_rfk:=BB.sqlint(_a);
_nfk:=8+_a;

_mask:=FAKS.name<>_nfk;

{? _mask || _mask:=1; exec('open','open_tab',5-_nfk-2,6-_nfk) ?};
FAKS.clear();
{? FAKS.seek(_rfk,_nfk)
||
   BEER.SZ:=FAKS.SZ;
   exec('ustaw_ww','eurusd','F'); exec('ust_lw','eurusd',1);

   _win_sel:={? FAKS.T().KOR='N' || 'WER' || 'WERK' ?};
   FAP.win_sel(_win_sel);
   FAP.index('FAP');
   FAP.prefix(FAKS.ref);
   FAP.first();
   exec('set_efld_opt','faktury_poz');
   POMOC.LOCK:='T';
   _allact:=exec('allActions','#string','w');
   _act:=FAP.actions(_win_sel,_allact);
   FAP.select();
   FAP.actions(_win_sel,_act);
   POMOC.LOCK:=''
?};
{? _mask || exec('open','open_tab',ST.ODDZ,2-$(ST.AR)) ?};

exec('pop_cntx','powdok');
''


\pow_prz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: wyswietla informacje o powiazanym dokumencie magazynowym przesuniecia, kompletacja, korekty
::  OLD: \pow_prz/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_rdkln:=exec('FindInSet','#table','DK_LN','ZDOK',$ND.ref(),$ND.ref()))<>null
|| DK_L.win_sel('WERR');
   _act:=DK_L.actions('WERR','ZDUPG:ZDG');
   DK_L.index('DK_LN');
   DK_L.prefix('Z',_rdkln);
   DK_L.select();
   DK_L.actions('WERR',_act)
|? ND.NDSQL<>''
||
   TYPYDOK.cntx_psh();
   TYPYDOK.prefix();
   {? ND.ZL<>null()
   || VAR.A_ZLEC:=ND.ZL
   ?};
   ND.cntx_psh();
   _msk:=0;
   {? ND.NDSQL<>'' & form(8+ND.NDSQL)<>ND.name()
   ||
      _msk:=1;
      exec('open','open_tab',1+(form(8+ND.NDSQL)+3),form(8+ND.NDSQL)+2)
   ?};
   ND.prefix();
   {? ND.seek(ND.NDSQL,form(8+ND.NDSQL))
   || exec('disp_dk','magdok_wspolne',1,$ND.ref)
   ?};
   {? _msk=1
   ||
      exec('open','open_tab',ST.ODDZ,2-$ST.AR)
   ?};
   VAR.A_ZLEC:=null();
   ND.cntx_pop();

   TYPYDOK.cntx_pop()
||
   TYPYDOK.cntx_psh();
   TYPYDOK.prefix();
   {? TYPYDOK.DK='T'
   || exec('pow_kor','magdok_wspolne')
   ||
      ND.cntx_psh();
      _n_utw:=sql('select /*+INDEX(ND,MM)*/ ND.REFERENCE ref, ND.NR, ND.SYM from @ND where ND.NDSQL=\':_a\'',$ND.ref());
      {? _n_utw.first()
      || exec('disp_dk','magdok_wspolne',1,_n_utw.REF)
      || FUN.info('Brak powiązanego dokumentu\nprzesunięcia, kompletacji lub reorganizacji.'@)
      ?};
      ND.cntx_pop()
   ?};
   TYPYDOK.cntx_pop()
?};
''


\pow_kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wyswietla dokument korygowany
::   WE: [_a] 0(domyslnie)-wyswietla 1-dodaje do __powdok
::  OLD: \pow_kor/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
_ref:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_wyn:=~_a;
ND.cntx_psh();
DK.cntx_psh();

_n_utw:=sql(
   $"
   select
      ND.REFERENCE ref,
      ND.NR,
      ND.SYM
   from
      ND
   where
      ND.reference='~~'
   "
);

DK.clear;
DK.index('DOKMAG');
DK.prefix(ND.ref);
{? DK.first
||
:: wszystkie pozycje dotyczą tej samej dostawy
   _ref_kor:=DK.REF_KOR;
   {? _ref_kor<>''
   ||
      DK.cntx_psh(); ND.cntx_psh;
      DK.use(8+DK.REF_KOR);
      DK.clear();
      {? DK.seek(_ref_kor)
      ||
         ND.use(ref_name(DK.N));
         _n_utw.REF:=$DK.N;
         _n_utw.NR:=DK.N().NR;
         _n_utw.SYM:=DK.N().SYM;
         _n_utw.add
      ?};
      DK.cntx_pop(); ND.cntx_pop
   ?}
?};

{? _n_utw.first
|| {? ~_a
   || exec('disp_dk','magdok_wspolne',1,_n_utw.REF)
   || __powdok.D:=_ref;
      __powdok.C:=_n_utw.SYM;
      __powdok.X:=3;
      __powdok.PLUS:=0;
      __powdok.REF:=_n_utw.REF;
      _wyn:=__powdok.add
   ?}
|? ~_a
|| FUN.info('Brak powiązanego dokumentu korygowanego.'@)
?};

DK.cntx_pop();
ND.cntx_pop();
_wyn


\his_legn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: historia dostawy - legenda
::  OLD: \his_legn/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','HD#01','#HD#D','#HD#K','#HD#W','#HD#Z','#HD#S','#HD#M','#HD#P-','#HD#X')


\hist_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: dodaje pozycje tabeli __hist - historia dostawy, powiazane dokumenty magazynowe
::   WE: _a - tree_ref
::       _b - dokument
::       _c - typ
::       _d - magazyn
::       _e - opis
::       _f - plus
::       _g - rodzaj dokumentu
::            (T-tree, M-dok. magazyn., K-zam. klienta, D-zam.dostawy, S-dok. sprzedazy, Z-dok. zakupu, P-partia)
::       _h - this
::       _i - data
::       _j - data akceptacji
::       _k - czas akceptacji
::       _l - powiazany
::       _m - kontrahent skrot
::       _n - $DK.ref
::       _o - $ND.ref
::       _p - refsql powiazanego naglowka realizacji
::       _q - refsql powiazanej pozycji FAP
::       _r - refsql powiazanej faktury FAKS
::       [_s] - refsql powiazanej parti produkcyjnej
::       [_t] - symbol zlecenia produkcyjnego
::       [_u] - ilość z dokumentu
::       [_v] - wskazanie na dostawę
::  OLD: \hist_add/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
_part_ref:={? var_pres('_s')=type_of('') || _s || '' ?};
    _zlec:={? var_pres('_t')=type_of('') || _t || '' ?};
   _ildok:={? var_pres('_u')=type_of(0)  || _u || 0 ?};
    _prdk:={? var_pres('_v')=type_of('') || _v || '' ?};
     _poz:={? var_pres('_w')=type_of(0)  || _w || 0 ?};

_refhist:=null();
__hist.cntx_psh();
_ndx:=__hist.ndx_tmp(,,'TREE_REF',,,'TREE_REF',,);
__hist.index(_ndx);
__hist.prefix(_a,_a);
{? __hist.first() & __hist.find_tab('first','DOKUMENT',,'=',_b,'DK_REF',,'=',_n,'FAP_REF',,'=',_q)
|| _refhist:=__hist.ref()
?};
__hist.ndx_drop(_ndx);
__hist.prefix();
__hist.TREE_REF:=_a;
__hist.DOKUMENT:=_b;
__hist.TYP:=_c;
__hist.MAGAZYN:=_d;
__hist.OPIS:=_e;
__hist.PLUS:=_f;
__hist.RODZ:=_g;
__hist.THIS:=_h;
__hist.D:=_i;
__hist.DATA:={? _i<>date(0,0,0) || $_i || '' ?};
__hist.DA:=_j;
__hist.TA:=_k;
__hist.POW:=_l;
__hist.KH_SKR:=_m;
__hist.DK_REF:=_n;
__hist.ND_REF:=_o;
__hist.ZAM_RN:=_p;
__hist.FAP_REF:=_q;
__hist.FAKS_REF:=_r;
__hist.PART_REF:=_part_ref;
__hist.ZLEC:=_zlec;
__hist.IL:=_ildok;
__hist.PRDK:=_prdk;
__hist.POZ:=_poz;
__hist.NRS:={? __hist.TREE_REF<>null()
            || exec('FindAndGet','#table',__hist,__hist.TREE_REF,,"NRS",0)+1
            || 0
            ?};
__hist.SUB:=0;
_wyn:={? _refhist<>null()
      || _refhist
      || {? ({? __hist.PLUS='T' || __hist.NRS<__subpoz || __hist.NRS<=__subpoz ?}
            | __hist.FAKS_REF<>'' | __hist.ZAM_RN<>'')
           & __hist.add()
         || __hist.ref()
         || null
         ?}
      ?};
{? __hist.TREE_REF<>null()
|| exec('FindAndGet','#table',__hist,__hist.TREE_REF,,"SUB:=1;put(1)",0)
?};
__hist.cntx_pop();
_wyn


\his_dokm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: generowanie tabeli __hist - historia dostawy, powiazane dokumenty magazynowe
::   WE: _a - magazyn
::       _b - material
::       _c - RDK
::       _d - NDK
::       _e - nadrzedne TREE_REF
::       _f - $ND.ref()
::       _g - 0 - rekurencja, 1 - pierwsze wywołanie, 2 - bez histori kwalifikacji, -1 - 0 ale z ilością poprzednią
::            3 - rekurencja dla gałęzi
::   WY: TREE_REF biezacej galezi
::  OLD: \his_dokm/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_f')<>type_of('') || _f:='' ?};

_oddz:=1+(_d+3);
_tree_ref:=null;
_hist_ref:=_e;

_noadd:={? _g=3 || _g:=0; 1 || 0 ?};
_infilp:=_g<>0;
{? _g<0 || _g:=0 ?};
_dost_ref:=exec('FindAndGet','#table',DK,_c,_d,"$ref()",'');
{? _dost_ref<>''
|| __thist.clear();
   __thist.prefix(_dost_ref,);
   {? ~__thist.first()
   || __thist.blank();
      __thist.REF:=_dost_ref;
      __thist.add(1)
   ?}
?};

ND.cntx_psh();
DK.cntx_psh();
DK_HS.cntx_psh();
__hist.cntx_psh();
__hist.clear();

_ok:=1;

MG.index('MAGAZYNY');
MG.prefix(_a,_a);
{? MG.first()
|| _mag:=MG.ref()
|| _ok:=0
?};

M.index('MATKTM');
M.prefix(_b,_b);
{? M.first()
|| _mat:=M.ref()
|| _ok:=0
?};

OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? _ok=1 & OKR.first()
||
   {!
   |?
      ND.use('nagdo'+_oddz+($OKR.ROK+2));
      DK.use('dokma'+_oddz+($OKR.ROK+2));
      DK_HS.use('dokhs'+_oddz+($OKR.ROK+2));
      DK.index('DK_SC');
      DK.prefix(_mag,_mat,_c,_d);
      {? DK.first()
      ||
         {!
         |? {? DK.N().Z='T' | (DK.N().TYP().DK='T' & DK.N().TYP().Z='T')
            ||
               _dokument:=DK.N().SYM;
               _typ:=DK.N().TYP().T;
               _magazyn:=DK.N().MAG().SYM;
               _ilz:=0;
               {? _infilp
               ||
                  _ilpp:=0;
                  DK_HS.cntx_psh();
                  DK_HS.index('DK');
                  DK_HS.prefix(DK.ref());
                  {? DK_HS.first() & DK_HS.SRC_SQL<>''
                  || DK_HS.index('DK');
                     DK_HS.prefix(exec('FindAndGet','#table',DK,DK_HS.SRC_SQL,,,null()));
                     {? DK_HS.first() || _ilz+=DK_HS.IL ?}
                  ?};
                  _prdk:=DK.PRDK;
                  {? _prdk<>''
                  || DK.cntx_psh();
                     DK.use(8+_prdk);
                     DK.prefix();
                     {? DK.seek(_prdk)
                     || DK_HS.use('dokhs'+(8+DK.PRDK+3));
                        DK_HS.index('DK');
                        DK_HS.prefix(DK.ref());
                        _loop:=DK_HS.first();
                        {!
                        |? _loop
                        |!
                           {? DK_HS.KIND='N'
                           ||
                              _ilpp:=DK_HS.IL;
                              _loop:=0
                           ||
                              _loop:=DK_HS.next()
                           ?}
                        !}
                     ?};
                     DK.cntx_pop()
                  ?};
                  DK_HS.cntx_pop()
               ?};
               _opis:='Ilość:'+form(DK.IL,15,3)
                  +{? +form(DK.N().O) || ' - '+DK.N().O || '' ?}
                  +{? _infilp & DK.PLUS='T' & ((_ilz<>0 & _ilz<>DK.IL) | (_ilpp<>0 & _ilpp<>DK.IL))
                   || '; Ilość przed podziałem: '+
                      {? _ilz<>0 & _ilz<>_ilpp
                      || form(_ilz,15,3)+{? _ilpp>0 || '  pierwotna: '+form(_ilpp,15,3) || '' ?}
                      || form(_ilpp,15,3)
                      ?}
                   || ''
                   ?};
               _plus:=DK.PLUS;
               _rodz:='M';
               _this:=0;
               _dt:=DK.N().D;
               _da:=DK.N().DA;
               _ta:=DK.N().TA;
               _pow:=DK.POW;
               _kh:=DK.N().KH().SKR;
               _dk_ref:=$DK.ref();
               _nd_ref:=$DK.N;
               _zam_rn:=DK.ZAM_RN;
               _fap_ref:=DK.FAP;
               _faks_ref:=DK.N().FAKS_REF;
               _part_ref:=$DK.PARTIA;
               _zlec:={? DK.ZL<>null() || DK.ZL().SYM || '' ?};
               _tree_ref:={? _noadd & 0
                          || _hist_ref
                          || exec('hist_add','magdok_wspolne',_hist_ref,_dokument,_typ,_magazyn,_opis,_plus,_rodz,_this
                              ,_dt,_da,_ta,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref
                              ,_faks_ref,_part_ref,_zlec,DK.IL,DK.PRDK,DK.P)
                          ?};
               {? DK.N().NDSQL<>'' | ND.TYP().TD<>''
               ||
                  {? DK.PLUS='N'
                  ||
::                   przesuniecie magazynowe (typu MM) -> szuka MP

                     _qq:=$"
                        select
                           MG.SYM Magazyn,
                           M.KTM Indeks,
                           DK.RDK RDK,
                           DK.NDK NDK,
                           DK.SRDK SRDK
                        from
                           @DK
                           join @ND using (DK.N,ND.reference)
                           join MG using (ND.MAG,MG.reference)
                           join TYPYDOK using (ND.TYP,TYPYDOK.reference)
                           join M using (DK.M,M.reference)
                        where
                           TYPYDOK.T=':_a'
                           and DK.PRDK=':_b'
                           and ND.NDSQL=':_c'
                           and DK.P=:_d
                     ";
::                     {! _xx:=1..1000
::                     |! _mp:=sql(_qq,DK.N().TYP().TD,{? DK.M().SETW='P' || DK.SRDK || DK.PRDK ?},$DK.N,DK.P);
::                        obj_del(_mp)
::                     !};
                     _mp:=sql(_qq,DK.N().TYP().TD,{? DK.M().SETW='P' || DK.SRDK || DK.PRDK ?},$DK.N,DK.P);
::                     {! _xx:=1..1000
::                     |! _mp:=exec('tabFIND','magdok_wspolne',1);
::                        obj_del(_mp)
::                     !};
::                     _mp:=exec('tabFIND','magdok_wspolne',1);

::                info o przesunieciu
                     __hist.cntx_psh();
                     __hist.clear();
                     {? (_mp.clear(); _mp.first()) & __hist.seek(_tree_ref)
                     ||
                        __hist.PLUS:='NT';
                        __hist.put()
                     ?};
                     __hist.cntx_pop();
::                rekurencyjne wywolanie - nowe MAGAZYN, RDK, NDK
                     _mp.clear();
                     {? _mp.first()
                     || {!
                        |? _rdk:=BB.sqlint(_mp.SRDK);
                           _ndk:=8+_mp.SRDK;
                           _ndsql:={? DK.N().NDSQL<>'' || DK.N().NDSQL || '' ?};
                           exec('his_dokm','magdok_wspolne',_mp.MAGAZYN,_mp.INDEKS,_rdk,_ndk,_tree_ref,_ndsql,0);
                           _mp.next()
                        !}
                     ?};
                     &_mp
                  ||
::                   info o przesunieciu
                     __hist.cntx_psh();
                     __hist.clear();
                     {? __hist.seek(_tree_ref)
                     ||
                        __hist.PLUS:='TN';
                        {? __hist.put()
                        ||
                           {? _f<>''
                           ||
                              DK.cntx_psh();
                              DK.use((DK.name()-3)+(8+_f+3));
                              DK.index('DOKMAG');
                              DK.prefix(BB.sqlint(_f),DK.P);
                              {? DK.first()
                              ||
                                 _rdk:=BB.sqlint(DK.SRDK);
                                 _ndk:=8+DK.SRDK;
                                 _mg:=exec('FindAndGet','#table',ND,_f,,"ND.MAG().SYM",'');
                                 _ndsql:=exec('FindAndGet','#table',DK,DK.SRDK,
                                       ,"ND.cntx_psh();ND.use('nagdo'+(name()+3));_rr:=N().NDSQL;ND.cntx_pop();_rr",'');
                                 exec('his_dokm','magdok_wspolne',_mg,_b,_rdk,_ndk,_tree_ref,_ndsql,0)
                              ?};
                              DK.cntx_pop()

                           ?}
                        ?}
                     ?};
                     __hist.cntx_pop()
                  ?}
               ?};
               DK_HS.index('DK');
               DK_HS.prefix(DK.ref());
               _loop:=_g<>2 & DK_HS.first();
               {!
               |? _loop
               |!
                  {? DK_HS.KIND='P'
                  ||
                     exec('his_dokm','magdok_wspolne',_a,_b,DK_HS.SRC_RDK,DK_HS.SRC_NDK,_tree_ref,,-1);
                     _loop:=0
                  ||
                     _loop:=DK_HS.next()
                  ?}
               !};
               {? DK.PLUS='T' & DK.PRDK=DK.SRDK
               || _nd:=DK.N;
                  _prdk:=DK.PRDK;
                  _dkref:=$DK.ref();
                  ND.cntx_psh();
                  DK.cntx_psh();
                  DK.index('PRDK');
                  DK.prefix(_prdk,);
                  {? DK.first()
                  || {!
                     |? {? DK.N=_nd & DK.PRDK<>DK.SRDK & $DK.ref()<>_dkref
                        || exec('his_dokm','magdok_wspolne',DK.N().MAG().SYM,DK.M().KTM,DK.RDK,DK.NDK
                               ,_hist_ref,ND.NDSQL,2)
                        ?};
                        DK.next()
                     !}
                  ?};
                  ND.cntx_pop();
                  DK.cntx_pop()
               ?};
::             partie dla rozchodu lub dostawy wg RP
               {? DK.PLUS='N' & DK.N().TYP().WYR='N' & __infprod
               || _nd:=DK.N;
                  _prdk:=DK.PRDK;
                  _dkref:=$DK.ref();
                  _zparn:=tab_tmp(1,'SQL','STRING[16]','');
                  _rappr:=tab_tmp(1,'PRDK','STRING[16]','','PARTIA','STRING[16]','','ZL','STRING[20]','');
                  _zwwew:=tab_tmp(1,'PRDK','STRING[16]','','PARTIA','STRING[16]','','ZL','STRING[20]','');
                  ZPARS.cntx_psh();
                  ND.cntx_psh();
                  DK.cntx_psh();
                  ZPARS.index('SQLDOK');
                  ZPARS.prefix(_dkref,);
                  {? ZPARS.first()
                  || {!
                     |? {? ZPARS.PARTIA<>null() & (_zparn.prefix($ZPARS.PARTIA); ~_zparn.first())
                        || _zparn.blank();
                           _zparn.SQL:=$ZPARS.PARTIA;
                           _zparn.add(1)
                        ?};
                        ZPARS.next()
                     !}
                  |? DK.ZL<>null()
                  ||
::                   rozchód bez partii szuka RP w gałęziach nadrzędnych
                     ZL.cntx_psh();
                     _zlec:=DK.ZL;
                     _next:=1;
                     {!
                     |? obj_del(_rappr);
                        _rappr:=sql('select distinct
                                   ZL.SYM ZLSYM,
                                   DK.PRDK PRDK,
                                   DK.PARTIA PARTIA,
                                   DK.REFERENCE REF,
                                   ND.SYM NDSYM
                                 from @DK
                                   join @ND using(DK.N,ND.REFERENCE)
                                   join TYPYDOK using(ND.TYP,TYPYDOK.REFERENCE)
                                   join ZL using(DK.ZL,ZL.REFERENCE)
                                 where
                                   TYPYDOK.WYR=\'T\'
                                   and TYPYDOK.P=\'T\'
                                   and ND.Z=\'T\'
                                   and DK.PRDK=DK.REFERENCE
                                   and DK.ZL=:_a'
                                 ,_zlec);
                        {? _rappr.first()
                        || {!
                           |? {? (__thist.clear(); __thist.prefix(_rappr.REF); __thist.first())
                              || _rappr.del()
                              || _rappr.next()
                              ?}
                           !}
                        ?};
                        {? _rappr.first()
                        || _next:=0
                        || _unrzl:=exec('FindAndGet','#table',ZL,_zlec,,"{? NRPZL=0 || NRNZL || NRPZL ?}",0);
                           {? _unrzl=0
                           || _next:=0
                           || _zlec:=exec('FindInSet','#table','ZL','UNRZL',_unrzl,,,,,null());
                              {? _zlec=null() || _next:=0 ?}
                           ?}
                        ?};
                        _next
                     !};
                     ZL.cntx_pop()
                  ?};
                  {? DK.ZL<>null() & DK.N().TYP().WYR='N'
                  ||
::                   rozchód bez partii szuka RP w gałęziach nadrzędnych
                     ZL.cntx_psh();
                     _zlec:=DK.ZL;
                     _mat:=DK.M;
                     obj_del(_zwwew);
                     _zwwew:=sql('select distinct
                                ZL.SYM ZLSYM,
                                DK.PRDK PRDK,
                                DK.PARTIA PARTIA,
                                DK.REFERENCE REF,
                                ND.SYM NDSYM
                              from @DK
                                join @ND using(DK.N,ND.REFERENCE)
                                join TYPYDOK using(ND.TYP,TYPYDOK.REFERENCE)
                                join ZL using(DK.ZL,ZL.REFERENCE)
                              where
                                TYPYDOK.WYR=\'N\'
                                and TYPYDOK.ZLEC=\'T\'
                                and TYPYDOK.Z=\'N\'
                                and TYPYDOK.P=\'T\'
                                and ND.Z=\'T\'
                                and DK.ZL=:_a
                                and DK.M=:_b'
                              ,_zlec,_mat);
                     {? _zwwew.first()
                     || {!
                        |? {? (__thist.clear(); __thist.prefix(_zwwew.REF); __thist.first())
                           || _zwwew.del()
                           || _zwwew.next()
                           ?}
                        !}
                     ?};
                     ZL.cntx_pop()
                  ?};
                  _refs:=_tree_ref;
                  _zparn.clear();
                  {? _zparn.first()
                  || {!
                     |? _dokument:=exec('FindAndGet','#table',ZPARN,_zparn.SQL,,"SYM",'');
                        _magazyn:='';
                        _opisPar:='Wyrób: %1; jm: %2'@
                          [exec('FindAndGet','#table',ZPARN,_zparn.SQL,,"ZL().KTM().KTM+' - '+ZL().KTM().N",''),
                           exec('FindAndGet','#table',ZPARN,_zparn.SQL,,"ZL().KTM().J().KOD",'')];
                        _typ:='PARTIA';
                        _plus:='';
                        _rodz:='X';
                        _this:=0;
                        _dt:=date(0,0,0);
                        _da:=date(0,0,0);
                        _ta:=time(0,0,0);
                        _pow:='';
                        _kh:='';
                        _dk_ref:='';
                        _nd_ref:='';
                        _zam_rn:='';
                        _fap_ref:='';
                        _faks_ref:='';
                        _part_ref:=_zparn.SQL;
                        _zlec:=exec('FindAndGet','#table',ZPARN,_zparn.SQL,,"ZL().SYM",'');

                        _tree_ref:=exec('hist_add','magdok_wspolne',_refs,_dokument,_typ,_magazyn,_opisPar,_plus,_rodz
                         ,_this,_dt,_da,_ta,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref,_faks_ref,_part_ref,_zlec,,_prdk);
                        _Rp:=sql('select distinct
                                    DK.PRDK PRDK,
                                    DK.PARTIA PARTIA
                                 from @DK
                                   join @ND using(DK.N,ND.REFERENCE)
                                   join TYPYDOK using(ND.TYP,TYPYDOK.REFERENCE)
                                 where
                                   ND.Z=\'T\' and TYPYDOK.WYR=\'T\' and DK.PARTIA=:_a'
                             ,exec('FindAndGet','#table',ZPARN,_zparn.SQL,,,null()));
                        _Rp.clear();
                        {? _Rp.first()
                        || {!
                           |? _msk:=form(8+_Rp.PRDK)+3;
                              ND.cntx_psh();
                              DK.cntx_psh();
                              ND.use('nagdo'+_msk);
                              DK.use('dokma'+_msk);
                              DK.prefix();
                              {? DK.seek(_Rp.PRDK)
                              || exec('his_dokm','magdok_wspolne',DK.N().MAG().SYM,DK.M().KTM,DK.RDK,DK.NDK
                                ,_tree_ref,ND.NDSQL,1)
                              ?};
                              ND.cntx_pop();
                              DK.cntx_pop();
                              _Rp.next()
                           !}
                        ?};
                        obj_del(_Rp);
                        _zparn.next()
                     !}
                  ?};
                  _rappr.clear();
                  {? _rappr.first()
                  || {!
                     |? _dokument:=_rappr.NDSYM;
                        _magazyn:='';
                        _opisPar:='Wyrób: %1; jm: %2'@
                          [exec('FindAndGet','#table',DK,_rappr.PRDK,,"M().KTM+' - '+M().N",''),
                           exec('FindAndGet','#table',DK,_rappr.PRDK,,"M().J().KOD",'')];
                        _typ:='RAPORT';
                        _plus:='';
                        _rodz:='X';
                        _this:=0;
                        _dt:=date(0,0,0);
                        _da:=date(0,0,0);
                        _ta:=time(0,0,0);
                        _pow:='';
                        _kh:='';
                        _dk_ref:='';
                        _nd_ref:='';
                        _zam_rn:='';
                        _fap_ref:='';
                        _faks_ref:='';
                        _part_ref:=_rappr.PARTIA;
                        _zlec:=_rappr.ZLSYM;

                        _tree_ref:=exec('hist_add','magdok_wspolne',_refs,_dokument,_typ,_magazyn,_opisPar,_plus,_rodz
                         ,_this,_dt,_da,_ta,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref,_faks_ref,_part_ref,_zlec,,_prdk);
                        _rappr.clear();
                        {? _tree_ref
                        || __thist.clear();
                           __thist.prefix(_rappr.REF,);
                           {? ~__thist.first()
                           || __thist.blank();
                              __thist.REF:=_rappr.REF;
                              __thist.add(1)
                           ?};
                           _msk:=form(8+_rappr.PRDK)+3;
                           ND.cntx_psh();
                           DK.cntx_psh();
                           ND.use('nagdo'+_msk);
                           DK.use('dokma'+_msk);
                           DK.prefix();
                           {? DK.seek(_rappr.PRDK)
                           || exec('his_dokm','magdok_wspolne',DK.N().MAG().SYM,DK.M().KTM,DK.RDK,DK.NDK
                               ,_tree_ref,ND.NDSQL,1)
                           ?};
                           ND.cntx_pop();
                           DK.cntx_pop()
                        ?};
                        _rappr.next()
                     !};
                     {? _rappr.first()
                     || {!
                        |? __thist.clear();
                           __thist.prefix(_rappr.REF,);
                           {? __thist.first()
                           || __thist.del()
                           ?};
                           _rappr.next()
                        !}
                     ?}
                  ?};
                  _zwwew.clear();
                  {? _zwwew.first()
                  || {!
                     |? _dokument:=_zwwew.NDSYM;
                        _magazyn:='';
                        _opisPar:='Wyrób: %1; jm: %2'@
                          [exec('FindAndGet','#table',DK,_zwwew.PRDK,,"M().KTM+' - '+M().N",''),
                           exec('FindAndGet','#table',DK,_zwwew.PRDK,,"M().J().KOD",'')];
                        _typ:='ZWROT';
                        _plus:='';
                        _rodz:='X';
                        _this:=0;
                        _dt:=date(0,0,0);
                        _da:=date(0,0,0);
                        _ta:=time(0,0,0);
                        _pow:='';
                        _kh:='';
                        _dk_ref:='';
                        _nd_ref:='';
                        _zam_rn:='';
                        _fap_ref:='';
                        _faks_ref:='';
                        _part_ref:=_zwwew.PARTIA;
                        _zlec:=_zwwew.ZLSYM;

                        _tree_ref:=exec('hist_add','magdok_wspolne',_refs,_dokument,_typ,_magazyn,_opisPar,_plus,_rodz
                         ,_this,_dt,_da,_ta,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref,_faks_ref,_part_ref,_zlec,,_prdk);
                        _zwwew.clear();
                        {? _tree_ref
                        || __thist.clear();
                           __thist.prefix(_zwwew.REF,);
                           {? ~__thist.first()
                           || __thist.blank();
                              __thist.REF:=_zwwew.REF;
                              __thist.add(1)
                           ?};
                           _msk:=form(8+_zwwew.PRDK)+3;
                           ND.cntx_psh();
                           DK.cntx_psh();
                           ND.use('nagdo'+_msk);
                           DK.use('dokma'+_msk);
                           DK.prefix();
                           {? DK.seek(_zwwew.PRDK)
                           || exec('his_dokm','magdok_wspolne',DK.N().MAG().SYM,DK.M().KTM,DK.RDK,DK.NDK
                               ,_tree_ref,ND.NDSQL,1)
                           ?};
                           ND.cntx_pop();
                           DK.cntx_pop()
                        ?};
                        _zwwew.next()
                     !};
                     {? _zwwew.first()
                     || {!
                        |? __thist.clear();
                           __thist.prefix(_zwwew.REF,);
                           {? __thist.first()
                           || __thist.del()
                           ?};
                           _zwwew.next()
                        !}
                     ?}
                  ?};
                  obj_del(_zparn);
                  obj_del(_rappr);
                  obj_del(_zwwew);
                  ZPARS.cntx_pop();
                  ND.cntx_pop();
                  DK.cntx_pop()
               ?}
            ?};

            DK.next()
         !}
      ?};
      OKR.next()
   !}
?};
OKR.cntx_pop();

__hist.cntx_pop();
DK_HS.cntx_pop();
DK.cntx_pop();
ND.cntx_pop();
{? _dost_ref<>''
|| __thist.clear();
   __thist.prefix(_dost_ref,);
   {? __thist.first()
   || __thist.del()
   ?}
?};

_tree_ref


\his_zamd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: __hist - zamowienia dostaw
::  OLD: \his_zamd/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
ZD_POZ.cntx_psh();
ZD_NAG.cntx_psh();
ZD_RP.cntx_psh();
ZD_RN.cntx_psh();

_ndx:=__hist.ndx_tmp(,,'RODZ',,,'PLUS',,,'D',,,'DA',,,'TA',,,'POW',,1,'PLUS',,1);
__hist.index(_ndx);
__hist.prefix('M','T');
{? __hist.first()
||
   {!
   |?
      {? __hist.ZAM_RN<>'' & 5+__hist.ZAM_RN='zdhin'
      ||
         _msk:=(8+__hist.ZAM_RN)+3;
         ZD_NAG.use('zdnag'+_msk);
         ZD_POZ.use('zdpoz'+_msk);
         ZD_RN.use('zdhin'+_msk);
         ZD_RP.use('zdhip'+_msk);
         ZD_RN.clear();
         {? ZD_RN.seek(__hist.ZAM_RN,8+__hist.ZAM_RN)
         ||
            _dokument:=ZD_RN.ZD_NAG().SYM;
            _typ:=ZD_RN.ZD_NAG().T().T;
            _magazyn:=ZD_RN.MG().SYM;
            _opis:='Zamówienie dostawy. '@+ZD_RN.ZD_NAG().ZAM_DST;
            _plus:='';
            _rodz:='D';
            _this:=0;
            _dt:=ZD_RN.ZD_NAG().DATA;
            _da:=ZD_RN.DR;
            _ta:=ZD_RN.CR;
            _pow:='';
            _kh:=ZD_RN.ZD_NAG().KH().SKR;
            _dk_ref:='';
            _nd_ref:='';
            _zam_rn:=$ZD_RN.ref();
            _fap_ref:='';
            _faks_ref:='';
            _part_ref:='';
            exec('hist_add','magdok_wspolne',__hist.ref(),_dokument,_typ,_magazyn
            ,_opis,_plus,_rodz,_this,_dt,_da,_ta,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref,_faks_ref,_part_ref)
         ?}
      ?};
      __hist.next()
   !}
?};
__hist.ndx_drop(_ndx);

ZD_RN.cntx_pop();
ZD_RP.cntx_pop();
ZD_NAG.cntx_pop();
ZD_POZ.cntx_pop();
''


\his_zamk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: __hist - zamowienia klientow
::  OLD: \his_zamk/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_P.cntx_psh();
ZK_N.cntx_psh();
ZK_RP.cntx_psh();
ZK_RN.cntx_psh();

_ndx:=__hist.ndx_tmp(,,'RODZ',,,'PLUS',,,'D',,,'DA',,,'TA',,,'POW',,1,'PLUS',,1);
__hist.index(_ndx);
__hist.prefix('M','N');
{? __hist.first()
||
   {!
   |?
      {? __hist.ZAM_RN<>'' & 5+__hist.ZAM_RN='zkhin'
      ||
         _msk:=(8+__hist.ZAM_RN)+3;
         ZK_N.use('zknag'+_msk);
         ZK_P.use('zkpoz'+_msk);
         ZK_RN.use('zkhin'+_msk);
         ZK_RP.use('zkhip'+_msk);
         ZK_RN.clear();
         {? ZK_RN.seek(__hist.ZAM_RN,8+__hist.ZAM_RN)
         ||
            _dokument:=ZK_RN.N().SYM;
            _typ:=ZK_RN.N().T().T;
            _magazyn:=ZK_RN.MG().SYM;
            _opis:=
               {? ZK_RN.N().T().R='Z'
               || 'Zamówienie klienta. '@+ZK_RN.N().ZAM_KL
               || 'Zamówienie wewnętrzne. '@+ZK_RN.N().ZAM_KL
               ?};
            _plus:='';
            _rodz:={? ZK_RN.N().T().R='Z' || 'K' || 'W' ?};
            _this:=0;
            _dt:=ZK_RN.N().DP;
            _da:=ZK_RN.DR;
            _ta:=ZK_RN.TR;
            _pow:='';
            _kh:=ZK_RN.N().KH().SKR;
            _dk_ref:='';
            _nd_ref:='';
            _zam_rn:=$ZK_RN.ref();
            _fap_ref:='';
            _faks_ref:='';
            _part_ref:='';
            exec('hist_add','magdok_wspolne',__hist.ref(),_dokument,_typ,_magazyn
                 ,_opis,_plus,_rodz,_this,_dt,_da,_ta,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref,_faks_ref,_part_ref)
         ?}
      ?};
      __hist.next()
   !}
?};
__hist.ndx_drop(_ndx);

ZK_RN.cntx_pop();
ZK_RP.cntx_pop();
ZK_N.cntx_pop();
ZK_P.cntx_pop();
''


\his_fakz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: __hist - dokumenty zakupu
::   WE: _a - rodzaj dokumentu Z-zakup E-wewnetrzna
::  OLD: \his_fakz/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
FAP.cntx_psh();
FAKS.cntx_psh();

_ndx:=__hist.ndx_tmp(,,'RODZ',,,'PLUS',,,'D',,,'DA',,,'TA',,,'POW',,1,'PLUS',,1);
__hist.index(_ndx);
__hist.prefix('M');
{? __hist.first()
||
   {!
   |?
      FAP2DK.index('DK');
      FAP2DK.prefix(_a,__hist.DK_REF);
      {? FAP2DK.first()
      || {!
         |?
            _msk:=(8+FAP2DK.FAP)+3;
            FAKS.use('faktu'+_msk);
            FAP.use(8+FAP2DK.FAP);
            FAP.clear();
            {? FAP.seek(FAP2DK.FAP,8+FAP2DK.FAP) & FAP.FAKS().SZ='Z'
            ||
               _dokument:=FAP.FAKS().SYM;
               _typ:=FAP.FAKS().T().T;
               _magazyn:='';
               _opis:={? _a='Z' || 'Dokument zakupu. '@ || 'Faktura wewnętrzna. '@ ?};
               _plus:='';
               _rodz:=FAP.FAKS().SZ;
               _this:=0;
               _dt:=FAP.FAKS().DW;
               _da:=FAP.FAKS().DR;
               _ta:=FAP.FAKS().CR;
               _pow:='';
               _kh:=FAP.FAKS().KH().SKR;
               _dk_ref:='';
               _nd_ref:='';
               _zam_rn:='';
               _fap_ref:=$FAP.ref();
               _faks_ref:=$FAP.FAKS;
               _part_ref:='';
               exec('hist_add','magdok_wspolne',__hist.ref(),_dokument,_typ,_magazyn,_opis,_plus,_rodz,_this,_dt,_da
                 ,_ta,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref,_faks_ref,_part_ref,,,,FAP.POZ)
            ?};

            FAP2DK.next()
         !}
      ?};
      __hist.next()
   !}
?};
__hist.ndx_drop(_ndx);

FAKS.cntx_pop();
FAP.cntx_pop();
''


\his_faks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: __hist - dokumenty sprzedazy
::  OLD: \his_faks/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
FAP.cntx_psh();
FAKS.cntx_psh();

_ndx:=__hist.ndx_tmp(,,'RODZ',,,'PLUS',,,'D',,,'DA',,,'TA',,,'POW',,1,'PLUS',,1);
__hist.index(_ndx);
__hist.prefix('M');
{? __hist.first()
||
   {!
   |? _fakref:=exec('FindAndGet','#table',ND,__hist.ND_REF,,"{? TYP().DK='T' & TYP().Z='T' || FAKS_REF || '' ?}");
      _prdk:=__hist.PRDK;
      {? _fakref='' & __hist.FAP_REF<>''
      ||
         _msk:=(8+__hist.FAP_REF)+3;
         FAKS.use('faktu'+_msk);
         FAP.use(8+__hist.FAP_REF);
         FAP.clear();
         {? FAP.seek(__hist.FAP_REF,8+__hist.FAP_REF) & FAP.FAKS().SZ='S'
         ||
            _dokument:=FAP.FAKS().SYM;
            _typ:=FAP.FAKS().T().T;
            _magazyn:='';
            _opis:={? __hist.PLUS='N' || 'Dokument sprzedaży.'@ || 'Korekta dokumentu sprzedaży.'@ ?};
            _plus:='';
            _rodz:=FAP.FAKS().SZ;
            _this:=0;
            _dt:=FAP.FAKS().DW;
            _da:=FAP.FAKS().DR;
            _ta:=FAP.FAKS().CR;
            _pow:='';
            _kh:=FAP.FAKS().KH().SKR;
            _dk_ref:='';
            _nd_ref:='';
            _zam_rn:='';
            _fap_ref:=$FAP.ref();
            _faks_ref:=$FAP.FAKS;
            _part_ref:='';

            exec('hist_add','magdok_wspolne',__hist.ref(),_dokument,_typ,_magazyn,_opis,_plus,_rodz,_this,_dt,_da,_ta
              ,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref,_faks_ref,_part_ref,,FAP.IL2,_prdk,FAP.POZ)
         ?}
      |? _fakref<>''
      || _msk:=(8+_fakref)+3;
         FAKS.use('faktu'+_msk);
         FAP.use('fakpo'+_msk);
         FAKS.clear();
         {? FAKS.seek(_fakref,8+_fakref) & FAKS.SZ='S'
         ||
            _dokument:=FAKS.SYM;
            _typ:=FAKS.T().T;
            _magazyn:='';
            _opis:='Nota korygująca.'@;
            _plus:='';
            _rodz:=FAKS.SZ;
            _this:=0;
            _dt:=FAKS.DW;
            _da:=FAKS.DR;
            _ta:=FAKS.CR;
            _pow:='';
            _kh:=FAKS.KH().SKR;
            _dk_ref:='';
            _nd_ref:='';
            _zam_rn:='';
            _fap_ref:=__hist.FAP_REF;
            _faks_ref:=_fakref;
            _part_ref:='';
            _il2:=exec('FindAndGet','#table',FAP,__hist.FAP_REF,,"IL2",0);

            exec('hist_add','magdok_wspolne',__hist.ref(),_dokument,_typ,_magazyn,_opis,_plus,_rodz,_this,_dt,_da,_ta
              ,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref,_faks_ref,_part_ref,
              ,{? __hist.PLUS='N' || -_il2 || _il2 ?},_prdk,FAP.POZ)
         ?}
      ?};
      __hist.next()
   !}
?};
__hist.ndx_drop(_ndx);

FAKS.cntx_pop();
FAP.cntx_pop();
''


\hd_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: historia dostawy - kolorowanie rekordow
::  OLD: \hd_kol/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? __hist.THIS=1
|| 'HD#01#01'
|? __hist.THIS=2
|| 'HD#01#02'
|| ''
?}


\spr_akcw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza czy dokument zaakceptowany
::   WE: _a - ref w postaci integer dokumentu magazynowego
::       _b - name w postaci integer dokumentu magazynowego
::   WY: czy zaakceptowany 1-tak 0-nie
::  OLD: \spr_akcw/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? form(_b)<>''
||
   ND.cntx_psh();
   ND.use(_b);
   ND.clear();
   _wyn:={? ND.seek(_a,_b) || ND.Z='T' || 0 ?};
   ND.cntx_pop()
?};
_wyn


\his_dk_c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41a]
:: OPIS: wyświetla historię dostaw dla danej cechy
::   WE: _a - ref sql DK_C
::       [_b] - 1 (domyślnie)-dany magazyn 0-wszystkie magazyny
::  OLD: \his_dk_c/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};
{? (';+-'*_a)>1
|| FUN.info('Historia dostaw dotyczy konkretnej cechy.\nFunkcja niedostępna.'@)
|? _a<>''
|| _dk_c:=exec('FindAndGet','#table','DK_C',_a,,,null());
   _tab:=tab_tmp(1,'REF','STRING[16]','');
   _name:=SC.name-2;
   SC.cntx_psh();
   OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.first()
   || {!
      |? SC.use(_name+form(OKR.ROK-2000,-2,0,'99'));
         SC.index('DK_C');
         SC.prefix(_dk_c);
         {? {? _b || SC.find_tab('first','MAG',,'=',ST.MAG) || SC.first() ?}
         || {!
            |? _tab.clear();
               {? SC.PRDK<>'' & ~_tab.find_key(SC.PRDK)
               || _tab.blank();
                  _tab.REF:=SC.PRDK;
                  _tab.add(1)
               ?};
               {? _b || SC.find_tab('next','MAG',,'=',ST.MAG) || SC.next() ?}
            !}
         ?};
         OKR.next()
      !}
   ?};
   OKR.cntx_pop();
   SC.cntx_pop();
   exec('his_dost','magdok_wspolne',_tab);
   obj_del(_tab)
?}


\dokiprin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy na danym magazynie istnieja niezaakceptowane dokumenty przecen/inwentury
::   WE: _a - 0-inwentura 1-przecena
::       [_b] - INN.ref PRC+
::       [_c] - INN.ref PRC-
::   WY: 0-jest 1-nie jest
::  OLD: \dokiprin/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};
{? _>=3 || {? type_of(_c)<>2 || _c:='' ?} || _c:='' ?};

_wyn:=0;
_tab:=exec('tab_zokr','magdok_wspolne',date(0,0,0),{? _a || 5 || 4 ?},,_b,_c);
_wyn:=_tab.size();
_wyn


\tab_zokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: tabela dokumentow nie lub zaakceptowanych
::   WE:  _a - data dla ktorej kontrolujemy
::       [_b] - czy kontrolowac dokumenty zaakceptowane powyzej danej daty 2-rowniez niezaakceptowane 3-uzupeln. ceny
::       [_c] - do daty
::       [_d] - INN.ref PRC+
::       [_e] - INN.ref PRC-
::       [_f] - godzina, dla której kontrolujemy
::       [_g] - do godziny - parametr dla _c
::       [_h] - 1-dla pełnej 0-bez znaczenia (domyślnie) - wartość dla _c
::       [_i] - ref sprawdzanej inwentaryzacji
::   WY: tabela danych
::  OLD: \tab_zokr/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>4 || _c:=date(0,0,0) ?} || _c:=date(0,0,0) ?};
{? _>=4 || {? type_of(_d)<>2 || _d:='' ?} || _d:='' ?};
{? _>=5 || {? type_of(_e)<>2 || _e:='' ?} || _e:='' ?};
_tmod:={? var_pres('_f')=type_of(time()) || _f || time(0,0,0) ?};
_tmdo:={? var_pres('_g')=type_of(time()) || _g || time(0,0,0) ?};
_typA:={? var_pres('_h')=type_of(0) || _h || 0 ?};
_innA:={? ~_typA & var_pres('_i')=type_of(null()) || _i || null() ?};

_onlyod:=0;
_onlydo:=0;
{? _c<>date(0,0,0)
|| _onlyod:=_tmod=time(0,0,0);
   _onlydo:=_tmdo=time(0,0,0)
?};

_tab:=tab_tmp(5,'AKC','STRING[1]',''
       ,'DATA','DATE',''
       ,'SYMBOL','STRING[20]',''
       ,'REFN','STRING[16]',''
       ,'GODZ','TIME',''
       ,'MAGAZYN','STRING[20]',''
       ,'TYP','STRING[10]',''
       ,'NR','INTEGER',''
       ,'OKRES','INTEGER',''
       ,'POZ','INTEGER',''
       ,'INDEKS','STRING[50]','');

:: aktualna maska
_okr:=ND.name()+2;
_odd:=1+(ND.name()+3);
_jest:=0;

OKR.cntx_psh();
ND.cntx_psh;
DK.cntx_psh;

OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first()
|| {!
   |?
      exec('mag_open','open_tab',_odd,($OKR.ROK+2));

      {? _c<>date(0,0,0)
      ||
::       sprawdzenie wg dat

::       dokumenty magazynowe z danego magazynu
         ND.index('NAGDT');
         ND.prefix(ST.MAG);
         {? ND.first()
         || {!
            |? {? {? _onlyod
                  || ND.D>_a
                  || (ND.D>_a) | (ND.D=_a & {? _typA
                                            || ND.T>_tmod
                                            || {? _tmod<>time(0,0,0) & ND.T=time(0,0,0)
                                               || 0
                                               || ND.T>_tmod
                                               ?}
                                            ?})
                  ?}
                & {? _onlydo
                  || ND.D<=_c
                  || (ND.D<_c) | (ND.D=_c & {? _typA
                                            || ND.T<=_tmdo
                                            || {? _tmod<>time(0,0,0) & ND.T=time(0,0,0)
                                               || 0
                                               || ND.T<=_tmdo
                                               ?}
                                            ?})
                  ?}
               || _add:=1;
                  {? ~_typA & _innA<>null() & _tmod<>time(0,0,0)
                  || _add:=0;
                     DK.index('DOKMAG');
                     DK.prefix(ND.ref());
                     {? DK.first()
                     || {!
                        |? _add:=exec('FindInSet','#table','INP','KOD',DK.M,_innA,,,,null())<>null();
                           ~_add & DK.next()
                        !}
                     ?}
                  ?};
                  _tab.clear();
                  _tab.blank();
                  _tab.AKC:=ND.Z;
                  _tab.DATA:=ND.D;
                  _tab.GODZ:=ND.T;
                  _tab.SYMBOL:=ND.SYM;
                  _tab.MAGAZYN:=ND.MAG().SYM;
                  _tab.TYP:=ND.TYP().T;
                  _tab.NR:=ND.NR;
                  _tab.OKRES:=ND.AM;
                  _tab.REFN:=$ND.ref();
                  {? _add || _tab.add() ?}
               ?};
               ND.next()
            !}
         ?};
::       dokumenty magazynowe z drugiego magazynu
         ND.index('NAGMM');
         ND.prefix(ST.MAG);
         {? ND.first()
         || {!
            |? {? {? _onlyod
                  || ND.D>_a
                  || (ND.D>_a) | (ND.D=_a & {? _typA
                                            || ND.T>_tmod
                                            || {? _tmod<>time(0,0,0) & ND.T=time(0,0,0)
                                               || 0
                                               || ND.T>_tmod
                                               ?}
                                            ?})
                  ?}
                & {? _onlydo
                  || ND.D<=_c
                  || (ND.D<_c) | (ND.D=_c & {? _typA
                                            || ND.T<=_tmdo
                                            || {? _tmod<>time(0,0,0) & ND.T=time(0,0,0)
                                               || 0
                                               || ND.T<=_tmdo
                                               ?}
                                            ?})
                  ?}
               || _add:=1;
                  {? ~_typA & _innA<>null() & _tmod<>time(0,0,0)
                  || _add:=0;
                     DK.index('DOKMAG');
                     DK.prefix(ND.ref());
                     {? DK.first()
                     || {!
                        |? _add:=exec('FindInSet','#table','INP','KOD',DK.M,_innA,,,,null())<>null();
                           ~_add & DK.next()
                        !}
                     ?}
                  ?};
                  _tab.clear();
                  _tab.blank();
                  _tab.AKC:=ND.Z;
                  _tab.DATA:=ND.D;
                  _tab.GODZ:=ND.T;
                  _tab.SYMBOL:=ND.SYM;
                  _tab.MAGAZYN:=ND.MAG().SYM;
                  _tab.TYP:=ND.TYP().T;
                  _tab.NR:=ND.NR;
                  _tab.OKRES:=ND.AM;
                  _tab.REFN:=$ND.ref();
                  {?_add || _tab.add() ?}
               ?};
               ND.next()
            !}
         ?}
      |? _b>3
      ||
::       dokumenty magazynowe z danego magazynu
         ND.index('NAGDT');
         ND.prefix(ST.MAG,'N');
         {? ND.first()
         || {!
            |? {? (_b=4 & ND.INN='T' & ND.TYP().INW='I')
                  | (_b=5 & (ND.INN='T' & ND.TYP().INW='E' & ND.TYP().P='T' & (_d='' | _d<>$ND.ref)
                    | ND.INN='T' & ND.TYP().INW='E' & ND.TYP().P='N' & (_e='' | _e<>$ND.ref)))
               || _tab.clear();
                  _tab.blank();
                  _tab.AKC:=ND.Z;
                  _tab.DATA:=ND.D;
                  _tab.GODZ:=ND.T;
                  _tab.SYMBOL:=ND.SYM;
                  _tab.MAGAZYN:=ND.MAG().SYM;
                  _tab.TYP:=ND.TYP().T;
                  _tab.NR:=ND.NR;
                  _tab.OKRES:=ND.AM;
                  _tab.REFN:=$ND.ref();
                  _jest:=_tab.add()
               ?};
               ~_jest & ND.next()
            !}
         ?}
      |? _b<>3
      ||
::       dokumenty magazynowe z danego magazynu
         ND.index('NAGDT');
         {? _b || ND.prefix(ST.MAG) || ND.prefix(ST.MAG,'N') ?};
         {? ND.first()
         || {!
            |? {? ((ND.Z='N' & (ND.D<_a | (ND.D=_a & (_tmod=time(0,0,0) | ND.T=time(0,0,0) | ND.T<=_tmod))))
                   | {? _b=2
                     || ND.Z='T' & (ND.D>_a | (ND.D=_a & _tmod<>time(0,0,0) & ND.T>_tmod))
                     |? _b=1
                     || ND.D>_a | (ND.D=_a & _tmod<>time(0,0,0) & ND.T>_tmod)
                     || 0
                     ?})
                  &  {? _b<>2 | (ND.INN='T' & ND.TYP().INW='I')
                     || 1
                     || ((ND.INN='T' & ND.TYP().INW='I' & ND.TYP().P='T') & (_d='' | _d<>$ND.ref)
                        | (ND.INN='T' & ND.TYP().INW='I' & ND.TYP().P='N') & (_e='' | _e<>$ND.ref))
                     ?}
               || _tab.clear();
                  _tab.blank();
                  _tab.AKC:=ND.Z;
                  _tab.DATA:=ND.D;
                  _tab.GODZ:=ND.T;
                  _tab.SYMBOL:=ND.SYM;
                  _tab.MAGAZYN:=ND.MAG().SYM;
                  _tab.TYP:=ND.TYP().T;
                  _tab.NR:=ND.NR;
                  _tab.OKRES:=ND.AM;
                  _tab.REFN:=$ND.ref();
                  _tab.add()
               ?};
               ND.next()
            !}
         ?};
::       dokumenty magazynowe z drugiego magazynu
         ND.index('NAGMM');
         {? _b || ND.prefix(ST.MAG) || ND.prefix(ST.MAG,'N') ?};
         {? ND.first()
         || {!
            |? {? ((ND.Z='N' & (ND.D<_a | (ND.D=_a & (_tmod=time(0,0,0) | ND.T=time(0,0,0) | ND.T<=_tmod))))
                   | {? _b=2
                     || ND.Z='T' & (ND.D>_a | (ND.D=_a & _tmod<>time(0,0,0) & ND.T>_tmod))
                     |? _b=1
                     || ND.D>_a | (ND.D=_a & _tmod<>time(0,0,0) & ND.T>_tmod)
                     || 0
                     ?})
                  &  {? _b<>2 | ~(ND.INN='T' & ND.TYP().INW='E')
                     || 1
                     || ((ND.INN='T' & ND.TYP().INW='I' & ND.TYP().P='T') & (_d='' | _d<>$ND.ref)
                        | (ND.INN='T' & ND.TYP().INW='I' & ND.TYP().P='N') & (_e='' | _e<>$ND.ref))
                     ?}
               || _tab.clear();
                  _tab.blank();
                  _tab.AKC:=ND.Z;
                  _tab.DATA:=ND.D;
                  _tab.GODZ:=ND.T;
                  _tab.SYMBOL:=ND.SYM;
                  _tab.MAGAZYN:=ND.MAG().SYM;
                  _tab.TYP:=ND.TYP().T;
                  _tab.NR:=ND.NR;
                  _tab.OKRES:=ND.AM;
                  _tab.REFN:=$ND.ref();
                  _tab.add()
               ?};
               ND.next()
            !}
         ?}
      ||
::       sprawdzenie uzupelnienia cen
         ND.index('NAGDT');
         ND.prefix(ST.MAG,'T');
         {? ND.first() & ND.MAG().IL<>'T'
         || {!
            |? {? (ND.D<_a) | (ND.D=_a & (_tmod=time(0,0,0) | ND.T=time(0,0,0) | ND.T<=_tmod)) & ND.MAG().IL<>'T'
               || DK.index('DOKMAG');
                  DK.prefix(ND.ref());
                  {? DK.first()
                  || {!
                     |? {? DK.M().RODZ='T' & DK.C=0
                        || _tab.clear();
                           _tab.blank();
                           _tab.AKC:=ND.Z;
                           _tab.DATA:=ND.D;
                           _tab.GODZ:=ND.T;
                           _tab.SYMBOL:=ND.SYM;
                           _tab.MAGAZYN:=ND.MAG().SYM;
                           _tab.TYP:=ND.TYP().T;
                           _tab.NR:=ND.NR;
                           _tab.OKRES:=ND.AM;
                           _tab.REFN:=$ND.ref();
                           _tab.POZ:=DK.P;
                           _tab.INDEKS:=DK.M().KTM;
                           _tab.add()
                        ?};
                        DK.next()
                     !}
                  ?}
               ?};
               ND.next()
            !}
         ?}
      ?};
      ~_jest & OKR.next()
   !}
?};
exec('mag_open','open_tab',_odd,_okr);
OKR.cntx_pop();
ND.cntx_pop;
DK.cntx_pop;

:: faktury typu G
REZ.cntx_psh();
FAP.cntx_psh();
FAKS.cntx_psh();
{? _b<4 & _c<>date(0,0,0)
|| REZ.index('NRK');
   REZ.prefix('F');
   {? REZ.first()
   || {!
      |? _reffap:=ref_name(REZ.FAP);

         {? REZ.MG=ST.MAG & _reffap<>''
         || exec('fak_open','open_tab',_odd,form(8+_reffap)+2);
            {? REZ.FAP().FAKS().D>_a & REZ.FAP().FAKS().D<_c & REZ.FAP().FAKS().WHERE='G' & REZ.FAP().FAKS().AKC='N'
            || _tab.clear();
               {? ~_tab.find_key('N',REZ.FAP().FAKS().D,REZ.FAP().FAKS().SYM,$REZ.FAP().FAKS)
               || _tab.clear();
                  _tab.blank();
                  _tab.AKC:=REZ.FAP().FAKS().AKC;
                  _tab.DATA:=REZ.FAP().FAKS().D;
                  _tab.SYMBOL:=REZ.FAP().FAKS().SYM;
                  _tab.MAGAZYN:=REZ.MG().SYM;
                  _tab.TYP:=REZ.FAP().FAKS().T().T;
                  _tab.NR:=REZ.FAP().FAKS().NR;
                  _tab.OKRES:=REZ.FAP().FAKS().AM;
                  _tab.REFN:=$REZ.FAP().FAKS;
                  _tab.add()
               ?}
            ?}
         ?};
         REZ.next()
      !}
   ?}
|? _b<4 & _b<>3
|| REZ.index('NRK');
   REZ.prefix('F');
   {? REZ.first()
   || {!
      |? _reffap:=ref_name(REZ.FAP);

         {? REZ.MG=ST.MAG & _reffap<>''
         || exec('fak_open','open_tab',_odd,form(8+_reffap)+2);
            {? (_b | _b=0 & REZ.FAP().FAKS().D<=_a) & REZ.FAP().FAKS().WHERE='G' & REZ.FAP().FAKS().AKC='N'
            || _tab.clear();
               {? ~_tab.find_key('N',REZ.FAP().FAKS().D,REZ.FAP().FAKS().SYM,$REZ.FAP().FAKS)
               || _tab.clear();
                  _tab.blank();
                  _tab.AKC:=REZ.FAP().FAKS().AKC;
                  _tab.DATA:=REZ.FAP().FAKS().D;
                  _tab.SYMBOL:=REZ.FAP().FAKS().SYM;
                  _tab.MAGAZYN:=REZ.MG().SYM;
                  _tab.TYP:=REZ.FAP().FAKS().T().T;
                  _tab.NR:=REZ.FAP().FAKS().NR;
                  _tab.OKRES:=REZ.FAP().FAKS().AM;
                  _tab.REFN:=$REZ.FAP().FAKS;
                  _tab.add()
               ?}
            ?}
         ?};
         REZ.next()
      !}
   ?}
?};
{? _b<4 || exec('fak_open','open_tab',_odd,_okr) ?};
REZ.cntx_pop;
FAP.cntx_pop;
FAKS.cntx_pop;
_tab


\sprm_ndz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: sprawdza czy indeks jest na dokumentach niezaakceptowanych przychodowych
::       oraz w przypadku podania czasu na zaakceptowanych przychodowych powyżej tej daty i czasu
::   WE: _a - ref magazynu
::       _b - ref materailu
::       _c - data do sprawdzenia
::       _d - czas do kontroli o ile został wprowadzony
::   WY: 1- nie ma 0-juz jest -1-jest na zaakceptowanych po dacie
::  OLD: \sprm_ndz/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
_time:={? var_pres('_d')=type_of(time()) || _d || time(0,0,0) ?};

_wyn:=1;
ND.cntx_psh();
DK.cntx_psh();
DK.index('DOKMAT');
DK.prefix('N',_b,_a);
{? DK.first()
|| {!
   |? {? DK.PLUS='T' || _wyn:=~(DK.N().D<=_c) ?};
      _wyn & DK.next
   !}
?};
{? _wyn & _time<>time(0,0,0)
|| DK.index('DOKMAT');
   DK.prefix('T',_b,_a);
   {? DK.first()
   || {!
      |? {? DK.PLUS='T' || _wyn:=~(DK.N().D>_c | (DK.N().D=_c & DK.N().T>=_time)) ?};
         _wyn & DK.next
      !}
   ?};
   {? ~_wyn || _wyn:=-1 ?}
?};
ND.cntx_pop();
DK.cntx_pop();
_wyn


\pal_permissions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na uprawnienia dla czynności dla palet
::   WY: 0 - użytkownik nie ma uprawnień do czynności
::       1 - użytkownik ma uprawnienia do czynności
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? ST.ODDZ<>''
|| USERS_UP.cntx_psh();
   USERS_UP.index('PAL');
   USERS_UP.prefix(OPERATOR.USER,'MG',ST.ODDZ,'T');
   _wyn:=USERS_UP.first();
   USERS_UP.cntx_pop()
?};
_wyn


\opk_permissions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na uprawnienia dla czynności
::   WY: 0 - użytkownik nie ma uprawnień do czynności
::       1 - użytkownik ma uprawnienia do czynności
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? ST.ODDZ<>''
|| MG.cntx_psh();
   MG.index('MAG');
   MG.prefix(ST.ODDZ);
   {? MG.first()
   || {!
      |? _wyn:=MG.MG_OPAK<>'';
         ~_wyn & MG.next()
      !}
   ?};
   MG.cntx_pop()
?};
_wyn


\pr_t2mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdzenie czy rekord podlega modyfikacji
::   WY: 1-podlega 0-nie do modyfikacji
::  OLD: \pr_t2mg/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_break:=0;
_msk:=ND.names();
_size:=T2MG.size();
ND.cntx_psh();
{? _size>1 & _msk.first()
|| {!
   |?
      ND.use(_msk.NAME);
      ND.index('NAGNUM');
      ND.prefix(T2MG.MG,T2MG.T);
      _wyn:=~ND.first();
      {? ~_wyn
      || _wyn:=FUN.ask('W magazynie %1 wystawiono dokumenty typu %2.\n\n'
                'Modyfikacja przypisania spowoduje to, że dokumenty typu %3, które zostały wystawione\n'
                'do chwili obecnej w magazynie %4 nie będą widoczne.\n\n'
                'Czy modyfikować przypisanie?'@[T2MG.MG().SYM,T2MG.T().T,T2MG.T().T,T2MG.MG().SYM]);
         _break:=1
      ?};
      _wyn & ~_break & _msk.next()
   !}
?};
ND.cntx_pop();
_wyn


\akc_typ2mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: akceptacja przypisania DOLĄCZ dla tabeli T2MG
::   WE: _a - ref TYPYDOK lub MG
::  OLD: \akct2mg/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? (1+($_a))='m'
|| _tab:=TYPYDOK.sel_aget(); TYPYDOK.sel_adel();
   {? _tab.size()
   || {? _tab.first()
      || {!
         |? {? (TYPYDOK.clear(); TYPYDOK.seek(_tab.REF,))
            || T2MG.blank();
               T2MG.MG:=_a;
               T2MG.T:=TYPYDOK.ref();
               T2MG.add(1)
            ?};
            _tab.next()
         !}
      ?}
   || T2MG.blank();
      T2MG.MG:=_a;
      T2MG.T:=TYPYDOK.ref();
      T2MG.add(1)
   ?}
|| _tab:=MG.sel_aget(); MG.sel_adel();
   {? _tab.size()
   || {? _tab.first()
      || {!
         |? {? (MG.clear(); MG.seek(_tab.REF,))
            || T2MG.blank();
               T2MG.MG:=MG.ref();
               T2MG.T:=_a;
               T2MG.add(1)
            ?};
            _tab.next()
         !}
      ?}
   || T2MG.blank();
      T2MG.MG:=MG.ref();
      T2MG.T:=_a;
      T2MG.add(1)
   ?}
?};
sel_exit();
''


\ten_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: select na naglowki dokumentow
::  OLD: \ten_typ/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
DISP.TYP:='';
DISP.KHNAZ:='';
ST.TYPYDOK:=TYPYDOK.ref();
POM.TAB:='ND';
POM.TYPDOK:=ST.TYPYDOK().KOD;
POM.NRT:=ST.TYPYDOK().NRT;
BEER.SZ:={? TYPYDOK.P='N' || 'S' || 'Z' ?};
exec('ustaw_ww','eurusd','M');
exec('ust_lw','eurusd',0);
ZL.win_sel('SLO_SL');
ZL.actions('SLO_SL','XY','W');
ND.index('NAGDOK');
ND.prefix(ST.AR,ST.AM,ST.MAG,TYPYDOK.ref());
exec('nd_win_edit_set','magdok_nag');
_win_sel:='WER';
FAKS.win_dict('WER6');
ND.hdr_sel();
ND.hdr_sel(' w magazynie: %1'@[ST.MAG().SYM]);

no_msg(1);
lock_tim(0);
{? ND.last
||
   no_msg(0);lock_tim(-1);
   ND.select(,1,10)
|| no_msg(0);lock_tim(-1);
   ND.select()
?};
ND.actions(_win_sel,'');
{? BEER.NAWIGTEN=1 || sel_exit() ?};
{? TYPYDOK.f_active || TYPYDOK.f_seek(ST.TYPYDOK) ?};
''


\noDostBO
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: sprawdza czy dana dostawa nie pochodzi z BO, które zostało wprowadzone z późniejszą datą
::   WE: _a - ref SQL dostawy - pozycji dokumentu
::       _b - data do sprawdzenia
::   WY: 1-jest to właśnie tekie BO 0-nie jest
::  OLD: \noDostBO/pommag.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_msk:=form(8+_a);
{? _msk<>''
|| ND.cntx_psh();
   DK.cntx_psh();
   ND.use('nagdo'+(_msk+3));
   DK.use(_msk);
   DK.prefix();
   {? DK.seek(_a)
   || _wyn:=DK.N().TYP().T='BO' & DK.N().D>_b
   ?};
   ND.cntx_pop();
   DK.cntx_pop()
?};
_wyn


\oper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: listuje operacje magazynowe
::  OLD: \oper/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_werg:=DK_L.grp_make('Operacje magazynowe: Magazyn %1, Lokalizacja %2, Term.ważn. %3'@[SL.MG().SYM,SL.EANL().KOD,$SL.TW]
        ,,'#kkkkddwpdqgket');
_wer:=DK_L.mk_sel(,,,'#dwwwowoqppsflf',,,,,'U');
DK_L.win_fld(_wer,,'DT',,,-12,,,'Data rejestracji'@,,'Data rejestracji dokumentu'@);
DK_L.win_fld(_wer,,'TM',,,-12,,,'Czas rejestracji'@,,'Godzina rejestracji dokumentu'@);
DK_L.win_fld(_wer,,'IL',,,10,__dokl,,'Ilość'@,,'Ilość na dokumencie'@);
DK_L.win_fld(_wer,,'JM','KOD',,-10,,,'jm'@,,'Jednostka miary'@);
DK_L.win_fld(_wer,,'Z',,,-3,__dokl,,'Zaakceptowano'@,,'Czy zaakceptowano dokument? (T/N)'@,2,,"'T'","'N'");
DK_L.win_fld(_wer,,'DK_LN','RODZ',,-5,,,'Rodzaj'@,,'S-systemowa,C-urządz.mobilne,I-inwentaryzacja,puste-pozostałe'@);
DK_L.win_fld(_wer,EANX,'DOKZ',,,20,,,'Dokument'@,,'Symbol i pozycja dokumentu'@);
DK_L.fld_attr('DK',2);
DK_L.fld_attr('DK_LN',2);
DK_L.fld_attr('FAP',2);
DK_L.fld_attr('ZK_P',2);
DK_L.fld_attr('ZD_POZ',2);
DK_L.fld_attr('OFP',2);
_fb:="
   {? DK_L.DK
   || ND.cntx_psh(); DK.cntx_psh(); DK_L.cntx_psh();
      DK.use(8+$DK_L.DK);
      DK_L.use((DK_L.name-3)+(8+$DK_L.DK+3));
      DK.clear();
      {? DK.seek(DK_L.DK)
      || ND.use(8+$DK.N);
         DK.N().SYM;
         exec('disp_dkm','magdok_poz',1)
      ?};
      DK.cntx_pop(); ND.cntx_pop(); DK_L.cntx_pop()
   |? DK_L.DK_LN
   || DK_L.cntx_psh();
      DK_L.index('DK_LN'); DK_L.prefix('Z',DK_L.DK_LN);
      DK_L.win_sel('WERR');
      DK_L.actions('WERR','ZDUREPG:ZDG');
      DK_L.win_edit('RED');
      DK_L.select(,1);
      DK_L.cntx_pop()
   || FUN.info('Nieznany typ dokumentu.'@)
   ?}
";
DK_L.win_act(_wer,,'Formuła','&Dokument'@@,,,_fb,,1,,,,'D');
_fb:="
   EANX.DOKZ:='';
   {? DK_L.DK<>null
   || ND.cntx_psh(); DK.cntx_psh(); DK_L.cntx_psh();
      ND.use((ND.name-3)+(8+$DK_L.DK+3));
      DK.use(8+$DK_L.DK);
      DK_L.use((DK_L.name-3)+(8+$DK_L.DK+3));
      EANX.DOKZ:=DK_L.DK().N().SYM+' poz.'+form(DK.P,,,'99');
      ND.cntx_pop(); DK.cntx_pop(); DK_L.cntx_pop()
   |? DK_L.DK_LN<>null
   || EANX.DOKZ:='Reorganizacja'
   ?}; 0
";
DK_L.win_act(_wer,,'Rekord',,,,_fb,,1);
OKR.cntx_psh(); DK_L.cntx_psh(); DK_LN.cntx_psh(); DK_LI.cntx_psh();
OKR.index('MC'); OKR.prefix(REF.FIRMA,1);
_jest:=0;
{? OKR.last
|| {!
   |?
      DK_LN.use('dokln'+ST.ODDZ+($OKR.ROK+2));
      DK_L.use('doklk'+ST.ODDZ+($OKR.ROK+2));
      DK_LI.use('dokli'+ST.ODDZ+($OKR.ROK+2));
      DK_L.index('MLOKTW');
      DK_L.prefix(SL.M,SL.EANL,SL.PAL,SL.TW);
      {? DK_L.first
      || _jest+=1;
         _fr:=$'';
         _fb:=
            $('DK_L.cntx_psh(); DK_LN.cntx_psh(); DK_LI.cntx_psh();'+
            'DK_LN.use(\'dokln'+ST.ODDZ+($OKR.ROK+2)+'\');'+
            'DK_L.use(\'doklk'+ST.ODDZ+($OKR.ROK+2)+'\');'+
            'DK_LI.use(\'dokli'+ST.ODDZ+($OKR.ROK+2)+'\');'+
            'DK_L.index(\'MLOKTW\'); DK_L.prefix(SL.M,SL.EANL,SL.PAL,SL.TW)');
         _fa:=$'DK_L.cntx_pop(); DK_LN.cntx_pop(); DK_LI.cntx_pop()';
         DK_L.grp_sel(_werg,,_wer,form(OKR.ROK,,,'99'),_fr,,,,_fb,_fa)
      ?};
      OKR.prev
   !}
?};
OKR.cntx_pop(); DK_L.cntx_pop(); DK_LN.cntx_pop(); DK_LI.cntx_pop();

DK_L.win_sel(_werg);
{? _jest>0
|| DK_L.first();
   DK_L.select()
|| FUN.info('Brak operacji.'@)
?}


\czyzajet
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: bada zajetość danej lokalizacji - rownież z uwzględnieniem niezaakceptowanych reorganizacji
::   WE: _a - magazyn
::       _b - lokalizacja
::   WY: 1-wolna 0-zajęta
::  OLD: \czyzajet/mws.fml
::----------------------------------------------------------------------------------------------------------------------
:: sprawdzenie stanu na lokalizacji
_wyn:=exec('FindInSet','#table','SL','EANL',_b,_a)=null;
{? _wyn
||
:: sprawdzenie niezaakceptownych reorganizacji
   DK_L.cntx_psh();
   DK_L.index('EANL');
   DK_L.prefix(_a,null,'N',_b);
   _wyn:=~DK_L.first();
   DK_L.cntx_pop()
?};
_wyn


\use_ntmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: powoluje tabele tymaczasowa okienko i formuly aby wyswietlic dok magazynowe z wielu okresow
::   WE: [_a] - automatyczne dołączenie danego dokumentu (ref) do zafakturowania domyślnie-null
::  OLD: \use_ntmp/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};

{? var_pres('Ntmp')>100 || obj_del(Ntmp) ?};
{? var_pres('__Ntmp')>100 || obj_del(__Ntmp) ?};
{? var_pres('__acr1')>100 || obj_del(__acr1) ?};
{? var_pres('__acr2')>100 || obj_del(__acr2) ?};
VAR_DEL.delete('__btnwyb','__btnodb','__zd_rnU');

_tab_fml:="
   tab_tmp(4,
      'ROK','INTEGER','Rok'@,
      'MAG','STRING[8]','Magazyn'@,
      'TYP','STRING[8]','Typ'@,
      'NR','INTEGER','Nr'@,
      'SYM','STRING[20]','Symbol'@,
      'D','DATE','Data'@,
      'KH','STRING[10]','Kontrahent'@,
      'WAR','REAL','Wartość'@,
      'TEN','STRING[1]','Ten'@,
      'REF','INTEGER','Ref'@,
      'NAME','STRING[8]','Name'@,
      'CB','STRING[1]','Wg brutto'@,
      'WAL','STRING[3]','Waluta'@,
      'KRS','REAL','Kurs'@,
      'SQL','STRING[16]',''
   )
";
Ntmp:=_tab_fml();
__Ntmp:=_tab_fml();
__zd_rnU:=tab_tmp(1,'ZD_RN','STRING[16]','');

_xten:="exec('yesORno_ntmp','magdok_wspolne',,1,$params_get().context.REF)";
_yten:="exec('yesORno_ntmp','magdok_wspolne',,0,$params_get().context.REF)";

_xdisp:="
   ND.cntx_psh();
   ND.use(Ntmp.NAME);
   ND.clear();
   {? ND.seek(Ntmp.REF,Ntmp.NAME) || exec('nd_wyswietl_ba','magdok_nag') ?};
   ND.cntx_pop()
";

_xfak:="
   _par:=exec('get','#params',200400,2);
   {? (';TP'*_par)>1 || exec('czyreaU','magdok_wspolne') ?};
   _rea:=0;
   {? (__zd_rnU.clear(); __zd_rnU.first()) & _par='P'
   || _rea:=FUN.choice('Wybrane Dokumenty magazynowe powstały jako realizacja zamówień dostaw.\n'
                 'Podczas realizacji zrealizowano również usługi z zamówień.\n\n'
                 'Utworzyć fakturę do wybranych dokumentów?'@,,
                 '&Tak'@,'Tak z dołączeniem &Usług'@);
      {? _rea=1 || {! |? __zd_rnU.del() !} ?}
   || _rea:=FUN.ask('Utworzyć fakturę do wybranych dokumentów?'@)
   ?};
   {? _rea || sel_exit() ?}
";

__acr1:=Ntmp.mk_sel('Niezafakturowane dokumenty magazynowe '@,,0,'use_ntmp_acr',,,,,'U');
Ntmp.win_fld(__acr1,,'TEN',,,-3,,,'Czy wybrano?'@,,,2,,"\'T\'","\'N\'");
Ntmp.win_fld(__acr1,,'ROK',,,-4);
Ntmp.win_fld(__acr1,,'MAG',,,-8);
Ntmp.win_fld(__acr1,,'TYP',,,-4);
Ntmp.win_fld(__acr1,,'NR',,,-4);
Ntmp.win_fld(__acr1,,'SYM',,,-11);
Ntmp.win_fld(__acr1,,'D',,,-9);
Ntmp.win_fld(__acr1,,'KH',,,-9);
Ntmp.win_fld(__acr1,,'WAR',,,-12,2);
Ntmp.win_fld(__acr1,,'WAL',,,-6);
Ntmp.win_fld(__acr1,,'KRS',,,-6,4);
Ntmp.win_act(__acr1,0,'Formuła','&Wybierz'@@,,'Wybór bieżącego zapisu'@,,_xten,1,1,,,'W');
__btnwyb:=Ntmp.win_btn(__acr1,'text=%1,panel=right,align=begin'['Wybierz'@],'menu:W',,,,,,'noempty');
Ntmp.win_act(__acr1,0,'Formuła','&Odbierz'@@,,'Rezygnacja z wyboru'@,,_yten,,1,,,'O');
__btnodb:=Ntmp.win_btn(__acr1,'text=%1,panel=right,align=begin'['Odbierz'@],'menu:O',,,,,,'noempty');
Ntmp.win_act(__acr1,,'Formuła','&Legenda'@@,,'Opis znaczenia kolorów wierszy i ikon'@,,"
   exec('legenda','color','NTMP#01')",,,,,'L');
Ntmp.win_act(__acr1,0,'Rekord',,,,"params_exec('rek_ntmp','magdok_wspolne')",,0);
Ntmp.win_act(__acr1,,'Wyświetl',,,,,_xdisp);
Ntmp.win_act(__acr1,0,'Szukaj');
Ntmp.win_act(__acr1,0,'Kolejność');

xadd:="
   Ntmp.blank();
   Ntmp.ROK:=ND.AR;
   Ntmp.MAG:=ND.MAG().SYM;
   Ntmp.TYP:=ND.TYP().T;
   Ntmp.NR:=ND.NR;
   Ntmp.SYM:=ND.SYM;
   Ntmp.D:=ND.D;
   Ntmp.KH:=ND.KH().KOD;
   Ntmp.WAR:=ND.WAR;
   Ntmp.REF:=#ND.ref();
   Ntmp.NAME:=ND.name();
   Ntmp.CB:=ND.CB;
   Ntmp.WAL:=ND.WAL().KOD;
   Ntmp.KRS:=ND.KRS;
   Ntmp.SQL:=$ND.ref();
   Ntmp.TEN:='N';
   Ntmp.add()
";

:: w tej formule mozna dodatkowo dodać warunek jezeli np ma wyswietlac tylko z ostatnich 5 dni poprzedniego mc
xspr:="{! |? _a();ND.next !}";

__acr2:=__Ntmp.mk_sel('Dokumenty do fakturowania'@,,0,'_use__ntmp_acr_',,,,,'U');
__Ntmp.win_fld(__acr2,,'ROK',,,-5);
__Ntmp.win_fld(__acr2,,'MAG',,,-8);
__Ntmp.win_fld(__acr2,,'TYP',,,-4);
__Ntmp.win_fld(__acr2,,'NR',,,-4);
__Ntmp.win_fld(__acr2,,'SYM',,,-11);
__Ntmp.win_fld(__acr2,,'D',,,-8);
__Ntmp.win_fld(__acr2,,'KH',,,-9);
__Ntmp.win_fld(__acr2,,'WAR',,,12,2);
__Ntmp.win_fld(__acr2,,'WAL',,,-6);
__Ntmp.win_fld(__acr2,,'KRS',,,-6,4);
__Ntmp.win_act(__acr2,,'Formuła','&Fakturuj'@@,,,,_xfak,1,,,,'F');
__Ntmp.win_btn(__acr2,'text=%1,panel=right,align=begin'['Fakturuj'@],'menu:F',,,,,,'noempty');
__Ntmp.win_act(__acr2,,'Kolejność');
_sel:=Ntmp.grp_make('Wystaw fakturę'@,"__Ntmp.first();grp_disp(__Ntmp,__acr2)",'_use_ntmp_sel_');
Ntmp.grp_sel(_sel,Ntmp,__acr1,,"exec('nd2zam','magdok_wspolne')",,,25,,,,,'maximized_with_title');
Ntmp.grp_splt(_sel,,'vertical','do_fak');
Ntmp.grp_sel(_sel,__Ntmp,__acr2,,"exec('nd2zam','magdok_wspolne')",,,25,,,,,'maximized_with_title');
{? __rodzal=0
|| Ntmp.grp_splt(_sel,,'horizontal','zamowienia');
   Ntmp.grp_sel(_sel,ZK_RN,'WERND',,,,,4,,,,,'maximized_with_title')
|? __rodzal=1
|| Ntmp.grp_splt(_sel,,'horizontal','zamowienia');
   Ntmp.grp_sel(_sel,ZD_RN,'WERND',,,,,4,,,,,'maximized_with_title')
?};
Ntmp.win_sel(_sel);
''


\ten_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wybor dokumentu w wer9 tabeli ND
::   WE: [_a] - 1-wybierz(domyślnie) 0-odbierz
::  OLD: \ten_dok/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wybierz:={? var_pres('_a')=type_of(0) || _b || 1 ?};

_wyn:=0;
{? zaz_kh<=0 || HELP.RAB_TYP:={? ND.RAB || ND.RAB_TYP || '' ?} ?};
_rab_typ:=HELP.RAB_TYP;
{? _rab_typ=''
||
   DK.cntx_psh;
   DK.use((DK.name()-3)+(ref_name(ND.ref())+3));
   DK.index('DOKMAG'); DK.prefix(ND.ref);
   {? DK.first
   ||
      {!
      |?
         {? DK.RAB | DK.RABK || _rab_typ:=ND.RAB_TYP ?};
         _rab_typ='' & DK.next
      !}
   ?};
   DK.cntx_pop
?};
{? zaz_kh<=0
|| HELP.KH:=ND.KH;
   HELP.WAL:=ND.WAL;
   HELP.KRS:=ND.KRS;
   HELP.NKRS:=ND.NKRS;
   HELP.DKRS:=ND.DTK;
   HELP.NDTK:=ND.NDTK;
   HELP.NIP_UE:=''; HELP.UE:='';
   HELP.RAB:=ND.RAB;
   HELP.RAB_TYP:=_rab_typ;
   HELP.KH_ODB:=ND.KH_ODB;
   HELP.DS:=ND.D;
   HELP.CB:=ND.CB;
   HELP.KPW:=ND.KPW;
   HELP.WD:=ND.WD;
   HELP.RTRANSAK:=ND.RTRANSAK;
   HELP.RTRANSPO:=ND.RTRANSPO;
   HELP.SPP:={? ND.TYP().CS='N' || '' || ND.SPP ?};
   HELP.DT:=ND.D;
   __KRAJ_VAT:=ND.KRAJ_VAT;
   __PROC:=ND.PROC
|? HELP.RAB_TYP='' & _rab_typ<>''
|| HELP.RAB_TYP:=_rab_typ
?};
_czy_krs:=exec('get','#params',300170,2)='N' & __dsp_w_poz;
{? {? __rodzal
   || exec('sprdk2fp','magdok_wspolne',ND.ref(),{? __rodzal=2 || 'E' || 'Z' ?})=0
   || ND.FAKS_REF<>''
   ?}
|| FUN.info('Dokument w całości powiązany z fakturą.'@)
|? ND.r_lock(1,1,1)
||
:: sprawdzanie kontahenta oraz uprawnien
   _ue:={? ND.TYP().UE<>'T' || 'N' || 'T' ?};
   {? (HELP.KH=null | ND.KH=HELP.KH) & (HELP.WAL=null | ND.WAL=HELP.WAL)
      & (HELP.KRS=0 | _czy_krs | HELP.KRS=ND.KRS)
      & (HELP.NKRS=0 | _czy_krs | HELP.NKRS=ND.NKRS)
      & (__rodzal=1 | HELP.NIP_UE='' | ND.NIP_UE='' | HELP.NIP_UE=ND.NIP_UE)
      & (HELP.UE='' | HELP.UE=_ue)
      & {? __rodzal=0 || HELP.RAB=ND.RAB || 1 ?}
      & {? __rodzal=0 || HELP.RAB_TYP='' | ND.TYP().CS='N' | HELP.RAB_TYP=ND.RAB_TYP || 1 ?}
      & {? __rodzal=0 || HELP.KH_ODB=ND.KH_ODB || 1 ?}
      & {? __rodzal=0 || HELP.CB=ND.CB || 1 ?}
      & {? __rodzal=0 || HELP.SPP='' | ND.TYP().CS='N' | HELP.SPP=ND.SPP || 1 ?}
      & {? __rodzal=2 || HELP.KPW=ND.KPW || 1 ?}
      & {? __rodzal=2 || HELP.RTRANSAK=ND.RTRANSAK || 1 ?}
      & __KRAJ_VAT=ND.KRAJ_VAT
      & __PROC=ND.PROC
   || _mag:=ST.MAG;ST.MAG:=ND.MAG;
      {? exec('spr_upr2','users','MG',ND.MAG) & exec('czy_z_ok','okresy',{? ND.TYP().P='T' || 3 || 2 ?},1,ST.AR,ST.AM,ND.MAG)
      ||
         HELP.KH:=ND.KH;
         HELP.WAL:=ND.WAL;
         HELP.KRS:=ND.KRS;
         HELP.DKRS:=ND.DTK;
         HELP.DT:={? ND.D>HELP.DT || ND.D || HELP.DT ?};
         HELP.NKRS:=ND.NKRS;
         HELP.NDTK:=ND.NDTK;
         HELP.NIP_UE:=ND.NIP_UE;
         HELP.RAB:=ND.RAB;
         HELP.UE:=_ue;
         HELP.KH_ODB:=ND.KH_ODB;
         HELP.DS:=HELP.DT;
         HELP.CB:=ND.CB;
         HELP.KPW:=ND.KPW;
         HELP.WD:=ND.WD;
         HELP.RTRANSAK:=ND.RTRANSAK;
         HELP.RTRANSPO:=ND.RTRANSPO;
         HELP.SPP:={? HELP.SPP='' & ND.TYP().CS='N' || '' || ND.SPP ?};
         __KRAJ_VAT:=ND.KRAJ_VAT;
         __PROC:=ND.PROC;
         _wyn:=1
      ?};
      ST.MAG:=_mag
   || {? ND.KH<>HELP.KH || FUN.info('Niezgodny kontrahent.'@)
      |? ND.WAL<>HELP.WAL || FUN.info('Niezgodna waluta.'@)
      |? __rodzal<>1 & +HELP.NIP_UE & +ND.NIP_UE & HELP.NIP_UE<>ND.NIP_UE || FUN.info('Niezgodny NIP UE dla kontrahenta.'@)
      |? HELP.UE<>_ue || FUN.info('Niezgodny rodzaj dokumentów - UE.'@)
      |? __rodzal=0 & HELP.RAB<>ND.RAB || FUN.info('Niezgodny' +' % '+ 'rabatu.'@)
      |? __rodzal=0 & HELP.RAB_TYP<>'' & ND.TYP().CS='T' & HELP.RAB_TYP<>ND.RAB_TYP || FUN.info('Niezgodny typu rabatu w pozycji.'@)
      |? __rodzal=0 & HELP.KH_ODB<>ND.KH_ODB || FUN.info('Niezgodny odbiorca.'@)
      |? __rodzal=0 & HELP.CB<>ND.CB || FUN.info('Niezgodny sposób ustalenia cen sprzedaży.'@)
      |? __rodzal=0 & +HELP.SPP & ND.TYP().CS='T' & HELP.SPP<>ND.SPP || FUN.info('Niezgodny sposób przeliczania pozycji walutowych.'@)
      |? __rodzal=2 & HELP.KPW<>ND.KPW || FUN.info('Niezgodny kraj wysyłki (Intrastat).'@)
      |? __rodzal=2 & HELP.RTRANSAK<>ND.RTRANSAK || FUN.info('Niezgodny rodzaj transakcji (Intrastat).'@)
      |? HELP.KRS<>ND.KRS || FUN.info('Niezgodny kurs.'@)
      |? HELP.NKRS<>ND.NKRS || FUN.info('Niezgodny kurs.'@)
      |? __KRAJ_VAT<>ND.KRAJ_VAT || FUN.info('Niezgodny kraj vat.'@)
      |? __PROC<>ND.PROC || FUN.info('Niezgodna procedura.'@)
      ?};
      ND.r_unlock()
   ?}
|| ND.r_unlock();
   {? FUN.ask('Dokument obsługuje %1 inny operator.\nCzy chcesz zobaczyć kto?'@[ND.SYM]) & ND.r_lock()
   || ND.r_unlock()
   ?}
?};
_wyn


\fak_all1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wystawia fakture z wielu dokumentow na podstawie tabeli tymczasowej __Ntmp
::  OLD: \fak_all1/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
VAR_DEL.delete('__djod');

_projekt:=null();
_oldlock:=POMOC.LOCK;
_addusl:=var_pres('__zd_rnU')>117 & (__zd_rnU.clear(); __zd_rnU.first()) & ~__Ntmp.first();
{? __Ntmp.first() | _addusl
||
   {? ~_addusl
   || __Ntmp.cntx_psh(); ND.cntx_psh(); MG.cntx_psh();
      _skl:='N';
      {!
      |?
         ND.use(__Ntmp.NAME); ND.prefix();
         {? ND.seek(__Ntmp.REF,)
         || _skl:=ND.MAG().SKL;
            {? var_pres('_projekt_ref')=type_of(null()) & _projekt_ref<>ND.PROJEKTY
            || _projekt_ref:=null()
            || _projekt_ref:=ND.PROJEKTY
            ?}
         ?};
         _skl='N' & __Ntmp.next()
      !};
      {? var_pres('_projekt_ref')=type_of(null()) || _projekt:=_projekt_ref ?};
      __Ntmp.cntx_pop(); ND.cntx_pop(); MG.cntx_pop()
   ?};
::   _daty:=sql('select distinct substr(to_string(:_a.D),1,7) from :_a',__Ntmp);
   _context:=params_get();
   _typysp:=_context.in.TYPYSP;
   {? _typysp=null() &__Ntmp.size()=1 & ~__rodzal
   || _typysp:=exec('FindInSet','#table','ZK_RN','ND',__Ntmp.SQL,,"ZK_RN.N().TR",1,,null())
   ?};
   _typ:={? var_pres('_typysp')=type_of(null()) & _typysp<>null()
         || _typysp
         |? ~__rodzal
         || exec('tsp_fak','typysp','M',__Ntmp.CB,_skl,HELP.SPP)
         |? __rodzal=1
         || exec('tsp_fak','typysp','Z')
         |? __rodzal=2
         || exec('tsp_fak','typysp','E')
         || null
         ?};

:: ustawienie parametrow walutowych
   BEER.SZ:={? ~__rodzal || 'S' || 'Z' ?};
   HELP.WHERE:={? ~__rodzal || 'M' |? __rodzal=1 || 'Z' || 'E' ?};
   exec('ustaw_ww','eurusd',{? BEER.SZ='S' || 'F' || 'K' ?}); exec('ust_lw','eurusd',0);

   TAZ.RAB_N_BE:=HELP.RAB;

:: przy okazji sprawdzamy czy mamy do czynienia z dokumentem na ilosc bez cen sprzedazy
   _czy_il:=0;
   _ile_wz:=0;
   __Ntmp_size:=__Ntmp.size();

   TYPYSP.cntx_psh();
   {? _typ<>null & (TYPYSP.prefix(); TYPYSP.seek(_typ))
   ||
      _wyn:=1;
      ND.cntx_psh();
      {? ~_addusl || ND.use(__Ntmp.NAME); ND.prefix() ?};
      {? {? __Ntmp.first() || ND.seek(__Ntmp.REF,__Ntmp.NAME) || _addusl ?}
      ||
:: DRO_TODO_AWI_MOD_____: kk wyznaczać tylko jak jeden dokument
::         _kk:={? exec('get','#params',{? BEER.SZ='S' || 300101 || 200101 ?},2)='N' || '' || ND.KK ?};
::         {? TYPYSP.PAR='T'
::         || exec('add','faktury_nag',TYPYSP.ref,ND.D,,TYPYSP.KH,,,_kk,ND.RAB,'T',,,'A',,ND.KH_ODB,,,,ND.SPOBLRAB
::             ,ND.RAB_TYP,ND.GRATISY)
::         || exec('add','faktury_nag',TYPYSP.ref,ND.D,,ND.KH,,,_kk,ND.RAB,,,,{? HELP.WHERE='E' || 'W' || 'A' ?}
::             ,,ND.KH_ODB,,,,ND.SPOBLRAB,ND.RAB_TYP,ND.GRATISY)
::         ?}

         {? {? ~_addusl
            || exec('add','faktury_nag',TYPYSP.ref(),HELP.DT,,{? TYPYSP.PAR='T' || TYPYSP.KH || HELP.KH ?},,,,HELP.RAB
                ,,,,{? HELP.WHERE='E' || 'W' || 'A' ?},,HELP.KH_ODB,,,,,HELP.RAB_TYP,,,,,_projekt)
            ||  exec('add','faktury_nag',TYPYSP.ref(),date(),,{? TYPYSP.PAR='T' || TYPYSP.KH || ZD_NAG.KH ?},,,,0
                 ,,,,'X',,,,,,,HELP.RAB_TYP)
            ?}
            & (_r_lock:=exec('r_lock_one','#table',FAKS,FAKS.ref()))
         ||
            exec('ini_kom','#message','Fakturuj');

            do();

            {? __Ntmp_size=1
            ||
               {? ND.FZAK<>'' || FAKS.ID:=ND.FZAK ?};
               FAKS.put()
            ?};

            _p100201:=exec('get','#params',100201,2)='T';
            __zmst:='';
            JM.f_clear();
::          waluta
            FAKS.WAL:={? ~_addusl || HELP.WAL || ZD_NAG.WAL ?};
            {? _addusl || FAKS.NWAL:=ZD_NAG.WAL ?};
            FAKS.KRS:={? ~_addusl || 0 || 1 ?};
            FAKS.DTK:=date(0,0,0);
            FAKS.NKRS:={? ~_addusl || 0 || 1 ?};
            FAKS.NDTK:=date(0,0,0);
            {? FAKS.SZ='S'
            ||
::               {? __dsp_w_poz
::               ||
::                  __Ntmp.cntx_psh();
::                  _loop:=__Ntmp.first();
::                  _dsp:=__Ntmp.D;
::                  {!
::                  |? _loop
::                  |!
::                     __dsp_w_poz:=__Ntmp.D<>_dsp;
::                     _loop:=__dsp_w_poz=0 & __Ntmp.next()
::                  !};
::                  __Ntmp.cntx_pop();
::                  {? __dsp_w_poz || FAKS.DSP_WPOZ:='T' ?}
::               ?};
               FAKS.KRS:=HELP.KRS;
               FAKS.DTK:=HELP.DKRS;
               FAKS.NKRS:=HELP.NKRS;
               FAKS.NDTK:=HELP.NDTK

            |? FAKS.SZ='Z'
            ||
               {? FAKS.NWAL=INFO.NAROD
               ||
                  FAKS.KRS:={? ~_addusl || HELP.KRS || ZD_NAG.KRS ?};
                  FAKS.DTK:={? ~_addusl || HELP.DKRS || ZD_NAG.DTK ?}
               ?};
               FAKS.NKRS:={? ~_addusl || HELP.KRS || ZD_NAG.KRS ?};
               FAKS.NDTK:={? ~_addusl || HELP.DKRS || ZD_NAG.DTK ?}
            ?};
::          rachunek bankowy
            {? FAKS.SZ='Z'
            ||
               {? FAKS.KH<>null
               ||
                  SKID_RBK.cntx_psh();
                  SKID_RBK.index('RD');
                  SKID_RBK.prefix(RACHBANK.FIRMA,'KH',#exec('kh2rbk','faktury_wspolne'),'T');
                  {? SKID_RBK.first()
                  ||
                     FAKS.SKID_RBK:=SKID_RBK.ref();
                     FAKS.NB:=SKID_RBK.BANK().NB;
                     FAKS.RBK:=SKID_RBK.N
                  ?};
                  SKID_RBK.cntx_pop()
               ?}
            |? FAKS.SZ='S'
            ||
               {? FAKS.STS<>null() & FAKS.WAL<>null()
               ||
                  RBK_RD.cntx_psh();SKID_RBK.cntx_psh();B.cntx_psh();
                  RBK_RD.index('STS');
                  RBK_RD.prefix(FAKS.STS,FAKS.WAL);
                  {? RBK_RD.first()
                  ||
                     FAKS.SKID_RBK:=RBK_RD.SKID_RBK().ref();
                     FAKS.NB:=RBK_RD.SKID_RBK().BANK().NB;
                     FAKS.RBK:=RBK_RD.SKID_RBK().N
                  ?};
                  RBK_RD.cntx_pop();SKID_RBK.cntx_pop();B.cntx_pop()
               ?}
            ?};
            FAKS.GEN:=1;
            FAKS.put(1);
::          petla po dokumentach magazynowch do zafakturowania
            BEER.WYSTFAKS:=FAKS.ref;
            {? FAKS.SZ='S'
            || {? FAKS.WHERE='M'
               || _rodz:='G'
               || exec('ustafprz','faktury_wspolne');
                  _rodz:={? (';TA;TR'*(2+BEER.FMJM))>1
                         || 1+(1-BEER.FMJM)
                         || 'N'
                         ?}
               ?}
            || _rodz:='N'
            ?};
            _zk_n:=~~;
            {? ~_addusl
            ||
               {!
               |?
                  __zmst:='';
                  ND.cntx_psh();
                  ND.use(__Ntmp.NAME);
                  ND.prefix();
                  {? ND.seek(__Ntmp.REF,__Ntmp.NAME)
                  ||
                     _ile_wz+=1;
                     _czy_il+=HELP.WHERE='M' & ND.TYP().CS='N';
                     _bcs:=FAKS.SZ='S' & ND.TYP().CS='N';
                     _varKP:=exec('varKP','magdok_wspolne',ND.ref());
                     _autoroz:=ND.TYP().P='T' | (ND.TYP().P='N'
                                & {? (1+ND.MAG().TYP)='D' || (';FL'*ND.TYP().AFIFO)>1 || _varKP ?}
                                & exec('get','#params',300103,2)<>'N'
                                & (exec('get','#params',300113,2)='T' | _varKP));

                     _ctrlil2:=tab_tmp(1,'ZP','INTEGER','','IL2','REAL','','ILR','REAL','');
                     _dk2fap:=tab_tmp(1,'ZP','INTEGER','','FAP','STRING[16]','');

                     DK.cntx_psh();
                     DK.use('dokma'+(__Ntmp.NAME+3));
                     {? ~_autoroz
                     || DK.index('DOKZP');
                        DK.prefix(ND.ref(),0)
                     || DK.index('DOKMAG');
                        DK.prefix(ND.ref())
                     ?};
                     {? DK.first()
                     ||
                        _p100201:=exec('get','#params',100201,2)='T';
                        {!
                        |? _bbcs:=0;
                           {? _bcs || _bbcs:=_bcs; _bcs:={? DK.ZAM_RP='' || 1 || 0 ?} ?};
                           _wgewi:=exec('czyJS','jm',DK.M);
                           _ewi:=DK.M().J2<>null();
                           _akt:=0;
                           _ws2:={? _wgewi | _ewi || DK.WS2 || 1 ?};
                           _j2:={? _wgewi | _ewi || DK.M().J2 || null() ?};
                           _projekt:=DK.PROJEKTY;
                           _ileP:={? _autoroz | ~_ewi
                                  || DK.IL
                                  || exec('obl_wgzp','magdok_wspolne',DK.N,#DK.ref(),DK.IL)
                                  ?};
                           _il2P:={? _autoroz | ~_ewi
                                  || {? DK.ZP<>0
                                     || exec('FindAndGet','#table',DK,DK.ZP,DK.name(),"IL2",DK.IL2)
                                     || DK.IL2
                                     ?}
                                  || exec('obl_wgzp','magdok_wspolne',DK.N,#DK.ref(),DK.IL2,1)
                                  ?};
::                      ilosc juz rozpisana
                           _ilr:={? HELP.WHERE='E' | HELP.WHERE='Z'
                                 || exec('ile_rozp','magdok_wspolne',$DK.ref(),HELP.WHERE)
                                 || 0
                                 ?};
                           {? (_ileP-_ilr)>0
                           ||
::                         walutowosc byla stosowana tylko jako podpowiedz
                              _dsp:={? __dsp_w_poz || ND.D || date(0,0,0) ?};
                              {? FAKS.WAL<>DK.WAL
                              || _cwal:=0;
                                 _kurs:=0;
                                 __wal:=FAKS.WAL
                              || {? _autoroz & DK.ZP<>0 || _akt:=1; DK.cntx_psh(); DK.prefix(); DK.seek(DK.ZP,) ?};
                                 _cwal:=
                                    {? exec('get','#params',300400,2)='T'
                                       & DK.CWAL=0 & FAKS.KRS>0
                                       & FAKS.WAL<>DK.WAL & FAKS.NWAL=DK.WAL
                                    || (DK.CN/FAKS.KRS) $2
                                    || DK.CWAL
                                    ?};
                                 _kurs:={? __dsp_w_poz || ND.KRS || FAKS.KRS?};
                                 __wal:=FAKS.WAL;
                                 {? _autoroz & _akt || _akt:=0; DK.cntx_pop() ?}
                              ?};
                              {? FAKS.SZ='Z'
                              || {? DK.WS2<>0
                                 || _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
                                    {? _dokl_s<0
                                    || _dokl_s:=exec('jaka_dok_m','jm',DK.M)
                                    || roundmet(BEER.MDOKL)
                                    ?};
                                    {? DK.M().J2<>null()
                                    || _ws2:=_ileP/((_ileP-_ilr)/DK.WS2 $ _dokl_s);
                                       exec('przyjdod','jm',$DK.J2,_ws2,(_ileP-_ilr)/DK.WS2 $ _dokl_s)
                                    || exec('przyjdod','jm',$DK.J2,1/DK.WS2,(_ileP-_ilr)/DK.WS2 $ _dokl_s)
                                    ?};
                                    roundmet(5)
                                 ?};
                                 _kk:={? exec('get','#params',200101,2)='N' || '' || DK.KK ?};
                                 {? DK.RDKC<>'' || exec('arch_atr','mat_atr',0,null(),DK.RDKC); DK.get() ?};
                                 exec('ADDPOZF','faktury_poz',DK.M,_ileP-_ilr,DK.C,0
                                    ,exec('m_vat','material',DK.M,FAKS.KH,,FAKS.AR,FAKS.AM,DK.SV,1,!__zmst,FAKS.SZ
                                    ,FAKS.KRAJ_VAT)
                                    ,,,_cwal,_kurs,__wal,DK.JM,_kk,,,,DK.DK_C,,_projekt,,_dsp)
                              ||
                                 {? ~_autoroz
                                 ||
                                    {? _ewi & ~_wgewi
                                    ||  exec('przyjdod','jm',$DK.M().J2
                                        ,DK.WS2
                                        ,_il2P)
                                    || exec('przyjdod','jm',$DK.M().J
                                        ,{? ~_wgewi || 1
                                         |? _j2<>null() | (DK.PLUS='T' & ND.TYP().CS<>'T') || 1/DK.WS2
                                         || DK.WS2
                                         ?}
                                        ,_ileP)
                                    ?}
                                 |? _ewi & ~_wgewi
                                 ||  exec('przyjdod','jm',$DK.M().J2
                                     ,_ws2
                                     ,_il2P)
                                 || exec('przyjdod','jm',$DK.M().J
                                     ,{? ~_ewi || 1
                                      |? _j2<>null() | (DK.PLUS='T' & ND.TYP().CS<>'T')
                                      || 1/_ws2
                                      || _ws2
                                      ?}
                                     ,_ileP)
                                 ?};

                                 {? DK.WS2=0
                                 || KALK.JM:=KALK.J2:=DK.JM; KALK.WS2:=1
                                 || KALK.JM:=DK.JM; KALK.J2:=DK.J2;
                                    KALK.WS2:={? DK.WS2<>0
                                              || {? _j2<>null() | (DK.PLUS='T' & ND.TYP().CS<>'T')
                                                 || 1/DK.WS2
                                                 || DK.WS2
                                                 ?}
                                              || 1
                                              ?}
                                 ?};
                                 exec('taz_sd_set','ceny');
                                 _fo8008xx:=
                                       {? exec('ctdt','ceny')<>'T'
                                       || exec('fo8008x1','ceny')='T'
                                       || exec('fo8008x3','ceny')='T'
                                       ?};
                                 {? _autoroz & DK.ZP<>0 || _akt:=1; DK.cntx_psh(); DK.prefix(); DK.seek(DK.ZP,) ?};
                                 _csp:={? _bcs || 0 |? FAKS.T().FIS='N' || DK.CN || DK.CB ?};
                                 _rab:=DK.RAB;
                                 _rabk:=DK.RABK;
                                 _tap:=DK.TAR_H;
                                 _tms:=DK.TAR_TMS;
                                 _promo:=DK.PROMO;
                                 {? FAKS.T().FIS='N'
                                 ||
                                    {? _bcs || DK.CWAL:=0; DK.CN:=0 ?};
                                    {?  _fo8008xx & (__wal<>INFO.NAROD & DK.CWAL=0 | DK.CN=0)
                                    ||
                                       DK.cntx_psh;
                                       exec('add_fak','ceny_dok','cn');
                                       _csp:={? __wal<>INFO.NAROD & DK.CWAL=0 || _cwal:=DK.CN; 0 || _csp:=DK.CN ?};
                                       _rab:=DK.RAB;
                                       _rabk:=DK.RABK;
                                       _tap:=DK.TAR_H;
                                       _tms:=DK.TAR_TMS;
                                       _promo:=DK.PROMO;
                                       DK.cntx_pop
                                    ?};
                                    {? _autoroz & _akt || _akt:=0; DK.cntx_pop() ?};
                                    _ile2:={? _wgewi || _il2P || _ileP ?};
                                    _ile1:=_ileP;
                                    {? _autoroz
                                    || _zpref:={? DK.ZP<>0 || DK.ZP || #DK.ref ?};
                                       _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
                                       _ilzp:={? DK.ZP<>0
                                              || exec('FindAndGet','#table',DK,DK.ZP,DK.name(),"IL",DK.IL)
                                              || _ile1
                                              ?};
                                       _ile2:=_il2P*(_ile1/exec('obl_wgzp','magdok_wspolne',DK.N,_zpref,_ilzp)) $ _dokl_s;
                                       _ctrlil2.clear();
                                       _ctrlil2.prefix(_zpref);
                                       {? _ctrlil2.first()
                                       || _ctrlil2.ILR+=_ile2;
                                          {? DK.ZP=0 || _ctrlil2.IL2:={? _wgewi || _il2P || _ileP ?} ?};
                                          _ctrlil2.put(1)
                                       || _ctrlil2.blank();
                                          _ctrlil2.ZP:=_zpref;
                                          _ctrlil2.ILR:=_ile2;
                                          {? DK.ZP=0 || _ctrlil2.IL2:={? _wgewi || _il2P || _ileP ?} ?};
                                          _ctrlil2.add(1)
                                       ?}
                                    ?};
                                    {? DK.RDKC<>'' || exec('arch_atr','mat_atr',0,null(),DK.RDKC); DK.get() ?};
                                    exec('ADDPOZF','faktury_poz',DK.M,_ile2,_csp,_rab
                                       ,exec('m_vat','material',DK.M,FAKS.KH
                                       ,exec('exp_ue','typysp'),FAKS.AR,FAKS.AM,DK.SV,2,!__zmst,FAKS.SZ,FAKS.KRAJ_VAT)
                                       ,,,_cwal,_kurs,__wal,{? _wgewi & DK.J2<>null
                                                            || DK.J2
                                                            || DK.JM
                                                            ?},,_rabk,_tap,_promo,DK.DK_C,_tms,_projekt,,_dsp);
                                    {? _autoroz & DK.ZP=0
                                    || _dk2fap.clear();
                                       _dk2fap.blank();
                                       _dk2fap.ZP:=#DK.ref();
                                       _dk2fap.FAP:=$FAP.ref();
                                       _dk2fap.add(1)
                                    ?}
                                 ||
                                    {? _bcs || DK.CWAL:=0; DK.CB:=0 ?};
                                    {? _fo8008xx & (__wal<>INFO.NAROD & DK.CWAL=0 | DK.CB=0)
                                    ||
                                       DK.cntx_psh;
                                       exec('add_fak','ceny_dok','cb');
                                       _csp:={? __wal<>INFO.NAROD & DK.CWAL=0 || _cwal:=DK.CB; 0 || _csp:=DK.CN ?};
                                       _rab:=DK.RAB;
                                       _rabk:=DK.RABK;
                                       _tap:=DK.TAR_H;
                                       _tms:=DK.TAR_TMS;
                                       _promo:=DK.PROMO;
                                       DK.cntx_pop
                                    ?};
                                    {? _autoroz & _akt || _akt:=0; DK.cntx_pop() ?};
                                    _ile2:={? _wgewi || _il2P || _ileP ?};
                                    _ile1:=_ileP;
                                    {? _autoroz
                                    || _zpref:={? DK.ZP<>0 || DK.ZP || #DK.ref ?};
                                       _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
                                       _ilzp:={? DK.ZP<>0
                                              || exec('FindAndGet','#table',DK,DK.ZP,DK.name(),"IL",DK.IL)
                                              || _ile1
                                              ?};
                                       _ile2:=_ileP*(_ile1/exec('obl_wgzp','magdok_wspolne',DK.N,_zpref,_ilzp)) $ _dokl_s;
                                       _ctrlil2.clear();
                                       _ctrlil2.prefix(_zpref);
                                       {? _ctrlil2.first()
                                       || _ctrlil2.ILR+=_ile2;
                                          {? DK.ZP=0 || _ctrlil2.IL2:={? _wgewi || _il2P || _ileP ?} ?};
                                          _ctrlil2.put(1)
                                       || _ctrlil2.blank();
                                          _ctrlil2.ZP:=_zpref;
                                          _ctrlil2.ILR:=_ile2;
                                          {? DK.ZP=0 || _ctrlil2.IL2:={? _wgewi || _il2P || _ileP ?} ?};
                                          _ctrlil2.add(1)
                                       ?}
                                    ?};
                                    {? DK.RDKC<>'' || exec('arch_atr','mat_atr',0,null(),DK.RDKC); DK.get() ?};
                                    exec('ADDPOZF','faktury_poz',DK.M,_ile2,_csp,_rab
                                       ,exec('m_vat','material',DK.M,FAKS.KH
                                       ,exec('exp_ue','typysp'),FAKS.AR,FAKS.AM,DK.SV,2,!__zmst,FAKS.SZ,FAKS.KRAJ_VAT)
                                       ,,,_cwal,_kurs,__wal,{? _wgewi & DK.J2<>null
                                                            || DK.J2
                                                            || DK.JM
                                                            ?},,_rabk,_tap,_promo,DK.DK_C,_tms,_projekt,,_dsp);
                                    {? _autoroz & DK.ZP=0
                                    || _dk2fap.clear();
                                       _dk2fap.blank();
                                       _dk2fap.ZP:=#DK.ref();
                                       _dk2fap.FAP:=$FAP.ref();
                                       _dk2fap.add(1)
                                    ?}
                                 ?}
                              ?};
                              VAR_DEL.delete('__wal');
                              _faput:=0;
                              {? KSTE.CT='T'
                              || FAP.TAR_H:=exec('tar_h_copy','ceny_dok',FAP.TAR_H,FAP.name+3);
                                 FAP.TAR_TMS:=DK.TAR_TMS;
                                 _faput:=1
                              ?};
                              {? FAKS.SZ='Z' & FAKS.IST_TYP='P'
                              || FAP.MASAN:=DK.MASAN;
                                 FAP.KCN:=DK.KCN;
                                 FAP.KP:=DK.KP;
                                 {? _p100201
                                 || FAP.WF:=DK.WF;
                                    FAP.WS:=DK.WS;
                                    FAP.ILUJM:=DK.ILUJM;
                                    _faput:=1
                                 ?}
                              |? FAKS.SZ='S' & FAKS.T().UE='T'
                              || FAP.KCN:=DK.KCN;
                                 FAP.KP:=DK.KP;
                                 _faput:=1
                              ?};
                              {? FAKS.SZ='S' & _rodz<>'N' & FAP.M().J2=null()
                              || FAP.T2:=_rodz;
                                 {? FAP.T2='G'
                                 || FAP.WS2:=1;
                                    FAP.J2:=FAP.JM;
                                    FAP.IL2:=FAP.IL
                                 ?};
                                 _faput:=1
                              ?};
                              {? exec('dsp_wpoz','faktury_wspolne')
                              ||
                                 FAP.SWAL:=ND.SWAL;
                                 FAP.RTK:=ND.RTK;
                                 FAP.NTK:=ND.NTK;
                                 FAP.DTK:=ND.DTK;
                                 FAP.BTK:=ND.BTK;
                                 _faput:=1
                              ?};
                              {? _faput || FAP.put() ?};
                              BEER.MSK:='fakpo';
::                            naliczenie opłat dodatkowych
                              exec('actTAXS','oplaty_dod',FAP.FAKS().uidref(),FAP.uidref(),FAP.M,null());
                              exec('inf_dod','fakso',-1,'fakpo');
                              {? FAKS.SZ='S'
                              || exec('fap_wgzp','magdok_wspolne',DK.N,#DK.ref,$FAP.ref);
                                 FAKS.cntx_psh();
                                 FAP2DK.cntx_psh();
                                 FAP2DK.use('fapto'+{? FAKS.SZ='S' || 'sp' || 'dk' ?} + FAKS.ODDZ);
                                 exec('adfap2dk','magdok_wspolne',$FAP.ref(),$DK.ref(),
                                 $FAP.FAKS,$DK.N,DK.IL,FAP.FAKS().WHERE);
                                 FAKS.cntx_pop();
                                 FAP2DK.cntx_pop();
                                 DK.FAP:=$FAP.ref()
                              ?};
                              DK.put();
                              {? FAKS.SZ='Z'
                              || _oki:=exec('adfap2dk','magdok_wspolne',$FAP.ref(),$DK.ref(),$FAP.FAKS
                                        ,$DK.N,_ileP-_ilr,FAKS.WHERE);
                                 {? _oki
                                 || _oki:=exec('copyKoszt','faktury_wspolne',$FAP.ref(),$DK.ref(),$FAP.FAKS,DK.N().IDADD)
                                 ?}
                              ?}
                           ?};
                           {? _bbcs || _bcs:=_bbcs ?};
                           DK.next()
                        !}
                     ?};
                     _ctrlil2.clear();
                     {? _ctrlil2.first()
                     || {!
                        |? {? _ctrlil2.IL2<>_ctrlil2.ILR
                            & (_dk2fap.clear(); _dk2fap.find_key(_ctrlil2.ZP) & _dk2fap.FAP<>'')
                           || FAP.cntx_psh();
                              FAP.clear();
                              {? FAP.seek(_dk2fap.FAP)
                              || FAP.IL+=(_ctrlil2.IL2-_ctrlil2.ILR);
                                 exec('istatr_faks2fap','faktury_nag');
                                 exec('liczfak','faktury_wspolne');
                                 exec('liczfak_ist','faktury_wspolne',1,1);
                                 FAP.put(1)
                              ?};
                              FAP.cntx_pop()
                           ?};
                           _ctrlil2.next()
                        !}
                     ?};
                     obj_del(_ctrlil2);
                     obj_del(_dk2fap);

                     DK.cntx_pop();

                     {? FAKS.SZ='S' || ND.F:='T' ?};
                     {? (ND.name()+3)=(FAKS.name()+3) & FAKS.SZ='S' || ND.FAKS:=FAKS.ref() ?};
                     {? FAKS.SZ='S' || ND.FAKS_REF:=$FAKS.ref() ?};
                     {? ND.put() || exec('opnf_put','opakow',$ND.ref(),$ND.FAKS) ?}
                  ||
                     undo();_wyn:=0
                  ?};
                  _zk_n1:=exec('FindAndGet','#table',ZK_RN
                     ,exec('spr_zkrn','zamsiw_rea'),,"ZK_RN.N",null());
                  {? _zk_n=~~ | _zk_n1 & _zk_n=_zk_n1 || _zk_n:=_zk_n1 || _zk_n:=null() ?};
                  ND.cntx_pop();
:: komunikat o zmiane stawki vat
                  {? __zmst<>'' || exec('add_kom','#message',__zmst,1,'Pozycja %1'[$FAP.POZ]) ?};
                  __Ntmp.next() & _wyn
               !}
            ?};
::          dopisanie usług
            {? FAKS.SZ='Z' & FAKS.WHERE='Z' & var_pres('__zd_rnU')>117 & (__zd_rnU.clear(); __zd_rnU.first())
            || ZD_RN.cntx_psh();
               ZD_RP.cntx_psh();
               ZD_POZ.cntx_psh();
               {!
               |? ZD_RN.prefix();
                  {? ZD_RN.seek(__zd_rnU.ZD_RN)
                  || ZD_RP.index('POZ');
                     ZD_RP.prefix(ZD_RN.ref());
                     {? ZD_RP.first()
                     || {!
                        |? _ilu:=ZD_RP.IL_ZRE-exec('ile_rozu','magdok_wspolne',$ZD_RP.ref());
                           {? _ilu>0
                           || __zmst:='';
                              {? exec('ADDPOZF','faktury_poz',ZD_RP.M,_ilu,ZD_RP.ZD_POZ().CENA,0
                                  ,exec('m_vat','material',ZD_RP.M,FAKS.KH,,FAKS.AR,FAKS.AM,,1,!__zmst,FAKS.SZ,FAKS.KRAJ_VAT)
                                  ,,,ZD_RP.ZD_POZ().CWAL,FAKS.KRS,FAKS.WAL,ZD_RP.M().J,,,,,ZD_RP.ZD_POZ().DK_C)
                              || exec('adfap2dk','magdok_wspolne',$FAP.ref(),'',$FAP.FAKS
                                        ,'',_ilu,FAKS.WHERE,,$ZD_RP.ref());
:: komunikat o zmiane stawki vat
                                 {? __zmst<>'' || exec('add_kom','#message',__zmst,1,'Pozycja %1'[$FAP.POZ]) ?}
                              ?}
                           ?};
                           ZD_RP.next()
                        !}
                     ?}
                  ?};
                  __zd_rnU.next()
               !};
               ZD_RN.cntx_pop();
               ZD_RP.cntx_pop();
               ZD_POZ.cntx_pop();
               VAR_DEL.delete('__zd_rnU')
            ?};
            BEER.MSK:='faktu';
            exec('inf_dod','fakso',-1,'faktu');
            exec('sumfak','faktury_wspolne');

            {? HELP.WHERE<>'E' & _zk_n<>~~ & _zk_n
            ||
::             płatności
               _resReplace:=Plugin.run('TERMPLAT_F_WGZAM_001',_zk_n,FAKS.ref());
               {? ~_resReplace
               || {? exec('replacePlat','faktury_plat',_zk_n,FAKS.ref())
                  ||
                     exec('plat_sel','faktury_plat',FAKS);
                     FAKS.PLISTA:={? FZ.FORMAPLA='<--F3-->' || 'T' || 'N' ?};
                     FAKS.put()

                  |? ~_resReplace & exec('get','#params',300140,2)='T'
                  ||
                     exec('plat_przel','faktury_plat',FAKS.ref())
                  ||
                     exec('del_plat','faktury_plat',FAKS.ref());
                     exec('plat_sel','faktury_plat',FAKS);
                     FAKS.put()
                  ?}
               || exec('plat_sel','faktury_plat',FAKS)
               ?}
            ?};

            _wyn:=end();
::          grupowanie pozycji
            {? FAKS.SZ='S' || exec('fap_gru2','faktury_poz') ?};
::          odblokowanie pola waluta
            {? (_czy_il & _czy_il=_ile_wz) | exec('get','#params',300400,2)='T'
            || POMOC.LOCK:={? POMOC.LOCK='T' || 'J' || 'I' ?}
            ?};
            VAR_DEL.delete('__zmst');
            exec('end_kom','#message');

::          redakcja nagłówka faktury
            _var_fakpop:=exec('var_fakpop','faktury_nag');
            _var_fakpop.RAB:=FAKS.RAB;
            _var_fakpop.KRS:=FAKS.KRS;
            _var_fakpop.NKRS:=FAKS.NKRS;
            _var_fakpop.KH:=FAKS.KH;
            _var_fakpop.ODB:=FAKS.KH_ODB;
            _var_fakpop.WAL:=FAKS.WAL;
            _var_fakpop.PL:=FAKS.PL;
            _var_fakpop.IST_TYP:=FAKS.IST_TYP;
            _var_fakpop.RTRANSAK:=FAKS.RTRANSAK;
            _var_fakpop.R_LOCK:=_r_lock;
            _var_fakpop.PO_FIRST:=2;
            params_set('context',params_get(),'var_fakpop',_var_fakpop);

            _faks_red:=exec('faks_win_edit_set','faktury_nag');
            _wyn:=_dod_nag:=exec('put','faktury_nag',_faks_red);
            {? FAKS.STAT_REJ='N'
            || _dod_nag:=exec('fak_pop_po','faktury_nag',{? _dod_nag || 1 || -1 ?},_var_fakpop.PO_FIRST<>1)
            ?};
            {? FAKS.ref()<>null()
            || exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock)
            ?}
         ||
            FUN.info('Faktury nie udało się utworzyć.'@);
            _wyn:=end()
         ?}
      ?};
      ND.cntx_pop();
      zaz_kh:=0
   ?};
   TYPYSP.cntx_pop()
|| FUN.info('Nie zaznaczono żadnych dokumentów.'@)
?};
POMOC.LOCK:=_oldlock;
_wyn


\obl_wgzp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: oblicza sume ilosci wg pola ZP
::   WE: _a - ref ND
::       _b - ZP
::       _c - ilosc na samej pozycji ZP=0
::       [_d] - 1-policz IL2 0(domyślnie) IL, 2-WN 3-WB
::   WY: sumaryczna ilosc
::  OLD: \obl_wgzp/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
_il2:={? var_pres('_d')=type_of(0) || _d || 0 ?};
_wyn:=_c;

{? _b<>0
|| DK.cntx_psh;
   DK.clear;
   DK.index('DOKZP');
   DK.prefix(_a,_b);
   {? DK.first || {! |? _wyn+={? _il2=1 || DK.IL2
                              |? _il2=2 || DK.WN
                              |? _il2=3 || DK.WB
                              || DK.IL ?}; DK.next !} ?};
   DK.cntx_pop
?};
_wyn


\fap_wgzp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: uzupelnia pola DK.FAP
::   WE: _a - ref ND
::       _b - ZP
::       _c - ref SQL-owy FAP-a
::  OLD: \fap_wgzp/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
{? _b<>0
|| DK.cntx_psh;
   DK.clear;
   DK.index('DOKZP');
   DK.prefix(_a,_b);
   {? DK.first
   || {!|?
         DK.FAP:=_c;
         DK.put(1);
         FAKS.cntx_psh();
         FAP.cntx_psh();
         FAP2DK.cntx_psh();
         FAP.use(ref_name(DK.FAP));
         FAP.prefix();
         {? FAP.seek(DK.FAP) & FAKS.use(ref_name($FAP.FAKS))
         || FAP2DK.use('fapto'+{? FAKS.SZ='S' || 'sp' || 'dk' ?} + FAKS.ODDZ);
            exec('adfap2dk','magdok_wspolne',$FAP.ref(),$DK.ref(),
            $FAP.FAKS,$DK.N,DK.IL,FAP.FAKS().WHERE)
         ?};
         FAKS.cntx_pop();
         FAP.cntx_pop();
         FAP2DK.cntx_pop();
         DK.next
      !}
   ?};
   DK.cntx_pop
?};
''


\adfap2dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: dodaje jedna pozycje do FAP2DK
::   WE: _a - ref SQL-owy FAP
::       _b - ref SQL-owy DK
::       _c - ref SQL-owy FAKS
::       _d - ref SQL-owy ND
::       _e - ilosc realizowana
::       _f - rodzaj faktury Z-zakup E-wewnetrzna
::       [_g] - dopisać do kosztów
::       [_h] - ref SQL-owy ZD_RP
::   WY: 1-udalo sie 0-nie udalo sie
::  OLD: \adfap2dk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_actKK:={? var_pres('_g')=type_of(0) || _g || 0 ?};
_zd_rp:={? var_pres('_h')=type_of('') || _h || '' ?};
FAP2DK.clear;
FAP2DK.blank;
FAP2DK.FAP:=_a;
FAP2DK.DK:=_b;
FAP2DK.FAKS:=_c;
FAP2DK.ND:=_d;
FAP2DK.IL:=_e;
FAP2DK.RODZ:=_f;
FAP2DK.ZD_RP:=_zd_rp;
_res:=FAP2DK.add(1);
{? _res & _actKK || exec('dk2powKK','faktury_wspolne',_a,_b,_d) ?};
_res


\nd_aktyw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: dokumenty magazynowe do zafakturowania z poprzedniego roku
::   WE: _a - rok
::       _b - 0-wydania 1-przychody 2-przychody unijne
::       [_c] - ref SQL dokumentu do automatycznego dodania comyślnie pusty string
::       [_d] - klucz grupujący zapisany w realizacji
::   WY: 0-brak dokumentów spełniających _c, _d; 1-wpp, -1-są dokumenty, ale nie spełniają kryterium daty
::  OLD: \nd_aktyw/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>2 || _c:='' ?} || _c:='' ?};
_zk_rea:=_d;

_wyn:=0;

ND.cntx_psh();
DK.cntx_psh();
ND.use('nagdo'+ST.ODDZ+($_a+2));
DK.use('dokma'+ST.ODDZ+($_a+2));

_ind:='ND.ndx_tmp(,,\'AR\',,,\'TYP\',\'Z\',,\'TYP\',\'P\',,\'TYP\','+{? _b=2 || '\'UE\'' || '\'DS\'' ?}+',,\'STAT_REJ\',,,\'F\',,';
_pfx:={? ~_b
      || 'ND.prefix('+$_a+',\'T\',\'N\',\'T\',\'T\',\'N\''
      |? _b=1
      || 'ND.prefix('+$_a+',\'T\',\'T\',\'N\',\'T\',\'N\''
      || 'ND.prefix('+$_a+',\'T\',\'T\',\'T\',\'T\',\'N\''
      ?};

{? ROKMC.KH<>null
||
   _ind+=',\'KH\',,';
   _pfx+=',ROKMC.KH'
?};
{? ROKMC.KH_ODB<>null
||
   _ind+=',\'KH_ODB\',,';
   _pfx+=',ROKMC.KH_ODB'
?};
{? ROKMC.KH_MSC<>null
||
  _ind+=',\'KH_MSC\',,';
   _pfx+=',ROKMC.KH_MSC'
?};
{? ROKMC.AM<>0
||
   _ind+=',\'AM\',,';
   _pfx+=',ROKMC.AM'
?};
{? ROKMC.MG<>null
||
   _ind+=',\'MAG\',,';
   _pfx+=',ROKMC.MG'
?};

_ind+=')';
_pfx+=')';

_list_nd:=exec('list_nd_without_faks','magdok_wspolne',_zk_rea,_b);
_parprac:=0;
_czy2pow:=exec('get','#params',200310,2)='T';

_ndx:=($_ind)();
ND.index(_ndx);
($_pfx)();
{? ND.first()
||
   {!
   |?
::    dodaje do listy tylko dokumenty z data mniejsza lub rowna do koncowej daty biezacego okresu
::    [rr] dla dokumentow zakupowych dodano sprawdzenie ilosci juz przypisanej
::    czy cos jeszcze zostalo do rozpisania
      _list_nd.clear();
      _dorea:=_list_nd.find_key($ND.ref(),);
      _dt_okr:={? ND.TYP().P='T' || ((ND.D~1)-ST.AR)=0 || ND.D<=date(ST.AR,ST.AM,0) ?};
      _parprac+=~_dt_okr & _dorea;
      _pow:={? ~_czy2pow & ND.TYP().P='T' || -exec('sprdk2fp','magdok_wspolne',ND.ref(),'A',-2) || 0 ?};
      {? _dt_okr
       & (~_b | (_b & ~_pow & exec('sprdk2fp','magdok_wspolne',ND.ref(),{? _b=1 || 'Z' || 'E' ?})=1))
      || xadd();
         {? (_c<>'' & ($ND.ref())=_c) | (_list_nd.clear(); _list_nd.find_key($ND.ref(),))
         || exec('yesORno_ntmp','magdok_wspolne',0);
            _wyn:=1
         ?}
      ?};
      ND.next()
   !}
?};
ND.ndx_drop(_ndx);
ND.cntx_pop();
DK.cntx_pop();
{? ~_wyn & _parprac || _wyn:=-1 ?};

_wyn


\nd_r_unl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: r_unlock dla okreslonej dziedziny wg listy parametrow (tylko takie ktorych nie mozna zmienic przez Popraw)
::   WE: _a - rok
::       _b - 0-wydania 1-przychody 2-przychody unijne
::  OLD: \nd_r_unl/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ND.cntx_psh();
ND.use('nagdo'+ST.ODDZ+($_a+2));

_ind:='ND.ndx_tmp(,,\'AR\',,,\'TYP\',\'P\',,\'TYP\','+{? _b=2 || '\'UE\'' || '\'DS\'' ?}+',,\'STAT_REJ\',,';
_pfx:={? ~_b
      || 'ND.prefix('+$_a+',\'N\',\'T\',\'T\''
      |? _b=1
      || 'ND.prefix('+$_a+',\'T\',\'N\',\'T\''
      || 'ND.prefix('+$_a+',\'T\',\'T\',\'T\''
      ?};

{? ROKMC.AM<>0
||
   _ind+=',\'AM\',,';
   _pfx+=',ROKMC.AM'
?};
{? ROKMC.MG<>null
||
   _ind+=',\'MAG\',,';
   _pfx+=',ROKMC.MG'
?};

_ind+=')';
_pfx+=')';

_ndx:=($_ind)();
ND.index(_ndx);
($_pfx)();
{? ND.first()
||
   {!
   |?
      ND.r_unlock();
      ND.next()
   !}
?};
ND.ndx_drop(_ndx);
ND.cntx_pop();
''


\rek_ntmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: rekord przed Ntmp
::  OLD: \rek_ntmp/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? Ntmp.sel_size()
|| Ntmp.actions(__acr1,'','W',1);
   Ntmp.actions_grayed(__acr1,'');
   Ntmp.btn_sopt(__acr1,__btnwyb,'state=normal');
   Ntmp.btn_sopt(__acr1,__btnodb,'state=normal')
|? Ntmp.TEN='T'
|| Ntmp.actions(__acr1,'','O',1);
   Ntmp.actions_grayed(__acr1,'W');
   Ntmp.btn_sopt(__acr1,__btnwyb,'state=grayed');
   Ntmp.btn_sopt(__acr1,__btnodb,'state=normal')
|| Ntmp.actions(__acr1,'','W',1);
   Ntmp.actions_grayed(__acr1,'O');
   Ntmp.btn_sopt(__acr1,__btnodb,'state=grayed');
   Ntmp.btn_sopt(__acr1,__btnwyb,'state=normal')
?};
_ref:=params_get().context.REF;
{? _ref & Ntmp.TEN='T'
|| _grayed:=0;
   {? ref_name(_ref)-3=ND.name()-3
      & Ntmp.SQL=$_ref
   || _grayed:=1
   |? ref_name(_ref)-3=ZK_N.name()-3
      & exec('FindInSet','#table','ZK_RN','ND',Ntmp.SQL,,"ZK_RN.N",,,null())=_ref
   || _il:=0;
      _loop:=__Ntmp.first();
      {!
      |? _loop
      |!
         _il+=exec('FindInSet','#table','ZK_RN','ND',__Ntmp.SQL,,"ZK_RN.N",,,null())=_ref;
         _loop:=_il<2 & __Ntmp.next()
      !};
      _grayed:=_il=1
   ?};
   {? _grayed
   || Ntmp.actions_grayed(__acr1,'WO');
      Ntmp.btn_sopt(__acr1,__btnwyb,'state=grayed');
      Ntmp.btn_sopt(__acr1,__btnodb,'state=grayed')
   ?}
?};
exec('rekprzed','color','NTMP#01')


\kol_ntmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: kolorowanie rekordow Ntmp
::  OLD: \kol_ntmp/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? Ntmp.ROK<ST.AR  || _wyn:='NTMP#01#01' ?};
{? Ntmp.TEN='T'  || _wyn:='NTMP#01#02' ?};
_wyn


\yesORno_ntmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Wybór/rezygnacja z wyboru dokumentów do zafakturowania
::   WE: [_a] - 1-z odświeżeniem okienka (domyślnie) 0-bez
::       [_b] - 1-wybierz(domyślnie) 0-odbierz
::       [_c] - ''(domyślnie) ref SQL do pominięcia
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};
{? _>=3 || {? type_of(_c)<>2 || _c:='' ?} || _c:='' ?};
ND.cntx_psh();
ND.use(Ntmp.NAME);
ND.clear();
{? ND.seek(Ntmp.REF,Ntmp.NAME) & (_c='' | _c<>($ND.ref()))
|| {? exec('ten_dok','magdok_wspolne')
   ||
      {? _b=1 & Ntmp.TEN<>'T'
      ||
         __Ntmp.blank();
         __Ntmp.ROK:=Ntmp.ROK;
         __Ntmp.MAG:=Ntmp.MAG;
         __Ntmp.TYP:=Ntmp.TYP;
         __Ntmp.NR:=Ntmp.NR;
         __Ntmp.SYM:=Ntmp.SYM;
         __Ntmp.D:=Ntmp.D;
         __Ntmp.KH:=Ntmp.KH;
         __Ntmp.WAR:=Ntmp.WAR;
         __Ntmp.REF:=Ntmp.REF;
         __Ntmp.NAME:=Ntmp.NAME;
         __Ntmp.CB:=Ntmp.CB;
         __Ntmp.WAL:=Ntmp.WAL;
         __Ntmp.KRS:=Ntmp.KRS;
         __Ntmp.SQL:=Ntmp.SQL;
         {? __Ntmp.add()
         ||
            zaz_kh+=1;
            Ntmp.TEN:='T';
            Ntmp.put()
         ?}
      |? _b=0
      ||
         __Ntmp.cntx_psh();
         _ndx:=__Ntmp.ndx_tmp(,,'REF',,,'REF',,);
         __Ntmp.index(_ndx);
         __Ntmp.prefix(Ntmp.REF,Ntmp.REF);
         {? __Ntmp.first()
         ||
            zaz_kh-=1;
            __Ntmp.del();
            Ntmp.TEN:='N';
            Ntmp.put();
            ND.r_unlock();
            {? __Ntmp.size=0 & ~(zaz_kh>0) || HELP.KH:=null ?};
            zaz_kh:=0;
            ND.cntx_psh();
            __Ntmp.prefix();
            _loop:=__Ntmp.first();
            {!
            |? _loop
            |!
               ND.use(Ntmp.NAME);
               ND.clear();
               {? ND.seek(__Ntmp.REF,__Ntmp.NAME)
               || exec('ten_dok','magdok_wspolne');
                  zaz_kh+=1
               ?};
               _loop:=__Ntmp.next()
            !};
            ND.cntx_pop()
         ?};
         __Ntmp.ndx_drop(_ndx);
         __Ntmp.cntx_pop()
      ?};
      {? _a
      || __Ntmp.first();
         grp_disp(__Ntmp,__acr2)
      ?}
   ?}
?};
ND.cntx_pop()


\nd2zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: prefiksuje realizacje zamówień danym ND
::----------------------------------------------------------------------------------------------------------------------
_ndsql:=cur_tab(1,1).SQL;
{? _ndsql<>'' & __rodzal<2
|| {? __rodzal=0
   || ZK_RN.index('ND');
      ZK_RN.prefix(_ndsql,);
      ZK_RN.first();
      grp_disp(ZK_RN,'WERND')
   |? __rodzal=1
   || ZD_RN.index('ND');
      ZD_RN.prefix(_ndsql,);
      ZD_RN.first();
      grp_disp(ZD_RN,'WERND')
   ?}
?};
~~


\fak_magg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: generacja wielu dokumentow magazynowych na podstawie jednej faktury
::   WE: [_a] - typ dokumentu wydania
::   WY: 1-udalo sie 0-nie udalo sie
::  OLD: \fak_magg/faktury0.fml
::       \fak_magg/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_typydok:={? var_pres('_a')=type_of(null()) || _a || null() ?};

_ok:=0;
_reffaks:=FAKS.ref();
_aktmsk:=FAKS.name()+3;
_newmsk:=(1+_aktmsk)+form((FAKS.D~1)-2000,,0,'99');

BEER.ZK_N:=null;
_magi:=sql('select distinct REZ.MG REF, 0 OGR from REZ join FAP where FAP.FAKS=:_a order by 1',FAKS.ref());
_magi.clear();
{? _magi.first()
||
:: najpierw nalezy sprawdzic czy na danych magazynach mozna generowac dokumenty
:: dodatkowo zbieramy dane o magazynach z ograniczonymi typami dokumentow
   _war1:='';
   {!
   |? MG.clear();
      {? MG.seek(_magi.REF)
      ||
         _ok:=exec('czy_z_ok','okresy',1,1,FAKS.D~1,FAKS.D~2,MG.ref());
         {? exec('FindInSet','#table','T2MG','T',MG.ref)<>null || _magi.OGR:=1; _magi.put(1) ?};
         {? MG.SKL='T'
         || _war1:=' and TYPYDOK.UE=''N'' and TYPYDOK.UPRW=''N'' and TYPYDOK.AFIFO='''' '
         ?}
      ||
         _ok:=0
      ?};
      _ok & _magi.next()
   !};
:: magazyny ograniczone o typy dokumentow
   _mags:=sql('select distinct :_a.REF REF from :_a where :_a.OGR=1 ',_magi);
   {? _mags.size()
   || _tab:=obj_new(_mags.size); _i:=0;
      {? _mags.first()
      || {!
         |? {? (MG.clear(); MG.seek(_mags.REF)) || _i+=1; _tab[_i]:=MG.ref ?};
            _mags.next()
         !}
      ?}
   || _tab:=0
   ?};

:: typ dokumentu magazynowego
   {? _ok
   ||
      _war:={? FAKS.TYPYDOK<>null || '"TYPYDOK".T=\''+FAKS.TYPYDOK().T+'\' and ' || '' ?}
        +'"TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'N\' and "TYPYDOK".DS=\'T\' and '
        +'"TYPYDOK".DK=\'N\' and "TYPYDOK".STATS_Z=\'T\' '
        +{? FAKS.NIP_UE='' | FAKS.T().FIS='T' || 'and "TYPYDOK".UE<>\'T\' ' || '' ?}+_war1;
      _kom:='Brak uprawnionych typów dokumentów magazynowych realizujących sprzedaż wg magazynów.\n'
       'Typ dokumentu magazynowego powinien być dostępny dla użytkownika oraz\n'
       'dla każdego magazynu związanego z danym dokumentem sprzedaży.\n\n'
       'Uwaga. Typ dokumentu magazynowego musi mieć <Rodzaj statusu dostawy> Zgodny.'@;
      _typ:={? _typydok<>null() || _typydok || exec('typ_dok','lmg',_war,,,,_tab,_kom) ?};
      _auto:=0;
      {? _typ<>null || TYPYDOK.clear; {? TYPYDOK.seek(_typ) || _auto:=(TYPYDOK.AFIFO='F' | TYPYDOK.AFIFO='L') ?} ?};
      {? _typ=null
      ||
         _ok:=0;
         return(_ok)
      || _ok:=1
      ?}
   ?};
   {? _ok & _magi.first()
   ||
::    tabelka do grupowania pozycji
      _grp:=tab_tmp(3,'MAG','STRING[16]',''
             ,'FAP','STRING[16]',''
             ,'SC','STRING[16]',''
             ,'RDK','STRING[16]','');
      VAR_DEL.delete('X_Xd');
      X_Xd:=tab_tmp(4
         ,'KH_KOD'   ,'STRING[8]'   ,'Kod kontrahenta'
         ,'KH_REF'   ,'STRING[16]'  ,'$KH.ref'
         ,'DATA'     ,'DATE'        ,'Data'
         ,'TP'       ,'DATE'        ,'Terminpłatności'
         ,'SYSTEM'   ,'STRING[10]'  ,'System'
         ,'SYMBOL'   ,'STRING[20]'  ,'Symbol dokumentu'
         ,'WN'       ,'REAL'        ,'Winien'
         ,'MA'       ,'REAL'        ,'Ma'
         ,'TYP_ZAP'  ,'STRING[35]'  ,'Miejsce powstania'
         ,'TYP'      ,'INTEGER'     ,'Typ zapisu'
         ,'OPIS'     ,'STRING[200]' ,'Opis'
         ,'POCH'     ,'STRING[16]'  ,'Źródło pochodzenia');
      _ind:=X_Xd.ndx_tmp(,,'TYP',,);
      X_Xd.index(_ind);
      _fun:="X_Xd.cntx_psh();
         X_Xd.prefix();
         X_Xd.blank();
         X_Xd.KH_KOD:=_[1];
         X_Xd.KH_REF:=_[2];
         X_Xd.DATA:=_[3];
         X_Xd.TP:=_[4];
         X_Xd.SYSTEM:=_[5];
         X_Xd.SYMBOL:=_[6];
         X_Xd.WN:=_[7];
         X_Xd.MA:=_[8];
         X_Xd.TYP_ZAP:=_[9];
         X_Xd.TYP:=_[10];
         X_Xd.OPIS:=_[11];
         X_Xd.POCH:=_[12];
         X_Xd.add();
         X_Xd.cntx_pop()";
      _aut:={? _auto || 2 || 0 ?};
::    klucz grupujący
      _grp_key:=tm_stamp()+'1';
      {!
      |? MG.clear();
         {? MG.seek(_magi.REF)
         ||
            _czypal:=MG.PAL='T';
            _czydst:=(1+MG.TYP)='D';
            {? _aut<2 || _aut:={? (1+MG.TYP)='D' & ~_auto || 0 || 1 ?} ?};
            _aut:=0;
::          dodatkowo przenosimy pola RAB,KK
            _rab:=FAKS.RAB;
            _rabtyp:=FAKS.RAB_TYP;
            _kon:=FAKS.KK;
::          tworzymy naglowek dokumentu na danym magazynie
            HELP.MJS:='F';
            {? _aktmsk<>_newmsk || exec('mag_open','open_tab',1+_newmsk,_newmsk+2) ?};
            _time:=exec('spr_dttm','magazyn_inw',MG.ref(),FAKS.D,1);
            {? (*_time)>(*time(23,59,0)) || _time:=time(0,0,0) ?};
            _nag:=exec('gen_nagl','zamsiw_rea',FAKS.D,_typ,MG.ref(),FAKS.KH,null,FAKS.KH_ODB,,,,,,,,,_time,FAKS.PROJEKTY);
            {? _nag<>null & (ND.clear(); ND.seek(_nag))
            ||
               _loop:=X_Xd.first(); {! |? _loop |! _loop:=X_Xd.del() !};

               _tkl:={? __War_f('KH_DOD','KLIM',KH.ref)=null || KH.GRKH().KLIM || __War_f('KH_DOD','KLIM',KH.ref) ?};
               exec('lim_kred','limit_kredyt',FAKS.KH,date(),INFO.NAROD,4,_tkl,0,2,'',_fun);

               _mg_u:=exec('FindAndGet','#table',MG,$ND.MAG,,"MG.U",'N')='T';
               do();
               _magazyn:=MG.ref();
               ND.F:='T';
               ND.RAB:=_rab;
               ND.RAB_TYP:=_rabtyp;
               ND.KK:=_kon;
               {? (ND.name()+3)=(ref_name(_reffaks)+3) || ND.FAKS:=_reffaks ?};
               ND.FAKS_REF:=$_reffaks;
               ND.GRP_KEY:=_grp_key;
               {? ND.put() || exec('opnf_put','opakow',$ND.ref(),$_reffaks) ?};
::             informacje dodatkowe
               exec('inf_dod','fakso',0,'nagdo');
::             pozycje wg rezerwacji
               REZ.index('FAPR');
               FAP.index('FAP');
               FAP.prefix(_reffaks);
               {? FAP.first
               || _i:=0;
                  {!
                  |? _wgewi:=exec('czyJS','jm',FAP.M);
                     _jmg:=FAP.M().J2;
                     FAP.cntx_psh();
                     MG.cntx_psh();
                     REZ.prefix($FAP.ref,$FAP.ref(),_magazyn);
                     {? REZ.first()
                     || {!
                        |? _grp.clear();
                           _grp.blank();
                           _grp.MAG:=$_magazyn;
                           _grp.FAP:=$REZ.FAP;
                           _grp.add();
                           _add:=1;
                           {? _add
                           || _i+=1;
                              _dokl_s:=exec('jaka_dok_mjm','jm',REZ.M,REZ.FAP().JM,REZ.FAP().J2);
                              _spewi:=(REZ.FAP().JM=REZ.FAP().M().J);
                              _ws2:={? ~_wgewi | _spewi
                                    || REZ.FAP().WS2
                                    || {? REZ.FAP().WS2<>0 || 1/REZ.FAP().WS2 || 1 ?}
                                    ?};
                              _il2:={? _jmg<>null()
                                    || {? _ws2<>1 || REZ.ILR/_ws2 || REZ.ILR ?}
                                    || {? _ws2<>1 || REZ.ILR*_ws2 || REZ.ILR ?}
                                    ?} $ _dokl_s;
                              _jdod:={? ~_wgewi || $_jmg |? _spewi || $REZ.FAP().J2 || $REZ.FAP().JM ?};
                              {? ~_czydst | REZ.SC=''
                              || __rdk:=0; __ndk:=''
                              || __rdk:=BB.sqlint(REZ.SC); __ndk:=(8+REZ.SC)
                              ?};
                              VAR_DEL.delete('__fap_p');
                              __fap_p:=REZ.FAP().PROJEKTY;
                              _ref_dk:=exec('gen_pozy','zamsiw_rea',_nag,REZ.M,_i,REZ.ILR,__rdk,__ndk,
                                      REZ.FAP().CPR,REZ.FAP().CWAL,REZ.FAP().KRS,REZ.FAP().WAL,
                                      REZ.FAP().RAB,REZ.FAP().SV,,
                                      _jdod,_ws2,_il2,REZ.FAP().KK,,,,REZ.FAP().RABK,REZ.FAP().TAR_H,
                                      REZ.FAP().PROMO,,REZ.FAP().TAR_TMS);
                              VAR_DEL.delete('__fap_p');
                              DK.clear();
                              {? _ref_dk<>null & DK.seek(_ref_dk)
                              || DK.FAP:=$REZ.FAP;
                                 FAKS.cntx_psh();
                                 FAP2DK.cntx_psh();
                                 FAP2DK.use('fapto'+{? FAKS.SZ='S' || 'sp' || 'dk' ?} + FAKS.ODDZ);
                                 exec('adfap2dk','magdok_wspolne',$REZ.FAP,$DK.ref(),
                                 $REZ.FAP().FAKS,$DK.N,_il2,REZ.FAP().FAKS().WHERE);
                                 FAKS.cntx_pop();
                                 FAP2DK.cntx_pop();
                                 DK.put(1)
                              || _ok:=0; undo()
                              ?};
                              _grp.RDK:=$_ref_dk;
                              _grp.put(1)
                           ?};
                           REZ.del()
                        !};
                        VAR_DEL.delete('__rdk','__ndk')
                     |? FAP.M().RODZ='U' & _mg_u
                     || _i+=1;
                        _dokl_s:=exec('jaka_dok_mjm','jm',FAP.M,FAP.JM,FAP.J2);
                        _ws2:={? FAP.WS2<>0 || 1/FAP.WS2 || 1 ?};
                        _il2:={? _ws2<>1 || FAP.IL*_ws2 || FAP.IL ?} $ _dokl_s;
                        _cecha:=FAP.DK_C;
                        _ref_dk:=exec('gen_pozy','zamsiw_rea',_nag,FAP.M,_i,FAP.IL,0,'',
                           FAP.CPR,FAP.CWAL,FAP.KRS,FAP.WAL,
                           FAP.RAB,FAP.SV,,
                           $FAP.JM,_ws2,_il2,FAP.KK,,,,FAP.RABK,FAP.TAR_H,
                           FAP.PROMO,,FAP.TAR_TMS);
                        DK.clear();
                        {? _ref_dk<>null & DK.seek(_ref_dk)
                        || DK.FAP:=$FAP.ref;
                           DK.DK_C:=_cecha;
                           DK.put(1)
                        || _ok:=0; undo()
                        ?}
                     ?};
                     MG.cntx_pop();
                     FAP.cntx_pop();
::                   sprawdzenie czy cos nie pozostalo pod pozycja
                     {? exec('FindInSet','#table','REZ','FAPR',_magazyn,$FAP.ref(),,,$FAP.ref())<>null || undo() ?};
::                   przepisanie wymiarow
                     exec('add_dk_l','faktury_wspolne',FAP.ref,_nag);
                     FAP.next
                  !}
               ?};
               {? (ND.clear(); ND.seek(_nag) & ND.Z='N')
               ||
::                dla magazynu typu MWS wszystkie nieuzupelnione DK_L-e uzupelniamy domyslna lokalizacja magazynu
                  {? ND.MAG().MWS='T' & ~ND.MAG().W_ALL || exec('uzup_dom','magdok_wymiary',ND.ref()) ?};
                  _ok:=exec('akc_dok','magdok_nag','N','N',,,1,0)=1;
                  {? ~_ok & (ND.clear(); ND.seek(_nag))
                  ||
                     undo();
::                   przepisujemy rezerwacje z DK na ZK_P
                     exec('newrezfp','faktury_wspolne',ND.ref);
::                   usuwamy dokument magazynowy
                     exec('opnf_del','opakow',$ND.ref());
                     exec('usun_dwz','zamsiw_rea')
                  ?}
               ?};
               {? ~end & (ND.clear(); ND.seek(_nag))
               ||
                  {? do_state()<2 & ~Plugin.run('BEFORE_DELTAB_001',ND.ref()) & do_state() || undo() ?};
                  numer:=ND.NR;
                  oldnumer:=1;
                  exec('nr_old','numery');
                  ND.del
               ?};
               {? var_pres('__zam')>100 || exec('odt_zk_tymc','zamsiw_wspolne') ?}
            || _ok:=0
            ?};
            {? _aktmsk<>_newmsk || exec('mag_open','open_tab',1+_aktmsk,_aktmsk+2) ?}
         ?};
         _ok & _magi.next()
      !}
   ?};
   VAR_DEL.delete('X_Xd')
||
:: sprawdzamy czy na dokumencie sa wylacznie uslugi = one nie maja magazynu
   _ok:=exec('rodz_fap','faktury_poz');
   {? _ok
   || FUN.info('Wydanie z magazynu dotyczy pozycji materiałowych.\nDokument ma tylko pozycje usługowe.'@)
   ?}
?};
obj_del(_magi);
_ok


\dk_fapow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: pozycje dokumentow magazynowych powiązanych z faktura
::   WE: _a - ref SQL-owy faktury
::       [_b] - tabela masek do otwarcia lub biezaca maska
::   WY: uchwyt tabeli danych
::  OLD: \dk_fapow/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=1 || _b:=obj_new(1); _b[1]:=(8+_a)+2 ?};

_nmsk:=6+ND.name; _dmsk:=6+DK.name;

_wyn:=tab_tmp(4
   ,'DATA'     ,'DATE'        ,'Data'@
   ,'MAGAZYN'  ,'STRING[10]'  ,'Magazn'@
   ,'TYP'      ,'STRING[10]'  ,'Typ dok.'@
   ,'NR'       ,'INTEGER'     ,'Nr'@
   ,'POZ'      ,'INTEGER'     ,'Poz.'@
   ,'KTM'      ,'STRING[50]'  ,'Indeks'@
   ,'ILOSC'    ,'REAL'        ,'Ilość'@
   ,'CENA'     ,'REAL'        ,'Cena'@
   ,'WARTOSC'  ,'REAL'        ,'Wartość'@);
exec('war_hid','ceny',_wyn,'CENA','WARTOSC');

_n:=obj_len(_b);

ND.cntx_psh;
DK.cntx_psh;

{! _i:=1.._n
|!
:: otwieramy kolejne maski wg podanej listy
   ND.use(_nmsk+_b[_i]);
   DK.use(_dmsk+_b[_i]);

   DK.clear;
   DK.index('FAKS_REF');
   DK.prefix(_a,_a);
   {? DK.first
   || {!
      |? _wyn.clear;
         _wyn.blank;
         _wyn.DATA:=DK.N().D;
         _wyn.MAGAZYN:=DK.N().MAG().SYM;
         _wyn.TYP:=DK.N().TYP().T;
         _wyn.NR:=DK.N().NR;
         _wyn.POZ:=DK.P;
         _wyn.KTM:=DK.M().KTM;
         _wyn.ILOSC:=DK.IL;
         _wyn.CENA:=DK.C;
         _wyn.WARTOSC:=DK.WAR;
         _wyn.add(1);
         DK.next
      !}
   ?}
!};
DK.cntx_pop;
ND.cntx_pop;

_wyn


\wycdokmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: wycofuje akceptacje dokumentow i usuwa dokumenty magazynowe powiazane z dana faktura
::   WE: _a - 2-dokumenty zwrotu 1-WZ-tki
::       [_b] - 1 Usunac obiekt __kom , 0 Nie Usuwac obiektu __kom
::   WY: 1-udalo sie usunac 0-nie udalo sie
::  OLD: \wycdokmg/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};

_wyn:=1;
ND.cntx_psh();
:: pobieramy dokumenty powiazane z danym
_doki:=sql('select ND.REFERENCE REF, ND.MAG MAG, ND.ZAK ZAK, TYPYDOK.P PLUS from @ND join TYPYDOK '
           'where ND.FAKS_REF=\':_a\' order by 2,4,1',$FAKS.ref);

:: sprawdzamy czy aby nie ma zaksiegowanych dokumentow
_doki.clear;
{? _doki.first
|| {!
   |? _wyn:=_doki.ZAK<>'T';
      _wyn & _doki.next
   !}
?};
{? ~_wyn
|| FUN.info('Wśród dokumentów powiązanych istnieją dokumenty zaksięgowane.'
   '\nNiemożliwe usunięcie dokumentu magazynowego.'@)
?};

:: analizujemy magazyny
_magi:=sql('select distinct :_a.MAG REF from :_a',_doki);
_magi.clear;
{? _wyn & _magi.first
||
:: najpierw nalezy sprawdzic czy na danych magazynach mozna usuwac dokumenty
   {!
   |? _dataspr:={? FAKS.T().KOR='T' || FAKS.DZ || FAKS.D ?};
      MG.clear;
      {? MG.seek(_magi.REF)
      || _wyn:=exec('czy_z_ok','okresy',1,0,_dataspr~1,_dataspr~2,MG.ref())
      || _wyn:=0
      ?};
      _wyn & _magi.next
   !};
   {? _wyn
   || _doki.clear;
      {? _doki.first
      ||
         _oldmag:=ND.name()+2;
         exec('mag_open','open_tab',ST.ODDZ,form(8+_doki.REF)+2);
         ND.clear;
         {!
         |?
            {? ND.seek(_doki.REF)
            ||
               {? ND.r_lock(1,1,1)
               ||
                  ND.r_unlock()
               ||
                  {? FUN.ask('Dokument %1 obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@[ND.SYM])
                  || ND.r_lock(1,,1);
                     ND.r_unlock()
                  ?};
                  _wyn:=0
               ?};
               {? _wyn=1 || _doki.next() || _doki.prev() ?}
            ||
               _wyn:=0;
               0
            ?}
         !};
         exec('mag_open','open_tab',ST.ODDZ,_oldmag)
      ?};
      {? _wyn=1 & _doki.first
      ||
         {? var_pres('__kom')<=0
         || exec('ini_kom','#message','Informacje o wycofaniu akceptacji dokumentów'@)
         || _b:=0
         ?};
         {!
         |? _oldmag:=ND.name()+2;
            exec('mag_open','open_tab',ST.ODDZ,form(8+_doki.REF)+2);
            ND.clear;
            {? ND.seek(_doki.REF)
            ||
               __kom_gr:=ND.SYM;
               ND.r_unlock();
::             przepisujemy rezerwacje z DK na ZK_P
               {? _a=1 & (ND.TYP().DK<>'T' | ND.TYP().Z<>'T')
               || _wyn:=exec('newrezfp','faktury_wspolne',ND.ref)
               ?};

::             odaakceptujemy i usuwamy dokument magazynowy
               {? _wyn & ND.STAT_REJ<>'N'
               || _faks:=ND.FAKS;
                  _faksref:=ND.FAKS_REF;
                  ND.F:='N';
                  ND.FAKS:=null;
                  ND.FAKS_REF:='';
                  {? ND.put() || exec('opnf_del','opakow',$ND.ref()) ?};
                  _wyn:=exec('wyc_dok','magdok_nag',0,'N',,0);
                  {? ~_wyn
                  || ND.F:='T';
                     ND.FAKS:=_faks;
                     ND.FAKS_REF:=_faksref;
                     ND.put(1)
                  ?}
               ?};
               {? _wyn
               ||
                  _wyn:=exec('usun_dwz','zamsiw_rea',null,$ND.ref());
                  {? _wyn>0
                  ||
                     exec('add_kom','#message','Usunięto dokument.'@,1)
                  ?}
               ?}
            ?};
            exec('mag_open','open_tab',ST.ODDZ,_oldmag);
            _wyn & _doki.next
         !};
         exec('wycadok','magdok_nag',_b)
      ?}
   ?}
?};

ND.cntx_pop;
obj_del(_doki);
obj_del(_magi);
{? ~_wyn
|| exec('delrezfp','faktury_wspolne',FAKS.ref);
   FUN.info('Ponieważ nie udało się usunąć powiązanych dokumentów magazynowych,\nwycofanie akceptacji niemożliwe.'@)
|| FAP.cntx_psh();
   REZ.cntx_psh();
   FAP.index('FAP');
   FAP.prefix(FAKS.ref());
   {? FAP.first()
   || _buf:=tab_tmp(2,'MAT','STRING[16]','','MAG','STRING[16]','');
      {!
      |? REZ.index('FAP');
         REZ.prefix(FAP.ref());
         {? REZ.first()
         || {!
            |? _buf.clear();
               _buf.prefix($REZ.M,$REZ.MG);
               {? ~_buf.first()
               || exec('obl_stan','magazyn_stan',REZ.M,1,REZ.MG);
                  _buf.blank();
                  _buf.MAT:=$REZ.M;
                  _buf.MAG:=$REZ.MG;
                  _buf.add(1)
               ?};
               REZ.next()
            !}
         ?};
         FAP.next()
      !};
      obj_del(_buf)
   ?};
   FAP.cntx_pop();
   REZ.cntx_pop()
?};

_wyn


\list_nd_without_faks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Tworzy listę dokumentów magazynowych związanych z zamówieniem i niezafakturowanych
::   WE: _a - stały tekst 'Zamówienie' lub klucz grupujący
::       _b - 0-wydania 1-przychody 2-przychody unijne
::   WY: uchwyt do tabeli
::----------------------------------------------------------------------------------------------------------------------
_zam_rea:=_a;
_typ_dok:=_b;
_czy2pow:=exec('get','#params',200310,2)='T';
_list_nd:=tab_tmp(1,'REF','STRING[16]','');
{? _zam_rea<>''
|| {? _typ_dok=0
   || ZK_RN.cntx_psh();
      _loop:=
         {? _zam_rea='Zamówienie'
         || 1
         || _Mask:=ZK_RN.names();
            _Mask.first()
         ?};
      {!
      |? _loop
      |!
         {? _zam_rea='Zamówienie'
         || ZK_RN.index('ZAM');
            ZK_RN.prefix(ZK_N.ref())
         || _grp_key:=_zam_rea-1;
            ZK_RN.use(_Mask.NAME);
            ZK_RN.index('GRP_KEY');
            ZK_RN.prefix(_grp_key)
         ?};
         _loop:=ZK_RN.first();
         {!
         |? _loop
         |!
            {? ZK_RN.FAKS=''
               & exec('FindAndGet','#table',ND,ZK_RN.ND,,"STAT_REJ",'')='T'
               & (_list_nd.clear(); ~_list_nd.find_key(ZK_RN.ND))
            || _list_nd.blank();
               _list_nd.REF:=ZK_RN.ND;
               _list_nd.add(1)
            ?};
            _loop:=ZK_RN.next()
         !};
         _loop:={? _zam_rea='Zamówienie' || 0 || _Mask.next() ?}
      !};
      ZK_RN.cntx_pop()
   |? _typ_dok=1
   ||
      ZD_RN.cntx_psh();
      {? _zam_rea='Zamówienie'
      || ZD_RN.index('ZAM');
         ZD_RN.prefix(ZD_NAG.ref())
      || _grp_key:=_zam_rea-1;
         ZD_RN.index('GRP_KEY');
         ZD_RN.prefix(_grp_key)
      ?};
      _loop:=ZD_RN.first();
      {!
      |? _loop
      |! _pow:={? ~_czy2pow
               || -exec('sprdk2fp','magdok_wspolne',exec('FindAndGet','#table',ND,ZD_RN.ND,,,null()),'A',-2)
               || 0
               ?};
         {? exec('FindAndGet','#table',ND,ZD_RN.ND,,"STAT_REJ",'')='T'
            & _pow>-2
            & exec('sprdk2fp','magdok_wspolne',exec('FindAndGet','#table',ND,ZD_RN.ND,,,null()),'Z',0)
            & (_list_nd.clear(); ~_list_nd.find_key(ZD_RN.ND))
         || _list_nd.blank();
            _list_nd.REF:=ZD_RN.ND;
            _list_nd.add(1)
         ?};
         _loop:=ZD_RN.next()
      !};
      ZD_RN.cntx_pop()
   ?}
?};
_list_nd


\bad_permissions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na uprawnienia dla czynności dla badań
::   WY: 0 - użytkownik nie ma uprawnień do czynności
::       1 - użytkownik ma uprawnienia do czynności
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? ST.ODDZ<>''
|| USERS_UP.cntx_psh();
   USERS_UP.index('MG');
   USERS_UP.prefix(OPERATOR.USER,'MG',ST.ODDZ);
   _wyn:=USERS_UP.find_tab('first','MG','TYP',':-','DOST');
   USERS_UP.cntx_pop()
?};
_wyn


\nd_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: zamowienia na materialy dla dokumentu magazynowego
::  OLD: \nd_zam/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
::lista kontrahentow
::w drugim oknie zamawiane towary z dokumentu z info o zamowieniu
{? var_pres('__ZP')>100 || obj_del(__ZP) ?};
_q_zp:="
select
   ZK_N.SYM as ZAM_SYM,
   ZK_N.DP as DATA_PRZ,
   ZK_P.DT as TERM_REA,
   KH.KOD as KH_KOD,
   KH.SKR as KH_SKR,
   KH.NAZ as KH_NAZ,
   ZK_P.POZ as POZ,
   M.KTM as INDEKS,
   M.N as NAZWA,
   ZK_P.ILZ as ILZ,
   ZK_P.ILP as ILP,
   ZK_P.DK_C as DK_C
from
   ZK_P
   join ZK_N using (ZK_P.N,ZK_N.REFERENCE)
   join KH using (ZK_N.KH,KH.REFERENCE)
   join M using (ZK_P.M,M.REFERENCE)
where
   ZK_N.A='A'
   and ZK_P.T='Z'
   and ZK_P.TOP=1
   and ZK_P.ILP>0
   and M.RODZ='T'
   and (M.KTM in (:_a))
order by 1
";

_m_list:='\'~~\'';
DK.index('DOKMAG');
DK.prefix(ND.ref());
{? DK.first()
||
   {!
   |?
      _m_list+=',\''+DK.M().KTM+'\'';
      DK.next()
   !}
?};

__ZP:=sql($_q_zp,_m_list);
:: sprawdza pozycje pod katem cech
{? (1+ND.MAG().TYP)='D' & __ZP.last
|| DK_C.cntx_psh();
   {!
   |? {? __ZP.DK_C=''
      || __ZP.prev()
      || _mat:=exec('FindInSet','#table','M','MATKTM',__ZP.INDEKS,__ZP.INDEKS);
         DK_C.clear();
         {? DK_C.seek(__ZP.DK_C)
         || _dk_c:=DK_C.ref();
            _spr:=0;
            DK.index('MAM');
            DK.prefix(ND.ref(),_mat);
            {? DK.first()
            || {!
               |? {? exec('czyzawch','mat_atr',_dk_c,DK.DK_C)
                  || _spr:=1;
                     0
                  || DK.next()
                  ?}
               !};
               {? _spr || __ZP.prev() || __ZP.del() ?}
            || __ZP.del()
            ?}
         || __ZP.prev()
         ?}
      ?}
   !};
   DK_C.cntx_pop()
?};
{? __ZP.first()
||
   {? var_pres('__KH')>100 || obj_del(__KH) ?};
   _q_kh:="
      select distinct
         :_a.KH_KOD,
         :_a.KH_SKR,
         :_a.KH_NAZ
      from
         :_a
      order by
         1
   ";
   __KH:=sql($_q_kh,__ZP);
   _acr_kh:=__KH.mk_sel('Kontrahenci'@,'P',,'kh_dl_zam',,,,,'U','T');
   __KH.win_fld(_acr_kh,,'KH_KOD',,,5,,,'Kod'@);
   __KH.win_fld(_acr_kh,,'KH_SKR',,,10,,,'Skrót'@);
   __KH.win_fld(_acr_kh,,'KH_NAZ',,,30,,,'Nazwa'@);

   __acr_zp:=__ZP.mk_sel('Zamówienia sprzedaży'@,'P',,'zam_dla_kh',,,,,'U','T');
   __ZP.win_fld(__acr_zp,,'ZAM_SYM',,,20,,,'Zamówienie'@);
   __ZP.win_fld(__acr_zp,,'DATA_PRZ',,,15,,,'Data'@);
   __ZP.win_fld(__acr_zp,,'TERM_REA',,,-15,,,'Termin realizacji'@);
   __ZP.win_fld(__acr_zp,,'POZ',,,-7,,,'Pozycja'@);
   __ZP.win_fld(__acr_zp,,'INDEKS',,,20,,,'Indeks'@);
   __ZP.win_fld(__acr_zp,,'NAZWA',,,30,,,'Nazwa'@);
   __ZP.win_fld(__acr_zp,,'ILZ',,,-15,3,,'Ilość zamówiona'@);
   __ZP.win_fld(__acr_zp,,'ILP',,,-15,3,,'Pozostało do realizacji'@);
   __ZP.win_act(__acr_zp,,'Kolejność',,,,,,);


   _zam_ndx:=__ZP.ndx_tmp(,,'KH_KOD',,,'KH_KOD',,,'ZAM_SYM',,,'POZ',,);
   __ZP.index(_zam_ndx);
   _zam:="
      __ZP.prefix(__KH.KH_KOD,__KH.KH_KOD);
      grp_disp(__ZP,__acr_zp);
      1
   ";

   _sel:=__KH.grp_make('Zamówienia klientów na materiały z %1'@[ND.SYM],,'_nd_zam_00001_');
   __KH.grp_sel(_sel,__KH,_acr_kh,,_zam,,,20,,,,,'maximized_with_title');
   __KH.grp_splt(_sel,,'vertical','zam');
   __KH.grp_sel(_sel,__ZP,__acr_zp,,,,,20,,,,,'maximized_with_title');
   __KH.win_sel(_sel);
   __KH.select()
|| FUN.info('Brak zamówień klientów na materiały z dokumentu %1.'@[ND.SYM])
?};
VAR_DEL.delete('__ZP','__KH')


\add2dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: formuła na dodanie danego DK
::   WE: [_a] - rodzaj dodakumentu względem przeliczników 'XYZ' X-przychód 'T/N' Y-dotyczy sprzedaży Z-cena sprzedaży
::  OLD: \add2dk/magkop.fml
::----------------------------------------------------------------------------------------------------------------------
_rprz:={? var_pres('_a')=type_of('') || _a || '' ?};

DK.N:=ND.ref();
DK.ZAM_RP:=DK.ZAM_RN:='';
{? DK.N().TYP().P='T' & DK.M().IDMOB='D' & DK.SCEAN<>'' || DK.SCEAN:='' ?};
{? DK.N().TYP().ZLEC<>'T'
|| DK.ZL:=null();
   DK.WYD:=null();
   DK.PARTIA:=null();
   DK.ZLIM:=null();
   DK.M_ZLIM:='';
   {? DK.M().IDMOB='Z' || DK.SCEAN:='' ?}
|? DK.N().TYP().WYR='T'
|| DK.ZLIM:=null();
   DK.M_ZLIM:=''
|? DK.N().TYP().WYR='N'
|| DK.PARTIA:=null();
   {? DK.M().IDMOB='P' || DK.SCEAN:='' ?}
?};
{? DK.PLUS='N' & ((';FL'*DK.N().TYP().AFIFO)>1 | DK.N().MAG().IL='T') & DK.DOST=date(0,0,0)
|| DK.AFIFO:=DK.N().TYP().AFIFO;
   {? DK.N().MAG().IL='T' & DK.AFIFO='' || DK.AFIFO:='F' ?}
?};
BEER.MMJM:='NN0';
BEER.TAB:='DK';
_rodz:={? DK.M().J2<>null() | HELP.J2='T' || DK.T2 || 'N' ?};
BEER.JMZ:=exec('get','#params',400999,2)='T';
_kod:=exec('get','#params',400000,2);
{? _kod*'MG' & ~(';KR+;KR-;'*(';'+ND.TYP().T+';')) & ~(ND.INN='T' & ND.TYP().INW='I')
|| {? DK.N().TYP().P='T' & 'RA'*(_rodz:=exec('get','#params',400001,2))
   || BEER.MMJM:='T'+_rodz+'0'
   |? DK.N().TYP().P<>'T' & ~(DK.N().TYP().DS='T' & DK.N().TYP().CS='T')
     & 'RA'*(_rodz:=exec('get','#params',400002,2))
   || BEER.MMJM:='T'+_rodz+'0'
   |? DK.N().TYP().P<>'T' & (DK.N().TYP().DS='T' & DK.N().TYP().CS='T')
     & 'RA'*(_rodz:=exec('get','#params',400003,2))
   || BEER.MMJM:='T'+_rodz+'1'
   ?}
|? DK.M().J2=null()
|| _rodz:='N'
?};
_nprz:=DK.N().TYP().P+DK.N().TYP().DS+DK.N().TYP().CS;
{? HELP.J2='T' & DK.M().J2=null()
|| _odwr:={? (1+_rprz)='T' & _nprz='NTT' || 1
          |? (1+_rprz)='N' & _rprz<>'NTT' & _nprz='NTT' || 1
          |? _rprz='NTT' & (1+_nprz)='T' || 1
          |? _rprz='NTT' & (1+_rprz)='N' & _nprz<>'NTT' || 1
          || 0
          ?}
|| _odwr:=0
?};
{? _odwr & DK.WS2>0 || DK.WS2:=1/DK.WS2 ?};
DK.T2:=_rodz;
{? (HELP.J2='T' | DK.M().J2<>null()) & _rodz<>'N'
|| {? DK.M().J2<>null() || DK.T2:='M' || DK.T2:=_rodz ?};
   1
|? DK.T2='A'
|| DK.J2:=null();
   DK.WS2:=0;
   DK.IL2:=0;
   exec('ustawprz','magdok_poz',DK.M,DK.JM);
   exec('po_il','magdok_poz',,,,0)
|| DK.IL2:=DK.IL;
   DK.WS2:=1;
   DK.J2:=DK.JM
?};
DK.KH:=DK.N().KH;
DK.KH_ODB:=DK.N().KH_ODB;
DK.IL_ZT:=DK.IL_TR:=DK.IL_PT:=DK.IL_RK:=0;
DK.REO:=0;
{? DK.PLUS='N' || DK.DK_AT:=null() ?};
{? DK.PLUS='N' & DK.SRDK='' || DK.SRDK:=DK.PRDK ?};
{? DK.PLUS='T' & DK.M().TWD>0 & DK.M().SETW='P' || DK.TW:=DK.N().D+DK.M().TWD ?};
exec('blank_kp','magdok_wspolne',DK);
{? (_add:=DK.add(1); _add) & DK.PLUS='N'
|| {? DK.N().TYP().P='T' || DK.RDK:=#DK.ref(); DK.NDK:=DK.name(); DK.PRDK:=DK.SRDK:=$DK.ref() ?};
   exec('update','rezerwacje','DK',DK.ref(),DK.N().MAG,DK.M,DK.IL,{? DK.SRDK<>'' || DK.SRDK || DK.PRDK ?})
?};
:: naliczenie opłat dodatkowych
{? _add || exec('actTAXS','oplaty_dod',DK.N().uidref(),DK.uidref(),DK.M,null()) ?};
~~


\icon_indatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wyświetla ikonki
::----------------------------------------------------------------------------------------------------------------------
"
{? ATR.INDATR='X'
|| ATR.INDATR:=''; 'xwin16.png:15'
|? ATR.INDATR='N'
|| ATR.INDATR:=''; 'xwin16.png:91'
|? ATR.INDATR='1'
|| ATR.INDATR:=''; 'xwin16.png:83'
|? ATR.INDATR='2'
|| ATR.INDATR:=''; 'xwin16.png:184'
|? ATR.INDATR='3'
|| ATR.INDATR:=''; 'xwin16.png:120'
|? ATR.INDATR='4'
|| ATR.INDATR:=''; 'xwin16.png:49'
|? ATR.INDATR='5'
|| ATR.INDATR:=''; 'xwin16.png:17'
|| ATR.INDATR:=''; ''
?}"


\kor_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: sprawdzenie roznic wartosciowych rozliczajacych zaokraglenia magazynowe
::  OLD: \chk_war/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ND.cntx_psh();

sql_log('sql.log',1);
VAR_DEL.delete('__t_war','__t_grp','__acr_war','__acr_grp');

_q_war:=$"
select /*+INDEX(DK,DOKSAM) */
   MG.SYM as Magazyn,
   M.reference as M_REF,
   DK.RDK as RDK,
   DK.NDK as NDK,
   DK.PLUS as PLUS,
   M.KTM as Indeks,
   DK.C as Cena,
   DK.DOST as DOST,
   JM.KOD as JM,
   J2.KOD as J2,
   case when DK.PLUS='T' then DK.IL else cast(0 as REAL_TYPE) end as Il_P,
   case when DK.PLUS='N' then DK.IL else cast(0 as REAL_TYPE) end as Il_R,
   case when DK.PLUS='T' then DK.WAR else cast(0 as REAL_TYPE) end as War_P,
   case when DK.PLUS='N' then DK.WAR else cast(0 as REAL_TYPE) end as War_R,
   case when (J2.KOD<>'' and DK.PLUS='T') then DK.IL2 else cast(0 as REAL_TYPE) end as Il2_P,
   case when (J2.KOD<>'' and DK.PLUS='N') then DK.IL2 else cast(0 as REAL_TYPE) end as Il2_R,
   cast(0 as REAL_TYPE) as RoznWAR,
   cast(0 as REAL_TYPE) as RoznIL2
from
   @DK
   join M using (DK.M,M.reference)
   join JM using (M.J,JM.reference)
   left join JM J2 using (M.J2,J2.reference)
   join @ND using (DK.N,ND.reference)
   join MG using (ND.MAG,MG.reference)
where
   ND.Z='T'
   and MG.reference=:_a
   and DK.DOST<=to_date(:_b)
   and ND.D<=to_date(:_b)
";

_q_grp:=$"
select
   'N' as X,
   :_a.MAGAZYN as Magazyn,
   :_a.M_REF as M_REF,
   :_a.INDEKS as Indeks,
   :_a.RDK as RDK,
   :_a.NDK as NDK,
   :_a.JM as JM,
   :_a.J2 as J2,
   sum(:_a.IL_P) as Il_P,
   sum(:_a.IL_R) as Il_R,
   sum(:_a.WAR_P) as War_P,
   sum(:_a.WAR_R) as War_R,
   sum(:_a.IL2_P) as Il2_P,
   sum(:_a.IL2_R) as Il2_R,
   sum(:_a.ROZNWAR) as RoznWAR,
   sum(:_a.ROZNIL2) as RoznIL2
from
   :_a
group by
   'N',
   :_a.MAGAZYN,
   :_a.M_REF,
   :_a.INDEKS,
   :_a.RDK,
   :_a.NDK,
   :_a.JM,
   :_a.J2
order by 4
";

_ok:=0;
_edit:=0;
VAR_DEL.delete('__lastdt');
__lastdt:=exec('ctrl_krw','magdok_wspolne');
{? __lastdt<>date(0,0,0)
|| WYDRUKIN.win_edit('DATA');
   WYDRUKIN.DATAOD:=exec('thismont','faktury_wspolne');
   WYDRUKIN.hdr_edit('Dostawy'@);
   {? WYDRUKIN.edit("
      {? WYDRUKIN.DATAOD>date(ST.AR,ST.AM,0) | WYDRUKIN.DATAOD<date(ST.AR,ST.AM,1)
      || FUN.info('Należy podać datę z aktywnego okresu.'@);
         'DATAOD'
      |? WYDRUKIN.DATAOD<__lastdt
      || FUN.info('W magazynie %1 została wystawiona korekta niezgodności z datą %2.\n'
                  'Niemożliwe wystawienie korekty niezgodności z datą mniejszą od niej.'@[ST.MAG().SYM,form(__lastdt)]);
         'DATAOD'
      || ''
      ?}")
   || _edit:=1;
      __t_war:=sql(_q_war,ST.MAG,WYDRUKIN.DATAOD);
      _ok:=__t_war.first()
   ?}
?};
VAR_DEL.delete('__lastdt');
{? _ok=1
||
   _fml_roz:="
      __t_grp.actions(__acr_grp,'T',,1);
      __t_grp.ndx_drop();
      __t_grp.index(__t_grp.ndx_tmp(,,'X',,,'INDEKS',,));
      __t_grp.prefix('T');
      __t_grp.first()
   ";

   _fml_all:="
      __t_grp.actions(__acr_grp,'W',,1);
      __t_grp.ndx_drop();
      __t_grp.index(__t_grp.ndx_tmp(,,'INDEKS',,));
      __t_grp.prefix();
      __t_grp.first()
   ";

   _fml_poz:="
      __t_war.ndx_drop();
      __t_war.index(__t_war.ndx_tmp(,,'RDK',,,'NDK',,,'MAGAZYN',,,'INDEKS',,,'DOST',,,'PLUS',,1));
      __t_war.prefix(__t_grp.RDK,__t_grp.NDK,__t_grp.MAGAZYN,__t_grp.INDEKS);
      __t_war.first();
      __t_war.select()
   ";

   __t_grp:=sql(_q_grp,__t_war);
   {? __t_grp.first()
   ||
      {!
      |?
         __t_grp.ROZNWAR:=__t_grp.WAR_R-__t_grp.WAR_P;
         __t_grp.ROZNIL2:=__t_grp.IL2_P-__t_grp.IL2_R;
         _refm:=exec('FindAndGet','#table','M',__t_grp.M_REF,,,null());
         {? __t_grp.IL_P=__t_grp.IL_R & (__t_grp.ROZNWAR<>0 | __t_grp.ROZNIL2<>0)
          & {? (1+ST.MAG().TYP)='Ś'
            || exec('obl_stan','magazyn_stan',_refm,1,ST.MAG,,,WYDRUKIN.DATAOD);
               BEER.S<=0
            || 1
            ?}
         || __t_grp.X:='T'
         ?};
         __t_grp.put();
         __t_grp.next()
      !}
   ?};
   __t_grp.first();

   __acr_war:=__t_war.mk_sel('Pozycje dokumentów dla magazynu'@,'P',0,'_poz0000000111_',,,,,'U');
   __t_war.win_fld(__acr_war,,'INDEKS',,,16,,,'Indeks'@);
   __t_war.win_fld(__acr_war,,'DOST',,,10,,,'Dostawa'@);
   __t_war.win_fld(__acr_war,,'CENA',,,8,5,,'Cena'@);
   __t_war.win_fld(__acr_war,,'JM',,,5,,,'jm'@);
   __t_war.win_fld(__acr_war,,'IL_P',,,10,,,'Przychód'@);
   __t_war.win_fld(__acr_war,,'IL_R',,,10,,,'Rozchód'@);
   __t_war.win_fld(__acr_war,,'WAR_P',,,15,2,,'Wartość przychodu'@);
   __t_war.win_fld(__acr_war,,'WAR_R',,,15,2,,'Wartość rozchodu'@);
   __t_war.win_fld(__acr_war,,'ROZNWAR',,,15,2,,'Różnica'@);
   __t_war.win_fld(__acr_war,,'J2',,,5,,,'jm'@);
   __t_war.win_fld(__acr_war,,'IL2_P',,,10,,,'Prychód 2'@);
   __t_war.win_fld(__acr_war,,'IL2_R',,,10,,,'Rozchód 2'@);
   __t_war.win_fld(__acr_war,,'ROZNIL2',,,10,2,,'Różnica 2'@);
   __t_war.win_act(__acr_war,,'Kolejność',,,,,,);
   __t_war.win_sel(__acr_war);
   __t_war.actions(__acr_war,'W');

   __t_war.fld_fml('IL_P','DISPLAY_FORMAT',"'out_prec='+$ST.DOKL");
   __t_war.fld_fml('IL_R','DISPLAY_FORMAT',"'out_prec='+$ST.DOKL");
   __t_war.fld_fml('CENA','DISPLAY_FORMAT',"'out_prec='+$ST.DOKL_C");

   __acr_grp:=__t_grp.mk_sel('Rozliczenie dokumentów dla magazynu %1'@[ST.MAG().SYM],'P',0,'_grp0000000111_',,,,,'U');
   __t_grp.win_fld(__acr_grp,,'MAGAZYN',,,8,,,'Magazyn'@);
   __t_grp.win_fld(__acr_grp,,'INDEKS',,,16,,,'Indeks'@);
   __t_grp.win_fld(__acr_grp,,'J2',,,5,,,'jm'@);
   __t_grp.win_fld(__acr_grp,,'IL_P',,,10,,,'Przychód'@);
   __t_grp.win_fld(__acr_grp,,'IL_R',,,10,,,'Rozchód'@);
   __t_grp.win_fld(__acr_grp,,'WAR_P',,,15,2,,'Wartość przychodu'@);
   __t_grp.win_fld(__acr_grp,,'WAR_R',,,15,2,,'Wartość rozchodu'@);
   __t_grp.win_fld(__acr_grp,,'ROZNWAR',,,15,2,,'Różnica'@);
   __t_grp.win_fld(__acr_grp,,'JM',,,5,,,'jm'@);
   __t_grp.win_fld(__acr_grp,,'IL2_P',,,10,,,'Przychód 2'@);
   __t_grp.win_fld(__acr_grp,,'IL2_R',,,10,,,'Rozchód 2'@);
   __t_grp.win_fld(__acr_grp,,'ROZNIL2',,,10,2,,'Różnica 2'@);
   __t_grp.win_act(__acr_grp,0,'Formuła','&Generuj dokumenty'@@,,'Generowanie dokumentów wartościowych'@,
    ,"exec('gen_war','magdok_wspolne',WYDRUKIN.DATAOD)",0,,,,'G');
   __t_grp.win_act(__acr_grp,0,'Formuła','&Pozycje'@@,,'Dokumenty związane z rozliczeniem'@,,_fml_poz,1,,,,'P');
   __t_grp.win_act(__acr_grp,0,'Formuła','&Tylko różnice'@@,
    ,'Wyświetlanie pozycji wykazujących różnice zaokrągleń'@,,_fml_roz,0,,,,'T');
   __t_grp.win_act(__acr_grp,0,'Formuła','&Wszystkie'@@,,'Wyświetlanie wszystkich pozycji'@,,_fml_all,0,,,,'W');
   __t_grp.win_act(__acr_grp,1,'Formuła','&Wszystkie'@@,,'Wyświetlanie wszystkich pozycji'@,,_fml_all,1,,,,'W');
   __t_grp.win_act(__acr_grp,0,'Rekord',,,,"{? __t_grp.X='T' || 1 || 0 ?}",,0);
   __t_grp.win_act(__acr_grp,,'Kolejność',,,,,,);
   __t_grp.win_sel(__acr_grp);
   __t_grp.actions(__acr_grp,'W');

   __t_grp.fld_fml('IL_P','DISPLAY_FORMAT',"'out_prec='+$ST.DOKL");
   __t_grp.fld_fml('IL_R','DISPLAY_FORMAT',"'out_prec='+$ST.DOKL");
   __t_grp.fld_fml('IL2_P','DISPLAY_FORMAT',"'out_prec='+$ST.DOKL");
   __t_grp.fld_fml('IL2_R','DISPLAY_FORMAT',"'out_prec='+$ST.DOKL");
   __t_grp.fld_fml('ROZNIL2','DISPLAY_FORMAT',"'out_prec='+$ST.DOKL");

   __t_grp.select()
||
   {? _edit || FUN.info('Brak dokumentów magazynowych.'@) ?}
?};

VAR_DEL.delete('__t_war','__t_grp','__acr_war','__acr_grp');
ND.cntx_pop();
1


\ctrl_krw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: kontrola daty dla dokumentów KRW - dotyczy danego magazynu
::   WY: data, od której można wystawić dokument korekty
::  OLD: \ctrl_krw/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=date(ST.AR,ST.AM,1);
_ogr:=date(ST.AR,ST.AM,0);

_uprmg:=exec('FindInSet','#table','T2MG','T',ST.MAG)<>null();
_krw:='';
TYPYDOK.cntx_psh();
TYPYDOK.index('KRW');
TYPYDOK.prefix('N','W');
{? TYPYDOK.first()
|| {!
   |? {? ~_uprmg | exec('FindInSet','#table','T2MG','T',TYPYDOK.ref(),ST.MAG)<>null() || _krw+=TYPYDOK.T+' ' ?};
      TYPYDOK.next()
   !}
?};
TYPYDOK.cntx_pop();

{? _krw<>''
|| {!
   |? _wsk:=_krw*' ';
      _typdok:=form((_wsk-1)+_krw);
      _krw:=_wsk-_krw;
      _typ:=exec('FindInSet','#table','TYPYDOK','TYP',_typdok,_typdok);
      ND.cntx_psh();
      OKR.index('MC');
      OKR.prefix(REF.FIRMA,1);
      {? OKR.last()
      || {!
         |? ND.use('nagdo'+ST.ODDZ+($OKR.ROK+2));
            ND.index('NAGNUM');
            ND.prefix(ST.MAG,_typ);
            {? ND.first()
            || {!
               |? {? ND.D>_wyn || _wyn:=ND.D ?};
                  ND.next()
               !}
            ?};
            (_wyn<=_ogr) & OKR.prev()
         !}
      ?};
      ND.cntx_pop();
      form(_krw)<>''
   !};
   {? _wyn>_ogr
   || FUN.info('W magazynie %1 została wystawiona korekta wartościowa z datą %2.\n'
               'Niemożliwe wystawienie korekty wartościowej w okresie %3.'@[ST.MAG().SYM,form(_wyn),form(_ogr,,8)]);
      _wyn:=date(0,0,0)
   ?}
|| FUN.info('Brak uprawnionych dokumentów do wystawienia korekty wartościowej'@);
   _wyn:=date(0,0,0)
?};
_wyn


\gen_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: generowanie dokumentow wartosciowych rozliczajacych zaokraglenia magazynowe
::   WE: _a - data dokumentu
::  OLD: \gen_war/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_z_ok','okresy',1,1)=0 || return(0) ?};

_msg:='';

_uprmg:=exec('FindInSet','#table','T2MG','T',ST.MAG)<>null();
_krw:=null();
_tabtyp:=tab_tmp(1,'TYP','STRING[8]','','NAZ','STRING[60]','','REF','STRING[16]','');
_sel:=_tabtyp.mk_sel('Wybór dokumentu magazynowego'@,'P',,'krw_magazyn',,,,,'U');
_tabtyp.win_fld(_sel,,'TYP',,,,20,,'Typ dokumentu'@);
_tabtyp.win_fld(_sel,,'NAZ',,,,60,,'Nazwa dokumentu'@);
_tabtyp.win_act(_sel,,'Formuła','&Wybierz'@@,,,"sel_exit()",,1,,,,'W');
_tabtyp.win_act(_sel,,'Szukaj');
_tabtyp.win_act(_sel,,'Kolejność');
_tabtyp.win_sel(_sel);

TYPYDOK.cntx_psh();
{? _uprmg
|| T2MG.cntx_psh();
   T2MG.index('KRW');
   T2MG.prefix(ST.MAG,'N','W');
   {? T2MG.first()
   || {? T2MG.size()>1
      || {!
         |? _tabtyp.blank();
            _tabtyp.TYP:=T2MG.T().T;
            _tabtyp.NAZ:=T2MG.T().NAZ;
            _tabtyp.REF:=$T2MG.T;
            _tabtyp.add(1);
            T2MG.next()
         !};
         {? _tabtyp.first() & _tabtyp.select() || _krw:=exec('FindAndGet','#table',TYPYDOK,_tabtyp.REF,,,null()) ?}
      || _krw:=T2MG.T
      ?}
   ?};
   T2MG.cntx_pop()
|| TYPYDOK.index('KRW');
   TYPYDOK.prefix('N','W');
   {? TYPYDOK.first()
   || {? TYPYDOK.size()>1
      || {!
         |? _tabtyp.blank();
            _tabtyp.TYP:=TYPYDOK.T;
            _tabtyp.NAZ:=TYPYDOK.NAZ;
            _tabtyp.REF:=$TYPYDOK.ref();
            _tabtyp.add(1);
            TYPYDOK.next()
         !};
         {? _tabtyp.first() & _tabtyp.select() || _krw:=exec('FindAndGet','#table',TYPYDOK,_tabtyp.REF,,,null()) ?}
      || _krw:=TYPYDOK.ref()
      ?}
   ?}
?};
TYPYDOK.cntx_pop();
obj_del(_tabtyp);

{? _krw=null
|| _msg:='Należy zdefiniować lub udostępnić typ dokumentu korekta niezgodności\n(dokument rozchodowy-wartościowy).'@
?};

{? _msg=''
||
   __t_grp.cntx_psh;
   __t_grp.ndx_drop();
   __t_grp.index(__t_grp.ndx_tmp(,,'X',,));
   __t_grp.prefix('T');
   {? __t_grp.first()
   ||
      {? FUN.ask('Wystawić korektę niezgodności?'@)
      ||
         do();

         _nd_ref:=null;
         _nd_ref:=exec('addnag','magdok_nag',ST.MAG,ST.AR,ST.AM,_krw,'N',0,_a);

         {!
         |?
            _m_ref:=null;
            M.prefix();
            {? M.seek(__t_grp.M_REF)
            ||
               _m_ref:=M.ref();
               {? __t_grp.IL_P>=__t_grp.IL_R
               ||
                  __t_war.ndx_drop();
                  __t_war.index(__t_war.ndx_tmp(,,'RDK',,,'NDK',,,'MAGAZYN',,,'INDEKS',,,'PLUS',,1));
                  __t_war.prefix(__t_grp.RDK,__t_grp.NDK,__t_grp.MAGAZYN,__t_grp.INDEKS);
                  {? __t_war.first()
                  ||
                     _dk:=exec('adddk','magdok_poz',_nd_ref,_m_ref,0,__t_war.CENA,__t_war.DOST
                           ,,,,,,,,7,__t_war.RDK,__t_war.NDK);
                     DK.prefix();
                     {? DK.seek(_dk)
                     || _kril2:=0;
                        DK.WAR:=-__t_grp.ROZNWAR;
                        {? __t_grp.ROZNIL2<>0 & DK.M().J2<>null()
                        || DK.IL2:=__t_grp.ROZNIL2;
                           DK.T2:='M';
                           DK.J2:=DK.M().J2;
                           _kril2:=1
                        ?};
                        DK.Z:='T';
                        {? DK.put()
                        ||
::                         poprawia pole SM.ST_WAR
                           ND.cntx_psh();
                           {? _kril2
                           || exec('OBLSTAN','magazyn_stan',DK.N().MAG,DK.M,DK.DOST,DK.C,DK.PLUS,0,DK.RDK,DK.NDK
                               ,DK.SRDK,DK.PRDK,DK.SCC,DK.N().SCWAL,DK.STATS,DK.SCEAN,DK.TW)
                           || exec('stan_zb','magazyn_stan',DK.N().MAG,DK.M,0,-DK.WAR,ND.AR
                               ,{? DK.M().J2<>null() || DK.IL2 || 0 ?})
                           ?};
                           ND.cntx_pop()
                        ?}
                     ?}
                  ?}
               ||
                  _msg+='Dla indeksu %1 (dostawa z dnia %2)'@[M.KTM,form(__t_war.DOST)];
                  _msg+='\nilość przychodu jest mniejsza od ilośći rozchodu.'@;
                  _msg+='\n\nPrzerwano generowanie dokumentów wartościowych.'@;
                  _msg+='\nNależy uzgodnić stan magazynowe w/g dokumentów magazynowych.'@
               ?}
            ?};

            __t_grp.next()
         !};

::       akceptowanie korekt
         {? _msg=''
         ||
            ND.prefix();
            {? ND.seek(_nd_ref)
            ||
               DK.index('DOKMAG');
               DK.prefix(ND.ref());
               {? DK.first()
               ||
                  exec('dk_sum','magdok_wspolne',ND.ref());
                  ND.get();
                  ND.US:=OPERATOR.USER;
                  ND.Z:='T';
                  ND.STAT_REJ:='T';
                  {? exec('data_akcept','magdok_nag','T')
                  ||
                     _msg:='Utworzono korektę niezgodności %1.'@[ND.SYM];
                     sel_exit()
                  ?}
               ?}
            ?}
         ?};

         end()

      || _msg:='Zrezygnowano z wystawiania dokumentów korekty niezgodności.'@
      ?}
   || _msg:='Brak niezgodności do skorygowania w magazynie\n%1 - %2.'@[ST.MAG().SYM,ST.MAG().NAZ]
   ?};
   __t_grp.cntx_pop
?};

{? _msg<>''
|| FUN.info(_msg)
|| sel_exit()
?};
''


\canByDoneZz2Mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Sprawdza czy można wystawić dokument _b w magazynie _a
::   WE: _a - MG.SYM
::       _b - TYPYDOK.ref
::   WY: 0-nie można, 1-można
::----------------------------------------------------------------------------------------------------------------------
MG.cntx_psh();
MG.prefix();
MG.f_clear();
MG.f_set('SYM'
   ,'left join T2MG using(T2MG.MG,MG.REFERENCE)'
   ,'MG.SYM=\':_a\' and (T2MG.T is null or T2MG.T=:_b)'
   ,_a,_b);
_wyn:=
   {? MG.f_first()
   || 1
   || FUN.info('W magazynie %1 nie można wystawić dokumentów typu %2.'@[_a,exec('record','#to_string',_b)]);
      0
   ?};
MG.cntx_pop();
_wyn


\ctrlWycen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.02]
:: OPIS: Sprawdza czy dla pozycji:
::        - cena jest rózna od zera
::        - dana dostawa jest składowa i brak cen zerowych
::   WY: 1-wyceniona 0-nie wszystkie składowe zostały wycenione
:: UWAGA. kontekst wywołania aktualne DK
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
exec('mag_psh','open_tab');
{? DK.C=0
|| _res:=0
|? DK.PRDK<>''
  & (_nag:=exec('FindAndGet','#table',DK,DK.PRDK,,"$N",''))<>''
  & exec('FindAndGet','#table',ND,_nag,,"TYP().DN='K'",0)
|| _sklsql:=DK.PRDK;
   OKR.cntx_psh();
:: przebieg pierwszy zbiera wydania wg SKLSQL dla danego materiału
   _odrok:=2000+(#(form(8+_sklsql)+2));
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.find_key(_odrok)
   || {!
      |? exec('mag_open','open_tab',ST.ODDZ,form(OKR.ROK-2000,-2,0,'99'));
         DK.index('SKLSQL');
         DK.prefix(_sklsql,);
         {? DK.first()
         || {!
            |? _res:=DK.C<>0;
               _res & DK.next()
            !}
         ?};
         _res & OKR.next()
      !}
   ?};
   OKR.cntx_pop()
?};
exec('mag_pop','open_tab');
_res


\chk_tpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: sprawdza poprawność wprowadzenia typu palety
::       UWAGA - formuła wołana również podczas importu rekordów
::   WE: _a - 'add' / 'put' - dołączenie lub poprawa rekordu
::   WY: '' - poprawnie wypełnione, lub akronim błędnie wypełnionego pola
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? form(TPAL.TYP)=''
|| FUN.info('Należy podać typ palety.'@);
   _wyn:='TYP'
|? TPAL.SZER<0
|| FUN.info('Szerokość nie może być liczbą mniejszą od zera.'@);
   _wyn:='SZER'
|? TPAL.DLUG<0
|| FUN.info('Długość nie może być liczbą mniejszą od zera.'@);
   _wyn:='DLUG'
|? TPAL.WYS<0
|| FUN.info('Wysokość nie może być liczbą mniejszą od zera.'@);
   _wyn:='WYS'
|? TPAL.OBJ<0
|| FUN.info('Objętość nie może być liczbą mniejszą od zera.'@);
   _wyn:='OBJ'
|? TPAL.MASA<0
|| FUN.info('Ładowność nie może być liczbą mniejszą od zera.'@);
   _wyn:='MASA'
?};
_wyn


\chk_mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja rekord po dla slownika magazynow MG
::  OLD: \chk_mg/defin.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__buf_mg');
_popraw:=(1+POM.POP_MG)='T';
_czymws:=(1+(1-POM.POP_MG))='T';
_czypal:=(POM.POP_MG+1)='T';
_import:=(POM.POP_MG+2)='XX';
_wyn:=__CHK.record(MG,,'SYM','NAZ');
{? _wyn='' & MG.TYP<>'DOSTAWY' & MG.TYP<>'EWIDEN' & MG.TYP<>'FIFO'
 & MG.TYP<>'LIFO' & MG.TYP<>'ŚREDNIE' & MG.TYP<>'DOSTEWI'
|| FUN.info('Nieprawidłowy typ magazynu.'@);_wyn:='TYP'
?};
{? _wyn=''
|| _sym:=MG.SYM;
   _ref:=MG.ref();
   MG.cntx_psh();
   MG.index('MAGAZYNY');
   MG.prefix(_sym,_sym);
   {? MG.first()
   || {!
      |? {? MG.ref()<>_ref | ~_popraw
         || FUN.info('Istnieje już magazyn z symbolem %1.'@[_sym]); _wyn:='SYM'
         ?};
         _wyn='' & MG.next()
      !}
   ?};
   MG.cntx_pop()
?};
{? _wyn='' & MG.TYP*'DOST' & MG.DEFSTATS=null
|| FUN.info('Proszę wybrać domyślny status dostawy.'@);
   _wyn:='DEFSTATS'
?};
{? _wyn='' & MG.W='T' & MG.WYD=null()
||  FUN.info('Niewypełniony wydział dla magazynu wydziałowego.\nPopraw błędne dane.'@);
    _wyn:='WYD'
?};
{? _wyn=''
|| {? MG.SKL='T' & ~(MG.TYP*'DOSTAWY')
   || FUN.info('Obsługa składów celnych tylko dla magazynu typu \'DOSTAWY\'.\nPopraw błędne dane.'@);
      _wyn:='SKL'
   |? MG.KOOP='T' & ~(MG.TYP*'DOST')
   || FUN.info('Obsługa kooperacji tylko dla magazynu z obsługą dostaw.\nPopraw błędne dane.'@);
      _wyn:='KOOP'
   |? MG.KOOP='T' & MG.MG_OPAK<>''
   || FUN.info('Magazyn kooperacyjny nie może posiadać magazynu opakowań.\nPopraw błędne dane.'@);
      _wyn:='MG_OPAK'
   |? MG.SKL='T' & MG.W='T'
   || FUN.info('Obsługa składów celnych niedostępna dla magazynów wydziałowych.\nPopraw błędne dane.'@);
      _wyn:='W'
   |? MG.SKL='T' & MG.SKL_WAL=null
   || FUN.info('Proszę określić walutę domyślną dla składu celnego.\nUzupełnij dane.'@);
      _wyn:='SKL_WAL'
   |? MG.SKL='T' & MG.SKL_WAL=INFO.NAROD
   || FUN.info('Waluta dla składu celnego musi być różna od narodowej.'@);
      _wyn:='SKL_WAL'
   |? MG.SKL='T' & MG.U='T'
   || FUN.info('Nie można wprowadzać usług na dokumentach rozchodowych w składzie celnym.'@);
      _wyn:='U'
   ?}
?};
:: kontrola domyslnej lokalizacji
{? _wyn='' & ((_popraw & MG.EANL=null) | (_import & MG.KOD_EANL='')) & MG.SL='T'
|| FUN.info('Należy podać domyślną lokalizację.'@);
   _wyn:='EANL'
?};
:: kontrola lokalizacji typu dok dla MWS
{? _wyn='' & MG.MWS='T' &
 ((_popraw & ~((9+MG.EANL().KOD)='D0-00-00-' & (+form(2+(9-MG.EANL().KOD)))=2)) |
  (_import & ~((9+MG.KOD_EANL)='D0-00-00-' & (+form(2+(9-MG.KOD_EANL)))=2)))
|| FUN.info('Dla magazynu typu MWS domyślna lokalizacja musi być typu Dok załadunkowy/wyładunkowy.\n'
            'Uwaga. Nieprawidłowa struktura kodu lokalizacji.'@);
   _wyn:='EANL'
?};
:: kontrola podanej lokalizacji dla importu
{? _wyn='' & _import & MG.EANL=null() & exec('FindInSet','#table','EANL','KOD',MG.KOD_EANL,,,1)<>null() & MG.SL='T'
|| FUN.info('Podana lokalizacja o kodzie %1 jest przypisana do innego magazynu.'@[MG.KOD_EANL]);
   _wyn:='EANL'
?};
:: poprawna struktura lokalizacji dla MWS-a
{? _wyn='' & _popraw & {? _czymws || MG.MWS='N' || MG.MWS='T' ?}
|| exec('aktueanl','magdok_wspolne',MG.ref(),MG.MWS='T')
?};
:: uzupelnienie informacji na tabeli SL o lokalizacje domyslne w przypadku zmiany znacznika
{? _wyn='' & _popraw & ~EANX.CZY_EANL & MG.SL='T'
|| _eanl:=MG.EANL;
   SM.index('SA');
   SM.prefix(MG.ref());
   {? SM.first()
   || {!
      |? {? SM.S>0 || exec('adddelsl','magazyn_stan',MG.ref(),SM.M,_eanl,date(0,0,0),SM.S,1,null(),,SM.IL2) ?};
         SM.next()
      !}
   ?};
   MG.SL:='T';
   MG.EANL:=_eanl
|? _wyn='' & _popraw & EANX.CZY_EANL & MG.SL<>'T'
|| SL.index('MG');
   SL.prefix(MG.ref());
   {? SL.first() || {! |? SL.del() !} ?}
?};
:: kontrola magazynu kooperacji - jeden dla oddziału
{? _wyn='' & MG.KOOP='T'
|| _ref:=MG.ref;
   _oddz:=MG.ODDZ;
   MG.cntx_psh();
   MG.index('KOOP');
   MG.prefix(_oddz,'T');
   {? MG.first()
   || {!
      |? {? MG.ref()<>_ref | ~_popraw
         || FUN.info('Istnieje już magazyn kooperacyjny dla oddziału %1'
                     '.\nMożliwe jest zdefiniowanie tylko jednego magazynu kooperacyjnego dla oddziału.'@[_oddz]);
            _wyn:='KOOP'
         ?};
         _wyn='' & MG.next()
      !}
   ?};
   MG.cntx_pop()
?};
{? _wyn='' & MG.SKL='T' & {? _popraw || exec('FindInSet','#table','T2MG','T',MG.ref(),,,,,null())=null() || 1 ?}
|| FUN.info('Uwaga. Dla magazynu typu SKŁAD CELNY należy przypisać typy dokumentów.'@)
?};
_wyn


\aktueanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: aktualizuje wszystkie lokalizacje dla danego magazynu - jeżeli magazyn jest typu MWS
::   WE: _a - ref magazynu
::       _b - 1-MWS 0-wymiary
::  OLD: \aktueansl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
echo('Trwa aktualizacja lokalizacji ...'@);
MG.cntx_psh();
EANL.cntx_psh();
EANL.index('MG');
EANL.prefix('T',_a);
{? EANL.first()
|| {!
   |? _ref:=EANL.ref();
      _ok:=EANL.next();
      EANL.cntx_psh();
      EANL.clear();
      {? EANL.seek(_ref)
      || {? _b
         || EANL.KOD:={? (1+EANL.KOD)='D'
                      || _dok:=1;
                         'D0-00-00-'+(2+(9-EANL.KOD))+'-'+EANL.MG().SYM
                      || _dok:=0;
                         (2+EANL.KOD)+'-'+(2+(3-EANL.KOD))+'-'+(2+(6-EANL.KOD))+'-'+(2+(9-EANL.KOD))+'-'+EANL.MG().SYM
                      ?};
            EANL.DOK:={? _dok || 'T' || 'N' ?};
            EANL.put(1)
         || EANL.DOK:='T';
            EANL.put(1)
         ?}
      ?};
      EANL.cntx_pop();
      _ok
   !}
?};
EANL.index('MG');
EANL.prefix('N',_a);
{? EANL.first()
|| {!
   |? _ref:=EANL.ref();
      _ok:=EANL.next();
      EANL.cntx_psh();
      EANL.clear();
      {? EANL.seek(_ref)
      || {? _b
         || EANL.KOD:={? (1+EANL.KOD)='D'
                      || _dok:=1;
                         'D0-00-00-'+(2+(9-EANL.KOD))+'-'+EANL.MG().SYM
                      || _dok:=0;
                         (2+EANL.KOD)+'-'+(2+(3-EANL.KOD))+'-'+(2+(6-EANL.KOD))+'-'+(2+(9-EANL.KOD))+'-'+EANL.MG().SYM
                      ?};
            EANL.DOK:={? _dok || 'T' || 'N' ?};
            EANL.put(1)
         || EANL.DOK:='T';
            EANL.put(1)
         ?}
      ?};
      EANL.cntx_pop();
      _ok
   !}
?};
EANL.cntx_pop();
MG.cntx_pop();
echo();
~~


\chk_eanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdza poprawność wypełnienia pól
::   WE: [_a] 1-pomija kontrole KOD i KOD KRESKOWY, 0-sprawdza wszystko
::       [_b] - 'put', 'add' lub pusty string (domyślnie)
::   WY: ''-jest OK 'pole'-nie jest
::  OLD: \chk_eanl/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
_ctrl:={? var_pres('_b')=type_of('') & (+_b)=3
       || _b
       |? (1+menu_txt())='P'
       || 'put'
       || 'add'
       ?};
{? EANL.KOD=''
|| FUN.info('Należy podać kod lokalizacji.'@); 'KOD'
|? EANL.DOK='T' & EANL.MG().MWS='T' & (+form(2+(9-EANL.KOD)))<>2
|| FUN.info('Należy podać oznaczenie doku wyładunkowego/załadunkowego.'@); 'OEANL'
|? EANL.DOK='N' & EANL.MG().MWS='T' & (+form(2+EANL.KOD))<>2
|| FUN.info('Należy podać oznaczenie korytarza.'@); 'KEANL'
|? EANL.DOK='N' & EANL.MG().MWS='T' & form(2+EANL.KOD)='D0'
|| FUN.info('Oznaczenie zarezerwowane dla doku wyładunkowego/załadunkowego.'@); 'KEANL'
|? EANL.TEMP_DO<EANL.TEMP_OD
|| FUN.info('Nieprawidłowy zakres temperatur.'@); 'TEMP_DO'
|? ~_a
|| {? ~exec('unik_ean','kody_kresk','K',EANL.KOD,{? _ctrl='put' || EANL.ref() || null ?})
   || FUN.info('Podany kod został przypisany do innej lokalizacji.\n'
               'Magazyn: %1.\n'@[exec('FindInSet','#table','EANL','KOD',EANL.KOD,EANL.KOD,"EANL.MG().SYM",,,'')]+
               'Należy podać inny kod lokalizacji.'@);
      {? EANL.MG().MWS='T' || 'OEANL' || 'KOD' ?}
   |? ~exec('unik_ean','kody_kresk','R',EANL.EAN,{? _ctrl='put' || EANL.ref() || null ?})
   || _symmag:=exec('FindInSet','#table','EANL','EAN',EANL.EAN,EANL.EAN,"EANL.MG().SYM",,,'');
      {? _symmag<>''
      || FUN.info('Podany kod kreskowy został przypisany do innej lokalizacji.\n'
                  'Magazyn: %1.\n'@[_symmag]+
                  'Należy podać inny.'@)
      || FUN.info('Podany kod kreskowy wykorzystano w systemie.\n'@+
                  'Należy podać inny.'@)
      ?};
      'EAN'
   || ''
   ?}
|? _a
|| ''
?}


\rekmg_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdzenie poprawnosci wypelnienia pol MG_GR
::   WE: [_a] - 'add' / 'put' - dołączenie lub poprawa rekordu, pusty string oznacza wywołanie w systemie
::  OLD: \rekmg_gr/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_ctrl:={? var_pres('_a')=type_of('') & (+_a)=3
       || _a
       |? (1+menu_txt())='P'
       || 'put'
       || 'add'
       ?};
{? form(MG_GR.KOD)=''
|| FUN.info('Należy podać kod strefy magazynowej.'@);
   _wyn:='KOD'
|| _ref:={? _ctrl='put' || MG_GR.ref() || null ?};
   _kod:=MG_GR.KOD;
   MG_GR.cntx_psh();
   MG_GR.index('KOD');
   MG_GR.prefix(_kod,_kod);
   {? MG_GR.first() & (_ref=null | _ref<>MG_GR.ref) || _wyn:='KOD' ?};
   MG_GR.cntx_pop();
   {? _wyn<>''
   || FUN.info('Zdefiniowano już strefę magazynową o kodzie: %1.\n'
               'Należy podać inny kod strefy magazynowej.'@[_kod])
   ?}
?};
_wyn


\mg_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Formuła eksportująca wartość parametru MG dla czynności
::   WE: _a - MG.ref() - wartość parametru
::   WY: STRING - treść formuły która się wykona po stronie importu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_magazyn:=_a;

_fml:='';

MG.cntx_psh();
MG.clear();
{? MG.seek(_magazyn)
||
   _fml:=exec('formulizer_common','#b_export');
   _fml+='
      MG.cntx_psh();
      MG.index(\'SL_ALL\');
      MG.prefix(\'T\',\''+MG.SYM+'\',);
      {? MG.first()
      || _result.REF:=MG.ref();
         _result.RESULT:=1
      || _result.RESULT:=0;
         _result.REF:=null();
         {? _komm>0
         ||
            _msg:=\'Nie znaleziono magazynu o symbolu: %1\'@[\''+MG.SYM+'\'];
            exec(\'import_komm\',\'#b_export\',_msg)
         ?}
      ?};
      MG.cntx_pop();
      _result
   ';
   _fml:=exec('formulizer_clean','#b_export',_fml)
?};
MG.cntx_pop();
_fml


\bl_dkltw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Wartość początkowa pola DK_L.TW
::----------------------------------------------------------------------------------------------------------------------
{? DK_L.DK<>null() & DK_L.DK().M().SETW='P'
|| DK_L.DK().TW
|| date(0,0,0)
?}


\podkltw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Po redakcji pola DK_L.TW
::   WY: 1-ok 0-nie jest dobrze
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? DK_L.DK_LN<>null() & DK_L.M().SETW='P'
|| _jm:=DK_L.M().J().KOD;
   _aktil:=exec('stnilwgtw','magazyn_stan',date,DK_L.DK_LN().MG,DK_L.M,DK_L.TW,DK_L.SCEAN);
   {? _aktil<DK_L.IL
   || FUN.info('Termin ważności dla indeksu materiałowego %1\n'
               'jest wprowadzany bezpośrednio na pozycjach dokumentu.\n\n'
               'Aktualny stan danego materiału dla terminu ważności %2 to %3 %4.\n'
               'Należy poprawić termin lub ilość.'@[DK_L.M().KTM,$DK_L.TW,$_aktil,_jm])
   ?}
?};
{? _res || DK_L.TWDO:=DK_L.TW ?};
_res


\f3dkltw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Wyswietla listę z dostępnymi terminami ważności dla pola DK_L.TW
::   WE: [_a] - 1-dla przed redakcją, 0-nie (domyślnie)
::----------------------------------------------------------------------------------------------------------------------
_cntx_mod:={? var_pres('_a')=type_of(0) || _a || 0 ?};

_tab:=tab_tmp(1,'TW','DATE','Termin ważności','IL','REAL','Ilość');
_winsel:=_tab.mk_sel('Terminy ważności %1'@[DK_L.M().KTM],'P',,'#reotwmsetwp',,,,,'U');
_tab.win_fld(_winsel,,'TW',,,20,,,'Termin ważności'@);
_tab.win_fld(_winsel,,'IL',,,15,,,'Aktualny stan'@);
_tab.win_act(_winsel,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
_tab.win_act(_winsel,,'Szukaj'@);
_tab.win_act(_winsel,,'Kolejność'@);
_tab.win_sel(_winsel);
SL.cntx_psh();
SL.index('AUTT');
SL.prefix(DK_L.DK_LN().MG,DK_L.M);
{? SL.first()
|| {!
   |? _tab.clear();
      {? ~_tab.find_key(SL.TW)
      || _tab.blank();
         _tab.TW:=SL.TW;
         _tab.IL:=SL.IL;
         _tab.add(1)
      || _tab.IL+=SL.IL;
         _tab.put(1)
      ?};
      SL.next()
   !}
?};
SL.cntx_pop();
_tab.clear();
{? _tab.first()
|| {? {? _tab.find_key(DK_L.TW) & _cntx_mod || 1 || _tab.select(,1) ?}
   || DK_L.TW:=_tab.TW;
      {? DK_L.IL>_tab.IL || DK_L.IL:=_tab.IL ?};
      exec('reoIL2','magdok_wymiary');
      _res:=1
   || _res:=~~
   ?}
|| FUN.info('Brak stanów wg wymiarów dla indeksu materiałowego %1.'@[DK_L.M().KTM]);
   _res:=~~
?};
obj_del(_tab);
_res


\ctrl_setw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: kontrola ilosci wg terminów ważności dla pozycji z terminem na dostawie
::   WY: 1-jest OK 0-nie jest dobrze
::----------------------------------------------------------------------------------------------------------------------
_ildkl:=tab_tmp(3,'MAT','STRING[16]',''
         ,'TW','DATE',''
         ,'SCEAN','STRING[128]',''
         ,'ILE','REAL','');
_wyn:=1;

DK_L.cntx_psh();
DK_L.index('DK_LN');
DK_L.prefix('Z',DK_LN.ref());
{? DK_L.first()
|| _mag:=DK_L.DK_LN().MG;
   _aut:=DK_L.DK_LN().MG().SP_REANL<>'N';
   {!
   |? {? DK_L.M().SETW='P'
      || _scean:={? DK_L.SCEAN='' || 'brak' || DK_L.SCEAN ?};
         _ildkl.clear();
         {? _ildkl.find_key($DK_L.M,DK_L.TW,_scean)
         || _ildkl.ILE+=DK_L.IL;
            _ildkl.put(1)
         || _ildkl.blank();
            _ildkl.MAT:=$DK_L.M;
            _ildkl.TW:=DK_L.TW;
            _ildkl.SCEAN:=_scean;
            _ildkl.ILE:=DK_L.IL;
            _ildkl.add(1)
         ?}
      ?};
      DK_L.next()
   !}
?};
DK_L.cntx_pop();
_ildkl.clear();
{? _ildkl.first()
|| {!
   |? _scean:={? _ildkl.SCEAN='brak' || '' || _ildkl.SCEAN ?};
      _aktil:=exec('stnilwgtw','magazyn_stan',date(),_mag,exec('FindAndGet','#table',M,_ildkl.MAT,,null())
               ,_ildkl.TW,_scean);
      {? _ildkl.ILE>_aktil || _wyn:=0 ?};
      _wyn & _ildkl.next()
   !}
?};
obj_del(_ildkl);
_wyn


\pobierzDst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: pobranie informacji o dostawie
::   WE: _a - SCEAN
::----------------------------------------------------------------------------------------------------------------------
_rsql:=exec('FindInSet','#table','MKODK','KK',_a,_a,"MKODK.RSQL");
_pl2mg:=tab_tmp(1,'REF','STRING[16]',''
          ,'MG','STRING[16]',''
          ,'MD','STRING[16]',''
          ,'IL','REAL',''
          ,'RDK','INTEGER',''
          ,'NDK','STRING[8]',''
          ,'SCEAN','INTEGER','');
{? exec('pobPLUS2MG','statexam',_pl2mg,_rsql) & (_pl2mg.prefix();_pl2mg.last())
|| {!
   |? {? _pl2mg.MD=$ST.MAG
      || _rsql:=_pl2mg.REF;
         0
      || _pl2mg.prev()
      ?}
   !}
?};

{? _rsql<>''
|| DK_L.SCSQL:=_rsql;
   DK_L.TW:=DK_L.TWDO:=exec('FindAndGet','#table',DK,_rsql,,"TW",date(0,0,0));
   EANX.DOSTAWA:=exec('FindAndGet','#table',DK,_rsql,,"DOST",date(0,0,0))
?};
obj_del(_pl2mg);
~~


\ctrlWycREO
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: kontroluje czy na danej reorganizacji są pozycje związane ze zmianą kwalifikacji dostawy
::   WE: _a - DK_LN.ref()
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;

DK_LN.cntx_psh();
DK_L.cntx_psh();
DK_L.index('DK_LNLOK');
DK_L.prefix(_a);
{? DK_L.first() & {? DK_L.DK_LN().STAT_REJ='Z' || exec('ctrl_setw','magdok_wspolne') || 1 ?}
|| {!
   |? {? DK_L.M().SETW='P' & DK_L.SCSQL<>''
      || _prdk:=DK_L.SCSQL;
         _oddz:=(8+_prdk)+3;
         _frok:=#(_oddz+2)+2000;
         _oddz:=1+_oddz;
         exec('mag_psh','open_tab');
         OKR.index('MC');
         OKR.prefix(REF.FIRMA,1);
         {? OKR.find_key(_frok)
         || {!
            |? exec('mag_open','open_tab',_oddz,$(OKR.ROK-2000));
               DK.index('PRDK');
               DK.prefix(_prdk,);
               _res:=DK.find_tab('first','PLUS',,'=','T','SRDK',,'<>',_prdk,'ZP',,'<>',0);
               ~_res & OKR.next()
            !}
         ?};
         exec('mag_pop','open_tab')
      ?};
      ~_res & DK_L.next()
   !}
?};

DK_LN.cntx_pop();
DK_L.cntx_pop();
_res


\scsqlWGtw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: rozpisuje pozycje reorganizacji wg dostawy i terminu ważności
::   WE: _a - magazyn
::       _b - materiał
::       _c - termin ważności
::   WY: tabela dostaw
::----------------------------------------------------------------------------------------------------------------------
_mag:=_a;
_mat:=_b;
_tw:=_c;
_res:=tab_tmp(2,'EANL','STRING[16]',''
       ,'SCSQL','STRING[16]',''
       ,'IL','REAL','');
OKR.cntx_psh();
exec('mag_psh','open_tab');
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.last
|| {!
   |? exec('mag_open','open_tab',ST.ODDZ,$OKR.ROK+2);
      DK_L.index('SCSQL');
      DK_L.prefix(_mag,_mat);
      {? DK_L.first() & DK_L.find_tab('first','TW',,'=',_tw)
      || {!
         |? _scsql:={? DK_L.SCSQL<>'' || DK_L.SCSQL || 'brak' ?};
            _eanl:={? DK_L.Z='N' || $DK_L.LOKDO || $DK_L.LOK ?};
            _exnl:={? DK_L.Z='N' || $DK_L.LOK || '' ?};
            {? _scsql<>'brak'
            || _res.clear();
               _res.prefix(_eanl,_scsql,);
               {? _res.first()
               || _res.IL+=DK_L.IL;
                  _res.put(1)
               || _res.prefix();
                  _res.blank();
                  _res.SCSQL:=_scsql;
                  _res.EANL:=_eanl;
                  _res.IL:=DK_L.IL;
                  _res.add(1)
               ?};
               {? _exnl<>''
               || _res.clear();
                  _res.prefix(_exnl,_scsql,);
                  {? _res.first()
                  || _res.IL-=DK_L.IL;
                     _res.put(1)
                  || _res.prefix();
                     _res.blank();
                     _res.SCSQL:=_scsql;
                     _res.EANL:=_exnl;
                     _res.IL:=-DK_L.IL;
                     _res.add(1)
                  ?}
               ?}
            ?};
            DK_L.find_tab('next','TW',,'=',_tw)
         !}
      ?};
      OKR.prev
   !}
?};
OKR.cntx_pop();
exec('mag_pop','open_tab');
_res


\ctrlSETW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.51]
:: OPIS: kontroluję, czy nie była to wcześniejsza dostawa
::   WE: _a - M.refernece
::       _b - DK.SRDK
::   WY: 1-wcześniejsza dostawa 0-nie
::  OLD: \ctrlSETW/tkod.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=0;

{? (5+_b)='dokma'
|| _msk:=3+(5-_b);
   ND.cntx_psh();
   DK.cntx_psh();
   ND.use('nagdo'+_msk);
   DK.use('dokma'+_msk);
   DK.prefix();
   _dttm:={? DK.seek(_b) || form(DK.N().DR)+' '+form(DK.N().CR,,3) || '' ?};
   ND.cntx_pop();
   DK.cntx_pop();
   MKODK.cntx_psh();
   MKODK.index('UNIK');
   MKODK.prefix(null,_a,'T');
   {? MKODK.first() || _res:=MKODK.OPMOB<>'' & (_dttm<MKODK.OPMOB) ?};
   MKODK.cntx_pop()
?};
_res


\ctrlilzw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.51]
:: OPIS: kontrola wypelnienia ilości zwracanych dla dokumentu typu zwrot na dostawę
::   WE: _a - ref dokumentu
::   WY: 1-jest OK 0-nie jest dobrze
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first()
|| {!
   |? _srdk:={? DK.SRDK<>'' || DK.SRDK || DK.PRDK ?};
      {? DK.DOST<>date(0,0,0) & $DK.ref()<>DK.PRDK & _srdk<>'' & DK.PRDK<>''
      || _zwr:=exec('ilDOzwr','magdok_poz',_srdk,$DK.ref());
         {? _zwr<DK.IL
         || _ile:=exec('FindAndGet','#table',DK,DK.PRDK,,"IL",0);
            SC.cntx_psh();
            SC.use('stc__'+(form(8+DK.PRDK)+3));
            SC.index('SRDK');
            SC.prefix(DK.PRDK,);
            _ils:={? SC.first() || SC.S || 0 ?};
            SC.cntx_pop();
            _ile-=_ils;
            {? _ile<0 || _ile:=0 ?};
            _p1:=$DK.P;
            _p2:=DK.M().KTM;
            _p3:=form(_ile,,DK.M().DOKL);
            _p4:=DK.M().J().KOD;
            exec('add_kom','#message'
             ,'Ilość do zwrotu poz.%1 indeks: %2 maksymalnie na dostawę można zwrócić: %3 %4.'@[_p1,_p2,_p3,_p4],2);
            _res:=0
         ?}
      ?};
      _res & DK.next()
   !}
?};
DK.cntx_pop();
_res


\realDYSPmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: realizacja dyspozycji w magazynie
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__reazlzk','__realgozk');
{? TR_NZL.WHERE='TR_NZL' & TR_NZL.DOK_REF<>''
|| _dspref:=TR_NZL.ref();
   POMOC.TR_NZL:=_dspref;
   POMOC.ZAM_REA:='';
   _rea_zam:=exec('zamWGtr_zl','transport_wspolne',_dspref);
   _dok_ref:=exec('FindInSet','#table','TR_ZL','POZ',TR_NZL.ref(),,"@.TR_ZL.DOK_REF");
   _rea_zam.clear();
   _rea_zam.prefix(_dok_ref);
   {? _rea_zam.first() || _rea_zam.del() ?};
   _Tab:=ref_tab(_dok_ref);
   _rodzzam:={? _dok_ref*'zdptn' || 'P' || exec('FindAndGet','#table',_Tab,_dok_ref,,"T().R",'') ?};

   _act_uid:={? _rodzzam='Z' || 'LSP_ZKN_IPRZ'
             |? _rodzzam='W' || 'LMG_ZAM_IPRZ'
             |? _rodzzam='D' || 'LZK_ZDS_REAL'
             |? _rodzzam='P' || 'LZK_ZDS_REAL'
             || '???'
             ?};
   _uidref:=_dok_ref;
   _zamref:=exec('FindAndGet','#table',_Tab,_dok_ref,,,null());

   _namepar:={? _rodzzam='Z' || 'ZK_N'
             |? _rodzzam='W' || 'ZAM'
             |? _rodzzam='D' || 'ZD_NAG'
             |? _rodzzam='P' || 'ZDP_NAG'
             || '???'
             ?};
   {? _act_uid<>'???'
   || _params:=exec('mp_run_a','#b__box');
      _params.ACT_UID:=_act_uid;
      _params.UIDREF:=_uidref;
      _params.AKCJA:='Realizuj';
      _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
      exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,_namepar,_zamref);
      {? _rodzzam='P'
      || _poz_ref:=exec('FindInSet','#table','TR_ZL','POZ',TR_NZL.ref(),,"@.TR_ZL.POZ_REF");
         _zd_poz:=exec('FindAndGet','#table',ZDP_POZ,_poz_ref,,"ZD_POZ",'');
         _zd_nag:=exec('FindAndGet','#table',ZD_POZ,_zd_poz,,"ZD_NAG",null());
         exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZD_NAG',_zd_nag)
      ?};
      exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TR_NZL',_dspref);
      exec('mp_run','#b__box',_params);

      obj_del(_params);
      TR_NZL.cntx_psh();
      ND.cntx_psh();
      _rea_zam.prefix();
      {? _rea_zam.first() & POMOC.ZAM_REA<>''
      ||
::       uruchomienie innych instancji realizacji
         {!
         |? _zamref:=exec('FindAndGet','#table',_Tab,_rea_zam.DOK_REF,,,null());
            _params:=exec('mp_run_a','#b__box');
            _params.ACT_UID:=_act_uid;
            _params.UIDREF:=_rea_zam.DOK_REF;
            _params.AKCJA:='Realizuj';
            _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
            exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,_namepar,_zamref);
            exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TR_NZL',_dspref);
            {? _rodzzam='D'
            || exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZD_REA',POMOC.ZAM_REA)
            || exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZK_REA',POMOC.ZAM_REA)
            ?};

            exec('mp_run','#b__box',_params);
            obj_del(_params);
            _rea_zam.next()
         !}
      ?};

      TR_NZL.cntx_pop();
      ND.cntx_pop()
   || FUN.info('Nie znaleziono powiązanego zamówienia.\nUtworzenie dokumentu niemożliwe.'@)
   ?};
   obj_del(_rea_zam);
   POMOC.ZAM_REA:='';
   POMOC.TR_NZL:=null()
?};
~~


\ctrl_wycsetw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: kontrola czy przypadkiem jakaś z pozycji z terminem na dostawie nie została rozchodowana
::   WY: 1-jest OK 0-nie jest dobrze -1-sa pozycje, ktore można odakceptować
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_wyc:=0;
_aktdk_ln:=DK_LN.ref();
DK_L.cntx_psh();
DK_L.index('DK_LN');
DK_L.prefix('Z',DK_LN.ref());
{? DK_L.first() & (1+DK_L.DK_LN().MG().TYP)='D'
|| _mag:=DK_L.DK_LN().MG;
   {!
   |? {? DK_L.M().SETW='P' & DK_L.SCSQL<>''
      ||
::       sprawdzenie czy jest to ostatnia operacja
         _dk_ln:=DK_LN.ref(); _mat:=DK_L.M; _scsql:=DK_L.SCSQL;
         _dt:=DK_LN.DT; _tm:=DK_LN.TM;
         _inw:=DK_LN.RODZ='I';
         _ctrl:=0;
         DK_L.cntx_psh();
         DK_L.index('SCSQL');
         DK_L.prefix(_mag,_mat,_scsql);
         _ctrl:=DK_L.first() &
            (DK_L.find_tab('first','DK',,'=',null(),'DK_LN',,'<>',_dk_ln,'DK_LN','DT','>',_dt)
           | DK_L.find_tab('first','DK',,'=',null(),'DK_LN',,'<>',_dk_ln,'DK_LN','DT','=',_dt,'DK_LN','TM','>',_tm));
         DK_L.cntx_pop();
         _ile:=exec('FindAndGet','#table',DK,DK_L.SCSQL,,"IL",0);
         _ils:=exec('obl_stsc','magazyn_stan',ref_num(DK_L.SCSQL),ref_name(DK_L.SCSQL),_mag,DK_L.M);
         {? _ils<0 || _ils:=0 ?};
         {? ~_ctrl & _inw
         || _res:=1;
            _wyc+=1
         |? _ils=0 | _ctrl
         || {? _res || _res:=_ile=_ils ?};
            _wyc+=_ile=_ils
         ?}
      || _wyc+=1
      ?};
      (_res | (~_res & ~_wyc)) & DK_L.next()
   !}
?};
DK_L.cntx_pop();
{? ~_res & _wyc || _res:=-1 ?};
_res


\result_gendok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Wynik funkcji generujących dokumenty magazynowe
::   WY: obj_new() - pola: ND, DK, DK_C, RESULT, TXT
::----------------------------------------------------------------------------------------------------------------------
_res:=obj_new(
:: Nagłówek dokumentu
               'ND'
:: Pozycja dokumentu
              ,'DK'
:: Cecha dokumentu
              ,'DK_C'
:: Wynik generowania: 0 - sukces, 0 - porażka, -1 - rezygnacja
              ,'RESULT'
:: Opis problemu albo błędu
              ,'TXT');
_res.ND:=null();
_res.DK:=null();
_res.DK_C:=null();
_res.RESULT:=0;
_res.TXT:='';
_res


\aktDK_C
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Aktualizuje dane na DK_C
::   WE: _a - M_ATR
::       _b - tabela starych wartości
::       _c - tabela nowych wartości
::       _d - ref starej cechy
::   WY: null() - nic nie zmieniamy, DK_C.ref=_d - zmiana wartości, DK_C.ref<>_e - nowa cecha
::----------------------------------------------------------------------------------------------------------------------
_res:=null();

_m_atr:=_a;
  _old:=_b;
  _new:=_c;

_refdk_c:=_d;

_zm:=0;
_ll:=obj_len(_old);
_ii:=0;
{!
|? _ii+=1;
   _zm:=_old[_ii]<>_new[_ii];
   ~_zm & _ii<_ll
!};
{? _zm
||
:: sprawdzamy czy w danym zakresie cech istnieje już taka o nowych wartościach
   _find:='DK_C.find_tab(\'first\'';
   {! _ii:=1.._ll |! _find+=',\'WAR%1\',,\'=\',\'%2\''[form(_ii,-2,0,'99'),_new[_ii]] !};
   _find+=')';
   DK_C.cntx_psh();
   DK_C.index('M_ATR');
   DK_C.prefix(_m_atr);
   {? DK_C.first() & ($_find)()
   || _res:=DK_C.ref()
   || _res:=_refdk_c
   ?};
   DK_C.cntx_pop()
?};
_res


\mod_atrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Zmiana atrybutów cechy dostawy
::   WE: [_a] - 1-od strony dostaw 0(domyślnie)-nie
::----------------------------------------------------------------------------------------------------------------------
_modsc:={? var_pres('_a')=type_of(0) || _a || 0 ?};

_tab:=DK.sel_aget();
DK.sel_adel();
ND.cntx_psh();
DK.cntx_psh();
ND.prefix();
{? _modsc | ~_tab.size()
|| DK.N().SYM;
   {? exec('blok_nd','magdok_nag','T') & ND.r_lock(1,1,1)
   || exec('dk_edit','magdok_poz','p',,1);
      ND.r_unlock()
   ?}
|| ATR.MOD:=2;
   ATR.MJS:='DK';
   ATR.M_ATR:=M_ATR.ref();
   ATR.UZUP:=exec('wz_uzup','mat_atr',ATR.M_ATR);
   ATR.FLAG:=1;
   _ll:=exec('rozm_atr','mat_atr',ATR.M_ATR);
   {! _ii:=1.._ll
   |! ($('ATR.WAR%1'[form(_ii,-2,0,'99')]))():='';
      {? ($('M_ATR.MOD%1'[form(_ii,-2,0,'99')]))()
      || ZMIENNE.efld_opt('ATR','enable=1',M_ATR,'SL_%1'[form(_ii,-2,0,'99')])
      || ZMIENNE.efld_opt('ATR','enable=0',M_ATR,'SL_%1'[form(_ii,-2,0,'99')])
      ?}
   !};
   exec('zmienne_dk_win','magdok_poz',1);
   {? ZMIENNE.edit("")
   || _zm:=0;
      _ii:=0;
      {!
      |? _ii+=1;
         _zm:=($('ATR.WAR%1'[form(_ii,-2,0,'99')]))()<>'';
         ~_zm & _ii<_ll
      !};
      {? _zm
      || VAR_DEL.delete('__odkc','__ndkc');
         _blk:=0;
         _pop:=0;
         _err:=0;
         _bez:=0;
         {? _tab.first()
         || {!
            |? {? (DK.prefix(); DK.seek(_tab.REF))
               || DK.N().SYM;
                  {? ~exec('blok_nd','magdok_nag','N')
                  || _blk+=1
                  || DK.N().SYM;
                     {? ND.r_lock(1,1,1)
                     || _olddkc:=obj_new(_ll);
                        _newdkc:=obj_new(_ll);
                        __odkc:=__ndkc:=DK.DK_C;
                        ATR.MOD:=(DK.N().MAG().TYP*'DOST') & exec('isMOD','mat_atr',DK.M().M_ATR);
                        {? ATR.MOD
                        || {! _ii.._ll
                           |! {? ~($('M_ATR.MOD'+form(_ii,-2,0,'99')))() | ($('ATR.WAR'+form(_ii,-2,0,'99')))()=''
                              || ($('ATR.WAR'+form(_ii,-2,0,'99')))():=($('DK.DK_C().WAR'+form(_ii,-2,0,'99')))()
                              ?};
                              _olddkc[_ii]:=($('DK.DK_C().WAR'+form(_ii,-2,0,'99')))();
                              _newdkc[_ii]:=($('ATR.WAR'+form(_ii,-2,0,'99')))()
                           !}
                        ?};
                        __ndkc:=exec('aktDK_C','magdok_wspolne',DK.M().M_ATR,_olddkc,_newdkc,__odkc);
                        {? __ndkc<>null()
                        || _zmdkc:=1;
                           {? __ndkc=__odkc
                           ||
::                               musimy stwierdzić czy zmieniamy daną cechę, czy jednak tworzymy zupełnie nową
                              {? ~exec('ctrlDK_C','mat_atr',__ndkc,DK.PRDK)
                              ||
::                                  korygujemy tylko wartości atrybutów
                                 exec('FindAndGet','#table',DK_C,__odkc,,
                                  "_ll:=exec('rozm_atr','mat_atr',DK_C.M_ATR);
                                   {! _ii:=1.._ll
                                   |! ($('DK_C.WAR'+form(_ii,-2,0,'99')))():=($('ATR.WAR'+form(_ii,-2,0,'99')))()
                                   !};
                                   put(1)
                                  ",0);
                                 __ndkc:=null()
                              ||
::                               zakładamy nową cechę
                                 __ndkc:=exec('m_atr_sprdod','mat_atr',ATR.WAR01,ATR.WAR02,ATR.WAR03,ATR.WAR04
                                          ,ATR.WAR05,ATR.WAR06,ATR.WAR07,ATR.WAR08,ATR.WAR09,ATR.WAR10
                                          ,DK.DK_C().M_ATR,DK.DK_C().ZPARN);
                                 {? 'AZP'*DK.M().IDMOB
                                   & (1+DK.N().MAG().TYP)='D'
                                 || _scean:=exec('newscean','magdok_poz',DK.M,DK.M().IDMOB
                                             ,__ndkc,DK.DK_C().ZPARN,DK.ZL,'')
                                 ?};
                                 _zmdkc:=2
                              ?}
                           || _zmdkc:=2
                           ?};
                           {? _zmdkc
                           || do();
                              {? _zmdkc=2 & __ndkc<>null()
                              || DK.DK_C:=__ndkc;
                                 {? DK.M().IDMOB='A' | (DK.M().IDMOB='D' & DK.M().IDZP)
                                 || DK.SCEAN:=exec('zwrdkc_m','material',$DK.DK_C,DK.M)
                                 ?};
                                 DK.put(1)
                              ?};
                              {? exec('zmcene','magdok_poz',DK.ref(),DK.C,DK.CWAL,,DK.C,,_zmdkc,__ndkc)=0
                              || undo();
                                 FUN.info('Zmiana atrybutu dostawy dla indeksu %1 nie powiodła się.\n\n'
                                          'Operacja została anulowana.'@[DK.M().KTM]);
                                 _err+=1
                              || _pop+=1
                              ?};
                              end()
                           ?}
                        || _bez+=1
                        ?};
                        obj_del(_olddkc);
                        obj_del(_newdkc)
                     || _blk+=1
                     ?};
                     ND.r_unlock()
                  ?}
               ?};
               _tab.next()
            !}
         ?};
         VAR_DEL.delete('__odkc','__ndkc');
         FUN.info('Poprawiono atrybuty dla: %1 pozycji.\n'
                  'Pominięto ze względu na blokadę: %2 pozycji.\n'
                  'Pominięto ze względu na brak zmian: %3 pozycji.\n'
                  'Nie udało się zmienić atrybutów: %4 pozycji.'@[$_pop,$_blk,$_bez,$_err])
      || FUN.info('Nie podano żadnej wartości do zmiany.\nOperacja anulowana.'@)
      ?}
   ?};
   {! _ii:=1.._ll |! ZMIENNE.efld_opt('ATR','enable=1',M_ATR,'SL_%1'[form(_ii,-2,0,'99')]) !};
   ATR.MOD:=0
?};
ND.cntx_pop();
DK.cntx_pop();
obj_del(_tab);
~~


\modATRfap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Zmiana atrybutów cechy dostawy dla pozycji faktury
::   WE: _a - wskazanie na FAP-a (ref SQL)
::       _b - nowa cecha
::   WY: 1-ok 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
 _fap:={? var_pres('_a')=type_of('') || _a || '' ?};
_dk_c:={? var_pres('_b')=type_of(null()) || _b || null() ?};

{? _fap<>'' & _dk_c<>null()
|| FAKS.cntx_psh();
   FAP.cntx_psh();
   _msk:=form(8+_fap);
   _rok:=#(_msk+2)+2000;
   _oddz:=1+(_msk+3);
   FAKS.use('faktu'+(_msk+3));
   FAP.use('fakpo'+(_msk+3));
   FAP.prefix();
   {? FAP.seek(_fap) & ~FAKS.r_lock(1,1,1,#FAP.FAKS,ref_name(FAP.FAKS))
   || _poz:=FAP.POZ;
      _fksql:=$FAP.FAKS;
      _o_dkc:=FAP.DK_C;
      FAP.DK_C:=_dk_c;
      {? FAP.put(1)
      || OKR.cntx_psh();
         OKR.index('MC');
         OKR.prefix(REF.FIRMA,1);
         {? OKR.find_key(_rok)
         || {!
            |? FAKS.use('faktu'+_oddz+form(OKR.ROK-2000,-2,0,'99'));
               FAP.use('fakpo'+_oddz+form(OKR.ROK-2000,-2,0,'99'));
               FAP.index('FAP');
               FAP.prefix();
               {? FAP.first() & FAP.find_tab('first','FAKS','FKSQL','=',_fksql,'POZ',,'=',_poz,'DK_C',,'=',_o_dkc)
               || {!
                  |? FAP.DK_C:=_dk_c;
                     {? ~FAP.put(1) || _res:=0 ?};
                     _res & FAP.find_tab('next','FAKS','FKSQL','=',_fksql,'POZ',,'=',_poz,'DK_C',,'=',_o_dkc)
                  !}
               ?};
               _res & OKR.next()
            !}
         ?};
         OKR.cntx_pop()
      || _res:=0
      ?}
   ?};
   FAKS.cntx_pop();
   FAP.cntx_pop()
?};
_res


\his_hakt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Wyświetla uproszczoną historię danej dostawy
::----------------------------------------------------------------------------------------------------------------------
:: kontrola czy zostało utworzone pełne drzewo historii dostaw

VAR_DEL.delete('__hakt','__hdod','__hwin','__hwid','__dstd','__htab');
__dstd:=tab_tmp(1,'PRDK','STRING[16]',''
         ,'DSTD','DATE',''
         ,'DSTT','STRING[8]',''
         ,'DSTS','STRING[20]',''
         ,'DSTP','INTEGER',''
         ,'DSTK','STRING[10]','');
__hakt:=tab_tmp(3,'RODZ','STRING[1]','Rodzaj'
         ,'PRDK','STRING[16]','dostawa'
         ,'SYM','STRING[30]','Symbol'
         ,'IL','REAL','Ilość'
         ,'JM','STRING[10]','jm'
         ,'KH_SKR','STRING[10]','Kontrahent'
         ,'KTM','STRING[50]',''
         ,'NAZ','STRING[100]',''
         ,'OPIS','STRING[20]',''
         ,'PART','STRING[20]',''
         ,'ZLEC','STRING[20]',''
         ,'DOST','STRING[100]',''
         ,'DSTD','DATE',''
         ,'DSTT','STRING[8]',''
         ,'DSTS','STRING[20]',''
         ,'DSTP','INTEGER','');
__hdod:=tab_tmp(3,'RODZ','STRING[1]','Rodzaj'
         ,'PRDK','STRING[16]','dostawa'
         ,'SYM','STRING[30]','Symbol'
         ,'IL','REAL','Ilość'
         ,'JM','STRING[10]','jm'
         ,'KH_SKR','STRING[10]','Kontrahent'
         ,'KTM','STRING[50]',''
         ,'NAZ','STRING[100]',''
         ,'OPIS','STRING[20]',''
         ,'PART','STRING[20]',''
         ,'ZLEC','STRING[20]',''
         ,'DOST','STRING[100]',''
         ,'DSTD','DATE',''
         ,'DSTT','STRING[8]',''
         ,'DSTS','STRING[20]',''
         ,'DSTP','INTEGER','');
_oki:=0;
_sum:=0;
_ino:=0;
_ibz:=0;
_dost:='';
_nomp:=tab_tmp(1,'PRDK','STRING[16]','dostawa','IL','REAL','ilość');
_bufd:=tab_tmp(2,'DK_REF','STRING[16]','','DOD','INTEGER','');

__hist.cntx_psh();
__hist.prefix();
{? __hist.first()
|| {!
   |? {? __hist.RODZ='TD'
      || _tree_root:=__hist.ref();
         _oki:=__hist.next();
         0
      || __hist.next()
      ?}
   !}
?};
{? _oki
|| {!
   |? {? _tree_root=exec('tree_root','#tree',__hist.ref())
      || _dod:=__hist.PRDK<>__hprdk;
         _tab:={? ~_dod & __hist.RODZ<>'X' || __hakt || __hdod ?};
         {? __hist.RODZ='M'
         || _prdk:=exec('pobPRDK','magdok_wspolne',__hist.PRDK);
            exec('FindAndGet','#table',DK,_prdk,
             ,"@.ND.cntx_psh();
               @.ND.use('nagdo'+(name()+3));
               _res:=N().MAG().SYM;
               @.ND.cntx_pop();
               _res",__hist.MAGAZYN);
            _mgdk:=exec('FindAndGet','#table',DK,_prdk,
                    ,"@.ND.cntx_psh();
                      @.ND.use('nagdo'+(name()+3));
                      _res:=N().MAG().SYM;
                      @.ND.cntx_pop();
                      _res",__hist.MAGAZYN);
            _dod:=_prdk<>__hprdk | __hist.MAGAZYN<>_mgdk;
            obj_del(_tab);
            _tab:={? ~_dod || __hakt || __hdod ?};
            _noadd:=~_dod & exec('FindAndGet','#table',DK,__hist.PRDK,,"PRDK=$ref()",0) & __hist.TREE_REF<>_tree_root;
            {? ~_noadd  & ~_dod
             & exec('FindAndGet','#table',DK,__hist.DK_REF,
                ,"@.ND.cntx_psh();
                  _res:={? PLUS='T' || @.ND.use('nagdo'+(name()+3));N().TYP().DN='T' || 0 ?};
                  @.ND.cntx_pop();
                  _res",0)
            || _noadd:=1
            ?};
            {? _noadd
            || 'nie dodajemy nic - dodatkowa informacja o przyjęciu'
            |?  (_tab.clear(); _tab.prefix('A',_prdk,__hist.MAGAZYN,); _tab.first())
            || _akt:=1;
               _bufd.clear();
               _bufd.prefix(__hist.DK_REF,{? _dod || 1 || 2 ?});
               {? _bufd.first()
               || _akt:=0
               || _bufd.blank();
                  _bufd.DK_REF:=__hist.DK_REF;
                  _bufd.DOD:={? _dod || 1 || 2 ?};
                  _bufd.add(1)
               ?};
               {? _akt
               || _tab.IL+={? __hist.PLUS='T' | __hist.PLUS='TN' || __hist.IL || -__hist.IL ?};
                  {? _tab.IL=0 || _tab.del() || _tab.put(1) ?};
                  {? ~_dod
                  || _sum+={? __hist.PLUS='T' | __hist.PLUS='TN'  || __hist.IL || -__hist.IL ?};
                     _ibz+={? __hist.PLUS='N'
                            & exec('FindAndGet','#table',DK,__hist.DK_REF,
                               ,"@.ND.cntx_psh();
                                 @.ND.use('nagdo'+(name()+3));
                                 _res:=ZL=null() & N().TYP().DS<>'T';
                                 @.ND.cntx_pop();
                                 _res",0)
                           || __hist.IL
                           || 0
                           ?}
                  ?}
               ?}
            || __dstd.prefix(_prdk);
               {? ~__dstd.first()
               || exec('FindAndGet','#table',DK,_prdk,
                    ,"@.ND.cntx_psh();
                      @.ND.use('nagdo'+(name()+3));
                      __dstd.prefix();
                      __dstd.blank();
                      __dstd.PRDK:=$ref();
                      __dstd.DSTD:=DOST;
                      __dstd.DSTT:=N().TYP().T;
                      __dstd.DSTS:=N().SYM;
                      __dstd.DSTP:=P;
                      __dstd.DSTK:={? N().KH<>null() || N().KH().SKR || '' ?};
                      _res:=__dstd.add(1);
                      @.ND.cntx_pop();
                      _res",0)
               ?};

               _tab.blank();
               _tab.RODZ:='A';
               _tab.PRDK:=_prdk;
               _tab.SYM:=__hist.MAGAZYN;
               _tab.IL:={? __hist.PLUS='T' | __hist.PLUS='TN'  || __hist.IL || -__hist.IL ?};
               _tab.JM:=exec('FindAndGet','#table',DK,_prdk,,"M().J().KOD",'');
               _tab.KH_SKR:=__dstd.DSTK;
               _tab.KTM:=exec('FindAndGet','#table',DK,_prdk,,"M().KTM",'');
               _tab.NAZ:=exec('FindAndGet','#table',DK,_prdk,,"M().N",'');
               _tab.OPIS:='MAGAZYN';
               _tab.PART:=exec('FindAndGet','#table',DK,_prdk,,"{? PARTIA<>null() || PARTIA().SYM || '' ?}",'');
               _tab.ZLEC:=exec('FindAndGet','#table',DK,_prdk,,"{? ZL<>null() || ZL().SYM || '' ?}",'');
               _tab.DSTD:=__dstd.DSTD;
               _tab.DSTT:=__dstd.DSTT;
               _tab.DSTS:=__dstd.DSTS;
               _tab.DSTP:=__dstd.DSTP;
               _tab.add(1);
               _bufd.clear();
               _bufd.blank();
               _bufd.DK_REF:=__hist.DK_REF;
               _bufd.DOD:={? _dod || 1 || 2 ?};
               _bufd.add(1);
               {? ~_dod
               || _sum+={? __hist.PLUS='T' | __hist.PLUS='TN'  || __hist.IL || -__hist.IL ?};
                  _ibz+={? __hist.PLUS='N'
                         & exec('FindAndGet','#table',DK,__hist.DK_REF,
                            ,"@.ND.cntx_psh();
                              @.ND.use('nagdo'+(name()+3));
                              _res:=ZL=null() & N().TYP().DS<>'T';
                              @.ND.cntx_pop();
                              _res",0)
                        || __hist.IL
                        || 0
                        ?}
               ?}
            ?};
::          przesunięcia międzymagazynowe
            {? (__hist.PLUS='TN' | __hist.PLUS='NT') & __hist.MAGAZYN=_mgdk
            || _nomp.clear();
               _nomp.prefix(_prdk,);
               {? _nomp.first()
               || _nomp.IL+={? __hist.PLUS='TN'  || -__hist.IL || __hist.IL ?};
                  {? _nomp.IL=0 || _nomp.del() || _nomp.put(1) ?}
               || _nomp.blank();
                  _nomp.PRDK:=_prdk;
                  _nomp.IL:={? __hist.PLUS='TN'  || -__hist.IL || __hist.IL ?};
                  _nomp.add(1)
               ?}
            ?};
::          niezafakturowane wydania
            _bufd.clear();
            _bufd.prefix(__hist.DK_REF,3);
            {? ~_bufd.first()
             & (_nospr:=exec('FindAndGet','#table',DK,__hist.DK_REF,
                         ,"@.ND.cntx_psh();
                           @.ND.use('nagdo'+(name()+3));
                           _res:=N().TYP().DS='T' & N().FAKS_REF='';
                           @.ND.cntx_pop();
                           _res",0);
               _nospr)
            || _tab.prefix();
               _tab.blank();
               _tab.RODZ:='C';
               _tab.PRDK:=_prdk;
               _tab.SYM:='%1 (%2)'[__hist.DOKUMENT,__hist.MAGAZYN];
               _tab.IL:=__hist.IL;
               _tab.JM:=exec('FindAndGet','#table',DK,_prdk,,"M().J().KOD",'');
               _tab.KH_SKR:=__hist.KH_SKR;
               _tab.KTM:=exec('FindAndGet','#table',DK,_prdk,,"M().KTM",'');
               _tab.NAZ:=exec('FindAndGet','#table',DK,_prdk,,"M().N",'');
               _tab.OPIS:='WYDANIE BEZ FAKTURY';
               _tab.DSTD:=__dstd.DSTD;
               _tab.DSTT:=__dstd.DSTT;
               _tab.DSTS:=__dstd.DSTS;
               _tab.DSTP:=__dstd.DSTP;
               _tab.add(1);
               _bufd.clear();
               _bufd.blank();
               _bufd.DK_REF:=__hist.DK_REF;
               _bufd.DOD:=3;
               _bufd.add(1);
               {? ~_dod || _ino+=__hist.IL ?}
            ?}
         |? __hist.RODZ='X'
          & (__hist.cntx_psh(); __hist.prefix(__hist.ref()); _jest:=__hist.first(); __hist.cntx_pop(); ~_jest)
         || {?  (_tab.clear(); _tab.prefix('B',__hist.PRDK,__hist.ZLEC,); ~_tab.first())
            || __dstd.prefix(__hist.PRDK);
               {? ~__dstd.first()
               || exec('FindAndGet','#table',DK,__hist.PRDK,
                    ,"@.ND.cntx_psh();
                      @.ND.use('nagdo'+(name()+3));
                      __dstd.prefix();
                      __dstd.blank();
                      __dstd.PRDK:=$ref();
                      __dstd.DSTD:=DOST;
                      __dstd.DSTT:=N().TYP().T;
                      __dstd.DSTS:=N().SYM;
                      __dstd.DSTP:=P;
                      __dstd.DSTK:={? N().KH<>null() || N().KH().SKR || '' ?};
                      _res:=__dstd.add(1);
                      @.ND.cntx_pop();
                      _res",0)
               ?};

               _tab.blank();
               _tab.RODZ:='B';
               _tab.PRDK:=__hist.PRDK;
               _tab.SYM:=__hist.ZLEC;
               _tab.IL:=exec('FindAndGet','#table',ZPARN,__hist.PART_REF,,"IL",0);
               _tab.JM:=exec('FindAndGet','#table',DK,__hist.PRDK,,"M().J().KOD",'');
               _tab.KH_SKR:='';
               _tab.KTM:=exec('FindAndGet','#table',DK,__hist.PRDK,,"M().KTM",'');
               _tab.NAZ:=exec('FindAndGet','#table',DK,__hist.PRDK,,"M().N",'');
               _tab.OPIS:='ZLECENIE';
               _tab.PART:=exec('FindAndGet','#table',ZPARN,__hist.PART_REF,,"SYM",'');
               _tab.ZLEC:=exec('FindAndGet','#table',ZPARN,__hist.PART_REF,,"{? ZL<>null() || ZL().SYM || '' ?}",'');
               _tab.DSTD:=__dstd.DSTD;
               _tab.DSTT:=__dstd.DSTT;
               _tab.DSTS:=__dstd.DSTS;
               _tab.DSTP:=__dstd.DSTP;
               _tab.add(1);
               {? ~_dod || _sum+=_tab.IL ?}
            ?}
         |? __hist.RODZ='S'
         || _fksql:=exec('FindAndGet','#table',FAKS,__hist.FAKS_REF,,"FKSQL",'');
            _faks:={? _fksql<>'' || exec('FindAndGet','#table',FAKS,_fksql,,"SYM",__hist.DOKUMENT) || __hist.DOKUMENT ?};
            _notkor:=exec('FindAndGet','#table',FAKS,__hist.FAKS_REF,,"WHERE='N'",'');

            _ile:={? _notkor || __hist.IL || exec('ilwgFAP','magdok_wspolne',__hist.FAP_REF,__hist.PRDK) ?};
            {? _ile<>0
            || {? (_tab.clear(); _tab.prefix('C',__hist.PRDK,_faks,); _tab.first())
               || _akt:=1;
                  _bufd.clear();
                  _bufd.prefix(__hist.FAP_REF,{? _dod || 1 || 2 ?});
                  {? _bufd.first()
                  || _akt:=0
                  || _bufd.blank();
                     _bufd.DK_REF:=__hist.FAP_REF;
                     _bufd.DOD:={? _dod || 1 || 2 ?};
                     _bufd.add(1)
                  ?};
                  {? _akt
                  || _tab.IL+=_ile;
                     {? _tab.IL=0 || _tab.del() || _tab.put(1) ?};
                     {? ~_dod || _sum+=_ile ?}
                  ?}
               || __dstd.prefix(__hist.PRDK);
                  {? ~__dstd.first()
                  || exec('FindAndGet','#table',DK,__hist.PRDK,
                       ,"@.ND.cntx_psh();
                         @.ND.use('nagdo'+(name()+3));
                         __dstd.prefix();
                         __dstd.blank();
                         __dstd.PRDK:=$ref();
                         __dstd.DSTD:=DOST;
                         __dstd.DSTT:=N().TYP().T;
                         __dstd.DSTS:=N().SYM;
                         __dstd.DSTP:=P;
                         __dstd.DSTK:={? N().KH<>null() || N().KH().SKR || '' ?};
                         _res:=__dstd.add(1);
                         @.ND.cntx_pop();
                         _res",0)
                  ?};

                  _tab.blank();
                  _tab.RODZ:='C';
                  _tab.PRDK:=__hist.PRDK;
                  _tab.SYM:=_faks;
                  _tab.IL:=_ile;
                  _tab.JM:=exec('FindAndGet','#table',DK,__hist.PRDK,,"M().J().KOD",'');
                  _tab.KH_SKR:={? _fksql<>''
                               || exec('last_khskr','magdok_wspolne',_fksql)
                               |? __hist.FAKS_REF<>''
                               || exec('last_khskr','magdok_wspolne',__hist.FAKS_REF)
                               || ''
                               ?};
                  _tab.KTM:=exec('FindAndGet','#table',DK,__hist.PRDK,,"M().KTM",'');
                  _tab.NAZ:=exec('FindAndGet','#table',DK,__hist.PRDK,,"M().N",'');
                  _tab.OPIS:='SPRZEDAŻ';
                  _tab.DSTD:=__dstd.DSTD;
                  _tab.DSTT:=__dstd.DSTT;
                  _tab.DSTS:=__dstd.DSTS;
                  _tab.DSTP:=__dstd.DSTP;
                  _tab.add(1);
                  _bufd.clear();
                  _bufd.blank();
                  _bufd.DK_REF:=__hist.FAP_REF;
                  _bufd.DOD:={? _dod || 1 || 2 ?};
                  _bufd.add(1);
                  {? ~_dod || _sum+=_ile ?}
               ?}
            ?}
         ?};
         obj_del(_tab)
      ?};
      __hist.next()
   !};
   _ile:=exec('FindAndGet','#table',DK,__hprdk,,"IL",0);
   DK_HS.cntx_psh();
   DK.cntx_psh();
   _dkref:=exec('FindAndGet','#table',DK,__hprdk,,,null());
   {? _dkref<>null()
   || DK_HS.use('dokhs'+(form(8+($_dkref))+3));
      DK_HS.index('DK');
      DK_HS.prefix(_dkref);
      {? DK_HS.first()
      || {? DK_HS.SRC_SQL<>''
         || DK_HS.index('DK');
            DK_HS.prefix(exec('FindAndGet','#table',DK,DK_HS.SRC_SQL,,,null()));
            {? DK_HS.first() & 1 || _ile:=DK_HS.IL ?}
         || {? 1 || _ile:=DK_HS.IL ?}
         ?}
      ?}
   ?};
   DK_HS.cntx_pop();
   DK.cntx_pop();
   _nomp.clear();
   {? _nomp.first()
   || {!
      |? _dod:=_nomp.PRDK<>__hprdk;
         _tab:={? ~_dod || __hakt || __hdod ?};
         _tab.prefix();
         _tab.blank();
         _tab.RODZ:='D';
         _tab.PRDK:=_nomp.PRDK;
         _tab.SYM:='';
         _tab.IL:=_nomp.IL;
         _tab.JM:=exec('FindAndGet','#table',DK,_nomp.PRDK,,"M().J().KOD",'');
         _tab.KH_SKR:='';
         _tab.KTM:=exec('FindAndGet','#table',DK,_nomp.PRDK,,"M().KTM",'');
         _tab.NAZ:=exec('FindAndGet','#table',DK,_nomp.PRDK,,"M().N",'');
         _tab.OPIS:='PRZESUNIĘCIA';
         {? _tab.add(1) & ~_dod || _sum+=_nomp.IL ?};
         obj_del(_tab);
         _nomp.next()
      !}
   ?};
   {? _ibz>0
   || _tab:=__hakt;
      _tab.prefix();
      _tab.blank();
      _tab.RODZ:='D';
      _tab.PRDK:=__hprdk;
      _tab.SYM:='';
      _tab.IL:=_ibz;
      _tab.JM:=exec('FindAndGet','#table',DK,__hprdk,,"M().J().KOD",'');
      _tab.KH_SKR:='';
      _tab.KTM:=exec('FindAndGet','#table',DK,__hprdk,,"M().KTM",'');
      _tab.NAZ:=exec('FindAndGet','#table',DK,__hprdk,,"M().N",'');
      _tab.OPIS:='ROZCHÓD WEWNĘTRZNY';
      _tab.add(1);
      obj_del(_tab)
   ?};
   {? _ile>(_sum+_ino+_ibz)
   || _tab:=__hakt;
      _tab.prefix();
      _tab.blank();
      _tab.RODZ:='D';
      _tab.PRDK:=__hprdk;
      _tab.SYM:='';
      _tab.IL:=_ile-(_sum+_ino+_ibz);
      _tab.JM:=exec('FindAndGet','#table',DK,__hprdk,,"M().J().KOD",'');
      _tab.KH_SKR:='';
      _tab.KTM:=exec('FindAndGet','#table',DK,__hprdk,,"M().KTM",'');
      _tab.NAZ:=exec('FindAndGet','#table',DK,__hprdk,,"M().N",'');
      _tab.OPIS:='ZUŻYTE W PRODUKCJI';
      _tab.add(1);
      obj_del(_tab)
   ?};
   __dstd.prefix(__hprdk,);
   {? __dstd.first()
   || _dost:='%1 z dnia: %2, symbol: %3, pozycja: %4'
             [__dstd.DSTT,form(__dstd.DSTD),__dstd.DSTS,form(__dstd.DSTP,,,'99')]
   ?}
?};
__hist.cntx_pop();
obj_del(_nomp);
obj_del(_bufd);
:: okienko drzewka
__hwin:=__hakt.mk_sel('Skrócona historia dostawy: %1'@[_dost],,,'#skrhist_dost',,,,,'U',,,,,,,'on');
__hakt.win_fld(__hwin,,'OPIS',,,20,,,'Rodzaj'@);
__hakt.win_fld(__hwin,,'SYM',,,20,,,'Opis'@);
__hakt.win_fld(__hwin,,'KH_SKR',,,25,,,'Kontrahent'@);
__hakt.win_fld(__hwin,,'ZLEC',,,25,,,'Zlecenie'@);
__hakt.win_fld(__hwin,,'PART',,,25,,,'Partia'@);
::__hakt.win_fld(__hwin,,'DSTD',,,10,,,'Z dnia'@);
::__hakt.win_fld(__hwin,,'DSTT',,,8,,,'Typ'@);
::__hakt.win_fld(__hwin,,'DSTS',,,15,,,'Symbol'@);
::__hakt.win_fld(__hwin,,'DSTP',,,7,,,'Pozycja'@);
::__hakt.win_fld(__hwin,,'KTM',,,15,,,'Indeks'@);
::__hakt.win_fld(__hwin,,'NAZ',,,15,,,'Nazwa'@);
__hakt.win_fld(__hwin,,'IL',,,12,3,,'Ilość'@);
__hakt.win_fld(__hwin,,'JM',,,8,,,'jm'@);
__hakt.win_act(__hwin,,'Szukaj');
__hakt.win_act(__hwin,,'Kolejność');
__hakt.win_act(__hwin,,'Formuła','Legenda'@@,,,"exec('legenda','color','HDS#01')");
__hakt.win_act(__hwin,,'Rekord',,,,"__htab:=1;exec('rekprzed','color','HDS#01')");

__hwid:=__hdod.mk_sel('Skrócona historia dostaw powiązanych (produkcja wyrobów)'@
         ,,,'#skrhist_dosd',,,,,'U',,,,,,,'off');
__hdod.win_fld(__hwid,,'OPIS',,,20,,,'Rodzaj'@);
__hdod.win_fld(__hwid,,'SYM',,,20,,,'Opis'@);
__hdod.win_fld(__hwid,,'DSTD',,,10,,,'Z dnia'@);
__hdod.win_fld(__hwid,,'DSTT',,,3,,,'Typ'@);
__hdod.win_fld(__hwid,,'DSTS',,,6,,,'Symbol'@);
__hdod.win_fld(__hwid,,'DSTP',,,-4,,,'Pozycja'@);
__hdod.win_fld(__hwid,,'KTM',,,10,,,'Indeks'@);
__hdod.win_fld(__hwid,,'NAZ',,,7,,,'Nazwa'@);
__hdod.win_fld(__hwid,,'KH_SKR',,,10,,,'Kontrahent'@);
__hdod.win_fld(__hwid,,'ZLEC',,,10,,,'Zlecenie'@);
__hdod.win_fld(__hwid,,'PART',,,10,,,'Partia'@);
__hdod.win_fld(__hwid,,'IL',,,12,3,,'Ilość'@);
__hdod.win_fld(__hwid,,'JM',,,8,,,'jm'@);
__hdod.win_act(__hwid,,'Szukaj');
__hdod.win_act(__hwid,,'Kolejność');
__hdod.win_act(__hwid,,'Formuła','Legenda'@@,,,"exec('legenda','color','HDS#01')");
__hdod.win_act(__hwid,,'Rekord',,,,"__htab:=2;exec('rekprzed','color','HDS#01')");

__hakt.clear();
__hdod.clear();

{? __hdod.first()
|| _win_grp:=__hakt.grp_make('Skrócona historia'@,"__hdod.first();grp_disp(__hdod,__hwid)",'#skrhist_grp',,,);
   __hakt.grp_sel(_win_grp,__hakt,__hwin,'Dostawa'@,,,,15,,,,,'maximized_with_title');
:: __hakt.grp_splt(_win_grp,,'horizontal','dodatki');
   __hakt.grp_sel(_win_grp,__hdod,__hwid,'Wyroby powiązane'@,,,,,,,,,'maximized_with_title');
   __hakt.win_sel(_win_grp)
|| _win_grp:=__hwin
?};
__hakt.win_sel(_win_grp);
{? __hakt.first() | __hdod.first()
|| __hakt.select()
|| FUN.info('Brak w historii dostawy zapisów dla historii skróconej.'@)
?};
VAR_DEL.delete('__hakt','__hdod','__hwin','__hwid','__dstd','__htab');
~~


\ilwgFAP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: zwraca ilość na dokumentach magazynowych wg podanego ref-a SQL pozycji dokumentu sprzedaży
::   WE: _a - ref SQL FAP-a
::       _b - ref SQL pierwotnej dostawy
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_rfap:={? var_pres('_a')=type_of('') || _a || '' ?};
_prdk:={? var_pres('_b')=type_of('') || _b || '' ?};

{? (+_rfap)=16 & (+_prdk)=16
|| FAKS.cntx_psh();
   FAP.cntx_psh();
   ND.cntx_psh();
   DK.cntx_psh();
   OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.first()
   || {!
      |? ND.use('nagdo'+ST.ODDZ+form(OKR.ROK-2000,-2,0,'99'));
         DK.use('dokma'+ST.ODDZ+form(OKR.ROK-2000,-2,0,'99'));
         DK.index('FAP');
         DK.prefix(_rfap,);
         {? DK.first()
         || {!
            |? {? DK.PRDK=_prdk || _res+={? DK.PLUS='N' || DK.IL || -DK.IL ?} ?};
               DK.next()
            !}
         ?};
         OKR.next()
      !}
   ?};
   OKR.cntx_pop();
   FAKS.cntx_pop();
   FAP.cntx_pop();
   ND.cntx_pop();
   DK.cntx_pop()
?};
_res


\hds_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: historia dostawy skrócona - kolorowanie rekordow
::----------------------------------------------------------------------------------------------------------------------
_tab:={? __htab=1 || __hakt
      |? __htab=2 || __hdod
      || return('')
      ?};
{? _tab.RODZ='A' || 'HDS#01#01'
|? _tab.RODZ='C' || 'HDS#01#02'
|? _tab.RODZ='B' || 'HDS#01#03'
|? _tab.RODZ='D' || 'HDS#01#04'
|| ''
?}


\czyreaU
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: sprawdza czy są usługowe realizacje dla danych dokumentów magazynowych
::   WE: [_a] 1-wg __Ntmp (domyślnie) 0-wg realizacji zamówienia
::----------------------------------------------------------------------------------------------------------------------
_ntmp:={? var_pres('_a')<>type_of(0) || 1 || _a ?};

{? _ntmp
|| __Ntmp.cntx_psh();
   ZD_RN.cntx_psh();
   __Ntmp.clear();
   {? __Ntmp.first()
   || {!
      |? ZD_RN.index('ND');
         ZD_RN.prefix(__Ntmp.SQL,);
         {? ZD_RN.first()
         || {!
            |? _grp:=ZD_RN.GRP_KEY-1;
               _nag:=ZD_RN.ZD_NAG;
               _ptw:=ZD_RN.ZDP_NAG;
               {? _grp<>''
               || ZD_RN.cntx_psh();
                  ZD_RN.index('GRP_KEY');
                  ZD_RN.prefix(_grp);
                  {? ZD_RN.first()
                  || {!
                     |? {? ZD_RN.SPZ='- USŁUGI -' & (ZD_RN.ZD_NAG=_nag | (_ptw<>'' & ZD_RN.ZDP_NAG=_ptw))
                        & (__zd_rnU.clear(); __zd_rnU.prefix($ZD_RN.ref(),); ~__zd_rnU.first())
                        || __zd_rnU.blank();
                           __zd_rnU.ZD_RN:=$ZD_RN.ref();
                           __zd_rnU.add(1)
                        ?};
                        ZD_RN.next()
                     !}
                  ?};
                  ZD_RN.cntx_pop()
               ?};
               ZD_RN.next()
            !}
         ?}
      !}
   ?};
   __Ntmp.cntx_pop();
   ZD_RN.cntx_pop()
|| __Ntmp.cntx_psh();
   ZD_RN.cntx_psh();
   ZD_RN.index('ZAM');
   ZD_RN.prefix(ZD_NAG.ref());
   {? ZD_RN.first()
   || {!
      |? {? ZD_RN.SPZ='- USŁUGI -' & (__zd_rnU.clear(); __zd_rnU.prefix($ZD_RN.ref(),); ~__zd_rnU.first())
         || __zd_rnU.blank();
            __zd_rnU.ZD_RN:=$ZD_RN.ref();
            __zd_rnU.add(1)
         ?};
         ZD_RN.next()
      !}
   ?};
   __Ntmp.cntx_pop();
   ZD_RN.cntx_pop()
?};
~~


\last_khskr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: pobiera kontrahenta wg ostatniej korekty
::   WE: _a - ref SQL faktury
::   WY: skrót kontrahenta
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? _a<>''
|| _res:=exec('FindAndGet','#table',FAKS,_a,,"KH().SKR",'');
   _num:=0;
   FAKS.cntx_psh();
   _msk:=FAKS.names();
   _msk.clear;
   {? _msk.first
   || {!
      |?
         FAKS.use(_msk.NAME);
         FAKS.index('OREFK');
         FAKS.prefix('S',_a);
         {? FAKS.first()
         || {!
            |? {? FAKS.ONUM>_num
               || _num:=FAKS.ONUM;
                  _res:=FAKS.KH().SKR
               ?};
               FAKS.next()
            !}
         ?};
         _msk.next()
      !}
   ?};
   obj_del(_msk);
   FAKS.cntx_pop()
?};
_res


\pobPRDK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: pobiera pierwotne PRDK
::   WE: _a - DK - SQL
::   WY: pierwotne PRDK
::----------------------------------------------------------------------------------------------------------------------
_prdk:={? var_pres('_a')=type_of('') || _a || '' ?};

_res:=exec('FindAndGet','#table',DK,_prdk,,"PRDK",_prdk);
{? _res<>_prdk || _res:=exec('FindAndGet','#table',DK,_prdk,,"PRDK",_res) ?};
_res


\lastRSQL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: pobiera pierwotne PRDK
::   WE: _a - kod SCEAN
::       _b - refSQL do pominięcia
::   WY: ref SQL następnej pozycji dokumentu lub ref parti lub pusty string
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_zparn:='';
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.last()
|| {!
   |? ND.cntx_psh();
      DK.cntx_psh();
      ND.use('nagdo'+ST.ODDZ+form(OKR.ROK-2000,-2,0,'99'));
      DK.use('dokma'+ST.ODDZ+form(OKR.ROK-2000,-2,0,'99'));
      DK.index('SCEAN');
      DK.prefix(_a,_a,'T');
      {? DK.last()
      || {? _zparn='' & DK.PARTIA<>null() || _zparn:=$DK.PARTIA ?};
         {!
         |? {? $DK.ref()<>_b || _res:=$DK.ref() ?};
            _res='' & DK.prev()
         !}
      ?};
      ND.cntx_pop();
      DK.cntx_pop();
      _res='' & OKR.prev()
   !}
?};
OKR.cntx_pop();
{? _res='' & _zparn<>'' || _res:=_zparn ?};
_res


\twSCEANZP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: pobiera termin ważności
::   WE: _a - kod SCEAN
::       _b - refSQL do pominięcia
::       _c - indeks materiałowy
::   WY: termin ważności lub date(1,1,1) jak nie znaleziono
::----------------------------------------------------------------------------------------------------------------------
_res:=date(1,1,1);
_scean:={? var_pres('_a')=type_of('') || _a || '' ?};
_nosql:={? var_pres('_b')=type_of('') || _b || '' ?};
_ref_m:={? var_pres('_c')=type_of(null()) || _c || null() ?};

{? _scean<>''
|| OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.last()
   || {!
      |? ND.cntx_psh();
         DK.cntx_psh();
         DK_L.cntx_psh();
         ND.use('nagdo'+ST.ODDZ+form(OKR.ROK-2000,-2,0,'99'));
         DK.use('dokma'+ST.ODDZ+form(OKR.ROK-2000,-2,0,'99'));
         DK_L.use('doklk'+ST.ODDZ+form(OKR.ROK-2000,-2,0,'99'));
         DK.index('SCEAN');
         DK.prefix(_scean,_scean,'T');
         {? DK.last()
         || {!
            |? {? $DK.ref()<>_b & DK.M=_ref_m || _res:=DK.TW ?};
               _res=date(1,1,1) & DK.prev()
            !}
         ?};
         DK_L.index('MLOKTW');
         DK_L.prefix(_ref_m);
         {? DK_L.first() & DK_L.find_tab('first','SCEAN',,'=',_scean)
         || _res:=DK_L.TW
         ?};
         ND.cntx_pop();
         DK.cntx_pop();
         DK_L.cntx_pop();
         _res=date(1,1,1) & OKR.prev()
      !}
   ?};
   OKR.cntx_pop()
?};
_res


\zwrZPEAN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: zwraca kod kreskowy na podstawie parti
::   WE: _a - ref sql DK_C
::   WY: '' lub kod kreskowy
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_m_atr:={? _a<>'' || exec('FindAndGet','#table',DK_C,_a,,"M_ATR",null()) || null() ?};
{? _m_atr<>null()
|| _num:=0;
   M_ATR.cntx_psh();
   M_ATR.clear();
   {? M_ATR.seek(_m_atr)
   || _i:=1;
      {!
      |? {? ($('M_ATR.SL_'+form(_i,-2,,'99')+'().TYP'))()='P' || _num:=_i ?};
         _i+=1;
         ~_num & _i<=10
      !}
   ?};
   M_ATR.cntx_pop();
   {? _num>0
   || _war:='"WAR%1"'[form(_num,-2,0,'99')];
      _form:='exec(\'FindAndGet\',\'#table\',DK_C,\'%1\',,%2,\'\')'[_a,_war];
      _partia:=($_form)();
      {? _partia<>'' || _res:=exec('FindInSet','#table','ZPARN','SYM',_partia,,"@.ZPARN.ZPEAN",1,,'') ?}
   ?}
?};
_res


\uslNOfakt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: sprawdza czy są niezafakturowane usługi dla danego ZD_NAG-a
::   WY: 1-są 0-nie ma lub nie dotyczy
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
{? (';TP'*exec('get','#params',200400,2))>1
|| ZD_RN.cntx_psh();
   ZD_RP.cntx_psh();
   FAP2DK.cntx_psh();
   ZD_RN.index('ZAM');
   ZD_RN.prefix(ZD_NAG.ref());
   {? ZD_RN.first()
   || {!
      |? ZD_RP.index('POZ');
         ZD_RP.prefix(ZD_RN.ref());
         {? ZD_RN.SPZ='- USŁUGI -' & ZD_RP.first()
         || {!
            |? _ilf:=ZD_RP.IL_ZRE;
               FAP2DK.index('ZD_RP');
               FAP2DK.prefix($ZD_RP.ref());
               {? FAP2DK.first() || {! |? {? FAP2DK.FAP<>'' || _ilf-=FAP2DK.IL ?}; FAP2DK.next() !} ?};
               _res:=_ilf>0;
               ~_res & ZD_RP.next()
            !}
         ?};
         ~_res & ZD_RN.next()
      !}
   ?};
   ZD_RN.cntx_pop();
   ZD_RP.cntx_pop();
   FAP2DK.cntx_pop()
?};
_res


\ile_rozu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: zwraca ilosc rozpisana na FAP
::   WE: _a - ref SQL-owy ZD_RP
::   WY: sumaryczna ilosc rozpisana na fakturach
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
FAP2DK.cntx_psh();
FAP2DK.index('ZD_RP');
FAP2DK.prefix(_a,);
{? FAP2DK.first || {! |? _wyn+=FAP2DK.IL; FAP2DK.next !} ?};
FAP2DK.cntx_pop();
_wyn


\czy_rozu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: sprawdza czy pozycje realizacji są przypisane do faktury zakupowej
::   WE: _a - ZD_RN.ref()
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
ZD_RP.cntx_psh();
ZD_RP.index('POZ');
ZD_RP.prefix(_a);
{? ZD_RP.first()
|| {!
   |? _res:=exec('ile_rozu','magdok_wspolne',$ZD_RP.ref())>0;
      ~_res & ZD_RP.next()
   !}
?};
ZD_RP.cntx_pop();
_res


\sprUprMob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: sprawdza czy istnieją magazyny z obsługą wymiarów do realizacji zamówienia
::   WE: _a - rodzaj zamówienia Z-sprzedaży, W-wewnętrzne
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_rodz:={? var_pres('a')=type_of('') & +_a || 'ZA'+_a || 'ZAM' ?};
USERS_UP.cntx_psh();
USERS_UP.index('MG');
USERS_UP.prefix(OPERATOR.USER,_rodz,ST.ODDZ_KOD);
_res:=USERS_UP.first() & USERS_UP.find_tab('first','MG','SL','=','T');
{? ~_res
|| USERS_UP.index('MG');
   USERS_UP.prefix(null(),_rodz,ST.ODDZ_KOD);
   _res:=USERS_UP.first() & USERS_UP.find_tab('first','MG','SL','=','T')
?};
USERS_UP.cntx_pop();
_res


\ctrlZamFaks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: sprawdza czy do wszystkich realizacji danego zamówienia wystawiono dokument sprzedaży
::   WE: _a - ZK_N.ref()
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
ZK_RN.cntx_psh();
ZK_RN.index('ZAM');
ZK_RN.prefix(_a);
_res:=ZK_RN.first() & ~ZK_RN.find_tab('first','FAKS',,'=','');
ZK_RN.cntx_pop();
_res


\oblBRTZal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: oblicza brutto dla kwoty zaliczki wg realizacji
::   WE: _a - ZK_N.ref()
::       [_b] - 0(domyślnie)-PLN 1-waluta
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_b:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_res:={? ~_b
      || exec('FindAndGet','#table',ZK_N,_a,,"BRUTTO",0)
      || exec('FindAndGet','#table',ZK_N,_a,,"BRUTTOW",0)
      ?};
ZK_RN.cntx_psh();
ZK_RP.cntx_psh();
ZK_RN.index('ZAM');
ZK_RN.prefix(_a);
{? ZK_RN.first()
|| {!
   |? {? ZK_RN.FAKS<>''
      || ZK_RP.index('POZR');
         ZK_RP.prefix(ZK_RN.ref());
         {? ZK_RP.first()
         || {!
            |? {? ZK_RP.ILR>0
               || _brt:={? ~_b || ZK_RP.P().BRUTTO || ZK_RP.BRUTTOW ?};
                  _ilz:=ZK_RP.P().ILZ;
                  _ilr:=ZK_RP.ILR;
                  _wsp:={? _ilr<_ilz || _ilr/_ilz || 1 ?};
                  _res-=_wsp*_brt
               ?};
               ZK_RP.next()
            !}
         ?}
      ?};
      ZK_RN.next()
   !}
?};
ZK_RN.cntx_pop();
ZK_RP.cntx_pop();
{? _res<0 || _res:=0 || _res:=_res $2 ?};
_res


\his_dost_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: historia dostawy z poziomu wszystkich pozycji
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__hisfil');
{? DK.f_active()
|| _ref:=DK.ref();
   __hisfil:=1
|| _ref:=null()
?};
exec('his_dost','magdok_wspolne');
{? var_pres('__hisfil')>0 & __hisfil=2
|| _tref:=TYPYDOK.ref();
   _in:='(';
   {? TYPYDOK.f_first() || {! |? _in+='\''+$TYPYDOK.ref()+'\','; TYPYDOK.f_next() !}; TYPYDOK.f_seek(_tref) ?};
   _in:=(_in-1)+')';
   {? (+_in)=1 || _in:='(\'\')' ?};
   DK.sel_adel();
   DK.index('ALL');
   DK.prefix();
   {? DK.sel_size() || DK.sel_adel() ?};
   DK.f_clear();
   DK.f_set('N(D),PLUS,N(SYM),P','join ND using(ND.REFERENCE,DK.N)','\"ND\".MAG=:_a and \"ND\".TYP in '+_in,ST.MAG);
   DK.f_seek(_ref)
?};
VAR_DEL.delete('__hisfil');
~~


\nd_is_koop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Sprawdza czy dokument dotyczy kooperacji
::   WE: _a - ND.ref
::   WY: 0 - dokument nie dotyczy kooperacji
::       1 - dokument dotyczy kooperacji
::----------------------------------------------------------------------------------------------------------------------
_nd:=_a;

_result:=0;

:: Zwracam typ dokumentu
_typ:=exec('FindAndGet','#table',ND,#_nd,ref_name(_nd),"TYP",null());
{? _typ<>null()
||
   TYPYDOK.cntx_psh(); TYPYDOK.clear();
   {? TYPYDOK.seek(_typ)
   || {? TYPYDOK.KOOP='T'
      || _result:=1
      || _result:=0
      ?}
   ?};
   TYPYDOK.cntx_pop()
?};
_result


\nd_is_odp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Sprawdza czy dokument dotyczy rejestracji odpadów
::   WE: _a - ND.ref
::   WY: 0 - dokument nie dotyczy odpadów
::       1 - dokument dotyczy odpadów
::----------------------------------------------------------------------------------------------------------------------
_nd:=_a;

_result:=0;

:: Zwracam typ dokumentu
_typ:=exec('FindAndGet','#table',ND,#_nd,ref_name(_nd),"TYP",null());
{? _typ<>null()
||
   TYPYDOK.cntx_psh(); TYPYDOK.clear();
   {? TYPYDOK.seek(_typ)
   || {? (' '+exec('get','#params',500705,2))*(' '+TYPYDOK.T+' ')>0
      || _result:=1
      ?}
   ?};
   TYPYDOK.cntx_pop()
?};
_result


\blank_kp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Podpowiada kraj pochodzenia
::   WE: _a - tabela
::----------------------------------------------------------------------------------------------------------------------
_Tab:={? var_pres('_a') || _a || cur_tab() ?};

{? _Tab.KP='' & _Tab=DK & (_Tab.PLUS='N' | _Tab.N().NDSQL<>'' | _Tab.N().TYP().DN='T') & _Tab.PRDK<>''
|| _Tab.KP:=exec('FindAndGet','#table',_Tab,_Tab.PRDK,,"KP",'')
?};
{? _Tab.KP='' || _Tab.KP:=_Tab.M().KP ?};
{? _Tab.KP=''
||
:: probujemy podpowiedziec kraj
   _kraj:='';
   _clo:=null;
   _dat:={? _Tab=DK || DK.N().D |? _Tab=FAP || FAP.FAKS().D || date() ?};
   _kcn:={? _Tab.KCN<>null() || _Tab.KCN || exec('daj_cn_ref','sklad',_Tab.M,_dat) ?};

   CLO.cntx_psh();
   CLO.index('CNKPDOD');
   CLO.prefix(_kcn);
   {? CLO.first()
   || {!
      |? {? CLO.DATA_OD<=_dat & CLO.DATA_DO>=_dat | CLO.DATA_OD<=_dat & CLO.DATA_DO=date(0,0,0)
         || {? _kraj=''
            || _kraj:=CLO.KP;
               _clo:=CLO.ref()
            || _kraj:='~~';
               _clo:=null
            ?}
         ?};
         _kraj<>'~~' & CLO.next()
      !}
   ?};
   CLO.cntx_pop();
   {? _kraj<>'~~'
   || _Tab.KP:=_kraj;
      {? _Tab=DK || _Tab.CLO:=_clo ?}
   ?}
?}


\act_kp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Aktualizuje DK.KP na innych dokumentach związanych ze wskazaną dostawą
::   WE: _a - PRDK
::       _b - nowa DK.KP
::       _c - stary kraj pochodzenia
::----------------------------------------------------------------------------------------------------------------------
 _prdk:={? var_pres('_a')=type_of('') || _a || '' ?};
_newkp:={? var_pres('_b')=type_of('') || _b || '' ?};
_oldkp:={? var_pres('_c')=type_of('') || _c || '' ?};

_actFAP:=exec('get','#params',100206,2,null())='T';
_nokdst:=0;
_kintra:=0;
_ist:='';
{? _prdk<>''
|| _msk:=DK.names();
   _msk.clear();
   {? _msk.first()
   || exec('mag_psh','open_tab');
      exec('fak_psh','open_tab');
      IST.cntx_psh(); ISTT.cntx_psh(); ISTTS.cntx_psh();
      {!
      |? exec('mag_open','open_tab',1+(_msk.NAME+3),_msk.NAME+2);
         IST.use('it____%1'[_msk.NAME+2]);
         ISTT.use('itt___%1'[_msk.NAME+2]);
         ISTTS.use('itts__%1'[_msk.NAME+2]);
         DK.index('PRDK');
         DK.prefix(_prdk,);
         {? DK.first()
         || {!
            |? {? DK.KP<>_newkp & (_actFAP | DK.N().F<>'T')
               || _refist:={? DK.N().INTRA='T'
                           || exec('FindInSet','#table','ISTTS','DOKP',$DK.ref(),,"ISTTS.IST",1,,null())
                           || null()
                           ?};
                  _ist:={? _refist<>null() & (IST.prefix(); IST.seek(_refist))
                        || IST.MOD:=1;
                           IST.put(1);
                           IST.NRWLASNY
                        || ''
                        ?};
                  _dkkp:=DK.KP;
                  DK.KP:=_newkp;
                  _fap:=DK.FAP;
                  _mfp:=form(8+($_fap))+3;
                  {? DK.put(1) & _actFAP & ($_fap)<>''
                  || exec('fak_open','open_tab',1+_mfp,_mfp+2);
                     IST.use('it____%1'[_msk.NAME+2]);
                     ISTT.use('itt___%1'[_msk.NAME+2]);
                     ISTTS.use('itts__%1'[_msk.NAME+2]);
                     FAP.prefix();
                     {? FAP.seek(_fap) & FAP.KP=_dkkp
                     || _fksql:=$FAP.FAKS;
                        _pozf:=FAP.POZ;
                        {? ~_kintra
                        || _kintra:=FAP.FAKS().INTRA='T' & FAP.KP<>_newkp;
                           _refist:={? FAP.FAKS().INTRA='T'
                                    || exec('FindInSet','#table','ISTTS','DOKP',$FAP.ref(),,"ISTTS.IST",1,,null())
                                    || null()
                                    ?};
                           _ist:={? _refist<>null() & (IST.prefix(); IST.seek(_refist))
                                 || IST.MOD:=1;
                                    IST.put(1);
                                    IST.NRWLASNY
                                 || ''
                                 ?}
                        ?};
                        FAP.KP:=_newkp;
                        {? FAP.put(1)
                        || OKR.cntx_psh();
                           OKR.index('MC');
                           OKR.prefix(REF.FIRMA,1);
                           {? OKR.first()
                           || {!
                              |? exec('fak_open','open_tab',ST.ODDZ,form(OKR.ROK-2000,-2,0,'99'));
                                 FAP.index('FKSQL');
                                 FAP.prefix(_fksql,_pozf);
                                 {? FAP.first()
                                 || {!
                                    |? {? FAP.KP=_dkkp
                                       || {? ~_kintra
                                          || _kintra:=FAP.FAKS().INTRA='T' & FAP.KP<>_newkp;
                                             _refist:={? FAP.FAKS().INTRA='T'
                                                      || exec('FindInSet','#table','ISTTS','DOKP',$FAP.ref()
                                                          ,,"ISTTS.IST",1,,null())
                                                      || null()
                                                      ?};
                                             _ist:={? _refist<>null() & (IST.prefix(); IST.seek(_refist))
                                                   || IST.MOD:=1;
                                                      IST.put(1);
                                                      IST.NRWLASNY
                                                   || ''
                                                   ?}
                                          ?};
                                          FAP.KP:=_newkp;
                                          FAP.put(1)
                                       ?};
                                       FAP.next()
                                    !}
                                 ?};
                                 OKR.next()
                              !}
                           ?};
                           OKR.cntx_pop()
                        ?}
                     ?}
                  ?}
               |? DK.KP<>_newkp & DK.N().F<>'T'
               || _nokdst:=1
               ?};
               DK.next()
            !}
         ?};
         _msk.next()
      !};
      exec('mag_pop','open_tab');
      exec('fak_pop','open_tab');
      IST.cntx_pop(); ISTT.cntx_pop(); ISTTS.cntx_pop()
   ?};
   obj_del(_msk)
?};
_txt:='';
_txt:={? _nokdst
      || 'Dla niektórych dokumentów danej dostawy nie został zmieniony Kraj pochodzenia.\n'
         'Do tych dokumentów wystawiono dokumenty sprzedaży.'@
      || ''
      ?};
_txt:={? _kintra
      || {? _txt<>''
         || '\n\n'
         || ''
         ?}+'Ponieważ zmieniono Kraj pochodzenia na dokumentach sprzedaży\n'
            'należy skorygować deklarację Intrastat%1.'@[{? _ist='' || '' || ' '+_ist ?}]
      || ''
      ?};
{? _txt<>'' || FUN.info(_txt) ?};
~~


\varKP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Sprawdza czy na danym dokumencie AUTOFIFO są różne kraje pochodzenia
::   WE: _a - ND.ref()
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
DK.cntx_psh();
DK.index('DOKZP');
DK.prefix(_a,0);
{? DK.first()
|| {!
   |? _kp:=DK.KP; _zp:=#DK.ref();
      DK.cntx_psh();
      DK.index('DOKZP');
      DK.prefix(_a,_zp);
      {? DK.first()
      || {!
         |? {? DK.KP<>_kp
            || _res:=1;
               0
            ?};
            DK.next()
         !}
      ?};
      DK.cntx_pop();
      ~_res & DK.next()
   !}
?};
DK.cntx_pop();
_res


\actTAXS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Aktualizuje opłaty na wszystkich pozycjach dokumentu magazynowego
::   WE: _a - ND.ref()
::----------------------------------------------------------------------------------------------------------------------
ND.cntx_psh();
DK.cntx_psh();
ND.prefix();
{? _a<>null() & ND.seek(_a)
|| DK.index('DOKMAG');
   DK.prefix(_a);
   {? DK.first()
   || {!
      |? exec('actTAXS','oplaty_dod',DK.N().uidref(),DK.uidref(),DK.M,DK.M);
         DK.next()
      !}
   ?}
?};
ND.cntx_pop();
DK.cntx_pop();
~~


\add_dk_at
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Dołączenie atestu
::----------------------------------------------------------------------------------------------------------------------
DK_AT.blank();
DK_AT.bl_file('ZAL',1);
DK_AT.win_edit('RED');
{? DK_AT.edit("exec('chk_dk_at','magdok_wspolne')")
|| {? DK_AT.add(1)
   || {? exec('cli_functions','#system')=0
      || FUN.emsg(exec('indevice_nacc_msg','#system'))
      || {? (_file:=DK_AT.bl_file('ZAL'))<>'' || DK_AT.bl_put('ZAL',_file) ?};
         DK_AT.put(1)
      ?}
   ?};
   DK_AT.bl_file('ZAL',1)
?}


\chk_dk_at
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Kontrola wprowadzony danych atestu
::   WY: ''-ok akronim pola niepoprawnie wypełnionego
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? DK_AT.KOD=''
|| FUN.info('Należy podać kod - oznaczenie atestu.'@);
   _res:='KOD'
|? DK_AT.GRUB<0
|| FUN.info('Wymiar: grubość powinien być liczbą większą lub równą zero.'@);
   _res:='GRUB'
?};
_res


\mod_dk_at
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Modyfikacja atestu
::----------------------------------------------------------------------------------------------------------------------
DK_AT.get();
DK_AT.bl_file('ZAL',1);
DK_AT.win_edit('RED');
{? DK_AT.edit("exec('chk_dk_at','magdok_wspolne')")
|| {? DK_AT.put(1)
   || {? exec('cli_functions','#system')=0
      || FUN.emsg(exec('indevice_nacc_msg','#system'))
      || {? (_file:=DK_AT.bl_file('ZAL'))<>'' || DK_AT.bl_put('ZAL',_file) ?};
         DK_AT.put(1)
      ?}
   ?};
   DK_AT.bl_file('ZAL',1)
?}


\del_dk_at
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Usunięcie atestu
::----------------------------------------------------------------------------------------------------------------------
{? DK_AT.count()
|| FUN.info('Atest powiązano z dostawami.\nNiemożliwe jego usunięcie.'@)
|? FUN.ask('Czy usunąć wskazany atest?'@)
|| DK_AT.del()
?}


\pow_dk_at
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Powiązane dokumenty z atestem
::----------------------------------------------------------------------------------------------------------------------
_dk_at:=DK_AT.ref();
_kod:=DK_AT.KOD;
_dispdk_at:=DISP.DK_AT;
DISP.DK_AT:=DK_AT.ref();

_sel:=DK.grp_make('Dokumenty powiązane z atestem %1'@[_kod],,'#powdk_atgrp');
_win:=DK.win_sel('?');
_act:=DK.actions('ATEST','TU');

exec('mag_psh','open_tab');
VAR_DEL.delete('czy_dsp','bie_r');
_il:=0;
czy_dsp:=0;
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.last()
|| {!
   |? exec('mag_open','open_tab',ST.ODDZ,$OKR.ROK+2);
      DK.f_clear();
      DK.index('AT_DK');
      {? VAR.WGSTMG || DK.prefix(_dk_at,ST.MAG) || DK.prefix(_dk_at) ?};
      {? DK.first()
      || _il+=1;
         _form:=$('czy_dsp:=1;bie_r:=%1;'
                  'exec(\'mag_open\',\'open_tab\',ST.ODDZ,$bie_r+2);'
                  '{? DK.sel_size() || DK.sel_aget() ?};DK.f_clear();DK.index(\'AT_DK\');'
                  '{? VAR.WGSTMG || DK.prefix(DISP.DK_AT,ST.MAG) || DK.prefix(DISP.DK_AT) ?}'[$OKR.ROK]);
         DK.grp_sel(_sel,DK,'ATEST',$OKR.ROK,"{? czy_dsp=1 || grp_disp(DK,'ATEST',0,1) ?};DK.N().MAG().SYM;czy_dsp:=0"
          ,,,,_form,,,,'maximized')
      ?};
      OKR.prev() & _il<16
   !}
?};
OKR.cntx_pop();
{? _il=0
|| FUN.info('Brak powiązanych dostaw w okresach z atestem %1.'@[_kod])
|| DK.win_sel(_sel);
   DK.select()
?};
exec('mag_pop','open_tab');
VAR_DEL.delete('czy_dsp','bie_r');
DK.win_sel(_win);
DK.actions('ATEST',_act);
DISP.DK_AT:=_dispdk_at;
~~


\bez_dk_at
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Dostawy bez przypisanych atestów
::----------------------------------------------------------------------------------------------------------------------
_sel:=DK.grp_make('Dokumenty powiązane lub do powiązania z atestami'@,,'#bezdk_atgrp');
_win:=DK.win_sel('?');
_act:=DK.actions('ATEST','');

DK_AT.cntx_psh();
exec('mag_psh','open_tab');
VAR_DEL.delete('czy_dsp','bie_r');
_il:=0;
czy_dsp:=0;
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.last()
|| {!
   |? exec('mag_open','open_tab',ST.ODDZ,$OKR.ROK+2);
      DK.index('AT_BEZ');
      DK.prefix();
      DK.f_clear();
      {? VAR.WGSTMG
      || DK.f_set('N(D),N(SYM),P'
         ,'join M using(M.REFERENCE,DK.M) join ND using(ND.REFERENCE,DK.N) join TYPYDOK using(TYPYDOK.REFERENCE,ND.TYP)'
         ,'\"M\".ATEST=\'T\' and \"ND\".MAG=:_a and \"TYPYDOK\".P=\'T\' and \"TYPYDOK\".DN=\'N\' and \"TYPYDOK\".DK=\'N\'',ST.MAG)
      || DK.f_set('N(D),N(SYM),P'
         ,'join M using(M.REFERENCE,DK.M) join ND using(ND.REFERENCE,DK.N) join TYPYDOK using(TYPYDOK.REFERENCE,ND.TYP)'
         ,'\"M\".ATEST=\'T\' and \"TYPYDOK\".P=\'T\' and \"TYPYDOK\".Z=\'T\' and \"TYPYDOK\".DN=\'N\' and \"TYPYDOK\".DK=\'N\'')
      ?};
      {? DK.f_first()
      || _il+=1;
         _form:=$('\"exec(\'bez_filtr\',\'magdok_wspolne\',%1)\"'[$OKR.ROK]);
         DK.grp_sel(_sel,DK,'ATEST',$OKR.ROK,"{? czy_dsp=1 || grp_disp(DK,'ATEST',0,1) ?};DK.N().MAG().SYM;czy_dsp:=0"
          ,,,,_form(),,,,'maximized')
      ?};
      OKR.prev() & _il<16
   !}
?};
OKR.cntx_pop();
{? _il=0
|| FUN.info('Brak dostaw w okresach do powiązania z atestami.'@)
|| DK.win_sel(_sel);
   DK.select()
?};
DK_AT.cntx_pop();
exec('mag_pop','open_tab');
DK.f_clear();
VAR_DEL.delete('czy_dsp','bie_r');
DK.win_sel(_win);
DK.actions('ATEST',_act);
~~


\bez_filtr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Dostawy bez przypisanych atestów - filtrowanie zakładki
::   WE: _a - rok - napis
::----------------------------------------------------------------------------------------------------------------------
czy_dsp:=1;
bie_r:=_a;
exec('mag_open','open_tab',ST.ODDZ,$bie_r+2);
DK.index('AT_BEZ');
DK.prefix();
{? DK.sel_size() || DK.sel_adel() ?};
DK.f_clear();
{? VAR.WGSTMG
|| DK.f_set('N(D),N(SYM),P'
   ,'join M using(M.REFERENCE,DK.M) join ND using(ND.REFERENCE,DK.N) join TYPYDOK using(TYPYDOK.REFERENCE,ND.TYP)'
   ,'\"M\".ATEST=\'T\' and \"ND\".MAG=:_a and \"TYPYDOK\".P=\'T\' and \"TYPYDOK\".DN=\'N\' and \"TYPYDOK\".DK=\'N\'',ST.MAG)
|| DK.f_set('N(D),N(SYM),P'
   ,'join M using(M.REFERENCE,DK.M) join ND using(ND.REFERENCE,DK.N) join TYPYDOK using(TYPYDOK.REFERENCE,ND.TYP)'
   ,'\"M\".ATEST=\'T\' and \"TYPYDOK\".P=\'T\' and \"TYPYDOK\".DN=\'N\' and \"TYPYDOK\".DK=\'N\'')
?};
~~


\inf_dk_at
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Powiązane atesty z danym dokumentem
::   WE: [_a] - tabela danych lub domyślnie aktualny ND.ref()
::       [_b] - tabela z której wołamy domyślnie ND
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(FIRMA)
|| _nd:=_a
|| _nd:=tab_tmp(1,'SQL','STRING[16]','');
   _nd.blank();
   _nd.SQL:=$ND.ref();
   _nd.add(1)
?};

VAR_DEL.delete('__dk_at','__dk_dk','__dk_tab');
__dk_tab:={? var_pres('_b')=type_of(FIRMA) || _b || ND ?};

__dk_at:=tab_tmp(2,'KOD','STRING[50]','Oznaczenie'@
          ,'SQL','STRING[16]','Ref sql atestu'@
          ,'OPIS','STRING[150]','Opis'@
          ,'KHKOD','STRING[8]','Kod wystawcy'@
          ,'KHSKR','STRING[10]','Skrót wystawcy'@
          ,'KHNAZ','STRING[60]','Nazwa wystawcy'@
          ,'ZAL','STRING[1]','Załącznik'@
          ,'DT','DATE','Data atestu'@
          ,'OD','DATE','Obowiązuje od'@
          ,'DO','DATE','Obowiązuje do'@
          ,'WYT','STRING[30]','Wytop'@
          ,'GAT','STRING[30]','Kod gatunku'@
          ,'GRUB','REAL','Grubość'@);
__dk_dk:=tab_tmp(6,'SQL','STRING[16]',''
          ,'DAT','DATE',''
          ,'MAG','STRING[10]',''
          ,'TYP','STRING[10]',''
          ,'SYM','STRING[20]',''
          ,'POZ','INTEGER',''
          ,'KTM','STRING[50]',''
          ,'NAZ','STRING[100]',''
          ,'ILE','REAL',''
          ,'DKC','STRING[30]',''
          ,'W01','STRING[25]',''
          ,'W02','STRING[25]',''
          ,'W03','STRING[25]',''
          ,'W04','STRING[25]',''
          ,'W05','STRING[25]',''
          ,'W06','STRING[25]',''
          ,'W07','STRING[25]',''
          ,'W08','STRING[25]',''
          ,'W09','STRING[25]',''
          ,'W10','STRING[25]',''
          ,'JM','STRING[10]','');
ND.cntx_psh();
DK.cntx_psh();
DK_AT.cntx_psh();
_nd.clear();
{? _nd.first()
|| {!
   |? _msk:=form(8+_nd.SQL)+3;
      ND.use('nagdo'+_msk);
      DK.use('dokma'+_msk);
      {? (ND.prefix(); ND.seek(_nd.SQL))
      || DK.index('DOKMAG');
         DK.prefix(ND.ref());
         {? DK.first()
         || {!
            |? _dk_at:={? DK.DK_AT<>null() || DK.DK_AT || exec('FindAndGet','#table',DK,DK.PRDK,,"DK_AT",null()) ?};
               {? _dk_at<>null()
                & (DK_AT.prefix(); DK_AT.seek(_dk_at))
                & (__dk_at.clear(); __dk_at.prefix(DK_AT.KOD,$DK_AT.ref()); ~__dk_at.first())
               || __dk_at.clear();
                  __dk_at.blank();
                  __dk_at.KOD:=DK_AT.KOD;
                  __dk_at.SQL:=$DK_AT.ref();
                  __dk_at.OPIS:=DK_AT.OPIS;
                  {? DK_AT.KH<>null()
                  || __dk_at.KHKOD:=DK_AT.KH().KOD;
                     __dk_at.KHSKR:=DK_AT.KH().SKR;
                     __dk_at.KHNAZ:=DK_AT.KH().NAZ
                  || __dk_at.KHKOD:='';
                     __dk_at.KHSKR:='';
                     __dk_at.KHNAZ:=''
                  ?};
                  __dk_at.DT:=DK_AT.DT;
                  __dk_at.OD:=DK_AT.OD;
                  __dk_at.DO:=DK_AT.DO;
                  __dk_at.WYT:=DK_AT.WYT;
                  __dk_at.GAT:=DK_AT.MGAT().KOD;
                  __dk_at.GRUB:=DK_AT.GRUB;
                  __dk_at.ZAL:={? #DK_AT.ZAL<>0 || 'T' || 'N' ?};
                  __dk_at.add(1)
               ?};
               {? _dk_at<>null()
               || __dk_dk.blank();
                  __dk_dk.SQL:=$_dk_at;
                  __dk_dk.POZ:=DK.P;
                  __dk_dk.KTM:=DK.M().KTM;
                  __dk_dk.NAZ:=DK.M().N;
                  __dk_dk.ILE:=DK.IL;
                  __dk_dk.JM:=DK.M().J().KOD;
                  __dk_dk.TYP:=DK.N().TYP().T;
                  __dk_dk.SYM:=DK.N().SYM;
                  __dk_dk.MAG:=DK.N().MAG().SYM;
                  __dk_dk.DAT:=DK.N().D;
                  {? DK.DK_C<>null()
                  || __dk_dk.DKC:=DK.DK_C().SYM;
                     {! _ii:=1..10
                     |! _wsk:=form(_ii,-2,0,'99');
                        ($('__dk_dk.W%1:=DK.DK_C().WAR%1'[_wsk]))()
                     !}
                  ?};
                  __dk_dk.add(1)
               ?};
               DK.next()
            !}
         ?}
      ?};
      _nd.next()
   !}
?};

__dk_at.clear();
{? __dk_at.first()
|| _wer:=__dk_at.mk_sel('Atesty dla dokumentu'@,,,'#nd_atest',,,,,'U');
   __dk_at.win_fld(_wer,,'KOD',,,40,,,'Oznaczenie'@);
   __dk_at.win_fld(_wer,,'OPIS',,,30,,,'Opis'@);
   __dk_at.win_fld(_wer,,'DT',,,10,,,'Wystawiono'@);
   __dk_at.win_fld(_wer,,'KHSKR',,,10,,,'Wystawca'@);
   __dk_at.win_fld(_wer,,'GAT',,,15,,,'Gatunek'@);
   __dk_at.win_fld(_wer,,'OD',,,10,,,'Obowiązuje od'@);
   __dk_at.win_fld(_wer,,'DO',,,10,,,'Obowiązuje do'@);
   __dk_at.win_fld(_wer,,'ZAL',,,3,,,'Załącznik [T/N]'@,,'Czy załączono dokument [T/N]?'@,2,,"'T'","'N'");
   __dk_at.win_act(_wer,0,'Menu','&Atest'@);
   __dk_at.win_act(_wer,0,'Formuła','&Pobierz'@@,'&Atest'@,,"exec('pok_dk_atest','magdok_wspolne')",,,,,,'P');
   __dk_at.win_act(_wer,0,'Formuła','&Zapisz'@@,'&Atest'@,,"exec('lok_dk_atest','magdok_wspolne')"
     ,,0,1,"exec('lok_dk_atest','magdok_wspolne')",,'Z');
   __dk_at.win_act(_wer,0,'Formuła','Dodaj do &załączników'@@,,,"exec('dok_dk_atest','magdok_wspolne')",,,,,,'D');
   __dk_at.win_sel(_wer);
   __dk_at.win_act(_wer,0,'Szukaj');
   __dk_at.win_act(_wer,0,'Kolejność');
   _wed:=__dk_dk.mk_sel('Pozycje dokumentu'@,,,'#dk_atest',,,,,'U');
   __dk_dk.win_fld(_wed,,'TYP',,,8,,,'Typ'@);
   __dk_dk.win_fld(_wed,,'MAG',,,8,,,'Magazyn'@);
   __dk_dk.win_fld(_wed,,'SYM',,,20,,,'Symbol'@);
   __dk_dk.win_fld(_wed,,'DAT',,,10,,,'Data'@);
   __dk_dk.win_fld(_wed,,'POZ',,,5,,,'Poz.'@);
   __dk_dk.win_fld(_wed,,'KTM',,,30,,,'Indeks'@);
   __dk_dk.win_fld(_wed,,'NAZ',,,25,,,'Nazwa'@);
   __dk_dk.win_fld(_wed,,'ILE',,,15,ST.DOKL,,'Ilość'@);
   __dk_dk.win_fld(_wed,,'JM',,,5,,,'jm'@);
   __dk_dk.win_fld(_wed,,'DKC',,,18,,,'Cecha dostawy'@);
   __dk_dk.win_sel(_wed);

   __dk_at.win_fml(_wer,,'KOD',,'ICON_BEFORE',exec('dk_at_kod_ib','magdok_wspolne'));
   _grp:=__dk_at.grp_make('Powiązane atesty'@,"exec('atestDK','magdok_wspolne')",'#nddkatewst');
   __dk_at.grp_sel(_grp,__dk_at,_wer,,"exec('atestDK','magdok_wspolne')",,,10,,,,,'maximized_with_title');
   __dk_at.grp_splt(_grp,,'horizontal','pozycje');
   __dk_at.grp_sel(_grp,__dk_dk,_wed,,,,,5,,,,,'maximized_with_title');

   __dk_at.win_sel(_grp);
   __dk_at.select()
|| FUN.info('Brak pozycji dokumentu powiązanych z atestami.'@)
?};
ND.cntx_pop();
DK.cntx_pop();
DK_AT.cntx_pop();
VAR_DEL.delete('__dk_at','__dk_dk','__dk_tab');
obj_del(_nd);
~~


\atestDK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: prefiksuje pozycje dokumentu atestami
::----------------------------------------------------------------------------------------------------------------------
__dk_dk.clear();
__dk_dk.prefix(__dk_at.SQL);
__dk_dk.first();
grp_disp(__dk_dk,__dk_dk.win_sel('?'));
~~


\dst_dk_at
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Przypisanie dostawy do atestu
::   WE: [_a] - 1(domyślnie)-przypisanie 0-usunięcie przypisania
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 1 ?};

_sel:=DK.sel_aget();
DK.sel_adel();

DK.cntx_psh();
DK_AT.cntx_psh();
{? _tryb
|| _ctrl:=0;
   _noat:=0;
   {? _sel.first()
   || _noat:=_sel.size();
      {!
      |? {? (DK.prefix(); DK.seek(_sel.REF,)) || _ctrl+=DK.PLUS='T' & DK.M().ATEST='T' ?};
         _sel.next()
      !};
      _noat-=_ctrl
   || _ctrl:=DK.PLUS='T' & DK.M().ATEST='T'
   ?};
   {? ~_ctrl
   || FUN.info('Do pozycji lub zaznaczonych pozycji nie można przypisać atestu.\n\n'
               'Przypisaniu podlega pozycja przychodowa na indeks materiałowy dotyczący atestu.'@)
   || {? _noat>0
      || _txt:='\n\nUwaga. Nie do wszystkich zaznaczonych pozycji zostanie przypisany atest.\n'
               'Przypisaniu podlega pozycja przychodowa na indeks materiałowy dotyczący atestu.'@
      || _txt:=''
      ?};
      _win:=DK_AT.win_sel('?');
      DK_AT.win_sel('SEL');
      DK_AT.index('KOD');
      DK_AT.prefix();
      {? DK_AT.select()
       & FUN.ask('Czy przypisać atest do wskazanych dostaw?%1'@[_txt])
      || _dk_at:=DK_AT.ref();
         {? _sel.first()
         || {!
            |? {? (DK.prefix(); DK.seek(_sel.REF,)) & DK.PLUS='T' & DK.M().ATEST='T'
               || DK.DK_AT:=_dk_at;
                  DK.put(1)
               ?};
               _sel.next()
            !}
         || DK.DK_AT:=_dk_at;
            DK.put(1)
         ?}
      ?};
      DK_AT.win_sel(_win)
   ?}
|? FUN.ask('Czy usunąć przypisanie atestu dla wskazanych dostaw?'@)
|| {? _sel.first()
   || {!
      |? {? (DK.prefix(); DK.seek(_sel.REF,))
         || DK.DK_AT:=null();
            DK.put(1)
         ?};
         _sel.next()
      !}
   || DK.DK_AT:=null();
      DK.put(1)
   ?}
?};
DK.cntx_pop();
DK_AT.cntx_pop();
obj_del(_sel);
~~


\asc_dk_at
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Przypisanie dostawy do atestu
::   WE: [_a] - 1(domyślnie)-przypisanie 0-usunięcie przypisania
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 1 ?};

{? _tryb
|| {? SC.M().ATEST='T'
   || _win:=DK_AT.win_sel('?');
      SC.cntx_psh();
      DK_AT.cntx_psh();
      DK_AT.win_sel('SEL');
      DK_AT.index('KOD');
      DK_AT.prefix();
      {? DK_AT.select() & FUN.ask('Czy przypisać atest do dostawy?'@)
      || DISP.DK_AT:=DK_AT.ref();
         exec('FindAndGet','#table',DK,SC.PRDK,,"DK_AT:=DISP.DK_AT;put(1)",0)
      ?};
      DK_AT.win_sel(_win);
      SC.cntx_pop();
      DK_AT.cntx_pop();
      DK_AT.win_sel(_win)
   || FUN.info('Do dostawy nie można przypisać atestu.\n\n'
               'Indeks materiałowy %1 nie dotyczy atestu.'@[SC.M().KTM])
   ?}
|? FUN.ask('Czy usunąć przypisanie atestu do dostawy?'@)
|| exec('FindAndGet','#table',DK,SC.PRDK,,"DK_AT:=null();put(1)",0)
?};
~~


\pok_atest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: wyswietlenie dokumentu
::----------------------------------------------------------------------------------------------------------------------
{? ~DK_AT.get() || return() ?};

_isrun:=exec('cli_functions','#system');
{? ~_isrun || FUN.emsg(exec('indevice_nacc_msg','#system'));return() ?};

{? #DK_AT.ZAL<>0
|| exec('bl_view','#blob',DK_AT,'ZAL')
|| FUN.info('Brak załącznika dla atestu.'@)
?};
''


\lok_atest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: kopiowanie pliku na lokalny
::----------------------------------------------------------------------------------------------------------------------
{? ~DK_AT.get() || return() ?};

{? #DK_AT.ZAL<>0
|| _name:=DK_AT.bl_info('ZAL', 'NAME');
   _ext:=DK_AT.bl_info('ZAL', 'EXTENSION');
   {? exec('blk_lock','#table','DK_AT',DK_AT.ref(),,1,'Załącznik: %1 jest redagowany.'@[_name])
   || exec('bl_save','#blob',DK_AT,'ZAL');
      exec('blk_unlock','#table','DK_AT',DK_AT.ref())
   ?}
|| FUN.info('Brak załącznika dla atestu.'@)
?};
''


\pokscatest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: wyswietlenie dokumentu dla SC
::----------------------------------------------------------------------------------------------------------------------
{? exec('FindAndGet','#table',DK,SC.PRDK,,"DK_AT<>null() & #DK_AT().ZAL<>0",0)
|| DK_AT.cntx_psh();
   DK_AT.prefix();
   _dk_at:=exec('FindAndGet','#table',DK,SC.PRDK,,"DK_AT",null());
   {? _dk_at<>null() & DK_AT.seek(_dk_at) || exec('pok_atest','magdok_wspolne') ?};
   DK_AT.cntx_pop()
|| FUN.info('Brak przypisanego atestu lub nie dołączono dokumentu do atestu.'@)
?}


\lokscatest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: kopiowanie pliku na lokalny dla SC
::----------------------------------------------------------------------------------------------------------------------
{? exec('FindAndGet','#table',DK,SC.PRDK,,"DK_AT<>null() & #DK_AT().ZAL<>0",0)
|| DK_AT.cntx_psh();
   DK_AT.prefix();
   _dk_at:=exec('FindAndGet','#table',DK,SC.PRDK,,"DK_AT",null());
   {? _dk_at<>null() & DK_AT.seek(_dk_at) || exec('lok_atest','magdok_wspolne') ?};
   DK_AT.cntx_pop()
|| FUN.info('Brak przypisanego atestu lub nie dołączono dokumentu do atestu.'@)
?}


\pok_dk_atest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: wyswietlenie dokumentu dla SC
::----------------------------------------------------------------------------------------------------------------------
{? __dk_at.ZAL='N'
|| FUN.info('Brak załącznika dla atestu.'@)
|| _dk_at:=exec('FindAndGet','#table',DK_AT,__dk_at.SQL,,,null());
   {? _dk_at<>null()
   || DK_AT.cntx_psh();
      DK_AT.prefix();
      {? DK_AT.seek(_dk_at) || exec('pok_atest','magdok_wspolne') ?};
      DK_AT.cntx_pop()
   || FUN.info('Nie znaleziono atestu.'@)
   ?}
?}


\lok_dk_atest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: kopiowanie pliku na lokalny dla SC
::----------------------------------------------------------------------------------------------------------------------
{? __dk_at.ZAL='N'
|| FUN.info('Brak załącznika dla atestu.'@)
|| _dk_at:=exec('FindAndGet','#table',DK_AT,__dk_at.SQL,,,null());
   {? _dk_at<>null()
   || DK_AT.cntx_psh();
      DK_AT.prefix();
      {? DK_AT.seek(_dk_at) || exec('lok_atest','magdok_wspolne') ?};
      DK_AT.cntx_pop()
   || FUN.info('Nie znaleziono atestu.'@)
   ?}
?}


\rek_at_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: podczytanie danych dla ND
::----------------------------------------------------------------------------------------------------------------------
{? ~DK.sel_size() & DK.DK_AT=null() || DK.actions_grayed('ATEST','U') || DK.actions_grayed('ATEST','') ?};
DK.N().SYM;
''


\inffdk_at
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Powiązane atesty z danym dokumentem sprzedaży
::----------------------------------------------------------------------------------------------------------------------
_faks:=$FAKS.ref();
_nd:=tab_tmp(1,'SQL','STRING[16]','');
{? (';MG'*FAKS.WHERE)>1
|| OKR.cntx_psh();
   exec('mag_psh','open_tab');
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.first()
   || {!
      |? exec('mag_open','open_tab',ST.ODDZ,$OKR.ROK+2);
         ND.index('FAKS_REF');
         ND.prefix(_faks,_faks);
         {? ND.first()
         || {!
            |? _nd.blank();
               _nd.SQL:=$ND.ref();
               _nd.add(1);
               ND.next()
            !}
         ?};
         OKR.next()
      !}
   ?};
   exec('mag_pop','open_tab');
   OKR.cntx_pop();
   _nd.clear();
   {? _nd.first()
   || exec('inf_dk_at','magdok_wspolne',_nd,FAKS)
   || FUN.info('Brak pozycji dokumentu powiązanych z atestami.'@)
   ?}
|| FUN.info('Dokument nie jest powiązany z dokumentami magazynowymi.\nFunkcja niedostępna.'@)
?};
obj_del(_nd);
~~


\pr_dk_at
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: przed redakcją pola atest dla DK
::----------------------------------------------------------------------------------------------------------------------
DK.PLUS='T' & DK.M().ATEST='T'


\infzdk_at
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Powiązane atesty z danym zamówień sprzedaży
::----------------------------------------------------------------------------------------------------------------------
_nd:=tab_tmp(1,'SQL','STRING[16]','');
ZK_N.cntx_psh();
ZK_RN.cntx_psh();
ZK_RN.index('ZAM');
ZK_RN.prefix(ZK_N.ref());
{? ZK_RN.first()
|| {!
   |? {? ZK_RN.ND<>''
      || _nd.blank();
         _nd.SQL:=ZK_RN.ND;
         _nd.add(1)
      ?};
      ZK_RN.next()
   !}
?};
ZK_N.cntx_pop();
ZK_RN.cntx_pop();
_nd.clear();
{? _nd.first()
|| exec('inf_dk_at','magdok_wspolne',_nd,ZK_N)
|| FUN.info('Brak pozycji zamówienia powiązanych z atestami.'@)
?};
obj_del(_nd);
~~


\tabFIND
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: zwraca tabelę zamiast zapytania SQL
::   WE: _a - rodzaj informacji: 1-przesunięcia międzymagazynowe
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};

_odd:=1+(ND.name()+3);
{? _a=1
|| _res:=tab_tmp(2,'MAGAZYN','STRING[10]',''
          ,'INDEKS','STRING[50]',''
          ,'RDK','INTEGER',''
          ,'NDK','STRING[8]',''
          ,'SRDK','STRING[16]','');
   _typ:=exec('FindInSet','#table','TYPYDOK','TYP',DK.N().TYP().TD,,,1,,null());
   _prdk:={? DK.M().SETW='P' || DK.SRDK || DK.PRDK ?};
   _ndsql:=$DK.N;
   _poz:=DK.P;
   exec('mag_psh','open_tab');
   OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? _typ<>null() & OKR.first()
   || {!
      |? exec('mag_open','open_tab',_odd,($OKR.ROK+2));
         DK.prefix();
         {? DK.first() & DK.find_tab('first','N','TYP','=',_typ,'PRDK',,'=',_prdk,'N','NDSQL','=',_ndsql,'P',,'=',_poz)
         || {!
            |? _res.blank();
               _res.MAGAZYN:=DK.N().MAG().SYM;
               _res.INDEKS:=DK.M().KTM;
               _res.RDK:=DK.RDK;
               _res.NDK:=DK.NDK;
               _res.SRDK:=DK.SRDK;
               _res.add(1);
                DK.find_tab('next','N','TYP','=',_typ,'PRDK',,'=',_prdk,'N','NDSQL','=',_ndsql,'P',,'=',_poz)
            !}
         ?};
         OKR.next()
      !}
   ?};
   exec('mag_pop','open_tab');
   OKR.cntx_pop()
?};
_res


\rek_dk_at
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: wyłączenie akcji Usuń dla Atestu
::----------------------------------------------------------------------------------------------------------------------
{? DK_AT.count() || DK_AT.actions_grayed(DK_AT.win_sel('?'),'U') || DK_AT.actions_grayed(DK_AT.win_sel('?'),'') ?};
''


\rek_dk_at_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: wyłączenie akcji Usuń dla Atestu
::----------------------------------------------------------------------------------------------------------------------
{? ~DK.sel_size() & DK.DK_AT=null() || DK.actions_grayed('ALL','U') || DK.actions_grayed('ALL','') ?};
''


\chk_mg4typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Sprawdza, czy dany magazyn ma uprawnieania do podanego typu dokumentu magazynowego
::   WE: [_a] - MG.ref(), jak nie podany to aktualny rekord
::       [_b] - TYPYDOK.ref(), jak nie podany to aktualny rekord
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_mg:={? var_pres('_a')=type_of(null()) || _a || MG.ref() ?};
_typydok:={? var_pres('_b')=type_of(null()) || _b || TYPYDOK.ref() ?};
T2MG.cntx_psh();
T2MG.index('T');
T2MG.prefix(_mg);
{? T2MG.first() || _wyn:=T2MG.find_key(_typydok) ?};
T2MG.cntx_pop();
_wyn


\be_dkmat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: formula przed redakcją pola DK.M
::----------------------------------------------------------------------------------------------------------------------
HELP.MOD_IND:=DK.M;
1


\autoDK_L
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: formula do podpięcia DK_L pod D_K (aktualny w buforze
::----------------------------------------------------------------------------------------------------------------------
DK.cntx_psh();
DK_L.cntx_psh();
_ile:=0;
DK_L.index('DK');
DK_L.prefix(DK.ref(),null);
{? DK_L.first()
|| {!
   |? _ile+=DK_L.IL;
      {? DK_L.DK().SCEAN<>'' || DK_L.SCEAN:=DK_L.DK().SCEAN; DK_L.put(1) ?};
      DK_L.next()
   !}
?};
{? _ile<>DK.IL
|| {? DK_L.find_key(DK.N().MAG().EANL,null,date(0,0,0),1)
   || DK_L.IL+=DK.IL-_ile;
      exec('reoIL2','magdok_wymiary');
      DK_L.put(1)
   || DK_L.clear();
      DK_L.blank();
      DK_L.DK:=DK.ref();
      DK_L.LOK:=DK.N().MAG().EANL;
      DK_L.TW:=date(0,0,0);
      DK_L.IL:=DK.IL-_ile;
      DK_L.DT:={? DK.N().Z='T' || DK.N().DA || DK.N().D ?};
      DK_L.TM:={? DK.N().Z='T' || DK.N().TA || time() ?};
      DK_L.US:=DK.N().US;
      DK_L.Z:=DK.N().Z;
      DK_L.Z_DO:='Z';
      DK_L.MG:=DK.N().MAG;
      DK_L.M:=DK.M;
      DK_L.JM:=DK.M().J;
      DK_L.AUTO:=1;
      DK_L.SCSQL:=DK.SRDK;
      DK_L.SCEAN:=DK.SCEAN;
      {? DK.M().SETW='P' & DK.TW<>date(0,0,0)
      || DK_L.AUTO:=0;
         DK_L.TW:=DK.TW
      ?};
      exec('reoIL2','magdok_wymiary');
      exec('uzupIDkod','magdok_palety',DK_L);
      DK_L.add(1)
   ?}
?};
DK.cntx_pop();
DK_L.cntx_pop();
~~


\pw_kodpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: formula przed wyświetleniem pola KODPAL
::   WE: _a - akronim tabeli
::----------------------------------------------------------------------------------------------------------------------
_tab:={? var_pres('_a')=type_of('') || _a || '' ?};
_res:=1;

{? _tab='DK_L'
|| _res:=exec('pwpaldkl','magdok_wspolne')
?};
_res


\pr_kodpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: formula przed redakcją pola KODPAL
::   WE: _a - akronim tabeli
::----------------------------------------------------------------------------------------------------------------------
_tab:={? var_pres('_a')=type_of('') || _a || '' ?};
_res:=1;

{? _tab='DK_L'
|| _res:=exec('prpaldkl','magdok_wspolne')
?};
_res


\po_kodpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: formula po redakcji pola KODPAL
::   WE: _a - akronim tabeli
::----------------------------------------------------------------------------------------------------------------------
_tab:={? var_pres('_a')=type_of('') || _a || '' ?};
_res:=1;

{? _tab='DK_L'
|| _fld:=fld();
   _wyn:=exec('FindInSet','#table','PAL','PAL',_fld,,"@.PAL.KODK",1,,'');
   {? _wyn='' || _wyn:=exec('FindInSet','#table','PAL','PAL',_fld,,"@.PAL.KODK",,,'') ?};
   _pal:={? _wyn<>'' || exec('FindInSet','#table','PAL','PAL',_wyn,,,1,,null()) || null() ?};
   {? cur_afld()='KODPAL'
   || DK_L.PAL:=_pal
   |? cur_afld()='KODPALD'
   || DK_L.PALDO:=_pal
   ?};
   exec('uzupIDkod','magdok_palety',DK_L);
   _res:=exec('popaldkl','magdok_wspolne')
?};
_res


\f3_kodpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: formula po redakcji pola KODPAL
::   WE: _a - akronim tabeli
::----------------------------------------------------------------------------------------------------------------------
_tab:={? var_pres('_a')=type_of('') || _a || '' ?};
_res:=fld();

{? _tab='DK_L'
|| {? PAL.select()
   || _res:=PAL.KODK;
      {? cur_afld()='KODPAL'
      || DK_L.PAL:=PAL.ref()
      |? cur_afld()='KODPALD'
      || DK_L.PALDO:=PAL.ref()
      ?};
      exec('uzupIDkod','magdok_palety',DK_L)
   ?}
?};
_res


\dk_ln_akceptuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Reorganizacja - Akceptuj
::   WE: params_get()
::   WE: [_a] - 0(domyślnie) 1-automatyczna akcja
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_AREO';
_params.UIDREF:=DK_LN.uidref();
_params.AKCJA:={? var_pres('_a')=type_of(0) & _a || 'AkceptujAuto' || 'Akceptuj' ?};
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'DK_LN',DK_LN.ref());
exec('mp_run','#b__box',_params);
~~


\dk_ln_zakoncz_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zakończenie edycji reorganizacji
::   WE: [_a] - 0-pytać (domyślnie) 1-nie
::       [_b] - 0(domyślnie) nie 1-auto akceptacja
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
_autoakc:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_par:=params_get();
_ispar:=var_pres('_par')>=117;

{? _ispar
|| _mp:=params_get.mp;
   _akcja:=_mp.akcja()
|| _akcja:='Zakończ_wer'
?};

_btnRuleResult:='';

_wyn:=0;

_lock:=1;
{? ~DK_LN.r_lock(1,1,1)
|| _lock:=0;
   {? ~_a & FUN.ask('Dokument reorganizacji obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@) & DK_LN.r_lock(1,,1)
   || DK_LN.r_unlock()
   ?};
   _wyn:=0
|? DK_LN.STAT_REJ='T'
|| {? ~_a || FUN.info('Reorganizacja jest zaakceptowana.\nZadanie zostanie zakończone.'@) ?};
   _wyn:=1
|? DK_LN.STAT_REJ='Z'
|| {? ~_a || FUN.info('Zakończono rejestrację reorganizacji.\nZadanie zostanie zakończone.'@) ?};
   _wyn:=1
|? {? ~_a || FUN.ask('Czy zakończyć rejestrację reorganizacji?'@) || 1 ?} & DK_LN.STAT_REJ='N'
|| DK_LN.STAT_REJ:='Z';
   _wyn:=DK_LN.put(1)
?};
{? _wyn
|| {? _akcja<>'Zakończ_wer' & ~_a || sel_exit() ?};
   {? _ispar || _mp.done() ?}
?};
{? _autoakc & DK_LN.STAT_REJ='Z' || exec('dk_ln_akceptuj','magdok_wspolne',1) ?};
{? _lock || DK_LN.r_unlock() ?};
_btnRuleResult


\ilmg2ZAM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Przepisanie ilości z zaakceptowanego dokumentu na pozycje zamówień/potwierdzeń
::   WE: _a - ref ND
::       _b - 1-akceptacja 0-wycofanie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_bufil:=EANX.BUFIL;
ND.cntx_psh();
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first()
|| {!
   |? {? DK.ZAM_RP<>''
      || {? (5+DK.ZAM_RP)='zdhip'
         || _poz:=exec('FindAndGet','#table',ZD_RP,DK.ZAM_RP,,"$ZD_POZ",'');
            _ptw:=exec('FindAndGet','#table',ZD_RP,DK.ZAM_RP,,"ZDP_POZ",'');
            _zre:=exec('FindAndGet','#table',ZD_RP,DK.ZAM_RP,,"IL_ZRE",0);
            EANX.BUFIL:={? _b || _zre || -_zre ?};
            {? _poz<>'' || _res+=1; exec('FindAndGet','#table',ZD_POZ,_poz,,"ILMG+=EANX.BUFIL; put(1)",0) ?};
            {? _ptw<>'' || exec('FindAndGet','#table',ZDP_POZ,_ptw,,"ILMG+=EANX.BUFIL; put(1)",0) ?}
         |? (5+DK.ZAM_RP)='zkhip'
         || _poz:=exec('FindAndGet','#table',ZK_RP,DK.ZAM_RP,,"$P",'');
            _zre:=exec('FindAndGet','#table',ZK_RP,DK.ZAM_RP,,"ILR",0);
            EANX.BUFIL:={? _b || _zre || -_zre ?};
            {? _poz<>'' || _res+=1; exec('FindAndGet','#table',ZK_P,_poz,,"ILMG+=EANX.BUFIL; put(1)",0) ?}
         ?}
      ?};
      DK.next()
   !}
?};
ND.cntx_pop();
DK.cntx_pop();
EANX.BUFIL:=_bufil;
_res


\renumdk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: renumeracja DK
::   WE: [_a] - ''(domyślnie) - drag&drop, 'U','D','N'-akcja do przenumerowania
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (';UDN'*_a)>1 || _a || '' ?};

DK.cntx_psh();
{? _tryb=''
|| _ref:=dnd_info('dest_record');
   {? DK.seek(_ref) || exec('zmien_lp','#dragdrop','P','DOKMAG') ?}
|| exec('zmien_lpa','#dragdrop','P','DOKMAG',,,_tryb)
?};
DK.cntx_pop()


\icon_cen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Ikona mówiąca o kosztach do rozliczenia
::----------------------------------------------------------------------------------------------------------------------
_res:=exec('pusta','#icon');
{? DK.PLUS='T'
|| FAKS_K.cntx_psh();
   FAP_K.cntx_psh();
   FAP_K.index('DKSQL');
   FAP_K.prefix($DK.ref());
   {? FAP_K.first()
   || {!
      |? {? FAP_K.FAKS_K().ROZLICZ='T'
         || {? FAP_K.WYC
            || _res:='xwin16.png:123'
            || _res:='xwin16.png:46'
            ?};
            0
         || FAP_K.next()
         ?}
      !}
   ?};
   FAKS_K.cntx_pop();
   FAP_K.cntx_pop()
?};
_res


\poxjm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Po redakcji dla pierwszej jednostki ewidencyjnej
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? _res & ZMIENNE.M().J2<>null()
|| _dokl:={? ZMIENNE.M<>null || exec('jaka_dok_m','jm',ZMIENNE.M) || 3 ?};
   _dokl_s:=exec('jaka_dok_mjm','jm',ZMIENNE.M,ZMIENNE.J2,ZMIENNE.M().J);
   {? _dokl_s<0 || _dokl_s:=_dokl ?};
   ZMIENNE.IL:=ZMIENNE.IL$_dokl;
   _res:=exec('itsPositive','#field',1);
   {? _res & ZMIENNE.J2<>null()
   || _il2:=ZMIENNE.IL/ZMIENNE.WS2 $ (_dokl_s+1);
      roundmet(BEER.MDOKL);
      {? ZMIENNE.IL=0 || ZMIENNE.IL2:=0
      |? ZMIENNE.IL2=0
       | (_il2<>ZMIENNE.IL2 & (1 | FUN.ask('Przeliczyć ilość w drugiej jednostce ewidencyjnej?'@)))
      || ZMIENNE.IL2:=_il2
      ?}
   ?};
   ZMIENNE.WS2:={? ZMIENNE.IL2>0 & ZMIENNE.IL>0 || ZMIENNE.IL/ZMIENNE.IL2
                |? ZMIENNE.J2<>null() & ZMIENNE.IL2=0 || exec('oblWSP','jm',ZMIENNE.M)
                || 0
                ?}
?};
_res


\dok_dk_atest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: dodaje atesty do załączników
::----------------------------------------------------------------------------------------------------------------------
_symbol:=exec('record','#to_string',__dk_tab.ref());
{? exec('dokum_seek','zbl',__dk_tab)
|| {? FUN.ask('Czy dołączyć atesty do załączników dokumentu %1?'@[_symbol])
   || _add:=0;
      _all:=0;
      _dokum:=DOKUM.ref();
      {? exec('upgrade2325_blbc1','zbl')
      || _drefsql:=DOKUM.REFSQL
      ?};
      DK_AT.cntx_psh();
      __dk_at.cntx_psh();
      __dk_at.prefix();
      {? __dk_at.first()
      || _all:=__dk_at.size();
         {!
         |? {? (DK_AT.prefix(); DK_AT.seek(__dk_at.SQL)) & DK_AT.ZAL<>null()
            || _nazwa:='Atest: %1'[__dk_at.KOD];
               _file:=DK_AT.bl_info('ZAL','NAME');
::             Załącznik jest dodawany tylko wtedy, gdy go jeszcze nie ma
               DOKUMZ.index('DOK');
               DOKUMZ.prefix(_dokum,_file,);
               {? ~DOKUMZ.first()
               || DOKUMZ.cntx_psh();
                  DOKUMZ.blank();
                  DOKUMZ.DOK:=_dokum;
                  {? exec('upgrade2325_blbc1','zbl')
                  || DOKUMZ.REFSQL:=_drefsql
                  ?};
                  DOKUMZ.KR_OP:=_nazwa;
                  DOKUMZ.DOKUM:=DK_AT.ZAL;
                  DOKUMZ.NAZWA:=_file;
                  {? DOKUMZ.add() || _add+=1 ?};
                  DOKUMZ.cntx_pop()
               ?}
            ?};
            __dk_at.next()
         !}
      ?};
      DK_AT.cntx_pop();
      __dk_at.cntx_pop();
      FUN.info('Liczba dodanych atestów (do załączników): %1 z %2.'[form(_add,0,,'99'),form(_all,0,,'99')])
   ?}
|| FUN.info('Brak załącznika dla dokumentu %1.'@[_symbol])
?}


\isDOKUM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: sprawdza czy dany atest jest dołączony jako załącznik
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
{? exec('dokum_seek','zbl',__dk_tab)
|| _dokum:=DOKUM.ref();
   DK_AT.cntx_psh();
   __dk_at.cntx_psh();
   {? (DK_AT.prefix(); DK_AT.seek(__dk_at.SQL)) & DK_AT.ZAL<>null()
   || _nazwa:='Atest: %1'[__dk_at.KOD];
      _file:=DK_AT.bl_info('ZAL','NAME');
      DOKUMZ.index('DOK');
      DOKUMZ.prefix(_dokum,_file,);
      _res:=DOKUMZ.first()
   ?};
   DK_AT.cntx_pop();
   __dk_at.cntx_pop()
?};
_res


\dk_at_kod_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Formuła określająca ikony dla powiązanych opłat
::----------------------------------------------------------------------------------------------------------------------
"{? exec('isDOKUM','magdok_wspolne')
 || 'xwin16.png:11'
 || exec('pusta','#icon')
 ?}
"


\delfap2dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PD] [23.25]
:: OPIS: Usuwa rekordy FAP2DK
::   WE:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | _a='' || return(~~) ?};
FAP2DK.cntx_psh();
FAP2DK.use('faptodk'+(1+(5-_a)));
FAP2DK.index('NDK');
FAP2DK.prefix(_a,);
{? FAP2DK.first() || {! |? FAP2DK.del() !} ?};
FAP2DK.use('faptosp'+(1+(5-_a)));
FAP2DK.index('NDK');
FAP2DK.prefix(_a,);
{? FAP2DK.first() || {! |? FAP2DK.del() !} ?};
FAP2DK.cntx_pop();
~~

\oldSCEAN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Na podstawie odczytanego kodu sprawdza czy dostawa nie otrzymała nowego kodu
::   WE: _a - kod identyfikujący dostawę
::       [_b] - kod oddziału
::   WY: tabela kodów identyfikacyjnych
::----------------------------------------------------------------------------------------------------------------------
_old:=_a;
_stoddz:=ST.ODDZ;
{? var_pres('_b')=type_of('') & (+_b)=1 || ST.ODDZ:=_b || '' ?};

_res:=tab_tmp(1,'KODK','STRING[128]','');
_res.blank();
_res.KODK:=_old;
_res.add(1);

:: najsampierw sprawdzamy, czy to kod z identyfikacją dostawy,
_oki:=exec('FindInSet','#table','MKODK','KK',_old,,"@.MKODK.IDMOB='D'",1,,0);
:: a potem, czy w ogóle są gdzieś stany na wymiarach:
:: - jak tak to zwracamy dany kod,
:: - jak nie to poszukujemy takiego ze stanami
exec('stan_psh','open_tab');
{? _oki
|| _oki:=0;
   SLD.cntx_psh();
   SLD.index('SCEAN');
   SLD.prefix(_old,);
   {? SLD.first() || {! |? _oki:=SLD.IL>0; ~_oki & SLD.next() !} ?};
   SLD.cntx_pop();
   _oki:=~_oki
?};
{? _oki
|| OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.first()
   || exec('mag_psh','open_tab');
      {!
      |? exec('mag_open','open_tab',ST.ODDZ,($OKR.ROK+2));
         exec('stan_open','open_tab',ST.ODDZ,($OKR.ROK+2));
         DK_HS.index('SCEANOLD');
         DK_HS.prefix(_old,);
         {? DK_HS.first() & DK_HS.find_tab('first','SCEANNEW',,'<>','','SCEANNEW',,'<>',_old)
         || {!
            |? {? (_res.clear(); _res.prefix(DK_HS.SCEANNEW,); ~_res.first())
               || _oki:=0;
                  SLD.cntx_psh();
                  SLD.index('SCEAN');
                  SLD.prefix(DK_HS.SCEANNEW,);
                  {? SLD.first() || {! |? _oki:=SLD.IL>0; ~_oki & SLD.next() !} ?};
                  SLD.cntx_pop();
                  {? _oki
                  || _res.blank();
                     _res.KODK:=DK_HS.SCEANNEW;
                     _res.add(1)
                  ?}
               ?};
               DK_HS.find_tab('next','SCEANNEW',,'<>','','SCEANNEW',,'<>',_old)
            !}
         ?};
         OKR.next()
      !};
      exec('mag_pop','open_tab')
   ?};
   OKR.cntx_pop()
?};
exec('stan_pop','open_tab');
ST.ODDZ:=_stoddz;
_res

:Sign Version 2.0 jowisz:1045 2023/12/15 09:02:43 53c4f3bbf6c1f1161dfd2e5dbee1f1895ea3a9c62535943579269b6261da4f82548d37ca22b6ad74c356d5e00a90de257e03dd66a59c13e6c1fea4e74d44a68cae29f3142dfc0be3de94dd1d7810f191b1ea75ae241b31c34e4b1bd04433e71ebbaccb1c96a0e52e072e689c605300f0447bd814b1ade6190c14f0e8e7f01382
