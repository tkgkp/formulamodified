:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: fks_auto.fml
:: Utworzony: 19.10.2016 [17.00]
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły do obsługi automatów
::======================================================================================================================


\slo_kod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Zwraca analityke konta ze slownika na podstawie zaliczki
::   WE: _a - nazwa slownika uzytkownika
::  OLD: \slo_kod/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('zal_slo','fks_auto',_a)
|| SLO.KOD
|| ''
?}


\zal_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Znajduje pozycje w slowniku na podstawie biezacego EZALa
::   WE: [_a] - nazwa slownika - gdy brak SLOSLU.SLSLU
::   WY: Czy udalo sie znalezc pozycje slownika? 1-tak 0-nie
::  OLD: \zal_slo/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=SLOSLU.SLSLU ?};
{? _a<>''
|| SLU.index('NAZ'); SLU.prefix(_a);
   {? SLU.first() & SLU.NAZ=_a
   || RS.index('RS'); RS.prefix(SLU.WZ);
      {? RS.first() & RS.WZ=SLU.WZ
      || {? {? RS.TAB='OSOBA'
            || EZAL.ZAL_DLA(); 1
            |? RS.TAB='OS'
            || OS.index('OSOBA'); OS.prefix(); OS.find_key(EZAL.ZAL_DLA)
            |? RS.TAB='SLO_OSOB'
            || SLO_OSOB.index('OSOBA'); SLO_OSOB.prefix(); SLO_OSOB.find_key(EZAL.ZAL_DLA,RS.F_ZATR)
            ?}
         || _kod:=($(RS.TAB+'.'+RS.KOD))();
            _k:={? type_of(_kod)=1 || ('00000000'+$_kod)+SLU.DL || _kod ?};
            SLO.index('SL'); SLO.prefix(SLU.ref(),_k);
            SLO.first() & SLO.KOD=_k
         ?}
      ?}
   ?}
?}


\pre_rozl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formula podpieta do automatu dekretujacego. Sprawdza czy w danym miesiacu
::       nalezy wykonac dekrety rozliczen miedzyokresowych. - Formula poczatkowa
::   WE: [_a] - typ rozliczenia: [0]-RMK, 1-RMP
::  OLD: \pre_rozl/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=0 ?};
_typ:={? _a=0 || 'rmk' || 'rmp' ?};
{? var_pres('__KAL')<100
|| exec('declare','kalendarz'); __KAL:=obj_new(@.CLASS.KALEND)
?};
ROZRACH.KH:=null;
{? _a=0 & FINFO.GRUPYRMK<>null | _a=1 & FINFO.GRUPYRMP<>null
|| SLO.win_edit('RED');
   {? _a=0 || FINFO.GRUPYRMK().SLU() || FINFO.GRUPYRMP().SLU() ?};
   ROZRACH.win_edit('GRRMK');
   {? ROZRACH.edit()
   || VAR_DEL.delete('TAB_RMK','dalej_rmk');
      TAB_RMK:=tab_tmp(3,'SYM','STRING[50]','Symbol RM',
                         'KON','STRING[35]','Konto',
                         'SYM_ROK','STRING[55]','Unikalny symbol'
                      );
      _sel:=TAB_RMK.mk_sel('Rozliczenia'@,'P',1,'tab_rmk_wer');
      TAB_RMK.win_act(_sel,0,'Kolejność');
      TAB_RMK.win_act(_sel,,'Formuła','Anuluj'@@,,'Anulowanie operacji'@,,"sel_exit(); dalej_rmk:=0",,,,,'A');
      TAB_RMK.win_act(_sel,,'Formuła','konTynuuj'@@,,'Kontynuacja operacji'@,,"sel_exit(); dalej_rmk:=1",,,,,'T');
      TAB_RMK.win_sel(_sel); 1
   || wyb:=0; return(0)
   ?}
|| FUN.info('W słownikach systemu nie wybrano słownika grup %1.'@[~_typ]); return(0)
?};
RMK.cntx_psh(); RMK.index('NAZ'); RMK.prefix(DOK.ODD);
OP.cntx_psh(); OP.index('KON_O'); OP.prefix(FINFO.NAROD,DOK.ODD);
{? RMK.first()
|| {! |?
      {? OP.find_key(RMK.KONP,RMK.SYM,RMK.SYM,RMK.SYM_ROK,) & -OP.TYP=_typ
      || {? ~exec('spr_zap','fks_auto')
         || {? var_pres('TAB_RMK')>0
            || TAB_RMK.SYM:=RMK.SYM;
               TAB_RMK.KON:=RMK.KONP;
               TAB_RMK.SYM_ROK:=RMK.SYM_ROK;
               TAB_RMK.add()
            ?}
         ?}
      ?};
      RMK.next()
   !}
?};
RMK.cntx_pop(); OP.cntx_pop();
{? var_pres('TAB_RMK')>0
|| TAB_RMK.prefix();
   dalej_rmk:={? TAB_RMK.first()
              || _wyb:=FUN.choice('Istnieją rozliczenia dla których zapis w tym miesiącu'
                                  '\nzostał już dokonany.'@,,'Kontynuuj'@,'Pokaż rozliczenia'@)
              || _wyb:=1
              ?};
   {? _wyb=2
   || {? TAB_RMK.select()
      || dalej_rmk
      || FUN.info('Zrezygnowano z operacji.'@); dalej_rmk:=0
      ?}
   ?};
   VAR_DEL.delete('TAB_RMK')
?};
dalej_rmk


\rozlicz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formula automatycznej dekretacji RMK (po sprawdzeniu ze
::       w okresie nie byly juz wykonane dekrety - tworzy pozycje dokumentu)
::   WE: 0 lub brak parametru - RMK, 1 - RMP
::  OLD: \rozlicz/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('dalej_rmk')>0 & dalej_rmk
|| _typ:={? _ || {?  _a=0 || 'RMK' || 'RMP' ?} || 'RMK' ?};
   RMK.cntx_psh(); RMK.index('NAZ'); RMK.prefix(DOK.ODD);
   OP.cntx_psh(); OP.index('KON_O'); OP.prefix(FINFO.NAROD,DOK.ODD);
   {? RMK.first()
   || {! |?
         {? OP.find_key(RMK.KONP,RMK.SYM,RMK.SYM,RMK.SYM_ROK,) & OP.TYP=_typ
         || {? exec('spr_zap','fks_auto')
            || {? exec('test_rmk','fks_auto') || exec('pozadd','fks_auto') ?}
            |? var_pres('TAB_RMK')>0
            || TAB_RMK.SYM:=RMK.SYM;
               TAB_RMK.KON:=RMK.KONP;
               TAB_RMK.SYM_ROK:=RMK.SYM_ROK;
               TAB_RMK.add()
            ?}
         ?};
         RMK.next()
      !}
   ?};
   RMK.cntx_pop(); OP.cntx_pop()
?}


\test_rmk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Sprawdzenie dopuszczalnosci modyfikacji rekordu RMK
::       Powodem niedopuszczenia moze byc blokada, inna grupa niż podana w define.
::   WY: 1 - dopuszcony
::       0 - niedopuszczony
::  OLD: \test_rmk/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
{? exec('frac_rmk','fks_auto')
|| {? (ROZRACH.KH<>null & RMK.GRUPA=ROZRACH.KH) | ROZRACH.KH=null
   || {? -RMK.BL<>'t' & DOK.DTW>=RMK.DATAOP &
         (-RMK.STRZ='wn' & OP.WN$2>OP.MA$2 | -RMK.STRZ='ma' & OP.WN$2<OP.MA$2)
      || _zwrot:=1
      |? -RMK.BL='t' & (DOK.DTW<RMK.BLOD | DOK.DTW>RMK.BLDO) & DOK.DTW>=RMK.DATAOP &
         ((-RMK.STRZ='wn' & OP.WN$2>OP.MA$2) | (-RMK.STRZ='ma' & OP.WN$2<OP.MA$2))
      || _zwrot:=1
      ?}
   ?}
?};
_zwrot


\frac_rmk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Sprawdza czy w tym miesiacu przypada na rozliczenie RMK
::       Jesli chcemy rozliczyc RMK co 3 miesiace to, liczac od daty pierwszej operacji,
::       jesli uplynelo 7 miesiecy to 7/3 daje ulamek, zas po 9 miesiacach da liczbe calkowita 9/3.
::       Do tego sluzy instrukcja frac(), ktora swoja wartoscia zwraca wynik formuly.
::   WY: 0 - nie czas na operacje
::       1 - mozna przeprowadzic operacje
::  OLD: \frac_rmk/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? RMK.SUMZ$2>0 & SSTALE.AO().POCZ~2>=RMK.DATAOP~2 & SSTALE.AO().POCZ~1>=RMK.DATAOP~1 |
   SSTALE.AO().POCZ~2<RMK.DATAOP~2 & SSTALE.AO().POCZ~1>RMK.DATAOP~1
|| _a:=SSTALE.AO().POCZ~2-RMK.DATAOP~2+(SSTALE.AO().POCZ~1-RMK.DATAOP~1)*12;
   ~frac(_a/RMK.ILEMIES)
|| 0
?}


\spr_zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formula sprawdza czy danym miesiacu zostala już rozliczona pozycja rozliczeń międzyokresowych.
::       Sprawdza na podstawie dat pozycji rozrachunku.
::  OLD: \spr_zap/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref());
_a:=1;
{? ZAP_OP.last()
|| {! |?
      {? (ZAP_OP.DATA>=SSTALE.AO().POCZ) & (ZAP_OP.DATA<=SSTALE.AO().KON)
      || {? _a:=exec('spr_str','fks_auto') || ZAP_OP.prev() || 0 ?}
      || {? ZAP_OP.DATA<SSTALE.AO().POCZ
         || 0
         || ZAP_OP.prev()
         ?}
      ?}
   !}
?};
_a


\spr_str
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Sprawdzenie czy zadeklarowana strona konta przeksiegowan dla RMK/RMP odpowiada
::       wlasciwej stronie zapisu w pozycji rozrachunku.
::  OLD: \spr_str/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
~((-RMK.STRZ='wn' & ZAP_OP.MA$2) | (-RMK.STRZ='ma' & ZAP_OP.WN$2))


\pozadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Wypelnienie rekordow tabeli POZ odpowiednimi wartosciami na podstawie rekordu RMK.
::  OLD: \pozadd/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? RMK.S='D'
|| _saldo:={? -RMK.STRZ='wn'
           || (OP.WN-OP.MA)$2
           || (OP.MA-OP.WN)$2
           ?};

   _od:={? RMK.DATAOP>=OKRO_F.POCZ & RMK.DATAOP<=OKRO_F.KON
        || RMK.DATAOP
        || OKRO_F.POCZ
        ?};
   _do:={? RMK.DZ>=OKRO_F.POCZ & RMK.DZ<=OKRO_F.KON
        || RMK.DZ
        || OKRO_F.KON
        ?};
   _lokr:={? RMK.D='T' || (_do-_od)+1 || __KAL.w_days(_od,_do) ?};
   _kwota_tmp:=(RMK.SUMZ*_lokr);
   _kwota:={? _kwota_tmp>_saldo || _saldo || _kwota_tmp ?}
|| _kwota:={? -RMK.STRZ='wn' & (RMK.SUMZ$2+1)>(OP.WN-OP.MA)$2
           || (OP.WN-OP.MA)$2
           |? -RMK.STRZ='ma' & (RMK.SUMZ$2+1)>(OP.MA-OP.WN)$2
           || (OP.MA-OP.WN)$2
           || RMK.SUMZ$2
           ?}
?};
_a:={? POZ.last() || POZ.POZ+1 || 1 ?};
POZ.blank();
POZ.ODD:=RMK.ODD;
POZ.POZ:=_a;
POZ.KON:=OP.AN;
POZ.STR:={? -RMK.STRZ='wn' || 'Ma' || 'Wn' ?};
POZ.SUM:=_kwota$2;
POZ.KOM:=exec('koment','fks_auto');
POZ.OP:=OP.OP;
POZ.ID:=OP.SYM;
POZ.SYM_ZEW:=OP.SYM_ZEW;
POZ.DO:=OP.DO;
POZ.TP:=OP.TZ;
POZ.DATA_R:=exec('dat_otw','dok_fks');
POZ.TID:=OP.TYP;
POZ.SYM_ROK:=exec('op_unik_sym','rozrach',POZ.ID,POZ.DO);
_str:={? -POZ.STR='wn' || 'Ma' || 'Wn' ?};
{? ~POZ.add()
|| undo()
|| exec('po_kon','dok_fks','FORM');
   exec('dod_wyr','wyrozniki')
?};
{? RRMK.prefix(RMK.ref); RRMK.first()
|| _rk:=_kwota;
   {! |?
      POZ.POZ+=1;
      POZ.ODD:=null;
      POZ.KON:=RRMK.KONTO;
      POZ.STR:=_str;
      POZ.KOM:=exec('koment','fks_auto');
      POZ.DO:=date(0,0,0);
      POZ.DATA_R:=date(0,0,0);
      POZ.ID:=POZ.SYM_ZEW:=POZ.TID:=POZ.SYM_ROK:=''; POZ.TP:=date(0,0,0); POZ.A:=POZ.ZP:=POZ.ZK:='N';
      {? RRMK.RODZ='P'
      || POZ.SUM:=(_kwota*RRMK.WAR/100)$2; _rk:=_rk-POZ.SUM
      || POZ.SUM:=RRMK.WAR; _rk:=_rk-RRMK.WAR
      ?};
      {? |_rk=0.01 || POZ.SUM+=_rk ?};
      {? ~POZ.add()
      || undo()
      || exec('po_kon','dok_fks','FORM');
         exec('dod_wyr','wyrozniki')
      ?};
      {? RRMK.RODZ='P'|| 1 || _rk>0 ?} & RRMK.next()
   !}
|| POZ.POZ+=1;
   POZ.ODD:=null;
   POZ.KON:=RMK.KONZ;
   POZ.STR:=_str;
   POZ.KOM:=exec('koment','fks_auto');
   POZ.TP:=date(0,0,0);
   POZ.DO:=date(0,0,0);
   POZ.DATA_R:=date(0,0,0);
   POZ.ID:=POZ.SYM_ZEW:=POZ.TID:=POZ.SYM_ROK:=''; POZ.TP:=date(0,0,0); POZ.A:=POZ.ZP:=POZ.ZK:='N';
   {? ~POZ.add()
   || undo()
   || exec('po_kon','dok_fks','FORM');
      exec('dod_wyr','wyrozniki')
   ?}
?}


\koment
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Odnajduje wlasciwy rekord komentarza (patrz formula \pozadd)
::  OLD: \koment/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
KS.index('SYM');
KS.prefix(SSTALE.AO().ROK, BILANSP.ASYNT+POZ.KON);  KS.first();
KOM.index('SYS');
KOM.prefix(KS.ref,'T');
{? KOM.first() || KOM.ref() || 0 ?}


\wyb_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.62]
:: OPIS: Wybor dokumentu do storna / kopii i utworzenie  naglowka
::   WE: _a=1 korekta nagłówkowa
::       _b=1 przeniesienie dokumentu (dom. 0)
::  OLD: \wyb_dok/storno.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=1 || __KORNAG:=1 || VAR_DEL.delete('__KORNAG') ?};
{? var_pres('_a')<=0 | _a=0 || POMOC.KNAG:=0 ?};
wyb:=0;
PARAM.AUTOMAT:='N';
{? AUTOKSIE.TYP='N' | (var_pres('__KORNAG')>0 & __KORNAG)
|| __STORNO:=1;
   __przenies:={? var_press('_b')>0 || _b || 0 ?};
   _ok:=0;
   {? exec('rodz_dok','dok_fks')
   || OKRO_F.win_sel('WER');
      OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(REF.FIRMA);
      SSTALE.AO();
      SER_KOR.TYP:='+';
      {? OKRO_F.select(,1)
      || _d:=DOK.ref();
         SER_KOR.TYP:='';
         REJ.cntx_psh();
         exec('cnt_psh','fks_auto');
         rok:=OKRO_F.ROK().KOD;
         okr:=OKRO_F.NR;
         rok_ref:=OKRO_F.ROK().ref();
         okr_ref:=OKRO_F.ref();
         dok:=null;
         exec('open','fks_ved',OKRO_F.ROK().KOD,OKRO_F.NR);
         _rejkod:=REJ.KOD;
         REJ.ODD();
         REJ.index('KOD'); REJ.prefix(ROK_F.ref(),ODD.ref());
         {? REJ.find_key(_rejkod,_rejkod)
         || _rejestr:=REJ.ref;
            _tyt_rej:='rejestr: '+REJ.ODD().OD+' - '+REJ.KOD
         || _rejestr:=null;
            _tyt_rej:='wszystkie rejestry'
         ?};
         _ok:=0;
         {? var_pres('__KORNAG')>0 & __KORNAG
         || {? OPERATOR.DEPT
            || DOK.index('KN');
               {? _rejestr
               || DOK.prefix('F','S','T','T',OPERATOR.DEPT,REJ.ref)
               || DOK.prefix('F','S','T','T',OPERATOR.DEPT)
               ?}
            || DOK.index('KN1');
               {? _rejestr
               || DOK.prefix('F','S','T','T',REJ.ref)
               || DOK.prefix('F','S','T','T')
               ?}
            ?}
         || {? OPERATOR.DEPT
            || DOK.index('O_REJ');
               {? _rejestr
               || DOK.prefix(OPERATOR.DEPT,REJ.ref)
               || DOK.prefix(OPERATOR.DEPT)
               ?}
            || DOK.index('REJ');
               {? _rejestr
               || DOK.prefix(REJ.ref)
               || DOK.prefix()
               ?}
            ?}
         ?};
         DOK.first();
         _dsel:=DOK.mk_sel(,'P',0,'dok_wer',,,,,'U');
         {? ~OPERATOR.DEPT || DOK.win_fld(_dsel,,'ODD','OD',,9,,,'Jedn. ks.'@)?};
         DOK.win_fld(_dsel,,'REJ','KOD',,8);
         DOK.win_fld(_dsel,,'NR',,,5);
         DOK.win_fld(_dsel,,'NK',,,20);
         DOK.win_fld(_dsel,,'DTO',,,10);
         DOK.win_fld(_dsel,,'DOP',,,10);
         DOK.win_fld(_dsel,,'DTW',,,10);
         DOK.win_fld(_dsel,,'ZP',,,13,,,,,,2,,"'T'","'N'",,);
         DOK.win_act(_dsel,,'Formuła','Wybierz'@@,,'Wybór dokumentu'@,,"{? __przenies=1 & DOK.ZP='T'
                                                                     || FUN.info('Dokument zaksięgowany.\nOperacja niedozwolona.'); 0
                                                                     |? DOK.DOK_REJ().M_ODD='T'
                                                                     || FUN.info('Dokument może zawierać dokumenty wtórne.\nOperacja niedozwolona.'@); 0
                                                                     |? POMOC.KNAG & (DOK.KN<>'' | DOK.LKN<>'')
                                                                     || FUN.info('Do dokumentu wystawiono już korektę nagłówkową.\nOperacja niedozwolona.'@); 0
                                                                     |? exec('spr_mod','dok_fks')
                                                                     || FUN.info('Dokument powstał na podstawie dokumentu dla wielu jednostek księgowych.\nOperacja niedozwolona.'@)
                                                                     || sel_exit; 1
                                                                     ?}",1,,,,'W');
         DOK.win_act(_dsel,,'Formuła','Po&zycje'@@,,'Pozycje dokumentu'@,,"
            POZ.cntx_psh(); POZ.use('pozy'+(DOK.name+4));
            SKIDXD.cntx_psh(); SKIDXD.use('skxd'+(DOK.name+4));
            POZ.index('DOK'); POZ.prefix(DOK.ref);
            exec('okna_poz','dok_fks',DOK.DOK_REJ().SLO().KOD,DOK.name()+4,'TR','TR');
            exec('suma_dok','dok_fks');
            POZ.hdr_sel(' %1'@[DOK.NK]);
            SKIDXD.actions('WER','AR'); SKIDXD.actions('WERV','AR');
            POZ.select(,,,'N:N');
            SKIDXD.actions('WER'); SKIDXD.actions('WERV');
            POZ.cntx_pop(); SKIDXD.cntx_pop()",,,,,'Z');
         DOK.win_act(_dsel,0,'Formuła','W&ybierz rejestr'@@,,
            'Wybór zakresu wyświetlanych dokumentów z wybranego rejestru'@,,
            "exec('zakres','fks_auto',1)",,,,,'Y');
         DOK.win_act(_dsel,1,'Formuła','W&ybierz rejestr'@@,,
            'Wybór zakresu wyświetlanych dokumentów z wybranego rejestru'@,,
            "exec('zakres','fks_auto',1)",,,,,'Y');
         DOK.win_act(_dsel,0,'Formuła','Wszystkie &rejestry'@@,,
            'Wyświetlanie dokumentów księgowych ze wszystkich rejestrów'@,,
            "exec('zakres','fks_auto',0)",,,,,'R');
         DOK.win_act(_dsel,1,'Formuła','Wszystkie &rejestry'@@,,
            'Wyświetlanie dokumentów księgowych ze wszystkich rejestrów'@,,
            "exec('zakres','fks_auto',0)",,,,,'R');
         DOK.win_act(_dsel,,'Szukaj');
         DOK.win_act(_dsel,0,'Wyświetl',,,,"POMOC.cntx_psh(); POMOC.D:=null; exec('dok_edit1','dok_fks',
                                            exec('okna_r','dok_fks',DOK.DOK_REJ().SLO().KOD));
                                            exec('gr_bufor','dok_fks','DOK');
                                            VAR_DEL.delete('editdpolazn');
                                            editdpolazn:=1;
                                            DOKPOLA.cntx_psh();
                                            DOKPOLA.use('dokp'+(ref_name(DOK.ref())+4)); DOKPOLA.prefix();
                                            {? var_pres('dok')>0 || _dok:=dok; VAR_DEL.delete('dok') ?};
                                            exec('edit','dok_ksef',1);
                                            DOK.display();
                                            {? var_pres('_dok')>0 || dok:=_dok ?};
                                            DOKPOLA.cntx_pop();
                                            VAR_DEL.delete('editdpolazn'); POMOC.cntx_pop()");
         DOK.win_sel(_dsel);
         tyt:='Wybierz dokument źródłowy ('+OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ+')';
         _vpr:=DOK_REJ.PR;
         {!|? DOK.hdr_sel(); DOK.hdr_sel(tyt+' - ('+_tyt_rej+')');
              {? DOK.name()=ref_name(POMOC.DOK1) || POMOC.DOK1() ?};
              {? DOK.select(,1)
              || {? ~DOK.get()
                 || FUN.info('Dokument obsługuje inny operator.'@); 1
                 |? __przenies & DOK.A='T'
                 || FUN.info('Nie można przenieść zaakceptowanego dokumentu.'@); 1
                 |? POMOC.D().SLO().KOD<>DOK.DOK_REJ().SLO().KOD
                 || FUN.info('Wybrano dokument niewłaściwego rodzaju.\nWybierz %1.'@[POMOC.D().SLO().TR]);1
                 |? _vpr<>DOK.DOK_REJ().PR
                 || FUN.info('Wybrano dokument niewłaściwego rodzaju.\nNależy wybrać dokument z płatnościami ratalnymi.'@);1
                 |? POMOC.D().KOR_NAG='T' & DOK.ZP='N'
                 || FUN.info('Wprowadzanie korekty nagłówkowej.\nPierwotny dokument musi być zaksięgowany próbnie.'@);1
                 || VPOZ.index('VDOK');
                    VPOZ.prefix(DOK.ref());
                    POZ.index('DOK');
                    POZ.prefix(DOK.ref());
                    FAK.index('FAK');
                    FAK.prefix(DOK.ref());
                    _poz:={? DOK_REJ.PUDEK='T' || 0 || ~POZ.first() ?};
                    _vpoz:={? DOK_REJ.WEW='T' || 0 || ~VPOZ.first() ?};
                    {? _poz & _vpoz & ~FAK.first()
                    || FUN.info('Wybrano dokument bez pozycji.'@); 1
                    || dok:=DOK.ref(); dokoldtr:=DOK.TR ; exec('gr_bufor','dok_fks','DOK'); _ok:=1; 0
                    ?}
                 ?}
              || 0
              ?}
         !};
         VAR_DEL.delete('tyt');
         {? _ok
         || {? var_pres('__KORNAG')>0
            || {? DOK.get()
               || _ref:=#DOK.ref(); _maska:=DOK.name(); DOK.r_lock(1,1); _ok:=1
               || FUN.info('Dokument pierwotny obsługuje inny operator.\nDodanie dokumentu korekty nie powiodło się.'@); _ok:=0;  exec('cnt_pop','fks_auto'); REJ.cntx_pop(); return(2)
               ?}
            ?}
         ?};
         {? _ok
         || _nk:=DOK.NK; _wys:=DOK.WYS; _tr:=DOK.TR; _wal:=DOK.WAL; _zew:=DOK.SYM_ZEW;
            _sp_wym:=DOK.SP_WYM; _okrvat:=DOK.OKRVAT; _tp:=DOK.D3;
            _dtw:=DOK.DTW; _dto:=DOK.DTO; _dop:=DOK.DOP; _d4:=DOK.D4;
            _kn:=$DOK.ref(); _dok_rej:=DOK.DOK_REJ;
            {? DOK.TKRS
            || {? SSTALE.AR<>OKRO_F.ROK
               || _tkrs:=_bank:=null; _typkrs:=''
               || _tkrs:=DOK.TKRS; _bank:=DOK.BANK; _typkrs:=DOK.TYPKRS
               ?}
            || _tkrs:=_bank:=null; _typkrs:=''
            ?};
            {? DOK.TRKS_V
            || {? SSTALE.AR<>OKRO_F.ROK || _tkrs_v:=null || _tkrs_v:=DOK.TRKS_V ?}
            || _tkrs_v:=null
            ?};
            VAR_DEL.delete('__doksprref');
            {? var_pres('__przenies')>0 & __przenies>0
            || __doksprref:=$DOK.ref()
            ?};
            _nip:=DOK.NIP; _kh:=DOK.KH; _kor:=DOK.KOR; _korz:=DOK.KOR_ZEW; _dodslu:=DOK.DODSLU;
            _kh_full:=DOK.KH_FULL;
            _kh_kr:=DOK.KH_KRAJ;
            _kh_kriso:=DOK.KH_KRISO;
            _ul:=DOK.UL;
            _mia:=DOK.MIASTO;
            _pocz:=DOK.POCZ;
            _kpocz:=DOK.KPOCZ;
            _dom:=DOK.DOM;
            _lok:=DOK.LOKAL;
            _kh_odb:=DOK.KH_ODB;
            _o_naz:=DOK.O_NAZ;
            _o_ul:=DOK.O_UL;
            _dsp_wpoz:=DOK.DSP_WPOZ;
            _dsp_wpzf:=DOK.DSP_WPZF;
            _o_mia:=DOK.O_MIASTO;
            _o_pocz:=DOK.O_POCZ;
            _o_kpocz:=DOK.O_KPOCZ;
            _o_dom:=DOK.O_DOM;
            _o_lokal:=DOK.O_LOKAL;
            _o_kraj:=DOK.O_KRAJ;
            _o_kriso:=DOK.O_KRISO;
            _o_nip:=DOK.O_NIP;
            _kor_prz:=DOK.KOR_PRZY;
            _kor_okr:=DOK.KOR_OKR;
            _dwkor:=DOK.DWKOR;
            _dpolas:=DOKPOLA.name();
            DOKPOLA.use('dokp'+(ref_name(DOK.ref())+4));
            DOKPOLA.index('UNIK');
            DOKPOLA.prefix(DOK.ref());
            _pola:=DOKPOLA.first();
            DOKPOLA.use(_dpolas);
            _dodslo:=DOK.DODSLO; _sp_pl:=DOK.SP_PL; _kraj:=DOK.KRAJ; _jorg:=DOK.JORG;
            _sp_wym:=DOK.SP_WYM;
            _jpk_gtu:=DOK.JPK_GTU;
            _jpk_proc:=DOK.JPK_PROC;
            _jpk_typ:=DOK.JPK_V_T;
            _proced:=DOK.PROCED;
            _nrksefdk:=DOK.memo_txt(,1,'NRKSEFDK')
         ?};
         vv:=exec('sprvpozv','dok_fks',DOK.ref);
         exec('cnt_pop','fks_auto');
         REJ.cntx_pop();
         {? _ok
         || DOK.blank();
            exec('param_p','dok_fks');
            DOK.DOK_REJ:=POMOC.D;
            DOK.NK:=_nk;
            DOK.SYM_ZEW:={? DOK.DOK_REJ().EDSYMZEW='T' || _zew || _nk ?};
            DOK.WYS:=_wys; DOK.TR:=_tr; DOK.WAL:=_wal;
            DOK.TKRS:=_tkrs; DOK.BANK:=_bank; DOK.TYPKRS:=_typkrs;
            DOK.TRKS_V:=_tkrs_v;
            DOK.NIP:=_nip; DOK.KH:=_kh;
            DOK.KH_FULL:=_kh_full;
            DOK.KH_KRAJ:=_kh_kr; DOK.KH_KRISO:=_kh_kriso;
            DOK.UL:=_ul;
            DOK.MIASTO:=_mia;
            DOK.POCZ:=_pocz;
            DOK.KPOCZ:=_kpocz;
            DOK.DSP_WPOZ:=_dsp_wpoz;
            DOK.DSP_WPZF:=_dsp_wpzf;
            DOK.DOM:=_dom;
            DOK.LOKAL:=_lok;
            DOK.KH_ODB:= _kh_odb;
            DOK.O_NAZ:=_o_naz;
            DOK.O_UL:=_o_ul;
            DOK.O_MIASTO:=_o_mia;
            DOK.O_POCZ:=_o_pocz;
            DOK.O_KPOCZ:=_o_kpocz;
            DOK.O_DOM:=_o_dom;
            DOK.O_LOKAL:=_o_lokal;
            DOK.O_KRAJ:=_o_kraj;
            DOK.O_KRISO:=_o_kriso;
            DOK.O_NIP:=_o_nip;
            {? DOK.DOK_REJ().KOR='T'
            || DOK.KOR:=_kor;
               DOK.DWKOR:=_dwkor;
               DOK.KOR_ZEW:={? DOK.DOK_REJ().EDSYMZEW='T' || _korz || _kor ?};
               DOK.KOR_PRZY:=_kor_prz;
               DOK.KOR_OKR:=_kor_okr;
               _dwkor:=DOK.DWKOR
            ?};
            DOK.OKRVAT:=_okrvat;
: ----------------------- korekta nagłówkowa ----------------------------------------------------------------------------
            {? var_pres('__KORNAG')>0 & DOK.DOK_REJ().KOR_NAG='T'
            || DOK.DTW:= _dtw; DOK.DTO:=_dto; DOK.DOP:=_dop; DOK.D3:=_tp; DOK.D4:=_d4;

               DOKN.blank();
               DOKN.ODD:=DOK.ODD;
               DOKN.KN:=_kn;
               DOKN.DOK_REJ:=_dok_rej;
               DOKN.NK1:=DOK.NK;
               DOKN.SYM_ZEW1:={? DOK.DOK_REJ().EDSYMZEW='T' || _zew || _nk ?};
               DOKN.NIP1:=_nip; DOKN.KH1:=_kh;
               DOKN.WYS1:=DOK.WYS;
               DOKN.DTW1:=DOK.DTW; DOKN.DTO1:=DOK.DTO; DOKN.DOP1:=DOK.DOP; DOKN.D41:=DOK.D4;
               DOKN.KH_FULL1:=_kh_full;
               DOKN.MIASTO1:=_mia;
               DOKN.UL1:=_ul;
               DOKN.KPOCZ1:=_kpocz;
               DOKN.DOM1:=_dom;
               DOKN.LOKAL1:=_lok;
               DOKN.POCZ1:=_pocz;
               DOKN.KH_KRAJ1:=_kh_kr; DOKN.KH_KRIS1:=_kh_kriso;
               DOKN.KH_ODB1:= _kh_odb;
               DOKN.O_NAZ1:=_o_naz;
               DOKN.O_MIAST1:=_o_mia;
               DOKN.O_UL1:=_o_ul;
               DOKN.O_KPOCZ1:=_o_kpocz;
               DOKN.O_DOM1:=_o_dom;
               DOKN.O_LOKAL1:=_o_lokal;
               DOKN.O_POCZ1:=_o_pocz;
               DOKN.O_KRAJ1:=_o_kraj;
               DOKN.O_KRISO1:=_o_kriso;
               DOKN.O_NIP1:=_o_nip;
               DOK.NK:=DOK.SYM_ZEW:='';
               DOK.KOR:=_nk;
               DOK.KOR_ZEW:={? DOK.DOK_REJ().EDSYMZEW='T' || _zew || _nk ?};

               DOKN.OKRVAT1:=_okrvat;

               DOK.efld_opt(DOK.win_edit('?'),'mark=1, enable=1',,'KOR');
               DOK.efld_opt(DOK.win_edit('?'),'mark=1, enable=1',,'KOR_ZEW');
               DOK.efld_opt(DOK.win_edit('?'),'mark=1, enable=1',,'KOR_PRZY');
               _opcja:={? DOK.DTW>=date(2019,7,1) || 'mark=0, enable=1' || 'mark=1, enable=1' ?};
               DOK.efld_opt(DOK.win_edit('?'),_opcja,,'KOR_OKR')
            ?};
            DOK.DODSLU:=_dodslu;
            DOK.DODSLO:=_dodslo; DOK.SP_PL:=_sp_pl; DOK.KRAJ:=_kraj; DOK.JORG:=_jorg;
            {? 'SAD,VAT'*DOK.DOK_REJ().SLO().KOD>0
            || DOK.SP_WYM:=_sp_wym
            || DOK.SP_WYM:='N'
            ?};
            {? 'SAD,VAT'*DOK.DOK_REJ().SLO().KOD>0
            || DOK.JPK_GTU:=_jpk_gtu;
               DOK.JPK_PROC:=_jpk_proc
            || DOK.JPK_GTU:=DOK.JPK_PROC:=''
            ?};
            {? DOK.DOK_REJ().JPK_ETYP='T'
            || DOK.JPK_V_T:=_jpk_typ
            || DOK.JPK_V_T:=DOK_REJ.JPK_V_T
            ?};
            DOK.PROCED:=_proced;
            dolndok:=0;
            DOKPOLA.prefix();
            DOK.memo_set(_nrksefdk,'NRKSEFDK');
            {? exec('dol_dok2','dok_fks',1)
            || DOK.memo_put(,'NRKSEFDK');
               {? _pola
               || DOKPOLA.cntx_psh();
                  DOKPOLA.prefix();
                  DOKPOLA.REK:=DOK.ref();
                  DOKPOLA.add();
                  DOKPOLA.cntx_pop()
               ?};
               POZ.index('DOK'); POZ.prefix(DOK.ref); wyb:=1
            || _ok:=0
            ?};
            {? var_pres('__KORNAG')<=0 || VAR_DEL.delete('dolndok') ?}
         ?};
         {? var_pres('__KORNAG')>0 & var_pres('_ref')>0 || DOK.r_unlock(_ref,_maska) ?};
         {? ~_ok || VAR_DEL.delete('rok','okr','dok','dokoldtr','vv'); 0 || 1 ?}
      ?};
      SER_KOR.TYP:=''
   ?};
   VAR_DEL.delete('__STORNO','__przenies','__doksprref');
   _ok
?}


\cnt_psh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.62]
:: OPIS: Ustawienie instrukcji cntx_psh
::  OLD: \cnt_psh/storno.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh();
DOKN.cntx_psh();
POZ.cntx_psh();
POW.cntx_psh();
FAK.cntx_psh();
VPOZ.cntx_psh();
VROZ.cntx_psh();
TKRS.cntx_psh();
SKIDXD.cntx_psh();
POZF.cntx_psh();
P_V.cntx_psh()


\cnt_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.62]
:: OPIS: Ustawienie instrukcji cntx_pop
::  OLD: \cnt_pop/storno.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_pop();
DOKN.cntx_pop();
POZ.cntx_pop();
POW.cntx_pop();
FAK.cntx_pop();
VPOZ.cntx_pop();
VROZ.cntx_pop();
TKRS.cntx_pop();
SKIDXD.cntx_pop();
POZF.cntx_pop();
P_V.cntx_pop()


\zakres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2009]
:: OPIS: Ustawienie zakresu dokumentow dla wybranego rejestru lub wszystkich rejestrow
::   WE: _a - 1 wybor rejestru, 0 wszystkie rejestry
::  OLD: \zakres/storno.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| {? var_pres('__KORNAG')>0 & __KORNAG=1
   || _kn:=REJ.ndx_tmp(,1,'ROK',,0,'KNAG',,0);
      REJ.cntx_psh();
      {? REJ.first()
      || {! |? {? REJ.KNAG=''
               || {? exec('prz_knag','rejestry') || REJ.KNAG:='T';REJ.put() ?}
               ?};
               REJ.next()
         !}
      ?};
      REJ.prefix();
      {? OPERATOR.DEPT
      || REJ.index('KN');REJ.prefix(ROK_F.ref(),OPERATOR.DEPT,'T')
      || REJ.index(_kn); REJ.prefix(ROK_F.ref(),'T')
      ?}
   || REJ.cntx_psh(); REJ.index('KOD');


      {? OPERATOR.DEPT
      || REJ.prefix(ROK_F.ref(),OPERATOR.DEPT)
      || REJ.prefix(ROK_F.ref())
      ?}
   ?};
   REJ.win_sel('SLO_ODD');
   {? ~REJ.select(,1) || REJ.cntx_pop(); return(0) ?};
   _tyt_rej:='rejestr: '+REJ.ODD().OD+' - '+REJ.KOD;
   _rejestr:=REJ.ref ;
   REJ.cntx_pop()
|| _rejestr:=null;
   _tyt_rej:='wszystkie rejestry'
?};
{? var_pres('__KORNAG')>0 & __KORNAG
|| {? OPERATOR.DEPT
   || DOK.index('KN');
      {? _rejestr
      || DOK.prefix('F','S','T','T',OPERATOR.DEPT,_rejestr)
      || DOK.prefix('F','S','T','T',OPERATOR.DEPT)
      ?}
   || DOK.index('KN1');
      {? _rejestr
      || DOK.prefix('F','S','T','T',_rejestr)
      || DOK.prefix('F','S','T','T')
      ?}
   ?}
|| {? OPERATOR.DEPT
   || DOK.index('O_REJ');
      {? _rejestr
      || DOK.prefix(OPERATOR.DEPT,_rejestr)
      || DOK.prefix(OPERATOR.DEPT)
      ?}
   || DOK.index('REJ');
      {? _rejestr
      || DOK.prefix(_rejestr)
      || DOK.prefix()
      ?}
   ?}
?};
DOK.hdr_sel(); DOK.hdr_sel(tyt+' - ('+_tyt_rej+')');
1


\storno
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.62]
:: OPIS: Uruchomienie automatu do storna / kopii dokumentu
::   WE: _a=-1 - Storno wybranego dokumentu (na minus)
::       _a=2 - Storno wybranego dokumentu (zm. stron)
::       _a=3 - Przeniesienie wybranego dokumentu do innego okresu
::       _a=1 - Kopia wybranego dokumentu
::       [_b] - Okresla sposob kopiowania tresci dekretu
::              1 - jesli opisy dekretow nie beda zgodne z opisem z nalowka dokumentu zostana one skopiowane
::              wpp opis dekretu bedzie pobrany z opisu nowego naglowka dokumentu
::  OLD: \storno/storno.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('rok')=2 & var_pres('okr')=1 & var_pres('dok')=7 & var_pres('_a')=1
|| _d:=DOK.ref();
   _pozf:=DOK.DOK_REJ().JPK_FA_P='T';
   {? _<2 || _b:=0 ?};
   VAR_DEL.delete('TmpPV');
   a_przen:=1;
   TmpPV:=exec('tmppv','fks_auto');
   exec('ut_dkdrb','fks_auto',_a);
   exec('cnt_psh','fks_auto');
   exec('utw_poz','fks_auto',_d,_a,_b);
   exec('utw_vpoz','fks_auto',_d,_a);
   exec('utw_pv','fks_auto');
   exec('utw_fak','fks_auto',_d,_a);
   exec('utw_skxd','fks_auto',_d,_a);
   {? _a=3 || exec('utw_dokum','fks_auto',_d) ?};
   {? _pozf
   || exec('utw_pozf','fks_auto',_d,_a)
   ?};
   {? _a=3 || exec('usun_pop','fks_auto') ?};
   VAR_DEL.delete('rok','okr','dok','dokoldtr','vv','TmpPV','a_przen','rok_ref','okr_ref');
   exec('cnt_pop','fks_auto')
|| FUN.info('Brak parametrów funkcji.'@)
?}


\ut_dkdrb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Przenosi platnosci ratalne dokumentu
::  OLD: \ut_dkdrb/storno.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.DOK_REJ().PR='T'
|| _vrefdn:=DOK.ref();
   _vmask:=D_RB.name();
   ROK_F.cntx_psh(); OKRO_F.cntx_psh();
   OKRO_F.index('ROK');
   ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA,rok);
   {? ROK_F.first()
   || OKRO_F.prefix(ROK_F.ref(),okr);
      {? OKRO_F.first()
      || D_RB.use('dr__fk'+ROK_F.KOD);
         D_RB.index('DOK'); D_RB.prefix(OKRO_F.ref(),dok);
         {? D_RB.first()
         || {! |?
               D_RB.cntx_psh(); D_RB.use(_vmask); D_RB.prefix();
               D_RB.DOK:=_vrefdn; D_RB.OKRO_F:=SSTALE.AO;
               {? _a=-1 || D_RB.WAR-=(2*D_RB.WAR) ?};
               D_RB.add(); D_RB.cntx_pop();
               D_RB.next()
            !}
         ?};
         D_RB.use(_vmask)
      ?}
   ?};
   ROK_F.cntx_pop(); OKRO_F.cntx_pop()
?}


\utw_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.62]
:: OPIS: Utworzenie pozycji nowego dokumentu (tabela POZ)
::   WE: _a - ref DOK
::       _b=-1 - Storno wybranego dokumentu (na minus)
::       _b=2 - Storno wybranego dokumentu (zm. stron)
::       _b=1 - Kopia wybranego dokumentu
::       _b=3 - Przeniesienie wybranego dokumentu do innego okresu
::       _c - Okresla sposob kopiowania tresci dekretu
::            1 - jesli opisy dekretow nie beda zgodne z opisem z nalowka dokumentu zostana one skopiowane
::            wpp opis dekretu bedzie pobrany z opisu nowego naglowka dokumentu
::  OLD: \utw_poz/storno.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.index('DOK');
POZ.prefix(DOK.ref());
_lp:={? POZ.last() || POZ.POZ || 0 ?};
exec('open','fks_ved',rok,okr);
POW.index('POZ');
POZ.index('DOK');
POZ.prefix(dok);
{? ROZNE.GR_DOK=null
|| _is_gr:=0;
   {? POZ.first() ||
      {! |?
         _is_gr:=exec('is_gr','dok_fks','POZ');
         _is_gr=0 & POZ.next()
      !}
   ?};
   _utw_gr:={? _is_gr
            || FUN.ask('Pozycje dokumentu źródłowego są przypisane do grup.\n'
                       'Uwzględnić przypisania w nowych pozycjach?'@)
            || 0
            ?}
|| _utw_gr:=0
?};
{? POZ.first()
|| {!
   |? {? _utw_gr || exec('gr_bufor','dok_fks','POZ') ?};
      _vrefps:=POZ.ref();
      POZ.cntx_psh();POW.cntx_psh();
      exec('open','fks_ved',SSTALE.AR().KOD,SSTALE.AO().NR);
      POZ.prefix();
      _lp+=1;
      POZ.POZ:=_lp;
      POZ.DOK:=_a;
      {? _c=0 | _c=1 & POZ.OP=dokoldtr || POZ.OP:=DOK.TR ?};
      {? rok<>SSTALE.AR().KOD | POZ.KOM=null
      || POZ.KOM:=exec('koment','konto',POZ.KON)
      ?};
      _k:={? POZ.KOM<>null || POZ.KOM().KS || null ?};
      {? _b=-1 || POZ.SUM:=-POZ.SUM; POZ.SUMW:=-POZ.SUMW; POZ.SP_V:=-POZ.SP_V
      |? _b=2  || {? 1+POZ.STR='W' || POZ.STR:='Ma' || POZ.STR:='Wn'; POZ.SLO_PROJ:=null ?}
      ?};
      POZ.A:=POZ.ZP:=POZ.ZK:='N';
      {? POZ.SYM_ZEW<>'' & DOK.DOK_REJ().EDSYMZEW='N'
      || _w:={? POZ.WAL=null || exec('wal_nar','dok_fks') || POZ.WAL ?};
         _maska:=((POZ.name()-2)+2);
         OP.cntx_psh(); OP.use('operac'+_maska);
         OP.index('KON_O'); OP.prefix(_w,POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK);
         POZ.SYM_ZEW:={? OP.first() || OP.SYM_ZEW || POZ.ID ?};
         OP.cntx_pop()
      ?};
      _add:=POZ.add();
      {? _add & _utw_gr || exec('pop_poz','dok_fks','POZ',0) ?};
      _p:=POZ.ref();
      {? _add & var_pres('TmpPV')>0
      || TmpPV.add($_vrefps,$_p)
      ?};
      {? MLEX.FIKSB
      || exec('bz_pozk','fks_auto',_vrefps,_p,_b)
      ?};
      POZ.cntx_pop();POW.cntx_pop();
      POW.index('POZ');
      POW.prefix(POZ.ref());
      {? POW.first() & _k<>null
      || {!
         |? POZ.cntx_psh();POW.cntx_psh();
            exec('open','fks_ved',SSTALE.AR().KOD,SSTALE.AO().NR);
            POW.prefix();
            POW.POZ:=_p;
            {? _b=-1 || POW.KW:=-POW.KW ?};
            POW.add();
            POZ.cntx_pop();POW.cntx_pop();
            POW.next()
         !};
         {? rok<>SSTALE.AR().KOD & _k<>null
         || POZ.cntx_psh();  POW.cntx_psh();
            exec('open','fks_ved',SSTALE.AR().KOD,SSTALE.AO().NR);
            exec('czy_ok','wyrozniki',_k,_p);
            POZ.cntx_pop();  POW.cntx_pop()
         ?}
      ?};
      {? DOK.DOK_REJ().PR='T'
      || _vmask:=D_RB.name();
         ROK_F.cntx_psh(); OKRO_F.cntx_psh();
         OKRO_F.index('ROK');
         ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA,rok);
         {? ROK_F.first()
         || OKRO_F.prefix(ROK_F.ref(),okr);
            {? OKRO_F.first()
            || D_RB.use('dr__fk'+ROK_F.KOD);
               D_RB.index('POZ'); D_RB.prefix(OKRO_F.ref(),_vrefps);
               {? D_RB.first()
               || {! |?
                     D_RB.cntx_psh(); D_RB.use(_vmask); D_RB.prefix();
                     D_RB.POZ:=_p; D_RB.OKRO_F:=SSTALE.AO;
                     D_RB.OP:=null; {? _b=-1 || D_RB.WAR-=(2*D_RB.WAR) ?};
                     D_RB.add(); D_RB.cntx_pop();
                     D_RB.next()
                  !}
               ?};
               D_RB.use(_vmask)
            ?}
         ?};
         ROK_F.cntx_pop(); OKRO_F.cntx_pop()
      ?};
      POZ.next()
   !}
?}


\utw_vpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.62]
:: OPIS: Utworzenie pozycji VAT nowego dokumentu (tabela VPOZ)
::   WE: _a - ref DOK
::       _b=-1 - Storno wybranego dokumentu (na minus)
::       _b=2 - Storno wybranego dokumentu (zm. stron)
::       _b=1 - Kopia wybranego dokumentu
::       _b=3 - Przeniesienie wybranego dokumentu do innego okresu
::  OLD: \utw_vpoz/storno.fml
::----------------------------------------------------------------------------------------------------------------------
VPOZ.cntx_psh(); VROZ.cntx_psh();
_ind:=VAT_REJ.ndx_tmp(,1,'REJ',,,'RVAT','SYM',);
exec('open','fks_ved',rok,okr);
VPOZ.index('VDOK'); VPOZ.prefix(dok);
VROZ.index('VROZ');
_dszgod:=0;
DOK.cntx_psh();
{? DOK.seek(_a, ref_name(_a)) & DOK.DSP_WPOZ='N' || _dszgod:=1; _dsp:=DOK.DOP || _dsp:=date(0,0,0) ?};
DOK.cntx_pop();
{? VPOZ.first()
|| {!
   |? {? var_pres('__KORNAG')>0 & __KORNAG & POMOC.KNAG=2 & 4+DOK.KN='doku' || VPOZ.KNAG:=POMOC.KNAG; VPOZ.put() ?};
      VPOZ.cntx_psh();
      _v_ref:=VPOZ.ref();
      exec('open','fks_ved',SSTALE.AR().KOD,SSTALE.AO().NR);
      VPOZ.prefix();
      VPOZ.DOK:=_a;
      {? _dszgod || VPOZ.D:=_dsp ?};
      VPOZ.KNAG:=0;
      VPOZ.OKRVAT:=DOK.OKRVAT;
      VPOZ.OKR_C:=VPOZ.OKR_Z:=null;
      VPOZ.Z:='';
      {? _b<>1 & _b<>3
      || VPOZ.NETTO:=-VPOZ.NETTO; VPOZ.VAT:=-VPOZ.VAT; VPOZ.BRUTTO:=-VPOZ.BRUTTO;
         VPOZ.CLO:=-VPOZ.CLO; VPOZ.WCLO:=-VPOZ.WCLO; VPOZ.AKCYZA:=-VPOZ.AKCYZA;
         VPOZ.KOS:=-VPOZ.KOS; VPOZ.VAT_ODL:=-VPOZ.VAT_ODL; VPOZ.VATKOSZT:=-VPOZ.VATKOSZT;
         VPOZ.WARW:=-VPOZ.WARW;
         VPOZ.NETTO_W:=-VPOZ.NETTO_W;
         VPOZ.VAT_W:=-VPOZ.VAT_W;
         VPOZ.BRUTTO_W:=-VPOZ.BRUTTO_W
      ?};
      GR_VAT.cntx_psh();
      _gr_kod:=VPOZ.GRVAT().KOD;
      GR_VAT.index('REJ_KOD'); GR_VAT.prefix(DOK.REJ,_gr_kod);
      {? GR_VAT.first & GR_VAT.KOD=_gr_kod
      || VPOZ.GRVAT:=GR_VAT.ref()
      || VPOZ.GRVAT:=null
      ?};
      GR_VAT.cntx_pop();
      _rvat:=VPOZ.RVAT().RVAT().SYM;
      {? vv
      || VPOZ.RVAT:=VPOZ.DOK().RVAT
      || VAT_REJ.cntx_psh();
         VAT_REJ.index(_ind);
         VAT_REJ.prefix(DOK.REJ,_rvat,);
         {? VAT_REJ.first
         || VPOZ.RVAT:=VAT_REJ.ref
         || VPOZ.RVAT:=VPOZ.DOK().RVAT
         ?};
         VAT_REJ.cntx_pop()
      ?};
      {? VPOZ.add()
      || VROZ.use('povr'+rok+form(okr,-2)); VROZ.index('VROZ'); VROZ.prefix(_v_ref);
         {? VROZ.first()
         || {!
            |? VROZ.cntx_psh();
               VROZ.use('povr'+SSTALE.AR().KOD+form(SSTALE.AO().NR,-2));
               VROZ.index('VROZ'); VROZ.prefix();
               VROZ.VPOZ:=VPOZ.ref();
               {? _b<>1 & _b<>3 || VROZ.KW:=-VROZ.KW ?};
               VROZ.add();
               VROZ.cntx_pop();
               VROZ.next()
            !}
         ?};
         {? var_pres('TmpPV')>0
         || TmpPV.add($_v_ref,$VPOZ.ref())
         ?}
      ?};
      VPOZ.cntx_pop();
      VPOZ.next()
   !}
?};
VPOZ.cntx_pop(); VROZ.cntx_pop();
VAT_REJ.ndx_drop(_ind)


\utw_fak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.62]
:: OPIS: Utworzenie pozycji faktur importowych dokumentu (tabela FAK)
::   WE: _a - ref DOK
::       _b=-1 - Storno wybranego dokumentu (na minus)
::       _b=2 - Storno wybranego dokumentu (zm. stron)
::       _b=1 - Kopia wybranego dokumentu
::       _b=3 - Przeniesienie wybranego dokumentu do innego okresu
::  OLD: \utw_fak/storno.fml
::----------------------------------------------------------------------------------------------------------------------
exec('open','fks_ved',rok,okr);
FAK.index('FAK');
FAK.prefix(dok);
{? FAK.first()
|| {!|? FAK.cntx_psh();
        exec('open','fks_ved',SSTALE.AR().KOD,SSTALE.AO().NR);
        FAK.prefix();
        FAK.DOK:=_a;
        {? _b<>1 & _b<>3 || FAK.WAR:=-FAK.WAR; FAK.WARW:=-FAK.WARW ?};
        FAK.add();
        FAK.cntx_pop();
        FAK.next()
   !}
?}


\utw_skxd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Przenosi podzialy kontrolingowe
::  OLD: \utw_skxd/storno.fml
::----------------------------------------------------------------------------------------------------------------------
SKIDXD.use('skxd'+rok+form(okr,-2));
SKIDXD.index('DOK'); SKIDXD.prefix(dok);
{? SKIDXD.first()
|| {! |?
     SKIDXD.cntx_psh(); SKIDXD.use('skxd'+SSTALE.AR().KOD+form(SSTALE.AO().NR,-2));
     DOK.cntx_psh(); DOK.use('doku'+SSTALE.AR().KOD+form(SSTALE.AO().NR,-2));
     POZ.cntx_psh(); POZ.use('pozy'+SSTALE.AR().KOD+form(SSTALE.AO().NR,-2));
     SKIDXD.prefix(); SKIDXD.DOK:=_a;
     {? _b<>1 & _b<>3 || SKIDXD.WART:=-SKIDXD.WART; SKIDXD.WARTW:=-SKIDXD.WARTW ?};
     SKIDXD.add();
     SKIDXD.cntx_pop(); DOK.cntx_pop(); POZ.cntx_pop();
     SKIDXD.next()
   !}
?}


\bz_pozk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: kopiuje ML_BZAD z POZ do POZ
::   WE: _a - POZ.ref OLD, _b - POZ.ref NEW
::       _c=-1 - Storno wybranego dokumentu (na minus)
::       _c=2 - Storno wybranego dokumentu (zm. stron)
::       _c=1 - Kopia wybranego dokumentu
::  OLD: \bz_pozk/ml_zad.fml
::----------------------------------------------------------------------------------------------------------------------
_rok_f:=SSTALE.AR;
ROK_F.cntx_psh(); OKRO_F.cntx_psh();  ROK_F.prefix(); OKRO_F.index('ROK');OKRO_F.prefix();
{? ROK_F.seek(_rok_f) & OKRO_F.seek(SSTALE.AO)
|| ML_BZAD.index('MLBZP');
   ML_BZAD.prefix(_a);
   {? ML_BZAD.first
   || {!|?
         ML_BZAD.cntx_psh();
         ML_BZAD.POZ:=_b;
         ML_BZAD.OKR:=OKRO_F.ref();
         ML_BZAD.ODD:=ML_BZAD.POZ().ODD;
         {? _c=-1
         || ML_BZAD.WN:=ML_BZAD.WN*_c;
            ML_BZAD.MA:=ML_BZAD.MA*_c
         |? _c=2
         || _wn:=ML_BZAD.WN;
            ML_BZAD.WN:=ML_BZAD.MA;
            ML_BZAD.MA:=_wn
         ?};
         ML_BZAD.clear;
         _wyn:=ML_BZAD.add(1);
         {? ~_wyn
         || FUN.info('Błąd dodania pozycji.'@)
         ?};
         ML_BZAD.cntx_pop();
         ML_BZAD.next
      !}
   ?}
|| FUN.info('Nie znaleziono roku.'@);
   _wyn:=0
?};
ROK_F.cntx_pop(); OKRO_F.cntx_pop();
1


\auto_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Wywolanie automatu korzystajacego z wartosci pozycji biezacego dokumentu
::   WE: - _a =  0 - dodekretowanie brakujacych kwot,
::         _a <> 0 - dodekretowanie brakujacych kwot i zmniejszenie zbyt duzych na minus
::         _b = 0  - automat do róznic kursowych
::         _b = 1  - automat do przeksiegowania 5 na 4
::   WY: 0
::  OLD: \auto_poz/auto_poz.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=1 || _b:=0 ?};
tym_poz:=POZ.ndx_tmp('',1,'DOK',,0,'KON',,0,'ID',,0,'ID',,0);
{? var_pres('SD_OB')<100 || SD_OB:=obj_new(@.CLASS.SD_CLASS,'F') ?};
exec('def_met','fks_auto');
POZ.cntx_psh(); SLO.cntx_psh; SLU.cntx_psh;
FORM.index('AUTOKSIE');
FORM.prefix(AUTOKSIE.ref);
{? FORM.first()
|| {! |?
      _kwota:=0;
      _mtxt:=FORM.MASKA;
      {? AUTOKSIE.TYP='D'
      || SKIDXD.index('DOK');
         {? FORM.PBUD
         || SKIDXD.prefix(DOK.ref(),FORM.PBUD,FORM.SKID_MB)
         || SKIDXD.prefix(DOK.ref())
         ?};
         {? SKIDXD.first()
         || {! |?
               _kwota:=exec('evalform','dok_fks');
               _wn:={? FORM.KWN<>'' || ($(FORM.KWN))() || '' ?};
               _ma:={? FORM.KMA<>'' || ($(FORM.KMA))() || '' ?};
               SKIDXDUD.index('POZ'); SKIDXDUD.prefix(SKIDXD.PBUD);
               {? SKIDXDUD.first()
               || {? _wn<>''
                  || {? SD_OB.DEK_OBJ.czy_wal(_wn) & SKIDXD.WAL<>FINFO.NAROD
                     || _jedn:=exec('jed_wal','waluty',SKIDXD.WAL().KOD);
                        SD_OB.DEK_OBJ.run3(_kwota,_wn,'','',date(0,0,0),date(0,0,0),'',
                           SKIDXD.WAL().KOD,(_jedn*_kwota/SKIDXD.KURS)$2,SKIDXD.KURS);
                        SD_OB.dek2tmp('Wn')
                     || SD_OB.DEK_OBJ.run3(_kwota,_wn);
                        SD_OB.dek2tmp('Wn')
                     ?}
                  ?};
                  {? _ma<>''
                  || {? SD_OB.DEK_OBJ.czy_wal(_ma) & SKIDXD.WAL<>FINFO.NAROD
                     || _jedn:=exec('jed_wal','waluty',SKIDXD.WAL().KOD);
                        SD_OB.DEK_OBJ.run3(_kwota,_ma,'','',date(0,0,0),date(0,0,0),'',
                           SKIDXD.WAL().KOD,(_jedn*_kwota/SKIDXD.KURS)$2,SKIDXD.KURS);
                        SD_OB.dek2tmp('Ma')
                     || SD_OB.DEK_OBJ.run3(_kwota,_ma);
                        SD_OB.dek2tmp('Ma')
                     ?}
                  ?}
               ?};
               SKIDXD.next()
            !}
         ?}
      |? AUTOKSIE.TYP='K'
      || exec('crskxdop','fks_auto')
      |? +_mtxt>0
      || _mstop:=+_mtxt; _mstart:=1;
         {! |? (_mstop>0) & ( (((_mstop-1)-_mtxt)+1<>'?') & (((_mstop-1)-_mtxt)+1<>'!') )
         |! _mstop-=1 !};
         {? _mstop=0 || _mstop:=+_mtxt+1 ?};
         {! |? (_mstart<=_mstop) & (1+((_mstart-1)-_mtxt)<>'?') & (1+((_mstart-1)-_mtxt)<>'!')
         |! _mstart+=1
         !};
         SLU.index('NAZ');
         SLU.prefix();
         {? SLU.find_key('WALUTY')
         || SLO.index('SL');SLO.prefix(SLU.ref);
            {? SLO.first
            || {! |?
               POZ.index('D_KON');
               POZ.prefix(DOK.ref(),SLO.ref,(_mstart-1)+_mtxt);
               {? POZ.first()
               || {! |?
                     {? exec('dopasuj','fks_auto',_mtxt,_mstart,_mstop,POZ.KON)<>''
                     || exec('evalform','dok_fks');
                        _kwota:=POZ.SUM;
                        _wn:=($(FORM.KWN))(); _ma:=($(FORM.KMA))();
                        {? _wn<>''
                        || {? SD_OB.DEK_OBJ.czy_wal(_wn)
                           || set_virt(SD_OB,'opt_is',"0");
                              _jedn:=exec('jed_wal','waluty',POZ.WAL().KOD);
                              SD_OB.DEK_OBJ.run3(_kwota,_wn,'','',date(0,0,0),date(0,0,0),'',
                                 POZ.WAL().KOD,(_jedn*_kwota/POZ.KURS)$2,POZ.KURS);
                              SD_OB.dek2tmp('Wn')
                           || set_virt(SD_OB,'opt_is',"1");
                              SD_OB.DEK_OBJ.run3(_kwota,_wn);
                              SD_OB.dek2tmp('Wn')
                           ?}
                        ?};
                        {? _ma<>''
                        || {? SD_OB.DEK_OBJ.czy_wal(_ma)
                           || set_virt(SD_OB,'opt_is',"0");
                              _jedn:=exec('jed_wal','waluty',POZ.WAL().KOD);
                              SD_OB.DEK_OBJ.run3(_kwota,_ma,'','',date(0,0,0),date(0,0,0),'',
                                 POZ.WAL().KOD,(_jedn*_kwota/POZ.KURS)$2,POZ.KURS);
                              SD_OB.dek2tmp('Ma')
                           || set_virt(SD_OB,'opt_is',"1");
                              SD_OB.DEK_OBJ.run3(_kwota,_ma);
                              SD_OB.dek2tmp('Ma')
                           ?}
                        ?}
                     ?};
                     POZ.next()
                  !}
               ?};
               SLO.next
               !}
            ?}
         ?};
         POZ.prefix(DOK.ref(),null,(_mstart-1)+_mtxt);
         {? POZ.first()
         || set_virt(SD_OB,'opt_is',"1");
            {! |?
            {? exec('dopasuj','fks_auto',_mtxt,_mstart,_mstop,POZ.KON)<>''
            || _kwota:=exec('evalform','dok_fks');
               _wn:=($(FORM.KWN))(); _ma:=($(FORM.KMA))();
               {? _wn<>''|| SD_OB.DEK_OBJ.run3(_kwota,_wn); SD_OB.dek2tmp('Wn') ?};
               {? _ma<>''|| SD_OB.DEK_OBJ.run3(_kwota,_ma); SD_OB.dek2tmp('Ma') ?}
            ?};
            POZ.prefix(DOK.ref(),null,POZ.KON);
            POZ.last();
            POZ.prefix(DOK.ref(),null,(_mstart-1)+_mtxt);
            POZ.next()
            !}
         ?}
      || exec('evalform','dok_fks')
      ?};
      FORM.next()
   !};
   _ip:=POZ.ndx_tmp('',0,'DOK',,0,'KON',,0,'WAL','KOD',0,'STR',,0,'KURS',,0);
   _it:=TMPPOZ.ndx_tmp('',0,'KON',,0,'WAL',,0,'STR',,0,'KURS',,0);
   TMPPOZ.prefix();
   {? TMPPOZ.first()
   || {! |?
         {? TMPPOZ.SUM$2<>0
         || _wal:=null;
            {? +TMPPOZ.WAL & SD_OB.DEK_OBJ.czy_wal(TMPPOZ.KON)
            || SLU.cntx_psh(); SLO.cntx_psh();
               {? FINFO.SLWAL
               || SLO.index('SL'); SLO.prefix(FINFO.SLWAL().SLU);
                  {? SLO.find_key(TMPPOZ.WAL) || _wal:=SLO.ref(); _jedn:=exec('jed_wal','waluty',SLO.KOD) ?}
               ?};
               SLU.cntx_pop(); SLO.cntx_pop();
               F.dwn:=F.dma:=_pozwn:=_pozma:=_twn:=_tma:=0;
               {? _b & +TMPPOZ.WAL
               || TMPPOZ.cntx_psh;
                  TMPPOZ.index(_it);
                  TMPPOZ.prefix(TMPPOZ.KON,TMPPOZ.WAL,TMPPOZ.STR,TMPPOZ.KURS);
                  {? TMPPOZ.first
                  || {!|? {? 1+TMPPOZ.STR='W' || _twn+=TMPPOZ.SUM || _tma+=TMPPOZ.SUM ?};
                          TMPPOZ.next()
                     !}
                  ?};
                  TMPPOZ.cntx_pop;

                  POZ.cntx_psh;
                  POZ.index(_ip);
                  POZ.prefix(DOK.ref,TMPPOZ.KON,TMPPOZ.WAL,TMPPOZ.STR);
                  {? POZ.first
                  || {! |? {? POZ.KURS$6=TMPPOZ.KURS$6
                           || {? 1+TMPPOZ.STR='W' || _pozwn+=POZ.SUM || _pozma+=POZ.SUM ?}
                           ?};
                           POZ.next
                     !}
                  ?};
                  POZ.cntx_pop
               || POZ.cntx_psh(); POZ.index('D_KON');
                  POZ.prefix(DOK.ref,_wal,TMPPOZ.KON,TMPPOZ.ID,);
                  {? POZ.first()
                  || {!|? {? TMPPOZ.KURS$6=POZ.KURS$6
                          || {? 1+POZ.STR='W' || F.dwn+=POZ.SUM || F.dma+=POZ.SUM ?}
                          ?};
                          POZ.next()
                     !}
                  ?};
                  POZ.cntx_pop()
               ?}
            || F.PObr(TMPPOZ.KON,_wal,TMPPOZ.ID)
            ?};
            POZ.index('DOK'); POZ.prefix(DOK.ref);
            SD_OB.Lp:={? POZ.last() || POZ.POZ ?} + 1;
            {? +TMPPOZ.WAL
            || _k:={? TMPPOZ.STR='W' || F.dwn || F.dma ?}
            || _k:={? TMPPOZ.STR='W' || F.wn || F.ma ?}
            ?};
            {? _k$2<>0
            || TMPWYR.prefix(#TMPPOZ.ref); {? TMPWYR.first() || {! |? TMPWYR.del !} ?}
            ?};
            {? TMPPOZ.RK='T'|| TMPPOZ.WAL:=''; TMPPOZ.put() ?};
            {? _b & +TMPPOZ.WAL
            || {? (1+TMPPOZ.STR='W' & _pozwn<>_twn)
               || TMPPOZ.SUMW:=(_jedn*(_twn$2-_pozwn$2)/TMPPOZ.KURS)$2;
                  SD_OB.one2poz(_twn$2-_pozwn$2)
               |?  _pozma<>_tma
               || TMPPOZ.SUMW:=(_jedn*(_tma$2-_pozma$2)/TMPPOZ.KURS)$2;
                  SD_OB.one2poz(_tma$2-_pozma$2)
               || TMPPOZ.next()
               ?}
            || {? (TMPPOZ.SUM$2-_k$2>0 & _a=0) | (TMPPOZ.SUM$2-_k$2<>0 & _a<>0)
               || SD_OB.one2poz(TMPPOZ.SUM$2-_k$2)
               || TMPPOZ.next()
               ?}
            ?}

         || TMPPOZ.next()
         ?}
      !}
   ?}
?};
POZ.index('DOK'); POZ.prefix(DOK.ref());
exec('suma_dok','dok_fks');
POZ.cntx_pop();SLO.cntx_pop; SLU.cntx_pop;
POZ.ndx_drop;
{? var_pres('wyb') || wyb:=0 ?};
obj_del(SD_OB); &tym_poz;
0


\dopasuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Dopasowanie symbolu konta analitycznego do podanej maski
::   WE: - _a - maska
::         _b - od ktorego znaku maski sprawdzac
::         _c - do ktorego znaku maski sprawdzac
::         _d - konto do porównania
::   WY: fragment konta zgodny z maska
::  OLD: \dopasuj/auto_poz.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1; _g:='';
{!|?
     {? _d<>''
     || {? exec('eqm','dok_fks',_d,_a,_b,_c)
        || _g:='';  _ok:=0;
           {! _i:=_b..(+_a) |! {? 1+((_i-1)-_a)='!' || _g:=_g+(1+((_i-1)-_d)) ?} !};0
        || 0
        ?}
     ?}
!};
{? _ok || _g:=''; Ostatnie:=1 ?};
_g


\def_met
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Ustawienie metod wirtualnych obiektu SD_OB do dekretacji automatow
::       wykorzystujacych wartosci pozycji aktualnego dokumentu
::  OLD: \def_met/auto_poz.fml
::----------------------------------------------------------------------------------------------------------------------
set_virt(SD_OB,'opt_is',
    "1
    ");

set_virt(SD_OB,'opt_wyr',
    "{? AUTOKSIE.TYP='D' & .DEK_OBJ.czy_wal(.DEK_OBJ.KONTO)
     || SKIDXD.WAL().KOD+form(SKIDXD.KURS,10,6)
     || ''
     ?}
    ");

set_virt(SD_OB,'wyr_be',
    "SKID_WYR.index('SLU');
     SKID_WYR.prefix(REF.FIRMA,'FORM',FORM.name,#FORM.ref,_a)
    ")


\crskxdop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Automat do tworzenia SKIDXD na podstawie POZ z optymalizacja
::  OLD: \crskxdop/auto.fml
::----------------------------------------------------------------------------------------------------------------------
FORM.index('AUTOKSIE');
FORM.prefix(AUTOKSIE.ref());
{? FORM.first()
|| echo('Trwa obliczanie formuły...'@);
   POZ.cntx_psh();
   UD_TYP.index('SYMBOL'); UD_SKL.index('SYMBOL');
   SKIDXD.index('DOK'); SKIDXD.prefix(DOK.ref());
   {? SKIDXD.first()
   || _ch:=FUN.choice('Istnieją już zapisy w tabeli podziałów dla controllingu.'@,,
                      'Usunąć istniejące'@,'Dopisać po ostatnim'@)
   || _ch:=2
   ?};
   {? _ch=1 || {! |? SKIDXD.del() !} ?};
   {? _ch
   || do();
      TT_SKXD:=tab_tmp(3,'JORG','STRING[16]',,'OKOSZ','STRING[16]',,'PBUD','STRING[16]',,
         'WART','REAL',,'WAL','STRING[3]',,'WARTW','REAL',,'KURS','REAL',,'AN','STRING[35]',);
      _ndx:=TT_SKXD.ndx_tmp(,1,'JORG',,,'OKOSZ',,,'PBUD',,,'PBUD',,);
      TT_SKXD.index(_ndx);
      {! |?
         _vkon:=FORM.MASKA;
         {? POZ.first()
         || {! |?
               {? exec('comp_an','dok_fks',_vkon,POZ.KON)
               || _jorg:={? FORM.JORG_SF='S' || FORM.JORG_S || ($FORM.JORG_F)() ?};
                  _okosz:={? FORM.OKOSZ_SF='S' || FORM.OKOSZ_S || ($FORM.OKOSZ_F)() ?};
                  _pbud:={? FORM.PBUD_SF='S' || FORM.PBUD_S || ($FORM.PBUD_F)() ?};
                  _str:=''; _wald:=0;
                  UD_TYP.prefix('POZ_BUD','POZ_BUD');
                  {? UD_TYP.first()
                  || UD_SKL.prefix(UD_TYP.ref(),_pbud,_pbud);
                     {? UD_SKL.first()
                     || SKIDXDUD.index('POZ'); SKIDXDUD.prefix(UD_SKL.ref());
                        {? SKIDXDUD.first()
                        || _str:=SKIDXDUD.STR; {? SKIDXDUD.WSK_WAL='T' || _wald:=1 ?}
                        ?}
                     ?}
                  ?};
                  {? +_str
                  || {? TT_SKXD.prefix(_jorg,_okosz,_pbud,_pbud); TT_SKXD.first()
                     || _r:=1;
                        {! |?
                           {? (~POZ.WAL & TT_SKXD.WAL=FINFO.NAROD().KOD) | ~_wald || _r:=0
                           |? POZ.WAL & TT_SKXD.WAL=POZ.WAL().KOD & TT_SKXD.KURS=POZ.KURS & _wald || _r:=0
                           ?};
                           _r & TT_SKXD.next()
                        !};
                        {? _r
                        || TT_SKXD.JORG:=_jorg; TT_SKXD.OKOSZ:=_okosz; TT_SKXD.PBUD:=_pbud;
                           TT_SKXD.WART:={? POZ.STR=_str || POZ.SUM || -POZ.SUM ?};
                           {? POZ.WAL & _wald
                           || TT_SKXD.WAL:=POZ.WAL().KOD; TT_SKXD.KURS:=POZ.KURS;
                              TT_SKXD.WARTW:={? POZ.STR=_str || POZ.SUMW || -POZ.SUMW ?}
                           || TT_SKXD.WAL:=FINFO.NAROD().KOD; TT_SKXD.WARTW:=TT_SKXD.KURS:=0
                           ?}; TT_SKXD.add()
                        || {? POZ.STR=_str || TT_SKXD.WART+=POZ.SUM || TT_SKXD.WART-=POZ.SUM ?};
                           {? POZ.WAL & _wald
                           || {? POZ.STR=_str || TT_SKXD.WARTW+=POZ.SUMW || TT_SKXD.WARTW-=POZ.SUMW ?}
                           ?};
                           TT_SKXD.put()
                        ?}
                     || TT_SKXD.JORG:=_jorg; TT_SKXD.OKOSZ:=_okosz; TT_SKXD.PBUD:=_pbud;
                        TT_SKXD.WART:={? POZ.STR=_str || POZ.SUM || -POZ.SUM ?};
                        {? POZ.WAL & _wald
                        || TT_SKXD.WAL:=POZ.WAL().KOD; TT_SKXD.KURS:=POZ.KURS;
                           TT_SKXD.WARTW:={? POZ.STR=_str || POZ.SUMW || -POZ.SUMW ?}
                        || TT_SKXD.WAL:=FINFO.NAROD().KOD; TT_SKXD.WARTW:=TT_SKXD.KURS:=0
                        ?}; TT_SKXD.add()
                     ?}
                  ?}
               ?};
               POZ.next()
            !}
         ?};
         FORM.next()
      !};
      TT_SKXD.prefix();
      {? TT_SKXD.first()
      || {! |?
            SKIDXD.clear(); SKIDXD.blank();
            UD_TYP.prefix('PODZORG','PODZORG');
            {? UD_TYP.first()
            || UD_SKL.prefix(UD_TYP.ref(),TT_SKXD.JORG,TT_SKXD.JORG);
               {? UD_SKL.first() || SKIDXD.JORG:=UD_SKL.ref() ?}
            ?};
            UD_TYP.prefix('OB_KOSZ','OB_KOSZ');
            {? UD_TYP.first()
            || UD_SKL.prefix(UD_TYP.ref(),TT_SKXD.OKOSZ,TT_SKXD.OKOSZ);
               {? UD_SKL.first() || SKIDXD.OKOSZ:=UD_SKL.ref() ?}
            ?};
            UD_TYP.prefix('POZ_BUD','POZ_BUD');
            {? UD_TYP.first()
            || UD_SKL.prefix(UD_TYP.ref(),TT_SKXD.PBUD,TT_SKXD.PBUD);
               {? UD_SKL.first() || SKIDXD.PBUD:=UD_SKL.ref() ?}
            ?};
            SKIDXD.WART:=TT_SKXD.WART;
            _wal:=null; SLU.cntx_psh(); SLO.cntx_psh();
            {? +TT_SKXD.WAL & FINFO.SLWAL
            || SLO.index('SL'); SLO.prefix(FINFO.SLWAL().SLU);
               {? SLO.find_key(TT_SKXD.WAL) || _wal:=SLO.ref() ?}
            ?};
            SLU.cntx_pop(); SLO.cntx_pop();
            SKIDXD.WAL:=_wal;
            SKIDXD.WARTW:=TT_SKXD.WARTW;
            SKIDXD.KURS:=TT_SKXD.KURS;
            SKIDXD.JM:=null;
            SKIDXD.AN:='';
            SKIDXD.GEN_AUT:='N';
            SKIDXD.add();
            TT_SKXD.next()
         !}
      ?};
      VAR_DEL.delete('TT_SKXD');
      end()
   ?};
   POZ.cntx_pop();
   echo()
?};
{? var_pres('wyb') || wyb:=0 ?}; 0


\plobr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Obroty pozycji
::  OLD: \plobr/auto_poz.fml
::----------------------------------------------------------------------------------------------------------------------
wn:=ma:=0;
POZ.cntx_psh(); POZ.index(tym_poz);
POZ.prefix(DOK.ref,_a);
{? POZ.first()
|| {! |?
         {? POZ.WAL=_b
         || {? 1+POZ.STR='W'
            || wn+=POZ.SUM$2
            || ma+=POZ.SUM$2
            ?}
         ?};
         POZ.next
   !}
?};
POZ.cntx_pop()


\utw_pozf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [12.41]
:: OPIS: Utworzenie pozycji faktur dokumentu (tabela POZF)
::   WE: _a - ref DOK
::       _b=-1 - Storno wybranego dokumentu (na minus)
::       _b=2 - Storno wybranego dokumentu (zm. stron)
::       _b=1 - Kopia wybranego dokumentu
::       _b=3 - Przeniesienie wybranego dokumentu do innego okresu
:: OLD: \utw_pozf/storno.fml
::----------------------------------------------------------------------------------------------------------------------
exec('open','fks_ved',rok,okr);
POZF.index('DOK');
POZF.prefix(dok);
DOK.cntx_psh();
{? DOK.seek(_a,ref_name(_a)) & DOK.DSP_WPZF='N' || _dspzgod:=1; _dsp:=DOK.DOP || _dspzgod:=0; _dsp:=date(0,0,0) ?};
DOK.cntx_pop();
{? POZF.first()
|| {!
   |? _memo:=POZF.memo_txt(,1,'UWAGI');
      POZF.cntx_psh();
      exec('open','fks_ved',SSTALE.AR().KOD,SSTALE.AO().NR);
      POZF.prefix();
      POZF.DOK:=_a;
      {? _b<>1 & _b<>3
      || POZF.IL:=-POZF.IL;
         POZF.WN:=-POZF.WN;
         POZF.WV:=-POZF.WV;
         POZF.WB:=-POZF.WB;
         POZF.RABAT:=-POZF.RABAT
      ?};
      {? _dspzgod || POZF.DT:=_dsp ?};
      POZF.add();
      {? _memo<>''
      || POZF.memo_set(_memo,'UWAGI');
         POZF.memo_put(,'UWAGI')
      ?};
      POZF.cntx_pop();
      POZF.next()
   !}
?}


\spr_pare
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.51]
:: OPIS: Sprawdza poprawność wypełnienia okienka EURO zmiennej ROZNE
::  OLD: \spr_par/euro.fml
::----------------------------------------------------------------------------------------------------------------------
_a:='';
{? ROZNE.WAL<>null & ~exec('czy_nar','waluty',ROZNE.WAL().KOD,1)
|| _a:='WAL'
?};
{? _a='' & ROZNE.KONTO=''
|| FUN.info('Należy wprowadzić konto rozliczeń.'@); _a:='KONTO'
|| {? exec('akc_kont','edkonto',ROZNE.KONTO)
   || FUN.info('Niewłaściwy symbol konta.'@); _a:='KONTO'
   ?}
?};
_a


\euro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.51]
:: OPIS: Funkcja sterująca do utworzenia automatycznych dekretów do przeksięgowania obrotów kont w walutach
::       z unii walutowej na walutę EURO
::  OLD: \euro/euro.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh(); SLO.index('SL'); SLO.prefix(FINFO.SLWAL().SLU,'EUR');
ile_ks:=0;
AN.cntx_psh(); AN.index('WALSYM');
w:=obj_new(4);
{? ROZNE.WAL<>null
|| SLO.prefix(FINFO.SLWAL().SLU,ROZNE.WAL().KOD)
|| SLO.prefix(FINFO.SLWAL().SLU)
?};
{? SLO.first()
|| {! |?
      {? exec('czy_nar','waluty',SLO.KOD,0)
      || SLO.cntx_psh();
         AN.prefix(SLO.ref,ROZNE.PREFIX);
         {? AN.first()
         || {! |?
               {? AN.STAN='N'
               || echo('Waluta: %1 Konto: %2'@[SLO.KOD,AN.SYM]);
                  {! _i:=1..4 |! w[_i]:=0 !};
                  exec('rozrach','fks_auto',DOK.ODD,date(DOK.DTW~1,DOK.DTW~2,0));
                  exec('obroty','fks_auto',DOK.ODD);
                  {? (w[3]$2<>w[4]$2 & w[1]$2=0 & w[2]$2=0) |
                     (w[1]$2<>w[3]$2 | w[2]$2<>w[4]$2)
                  || exec('zapisy','fks_auto',DOK.ODD)
                  ?}
               ?};
               AN.next()
            !}
         ?};
         SLO.cntx_pop()
      ?};
      SLO.next()
   !}
?};

AN.cntx_pop();
echo();
{? ile_ks=0 || FUN.info('Brak obrotów kont i rozrachunków do przeksięgowania.'@) ?};
VAR_DEL.delete('w','ile_ks');
SLO.cntx_pop()


\rozrach
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.51]
:: OPIS: Funkcja tworzy automatyczne dekrety do przeksięgowania sald rozrachunków w walucie SLO.KOD na walutę EURO
::   WE: _a - jednostka księgowa
::       _b - data naliczenia obrotów dla rozrachunków
::  OLD: \rozrach/euro.fml
::----------------------------------------------------------------------------------------------------------------------
OP.cntx_psh(); OP.index('KON_O'); OP.prefix(SLO.ref(),_a,AN.SYM);
ZAP_OP.cntx_psh(); ZAP_OP.index('OP');
{? OP.first()
|| {! |?
      echo('Waluta: %1 Konto: %2 Identyfikator: %3'@[SLO.KOD,AN.SYM,OP.SYM]);
      F.RObr(OP.ref(),_b);
      w[1]+=F.rwn$2; w[2]+=F.rma$2;
      {? F.rwn$2<>F.rma$2
      || _w:=_m:=0;
         ZAP_OP.prefix(OP.ref());
         POZ.cntx_psh();
         AN.cntx_psh();
         {? ZAP_OP.first
         || _okr:=ZAP_OP.OKRO;
            {? ZAP_OP.OKRO<>SSTALE.AO || exec('zapopuse','rozrach',1) ?};
            {! |?
               {? ZAP_OP.DATA<=_b
               || {? ZAP_OP.OKRO<>_okr
                  || exec('zapopuse','rozrach',1);
                     _okr:=ZAP_OP.OKRO
                  ?};
                  ZAP_OP.POZDOK();
                  {? 1+POZ.STR='W'|| _w+=POZ.SUM || _m+=POZ.SUM ?}
               ?};
               ZAP_OP.next()
            !};
            {? _okr<>SSTALE.AO || exec('zapopuse','rozrach',0) ?}
         ?};
         POZ.cntx_pop(); AN.cntx_pop();
         {? (_w$2>_m$2 & F.rwn$2>F.rma$2) | (_w$2<_m$2 & F.rwn$2<F.rma)
         || exec('utw_poze','fks_auto',_w,_m,F.rwn,F.rma,OP.SYM,OP.TYP,OP.DO,OP.TZ,DOK.DTW)
         || FUN.info('Dla rozrachunku: %1 na koncie: %2'
                     '\npozycja dekretu nie zostanie utworzona.\n'
                     'Wystąpiła niezgodność stron sald w walucie %3 i PLN.'@[OP.SYM,OP.AN,SLO.KOD])
         ?}
      ?};
      OP.next()
   !}
?};
OP.cntx_pop(); ZAP_OP.cntx_pop()


\utw_poze
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.51]
:: OPIS: Funkcja tworzy pozycje dekretu
::   WE: _a - obroty Wn w PLN
::       _b - obroty Ma w PLN
::       _c - obroty Wn w walucie
::       _d - obroty Ma w walucie
::       _e - identyfikator rozrachunku
::       _f - typ rozrachunku
::       _h - data otwarcia rozrachunku
::       _i - termin platnosci rozrachunku
::  OLD: \utw_poz/euro.fml
::----------------------------------------------------------------------------------------------------------------------
ile_ks+=1;
_t:='przeliczenie '+SLO.KOD+' na EURO';
{? _c$2>_d$2
|| exec('poz_add','dekret_aut',-F.SWn(_a,_b),'Wn',AN.SYM,_e,_f,_g,_h,
   _t,SLO.KOD,-F.SWn(_c,_d),0,'FORM',_i);
   exec('poz_add','dekret_aut',-F.SWn(_a,_b),'Ma',ROZNE.KONTO,'','',
   date(0,0,0),date(0,0,0),_t,'',0)
|| exec('poz_add','dekret_aut',-F.SMa(_a,_b),'Ma',AN.SYM,_e,_f,_g,_h,
   _t,SLO.KOD,-F.SMa(_c,_d),0,'FORM',_i);
   exec('poz_add','dekret_aut',-F.SMa(_a,_b),'Wn',ROZNE.KONTO,'','',
   date(0,0,0),date(0,0,0),_t,'',0)
?};
_c:=(_c/exec('euro_krs','dok_fks',SLO.KOD))$2;
_d:=(_d/exec('euro_krs','dok_fks',SLO.KOD))$2;
_konto:={? AN.SYM*SLO.KOD>0 || exec('eur_kont','%fks_vat',SLO.KOD) || AN.SYM ?};
{? _c$2>_d$2
|| exec('poz_add','dekret_aut',F.SWn(_a,_b),'Wn',_konto,_e,_f,_g,_h,_t,'EUR',F.SWn(_c,_d),0,'FORM',_i);
   exec('poz_add','dekret_aut',F.SWn(_a,_b),'Ma',ROZNE.KONTO,'','',date(0,0,0),date(0,0,0),_t,'',0)
|| exec('poz_add','dekret_aut',F.SMa(_a,_b),'Ma',_konto,_e,_f,_g,_h,_t,'EUR',F.SMa(_c,_d),0,'FORM',_i);
   exec('poz_add','dekret_aut',F.SMa(_a,_b),'Wn',ROZNE.KONTO,'','',date(0,0,0),date(0,0,0),_t,'',0)
?}


\obroty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.51]
:: OPIS: Obliczenie na w[3], w[4] obrotów konta AN.SYM w walucie
::   WE: _a - jednostka księgowa
::  OLD: \obroty/euro.fml
::----------------------------------------------------------------------------------------------------------------------
OBR.cntx_psh(); OBR.index('OKR');
{! _i:=0..SSTALE.AO().NR
|! OBR.prefix(_i,AN.ref(),_a);
   {? OBR.first() || w[3]+=OBR.WN$2; w[4]+=OBR.MA$2 ?}
!};
OBR.cntx_pop()


\zapisy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.51]
:: OPIS: Funkcja tworzy automatyczne dekrety do przeksięgowania sald konta AN.SYM w walucie SLO.KOD na walutę EURO
::   WE: _a - jednostka księgowa
::  OLD: \zapisy/euro.fml
::----------------------------------------------------------------------------------------------------------------------
OBR.cntx_psh();
_w:=_m:=_ww:=_wm:=0;
POZ.cntx_psh(); DOK.cntx_psh();
{! _i:=0..SSTALE.AO().NR
|! OBR.index('OKR'); OBR.prefix(_i,AN.ref(),_a);
   {? OBR.first()
   || echo('Waluta: %1 Konto: %2 Okres: %3/%4'@[SLO.KOD,AN.SYM,form(_i,-2),SSTALE.AR().NAZ]);
      exec('open','fks_auto',SSTALE.AR().KOD+form(_i,-2));
      POZ.index('ROZR'); POZ.prefix(null,'T',AN.SYM,'','');
      {? POZ.first()
      || {! |?
            {? POZ.DOK().ZP='T'
            || {? 1+POZ.STR='W'
               || _ww+=POZ.SUMW;_w+=POZ.SUM
               || _wm+=POZ.SUMW;_m+=POZ.SUM
               ?}
            ?};
            POZ.next()
         !}
      ?}
   ?}
!};
exec('open','fks_auto',SSTALE.AR().KOD+form(SSTALE.AO().NR,-2));
POZ.cntx_pop(); DOK.cntx_pop();
{? _ww$2<>_wm$2
|| {? (_w$2>=_m$2 & _ww$2>_wm$2) | (_w$2<=_m$2 & _ww$2<_wm$2)
   || exec('utw_poze','fks_auto',_w,_m,_ww,_wm,'','',date(0,0,0),date(0,0,0),date(0,0,0))
   || FUN.info('Dla konta: %1\npozycja dekretu nie zostanie utworzona.\n'
               'Wystąpiła niezgodność stron sald w walucie %2 i PLN.'@[AN.SYM,SLO.KOD])
   ?}
?};
OBR.cntx_pop()


\open
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.51]
:: OPIS: Otwarcie tabeli DOK, POZ, POW
::   WE: _a - maska pkików
::  OLD: \open/euro.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.use('doku'+_a);
POZ.use('pozy'+_a);
ML_POZB.use('pozb'+_a);
POW.use('pow_'+_a)


\pre_ppl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Formuła wsteępna automatu do rozliczania przedpłat.
::       Tworzy w OPTMP zestaw rozrachunków, które mogą byą rozliczone.
::  OLD: \pre_ppl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
KONTO.K1:=KONTO.K2:='';
KONTO.K1_WYM:=KONTO.K1_SYNT:=KONTO.K2_SYNT:=1; KONTO.K1_RODZ:=KONTO.K2_RODZ:=3; KONTO.K2_WYM:=0;
KONTO.K1_AE:='exec(\'ae_kppl\',\'fks_auto\')';
KONTO.K2_BE:='{? UNPAR.P1=1 || 1 || 0 ?}';
UNPAR.P1_AE:='{? UNPAR.P1=1 '
            +'|| ROZRACH.KONTR:=null '
            +'|| KONTO.K2:=\'\' ?}; 1';
KONTO.K1_BE:=KONTO.K2_AE:='';
ROZRACH.STR:=ROZRACH.IDROZ:=ROZRACH.OPIS:=''; ROZRACH.RUSZ:='P';
ROZRACH.KONTR:=ROZRACH.WAL:=null; ROZRACH.ODD:=ROZRACH.ODDR:=DOK.ODD; ROZRACH.DATA_R:=DOK.DTO;
ROZRACH.AUTO:=ROZRACH.KWOTAWAL:=ROZRACH.KURS:=ROZRACH.KW1:=ROZRACH.SUM1:=ROZRACH.SUM2:=ROZRACH.SUM3:=0;
UNPAR.P1_BE:=UNPAR.P2_BE:=UNPAR.P2_AE:=''; UNPAR.P1:=1; UNPAR.P2:=0;
SER_KOR.TYP:='';
KH.win_dict('WERHOME2');
ROZRACH.win_edit('PPL');
_v_l:=1;
{! |?
   {? ROZRACH.edit("exec('aw_ppl','fks_auto')")
   || {? ROZRACH.IDROZ<>''
      || v_user:=tm_form(OPTMP.tm_stamp())+24;
         _v_do:=OP.DO;
         OP.cntx_psh();
         {? UNPAR.P1=1
         || {? ROZRACH.ODDR<>null
            || OP.index('STAN_O');
               OP.prefix(ROZRACH.WAL,ROZRACH.ODDR,'N',KONTO.K2)
            || OP.index('STAN');
               OP.prefix(ROZRACH.WAL,'N',KONTO.K2)
            ?}
         || OP.index('KH');
            {? ROZRACH.ODDR<>null
            || OP.prefix(ROZRACH.WAL,ROZRACH.KONTR,'N',ROZRACH.ODDR)
            || OP.prefix(ROZRACH.WAL,ROZRACH.KONTR,'N')
            ?}
         ?};
         {? OP.first()
         || ROZRACH.KH:=OP.POCH;
            OPTMP.use('optmp__');
            OPTMP.clear(); OPTMP.index('ZNACZ'); OPTMP.prefix();
            {! |?
               {? ((OP.WN$2<OP.MA$2 & -ROZRACH.STR='wn')
                  | (OP.WN$2>OP.MA$2 & -ROZRACH.STR='ma')) &
                  (UNPAR.P2 | (~UNPAR.P2 & OP.DO>=_v_do))
               || OPTMP.blank();
                  OPTMP.USER:=v_user;
                  OPTMP.SYM:=OP.SYM;
                  OPTMP.SYM_ZEW:=OP.SYM_ZEW;
                  OPTMP.TYP:=OP.TYP;
                  OPTMP.KONTO:=OP.AN;
                  OPTMP.POCH:=OP.POCH;
                  OPTMP.DATA:=OP.TZ;
                  OPTMP.DATAO:=OP.DO;
                  {? OP.WN$2>OP.MA$2
                  || OPTMP.SAL:=F.SWn(OP.WN,OP.MA)
                  || OPTMP.SAL:=F.SMa(OP.WN,OP.MA)
                  ?};
                  OPTMP.ODD:=OP.ODD;
                  {? OPTMP.add() || ROZRACH.SUM1+=OPTMP.SAL ?}
               ?};
               OP.next()
            !}
         ?};
         OP.cntx_pop();
         OPTMP.win_sel('ROZL_PPL');
         {? -ROZRACH.STR='wn'
         || ROZRACH.SYMR:='Saldo Ma'
         || ROZRACH.SYMR:='Saldo Wn'
         ?};
         {? ROZRACH.WAL<>FINFO.NAROD || ROZRACH.KW1:=ROZRACH.KWOTAWAL ?};
         ROZRACH.KW2:=ROZRACH.KW1;
         ROZRACH.SUM3:=ROZRACH.SUM1;
         OPTMP.index('SYM'); OPTMP.prefix(v_user);
         {? ROZRACH.AUTO || exec('aut_ppl','fks_auto') ?};
         {? ROZRACH.WAL<>FINFO.NAROD
         || OPTMP.win_edit('RED_WAL')
         || OPTMP.win_edit('RED_NAR')
         ?};
         OPTMP.index('SYM'); OPTMP.prefix(v_user);
         {? OPTMP.size()
         || {! |?
               {? ~OPTMP.select()
               || OPTMP.index('ZNACZ'); OPTMP.prefix(v_user,'T');
                  {? ~OPTMP.first()
                  || {? FUN.ask('Nie wybrano rozrachunków do rozliczenia.\nZakończyć rozliczenie?'@)
                     || wyb:=0
                     || OPTMP.index('SYM'); OPTMP.prefix(v_user); 1
                     ?}
                  || {? ROZRACH.KW2$2>0
                     || {? ~FUN.ask('Nie rozliczono całej kwoty.\nZakończyć rozliczenie?'@)
                        || OPTMP.index('SYM'); OPTMP.prefix(v_user); 1
                        || 0
                        ?}
                     || 0
                     ?}
                  ?}
               ?}
            !};
            _v_l:=1
         || FUN.info('Brak rozrachunków rozliczanych.\nProszę skorygować parametry automatu.'@);
            _v_l:=0
         ?};
         {? ~wyb
         || OPTMP.index('SYM'); OPTMP.prefix(v_user);
            {? OPTMP.first() || {! |? OPTMP.del() !} ?};
            &v_user
         ?};
         1
      ?}
   || wyb:=0; _v_l:=1
   ?}; _ret:=~_v_l
!};
_ret


\ae_kppl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Formuła po redakcji pola kont przedpłaty
::  OLD: \ae_kppl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS.ROZR<>'R'
|| FUN.info('Należy podać symbol konta rozrachunkowego.'@); 0
|| ROZNE.KONZAP:=fld();
   {? ~exec('czy_kwal','dok_fks',KONTO.K1,1)
   || ROZRACH.WAL:=null; ROZRACH.KWOTAWAL:=0
   || ROZRACH.KW1:=0
   ?};
   ROZRACH.IDROZ:='';
   1
?}


\aw_ppl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Formuła sprawdza poprawność parametrów automatu do przedpłat
::  OLD: \aw_ppl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZRACH.WAL<>null & ROZRACH.WAL=FINFO.NAROD || ROZRACH.WAL:=null ?};
_v:='';
{? (ROZRACH.WAL=null & ROZRACH.KW1<0) |
   (ROZRACH.WAL<>null & ROZRACH.KWOTAWAL<0)
|| FUN.info('Kwota przedpłaty nie może być mniejsza od zera.'@); _v:='0'
|? ROZRACH.IDROZ<>'' & ((ROZRACH.WAL=null & ROZRACH.KW1=0) |
   (ROZRACH.WAL<>null & ROZRACH.KWOTAWAL=0))
|| FUN.info('Kwota przedpłaty nie może być równa zero.'@);  _v:='0'
|? _sma:=F.SMa(OP.WN,OP.MA); _swn:=F.SWn(OP.WN,OP.MA); ROZRACH.IDROZ<>'' &
   ((ROZRACH.WAL<>null & ((ROZRACH.STR='Ma' & _sma<ROZRACH.KWOTAWAL) |
   (ROZRACH.STR='Wn' & _swn<ROZRACH.KWOTAWAL))) |
   (ROZRACH.WAL=null & ((ROZRACH.STR='Ma' & _sma<ROZRACH.KW1) |
   (ROZRACH.STR='Wn' & _swn<ROZRACH.KW1))))
|| FUN.info('Kwota przedpłaty nie może być większa niż saldo rozrachunku.'@); _v:='0'
?};
{? _v='0'
|| _v:={? ROZRACH.WAL<>null || 'KWOTAWAL' || 'KW1' ?}
?};
{? _v='' & ROZRACH.DATA_R=date(0,0,0)
|| FUN.info('Nie podano daty rozliczenia.'@); _v:='DATA_R'
?};
{? _v='' & ROZRACH.STR=''
|| FUN.info('Nie podano strony księgowej.'@); _v:='STR'
?};
{? _v='' & (_v:=exec('if_rozr','fks_auto'); _v='')
|| {? ROZRACH.WAL=null || ROZRACH.WAL:=FINFO.NAROD ?};
   {? ROZRACH.IDROZ=''
   || {? FUN.ask('Nie podano identyfikatora rozrachunku.\n Przeprowadzone '
                 'zostanie rozliczenie automatyczne.\nKontynuować?'@)
      || ROZRACH.AUTO:=1
      || 'IDROZ'
      ?}
   || {? ROZRACH.AUTO & UNPAR.P1=1 & exec('akc_kont','edkonto',KONTO.K2)
      || FUN.info('Nie można przeprowadzić automatycznego rozliczenia\n'
                  'z powodu podania niepełnego symbolu konta rozrachunków '
                  'rozliczanych.\nProszę rozliczyć ręcznie.'@);
         ROZRACH.AUTO:=0
      ?};
      1
   ?}
|| {? _v='' || 0 || _v ?}
?}


\if_rozr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Formuła sprawdza, czy są rozrachunki przedpłat
::  OLD: \if_rozr/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
_v:='';
_v_wal:=ROZRACH.WAL;
{? ROZRACH.WAL=null || ROZRACH.WAL:=FINFO.NAROD ?};
OP.cntx_psh();
{? ROZRACH.ODD<>null
|| OP.index('STAN_O'); OP.prefix(ROZRACH.WAL,ROZRACH.ODD,'N',KONTO.K1)
|| OP.index('STAN'); OP.prefix(ROZRACH.WAL,'N',KONTO.K1)
?};
{? ~OP.first() || FUN.info('Brak rozrachunków przedpłat.'@); _v:='K1' ?};
{? _v='' & UNPAR.P1=1 & KS.ROZR<>'R'
|| FUN.info('Należy podać symbol konta rozrachunkowego\n'
            'dla konta rozrachunków rozliczanych.'@); _v:='K2'
?};
{? UNPAR.P1=1
|| {? ROZRACH.ODD<>null
   || OP.index('STAN_O'); OP.prefix(ROZRACH.WAL,ROZRACH.ODD,'N',KONTO.K2)
   || OP.index('STAN'); OP.prefix(ROZRACH.WAL,'N',KONTO.K2)
   ?}
|| OP.index('KH');
   {? ROZRACH.ODDR<>null
   || OP.prefix(ROZRACH.WAL,ROZRACH.KONTR,'N',ROZRACH.ODDR)
   || OP.prefix(ROZRACH.WAL,ROZRACH.KONTR,'N')
   ?}
?};
{? ~OP.first() & _v=''
|| FUN.info('Brak rozrachunków rozliczanych.'@); _v:='P1'
?};
OP.cntx_pop();
ROZRACH.WAL:=_v_wal;
_v


\aut_ppl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Formuła automatycznie rozlicza przedpłaty faktur
::  OLD: \aut_ppl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.first()
|| {! |?
      _war:={? ROZRACH.KW2$2<OPTMP.SAL$2 || ROZRACH.KW2 || OPTMP.SAL ?};
      OPTMP.ZNACZ:='T';
      OPTMP.ROZL:=_war$2;
      OPTMP.put();
      ROZRACH.KW2-=_war$2;
      ROZRACH.SUM2+=OPTMP.ROZL$2;
      ROZRACH.SUM3:=(ROZRACH.SUM1-ROZRACH.SUM2)$2;
      OPTMP.next() & ROZRACH.KW2>0
   !}
?}


\pre_zapl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.53]
:: OPIS: Formula wstepna automatu do rozliczania zaplat faktur.
::       Tworzy w OPTMP zestaw rozrachunkow, ktore moga byc rozliczone.
::  WE: _a - domyślna waluta
::      _b - parametryzacja w jaki sposób ma być uzupełniany opis w dokumencie,
::       1 - pobranie opisu z rozrachunku, 0 - opis pobrany z automatu
::  OLD: \pre_zapl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.WAL:=null;
{? _>=1
|| {? type_of(_a)=type_of('')
   || SLU.cntx_psh(); SLU.index('NAZ'); SLU.prefix('WALUTY');
      {? ~SLU.first()
      || SLU.cntx_pop();
         return()
      ?};
      SLO.cntx_psh(); SLO.index('SL'); SLO.prefix(SLU.ref(),_a);
      {? SLO.first()
      || ROZRACH.WAL:=SLO.ref()
      ?};
      SLO.cntx_pop();
      SLU.cntx_pop()
   ?}
?};
ROZRACH.SUM1:=ROZRACH.SUM2:=ROZRACH.SUM3:=ROZRACH.KWOTAWAL:=ROZRACH.KURS:=ROZRACH.KW1:=ROZRACH.AUTO:=0;
ROZRACH.STR:=ROZNE.KONZAP:=''; ROZRACH.RUSZ:='Z';
SLOSLU.WAL:=null; ROZRACH.OPIS:=DOK.TR; ROZRACH.DATA_R:=DOK.DTO; ROZRACH.KONTOP:=DOK.DOK_REJ().AN;
ROZRACH.DO:=date(0,0,0);
_k:=(SUM.SALWN-SUM.SALMA)$2;
{? _k>0 || ROZRACH.STR:='Ma'; ROZRACH.KW1:=_k |? _k<0 || ROZRACH.STR:='Wn'; ROZRACH.KW1:=-_k ?};
ROZRACH.win_edit('ZAPL');
KONTO.K1:=SER_KOR.TYP:='';
{? ROZRACH.edit("exec('chk_zapl','fks_auto')")
|| {? ROZRACH.WAL=null || ROZRACH.WAL:=FINFO.NAROD ?};
   OPTMP.use('optmp__'); OPTMP.index('ZNACZ'); OPTMP.prefix();
   v_user:=tm_form(OPTMP.tm_stamp())+24;
   _konzap:={? _v_poz:=ROZNE.KONZAP*'?'; _v_poz<>0
            || (_v_poz-1)+ROZNE.KONZAP
            || ROZNE.KONZAP
            ?};
   OP.cntx_psh();
   _zm_rok:=null;
   ROK_F.cntx_psh(); rok_hed:=SSTALE.AR().NAZ;
   _obj:=exec('obj_op','dok_fks_ks');
   {? PAR_SKID.get(77)='T'
   || _zm_rok:=_obj.getACTYEAR(SSTALE.AR().POCZ_ROK);
      ROK_F.prefix();
      {? _zm_rok & ROK_F.seek(_zm_rok)
      || rok_hed:=ROK_F.NAZ;
         _obj.use()
      ?}
   ?};
   ROK_F.cntx_pop();
   OP.index('STAN_O'); OP.prefix(ROZRACH.WAL,DOK.ODD,'N',_konzap);
   {? OP.first()
   || {! |?
         {? exec('maski','dok_fks',OP.AN,ROZNE.KONZAP,+ROZNE.KONZAP)
         || OPTMP.blank();
            OPTMP.USER:=v_user;
            OPTMP.SYM:=OP.SYM;
            OPTMP.SYM_ZEW:=OP.SYM_ZEW;
            OPTMP.TYP:=OP.TYP; OPTMP.KONTO:=OP.AN;
            OPTMP.POCH:=OP.POCH; OPTMP.DATA:=OP.TZ;
            OPTMP.DATAO:=OP.DO; OPTMP.SYM_ROK:=OP.SYM_ROK;
            {? (_=2)&(_b=1)
            || ROZRACH.OPIS:=OP.OP
            ?};
            {? OP.WN$2>OP.MA$2
            || OPTMP.STR:='Wn'
            || OPTMP.STR:='Ma'
            ?};
            {? -ROZRACH.STR='ma'
            || OPTMP.SAL:={? OP.WN>OP.MA
                          || OP.WN-OP.MA
                          || {? OP.MA=0 || OP.WN || 0 ?}
                          ?}
            || OPTMP.SAL:={? OP.WN<OP.MA
                          || OP.MA-OP.WN
                          || {? OP.WN=0 || OP.MA || 0 ?}
                          ?}
            ?};
            {? ((-ROZRACH.STR='ma' & OPTMP.SAL<>0) |
                (-ROZRACH.STR='wn' & OPTMP.SAL<>0)) & OPTMP.add()
            || ROZRACH.SUM1+=OPTMP.SAL
            ?}
         ?};
         OP.next()
      !}
   ?};
   {? _zm_rok
   || ROK_F.cntx_psh(); ROK_F.prefix(); SSTALE.AR();
      _obj.use();
      ROK_F.cntx_pop()
   ?};
   OP.cntx_pop();
   OPTMP.index('SYM'); OPTMP.prefix(v_user);
   OPTMP.win_sel('ZAPL_FAK');
   OPTMP.hdr_sel();
   OPTMP.hdr_sel(' - rozrachunki z roku %1'@[rok_hed]);
   ROZRACH.SYMR:={? -ROZRACH.STR='wn' || 'Saldo Ma' || 'Saldo Wn' ?};
   {? ROZRACH.WAL<>FINFO.NAROD || ROZRACH.KW1:=ROZRACH.KWOTAWAL ?};
   ROZRACH.KW2:=ROZRACH.KW1; ROZRACH.SUM3:=ROZRACH.SUM1;
   {? ROZRACH.AUTO || exec('aut_zapl','fks_auto') ?};
   {? ROZRACH.WAL<>FINFO.NAROD || OPTMP.win_edit('RED_WAL') || OPTMP.win_edit('RED_NAR') ?};
   OPTMP.index('SYM'); OPTMP.prefix(v_user);
   {! |?
      OPTMP.index('SYM'); OPTMP.prefix(v_user);
      OPTMP.fld_opt('ZAPL_FAK','col_name="%1"'[ROZRACH.SYMR],OPTMP,'SAL');
      {? ~OPTMP.select()
      || OPTMP.index('ZNACZ'); OPTMP.prefix(v_user,'T');
         {? ~OPTMP.first()
         || {? FUN.ask('Nie wybrano rozrachunków do rozliczenia.\nZakończyć rozliczenie?'@)
            || wyb:=0
            || 1
            ?}
         || {? ROZRACH.KW2$2>0
            || ~FUN.ask('Nie rozliczono całej kwoty.\nZakończyć rozliczenie?'@)
            || 0
            ?}
         ?}
      ?}
   !};
   {? ~wyb
   || OPTMP.index('SYM'); OPTMP.prefix(v_user);
      {? OPTMP.first() || {! |? OPTMP.del() !} ?};
      &v_user
   ?};
   VAR_DEL.delete('rok_hed');
   1
|| wyb:=0
?}


\aut_zapl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.53]
:: OPIS: Formula automatycznie nalicza zaplaty faktur.
::  OLD: \aut_zapl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.first()
|| {! |?
      _war:=0;
      {? ROZRACH.KW2>0 & OPTMP.SAL>0
      || {? ROZRACH.KW2$2<OPTMP.SAL$2 || _war:=ROZRACH.KW2 || _war:=OPTMP.SAL ?}
      |? ROZRACH.KW2<0 & OPTMP.SAL<0
      || {? ROZRACH.KW2$2>OPTMP.SAL$2 || _war:=ROZRACH.KW2 || _war:=OPTMP.SAL ?}
      ?};
      {? _war
      || OPTMP.ZNACZ:='T';
         OPTMP.ROZL:=_war$2;
         OPTMP.put();
         ROZRACH.KW2-=_war$2;
         ROZRACH.SUM2+=OPTMP.ROZL$2;
         ROZRACH.SUM3:=(ROZRACH.SUM1-ROZRACH.SUM2)$2
      ?};
      OPTMP.next() & ROZRACH.KW2
   !}
?}


\chk_zapl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.53]
:: OPIS: Formula sprawdza porawnosc wypelenia pol.
::  OLD: \chk_zapl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
_v:=__CHK.record(ROZRACH,,'KONZAP','STR','DATA_R');
{? _v=''
|| KS.clear(); KS.index('SYM'); KS.prefix(SSTALE.AR,SSTALE.AR().SYNT+ROZNE.KONZAP);
   {? KS.first()
   || {? KS.ROZR='Z' || FUN.info('Wybrane konto nie jest rozrachunkowe.'@); _v:='KONZAP' ?}
   ?}
?};
{? _v='' & ROZRACH.WAL<>null
|| {? ROZRACH.KURS=0 || FUN.info('Nie podano kursu waluty.'@); _v:='KURS' ?}
?};
_v


\rej_zapl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Formuła automatu do rozliczania zapłat faktur. Tworzy pozycje dokumentu na podstawie rekordów tabeli OPTMP.
::  OLD: \rej_zapl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
_v_suma:=0; sym_zew:='';
OPTMP.clear(); OPTMP.index('ZNACZ'); OPTMP.prefix(v_user,'T');
{? OPTMP.first()
|| {! |?
      {? DOK.DOK_REJ().EDSYMZEW='T' || sym_zew:=OPTMP.SYM_ZEW ?};
      {? FINFO.NAROD<>ROZRACH.WAL
      || _jedn:=exec('ust_jwal','dok_fks',ROZRACH.WAL().KOD);
         exec('poz_add','dekret_aut',(OPTMP.ROZL*ROZRACH.KURS/_jedn)$2,
              ROZRACH.STR,OPTMP.KONTO,OPTMP.SYM,OPTMP.TYP,OPTMP.DATAO,OPTMP.DATA,
              ROZRACH.OPIS,ROZRACH.WAL().KOD,OPTMP.ROZL,ROZRACH.KURS,'FORM',ROZRACH.DATA_R)
      || exec('poz_add','dekret_aut',OPTMP.ROZL,ROZRACH.STR,OPTMP.KONTO,
              OPTMP.SYM,OPTMP.TYP,OPTMP.DATAO,OPTMP.DATA,ROZRACH.OPIS,'',0,0,'FORM',ROZRACH.DATA_R)
      ?};
      _v_suma+=OPTMP.ROZL;
      OPTMP.next()
   !}
?};
sym_zew:='';
{? ROZRACH.KONTOP<>''
|| {? ROZRACH.STR='Wn' || _v_str:='Ma' || _v_str:='Wn' ?};
   {? FINFO.NAROD<>ROZRACH.WAL  & exec('czy_kwal','dok_fks',ROZRACH.KONTOP,0)
   || _jedn:=exec('ust_jwal','dok_fks',ROZRACH.WAL().KOD);
      exec('poz_add','dekret_aut',(_v_suma*ROZRACH.KURS/_jedn)$2,_v_str,
           ROZRACH.KONTOP,'','',date(0,0,0),date(0,0,0),ROZRACH.OPIS,
           ROZRACH.WAL().KOD,_v_suma,0,'FORM')
   || {? ROZRACH.KURS$4<>0
      || _jedn:=exec('ust_jwal','dok_fks',ROZRACH.WAL().KOD);
         exec('poz_add','dekret_aut',(_v_suma*ROZRACH.KURS/_jedn)$2,_v_str,ROZRACH.KONTOP,'','',
              date(0,0,0),date(0,0,0),ROZRACH.OPIS,'',0,0,'FORM')
      || exec('poz_add','dekret_aut',_v_suma$2,_v_str,ROZRACH.KONTOP,'','',
              date(0,0,0),date(0,0,0),ROZRACH.OPIS,'',0,0,'FORM')
      ?}
   ?}
?};
OPTMP.prefix(v_user);
{? OPTMP.first() || {! |? OPTMP.del() !} ?};
VAR_DEL.delete('v_user','sym_zew');
1


\fa_zapl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.53]
:: OPIS: Formula dolacza nowe rozrachunki do zaplaty faktury.
::  OLD: \fa_zapl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZRACH.WAL<>FINFO.NAROD
|| OPTMP.win_edit('RED_WAL')
|| OPTMP.win_edit('RED_NAR')
?};
ROZRACH.KW0:=0;
OPTMP.blank();
{? ~exec('akc_kont','edkonto',ROZNE.KONZAP)
|| OPTMP.KONTO:=ROZNE.KONZAP
?};
{? OPTMP.edit("exec('chk_optm','fks_auto')") ||
   OPTMP.ZNACZ:='T';
   OPTMP.ZNACZ2:='R';
   OPTMP.POCH:=exec('wys_op','dok_fks_ks',OPTMP.KONTO);
   OPTMP.USER:=v_user;
   {? OPTMP.add() ||
      {? ROZRACH.KW1 || ROZRACH.KW2-=OPTMP.ROZL ?};
      ROZRACH.SUM2+=OPTMP.ROZL$2;
      ROZRACH.SUM3:=(ROZRACH.SUM1-ROZRACH.SUM2)$2
   ?}
?}


\chk_optm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Formuła sprawdza poprawność redagowania rozrachunku.
::  OLD: \chk_optm/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
_v:=__CHK.record(OPTMP,,'KONTO','SYM','TYP','ROZL');
{? _v='' & OPTMP.ROZL>ROZRACH.KW2$2 & ROZRACH.KW2>0
|| FUN.info('Za duża kwota rozrachunku.'@);
   OPTMP.ROZL:=ROZRACH.KW2; _v:='ROZL'
?};
{? _v='' & OPTMP.DATAO>OPTMP.DATA
|| FUN.info('Data otwarcia rozrachunku nie może być późniejsza \nniż termin płatności.'@);
   _v:='DATAO'
?};
_v


\ae_rozl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.53]
:: OPIS: Formula Po Popraw. Oblicza wartosci zmiennych.
::  OLD: \ae_rozl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.SUM2+=OPTMP.ROZL$2-ROZRACH.KWOTA$2; ROZRACH.SUM3:=ROZRACH.SUM1-ROZRACH.SUM2;
{? ROZRACH.KW1 || ROZRACH.KW2:=ROZRACH.KW1$2-ROZRACH.SUM2$2 ?};
ROZRACH.KW3:=OPTMP.SAL$2-OPTMP.ROZL$2;
{? ROZRACH.WAL<>FINFO.NAROD || OPTMP.win_edit('RED_WAL') || OPTMP.win_edit('RED_NAR') ?}


\be_rozl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.53]
:: OPIS: Formula Przed Popraw. Sprawdza mozliwosc redagowania rekordu.
::  OLD: \be_rozl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
OPTMP.win_edit();
{? ROZRACH.KW1 & OPTMP.ROZL$2=0 & ROZRACH.KW2$2=0 & OPTMP.SAL>0
|| FUN.info('Kwota zapłaty została w całości przypisana do rozrachunków.'@); 0
|| ROZRACH.KWOTA:=OPTMP.ROZL; 1
?}


\bu_zapl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.53]
:: OPIS: Formula przed usun. Sprawdza mozliwosc usuniecia rekordu.
::  OLD: \bu_zapl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.ZNACZ2='R'
|| v_rozl:=OPTMP.ROZL; 1
|| FUN.info('Nie można usunąć rozrachunku.\nRozrachunek istnieje w bazie rozrachunków.'@); 0
?}


\au_zapl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.53]
:: OPIS: Formula po usun. Oblicza wartosci zmiennych.
::  OLD: \au_zapl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZRACH.KW1 || ROZRACH.KW2+=v_rozl ?};
ROZRACH.SUM2-=v_rozl;
ROZRACH.SUM3:=(ROZRACH.SUM1-ROZRACH.SUM2)$2;
&v_rozl


\af_zapl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.53]
:: OPIS: Formula akcji Zaplata calkowita. Rozlicza rozrachunek lub anuluje rozliczenie.
::  OLD: \af_zapl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.ROZL$2<>0
|| ROZRACH.SUM2-=OPTMP.ROZL$2; {? ROZRACH.KW1 || ROZRACH.KW2+=OPTMP.ROZL$2 ?};
   OPTMP.ZNACZ:=''; OPTMP.ROZL:=0; OPTMP.put();
   ROZRACH.SUM3:=(ROZRACH.SUM1-ROZRACH.SUM2)$2
|? ROZRACH.KW1 & ROZRACH.KW2$2=0 & OPTMP.SAL>0
|| FUN.info('Kwota zapłaty została w całości przypisana do rozrachunków.'@)
|? ROZRACH.KW3$2<>0
   & ((ROZRACH.KW2 & (OPTMP.SAL>0 & ROZRACH.KW2>0) | (OPTMP.SAL<0 & ROZRACH.KW2<0)) | ~ROZRACH.KW2)
|| _war:={? ROZRACH.KW1 & ROZRACH.KW2$2<ROZRACH.KW3$2 || ROZRACH.KW2 || ROZRACH.KW3 ?};
   OPTMP.ZNACZ:='T'; OPTMP.ROZL:=_war$2; OPTMP.put();
   {? ROZRACH.KW1 || ROZRACH.KW2-=_war$2 ?}; ROZRACH.SUM2+=OPTMP.ROZL$2;
   ROZRACH.SUM3:=(ROZRACH.SUM1-ROZRACH.SUM2)$2
|? ROZRACH.KW3$2<>0 & ((OPTMP.SAL>0 & ROZRACH.KW2<0) | (OPTMP.SAL<0 & ROZRACH.KW2>0))
|| FUN.info('Brak kwoty do przypisana do tego rozrachunku.'@)
|? ROZRACH.KW3$2=0 & OPTMP.ZNACZ2='R'
|| OPTMP.ZNACZ:='T'; OPTMP.ROZL:=ROZRACH.KW2$2; OPTMP.put();
   ROZRACH.KW2:=0; ROZRACH.SUM2+=OPTMP.ROZL$2; ROZRACH.SUM3:=(ROZRACH.SUM1-ROZRACH.SUM2)$2
?}


\br_zapl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Rekord przed
::  OLD: \br_zapl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.KW3:=OPTMP.SAL-OPTMP.ROZL;
_jedn:=exec('ust_jwal','dok_fks',ROZRACH.WAL().KOD);
ROZRACH.KW0:=(OPTMP.ROZL*ROZRACH.KURS/_jedn)$2;
{? OPTMP.ZNACZ='T' || 'OPTMP#02#01' || '' ?}


\ar_rozl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.53]
:: OPIS: Formula Rekord Po. Sprawdza poprawnosc rekordu, ustawia znacznik rekordu.
::  OLD: \ar_rozl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.ROZL$2<0 & OPTMP.SAL>0
|| FUN.info('Kwota nie może być ujemna.'@); 0
|? OPTMP.ROZL$2>0 & OPTMP.SAL<0
|| FUN.info('Kwota nie może być dodatnia.'@); 0
|? OPTMP.ROZL=0
|| OPTMP.ZNACZ:='N'
|? OPTMP.SAL>0 & ((ROZRACH.KW1 & OPTMP.ROZL$2>ROZRACH.KW2$2+OPTMP.SAL$2-ROZRACH.KW3$2) | (OPTMP.ROZL$2>OPTMP.SAL$2))
|| FUN.info('Zbyt duża kwota do zapłaty.'@); 'ROZL'
|? OPTMP.SAL<0 & OPTMP.ROZL$2<OPTMP.SAL$2
|| FUN.info('Zbyt mała kwota do zapłaty.'@); 'ROZL'
|? OPTMP.SAL>0 & OPTMP.ROZL$2>OPTMP.SAL$2 & OPTMP.ZNACZ2<>'R'
|| FUN.info('Maksymalna kwota zapłaty wynosi: %1.'@[form(OPTMP.SAL,,2)]); 'ROZL'
|? (OPTMP.SAL>0 & OPTMP.ROZL$2<=OPTMP.SAL$2 & OPTMP.ROZL>0) | (OPTMP.SAL$2=0 & OPTMP.ZNACZ2='R')
   | (OPTMP.SAL<0 & OPTMP.ROZL$2>=OPTMP.SAL$2 & OPTMP.ROZL<0)
|| OPTMP.ZNACZ:='T'; ''
|| ''
?}


\rej_ppl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Formuła automatu do rozliczania przedpłat faktur.
::       Tworzy  pozycje dokumentu na podstawie rekordów tabeli OPTMP.
::  OLD: \rej_ppl/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
_v_suma:=_v_tot:=0;
{? ROZRACH.IDROZ<>''
|| {? FINFO.NAROD<>ROZRACH.WAL
   || _kurs:=exec('kurs','fks_auto',OP.ref)
   ?};
   OPTMP.index('ZNACZ'); OPTMP.prefix(v_user,'T');
   {? OPTMP.first()
   || {!
      |? {? FINFO.NAROD<>ROZRACH.WAL
         || _jedn:=exec('ust_jwal','dok_fks',ROZRACH.WAL().KOD);
            exec('poz_add','dekret_aut',(OPTMP.ROZL*_kurs/_jedn)$2,
               ROZRACH.STR,OPTMP.KONTO,OPTMP.SYM,OPTMP.TYP,OPTMP.DATAO,OPTMP.DATA,ROZRACH.OPIS,
               ROZRACH.WAL().KOD,OPTMP.ROZL,_kurs,'FORM',OP.DO,
               ROZRACH.ODDR)
         || exec('poz_add','dekret_aut',OPTMP.ROZL,ROZRACH.STR,OPTMP.KONTO,OPTMP.SYM,OPTMP.TYP,
               OPTMP.DATAO,OPTMP.DATA,ROZRACH.OPIS,'',0,0,'FORM',OP.DO,
               ROZRACH.ODDR)
         ?};
         _v_suma+=OPTMP.ROZL; _v_tot+=OPTMP.ROZL;
         OPTMP.next()
      !}
   ?};
   {? ROZRACH.STR='Wn' || _v_str:='Ma' || _v_str:='Wn' ?};
   v_user:=tm_form(OPTMP.tm_stamp())+24;
   {? FINFO.NAROD<>ROZRACH.WAL
   || _jedn:=exec('ust_jwal','dok_fks',ROZRACH.WAL().KOD);
      exec('poz_add','dekret_aut',(_v_suma*_kurs/_jedn)$2,_v_str,
           OP.AN,ROZRACH.IDROZ,OP.TYP,OP.DO,OP.TZ,ROZRACH.OPIS,
           ROZRACH.WAL().KOD,_v_suma,_kurs,'FORM',ROZRACH.DATA_R,ROZRACH.ODD)
   || exec('poz_add','dekret_aut',_v_suma,_v_str,OP.AN,ROZRACH.IDROZ,OP.TYP,
           OP.DO,OP.TZ,ROZRACH.OPIS,'',0,0,'FORM',ROZRACH.DATA_R,ROZRACH.ODD)
   ?};
   OPTMP.prefix(v_user);
   {? OPTMP.first() || {! |? OPTMP.del() !} ?};
   &v_user;
   1
|| _v_opref:=_v_odref:=null;
   _v_ppl:=_v_poz:=_v_rozl:=_v_sal:=0;
   _v_dorozl:={? ROZRACH.WAL=null || ROZRACH.KW1 || ROZRACH.KWOTAWAL ?};
   {? ROZRACH.STR='Wn' || _v_str:='Ma' || _v_str:='Wn' ?};
   {? ROZRACH.ODD<>null
   || OP.index('STAN_O');
      OP.prefix(ROZRACH.WAL,ROZRACH.ODD,'N',KONTO.K1)
   || OP.index('STAN');
      OP.prefix(ROZRACH.WAL,'N',KONTO.K1)
   ?};
   {? OP.first()
   || {! |?
         {? (OP.WN$2<OP.MA$2 & -ROZRACH.STR='ma')
            | (OP.WN$2>OP.MA$2 & -ROZRACH.STR='wn')
         || {? OP.WN$2>OP.MA$2
            || _v_ppl:=F.SWn(OP.WN,OP.MA)
            || _v_ppl:=F.SMa(OP.WN,OP.MA)
            ?};
            {? (ROZRACH.KW1<>0 & ROZRACH.WAL=null) |
               (ROZRACH.KWOTAWAL<>0 & ROZRACH.WAL<>null)
            || {? _v_dorozl<_v_ppl
               || _v_ppl:=_v_dorozl; _v_dorozl:=0
               || _v_dorozl-=_v_ppl
               ?}
            ?};
            {? FINFO.NAROD<>ROZRACH.WAL
            || _kurs:=exec('kurs','fks_auto',OP.ref)
            ?};
            _v_datr:=OP.DO;
            _v_kontr:=OP.KH;
            OP.cntx_psh();
            {? UNPAR.P1=1
            || {? ROZRACH.ODDR<>null
               || {? ~exec('akc_kont','edkonto',KONTO.K2)
                  || OP.index('STAN_O');
                     OP.prefix(ROZRACH.WAL,ROZRACH.ODDR,'N',KONTO.K2)
                  || {? var_pres('_ind')<0
                     || _ind:=OP.ndx_tmp(,1,'WAL',,0,'ODD',,0,'STAN',,0,'KH',,0,'AN',,0,'TZ',,0)
                     ?};
                     OP.index(_ind);
                     OP.prefix(ROZRACH.WAL,ROZRACH.ODDR,'N',_v_kontr,KONTO.K2)
                  ?}
               || {? ~exec('akc_kont','edkonto',KONTO.K2)
                  || OP.index('STAN');
                     OP.prefix(ROZRACH.WAL,'N',KONTO.K2)
                  || {? var_pres('_ind')<0
                     || _ind:=OP.ndx_tmp(,1,'WAL',,0,'STAN',,0,'AN',,0,'KH',,0,'TZ',,0)
                     ?};
                     OP.index(_ind);
                     OP.prefix(ROZRACH.WAL,'N',KONTO.K2,_v_kontr)
                  ?}
               ?}
            || OP.index('KH');
               {? ROZRACH.ODDR<>null
               || {? var_pres('_ind')<0
                  || _ind:=OP.ndx_tmp(,1,'WAL',,0,'KH',,0,'STAN',,0,'ODD',,0,'TZ',,0)
                  ?};
                  OP.index(_ind);
                  OP.prefix(ROZRACH.WAL,ROZRACH.KONTR,'N',ROZRACH.ODDR)
               || {? var_pres('_ind')<0
                  || _ind:=OP.ndx_tmp(,1,'WAL',,0,'KH',,0,'STAN',,0,'TZ',,0)
                  ?};
                  OP.index(_ind);
                  OP.prefix(ROZRACH.WAL,ROZRACH.KONTR,'N')
               ?}
            ?};
            {? OP.first()
            || {? _v_opref<>null || OP.seek(_v_opref) ?};
               {! |?
                  {? ((OP.WN$2<OP.MA$2 & -ROZRACH.STR='wn')
                     | (OP.WN$2>OP.MA$2 & -ROZRACH.STR='ma'))
                     & (UNPAR.P2 | (~UNPAR.P2 & OP.DO>=_v_datr))
                  || {? OP.WN$2>OP.MA$2
                     || _v_sal:=F.SWn(OP.WN,OP.MA)
                     || _v_sal:=F.SMa(OP.WN,OP.MA)
                     ?};
                     {? _v_poz || _v_sal:=_v_poz ?};
                     {? _v_sal<_v_ppl
                     || _v_rozl:=_v_sal; _v_ppl-=_v_sal;
                        _v_poz:=0;
                        OP.cntx_psh();
                        {? OP.next() || _v_opref:=OP.ref ?};
                        OP.cntx_pop()
                     || _v_rozl:=_v_ppl; _v_ppl:=0;
                        _v_poz:=_v_sal-_v_rozl;
                        _v_opref:=OP.ref
                     ?};
                     _v_suma+=_v_rozl; _v_tot+=_v_rozl;
                     {? FINFO.NAROD<>ROZRACH.WAL
                     || _jedn:=exec('ust_jwal','dok_fks',ROZRACH.WAL().KOD);
                        exec('poz_add','dekret_aut',(_v_rozl*_kurs/_jedn)$2,
                             ROZRACH.STR,OP.AN,OP.SYM,OP.TYP,OP.DO,
                             OP.TZ,ROZRACH.OPIS,ROZRACH.WAL().KOD,
                             _v_rozl,_kurs,'FORM',_v_datr,OP.ODD)
                     || exec('poz_add','dekret_aut',_v_rozl,
                             ROZRACH.STR,OP.AN,OP.SYM,OP.TYP,OP.DO,OP.TZ,
                             ROZRACH.OPIS,'',0,0,'FORM',_v_datr,OP.ODD)
                     ?}
                  ?};
                  _v_ppl & OP.next()
               !}
            ?};
            OP.cntx_pop()
         ?};
         {? _v_suma<>0
         || {? FINFO.NAROD<>ROZRACH.WAL
            || _jedn:=exec('ust_jwal','dok_fks',ROZRACH.WAL().KOD);
               exec('poz_add','dekret_aut',(_v_suma*_kurs/_jedn)$2,
                    _v_str,OP.AN,OP.SYM,OP.TYP,OP.DO,OP.TZ,ROZRACH.OPIS,
                    ROZRACH.WAL().KOD,_v_suma,_kurs,'FORM',ROZRACH.DATA_R,OP.ODD)
            || exec('poz_add','dekret_aut',_v_suma,_v_str,OP.AN,
                    OP.SYM,OP.TYP,OP.DO,OP.TZ,ROZRACH.OPIS,'',0,0,'FORM',
                    ROZRACH.DATA_R,OP.ODD)
            ?}
         ?};
         _v_suma:=0;
         (((ROZRACH.KW1 & _v_dorozl) | ~ROZRACH.KW1) & ROZRACH.WAL=null) |
         (((ROZRACH.KWOTAWAL & _v_dorozl) | ~ROZRACH.KWOTAWAL)
         & ROZRACH.WAL<>null) & OP.next()
      !}
   ?}
?};
{? ROZRACH.IDROZ='' & ((ROZRACH.KW1>_v_tot & ROZRACH.WAL=FINFO.NAROD)
   | (ROZRACH.KWOTAWAL>_v_tot & ROZRACH.WAL<>FINFO.NAROD))
|| FUN.info('Podana kwota przedpłat '+
            {? ROZRACH.WAL=FINFO.NAROD || form(ROZRACH.KW1,,2,' ,') || form(ROZRACH.KWOTAWAL,,2,' ,') ?}+
            ' nie może zostać rozliczona w całości.\nBrak nierozliczonych rozrachunków.\n'+
            'Rozliczono kwotę '+form(_v_tot,,2,' ,')+'.')
?};
{? var_pres('_ind')>=0 || OP.ndx_drop(_ind) ?};
1


\kurs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.60]
:: OPIS: Formula zwraca kurs przedplaty do rozliczenia
::   WE: _a: OP.ref
::  OLD: \kurs/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
_v_kurs:=0;
{? ZAP_OP.index('OP'); ZAP_OP.prefix(_a); ZAP_OP.first()
|| {? ZAP_OP.size()=1
   || _v_kurs:=ZAP_OP.KURS
   || {! |?
         _vstr:={? ZAP_OP.WN || 'Wn' || 'Ma' ?};
         {? _vstr=ROZRACH.STR
         || _v_kurs:=ZAP_OP.KURS;
            _v_pozk:={? ZAP_OP.WN || ZAP_OP.WN || ZAP_OP.MA ?};
            ZAP_OP.cntx_psh();
            {? ZAP_OP.index('OP'); ZAP_OP.prefix(_a); ZAP_OP.first()
            || {! |?
                  _vstr2:={? ZAP_OP.WN || 'Wn' || 'Ma' ?};
                  {? ZAP_OP.KURS=_v_kurs & _vstr2<>ROZRACH.STR
                  || {? ZAP_OP.WN || _v_pozk-=ZAP_OP.WN || _v_pozk-=ZAP_OP.MA ?}
                  ?};
                  _v_pozk & ZAP_OP.next()
               !}
            ?};
            ZAP_OP.cntx_pop()
         ?};
         ~_v_pozk & ZAP_OP.next()
      !}
   ?}
?};
_v_kurs


\prz_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2008]
:: OPIS: Formula poczatkowa dla automatu przeksiegowujacego zawieszony VAT
::   WE: [_a] - Znacznik czy optymalizowac zapisy (0 - nie, <>0 - tak)
::  OLD: \prz_vat/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
PARAM.AUTOMAT:={? AUTOKSIE.TYP='P' | AUTOKSIE.TYP='N' || AUTOKSIE.TYP || '' ?};
{? PARAM.AUTOMAT<>''
|| {? AUTOKSIE.TYP='P' | AUTOKSIE.TYP='N' & (DOK.blank(); exec('rodz_dok','dok_fks') & exec('dol_dok2','dok_fks',1))
   || FORM.index('AUTOKSIE'); FORM.prefix(AUTOKSIE.ref());
      {? FORM.first()
      || __OPTYM:={? var_pres('_a')<=0 || 1 || _a ?};
         exec('prz_vat1','fks_auto');
         SSTALE.AO();
         {! |? exec('evalform','dok_fks');
               FORM.next()
         !};
          VAR_DEL.delete('TT_V','TT_VS','__OPTYM')
      ?};
      exec('suma_dok','dok_fks');
      DOK.REJ()
   ?};
   {? var_pres('wyb') || wyb:=0 ?};
   0
?}


\prz_vat1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2008]
:: OPIS: Zasadnicza formula na potrzeby automatu przeksiegowujacego zawieszony VAT
::  OLD: \prz_vat1/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TT_V','TT_VS');
VPOZ.cntx_psh();
VPOZ_ROZ.cntx_psh();
SLO.cntx_psh();
DVAT.cntx_psh();
TT_V:=tab_tmp(4,'TYP','STRING[1]' ,''
               ,'KRAJ','STRING[2]',''
               ,'STAWKA','STRING[8]',''
               ,'GRUPA','STRING[8]',''
               ,'KWOTA','REAL',''
               ,'OPIS','STRING[50]','');
DVAT.index('DOK'); DVAT.prefix();
PVAT.index('DVAT_ST');
{? DVAT.first()
|| {! |?
      {? DVAT.DOKOKRO<>SSTALE.AO & DVAT.ODD=DOK.ODD
      || _kraj:=DVAT.KRAJ().KOD;
         PVAT.prefix(DVAT.ref);
         {? PVAT.first()
         ||
            {! |?
               {? PVAT.VPOZ_ROZ
               || VPOZ_ROZ.use(ref_name(PVAT.VPOZ_ROZ));
                  _okr:=PVAT.VPOZ_ROZ().OKRO_F
               || VPOZ.use(ref_name(PVAT.VPOZ_REF));
                  _okr:=PVAT.VPOZ_REF().OKRVAT
               ?};
               {? _okr=SSTALE.AO
               || _stawka:=PVAT.STVAT().KOD;
                  _grupa:=PVAT.GRVAT().KOD;
                  _typ:={? 1+_grupa='Z'
                        || 'Z'
                        || 'S'
                        ?};
                  {? __OPTYM & TT_V.find_key(_typ,_kraj,_stawka,_grupa)
                  || TT_V.KWOTA+={? _typ='Z' || PVAT.VAT_ODL || PVAT.VAT ?};
                     TT_V.put()
                  || TT_V.TYP:=_typ;
                     TT_V.STAWKA:=_stawka;
                     TT_V.GRUPA:=_grupa;
                     TT_V.KRAJ:=_kraj;
                     TT_V.KWOTA:={? _typ='Z' || PVAT.VAT_ODL || PVAT.VAT ?};
                     {? __OPTYM=0
                     || TT_V.OPIS:=DVAT.SYM1 + ', ' +
                                   DVAT.RVAT().SYM +', '+
                                   $DVAT.NR+ '.'
                     ?};
                     TT_V.add()
                  ?}
               ?};
               PVAT.next()
            !}
         ?}
      ?};
      DVAT.next()
   !}
?};
VPOZ.cntx_pop();
VPOZ_ROZ.cntx_pop();
SLO.cntx_pop();
DVAT.cntx_pop();
0


\tt_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2008]
:: OPIS: Formula na potrzeby automatu przeksiegowujacego zawieszony VAT
::   WE: _a - S - sprzedaz (podatek nalezny), Z - zakup (podatek naliczony)
::       _b - kod kraju
::  OLD: \tt_vat/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? __OPTYM
|| VAR_DEL.delete('TT_VS');
   TT_VS:=tab_tmp(3,'KRAJ','STRING[2]',''
                   ,'KONTO','STRING[35]',''
                   ,'STRONA','STRING[2]',''
                   ,'STAWKA','STRING[8]',''
                   ,'GRUPA','STRING[8]',''
                   ,'KWOTA','REAL','')
?};
_kma:=$STR.gsub(STR.gsub(FORM.KMA,'stawka','TT_V.STAWKA'),'grupa','TT_V.GRUPA');
_kwn:=$STR.gsub(STR.gsub(FORM.KWN,'stawka','TT_V.STAWKA'),'grupa','TT_V.GRUPA');
TT_V.prefix(_a);
{? TT_V.first
|| {? __OPTYM
   || {! |?
         exec('tt_vs_add','fks_auto',TT_V.KRAJ,_kma(),'Ma',TT_V.KWOTA);
         exec('tt_vs_add','fks_auto',TT_V.KRAJ,_kwn(),'Wn',TT_V.KWOTA);
         TT_V.next
      !};
      {? TT_VS.first
      || {! |?
            {? TT_VS.KWOTA<>0
            || exec('poz_add','dekret_aut',TT_VS.KWOTA,TT_VS.STRONA,TT_VS.KONTO,'',,,,AUTOKSIE.OP)
            ?};
            TT_VS.next
         !}
      ?}
   || {! |?
         {? TT_V.KWOTA<>0
         || exec('poz_add','dekret_aut',TT_V.KWOTA,'Ma',_kma(),'',,,,AUTOKSIE.OP+': '+TT_V.OPIS);
            exec('poz_add','dekret_aut',TT_V.KWOTA,'Wn',_kwn(),'',,,,AUTOKSIE.OP+': '+TT_V.OPIS)
         ?};
         TT_V.next()
      !}
   ?}
?};
0


\tt_vs_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2008]
:: OPIS: Agregacja zapisow o wspolnych cechach
::   WE: _a - kod kraju
::       _b - konto ksiegowe
::       _c - strona konta
::       _d - kwota
::  OLD: \tt_vs_add/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? TT_VS.find_key(_a,_b,_c)
|| TT_VS.KWOTA+=_d;
   TT_VS.put()
|| TT_VS.KRAJ:=_a;
   TT_VS.KONTO:=_b;
   TT_VS.STRONA:=_c;
   TT_VS.KWOTA:=_d;
   TT_VS.add()
?};
1


\r_kurs3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.53]
:: OPIS: Formula rejestrujaca dla automatu RK2_2002 - dla rozrachunkow rozliczanych
::       w jednym dokumencie (od 2002).
::  OLD: \r_kurs3/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
dokument:=1; POZ.cntx_psh(); OP.cntx_psh(); POZ.index('DOK'); POZ.prefix(DOK.ref());
VAR_DEL.delete('TT1OP');
TT1OP:=tab_tmp(5, 'KON', 'STRING[35]', 'KON',
                  'ID', 'STRING[20]', 'ID',
                  'OD', 'STRING[8]', 'OD',
                  'KOD', 'STRING[8]', 'KOD',
                  'SYM_ROK', 'STRING[25]', 'SYM_ROK',
                  'WN', 'REAL', 'WN',
                  'MA', 'REAL', 'MA',
                  'WWN', 'REAL', 'WWN',
                  'WMA', 'REAL', 'WMA');
{? POZ.first()
|| {! |?
      {? POZ.WAL<>null & POZ.ID<>''
      || _roznica:=0;
         OP.index('KON_O'); OP.prefix(POZ.WAL,POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK);
         {? OP.first()
         || OP.prefix(FINFO.NAROD,POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK);
            {? OP.first()
            || F.RObr2(OP.ref(),DOK.DTW,,POZ.WAL); _wn_w:=F.rwwn; _ma_w:=F.rwma; _wn:=F.rwn; _ma:=F.rma;
               {? ~(TT1OP.find_key(POZ.KON, POZ.ID, POZ.ODD().OD, POZ.WAL().KOD, POZ.SYM_ROK) & TT1OP.SYM_ROK=POZ.SYM_ROK)
               || TT1OP.blank();
                  TT1OP.KON:=POZ.KON;
                  TT1OP.ID:=POZ.ID;
                  TT1OP.OD:=POZ.ODD().OD;
                  TT1OP.KOD:=POZ.WAL().KOD;
                  TT1OP.SYM_ROK:=POZ.SYM_ROK;
                  TT1OP.WN+=_wn;
                  TT1OP.MA+=_ma;
                  TT1OP.WWN+=_wn_w;
                  TT1OP.WMA+=_ma_w;
                  {? POZ.STR='Wn'
                  || TT1OP.WN+=POZ.SUM;
                     TT1OP.WWN+=POZ.SUMW
                  || TT1OP.MA+=POZ.SUM;
                     TT1OP.WMA+=POZ.SUMW
                  ?};
                  TT1OP.add()
               || {? POZ.STR='Wn'
                  || TT1OP.WN+=POZ.SUM;
                     TT1OP.WWN+=POZ.SUMW
                  || TT1OP.MA+=POZ.SUM;
                     TT1OP.WMA+=POZ.SUMW
                  ?};
                  TT1OP.put()
               ?};
               _roznica:=exec('oblicz','fks_auto',POZ.STR,_wn_w,_ma_w,_wn,_ma,0);
               {? _roznica$2<>0
               || {? (TT1OP.find_key(POZ.KON, POZ.ID, POZ.ODD().OD, POZ.WAL().KOD, POZ.SYM_ROK) & TT1OP.SYM_ROK=POZ.SYM_ROK)
                  || {? _roznica>0
                     || TT1OP.WN+=(_roznica$2);
                        {? TT1OP.WWN=TT1OP.WMA & TT1OP.WN<>TT1OP.MA
                        || {? TT1OP.WN>TT1OP.MA
                           || _roznica-=(TT1OP.WN-TT1OP.MA)
                           || _roznica+=(TT1OP.MA-TT1OP.WN)
                           ?}
                        ?}
                     || TT1OP.MA+=(-_roznica$2);
                        {? TT1OP.WWN=TT1OP.WMA & TT1OP.WN<>TT1OP.MA
                        || {? TT1OP.WN>TT1OP.MA
                           || _roznica-=(TT1OP.WN-TT1OP.MA)
                           || _roznica+=(TT1OP.MA-TT1OP.WN)
                           ?}
                        ?}
                     ?};
                     TT1OP.put()
                  ?};
                  exec('utw_pozr','fks_auto',_roznica,
                       POZ.KON,POZ.ID,POZ.TID,POZ.DO,POZ.TP,'Różnice kursowe',POZ.ODD().OD,'T',POZ.WAL().KOD)
               ?}
            ?};
            {? _roznica$2=0 & menu_txt='Automat' & (var_pres('KOMUNIKAT')>0 & KOMUNIKAT
               | var_pres('KOMUNIKAT')<0)
            || FUN.info('Nie naliczono różnic kursowych\ndla rozrachunku %1.'@[POZ.ID])
            ?}
         ?}
      ?};
      POZ.next()
   !}
|| {? menu_txt='Automat' & (var_pres('KOMUNIKAT')>0 & KOMUNIKAT | var_pres('KOMUNIKAT')<0)
   || FUN.info('Brak pozycji dokumentu związanej \nz rozliczeniem rozrachunku walutowego.'@)
   ?}
?};
VAR_DEL.delete('TT1OP');
POZ.cntx_pop(); OP.cntx_pop(); &dokument; 0


\oblicz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.41]
:: OPIS: Formula oblicza roznice kursowa.
::   WE: _a: strona zapisu
::       _b: obroty Wn w walucie
::       _c: obroty Ma w walucie
::       _d: obroty Wn w walucie narodowej
::       _e: obroty Ma w walucie narodowej
::   WY: kwota roznicy
::  OLD: \oblicz/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
{? _f || _vwn:=ZAP_OP.WN; _vma:=ZAP_OP.MA || _vwn:=_vma:=POZ.SUMW ?};
_saldo_wal:=_saldo_nar:=_rozn:=0;
{? POZ.SUMW$2>0 & _a='Wn' || _str:='Wn'
|? POZ.SUMW$2<0 & _a='Ma' || _str:='Wn'; _vwn==_vma
|? POZ.SUMW$2>0 & _a='Ma' || _str:='Ma'
|? POZ.SUMW$2<0 & _a='Wn' || _str:='Ma'; _vwn==_vma
?};
{? POZ.WAL=0 || jedn:=1 || jedn:=exec('jed_wal','waluty',POZ.WAL().KOD) ?};
{? _str='Wn' & _b$2<_c$2
|| _saldo_wal:=F.SMa(_b,_c); _saldo_nar:=F.SMa(_d,_e);
   _kwota:={? _vwn$2>_saldo_wal || _saldo_wal || _vwn ?};
   {? |_kwota$2=_saldo_wal$2
   || {? _kwota<0
      || _rozn:=(_saldo_nar+(_kwota*((POZ.KURS/jedn)$6))$2)$2
      || _rozn:=(_saldo_nar-(_kwota*((POZ.KURS/jedn)$6))$2)$2
      ?}
   |? _saldo_wal$2<>0
   || _kurs_sr:=(_saldo_nar/_saldo_wal)$6;
      {? _kwota<0
      || _rozn:=-(_kwota*(_kurs_sr-(POZ.KURS/jedn)$6))$2
      || _rozn:=(_kwota*(_kurs_sr-(POZ.KURS/jedn)$6))$2
      ?}
   ?}
|? _str='Wn' & _b$2=_c$2
|| _saldo_nar:=F.SMa(_d,_e); _rozn:=_saldo_nar
|? _str='Ma' & _b$2>_c$2
|| _saldo_wal:=F.SWn(_b,_c); _saldo_nar:=F.SWn(_d,_e);
   _kwota:={? _vma$2>_saldo_wal || _saldo_wal || _vma ?};
   {? |_kwota$2=_saldo_wal$2
   || {? _kwota<0
      || _rozn:=-((_kwota*((POZ.KURS/jedn)$6))$2+_saldo_nar)$2
      || _rozn:=((_kwota*((POZ.KURS/jedn)$6))$2-_saldo_nar)$2
      ?}
   |? _saldo_wal$2<>0
   || _kurs_sr:=(_saldo_nar/_saldo_wal)$6;
      {? _kwota<0
      || _rozn:=-(_kwota*((POZ.KURS/jedn)$6-_kurs_sr))$2
      || _rozn:=(_kwota*((POZ.KURS/jedn)$6-_kurs_sr))$2
      ?}
   ?}
|? _str='Ma' & _b$2=_c$2
|| _saldo_nar:=F.SMa(_d,_e); _rozn:=-_saldo_nar
?};
&jedn; _rozn


\utw_pozr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Formuła tworząca 2 pozycje z rozliczeniem różnicy kursowej
::   WE: _a - kwota roznicy
::       _b - konto rozrachunkowe
::       _c - identyfikator rozrachunku
::       _d - typ rozrachunku
::       _e - data otwarcia rozrachunku
::       _f - termin platnosci rozrachunku
::       _g - opis pozycji
::       _h - jednostka ksiegowa
::       _i - różnica kursowa: T-tak/N-nie/W-wycena
::       _j - waluta
::  OLD: \utw_poz/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_i')<=0 || _i:='T' ?};
{? var_pres('dokument')>0 & dokument
|| {? _a$2>0
   || SD_OB.DEK_OBJ.run3(_a,FORM.KMA,'','',date(0,0,0),date(0,0,0),_g,'',0,0);
      SD_OB.dek2tmp('Ma');
      SD_OB.DEK_OBJ.run3(_a,_b,_c,_d,_e,_f,_g,'',0,0,exec('dat_otw','dok_fks'),_h,_i);
      SD_OB.dek2tmp('Wn')
   || SD_OB.DEK_OBJ.run3(-_a,FORM.KWN,'','',date(0,0,0),date(0,0,0),_g,'',0,0);
      SD_OB.dek2tmp('Wn');
      SD_OB.DEK_OBJ.run3(-_a,_b,_c,_d,_e,_f,_g,'',0,0,exec('dat_otw','dok_fks'),_h,_i);
      SD_OB.dek2tmp('Ma')
   ?}
|| {? _i='T' & var_pres('StornoKrs')>0
   || {? _a$2>0
      || {? FORM.KMA<>''
         || exec('poz_add','dekret_aut',-_a,'Ma',FORM.KMA,'','',date(0,0,0),date(0,0,0),
                 _g,'',0,0,'FORM')
         ?};
         exec('poz_add','dekret_aut',-_a,'Wn',_b,_c,_d,_e,_f,_g,
              '',0,0,'FORM',exec('dat_otw','dok_fks'),,,,_i)
      || {? FORM.KWN<>''
         || exec('poz_add','dekret_aut',_a,'Wn',FORM.KWN,'','',date(0,0,0),date(0,0,0),
                 _g,'',0,0,'FORM')
         ?};
          exec('poz_add','dekret_aut',_a,'Ma',_b,_c,_d,_e,_f,_g,
              '',0,0,'FORM',exec('dat_otw','dok_fks'),,,,_i)
      ?}
   || {? _a$2>0
      || {? FORM.KMA<>''
         || exec('poz_add','dekret_aut',_a,'Ma',FORM.KMA,'','',date(0,0,0),date(0,0,0),
                 _g,'',0,0,'FORM')
         ?};
         exec('poz_add','dekret_aut',_a,'Wn',_b,_c,_d,_e,_f,_g,
              '',0,0,'FORM',exec('dat_otw','dok_fks'),,,,_i)
      || {? FORM.KWN<>''
         || exec('poz_add','dekret_aut',-_a,'Wn',FORM.KWN,'','',date(0,0,0),date(0,0,0),
                 _g,'',0,0,'FORM')
         ?};
         exec('poz_add','dekret_aut',-_a,'Ma',_b,_c,_d,_e,_f,_g,
              '',0,0,'FORM',exec('dat_otw','dok_fks'),,,,_i)
      ?}
   ?}
?}


\pocz_kb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula poczatkowa automatu liczacego roznice kursowe na koncie
::       srodkow pienieznych w walucie
::   WE: [ _a - domyslna metoda wyceny F/L/S]
::       [ _b - symbol waluty ]
::       [ _c - symbol konta ]
::       [ _d - symbol slownika wyroznika ]
::       [ _e - maska pozycji wyroznika ]
::   WY: 0/1
::  OLD: \pocz_kb/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.ROK1:=SSTALE.AR;
SIK.OKRES1:=do_ok:=SSTALE.AO;
POMOC.CO:='F';
SIK.OKRES1A:=SSTALE.AO;
KONTO.K1:='';
KONTO.K1_RODZ:=1;KONTO.K1_WYM:=1;KONTO.K1_SYNT:=1;
KONTO.K1_BE:=''; KONTO.K1_AE:='';
POMOC.WAL:=null;
{? _>0 & type_of(_a)=2 & +_a=1 & 'FLS'*_a || POMOC.CO:=_a ?};
{? _>1 & type_of(_b)=2
|| SLO.index('SL'); SLO.prefix(FINFO.SLWAL().SLU);
   {? SLO.find_key(_b) || POMOC.WAL:=SLO.ref ?}
?};
{? _>2 & type_of(_c)=2 || KONTO.K1:=_c ?};
UNPAR.P10_BE:='exec(\'be_rkbwy\',\'fks_auto\')';
UNPAR.P10_BV:='';
UNPAR.P10_F3:='exec(\'f3_rkbwy\',\'fks_auto\')';
UNPAR.P10_AE:='exec(\'ae_rkbwy\',\'fks_auto\')';
UNPAR.P11_BE:='UNPAR.P10<>\'\'';
UNPAR.P11_BV:=UNPAR.P11_AE:='';
UNPAR.P10:=UNPAR.P11:='';
{? var_pres('_d')>0 & type_of(_d)=type_of('') || UNPAR.P10:=_d ?};
{? var_pres('_e')>0 & type_of(_e)=type_of('') || UNPAR.P11:=_e ?};
{? KONTO.K1<>'' & UNPAR.P10<>''
|| _kon:=SSTALE.AR().SYNT+KONTO.K1;
   KS.index('SYM'); KS.prefix(ROK_F.ref(),_kon);
   {? KS.first()
   || KS_W.index('KSSLU'); KS_W.prefix(KS.ref()); _ok:=0;
      {? KS_W.first()
      || {!
         |? _ok:=KS_W.SLU().SLU().NAZ=UNPAR.P10;
            _ok=0 & KS_W.next()
         !};
         {? _ok=0
         || UNPAR.P10:='';
            UNPAR.P11:=''
         ?}
      ?}
   ?}
?};
POMOC.win_edit('ROZ_KRS');
{? POMOC.edit("exec('spr_par','fks_auto')") || 1 || wyb:=0 ?}


\be_rkbwy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [2011]
:: OPIS: Przed redakcja UNPAR.P10 - pole wyroznik w parametrach automatu RKB
::  OLD: \be_rkbwy/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
KONTO.K1<>''


\f3_rkbwy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [2011]
:: OPIS: Klawisz F3 dla UNPAR.P10 - pole wyroznik w parametrach automatu RKB
::  OLD: \f3_rkbwy/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
_kon:=SSTALE.AR().SYNT+KONTO.K1;
KS.index('SYM'); KS.prefix(ROK_F.ref(),_kon);
{? KS.first()
|| KS_W.index('LP'); KS_W.prefix(KS.ref());
   KS_W.win_sel('SLO'); _ok:=0;
   {? KS_W.first()
   || {!
      |? _ok:=KS_W.SLU().SLU().NAZ=fld();
         _ok=0 & KS_W.next()
      !};
      {? _ok=0 || KS_W.first() ?}
   ?};
   {? KS_W.select(,1)
   || fld(KS_W.SLU().SLU().NAZ)
   ?}
?}


\ae_rkbwy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [2011]
:: OPIS: Po redakcji UNPAR.P10 - pole wyroznik w parametrach automatu RKB
::  OLD: \ae_rkbwy/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
_kon:=SSTALE.AR().SYNT+KONTO.K1;
KS.index('SYM'); KS.prefix(ROK_F.ref(),_kon);
{? UNPAR.P10=''
|| UNPAR.P11:='';
   1
|? KS.first()
|| KS_W.index('KSSLU'); KS_W.prefix(KS.ref()); _ok:=0;
   {? KS_W.first()
   || {!
      |? _ok:=KS_W.SLU().SLU().NAZ=UNPAR.P10;
         _ok=0 & KS_W.next()
      !};
      {? _ok=0
      || FUN.info('Brak wyróżnika o nazwie: %1.'@[UNPAR.P10]); 0
      || __RKB_SLU:=SLUAPPL.ref();
         __RKB_LP:=KS_W.LP;
         1
      ?}
   || FUN.info('Brak wyróżnika o nazwie: %1.'@[UNPAR.P10]); 0
   ?}
?}


\spr_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Funkcja sprawdza poprawnosc parametrow formuly liczacej roznice dla konta srodkow pienieznych w walucie
::  OLD: \spr_par/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=__CHK.record(POMOC,,'WAL','OKRES1');
{? _a=''
|| {? POMOC.WAL=FINFO.NAROD || FUN.info('Należy wybrać walutę obcą.'@); _a:='WAL' ?};
   {? _a='' & SIK.OKRES1().NR>SIK.OKRES1A().NR
   || FUN.info('Niewłaściwy zakres okresów.'@); _a:='OKRES1'
   ?}
?};
{? _a='' & exec('ae_rkbwy','fks_auto')=0
|| _a:='P10'
?};
_a


\roz_kb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Funkcja inicjująca obliczanie różnic dla konta
::   WE: _a - (niezadeklarowane/1) - analiza okresow w biezacym roku od BO/analiza
::  OLD: \roz_kb/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
end();
echo();
TROZ:=tab_tmp(1,'T','STRING[1]','Przychód/Rozchód',
                'ROK','STRING[20]','Rok',
                'OKRES','INTEGER','Okres',
                'LP','INTEGER','Lp',
                'POCZ_ROK','DATE','Początek roku',
                'WN','REAL','Wn',
                'MA','REAL','Ma',
                'KURS','REAL','Kurs',
                'KW_WYŁ','REAL','Kwota wyłączona',
                'OPIS','STRING[35]','Opis',
                'DOKUMENT','STRING[35]','Dokument');
tmpind:=TROZ.ndx_tmp('',1,'T','',0,'POCZ_ROK',,0,'OKRES',,0,'LP',,0);
tmpind1:=TROZ.ndx_tmp('',1,'T','',0,'POCZ_ROK',,0,'OKRES',,0);
TROZ.index(tmpind);
tyt:='Przychody i rozchody (Waluta: '+POMOC.WAL().KOD+', Konto: '+KONTO.K1+', Okresy: '+
form(SIK.OKRES1().NR,-2)+' - '+form(SIK.OKRES1A().NR,-2)+')';
tyt2:='Przychody i rozchody (Waluta: '+POMOC.WAL().KOD+', Konto: '+KONTO.K1+')';
_ttmpwer:=TROZ.mk_sel(tyt,'N',,'troz_wer');
TROZ.win_fld(_ttmpwer,,'ROK');
TROZ.win_fld(_ttmpwer,,'OKRES',,,5);
TROZ.win_fld(_ttmpwer,,'LP',,,3);
TROZ.win_fld(_ttmpwer,,'WN',,,14,2);
TROZ.win_fld(_ttmpwer,,'MA',,,14,2);
TROZ.win_fld(_ttmpwer,,'KURS',,,10,4);
TROZ.win_fld(_ttmpwer,,'OPIS',,,25);
g_tt_w:=obj_new(TROZ.fld_num());
g_tt_p:=obj_new(TROZ.fld_num());
g_tt_e:=obj_new(TROZ.fld_num());
{! _i:=1..TROZ.fld_num() |! g_tt_e[_i]:=1; g_tt_w[_i]:=g_tt_p[_i]:=0 !};
g_tt_e[1]:=g_tt_e[5]:=g_tt_e[9]:=0;
g_tt_w[3]:=5; g_tt_w[4]:=3; g_tt_w[2]:=4; g_tt_w[6]:=g_tt_w[7]:=14; g_tt_w[8]:=10; g_tt_w[10]:=35; g_tt_w[11]:=20;
g_tt_p[4]:=0; g_tt_p[6]:=g_tt_p[7]:=2; g_tt_p[8]:=4; g_tt_p[5]:=g_tt_p[3]:=0;
TROZ.win_act(_ttmpwer,0,'Formuła','Oblicz różnicę'@@,,'Uruchomienie funkcji obliczającej różnicę kursową'@,
,"exec('obl_kb','fks_auto')",1,,,,'O');
TROZ.win_act(_ttmpwer,0,'Formuła','Popraw kwotę'@@,,'Poprawienie kwoty zapisu uwzględnianej w obliczeniach'@,
,"exec('popr_kw','fks_auto')",0,,,,'P');
TROZ.win_act(_ttmpwer,,'Formuła','Wydruk'@@,,'Wydruk przychodów i rozchodów konta wyświetlanych w okienku'@,,
             "PAR_WYDR.TTMPAKR:='TROZ';PAR_WYDR.TITLE:='Przychody i rozchody\n'+(20-tyt); exec('rep_exec','#b_report','','wsp_tt',,,,,,,,'W')",,,,,'W');
TROZ.win_act(_ttmpwer,0,'Rekord',,,,"{? TROZ.T='S' || exec('findtmp','#color') ?}");
TROZ.win_act(_ttmpwer,0,'Wyświetl',,,,"TROZ.hdr_edit(); TROZ.hdr_edit(tyt2); TROZ.display; 0");
TROZ.win_act(_ttmpwer,0,'Kolejność');
_ttmpred:=TROZ.mk_edit(,,'troz_red');
TROZ.win_efld(_ttmpred,,'OKRES',,,2,,,'Okres'@);
TROZ.win_efld(_ttmpred,,'LP',,,3,,,'Lp'@);
TROZ.win_efld(_ttmpred,,'WN',,,15,2,,'Kwota Wn'@);
TROZ.win_efld(_ttmpred,,'MA',,,15,2,,'Kwota Ma'@);
TROZ.win_efld(_ttmpred,,'KURS',,,10,4,,'Kurs'@);
TROZ.win_efld(_ttmpred,,'KW_WYŁ',,,15,2,,'Kwota wyłączona'@);
TROZ.win_efld(_ttmpred,,'OPIS');
TROZ.win_efld(_ttmpred,,'DOKUMENT');
_waluta:=SSTALE.WAL;
{? var_pres('_a')<=0 || _a:=0 ?};
exec('proz_kb','fks_auto',_a);
TROZ.win_sel(_ttmpwer); TROZ.win_edit(_ttmpred);
{? TROZ.first()
|| TROZ.hdr_sel(); TROZ.select()
|| FUN.info('W podanym zakresie brak zapisów w walucie %1\ndla konta %2.'@[POMOC.WAL().KOD,KONTO.K1])
?};
SSTALE.WAL:=_waluta;
VAR_DEL.delete('TROZ','g_tt_p','g_tt_w','g_tt_e','__RKB_SLU','__RKB_LP','tmpind','tmpind1','tyt','tyt2');
0


\obl_kb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: NN [12.10]
:: OPIS: Akcja 'Oblicz różnice' w okienku wertowania przychodów i rozchodów konta
::  OLD: \obl_kb/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
TROZ.cntx_psh(); TROZ.index(tmpind); TROZ.prefix('S');
{? TROZ.first() & TROZ.WN$2>=TROZ.MA$2
|| TROZ.index(tmpind); TROZ.prefix('R');
   {? ~TROZ.find_ge(SSTALE.AR().POCZ_ROK,SIK.OKRES1().NR)
   || FUN.info('Brak rozchodów dla konta w zakresie '+form(SIK.OKRES1().NR,-2)+'-'+
               form(SIK.OKRES1A().NR,-2)+'/'+SSTALE.AR().NAZ+'.')
   || jedn:=exec('jed_wal','waluty',POMOC.WAL().KOD);
      _roznica:={? POMOC.CO='S' || exec('obl_srb','fks_auto') || exec('obl_fili','fks_auto') ?};
      {? _roznica$2<>0
      || exec('utw_pozr','fks_auto',-_roznica$2,KONTO.K1,'','',date(0,0,0),date(0,0,0),'Różnice kursowe')
      ?};
      &jedn; sel_exit
   ?}
|| FUN.info('Suma przychodów jest mniejsza od sumy rozchodów.\nObliczenie różnicy niemożliwe.'@)
?};
TROZ.cntx_pop()


\popr_kw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL, MP [8.40]
:: OPIS: Akcja 'Popraw kwotę' w okienku wertowania przychodów i rozchodów konta
::  OLD: \popr_kw/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
{? TROZ.T='S'
|| FUN.info('Funkcja nie dotyczy podsumowania.'@)
|| undefine;
   pocz:={? TROZ.T='P' || TROZ.WN || TROZ.MA ?}+TROZ.KW_WYŁ;
   define('KW',~~,'Kwota pierwotna:   %1'@[form(pocz,15,2)]);
   define('KWW',~~,'Kwota wyłączona:   %1'@[form(TROZ.KW_WYŁ,15,2)]);
   define('nowa_kw',{? TROZ.T='P' || TROZ.WN || TROZ.MA ?},'Nowa kwota:   '@,'',,15,2);
   _zapisz:=def_btn('text=%1'['Zapisz'@],'key:F2');
   _anuluj:=def_btn('text=%1'['Anuluj'@],'key:Esc');
   def_bopt(_zapisz,'tooltip='+exec('help_red_ok','#window','Z'));
   def_bopt(_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
   {? def_edit("{? DEFINE.nowa_kw$2>pocz
                || FUN.info('Nowa kwota większa od kwoty pierwotnej.'@); 'nowa_kw'
                |? DEFINE.nowa_kw$2<0
                || FUN.info('Podaj zero lub kwotę dodatnią.'@); 'nowa_kw'
                || ''
                ?}",'Podaj kwotę '+{? TROZ.T='P' || 'Wn' || 'Ma' ?})
   || _kw:=DEFINE.nowa_kw$2;
      {? TROZ.T='P' || TROZ.WN:=_kw || TROZ.MA:=_kw ?};
      TROZ.KW_WYŁ:=pocz-_kw;
      TROZ.put;
      exec('sum_kb','fks_auto')
   ?};
   undefine;
   &pocz
?}


\sum_kb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Uaktualnienie rekordu z podsumowaniem przychodów i rozchodów konta
::  OLD: \sum_kb/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
TROZ.cntx_psh(); TROZ.index(tmpind); TROZ.prefix('S');
{? TROZ.first() || TROZ.del() ?};
TROZ.prefix();
_ma:=_wn:=0;
{? TROZ.first()
|| {! |? {? TROZ.T<>'S' || _wn+=TROZ.WN; _ma+=TROZ.MA ?}; TROZ.next !}
?};
exec('new_tmp','fks_auto','S',SIK.OKRES1A().NR,_wn,_ma,' RAZEM','','',date(0,0,0));
TROZ.cntx_pop()


\new_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Funkcja tworzy rekord w tabeli TROZ
::   WE: _a - Typ (P/R/S)
::       _b - numer okresu
::       _c - kwota Wn lub Ma
::       _d - kurs
::       _e - opis
::       _f - oznaczenie dokumentu
::       _g - nazwa roku
::       _h - kod roku
::  OLD: \new_tmp/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
{? _c<>0
|| TROZ.prefix(); TROZ.blank();
   TROZ.T:=_a; TROZ.OKRES:=_b;
   {? _a='S'
   || TROZ.WN:=_c; TROZ.MA:=_d
   || {? _a='P' || TROZ.WN:=_c || TROZ.MA:=_c ?};
      {? _d$4=0
      || _jed:=exec('jed_wal','waluty',POMOC.WAL().KOD);
         TROZ.KURS:=((POZ.SUM/POZ.SUMW)*_jed)$4
      || TROZ.KURS:=_d
      ?}
   ?};
   TROZ.OPIS:=_e; TROZ.DOKUMENT:=_f; TROZ.ROK:=_g; TROZ.POCZ_ROK:=_h;
   TROZ.add()
?};
{? _a='S' & TROZ.first()
|| TROZ.cntx_psh(); TROZ.index(tmpind1);
   _fun:="{? TROZ.first() || _lp:=1; {! |? TROZ.LP:=_lp; TROZ.put(); _lp+=1; TROZ.next() !} ?}";
   TROZ.prefix('P'); _fun();
   TROZ.prefix('R'); _fun();
   TROZ.cntx_pop()
?}


\obl_srb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Formuła obliczająca różnicę metodą - średnie bieżące
::  OLD: \obl_srb/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
_roznica:=0;
_od:=SIK.OKRES1().NR; _do:=SIK.OKRES1A().NR; _rok:=SSTALE.AR().POCZ_ROK;
_sum:=_ile:=0;
TROZ.index(tmpind);
TROZ.prefix('P');
{? TROZ.first() || {!|? _sum+=TROZ.WN*TROZ.KURS; _ile+=TROZ.WN; TROZ.next() !} ?};
_kurs:={? _ile<>0 || (_sum/_ile)$4 || 0 ?};
TROZ.index(tmpind); TROZ.prefix('R');
{? TROZ.first() & _kurs$4<>0
|| {! |?
      {? TROZ.MA$2<>0 & TROZ.POCZ_ROK=_rok & TROZ.OKRES>=_od & TROZ.OKRES<=_do
      || _roznica+=(TROZ.MA*_kurs)/jedn-(TROZ.MA*TROZ.KURS)/jedn
      ?};
      TROZ.next()
   !}
?};
_roznica


\obl_fili
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Formuła obliczająca różnicę metodą FIFO lub LIFO (POMOC.CO='F'lub'L')
::  OLD: \obl_fili/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
_zn:=1; _ma:=_kurs:=_roznica:=_okres:=0;
_od:=SIK.OKRES1().NR; _do:=SIK.OKRES1A().NR; _rok:=SSTALE.AR().POCZ_ROK;
TROZ.index(tmpind); TROZ.prefix('R');
_petla:=TROZ.first(); _ma:=TROZ.MA;
{! |? _petla
|! {? TROZ.MA$2<>0
   || {? _zn=1
      || _ma:=TROZ.MA; _kurs:=TROZ.KURS; _okres:=TROZ.OKRES;
         _tr:=TROZ.POCZ_ROK;
         _zn:=0
      ?};
      TROZ.cntx_psh(); TROZ.index(tmpind); TROZ.prefix('P');
      {? {? POMOC.CO='L' || TROZ.last() || TROZ.first() ?}
      || {? TROZ.WN$2>=_ma$2
         || {? _tr=_rok & _okres>=_od & _okres<=_do
            || _roznica+=(_ma*TROZ.KURS)/jedn-(_ma*_kurs)/jedn
            ?};
            _zn:={? TROZ.WN$2=_ma$2 || TROZ.del; 1 || TROZ.WN-=_ma; TROZ.put; 1 ?}
         |? TROZ.WN$2<_ma$2
         || {? _tr=_rok & _okres>=_od & _okres<=_do
            || _roznica+=(TROZ.WN*TROZ.KURS)/jedn-(TROZ.WN*_kurs)/jedn
            ?};
            _ma-=TROZ.WN; TROZ.del; _zn:=0
         ?}
      ?};
      {? TROZ.size=0 || _zn:=1 ?};
      TROZ.cntx_pop();
      {? _zn=1 || _petla:=TROZ.next() || _petla:=1 ?}
   || _zn:=1; _petla:=TROZ.next
   ?}
!};
_roznica


\proz_kb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Formuła obliczająca przychody i rozchody konta od początku roku
::   WE: _a - (niezadeklarowane/0) - analiza okresów w bieZAcym roku od BO
::            1 - analiza poprzednich lat
::            2 - analiza okresów w bieżącym roku od BO dla BO liczone
::                z obrotów konta jeśli sa na nim obroty w PLN i jednej walucie obcej
::  OLD: \proz_kb/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
_data:=DOK.DTW; _firstrok:=0;
_indpoz:=POZ.ndx_tmp('',1,'A',,0,'ZP',,0,'KON',,0,'WAL',,0,'DOK','ODD',0,'DOK','DTW',0,'POZ',,0);
{? var_pres('_a')<=0 || _a:=0 ?};
DOK.cntx_psh(); POZ.cntx_psh(); POW.cntx_psh(); AN.cntx_psh(); AN_SLU.cntx_psh();
ROK_F.cntx_psh(); OKRO_F.cntx_psh(); OKRO_F.index('ROK'); SSTALE.AR();
_kon_pop:=KONTO.K1;
{! |?
   OKRO_F.prefix(ROK_F.ref());
   {? OKRO_F.first()
   || exec('open','rozrach',ROK_F.KOD+form(OKRO_F.NR,-2));
      _kon_ob:=_kon_pop;
      {? _a=1
      || POZ.index('KON'); POZ.prefix(_kon_ob);
         _kon_pop:={? POZ.first() || POZ.PKON || '' ?};
         _firstrok:=exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref())
      ?};
      {! |?
         {? _a=2 & OKRO_F.POCZ=date(0,0,0) & (OKRO_F.NAZ*'zamkn')=0
         || _sumplnw:=_sumplnm:=_sumwalw:=_sumwalm:=0;
            AN.cntx_psh();
            AN.index('SYM'); AN.prefix(_kon_ob);
            {? AN.first() & AN.size()=2
            || {! |?
                  OBR.cntx_psh(); OBR.index('OKR');
                  {? OPERATOR.DEPT
                  || OBR.prefix(0,AN.ref(),OPERATOR.DEPT)
                  || OBR.prefix(0,AN.ref())
                  ?};
                  {? OBR.first()
                  || {! |?
                        {? AN.WAL=FINFO.NAROD
                        || _sumplnw+=OBR.WN; _sumplnm+=OBR.MA
                        || _sumwalw+=OBR.WN; _sumwalm+=OBR.MA
                        ?};
                        OPERATOR.DEPT=null & OBR.next()
                     !}
                  ?};
                  OBR.cntx_pop();
                  AN.next()
               !};
               _spln:=((_sumplnw-_sumplnm)$2); _swal:=((_sumwalw-_sumwalm)$2);
               {? _spln<>0 & _swal<>0
               || TROZ.prefix(); TROZ.blank();
                  TROZ.T:='P'; TROZ.OKRES:=OKRO_F.NR; TROZ.WN:=_swal;
                  _jed:=exec('jed_wal','waluty',POMOC.WAL().KOD);
                  TROZ.KURS:=((_spln/_swal)*_jed)$4;
                  TROZ.ROK:=ROK_F.NAZ; TROZ.POCZ_ROK:=ROK_F.POCZ_ROK;
                  TROZ.add()
               ?}
            || _a:=0
            ?};
            AN.cntx_pop()
         ?};
         {? _a=0 | _a=1 | (_a=2 & OKRO_F.POCZ<>date(0,0,0))
         || exec('open','rozrach',ROK_F.KOD+form(OKRO_F.NR,-2));
            POZ.index(_indpoz);
            {? OPERATOR.DEPT<>null
            ||  POZ.prefix('T','T',_kon_ob,POMOC.WAL,OPERATOR.DEPT)
            ||  POZ.prefix('T','T',_kon_ob,POMOC.WAL)
            ?};
            {? POZ.first()
            || {! |?
                  {? (_a=0 | OKRO_F.POCZ<>date(0,0,0) | _firstrok | POZ.DOK().DOK_REJ().SLO().KOD<>'BO') &
                     POZ.DOK().DTW<=_data & exec('spr_wyr','fks_auto')
                  || exec('new_tmp','fks_auto',{? 1+POZ.STR='W' || 'P' || 'R' ?},OKRO_F.NR,
                          POZ.SUMW$2,POZ.KURS$4,POZ.OP,DOK.REJ().KOD+'/'+$DOK.NR+' '+DOK.NK,ROK_F.NAZ,ROK_F.POCZ_ROK)
                  ?};
                  POZ.next()
               !}
            ?}
         ?};
         OKRO_F.ref()<>do_ok & OKRO_F.next()
      !}
   ?};
   _a=1 & _kon_pop<>'' & ROK_F.prev()
!};
POZ.ndx_drop(_indpoz);
ROK_F.cntx_pop(); OKRO_F.cntx_pop();
DOK.cntx_pop(); POZ.cntx_pop(); POW.cntx_pop(); AN.cntx_pop(); AN_SLU.cntx_pop();
exec('sum_kb','fks_auto');
1


\spr_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [2011]
:: OPIS: Sprawdza czy uwzględniac pozycje dla automatu RKB
::  OLD: \spr_wyr/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
{? UNPAR.P10='' || return(1) ?};
POW.index('POZ'); POW.prefix(POZ.ref(),__RKB_LP,__RKB_SLU); _ok:=0;
{? POW.first()
|| {? UNPAR.P11=''
   || 0
   || {!
      |? _ok:=exec('spr_mask','dok_fks',UNPAR.P11,POW.SLO().KOD);
         _ok=0 & POW.next()
      !};
      ~_ok
   ?}
|| 1
?}


\pre_rks2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Formula rejestrująca dla automatów: RKN_2002 i RKZ_2002 - do
::       rozliczania niezrealizowanych różnic kursowych  (od 2002)- formula poczatkowa
::   WE: _a - typ rozrachunkow (N/Z)
::  OLD: \pre_rks2/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.win_sel('ONE'); SLO.win_dict('ONE');
POMOC.win_edit('KURS');
wyb:={? _=0 | 'NZ'*_a=0
     || FUN.info('Funkcja wymaga parametru: "N" lub "Z".'@); 0
     || exec('ust_par','dok_fks',_a); 1
     ?};
{? wyb & ~POMOC.edit("__CHK.record(POMOC,,'B','TKRS')") || wyb:=0 ?}


\r_kurs2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.41]
:: OPIS: Formula rejestrujaca dla automatow: RKN_2002 i RKZ_2002 - do rozliczania niezrealizowanych
::       roznic kursowych (od 2002).
::   WE: _a - typ rozrachunkow (N/Z)
::  OLD: \r_kurs2/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
_poz:=0; OP.cntx_psh(); SLO.cntx_psh(); SLO.index('SL');
{? POMOC.WAL<>null
|| SLO.prefix(FINFO.SLWAL().SLU,POMOC.WAL().KOD)
|| SLO.prefix(FINFO.SLWAL().SLU)
?};
{? SLO.first()
|| {! |?
      {? SLO.ref<>FINFO.NAROD
      || echo('Proszę czekać. Wyznaczam różnice kursowe dla rozrachunków w %1'@[SLO.KOD]);
         _kurs:=exec('ust_krs1','dok_fks',SLO.ref,SLO.KOD);
         OP.index('KON_O'); OP.prefix(SLO.ref(),DOK.ODD);
         {? OP.first()
         || {? _kurs=0
            || FUN.info('Zerowy kurs waluty %1\nlub brak waluty w tabeli kursów.\n'
                        'Różnice kursowe dla tej waluty nie zostaną naliczone.'@[SLO.KOD])
            || {! |?
                  {? (1+OP.TYP)=_a
                  || OP.cntx_psh();
                     OP.prefix(FINFO.NAROD,DOK.ODD,OP.AN,OP.SYM,OP.SYM,OP.SYM_ROK);
                     {? OP.first()
                     || F.RObr2(OP.ref,DOK.DTW); _wn:=F.rwn; _ma:=F.rma; _wn_w:=F.rwwn; _ma_w:=F.rwma;
                        {? _wn_w$2 <> _ma_w$2
                        || {? _wn_w$2>_ma_w$2
                           || _r:=F.SWn(_wn_w,_ma_w)*_kurs-F.SWn(_wn,_ma)
                           |?  _wn_w$2<_ma_w$2
                           || _r:=F.SMa(_wn,_ma)-F.SMa(_wn_w,_ma_w)*_kurs
                           || _r:=0
                           ?};
                           {? _r$2<>0
                           || exec('utw_pozr','fks_auto',_r,OP.AN,OP.SYM,OP.TYP,OP.DO,OP.TZ,'kurs: '+
                                   {? (_jedn:=exec('jed_wal','waluty',SLO.KOD))<>1
                                   || _k:=_kurs*_jedn; form(_k,,6)+' jednostka: '+$_jedn
                                   || form(_kurs,,6)
                                   ?},,'W');
                              _poz+=1
                           ?}
                        ?}
                     ?};
                     OP.cntx_pop()
                  ?};
                  OP.next()
               !}
            ?}
         ?}
      ?};
      SLO.next()
   !}
?};
OP.cntx_pop(); SLO.cntx_pop();
{? _poz=0 || FUN.info('Nie naliczono różnic kursowych.'@) ?}; 0


\auto_krs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formuła liczy różnice kursowe dla rozliczanego rozrachunku na podstawie wprowadzanej pozycji dokumentu.
::       Formuła szuka (na podstawie pozycji dokumentu na którym znajdował się kursor w momencie wywołania automatu)
::       rozrachunków w walucie takiej jak w pozycji dokumentu, które nie są rozliczone, a strona salda jest przeciwna
::       jak pozycji dokumentu.
::  OLD: \auto_krs/auto_krs.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh(); POZ.cntx_psh();
{? POZ.WAL & POZ.ID<>''
|| {? OPERATOR.DEPT
   || OP.index('KON_O'); OP.prefix(POZ.WAL,OPERATOR.DEPT,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK)
   || OP.index('KON'); OP.prefix(POZ.WAL,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK)
   ?};
   {? OP.first()
   || {? ((-POZ.STR='wn') & (OP.WN$2<OP.MA$2))
      || _wnw:=F.SMa(OP.WN,OP.MA)$2;
         _wnwal:=F.SWn(POZ.SUMW,_wnw)$2;
         _mawal:=F.SMa(POZ.SUMW,_wnw)$2;
         {? ~_wnwal & ~_mawal
         || {? OPERATOR.DEPT
            || OP.prefix(FINFO.NAROD,OPERATOR.DEPT,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK)
            || OP.prefix(FINFO.NAROD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK)
            ?};
            OP.first();
            _wn:=F.SMa(OP.WN,OP.MA)$2;
            exec('op_kurs','fks_auto',_wnw,_wn)
         || FUN.info('Zapisy w walucie nie bilansują się.'@)
         ?}
      |? ((-POZ.STR='ma') & (OP.WN$2>OP.MA$2))
      || _maw:=F.SWn(OP.WN,OP.MA)$2;
         _wnwal:=F.SWn(POZ.SUMW,_maw)$2;
         _mawal:=F.SMa(POZ.SUMW,_maw)$2;
         {? ~_wnwal & ~_mawal
         || {? OPERATOR.DEPT
            || OP.prefix(FINFO.NAROD,OPERATOR.DEPT,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK)
            || OP.prefix(FINFO.NAROD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK)
            ?};
            OP.first();
            _ma:=F.SWn(OP.WN,OP.MA)$2;
            exec('op_kurs','fks_auto',_maw,_ma)
         || FUN.info('Zapisy w walucie nie bilansują się.'@)
         ?}
      ?}
   ?}
?};
POZ.cntx_pop(); DOK.cntx_pop();
undefine();
1


\op_kurs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formuła liczy kurs waluty na podstawie istniejącego rozrachunku (parametry _a i _b) oraz aktualnej pozycji i
::       na tej podstawie jest wyliczana różnica kursowa i dodawane odpowiednie pozycje do dokumentu.
::   WE: _a - kwota w walucie obcej
::       _b - kwota w walucie narodowej
::  OLD: \op_kurs/auto_krs.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a & _b
|| _wsk1:=(_b/_a)$4;
   _wsk2:=(POZ.SUM/POZ.SUMW)$4;
   {? _wsk1<>_wsk2
   || _kwota:=POZ.SUMW$2;
      {? _wsk2>_wsk1
      || _sum:=(_wsk2-_wsk1)*_kwota;
         {? -POZ.STR='wn'
         || _kon:=DEFINE.k_zm; _str:='Wn'; _str1:='Ma'
         || _kon:=DEFINE.k_zw; _str:='Ma'; _str1:='Wn'
         ?}
      |? _wsk2<_wsk1
      || _sum:=(_wsk1-_wsk2)*_kwota;
         {? -POZ.STR='wn'
         || _kon:=DEFINE.k_zw; _str:='Ma'; _str1:='Wn'
         || _kon:=DEFINE.k_zm; _str:='Wn'; _str1:='Ma'
         ?}
      ?};
      exec('poz_add','dekret_aut',_sum,_str,_kon,'','',date(0,0,0),date(0,0,0),POZ.OP+' różnice kursowe','',0,0,'FORM');
      exec('poz_add','dekret_aut',_sum,_str1,POZ.KON,POZ.ID,POZ.TID,POZ.DO,POZ.TP,POZ.OP+' różnice kursowe','',0,0,
           'FORM',exec('dat_otw','dok_fks'))
   ?}
?}


\r_kurs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formula liczy roznice dodatnich i ujemnych roznic kursowych dla rozliczonych
::       rozrachunkow w walucie obcej.
::       Wewnatrz petli po walutach jest prowadzona petla po rozliczonych
::       rozrachunkach dla tej waluty i jest sprawdzana roznica dla tego rozrachunku
::       w walucie narodowej.
::   WE: [_a] - naliczanie roznicy kursowej na dzien operacji dokumentu? 1-tak [0]-nie
::  OLD: \r_kurs/automat.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
kwota:=0; rozrach:=''; pozycja:=0;
SLO.index('SL'); SLO.prefix(FINFO.SLWAL().SLU);
{? SLO.first()
|| {! |?
      {? SLO.ref<>FINFO.NAROD
      || echo('Proszę czekać. Wyznaczam różnice kursowe dla rozrachunków w %1'@[SLO.KOD]);
         {? OPERATOR.DEPT
         || OP.index('KON_O'); OP.prefix(SLO.ref(),OPERATOR.DEPT)
         || OP.index('KON'); OP.prefix(SLO.ref())
         ?};
         {? OP.first()
         || {! |?
               {? _a
               || F.RObr(OP.ref(),DOK.DTW);
                  _wn:=F.rwn$2; _ma:=F.rma$2
               || _wn:=OP.WN$2; _ma:=OP.MA$2
               ?};
               {? _wn=_ma & _wn<>0
               || rozrach:=OP.SYM; _oddz:=OP.ODD; _usym:=OP.SYM_ROK;
                  OP.cntx_psh; OP.index('KON_O'); OP.prefix();
                  {? OP.find_key(FINFO.NAROD,_oddz,OP.AN,rozrach,rozrach,_usym)
                  || {? _a
                     || F.RObr(OP.ref(),DOK.DTW);
                        _wn:=F.rwn; _ma:=F.rma
                     || _wn:=OP.WN; _ma:=OP.MA
                     ?};
                     kwota:=(_wn-_ma)$2;
                     {? kwota>0
                     ||_str:='Ma'; _konto:=DEFINE.k_zm
                     |? kwota<0
                     || kwota:=-kwota; _str:='Wn';  _konto:=DEFINE.k_zw
                     ?};
                     {? kwota<>0
                     || exec('poz_add','dekret_aut',kwota,_str,OP.AN,OP.SYM,
                             OP.TYP,OP.DO,date(),form(rozrach)+' różnice kursowe '+SLO.KOD);
                        {? -_str='wn' || _str:='Ma' || _str:='Wn' ?};
                        exec('poz_add','dekret_aut',kwota,_str,_konto,'','',
                             date(0,0,0),date(0,0,0),form(rozrach)+' różnice kursowe '+SLO.KOD,'',0,0,'FORM')
                     ?}
                  || FUN.info('Rozrachunek: '+rozrach+' Waluta: '+SSTALE.WAL().SYM+
                              '\n Brak odpowiednika w walucie narodowej !'+
                              '\n Nie można automatycznie zaksięgować różnic kursowych.')
                  ?};
                  OP.cntx_pop()
              ?};
              OP.next()
            !}
         ?}
      ?};
      SLO.next()
   !}
?};
VAR_DEL.delete('kwota','rozrach','pozycja');
0


\r_kurs0
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.41]
:: OPIS: Formula rejestrujaca dla automatu t_kurs_0 - dla rozrachunku rozliczanego (od 2002).
::  OLD: \r_kurs0/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.cntx_psh(); OP.cntx_psh();
{? POZ.size()=0
|| FUN.info('Brak pozycji dokumentu związanej \nz rozliczeniem rozrachunku walutowego.'@)
|? POZ.WAL<>null & POZ.ID<>''
|| _roznica:=0;
   OP.index('KON_O'); OP.prefix(POZ.WAL,DOK.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK);
   {? OP.first()
   || OP.prefix(FINFO.NAROD,POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK);
      {? OP.first()
      || F.RObr2(OP.ref(),DOK.DTW); _wn_w:=F.rwwn; _ma_w:=F.rwma; _wn:=F.rwn; _ma:=F.rma;
         _roznica:=exec('oblicz','fks_auto',POZ.STR,_wn_w,_ma_w,_wn,_ma,0);
         {? _roznica$2<>0
         || exec('utw_pozr','fks_auto',_roznica,POZ.KON,POZ.ID,POZ.TID,POZ.DO,POZ.TP,POZ.ID+' '
               +' różnice kursowe')
         ?}
      ?}
   ?};
   {? _roznica$2=0 || FUN.info('Nie naliczono różnic kursowych.'@) ?}
|| FUN.info('Wybrana pozycja dokumentu nie jest związana \nz rozliczeniem rozrachunku walutowego.'@)
?};
POZ.cntx_pop(); OP.cntx_pop(); 0


\rks_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.60]
:: OPIS: Formula rejestrujaca dla automatu RKS_R - roznice kursowe narastajaco do biezacego okresu.
::  OLD: \rks_r/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
wn:=wn_w:=ma:=ma_w:=_vcrkrs:=0;
SLO.cntx_psh(); SLO.index('SL'); SLO.prefix(FINFO.SLWAL().SLU);
OP.cntx_psh(); OP.index('KON_O'); ZAP_OP.cntx_psh(); ZAP_OP.index('OP');
:: Loop dla kolejnych walut
{? SLO.first()
|| {! |?
      {? SLO.ref()<>FINFO.NAROD
      || OP.prefix(SLO.ref(),DOK.ODD);
:: Loop dla kolejnych rozrachunkow w danej walucie
         {? OP.first()
         || {! |?
               VAR_DEL.delete('StornoKrs'); wn_w:=ma_w:=wn:=ma:=_vrkrs:=0;
               ZAP_OP.prefix(OP.ref());
:: Loop dla kolejnych zapisow rozrachunku w danej walucie
               {? ZAP_OP.first() & exec('is_sal','fks_auto')
               || {! |?
                     {? ZAP_OP.DATA<=DOK.DTW & (ZAP_OP.RK='N' | ZAP_OP.RK='')
:: Naliczenie roznic
                     || _vrkrs+=exec('nal_rozn','fks_auto'); exec('sum_obr','fks_auto')
                     ?};
                     ZAP_OP.next()
                  !};
:: Uwzglednienie roznic naliczonych wczesniej
                  {? _vrkrs || _vrkrs-=exec('sum_rkrs','fks_auto',DOK.DTW,'T') ?};
:: Storno różnic z wyceny bilanowej
                  {? _vrkrs || _vrkrs-=exec('sum_rkrs','fks_auto',DOK.DTW,'W') ?};
                  {? wn_w=ma_w & wn<>ma || _vrkrs+=(ma-wn) ?};

:: Korekta roznic naliczonych wczesniej
:: sytuacja, gdy należy wystornować naliczone wcześniej różnice kursowe
                  _SaldoinWal:=OP.WN=OP.MA;
                  {? _SaldoinWal
                  || OP.cntx_psh();
                     OP.index('KON_O'); OP.prefix(FINFO.NAROD,OP.ODD,OP.AN,OP.SYM,OP.SYM,OP.SYM_ROK);
                     _SaldoinPln:={? OP.first() || fabs(OP.WN-OP.MA) ?};
                     OP.cntx_pop();
                     {? _SaldoinPln
                     || _TmpVrkrs:=exec('sum_rkrs','fks_auto',DOK.DTW,'T');
                        {? _TmpVrkrs=_SaldoinPln
                        || _vrkrs:=_TmpVrkrs; StornoKrs:=1
                        ?}
                     ?}
                  ?};

:: Utworzenie zapisu
                  {? _vrkrs$2<>0
                  || exec('open','rozrach',SSTALE.AR().KOD+form(SSTALE.AO().NR,-2));
                     exec('utw_pozr','fks_auto',_vrkrs,OP.AN,OP.SYM,OP.TYP,OP.DO,OP.TZ,
                        OP.SYM+' różnice kursowe');
                     _vcrkrs+=1
                  ?}
               ?};
               OP.next()
            !}
         ?}
      ?};
      SLO.next()
   !}
?};
{? ~_vcrkrs || FUN.info('Nie naliczono różnic kursowych.'@) ?};
SLO.cntx_pop(); OP.cntx_pop(); ZAP_OP.cntx_pop();
&wn; &ma; &wn_w; &ma_w; 0


\is_sal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.60]
:: OPIS: Formula sprawdza czy na rozrachunku sa salda niezerowe oraz czy sa zapisy w danym roku
::       (bez BO)
::   WY: 0 - nie ma sald niezerowych lub sa ale zapisy sa tylko w okresie BO;
::       1 - sa salda niezerowe i sa zapisy poza okresem BO
::  OLD: \is_sal/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
OP.cntx_psh(); OP.prefix(FINFO.NAROD,DOK.ODD,OP.AN,OP.SYM,OP.SYM,OP.SYM_ROK);
{? OP.first() || F.RObr(OP.ref(),DOK.DTW); _ret:=(F.rma$2<>F.rwn$2) ?};
{? _ret
|| _ret:=0;
   ZAP_OP.cntx_psh();
   {? ZAP_OP.first()
   || {! |?
         {? ZAP_OP.OKRO().POCZ<>date(0,0,0) & ZAP_OP.OKRO().KON<>date(0,0,0) || _ret:=1 ?};
         ~_ret & ZAP_OP.next()
      !}
   ?};
   ZAP_OP.cntx_pop()
?};
OP.cntx_pop(); _ret


\nal_rozn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.60]
:: OPIS: Formula obliczajaca roznice kursowa.
::  OLD: \nal_rozn/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
OP.cntx_psh(); ZAP_OP.cntx_psh(); DOK.cntx_psh(); POZ.cntx_psh(); POW.cntx_psh(); AN.cntx_psh();
exec('zap_mask','rozrach'); ZAP_OP.POZDOK();
{? wn_w$2<>0 | wn$2<>0 | ma_w$2<>0 | ma$2<>0
|| POZ.cntx_psh(); ZAP_OP.POZDOK();
   _str:=POZ.STR;
   {? ZAP_OP.PAR_POZ<>null
   || {? ZAP_OP.WN
      || POZ.SUMW:=ZAP_OP.WN; _str:='Wn'
      || POZ.SUMW:=ZAP_OP.MA; _str:='Ma'
      ?}
    ?};
   _ret:=exec('oblicz','fks_auto',_str,wn_w,ma_w,wn,ma,1);
   {? _ret>0 || wn+=_ret || ma-=_ret ?};
   POZ.cntx_pop()
?};
OP.cntx_pop(); ZAP_OP.cntx_pop(); DOK.cntx_pop(); POZ.cntx_pop(); POW.cntx_pop(); AN.cntx_pop();
_ret


\sum_obr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.60]
:: OPIS: Formula sumujaca obroty na rozrachunku.
::  OLD: \sum_obr/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAP_OP.WN || wn_w+=ZAP_OP.WN; wn+=ZAP_OP.WN2 || ma_w+=ZAP_OP.MA; ma+=ZAP_OP.MA2 ?}; 1


\sum_rkrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.60]
:: OPIS: Formula sumujaca wczesniej naliczone roznice kursowe.
::   WE: _a: data operacji dokumentu
::       _b: typ naliczonej róznicy kursowej W - wycena bilansowa, T - zrealizowana róznica kursowa
::  OLD: \sum_rkrs/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
{? var_pres('_b')<=0 || _b:='T' ?};
OP.cntx_psh(); ZAP_OP.cntx_psh(); POZ.cntx_psh(); ROK_F.cntx_psh(); OKRO_F.cntx_psh();
:: Wyszukanie zapisu w walucie narodowej (walucie jednostki ksiegowej)
OP.index('KON_O'); OP.prefix(FINFO.NAROD,OP.ODD,OP.AN,OP.SYM,OP.SYM,OP.SYM_ROK);
{? OP.first()
|| _op:=OP.ref(); ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref());
   {? ZAP_OP.first()
   || {! |?
         _msk:=ZAP_OP.OKRO().ROK().KOD+form(ZAP_OP.OKRO().NR,-2);
         POZ.use('pozy'+_msk);
         ZAP_OP.POZDOK();
         _ok:={? _b='T' || ZAP_OP.RK='T' |? _b='W' ||  ZAP_OP.RK='W' || 0 ?};
         {? ZAP_OP.DATA<=_a & POZ.WAL=null &  _ok
         || {? POZ.STR='Wn' || _ret+=ZAP_OP.WN || _ret-=ZAP_OP.MA ?}
         ?};
         ZAP_OP.next()
      !}
   ?}
?};
OP.cntx_pop(); ZAP_OP.cntx_pop(); POZ.cntx_pop(); ROK_F.cntx_pop(); OKRO_F.cntx_pop();
_ret


\run_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Wykonanie automatu dla dokumentu
::----------------------------------------------------------------------------------------------------------------------
AUTOKSIE.index('TYP'); AUTOKSIE.prefix(SSTALE.AR,'P',schDOK,);
{? AUTOKSIE.first()
|| P_AUTOKS.index('UNIK'); P_AUTOKS.prefix();
   {? P_AUTOKS.find_key(DOK.REJ,AUTOKSIE.ref(),null) | P_AUTOKS.find_key(null,AUTOKSIE.ref(),DOK.DOK_REJ)
   || {? AUTOKSIE.A='T'
      || POZ.index('DOK'); POZ.prefix(DOK.ref());
         exec('oblicz_f','dok_fks',schDOK)
      || FUN.info('Schemat dokumentu: \'%1\' nie jest zaakceptowany.'@[schDOK])
      ?}
   || FUN.info( 'Schemat dokumentu: %1 nie jest powiązany\n'
                    'z rejestrem \'%2\' ani rodzajem dokumentu \'%3\'.'@[schDOK,DOK.REJ().KOD,DOK.DOK_REJ().NAZ])
   ?}
|| FUN.info('Nie znaleziono schematu dokumentu: %1.'@[schDOK])
?}


\sym_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula nadajaca symbol dokumentu w rejestrze
::  OLD: \sym_dok/skid.fml
::----------------------------------------------------------------------------------------------------------------------
_nr:={? DOK.NR=0 || exec('dok_nr','fks_auto') || DOK.NR ?};
REJ.cntx_psh();
_sym:=DOK.REJ().KOD+'/'+form(_nr,-5,0,'00')+'/'+$SSTALE.AO().NR+'/'+SSTALE.AR().NAZ;
REJ.cntx_pop();
_sym


\dok_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula szukajaca pierwszego wolnego numeru w rejestrze
::  OLD: \dok_nr/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.NR=0
|| DOK.cntx_psh();
   DOK.index('REJ'); DOK.prefix(DOK.REJ);
   _nr:={? ~DOK.last() || 1 || DOK.NR+1 ?};
   DOK.cntx_pop()
|| _nr:=DOK.NR
?};
_nr


\poz_from_excel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Importuje pozycje dokumentu z excela
::   WE: [_a] - tryb cichy:  1 -bez pytania gdy są załączniki, importuje pierwszy, gdy ich brak to jest pytanie
::                           2 -bez pytania gdy są załączniki, importuje pierwszy, gdy ich brak bez pytań
::                           3 -bez pytania gdy są załączniki, importuje wszystkie, gdy ich brak bez pytań
::                          [0]-pełny dialog
:: ~OST: INCLIEXEC,INFCOPY,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=0 ?};
_is_zal:=0; _file:='';
_sep:=exec('sep','#file',1);
_interm:=exec('interm','#system');
_tmpdir:=fmk_tmp_dir(0);
{? type_of(_tmpdir) <> type_of(~~)
|| _dir:=_tmpdir.get_path
|| FUN.emsg('Nie udało się utworzyć katalogu tymczasowego po stronie serwera.'@);
   return()
?};

DOKUM.cntx_psh();
DOKUM.index('DOKUM'); DOKUM.prefix(REF.FIRMA,$DOK.ref());
{? DOKUM.first()
|| {!
   |? _is_zal:=exec('is_poz_excel','fks_auto');
      _is_zal=0 & DOKUM.next()
   !}
?};
DOKUM.cntx_pop();
_pyt:=0;
{? _is_zal
|| {? _a
   || _pyt:=2
   || _pyt:=FUN.choice('Wybierz typ operacji'@,2,'Import z &pliku'@,'Import z &załącznika'@,'Utworzenie pliku'@)
   ?}
|? _a<>2 & _a<>3
|| _pyt:=FUN.choice('Wybierz typ operacji'@,1,'Import z &pliku'@,'Utworzenie pliku'@);
   {? _pyt=2 || _pyt:=3 ?}
?};
{? _pyt
|| {? _pyt=1
   || _fn:=dlg_upload(_dir,0,'.xlsx');
      {? _fn<>''
      || _file:=_dir+_sep+_fn;
         {? ~_interm
         || _dest:=tmp_dir()+_sep+_fn;
            {? fcopy(_file,'@'+_dest,0,0,1)
            || _file:=_dest
            || _file:=''
            ?}
         ?}
      ?}
   |? _pyt=2
   || {? ~_interm
      || _dir:=tmp_dir()
      ?};
      _dokum:=tab_tmp(1,
         'BLOB','BLOBRAW',,
         'OPIS','STRING[255]',
      );
      DOKUM.cntx_psh();
      DOKUM.index('DOKUM'); DOKUM.prefix(REF.FIRMA,$DOK.ref());
      {? DOKUM.first()
      || {!
         |? {? exec('is_poz_excel','fks_auto')
            || _dokum.BLOB:=DOKUM.DOKUM;
               _dokum.OPIS:=DOKUM.KR_OP;
               _dokum.add()
            ?};
            DOKUM.next()
         !}
      ?};
      DOKUM.cntx_pop();
      {? _dokum.first() & _a=0 & _dokum.next()
      || _o:=_dokum.mk_sel('Załączniki'@,'P',,'#edokumexcel',,,,,'U');
         _dokum.win_fld(_o,,'BLOB',,,50);
         _dokum.win_fld(_o,,'OPIS',,,60);
         _dokum.win_act(_o,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
         _dokum.win_sel(_o);
         _pyt:={? _dokum.select() || 2 ?}
      ?}
   ||
      _filtr:='Excel (*.xlsx)|*.xlsx';
      {? ~_interm
      || _dir:=tmp_dir()
      ?};
      {? _dir<>''
      || _dir+='/pozycje.xlsx';
         {? exec('poz2excel','fks_auto',_dir)
         || {? ~_interm
            || cli_exec(_dir)
            || dlg_save(_dir,0)
            ?}
         ?}
      ?};
      _file:=''
   ?};
   {? _pyt=1 | _pyt=2
   || {!
      |? {? _pyt=2
         || _fn:=_dir+'/'+_dokum.bl_info('BLOB','NAME');
            {? _dokum.bl_get('BLOB',{? ~_interm || '@' || '' ?}+_fn,0)
            || _file:=_fn
            ?}
         ?};
         {? _file<>''
         || {? _file+5<>'.xlsx' & _file+4<>'.xls'
            || FUN.info('Nieprawidłowe rozszerzenie pliku.'@)
            || exec('Xls','object');
               {? ~Xls.open(_file)
               || FUN.info('Nie udało się otworzyć pliku MS Excel.'@)
               || _hlp:=exec('poz_excel_info','fks_auto');
                  POZ.cntx_psh();
                  _lp:={? POZ.last() || POZ.POZ || 0 ?};
                  POZ.cntx_pop();
                  {? _hlp.START=-1 | ~_hlp.TAB.first()
                  || FUN.info('Nieprawidłowy format pliku MS Excel.'@)
                  || _tab:=_hlp.TAB;
                     _lastRow:=Xls.lastRow();
                     PROGRESS.set(_lastRow-_hlp.START+1,'Import pozycji dokumentu księgowego ...');
                     {! _row:=_hlp.START.._lastRow
                     |! Xls.getRow(_row);
                        POZ.blank(1);
                        POZ.DOK:=DOK.ref();
                        POZ.ODD_KS:=DOK.ODD;
                        {? _tab.first()
                        || {!
                           |? _value:=Xls.getValue(_tab.NR);
                              {? _tab.TYP=type_of('')
                              || _val:=STR.w952maz(_value)
                              |? _tab.TYP=type_of(1)
                              || _val:=#_value
                              |? _tab.TYP=4
                              || _val:=date(#(_value+4),#(3-_value-5),#(2+_value))
                              |? _tab.TYP=7
                              || SLU.cntx_psh();
                                 SLO.index('SL'); SLO.prefix(XINFO.SLWAL,_value,);
                                 _val:={? SLO.first() || SLO.ref() || null ?};
                                 SLU.cntx_pop()
                              || _val:=~~
                              ?};
                              {? _val<>~~
                              || ($(_tab.FLD+':=_a'))(_val)
                              ?};
                              _tab.next()
                           !}
                        ?};
                        {? POZ.ID<>'' & POZ.DATA_R=date(0,0,0) || POZ.DATA_R:=exec('dat_otw','dok_fks') ?};
                        POZ.ODD:={? POZ.ID<>'' || DOK.ODD || null ?};
                        POZ.KOM:=exec('koment','konto',POZ.KON);
                        _wn:=POZ.WN:=POZ.WN$2;
                        _ma:=POZ.MA:=POZ.MA$2;
                        {? POZ.WAL=FINFO.NAROD || POZ.WAL:=null ?};
                        {? POZ.KON<>''
                        || {? _wn
                           || POZ.POZ:=_lp+=1;
                              POZ.STR:='Wn';
                              POZ.SUM:=_wn;
                              {? POZ.WAL || POZ.SUMW:=wnw ?};
                              POZ.add()
                           ?};
                           {? _ma
                           || POZ.POZ:=_lp+=1;
                              POZ.STR:='Ma';
                              POZ.SUM:=_ma;
                              {? POZ.WAL || POZ.SUMW:=maw ?};
                              POZ.add()
                           ?}
                        ?};
                        PROGRESS.next()
                     !};
                     PROGRESS.close();
                     VAR_DEL.delete('wnw','maw');
                     &_tab
                  ?};
                  &_hlp
               ?}
            ?}
         || FUN.info('Nie został wskazany plik do importu.'@)
         ?};
         _pyt=2 & _a=3 & _dokum.next()
      !};
      exec('suma_dok','dok_fks')
   ?}
?};
1


\is_poz_excel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Czy plik zalacznia zawiera dane do importu pozycji
:: ~OST: INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_name:=DOKUM.bl_info('DOKUM','NAME');
{? _name+4='.xls' | _name+5='.xlsx'
|| _interm:=exec('interm','#system');
   {? _interm
   || _tmpdir:= fmk_tmp_dir(0);
      {? type_of(_tmpdir) <> type_of(~~)
      || _dir:=_tmpdir.get_path
      || FUN.emsg('Nie udało się utworzyć katalogu tymczasowego po stronie serwera.'@);
         return(0)
      ?}
   || _dir:=tmp_dir()
   ?};
   _fn:=_dir+'/'+DOKUM.bl_info('DOKUM','NAME');
   {? DOKUM.bl_get('DOKUM',{? ~_interm || '@' || '' ?}+_fn,0)
   || exec('Xls','object');
      Xls.open(_fn) & Xls.getName('POZ.KON')
   ?}
?}


\poz_excel_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Tworzy tabelę z informacją o kolumnach w excelu
::   WE: [_a] - nr zakładki excela
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new('TAB','START');
_hlp:=_obj.TAB:=tab_tmp(2,
   'NR','INTEGER',,
   'FLD','STRING[10]',,
   'TYP','INTEGER',
);
_obj.START:=-1;
_fnd:='POZ.KON,POZ.WNW,POZ.MAW,POZ.WAL,POZ.KURS,POZ.WN,POZ.MA,POZ.ID,POZ.TID,POZ.DO,POZ.TP,POZ.DATA_R,POZ.OP';
_tab:=spli_str(_fnd,',');
{? var_press('_a')<=0
|| _sheet:='';
   _ok:=1;
   {! _el:=1..obj_len(_tab)
   |? _ok
   |! {? Xls.getName(_tab[_el])
      || _row:=Xls.nameRow();
         _col:=Xls.nameCol();
         _sh:=Xls.nameSheet();
         {? _sheet<>'' & _sh<>_sheet
         || _ok:=0;
            _obj.START:=-1
         ?};
         _sheet:=_sh;
         {? _row>_obj.START || _obj.START:=_row+1 ?};
         _hlp.blank(1);
         _hlp.NR:=_col;
         _hlp.FLD:={? _tab[_el]+3='WNW' | _tab[_el]+3='MAW' || (-(_tab[_el]+3)) || _tab[_el] ?};
         _hlp.TYP:={? _tab[_el]+3='WNW' | _tab[_el]+3='MAW' || type_of(1) || ($('type_of('+_tab[_el]+')'))() ?};
         _hlp.add()
      ?}
   !};
   {? _sheet<>''
   || Xls.getSheet(_sheet)
   ?}
|| {? Xls.getSheet(_a)
   || {! _row:=Xls.firstRow()..Xls.lastRow()
      |? _obj.START=-1
      |! {? Xls.getRow(_row)>0
         || {! _col:=0..Xls.lastCell()
            |! _value:=Xls.getComm(_col);
               _ok:=0;
               {! _ti:=1..obj_len(_tab)
               |? _ok=0
               |! {? _value*_tab[_ti]>0
                  || _hlp.blank(1);
                     _hlp.NR:=_col;
                     _hlp.FLD:={? _tab[_ti]+3='WNW' | _tab[_ti]+3='MAW' || '_'+(-(_tab[_ti]+3)) || _tab[_ti] ?};
                     _hlp.TYP:={? _tab[_ti]+3='WNW' | _tab[_ti]+3='MAW' || type_of(1) || ($('type_of('+_tab[_ti]+')'))() ?};
                     _hlp.add();
                     _obj.START:=_row+1;
                     _ok:=1
                  ?}
               !}
            !}
         ?}
      !}
   ?}
?};
_obj


\poz2excel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Utworzenie excela z pozycji dokumentu księgowego
::   WE: _a - scieżka do pliku
::----------------------------------------------------------------------------------------------------------------------
_typ:={? _a+4='.xls' || 'xls' || 'xlsx' ?};
exec('Xls','object');
{? Xls.create(_typ) & Xls.addSheet('')
|| _bold:=Xls.addStyle(); Xls.setStyle('bold');
   _kw:=Xls.addStyle(); Xls.setStyle('format:# ##0.00');
   Xls.addRow(0);
   Xls.addCell(0,'Konto'); Xls.setName('POZ.KON'); Xls.setCellStyle(_bold);
   Xls.addCell(1,'Wn'); Xls.setName('POZ.WN'); Xls.setCellStyle(_bold);
   Xls.addCell(2,'Ma'); Xls.setName('POZ.MA'); Xls.setCellStyle(_bold);
   Xls.addCell(3,'Waluta'); Xls.setName('POZ.WAL'); Xls.setCellStyle(_bold);
   Xls.addCell(4,'Kurs'); Xls.setName('POZ.KURS'); Xls.setCellStyle(_bold);
   Xls.addCell(5,'Wn waluta'); Xls.setName('POZ.WNW'); Xls.setCellStyle(_bold);
   Xls.addCell(6,'Ma waluta'); Xls.setName('POZ.MAW'); Xls.setCellStyle(_bold);
   Xls.addCell(7,'Rozrachunek'); Xls.setName('POZ.ID'); Xls.setCellStyle(_bold);
   Xls.addCell(8,'Typ rozrachunku'); Xls.setName('POZ.TID'); Xls.setCellStyle(_bold);
   Xls.addCell(9,'Data otwarcia'); Xls.setName('POZ.DO'); Xls.setCellStyle(_bold);
   Xls.addCell(10,'Termin płatności'); Xls.setName('POZ.TP'); Xls.setCellStyle(_bold);
   Xls.addCell(11,'Data rozliczenia'); Xls.setName('POZ.DATA_R'); Xls.setCellStyle(_bold);
   Xls.addCell(12,'Opis'); Xls.setName('POZ.OP'); Xls.setCellStyle(_bold);
   POZ.cntx_psh();
   POZ.index('DOK'); POZ.prefix(DOK.ref());
   {? POZ.first()
   || PROGRESS.set(POZ.size(),'Eksport pozycji dokumentu księgowego ...');
      {!
      |? Xls.addRow(POZ.POZ);
         Xls.addCell(0,POZ.KON);
         Xls.addCell(1,POZ.WN); Xls.setCellStyle(_kw);
         Xls.addCell(2,POZ.MA); Xls.setCellStyle(_kw);
         Xls.addCell(3,{? POZ.WAL || POZ.WAL().KOD || FINFO.NAROD().KOD ?});
         {? POZ.WAL
         || Xls.addCell(4,POZ.KURS);
            Xls.addCell(5,{? POZ.STR='Wn' || POZ.SUMW || 0 ?}); Xls.setCellStyle(_kw);
            Xls.addCell(6,{? POZ.STR='Ma' || POZ.SUMW || 0 ?}); Xls.setCellStyle(_kw)
         ?};
         {? POZ.ID<>''
         || Xls.addCell(7,POZ.ID);
            Xls.addCell(8,POZ.TID);
            Xls.addCell(9,POZ.DO);
            Xls.addCell(10,POZ.TP);
            Xls.addCell(11,POZ.DATA_R)
         ?};
         Xls.addCell(12,POZ.OP);
         PROGRESS.next();
         POZ.next()
      !};
      {! _i:=0..12 |! Xls.autoSizeColumn(_i) !};
      PROGRESS.close()
   ?};
   POZ.cntx_pop();
   Xls.save(_a)
?}


\obr_from_excel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Oblicza obroty dla podanej maski z pozycji w pliku excel
::   WE: _a - ref bazowy załącznika np: DOK.ref()
::       _b - maska konta
::       _c - strona: WN lub MA
::   WY: obroty
::----------------------------------------------------------------------------------------------------------------------
_obr:=0;
_fn:='';
DOKUM.cntx_psh();
DOKUM.index('DOKUM'); DOKUM.prefix(REF.FIRMA,$_a);
{? DOKUM.first()
|| {!
   |? _name:=DOKUM.bl_info('DOKUM','NAME');
      {? _name+4='.xls' | _name+5='.xlsx'
      || _tmpdir:= fmk_tmp_dir(0);
         {? type_of(_tmpdir) <> type_of(~~)
         || _file:=_tmpdir.get_path
         || FUN.emsg('Nie udało się utworzyć katalogu tymczasowego po stronie serwera.'@);
            DOKUM.cntx_pop();
            return()
         ?};
         _fn:=_file+'/'+_name;
         {? ~DOKUM.bl_get('DOKUM',_fn)
         || _fn:=''
         ?}
      ?};
      _fn='' & DOKUM.next()
   !}
?};
DOKUM.cntx_pop();
{? _fn<>''
|| exec('Xls','object');
   {? Xls.open(_fn)
   || _fld:='POZ.KON,POZ.'+(~-_c);
      _tab:=spli_str(_fld,',');
      _col:=obj_new(obj_len(_tab));
      _row:=-1;
      _sheet:='';
      _ok:=1;
      {! _ff:=1..obj_len(_tab)
      |? _ok=1
      |! {? Xls.getName(_tab[_ff])
         || _col[_ff]:=Xls.nameCol();
            _r:=Xls.nameRow();
            {? _r>_row || _row:=_r ?};
            {? _sheet=''
            || _sheet:=Xls.nameSheet()
            |? _sheet<>Xls.nameSheet()
            || _ok:=0
            ?}
         ?}
      !};
      {? _ok & _row>-1
      || Xls.getSheet(Xls.nameSheet());
         _sep:={? SSTALE.AR().SEP=',' || '' || ROK_F.SEP ?};
         {! _rr:=_row+1..Xls.lastRow()
         |! {? Xls.getRow(_rr)>0
            || _kon:=Xls.getValue(_col[1]);
               {? exec('wmasce','konto',_b,_kon,_sep)
               || _obr+=#Xls.getValue(_col[2])
               ?}
            ?}
         !}
      ?}
   ?}
?};
_obr


\kopiuj_stale
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula kopiuje stale ustawione dla naglowka schematu dekretacji.
::       Formula szuka odpiwednika rejestru w nowym roku obrachunkowym.
::   WE: _a - ref dotychczasowego naglowka schematu dekretacji
::       _b - ref nowego naglowka schematu dekretacji
::       _c - ref nowego roku obrachunkowego
::   WY: 1 - udalo sie skopiowac stale dla wybranego schematu dekretacji, 0 - w p.p
::  OLD: \kopiuj_stale/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
DEK_STAL.index('DEK_STAL');
DEK_STAL.prefix(_a);
REJ.index('KOD');
REJ.prefix();
DOK_REJ.index('NAZ');
DOK_REJ.prefix();
ODD.prefix();
_rr:=1;
{? DEK_STAL.first()
|| {! |?
      DEK_STAL.cntx_psh();
      DEK_STAL.prefix();
      DEK_STAL.REJ();
      _kod:=REJ.KOD;
      _odd:=REJ.ODD;
      {? REJ.find_key(_c,_odd,_kod,)
      || _rej:=REJ.ref();
         {? DEK_STAL.DOK_REJ<>null
         || _naz:=DEK_STAL.DOK_REJ().NAZ;
            {? DOK_REJ.find_key(_rej,_naz)
            || DEK_STAL.DEK_NAG:=_b;
               DEK_STAL.REJ:=_rej;
               DEK_STAL.DOK_REJ:=DOK_REJ.ref();
               _rr:=DEK_STAL.add()
            ?}
         || DEK_STAL.DEK_NAG:=_b;
            DEK_STAL.REJ:=_rej;
            _rr:=DEK_STAL.add()
         ?}
      ?};
      DEK_STAL.cntx_pop();
      _rr & DEK_STAL.next()
   !}
?};
_rr


\tmppv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Tworzy obiekt na potrzeby kopiowanie powiązania pozycji z pozycjami VAT
::  OLD: \tmppv/storno.fml
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new(
   'TAB',
   'add','find'
);
_obj.TAB:=tab_tmp(1,
   'OLD','STRING[16]','Ref stary',
   'NEW','STRING[16]','Ref nowy'
);
_obj.add:="
   _tab:=.TAB;
   _tab.OLD:=_a;
   _tab.NEW:=_b;
   _tab.add()
";
_obj.find:="
   _tab:=.TAB;
   _ref:=null;
   {? _tab.find_key(_a,)
   || {? 4+_a='pozy'
      || POZ.cntx_psh();
         POZ.use(8+_tab.NEW);
         POZ.prefix();
         {? POZ.seek(BIT.sqlint(_tab.NEW),)
         || _ref:=POZ.ref()
         ?};
         POZ.cntx_pop()
      |? 4+_a='pozv'
      || VPOZ.cntx_psh();
         VPOZ.use(8+_tab.NEW);
         VPOZ.prefix();
         {? VPOZ.seek(BIT.sqlint(_tab.NEW),)
         || _ref:=VPOZ.ref()
         ?};
         VPOZ.cntx_pop()
      ?}
   ?};
   _ref
";
_obj


\utw_pv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Utworzenie powiązań między pozycjami a pozycjami VAT (tabela P_V).
::  OLD: \utw_pv/storno.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TmpPV')<=0 || return ?};
exec('open','fks_ved',rok,okr);
POZ.index('DOK'); POZ.prefix(dok);
P_V.index('P_V'); P_V.prefix();
{? POZ.first()
|| {!
   |? P_V.prefix(POZ.ref());
      {? P_V.first()
      || {!
         |? _poz:=P_V.POZ;
            _vpoz:=P_V.VPOZ;
            P_V.cntx_psh();
            exec('open','fks_ved',SSTALE.AR().KOD,SSTALE.AO().NR);
            P_V.prefix();
            P_V.blank(1);
            P_V.POZ:=TmpPV.find($_poz);
            P_V.VPOZ:=TmpPV.find($_vpoz);
            {? P_V.POZ & P_V.VPOZ
            || P_V.add()
            ?};
            P_V.cntx_pop();
            P_V.next()
         !}
      ?};
      POZ.next()
   !}
?}


\usun_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [22.26]
:: OPIS: Usuwa poprzedni dokument po skopiowaniu go do nowego okresu
::----------------------------------------------------------------------------------------------------------------------
exec('open','fks_ved',rok,okr);
{? DOK.seek(dok)
|| _ar:=SSTALE.AR;
   _ao:=SSTALE.AO;
   SSTALE.AR:=rok_ref;
   SSTALE.AO:=okr_ref;
   exec('dok_usun','dok_fks1');
   SSTALE.AR:=_ar;
   SSTALE.AO:=_ao
?};
1


\utw_dokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [22.26]
:: OPIS: Tworzy kopię powiązanych edokumentów (DOKUM)
::   WE: _a - wskazanie na skopiowany dokument księgowy
::       _b=-1 - Storno wybranego dokumentu (na minus)
::       _b=2 - Storno wybranego dokumentu (zm. stron)
::       _b=1 - Kopia wybranego dokumentu
::       _b=3 - Przeniesienie wybranego dokumentu do innego okresu
::----------------------------------------------------------------------------------------------------------------------
DOKUM.cntx_psh();
DOKUM.index('DOKR');
DOKUM.prefix(REF.FIRMA,$dok,);
{? DOKUM.first()
|| {!
   |? _zref:=DOKUM.ref();
      _memo_o:=DOKUM.memo_txt(,1,'OPIS');
      _memo_u:=DOKUM.memo_txt(,1,'UPRAW');
      DOKUM.REFSQL:=$_a;
      DOKUM.DOKR:=$_a;
      _wput:=1;
      DOKUM.cntx_psh(); DOKUM.prefix();
      {? _b<>3
      || {? DOKUM.add()
         || _nref:=DOKUM.ref();
            {? _memo_o<>''
            || DOKUM.memo_set(_memo_o,'OPIS');
               DOKUM.memo_put(,'OPIS')
            ?};
            {? _memo_u<>''
            || DOKUM.memo_set(_memo_u,'UPRAW');
               DOKUM.memo_put(,'UPRAW')
            ?};
            DOKUMZ.cntx_psh();
            DOKUMZ.index('DOK'); DOKUMZ.prefix(_zref);
            {? DOKUMZ.first()
            || {! |?
                  DOKUMZ.cntx_psh(); DOKUMZ.prefix();
                  DOKUMZ.DOK:=_nref;
                  DOKUMZ.add();
                  DOKUMZ.cntx_pop();
                  DOKUMZ.next()
               !}
            ?};
            DOKUMZ.cntx_pop()
         ?}
      || _wput:=DOKUM.put();
         EDI_I.cntx_psh();
         _oldm:=($(DOKUM.DATA~1))+2;
         _newm:=(EDI_I.name())+2;
         {? _oldm<>_newm || _maska:=1 || _maska:=0 ?};
         {? _maska || EDI_I.use('edi_i_'+_oldm) ?};
         EDI_I.index('DOK'); EDI_I.prefix($dok);
         {? EDI_I.first()
         || {! |?
               EDI_I.cntx_psh();
               EDI_I.prefix();
               EDI_I.DOK:=$_a;
               _ediiput:=EDI_I.put();
               EDI_I.cntx_pop();
               EDI_I.first() & _ediiput
            !}
         ?};
         EDI_I.cntx_pop()
      ?};
      DOKUM.cntx_pop();
      {? _b<>3
      || DOKUM.next()
      || DOKUM.first() & _wput
      ?}
   !}
?};
DOKUM.cntx_pop()

:Sign Version 2.0 jowisz:1045 2024/01/18 18:05:34 a43114aceaa0c66aafdf2ae9f10406b3effd419f3f2db8bca20fa8cd15269c6558578e6c66b37cf4046511e0a72328f0d6f9a045b7f10cad2ee0cb92ff71928d2ad4eedf9dddf23c71c5811938dd897d4d75b27e926bef0da431829bb76d9de1dc7583053757ad7dbf2f1b53a7b1f8f7b9dae12f14fd054e88c9fb59b7b016b5
