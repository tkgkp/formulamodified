:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: zbiorowk.fml
:: Utworzony: 2016-04-13
:: Autor: jaws
::======================================================================================================================
:: Zawartosc: Plik zawiera formuły obsługujące zestawienia zbiorcze systemu.
::======================================================================================================================


\done
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Obsługa akcji zakończ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
sel_exit()


\otworz_zb_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Otwiera zbiór tabeli ZB_DEF
::   WE: _a [_O] - wskazanie listy płac
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SEEK.O:=_a;
_lt:=-SEEK.O().LT;
_mask:='____';
{? _lt<>''
|| _mask:=4+(1-_lt)
?};
ZB_DEF.use('d_zb'+_mask)


\otworz_zb_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Otwiera zbiór tabeli ZB_WART
::   WE: _a [_O] - wskazanie listy płac
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SEEK.O:=_a;
_lt:=-SEEK.O().LT;
_mask:='_______';
{? _lt<>''
|| _mask:=1-_lt
?};
ZB_WART.use('q'+_mask)


\zhist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Ustala warość pola w wierszu przebiegu zatrudnienia właściwym na ostatni dzień miesiąca zestawienia zbirczego.
::   WE: _a [STRING] - akronim pola tabeli H
::   WY: wartość pola lub tekst 'Brak'
::----------------------------------------------------------------------------------------------------------------------
H.index('_HISTKOD');
H.prefix(P.ref(),'Z');
{? H.find_le(date(ZB_OPIS.LISTA().R,O.M,0))
|| ($('H.'+_a))()
|| 'Brak'
?}


\oddzwyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Zwraca symbol jednostki nadrzędnej w stosunku do jednostki, w której pracownik jest zatrudniony.
::   WE: brak
::   WY: symbol jednostki nadrzędnej lub tekst pusty
::----------------------------------------------------------------------------------------------------------------------
_ret:='Brak'@;
_sch:=exec('domyslny','schemat','PODZORG');
_wyd:=exec('zhist','zbiorowk','WYDZIAL');
{? _sch<>null & type_of(_wyd)=type_of(null) & _wyd<>null
|| _def:=exec('szukaj_ud_def','schemat',_sch,_wyd);
   {? _def.get(_def.UD_DEF)
   || _ret:=_def.SYMBOL
   ?}
?};
_ret


\hist_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR
:: OPIS: Ustala konto kosztów w tabeli P_KK na ostatni dzień roku i miesiąca zestawienia zbiorczego.
::   WE: _a - akronim pola z tabeli KK bez nazwy tabeli: SYM lub NAZWA
::   WY: zwraca reprezentanta konta kosztów (symbol lub opis) lub napis "Brak konta kosztów"
::----------------------------------------------------------------------------------------------------------------------
_ret:='Brak konta kosztów'@;
P_KK.index('OD');
P_KK.prefix(P.ref());
{? P_KK.find_le(date(ZB_OPIS.LISTA().R,O.M,0))
|| _ret:=($('P_KK.'+_a))()
?};
_ret


\zb_typ_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed dołączeniem tabeli ZB_TYP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_numer:=1;
ZB_TYP.cntx_psh();
ZB_TYP.index('NUMER');
ZB_TYP.prefix();
{? ZB_TYP.last()
|| _numer+=ZB_TYP.NUMER
?};
ZB_TYP.cntx_pop();
ZB_TYP.NUMER:=_numer


\zb_typ_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed poprawieniem tabeli ZB_TYP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZB_TYP.NUMER>=1 & ZB_TYP.NUMER<=ZB_TYP.size()


\zb_typ_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po poprawieniu tabeli ZB_TYP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};

{? (ZB_TYP.NUMER-bfld('NUMER'))<>0
|| _ref:=ZB_TYP.ref();
   ZB_TYP.cntx_psh();
   ZB_TYP.index('NUMER');
   ZB_TYP.prefix(ZB_TYP.NUMER);
   _loop:=ZB_TYP.first();
   {!
   |? _loop
   |! {? ZB_TYP.ref()<>_ref
      || ZB_TYP.NUMER:=bfld('NUMER');
         ZB_TYP.clear();
         ZB_TYP.put();
         _loop:=0
      || _loop:=ZB_TYP.next()
      ?}
   !};
   ZB_TYP.cntx_pop()
?};
~~


\zb_typ_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed usunięciem tabeli ZB_TYP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZB_OPIS,'TYP',exec('ref_firma','ustawienia'),ZB_TYP.ref()) &
exec('del_ndx','#table',ZB_KLUCZ,'NUMER',ZB_TYP.ref())


\zb_typ_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po usunięciu tabeli ZB_TYP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};

ZB_TYP.cntx_psh();
ZB_TYP.index('NUMER');
ZB_TYP.prefix();
_loop:=ZB_TYP.first();
{! _numer:=1
|? _loop
|! {? ZB_TYP.NUMER<>_numer
   || ZB_TYP.NUMER:=_numer;
      ZB_TYP.put()
   ?};
   _loop:=ZB_TYP.next()
!};
ZB_TYP.cntx_pop();
~~


\zb_listy_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz dołącz przed tabeli ZB_LISTY
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zb_listy_modb','zbiorowk')


\zb_listy_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz dołącz przed tabeli ZB_LISTY
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zb_listy_modb','zbiorowk')


\zb_listy_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed modyfikacją wiersza tabeli ZB_LISTY
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZB_LISTY.FIRMA:=ZB_LISTY.LISTA().FIRMA;
ZB_LISTY.SYMBOL:=~-ZB_LISTY.LISTA().LT;
ZB_LISTY.LISTA<>ZB_LISTY.OPIS().LISTA


\zb_klucz_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed dołączeniem tabeli ZB_KLUCZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_numer:=1;
ZB_KLUCZ.cntx_psh();
ZB_KLUCZ.index('NUMER');
ZB_KLUCZ.prefix(ZB_KLUCZ.TYP);
{? ZB_KLUCZ.last()
|| _numer+=ZB_KLUCZ.NUMER
?};
ZB_KLUCZ.cntx_pop();
ZB_KLUCZ.NUMER:=_numer


\zb_klucz_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed poprawieniem tabeli ZB_KLUCZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZB_KLUCZ.cntx_psh();
ZB_KLUCZ.index('NUMER');
ZB_KLUCZ.prefix(ZB_KLUCZ.TYP);
_ok:=(ZB_KLUCZ.NUMER>=1 & ZB_KLUCZ.NUMER<=ZB_KLUCZ.size());
ZB_KLUCZ.cntx_pop();
_ok


\zb_klucz_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po poprawieniu tabeli ZB_KLUCZ
::   WE:
::   WYl
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};

{? (ZB_KLUCZ.NUMER-bfld('NUMER'))<>0
|| _ref:=ZB_KLUCZ.ref();
   ZB_KLUCZ.cntx_psh();
   ZB_KLUCZ.index('NUMER');
   ZB_KLUCZ.prefix(ZB_KLUCZ.TYP,ZB_KLUCZ.NUMER);
   _loop:=ZB_KLUCZ.first();
   {!
   |? _loop
   |! {? ZB_KLUCZ.ref()<>_ref
      || ZB_KLUCZ.NUMER:=bfld('NUMER');
         ZB_KLUCZ.clear();
         ZB_KLUCZ.put();
         _loop:=0
      || _loop:=ZB_KLUCZ.next()
      ?}
   !};
   ZB_KLUCZ.cntx_pop()
?};
~~


\zb_klucz_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po usunięciu tabeli ZB_KLUCZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};

ZB_KLUCZ.cntx_psh();
ZB_KLUCZ.index('NUMER');
ZB_KLUCZ.prefix(bfld('TYP'));
_loop:=ZB_KLUCZ.first();
{! _numer:=1
|? _loop
|! {? ZB_KLUCZ.NUMER<>_numer
   || ZB_KLUCZ.NUMER:=_numer;
      ZB_KLUCZ.put()
   ?};
   _loop:=ZB_KLUCZ.next()
!};
ZB_KLUCZ.cntx_pop();
~~


\zb_opis_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed usunięciem tabeli ZB_OPIS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('otworz_zb_def','zbiorowk',ZB_OPIS.LISTA);
exec('del_ndx','#table',ZB_DEF,'OPIS',ZB_OPIS.ref()) &
exec('del_ndx','#table',ZB_LISTY,'SYMBOL',ZB_OPIS.ref())


\zb_def_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed usunięciem tabeli ZB_DEF
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('otworz_zb_wart','zbiorowk',ZB_OPIS.LISTA);
exec('del_ndx','#table',ZB_WART,'SKLADNIK',ZB_DEF.ref())


\zb_wart_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła dla wyzwalacza przed dołączeniem i poprawieniem.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ZB_WART.R<>R.ref()
|| SEEK.R:=R.ref()
?};

ZB_WART.LP:=ZB_WART.R().LP;

{? SEEK.R<>null & SEEK.R<>R.ref()
|| SEEK.R()
?};
1


\zb_wart_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.41]
:: OPIS: Formula dla wyzwalacza przed dolaczeniem
::  OLD: \zb_wart_badd/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zb_wart_modb','zbiorowk')


\zb_wart_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.41]
:: OPIS: Formula dla wyzwalacza przed poprawieniem
::  OLD: \zb_wart_bput/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zb_wart_modb','zbiorowk')


\ustawienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Konfigurowanie zestawień zbiorczych
::   WE:
::   WY:
::  OLD: \redtypzb/zbiorowk.fml
::  OLD: \ZTPklprz/zbiorowk.fml
::  OLD: \ZTPklpo/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
ZB_TYP.win_sel('CFG');
AreaTitle.setTitle();
ZB_TYP.hdr_sel();
ZB_TYP.select();
~~


\cfg_bf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed wypełnieniem okna CFG tabeli ZB_TYP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZB_TYP.cntx_psh();
ZB_TYP.index('NUMER');
ZB_TYP.prefix();
ZB_TYP.win_edit('RED');
ZB_KLUCZ.cntx_psh();
1


\cfg_oc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przy zamknięciu okna CFG tabeli ZB_TYP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZB_KLUCZ.cntx_pop();
ZB_TYP.cntx_pop();
1


\cfg_zb_typ_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Po odświeżeniu okna WER tabeli ZB_TYP w oknie CFG tabeli ZB_TYP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_hide:='';
{? ZB_TYP.NUMER-1<1
|| _hide+='R(G)'
?};
{? ZB_TYP.NUMER+1>ZB_TYP.size()
|| _hide+='R(D)'
?};
ZB_TYP.actions_grayed('WER',_hide);
grp_disp(ZB_KLUCZ,'WER',1,1)


\cfg_zb_klucz_wer_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed obsługą okna WER tabeli ZB_KLUCZ w oknie CFG tabeli ZB_TYP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZB_KLUCZ.index('NUMER');
ZB_KLUCZ.prefix(ZB_TYP.ref());
{? ZB_TYP.ref()=null
|| '#disable'
?}


\cfg_zb_klucz_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Po odświeżeniu okna WER tabeli ZB_KLUCZ w oknie CFG tabeli ZB_TYP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_hide:='';
{? ZB_KLUCZ.NUMER-1<1
|| _hide+='R(G)'
?};
{? ZB_KLUCZ.NUMER+1>ZB_KLUCZ.size()
|| _hide+='R(D)'
?};
ZB_KLUCZ.actions_grayed('WER',_hide)


\zb_typ_drukuj_ba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wydruk wszystkich typów zestawień zbiorczych
::   WE:
::   WY:
::  OLD: \wydtypzb/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
rep_exec('ppl_zbtypwsz')


\zb_typ_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Po edycji danych tabeli ZB_TYP
::   WE:
::   WY: zgodne ze specyfikacją dla akcji "rekord po"
::  OLD: \ZTPrekpo/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
__CHK.table(ZB_TYP,-menu_txt()='popraw',,'NAZWA')


\zb_x_up_ba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
cur_tab(1,1).NUMER-=1


\zb_x_down_ba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
cur_tab(1,1).NUMER+=1


\zb_x_move_aa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
cur_tab(1,1).put()


\zb_typ_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wartość początkowa pola typu ZB_TYP
::   WE:
::   WY: wskazanie typu zestawienia
::  OLD: \ZKLTP_wp/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
ZB_TYP.ref()


\x_zb_opis_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wartość początkowa pola typu ZB_OPIS
::   WE:
::   WY:
::  OLD: \ZLSOP_wp/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
ZB_OPIS.ref()


\zb_wart_klucz_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS
:: OPIS:
::  OLD: \ZWRKL_wp/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
ZB_DEF.ref()


\zb_wart_r_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS
:: OPIS:
::  OLD: \__r/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
R.ref()


\zb_klucz_nazwa_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed redakcją pola NAZWA tabeli ZB_KLUCZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zb_klucz_fld','zbiorowk');
ZB_KLUCZ.AKRON_ZL=''


\zb_klucz_nazwa_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Obsługa klawisza F3 dla pola NAZWA tabeli ZB_KLUCZ
::   WE:
::   WY:
::  OLD: \ZKLN_f3/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('POPUP','object');
_fld:=POPUP.get_fld('P');
{? _fld<>''
|| {! _n:=1..P.fld_num()
   |? {? P.fld_acr(_n)=_fld
      || ZB_KLUCZ.NAZWA:=P.fld_name(_n);
         ZB_KLUCZ.AKRONIM:=_fld;
         0
      || 1
      ?}
   !}
?}


\zb_klucz_nazwa_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Po redakcji pola NAZWA tabeli ZB_KLUCZ
::   WE:
::   WY:
::  OLD: \ZKLNpor/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zb_klucz_fld','zbiorowk');

{? fld()=''
|| ZB_KLUCZ.AKRONIM:='';
   return(1)
?};

_ok:=0;
{! _n:=1..P.fld_num()
|? {? P.fld_name(_n)=fld
   || ZB_KLUCZ.AKRONIM:=P.fld_acr(_n);
      _j:=P.fld_join(_n);
      {? _j=''
      || ZB_KLUCZ.NAZWA_ZL:='';
         ZB_KLUCZ.AKRON_ZL:=''
      || _ok:=0;
         {! _m:=1..($(_j+'.fld_num'))()
         |? {? ($(_j+'.fld_name('+($_m)+')'))()=ZB_KLUCZ.NAZWA_ZL &
            ($(_j+'.fld_acr('+($_m)+')'))()=ZB_KLUCZ.AKRON_ZL
            || _ok:=1;
               0
            || 1
            ?}
         !};
         {? ~_ok
         || ZB_KLUCZ.NAZWA_ZL:='';
            ZB_KLUCZ.AKRON_ZL:=''
         ?}
      ?};
      _ok:=1;
      0
   || 1
   ?}
!};
{? ~_ok
|| _todo:=FUN.choice('Niewłaściwa nazwa pola.'@,,'Powtórz'@,'Wyświetl listę'@);
   {? _todo=2
   || exec('zb_klucz_nazwa_f3','zbiorowk');
      ZB_KLUCZ.AKRONIM<>''
   ?}
|| 1
?}


\zb_klucz_nazwa_zl_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed redakcją pola NAZWA_ZL tabeli ZB_KLUCZ
::   WE:
::   WY:
::  OLD: \ZKLNZprr/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zb_klucz_fld','zbiorowk');
{! _n:=1..P.fld_num()
|! {? P.fld_acr(_n)=ZB_KLUCZ.AKRONIM
   || return(+(P.fld_join(_n)))
   ?}
!};
0


\zb_klucz_nazwa_zl_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS:
::   WE:
::   WY:
::  OLD: \ZKLNZ_f3/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('POPUP','object');
{! _n:=1..P.fld_num()
|? P.fld_acr(_n)<>ZB_KLUCZ.AKRONIM
!};
_j:=P.fld_join(_n);
_fld:=($('POPUP.get_fld(\''+_j+'\')'))();
{? _fld<>''
|| {! _n:=1..($(_j+'.fld_num'))()
   |? {? ($(_j+'.fld_acr('+($_n)+')'))()=_fld
      || ZB_KLUCZ.NAZWA_ZL:=($(_j+'.fld_name('+($_n)+')'))();
         ZB_KLUCZ.AKRON_ZL:=($(_j+'.fld_acr('+($_n)+')'))();
         0
      || 1
      ?}
   !}
?}


\zb_klucz_nazwa_zl_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Po redakcji pola NAZWA_ZL tabeli ZB_KLUCZ
::   WE:
::   WY:
::  OLD: \ZKLNZpor/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()=''
|| ZB_KLUCZ.AKRON_ZL:='';
   return(1)
?};

{! _n:=1..P.fld_num()
|? P.fld_acr(_n)<>ZB_KLUCZ.AKRONIM
!};
_j:=P.fld_join(_n);
_ok:=0;
{! _n:=1..($(_j+'.fld_num'))()
|? {? ($(_j+'.fld_name('+($_n)+')'))()=fld()
   || ZB_KLUCZ.AKRON_ZL:=($(_j+'.fld_acr('+($_n)+')'))();
      ~(_ok:=1)
   || 1
   ?}
!};
{? ~_ok
|| _todo:=FUN.choice('Niewłaściwa nazwa pola.'@,,'Powtórz'@,'Wyświetl listę'@);
   {? _todo=2
   || exec('zb_klucz_nazwa_zl_f3','zbiorowk');
      ZB_KLUCZ.AKRON_ZL<>''
   ?}
|| 1
?}


\zb_klucz_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_join:='0';
{? ZB_KLUCZ.AKRONIM<>''
|| {? var_pres(ZB_KLUCZ.AKRONIM,P)=26
   || _join:='1'
   ?}
?};
ZB_KLUCZ.efld_opt('RED','enable=%1,mark=%1'[_join],,'NAZWA_ZL');
ZB_KLUCZ.efld_opt('RED','enable=%1'[_join],,'AKRON_ZL');
~~


\zb_klucz_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Rekord po okienka tabeli ZB_KLUCZ
::   WE:
::   WY: zgodne ze specyfikacją dla akcji "rekord po"
::  OLD: \ZKLrekpo/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
_chk:=__CHK.table(ZB_KLUCZ,-menu_txt='popraw',,'NAZWA');
{? type_of(_chk)=type_of('') | ~_chk
|| return(_chk)
?};

{? exec('zb_klucz_nazwa_zl_be','zbiorowk')
|| __CHK.table(ZB_KLUCZ,-menu_txt='popraw',,'NAZWA_ZL')
|| 1
?}


\zestawienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Redakcja opisów zestawień zbiorczych
::   WE: _a [_O] - wskazanie listy płac
::   WY:
::  OLD: \zestzbio/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(null) | _a=null | ~exec('no_limit','schemat','PPL')
|| return(exec('error','zbiorowk'))
?};

exec('wybierz','lista_plac',_a);

ZB_OPIS.win_sel('ZES');
ZB_OPIS.hdr_sel('');
ZB_OPIS.hdr_sel(' '+VAR.NAZWALIS);
ZB_OPIS.select()


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Treść komunikatu o błędzie
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Tworzenie zestawień zbiorczych niemożliwe'@


\zes_bf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed wypełnieniem okna ZES tabeli ZB_OPIS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
: Ukrycie znaku rozpoczynajacego nazwe pola podsumowujacego. Rozwiazanie przejsciowe (do zmiany DEF-a).
ZB_DEF.fld_fml('WARTOSC','BEFORE_DISPLAY',"_wart:=fld(); {? 1+_wart=^65533 || fld(1-_wart) ?}; 1");

ZB_OPIS.cntx_psh();
ZB_DEF.cntx_psh();
ZB_WART.cntx_psh();

{? exec('interm','#system') & ~exec('mobile','#system')
|| ZB_DEF.actions('WER','Z:Z',,1);
   ZB_WART.actions('WER','Z:Z',,1)
?};

1


\zes_oc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przy zamknięciu okna ZES tabeli ZB_OPIS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZB_DEF.fld_fml('WARTOSC','BEFORE_DISPLAY');

ZB_WART.cntx_pop();
ZB_DEF.cntx_pop();
ZB_OPIS.cntx_pop();

ZB_DEF.actions('WER',,,1);
ZB_WART.actions('WER',,,1);

1


\zes_zb_opis_wer_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed obsługą okna WER tabeli ZB_OPIS w oknie ZES tabeli ZB_OPIS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZB_OPIS.index('LISTA');
ZB_OPIS.prefix(O.ref())


\zes_zb_opis_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Po odświeżeniu okna WER tabeli ZB_OPIS w oknie ZES tabeli ZB_OPIS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zes_done_state','zbiorowk',ZB_OPIS,'WER');
grp_disp(ZB_DEF,'WER',1,1)


\zes_zb_def_wer_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed obsługą okna WER tabeli ZB_DEF w oknie ZES tabeli ZB_OPIS
::   WE:
::   WY:
::  OLD: \ZOPsklpr/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
{? ZB_OPIS.size()<>0
|| _ref:=ZB_OPIS.ref()
?};

exec('otworz_zb_def','zbiorowk',ZB_OPIS.LISTA);
ZB_DEF.index('OPIS');
ZB_DEF.prefix(_ref)


\zes_zb_def_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Po odświeżeniu okna WER tabeli ZB_DEF w oknie ZES tabeli ZB_OPIS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zes_done_state','zbiorowk',ZB_DEF,'WER');
grp_disp(ZB_WART,'WER',1,1)


\zes_zb_wart_wer_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed obsługą okna WER tabeli ZB_WART w oknie ZES tabeli ZB_OPIS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
{? ZB_DEF.size()<>0
|| _ref:=ZB_DEF.ref()
?};

exec('otworz_zb_wart','zbiorowk',ZB_OPIS.LISTA);
ZB_WART.index('SKLADNIK');
ZB_WART.prefix(_ref);
ZB_WART.index('RUBLP');
ZB_WART.prefix(_ref)


\zes_zb_wart_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Po odświeżeniu okna WER tabeli ZB_WART w oknie ZES tabeli ZB_OPIS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zes_done_state','zbiorowk',ZB_WART,'WER')


\zes_done_state
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Zmienia stan akcji "Zakończ" w okienkach zestawień zbiorczych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_aids:='';
{? ZB_OPIS.size()
|| ZB_OPIS.LISTA();
   {? exec('done_state','pkd','PPL_ZES_RZEZ',O.uidref())
   || _aids:='Z:Z'
   ?}
|| _aids:='Z:Z'
?};
_a.actions_grayed(_b,_aids)


\zb_opis_lista_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wartość początkowa pola LISTA tabeli ZB_OPIS
::   WE:
::   WY: wskazanie listy płac
::  OLD: \ZOPLS_wp/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
O.ref()


\zb_opis_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Rekord po okienka tabeli ZB_OPIS
::   WE:
::   WY:
::  OLD: \ZOPrekpo/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
__CHK.table(ZB_OPIS,-menu_pth()='popraw',,'TYP')


\zb_opis_listy_ba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Listy przed okienka tabeli ZB_OPIS
::   WE:
::   WY:
::  OLD: \ZOPLISpr/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('otworz_zb_def','zbiorowk',ZB_OPIS.LISTA);
ZB_DEF.prefix(ZB_OPIS.ref());
ZB_LISTY.win_sel({? ZB_DEF.first() || 'LST' || 'WER' ?}+{? REF.FIRMA=REF.GRUPA || '_GK' || '' ?});
ZB_LISTY.index('SYMBOL');
ZB_LISTY.prefix(ZB_OPIS.ref());
ZB_LISTY.select()


\zb_listy_symbol_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Po redakcji pola SYMBOL tabeli ZB_LISTY
::   WE:
::   WY:
::  OLD: \ZLSSMpor/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
ZB_LISTY.LISTA:=null;
fld(~-fld);
O.cntx_psh();
O.index('LISTYPZN');
O.prefix(exec('ref_firma','ustawienia'));
{? ~O.find_key(-fld())
|| O.cntx_pop();
   return(0)
?};
fld(~-O.LT);
ZB_LISTY.LISTA:=O.ref();
O.cntx_pop();
1


\zb_listy_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Rekord po okienka tabeli ZB_LISTY
::   WE:
::   WY:
::  OLD: \ZLSrekpo/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
_chk:=__CHK.table(ZB_LISTY,-menu_txt()='popraw',,'SYMBOL');
{? type_of(_chk)=type_of('') | ~_chk
|| _chk
|? ZB_OPIS.LISTA=ZB_LISTY.LISTA
|| FUN.emsg('Zestawienie nie może być tworzone na podstawie siebie samego.'@);
   0
|| 1
?}


\zb_listy_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Dołącz wszystkie listy płac przed okienka tabeli ZB_LISTY
::  OLD: \ZLSdodws/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0)
|| exec('zb_listy_dolacz','zbiorowk',1)

|? _a=1 | _a=2
|| exec('zb_listy_dolacz','zbiorowk',_a)

|? _a=3
|| _pyt:=FUN.choice('Dołączanie list z zakresu miesięcy.'@,,'&Kosztowo'@,'&Podatkowo'@);
   {? _pyt=0
   || return()
   ?};
   _buf:=tab_tmp(1,
      'TYPLS','STRING[3]','Typ listy'@,
      'ROKOD','INTEGER','Od roku'@,
      'MIEOD','INTEGER','Od miesiąca'@,
      'ROKDO','INTEGER','Do roku'@,
      'MIEDO','INTEGER','Do miesiąca'@
   );
   _buf.TYPLS:='*';
   _wnd:=_buf.mk_edit('Zakres dołączania'@);
   _buf.win_esep(_wnd,'Parametry zestawienia'@);
   _buf.win_efld(_wnd,,'TYPLS',,,5);
   _buf.efld_opt(_wnd,'mark=1',,'TYPLS');
   _buf.win_efld(_wnd,,'ROKOD',,,5);
   _buf.efld_opt(_wnd,'mark=1',,'ROKOD');
   _buf.win_efld(_wnd,,'MIEOD',,,5);
   _buf.efld_opt(_wnd,'mark=1',,'MIEOD');
   _buf.win_efld(_wnd,,'ROKDO',,,5);
   _buf.efld_opt(_wnd,'mark=1',,'ROKDO');
   _buf.win_efld(_wnd,,'MIEDO',,,5);
   _buf.efld_opt(_wnd,'mark=1',,'MIEDO');
   exec('ok_esc','#window',_buf,_wnd);
   _buf.win_edit(_wnd);
   _ok:=_buf.edit("
      _tab:=cur_tab();
      {? _tab.ROKOD>_tab.ROKDO | _tab.ROKOD<1900
      || FUN.emsg('Podano błędny numer roku.'@);
         0
      |? _tab.MIEOD<1 | _tab.MIEOD>12 | _tab.MIEDO<1 | _tab.MIEDO>12
      || FUN.emsg('Podano błędny numer miesiąca.'@);
         0
      |? date(_tab.ROKDO,_tab.MIEDO,0)<date(_tab.ROKOD,_tab.MIEOD,0)
      || FUN.emsg('Podano wsteczny zakres miesięcy.'@);
         'MIEOD'
      |? +_tab.TYPLS=3 & ',SUM,KWA,POL,ROK,'*(','+(~-_tab.TYPLS)+',')
      || FUN.emsg('Listy typu sumacyjnego nie są obsługiwane.'@);
         'TYPLS'
      |? +_tab.TYPLS<>3 & ~(_tab.TYPLS*'*') & ~(_tab.TYPLS*'%')
      || FUN.emsg('Typ listy musi składać się z trzech znaków albo zawierać znak * lub %.'@);
         'TYPLS'
      |? ~( _star:=_tab.TYPLS*'*';
            _tls1:=1+~-_tab.TYPLS;
            _tls2:={? +_tab.TYPLS>1 || (2+(~-_tab.TYPLS))+1 || '' ?};
            _tls3:={? +_tab.TYPLS>2 || (~-_tab.TYPLS)+1 || '' ?};
            (_tls1='*' | (%_tls1>=48 & %_tls1<=57) | (%_tls1>=65 & %_tls1<=90))
          & ((_tls2='' & _star) | (_tls2='*' | (%_tls2>=48 & %_tls2<=57) | (%_tls2>=65 & %_tls2<=90)))
          & ((_tls3='' & _star) | (_tls3='*' | (%_tls3>=48 & %_tls3<=57) | (%_tls3>=65 & %_tls3<=90)))
         )
      || FUN.emsg('W nazwie typu listy płac dozwolone są litery alfabetu łacińskiego i cyfry.'@);
         'TYPLS'
      || 1
      ?}
   ");
   {? _ok
   || _od:=date(_buf.ROKOD,_buf.MIEOD,0);
      _do:=date(_buf.ROKDO,_buf.MIEDO,0);
      {? ~+_buf.TYPLS | _buf.TYPLS='*'
      || {!
         |?  exec('zb_listy_dolacz','zbiorowk',_pyt,_od~1,_od~2);
            _od:=date((_od+1)~1,(_od+1)~2,0);
            _od<=_do
         !}
      || _buf.TYPLS:=~-(3+_buf.TYPLS);
         _buf.TYPLS:=STR.gsub(_buf.TYPLS,'*','%');
         _skul:=sql(
            'select KT.T from KT '
            'where KT.FIRMA=:_a '
            'and KT.T like \':_b\' '
            'and KT.T<>\'SUM\' '
            'and KT.T<>\'KWA\' '
            'and KT.T<>\'ROK\' '
            'and KT.T<>\'POL\' ',
            exec('ref_firma','ustawienia'),
            _buf.TYPLS
         );
         {? _skul.first()
         || {!
            |? _ood:=_od;
               {!
               |? exec('zb_listy_dolacz','zbiorowk',_pyt,_ood~1,_ood~2,_skul.T);
                  _ood:=date((_ood+1)~1,(_ood+1)~2,0);
                  _ood<=_do
               !};
               _skul.next()
            !}
         ?}
      ?}
   ?}
?}


\zb_listy_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS
:: OPIS: Dolacz wszystkie listy plac przed okienka tabeli ZB_LISTY - wydzielona funkcja wlasciwa z ZLSdodws
::   WE: [_a] - sposob dzialania: 1 - kosztowo (domyslnie), 2 - podatkowo
::       [_b] - rok [INTEGER]
::       [_c] - miesiac [INTEGER]
::       [_d] - typ listy - symbol [STRING]
::  OLD: \ZLSdodwsFun/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
_dalej:={? var_pres('_a')=type_of(0) & (_a=1 | _a=2 ) || _a || 1 ?};
_rok:={? var_pres('_b')=type_of(0) & _b>=1900 || _b || ZB_OPIS.LISTA().R ?};
_mie:={? var_pres('_c')=type_of(0) & _c>0 & _c<=12 || _c || ZB_OPIS.LISTA().M ?};
_typ:={? var_pres('_d')=type_of('') || _d || '' ?};

_firma:=exec('ref_firma','ustawienia');
_f_zatr:=ZB_OPIS.LISTA().F_ZATR().KOD;
_O:=exec('dostepne_o','schemat','PPL',_f_zatr,'*');
O.cntx_psh();
{? _dalej=1
|| O.index('LISTYP'+{? REF.FIRMA<>REF.GRUPA || 'LA' || 'KO' ?})
|| O.index('LISTYP'+{? REF.FIRMA<>REF.GRUPA || 'LP' || 'PO' ?})
?};
{? +_typ
|| {? REF.FIRMA<>REF.GRUPA || O.prefix(_firma,_f_zatr,_rok,_mie,~-_typ) || O.prefix(_f_zatr,_rok,_mie,~-_typ) ?}
|| {? REF.FIRMA<>REF.GRUPA || O.prefix(_firma,_f_zatr,_rok,_mie) || O.prefix(_f_zatr,_rok,_mie) ?}
?};
{? O.first()
|| ZB_LISTY.cntx_psh();
   ZB_LISTY.index('UNIQUE');
   ZB_LISTY.prefix(ZB_OPIS.ref());
   {!
   |? {? ZB_OPIS.LISTA<>O.ref() &
         _O.find_key($O.ref(),) &
         ~ZB_LISTY.find_key(O.ref())
      || ZB_LISTY.blank();
         ZB_LISTY.LISTA:=O.ref();
         ZB_LISTY.SYMBOL:=~-O.LT;
         ZB_LISTY.add()
      ?};
      O.next()
   !};
   ZB_LISTY.cntx_pop()
?};
O.cntx_pop()


\zb_opis_uzupelnij_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przypisuje brakujące typy zestawień zbiorczych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZB_TYP.cntx_psh();
ZB_OPIS.cntx_psh();
ZB_OPIS.index('LISTA');
ZB_OPIS.prefix(O.ref());

ZB_TYP.index('NUMER');
ZB_TYP.prefix();
_loop:=ZB_TYP.first();
{!
|? _loop
|! {? ~ZB_OPIS.find_key(ZB_TYP.NUMER)
   || ZB_OPIS.blank();
      ZB_OPIS.TYP:=ZB_TYP.ref();
      ZB_OPIS.add()
   ?};
   _loop:=ZB_TYP.next()
!};

ZB_OPIS.cntx_pop();
ZB_TYP.cntx_pop();
~~


\zb_tab_blokuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Próba zablokowania wskazanego rekordu w tabeli.
::   WE: _a [REFERENCE] - wskazanie rekordu
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~ref_tab(_a).r_lock(1,1,1,_a)
|| FUN.emsg(
      'Operacja nie może być wykonana w tej chwili ponieważ trwają inne działania\n'
      'wymagające wyłącznego dostępu do wskazanego zapisu.'
   );
   return(0)
?};
1


\zb_opis_zeruj_ba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Zeruj przed okienka tabeli ZB_OPIS
::   WE:
::   WY:
::  OLD: \ZOPzerpr/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
_SEM:=tab_tmp(1,'REF','STRING[16]','Ref');

ZB_OPIS.cntx_psh();
{? ~exec('zb_tab_blokuj','zbiorowk',ZB_OPIS.ref())
|| ZB_OPIS.cntx_pop();
   unlock_r();
   return(0)
?};

_ret:=1;
do();
exec('otworz_zb_def','zbiorowk',ZB_OPIS.LISTA);
{? ~exec('del_ndx','#table',ZB_DEF,'OPIS',ZB_OPIS.ref())
|| _ret:=0;
   undo()
?};
end();

unlock_r();
ZB_OPIS.cntx_pop();
_ret


\zb_opis_przygotuj_aa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przygotuj po okienka tabeli ZB_OPIS
::   WE:
::   WY:
::  OLD: \ZOPprzpr/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a') = type_of(1) || _a || 3 ?};

ZB_OPIS.cntx_psh();
{? ~exec('zb_tab_blokuj','zbiorowk',ZB_OPIS.ref())
|| ZB_OPIS.cntx_pop();
   return(0)
?};
{? ~exec('zb_tab_blokuj','zbiorowk',ZB_OPIS.TYP)
|| ZB_OPIS.cntx_pop();
   unlock_r();
   return(0)
?};

{? REF.FIRMA<>REF.GRUPA
|| {? var_pres('KOMM')<0 || exec('KOMM','#object') ?};
   KOMM.init(,,'Lisyt płac nie uwzględnione w zestawieniach zbiorczych.'@)
?};

_gen_zest:=0;

ZB_KLUCZ.cntx_psh();
ZB_KLUCZ.index('NUMER');
ZB_KLUCZ.prefix(ZB_OPIS.TYP);
_loop:=ZB_KLUCZ.first();
{!
|? _loop
|! {? ~exec('zb_tab_blokuj','zbiorowk',ZB_KLUCZ.ref())
   || ZB_KLUCZ.cntx_pop();
      ZB_OPIS.cntx_pop();
      unlock_r();
      return(0)
   ?};
   _loop:=ZB_KLUCZ.next()
!};

ZB_LISTY.cntx_psh();
ZB_LISTY.index('UNIQUE');
ZB_LISTY.prefix(ZB_OPIS.ref());
_loop:=ZB_LISTY.first();
{!
|? _loop
|! {? ~exec('zb_tab_blokuj','zbiorowk',ZB_LISTY.ref())
   || ZB_KLUCZ.cntx_pop();
      ZB_LISTY.cntx_pop();
      ZB_OPIS.cntx_pop();
      unlock_r();
      return(0)
   ?};
   _loop:=ZB_KLUCZ.next()
!};

O.cntx_psh();
{? ~exec('zb_tab_blokuj','zbiorowk',ZB_OPIS.LISTA)
|| ZB_KLUCZ.cntx_pop();
   ZB_LISTY.cntx_pop();
   ZB_OPIS.cntx_pop();
   O.cntx_pop();
   unlock_r();
   return(0)
?};

P.cntx_psh();
LS.cntx_psh();
ZB_DEF.cntx_psh();
ZB_WART.cntx_psh();

exec('otworz_zb_def','zbiorowk',ZB_OPIS.LISTA);
exec('otworz_zb_wart','zbiorowk',ZB_OPIS.LISTA);

P.index('PRACONAZ');
P.clear();
FUNKCJE.OTWOLIST();
LS.index('PRACNRRU');
LS.clear();
ZB_WART.index('SKLADNIK');

exec('del_ndx','#table',ZB_DEF,'OPIS',ZB_OPIS.ref());
ZB_LISTY.index('UNIQUE');
ZB_LISTY.prefix(ZB_OPIS.ref());
{? ZB_LISTY.first()
|| _Lista:=ZB_OPIS.LISTA;
   _ZestOpis:=ZB_OPIS.ref();
   _NazwaZest:=ZB_DEF.name();
   _NazwaZbio:=ZB_WART.name();
   _SprKlucz:="exec('klucz_spr','zbiorowk',_a,_b)";
   ZB_OPIS.cntx_psh();
   _typ:=ZB_OPIS.TYP;
   ZB_OPIS.index('TYP');
   ZB_OPIS.prefix(exec('ref_firma','ustawienia'),ZB_OPIS.TYP);
   ZB_OPIS.first();
   {!
   |? {? ZB_OPIS.find_key(ZB_LISTY.LISTA) & _Lista<>ZB_LISTY.LISTA
      || exec('otworz_zb_def','zbiorowk',ZB_LISTY.LISTA);
         ZB_DEF.index('OPIS');
         ZB_DEF.prefix(ZB_OPIS.ref());
         {? ZB_DEF.first()
         || {!
            |? ZB_DEF.cntx_psh();
               _Klucz:=ZB_DEF.WARTOSC;
               _Pozycja:='Pozycja: '+_Klucz;
               echo(_Pozycja,ZB_LISTY.SYMBOL);
               ZB_DEF.use(_NazwaZest);
               ZB_DEF.index('OPIS');
               ZB_DEF.prefix(_ZestOpis);
               _ZestDef:=_SprKlucz(_Klucz,_ZestOpis);
               ZB_DEF.cntx_pop();
               exec('otworz_zb_wart','zbiorowk',ZB_LISTY.LISTA);
               ZB_WART.index('SKLADNIK');
               ZB_WART.prefix(ZB_DEF.ref());
               {? ZB_WART.first()
               || {!
                  |? _RubNumer:=ZB_WART.R().RN;
                     _Rubryka:=ZB_WART.R;
                     _Kwota:=ZB_WART.KWOTA;
                     ZB_WART.cntx_psh();
                     ZB_WART.use(_NazwaZbio);
                     ZB_WART.prefix(_ZestDef);
                     {? ZB_WART.find_key(_RubNumer)
                     || ZB_WART.KLUCZ:=_ZestDef;
                        ZB_WART.R:=_Rubryka;
                        ZB_WART.KWOTA+=_Kwota;
                        ZB_WART.put()
                     || ZB_WART.KLUCZ:=_ZestDef;
                        ZB_WART.R:=_Rubryka;
                        ZB_WART.KWOTA:=_Kwota;
                        ZB_WART.add()
                     ?};
                     ZB_WART.cntx_pop();
                     ZB_WART.next()
                  !}
               ?};
               ZB_DEF.next()
            !};
            _gen_zest:=0
         || {? _gen_zest=1
            || ZB_LISTY.cntx_psh();
               _zb_tmp:=ZB_LISTY.SYMBOL;
               _zb_firma:=ZB_LISTY.FIRMA().SYMBOL;
               ZB_LISTY.prefix(ZB_OPIS.ref());
               {? ZB_LISTY.first()
               || {? _a<>2
                  || {? REF.FIRMA<>REF.GRUPA
                     || _a:=FUN.ask(
                           'Brak zestawień cząstkowych dla %1.\n'
                           'Czy uzupełnić brakujące dane?'@
                           [_zb_tmp]
                        )
                     || KOMM.add(
                           'Brak zestawień cząstkowych dla listy płac %1 z firmy %2.'@
                           [_zb_tmp,_zb_listy]
                        );
                        _a:=0
                     ?}
                  ?};
                  {? _a=1 | _a=2
                  || exec('zb_opis_przygotuj_aa','zbiorowk',_a);
                     _gen_zest:=1
                  || _gen_zest:=0
                  ?}
               || {? REF.FIRMA<>REF.GRUPA
                  || FUN.info(
                        'Nie udało się wypełnić zestawienia zbiorczego dla listy %1.'@[ZB_LISTY.SYMBOL]+'\n'
                        'Brak danych na listach płac.'@
                     )
                  || KOMM.add(
                        'Nie udało się wypełnić zestawienia zbiorczego dla listy płac %1 z firmy %2.'@
                        [ZB_LISTY.SYMBOL,ZB_LISTY.FIRMA().SYMBOL]
                     )
                  ?};
                  _gen_zest:=0
               ?};
               ZB_LISTY.cntx_pop()
            || {? _a<>2
               || {? REF.FIRMA<>REF.GRUPA
                  || _a:=FUN.choice(
                        'Zestawienie zbiorcze listy %1 jest puste.'@[ZB_LISTY.SYMBOL]+'\n'
                        'Czy uzupełnić brakujące dane?'@,,
                        'Tak'@,'Wszystkie'@
                     )
                  || KOMM.add(
                        'Zestawienia zbiorcze listy płac %1 z firmy %2 jest puste.'@
                        [ZB_LISTY.SYMBOL,ZB_LISTY.FIRMA().SYMBOL]
                     );
                     _a:=0
                  ?}
               ?};
               {? _a=1 | _a=2
               || ZB_DEF.cntx_psh();
                  ZB_DEF.prefix();
                  exec('zaloz','zbiorowk');
                  ZB_DEF.cntx_pop();
                  _gen_zest:=1
               || _gen_zest:=0
               ?}
            ?}
         ?}
      || {? _Lista<>ZB_LISTY.LISTA
         || {? _a<>2
            || {? REF.FIRMA<>REF.GRUPA
               || _a:=FUN.choice(
                     'Brak zestawienia zbiorczego listy %1.'@[ZB_LISTY.SYMBOL]+'\n'+
                     'Czy założyć i wypełnić zestawienie?'@,,
                     'Tak'@,'Wszystkie'@
                  )
               || KOMM.add(
                     'Brak zestawienia zbiorczego dla listy płac %1 z firmy %2.'@
                     [ZB_LISTY.SYMBOL,ZB_LISTY.FIRMA().SYMBOL]
                  );
                  _a:=0
               ?}
            ?};
            {? _a=1 | _a=2
            || ZB_OPIS.blank();
               ZB_OPIS.LISTA:=ZB_LISTY.LISTA;
               ZB_OPIS.TYP:=_typ;
               ZB_OPIS.STATUS:=($date)+' - '+($time);
               ZB_OPIS.add();
               ZB_DEF.cntx_psh();
               ZB_DEF.prefix();
               exec('zaloz','zbiorowk');
               ZB_DEF.cntx_pop();
               _gen_zest:=1
            || _gen_zest:=0
            ?}
         ?}
      ?};
      {? ~_gen_zest
      || ZB_LISTY.next()
      || 1
      ?}
   !};
   ZB_OPIS.cntx_pop();
   ZB_DEF.use(_NazwaZest);
   ZB_DEF.index('OPIS');
   ZB_DEF.prefix(ZB_OPIS.ref())
|| exec('zaloz','zbiorowk')
?};
ZB_OPIS.STATUS:=($date())+' - '+($time());
ZB_OPIS.put();
unlock_r();

{? REF.FIRMA<>REF.GRUPA & ~KOMM.empty() || KOMM.select() ?};

ZB_OPIS.cntx_pop();
ZB_LISTY.cntx_pop();
ZB_KLUCZ.cntx_pop();
ZB_WART.cntx_pop();
ZB_DEF.cntx_pop();
LS.cntx_pop();
P.cntx_pop();
O.cntx_pop();
FUNKCJE.OTWOLIST();

echo();
1


\zaloz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('otworz_zb_def','zbiorowk',ZB_OPIS.LISTA);
exec('otworz_zb_wart','zbiorowk',ZB_OPIS.LISTA);
ZB_DEF.blank();
O.cntx_psh();
P.cntx_psh();
P.f_clear();
P.index('F_ZATR');
P.prefix(exec('ref_firma','ustawienia'),ZB_OPIS.LISTA().F_ZATR().KOD);
{? P.first()
|| O.seek(ZB_OPIS.LISTA);
   FUNKCJE.OTWOLIST();
   LS.index('PRACNRRU');
   ZB_DEF.index('OPIS');
   ZB_DEF.prefix(ZB_OPIS.ref());
   {!
   |? _Klucz:=exec('klucz_zest','zbiorowk',ZB_OPIS.TYP,'P');
      {? type_of(_Klucz)=2
      || do();
         ZB_WART.index('SKLADNIK');
         ZB_WART.prefix(exec('klucz_spr','zbiorowk',_Klucz));
         _Pozycja:='Pozycja: '+ZB_DEF.WARTOSC;
         echo(_Pozycja,ZB_LISTY.SYMBOL);
         LS.prefix(P.ref());
         {? LS.first()
         || {!
            |? {? LS.KW<>0
               || ZB_WART.blank();
                  ZB_WART.R:=LS.RB;
                  {? ZB_WART.find_key(LS.RB().RN)
                  || ZB_WART.KWOTA+=LS.KW;
                     ZB_WART.put()
                  || ZB_WART.KWOTA:=LS.KW;
                     ZB_WART.add()
                  ?}
               ?};
               LS.next()
            !}
         || undo()
         ?}
      ?};
      {? ~ZB_WART.first()
      || undo()
      ?};
      end();
      P.next()
   !};
   {? ZB_DEF.first()
   || do();
      ZB_DEF.cntx_psh();
      exec('klucz_spr','zbiorowk',^65533+'{RAZEM}',ZB_OPIS.ref);
      _ZestRazem:=ZB_DEF.ref();
      ZB_DEF.cntx_pop();
      {!
      |? ZB_WART.prefix(ZB_DEF.ref());
         {? ZB_WART.first()
         || {!
            |? _Rubryka:=ZB_WART.R;
               _RubNumer:=ZB_WART.R().RN;
               _Kwota:=ZB_WART.KWOTA;
               ZB_WART.cntx_psh();
               ZB_WART.prefix(_ZestRazem);
               {? ZB_WART.find_key(_RubNumer)
               || ZB_WART.KWOTA+=_Kwota;
                  ZB_WART.put()
               || ZB_WART.KLUCZ:=_ZestRazem;
                  ZB_WART.R:=_Rubryka;
                  ZB_WART.KWOTA:=_Kwota;
                  ZB_WART.add()
               ?};
               ZB_WART.cntx_pop();
               ZB_WART.next()
            !}
         ?};
         ZB_DEF.next() & ZB_DEF.ref()<>_ZestRazem
      !};
      ZB_WART.index('SKLADNIK');
      ZB_WART.prefix(_ZestRazem);
      {? ~ZB_WART.first()
      || undo()
      ?};
      end()
  ?}
?};
P.cntx_pop();
O.cntx_pop();
FUNKCJE.OTWOLIST()


\klucz_zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Tworzy klucz zestawienia zbiorczego
::   WE:
::   WY:
::  OLD: \KluczZest/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:='';
ZB_KLUCZ.index('NUMER');
ZB_KLUCZ.prefix(_a);
{? ZB_KLUCZ.first
|| {!
   |? {? +(|ZB_KLUCZ.FORMULA)
      || _Formula:=ZB_KLUCZ.FORMULA
      || _Formula:=_b+'.'+ZB_KLUCZ.AKRONIM;
         {? ZB_KLUCZ.AKRON_ZL<>''
         || _Formula+='().'+ZB_KLUCZ.AKRON_ZL
         ?}
      ?};
      _key:=($(_Formula))();
      _ret+={? type_of(_key)=2 || _key || $_key ?}+', ';
      ZB_KLUCZ.next()
   !};
   _ret-=2
?};
_ret


\klucz_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Sprawdza czy istnieje klucz, jeśli nie to dodaje go.
::   WE: _a [STRING] - wartość klucza
::       _b [_ZB_OPIS] - opis zestawienia
::   WY:
::  OLD: \SprKlucz/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZB_DEF.first()
|| {!
   |? _found:=(_a=ZB_DEF.WARTOSC);
      ~_found & ZB_DEF.next()
   !}
|| _found:=0
?};
{? ~_found
|| ZB_DEF.OPIS:={? var_pres('_b')>=0 || _b || ZB_OPIS.ref() ?};
   ZB_DEF.WARTOSC:=_a;
   ZB_DEF.add()
?};
ZB_DEF.ref()


\zb_opis_drukuj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Drukuj przed okienka tabeli ZB_OPIS
::   WE:
::   WY:
::  OLD: \ZOP_druk/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','PPL_ZES_RZEZ','ppl_zbdr*',,1)


\skladniki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Tworzenie i przeglądnie zestawień składników.
::   WE: _a [_O] wskazanie listy płac
::   WY:
::  OLD: \zb_sklad/zbiorowk.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('no_limit','schemat','PPL')
|| return
?};
set_help(exec('set_help','#help','PPL_ZES_SKLA'));

SEEK.O:=_a;
SEEK.O();

ZB_SKLAD.cntx_psh();
ZB_SKLAD.index('KOD');
ZB_SKLAD.win_sel('WER');
ZB_SKLAD.win_edit('RED');
ZB_SKLAD.hdr_sel(' '+~O.LT);
ZB_SKLAD.select();
ZB_SKLAD.cntx_pop();
ZB_SKLAD.hdr_sel();

~~


\zb_sklad_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Po edycji wiersza tabeli ZB_SKLAD
::   WE:
::   WY: zgodne ze specyfikacją akcji "rekord po"
::----------------------------------------------------------------------------------------------------------------------
__CHK.table(ZB_SKLAD,-menu_txt()='popraw',,'KOD','OPIS','S1')


\query
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyświetla zestawienie wybranych składników bieżącej listy płac.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
: Pobierz kwoty składników zestawienia
_sk:=sql(
   'select P.IP, LS.RB, sum(KW) SK '
   'from   LS join P '
   'where  P.FIRMA=:_a and P.F_ZATR=:_b and LS.RB in (:_c,:_d,:_e,:_f)'
   'group  by P.IP, LS.RB',
   exec('ref_firma','ustawienia'),
   O.F_ZATR,
   ZB_SKLAD.S1,ZB_SKLAD.S2,ZB_SKLAD.S3,ZB_SKLAD.S4
);

{? ~_sk.first()
|| FUN.info('Brak danych do prezentacji.'@);
   return()
?};

: Przygotuj bufor wyświetlania
_zb:=tab_tmp(1,
   'IP','INTEGER'   ,'Identyfikator'@,
   'NA','STRING[30]','Nazwisko'@,
   'IM','STRING[20]','Imię'@,
   'S1','REAL'      ,ZB_SKLAD.S1().RT,
   'S2','REAL'      ,ZB_SKLAD.S2().RT,
   'S3','REAL'      ,ZB_SKLAD.S3().RT,
   'S4','REAL'      ,ZB_SKLAD.S4().RT
);
_zb.ndx_tmp(,0,'NA',,,'IM',,);
_zb.fld_attr('IP',,2);

_ip:=0;
P.cntx_psh();
P.index('PRACOIP');
P.prefix(exec('ref_firma','ustawienia'),O.F_ZATR().KOD);
: Wypełnij bufor zestawienia
{!
|? {? _ip<>_sk.IP
   || _ip:=_sk.IP;
      {? P.find_key(_ip)
      || _zb.blank();
         _zb.IP:=_ip;
         _zb.NA:=P.OSOBA().NAZWISKO;
         _zb.IM:=OSOBA.PIERWSZE;
         {!
         |? {? _sk.RB=$ZB_SKLAD.S1 || _zb.S1:=_sk.SK
            |? _sk.RB=$ZB_SKLAD.S2 || _zb.S2:=_sk.SK
            |? _sk.RB=$ZB_SKLAD.S3 || _zb.S3:=_sk.SK
            |? _sk.RB=$ZB_SKLAD.S4 || _zb.S4:=_sk.SK
            ?};
            _sk.next() & _ip=_sk.IP
         !};
         _zb.add()
      || {!
         |? _sk.IP=_ip
         |! _sk.del()
         !}
      ?}
   ?}
!};
P.cntx_pop();

: Przygotuj interfejs zestawienia
_ws:=_zb.mk_sel(,'T',0,'#zbiorowk'+$ZB_SKLAD.KOD,,,,,,,,,,,,'on');
_zb.win_fld(_ws,,'IP',,,-10);
_zb.win_fld(_ws,,'NA',,,-20);
_zb.win_fld(_ws,,'IM',,,-15);
_zb.win_fld(_ws,,'S1',,,-15,2);
{? ZB_SKLAD.S2
|| _zb.win_fld(_ws,,'S2',,,-15,2)
?};
{? ZB_SKLAD.S3
|| _zb.win_fld(_ws,,'S3',,,-15,2)
?};
{? ZB_SKLAD.S4
|| _zb.win_fld(_ws,,'S4',,,-15,2)
?};
_zb.win_act(_ws,0,'Szukaj');
_zb.win_act(_ws,0,'Kolejność');
_zb.win_act(_ws,0,'Wyświetl',,,,,"
   _tab:=cur_tab(1,1);
   _wnd:=_tab.mk_edit(ZB_SKLAD.OPIS,0);
   _tab.win_esep(_wnd,_tab.NA+' '+_tab.IM);
   _tab.win_efld(_wnd,,'S1',,,20,2);
   {? ZB_SKLAD.S2 || _tab.win_efld(_wnd,,'S2',,,20,2) ?};
   {? ZB_SKLAD.S3 || _tab.win_efld(_wnd,,'S3',,,20,2) ?};
   {? ZB_SKLAD.S4 || _tab.win_efld(_wnd,,'S4',,,20,2) ?};
   _tab.win_edit(_wnd);
   _tab.display();
   _tab.win_edit('');
   _tab.win_edel(_wnd)
");

_zb.win_sel(_ws);
_zb.hdr_sel(ZB_SKLAD.OPIS);
_zb.select();

~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:36 d70ae94f360d20f5041b11483e472695d594d5edd09677ab1b2909390ab8a1e3318047664064b32a0ec8c6b509641d68dbfd2e85b93ebd0cf4434631327805d42c8c62d5d226dc4074f89315915f96e0d9bf48fc7ff275ccd00285bdeed24029e9b8a8577ee0effb622c7fed26782f1770fa0373960c2e6e047664131f24b90e
