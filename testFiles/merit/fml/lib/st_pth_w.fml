:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: st_obj_w.fml
:: Utworzony: 03.06.2020
:: Autor: AKUL
::======================================================================================================================
:: Zawartość: Obsługa wersji obiektów dla systemu Statystyki
::======================================================================================================================


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Czyści powiązania do rekordu tabeli ST_PTH_W
::   WE: _a - ST_PTH_W.ref()
::   WY: >0  -wyczyszczone,
::       <=0 -niewyczyszczone
::  TAG: <PRYWATNA><CLEAN>
::UWAGA: Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
{? do_state()=2 || return(-100) ?};

_ref:=_a;

_result:=0;
_can_continue:=1;

_mydo:=do_state()=0;
{? _mydo || do() ?};
:: --- powiązania do ---
ST_PTH_W.cntx_psh(); ST_PTH_W.clear();
{? ST_PTH_W.seek(_ref)
||
   {? _can_continue>0 & ST_PTH_W.count()>0
   ||
::    1. Usuwam ST_LOG które wskazują na ten element
      _rule:="
         _ref:=_b;
         _result:=1;
         _can_continue:=1;
         ST_LOG.cntx_psh();
         ST_LOG.index('ST_PTH_W');
         ST_LOG.prefix(_ref);
         {? ST_LOG.first()
         || {!
            |? _can_continue:=exec('delete','st_log',ST_LOG.ref());
               ST_LOG.first() & _can_continue>0
            !}
         ?};
         ST_LOG.cntx_pop();

         {? _can_continue<=0
         || _result:=0
         ?};
         _result
      ";
      _can_continue:=exec('for_each_mask','#table',ST_LOG,_rule,,,_ref,1)

   ?};
   ~~
?};
ST_PTH_W.cntx_pop();
:: --- wszystkie powiazania usuniete? ---

{? _can_continue>0
|| _result:=1
|| undo()
?};

{? _mydo || end() ?};

_result


\delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Kasuje podany rekord tabeli ST_PTH_W (wykonywane w transakcji!!!)
::   WE: _a - ST_PTH_W.ref()
::   WY: >0 -wyczyszczone,
::       <=0 -niewyczyszczone
::  TAG: <PUBLICZNA><DEL>
::UWAGA: Parametry bez [] są wymagane, formula może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
:: jeżeli transakcja została zerwana, to nie ma sensu przetwarzać formuły
{? do_state()=2 || return(-100) ?};

_ref:=_a;

_result:=0;
_can_continue:=1;

:: sprawdzam, czy to w tej formule będę zakładał transakcję, czy już jest założona
_mydo:=do_state()=0;
{? _mydo || do() ?};
ST_PTH_W.cntx_psh(); ST_PTH_W.clear();
{? ST_PTH_W.seek(_ref)
|| {? exec('clean','st_pth_w',_ref)>0
   || {? ST_PTH_W.del(,1)>0
      || _result:=1
      || undo();
         _result:=-3
      ?}
   || _result:=-2
   ?}
|| _result:=0
?};

{? _result<0
|| undo()
?};

ST_PTH_W.cntx_pop();
{? _mydo || end() ?};
_result


\st_pth_w_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja Dołącz dla ST_PTH_W
::----------------------------------------------------------------------------------------------------------------------
ST_PTH_W.win_edit('RED');
ST_PTH_W.blank();
{? VAR.A_ST_PTH<>null()
|| ST_PTH_W.ST_PTH:=VAR.A_ST_PTH
?};
{? ST_PTH_W.edit()
|| ST_PTH_W.add()
?};
~~


\st_pth_w_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja Usuń dla ST_PTH_W
::----------------------------------------------------------------------------------------------------------------------
{? VAR.GRUPA='T' | FUN.ask('Czy usunąć bieżący wiersz?'@)
|| exec('delete','st_pth_w',ST_PTH_W.ref())
?};
~~


\st_pth_w_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja Popraw dla ST_OBJ
::----------------------------------------------------------------------------------------------------------------------
ST_PTH_W.win_edit('RED');
{? ST_PTH_W.edit()
|| ST_PTH_W.put()
?};
~~


\st_pth_w_del_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja Usuń przed dla grupy rekordów (tabela ST_PTH_W)
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy usunąć zaznaczone wiersze?'@)
|| VAR.GRUPA:='T';
   1
|| 0
?}


\st_pth_w_del_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja Usuń po dla grupy rekordów (tabela ST_PTH_W)
::----------------------------------------------------------------------------------------------------------------------
VAR.GRUPA:='N';
~~


\delete_not_used
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Usuwa wszystkie nieużywane rekordy
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------

_result:=0;
_can_continue:=1;
_mydo:=do_state()=0;
{? _mydo || do() ?};

ST_PTH_W.cntx_psh();
ST_PTH_W.index('ST_WER');
ST_PTH_W.prefix();
{? ST_PTH_W.first()
|| {!
   |? _next:=0;
      _ref_nxt:=null();
      ST_PTH_W.cntx_psh();
      {? ST_PTH_W.next()
      || _ref_nxt:=ST_PTH_W.ref()
      ?};
      ST_PTH_W.cntx_pop();

      {? ST_PTH_W.count()=0
      || _can_continue:=exec('delete','st_pth_w',ST_PTH_W.ref())
      ?};

      {? _ref_nxt<>null()
      || _next:=ST_PTH_W.seek(_ref_nxt)
      ?};
      _next>0 & _can_continue>0
   !}
?};
ST_PTH_W.cntx_pop();

{? _can_continue>0
|| _result:=1
|| undo()
?};

{? _mydo || end() ?};
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 c9996ca847da51077b7a222ca576fd91e9676213f37b14b750e00af22bc047d92221eb308fdfe05ef6cf434a4c7e9284becf7fe8e2c4778dce29e2688030e711bf3ad68d4b93e81ad61e68921420325ec2fa593be0d503656e311e3ec814f2000153a8184c64ee4df32019193548bd241f8f83960f9076fc91751e64b52ffaaf
