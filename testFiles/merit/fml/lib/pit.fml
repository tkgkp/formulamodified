:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: pit.fml
:: Utworzony: 2008
:: Autor: DAROKR
::======================================================================================================================
:: Zawartosc: Funkcje do obslugi obliczen deklaracji podatkowych
::======================================================================================================================


\init_tab_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [2008]
:: OPIS: Formula tworzaca tabele tymczasowa __TAB oraz okna do tej tabeli
::       wykorzytywana w formulach wyliczajacych dane do e-edeklaracji
::   WE: _a - opcjonalny numer wersji e-deklaracji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__TAB')>100 || obj_del(__TAB) ?};
::Dla PIT-4R(13) za 2023 rok wymagana zmiana typów pól na REAL z INTEGER
_vern:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 0 ?};
{? pit_typ='PIT4R'
|| {? _vern>=13
   || _typfld:='REAL'
   || _typfld:='INTEGER'
   ?};
   __TAB:=tab_tmp(3,'LP','INTEGER','Lp.',
                 'NR','INTEGER','Nr',
                 'NRK','INTEGER','Nrk',
                 'O','STRING[80]','Opis',
                 'P1','INTEGER','Pozycja',
                 'K1',_typfld,'Kwota',
                 'P2','INTEGER','Pozycja',
                 'K2',_typfld,'Kwota',
                 'P3','INTEGER','Pozycja',
                 'K3',_typfld,'Kwota',
                 'P4','INTEGER','Pozycja',
                 'K4',_typfld,'Kwota',
                 'P5','INTEGER','Pozycja',
                 'K5',_typfld,'Kwota',
                 'P6','INTEGER','Pozycja',
                 'K6',_typfld,'Kwota');
   _win_tab:=__TAB.mk_sel('Wartości wprowadzane ręcznie do deklaracji PIT-4R'@,'N',0,'pit_4r_wer',,,,,'U'
                          ,,,,,'html_maximized')
|| __TAB:=tab_tmp(3,'LP','INTEGER','Lp.',
                 'NR','INTEGER','Nr',
                 'NRK','INTEGER','Nrk',
                 'O','STRING[80]','Opis',
                 'P1','INTEGER','Pozycja',
                 'K1','REAL','Kwota',
                 'P2','INTEGER','Pozycja',
                 'K2','REAL','Kwota',
                 'P3','INTEGER','Pozycja',
                 'K3','REAL','Kwota',
                 'P4','INTEGER','Pozycja',
                 'K4','REAL','Kwota',
                 'P5','INTEGER','Pozycja',
                 'K5','REAL','Kwota',
                 'P6','INTEGER','Pozycja',
                 'K6','REAL','Kwota');
   _win_tab:=__TAB.mk_sel('Wartości wprowadzane ręcznie do deklaracji PIT-8AR'@,'N',0,'pit_8ar_wer',,,,,'U'
                          ,,,,,'html_maximized')
?};
_help_poz:='Pozycja formularza'@;
_help_kw:='Kwota pozycji'@;
__TAB.win_sel(_win_tab);
_mob:='mobile_visible=1';
__TAB.win_fld(_win_tab,,'O',,,35,,1,,,'Opis deklaracji'@,,,,,,_mob);
__TAB.win_fld(_win_tab,,'P1',,,3,,1,,,_help_poz,,,,,,_mob);
__TAB.win_fld(_win_tab,,'K1',,,9,2,,,,_help_kw,,);
__TAB.win_fld(_win_tab,,'P2',,,3,,1,,,_help_poz,,);
__TAB.win_fld(_win_tab,,'K2',,,9,2,,,,_help_kw,,);
__TAB.win_fld(_win_tab,,'P3',,,3,,1,,,_help_poz,,);
__TAB.win_fld(_win_tab,,'K3',,,9,2,,,,_help_kw,,);
__TAB.win_fld(_win_tab,,'P4',,,3,,1,,,_help_poz,,);
__TAB.win_fld(_win_tab,,'K4',,,9,2,,,,_help_kw,,);
__TAB.win_fld(_win_tab,,'P5',,,3,,1,,,_help_poz,,);
__TAB.win_fld(_win_tab,,'K5',,,9,2,,,,_help_kw,,);
__TAB.win_fld(_win_tab,,'P6',,,3,,1,,,_help_poz,,);
__TAB.win_fld(_win_tab,,'K6',,,9,2,,,,_help_kw,,);
__TAB.win_act(_win_tab,,'Popraw',,,,,,1);
__TAB.win_act(_win_tab,,'Rekord',,,,,"exec('tab_1_rek_po','pit1')");
__TAB.win_btn(_win_tab,'text=%1, btn_label_align=center, panel=right, align=begin'['Popraw'@],'menu:P');
__TAB.win_act(_win_tab,,'Formuła','Dalej'@@,,'Przechodzi do następnego kroku'@,"sel_exit()",,,,,,,,'target=window');
__TAB.win_btn(_win_tab,'text=%1, icon=xwin16.png:22, btn_label_align=center, panel=bottom'['Dalej'@],'menu:D');

__TAB.index(__TAB.ndx_tmp(,1,'NR',,,'NRK',,));
{? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
~~


\obl_pit4r_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [2008]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla pity PIT 4R
::----------------------------------------------------------------------------------------------------------------------
_Msc:=1; _Rok:=__Rok;
exec('init_tab_1','pit');

_dod_zap:="__TAB.blank;
      {? var_pres('_f')<>type_of(0) || _f:=0 ?};
      __TAB.LP:=_a;
      __TAB.O:=_b;
      __TAB.NR:=_d;
      __TAB.NRK:=_e;
      {! _ind:=1..6
      |! {? _f>=_ind
         || ($('__TAB.P'+$_ind+':=0'))()
         || ($('__TAB.P'+$_ind+':=(_a+_b)'))(_c,_ind-_f)
         ?}
      !};
      __TAB.add";

_dod_zap(2,'4. Kwota zaliczek, których pobór',66,4,0);
_dod_zap(2,'został ograniczony art.32 ust.2',72,4,6);
_dod_zap(3,'5. Ograniczenie poboru zaliczek w',78,5,0);
_dod_zap(3,'poprzednich miesiącach art.32 ust.2',84,5,6);
_dod_zap(4,'7. Zwrot nadpłat w gotówce zaliczone na',94,7,0,2);
_dod_zap(4,'poczet należnej zaliczki',98,7,6);
_dod_zap(5,'8. Pobrany podatek, przekazany na PFRON',104,8,0);
_dod_zap(5,'oraz zak. fun. rehab. osób niepełnos.',110,8,6);
_dod_zap(6,'9. Zaliczki pobrane od należności',116,9,0);
_dod_zap(6,'wynikającej z umowy aktywizacyjnej',122,9,6);
_dod_zap(7,'10. Zaliczki pobr. od świadczeń z tyt.',128,10,0);
_dod_zap(7,'działal. okr. w art.13 pkt 2 i 4-9',134,10,6);
_dod_zap(8,'12. Kwota z tytułu terminowego',152,12,0);
_dod_zap(8,'wpłacania podatku',158,12,6);
__TAB.select;

_dod_zap(1,'',42,2,0);
_dod_zap(1,'',48,2,6);
_dod_zap(9,'',18,0,0);
_dod_zap(9,'',30,0,6);
_dod_zap(10,'',24,1,0);
_dod_zap(10,'',36,1,6);
_dod_zap(11,'',54,3,0);
_dod_zap(11,'',60,3,6);
_dod_zap(12,'',90,6,0);
_dod_zap(12,'',0,6,6);
_dod_zap(13,'',140,11,0);
_dod_zap(13,'',146,11,6);
_dod_zap(14,'',164,13,0);
_dod_zap(14,'',170,13,6);
__TAB.index(__TAB.ndx_tmp(,1,'NR',,,'NRK',,));
__TAB.prefix(7,0);
{? __TAB.first || __TAB.K1:=__TAB.K2:=0; __TAB.put ?};
__TAB.prefix;
_czy_rap:=0;
P.cntx_psh;
P.index('PRACONAZ');
P.prefix(exec('ref_firma','ustawienia'),'P');
KP.cntx_psh;
KP.index('_KARTAPO');
RH.cntx_psh;
RACH_NDX:=RH.ndx_tmp('Data wypłaty'@,0,'O','FIRMA',,'ZLE','RC',0,'R',,0,'M',,0);
RH.index(RACH_NDX);
LS.cntx_psh();
O.cntx_psh();
{!
|?
{? P.first
|| {!
   |? KP.prefix(P.ref,_Rok,_Msc);
   {? KP.first
   || {? __TAB.find_key(0,{? _Msc<7 || 0 || 6 ?})
      || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S1<>0'))(); __TAB.put
      ?};
      {? __TAB.find_key(1,{? _Msc<7 || 0 || 6 ?})
      || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S4'))(); __TAB.put
      ?};
      {? KP.S7>0
      || {? __TAB.find_key(6, {? _Msc<7 || 0 || 6 ?})
         || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S7'))(); __TAB.put
         ?}
      |? KP.S7<0
      || {? __TAB.find_key(7, {? _Msc<7 || 0 || 6 ?})
         || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S7*(-1)'))(); __TAB.put
         ?}
      ?};
      _czy_rap+=KP.S4
   ?}; P.next
   !}
?};
RH.prefix(exec('ref_firma','ustawienia'),'N',_Rok,_Msc);
{? RH.first
|| _suma:="
      _wyn:=0;
      _tab:=__RUB.sys_rub(_a);
      {? _tab.first()
      || {!
         |? LS.prefix(RH.ref(),_tab.RN);
            {? LS.first() || {! |? _wyn+=LS.KW; LS.next() !} ?};
            _tab.next()
         !}
      ?};
      _wyn
   ";
   {!
   |? LS.use(RH.O().LT);
      LS.index('ZLEC');
      {? __TAB.find_key(10,{? _Msc<7 || 0 || 6 ?})
      || _wyn:=_suma(9611)+_suma(9612);
         _czy_rap+=_wyn;
         ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=_a'))(_wyn);
         __TAB.put()
      ?};
      RH.next
   !}
?};
_Msc+=1;
_Msc<=12
!};
RH.ndx_drop(&RACH_NDX);
LS.cntx_pop();
O.cntx_pop();
RH.cntx_pop;
KP.cntx_pop;
P.cntx_pop;
_suma:="__TAB.cntx_psh; __TAB.prefix;
       {? __TAB.find_key(_[7],_[8])
       || {! _ind:=1..6 |! ($('__TAB.K'+$_ind+'+=_a'))(_[_ind]) !}; __TAB.put
       ?}; __TAB.cntx_pop";

__TAB.prefix(1);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,3,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(2);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,3,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(3);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(5);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(6);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(9);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(10);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(4);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(7);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(8);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};

 __TAB.prefix(11);
{? __TAB.first
|| {!
   |? {! _ind:=1..6 |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?} !}; __TAB.put;
         _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,13,__TAB.NRK); __TAB.next
      !}
?};
__TAB.prefix(12);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,13,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(13);
{? __TAB.first
|| {!
   |? {! _ind:=1..6
      |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?}
      !};
      __TAB.put; __TAB.next
   !}
?};
_wyn:={? ~(_czy_rap>0)
      || FUN.info('Brak informacji do wykazania na deklaracji\n (zerowe kwoty podatku).'@); 0
      || 1
      ?};
__TAB.prefix;
_wyn


\obl_pit4r_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [2009+]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla deklaracji PIT 4R
::----------------------------------------------------------------------------------------------------------------------
_Msc:=1; _Rok:=__Rok;
exec('init_tab_1','pit');

_dod_zap:="__TAB.blank;
      {? var_pres('_f')<>type_of(0) || _f:=0 ?};
      __TAB.LP:=_a;
      __TAB.O:=_b;
      __TAB.NR:=_d;
      __TAB.NRK:=_e;
      {! _ind:=1..6
      |! {? _f>=_ind
         || ($('__TAB.P'+$_ind+':=0'))()
         || ($('__TAB.P'+$_ind+':=(_a+_b)'))(_c,_ind-_f)
         ?}
      !};
      __TAB.add";

_dod_zap(2,'4. Zaliczki na podatek, których pobór został',66,4,0);
_dod_zap(2,'ograniczony na podstawie art.32 ust.2 ustawy',72,4,6);
_dod_zap(3,'5. Zaliczki, które przypadały do pobrania w związku z ograniczeniem poboru',78,5,0);
_dod_zap(3,'zaliczek w poprzednich miesiącach na podstawie art.32 ust.2 ustawy',84,5,6);
_dod_zap(4,'7. Nadpłaty wynikające z rozliczenia za rok ubiegły oraz zwrot nadpłat',94,7,0);
_dod_zap(4,'w gotówce zaliczone na poczet należnej zaliczki',100,7,6);
_dod_zap(5,'8. Pobrany podatek, przekazany na PFRON',106,8,0);
_dod_zap(5,'oraz zakładowy fundusz rehabilitacji osób niepełnosprawnych',112,8,6);
_dod_zap(6,'9. Zaliczki na podatek pobrane od świadczeń z tytułu działalności',118,9,0);
_dod_zap(6,'określonej w art.13 pkt 2 i 4-9 oraz art.18 ustawy 4)',124,9,6);
_dod_zap(7,'10. Zaliczki na podatek pobrane od innych należności,',130,10,0);
_dod_zap(7,'w tym wynikających z umowy aktywizacyjnej 4)',136,10,6);
_dod_zap(8,'12. Wynagrodzenie z tytułu terminowego wpłacania podatku dochodowego',154,12,0);
_dod_zap(8,'za poszczególne miesiące, zgodnie z art.28 Ordynacji podatkowej',160,12,6);
__TAB.select;

_dod_zap(1,'',42,2,0);
_dod_zap(1,'',48,2,6);
_dod_zap(9,'',18,0,0);
_dod_zap(9,'',30,0,6);
_dod_zap(10,'',24,1,0);
_dod_zap(10,'',36,1,6);
_dod_zap(11,'',54,3,0);
_dod_zap(11,'',60,3,6);
_dod_zap(12,'',90,6,0);
_dod_zap(12,'',0,6,6);
_dod_zap(13,'',142,11,0);
_dod_zap(13,'',148,11,6);
_dod_zap(14,'',166,13,0);
_dod_zap(14,'',172,13,6);
__TAB.index(__TAB.ndx_tmp(,1,'NR',,,'NRK',,));
__TAB.prefix;
_czy_rap:=0;
P.cntx_psh;
P.index('PRACONAZ');
P.prefix(exec('ref_firma','ustawienia'),'P');
KP.cntx_psh;
KP.index('_KARTAPO');
RH.cntx_psh;
LS.cntx_psh();
O.cntx_psh();
RACH_NDX:=RH.ndx_tmp('Data wypłaty'@,0,'O','FIRMA',,'ZLE','RC',0,'R',,0,'M',,0);
RH.index(RACH_NDX);
{!
|?
{? P.first
|| {!
   |? KP.prefix(P.ref,_Rok,_Msc);
   {? KP.first
   || {? __TAB.find_key(0,{? _Msc<7 || 0 || 6 ?})
      || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S1<>0'))(); __TAB.put
      ?};
      {? __TAB.find_key(1,{? _Msc<7 || 0 || 6 ?})
      || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S4'))(); __TAB.put
      ?};
      {? KP.S7>0
      || {? __TAB.find_key(6, {? _Msc<7 || 0 || 6 ?})
         || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S7'))(); __TAB.put
         ?}
      |? KP.S7<0
      || {? __TAB.find_key(7, {? _Msc<7 || 0 || 6 ?})
         || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S7*(-1)'))(); __TAB.put
         ?}
      ?};
      _czy_rap+=KP.S4
   ?}; P.next
   !}
?};
RH.prefix(exec('ref_firma','ustawienia'),'N',_Rok,_Msc);
{? RH.first
|| _suma:="
      _wyn:=0;
      _tab:=__RUB.sys_rub(_a);
      {? _tab.first()
      || {!
         |? LS.prefix(RH.ref(),_tab.RN);
            {? LS.first() || {! |? _wyn+=LS.KW; LS.next() !} ?};
            _tab.next()
         !}
      ?};
      _wyn
   ";
   {!
   |? LS.use(RH.O().LT);
      LS.index('ZLEC');
      {? __TAB.find_key(9,{? _Msc<7 || 0 || 6 ?})
      || _wyn:=_suma(9611)+_suma(9612);
         _czy_rap+=_wyn;
         ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=_a'))(_wyn);
         __TAB.put()
      ?};
      RH.next()
   !}
?};
_Msc+=1;
_Msc<=12
!};
RH.ndx_drop(&RACH_NDX);
RH.cntx_pop;
LS.cntx_pop();
O.cntx_pop();
KP.cntx_pop;
P.cntx_pop;
_suma:="__TAB.cntx_psh; __TAB.prefix;
       {? __TAB.find_key(_[7],_[8])
       || {! _ind:=1..6 |! ($('__TAB.K'+$_ind+'+=_a'))(_[_ind]) !}; __TAB.put
       ?}; __TAB.cntx_pop";

__TAB.prefix(1);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,3,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(2);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,3,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(3);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(5);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(6);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(9);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(10);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(4);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(7);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(8);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};

 __TAB.prefix(11);
{? __TAB.first
|| {!
   |? {! _ind:=1..6 |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?} !}; __TAB.put;
         _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,13,__TAB.NRK); __TAB.next
      !}
?};
__TAB.prefix(12);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,13,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(13);
{? __TAB.first
|| {!
   |? {! _ind:=1..6
      |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?}
      !};
      __TAB.put; __TAB.next
   !}
?};
_wyn:={? ~(_czy_rap>0)
      || FUN.info('Brak informacji do wykazania na deklaracji\n (zerowe kwoty podatku).'@); 0
      || 1
      ?};
__TAB.prefix;
_wyn


\obl_pit4r_3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [2010]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla deklaracji PIT 4R
::       UWAGA: Procedura korzysta z numerow rubryk!
::----------------------------------------------------------------------------------------------------------------------
_Msc:=1; _Rok:=__Rok;
exec('init_tab_1','pit');

_dod_zap:="__TAB.blank;
      {? var_pres('_f')<>type_of(0) || _f:=0 ?};
      __TAB.LP:=_a;
      __TAB.O:=_b;
      __TAB.NR:=_d;
      __TAB.NRK:=_e;
      {! _ind:=1..6
      |! {? _f>=_ind
         || ($('__TAB.P'+$_ind+':=0'))()
         || ($('__TAB.P'+$_ind+':=(_a+_b)'))(_c,_ind-_f)
         ?}
      !};
      __TAB.add";

_dod_zap(2,'4. Zaliczki na podatek, których pobór został',66,4,0);
_dod_zap(2,'ograniczony na podstawie art.32 ust.2 ustawy',72,4,6);
_dod_zap(3,'5. Zaliczki, które przypadały do pobrania w związku z ograniczeniem poboru',78,5,0);
_dod_zap(3,'zaliczek w poprzednich miesiącach na podstawie art.32 ust.2 ustawy',84,5,6);
_dod_zap(4,'7. Nadpłaty wynikające z rozliczenia za rok ubiegły oraz zwrot nadpłat',94,7,0);
_dod_zap(4,'w gotówce zaliczone na poczet należnej zaliczki',100,7,6);
_dod_zap(5,'8. Pobrany podatek, przekazany na PFRON',106,8,0);
_dod_zap(5,'oraz zakładowy fundusz rehabilitacji osób niepełnosprawnych',112,8,6);
_dod_zap(6,'9. Zaliczki na podatek pobrane od świadczeń z tytułu działalności',118,9,0);
_dod_zap(6,'określonej w art.13 pkt 2 i 4-9 oraz art.18 ustawy',124,9,6);
_dod_zap(7,'10. Zaliczki na podatek pobrane od innych należności,',130,10,0);
_dod_zap(7,'w tym wynikających z umowy aktywizacyjnej',136,10,6);
_dod_zap(8,'12. Wynagrodzenie z tytułu terminowego wpłacania podatku dochodowego',154,12,0);
_dod_zap(8,'za poszczególne miesiące, zgodnie z art.28 Ordynacji podatkowej',160,12,6);
__TAB.select;

_dod_zap(1,'',42,2,0);
_dod_zap(1,'',48,2,6);
_dod_zap(9,'',18,0,0);
_dod_zap(9,'',30,0,6);
_dod_zap(10,'',24,1,0);
_dod_zap(10,'',36,1,6);
_dod_zap(11,'',54,3,0);
_dod_zap(11,'',60,3,6);
_dod_zap(12,'',90,6,0);
_dod_zap(12,'',0,6,6);
_dod_zap(13,'',142,11,0);
_dod_zap(13,'',148,11,6);
_dod_zap(14,'',166,13,0);
_dod_zap(14,'',172,13,6);
__TAB.index(__TAB.ndx_tmp(,1,'NR',,,'NRK',,));
__TAB.prefix;
_czy_rap:=0;
P.cntx_psh;
P.index('PRACONAZ');
P.prefix(exec('ref_firma','ustawienia'),'P');
KP.cntx_psh;
KP.index('_KARTAPO');
RH.cntx_psh;
LS.cntx_psh();
O.cntx_psh();
RACH_NDX:=RH.ndx_tmp('Data wypłaty'@,0,'O','FIRMA',,'R',,0,'M',,0);
RH.index(RACH_NDX);
{!
|?
{? P.first
|| {!
   |? KP.prefix(P.ref,_Rok,_Msc);
   {? KP.first
   || {? __TAB.find_key(0,{? _Msc<7 || 0 || 6 ?})
      || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S1<>0'))(); __TAB.put
      ?};
      {? __TAB.find_key(1,{? _Msc<7 || 0 || 6 ?})
      || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S4'))(); __TAB.put
      ?};
      {? KP.S7>0
      || {? __TAB.find_key(6, {? _Msc<7 || 0 || 6 ?})
         || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S7'))(); __TAB.put
         ?}
      |? KP.S7<0
      || {? __TAB.find_key(7, {? _Msc<7 || 0 || 6 ?})
         || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S7*(-1)'))(); __TAB.put
         ?}
      ?};
      _czy_rap+=KP.S4
   ?}; P.next
   !}
?};
RH.prefix(exec('ref_firma','ustawienia'),_Rok,_Msc);
{? RH.first
|| _suma:="
      _wyn:=0;
      _tab:=__RUB.sys_rub(_a);
      {? _tab.first()
      || {!
         |? LS.prefix(RH.ref(),_tab.RN);
            {? LS.first() || {! |? _wyn+=LS.KW; LS.next() !} ?};
            _tab.next()
         !}
      ?};
      _wyn
   ";
   {!
   |? {? ~exec('licz_rhs','lista_licz',31)
      || LS.use(RH.O().LT);
         LS.index('ZLEC');
         {? __TAB.find_key(9,{? _Msc<7 || 0 || 6 ?})
         || _wyn:=_suma(9611)+_suma(9612);
            _czy_rap+=_wyn;
            ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=_a'))(_wyn);
            __TAB.put()
         ?}
      ?};
      RH.next
   !}
?};
_Msc+=1;
_Msc<=12
!};
RH.ndx_drop(&RACH_NDX);
RH.cntx_pop;
LS.cntx_pop();
O.cntx_pop();
KP.cntx_pop;
P.cntx_pop;
_suma:="__TAB.cntx_psh; __TAB.prefix;
       {? __TAB.find_key(_[7],_[8])
       || {! _ind:=1..6 |! ($('__TAB.K'+$_ind+'+=_a'))(_[_ind]) !}; __TAB.put
       ?}; __TAB.cntx_pop";

__TAB.prefix(1);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,3,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(2);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,3,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(3);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(5);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(6);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(9);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(10);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(4);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(7);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(8);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};

 __TAB.prefix(11);
{? __TAB.first
|| {!
   |? {! _ind:=1..6 |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?} !}; __TAB.put;
         _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,13,__TAB.NRK); __TAB.next
      !}
?};
__TAB.prefix(12);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,13,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(13);
{? __TAB.first
|| {!
   |? {! _ind:=1..6
      |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?}
      !};
      __TAB.put; __TAB.next
   !}
?};
_wyn:={? ~(_czy_rap>0)
      || FUN.emsg('Brak informacji do wykazania na deklaracji\n (zerowe kwoty podatku).'@); 0
      || 1
      ?};
__TAB.prefix;
_wyn


\obl_pit8ar_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [2008]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla pity PIT 8AR
::       UWAGA: Procedura korzysta z numerow rubryk!
::----------------------------------------------------------------------------------------------------------------------
_Msc:=1; _Rok:=__Rok; _podatek:=0;
exec('czytaj','#stalesys',date(_Rok,12,0),KST);

exec('init_tab_1','pit');

_dod_zap:="__TAB.blank; __TAB.LP:=_a; __TAB.O:=_b; __TAB.NR:=_d; __TAB.NRK:=_e;
           {! _ind:=1..6 |! ($('__TAB.P'+$_ind+':=(_a+_b)'))(_c,_ind) !};
           __TAB.add";

_dod_zap(15,'15. Kwota potr. wyn. z tyt. terminowego ',186,15,0);
_dod_zap(15,'    wpłacenia podatku dochodowego',192,15,6);
__TAB.select;
_dod_zap(2,'',30,2,0);
_dod_zap(2,'',36,2,6);
_dod_zap(5,'',66,5,0);
_dod_zap(5,'',72,5,6);
_dod_zap(13,'',162,13,0);
_dod_zap(13,'',168,13,6);
_dod_zap(14,'',174,14,0);
_dod_zap(14,'',180,14,6);
_dod_zap(16,'',198,16,0);
_dod_zap(16,'',204,16,6);

RH.cntx_psh;
RACH_NDX:=RH.ndx_tmp('Data wypłaty'@,0,'O','FIRMA',,'R',,0,'M',,0);
RH.index(RACH_NDX);
{!
|?
RH.prefix(exec('ref_firma','ustawienia'),_Rok,_Msc);
{? RH.first
|| {!
   |? {? exec('licz_rhs','lista_licz',31)
      || RH.ZLE().RU().K;
         _kw:=(exec('licza_rhs','lista_licz',961))$0;
         _podatek+=_kw;
         {? RU.K='7'
         || {? __TAB.find_key(2,{? _Msc<7 || 0 || 6 ?})
            || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+='+$_kw))();
               __TAB.put
            ?}
         |? RU.K='8'
         || {? __TAB.find_key(5,{? _Msc<7 || 0 || 6 ?})
            || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+='+$_kw))();
               __TAB.put
            ?}
         || {? __TAB.find_key(13,{? _Msc<7 || 0 || 6 ?})
            || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+='+$_kw))();
               __TAB.put
            ?}
         ?}
      ?};
      RH.next
   !}
?};
_Msc+=1;
_Msc<=12
!};
RH.ndx_drop(&RACH_NDX);
RH.cntx_pop;
_suma:="__TAB.cntx_psh; __TAB.prefix;
       {? __TAB.find_key(_[7],_[8])
       || {! _ind:=1..6 |! ($('__TAB.K'+$_ind+'+=_a'))(_[_ind]) !}; __TAB.put
       ?}; __TAB.cntx_pop";

__TAB.prefix(2);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,14,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(5);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,14,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(13);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,14,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(14);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,16,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(15);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,16,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(16);
{? __TAB.first
|| {!
   |? {! _ind:=1..6
      |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?}
      !};
      __TAB.put; __TAB.next
   !}
?};
__TAB.prefix;
_wyn:={? ~(_podatek>0)
      || FUN.emsg('Brak informacji do wykazania na deklaracji\n (zerowe kwoty podatku).'@); 0
      || 1
      ?};
undefine;
exec('stalesys','#stalesys');
_wyn


\init_pit11p_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [2009+]
:: OPIS: Formula dla akcji Dolacz okna deklaracji PIT-11 dla pracownika lub zleceniobiorcy
::   WE: _a - string typ deklaracji PIT11P, PIT4R
::       _b - string T lub N czy tworzyc deklaracje jezeli podatnik ma juz
::       _c - string T lub N czy tworzyc deklaracje zbiorcza dla podatnika
::       _d - string T lub N czy sumowac umowy zlecenia sprzed zatrudnienia
::       _e - string T lub N czy dolaczono informacje PIT-R
::       _f - string T korekta lub N zlozenie deklaracji
::       _g - string T lub N przetwarzanie danych osobowych lub nie
::       _h - data przekazania danych osobowych
::       _i - string T lub N czy umozliwiac zmiane informacji o kosztach uzyskania
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('pit')>100 || obj_del(pit) ?};
pit:=obj_new(91);
{! _n:=1..34 |! pit[_n]:='' !};
{! _n:=35..obj_len(pit) |! pit[_n]:=0 !};
_pom:=pit[3]:=obj_new(10);
_pom[2]:={? _a='PIT11P' || 'P' || 'Z' ?};
_pom[1]:=__Rok;

::czy wydruk dla podatnika?
_pom[4]:={? _pom[3]:=(_c='T')
         || tab_tmp(1,'OSOBA','INTEGER','Podatnik')
         || ~~
         ?};
::czy sumowac umowy zlecenie sprzed zatrudnienia'
{? _pom[3] & _pom[2]='P'
|| _pom[10]:=(_d='T')
|| _pom[10]:=0
?};
::czy przychody pochodza z wiecej niz jednego stosunku pracy
_pom[5]:=0;
::czy umozliwiac zmiane informacji o kosztach uzyskania?
_pom[6]:=_i;
::czy rejestrowac przekazanie danych osobowych?
{? _g='T'
|| _pom[9]:=_h
|| _pom[9]:=date(0,0,0)
?};

exec('czytaj','#stalesys',date(__Rok,12,0),KST);

::wysokosc kosztow uzyskania
_pom[7]:=KST.KU;
_pom[8]:=(_b='T');

pit[7]:=_f;

pit[85]:=_e;

KP.cntx_psh; KP.index('_KARTAPO');
RH.cntx_psh; RH.index('RACHDATA');

us_podat:=null;
DEKL_POD.cntx_psh;
DEKL_POD.use('pod_'+$_pom[1]);
DEKL_POD.index('DEKL_PED')


\init_pit11p_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [2010]
:: OPIS: Formula dla akcji Dolacz okna deklaracji PIT-11 dla pracownika lub zleceniobiorcy
::       dla 2 wersji e-deklaracji obowiazujacej od 01.01.2009 roku
::   WE: _a - string typ deklaracji PIT11P, PIT4R
::       _b - string T lub N czy tworzyc deklaracje jezeli podatnik ma juz
::       _c - string T lub N czy tworzyc deklaracje zbiorcza dla podatnika
::       _d - string T lub N czy sumowac umowy zlecenia sprzed zatrudnienia
::       _e - string T lub N czy dolaczono informacje PIT-R
::       _f - string T korekta lub N zlozenie deklaracji
::       _g - string T lub N przetwarzanie danych osobowych lub nie
::       _h - data przekazania danych osobowych
::       _i - string T lub N czy umozliwiac zmiane informacji o kosztach uzyskania
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__PIT','__WER','__wk','__transl');
{? var_pres('pit')>100 || obj_del(pit) ?};
pit:=obj_new(85);
{! _n:=1..34 |! pit[_n]:='' !};
{! _n:=35..obj_len(pit) |! pit[_n]:=0 !};
_pom:=pit[3]:=obj_new(11);
_pom[2]:={? _a='PIT11P' || 'P' || 'Z' ?};
_pom[1]:=__Rok;

::tabela do zapisu w wydrukowanych deklaracjach
{? var_pres('__par')>100 || obj_del(__par) ?};
__par:=tab_tmp(2,'RODZAJ','STRING[1]','Rodzaj','REF','INTEGER','Ref');

::czy wydruk dla podatnika?
_pom[4]:={? _pom[3]:=(_c='T')
         || tab_tmp(1,'OSOBA','INTEGER','Podatnik')
         || ~~
         ?};
::czy sumowac umowy zlecenie sprzed zatrudnienia'
{? _pom[3] & _pom[2]='P'
|| _pom[10]:=(_d='T')
|| _pom[10]:=0
?};
::czy przychody pochodza z wiecej niz jednego stosunku pracy
_pom[5]:=0;
::czy umozliwiac zmiane informacji o kosztach uzyskania?
_pom[6]:=_i;
::czy rejestrowac przekazanie danych osobowych?
{? _g='T'
|| _pom[9]:=_h
|| _pom[9]:=date(0,0,0)
?};

exec('czytaj','#stalesys',date(__Rok,12,0),KST);

::wysokosc kosztow uzyskania
_pom[7]:=KST.KU;
_pom[8]:=(_b='T');

pit[7]:=_f;

pit[82]:=_e;

KP.cntx_psh; KP.index('_KARTAPO');
RH.cntx_psh; RH.index('RACHDATA');
us_podat:=null;
DEKL_POD.cntx_psh;
DEKL_POD.use('pod_'+$_pom[1]);
DEKL_POD.index('DEKL_PED');

__wk:=obj_new(10);
{! _nx:=1..obj_len(__wk)
|! __wk[_nx]:=obj_new(6);
   {! _ny:=1..obj_len(__wk[_nx])
   |! __wk[_nx][_ny]:=0
   !}
!};
__transl:="{? RU_DEKL.DEKL().NR=__WER
           || __wk[1][2]:=36;  __wk[1][3]:=37; __wk[1][4]:=38;  __wk[1][5]:=39;  __wk[1][6]:=40;
              __wk[2][2]:=43;  __wk[2][3]:=0;  __wk[2][4]:=44;  __wk[2][5]:=0;   __wk[2][6]:=45;
              __wk[3][2]:=46;  __wk[3][3]:=0;  __wk[3][4]:=47;  __wk[3][5]:=48;  __wk[3][6]:=49;
              __wk[4][2]:=50;  __wk[4][3]:=0;  __wk[4][4]:=51;  __wk[4][5]:=0;   __wk[4][6]:=52;
              __wk[5][2]:=53;  __wk[5][3]:=0;  __wk[5][4]:=54;  __wk[5][5]:=0;   __wk[5][6]:=55;
              __wk[6][2]:=56;  __wk[6][3]:=57; __wk[6][4]:=58;  __wk[6][5]:=0;   __wk[6][6]:=59;
              __wk[7][2]:=60;  __wk[7][3]:=61; __wk[7][4]:=62;  __wk[7][5]:=0;   __wk[7][6]:=63;
              __wk[8][2]:=64;  __wk[8][3]:=65; __wk[8][4]:=66;  __wk[8][5]:=0;   __wk[8][6]:=67;
              __wk[9][2]:=68;  __wk[9][3]:=69; __wk[9][4]:=70;  __wk[9][5]:=0;   __wk[9][6]:=71;
              __wk[10][2]:=72; __wk[10][3]:=0; __wk[10][4]:=73; __wk[10][5]:=74; __wk[10][6]:=75;
              RU_DEKL.WIERSZ
           || 0
           ?}";
__PIT:='PIT11';
__WER:=2;
::tabela pomocnicza dla wykrywania pokrywajacych sie okresow zatrudnienia
_pom[11]:=tab_tmp(2,'OD','DATE',,'DO','DATE',)


\init_pit11p_3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [11.22]
:: OPIS: Formula dla akcji Dolacz okna deklaracji PIT-11 dla pracownika lub zleceniobiorcy
::       dla 3 wersji e-deklaracji obowiazujacej od 01.01.2011 roku
::       (wymagana zmienna globalna __Rok-rok za ktory tworzona jest e-deklaracja)
::   WE: _a - string typ deklaracji PIT11P, PIT4R
::       _b - string T lub N czy tworzyc deklaracje jezeli podatnik ma juz
::       _c - string T lub N czy tworzyc deklaracje zbiorcza dla podatnika
::       _d - string T lub N czy sumowac umowy zlecenia sprzed zatrudnienia
::       _e - string T lub N czy dolaczono informacje PIT-R
::       _f - string T korekta lub N zlozenie deklaracji
::       _g - string T lub N przetwarzanie danych osobowych lub nie
::       _h - data przekazania danych osobowych
::       _i - string T lub N czy umozliwiac zmiane informacji o kosztach uzyskania
::       _j - numer wersji e-deklaracji pole VAT_DEK.NR().NR lub PIT_GRUP.NR().NR
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_j')<>type_of(0) || _j:=3 ?};
VAR_DEL.delete('__PIT','__WER','__wk','__transl');
{? var_pres('pit')>100 || obj_del(pit) ?};
pit:=obj_new(83);
{! _nx:=1..33 |! pit[_nx]:='' !};
{! _nx:=34..obj_len(pit) |! pit[_nx]:=0 !};
_pom:=pit[3]:=obj_new(11);
_pom[2]:={? _a='PIT11P' || 'P' || 'Z' ?};
_pom[1]:=__Rok;

::tabela do zapisu w wydrukowanych deklaracjach
{? var_pres('__par')>100 || obj_del(__par) ?};
__par:=tab_tmp(2,'RODZAJ','STRING[1]','Rodzaj','REF','INTEGER','Ref');

::czy wydruk dla podatnika?
_pom[4]:={? _pom[3]:=(_c='T')
         || tab_tmp(1,'OSOBA','INTEGER','Podatnik')
         || ~~
         ?};
::czy sumowac umowy zlecenie sprzed zatrudnienia'
{? _pom[3] & _pom[2]='P'
|| _pom[10]:=(_d='T')
|| _pom[10]:=0
?};
::czy przychody pochodza z wiecej niz jednego stosunku pracy
_pom[5]:=0;
::czy umozliwiac zmiane informacji o kosztach uzyskania?
_pom[6]:=_i;
::czy rejestrowac przekazanie danych osobowych?
{? _g='T'
|| _pom[9]:=_h
|| _pom[9]:=date(0,0,0)
?};

exec('czytaj','#stalesys',date(__Rok,12,0),KST);

::wysokosc kosztow uzyskania
_pom[7]:=KST.KU;
_pom[8]:=(_b='T');

pit[6]:=_f;

pit[81]:=_e;

KP.cntx_psh; KP.index('_KARTAPO');
RH.cntx_psh; RH.index('RACHDATA');
us_podat:=null;
DEKL_POD.cntx_psh;
DEKL_POD.use('pod_'+$_pom[1]);
DEKL_POD.index('DEKL_PED');

__wk:=obj_new(10);
{! _nx:=1..obj_len(__wk)
|! __wk[_nx]:=obj_new(6);
   {! _ny:=1..obj_len(__wk[_nx])
   |! __wk[_nx][_ny]:=0
   !}
!};
__transl:="{? RU_DEKL.DEKL().NR=__WER
          || __wk[1][2]:=35;  __wk[1][3]:=36; __wk[1][4]:=37;  __wk[1][5]:=38;  __wk[1][6]:=39;
             __wk[2][2]:=42;  __wk[2][3]:=0;  __wk[2][4]:=43;  __wk[2][5]:=0;   __wk[2][6]:=44;
             __wk[3][2]:=45;  __wk[3][3]:=0;  __wk[3][4]:=46;  __wk[3][5]:=47;  __wk[3][6]:=48;
             __wk[4][2]:=49;  __wk[4][3]:=0;  __wk[4][4]:=50;  __wk[4][5]:=0;   __wk[4][6]:=51;
             __wk[5][2]:=52;  __wk[5][3]:=0;  __wk[5][4]:=53;  __wk[5][5]:=0;   __wk[5][6]:=54;
             __wk[6][2]:=55;  __wk[6][3]:=56; __wk[6][4]:=57;  __wk[6][5]:=0;   __wk[6][6]:=58;
             __wk[7][2]:=59;  __wk[7][3]:=60; __wk[7][4]:=61;  __wk[7][5]:=0;   __wk[7][6]:=62;
             __wk[8][2]:=63;  __wk[8][3]:=64; __wk[8][4]:=65;  __wk[8][5]:=0;   __wk[8][6]:=66;
             __wk[9][2]:=67;  __wk[9][3]:=68; __wk[9][4]:=69;  __wk[9][5]:=0;   __wk[9][6]:=70;
             __wk[10][2]:=71; __wk[10][3]:=0; __wk[10][4]:=72; __wk[10][5]:=73; __wk[10][6]:=74;
             RU_DEKL.WIERSZ
          || 0
          ?}
         ";
__PIT:='PIT11';
__WER:=_j;
::tabela pomocnicza dla wykrywania pokrywajacych sie okresow zatrudnienia
_pom[11]:=tab_tmp(2,'OD','DATE',,'DO','DATE',)


\end_pit11p_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [2009+]
:: OPIS: Formula zwiazana z formula \init_pit11p_1 oraz \init_pit11p_2 usuwa utworzone zmienne
::       i przywraca konteksty tabel
::----------------------------------------------------------------------------------------------------------------------
obj_del(pit); &pit;
undefine;
KP.cntx_pop;
RH.cntx_pop;
&us_podat;
VAR_DEL.delete('__PIT','__WER','__wk','__transl');
DEKL_POD.cntx_pop;
{? var_pres('__par')>100 || obj_del(__par); &__par ?};
exec('stalesys','#stalesys')


\obl_pit11p_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [2009+]
:: OPIS: Formula wylicza dane do deklaracji Pit-11 z systemu
::----------------------------------------------------------------------------------------------------------------------
_wynik:=0;
_pom:=pit[3];
pit[4]:=pit[5]:=date(0,0,0);
us_podat:=null;
pit[91]:=0;

::wyczysc rubryki formularza wlasciwe dla podatnika

{! _n:=20..34 |! pit[_n]:='' !};
{! _n:=35..84 |! pit[_n]:=0 !};
pit[23]:=date(0,0,0);

_jest_pit:=_jestwyd:=0;
VAT_DEK.cntx_psh;
VAT_DEK.index('VAT_PRAC');
VAT_DEK.prefix(P.ref,rodzdekl,rok_dekp,okres,pit_typ);
{? VAT_DEK.last || _jest_pit:=1 ?};
VAT_DEK.cntx_pop;
::sprawdzenie czy byla drukowana deklaracja poprzez wydruk bez e-deklaracji
{? ~_jest_pit
|| {? _pom[2]='P'
   || DEKL_POD.prefix('E',P.ref,'PIT-11','PIT-11')
   || DEKL_POD.prefix('Z',P.ref,'PIT-11','PIT-11')
   ?};
   {? DEKL_POD.first
   || _jest_pit:=_jestwyd:=1
   ?}
?};
{? ~_pom[8] & _jest_pit
|| {? _jestwyd || return(-2) || return(-1) ?}
?};

::jezeli informacja drukowana jest dla podatnika (osoby), to nie drukuj
::zwielokrotnionych informacji - kolejne wystapienia w kartotekach
{? _pom[3]
|| {? ~_pom[4].find_key(#P.OSOBA)
   || _pom[4].OSOBA:=#P.OSOBA;
      _pom[4].add
   || return(_wynik)
   ?}
?};

{? _pom[2]='P'
|| pit[4]:=pit[5]:=date(0,0,0)
|| pit[4]:=date(_pom[1],1,1);
   pit[5]:=date(_pom[1],12,0)
?};

_pom[5]:=0;
_liczmies:=0;

::uwzgledniaj przychody ze stosunku pracy
{? _pom[2]='P'
|| P.cntx_psh;
::informacja dla podatnika
   {? _pom[3]
   || P.index('PRACOSOB');
      P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
      P.first
   ?};
   {!
   |? KP.prefix(P.ref,_pom[1]);
      {? KP.first
      || _pom[5]+=1;
         _dat:=date(KP.R,KP.M,1);
         {? pit[4]=date(0,0,0) | _dat<pit[4] || pit[4]:=_dat ?};
         {!
         |? _dat:=date(KP.R,KP.M,0);
            {? pit[5]<_dat || pit[5]:=_dat ?};
            pit[36]+=(KP.S1+KP.S10)$2;
            pit[37]+=KP.S2$2;
            pit[39]+=KP.S4$2;
            pit[81]+=KP.S10$2;
            pit[82]+=KP.S9$2;
            _liczmies+=((KP.S2$2)<>0);
            KP.next
         !}
      ?};
      {? (pit[4]~1=P.DZA~1) & (pit[4]~2=P.DZA~2) || pit[4]:=P.DZA ?};
      {? (pit[5]~1=P.DZ~1) & (pit[5]~2=P.DZ~2) || pit[5]:=P.DZ ?};
      {? P.DZA~1<=_pom[1] & (P.DZ~1>=_pom[1] | P.DZ=date(0,0,0))
      || {? P.DZA~1=_pom[1]
         || {? P.DZA<pit[4] | pit[4]=date(0,0,0) || pit[4]:=P.DZA ?}
         || pit[4]:=date(_pom[1],1,1)
         ?};
         {? P.DZ~1=_pom[1]
         || {? P.DZ>pit[5] || pit[5]:=P.DZ ?}
         || pit[5]:=date(_pom[1],12,0)
         ?}
      ?};
      _pom[3] & P.next
   !};
   P.cntx_pop;
   {? pit[81]<0 || pit[36]-=pit[81]; pit[81]:=0 ?};
   {? pit[82]<0 || pit[82]:=0 ?};
   _zku:=KST.KUZ$2;
   pit[35]:={? _liczmies>0
            || {? _pom[5]>1
               || {? _pom[7]*_liczmies   = pit[37] || 2
                  |? _zku*_liczmies      = pit[37] || 4
                  ?}
               || {? _pom[7]*_liczmies$2 = pit[37] || 1
                  |? _zku*_liczmies      = pit[37] || 3
                  ?}
               ?}
            ?};
   &_zku;
   {? ~pit[35] & exec('szukaj_p_ipod','pracownik',date(_pom[1],12,0))
   || _ku:=P_IPOD.KU;
      pit[35]:={? _pom[5]>1
               || {? _ku='N' || 2 |? _ku='Z' || 4 ?}
               || {? _ku='N' || 1 |? _ku='Z' || 3 ?}
               ?}
   ?};
   {? _pom[6]='T'
   || _kto:=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      {? _pom[5]<2
      || popup(,'Koszty uzyskania: '@+&_kto,
                'określone na koniec roku '@+$_pom[1]+': ('+$pit[35]+') '+
               {? pit[35]=1 || 'podstawowe'@ || 'zwiększone'@ ?},,"pit[35]",
               '--',,,
               '1. z jednego stosunku pracy (stosunków pokrewnych)'@,,"pit[35]:=1",
               '3. z jednego stosunku pracy (stosunków pokrewnych), zwiększone'@,,"pit[35]:=3")
      || popup(,'Koszty uzyskania: '@+&_kto,
                'określone na koniec roku '@+$_pom[1]+': ('+$pit[35]+') '+
               {? pit[35]=2 || 'podstawowe'@ || 'zwiększone'@ ?},,"pit[35]",
               '--',,,
               '2. z więcej niż jednego stosunku pracy (stosunków pokrewnych)'@,,"pit[35]:=2",
               '4. z więcej niż jednego stosunku pracy (stosunków pokrewnych), zwiększone'@,,"pit[35]:=4")
      ?}
   ?}
?};

RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,_pom[1]);
{? RH.first
|| {!
   |? _um:=RH.ZLE().RU().K;
      {? ~(',7,8,'*(','+_um+',')) &
      {? _pom[2]='Z'
      || {? ~exec('czy_prac','osoba',ZC.OSOBA,RH.DWY)
         || {? ~_pom[3] || ZC.P=P.ref() || 1 ?}
         ?}
      || {? ~_pom[3]
         || _pref:=P.ref;
            _ok:=0;
            P.cntx_psh;
            P.index('PRACOSOB');
            P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
            {? P.first
            || {!
               |? {? P.DZA<=RH.DWY
                     & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                  || _ok:=(_pref=P.ref); 0
                  || P.next
                  ?}
               !}
            ?};
            P.cntx_pop;
            &_ok
         || _pdz:=date(0,0,0);
           {? _pom[10]
           || P.cntx_psh;
              P.index('PRACOSOB');
              P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
              {? P.first
              || _pdz:=P.DZ;
                 {!
                 |? {? P.DZ=date(0,0,0)
                    || _pdz:=date(0,0,0); 0
                    || {? _pdz<P.DZ || _pdz:=P.DZ ?};
                        P.next
                    ?}
                 !}
              ?};
              P.cntx_pop
           ?};
           (_pom[10] & ( _pdz>=RH.DWY | _pdz=date(0,0,0))) | exec('czy_prac','osoba',P.OSOBA,RH.DWY)
         ?}
      ?}
      || {? pit[4]>RH.DWY || pit[4]:=RH.DWY ?};
         _skl:=exec('licza_rhs','lista_licz',5711,5721);
         {? '126'*_um
         ||
::          umowy-zlecenia i o dzielo
            pit[54]+=(_skl+exec('licza_rhs','lista_licz',92));
            pit[55]+=exec('licza_rhs','lista_licz',93);
            pit[57]+=exec('licza_rhs','lista_licz',961)
         |? '45'*_um
         || pit[62]+=(_skl+exec('licza_rhs','lista_licz',92));
            pit[63]+=exec('licza_rhs','lista_licz',93);
            pit[65]+=exec('licza_rhs','lista_licz',961)
         |? '3'*_um
         ||
::          prawa autorskie
            pit[70]+=(_skl+exec('licza_rhs','lista_licz',92));
            pit[71]+=exec('licza_rhs','lista_licz',93);
            pit[73]+=exec('licza_rhs','lista_licz',961)
         ||
::          inne zrodla
            pit[78]+=(_skl+exec('licza_rhs','lista_licz',92));
            pit[80]+=exec('licza_rhs','lista_licz',961)
         ?};
          pit[81]+=_skl;
          pit[82]+=exec('licza_rhs','lista_licz',57412)
      ?};
      RH.next
   !}
?};

pit[38]:=pit[36]-pit[37]; {? pit[38]<0 || pit[38]:=0 ?};
pit[56]:=pit[54]-pit[55]; {? pit[56]<0 || pit[56]:=0 ?};
pit[64]:=pit[62]-pit[63]; {? pit[64]<0 || pit[64]:=0 ?};
pit[72]:=pit[70]-pit[71]; {? pit[72]<0 || pit[72]:=0 ?};
pit[79]:=pit[78];

{? ~(pit[91]:=pit[36]+pit[54]+pit[62]+pit[70]+pit[78])
|| return(_wynik)
?};

_adus:=exec('adresdous','osoba',_pom[1]);
{? #(_adus+1)
|| pit[6]:=OS_US.US().NU+
           {? +US.UU || ', '+US.UU || '' ?}+
           {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?};
   us_podat:=OS_US.US
|| pit[6]:='';
   us_podat:=null
?};
{? #(1+_adus)
|| pit[25]:=OS_ADRES.KRAJ().NAZ;
   pit[26]:=OS_ADRES.WOJEWODZ;
   pit[27]:=OS_ADRES.POWIAT;
   pit[28]:=OS_ADRES.GMINA;
   pit[29]:=OS_ADRES.ULICA;
   pit[30]:=OS_ADRES.DOM;
   pit[31]:=OS_ADRES.LOKAL;
   pit[32]:=OS_ADRES.MIASTO;
   pit[33]:=OS_ADRES.KOD;
   pit[34]:=OS_ADRES.POCZTA
|| {! _n:=25..34 |! pit[_n]:='' !}
?};
pit[6]:=~-pit[6];

pit[20]:=OSOBA.NIP;
pit[21]:=OSOBA.NAZWISKO;
pit[22]:=OSOBA.PIERWSZE;
pit[23]:=OSOBA.UR_DATA;
pit[24]:=OSOBA.PESEL;

{? pit[91]
|| {? pit[3][9]<>date(0,0,0)
   || exec('przekaz','giodo',pit[3][9],
           'Przekazanie danych na formularzu PIT-11',
           'odbiorcą danych jest:',
           pit[6])
   ?};
   _wynik:=1
?};
_wynik


\obl_pit11p_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [2010]
:: OPIS: Formula wylicza dane do deklaracji Pit-11 z systemu dla 2 wersji
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - 1 - jesli jest prawidlowy symbol i wymagane dane do utworzenia deklaracji
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 1 ?};
_wynik:=0;
_pom:=pit[3];
pit[4]:=pit[5]:=date(0,0,0);
us_podat:=null;
pit[85]:=0;
__par.erase;

::wyczysc rubryki formularza wlasciwe dla podatnika

{! _n:=20..34 |! pit[_n]:='' !};
{! _n:=35..81 |! pit[_n]:=0 !};
pit[23]:=date(0,0,0);

_jest_pit:=_jestwyd:=0;
VAT_DEK.cntx_psh;
VAT_DEK.index('VAT_PRAC');
VAT_DEK.prefix(P.ref,rodzdekl,rok_dekp,okres,pit_typ);
{? VAT_DEK.last || _jest_pit:=1 ?};
VAT_DEK.cntx_pop;
::sprawdzenie czy byla drukowana deklaracja poprzez wydruk bez e-deklaracji
{? ~_jest_pit
|| {? _pom[2]='P'
   || DEKL_POD.prefix('E',P.ref,'(E)PIT-11','(E)PIT-11')
   || DEKL_POD.prefix('Z',P.ref,'(E)PIT-11','(E)PIT-11')
   ?};
   {? DEKL_POD.first
   || _jest_pit:=1
   ?}
?};
{? ~_jest_pit
|| {? _pom[2]='P'
   || DEKL_POD.prefix('E',P.ref,'PIT-11','PIT-11')
   || DEKL_POD.prefix('Z',P.ref,'PIT-11','PIT-11')
   ?};
   {? DEKL_POD.first
   || _jest_pit:=_jestwyd:=1
   ?}
?};
{? ~_pom[8] & _jest_pit
|| {? _jestwyd || return(-2) || return(-1) ?}
?};

{? _pom[3]
|| {? _pom[2]='P'
   || KP.cntx_psh();
      KP.prefix();
      {? ~KP.find_key(P.ref(),_pom[1])
      || {? ~(P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1]))
         || KP.cntx_pop();
            return(0)
         ?}
      ?};
      KP.cntx_pop()
   || RH.index('RACHPRZ');
      RH.prefix();
      {? ~RH.find_key(P.ref,_pom[1]) || RH.index('RACHDATA'); return(0) ?};
      RH.index('RACHDATA')
   ?}
?};

::jezeli informacja drukowana jest dla podatnika (osoby), to nie drukuj
::zwielokrotnionych informacji - kolejne wystapienia w kartotekach
{? _pom[3]
|| {? ~_pom[4].find_key(#P.OSOBA)
   || _pom[4].OSOBA:=#P.OSOBA;
      _pom[4].add
   || return(_wynik)
   ?}
?};

{? _pom[2]='P'
|| pit[4]:=pit[5]:=date(0,0,0)
|| pit[4]:=date(_pom[1],1,1);
   pit[5]:=date(_pom[1],12,0)
?};

_pom[5]:=0;
_liczmies:=0;

::uwzgledniaj przychody ze stosunku pracy
{? _pom[2]='P'
|| P.cntx_psh;
::informacja dla podatnika
   {? _pom[3]
   || P.index('PRACOSOB');
      P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
      P.first;
      _pom[11].erase
   ?};
   {!
   |? KP.prefix(P.ref,_pom[1]);
      {? KP.first
      || _od:=date(_pom[1],KP.M,1);
         _dat:=date(KP.R,KP.M,1);
         {? ~__par.find_key('E',#P.ref)
         || __par.RODZAJ:='E'; __par.REF:=#P.ref; __par.add(1)
         ?};
         {? pit[4]=date(0,0,0) | _dat<pit[4] || pit[4]:=_dat ?};
         {!
         |? _dat:=date(KP.R,KP.M,0);
            {? pit[5]<_dat || pit[5]:=_dat ?};
            pit[36]+=(KP.S1+KP.S10)$2;
            pit[37]+=KP.S2$2;
            pit[40]+=KP.S4$2;
            pit[76]+=KP.S10$2;
            pit[78]+=KP.S9$2;
            _liczmies+=((KP.S2$2)<>0);
            KP.next
         !};
         _do:=date(_pom[1],KP.M,0);
        {? _pom[3] & ~pit[35]
        || {? ~_pom[11].find_tab(0,'OD',,'<=',_do,'DO',,'>=',_od)
           || _pom[11].OD:=_od;
              _pom[11].DO:=_do;
              _pom[11].add
           || pit[35]:=2;
              _pom[5]:=1
           ?}
        ?}
      ?};

      {? (pit[4]~1=P.DZA~1) & (pit[4]~2=P.DZA~2) || pit[4]:=P.DZA ?};
      {? (pit[5]~1=P.DZ~1) & (pit[5]~2=P.DZ~2) || pit[5]:=P.DZ ?};
      {? P.DZA~1<=_pom[1] & (P.DZ~1>=_pom[1] | P.DZ=date(0,0,0))
      || {? P.DZA~1=_pom[1]
         || {? P.DZA<pit[4] | pit[4]=date(0,0,0) || pit[4]:=P.DZA ?}
         || pit[4]:=date(_pom[1],1,1)
         ?};
         {? P.DZ~1=_pom[1]
         || {? P.DZ>pit[5] || pit[5]:=P.DZ ?}
         || pit[5]:=date(_pom[1],12,0)
         ?}
      ?};
      _pom[3] & P.next
   !};
   P.cntx_pop;
   {? pit[76]<0 || pit[36]-=pit[76]; pit[76]:=0 ?};
   {? pit[78]<0 || pit[78]:=0 ?};
   _zku:=KST.KUZ$2;
   pit[35]:={? pit[35]=2
            || {? _zku*_liczmies=pit[37] || 4 || 2 ?}
            |? _liczmies>0
            || {? _pom[7]*_liczmies$2 = pit[37] || 1
               |? _zku*_liczmies      = pit[37] || 3
               ?}
            ?};
   &_zku;
   {? ~pit[35] & exec('szukaj_p_ipod','pracownik',date(_pom[1],12,0))
   || pit[35]:={? P_IPOD.KU='N' || 1 |? P_IPOD.KU='Z' || 3 ?}
   ?};
   {? pit[35]=0
   || pit[35]:=1
   ?};
   {? _pom[6]='T'
   || _kto:=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      {? ~_pom[5]
      || popup(,'Koszty uzyskania: '@+&_kto,
                'określone na koniec roku '@+$_pom[1]+': ('+$pit[35]+') '+
               {? pit[35]=1 || 'podstawowe'@ || 'zwiększone'@ ?},,"pit[35]",
               '--',,,
               '1. z jednego stosunku pracy (stosunków pokrewnych)'@,,"pit[35]:=1",
               '3. z jednego stosunku pracy (stosunków pokrewnych), zwiększone'@,,"pit[35]:=3")
      || popup(,'Koszty uzyskania: '@+&_kto,
                'określone na koniec roku '@+$_pom[1]+': ('+$pit[35]+') '+
               {? pit[35]=2 || 'podstawowe'@ || 'zwiększone'@ ?},,"pit[35]",
               '--',,,
               '2. z więcej niż jednego stosunku pracy (stosunków pokrewnych)'@,,"pit[35]:=2",
               '4. z więcej niż jednego stosunku pracy (stosunków pokrewnych), zwiększone'@,,"pit[35]:=4")
      ?}
   ?}
?};

RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,_pom[1]);
{? RH.first
|| {? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
   {!
   |? _um:=RH.ZLE().RU().K;
      {? {? _pom[1]>=2009 || ~exec('licz_rhs','lista_licz',31) || 1 ?} & (~(',7,8,'*(','+_um+','))) &
      {? _pom[2]='Z'
      || {? ~exec('czy_prac','osoba',ZC.OSOBA,RH.DWY)
         || {? ~_pom[3] || ZC.P=P.ref() || 1 ?}
         ?}
      || {? ~_pom[3]
         || _pref:=P.ref;
            _ok:=0;
            P.cntx_psh;
            P.index('PRACOSOB');
            P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
            {? P.first
            || {!
               |? {? P.DZA<=RH.DWY
                     & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                  || _ok:=(_pref=P.ref); 0
                  || P.next
                  ?}
               !}
            ?};
            P.cntx_pop;
            &_ok
            || _pdz:=_pdza:=date(0,0,0);
               {? _pom[10]
               || P.cntx_psh;
                  P.index('PRACOSOB');
                  P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
                  {? P.first
                  || _pdz:=P.DZ; _pdza:=P.DZA; _pdzw:=1;
                     {!
                     |? {? _pdzw
                        || {? P.DZ=date(0,0,0)
                           || _pdz:=date(_pom[1],12,0); _pdzw:=0
                           || {? _pdz<P.DZ || _pdz:=P.DZ ?};
                              1
                           ?}
                        ?};
                        {? P.DZA<_pdza || _pdza:=P.DZA ?};
                        P.next
                     !}
                  ?};
                  P.cntx_pop
               ?};
               _pom[10] | exec('czy_prac','osoba',P.OSOBA,RH.DWY)
         ?}
      ?}
      || {? ~__par.find_key('Z',#ZC.P)
         || __par.RODZAJ:='Z'; __par.REF:=#ZC.P; __par.add(1)
         ?};
         {? _pom[10] & (RH.DWY<_pdza | RH.DWY>_pdz)
         || pit[4]:=date(_pom[1],1,1);
            pit[5]:=date(_pom[1],12,0)
         ?};
         _skl:=exec('licza_rhs','lista_licz',5711,5721);
         {? var_pres('RU_DEKL')=var_pres('SYSLOG')
             & {? RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=',__PIT,'DEKL','NR','=',__WER)
               || __transl()
               || 0
               ?}
            ||
               {! _nx:=2..obj_len(__wk[RU_DEKL.WIERSZ])
               |! _poz:=__wk[RU_DEKL.WIERSZ][_nx];
                  {? _poz
                  || pit[_poz]+={? _nx=2
                                || (_skl+exec('licza_rhs','lista_licz',92))
                                |? _nx=3
                                || exec('licza_rhs','lista_licz',93)
                                |? _nx=4
                                || (_skl+exec('licza_rhs','lista_licz',92)-exec('licza_rhs','lista_licz',93))
                                |? _nx=5
                                || 0
                                |? _nx=6
                                || exec('licza_rhs','lista_licz',961)
                                || 'przypadki nieuwzglednione'@; 0
                                ?}
                  ?}
               !}
         |? '12456'*_um
         ||
::          umowy-zlecenia i o dzielo
            pit[56]+=(_skl+exec('licza_rhs','lista_licz',92));
            pit[57]+=exec('licza_rhs','lista_licz',93);
            pit[59]+=exec('licza_rhs','lista_licz',961)
         |? '3'*_um
         ||
::          prawa autorskie
            pit[64]+=(_skl+exec('licza_rhs','lista_licz',92));
            pit[65]+=exec('licza_rhs','lista_licz',93);
            pit[67]+=exec('licza_rhs','lista_licz',961)
         ||
::          inne zrodla
            pit[72]+=(_skl+exec('licza_rhs','lista_licz',92));
            pit[75]+=exec('licza_rhs','lista_licz',961)
         ?};
          pit[76]+=_skl;
          pit[78]+=exec('licza_rhs','lista_licz',57412)
      ?};
      RH.next
   !}
?};

pit[38]:=pit[36]-pit[37]; {? pit[38]<0 || pit[38]:=0 ?};
pit[58]:=pit[56]-pit[57]; {? pit[58]<0 || pit[58]:=0 ?};
pit[66]:=pit[64]-pit[65]; {? pit[66]<0 || pit[66]:=0 ?};
pit[73]:=pit[72];

{? ~(pit[85]:=pit[36]+pit[56]+pit[60]+pit[64]+pit[68]+pit[72]) || return(_wynik) ?};

pit[4]:=pit[4];
pit[5]:=pit[5];
_adus:=exec('adresdous','osoba',_pom[1]);
{? #(_adus+1)
|| pit[6]:=OS_US.US().NU+
           {? +US.UU || ', '+US.UU || '' ?}+
           {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?};
   us_podat:=OS_US.US
|| pit[6]:='';
   us_podat:=null
?};
{? #(1+_adus)
|| pit[25]:=OS_ADRES.KRAJ().NAZ;
   pit[26]:=OS_ADRES.WOJEWODZ;
   pit[27]:=OS_ADRES.POWIAT;
   pit[28]:=OS_ADRES.GMINA;
   pit[29]:=OS_ADRES.ULICA;
   pit[30]:=OS_ADRES.DOM;
   pit[31]:=OS_ADRES.LOKAL;
   pit[32]:=OS_ADRES.MIASTO;
   pit[33]:=OS_ADRES.KOD;
   pit[34]:=OS_ADRES.POCZTA
|| {! _n:=25..34 |! pit[_n]:='' !}
?};

pit[20]:=OSOBA.NIP;
pit[21]:=OSOBA.NAZWISKO;
pit[22]:=OSOBA.PIERWSZE;
pit[23]:=OSOBA.UR_DATA;
pit[24]:=OSOBA.PESEL;

{? _a
|| P.cntx_psh;
   P.clear;
   DEKL_POD.cntx_psh;
   DEKL_POD.clear;
   {? __par.first
   || {!
      |? DEKL_POD.blank;
         DEKL_POD.PIT:='(E)PIT-11';
         {? __par.RODZAJ='E' & P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='E'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         |? P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='Z'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         ?};
         {? EDIT_VAR.PIT_RODZ=''
         || DEKL_POD.DATA:=VAT_DEK.DATA
         || DEKL_POD.DATA:={? PIT_EDIT.DATA<>date(0,0,0) || PIT_EDIT.DATA || VAT_DEK.DATA ?}
         ?};
         DEKL_POD.S1:=pit[36]+pit[56]+pit[60]+pit[64]+pit[68]+pit[72];
         DEKL_POD.S2:=pit[37]+pit[57]+pit[61]+pit[65]+pit[69];
         DEKL_POD.S3:=pit[40]+pit[59]+pit[63]+pit[67]+pit[71]+pit[75];
         DEKL_POD.USER:=OPERATOR.USER;
         DEKL_POD.add;
         __par.next
      !}
   ?};
   DEKL_POD.cntx_pop;
   P.cntx_pop
?};

{? pit[85]
|| {? _a & pit[3][9]<>date(0,0,0)
   || exec('przekaz','giodo',pit[3][9],
           'Przekazanie danych na formularzu PIT-11',
           'odbiorcą danych jest:',
           pit[6])
   ?};
   _wynik:=1
?};
_wynik


\obl_pit11p_3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [11.22]
:: OPIS: Formula wylicza dane do deklaracji Pit-11 z systemu dla 3 i 4 wersji
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - 1 - jesli jest prawidlowy symbol i wymagane dane do utworzenia deklaracji
::       _b - numer wersji e-deklaracji pole VAT_DEK.NR().NR lub PIT_GRUP.NR().NR
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 1 ?};
_b:={? var_pres('_b')>0 & type_of(_b)=type_of(0) || _b || 4 ?};
_wynik:=0;
_pom:=pit[3];
us_podat:=null;
pit[83]:=0;
__par.erase;

::wyczysc rubryki formularza wlasciwe dla podatnika
{? _b=4
|| {! _nx:=20..33 |! pit[_nx]:='' !};
{! _nx:=34..80 |! pit[_nx]:=0 !};
   pit[23]:=date(0,0,0);
   pit[24]:=null
|| {! _nx:=19..33 |! pit[_nx]:='' !};
   {! _nx:=34..80 |! pit[_nx]:=0 !};
   pit[22]:=date(0,0,0)
?};

_jest_pit:=_jestwyd:=0;
VAT_DEK.cntx_psh;
VAT_DEK.index('VAT_PRAC');
VAT_DEK.prefix(P.ref,rodzdekl,rok_dekp,okres,pit_typ);
{? VAT_DEK.last || _jest_pit:=1 ?};
VAT_DEK.cntx_pop;
::sprawdzenie czy byla drukowana deklaracja poprzez wydruk bez e-deklaracji
{? ~_jest_pit
|| {? _pom[2]='P'
   || DEKL_POD.prefix('E',P.ref,'(E)PIT-11','(E)PIT-11')
   || DEKL_POD.prefix('Z',P.ref,'(E)PIT-11','(E)PIT-11')
   ?};
   {? DEKL_POD.first
   || _jest_pit:=1
   ?}
?};
{? ~_jest_pit
|| {? _pom[2]='P'
   || DEKL_POD.prefix('E',P.ref,'PIT-11','PIT-11')
   || DEKL_POD.prefix('Z',P.ref,'PIT-11','PIT-11')
   ?};
   {? DEKL_POD.first
   || _jest_pit:=_jestwyd:=1
   ?}
?};
{? ~_pom[8] & _jest_pit
|| {? _jestwyd || return(-2) || return(-1) ?}
?};

{? _pom[3]
|| {? _pom[2]='P'
   || KP.cntx_psh();
      KP.prefix();
      {? ~KP.find_key(P.ref(),_pom[1])
      || {? ~(P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1]))
         || KP.cntx_pop();
            return(0)
         ?}
      ?};
      KP.cntx_pop()
   || RH.index('RACHPRZ');
      RH.prefix();
      {? ~RH.find_key(P.ref,_pom[1]) || RH.index('RACHDATA'); return(0) ?};
      RH.index('RACHDATA')
   ?}
?};

::jezeli informacja drukowana jest dla podatnika (osoby), to nie drukuj
::zwielokrotnionych informacji - kolejne wystapienia w kartotekach
{? _pom[3]
|| {? ~_pom[4].find_key(#P.OSOBA)
   || _pom[4].OSOBA:=#P.OSOBA;
      _pom[4].add
   || return(_wynik)
   ?}
?};

_pom[5]:=0;
_liczmies:=0;

::uwzgledniaj przychody ze stosunku pracy
{? _pom[2]='P'
|| P.cntx_psh;
::informacja dla podatnika
   {? _pom[3]
   || P.index('PRACOSOB');
      P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
      P.first;
      _pom[11].erase
   ?};
   {!
   |? KP.prefix(P.ref,_pom[1]);
      {? KP.first
      || _od:=date(_pom[1],KP.M,1);
         {? ~__par.find_key('E',#P.ref)
         || __par.RODZAJ:='E'; __par.REF:=#P.ref; __par.add(1)
         ?};
         {!
         |? pit[35]+=(KP.S1+KP.S10)$2;
            pit[36]+=KP.S2$2;
            pit[39]+=KP.S4$2;
            pit[75]+=KP.S10$2;
            pit[77]+=KP.S9$2;
            _liczmies+=((KP.S2$2)<>0);
            KP.next
         !};
         _do:=date(_pom[1],KP.M,0);
        {? _pom[3] & ~pit[34]
        || {? ~_pom[11].find_tab(0,'OD',,'<=',_do,'DO',,'>=',_od)
           || _pom[11].OD:=_od;
              _pom[11].DO:=_do;
              _pom[11].add
           || pit[34]:=2;
              _pom[5]:=1
           ?}
        ?}
      ?};
      _pom[3] & P.next
   !};
   P.cntx_pop;
   {? pit[75]<0 || pit[35]-=pit[75]; pit[75]:=0 ?};
   {? pit[77]<0 || pit[77]:=0 ?};
   _zku:=KST.KUZ$2;
   pit[34]:={? pit[34]=2
            || {? _zku*_liczmies=pit[36] || 4 || 2 ?}
            |? _liczmies>0
            || {? _pom[7]*_liczmies$2 = pit[36] || 1
               |? _zku*_liczmies      = pit[36] || 3
               ?}
            ?};
   &_zku;
   {? ~pit[34] & exec('szukaj_p_ipod','pracownik',date(_pom[1],12,0))
   || pit[34]:={? P_IPOD.KU='N' || 1 |? P_IPOD.KU='Z' || 3 ?}
   ?};
   {? pit[34]=0
   || pit[34]:=1
   ?};
   {? _pom[6]='T'
   || _kto:=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      {? ~_pom[5]
      || popup(,'Koszty uzyskania: '+&_kto,
                'określone na koniec roku '+$_pom[1]+': ('+$pit[34]+') '+
               {? pit[34]=1 || 'podstawowe' || 'zwiększone' ?},,"pit[34]",
               '--',,,
               '1. z jednego stosunku pracy (stosunków pokrewnych)',,"pit[34]:=1",
               '3. z jednego stosunku pracy (stosunków pokrewnych), zwiększone',,"pit[34]:=3")
      || popup(,'Koszty uzyskania: '+&_kto,
                'określone na koniec roku '+$_pom[1]+': ('+$pit[34]+') '+
               {? pit[34]=2 || 'podstawowe' || 'zwiększone' ?},,"pit[34]",
               '--',,,
               '2. z więcej niż jednego stosunku pracy (stosunków pokrewnych)',,"pit[34]:=2",
               '4. z więcej niż jednego stosunku pracy (stosunków pokrewnych), zwiększone',,"pit[34]:=4")
      ?}
   ?}
?};

RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,_pom[1]);
{? RH.first
|| {? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
   {!
   |? _um:=RH.ZLE().RU().K;
      {? {? _pom[1]>=2009 || ~exec('licz_rhs','lista_licz',31) || 1 ?} & (~(',7,8,'*(','+_um+','))) &
      {? _pom[2]='Z'
      || {? ~exec('czy_prac','osoba',ZC.OSOBA,RH.DWY)
         || {? ~_pom[3] || ZC.P=P.ref() || 1 ?}
         ?}
      || {? ~_pom[3]
         || _pref:=P.ref;
            _ok:=0;
            P.cntx_psh;
            P.index('PRACOSOB');
            P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
            {? P.first
            || {!
               |? {? P.DZA<=RH.DWY
                     & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                  || _ok:=(_pref=P.ref); 0
                  || P.next
                  ?}
               !}
            ?};
            P.cntx_pop;
            &_ok
         || _pom[10] | exec('czy_prac','osoba',P.OSOBA,RH.DWY)
         ?}
      ?}
      || {? ~__par.find_key('Z',#ZC.P)
         || __par.RODZAJ:='Z'; __par.REF:=#ZC.P; __par.add(1)
         ?};
         _skl:=exec('licza_rhs','lista_licz',5711,5721);
         {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
            {? RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=',__PIT,'DEKL','NR','=',__WER)
               || __transl()
               || 0
               ?}
         || {! _nx:=2..obj_len(__wk[RU_DEKL.WIERSZ])
               |! _poz:=__wk[RU_DEKL.WIERSZ][_nx];
                  {? _poz
                  || pit[_poz]+={? _nx=2
                                || (_skl+exec('licza_rhs','lista_licz',92))
                                |? _nx=3
                                || exec('licza_rhs','lista_licz',93)
                                |? _nx=4
                                || (_skl+exec('licza_rhs','lista_licz',92))-exec('licza_rhs','lista_licz',93)
                                |? _nx=5
                                || 0
                                |? _nx=6
                                || exec('licza_rhs','lista_licz',961)
                                || 'przypadki nieuwzglednione'; 0
                                ?}
                  ?}
               !}
         |? '12456'*_um
         ||
::          umowy-zlecenia i o dzielo
            pit[55]+=(_skl+exec('licza_rhs','lista_licz',92));
            pit[56]+=exec('licza_rhs','lista_licz',93);
            pit[58]+=exec('licza_rhs','lista_licz',961)
         |? '3'*_um
         ||
::          prawa autorskie
            pit[63]+=(_skl+exec('licza_rhs','lista_licz',92));
            pit[64]+=exec('licza_rhs','lista_licz',93);
            pit[66]+=exec('licza_rhs','lista_licz',961)
         ||
::          inne zrodla
            pit[71]+=(_skl+exec('licza_rhs','lista_licz',92));
            pit[74]+=exec('licza_rhs','lista_licz',961)
         ?};
          pit[75]+=_skl;
          pit[77]+=exec('licza_rhs','lista_licz',57412)
      ?};
      RH.next
   !}
?};

pit[37]:=pit[35]-pit[36]; {? pit[37]<0 || pit[37]:=0 ?};
pit[57]:=pit[55]-pit[56]; {? pit[57]<0 || pit[57]:=0 ?};
pit[65]:=pit[63]-pit[64]; {? pit[65]<0 || pit[65]:=0 ?};
pit[72]:=pit[71];

{? ~(pit[83]:=pit[35]+pit[40]+pit[42]+pit[45]+pit[49]+pit[52]+pit[55]+pit[59]+pit[63]+pit[67]+pit[71])
|| return(_wynik)
?};

_adus:=exec('adresdous','osoba',_pom[1]);
{? #(_adus+1)
|| pit[5]:=OS_US.US().NU+
           {? +US.UU || ', '+US.UU || '' ?}+
           {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?};
   us_podat:=OS_US.US
|| pit[5]:='';
   us_podat:=null
?};
{? #(1+_adus)
|| pit[24]:=OS_ADRES.KRAJ;
   pit[25]:=OS_ADRES.WOJEWODZ;
   pit[26]:=OS_ADRES.POWIAT;
   pit[27]:=OS_ADRES.GMINA;
   pit[28]:=OS_ADRES.ULICA;
   pit[29]:=OS_ADRES.DOM;
   pit[30]:=OS_ADRES.LOKAL;
   pit[31]:=OS_ADRES.MIASTO;
   pit[32]:=OS_ADRES.KOD;
   pit[33]:=OS_ADRES.POCZTA
|| {! _nx:=24..33 |! pit[_nx]:='' !}
?};
{? _b=4
|| pit[20]:=pit[21]:=pit[22]:='';
   pit[23]:=date(0,0,0)
|| pit[19]:=OSOBA.NIP;
   pit[20]:=OSOBA.NAZWISKO;
   pit[21]:=OSOBA.PIERWSZE;
   pit[22]:=OSOBA.UR_DATA;
   pit[23]:=OSOBA.PESEL
?};

{? _a
|| P.cntx_psh;
   P.clear;
   DEKL_POD.cntx_psh;
   DEKL_POD.clear;
   {? __par.first
   || {!
      |? DEKL_POD.blank;
         DEKL_POD.PIT:='(E)PIT-11';
         {? __par.RODZAJ='E' & P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='E'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         |? P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='Z'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         ?};
         {? EDIT_VAR.PIT_RODZ=''
         || DEKL_POD.DATA:=VAT_DEK.DATA
         || DEKL_POD.DATA:={? PIT_EDIT.DATA<>date(0,0,0) || PIT_EDIT.DATA || VAT_DEK.DATA ?}
         ?};
         DEKL_POD.S1:=pit[35]+pit[40]+pit[42]+pit[45]+pit[49]+pit[52]+pit[55]+pit[59]+pit[63]+pit[67]+pit[71];
         DEKL_POD.S2:=pit[36]+pit[41]+pit[56]+pit[60]+pit[64]+pit[68];
         DEKL_POD.S3:=pit[39]+pit[44]+pit[48]+pit[51]+pit[54]+pit[58]+pit[62]+pit[66]+pit[70]+pit[74];
         DEKL_POD.USER:=OPERATOR.USER;
         DEKL_POD.add;
         __par.next
      !}
   ?};
   DEKL_POD.cntx_pop;
   P.cntx_pop
?};

{? pit[83]
|| {? _a & pit[3][9]<>date(0,0,0)
   || exec('przekaz','giodo',pit[3][9],
           'Przekazanie danych na formularzu PIT-11',
           'odbiorcą danych jest:',
           pit[5])
   ?};
   _wynik:=1
?};
_wynik


\init_pit40p_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [2011]
:: OPIS: Formula dla akcji Dolacz okna deklaracji PIT-40 dla pracownika lub zleceniobiorcy
::       dla 2 wersji e-deklaracji obowiazujacej od 01.01.2009 roku
::   WE: _a - Integer Nr wersji formularza papierowego dla versji e-deklaracji PIT40
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__wk','pit','__transl','__PIT','__WER');
__PIT:=SKID.DEKL_NAZ;
__WER:=_a;
__wk:=obj_new(7);
{! _nx:=1..obj_len(__wk)
|! __wk[_nx]:=obj_new(5);
  {! _ny:=1..obj_len(__wk[_nx])
  |! __wk[_nx][_ny]:=0
  !}
!};
__transl:="{? RU_DEKL.DEKL().NRF=__WER
           || __wk[1][2]:=37;  __wk[1][3]:=38; __wk[1][4]:=39;  __wk[1][5]:=40;
              __wk[2][2]:=43;  __wk[2][3]:=0;  __wk[2][4]:=44;  __wk[2][5]:=45;
              __wk[3][2]:=46;  __wk[3][3]:=0;  __wk[3][4]:=47;  __wk[3][5]:=48;
              __wk[4][2]:=49;  __wk[4][3]:=0;  __wk[4][4]:=50;  __wk[4][5]:=51;
              __wk[5][2]:=52;  __wk[5][3]:=53; __wk[5][4]:=54;  __wk[5][5]:=55;
              __wk[6][2]:=56;  __wk[6][3]:=57; __wk[6][4]:=58;  __wk[6][5]:=59;
              __wk[7][2]:=60;  __wk[7][3]:=61; __wk[7][4]:=62;  __wk[7][5]:=63;
              RU_DEKL.WIERSZ
           || 0
           ?}";
spr_ku:=0;
pit:=obj_new(86);
{! _n:=1..18 |! pit[_n]:='' !};

pit[4]:=__Rok;
exec('czytaj','#stalesys',date(pit[4],12,0),KST);
pit[2]:=KST.UL_ROK;

{? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
us_podat:=null


\init_pit40p_3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [11.22]
:: OPIS: Formula dla akcji Dolacz okna deklaracji PIT-40 dla pracownika lub zleceniobiorcy
::       dla 2 wersji e-deklaracji obowiazujacej od 01.12.2012 roku
::   WE: _a - Integer Nr wersji formularza papierowego dla versji e-deklaracji PIT40
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__wk','pit','__transl','__PIT','__WER');
__PIT:=SKID.DEKL_NAZ;
__WER:=_a;
__wk:=obj_new(7);
{! _nx:=1..obj_len(__wk)
|! __wk[_nx]:=obj_new(5);
  {! _ny:=1..obj_len(__wk[_nx])
  |! __wk[_nx][_ny]:=0
  !}
!};
__transl:="{? RU_DEKL.DEKL().NRF=__WER
           || __wk[1][2]:=35;  __wk[1][3]:=36; __wk[1][4]:=37;  __wk[1][5]:=38;
              __wk[2][2]:=41;  __wk[2][3]:=0;  __wk[2][4]:=42;  __wk[2][5]:=43;
              __wk[3][2]:=44;  __wk[3][3]:=0;  __wk[3][4]:=45;  __wk[3][5]:=46;
              __wk[4][2]:=47;  __wk[4][3]:=0;  __wk[4][4]:=48;  __wk[4][5]:=49;
              __wk[5][2]:=50;  __wk[5][3]:=51; __wk[5][4]:=52;  __wk[5][5]:=53;
              __wk[6][2]:=54;  __wk[6][3]:=55; __wk[6][4]:=56;  __wk[6][5]:=57;
              __wk[7][2]:=58;  __wk[7][3]:=59; __wk[7][4]:=60;  __wk[7][5]:=61;
              RU_DEKL.WIERSZ
           || 0
           ?}";
spr_ku:=0;
pit:=obj_new(84);
{! _n:=1..18 |! pit[_n]:='' !};

pit[4]:=__Rok;
exec('czytaj','#stalesys',date(pit[4],12,0),KST);
pit[2]:=KST.UL_ROK;

{? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
us_podat:=null


\end_pit40p_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [2011]
:: OPIS: Formula zwiazana z formula \init_pit40p_2 usuwa utworzone zmienne i przywraca konteksty tabel
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__wk','pit','__transl','__PIT','__WER','__kosz50');
&spr_ku; &us_podat;
undefine;
exec('stalesys','#stalesys')


\obl_pit40p_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [2011]
:: OPIS: Formula wylicza dane do deklaracji Pit-40 z systemu dla 2 wersji
::   WE: _a - string typ deklaracji PIT40
::       _b - string T lub N czy tworzyc deklaracje jezeli podatnik (osoba) ma juz
::       _c - string T lub N czy dolaczono informacje PIT-R
::       _d - string T korekta lub N zlozenie deklaracji
::       _e - string T lub N przetwarzanie danych osobowych lub nie
::       _f - data przekazania danych osobowych
::----------------------------------------------------------------------------------------------------------------------
_wynik:=0;
_jest_pit:=0;
VAT_DEK.cntx_psh;
VAT_DEK.index('VAT_OSOB');
VAT_DEK.prefix(P.OSOBA,rodzdekl,rok_dekp,$__Rok,pit_typ);
{? VAT_DEK.last || _jest_pit:=1 ?};
VAT_DEK.cntx_pop;
{? _b='N' & _jest_pit || return(-1) ?};

spr_ku:=0;
us_podat:=null;
{! _n:=24..33 |! pit[_n]:='' !};
P.OSOBA();
_adus:=exec('adresdous','osoba',pit[4]);
{? #(_adus+1)
|| pit[5]:=OS_US.US().NU+
          {? +US.UU || ', '+US.UU || '' ?}+
          {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?};
   us_podat:=OS_US.US
|| pit[5]:='';
   us_podat:=null
?};
{? #(1+_adus)
|| pit[24]:=OS_ADRES.KRAJ().NAZ;
   pit[25]:=OS_ADRES.WOJEWODZ;
   pit[26]:=OS_ADRES.POWIAT;
   pit[27]:=OS_ADRES.GMINA;
   pit[28]:=OS_ADRES.ULICA;
   pit[29]:=OS_ADRES.DOM;
   pit[30]:=OS_ADRES.LOKAL;
   pit[31]:=OS_ADRES.MIASTO;
   pit[32]:=OS_ADRES.KOD;
   pit[33]:=OS_ADRES.POCZTA
|| {! _n:=24..33 |! pit[_n]:='' !}
?};

pit[5]:=~-pit[5];
pit[19]:=OSOBA.NIP;
pit[20]:=OSOBA.NAZWISKO;
pit[21]:=OSOBA.PIERWSZE;
pit[22]:=OSOBA.UR_DATA;
pit[23]:=OSOBA.PESEL;

pit[34]:='';
pit[35]:='';

{! _n:=36..84 |! pit[_n]:=0 !};
pit[71]:=pit[80]:='';

_kp:=sql(
   'select KP.S1, KP.S2, KP.S4, KP.S8, KP.S9, KP.S10, KP.P '
   'from KP join P '
   'where P.FIRMA=:_c and P.OSOBA=:_a and KP.R=:_b',
   OSOBA.ref,
   pit[4],
   exec('ref_firma','ustawienia')
);
{? _kp.first
||  _ku:=_kp.P;
  {!
  |?  spr_ku+=_kp.P<>_ku;
     pit[37]+=(_kp.S1+_kp.S10)$2;
     pit[38]+=_kp.S2$2;
     pit[40]+=_kp.S4$2;
     pit[68]+=_kp.S10$2;
     pit[77]+=_kp.S9$2;
     _ku:=_kp.P;
     _kp.next
  !}
?};
pit[39]:=(pit[37]-pit[38])$2;
obj_del(_kp);

RH.index('RACHDATA');
RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,pit[4]);
{? pit[37] & RH.first
|| {!
   |? {? ~(',7,8,'*(','+RH.ZLE().RU().K+','))
      || _skl:=exec('licza_rhs','lista_licz',5711,5721);
         {? var_pres('RU_DEKL')=var_pres('SYSLOG')
          & {? RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=',__PIT,'DEKL','NRF','=',__WER)
            || __transl()
            || 0
            ?}
         ||
            {! _nx:=2..obj_len(__wk[RU_DEKL.WIERSZ])
            |! _poz:=__wk[RU_DEKL.WIERSZ][_nx];
               {? _poz
               || pit[_poz]+={? _nx=2
                             || (_skl+exec('licza_rhs','lista_licz',92))$2
                             |? _nx=3
                             || exec('licza_rhs','lista_licz',93)$2
                             |? _nx=4
                             || ((_skl+exec('licza_rhs','lista_licz',92))-exec('licza_rhs','lista_licz',93))$2
                             |? _nx=5
                             || (exec('licza_rhs','lista_licz',961))$2
                             || 'przypadki nieuwzglednione'; 0
                             ?}
               ?}
            !}
           |? '12456'*RH.ZLE().RU().K
           || 'umowy o dzieło i zlecenia';
              pit[52]+=(_skl+exec('licza_rhs','lista_licz',92))$2;
              pit[53]+=exec('licza_rhs','lista_licz',93)$2;
              pit[55]+=(exec('licza_rhs','lista_licz',961))$2;
              pit[54]:=(pit[52]-pit[53])$2
           |? RU.K='3'
           || 'prawa autorskie';
              pit[56]+=(_skl+exec('licza_rhs','lista_licz',92))$2;
              pit[57]+=exec('licza_rhs','lista_licz',93)$2;
              pit[59]+=(exec('licza_rhs','lista_licz',961))$2;
              pit[58]:=(pit[56]-pit[57])$2
           || 'inne źródła';
              pit[60]+=(_skl+exec('licza_rhs','lista_licz',92))$2;
              pit[61]+=exec('licza_rhs','lista_licz',93)$2;
              pit[63]+=(exec('licza_rhs','lista_licz',961))$2;
              pit[62]:=(pit[60]-pit[61])$2
           ?};
           pit[68]+=_skl$2;
           pit[77]+=exec('licza_rhs','lista_licz',57412)$2
      ?};
      RH.next
   !}
?};
pit[64]:=(pit[37]+pit[52]+pit[56]+pit[60])$2;
pit[67]:=(pit[40]+pit[55]+pit[59]+pit[63])$2;

_kto:=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;

_width:=30;
undefine;
define('HD1',~~,' Odliczenia od dochodu:');
define('HD4',~~,'  Zwrot nienależnie pobranych świadczeń poz. 70');
define('OD2',0,,,17,_width,2);
define('HD8',~~,'  Inne odliczenia od dochodu ');
define('ID','','   Rodzaj poz. 71',,82,_width);
define('IOD',0,'   Kwota poz. 72',,17,_width,2);
define('HD11',~~);
define('HD5',~~,' Faktyczne koszty uzyskania przychodów ');
define('KUP',0,,,17,_width,2);
define('HD7',~~,' Pozycja na formularzu w informacji o kosztach uzyskania');
define('POZ',5,,,1,2,0);
define('HD6',~~,' Ulga podatkowa ');
define('ULG',pit[2],,,17,_width,2);
define('HD2',~~,' Doliczenie do podatku poz. 75');
define('OD1',0,,,17,_width,2);
define('HD9',~~,' Inne odliczenia od podatku');
define('IP','','   Rodzaj poz. 80',,82,_width);
define('IOP',0,'   Kwota poz. 81',,17,_width,2);
define('HD12',~~);

DEFINE.OD1:=DEFINE.OD2:=DEFINE.KUP:=DEFINE.IOD:=DEFINE.IOP:=0;
{!
|? def_edit("{? DEFINE.KUP
             || {? (DEFINE.POZ<1 | DEFINE.POZ>5)
                || FUN.emsg('Pozycja na formularzu w informacji o kosztach uzyskania\n'
                            'musi być z przedziału od 1 do 5.'@);
                   return('POZ')
                || 1
                ?}
             || 1
             ?}",'PIT-40 '+_kto);

   pit[6]:=_d;
   pit[34]:='N';
   pit[35]:=_c;
   pit[70]:=DEFINE.OD2$2;
   pit[71]:=DEFINE.ID;
   pit[72]:=DEFINE.IOD$2;
   pit[75]:=DEFINE.OD1$2;
   pit[80]:=DEFINE.IP;
   pit[81]:=DEFINE.IOP$2;

   {? DEFINE.KUP>0
   || pit[36]:=DEFINE.POZ;
      pit[38]:=DEFINE.KUP;
      pit[39]:=(pit[37]-pit[38])$2
   || pit[36]:={? exec('szukaj_p_ipod','pracownik',date(pit[4],12,0))
               || {? P_IPOD.KU='Z' || 3 || 1 ?}
               || 1
               ?};
      {? ~spr_ku
      || popup(,'Koszty uzyskania: '+_kto,
         '   określone na koniec roku '+$pit[4]+': ('+$pit[36]+') '+
         {? pit[36]=1 || 'podstawowe' || 'podwyższone' ?},,"pit[36]",
         '--',,,
         '1. z jednego stosunku pracy (stosunków pokrewnych)',,"pit[36]:=1",
         '3. z jednego stosunku pracy (stosunków pokrewnych), podwyższone',,"pit[36]:=3")
      || pit[36]:={? pit[36]=1 || 2 || 4 ?};
         popup(,'Koszty uzyskania: '+_kto,
         '   określone na koniec roku '+$pit[4]+': ('+$pit[36]+') '+
         {? pit[36]=1 || 'podstawowe' || 'podwyższone' ?},,"pit[36]",
         '--',,,
         '2. z więcej niż jednego stosunku pracy (stosunków pokrewnych)',,"pit[36]:=2",
         '4. z więcej niż jednego stosunku pracy (stosunków pokrewnych), podwyższone',,"pit[36]:=4")
      ?}
   ?};

   pit[65]:=(pit[38]+pit[53]+pit[57]+pit[61])$2;
   pit[66]:=(pit[39]+pit[54]+pit[58]+pit[62])$2;

   {? (pit[68]+pit[70]+pit[72])$2>pit[66]$2
   || _kwota:=pit[66]-pit[68];
      {? _kwota<0 || _kwota:=0 ?};
      {? _text:='%1 (nr teczki: %2)\n'
                'Nieprawidłowy dochód po odliczeniach.\n'
                'Wartość odliczenia nie może przekroczyć kwoty: %3.'@[_kto,form(P.T),$_kwota];
         FUN.choice(_text,0,'Wyzerowanie kwot'@,,,,'Powtórna edycja'@)
      || pit[70]:=pit[72]:=0;
         pit[71]:=''
      || 1
      ?}
   || 0
   ?}
!};

pit[85]:='';
pit[86]:='';

pit[73]:=(pit[66]-pit[68]-pit[70]-pit[72])$0;
{? pit[73]<0 || pit[73]:=0 ?};
{? TP.last
|| {! |? pit[73]$2<TP.K1$2 & TP.prev !};
   pit[74]+=((pit[73]-TP.K1)*TP.PR*0.01)$2;
   _poprog:=TP.K1$2;
   {!
   |? {? TP.prev
      || pit[74]+=((_poprog-TP.K1)*TP.PR*0.01)$2;
         _poprog:=TP.K1$2;
         1
      ?}
   !}
?};
pit[74]:=(pit[74]-DEFINE.ULG$2)$2;
{? pit[74]<0 || pit[74]:=0 ?};
pit[76]:=pit[74]+pit[75];
pit[79]:={? pit[77]>pit[76] || pit[76] || pit[77] ?}$2;

{? (pit[79]+pit[81])$2>pit[76]$2
|| {? _text:='%1 (nr teczki: %2)\n'
             'Nieprawidłowe odliczenia od podatku.\n'
             'Wartość odliczenia nie może przekroczyć kwoty: %3.'@[_kto,form(P.T),$(pit[76]-pit[79])];
      FUN.choice(_text,0,'Wyzerowanie kwot'@,,,,'Powtórna edycja'@)
   || pit[80]:='';
      pit[81]:=0
   || undefine;
      define('HD9',~~,' Inne odliczenia od podatku ');
      define('IP',pit[80],'  Rodzaj poz. 80',,160,_width);
      define('IOP',pit[81],'  Kwota poz. 81',,17,_width,2);
      {!
      |? def_edit(,'PIT-40 '+_kto);
         pit[80]:=DEFINE.IP;
         pit[81]:=DEFINE.IOP$2;
         {? (pit[79]+pit[81])$2>pit[76]$2
         || {? _text:='%1 (nr teczki: %2)\n'
                      'Nieprawidłowe odliczenia od podatku.\n'
                      'Wartość odliczenia nie może przekroczyć kwoty: %3.'@[_kto,form(P.T),$(pit[76]-pit[79])];
               FUN.choice(_text,0,'Wyzerowanie kwot'@,,,,'Powtórna edycja'@)
            || pit[80]:='';
               pit[81]:=0
            || 1
            ?}
         || 0
         ?}
      !}
   ?}
?};

pit[82]:=(pit[76]-pit[79]-pit[81])$0;
{? pit[82]<0 || pit[82]:=0 ?};
pit[83]:={? pit[67]<pit[82] || pit[82]-pit[67] ?}$0;
pit[84]:={? pit[67]>pit[82] || pit[67]-pit[82] ?}$0;
{? pit[64]>0
|| _wynik:=1;
   {? _e='T' & _f<>date(0,0,0)
   || exec('przekaz','giodo',_f,'Przekazanie danych na formularzu PIT-40\n',
           'odbiorcą danych jest:\n',
           pit[5])
   ?}
|| _wynik:=0
?};
_wynik


\obl_pit40p_3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [11.22]
:: OPIS: Formula wylicza dane do deklaracji Pit-40 z systemu dla 3 wersji
::   WE: _a - string typ deklaracji PIT40
::       _b - string T lub N czy tworzyc deklaracje jezeli podatnik (osoba) ma juz
::       _c - string T lub N czy dolaczono informacje PIT-R
::       _d - string T korekta lub N zlozenie deklaracji
::       _e - string T lub N przetwarzanie danych osobowych lub nie
::       _f - data przekazania danych osobowych
::----------------------------------------------------------------------------------------------------------------------
_wynik:=0;
_jest_pit:=0;
VAT_DEK.cntx_psh;
VAT_DEK.index('VAT_OSOB');
VAT_DEK.prefix(P.OSOBA,rodzdekl,rok_dekp,$__Rok,pit_typ);
{? VAT_DEK.last || _jest_pit:=1 ?};
VAT_DEK.cntx_pop;
{? _b='N' & _jest_pit || return(-1) ?};

spr_ku:=0;
us_podat:=null;
{! _n:=23..32 |! pit[_n]:='' !};
pit[23]:=null;
P.OSOBA();
_adus:=exec('adresdous','osoba',pit[4]);
{? #(_adus+1)
|| pit[5]:=OS_US.US().NU+
          {? +US.UU || ', '+US.UU || '' ?}+
          {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?};
   us_podat:=OS_US.US
|| pit[5]:='';
   us_podat:=null
?};
{? #(1+_adus)
|| pit[23]:=OS_ADRES.KRAJ;
   pit[24]:=~-OS_ADRES.WOJEWODZ;
   pit[25]:=~-OS_ADRES.POWIAT;
   pit[26]:=~-OS_ADRES.GMINA;
   pit[27]:=~-OS_ADRES.ULICA;
   pit[28]:=~-OS_ADRES.DOM;
   pit[29]:=~-OS_ADRES.LOKAL;
   pit[30]:=~-OS_ADRES.MIASTO;
   pit[31]:=~-OS_ADRES.KOD;
   pit[32]:=~-OS_ADRES.POCZTA
|| {! _n:=23..32 |! pit[_n]:='' !};
   pit[23]:=null
?};

pit[5]:=~-pit[5];
pit[19]:=pit[21]:=pit[22]:='';
pit[20]:=date(0,0,0);

pit[33]:='';


{! _n:=34..82 |! pit[_n]:=0 !};
pit[69]:=pit[78]:='';

_kp:=sql(
   'select KP.S1, KP.S2, KP.S4, KP.S8, KP.S9, KP.S10, KP.P '
   'from KP join P '
   'where P.FIRMA=:_c and P.OSOBA=:_a and KP.R=:_b',
   OSOBA.ref,
   pit[4],
   exec('ref_firma','ustawienia')
);
{? _kp.first
||  _ku:=_kp.P;
  {!
  |? spr_ku+=_kp.P<>_ku;
     pit[35]+=(_kp.S1+_kp.S10)$2;
     pit[36]+=_kp.S2$2;
     pit[38]+=_kp.S4$2;
     pit[66]+=_kp.S10$2;
     pit[75]+=_kp.S9$2;
     _ku:=_kp.P;
     _kp.next
  !}
?};
pit[37]:=(pit[35]-pit[36])$2;
obj_del(_kp);

{? pit[35]
|| RH.index('RACHDATA');
   RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,pit[4]);
   {? RH.first
   || {!
      |? {? ~(',7,8,'*(','+RH.ZLE().RU().K+','))
         || _skl:=exec('licza_rhs','lista_licz',5711,5721);
            {? var_pres('RU_DEKL')=var_pres('SYSLOG')
             & {? RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=',__PIT,'DEKL','NRF','=',__WER)
               || __transl()
               || 0
               ?}
            ||
               {! _nx:=2..obj_len(__wk[RU_DEKL.WIERSZ])
               |! _poz:=__wk[RU_DEKL.WIERSZ][_nx];
                  {? _poz
                  || pit[_poz]+={? _nx=2
                                || (_skl+exec('licza_rhs','lista_licz',92))$2
                                |? _nx=3
                                || exec('licza_rhs','lista_licz',93)$2
                                |? _nx=4
                                || ((_skl+exec('licza_rhs','lista_licz',92))-exec('licza_rhs','lista_licz',93))$2
                                |? _nx=5
                                || (exec('licza_rhs','lista_licz',961))$2
                                || 'przypadki nieuwzglednione'; 0
                                ?}
                  ?}
               !}
              |? '12456'*RH.ZLE().RU().K
              || 'umowy o dzielo i zlecenia';
                 pit[50]+=(_skl+exec('licza_rhs','lista_licz',92))$2;
                 pit[51]+=exec('licza_rhs','lista_licz',93)$2;
                 pit[53]+=(exec('licza_rhs','lista_licz',961))$2;
                 pit[52]:=(pit[50]-pit[51])$2
              |? RU.K='3'
              || 'prawa autorskie';
                 pit[54]+=(_skl+exec('licza_rhs','lista_licz',92))$2;
                 pit[55]+=exec('licza_rhs','lista_licz',93)$2;
                 pit[57]+=(exec('licza_rhs','lista_licz',961))$2;
                 pit[56]:=(pit[54]-pit[55])$2
              || 'inne zrodla';
                 pit[58]+=(_skl+exec('licza_rhs','lista_licz',92))$2;
                 pit[59]+=exec('licza_rhs','lista_licz',93)$2;
                 pit[61]+=(exec('licza_rhs','lista_licz',961))$2;
                 pit[60]:=(pit[58]-pit[59])$2
              ?};
              pit[66]+=_skl$2;
              pit[75]+=exec('licza_rhs','lista_licz',57412)$2
         ?};
         RH.next
      !}
   ?};
   pit[62]:=(pit[35]+pit[39]+pit[50]+pit[54]+pit[58])$2;
   pit[65]:=(pit[38]+pit[53]+pit[57]+pit[61])$2;

   _kto:=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;

   _width:=30;
   undefine;
   define('HD1',~~,' Odliczenia od dochodu:');
   define('HD4',~~,'  Zwrot nienależnie pobranych świadczeń poz. 68');
   define('OD2',0,,,17,_width,2);
   define('HD8',~~,'  Inne odliczenia od dochodu ');
   define('ID','','   Rodzaj poz. 69',,82,_width);
   define('IOD',0,'   Kwota poz. 70',,17,_width,2);
   define('HD11',~~);
   define('HD5',~~,' Faktyczne koszty uzyskania przychodów ');
   define('KUP',0,,,17,_width,2);
   define('HD7',~~,' Pozycja na formularzu w informacji o kosztach uzyskania');
   define('POZ',5,,,1,2,0);
   define('HD6',~~,' Ulga podatkowa ');
   define('ULG',pit[2],,,17,_width,2);
   define('HD2',~~,' Doliczenie do podatku poz. 73');
   define('OD1',0,,,17,_width,2);
   define('HD9',~~,' Inne odliczenia od podatku');
   define('IP','','   Rodzaj poz. 78',,82,_width);
   define('IOP',0,'   Kwota poz. 79',,17,_width,2);
   define('HD12',~~);

   DEFINE.OD1:=DEFINE.OD2:=DEFINE.KUP:=DEFINE.IOD:=DEFINE.IOP:=0;
   {!
   |? def_edit("{? DEFINE.KUP
                || {? (DEFINE.POZ<1 | DEFINE.POZ>5)
                   || FUN.emsg('Pozycja na formularzu w informacji o kosztach uzyskania\n'
                               'musi być z przedziału od 1 do 5.'@);
                      return('POZ')
                   || 1
                   ?}
                || 1
                ?}",'PIT-40 '+_kto);

      pit[6]:=_d;
      pit[33]:=_c;
      pit[68]:=DEFINE.OD2$2;
      pit[69]:=DEFINE.ID;
      pit[70]:=DEFINE.IOD$2;
      pit[73]:=DEFINE.OD1$2;
      pit[78]:=DEFINE.IP;
      pit[79]:=DEFINE.IOP$2;

      {? DEFINE.KUP>0
      || pit[34]:=DEFINE.POZ;
         pit[36]:=DEFINE.KUP;
         pit[37]:=(pit[35]-pit[36])$2
      || pit[34]:={? exec('szukaj_p_ipod','pracownik',date(pit[4],12,0))
                  || {? P_IPOD.KU='Z' || 3 || 1 ?}
                  || 1
                  ?};
         {? ~spr_ku
         || popup(,'Koszty uzyskania: '+_kto,
            '   określone na koniec roku '+$pit[4]+': ('+$pit[34]+') '+
            {? pit[34]=1 || 'podstawowe' || 'podwyższone' ?},,"pit[34]",
            '--',,,
            '1. z jednego stosunku pracy (stosunków pokrewnych)',,"pit[34]:=1",
            '3. z jednego stosunku pracy (stosunków pokrewnych), podwyższone',,"pit[34]:=3")
         || pit[34]:={? pit[34]=1 || 2 || 4 ?};
            popup(,'Koszty uzyskania: '+_kto,
            '   określone na koniec roku '+$pit[4]+': ('+$pit[34]+') '+
            {? pit[34]=1 || 'podstawowe' || 'podwyższone' ?},,"pit[34]",
            '--',,,
            '2. z więcej niż jednego stosunku pracy (stosunków pokrewnych)',,"pit[34]:=2",
            '4. z więcej niż jednego stosunku pracy (stosunków pokrewnych), podwyższone',,"pit[34]:=4")
         ?}
      ?};

      pit[63]:=(pit[36]+pit[40]+pit[51]+pit[55]+pit[59])$2;
      pit[64]:=(pit[37]+pit[52]+pit[56]+pit[60])$2;

      {? (pit[66]+pit[68]+pit[70])$2>pit[64]$2
      || _kwota:=pit[64]-pit[66];
         {? _kwota<0 || _kwota:=0 ?};
         {? _text:='%1 (nr teczki: %2)\n'
                'Nieprawidłowy dochód po odliczeniach.\n'
                'Wartość odliczenia nie może przekroczyć kwoty: %3.'@[_kto,form(P.T),$_kwota];
            FUN.choice(_text,0,'Wyzerowanie kwot'@,,,,'Powtórna edycja'@)
         || pit[69]:='';
            pit[68]:=pit[70]:=0
         || 1
         ?}
      || 0
      ?}
   !};

   pit[83]:='';
   pit[84]:='';

   pit[71]:=(pit[64]-pit[66]-pit[68]-pit[70])$0;
   {? pit[71]<0 || pit[71]:=0 ?};
   {? TP.last
   || {! |? pit[71]$2<TP.K1$2 & TP.prev !};
      pit[72]+=((pit[71]-TP.K1)*TP.PR*0.01)$2;
      _poprog:=TP.K1$2;
      {!
      |? {? TP.prev
         || pit[72]+=((_poprog-TP.K1)*TP.PR*0.01)$2;
            _poprog:=TP.K1$2;
            1
         ?}
      !}
   ?};
   pit[72]:=(pit[72]-DEFINE.ULG$2)$2;
   {? pit[72]<0 || pit[72]:=0 ?};
   pit[74]:=pit[72]+pit[73];
   pit[77]:={? pit[75]>pit[74] || pit[74] || pit[75] ?}$2;

   {? (pit[77]+pit[79])$2>pit[74]$2
   || {? _text:='%1 (nr teczki: %2)\n'
                'Nieprawidłowe odliczenia od podatku.\n'
                'Wartość odliczenia nie może przekroczyć kwoty: %3.'@[_kto,form(P.T),$(pit[74]-pit[77])];
            FUN.choice(_text,0,'Wyzerowanie kwot'@,,,,'Powtórna edycja'@)
      || pit[78]:='';
         pit[79]:=0
      || undefine;
         define('HD9',~~,' Inne odliczenia od podatku ');
         define('IP',pit[78],'  Rodzaj poz. 78',,160,_width);
         define('IOP',pit[79],'  Kwota poz. 79',,17,_width,2);
         {!
         |? def_edit(,'PIT-40 '+_kto);
            pit[78]:=DEFINE.IP;
            pit[79]:=DEFINE.IOP$2;
            {? (pit[77]+pit[79])$2>pit[74]$2
            || {? _text:='%1 (nr teczki: %2)\n'
                         'Nieprawidłowe odliczenia od podatku.\n'
                         'Wartość odliczenia nie może przekroczyć kwoty: %3.'@[_kto,form(P.T),$(pit[74]-pit[77])];
                  FUN.choice(_text,0,'Wyzerowanie kwot'@,,,,'Powtórna edycja'@)
               || pit[78]:='';
                  pit[79]:=0
               || 1
               ?}
            || 0
            ?}
         !}
      ?}
   ?};

   pit[80]:=(pit[74]-pit[77]-pit[79])$0;
   {? pit[80]<0 || pit[80]:=0 ?};
   pit[81]:={? pit[65]<pit[80] || pit[80]-pit[65] ?}$0;
   pit[82]:={? pit[65]>pit[80] || pit[65]-pit[80] ?}$0
?};
{? pit[62]>0
|| _wynik:=1;
   {? _e='T' & _f<>date(0,0,0)
   || exec('przekaz','giodo',_f,'Przekazanie danych na formularzu PIT-40\n',
           'odbiorcą danych jest:\n',
           pit[5])
   ?}
|| _wynik:=0
?};
_wynik


\spr_nip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ATA [11.22]
:: OPIS: Ustalenie domyslnego opisu pola opisu wartosci liczbowej
::   WE: _a - ref osoby
::       _b - data badania
::   WY: 1 - jesli byla zaawidencjonowana dzialanosc
::       0 - jesli nie bylo rejestracji dzialalnosci
::----------------------------------------------------------------------------------------------------------------------
_blokada:=0;
_pocz:=date(_b~1,1,1);
KART_DEF.cntx_psh();
KART_DEF.index('SYMBOL');
KART_DEF.prefix('KART_NIP',);
{? KART_DEF.first()
|| KART_DOD.cntx_psh();
   KART_DOD.index('KART_DOD');
   KART_DOD.prefix(exec('ref_firma','ustawienia'),KART_DEF.ref(),_a);
   {? KART_DOD.find_le(_b) & (KART_DOD.DO>=_pocz | KART_DOD.DO=date(0,0,0))
   || _blokada:=1
   ?};
   KART_DOD.cntx_pop()
?};
KART_DEF.cntx_pop();
_blokada


\obl_pit4r_4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.30]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla deklaracji PIT 4R
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - opcjonalny numer wersji e-deklaracji. W przypadku 5 wersji jest podany jako argument funkcji
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 4 ?};
_vern:=_a;
_Msc:=1; _Rok:=__Rok;
exec('init_tab_1','pit');

_dod_zap:="__TAB.blank;
      {? var_pres('_f')<>type_of(0) || _f:=0 ?};
      __TAB.LP:=_a;
      __TAB.O:=_b;
      __TAB.NR:=_d;
      __TAB.NRK:=_e;
      {! _ind:=1..6
      |! {? _f>=_ind
         || ($('__TAB.P'+$_ind+':=0'))()
         || ($('__TAB.P'+$_ind+':=(_a+_b)'))(_c,_ind-_f)
         ?}
      !};
      __TAB.add";

_dod_zap(2,'4. Zaliczki na podatek, których pobór został',56,4,0);
_dod_zap(2,'ograniczony na podstawie art.32 ust.2 ustawy',62,4,6);
_dod_zap(3,'5. Zaliczki, które przypadały do pobrania w związku z ograniczeniem poboru',68,5,0);
_dod_zap(3,'zaliczek w poprzednich miesiącach na podstawie art.32 ust.2 ustawy',74,5,6);
_dod_zap(4,'7. Nadpłaty wynikające z rozliczenia za rok ubiegły oraz zwrot nadpłat',84,7,0);
_dod_zap(4,'w gotówce zaliczone na poczet należnej zaliczki',90,7,6);
_dod_zap(5,'8. Pobrany podatek, przekazany na PFRON',96,8,0);
_dod_zap(5,'oraz zakładowy fundusz rehabilitacji osób niepełnosprawnych',102,8,6);
_dod_zap(6,'9. Zaliczki na podatek pobrane od świadczeń z tytułu działalności',108,9,0);
_dod_zap(6,'określonej w art.13 pkt 2 i 4-9 oraz art.18 ustawy',114,9,6);
_dod_zap(7,'10. Zaliczki na podatek pobrane od innych należności,',120,10,0);
_dod_zap(7,'w tym wynikających z umowy aktywizacyjnej',126,10,6);
_dod_zap(8,'12. Wynagrodzenie z tytułu terminowego wpłacania podatku dochodowego',144,12,0);
_dod_zap(8,'za poszczególne miesiące, zgodnie z art.28 Ordynacji podatkowej',150,12,6);
__TAB.select;

_dod_zap(1,'',32,2,0);
_dod_zap(1,'',38,2,6);
_dod_zap(9,'',9,0,0);
_dod_zap(9,'',20,0,6);
_dod_zap(10,'',14,1,0);
_dod_zap(10,'',26,1,6);
_dod_zap(11,'',44,3,0);
_dod_zap(11,'',50,3,6);
_dod_zap(12,'',80,6,0);
_dod_zap(12,'',0,6,6);
_dod_zap(13,'',132,11,0);
_dod_zap(13,'',138,11,6);
_dod_zap(14,'',156,13,0);
_dod_zap(14,'',162,13,6);
__TAB.index(__TAB.ndx_tmp(,1,'NR',,,'NRK',,));
__TAB.prefix;
_czy_rap:=0;
P.cntx_psh;
P.index('PRACOSOB');
P.prefix(exec('ref_firma','ustawienia'),'P');
KP.cntx_psh;
KP.index('_KARTAPO');
RH.cntx_psh;
LS.cntx_psh();
O.cntx_psh();
RH.index('DOK');
{!
|? _osoba:=null; _licz_os:=0;
   {? P.first
   || {!
      |? {? _osoba<>P.OSOBA || _osoba:=P.OSOBA; _licz_os:=0 ?};
         KP.prefix(P.ref,_Rok,_Msc);
         {? KP.first
         || {? __TAB.find_key(0,{? _Msc<7 || 0 || 6 ?})
            || {? KP.S4<>0 & ~_licz_os || _licz_os:=1; ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=1'))(); __TAB.put ?}
            ?};
            {? __TAB.find_key(1,{? _Msc<7 || 0 || 6 ?})
            || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S4'))(); __TAB.put
            ?};
            {? KP.S7>0
            || {? __TAB.find_key(6, {? _Msc<7 || 0 || 6 ?})
               || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S7'))(); __TAB.put
               ?}
            |? KP.S7<0
            || {? __TAB.find_key(7, {? _Msc<7 || 0 || 6 ?})
               || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S7*(-1)'))(); __TAB.put
               ?}
            ?};
            _czy_rap+=KP.S4
         ?};
         P.next()
      !}
   ?};
   RH.prefix(exec('ref_firma','ustawienia'),_Rok,_Msc);
   {? RH.first
   || _suma:="
         _wyn:=0;
         _tab:=__RUB.sys_rub(_a);
         {? _tab.first()
         || {!
            |? LS.prefix(RH.ref(),_tab.RN);
               {? LS.first() || {! |? _wyn+=LS.KW; LS.next() !} ?};
               _tab.next()
            !}
         ?};
         _wyn
      ";
      {!
      |? {? ~exec('licz_rhs','lista_licz',31)
         || LS.use(RH.O().LT);
            LS.index('ZLEC');
            _src:=
               {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
                  RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=','PIT4R','DEKL','NR','=',_vern)
               || RU_DEKL.WIERSZ
               || 9
               ?};
            {? _src
            || {? __TAB.find_key(_src,{? _Msc<7 || 0 || 6 ?})
               || _wyn:=_suma(961);
                  _czy_rap+=_wyn;
                  ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=_a'))(_wyn);
                  __TAB.put()
               ?}
            ?}
         ?};
         RH.next
      !}
   ?};
   _Msc+=1;
   _Msc<=12
!};
RH.cntx_pop;
LS.cntx_pop();
O.cntx_pop();
KP.cntx_pop;
P.cntx_pop;
_suma:="__TAB.cntx_psh; __TAB.prefix;
       {? __TAB.find_key(_[7],_[8])
       || {! _ind:=1..6 |! ($('__TAB.K'+$_ind+'+=_a'))(_[_ind]) !}; __TAB.put
       ?}; __TAB.cntx_pop";

__TAB.prefix(1);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,3,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(2);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,3,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(3);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(5);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(6);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(9);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(10);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(4);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(7);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(8);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};

 __TAB.prefix(11);
{? __TAB.first
|| {!
   |? {! _ind:=1..6 |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?} !}; __TAB.put;
         _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,13,__TAB.NRK); __TAB.next
      !}
?};
__TAB.prefix(12);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,13,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(13);
{? __TAB.first
|| {!
   |? {! _ind:=1..6
      |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?}
      !};
      __TAB.put; __TAB.next
   !}
?};
_wyn:={? ~(_czy_rap>0)
      || FUN.emsg('Brak informacji do wykazania na deklaracji '
                  '\n (zerowe kwoty podatku).'@); 0
      || 1
      ?};
__TAB.prefix;
_wyn


\obl_pit8ar_4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.30]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla pity PIT 8AR
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - opcjonalny numer wersji e-deklaracji. W przypadku 5 wersji jest podany jako argument funkcji
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 4 ?};
_vern:=_a;
_Msc:=1; _Rok:=__Rok; _podatek:=0;
exec('czytaj','#stalesys',date(_Rok,12,0),KST);

exec('init_tab_1','pit');

_dod_zap:="__TAB.blank; __TAB.LP:=_a; __TAB.O:=_b; __TAB.NR:=_d; __TAB.NRK:=_e;
           {! _ind:=1..6 |! ($('__TAB.P'+$_ind+':=(_a+_b)'))(_c,_ind) !};
           __TAB.add";

_dod_zap(15,'15. Wynagrodzenie z tytułu terminowego wpłacania podatku dochodowego',176,15,0);
_dod_zap(15,'    za poszczególne miesiące - zgodnie z art. 28 Ordynacji podatkowej',182,15,6);
__TAB.select;

{! _lp:=1..16
|! {? _lp<>15
   || _kom:=8+(_lp-1)*12;
      _dod_zap(_lp,'',_kom,_lp,0);
      _dod_zap(_lp,'',_kom+6,_lp,6)
   ?}
!};

RH.cntx_psh;
_rh_ndx:=RH.ndx_tmp('Data wypłaty',0,'O','FIRMA',,'R',,0,'M',,0);
RH.index(_rh_ndx);
{!
|?
RH.prefix(exec('ref_firma','ustawienia'),_Rok,_Msc);
{? RH.first
|| {!
   |? {? exec('licz_rhs','lista_licz',31)
      || _src:=
            {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
               RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=','PIT8AR','DEKL','NR','=',_vern)
            || RU_DEKL.WIERSZ
            |? RH.ZLE().RU().K='7'
            || 2
            |? RU.K='8'
            || 5
            || 13
            ?};
         {? _src
         || _kw:=(exec('licza_rhs','lista_licz',961))$0;
            _podatek+=_kw;
            {? __TAB.find_key(_src,{? _Msc<7 || 0 || 6 ?})
            || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+='+$_kw))();
               __TAB.put()
            ?}
         ?}
      ?};
      RH.next
   !}
?};
_Msc+=1;
_Msc<=12
!};
RH.ndx_drop(&_rh_ndx);
RH.cntx_pop;
_suma:="__TAB.cntx_psh; __TAB.prefix;
       {? __TAB.find_key(_[7],_[8])
       || {! _ind:=1..6 |! ($('__TAB.K'+$_ind+'+=_a'))(_[_ind]) !}; __TAB.put
       ?}; __TAB.cntx_pop";
{! _lp:=1..13
|! __TAB.prefix(_lp);
   {? __TAB.first()
   || {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,14,__TAB.NRK); __TAB.next() !}
   ?}
!};
__TAB.prefix(14);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,16,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(15);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,16,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(16);
{? __TAB.first
|| {!
   |? {! _ind:=1..6
      |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?}
      !};
      __TAB.put; __TAB.next
   !}
?};
__TAB.prefix;
_wyn:={? ~(_podatek>0)
      || FUN.emsg('Brak informacji do wykazania na deklaracji '
                  '\n (zerowe kwoty dochodu i podatku).'@);
         0
      || 1
      ?};
undefine;
exec('stalesys','#stalesys');
_wyn


\init_pit11p_5
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.30]
:: OPIS: Formula dla akcji Dolacz okna deklaracji PIT-11 dla pracownika lub zleceniobiorcy
::       dla 5 wersji e-deklaracji obowiazujacej od 11.10.2013 roku
::       (wymagana zmienna globalna __Rok-rok za ktory tworzona jest e-deklaracja)
::   WE: _a - string typ deklaracji PIT11P, PIT4R
::       _b - string T lub N czy tworzyc deklaracje jezeli podatnik ma juz
::       _c - string T lub N czy tworzyc deklaracje zbiorcza dla podatnika
::       _d - string T lub N czy sumowac umowy zlecenia sprzed zatrudnienia
::       _e - string T lub N czy dolaczono informacje PIT-R
::       _f - string T korekta lub N zlozenie deklaracji
::       _g - string T lub N przetwarzanie danych osobowych lub nie
::       _h - data przekazania danych osobowych
::       _i - string T lub N czy umozliwiac zmiane informacji o kosztach uzyskania
::       _j - numer wersji e-deklaracji pole VAT_DEK.NR().NR lub PIT_GRUP.NR().NR
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_j')<>type_of(0) || _j:=5 ?};
VAR_DEL.delete('__PIT','__WER','__wk','__transl');
{? var_pres('pit')>100 || obj_del(pit) ?};
pit:=obj_new(77);
{! _nx:=1..23 |! pit[_nx]:='' !};
{! _nx:=24..obj_len(pit) |! pit[_nx]:=0 !};
_pom:=pit[3]:=obj_new(11);
_pom[2]:={? _a='PIT11P' || 'P' || 'Z' ?};
_pom[1]:=__Rok;

::tabela do zapisu w wydrukowanych deklaracjach
{? var_pres('__par')>100 || obj_del(__par) ?};
__par:=tab_tmp(2,'RODZAJ','STRING[1]','Rodzaj','REF','INTEGER','Ref');

::czy wydruk dla podatnika?
_pom[4]:={? _pom[3]:=(_c='T')
         || tab_tmp(1,'OSOBA','INTEGER','Podatnik')
         || ~~
         ?};
::czy sumowac umowy zlecenie sprzed zatrudnienia'
{? _pom[3] & _pom[2]='P'
|| _pom[10]:=(_d='T')
|| _pom[10]:=0
?};
::czy przychody pochodza z wiecej niz jednego stosunku pracy
_pom[5]:=0;
::czy umozliwiac zmiane informacji o kosztach uzyskania?
_pom[6]:=_i;
::czy rejestrowac przekazanie danych osobowych?
{? _g='T'
|| _pom[9]:=_h
|| _pom[9]:=date(0,0,0)
?};

exec('czytaj','#stalesys',date(__Rok,12,0),KST);

::wysokosc kosztow uzyskania
_pom[7]:=KST.KU;
_pom[8]:=(_b='T');

pit[6]:=_f;

pit[72]:=_e;

KP.cntx_psh; KP.index('_KARTAPO');
RH.cntx_psh; RH.index('RACHDATA');
us_podat:=null;
DEKL_POD.cntx_psh;
DEKL_POD.use('pod_'+$_pom[1]);
DEKL_POD.index('DEKL_PED');

__wk:=obj_new(10);
{! _nx:=1..obj_len(__wk)
|! __wk[_nx]:=obj_new(7);
   {! _ny:=1..obj_len(__wk[_nx])
   |! __wk[_nx][_ny]:=0
   !}
!};
__transl:="{? RU_DEKL.DEKL().NR=__WER
           || __wk[1][2]:=25;  __wk[1][3]:=26; __wk[1][4]:=27;  __wk[1][5]:=28;  __wk[1][6]:=29;
              __wk[2][2]:=32;  __wk[2][3]:=0;  __wk[2][4]:=33;  __wk[2][5]:=0;   __wk[2][6]:=34;
              __wk[3][2]:=35;  __wk[3][3]:=0;  __wk[3][4]:=36;  __wk[3][5]:=37;  __wk[3][6]:=38;
              __wk[4][2]:=39;  __wk[4][3]:=0;  __wk[4][4]:=40;  __wk[4][5]:=0;   __wk[4][6]:=41;
              __wk[5][2]:=42;  __wk[5][3]:=0;  __wk[5][4]:=43;  __wk[5][5]:=0;   __wk[5][6]:=44;
              __wk[6][2]:=45;  __wk[6][3]:=46; __wk[6][4]:=47;  __wk[6][5]:=0;   __wk[6][6]:=48;
              __wk[7][2]:=49;  __wk[7][3]:=50; __wk[7][4]:=51;  __wk[7][5]:=0;   __wk[7][6]:=52;
              __wk[8][2]:=53;  __wk[8][3]:=57; __wk[8][4]:=54;  __wk[8][5]:=0;   __wk[8][6]:=55;   __wk[8][7]:=56;
              __wk[9][2]:=58;  __wk[9][3]:=59; __wk[9][4]:=60;  __wk[9][5]:=0;   __wk[9][6]:=61;
              __wk[10][2]:=62; __wk[10][3]:=0; __wk[10][4]:=63; __wk[10][5]:=64; __wk[10][6]:=65;
              RU_DEKL.WIERSZ
           || 0
           ?}
           ";
__PIT:='PIT11';
__WER:=_j;
::tabela pomocnicza dla wykrywania pokrywajacych sie okresow zatrudnienia
_pom[11]:=tab_tmp(2,'OD','DATE',,'DO','DATE',)


\obl_pit11p_5
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.30]
:: OPIS: Formula wylicza dane do deklaracji Pit-11 z systemu dla 5 wersji
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - 1 - jesli jest prawidlowy symbol i wymagane dane do utworzenia deklaracji
::       _b - numer wersji e-deklaracji pole VAT_DEK.NR().NR lub PIT_GRUP.NR().NR
::       _c - 1 - ustawienie pracownika zatrudnionego przy sumowaniu zbiorczym
::       _d - tablica nazwana z polami 'P' - tabela , 'Ndx' - index po polu _tab.REF
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 1 ?};
_b:={? var_pres('_b')>0 & type_of(_b)=type_of(0) || _b || 5 ?};
_c:={? var_pres('_c')>0 & type_of(_c)=type_of(0) || _c || 0 ?};
_prac_up:={? var_pres('_d')>100 || _d || null() ?};
_wynik:=0;
_pom:=pit[3];
us_podat:=null;
pit[77]:=0;
__par.erase;

::wyczysc rubryki formularza wlasciwe dla podatnika
{! _nx:=10..23 |! pit[_nx]:='' !};
{! _nx:=24..71 |! pit[_nx]:=0 !};
pit[13]:=date(0,0,0);
pit[14]:=null;

_jest_pit:=_jestwyd:=0;
VAT_DEK.cntx_psh;
VAT_DEK.index('VAT_PRAC');
VAT_DEK.prefix(P.ref,rodzdekl,rok_dekp,okres,pit_typ);
{? VAT_DEK.last || _jest_pit:=1 ?};
VAT_DEK.cntx_pop;
::sprawdzenie czy byla drukowana deklaracja poprzez wydruk bez e-deklaracji
{? ~_jest_pit
|| {? _pom[2]='P'
   || DEKL_POD.prefix('E',P.ref,'(E)PIT-11','(E)PIT-11')
   || DEKL_POD.prefix('Z',P.ref,'(E)PIT-11','(E)PIT-11')
   ?};
   {? DEKL_POD.first
   || _jest_pit:=1
   ?}
?};
{? ~_jest_pit
|| {? _pom[2]='P'
   || DEKL_POD.prefix('E',P.ref,'PIT-11','PIT-11')
   || DEKL_POD.prefix('Z',P.ref,'PIT-11','PIT-11')
   ?};
   {? DEKL_POD.first
   || _jest_pit:=_jestwyd:=1
   ?}
?};
{? ~_pom[8] & _jest_pit
|| {? _jestwyd || return(-2) || return(-1) ?}
?};

{? _pom[3]
|| {? _pom[2]='P'
   || {? ~_c
      || KP.cntx_psh();
         KP.prefix();
         {? ~KP.find_key(P.ref(),_pom[1])
         || {? ~(P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1]))
            || KP.cntx_pop();
               return(0)
            ?}
         ?};
         KP.cntx_pop()
      || P.cntx_psh();
         P.index('PRACOSOB');
         P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
         {? P.first
         || _jest_P:=0;
            {!
            |? {? P.ZA='T' & P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1])
               || {? var_pres('P',_prac_up)>100 & var_pres('Ndx',_prac_up)=type_of('')
                  || _prac_up.P.cntx_psh();
                     _prac_up.P.index(_prac_up.Ndx);
                     _prac_up.P.prefix();
                     {? _prac_up.P.find_key(#P.ref)
                     || _jest_P:=1
                     ?};
                     _prac_up.P.cntx_pop()
                  || _jest_P:=1
                  ?}
               ?};
               P.next & ~_jest_P
            !};
            P.cntx_pop();
            {? _jest_P & P.ZA<>'T'
            || return(0)
            || KP.cntx_psh();
               KP.prefix();
               {? ~KP.find_key(P.ref(),_pom[1])
               || {? ~(P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1]))
                  || KP.cntx_pop();
                     return(0)
                  ?}
               ?};
               KP.cntx_pop()
            ?}
         || P.cntx_pop()
         ?}
      ?}
   || RH.index('RACHPRZ');
      RH.prefix();
      {? ~RH.find_key(P.ref,_pom[1]) || RH.index('RACHDATA'); return(0) ?};
      RH.index('RACHDATA')
   ?}
?};

::jezeli informacja drukowana jest dla podatnika (osoby), to nie drukuj
::zwielokrotnionych informacji - kolejne wystapienia w kartotekach
{? _pom[3]
|| {? ~_pom[4].find_key(#P.OSOBA)
   || _pom[4].OSOBA:=#P.OSOBA;
      _pom[4].add
   || return(_wynik)
   ?}
?};

_pom[5]:=0;
_liczmies:=0;
:: spradzenie czy sa przychody-karty podatkowe z etatu-wykonane tylko dla warunku _pom[2]='P'
_spr_et:=0;
::uwzgledniaj przychody ze stosunku pracy
{? _pom[2]='P'
|| P.cntx_psh;
::informacja dla podatnika
   {? _pom[3]
   || P.index('PRACOSOB');
      P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
      P.first;
      _pom[11].erase
   ?};
   {!
   |? KP.prefix(P.ref,_pom[1]);
      {? KP.first
      || _od:=date(_pom[1],KP.M,1);
         {? ~__par.find_key('E',#P.ref)
         || __par.RODZAJ:='E'; __par.REF:=#P.ref; __par.add(1)
         ?};
         {!
         |? pit[25]+=(KP.S1+KP.S10-KP.S12-KP.S13-KP.S15)$2;
            pit[26]+=KP.S2$2;
            pit[29]+=KP.S4$2;
            pit[30]+=KP.S13$2;
            pit[31]+=KP.S14$2;
            pit[66]+=(KP.S10-KP.S12-KP.S15)$2;
            pit[68]+=KP.S9$2;
            _liczmies+=((KP.S2$2)<>0);
            _spr_et+=1;
            KP.next
         !};
         _do:=date(_pom[1],KP.M,0);
        {? _pom[3] & ~pit[24]
        || {? ~_pom[11].find_tab(0,'OD',,'<=',_do,'DO',,'>=',_od)
           || _pom[11].OD:=_od;
              _pom[11].DO:=_do;
              _pom[11].add
           || _pom[5]:=1
           ?}
        ?}
      ?};
      _pom[3] & P.next
   !};
   P.cntx_pop;
   {? pit[66]<0 || pit[25]-=pit[66]; pit[66]:=0 ?};
   {? pit[68]<0 || pit[68]:=0 ?};
   _zku:=KST.KUZ$2;
   pit[24]:={? _liczmies>0
            || {? _pom[7]*_liczmies$2 = pit[26] || 1
               |? _zku*_liczmies      = pit[26] || 3
               ?}
            ?};
   &_zku;
   {? ~pit[24] & exec('szukaj_p_ipod','pracownik',date(_pom[1],12,0))
   || pit[24]:={? P_IPOD.KU='N' || 1 |? P_IPOD.KU='Z' || 3 ?}
   ?};
   {? pit[24]=0
   || pit[24]:=1
   ?};
   {? _spr_et & _pom[6]='T'
   || _kto:=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      popup(,'Koszty uzyskania: '+&_kto,
             'określone na koniec roku '+$_pom[1]+': ('+$pit[24]+') '+
            {? pit[24]=1 | pit[24]=2 || 'podstawowe' || 'zwiększone' ?},,"pit[24]",
            '--',,,
            '1. z jednego stosunku pracy (stosunków pokrewnych)',,"pit[24]:=1",
            '3. z jednego stosunku pracy (stosunków pokrewnych), zwiększone',,"pit[24]:=3",
            '2. z więcej niż jednego stosunku pracy (stosunków pokrewnych)',,"pit[24]:=2",
            '4. z więcej niż jednego stosunku pracy (stosunków pokrewnych), zwiększone',,"pit[24]:=4")
   ?}
?};

RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,_pom[1]);
{? RH.first
|| {? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
   {!
   |? _um:=RH.ZLE().RU().K;
      {? {? _pom[1]>=2009 || ~exec('licz_rhs','lista_licz',31) || 1 ?} & (~(',7,8,'*(','+_um+','))) &
      {? _pom[2]='Z'
      || {? ~exec('czy_prac','osoba',ZC.OSOBA,RH.DWY)
         || {? ~_pom[3] || ZC.P=P.ref() || 1 ?}
         ||
::         obsluga przypadkow ze dany pracownik nie ma wyplaty z etatu w roku-kart podatkowych
::         to nalezy PIT-11 ze zlecen wykonac dla rachunkow wystawionych podczas zatrudnienia pracownika
           _ok:=0;
           _dalej:=1;
           P.cntx_psh();
           P.index('PRACOSOB');
           P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
           {? P.first
           || KP.cntx_psh();
              KP.prefix();
              {!
              |? {? KP.find_key(P.ref(),_pom[1])
                 || _dalej:=0
                 |? P.DZA<=RH.DWY
                    & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                 || {? ~KP.find_key(P.ref(),_pom[1])
                    || _ok+=1
                    ?}
                 ?};
                 P.next() & _dalej
              !};
              KP.cntx_pop()
           ?};
           P.cntx_pop();
           &_dalej;
           &_ok
         ?}
      || {? ~_pom[3]
         || _pref:=P.ref;
            _ok:=0;
            P.cntx_psh;
            P.index('PRACOSOB');
            P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
            {? P.first
            || {!
               |? {? P.DZA<=RH.DWY
                     & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                  || _ok:=(_pref=P.ref & _spr_et); 0
                  || P.next
                  ?}
               !}
            ?};
            P.cntx_pop;
            &_ok
         || _pom[10] & _spr_et | exec('czy_prac','osoba',P.OSOBA,RH.DWY) & _spr_et
         ?}
      ?}
      || _src:=
            {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
               RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=',__PIT,'DEKL','NR','=',__WER)
            || RU_DEKL.WIERSZ<>0
            || 2
            ?};
         {? _src
         || {? ~__par.find_key('Z',#ZC.P)
            || __par.RODZAJ:='Z'; __par.REF:=#ZC.P; __par.add(1)
            ?};
            _skl:=exec('licza_rhs','lista_licz',5711,5721);
            {? _src=1
            || __transl();
               _len:=obj_len(__wk[RU_DEKL.WIERSZ]);
               _ra_92:=exec('licza_rhs','lista_licz',92);
               _ra_93:=exec('licza_rhs','lista_licz',93);
               'Koszty 50% sa liczone tylko na 7-ej pozycji.';
               'Jezeli biezacy wiersz nie ma 7-ej pozycji - kosztow nie liczymy';
               _ku:=RH.ZLE().RU().PKU;
               _przy50:={? _len>6 & __wk[RU_DEKL.WIERSZ][7] & _ku=50 || _skl+_ra_92 ?};
               {! _nx:=2.._len
               |! _poz:=__wk[RU_DEKL.WIERSZ][_nx];
                  {? _poz
                  || pit[_poz]+=
                        {? _nx=2 || {? _len>6 & __wk[RU_DEKL.WIERSZ][7] & _ku=50 || 0 || _skl+_ra_92 ?}
                        |? _nx=3 || _ra_93
                        |? _nx=4 || _skl+_ra_92-_ra_93
                        |? _nx=5 || 0
                        |? _nx=6 || exec('licza_rhs','lista_licz',961)
                        |? _nx=7 || _przy50
                        || 'przypadki nieuwzglednione'; 0
                        ?}
                  ?}
               !};
               &_len
            |? '1456'*_um
            ||
::             umowy-zlecenia i o dzielo
               pit[45]+=(_skl+exec('licza_rhs','lista_licz',92));
               pit[46]+=exec('licza_rhs','lista_licz',93);
               pit[48]+=exec('licza_rhs','lista_licz',961)
            |? '23m'*_um
            ||
::             prawa autorskie
               _ra_92:=exec('licza_rhs','lista_licz',92);
               _ra_93:=exec('licza_rhs','lista_licz',93);
               {? RH.ZLE().RU().PKU=50
               || pit[56]+=_skl+_ra_92
               || pit[53]+=_skl+_ra_92
               ?};
               pit[57]+=_ra_93;
               pit[55]+=exec('licza_rhs','lista_licz',961)
            ||
::             inne zrodla
               pit[62]+=(_skl+exec('licza_rhs','lista_licz',92));
               pit[65]+=exec('licza_rhs','lista_licz',961)
            ?};
             pit[66]+=_skl;
             pit[68]+=exec('licza_rhs','lista_licz',57412)
         ?}
      ?};
      RH.next
   !}
?};

pit[27]:=pit[25]+pit[30]-pit[26]-pit[31]; {? pit[27]<0 || pit[27]:=0 ?};
pit[47]:=pit[45]-pit[46]; {? pit[47]<0 || pit[47]:=0 ?};
pit[51]:=pit[49]-pit[50]; {? pit[51]<0 || pit[51]:=0 ?};
pit[54]:=pit[53]+pit[56]-pit[57]; {? pit[54]<0 || pit[54]:=0 ?};
pit[63]:=pit[62];

{? ~(pit[77]:=pit[25]+pit[30]+pit[32]+pit[35]+pit[39]+pit[42]+pit[45]+pit[49]+pit[53]+pit[56]+pit[58]+pit[62])
|| return(_wynik)
?};

_adus:=exec('adresdous','osoba',_pom[1]);
{? #(_adus+1)
|| pit[5]:=OS_US.US().NU+
           {? +US.UU || ', '+US.UU || '' ?}+
           {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?};
   us_podat:=OS_US.US
|| pit[5]:='';
   us_podat:=null
?};
{? #(1+_adus)
|| pit[14]:=OS_ADRES.KRAJ;
   pit[15]:=OS_ADRES.WOJEWODZ;
   pit[16]:=OS_ADRES.POWIAT;
   pit[17]:=OS_ADRES.GMINA;
   pit[18]:=OS_ADRES.ULICA;
   pit[19]:=OS_ADRES.DOM;
   pit[20]:=OS_ADRES.LOKAL;
   pit[21]:=OS_ADRES.MIASTO;
   pit[22]:=OS_ADRES.KOD;
   pit[23]:=OS_ADRES.POCZTA
|| {! _nx:=14..23 |! pit[_nx]:='' !}
?};
pit[10]:=pit[11]:=pit[12]:=pit[13]:='';

{? _a
|| P.cntx_psh;
   P.clear;
   DEKL_POD.cntx_psh;
   DEKL_POD.clear;
   {? __par.first
   || {!
      |? DEKL_POD.blank;
         DEKL_POD.PIT:='(E)PIT-11';
         {? __par.RODZAJ='E' & P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='E'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         |? P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='Z'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         ?};
         {? EDIT_VAR.PIT_RODZ=''
         || DEKL_POD.DATA:=VAT_DEK.DATA
         || DEKL_POD.DATA:={? PIT_EDIT.DATA<>date(0,0,0) || PIT_EDIT.DATA || VAT_DEK.DATA ?}
         ?};
         DEKL_POD.S1:=pit[25]+pit[32]+pit[35]+pit[39]+pit[42]+pit[45]+pit[49]+pit[53]+pit[56]+pit[58]+pit[62];
         DEKL_POD.S2:=pit[26]+pit[46]+pit[50]+pit[57]+pit[59];
         DEKL_POD.S3:=pit[29]+pit[34]+pit[38]+pit[41]+pit[44]+pit[48]+pit[52]+pit[55]+pit[61]+pit[65];
         DEKL_POD.USER:=OPERATOR.USER;
         DEKL_POD.add;
         __par.next
      !}
   ?};
   DEKL_POD.cntx_pop;
   P.cntx_pop
?};

{? pit[77]
|| {? _a & pit[3][9]<>date(0,0,0)
   || exec('przekaz','giodo',pit[3][9],
           'Przekazanie danych na formularzu PIT-11',
           'odbiorcą danych jest:',
           pit[5])
   ?};
   _wynik:=1
?};
_wynik


\init_pit40p_4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.30]
:: OPIS: Formula dla akcji Dolacz okna deklaracji PIT-40 dla pracownika
::       dla 4 wersji e-deklaracji obowiazujacej od 25.11.2013 roku
::   WE: _a - Integer Nr wersji e-deklaracji PIT40
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__wk','pit','__transl','__PIT','__WER','spr_ku','__kosz50');
__PIT:=SKID.DEKL_NAZ;
__WER:=_a;
__wk:=obj_new(7);
{! _nx:=1..obj_len(__wk)
|! __wk[_nx]:=obj_new(6);
  {! _ny:=1..obj_len(__wk[_nx])
  |! __wk[_nx][_ny]:=0
  !}
!};
__transl:="{? RU_DEKL.DEKL().NR=__WER
           || __wk[1][2]:=25;  __wk[1][3]:=26; __wk[1][4]:=27;  __wk[1][5]:=28;
              __wk[2][2]:=31;  __wk[2][3]:=0;  __wk[2][4]:=32;  __wk[2][5]:=33;
              __wk[3][2]:=34;  __wk[3][3]:=0;  __wk[3][4]:=35;  __wk[3][5]:=36;
              __wk[4][2]:=37;  __wk[4][3]:=0;  __wk[4][4]:=38;  __wk[4][5]:=39;
              __wk[5][2]:=40;  __wk[5][3]:=41; __wk[5][4]:=42;  __wk[5][5]:=43;
              __wk[6][2]:=44;  __wk[6][3]:=48; __wk[6][4]:=45;  __wk[6][5]:=46; __wk[6][6]:=47;
              __wk[7][2]:=49;  __wk[7][3]:=50; __wk[7][4]:=51;  __wk[7][5]:=52;
              RU_DEKL.WIERSZ
           || 0
           ?}";
spr_ku:=0;
pit:=obj_new(76);
{! _n:=1..8 |! pit[_n]:='' !};

pit[4]:=__Rok;
exec('czytaj','#stalesys',date(pit[4],12,0),KST);
pit[2]:=KST.UL_ROK;

{? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
us_podat:=null;
__kosz50:=exec('kwota_koszty50_zlec_rh','lista_licz',pit[4])


\obl_pit40p_4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.30]
:: OPIS: Formula wylicza dane do deklaracji Pit-40 z systemu dla 4 wersji
::   WE: _a - string typ deklaracji PIT40
::       _b - string T lub N czy tworzyc deklaracje jezeli podatnik (osoba) ma juz
::       _c - string T lub N czy dolaczono informacje PIT-R
::       _d - string T korekta lub N zlozenie deklaracji
::       _e - string T lub N przetwarzanie danych osobowych lub nie
::       _f - data przekazania danych osobowych
::       _g - informacje dotyczace deklaracji PIT-12
::----------------------------------------------------------------------------------------------------------------------
_pit12:=_g;
_wynik:=0;
_jest_pit:=0;
VAT_DEK.cntx_psh;
VAT_DEK.index('VAT_OSOB');
VAT_DEK.prefix(P.OSOBA,rodzdekl,rok_dekp,$__Rok,pit_typ);
{? VAT_DEK.last || _jest_pit:=1 ?};
VAT_DEK.cntx_pop;
{? _b='N' & _jest_pit || return(-1) ?};

spr_ku:=0;
us_podat:=null;
{! _nx:=13..22 |! pit[_nx]:='' !};
pit[13]:=null;
P.OSOBA();
_adus:=exec('adresdous','osoba',pit[4]);
{? #(_adus+1)
|| pit[5]:=OS_US.US().NU+
          {? +US.UU || ', '+US.UU || '' ?}+
          {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?};
   us_podat:=OS_US.US
|| pit[5]:='';
   us_podat:=null
?};
{? #(1+_adus)
|| pit[13]:=OS_ADRES.KRAJ;
   pit[14]:=~-OS_ADRES.WOJEWODZ;
   pit[15]:=~-OS_ADRES.POWIAT;
   pit[16]:=~-OS_ADRES.GMINA;
   pit[17]:=~-OS_ADRES.ULICA;
   pit[18]:=~-OS_ADRES.DOM;
   pit[19]:=~-OS_ADRES.LOKAL;
   pit[20]:=~-OS_ADRES.MIASTO;
   pit[21]:=~-OS_ADRES.KOD;
   pit[22]:=~-OS_ADRES.POCZTA
|| {! _nx:=13..22 |! pit[_nx]:='' !};
   pit[13]:=null
?};

pit[5]:=~-pit[5];
pit[9]:=pit[11]:=pit[12]:='';
pit[10]:=date(0,0,0);

pit[23]:='';


{! _nx:=24..73 |! pit[_nx]:=0 !};
pit[60]:=pit[69]:='';
::Ustalenie rodzaju Podatnika
pit[76]:=0;

_kp:=sql(
   'select KP.S1, KP.S2, KP.S4, KP.S8, KP.S9, KP.S10, KP.S12, KP.S13, KP.S14, KP.S15, KP.P '
   'from KP join P '
   'where P.FIRMA=:_c and P.OSOBA=:_a and KP.R=:_b',
   OSOBA.ref,
   pit[4],
   exec('ref_firma','ustawienia')
);
{? _kp.first
||  _ku:=_kp.P;
  {!
  |? spr_ku+=_kp.P<>_ku;
     pit[25]+=(_kp.S1+_kp.S10-_kp.S12-_kp.S13-_kp.S15)$2;
     pit[26]+=_kp.S2$2;
     pit[28]+=_kp.S4$2;
     pit[29]+=_kp.S13$2;
     pit[30]+=_kp.S14$2;
     pit[57]+=(_kp.S10-_kp.S12-_kp.S15)$2;
     pit[66]+=_kp.S9$2;
     _ku:=_kp.P;
     _kp.next
  !}
?};
pit[27]:=(pit[25]+pit[29]-pit[26]-pit[30])$2;
obj_del(_kp);

{? pit[25] | pit[29]
|| RH.index('RACHDATA');
   RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,pit[4]);
   {? RH.first
   || {!
      |? {? ~(',7,8,'*(','+RH.ZLE().RU().K+','))
         || _src:=
               {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
                  RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=',__PIT,'DEKL','NR','=',__WER)
               || RU_DEKL.WIERSZ<>0
               || 2
               ?};
            {? _src
            || _um:=RH.ZLE().RU().K;
               _skl:=exec('licza_rhs','lista_licz',5711,5721);
               {? _src=1
               || __transl();
                  _len:=obj_len(__wk[RU_DEKL.WIERSZ]);
                  _ra_92:=exec('licza_rhs','lista_licz',92);
                  _ra_93:=exec('licza_rhs','lista_licz',93);
                  'Koszty 50% sa liczone tylko na 6-ej pozycji.';
                  'Jezeli biezacy wiersz nie ma 6-ej pozycji - kosztow nie liczymy';
                  _przy50:={? _len>5 & __wk[RU_DEKL.WIERSZ][6] || _skl+_ra_92 ?};
                  {! _nx:=2.._len
                  |! _poz:=__wk[RU_DEKL.WIERSZ][_nx];
                     {? _poz
                     || pit[_poz]+=
                           {? _nx=2 || {? _len>5 & __wk[RU_DEKL.WIERSZ][6] || 0 || _skl+_ra_92 ?}
                           |? _nx=3 || _ra_93
                           |? _nx=4 || _skl+_ra_92-_ra_93
                           |? _nx=5 || exec('licza_rhs','lista_licz',961)
                           |? _nx=6 || _przy50
                           || 'przypadki nieuwzglednione'; 0
                           ?}
                     ?}
                  !};
                  &_len
               |? '1456'*_um
               || 'umowy o dzielo i zlecenia';
                  pit[40]+=(_skl+exec('licza_rhs','lista_licz',92))$2;
                  pit[41]+=exec('licza_rhs','lista_licz',93)$2;
                  pit[43]+=(exec('licza_rhs','lista_licz',961))$2;
                  pit[42]:=(pit[40]-pit[41])$2
               |? '23'*_um
               || 'prawa autorskie';
                  _ra_92:=exec('licza_rhs','lista_licz',92);
                  _ra_93:=exec('licza_rhs','lista_licz',93);
                  pit[48]+=_ra_93;
                  pit[46]+=exec('licza_rhs','lista_licz',961);
                  pit[47]+=_skl+_ra_92;
                  pit[45]:=pit[44]+pit[47]-pit[48]
               || 'inne zrodla';
                  pit[49]+=(_skl+exec('licza_rhs','lista_licz',92))$2;
                  pit[50]+=exec('licza_rhs','lista_licz',93)$2;
                  pit[52]+=(exec('licza_rhs','lista_licz',961))$2;
                  pit[51]:=(pit[49]-pit[50])$22
               ?};
               pit[57]+=_skl$2;
               pit[66]+=exec('licza_rhs','lista_licz',57412)$2
            ?}
         ?};
         RH.next
      !}
   ?};
   {? __kosz50<pit[48]
   || FUN.emsg(
         'Kwota '+$pit[48]+' kosztów uzyskania przychodu przekracza wartość maksymalną ('+$__kosz50+'zł).\n'+
         'Kwota kosztów uzyskania przychodów w poz. 48 została ograniczona do wartości maksymalnej.'
      );
      pit[48]:=__kosz50;
      pit[45]:=pit[44]+pit[47]-pit[48]
   ?};
   pit[53]:=(pit[25]+pit[29]+pit[31]+pit[34]+pit[37]+pit[40]+pit[44]+pit[47]+pit[49])$2;
   pit[56]:=(pit[28]+pit[33]+pit[36]+pit[39]+pit[43]+pit[46]+pit[52])$2;

   _kto:=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;

   pit[24]:=
      {? _pit12.JEST>1 & _pit12.KOSZTY>0
      || 5
      || {? exec('szukaj_p_ipod','pracownik',date(pit[4],12,0))
         || {? P_IPOD.KU='Z' || 3 || 1 ?}
         || 1
         ?}
      ?};

   _width:=30;
   undefine;
   define('HD1',~~,' Odliczenia od dochodu:');
   define('HD4',~~,'  Zwrot nienależnie pobranych świadczeń poz. 59');
   {? _pit12.JEST>1
   || define('OD2',~~,form('  Na podstawie oświadczenia PIT-12:',43)+form(_pit12.ODLICZ,17,2,'9,'))
   || define('OD2',0,,,17,_width,2)
   ?};
   define('HD8',~~,'  Inne odliczenia od dochodu ');
   define('ID','','   Rodzaj poz. 60',,82,_width);
   define('IOD',0,'   Kwota poz. 61',,17,_width,2);
   define('HD11',~~);
   define('HD5',~~,' Faktyczne koszty uzyskania przychodów ');
   {? _pit12.JEST>1 & _pit12.KOSZTY>0
   || define('KUP',~~,form(' Na podstawie oświadczenia PIT-12:',43)+form(_pit12.KOSZTY,17,2,'9,'))
   || define('KUP',0,,,17,_width,2)
   ?};
   define('HD7',~~,' Pozycja na formularzu w informacji o kosztach uzyskania');
   {? _pit12.JEST>1 & _pit12.KOSZTY>0
   || define('POZ',~~,form(' Na podstawie oświadczenia PIT-12:',43)+form(5,17,0,'9,'))
   || {? ~spr_ku
      || define('HPOZ1',~~,(5*' ')+'1. z jednego stosunku pracy');
         define('HPOZ3',~~,(5*' ')+'3. z jednego stosunku pracy, podwyższone')
      || define('HPOZ1',~~,(5*' ')+'1. z jednego stosunku pracy');
         define('HPOZ3',~~,(5*' ')+'3. z jednego stosunku pracy, podwyższone');
         define('HPOZ2',~~,(5*' ')+'2. z więcej niż jednego stosunku pracy');
         define('HPOZ4',~~,(5*' ')+'4. z więcej niż jednego stosunku pracy, podwyższone')
      ?};
      define('HPOZ5',~~,(5*' ')+'5. na podstawie faktycznie poniesionych wydatków');
      define('POZ',pit[24],,,1,2,0)
   ?};
   define('HD6',~~,' Ulga podatkowa ');
   define('ULG',pit[2],,,17,_width,2);
   define('HD2',~~,' Doliczenie do podatku poz. 64');
   define('OD1',0,,,17,_width,2);
   define('HD9',~~,' Inne odliczenia od podatku');
   define('IP','','   Rodzaj poz. 69',,82,_width);
   define('IOP',0,'   Kwota poz. 70',,17,_width,2);
   define('HD12',~~);
   {!
   |? def_edit("
         {? var_pres('POZ',@.DEFINE)=type_of(0)
         || {? ~spr_ku & ~(DEFINE.POZ=1 | DEFINE.POZ=3 | DEFINE.POZ=5)
            || FUN.emsg('Pozycja na formularzu w informacji o kosztach uzyskania\n'
                   'musi przyjmować jedną z wartości: 1, 3 lub 5.'@);
               return('POZ')
            |? spr_ku & ~(DEFINE.POZ=1 | DEFINE.POZ=3 | DEFINE.POZ=2 | DEFINE.POZ=4 | DEFINE.POZ=5)
            || FUN.emsg('Pozycja na formularzu w informacji o kosztach uzyskania\n'
                   'musi przyjmować jedną z wartości: 1, 2, 3, 4 lub 5.'@);
               return('POZ')
            || 1
            ?}
         || 1
         ?}
         ",'PIT-40 '+_kto);

      pit[6]:=_d;
      pit[23]:=_c;
      pit[59]:={? _pit12.JEST>1 || _pit12.ODLICZ || DEFINE.OD2 ?}$2;
      pit[60]:=DEFINE.ID;
      pit[61]:=DEFINE.IOD$2;
      pit[64]:=DEFINE.OD1$2;
      pit[69]:=DEFINE.IP;
      pit[70]:=DEFINE.IOP$2;

      _kup:={? _pit12.JEST>1 & _pit12.KOSZTY>0 || _pit12.KOSZTY || pit[24]:=DEFINE.POZ; DEFINE.KUP ?};
      {? _kup>0
      || pit[26]:=_kup;
         pit[27]:=(pit[25]+pit[29]-pit[26]-pit[30])$2
      || pit[24]:=DEFINE.POZ
      ?};

      pit[54]:=(pit[26]+pit[30]+pit[41]+pit[48]+pit[50])$2;
      pit[55]:=(pit[27]+pit[32]+pit[35]+pit[38]+pit[42]+pit[45]+pit[51])$2;

      {? (pit[57]+pit[59]+pit[61])$2>pit[55]$2
      || _kwota:=pit[55]-pit[57];
         {? _kwota<0 || _kwota:=0 ?};
         {? _text:='%1 (nr teczki: %2)\n'
                   'Nieprawidłowy dochód po odliczeniach.\n'
                   'Wartość odliczenia nie może przekroczyć kwoty: %3.'@[_kto,form(P.T),$_kwota];
            FUN.choice(_text,0,'Wyzerowanie kwot'@,,,,'Powtórna edycja'@)
         || pit[60]:='';
            pit[59]:=pit[61]:=0
         || 1
         ?}
      || 0
      ?}
   !};

   pit[74]:='';
   pit[75]:='';

   pit[62]:=(pit[55]-pit[57]-pit[59]-pit[61])$0;
   {? pit[62]<0 || pit[62]:=0 ?};
   {? TP.last
   || {! |? pit[62]$2<TP.K1$2 & TP.prev !};
      pit[63]+=((pit[62]-TP.K1)*TP.PR*0.01)$2;
      _poprog:=TP.K1$2;
      {!
      |? {? TP.prev
         || pit[63]+=((_poprog-TP.K1)*TP.PR*0.01)$2;
            _poprog:=TP.K1$2;
            1
         ?}
      !}
   ?};
   pit[63]:=(pit[63]-DEFINE.ULG$2)$2;
   {? pit[63]<0 || pit[63]:=0 ?};
   pit[65]:=pit[63]+pit[64];
   pit[68]:={? pit[66]>pit[65] || pit[65] || pit[66] ?}$2;

   {? (pit[68]+pit[70])$2>pit[65]$2
   || {? _text:='%1 (nr teczki: %2)\n'
                'Nieprawidłowe odliczenia od podatku.\n'
                'Wartość odliczenia nie może przekroczyć kwoty: %3.'@[_kto,form(P.T),$(pit[65]-pit[68])];
         FUN.choice(_text,0,'Wyzerowanie kwot'@,,,,'Powtórna edycja'@)
      || pit[69]:='';
         pit[70]:=0
      || undefine;
         define('HD9',~~,' Inne odliczenia od podatku ');
         define('IP',pit[69],'  Rodzaj poz. 69',,160,_width);
         define('IOP',pit[70],'  Kwota poz. 70',,17,_width,2);
         {!
         |? def_edit(,'PIT-40 '+_kto);
            pit[69]:=DEFINE.IP;
            pit[70]:=DEFINE.IOP$2;
            {? (pit[68]+pit[70])$2>pit[65]$2
            || {? _text:='%1 (nr teczki: %2)\n'
                         'Nieprawidłowe odliczenia od podatku.\n'
                         'Wartość odliczenia nie może przekroczyć kwoty: %3.'@[_kto,form(P.T),$(pit[65]-pit[68])];
                  FUN.choice(_text,0,'Wyzerowanie kwot'@,,,,'Powtórna edycja'@)
               || pit[69]:='';
                  pit[70]:=0
               || 1
               ?}
            || 0
            ?}
         !}
      ?}
   ?};

   pit[71]:=(pit[65]-pit[68]-pit[70])$0;
   {? pit[71]<0 || pit[71]:=0 ?};
   {? _pit12.JEST>1
   || _ret:=exec('pit12_set','osoba',P.OSOBA,pit[4],'O',(pit[71]-pit[56])$0);
      {? _ret<>'' || FUN.emsg(_ret) ?}
   ?};
   pit[72]:={? pit[56]<pit[71] || pit[71]-pit[56] ?}$0;
   pit[73]:={? pit[56]>pit[71] || pit[56]-pit[71] ?}$0
?};
{? pit[53]>0
|| _wynik:=1;
   {? _e='T' & _f<>date(0,0,0)
   || exec('przekaz','giodo',_f,'Przekazanie danych na formularzu PIT-40\n',
           'odbiorcą danych jest:\n',
           pit[5])
   ?};
   {? var_pres('PODFIZ',KST)>0
   || pit[76]:=KST.PODFIZ
   ?}
|| _wynik:=0
?};
_wynik


\tryb_druku
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.30]
:: OPIS: Zwraca informacje o trybie wydruku - ustawienie parametru dyrektywy PRINTER
::   WE: _a - symbol formularza
::   WY: 'A4' - drukowanie na tle pdf, ~~ - drukowanie ramkami MacroBASE
::----------------------------------------------------------------------------------------------------------------------
{? exec('tryb_pdf','pit',_a)='T' || 'A4' || ~~ ?}


\tryb_nazwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.30]
:: OPIS: Zwraca opis trybu drukowania (w nawiasach)
::   WE: _a - symbol formularza
::   WY: opis trybu drukowania wlasciwy dla formularza
::----------------------------------------------------------------------------------------------------------------------
'('+{? exec('tryb_pdf','pit',_a)='T' || 'na formularzu' || 'uproszczony' ?}+')'


\tryb_pdf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.30]
:: OPIS: Zwraca informacje o trybie drukowania formularza
::   WE: _a - symbol formularza
::   WY: T - drukowac na tle pdf, N - drukowac ramkami MacroBASE
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('rpm_as_pdf_ok','rpm_pdf') || return('N') ?};

_pdf:=exec('get','#profile',,'pdf',~-_a);

{? _pdf=''
|| _pdf:='T';
   exec('set','#profile',,'pdf',~-_a,_pdf)
?};

~-_pdf


\tryb_ustaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.30]
:: OPIS: Wyswietla okienko zmiany parametrow drukowania dla formularzy o podanych symbolach
::   WE: _a - symbol formularza
::       ...
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('rpm_as_pdf_ok','rpm_pdf')
|| FUN.info('Funkcjonalność drukowania na formularzach wymaga wersji 12.40 modułu wykonawczego.'@);
   return()
?};

_mk_tab:="tab_tmp(1";
{! _arg:=1.._
|! _acr:='F'+$_arg;
   _mk_tab+=',\''+_acr+'\',\'STRING[1]\','
!};
_mk_tab+=')';
_tab:=($_mk_tab)();

_wnd:=_tab.mk_edit('Wydruk na formularzu'@);
{! _arg:=1.._
|! _acr:='F'+$_arg;
   ($('_a.'+_acr+':=_b'))(_tab,exec('tryb_pdf','pit',_[_arg]));
   _tab.win_efld(_wnd,,_acr,,,3,,,~-_[_arg]+' '+exec('form_opis','pit',_[_arg]),,,'check-box',,"'T'","'N'")
!};
_tab.win_ebtn(_wnd,'text=&OK,btn_label_align=center,panel=bottom,align=end',"'key:F2'");
_tab.win_ebtn(_wnd,'text=&Anuluj,btn_label_align=center,panel=bottom,align=end',"'key:Esc'");
_tab.win_edit(_wnd);

{? _tab.edit
|| {! _arg:=1.._
   |! _acr:='F'+$_arg;
      exec('set','#profile',,'pdf',~-_[_arg],($('_a.'+_acr))(_tab))
   !}
?}


\form_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.30]
:: OPIS: Zwraca opis wlasciwy dla formularza do utworzenia pozycji w menu wyboru oraz okienku opcji.
::   WE: _a - symbol formularza
::----------------------------------------------------------------------------------------------------------------------
_symbol:=~-_a;

{? _symbol='PIT-4R'  || 'deklaracja roczna o pobranych zaliczkach'@
|? _symbol='PIT-8AR' || 'deklaracja roczna'@
|? _symbol='PIT-8C'  || 'informacja o uzyskanych przychodach'@
|? _symbol='PIT-11'  || 'informacja o uzyskanych dochodach'@
|? _symbol='PIT-40'  || 'roczne obliczenie podatku'@
|? _symbol='IFT-1'   || 'informacja o dochodach nierezydentów'@
|| ''
?}


\init_pit8c_6
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Formula inicjujaca PIT-8C
::   WE: _a - string typ deklaracji PIT8C
::       _b - string T lub N czy tworzyc dekl. dla zleceniobiorcy, gdy jest juz utworzona
::       _c - string T czy N przetwarzanie danych osobowych lub nie
::       _c - data przekazania danych osobowych
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('pit','pom_pit','__DEKOS');
pit:=obj_new(51);
{! _n:=1..24 |! pit[_n]:='' !};
{! _n:=25..obj_len(pit) |! pit[_n]:=0 !};
pit[26]:=pit[28]:='';

pom_pit:=obj_new('PIT_TYP','TWORZ','GIODO','GIODODAT');
pom_pit.PIT_TYP:=_a;
pom_pit.TWORZ:=(_b='T');
pom_pit.GIODO:=(_c='T');
pom_pit.GIODODAT:={? var_pres('_d')=type_of(date) || _d || date(0,0,0) ?};
DEKL_POD.cntx_psh;
DEKL_POD.use('pod_'+($__Rok+4));
DEKL_POD.index('DEKL_OSO');
__DEKOS:=DEKL_POD.ndx_tmp(,1,'PRAC_ET','OSOBA',,'PIT',,,'PIT',,);
exec('czytaj','#stalesys',date(__Rok,12,0),KST);
::tabela do zapisu w wydrukowanych deklaracjach
{? var_pres('__par')>100 || obj_del(__par) ?};
__par:=tab_tmp(2,'RODZAJ','STRING[1]','Rodzaj','REF','INTEGER','Ref');
1


\end_pit8c_6
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Formula zwiazana z formula \init_pit8c_6 usuwa utworzone zmienne
::----------------------------------------------------------------------------------------------------------------------
DEKL_POD.ndx_drop(__DEKOS);
VAR_DEL.delete('pit','pom_pit','__par','__DEKOS');
DEKL_POD.cntx_pop;
exec('stalesys','#stalesys')


\obl_pit8c_6
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Formula wyliczajaca dane z systemu do tablicy pit przed zapisem do tabeli VAT_POZ dla pity PIT 8C
::   WE: _a - 1 - jesli jest prawidlowy symbol i wymagane dane do utworzenia deklaracji
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 1 ?};
_prac:=(pom_pit.PIT_TYP='PIT8CP');
_wyn:=0;
_zasilek:=obj_new(5);
_odsetki:=obj_new(6);
{! _nx:=1..24 |! pit[_nx]:='' !};
{! _nx:=25..obj_len(pit) |! pit[_nx]:=0 !};
pit[26]:=pit[28]:='';
__par.erase;
::Ustalenie rodzaju Podatnika
pit[51]:=0;

pit[4]:=$__Rok;

_jest_pit:=_jestwyd:=0;
{? ~pom_pit.TWORZ
|| VAT_DEK.cntx_psh;
   VAT_DEK.index('VAT_OSOB');
   VAT_DEK.prefix(P.OSOBA,rodzdekl,rok_dekp,$__Rok,pit_typ);
   {? VAT_DEK.last || _jest_pit:=1 ?};
   VAT_DEK.cntx_pop
?};
{? ~_jest_pit
|| DEKL_POD.index('DEKL_OSO');
   DEKL_POD.prefix(P.OSOBA,'(E)PIT-8C','(E)PIT-8C');
   {? DEKL_POD.first
   || _jest_pit:=1
   ?}
?};
{? ~_jest_pit
|| DEKL_POD.index(__DEKOS);
   DEKL_POD.prefix(P.OSOBA,'PIT-8C','PIT-8C');
   {? DEKL_POD.first
   || _jest_pit:=_jestwyd:=1
   ?}
?};
{? ~pom_pit.TWORZ & _jest_pit
|| {? _jestwyd || return(-2) || return(-1) ?}
?};

{! _nx:=1..obj_len(_zasilek) |! _zasilek[_nx]:=0 !};
{! _nx:=1..obj_len(_odsetki) |! _odsetki[_nx]:=0 !};

_adus:=exec('adresdous','osoba',#pit[4]);
{? #(_adus+1)
|| pit[5]:=OS_US.US;
   _usnaz:=OS_US.US().NU+
              {? +US.UU || ', '+US.UU || '' ?}+
              {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?}
|| pit[5]:=null;
   _usnaz:=''
?};
{? #(1+_adus)
|| pit[14]:=OS_ADRES.KRAJ;
   pit[15]:=OS_ADRES.WOJEWODZ;
   pit[16]:=OS_ADRES.POWIAT;
   pit[17]:=OS_ADRES.GMINA;
   pit[18]:=OS_ADRES.ULICA;
   pit[19]:=OS_ADRES.DOM;
   pit[20]:=OS_ADRES.LOKAL;
   pit[21]:=OS_ADRES.MIASTO;
   pit[22]:=OS_ADRES.KOD;
   pit[23]:=OS_ADRES.POCZTA
|| {! _nx:=15..23 |! pit[_nx]:='' !};
   pit[14]:=null
?};
pit[10]:={? OSOBA.PESEL='' | exec('spr_nip','pit',OSOBA.ref,date(#pit[4],12,0)) || 'N'+OSOBA.NIP || 'P'+OSOBA.PESEL ?};
pit[11]:=OSOBA.NAZWISKO;
pit[12]:=OSOBA.PIERWSZE;
pit[13]:=OSOBA.UR_DATA;

{? _prac=1
|| 'odsetki wyrównan';
   O.cntx_psh();
   O.index('LISTYPLP');
   LS.cntx_psh();
   O.prefix(exec('ref_firma','ustawienia'),__F_ZATR.O,#pit[4]);
   {? O.first()
   || {!
      |? LS.use(O.LT);
         LS.index('OSOBAKOD');
         LS.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
         {? LS.first
         ||
::          'zas. chorobowy';
            LS.prefix(exec('ref_firma','ustawienia'),P.OSOBA,711);
            {? LS.first
            || {! |? _odsetki[1]+=LS.KW; LS.next() !}
            ?};
::          'odsetki od opoznienia w wyplacie zasilku za czas pobytu w szpitalu';
            LS.prefix(exec('ref_firma','ustawienia'),P.OSOBA,712);
            {? LS.first
            || {! |? _odsetki[2]+=LS.KW; LS.next() !}
            ?};
::          'zas. macierzynski';
            LS.prefix(exec('ref_firma','ustawienia'),P.OSOBA,713);
            {? LS.first
            || {! |? _odsetki[3]+=LS.KW; LS.next() !}
            ?};
::          'zas. opiekunczy';
            LS.prefix(exec('ref_firma','ustawienia'),P.OSOBA,714);
            {? LS.first
            || {! |? _odsetki[4]+=LS.KW; LS.next() !}
            ?};
::          'odsetki od wyrownania zasilku chorobowego wyplaconego fund. wypadkowego';
            LS.prefix(exec('ref_firma','ustawienia'),P.OSOBA,716);
            {? LS.first
            || {! |? _odsetki[5]+=LS.KW; LS.next() !}
            ?};
::          'swiadczenie rehabilitacyjne';
            LS.prefix(exec('ref_firma','ustawienia'),P.OSOBA,717);
            {? LS.first
            || {! |? _odsetki[6]+=LS.KW; LS.next() !}
            ?}
         ?};
         O.next
      !}
   ?};
   LS.cntx_pop();
   O.cntx_pop();
   FUNKCJE.OTWOLIST();
   {! _nx:=1..obj_len(_odsetki)
   |! pit[25]+=_odsetki[_nx];
      pit[24]+={? _odsetki[_nx]
               || {? _nx=1 || 'zas. chorobowy, '
                  |? _nx=2 || 'zas. za czas pobytu w szpitalu, '
                  |? _nx=3 || 'zas. macierzyński, '
                  |? _nx=4 || 'zas. opiekuńczy, '
                  |? _nx=5 || 'zas. chorobowy wypłacony z fund. wyp., '
                  |? _nx=6 || 'świadczenie rehabilitacyjne, '
                  || ''
                  ?}
               || ''
               ?}
   !};
   pit[24]:={? (pit[24]*',')>0 || 'Odsetki od wyrównań: ' || '' ?}+(pit[24]-2);
   {? pit[25]+pit[27]+pit[29]
   || {? ~__par.find_key('E',#P.ref)
      || __par.RODZAJ:='E'; __par.REF:=#P.ref; __par.add(1)
      ?}
   ?}
?};
{? _prac=0
||
:: obsluga zasilkow dla zleceniobiorcy
   RH.cntx_psh();
   RH.index('RACHZAS');
   RH.prefix(exec('ref_firma','ustawienia'),OSOBA.ref,'T',#pit[4]);
   ZC_N.cntx_psh();
   ZC_N.index('ZC_H');
   ZC.cntx_psh();
   {? RH.first()
   || {? ~__par.find_key('Z',#P.ref)
      || __par.RODZAJ:='Z'; __par.REF:=#P.ref; __par.add(1)
      ?};
      {!
      |? ZC_N.prefix(RH.ref);
         {? ZC_N.first()
         || {!
            |? 'wyplacone zasilki:';
               _zas_kod:=ZC_N.R().RN;
               {? __RUB.sys_attr(_zas_kod,1221,ZC_N.OD) | _zas_kod>=510 & _zas_kod<=517
               || 'chorobowe';
                  _zasilek[1]+=ZC_N.KW
               |? __RUB.sys_attr(_zas_kod,1227,ZC_N.OD) | _zas_kod=524
               || 'macierzynskie';
                  _zasilek[2]+=ZC_N.KW
               |? __RUB.sys_attr(_zas_kod,1225,ZC_N.OD) | _zas_kod=530
               || 'opiekuncze';
                  _zasilek[3]+=ZC_N.KW
               |? __RUB.sys_attr(_zas_kod,1222,ZC_N.OD) | _zas_kod=537
               || 'swiadczenia reh.';
                  _zasilek[5]+=ZC_N.KW
               ?};
               ZC_N.next()
            !}
         ?};
         RH.next()
      !}
   ?};
   ZC.cntx_pop();
   ZC_N.cntx_pop();
   RH.cntx_pop();
::  przepisanie wartosci do pozycji pit, jesli są zasilki to szukamy wolnej pozycji, a jak brak to do ostatniej
   {! _nx:=1..obj_len(_zasilek)
   |! _zas_kw:=0;
      _zas_op:='';
      _zas_kw+=_zasilek[_nx];
      _zas_op+={? _zasilek[_nx]
               || {? _nx=1 || 'zasiłki chorobowe, '
                  |? _nx=2 || 'zasiłki macierzyńskie, '
                  |? _nx=3 || 'zasiłki opiekuńcze, '
                  |? _nx=5 || 'świadczenia rehabilitacyjne, '
                  || ''
                  ?}
               || ''
               ?};
      {? +_zas_op || _zas_op:=_zas_op-2 ?};
      {? _zas_kw
      || {! _ix:=1..3
         |? _zas_kw
         |! {? pit[24+(_ix-1)*2]='' & pit[25+(_ix-1)*2]=0
            || pit[24+(_ix-1)*2]:=_zas_op;
               pit[25+(_ix-1)*2]:=_zas_kw;
               _zas_kw:=0
            ?}
         !};
         {? _zas_kw
         || pit[28]+=', '+_zas_op;
            pit[29]+=_zas_kw
         ?}
      ?}
   !}
?};

::Razem poz. 30
pit[30]:=pit[25]+pit[27]+pit[29];
::Stypendia: 33=31-32
pit[33]:=pit[31]-pit[32];

::dochody z sekcji F
pit[45]:=pit[35]+pit[37]+pit[39]+pit[41]+pit[43];
pit[46]:=pit[36]+pit[38]+pit[40]+pit[42]+pit[44];

pit[47]:=pit[45]-pit[46]; {? pit[47]<0 || pit[47]:=0 ?};
pit[48]:=pit[46]-pit[45]; {? pit[48]<0 || pit[48]:=0 ?};

_kw:=pit[30]+pit[31]+pit[34]+pit[45]+pit[46]+pit[49];

_wyn:={? ~(_kw>0) || 0 || 1 ?};
{? _a & _wyn
|| {? __par.first
   || P.cntx_psh();
      P.prefix();
      {!
      |? DEKL_POD.prefix();
         DEKL_POD.blank();
         DEKL_POD.PIT:='(E)PIT-8C';
         {? __par.RODZAJ='E' & P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='E'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         |? P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='Z'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         ?};
         {? EDIT_VAR.PIT_RODZ=''
         || DEKL_POD.DATA:=VAT_DEK.DATA
         || DEKL_POD.DATA:={? PIT_EDIT.DATA<>date(0,0,0) || PIT_EDIT.DATA || VAT_DEK.DATA ?}
         ?};
         DEKL_POD.USER:=OPERATOR.USER;
         DEKL_POD.S1:=pit[30]+pit[45]+pit[49];
         DEKL_POD.S2:=pit[46];
         DEKL_POD.S3:=pit[34];
         DEKL_POD.add();
        __par.next()
      !};
      P.cntx_pop()
   ?};
   {? pom_pit.GIODODAT<>date(0,0,0)
   || exec('przekaz','giodo',pom_pit.GIODODAT,
           'Przekazanie danych na formularzu PIT-8C\n',
           'odbiorcą danych jest:\n',
           _usnaz)
   ?};
   {? var_pres('PODFIZ',KST)>0
   || pit[51]:=KST.PODFIZ
   ?}
?};
_wyn


\init_ift1_10
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Formula inicjujaca IFT-1/IFT-1R
::   WE: _a - string typ deklaracji IFT-1/IFT-1R
::       _b - string T lub N czy tworzyc dekl. dla zleceniobiorcy, gdy jest juz utworzona
::       _c - string T czy N przetwarzanie danych osobowych lub nie
::       _d - data przekazania danych osobowych
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('pit','pom_pit');
pit:=obj_new(79);
{! _n:=1..23 |! pit[_n]:='' !};
{! _n:=24..obj_len(pit) |! pit[_n]:=0 !};

pom_pit:=obj_new('PIT_TYP','TWORZ','GIODO','GIODODAT');
pom_pit.PIT_TYP:=_a;
pom_pit.TWORZ:=(_b='T');
pom_pit.GIODO:=(_c='T');
pom_pit.GIODODAT:={? var_pres('_d')=type_of(date) || _d || date(0,0,0) ?};
exec('czytaj','#stalesys',date(__Rok,12,0),KST);
{? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
1


\obl_ift_10
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla informacji IFT-1/IFT-1R
::   WE: _a - string typ deklaracji IFT1/IFT1R
::       _b - date Data od okresu za ktory beda pobierane dane
::       _c - date Data do okresu za ktory beda pobierane dane
::----------------------------------------------------------------------------------------------------------------------
_nazwa:=_a;
_od:=_b;
_do:=_c;
{! _iter:=20..33 |! pit[_iter]:='' !};
{! _iter:=34..73 |! pit[_iter]:=0 !};

_wyn:=0;

_jest_pit:=0;
{? ~pom_pit.TWORZ
|| VAT_DEK.cntx_psh;
   VAT_DEK.index('VAT_OSOB');
   VAT_DEK.prefix(P.OSOBA,rodzdekl,rok_dekp,$__Rok,pit_typ,);
   {? VAT_DEK.last || _jest_pit:=1 ?};
   VAT_DEK.cntx_pop
?};
{? _jest_pit
|| return(-1)
?};

_adus:=exec('adresdous','osoba',VAT_DEK.DO~1);
{? #(_adus+1)
|| pit[6]:=OS_US.US;
   _usnaz:=OS_US.US().NU+
              {? +US.UU || ', '+US.UU || '' ?}+
              {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?}
|| pit[6]:=null;
   _usnaz:=''
?};
pit[20]:=OSOBA.NAZWISKO;
pit[21]:=OSOBA.PIERWSZE;
pit[22]:=OSOBA.OJCIEC;
pit[23]:=OSOBA.MATKA;
pit[24]:=OSOBA.UR_DATA;
pit[25]:=OSOBA.UR_MIEJ;
pit[26]:=~-{? +OSOBA.NIP>0 || pit[79]:='N'; OSOBA.NIP || pit[79]:='P'; OSOBA.PASZPORT ?};
{? #(1+_adus) | exec('szukaj','osoba','S',VAT_DEK.DO)
|| pit[28]:=OS_ADRES.KRAJ;
   pit[29]:=OS_ADRES.MIASTO;
   pit[30]:=OS_ADRES.KOD;
   pit[31]:=OS_ADRES.ULICA;
   pit[32]:=OS_ADRES.DOM;
   pit[33]:=OS_ADRES.LOKAL
?};

pit[27]:=null();
{? pit[79]='P'
|| pit[27]:=OSOBA.KRAJPASZ
|| KRAJE.cntx_psh();
   KRAJE.index('KRAJE');
   KRAJE.prefix();
   {? KRAJE.find_key('PL')
   || pit[27]:=KRAJE.ref
   ?};
   KRAJE.cntx_pop()
?};

RH.cntx_psh;
RH.index('RACHDATA');
RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,__Rok);
{? RH.first()
|| {!
   |? {? RH.DWY>=_od & RH.DWY<=_do
      || _src:=
            {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
               RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=',_nazwa,'DEKL','NR','=',10)
            || RU_DEKL.WIERSZ
            |? RH.ZLE().RU().K='8'
            || 10
            ?};
         {? _src
         || _ke:=31+_src*4;
            pit[_ke]+=exec('licza_rhs','lista_licz',92);
            pit[_ke+2]+=exec('licza_rhs','lista_licz',961);
            {? pit[_ke]>0 | pit[_ke+2]>0 || pit[_ke+1]:=RH.PPD ?}
         ?}
      ?};
      RH.next
   !}
?};
RH.cntx_pop;
{! _lp:=35 //4 ..71
|! {? _lp<>43 & _lp<>71
   || pit[_lp]:=pit[_lp]$0;
      pit[_lp+2]:=pit[_lp+2]$0
   ?}
!};

_wyn:=0;
{! _lp:=34..73
|? _wyn=0
|! {? pit[_lp]>0 || _wyn:=1 ?}
!};
{? _wyn & pom_pit.GIODODAT<>date(0,0,0)
|| exec('przekaz','giodo',pom_pit.GIODODAT,
        'Przekazanie danych na formularzu '+SKID.DEKL_NAZ+'\n',
        'odbiorcą danych jest:\n',
        _usnaz)
?};
_wyn


\end_ift1_10
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Formula zwiazana z formula init_ift1_10 usuwa utworzone zmienne
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('pit','pom_pit');
exec('stalesys','#stalesys')


\init_pit11p_6
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.41]
:: OPIS: Formula dla akcji Dolacz okna deklaracji PIT-11 dla pracownika lub zleceniobiorcy
::       dla 6 wersji e-deklaracji obowiazujacej od 8.12.2014 roku
::       (wymagana zmienna globalna __Rok-rok za ktory tworzona jest e-deklaracja)
::   WE: _a - string typ deklaracji PIT11P, PIT4R
::       _b - string T lub N czy tworzyc deklaracje jezeli podatnik ma juz
::       _c - string T lub N czy tworzyc deklaracje zbiorcza dla podatnika
::       _d - string T lub N czy sumowac umowy zlecenia sprzed zatrudnienia
::       _e - string T lub N czy dolaczono informacje PIT-R
::       _f - string T korekta lub N zlozenie deklaracji
::       _g - string T lub N przetwarzanie danych osobowych lub nie
::       _h - data przekazania danych osobowych
::       _i - string T lub N czy umozliwiac zmiane informacji o kosztach uzyskania
::       _j - numer wersji e-deklaracji pole VAT_DEK.NR().NR lub PIT_GRUP.NR().NR
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_j')<>type_of(0) || _j:=6 ?};
VAR_DEL.delete('__PIT','__WER','__wk','__transl');
{? var_pres('pit')>100 || obj_del(pit) ?};
pit:=obj_new(77);
{! _nx:=1..23 |! pit[_nx]:='' !};
{! _nx:=24..obj_len(pit) |! pit[_nx]:=0 !};
_pom:=pit[3]:=obj_new(11);
_pom[2]:={? _a='PIT11P' || 'P' || 'Z' ?};
_pom[1]:=__Rok;

::tabela do zapisu w wydrukowanych deklaracjach
{? var_pres('__par')>100 || obj_del(__par) ?};
__par:=tab_tmp(2,'RODZAJ','STRING[1]','Rodzaj','REF','INTEGER','Ref');

::czy wydruk dla podatnika?
_pom[4]:={? _pom[3]:=(_c='T')
         || tab_tmp(1,'OSOBA','INTEGER','Podatnik')
         || ~~
         ?};
::czy sumowac umowy zlecenie sprzed zatrudnienia'
{? _pom[3] & _pom[2]='P'
|| _pom[10]:=(_d='T')
|| _pom[10]:=0
?};
::czy przychody pochodza z wiecej niz jednego stosunku pracy
_pom[5]:=0;
::czy umozliwiac zmiane informacji o kosztach uzyskania?
_pom[6]:=_i;
::czy rejestrowac przekazanie danych osobowych?
{? _g='T'
|| _pom[9]:=_h
|| _pom[9]:=date(0,0,0)
?};

exec('czytaj','#stalesys',date(__Rok,12,0),KST);

::wysokosc kosztow uzyskania
_pom[7]:=KST.KU;
_pom[8]:=(_b='T');

pit[6]:=_f;

pit[72]:=_e;

KP.cntx_psh; KP.index('_KARTAPO');
RH.cntx_psh; RH.index('RACHDATA');
us_podat:=null;
DEKL_POD.cntx_psh;
DEKL_POD.use('pod_'+$_pom[1]);
DEKL_POD.index('DEKL_PED');

__wk:=obj_new(10);
{! _nx:=1..obj_len(__wk)
|! __wk[_nx]:=obj_new(7);
   {! _ny:=1..obj_len(__wk[_nx])
   |! __wk[_nx][_ny]:=0
   !}
!};
__transl:="{? RU_DEKL.DEKL().NR=__WER
           || __wk[1][2]:=25;  __wk[1][3]:=26; __wk[1][4]:=27;  __wk[1][5]:=28;  __wk[1][6]:=29;
              __wk[2][2]:=32;  __wk[2][3]:=0;  __wk[2][4]:=33;  __wk[2][5]:=0;   __wk[2][6]:=34;
              __wk[3][2]:=35;  __wk[3][3]:=0;  __wk[3][4]:=36;  __wk[3][5]:=37;  __wk[3][6]:=38;
              __wk[4][2]:=39;  __wk[4][3]:=0;  __wk[4][4]:=40;  __wk[4][5]:=0;   __wk[4][6]:=41;
              __wk[5][2]:=42;  __wk[5][3]:=0;  __wk[5][4]:=43;  __wk[5][5]:=0;   __wk[5][6]:=44;
              __wk[6][2]:=45;  __wk[6][3]:=46; __wk[6][4]:=47;  __wk[6][5]:=0;   __wk[6][6]:=48;
              __wk[7][2]:=49;  __wk[7][3]:=50; __wk[7][4]:=51;  __wk[7][5]:=0;   __wk[7][6]:=52;
              __wk[8][2]:=53;  __wk[8][3]:=57; __wk[8][4]:=54;  __wk[8][5]:=0;   __wk[8][6]:=55;   __wk[8][7]:=56;
              __wk[9][2]:=58;  __wk[9][3]:=59; __wk[9][4]:=60;  __wk[9][5]:=0;   __wk[9][6]:=61;
              __wk[10][2]:=62; __wk[10][3]:=0; __wk[10][4]:=63; __wk[10][5]:=64; __wk[10][6]:=65;
              RU_DEKL.WIERSZ
           || 0
           ?}
           ";
__PIT:='PIT11';
__WER:=_j;
::tabela pomocnicza dla wykrywania pokrywajacych sie okresow zatrudnienia
_pom[11]:=tab_tmp(2,'OD','DATE',,'DO','DATE',)


\obl_pit11p_6
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.41]
:: OPIS: Formula wylicza dane do deklaracji Pit-11 z systemu dla 6 wersji
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - 1 - jesli jest prawidlowy symbol i wymagane dane do utworzenia deklaracji
::       _b - numer wersji e-deklaracji pole VAT_DEK.NR().NR lub PIT_GRUP.NR().NR
::       _c - 1 - ustawienie pracownika zatrudnionego przy sumowaniu zbiorczym
::       _d - tablica nazwana z polami 'P' - tabela , 'Ndx' - index po polu _tab.REF
::----------------------------------------------------------------------------------------------------------------------
::UWAGA ze wzgledu na brak zmian w pozycjach formularza w wersji 6 e-deklaracji (papierowy 21)
::do obliczen bedzie wykorzystywana funkcja dla 5 wersji czyli \obl_pit11p_5
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 1 ?};
_b:={? var_pres('_b')>0 & type_of(_b)=type_of(0) || _b || 6 ?};
_c:={? var_pres('_c')>0 & type_of(_c)=type_of(0) || _c || 0 ?};
_prac_up:={? var_pres('_d')>100 || _d || null() ?};
exec('obl_pit11p_5','pit',_a,_b,_c,_prac_up)


\init_pit40p_5
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.30]
:: OPIS: Formula dla akcji Dolacz okna deklaracji PIT-40 dla pracownika
::       dla 5 wersji e-deklaracji obowiazujacej od 12.12.2014 roku
::   WE: _a - Integer Nr wersji formularza papierowego dla versji e-deklaracji PIT40
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__wk','pit','__transl','__PIT','__WER','spr_ku','__kosz50');
__PIT:=SKID.DEKL_NAZ;
__WER:=_a;
__wk:=obj_new(7);
{! _nx:=1..obj_len(__wk)
|! __wk[_nx]:=obj_new(6);
  {! _ny:=1..obj_len(__wk[_nx])
  |! __wk[_nx][_ny]:=0
  !}
!};
__transl:="{? RU_DEKL.DEKL().NRF=__WER
           || __wk[1][2]:=25;  __wk[1][3]:=26; __wk[1][4]:=27;  __wk[1][5]:=28;
              __wk[2][2]:=31;  __wk[2][3]:=0;  __wk[2][4]:=32;  __wk[2][5]:=33;
              __wk[3][2]:=34;  __wk[3][3]:=0;  __wk[3][4]:=35;  __wk[3][5]:=36;
              __wk[4][2]:=37;  __wk[4][3]:=0;  __wk[4][4]:=38;  __wk[4][5]:=39;
              __wk[5][2]:=40;  __wk[5][3]:=41; __wk[5][4]:=42;  __wk[5][5]:=43;
              __wk[6][2]:=44;  __wk[6][3]:=48; __wk[6][4]:=45;  __wk[6][5]:=46; __wk[6][6]:=47;
              __wk[7][2]:=49;  __wk[7][3]:=50; __wk[7][4]:=51;  __wk[7][5]:=52;
              RU_DEKL.WIERSZ
           || 0
           ?}";
spr_ku:=0;
pit:=obj_new(76);
{! _n:=1..8 |! pit[_n]:='' !};

pit[4]:=__Rok;
exec('czytaj','#stalesys',date(pit[4],12,0),KST);
pit[2]:=KST.UL_ROK;

{? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
us_podat:=null;
__kosz50:=exec('kwota_koszty50_zlec_rh','lista_licz',pit[4])


\obl_pit40p_5
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.41]
:: OPIS: Formula wylicza dane do deklaracji Pit-40 z systemu dla 5 wersji
::   WE: _a - string typ deklaracji PIT40
::       _b - string T lub N czy tworzyc deklaracje jezeli podatnik (osoba) ma juz
::       _c - string T lub N czy dolaczono informacje PIT-R
::       _d - string T korekta lub N zlozenie deklaracji
::       _e - string T lub N przetwarzanie danych osobowych lub nie
::       _f - data przekazania danych osobowych
::       _g - informacje dotyczace deklaracji PIT-12
::----------------------------------------------------------------------------------------------------------------------
::UWAGA ze wzgledu na brak zmian w pozycjach formularza w wersji 5 e-deklaracji (papierowy 20)
::do obliczen bedzie wykorzystywana funkcja dla 4 wersji czyli \obl_pit40p_4
exec('obl_pit40p_4','pit',_a,_b,_c,_d,_e,_f,_g)


\obl_pit8ar_6
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.41]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla pity PIT 8AR
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - opcjonalny numer wersji e-deklaracji.
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 6 ?};
_vern:=_a;
_Msc:=1; _Rok:=__Rok; _podatek:=0;
exec('czytaj','#stalesys',date(_Rok,12,0),KST);

exec('init_tab_1','pit');

_dod_zap:="__TAB.blank; __TAB.LP:=_a; __TAB.O:=_b; __TAB.NR:=_d; __TAB.NRK:=_e;
           {! _ind:=1..6 |! ($('__TAB.P'+$_ind+':=(_a+_b)'))(_c,_ind) !};
           __TAB.add";

_dod_zap(1,'1. Wygrane w konkursach, grach i zakładach wzajemnych oraz nagrody związane',8,1,0);
_dod_zap(1,'   ze sprzedażą premiową (art. 30 ust. 1 pkt 2 ustawy)',14,1,6);
_dod_zap(3,'3. Świadczenia pieniężne otrzymane przez funkcjonariuszy służb mundurowych',32,3,0);
_dod_zap(3,'   oraz żołnierzy, wymienione w art. 30 ust. 1 pkt 4a ustawy',38,3,6);
_dod_zap(4,'4. Jednorazowe odszkodowania za skrócenie okresu wypowiedzenia wypłacane żołnie-',44,4,0);
_dod_zap(4,'   rzom zwalnianym z zawodowej służby wojskowej (art. 30 ust. 1 pkt 13 ustawy)',50,4,6);
_dod_zap(5,'5. Kwoty wypłat z indywidualnego konta zabezpieczenia emerytalnego',56,5,0);
_dod_zap(5,'   (art. 30 ust.1 pkt 14 ustawy)',62,5,6);
_dod_zap(7,'7. Odsetki od pożyczek, odsetki i dyskonto od papierów wartościowych',80,7,0);
_dod_zap(7,'   (art. 30a ust. 1 pkt 1 i 2 ustawy)',86,7,6);
_dod_zap(8,'8. Odsetki lub inne przychody od środków pieniężnych zgromadzonych na',92,8,0);
_dod_zap(8,'   rachunku podatnika (art. 30a ust. 1 pkt 3 ustawy)',98,8,6);
_dod_zap(9,'9. Dywidendy i inne przychody z tytułu udziału w zyskach osób prawnych',104,9,0);
_dod_zap(9,'   (art. 30a ust. 1 pkt 4 ustawy)',110,9,6);
_dod_zap(10,'10. Dochód z tytułu udziału w funduszach kapitałowych',116,10,0);
_dod_zap(10,'   (art. 30a ust. 1 pkt 5 ustawy)',122,10,6);
_dod_zap(11,'11. Kwoty wypłacane po śmierci członka otwartego funduszu emerytalnego',128,11,0);
_dod_zap(11,'   (art. 30a ust. 1 pkt 6 ustawy)',134,11,6);
_dod_zap(12,'12. Dochody członka pracowniczego funduszu emerytalnego z tytułu',140,12,0);
_dod_zap(12,'    przeniesienia akcji (art. 30a ust. 1 pkt 7 ustawy)',146,12,6);
_dod_zap(13,'13. Przychody z tytułu zbycia prawa poboru akcji',152,13,0);
_dod_zap(13,'    art. 30a ust. 1 pkt 8 ustawy)',158,13,6);
_dod_zap(16,'16. Wynagrodzenie z tytułu terminowego wpłacania podatku dochodowego',188,16,0);
_dod_zap(16,'    za poszczególne miesiące - zgodnie z art. 28 Ordynacji podatkowej',194,16,6);
params_set('ver',VAT_DEK.NR().NR);
_fml:="{? params_get.ver>=6
       || _nrw:=__TAB.NR;
          {? _nrw=7 | _nrw=8 | _nrw=15 | _nrw=17
          || 'in_prec=2'
          || 'in_prec=0'
          ?}
       |? params_get.ver>=3 & params_get.ver<6
       || _nrw:=__TAB.NR;
          {? _nrw=6 | _nrw=7 | _nrw=14 | _nrw=16
          || 'in_prec=2'
          || 'in_prec=0'
          ?}
       || 'in_prec=0'
       ?}";
{! _ind:=1..6
|! __TAB.fld_fml('K'+$_ind,'EDIT_FORMAT',_fml)
!};
_edi:="{? params_get.ver>=6
       || _nrw:=__TAB.NR;
          {? _nrw=7 | _nrw=8 | _nrw=15 | _nrw=17
          || 'out_prec=2'
          || 'out_prec=0'
          ?}
       |? params_get.ver>=3 & params_get.ver<6
       || _nrw:=__TAB.NR;
          {? _nrw=6 | _nrw=7 | _nrw=14 | _nrw=16
          || 'out_prec=2'
          || 'out_prec=0'
          ?}
       || 'out_prec=0'
       ?}";
{! _ind:=1..6
|! __TAB.fld_fml('K'+$_ind,'DISPLAY_FORMAT',_edi)
!};
__TAB.select();
{? __TAB.first
|| {!
   |? _podatek+=(__TAB.K1+__TAB.K2+__TAB.K3+__TAB.K4+__TAB.K5+__TAB.K6);
      __TAB.next
   !}
?};

{! _lp:=2..17
|! {? _lp=2 | _lp=6 | _lp=14 | _lp=15 | _lp=17
   || _kom:=8+(_lp-1)*12;
      _dod_zap(_lp,'',_kom,_lp,0);
      _dod_zap(_lp,'',_kom+6,_lp,6)
   ?}
!};

_jest_RU_DEKL:=var_pres('RU_DEKL')=var_pres('SYSLOG');

RH.cntx_psh;
RH.index('DOK');
{!
|? RH.prefix(exec('ref_firma','ustawienia'),_Rok,_Msc);
   {? RH.first
   || {!
      |? {? exec('licz_rhs','lista_licz',31)
         || _src:=
               {? _jest_RU_DEKL &
                  RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=','PIT8AR','DEKL','NR','=',_vern)
               || RU_DEKL.WIERSZ
               |? RH.ZLE().RU().K='7'
               || 2
               |? RU.K='8'
               || 6
               || 14
               ?};
            {? _src
            || _kw:=(exec('licza_rhs','lista_licz',961))$0;
               _podatek+=_kw;
               {? __TAB.find_key(_src,{? _Msc<7 || 0 || 6 ?})
               || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+='+$_kw))();
                  __TAB.put()
               ?}
            ?}
         ?};
         RH.next
      !}
   ?};
   _Msc+=1;
   _Msc<=12
!};
RH.cntx_pop;
_suma:="__TAB.cntx_psh; __TAB.prefix;
       {? __TAB.find_key(_[7],_[8])
       || {! _ind:=1..6 |! ($('__TAB.K'+$_ind+'+=_a'))(_[_ind]) !}; __TAB.put
       ?}; __TAB.cntx_pop";
{! _lp:=1..14
|! __TAB.prefix(_lp);
   {? __TAB.first()
   || {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,15,__TAB.NRK); __TAB.next() !}
   ?}
!};
__TAB.prefix(15);
{? __TAB.first
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,17,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(16);
{? __TAB.first
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,17,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(17);
{? __TAB.first
|| {!
   |? {! _ind:=1..6
      |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?}
      !};
      __TAB.put; __TAB.next
   !}
?};
__TAB.prefix;
_wyn:={? ~(_podatek>0)
      || FUN.emsg('Brak informacji do wykazania na deklaracji '
                  '\n (zerowe kwoty dochodu i podatku).'@);
         0
      || 1
      ?};
undefine;
exec('stalesys','#stalesys');
_wyn


\init_ift1_12
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Formula inicjujaca IFT-1/IFT-1R wersja 12
::   WE: _a - string typ deklaracji IFT-1/IFT-1R
::       _b - string T lub N czy tworzyc dekl. dla zleceniobiorcy, gdy jest juz utworzona
::       _c - string T czy N przetwarzanie danych osobowych lub nie
::       _d - data przekazania danych osobowych
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('pit','pom_pit');
pit:=obj_new(80);
{! _nx:=1..34 |! pit[_nx]:='' !};
{! _nx:=35..obj_len(pit) |! pit[_nx]:=0 !};

pom_pit:=obj_new('PIT_TYP','TWORZ','GIODO','GIODODAT');
pom_pit.PIT_TYP:=_a;
pom_pit.TWORZ:=(_b='T');
pom_pit.GIODO:=(_c='T');
pom_pit.GIODODAT:={? var_pres('_d')=type_of(date) || _d || date(0,0,0) ?};
exec('czytaj','#stalesys',date(__Rok,12,0),KST);
{? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
1


\obl_ift_12
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla informacji IFT-1/IFT-1R
::   WE: _a - string typ deklaracji IFT1/IFT1R
::       _b - date Data od okresu za ktory beda pobierane dane
::       _c - date Data do okresu za ktory beda pobierane dane
::----------------------------------------------------------------------------------------------------------------------
_nazwa:=_a;
_od:=_b;
_do:=_c;
{! _iter:=20..34 |! pit[_iter]:='' !};
{! _iter:=35..74 |! pit[_iter]:=0 !};
::Ustalenie rodzaju Podatnika
pit[80]:=0;
{? var_pres('PODFIZ',KST)>0
|| pit[80]:=KST.PODFIZ
?};

_wyn:=0;

_jest_pit:=0;
{? ~pom_pit.TWORZ
|| VAT_DEK.cntx_psh;
   VAT_DEK.index('VAT_OSOB');
   VAT_DEK.prefix(P.OSOBA,rodzdekl,rok_dekp,$__Rok,pit_typ,);
   {? VAT_DEK.last || _jest_pit:=1 ?};
   VAT_DEK.cntx_pop
?};
{? _jest_pit
|| return(-1)
?};

_adus:=exec('adresdous','osoba',VAT_DEK.DO~1);
{? #(_adus+1)
|| pit[6]:=OS_US.US;
   _usnaz:=OS_US.US().NU+
              {? +US.UU || ', '+US.UU || '' ?}+
              {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?}
|| pit[6]:=null;
   _usnaz:=''
?};
pit[20]:=OSOBA.NAZWISKO;
pit[21]:=OSOBA.PIERWSZE;
pit[22]:=OSOBA.OJCIEC;
pit[23]:=OSOBA.MATKA;
pit[24]:=OSOBA.UR_DATA;
pit[25]:=OSOBA.UR_MIEJ;
::ustalenie na podstawie kartoteki OS_ZNIP
{? exec('szukaj_osznip','edeklar',OSOBA.ref,VAT_DEK.DO)
|| pit[26]:=OS_ZNIP.ZNIP;
   pit[27]:=OS_ZNIP.RZNIP;
   pit[28]:=OS_ZNIP.KRAJZNIP
|| pit[26]:='';
   pit[27]:=null();
   pit[28]:=null()
?};
{? #(1+_adus) | exec('szukaj','osoba','S',VAT_DEK.DO)
|| pit[29]:=OS_ADRES.KRAJ;
   pit[30]:=OS_ADRES.MIASTO;
   pit[31]:=OS_ADRES.KOD;
   pit[32]:=OS_ADRES.ULICA;
   pit[33]:=OS_ADRES.DOM;
   pit[34]:=OS_ADRES.LOKAL
?};

RH.cntx_psh;
RH.index('RACHDATA');
RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,__Rok);
{? RH.first()
|| {!
   |? {? RH.DWY>=_od & RH.DWY<=_do
      || _src:=
            {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
               RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=',_nazwa,'DEKL','NR','=',12)
            || RU_DEKL.WIERSZ
            |? RH.ZLE().RU().K='8'
            || 10
            ?};
         {? _src
         || _ke:=32+_src*4;
            pit[_ke]+=exec('licza_rhs','lista_licz',92);
            pit[_ke+2]+=exec('licza_rhs','lista_licz',961);
            {? pit[_ke]>0 | pit[_ke+2]>0 || pit[_ke+1]:=RH.PPD ?}
         ?}
      ?};
      RH.next
   !}
?};
RH.cntx_pop;
{! _lp:=36 //4 ..71
|! {? _lp<>44 & _lp<>72
   || pit[_lp]:=pit[_lp]$0;
      pit[_lp+2]:=pit[_lp+2]$0
   ?}
!};

_wyn:=0;
{! _lp:=35..74
|? _wyn=0
|! {? pit[_lp]>0 || _wyn:=1 ?}
!};
{? _wyn & pom_pit.GIODODAT<>date(0,0,0)
|| exec('przekaz','giodo',pom_pit.GIODODAT,
        'Przekazanie danych na formularzu %1\n'[SKID.DEKL_NAZ],
        'odbiorcą danych jest:\n',
        _usnaz)
?};
_wyn


\init_pit11p_7
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.41]
:: OPIS: Formula dla akcji Dolacz okna deklaracji PIT-11 dla pracownika lub zleceniobiorcy
::       dla 7 wersji e-deklaracji obowiazujacej od 20.1.2015 roku
::       (wymagana zmienna globalna __Rok-rok za ktory tworzona jest e-deklaracja)
::   WE: _a - string typ deklaracji PIT11P, PIT4R
::       _b - string T lub N czy tworzyc deklaracje jezeli podatnik ma juz
::       _c - string T lub N czy tworzyc deklaracje zbiorcza dla podatnika
::       _d - string T lub N czy sumowac umowy zlecenia sprzed zatrudnienia
::       _e - string T lub N czy dolaczono informacje PIT-R
::       _f - string T korekta lub N zlozenie deklaracji
::       _g - string T lub N przetwarzanie danych osobowych lub nie
::       _h - data przekazania danych osobowych
::       _i - string T lub N czy umozliwiac zmiane informacji o kosztach uzyskania
::       _j - numer wersji e-deklaracji pole VAT_DEK.NR().NR lub PIT_GRUP.NR().NR
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_j')<>type_of(0) || _j:=7 ?};
VAR_DEL.delete('__PIT','__WER','__wk','__transl');
{? var_pres('pit')>100 || obj_del(pit) ?};
pit:=obj_new(82);
{! _nx:=1..27 |! pit[_nx]:='' !};
{! _nx:=28..obj_len(pit) |! pit[_nx]:=0 !};
_pom:=pit[3]:=obj_new(11);
_pom[2]:={? _a='PIT11P' || 'P' || 'Z' ?};
_pom[1]:=__Rok;

::tabela do zapisu w wydrukowanych deklaracjach
{? var_pres('__par')>100 || obj_del(__par) ?};
__par:=tab_tmp(2,'RODZAJ','STRING[1]','Rodzaj','REF','INTEGER','Ref');

::czy wydruk dla podatnika?
_pom[4]:={? _pom[3]:=(_c='T')
         || tab_tmp(1,'OSOBA','INTEGER','Podatnik')
         || ~~
         ?};
::czy sumowac umowy zlecenie sprzed zatrudnienia'
{? _pom[3] & _pom[2]='P'
|| _pom[10]:=(_d='T')
|| _pom[10]:=0
?};
::czy przychody pochodza z wiecej niz jednego stosunku pracy
_pom[5]:=0;
::czy umozliwiac zmiane informacji o kosztach uzyskania?
_pom[6]:=_i;
::czy rejestrowac przekazanie danych osobowych?
{? _g='T'
|| _pom[9]:=_h
|| _pom[9]:=date(0,0,0)
?};

exec('czytaj','#stalesys',date(__Rok,12,0),KST);

::wysokosc kosztow uzyskania
_pom[7]:=KST.KU;
_pom[8]:=(_b='T');

pit[6]:=_f;

pit[76]:=_e;

KP.cntx_psh; KP.index('_KARTAPO');
RH.cntx_psh; RH.index('RACHDATA');
us_podat:=null;
DEKL_POD.cntx_psh;
DEKL_POD.use('pod_'+$_pom[1]);
DEKL_POD.index('DEKL_PED');

__wk:=obj_new(10);
{! _nx:=1..obj_len(__wk)
|! __wk[_nx]:=obj_new(7);
   {! _ny:=1..obj_len(__wk[_nx])
   |! __wk[_nx][_ny]:=0
   !}
!};
__transl:="{? RU_DEKL.DEKL().NR=__WER
           || __wk[1][2]:=29;  __wk[1][3]:=30; __wk[1][4]:=31;  __wk[1][5]:=32;  __wk[1][6]:=33;
              __wk[2][2]:=36;  __wk[2][3]:=0;  __wk[2][4]:=37;  __wk[2][5]:=0;   __wk[2][6]:=38;
              __wk[3][2]:=39;  __wk[3][3]:=0;  __wk[3][4]:=40;  __wk[3][5]:=41;  __wk[3][6]:=42;
              __wk[4][2]:=43;  __wk[4][3]:=0;  __wk[4][4]:=44;  __wk[4][5]:=0;   __wk[4][6]:=45;
              __wk[5][2]:=46;  __wk[5][3]:=0;  __wk[5][4]:=47;  __wk[5][5]:=0;   __wk[5][6]:=48;
              __wk[6][2]:=49;  __wk[6][3]:=50; __wk[6][4]:=51;  __wk[6][5]:=0;   __wk[6][6]:=52;
              __wk[7][2]:=53;  __wk[7][3]:=54; __wk[7][4]:=55;  __wk[7][5]:=0;   __wk[7][6]:=56;
              __wk[8][2]:=57;  __wk[8][3]:=61; __wk[8][4]:=58;  __wk[8][5]:=0;   __wk[8][6]:=59;   __wk[8][7]:=60;
              __wk[9][2]:=62;  __wk[9][3]:=63; __wk[9][4]:=64;  __wk[9][5]:=0;   __wk[9][6]:=65;
              __wk[10][2]:=66; __wk[10][3]:=0; __wk[10][4]:=67; __wk[10][5]:=68; __wk[10][6]:=69;
              RU_DEKL.WIERSZ
           || 0
           ?}
           ";
__PIT:='PIT11';
__WER:=_j;
::tabela pomocnicza dla wykrywania pokrywajacych sie okresow zatrudnienia
_pom[11]:=tab_tmp(2,'OD','DATE',,'DO','DATE',)


\obl_pit11p_7
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.41]
:: OPIS: Formula wylicza dane do deklaracji Pit-11 z systemu dla 7 wersji
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - 1 - jesli jest prawidlowy symbol i wymagane dane do utworzenia deklaracji
::       _b - numer wersji e-deklaracji pole VAT_DEK.NR().NR lub PIT_GRUP.NR().NR
::       _c - 1 - ustawienie pracownika zatrudnionego przy sumowaniu zbiorczym
::       _d - tablica nazwana z polami 'P' - tabela , 'Ndx' - index po polu _tab.REF
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 1 ?};
_b:={? var_pres('_b')>0 & type_of(_b)=type_of(0) || _b || 7 ?};
_c:={? var_pres('_c')>0 & type_of(_c)=type_of(0) || _c || 0 ?};
_prac_up:={? var_pres('_d')>100 || _d || null() ?};
_wynik:=0;
_pom:=pit[3];
us_podat:=null;
pit[81]:=0;
::Ustalenie rodzaju Podatnika
pit[82]:=0;
__par.erase;

::wyczysc rubryki formularza wlasciwe dla podatnika
{! _nx:=10..27 |! pit[_nx]:='' !};
{! _nx:=28..75 |! pit[_nx]:=0 !};
pit[17]:=date(0,0,0);
pit[18]:=null;

_jest_pit:=_jestwyd:=0;
VAT_DEK.cntx_psh;
VAT_DEK.index('VAT_PRAC');
VAT_DEK.prefix(P.ref,rodzdekl,rok_dekp,okres,pit_typ);
{? VAT_DEK.last || _jest_pit:=1 ?};
VAT_DEK.cntx_pop;
::sprawdzenie czy byla drukowana deklaracja poprzez wydruk bez e-deklaracji
{? ~_jest_pit
|| {? _pom[2]='P'
   || DEKL_POD.prefix('E',P.ref,'(E)PIT-11','(E)PIT-11')
   || DEKL_POD.prefix('Z',P.ref,'(E)PIT-11','(E)PIT-11')
   ?};
   {? DEKL_POD.first
   || _jest_pit:=1
   ?}
?};
{? ~_jest_pit
|| {? _pom[2]='P'
   || DEKL_POD.prefix('E',P.ref,'PIT-11','PIT-11')
   || DEKL_POD.prefix('Z',P.ref,'PIT-11','PIT-11')
   ?};
   {? DEKL_POD.first
   || _jest_pit:=_jestwyd:=1
   ?}
?};
{? ~_pom[8] & _jest_pit
|| {? _jestwyd || return(-2) || return(-1) ?}
?};

{? _pom[3]
|| {? _pom[2]='P'
   || {? ~_c
      || KP.cntx_psh();
         KP.prefix();
         {? ~KP.find_key(P.ref(),_pom[1])
         || {? ~(P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1]))
            || KP.cntx_pop();
               return(0)
            || _wyn:=exec('spr_oso','pit',_jest_pit,_pom[8]);
               {? _wyn<0
               || KP.cntx_pop();
                  return(_wyn)
               ?}
            ?}
         ?};
         KP.cntx_pop()
      || P.cntx_psh();
         P.index('PRACOSOB');
         P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
         {? P.first
         || _jest_P:=0;
            {!
            |? {? P.ZA='T' & P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1])
               || {? var_pres('P',_prac_up)>100 & var_pres('Ndx',_prac_up)=type_of('')
                  || _prac_up.P.cntx_psh();
                     _prac_up.P.index(_prac_up.Ndx);
                     _prac_up.P.prefix();
                     {? _prac_up.P.find_key(#P.ref)
                     || _jest_P:=1
                     ?};
                     _prac_up.P.cntx_pop()
                  || _jest_P:=1
                  ?}
               ?};
               P.next & ~_jest_P
            !};
            P.cntx_pop();
            {? _jest_P & P.ZA<>'T'
            || return(0)
            || KP.cntx_psh();
               KP.prefix();
               {? ~KP.find_key(P.ref(),_pom[1])
               || {? ~(P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1]))
                  || KP.cntx_pop();
                     return(0)
                  || _wyn:=exec('spr_oso','pit',_jest_pit,_pom[8]);
                     {? _wyn<0
                     || KP.cntx_pop();
                        return(_wyn)
                     ?}
                  ?}
               ?};
               KP.cntx_pop()
            ?}
         || P.cntx_pop()
         ?}
      ?}
   || RH.index('RACHPRZ');
      RH.prefix();
      {? ~RH.find_key(P.ref,_pom[1])
      || RH.index('RACHDATA');
         return(0)
      ||
::       sprawdzenie czy sa rachunki nie sa to tylko rachunki ryczałtowe w danym roku podatkowycm
::       KOD BŁĘDU: ER/WRT/XP/12.51/1802/0001 KOD ZGŁOSZENIA: NL/WRT/KALI/12.30/0741
::       Wiele deklaracji PIT-11 dla zleceniobiorcy w kilku jednostkach org. (w jednej jednostce tylko z rachunkiem
::       ryczaltowym w roku podatkowym)
         RH.prefix(P.ref(),_pom[1]);
         {? RH.first()
         || _rach:=RH.size();
            _rycz:=0;
            {!
            |? {? exec('licz_rhs','lista_licz',31) & (~exec('czy_prac','osoba',P.OSOBA,RH.DWY))
               || _rycz+=1
               ?};
               RH.next()
            !};
            RH.prefix();
::          jesli wszystkie rachunki sa ryczaltowe to nie bedzie robiony PIT-11
            {? _rach=_rycz
            || RH.index('RACHDATA');
               return(0)
            ?}
         ?}
      ?};
      RH.index('RACHDATA')
   ?}
?};

::jezeli informacja drukowana jest dla podatnika (osoby), to nie drukuj
::zwielokrotnionych informacji - kolejne wystapienia w kartotekach
{? _pom[3]
|| {? ~_pom[4].find_key(#P.OSOBA)
   || _pom[4].OSOBA:=#P.OSOBA;
      _pom[4].add
   || return(_wynik)
   ?}
?};
::data do ustalenia danych identyfikacyjnych osoby zagranicznej oraz znacznika "nierezydent"
_Zagrdat:=date(0,0,0);
_pom[5]:=0;
_liczmies:=0;
:: spradzenie czy sa przychody-karty podatkowe z etatu-wykonane tylko dla warunku _pom[2]='P'
_spr_et:=0;
::uwzgledniaj przychody ze stosunku pracy
{? _pom[2]='P'
|| P.cntx_psh;
::informacja dla podatnika
   {? _pom[3]
   || P.index('PRACOSOB');
      P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
      P.first
   ?};
   {!
   |? KP.prefix(P.ref,_pom[1]);
      {? KP.first
      || {? ~__par.find_key('E',#P.ref)
         || __par.RODZAJ:='E'; __par.REF:=#P.ref; __par.add(1)
         ?};
         _od:=date(_pom[1],KP.M,1);
         {!
         |? pit[29]+=(KP.S1+KP.S10-KP.S12-KP.S13-KP.S15)$2;
            pit[30]+=KP.S2$2;
            pit[33]+=KP.S4$2;
            pit[34]+=KP.S13$2;
            pit[35]+=KP.S14$2;
            pit[70]+=(KP.S10-KP.S12-KP.S15)$2;
            pit[72]+=KP.S9$2;
            _liczmies+=((KP.S2$2)<>0);
            _spr_et+=1;
            _dakp:=date(KP.R,KP.M,0);
            {? _Zagrdat<_dakp || _Zagrdat:=_dakp ?};
            KP.next
         !};
         {? _pom[3] & ~pit[28]
         || _do:=date(_pom[1],KP.M,0);
            {? (_od~1=P.DZA~1) & (_od~2=P.DZA~2) || _od:=P.DZA ?};
            {? (_do~1=P.DZ~1) & (_do~2=P.DZ~2) || _do:=P.DZ ?};
            {? P.DZA~1<=_pom[1] & (P.DZ~1>=_pom[1] | P.DZ=date(0,0,0))
            || {? P.DZA~1=_pom[1]
               || {? P.DZA<_od | _od=date(0,0,0) || _od:=P.DZA ?}
               || _od:=date(_pom[1],1,1)
               ?};
               {? P.DZ~1=_pom[1]
               || {? P.DZ>_do || _do:=P.DZ ?}
               || _do:=date(_pom[1],12,0)
               ?}
            ?};
            {? ~_pom[11].find_tab(0,'OD',,'<=',_do,'DO',,'>=',_od)
            || _pom[11].OD:=_od;
               _pom[11].DO:=_do;
               _pom[11].add
            || _pom[5]:=1
            ?}
         ?}
      ?};
      _pom[3] & P.next
   !};
   P.cntx_pop;
   {? pit[70]<0 || pit[29]-=pit[70]; pit[70]:=0 ?};
   {? pit[72]<0 || pit[72]:=0 ?};
   _zku:=KST.KUZ$2;
   pit[28]:={? _pom[5]
            || {? _zku*_liczmies=pit[30]
               || 4
               |? _pom[7]*_liczmies$2=pit[30]
               || 2
               ?}
            |? _liczmies>0
            || {? _pom[7]*_liczmies$2 = pit[30] || 1
               |? _zku*_liczmies      = pit[30] || 3
               ?}
            ?};
   &_zku;
   {? ~pit[28]
   || P_IPOD.index('OD');
      P_IPOD.prefix(P.ref);
      {? P_IPOD.last()
      || _p_ipod:=1;
         {!
         |? {? P_IPOD.OD>=date(_pom[1],1,1) & P_IPOD.OD<=date(_pom[1],12,0)
            || {? P_IPOD.KU='Z'
               || {? _pom[5] || pit[28]:=4 || pit[28]:=3 ?}; _p_ipod:=0
               ?}
            |? P_IPOD.OD<date(_pom[1],1,1)
            || {? P_IPOD.KU='Z'
               || {? _pom[5] || pit[28]:=4 || pit[28]:=3 ?}
               ?};
               _p_ipod:=0
            ?};
            _p_ipod & P_IPOD.prev()
         !}
      ?}
   ?};
   {? pit[28]=0
   ||  {? _pom[5] || pit[28]:=2 || pit[28]:=1 ?}
   ?};
   {? _spr_et & _pom[6]='T'
   || _kto:=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      popup(,'Koszty uzyskania: '+&_kto,
             'określone na koniec roku '+$_pom[1]+': ('+$pit[28]+') '+
            {? pit[28]=1 | pit[28]=2 || 'podstawowe' || 'zwiększone' ?},,"pit[28]",
            '--',,,
            '1. z jednego stosunku pracy (stosunków pokrewnych)',,"pit[28]:=1",
            '3. z jednego stosunku pracy (stosunków pokrewnych), zwiększone',,"pit[28]:=3",
            '2. z więcej niż jednego stosunku pracy (stosunków pokrewnych)',,"pit[28]:=2",
            '4. z więcej niż jednego stosunku pracy (stosunków pokrewnych), zwiększone',,"pit[28]:=4")
   ?}
?};

RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,_pom[1]);
{? RH.first
|| {? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
   {!
   |? _um:=RH.ZLE().RU().K;
      {? {? _pom[1]>=2009 || ~exec('licz_rhs','lista_licz',31) || 1 ?} & (~(',7,8,'*(','+_um+','))) &
      {? _pom[2]='Z'
      || {? ~exec('czy_prac','osoba',ZC.OSOBA,RH.DWY)
         || {? ~_pom[3] || ZC.P=P.ref() || 1 ?}
         ||
::         obsluga przypadkow ze dany pracownik nie ma wyplaty z etatu w roku-kart podatkowych
::         to nalezy PIT-11 ze zlecen wykonac dla rachunkow wystawionych podczas zatrudnienia pracownika
           _ok:=0;
           _dalej:=1;
           P.cntx_psh();
           P.index('PRACOSOB');
           P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
           {? P.first
           || KP.cntx_psh();
              KP.prefix();
              {!
              |? {? KP.find_key(P.ref(),_pom[1])
                 || _dalej:=0
                 |? P.DZA<=RH.DWY
                    & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                 || {? ~KP.find_key(P.ref(),_pom[1])
                    || _ok+=1
                    ?}
                 ?};
                 P.next() & _dalej
              !};
              KP.cntx_pop()
           ?};
           P.cntx_pop();
           &_dalej;
           &_ok
         ?}
      || {? ~_pom[3]
         || _pref:=P.ref;
            _ok:=0;
            P.cntx_psh;
            P.index('PRACOSOB');
            P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
            {? P.first
            || {!
               |? {? P.DZA<=RH.DWY
                     & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                  || _ok:=(_pref=P.ref & _spr_et); 0
                  || P.next
                  ?}
               !}
            ?};
            P.cntx_pop;
            &_ok
         || _pom[10] & _spr_et | exec('czy_prac','osoba',P.OSOBA,RH.DWY) & _spr_et
         ?}
      ?}
      || _src:=
            {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
               RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=',__PIT,'DEKL','NR','=',__WER)
            || RU_DEKL.WIERSZ<>0
            || 2
            ?};
         {? _src
         || {? ~__par.find_key('Z',#ZC.P)
            || __par.RODZAJ:='Z'; __par.REF:=#ZC.P; __par.add(1)
            ?};
            {? _Zagrdat<RH.DWY || _Zagrdat:=RH.DWY  ?};
            _skl:=exec('licza_rhs','lista_licz',5711,5721);
            _skl_kor:=0;
            KORN_Z.index('RH');
            KORN_Z.prefix(RH.ref(),_pom[1]);
            {? KORN_Z.first()
            || {? var_pres('_tabrub')>100 || obj_del(_tabrub) ?};
               _tabrub:=__RUB.sys_rub(5711,RH.DWY);
               {? var_pres('_tabch')>100 || obj_del(_tabch) ?};
               _tabch:=__RUB.sys_rub(5721,RH.DWY);
               {!
               |? KOR_Z.index('KORN_Z');
                  {? _tabrub.first()
                  || {!
                     |? KOR_Z.prefix(KORN_Z.ref(),__RUB.ref(_tabrub.RN));
                        {? KOR_Z.first || _skl_kor+=fabs(KOR_Z.KW) ?};
                        _tabrub.next()
                     !}
                  ?};
                  {? _tabch.first()
                  || {!
                     |? KOR_Z.prefix(KORN_Z.ref(),__RUB.ref(_tabch.RN));
                        {? KOR_Z.first || _skl_kor+=fabs(KOR_Z.KW) ?};
                        _tabch.next()
                     !}
                  ?};
                  KORN_Z.next()
               !};
               {? var_pres('_tabrub')>100 || obj_del(_tabrub); &_tabrub ?};
               {? var_pres('_tabch')>100 || obj_del(_tabch); &_tabch ?}
            ?};
            {? _src=1
            || __transl();
               _len:=obj_len(__wk[RU_DEKL.WIERSZ]);
               _ra_92:=exec('licza_rhs','lista_licz',92);
               _ra_93:=exec('licza_rhs','lista_licz',93);
               'Koszty 50% sa liczone tylko na 7-ej pozycji.';
               'Jezeli biezacy wiersz nie ma 7-ej pozycji - kosztow nie liczymy';
               _ku:=RH.ZLE().RU().PKU;
               _przy50:={? _len>6 & __wk[RU_DEKL.WIERSZ][7] & _ku=50 || _skl+_ra_92-_skl_kor ?};
               {! _nx:=2.._len
               |! _poz:=__wk[RU_DEKL.WIERSZ][_nx];
                  {? _poz
                  || pit[_poz]+=
                        {? _nx=2 || {? _len>6 & __wk[RU_DEKL.WIERSZ][7] & _ku=50 || 0 || _skl+_ra_92-_skl_kor ?}
                        |? _nx=3 || _ra_93
                        |? _nx=4 || _skl+_ra_92-_ra_93-_skl_kor
                        |? _nx=5 || 0
                        |? _nx=6 || exec('licza_rhs','lista_licz',961)
                        |? _nx=7 || _przy50
                        || 'przypadki nieuwzglednione'; 0
                        ?}
                  ?}
               !};
               &_len
            |? '1456'*_um
            ||
::             umowy-zlecenia i o dzielo
               pit[49]+=(_skl+exec('licza_rhs','lista_licz',92)-_skl_kor);
               pit[50]+=exec('licza_rhs','lista_licz',93);
               pit[52]+=exec('licza_rhs','lista_licz',961)
            |? '23m'*_um
            ||
::             prawa autorskie
               _ra_92:=exec('licza_rhs','lista_licz',92);
               _ra_93:=exec('licza_rhs','lista_licz',93);
               {? RH.ZLE().RU().PKU=50
               || pit[60]+=_skl+_ra_92-_skl_kor
               || pit[57]+=_skl+_ra_92-_skl_kor
               ?};
               pit[61]+=_ra_93;
               pit[59]+=exec('licza_rhs','lista_licz',961)
            ||
::             inne zrodla
               pit[66]+=(_skl+exec('licza_rhs','lista_licz',92)-_skl_kor);
               pit[69]+=exec('licza_rhs','lista_licz',961)
            ?};
             pit[70]+=(_skl-_skl_kor);
             pit[72]+=exec('licza_rhs','lista_licz',57412)
         ?}
      ?};
      RH.next
   !}
?};

pit[31]:=pit[29]+pit[34]-pit[30]-pit[35]; {? pit[31]<0 || pit[31]:=0 ?};
pit[51]:=pit[49]-pit[50]; {? pit[51]<0 || pit[51]:=0 ?};
pit[55]:=pit[53]-pit[54]; {? pit[55]<0 || pit[55]:=0 ?};
pit[58]:=pit[57]+pit[60]-pit[61]; {? pit[58]<0 || pit[58]:=0 ?};
pit[67]:=pit[66];

{? ~(pit[81]:=pit[29]+pit[34]+pit[36]+pit[39]+pit[43]+pit[46]+pit[49]+pit[53]+pit[57]+pit[60]+pit[62]+pit[66])
|| return(_wynik)
?};

_adus:=exec('adresdous','osoba',_pom[1]);
{? #(_adus+1)
|| pit[5]:=OS_US.US().NU+
           {? +US.UU || ', '+US.UU || '' ?}+
           {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?};
   us_podat:=OS_US.US
|| pit[5]:='';
   us_podat:=null
?};
::Ustalenie pola VAT_DEK.POD rodzaj Podatnika
{? var_pres('PODFIZ',KST)>0
|| pit[82]:=KST.PODFIZ
?};
::Ustalenie pola VAT_DEK.REZYDENT pole dodane w wersji 12.41 od wersji PIT-11(22)
:: jesli rezydent placi podatki w Polsce to 'T' dla nierezydenta 'N'
::ustalenie na podstawie kartoteki OS_ZNIP
::ustawienie daty sprawdzenia danych w OS_ZNIP na podstawie _Zagrdat uzyskanych przychodow z etatu i zlecen
::Brak obsługi zmiany danych identyfikacyjnych w roku podatkowym
_dataBad:={? _Zagrdat<>date(0,0,0) & _Zagrdat<date(__Rok,12,0) || _Zagrdat || date(__Rok,12,0) ?};
{? exec('szukaj_osznip','edeklar',P.OSOBA,_dataBad)
||
:: Zagraniczny numer identyfikacyjny podatnika
   pit[10]:='N';
   pit[12]:=OS_ZNIP.ZNIP;
:: Rodzaj numeru identyfikacyjnego
   pit[13]:=OS_ZNIP.RZNIP;
:: Kraj wydania numeru identyfikacyjnego
   pit[14]:=OS_ZNIP.KRAJZNIP
|| pit[10]:='T';
   pit[13]:=null();
   pit[14]:=null()
?};
{? #(1+_adus)
|| pit[18]:=OS_ADRES.KRAJ;
   pit[19]:=OS_ADRES.WOJEWODZ;
   pit[20]:=OS_ADRES.POWIAT;
   pit[21]:=OS_ADRES.GMINA;
   pit[22]:=OS_ADRES.ULICA;
   pit[23]:=OS_ADRES.DOM;
   pit[24]:=OS_ADRES.LOKAL;
   pit[25]:=OS_ADRES.MIASTO;
   pit[26]:=OS_ADRES.KOD;
   pit[27]:=OS_ADRES.POCZTA
|| {! _nx:=18..27 |! pit[_nx]:='' !};
   pit[18]:=null
?};

{? _a
|| P.cntx_psh;
   P.clear;
   DEKL_POD.cntx_psh;
   DEKL_POD.clear;
   {? __par.first
   || {!
      |? DEKL_POD.blank;
         DEKL_POD.PIT:='(E)PIT-11';
         {? __par.RODZAJ='E' & P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='E'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         |? P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='Z'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         ?};
         {? EDIT_VAR.PIT_RODZ=''
         || DEKL_POD.DATA:=VAT_DEK.DATA
         || DEKL_POD.DATA:={? PIT_EDIT.DATA<>date(0,0,0) || PIT_EDIT.DATA || VAT_DEK.DATA ?}
         ?};
         DEKL_POD.S1:=pit[29]+pit[36]+pit[39]+pit[43]+pit[46]+pit[49]+pit[53]+pit[57]+pit[60]+pit[62]+pit[66];
         DEKL_POD.S2:=pit[30]+pit[50]+pit[54]+pit[61]+pit[63];
         DEKL_POD.S3:=pit[33]+pit[38]+pit[42]+pit[45]+pit[48]+pit[52]+pit[56]+pit[59]+pit[65]+pit[69];
         DEKL_POD.USER:=OPERATOR.USER;
         DEKL_POD.add;
         __par.next
      !}
   ?};
   DEKL_POD.cntx_pop;
   P.cntx_pop
?};

{? pit[81]
|| {? _a & pit[3][9]<>date(0,0,0)
   || exec('przekaz','giodo',pit[3][9],
           'Przekazanie danych na formularzu PIT-11',
           'odbiorcą danych jest:',
           pit[5])
   ?};
   _wynik:=1
?};
_wynik


\init_pit40p_6
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.41]
:: OPIS: Formula dla akcji Dolacz okna deklaracji PIT-40 dla pracownika
::       dla 6 wersji e-deklaracji obowiazujacej od 12.12.2014 roku
::   WE: _a - Integer Nr wersji formularza papierowego dla versji e-deklaracji PIT40
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__wk','pit','__transl','__PIT','__WER','spr_ku','__kosz50');
__PIT:=SKID.DEKL_NAZ;
__WER:=_a;
__wk:=obj_new(7);
{! _nx:=1..obj_len(__wk)
|! __wk[_nx]:=obj_new(6);
  {! _ny:=1..obj_len(__wk[_nx])
  |! __wk[_nx][_ny]:=0
  !}
!};
__transl:="{? RU_DEKL.DEKL().NR=__WER
           || __wk[1][2]:=29;  __wk[1][3]:=30; __wk[1][4]:=31;  __wk[1][5]:=32;
              __wk[2][2]:=35;  __wk[2][3]:=0;  __wk[2][4]:=36;  __wk[2][5]:=37;
              __wk[3][2]:=38;  __wk[3][3]:=0;  __wk[3][4]:=39;  __wk[3][5]:=40;
              __wk[4][2]:=41;  __wk[4][3]:=0;  __wk[4][4]:=42;  __wk[4][5]:=43;
              __wk[5][2]:=44;  __wk[5][3]:=45; __wk[5][4]:=46;  __wk[5][5]:=47;
              __wk[6][2]:=48;  __wk[6][3]:=52; __wk[6][4]:=49;  __wk[6][5]:=50; __wk[6][6]:=51;
              __wk[7][2]:=53;  __wk[7][3]:=54; __wk[7][4]:=55;  __wk[7][5]:=56;
              RU_DEKL.WIERSZ
           || 0
           ?}";
spr_ku:=0;
pit:=obj_new(80);
{! _nx:=1..8 |! pit[_nx]:='' !};

pit[4]:=__Rok;
exec('czytaj','#stalesys',date(pit[4],12,0),KST);
pit[2]:=KST.UL_ROK;

{? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
us_podat:=null;
__kosz50:=exec('kwota_koszty50_zlec_rh','lista_licz',pit[4])


\obl_pit40p_6
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.41]
:: OPIS: Formula wylicza dane do deklaracji Pit-40 z systemu dla 6 wersji
::   WE: _a - string typ deklaracji PIT40
::       _b - string T lub N czy tworzyc deklaracje jezeli podatnik (osoba) ma juz
::       _c - string T lub N czy dolaczono informacje PIT-R
::       _d - string T korekta lub N zlozenie deklaracji
::       _e - string T lub N przetwarzanie danych osobowych lub nie
::       _f - data przekazania danych osobowych
::       _g - informacje dotyczace deklaracji PIT-12
::----------------------------------------------------------------------------------------------------------------------
_pit12:=_g;
_wynik:=0;
_jest_pit:=0;
VAT_DEK.cntx_psh;
VAT_DEK.index('VAT_OSOB');
VAT_DEK.prefix(P.OSOBA,rodzdekl,rok_dekp,$__Rok,pit_typ);
{? VAT_DEK.last || _jest_pit:=1 ?};
VAT_DEK.cntx_pop;
{? _b='N' & _jest_pit || return(-1) ?};

spr_ku:=0;
us_podat:=null;
{! _nx:=17..26 |! pit[_nx]:='' !};
pit[17]:=null;
pit[9]:='T';
pit[11]:='';
pit[12]:=null();
pit[13]:=null();
P.OSOBA();
_adus:=exec('adresdous','osoba',pit[4]);
{? #(_adus+1)
|| pit[5]:=OS_US.US().NU+
          {? +US.UU || ', '+US.UU || '' ?}+
          {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?};
   us_podat:=OS_US.US
|| pit[5]:='';
   us_podat:=null
?};
::data do ustalenia danych identyfikacyjnych osoby zagranicznej oraz znacznika "nierezydent"
_Zagrdat:=date(0,0,0);
{? #(1+_adus)
|| pit[17]:=OS_ADRES.KRAJ;
   pit[18]:=~-OS_ADRES.WOJEWODZ;
   pit[19]:=~-OS_ADRES.POWIAT;
   pit[20]:=~-OS_ADRES.GMINA;
   pit[21]:=~-OS_ADRES.ULICA;
   pit[22]:=~-OS_ADRES.DOM;
   pit[23]:=~-OS_ADRES.LOKAL;
   pit[24]:=~-OS_ADRES.MIASTO;
   pit[25]:=~-OS_ADRES.KOD;
   pit[26]:=~-OS_ADRES.POCZTA
|| {! _nx:=17..26 |! pit[_nx]:='' !};
   pit[17]:=null
?};

pit[5]:=~-pit[5];
pit[10]:=pit[14]:=pit[15]:='';
pit[16]:=date(0,0,0);

pit[27]:='';

{! _nx:=28..77 |! pit[_nx]:=0 !};
pit[64]:=pit[73]:='';
::Ustalenie rodzaju Podatnika
pit[80]:=0;

_kp:=sql(
   'select KP.S1, KP.S2, KP.S4, KP.S8, KP.S9, KP.S10, KP.S12, KP.S13, KP.S14, KP.S15, KP.P '
   'from KP join P '
   'where P.FIRMA=:_c and P.OSOBA=:_a and KP.R=:_b',
   OSOBA.ref,
   pit[4],
   exec('ref_firma','ustawienia')
);
{? _kp.first
||  _ku:=_kp.P;
  {!
  |? spr_ku+=_kp.P<>_ku;
     pit[29]+=(_kp.S1+_kp.S10-_kp.S12-_kp.S13-_kp.S15)$2;
     pit[30]+=_kp.S2$2;
     pit[32]+=_kp.S4$2;
     pit[33]+=_kp.S13$2;
     pit[34]+=_kp.S14$2;
     pit[61]+=(_kp.S10-_kp.S12-_kp.S15)$2;
     pit[70]+=_kp.S9$2;
     _ku:=_kp.P;
     _dakp:=date(KP.R,KP.M,0);
     {? _Zagrdat<_dakp || _Zagrdat:=_dakp ?};
     _kp.next
  !}
?};
pit[31]:=(pit[29]+pit[33]-pit[30]-pit[34])$2;
obj_del(_kp);

{? pit[29] | pit[33]
|| RH.index('RACHDATA');
   RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,pit[4]);
   {? RH.first
   || {!
      |? {? ~(',7,8,'*(','+RH.ZLE().RU().K+','))
         || _src:=
               {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
                  RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=',__PIT,'DEKL','NR','=',__WER)
               || RU_DEKL.WIERSZ<>0
               || 2
               ?};
            {? _src
            || _um:=RH.ZLE().RU().K;
               _skl:=exec('licza_rhs','lista_licz',5711,5721);
               {? _Zagrdat<RH.DWY || _Zagrdat:=RH.DWY  ?};
               {? _src=1
               || __transl();
                  _len:=obj_len(__wk[RU_DEKL.WIERSZ]);
                  _ra_92:=exec('licza_rhs','lista_licz',92);
                  _ra_93:=exec('licza_rhs','lista_licz',93);
                  'Koszty 50% sa liczone tylko na 6-ej pozycji.';
                  'Jezeli biezacy wiersz nie ma 6-ej pozycji - kosztow nie liczymy';
                  _przy50:={? _len>5 & __wk[RU_DEKL.WIERSZ][6] || _skl+_ra_92 ?};
                  {! _nx:=2.._len
                  |! _poz:=__wk[RU_DEKL.WIERSZ][_nx];
                     {? _poz
                     || pit[_poz]+=
                           {? _nx=2 || {? _len>5 & __wk[RU_DEKL.WIERSZ][6] || 0 || _skl+_ra_92 ?}
                           |? _nx=3 || _ra_93
                           |? _nx=4 || _skl+_ra_92-_ra_93
                           |? _nx=5 || exec('licza_rhs','lista_licz',961)
                           |? _nx=6 || _przy50
                           || 'przypadki nieuwzglednione'; 0
                           ?}
                     ?}
                  !};
                  &_len
               |? '1456'*_um
               || 'umowy o dzielo i zlecenia';
                  pit[44]+=(_skl+exec('licza_rhs','lista_licz',92))$2;
                  pit[45]+=exec('licza_rhs','lista_licz',93)$2;
                  pit[47]+=(exec('licza_rhs','lista_licz',961))$2;
                  pit[46]:=(pit[44]-pit[45])$2
               |? '23'*_um
               || 'prawa autorskie';
                  _ra_92:=exec('licza_rhs','lista_licz',92);
                  _ra_93:=exec('licza_rhs','lista_licz',93);
                  pit[52]+=_ra_93;
                  pit[50]+=exec('licza_rhs','lista_licz',961);
                  pit[51]+=_skl+_ra_92;
                  pit[49]:=pit[48]+pit[51]-pit[52]
               || 'inne zrodla';
                  pit[53]+=(_skl+exec('licza_rhs','lista_licz',92))$2;
                  pit[54]+=exec('licza_rhs','lista_licz',93)$2;
                  pit[56]+=(exec('licza_rhs','lista_licz',961))$2;
                  pit[55]:=(pit[53]-pit[54])$22
               ?};
               pit[61]+=_skl$2;
               pit[70]+=exec('licza_rhs','lista_licz',57412)$2
            ?}
         ?};
         RH.next
      !}
   ?};
   {? __kosz50<pit[52]
   || FUN.emsg(
         'Kwota '+$pit[52]+' kosztów uzyskania przychodu przekracza wartość maksymalną ('+$__kosz50+'zł).\n'+
         'Kwota kosztów uzyskania przychodów w poz. 48 została ograniczona do wartości maksymalnej.'
      );
      pit[52]:=__kosz50;
      pit[49]:=pit[48]+pit[51]-pit[52]
   ?};
   pit[57]:=(pit[29]+pit[33]+pit[35]+pit[38]+pit[41]+pit[44]+pit[48]+pit[51]+pit[53])$2;
   pit[60]:=(pit[32]+pit[37]+pit[40]+pit[43]+pit[47]+pit[50]+pit[56])$2;

   _kto:=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;

   pit[28]:=
      {? _pit12.JEST>1 & _pit12.KOSZTY>0
      || 5
      ?};
   {? ~pit[28]
   || P_IPOD.index('OD');
      P_IPOD.prefix(P.ref);
      {? P_IPOD.last()
      || _p_ipod:=1;
         {!
         |? {? P_IPOD.OD>=date(pit[4],1,1) & P_IPOD.OD<=date(pit[4],12,0)
            || {? P_IPOD.KU='Z'
               || pit[28]:=3; _p_ipod:=0
               ?}
            |? P_IPOD.OD<date(pit[4],1,1)
            || {? P_IPOD.KU='Z'
               || pit[28]:=3
               ?};
               _p_ipod:=0
            ?};
            _p_ipod & P_IPOD.prev()
         !}
      ?}
   ?};
   {? pit[28]=0
   || pit[28]:=1
      ?};

   _width:=30;
   undefine;
   define('HD1',~~,' Odliczenia od dochodu:');
   define('HD4',~~,'  Zwrot nienależnie pobranych świadczeń poz. 63');
   {? _pit12.JEST>1
   || define('OD2',~~,form('  Na podstawie oświadczenia PIT-12:',43)+form(_pit12.ODLICZ,17,2,'9,'))
   || define('OD2',0,,,17,_width,2)
   ?};
   define('HD8',~~,'  Inne odliczenia od dochodu ');
   define('ID','','   Rodzaj poz. 64',,82,_width);
   define('IOD',0,'   Kwota poz. 65',,17,_width,2);
   define('HD11',~~);
   define('HD5',~~,' Faktyczne koszty uzyskania przychodów ');
   {? _pit12.JEST>1 & _pit12.KOSZTY>0
   || define('KUP',~~,form(' Na podstawie oświadczenia PIT-12:',43)+form(_pit12.KOSZTY,17,2,'9,'))
   || define('KUP',0,,,17,_width,2)
   ?};
   define('HD7',~~,' Pozycja na formularzu w informacji o kosztach uzyskania');
   {? _pit12.JEST>1 & _pit12.KOSZTY>0
   || define('POZ',~~,form(' Na podstawie oświadczenia PIT-12:',43)+form(5,17,0,'9,'))
   || {? ~spr_ku
      || define('HPOZ1',~~,(5*' ')+'1. z jednego stosunku pracy');
         define('HPOZ3',~~,(5*' ')+'3. z jednego stosunku pracy, podwyższone')
      || define('HPOZ1',~~,(5*' ')+'1. z jednego stosunku pracy');
         define('HPOZ3',~~,(5*' ')+'3. z jednego stosunku pracy, podwyższone');
         define('HPOZ2',~~,(5*' ')+'2. z więcej niż jednego stosunku pracy');
         define('HPOZ4',~~,(5*' ')+'4. z więcej niż jednego stosunku pracy, podwyższone')
      ?};
      define('HPOZ5',~~,(5*' ')+'5. na podstawie faktycznie poniesionych wydatków');
      define('POZ',pit[28],,,1,2,0)
   ?};
   define('HD6',~~,' Ulga podatkowa ');
   define('ULG',pit[2],,,17,_width,2);
   define('HD2',~~,' Doliczenie do podatku poz. 68');
   define('OD1',0,,,17,_width,2);
   define('HD9',~~,' Inne odliczenia od podatku');
   define('IP','','   Rodzaj poz. 73',,82,_width);
   define('IOP',0,'   Kwota poz. 74',,17,_width,2);
   define('HD12',~~);
   {!
   |? def_edit("
         {? var_pres('POZ',@.DEFINE)=type_of(0)
         || {? ~spr_ku & ~(DEFINE.POZ=1 | DEFINE.POZ=3 | DEFINE.POZ=5)
            || FUN.emsg('Pozycja na formularzu w informacji o kosztach uzyskania\n'
                        'musi przyjmować jedną z wartości: 1, 3 lub 5.'@);
               return('POZ')
            |? spr_ku & ~(DEFINE.POZ=1 | DEFINE.POZ=3 | DEFINE.POZ=2 | DEFINE.POZ=4 | DEFINE.POZ=5)
            || FUN.emsg('Pozycja na formularzu w informacji o kosztach uzyskania\n'
                        'musi przyjmować jedną z wartości: 1, 2, 3, 4 lub 5.'@);
               return('POZ')
            || 1
            ?}
         || 1
         ?}
         ",'PIT-40 '+_kto);

      pit[6]:=_d;
      pit[27]:=_c;
      pit[63]:={? _pit12.JEST>1 || _pit12.ODLICZ || DEFINE.OD2 ?}$2;
      pit[64]:=DEFINE.ID;
      pit[65]:=DEFINE.IOD$2;
      pit[68]:=DEFINE.OD1$2;
      pit[73]:=DEFINE.IP;
      pit[74]:=DEFINE.IOP$2;

      _kup:={? _pit12.JEST>1 & _pit12.KOSZTY>0 || _pit12.KOSZTY || pit[28]:=DEFINE.POZ; DEFINE.KUP ?};
      {? _kup>0
      || pit[30]:=_kup;
         pit[31]:=(pit[29]+pit[33]-pit[30]-pit[34])$2
      || pit[28]:=DEFINE.POZ
      ?};

      pit[58]:=(pit[30]+pit[34]+pit[45]+pit[52]+pit[54])$2;
      pit[59]:=(pit[31]+pit[36]+pit[39]+pit[42]+pit[46]+pit[49]+pit[55])$2;

      {? (pit[61]+pit[63]+pit[65])$2>pit[59]$2
      || _kwota:=pit[59]-pit[61];
         {? _kwota<0 || _kwota:=0 ?};
         {? _text:='%1 (nr teczki: %2)\n'
                   'Nieprawidłowy dochód po odliczeniach.\n'
                   'Wartość odliczenia nie może przekroczyć kwoty: %3.'@[_kto,form(P.T),$_kwota];
            FUN.choice(_text,0,'Wyzerowanie kwot'@,,,,'Powtórna edycja'@)
         || pit[64]:='';
            pit[63]:=pit[65]:=0
         || 1
         ?}
      || 0
      ?}
   !};

   pit[78]:='';
   pit[79]:='';

   pit[66]:=(pit[59]-pit[61]-pit[63]-pit[65])$0;
   {? pit[66]<0 || pit[66]:=0 ?};
   {? TP.last
   || {! |? pit[66]$2<TP.K1$2 & TP.prev !};
      pit[67]+=((pit[66]-TP.K1)*TP.PR*0.01)$2;
      _poprog:=TP.K1$2;
      {!
      |? {? TP.prev
         || pit[67]+=((_poprog-TP.K1)*TP.PR*0.01)$2;
            _poprog:=TP.K1$2;
            1
         ?}
      !}
   ?};
   pit[67]:=(pit[67]-DEFINE.ULG$2)$2;
   {? pit[67]<0 || pit[67]:=0 ?};
   pit[69]:=pit[67]+pit[68];
   pit[72]:={? pit[70]>pit[69] || pit[69] || pit[70] ?}$2;

   {? (pit[72]+pit[74])$2>pit[69]$2
   || {? _text:='%1 (nr teczki: %2)\n'
                'Nieprawidłowe odliczenia od podatku.\n'
                'Wartość odliczenia nie może przekroczyć kwoty: %3.'@[_kto,form(P.T),$(pit[69]-pit[72])];
         FUN.choice(_text,0,'Wyzerowanie kwot'@,,,,'Powtórna edycja'@)
      || pit[73]:='';
         pit[74]:=0
      || undefine;
         define('HD9',~~,' Inne odliczenia od podatku ');
         define('IP',pit[73],'  Rodzaj poz. 73',,160,_width);
         define('IOP',pit[74],'  Kwota poz. 74',,17,_width,2);
         {!
         |? def_edit(,'PIT-40 '+_kto);
            pit[73]:=DEFINE.IP;
            pit[74]:=DEFINE.IOP$2;
            {? (pit[72]+pit[74])$2>pit[69]$2
            || {? _text:='%1 (nr teczki: %2)\n'
                         'Nieprawidłowe odliczenia od podatku.\n'
                         'Wartość odliczenia nie może przekroczyć kwoty: %3.'@[_kto,form(P.T),$(pit[69]-pit[72])];
                  FUN.choice(_text,0,'Wyzerowanie kwot'@,,,,'Powtórna edycja'@)
               || pit[73]:='';
                  pit[74]:=0
               || 1
               ?}
            || 0
            ?}
         !}
      ?}
   ?};

   pit[75]:=(pit[69]-pit[72]-pit[74])$0;
   {? pit[75]<0 || pit[75]:=0 ?};
   {? _pit12.JEST>1
   || _ret:=exec('pit12_set','osoba',P.OSOBA,pit[4],'O',(pit[75]-pit[60])$0);
      {? _ret<>'' || FUN.emsg(_ret) ?}
   ?};
   pit[76]:={? pit[60]<pit[75] || pit[75]-pit[60] ?}$0;
   pit[77]:={? pit[60]>pit[75] || pit[60]-pit[75] ?}$0;
:: Ustalenie pola VAT_DEK.REZYDENT pole dodane w wersji 12.41 od wersji PIT-40(22)
:: jesli rezydent placi podatki w Polsce to 'T' dla nierezydenta 'N'
:: ustalenie na podstawie kartoteki OS_ZNIP
:: ustawienie daty sprawdzenia danych w OS_ZNIP na podstawie _Zagrdat uzyskanych przychodow z etatu i zlecen
:: Brak obsługi zmiany danych identyfikacyjnych w roku podatkowym
   _dataBad:={? _Zagrdat<>date(0,0,0) & _Zagrdat<date(__Rok,12,0) || _Zagrdat || date(__Rok,12,0) ?};
   {? exec('szukaj_osznip','edeklar',P.OSOBA,_dataBad)
   ||
:: Zagraniczny numer identyfikacyjny podatnika
      pit[9]:='N';
      pit[11]:=OS_ZNIP.ZNIP;
:: Rodzaj numeru identyfikacyjnego
      pit[12]:=OS_ZNIP.RZNIP;
:: Kraj wydania numeru identyfikacyjnego
      pit[13]:=OS_ZNIP.KRAJZNIP
   || pit[9]:='T';
      pit[11]:='';
      pit[12]:=null();
      pit[13]:=null()
   ?}
?};
{? pit[57]>0
|| _wynik:=1;
   {? _e='T' & _f<>date(0,0,0)
   || exec('przekaz','giodo',_f,'Przekazanie danych na formularzu PIT-40\n',
           'odbiorcą danych jest:\n',
           pit[5])
   ?};
   {? var_pres('PODFIZ',KST)>0
   || pit[80]:=KST.PODFIZ
   ?}
|| _wynik:=0
?};
_wynik


\spr_oso
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [12.41]
:: OPIS: Ustalenie czy dla danej osoby została utworzona deklaracja zbiorcza
::   WE: _a - zmienna określająca czy istnieje deklaracja podatkowa
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 0 ?};
_b:={? var_pres('_b')>0 & type_of(_b)=type_of(0) || _b || 0 ?};
_jest_pit:=_a;
_pom8:=_b;
P.cntx_psh();
P.index('PRACOSOB');
P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
{? P.first()
|| {!
   |? {? ~_jest_pit
      || VAT_DEK.cntx_psh();
         VAT_DEK.index('VAT_PRAC');
         VAT_DEK.prefix(P.ref,rodzdekl,rok_dekp,okres,pit_typ);
         {? VAT_DEK.last()
         || {!
            |? {? VAT_DEK.PODATNIK='T'
               || _jest_pit:=1
               ?};
               VAT_DEK.next() & ~_jest_pit
            !}
         ?};
         VAT_DEK.cntx_pop()
      ?};
      {? ~_pom8 & _jest_pit
      || P.cntx_pop();
         return(-1)
      ?};
      P.next()
   !}
?};
P.cntx_pop()


\obl_pit4r_7
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.51]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla deklaracji PIT 4R
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - opcjonalny numer wersji e-deklaracji. W przypadku 7 wersji jest podany jako argument funkcji
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 7 ?};
_vern:=_a;
_Msc:=1; _Rok:=__Rok;
exec('init_tab_1','pit');

_dod_zap:="__TAB.blank();
      {? var_pres('_f')<>type_of(0) || _f:=0 ?};
      __TAB.LP:=_a;
      __TAB.O:=_b;
      __TAB.NR:=_d;
      __TAB.NRK:=_e;
      {! _ind:=1..6
      |! {? _f>=_ind
         || ($('__TAB.P'+$_ind+':=0'))()
         || ($('__TAB.P'+$_ind+':=(_a+_b)'))(_c,_ind-_f)
         ?}
      !};
      __TAB.add()";

_dod_zap(4,'4. Zaliczki na podatek, których pobór został',56,4,0);
_dod_zap(4,'ograniczony na podstawie art.32 ust.2 ustawy',62,4,6);
_dod_zap(5,'5. Zaliczki, które przypadały do pobrania w związku z ograniczeniem poboru',68,5,0);
_dod_zap(5,'zaliczek w poprzednich miesiącach na podstawie art.32 ust.2 ustawy',74,5,6);
_dod_zap(6,'6. Pobrany podatek, przekazany na PFRON',80,6,0);
_dod_zap(6,'oraz zakładowy fundusz rehabilitacji osób niepełnosprawnych',86,6,6);
_dod_zap(8,'8. Zaliczki na podatek pobrane od innych należności,',104,8,0);
_dod_zap(8,'w tym wynikających z umowy aktywizacyjnej',110,8,6);
_dod_zap(10,'10. Wynagrodzenie z tytułu terminowego wpłacania podatku dochodowego',128,10,0);
_dod_zap(10,'za poszczególne miesiące, zgodnie z art.28 Ordynacji podatkowej',134,10,6);
__TAB.select;

_dod_zap(0,'',8,0,0);
_dod_zap(0,'',20,0,6);
_dod_zap(1,'',14,1,0);
_dod_zap(1,'',26,1,6);
_dod_zap(2,'',32,2,0);
_dod_zap(2,'',38,2,6);
_dod_zap(3,'',44,3,0);
_dod_zap(3,'',50,3,6);
_dod_zap(7,'',92,7,0);
_dod_zap(7,'',98,7,6);
_dod_zap(9,'',116,9,0);
_dod_zap(9,'',123,9,6);
_dod_zap(11,'',140,11,0);
_dod_zap(11,'',146,11,6);
__TAB.index(__TAB.ndx_tmp(,1,'NR',,,'NRK',,));
__TAB.prefix();
_czy_rap:=0;
P.cntx_psh();
P.index('PRACOSOB');
P.prefix(exec('ref_firma','ustawienia'),'P');
KP.cntx_psh();
KP.index('_KARTAPO');
RH.cntx_psh();
LS.cntx_psh();
O.cntx_psh();
RH.index('DOK');
{!
|? _osoba:=null; _licz_os:=0;
   {? P.first()
   || {!
      |? {? _osoba<>P.OSOBA || _osoba:=P.OSOBA; _licz_os:=0 ?};
         KP.prefix(P.ref,_Rok,_Msc);
         {? KP.first()
         || {? __TAB.find_key(0,{? _Msc<7 || 0 || 6 ?})
            || {? KP.S4<>0 & ~_licz_os || _licz_os:=1; ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=1'))(); __TAB.put() ?}
            ?};
            {? __TAB.find_key(1,{? _Msc<7 || 0 || 6 ?})
            || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S4'))(); __TAB.put()
            ?};
            _czy_rap+=KP.S4
         ?};
         P.next()
      !}
   ?};
   RH.prefix(exec('ref_firma','ustawienia'),_Rok,_Msc);
   {? RH.first()
   || _suma:="
         _wyn:=0;
         _tab:=__RUB.sys_rub(_a);
         {? _tab.first()
         || {!
            |? LS.prefix(RH.ref(),_tab.RN);
               {? LS.first() || {! |? _wyn+=LS.KW; LS.next() !} ?};
               _tab.next()
            !}
         ?};
         _wyn
      ";
      {!
      |? {? ~exec('licz_rhs','lista_licz',31)
         || LS.use(RH.O().LT);
            LS.index('ZLEC');
            _src:=
               {? RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=','PIT4R','DEKL','NR','=',_vern)
               || RU_DEKL.WIERSZ
               || 7
               ?};
            {? _src
            || {? __TAB.find_key(_src,{? _Msc<7 || 0 || 6 ?})
               || _wyn:=_suma(961);
                  _czy_rap+=_wyn;
                  ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=_a'))(_wyn);
                  __TAB.put()
               ?}
            ?}
         ?};
         RH.next
      !}
   ?};
   _Msc+=1;
   _Msc<=12
!};
RH.cntx_pop();
LS.cntx_pop();
O.cntx_pop();
KP.cntx_pop();
P.cntx_pop();
_suma:="__TAB.cntx_psh(); __TAB.prefix();
       {? __TAB.find_key(_[7],_[8])
       || {! _ind:=1..6 |! ($('__TAB.K'+$_ind+'+=_a'))(_[_ind]) !}; __TAB.put()
       ?}; __TAB.cntx_pop()";

__TAB.prefix(1);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,3,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(2);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,3,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(3);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,9,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(5);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,9,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(7);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,9,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(8);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,9,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(4);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,9,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(6);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,9,__TAB.NRK); __TAB.next() !}
?};
 __TAB.prefix(9);
{? __TAB.first()
|| {!
   |? {! _ind:=1..6 |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?} !}; __TAB.put();
         _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next()
      !}
?};
__TAB.prefix(10);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(11);
{? __TAB.first()
|| {!
   |? {! _ind:=1..6
      |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?}
      !};
      __TAB.put();
      __TAB.next()
   !}
?};
_wyn:={? ~(_czy_rap>0)
      || FUN.emsg('Brak informacji do wykazania na deklaracji \n (zerowe kwoty podatku).'@); 0
      || 1
      ?};
__TAB.prefix();
_wyn


\init_pit11p_9
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.51]
:: OPIS: Formula dla akcji Dolacz okna deklaracji PIT-11 dla pracownika lub zleceniobiorcy
::       dla 8 wersji e-deklaracji obowiazujacej od 1.1.2019 roku ale dotyczy przychodow od 1.1.2018 roku
::       (wymagana zmienna globalna __Rok-rok za ktory tworzona jest e-deklaracja)
::   WE: _a - string typ deklaracji PIT11P
::       _b - string T lub N czy tworzyc deklaracje jezeli podatnik ma juz
::       _c - string T lub N czy tworzyc deklaracje zbiorcza dla podatnika
::       _d - string T lub N czy sumowac umowy zlecenia sprzed zatrudnienia
::       _e - string T lub N czy dolaczono informacje PIT-R
::       _f - string T korekta lub N zlozenie deklaracji
::       _g - string T lub N przetwarzanie danych osobowych lub nie
::       _h - data przekazania danych osobowych
::       _i - string T lub N czy umozliwiac zmiane informacji o kosztach uzyskania
::       _j - numer wersji e-deklaracji pole VAT_DEK.NR().NR lub PIT_GRUP.NR().NR
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_j')<>type_of(0) || _j:=9 ?};
VAR_DEL.delete('__PIT','__WER','__wk','__transl');
{? var_pres('pit')>100 || obj_del(pit) ?};
pit:=obj_new(93);
{! _nx:=1..27 |! pit[_nx]:='' !};
{! _nx:=28..obj_len(pit) |! pit[_nx]:=0 !};
_pom:=pit[3]:=obj_new(11);
_pom[2]:={? _a='PIT11P' || 'P' || 'Z' ?};
_pom[1]:=__Rok;

::tabela do zapisu w wydrukowanych deklaracjach
{? var_pres('__par')>100 || obj_del(__par) ?};
__par:=tab_tmp(2,'RODZAJ','STRING[1]','Rodzaj','REF','INTEGER','Ref');

::czy wydruk dla podatnika?
_pom[4]:={? _pom[3]:=(_c='T')
         || tab_tmp(1,'OSOBA','INTEGER','Podatnik')
         || ~~
         ?};
::czy sumowac umowy zlecenie sprzed zatrudnienia'
{? _pom[3] & _pom[2]='P'
|| _pom[10]:=(_d='T')
|| _pom[10]:=0
?};
::czy przychody pochodza z wiecej niz jednego stosunku pracy
_pom[5]:=0;
::czy umozliwiac zmiane informacji o kosztach uzyskania?
_pom[6]:=_i;
::czy rejestrowac przekazanie danych osobowych?
{? _g='T'
|| _pom[9]:=_h
|| _pom[9]:=date(0,0,0)
?};

exec('czytaj','#stalesys',date(__Rok,12,0),KST);

::wysokosc kosztow uzyskania
_pom[7]:=KST.KU;
_pom[8]:=(_b='T');

pit[6]:=_f;

pit[85]:=_e;

KP.cntx_psh; KP.index('_KARTAPO');
RH.cntx_psh; RH.index('RACHDATA');
us_podat:=null;
DEKL_POD.cntx_psh;
DEKL_POD.use('pod_'+$_pom[1]);
DEKL_POD.index('DEKL_PED');
ZC_N.cntx_psh();
ZC_N.index('ZC_H');
ZC.cntx_psh();

__wk:=obj_new(10);
{! _nx:=1..obj_len(__wk)
|! __wk[_nx]:=obj_new(7);
   {! _ny:=1..obj_len(__wk[_nx])
   |! __wk[_nx][_ny]:=0
   !}
!};
__transl:="{? RU_DEKL.DEKL().NR=__WER
           || __wk[1][2]:=29;  __wk[1][3]:=30; __wk[1][4]:=31;  __wk[1][5]:=32;  __wk[1][6]:=33;
              __wk[2][2]:=36;  __wk[2][3]:=0;  __wk[2][4]:=37;  __wk[2][5]:=0;   __wk[2][6]:=38;
              __wk[3][2]:=39;  __wk[3][3]:=0;  __wk[3][4]:=40;  __wk[3][5]:=41;  __wk[3][6]:=42;
              __wk[4][2]:=43;  __wk[4][3]:=0;  __wk[4][4]:=44;  __wk[4][5]:=0;   __wk[4][6]:=45;
              __wk[5][2]:=46;  __wk[5][3]:=0;  __wk[5][4]:=47;  __wk[5][5]:=0;   __wk[5][6]:=48;
              __wk[6][2]:=49;  __wk[6][3]:=50; __wk[6][4]:=51;  __wk[6][5]:=0;   __wk[6][6]:=52;
              __wk[7][2]:=53;  __wk[7][3]:=54; __wk[7][4]:=55;  __wk[7][5]:=0;   __wk[7][6]:=56;
              __wk[8][2]:=57;  __wk[8][3]:=61; __wk[8][4]:=58;  __wk[8][5]:=0;   __wk[8][6]:=59;   __wk[8][7]:=60;
              __wk[9][2]:=62;  __wk[9][3]:=63; __wk[9][4]:=64;  __wk[9][5]:=0;   __wk[9][6]:=65;
              __wk[10][2]:=66; __wk[10][3]:=0; __wk[10][4]:=67; __wk[10][5]:=68; __wk[10][6]:=69;
              RU_DEKL.WIERSZ
           || 0
           ?}
           ";
__PIT:='PIT11';
__WER:=_j;
::tabela pomocnicza dla wykrywania pokrywajacych sie okresow zatrudnienia
_pom[11]:=tab_tmp(2,'OD','DATE',,'DO','DATE',)


\end_pit11p_9
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.51]
:: OPIS: Formula zwiazana z formula \init_pit11p_9 usuwa utworzone zmienne i przywraca konteksty tabel
::----------------------------------------------------------------------------------------------------------------------
undefine();
ZC.cntx_pop();
ZC_N.cntx_pop();
DEKL_POD.cntx_pop();
RH.cntx_pop();
KP.cntx_pop();
VAR_DEL.delete('pit','__PIT','__WER','__wk','__transl','us_podat','__par');
exec('stalesys','#stalesys')


\obl_pit11p_9
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.51]
:: OPIS: Formula wylicza dane do deklaracji Pit-11 z systemu dla 9 wersji ale dotyczy przychodow od 1.1.2018 roku
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - 1 - jesli jest prawidlowy symbol i wymagane dane do utworzenia deklaracji
::       _b - numer wersji e-deklaracji pole VAT_DEK.NR().NR lub PIT_GRUP.NR().NR
::       _c - 1 - ustawienie pracownika zatrudnionego przy sumowaniu zbiorczym
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 1 ?};
_b:={? var_pres('_b')>0 & type_of(_b)=type_of(0) || _b || 9 ?};
_c:={? var_pres('_c')>0 & type_of(_c)=type_of(0) || _c || 0 ?};
_prac_up:={? var_pres('_d')>100 || _d || null() ?};
_wynik:=0;
_pom:=pit[3];
us_podat:=null;
pit[92]:=0;
::Ustalenie rodzaju Podatnika
pit[93]:=0;
__par.erase;

::wyczysc rubryki formularza wlasciwe dla podatnika
{! _nx:=10..27 |! pit[_nx]:='' !};
{! _nx:=28..84 |! pit[_nx]:=0 !};
pit[17]:=date(0,0,0);
pit[18]:=null;
pit[75]:=pit[77]:=pit[79]:='';
::Tablica do wyliczania zasilkow od umow-zlecen
_zasilek:=obj_new(5);
{! _nx:=1..obj_len(_zasilek) |! _zasilek[_nx]:=0 !};

_jest_pit:=_jestwyd:=0;
VAT_DEK.cntx_psh;
VAT_DEK.index('VAT_PRAC');
VAT_DEK.prefix(P.ref,rodzdekl,rok_dekp,okres,pit_typ);
{? VAT_DEK.last || _jest_pit:=1 ?};
VAT_DEK.cntx_pop;
::sprawdzenie czy byla drukowana deklaracja poprzez wydruk bez e-deklaracji
{? ~_jest_pit
|| {? _pom[2]='P'
   || DEKL_POD.prefix('E',P.ref,'(E)PIT-11','(E)PIT-11')
   || DEKL_POD.prefix('Z',P.ref,'(E)PIT-11','(E)PIT-11')
   ?};
   {? DEKL_POD.first
   || _jest_pit:=1
   ?}
?};
{? ~_jest_pit
|| {? _pom[2]='P'
   || DEKL_POD.prefix('E',P.ref,'PIT-11','PIT-11')
   || DEKL_POD.prefix('Z',P.ref,'PIT-11','PIT-11')
   ?};
   {? DEKL_POD.first
   || _jest_pit:=_jestwyd:=1
   ?}
?};
{? ~_pom[8] & _jest_pit
|| {? _jestwyd || return(-2) || return(-1) ?}
?};

{? _pom[3]
|| {? _pom[2]='P'
   || {? ~_c
      || KP.cntx_psh();
         KP.prefix();
         {? ~KP.find_key(P.ref(),_pom[1])
         || {? ~(P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1]))
            || KP.cntx_pop();
               return(0)
            || _wyn:=exec('spr_oso','pit',_jest_pit,_pom[8]);
               {? _wyn<0
               || KP.cntx_pop();
                  return(_wyn)
               ?}
            ?}
         ?};
         KP.cntx_pop()
      || P.cntx_psh();
         P.index('PRACOSOB');
         P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
         {? P.first
         || _jest_P:=0;
            {!
            |? {? P.ZA='T' & P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1])
               || {? var_pres('P',_prac_up)>100 & var_pres('Ndx',_prac_up)=type_of('')
                  || _prac_up.P.cntx_psh();
                     _prac_up.P.index(_prac_up.Ndx);
                     _prac_up.P.prefix();
                     {? _prac_up.P.find_key(#P.ref)
                     || _jest_P:=1
                     ?};
                     _prac_up.P.cntx_pop()
                  || _jest_P:=1
                  ?}
               ?};
               P.next & ~_jest_P
            !};
            P.cntx_pop();
            {? _jest_P & P.ZA<>'T'
            || return(0)
            || KP.cntx_psh();
               KP.prefix();
               {? ~KP.find_key(P.ref(),_pom[1])
               || {? ~(P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1]))
                  || KP.cntx_pop();
                     return(0)
                  || _wyn:=exec('spr_oso','pit',_jest_pit,_pom[8]);
                     {? _wyn<0
                     || KP.cntx_pop();
                        return(_wyn)
                     ?}
                  ?}
               ?};
               KP.cntx_pop()
            ?}
         || P.cntx_pop()
         ?}
      ?}
   || RH.index('RACHPRZ');
      RH.prefix();
      {? ~RH.find_key(P.ref,_pom[1])
      || RH.index('RACHDATA');
         return(0)
      ||
::       sprawdzenie czy sa rachunki nie sa to tylko rachunki ryczałtowe w danym roku podatkowycm
::       KOD BŁĘDU: ER/WRT/XP/12.51/1802/0001 KOD ZGŁOSZENIA: NL/WRT/KALI/12.30/0741
::       Wiele deklaracji PIT-11 dla zleceniobiorcy w kilku jednostkach org. (w jednej jednostce tylko z rachunkiem
::       ryczaltowym w roku podatkowym)
         RH.prefix(P.ref(),_pom[1]);
         {? RH.first()
         || _rach:=RH.size();
            _rycz:=0;
            {!
            |? {? exec('licz_rhs','lista_licz',31) & (~exec('czy_prac','osoba',P.OSOBA,RH.DWY))
               || _rycz+=1
               ?};
               RH.next()
            !};
            RH.prefix();
::          jesli wszystkie rachunki sa ryczaltowe to nie bedzie robiony PIT-11
            {? _rach=_rycz
            || RH.index('RACHDATA');
               return(0)
            ?}
         ?}
      ?};
      RH.index('RACHDATA')
   ?}
?};

::jezeli informacja drukowana jest dla podatnika (osoby), to nie drukuj
::zwielokrotnionych informacji - kolejne wystapienia w kartotekach
{? _pom[3]
|| {? ~_pom[4].find_key(#P.OSOBA)
   || _pom[4].OSOBA:=#P.OSOBA;
      _pom[4].add
   || return(_wynik)
   ?}
?};
::data do ustalenia danych identyfikacyjnych osoby zagranicznej oraz znacznika "nierezydent"
_Zagrdat:=date(0,0,0);
_pom[5]:=0;
_liczmies:=0;
:: spradzenie czy sa przychody-karty podatkowe z etatu-wykonane tylko dla warunku _pom[2]='P'
_spr_et:=0;
::uwzgledniaj przychody ze stosunku pracy
{? _pom[2]='P'
|| P.cntx_psh;
::informacja dla podatnika
   {? _pom[3]
   || P.index('PRACOSOB');
      P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
      P.first;
      _pom[11].erase()
   ?};
   {!
   |? KP.prefix(P.ref,_pom[1]);
      {? KP.first
      || {? ~__par.find_key('E',#P.ref)
         || __par.RODZAJ:='E'; __par.REF:=#P.ref; __par.add(1)
         ?};
         _od:=date(_pom[1],KP.M,1);
         {!
         |? pit[29]+=(KP.S1+KP.S10-KP.S12-KP.S13-KP.S15)$2;
            pit[30]+=KP.S2$2;
            pit[33]+=KP.S4$2;
            pit[34]+=KP.S13$2;
            pit[35]+=KP.S14$2;
            pit[70]+=(KP.S10-KP.S12-KP.S15)$2;
            pit[72]+=KP.S9$2;
            _liczmies+=((KP.S2$2)<>0);
            _spr_et+=1;
            _dakp:=date(KP.R,KP.M,0);
            {? _Zagrdat<_dakp || _Zagrdat:=_dakp ?};
            KP.next
         !};
         {? _pom[3] & ~pit[28]
         || _do:=date(_pom[1],KP.M,0);
            {? (_od~1=P.DZA~1) & (_od~2=P.DZA~2) || _od:=P.DZA ?};
            {? (_do~1=P.DZ~1) & (_do~2=P.DZ~2) || _do:=P.DZ ?};
            {? P.DZA~1<=_pom[1] & (P.DZ~1>=_pom[1] | P.DZ=date(0,0,0))
            || {? P.DZA~1=_pom[1]
               || {? P.DZA<_od | _od=date(0,0,0) || _od:=P.DZA ?}
               || _od:=date(_pom[1],1,1)
               ?};
               {? P.DZ~1=_pom[1]
               || {? P.DZ>_do || _do:=P.DZ ?}
               || _do:=date(_pom[1],12,0)
               ?}
            ?};
            {? ~_pom[11].find_tab(0,'OD',,'<=',_do,'DO',,'>=',_od)
            || _pom[11].OD:=_od;
               _pom[11].DO:=_do;
               _pom[11].add
            || _pom[5]:=1
            ?}
         ?}
      ?};
      _pom[3] & P.next
   !};
   P.cntx_pop;
   {? pit[70]<0 || pit[29]-=pit[70]; pit[70]:=0 ?};
   {? pit[72]<0 || pit[72]:=0 ?};
   _zku:=KST.KUZ$2;
   pit[28]:={? _pom[5]
            || {? _zku*_liczmies=pit[30]
               || 4
               |? _pom[7]*_liczmies$2=pit[30]
               || 2
               ?}
            |? _liczmies>0
            || {? _pom[7]*_liczmies$2 = pit[30] || 1
               |? _zku*_liczmies      = pit[30] || 3
               ?}
            ?};
   &_zku;
   {? ~pit[28]
   || P_IPOD.index('OD');
      P_IPOD.prefix(P.ref);
      {? P_IPOD.last()
      || _p_ipod:=1;
         {!
         |? {? P_IPOD.OD>=date(_pom[1],1,1) & P_IPOD.OD<=date(_pom[1],12,0)
            || {? P_IPOD.KU='Z'
               || {? _pom[5] || pit[28]:=4 || pit[28]:=3 ?}; _p_ipod:=0
               ?}
            |? P_IPOD.OD<date(_pom[1],1,1)
            || {? P_IPOD.KU='Z'
               || {? _pom[5] || pit[28]:=4 || pit[28]:=3 ?}
               ?};
               _p_ipod:=0
            ?};
            _p_ipod & P_IPOD.prev()
         !}
      ?}
   ?};
   {? pit[28]=0
   ||  {? _pom[5] || pit[28]:=2 || pit[28]:=1 ?}
   ?};
   {? _spr_et & _pom[6]='T'
   || _kto:=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      popup(,'Koszty uzyskania: '+&_kto,
             'określone na koniec roku '+$_pom[1]+': ('+$pit[28]+') '+
            {? pit[28]=1 | pit[28]=2 || 'podstawowe' || 'zwiększone' ?},,"pit[28]",
            '--',,,
            '1. z jednego stosunku pracy (stosunków pokrewnych)',,"pit[28]:=1",
            '3. z jednego stosunku pracy (stosunków pokrewnych), zwiększone',,"pit[28]:=3",
            '2. z więcej niż jednego stosunku pracy (stosunków pokrewnych)',,"pit[28]:=2",
            '4. z więcej niż jednego stosunku pracy (stosunków pokrewnych), zwiększone',,"pit[28]:=4")
   ?}
?};

RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,_pom[1]);
{? RH.first
|| {? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
   {!
   |? _um:=RH.ZLE().RU().K;
      {? {? _pom[1]>=2009 || ~exec('licz_rhs','lista_licz',31) || 1 ?} & (~(',7,8,'*(','+_um+','))) &
      {? _pom[2]='Z'
      || {? ~exec('czy_prac','osoba',ZC.OSOBA,RH.DWY)
         || {? ~_pom[3] || ZC.P=P.ref() || 1 ?}
         ||
::         obsluga przypadkow ze dany pracownik nie ma wyplaty z etatu w roku-kart podatkowych
::         to nalezy PIT-11 ze zlecen wykonac dla rachunkow wystawionych podczas zatrudnienia pracownika
           _ok:=0;
           _dalej:=1;
           P.cntx_psh();
           P.index('PRACOSOB');
           P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
           {? P.first
           || KP.cntx_psh();
              KP.prefix();
              {!
              |? {? KP.find_key(P.ref(),_pom[1])
                 || _dalej:=0
                 |? P.DZA<=RH.DWY
                    & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                 || {? ~KP.find_key(P.ref(),_pom[1])
                    || _ok+=1
                    ?}
                 ?};
                 P.next() & _dalej
              !};
              KP.cntx_pop()
           ?};
           P.cntx_pop();
           &_dalej;
           &_ok
         ?}
      || {? ~_pom[3]
         || _pref:=P.ref;
            _ok:=0;
            P.cntx_psh;
            P.index('PRACOSOB');
            P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
            {? P.first
            || {!
               |? {? P.DZA<=RH.DWY
                     & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                  || _ok:=(_pref=P.ref & _spr_et); 0
                  || P.next
                  ?}
               !}
            ?};
            P.cntx_pop;
            &_ok
         || _pom[10] & _spr_et | exec('czy_prac','osoba',P.OSOBA,RH.DWY) & _spr_et
         ?}
      ?}
      || _src:=
            {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
               RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=',__PIT,'DEKL','NR','=',__WER)
            || RU_DEKL.WIERSZ<>0
            || 2
            ?};
         {? _src
         || {? ~__par.find_key('Z',#ZC.P)
            || __par.RODZAJ:='Z'; __par.REF:=#ZC.P; __par.add(1)
            ?};
            {? _Zagrdat<RH.DWY || _Zagrdat:=RH.DWY  ?};
            _skl:=exec('licza_rhs','lista_licz',5711,5721);
            _skl_kor:=0;
            KORN_Z.index('RH');
            KORN_Z.prefix(RH.ref(),_pom[1]);
            {? KORN_Z.first()
            || {? var_pres('_tabrub')>100 || obj_del(_tabrub) ?};
               _tabrub:=__RUB.sys_rub(5711,RH.DWY);
               {? var_pres('_tabch')>100 || obj_del(_tabch) ?};
               _tabch:=__RUB.sys_rub(5721,RH.DWY);
               {!
               |? KOR_Z.index('KORN_Z');
                  {? _tabrub.first()
                  || {!
                     |? KOR_Z.prefix(KORN_Z.ref(),__RUB.ref(_tabrub.RN));
                        {? KOR_Z.first || _skl_kor+=fabs(KOR_Z.KW) ?};
                        _tabrub.next()
                     !}
                  ?};
                  {? _tabch.first()
                  || {!
                     |? KOR_Z.prefix(KORN_Z.ref(),__RUB.ref(_tabch.RN));
                        {? KOR_Z.first || _skl_kor+=fabs(KOR_Z.KW) ?};
                        _tabch.next()
                     !}
                  ?};
                  KORN_Z.next()
               !};
               {? var_pres('_tabrub')>100 || obj_del(_tabrub); &_tabrub ?};
               {? var_pres('_tabch')>100 || obj_del(_tabch); &_tabch ?}
            ?};
            {? _src=1
            || __transl();
               _len:=obj_len(__wk[RU_DEKL.WIERSZ]);
               _ra_92:=exec('licza_rhs','lista_licz',92);
               _ra_93:=exec('licza_rhs','lista_licz',93);
               'Koszty 50% sa liczone tylko na 7-ej pozycji.';
               'Jezeli biezacy wiersz nie ma 7-ej pozycji - kosztow nie liczymy';
               _ku:=RH.ZLE().RU().PKU;
               _przy50:={? _len>6 & __wk[RU_DEKL.WIERSZ][7] & _ku=50 || _skl+_ra_92-_skl_kor ?};
               {! _nx:=2.._len
               |! _poz:=__wk[RU_DEKL.WIERSZ][_nx];
                  {? _poz
                  || pit[_poz]+=
                        {? _nx=2 || {? _len>6 & __wk[RU_DEKL.WIERSZ][7] & _ku=50 || 0 || _skl+_ra_92-_skl_kor ?}
                        |? _nx=3 || _ra_93
                        |? _nx=4 || _skl+_ra_92-_ra_93-_skl_kor
                        |? _nx=5 || 0
                        |? _nx=6 || exec('licza_rhs','lista_licz',961)
                        |? _nx=7 || _przy50
                        || 'przypadki nieuwzglednione'; 0
                        ?}
                  ?}
               !};
               &_len
            |? '1456'*_um
            ||
::             umowy-zlecenia i o dzielo
               pit[49]+=(_skl+exec('licza_rhs','lista_licz',92)-_skl_kor);
               pit[50]+=exec('licza_rhs','lista_licz',93);
               pit[52]+=exec('licza_rhs','lista_licz',961)
            |? '23m'*_um
            ||
::             prawa autorskie
               _ra_92:=exec('licza_rhs','lista_licz',92);
               _ra_93:=exec('licza_rhs','lista_licz',93);
               {? RH.ZLE().RU().PKU=50
               || pit[60]+=_skl+_ra_92-_skl_kor
               || pit[57]+=_skl+_ra_92-_skl_kor
               ?};
               pit[61]+=_ra_93;
               pit[59]+=exec('licza_rhs','lista_licz',961)
            ||
::             inne zrodla
               pit[66]+=(_skl+exec('licza_rhs','lista_licz',92)-_skl_kor);
               pit[69]+=exec('licza_rhs','lista_licz',961)
            ?};
             pit[70]+=(_skl-_skl_kor);
             pit[72]+=exec('licza_rhs','lista_licz',57412)
         ?};
::       obsluga zasilkow dla zleceniobiorcy od 2018 blok F od wersji PIT-11(24)-poprzednio na PIT-8C do 2017 roku
         {? RH.ZAS='T'
         || ZC_N.prefix(RH.ref);
            {? ZC_N.first()
            || {!
               |? 'wyplacone zasilki:';
                  _zas_kod:=ZC_N.R().RN;
                  {? __RUB.sys_attr(_zas_kod,1221,ZC_N.OD) | _zas_kod>=510 & _zas_kod<=517
                  || 'chorobowe';
                     _zasilek[1]+=ZC_N.KW
                  |? __RUB.sys_attr(_zas_kod,1227,ZC_N.OD) | _zas_kod=524
                  || 'macierzynskie';
                     _zasilek[2]+=ZC_N.KW
                  |? __RUB.sys_attr(_zas_kod,1225,ZC_N.OD) | _zas_kod=530
                  || 'opiekuncze';
                     _zasilek[3]+=ZC_N.KW
                  |? __RUB.sys_attr(_zas_kod,1222,ZC_N.OD) | _zas_kod=537
                  || 'swiadczenia reh.';
                     _zasilek[5]+=ZC_N.KW
                  ?};
                  ZC_N.next()
               !}
            ?}
         ?}
      ?};
      RH.next
   !};
:: przepisanie wartosci do pozycji pit, jesli są zasilki to szukamy wolnej pozycji, a jak brak to do ostatniej
   _zas_kw:=0;
   {! _nx:=1..obj_len(_zasilek) |! _zas_kw+=_zasilek[_nx] !};
   {? _zas_kw
   || {! _nx:=1..obj_len(_zasilek)
      |! _zas_kw:=0;
         _zas_op:='';
         _zas_kw+=_zasilek[_nx];
         _zas_op+={? _zasilek[_nx]
                  || {? _nx=1 || 'zasiłki chorobowe, '
                     |? _nx=2 || 'zasiłki macierzyńskie, '
                     |? _nx=3 || 'zasiłki opiekuńcze, '
                     |? _nx=5 || 'świadczenia rehabilitacyjne, '
                     || ''
                     ?}
                  || ''
                  ?};
         {? +_zas_op || _zas_op:=_zas_op-2 ?};
         {? _zas_kw
         || {! _ix:=1..3
            |? _zas_kw
            |! {? pit[75+(_ix-1)*2]='' & pit[76+(_ix-1)*2]=0
               || pit[75+(_ix-1)*2]:=_zas_op;
                  pit[76+(_ix-1)*2]:=_zas_kw;
                  _zas_kw:=0
               ?}
            !};
            {? _zas_kw
            || pit[79]+=', '+_zas_op;
               pit[80]+=_zas_kw
            ?}
         ?}
      !}
   ?}
?};

pit[31]:=pit[29]+pit[34]-pit[30]-pit[35]; {? pit[31]<0 || pit[31]:=0 ?};
pit[51]:=pit[49]-pit[50]; {? pit[51]<0 || pit[51]:=0 ?};
pit[55]:=pit[53]-pit[54]; {? pit[55]<0 || pit[55]:=0 ?};
pit[58]:=pit[57]+pit[60]-pit[61]; {? pit[58]<0 || pit[58]:=0 ?};
pit[67]:=pit[66];
pit[81]:=pit[74]+pit[76]+pit[78]+pit[80]; {? pit[81]<0 || pit[81]:=0 ?};
_dochzw:=pit[32]+pit[41]+pit[68];
_blokG:=pit[82]+pit[83]+pit[84];

{? ~(pit[92]:=pit[29]+pit[34]+pit[36]+pit[39]+pit[43]+pit[46]+pit[49]+pit[53]+pit[57]+pit[60]+pit[62]+pit[66]+pit[81]+_dochzw+_blokG)
|| return(_wynik)
?};

_adus:=exec('adresdous','osoba',_pom[1]);
{? #(_adus+1)
|| pit[5]:=OS_US.US().NU+
           {? +US.UU || ', '+US.UU || '' ?}+
           {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?};
   us_podat:=OS_US.US
|| pit[5]:='';
   us_podat:=null
?};
::Ustalenie pola VAT_DEK.POD rodzaj Podatnika
{? var_pres('PODFIZ',KST)>0
|| pit[93]:=KST.PODFIZ
?};
::Ustalenie pola VAT_DEK.REZYDENT pole dodane w wersji 12.41 od wersji PIT-11(22)
:: jesli rezydent placi podatki w Polsce to 'T' dla nierezydenta 'N'
::ustalenie na podstawie kartoteki OS_ZNIP
::ustawienie daty sprawdzenia danych w OS_ZNIP na podstawie _Zagrdat uzyskanych przychodow z etatu i zlecen
::Brak obsługi zmiany danych identyfikacyjnych w roku podatkowym
_dataBad:={? _Zagrdat<>date(0,0,0) & _Zagrdat<date(__Rok,12,0) || _Zagrdat || date(__Rok,12,0) ?};
{? exec('szukaj_osznip','edeklar',P.OSOBA,_dataBad)
||
:: Zagraniczny numer identyfikacyjny podatnika
   pit[10]:='N';
   pit[12]:=OS_ZNIP.ZNIP;
:: Rodzaj numeru identyfikacyjnego
   pit[13]:=OS_ZNIP.RZNIP;
:: Kraj wydania numeru identyfikacyjnego
   pit[14]:=OS_ZNIP.KRAJZNIP
|| pit[10]:='T';
   pit[13]:=null();
   pit[14]:=null()
?};
{? #(1+_adus)
|| pit[18]:=OS_ADRES.KRAJ;
   pit[19]:=OS_ADRES.WOJEWODZ;
   pit[20]:=OS_ADRES.POWIAT;
   pit[21]:=OS_ADRES.GMINA;
   pit[22]:=OS_ADRES.ULICA;
   pit[23]:=OS_ADRES.DOM;
   pit[24]:=OS_ADRES.LOKAL;
   pit[25]:=OS_ADRES.MIASTO;
   pit[26]:=OS_ADRES.KOD;
   pit[27]:=OS_ADRES.POCZTA
|| {! _nx:=18..27 |! pit[_nx]:='' !};
   pit[18]:=null
?};

{? _a
|| P.cntx_psh;
   P.clear;
   DEKL_POD.cntx_psh;
   DEKL_POD.clear;
   {? __par.first
   || {!
      |? DEKL_POD.blank;
         DEKL_POD.PIT:='(E)PIT-11';
         {? __par.RODZAJ='E' & P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='E'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         |? P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='Z'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         ?};
         {? EDIT_VAR.PIT_RODZ=''
         || DEKL_POD.DATA:=VAT_DEK.DATA
         || DEKL_POD.DATA:={? PIT_EDIT.DATA<>date(0,0,0) || PIT_EDIT.DATA || VAT_DEK.DATA ?}
         ?};
         DEKL_POD.S1:=pit[29]+pit[36]+pit[39]+pit[43]+pit[46]+pit[49]+pit[53]+pit[57]+pit[60]+pit[62]+pit[66];
         DEKL_POD.S2:=pit[30]+pit[50]+pit[54]+pit[61]+pit[63];
         DEKL_POD.S3:=pit[33]+pit[38]+pit[42]+pit[45]+pit[48]+pit[52]+pit[56]+pit[59]+pit[65]+pit[69];
         DEKL_POD.USER:=OPERATOR.USER;
         DEKL_POD.add;
         __par.next
      !}
   ?};
   DEKL_POD.cntx_pop;
   P.cntx_pop
?};

{? pit[92]
|| {? _a & pit[3][9]<>date(0,0,0)
   || exec('przekaz','giodo',pit[3][9],
           'Przekazanie danych na formularzu PIT-11',
           'odbiorcą danych jest:',
           pit[5])
   ?};
   _wynik:=1
?};
_wynik


\init_pit8c_9
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.51]
:: OPIS: Formula inicjujaca PIT-8C wersja 9 ale dotyczy przychodow od 1.1.2018 roku
::   WE: _a - string typ deklaracji PIT8C
::       _b - string T lub N czy tworzyc dekl. dla zleceniobiorcy, gdy jest juz utworzona
::       _c - string T czy N przetwarzanie danych osobowych lub nie
::       _c - data przekazania danych osobowych
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('pit','pom_pit','__DEKOS');
pit:=obj_new(40);
{! _nx:=1..23 |! pit[_nx]:='' !};
{! _nx:=24..obj_len(pit) |! pit[_nx]:=0 !};

pom_pit:=obj_new('PIT_TYP','TWORZ','GIODO','GIODODAT');
pom_pit.PIT_TYP:=_a;
pom_pit.TWORZ:=(_b='T');
pom_pit.GIODO:=(_c='T');
pom_pit.GIODODAT:={? var_pres('_d')=type_of(date) || _d || date(0,0,0) ?};
DEKL_POD.cntx_psh;
DEKL_POD.use('pod_'+($__Rok+4));
DEKL_POD.index('DEKL_OSO');
__DEKOS:=DEKL_POD.ndx_tmp(,1,'PRAC_ET','OSOBA',,'PIT',,,'PIT',,);
exec('czytaj','#stalesys',date(__Rok,12,0),KST);
::tabela do zapisu w wydrukowanych deklaracjach
{? var_pres('__par')>100 || obj_del(__par) ?};
__par:=tab_tmp(2,'RODZAJ','STRING[1]','Rodzaj','REF','INTEGER','Ref');
1


\obl_pit8c_9
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.51]
:: OPIS: Formula wyliczajaca dane z systemu do tablicy pit przed zapisem do tabeli VAT_POZ dla pity PIT 8C
::   WE: _a - 1 - jesli jest prawidlowy symbol i wymagane dane do utworzenia deklaracji
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 1 ?};
_prac:=(pom_pit.PIT_TYP='PIT8CP');
_wyn:=0;
{! _nx:=1..23 |! pit[_nx]:='' !};
{! _nx:=24..obj_len(pit) |! pit[_nx]:=0 !};
__par.erase;
::Ustalenie rodzaju Podatnika
pit[40]:=0;

pit[4]:=$__Rok;

_jest_pit:=_jestwyd:=0;
{? ~pom_pit.TWORZ
|| VAT_DEK.cntx_psh;
   VAT_DEK.index('VAT_OSOB');
   VAT_DEK.prefix(P.OSOBA,rodzdekl,rok_dekp,$__Rok,pit_typ);
   {? VAT_DEK.last || _jest_pit:=1 ?};
   VAT_DEK.cntx_pop
?};
{? ~_jest_pit
|| DEKL_POD.index('DEKL_OSO');
   DEKL_POD.prefix(P.OSOBA,'(E)PIT-8C','(E)PIT-8C');
   {? DEKL_POD.first
   || _jest_pit:=1
   ?}
?};
{? ~_jest_pit
|| DEKL_POD.index(__DEKOS);
   DEKL_POD.prefix(P.OSOBA,'PIT-8C','PIT-8C');
   {? DEKL_POD.first
   || _jest_pit:=_jestwyd:=1
   ?}
?};
{? ~pom_pit.TWORZ & _jest_pit
|| {? _jestwyd || return(-2) || return(-1) ?}
?};

_adus:=exec('adresdous','osoba',#pit[4]);
{? #(_adus+1)
|| pit[5]:=OS_US.US;
   _usnaz:=OS_US.US().NU+
              {? +US.UU || ', '+US.UU || '' ?}+
              {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?}
|| pit[5]:=null;
   _usnaz:=''
?};
{? #(1+_adus)
|| pit[14]:=OS_ADRES.KRAJ;
   pit[15]:=OS_ADRES.WOJEWODZ;
   pit[16]:=OS_ADRES.POWIAT;
   pit[17]:=OS_ADRES.GMINA;
   pit[18]:=OS_ADRES.ULICA;
   pit[19]:=OS_ADRES.DOM;
   pit[20]:=OS_ADRES.LOKAL;
   pit[21]:=OS_ADRES.MIASTO;
   pit[22]:=OS_ADRES.KOD;
   pit[23]:=OS_ADRES.POCZTA
|| {! _nx:=15..23 |! pit[_nx]:='' !};
   pit[14]:=null
?};
pit[10]:={? OSOBA.PESEL='' | exec('spr_nip','pit',OSOBA.ref,date(#pit[4],12,0)) || 'N'+OSOBA.NIP || 'P'+OSOBA.PESEL ?};
pit[11]:=OSOBA.NAZWISKO;
pit[12]:=OSOBA.PIERWSZE;
pit[13]:=OSOBA.UR_DATA;

::dochody z sekcji D
pit[34]:=pit[24]+pit[26]+pit[28]+pit[30]+pit[32];
pit[35]:=pit[25]+pit[27]+pit[29]+pit[31]+pit[33];

pit[36]:=pit[34]-pit[35]; {? pit[36]<0 || pit[36]:=0 ?};
pit[37]:=pit[35]-pit[34]; {? pit[37]<0 || pit[37]:=0 ?};

_kw:=pit[34]+pit[35]+pit[38];
{? pit_typ='PIT8CP'
|| _rodzpla:='E'
|| _rodzpla:='Z'
?};
{? _kw
|| {? ~__par.find_key(_rodzpla,#P.ref)
   || __par.RODZAJ:=_rodzpla; __par.REF:=#P.ref; __par.add(1)
   ?}
?};

_wyn:={? ~(_kw>0) || 0 || 1 ?};
{? _a & _wyn
|| {? __par.first
   || P.cntx_psh();
      P.prefix();
      {!
      |? DEKL_POD.prefix();
         DEKL_POD.blank();
         DEKL_POD.PIT:='(E)PIT-8C';
         {? __par.RODZAJ='E' & P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='E'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         |? P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='Z'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         ?};
         {? EDIT_VAR.PIT_RODZ=''
         || DEKL_POD.DATA:=VAT_DEK.DATA
         || DEKL_POD.DATA:={? PIT_EDIT.DATA<>date(0,0,0) || PIT_EDIT.DATA || VAT_DEK.DATA ?}
         ?};
         DEKL_POD.USER:=OPERATOR.USER;
         DEKL_POD.S1:=pit[34]+pit[35]+pit[38];
         DEKL_POD.S2:=pit[35];
         DEKL_POD.S3:=0;
         DEKL_POD.add();
        __par.next()
      !};
      P.cntx_pop()
   ?};
   {? pom_pit.GIODODAT<>date(0,0,0)
   || exec('przekaz','giodo',pom_pit.GIODODAT,
           'Przekazanie danych na formularzu PIT-8C\n',
           'odbiorcą danych jest:\n',
           _usnaz)
   ?};
   {? var_pres('PODFIZ',KST)>0
   || pit[40]:=KST.PODFIZ
   ?}
?};
_wyn


\obl_pit4r_8
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.51]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla deklaracji PIT 4R
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - opcjonalny numer wersji e-deklaracji. W przypadku 8 wersji jest podany jako argument funkcji
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 8 ?};
_vern:=_a;
_Msc:=1; _Rok:=__Rok;
exec('init_tab_1','pit');

_dod_zap:="__TAB.blank();
      {? var_pres('_f')<>type_of(0) || _f:=0 ?};
      __TAB.LP:=_a;
      __TAB.O:=_b;
      __TAB.NR:=_d;
      __TAB.NRK:=_e;
      {! _ind:=1..6
      |! {? _f>=_ind
         || ($('__TAB.P'+$_ind+':=0'))()
         || ($('__TAB.P'+$_ind+':=(_a+_b)'))(_c,_ind-_f)
         ?}
      !};
      __TAB.add()";

_dod_zap(4,'4. Zaliczki na podatek pobrane od innych należności,',56,4,0);
_dod_zap(4,'w tym wynikających z umowy aktywizacyjnej',62,4,6);
_dod_zap(6,'6. Zaliczki na podatek, których pobór został',80,6,0);
_dod_zap(6,'ograniczony na podstawie art.32 ust.2 ustawy',86,6,6);
_dod_zap(7,'7. Zaliczki, które przypadały do pobrania w związku z ograniczeniem poboru',92,7,0);
_dod_zap(7,'zaliczek w poprzednich miesiącach na podstawie art.32 ust.2 ustawy',98,7,6);
_dod_zap(9,'9. Nadpłaty wynikające z rozliczenia za rok ubiegły oraz zwrot nadpłat',108,9,0);
_dod_zap(9,'w gotówce zaliczone na poczet należnej zaliczki',114,9,6);
_dod_zap(10,'10. Pobrany podatek, przekazany na PFRON',120,10,0);
_dod_zap(10,'oraz zakładowy fundusz rehabilitacji osób niepełnosprawnych',126,10,6);
_dod_zap(12,'12. Wynagrodzenie z tytułu terminowego wpłacania podatku dochodowego',144,12,0);
_dod_zap(12,'za poszczególne miesiące, zgodnie z art.28 Ordynacji podatkowej',150,12,6);
__TAB.select;

_dod_zap(0,'',8,0,0);
_dod_zap(0,'',20,0,6);
_dod_zap(1,'',14,1,0);
_dod_zap(1,'',26,1,6);
_dod_zap(2,'',32,2,0);
_dod_zap(2,'',38,2,6);
_dod_zap(3,'',44,3,0);
_dod_zap(3,'',50,3,6);
_dod_zap(5,'',68,5,0);
_dod_zap(5,'',74,5,6);
_dod_zap(8,'',104,8,0);
_dod_zap(11,'',132,11,0);
_dod_zap(11,'',138,11,6);
_dod_zap(13,'',156,13,0);
_dod_zap(13,'',162,13,6);
__TAB.index(__TAB.ndx_tmp(,1,'NR',,,'NRK',,));
__TAB.prefix();
_czy_rap:=0;
P.cntx_psh();
P.index('PRACOSOB');
P.prefix(exec('ref_firma','ustawienia'),'P');
KP.cntx_psh();
KP.index('_KARTAPO');
RH.cntx_psh();
LS.cntx_psh();
O.cntx_psh();
RH.index('DOK');
{!
|? _osoba:=null; _licz_os:=0;
   {? P.first()
   || {!
      |? {? _osoba<>P.OSOBA || _osoba:=P.OSOBA; _licz_os:=0 ?};
         KP.prefix(P.ref,_Rok,_Msc);
         {? KP.first()
         || {? __TAB.find_key(0,{? _Msc<7 || 0 || 6 ?})
            || {? KP.S4<>0 & ~_licz_os || _licz_os:=1; ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=1'))(); __TAB.put() ?}
            ?};
            {? __TAB.find_key(1,{? _Msc<7 || 0 || 6 ?})
            || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S4'))(); __TAB.put()
            ?};
            _czy_rap+=KP.S4
         ?};
         P.next()
      !}
   ?};
   RH.prefix(exec('ref_firma','ustawienia'),_Rok,_Msc);
   {? RH.first()
   || _suma:="
         _wyn:=0;
         _tab:=__RUB.sys_rub(_a);
         {? _tab.first()
         || {!
            |? LS.prefix(RH.ref(),_tab.RN);
               {? LS.first() || {! |? _wyn+=LS.KW; LS.next() !} ?};
               _tab.next()
            !}
         ?};
         _wyn
      ";
      {!
      |? {? ~exec('licz_rhs','lista_licz',31)
         || LS.use(RH.O().LT);
            LS.index('ZLEC');
            _src:=
               {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
                  RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=','PIT4R','DEKL','NR','=',_vern)
               || RU_DEKL.WIERSZ
               || 3
               ?};
            {? _src
            || {? __TAB.find_key(_src,{? _Msc<7 || 0 || 6 ?})
               || _wyn:=_suma(961);
                  _czy_rap+=_wyn;
                  ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=_a'))(_wyn);
                  __TAB.put()
               ?}
            ?}
         ?};
         RH.next
      !}
   ?};
   _Msc+=1;
   _Msc<=12
!};
RH.cntx_pop();
LS.cntx_pop();
O.cntx_pop();
KP.cntx_pop();
P.cntx_pop();
_suma:="__TAB.cntx_psh(); __TAB.prefix();
       {? __TAB.find_key(_[7],_[8])
       || {! _ind:=1..6 |! ($('__TAB.K'+$_ind+'+=_a'))(_[_ind]) !}; __TAB.put()
       ?}; __TAB.cntx_pop()";

__TAB.prefix(1);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,5,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(2);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,5,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(3);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,5,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(4);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,5,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(5);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(7);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(9);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(6);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(9);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(10);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next() !}
?};
 __TAB.prefix(11);
{? __TAB.first()
|| {!
   |? {! _ind:=1..6 |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?} !}; __TAB.put();
         _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,13,__TAB.NRK); __TAB.next()
      !}
?};
__TAB.prefix(12);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,13,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(13);
{? __TAB.first()
|| {!
   |? {! _ind:=1..6
      |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?}
      !};
      __TAB.put();
      __TAB.next()
   !}
?};
_wyn:={? ~(_czy_rap>0)
      || FUN.emsg('\nBrak informacji do wykazania na deklaracji \n (zerowe kwoty podatku).'@); 0
      || 1
      ?};
__TAB.prefix();
_wyn


\obl_pit8ar_8
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.51]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla pity PIT 8AR
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - opcjonalny numer wersji e-deklaracji.
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 6 ?};
_vern:=_a;
_Msc:=1; _Rok:=__Rok; _podatek:=0;
exec('czytaj','#stalesys',date(_Rok,12,0),KST);

exec('init_tab_1','pit');

_dod_zap:="__TAB.blank; __TAB.LP:=_a; __TAB.O:=_b; __TAB.NR:=_d; __TAB.NRK:=_e;
           {! _ind:=1..6 |! ($('__TAB.P'+$_ind+':=(_a+_b)'))(_c,_ind) !};
           __TAB.add";

_dod_zap(28,'28. Wynagrodzenie płatnika za poszczególne miesiące',332,28,0);
_dod_zap(28,'    - zgodnie z art. 28 Ordynacji podatkowej',338,28,6);
__TAB.select();

{! _lp:=1..29
|! {? _lp<>28
   || _kom:=8+(_lp-1)*12;
      _dod_zap(_lp,'',_kom,_lp,0);
      _dod_zap(_lp,'',_kom+6,_lp,6)
   ?}
!};

RH.cntx_psh();
RH.index('DOK');
{!
|? RH.prefix(exec('ref_firma','ustawienia'),_Rok,_Msc);
   {? RH.first()
   || {!
      |? {? exec('licz_rhs','lista_licz',31)
         || _src:=
               {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
                  RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=','PIT8AR','DEKL','NR','=',_vern)
               || RU_DEKL.WIERSZ
               |? RH.ZLE().RU().K='7'
               || 3
               |? RU.K='8'
               || 1
               || 26
               ?};
            {? _src
            || _kw:=(exec('licza_rhs','lista_licz',961))$0;
               _podatek+=_kw;
               {? __TAB.find_key(_src,{? _Msc<7 || 0 || 6 ?})
               || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+='+$_kw))();
                  __TAB.put()
               ?}
            ?}
         ?};
         RH.next
      !}
   ?};
   _Msc+=1;
   _Msc<=12
!};
RH.cntx_pop();
_suma:="__TAB.cntx_psh(); __TAB.prefix();
       {? __TAB.find_key(_[7],_[8])
       || {! _ind:=1..6 |! ($('__TAB.K'+$_ind+'+=_a'))(_[_ind]) !}; __TAB.put()
       ?}; __TAB.cntx_pop()";
{! _lp:=1..26
|! __TAB.prefix(_lp);
   {? __TAB.first()
   || {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,27,__TAB.NRK); __TAB.next() !}
   ?}
!};
__TAB.prefix(27);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,29,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(28);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,29,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(29);
{? __TAB.first()
|| {!
   |? {! _ind:=1..6
      |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?}
      !};
      __TAB.put();
      __TAB.next()
   !}
?};
__TAB.prefix();
_wyn:={? ~(_podatek>0)
      || FUN.emsg('\nBrak informacji do wykazania na deklaracji \n (zerowe kwoty dochodu i podatku).'@);
         0
      || 1
      ?};
undefine;
exec('stalesys','#stalesys');
_wyn


\obl_pit4r_9
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.51]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla deklaracji PIT 4R
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - opcjonalny numer wersji e-deklaracji. W przypadku 9 wersji jest podany jako argument funkcji
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 9 ?};
_vern:=_a;
_Msc:=1; _Rok:=__Rok;
exec('init_tab_1','pit');

_dod_zap:="__TAB.blank();
      {? var_pres('_f')<>type_of(0) || _f:=0 ?};
      __TAB.LP:=_a;
      __TAB.O:=_b;
      __TAB.NR:=_d;
      __TAB.NRK:=_e;
      {! _ind:=1..6
      |! {? _f>=_ind
         || ($('__TAB.P'+$_ind+':=0'))()
         || ($('__TAB.P'+$_ind+':=(_a+_b)'))(_c,_ind-_f)
         ?}
      !};
      __TAB.add()";

_dod_zap(4,'4. Zaliczki na podatek pobrane od innych należności,',57,4,0);
_dod_zap(4,'w tym wynikających z umowy aktywizacyjnej',63,4,6);
_dod_zap(6,'6. Zaliczki na podatek, których pobór został',81,6,0);
_dod_zap(6,'ograniczony na podstawie art.32 ust.2 ustawy',87,6,6);
_dod_zap(7,'7. Zaliczki, które przypadały do pobrania w związku z ograniczeniem poboru',93,7,0);
_dod_zap(7,'zaliczek w poprzednich miesiącach na podstawie art.32 ust.2 ustawy',99,7,6);
_dod_zap(9,'9. Nadpłaty wynikające z rozliczenia za rok ubiegły oraz zwrot nadpłat',109,9,0);
_dod_zap(9,'w gotówce zaliczone na poczet należnej zaliczki',115,9,6);
_dod_zap(10,'10. Pobrany podatek, przekazany na PFRON',121,10,0);
_dod_zap(10,'oraz zakładowy fundusz rehabilitacji osób niepełnosprawnych',127,10,6);
_dod_zap(12,'12. Wynagrodzenie z tytułu terminowego wpłacania podatku dochodowego',145,12,0);
_dod_zap(12,'za poszczególne miesiące, zgodnie z art.28 Ordynacji podatkowej',151,12,6);
__TAB.select;

_dod_zap(0,'',9,0,0);
_dod_zap(0,'',21,0,6);
_dod_zap(1,'',15,1,0);
_dod_zap(1,'',27,1,6);
_dod_zap(2,'',33,2,0);
_dod_zap(2,'',39,2,6);
_dod_zap(3,'',45,3,0);
_dod_zap(3,'',51,3,6);
_dod_zap(5,'',69,5,0);
_dod_zap(5,'',75,5,6);
_dod_zap(8,'',105,8,0);
_dod_zap(11,'',133,11,0);
_dod_zap(11,'',139,11,6);
_dod_zap(13,'',157,13,0);
_dod_zap(13,'',163,13,6);
__TAB.index(__TAB.ndx_tmp(,1,'NR',,,'NRK',,));
__TAB.prefix();
_czy_rap:=0;
P.cntx_psh();
P.index('PRACOSOB');
P.prefix(exec('ref_firma','ustawienia'),'P');
KP.cntx_psh();
KP.index('_KARTAPO');
RH.cntx_psh();
LS.cntx_psh();
O.cntx_psh();
RH.index('DOK');
{!
|? _osoba:=null; _licz_os:=0;
   {? P.first()
   || {!
      |? {? _osoba<>P.OSOBA || _osoba:=P.OSOBA; _licz_os:=0 ?};
         KP.prefix(P.ref,_Rok,_Msc);
         {? KP.first()
         || {? __TAB.find_key(0,{? _Msc<7 || 0 || 6 ?})
            || {? KP.S4<>0 & ~_licz_os || _licz_os:=1; ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=1'))(); __TAB.put() ?}
            ?};
            {? __TAB.find_key(1,{? _Msc<7 || 0 || 6 ?})
            || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S4'))(); __TAB.put()
            ?};
            _czy_rap+=KP.S4
         ?};
         P.next()
      !}
   ?};
   RH.prefix(exec('ref_firma','ustawienia'),_Rok,_Msc);
   {? RH.first()
   || _suma:="
         _wyn:=0;
         _tab:=__RUB.sys_rub(_a);
         {? _tab.first()
         || {!
            |? LS.prefix(RH.ref(),_tab.RN);
               {? LS.first() || {! |? _wyn+=LS.KW; LS.next() !} ?};
               _tab.next()
            !}
         ?};
         _wyn
      ";
      {!
      |? {? ~exec('licz_rhs','lista_licz',31)
         || LS.use(RH.O().LT);
            LS.index('ZLEC');
            _src:=
               {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
                  RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=','PIT4R','DEKL','NR','=',_vern)
               || RU_DEKL.WIERSZ
               || 3
               ?};
            {? _src
            || {? __TAB.find_key(_src,{? _Msc<7 || 0 || 6 ?})
               || _wyn:=_suma(961);
                  _czy_rap+=_wyn;
                  ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=_a'))(_wyn);
                  __TAB.put()
               ?}
            ?}
         ?};
         RH.next
      !}
   ?};
   _Msc+=1;
   _Msc<=12
!};
RH.cntx_pop();
LS.cntx_pop();
O.cntx_pop();
KP.cntx_pop();
P.cntx_pop();
_suma:="__TAB.cntx_psh(); __TAB.prefix();
       {? __TAB.find_key(_[7],_[8])
       || {! _ind:=1..6 |! ($('__TAB.K'+$_ind+'+=_a'))(_[_ind]) !}; __TAB.put()
       ?}; __TAB.cntx_pop()";

__TAB.prefix(1);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,5,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(2);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,5,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(3);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,5,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(4);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,5,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(5);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(7);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(9);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,11,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(6);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(9);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(10);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,11,__TAB.NRK); __TAB.next() !}
?};
 __TAB.prefix(11);
{? __TAB.first()
|| {!
   |? {! _ind:=1..6 |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?} !}; __TAB.put();
         _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,13,__TAB.NRK); __TAB.next()
      !}
?};
__TAB.prefix(12);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,13,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(13);
{? __TAB.first()
|| {!
   |? {! _ind:=1..6
      |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?}
      !};
      __TAB.put();
      __TAB.next()
   !}
?};
_wyn:={? ~(_czy_rap>0)
      || FUN.emsg('\nBrak informacji do wykazania na deklaracji \n (zerowe kwoty podatku).'@); 0
      || 1
      ?};
__TAB.prefix();
_wyn


\obl_pit8ar_9
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.51]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla pity PIT 8AR
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - opcjonalny numer wersji e-deklaracji.
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 6 ?};
_vern:=_a;
_Msc:=1; _Rok:=__Rok; _podatek:=0;
exec('czytaj','#stalesys',date(_Rok,12,0),KST);

exec('init_tab_1','pit');

_dod_zap:="__TAB.blank; __TAB.LP:=_a; __TAB.O:=_b; __TAB.NR:=_d; __TAB.NRK:=_e;
           {! _ind:=1..6 |! ($('__TAB.P'+$_ind+':=(_a+_b)'))(_c,_ind) !};
           __TAB.add";

_dod_zap(28,'28. Wynagrodzenie płatnika za poszczególne miesiące',333,28,0);
_dod_zap(28,'    - zgodnie z art. 28 Ordynacji podatkowej',339,28,6);
__TAB.select();

{! _lp:=1..29
|! {? _lp<>28
   || _kom:=8+(_lp-1)*12;
      _dod_zap(_lp,'',_kom,_lp,0);
      _dod_zap(_lp,'',_kom+6,_lp,6)
   ?}
!};

RH.cntx_psh();
RH.index('DOK');
{!
|? RH.prefix(exec('ref_firma','ustawienia'),_Rok,_Msc);
   {? RH.first()
   || {!
      |? {? exec('licz_rhs','lista_licz',31)
         || _src:=
               {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
                  RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=','PIT8AR','DEKL','NR','=',_vern)
               || RU_DEKL.WIERSZ
               |? RH.ZLE().RU().K='7'
               || 3
               |? RU.K='8'
               || 1
               || 26
               ?};
            {? _src
            || _kw:=(exec('licza_rhs','lista_licz',961))$0;
               _podatek+=_kw;
               {? __TAB.find_key(_src,{? _Msc<7 || 0 || 6 ?})
               || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+='+$_kw))();
                  __TAB.put()
               ?}
            ?}
         ?};
         RH.next
      !}
   ?};
   _Msc+=1;
   _Msc<=12
!};
RH.cntx_pop();
_suma:="__TAB.cntx_psh(); __TAB.prefix();
       {? __TAB.find_key(_[7],_[8])
       || {! _ind:=1..6 |! ($('__TAB.K'+$_ind+'+=_a'))(_[_ind]) !}; __TAB.put()
       ?}; __TAB.cntx_pop()";
{! _lp:=1..26
|! __TAB.prefix(_lp);
   {? __TAB.first()
   || {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,27,__TAB.NRK); __TAB.next() !}
   ?}
!};
__TAB.prefix(27);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,29,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(28);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,29,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(29);
{? __TAB.first()
|| {!
   |? {! _ind:=1..6
      |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?}
      !};
      __TAB.put();
      __TAB.next()
   !}
?};
__TAB.prefix();
_wyn:={? ~(_podatek>0)
      || FUN.emsg('\nBrak informacji do wykazania na deklaracji \n (zerowe kwoty dochodu i podatku).'@);
         0
      || 1
      ?};
undefine;
exec('stalesys','#stalesys');
_wyn


\init_pit8c_10
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.51]
:: OPIS: Formula inicjujaca PIT-8C wersja 10 ale dotyczy przychodow od 1.1.2019 roku
::   WE: _a - string typ deklaracji PIT8C
::       _b - string T lub N czy tworzyc dekl. dla zleceniobiorcy, gdy jest juz utworzona
::       _c - string T czy N przetwarzanie danych osobowych lub nie
::       _c - data przekazania danych osobowych
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('pit','pom_pit','__DEKOS');
pit:=obj_new(39);
{! _nx:=1..22 |! pit[_nx]:='' !};
{! _nx:=23..obj_len(pit) |! pit[_nx]:=0 !};

pom_pit:=obj_new('PIT_TYP','TWORZ','GIODO','GIODODAT');
pom_pit.PIT_TYP:=_a;
pom_pit.TWORZ:=(_b='T');
pom_pit.GIODO:=(_c='T');
pom_pit.GIODODAT:={? var_pres('_d')=type_of(date) || _d || date(0,0,0) ?};
DEKL_POD.cntx_psh;
DEKL_POD.use('pod_'+($__Rok+4));
DEKL_POD.index('DEKL_OSO');
__DEKOS:=DEKL_POD.ndx_tmp(,1,'PRAC_ET','OSOBA',,'PIT',,,'PIT',,);
exec('czytaj','#stalesys',date(__Rok,12,0),KST);
::tabela do zapisu w wydrukowanych deklaracjach
{? var_pres('__par')>100 || obj_del(__par) ?};
__par:=tab_tmp(2,'RODZAJ','STRING[1]','Rodzaj','REF','INTEGER','Ref');
1


\obl_pit8c_10
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.51]
:: OPIS: Formula wyliczajaca dane z systemu do tablicy pit przed zapisem do tabeli VAT_POZ dla pity PIT 8C
::   WE: _a - 1 - jesli jest prawidlowy symbol i wymagane dane do utworzenia deklaracji
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 1 ?};
_prac:=(pom_pit.PIT_TYP='PIT8CP');
_wyn:=0;
{! _nx:=1..22 |! pit[_nx]:='' !};
{! _nx:=23..obj_len(pit) |! pit[_nx]:=0 !};
__par.erase;
::Ustalenie rodzaju Podatnika
pit[39]:=0;

pit[4]:=$__Rok;

_jest_pit:=_jestwyd:=0;
{? ~pom_pit.TWORZ
|| VAT_DEK.cntx_psh;
   VAT_DEK.index('VAT_OSOB');
   VAT_DEK.prefix(P.OSOBA,rodzdekl,rok_dekp,$__Rok,pit_typ);
   {? VAT_DEK.last || _jest_pit:=1 ?};
   VAT_DEK.cntx_pop
?};
{? ~_jest_pit
|| DEKL_POD.index('DEKL_OSO');
   DEKL_POD.prefix(P.OSOBA,'(E)PIT-8C','(E)PIT-8C');
   {? DEKL_POD.first
   || _jest_pit:=1
   ?}
?};
{? ~_jest_pit
|| DEKL_POD.index(__DEKOS);
   DEKL_POD.prefix(P.OSOBA,'PIT-8C','PIT-8C');
   {? DEKL_POD.first
   || _jest_pit:=_jestwyd:=1
   ?}
?};
{? ~pom_pit.TWORZ & _jest_pit
|| {? _jestwyd || return(-2) || return(-1) ?}
?};

_adus:=exec('adresdous','osoba',#pit[4]);
{? #(_adus+1)
|| pit[5]:=OS_US.US;
   _usnaz:=OS_US.US().NU+
              {? +US.UU || ', '+US.UU || '' ?}+
              {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?}
|| pit[5]:=null;
   _usnaz:=''
?};
{? #(1+_adus)
|| pit[14]:=OS_ADRES.KRAJ;
   pit[15]:=OS_ADRES.WOJEWODZ;
   pit[16]:=OS_ADRES.POWIAT;
   pit[17]:=OS_ADRES.GMINA;
   pit[18]:=OS_ADRES.ULICA;
   pit[19]:=OS_ADRES.DOM;
   pit[20]:=OS_ADRES.LOKAL;
   pit[21]:=OS_ADRES.MIASTO;
   pit[22]:=OS_ADRES.KOD
|| {! _nx:=15..22 |! pit[_nx]:='' !};
   pit[14]:=null
?};
pit[10]:={? OSOBA.PESEL='' | exec('spr_nip','pit',OSOBA.ref,date(#pit[4],12,0)) || 'N'+OSOBA.NIP || 'P'+OSOBA.PESEL ?};
pit[11]:=OSOBA.NAZWISKO;
pit[12]:=OSOBA.PIERWSZE;
pit[13]:=OSOBA.UR_DATA;

::dochody z sekcji D
pit[33]:=pit[23]+pit[25]+pit[27]+pit[29]+pit[31];
pit[34]:=pit[24]+pit[26]+pit[28]+pit[30]+pit[32];

pit[35]:=pit[33]-pit[34]; {? pit[35]<0 || pit[35]:=0 ?};
pit[36]:=pit[34]-pit[33]; {? pit[36]<0 || pit[36]:=0 ?};

_kw:=pit[33]+pit[34]+pit[37];
{? pit_typ='PIT8CP'
|| _rodzpla:='E'
|| _rodzpla:='Z'
?};
{? _kw
|| {? ~__par.find_key(_rodzpla,#P.ref)
   || __par.RODZAJ:=_rodzpla; __par.REF:=#P.ref; __par.add(1)
   ?}
?};

_wyn:={? ~(_kw>0) || 0 || 1 ?};
{? _a & _wyn
|| {? __par.first
   || P.cntx_psh();
      P.prefix();
      {!
      |? DEKL_POD.prefix();
         DEKL_POD.blank();
         DEKL_POD.PIT:='(E)PIT-8C';
         {? __par.RODZAJ='E' & P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='E'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         |? P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='Z'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         ?};
         {? EDIT_VAR.PIT_RODZ=''
         || DEKL_POD.DATA:=VAT_DEK.DATA
         || DEKL_POD.DATA:={? PIT_EDIT.DATA<>date(0,0,0) || PIT_EDIT.DATA || VAT_DEK.DATA ?}
         ?};
         DEKL_POD.USER:=OPERATOR.USER;
         DEKL_POD.S1:=pit[33]+pit[34]+pit[37];
         DEKL_POD.S2:=pit[34];
         DEKL_POD.S3:=0;
         DEKL_POD.add();
        __par.next()
      !};
      P.cntx_pop()
   ?};
   {? pom_pit.GIODODAT<>date(0,0,0)
   || exec('przekaz','giodo',pom_pit.GIODODAT,
           'Przekazanie danych na formularzu PIT-8C\n',
           'odbiorcą danych jest:\n',
           _usnaz)
   ?};
   {? var_pres('PODFIZ',KST)>0
   || pit[39]:=KST.PODFIZ
   ?}
?};
_wyn


\init_ift1_15
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Formula inicjujaca IFT-1/IFT-1R wersja 15
::   WE: _a - string typ deklaracji IFT-1/IFT-1R
::       _b - string T lub N czy tworzyc dekl. dla zleceniobiorcy, gdy jest juz utworzona
::       _c - string T czy N przetwarzanie danych osobowych lub nie
::       _d - data przekazania danych osobowych
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('pit','pom_pit');
pit:=obj_new(79);
{! _nx:=1..33 |! pit[_nx]:='' !};
{! _nx:=34..obj_len(pit) |! pit[_nx]:=0 !};

pom_pit:=obj_new('PIT_TYP','TWORZ','GIODO','GIODODAT');
pom_pit.PIT_TYP:=_a;
pom_pit.TWORZ:=(_b='T');
pom_pit.GIODO:=(_c='T');
pom_pit.GIODODAT:={? var_pres('_d')=type_of(date) || _d || date(0,0,0) ?};
exec('czytaj','#stalesys',date(__Rok,12,0),KST);
{? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
1


\obl_ift_15
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla informacji IFT-1/IFT-1R
::   WE: _a - string typ deklaracji IFT1/IFT1R
::       _b - date Data od okresu za ktory beda pobierane dane
::       _c - date Data do okresu za ktory beda pobierane dane
::----------------------------------------------------------------------------------------------------------------------
_nazwa:=_a;
_od:=_b;
_do:=_c;
{! _iter:=19..33 |! pit[_iter]:='' !};
{! _iter:=34..73 |! pit[_iter]:=0 !};
::Ustalenie rodzaju Podatnika
pit[79]:=0;
{? var_pres('PODFIZ',KST)>0
|| pit[79]:=KST.PODFIZ
?};

_wyn:=0;

_jest_pit:=0;
{? ~pom_pit.TWORZ
|| VAT_DEK.cntx_psh();
   VAT_DEK.index('VAT_OSOB');
   VAT_DEK.prefix(P.OSOBA,rodzdekl,rok_dekp,$__Rok,pit_typ,);
   {? VAT_DEK.last || _jest_pit:=1 ?};
   VAT_DEK.cntx_pop()
?};
{? _jest_pit
|| return(-1)
?};

_adus:=exec('adresdous','osoba',VAT_DEK.DO~1);
{? #(_adus+1)
|| pit[6]:=OS_US.US;
   _usnaz:=OS_US.US().NU+
              {? +US.UU || ', '+US.UU || '' ?}+
              {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?}
|| pit[6]:=null;
   _usnaz:=''
?};
pit[19]:=OSOBA.NAZWISKO;
pit[20]:=OSOBA.PIERWSZE;
pit[21]:=OSOBA.OJCIEC;
pit[22]:=OSOBA.MATKA;
pit[23]:=OSOBA.UR_DATA;
pit[24]:=OSOBA.UR_MIEJ;
::ustalenie na podstawie kartoteki OS_ZNIP
{? exec('szukaj_osznip','edeklar',OSOBA.ref,VAT_DEK.DO)
|| pit[25]:=OS_ZNIP.ZNIP;
   pit[26]:=OS_ZNIP.RZNIP;
   pit[27]:=OS_ZNIP.KRAJZNIP
|| pit[25]:='';
   pit[26]:=null();
   pit[27]:=null()
?};
{? #(1+_adus) | exec('szukaj','osoba','S',VAT_DEK.DO)
|| pit[28]:=OS_ADRES.KRAJ;
   pit[29]:=OS_ADRES.MIASTO;
   pit[30]:=OS_ADRES.KOD;
   pit[31]:=OS_ADRES.ULICA;
   pit[32]:=OS_ADRES.DOM;
   pit[33]:=OS_ADRES.LOKAL
?};

RH.cntx_psh();
RH.index('RACHDATA');
RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,__Rok);
{? RH.first()
|| {!
   |? {? RH.DWY>=_od & RH.DWY<=_do
      || _src:=
            {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
               RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=',_nazwa,'DEKL','NR','=',15)
            || RU_DEKL.WIERSZ
            |? RH.ZLE().RU().K='8'
            || 10
            ?};
         {? _src
         || _ke:=31+_src*4;
            pit[_ke]+=exec('licza_rhs','lista_licz',92);
            pit[_ke+2]+=exec('licza_rhs','lista_licz',961);
            {? pit[_ke]>0 | pit[_ke+2]>0 || pit[_ke+1]:=RH.PPD ?}
         ?}
      ?};
      RH.next()
   !}
?};
RH.cntx_pop();
{! _lp:=35 //4 ..71
|! {? _lp<>43 & _lp<>71
   || pit[_lp]:=pit[_lp]$0;
      pit[_lp+2]:=pit[_lp+2]$0
   ?}
!};

_wyn:=0;
{! _lp:=34..73
|? _wyn=0
|! {? pit[_lp]>0 || _wyn:=1 ?}
!};
{? _wyn & pom_pit.GIODODAT<>date(0,0,0)
|| exec('przekaz','giodo',pom_pit.GIODODAT,
        'Przekazanie danych na formularzu %1\n'[SKID.DEKL_NAZ],
        'odbiorcą danych jest:\n',
        _usnaz)
?};
_wyn


\init_pit11p_10
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.51]
:: OPIS: Formula dla akcji Dolacz okna deklaracji PIT-11 dla pracownika lub zleceniobiorcy
::       dla 8 wersji e-deklaracji obowiazujacej od 1.1.2020 roku ale dotyczy przychodow od 1.1.2019 roku
::       (wymagana zmienna globalna __Rok-rok za ktory tworzona jest e-deklaracja)
::   WE: _a - string typ deklaracji PIT11P
::       _b - string T lub N czy tworzyc deklaracje jezeli podatnik ma juz
::       _c - string T lub N czy tworzyc deklaracje zbiorcza dla podatnika
::       _d - string T lub N czy sumowac umowy zlecenia sprzed zatrudnienia
::       _e - string T lub N czy dolaczono informacje PIT-R
::       _f - string T korekta lub N zlozenie deklaracji
::       _g - string T lub N przetwarzanie danych osobowych lub nie
::       _h - data przekazania danych osobowych
::       _i - string T lub N czy umozliwiac zmiane informacji o kosztach uzyskania
::       _j - numer wersji e-deklaracji pole VAT_DEK.NR().NR lub PIT_GRUP.NR().NR
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_j')<>type_of(0) || _j:=9 ?};
VAR_DEL.delete('__PIT','__WER','__wk','__transl','__NdPOD');
{? var_pres('pit')>100 || obj_del(pit) ?};
pit:=obj_new(93);
{! _nx:=1..27 |! pit[_nx]:='' !};
{! _nx:=28..obj_len(pit) |! pit[_nx]:=0 !};
_pom:=pit[3]:=obj_new(13);
_pom[2]:={? _a='PIT11P' || 'P' || 'Z' ?};
_pom[1]:=__Rok;

::tabela do zapisu w wydrukowanych deklaracjach
{? var_pres('__par')>100 || obj_del(__par) ?};
__par:=tab_tmp(2,'RODZAJ','STRING[1]','Rodzaj','REF','INTEGER','Ref');

::czy wydruk dla podatnika?
_pom[4]:={? _pom[3]:=(_c='T')
         || tab_tmp(1,'OSOBA','INTEGER','Podatnik')
         || ~~
         ?};
::czy sumowac umowy zlecenie sprzed zatrudnienia'
{? _pom[3] & _pom[2]='P'
|| _pom[10]:=(_d='T')
|| _pom[10]:=0
?};
::czy przychody pochodza z wiecej niz jednego stosunku pracy
_pom[5]:=0;
::czy umozliwiac zmiane informacji o kosztach uzyskania?
_pom[6]:=_i;
::czy rejestrowac przekazanie danych osobowych?
{? _g='T'
|| _pom[9]:=_h
|| _pom[9]:=date(0,0,0)
?};

:: Dla roku 2019 ustalenie wartosci kosztow uzyskania ze wzgledu na zmiany wartosci od 2019.10.01
:: ustalenie wartosci pol KST.KU oraz KST.KUZ na date 2019.09.30
{? _pom[1]=2019
|| exec('czytaj','#stalesys',date(__Rok,9,0),KST,'KU','KUZ');
   _pom[12]:=KST.KU;
   _pom[13]:=KST.KUZ
|| _pom[12]:=_pom[13]:=0
?};

exec('czytaj','#stalesys',date(__Rok,12,0),KST);

::wysokosc kosztow uzyskania
_pom[7]:=KST.KU;
_pom[8]:=(_b='T');

pit[7]:=_f;

pit[89]:=_e;

KP.cntx_psh; KP.index('_KARTAPO');
RH.cntx_psh; RH.index('RACHDATA');
O.cntx_psh(); O.index('LISTYPLP');
KT.cntx_psh();
us_podat:=null;
DEKL_POD.cntx_psh;
DEKL_POD.use('pod_'+$_pom[1]);
DEKL_POD.index('DEKL_PED');
ZC_N.cntx_psh();
ZC_N.index('ZC_H');
ZC.cntx_psh();

__wk:=obj_new(10);
{! _nx:=1..obj_len(__wk)
|! __wk[_nx]:=obj_new(7);
   {! _ny:=1..obj_len(__wk[_nx])
   |! __wk[_nx][_ny]:=0
   !}
!};
::Wiersze ,3,4,5,7,8,
::wiersz 6 dodany dla wykazania ZP dla umowy cywilnoprawnej w parametryzacji wykazywania w PIT-11
__transl:="{? RU_DEKL.DEKL().NR=__WER
           || __wk[1][2]:=29;  __wk[1][3]:=30; __wk[1][4]:=31;  __wk[1][5]:=32;  __wk[1][6]:=33;
              __wk[3][2]:=43;  __wk[3][3]:=0;  __wk[3][4]:=44;  __wk[3][5]:=0;   __wk[3][6]:=46;
              __wk[4][2]:=47;  __wk[4][3]:=48; __wk[4][4]:=49;  __wk[4][5]:=0;   __wk[4][6]:=50;
              __wk[5][2]:=51;  __wk[5][3]:=52; __wk[5][4]:=53;  __wk[5][5]:=0;   __wk[5][6]:=54;
              __wk[6][2]:=55;  __wk[6][3]:=56; __wk[6][4]:=57;  __wk[6][5]:=0;   __wk[6][6]:=58;
              __wk[7][2]:=59;  __wk[7][3]:=63; __wk[7][4]:=60;  __wk[7][5]:=0;   __wk[7][6]:=61;   __wk[7][7]:=62;
              __wk[8][2]:=64;  __wk[8][3]:=65; __wk[8][4]:=66;  __wk[8][5]:=0;   __wk[8][6]:=68;
              RU_DEKL.WIERSZ
           || 0
           ?}
           ";
__PIT:='PIT11';
__WER:=_j;
::tabela pomocnicza dla wykrywania pokrywajacych sie okresow zatrudnienia
_pom[11]:=tab_tmp(2,'OD','DATE',,'DO','DATE',);
{? var_pres('PPK_POD')>0
|| __NdPOD:=PPK_POD.ndx_tmp('PPK_POD_OS',0,'POD_RH',,0,'OSOBA',,0,'POD_LICZ',,0,'POD_R',,0)
|| __NdPOD:=''
?}


\end_pit11p_10
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.51]
:: OPIS: Formula zwiazana z formula \init_pit11p_10 usuwa utworzone zmienne i przywraca konteksty tabel
::----------------------------------------------------------------------------------------------------------------------
undefine();
ZC.cntx_pop();
ZC_N.cntx_pop();
DEKL_POD.cntx_pop();
RH.cntx_pop();
KP.cntx_pop();
O.cntx_pop();
KT.cntx_pop();
{? var_pres('PPK_POD')>0
|| PPK_POD.ndx_drop(__NdPOD)
?};
VAR_DEL.delete('pit','__PIT','__WER','__wk','__transl','us_podat','__par','__NdPOD');
exec('stalesys','#stalesys')


\obl_pit11p_10
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.51]
:: OPIS: Formula wylicza dane do deklaracji PIT-11 z systemu dla 10 wersji ale dotyczy przychodow od 1.1.2019 roku
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - 1 - jesli jest prawidlowy symbol i wymagane dane do utworzenia deklaracji
::       _b - numer wersji e-deklaracji pole VAT_DEK.NR().NR lub PIT_GRUP.NR().NR
::       _c - 1 - ustawienie pracownika zatrudnionego przy sumowaniu zbiorczym
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 1 ?};
_b:={? var_pres('_b')>0 & type_of(_b)=type_of(0) || _b || 10 ?};
_c:={? var_pres('_c')>0 & type_of(_c)=type_of(0) || _c || 0 ?};
_prac_up:={? var_pres('_d')>100 || _d || null() ?};
_wynik:=0;
_pom:=pit[3];
us_podat:=null;
pit[92]:=0;
::Ustalenie rodzaju Podatnika
pit[93]:=0;
__par.erase;

:: sprawdzenie czy ze wzgledu na date urodzin dla osob mlodych nalezy ustalac na podstawie list plac/rachunkow
_ur_data:=P.OSOBA().UR_DATA;
{? _ur_data<>date(0,0,0)
|| {? _pom[1]=2019
   || _po_list:={? exec('kiedy_26ur','pit',_ur_data)<=date(2019,7,0) || 0 || 1 ?}
   || _po_list:={? exec('kiedy_26ur','pit',_ur_data)<=date(_pom[1]-1,12,0) || 0 || 1 ?}
   ?};
   _26ur:=exec('kiedy_26ur','pit',_ur_data)
|| _26ur:=date(0,0,0);
   _po_list:=0
?};

::wyczysc rubryki formularza wlasciwe dla podatnika
{! _nx:=11..27 |! pit[_nx]:='' !};
{! _nx:=28..88 |! pit[_nx]:=0 !};
pit[18]:=date(0,0,0);
pit[19]:=null;
pit[76]:=pit[78]:=pit[80]:='';
::Tablica do wyliczania zasilkow od umow-zlecen
_zasilek:=obj_new(5);
{! _nx:=1..obj_len(_zasilek) |! _zasilek[_nx]:=0 !};

_jest_pit:=_jestwyd:=0;
VAT_DEK.cntx_psh;
VAT_DEK.index('VAT_PRAC');
VAT_DEK.prefix(P.ref,rodzdekl,rok_dekp,okres,pit_typ);
{? VAT_DEK.last || _jest_pit:=1 ?};
VAT_DEK.cntx_pop;
::sprawdzenie czy byla drukowana deklaracja poprzez wydruk bez e-deklaracji
{? ~_jest_pit
|| {? _pom[2]='P'
   || DEKL_POD.prefix('E',P.ref,'(E)PIT-11','(E)PIT-11')
   || DEKL_POD.prefix('Z',P.ref,'(E)PIT-11','(E)PIT-11')
   ?};
   {? DEKL_POD.first
   || _jest_pit:=1
   ?}
?};
{? ~_jest_pit
|| {? _pom[2]='P'
   || DEKL_POD.prefix('E',P.ref,'PIT-11','PIT-11')
   || DEKL_POD.prefix('Z',P.ref,'PIT-11','PIT-11')
   ?};
   {? DEKL_POD.first
   || _jest_pit:=_jestwyd:=1
   ?}
?};
{? ~_pom[8] & _jest_pit
|| {? _jestwyd || return(-2) || return(-1) ?}
?};

{? _pom[3]
|| {? _pom[2]='P'
   || {? ~_c
      || KP.cntx_psh();
         KP.prefix();
         {? ~KP.find_key(P.ref(),_pom[1])
         ||
::          sprawdzenie czy jest nierozliczony przychód z PPK w danym roku podatkowym
            _czy_ppk:=1;
            {? var_pres('PPK_POD')>0
            || PPK_POD.index('POD_O');
               PPK_POD.prefix(null(),P.ref(),'T',_pom[1]);
               {? PPK_POD.first()
               || _czy_ppk:=0
               ?}
            ?};
            {? ~(P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1])) & _czy_ppk
            || KP.cntx_pop();
               return(0)
            || _wyn:=exec('spr_oso','pit',_jest_pit,_pom[8]);
               {? _wyn<0
               || KP.cntx_pop();
                  return(_wyn)
               ?}
            ?}
         ?};
         KP.cntx_pop()
      || P.cntx_psh();
         P.index('PRACOSOB');
         P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
         {? P.first
         || _jest_P:=0;
            {!
            |? {? P.ZA='T' & P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1])
               || {? var_pres('P',_prac_up)>100 & var_pres('Ndx',_prac_up)=type_of('')
                  || _prac_up.P.cntx_psh();
                     _prac_up.P.index(_prac_up.Ndx);
                     _prac_up.P.prefix();
                     {? _prac_up.P.find_key(#P.ref)
                     || _jest_P:=1
                     ?};
                     _prac_up.P.cntx_pop()
                  || _jest_P:=1
                  ?}
               ?};
               P.next & ~_jest_P
            !};
            P.cntx_pop();
            {? _jest_P & P.ZA<>'T'
            || return(0)
            || KP.cntx_psh();
               KP.prefix();
               {? ~KP.find_key(P.ref(),_pom[1])
               ||
::                sprawdzenie czy jest nierozliczony przychód z PPK w danym roku podatkowym
                  _czy_ppk:=1;
                  {? var_pres('PPK_POD')>0
                  || PPK_POD.index('POD_O');
                     PPK_POD.prefix(null(),P.ref(),'T',_pom[1]);
                     {? PPK_POD.first()
                     || _czy_ppk:=0
                     ?}
                  ?};
                  {? ~(P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1])) & _czy_ppk
                  || KP.cntx_pop();
                     return(0)
                  || _wyn:=exec('spr_oso','pit',_jest_pit,_pom[8]);
                     {? _wyn<0
                     || KP.cntx_pop();
                        return(_wyn)
                     ?}
                  ?}
               ?};
               KP.cntx_pop()
            ?}
         || P.cntx_pop()
         ?}
      ?}
   || RH.index('RACHPRZ');
      RH.prefix();
      {? ~RH.find_key(P.ref,_pom[1])
      || RH.index('RACHDATA');
::       sprawdzenie czy jest nierozliczony przychód z PPK w danym roku podatkowym
         _czy_ppk:=1;
         {? var_pres('PPK_POD')>0
         || PPK_POD.index('POD_RH');
            PPK_POD.prefix(null(),P.ref(),'T',_pom[1]);
            {? PPK_POD.first()
            || _czy_ppk:=0
            ?}
         ?};
         {? _czy_ppk || return(0) ?}
      ||
::       sprawdzenie czy sa rachunki nie sa to tylko rachunki ryczałtowe w danym roku podatkowycm
::       KOD BŁĘDU: ER/WRT/XP/12.51/1802/0001 KOD ZGŁOSZENIA: NL/WRT/KALI/12.30/0741
::       Wiele deklaracji PIT-11 dla zleceniobiorcy w kilku jednostkach org. (w jednej jednostce tylko z rachunkiem
::       ryczaltowym w roku podatkowym)
         RH.prefix(P.ref(),_pom[1]);
         {? RH.first()
         || _rach:=RH.size();
            _rycz:=0;
            {!
            |? {? exec('licz_rhs','lista_licz',31) & (~exec('czy_prac','osoba',P.OSOBA,RH.DWY))
               || _rycz+=1
               ?};
               RH.next()
            !};
            RH.prefix();
::          jesli wszystkie rachunki sa ryczaltowe to nie bedzie robiony PIT-11
            {? _rach=_rycz
            || RH.index('RACHDATA');
               return(0)
            ?}
         ?}
      ?};
      RH.index('RACHDATA')
   ?}
?};

::jezeli informacja drukowana jest dla podatnika (osoby), to nie drukuj
::zwielokrotnionych informacji - kolejne wystapienia w kartotekach
{? _pom[3]
|| {? ~_pom[4].find_key(#P.OSOBA)
   || _pom[4].OSOBA:=#P.OSOBA;
      _pom[4].add
   || return(_wynik)
   ?}
?};
::data do ustalenia danych identyfikacyjnych osoby zagranicznej oraz znacznika "nierezydent"
_Zagrdat:=date(0,0,0);
_pom[5]:=0;
_liczmies:=0;
:: spradzenie czy sa przychody-karty podatkowe z etatu-wykonane tylko dla warunku _pom[2]='P'
_spr_et:=0;
::zakres miesiecy do zmiany kosztow uzyskania w 2019 roku
_mc_2019:=0;
:: kwota zasiłków z etatu
_et_zas:=0;
:: kwota podatku od zasiłku z etatu
_pd_zas:=0;
:: kwota zasiłków z etatu poniżej 26 roku życia
_et_zs26:=0;
:: kwota podatku od zasiłku z etatu poniżej 26 roku życia
_pd_zs26:=0;
:: określenie limitu ZP jeżeli w stałych systemu mamy pole KST.ZWPOD
{? var_pres('ZWPOD',KST)>0
|| _lim_ZP:=KST.ZWPOD
|| _lim_ZP:=85528
?};
::uwzgledniaj przychody ze stosunku pracy
{? _pom[2]='P'
|| P.cntx_psh;
::informacja dla podatnika
   {? _pom[3]
   || P.index('PRACOSOB');
      P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
      P.first;
      _pom[11].erase()
   ?};
   {!
   |? KP.prefix(P.ref,_pom[1]);
      {? KP.first
      || {? ~__par.find_key('E',#P.ref)
         || __par.RODZAJ:='E'; __par.REF:=#P.ref; __par.add(1)
         ?};
         _od:=date(_pom[1],KP.M,1);
         {!
         |?
::          Przychód wiersz 1
            {? ~_po_list | (KP.R=2019 & KP.M<=7)
            ||
::             Zasiłki chorobowe obecnie wykazujemy w wierszu 8 Inne źródła, natomiast podatek od zasiłku w wierszu 8,
::             gdy nie ma przychodów z etatu lub łącznie wierszu 1, gdy mamy łączne przychody z etatu i zasiłków
               O.index('LISTYPLP');
               O.prefix(exec('ref_firma','ustawienia'),'P',KP.R,KP.M);
               {? O.first
               || {!
                  |?
::                   Kwota zasiłków z etatu składnik 650 do wykazywania składników w "Inne źródła"
::                   odejmujemy rubryki 7018, 7071, które nie są opodatkowane są w kwota rubryki 650
                     _zs_lis:=exec('licz_ls','pit',650)$2-exec('licz_ls','pit',7018)$2-exec('licz_ls','pit',7071)$2;
                     {? _zs_lis
                     || _et_zas+=_zs_lis;
::                      Podatek z listy
                        _pd_list:=exec('licza_ls','pit',961);
::                      Podatek od kwot zasiłku ulga podatkowa nie jest pobrana do wyliczeń
::                      Procent podatku z listy
                        _pr_pod:=exec('licza_ls','pit',91);
                        {? _zs_lis>0 || _pd_zsls:=_zs_lis$0*_pr_pod/100$0 || _pd_zsls:=0 ?};
::                      Podatek policzony z kwoty zasiłku bez ulgi podatkowej sprawdzenie czy nie jest wyższy
::                      od całkowitego podatku z listy. Jeżeli większy to ograniczamy do kwoty podatku z listy płac
                        {? _pd_zsls>_pd_list || _pd_zsls:=_pd_list ?};
::                      Łączna kwota podatku od zasiłku z etatu
                        _pd_zas+=_pd_zsls
                     ?};
                     O.next()
                  !}
               ?};
::             Przychod
               pit[29]+=(KP.S1+KP.S10-KP.S12-KP.S13-KP.S15-KP.S16)$2;
::             Koszty uzyskania wiersz 1
               pit[30]+=KP.S2$2;
::             Zaliczka podatkowa wiersz 1
               pit[33]+=KP.S4$2;
::             Przychód prawa autorskie wiersz 1
               pit[34]+=KP.S13$2;
::             Koszty uzyskania prawa autorskie wiersz 1
               pit[35]+=KP.S14$2;
::             Składki społeczne do wiersza 1
               pit[69]+=(KP.S10-KP.S12-KP.S15)$2;
::             Składki zdrowotne do wiersza 1
               pit[72]+=KP.S9$2

            || O.index('LISTYPLP');
               O.prefix(exec('ref_firma','ustawienia'),'P',KP.R,KP.M);
               {? O.first
               || {!
                  |? {? O.D>_26ur & O.T().T<>'ZXX'
                     ||
::                      Składki społeczne wyliczane ponieważ doliczamy do przychodu
                        _skl:=exec('licza_ls','pit',5711,5721);
::                      Odjęcie składek z bieżącego roku w wyniku blokady pobieramy wg rubryki 951
                        _skl-=exec('licz_ls','pit',951);
::                      Przychód prawa autorskie wiersz 1 brak atrybutu pobieramy wg rubryki 7002
                        _prz_50:=exec('licz_ls','pit',7002);
::                      Składki społeczne od przychodu zagranicznego ponieważ nie są odliczane do przychodu
                        _skl_zagr:=exec('licza_ls','pit',9015);
                        _przych:=_skl+exec('licza_ls','pit',92)-_skl_zagr-_prz_50;
::                      Przychód uzyskany po 26 urodzinach trafia do wiersza 1
::                      Przychód wiersz 1 z etatu
                        pit[29]+=_przych;
::                      Koszty uzyskania wiersz 1
                        pit[30]+=exec('licza_ls','pit',931);
::                      Zaliczka podatkowa wiersz 1
                        pit[33]+=exec('licza_ls','pit',961);
::                      Przychód prawa autorskie wiersz 1 brak atrybutu pobieramy wg rubryki 7002
                        pit[34]+=_prz_50;
::                      Koszty uzyskania prawa autorskie wiersz 1 brak atrybutu pobieramy wg rubryki 7004
                        pit[35]+=exec('licz_ls','pit',7004);
::                      Składki społeczne do wiersza 1
                        pit[69]+=(_skl-_skl_zagr);
::                      Składki zdrowotne do wiersza 1
                        pit[72]+=exec('licza_ls','pit',57412);
::                      Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                        pit[72]+=exec('licz_ls','pit',794);
::                      Kwota zasiłków z etatu składnik 650 do wykazywania składników w "Inne źródła"
::                      odejmujemy rubryki 7018, 7071, które nie są opodatkowane są w kwota rubryki 650
                        _zs_lis:=exec('licz_ls','pit',650)$2-exec('licz_ls','pit',7018)$2-exec('licz_ls','pit',7071)$2;
                        {? _zs_lis
                        || _et_zas+=_zs_lis;
::                         Podatek z listy
                           _pd_list:=exec('licza_ls','pit',961);
::                         Podatek od kwot zasiłku ulga podatkowa nie jest pobrana do wyliczeń
::                         Procent podatku z listy
                           _pr_pod:=exec('licza_ls','pit',91);
                           {? _zs_lis>0 || _pd_zsls:=_zs_lis$0*_pr_pod/100$0 || _pd_zsls:=0 ?};
::                         Podatek policzony z kwoty zasiłku bez ulgi podatkowej sprawdzenie czy nie jest wyższy
::                         od całkowitego podatku z listy. Jeżeli większy to ograniczamy do kwoty podatku z listy płac
                           {? _pd_zsls>_pd_list || _pd_zsls:=_pd_list ?};
::                          Łączna kwota podatku od zasiłku z etatu
                           _pd_zas+=_pd_zsls
                        ?}

                     |? (O.D<=_26ur | O.T().T='ZXX')
                     ||
::                      Składki społeczne wyliczane ponieważ doliczamy do przychodu
                        _skl:=exec('licza_ls','pit',5711,5721);
::                      Odjęcie składek z bieżącego roku w wyniku blokady pobieramy wg rubryki 951
                        _skl-=exec('licz_ls','pit',951);
::                      Przychód prawa autorskie wiersz 2 brak atrybutu pobieramy wg rubryki 7002
                        _prz_50:=exec('licz_ls','pit',7002);
::                      Składki społeczne od przychodu zagranicznego ponieważ nie są odliczane do przychodu
                        _skl_zagr:=exec('licza_ls','pit',9015);
::                      składki od zwolnionego przychodu
                        _zp_skl:=exec('licza_ls','pit',9026);
                        _przych:=exec('licza_ls','pit',92)+_skl-_zp_skl-_skl_zagr-_prz_50;
::                      Podatek z listy
                        _pd_list:=exec('licza_ls','pit',961);
:: przychód uzyskany przed ukończeniem 26 roku zycia, trafia do wiersza 2 z wyjątkiem przychodu
:: który nie podlega zwolnieniu (atrybut 9021), ten trafia do wiersza 1 poza zasiłkamu rubryka 650
                        _zs_lis:=0;
                        _pd_zsls:=0;
                        _pd_zwol:=0;
                        _bez_zwol:=exec('licza_ls','pit',9021);
                        {? _bez_zwol
                        ||
::                         kwoty podwyższenia zasiłku macierzyńskiego są bez podatku ale zsumowane z 650
                           _pod_mac:=exec('licz_ls','pit',7018)$2+exec('licz_ls','pit',7071)$2;
                           _bez_zwol-=_pod_mac;
                           {? _bez_zwol<0 || _bez_zwol:=0 ?};
::                         Podatek od kwot, które nie podlegają zwolnieniu
                           _pr_pod:=exec('licza_ls','pit',91);
                           {? _bez_zwol>0 || _pd_zwol:=_bez_zwol$0*_pr_pod/100$0 || _pd_zwol:=0 ?};
                           {? _pd_zwol>_pd_list || _pd_zwol:=_pd_list ?};
                           _przych-=_bez_zwol;
::                         Kwota zasiłków rubryka 650 z etatu do wykazywania
::                         składników w "Inne źródła" jest składową atrybutu 9021
::                         odejmujemy rubryki 7018, 7071, które nie są opodatkowane są w kwota rubryki 650
                           _zs_lis:=exec('licz_ls','pit',650)$2-_pod_mac;
                           {? _zs_lis
                           || _et_zs26+=_zs_lis;
::                            Jeżeli kwota z zasiłku jest pełną kwotą atrybutu 9021
                              {? _zs_lis=_bez_zwol
                              ||
::                            Kwota podatku jest wyliczona dla atrybutu 9021
                                 _pd_zs26+=_pd_zwol;
                                 _pd_zsls:=_pd_zwol
                              ||
::                            Wyliczenia podatku oddzielnie dla zasiłku, ponieważ mamy inne składniki w atrybucie 9021
                                 {? _zs_lis>0 || _pd_zsls:=_zs_lis$0*_pr_pod/100$0 || _pd_zsls:=0 ?};
::                            Podatek policzony z kwoty zasiłku bez ulgi podatkowej sprawdzenie czy nie jest wyższy
::                            od całkowitego podatku z atrybutu. Jeżeli większy to ograniczamy do kwoty tego podatku
                                 {? _pd_zsls>_pd_zwol || _pd_zsls:=_pd_zwol ?};
::                            Łączna kwota podatku od zasiłku z etatu poniżej 26 roku życia
                                 _pd_zs26+=_pd_zsls
                              ?}
                           ?}
                        ?};

::                      Przychód z etatu wiersz 1
                        pit[29]+=(_bez_zwol-_zs_lis);
::                      Podatek z etatu wiersz 1 dla kwot, które nie podlegają zwolnieniu bez zasiłku
                        pit[33]+=(_pd_zwol-_pd_zsls);
::                      Zwolnione przychody od 1.08.2019 z etatu w wierszu 2
::                      Przychód wiersz 2
                        pit[36]+=_przych;
::                      Koszty uzyskania wiersz 2
                        {? _przych
                        || pit[37]+=exec('licza_ls','pit',931)
                        || pit[30]+=exec('licza_ls','pit',931)
                        ?};
::                      Przychód prawa autorskie wiersz 2 brak atrybutu pobieramy wg rubryki 7002
                        pit[41]+=_prz_50;
::                      Zaliczka podatkowa wiersz 2
                        {? _zs_lis=_bez_zwol | _pd_zsls=_pd_zwol
                        || _kw_pod:=_pd_list-_pd_zsls
                        || {? _pd_list=_pd_zwol
                           || _kw_pod:=0
                           || _kw_pod:=_pd_list-_pd_zwol-_pd_zsls
                           ?}
                        ?};
                        pit[40]+=_kw_pod;
::                      Koszty uzyskania prawa autorskie wiersz 2 brak atrybutu pobieramy wg rubryki 7004
                        pit[42]+=exec('licz_ls','pit',7004);
::                      Składki społeczne do wiersza 2
                        pit[70]+=(_skl-_zp_skl-_skl_zagr);
::                      Składki zdrowotne do wiersza 2
                        pit[73]+=exec('licza_ls','pit',57412);
::                      Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                        pit[73]+=exec('licz_ls','pit',794)
                     ?};
                     O.next()
                  !}
               ?};
::             Przychody zwolnione do limitu ZP w danym roku powiązane z pozycja 86 i 87
::             Przychód ZP do limitu ZP pobieramy składnik z karty podatkowa KP.S18 rubryka 7094
               pit[87]+=KP.S18$2;
::             Składki społeczne do limitu ZP składnik z karty podatkowa KP.S19 rubryka 7098
               pit[71]+=KP.S19$2;
::             Składki zdrowotne do limitu ZP składnik z karty podatkowa KP.S20 rubryka 7108
               pit[74]+=KP.S20$2
            ?};

            {? KP.R=2019
            || {? date(_pom[1],KP.M,1)<date(2019,10,1)
               || _mc_2019+=((KP.S2$2)<>0)
               || _liczmies+=((KP.S2$2)<>0)
               ?}
            || _liczmies+=((KP.S2$2)<>0)
            ?};
            _spr_et+=1;
            _dakp:=date(KP.R,KP.M,0);
            {? _Zagrdat<_dakp || _Zagrdat:=_dakp ?};
            KP.next
         !};
         {? _pom[3] & ~pit[28]
         || _do:=date(_pom[1],KP.M,0);
            {? (_od~1=P.DZA~1) & (_od~2=P.DZA~2) || _od:=P.DZA ?};
            {? (_do~1=P.DZ~1) & (_do~2=P.DZ~2) || _do:=P.DZ ?};
            {? P.DZA~1<=_pom[1] & (P.DZ~1>=_pom[1] | P.DZ=date(0,0,0))
            || {? P.DZA~1=_pom[1]
               || {? P.DZA<_od | _od=date(0,0,0) || _od:=P.DZA ?}
               || _od:=date(_pom[1],1,1)
               ?};
               {? P.DZ~1=_pom[1]
               || {? P.DZ>_do || _do:=P.DZ ?}
               || _do:=date(_pom[1],12,0)
               ?}
            ?};
            {? ~_pom[11].find_tab(0,'OD',,'<=',_do,'DO',,'>=',_od)
            || _pom[11].OD:=_od;
               _pom[11].DO:=_do;
               _pom[11].add()
            || _pom[5]:=1
            ?}
         ?}
      ?};
::    Dodanie przychodów z PPK które nie zostały rozliczone na listach płac
::    dla pracowników do 26 roku życia zapis do wiersz 2 poz. 36
      {? var_pres('PPK_POD')>0
      || PPK_POD.index('POD_O');
         PPK_POD.prefix(null(),P.ref(),'T',_pom[1]);
         {? PPK_POD.first()
         || {!
            |? {? PPK_POD.PRZ_DATA<=_26ur
               || {? pit[87]+PPK_POD.WYL_KW<=_lim_ZP
                  || pit[87]+=PPK_POD.WYL_KW
                  || {? _lim_ZP>=pit[87] & (_dop:=_lim_ZP-pit[87]; _dop)>0
                     || {? PPK_POD.WYL_KW>=_dop
                        || pit[87]+=_dop;
                           pit[36]+=(PPK_POD.WYL_KW-_dop)
                        ?}
                     || pit[36]+=PPK_POD.WYL_KW
                     ?}
                  ?}
               || pit[29]+=PPK_POD.WYL_KW
               ?};
               _spr_et+=1;
               PPK_POD.next()
            !}
         ?}
      ?};
      _pom[3] & P.next()
   !};
   P.cntx_pop;
   {? pit[69]<0
   || {? pit[29]>0
      || pit[29]-=pit[69];
         pit[69]:=0
      ?}
   ?};
:: jeżeli mamy ujemny przychód w 2 wierszu i mamy koszty to "przenosimy" do wiersza źródła przychodów
   {? pit[36]<0 & pit[29]>0
   || pit[29]+=pit[36];
      pit[30]+=pit[37]
   ?};
   {? pit[29]<0 & pit[36]>0
   || pit[36]+=pit[29];
      pit[37]+=pit[30]
   ?};
   {? pit[29]<0 || pit[29]:=0 ?};
   {? pit[29]=0 & pit[30]<>0 || pit[30]:=0 ?};
   {? pit[34]<0 || pit[34]:=0 ?};
   {? pit[34]=0 & pit[35]<>0 || pit[35]:=0 ?};
   {? pit[36]<0 || pit[36]:=0 ?};
   {? pit[36]=0 & pit[37]<>0 || pit[37]:=0 ?};
   {? pit[41]<0 || pit[41]:=0 ?};
   {? pit[41]=0 & pit[42]<>0 || pit[42]:=0 ?};
   {? pit[72]<0 || pit[72]:=0 ?};
   _zku:=KST.KUZ$2;
:: dla roku 2019 zmiana sposobu wyznaczania rodzajow kosztow uzyskania. Kwoty _pom[12]=KST.KU, _pom[13]:=KST.KUZ
   {? _pom[1]=2019
   || pit[28]:={? _pom[5]
               || {? _pom[13]*_mc_2019$2+_zku*_liczmies$2=pit[30]
                  || 4
                  |? _pom[12]*_mc_2019$2+_pom[7]*_liczmies$2=pit[30]
                  || 2
                  ?}
               |? _liczmies>0
               || {? _pom[12]*_mc_2019$2+_pom[7]*_liczmies$2=pit[30] || 1
                  |? _pom[13]*_mc_2019$2+_zku*_liczmies=pit[30] || 3
                  ?}
               ?}
   || pit[28]:={? _pom[5]
               || {? _zku*_liczmies=pit[30]
                  || 4
                  |? _pom[7]*_liczmies$2=pit[30]
                  || 2
                  ?}
               |? _liczmies>0
               || {? _pom[7]*_liczmies$2 = pit[30] || 1
                  |? _zku*_liczmies      = pit[30] || 3
                  ?}
               ?}
   ?};
   &_zku;
   {? ~pit[28]
   || P_IPOD.index('OD');
      P_IPOD.prefix(P.ref);
      {? P_IPOD.last()
      || _p_ipod:=1;
         {!
         |? {? P_IPOD.OD>=date(_pom[1],1,1) & P_IPOD.OD<=date(_pom[1],12,0)
            || {? P_IPOD.KU='Z'
               || {? _pom[5] || pit[28]:=4 || pit[28]:=3 ?}; _p_ipod:=0
               ?}
            |? P_IPOD.OD<date(_pom[1],1,1)
            || {? P_IPOD.KU='Z'
               || {? _pom[5] || pit[28]:=4 || pit[28]:=3 ?}
               ?};
               _p_ipod:=0
            ?};
            _p_ipod & P_IPOD.prev()
         !}
      ?}
   ?};
   {? pit[28]=0
   ||  {? _pom[5] || pit[28]:=2 || pit[28]:=1 ?}
   ?};
   {? _spr_et & _pom[6]='T'
   || _kto:=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      popup(,'Koszty uzyskania: '+&_kto,
             'określone na koniec roku '+$_pom[1]+': ('+$pit[28]+') '+
            {? pit[28]=1 | pit[28]=2 || 'podstawowe' || 'zwiększone' ?},,"pit[28]",
            '--',,,
            '1. z jednego stosunku pracy (stosunków pokrewnych)',,"pit[28]:=1",
            '3. z jednego stosunku pracy (stosunków pokrewnych), zwiększone',,"pit[28]:=3",
            '2. z więcej niż jednego stosunku pracy (stosunków pokrewnych)',,"pit[28]:=2",
            '4. z więcej niż jednego stosunku pracy (stosunków pokrewnych), zwiększone',,"pit[28]:=4")
   ?}
?};

RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,_pom[1]);
{? RH.first
|| {? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
   {!
   |? _um:=RH.ZLE().RU().K;
      {? {? _pom[1]>=2009 || ~exec('licz_rhs','lista_licz',31) || 1 ?} & (~(',7,8,'*(','+_um+','))) &
      {? _pom[2]='Z'
      || {? ~exec('czy_prac','osoba',ZC.OSOBA,RH.DWY)
         || {? ~_pom[3] || ZC.P=P.ref() || 1 ?}
         ||
::         obsluga przypadkow ze dany pracownik nie ma wyplaty z etatu w roku-kart podatkowych
::         to nalezy PIT-11 ze zlecen wykonac dla rachunkow wystawionych podczas zatrudnienia pracownika
           _ok:=0;
           _dalej:=1;
           P.cntx_psh();
           P.index('PRACOSOB');
           P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
           {? P.first
           || KP.cntx_psh();
              KP.prefix();
              {!
              |? {? KP.find_key(P.ref(),_pom[1])
                 || _dalej:=0
                 |? P.DZA<=RH.DWY
                    & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                 || {? ~KP.find_key(P.ref(),_pom[1])
                    || _ok+=1
                    ?}
                 ?};
                 P.next() & _dalej
              !};
              KP.cntx_pop()
           ?};
           P.cntx_pop();
           &_dalej;
           &_ok
         ?}
      || {? ~_pom[3]
         || _pref:=P.ref;
            _ok:=0;
            P.cntx_psh;
            P.index('PRACOSOB');
            P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
            {? P.first
            || {!
               |? {? P.DZA<=RH.DWY
                     & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                  || _ok:=(_pref=P.ref & _spr_et); 0
                  || P.next
                  ?}
               !}
            ?};
            P.cntx_pop;
            &_ok
         || _pom[10] & _spr_et | exec('czy_prac','osoba',P.OSOBA,RH.DWY) & _spr_et
         ?}
      ?}
      || _src:=
            {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
               RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=',__PIT,'DEKL','NR','=',__WER)
            || RU_DEKL.WIERSZ<>0
            || 2
            ?};
         {? _src
         || {? ~__par.find_key('Z',#ZC.P)
            || __par.RODZAJ:='Z'; __par.REF:=#ZC.P; __par.add(1)
            ?};
            {? _Zagrdat<RH.DWY || _Zagrdat:=RH.DWY  ?};
            _skl:=exec('licza_rhs','lista_licz',5711,5721);
::          Odjęcie składek z bieżącego roku w wyniku blokady pobieramy wg rubryki 951
            _skl-=exec('licz_rhs','lista_licz',951);
            _skl_kor:=0;
            KORN_Z.index('RH');
            KORN_Z.prefix(RH.ref());
            {? KORN_Z.first()
            || {? var_pres('_tabrub')>100 || obj_del(_tabrub) ?};
               _tabrub:=__RUB.sys_rub(5711,RH.DWY);
               {? var_pres('_tabch')>100 || obj_del(_tabch) ?};
               _tabch:=__RUB.sys_rub(5721,RH.DWY);
               _ZP:=_uzp:=0;
               {? RH.DWY<=_26ur & '1'*_um
               || _ZP:=1;
                  _ZWPOD:=KST.ZWPOD;
                  _uzp:=exec('czy_ulga_U26','lista_licz',RH.DWY);
                  KST.ZWPOD:=&_ZWPOD
               ?};
               KOR_Z.index('KORN_Z');
               {!
               |? {? KORN_Z.DW~1=_pom[1]
                  || {? _tabrub.first()
                     || {!
                        |? KOR_Z.prefix(KORN_Z.ref(),__RUB.ref(_tabrub.RN));
                           {? KOR_Z.first
                           || {? ~_ZP
                              || _skl_kor+=KOR_Z.KW
                              || {? _uzp
                                 || pit[71]+=KOR_Z.KW;
                                    pit[88]+=KOR_Z.KW
                                 || pit[70]+=KOR_Z.KW;
                                    pit[55]+=KOR_Z.KW
                                 ?}
                              ?}
                           ?};
                           _tabrub.next()
                        !}
                     ?};
                     {? _tabch.first()
                     || {!
                        |? KOR_Z.prefix(KORN_Z.ref(),__RUB.ref(_tabch.RN));
                           {? KOR_Z.first
                           || {? ~_ZP
                              || _skl_kor+=KOR_Z.KW
                              || {? _uzp
                                 || pit[71]+=KOR_Z.KW;
                                    pit[88]+=KOR_Z.KW
                                 || pit[70]+=KOR_Z.KW;
                                    pit[55]+=KOR_Z.KW
                                 ?}
                              ?}
                           ?};
                           _tabch.next()
                        !}
                     ?}
                  ?};
                  KORN_Z.next()
               !};
               {? var_pres('_tabrub')>100 || obj_del(_tabrub); &_tabrub ?};
               {? var_pres('_tabch')>100 || obj_del(_tabch); &_tabch ?};
               &_ZP; &_uzp
            ?};
            {? _src=1
            || __transl();
               _wiersz:=RU_DEKL.WIERSZ;
::             sprawdzenie czy mamy ZP dla wybranego wiersza w 2019 roku to wiersz 5 dla umowy-zlecenia
               _czy_zp:=0;
               _zp_skl:=0;
               {? _wiersz=5
               || {? ~_po_list | (_pom[1]=2019 & RH.DWY<=date(2019,7,0))
                  || _wiersz:=5
                  || {? RH.DWY>_26ur
                     || _wiersz:=5
                     |? RH.DWY<=_26ur
                     || _wiersz:=6;
                        _czy_zp:=1
                     ?};
::                   Składki od zwolnionego przychodu atrybut 9026
                     _zp_skl:=exec('licza_rhs','lista_licz',9026);
::                   Składki społeczne do limitu ZP atrybut 9026
                     pit[71]+=_zp_skl;
::                   Składki zdrowotne do limitu ZP atrybut 9027
                     pit[74]+=exec('licza_rhs','lista_licz',9027);
::                   Przychody zwolnione do limitu ZP w danym roku powiązane z pozycjami 86 i 88
::                   Przychód ZP do limitu ZP pobieramy atrybut 9022
                     pit[88]+=exec('licza_rhs','lista_licz',9022)
                  ?}
               ?};
               _len:=obj_len(__wk[_wiersz]);
               _ra_92:=exec('licza_rhs','lista_licz',92);
               _ra_93:=exec('licza_rhs','lista_licz',93);
               'Koszty 50% sa liczone tylko na 7-ej pozycji.';
               'Jezeli biezacy wiersz nie ma 7-ej pozycji - kosztow nie liczymy';
               _ku:=RH.ZLE().RU().PKU;
               _przy50:={? _len>6 & __wk[_wiersz][7] & _ku=50 || _skl+_ra_92+_skl_kor ?};
               {! _nx:=2.._len
               |! _poz:=__wk[_wiersz][_nx];
                  {? _poz
                  || pit[_poz]+=
                        {? _nx=2 || {? _len>6 & __wk[_wiersz][7] & _ku=50 || 0 || _skl+_ra_92+_skl_kor-_zp_skl ?}
                        |? _nx=3 || _ra_93
                        |? _nx=4 || _skl+_ra_92-_ra_93+_skl_kor-_zp_skl
                        |? _nx=5 || 0
                        |? _nx=6 || exec('licza_rhs','lista_licz',961)
                        |? _nx=7 || _przy50
                        || 'przypadki nieuwzglednione'; 0
                        ?}
                  ?}
               !};
               &_len;
               {? ~_czy_zp
               ||
::                Składki społeczne
                  pit[69]+=(_skl+_skl_kor);
::                Składki zdrowotne
                  pit[72]+=exec('licza_rhs','lista_licz',57412);
::                Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                  pit[72]+=exec('licz_rhs','lista_licz',794)
               ||
::                Składki społeczne do wiersza 6
                  pit[70]+=(_skl-_zp_skl+_skl_kor);
::                Składki zdrowotne do wiersza 6
                  pit[73]+=exec('licza_rhs','lista_licz',57412);
::                Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                  pit[73]+=exec('licz_rhs','lista_licz',794)
               ?}
            |? '456'*_um
            ||
::             umowy o dzielo, rada nadzorcza
               pit[47]+=(_skl+exec('licza_rhs','lista_licz',92)+_skl_kor);
               pit[48]+=exec('licza_rhs','lista_licz',93);
               pit[50]+=exec('licza_rhs','lista_licz',961);
::             Składki społeczne
               pit[69]+=(_skl+_skl_kor);
::             Składki zdrowotne
               pit[72]+=exec('licza_rhs','lista_licz',57412);
::             Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
               pit[72]+=exec('licz_rhs','lista_licz',794)
            |? '1'*_um
            ||
::             umowy zlecenia od 2019 roku
               {? ~_po_list | (_pom[1]=2019 & RH.DWY<=date(2019,7,0))
               || pit[51]+=(_skl+exec('licza_rhs','lista_licz',92)+_skl_kor);
                  pit[52]+=exec('licza_rhs','lista_licz',93);
                  pit[54]+=exec('licza_rhs','lista_licz',961);
::                Składki społeczne
                  pit[69]+=(_skl+_skl_kor);
::                Składki zdrowotne
                  pit[72]+=exec('licza_rhs','lista_licz',57412);
::                Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                  pit[72]+=exec('licz_rhs','lista_licz',794)
               ||
::                Składki od zwolnionego przychodu atrybut 9026
                  _zp_skl:=exec('licza_rhs','lista_licz',9026);
                  {? RH.DWY>_26ur
                  ||
::                   Przychody z rachunków wypłaconych po ukończeniu 26 roku życia do wiersza 5
                     pit[51]+=(_skl+exec('licza_rhs','lista_licz',92)+_skl_kor);
                     pit[52]+=exec('licza_rhs','lista_licz',93);
                     pit[54]+=exec('licza_rhs','lista_licz',961);
::                   Składki społeczne
                     pit[69]+=(_skl+_skl_kor);
::                   Składki zdrowotne
                     pit[72]+=exec('licza_rhs','lista_licz',57412);
::                   Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                     pit[72]+=exec('licz_rhs','lista_licz',794)
                  |? RH.DWY<=_26ur
                  ||
::                   Przychody z rachunków wypłaconych do ukończenia 26 roku życia włącznie do wiersza 6
                     pit[55]+=(exec('licza_rhs','lista_licz',92)+_skl-_zp_skl+_skl_kor);
::                   Koszty uzyskania wiersz 6
                     pit[56]+=exec('licza_rhs','lista_licz',93);
::                   Zaliczka podatkowa wiersz 6
                     pit[58]+=exec('licza_rhs','lista_licz',961);
::                   Składki społeczne do wiersza 6
                     pit[70]+=(_skl-_zp_skl+_skl_kor);
::                   Składki zdrowotne do wiersza 6
                     pit[73]+=exec('licza_rhs','lista_licz',57412);
::                   Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                     pit[73]+=exec('licz_rhs','lista_licz',794)
                  ?};
::                   Składki społeczne do limitu ZP atrybut 9026
                     pit[71]+=_zp_skl;
::                   Składki zdrowotne do limitu ZP atrybut 9027
                     pit[74]+=exec('licza_rhs','lista_licz',9027);
::                   Przychody zwolnione do limitu ZP w danym roku powiązane z pozycjami 86 i 88
::                   Przychód ZP do limitu ZP pobieramy atrybut 9022
                     pit[88]+=exec('licza_rhs','lista_licz',9022)
               ?}
            |? '23m'*_um
            ||
::             prawa autorskie
               _ra_92:=exec('licza_rhs','lista_licz',92);
               _ra_93:=exec('licza_rhs','lista_licz',93);
               {? RH.ZLE().RU().PKU=50
               || pit[62]+=_skl+_ra_92+_skl_kor
               || pit[59]+=_skl+_ra_92+_skl_kor
               ?};
               pit[63]+=_ra_93;
               pit[61]+=exec('licza_rhs','lista_licz',961);
::             Składki społeczne
               pit[69]+=(_skl+_skl_kor);
::             Składki zdrowotne
               pit[72]+=exec('licza_rhs','lista_licz',57412);
::             Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
               pit[72]+=exec('licz_rhs','lista_licz',794)
            ||
::             inne zrodla
               pit[64]+=(_skl+exec('licza_rhs','lista_licz',92)+_skl_kor);
               pit[65]+=exec('licza_rhs','lista_licz',93);
               pit[68]+=exec('licza_rhs','lista_licz',961);
::             Składki społeczne
               pit[69]+=(_skl+_skl_kor);
::             Składki zdrowotne
               pit[72]+=exec('licza_rhs','lista_licz',57412);
::             Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
               pit[72]+=exec('licz_rhs','lista_licz',794)
            ?}
         ?};
::       obsluga zasilkow dla zleceniobiorcy od 2018 blok F od wersji PIT-11(24)-poprzednio na PIT-8C do 2017 roku
         {? RH.ZAS='T'
         || ZC_N.prefix(RH.ref);
            {? ZC_N.first()
            || {!
               |? 'wyplacone zasilki:';
                  _zas_kod:=ZC_N.R().RN;
                  {? __RUB.sys_attr(_zas_kod,1221,ZC_N.OD) | _zas_kod>=510 & _zas_kod<=517
                  || 'chorobowe';
                     _zasilek[1]+=ZC_N.KW
                  |? __RUB.sys_attr(_zas_kod,1227,ZC_N.OD) | _zas_kod=524
                  || 'macierzynskie';
                     _zasilek[2]+=ZC_N.KW
                  |? __RUB.sys_attr(_zas_kod,1225,ZC_N.OD) | _zas_kod=530
                  || 'opiekuncze';
                     _zasilek[3]+=ZC_N.KW
                  |? __RUB.sys_attr(_zas_kod,1222,ZC_N.OD) | _zas_kod=537
                  || 'swiadczenia reh.';
                     _zasilek[5]+=ZC_N.KW
                  ?};
                  ZC_N.next()
               !}
            ?}
         ?}
      ?};
      RH.next
   !};
:: przepisanie wartosci do pozycji pit, jesli są zasilki to szukamy wolnej pozycji, a jak brak to do ostatniej
   _zas_kw:=0;
   {! _nx:=1..obj_len(_zasilek) |! _zas_kw+=_zasilek[_nx] !};
   {? _zas_kw
   || {! _nx:=1..obj_len(_zasilek)
      |! _zas_kw:=0;
         _zas_op:='';
         _zas_kw+=_zasilek[_nx];
         _zas_op+={? _zasilek[_nx]
                  || {? _nx=1 || 'zasiłki chorobowe, '
                     |? _nx=2 || 'zasiłki macierzyńskie, '
                     |? _nx=3 || 'zasiłki opiekuńcze, '
                     |? _nx=5 || 'świadczenia rehabilitacyjne, '
                     || ''
                     ?}
                  || ''
                  ?};
         {? +_zas_op || _zas_op:=_zas_op-2 ?};
         {? _zas_kw
         || {! _ix:=1..3
            |? _zas_kw
            |! {? pit[76+(_ix-1)*2]='' & pit[77+(_ix-1)*2]=0
               || pit[76+(_ix-1)*2]:=_zas_op;
                  pit[77+(_ix-1)*2]:=_zas_kw;
                  _zas_kw:=0
               ?}
            !};
            {? _zas_kw
            || pit[80]+=', '+_zas_op;
               pit[81]+=_zas_kw
            ?}
         ?}
      !}
   ?}
?};
:: Dodanie przychodów z PPK które nie zostały rozliczone z rachunkow
{? var_pres('PPK_POD')>0
|| PPK_POD.cntx_psh();
   PPK_POD.index(__NdPOD);
   PPK_POD.prefix(null(),P.OSOBA,'T',_pom[1]);
   {? PPK_POD.first()
   || RH.cntx_psh();
      {!
      |? {? PPK_POD.WYL_RH<>null()
         || _um:=PPK_POD.WYL_RH().ZLE().RU().K;
            {? {? _pom[1]>=2009 || ~exec('licz_rhs','lista_licz',31) || 1 ?} & (~(',7,8,'*(','+_um+','))) &
               {? _pom[2]='Z'
               || {? ~exec('czy_prac','osoba',ZC.OSOBA,RH.DWY)
                  || {? ~_pom[3] || ZC.P=P.ref() || 1 ?}
                  ||
::         obsluga przypadkow ze dany pracownik nie ma wyplaty z etatu w roku-kart podatkowych
::         to nalezy PIT-11 ze zlecen wykonac dla rachunkow wystawionych podczas zatrudnienia pracownika
                    _ok:=0;
                    _dalej:=1;
                    P.cntx_psh();
                    P.index('PRACOSOB');
                    P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
                    {? P.first
                    || KP.cntx_psh();
                       KP.prefix();
                       {!
                       |? {? KP.find_key(P.ref(),_pom[1])
                          || _dalej:=0
                          |? P.DZA<=RH.DWY
                             & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                          || {? ~KP.find_key(P.ref(),_pom[1])
                             || _ok+=1
                             ?}
                          ?};
                          P.next() & _dalej
                       !};
                       KP.cntx_pop()
                    ?};
                    P.cntx_pop();
                    &_dalej;
                    &_ok
                  ?}
               || {? ~_pom[3]
                  || _pref:=P.ref();
                     _ok:=0;
                     P.cntx_psh();
                     P.index('PRACOSOB');
                     P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
                     {? P.first()
                     || {!
                        |? {? P.DZA<=RH.DWY
                              & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                           || _ok:=(_pref=P.ref() & _spr_et); 0
                           || P.next()
                           ?}
                        !}
                     ?};
                     P.cntx_pop();
                     &_ok
                  || _pom[10] & _spr_et | exec('czy_prac','osoba',P.OSOBA,RH.DWY) & _spr_et
                  ?}
               ?}
            || {? '456'*_um
               ||
::                umowy o dzielo 20%, rady nadzorcze
                  pit[47]+=PPK_POD.WYL_KW
               |? '1'*_um
               ||
::                umowy - zlecenia dla zleceniobiorców do 26 roku życia zapis do wiersz 6 poz. 55
                  {? PPK_POD.PRZ_DATA<=_26ur
                  || {? pit[88]+PPK_POD.WYL_KW<=_lim_ZP
                     || pit[88]+=PPK_POD.WYL_KW
                     || {? _lim_ZP>=pit[88] & (_dop:=_lim_ZP-pit[88]; _dop)>0
                        || {? PPK_POD.WYL_KW>=_dop
                           || pit[88]+=_dop;
                              pit[55]+=(PPK_POD.WYL_KW-_dop)
                           ?}
                        || pit[55]+=PPK_POD.WYL_KW
                        ?}
                     ?}
                  || pit[51]+=PPK_POD.WYL_KW
                  ?}
               |? '23m'*_um
               ||
::                prawa autorskie
                  pit[62]+=PPK_POD.WYL_KW
               ||
::                inne zrodla
                  pit[64]+=PPK_POD.WYL_KW
               ?}
            ?}
         ?};
         PPK_POD.next()
      !};
      RH.cntx_pop()
   ?};
   PPK_POD.cntx_pop()
?};

:: zamiana procentu z 9 na 7,75 dla składki zdrowotnej od zwolnionego przychodu
{? _pom[1]=2019 & pit[74]
|| _par:='ZP-7.75';
   _tresc:='ZP-7.75';
   {? exec('get','#profile','profile.txt',_tresc,_par)<>'1'
   || _skl:=pit[74];
      _proc_9:=9;
      _proc_7:=7.75;
      _wyn:=100*_skl/_proc_9;
      _wyn*=_proc_7/100;
      pit[74]:=_wyn$2
   ?}
?};
:: dla osób do 26 roku życia w wierszu 2 nie mogą być ujemne składki społeczne i zdrowotne
:: w pozycji 70, 71, 73
{? (pit[36]+pit[41])=0 & (pit[70]<>0 | pit[71]<0 | pit[73]<>0)
|| {? pit[70]<>0
   || {? pit[69]
      || pit[69]+=pit[70];
         pit[70]:=0
      |? pit[71]
      || pit[71]+=pit[70];
         pit[70]:=0
      ?}
   ?};
   {? pit[73]<>0
   || {? pit[72]
      || pit[72]+=pit[73];
         pit[73]:=0
      |? pit[74]
      || pit[74]+=pit[73];
         pit[73]:=0
      ?}
   ?};
   {? pit[71]<0 || pit[69]+=pit[71]; pit[71]:=0 ?}
?};
{? pit[69]<0 || pit[69]:=0 ?};
{? pit[70]<0 || pit[70]:=0 ?};
{? pit[71]<0 || pit[71]:=0 ?};
{? pit[72]<0 || pit[72]:=0 ?};
{? pit[73]<0 || pit[73]:=0 ?};
{? pit[74]<0 || pit[74]:=0 ?};
:: kwota zasiłków z etatu wykazywana w wierszu 8 Inne źródła
:: nie wykazujemy ujemnych kwot zasiłków razem
{? _et_zas<0
|| _et_zas:=0
?};
{? _et_zs26<0
|| _et_zs26:=0
?};
::jeżeli kwota zasiłków jest wyższa od kwoty przychodu z etatu
::to nie pobieramy pełnej kwoty zasiłku tylko obniżamy do wysokości przychodu na listach płac
{? pit[29]<_et_zas || _et_zas:=pit[29] ?};
pit[64]+=_et_zas;
:: kwota zasiłków z etatu wykazywana w wierszu 8 Inne źródła do ukończenia 26 roku życia
pit[64]+=_et_zs26;
:: przychód z pozycji 29 z etatu pomniejszamy o kwota zasiłków z etatu
pit[29]-=_et_zas;
{? pit[29]<0 || pit[29]:=0 ?};
:: kwota podatku od zasiłku z etatu wykazujemy w wierszu 1 jeżeli mamy przychody z etatu, jeżeli nie to w wierszu 8
{? (pit[29]+pit[34])=0 & _et_zas
|| pit[33]-=_pd_zas;
   pit[68]+=_pd_zas
?};
:: kwota podatku od zasiłku z etatu wykazujemy w wierszu 1 jeżeli mamy przychody z etatu, jeżeli nie to w wierszu 8
:: otrzymanych od 1.08.2019 do ukończenia 26 roku życia
{? _et_zs26
|| {? pit[29]+pit[34]=0
   || pit[68]+=_pd_zs26
   || pit[33]+=_pd_zs26
   ?}
?};
:: Po korektach ZP 12.51_71 dla wiersza 2 mamy tylko podatek bez przychodu
:: to kwota podatku przepiszemy do pit[33] jeżeli mamy przychód pozycja 29 i 34
:: lub do wiersza 8 pozycja 68 jeżeli mamy kwota w pozycji 64
{? pit[40]<>0 & (pit[36]+pit[41])=0
|| {? (pit[29]+pit[34])>0
   || pit[33]+=pit[40];
      pit[40]:=0
   |? pit[64]>0
   || pit[68]+=pit[40];
      pit[40]:=0
   ?}
?};
:: Jeżeli mamy zerowy przychód pit[29] oraz koszty pit[30] oraz pit[33]
:: to zerujemy koszty pit[30] oraz kwota pit[33] trzeba przepisać do kwoty zaliczki od zasiłku pit[68]
{? pit[29]=0 & pit[30]<>0 & pit[33]<>0
|| pit[30]:=0;
   {? pit[68]
   || pit[68]+=pit[33];
      pit[33]:=0
   ?}
?};
{? pit[33]<0 || pit[33]:=0 ?};
{? pit[40]<0 || pit[40]:=0 ?};
{? pit[68]<0 || pit[68]:=0 ?};
:: Po korektach ZP 12.51_71 dla wiersza 6 mamy tylko podatek bez przychodu
:: to kwota podatku przepiszemy do pit[54] jeżeli mamy przychód pozycja 51
{? pit[58]<>0 & pit[55]=0
|| {? pit[51]>0
   || pit[54]+=pit[58];
      pit[58]:=0
   ?}
?};
{? pit[54]<0 || pit[54]:=0 ?};
{? pit[58]<0 || pit[58]:=0 ?};
:: Po korektach ZP 12.51_71 dla wiersza 6 mamy tylko ujemny przychod
:: to kwota przychod przepiszemy do pit[71] jeżeli mamy kwota
{? pit[55]<0 & pit[71]<>0
|| {? pit[71]>0
   || pit[71]+=pit[55];
      pit[55]:=0
   ?}
?};
{? pit[71]<0 || pit[71]:=0 ?};
pit[31]:=pit[29]+pit[34]-pit[30]-pit[35]; {? pit[31]<0 || pit[31]:=0 ?};
pit[38]:=pit[36]+pit[41]-pit[37]-pit[42]; {? pit[38]<0 || pit[38]:=0 ?};
pit[49]:=pit[47]-pit[48]; {? pit[49]<0 || pit[49]:=0 ?};
pit[53]:=pit[51]-pit[52]; {? pit[53]<0 || pit[53]:=0 ?};
pit[57]:=pit[55]-pit[56]; {? pit[57]<0 || pit[57]:=0 ?};
pit[60]:=pit[59]+pit[62]-pit[63]; {? pit[60]<0 || pit[60]:=0 ?};
pit[66]:=pit[64]-pit[65]; {? pit[66]<0 || pit[66]:=0 ?};
pit[82]:=pit[75]+pit[77]+pit[79]+pit[81]; {? pit[82]<0 || pit[82]:=0 ?};
:: Zwolnione przychody z okresleniem limitu w danym roku 2019 i kolejne lata na podstawie stalych systemu
{? var_pres('ZWPODW',KST)>0 & var_pres('ZWPOD',KST)>0
|| {? pit[87]>KST.ZWPOD || pit[87]:=KST.ZWPOD ?};
   {? pit[88]>KST.ZWPOD || pit[88]:=KST.ZWPOD ?};
   {? pit[87]<0 || pit[87]:=0 ?};
   {? pit[88]<0 || pit[88]:=0 ?};
   pit[86]:=pit[87]+pit[88];
   {? pit[86]<0 || pit[86]:=0 ?};
   {? pit[86]>KST.ZWPOD || pit[86]:=KST.ZWPOD ?}
?};
_dochzw:=pit[32]+pit[39]+pit[45]+pit[67];
_blokG:=pit[83]+pit[84]+pit[85]+pit[86];
_przych:=pit[29]+pit[34]+pit[36]+pit[41]+pit[43]+pit[47]+pit[51]+pit[55]+pit[59]+pit[62]+pit[64];

{? ~(pit[92]:=_przych+pit[82]+_dochzw+_blokG)
|| return(_wynik)
?};

_adus:=exec('adresdous','osoba',_pom[1]);
{? #(_adus+1)
|| pit[6]:=OS_US.US().NU+
           {? +US.UU || ', '+US.UU || '' ?}+
           {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?};
   us_podat:=OS_US.US
|| pit[6]:='';
   us_podat:=null
?};
::Ustalenie pola VAT_DEK.POD rodzaj Podatnika
{? var_pres('PODFIZ',KST)>0
|| pit[93]:=KST.PODFIZ
?};
::Ustalenie pola VAT_DEK.REZYDENT pole dodane w wersji 12.41 od wersji PIT-11(22)
:: jesli rezydent placi podatki w Polsce to 'T' dla nierezydenta 'N'
::ustalenie na podstawie kartoteki OS_ZNIP
::ustawienie daty sprawdzenia danych w OS_ZNIP na podstawie _Zagrdat uzyskanych przychodow z etatu i zlecen
::Brak obsługi zmiany danych identyfikacyjnych w roku podatkowym
_dataBad:={? _Zagrdat<>date(0,0,0) & _Zagrdat<date(__Rok,12,0) || _Zagrdat || date(__Rok,12,0) ?};
{? exec('szukaj_osznip','edeklar',P.OSOBA,_dataBad)
||
:: Zagraniczny numer identyfikacyjny podatnika
   pit[11]:='N';
   pit[13]:=OS_ZNIP.ZNIP;
:: Rodzaj numeru identyfikacyjnego
   pit[14]:=OS_ZNIP.RZNIP;
:: Kraj wydania numeru identyfikacyjnego
   pit[15]:=OS_ZNIP.KRAJZNIP
|| pit[11]:='T';
   pit[14]:=null();
   pit[15]:=null()
?};
{? #(1+_adus)
|| pit[19]:=OS_ADRES.KRAJ;
   pit[20]:=OS_ADRES.WOJEWODZ;
   pit[21]:=OS_ADRES.POWIAT;
   pit[22]:=OS_ADRES.GMINA;
   pit[23]:=OS_ADRES.ULICA;
   pit[24]:=OS_ADRES.DOM;
   pit[25]:=OS_ADRES.LOKAL;
   pit[26]:=OS_ADRES.MIASTO;
   pit[27]:=OS_ADRES.KOD
|| {! _nx:=19..27 |! pit[_nx]:='' !};
   pit[19]:=null
?};

{? _a
|| P.cntx_psh();
   P.clear();
   DEKL_POD.cntx_psh();
   DEKL_POD.clear();
   {? __par.first()
   || {!
      |? DEKL_POD.blank();
         DEKL_POD.PIT:='(E)PIT-11';
         {? __par.RODZAJ='E' & P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='E'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         |? P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='Z'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         ?};
         {? EDIT_VAR.PIT_RODZ=''
         || DEKL_POD.DATA:=VAT_DEK.DATA
         || DEKL_POD.DATA:={? PIT_EDIT.DATA<>date(0,0,0) || PIT_EDIT.DATA || VAT_DEK.DATA ?}
         ?};
         DEKL_POD.S1:=_przych;
         DEKL_POD.S2:=pit[30]+pit[35]+pit[37]+pit[42]+pit[48]+pit[52]+pit[56]+pit[63]+pit[65];
         DEKL_POD.S3:=pit[33]+pit[40]+pit[46]+pit[50]+pit[48]+pit[54]+pit[58]+pit[61]+pit[68];
         DEKL_POD.USER:=OPERATOR.USER;
         DEKL_POD.add();
         __par.next()
      !}
   ?};
   DEKL_POD.cntx_pop();
   P.cntx_pop()
?};

{? pit[92]
|| {? _a & pit[3][9]<>date(0,0,0)
   || exec('przekaz','giodo',pit[3][9],
           'Przekazanie danych na formularzu PIT-11',
           'odbiorcą danych jest:',
           pit[6])
   ?};
   _wynik:=1
?};
_wynik


\kiedy_26ur
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ATA [12.51]
:: OPIS: Zwraca datę 26 urodzin
::   WE: _a - data urodzenia
::   WY: data 26 urodzin
::----------------------------------------------------------------------------------------------------------------------
_dataur:=_a;
_data26ur:=date(0,0,0);
_26ur:=26;
{? var_pres('ZWPODW',KST)>0
|| _26ur:=KST.ZWPODW
?};
_rok:=_dataur~1;
_mc:=_dataur~2;
_dzien:=_dataur~3;
_data26ur:=date(_rok+_26ur,_mc,{? _mc=2 & _dzien=29 || 0 || _dzien ?});
_data26ur


\licza_ls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.51]
:: OPIS: Wyliczenie kwoty z LS dla listy atrybutow.
::   WE: _a - symbol atrybutu
::       _b - symbol atrybutu
::       ...
::   WY: suma kwot
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || return(0) ?};

_start:=date(O.RP,O.MP,0);
_odp:=0;
_tn:=type_of(0);
{! _nra:=1 .. _
|! {? type_of(_[_nra])=_tn
   || _tab:=__RUB.sys_zakres(_[_nra],_start);
      {? _tab.first() || {! |? _odp+=exec('licz_ls','pit',_tab.RN_P,_tab.RN_K); _tab.next() !} ?};
      obj_del(_tab); &_tab
   ?}
!};
_odp


\licz_ls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.51]
:: OPIS: Wyliczenie kwoty z LS dla parametru lub zakresu numerow rubryk dla danego rachunku.
::       Bufor tabeli P i O jest okreslony
::   WE: _a - nr rubryki (od)
::       [_b] - nr rubryki (do)
::   WY: kwota skladnika rachunku
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || return(0) ?};
{? var_pres('_b')<>type_of(0) || _b:=_a ?};
LS.cntx_psh();
LS.use(-O.LT);
LS.index('PRACNRRU');
_kw:=0;
{! _ind:=_a.._b
|! LS.prefix(P.ref(),_ind);
   {? LS.first
   || {!
      |? _kw+=LS.KW$2;
         LS.next
      !}
   ?}
!};
LS.cntx_pop();
_kw


\obl_pit4r_10
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.51]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla deklaracji PIT 4R
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - opcjonalny numer wersji e-deklaracji. W przypadku 10 wersji jest podany jako argument funkcji
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 10 ?};
_vern:=_a;
_Msc:=1; _Rok:=__Rok;
exec('init_tab_1','pit');

_dod_zap:="__TAB.blank();
      {? var_pres('_f')<>type_of(0) || _f:=0 ?};
      __TAB.LP:=_a;
      __TAB.O:=_b;
      __TAB.NR:=_d;
      __TAB.NRK:=_e;
      {! _ind:=1..6
      |! {? _f>=_ind
         || ($('__TAB.P'+$_ind+':=0'))()
         || ($('__TAB.P'+$_ind+':=(_a+_b)'))(_c,_ind-_f)
         ?}
      !};
      __TAB.add()";

_par293:=PAR_SKID.get(293);

_dod_zap(4,'4. Zaliczki na podatek pobrane od innych należności,',57,4,0);
_dod_zap(4,'w tym wynikających z umowy aktywizacyjnej',63,4,6);
_dod_zap(6,'6. Zaliczki na podatek, których pobór został',81,6,0);
_dod_zap(6,'ograniczony na podstawie art.32 ust.2 ustawy',87,6,6);
_dod_zap(7,'7. Zaliczki, które przypadały do pobrania w związku z ograniczeniem poboru',93,7,0);
_dod_zap(7,'zaliczek w poprzednich miesiącach na podstawie art.32 ust.2 ustawy',99,7,6);
_dod_zap(9,'9. Pobrany podatek, przekazany na PFRON',109,9,0);
_dod_zap(9,'oraz zakładowy fundusz rehabilitacji osób niepełnosprawnych',115,9,6);
:: Jeśli parametr 293 jest wyłączony, to wynagrodzenie z tytułu terminowego wpłacania podatku wypełniamy ręcznie
{? _par293<>'T'
|| _dod_zap(11,'11. Wynagrodzenie z tytułu terminowego wpłacania podatku dochodowego',133,11,0);
   _dod_zap(11,'za poszczególne miesiące, zgodnie z art.28 Ordynacji podatkowej',139,11,6)
?};
__TAB.select;

_dod_zap(0,'',9,0,0);
_dod_zap(0,'',21,0,6);
_dod_zap(1,'',15,1,0);
_dod_zap(1,'',27,1,6);
_dod_zap(2,'',33,2,0);
_dod_zap(2,'',39,2,6);
_dod_zap(3,'',45,3,0);
_dod_zap(3,'',51,3,6);
_dod_zap(5,'',69,5,0);
_dod_zap(5,'',75,5,6);
_dod_zap(8,'',105,8,0);
_dod_zap(10,'',121,10,0);
_dod_zap(10,'',127,10,6);
:: Jeśli parametr 293 jest włączony, to automatycznie wyliczamy wynagrodzenie z tytułu terminowego wpłacania podatku
:: bez możliwości poprawienia wartości w okienku
{? _par293='T'
|| _dod_zap(11,'',133,11,0);
   _dod_zap(11,'',139,11,6)
?};
_dod_zap(12,'',145,12,0);
_dod_zap(12,'',151,12,6);
__TAB.index(__TAB.ndx_tmp(,1,'NR',,,'NRK',,));
__TAB.prefix();
_czy_rap:=0;
P.cntx_psh();
P.index('PRACOSOB');
P.prefix(exec('ref_firma','ustawienia'),'P');
KP.cntx_psh();
KP.index('_KARTAPO');
RH.cntx_psh();
LS.cntx_psh();
O.cntx_psh();
RH.index('DOK');
{!
|? _osoba:=null; _licz_os:=0;
   {? P.first()
   || {!
      |? {? _osoba<>P.OSOBA || _osoba:=P.OSOBA; _licz_os:=0 ?};
         KP.prefix(P.ref,_Rok,_Msc);
         {? KP.first()
         || {? __TAB.find_key(0,{? _Msc<7 || 0 || 6 ?})
            || {? KP.S4<>0 & ~_licz_os || _licz_os:=1; ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=1'))(); __TAB.put() ?}
            ?};
            {? __TAB.find_key(1,{? _Msc<7 || 0 || 6 ?})
            || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=KP.S4$0'))(); __TAB.put()
            ?};
            _czy_rap+=KP.S4
         ?};
         P.next()
      !}
   ?};
   RH.prefix(exec('ref_firma','ustawienia'),_Rok,_Msc);
   {? RH.first()
   || _suma:="
         _wyn:=0;
         _tab:=__RUB.sys_rub(_a);
         {? _tab.first()
         || {!
            |? LS.prefix(RH.ref(),_tab.RN);
               {? LS.first() || {! |? _wyn+=LS.KW$0; LS.next() !} ?};
               _tab.next()
            !}
         ?};
         obj_del(_tab);
         _wyn
      ";
      {!
      |? {? ~exec('licz_rhs','lista_licz',31)
         || LS.use(RH.O().LT);
            LS.index('ZLEC');
            _src:=
               {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
                  RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=','PIT4R','DEKL','NR','=',_vern)
               || RU_DEKL.WIERSZ
               || _um:=RH.ZLE().RU().K;
                  {? 'yv'*_um
                  || 2
                  || 3
                  ?}
               ?};
            {? _src
            || {? __TAB.find_key(_src,{? _Msc<7 || 0 || 6 ?})
               || _wyn:=_suma(961);
                  _czy_rap+=_wyn;
                  ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+=_a'))(_wyn);
                  __TAB.put()
               ?}
            ?}
         ?};
         RH.next
      !}
   ?};
   _Msc+=1;
   _Msc<=12
!};
RH.cntx_pop();
LS.cntx_pop();
O.cntx_pop();
KP.cntx_pop();
P.cntx_pop();
_suma:="__TAB.cntx_psh(); __TAB.prefix();
       {? __TAB.find_key(_[7],_[8])
       || {! _ind:=1..6 |! ($('__TAB.K'+$_ind+'+=_a'))(_[_ind]) !}; __TAB.put()
       ?}; __TAB.cntx_pop()";

__TAB.prefix(1);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,5,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(2);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,5,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(3);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,5,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(4);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,5,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(5);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,10,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(7);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,10,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(8);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,10,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(6);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,10,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(9);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,10,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(10);
{? __TAB.first()
|| {!
   |? {! _ind:=1..6 |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?} !}; __TAB.put();
         _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,12,__TAB.NRK); __TAB.next()
      !}
?};
:: Automatyczne uzupełnienie wynagrodzenia z tytułu terminowego wpłacania podatku jeśli włączony parametr 293
:: Wartości są ustalane na podstawie pozycji "Pobrany podatek do przekazania do urzędu skarbowego"
:: Nie bierzemy pod uwagę wartości z tabeli DEKL_POD i kwot potrąceń wprowadzonych przez użytkownika
{? _par293='T'
:: Tablica do wyliczania wynagrodzenie z tytułu terminowego wpłacania podatku dochodowego
|| _art28:=obj_new(12);
:: Wyliczenie kwot potrącenia na podstawie wartości pobranego podatku (Pobrany podatek * 0,3%)
:: Zmiany od 1 lipca 2022 (Pobrany podatek * 0,6%)
   _Msc:=0;
   __TAB.prefix(10);
   {? __TAB.first()
   || {!
      |? {! _ind:=1..6
         |! _Msc+=1;
            exec('czytaj','#stalesys',date(_Rok,_Msc,0),KST,'PW_TWP');
            _art28[_Msc]:=($('__TAB.K'+$_ind))()*(KST.PW_TWP/100)
         !};
         __TAB.next()
      !}
   ?};
:: Wypełnienie __TAB wyliczonymi wartościami (zaokrąglamy dodatkowo do pełnych złotych)
   _lp:=0;
   __TAB.prefix(11);
   {? __TAB.first()
   || {!
      |? {! _ind:=1..6 |! ($('__TAB.K'+$_ind+':=_a'))(_art28[_lp+=1]$0) !};
         __TAB.put();
         __TAB.next()
      !}
   ?}
?};
__TAB.prefix(11);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,12,__TAB.NRK); __TAB.next !}
?};
__TAB.prefix(12);
{? __TAB.first()
|| {!
   |? {! _ind:=1..6
      |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?}
      !};
      __TAB.put();
      __TAB.next()
   !}
?};
_wyn:={? ~(_czy_rap>0)
      || FUN.emsg('\nBrak informacji do wykazania na deklaracji \n (zerowe kwoty podatku).'@); 0
      || 1
      ?};
__TAB.prefix();
_wyn


\obl_pit8ar_10
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.51]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla pity PIT 8AR
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - opcjonalny numer wersji e-deklaracji.
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 10 ?};
_vern:=_a;
_Msc:=1; _Rok:=__Rok; _podatek:=0;
exec('czytaj','#stalesys',date(_Rok,12,0),KST);

exec('init_tab_1','pit');

_dod_zap:="__TAB.blank; __TAB.LP:=_a; __TAB.O:=_b; __TAB.NR:=_d; __TAB.NRK:=_e;
           {! _ind:=1..6 |! ($('__TAB.P'+$_ind+':=(_a+_b)'))(_c,_ind) !};
           __TAB.add";

_dod_zap(34,'34. Wynagrodzenie płatnika za poszczególne miesiące',405,34,0);
_dod_zap(34,'    - zgodnie z art. 28 Ordynacji podatkowej',411,34,6);
{! _lp:=1..6
|! __TAB.fld_fml('K'+$_lp,'EDIT_FORMAT',"'in_prec=0'");
   __TAB.fld_fml('K'+$_lp,'DISPLAY_FORMAT',"'out_prec=0'")
!};
__TAB.select();

{! _lp:=1..35
|! {? _lp<>34
   || _kom:=8+(_lp-1)*12;
      _dod_zap(_lp,'',_kom,_lp,0);
      _dod_zap(_lp,'',_kom+6,_lp,6)
   ?}
!};

RH.cntx_psh();
RH.index('DOK');
{!
|? RH.prefix(exec('ref_firma','ustawienia'),_Rok,_Msc);
   {? RH.first()
   || {!
      |? {? exec('licz_rhs','lista_licz',31)
         || _src:=
               {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
                  RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=','PIT8AR','DEKL','NR','=',_vern)
               || RU_DEKL.WIERSZ
               |? RH.ZLE().RU().K='7'
               || 3
               |? RU.K='8'
               || 1
               || 32
               ?};
            {? _src
            || _kw:=(exec('licza_rhs','lista_licz',961));
               {? _src=12 | _src=13 | _src=14
               || _kw:=_kw$2
               || _kw:=_kw$0
               ?};
               _podatek+=_kw;
               {? __TAB.find_key(_src,{? _Msc<7 || 0 || 6 ?})
               || ($('__TAB.K'+$(_Msc-__TAB.NRK)+'+='+$_kw))();
                  __TAB.put()
               ?}
            ?}
         ?};
         RH.next
      !}
   ?};
   _Msc+=1;
   _Msc<=12
!};
RH.cntx_pop();
_suma:="__TAB.cntx_psh(); __TAB.prefix();
       {? __TAB.find_key(_[7],_[8])
       || {! _ind:=1..6 |! ($('__TAB.K'+$_ind+'+=_a'))(_[_ind]) !}; __TAB.put()
       ?}; __TAB.cntx_pop()";
{! _lp:=1..32
|! __TAB.prefix(_lp);
   {? __TAB.first()
   || {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,33,__TAB.NRK); __TAB.next() !}
   ?}
!};
__TAB.prefix(33);
{? __TAB.first()
|| {! |? _suma(__TAB.K1,__TAB.K2,__TAB.K3,__TAB.K4,__TAB.K5,__TAB.K6,35,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(34);
{? __TAB.first()
|| {! |? _suma(-__TAB.K1,-__TAB.K2,-__TAB.K3,-__TAB.K4,-__TAB.K5,-__TAB.K6,35,__TAB.NRK); __TAB.next() !}
?};
__TAB.prefix(35);
{? __TAB.first()
|| {!
   |? {! _ind:=1..6
      |! {? ($('__TAB.K'+$_ind+'<0'))() || ($('__TAB.K'+$_ind+':=0'))() ?}
      !};
      __TAB.put();
      __TAB.next()
   !}
?};
__TAB.prefix();
_wyn:={? ~(_podatek>0)
      || FUN.emsg('\nBrak informacji do wykazania na deklaracji \n (zerowe kwoty dochodu i podatku).'@);
         0
      || 1
      ?};
undefine();
exec('stalesys','#stalesys');
_wyn



\init_ift1_16
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.51]
:: OPIS: Formula inicjujaca IFT-1/IFT-1R wersja 16
::   WE: _a - string typ deklaracji IFT-1/IFT-1R
::       _b - string T lub N czy tworzyc dekl. dla zleceniobiorcy, gdy jest juz utworzona
::       _c - string T czy N przetwarzanie danych osobowych lub nie
::       _d - data przekazania danych osobowych
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('pit','pom_pit');
pit:=obj_new(87);
{! _nx:=1..33 |! pit[_nx]:='' !};
{! _nx:=34..obj_len(pit) |! pit[_nx]:=0 !};

pom_pit:=obj_new('PIT_TYP','TWORZ','GIODO','GIODODAT');
pom_pit.PIT_TYP:=_a;
pom_pit.TWORZ:=(_b='T');
pom_pit.GIODO:=(_c='T');
pom_pit.GIODODAT:={? var_pres('_d')=type_of(date) || _d || date(0,0,0) ?};
exec('czytaj','#stalesys',date(__Rok,12,0),KST);
{? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
1


\obl_ift_16
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.51]
:: OPIS: Formula wyliczajaca dane z systemu do tabeli tymczasowej __TAB przed
::       zapisem do tabeli VAT_POZ dla informacji IFT-1/IFT-1R
::   WE: _a - string typ deklaracji IFT1/IFT1R
::       _b - date Data od okresu za ktory beda pobierane dane
::       _c - date Data do okresu za ktory beda pobierane dane
::----------------------------------------------------------------------------------------------------------------------
_nazwa:=_a;
_od:=_b;
_do:=_c;
{! _iter:=19..33 |! pit[_iter]:='' !};
{! _iter:=34..81 |! pit[_iter]:=0 !};
::Ustalenie rodzaju Podatnika
pit[87]:=0;
{? var_pres('PODFIZ',KST)>0
|| pit[87]:=KST.PODFIZ
?};

_wyn:=0;

_jest_pit:=0;
{? ~pom_pit.TWORZ
|| VAT_DEK.cntx_psh();
   VAT_DEK.index('VAT_OSOB');
   VAT_DEK.prefix(P.OSOBA,rodzdekl,rok_dekp,$__Rok,pit_typ,);
   {? VAT_DEK.last || _jest_pit:=1 ?};
   VAT_DEK.cntx_pop()
?};
{? _jest_pit
|| return(-1)
?};

_adus:=exec('adresdous','osoba',VAT_DEK.DO~1);
{? #(_adus+1)
|| pit[6]:=OS_US.US;
   _usnaz:=OS_US.US().NU+
              {? +US.UU || ', '+US.UU || '' ?}+
              {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?}
|| pit[6]:=null;
   _usnaz:=''
?};
pit[19]:=OSOBA.NAZWISKO;
pit[20]:=OSOBA.PIERWSZE;
pit[21]:=OSOBA.OJCIEC;
pit[22]:=OSOBA.MATKA;
pit[23]:=OSOBA.UR_DATA;
pit[24]:=OSOBA.UR_MIEJ;
::ustalenie na podstawie kartoteki OS_ZNIP
{? exec('szukaj_osznip','edeklar',OSOBA.ref,VAT_DEK.DO)
|| pit[25]:=OS_ZNIP.ZNIP;
   pit[26]:=OS_ZNIP.RZNIP;
   pit[27]:=OS_ZNIP.KRAJZNIP
|| pit[25]:='';
   pit[26]:=null();
   pit[27]:=null()
?};
{? #(1+_adus) | exec('szukaj','osoba','S',VAT_DEK.DO)
|| pit[28]:=OS_ADRES.KRAJ;
   pit[29]:=OS_ADRES.MIASTO;
   pit[30]:=OS_ADRES.KOD;
   pit[31]:=OS_ADRES.ULICA;
   pit[32]:=OS_ADRES.DOM;
   pit[33]:=OS_ADRES.LOKAL
?};

RH.cntx_psh();
RH.index('RACHDATA');
RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,__Rok);
{? RH.first()
|| {!
   |? {? RH.DWY>=_od & RH.DWY<=_do
      || _src:=
            {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
               RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=',_nazwa,'DEKL','NR','=',16)
            || RU_DEKL.WIERSZ
            |? RH.ZLE().RU().K='8'
            || 10
            ?};
         {? _src
         || _ke:=31+_src*4;
            _kzw:=30+_src*4;
::          jeżeli nie mamy podanej kwoty procentu podatku RH.PPD dla rachunku to wypełniamy dochód (przychód)
::          zwolniony kolumna zwolnionego dochodu oraz nie wypełniamy pola %podatku, gdy tylko zwolniony bez podatku
            _prz_pod:=0;
            {? RH.PPD>0
            || _prz_pod:=exec('licza_rhs','lista_licz',92);
               pit[_ke]+=_prz_pod;
               pit[_ke+2]+=exec('licza_rhs','lista_licz',961)
            || pit[_kzw]+=exec('licza_rhs','lista_licz',92)
            ?};
            {? _prz_pod>0 || pit[_ke+1]:=RH.PPD ?}
         ?}
      ?};
      RH.next()
   !}
?};
RH.cntx_pop();
{! _lp:=34 //4 ..81
|! {? _lp<>42 & _lp<>70 & _lp<>74 & _lp<>78
   || pit[_lp]:=pit[_lp]$0;
      pit[_lp+1]:=pit[_lp+1]$0;
      pit[_lp+3]:=pit[_lp+3]$0
   ?}
!};

_wyn:=0;
{! _lp:=34..81
|? _wyn=0
|! {? pit[_lp]>0 || _wyn:=1 ?}
!};
{? _wyn & pom_pit.GIODODAT<>date(0,0,0)
|| exec('przekaz','giodo',pom_pit.GIODODAT,
        'Przekazanie danych na formularzu %1\n'[SKID.DEKL_NAZ],
        'odbiorcą danych jest:\n',
        _usnaz)
?};
_wyn


\init_pit11p_12
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.51]
:: OPIS: Formula dla akcji Dolacz okna deklaracji PIT-11 dla pracownika lub zleceniobiorcy
::       dla 12 wersji e-deklaracji obowiazujacej od 1.1.2021 roku dotyczy przychodow od 1.1.2021 roku
::       (wymagana zmienna globalna __Rok-rok za ktory tworzona jest e-deklaracja)
::   WE: _a - string typ deklaracji PIT11P
::       _b - string T lub N czy tworzyc deklaracje jezeli podatnik ma juz
::       _c - string T lub N czy tworzyc deklaracje zbiorcza dla podatnika
::       _d - string T lub N czy sumowac umowy zlecenia sprzed zatrudnienia
::       _e - string T lub N czy dolaczono informacje PIT-R
::       _f - string T korekta lub N zlozenie deklaracji
::       _g - string T lub N przetwarzanie danych osobowych lub nie
::       _h - data przekazania danych osobowych
::       _i - string T lub N czy umozliwiac zmiane informacji o kosztach uzyskania
::       _j - numer wersji e-deklaracji pole VAT_DEK.NR().NR lub PIT_GRUP.NR().NR
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_j')<>type_of(0) || _j:=12 ?};
VAR_DEL.delete('__PIT','__WER','__wk','__transl','__NdPOD');
{? var_pres('pit')>100 || obj_del(pit) ?};
pit:=obj_new(100);
{! _nx:=1..27 |! pit[_nx]:='' !};
{! _nx:=28..obj_len(pit) |! pit[_nx]:=0 !};
_pom:=pit[3]:=obj_new(11);
_pom[2]:={? _a='PIT11P' || 'P' || 'Z' ?};
_pom[1]:=__Rok;

::tabela do zapisu w wydrukowanych deklaracjach
{? var_pres('__par')>100 || obj_del(__par) ?};
__par:=tab_tmp(2,'RODZAJ','STRING[1]','Rodzaj','REF','INTEGER','Ref');

::czy wydruk dla podatnika?
_pom[4]:={? _pom[3]:=(_c='T')
         || tab_tmp(1,'OSOBA','INTEGER','Podatnik')
         || ~~
         ?};
::czy sumowac umowy zlecenie sprzed zatrudnienia'
{? _pom[3] & _pom[2]='P'
|| _pom[10]:=(_d='T')
|| _pom[10]:=0
?};
::czy przychody pochodza z wiecej niz jednego stosunku pracy
_pom[5]:=0;
::czy umozliwiac zmiane informacji o kosztach uzyskania?
_pom[6]:=_i;
::czy rejestrowac przekazanie danych osobowych?
{? _g='T'
|| _pom[9]:=_h
|| _pom[9]:=date(0,0,0)
?};

exec('czytaj','#stalesys',date(__Rok,12,0),KST);

::wysokosc kosztow uzyskania
_pom[7]:=KST.KU;
_pom[8]:=(_b='T');

pit[7]:=_f;

pit[89]:=_e;

KP.cntx_psh; KP.index('_KARTAPO');
RH.cntx_psh; RH.index('RACHDATA');
O.cntx_psh(); O.index('LISTYPLP');
KT.cntx_psh();
us_podat:=null;
DEKL_POD.cntx_psh;
DEKL_POD.use('pod_'+$_pom[1]);
DEKL_POD.index('DEKL_PED');
ZC_N.cntx_psh();
ZC_N.index('ZC_H');
ZC.cntx_psh();

__wk:=obj_new(10);
{! _nx:=1..obj_len(__wk)
|! __wk[_nx]:=obj_new(7);
   {! _ny:=1..obj_len(__wk[_nx])
   |! __wk[_nx][_ny]:=0
   !}
!};
::Wiersze ,3,4,5,7,8,10
::wiersz 6 dodany dla wykazania ZP dla umowy cywilnoprawnej w parametryzacji wykazywania w PIT-11
::wiersz 9 dodany dla wykazania ZP dla umowy cywilnoprawnej w parametryzacji wykazywania w PIT-11
::Należności z tytułu wymienionego w wierszu 8, otrzymane przez podatników do ukończenia 26 roku życia
__transl:="{? RU_DEKL.DEKL().NR=__WER
           || __wk[1][2]:=29;  __wk[1][3]:=30; __wk[1][4]:=31;  __wk[1][5]:=32;  __wk[1][6]:=33;
              __wk[3][2]:=43;  __wk[3][3]:=0;  __wk[3][4]:=44;  __wk[3][5]:=0;   __wk[3][6]:=46;
              __wk[4][2]:=47;  __wk[4][3]:=48; __wk[4][4]:=49;  __wk[4][5]:=0;   __wk[4][6]:=50;
              __wk[5][2]:=51;  __wk[5][3]:=52; __wk[5][4]:=53;  __wk[5][5]:=0;   __wk[5][6]:=54;
              __wk[6][2]:=55;  __wk[6][3]:=56; __wk[6][4]:=57;  __wk[6][5]:=0;   __wk[6][6]:=58;
              __wk[7][2]:=59;  __wk[7][3]:=63; __wk[7][4]:=60;  __wk[7][5]:=0;   __wk[7][6]:=61;   __wk[7][7]:=62;
              __wk[8][2]:=64;  __wk[8][3]:=0;  __wk[8][4]:=65;  __wk[8][5]:=0;   __wk[8][6]:=66;
              __wk[9][2]:=67;  __wk[9][3]:=0;  __wk[9][4]:=68;  __wk[9][5]:=0;   __wk[9][6]:=69;
              __wk[10][2]:=70; __wk[10][3]:=71;__wk[10][4]:=72; __wk[10][5]:=73; __wk[10][6]:=74;
              RU_DEKL.WIERSZ
           || 0
           ?}
           ";
__PIT:='PIT11';
__WER:=_j;
::tabela pomocnicza dla wykrywania pokrywajacych sie okresow zatrudnienia
_pom[11]:=tab_tmp(2,'OD','DATE',,'DO','DATE',);
{? var_pres('PPK_POD')>0
|| __NdPOD:=PPK_POD.ndx_tmp('PPK_POD_OS',0,'POD_RH',,0,'OSOBA',,0,'POD_LICZ',,0,'POD_R',,0)
|| __NdPOD:=''
?}


\obl_pit11p_12
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DAROKR] [12.51]
:: OPIS: Formula wylicza dane do deklaracji PIT-11 z systemu dla 12 wersji ale dotyczy przychodow od 1.1.2021 roku
::       UWAGA: Procedura korzysta z numerow rubryk!
::   WE: _a - 1 - jesli jest prawidlowy symbol i wymagane dane do utworzenia deklaracji
::       _b - numer wersji e-deklaracji pole VAT_DEK.NR().NR lub PIT_GRUP.NR().NR
::       _c - 1 - ustawienie pracownika zatrudnionego przy sumowaniu zbiorczym
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')>0 & type_of(_a)=type_of(0) || _a || 1 ?};
_b:={? var_pres('_b')>0 & type_of(_b)=type_of(0) || _b || 12 ?};
_c:={? var_pres('_c')>0 & type_of(_c)=type_of(0) || _c || 0 ?};
_prac_up:={? var_pres('_d')>100 || _d || null() ?};
_wynik:=0;
_pom:=pit[3];
us_podat:=null;
pit[99]:=0;
::Ustalenie rodzaju Podatnika
pit[100]:=0;
__par.erase;

:: sprawdzenie czy ze wzgledu na date urodzin dla osob mlodych nalezy ustalac na podstawie list plac/rachunkow
_ur_data:=P.OSOBA().UR_DATA;
{? _ur_data<>date(0,0,0)
|| _po_list:={? exec('kiedy_26ur','pit',_ur_data)<=date(_pom[1]-1,12,0) || 0 || 1 ?};
   _26ur:=exec('kiedy_26ur','pit',_ur_data)
|| _26ur:=date(0,0,0);
   _po_list:=0
?};

::wyczysc rubryki formularza wlasciwe dla podatnika
{! _nx:=11..27 |! pit[_nx]:='' !};
{! _nx:=28..95 |! pit[_nx]:=0 !};
pit[18]:=date(0,0,0);
pit[19]:=null;
pit[82]:=pit[84]:=pit[86]:='';
::Tablica do wyliczania zasilkow od umow-zlecen
_zasilek:=obj_new(5);
{! _nx:=1..obj_len(_zasilek) |! _zasilek[_nx]:=0 !};

_jest_pit:=_jestwyd:=0;
VAT_DEK.cntx_psh;
VAT_DEK.index('VAT_PRAC');
VAT_DEK.prefix(P.ref,rodzdekl,rok_dekp,okres,pit_typ);
{? VAT_DEK.last || _jest_pit:=1 ?};
VAT_DEK.cntx_pop;
::sprawdzenie czy byla drukowana deklaracja poprzez wydruk bez e-deklaracji
{? ~_jest_pit
|| {? _pom[2]='P'
   || DEKL_POD.prefix('E',P.ref,'(E)PIT-11','(E)PIT-11')
   || DEKL_POD.prefix('Z',P.ref,'(E)PIT-11','(E)PIT-11')
   ?};
   {? DEKL_POD.first
   || _jest_pit:=1
   ?}
?};
{? ~_jest_pit
|| {? _pom[2]='P'
   || DEKL_POD.prefix('E',P.ref,'PIT-11','PIT-11')
   || DEKL_POD.prefix('Z',P.ref,'PIT-11','PIT-11')
   ?};
   {? DEKL_POD.first
   || _jest_pit:=_jestwyd:=1
   ?}
?};
{? ~_pom[8] & _jest_pit
|| {? _jestwyd || return(-2) || return(-1) ?}
?};

{? _pom[3]
|| {? _pom[2]='P'
   || {? ~_c
      || KP.cntx_psh();
         KP.prefix();
         {? ~KP.find_key(P.ref(),_pom[1])
         ||
::          sprawdzenie czy jest nierozliczony przychód z PPK w danym roku podatkowym
            _czy_ppk:=1;
            {? var_pres('PPK_POD')>0
            || PPK_POD.index('POD_O');
               PPK_POD.prefix(null(),P.ref(),'T',_pom[1]);
               {? PPK_POD.first()
               || _czy_ppk:=0
               ?}
            ?};
            {? ~(P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1])) & _czy_ppk
            || KP.cntx_pop();
               return(0)
            || _wyn:=exec('spr_oso','pit',_jest_pit,_pom[8]);
               {? _wyn<0
               || KP.cntx_pop();
                  return(_wyn)
               ?}
            ?}
         ?};
         KP.cntx_pop()
      || P.cntx_psh();
         P.index('PRACOSOB');
         P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
         {? P.first
         || _jest_P:=0;
            {!
            |? {? P.ZA='T' & P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1])
               || {? var_pres('P',_prac_up)>100 & var_pres('Ndx',_prac_up)=type_of('')
                  || _prac_up.P.cntx_psh();
                     _prac_up.P.index(_prac_up.Ndx);
                     _prac_up.P.prefix();
                     {? _prac_up.P.find_key(#P.ref)
                     || _jest_P:=1
                     ?};
                     _prac_up.P.cntx_pop()
                  || _jest_P:=1
                  ?}
               ?};
               P.next & ~_jest_P
            !};
            P.cntx_pop();
            {? _jest_P & P.ZA<>'T'
            || return(0)
            || KP.cntx_psh();
               KP.prefix();
               {? ~KP.find_key(P.ref(),_pom[1])
               ||
::                sprawdzenie czy jest nierozliczony przychód z PPK w danym roku podatkowym
                  _czy_ppk:=1;
                  {? var_pres('PPK_POD')>0
                  || PPK_POD.index('POD_O');
                     PPK_POD.prefix(null(),P.ref(),'T',_pom[1]);
                     {? PPK_POD.first()
                     || _czy_ppk:=0
                     ?}
                  ?};
                  {? ~(P.DZA~1<=_pom[1] & (P.DZ~1=0 | P.DZ~1>=_pom[1])) & _czy_ppk
                  || KP.cntx_pop();
                     return(0)
                  || _wyn:=exec('spr_oso','pit',_jest_pit,_pom[8]);
                     {? _wyn<0
                     || KP.cntx_pop();
                        return(_wyn)
                     ?}
                  ?}
               ?};
               KP.cntx_pop()
            ?}
         || P.cntx_pop()
         ?}
      ?}
   || RH.index('RACHPRZ');
      RH.prefix();
      {? ~RH.find_key(P.ref,_pom[1])
      || RH.index('RACHDATA');
::       sprawdzenie czy jest nierozliczony przychód z PPK w danym roku podatkowym
         _czy_ppk:=1;
         {? var_pres('PPK_POD')>0
         || PPK_POD.index('POD_RH');
            PPK_POD.prefix(null(),P.ref(),'T',_pom[1]);
            {? PPK_POD.first()
            || _czy_ppk:=0
            ?}
         ?};
         {? _czy_ppk || return(0) ?}
      ||
::       sprawdzenie czy sa rachunki nie sa to tylko rachunki ryczałtowe w danym roku podatkowycm
::       KOD BŁĘDU: ER/WRT/XP/12.51/1802/0001 KOD ZGŁOSZENIA: NL/WRT/KALI/12.30/0741
::       Wiele deklaracji PIT-11 dla zleceniobiorcy w kilku jednostkach org. (w jednej jednostce tylko z rachunkiem
::       ryczaltowym w roku podatkowym)
         RH.prefix(P.ref(),_pom[1]);
         {? RH.first()
         || _rach:=RH.size();
            _rycz:=0;
            {!
            |? {? exec('licz_rhs','lista_licz',31) & (~exec('czy_prac','osoba',P.OSOBA,RH.DWY))
               || _rycz+=1
               ?};
               RH.next()
            !};
            RH.prefix();
::          jesli wszystkie rachunki sa ryczaltowe to nie bedzie robiony PIT-11
            {? _rach=_rycz
            || RH.index('RACHDATA');
               return(0)
            ?}
         ?}
      ?};
      RH.index('RACHDATA')
   ?}
?};

::jezeli informacja drukowana jest dla podatnika (osoby), to nie drukuj
::zwielokrotnionych informacji - kolejne wystapienia w kartotekach
{? _pom[3]
|| {? ~_pom[4].find_key(#P.OSOBA)
   || _pom[4].OSOBA:=#P.OSOBA;
      _pom[4].add
   || return(_wynik)
   ?}
?};
::data do ustalenia danych identyfikacyjnych osoby zagranicznej oraz znacznika "nierezydent"
_Zagrdat:=date(0,0,0);
_pom[5]:=0;
_liczmies:=0;
:: spradzenie czy sa przychody-karty podatkowe z etatu-wykonane tylko dla warunku _pom[2]='P'
_spr_et:=0;
:: kwota zasiłków z etatu
_et_zas:=0;
:: kwota podatku od zasiłku z etatu
_pd_zas:=0;
:: kwota zasiłków z etatu poniżej 26 roku życia
_et_zs26:=0;
:: kwota podatku od zasiłku z etatu poniżej 26 roku życia
_pd_zs26:=0;
:: określenie limitu ZP jeżeli w stałych systemu mamy pole KST.ZWPOD
{? var_pres('ZWPOD',KST)>0
|| _lim_ZP:=KST.ZWPOD
|| _lim_ZP:=85528
?};
::uwzgledniaj przychody ze stosunku pracy
{? _pom[2]='P'
|| P.cntx_psh;
::informacja dla podatnika
   {? _pom[3]
   || P.index('PRACOSOB');
      P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
      P.first;
      _pom[11].erase()
   ?};
   {!
   |? KP.prefix(P.ref,_pom[1]);
      {? KP.first
      || {? ~__par.find_key('E',#P.ref)
         || __par.RODZAJ:='E'; __par.REF:=#P.ref; __par.add(1)
         ?};
         _od:=date(_pom[1],KP.M,1);
         {!
         |?
::          Przychód wiersz 1
            {? ~_po_list
            ||
::             Informacje o składkach ZUS, które nie zostały ujęte w przychodzie do opodatkowania
::             nie są uwzględniane w PIT. Pobieramy z atrybut 582 z list płac ponieważ KP.S15
::             sumuje również rubryka 7124 Skl. ZUS opod. zag.
               _zw_skl:=0;
::             Zasiłki chorobowe obecnie wykazujemy w wierszu 10 Inne źródła, natomiast podatek od zasiłku w wierszu 10,
::             gdy nie ma przychodów z etatu lub łącznie wierszu 1, gdy mamy łączne przychody z etatu i zasiłków
               O.index('LISTYPLP');
               O.prefix(exec('ref_firma','ustawienia'),'P',KP.R,KP.M);
               {? O.first
               || {!
                  |?
::                   Kwota zasiłków z etatu składnik 650 do wykazywania składników w "Inne źródła"
::                   odejmujemy rubryki 7018, 7071, które nie są opodatkowane są w kwota rubryki 650
                     _zs_lis:=exec('licz_ls','pit',650)$2-exec('licz_ls','pit',7018)$2-exec('licz_ls','pit',7071)$2;
                     {? _zs_lis
                     || _et_zas+=_zs_lis;
::                      Podatek z listy
                        _pd_list:=exec('licza_ls','pit',961);
::                      Podatek od kwot zasiłku ulga podatkowa nie jest pobrana do wyliczeń
::                      Procent podatku z listy
                        _pr_pod:=exec('licza_ls','pit',91);
                        {? _zs_lis>0 || _pd_zsls:=_zs_lis$0*_pr_pod/100$0 || _pd_zsls:=0 ?};
::                      Podatek policzony z kwoty zasiłku bez ulgi podatkowej sprawdzenie czy nie jest wyższy
::                      od całkowitego podatku z listy. Jeżeli większy to ograniczamy do kwoty podatku z listy płac
                        {? _pd_zsls>_pd_list || _pd_zsls:=_pd_list ?};
::                      Łączna kwota podatku od zasiłku z etatu
                        _pd_zas+=_pd_zsls
                     ?};
::                   Informacje o składkach ZUS, które nie zostały ujęte w przychodzie do opodatkowania
::                   nie są uwzględniane w PIT. Pobieramy z atrybut 582 z list płac
                     _zw_skl+=exec('licza_ls','pit',582);
                     O.next()
                  !}
               ?};
::             Przychod
               pit[29]+=(KP.S1+KP.S10-KP.S12-KP.S13-KP.S15-KP.S16)$2;
::             Koszty uzyskania wiersz 1
               pit[30]+=KP.S2$2;
::             Zaliczka podatkowa wiersz 1
               pit[33]+=KP.S4$2;
::             Przychód prawa autorskie wiersz 1
               pit[34]+=KP.S13$2;
::             Koszty uzyskania prawa autorskie wiersz 1
               pit[35]+=KP.S14$2;
::             Składki społeczne do wiersza 1
               pit[75]+=(KP.S10-KP.S12-_zw_skl)$2;
::             Składki zdrowotne do wiersza 1
               pit[78]+=KP.S9$2

            || O.index('LISTYPLP');
               O.prefix(exec('ref_firma','ustawienia'),'P',KP.R,KP.M);
               {? O.first
               || {!
                  |? {? O.D>_26ur & O.T().T<>'ZXX'
                     ||
::                      Składki społeczne wyliczane ponieważ doliczamy do przychodu
                        _skl:=exec('licza_ls','pit',5711,5721);
::                      Odjęcie składek z bieżącego roku w wyniku blokady pobieramy wg rubryki 951
                        _skl-=exec('licz_ls','pit',951);
::                      Przychód prawa autorskie wiersz 1 brak atrybutu pobieramy wg rubryki 7002
                        _prz_50:=exec('licz_ls','pit',7002);
::                      Składki społeczne od przychodu zagranicznego ponieważ nie są odliczane do przychodu
                        _skl_zagr:=exec('licza_ls','pit',9015);
::                      Informacje o składkach ZUS, które nie zostały ujęte w przychodzie do opodatkowania
::                      nie są uwzględniane w PIT. Pobieramy z atrybut 582 z list płac
                        _skl-=exec('licza_ls','pit',582);
                        _przych:=_skl+exec('licza_ls','pit',92)-_skl_zagr-_prz_50;
::                      Przychód uzyskany po 26 urodzinach trafia do wiersza 1
::                      Przychód wiersz 1 z etatu
                        pit[29]+=_przych;
::                      Koszty uzyskania wiersz 1
                        pit[30]+=exec('licza_ls','pit',931);
::                      Zaliczka podatkowa wiersz 1
                        pit[33]+=exec('licza_ls','pit',961);
::                      Przychód prawa autorskie wiersz 1 brak atrybutu pobieramy wg rubryki 7002
                        pit[34]+=_prz_50;
::                      Koszty uzyskania prawa autorskie wiersz 1 brak atrybutu pobieramy wg rubryki 7004
                        pit[35]+=exec('licz_ls','pit',7004);
::                      Składki społeczne do wiersza 1
                        pit[75]+=_skl;
::                      Składki zdrowotne do wiersza 1
                        pit[78]+=exec('licza_ls','pit',57412);
::                      Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                        pit[78]+=exec('licz_ls','pit',794);
::                      Kwota zasiłków z etatu składnik 650 do wykazywania składników w "Inne źródła"
::                      odejmujemy rubryki 7018, 7071, które nie są opodatkowane są w kwota rubryki 650
                        _zs_lis:=exec('licz_ls','pit',650)$2-exec('licz_ls','pit',7018)$2-exec('licz_ls','pit',7071)$2;
                        {? _zs_lis
                        || _et_zas+=_zs_lis;
::                         Podatek z listy
                           _pd_list:=exec('licza_ls','pit',961);
::                         Podatek od kwot zasiłku ulga podatkowa nie jest pobrana do wyliczeń
::                         Procent podatku z listy
                           _pr_pod:=exec('licza_ls','pit',91);
                           {? _zs_lis>0 || _pd_zsls:=_zs_lis$0*_pr_pod/100$0 || _pd_zsls:=0 ?};
::                         Podatek policzony z kwoty zasiłku bez ulgi podatkowej sprawdzenie czy nie jest wyższy
::                         od całkowitego podatku z listy. Jeżeli większy to ograniczamy do kwoty podatku z listy płac
                           {? _pd_zsls>_pd_list || _pd_zsls:=_pd_list ?};
::                          Łączna kwota podatku od zasiłku z etatu
                           _pd_zas+=_pd_zsls
                        ?}

                     |? (O.D<=_26ur | O.T().T='ZXX')
                     ||
::                      Składki społeczne wyliczane ponieważ doliczamy do przychodu
                        _skl:=exec('licza_ls','pit',5711,5721);
::                      Odjęcie składek z bieżącego roku w wyniku blokady pobieramy wg rubryki 951
                        _skl-=exec('licz_ls','pit',951);
::                      Przychód prawa autorskie wiersz 2 brak atrybutu pobieramy wg rubryki 7002
                        _prz_50:=exec('licz_ls','pit',7002);
::                      Składki społeczne od przychodu zagranicznego ponieważ nie są odliczane do przychodu
                        _skl_zagr:=exec('licza_ls','pit',9015);
::                      składki od zwolnionego przychodu
                        _zp_skl:=exec('licza_ls','pit',9026);
::                      Informacje o składkach ZUS, które nie zostały ujęte w przychodzie do opodatkowania
::                      nie są uwzględniane w PIT. Pobieramy z atrybut 582 z list płac
                        _skl-=exec('licza_ls','pit',582);
                        _przych:=exec('licza_ls','pit',92)+_skl-_zp_skl-_skl_zagr-_prz_50;
::                      Podatek z listy
                        _pd_list:=exec('licza_ls','pit',961);
:: przychód uzyskany przed ukończeniem 26 roku zycia, trafia do wiersza 2 z wyjątkiem przychodu
:: który nie podlega zwolnieniu (atrybut 9021), ten trafia do wiersza 1 poza zasiłkamu rubryka 650
                        _zs_lis:=0;
                        _pd_zsls:=0;
                        _pd_zwol:=0;
                        _bez_zwol:=exec('licza_ls','pit',9021);
                        {? _bez_zwol
                        ||
::                         kwoty podwyższenia zasiłku macierzyńskiego są bez podatku ale zsumowane z 650
                           _pod_mac:=exec('licz_ls','pit',7018)$2+exec('licz_ls','pit',7071)$2;
                           _bez_zwol-=_pod_mac;
                           {? _bez_zwol<0 || _bez_zwol:=0 ?};
::                         Podatek od kwot, które nie podlegają zwolnieniu
                           _pr_pod:=exec('licza_ls','pit',91);
                           {? _bez_zwol>0 || _pd_zwol:=_bez_zwol$0*_pr_pod/100$0 || _pd_zwol:=0 ?};
                           {? _pd_zwol>_pd_list || _pd_zwol:=_pd_list ?};
                           _przych-=_bez_zwol;
::                         Kwota zasiłków rubryka 650 z etatu do wykazywania
::                         składników w "Inne źródła" jest składową atrybutu 9021
::                         odejmujemy rubryki 7018, 7071, które nie są opodatkowane są w kwota rubryki 650
                           _zs_lis:=exec('licz_ls','pit',650)$2-_pod_mac;
                           {? _zs_lis
                           || _et_zs26+=_zs_lis;
::                            Jeżeli kwota z zasiłku jest pełną kwotą atrybutu 9021
                              {? _zs_lis=_bez_zwol
                              ||
::                            Kwota podatku jest wyliczona dla atrybutu 9021
                                 _pd_zs26+=_pd_zwol;
                                 _pd_zsls:=_pd_zwol
                              ||
::                            Wyliczenia podatku oddzielnie dla zasiłku, ponieważ mamy inne składniki w atrybucie 9021
                                 {? _zs_lis>0 || _pd_zsls:=_zs_lis$0*_pr_pod/100$0 || _pd_zsls:=0 ?};
::                            Podatek policzony z kwoty zasiłku bez ulgi podatkowej sprawdzenie czy nie jest wyższy
::                            od całkowitego podatku z atrybutu. Jeżeli większy to ograniczamy do kwoty tego podatku
                                 {? _pd_zsls>_pd_zwol || _pd_zsls:=_pd_zwol ?};
::                            Łączna kwota podatku od zasiłku z etatu poniżej 26 roku życia
                                 _pd_zs26+=_pd_zsls
                              ?}
                           ?}
                        ?};

::                      Przychód z etatu wiersz 1
                        pit[29]+=(_bez_zwol-_zs_lis);
::                      Podatek z etatu wiersz 1 dla kwot, które nie podlegają zwolnieniu bez zasiłku
                        pit[33]+=(_pd_zwol-_pd_zsls);
::                      Zwolnione przychody od 1.08.2019 z etatu w wierszu 2
::                      Przychód wiersz 2
                        pit[36]+=_przych;
::                      Koszty uzyskania wiersz 2
                        {? _przych
                        || pit[37]+=exec('licza_ls','pit',931)
                        || pit[30]+=exec('licza_ls','pit',931)
                        ?};
::                      Przychód prawa autorskie wiersz 2 brak atrybutu pobieramy wg rubryki 7002
                        pit[41]+=_prz_50;
::                      Zaliczka podatkowa wiersz 2
                        {? _zs_lis=_bez_zwol | _pd_zsls=_pd_zwol
                        || _kw_pod:=_pd_list-_pd_zsls
                        || {? _pd_list=_pd_zwol
                           || _kw_pod:=0
                           || _kw_pod:=_pd_list-_pd_zwol-_pd_zsls
                           ?}
                        ?};
                        pit[40]+=_kw_pod;
::                      Koszty uzyskania prawa autorskie wiersz 2 brak atrybutu pobieramy wg rubryki 7004
                        pit[42]+=exec('licz_ls','pit',7004);
::                      Składki społeczne do wiersza 2
                        pit[76]+=(_skl-_zp_skl);
::                      Składki zdrowotne do wiersza 2
                        pit[79]+=exec('licza_ls','pit',57412);
::                      Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                        pit[79]+=exec('licz_ls','pit',794)
                     ?};
                     O.next()
                  !}
               ?};
::             Przychody zwolnione do limitu ZP w danym roku powiązane z pozycja 86 i 87
::             Przychód ZP do limitu ZP pobieramy składnik z karty podatkowa KP.S18 rubryka 7094
               pit[93]+=KP.S18$2;
::             Składki społeczne do limitu ZP składnik z karty podatkowa KP.S19 rubryka 7098
               pit[77]+=KP.S19$2;
::             Składki zdrowotne do limitu ZP składnik z karty podatkowa KP.S20 rubryka 7108
               pit[80]+=KP.S20$2
            ?};

            _liczmies+=((KP.S2$2)<>0);
            _spr_et+=1;
            _dakp:=date(KP.R,KP.M,0);
            {? _Zagrdat<_dakp || _Zagrdat:=_dakp ?};
            KP.next
         !};
         {? _pom[3] & ~pit[28]
         || _do:=date(_pom[1],KP.M,0);
            {? (_od~1=P.DZA~1) & (_od~2=P.DZA~2) || _od:=P.DZA ?};
            {? (_do~1=P.DZ~1) & (_do~2=P.DZ~2) || _do:=P.DZ ?};
            {? P.DZA~1<=_pom[1] & (P.DZ~1>=_pom[1] | P.DZ=date(0,0,0))
            || {? P.DZA~1=_pom[1]
               || {? P.DZA<_od | _od=date(0,0,0) || _od:=P.DZA ?}
               || _od:=date(_pom[1],1,1)
               ?};
               {? P.DZ~1=_pom[1]
               || {? P.DZ>_do || _do:=P.DZ ?}
               || _do:=date(_pom[1],12,0)
               ?}
            ?};
            {? ~_pom[11].find_tab(0,'OD',,'<=',_do,'DO',,'>=',_od)
            || _pom[11].OD:=_od;
               _pom[11].DO:=_do;
               _pom[11].add()
            || _pom[5]:=1
            ?}
         ?}
      ?};
::    Dodanie przychodów z PPK które nie zostały rozliczone na listach płac
::    tylko dla pracowników powyżej 26 roku życia zapis do wiersz 1 poz. 29
      {? var_pres('PPK_POD')>0
      || PPK_POD.index('POD_O');
         PPK_POD.prefix(null(),P.ref(),'T',_pom[1]);
         {? PPK_POD.first()
         || {!
            |? {? PPK_POD.PRZ_DATA>_26ur
               || pit[29]+=PPK_POD.WYL_KW
               ?};
               _spr_et+=1;
               PPK_POD.next()
            !}
         ?}
      ?};
      _pom[3] & P.next()
   !};
   P.cntx_pop;
   {? pit[75]<0
   || {? pit[29]>0
      || pit[29]-=pit[75];
         pit[75]:=0
      ?}
   ?};
:: jeżeli mamy ujemny przychód w 2 wierszu i mamy koszty to "przenosimy" do wiersza źródła przychodów
   {? pit[36]<0 & pit[29]>0
   || pit[29]+=pit[36];
      pit[30]+=pit[37]
   ?};
   {? pit[29]<0 & pit[36]>0
   || pit[36]+=pit[29];
      pit[37]+=pit[30]
   ?};
   {? pit[29]<0 || pit[29]:=0 ?};
   {? pit[29]=0 & pit[30]<>0 || pit[30]:=0 ?};
   {? pit[34]<0 || pit[34]:=0 ?};
   {? pit[34]=0 & pit[35]<>0 || pit[35]:=0 ?};
   {? pit[36]<0 || pit[36]:=0 ?};
   {? pit[36]=0 & pit[37]<>0 || pit[37]:=0 ?};
   {? pit[41]<0 || pit[41]:=0 ?};
   {? pit[41]=0 & pit[42]<>0 || pit[42]:=0 ?};
   {? pit[78]<0 || pit[78]:=0 ?};
   _zku:=KST.KUZ$2;
   pit[28]:={? _pom[5]
            || {? _zku*_liczmies=pit[30]
               || 4
               |? _pom[7]*_liczmies$2=pit[30]
               || 2
               ?}
            |? _liczmies>0
            || {? _pom[7]*_liczmies$2 = pit[30] || 1
               |? _zku*_liczmies      = pit[30] || 3
               ?}
            ?};
   &_zku;
   {? ~pit[28]
   || P_IPOD.index('OD');
      P_IPOD.prefix(P.ref);
      {? P_IPOD.last()
      || _p_ipod:=1;
         {!
         |? {? P_IPOD.OD>=date(_pom[1],1,1) & P_IPOD.OD<=date(_pom[1],12,0)
            || {? P_IPOD.KU='Z'
               || {? _pom[5] || pit[28]:=4 || pit[28]:=3 ?}; _p_ipod:=0
               ?}
            |? P_IPOD.OD<date(_pom[1],1,1)
            || {? P_IPOD.KU='Z'
               || {? _pom[5] || pit[28]:=4 || pit[28]:=3 ?}
               ?};
               _p_ipod:=0
            ?};
            _p_ipod & P_IPOD.prev()
         !}
      ?}
   ?};
   {? pit[28]=0
   ||  {? _pom[5] || pit[28]:=2 || pit[28]:=1 ?}
   ?};
   {? _spr_et & _pom[6]='T'
   || _kto:=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      popup(,'Koszty uzyskania: '+&_kto,
             'określone na koniec roku '+$_pom[1]+': ('+$pit[28]+') '+
            {? pit[28]=1 | pit[28]=2 || 'podstawowe' || 'zwiększone' ?},,"pit[28]",
            '--',,,
            '1. z jednego stosunku pracy (stosunków pokrewnych)',,"pit[28]:=1",
            '3. z jednego stosunku pracy (stosunków pokrewnych), zwiększone',,"pit[28]:=3",
            '2. z więcej niż jednego stosunku pracy (stosunków pokrewnych)',,"pit[28]:=2",
            '4. z więcej niż jednego stosunku pracy (stosunków pokrewnych), zwiększone',,"pit[28]:=4")
   ?}
?};

RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,_pom[1]);
{? RH.first
|| {? var_pres('RU_DEKL')=var_pres('SYSLOG') || RU_DEKL.prefix() ?};
   {!
   |? _um:=RH.ZLE().RU().K;
      {? {? _pom[1]>=2009 || ~exec('licz_rhs','lista_licz',31) || 1 ?} & (~(',7,8,'*(','+_um+','))) &
      {? _pom[2]='Z'
      || {? ~exec('czy_prac','osoba',ZC.OSOBA,RH.DWY)
         || {? ~_pom[3] || ZC.P=P.ref() || 1 ?}
         ||
::         obsluga przypadkow ze dany pracownik nie ma wyplaty z etatu w roku-kart podatkowych
::         to nalezy PIT-11 ze zlecen wykonac dla rachunkow wystawionych podczas zatrudnienia pracownika
           _ok:=0;
           _dalej:=1;
           P.cntx_psh();
           P.index('PRACOSOB');
           P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
           {? P.first
           || KP.cntx_psh();
              KP.prefix();
              {!
              |? {? KP.find_key(P.ref(),_pom[1])
                 || _dalej:=0
                 |? P.DZA<=RH.DWY
                    & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                 || {? ~KP.find_key(P.ref(),_pom[1])
                    || _ok+=1
                    ?}
                 ?};
                 P.next() & _dalej
              !};
              KP.cntx_pop()
           ?};
           P.cntx_pop();
           &_dalej;
           &_ok
         ?}
      || {? ~_pom[3]
         || _pref:=P.ref;
            _ok:=0;
            P.cntx_psh;
            P.index('PRACOSOB');
            P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
            {? P.first
            || {!
               |? {? P.DZA<=RH.DWY
                     & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                  || _ok:=(_pref=P.ref & _spr_et); 0
                  || P.next
                  ?}
               !}
            ?};
            P.cntx_pop;
            &_ok
         || _pom[10] & _spr_et | exec('czy_prac','osoba',P.OSOBA,RH.DWY) & _spr_et
         ?}
      ?}
      || _src:=
            {? var_pres('RU_DEKL')=var_pres('SYSLOG') &
               RU_DEKL.find_tab(,'RU',,'=',RH.ZLE().RU,'DEKL','NAZWA','=',__PIT,'DEKL','NR','=',__WER)
            || RU_DEKL.WIERSZ<>0
            || 2
            ?};
         {? _src
         || {? ~__par.find_key('Z',#ZC.P)
            || __par.RODZAJ:='Z'; __par.REF:=#ZC.P; __par.add(1)
            ?};
            {? _Zagrdat<RH.DWY || _Zagrdat:=RH.DWY  ?};
            _skl:=exec('licza_rhs','lista_licz',5711,5721);
::          Wyliczenie składek z bieżącego roku w wyniku blokady pobieramy wg rubryki 951
            _951skl:=exec('licz_rhs','lista_licz',951);
            _skl_kor:=0;
            KORN_Z.index('RH');
            KORN_Z.prefix(RH.ref(),_pom[1]);
            {? KORN_Z.first()
            || {? var_pres('_tabrub')>100 || obj_del(_tabrub) ?};
               _tabrub:=__RUB.sys_rub(5711,RH.DWY);
               {? var_pres('_tabch')>100 || obj_del(_tabch) ?};
               _tabch:=__RUB.sys_rub(5721,RH.DWY);
               _ZP:=_uzp:=0;
               {? RH.DWY<=_26ur & '1'*_um
               || _ZP:=1;
                  _ZWPOD:=KST.ZWPOD;
                  _uzp:=exec('czy_ulga_U26','lista_licz',RH.DWY);
                  KST.ZWPOD:=&_ZWPOD
               ?};
               KOR_Z.index('KORN_Z');
               {!
               |? {? KORN_Z.DW~1=_pom[1]
                  || {? _tabrub.first()
                     || {!
                        |? KOR_Z.prefix(KORN_Z.ref(),__RUB.ref(_tabrub.RN));
                           {? KOR_Z.first
                           || {? ~_ZP
                              || _skl_kor+=KOR_Z.KW
                              || {? _uzp
                                 || pit[77]+=KOR_Z.KW;
                                    pit[94]+=KOR_Z.KW
                                 || pit[76]+=KOR_Z.KW;
                                    pit[55]+=KOR_Z.KW
                                 ?}
                              ?};
::                            W przypadku nadpłaconych składek z bieżącego roku to nie odejmujemy
::                            nadpłaconych składek z korekt (wartość ujemna)
                              {? _951skl>0 & KOR_Z.KW<0
                              || _951skl+=KOR_Z.KW
                              ?}
                           ?};
                           _tabrub.next()
                        !}
                     ?};
                     {? _tabch.first()
                     || {!
                        |? KOR_Z.prefix(KORN_Z.ref(),__RUB.ref(_tabch.RN));
                           {? KOR_Z.first
                           || {? ~_ZP
                              || _skl_kor+=KOR_Z.KW
                              || {? _uzp
                                 || pit[77]+=KOR_Z.KW;
                                    pit[94]+=KOR_Z.KW
                                 || pit[76]+=KOR_Z.KW;
                                    pit[55]+=KOR_Z.KW
                                 ?}
                              ?};
::                            W przypadku nadpłaconych składek z bieżącego roku to nie odejmujemy
::                            nadpłaconych składek z korekt (wartość ujemna)
                              {? _951skl>0 & KOR_Z.KW<0
                              || _951skl+=KOR_Z.KW
                              ?}
                           ?};
                           _tabch.next()
                        !}
                     ?}
                  ?};
                  KORN_Z.next()
               !};
               {? var_pres('_tabrub')>100 || obj_del(_tabrub); &_tabrub ?};
               {? var_pres('_tabch')>100 || obj_del(_tabch); &_tabch ?};
               &_ZP; &_uzp
            ?};
            {? _951skl<0 || _951skl:=0 ?};
::          Odjęcie składek z bieżącego roku w wyniku blokady pobieramy wg rubryki 951
            _skl-=_951skl;
            {? _src=1
            || __transl();
               _wiersz:=RU_DEKL.WIERSZ;
::             sprawdzenie czy mamy ZP dla wybranego wiersza w 2019 roku to wiersz 5 dla umowy-zlecenia
               _czy_zp:=0;
               _zp_skl:=0;
               {? _wiersz=5 | _wiersz=8
               || {? ~_po_list
                  || {? _wiersz=5 || _wiersz:=5 || _wiersz:=8 ?}
                  || {? RH.DWY>_26ur
                     || {? _wiersz=5 || _wiersz:=5 || _wiersz:=8 ?}
                     |? RH.DWY<=_26ur
                     || {? _wiersz=5 || _wiersz:=6 || _wiersz:=9 ?};
                        _czy_zp:=1
                     ?};
::                   Składki od zwolnionego przychodu atrybut 9026
                     _zp_skl:=exec('licza_rhs','lista_licz',9026);
::                   Składki społeczne do limitu ZP atrybut 9026
                     pit[77]+=_zp_skl;
::                   Składki zdrowotne do limitu ZP atrybut 9027
                     pit[80]+=exec('licza_rhs','lista_licz',9027);
::                   Przychody zwolnione do limitu ZP w danym roku powiązane z pozycjami 93, 94 i 95 dla praktyk
::                   Przychód ZP do limitu ZP pobieramy atrybut 9022
                     {? _wiersz=5 | _wiersz=6
                     || pit[94]+=exec('licza_rhs','lista_licz',9022)
                     || pit[95]+=exec('licza_rhs','lista_licz',9022)
                     ?}
                  ?}
               ?};
               _len:=obj_len(__wk[_wiersz]);
               _ra_92:=exec('licza_rhs','lista_licz',92);
               _ra_93:=exec('licza_rhs','lista_licz',93);
               'Koszty 50% sa liczone tylko na 7-ej pozycji.';
               'Jezeli biezacy wiersz nie ma 7-ej pozycji - kosztow nie liczymy';
               _ku:=RH.ZLE().RU().PKU;
               _przy50:={? _len>6 & __wk[_wiersz][7] & _ku=50 || _skl+_ra_92+_skl_kor ?};
               {! _nx:=2.._len
               |! _poz:=__wk[_wiersz][_nx];
                  {? _poz
                  || pit[_poz]+=
                        {? _nx=2 || {? _len>6 & __wk[_wiersz][7] & _ku=50 || 0 || _skl+_ra_92+_skl_kor-_zp_skl ?}
                        |? _nx=3 || _ra_93
                        |? _nx=4 || _skl+_ra_92-_ra_93+_skl_kor-_zp_skl
                        |? _nx=5 || 0
                        |? _nx=6 || exec('licza_rhs','lista_licz',961)
                        |? _nx=7 || _przy50
                        || 'przypadki nieuwzglednione'; 0
                        ?}
                  ?}
               !};
               &_len;
               {? ~_czy_zp
               ||
::                Składki społeczne
                  pit[75]+=(_skl+_skl_kor);
::                Składki zdrowotne
                  pit[78]+=exec('licza_rhs','lista_licz',57412);
::                Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                  pit[78]+=exec('licz_rhs','lista_licz',794)
               ||
::                Składki społeczne do wiersza 6
                  pit[76]+=(_skl-_zp_skl+_skl_kor);
::                Składki zdrowotne do wiersza 6
                  pit[79]+=exec('licza_rhs','lista_licz',57412);
::                Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                  pit[79]+=exec('licz_rhs','lista_licz',794)
               ?}
            |? '456'*_um
            ||
::             umowy o dzielo, rada nadzorcza
               pit[47]+=(_skl+exec('licza_rhs','lista_licz',92)+_skl_kor);
               pit[48]+=exec('licza_rhs','lista_licz',93);
               pit[50]+=exec('licza_rhs','lista_licz',961);
::             Składki społeczne
               pit[75]+=(_skl+_skl_kor);
::             Składki zdrowotne
               pit[78]+=exec('licza_rhs','lista_licz',57412);
::             Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
               pit[78]+=exec('licz_rhs','lista_licz',794)
            |? '1'*_um
            ||
::             umowy zlecenia od 2019 roku
               {? ~_po_list
               || pit[51]+=(_skl+exec('licza_rhs','lista_licz',92)+_skl_kor);
                  pit[52]+=exec('licza_rhs','lista_licz',93);
                  pit[54]+=exec('licza_rhs','lista_licz',961);
::                Składki społeczne
                  pit[75]+=(_skl+_skl_kor);
::                Składki zdrowotne
                  pit[78]+=exec('licza_rhs','lista_licz',57412);
::                Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                  pit[78]+=exec('licz_rhs','lista_licz',794)
               ||
::                Składki od zwolnionego przychodu atrybut 9026
                  _zp_skl:=exec('licza_rhs','lista_licz',9026);
                  {? RH.DWY>_26ur
                  ||
::                   Przychody z rachunków wypłaconych po ukończeniu 26 roku życia do wiersza 5
                     pit[51]+=(_skl+exec('licza_rhs','lista_licz',92)+_skl_kor);
                     pit[52]+=exec('licza_rhs','lista_licz',93);
                     pit[54]+=exec('licza_rhs','lista_licz',961);
::                   Składki społeczne
                     pit[75]+=(_skl+_skl_kor);
::                   Składki zdrowotne
                     pit[78]+=exec('licza_rhs','lista_licz',57412);
::                   Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                     pit[78]+=exec('licz_rhs','lista_licz',794)
                  |? RH.DWY<=_26ur
                  ||
::                   Przychody z rachunków wypłaconych do ukończenia 26 roku życia włącznie do wiersza 6
                     pit[55]+=(exec('licza_rhs','lista_licz',92)+_skl-_zp_skl+_skl_kor);
::                   Koszty uzyskania wiersz 6
                     pit[56]+=exec('licza_rhs','lista_licz',93);
::                   Zaliczka podatkowa wiersz 6
                     pit[58]+=exec('licza_rhs','lista_licz',961);
::                   Składki społeczne do wiersza 6
                     pit[76]+=(_skl-_zp_skl+_skl_kor);
::                   Składki zdrowotne do wiersza 6
                     pit[79]+=exec('licza_rhs','lista_licz',57412);
::                   Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                     pit[79]+=exec('licz_rhs','lista_licz',794)
                  ?};
::                   Składki społeczne do limitu ZP atrybut 9026
                     pit[77]+=_zp_skl;
::                   Składki zdrowotne do limitu ZP atrybut 9027
                     pit[80]+=exec('licza_rhs','lista_licz',9027);
::                   Przychody zwolnione do limitu ZP w danym roku powiązane z pozycjami 92 i 94
::                   Przychód ZP do limitu ZP pobieramy atrybut 9022
                     pit[94]+=exec('licza_rhs','lista_licz',9022)
               ?}
            |? '23m'*_um
            ||
::             prawa autorskie
               _ra_92:=exec('licza_rhs','lista_licz',92);
               _ra_93:=exec('licza_rhs','lista_licz',93);
               {? RH.ZLE().RU().PKU=50
               || pit[62]+=_skl+_ra_92+_skl_kor
               || pit[59]+=_skl+_ra_92+_skl_kor
               ?};
               pit[63]+=_ra_93;
               pit[61]+=exec('licza_rhs','lista_licz',961);
::             Składki społeczne
               pit[75]+=(_skl+_skl_kor);
::             Składki zdrowotne
               pit[78]+=exec('licza_rhs','lista_licz',57412);
::             Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
               pit[78]+=exec('licz_rhs','lista_licz',794)
            |? 'yv'*_um
            ||
::             od 2021 nowe wiersze 8 i 9 jako ZP dla staże uczniowskie, praktyki absolwenckie do wiersza 8
               {? ~_po_list
               || pit[64]+=(_skl+exec('licza_rhs','lista_licz',92)+_skl_kor);
::                Zaliczka podatkowa wiersz 8
                  pit[66]+=exec('licza_rhs','lista_licz',961);
::                Składki społeczne
                  pit[75]+=(_skl+_skl_kor);
::                Składki zdrowotne
                  pit[78]+=exec('licza_rhs','lista_licz',57412);
::                Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                  pit[78]+=exec('licz_rhs','lista_licz',794)
               ||
::                Składki od zwolnionego przychodu atrybut 9026
                  _zp_skl:=exec('licza_rhs','lista_licz',9026);
                  {? RH.DWY>_26ur
                  ||
::                   Przychody z rachunków wypłaconych po ukończeniu 26 roku życia do wiersza 8
                     pit[64]+=(_skl+exec('licza_rhs','lista_licz',92)+_skl_kor);
::                   Zaliczka podatkowa wiersz 8
                     pit[66]+=exec('licza_rhs','lista_licz',961);
::                   Składki społeczne
                     pit[75]+=(_skl+_skl_kor);
::                   Składki zdrowotne
                     pit[78]+=exec('licza_rhs','lista_licz',57412);
::                   Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                     pit[78]+=exec('licz_rhs','lista_licz',794)
                  |? RH.DWY<=_26ur
                  ||
::                   Przychody z rachunków wypłaconych do ukończenia 26 roku życia włącznie do wiersza 9
                     pit[67]+=(exec('licza_rhs','lista_licz',92)+_skl-_zp_skl+_skl_kor);
::                   Zaliczka podatkowa wiersz 9
                     pit[69]+=exec('licza_rhs','lista_licz',961);
::                   Składki społeczne do wiersza 9
                     pit[76]+=(_skl-_zp_skl+_skl_kor);
::                   Składki zdrowotne do wiersza 9
                     pit[79]+=exec('licza_rhs','lista_licz',57412);
::                   Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
                     pit[79]+=exec('licz_rhs','lista_licz',794)
                  ?};
::                   Składki społeczne do limitu ZP atrybut 9026
                     pit[77]+=_zp_skl;
::                   Składki zdrowotne do limitu ZP atrybut 9027
                     pit[80]+=exec('licza_rhs','lista_licz',9027);
::                   Przychody zwolnione do limitu ZP w danym roku powiązane z pozycjami 92 i 95
::                   Przychód ZP do limitu ZP pobieramy atrybut 9022
                     pit[95]+=exec('licza_rhs','lista_licz',9022)
               ?}
            ||
::             inne zrodla
               pit[70]+=(_skl+exec('licza_rhs','lista_licz',92)+_skl_kor);
               pit[71]+=exec('licza_rhs','lista_licz',93);
               pit[74]+=exec('licza_rhs','lista_licz',961);
::             Składki społeczne
               pit[75]+=(_skl+_skl_kor);
::             Składki zdrowotne
               pit[78]+=exec('licza_rhs','lista_licz',57412);
::             Sumowanie składki zdrowotnej odliczonej od nadpłaconych składek wg rubryki 794
               pit[78]+=exec('licz_rhs','lista_licz',794)
            ?}
         ?};
::       obsluga zasilkow dla zleceniobiorcy od 2018 blok F od wersji PIT-11(24)-poprzednio na PIT-8C do 2017 roku
         {? RH.ZAS='T'
         || ZC_N.prefix(RH.ref);
            {? ZC_N.first()
            || {!
               |? 'wyplacone zasilki:';
                  _zas_kod:=ZC_N.R().RN;
                  {? __RUB.sys_attr(_zas_kod,1221,ZC_N.OD) | _zas_kod>=510 & _zas_kod<=517
                  || 'chorobowe';
                     _zasilek[1]+=ZC_N.KW
                  |? __RUB.sys_attr(_zas_kod,1227,ZC_N.OD) | _zas_kod=524
                  || 'macierzynskie';
                     _zasilek[2]+=ZC_N.KW
                  |? __RUB.sys_attr(_zas_kod,1225,ZC_N.OD) | _zas_kod=530
                  || 'opiekuncze';
                     _zasilek[3]+=ZC_N.KW
                  |? __RUB.sys_attr(_zas_kod,1222,ZC_N.OD) | _zas_kod=537
                  || 'swiadczenia reh.';
                     _zasilek[5]+=ZC_N.KW
                  ?};
                  ZC_N.next()
               !}
            ?}
         ?}
      ?};
      RH.next
   !};
:: przepisanie wartosci do pozycji pit, jesli są zasilki to szukamy wolnej pozycji, a jak brak to do ostatniej
   _zas_kw:=0;
   {! _nx:=1..obj_len(_zasilek) |! _zas_kw+=_zasilek[_nx] !};
   {? _zas_kw
   || {! _nx:=1..obj_len(_zasilek)
      |! _zas_kw:=0;
         _zas_op:='';
         _zas_kw+=_zasilek[_nx];
         _zas_op+={? _zasilek[_nx]
                  || {? _nx=1 || 'zasiłki chorobowe, '
                     |? _nx=2 || 'zasiłki macierzyńskie, '
                     |? _nx=3 || 'zasiłki opiekuńcze, '
                     |? _nx=5 || 'świadczenia rehabilitacyjne, '
                     || ''
                     ?}
                  || ''
                  ?};
         {? +_zas_op || _zas_op:=_zas_op-2 ?};
         {? _zas_kw
         || {! _ix:=1..3
            |? _zas_kw
            |! {? pit[82+(_ix-1)*2]='' & pit[83+(_ix-1)*2]=0
               || pit[82+(_ix-1)*2]:=_zas_op;
                  pit[83+(_ix-1)*2]:=_zas_kw;
                  _zas_kw:=0
               ?}
            !};
            {? _zas_kw
            || pit[86]+=', '+_zas_op;
               pit[87]+=_zas_kw
            ?}
         ?}
      !}
   ?}
?};
::Po zliczeniu zwolnionych przychodów z etatu i zleceń ze względu na możliwość przekroczenia kwoty limitów
::Dodanie przychodów z PPK które nie zostały rozliczone na listach płac
::dla pracowników do 26 roku życia zapis do wiersz 2 poz. 36
{? _pom[2]='P' & var_pres('PPK_POD')>0
|| P.cntx_psh();
::informacja dla podatnika
   {? _pom[3]
   || P.index('PRACOSOB');
      P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
      P.first()
   ?};
   {!
   |? PPK_POD.index('POD_O');
      PPK_POD.prefix(null(),P.ref(),'T',_pom[1]);
      {? PPK_POD.first()
      || {!
         |? {? PPK_POD.PRZ_DATA<=_26ur
            || _ZWPOD:=KST.ZWPOD;
               _uzp:=exec('czy_ulga_U26','lista_licz',PPK_POD.PRZ_DATA);
               KST.ZWPOD:=&_ZWPOD;
               {? pit[93]+pit[94]+PPK_POD.WYL_KW<=_lim_ZP
               || {? _uzp || pit[93]+=PPK_POD.WYL_KW || pit[36]+=PPK_POD.WYL_KW ?}
               || {? _lim_ZP>=pit[93]+pit[94] & (_dop:=_lim_ZP-pit[93]-pit[94]; _dop)>0
                  || {? PPK_POD.WYL_KW>=_dop
                     || pit[93]+=_dop;
                        pit[36]+=(PPK_POD.WYL_KW-_dop)
                     ?}
                  || pit[36]+=PPK_POD.WYL_KW
                  ?}
               ?};
               &_uzp
            ?};
            _spr_et+=1;
            PPK_POD.next()
         !}
      ?};
      _pom[3] & P.next()
   !};
   P.cntx_pop();
   {? pit[36]<0 || pit[36]:=0 ?};
   {? pit[36]=0 & pit[37]<>0 || pit[37]:=0 ?}
?};
:: Dodanie przychodów z PPK które nie zostały rozliczone z rachunkow
{? var_pres('PPK_POD')>0
|| PPK_POD.cntx_psh();
   PPK_POD.index(__NdPOD);
   PPK_POD.prefix(null(),P.OSOBA,'T',_pom[1]);
   {? PPK_POD.first()
   || RH.cntx_psh();
      {!
      |? {? PPK_POD.WYL_RH<>null()
         || _um:=PPK_POD.WYL_RH().ZLE().RU().K;
            {? {? _pom[1]>=2009 || ~exec('licz_rhs','lista_licz',31) || 1 ?} & (~(',7,8,'*(','+_um+','))) &
               {? _pom[2]='Z'
               || {? ~exec('czy_prac','osoba',ZC.OSOBA,RH.DWY)
                  || {? ~_pom[3] || ZC.P=P.ref() || 1 ?}
                  ||
::         obsluga przypadkow ze dany pracownik nie ma wyplaty z etatu w roku-kart podatkowych
::         to nalezy PIT-11 ze zlecen wykonac dla rachunkow wystawionych podczas zatrudnienia pracownika
                    _ok:=0;
                    _dalej:=1;
                    P.cntx_psh();
                    P.index('PRACOSOB');
                    P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
                    {? P.first
                    || KP.cntx_psh();
                       KP.prefix();
                       {!
                       |? {? KP.find_key(P.ref(),_pom[1])
                          || _dalej:=0
                          |? P.DZA<=RH.DWY
                             & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                          || {? ~KP.find_key(P.ref(),_pom[1])
                             || _ok+=1
                             ?}
                          ?};
                          P.next() & _dalej
                       !};
                       KP.cntx_pop()
                    ?};
                    P.cntx_pop();
                    &_dalej;
                    &_ok
                  ?}
               || {? ~_pom[3]
                  || _pref:=P.ref();
                     _ok:=0;
                     P.cntx_psh();
                     P.index('PRACOSOB');
                     P.prefix(exec('ref_firma','ustawienia'),'P',ZC.OSOBA);
                     {? P.first()
                     || {!
                        |? {? P.DZA<=RH.DWY
                              & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ)
                           || _ok:=(_pref=P.ref() & _spr_et); 0
                           || P.next()
                           ?}
                        !}
                     ?};
                     P.cntx_pop();
                     &_ok
                  || _pom[10] & _spr_et | exec('czy_prac','osoba',P.OSOBA,RH.DWY) & _spr_et
                  ?}
               ?}
            || {? '456'*_um
               ||
::                umowy o dzielo 20%, rady nadzorcze
                  pit[47]+=PPK_POD.WYL_KW
               |? '1'*_um
               ||
::                umowy - zlecenia dla zleceniobiorców do 26 roku życia zapis do wiersz 6 poz. 55
                  {? PPK_POD.PRZ_DATA<=_26ur
                  || _ZWPOD:=KST.ZWPOD;
                     _uzp:=exec('czy_ulga_U26','lista_licz',PPK_POD.PRZ_DATA);
                     KST.ZWPOD:=&_ZWPOD;
                     {? pit[93]+pit[94]+PPK_POD.WYL_KW<=_lim_ZP
                     || {? _uzp || pit[94]+=PPK_POD.WYL_KW || pit[55]+=PPK_POD.WYL_KW ?}
                     || {? _lim_ZP>=pit[93]+pit[94] & (_dop:=_lim_ZP-pit[93]-pit[94]; _dop)>0
                        || {? PPK_POD.WYL_KW>=_dop
                           || pit[94]+=_dop;
                              pit[55]+=(PPK_POD.WYL_KW-_dop)
                           ?}
                        || pit[55]+=PPK_POD.WYL_KW
                        ?}
                     ?};
                     &_uzp
                  || pit[51]+=PPK_POD.WYL_KW
                  ?}
               |? '23m'*_um
               ||
::                prawa autorskie
                  pit[62]+=PPK_POD.WYL_KW
               |? 'yv'*_um
               ||
::                od 2021 nowe wiersze 8 i 9 jako ZP dla staże uczniowskie, praktyki absolwenckie do wiersza 8
                  {? PPK_POD.PRZ_DATA<=_26ur
                  || _ZWPOD:=KST.ZWPOD;
                     _uzp:=exec('czy_ulga_U26','lista_licz',PPK_POD.PRZ_DATA);
                     KST.ZWPOD:=&_ZWPOD;
                     {? pit[95]+PPK_POD.WYL_KW<=_lim_ZP
                     || {? _uzp || pit[95]+=PPK_POD.WYL_KW || pit[67]+=PPK_POD.WYL_KW ?}
                     || {? _lim_ZP>=pit[95] & (_dop:=_lim_ZP-pit[95]; _dop)>0
                        || {? PPK_POD.WYL_KW>=_dop
                           || pit[95]+=_dop;
                              pit[67]+=(PPK_POD.WYL_KW-_dop)
                           ?}
                        || pit[67]+=PPK_POD.WYL_KW
                        ?}
                     ?};
                     &_uzp
                  || pit[64]+=PPK_POD.WYL_KW
                  ?}
               ||
::                inne zrodla
                  pit[70]+=PPK_POD.WYL_KW
               ?}
            ?}
         ?};
         PPK_POD.next()
      !};
      RH.cntx_pop()
   ?};
   PPK_POD.cntx_pop()
?};

:: dla osób do 26 roku życia w wierszu 2 nie mogą być ujemne składki społeczne i zdrowotne
:: w pozycji 76, 77, 79 czyli muszą być kwoty z etatu sprawdzane ze zmienna _spr_et
{? _spr_et & (pit[36]+pit[41])=0 & (pit[76]<>0 | pit[77]<0 | pit[79]<>0)
|| {? pit[76]<>0
   || {? pit[75]
      || pit[75]+=pit[76];
         pit[76]:=0
      |? pit[77]
      || pit[77]+=pit[76];
         pit[76]:=0
      ?}
   ?};
   {? pit[79]<>0
   || {? pit[78]
      || pit[78]+=pit[79];
         pit[79]:=0
      |? pit[80]
      || pit[80]+=pit[79];
         pit[79]:=0
      ?}
   ?};
   {? pit[77]<0 || pit[75]+=pit[77]; pit[77]:=0 ?}
?};
{? pit[75]<0 || pit[75]:=0 ?};
{? pit[76]<0 || pit[76]:=0 ?};
{? pit[77]<0 || pit[77]:=0 ?};
{? pit[78]<0 || pit[78]:=0 ?};
{? pit[79]<0 || pit[79]:=0 ?};
{? pit[80]<0 || pit[80]:=0 ?};
:: kwota zasiłków z etatu wykazywana w wierszu 10 Inne źródła
:: nie wykazujemy ujemnych kwot zasiłków razem
{? _et_zas<0
|| _et_zas:=0
?};
{? _et_zs26<0
|| _et_zs26:=0
?};
{? _pd_zs26<0
|| _pd_zs26:=0
?};
::jeżeli kwota zasiłków jest wyższa od kwoty przychodu z etatu
::to nie pobieramy pełnej kwoty zasiłku tylko obniżamy do wysokości przychodu na listach płac
{? pit[29]<_et_zas || _et_zas:=pit[29] ?};
pit[70]+=_et_zas;
:: kwota zasiłków z etatu wykazywana w wierszu 10 Inne źródła do ukończenia 26 roku życia
pit[70]+=_et_zs26;
:: przychód z pozycji 29 z etatu pomniejszamy o kwota zasiłków z etatu
pit[29]-=_et_zas;
{? pit[29]<0 || pit[29]:=0 ?};
:: kwota podatku od zasiłku z etatu wykazujemy w wierszu 1 jeżeli mamy przychody z etatu, jeżeli nie to w wierszu 10
{? (pit[29]+pit[34])=0 & _et_zas
|| pit[33]-=_pd_zas;
   pit[74]+=_pd_zas
?};
:: kwota podatku od zasiłku z etatu wykazujemy w wierszu 1 jeżeli mamy przychody z etatu, jeżeli nie to w wierszu 10
:: otrzymanych od 1.08.2019 do ukończenia 26 roku życia
{? _et_zs26 | _pd_zs26>0
|| {? pit[29]+pit[34]=0
   || pit[74]+=_pd_zs26
   || pit[33]+=_pd_zs26
   ?}
?};
:: Po korektach ZP 12.51_71 dla wiersza 2 mamy tylko podatek bez przychodu
:: to kwota podatku przepiszemy do pit[33] jeżeli mamy przychód pozycja 29 i 34
:: lub do wiersza 10 pozycja 74 jeżeli mamy kwota w pozycji 64
{? pit[40]<>0 & (pit[36]+pit[41])=0
|| {? (pit[29]+pit[34])>0
   || pit[33]+=pit[40];
      pit[40]:=0
   |? pit[70]>0
   || pit[74]+=pit[40];
      pit[40]:=0
   ?}
?};
:: Jeżeli mamy zerowy przychód pit[29] oraz koszty pit[30] oraz pit[33]
:: to zerujemy koszty pit[30] oraz kwota pit[33] trzeba przepisać do kwoty zaliczki od zasiłku pit[74]
{? pit[29]=0 & pit[30]<>0 & pit[33]<>0
|| pit[30]:=0;
   {? pit[74]
   || pit[74]+=pit[33];
      pit[33]:=0
   ?}
?};
{? pit[33]<0 || pit[33]:=0 ?};
{? pit[40]<0 || pit[40]:=0 ?};
{? pit[74]<0 || pit[74]:=0 ?};
:: Po korektach ZP 12.51_71 dla wiersza 6 mamy tylko podatek bez przychodu
:: to kwota podatku przepiszemy do pit[54] jeżeli mamy przychód pozycja 51
{? pit[58]<>0 & pit[55]=0
|| {? pit[51]>0
   || pit[54]+=pit[58];
      pit[58]:=0
   ?}
?};
{? pit[54]<0 || pit[54]:=0 ?};
{? pit[58]<0 || pit[58]:=0 ?};
:: Po korektach ZP 12.51_71 dla wiersza 6 mamy tylko ujemny przychod
:: to kwota przychod przepiszemy do pit[71] jeżeli mamy kwota
{? pit[55]<0 & pit[78]<>0
|| {? pit[78]>0
   || pit[78]+=pit[55];
      pit[55]:=0
   ?}
?};
{? pit[78]<0 || pit[78]:=0 ?};
pit[31]:=pit[29]+pit[34]-pit[30]-pit[35]; {? pit[31]<0 || pit[31]:=0 ?};
pit[38]:=pit[36]+pit[41]-pit[37]-pit[42]; {? pit[38]<0 || pit[38]:=0 ?};
pit[49]:=pit[47]-pit[48]; {? pit[49]<0 || pit[49]:=0 ?};
pit[53]:=pit[51]-pit[52]; {? pit[53]<0 || pit[53]:=0 ?};
pit[57]:=pit[55]-pit[56]; {? pit[57]<0 || pit[57]:=0 ?};
pit[60]:=pit[59]+pit[62]-pit[63]; {? pit[60]<0 || pit[60]:=0 ?};
{? pit[64]<0 || pit[64]:=0 ?};
pit[65]:=pit[64]; {? pit[65]<0 || pit[65]:=0 ?};
{? pit[67]<0 || pit[67]:=0 ?};
pit[68]:=pit[67]; {? pit[68]<0 || pit[68]:=0 ?};
pit[72]:=pit[70]-pit[71]; {? pit[72]<0 || pit[72]:=0 ?};
pit[88]:=pit[81]+pit[83]+pit[85]+pit[87]; {? pit[88]<0 || pit[88]:=0 ?};
:: Zwolnione przychody z okresleniem limitu w danym roku 2019 i kolejne lata na podstawie stalych systemu
{? var_pres('ZWPODW',KST)>0 & var_pres('ZWPOD',KST)>0
|| {? pit[93]>KST.ZWPOD
   ||
::    Jeżeli mamy przekroczenie limitu to różnica do pozycji 36 oraz komunikat o błędnym PIT-11
      _ZP_rozn:=pit[93]-KST.ZWPOD;
      RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,'Wartości do deklaracji PIT-11 są nieprawidłowe.'@,
         'Występuje niedopuszczalne przekroczenie\n limitu zwolnionego przychodu: %1'
         ' w pozycji 93 o wartość: %2.\nWykazano w pozycji 36.'@[$KST.ZWPOD,$_ZP_rozn],
         '\nWymagane poprawienie kwot skł. na ubezp. społeczne oraz zdrowotne.'@);
      pit[36]+=_ZP_rozn;
      pit[38]:=pit[36]+pit[41]-pit[37]-pit[42];
      {? pit[38]<0 || pit[38]:=0 ?};
      pit[93]:=KST.ZWPOD
   ?};
   {? pit[94]>KST.ZWPOD
   ||
::    Jeżeli mamy przekroczenie limitu to różnica do pozycji 55 oraz komunikat o błędnym PIT-11
      _ZP_rozn:=pit[94]-KST.ZWPOD;
      RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,'Wartości do deklaracji PIT-11 są nieprawidłowe.'@,
         'Występuje niedopuszczalne przekroczenie\n limitu zwolnionego przychodu: %1'
         ' w pozycji 94 o wartość: %2.\nWykazano w pozycji 55.'@[$KST.ZWPOD,$_ZP_rozn],
         '\nWymagane poprawienie kwot skł. na ubezp. społeczne oraz zdrowotne.'@);
      pit[55]+=_ZP_rozn;
      pit[57]:=pit[55]-pit[56];
      {? pit[57]<0 || pit[57]:=0 ?};
      pit[94]:=KST.ZWPOD
   ?};
   {? pit[95]>KST.ZWPOD
   ||
::    Jeżeli mamy przekroczenie limitu to różnica do pozycji 67 oraz komunikat o błędnym PIT-11
      _ZP_rozn:=pit[95]-KST.ZWPOD;
      RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,'Wartości do deklaracji PIT-11 są nieprawidłowe.',
         'Występuje niedopuszczalne przekroczenie\n limitu zwolnionego przychodu: %1'
         ' w pozycji 95 o wartość: %2.\nWykazano w pozycji 67.'@[$KST.ZWPOD,$_ZP_rozn],
         '\nWymagane poprawienie kwot skł. na ubezp. społeczne oraz zdrowotne.'@);
      pit[67]+=_ZP_rozn;
      pit[68]:=pit[67];
      {? pit[68]<0 || pit[68]:=0 ?};
      pit[95]:=KST.ZWPOD
   ?};
   {? pit[93]<0 || pit[93]:=0 ?};
   {? pit[94]<0 || pit[94]:=0 ?};
   {? pit[95]<0 || pit[95]:=0 ?};
   pit[92]:=pit[93]+pit[94]+pit[95];
   {? pit[92]<0 || pit[92]:=0 ?};
   {? pit[92]>KST.ZWPOD
   ||
::    Jeżeli mamy przekroczenie sumy limitów to  komunikat o błędnym PIT-11
      _ZP_rozn:=pit[92]-KST.ZWPOD;
      RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,'Wartości do deklaracji PIT-11 są nieprawidłowe.'@,
         'Występuje niedopuszczalne przekroczenie\n limitu zwolnionego przychodu: %1'
         ' w pozycji 92 o wartość: %2.'@[$KST.ZWPOD,$_ZP_rozn],
         '\nWymagane poprawienie kwot przychodów, skł. na ubezpieczenie społeczne oraz zdrowotne.'@);
      pit[92]:=KST.ZWPOD
   ?}
?};
_dochzw:=pit[32]+pit[39]+pit[45]+pit[73];
_blokG:=pit[89]+pit[90]+pit[91]+pit[92];
_przych:=pit[29]+pit[34]+pit[36]+pit[41]+pit[43]+pit[47]+pit[51]+pit[55]+pit[59]+pit[62]+pit[64];
_przych+=pit[67]+pit[70];
_blskzdr:=pit[75]+pit[76]+pit[77]+pit[78]+pit[79]+pit[80];

{? ~(pit[99]:=_przych+pit[88]+_dochzw+_blokG+_blskzdr)
|| return(_wynik)
?};

_adus:=exec('adresdous','osoba',_pom[1]);
{? #(_adus+1)
|| pit[6]:=OS_US.US().NU+
           {? +US.UU || ', '+US.UU || '' ?}+
           {? +US.UK & +US.MU || ', '+(6+US.UK)+' '+US.MU || '' ?};
   us_podat:=OS_US.US
|| pit[6]:='';
   us_podat:=null
?};
::Ustalenie pola VAT_DEK.POD rodzaj Podatnika
{? var_pres('PODFIZ',KST)>0
|| pit[100]:=KST.PODFIZ
?};
::Ustalenie pola VAT_DEK.REZYDENT pole dodane w wersji 12.41 od wersji PIT-11(22)
:: jesli rezydent placi podatki w Polsce to 'T' dla nierezydenta 'N'
::ustalenie na podstawie kartoteki OS_ZNIP
::ustawienie daty sprawdzenia danych w OS_ZNIP na podstawie _Zagrdat uzyskanych przychodow z etatu i zlecen
::Brak obsługi zmiany danych identyfikacyjnych w roku podatkowym
_dataBad:={? _Zagrdat<>date(0,0,0) & _Zagrdat<date(__Rok,12,0) || _Zagrdat || date(__Rok,12,0) ?};
{? exec('szukaj_osznip','edeklar',P.OSOBA,_dataBad)
||
:: Zagraniczny numer identyfikacyjny podatnika
   pit[11]:='N';
   pit[13]:=OS_ZNIP.ZNIP;
:: Rodzaj numeru identyfikacyjnego
   pit[14]:=OS_ZNIP.RZNIP;
:: Kraj wydania numeru identyfikacyjnego
   pit[15]:=OS_ZNIP.KRAJZNIP
|| pit[11]:='T';
   pit[14]:=null();
   pit[15]:=null()
?};
{? #(1+_adus)
|| pit[19]:=OS_ADRES.KRAJ;
   pit[20]:=OS_ADRES.WOJEWODZ;
   pit[21]:=OS_ADRES.POWIAT;
   pit[22]:=OS_ADRES.GMINA;
   pit[23]:=OS_ADRES.ULICA;
   pit[24]:=OS_ADRES.DOM;
   pit[25]:=OS_ADRES.LOKAL;
   pit[26]:=OS_ADRES.MIASTO;
   pit[27]:=OS_ADRES.KOD
|| {! _nx:=19..27 |! pit[_nx]:='' !};
   pit[19]:=null
?};

{? _a
|| P.cntx_psh();
   P.clear();
   DEKL_POD.cntx_psh();
   DEKL_POD.clear();
   {? __par.first()
   || {!
      |? DEKL_POD.blank();
         DEKL_POD.PIT:='(E)PIT-11';
         {? __par.RODZAJ='E' & P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='E'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         |? P.seek(__par.REF,)
         || DEKL_POD.RODZAJ:='Z'; DEKL_POD.PRAC_ET:=P.ref; DEKL_POD.OS_PODAT:=P.OSOBA
         ?};
         {? EDIT_VAR.PIT_RODZ=''
         || DEKL_POD.DATA:=VAT_DEK.DATA
         || DEKL_POD.DATA:={? PIT_EDIT.DATA<>date(0,0,0) || PIT_EDIT.DATA || VAT_DEK.DATA ?}
         ?};
         DEKL_POD.S1:=_przych;
         DEKL_POD.S2:=pit[30]+pit[35]+pit[37]+pit[42]+pit[48]+pit[52]+pit[56]+pit[63]+pit[71];
         DEKL_POD.S3:=pit[33]+pit[40]+pit[46]+pit[50]+pit[54]+pit[58]+pit[61]+pit[66]+pit[69]+pit[74];
         DEKL_POD.USER:=OPERATOR.USER;
         DEKL_POD.add();
         __par.next()
      !}
   ?};
   DEKL_POD.cntx_pop();
   P.cntx_pop()
?};

{? pit[99]
|| {? _a & pit[3][9]<>date(0,0,0)
   || exec('przekaz','giodo',pit[3][9],
           'Przekazanie danych na formularzu PIT-11',
           'odbiorcą danych jest:',
           pit[6])
   ?};
   _wynik:=1
?};
_wynik

:Sign Version 2.0 jowisz:1045 2023/12/14 14:25:16 391754e8ee724d442810fa7232ce2b99248612d82442e42c35bceff8e7a2ed87d37dd6777835eeb2f62ec3e527dc3c9e633bb84e4e0c1b21b57247d92a2dc4d175a319225ec425ba6f39b1edd66c8b3de5d2588996ed2785ce5afc26ee7f0767adb58f99e9a634c805abe89e4933fb846f1ef238c2185831fc7e5fde137d6dbe
