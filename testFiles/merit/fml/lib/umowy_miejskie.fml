:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: umowy_miejskie.fml
:: Utworzony: 15.01.2019
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Formuły do obsługi umów cyklicznych z miastem
::======================================================================================================================


\up_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS:  Umowa miejska select na pozycje
::  OLD: \up_sel/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
_edit:=exec('chk_role','#b__box',OPERATOR.USER,'LUM_UMM_DRUM');

UPM.trig_a('add',"exec('trig_add_upm','umowy_miejskie')",'upm01add');
UPM.trig_a('put',"exec('trig_put_upm','umowy_miejskie')",'upm01put');
UPM.trig_a('del',"exec('trig_del_upm','umowy_miejskie')",'upm01del');

UPMPOJ.trig_a('add',"exec('trig_add_uppoj','umowy_miejskie')",'uppoj01add');
UPMPOJ.trig_a('put',"exec('trig_put_uppoj','umowy_miejskie')",'uppoj01put');
UPMPOJ.trig_a('del',"exec('trig_del_uppoj','umowy_miejskie')",'uppoj01del');

KH.prefix();
KH.seek(UMM.KH);
ZAKR.MATU:='T';
POMOC.RODZ:='U';
M.win_dict('NL_WERU');
M.win_edit('REDU');
_mact:=M.actions('NL_WERU','ZIY');
_posdict:=POS.win_dict('?');
POS.win_dict('WER');
UMO.MIA:=null;
UMO.UL:=null;
UMC.MIA:=UMM.MIA;
:: [rr] ustawia informacje o dziedzinie
{? ~(var_pres('sourcedk')>0) || sourcedk:='' ?};
_source:=sourcedk;
sourcedk:='LUM';

__winUPM:=UPM.grp_make('Pozycje umowy miejskiej'@,"exec('na_wyp_okna','umowy_miejskie')",'#upmiej01',1,1);
UPM.grp_sel(__winUPM,UPM,'WER',,"exec('po_odry_upm','umowy_miejskie')",1,,15,,,,,'maximized_with_title','WERUPM');

UPM.grp_splt(__winUPM,,'vertical','prawo');
UPM.grp_sel(__winUPM,UPMPOJ,'WER','Usługi'@,,,,10,,,,,'maximized');
UPM.grp_sel(__winUPM,UPMZAD,'WER','Przewóz'@,,,,10,"exec('podst_miej','umowy_miejskie',0)",,,,'maximized');
UPM.grp_sel(__winUPM,DOKUM,'WER_U','Zdarzenia'@,,,,10,,,,,'maximized');
UPM.grp_sel(__winUPM,BIGB,'WER','BIG BAG-i'@,,,,10,,,,,'maximized');

UPM.grp_splt(__winUPM,'prawo','horizontal','prawo2');
UPM.grp_sel(__winUPM,UPMSEL,'WER',,,,,8,,,,,'maximized_with_title');

UPM.win_sel(__winUPM);

UPM.win_edit('RED');

UPM.index('POZ');
UPM.prefix(UMM.ref,'T');

DOKUM.win_edit(exec('dokum_win_edit','umowy_miejskie'));

RODZINF.NAZ:='Dokument definiowalny'@;

UPSYS.win_dict('WER2');
exec('set_efld_opt_upmlog','umowy_miejskie');
UPM.select(,1,1);
UPSYS.win_dict('WER');
UPM.win_sel('WER');
UPM.win_del(__winUPM);
&__winUPM;
POLA.REFSQL:='';
M.actions('NL_WERU',_mact);
sourcedk:=_source;
POS.win_dict(_posdict);
UMC.MIA:=null();
''


\up_wprowadzil
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Kto wprowadził pozycję
::  OLD: \up_wprowadzil/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=gsub(10+username(),'~',' ')+' '+$date()+' '+$time();
_wyn


\trig_add_uppoj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: triger po ADD tabela UMP
::  OLD: \trig_add_uppoj/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
UPMLOG.cntx_psh();

_rr:=($(date()~1))+2;
UPMLOG.use('uplm'+ST.ODDZ+_rr);
UPMLOG.prefix();
UPMLOG.blank();
UPMLOG.UM:=UPMPOJ.UM;
UPMLOG.UPM:=UPMPOJ.UPM;
UPMLOG.ODDZ:=ST.ODDZ;
UPMLOG.POS:=$UPMPOJ.POS;

UMO.POS_AE:=UPMPOJ.POS;
UPMLOG.A_POS:=UMO.POS_AE().MIA().NAZ+' '+UMO.POS_AE().UL().UL+' '+UMO.POS_AE().NR;

UPMLOG.ACTION:='add';
UPMLOG.TAB:='UPMPOJ';
UPMLOG.MENU:=menu_txt;
UPMLOG.D:=date();
UPMLOG.T:=time();
UPMLOG.USER:=username;
UPMLOG.A_M:=UPMPOJ.M;
UPMLOG.A_ONAG:=UPMPOJ.ONAG;
UPMLOG.A_IL:=UPMPOJ.IL;
UPMLOG.A_HN:=UPMPOJ.HN;
UPMLOG.A_ODP:=UPMPOJ.KODODP;
UPMLOG.A_UPSYS:=UPMPOJ.UPSYS;
UPMLOG.A_OD:=UPMPOJ.DP;
UPMLOG.A_DO:=UPMPOJ.DZ;
UPMLOG.A_BR:=UPMPOJ.BRYG;
UPMLOG.add();
UPMLOG.cntx_pop();
~~


\trig_put_uppoj
::--------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: triger po PUT tabela UPMPOJ
::  OLD: \trig_put_uppoj/um_mia.fml
::  OLD: \trig_put_quppoj/new_um.fml
::--------------------------------------------------------------------------------------------------
_zm:=0;

UPMLOG.cntx_psh();
_rr:=($(date()~1))+2;
UPMLOG.use('uplm'+ST.ODDZ+_rr);
UPMLOG.prefix();

UPMLOG.blank();
UPMLOG.UM:=UPM.UM;
UPMLOG.UPM:=UPM.ref;
UPMLOG.ODDZ:=ST.ODDZ;
UPMLOG.TAB:='UPMPOJ';

UMO.POS_BE:=bfld('POS');
UMO.POS_AE:=UPMPOJ.POS;
_zm+=UMO.POS_BE<>UMO.POS_AE;

UPMLOG.POS:=$UMO.POS_BE;

UPMLOG.B_POS:=UMO.POS_BE().MIA().NAZ+' '+UMO.POS_BE().UL().UL+' '+UMO.POS_BE().NR;
UPMLOG.A_POS:=UMO.POS_AE().MIA().NAZ+' '+UMO.POS_AE().UL().UL+' '+UMO.POS_AE().NR;

UPMLOG.ACTION:='put';
UPMLOG.MENU:=menu_txt;
UPMLOG.D:=date();
UPMLOG.T:=time();
UPMLOG.USER:=username;
UPMLOG.B_IL:=bfld('IL');
UPMLOG.A_IL:=UPMPOJ.IL;
_zm+=UPMLOG.B_IL<>UPMLOG.A_IL;

UPMLOG.B_RFID:=bfld('RFID');
UPMLOG.A_RFID:=UPMPOJ.RFID;
_zm+=UPMLOG.B_RFID<>UPMLOG.A_RFID;

UPMLOG.B_M:=bfld('M');
UPMLOG.A_M:=UPMPOJ.M;
_zm+=UPMLOG.B_M<>UPMLOG.A_M;

UPMLOG.B_UPSYS:=bfld('UPSYS');
UPMLOG.A_UPSYS:=UPMPOJ.UPSYS;
_zm+=UPMLOG.B_UPSYS<>UPMLOG.A_UPSYS;

UPMLOG.B_ODP:=bfld('KODODP');
UPMLOG.A_ODP:=UPMPOJ.KODODP;
_zm+=UPMLOG.B_ODP<>UPMLOG.A_ODP;

UPMLOG.B_HN:=bfld('HN');
UPMLOG.A_HN:=UPMPOJ.HN;
_zm+=UPMLOG.B_HN<>UPMLOG.A_HN;

UPMLOG.B_OD:=bfld('DP');
UPMLOG.A_OD:=UPMPOJ.DP;
_zm+=UPMLOG.B_OD<>UPMLOG.A_OD;

UPMLOG.B_DO:=bfld('DZ');
UPMLOG.A_DO:=UPMPOJ.DZ;
_zm+=UPMLOG.B_DO<>UPMLOG.A_DO;

UPMLOG.B_ONAG:=bfld('ONAG');
UPMLOG.A_ONAG:=UPMPOJ.ONAG;
_zm+=UPMLOG.B_ONAG<>UPMLOG.A_ONAG;

ZLBR.cntx_psh();
ZLBR.prefix();
{? ZLBR.seek(bfld('BRYG'))
|| UPMLOG.B_BR:=ZLBR.ref
?};
ZLBR.cntx_pop();
UPMLOG.A_BR:=UPMPOJ.BRYG;
_zm+=UPMLOG.A_BR<>UPMLOG.B_BR;

{? _zm || UPMLOG.add() ?};

UPMLOG.cntx_pop();
~~


\na_wyp_okna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Na wypelnienie okna grupowego
::  OLD: \na_wyp_okna/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
UPMPOJ.index('UM');
UPMPOJ.prefix(UMM.ref(),'brak',null());
UPMPOJ.first();
grp_disp(UPMPOJ,'WER');
DOKUM.index('DOKUM');
DOKUM.prefix(REF.FIRMA,'brak danych',);
DOKUM.first();
DOKUM.actions(exec('dokum_win_sel','umowy_miejskie'),,,1);
grp_disp(DOKUM,exec('dokum_win_sel','umowy_miejskie'));
win_activate('WERUPM');
''


\dokum_win_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS: Jakie okienko ma byc dla zdarzeń
::  OLD: \dokum_win_sel/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
'WER_U'


\po_odry_upm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Po obsludze okna z pozycjami odrysowanie okien skladowych
::  OLD: \po-odry_upm/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
{? UPM.get() || POLA.REFSQL:=$UPM.POS || POLA.REFSQL:='brak danych' ?};

_pos:=UPM.POS;

_dz:=UPM.POS().DZI().KOD+';';
_ul:=UPM.POS().UL().MIA().NAZ+';'+UPM.POS().UL().UL+';';
_posnr:=UPM.POS().UL().MIA().NAZ+';'+UPM.POS().UL().UL+';'+UPM.POS().NR+';';

BIGB.index('ADR');
BIGB.prefix(_posnr);
grp_disp(BIGB,'WER');

UPMSEL.index('POS');
UPMSEL.prefix(UMM.ref(),_pos,);
UPMSEL.first();
grp_disp(UPMSEL,'WER');

DOKUM.index('DOK_POS');
DOKUM.prefix(REF.FIRMA,null(),$_pos,);
DOKUM.first();
grp_disp(DOKUM,exec('dokum_win_sel','umowy_miejskie'));

{? UPM.get() & UPM.win_edit('?')='RED'
||
   {? UPM.ONAG<>null
   ||
      UPMPOJ.index('ONAG');
      UPMPOJ.prefix(UMM.ref(),exec('upmpoj_src','umowy_miejskie'),UPM.ONAG)
   ||
      UPMPOJ.index('UM');
      UPMPOJ.prefix(UMM.ref(),exec('upmpoj_src','umowy_miejskie'),UPM.POS)
   ?}
||
   UPMPOJ.index('UM');
   UPMPOJ.prefix(UMM.ref,'brak',null())
?};
UPMPOJ.first();
grp_disp(UPMPOJ,'WER');

__QPODT:='UPMPOJ';
_actm:=M.actions('NL_WERU','W');
UPMZAD.index('POS');
UPMZAD.prefix(ST.ODDZ,'N',UPM.POS);
UPMZAD.first();
grp_disp(UPMZAD,'WER');

{? exec('FindInSet','#table','UPM','POSID',UPM.POS,UMM.ref())=null()
|| UPMPOJ.actions_grayed('WER','D:D');
   UPMSEL.actions_grayed('WER','D:D')
|| UPMPOJ.actions_grayed('WER','');
   UPMSEL.actions_grayed('WER','')
?};
1


\umm_drukuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS: Wydruk umowy miejskiej
::  OLD: \umm_drukuj/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','LUM_UMM_ZWYD','lum_umy_10*','Wydruki dotyczące umów miejskich',2,,,,,,'W')


\umm_pojemm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Akcja pojemniki
::  OLD: \umm_pojemn/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
UPMPOJ.win_sel('WER_UM');
UPMPOJ.index('POS');
UPMPOJ.prefix(UMM.ref,);
UPMPOJ.select();
UPMPOJ.win_sel('WER');
''


\chk_um
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Sprawdza poprawnośc wypełnienia nagłówka umowy miejskiej
::  OLD: \spr_umm_rec/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=__CHK.record(UMM,,'SYM','KH','OD');
{? _res='' & UMM.DO<>date(0,0,0) & UMM.OD>UMM.DO
|| FUN.info('Niepoprawny zakres dat.'@);
   _res:='DO'
?};
_res


\umref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: blank dla UPM.UM naglowek umowy
::  OLD: \umref/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
UMM.ref()


\be_set_umo_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: przed redakcją pola UPM.POS
::  OLD: \be_set_umo_pos/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
UPM.AM:=UPM.OD~2;
UPM.AR:=UPM.OD~1;
UMO.MIA:=null();
UMO.UL:=null();
UMC.MIA:=UMM.MIA;
1


\ae_upm_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Po redakcji posesji
::  OLD: \ae_qup_pos/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
UPM.MIA:=UPM.POS().MIA;
UPM.UL:=UPM.POS().UL;
UPM.NRL:=UPM.POS().NR;
UMC.MIA:=null();
1


\czy_oslona_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Przed wyswietleniem oslony kolor
::  OLD: \czy_oslona_new/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
::{? UPM.ONAG<>null || '0:0:0,121:188:255' || '' ?}
''


\onag_be_upm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS: Przed redakcją UPM.ONAG
::  OLD: \onag_be_upm/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
__onag:=UPM.ONAG;
1


\onag_ae_upm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS: Po redakcji UPM.ONAG
::  OLD: onag_ae_upm/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1; _txt:='';
{? -(menu_txt())<>'dołącz' & __onag=null() & UPM.ONAG<>__onag
||
    UPMPOJ.cntx_psh();
    UPMPOJ.index('UM');
    UPMPOJ.prefix(UMM.ref(),exec('upmpoj_src','umowy_miejskie'),UPM.POS);
    {? UPMPOJ.first()
    ||
      {!|?
        {? UPMPOJ.DZ<>date(0,0,0)
        || _wyn:=0;
          _txt:='Nie można wpisać osłony jeśli pozycja ma pojemniki. \n Zakończ daty na pojemnikach lub '@;
          _txt+='usuń pojemniki z pozycji umowy.'@
        ?};
         _wyn & UPMPOJ.next()
      !}
    ?};
   UPMPOJ.cntx_pop()
?};
{? _wyn=0 & _txt<>'' || FUN.info(_txt) || &__onag ?};
_wyn


\ae_pop_upmm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS:  Po poprawa dla pozycji umowy miejskiej
::  OLD: \ae_pop_upmm/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
UPMPOJ.cntx_psh();
UPMPOJ.index('UM');
UPMPOJ.prefix(UMM.ref(),exec('upmpoj_src','umowy_miejskie'),UPM.POS);
{? UPMPOJ.first()
|| {!
   |? {? UPMPOJ.DZ=date(0,0,0)
      || UPMPOJ.DZ:=UPMPOJ.UPM().DO;
         exec('pos_mia_ul','umowy_miejskie');
         UPMPOJ.put(1)
      ?};
      UPMPOJ.next
   !}
?};
UPMPOJ.cntx_pop();
1


\usun_upm_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS:  Obsluga usun dla pozycji umowy miejskiej
::  OLD: \usun_upm_pozy/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
_onag:=UPM.ONAG;
UPM.cntx_psh();
UPM.index('ONAG');
UPM.prefix(UMM.ref,_onag,'N');
_si:=UPM.size;
UPM.cntx_pop();
_text:='Usunąć rekord'@;
{? UPM.ONAG<>null & _si=1 || _text+=' oraz zakończyć pozycje pojemników w osłonie?'@
|? UPM.ONAG<>null & _si>1 || _text+='?\nUwaga. Nie nastąpi zakończenie pojemników w osłonie,'
                                    '\nponieważ jest ona także pod inną pozycją.'@
|? UPM.ONAG=null || _text+=' oraz zakończyć pozycje pojemników?'@
?};
{? FUN.ask(_text)
|| do();
   _onag:=UPM.ONAG;
   UPM.cntx_psh();
   UPM.index('ONAG');
   UPM.prefix(UMM.ref,_onag,'N');
   _si:=UPM.size;
   UPM.cntx_pop();
:: Usuwanie pozycji
   UPM.cntx_psh();
   UPM.prefix();
   UPM.ARCH:='T';
   UPM.DO:=date();
   UPM.MOD:=exec('up_wprowadzil','umowy_miejskie');
   exec('pos_mia_ul','umowy_miejskie');
   UPM.put();
   _ref:=UPM.ref;
   UPM.cntx_pop();
   {? _onag<>null
   || {? _si=1
      || UPMPOJ.index('ONAG');
         UPMPOJ.prefix(UMM.ref,_onag,);
         {? UPMPOJ.first()
         || {!
            |? UPMPOJ.DZ:=date();
               UPMPOJ.POW:='Usunięcie pozycji %1'@[exec('up_wprowadzil','umowy_miejskie')];
               exec('pos_mia_ul','umowy_miejskie');
               UPMPOJ.put();
               UPMPOJ.next()
            !}
         ?}
      ?}
   || UPMPOJ.index('UPM');
      UPMPOJ.prefix(UMM.ref,_ref);
      {? UPMPOJ.first()
      || {!
         |? UPMPOJ.DZ:=date();
            UPMPOJ.POW:='Usunięcie pozycji %1'@[exec('up_wprowadzil','umowy_miejskie')];
            exec('pos_mia_ul','umowy_miejskie');
            UPMPOJ.put();
            UPMPOJ.next()
         !}
      ?}
   ?};
   end();
   exec('po_odry_upm','umowy_miejskie')
?}


\zm_grp_uppoj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Grupowa zmiana pojemników
::  OLD: \zm_grp_uppoj/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
UPMPOJ.index('POS');
UPMPOJ.prefix(UMM.ref,);
UPMPOJ.win_sel('WER_ZM');
UPMPOJ.select()


\histo_upm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS: Historia zmian dla pozycji
::  OLD: \histo_upm/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
_sel:=UPMLOG.grp_make('Historia zmian w podziale na lata'@,,'upmlog001');

UPMLOG.cntx_psh();

VAR_DEL.delete('bie_r');
_il:=0;
czy_dsp:=0;
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1,);
{? OKR.last()
|| {!
   |? UPMLOG.use('uplm'+ST.ODDZ+($OKR.ROK+2));
      UPMLOG.index('D');
      UPMLOG.prefix(UMM.ref,UPM.ref,);
      {? UPMLOG.first()
      || _il+=1;
         _form:=$('czy_dsp:=1;bie_r:='+$OKR.ROK+';UPMLOG.use(\'uplm\'+ST.ODDZ+($bie_r+2));UPMLOG.index(\'D\');
                  UPMLOG.prefix(UMM.ref,UPM.ref,)');
         {? _il<16
         || UPMLOG.grp_sel(_sel,UPMLOG,'WER',$OKR.ROK,,,,,_form,,,,'maximized')
         ?}
      ?};
      OKR.prev()
   !};
   OKR.find_key(ST.AR);
   {? _il=0
   || _form:=$('czy_dsp:=1;bie_r:='+$OKR.ROK+';UPMLOG.use(\'uplm\'+ST.ODDZ+($bie_r+2));UPMLOG.index(\'D\');
               UPMLOG.prefix(UMM.ref,UPM.ref,)');
      UPMLOG.grp_sel(_sel,UPMLOG,'WER',$OKR.ROK,,,,,_form,,,,'maximized')
   ?}
?};
OKR.cntx_pop();
UPMLOG.win_sel(_sel);
UPMLOG.select();
UPMLOG.cntx_pop();
UPMLOG.win_sel('WER');
UPMLOG.win_del(_sel);
''


\his_onag_bzm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS:  Wyswietla zmiany gdzie oslona wystepuje po zmianie
::  OLD: \his_onag_bzm/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
{? UPM.ONAG=null || FUN.info('Akcja dostępna tylko dla pozycji z uzupełnioną osłoną.'@); return(0) ?};
_sel:=UPMLOG.grp_make('Historia zmian w podziale na lata'@,,'upmlog001');

UPMLOG.cntx_psh();

VAR_DEL.delete('bie_r');
_il:=0;
czy_dsp:=0;
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1,);
{? OKR.last()
|| {!
   |? UPMLOG.use('uplm'+ST.ODDZ+($OKR.ROK+2));
      UPMLOG.index('ONAG_B');
      UPMLOG.prefix(UMM.ref,UPM.ONAG,);
      {? UPMLOG.first()
      || _il+=1;
         _form:=$('czy_dsp:=1;bie_r:='+$OKR.ROK+';UPMLOG.use(\'uplm\'+ST.ODDZ+($bie_r+2));UPMLOG.index(\'ONAG_B\');
                  UPMLOG.prefix(UMM.ref,UPM.ONAG,)');
         {? _il<16
         || UPMLOG.grp_sel(_sel,UPMLOG,'WER',$OKR.ROK,,,,,_form,,,,'maximized')
         ?}
      ?};
      OKR.prev()
   !};
   OKR.find_key(ST.AR);
   {? _il=0
   || _form:=$('czy_dsp:=1;bie_r:='+$OKR.ROK+';UPMLOG.use(\'uplm\'+ST.ODDZ+($bie_r+2));UPMLOG.index(\'ONAG_B\');
               UPMLOG.prefix(UMM.ref,UPM.ONAG,)');
      UPMLOG.grp_sel(_sel,UPMLOG,'WER',$OKR.ROK,,,,,_form,,,,'maximized')
   ?}
?};
OKR.cntx_pop();
UPMLOG.win_sel(_sel);
UPMLOG.select();
UPMLOG.cntx_pop();
UPMLOG.win_sel('WER');
UPMLOG.win_del(_sel);
''


\his_onag_aezm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS: Wyswietla zmiany gdzie oslona trafia po zmianie
::  OLD: \his_onag_aezm/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
{? UPM.ONAG=null || FUN.info('Akcja dostępna tylko dla pozycji z uzupełnioną osłoną.'@); return(0) ?};
_sel:=UPMLOG.grp_make('Historia zmian w podziale na lata'@,,'upmlog001');

UPMLOG.cntx_psh();

VAR_DEL.delete('bie_r');
_il:=0;
czy_dsp:=0;
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1,);
{? OKR.last()
|| {!
   |? UPMLOG.use('uplm'+ST.ODDZ+($OKR.ROK+2));
      UPMLOG.index('ONAG_A');
      UPMLOG.prefix(UMM.ref,UPM.ref,);
      {? UPMLOG.first()
      || _il+=1;
         _form:=$('czy_dsp:=1;bie_r:='+$OKR.ROK+';UPMLOG.use(\'uplm\'+ST.ODDZ+($bie_r+2));UPMLOG.index(\'ONAG_A\');
                  UPMLOG.prefix(UMM.ref,UPM.ONAG,)');
         {? _il<16
         || UPMLOG.grp_sel(_sel,UPMLOG,'WER',$OKR.ROK,,,,,_form,,,,'maximized')
         ?}
      ?};
      OKR.prev()
   !};
   OKR.find_key(ST.AR);
   {? _il=0
   || _form:=$('czy_dsp:=1;bie_r:='+$OKR.ROK+';UPMLOG.use(\'uplm\'+ST.ODDZ+($bie_r+2));UPMLOG.index(\'ONAG_A\');
               UPMLOG.prefix(UMM.ref,UPM.ONAG,)');
      UPMLOG.grp_sel(_sel,UPMLOG,'WER',$OKR.ROK,,,,,_form,,,,'maximized')
   ?}
?};
OKR.cntx_pop();
UPMLOG.win_sel(_sel);
UPMLOG.select();
UPMLOG.cntx_pop();
UPMLOG.win_sel('WER');
UPMLOG.win_del(_sel);
''


\up_rec_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS:  Akcja rekod dla tebeli pozycji umowy miejskiej
::  OLD: \up_rec_be/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
_act:={? UPM.ARCH='T' || 'Y' || 'A' ?};
UPM.actions_grayed('WER',_act);
''


\upm_rec_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Formula rekord po sprawdzenie wypełnienia
::  OLD: \upm_rec_ae/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=__CHK.record(UPM,,'OD','POS');
{? _res='' & UPM.DO<>date(0,0,0) & UPM.OD>UPM.DO
|| FUN.info('Niepoprawny zakres dat.'@);
   _res:='DO'
?};
{? _res=''
|| _pos:=UPM.POS;
   UPM.cntx_psh();
   UPM.index('ZM');
   UPM.prefix(UMM.ref,_pos,'T');
   {? 1+menu_txt()='D'
   || {? UPM.first()  || _res:='POS' ?}
   || {? UPM.size()>1 || _res:='POS' ?}
   ?};
   UPM.cntx_pop();
   {? _res<>''
   || FUN.info('Wprowadzono już pozycję umowy dla posesji:\n\n'
       '%1, %2, %3'[UPM.POS().MIA().NAZ,UPM.POS().UL().UL,UPM.POS().NR])
   ?}
?};
_res


\dokum_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS: Jakie okienko ma byc dla zdarzeń
::  OLD: \dokum_win_edit/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
'REDK1'


\uptmstamp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Zanacznik czasowy dla loga
::  OLD: \uptmpstamp/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
UPMLOG.tm_stamp()


\umplogtab1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Przed wyswietl dla pola w UMPLOG
::  OLD: \umplogtab1/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:=2-cur_afld() ?} || _a:=2-cur_afld() ?};
_wyn:='';
_color_sz:='125:125:125,125:125:125';
_color_bz:='';
_wyn:={? _a='ILO'
      || {? UPMLOG.TAB='UPM' || _color_bz  || _color_sz ?}
      |? _a='M2'
      || {? UPMLOG.TAB='UPM' || _color_bz || _color_sz ?}
      |? _a='SRW'
      || {? UPMLOG.TAB='UPM' || _color_bz || _color_sz  ?}
      |? _a='HN'
      || {? UPMLOG.TAB='UPM' || _color_sz || _color_bz ?}
      |? _a='UPSYS'
      || {? UPMLOG.TAB='UPM'  || _color_sz || _color_bz ?}
      |? _a='ODP'
      || {? UPMLOG.TAB='UPM'  || _color_sz || _color_bz  ?}
      |? _a='M'
      || {? UPMLOG.TAB='UPM' || _color_sz || _color_bz ?}
      |? _a='RFID'
      || {? UPMLOG.TAB='UPM' || _color_sz || _color_bz ?}
      |? _a='IL'
      || {? UPMLOG.TAB='UPM'  || _color_sz || _color_bz ?}
      |? _a='SEG'
      || {? UPMLOG.TAB='UPM' || _color_bz || _color_sz ?}
      |? _a='REG'
      || {? UPMLOG.TAB='UPM' || _color_bz || _color_sz ?}
      |? _a='POS'
      || ''
      |? _a='ONAG'
      || ''
      || ''
      ?};
_wyn


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Zaznacza wymagalne pola w nagłówku umowy
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || UMM.win_edit('?') ?};

:: okno informacyjne
{? _win_red='INFO'
|| _enable:={? {? UMM.f_active() || UMM.f_get() || UMM.get() ?} || 'enable=1' || 'enable=0' ?};
   UMM.efld_opt(_win_red,_enable,,'KH');
   UMM.efld_opt(_win_red,_enable,,'MIA');
   UMM.efld_opt(_win_red,_enable,,'OD');
   UMM.efld_opt(_win_red,_enable,,'DO')
?};
~~


\um_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Umowa - tymczasowe okienko redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_akr:='RED';
:: Tymczasowe okno redakcji
_title:='Dane umowy miejskiej';
_win_red:=UMM.mk_edit(_title);
UMM.win_ewin(_win_red,,_win_akr);
_win_red


\um_win_edit_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Ustawia okno redakcji tabeli UMM, wymagane pola, okna słowników
::   WE: [_a] - 1-bez zakończ 0-(domyślnie) z zakończ
::----------------------------------------------------------------------------------------------------------------------
_disp:={? var_pres('_a')=type_of(0) || _a || 0 ?};

BPMN.END:=0;
_win_red:=exec('um_win_edit','umowy_miejskie');
exec('set_efld_opt','umowy_miejskie',_win_red);
{? ~_disp
|| exec('ok_esc','#window',UMM,_win_red,1)
?};
UMM.win_edit(_win_red);
exec('set_efld_opt','umowy_miejskie',_win_red);
exec('sel_win_kh','ustawienia')


\um_pozycje_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Umowy miejskie - Pozycje - okno redagowania
::   WE: params_get()   - ustawiane w exec('um_pop','umowy')
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_btnRuleResult:='';

_fld:=params_exec('um_edit_finisher','umowy_miejskie',UM.ref());

{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| BPMN.END:=1;
   exec('up_sel','umowy_miejskie');
   {? BPMN.END=2 || _btnRuleResult:=params_exec('um_zakoncz_red','umowy') ?}
?};

_btnRuleResult


\um_edit_finisher
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Kod wykańczający po UM.edit() w różnych kontekstach
::   WE: _a - UM.ref()
::   WE: params_get()
::----------------------------------------------------------------------------------------------------------------------
:: Sprawdzenie poprawności wypełnienia pól nagłówka dokumentu sprzedaży
_fld:=params_exec('chk_um','umowy_miejskie');
{? _fld<>''
|| _fld
|| _out:=params_get().context.out;
   _mp:=params_get().context.mp;
   _akcja:=params_get().context.akcja;
   _var_umpop:=params_get().var_umpop;

   {? _akcja='Dołącz' | _akcja='START_TODO' | _mp.pathProc()
   || params_set('var_umpop',_var_umpop);
      exec('um_pop_po','umowy_miejskie');
      _var_umpop.PO_FIRST:=2
   |? _akcja='Popraw' | _mp.pathTodo()
   || params_set('var_umpop',_var_umpop);
      exec('um_pop_po','umowy')
   ?};
   ''
?}


\um_zakoncz_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Umowa cykliczna - Zakończ - okno redagowania
::   WE: params_get()   - ustawiane w exec('zdptw_pop','zamdst_ptw')
::                      - ustawiane w exec('zddol','zamdst_nag')
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().context.mp;

_btnRuleResult:='';

_fld:=params_exec('um_edit_finisher','umowy_miejskie',UMM.ref());
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| {? exec('zakoncz','umowy')
   || _btnRuleResult:='key:F2';
      _mp.done()
   ?}
?};

_btnRuleResult


\um_pop_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Obsługa popraw po zakończeniu edycji (UMM.edit)
::----------------------------------------------------------------------------------------------------------------------
_var_umpop:=params_get().var_umpop;

_kh:=_var_umpop.KH;
_od:=_var_umpop.OD;
_do:=_var_umpop.DO;
_rfid:=_var_umpop.RFID;
_mia:=_var_umpop.MIA;
_po_first:=_var_umpop.PO_FIRST;

{? _po_first=1
:: Dotyczy wywołania dla Dołącz - wtedy jako wartości przd ustawia zmienne z nagłówka
|| _kh:=UMM.KH;
   _od:=UMM.OD;
   _do:=UMM.DO;
   _rfid:=UMM.RFID;
   _mia:=UMM.MIA
?};
UMM.put();
''


\um_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: dodanie nowej umowy miejskiej
::   WY: UMM.ref dodanej umowy
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(null()) || _a:=null() ?};

_bie_um:=#UMM.ref();
_new_um:=null();
_wyn:=null();
_res:=0;
UMM.cntx_psh();
UMM.clear();
UMM.blank();
UMM.KH:=_a;
{? UMM.add() & UMM.r_lock(1,1,1)
||
   {? UMM.f_active() || UMM.f_add() ?};
   _new_um:=UMM.ref();

   _var_umpop:=exec('var_umpop','umowy_miejskie');
   _var_umpop.KH:=null();
   _var_umpop.OD:=date(0,0,0);
   _var_umpop.DO:=date(0,0,0);
   _var_umpop.RFID:='';
   _var_umpop.MIA:=null();
   _var_umpop.PO_FIRST:=1;

   _context:=params_get();

   params_set('context',_context,'var_umpop',_var_umpop);
   exec('um_win_edit_set','umowy_miejskie');

   {? UMM.edit("params_exec('chk_um','umowy_miejskie')")
   ||
::       dodanie umowy
      _res:=UMM.put();
      {? _res
      || _wyn:=UMM.ref();
         {? _var_umpop.PO_FIRST=1
         || {? exec('FindInSet','#table','UPM','POS',UMM.ref())=null()
            || BPMN.END:=1;
               exec('up_sel','umowy_miejskie');
               {? BPMN.END=2 & exec('FindInSet','#table','UPM','POS',UMM.ref())<>null()
               || params_set('context',_context,'var_umpop',_var_umpop);
                  exec('um_zakoncz_red','umowy_miejskie')
               ?}
            ?}
         ?}
      ?};
      UMM.r_unlock()
   ||
::       usuwanie umowy
      _uidref:=UMM.uidref();
      exec('um_del','umowy_miejskie',1);
      {? ~UMM.seek(_uidref) || _new_um:=null ?}
   ?}
||
   FUN.info('Nieudana próba zablokowania tabeli nagłówka umowy miejskiej.\nSpróbuj ponownie.'@)
?};
UMM.cntx_pop();

{? _new_um=null()
||
   {? _bie_um>0 || {? UMM.f_active() || UMM.f_rfresh(); UMM.f_seek(_bie_um,) || UMM.seek(_bie_um,) ?} ?}
||
   {? {? UMM.f_active() || UMM.f_rfresh(); UMM.f_seek(_new_um,) || UMM.seek(_new_um,) ?}=0
   ||
      FUN.info('Aktualnie zredagowana umowa miejska'
               'nie jest dostępne w ustawionym zakresie widoku umów miejskich.'@);
      {? _bie_um>0 || {? UMM.f_active() || UMM.f_rfresh(); UMM.f_seek(_bie_um,) || UMM.seek(_bie_um,) ?} ?}
   ?}
?};

_wyn


\var_umpop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Zmienna - Poprawa nagłówka
::   WY: uchwyt do zmiennej
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new('PO_FIRST','KH','OD','DO','RFID','MIA');
_wyn


\um_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: usuwanie umowy
::   WE: [_a] - czy wyswietlac pytanie 0 -tak, 1 -nie
::   WY: wynik UMM.del
::  OLD: \um_del/um.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
_wyn:=0;

{? UMM.r_lock(1,1,1)
||
   UMM.get();
   {? UMM.STAT_REJ='N'
   || {? {? _a=1 || _pyt:=1 || _pyt:=FUN.ask('Usunąć umowę miejską nr %1?'@[UMM.SYM]) ?};_pyt
      || do();

::       usuwanie powiazanych log-ów
         UPMLOG.index('D');
         UPMLOG.prefix(UMM.ref());
         {? UPMLOG.first()
         || {!
            |?
               _del:=0;
               {? UPMLOG.count()=0 || _del:=UPMLOG.del() ?};
               _del
            !}
         ?};

::       usuwanie powiazanych pojemników
         UPMPOJ.index('POS');
         UPMPOJ.prefix(UMM.ref());
         {? UPMPOJ.first()
         || {!
            |?
               _del:=0;
               {? UPMPOJ.count()=0 || _del:=UPMPOJ.del() ?};
               _del
            !}
         ?};

::       usuwani pozycji umowy
         UPM.index('POS');
         UPM.prefix(UMM.ref());
         {? UPM.first()
         || {!
            |?
               _del:=0;
               {? UPM.count()=0 || _del:=UPM.del() ?};
               _del
            !}
         ?};

         {? UMM.count()=0
         ||
            _wyn:=UMM.del()
         ||
            undo();
            FUN.info('Umowa miejska została już wykorzystana w systemie.\nUsunięcie niemożliwe.'@)
         ?};
         end()
      ?};
      UMM.r_unlock()
   || FUN.info('Umowa miejska %1 nie podlega modyfikacji.\nUsunięcie niemożliwe.'@[UMM.SYM])
   ?}
||
   {? FUN.ask('Dokument obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@) & UMM.r_lock(1,,1)
   || UMM.r_unlock()
   ?}
?};
_wyn


\zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Umowa miejska - Zakończenie rejestracji
::   WE: params_get()   - ustawiane w main
::----------------------------------------------------------------------------------------------------------------------
_result:=0;

_no_pos:=exec('FindInSet','#table','UPM','POS',UMM.ref())=null();

UMM.cntx_psh();
{? UMM.STAT_REJ='Z'
|| _txt:='Zakończono już rejestrację umowy miejskiej.'@;
   FUN.info(_txt);
   _result:=1
|| _ok:=1;
   {? UMM.KH=null()
   || FUN.info('Należy uzupełnić dostawcę w nagłówku umowy miejskiej.'@);
      _ok:=0
   |? _no_pos
   || FUN.info('Brak pozycji na umowie miejskiej.\nOperacja niemożliwa.'@);
      _ok:=0
   ?};

   {? _ok & (BPMN.END=2 | FUN.ask('Zakończyć rejestrację umowy miejskiej %1?'@[UMM.SYM]))
   || UMM.STAT_REJ:='Z';
      {? UMM.put() || _result:=1 ?}
   ?}
?};
UMM.cntx_pop();
{? ~_no_pos & _result || UMM.get() ?};

_result


\um_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: poprawa nagłówka umowy miejskiej
::----------------------------------------------------------------------------------------------------------------------
UMM.cntx_psh();
{? exec('um_lock','umowy_miejskie') & UMM.r_lock(1,1,1)
||
   _var_umpop:=exec('var_umpop','umowy_miejskie');
   _var_umpop.KH:=UMM.KH;
   _var_umpop.OD:=UMM.OD;
   _var_umpop.DO:=UMM.DO;
   _var_umpop.RFID:=UMM.RFID;
   _var_umpop.MIA:=UMM.MIA;
   _var_umpop.PO_FIRST:=0;

   params_set('context',params_get(),'var_umpop',_var_umpop);

   {? UMM.STAT_REJ='N'
   ||
      exec('um_win_edit_set','umowy_miejskie');
      _stat_rej:=UMM.STAT_REJ;
      {? UMM.edit("params_exec('chk_um','umowy_miejskie')")
      || {? _stat_rej=UMM.STAT_REJ || exec('um_pop_po','umowy_miejskie') ?}
      ?}
   ||
      FUN.info({? UMM.STAT_REJ='Z'
               || 'Zakończono redakcję umowy miejskiej %1.'
                  '\n\nModyfikacja nagłówka umowy miejskiej niemożliwa.'@[UMM.SYM]
               || 'Brak informacji o statusie umowy miejskiej %1.'
                  '\n\nModyfikacja nagłówka umowy miejskiej niemożliwa.'@[UMM.SYM]
               ?})
   ?}
?};
UMM.r_unlock();
UMM.cntx_pop();
''


\um_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: lock naglowka umowy miejskiej
::   WE: [_a] - czy pytac o wyswietlenie osoby blokujacej lub dodanie do komunikatu (0- tak, 1 -nie)
::   WY: _wyn - 0-zablokowany 1-bez blokady
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_wyn:=UMM.r_lock(1,1,1);
{? _a=0 & _wyn=0
||
   _txt:='Umowę miejską %1 obsługuje inny użytkownik.'@[UM.SYM];
   {?
      _wyn=0
         &
      {? var_pres('__kom')>100
      || exec('add_kom','#message',_txt,4);0
      || FUN.ask(_txt+'\n'+'Czy chcesz zobaczyć kto?'@)
      ?}
   ||
      UMM.r_lock(1,,1)
   ?}
?};
UMM.r_unlock();
_wyn


\up_qum_filtr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [11.20]
:: OPIS: Filtr na posesje
::   WE:
::   WY:
::  OLD: \up_qum_filtr/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
UMO.win_edit('SZUK_POS');
{? UMO.edit(,,'FUL')
||
   _sql:='select MIA.NAZ,UL.UL,POS.NR,UPM.REFERENCE as REF from UPM ';
   _sql+=' join MIA using(UPM.MIA,MIA.REFERENCE) ';
   _sql+=' join UL using(UPM.UL,UL.reference) ';
   _sql+=' join POS using(UPM.POS,POS.REFERENCE) ';
    _sql+=' where UPM.UM=:_a ';
  _il:=1;
  {? UMO.FMIA<>'' ||  {? _il || _sql+=' and ' ?}; _sql+='lower(MIA.NAZ) like \'%\'||\':_b\'||\'%\''; _il+=1 ?};
  {? UMO.FUL<>'' || {? _il || _sql+=' and ' ?}; _sql+='lower(UL.UL) like \'%\'||\':_c\'||\'%\''; _il+=1 ?};
  {? UMO.NRL<>'' || {? _il || _sql+=' and ' ?}; _sql+='lower(POS.NR) like \'%\'||\':_d\'||\'%\''; _il+=1 ?};
  _sql+=' order by 1,2,3,4,5';
  _fil:=psql(_sql,UMM.ref,-UMO.FMIA,-UMO.FUL,-UMO.NRL);
  _acr:=_fil.mk_sel('Filtr dla posesji'@,,0,,1);
  _fil.win_fld(_acr,,'NAZ',,,,,,'Miasto'@);
  _fil.win_fld(_acr,,'UL',,,,,,'Ulica'@);
  _fil.win_fld(_acr,,'NR',,,,,,'Nr posesji'@);
  _fil.win_sel(_acr);
  _wys:="UPM.cntx_psh();
         {? UPM.seek(cur_tab.REF)
         || UPM.display()
         ?};
         UPM.cntx_pop()";
  _fil.win_act(_acr,,'Wyświetl'@,,,,_wys);
  _fil.win_act(_acr,,'Formuła','Wybierz'@@,,,"sel_exit",,1);
  {? _il>=2 & _fil.select()
  || UPM.seek(_fil.REF)
  ?};
  obj_del(_fil)
?};
''


\upm_zlp_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qup_zlp_shwo/new_um.fml (MPGK)
::----------------------------------------------------------------------------------------------------------------------
{? BIGB.ZLP<>null()
|| ZLP.cntx_psh();
   ZLE.cntx_psh();
   ZLP.use(ref_name(BIGB.ZLP));
   ZLP.prefix();
   {? ZLP.seek(BIGB.ZLP,)
   || exec('zlp_aktu','umowy_zlecenia');
      exec('zlp_zwys','umowy_faktury')
   ?};
   ZLP.cntx_pop();
   ZLE.cntx_pop()
?};
''


\be_obsl_upm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [wrt_1120]
:: OPIS:
::   WE:
::   WY:
::  OLD: \be_obsl_qup/new_um.fml (MPGK)
::----------------------------------------------------------------------------------------------------------------------
_pos:=UPM.POS;
UPM.cntx_psh();
UPM.index('POSID');
UPM.prefix(UMM.ref,_pos,);
UPM.first()


\ae_obsl_upm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [wrt_1120]
:: OPIS:
::   WE:
::   WY:
::  OLD: \ae_obsl_upm/new_um.fml (MPGK)
::----------------------------------------------------------------------------------------------------------------------
UPM.cntx_pop();
1


\add_dokum_upm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [wrt_1120]
:: OPIS: Dołączenie załącznika dla pozycji umowy miejskiej
::   WE:
::   WY:
::  OLD: \add_dokum_qup/new_um.fml (MPGK)
::----------------------------------------------------------------------------------------------------------------------
POLA.REFSQL:=$UPM.POS;
DOKUM.cntx_psh();
DOKUM.blank();
DOKUM.bl_file('DOKUM',1);
DOKUM.REFSQL:=POLA.REFSQL;
DOKUM.TYP:='I';
POM.TAB:='DOKUM';
POM.TYPDOK:='SYS';
exec('add_grnr','numery','SYS');
DOKUM.NR:=exec('numer_new','numery','PACZKA');
::exec('znak','numery','DOKUM',0);
DOKUM.KH:=null;
DOKUM.prefix();
DOKUM.memo_set(,'OPIS');
DOKUM.win_edit('REDK');
DOKUM.efld_opt('REDK','mark=0',,'KH','KOD');
DOKUM.efld_opt('REDK','mark=0',,'KH_OSOB','NAZWISKO');
DOKUM.btn_eopt('REDK','UPRAW','state=grayed');
{? DOKUM.add()
|| {? DOKUM.r_lock(1,1,1)
   || exec('znak','numery','DOKUM');
      _del_oldnumer:=1;
      _chk:="__CHK.record(DOKUM,,'KR_OP')";
      {? DOKUM.edit(_chk)
      || _wyn:=DOKUM.put();
         {? _wyn || _del_oldnumer:=0 ?};
         DOKUM.memo_put(,'OPIS');
         _file:=DOKUM.bl_file('DOKUM');
         {? _file<>''
         || DOKUM.bl_put('DOKUM',_file);
            DOKUM.NAZWA:=DOKUM.bl_info('DOKUM','NAME')
         ?};
         {? DOKUM.put() || _ref_dok:=DOKUM.ref() ?}
      ?};
      {? _del_oldnumer
      || numer:=DOKUM.NR;
         oldnumer:=1;
         exec('nr_old','numery');
         _uid:=DOKUM.uidref(); _rr:=DOKUM.del(); exec('dokumlog_del','zbl_dok',_uid);
         _rr
      ?};
      DOKUM.r_unlock()
   ?}

?};
DOKUM.cntx_pop();
''


\add_upmsel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS: Dodajemy selekcje.
::   WE:
::   WY:
::  OLD: \add_qupsel/new_um.fml (MPGK)
::----------------------------------------------------------------------------------------------------------------------
UPMSEL.blank();
UPMSEL.ODDZ:=ST.ODDZ;
UPMSEL.UMM:=UMM.ref();
UPMSEL.UP_SRC:='';
UPMSEL.POS:=UPM.POS;
UPMSEL.MIA:=UPM.POS().MIA;
UPMSEL.UL:=UPM.POS().UL;
UPMSEL.ONAG:=UPM.ONAG;
UPMSEL.OD:=date();
UPMSEL.win_edit('RED');
{? UPMSEL.edit("__CHK.record(UPMSEL,,'SELTYP','BRYG','UPSYS','OD')")
|| UPMSEL.add()
?}



\upmpoj_src
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS: Zwraca ID pozycji
::  OLD: \uppj_src/new_um.fml (MPGK)
::----------------------------------------------------------------------------------------------------------------------
{? UPM.ONAG=null || UPM.UP_SRC || '' ?}


\upm_ae_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [wrt_1120]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qup_ae_pop/new_um.fml (MPGK)
::----------------------------------------------------------------------------------------------------------------------
UMO.POS_BE:=UPM.POS;
UPM.MOD:=exec('up_wprowadzil','umowy_miejskie');
1


\spr_czy_poj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS:  Sprawdza przed usunięciem posesji czy są pojemnik.
::   WE:
::   WY:
::  OLD: \spr_czy_poj/new_um.fml (MPGK)
::----------------------------------------------------------------------------------------------------------------------
_del:=1;
{? UPM.ONAG<>null
|| UPMPOJ.index('ONAG');
   UPMPOJ.prefix(UMM.ref(),exec('upmpoj_src','umowy_miejskie'),UPM.ONAG);
   {? UPMPOJ.first()
   || _del:=FUN.ask('Czy usunąć pozycję?\nUwaga. Obecnie są pojemniki w osłonie.'@)
   ?}
|| UPMPOJ.index('UM');
   UPMPOJ.prefix(UMM.ref(),exec('upmpoj_src','umowy_miejskie'),UPM.POS);
   _del:=~UPMPOJ.first();
   {? _del=0 || FUN.info('Należy najpierw usunąć pojemniki, a póżniej pozycję.\nUsunięcie niemożliwe.'@) ?}
?};
_del


\upmpoj_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Dolacz dla pojemnika
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
POMOC.USL:=null();
VAR_DEL.delete('__podstaw');
__podstaw:=0;
_przewoz:=exec('chk_role','#b__box',OPERATOR.USER,'LUM_UMO_DPRZ');
{? _przewoz
|| _win_red:=UPMPOJ.mk_edit('Usługa'@);
   UPMPOJ.win_ewin(_win_red,,'RED')
|| _win_red:='RED'
?};
UPMPOJ.win_edit(_win_red);
{? _przewoz
|| _ff:="__podstaw:=1;'key:F2'";
   _btn:=UPMPOJ.win_ebtn(_win_red
           ,'text=%1,btn_label_align=center,panel=bottom,align=end'['Zakończ i &podstaw'@],_ff);
   _ff:="'key:F2'";
   UPMPOJ.win_ebtn(_win_red
           ,'text=%1,btn_label_align=center,panel=bottom,align=end'['&Zakończ'@],_ff);
   exec('ok_esc','#window',UPMPOJ,_win_red,1,,,0)
?};

_valid:="
   params_exec('upmpoj_valid','umowy_miejskie')
";
UPMPOJ.blank();
UPMPOJ.IL:=1;
exec('upmpoj_efld_opt','umowy_miejskie','RED');
{? UPMPOJ.edit(_valid)
|| exec('pos_mia_ul','umowy_miejskie');
   {? UPMPOJ.add() &  __podstaw
   || exec('upmzad_dolacz','umowy_wspolne','P','UPM')
   ?}
?};
VAR_DEL.delete('__podstaw');
~~


\upmpoj_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Popraw dla pojemnika
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
POMOC.USL:=null();
UPMPOJ.win_edit('RED');
_valid:="
   params_exec('upmpoj_valid','umowy_miejskie')
";
exec('upmpoj_efld_opt','umowy_miejskie','RED');
{? UPMPOJ.edit(_valid)
|| exec('pos_mia_ul','umowy_miejskie');
   UPMPOJ.put()
?};
~~


\ae_add_upmpoj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Po dołącz dla pojemnika , kiedys kontrola RFID
::  OLD: \ae_add_uppoj/um_mia.fml
::       \ae_add_uppoj/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pos_mia_ul','umowy_miejskie');
{? UPMPOJ.RFID<>''
|| UPMPOJ.IL:=1;
   UPMPOJ.put()
?};
1


\upmpoj_rec_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS: Rekord po dodaniu pojemnika
::  OLD: \uppoj_rec_after/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
params_exec('upmpoj_valid','umowy_miejskie')


\zm_gr_har
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS:
::   WE:
::   WY:
::  OLD: \zm_gr_har/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
_do:="
 UPMPOJ.HN:=UMC.HN;
 exec('pos_mia_ul','umowy_miejskie');
 UPMPOJ.put
 ";
{? UPMPOJ.sel_size()>0
||
   _do()
||
  {? exec('zm_gr_przed_upp','umowy_miejskie','Harmonogram')
  || _do()
  ?}
?}


\zm_gr_przed_upp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS:  Akcja grupa przed dla UPMPOJ
::   WE: _a - nazwa akcji
::   WY:  1 - jak wybrano opacje / 0 bez wyboru
::  OLD: \zm_gr_przed_upp/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
UMC.blank();
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
{? _a='Harmonogram' | menu_txt='Harmonogram'
||
   UMC.win_edit('ZM_H');
   UMC.edit("__CHK.record(UMC,,'HN')")
|? _a='kod Odpadu' | 3+menu_txt='Kod'
||
   UMC.win_edit('ZM_K');
   UMC.edit("__CHK.record(UMC,,'ODP')")
|? _a='System usług' | menu_txt='System usług'
||
   UMC.win_edit('ZM_S');
   UMC.edit("__CHK.record(UMC,,'UPSYS')")
|? _a='Pojemnik' | menu_txt='Pojemnik'
||
   UMC.win_edit('ZM_POJ');
   UMC.edit("__CHK.record(UMC,,'M1')")
|? _a='Data DO' | menu_txt='Data do'
||
   UMC.win_edit('ZM_DO');
   UMC.edit("__CHK.record(UMC,,'DO')")
|? _a='Brygada' | menu_txt='Brygada'
||
   UMC.win_edit('ZM_BR');
   UMC.edit("__CHK.record(UMC,,'BRYG')")
?}


\zm_gr_odp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS:
::   WE:
::   WY:
::  OLD: \zm_gr_odp/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
_do:="
 UPMPOJ.KODODP:=UMC.ODP;
 exec('pos_mia_ul','umowy_miejskie');
 UPMPOJ.put
 ";
{? UPMPOJ.sel_size()>0
||
   _do()
||
  {? exec('zm_gr_przed_upp','umowy_miejskie','kod Odpadu')
  || _do()
  ?}
?}


\zm_gr_upsys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS:
::   WE:
::   WY:
::  OLD: \zm_gr_upsys/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
_do:="
 UPMPOJ.UPSYS:=UMC.UPSYS;
 exec('pos_mia_ul','umowy_miejskie');
 UPMPOJ.put
 ";
{? UPMPOJ.sel_size()>0
||
   _do()
||
  {? exec('zm_gr_przed_upp','umowy_miejskie','Częstotliwość')
  || _do()
  ?}
?}


\zm_gr_poj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS:
::   WE:
::   WY:
::  OLD: \zm_gr_poj/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
_do:="
 UPMPOJ.M:=UMC.M1;
 exec('pos_mia_ul','umowy_miejskie');
 UPMPOJ.put
 ";
{? UPMPOJ.sel_size()>0
||
   _do()
||
  {? exec('zm_gr_przed_upp','umowy_miejskie','Pojemnik')
  || _do()
  ?}
?}


\zm_gr_data_do
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS:
::   WE:
::   WY:
::  OLD: \zm_gr_data_do/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
_do:="
 UPMPOJ.DZ:=UMC.DO;
 exec('pos_mia_ul','umowy_miejskie');
 UPMPOJ.put
 ";
{? UPMPOJ.sel_size()>0
||
   _do()
||
  {? exec('zm_gr_przed_upp','umowy_miejskie','Data DO')
  || _do()
  ?}
?}


\zm_gr_bryg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Zmiana brygady w pozycji umowy miejskiej
::----------------------------------------------------------------------------------------------------------------------
_do:="
 UPMPOJ.BRYG:=UMC.BRYG;
 exec('pos_mia_ul','umowy_miejskie');
 UPMPOJ.put
 ";
{? UPMPOJ.sel_size()>0
|| _do()
||{? exec('zm_gr_przed_upp','umowy_miejskie','Brygada')
  || _do()
  ?}
?}


\seltyp_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS:
::   WE:
::   WY:
::  OLD: \seltyp_ref/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
SELTYP.ref()


\selodp_rec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qselodp_rec/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
($('\''+SELODP.CZ+','+SELODP.TLO+'\''))()



\selodp_rec_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qselodp_rec_chk/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
__CHK.record(SELODP,,'SELTYP','ODP')


\ol_czcionki_qs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS: Akcja 'Kolor czcionki' w SELODP
::   WY: 0/1
::  OLD: \qol_czcionki_qs/new_um.fml (MPGK)
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_color:=exec('edit_color','#edit',SELODP.CZ);
{? _color<>''
|| SELODP.CZ:=_color;
   _result:=SELODP.put()
?};
_result


\ol_tla_qs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS: Akcja 'Kolor tła' w SELODP
::   WY: 0/1
::  OLD: \qol_tla_qs/new_um.fml (MPGK)
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_color:=exec('edit_color','#edit',SELODP.TLO);
{? _color<>''
|| SELODP.TLO:=_color;
   _result:=SELODP.put()
?};
_result


\selekcja_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS: Selekcja
::  OLD: \selekcja_sel/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
SELTYP.win_sel('GR_N');
SELTYP.index('OPIS');
SELTYP.prefix();
SELTYP.select()


\seltyp_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja Dołącz w SELTYP
::   WY: 0/1
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
SELTYP.cntx_psh();
SELTYP.prefix();
SELTYP.win_edit('RED');
SELTYP.blank();
ODDZ.cntx_psh();
ODDZ.index('KOD');
ODDZ.prefix();
{? ST.ODDZ<>''
|| SELTYP.efld_opt('RED','mark=0',,'ODDZ');
   SELTYP.ODDZ:=ST.ODDZ
|| {? ODDZ.first()
   || SELTYP.ODDZ:=ODDZ.KOD
   ?}
?};
ODDZ.cntx_pop();
SELTYP.memo_set('');
{? SELTYP.edit("__CHK.record(SELTYP,,'ODDZ','OP','R')")
|| _result:=SELTYP.add();
   {? _result>0
   || _result:=SELTYP.memo_put(,'DR')
   ?}
?};
SELTYP.cntx_pop();
_result


\seltyp_be_oddz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Przed redagowaniem pola oddzial w SELTYP
::   WY: 0/1
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
{? ST.ODDZ<>''
|| _result:=0
?};
_result


\seltyp_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja Popraw w SELTYP
::   WY: 0/1
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
SELTYP.cntx_psh();
SELTYP.prefix();
SELTYP.win_edit('RED');
SELTYP.memo_get();
{? SELTYP.edit("__CHK.record(SELTYP,,'ODDZ','OP','R')")
|| _result:=SELTYP.put();
   {? _result>0
   || _result:=SELTYP.memo_put(,'DR')
   ?}
?};
SELTYP.cntx_pop();
SELTYP.get();
_result


\seltyp_oddz_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuła na F3 oddziału
::   WY: STRING - wybrany kod oddziału
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_result:='';
ODDZ.cntx_psh();
ODDZ.index('KOD');
ODDZ.prefix();
ODDZ.win_sel('SEL');
{? ODDZ.select() || _result:=ODDZ.KOD ?};
ODDZ.cntx_pop();
_result


\sel_ul_prfx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS: Po odświeżeniu w SELTYP
::  OLD: \qsel_ul_prfx/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
SELODP.index('TYP');
SELODP.prefix(SELTYP.ref(),);
grp_disp(SELODP,'WER')


\upm_tmstamp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS: TMSTAMP dla pozycji umowy miejskiej , nadaje unikalność na dokum.
::  OLD: \up_tmstamp/new_um.fml (MPGK)
::----------------------------------------------------------------------------------------------------------------------
$UPM.tm_stamp()


\set_bl_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Po redakcji pola POS dla tabeli SELUL
::----------------------------------------------------------------------------------------------------------------------
1


\sel_typ_sel_01
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qsel_typ_sel_01/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
UMO.UL:={? #SELUL.POS || SELUL.POS().UL || null ?};
''


\rec_typ_sel_ul
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS: sprawdzenie poprawności danych
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?}    || _a:=1 ?};
{? _a
|| _typ:=__CHK.record(SELUL,,'TYP')
|| _typ:=''
?};
_str:='';
{? _typ='' & SELUL.TYP='D'
||
   {? _a || _typ:=__CHK.record(SELUL,,'DZI') ?};
   _str:=SELUL.DZI().KOD+';';
   {? _typ='' & (SELUL.UL<>null | SELUL.POS<>null) || SELUL.UL:=null; SELUL.POS:=null() ?}
|?  _typ='' & SELUL.TYP='U'
|| {? _a || _typ:=__CHK.record(SELUL,,'UL') ?};
   _str:=SELUL.UL().MIA().NAZ+';'+SELUL.UL().UL+';';
   {? _typ='' & (SELUL.DZI<>null | SELUL.POS<>null) || SELUL.DZI:=null; SELUL.POS:=null() ?}
|?  _typ='' & SELUL.TYP='P'
|| _str:=SELUL.POS().MIA().NAZ+';'+SELUL.POS().UL().UL+';'+SELUL.POS().NR+';';
   {? _a || _typ:=__CHK.record(SELUL,,'POS') ?};
   {? _typ='' & (SELUL.UL<>null | SELUL.DZI<>null) || SELUL.DZI:=null; SELUL.UL:=null() ?}
|? ~('DUP'*_typ)
|| _typ:='TYP'
?};
SELUL.STR:=SELUL.TYP+';'+_str;
_typ


\upmsel_zm_grupo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS: Zmień grupowo dla selekcji
::  OLD: \qupsel_zm_grupo/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
UMM.cntx_psh();
UPM.cntx_psh();
UPMSEL.cntx_psh();
UPMSEL.f_clear();
UPMSEL.win_sel('WER_ZM');
UPMSEL.index('UM');
UPMSEL.prefix(UMM.ref,);
UPMSEL.select();
UPMSEL.f_clear();
UPMSEL.cntx_pop();
UMM.cntx_pop();
UPM.cntx_pop();
''


\zm_gr_upmsel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS: Akcja rekord dla miany grupowej
::  OLD: \zm_gr_upsel/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
{? UPMSEL.sel_size()>0
||
   {? 1+menu_txt='H'
   ||
      UPMSEL.HN:=UMC.HN;
::      UPMSEL.BRYG:=UMC.BRYG;
      UPMSEL.put()
   |? 1+menu_txt='S'
   || UPMSEL.UPSYS:=UMC.UPSYS;
      UPMSEL.put()
   |? 1+menu_txt='K'
   ||
      UPMSEL.ODP:=UMC.ODP;
      UPMSEL.put()
   |? 1+menu_txt()='B'
   ||
      UPMSEL.BRYG:=UMC.BRYG;
      UPMSEL.put()
   ?}
|| FUN.info('Zaznacz grupę rekordów.'@)
?};
1


\zm_gr_upmsel_gr1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS: Zmiany grupowe dla selekcji umowy miejskie (grupa przed)
::  OLD: \zmgrupselgr1/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
{? UPMSEL.sel_size()>0
||
   UMC.blank();
   _valid:="";
   {? 1+menu_txt='H'
   || UMC.win_edit('ZM_H');
      _valid:="__CHK.record(UMC,,'HN')"
   |? 1+menu_txt='S'
   || UMC.win_edit('ZM_S');
      _valid:="__CHK.record(UMC,,'UPSEL')"
   |? 1+menu_txt='K'
   || UMC.win_edit('ZM_K');
      _valid:="__CHK.record(UMC,,'ODP')"
   |? 1+menu_txt='B'
   || UMC.win_edit('ZM_BR');
      _valid:="__CHK.record(UMC,,'BRYG')"
   ?};
   UMC.edit(_valid)
|? UPMSEL.sel_size()=0
|| FUN.info('Zaznacz grupę rekordów.'@);
   0
|| 0
?}


\upmsel_zaznacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [12.10]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qupsel_znrek/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
_w:=0;
UMC.win_edit('DZIEL');
{? UMC.edit("__CHK.record(UMC,,'DZIEL')")
||
   _tab:=tab_tmp(1,'REF','INTEGER','REF');
   UPMSEL.prefix();
   {? UPMSEL.first()
   ||
      {!
      |?
         {? UPMSEL.POS().DZI=UMC.DZI & UPMSEL.HN=UMC.HN
         ||
            _tab.REF:=#UPMSEL.ref();
            _tab.add()
         ?};
         UPMSEL.next()
      !};
      {? _tab.first
      ||
         UPMSEL.f_set('MIA(NAZ),UL(UL)',,'0=1');
         {!
         |?
            {? UPMSEL.seek(_tab.REF,)
            || UPMSEL.f_add()
            ?};
            _tab.next()
         !};
         _w:=UPMSEL.f_size();
         UPMSEL.f_first()
      || FUN.info('Brak rekodów pasujących do kryterium.'@)
      ?}
   ?}
?};
_w


\zmgr1_selul
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Wymiana harmonogramu dla selekcji ulic
::----------------------------------------------------------------------------------------------------------------------
_buf:=SELUL.sel_aget();
SELUL.sel_adel();
{? FUN.ask('Bieżąca pozycja to harmonogram do zmiany ?'@) || UMO.HNOLD:=SELUL.HN ?};

_tab:=tab_tmp(1,'REF','INTEGER','REF');
UMO.blank();

UMO.win_edit('ZM_H_OLD');
{? UMO.edit("__CHK.record(UMO,,'HNOLD','HNNEW')")
|| SELUL.cntx_psh();
   {? _buf.first()
   || {!
      |? {? (SELUL.prefix(); SELUL.seek(_buf.REF,)) & SELUL.HN=UMO.HNOLD
         || _il+=1;
            _tab.blank();
            _tab.REF:=#SELUL.ref();
            _tab.add()
         ?};
         _buf.next()
      !}
   || {? SELUL.first()
      || _il:=0;
         SELUL.cntx_psh();
         {!
         |? {? SELUL.HN=UMO.HNOLD
            || _il+=1;
               _tab.blank();
               _tab.REF:=#SELUL.ref();
               _tab.add()
            ?};
            SELUL.next()
         !};
         SELUL.cntx_pop()
      ?}
   ?};
   {? _tab.first()
   || {? FUN.ask('Zmienić %1 rekordów ?'@[$_il])
      || SELUL.cntx_psh();
         SELUL.prefix();
         {!
         |? {? SELUL.seek(_tab.REF,)
            || SELUL.HN:=UMO.HNNEW;
               SELUL.put()
            ?};
            _tab.next()
         !};
         SELUL.cntx_pop()
      ?}
   || FUN.info('Brak rekordów do zmiany'@)
   ?};
   SELUL.cntx_pop()
?};
obj_del(_tab);
obj_del(_buf);
1


\qsel_ul_prfx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS:
::   WE:
::   WY:
::  OLD: \sel_ul_prfx/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
SELODP.index('TYP');
SELODP.prefix(SELTYP.ref(),);
grp_disp(SELODP,'WER')


\upm_be_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [wrt_1120]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qup_be_add/new_um.fml (MPGK)
::----------------------------------------------------------------------------------------------------------------------
UMO.POS_BE:=null;
UMO.MIA:=null()


\upm_ae_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS: Po dołącz  - UPM uzupełnieni UP_SRC
::  OLD: \up_ae_addmpgk/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
UPM.trig_a('put',"");
UPM.UP_SRC:=$UPM.ref();
UPM.put();
UPM.trig_a('put',"exec('trig_put_upm','umowy_miejskie')");
1


\trig_put_upm
::--------------------------------------------------------------------------------------------------
::  UTW: MaX 2013
:: OPIS: triger przed na popraw.
::  OLD: \trig_put_qup/new_um.fml
::  OLD: \trig_put_qup/um_mia.fml
::--------------------------------------------------------------------------------------------------
_zm:=0;
UMO.POS_AE:=UPM.POS;
UPMLOG.cntx_psh();
UPMLOG.prefix();
UPMLOG.blank();
UPMLOG.UM:=UPM.UM;
UPMLOG.POS:=$UPM.POS;
UPMLOG.B_POS:=UMO.POS_BE().MIA().NAZ+' '+UMO.POS_BE().UL().UL+' '+UMO.POS_BE().NR;
UPMLOG.A_POS:=UMO.POS_AE().MIA().NAZ+' '+UMO.POS_AE().UL().UL+' '+UMO.POS_AE().NR;
UPMLOG.ACTION:='put';
UPMLOG.MENU:=menu_txt;
UPMLOG.D:=date();
UPMLOG.T:=time();
UPMLOG.USER:=username;
UPMLOG.B_ILO:=bfld('ILO');
UPMLOG.A_ILO:=UPM.ILO;
_zm+=UPMLOG.B_ILO<>UPMLOG.A_ILO;

UPMLOG.B_SEG:=bfld('SEG');
UPMLOG.A_SEG:=UPM.SEG;
_zm+=UPMLOG.B_SEG<>UPMLOG.A_SEG;

UPMLOG.B_M2:=bfld('M2');
UPMLOG.A_M2:=UPM.M2;
_zm+=UPMLOG.B_M2<>UPMLOG.A_M2;

UPMLOG.B_SRW:=bfld('SRW');
UPMLOG.A_SRW:=UPM.SRW;
_zm+=UPMLOG.B_SRW<>UPMLOG.A_SRW;

UPSYS.cntx_psh(); UPSYS.prefix(); {? UPSYS.seek(bfld('UPSYS')) || UPMLOG.B_UPSYS:=UPSYS.ref ?}; UPSYS.cntx_pop();
UPMLOG.A_UPSYS:=UPM.UPSYS;
_zm+=UPMLOG.A_UPSYS<>UPMLOG.B_UPSYS;

ODP.cntx_psh(); ODP.prefix(); {? ODP.seek(bfld('ODP')) || UPMLOG.B_ODP:=ODP.ref ?}; ODP.cntx_pop();
UPMLOG.A_ODP:=UPM.ODP;
_zm+=UPMLOG.A_ODP<>UPMLOG.B_ODP;

UPMLOG.B_OD:=bfld('OD');
UPMLOG.A_OD:=UPM.OD;
_zm+=UPMLOG.B_OD<>UPMLOG.A_OD;

UPMLOG.B_DO:=bfld('DO');
UPMLOG.A_DO:=UPM.DO;
_zm+=UPMLOG.B_DO<>UPMLOG.A_DO;

{? _zm || UPMLOG.add() ?};
UPMLOG.cntx_pop();
~~


\trig_add_upm
::--------------------------------------------------------------------------------------------------
::  UTW: MaX 2013
:: OPIS: triger po ADD.
::  OLD: \trig_add_qup/new_um.fml
::  OLD: \trig_add_upm/um_mia.fml
::--------------------------------------------------------------------------------------------------
UPMLOG.cntx_psh();
UPMLOG.prefix();
UPMLOG.blank();
UPMLOG.UM:=UPM.UM;
UPMLOG.POS:=$UPM.POS;
UMO.POS_AE:=UPM.POS;
UPMLOG.A_POS:=UMO.POS_AE().MIA().NAZ+' '+UMO.POS_AE().UL().UL+' '+UMO.POS_AE().NR;
UPMLOG.ACTION:='add';
UPMLOG.MENU:=menu_txt;
UPMLOG.D:=date();
UPMLOG.T:=time();
UPMLOG.USER:=username;
UPMLOG.A_ILO:=UPM.ILO;
UPMLOG.A_M2:=UPM.M2;
UPMLOG.A_SEG:=UPM.SEG;
UPMLOG.A_SRW:=UPM.SRW;
UPMLOG.A_UPSYS:=UPM.UPSYS;
UPMLOG.A_ODP:=UPM.ODP;
UPMLOG.A_OD:=UPM.OD;
UPMLOG.A_DO:=UPM.DO;
UPMLOG.add();
UPMLOG.cntx_pop();
~~


\upm_afedit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [mpgk_1240]
:: OPIS: Po redakcji pozycji umowy miejskiej sprawdza czy nie zmianiła sie posejsa
::  OLD: \up_afedit/new_kh.fml
::----------------------------------------------------------------------------------------------------------------------
UMO.POS_AE:=UPM.POS;
{? UMO.POS_BE<>UMO.POS_AE || FUN.info('Zmieniono całą posesje i historię z nią związaną '@) ?};
1


\podst_miej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [12.10]
:: OPIS: Podstawienia pojemników z umów miejskich
::   WE: [_a] - 1-selekcja (domyślnie) 0-bez slekcji
::   WY:
::  OLD: \qpodst_miej/qtrasy.fml
::----------------------------------------------------------------------------------------------------------------------
_select:={? var_pres('_a')=type_of(0) || _a || 1 ?};

exec('icon_before','umowy_wspolne');
UMC.WHERE:='UPM';

__QPODT:='UPMPOJ';
_actm:=M.actions('NL_WERU','W');
UPMZAD.index('POS');
UPMZAD.prefix(ST.ODDZ,'N',UPM.POS);
{? _select
|| UPMZAD.select();
   M.actions('NL_WERU',_actm)
?};
{? ~({? UPM.f_active() || UPM.f_size() || UPM.size ?})
|| UPMZAD.actions_grayed('WER','D:D')
|| UPMZAD.actions_grayed('WER','')
?};
~~


\upm_zmiana
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [wrt_1120]
:: OPIS:  Wprowadzenie zmiany dla UMOWY
::   WE:
::   WY:
::  OLD: \aqup_zmiana/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
_um:=UPM.UM;
_pos:=UPM.POS;
UMC.win_edit('ZM_HA');
{? UPM.r_lock(1) & UMC.edit("{? UMC.D<=UPM.OD
                             || FUN.info('Data zmiany powinna być późniejsza niż data obowiązywania %1.'@[$UPM.OD]);
                                'D'
                             || ''
                             ?}")
|| UPM.cntx_psh();
   UPM.index('POS');
   UPM.prefix(_um,_pos,UMC.D);
   _sql_upm:={? UPM.first() || $UPM.ref() || '' ?};
   UPM.cntx_pop();
   {? _sql_upm=''
   || do();
      UPM.cntx_psh();
      UPM.DO:=UMC.D;
      UPM.AR:=UPM.DO~1;
      UPM.AM:=UPM.DO~2;
      UPM.MOD:=exec('upm_wprowadzil','umowy_miejskie');
      UPM.BIE:='N';
      UPM.prefix();
      UPM.trig_a('put',"");
      {? ~UPM.put(1) || undo('Nie udało się poprawić pozycji umowy') ?};
      _ref:=UPM.ref();
      UPM.trig_a('put',"exec('trig_put_upm','umowy_miejskie')");
      UPM.BIE:='T';
      UPM.OD:=UMC.D;
      UPM.AR:=UPM.OD~1;
      UPM.AM:=UPM.OD~2;
      UPM.REF_OLD:=$_ref;
      UPM.WP:=exec('upm_wprowadzil','umowy_miejskie');
      UPM.MOD:='';
      UPM.DO:=date(0,0,0);
      {? ~UPM.add(1) || undo('Nie udało się dodać nowej pozycji'@) ?};
      _r:=UPM.ref();
      UPM.cntx_pop();
      _wyn:=do_state();
      {? _wyn & UPM.seek(_r)
      || {? UPM.edit("{? UPM.DO<>date(0,0,0) & UPM.DO<UPM.OD
                      || msg('Nieprawidłowy zakres dat.'@);
                         'DO'
                      || ''
                      ?}")
         || UPM.put()
         || undo()
         ?}
      ?};
      end()
   |? FUN.ask('Na dzień %1 posesja ma już wprowadzoną zmianę.\nCzy chcesz ją poprawić?'@[$(UMC.D)])
     & exec('upm_ae_pop','umowy_miejskie')
   || UPM.cntx_psh();
      UPM.prefix();
      {? UPM.seek(_sql_upm) & UPM.edit("{? UPM.DO<>date(0,0,0) & UPM.DO<UPM.OD
                                        || msg('Nieprawidłowy zakres dat.'@);
                                           'DO'
                                        || ''
                                        ?}")
      || exec('upm_afedit','umowy_miejskie');
         UPM.put(1)
      ?};
      UPM.cntx_pop()
   ?}
?};
unlock_r();
''


\upm_wprowadzil
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [wrt_1120]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qup_wprowadzil/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=gsub(10+username(),'~',' ')+' '+$date()+' '+$time();
_wyn


\upmia_zm_gr
::--------------------------------------------------------------------------------------------------
::  UTW: MaX 2014
:: OPIS: Zmiany grupowe dla Pojemników w umowach miejskich
::  OLD: \upmia_zm_gr/new_um.fml
::--------------------------------------------------------------------------------------------------
UMM.cntx_psh();
UPM.cntx_psh();
UPMPOJ.cntx_psh();
_ref:=UMM.ref();
UPMPOJ.index('UM');
UPMPOJ.prefix(_ref,);
UPMPOJ.win_sel('WER_ZM');
UPMPOJ.select(,1,1);
UMM.cntx_pop();
UPM.cntx_pop();
UPMPOJ.cntx_pop();
''


\rodzzab_zmien
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [12.10]
:: OPIS: Grupowa zmiana rodzaju zabudowy
::   WE:
::   WY:
::  OLD: \rodzzab_mpgk/mpgk.fml
::----------------------------------------------------------------------------------------------------------------------
UPM.cntx_psh();
_sel:=UPM.win_sel('?');
UPM.win_sel('ZMGRP');
UPM.select();
UPM.win_sel(_sel);
UPM.cntx_pop();
~~


\zmgr_zab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Grupowa lub nie zmiana rodzaju zabudowy
::   WE: _a - rodzaj, na który zmieniamy 'N'-nieokreślona, 'J'-jednorodzinna, 'W'-wielorodzinna
::----------------------------------------------------------------------------------------------------------------------
_rtxt:={? _a='N' || 'Nieokreślona'
       |? _a='J' || 'Jednorodzinna'
       |? _a='W' || 'Wielorodzinna'
       ?};
_rodz:={? _a='N' || '' || _a ?};
_tab:=UPM.sel_aget();
UPM.sel_adel();
UPM.cntx_psh();
_tab.clear();
{? _tab.first()
|| {? FUN.ask('Czy zmienić rodzaj zabudowy dla zaznaczonych pozycji na: \"%1\"?'@[_rtxt])
   || {!
      |? {? (UPM.clear(); UPM.seek(_tab.REF,)) & UPM.RZAB<>_rodz
         || UPM.RZAB:=_rodz;
            UPM.put(1)
         ?};
         _tab.next()
      !}
   ?}
|? FUN.ask('Czy zmienić rodzaj zabudowy na: \"%1\"?'@[_rtxt])
|| UPM.RZAB:=_rodz;
   UPM.put(1)
?};
UPM.cntx_pop();
obj_del(_tab);
~~


\qupsel_zm_grupo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS: Zmień grupowo dla selekcji
::   WE:
::   WY:
::  OLD: \qupsel_zm_grupo/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
UMM.cntx_psh();
UPM.cntx_psh();
UPMSEL.f_clear();
UPMSEL.win_sel('WER_ZM');
UPMSEL.index('UM');
UPMSEL.prefix(UMM.ref(),);
UPMSEL.select();
UPMSEL.f_clear();
UMM.cntx_pop();
UPM.cntx_pop();
''


\zm_arch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [wrt_1120]
:: OPIS: Aktywacja/dezaktywacja pozycji umowy miejskiej
::   WE: [_a] - 1-aktywacja (domyślnie) 0-dezaktywacja
::  OLD: \zm_arch/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
_rodz:={? var_pres('_a')=type_of(0) || _a || 1 ?};

{? UPM.r_lock(1)
|| {? _rodz=0 & UPM.ARCH='N' & FUN.ask('Dezaktywować daną pozycję umowy miejskiej?'@)
   || UPM.MOD:=exec('upm_wprowadzil','umowy_miejskie');
      UPM.ARCH:='T';
      UPM.put(1)
   |? _rodz=1 & UPM.ARCH='T' & FUN.ask('Aktywować daną pozycję umowy miejskiej?'@)
   || UPM.MOD:=exec('upm_wprowadzil','umowy_miejskie');
      UPM.ARCH:='N';
      UPM.put(1)
   ?}
?};
unlock_r()


\czy_add_uppoj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS:  Czy mozna dodac pojemnik / sprawdza czy jest pozycja
::   WE:
::   WY:
::  OLD: \czy_add_uppoj/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
{? UPM.get
|| 1
|| FUN.info('Brak pozycji, pod którą można dodać pojemnik.'@);
   0
?}


\upm_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Pozycja umowy miejskiej ref
::  OLD: \upm_ref/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
UPM.ref()


\uppos_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Posesja dla pozycji pojemnika
::  OLD: \uppos_ref/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
{? UPM.ONAG=null || UPM.POS || UPM.ONAG().POS ?}


\mia_blank_uppoj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Po dodaniu pojemnika odbudowa danych o posesji
::  OLD: \mia_blank_uppoj/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
{? UPMPOJ.ONAG=null()
|| UPMPOJ.MIA:=UPMPOJ.POS().MIA
|| UPMPOJ.MIA:=UPMPOJ.ONAG().POS().MIA
?}


\ul_blank_uppoj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Po dodaniu pojemnika odbudowa danych o posesji
::  OLD: \ul_blank_uppoj/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
{? UPMPOJ.ONAG=null()
|| UPMPOJ.UL:=UPMPOJ.POS().UL
|| UPMPOJ.UL:=UPMPOJ.ONAG().POS().UL
?}


\uppos_onag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon
:: OPIS: Posesja dla pozycji pojemnika
::  OLD: \uppos_onag/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
UPM.ONAG


\ae_hn_upm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS:  po redagowaniu harmonogramow uzupelnia system wywozu
::  OLD: \ae_hn_upm/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
{? UPMPOJ.HN<>null()
||
   {? UPMPOJ.HN().UPSYS<>null()
   ||
      UPMPOJ.UPSYS:=UPMPOJ.HN().UPSYS;
      win_disp()
   ?}
?};
_result


\ae_onag_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS:  Po redagowaniu pola posesja na osłonie
::  OLD: \ae_onag_pos/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()=null()
||
  FUN.info('Proszę wybrać posesję.'@);
  0
||
  ONAG.MIA:=ONAG.POS().MIA;
  ONAG.UL:=ONAG.POS().UL;
  win_disp();
  1
?}


\czy_akt_onag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [w_1230]
:: OPIS: Znacznik aktywnosci dla oslony mozna tylko zmienic z definicji
::            przed redagowanie pola
::  OLD: \czy_akt_onag/um_mia.fml
::----------------------------------------------------------------------------------------------------------------------
2+menu_pth='DD'


\upmpoj_copy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Marcin Makselon [W_1240]
:: OPIS: Kopia Pojemnika
::  OLD: \uppoj_kopia/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
{? UPMPOJ.get() & UPMPOJ.r_lock()
||
   UPMPOJ.DP:=date();
   _valid:="
      params_exec('upmpoj_valid','umowy_miejskie')
   ";
   {? UPMPOJ.edit(_valid)
   ||
      UPMPOJ.r_unlock();
      {? UPMPOJ.add()
      || exec('ae_add_upmpoj','umowy_miejskie')
      ?}
   || UPMPOJ.r_unlock()
   ?}
?}


\upmpoj_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Walidacja okna redagowania UPMPOJ
::   WY: 0/1
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_result:=__CHK.record(UPMPOJ,,'M','DP');

{? _result=''
|| {? UPMPOJ.TYPPOJ<>'S'
   || {? UPMPOJ.HN=null()
      || _result:='HNK';
         FUN.emsg('Harmonogram musi być wypełniony.'@)
      ?}
   ?}
?};
{? _result=''
|| {? UPMPOJ.RFID=''
   || {? UPMPOJ.IL<=0
      || _result:='IL';
         FUN.emsg('Ilość musi być większa od zera.'@)
      ?}
   ?}
?};

{? _result=''
|| {? UPMPOJ.DP<>date(0,0,0) & UPMPOJ.DZ<>date(0,0,0) & UPMPOJ.DP>UPMPOJ.DZ
   || _result:='DP';
      FUN.emsg('Data podstawienia nie może być późniejsza niż data zabrania.'@)
   ?}
?};

{? _result=''
|| {? Plugin.exists('UPMPOJ_VALID_001') || _result:=Plugin.run('UPMPOJ_VALID_001') || '' ?}
?};
_result


\upmpoj_komunal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS: Sprawdza czy pojemnik na odpady komunalne
::   WY: 0/1
::  OLD: \qsprczykom/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
UPMPOJ.TYPPOJ='K'


\upmpoj_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Enablator pól w oknie redagowania UPMPOJ
::   WE: [_a] - STRING - akronim okna
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_win:='';
{? var_pres('_a')=type_of('')
|| _win:=_a
?};
{? _win=''
|| _win:=cur_win(1,1)
?};

{? UPMPOJ.TYPPOJ='S'
|| UPMPOJ.efld_opt(_win,'enable=0',,'HN');
   UPMPOJ.efld_opt(_win,'enable=0',UMO,'HNK');
   UPMPOJ.efld_opt(_win,'enable=0',,'UPSYS');
   UPMPOJ.efld_opt(_win,'enable=0',,'BRYG');
   ~~
|| UPMPOJ.efld_opt(_win,'enable=1',,'HN');
   UPMPOJ.efld_opt(_win,'enable=1',UMO,'HNK');
   UPMPOJ.efld_opt(_win,'enable=1',,'UPSYS');
   UPMPOJ.efld_opt(_win,'enable=1',,'BRYG');
   ~~
?};

{? UPMPOJ.RFID<>''
|| UPMPOJ.efld_opt(_win,'enable=0',,'IL');
   UPMPOJ.efld_opt(_win,'mark=0',,'IL');
   ~~
|| UPMPOJ.efld_opt(_win,'enable=1',,'IL');
   UPMPOJ.efld_opt(_win,'mark=1',,'IL');
   ~~
?};
~~


\pr_upm_seg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Przed redakcją pola UPM.SEG
::   WE: [_a] - STRING - akronim okna
::----------------------------------------------------------------------------------------------------------------------
{? UPM.IS_SEG='N'
|| UPM.SEG:='';
   0
|| 1
?}


\po_upm_is_seg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Po redakcji pola UPM.IS_SEG
::   WE: [_a] - STRING - akronim okna
::----------------------------------------------------------------------------------------------------------------------
{? UPM.IS_SEG='N' || UPM.SEG:=''
|? UPM.SEG=''     || UPM.SEG:='T'
?};
1


\set_efld_opt_upmlog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Wygasza pola w okienku dla UPMLOG
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || UPMLOG.win_edit('?') ?};

_enable0:={? UPMLOG.TAB='UPM' || 'enable=0' || 'enable=1' ?};
_enable1:={? UPMLOG.TAB='UPM' || 'enable=1' || 'enable=0' ?};

UPMLOG.efld_opt(_win_red,_enable1,,'A_ILO');
UPMLOG.efld_opt(_win_red,_enable1,,'A_M2');
UPMLOG.efld_opt(_win_red,_enable1,,'A_SRW');
UPMLOG.efld_opt(_win_red,_enable0,,'A_HN');
UPMLOG.efld_opt(_win_red,_enable0,,'A_UPSYS');
UPMLOG.efld_opt(_win_red,_enable0,,'A_ODP');
UPMLOG.efld_opt(_win_red,_enable0,,'A_M');
UPMLOG.efld_opt(_win_red,_enable0,,'A_RFID');
UPMLOG.efld_opt(_win_red,_enable0,,'A_IL');
UPMLOG.efld_opt(_win_red,_enable1,,'A_SEG');
UPMLOG.efld_opt(_win_red,_enable1,,'A_REG');
UPMLOG.efld_opt(_win_red,_enable1,,'B_ILO');
UPMLOG.efld_opt(_win_red,_enable1,,'B_M2');
UPMLOG.efld_opt(_win_red,_enable1,,'B_SRW');
UPMLOG.efld_opt(_win_red,_enable0,,'B_HN');
UPMLOG.efld_opt(_win_red,_enable0,,'B_UPSYS');
UPMLOG.efld_opt(_win_red,_enable0,,'B_ODP');
UPMLOG.efld_opt(_win_red,_enable0,,'B_M');
UPMLOG.efld_opt(_win_red,_enable0,,'B_RFID');
UPMLOG.efld_opt(_win_red,_enable0,,'B_IL');
UPMLOG.efld_opt(_win_red,_enable1,,'B_SEG');
UPMLOG.efld_opt(_win_red,_enable1,,'B_REG');
''


\upsel_copy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS: Kopiuje dane do selekcji
::   WE:
::   WY:
::  OLD: \qupsel_copy/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
{? UPMSEL.first()
|| VAR_DEL.delete('__SELUP');
   __SELUP:=tab_tmp(2,'REF','INTEGER','REF',
                      'MASK','STRING[8]','MASK',
                      'TYP','STRING[60]','TYP',
                      'HN','STRING[10]','Harmonogram');
   {!
   |? __SELUP.blank();
      __SELUP.REF:=#UPMSEL.ref;
      __SELUP.MASK:=UPMSEL.name();
      __SELUP.TYP:=UPMSEL.SELTYP().OP;
      __SELUP.HN:=UPMSEL.HN().KOD;
      __SELUP.add();
      UPMSEL.next()
   !};
   _acr:=__SELUP.mk_sel('Lista skopiowanych zapisów'@,,0);
   __SELUP.win_fld(_acr,,'TYP');
   __SELUP.win_fld(_acr,,'HN');
   __SELUP.win_act(_acr,,'Usuń'@,,,,,,1,1);
   __SELUP.win_sel(_acr);
   {? ~FUN.ask('Zaznaczono %1 do wklejenia.\n Chcesz wklejać wszystko?'@[$__SELUP.size()])
   || FUN.info('Usuń rekordy których nie chcesz kopiować.'@);
      __SELUP.select()
   ?};
   FUN.info('Zaznaczono %1 do wklejenia.'@[$__SELUP.size()])
|| FUN.info('Brak danych do skopiowania'@)
?}


\upsel_past
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS: Wkleje selekcje
::   WE:
::   WY:
::  OLD: \qupsel_past/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
_pass:="{? __SELUP.first()
        ||
          {!
          |? UPMSEL.prefix();
             {? UPMSEL.seek(__SELUP.REF,form(__SELUP.MASK))
             || UPMSEL.ODDZ:=ST.ODDZ;
                UPMSEL.UMM:=UMM.ref;
                UPMSEL.POS:=UPM.POS;
                UPMSEL.ONAG:=UPM.ONAG;
                UPMSEL.MIA:=UPM.POS().MIA;
                UPMSEL.UL:=UPM.POS().UL;
                UPMSEL.UP_SRC:=$UPM.ref();
                UPMSEL.OD:=date();
                UPMSEL.add()
             ?};
             __SELUP.next()
          !}
        ?}
";
{? var_press('__SELUP')>0
||
   {? UPM.sel_size=0
   ||
      {? FUN.ask('Wkleić dane o selekcji? (Wcześniej zaznaczone %1)'@[$__SELUP.size()])
      ||
         _pass();
         VAR_DEL.delete('__SELUP')
      ?}
   ||
      _pass()
   ?}
|| FUN.info('Nie skopiowano danych do wklejenia'@)
?}


\upsel_chk_past
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qupsel_chk_past/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? var_press('__SELUP')>0
||
   {? FUN.ask('Czy chcesz wkleić wcześniej zaznaczone %1 rekordy?'@[$__SELUP.size()])
   ||  _wyn:=1
   ?}
|| FUN.info('Brak skopiowanych rekordów'@)
?};
_wyn


\upsel_clear
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qupsel_clear/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
1


\del_upm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Usunięcie pozycji umowy miejskiej
::   WY: 1-usunięto 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=exec('spr_czy_poj','umowy_miejskie');
{? _res
|| _pos:=UPM.POS;
   UPM.cntx_psh();
   UPM.index('POSID');
   UPM.prefix(UMM.ref,_pos,);
   {? UPM.size()>1
   || {? FUN.ask('Wprowadzono zmiany dla pozycji umowy.\n'
                 'Usunięcie pozycji usuwa również zmiany.\n\n'
                 'Czy usunąć daną pozycję umowy?'@)
      || do();
         {? UPM.first()
         || {!
            |? UPMLOG.cntx_psh();
               UPMLOG.index('D');
               UPMLOG.prefix(UMM.ref(),UPM.ref());
               {? UPMLOG.first() || {! |? {? UPMLOG.TAB='UPMPOJ' || UPMLOG.del() || undo(); 0 ?} !} ?};
               UPMLOG.cntx_pop();
               {? ~UPM.count() || UPM.del() || UPM.next() ?}
            !}
         ?};
         end()
      ?}
   |? UPM.first() & FUN.ask('Czy usunąć daną pozycję umowy?'@)
   || UPMLOG.cntx_psh();
      UPMLOG.index('D');
      UPMLOG.prefix(UMM.ref(),UPM.ref());
      {? UPMLOG.first() || do(); {! |? {? UPMLOG.TAB='UPMPOJ' || UPMLOG.del() || undo(); 0 ?} !}; end() ?};
      UPMLOG.cntx_pop();
      {? ~UPM.count() || UPM.del() ?}
   ?};
   UPM.cntx_pop()
?};
~~


\pos_mia_ul
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Uzupełnienie pól POS,MIA,UL dla pojemnika
::----------------------------------------------------------------------------------------------------------------------
{? UPMPOJ.ONAG=null()
|| {? UPMPOJ.UPM<>null() || UPMPOJ.POS:=UPMPOJ.UPM().POS ?};
   UPMPOJ.MIA:=UPMPOJ.POS().MIA;
   UPMPOJ.UL:=UPMPOJ.POS().UL
|| UPMPOJ.POS:=UPMPOJ.ONAG().POS;
   UPMPOJ.MIA:=UPMPOJ.ONAG().POS().MIA;
   UPMPOJ.UL:=UPMPOJ.ONAG().POS().UL
?};
~~


\pr_upm_od
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Przed redakcją pola UPM.OD
::----------------------------------------------------------------------------------------------------------------------
{? cur_afld()='OD' || UPM.REF_OLD='' || 1 ?} & UPM.BIE='T'


\zlp2bigbag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS: Dodanie pozycji bigbag-a
::   WE: _a - ref ZLP
::   WY:
::  OLD: \zlp_bigbb_af_a/mew_um.fml
::----------------------------------------------------------------------------------------------------------------------
_oki:={? var_pres('_a')<>type_of(null()) | _a=null() || 0 || 1 ?};

{? _oki
|| ZLE.cntx_psh();
   ZLP.cntx_psh();
   BIGB.cntx_psh();
   ZLP.use(ref_name(_a));
   ZLP.prefix();
   {? ZLP.seek(_a) & ZLP.IDBIG>0 & exec('FindInSet','#table','BIGB','ZLP',ZLP.ref())=null()
   || ZLP.ZLE().POS();
      _pos:=ZLE.POS().MIA().NAZ+';'+ZLE.POS().UL().UL+';'+ZLE.POS().NR+';'+form(ZLP.LOKAL)+';';
      BIGB.prefix();
      BIGB.blank();
      BIGB.ODDZ:=ST.ODDZ;
      BIGB.D:=date();
      BIGB.POS:=ZLE.POS;
      BIGB.MIA:=ZLE.POS().MIA;
      BIGB.UL:=ZLE.POS().UL;
      BIGB.MIE:=form(ZLP.LOKAL);
      BIGB.ADRES:=_pos;
      BIGB.ZLP:=ZLP.ref();
      BIGB.M:=ZLP.MJ;
      BIGB.IL:=ZLP.IL;
      BIGB.add()
   ?};
   ZLE.cntx_pop();
   ZLP.cntx_pop();
   BIGB.cntx_pop()
?};
~~


\trig_del_uppoj
::--------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: triger po DEL tabela UPMPOJ
::--------------------------------------------------------------------------------------------------
_zm:=0;

UPMLOG.cntx_psh();
_rr:=($(date()~1))+2;
UPMLOG.use('uplm'+ST.ODDZ+_rr);
UPMLOG.prefix();

UPMLOG.blank();
UPMLOG.UM:=UPM.UM;
UPMLOG.UPM:=UPM.ref;
UPMLOG.ODDZ:=ST.ODDZ;
UPMLOG.TAB:='UPMPOJ';

UMO.POS_BE:=bfld('POS');
UMO.POS_AE:=UPMPOJ.POS;
_zm+=UMO.POS_BE<>UMO.POS_AE;

UPMLOG.POS:=$UMO.POS_BE;

UPMLOG.B_POS:=UMO.POS_BE().MIA().NAZ+' '+UMO.POS_BE().UL().UL+' '+UMO.POS_BE().NR;
UPMLOG.A_POS:=UMO.POS_AE().MIA().NAZ+' '+UMO.POS_AE().UL().UL+' '+UMO.POS_AE().NR;

UPMLOG.ACTION:='del';
UPMLOG.MENU:=menu_txt;
UPMLOG.D:=date();
UPMLOG.T:=time();
UPMLOG.USER:=username;
UPMLOG.B_IL:=bfld('IL');
UPMLOG.A_IL:=UPMPOJ.IL;
_zm+=UPMLOG.B_IL<>UPMLOG.A_IL;

UPMLOG.B_RFID:=bfld('RFID');
UPMLOG.A_RFID:=UPMPOJ.RFID;
_zm+=UPMLOG.B_RFID<>UPMLOG.A_RFID;

UPMLOG.B_M:=bfld('M');
UPMLOG.A_M:=UPMPOJ.M;
_zm+=UPMLOG.B_M<>UPMLOG.A_M;

UPMLOG.B_UPSYS:=bfld('UPSYS');
UPMLOG.A_UPSYS:=UPMPOJ.UPSYS;
_zm+=UPMLOG.B_UPSYS<>UPMLOG.A_UPSYS;

UPMLOG.B_ODP:=bfld('KODODP');
UPMLOG.A_ODP:=UPMPOJ.KODODP;
_zm+=UPMLOG.B_ODP<>UPMLOG.A_ODP;

UPMLOG.B_HN:=bfld('HN');
UPMLOG.A_HN:=UPMPOJ.HN;
_zm+=UPMLOG.B_HN<>UPMLOG.A_HN;

UPMLOG.B_OD:=bfld('DP');
UPMLOG.A_OD:=UPMPOJ.DP;
_zm+=UPMLOG.B_OD<>UPMLOG.A_OD;

UPMLOG.B_DO:=bfld('DZ');
UPMLOG.A_DO:=UPMPOJ.DZ;
_zm+=UPMLOG.B_DO<>UPMLOG.A_DO;

UPMLOG.B_ONAG:=bfld('ONAG');
UPMLOG.A_ONAG:=UPMPOJ.ONAG;
_zm+=UPMLOG.B_ONAG<>UPMLOG.A_ONAG;

ZLBR.cntx_psh();
ZLBR.prefix();
{? ZLBR.seek(bfld('BRYG'))
|| UPMLOG.B_BR:=ZLBR.ref
?};
ZLBR.cntx_pop();
UPMLOG.A_BR:=UPMPOJ.BRYG;
_zm+=UPMLOG.A_BR<>UPMLOG.B_BR;

UPMLOG.add();

UPMLOG.cntx_pop();
~~


\trig_del_upm
::--------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: triger przed usuń
::--------------------------------------------------------------------------------------------------
_zm:=0;
UMO.POS_AE:=UPM.POS;
UPMLOG.cntx_psh();
UPMLOG.prefix();
UPMLOG.blank();
UPMLOG.UM:=UPM.UM;
UPMLOG.POS:=$UPM.POS;
UPMLOG.B_POS:=UMO.POS_BE().MIA().NAZ+' '+UMO.POS_BE().UL().UL+' '+UMO.POS_BE().NR;
UPMLOG.A_POS:=UMO.POS_AE().MIA().NAZ+' '+UMO.POS_AE().UL().UL+' '+UMO.POS_AE().NR;
UPMLOG.ACTION:='del';
UPMLOG.MENU:=menu_txt;
UPMLOG.D:=date();
UPMLOG.T:=time();
UPMLOG.USER:=username;
UPMLOG.B_ILO:=bfld('ILO');
UPMLOG.A_ILO:=UPM.ILO;
_zm+=UPMLOG.B_ILO<>UPMLOG.A_ILO;

UPMLOG.B_SEG:=bfld('SEG');
UPMLOG.A_SEG:=UPM.SEG;
_zm+=UPMLOG.B_SEG<>UPMLOG.A_SEG;

UPMLOG.B_M2:=bfld('M2');
UPMLOG.A_M2:=UPM.M2;
_zm+=UPMLOG.B_M2<>UPMLOG.A_M2;

UPMLOG.B_SRW:=bfld('SRW');
UPMLOG.A_SRW:=UPM.SRW;
_zm+=UPMLOG.B_SRW<>UPMLOG.A_SRW;

UPSYS.cntx_psh(); UPSYS.prefix(); {? UPSYS.seek(bfld('UPSYS')) || UPMLOG.B_UPSYS:=UPSYS.ref ?}; UPSYS.cntx_pop();
UPMLOG.A_UPSYS:=UPM.UPSYS;
_zm+=UPMLOG.A_UPSYS<>UPMLOG.B_UPSYS;

ODP.cntx_psh(); ODP.prefix(); {? ODP.seek(bfld('ODP')) || UPMLOG.B_ODP:=ODP.ref ?}; ODP.cntx_pop();
UPMLOG.A_ODP:=UPM.ODP;
_zm+=UPMLOG.A_ODP<>UPMLOG.B_ODP;

UPMLOG.B_OD:=bfld('OD');
UPMLOG.A_OD:=UPM.OD;
_zm+=UPMLOG.B_OD<>UPMLOG.A_OD;

UPMLOG.B_DO:=bfld('DO');
UPMLOG.A_DO:=UPM.DO;
_zm+=UPMLOG.B_DO<>UPMLOG.A_DO;

UPMLOG.add();
UPMLOG.cntx_pop();
~~


\his_obsl_upm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: historia zmian dla umowy miejskiej
::----------------------------------------------------------------------------------------------------------------------
_pos:=UPM.POS;
UPM.cntx_psh();
_sel:=UPM.win_sel('WERZ');
UPM.index('POSID');
UPM.prefix(UMM.ref,_pos,);
UPM.first();
UPM.select();
UPM.win_sel(_sel);
UPM.cntx_pop();
~~


\upmlog_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Log-i dla pozycji umowy miejskiej
::----------------------------------------------------------------------------------------------------------------------
_rr:=($(date()~1))+2;
UPMLOG.use('uplm'+ST.ODDZ+_rr);
UPMLOG.index('D');
UPMLOG.prefix(UPM.UM,UPM.ref());
UPMLOG.last();
UPMLOG.win_sel('WER');
UPMLOG.select();
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 30779a20915cf655af6124798653d662c668d8e39dd4bf5992c7f11d89c13d44b5c3ec1ef2606a3f7be8bc336080c47514a36b235352c7a4fff239a596423daba7ebb5f8d6b28a2a0ef874de34d104e950991d0dff636888cb64eb0e9fe042406e0ecbf00d1a21042741e3af62eb63e21b00ad89933d10ba2dcce8b70858b97e
