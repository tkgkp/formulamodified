:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: numery.fml [2008]
:: Utworzony: 2006-10-23
:: Autor: Mario
::======================================================================================================================
:: Zawartość: Obsługa numeracji
::======================================================================================================================


\chk_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdzenie wartości maksymalnego numeru
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? NRDOK.MAXN<1 | NRDOK.MAXN>999
|| FUN.info('Dopuszczalna wartość od 1 do 999.'@);
   _wyn:=0
?};
_wyn


\numdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wyświetlenie typów dokumentów z ich numeracji
::----------------------------------------------------------------------------------------------------------------------
BEER.NRDOK_AB:='';
NRDOK.win_sel('WER');
NRDOK.win_edit('RED');
NRDOK.win_patt('SZUK');
NRDOK.index('NRDOK');
NRDOK.prefix();
_txt:='UWAGA\n\n'
      'Modyfikacja schematów numeracji, tabeli numeracji\n'
      '(usuwanie, poprawianie lub dołączanie poszczególnych numerów)\n'
      'może spowodować brak ciągłości lub nieprawidłową numerację\n'
      'kolejnych dokumentów.\n\n'
      'Kontynuować?'@;
{? FUN.ask(_txt)
||
   NRDOK.select()
?};
''


\nrd_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: usuwanie numeracji dla określonego typu dokumentów
::----------------------------------------------------------------------------------------------------------------------
NR.use('numer'+(-NRDOK.TYP));
NR.index('STANR');
NR.prefix();
{? ~NR.first()
||
   {? FUN.ask('Czy na pewno usunąć numerację o symbolu: %1?'@[NRDOK.TYP])
   ||
      NRDOK.del()
   ?}
||
   FUN.info('Dla dokumentów o symbolu numeracji: %1 istnieją numery - usunięcie niemożliwe.'@[NRDOK.TYP])
?}


\nrd_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: otwarcie i wyświetlenie bazy numerów dla danego typu dokumentów
::----------------------------------------------------------------------------------------------------------------------
exec('nazw_ety','numery');
NR.use('numer'+(-NRDOK.TYP));
NR.win_sel('WER');
NR.index('NR');
NR.prefix();
NR.first();
_default:=NR.actions('WER','Tt','d:d');
NR.select(,,);
NR.actions('WER',,_default);
''


\nrd_reca
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: akcja na rekord po NR
::----------------------------------------------------------------------------------------------------------------------
_fld:=__CHK.record(NR,,'S','NR');
{? _fld='' & ~('WZ'*NR.S)
|| FUN.info('Należy podać status: W-wolny, Z-zajęty.'@);
   _fld:='S'
?};
_fld


\ae_nrdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: formuła po edycji typu dokumentu
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? fld()<>''
|| {? +fld()=3 || _wyn:=1 || FUN.info('Kod numeracji wymaga 3-ch znaków.'@);_wyn:=0 ?}
?};
_wyn


\wol_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BM [2008]
:: OPIS: funkcja uruchamiana przed redakcją pola NR
::       podpowiadanie numeru oraz domyślny numer gdy MAXN=1
::   WE:  _a  - akronim tabeli
::       [_b] - czy wywoływać win_disp, gdy numer jest podpowiadany bez redakcji pola (T/N - domyślnie T)
::       [_c] - nadawać numer
::       [_d] - 0-działanie bez zmian, 1-zwracać -1 jeśli występują wolne numery - ważniejsze od _c
::       [_e] - obj_new('MAXN')
::   WY: czy redagować pole
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>2 || _b:='T'?} || _b:='T' ?};
_nadaj_nr:={? var_pres('_c')<>type_of(0) || 0 || _c ?};
{? var_pres('_d')<>type_of(0) || _d:=0 ?};
{? var_pres('_e')<>type_of(obj_new('obj')) || _e:=obj_new('MAXN') ?};
_wyn:=0;
{? _a<>'FAKS' & _a<>'ND' || POM.NRT:=0 ?};

{? POM.TYPDOK<>''
||
   NR.use('numer'+(-POM.TYPDOK));
   NRDOK.cntx_psh();
   NRDOK.index('NRDOK');
   NRDOK.prefix(POM.TYPDOK,'');
   {? NRDOK.first()
   ||
      _e.MAXN:=NRDOK.MAXN;
      {? POM.NRT=1 & ($(_a +'.SYM'))()=''
      ||
         ($(_a +'.SYM'))():=($NRDOK.FT)();
         {? _b='T' || win_disp ?};
         _wyn:=0
      |? POM.NRT=1 & ($(_a +'.NR'))()=0
      ||
         _wyn:=0
      ||
         _pom:=$(_a +'.NR');
         numer:=_pom()=0 ;
         _wol_nr:=exec('spr_wol','numery');
         _nr_ok:=1;
         {? -(1+menu_txt)<>'p' || _nr_ok:=exec('spr_num','numery','N') ?};
         {? _pom()=0 | (_nr_ok=0 & -(1+menu_txt)<>'p')
         || {? _wol_nr
            || {? _d
               || _wyn:=-1
               || {? _nadaj_nr=0 || FUN.info('W numeracji występują wolne numery.'@) ?};
                  _wyn:=1
               ?}
            ||
               {? NRDOK.MAXN=1 | _nadaj_nr=1
               || _numer:=exec('numer_new','numery','PACZKA');
                  _pom():=_numer;
                  exec('znak','numery',_a,1);
                  {? _b='T' || win_disp() ?};
                  _wyn:=0
               ||
::                zwraca wartości p1, p2, p3, p4, p5, p6 wykorzystywane do prefixowania tabeli NR
                  ($(_a +'.cntx_psh()'))();
                  exec('nr_pola','numery');
                  NR.index('NR');
                  NR.prefix(p1,p2,p3,p4,p5,p6,);
                  {? NR.last()
                  || _numer:=NR.NR+1
                  || _numer:=1
                  ?};
                  ($(_a +'.cntx_pop()'))();
                  _pom():=_numer;
::                  exec('znak','numery',_a,1);
                  _wyn:=1
               ?}
            ?}
         ?}
      ?}
   ||
:: TODO: tylko kilka typów sprawdzanych, czy nie można bardziej uniwersalnie?
      _txt:=
         {? 5+cur_tab.name()='zdnag'
         || 'Nieprawidłowa definicja numeracji zamówień dostaw typu\n%1 - %2.'@[ZD_NAG.T().T,ZD_NAG.T().NAZ]
         |? 5+cur_tab.name()='zknag'
         || 'Nieprawidłowa definicja numeracji zamówień klienta typu\n%1 - %2.'@[ZK_N.T().T,ZK_N.T().NAZ]
         |? 5+cur_tab.name()='nagdo'
         || 'Nieprawidłowa definicja numeracji dokumentów magazynowych typu\n%1 - %2.'@[ND.TYP().T,ND.TYP().NAZ]
         |? 5+cur_tab.name()='faktu'
         || 'Nieprawidłowa definicja numeracji dokumentów sprzedaży typu\n%1 - %2.'@[FAKS.T().T,FAKS.T().NAZ]
         |? cur_tab.name()='zlec_akt'
         || 'Nieprawidłowa definicja numeracji zleceń typu\n%1 - %2.'@[ZL.TYP().TYP,ZL.TYP().OPIS]
         || 'Nieprawidłowa definicja numeracji tabeli %1.'@[_a]
         ?};
      _txt+='\n\n'+'Należy sprawdzić zgodność definicji typu dokumentu i definicji numeracji.'@;
      FUN.info(_txt);
      _wyn:=1
   ?};
   NRDOK.cntx_pop()
?};
{? ~_wyn & _a<>'' & ($(_a+'.NR<>0'))() & ($(_a+'.SYM=\'\''))() || exec('znak','numery',_a) ?};
_wyn


\spr_wol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza, czy są wolne numery dla danej grupy (w zmiennej POM.TYPDOK).
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;

_wolnr:=exec('czy_spr_wol','numery',POM.TYPDOK);
{? _wolnr
||
   _tab:='numer'+(-POM.TYPDOK);
   NR.use(_tab);
   NR.prefix();
   {? NR.size()<>0
   || NR.index('STANR');
      exec('nr_pola','numery');
      NR.prefix(p1,p2,p3,p4,p5,p6,'W');
      {? NR.first()
      || _wyn:=1
      ?}
   ?}
?};
_wyn


\czy_spr_wol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: dla typu numeracji zwraca czy podpowiadać wolne numery
::   WE: _a - kod numeracj - POM.TYPDOK
::   WY: 0/1 sprawdzać lub nie
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
NRDOK.cntx_psh();
NRDOK.index('NRDOK');
NRDOK.prefix(_a,'');
{? NRDOK.first()
||
   _wyn:=NRDOK.WOL_NR='T'
?};
NRDOK.cntx_pop();
_wyn


\nr_pola
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdzenie czy jest zdefiniowana numeracja dla danego typu dokumentu
::   WY: czy zdefiniowano numeracje (0 - nie, 1 -tak)
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
VAR_DEL.delete('war');
NRDOK.index('NRDOK');
NRDOK.prefix(POM.TYPDOK,'');
_form:="{? type_of(war)=1 || $war
        |? type_of(war)=2 || war
        |? type_of(war)=7 || $(#war)
        || ''
        ?}";
{? NRDOK.first()
|| p1:={? NRDOK.P1<>''
       || _f:=$((POM.TAB)+'.'+(NRDOK.P1)); war:=_f();_form()
       || ''
       ?};
   p2:={? NRDOK.P2<>''
       || _f:=$((POM.TAB)+'.'+(NRDOK.P2)); war:=_f();_form()
       || ''
       ?};
   p3:={? NRDOK.P3<>''
       || _f:=$((POM.TAB)+'.'+(NRDOK.P3)); war:=_f();_form()
       || ''
       ?};
   p4:={? NRDOK.P4<>''
       || _f:=$((POM.TAB)+'.'+(NRDOK.P4)); war:=_f();_form()
       || ''
       ?};
   p5:={? NRDOK.P5<>''
       || _f:=$((POM.TAB)+'.'+(NRDOK.P5)); war:=_f();_form()
       || ''
       ?};
   p6:={? NRDOK.P6<>''
       || _f:=$((POM.TAB)+'.'+(NRDOK.P6)); war:=_f();_form()
       || ''
       ?}
|| FUN.info('Brak zdefiniowanej numeracji dla dokumentów typu %1.'@[POM.TYPDOK]);
   _wyn:=0
?};
_wyn


\nr_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: zwraca numer dla podanej parametrem tabeli. F.uruchamiana po <F3> w polu NR
::   WE:   _a  - akronim tabeli
::        [_b] - czy podpowiadać kolejny numer gdy są wolne numery, ale zrezygnowano z ich wyboru (T, N - domyślnie)
::   WY:  wybrany numer lub string '' gdy nie ma wolnych numerów
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>2 || _b:='N' ?} || _b:='N' ?};

_numer:='';
{? -(1+menu_txt())<>'s'
||
   NRDOK.cntx_psh();
   NRDOK.index('NRDOK');
   NRDOK.prefix(POM.TYPDOK,'');
   {? NRDOK.first
   ||
      _pom:=$(_a +'.NR');
      {? _pom()=0
      ||
::       zwraca wartości p1, p2, p3, p4, p5, p6 wykorzystywane do prefixowania tabeli NR
         exec('nr_pola','numery');

         NR.index('STANR');
         NR.prefix(p1,p2,p3,p4,p5,p6,'W');
         {? NR.first()
         ||
            NR.win_sel('WER');
            exec('nazw_ety','numery');
            {? NR.select(,,,'DUPdupG:DdG')
            || _numer:=NR.NR;
               {? _numer=0
               || FUN.info('Wybrany numer zostanie zmieniony,\nponieważ został już wybrany na innym stanowisku.'@)
               ?}
            ||
               {? ~(NRDOK.MAXN>1 & _b='N')
               ||
                  NR.index('NR');
                  NR.prefix(p1,p2,p3,p4,p5,p6,);
                  {? NR.last()
                  || _numer:=NR.NR+1
                  || _numer:=1
                  ?}
               ?}
            ?}
         ?};
         {? type_of(_numer)=1
         ||
            _pom():=_numer
         ?}
      ?}
   ?};
   NRDOK.cntx_pop()
?};
_numer


\znak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: formatowanie numeru dokumentu do postaci znakowej
::   WE:  _a - akronim tabeli
::       [_b] - czy zapisywać ustalony numer
::             0 - nie
::             1 - tak wartość domyślna (1) (tylko gdy przed nadaniem numeru bylo add)
::             2 - nie i nie komunikować o zmianie sekwencji czynności
::   WY: 1-zapisano numer 0-nie
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_res:=-1;

{? _>=2  || {? type_of(_b)<>1 || _b:=1 ?}  || _b:=1  ?};

NRDOK.cntx_psh();
NRDOK.index('NRDOK');
NRDOK.prefix(POM.TYPDOK,'');
{? ($(_a+'.NR'))()>=0
||
   {? NRDOK.first
   ||
      _pom:=$(POM.TAB +'.NR');
      {? _pom()=0 & POM.NRT=0
      || NR.index('NR');
         NR.prefix(p1,p2,p3,p4,p5,p6,);
         {? NR.last()
         || _pom():=NR.NR+1
         || _pom():=1
         ?}
      ?};
      {? _pom()<>0 | POM.NRT=1
      || numer:=_pom();
         {? exec('nr_ok','numery')
         || {? exec('spr_num','numery')
            ||
               for:={? POM.NRT=1 || $NRDOK.FT || $NRDOK.F ?};
               _jest:=0;
               _nr:=$(_a+'.NR');
               _znak:=$(_a+'.SYM');
               _znak():=for();
               {? _znak()<>''
               ||
                  {? _b=1
                  ||
::                   dodatkowe zabezpieczenie gdyby rekord nie był dodany

                     _ref:=($(_a+'.ref'))();
                     ($(_a+'.cntx_psh'))();
                     ($(_a+'.clear'))();
                     {? ($(_a+'.seek(_a)'))(_ref)
                     ||
                        _jest:=1
                     ?};
                     ($(_a+'.cntx_pop'))()
                  ?}
               || _wyn:=0
               ?};

               {? _wyn=1 & {? POM.NRT=0 || _res:=exec('nr_new','numery'); _res || 1 ?}
               ||
                  {? _jest || ($(_a+'.put'))() ?};
                  {? _b=1
                  || exec('nr_uidref','numery',_nr())
                  |? _b=0
                  || FUN.info('Zmień sekwencję numerowania na TAB.add() i nadanie numeru w celu zapamiętania uidref.'@)
                  ?};
                  oldnumer:=1;
                  _wyn:=1
               ||
                  {? POM.NRT=0
                  ||
                     _nr():=0;
                     _znak():=''
                  ?};
                  oldnumer:=0;
                  _wyn:=0
               ?}
            ||
               _wyn:=0
            ?}
         || FUN.info('Dokument o podanym numerze już istnieje.'@);
            _pom():=0;
            _wyn:=0
         ?}
      ?}
   || FUN.info('Należy zdefiniować sposób numeracji typu  %1.'@[POM.TYPDOK]);
      _wyn:=0
   ?}
||
   FUN.info('Numer dokumentu musi być nieujemny.'@);
   _wyn:=0
?};
NRDOK.cntx_pop();
{? ~_res || _wyn:=0 ?};
_wyn


\nr_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdzenie czy dany numer dokumentu jest możliwy do zaakceptowania
::----------------------------------------------------------------------------------------------------------------------
_w:=0;

NR.use('numer'+(-POM.TYPDOK));
exec('nr_pola','numery');
_trans:=do_state();
{? _trans | NR.lock(1)
|| NR.index('NR');
   _zm:=$(POM.TAB+'.NR');
   _zm:=$(_zm());
   _zm:=#_zm;
   NR.prefix(p1,p2,p3,p4,p5,p6,_zm);
   {? NR.first()
   || {? NR.S<>'Z'
      || _w:=1
      || _w:=0
      ?}
   || _w:=1
   ?};
   {? ~_trans || NR.unlock() ?}
|| FUN.info('Brak dostępu do tabeli numeracji.'@)
?};
_w


\spr_num
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza jaki może być maksymalny numer dokumentu
::   WE: [_a] - czy pokazywać komunikat (T/N - domyślnie T)
::   WY: czy numer jest ok
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>2 || _a:='T' ?} || _a:='T' ?};
exec('nr_pola','numery');
_wyn:=1;
_max:=NRDOK.MAXN;
NR.cntx_psh();
NR.index('NR'); NR.prefix(p1,p2,p3,p4,p5,p6,);
{? NR.last()
|| _nrmax:=NR.NR+_max;
   NR.cntx_pop();
   {? numer>_nrmax
   || {? _a='T' || FUN.info('Maksymalny dopuszczalny numer to: %1.'@[form(_nrmax,,,'99')]) ?};
      _wyn:=0
   ?}
|| NR.cntx_pop()
?};
_wyn


\nr_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przypisanie nowego numeru do dokumentu
::   WY: czy udało się dodać numer
::----------------------------------------------------------------------------------------------------------------------
NR.use('numer'+(-POM.TYPDOK));
exec('nr_pola','numery');
_wyn:=0;
{? NR.lock(1)
||
   _zm:=$(POM.TAB+'.NR');
   _zm:=$(_zm());
   _zm:=#_zm;
   NR.last();
   NR.index('NR');
   NR.prefix(p1,p2,p3,p4,p5,p6,_zm);
   {? NR.first()
   ||
      {? NR.S<>'Z'
      ||
         NR.S:='Z';
         NR.put();
         NR.unlock();
         _wyn:=1
      ||
         NR.unlock();
         FUN.info('Próba zapisu istniejącego numeru typu : %1.'@[POM.TYPDOK]);
         _wyn:=0
      ?}
   || NR.blank();
      NR.prefix();
      NR.P1:=p1;
      NR.P2:=p2;
      NR.P3:=p3;
      NR.P4:=p4;
      NR.P5:=p5;
      NR.P6:=p6;
      NR.S:='Z';
      NR.NR:=_zm;
      {? NR.add()
      || _wyn:=1;
         exec('spr_ciag','numery')
      || _wyn:=0
      ?};
      NR.unlock()
   ?}
||
   FUN.info('Brak dostępu do tabeli NR.'@);
   _wyn:=0
?};
_wyn


\spr_ciag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza ciągłość numeracji
::----------------------------------------------------------------------------------------------------------------------
NR.index('NR');
NR.prefix(p1,p2,p3,p4,p5,p6,);
NR.last();
_size:=NR.size();
_ostat:=NR.NR;
{? _size<>_ostat
||
   NR.last();
   {? _ostat>1
   || _licz:=_ostat;
      NR.prefix();
      {!
      |?
         _licz -=1;
         {? ~(NR.find_key(p1,p2,p3,p4,p5,p6,_licz))
         || NR.P1:=p1;
            NR.P2:=p2;
            NR.P3:=p3;
            NR.P4:=p4;
            NR.P5:=p5;
            NR.P6:=p6;
            NR.S:='W';
            NR.NR:=_licz;
            NR.add()
         ?};
         NR.cntx_psh();
         NR.prefix(p1,p2,p3,p4,p5,p6,);
         _size:=NR.size();
         NR.cntx_pop();
         _size<_ostat
      !}
   ?}
?}


\nr_old
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: usunięcie lub zmiana statusu numeru
::----------------------------------------------------------------------------------------------------------------------
NRDOK.index('NRDOK');
NRDOK.prefix(POM.TYPDOK,'');
{? NRDOK.first
|| {? oldnumer
   || NR.use('numer'+(-POM.TYPDOK));
      exec('nr_pola','numery');
      {? NR.lock(1)
      || NR.index('NR');
         NR.prefix(p1,p2,p3,p4,p5,p6,numer);
         {? NR.first()
         || NR.S:='W';
            NR.UIDREF:='';
            NR.put()
         ?};
         NR.prefix(p1,p2,p3,p4,p5,p6,);
         {? NR.last()
         || {? NR.S='W'
            || {!
               |? NR.del();
                  NR.last() & NR.S='W'
               !}
            ?}
         ?};
         NR.unlock()
      ?}
   ?};
   oldnumer:=0
?}


\fak_numer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: podpowiada numer dokumentu
::   WE: _a '' - pytanie o wolne numery, 'PACZKA' - kolejny numer (bez pytania o wolne), 'PACZ_W' - pierwszy wolny numer
::       _b 1-uzupelniaj POM.TYPYDOK; 0-pomijaj
::----------------------------------------------------------------------------------------------------------------------
{? POM.TAB<>'FAKS' & POM.TAB<>'ND' || POM.NRT:=0 ?};
{? POM.TAB='' || POM.TAB:='FAKS' ?};

{? var_pres('_b')<>type_of(1) || _b:=1 ?};

{? _b || POM.TYPDOK:=FAKS.T().KOD ?};

{? {? _b || FAKS.NR=0 || ($(POM.TAB+'.NR'))()=0 ?} & POM.NRT=0
||
   _wol_nr:=exec('czy_spr_wol','numery',POM.TYPDOK);
   NR.use('numer'+(-POM.TYPDOK));
   exec('nr_pola','numery');

   {? _a<>'PACZKA' & _a<>'PACZ_W'
   ||
::    sprawdz czy są wolne numery lub zablokowane

      NR.index('STANR');
      NR.prefix(p1,p2,p3,p4,p5,p6,'W');
      {? NR.first || _nrw:=1 || _nrw:=0 ?};
      NR.prefix(p1,p2,p3,p4,p5,p6,'B');
      {? NR.first || _nrb:=1 || _nrb:=0 ?};
      {? _wol_nr & (_nrw=1 & _nrb=1)
      ||
         {? _a:=FUN.choice('W numeracji występują wolne i zablokowane numery.'
                           '\nCzy chcesz je wykorzystać?'@,3,'Wolne'@,'Zablokowane'@)
         ||
            {? _a=1
            ||
               NR.prefix(p1,p2,p3,p4,p5,p6,'W');
               NR.win_sel('WER');
               exec('nazw_ety','numery');
               {? NR.select(,,,'DUPdup:Dd')
               ||
                  _numer:=NR.NR
               || _numer:=0
               ?}
            |? _a=2
            ||
               NR.prefix(p1,p2,p3,p4,p5,p6,'B');
               NR.win_sel('WER');
               exec('nazw_ety','numery');
               {? NR.select(,,,'DUPdup:Dd')
               ||
                  _numer:=NR.NR
               ||
                  _numer:=0
               ?}
            ?}
         ||
            _numer:=0
         ?}
      |? _wol_nr & (_nrw=1 & _nrb=0)
      ||
         {? FUN.ask('W numeracji występują wolne numery.\nCzy chcesz je wykorzystać?'@)
         ||
            NR.prefix(p1,p2,p3,p4,p5,p6,'W');
            NR.win_sel('WER');
            exec('nazw_ety','numery');
            {? NR.select(,,,'DUPdup:Dd')
            ||
               _numer:=NR.NR
            || _numer:=0
            ?}
         ||
            _numer:=0
         ?}
      |? _wol_nr & (_nrw=0 & _nrb=1)
      ||
         {? FUN.ask('W numeracji występują zablokowane numery.\nCzy chcesz je wykorzystać?'@)
         ||
            NR.prefix(p1,p2,p3,p4,p5,p6,'B');
            NR.win_sel('WER');
            exec('nazw_ety','numery');
            {? NR.select(,,,'DUPdup:Dd')
            ||
               _numer:=NR.NR
            || _numer:=0
            ?}
         ||
            _numer:=0
         ?}
      ||
         _numer:=0
      ?}
   ||
      _numer:=0
   ?};

:: pierwszy wolny nr
   {? _a='PACZ_W'
   ||
      NR.index('STANR');
      NR.prefix(p1,p2,p3,p4,p5,p6,'W');
      {? NR.first()
      ||
         _numer:=NR.NR
      ?}
   ?};

   {? _numer=0
   ||
      NR.index('NR');
      NR.prefix(p1,p2,p3,p4,p5,p6,);
      {? NR.last()
      ||
         _numer:=NR.NR+1
      ||
         _numer:=1
      ?}
   ?};
   _pom:=$(POM.TAB+'.NR');
   _pom():=_numer
||
   0
?}


\numer_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: podpowiada numer dokumentu dla bieżącej wartości POM.TAB oraz POM.TYPDOK
::   WE: [_a] - parametr 'PACZKA' lub dowolny string
::       [_b] - czy wyłączyć akcje grupowa 1-tak 0-nie(domyślnie)
::       [_c] - INTEGER - czy umożliwiać wybór wolnych numerów, czy brać pierwszy z brzegu:
::                         [1] - umozliwiać wybór [domyślnie]
::                          0  - brać pierwszy wolny
::   WY: numer
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>2 || _a:='N' ?}  || _a:='N' ?};
{? _>=2  || {? type_of(_b)<>1 || _b:=0 ?}  || _b:=0 ?};

_free_ask:=1;
{? var_pres('_c')=type_of(0)
|| _free_ask:=_c
?};

{? POM.TAB<>'FAKS' & POM.TAB<>'ND' || POM.NRT:=0 ?};

($(POM.TAB+'.cntx_psh'))();
($(POM.TAB+'.clear'))();
_numer:=0;
{? ($(POM.TAB+'.NR'))()=0 & POM.NRT=0
|| NR.use('numer'+(-POM.TYPDOK));
   {? exec('nr_pola','numery')
   ||
      _komunikat:={? POM.TAB='ND'   || 'Numeracja dok.magazyn.: %1 Magazyn: %2'@[ND.TYP().T,ND.MAG().SYM]
                  |? POM.TAB='FAKS' || 'Numeracja dok.sprzed.: %1 St.sprzed.: %2'@[FAKS.T().T,FAKS.STS().KOD]
                  |? POM.TAB='ZL'   || 'Numeracja zleceń: %1 (%2)'@[ZL.TYP().TYP,ZL.TYP().OPIS]
                  || ST.MSG
                  ?};

      {? do_state()=0 & _a<>'PACZKA'
      ||
::       sprawdz czy są wolne numery lub zablokowane
         NR.index('STANR');
          _nrw:=0;
         {? exec('czy_spr_wol','numery',POM.TYPDOK)
         ||
            NR.prefix(p1,p2,p3,p4,p5,p6,'W');
            {? NR.first()
            ||
               _nrw:=1
            ?}
         ?};
         NR.prefix(p1,p2,p3,p4,p5,p6,'B');
         {? NR.first() || _nrb:=1  || _nrb:=0 ?};

         {? _nrw=1 & _nrb=1
         ||
            {? _free_ask=1
            ||
               {? _a:=FUN.choice(_komunikat+'\n\n'+'W numeracji występują wolne i zablokowane numery.'
                       '\nCzy chcesz je wykorzystać?'@,3,'Wolne'@,'Zablokowane'@)
               ||
                  {? _a=1
                  ||
                     NR.prefix(p1,p2,p3,p4,p5,p6,'W');
                     NR.win_sel('WER');
                     exec('nazw_ety','numery');
                     {? NR.select(,,,'DUPdup'+{? _b || 'G:G' || ':' ?}+'Dd')
                     ||
                        _numer:=NR.NR
                     || _numer:=0
                     ?}
                  |? _a=2
                  ||
                     NR.prefix(p1,p2,p3,p4,p5,p6,'B');
                     NR.win_sel('WER');
                     exec('nazw_ety','numery');
                     {? NR.select(,,,'DUPdup'+{? _b || 'G:G' || ':' ?}+'Dd')
                     ||
                        _numer:=NR.NR
                     || _numer:=0
                     ?}
                  ?}
               ||
                  _numer:=0
               ?}
            |? _free_ask=0
            || _numer:=exec('first_free_nr','numery',POM.TAB)
            ?}
         |? (_nrw=1 & _nrb=0)
         ||
            {? _free_ask=1
            ||
               {? FUN.ask(_komunikat+'\n\n'+'W numeracji występują wolne numery.\nCzy chcesz je wykorzystać?'@)
               ||
                  NR.prefix(p1,p2,p3,p4,p5,p6,'W');
                  NR.win_sel('WER');
                  exec('nazw_ety','numery');
                  {? NR.select(,,,'DUPdup'+{? _b || 'G:G' || ':' ?}+'Dd')
                  ||
                     _numer:=NR.NR
                  || _numer:=0
                  ?}
               ||
                  _numer:=0
               ?}
            |? _free_ask=0
            || _numer:=exec('first_free_nr','numery',POM.TAB)
            ?}
         |? (_nrw=0 & _nrb=1)
         ||
            {? _free_ask=1
            ||
               {? FUN.ask(_komunikat+'\n\n'+'W numeracji występują zablokowane numery.\nCzy chcesz je wykorzystać?'@)
               ||
                  NR.prefix(p1,p2,p3,p4,p5,p6,'B');
                  NR.win_sel('WER');
                  exec('nazw_ety','numery');
                  {? NR.select(,,,'DUPdup'+{? _b || 'G:G' || ':' ?}+'Dd')
                  ||
                     _numer:=NR.NR
                  || _numer:=0
                  ?}
               ||
                  _numer:=0
               ?}
            |? _free_ask=0
            || _numer:=exec('first_free_nr','numery',POM.TAB)
            ?}
         ||
            _numer:=0
         ?}
      ||
         _numer:=0
      ?};
      {? _numer=0
      ||
         NR.index('NR');
         NR.prefix(p1,p2,p3,p4,p5,p6,);
         {? NR.last()
         ||
            _numer:=NR.NR+1
         ||
            _numer:=1
         ?}
      ?}
   ?};
   _numer
||
   0
?};
($(POM.TAB+'.cntx_pop'))();
_numer


\f3_spkod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: F3 dla kodu numeracji
::----------------------------------------------------------------------------------------------------------------------
NRDOK.win_sel('WER_TEN');
NRDOK.win_edit('RED');
NRDOK.index('NRDOK_AB');
NRDOK.prefix(BEER.NRDOK_AB,BEER.NRDOK_AB);
NRDOK.find_key(fld());
{? NRDOK.select(,1,2) || fld():=NRDOK.TYP ?}


\nrd_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: dodanie rekordu numeracji
::----------------------------------------------------------------------------------------------------------------------
NRDOK.win_edit('RED');
NRDOK.index('NRDOK_AB');
NRDOK.blank();
NRDOK.AB:=BEER.NRDOK_AB;
{? NRDOK.edit("exec('chk_nrdo','numery')") || NRDOK.add() ?}


\ae_spkod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: po redakcji kodu numeracji
::   WE: [_a] - wartość pola kod - domyślnie fld()
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:=fld() ?} || _a:=fld() ?};
_wyn:=0;

{? _a<>''
||
   NRDOK.index('NRDOK_AB');
   NRDOK.prefix(BEER.NRDOK_AB,'');
   {? NRDOK.first()
   ||
      {!
      |?
         {? NRDOK.TYP=_a || _wyn:=1 ?};
         NRDOK.next()
      !}

   ?};
   {? ~_wyn
   || FUN.info('Brak kodu numeracji %1 lub kod numeracji niezgodny z typem dokumentu %2.'@[_a,BEER.NRDOK_AB])
   ?}
||
   FUN.info('Należy podać kod numeracji.'@)
?};
_wyn


\ae_nrdab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: po redakcji NRDAB
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? BEER.NRDOK_AB<>''
|| {? NRDOK.AB<>BEER.NRDOK_AB || _wyn:=0 ?}
?};
{? ~_wyn || FUN.info('Akronim bazy niezgodny z typem dokumentu.'@); NRDOK.AB:=BEER.NRDOK_AB ?};
_wyn


\nazw_ety
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: Ustawia nazwy pól dla zmiennych w okienku wertowania dla tabeli numerów
::----------------------------------------------------------------------------------------------------------------------
_nrdokab:={? (3+NRDOK.AB)='FAK' || 'FAKS' || NRDOK.AB ?};
{! _i:=1..6
|! _etykieta:=exec('etykieta','numery',_i);
   NR.fld_opt('WER','col_name="%1"'[_etykieta],NR,'P%1'[$_i])
!};
''


\chk_nrdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdzanie wypełnienia pól po redakcji
::       UWAGA - formuła wołana również podczas importu rekordów
::   WE: [_a] - 'add' / 'put' - dołączenie lub poprawa rekordu
::  TAG: <CHK><NUMERY>
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};

{? _a='' & -(1+menu_txt())<>'p'
|| _a:='add'
|| _a:='put'
?};
_akcja:=_a;

_fld:=__CHK.record(NRDOK,,'TYP','OP','AB','F');
{? _fld='' & _akcja='add'
|| _svalue:=NRDOK.TYP;
   NRDOK.cntx_psh();
   NRDOK.index('NRDOK');
   NRDOK.prefix();
   {? NRDOK.find_key(_svalue)
   || FUN.info('W systemie istnieje już numeracja dla innych dokumentów z symbolem:\n%1 - %2.'@[_svalue,NRDOK.OP]);
      _fld:='TYP'
   ?};
   NRDOK.cntx_pop()
?};

{? _fld='' & +NRDOK.TYP<>3
||
   FUN.info('Kod numeracji wymaga 3-ch znaków.'@);
   _fld:='TYP'
?};


{? NRDOK.MAXN<1 | NRDOK.MAXN>999
|| FUN.info('Dopuszczalna wartość zwiększenia numeru od 1 do 999.'@);
   _fld:='MAXN'
?};

{? _fld='' & NRDOK.FT=''
||
   TYPYDOK.cntx_psh;
   TYPYDOK.prefix;
   {? TYPYDOK.first
   ||
      _loop:=1;
      {!
      |? _loop=1
      |! {? TYPYDOK.KOD=NRDOK.TYP & TYPYDOK.NRT=1
         || FUN.info('Niewypełnione pole: Formuła znaku tymczasowego.'@); _fld:='FT'; _loop:=0
         || _loop:=TYPYDOK.next
         ?}
      !}
   ?};
   TYPYDOK.cntx_pop;
   TYPYSP.cntx_psh;
   TYPYSP.prefix;
   {? TYPYSP.first
   ||
      _loop:=1;
      {!
      |? _loop=1
      |! {? TYPYSP.KOD=NRDOK.TYP & TYPYSP.NRT=1
         || FUN.info('Niewypełnione pole: Formuła znaku tymczasowego.'@); _fld:='FT'; _loop:=0
         || _loop:=TYPYSP.next
         ?}
      !}
   ?};
   TYPYSP.cntx_pop
?};
_fld


\be_nrdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdzanie przed edycją pól dla tabeli NRDOK
::   WY: czy można edytować pole
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? 1+(-menu_txt())='p'
|| _wyn:=~exec('nrtyp_uzywany','numery',NRDOK.TYP)
?};
_wyn


\czyokres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdzanie czy numeracja jest okresowa
::   WE: _a
::   WY: 1-jest okresowa 0-nie jest
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
NRDOK.cntx_psh();
NRDOK.index('NRDOK');
NRDOK.prefix(POM.TYPDOK,'');
{? NRDOK.first
|| _wyn:=(NRDOK.P1<>'' & NRDOK.P1='AM') | (NRDOK.P2<>'' & NRDOK.P2='AM') | (NRDOK.P3<>'' & NRDOK.P3='AM')
    | (NRDOK.P4<>'' & NRDOK.P4='AM') | (NRDOK.P5<>'' & NRDOK.P5='AM') | (NRDOK.P6<>'' & NRDOK.P6='AM')
?};
NRDOK.cntx_pop();
_wyn


\addnrgrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: grupowe dołączenie numerów
::----------------------------------------------------------------------------------------------------------------------
NRDOK.cntx_psh();
VAR_DEL.delete('__etyfld');
__etyfld:=obj_new(6);
{! _i..6 |! __etyfld[_i]:='' !};
_winedit:=NRDOK.mk_edit('Parametry dołączenia grupy'@,0,'__nrdok__');
NRDOK.win_esep(_winedit,'Grupa numerów'@);
NRDOK.win_efld(_winedit,ZAKR,'ODNR',,,20,,,'Od numeru'@);
NRDOK.efld_opt(_winedit,'mark=1',ZAKR,'ODNR');
NRDOK.win_efld(_winedit,ZAKR,'DONR',,,20,,,'Do numeru'@);
NRDOK.efld_opt(_winedit,'mark=1',ZAKR,'DONR');
{! _i..6
|! _wsk:=form(_i,,0,'99');
   {? ($('NRDOK.P'+_wsk))()<>''
   || __etyfld[_i]:=exec('etykieta','numery',_i);
      {? __etyfld[_i]='' || __etyfld[_i]:='Parametr '+_wsk ?};
      NRDOK.win_efld(_winedit,,'P'+_wsk,,,,,,__etyfld[_i]);
      NRDOK.efld_opt(_winedit,'mark=1',,'P'+_wsk)
   ?}
!};
NRDOK.win_efld(_winedit,ZAKR,'S',,,20,,,'Status: W-wolny Z-zajęty'@);
NRDOK.efld_opt(_winedit,'mark=1',ZAKR,'S');
NRDOK.win_ebtn(_winedit,'text=%1,btn_label_align=center,panel=bottom,align=end'['&Zapisz'@],"'key:F2'");
NRDOK.win_ebtn(_winedit,'text=%1,btn_label_align=center,panel=bottom,align=end'['&Anuluj'@],"'key:Esc'");

_nrdokab:=NRDOK.AB;
NRDOK.blank();
NRDOK.AB:=_nrdokab;
_oldedit:=NRDOK.win_edit('?');
NRDOK.win_edit(_winedit);
{? NRDOK.edit("{? ZAKR.ODNR<=0
               || FUN.info('Numer od którego dołączamy numery powinien być większy od zera.'@); 'ODNR'
               |? ZAKR.DONR<=0
               || FUN.info('Numer do którego dołączamy numery powinien być większy od zera.'@); 'DONR'
               |? ZAKR.ODNR>ZAKR.DONR
               || FUN.info('Numer do którego dołączamy numery powinien być większy\n'
                   'od numeru od którego dołączamy numery.'@); 'ODNR'
               |? __etyfld[1]<>'' & NRDOK.P1=''
               || FUN.info('Należy podać %1.'@[__etyfld[1]]); 'P1'
               |? __etyfld[2]<>'' & NRDOK.P2=''
               || FUN.info('Należy podać %1.'@[__etyfld[2]]); 'P2'
               |? __etyfld[3]<>'' & NRDOK.P3=''
               || FUN.info('Należy podać %1.'@[__etyfld[3]]); 'P3'
               |? __etyfld[4]<>'' & NRDOK.P4=''
               || FUN.info('Należy podać %1.'@[__etyfld[4]]); 'P4'
               |? __etyfld[5]<>'' & NRDOK.P5=''
               || FUN.info('Należy podać %1.'@[__etyfld[5]]); 'P5'
               |? __etyfld[6]<>'' & NRDOK.P6=''
               || FUN.info('Należy podać %1.'@[__etyfld[6]]); 'P6'
               |? ZAKR.S<>'Z' & ZAKR.S<>'W'
               || FUN.info('Należy podać status: W-wolny, Z-zajęty.'@); 'S'
               || ''
               ?}")
|| {! _i:=ZAKR.ODNR..ZAKR.DONR
   |! NR.blank();
      NR.NR:=_i;
      NR.P1:=NRDOK.P1;
      NR.P2:=NRDOK.P2;
      NR.P3:=NRDOK.P3;
      NR.P4:=NRDOK.P4;
      NR.P5:=NRDOK.P5;
      NR.P6:=NRDOK.P6;
      NR.S:=ZAKR.S;
      NR.add(1)
   !}
?};
VAR_DEL.delete('__etyfld');
NRDOK.win_edit(_oldedit);
NRDOK.cntx_pop();
1


\etykieta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: grupowe dołączenie numerów
::   WE: _a - nr parametru
::   WY: etykieta pola lub pusty string
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_nrdokab:={? (3+NRDOK.AB)='FAK' || 'FAKS' || NRDOK.AB ?};

{? var_pres(_nrdokab)>=100
|| _pole:=($('NRDOK.P'+$_a))();
   {? _pole<>''
   || _wyn:=exec('fldLabel','#field',_nrdokab,_pole)
   ?}
?};
_wyn


\bl_faks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: wartość początkowa zmiennej dla pola NR
::----------------------------------------------------------------------------------------------------------------------
{? BEER.SZ='S'
|| BEER.MW:='F'
|| BEER.MW:='K'
?};
0


\bl_nrn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: wartość początkowa zmiennej dla pola NR
::----------------------------------------------------------------------------------------------------------------------
BEER.MW:='M';
0


\prtdnrt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: przed redakcja TYPYDOK.NRT
::----------------------------------------------------------------------------------------------------------------------
{? TYPYDOK.DK='T' | TYPYDOK.DK='W'
   | TYPYDOK.KOD='' | exec('FindInSet','#table','NRDOK','NRDOK',TYPYDOK.KOD,,"NRDOK.FT",,,'')=''
|| 0
|| 1
?}


\prtdsnrt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: przed redakcja TYPYSP.NRT
::----------------------------------------------------------------------------------------------------------------------
{? TYPYSP.KOD='' | exec('FindInSet','#table','NRDOK','NRDOK',TYPYSP.KOD,,"NRDOK.FT",,,'')=''
   | TYPYSP.KOR='Z'
|| 0
|| 1
?}


\jest_nrd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: sprawdza czy istnieje numeracja _a
::   WE: _a - NRDOK.TYP
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
NRDOK.cntx_psh;
NRDOK.index('NRDOK');
NRDOK.prefix(_a,'');
{? NRDOK.first || {! |? _wyn:=NRDOK.TYP=_a; _wyn=0 & NRDOK.next !} ?};
NRDOK.cntx_pop;
_wyn


\add_grnr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: dodanie grupy numeracji _a
::   WE: _a - typ numeracji
::----------------------------------------------------------------------------------------------------------------------
{? _a='BAD'
|| NRDOK.cntx_psh;
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='BAD';
   NRDOK.OP:='Badania';
   NRDOK.AB:='BADH';
   NRDOK.F:=$"$BADH.AR+'/'+$BADH.AM+'/'+form(BADH.NR,-5,,'99')";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='T';
   NRDOK.P1:='AR';
   NRDOK.P2:='AM';
   NRDOK.add(1);
   NRDOK.cntx_pop

|? _a='KZB'
|| NRDOK.cntx_psh;
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='KZB';
   NRDOK.OP:='Numeracja korekt zbiorczych';
   NRDOK.AB:='FAKS';
   NRDOK.F:=$"'FKZB/'+$FAKS.AR+'/'+form(FAKS.NR,-5,,'99')";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='T';
   NRDOK.P1:='ODDZ';
   NRDOK.P2:='AR';
   NRDOK.add(1);
   NRDOK.cntx_pop

|? _a='KZF'
|| NRDOK.cntx_psh;
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='KZF';
   NRDOK.OP:='Numeracja korekt do korekt zbiorczych';
   NRDOK.AB:='FAKS';
   NRDOK.F:=$"{? var_pres('__kz_buf')>100 || __kz_buf.get('SYM') || '' ?}";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='T';
   NRDOK.P1:='ODDZ';
   NRDOK.P2:='AR';
   NRDOK.add(1);
   NRDOK.cntx_pop

|? _a='KZZ'
|| NRDOK.cntx_psh;
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='KZZ';
   NRDOK.OP:='Numeracja korekt do korekt zbiorczych';
   NRDOK.AB:='FAKZ';
   NRDOK.F:=$"{? var_pres('__kz_buf')>100 || __kz_buf.get('SYM') || '' ?}";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='T';
   NRDOK.P1:='KZ';
   NRDOK.add(1);
   NRDOK.cntx_pop()

|? _a='SYS'
|| NRDOK.cntx_psh;
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='SYS';
   NRDOK.OP:='Numeracja dokumentów powiązanych';
   NRDOK.AB:='DOKUM';
   NRDOK.F:=$"KH.SKR+'/'+form(DOKUM.NR,-8,,'99')";
   NRDOK.MAXN:=1;
   NRDOK.P1:='KH';
   NRDOK.add(1);
   NRDOK.cntx_pop

|? _a='INN'
|| NRDOK.cntx_psh;
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='INN';
   NRDOK.OP:='Numeracja inwentaryzacji/przeceny';
   NRDOK.AB:='INN';
   NRDOK.F:=$"INN.RODZ+'/'+form(INN.AR,,,'99')+'/'+INN.MG().SYM+'/'+form(INN.NR,-5,,'99')";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='T';
   NRDOK.P1:='ODDZ';
   NRDOK.P2:='RODZ';
   NRDOK.P3:='AR';
   NRDOK.P4:='MG().SYM';
   NRDOK.add(1);
   NRDOK.cntx_pop

|? _a='PTW'
|| NRDOK.cntx_psh;
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='PTW';
   NRDOK.OP:='Numeracja potwierdzeń zam. dostaw';
   NRDOK.AB:='ZDP_NAG';
   NRDOK.F:=$"'PTW/'+form(ZDP_NAG.NR,-5,,'99')";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='T';
   NRDOK.P1:='ODDZ';
   NRDOK.add(1);
   NRDOK.cntx_pop

|? _a='ZDR'
|| NRDOK.cntx_psh;
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='ZDR';
   NRDOK.OP:='Numeracja realizacji zamówień dostaw';
   NRDOK.AB:='ZD_RN';
   NRDOK.F:=$"'ZDR/'+form(ZD_RN.ZD_NAG().R,,,'99')+'/'+form(ZD_RN.NR,-5,,'99')";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='T';
   NRDOK.P1:='ZD_NAG().ODDZ';
   NRDOK.P1:='ZD_NAG().R';
   NRDOK.add(1);
   NRDOK.cntx_pop

|? _a='ZKR'
|| NRDOK.cntx_psh;
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='ZKR';
   NRDOK.OP:='Numeracja real.zam.sprzed./wewn.';
   NRDOK.AB:='ZK_RN';
   NRDOK.F:=$"'ZKR/'+form(ZK_RN.N().R,,,'99')+'/'+form(ZK_RN.NR,-5,,'99')";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='T';
   NRDOK.P1:='N().ODDZ';
   NRDOK.P1:='N().R';
   NRDOK.add(1);
   NRDOK.cntx_pop

|? _a='POL'
|| NRDOK.cntx_psh;
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='POL';
   NRDOK.OP:='Numeracja poleceń wydania';
   NRDOK.AB:='POLWO';
   NRDOK.F:=$"$POLWO.AR+'/'+form(POLWO.NR,-5,,'99')";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='T';
   NRDOK.P1:='AR';
   NRDOK.add(1);
   NRDOK.cntx_pop

|? _a='LZP'
|| NRDOK.cntx_psh;
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='ODZ';
   NRDOK.OP:='Numeracja list zapotrzebowania';
   NRDOK.AB:='ODZAM';
   NRDOK.F:=$"$ODZAM.AR+'/'+form(ODZAM.NR,-5,,'99')";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='T';
   NRDOK.P1:='AR';
   NRDOK.add(1);
   NRDOK.cntx_pop

|? _a='ZLC'
|| NRDOK.cntx_psh;
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='ZLC';
   NRDOK.OP:='Numeracja zleceń';
   NRDOK.AB:='ZL';
   NRDOK.F:=$"form(ST.AR,-4,0,'9.')+'/'+(~-ZL.TYP().TYP)+'/'+form(ZL.NR,-5,0,'9.')";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='T';
   NRDOK.P1:='AR';
   NRDOK.P2:='TYP().TYP';
   NRDOK.add(1);
   NRDOK.cntx_pop

|? _a='ZLP'
|| NRDOK.cntx_psh;
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='ZLP';
   NRDOK.OP:='Numeracja zleceń podrzędnych';
   NRDOK.AB:='ZL';
   NRDOK.F:=$"exec('nrnzl','zl_head',ZL.NRNZL)+'/'+form(ZL.NR,-2,0,'9.')";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='T';
   NRDOK.P1:='NRNZL';
   NRDOK.add(1);
   NRDOK.cntx_pop

|? _a='DOB'
|| NRDOK.cntx_psh();
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='DOB';
   NRDOK.OP:='Numeracja dokumentów w obiegu';
   NRDOK.AB:='EDOKUM';
   NRDOK.F:=$"(4+EDOKUM.ROK_F().NAZ)+'/'+(('0000000000'+$EDOKUM.NR)+10)";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='N';
   NRDOK.P1:='ROK_F';
   NRDOK.P2:='TYPOBIEG';
   NRDOK.add(1);
   NRDOK.cntx_pop()

|? _a='PTR'
|| NRDOK.cntx_psh;
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='PTR';
   NRDOK.OP:='Numeracja partii';
   NRDOK.AB:='ZL';
   NRDOK.F:=$"ZPARN.ZL().SYM+'/'+form(ZPARN.NR,-3,0,'9.')";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='T';
   NRDOK.P1:='ZL';
   NRDOK.add(1);
   NRDOK.cntx_pop()

|? _a='UDT'
|| NRDOK.cntx_psh();
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='UDT';
   NRDOK.OP:='Numeracja umów';
   NRDOK.AB:='UDT';
   NRDOK.F:=$"UDT.FIRMA().SYMBOL+(('00000000'+$UDT.NR)+5)";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='T';
   NRDOK.P1:='FIRMA';
   NRDOK.add(1);
   NRDOK.cntx_pop()

:: Schemat numeracji zgłoszeń remontowych - do użycia po przejściu z Xpertisa
|? _a='ZGL'
|| NRDOK.cntx_psh();
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='ZGL';
   NRDOK.OP:='Numeracja zgłoszeń remontowych';
   NRDOK.AB:='REM_ZGL';
   NRDOK.F:='exec(\'num\',\'remonty_zgloszenia\')';
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='T';
   NRDOK.P1:='REM_KATG';
   NRDOK.P2:='AR';
   NRDOK.add(1);
   NRDOK.cntx_pop()

|? _a='TRZ'
|| NRDOK.cntx_psh();
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='TRZ';
   NRDOK.OP:='Numeracja zleceń transportowych';
   NRDOK.AB:='TR_NZL';
   NRDOK.F:=$"form(ST.AR,-4,0,'9.')+'/'+(~-TR_NZL.RODZ)+'/'+form(TR_NZL.NR,-5,0,'9.')";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='N';
   NRDOK.P1:='AR';
   NRDOK.P2:='RODZ';
   NRDOK.add(1);
   NRDOK.cntx_pop()

|? _a='PDV'
|| NRDOK.cntx_psh();
   NRDOK.prefix();
   NRDOK.blank(1);
   NRDOK.TYP:='PDV';
   NRDOK.OP:='Numeracja wersji analizy planu dostaw';
   NRDOK.AB:='PD_TV';
   NRDOK.F:=$"(14+PD_TV.PD_N().SYM)+'/'+form(PD_TV.NR,-5,,'99')";
   NRDOK.MAXN:=1;
   NRDOK.WOL_NR:='N';
   NRDOK.P1:='PD_N().SYM';
   NRDOK.P2:='TYP';
   NRDOK.add(1);
   NRDOK.cntx_pop()
?}


\nrd_kopiuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: kopiowanie definicji numeracji
::----------------------------------------------------------------------------------------------------------------------
{? NRDOK.edit("exec('chk_nrdo','numery')")
||
   NRDOK.add
?}


\first_free_nr
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PRIVATE
::  UTW: WH [12.30]
:: OPIS: Zwraca pierwszy wolny numer z puli wolnych dla aktualnie ustawionego typu numeracji
::   WY: pierwszy wolny numer lub 0 gdy nie ma wolnych numerów
::----------------------------------------------------------------------------------------------------------------------
_numer:=0;

NR.cntx_psh();
{? NR.lock(1)
||
   NRDOK.cntx_psh();
   NRDOK.index('NRDOK');
   NRDOK.prefix(POM.TYPDOK,'');
   {? NRDOK.first
   ||
::    zwraca wartosci p1, p2, p3, p4, p5, p6 wykorzystywane do prefixowania tabeli NR
      exec('nr_pola','numery');

      NR.index('STANR');
      NR.prefix(p1,p2,p3,p4,p5,p6,'W');
      {? NR.first()
      || _numer:=NR.NR
      ?}
   ?};
   NRDOK.cntx_pop();
   NR.unlock()
?};
NR.cntx_pop();
_numer


\nr_uidref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zapamiętanie w tabeli numeracji uidref rekordu dla którego ustanowiono numer
::   WE: _a - NR.NR
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_zm:=_a;
_uidref:={? var_pres('IDADD',($POM.TAB)())>0 || ($(POM.TAB+'.uidref()'))() || '' ?};

{? _uidref<>''
|| NR.use('numer'+(-POM.TYPDOK));
   exec('nr_pola','numery');
   {? NR.lock(1)
   || NR.index('NR');
      NR.prefix(p1,p2,p3,p4,p5,p6,_zm);
      {? NR.first()
      || NR.UIDREF:=_uidref;
         NR.put()
      ?};
      NR.unlock()
   || FUN.info('Brak dostępu do tabeli numeracji.'@)
   ?}
?}


\is_nrdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.14]
:: OPIS: Czy istnieje sposób numeracji
::   WE: [_a] - komunikatować? [1]-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<0 || _a:=1 ?};
_jest:=1;
NRDOK.cntx_psh();
NRDOK.index('NRDOK');
NRDOK.prefix(POM.TYPDOK,'');
{? ~NRDOK.first()
|| {? _a || FUN.info('Należy zdefiniować sposób numeracji typu  %1.'@[POM.TYPDOK]) ?};
   _jest:=0
?};
NRDOK.cntx_pop();
_jest


\symbol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.14]
:: OPIS: Zwraca symbol na podstawie numeracji
::   WE: [_a] - typ numeracji, domyślnie POM.TYPDOK
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=POM.TYPDOK ?};
NRDOK.cntx_psh();
NRDOK.index('NRDOK');
NRDOK.prefix(_a,'');
{? NRDOK.first()
|| _wyn:=($NRDOK.F)()
|| _wyn:=''
?};
NRDOK.cntx_pop();
_wyn


\uidref_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Zmienia w tabeli NR pole UIDREF z _a na _b
::   WE: _a -rodzaj numeracji
::       _a - stary uidref
::       _b - nowy uidref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || return(~~) ?};
{? var_pres('_b')<>type_of('') || return(~~) ?};
{? var_pres('_c')<>type_of('') || return(~~) ?};

NR.cntx_psh();
NR.use('numer'+(-_a));
NR.index('UIDREF');
NR.prefix(_b);
{? NR.first()
|| {!
   |? _ref:=NR.ref();
      _nast:=NR.next();
      NR.cntx_psh();
      NR.clear();
      NR.seek(_ref);
      NR.UIDREF:=_c;
      NR.put();
      NR.cntx_pop();
      _nast
   !}
?};
NR.cntx_pop();

~~


\nrtyp_uzywany
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: sprawdzanie, czy dany typ numeracji (NRDOK.TYP) jest używany (jest w tabeli NR)
::   WE: [_a] - typ
::   WY: 1 - używany, 0 - nie
::----------------------------------------------------------------------------------------------------------------------
_typ:='';
{? var_pres('_a')=type_of('')
|| _typ:=3+_a
?};
_wyn:=0;
{? _typ<>''
|| NR.use('numer'+-(_typ));
   NR.index('NR');
   NR.prefix();
   _wyn:=NR.first()
?};
_wyn

:Sign Version 2.0 jowisz:1045 2023/12/20 14:43:19 9db75245f53770ba3ea0fedf920a5f9d12601ef1dfbd46b1ee9e8f18f560c71b9b57886e15bd7e98c108fe3247769e95af24f540fc022069f712751e7da2517f4d421539f230b11fe151d0336d5c04af140bd15a13f5f3a6a216db4bfba8a221bc9e83be4fe3cf0b6c1f28bc7a7cea94fccb3899add11bef6c03bc79ef1d12de
