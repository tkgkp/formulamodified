:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: umowy_faktury.fml
:: Utworzony: 12.02.2019
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Formuły do obsługi fakturowania umów
::======================================================================================================================


\env
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Środowisko obszaru roboczego LUM_FAK
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::UWAGA: _fld, i _mth to formułki pomocnicze, zeby wygodniej tworzyć tablicę i komentować poszczególne jej elementy
::       powiedzmy, że to bedzie pole
         _fld:="31+form(_a)";
::       powiedzmy, że to bedzie metoda
         _mth:="31+form(_a)";

_env:=obj_new(
::             Zmienne pomocnicze
                _fld('RODZ','Rodzaj paczki [U/Z]')
               ,_fld('REF_U','FPACZ.ref')
               ,_fld('REF_Z','FPACZ.ref')

::             identyfikatory okienek
               ,_fld('wid_main','ID okienka głównego')

::             tytuły okienek
               ,_fld('tit_main','Tytuł okienka głównego')

::             uchwyty do okien
               ,_fld('WIN_MAIN','Uchwyt okienka grupowego')

::             METODY
               ,_mth('select','Pokazuje okno obszaru')
             );

_env.RODZ:='U';
_env.REF_U:=null();
_env.REF_Z:=null();
_env.wid_main:='#lum_fak_main';
_env.tit_main:='';
_env.WIN_MAIN:='';

_env.select:="
   params_set(params_get());

   exec('icon_before','umowy_faktury');

   exec('grp_make','umowy_faktury',.);

   FPACZ.win_sel(.WIN_MAIN);

   exec('init','lum');

   AreaTitle.setTabWin(FPACZ,~~);
   AreaTitle.setTitle();

   FPACZLOG.use('fplog'+ST.ODDZ+($(ST.AR)+2));

   FPACZ.index('ROK');
   FPACZ.prefix(ST.ODDZ,ST.AR,.RODZ);
   FPACZ.select()
";

_env


\grp_make
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Tworzy okienko grupowe obszaru
::   WE: _a - _env - srodowisko - wynik działąnia exec('env','umowy_faktury')
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=FPACZ;
{? _env.WIN_MAIN=''
||
:: okno grupowe
   _grpbefor:="
      ~~
   ";
   _grp:=_tab.grp_make(_env.tit_main,_grpbefor,_env.wid_main,1,1,"exec('exit','zws',_a)");

:: zakładka - Paczki faktur
   _far:="";
   _fb:="
      _env:=params_get().env_fak;
      _env.RODZ:='U';
      FPACZ.index('ROK');
      FPACZ.prefix(ST.ODDZ,ST.AR,_env.RODZ);
      FPACZ.seek(_env.REF_U)
   ";
   _fa:="
      _env:=params_get().env_fak;
      _env.REF_U:={? {? FPACZ.f_active() || FPACZ.f_size() || FPACZ.size() ?}>0 || REF_U:=FPACZ.ref() || null() ?};
      params_set(params_get());
      grp_disp(FAKS, 'WERSPACZ');
      grp_disp(FPACZFAP, FPACZFAP.win_sel('?'))
   ";
   _tab.grp_sel(_grp,,'WER','Paczki faktur'@,_fa,,,,_fb,_fa,,,'maximized');

:: zakładka - Paczki faktur ze zgłoszeń jednorazowych
   _far:="";
   _fb:="
      _env:=params_get().env_fak;
      _env.RODZ:='Z';
      FPACZ.index('ROK');
      FPACZ.prefix(ST.ODDZ,ST.AR,_env.RODZ);
      FPACZ.seek(_env.REF_Z)
   ";
   _fa:="
      _env:=params_get().env_fak;
      _env.REF_Z:={? {? FPACZ.f_active() || FPACZ.f_size() || FPACZ.size() ?}>0 || FPACZ.ref() || null() ?};
      params_set(params_get());
      grp_disp(FAKS, 'WERSPACZ');
      grp_disp(FPACZFAP, FPACZFAP.win_sel('?'))
   ";
   _tab.grp_sel(_grp,,'WER','Paczki faktur ze zgłoszeń jednorazowych'@,_fa,,,,_fb,_fa,,,'maximized');

:: zakładka - Dokumenty
   _wer:='WERSPACZ';
   FAKS.win_fml(_wer,,'SYM',,'ICON_BEFORE',exec('faks_sym_ib','faktury_nag'));
   FAKS.win_fml(_wer,,'NR',,'ICON_BEFORE',exec('faks_sym_it','faktury_nag'));
   FAKS.win_fml(_wer,,'NETTO',,'ICON_BEFORE',exec('faks_war_ib','faktury_nag'));
   _far:="
      exec('lsp_fak_var','lsp');
      FILTER.FAKS:=null();
      params_exec('faks_far_wers','lsp','LUM_FAK')";
   _fb:="
      _env:=params_get().env_fak;
      FAKS.index('FPACZKA');
      _ref:={? _env.RODZ='U' || _env.REF_U || _env.REF_Z ?};
      {? _ref=null() || _ref:=-1 ?};
      FAKS.prefix(_ref)
   ";
   _fa:="
   ";
   _tab.grp_splt(_grp,,'horizontal','dokumenty','0, 50%');
   _tab.grp_sel(_grp,FAKS,_wer,'Dokumenty'@,_far,,,,_fb,_fa,,,'maximized');

:: zakładka - Prognoza przychodu
   _wer:=exec('fpaczfap_wer','umowy_faktury',0);
   FPACZFAP.win_sel(_wer);
   _far:="
   ";
   _fb:="
      _env:=params_get().env_fak;
      FPACZFAP.index('FPACZ');
      _ref:={? _env.RODZ='U' || _env.REF_U || _env.REF_Z ?};
      {? _ref=null() || _ref:=-1 ?};
      FPACZFAP.prefix(_ref)
   ";
   _fa:="
   ";
   _tab.grp_sel(_grp,FPACZFAP,_wer,'Prognoza przychodu'@,_far,,,,_fb,_fa,,,'maximized');

   _tab.win_sel(_grp);
   _env.WIN_MAIN:=_grp;

   AreaTitle.setTabWin(_tab,_grp);
   AreaTitle.setTitle();
   ~~
?};
~~


\icon_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Formuły na ICON_BEFORE dla okien paczek faktur
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_formikon:="

   params_set(params_get());
   _env:=params_get().env_fak;

   {? FPACZ.STAT_REJ='T' || exec('zaakceptowany','icon')
   |? FPACZ.STAT_REJ='Z' || exec('zarejestrowany','icon')
   |? FPACZ.STAT_REJ='N' || exec('pusta','#icon')
   || exec('pusta','#icon')
   ?}

";
FPACZ.win_fml('WER',,'NR',,'ICON_BEFORE',_formikon);
~~


\fpacz_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Zwraca okno redakcji tabeli FPACZ
::   WE: _a - akronim pola redakcji
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_win_akr:={? var_pres('_a')=type_of('') || _a || 'RED' ?};
_title:='Paczka faktur'@;
_win_red:=FPACZ.mk_edit(_title,,'fpacz_red',,,'html_maximized');
_wtyczka:={? Plugin.run('FPACZ_WYDR_001')<>''|| 1 || 0?};
{? _wtyczka & _win_akr='RED'
||
FPACZ.win_etab(_win_red,_title)
?};
FPACZ.win_ewin(_win_red,,_win_akr);
{? _wtyczka & _win_akr='RED'
||
_title2:='Parametry wydruku'@;
FPACZ.win_etab(_win_red,_title2);
FPACZ.win_ewin(_win_red,,'RED_2')
?};
_win_red


\fpacz_set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Zaznacza wymagalne pola, włącza/wyłącza pola w paczce faktur
::   WE: _a - akronim okna redakcji
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || FPACZ.win_edit('?') ?};

{? _win_red='' || return(~~) ?};

:: sposób fakturowania
FPACZ.efld_opt(_win_red,'mark=1',,'FAS');
:: typ dokumentu sprzedaży
FPACZ.efld_opt(_win_red,'mark=1',,'TYPYSP');
:: poczka od, do
{? exec('be_data','!lum_fak_dpac')
||
   FPACZ.efld_opt(_win_red,'enable=0',,'FPACZ');
   FPACZ.efld_opt(_win_red,'enable=0',,'FPACZ_DO');
   FPACZ.efld_opt(_win_red,'mark=1',,'OD');
   FPACZ.efld_opt(_win_red,'mark=1',,'DO')
||
   FPACZ.efld_opt(_win_red,'enable=1',,'FPACZ');
   FPACZ.efld_opt(_win_red,'enable=1',,'FPACZ_DO');
   FPACZ.efld_opt(_win_red,'mark=1',,'FPACZ');
   FPACZ.efld_opt(_win_red,'mark=1',,'FPACZ_DO');
   FPACZ.efld_opt(_win_red,'mark=0',,'OD');
   FPACZ.efld_opt(_win_red,'mark=0',,'DO')
?};
:: data wystawienia
FPACZ.efld_opt(_win_red,'mark=1',,'DW');
:: data sprzedaży
FPACZ.efld_opt(_win_red,'mark=1',,'DS');
:: waluta, kurs, data kursu dla waluty opodatkowania
FPACZ.efld_opt(_win_red,'mark=1',,'WAL');
{? FPACZ.WAL & FPACZ.WAL<>INFO.NAROD
||
::   FPACZ.efld_opt(_win_red,'mark=1',,'KRS');
   FPACZ.efld_opt(_win_red,'mark=1',,'DTK');
   FPACZ.efld_opt(_win_red,'enable=1',,'SWAL');
   FPACZ.efld_opt(_win_red,'enable=1',,'KRS');
   FPACZ.efld_opt(_win_red,'enable=1',,'DTK')
||
::   FPACZ.efld_opt(_win_red,'mark=0',,'KRS');
   FPACZ.efld_opt(_win_red,'mark=0',,'DTK');
   FPACZ.efld_opt(_win_red,'enable=0',,'SWAL');
   FPACZ.efld_opt(_win_red,'enable=0',,'KRS');
   FPACZ.efld_opt(_win_red,'enable=0',,'DTK')
?};
:: termin i sposób płatności
{? FPACZ.TERM='P' | FPACZ.TERM='A'
||
   FPACZ.efld_opt(_win_red,'mark=1',,'PL');
   FPACZ.efld_opt(_win_red,'mark=1',,'TZ');
   FPACZ.efld_opt(_win_red,'enable=1',,'PL');
   FPACZ.efld_opt(_win_red,'enable=1',,'TZ')
||
   FPACZ.efld_opt(_win_red,'mark=0',,'PL');
   FPACZ.efld_opt(_win_red,'mark=0',,'TZ');
   FPACZ.efld_opt(_win_red,'enable=0',,'PL');
   FPACZ.efld_opt(_win_red,'enable=0',,'TZ')
?};
{? exec('ps_65','rachunki')='T'
|| FPACZ.efld_opt(_win_red,'enable=1',,'DRB')
|| FPACZ.efld_opt(_win_red,'enable=0',,'DRB')
?};
:: rabat
{? FPACZ.RAB_NAL='K'
|| FPACZ.efld_opt(_win_red,'enable=0',,'RAB')
|| FPACZ.efld_opt(_win_red,'enable=1',,'RAB')
?};
FPACZ.fld_fml('RAB','EDIT_FORMAT',"'in_prec=2'");
~~


\pacz_il
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: obliczanie ilosci dokumentow w paczce faktur
::   WE: _a - ref paczki faktur
::       _b - 0/1 - błąd
::  OLD: \pacz_il/um.fml
::----------------------------------------------------------------------------------------------------------------------
FAKS.cntx_psh();
FPACZ.cntx_psh();
_licz:=0;
FAKS.index('FPACZKA');
FAKS.prefix(_a);
{? FAKS.first() || _licz:=FAKS.size() ?};
FPACZ.clear();
{? FPACZ.seek(_a)
||
   FPACZ.IL:=_licz;
   FPACZ.STAT_GEN:=exec('stat_gen','umowy_faktury',_b);
   FPACZ.put()
?};
FAKS.cntx_pop();
FPACZ.cntx_pop();
''


\zlt_ini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: utworzenie tabeli __zlt
::  OLD: \zlt_ini/um.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__zlt')>100
||
   __zlt.prefix(); {? __zlt.first() || {! |? __zlt.del() !} ?}
||
   VAR_DEL.delete('__zlt');
   __zlt:=tab_tmp(1
      ,'DW','DATE','Data wykonania'
      ,'DWN','DATE','Nowa data wykonania'
      ,'SR','STRING[1]','Stan realizacji'
      ,'IL','REAL','Ilość'
      ,'C','REAL','Cena'
      ,'RAB','REAL','Rabat'
      ,'JM','STRING[16]','Jednostka miary'
      ,'ZLP_REF','STRING[16]','Ref zgłoszenia'
      ,'FAS','STRING[16]','Sposób fakturowania'
      ,'USL','STRING[16]','Rodzaj usługi'
      ,'M','STRING[16]','Usługa na fakturze'
      ,'TAR','STRING[16]','Cennik'
      ,'KHK','STRING[20]','Kontrahent-kod'
      ,'GRKH','STRING[16]','Grupa kontrahentów'
      ,'UMS','STRING[20]','Umowa symbol'
      ,'ZLES','STRING[20]','Zgłoszenie symbol'
      ,'VAT','STRING[1]','Płatnik VAT'
      ,'POS','STRING[16]','Posesja'
      ,'REJO','STRING[16]','Rejon'
      ,'MIA','STRING[16]','Miasto'
      ,'UL','STRING[16]','Ulica'
      ,'POJAZD','STRING[16]','Samochód'
      ,'ZLBR','STRING[16]','Brygada robocza'
      ,'PRACW','STRING[16]','Pracownik'
      ,'R','STRING[1]','Rodzaj'
      ,'CZUM','STRING[1]','Czy z umowy'
      ,'U','STRING[255]','Uwagi'
      ,'NAZ','STRING[120]','Nazwa'
      ,'MIASTO','STRING[30]','Miasto'
      ,'ULK','STRING[30]','Ulica'
      ,'POCZ','STRING[30]','Poczta'
      ,'ODD','DATE','Od daty'
      ,'DOD','DATE','Do daty'
      ,'KH_ODB','STRING[16]','Odbiorca'
      ,'NAZS','STRING[60]','Nazwa skrócona'
      ,'WAL','STRING[16]','Waluta SLO'
      ,'CB','STRING[1]','Cana netto/brutto'
      ,'TAP','STRING[16]','$TAP.ref()'
      ,'KH_ODBK','STRING[10]','Odbiorca kod'
      ,'PL','STRING[16]','Forma płatności $SLO.ref()'
      ,'PROJEKTY','STRING[16]','Projekt $PROJEKTY.ref()'
      ,'FV','STRING[1]','Osobna faktura'
   )
?};
''


\zlt_inis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: utworzenie tabeli __zlt z oknem __zlt_sel
::  OLD: \zlt_inis/um.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zlt_ini','umowy_faktury');
{? var_pres('__zlt_sel')<=0
||
   __zlt_sel:=__zlt.mk_sel('Zgłoszenia'@,'P',,'_faks_zlt_sel_',,,,,'U');
   __zlt.win_fld(__zlt_sel,,'UMS',,,15,,,'Umowa'@);
   __zlt.win_fld(__zlt_sel,,'KHK',,,10,,,'Kontrahent'@);
   __zlt.win_fld(__zlt_sel,,'KH_ODBK',,,10,,,'Odbiorca'@);
   __zlt.win_fld(__zlt_sel,,'DW',,,10,,,'Data wykonania'@);
   __zlt.win_fld(__zlt_sel,UMO,'UL','KDP',,6,,,'Kod'@);
   __zlt.win_fld(__zlt_sel,UMO,'MIA','NAZ',,10,,,'Miasto'@);
   __zlt.win_fld(__zlt_sel,UMO,'UL','UL',,10,,,'Ulica'@);
   __zlt.win_fld(__zlt_sel,UMO,'POS','NR',,-6,,,'Numer'@);
   __zlt.win_fld(__zlt_sel,UMO,'M','KTM',,15,,,'Usługa'@);
   __zlt.win_fld(__zlt_sel,,'IL',,,10,3,,'Ilość'@);
   __zlt.win_fld(__zlt_sel,UMO,'JM','KOD',,5,,,'jm'@);
   __zlt.win_fld(__zlt_sel,,'R',,,-3,,,'Usługa podstawowa'@,,,2,,"'*'","''");
   __zlt.win_act(__zlt_sel,,'Kolejność');
   __zlt.win_act(__zlt_sel,,'Rekord',,,,"exec('zlt_umo','umowy_faktury')");
   __zlt.win_act(__zlt_sel,,'Wyświetl',,,,"exec('zlp_disp','umowy_faktury')");
   __zlt.win_act(__zlt_sel,,'Szukaj',)
?};
''


\add_zlt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: uzupelnianie rekordu w tabeli __zlt
::   WE: _a - ZLP.ref()
::       _b - 1/0 - czy usluga podstawowa
::  OLD: \add_zlt/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
__zlt.prefix($_a);
{? ~__zlt.first()
||
   __zlt.blank();
   __zlt.DW:=ZLP.DW;
   __zlt.SR:=ZLP.SR;

   exec('zlp_umo','umowy_zlecenia');
   {? _b='*'
   ||
      {? ZLP.IL>0
      ||
         __zlt.M:=$ZLP.MJ;
         {? ZLP.RFAK=3
         ||
            __zlt.JM:=$UMO.JM2;
            __zlt.IL:=UMO.IL2;
            __zlt.C:=UMO.C2
         ||
            __zlt.JM:=$UMO.JM1;
            __zlt.IL:=ZLP.IL;
            __zlt.C:=UMO.C1
         ?}
      |? ZLP.ILR>0
      ||
         __zlt.M:=$ZLP.M_R;
         __zlt.JM:=$ZLP.M_R().J;
         __zlt.IL:=ZLP.ILR;
         __zlt.C:=UMO.C3
      ?}
   ||
      {? ZLP.ILD>0 | ZLP.PRD>0
      ||
         __zlt.M:=$ZLP.M_D;
         __zlt.JM:=$ZLP.M_D().J;
         {? ZLP.ILD>0
         ||
            __zlt.IL:=ZLP.ILD;
            __zlt.C:=UMO.C4
         |? ZLP.PRD>0
         ||
            __zlt.IL:=1;
            {? ZLP.RFAK=3
            || __zlt.C:=(UMO.IL2*UMO.C2*ZLP.PRD/100)$2
            || __zlt.C:=(ZLP.IL*UMO.C1*ZLP.PRD/100)$2
            ?}
         ?}
      ?}
   ?};
   __zlt.R:=_b;

   __zlt.ZLP_REF:=$ZLP.ref();
   __zlt.FAS:=$ZLP.ZLE().FAS;
   __zlt.USL:=$ZLP.ZLE().USL;
   __zlt.TAR:=$ZLP.ZLE().TAR;
   __zlt.KHK:=ZLP.ZLE().KH().KOD;
   __zlt.KH_ODBK:=ZLP.KH_ODB().KOD;
   __zlt.GRKH:=$ZLP.ZLE().KH().GRKH;
   __zlt.UMS:=ZLP.ZLE().UM().SYM;
   __zlt.CZUM:=ZLP.ZLE().CZUM;
   __zlt.ZLES:=ZLP.ZLE().SYM;
   __zlt.VAT:=ZLP.ZLE().KH().TYP;

   __zlt.POJAZD:=$ZLP.POJAZD;
   __zlt.ZLBR:=$ZLP.ZLBR;
   __zlt.PRACW:=$ZLP.PRACW;
   __zlt.POS:=$ZLP.ZLE().POS;
   __zlt.MIA:=$ZLP.ZLE().POS().UL().MIA;
   __zlt.UL:=$ZLP.ZLE().POS().UL;
   __zlt.REJO:=$ZLP.ZLE().POS().UL().REJO;
   __zlt.WAL:=$ZLP.WAL;
   __zlt.CB:=ZLP.CB;
   __zlt.PROJEKTY:=$ZLP.PROJEKTY;
   __zlt.FV:={? ZLP.ZLE().UM().FV='T' || 'T' || 'N' ?};
   __zlt.add()
?};
''


\zlt_umo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: uzupelnia zmienne UMO dla __zlt
::  OLD: \zlt_umo/um.fml
::----------------------------------------------------------------------------------------------------------------------
UMO.JM:=exec('FindAndGet','#table',JM,__zlt.JM,,,null());
UMO.FAS:=exec('FindAndGet','#table',FAS,__zlt.FAS,,,null());
UMO.USL:=exec('FindAndGet','#table',USL,__zlt.USL,,,null());
UMO.M:=exec('FindAndGet','#table',M,__zlt.M,,,null());
UMO.TAR:=exec('FindAndGet','#table',TAR,__zlt.TAR,,,null());
UMO.GRKH:=exec('FindAndGet','#table',GRKH,__zlt.GRKH,,,null());
UMO.POS:=exec('FindAndGet','#table',POS,__zlt.POS,,,null());
UMO.REJO:=exec('FindAndGet','#table',REJO,__zlt.REJO,,,null());
UMO.MIA:=exec('FindAndGet','#table',MIA,__zlt.MIA,,,null());
UMO.UL:=exec('FindAndGet','#table',UL,__zlt.UL,,,null());
UMO.POJAZD:=exec('FindAndGet','#table',POJAZDY,__zlt.POJAZD,,,null());
UMO.ZLBR:=exec('FindAndGet','#table',ZLBR,__zlt.ZLBR,,,null());
UMO.PRACW:=exec('FindAndGet','#table',PRACW,__zlt.PRACW,,,null());
UMO.KH_ODB:=exec('FindAndGet','#table',KH_ODB,__zlt.KH_ODB,,,null());
UMO.WAL:=exec('FindAndGet','#table',SLO,__zlt.WAL,,,null());
''


\zlp_disp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: wyswietl zgloszenie ZLP na z tabeli __zlt
::  OLD: \zlp_disp/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
ZLP.cntx_psh();
ZLP.use(form(8+__zlt.ZLP_REF));
ZLP.prefix();
{? ZLP.seek(__zlt.ZLP_REF,form(8+__zlt.ZLP_REF))
||
   FAKS.cntx_psh();
   FAP.cntx_psh();
   _msk:=(6+__zlt.ZLP_REF)+3;
   FAKS.use('faktu'+_msk);
   FAP.use('fakpo'+_msk);
   exec('zlp_aktu','umowy_zlecenia');
   exec('zlp_zwys','umowy_faktury');
   FAP.cntx_pop();
   FAKS.cntx_pop()
?};
ZLP.cntx_pop();
''


\zlp_zwys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: wyswietlnie okienka na spacji
::  OLD: \zlp_zwys/um_zlec2.fml
::----------------------------------------------------------------------------------------------------------------------
ZLE.win_edit('REDP');
ZLP.get();
ZLE.get();
ZLP.memo_get(,'NDRUK');
ZLP.memo_get(,'OPIS');

ZLEC.MIA:=ZLE.POS().UL().MIA;
ZLEC.UL:=ZLE.POS().UL;
ZLE.display();
''


\uzup_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: uzupelnia rekord w tabeli __zlt - pomocnicza tabela przechowujaca wartosci z ZLP
::       na podstawie biezacej wartosci bufora ZLP
::       wywolywana w wystawianiu paczki faktur oraz recznym fakturowaniu zlecen
::   WE: [_a] - cena+rabat dla danego ZLP ... jezeli (0) to szuka jezeli > to wpisuje podana
::       [_b] - czy wyswietlac komunikaty (domyslnie 1-tak/0-dodaje do memo)
::       [_c] - 0-reczne fakturowanie pozycji zlecen, 1-paczki faktur
::   WY: 0/1 czy zafakturowano
::  OLD: \uzup_tmp/um.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<100 || _a:=obj_new(2); _a[1]:=_a[2]:=0 ?} || _a:=obj_new(2); _a[1]:=_a[2]:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};

_kstfa:=exec('kst_fa','umowy_faktury',1);

_wyn:=0;
:: wart 1 pozycji
_watr_one:=0;

_od:=1;

{? ZLP.M_D<>null & (ZLP.ILD>0 | ZLP.PRD>0)
|| _ile:=2
|| _ile:=1
?};

{! _licz:=_od.._ile
|!
   __zlt.blank();
   __zlt.DW:=ZLP.DW;
   __zlt.SR:=ZLP.SR;
   __zlt.ZLP_REF:=$ZLP.ref();
   __zlt.FAS:=$ZLP.ZLE().FAS;
   __zlt.TAR:=$ZLP.ZLE().TAR;
   __zlt.KHK:=ZLP.ZLE().KH().KOD;
:: dodaje kod dla zapewnienia kolejnosci
   __zlt.NAZ:=ZLP.ZLE().KH().NAZ+'|'+ZLP.ZLE().KH().KOD;
   __zlt.NAZS:=(ZLP.ZLE().KH().NAZ-8)+ZLP.ZLE().KH().KOD;
   __zlt.GRKH:=$ZLP.ZLE().KH().GRKH;
   __zlt.UMS:=ZLP.ZLE().UM().SYM;
   __zlt.ZLES:=ZLP.ZLE().SYM;
   __zlt.VAT:=ZLP.ZLE().KH().TYP;
   __zlt.USL:=$ZLP.ZLE().USL;
   __zlt.U:=ZLP.U;
   __zlt.ODD:=ZLP.ODD;
   __zlt.DOD:=ZLP.DOD;
   __zlt.KH_ODB:=$ZLP.KH_ODB;
   __zlt.WAL:=$ZLP.WAL;
   __zlt.POS:=$ZLP.ZLE().POS;
   __zlt.UL:=$ZLP.ZLE().POS().UL;
   __zlt.MIA:=$ZLP.ZLE().POS().MIA;
   __zlt.CZUM:=ZLP.ZLE().CZUM;
   __zlt.CB:=ZLP.CB;
   __zlt.PROJEKTY:=$ZLP.PROJEKTY;
   __zlt.FV:={? ZLP.ZLE().UM().FV='T' || 'T' || 'N' ?};

:obsługa wtyczki
   {? Plugin.run('FPACZ_UWAGI_001')<>''
   ||
      __zlt.U+= ($Plugin.run('FPACZ_UWAGI_001'))()
   ?};

   _cena:=_rab:=0;
   _tap:='';
   {? _licz=1
   ||
::    wart P - podstawowa , D - dodatkowa (obecnie dzierzawa)
::    (zwiazane z tym ze dwie poz. faktury  do jednej pozycji zlecenia)
      __zlt.R:='P';
      _typ_zl:=exec('z_typcen','umowy_zlecenia',ZLP.ref());

      {? ZLP.M_R=null
      ||
         __zlt.M:=$ZLP.MJ;

::       faktura wg jm lub m3
         {? _kstfa=3
         ||
            UMO.JM:=exec('par_m3','jm');
            __zlt.JM:=$UMO.JM;

            _obj:=exec('przel','jm',ZLP.MJ,UMO.JM,ZLP.MJ().J);
            _dokl:=exec('jaka_dok_mjm','jm',ZLP.MJ,UMO.JM,ZLP.MJ().J);
            roundmet(BEER.MDOKL);
            __zlt.IL:={? _obj>0 || (ZLP.IL/_obj)$_dokl || 0 ?};
            roundmet(5)
         ||
            UMO.JM:=ZLP.MJ().J;
            __zlt.JM:=$UMO.JM;

            __zlt.IL:=ZLP.IL
         ?};

::       cena pobierana jest z cennikow gdy _a[1]=0
         {? _a[1]=0
         ||
            _params:=exec('tar_cenm_a','ceny');
            _params.TAR:=ZLP.ZLE().TAR;
            _params.M:=ZLP.MJ;
            _params.WAL:=ZLP.WAL;
            _params.JM:=UMO.JM;
            _params.D:=ZLP.DW;
            _params.CNR:=_typ_zl;
            _params.BRT:=ZLP.CB;
            _params.PL:={? _c & FPACZ.TYPYSP().PAR='T' || FPACZ.TYPYSP().PLATNOSC || ZLP.KH().PLATNOSC ?};
            {? ZLP.KH().RAB_TYP<>'' || _params.RAB_TYP:=KH.RAB_TYP ?};
            _tar:=exec('tar_cenm','ceny',_params);
            _cena:=_tar[1];
            _rab:=_tar[2];
            _tap:=_tar[3]
         ||
            _cena:=_a[1];
            _rab:=_a[2];
            _tap:=_a[3]
         ?}
      ||
::       fakturuj jako
         __zlt.M:=$ZLP.M_R;
         __zlt.JM:=$ZLP.M_R().J;
         __zlt.IL:=ZLP.ILR;

::       cena
         {? _a[1]=0
         ||
            {? ZLP.C_R=0
            ||
               _params:=exec('tar_cenm_a','ceny');
               _params.TAR:=ZLP.ZLE().TAR;
               _params.M:=ZLP.M_R;
               _params.WAL:=ZLP.WAL;
               _params.JM:=ZLP.M_R().J;
               _params.D:=ZLP.DW;
               _params.CNR:=_typ_zl;
               _params.BRT:=ZLP.CB;
               _params.PL:={? _c & FPACZ.TYPYSP().PAR='T' || FPACZ.TYPYSP().PLATNOSC || ZLP.KH().PLATNOSC ?};
               {? ZLP.KH().RAB_TYP<>'' || _params.RAB_TYP:=KH.RAB_TYP ?};
               _tar:=exec('tar_cenm','ceny',_params);
               _cena:=_tar[1];
               _rab:=_tar[2];
               _tap:=_tar[3]
            ||
               _cena:=ZLP.C_R
            ?}
         ||
            _cena:=_a[1];
            _rab:=_a[2];
            _tap:=_a[3]
         ?}
      ?};
      __zlt.C:=_cena;
      __zlt.TAP:=_tap;
      _wart_one:=__zlt.IL*__zlt.C
   ||
::    dodatek
      __zlt.R:='D';
      __zlt.M:=$ZLP.M_D;
      __zlt.JM:=$ZLP.M_D().J;
      {? ZLP.ILD>0
      ||
         __zlt.IL:=ZLP.ILD;
         {? ZLP.C_D>0
         ||
            _cena:=ZLP.C_D
         ||
            _params:=exec('tar_cenm_a','ceny');
            _params.TAR:=ZLP.ZLE().TAR;
            _params.M:=ZLP.M_D;
            _params.WAL:=ZLP.WAL;
            _params.JM:=ZLP.M_D().J;
            _params.D:=ZLP.DW;
            _params.CNR:=_typ_zl;
            _params.BRT:=ZLP.CB;
            _params.PL:={? _c & FPACZ.TYPYSP().PAR='T' || FPACZ.TYPYSP().PLATNOSC || ZLP.KH().PLATNOSC ?};
            {? ZLP.KH().RAB_TYP<>'' || _params.RAB_TYP:=KH.RAB_TYP ?};
            _tar:=exec('tar_cenm','ceny',_params);
            _cena:=_tar[1];
            _rab:=_tar[2];
            _tap:=_tar[3]
         ?}
      |? ZLP.PRD>0
      ||
         __zlt.IL:=1;
         _cena:=(_wart_one*ZLP.PRD/100)$2
      ?};
      __zlt.C:=_cena;
      __zlt.TAP:=_tap
   ?};
   {? exec('get','#params',100117,2)='T' || __zlt.RAB:=_rab ?};
   {? var_pres('_tar')>100 || &_tar ?};

   _fas:=ZLP.ZLE().FAS().KOD;

   {? (__zlt.ODD<>date(0,0,0) | __zlt.DOD<>date(0,0,0))
   ||
      _okr:=FZL.OKR_NR(_fas,ZLP.DW);
      {? __zlt.ODD<>date(0,0,0)
      || _odd:=__zlt.ODD
      || _odd:=exec('okr_data','umowy_wspolne',1,_fas,_okr,ZLP.DW~1)
      ?};

      {? __zlt.DOD<>date(0,0,0)
      || _dod:=__zlt.DOD
      || _dod:=exec('okr_data','umowy_wspolne',3,_fas,_okr,ZLP.DW~1)
      ?};
      _cen1:=__zlt.C;
      UMO.JM2:=exec('par_m3','jm');
      _il:=__zlt.IL;
      __zlt.IL:=exec('obl_cenc','umowy_faktury',_fas,_odd,_dod,_il,_okr,'i')$2
   ?};

   _brak:='';
   _usluga:={? _licz=1 || 'dla usługi podstawowej'@ || 'dla dodatku'@ ?};
   {? __zlt.C=0 & __zlt.IL=0
   || _brak:='nieuzupełniona ilość oraz cena'@
   |? __zlt.C>0 & __zlt.IL=0
   || _brak:='nieuzupełniona ilość'@
   |? __zlt.C=0 & __zlt.IL>0
   || _brak:='nieuzupełniona cena'@
   ?};
   {? _brak<>''
   ||
      _str:='Kontrahent: %1, %2 %3 - pozycja nie została dodana.'@[__zlt.KHK,_brak,_usluga];
      {? _b=1
      || __cq.add(_str,2)
      || exec('memo_add','umowy_faktury',_str)
      ?};
      _wyn-=1
   ||
      _wyn+=1
   ?};
   {? __zlt.C>0 & __zlt.IL>0 || __zlt.add() ?}
!};
_wyn


\kst_fa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: rodzaj fakturowania
::   WE: _a - czy korzystac z ZLP
::  OLD: \kst_fa/um.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
_wyn:=1;
{? _a=1
||
   {? ZLP.ZLE().UP<>null & ZLP.ZLE().CZUM='T'
   || {? ZLP.ZLE().UP().RFAK=3 || _wyn:=3 || _wyn:=2 ?}
   || {? ZLP.RFAK=3 || _wyn:=3 || _wyn:=2  ?}
   ?}
?};
_wyn


\obl_cenc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: oblicza czesciowa cene
::   WE: _a - sposob fakturowania np. 'M'
::       _b - od daty
::       _c - do daty
::       _d - cena lub ilosc
::       _e - okres fakturowania
::       _f - 'c' -cena , 'i' - ilosc
::   WY: zmieniona cena
::  OLD: \obl_cenc/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=_d;
_ile:=exec('ile_okr','umowy_faktury',_a);

{? (_a='K' | _a='P' | _a='R') & _f='i' || _ile:=1
|? _a='K' || _ile:=3
|? _a='P' || _ile:=6
|? _a='R' || _ile:=12
?};

{? _a='R'        || _wsp:=date(_c~1,12,0)-date(_b~1,1,1)+1
|? _a='P' & _e=1 || _wsp:=date(_c~1,6,0)-date(_b~1,1,1)+1
|? _a='P' & _e=2 || _wsp:=date(_c~1,12,0)-date(_b~1,6,1)+1
|? _a='K' & _e=1 || _wsp:=date(_c~1,3,0)-date(_b~1,1,1)+1
|? _a='K' & _e=2 || _wsp:=date(_c~1,6,0)-date(_b~1,4,1)+1
|? _a='K' & _e=3 || _wsp:=date(_c~1,9,0)-date(_b~1,7,1)+1
|? _a='K' & _e=4 || _wsp:=date(_c~1,12,0)-date(_b~1,10,1)+1
|| _ile:=1;
   _wsp:=date(_c~1,_c~2,0)-date(_b~1,_b~2,1)+1
?};

_wyn:={? _wsp<>0 || (((_c-_b)+1)/_wsp)*(_d*_ile) || 0 ?};

_wyn


\ile_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [--.--]
:: OPIS: zwraca ile jest okresów dla podanego sposobu fakutrowania
::   WE: _a - sposób fakturowania np. 'M'
::   WY:
::  OLD: \ile_okr/funkc_zl.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? _a='M' || _wyn:=12
|? _a='K' || _wyn:=4
|? _a='P' || _wyn:=2
|? _a='R' || _wyn:=1
?};
_wyn


\memo_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: dodanie bledu na podstawie generacji -> FPACZ, sprawdza czy taki blad byl juz wpisywany.
::   WE: _a - tekst bledu
::       [_b] INTEGER - Lp: jak nie podany to zostaje wyznaczone na podsatawie ostatniej pozycji błędu
::  OLD: \memo_add/um.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a<>''
||
::   {? FPACZ.memo_get(,'MEMO') & ~FPACZ.memo_key(_a,1,'MEMO')
::   || _memo:=FPACZ.memo_get('a','MEMO');
::      {? _memo.is_open
::      || fwrite(_memo,_a);
::         FPACZ.memo_put(_memo,'MEMO')
::      || FPACZ.memo_put(_a,'MEMO')
::      ?}
::   ?};
   _lp:={? var_press('_b')=type_of(0) || _b || -1 ?};
   {? ~FPACZLOG.find_tab(1,'OPIS',,'=',_a,'FPACZ',,'=',FPACZ.ref())
   || FPACZLOG.blank();
      FPACZLOG.FPACZ:=FPACZ.ref();
      FPACZLOG.LP:={? _lp>=0 || _lp || exec('fpacz_log_lp','umowy_faktury') ?};
      FPACZLOG.OPIS:=_a;
      FPACZLOG.add()
   ?}
?};
''


\zazn_biez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: zaznacza biezaca pozycje zlecenia
::   WE: _a -  1 kontrola zaznaczanej pozycji - sprawdzanie zlp.zle().usl().m , zlp.zle().usl().jm().m
::       oraz sprawdzenie czy jeżeli zlecenie ma być fakturowane wg realizacji to zostało zrealizowane
:: _b -  1 wylaczenie komunikatow
::  OLD: \zazn_biez/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<1 || _a:=0 ?};
{? _<2 || _b:=0 ?};
{? ZLP.r_lock(1,1,1)
|| _put:=1;
   {? ZLP.TEN='' | ZLP.TEN=' '
   ||
::    sprawdzenie jednostki w zleceniu
      {? (_a=1 & ZLP.JM<>null) | (_a=1 & ZLP.M_R<>null) | (_a=1 & ZLP.M_D<>null) | _a=0
      ||
::       sprawdzenie czy zlecenie jest zrealizowane
         _typ_zl:=exec('z_typcen','umowy_zlecenia',ZLP.ref);
         {? (((_typ_zl=1 & ZLP.SR='Z') | _typ_zl>1 ) & _a=1) | _a=0
         || ZLP.TEN:='*';
            ZLP.USER:=20+username
         || {? _b=0
            || FUN.info('Pozycja zgłoszenia nie jest zrealizowana.'@)
            ?}
         ?}
      ||
         {? _b=0
         || FUN.info('Nieuzupełniona jednostka w pozycji zgłoszenia.'@)
         ?}
      ?}
   || {? 20+username=ZLP.USER
      || ZLP.TEN:='';
         ZLP.USER:=''
      || _put:=0;
         FUN.info('Dokument obługuje użytkownik %1.'@[ZLP.USER])
      ?}
   ?};
   {? _put || ZLP.put() ?};
   ZLP.r_unlock()
||
   {? FUN.ask('Dokument obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@) & ZLP.r_lock(1,,1)
   || ZLP.r_unlock()
   ?}
?};
''


\rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Formuła na wartość parametru RODZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Wybór rodzaju paczki faktur'@,,'Z &umowy'@,'Ze zgłoszenia &jednorazowego'@);
{? _choice=1
|| 'U'
|? _choice=2
|| 'Z'
|| ~~
?}

\tytul_naglowka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [19.42]
:: OPIS: Formuła na wybór przezaczenia paczki
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TAB_N');
_str:=Plugin.run('FPACZ_WYDR_001') +'#';

_licznik:=0;
TAB_N:=tab_tmp(1,'NAZ','STRING[30]','NAZ');

{!|? +_str |!
   {? 1+(_licznik-_str)='#'
   ||
      _licznik-_str;
      TAB_N.NAZ:=_licznik+_str;
      TAB_N.add();
      _str:=(_licznik+1)-_str;
      _licznik:=0
   ||
      _licznik+=1
   ?}
!};

_wer:=TAB_N.mk_sel(,,1);
TAB_N.win_sel(_wer);
TAB_N.win_act(_wer,0,'Formuła','&Wybierz'@@,,,"sel_exit()",,1,,,,'W');
{? TAB_N.select()
|| FPACZ.TN:=TAB_N.NAZ
?}


\red_naglowka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [19.42]
:: OPIS: Formuła po redagowaniu FPACZ.TN
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TAB_N');
_str:=Plugin.run('FPACZ_WYDR_001') +'#';

_licznik:=0;
TAB_N:=tab_tmp(1,'NAZ','STRING[30]','NAZ');

{!|? +_str |!
   {? 1+(_licznik-_str)='#'
   ||
      _licznik-_str;
      TAB_N.NAZ:=_licznik+_str;
      TAB_N.add();
      _str:=(_licznik+1)-_str;
      _licznik:=0
   ||
      _licznik+=1
   ?}
!};

TAB_N.first();
_war:=0;
{!|?
   {? TAB_N.NAZ=FPACZ.TN
   ||
      _war:=1
   ?};
   TAB_N.next()
!};
{? FPACZ.TN=''
||
   _war:=1
?};
{? ~ _war
||
   FUN.info('Wybierz pozycję ze słownika'@)
?};
_war


\fpacz_log_lp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Wyznacza nowy numer porządkowy (lp) błędu do danej paczki faktur.
::       UWAGA: Działa na aktualnym buforze tabeli FPACZ.
::   WY: numer lp
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
FPACZLOG.cntx_psh();
_msk:=FPACZ.ODDZ+($(FPACZ.AR)+2);
{? (FPACZLOG.name()+3)<>_msk || FPACZLOG.use('fplog'+_msk) ?};
FPACZLOG.index('LP');
FPACZLOG.prefix(FPACZ.ref());
{? FPACZLOG.last()
|| _res:=FPACZLOG.LP+1
?};
FPACZLOG.cntx_pop();
_res


\fpacz_log_build
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Buduje rekordy błędów generacji (FPACZLOG) na podstawie pola FPACZ.MEMO.
::       Uruchamiana jeżeli pole MEMO jest wypełnione i paczka faktur nie ma wygenerowanych rekordów FPACZLOG.
::   WE: FPACZ.ref() - ref paczki faktur
::----------------------------------------------------------------------------------------------------------------------
FPACZ.cntx_psh();
FPACZ.clear();
{? FPACZ.seek(_a)
||
:: Sprawdzam czy wymagane przeniesienie danych z memo do tabeli FPACZLOG
   {? FPACZ.memo_line('MEMO')<>'\n'
   || FPACZLOG.cntx_psh();
      _msk:=FPACZ.ODDZ+($(FPACZ.AR)+2);
      {? (FPACZLOG.name()+3)<>_msk || FPACZLOG.use('fplog'+_msk) ?};
      FPACZLOG.index('LP');
      FPACZLOG.prefix(FPACZ.ref());
      {? ~FPACZLOG.first()
      || _lp:=1;
         {? var_press('_tmp')>100 || obj_del(_tmp)?};
         _tmp:=spli_str(FPACZ.memo_txt(,1,'MEMO'),'\n');
         _size:=obj_len(_tmp);
         {! _i:=1.._size
         |!
            exec('memo_add','umowy_faktury',_tmp[_i],_lp);
            _lp+=1
         !}
      ?};
      FPACZLOG.cntx_pop();
::    Jak przeniosłem dane to czyszczę pole memo
      FPACZ.memo_set('','MEMO');
      FPACZ.memo_put(,'MEMO')
   ?}
?};
FPACZ.cntx_pop();
~~


\fpacz_log_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Usuwa wszystkie błędy genearcji (rekordy FPACZLOG) dla podanej paczki faktur.
::   WE: FPACZ.ref()
::----------------------------------------------------------------------------------------------------------------------
FPACZ.cntx_psh();
FPACZ.clear();
{? FPACZ.seek(_a)
||
   FPACZLOG.cntx_psh();
   _msk:=FPACZ.ODDZ+($(FPACZ.AR)+2);
   {? (FPACZLOG.name()+3)<>_msk || FPACZLOG.use('fplog'+_msk) ?};
   FPACZLOG.index('LP');
   FPACZLOG.prefix(FPACZ.ref());
   {? FPACZLOG.first()
   || {!
      |?
         FPACZLOG.del()
      !}
   ?};
   FPACZLOG.cntx_pop()
?};
FPACZ.cntx_pop();
~~


\fpacz_pp_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Usunięcie FPACZZLT, FPACZFAP dotycząych paczki
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_NamesZLT:=FPACZZLT.names();
FPACZFAP.index('FPACZ');
FPACZFAP.prefix(FPACZ.ref());
_loop:=FPACZFAP.first();
{!
|? _loop
|!
   exec('zle_psh','open_tab');
   _NamesZLT.prefix('fpz'+(FPACZFAP.name()+3));
   _loop:=_NamesZLT.first();
   {!
   |? _loop
   |!
      FPACZZLT.use(_NamesZLT.NAME);
      FPACZZLT.index('FPACZFAP');
      FPACZZLT.prefix(FPACZFAP.ref());
      _loop:=FPACZZLT.first();
      {!
      |? _loop
      |!
         _loop:=FPACZZLT.del()
      !};
      _loop:=_NamesZLT.next()
   !};
   _loop:=FPACZFAP.del();
   exec('zle_pop','open_tab')
!}


\um_pp_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Usunięcie FPACZZLT, FPACZFAP dotycząych paczki
::   WE: _a - UM.ref()
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zle_psh','open_tab');
_NamesFAP:=FPACZFAP.names();
_NamesZLT:=FPACZZLT.names();
_loop:=_NamesFAP.first();
{!
|? _loop
|!
   FPACZFAP.use(_NamesFAP.NAME);
   FPACZFAP.index('UM');
   FPACZFAP.prefix(null(),_a);
   _loop:=FPACZFAP.first();
   {!
   |? _loop
   |!
      exec('zle_psh','open_tab');
      _NamesZLT.prefix('fpz'+(FPACZFAP.name()+3));
      _loop:=_NamesZLT.first();
      {!
      |? _loop
      |!
         FPACZZLT.use(_NamesZLT.NAME);
         FPACZZLT.index('FPACZFAP');
         FPACZZLT.prefix(FPACZFAP.ref());
         _loop:=FPACZZLT.first();
         {!
         |? _loop
         |!
            _loop:=FPACZZLT.del()
         !};
         _loop:=_NamesZLT.next()
      !};
      _loop:=FPACZFAP.del();
      exec('zle_pop','open_tab')
   !};
   _loop:=_NamesFAP.next()
!};
exec('zle_pop','open_tab')


\pacz_gen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: generowanie dokumentow dla paczki faktur
::   WE: [_a] - ref FAKS jezeli podany to zalozenie ze wszystko bedzie dodawane
::              do podanej faktury ... i ze cale __zlt i FPACZ dotyczy KH z faktury
::       [_b] - Ref odbiorcy lub null
::       [_c] - 0/1 wyświetlać komunikaty
::  OLD: \pacz_gen/um.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};
{? _>=2 || {? type_of(_b)<>7 || _b:=null ?} || _b:=null ?};
_message:={? var_pres('_c')=type_of(0) || _c || 1 ?};

_result:=0;

{? FPACZ.RODZ='Z'
|| HELP.WHERE:='J'
|| HELP.WHERE:='A'
?};

_pp:=params_get().pp;
_isService:=params_get().mp.isService();

_ok:=1;
_ask:='';
_blad:=0;
::  MaX Bledow krytycznych wstrzymujacych generacje
VAR_DEL.delete('__blk','__czy_gen_dok');
__blk:=0;
__czy_gen_dok:=0;

{? FPACZ.r_lock(1,1,1)
||
   {? FPACZ.IL<>0
   ||
      {? _message
      || FUN.info('Wygenerowano dokumenty sprzedaży.'
            '\nPonowna generacja niemożliwa.'@)
      ?};
      _ok:=0
   ?};
   {? _ok=1 || _ok:=exec('czy_z_ok','okresy',-2,_message) ?};
   {? _ok=1 & (FPACZ.DW~1<>ST.AR | FPACZ.DW~2<>ST.AM)
   ||
      {? _message
      ||
         FUN.info('Okres obrachunkowy jest niezgodny\n'
            'z datą wystawienia dokumentów.\nGeneracja niemożliwa.'@)
      ?};
      _ok:=0
   ?};
   {? _ok=1 & FPACZ.OD>FPACZ.DO
   ||
      {? _message
      ||
         FUN.info('Nieprawidłowe daty "od" "do" dla paczki faktur.'
            '\nGeneracja niemożliwa.'@)
      ?};
      _ok:=0
   ?};

   {? _ok=1 &  FPACZ.DRB='S' & exec('ps_65','rachunki')<>'T'
   ||
      {? _message
      ||
         FUN.info('Zaznaczono opcję subkonta dla paczki, a subkonta są wyłączone.'
            '\nGeneracja niemożliwa.'@)
      ?};
      _ok:=0
   ?};
   {? _ok=1
   ||
      FPACZLOG.cntx_psh();
      _msk:=FPACZ.ODDZ+($(FPACZ.AR)+2);
      {? (FPACZLOG.name()+3)<>_msk || FPACZLOG.use('fplog'+_msk) ?};
      FPACZLOG.clear();
      _user:=OPERATOR.USER().KOD;
      _str:='Generowano dnia: '+form(date)+' przez '+_user;
::    Czyszczę memo oraz rekordy błędów poprzedniej generacji (FPACZLOG)
      exec('fpacz_log_del','umowy_faktury',FPACZ.ref());
      FPACZ.memo_set('','MEMO');
      FPACZ.memo_put(,'MEMO');
      exec('memo_add','umowy_faktury',_str,_blad+1);

      {? ~exec('spr_faks','umowy_faktury',FPACZ.TYPYSP,FPACZ.DW)
      ||
         _blad+=1;
         exec('memo_add','umowy_faktury',
            'Ostrzeżenie - Istnieją dokumenty sprzedaży typu %1 z późniejszą datą.'@[FPACZ.TYPYSP().T],_blad+1)
      ?};

::    sprawdzenie czy sa wygenerowane zlecenia
::    zalozenie ze nie mozna wystawiac dokumentow
::    na przelomie roku

      _od:=FPACZ.OD;
      _do:=FPACZ.DO;
      HGEN.index('ODDZ');
      HGEN.prefix(FPACZ.ODDZ,FPACZ.OD~1);
      _hgen:=0;
      {? HGEN.first()
      ||
         {!
         |?
            {? HGEN.ST='T'
            ||
               _hgen:=1
            ?};
            HGEN.next() & (FPACZ.DO>HGEN.DO)
         !}
      ?};

      {? _hgen=1 & (FPACZ.DO<=HGEN.DO)
      ||
         exec('zlt_ini','umowy_faktury');

::       przygotowywanie danych do fakturowania
         _mies:=FPACZ.OD~2;

         {? (FPACZ.TERM='P' | FPACZ.TERM='A') & FPACZ.PL=null
         ||
            _blad+=1;
            exec('memo_add','umowy_faktury',
               'Ostrzeżenie - Nie określono sposobu płatności dla paczki.'@,_blad+1)
         ?};
         {? FPACZ.DW~2<>FPACZ.DS~2
         ||
            _blad+=1;
            exec('memo_add','umowy_faktury',
               'Ostrzeżenie - Data sprzedaży pochodzi z innego miesiąca niż data wystawienia.'@,_blad+1)
         ?};
         {? FPACZ.DW~1<>FPACZ.DS~1
         ||
            _blad+=1;
            exec('memo_add','umowy_faktury',
               'Ostrzeżenie - Data sprzedaży pochodzi z innego roku niż data wystawienia.'@,_blad+1)
         ?};
         {? FPACZ.TZ<>date(0,0,0) & (FPACZ.TZ$7)*'niedziela'
         ||
            exec('memo_add','umowy_faktury',
               'Ostrzeżenie - Termin płatności przypada na niedzielę.'@,_blad+1)
         ?};
         {? FPACZ.DS<>date(0,0,0) & (FPACZ.DS$7)*'niedziela'
         ||
            _blad+=1;
            exec('memo_add','umowy_faktury',
               'Ostrzeżenie - Data sprzedaży przypada na niedzielę.'@,_blad+1)
         ?};
         {? FPACZ.DW<>date(0,0,0) & (FPACZ.DW$7)*'niedziela'
         ||
            _blad+=1;
            exec('memo_add','umowy_faktury',
               'Ostrzeżenie - Data wystawienia przypada na niedzielę.'@,_blad+1)
         ?};

         {!
         |?
            exec('zlm_open','open_tab',FPACZ.ODDZ,2-$ST.AR,form(_mies,-2));
            _blad+=exec('pacz_ge2','umowy_faktury',,_b,_mies,_blad+1,_isService,_pp);
            _mies+=1;
            _mies<=FPACZ.DO~2
         !};

         __zlt.prefix();
         {? ~__zlt.first()
         ||
            _blad+=1;
            exec('memo_add','umowy_faktury',
               'Brak dokumentów spełniających kryterium paczki faktur.'@,_blad+1)
         ?};
         {? __blk || _ok:=exec('get','#params',100175,2)<>'T' ?};
         _ok:=_ok & __zlt.first();
         {? _blad>0
         ||
            FPACZ.STAT_GEN:=exec('stat_gen','umowy_faktury',1);
            FPACZ.put();
            {? _message & ~_isService
            ||
               FPACZLOG.cntx_psh();
               _msk:=FPACZ.ODDZ+($(FPACZ.AR)+2);
               {? (FPACZLOG.name()+3)<>_msk || FPACZLOG.use('fplog'+_msk) ?};
               FPACZLOG.index('LP');
               FPACZLOG.prefix(FPACZ.ref());
               _wer:={? _pp || 'WER_PP' || 'WER_KOM' ?};
               FPACZLOG.win_sel(_wer);
               FPACZLOG.actions_grayed(_wer,'');
               {? ~_ok || FPACZLOG.actions_grayed(_wer,'PG') ?};
               {? _pp<>2 || FPACZLOG.select(); _ok:=__czy_gen_dok ?};
               FPACZLOG.cntx_pop()
            ?}
         ||
            {? ~_ok
            ||
               FPACZ.STAT_GEN:=exec('stat_gen','umowy_faktury',0);
               FPACZ.put();
               {? _message & ~_isService
               ||
                  FUN.info('Brak dokumentów spełniających kryterium paczki faktur.'@)
               ?}
            ?}
         ?};
         {? _ok
         ||
            _result:=params_exec('wyst_dok','umowy_faktury',_a,_blad);
            exec('pacz_il','umowy_faktury',FPACZ.ref(),_result=0)
         ?}
      ||
         {? _message
         ||
            FUN.info('Nie wygenerowano zgłoszeń dla całego wybranego okresu fakturowania.'@)
         ?}
      ?};
      FPACZLOG.cntx_pop()
   ?};
   FPACZ.r_unlock()
||
   {? FUN.ask('Dokument obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@) & FPACZ.r_lock()
   ||
      FPACZ.r_unlock()
   ?}
?};
exec('zlm_open','open_tab',FPACZ.ODDZ,2-$ST.AR,form(ST.AM,-2));
exec('zlt_ini','umowy_faktury');
VAR_DEL.delete('__blk','__czy_gen_dok');
_result


\spr_faks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: sprawdzenie czy zostaly wystawione dokumenty sprzedaz
::       pozniej niz podana data w biezacym oddziale i biezacym roku
::   WE: _a - typ dokumentu sprzedazy
::       _b - data sprzedazy do sprawdzenia
::   WY: _wyn 1-jezeli nie ma dokumentow, 0-jezeli sa
::  OLD: \spr_faks/um.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
FAKS.cntx_psh();
_ndx:=FAKS.ndx_tmp('',,'T',,,'DW',,);
FAKS.index(_ndx);
FAKS.prefix(_a);
{? FAKS.last() & FAKS.DW>_b
|| _wyn:=0
?};
FAKS.ndx_drop(_ndx);
FAKS.cntx_pop();
_wyn


\pacz_ge2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: generowanie dokumentow dla paczki faktur
::   WY: _blad - zwraca czy wystapil blad - zapis do memo
::       [_b] - Ref odbiorcy lub null
::       _c - miesiąc
::       [_d] - aktualny numer porządkowy błędu, jak nie podany to liczy od 1
::       _e - 0/1 - wykonywane w serwisie
::       _f - 0/1/2
::  OLD: \pacz_ge2/um.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>7 || _b:=null ?} || _b:=null ?};
_am:=_c;
_lp:={? var_press('_d')=type_of(0) || _d || 1 ?};
{? _e || __CENY_CHK_UPR:=0 ?};
_pp:=_f;
:: wynik funkcji
_blad:=0;
:: __blk - 0-brak błędu lub błąd nieistotny, 1-błąd istotny przerywa generowanie jeśli formuła 100175='T'
{? var_pres('__blk')<=0 || __blk:=0 ?};
:: sprawdzenie czy wygenerowano zgłoszenia
_continue:=1;
_oddz:=FPACZ.ODDZ;
_ar:=FPACZ.OD~1;
HGEN.cntx_psh();
HGEN.index('ORM');
HGEN.prefix();
{? ~HGEN.find_key(_oddz,_ar,_am)
      |
   HGEN.ST='N'
||
   _blad+=1;_lp+=1;
   __blk:=1;
   exec('memo_add','umowy_faktury','Błąd - Nie wygenerowano zgłoszeń w okresie %1/%2.'@[$_am,$_ar],_lp)
?};
HGEN.cntx_pop();
{? _blad || return(_blad) ?};
:: ustawienie indeksu
{? FPACZ.RODZ='U' | FPACZ.RODZ='T'
||
:: paczka z umów
:: DRO_TODO_AWI: FPACZ.RODZ='T' - jaki to typ paczki faktur?
   {? exec('get','#params',100115,2)='N'
   ||
:: fakturować bez zgłoszenia jednorazowych
      ZLP.index('F_FPACZ');
      {? FPACZ.KH_OD<>null & FPACZ.KH_OD=FPACZ.KH_DO
      || ZLP.prefix('N','T',FPACZ.TYPYSP().FIS,FPACZ.FAS,FPACZ.WAL,'T',FPACZ.KH_OD)
      || ZLP.prefix('N','T',FPACZ.TYPYSP().FIS,FPACZ.FAS,FPACZ.WAL,'T')
      ?}
   ||
:: fakturować ze zgłoszeniami jednorazowymi
      ZLP.index('F_FPACZ1');
      {? FPACZ.KH_OD<>null & FPACZ.KH_OD=FPACZ.KH_DO
      || ZLP.prefix('N','T',FPACZ.TYPYSP().FIS,FPACZ.FAS,FPACZ.WAL,FPACZ.KH_OD)
      || ZLP.prefix('N','T',FPACZ.TYPYSP().FIS,FPACZ.FAS,FPACZ.WAL)
      ?}
   ?}

|? FPACZ.RODZ='Z'
||
:: paczka ze zgłoszeń jednorazowych
   {? FPACZ.FAS<>null
   ||
:: zgłoszenia dotyczące sposobu fakturowania FPACZ.FAS
      ZLP.index('F_FPACZ');
      {? FPACZ.KH_OD<>null & FPACZ.KH_OD=FPACZ.KH_DO
      || ZLP.prefix('N','T',FPACZ.TYPYSP().FIS,FPACZ.FAS,FPACZ.WAL,'N',FPACZ.KH_OD)
      || ZLP.prefix('N','T',FPACZ.TYPYSP().FIS,FPACZ.FAS,FPACZ.WAL,'N')
      ?}
   ||
:: sposób fakturowania nie istotny
      ZLP.index('F_FPACZ2');
      {? FPACZ.KH_OD<>null & FPACZ.KH_OD=FPACZ.KH_DO
      || ZLP.prefix('N','T',FPACZ.TYPYSP().FIS,FPACZ.WAL,'N',FPACZ.KH_OD)
      || ZLP.prefix('N','T',FPACZ.TYPYSP().FIS,FPACZ.WAL,'N')
      ?}
   ?}
?};
_size:=ZLP.size();
_licz:=0;
:: iteracja po zgłoszeniach
{? ZLP.first()
||
:: progress
   _licz:=0;
   _size:=ZLP.size();
   {!
   |?
::    czy z umowy
      _czum:=ZLP.ZLE().CZUM;
::    zgłoszenie
      _zgl:=
         ': '
         +{? _czum='N' || 'zgł.jedn. ' || 'zgł. ' ?}
         +exec('record','#to_string',ZLP.ref(),2);
::    _ok - 0-pomijać zgłoszenie, 1-uwzglęniać zgłoszenie
      _ok:=1;
::    _mies - miesiąc wykonania zgłoszenia
      _mies:=ZLP.DW$8;
::    progress
      _licz+=1;
      _prgs:=100*_licz/_size;
      progress(_prgs,'\nTrwa przetwarzanie (%1\%)\n'@[$int(_prgs)],'Przygotowanie do generowania dokumentów'@);

      {? exec('zlp_czy_anulowane','umowy_zlecenia')
      ||
::       pomijamy zgłoszenia anulowane
         ''
      |? ZLP.DW=date(0,0,0) & (FPACZ.RODZ<>'Z' | _pp<>1)
      ||
:: kontrola - data wykonania
         _blad+=1;_lp+=1;
         _ok:=0;
         exec('memo_add','umowy_faktury','Ostrzeżenie - nieuzupełniona data wykonano%1.'@[_zgl],_lp)

      |? (FPACZ.OD<=ZLP.DW & FPACZ.DO>=ZLP.DW | ZLP.DW=date(0,0,0) & FPACZ.RODZ='Z' & _pp=1)
            &
         ZLP.FAP=null
            &
         ZLP.ZLE().TYP='Z'
            &
         ZLP.ZLE().FAS().KOD<>'N'
      ||
:: zgłoszenie zawierające się w okresie paczki faktur
:: i zgłoszenie nie było fakturowane
:: i zgłoszenie zewnętrzne
:: i zgłoszenie przeznaczone do fakturowania
         _typ:=ZLP.ZLE().KH().TYP;
         _usluga:=ZLP.ZLE().USL;
         _grkh:=ZLP.ZLE().KH().GRKH;
         _umowa:=ZLP.ZLE().UM().SYM;
         _taryfa:=ZLP.ZLE().TAR;
         _kh:=ZLP.ZLE().KH().KOD;
         _kh_b:=__War_f('KH_DOD','B',ZLP.ZLE().KH);
         _zlec:=ZLP.ZLE().SYM;
         {? _kh=''
         ||
            _blad+=1;_lp+=1;
            _ok:=0;
            exec('memo_add','umowy_faktury','Ostrzeżenie - brak kontrahenta%1.'@[_zgl],_lp)

         |? _kh_b='B'
         ||
            _blad+=1;_lp+=1;
            _ok:=0;
            exec('memo_add','umowy_faktury','Ostrzeżenie - kontrahent %1 jest zablokowany%2.'@[_kh,_zgl],_lp)

         |? _czum='N' & ZLP.STAT_REJ='N'
         ||
            _blad+=1;_lp+=1;
            _ok:=0;
            exec('memo_add','umowy_faktury','Ostrzeżenie - nie zakończono rejestracji%1.'@[_zgl],_lp)

         |? ZLP.SR='X'
         ||
:: zgłoszenie anulowano
            _blad+=1;_lp+=1;
            _ok:=0;
            exec('memo_add','umowy_faktury','Ostrzeżenie - zrezygnowano z realizacji%1.'@[_zgl],_lp)

         |? ZLP.MJ<>null & ZLP.RFAK=3
         ||
:: kontrola - jm
            exec('zlp_umo','umowy_zlecenia');
            {? UMO.IL2=0
            ||
               _blad+=1;_lp+=1;
               _ok:=0;
               exec('memo_add','umowy_faktury','Ostrzeżenie - brak przelicznika jednostek na [%1] dla usługi %2'
                  '%3.'@[UMO.JM2().KOD,ZLP.MJ().N,_zgl],_lp)
            ?}

         |? _taryfa=null
         ||
:: kontrola - cennik
            _blad+=1;_lp+=1;
            _ok:=0;
            exec('memo_add','umowy_faktury','Ostrzeżenie - brak cennika: %1.'@[_zgl],_lp)
         ?};
:: kontrola - rodzaj platnosci
         {? _ok=1 & FPACZ.TERM='D' & FPACZ.PAR_PL='N' & ZLP.ZLE().KH().PLATNOSC=null()
         ||
            _blad+=1;_lp+=1;
            _ok:=0;
            __blk+=1;
            exec('memo_add','umowy_faktury','Błąd - brak sposobu płatności dla kontrahenta %1%2.'@[_kh,_zgl],_lp)
         ?};
:: kontrola - subkonta kontrahenta
         {? _ok=1 & FPACZ.DRB='S' & exec('ps_65','rachunki')='T'
         ||
            SKID_RBK.index('TAB');
            SKID_RBK.prefix(RACHBANK.FIRMA,REF.FIRMA().SYMBOL+'KH2',REF.FIRMA().SYMBOL+'KH2',#ZLP.ZLE().KH);
            {? ~SKID_RBK.first()
            ||
               _blad+=1;_lp+=1;
               __blk+=1;
               _ok:=0;
               exec('memo_add','umowy_faktury','Błąd - brak subkonta dla kontrahenta %1%2.'@[_kh,_zgl],_lp)
            ?}
         ?};
:: kontrola - rabatu
         _rab_nag:=exec('rab_nag','umowy_faktury',KH.ref());
         {? _ok=1 & FPACZ.RAB_NAL='S' & _rab_nag>99.99
         ||
            _blad+=1;_lp+=1;
            __blk+=1;
            _ok:=0;
            exec('memo_add','umowy_faktury',
               'Błąd - nieprawidłowy rabat %1\% (rabat z paczki %2\% + rabat kontrahenta %3 %4\%).'@[
               form(_rab_nag,,2),form(FPACZ.RAB,,2),KH.SKR,form(_rab_nag-FPACZ.RAB,,2)])
         ?};

:: wypełnienie __zlt
         {? (_ok & (_typ=FPACZ.TYP | FPACZ.TYP=''))
         ||
:: filtr - typ kontrahenta - niewykorzystywane
            {? FPACZ.USL=null | FPACZ.USL=_usluga
            ||
:: filtr - rodzaj usługi
               {? FPACZ.TAR=null | FPACZ.TAR=_taryfa
               ||
:: filtr - cennik
                  {? (FPACZ.GRKH=null | FPACZ.GRKH=_grkh)
                        &
                     (FPACZ.SLU=null | exec('spr_slo','umowy_faktury',FPACZ.SLU,_kh))
                  ||
:: filtr - grupa kontrahenta i słownik użytkownika
                     {?
                        (FPACZ.UM_OD=null & FPACZ.UM_DO=null)
                           |
                        (
                         _umowa<>''
                           &
                         {? FPACZ.UM_OD<>null || FPACZ.UM_OD().SYM<=_umowa || 1 ?}
                           &
                         {? FPACZ.UM_DO<>null || FPACZ.UM_DO().SYM>=_umowa || 1 ?}
                        )
:: filtr - zakres umów
                     ||
                        {?
                           (FPACZ.KH_OD=null & FPACZ.KH_DO=null)
                              |
                           (
                            _kh<>''
                              &
                            {? FPACZ.KH_OD<>null || FPACZ.KH_OD().KOD<=_kh || 1 ?}
                              &
                            {? FPACZ.KH_DO<>null || FPACZ.KH_DO().KOD>=_kh || 1 ?}
                           )
                              &
                           ( _b=null | ZLP.KH_ODB=_b )
                        ||
:: filtr - zakres kontrahentów
                           {?
                              (ZLP.ZLE().TFAK='T' &  (ZLP.SR='Z' | _pp=1))
                                 |
                               ZLP.ZLE().TFAK='N'
                                 |
                              (ZLP.ZLE().UM<>null & (ZLP.ILD>0 | ZLP.PRD>0) & ZLP.C_D<>0 & ZLP.M_D<>null)
                           ||
:: zgłoszenie wymagana realizacji i jest zrealizowane
:: lub zgłoszenie nie wymaga realizacji
:: lub
::    zgłoszenie z umowy
::    i ilość dodatku większa od zera lub procent usługi podstawowej większy od zera
::    i cena dodatku różna od zera
::    i podana usługa dodatku
                              {? ZLP.IL<>0 | ZLP.ILR<>0
                              ||
:: wyznaczenie ceny
                                 _tar:=exec('ustal_cen','umowy_faktury');
                                 {? _tar[1]<>0
                                 ||
:: __zlt - add
                                    exec('uzup_tmp_1','umowy_faktury',_tar,0)
                                 ||
                                    _blad+=1;_lp+=1
                                 ?};
                                 &_tar
                              ||
                                 _blad+=1;_lp+=1;
                                 exec('memo_add','umowy_faktury','Ostrzeżenie - zerowa ilość%1.'@[_zlg],_lp)
                              ?}
                           ||
                              _blad+=1;_lp+=1;
                              exec('memo_add','umowy_faktury','Ostrzeżenie - niezrealizowane zgłoszenie%1.'@[_zgl],_lp)
                           ?}
                        ?}
                     ?}
                  ?}
               ?}
            ?}

         |? ZLP.ZLE().KH().TYP=''
         ||
            _blad+=1;_lp+=1;
            exec('memo_add','umowy_faktury','Ostrzeżenie - kontrahent %1 nie ma wypełnionego typu%2.'@[_kh,_zgl],_lp)
         ?}
      ?};
      ZLP.next()
   !};
   prgs_clr();
   echo()
?};
ZLP.ndx_drop();
{? _e || VAR_DEL.delete('__CENY_CHK_UPR') ?};
_blad


\rab_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Rabat nagłówkowy w procentach przed wywołaniem funkcji należy ustawić bufor FPACZ
::   WE: _a - KH.ref()
::   WY: procent rabatu
::----------------------------------------------------------------------------------------------------------------------
_rab_nal:=FPACZ.RAB_NAL;
{? _rab_nal='P' || FPACZ.RAB
|? _rab_nal='K' || exec('kh_dod_ini','kontrahent',_a,0); KH_DOD.RAB
|? _rab_nal='S' || exec('kh_dod_ini','kontrahent',_a,0); KH_DOD.RAB + FPACZ.RAB
|| 0
?}


\spr_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: sprawdza czy podany rekord jest przypisany do danego slownika
::   WE: _a - slownik uzytkownika np SLO.ref()
::       _b - kod slo
::   WY: _wyn 0/1 czy jest w slowniku
::  OLD: \spr_slo/um.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
SLO.cntx_psh();
SLO.index('SL');
SLO.prefix(_a);
{? SLO.find_key(_b)
|| _wyn:=1
?};
SLO.cntx_pop();
_wyn


\ustal_cen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: ustala cene dla biezacej pozycji zlecenia,  wywolywane z pacz_ge2
::       jesli brak cen to ZLP nie bedzie fakturowane
::   WY: zwraca liczbe (+) jezeli sa ceny lub 0 i zapisuje blad do memo jezeli ceny nie zostana znalezione
::  OLD: \ustal_cen/um.fml
::----------------------------------------------------------------------------------------------------------------------
_kstfa:=exec('kst_fa','umowy_faktury',1);

_wyn:=obj_new(3);
_wyn[1]:=_wyn[2]:=0;
_wyn[3]:='';

_typ_zl:=exec('z_typcen','umowy_zlecenia',ZLP.ref());
{? _typ_zl=-1
||
   exec('memo_add','umowy_faktury',
      'Nieznany typ zgłoszenia %1'@[ZLP.ZLE().SYM])

|? _typ_zl=-2
||
   exec('memo_add','umowy_faktury',
      'Brak określonego typu fakturowania %1'@[ZLP.ZLE().SYM])
||
   {? ZLP.M_R=null
   ||
::    cena dla uslugi podstawowej
::    najpierw sprawdza czy jest wpisana cena reczna
      {? ZLP.C=0
      ||
         _params:=exec('tar_cenm_a','ceny');
         _params.TAR:=ZLE.TAR;
         _params.M:=ZLP.MJ;
         _params.WAL:=ZLP.WAL;
         _params.D:=ZLP.DW;
         _params.BRT:=ZLP.CB;
         _params.PL:={? FPACZ.TYPYSP().PAR='T' || FPACZ.TYPYSP().PLATNOSC || ZLP.KH().PLATNOSC ?};
         {? ZLP.KH().RAB_TYP<>'' || _params.RAB_TYP:=KH.RAB_TYP ?};
         {? _kstfa=3
         ||
            _params.JM:=exec('par_m3','jm');
            _tar:=exec('tar_cenm','ceny',_params)
         ||
            _params.JM:=ZLP.MJ().J;
            _tar:=exec('tar_cenm','ceny',_params)
         ?};
         _jm:=exec('FindAndGet','#table',JM,_params.JM,,"JM.KOD",'');
         {? +_jm || _jm:=' - '+_jm ?};
         _wyn[1]:=_tar[1];
         _wyn[2]:=_tar[2];
         _wyn[3]:=_tar[3];
         {? _wyn[1]=0
         ||
            exec('memo_add','umowy_faktury','Brak ceny dla taryfy %1 - %2%3 dnia %4 kontrah: %5'@[ZLP.ZLE().TAR().KOD
               ,ZLP.MJ().KTM,_jm,form(ZLP.DW),ZLP.ZLE().KH().KOD])
         ?}
      ||
         _wyn[1]:=ZLP.C
      ?}

   |? ZLP.M_R<>null
   ||
::    cena dla fakturuj jako
      {? ZLP.C_R=0
      ||
::       najpierw pobiera cene reczna a pozniej zaczyna szukac w cennkach
         _params:=exec('tar_cenm_a','ceny');
         _params.TAR:=ZLE.TAR;
         _params.M:=ZLP.M_R;
         _params.WAL:=ZLP.WAL;
         _params.JM:=ZLP.M_R().J;
         _params.D:=ZLP.DW;
         _params.BRT:=ZLP.CB;
         _params.PL:={? FPACZ.TYPYSP().PAR='T' || FPACZ.TYPYSP().PLATNOSC || ZLP.KH().PLATNOSC ?};
         {? ZLP.KH().RAB_TYP<>'' || _params.RAB_TYP:=KH.RAB_TYP ?};
         _tar:=exec('tar_cenm','ceny',_params);
         _wyn[1]:=_tar[1];
         _wyn[2]:=_tar[2];
         _wyn[3]:=_tar[3];
         {? _wyn[1]=0
         ||
            exec('memo_add','umowy_faktury',
               'Brak ceny w pozycji zgłoszenia dla usługi %1 dnia %2'
               ' szukano w taryfie: %3 kontrah: %4'@[ZLP.M_R().KTM,form(ZLP.DW),ZLP.ZLE().TAR().KOD,ZLP.ZLE().KH().KOD])
         ?}
      ||
         _wyn[1]:=ZLP.C_R
      ?}
   ?}
?};
_wyn


\uzup_tmp_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: uzupelnia rekord w tabeli __zlt - pomocnicza tabela przechowujaca wartosci z ZLP
::       na podstawie biezacej wartosci bufora ZLP
::       wywolywana w wystawianiu paczki faktur oraz recznym fakturowaniu zlecen
::   WE: [_a] - cena+rabat dla danego ZLP ... jezeli (0) to szuka jezeli > to wpisuje podana
::       [_b] - czy wyswietlac komunikaty (domyslnie 1-tak/0-dodaje do memo)
::       [_c] - 0-reczne fakturowanie pozycji zlecen, 1-paczki faktur
::   WY: 0/1 czy zafakturowano
::  OLD: \uzup_tmp/um.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<100 || _a:=obj_new(2); _a[1]:=_a[2]:=0 ?} || _a:=obj_new(2); _a[1]:=_a[2]:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};

_kstfa:=exec('kst_fa','umowy_faktury',1);

_wyn:=0;
:: wart 1 pozycji
_watr_one:=0;

_od:=1;

{? ZLP.M_D<>null & (ZLP.ILD>0 | ZLP.PRD>0)
|| _ile:=2
|| _ile:=1
?};

{! _licz:=_od.._ile
|!
   __zlt.blank();
   __zlt.DW:=ZLP.DW;
   __zlt.SR:=ZLP.SR;
   __zlt.ZLP_REF:=$ZLP.ref();
   __zlt.FAS:=$ZLP.ZLE().FAS;
   __zlt.TAR:=$ZLP.ZLE().TAR;
   __zlt.KHK:=ZLP.ZLE().KH().KOD;
:: dodaje kod dla zapewnienia kolejnosci
   __zlt.NAZ:=ZLP.ZLE().KH().NAZ+'|'+ZLP.ZLE().KH().KOD;
   __zlt.NAZS:=(ZLP.ZLE().KH().NAZ-8)+ZLP.ZLE().KH().KOD;
   __zlt.GRKH:=$ZLP.ZLE().KH().GRKH;
   __zlt.UMS:=ZLP.ZLE().UM().SYM;
   __zlt.ZLES:=ZLP.ZLE().SYM;
   __zlt.VAT:=ZLP.ZLE().KH().TYP;
   __zlt.USL:=$ZLP.ZLE().USL;
   __zlt.U:=ZLP.U;
   __zlt.ODD:=ZLP.ODD;
   __zlt.DOD:=ZLP.DOD;
   __zlt.KH_ODB:=$ZLP.KH_ODB;
   __zlt.WAL:=$ZLP.WAL;
   __zlt.POS:=$ZLP.ZLE().POS;
   __zlt.UL:=$ZLP.ZLE().POS().UL;
   __zlt.MIA:=$ZLP.ZLE().POS().MIA;
   __zlt.CZUM:=ZLP.ZLE().CZUM;
   __zlt.CB:=ZLP.CB;
   __zlt.PL:={? _c || {? ZLP.ZLE().CZUM='T' || $ZLP.ZLE().UM().PL || $ZLP.PL ?} || '' ?};
   __zlt.PROJEKTY:=$ZLP.PROJEKTY;
   __zlt.FV:={? ZLP.ZLE().UM().FV='T' || 'T' || 'N' ?};

:obsługa wtyczki
   {? type_of(_formula:=($Plugin.run('FPACZ_UWAGI_001'))())=type_of('') & _formula<>''
   ||
      __zlt.U+=_formula
   ?};
   _cena:=_rab:=0;
   _tap:='';
   {? _licz=1
   ||
::    wart P - podstawowa , D - dodatkowa (obecnie dzierzawa)
::    (zwiazane z tym ze dwie poz. faktury  do jednej pozycji zlecenia)
      __zlt.R:='P';
      _typ_zl:=exec('z_typcen','umowy_zlecenia',ZLP.ref());

      {? ZLP.M_R=null
      ||
         __zlt.M:=$ZLP.MJ;

::       faktura wg jm lub m3
         {? _kstfa=3
         ||
            UMO.JM:=exec('par_m3','jm');
            __zlt.JM:=$UMO.JM;

            _obj:=exec('przel','jm',ZLP.MJ,UMO.JM,ZLP.MJ().J);
            _dokl:=exec('jaka_dok_mjm','jm',ZLP.MJ,UMO.JM,ZLP.MJ().J);
            roundmet(BEER.MDOKL);
            __zlt.IL:={? _obj>0 || (ZLP.IL/_obj)$_dokl || 0 ?};
            roundmet(5)
         ||
            UMO.JM:=ZLP.MJ().J;
            __zlt.JM:=$UMO.JM;

            __zlt.IL:=ZLP.IL
         ?};

::       cena pobierana jest z cennikow gdy _a[1]=0
         {? _a[1]=0
         ||
            _params:=exec('tar_cenm_a','ceny');
            _params.TAR:=ZLP.ZLE().TAR;
            _params.M:=ZLP.MJ;
            _params.WAL:=ZLP.WAL;
            _params.JM:=UMO.JM;
            _params.D:=ZLP.DW;
            _params.CNR:=_typ_zl;
            _params.BRT:=ZLP.CB;
            _params.PL:={? _c & FPACZ.TYPYSP().PAR='T' || FPACZ.TYPYSP().PLATNOSC || ZLP.KH().PLATNOSC ?};
            {? ZLP.KH().RAB_TYP<>'' || _params.RAB_TYP:=KH.RAB_TYP ?};
            _tar:=exec('tar_cenm','ceny',_params);
            _cena:=_tar[1];
            _rab:=_tar[2];
            _tap:=_tar[3]
         ||
            _cena:=_a[1];
            _rab:=_a[2];
            _tap:=_a[3]
         ?}
      ||
::       fakturuj jako
         __zlt.M:=$ZLP.M_R;
         __zlt.JM:=$ZLP.M_R().J;
         __zlt.IL:=ZLP.ILR;

::       cena
         {? _a[1]=0
         ||
            {? ZLP.C_R=0
            ||
               _params:=exec('tar_cenm_a','ceny');
               _params.TAR:=ZLP.ZLE().TAR;
               _params.M:=ZLP.M_R;
               _params.WAL:=ZLP.WAL;
               _params.JM:=ZLP.M_R().J;
               _params.D:=ZLP.DW;
               _params.CNR:=_typ_zl;
               _params.BRT:=ZLP.CB;
               _params.PL:={? _c & FPACZ.TYPYSP().PAR='T' || FPACZ.TYPYSP().PLATNOSC || ZLP.KH().PLATNOSC ?};
               {? ZLP.KH().RAB_TYP<>'' || _params.RAB_TYP:=KH.RAB_TYP ?};
               _tar:=exec('tar_cenm','ceny',_params);
               _cena:=_tar[1];
               _rab:=_tar[2];
               _tap:=_tar[3]
            ||
               _cena:=ZLP.C_R
            ?}
         ||
            _cena:=_a[1];
            _rab:=_a[2];
            _tap:=_a[3]
         ?}
      ?};
      __zlt.C:=_cena;
      __zlt.TAP:=_tap;
      _wart_one:=__zlt.IL*__zlt.C
   ||
::    dodatek
      __zlt.R:='D';
      __zlt.M:=$ZLP.M_D;
      __zlt.JM:=$ZLP.M_D().J;
      {? ZLP.ILD>0
      ||
         __zlt.IL:=ZLP.ILD;
         {? ZLP.C_D>0
         ||
            _cena:=ZLP.C_D
         ||
            _params:=exec('tar_cenm_a','ceny');
            _params.TAR:=ZLP.ZLE().TAR;
            _params.M:=ZLP.M_D;
            _params.WAL:=ZLP.WAL;
            _params.JM:=ZLP.M_D().J;
            _params.D:=ZLP.DW;
            _params.CNR:=_typ_zl;
            _params.BRT:=ZLP.CB;
            _params.PL:={? _c & FPACZ.TYPYSP().PAR='T' || FPACZ.TYPYSP().PLATNOSC || ZLP.KH().PLATNOSC ?};
            {? ZLP.KH().RAB_TYP<>'' || _params.RAB_TYP:=KH.RAB_TYP ?};
            _tar:=exec('tar_cenm','ceny',_params);
            _cena:=_tar[1];
            _rab:=_tar[2];
            _tap:=_tar[3]
         ?}
      |? ZLP.PRD>0
      ||
         __zlt.IL:=1;
         _cena:=(_wart_one*ZLP.PRD/100)$2
      ?};
      __zlt.C:=_cena;
      __zlt.TAP:=_tap
   ?};
   {? exec('get','#params',100117,2)='T' || __zlt.RAB:=_rab ?};
   {? var_pres('_tar')>100 || &_tar ?};

   _fas:=ZLP.ZLE().FAS().KOD;

   {? (__zlt.ODD<>date(0,0,0) | __zlt.DOD<>date(0,0,0))
   ||
      _okr:=FZL.OKR_NR(_fas,ZLP.DW);
      {? __zlt.ODD<>date(0,0,0)
      || _odd:=__zlt.ODD
      || _odd:=exec('okr_data','umowy_wspolne',1,_fas,_okr,ZLP.DW~1)
      ?};

      {? __zlt.DOD<>date(0,0,0)
      || _dod:=__zlt.DOD
      || _dod:=exec('okr_data','umowy_wspolne',3,_fas,_okr,ZLP.DW~1)
      ?};
      _cen1:=__zlt.C;
      UMO.JM2:=exec('par_m3','jm');
      _il:=__zlt.IL;
      __zlt.IL:=exec('obl_cenc','umowy_faktury',_fas,_odd,_dod,_il,_okr,'i')$2
   ?};

   _brak:='';
   _usluga:={? _licz=1 || 'dla usługi podstawowej'@ || 'dla dodatku'@ ?};
   {? __zlt.C=0 & __zlt.IL=0
   || _brak:='nieuzupełniona ilość oraz cena'@
   |? __zlt.C>0 & __zlt.IL=0
   || _brak:='nieuzupełniona ilość'@
   |? __zlt.C=0 & __zlt.IL>0
   || _brak:='nieuzupełniona cena'@
   ?};
   {? _brak<>''
   ||
      _str:='Kontrahent: %1, %2 %3 - pozycja nie została dodana.'@[__zlt.KHK,_brak,_usluga];
      {? _b=1
      || __cq.add(_str,2)
      || exec('memo_add','umowy_faktury',_str)
      ?};
      _wyn-=1
   ||
      _wyn+=1
   ?};
   {? __zlt.C>0 & __zlt.IL>0 || __zlt.add() ?};
   Plugin.run('FPACZ_ADD_001')
!};
_wyn


\wyst_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: wystawia dokumenty na podstawie tabeli tymczasowej __zlt dla danego uzytkownika
::       grupuje wg kontrahenta, uslugi, ceny - sumuje dla pozycji ilosc i wartosc
::   WE: [_a] - ref FAKS jezeli podany to zalozenie ze wszystko bedzie dodawane
::              do podanej faktury ... i ze cale __zlt dotyczy KH z faktury
::       [_b] - ostatni numer błędu
::  OLD: \wyst_dok/um.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};
_bland:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_result:=0;

_mp:=params_get().mp;
_grpkey:=params_get().grpkey;
:: prognoza przychodów
:: _pp=0 - wystawianie faktur do paczki
:: _pp=1 - prognoza przychodów dla paczki
:: _pp=2 - prognoza przychodów dla umowy
_pp:=params_get().pp;

{? _pp=1 || exec('fpacz_pp_del','umowy_faktury') ?};

_Fakses:=tab_tmp(1,'FAKS','STRING[16]',);
{? _a<>null()
||
   _Fakses.FAKS:=$_a;
   _Fakses.add()
?};

:: miejsce wystawienia dokumentu - HELP.WHERE='A' - paczka faktur
{? HELP.WHERE='' || HELP.WHERE:='A' ?};
:: dokument - ustalenie sposobu numeracji
POM.TAB:='FAKS';
POM.TYPDOK:=FPACZ.TYPYSP().KOD;
POM.NRT:=0;
BEER.SZ:='S';
FAKS.blank();
exec('nr_pola','numery');
{? _a=null & FPACZ.TYPYSP().NRT=0 & exec('spr_wol','numery','FAKS')
||
   {? FUN.ask('Wykorzystać wolne numery w numeracji dokumentów?'@)
   || _paczka:='PACZ_W'
   || _paczka:='PACZKA'
   ?}
||
   _paczka:='PACZKA'
?};
:: powizanie fap z zlp wykorzystywane do wyliczenia wartości zlp (zgłoszenia)
_FAP_ZLP:=exec('fap_zlp','umowy_faktury');
:: parametry paczki:
:: - podział wg posesji
_par_pos:=FPACZ.PAR_POS;
:: - podział wg typu zgłoszenia
_par_zgl:=FPACZ.PAR_ZGL;
:: - podział wg form płatności
_par_pl:=FPACZ.PAR_PL;
:: - podział wg projektów
_par_proj:=FPACZ.PAR_PROJ;
:: - typ dokumentu sprzedaży
POM.TYPDOK:=FPACZ.TYPYSP().KOD;
:: utworzenie index'u dla __zlt zależnie od parametrów paczki
{? FPACZ.RODZ='U'
||
:: paczka do umów
   {? _par_pos='N'
:: bez podziału na posesje
   || {? _par_pl='N'
:: bez podziału na formy płatności
      || _ndx:=__zlt.ndx_tmp('',,'FV',,,'KHK',,,'KH_ODB',,,'M',,,'R',,,'PROJEKTY',,,'UMS',,)
:: podział na formy płatności
      || _ndx:=__zlt.ndx_tmp('',,'FV',,,'KHK',,,'KH_ODB',,,'PL',,,'M',,,'R',,,'PROJEKTY',,,'UMS',,)
      ?}
:: podział na posesje
   || {? _par_pl='N'
:: bez podziału na formy płatności
      || _ndx:=__zlt.ndx_tmp('',,'FV',,,'KHK',,,'KH_ODB',,,'MIA',,,'UL',,,'POS',,,'M',,,'R',,,'PROJEKTY',,,'UMS',,)
:: podział na formy płatności
      || _ndx:=__zlt.ndx_tmp('',,'FV',,,'KHK',,,'KH_ODB',,,'MIA',,,'UL',,,'POS',,,'PL',,,'M',,,'R',,,'PROJEKTY',,,'UMS',,)
      ?}
   ?}

|? FPACZ.RODZ='Z'
||
:: paczka do zgłoszeń
   {? _par_pos='N'
:: bez podziału na posesje
   || {? _par_pl='N'
:: bez podziału na formy płatności
      || _ndx:=__zlt.ndx_tmp('',,'FV',,,'KHK',,,'KH_ODB',,,'M',,,'DW',,,'R',,1,'PROJEKTY',,)
:: podział na formy płatności
      || _ndx:=__zlt.ndx_tmp('',,'FV',,,'KHK',,,'KH_ODB',,,'PL',,,'M',,,'DW',,,'R',,1,'PROJEKTY',,)
      ?}
:: podział na posesje
   || {? _par_pl='N'
:: bez podziału na formy płatności
      || _ndx:=__zlt.ndx_tmp('',,'FV',,,'KHK',,,'KH_ODB',,,'MIA',,,'UL',,,'POS',,,'M',,,'DW',,,'R',,1,'PROJEKTY',,)
:: podział na formy płatności
      || _ndx:=__zlt.ndx_tmp('',,'FV',,,'KHK',,,'KH_ODB',,,'MIA',,,'UL',,,'POS',,,'PL',,,'M',,,'DW',,,'R',,1,'PROJEKTY',,)
      ?}
   ?}
||
   FUN.info('Nie obsługiwany rodzaj paczki.'@);
   return()
?};
FPACZFAP.cntx_psh();
FPACZFAP.clear();
:: kontrahent
KH.index('KOD');
KH.prefix();
_kh_ref:=null;
_kh_odb:='';
_fv:='N';
_kh_rab:=0;
:: iteracja po ZLP wg __zlt - first
__zlt.index(_ndx);
__zlt.prefix();
{? __zlt.first()
||
:: zmienne sprawdzajace czy kolejna faktura
   _khk:=__zlt.KHK;
   _kh_odb:=__zlt.KH_ODB;
   _fv:=__zlt.FV;
:: zmienne sprawdzajace czy kolejna pozycja faktury
   _usl:=__zlt.M;
   _pos:=__zlt.POS;
   _czum:=__zlt.CZUM;
   _jm:=__zlt.JM;
   _cena:=__zlt.C;
   _rab:=__zlt.RAB;
   _rab_typ:={? KH.find_key(2,__zlt.KHK) & KH.RAB_TYP<>'' || KH.RAB_TYP || exec('get','#params',800812,2) ?};
   _pl:=__zlt.PL;
   _proj:=__zlt.PROJEKTY;
:: Informacja o cenniku nie jest umieszczana w pozycji bo jest elementem grupującym pozycje i w szczególności
:: powodowałaby tworzenie dodatkowych pozycji jeśli np. cena byłaby jednakowa i pochodząca z różnych cenników.
:: Można ewentualnie badać czy __zlt.TAP jest ten sam dla wszystkich __zlt i wtedy umieszczać informację.
::   _tap:=__zlt.TAP;
:: nagłówek dokumentu
   _add:=null;
:: pozycja - ilość
   _ilosc:=0;
:: progress
   _size:=__zlt.size();
   _licz:=0;
:: iteracja po ZLP wg __zlt
   ZLP.cntx_psh();
   {!
   |?
      do();
      _continue:=1;
::    progress
      _licz+=1;
      _prgs:=100*_licz/_size;
      progress(_prgs,'\nTrwa przetwarzanie (%1\%)\n'@[$int(_prgs)],'Generowanie dokumentów'@);
:: pozycja dokumentu
::      _fap_ref:=null;

      ZLP.use(form(8+__zlt.ZLP_REF));
      ZLP.prefix();
      {? ZLP.seek(__zlt.ZLP_REF,form(8+__zlt.ZLP_REF))
      ||
:: zgłoszenie
         _zlp_ref:=ZLP.ref();
:: rodzaj fakturowania
         _kstfa:=exec('kst_fa','umowy_faktury',1);

         {? _khk<>__zlt.KHK
               |
            _kh_odb<>__zlt.KH_ODB
               |
            (_par_pos='T' & _pos<>__zlt.POS)
               |
            (_par_pl='T' & _pl<>__zlt.PL)
               |
            _add=null
               |
            (_fv='T')
               |
            (__zlt.FV='T')
         ||
:: nowy dokument jeśli:
:: - zmiana kontrahenta
:: - lub zmiana odbiorcy
:: - lub zmiana posesji bo w paczce ustawiono podział faktur wg posesji
:: - lub zmiana formy płatności bo w paczce ustawiono podział faktur wg form płatności
:: - lub pierwsza iteracja

:: DRO_TODO_AWI: menu_pth='FAFZ' - Faktury pojedyncze jak w paczce - nie znalazłem pozycji menu
::            {? menu_pth='FAFZ' || _kh_rab:=0 ?};

:: kontrahent i forma platnosci z kontrahenta
            _kh_ref:=null();
            _kh_pl:=null();
            {? KH.find_key(2,__zlt.KHK)
            ||
               _kh_ref:=KH.ref();
               _kh_pl:=KH.PLATNOSC
            ?};

:: DRO_TODO_AWI: menu_pth='FAFD' - Faktury pojedyncze jak w paczce - Dołącz - nie przeniesione
::            {? menu_pth='FAFD' || _kh_rab:=FAKS.RAB ?};

            {? _add<>null
            ||
:: pozycja - aktualizacja wartości
               FAP.IL:=_ilosc;
               {? __zlt.WAL=$INFO.NAROD
               || FAP.CPR:=_cena; FAP.CWAL:=0
               || FAP.CPR:=0; FAP.CWAL:=_cena
               ?};
               {? exec('czyrabp','ceny',_rab_typ) || FAP.RAB:=_rab || FAP.RABK:=_rab ?};
::               exec('tar_cenm_s','ceny',_tap);
               {? $FAP.PROJEKTY<>_proj || FAP.PROJEKTY:=null() ?};
               exec('liczfak','faktury_wspolne');
               {? FAP.IL>0
               || {? _pp || exec('fpaczfap_put','umowy_faktury') || FAP.put() ?}
               || {? _pp || exec('fpaczfap_del','umowy_faktury',_FAP_ZLP) || exec('fap_del','faktury_poz',,0) ?}
               ?};
:: pozycje - informacje dodatkowe
               exec('inf_dod','fakso',0,'fakpo');
::             sprawdza czy poprzednia faktura ma pozycje
               FAP.cntx_psh();
               FAP.index('FAP');
               FAP.prefix(_add);
               {? ~FAP.first()
               ||
                  exec('memo_add','umowy_faktury',
                     'Nie zafakturowano zgłoszeń dla kontrahenta %1 - zerowa ilość pozycji faktur'@[FAKS.KH().SKR]);
                  exec('usun_fak','faktury_nag',0)
               ?};
               FAP.cntx_pop();
:: pozycja - ilość - zerowanie
               _ilosc:=0
            ?};

            {? _a<>null()
            ||
:: dokument - podany na wejściu - wszystkie pozycje przypisywane do tego dokumentu
               _add:=_a
            ||
:: dokument - nowy - pozycje przypisywane wg ustawień paczki
:: nagłówek - add
               {? ~NR.lock(2,1)
               ||
                  undo();
                  FUN.info('Niedostępna baza numeracji.\nUruchom ponownie generowanie dokumentów.'@);
                  _continue:=0

               |? exec('add','faktury_nag',FPACZ.TYPYSP,FPACZ.DS,,_kh_ref,,,,exec('rab_nag','umowy_faktury',_kh_ref),
                     {? _pp || 'N' || 'T' ?},_paczka,FPACZ.DW,'P',,,,,,,_rab_typ)=1
               ||
                  NR.unlock();
                  _Fakses.FAKS:=$FAKS.ref();
                  _Fakses.add();
:: klucz grupujący
                  _mp.grpkey(_grpkey);
                  _mp.grpkeyAdd(FAKS.uidref());

                  FAKS.KH_ODB:=exec('FindAndGet','#table',KH_ODB,__zlt.KH_ODB,,,null());

::                Płatność z odbiorcy
                  {? FAKS.KH_ODB<>null
                  ||
                     exec('duplikuj_dane','faktury_wspolne','','KH_ODB');
                     KH_ODB.cntx_psh(); KH.cntx_psh(); KH_DOD.cntx_psh();
                     KH_ODB.prefix();
                     {? FPACZ.TERM<>'P' & KH_ODB.seek(FAKS.KH_ODB) & KH_ODB.KH_LNK<>null
                     ||
                        KH.prefix();
                        {? KH.seek(KH_ODB.KH_LNK) & KH.PLATNOSC<>null
                        ||
:: forma płatności z odbiorcy
                           _kh_pl:=KH.PLATNOSC;
                           exec('kh_dod_ini','kontrahent',KH.ref);
                           _kh_rab:=KH_DOD.RAB
                        ?}
                     ?};
                     KH_ODB.cntx_pop(); KH.cntx_pop(); KH_DOD.cntx_pop()
                  ?};
                  FAKS.FPACZKA:=FPACZ.ref();
::                subkonta kontrahenta
                  {? FPACZ.DRB='S'
                  ||
                     exec('rbk','faktury_nag',1)
                  ?};
                  FAKS.put();
                  {? exec('polafaks_get','jpk_log',FAKS.ref())
                  ||
                     FAKSPOLA.OKRES_OD:=FPACZ.OD;
                     FAKSPOLA.OKRES_DO:=FPACZ.DO;
                     FAKSPOLA.put()
                  ?};
                  _add:=FAKS.ref()
               ||
                  _add:=null
               ?}
            ?};

            {? _continue>0
            ||
               {? __zlt.R='D' || _zl_r:='D' || _zl_r:='P' ?};

:: DRO_TODO_AWI: menu_pth='FAFZ' - Faktury pojedyncze jak w paczce - nie znalazłem pozycji menu
::            {? menu_pth='FAFZ' || _kh_rab:=0 ?};

               UMO.M:=exec('FindAndGet','#table',M,__zlt.M,,,null());
               UMO.WAL:=exec('FindAndGet','#table',SLO,__zlt.WAL,,,null());
               UMO.JM:=exec('FindAndGet','#table',JM,__zlt.JM,,,null());
               UMO.PROJEKTY:=exec('FindAndGet','#table',PROJEKTY,__zlt.PROJEKTY,,,null());
:: pozycja - add
::            _fap_ref:=
               exec('ADDPOZF','faktury_poz',UMO.M,1,1,_kh_rab
                  ,exec('m_vat','material',UMO.M,FAKS.KH,exec('exp_ue','typysp'),FAKS.AR,FAKS.AM)
                  ,_zl_r,__zlt.U,,,UMO.WAL,UMO.JM,,,,,,,UMO.PROJEKTY,~_pp);
               {? _pp || exec('fpaczfap_add','umowy_faktury',_pp) ?};
:: forma płatności ze zgłosznia jeśli na paczce zaznaczono osobna faktura dla formy płatności
               {? _par_pl='T'
               ||
                  _zlt_pl:=exec('FindAndGet','#table',SLO,__zlt.PL,,,null());
                  {? _zlt_pl<>null() || _kh_pl:=_zlt_pl ?}
               ?};
:: ustalanie formy płatności i terminu zaplaty
               _pl_put:=0;
               {? _kh_pl<>null()
                     &
                  (FPACZ.TERM='D' | FPACZ.TERM='A')
               ||
::             priorytet:
::             - płatność ze zgłoszenia
::             - lub odbiorcy kontrahenta
::             - lub kontrahenta
                  FZ.PL:=_kh_pl;
                  FZ.PL();
                  FZ.TERMPLAT:=exec('term_plat','faktury_plat','TZ','N',FAKS.ref());
                  _pl_put:=1

               |? FPACZ.TERM='P' | FPACZ.TERM='A'
               ||
::             z paczki
                  FZ.PL:=FPACZ.PL;
                  FZ.TERMPLAT:=FPACZ.TZ;
                  _pl_put:=1
               ?};
:: dokument - płatności
               exec('plat_one','faktury_plat',FAKS.ref());
               {? _pl_put || FAKS.put() ?}
            ?}
         ?};

         {? _continue>0
         ||
            {? _khk=__zlt.KHK
                  &
               (
::             osobna pozycja bo zmiana posesji i w paczce ustawiono pozycje wg posesji
                  (_par_pos='W' & _pos<>__zlt.POS)
                     |
::             lub osobna pozycja bo zmiana czum i w paczce ustawiono pozycje osobno dla zgł.jedn. i osobno wg harm.
                  (_par_zgl='T' & _czum<>__zlt.CZUM)
                     |
::             lub osobna pozycja dla każdego zgłoszenia
                  _par_zgl='W'
                     |
::             lub osobna pozycja jeśli zmiana materiału
                  _usl<>__zlt.M
                     |
::             lub osobna pozycja jeśli zmiana jm
                  __zlt.JM<>_jm
                     |
::             lub osobna pozycja jeśli zmiana ceny
                  __zlt.C<>_cena
                     |
::             lub osobna pozycja jeśli zmiana rabatu
                  __zlt.RAB<>_rab
::             lub osobna pozycja jeśli zmiana cennika
::                  |
::               __zlt.TAR<>_tar
::             lub osobna pozycja jeśli inny projekt
                     |
                  (_par_proj='T' & _proj<>__zlt.PROJEKTY)
               )
            ||
               FAP.IL:=_ilosc;
               {? __zlt.WAL=$INFO.NAROD
               || FAP.CPR:=_cena; FAP.CWAL:=0
               || FAP.CPR:=0; FAP.CWAL:=_cena
               ?};
               {? $FAP.PROJEKTY<>_proj || FAP.PROJEKTY:=null() ?};
               {? exec('czyrabp','ceny',_rab_typ) || FAP.RAB:=_rab || FAP.RABK:=_rab ?};
::            exec('tar_cenm_s','ceny',_tap);
               exec('liczfak','faktury_wspolne');
               {? FAP.IL>0
               || {? _pp || exec('fpaczfap_put','umowy_faktury') || FAP.put() ?}
               || {? _pp || exec('fpaczfap_del','umowy_faktury',_FAP_ZLP) || exec('fap_del','faktury_poz',,0) ?}
               ?};
:: pozycje - informacje dodatkowe
               exec('inf_dod','fakso',0,'fakpo');
               _ilosc:=0;
               {? __zlt.R='D' || _zl_r:='D' || _zl_r:='P' ?};

:: DRO_TODO_AWI: menu_pth='FAFZ' - Faktury pojedyncze jak w paczce - nie znalazłem pozycji menu
::            {? menu_pth='FAFZ' || _kh_rab:=0 ?};

               UMO.M:=exec('FindAndGet','#table',M,__zlt.M,,,null());
               UMO.WAL:=exec('FindAndGet','#table',SLO,__zlt.WAL,,,null());
               UMO.JM:=exec('FindAndGet','#table',JM,__zlt.JM,,,null());
               UMO.PROJEKTY:=exec('FindAndGet','#table',PROJEKTY,__zlt.PROJEKTY,,,null());
:: pozycja - add
::            _fap_ref:=
               exec('ADDPOZF','faktury_poz',UMO.M,1,1,_kh_rab
                  ,exec('m_vat','material',UMO.M,FAKS.KH,exec('exp_ue','typysp'),FAKS.AR,FAKS.AM)
                  ,_zl_r,__zlt.U,,,UMO.WAL,UMO.JM,,,,,,,UMO.PROJEKTY,~_pp);
               {? _pp || exec('fpaczfap_add','umowy_faktury',_pp) ?}
            ?};
:: pozycja - ilość - agregacja
            _ilosc+=__zlt.IL;
:: powiązanie zgłoszenia z pozycją faktury
            ZLP.clear();
            ZLP.FAKS:='T';
            {? __zlt.R='D'
            || ZLP.FAPU:=FAP.ref()
            || ZLP.FAP:=FAP.ref()
            ?};
            ZLP.WN:=0;
            {? _pp || exec('fpaczzlt_add','umowy_faktury',_pp) || ZLP.put() ?};
:: naliczeniew wartości netto zgłoszenia podczas wystawiania dokumentów dla paczki lub prognozy przychodu dla umowy
            {? _pp
            || _FAP_ZLP.FAP:=$FPACZFAP.ref(); _FAP_ZLP.ZLP:=$FPACZZLT.ref()
            || _FAP_ZLP.FAP:=$FAP.ref();      _FAP_ZLP.ZLP:=$ZLP.ref()
            ?};
            _FAP_ZLP.add()
         ?}
      ?};
      {? _continue
      ||
:: zmienne sprawdzajace czy kolejna faktura
         _khk:=__zlt.KHK;
         _kh_odb:=__zlt.KH_ODB;
         _fv:=__zlt.FV;
:: zmienne sprawdzajace czy kolejna pozycja faktury
         _usl:=__zlt.M;
         _pos:=__zlt.POS;
         _czum:=__zlt.CZUM;
         _jm:=__zlt.JM;
         _cena:=__zlt.C;
         _rab:=__zlt.RAB;
         _rab_typ:={? KH.find_key(2,__zlt.KHK) & KH.RAB_TYP<>'' || KH.RAB_TYP || exec('get','#params',800812,2) ?};
         _pl:=__zlt.PL;
         _proj:=__zlt.PROJEKTY;
::         _tap:=__zlt.TAP;
         _next:=__zlt.next()
      ?};
      _result:=end();
:: iteracja po ZLP wg __zlt - next
      _result & _next
   !};
   {? _result=0
   ||
      _bland+=1;
      exec('memo_add','umowy_faktury','Niedostępna baza numeracji. Uruchom ponownie generowanie dokumentów.'@,_bland+1)
   ?};
   ZLP.cntx_pop();
:: pozycja - ostatnia
   _tran:=0;
   {? _result || _tran:=1; do() ?};
   {? _result & _add<>null()
   ||
:: pozycja - aktualizacja wartości
      FAP.IL:=_ilosc;
      {? __zlt.WAL=$INFO.NAROD
      || FAP.CPR:=_cena; FAP.CWAL:=0
      || FAP.CPR:=0; FAP.CWAL:=_cena
      ?};
      {? $FAP.PROJEKTY<>_proj || FAP.PROJEKTY:=null() ?};
      {? exec('czyrabp','ceny',_rab_typ) || FAP.RAB:=_rab || FAP.RABK:=_rab ?};
::      exec('tar_cenm_s','ceny',_tap);
      exec('liczfak','faktury_wspolne');
      _zlp_wn:=1;
      {? FAP.IL>0
      || {? _pp || exec('fpaczfap_put','umowy_faktury') || FAP.put() ?}
      || {? _pp || exec('fpaczfap_del','umowy_faktury',_FAP_ZLP) || exec('fap_del','faktury_poz',,0) ?};
         _zlp_wn:=0
      ?};
:: pozycje - informacje dodatkowe
      exec('inf_dod','fakso',0,'fakpo');
::    sprawdza czy ostatnia faktura ma pozycje
      FAP.cntx_psh();
      FAP.index('FAP');
      FAP.prefix(_add);
      {? ~FAP.first()
      ||
         exec('memo_add','umowy_faktury',
            'Nie zafakturowano zgłoszeń dla kontrahenta %1 - zerowa ilość pozycji faktur'@[FAKS.KH().SKR]);
:: dokument - usunięcie
         exec('usun_fak','faktury_nag',0)
      ?};
      FAP.cntx_pop();
      {? _zlp_wn || exec('zlp_wn','umowy_faktury',_FAP_ZLP,_pp) ?}
   ?};
   {? _tran || _result:=end() ?};
   _loop:=_result & _Fakses.first();
   {!
   |? _loop
   |!
      exec('FindAndGet','#table',FAKS,_Fakses.FAKS,,"
:: dokument - aktualizacja wartości
         exec('sumfak','faktury_wspolne');
:: dokument - płatności
         exec('plat_przel','faktury_plat',FAKS.ref());
:: dokument - informacje dodatkowe
         exec('inf_dod','fakso',0,'faktu')
      ");
      _loop:=_Fakses.next()
   !}
?};
__zlt.ndx_drop(_ndx);
__zlt.prefix();
__zlt.blank();
prgs_clr();
FPACZFAP.cntx_pop();
_result


\fpaczfap_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Dodaje rekord do tabeli FPACZFAP
::   WE: _a - 1-z paczki, 2-z umowy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FPACZFAP.blank();
{? _a=1 || FPACZFAP.FPACZ:=FPACZ.ref() ?};
FPACZFAP.UM:=ZLP.UM;
FPACZFAP.ROK:=FAKS.DW~1;
FPACZFAP.MC:=FAKS.DW~2;
FPACZFAP.OKR:=(FAKS.DW$8+4)+' '+(FAKS.DW$8-5);
FPACZFAP.KH:=FAKS.KH;
FPACZFAP.KH_ODB:=FAKS.KH_ODB;
FPACZFAP.M:=FAP.M;
FPACZFAP.IL:=FAP.IL;
FPACZFAP.JM:=FAP.JM;
FPACZFAP.CPR:=FAP.CPR;
FPACZFAP.WN:=FAP.WN;
FPACZFAP.WV:=FAP.WV;
FPACZFAP.WB:=FAP.WB;
FPACZFAP.add()


\fpaczfap_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Poprawia rekord tabel FPACZFAP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FPACZFAP.IL:=FAP.IL;
FPACZFAP.CPR:=FAP.CPR;
FPACZFAP.WN:=FAP.WN;
FPACZFAP.WV:=FAP.WV;
FPACZFAP.WB:=FAP.WB;
FPACZFAP.put()


\fpaczfap_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Usuwa rekord z tabeli FPACZFAP wraz z powiąznymi danymi
::   WE: _a - Tabela powiązań FAP z ZLP
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(FIRMA)
||
   _FAP_ZLP:=_a;
   _FAP_ZLP.cntx_psh();
   _FAP_ZLP.prefix($FPACZFAP.ref());
   _loop:=_FAP_ZLP.first();
   {!
   |? _loop
   |!
      _loop:=_FAP_ZLP.del()
   !};
   _FAP_ZLP.cntx_pop()
?};
_NamesZLT:=FPACZZLT.names();
exec('zle_psh','open_tab');
_NamesZLT.prefix('fpz'+(FPACZFAP.name()+3));
_loop:=_NamesZLT.first();
{!
|? _loop
|!
   FPACZZLT.use(_NamesZLT.NAME);
   FPACZZLT.index('FPACZFAP');
   FPACZZLT.prefix(FPACZFAP.ref());
   _loop:=FPACZZLT.first();
   {!
   |? _loop
   |!
      _loop:=FPACZZLT.del()
   !};
   _loop:=_NamesZLT.next()
!};
FPACZFAP.del();
exec('zle_pop','open_tab')


\fpaczzlt_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Dodanie rekordu FPACZFAP
::   WE: _a - 1-z paczki, 2-z umowy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FPACZZLT.use('fpz'+(8+__zlt.ZLP_REF+5));
FPACZZLT.prefix();
FPACZZLT.blank();
{? _a=1 || FPACZZLT.FPACZ:=FPACZ.ref() ?};
FPACZZLT.UM:=ZLP.UM;
FPACZZLT.DW:=__zlt.DW; 'Data wykonania';
FPACZZLT.DWN:=__zlt.DWN; 'Nowa data wykonania';
FPACZZLT.SR:=__zlt.SR; 'Stan realizacji';
FPACZZLT.IL:=__zlt.IL; 'Ilość';
FPACZZLT.C:=__zlt.C; 'Cena';
FPACZZLT.RAB:=__zlt.RAB; 'Rabat';
FPACZZLT.JM:=exec('FindAndGet','#table',JM,__zlt.JM,,,null()); 'Jednostka miary';
FPACZZLT.ZLP_REF:=__zlt.ZLP_REF; 'Ref zgłoszenia';
FPACZZLT.FAS:=exec('FindAndGet','#table',FAS,__zlt.FAS,,,null()); 'Sposób fakturowania';
FPACZZLT.USL:=exec('FindAndGet','#table',USL,__zlt.USL,,,null()); 'Rodzaj usługi';
FPACZZLT.M:=exec('FindAndGet','#table',M,__zlt.M,,,null()); 'Usługa na fakturze';
FPACZZLT.TAR:=exec('FindAndGet','#table',TAR,__zlt.TAR,,,null()); 'Cennik';
FPACZZLT.KHK:=__zlt.KHK; 'Kontrahent-kod';
FPACZZLT.GRKH:=exec('FindAndGet','#table',GRKH,__zlt.GRKH,,,null()); 'Grupa kontrahentów';
FPACZZLT.UMS:=__zlt.UMS; 'Umowa symbol';
FPACZZLT.ZLES:=__zlt.ZLES; 'Zgłoszenie symbol';
FPACZZLT.VAT:=__zlt.VAT; 'Płatnik VAT';
FPACZZLT.POS:=exec('FindAndGet','#table',POS,__zlt.POS,,,null()); 'Posesja';
FPACZZLT.REJO:=exec('FindAndGet','#table',REJO,__zlt.REJO,,,null()); 'Rejon';
FPACZZLT.MIA:=exec('FindAndGet','#table',MIA,__zlt.MIA,,,null()); 'Miasto';
FPACZZLT.UL:=exec('FindAndGet','#table',UL,__zlt.UL,,,null()); 'Ulica';
FPACZZLT.POJAZD:=exec('FindAndGet','#table',POJAZDY,__zlt.POJAZD,,,null()); 'Samochód';
FPACZZLT.ZLBR:=exec('FindAndGet','#table',ZLBR,__zlt.ZLBR,,,null()); 'Brygada robocza';
FPACZZLT.PRACW:=exec('FindAndGet','#table',PRACW,__zlt.PRACW,,,null()); 'Pracownik';
FPACZZLT.R:=__zlt.R; 'Rodzaj';
FPACZZLT.CZUM:=__zlt.CZUM; 'Czy z umowy';
FPACZZLT.U:=__zlt.U; 'Uwagi';
FPACZZLT.NAZ:=__zlt.NAZ; 'Nazwa';
FPACZZLT.MIASTO:=__zlt.MIASTO; 'Miasto';
FPACZZLT.ULK:=__zlt.ULK; 'Ulica';
FPACZZLT.POCZ:=__zlt.POCZ; 'Poczta';
FPACZZLT.ODD:=__zlt.ODD; 'Od daty';
FPACZZLT.DOD:=__zlt.DOD; 'Do daty';
FPACZZLT.KH_ODB:=exec('FindAndGet','#table',KH_ODB,__zlt.KH_ODB,,,null()); 'Odbiorca';
FPACZZLT.NAZS:=__zlt.NAZS; 'Nazwa skrócona';
FPACZZLT.WAL:=exec('FindAndGet','#table',SLO,__zlt.WAL,,,null()); 'Waluta SLO';
FPACZZLT.CB:=__zlt.CB; 'Cana netto/brutto';
FPACZZLT.TAP:=__zlt.TAP; '$TAP.ref()';
FPACZZLT.KH_ODBK:=__zlt.KH_ODBK; 'Odbiorca kod';
FPACZZLT.PL:=exec('FindAndGet','#table',SLO,__zlt.PL,,,null()); 'Forma płatności $SLO.ref()';
FPACZZLT.PROJEKTY:=exec('FindAndGet','#table',PROJEKTY,__zlt.PROJEKTY,,,null()); 'Projekt $PROJEKTY.ref()';
ZLP.FAKS:='T';
{? __zlt.R='D'
|| FPACZZLT.FAPU:=FPACZFAP.ref()
?};
FPACZZLT.FAP:=FPACZFAP.ref();
FPACZZLT.add()


\fpaczfap_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Okno selekcji tabeli FPACZFAP
::   WE: _a - miejsce wywołania 0-faktury cykliczne, 1-umowy cykliczne
::   WY: akronim okna
::----------------------------------------------------------------------------------------------------------------------
_wer:=FPACZFAP.mk_sel('Prognoza przychodu'@,,,{? _a || 'um_wer' || 'fpaczfap_wer' ?},,,,,'U');
{? _a || FPACZFAP.win_fld(_wer,,'OKR',,,15,,,'Okres'@) ?};
FPACZFAP.win_fld(_wer,,'KH','SKR',,10,,,'Kontrahent'@);
FPACZFAP.win_fld(_wer,,'KH_ODB','SKR',,10,,,'Odbiorca'@);
FPACZFAP.win_fld(_wer,,'M','KTM',,10,,,'Indeks'@);
FPACZFAP.win_fld(_wer,,'M','N',,10,,,'Nazwa'@);
FPACZFAP.win_fld(_wer,,'IL',,,10,4,,'Ilość'@);
FPACZFAP.win_fld(_wer,,'JM','KOD',,10,,,'jm'@);
FPACZFAP.win_fld(_wer,,'CPR',,,10,2,,'Cena'@);
FPACZFAP.win_fld(_wer,,'WN',,,10,2,,'Wartość netto'@);
FPACZFAP.win_fld(_wer,,'WB',,,10,2,,'Wartość brutto'@);
_fb:="
   exec('fpaczzlt4fpaczzlp_select','umowy_faktury')
";
FPACZFAP.win_act(_wer,,'Formuła','Zgłoszenia'@,,,_fb,,1);
{? _a
||
   _fb:="
      {? FUN.ask('Czy obliczyć prognozę przychodu dla umowy %1?'@[exec('record','#to_string',UM.ref())])
      ||
         FPACZFAP.cntx_psh();
         _params:=exec('mp_run_a','#b__box');
         _params.ACT_UID:='LUM_FAK_GPPP';
         _params.UIDREF:=UM.uidref();
         _params.AKCJA:='Prognozuj przychody';
         _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
         exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'UM',UM.ref());

         exec('mp_run','#b__box',_params);
         FPACZFAP.cntx_pop()
      ?}
   ";
   FPACZFAP.win_act(_wer,1,'Formuła','Prognozuj przychody'@,,,_fb,,1);
   FPACZFAP.win_act(_wer,,'Formuła','Prognozuj przychody'@,,,_fb)
?};
_wer


\fap_zlp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Tabela powiązań FAP z ZLP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
tab_tmp(1,'FAP','STRING[16]',,'ZLP','STRING[16]',)


\zlp_wn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Oblicza wartość zgłoszenia
::   WE: _a - Tabela powiązań FAP z ZLP
::       _b=0 - wystawianie faktur do paczki
::         =1 - prognoza przychodów dla paczki
::         =2 - prognoza przychodów dla umowy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_FAP_ZLP:=_a;
_pp:=_b;
_loop:=_FAP_ZLP.first();
{? ~_loop || return() ?};
_fap_ref:=_FAP_ZLP.FAP;
_zlp_ref:=_FAP_ZLP.ZLP;
_fap:=obj_new('FAP_TAB','ZLP_TAB','IL','WN','PP');
_fap.FAP_TAB:=ref_tab(_fap_ref);
_fap.ZLP_TAB:=ref_tab(_zlp_ref);
_fap.PP:=_pp;
exec('FindAndGet','#table',_fap.FAP_TAB,_FAP_ZLP.FAP,,"_b.IL:=_b.FAP_TAB.IL; _b.WN:=_b.FAP_TAB.WN",,_fap);
{!
|? _loop
|!
   {? _fap_ref<>_FAP_ZLP.FAP
   ||
      exec('FindAndGet','#table',_fap.FAP_TAB,_FAP_ZLP.FAP,,"_b.IL:=_b.FAP_TAB.IL; _b.WN:=_b.FAP_TAB.WN",,_fap)
   ?};
   {? _fap.ZLP_TAB=FPACZZLT
   ||
      {? _fap.IL
      ||
         exec('FindAndGet','#table',FPACZZLT,_FAP_ZLP.ZLP,,"
            FPACZZLT.WN+=(FPACZZLT.IL/_b.IL*_b.WN)$2; FPACZZLT.put();
            {? _b.PP<>1
            ||
               exec('FindAndGet','#table',ZLP,FPACZZLT.ZLP_REF,,\"ZLP.WN+=_b; ZLP.put()\",,FPACZZLT.WN)
            ?}
         ",,_fap)
      ?}
   ||
      {? _fap.IL
      ||
         exec('FindAndGet','#table',ZLP,_FAP_ZLP.ZLP,,"
            ZLP.WN+=({? ZLP.IL || ZLP.IL || ZLP.ILR ?}/_b.IL*_b.WN)$2; ZLP.put()
         ",,_fap)
      ?}
   ?};
   _loop:=_FAP_ZLP.next()
!}


\fpaczzlt4fpaczzlp_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Akcja - Zgłoszenia dla pozcyji prognozy przychodu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_um:=FPACZFAP.FPACZ=null();

_wer:=FPACZZLT.mk_sel('Prognoza przychodu - zgłoszenia'@,,,'fpaczzlt_wer');
FPACZZLT.win_fld(_wer,,'MIA','NAZ',,10,,,'Miasto'@);
FPACZZLT.win_fld(_wer,,'UMS',,,15,,,'Umowa'@);
FPACZZLT.win_fld(_wer,,'DW',,,10,,,'Data wykonania'@);
FPACZZLT.win_fld(_wer,,'SR',,,10,,,'Stan realizacji'@);
FPACZZLT.win_fld(_wer,,'IL',,,10,4,,'Ilość'@);
FPACZZLT.win_fld(_wer,,'JM','KOD',,10,,,'jm'@);
FPACZZLT.win_fld(_wer,,'C',,,10,2,,'Cena'@);
FPACZZLT.win_fld(_wer,,'WN',,,10,2,,'Wartość netto'@);
FPACZZLT.win_sel(_wer);

_grp:=FPACZZLT.grp_make('Prognoza przychodu - zgłoszenia'@,,'fpaczzlt_grp');

FPACZZLT.cntx_psh();
_NamesZLT:=FPACZZLT.names();
_NamesZLT.prefix('fpz'+(FPACZFAP.name()+3));
_loop:=_NamesZLT.last();
_tab:=1;
{!
|? _loop
|!
   FPACZZLT.use(_NamesZLT.NAME);
   FPACZZLT.cntx_psh();
   FPACZZLT.index('FPACZFAP');
   FPACZZLT.prefix(FPACZFAP.ref());
   {? FPACZZLT.first()
   ||
      _tab:=0;
      _fb:=$('
         FPACZZLT.use(''%1'');
         FPACZZLT.cntx_psh();
         FPACZZLT.index(''FPACZFAP'');
         FPACZZLT.prefix(FPACZFAP.ref());
         FPACZZLT.first()
      '
      [_NamesZLT.NAME]);
      _fa:="FPACZZLT.cntx_pop()";
      FPACZZLT.grp_sel(_grp,,_wer,((_NamesZLT.NAME-2)+2)+'\\'+(_NamesZLT.NAME+2),,,,,_fb,_fa,,,'maximized')
   ?};
   FPACZZLT.cntx_pop();
   _loop:=_NamesZLT.prev()
!};
{? _tab || FUN.info('Brak zgłoszeń.'@) ?};
FPACZZLT.cntx_pop();
FPACZZLT.win_sel(_grp);
FPACZZLT.select()


\stat_gen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Status generacji dokumentów
::   WE: _a - 0/1 - błąd
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a || exec('stat_gen_error','umowy_faktury')
|? FPACZ.STAT_REJ<>'T' || exec('stat_gen_blank','umowy_faktury')
|? FPACZ.IL=0 || exec('stat_gen_ready','umowy_faktury')
|| exec('stat_gen_done','umowy_faktury')
?}


\stat_gen_blank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Status generacji dokumentów - Przygotowanie
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Przygotowanie'


\stat_gen_ready
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Status generacji dokumentów - Generuj
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Generuj'


\stat_gen_done
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Status generacji dokumentów - Wygenerowano
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Wygenerowano'


\stat_gen_error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Status generacji dokumentów - Błąd
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Błąd'


\fpacz_stat_gen_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Wartość początkowa FPACZ.STAT_GEN
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('stat_gen_blank','umowy_faktury')

:Sign Version 2.0 jowisz:1045 2023/07/20 10:47:25 d5c0510f4bc83fb56d295da04ba4d38f220f70c29861d9f609e6d844ff81348e1c3b6684acf2a400ce3653989121eeb405b976ed49c1d365d1e448a062455d7f563f9f3f8af52f45b49d8ab5e560dddfd58ba27cfc24943778819fe2044282c5fcfa7ee20799ac55b1db48eb24b497bb134f44b36d0e5ae155fe02f0637e1888
