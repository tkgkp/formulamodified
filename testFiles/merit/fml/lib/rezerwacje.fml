:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: rezerwacje.fml
:: Utworzony: 2015/04/03 [17.00]
:: Autor: [rr]
::======================================================================================================================
:: Zawartosc: formuły wspólne do obsługi rezerwacji zamówień, rezerwacji tymczasowych, ilości w wydaniu
::======================================================================================================================


\czysarez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy są podpięte rezerwacje pod daną pozycję
::   WY: 1-tak 0-nie
::  OLD: \czysarez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? BEER.OKZKP
|| _wyn:=exec('FindInSet','#table','REZ','ZK_P',ZK_P.ref())<>null
|| _wyn:=exec('FindInSet','#table','REZ','ZK_N',ZK_P.POZ,ZK_N.ref())<>null
?};
_wyn


\update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizowanie danych w tabeli REZ
::   WE: _a - na podstawie czego DK, FAP, ZK_P, REZ (rezerwacja tymczasowa), ZK_PP - dodatkowa rezerwcja,
::            ZLIM - surowiec nielimitowany do zlecenia
::       _b - ref na podstawie czego (ref KH w przypadku rezerwacji tymczasowej)
::       _c - magazyn
::       _d - indeks materialowy
::       _e - ilosc (0-oznacza usuniecie zapisu)
::       [_f] - ref SQL dostawy (''-oznacza brak wg dostawy - domyslnie brak)
::       [_g] - typ rezerwacji B-bezwarunkowa (domyslnie) W-warunkowa
::       [_h] - ref SQL ZD_POZ domyslnie ''
::       [_i] - dodanie kolejnego zapisu 1, kontrola RODZ,M,MG,dostawa 2 i 4 (bez dat)
::              , 0 (domyslnie) - nie - pojedynczy zapis
::       [_j] - NRK
::       [_k] - unikalny ref realizacji
::       [_l] - ilosc w jednostce dodatkowej
::       [_m] - jednostka dodatkowa
::       [_n] - wspolczynnik przeliczenia
::       [_o] - ref SQL - projekt
::       [_p] - od daty
::       [_q] - do daty
::       [_r] - ref cechy
::       [_s] - ref usera
::       [_t] - nr pozycji
::       [_u] - uwagi
::       [_v] - ZLZAM
::       [_w] - TR_ZL
::       [_x] - 1-ustaw znacznik sesji 0(domyślnie)-nie
::       [_y] - typ zwracanych danych: [0] - wynik akcji (0/1),
::                                      1 - obiekt z polami: WYN - wynik akcji, REF - ref zmodyfikowanej rezerwacji
::   WY: w zależności o _y : 1-zaaktualizowano 0-niestety lub obiekt z polami WYN, REF
::  OLD: \update/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=6 || {? type_of(_f)<>2 || _f:='' ?} || _f:='' ?};
{? _>=7 || {? type_of(_g)<>2 || _g:='B' ?} || _g:='B' ?};
{? _>=8 || {? type_of(_h)<>2 || _h:='' ?} || _h:='' ?};
{? _>=9 || {? type_of(_i)<>1 || _i:=0 ?} || _i:=0 ?};
{? _>=10 || {? type_of(_j)<>1 || _j:=0 ?} || _j:=0 ?};
{? _>=11 || {? type_of(_k)<>2 || _k:='' ?} || _k:='' ?};
_noil2:=0;
{? _>=12 || {? type_of(_l)<>1 || _noil2:=1; _l:=_e ?} || _noil2:=1; _l:=_e ?};
{? _>=13 || {? type_of(_m)<>7 || _m:=null ?} || _m:=null ?};
{? _>=14 || {? type_of(_n)<>1 || _n:=1 ?} || _n:=1 ?};
{? _>=15 || {? type_of(_o)<>2 || _o:='' ?} || _o:='' ?};
{? _>=16 || {? type_of(_p)<>4 || _p:=date() ?} || _p:=date() ?};
{? _>=17 || {? type_of(_q)<>4 || _q:=date(0,0,0) ?} || _q:=date(0,0,0) ?};
{? _>=18 || {? type_of(_r)<>7 || _r:=null ?} || _r:=null ?};
{? _>=19 || {? type_of(_s)<>7 || _s:=OPERATOR.USER ?} || _s:=OPERATOR.USER ?};
{? _>=20 || {? type_of(_t)<>1 || _t:=0 ?} || _t:=0 ?};
{? _>=21 || {? type_of(_u)<>2 || _u:='' ?} || _u:='' ?};
{? _>=22 || {? type_of(_v)<>7 || _v:=null ?} || _v:=null ?};
_tr_zl:={? var_pres('_w')=type_of('') || _w || '' ?};
_sesid:={? ((var_pres('_x')=type_of(0) & _x) | _k<>'') || 'T'+SYSLOG.ses_id() || '' ?};
_restype:={? var_pres('_y')=type_of(0) || _y || 0 ?};
_ref:=null();

_wyn:=0;
_beerm:=BEER.M;
BEER.M:=_d;
_ready:=BEER.M().RODZ='T';
BEER.M:=_beerm;
{? _a='ZK_PP'
|| _a:='ZK_P';
   _plus:='T'
|| _plus:='N'
?};
{? _ready
||

:: do zachowania ostatniego numeru w kolejce
_nrk:=0;
FAKS.cntx_psh();
FAP.cntx_psh();
ND.cntx_psh();
DK.cntx_psh();
ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
REZ.use((REZ.name()-2)+'__');
REZ.index({? _a='REZ' || 'KH' |? (';KARO;'*_a)>1 || 'FAPR' |? (';ZLIM;'*_a)>1 || 'ZLIMA' || _a ?});
{? (';KARO;ZLIM;'*_a)>1 || REZ.prefix($_b,) |? _t<>0 || REZ.prefix(_b,_t) || REZ.prefix(_b)?};
{? ~_i & _a<>'REZ' & _a<>'ZLIM' & REZ.first()
||
::  usuniecie rezerwacji - poprzednich zapisow
   {? _v<>null()
   || REZ.index('ZK_P');
      REZ.prefix(_b,'W');
      {? _a='ZK_P' & REZ.first() & REZ.find_tab('first','ZLZAM',,'=',null())
      || {!
         |? _del:=REZ.del(1,1); _wyn:=_del>0;
            _del>1 & (REZ.ZLZAM=null() | REZ.find_tab('next','ZLZAM',,'=',null()))
         !};
         _wyn:=1
      ?};
      REZ.index('ZK_P');
      REZ.prefix(_b,_g);
      {? REZ.first() & REZ.find_tab('first','ZLZAM',,'=',_v)
      || {!
         |? _del:=REZ.del(1,1); _wyn:=_del>0;
            _del>1 & (REZ.ZLZAM=_v | REZ.find_tab('next','ZLZAM',,'=',_v))
         !};
         _wyn:=1
      ?};
      {? ~_wyn || REZ.index('ZK_P');REZ.prefix(_b);_wyn:=REZ.first() ?}
   |? _k<>''
   || REZ.index('ZK_P');
      REZ.prefix(_b,'B');
      {? REZ.first() & REZ.find_tab('first','REFREA',,'=',_k)
      || {!
         |? _del:=REZ.del(1,1); _wyn:=_del>0;
            _del>1 & (REZ.REFREA=_k | REZ.find_tab('next','REFREA',,'=',_k))
         !}
      ?};
      {? ~_wyn || REZ.index('ZK_P');REZ.prefix(_b);_wyn:=REZ.first() ?}
   || {! |? _nrk:=REZ.NRK; _del:=REZ.del(1,1); _wyn:=_del>0; _del>1 !}
   ?}
|| _wyn:=1
?};
:: generujemy nowy zapis
{? (_a='ZLIM' | _e<>0) & {? _a='DK' || REZ.blank(); REZ.DK:=_b; REZ.DK().PLUS='N' || 1 ?}
|| _add:=1;
   {? _i>=2
   || _refrez:=null;
      REZ.cntx_psh();
      {? REZ.first() & REZ.find_tab('first','M',,'=',_d,'RODZ',,'=',_g,'SC',,'=',_f,'ZLZAM',,'=',_v)
      || {!
         |? {? {? _g='B' || REZ.MG=_c || 1 ?}
             & {? _a='ZLIM'
               || {? var_pres('__ZLIM4REZ')>100
                  || REZ.REFREA=__ZLIM4REZ.ZLGD & REZ.ZLIM=$_b & REZ.ZD_POZ=_h
                  || 0
                  ?}
               |? _i=3 | _i=5 || 1
               |? _i<>4 & _a<>'FAP' || _p=REZ.ODDT & _q=REZ.DODT
               |? _i=4 & _a='ZK_P' || REZ.ZK_P().ODDT=REZ.ODDT & REZ.ZK_P().DODT=REZ.DODT
               || 1
               ?}
            || _add:=0;
               _refrez:=REZ.ref();
               0
            || REZ.find_tab('next','M',,'=',_d,'RODZ',,'=',_g,'SC',,'=',_f,'ZLZAM',,'=',_v)
            ?}
         !}
      ?};
      REZ.cntx_pop();
      {? ~(~_add & _refrez<>null & REZ.seek(_refrez)) || _add:=1 ?}
   ?};
   {? _add & _e>0
   || REZ.clear;
      REZ.blank();
      {? _a='DK'
      || REZ.RODZ:='B';
         REZ.TYP:='W';
         REZ.DK:=_b;
         REZ.KH:=REZ.DK().N().KH;
         REZ.DK_C:=REZ.DK().DK_C;
         REZ.ODDT:=REZ.DK().N().D;
         REZ.DODT:=date(0,0,0);
         REZ.SYMDOK:=REZ.DK().N().SYM;
         REZ.TYPDOK:=REZ.DK().N().TYP().T;
         REZ.NRPOZ:=REZ.DK().P;
         REZ.BTERM:='T'
      |? _a='FAP'
      || REZ.RODZ:='B';
         REZ.TYP:='F';
         REZ.FAP:=_b;
         REZ.KH:=REZ.FAP().FAKS().KH;
         REZ.DK_C:=REZ.FAP().DK_C;
         REZ.ODDT:=REZ.FAP().FAKS().D;
         REZ.DODT:=date(0,0,0);
         REZ.SYMDOK:=REZ.FAP().FAKS().SYM;
         REZ.NRPOZ:=REZ.FAP().POZ;
         REZ.TYPDOK:=REZ.FAP().FAKS().T().T;
         REZ.BTERM:='T'
      |? _a='ZK_P'
      || REZ.TYP:='Z';
         REZ.ZK_P:=_b;
         REZ.ZK_N:=REZ.ZK_P().N;
         REZ.KH:=REZ.ZK_P().N().KH;
         REZ.DK_C:={? _r=null() || REZ.ZK_P().DK_C || _r ?};
         _data:=date();
         REZ.ODDT:={? REZ.ZK_P().N().DP>_data || REZ.ZK_P().N().DP || _data ?};
         REZ.DODT:=REZ.ZK_P().DT;
         REZ.SYMDOK:=REZ.ZK_P().N().SYM;
         REZ.NRPOZ:=REZ.ZK_P().POZ;
         REZ.TYPDOK:=REZ.ZK_P().N().T().T;
         REZ.ZL:=REZ.ZK_P().ZL;
         REZ.BTERM:='N';
         REZ.ZLZAM:=_v;
         REZ.PLUS:=_plus;
         REZ.TR_ZL:=_tr_zl;
         {? REZ.TR_ZL<>'' || REZ.SYMDOK:=exec('FindAndGet','#table',TR_ZL,_tr_zl,,"TR_NZL().SYM",REZ.SYMDOK) ?};
         {? _v<>null() || REZ.ZL:=REZ.ZLZAM().ZL ?}
      |? _a='ZK_N'
      || REZ.TYP:='Z';
         REZ.ZK_P:=null;
         REZ.ZK_N:=_b;
         REZ.KH:=REZ.ZK_N().KH;
         REZ.DK_C:=ZK_P.DK_C;
         _data:=date();
         REZ.ODDT:={? ZK_P.DP>_data || ZK_P.DP || _data ?};
         REZ.DODT:=ZK_P.DT;
         REZ.SYMDOK:=REZ.ZK_N().SYM;
         REZ.NRPOZ:=ZK_P.POZ;
         REZ.TYPDOK:=REZ.ZK_N().T().T;
         REZ.ZL:=ZK_P.ZL;
         REZ.BTERM:='N'
      |? _a='KARO'
      || KARO.cntx_psh();
         KARO.prefix();
         {? KARO.seek(_b)
         || REZ.RODZ:='B';
            REZ.TYP:='W';
            REZ.DK:=null();
            REZ.KH:=KARO.KH;
            REZ.DK_C:=KARO.DK_C;
            REZ.ODDT:=KARO.DATA;
            REZ.DODT:=date(0,0,0);
            REZ.SYMDOK:=KARO.P().OSOBA().NAZWISKO+' '+KARO.P().OSOBA().PIERWSZE;
            REZ.TYPDOK:='Wyposażenie';
            REZ.NRPOZ:=KARO.P().IP;
            REZ.BTERM:='T'
         ?};
         KARO.cntx_pop()
      |? _a='REZ'
      || REZ.TYP:='T';
         REZ.KH:=_b;
         REZ.DK_C:=_r;
         REZ.ODDT:=_p;
         REZ.DODT:=_q;
         REZ.SYMDOK:='';
         REZ.NRPOZ:=0;
         REZ.TYPDOK:='';
         REZ.ZL:=null;
         REZ.BTERM:='N'
      |? _a='ZLIM'
      ||  ZLIM.cntx_psh();
         {? ZLIM.name()<>ref_name(_b) || ZLIM.use(ref_name(_b)) ?};
         ZLIM.prefix();
         {? ZLIM.seek(_b)
         || REZ.RODZ:='B';
            REZ.TYP:='S';
            REZ.DK_C:=_r;
            REZ.ODDT:=_p;
            REZ.DODT:=_q;
            REZ.SYMDOK:='';
            REZ.NRPOZ:=0;
            REZ.TYPDOK:='';
            REZ.ZL:=ZLIM.ZLEC;
            REZ.ZGP:=$ZLIM.ZGP;
            REZ.ZLIM:=$_b;
            {? var_pres('__ZLIM4REZ')>100
            || REZ.REFREA:=__ZLIM4REZ.ZLGD;
               REZ.BTERM:=__ZLIM4REZ.BTERM;
               REZ.ZL_REZ:=__ZLIM4REZ.ZL_REZ;
               REZ.KODPAL:=__ZLIM4REZ.KODPAL
            || REZ.BTERM:='T'
            ?}
         ?};
         ZLIM.cntx_pop()
      ?};

      REZ.MG:=_c;
      REZ.M:=_d;
      REZ.US:=_s;
      REZ.RODZ:=_g;
      REZ.RP_REZ:=exec('rp_rez','rezerwacje',REZ.TYP,REZ.RODZ,REZ.ZL
                   ,{? REZ.TYP='Z' & REZ.ZK_P<>null() || REZ.ZK_P().ZLIM || null() ?});
      REZ.ILR:=_e;
      REZ.REFSQL:=$_b;
      REZ.SC:=_f;
      REZ.ZD_POZ:=_h;
      REZ.REA:='NN';
      REZ.JM:=REZ.M().J;
      {? _j || _nrk:=_j ?};
      {? _nrk>0
      || REZ.NRK:=_nrk
      || REZ.NRK:=exec('blnrkrez','rezerwacje',REZ.TYP,REZ.M)
      ?};
      {? _k<>''
      || REZ.REA:='T';
         REZ.REFREA:=_k
      ?};
      REZ.IL2:=_l;
      REZ.J2:={? _m=null || REZ.JM || _m ?};
      REZ.WS2:=_n;
      REZ.PROJEKT:=_o;
      REZ.UW:=_u;
      {? REZ.M().J2<>null()
      || {? _a='KARO' | _a='ZK_N' | _a='ZLIM'
         || REZ.J2:=REZ.M().J2;
            REZ.T2:='M';
            REZ.WS2:=exec('oblWSP','jm',REZ.M);
            REZ.IL2:=0;
            exec('oblJMG','jm',REZ,'ILR',0)
         |? _a='DK' & REZ.DK<>null()
         || REZ.IL2:=REZ.DK().IL2;
            REZ.WS2:=REZ.DK().WS2;
            REZ.T2:='M';
            REZ.J2:=REZ.M().J2
         |? _a='ZK_P' & REZ.ZK_P<>null()
         || REZ.J2:=REZ.M().J2;
            REZ.WS2:=REZ.ZK_P().WS2;
            REZ.T2:='M';
            REZ.IL2:=0;
            exec('oblJMG','jm',REZ,'ILR',0)
         || {? REZ.WS2=0 || REZ.WS2:=REZ.M().WS2 ?};
            {? REZ.J2=null() || REZ.J2:=REZ.M().J2 ?};
            {? REZ.IL2=0 | _noil2
            || _dokl_m:=exec('jaka_dok_mjm','jm',REZ.M,REZ.J2,REZ.M().J);
               {? _dokl_m<0 || _dokl_m:=exec('jaka_dok_m','jm',REZ.M) ?};
               REZ.IL2:={? REZ.WS2>0 || REZ.ILR/REZ.WS2 || 0 ?}$(_dokl_m+1);
               roundmet(BEER.MDOKL);
               REZ.IL2:=REZ.IL2 $ _dokl_m;
               roundmet(5)
            ?}
         ?}
      |? REZ.WS2<>0 & REZ.WS2<>1
      || _dokl_m:=exec('jaka_dok_mjm','jm',REZ.M,REZ.J2,REZ.M().J);
         {? _dokl_m<0 || _dokl_m:=exec('jaka_dok_m','jm',REZ.M) ?};
         REZ.IL2:={? _a='ZK_P' & REZ.ZK_P().RODZ='W'
                  || REZ.ILR/REZ.WS2
                  || REZ.ILR*REZ.WS2
                  ?}$ (_dokl_m+1);
         roundmet(BEER.MDOKL);
         REZ.IL2:=REZ.IL2 $ _dokl_m;
         roundmet(5)
      || REZ.IL2:=REZ.ILR
      ?};
      REZ.SESID:=_sesid;
      _wyn:={? REZ.add() || _ref:=REZ.ref(); REZ.NRK || 0 ?}
   || {? _i=3 & _e>0
      || {? ~((';FAP;KARO;ZLIM;'*_a)>1) || REZ.NRK:=REZ.ZK_P().NR ?};
         REZ.ILR:=_e;
         REZ.IL2:=_l
      || {? ~((';FAP;KARO;ZLIM;'*_a)>1) || REZ.NRK:=REZ.ZK_P().NR ?};
         REZ.ILR+=_e;
         REZ.IL2+=_l
      ?};
::    Dodatkowe modyfikacje, gdy rezerwacje do surowca zlecenia
      {? _a='ZLIM'
      || REZ.ODDT:=_p;
         REZ.DODT:=_q;
         {? var_pres('__ZLIM4REZ')>100
         || REZ.BTERM:=__ZLIM4REZ.BTERM
         ?}
      ?};
      {? REZ.M().J2<>null()
      || {? _a='KARO' | _a='ZLIM'
         || REZ.J2:=REZ.M().J2;
            REZ.T2:='M';
            REZ.WS2:=exec('oblWSP','jm',REZ.M);
            REZ.IL2:=0;
            exec('oblJMG','jm',REZ,'ILR',0)
         |? _a='DK' & REZ.DK<>null()
         || REZ.IL2:=REZ.DK().IL2;
            REZ.WS2:=REZ.DK().WS2;
            REZ.T2:='M';
            REZ.J2:=REZ.M().J2
         || {? REZ.WS2=0 || REZ.WS2:=REZ.M().WS2 ?};
            {? REZ.J2=null() || REZ.J2:=REZ.M().J2 ?};
            {? REZ.IL2=0 | _noil2
            || _dokl_m:=exec('jaka_dok_mjm','jm',REZ.M,REZ.J2,REZ.M().J);
               {? _dokl_m<0 || _dokl_m:=exec('jaka_dok_m','jm',REZ.M) ?};
               REZ.IL2:={? REZ.WS2>0 || REZ.ILR/REZ.WS2 || 0 ?}$(_dokl_m+1);
               roundmet(BEER.MDOKL);
               REZ.IL2:=REZ.IL2 $ _dokl_m;
               roundmet(5)
            ?}
         ?}
      |? REZ.WS2<>0 & REZ.WS2<>1
      || _dokl_m:=exec('jaka_dok_mjm','jm',REZ.M,REZ.J2,REZ.M().J);
         {? _dokl_m<0 || _dokl_m:=exec('jaka_dok_m','jm',REZ.M) ?};
         REZ.IL2:=REZ.ILR*REZ.WS2 $ (_dokl_m+1);
         roundmet(BEER.MDOKL);
         REZ.IL2:=REZ.IL2 $ _dokl_m;
         roundmet(5)
      || REZ.IL2:=REZ.ILR
      ?};
      _wyn:={? _e<=0 & (_a<>'KARO' | _a<>'TR_ZL') & _a<>'ZLIM' & (_i<>5 | _add)
            || 1
            || {? REZ.ILR<=0
               || _wyn:=REZ.NRK;
                  _del:=REZ.del(1,1);
                  _del>1
               || REZ.prefix(); {? REZ.put(1) || _ref:=REZ.ref(); REZ.NRK || 0 ?}
               ?}
            ?}
   ?}
?};
FAKS.cntx_pop();
FAP.cntx_pop();
ND.cntx_pop();
DK.cntx_pop();
ZK_N.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop()
|| _wyn:=1
?};
{? _restype>0
|| _obj:=obj_new('WYN','REF');
   _obj.WYN:=_wyn;
   _obj.REF:=_ref;
   _obj
|| _wyn
?}


\blnrkrez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wartosc pola NRK
::   WE: _a - typ
::       _b - ref M
::  OLD: \blnrkrez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
REZ.cntx_psh();
REZ.index('NRK');
REZ.prefix(_a,_b);
_wyn:={? REZ.last() || REZ.NRK || 0 ?}+1;
REZ.cntx_pop();
_wyn


\akturezy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizuje (przywraca dane) pozycje zamowienia
::   WE:  _a  - ref naglowka realizacji zamowienia
::       [_b] - czy usuwac zapisy o rezerwacji (T/N) [T - domyslnie]
::       [_c] - aktualizacja 1(domyslnie) rezerwacji 0-nie
::  OLD: \akturezy/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{?_>=2 || {? type_of(_b)<>2 || _b:='T' ?} || _b:='T' ?};
{?_>=3 || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};

{? _c
|| VAR_DEL.delete('__matakt');

   __matakt:=tab_tmp(2,'REF','STRING[16]',''
              ,'NRK','INTEGER',''
              ,'ILR','REAL',''
              ,'ZKP','STRING[16]',''
              ,'ZKN','STRING[16]','')
?};

_zkp:=tab_tmp(1,'ZKP','STRING[16]','');

ZK_P.cntx_psh();
ZK_RP.index('POZR');
ZK_RP.prefix(_a);
:: najpierw ze znacznikami wg dostaw
{? ZK_RP.first
|| {!
   |? ZK_P.clear();
      {? ZK_P.seek(ZK_RP.P)
      || {? ZK_RP.DOST & ZK_RP.SC<>''
         || exec('admatzkp','rezerwacje',$ZK_P.M,ZK_P.NR,ZK_RP.ILR,$ZK_RP.P().N,$ZK_RP.P);
            ZK_P.ILP+=ZK_RP.ILR;
            ZK_P.END:=0;
            {? ZK_P.ILP>ZK_P.ILZ || ZK_P.ILP:=ZK_P.ILZ ?};
            {? ZK_P.put(1)
            || exec('korZLZAM','zamsiw_rea',ZK_P.ref(),-ZK_RP.ILR);
::             Produkcja - jesli dostepny modul planow strategicznych to po udanej
::             modyfikacji pozycji zamowienia aktualizuje obiekt planowania
               {? exec('tpp_lic','tpp')='T'
               || exec('zkp2obj','px_obj')
               ?}
            ?};
            _zkp.clear(); {? ~_zkp.find_key($ZK_P.ref()) || _zkp.blank(); _zkp.ZKP:=$ZK_P.ref(); _zkp.add(1) ?};
            _std:=exec('obl_stad','magazyn_stan',ZK_P.M,ZK_RP.SC);
            _ile:={? _std>=ZK_RP.ILR || ZK_RP.ILR || _std ?};
            {? ZK_P.DT>=date() & _ile>0
            || {? ~exec('update','rezerwacje','ZK_P',ZK_P.ref(),ZK_RP.MG,ZK_P.M,_ile,ZK_RP.SC,'B','',4)
               || undo()
               ?}
            ?};
            ZK_RP.del()
         || ZK_RP.next()
         ?}
      || ZK_RP.next()
      ?}
   !}
?};
:: czesc bez rezerwacji wg dostaw
{? ZK_RP.first
|| _zkpbez:=tab_tmp(2,'ZKP','STRING[16]','','MAG','STRING[16]','','ILR','REAL','');
   {!
   |? ZK_P.clear();
      {? ZK_P.seek(ZK_RP.P)
      || exec('admatzkp','rezerwacje',$ZK_P.M,ZK_P.NR,ZK_RP.ILR,$ZK_RP.P().N,$ZK_RP.P);
         ZK_P.ILP+=ZK_RP.ILR;
         ZK_P.END:=0;
         {? ZK_P.ILP>ZK_P.ILZ || ZK_P.ILP:=ZK_P.ILZ ?};
         {? ZK_P.DT>=date() & ZK_RP.CZYREZ
         || ZK_P.REZ:=1;
            ZK_P.DOR+=ZK_RP.ILR;
            _mag:={? ZK_RP.MG<>null() || $ZK_RP.MG || 'xxx' ?};
            _zkpbez.clear();
            {? _zkpbez.find_key($ZK_P.ref(),_mag)
            || _zkpbez.ILR+=ZK_RP.ILR;
               _zkpbez.put(1)
            || _zkpbez.ZKP:=$ZK_P.ref();
               _zkpbez.ILR:=ZK_RP.ILR;
               _zkpbez.MAG:=_mag;
               _zkpbez.add(1)
            ?}
         ?};
         {? ZK_P.put(1)
         || exec('korZLZAM','zamsiw_rea',ZK_P.ref(),-ZK_RP.ILR);
::          Produkcja - jesli dostepny modul planow strategicznych to po udanej
::          modyfikacji pozycji zamowienia aktualizuje obiekt planowania
:: DRO:[rr] plik px_obj
            {? exec('tpp_lic','tpp')='T'
            || exec('zkp2obj','px_obj')
            ?}
         ?};
         _zkp.clear(); {? ~_zkp.find_key($ZK_P.ref()) || _zkp.blank(); _zkp.ZKP:=$ZK_P.ref(); _zkp.add(1) ?}
      ?};
      ZK_RP.del()
   !};
   _zkpbez.clear();
   {? _zkpbez.first()
   || {!
      |? _ildo:=_zkpbez.ILR;
         ZK_P.clear();
         {? _ildo>0 & ZK_P.seek(_zkpbez.ZKP)
         || _mag:={? ZK_P.RMAG<>null()
                  || ZK_P.RMAG
                  |? (_zkpbez.MAG<>'xxx')
                  || exec('FindAndGet','#table',MG,_zkpbez.MAG,,,null())
                  || null()
                  ?};
            {? _mag<>null
            || exec('obl_stan','magazyn_stan',ZK_P.M,1,_mag,,,,,,,,ZK_P.DK_C);
               _rezb:={? BEER.SD>=_ildo || _ildo || BEER.SD ?};
               {? _rezb>0
               || exec('update','rezerwacje','ZK_P',ZK_P.ref(),_mag,ZK_P.M,_rezb,,'B',,4,ZK_P.NR,'');
                  _ildo-=_rezb
               ?};
               {? _ildo>0
               || exec('update','rezerwacje','ZK_P',ZK_P.ref(),_mag,ZK_P.M,_ildo,,'W',,1,ZK_P.NR)
               ?}
            || BUFMG.index('NR');
               BUFMG.prefix(OPERATOR.USER,{? ZK_P.RODZ='Z' || 2 || 9 ?});
               {? BUFMG.first()
               || {!
                  |? {? BUFMG.MG().ODDZ=ST.ODDZ_KOD & BUFMG.MG().PAL<>'T'
                     || exec('obl_stan','magazyn_stan',ZK_P.M,1,BUFMG.MG,,,,,,,,ZK_P.DK_C);
                        _rezb:={? BEER.SD>=_ildo || _ildo || BEER.SD ?};
                        {? _rezb>0
                        || exec('update','rezerwacje','ZK_P',ZK_P.ref(),BUFMG.MG,ZK_P.M,_rezb,,'B',,4,ZK_P.NR,'');
                           _ildo-=_rezb
                        ?}
                     ?};
                     _ildo>0 & BUFMG.next()
                  !}
               ?};
               {? _ildo>0
               || exec('update','rezerwacje','ZK_P',ZK_P.ref(),null,ZK_P.M,_ildo,,'W',,1,ZK_P.NR)
               ?}
            ?}
         ?};
         _zkpbez.next()
      !}
   ?};
   obj_del(_zkpbez)
?};
exec('aktznzkp','zamsiw_poz',_zkp);

ZK_P.cntx_pop();
obj_del(_zkp);

{? _c
|| exec('akt_rezy','rezerwacje');
   VAR_DEL.delete('__matakt')
?};
''


\admatzkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizuje tabelke zrealizowanych pozycji zamowien
::   WE:  _a - ref SQL M
::        _b - kolejny numer w kolejce
::        _c - ilosc zrealizowana
::        _d - ref SQL ZK_N
::        _e - ref SQL ZK_P
::        [_f] - _matakt
::        [_g] - 1-ze sczegółowością do pozycji zamówienia 0-nie(domyślnie)
::  OLD: \admatzkp/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_f')>100 || _matakt:=_f || _matakt:=__matakt ?};
{? var_pres('_g')=type_of(0) || _zkp:=_g || _zkp:=0 ?};

_matakt.clear();
_matakt.prefix(_a,_b);
{? _matakt.first() & (~_zkp | (_ok:=0;
                               {!
                               |? _ok:=_matakt.ZKN=_d & _matakt.ZKP=_e;
                                  ~_ok & _matakt.next()
                               !};
                               _ok))
|| _matakt.ILR+=_c;
   _matakt.put(1)
|| _matakt.blank();
   _matakt.REF:=_a;
   _matakt.ILR:=_c;
   _matakt.NRK:=_b;
   _matakt.ZKN:=_d;
   _matakt.ZKP:=_e;
   _matakt.add(1)
?}


\spr_waru
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza istnienie rezerwacji warunkowych wygenerowanych automatycznie
::   WE: _a - ref ZK_P
::   WY: 1-tak 0-nie
::  OLD: \spr_waru/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ZK_P.cntx_psh();
REZ.cntx_psh();
REZ.index('ZK_PA');
REZ.prefix(_a,'W',1);
_wyn:=REZ.first();
{? ~_wyn
|| REZ.index('ZK_PA');
   REZ.prefix(_a,'W',0);
   {? REZ.first() || {! |? {? REZ.ODDT<=date() || _wyn:=1; 0 || REZ.next() ?} !} ?}
?};
ZK_P.cntx_pop();
REZ.cntx_pop();
_wyn


\ile_reze
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zwraca tabele ilosci rezerwowanych
::   WE: _a - ref ZK_P
::       [_b] - 1-dodatkowo wypelnienie tabeli __magmat 0-nie wypelniac
::   WY: tabela danych 1-suma do rezerwacji 2-rez.bezwarunkowe 3-rez.warunkowe 4-rez.wg dostaw 5-auto warunkowe
::  OLD: \ile_reze/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

_wyn:=obj_new(6);
{! _i..6 |! _wyn[_i]:=0 !};
ZK_P.cntx_psh();
REZ.cntx_psh();
REZ.index('ZK_P');
REZ.prefix(_a);
{? REZ.first()
|| _rezzlzam:={? REZ.ZK_P().RODZ='Z' || exec('get','#params',300812,2) || exec('get','#params',600812,2) ?}='T';
   {!
   |? _wyn[1]+=REZ.ILR;
      {? REZ.RODZ='B'
      || _wyn[2]+=REZ.ILR;
         {? REZ.SC<>'' || _wyn[4]+=REZ.ILR ?}
      |? REZ.RODZ='W'
      || _wyn[3]+=REZ.ILR;
         _wyn[6]+={? _rezzlzam & REZ.ZLZAM<>null() || REZ.ILR || 0 ?};
         {? REZ.AUTO || _wyn[5]+=REZ.ILR ?}
      ?};
      {? _b
      || _mag:={? REZ.MG<>null || $REZ.MG || 'a' ?};
         __magmat.clear();
         {? ~__magmat.find_key($REZ.M,_mag)
         || __magmat.blank();
            __magmat.MAG:=_mag;
            __magmat.MAT:=$REZ.M;
            __magmat.add(1)
         ?}
      ?};
      REZ.next()
   !}
?};
REZ.cntx_pop();
ZK_P.cntx_pop();
_wyn


\ile_rezz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: zwraca tabele ilosci rezerwowanych dla ZLIM
::   WE: _a - $ZLIM.ref()
::   WY: tabela danych 1-suma do rezerwacji 2-rez.bezwarunkowe 3-rez.warunkowe 4-rez.wg dostaw 5-auto warunkowe
::----------------------------------------------------------------------------------------------------------------------
_zlim:={? var_pres('_a')=type_of('') || _a || '' ?};

_wyn:=obj_new(5);
{! _i..5 |! _wyn[_i]:=0 !};
{? _zlim<>''
|| REZ.cntx_psh();
   REZ.index('ZLIMA');
   REZ.prefix(_zlim,);
   {? REZ.first()
   || {!
      |? _wyn[1]+=REZ.ILR;
         {? REZ.RODZ='B'
         || _wyn[2]+=REZ.ILR;
            {? REZ.SC<>'' || _wyn[4]+=REZ.ILR ?}
         |? REZ.RODZ='W'
         || _wyn[3]+=REZ.ILR;
            {? REZ.AUTO || _wyn[5]+=REZ.ILR ?}
         ?};
         REZ.next()
      !}
   ?};
   REZ.cntx_pop()
?};
_wyn


\akt_rezy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizuje na pozycjach zamowienia
::   WE: [_a] - _matakt
::       [_b] - 1-ograniczenie do magazynów na podstawie pozycji zamówień, 0(domyślnie)-nie
::  OLD: \akt_rezy/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100 || _matakt:=_a |? var_pres('__matakt')>100 || _matakt:=__matakt || return(0) ?};
_ogrmg:={? var_pres('_b')=type_of(0) || _b || 0 ?};

VAR_DEL.delete('__stm','__zkn_t','__zkp_t','__usr_t');
__stm:=tab_tmp(1,'MAG','STRING[16]',''
        ,'SD','REAL',''
        ,'SR','REAL',''
        ,'SP','REAL',''
        ,'BYL','INTEGER','');

__usr_t:=tab_tmp(2,'USR','STRING[16]',''
          ,'TYP','STRING[1]',''
          ,'SD','REAL','');

__zkp_t:=sql('select distinct :_a.ZKP from :_a order by 1',_matakt);
__zkn_t:=sql('select distinct :_a.ZKN from :_a order by 1',_matakt);
_mat:=sql('select distinct :_a.REF, :_a.NRK, :_a.ILR from :_a order by 1,2,3',_matakt);
{? _ogrmg
|| _ogrmg:=0;
   _mag:=sql('select distinct :_a.REF,ZK_P.RMAG from :_a join @ZK_P using(:_a.ZKP,ZK_P.REFERENCE) order by 1',_matakt);
   {? _mag.first()
   || {!
      |? _ogrmg:=_mag.RMAG<>'';
         _ogrmg & _mag.next()
      !}
   ?};
   {? ~_ogrmg || obj_del(_mag) ?}
?};

_us:=OPERATOR.USER;

_bufmat:='';
_mat.clear();
{? _mat.first()
|| {!
   |? _refmat:=exec('FindAndGet','#table','M',_mat.REF,,,null());
::    ogolna liczba zwolniona do rozpisania
      _doroz:=_mat.ILR;
      {? _doroz>0
      ||
         REZ.cntx_psh();
         REZ.index('M');
         REZ.prefix(_refmat,'Z','W');
         {? REZ.find_ge(_mat.NRK)
         || {!
            |?
::             pobieramy stany dostepne
               {? REZ.ZLZAM=null() & REZ.ILR>0 & REZ.ODDT<=date() & REZ.RP_REZ='N'
               || _ref:=REZ.ref(); _ok:=REZ.next();
                  REZ.cntx_psh();
                  REZ.clear();
                  {? REZ.seek(_ref)
                  || _ilrw:=REZ.ILR; _zk_p:=REZ.ZK_P; _sc:=REZ.SC; _zk_n:=REZ.ZK_N;
                     _typ:={? REZ.ZK_P().RODZ='Z' || 4 || 10 ?};
                     _dkc:={? REZ.DK_C<>null || REZ.DK_C || REZ.ZK_P().DK_C ?};
                     {? REZ.MG<>null
                     ||
::                      przypisany magazyn
                        _ileroz:=exec('aktu_one','rezerwacje',REZ.MG,_refmat,_ilrw,_zk_p,_sc,_dkc);
                        {? _ileroz>0
                        || __zkp_t.clear(); {? ~__zkp_t.find_key($_zk_p) || __zkp_t.ZKP:=$_zk_p; __zkp_t.add(1) ?};
                           __zkn_t.clear(); {? ~__zkn_t.find_key($_zk_n) || __zkn_t.ZKN:=$_zk_n; __zkn_t.add(1) ?}
                        ?};
                        _doroz-=_ileroz
                     ||
::                      magazyny wg uprawnien
                        BUFMG.index('NR');
                        BUFMG.prefix(REZ.US,_typ);
                        {? BUFMG.first()
                        || {!
                           |? {? BUFMG.MG().ODDZ=ST.ODDZ_KOD & BUFMG.MG().PAL<>'T'
                              || _ileroz:=exec('aktu_one','rezerwacje',BUFMG.MG,_refmat,_ilrw,_zk_p,_sc,_dkc);
                                 {? _ileroz>0
                                 || __zkp_t.clear();
                                    {? ~__zkp_t.find_key($_zk_p)
                                    || __zkp_t.ZKP:=$_zk_p; __zkp_t.add(1)
                                    ?};
                                    __zkn_t.clear();
                                    {? ~__zkn_t.find_key($_zk_n)
                                    || __zkn_t.ZKN:=$_zk_n; __zkn_t.add(1)
                                    ?}
                                 ?};
                                 _doroz-=_ileroz;
                                 _ilrw-=_ileroz
                              ?};
                              _ilrw>0 & BUFMG.next()
                           !}
                        ?}
                     ?}
                  ?};
                  REZ.cntx_pop()
               || _ok:=REZ.next()
               ?};
               _doroz>0 & _ok
            !}
         ?};
         REZ.cntx_pop()
      ?};
      _mat.next()
   !}
?};
exec('aktznzkp','zamsiw_poz',__zkp_t);
{? _ogrmg
|| {? _mag.first()
   || _bufmat:='';
      {!
      |? _refmat:=exec('FindAndGet','#table','M',_mag.REF,,,null());
         _refmag:=exec('FindAndGet','#table','MG',_mag.RMAG,,,null());
         exec('akt_stan','magazyn_stan',__stm,_refmat,_refmag);
         {? _bufmat<>_mag.REF
         ||
::          pozycje bez rezerwacji
::          teraz aktualizacja znacznikow ZBB i ZBZ
            exec('bez_rez','rezerwacje',_refmat)
         ?};
         __stm.clear(); {? __stm.first() || {! |? __stm.del() !} ?};
         __usr_t.clear(); {? __usr_t.first() || {! |? __usr_t.del() !} ?};
         _bufmat:=_mag.REF;
         _mag.next()
      !}
   ?}
|| {? _mat.first()
   || _refmat:=exec('FindAndGet','#table','M',_mat.REF,,,null());
      _bufmat:=_mat.REF;
      {!
      |? _next:=_mat.next();
         {? {? _next || _bufmat<>_mat.REF || 1 ?}
         || exec('akt_stan','magazyn_stan',__stm,_refmat,null);
::       pozycje bez rezerwacj
::       teraz aktualizacja znacznikow ZBB i ZBZ
            exec('bez_rez','rezerwacje',_refmat);
            __stm.clear(); {? __stm.first() || {! |? __stm.del() !} ?};
            __usr_t.clear(); {? __usr_t.first() || {! |? __usr_t.del() !} ?};
            _refmat:=exec('FindAndGet','#table','M',_mat.REF,,,null());
            _bufmat:=_mat.REF
         ?};
         _next
      !}
   ?}
?};

exec('aktznzkn','zamsiw_nag',__zkn_t);

VAR_DEL.delete('__stm','__zkn_t','__zkp_t','__usr_t');
obj_del(_mat);
{? _ogrmg || obj_del(_mag) ?};
OPERATOR.USER:=_us;
~~


\aktu_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizuje dane po usuniecie pozycji
::   WE: _a - magazyn
::       _b - material
::       _c - ilosc REZ.ILR
::       _d - ref ZK_P
::       _e - wartosc pola REZ.SC
::       _f - ref DK_C
::   WY: ile rozpisano
::  OLD: \aktu_one/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;

_ilrw:=_c;
_std:=0;
_sdkc:=0;
{? _f<>null
|| exec('obl_stan','magazyn_stan',_b,1,_a,,,,,,,,_f);
   _ilemg:=BEER.SD;
   _sdkc:=exec('stnwgdkc','magazyn_stan',_a,_b,_f,1);
   {? _sdkc>=_ilemg || _sdkc:=_ilemg ?}
?};
__stm.clear();
{? ~__stm.find_key($_a)
|| exec('obl_stan','magazyn_stan',_b,1,_a);
   __stm.blank();
   __stm.MAG:=$_a;
   __stm.SD:=BEER.SD;
   __stm.SR:=0;
   __stm.SP:=BEER.SD;
   __stm.add(1)
?};
_std:={? _f<>null || _sdkc || __stm.SD ?};
_ilrb:=0;
{? _std>0
|| {? _std>=_ilrw
   || _del:=0;
      _ilrb:=_ilrw;
      REZ.cntx_psh();
      REZ.index('URODZ');
      REZ.prefix(_d,_b,_a,'B',_e,);
      {? REZ.first()
      || REZ.ILR+=_ilrb;
         exec('uzgildod','rezerwacje');
         _del:=REZ.put(1)
      ?};
      REZ.cntx_pop();
      {? _del
      || REZ.del(1,1)
      || REZ.ODDT:=date();
         REZ.RODZ:='B';
         REZ.RP_REZ:='N';
         REZ.MG:=_a;
         REZ.put(1)
      ?}
   || _del:=0;
      _ilrb:=_std;
      REZ.cntx_psh();
      REZ.index('URODZ');
      REZ.prefix(_d,_b,_a,'B',_e,);
      {? REZ.first()
      || REZ.ILR+=_ilrb;
         exec('uzgildod','rezerwacje');
         _del:=REZ.put(1)
      ?};
      REZ.cntx_pop();
      {? _del
      || REZ.ILR-=_ilrb;
         exec('uzgildod','rezerwacje');
         REZ.put(1)
      || REZ.ILR-=_ilrb;
         exec('uzgildod','rezerwacje');
         REZ.put(1);
         REZ.cntx_psh();
         REZ.ODDT:=date();
         REZ.RODZ:='B';
         REZ.RP_REZ:='N';
         REZ.ILR:=_ilrb;
         REZ.MG:=_a;
         exec('uzgildod','rezerwacje');
         REZ.add(1);
         REZ.cntx_pop()
      ?}
   ?};
   _wyn:=_ilrb;
   __stm.SD-=_ilrb;
   __stm.SR+=_ilrb;
   __stm.put(1)
?};
_wyn


\bez_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizuje znaczniki pozycji bez rezerwacji
::   WE: _a - ref materialu
::       _b
::   WY: 1-sa takowe pozycje 0-brak
::  OLD: \bez_rez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;

ZK_P.index('CZYBEZ');
ZK_P.prefix('A','T',1,_a);
{? ZK_P.first()
|| _wyn:=1;
   {!
   |? {? ZK_P.ILP>0
      || _czypal:=ZK_P.RMAG<>null & ZK_P.RMAG().PAL='T';
         _typ:={? ZK_P.RODZ='Z' || 4 || 10 ?};
         _rodz:=ZK_P.RODZ;
         _zbb:=_zbz:='N';
::       obliczenie mozliwosci realizacji pozycji bez zalozonej rezerwacji
         _std:=0;
         _sdkc:=0;
         _susrz:=0;
         _susrw:=0;
         {? ZK_P.RMAG<>null
         || _dostawy:=(1+ZK_P.RMAG().TYP)='D' & ZK_P.DK_C<>null;
            {? _dostawy
            || exec('obl_stan','magazyn_stan',ZK_P.M,1,ZK_P.RMAG,,,,,,,,ZK_P.DK_C);
               _ilemg:=BEER.SD;
               _sdkc:=exec('stnwgdkc','magazyn_stan',ZK_P.RMAG,ZK_P.M,ZK_P.DK_C,1);
               {? _sdkc>=_ilemg || _sdkc:=_ilemg ?}
            ?};
            __stm.clear();
            {? ~__stm.find_key($ZK_P.RMAG)
            || BEER.SD:=exec('FindInSet','#table','SM','SM',_a,ZK_P.RMAG,"SM.SD",,,0);
               __stm.blank();
               __stm.MAG:=$ZK_P.RMAG;
               __stm.SD:=BEER.SD;
               __stm.SR:=0;
               __stm.SP:=BEER.SD;
               __stm.BYL:=0;
               __stm.add(1)
            || __stm.BYL:=0;
               __stm.put(1)
            ?};
            _std:={? _dostawy || _sdkc || __stm.SD ?}
         || __usr_t.clear();
            {? ZK_P.DK_C<>null() | ~__usr_t.find_key($ZK_P.US,_rodz)
            || BUFMG.index('NR');
               BUFMG.prefix(ZK_P.US,_typ);
               {? BUFMG.first()
               || {!
                  |? {? BUFMG.MG().ODDZ=ST.ODDZ_KOD & {? _czypal || BUFMG.MG().PAL='T' || BUFMG.MG().PAL<>'T' ?}
                     || _dostawy:=(1+BUFMG.MG().TYP)='D' & ZK_P.DK_C<>null;
                        {? _dostawy
                        || exec('obl_stan','magazyn_stan',ZK_P.M,1,BUFMG.MG,,,,,,,,ZK_P.DK_C);
                           _ilemg:=BEER.SD;
                           _sdkc:=exec('stnwgdkc','magazyn_stan',BUFMG.MG,ZK_P.M,ZK_P.DK_C,1);
                           {? _sdkc>=_ilemg || _sdkc:=_ilemg ?}
                        ?};
                        __stm.clear();
                        {? ~__stm.find_key($BUFMG.MG)
                        || BEER.SD:=exec('FindInSet','#table','SM','SM',_a,BUFMG.MG,"SM.SD",,,0);
                           __stm.blank();
                           __stm.MAG:=$BUFMG.MG;
                           __stm.SD:=BEER.SD;
                           __stm.SR:=0;
                           __stm.SP:=BEER.SD;
                           __stm.BYL:=0;
                           __stm.add(1)
                        || __stm.BYL:=0;
                           __stm.put(1)
                        ?};
                        {? _rodz='Z' || _susrz+=__stm.SD || _susrw+=__stm.SD ?};
                        _std+={? _dostawy || _sdkc || __stm.SD ?}
                     ?};
                     BUFMG.next()
                  !}
               ?};
               {? ~__usr_t.find_key($ZK_P.US,_rodz)
               || __usr_t.blank();
                  __usr_t.USR:=$ZK_P.US;
                  __usr_t.TYP:=_rodz;
                  {? _rodz='Z' || __usr_t.SD:=_susrz || __usr_t.SD:=_susrw ?};
                  __usr_t.add(1)
               ?}
            || _std:=__usr_t.SD
            ?}
         ?};
         {? _std>0
         || {? _std>=ZK_P.ILBEZ
            || _zbb:='T'
            |? _std>0 & _std<ZK_P.ILBEZ
            || _zbb:=_zbz:='T'
            || _zbz:='T'
            ?}
         || _zbz:='T'
         ?};

         {? (ZK_P.ZBB<>_zbb) | (ZK_P.ZBZ<>_zbz)
         || ZK_P.ZBB:=_zbb;
            ZK_P.ZBZ:=_zbz;
            _refzkp:=ZK_P.ref();
            {? (#_refzkp)>0 & ZK_P.r_lock(1,1,1,#_refzkp,ref_name(_refzkp)) & ZK_P.r_lock(1,1,1)
            || ZK_P.put(1);
               ZK_P.r_unlock()
            ?};
            __zkn_t.clear(); {? ~__zkn_t.find_key($ZK_P.N) || __zkn_t.ZKN:=$ZK_P.N; __zkn_t.add(1) ?}
         ?};
         {? _std>0
         || _dost:=_std;
            _mat:=ZK_P.M; _ref:=ZK_P.ref(); _nag:=ZK_P.N; _dkc:=ZK_P.DK_C; _rmag:=ZK_P.RMAG;
            ZK_P.cntx_psh();
            ZK_P.index('CZYBEZN');
            {? ZK_P.prefix('A','T',_nag,1,_mat,'T'); ZK_P.first()
            || 0
            |? (ZK_P.prefix('A','T',_nag,1,_mat,'N'); ZK_P.last()) & ZK_P.size()>0 & ZK_P.ref()=_ref
            ||
::             kilka pozycji
               _tmag:=tab_tmp(1,'MAG','STRING[16]','','ILD','REAL','');
               {? ZK_P.RMAG=null
               || BUFMG.index('NR');
                  BUFMG.prefix(ZK_P.US,{? ZK_P.RODZ='Z' || 4 || 10 ?});
                  {? BUFMG.first()
                  || {!
                     |? {? BUFMG.MG().ODDZ=ST.ODDZ_KOD & BUFMG.MG().PAL<>'T'
                        || _tmag.clear();
                           {? ~_tmag.find_key($BUFMG.MG)
                           || __stm.clear();
                              {? __stm.find_key($BUFMG.MG)
                              || _dostawy:=(1+BUFMG.MG().TYP)='D' & _dkc<>null;
                                 {? _dostawy
                                 || exec('obl_stan','magazyn_stan',_mat,1,BUFMG.MG,,,,,,,,_dkc);
                                    _ild:=BEER.SD
                                 || _ild:=__stm.SD
                                 ?}
                              || BEER.SD:=exec('FindInSet','#table','SM','SM',_a,BUFMG.MG,"SM.SD",,,0);
                                 _ild:=BEER.SD
                              ?};
                              _tmag.blank();
                              _tmag.MAG:=$BUFMG.MG;
                              _tmag.ILD:=_ild;
                              _tmag.add(1)
                           ?}
                        ?};
                        BUFMG.next()
                     !}
                  ?}
               || _tmag.clear();
                  {? ~_tmag.find_key($ZK_P.RMAG)
                  || __stm.clear();
                     {? __stm.find_key($ZK_P.RMAG)
                     || _ild:=__stm.SD
                     || BEER.SD:=exec('FindInSet','#table','SM','SM',_a,ZK_P.RMAG,"SM.SD",,,0);
                        _ild:=BEER.SD
                     ?};
                     _tmag.blank();
                     _tmag.MAG:=$ZK_P.RMAG;
                     _tmag.ILD:=_ild;
                     _tmag.add(1)
                  ?}
               ?};
::             pierwszy przebieg po ZK_P z magazynem
               _brak:=0;
               {!
               |? {? ZK_P.RMAG<>null & ZK_P.ILBEZ>0
                  || _tmag.clear();
                     {? _tmag.find_key($ZK_P.RMAG)
                     || {? _tmag.ILD>=ZK_P.ILBEZ
                        || _tmag.ILD-=ZK_P.ILBEZ;
                           {? _tmag.ILD=0 || _tmag.del() || _tmag.put(1) ?}
                        || ZK_P.prefix();
                           ZK_P.ZBZ:='T';
                           ZK_P.put(1);
                           _brak:=1
                        ?}
                     ?}
                  ?};
                  ~_brak & ZK_P.prev()
               !};
::             drugi bez magazynow
               {? ~_brak & ZK_P.last()
               || {!
                  |? {? ZK_P.RMAG=null & ZK_P.ILBEZ>0
                      & {? ZK_P.DK_C<>null() || exec('czyzawch','mat_atr',ZK_P.DK_C,_dkc) || 1 ?}
                     || _ilbez:=ZK_P.ILBEZ;
                        _tmag.clear();
                        {? _tmag.first()
                        || {!
                           |? {? _tmag.ILD>=_ilbez
                              || _tmag.ILD-=_ilbez;
                                 {? _tmag.ILD=0 || _tmag.del() || _tmag.put(1) ?};
                                 _ilbez:=0
                              |? _tmag.ILD>0
                              || _ilbez-=_tmag.ILD;
                                 _tmag.ILD:=0;
                                 _tmag.put(1)
                              ?};
                              ~_brak & _ilbez>0 & _tmag.next()
                           !};
                           {?_ilbez>0 & ~_brak
                           || ZK_P.prefix();
                              ZK_P.ZBZ:='T';
                              ZK_P.put(1);
                              _brak:=1
                           ?}
                        ?}
                     ?};
                     ~_brak & ZK_P.prev()
                  !}
               ?};
               obj_del(_tmag)
            || {? _dost>=ZK_P.ILBEZ
               || _zbb:='T'
               |? _dost>0 & _dost<ZK_P.ILBEZ
               || _zbb:=_zbz:='T'
               || _zbz:='T'
               ?}
            ?};
            ZK_P.cntx_pop()
         ?}
      ?};
      ZK_P.next()
   !}
?};
_wyn


\uzgildod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: przeliczenie pola REZ.IL2 po zmianie lub dodaniu dla rezerwacji
::  OLD: \uzgildod/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? REZ.WS2<>0 & REZ.WS2<>1
|| _dokl_m:=exec('jaka_dok_mjm','jm',REZ.M,REZ.J2,REZ.M().J);
   {? _dokl_m<0 || _dokl_m:=exec('jaka_dok_m','jm',REZ.M) ?};
   REZ.IL2:=REZ.ILR*REZ.WS2 $ (_dokl_m+1);
   roundmet(BEER.MDOKL);
   REZ.IL2:=REZ.IL2 $ _dokl_m;
   roundmet(5)
|| REZ.IL2:=REZ.ILR
?};
~~


\aktu_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizuje dane po usuniecie pozycji
::   WE: _a - material
::       _b - numer w kolejce
::       _c - zmieniona ilosc
::       [_d] - ref ZK_N do aktualizacji domyslnie ''
::       [_e] - tabela ZK_P do aktualizacji
::       [_f] - magazyn do ewentulanego odtworzenia stanow domyslnie null
::   WY: ~~ lub tabela ref-ow ZK_N, gdy podano parametr _e
::  OLD: \aktu_rez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_tabl:=1;
{? _>=4 || {? type_of(_d)<>2 || _d:='' ?} || _d:='' ?};
{? _>=5 || {? type_of(_e)<>118 || _tabl:=0; _e:=0 ?} || _tabl:=0; _e:=0 ?};
{? _>=6 || {? type_of(_f)<>7 || _f:=null ?} || _f:=null ?};

_us:=OPERATOR.USER;

ZK_N.cntx_psh();
ZK_P.cntx_psh();

VAR_DEL.delete('__stm','__zkp_t','__zkn_t','__usr_t');
__stm:=tab_tmp(1,'MAG','STRING[16]',''
        ,'SD','REAL',''
        ,'SR','REAL',''
        ,'SP','REAL',''
        ,'BYL','INTEGER','');

__usr_t:=tab_tmp(2,'USR','STRING[16]',''
          ,'TYP','STRING[1]',''
          ,'SD','REAL','');

__zkp_t:=tab_tmp(1,'ZKP','STRING[16]','');
__zkn_t:=tab_tmp(1,'ZKN','STRING[16]','');

{? _d<>''
|| __zkn_t.blank();
   __zkn_t.ZKN:=_d;
   __zkn_t.add(1)
?};

{? _tabl
|| _e.clear();
   _e.prefix($_a);
   {? _e.first()
   || {!
      |? __zkp_t.blank();
         __zkp_t.ZKP:=_e.ZKP;
         __zkp_t.add(1);
         _e.next()
      !}
   ?}
?};

:: ogolna liczba zwolniona do rozpisania
_doroz:=_c;
_odst:=-1;

_buftrzl:=tab_tmp(1,'TR_ZL','STRING[50]','');

{? _doroz>0
|| _odst:=0;
   REZ.cntx_psh();
   REZ.index('M');
   REZ.prefix(_a,'Z','W');
   {? REZ.find_ge(_b)
   || {!
      |?
::       pobieramy stany dostepne
         {? REZ.ZLZAM=null() & REZ.ILR>0 & REZ.ODDT<=date() & REZ.RP_REZ='N'
         || _ref:=REZ.ref(); _ok:=REZ.next();
            REZ.cntx_psh();
            REZ.clear();
            {? REZ.seek(_ref)
            || {? REZ.TR_ZL<>''
               || _buftrzl.clear();
                  _buftrzl.prefix(REZ.TR_ZL);
                  {? ~_buftrzl.first()
                  || _buftrzl.blank();
                     _buftrzl.TR_ZL:=REZ.TR_ZL;
                     _buftrzl.add(1)
                  ?}
               ?};
               _odst:=1;
               _ilrw:=REZ.ILR; _zk_p:=REZ.ZK_P; _sc:=REZ.SC; _zk_n:=REZ.ZK_N;
               _typ:={? REZ.ZK_P().RODZ='Z' || 4 || 10 ?};
               _dkc:={? REZ.DK_C<>null || REZ.DK_C || REZ.ZK_P().DK_C ?};
               {? REZ.MG<>null
               ||
::                przypisany magazyn
                  _ileroz:=exec('aktu_one','rezerwacje',REZ.MG,_a,_ilrw,_zk_p,_sc,_dkc);
                  {? _ileroz>0
                  || __zkp_t.clear(); {? ~__zkp_t.find_key($_zk_p) || __zkp_t.ZKP:=$_zk_p; __zkp_t.add(1) ?};
                     __zkn_t.clear(); {? ~__zkn_t.find_key($_zk_n) || __zkn_t.ZKN:=$_zk_n; __zkn_t.add(1) ?}
                  ?};
                  _doroz-=_ileroz
               ||
::                magazyny wg uprawnien
                  BUFMG.index('NR');
                  BUFMG.prefix(REZ.US,_typ);
                  {? BUFMG.first()
                  || {!
                     |? {? BUFMG.MG().ODDZ=ST.ODDZ_KOD & BUFMG.MG().PAL<>'T'
                        || _ileroz:=exec('aktu_one','rezerwacje',BUFMG.MG,_a,_ilrw,_zk_p,_sc,_dkc);
                           {? _ileroz>0
                           || __zkp_t.clear(); {? ~__zkp_t.find_key($_zk_p) || __zkp_t.ZKP:=$_zk_p; __zkp_t.add(1) ?};
                              __zkn_t.clear(); {? ~__zkn_t.find_key($_zk_n) || __zkn_t.ZKN:=$_zk_n; __zkn_t.add(1) ?}
                           ?};
                           _doroz-=_ileroz;
                           _ilrw-=_ileroz
                        ?};
                        _ilrw>0 & BUFMG.next()
                     !}
                  ?}
               ?}
            ?};
            REZ.cntx_pop()
         || _ok:=REZ.next()
         ?};
         _doroz>0 & _ok
      !}
   || _odst:=0
   ?};
   REZ.cntx_pop()
?};
{? _odst>0
|| exec('akt_stan','magazyn_stan',__stm,_a,_f)
|? _f<>null()
|| exec('obl_stan','magazyn_stan',_a,1,_f)
|| _bmag:=tab_tmp(1,'SQL','STRING[16]','');
   BUFMG.index('US');
   BUFMG.prefix(OPERATOR.USER,4);
   {? BUFMG.first()
   || {!
      |? {? BUFMG.MG().ODDZ=ST.ODDZ_KOD
         || exec('obl_stan','magazyn_stan',_a,1,BUFMG.MG);
            _bmag.clear();
            _bmag.SQL:=$BUFMG.MG;
            _bmag.add(1)
         ?};
         BUFMG.next()
      !}
   ?};
   BUFMG.index('US');
   BUFMG.prefix(OPERATOR.USER,10);
   {? BUFMG.first()
   || {!
      |? _bmag.clear();
         {? BUFMG.MG().ODDZ=ST.ODDZ_KOD & ~_bmag.find_key($BUFMG.MG)
         || exec('obl_stan','magazyn_stan',_a,1,BUFMG.MG)
         ?};
         BUFMG.next()
      !}
   ?};
   obj_del(_bmag)
?};
{? _odst<>-1 || exec('aktznzkp','zamsiw_poz',__zkp_t) ?};

:: pozycje bez rezerwacji
:: teraz aktualizacja znacznikow ZBB i ZBZ
{? _doroz>0 & exec('bez_rez','rezerwacje',_a) || exec('akt_stan','magazyn_stan',__stm,_a,_f) ?};

{? ~_tabl | _d<>'' || exec('aktznzkn','zamsiw_nag',__zkn_t) ?};

ZK_N.cntx_pop();
ZK_P.cntx_pop();

_buftrzl.clear();
{? _buftrzl.first()
|| {!
   |? exec('aktILRtr_zl','transport_zlec',_buftrzl.TR_ZL);
      _buftrzl.next()
   !}
?};
obj_del(_buftrzl);
OPERATOR.USER:=_us;
_wyn:={? _tabl || __zkn_t || ~~ ?};
VAR_DEL.delete('__stm','__zkn_t','__zkp_t','__usr_t');
_wyn


\returnrt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przywraca rezerwacje tymczasowa na podstawie danej pozycji
::   WE: _a - ref SQL pozycji dokumentu
::       _b - kod maski - 3 znaki
::       _c - 2-powrot rezerwacji 0-sprawdzenie 1-usuniecie informacji
::       _d - kontrahent
::   WY: 1-przywrocono 0-nie
::  OLD: \returnrt/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=3;
_hist:=(REZ.name()-3)+_b;
_mask:=REZ.name();

REZ.cntx_psh();
REZ.use(_hist);
REZ.index('POZSQL');
REZ.prefix(_a,_a);
{? REZ.first()
|| {? _c=0
   || {? _d<>REZ.KH
      || _wyn:=1
      |? REZ.ILR>0
      || _rodz:=exec('get','#params',3008,2,OPERATOR.USER);
         {? _rodz='P'
         || _wyn:=FUN.choice('Pozycja powstała z rezerwacji tymczasowej.\n'@+
                   'Wybierz jedną z opcji?'@,,'Wyłącznie usunięcie pozycji'@,'Przywrócenie rezerwacji'@)
         |? _rodz='T'
         || _wyn:=2
         || _wyn:=1
         ?}
      || _wyn:=1
      ?}
   |? _c=1 | _c=3
   || {! |? REZ.del !}
   |? _c=2
   || {!
      |? _refsql:=REZ.REFSQL;
         _ilr:=REZ.ILR;
         REZ.cntx_psh();
         REZ.use((_mask-2)+'__');
         REZ.clear();
         {? _refsql=''
         || REZ.POZSQL:='';
            REZ.REFSQL:='';
            _wyn:=REZ.add(1)
         || REZ.clear();
            {? REZ.seek(_refsql)
            || REZ.ILR+=_ilr;
               _wyn:=REZ.put(1)
            || REZ.POZSQL:='';
               REZ.REFSQL:='';
               _wyn:=REZ.add(1)
            ?}
         ?};
         {? _wyn || exec('obl_stan','magazyn_stan',REZ.M,1,REZ.MG) ?};
         REZ.cntx_pop();
         _oki:=REZ.del(1,1);
         _oki>1 & REZ.size()
      !}
   ?}
?};
REZ.cntx_pop();
REZ.use((_mask-2)+'__');
_wyn


\minusrez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: pomniejsza rezerwacje
::   WE: _a - ref ZK_P
::       _b - o ilość
::       [_c] - 1-bezwarunkowych nie rusz 0-domyslnie pozwala je modyfikowac
::  OLD: \minusrez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};

_buftrzl:=tab_tmp(1,'TR_ZL','STRING[50]','');

_wyn:=_b;
ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
:: pierwsza automatyczne warunkowe
REZ.index('ZK_PA');
REZ.prefix(_a,'W',1);
{? REZ.first()
|| {!
   |? _ref:=REZ.ref();
      _ok:=REZ.next();
      REZ.cntx_psh();
      REZ.clear();
      {? REZ.seek(_ref) & REZ.ZLZAM=null() & REZ.ILR>0
      || {? REZ.TR_ZL<>''
         || _buftrzl.clear();
            _buftrzl.prefix(REZ.TR_ZL);
            {? ~_buftrzl.first()
            || _buftrzl.blank();
               _buftrzl.TR_ZL:=REZ.TR_ZL;
               _buftrzl.add(1)
            ?}
         ?};
         {? REZ.ILR=_wyn
         || REZ.del(1,1);
            _wyn:=0
         |? REZ.ILR>_wyn
         || REZ.ILR-=_wyn;
            REZ.put(1);
            _wyn:=0
         || _wyn-=REZ.ILR;
            REZ.del(1,1)
         ?}
      ?};
      REZ.cntx_pop();
      _wyn>0 & _ok
   !}
?};
:: drugie nieautomatyczne warunkowe
REZ.index('ZK_PA');
REZ.prefix(_a,'W',0);
{? _wyn>0 & REZ.first()
|| {!
   |? _ref:=REZ.ref();
      _ok:=REZ.next();
      REZ.cntx_psh();
      REZ.clear();
      {? REZ.seek(_ref) & REZ.ZLZAM=null() & REZ.ILR>0
      || {? REZ.TR_ZL<>''
         || _buftrzl.clear();
            _buftrzl.prefix(REZ.TR_ZL);
            {? ~_buftrzl.first()
            || _buftrzl.blank();
               _buftrzl.TR_ZL:=REZ.TR_ZL;
               _buftrzl.add(1)
            ?}
         ?};
         {? REZ.ILR=_wyn
         || REZ.del(1,1);
            _wyn:=0
         |? REZ.ILR>_wyn
         || REZ.ILR-=_wyn;
            REZ.put(1);
            _wyn:=0
         || _wyn-=REZ.ILR;
            REZ.del(1,1)
         ?}
      ?};
      REZ.cntx_pop();
      _wyn>0 & _ok
   !}
?};
:: trzecie bezwarunkowe
REZ.index('ZK_P');
REZ.prefix(_a,'B');
{? ~_c & _wyn>0 & REZ.first()
|| {!
   |? _ref:=REZ.ref();
      _ok:=REZ.next();
      REZ.cntx_psh();
      REZ.clear();
      {? REZ.seek(_ref) & REZ.SC='' & REZ.ILR>0
      || {? REZ.TR_ZL<>''
         || _buftrzl.clear();
            _buftrzl.prefix(REZ.TR_ZL);
            {? ~_buftrzl.first()
            || _buftrzl.blank();
               _buftrzl.TR_ZL:=REZ.TR_ZL;
               _buftrzl.add(1)
            ?}
         ?};
         {? REZ.ILR=_wyn
         || REZ.del(1,1);
            _wyn:=0
         |? REZ.ILR>_wyn
         || REZ.ILR-=_wyn;
            REZ.put(1);
            _wyn:=0
         || _wyn-=REZ.ILR;
            REZ.del(1,1)
         ?}
      ?};
      REZ.cntx_pop();
      _wyn>0 & _ok
   !}
?};

ZK_P.cntx_pop();
ZK_N.cntx_pop();
REZ.cntx_pop();
_buftrzl.clear();
{? _buftrzl.first()
|| {!
   |? exec('aktILRtr_zl','transport_zlec',_buftrzl.TR_ZL);
      _buftrzl.next()
   !}
?};
obj_del(_buftrzl);
_wyn


\rez_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: rezerwuje pozycje na zamowieniu
::   WE: [_a] - jedna z opcji do ask (jezeli podana brak komunikatow) dla 0 i -1
::              1 - biezaca pozycja
::              2 - Rezerwuj wszystkie
::              3 - Anuluj wszystkie
::              5 - rozpisz ponownie wg całej ilości pozostałej
::              6 - usuniecie rezerwacji (bez rezerwacji wg dostaw) i bez likwidacji znacznika rezerwacji
::       [_b] - czy usuwac wg dostaw 0-nie(domyslnie) 1-tak 2-nie usuwac i nie pytac
::       [_c] - czy zapisywac i odtwarzac informacje o statusach zamowienia - 1-tak(domyslnie) 0-nie
::       [_d] - czy usuwac zapisy o rezerwacji (T/N) [T - domyslnie]
::       [_e] - czy kompletacja wysylki - domyslnie 0-nie 1-tak
::       [_f] - 0-bez pytania 1-z pytaniem (domyslnie)
::       [_g] - 1-wg dyspozycji w magazynie
::  OLD: \rez_pozy/rezerw.fml
::       \rez_pozy/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_ctrlrez:=_=1;
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?}  || _a:=0  ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?}  || _b:=0  ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=1 ?}  || _c:=1  ?};
{? _>=4 || {? type_of(_d)<>2 || _d:='T' ?} || _d:='T' ?};
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};
{? _>=6 || {? type_of(_f)<>1 || _f:=1 ?} || _f:=1 ?};
_tr_zl:={? var_pres('_g')=type_of(0) || _g || 0 ?};

_buftrzl:=tab_tmp(1,'TR_ZL','STRING[50]','');

:: komunikaty odnośnie rezerwacji
_par:=params_get();
_com:={? var_pres('_par') & var_pres('com',_par)=type_of(KH) || _par.com || tab_tmp(1,'TXT','STRING[255]','') ?};
_addcom:="_tab:=_a; _tab.blank(); _tab.TXT:=_b; _tab.add(1)";


_ctrlmg:=DISP.CTRLMG;
DISP.CTRLMG:=1;
ZK_P.cntx_psh();
TR_ZL.cntx_psh();
{? _a<=0
|| _dt:=0;
   {? ~_tr_zl
   || _tab:=ZK_P.sel_aget();
      _wg_tab:=_tab.size();
      ZK_P.sel_adel()
   || _tab:=tab_tmp(1,'REF','INTEGER','','MAX','REAL','','DT','DATE','','TR_ZL','STRING[48]','');
      _buf:=TR_ZL.sel_aget();
      TR_ZL.sel_adel();
      {? ~_buf.first() || _buf.REF:=#TR_ZL.ref(); _buf.add() ?};
      {? _buf.first()
      || {!
         |? {? (TR_ZL.clear(); TR_ZL.seek(_buf.REF,))
            || _tab.blank();
               _tab.REF:=exec('FindAndGet','#table',ZK_P,TR_ZL.POZ_REF,,"#ref()",0);
               _tab.MAX:=TR_ZL.IL;
               _tab.DT:=TR_ZL.TR_NZL().DT;
               _tab.TR_ZL:=TR_ZL.uidref();
               {? _tab.REF<>0 || _tab.add(1) ?}
            ?};
            _buf.next()
         !}
      ?};
      obj_del(_buf);
      _wg_tab:=_tab.size()
   ?};
   {? _wg_tab & _tab.first()
    & (~_f | FUN.ask({? _a=-1
                     || 'Czy usunąć rezerwacje dla zaznaczonych pozycji?'@
                     || 'Czy dodać rezerwacje dla zaznaczonych pozycji?'@
                     ?}))
   || {? _c
      || VAR_DEL.delete('__matakt');
         __matakt:=tab_tmp(2,'REF','STRING[16]',''
                    ,'NRK','INTEGER',''
                    ,'ILR','REAL',''
                    ,'ZKP','STRING[16]',''
                    ,'ZKN','STRING[16]','')
      ?};
      {!
      |? {? (ZK_P.clear(); ZK_P.seek(_tab.REF,))
          & ~ZK_P.END & ZK_P.M().RODZ='T' & ~exec('czyRezZlzam','zamsiw_wspolne',ZK_P.ref)
         || {? ~_a & ~ZK_P.REZ & (~_ctrlrez | exec('czyuprREZ','rezerwacje',OPERATOR.USER,ZK_P.M,0,ZK_P.US))
            || _dat:={? _tr_zl || _tab.DT || ZK_P.DT ?};
               _ilp:={? _tr_zl || {? ZK_P.ILP>_tab.MAX || ZK_P.ILP || _tab.MAX ?} || ZK_P.ILP ?};
               {? _dat>=date()
               || ZK_P.REZ:=1;
                  ZK_P.DOR:=_ilp;
                  ZK_P.DT:=_dat;
                  ZK_P.ODDT:={? ZK_P.N().DP>date() || ZK_P.N().DP || date() ?};
                  ZK_P.DODT:=_dat;
                  ZK_P.NR:=exec('blnr_kol','zamsiw_poz',ZK_P.M);
                  ZK_P.put(1);
                  exec('rozp_rez','rezerwacje',,,,,{? _c || 1 || -1 ?},,,,,{? _tr_zl || _tab.TR_ZL || '' ?});
                  {? _tr_zl || exec('aktILRtr_zl','transport_zlec',_tab.TR_ZL) ?}
               || _dt+=1
               ?}
            |? _a=-1 & ZK_P.REZ & (~_ctrlrez | exec('czyuprREZ','rezerwacje',OPERATOR.USER,ZK_P.M,-1,ZK_P.US))
            || exec('delezkrp','zamsiw_rea',ZK_P.ref());
               ZK_P.REZ:=0;
               ZK_P.DOR:=0;
               ZK_P.SR:=0;
               ZK_P.ODDT:=date(0,0,0);
               ZK_P.DODT:=date(0,0,0);
               ZK_P.CZYBEZ:='T';
               ZK_P.ILBEZ:=ZK_P.ILP;
               ZK_P.ILRB:=0;
               ZK_P.ILRW:=0;
               ZK_P.ILRA:=0;
               ZK_P.put(1);
               exec('zkp_upd_ilosc','px_obj');
               REZ.cntx_psh();
               REZ.index('ZK_P');
               REZ.prefix(ZK_P.ref());
               {? REZ.first()
               || {!
                  |? {? REZ.TR_ZL<>''
                     || _buftrzl.clear();
                        _buftrzl.prefix(REZ.TR_ZL);
                        {? ~_buftrzl.first()
                        || _buftrzl.blank();
                           _buftrzl.TR_ZL:=REZ.TR_ZL;
                           _buftrzl.add(1)
                        ?}
                     ?};
                     REZ.next()
                  !}
               ?};
               REZ.cntx_pop();
               exec('update','rezerwacje','ZK_P',ZK_P.ref(),ZK_P.RMAG,ZK_P.M,0);
               exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
               {? _c || exec('admatzkp','rezerwacje',$ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N,$ZK_P.ref()) ?};
               {? _tr_zl || exec('aktILRtr_zl','transport_zlec',_tab.TR_ZL) ?}
            ?}
         ?};
         _tab.next()
      !};
      {? _c
      || exec('akt_rezy','rezerwacje');
         VAR_DEL.delete('__matakt')
      ?};
      {? _dt & _f
      || FUN.info('Data realizacji pozycji zamówienia mniejsza od daty bieżącej.'
                  '\nBrak rezerwacji dla: %1 zaznaczonych pozycji.'@[form(_dt,,0,'99')])
      ?}
   |? ~_wg_tab
   || {? ZK_P.M().RODZ='U'
      || _txt:={? _a=-1
               || 'Pozycja usługowa - wycofanie rezerwacji niemożliwe.'@
               || 'Pozycja usługowa - rezerwacja niemożliwa.'@
               ?};
         _addcom(_com,_txt);
         FUN.info(_txt)
      |? _ctrlrez & ~exec('czyuprREZ','rezerwacje',OPERATOR.USER,ZK_P.M,_a,ZK_P.US)
      || _txt:={? _a=-1
               || 'Brak uprawnień do usuwania rezerwacji'
                  '\n- wycofanie rezerwacji niemożliwe.'@
               || 'Brak uprawnień do zakładania rezerwacji dla grupy materiałowej %1'
                  '\n- rezerwacja niemożliwa.'@[ZK_P.M().MGR().KOD]
               ?};
         _addcom(_com,_txt);
         FUN.info(_txt)
      |? exec('czyRezZlzam','zamsiw_wspolne',ZK_P.ref)
      || _txt:='Pozycja powiązana ze zleceniem.'@;
         _addcom(_com,_txt);
         FUN.info(_txt)
      |? ((~_a & ZK_P.REZ) | (_a<0 & ~ZK_P.REZ))
      || _txt:={? _a=-1
               || 'Pozycja nie jest zarezerwowana.'@
               || 'Pozycja jest zarezerwowana.'@
               ?};
         _addcom(_com,_txt);
         FUN.info(_txt)
      |? ~_a & ~ZK_P.REZ & ZK_P.DT<date()
      || _txt:='Data realizacji pozycji zamówienia (%1) mniejsza od daty bieżącej.\nRezerwacja niemożliwa.'@[$ZK_P.DT];
         _addcom(_com,_txt);
         {? _f || FUN.info(_txt) ?}
      |? ~_f | FUN.ask({? _a=-1 || 'Czy usunąć rezerwację?'@ || 'Czy dodać rezerwację?'@ ?})
      || {? ~ZK_P.REZ
         || ZK_P.REZ:=1;
            ZK_P.DOR:=ZK_P.ILP;
            ZK_P.ODDT:={? ZK_P.N().DP>date() || ZK_P.N().DP || date() ?};
            ZK_P.DODT:=ZK_P.DT;
            ZK_P.NR:=exec('blnr_kol','zamsiw_poz',ZK_P.M);
            ZK_P.put(1);
            exec('rozp_rez','rezerwacje',,,,,{? _c || 0 || -1 ?})
         |? ZK_P.REZ
         || exec('delezkrp','zamsiw_rea',ZK_P.ref());
            _dor:=ZK_P.DOR;
            ZK_P.REZ:=0;
            ZK_P.DOR:=0;
            ZK_P.SR:=0;
            ZK_P.ODDT:=date(0,0,0);
            ZK_P.DODT:=date(0,0,0);
            ZK_P.CZYBEZ:='T';
            ZK_P.ILBEZ:=ZK_P.ILP;
            ZK_P.ILRB:=0;
            ZK_P.ILRW:=0;
            ZK_P.ILRA:=0;
            ZK_P.put(1);
            exec('zkp_upd_ilosc','px_obj');
            REZ.cntx_psh();
            REZ.index('ZK_P');
            REZ.prefix(ZK_P.ref());
            {? REZ.first()
            || {!
               |? {? REZ.TR_ZL<>''
                  || _buftrzl.clear();
                     _buftrzl.prefix(REZ.TR_ZL);
                     {? ~_buftrzl.first()
                     || _buftrzl.blank();
                        _buftrzl.TR_ZL:=REZ.TR_ZL;
                        _buftrzl.add(1)
                     ?}
                  ?};
                  REZ.next()
               !}
            ?};
            REZ.cntx_pop();
            exec('update','rezerwacje','ZK_P',ZK_P.ref(),ZK_P.RMAG,ZK_P.M,0);
            exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
            {? _c || exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,_dor,$ZK_P.N) ?}
         ?}
      ?}
   ?}
|? _a=3
|| {? ZK_P.first()
   || {!
      |? {? ZK_P.REZ
         || exec('delezkrp','zamsiw_rea',ZK_P.ref());
            _dor:=ZK_P.DOR;
            ZK_P.REZ:=0;
            ZK_P.DOR:=0;
            ZK_P.SR:=0;
            ZK_P.ODDT:=date(0,0,0);
            ZK_P.DODT:=date(0,0,0);
            ZK_P.put(1);
            exec('update','rezerwacje','ZK_P',ZK_P.ref(),ZK_P.RMAG,ZK_P.M,0);
            exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
            exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,_dor,$ZK_P.N)
         ?};
         ZK_P.next()
      !}
   ?}
|? _a=5
|| _dor:=ZK_P.ILP-ZK_P.DOR;
   {? _dor>0 & ZK_P.M().RODZ='T' & ZK_P.DT>=date()
   || ZK_P.REZ:=1;
      ZK_P.DOR:=ZK_P.ILP;
      ZK_P.ODDT:={? ZK_P.N().DP>date() || ZK_P.N().DP || date() ?};
      ZK_P.DODT:=ZK_P.DT;
      ZK_P.NR:=exec('blnr_kol','zamsiw_poz',ZK_P.M);
      ZK_P.put(1);
      exec('rozp_rez','rezerwacje',,,,_dor>0,{? _c || 0 || -1 ?})
   |? -_dor>0
   || _roz:=exec('minusrez','rezerwacje',ZK_P.ref(),-_dor);
      ZK_P.DOR-=(-_dor)-_roz;
      {? _roz>0
      || ZK_P.ILP+=_roz;
         ZK_P.ILZ+=_roz;
         _mjs:=ATR.MJS;
         ATR.MJS:='ZK_P';
         exec('aktzil2','zamsiw_poz');
         ATR.MJS:=_mjs;
         exec('war_pozz','zamsiw_poz')
      ?};
      ZK_P.put(1);
      exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
      exec('war_zam','zamsiw_nag',ZK_P.N);
      exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,-_dor,$ZK_P.N)
   ?}
?};
_buftrzl.clear();
{? _buftrzl.first()
|| {!
   |? exec('aktILRtr_zl','transport_zlec',_buftrzl.TR_ZL);
      _buftrzl.next()
   !}
?};
obj_del(_buftrzl);
ZK_P.cntx_pop();
TR_ZL.cntx_pop();
DISP.CTRLMG:=_ctrlmg;
~~


\rozp_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: rozpisuje rezerwacje dla danego ZK_P (automatycznie)
::   WE: [_a] - unikalny ref realizacji, domyslnie brak
::       [_b] - podczas dolaczania pozycji zamowienia (domyslnie 0-nie) 1-tak
::       [_c] - ilość do rozpisania
::       [_d] - bez usuwania poprzednich rezerwacji
::       [_e] - czy aktualizowac statusy 0-tak(domyslnie) 1-nie -1-nie i nie dodawaj do tabeli
::       [_f] - pomijanie wydan na czytniku 0-nie(domyslnie) 1-tak
::       [_g] - wylacznie magazyny z obsluga wymiarow (niepaletowe) 0-nie(domyslnie) 1-tak, -1-wszystkie bez paletowych
::       [_h] - magazyn null(domyslnie)
::       [_i] - 1-pozycja zwiekszająca rezerwację, 0-nie(domyślnie)
::       [_j] - wskazanie na pozycji dyspozycji w magazynie
::       [_k] - ewentualna cecha dostawy
::  OLD: \rozp_rez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};
{? _>=6 || {? type_of(_f)<>1 || _f:=0 ?} || _f:=0 ?};
{? _>=7 || {? type_of(_g)<>1 || _g:=0 ?} || _g:=0 ?};
{? _>=8 || {? type_of(_h)<>7 || _h:=null() ?} || _h:=null() ?};
{? _>=9 || {? type_of(_i)<>1 || _i:=0 ?} || _i:=0 ?};
_tr_zl:={? var_pres('_j')=type_of('') || _j || '' ?};
_dk_c:={? var_pres('_k')=type_of(null()) || _k || null() ?};

_acrtab:='ZK_P'+{? _i || 'P' || '' ?};

:: komunikaty odnośnie rezerwacji
_par:=params_get();
_com:={? var_pres('_par') & var_pres('com',_par)=type_of(KH) || _par.com || tab_tmp(1,'TXT','STRING[255]','') ?};
_addcom:="_tab:=_a; _tab.blank(); _tab.TXT:=_b; _tab.add(1)";

ZK_N.cntx_psh();
ZK_P.cntx_psh();

_znb:=_znw:=_zbb:=_zbz:='N';
_ilrb:=_ilrw:=_ilrd:=_ilra:=0;

_ildo:={? _b
       || ZK_P.DOR
       |? _a<>'' & ~_c
       || ZK_P.ILBEZ
       |? _a<>'' & _c>0
       || _c
       || ZK_P.DOR
       ?};
_rmag:={? _h=null() & DISP.CTRLMG || ZK_P.RMAG || _h ?};
_fmag:=ZK_P.RMAG;
_zk_n:=ZK_P.N;
_npoz:=ZK_P.POZ;
_rp_rez:={? ZK_P.N().LIM='T' & ZK_P.ZL<>null()
         || exec('is_rp_rez','rezerwacje',ZK_P.ZL,ZK_P.M)
         || 'N'
         ?};
_t2:=ZK_P.T2;
_ws2:=ZK_P.WS2;
_j2:=ZK_P.J2;
_nomg:=ZK_P.N().MD;

:: sprawdzenie ile juz rozpisano
_ilbez:=0;
_nowar:={? ZK_P.RODZ='Z' || exec('get','#params',300810,2)='T'
        |? ZK_P.RODZ='W' || exec('get','#params',600810,2)='T'
        || 0
        ?};
_minus:=0;
{? _b<=0
|| REZ.index('ZK_P');
   REZ.prefix(ZK_P.ref())
|| REZ.index('ZK_N');
   REZ.prefix(_zk_n,_npoz)
?};
{? _a='' & REZ.first()
|| {!
   |? {? REZ.RODZ='B' & REZ.ILR>0
      || _znb:='T';
         _ilrb+=REZ.ILR;
         _ilbez+=REZ.ILR;
         _ildo-=REZ.ILR;
         _ildo>0 & REZ.next()
      |? _d & REZ.ZLZAM=null() & REZ.RODZ='W' & REZ.ILR>0
      || _ilrw+=REZ.ILR;
         _ildo-=REZ.ILR;
         _ildo>0 & REZ.next()
      |? REZ.ZLZAM=null() & REZ.RODZ='W'
      || {? _ildo>0
         || {? REZ.MG<>null
            ||
::             rezerwacje z magazynem
               exec('obl_stan','magazyn_stan',REZ.M,1,REZ.MG,,,,,,,_f,{? _dk_c=null() || ZK_P.DK_C || _dk_c ?});
               {? BEER.SD>0
               || {? BEER.SD>=_ildo
                  || REZ.RODZ:='B';
                     REZ.RP_REZ:='N';
                     REZ.ILR:=_ildo;
                     REZ.put(1);
                     _ildo:=0
                  || _rozn:=_ildo-BEER.SD;
                     REZ.ILR:=_rozn;
                     REZ.put(1);
                     REZ.RODZ:='B';
                     REZ.RP_REZ:='N';
                     REZ.ILR:=BEER.SD;
                     REZ.add(1)
                  ?}
               || {? REZ.ILR>_ildo
                  || REZ.ILR:=_ildo;
                     REZ.put(1)
                  ?};
                  _ildo-=REZ.ILR
               ?}
            ||
::             rezerwacje bez magazynu
               ''
            ?}
         ?};
         _ildo>0 & REZ.next()
      || _ildo>0 & REZ.next()
      ?}
   !}
?};

_aktzn:=0;
:: rozpisujemy to co pozostalo w szczegolnosci nowa rezerwacja
{? _ildo>0
|| _new:={? _a<>'' || {? _d=-1 || 3 || 1 ?} |? _d || 4 || 0 ?};
   _smag:={? _fmag<>null() || _fmag || _rmag ?};

   {? _smag<>null
    & {? _g>0 || exec('FindAndGet','#table','MG',$_smag,,"MG.SL",'')='T'
      |? _g<0 || exec('FindAndGet','#table','MG',$_smag,,"MG.PAL",'')='N'
      || 1
      ?}
    & (_nomg=null() | _smag<>_nomg)
   || _aktzn:=1;
      {? _rp_rez='T' | (_a<>'' & exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,_smag)=0)
      || BEER.SD:=0
      || exec('obl_stan','magazyn_stan',ZK_P.M,1,_smag,,,,,,,_f,{? _dk_c=null() || ZK_P.DK_C || _dk_c ?})
      ?};
      _rezb:={? BEER.SD>=_ildo || _ildo || BEER.SD ?};
      {? _rezb>0
      || _rez2:=_rezb*_ws2;
         {? _b<=0
         || exec('update','rezerwacje',_acrtab,ZK_P.ref(),_smag,ZK_P.M,_rezb,,'B',,_new,ZK_P.NR,_a,_rez2,_j2,_ws2
             ,,,,_dk_c,,,,,_tr_zl)
         || exec('update','rezerwacje','ZK_N',_zk_n,_smag,ZK_P.M,_rezb,,'B',,_new,ZK_P.NR,_a,_rez2,_j2,_ws2
             ,,,,_dk_c,,_npoz,,,,1)
         ?};
         {? _new<>4 || _new:=1 ?};
         _znb:='T';
         _ilrb+=_rezb;
         _ildo-=_rezb
      ?};
      {? _a='' & _ildo>0 & {? ~_nowar || 1 || _minus+=_ildo; 0 ?}
      || _rez2:=_ildo*_ws2;
         {? _b<=0
         || exec('update','rezerwacje',_acrtab,ZK_P.ref(),_smag,ZK_P.M,_ildo,,'W',,_new,ZK_P.NR,,_rez2,_j2,_ws2
             ,,,,_dk_c,,,,,_tr_zl)
         || exec('update','rezerwacje','ZK_N',_zk_n,_smag,ZK_P.M,_ildo,,'W',,_new,ZK_P.NR,,_rez2,_j2,_ws2
             ,,,,_dk_c,,_npoz,,,,1)
         ?};
         _znw:='T';
         _ilrw+=_ildo;
         _ilra+=_ildo;
         _ildo:=0;
         {? _new<>4 || _new:=1 ?}
      ?}
   ?};
   {? _rmag=null() & _ildo>0
   || _aktzn:=1;
      BUFMG.index('NR');
      BUFMG.prefix(OPERATOR.USER,{? ZK_P.RODZ='Z' || 2 || 9 ?});
      {? BUFMG.first()
      || {!
         |? {? BUFMG.MG<>_fmag
             & BUFMG.MG().ODDZ=ST.ODDZ_KOD
             & BUFMG.MG().PAL<>'T'
             & {? _g>0 || BUFMG.MG().SL='T' || 1 ?}
             & (_nomg=null() | BUFMG.MG<>_nomg)
            || {? _rp_rez='T' | (_a<>'' & exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,BUFMG.MG)=0)
               || BEER.SD:=0
               || exec('obl_stan','magazyn_stan',ZK_P.M,1,BUFMG.MG,,,,,,,_f,{? _dk_c=null() || ZK_P.DK_C || _dk_c ?})
               ?};
               _rezb:={? BEER.SD>=_ildo || _ildo || BEER.SD ?};
               {? _rezb>0
               || _rez2:=_rezb*_ws2;
                  {? _b<=0
                  || exec('update','rezerwacje',_acrtab,ZK_P.ref(),BUFMG.MG,ZK_P.M,_rezb,,'B',,_new,ZK_P.NR
                      ,_a,_rez2,_j2,_ws2,,,,_dk_c,,,,,_tr_zl)
                  || exec('update','rezerwacje','ZK_N',ZK_N.ref(),BUFMG.MG,ZK_P.M,_rezb,,'B',,_new,ZK_P.NR
                      ,_a,_rez2,_j2,_ws2,,,,_dk_c,,_npoz,,,,1)
                  ?};
                  {? _new<>4 || _new:=1 ?};
                  _znb:='T';
                  _ilrb+=_rezb;
                  _ildo-=_rezb
               ?}
            ?};
            _ildo>0 & BUFMG.next()
         !}
      ?};
      {? _a='' & _ildo>0 & {? ~_nowar || 1 || _minus+=_ildo; 0 ?}
      || _rez2:=_ildo*_ws2;
         {? _b<=0
         || exec('update','rezerwacje',_acrtab,ZK_P.ref(),null,ZK_P.M,_ildo,,'W',,_new,ZK_P.NR,,_rez2,_j2,_ws2
             ,,,,_dk_c,,,,,_tr_zl)
         || exec('update','rezerwacje','ZK_N',ZK_N.ref(),null,ZK_P.M,_ildo,,'W',,_new,ZK_P.NR,,_rez2,_j2,_ws2
             ,,,,_dk_c,,_npoz,,,,1)
         ?};
         _znw:='T';
         _ilrw+=_ildo;
         _ilra+=_ildo;
         {? _new<>4 || _new:=1 ?}
      ?}
   ?}
?};

:: aktualizacja znacznikow na ZK_P
{? ~_b & _aktzn || exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1) ?};

{? ~_e
|| exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,0,$ZK_P.N)
|? _e=1
|| exec('admatzkp','rezerwacje',$ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N,$ZK_P.ref())
?};

ZK_N.cntx_pop();
ZK_P.cntx_pop();
{? _b<>0
|| ZK_P.SR:=_ilrb;
   ZK_P.ILRB:=_ilrb;
   ZK_P.ILRW:=_ilrw;
   ZK_P.ILRD:=_ilrd;
   ZK_P.ILRA:=_ilra;
   ZK_P.DOR-=_minus;
   _doroz:=ZK_P.DOR-(ZK_P.ILRW-ZK_P.ILRA);
   ZK_P.ILBEZ:={? ZK_P.END || 0 |? ZK_P.ILP>_doroz || ZK_P.ILP-_doroz || 0 ?};
   ZK_P.CZYBEZ:={? ZK_P.ILBEZ>0 || 'T' || 'N' ?};
   ZK_P.ZNB:=_znb;
   ZK_P.ZNW:=_znw;
   ZK_P.ZNR:=_znr:={? ZK_P.ILP<ZK_P.ILZ || 'T' || 'N' ?};
   ZK_P.REZ:=_ilrb>0 | _ilra>0;
   win_disp()
?};
~~


\akt_wgdk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: aktualizuje rezerwacje zamowien wg pozycji dokumentu
::   WE: _a - ref ND
::  OLD: \akt_wgdk/zk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('akt_wgdk','zamsiw_wspolne',_a)


\pw_mgrez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem pola REZ.MG
::  OLD: \pw_mgrez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? {? var_pres('typ')=type_of(0) & typ=3
   || ZK_P.RMAG<>null()
   || (~BEER.CZY_REZT & ZK_P.RMAG<>null) | {? var_pres('typ')>0 || typ<>2 || REZ.TYP<>'Z' ?}
   ?}
|| exec('findfnrd','color')
|| ''
?}


\pr_mgrez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja pola REZ.MG
::  OLD: \pr_mgrez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? (~BEER.CZY_REZT & ZK_P.RMAG<>null) | (BEER.CZY_REZT & typ=1) | (BEER.REZ_ZLIM=2 & REZ.SC<>'')
|| 0
|? typ=3 | (typ=2 & BEER.CZY_REZT) | BEER.OKZKP<=0
||
:: ustawic filtr
   exec('wybwgupr','magdok_wspolne',1,,1,typ=3);
   1
|| 0
?}


\po_mgrez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji pola REZ.MG
::  OLD: \po_mgrez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? typ>=2 & REZ.MG=null & (1+BEER.RODZREZ)='B'
|| FUN.info('Należy podać magazyn do rezerwacji.'@);
   0
|| win_disp();
   {? __buf_mg<>REZ.MG
   || REZ.SC:='';
      BEER.DOSTAWA:=date(0,0,0);
      exec('obl_stan','magazyn_stan',REZ.M,1,REZ.MG);
      {? BEER.SD<REZ.ILR
      || REZ.ILR:=BEER.SD;
         exec('porezilr','rezerwacje')
      ?}
   ?};
   __buf_mg:=REZ.MG;
   1
?}


\bl_rodzr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wartosc poczatkowa dla pola REZ.RODZ
::  OLD: \bl_rodzr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.RODZR


\porezilr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po edycji pola REZ.ILR
::   WY: 1
::  OLD: \porezilr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_dokl:=3;
{? REZ.M<>null || _dokl:=exec('jaka_dok_m','jm',REZ.M) ?};
REZ.ILR:=REZ.ILR$_dokl;
exec('ctrlREZ','magazyn_stan',1,exec('FindAndGet','#table',REZ,$REZ.ref(),,"{? SC<>'' || ILR || -ILR ?}",0));
exec('pozj2','zamsiw_poz');
_wyn


\proddt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja pola ODDT
::  OLD: \proddt/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
REZ.RODZ<>'B'


\pwdodt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem pola REZ.DODT
::  OLD: \pwdodt/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? REZ.BTERM='T'
|| exec('findfnv','#color')
|| ''
?}


\prdodt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja pola DODT
::  OLD: \prdodt/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
REZ.BTERM='N' & {? REZ.TYP='Z' & $REZ.ZK_N<>'' || REZ.ZK_N().LIM='N' || 1 ?}


\pododt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji pola DODT
::  OLD: \pododt/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? REZ.DODT=date(0,0,0)
|| FUN.info('Należy podać niezerową datę'@);
   _wyn:=0
|? REZ.DODT<REZ.ODDT
|| FUN.info('Data obowiązywania rezerwacji nie może być mniejsza od daty rezerwacji.'@);
   _wyn:=0
|| BEER.IL_DNI:=REZ.DODT-REZ.ODDT
?};
_wyn


\pwbterm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem pola REZ.BTERM
::  OLD: \pwbterm/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? REZ.TYP='T' || '' || 0 ?}


\prbterm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja pola REZ.BTERM
::  OLD: \prbterm/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
REZ.TYP='T'


\pobterm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji pola REZ.BTERM
::  OLD: \pobterm/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? REZ.BTERM='T'
|| REZ.DODT:=date(0,0,0);
   BEER.IL_DNI:=0
?};
1


\bl_rrea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wartosc poczatkowa T/N, druga litera oznacza czy utw.na czas real. T/N
::  OLD: \bl_rrea/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
'NN'


\ile_rezd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zwraca tabele ilosci rezerwowanych
::   WE: _a - ref ZK_N
::       _b - numer pozycji zamowienia
::   WY: tabela danych 1-suma do rezerwacji 2-rez.bezwarunkowe 3-rez.warunkowe 4-rez.wg dostaw
::  OLD: \ile_rezd/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new(6);
{! _i..6 |! _wyn[_i]:=0 !};
ZK_P.cntx_psh();
REZ.cntx_psh();
REZ.index('ZK_N');
REZ.prefix(_a,_b);
{? REZ.first()
|| _rezzlzam:={? REZ.ZK_P().RODZ='Z' || exec('get','#params',300812,2) || exec('get','#params',600812,2) ?}='T';
   {!
   |? _wyn[1]+=REZ.ILR;
      {? REZ.RODZ='B'
      || _wyn[2]+=REZ.ILR;
         {? REZ.SC<>'' || _wyn[4]+=REZ.ILR ?}
      |? REZ.RODZ='W'
      || _wyn[3]+=REZ.ILR;
         _wyn[6]+={? _rezzlzam & REZ.ZLZAM<>null() || REZ.ILR || 0 ?};
         {? REZ.AUTO || _wyn[5]+=REZ.ILR ?}
      ?};
      REZ.next()
   !}
?};
REZ.cntx_pop();
ZK_P.cntx_pop();
_wyn


\przeprez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przypina rezerwacje do pozycji lub usuwa
::   WE: _a - 1-przepiecie 0-usuniecie
::       _b - numer pozycji
::       [_c] - 1-nie rusza rezerwacji wg dostaw 0(domyślnie)-bez znaczenia
::   WY: 1-byly pozycje 0-nie
::  OLD: \przeprez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_rdst:={? var_pres('_c')=type_of(0) || _c || 0 ?};

_rezm:=null;
_reznr:=0;
_rezil:=0;
_rezzkn:=$ZK_N.ref();

{? _a
|| REZ.index('ZK_N');
   REZ.prefix(ZK_N.ref(),_b);
   {? REZ.first()
   || {!
      |? {? ~_rdst | REZ.SC=''
         || {? REZ.M=ZK_P.M
            || REZ.ZK_P:=ZK_P.ref();
               REZ.SESID:='';
               _rezm:=REZ.M;
               {? _reznr=0 | REZ.NRK<_reznr || _reznr:=REZ.NRK ?};
               _rezil+=REZ.ILR;
               _wyn+=REZ.put(1);
               REZ.next()
            || _rezm:=REZ.M;
               {? _reznr=0 | REZ.NRK<_reznr || _reznr:=REZ.NRK ?};
               _rezil+=REZ.ILR;
               _wyn:=1;
               _del:=REZ.del(1,1);
               _del>1
            ?}
         || REZ.next()
         ?}
      !}
   ?}
|| REZ.index('ZK_N');
   REZ.prefix(ZK_N.ref(),_b);
   {? REZ.first()
   || {!
      |? {? ~_rdst | REZ.SC=''
         || _rezm:=REZ.M;
            {? _reznr=0 | REZ.NRK<_reznr || _reznr:=REZ.NRK ?};
            _rezil+=REZ.ILR;
            _wyn:=1;
            _del:=REZ.del(1,1);
            _del>1
         || REZ.next()
         ?}
      !}
   ?}
?};
{? _wyn || exec('aktu_rez','rezerwacje',_rezm,_reznr,_rezil,_rezzkn) ?};
_wyn


\term_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zwraca maksymalny termin rezerwacji
::   WE: _a - ref ZK_N
::       _b - numer pozycji zamowienia
::   WY: maksymalny termin lub date(0,0,0)
::  OLD: \term_rez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=date(0,0,0);
REZ.cntx_psh();
REZ.index('ZK_N');
REZ.prefix(_a,_b);
{? REZ.first()
|| {!
   |? {? REZ.DODT>_wyn || _wyn:=REZ.DODT ?};
      REZ.next()
   !}
?};
REZ.cntx_pop();
_wyn


\czyhisrt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy pozycja powstala na podstawie rezerwacji tymczasowej
::   WE: _a - ref SQL pozycji
::       _b - kod maski - 3 znaki
::   WY: 1-tak 0-nie
::  OLD: \czyhisrt/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_hist:=(REZ.name()-3)+_b;
_mask:=REZ.name();

REZ.cntx_psh();
REZ.use(_hist);
REZ.index('POZSQL');
REZ.prefix(_a,_a);
_wyn:=REZ.first();
REZ.use((_mask-2)+'__');
REZ.cntx_pop();
_wyn


\pop_rezy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: koryguje rezerwacje o podana ilosc
::   WE: _a - ref ZK_P
::       _b - ilosc -zmniejszenie +zwiekszenie (zaklada rezerwacje warunkowa o kolejnym numerze)
::  OLD: \pop_rezy/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _b>0
|| exec('rozp_rez','rezerwacje')
|? _b<0
|| _doroz:=-_b;
   REZ.cntx_psh();
   REZ.index('URODZ');
   REZ.prefix(ZK_P.ref());
   {? REZ.last()
   || {!
      |? {? REZ.ILR>0
         || {? _doroz<REZ.ILR
            || REZ.ILR-=_doroz;
               REZ.put(1);
               _doroz:=0;
               0
            || _doroz-=REZ.ILR;
               _del:=REZ.del(1,1);
               _del>1
            ?}
         || REZ.prev()
         ?}
      !}
   ?};
   REZ.cntx_pop()
?}


\disprezt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wyswietla okienko podgladu dla rezerwacji tymczasowej
::  OLD: \disprezt/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? __zk_pt.REZ<>''
|| REZ.cntx_psh();
   REZ.clear();
   {? REZ.seek(__zk_pt.REZ)
   || _czyrezt:=BEER.CZY_REZT;
      BEER.CZY_REZT:=1;
      {? REZ.SC<>''
      || exec('rek_rez1','rezerwacje')
      || BEER.DOSTAWA:=date(0,0,0)
      ?};
      _edit:=REZ.win_edit('?');
      REZ.win_edit('TYM');
      exec('set_efld_opt','rezerwacje','TYM');
      REZ.display();
      REZ.win_edit(_edit);
      BEER.CZY_REZT:=_czyrezt
   ?};
   REZ.cntx_pop()
?};
~~


\rek_rez1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wlaczenie/wylaczenie akcji
::  OLD: \rek_rez1/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_msk:=SC.name()-2;
BEER.IL_DNI:=REZ.DODT-REZ.ODDT;
{? REZ.SC<>'' & 'dokma'=(5+REZ.SC)
|| SC.cntx_psh();
   SC.use(_msk+(form(8+REZ.SC)+2));
   SC.index('SRDK');
   SC.prefix(REZ.SC,REZ.SC);
   {? SC.first()
   || BEER.DOSTAWA:=SC.D;
      exec('sc_info','magazyn_stan')
   ?};
   SC.cntx_pop()
|| BEER.DOSTAWA:=date(0,0,0);
   DISP.DOST:=''
?};
''


\tymc_prf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: ustawia zakres na okienku rezerwacji tymczasowych - wypelnia tabelke wg uprawnien
::   WE: [_a] - ref materialu
::       [_b] - zakres wg ZAM, MG
::       [_c] - kontrahent, domyslnie null
::       [_d] - wywołanie grp_disp, domyślnie 1 (tak)
::  OLD: \tymc_prf/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_c')<>type_of(null()) || _c:=null ?};
{? var_pres('_d')<>type_of(0) || _d:=1 ?};
__zk_pt.clear(); {? __zk_pt.first() || {! |? __zk_pt.del() !} ?};
M.cntx_psh();
REZ.cntx_psh();
REZ.index('M');
REZ.prefix(_a,'T','B');
{? REZ.first()
||
   {!
   |?
      {? _b<>''
      ||{? _b='ZAM'
        ||
           USERS_UP.index('MG');
           USERS_UP.prefix(OPERATOR.USER,'ZA'+{? ZAKR.RODZ_ZAM='S' || 'M' || 'W' ?},ST.ODDZ,REZ.MG);
           {? ~USERS_UP.first()
           || USERS_UP.index('MG');
              USERS_UP.prefix(null,'ZA'+{? ZAKR.RODZ_ZAM='S' || 'M' || 'W' ?},ST.ODDZ,REZ.MG)
           ?}
        || USERS_UP.index('MG');
           USERS_UP.prefix(OPERATOR.USER,'MG',ST.ODDZ,REZ.MG)
        ?}
      ?};
      {? {? _b<>'' || USERS_UP.first || REZ.MG().ODDZ=ST.ODDZ ?} & (_c=null | (_c<>null & REZ.KH=_c))
      || __zk_pt.prefix();
         __zk_pt.blank();
         __zk_pt.KHK:=REZ.KH().KOD;
         __zk_pt.KHS:=REZ.KH().SKR;
         __zk_pt.KHN:=REZ.KH().NAZ;
         __zk_pt.KTM:=REZ.M().KTM;
         __zk_pt.NAZ:=REZ.M().N;
         __zk_pt.DNI:=REZ.DODT-REZ.ODDT;
         __zk_pt.DAT:=REZ.DODT;
         __zk_pt.ILE:=REZ.ILR;
         __zk_pt.MAG:=REZ.MG().SYM;
         __zk_pt.USR:=REZ.US().KOD;
         __zk_pt.REZ:=$REZ.ref();
         exec('rek_rez1','rezerwacje');
         __zk_pt.DST:={? DISP.DOST<>'' || DISP.DOST+' z dnia '+form(BEER.DOSTAWA) || '' ?};
         __zk_pt.add(1)
      ?};
      REZ.next()
   !}
?};
REZ.cntx_pop;
M.cntx_pop();
__zk_pt.first();
{? _d
|| grp_disp(__zk_pt,__okt)
?};
''


\pwst_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem BEER.ST_REZ
::  OLD: \pwst_rez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.ST_REZ:='';
_onemg:=DISP.CTRLMG & exec('FindAndGet','#table','ZK_N',__zknrea.ZKN,,"ZK_N.MG",null())<>null;
{? __zknrea.TREE<>0
|| _mag:=exec('ustmgrez','rezerwacje');
   BEER.ST_REZ:={? (_mag.clear(); _mag.find_key($BUFMG.MG))
                || 'T'
                |? _onemg
                || 'B'
                |? exec('czyinw_a','magazyn_inw',BUFMG.MG)
                || 'I'
                || ''
                ?};
   obj_del(_mag)
|| _ref:=__zknrea.ref();
   __zknrea.cntx_psh();
   __zknrea.clear();
   __zknrea.prefix(_ref);
   {? __zknrea.first()
   || {!
      |? _mag:=exec('ustmgrez','rezerwacje');
         BEER.ST_REZ:={? (_mag.clear(); _mag.find_key($BUFMG.MG))
                      || 'T'
                      |? _onemg
                      || 'B'
                      |? exec('czyinw_a','magazyn_inw',BUFMG.MG)
                      || 'I'
                      || ''
                      ?};
         obj_del(_mag);
         BEER.ST_REZ='' & __zknrea.next()
      !}
   ?};
   __zknrea.cntx_pop()
?};
''


\ustmgrez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: ustala magazyny na ktorych sa rezerwacje
::  OLD: \ustmgrez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=tab_tmp(1,'SQL','STRING[16]','','REZ','REAL','');
ZK_RP.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
ZK_RP.clear();
{? __zknrea.REF<>'' & ZK_RP.seek(__zknrea.REF)
|| REZ.index('ZK_P');
   REZ.prefix(ZK_RP.P,'B');
   {? REZ.first()
   || {!
      |? _wyn.clear();
         {? ~_wyn.find_key($REZ.MG)
         || _wyn.blank();
            _wyn.SQL:=$REZ.MG;
            _wyn.REZ:=REZ.ILR;
            _wyn.add(1)
         || _wyn.REZ+=REZ.ILR;
            _wyn.put(1)
         ?};
         REZ.next()
      !}
   ?}
?};
ZK_RP.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();
_wyn


\pwil_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem BEER.IL_REZ
::  OLD: \pwil_rez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.IL_REZ:=0;
{? __zknrea.TREE<>0
|| _mag:=exec('ustmgrez','rezerwacje');
   BEER.IL_REZ:={? (_mag.clear(); _mag.find_key($BUFMG.MG))
                || _mag.REZ
                || 0
                ?};
   obj_del(_mag);
   1
|| 0
?}


\poil_dni
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po ilosci dni
::   WY: 1/0
::  OLD: \poil_dni/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? BEER.IL_DNI<0
|| FUN.info('Ilość dni powinna być liczbą większą lub równą 0.'@)
|| REZ.DODT:=REZ.ODDT+BEER.IL_DNI;
   _wyn:=1
?};
_wyn


\pw_dostr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem BEER.DOSTAWA
::  OLD: \pw_dostr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.DOSTAWA:={? REZ.SC<>''
              || exec('FindAndGet','#table',DK,REZ.SC,,
                   "{? PLUS='T'
                    || @.ND.cntx_psh();
                       @.ND.use(ref_name(N));
                       _dat:=N().D;
                       @.ND.cntx_pop();
                       _dat
                    || DOST
                    ?}",date(0,0,0))
              || date(0,0,0)
              ?};
{? (1+REZ.MG().TYP)<>'D' | REZ.RODZ<>'B' | REZ.MG().PAL='T' | (REZ.TYP='Z' & (';DAPZ'*REZ.M().IDMOB)>1)
|| exec('findfnrd','color')
|| ''
?}


\pr_dostr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja BEER.DOSTAWA
::  OLD: \pr_dostr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? (1+REZ.MG().TYP)<>'D' | REZ.RODZ<>'B' | REZ.MG().PAL='T'
 | (REZ.TYP='Z' & (';APZ'*REZ.M().IDMOB)>1 & {? var_pres('typ')=type_of(0) & typ=3 || 0 || 1 ?})
 | (REZ.TYP='S' & BEER.REZ_ZLIM=2)
|| REZ.SC:='';
   BEER.DOSTAWA:=date(0,0,0)
|| _wyn:=1;
   exec('sc_aktyw','magazyn_stan',REZ.MG,REZ.M);
   _stskind:='Z';
   exec('sc_tymczas','magazyn_stan',REZ.MG,REZ.M,'T',,_stskind)
?};
win_disp();
_wyn


\f3_dostr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: klawisz F3 dla BEER.DOSTAWA
::  OLD: \f3_dostr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=fld;
_czy_d:=0;
_ind:=__sc.ndx_tmp('',,'SRDK',,,'SRDK',,);
__sc.index(_ind);
{? {? REZ.SC<>'' & __sc.find_key(REZ.SC) || _czy_d:=(__sc.D<>BEER.DOSTAWA) || 1 ?}
|| {? __sc.first()
   || _ok:=1;
      {? _czy_d
      || _ok:=0;
         {! |? {? __sc.D=BEER.DOSTAWA || _ok:=1; 0 || __sc.next() ?} !}
      || {? REZ.SC<>''
         || _ok:=0;
            {! |? {? __sc.RDK=BB.sqlint(REZ.SC) & __sc.NDK=8+REZ.SC || _ok:=1; 0 || __sc.next() ?} !}
         ?}
      ?};
      {? ~_ok || __sc.first() ?}
   || 0
   ?}
?};
__sc.ndx_drop(_ind);

__sc.hdr_sel();
__sc.hdr_sel(' dla materiału: %1 %2'@[REZ.M().KTM,REZ.M().N]);
_ind_sel:=__sc.ndx_tmp('',,'D',,,'RDK',,);
__sc.index(_ind_sel);
{? __sc.select(,1,10)
|| BEER.DOSTAWA:=__sc.D;
   REZ.SC:=__sc.SRDK;
   {? REZ.ILR=0 | REZ.ILR>DISP.SD || REZ.ILR:=DISP.SD ?};
   {? var_pres('typ')=type_of(0) & typ=3 & REZ.ILR>DISP.REZREA || REZ.ILR:=DISP.REZREA ?};
   _wyn:=__sc.D
?};
__sc.hdr_sel();
__sc.ndx_drop(_ind_sel);
_wyn


\po_dostr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji BEER.DOSTAWA
::  OLD: \po_dostr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? var_pres('typ')=type_of(0) & typ=3 & BEER.DOSTAWA=date(0,0,0)
|| FUN.info('Należy wybrać dostawę.'@);
   _wyn:=0
|? BEER.DOSTAWA=date(0,0,0)
|| REZ.SC:='';
   _wyn:=1
|| __sc.cntx_psh();
   {? REZ.SC<>''
   ||
      _ind:=__sc.ndx_tmp('',,'D',,,'RDK',,,'NDK',,);
      __sc.index(_ind);
      __sc.prefix(BEER.DOSTAWA,BB.sqlint(REZ.SC),8+REZ.SC);
      _jest:=__sc.first();
      {? ~_jest
      || REZ.SC:='';
         __sc.ndx_drop(_ind);
         _ind:=__sc.ndx_tmp('',,'D',,);
         __sc.index(_ind);
         __sc.prefix(BEER.DOSTAWA);
         _jest:=__sc.first();
         {? _jest
         || _jest:=0;
            {!
            |? {? {? __sc.S>0
                   & {? __sc.DK_C<>'' & ATR.MJS='REZ' & var_pres('__zkpdkc')>0 & __zkpdkc<>null
                     || exec('czyzawch','mat_atr',__zkpdkc,exec('FindAndGet','#table','DK_C',__sc.DK_C,,,null()))
                     || 1
                     ?}
                  || exec('sc_tmp_info','magazyn_stan');
                     {? DISP.SD>0
                     || _jest:=1;
                        1
                     || 0
                     ?}
                  || 0
                  ?}
               || 0
               || __sc.next()
               ?}
            !}
         ?}
      ?}
   ||
::    szukanie gdy nie wybrano przez F3
      _ind:=__sc.ndx_tmp('',,'D',,);
      __sc.index(_ind);
      __sc.prefix(BEER.DOSTAWA);
      _jest:=__sc.first();
      {? _jest
      || _jest:=0;
         {!
         |? {? {? __sc.S>0
                & {? __sc.DK_C<>'' & ATR.MJS='REZ' & var_pres('__zkpdkc')>0 & __zkpdkc<>null
                  || exec('czyzawch','mat_atr',__zkpdkc,exec('FindAndGet','#table','DK_C',__sc.DK_C,,,null()))
                  || 1
                  ?}
               || exec('sc_tmp_info','magazyn_stan');
                  {? DISP.SD>0
                  || _jest:=1;
                     1
                  || 0
                  ?}
               || 0
               ?}
            || 0
            || __sc.next()
            ?}
         !}
      ?}
   ?};
   {? _jest
   || _wyn:=1;
      REZ.SC:=__sc.SRDK;
      REZ.DK_C:={? __sc.DK_C<>'' || exec('FindAndGet','#table','DK_C',__sc.DK_C,,,null()) || null() ?};
      BEER.DOSTAWA:=__sc.D;
      _scr:={? ~HELP.POP || '' || exec('FindAndGet','#table',REZ,$REZ.ref(),,"SC",'') ?};
      {? type_of(_scr)=type_of('') & _scr=''
      || {? REZ.ILR>__sc.S || REZ.ILR:=__sc.S |? ~HELP.POP || REZ.ILR:=REZ.ZK_P().ILP-REZ.ZK_P().ILRB ?}
      ?};
      _wyn:={? _scr='' || 1 || exec('ctrlREZ','magazyn_stan',1,exec('FindAndGet','#table',REZ,$REZ.ref(),,"ILR",0)) ?};
      {? _wyn || exec('pozj2','zamsiw_poz') ?}
   || {? BEER.DOSTAWA=date(0,0,0)
      || _wyn:=1
      || {? ATR.MJS='REZ' & var_pres('__zkpdkc')>0 & __zkpdkc<>null
         || FUN.info('Brak dostawy w tym dniu o atrybutach cechy dostawy'
                     'zgodnej z cechą podaną na pozycji zamówienia.'@)
         || FUN.info('Nie ma dostawy w tym dniu.'@)
         ?}
      ?}
   ?};
   __sc.ndx_drop(_ind);
   __sc.cntx_pop()
?};
{? _wyn
|| {? REZ.SC<>''
   || REZ.btn_eopt('RED','ATRYB','state=grayed')
   || REZ.btn_eopt('RED','ATRYB','state=normal')
   ?};
   exec('set_efld_opt','rezerwacje')
?};
_wyn


\pwtymrea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem zmiennej BEER.TYMREA
::  OLD: \pwtymrea/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? (1+cur_kwin())='s'
|| BEER.TYMREA:=0;
   __przrez.clear();
   {? __przrez.find_key($REZ.ref()) || BEER.TYMREA:=__przrez.REA ?}
?};
~~


\potymrea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji zmiennej BEER.TYMREA
::  OLD: \potymrea/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? BEER.TYMREA<0
|| FUN.info('Ilość nie może być mniejsza od zera.'@);
   _wyn:=0
|? BEER.TYMREA>REZ.ILR
|| FUN.info('Ilość nie może być większa od ilości zarezerwowanej tymczasowo.'@);
   _wyn:=0
?};
_wyn


\pw_csp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem zmiennej BEER.CSP
::  OLD: \pw_csp/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? __czycen
|| ''
|| exec('findfnv','#color')
?}


\pr_csp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed BEER.CSP
::  OLD: \pr_csp/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
DPOZ.WPR_R:=fld;
_params:=obj_new('NAG_AKR','CZY_SEL','S_DPOZ');
KALK.J2:=REZ.M().J;
exec('taz_sd_set','ceny');
{? DPOZ.MJSR='M'
|| DK.blank();
   {? __czycen & exec('czy_rwal','eurusd','M')
   || {? {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?} & BEER.CSP=0
      || _params.NAG_AKR:='ND';
         _params.CZY_SEL:=0;
         _params.S_DPOZ:=1;
         exec('beer_cwal_pr','rezerwacje',_params)
      ?};
      1
   ?}
|? DPOZ.MJSR='F'
|| FAP.blank();
   FAP.M:=REZ.M;
   {? {? exec('upr_cscz','ceny') & (FAP.M<>null | (FAKS.WHERE='L' & form(FAP.NX)<>''))
      || exec('czy_rwal','eurusd','F') & exec('fap_bcpr','faktury_poz')
      || 0
      ?}
   || {? {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?} & BEER.CSP=0
      || _params.NAG_AKR:='FAKS';
         _params.CZY_SEL:=0;
         _params.S_DPOZ:=1;
         exec('beer_cwal_pr','rezerwacje',_params)
      ?};
      1
   ?}
|? DPOZ.MJSR='Z'
|| ZK_P.blank();
   {? exec('czy_rwal','eurusd','Z')
   || {? {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?} & BEER.CSP=0
      || _params.NAG_AKR:='ZK_N';
         _params.CZY_SEL:=0;
         _params.S_DPOZ:=1;
         exec('beer_cwal_pr','rezerwacje',_params)
      ?};
      1
   ?}
?}


\po_csp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji zmiennej BEER.CSP
::  OLD: \po_csp/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? BEER.CSP<0
|| FUN.info('Cena nie może być mniejsza od zera.'@);
   _wyn:=0
?};
{? _wyn
|| exec('licz','ceny',REZ);
   exec('clr_promo_tap','ceny',,BEER.CSP,BEER.WALCSP);
   win_disp()
?};
_wyn


\f3_csp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: f3 BEER.CSP
::  OLD: \f3_csp/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_params:=obj_new('NAG_AKR','CZY_SEL','S_DPOZ');
KALK.J2:=REZ.M().J;
exec('taz_sd_set','ceny');
{? DPOZ.MJSR='M'
|| DK.blank();
   _params.NAG_AKR:='ND';
   _params.CZY_SEL:=1;
   _params.S_DPOZ:=0;
   exec('beer_cwal_pr','rezerwacje',_params)
|? DPOZ.MJSR='F'
|| FAP.blank();
   FAP.M:=REZ.M;
   _params.NAG_AKR:='FAKS';
   _params.CZY_SEL:=1;
   _params.S_DPOZ:=0;
   exec('beer_cwal_pr','rezerwacje',_params)
|? DPOZ.MJSR='Z'
|| ZK_P.blank();
   _params.NAG_AKR:='ZK_N';
   _params.CZY_SEL:=1;
   _params.S_DPOZ:=0;
   exec('beer_cwal_pr','rezerwacje',_params)
?};
~~


\beer_cwal_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: przed redakcja BEER.CWAL
::  OLD: \berr_cwal_pr/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
_paramsa:=_a;

exec('st_licz_wz','ceny',_paramsa.NAG_AKR);

_params:=exec('ceny_mat_a','ceny_mat');
_params.M:=REZ.M;
_params.MG:=null();
_params.J2:='';
_params.WS2:=0;
_params.KH:=REZ.KH;
_params.KH_ODB:=TAZ.KH_ODB;
_params.PL:=TAZ.PL;
_params.CZY_WAL:={? TAZ.CZY_WAL || 'T' || 'N' ?};
_params.WAL:=BEER.WALREZ;
_params.KRS:=BEER.KRSREZ;
_params.SV:=ZK_P.SV;
_params.CZY_BRT:=TAZ.CB='T';
_params.FLD_CENA:='BEER.CSP';
_params.FLD_RAB:='BEER.RAB';
_params.FLD_CWAL:='BEER.CWL';
_params.CZY_SEL:=_paramsa.CZY_SEL;
_params.SHOW_CDO:=0;
_params.PORTAL:=0;
_params.S_TAZ:=1;
_params.S_DPOZ:=_paramsa.S_DPOZ;
_params.S_VAR:='';
exec('ceny_mat','ceny_mat',_params)


\pw_cen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem BEER z cenami
::  OLD: \pw_cen/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? __czycen
|| ''
|| exec('findfnv','#color')
?}


\pw_rodzr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem pola BEER.RODZREZ
::  OLD: \pw_rodzr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? BEER.RODZR='B' & REZ.TYP<>'T'
|| BEER.RODZREZ:='Bezwarunkowa'
|? BEER.RODZR='W'
|| BEER.RODZREZ:='Warunkowa'
|| BEER.RODZREZ:='Tymczasowa'
?};
''


\pw_cwl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem zmiennej BEER.CWL
::  OLD: \pw_cwl/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? __czycen
|| ''
|| exec('findfnv','#color')
?}


\pr_cwl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed BEER.CWL
::  OLD: \pr_cwl/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
DPOZ.WPR_R:=fld;
_params:=obj_new('NAG_AKR','CZY_SEL','S_DPOZ');
KALK.J2:=REZ.M().J;
exec('taz_sd_set','ceny');
{? DPOZ.MJSR='M'
|| DK.blank();
   {? __czycen & exec('spr_npoz','eurusd')

   || {? {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?} & BEER.CWL=0
      || _params.NAG_AKR:='ND';
         _params.CZY_SEL:=0;
         _params.S_DPOZ:=1;
         exec('beer_cwal_pr','rezerwacje',_params);
         {? BEER.CWL || DPOZ.WPR_R:=-1; exec('po_cenaw','ceny',0); DPOZ.WPR_R:=fld ?}
      ?};
      1
   ?}
|? DPOZ.MJSR='F'
|| FAP.blank();
   FAP.M:=REZ.M;
   {? {? exec('upr_cscz','ceny') & (FAP.M<>null | (FAKS.WHERE='L' & form(FAP.NX)<>''))
      || exec('spr_npoz','eurusd')

      || 0
      ?}
   || {? {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?} & BEER.CWL=0
      || _params.NAG_AKR:='FAKS';
         _params.CZY_SEL:=0;
         _params.S_DPOZ:=1;
         exec('beer_cwal_pr','rezerwacje',_params);
         {? BEER.CWL || DPOZ.WPR_R:=-1; exec('po_cenaw','ceny',0); DPOZ.WPR_R:=fld ?}
      ?};
      1
   ?}
|? DPOZ.MJSR='Z'
|| ZK_P.blank();
   {? exec('spr_npoz','eurusd')

   || {? {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?} & BEER.CWL=0
      || _params.NAG_AKR:='ZK_N';
         _params.CZY_SEL:=0;
         _params.S_DPOZ:=1;
         exec('beer_cwal_pr','rezerwacje',_params);
         {? BEER.CWL || DPOZ.WPR_R:=-1; exec('po_cenaw','ceny',0); DPOZ.WPR_R:=fld ?}
      ?};
      1
   ?}
?}


\f3_cwl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: f3 BEER.CWL
::  OLD: \f3_cwl/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
exec('f3_csp','rezerwacje')


\po_cwl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji zmiennej BEER.CSP
::  OLD: \po_cwl/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? BEER.CWL<0
|| FUN.info('Cena nie może być mniejsza od zera.'@);
   _wyn:=0
?};
{? _wyn || exec('po_cenaw','ceny') ?};
_wyn


\po_krsre
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji zmiennej BEER.KRSREZ
::  OLD: \po_krsre/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? BEER.KRSREZ<0
|| FUN.info('Kurs nie może być mniejszy od zera.'@);
   _wyn:=0
?};
{? _wyn || exec('po_cenaw','ceny') ?};
_wyn


\pwczy_sd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem zmiennej BEER.CZY_SD
::  OLD: \pwczy_sd/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.CZY_SD:='';
BEER.STAN_D:=0;
{? __zknrea.TREE<>0
|| _mat:=exec('FindInSet','#table','M','MATKTM',__zknrea.KTM,__zknrea.KTM);
   BEER.STAN_D:=exec('FindInSet','#table','SM','SM',_mat,BUFMG.MG,"SM.SD",,,0);
   exec('pwst_rez','rezerwacje');
   {? BEER.ST_REZ='T' | BEER.ST_REZ=''
   || {? __zknrea.ILP<=BEER.STAN_D
      || BEER.CZY_SD:='T'
      |? BEER.STAN_D>0
      || BEER.CZY_SD:='C'
      ?}
   ?}
?};
''


\pwstan_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem zmiennej BEER.STAN_D
::  OLD: \pwstan_d/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? __zknrea.TREE<>0
|| _mat:=exec('FindInSet','#table','M','MATKTM',__zknrea.KTM,__zknrea.KTM);
   BEER.STAN_D:=exec('FindInSet','#table','SM','SM',_mat,BUFMG.MG,"SM.SD",,,0)
|| BEER.STAN_D:=0
?};
{? BEER.STAN_D<=0 || _wyn:=exec('findfnv','#color') ?};
_wyn


\kolejmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem BEER.KOLEJ
::  OLD: \kolejmg/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.KOLEJ:='';
{? __zknrea.TREE<>0
|| __kolmag.clear();
   {? __kolmag.find_key($__zknrea.ref(),$BUFMG.MG)
   || BEER.KOLEJ:={? __kolmag.NRK<4 || $__kolmag.NRK || '' ?}
   || BEER.KOLEJ:={? BUFMG.NRK<4 || $BUFMG.NRK || '' ?}
   ?}
?};
''


\pwdorea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem BEER.DOREA
::  OLD: \pwdorea/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
BEER.DOREA:=0;
ZK_RP.cntx_psh();
{? __zknrea.TREE<>0 & (ZK_RP.clear(); ZK_RP.seek(__zknrea.REF))
|| _byl:=0;
   _ilord:=exec('realOrdMg','rezerwacje',$BUFMG.MG);
   _ilzkr:=0;
   _dost:=__zknrea.DOST;
   _zkp:=ZK_RP.P;
   _dorea:=0;
   _mg:=BUFMG.MG;
   _dodat:=exec('ilrPlusZK_P','zamsiw_rea',_zkp,__refrea,'',$_mg);
   _zkrp:=$ZK_RP.ref();
   ZK_RP.cntx_psh();
   {? __zknrea.NAD=1 | ~_dost
   || ZK_RP.cntx_psh();
      ZK_RP.index('ZK_P');
      ZK_RP.prefix(__refrea,_zkp);
      {? ZK_RP.first()
      || {!
         |? {? _mg=ZK_RP.MG
            || {? ZK_RP.REZ().SC<>''
               || _ilr:=ZK_RP.ILR
               |? $ZK_RP.ref()<>_zkrp
               || ZK_RP.ILR:=_ilord-_ilzkr;
                  {? ZK_RP.ILR=0 || ZK_RP.W:='' || ZK_RP.W:='*' ?};
                  ZK_RP.put(1);
                  {? ~_byl || _ilr:=ZK_RP.ILR; _byl:=1 || _ilr:=0 ?}
               || _ilr:=_ilord;
                  _ilzkr+=ZK_RP.REZ().ILR;
                  _byl:=1
               ?};
               _dorea+=_ilr
            ?};
            ZK_RP.next()
         !}
      ?};
      ZK_RP.cntx_pop()
   |? __zknrea.MAG=BUFMG.MG().SYM
   || ZK_RP.clear();
      {? ZK_RP.seek(__zknrea.REF)
      || _dorea:=ZK_RP.ILR
      ?}
   ?};
   ZK_RP.cntx_pop();
   BEER.DOREA:=_dorea+_dodat;
   _wyn:=1
|| _wyn:=0
?};
ZK_RP.cntx_pop();
_wyn


\add_rez1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: dodaje jedną pozycję rezerwacji
::  OLD: \add_rez1/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__buf_mg');
__buf_mg:=null();
_ilp:=__zkpilp;
__ilprz:=0;
_zlim:=BEER.REZ_ZLIM;
{? _zlim<>2
|| {? _zlim=1
   || _obl:=exec('ile_rezz','rezerwacje',__zkpref)
   || _obl:=exec('ile_rezd','rezerwacje',__zkpnag,__zkppoz)
   ?};

   _ilp-=_obl[2];
   {? _zlim>0 || {? _ilp<0 || _ilp:=0 ?} ?};
   obj_del(_obl)
?};
HELP.POP:=0;
BEER.IL22:=0;
MG.win_dict('WYS');

{? _ilp>0
|| _atrmjs:=ATR.MJS;
   ATR.MJS:='REZ';

   REZ.cntx_psh();
   ZK_P.cntx_psh();
   ZK_N.cntx_psh();

   {? _zlim=2
   || __zkpmat:=null();
      __zkpnum:=0;
      __zkpilp:=1;
      __zkpdor:=0;
      __zkpmag:=null();
      __zkpdkc:=null();
      __zkpreb:=0;
      __zkprew:=0;
      __zkpws2:=1;
      __zkpj2:=null();
      ATR.DKCZKP:=null()
   ?};

   REZ.blank();
   _data:=date();
   _sesid:={? BEER.OKZKP<>0 || '' || 'T'+SYSLOG.ses_id() ?};
   {? _zlim
   || REZ.ZK_P:=null();
      REZ.ZK_N:=null();
      REZ.KH:=null();
      REZ.DK_C:=ATR.DKCZKP;
      REZ.ZL:=__zkpzl;
      REZ.ODDT:=_data;
      REZ.DODT:=__zkpdt;
      REZ.SYMDOK:='';
      REZ.NRPOZ:=__zkppoz;
      REZ.TYPDOK:='';
      REZ.BTERM:={? _zlim=2 || 'T' || 'N' ?};
      REZ.ZGP:=__zkpnag;
      {? _zlim=2
      || REZ.REFREA:=__zkpref
      || REZ.ZLIM:=REZ.REFSQL:=__zkpref
      ?};
      REZ.ZL_REZ:={? _zlim=2 || 'R' ||  'P' ?};
      REZ.SESID:=''
   || {? BEER.OKZKP<>0
      || REZ.ZK_P:=__zkpref;
         REZ.ZK_N:=REZ.ZK_P().N;
         REZ.KH:=REZ.ZK_P().N().KH;
         REZ.DK_C:=REZ.ZK_P().DK_C;
         REZ.ODDT:={? REZ.ZK_P().N().DP>_data || REZ.ZK_P().N().DP || _data ?};
         REZ.DODT:=REZ.ZK_P().DT;
         REZ.SYMDOK:=REZ.ZK_P().N().SYM;
         REZ.NRPOZ:=REZ.ZK_P().POZ;
         REZ.TYPDOK:=REZ.ZK_P().N().T().T;
         REZ.ZL:=REZ.ZK_P().ZL;
         REZ.BTERM:='N';
         REZ.SESID:=''
      || REZ.ZK_P:=null;
         REZ.ZK_N:=__zkpnag;
         REZ.KH:=REZ.ZK_N().KH;
         REZ.DK_C:=ATR.DKCZKP;
         REZ.ODDT:={? REZ.ZK_N().DP>_data || REZ.ZK_N().DP || _data ?};
         REZ.DODT:=__zkpdt;
         REZ.SYMDOK:=ZK_N.SYM;
         REZ.NRPOZ:=__zkppoz;
         REZ.TYPDOK:=REZ.ZK_N().T().T;
         REZ.ZL:=__zkpzl;
         REZ.BTERM:='N';
         REZ.SESID:=_sesid
      ?}
   ?};
   {? BEER.RODZR='W' || REZ.AUTO:=0 ?};
   REZ.M:=__zkpmat;
   {? _zlim=2
   || _mg:={? REZ.ZL().MG<>null() || REZ.ZL().MG || ST.MAG ?};
      {? _mg<>null()
      || MG.cntx_psh();
         MG.prefix();
         {? ~MG.f_seek(_mg)
         || _mg:=null()
         ?};
         MG.cntx_pop()
      ?};
      REZ.MG:=__zkpmag:=_mg
   || REZ.MG:=__zkpmag
   ?};
   REZ.JM:=REZ.M().J;
   REZ.J2:=__zkpj2;
   REZ.T2:=__zkpt2;
   REZ.WS2:=__zkpws2;
   REZ.TYP:={? _zlim || 'S' || 'Z' ?};
   BEER.DOSTAWA:=date(0,0,0);
   BEER.IL_DNI:=REZ.DODT-REZ.ODDT;
   REZ.NRK:=__zkpnum;
   {? (REZ.MG<>null & ~(REZ.MG().TYP*'DOST')) | (';DAPZ'*REZ.M().IDMOB)>1
   || REZ.btn_eopt('RED','ATRYB','state=grayed')
   || REZ.btn_eopt('RED','ATRYB','state=normal')
   ?};
   REZ.win_edit('RED');
   exec('set_efld_opt','rezerwacje','RED');
   REZ.win_efml('RED',BEER,'RODZREZ',,'ICON_BEFORE',"{? BEER.RODZR='B' || 'xwin16.png:61' || 'xwin16.png:83' ?}");
   {? ~BEER.DOL & ~((7+cur_win(1))='ZAM_PRZ')
   || exec('addsmmag','magazyn_stan');
      exec('rek_mate','magazyn_stan')
   ?};
   {? REZ.edit("exec('chkrez','rezerwacje')")
   || _ok:=1;
::    Sprawdzenie, czy do zlecenia jest przypisany surowiec o danym indeksie, jeżeli nie to zostaje on dodany
      {? _zlim=2
      || _zlgd:=exec('FindAndGet','#table',ZLGD,REZ.REFREA,,,null());
         _zl:=REZ.ZL;
         {? _zl<>null & _zlgd<>null
         || _zlimref:=exec('spr_nlim','zl_nlimit',_zl,_zlgd,0);
            {? _zlimref<>null()
            || REZ.REFSQL:=REZ.ZLIM:=$_zlimref
            || _ok:=0
            ?}
         ?}
      ?};
      {? _ok>0
      ||
::       sprawdzamy czy istnieje juz rekord jesli nie to dodajemy nowy
         _mg:=REZ.MG;
         _sc:=REZ.SC;
         _ilr:=REZ.ILR;
         _oddt:=REZ.ODDT;
         _dodt:=REZ.DODT;
         _uw:=REZ.UW;
         _dkc:=REZ.DK_C;
         _ws2:=REZ.WS2;
         _jm2:=REZ.J2;
         _ktm:=REZ.M;
         _zlrez:=REZ.ZL_REZ;
         REZ.cntx_psh();
         {? _zlim=2
         || REZ.index('ZLREZR');
            REZ.prefix(__zkpzl,'S',_zlrez,__zkpref,_ktm,_mg,_sc,'',)
         |? _zlim=1
         || REZ.index('ZLREZZ');
            REZ.prefix(__zkpzl,'S',BEER.RODZR,__zkpref,_zlrez,__zkpmat,_mg,_sc,)
         || {? BEER.OKZKP<>0
            || REZ.index('URODZ');
               REZ.prefix(__zkpref,__zkpmat,_mg,BEER.RODZR,_sc,)
            || REZ.index('ZRODZ');
               REZ.prefix(__zkpnag,__zkppoz,__zkpmat,_mg,BEER.RODZR,_sc,)
            ?}
         ?};
         {? REZ.first()
         || {!
            |? {? {? _zlim || REZ.DK_C=_dkc || REZ.ODDT=_oddt & REZ.DODT=_dodt & REZ.UW=_uw & REZ.DK_C=_dkc ?}
               || REZ.ILR+=_ilr;
                  REZ.SESID:=_sesid;
                  {? ~_zlim
                  || exec('aktzil2','zamsiw_poz')
                  ?};
                  REZ.put(1);
                  _ilr:=0;
                  0
               || REZ.next()
               ?}
            !}
         ?};
         REZ.cntx_pop();

         {? _ilr>0 || REZ.add(1) ?};
         exec('aktu_rez','rezerwacje',__zkpmat,__zkpnum,REZ.ILR,{? _zlim || ''  || $__zkpnag ?});
         exec('akt_infr','rezerwacje',~BEER.DOL)
      ?}
   ?};
   REZ.cntx_pop();
   ZK_P.cntx_pop();
   ZK_N.cntx_pop();
   ATR.MJS:=_atrmjs
|| FUN.info('Cała ilość pozostała (%1 %2) jest aktualnie zarezerwowana bezwarunkowo.\n'
            'Dołączenie nowej rezerwacji niemożliwe.'@[{? _zlim>0 || form(_ilp) || form(ZK_P.ILP) ?}
            ,{? _zlim>0 || exec('FindAndGet','#table',M,__zkpmat,,"M.J().KOD",'') || ZK_P.JM().KOD ?}])
?};
MG.win_dict('WYB');
VAR_DEL.delete('__buf_mg');
~~


\pop_rez1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: poprawia jedną pozycje rezerwacji
::  OLD: \pop_rez1/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? REZ.SC<>'' || exec('rek_rez1','rezerwacje') ?};

_zlim:=BEER.REZ_ZLIM;

BEER.MJSLOG:='POP';
VAR_DEL.delete('__buf_mg');
__buf_mg:=REZ.MG;
_atrmjs:=ATR.MJS;
ATR.MJS:='REZ';
MG.win_dict('WYS');

_dor:=REZ.ILR;
BEER.IL22:=REZ.IL2;
HELP.POP:=1;

REZ.cntx_psh();
ZK_P.cntx_psh();
ZK_N.cntx_psh();
REZ.win_edit('RED');
exec('set_efld_opt','rezerwacje','RED');
REZ.win_efml('RED',BEER,'RODZREZ',,'ICON_BEFORE',"{? BEER.RODZR='B' || 'xwin16.png:61' || 'xwin16.png:83' ?}");
BEER.IL_DNI:=REZ.DODT-REZ.ODDT;
{? ~BEER.DOL & ~(7+cur_win(1))='ZAM_PRZ'
|| exec('addsmmag','magazyn_stan');
   exec('rek_mate','magazyn_stan')
?};
{? REZ.SC<>'' | (REZ.MG<>null & ~(REZ.MG().TYP*'DOST') ) | (';DAPZ'*REZ.M().IDMOB)>1
|| REZ.btn_eopt('RED','ATRYB','state=grayed')
|| REZ.btn_eopt('RED','ATRYB','state=normal')
?};
_ilprzed:=REZ.ILR;
__ilprz:={? REZ.RODZ='B' || REZ.ILR || 0 ?};
{? _zlim=2
|| __zkpmat:=REZ.M;
   __zkpnum:=REZ.NRK;
   __zkpilp:=REZ.ILR;
   __zkpmag:=REZ.MG;
   __zkpdkc:=REZ.DK_C;
   __zkpws2:=exec('oblWSP','jm',REZ.M);
   __zkpj2:={? REZ.M().J2<>null() || REZ.M().J2 || REZ.M().J ?};
   ATR.DKCZKP:=REZ.DK_C
?};
{? REZ.edit("exec('chkrez','rezerwacje')")
|| REZ.TYP:={? _zlim || 'S' || 'Z' ?};
   {? REZ.RODZ='W' || REZ.AUTO:=0 ?};
   REZ.put(1);
   {? _ilprzed>REZ.ILR & REZ.RODZ='B' || exec('addWrez','rezerwacje',_ilprzed-REZ.ILR) ?};
::   {? BEER.OKZKP=0 & _ilprzed<>REZ.ILR & REZ.RODZ='B' || exec('delaurez','rezerwacje') ?};
   {? BEER.OKZKP<>0 & ~_zlim
   || _zkp:=tab_tmp(1,'MAT','STRING[16]','','ZKP','STRING[16]','');
      _zkp.blank(); _zkp.MAT:=$ZK_P.M; _zkp.ZKP:=$ZK_P.ref(); _zkp.add(1);
      exec('aktu_rez','rezerwacje',__zkpmat,__zkpnum,fabs(REZ.ILR-__ilprz),$__zkpnag,_zkp);
      obj_del(_zkp)
   || exec('aktu_rez','rezerwacje',__zkpmat,__zkpnum,fabs(REZ.ILR-__ilprz),{? _zlim || '' || __zkpnag ?})
   ?};
   exec('akt_infr','rezerwacje',~BEER.DOL)
?};
REZ.cntx_pop();
ZK_P.cntx_pop();
ZK_N.cntx_pop();

MG.win_dict('WYB');
ATR.MJS:=_atrmjs;
VAR_DEL.delete('__buf_mg');
BEER.MJSLOG:='';
~~


\chkrez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza poprawnosc wypelnienia danych
::   WY: ''-OK pole-nie
::  OLD: \chkrez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_zlim:=BEER.REZ_ZLIM;
{? REZ.ODDT<date() & (1+menu_txt())<>'P'
|| FUN.info('Rezerwacja nie może obowiązywać wcześniej niż dzisiejsza data.'@);
   _wyn:='ODDT'
|? REZ.RODZ='W' & (_dt:={? _zlim=2 || ZLGD.ZL().OD |? _zlim=1 || ZLIM.ZLEC().OD || ZK_N.DP ?};REZ.ODDT<_dt)
|| FUN.info('Rezerwacja nie może obowiązywać wcześniej niż data wprowadzenia %2,\n'
            'mianowicie: %1.'@[form(_dt),{? _zlim || 'zlecenia'@ || 'zamówienia'@ ?}]);
   REZ.ODDT:=_dt;
   _wyn:='ODDT'
|? REZ.DODT>__zkpdt
|| FUN.info('Rezerwacja nie może obowiązywać później niż termin realizacji %2,\n'
            'mianowicie: %1.'@
               [  form(__zkpdt),
                  {? _zlim || {? ZLIM.GROP<>null() || 'grupy operacji'@ || 'zlecenia'@ ?} || 'pozycji zamówienia'@ ?}
               ]
            );
   REZ.DODT:=__zkpdt;
   _wyn:='DODT'
|? REZ.DODT=date(0,0,0) & REZ.ZL_REZ<>'R'
|| FUN.info('Należy podać do kiedy ma obowiązywać rezerwacja.'@);
   _wyn:='DODT'
|? REZ.DODT<REZ.ODDT & REZ.ZL_REZ<>'R'
|| FUN.info('Data nie może być mniejsza od daty: %1.'@[form(REZ.ODDT)]);
   _wyn:='DODT'
|? REZ.ILR<=0
|| FUN.info('Ilość powinna być liczbą większą od zera.'@);
   _wyn:='ILR'
|? ~exec('sprsumr','rezerwacje',{? (1+menu_txt())='P' ||
     {? _zlim=2 || exec('FindAndGet','#table',ZLGD,REZ.REFREA,,,null())
     |? _zlim=1 || exec('FindAndGet','#table',ZLIM,REZ.ZLIM,,,null()) || REZ.ZK_P ?} || null ?}
     ,{? (1+menu_txt())='P' || REZ.ref() || null ?}
     ,REZ.ILR,REZ.MG,REZ.RODZ,REZ.SC,,{? REZ.SC<>'' || null || REZ.DK_C ?})
|| _wyn:='ILR'
?};
_wyn


\sprsumr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza sume rezerwacji dla danej pozycji zamowienia lub limitu zlecenia
::   WE: _a - ZK_P.ref()/ZLIM.ref()
::       _b - REZ.ref()
::       _c - ilosc do rezerwacji
::       _d - magazyn
::       _e - rodzaj rezerwacji
::       _f - ref SQL dostawy
::       [_g] - czy komunikat, 1-tak(domyslnie), 0-nie
::       [_h] - ref DK_C domyslnie null
::   WY: 1-ok 0-nie jest dobrze
::  OLD: \sprsumr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=7 || {? type_of(_g)<>1 || _g:=1 ?} || _g:=1 ?};
{? _>=8 || {? type_of(_h)<>7 || _h:=null ?} || _h:=null ?};

_wyn:=1;
_zlim:=BEER.REZ_ZLIM;

_ilp:=0;
_ilb:=0;
_ilw:=0;
_ild:=0;
_stm:=0;
_std:=0;
_dokl:=0;
_jm:='';

ZK_P.cntx_psh();
REZ.cntx_psh();

_beerm:=BEER.M;
BEER.M:=__zkpmat;
_ilp:=__zkpilp;
_dokl:=BEER.M().DOKL;
_jm:=BEER.M().J().KOD;
_dkc:={? _h=null || __zkpdkc || _h ?};
{? _d<>null || exec('obl_stan','magazyn_stan',__zkpmat,1,_d,,,,,,,,_dkc)
|? __zkprod='Z' || exec('obl_stan','magazyn_stan',__zkpmat,4,,,,,,,,_dkc)
|? __zkprod='W' || exec('obl_stan','magazyn_stan',__zkpmat,10,,,,,,,,_dkc)
|| BEER.SD:=0
?};
_stm:=BEER.SD;
_std:={? _f<>'' & _a<>null || exec('obl_stad','magazyn_stan',__zkpmat,_f)
      |? _f<>'' & _a=null || exec('obl_stad','magazyn_stan',__zkpmat,_f,,__zkpnag,__zkppoz)
      || 0
      ?};
{? _zlim=2
|| REZ.index('ZLREZR');
   REZ.prefix(__zkpzl,'S','R',{? _a<>null() || $_a || __zkpref ?},__zkpmat,__zkpmag)
|? _zlim=1
|| REZ.index('ZLIMA');
   REZ.prefix({? _a<>null || $_a || __zkpref ?},)
|| {? _a<>null
   || REZ.index('ZK_P');
      REZ.prefix(_a)
   || REZ.index('ZK_N');
      REZ.prefix(__zkpnag,__zkppoz)
   ?}
?};
{? REZ.first()
|| {!
   |? {? REZ.RODZ='B' & (_d=null() | REZ.MG=_d)
      || _ilb+={? _b=null | REZ.ref()<>_b || REZ.ILR || 0 ?};
         {? _b<>null & REZ.ref=_b || _stm+=REZ.ILR ?};
         {? _f<>'' & REZ.SC=_f
         || _ild+={? _b=null | REZ.ref()<>_b || REZ.ILR || 0 ?};
            {? _b<>null & REZ.ref=_b || _std+=REZ.ILR ?}
         ?}
      |? REZ.RODZ='W' & (_d=null() | REZ.MG=_d)
      || _ilw+={? _b=null | REZ.ref()<>_b || REZ.ILR || 0 ?}
      ?};
      REZ.next()
   !}
?};

BEER.M:=_beerm;

REZ.cntx_pop();
ZK_P.cntx_pop();

_all:=_ilb+_ilw;

{? REZ.ZL_REZ<>'R' & (_all+_c)>_ilp
|| {? _g
   || _ilmax:=_ilp-_all;
      {? _ilmax<0 || _ilmax:=0 ?};
      FUN.info(
         'Podana ilość do rezerwacji spowoduję przekroczenie ilości zadeklarowanej dla %1.\n'@
         [{? _zlim || 'surowca zlecenia'@ || 'pozycji zamówienia'@ ?}]+
         'Ilość pozostała: %1 %2,\n'@[form(_ilp,,_dokl),_jm]+
         'Ilość rezerwowana: %1 %2,\n\n'@[form(_all,,_dokl),_jm]+
         'Maksymalna ilość jaką można zarezerwować: %1 %2.'@
         [form(_ilmax,,_dokl),_jm]
      );
      REZ.ILR:=_ilmax$_dokl
   ?};
   _wyn:=0
|? _e='B' & _c>_stm
|| {? _g
   || FUN.info(
         'Podana ilość do rezerwacji jest większa od aktualnej ilości na stanie magazynowym.\n'
         'Dostępna ilość w magazynie(nach) jaką można zarezerwować: %1 %2.'@[form(_stm,,_dokl),_jm]
      )
   ?};
   _wyn:=0
|? _e='B' & _f<>'' & (_ild+_c)>_std
|| {? _g
   || FUN.info(
         'Podana ilość do rezerwacji dla danej dostawy jest większa od aktualnej ilości dostawy.\n'
         'Dostępna ilość dostawy jaką można zarezerwować: %1 %2.'@[form(_std,,_dokl),_jm]
      )
   ?};
   _wyn:=0
?};
:: sprawdzenie czy dla rezerwacji warunkowej w danej chwili nie ma przypadkiem stanu do realizacji
{? _wyn & REZ.RODZ='W' & REZ.ODDT<=date() & _stm>0
|| {? _stm>=REZ.ILR
   || _rw:=0;
      _rb:=REZ.ILR
   || _rw:=REZ.ILR-_stm;
      _rb:=_stm
   ?};

   _wyn:=FUN.ask(
      {? _rw>0
      || 'Ponieważ w danej chwili istnieje stan dostępny w uprawnionych magazynach,\n'
         'cześć rezerwacji warunkowej zostanie automatycznie zmieniona na bezwarunkową.'@
      || 'Ponieważ w danej chwili istnieje stan dostępny w uprawnionych magazynach,\n'
         'rezerwacja warunkowa zostanie automatycznie zmieniona na bezwarunkową.'@
      ?}+'\n';
      'Rezerwacja warunkowa: %1.\n'
      'Rezerwacja bezwarunkowa: %2.\n\n'
      'Czy zatwierdzić zmiany typu rezerwacji?'@[form(_rw,,_dokl,'99'),form(_rb,,_dokl,'99')]
   )
?};
:: sprawdzenie czy nie ma podpiętych warunkowych
{? _wyn & REZ.RODZ='B' & __ilprz>REZ.ILR & exec('czywardt','rezerwacje')
|| _wyn:=FUN.ask(
      'Ponieważ zmniejszono ilość rezerwacji bezwarunkowej, lecz dla %1\n'
      'wprowadzono rezerwacje warunkowe obowiązujące od dnia dzisiejszego,\n'
      'rezerwacje warunkowe zostaną automatycznie zamienione na rezerwację bezwarunkową\n'
      'wg dostępnej ilości w uprawnionych magazynach.\n\n'
      'Czy zatwierdzić zmniejszenie ilości rezerwacji?'@
      [{? _zlim || 'danego surowca zlecenia'@ || 'danej pozycji zamówienia'@ ?}]
   )
?};

_wyn


\akt_infr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizuje dane galazek na tabelce rezerwacji
::   WE: [_a] - czy robic zapis (domyslnie 1-tak) 0-nie
::  OLD: \akt_infr/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
_zlim:=BEER.REZ_ZLIM;
_rg:=obj_new(3);
{! _i:=1..3 |! _rg[_i]:=0 !};

REZ.cntx_psh();
__rezzkp.cntx_psh();
__rezzkp.clear();
__rezzkp.prefix(0);
{? __rezzkp.first()
|| _rg[1]:=__rezzkp.ref();
   __rezzkp.prefix(__rezzkp.ref());
   {? __rezzkp.first()
   || _i:=1;
      {!
      |? _i+=1;
         _rg[_i]:=__rezzkp.ref();
         __rezzkp.next() & _i<3
      !}
   ?}
?};
{! _i:=2..3
|! __rezzkp.clear();
   __rezzkp.prefix(_rg[_i]);
   {? __rezzkp.first() || {! |? __rezzkp.del() !} ?}
!};

_ilrb:=0;
_ilrw:=0;
_ilrd:=0;
_ilra:=0;
_oddt:={? _zlim || date() || ZK_P.ODDT ?};
_dodt:=date(0,0,0);
{? _zlim=2
|| REZ.index('ZLREZR');
   REZ.prefix(__zkpzl,'S','R',__zkpref,)
|? _zlim=1
|| REZ.index('ZLIMA');
   REZ.prefix(__zkpref,)
|| {? BEER.OKZKP
   || REZ.index('ZK_P');
      REZ.prefix(__zkpref)
   || REZ.index('ZK_N');
      REZ.prefix(__zkpnag,__zkppoz)
   ?}
?};
__zkpreb:=0;
__zkprew:=0;
{? REZ.first()
|| {!
   |? _gal:={? REZ.RODZ='B' || _rg[2] |? REZ.RODZ='W' || _rg[3] || 0 ?};
      {? REZ.RODZ='B'
      || __zkpreb+=REZ.ILR;
         _ilrb+=REZ.ILR;
         {? REZ.SC<>'' || _ilrd+=REZ.ILR ?}
      |? REZ.RODZ='W'
      || __zkprew+=REZ.ILR;
         _ilrw+=REZ.ILR;
         {? REZ.AUTO || _ilra+=REZ.ILR ?}
      ?};
      {? REZ.DODT>_dodt || _dodt:=REZ.DODT ?};
      {? _gal
      || __rezzkp.clear();
         __rezzkp.blank();
         __rezzkp.TREE:=_gal;
         __rezzkp.LAB:={? REZ.MG<>null || REZ.MG().SYM+' - '+REZ.MG().NAZ || 'brak magazynu' ?};
         __rezzkp.ILR:=REZ.ILR;
         exec('rek_rez1','rezerwacje');
         __rezzkp.DST:={? DISP.DOST<>'' || DISP.DOST+' z dnia '+form(BEER.DOSTAWA) || '' ?};
         __rezzkp.TYP:=REZ.RODZ;
         __rezzkp.add(1)
      ?};
      REZ.next()
   !}
?};
:: podsumowania
{! _i:=1..3
|! _sum:=0;
   __rezzkp.clear();
   {? __rezzkp.seek(_rg[4-_i])
   || __rezzkp.cntx_psh();
      __rezzkp.prefix(_rg[4-_i]);
      {? __rezzkp.first() || {! |? _sum+=__rezzkp.ILR; __rezzkp.next() !} ?};
      __rezzkp.cntx_pop();
      __rezzkp.ILR:=_sum;
      __rezzkp.put(1)
   ?}
!};
{? _zlim<>2
|| exec('wypilzkp','rezerwacje');
   __ilzzkp.clear();
   __ilzzkp.first();
   grp_disp(__ilzzkp,__winzkp)
?};

__rezzkp.cntx_pop();
{? ~_zlim
|| ZK_P.ILRB:=_ilrb;
   ZK_P.ILRW:=_ilrw;
   ZK_P.ILRD:=_ilrd;
   ZK_P.ILRA:=_ilra;
   ZK_P.ZNB:={? _ilrb>0 || 'T' || 'N' ?};
   ZK_P.ZNW:={? _ilrw>0 || 'T' || 'N' ?};
   ZK_P.ZNR:={? ZK_P.ILP<ZK_P.ILZ || 'T' || 'N' ?};
   ZK_P.SR:=_ilrb;
   ZK_P.DOR:=_ilrb+_ilrw;
   ZK_P.REZ:=ZK_P.ILRB>0 | ZK_P.ILRA>0;
   ZK_P.DOST:=ZK_P.ILRD>0;
   _doroz:=ZK_P.DOR-(ZK_P.ILRW-ZK_P.ILRA);
   ZK_P.ILBEZ:={? ZK_P.END || 0 |? ZK_P.ILP>_doroz || ZK_P.ILP-_doroz || 0 ?};
   ZK_P.CZYBEZ:={? ZK_P.ILBEZ>0 || 'T' || 'N' ?};
   ZK_P.ODDT:={? _oddt=date(0,0,0) || ZK_P.ODDT:=ZK_P.N().DP || _oddt ?};
   {? _dodt<>date(0,0,0)
   || ZK_P.DODT:=_dodt
   || ZK_P.DODT:=ZK_P.DT
   ?};
   {? _a || ZK_P.put(1) ?}
?};
REZ.cntx_pop();
~~


\wypilzkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wypelnia tabelke informacji o pozycji zamowienia
::  OLD: \wypilzkp/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_zlim:=BEER.REZ_ZLIM;
__ilzzkp.clear(); {? __ilzzkp.first() || {! |? __ilzzkp.del() !} ?};
__ilzzkp.blank(); __ilzzkp.LP:=1; __ilzzkp.OPIS:={? _zlim || 'Pozostało' || 'Ilość zamawiana'?};
__ilzzkp.ILE:=__zkpilp; __ilzzkp.add(1);
__ilzzkp.blank(); __ilzzkp.LP:=2; __ilzzkp.OPIS:={? _zlim || 'Zarezerwowano' || 'Do rezerwacji' ?};
__ilzzkp.ILE:=__zkpreb+__zkprew; __ilzzkp.add(1);
__ilzzkp.blank(); __ilzzkp.LP:=3; __ilzzkp.OPIS:='Rezerwacje bezwarunkowe'; __ilzzkp.ILE:=__zkpreb; __ilzzkp.add(1);
__ilzzkp.blank(); __ilzzkp.LP:=4; __ilzzkp.OPIS:='Rezerwacje warunkowe'; __ilzzkp.ILE:=__zkprew; __ilzzkp.add(1);
~~


\delaurez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: usuwa automatyczne rezerwacje warunkowe
::  OLD: \delaurez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
{? BEER.OKZKP<>0
|| REZ.index('ZK_PA');
   REZ.prefix(ZK_P.ref(),'W',1)
|| REZ.index('ZK_NA');
   REZ.prefix(__zkpnag,__zkppoz,'W',1)
?};
{? REZ.first() || {! |? REZ.del() !} ?};
ZK_N.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();
~~


\del_rez1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: usuniecie rezerwacji dla zamowienia
::   WE: [_a] - czy odświeżać pozycje zamówienia na bazie tabeli __rezzkp: [1] - Tak, 0 - Nie
::  OLD: \del_rez1/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_rezm:=REZ.M;
_reznr:=REZ.NRK;
_rezil:=0;
_rezzkn:=$REZ.ZK_N;
_czy:=0;
_czy_tab:={? var_pres('_a')=type_of(1) || _a || 1 ?};
_zlim:=BEER.REZ_ZLIM;

_tab:=REZ.sel_aget();
REZ.sel_adel();
ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
{? _tab.size()
|| {? REZ.RODZ='B' & exec('czywardt','rezerwacje')
   || _ok:=FUN.ask('Ponieważ usuwamy rezerwacje bezwarunkowe, lecz dla danej pozycji zamówienia\n'
            'wprowadzono rezerwacje warunkowe obowiązujące od dnia dzisiejszego,\n'
            'rezerwacje warunkowe zostaną automatycznie zamienione na rezerwację bezwarunkową\n'
            'wg dostępnej ilości w uprawnionych magazynach.\n\n'
            'Czy usunąć zaznaczone rezerwacje?'@)
   || _ok:=FUN.ask('Czy usunąć zaznaczone rezerwacje?'@)
   ?};
   {? _tab.first() & _ok
   || _rodzB:=0;
      {!
      |? {? (REZ.clear(); REZ.seek(_tab.REF,))
         || _czy:=1;
            {? REZ.NRK<_reznr || _reznr:=REZ.NRK ?};
            _rezil+=REZ.ILR;
            _rodzB:=REZ.RODZ='B';
::            {? REZ.RODZ='B' || exec('delaurez','rezerwacje') ?};
            REZ.del(1,1)>1
         ?};
         _tab.next()
      !};
      {? ~_zlim & BEER.OKZKP<>0 & _rodzB || ZK_P.DOR-=_rezil; ZK_P.put(1) ?}
   ?}
||
:: sprawdzenie czy nie ma podpiętych warunkowych
   {? REZ.RODZ='B' & exec('czywardt','rezerwacje')
   || _ok:=FUN.ask('Ponieważ usuwamy rezerwację bezwarunkowej, lecz dla danej pozycji zamówienia\n'
            'wprowadzono rezerwacje warunkowe obowiązujące od dnia dzisiejszego,\n'
            'rezerwacje warunkowe zostaną automatycznie zamienione na rezerwację bezwarunkową\n'
            'wg dostępnej ilości w uprawnionych magazynach.\n\n'
            'Czy usunąć daną rezerwację?'@)
   || _ok:=FUN.ask('Czy usunąć daną rezerwację?'@)
   ?};
   {? _ok
   || _czy:=1;
      _rezil:=REZ.ILR;
      _rodzB:=REZ.RODZ='B';
::      {? REZ.RODZ='B' || exec('delaurez','rezerwacje') ?};
      REZ.del(1,1);
      {? ~_zlim & BEER.OKZKP<>0 & _rodzB || ZK_P.DOR-=_rezil; ZK_P.put(1) ?}
   ?}
?};
{? _czy
|| exec('aktu_rez','rezerwacje',_rezm,_reznr,_rezil,_rezzkn);
   {? _czy_tab>0
   || exec('akt_infr','rezerwacje',~BEER.DOL)
   || {? ~_zlim
      || exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1)
      ?}
   ?}
?};
ZK_P.cntx_pop();
ZK_N.cntx_pop();
REZ.cntx_pop();
~~


\czywardt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy istnieją nieautomatyczne rezerwacje warunkowe od daty
::   WY: 1-tak 0-nie
::  OLD: \czywardt/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_zlim:=BEER.REZ_ZLIM;
ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
{? _zlim<>2
|| {? _zlim=1
   || REZ.index('ZLIMA');
      REZ.prefix(__zkpref,'W',0)
   || {? BEER.OKZKP<>0
      || REZ.index('ZK_PA');
         REZ.prefix(ZK_P.ref(),'W',0)
      || REZ.index('ZK_NA');
         REZ.prefix(__zkpnag,__zkppoz,'W',0)
      ?}
   ?};
   {? REZ.first() || {! |? _wyn:=REZ.ODDT<=date(); ~_wyn & REZ.next() !} ?}
?};
ZK_N.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();
_wyn


\wys_rezy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wyswietla pozycje rezerwacji
::  OLD: \wys_rezy/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_edit:=REZ.win_edit('?');
{? _edit='' || _edit:='RED' ?};
_atrmjs:=ATR.MJS;
ATR.MJS:='REZ';
{? exec('czytadkc','mat_atr',REZ.DK_C,REZ.RDKC)
|| _ndit:='DISP';
   REZ.win_edit(_ndit);
   REZ.win_efml('DISP',BEER,'RODZREZ',,'ICON_BEFORE'
    ,"{? BEER.RODZR='B'
      || 'xwin16.png:61'
      |? BEER.RODZR='W'
      || 'xwin16.png:83'
      || 'xwin16.png:161'
      ?}")
|| {? _edit='TYM' || _edit:='RED' ?};
   REZ.win_edit(_edit);
   REZ.win_efml('RED',BEER,'RODZREZ',,'ICON_BEFORE'
    ,"{? BEER.RODZR='B'
      || 'xwin16.png:61'
      |? BEER.RODZR='W'
      || 'xwin16.png:83'
      || 'xwin16.png:161'
      ?}")
?};
exec('set_efld_opt','rezerwacje');
REZ.display();
REZ.win_edit(_edit);
ATR.MJS:=_atrmjs;
1


\delrezt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: usuwa rezerwacje tymczasowa oraz aktualizuje status
::   WE: _[1]=0-pytanie czy usuwac, =1-usuwac bez pytania
::       _[2]=0-nie usuwac zapisu w __REZ, =1-usuwac zapis
::  OLD: \delrezt/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_[1]:={? _>=1 || {? var_pres('_[1]')=1 || _[1] || 0 ?} || 0 ?};
_[2]:={? _>=2 || {? var_pres('_[2]')=1 || _[2] || 0 ?} || 0 ?};

REZ.cntx_psh();
SM.cntx_psh();

_tab:=REZ.sel_aget();
REZ.sel_adel();

{? _tab.size()
|| _nrk:=0;
   _ilr:=0;
   {? _tab.first() & (_[1]=1 | FUN.ask('Czy usunąć zaznaczone rezerwacje?'@))
   || do();
      {!
      |? REZ.cntx_psh();
         {? (REZ.clear(); REZ.seek(_tab.REF,))
         || _mat:=REZ.M;
            _mag:=REZ.MG;
            {? _nrk>REZ.NRK || _nrk:=REZ.NRK ?};
            _ilr+=REZ.ILR;
            REZ.del();
            {? _[2]=1 || __REZ.del() ?}
         ?};
         REZ.cntx_pop();
         _tab.next()
      !};
      exec('obl_stan','magazyn_stan',_mat,1,_mag);
      exec('aktu_rez','rezerwacje',_mat,_nrk,_ilr,,,_mag);
      end()
   ?}
|| {? _[1]=1 | FUN.ask('Czy usunąć daną rezerwację?'@)
   || _mat:=REZ.M;
      _nrk:=REZ.NRK;
      _ilr:=REZ.ILR;
      _mag:=REZ.MG;
      do();
      REZ.del();
      exec('obl_stan','magazyn_stan',_mat,1,_mag);
      exec('aktu_rez','rezerwacje',_mat,_nrk,_ilr,,,_mag);
      {? _[2]=1 || __REZ.del() ?};
      end()
   ?}
?};
REZ.cntx_pop();
SM.cntx_pop();
''


\wybzrezt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wybor pozycji do przepisania
::   WE: [_a] - 1-wybor (domyslnie), 0-wycofanie
::  OLD: \wybzrezt/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

{? _a
|| _pr:=0;
   {? DPOZ.MJSR='M' & ND.TYP().Z='N'
   ||
      _pr:={? ND.PROJEKT='' || 1 || 2 ?};
      {? _pr=2
      ||
         exec('projekt2projm','projekty',ND.PROJEKT);
         _proj:=PROJM.PROJEKTY;
         _etap:=PROJM.PROJETAP;
         _zl:=PROJM.ZL
      ?}
   ?};
   _pr1:=1;
   {? _pr=1
   || _pr1:=REZ.PROJEKT<>''
   |? _pr=2
   ||
      exec('projekt2projm','projekty',REZ.PROJEKT);
      _pr1:=_proj=PROJM.PROJEKTY & (_etap=null | _etap=PROJM.PROJETAP) & (_zl=null | _zl=PROJM.ZL);
      ''
   ?};
   {? _pr1=0
   || exec('projekt2projm','projekty',ND.PROJEKT);
      _dl:={? +PROJM.PROJS>+PROJM.ETAPS || +PROJM.PROJS || +PROJM.ETAPS ?};
      {? _dl<+PROJM.ZLS || _dl:=+PROJ.ZLS ?};
      FUN.info('Rezerwacja nie dotyczy: '@
         +{? PROJM.PROJS='' || '' || '\n\n'+'Projektu: '@+form(PROJM.PROJS,-_dl) ?}
         +{? PROJM.ETAPS='' || '' || '\n'+'Etapu:    '@+form(PROJM.ETAPS,-_dl) ?}
         +{? PROJM.ZLS=''   || '' || '\n'+'Zadania:   '@+form(PROJM.ZLS,-_dl) ?}
         +'\n\nWybór niedostępny.'@);
      return
   ?}
?};

_tab:=REZ.sel_aget();
REZ.sel_adel();
REZ.cntx_psh();
{? _tab.size()
|| {? FUN.ask({? _a
              || 'Czy wybór zaznaczonych pozycji?'@
              || 'Czy rezygnacja z wyboru zaznaczonych pozycji?'@
              ?}) & _tab.first()
   || _md:={? DPOZ.MJSR='M' || ND.MD || null ?};
      _data:={? DPOZ.MJSR='M' || ND.D |? DPOZ.MJSR='F' || FAKS.D || date(0,0,0) ?};
      _time:={? DPOZ.MJSR='M' || ND.T || time(0,0,0) ?};
      {!
      |? {? (REZ.clear(); REZ.seek(_tab.REF,))
         || {? {? DPOZ.MJSR='M' | DPOZ.MJSR='F'
               || exec('sprd_inp','magazyn_inw',REZ.M,_data,REZ.MG,0,_time)
                   & {? _md<>null || exec('sprd_inp','magazyn_inw',REZ.M,_data,_md,0,_time) || 1 ?}
               || 1
               ?}
            || {? _a
               || __przrez.clear();
                  {? ~__przrez.find_key($REZ.ref())
                  || __przrez.blank();
                     __przrez.REZ:=$REZ.ref();
                     __przrez.REA:=REZ.ILR;
                     __przrez.add(1)
                  || __przrez.REA:=REZ.ILR;
                     __przrez.put(1)
                  ?}
               || __przrez.clear();
                  {? __przrez.find_key($REZ.ref())
                  || __przrez.del()
                  ?}
               ?}
            ?}
         ?};
         _tab.next()
      !}
   ?}
|| _md:={? DPOZ.MJSR='M' || ND.MD || null ?};
   _data:={? DPOZ.MJSR='M' || ND.D |? DPOZ.MJSR='F' || FAKS.D || date(0,0,0) ?};
   _time:={? DPOZ.MJSR='M' || ND.T || time(0,0,0) ?};
   {? {? DPOZ.MJSR='M' | DPOZ.MJSR='F'
      || exec('sprd_inp','magazyn_inw',REZ.M,_data,REZ.MG,0,_time)
          & {? _md<>null || exec('sprd_inp','magazyn_inw',REZ.M,_data,_md,0,_time) || 1 ?}
      || 1
      ?}
   || {? _a
      || __przrez.clear();
         {? ~__przrez.find_key($REZ.ref())
         || __przrez.blank();
            __przrez.REZ:=$REZ.ref();
            __przrez.REA:=REZ.ILR;
            __przrez.add(1)
         || __przrez.REA:=REZ.ILR;
            __przrez.put(1)
         ?}
      || __przrez.clear();
         {? __przrez.find_key($REZ.ref())
         || __przrez.del()
         ?}
      ?}
   ?}
?};
REZ.cntx_pop();
~~


\popzrezt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: poprawia pozycje rezerwacji tymczasowej
::  OLD: \popzrezt/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? BEER.TYMREA=0 || BEER.TYMREA:=REZ.ILR ?};
BEER.KRSREZ:=TAZ.KRS;

_valid:="
   exec('spr_rab','ceny',DISP.RABP,0)
";

{? REZ.edit(_valid)
|| _csp:=BEER.CSP;
   _rea:=BEER.TYMREA;
   _cwl:=BEER.CWL;
   _rab:=DISP.RABP;
   _rak:=DISP.RABP;
   _krs:=BEER.KRSREZ;
   _promo:=$BEER.PROMO;
   _tar_h:=$BEER.TAR_H;
   _tartms:=BEER.TAR_TMS;
   __przrez.clear();
   {? __przrez.find_key($REZ.ref())
   || __przrez.REA:=_rea;
      __przrez.CSP:=_csp;
      __przrez.CWL:=_cwl;
      __przrez.RAB:=_rab;
      __przrez.RAK:=_rak;
      __przrez.KRS:=_krs;
      __przrez.PROMO:=_promo;
      __przrez.TAR_H:=_tar_h;
      __przrez.TAR_TMS:=_tartms;
      __przrez.put(1)
   || __przrez.blank();
      __przrez.REZ:=$REZ.ref();
      __przrez.REA:=_rea;
      __przrez.CSP:=_csp;
      __przrez.CWL:=_cwl;
      __przrez.RAB:=_rab;
      __przrez.RAK:=_rak;
      __przrez.KRS:=_krs;
      __przrez.PROMO:=_promo;
      __przrez.TAR_H:=_tar_h;
      __przrez.TAR_TMS:=_tartms;
      __przrez.add(1)
   ?}
?};
~~


\akczrezt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: poprawia pozycje rezerwacji tymczasowej
::  OLD: \akczrezt/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? exec('get','#params',2131,2,OPERATOR.USER)='T'
|| __przrez.clear();
   _loop:=__przrez.first();
   {!
   |? _loop
   |!
      {? __przrez.REA || _ok:=__przrez.TAR_H<>'' ?};
      _loop:=__przrez.next() & _ok
   !}
?};

{? _ok || sel_exit || FUN.info('Wymagany cennik.'@) ?}


\repzrezt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: rekord przed dla rezerwacji tymczasowych
::  OLD: \repzrezt/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
BEER.IL_DNI:=REZ.DODT-REZ.ODDT;
REZ.cntx_psh();
__przrez.clear();
{? __przrez.find_key($REZ.ref())
|| _wyn:=__przrez.REA>0;
   BEER.CSP:=__przrez.CSP;
   BEER.CWL:=__przrez.CWL;
   BEER.KRSREZ:=__przrez.KRS;
   BEER.RAB:=__przrez.RAB;
   BEER.RABK:=__przrez.RAK;
   BEER.TYMREA:=__przrez.REA;
   BEER.PROMO:=exec('FindAndGet','#table','PROMO',__przrez.PROMO,,,null());
   {? __przrez.TAR_H=''
   || BEER.TAR_H:=null()
   || TAR_H.cntx_psh();
      TAR_H.use(8+__przrez.TAR_H);
      BEER.TAR_H:=exec('FindAndGet','#table','TAR_H',__przrez.TAR_H,,,null());
      TAR_H.cntx_pop()
   ?};
   BEER.TAR_TMS:=__przrez.TAR_TMS
|| BEER.CSP:=0;
   BEER.CWL:=0;
   BEER.KRSREZ:=0;
   BEER.RAB:=0;
   BEER.RABK:=0;
   BEER.TYMREA:=0;
   BEER.PROMO:=null();
   BEER.TAR_H:=null();
   BEER.TAR_TMS:=0
?};
REZ.cntx_pop();
ZAKR.ACCESS:={? BEER.TYMREA>0 || 'T' || 'N' ?};
_sel:=REZ.sel_size();
REZ.actions_grayed('TYMREA','');
{? ~_wyn | _sel
|| REZ.actions('TYMREA',,'W',1);
   {? ~_sel || REZ.actions_grayed('TYMREA','O') ?}
|| REZ.actions('TYMREA',,'O',1);
   {? ~_sel || REZ.actions_grayed('TYMREA','W') ?}
?};
_wyn


\disp_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: wyswietlanie zarezerwonanych dostaw dla pozycji zamowienia
::  OLD: \disp_rez/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_P.ILP>0
|| exec('rozpirez','rezerwacje',1)
|| FUN.info('Pozycja zamówienia w całości zrealizowana.\nPodgląd i utworzenie rezerwacji niemożliwe.'@)
?};
''


\rozpirez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: rozpisuje rezerwacje dla danego ZK_P/ZLIM/ZLGD
::   WE: [_a] - 0-rozpisanie(domyslnie), 1-wyswietlenie
::       [_b] - [0] - wywołane dla zamówienia (ZK_P),
::               1 - dla surowca zlecenia (ZLIM)
::               2 - dla wykonania produkcji (ZLGD)
::  OLD: \rozpirez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_zlim:={? var_pres('_b')=type_of(0) || _b || 0 ?};
{? ~_zlim & ZK_P.M().RODZ='U'
|| FUN.info('Pozycja usługowa.\nAkcja niedostępna.'@)
|? ~_zlim & ZK_P.ILZ=0
|| FUN.info('Nie podano ilości zamawianej.\nAkcja niedostępna.'@)
|| {? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

   VAR_DEL.delete('__zkpref','__zkpmat','__zkpnag','__zkpnum','__zkppoz','__zkpdt','__zkpilp','__zkpzl','__zkpmag'
    ,'__zkpdkc','__zkprod','__zkpdor','__zkpreb','__zkprew','__zkpt2','__zkpws2','__zkpj2','__ilprz','__zkpus');

   _rezzlim:=BEER.REZ_ZLIM;
   BEER.REZ_ZLIM:=_zlim;

   {? var_pres('__smmag')<100
   || __smmag:=tab_tmp(1,'MAG','STRING[10]','Magazyn'
                ,'STAN','REAL','Stan'
                ,'RSQL','STRING[16]',''
                ,'STA2','REAL','Stan 2'@
                ,'J2','STRING[10]','jm 2'@
                ,'AKT','STRING[1]','')
   ?};
   REZ.fld_fml('M','BEFORE_EDIT',"exec('pr_mrez','rezerwacje')");
   REZ.fld_fml('M','AFTER_EDIT',"exec('po_mrez','rezerwacje')");
   {? _zlim=2
   ||
::    Część zmiennych przypisywana bezpośrednio przed wyświetleniem okna dla akcji Dołącz i Popraw
      __zkpref:=$ZLGD.ref();
      __zkpmat:=null();
      __zkpnag:=$ZLGD.ZGP;
      __zkpnum:=0;
      __zkppoz:=0;
      __zkpilp:=1;
      __zkpdor:=0;
      __zkpdt:=date(0,0,0);
      __zkpzl:=ZLGD.ZL;
      __zkpmag:=null();
      __zkpdkc:=null();
      __zkprod:='';
      __zkpreb:=0;
      __zkprew:=0;
      __zkpt2:='M';
      __zkpws2:=1;
      __zkpj2:=null();
      __ilprz:=0;
      __zkpus:=OPERATOR.USER;
      _czy_pal:=0;
      ATR.DKCZKP:=null()
   |? _zlim=1
   || __zkpref:=$ZLIM.ref();
      __zkpmat:=ZLIM.KTM;
      __zkpnag:=$ZLIM.ZGP;
      __zkpnum:=exec('blnrkrez','rezerwacje','S',ZLIM.KTM);
      __zkppoz:=0;
      _ilr:=exec('ile_rezz','rezerwacje',$ZLIM.ref());
      __zkpilp:=ZLIM.LIL-(ZLIM.IL_RW-ZLIM.IL_ZW);
      {? __zkpilp<0 || __zkpilp:=0 ?};
      __zkpdor:=__zkpilp-_ilr[1];
      {? __zkpdor<0 || __zkpdor:=0 ?};
      __zkpdt:={? ZLIM.GROP<>null() || ZLIM.GROP().PL_DATA || ZLIM.ZLEC().DTR ?};
      __zkpzl:=ZLIM.ZLEC;
      _mg:={? ZLIM.MG<>null() || ZLIM.MG |? ZLIM.ZLEC().MG<>null() || ZLIM.ZLEC().MG || ST.MAG ?};
      __zkpmag:=_mg;
      __zkpdkc:=ZLIM.DK_C;
      __zkprod:='';
      __zkpreb:=_ilr[2];
      __zkprew:=_ilr[3];
      __zkpt2:='M';
      __zkpws2:={? ZLIM.KTM().J2<>null() || exec('oblWSP','jm',ZLIM.KTM) || 1 ?};
      __zkpj2:={? ZLIM.KTM().J2<>null() || ZLIM.KTM().J2 || ZLIM.KTM().J ?};
      __ilprz:=0;
      __zkpus:=OPERATOR.USER;
      _czy_pal:=exec('FindAndGet','#table',MG,__zkpmag,,"MG.PAL='T'",0);
      ATR.DKCZKP:=ZLIM.DK_C
   || __zkpref:=ZK_P.ref();
      __zkpmat:=ZK_P.M;
      __zkpnag:=ZK_P.N;
      __zkpnum:=ZK_P.NR;
      __zkppoz:=ZK_P.POZ;
      __zkpilp:=ZK_P.ILP;
      __zkpdor:=ZK_P.DOR;
      __zkpdt:=ZK_P.DT;
      __zkpzl:=ZK_P.ZL;
      __zkpmag:=ZK_P.MG;
      __zkpdkc:=ZK_P.DK_C;
      __zkprod:=ZK_P.RODZ;
      __zkpreb:=ZK_P.ILRB;
      __zkprew:=ZK_P.ILRW;
      __zkpt2:=ZK_P.T2;
      __zkpws2:=ZK_P.WS2;
      __zkpj2:=ZK_P.J2;
      __ilprz:=0;
      __zkpus:=ZK_P.US;
      _czy_pal:=ZK_P.MG().PAL='T';
      ATR.DKCZKP:=ZK_P.DK_C
   ?};

   {? _a
   || BEER.OKZKP:=-1;
      BEER.DOL:=0
   ?};

   {? _zlim
   || _nrpoz:=__zkppoz;
      _term:=__zkpdt
   || _nrpoz:=ZK_P.POZ;
      _term:=ZK_P.DT
   ?};

   {? ~_zlim & ~BEER.OKZKP
   || _buf:=obj_new(ZK_P.fld_num());
      exec('bufRec','#table','ZK_P',_buf)
   ?};

   ZK_N.cntx_psh();
   ZK_P.cntx_psh();
   REZ.cntx_psh();

   typ:=2;

   VAR_DEL.delete('__rezzkp','__winrez','__ilzzkp','__winzkp');

   __rezzkp:=tab_tmp(3,'TREE','TREE_REF','galazka'
              ,'LAB','STRING[100]','Etykieta'
              ,'ILR','REAL','Ilość'
              ,'DST','STRING[40]','dostawa'
              ,'TYP','STRING[1]','typ rezerwacji');
   __ilzzkp:=tab_tmp(1,'LP','INTEGER',''
              ,'OPIS','STRING[25]',''
              ,'ILE','REAL','');

   _m_ktm:={? _zlim=2 || '' |? _zlim=1 || ZLIM.KTM().KTM || ZK_P.M().KTM ?};
   _m_naz:={? _zlim=2 || '' |? _zlim=1 || ZLIM.KTM().N || ZK_P.M().N ?};

   _win_sel:=__rezzkp.mk_sel('Rezerwacje dla '@+_m_ktm+' - '+_m_naz,'P',,'rez_zkpsel'+$_zlim,,,__rezzkp.size(),1);
   __winrez:=_win_sel;

   _title:={? _zlim || 'Ilości dla surowca zlecenia'@ || 'Ilości dla pozycji zamówienia '@+BEER.ZK_N().SYM ?};
   _win_zkp:=__ilzzkp.mk_sel(_title,'P',,'#rez2zkpsel'+$_zlim);
   __winzkp:=_win_zkp;

   __ilzzkp.win_fld(_win_zkp,,'OPIS',,,20,,1,'');
   __ilzzkp.win_fld(_win_zkp,,'ILE',,,15,{? _zlim || ZLIM.KTM().DOKL || ZK_P.M().DOKL ?},1,'');

   __ilzzkp.win_fml(__winzkp,,'ILE',,'ICON_BEFORE',"
            _opis:=(5+__ilzzkp.OPIS);
            {? _opis='ILOŚĆ' || 'xwin16.png:185'
            |? _opis='DO RE' || 'xwin16.png:119'
            |? _opis='REZ.B' || 'xwin16.png:61'
            |? _opis='REZ.W' || 'xwin16.png:83'
            || ''
            ?}");
   {? ~_zlim & BEER.OKZKP<>-1
   || __ilzzkp.win_act(_win_zkp,0,'Formuła','&Akceptuj'@@,,,"sel_exit()",,,,,,'A');
      __ilzzkp.win_btn(_win_zkp,'text='+'&Akceptuj'@+', panel=right, align=begin','menu:A')
   ?};
   _wer:={? _zlim=2 || 'WER_ZLGD' |? _zlim=1 || 'WER_ZLIM' || 'WER' ?};
   _act:={? ~exec('czyuprREZ','rezerwacje',OPERATOR.USER,__zkpmat,-1,__zkpus) || 'U' || '' ?};
   _act+={? ~exec('czyuprREZ','rezerwacje',OPERATOR.USER,__zkpmat,0,__zkpus)  || 'PD:D' || '' ?};
   REZ.actions_grayed(_wer,_act);

   _title:={? _zlim=2
           || 'Pobrania surowców do wykonania produkcji'@
           |? _zlim=1
           || 'Rezerwacje dla surowca zlecenia: %1 - %2'@[_m_ktm,_m_naz]
           || 'Rezerwacje dla pozycji zamówienia: %1 - %2'@[_m_ktm,_m_naz]
           ?};
   _winsel:=__rezzkp.grp_make(_title,,'#rezgrpzam'+$_zlim);

::   __rezzkp.grp_sel(_winsel,__rezzkp,__winrez,,"exec('odswrezy','rezerwacje')",,,6,,,,,'maximized');
::   __rezzkp.grp_splt(_winsel,'panel0','horizontal','rez');
   __rezzkp.grp_sel(_winsel,REZ,_wer,{? _zlim=2 || '' || 'Rezerwacje bezwarunkowe'@ ?},,,,8
                           ,"exec('lst_rez','rezerwacje','B')",,,,'maximized');
   {? {? _zlim=2 || 0 |? BEER.DOL || __zkpdt>=date() || 1 ?}
   || __rezzkp.grp_sel(_winsel,REZ,_wer,'Rezerwacje warunkowe'@,,,,8
                              ,"exec('lst_rez','rezerwacje','W')",,,,'maximized')
   ?};
   {? _zlim<>2
   || __rezzkp.grp_splt(_winsel,,'vertical','rez1');
      __rezzkp.grp_sel(_winsel,__ilzzkp,__winzkp,,,,,6,,,,,'maximized')
      ?};

   __rezzkp.win_sel(_winsel);

:: generowanie struktury drzewa
   _rg:=obj_new(3);
   {! _i:=1..3 |! _rg[_i]:=0 !};

   __rezzkp.blank();
   __rezzkp.TREE:=0;
   __rezzkp.LAB:={? _zlim || 'Rezerwacje dla surowca: ' || 'Rezerwacje dla pozycji zamówienia: '?}
      +_m_ktm+' - '+_m_naz;
   __rezzkp.ILR:=0;
   __rezzkp.DST:='';
   {? __rezzkp.add(1)
   || _rg[1]:=__rezzkp.ref();
      __rezzkp.blank();
      __rezzkp.TREE:=_rg[1];
      __rezzkp.LAB:='Rezerwacje bezwarunkowe';
      __rezzkp.ILR:=0;
      __rezzkp.DST:='';
      __rezzkp.TYP:='B';
      {? __rezzkp.add(1) || _rg[2]:=__rezzkp.ref() ?};
      __rezzkp.blank();
      __rezzkp.TREE:=_rg[1];
      __rezzkp.LAB:='Rezerwacje warunkowe';
      __rezzkp.ILR:=0;
      __rezzkp.DST:='';
      __rezzkp.TYP:='W';
      {? __rezzkp.add(1)
      || {? {? BEER.DOL || __zkpdt>=date() || 1 ?}
           || _rg[3]:=__rezzkp.ref()
         || _rg[3]:=null
         ?}
      ?}
   ?};

   _tr_zl:=tab_tmp(1,'TR_ZL','STRING[50]','');
   _arch:=0;
   {? _zlim=2
   ||
::    Sprawdzenie, czy do robocizny wygenerowano już dokument rozchodowy (wtedy rezerwacje znajdują sie w archiwum)
      _mask:=exec('zlgd_chk4rez','zl_wyk',ZLGD.ref());
      {? _mask<>'' & _mask<>REZ.name()
      || REZ.use(_mask);
         _arch:=1
      ?}
   ?};
   {? _zlim=2
   || REZ.index('ZLREZR');
      REZ.prefix(ZLGD.ZL,'S','R',$ZLGD.ref(),)
   |? _zlim=1
   || REZ.index('ZLIMA');
      REZ.prefix($ZLIM.ref(),)
   || {? BEER.OKZKP<>0
      || REZ.index('ZK_P');
         REZ.prefix(ZK_P.ref())
      || REZ.index('ZK_N');
         REZ.prefix(ZK_N.ref(),_nrpoz)
      ?}
   ?};
   {? REZ.first()
   || REZ.cntx_psh();
      {!
      |? _gal:={? REZ.RODZ='B' || _rg[2] |? REZ.RODZ='W' || _rg[3] || 0 ?};
         {? _gal
         || __rezzkp.blank();
            __rezzkp.TREE:=_gal;
            __rezzkp.LAB:={? REZ.MG<>null || REZ.MG().SYM+' - '+REZ.MG().NAZ || 'brak magazynu' ?};
            __rezzkp.ILR:=REZ.ILR;
            exec('rek_rez1','rezerwacje');
            __rezzkp.DST:={? DISP.DOST<>'' || DISP.DOST+' z dnia '+form(BEER.DOSTAWA) || '' ?};
            __rezzkp.TYP:=REZ.RODZ;
            {? __rezzkp.add(1) & REZ.TR_ZL<>''
            || _tr_zl.clear();
               _tr_zl.prefix(REZ.TR_ZL);
               {? ~_tr_zl.first()
               || _tr_zl.blank();
                  _tr_zl.TR_ZL:=REZ.TR_ZL;
                  _tr_zl.add(1)
               ?}
            ?}
         ?};
         REZ.next()
      !};
      REZ.cntx_pop()
   ?};
:: podsumowania
   {! _i:=1..3
   |! _sum:=0;
      __rezzkp.clear();
      {? __rezzkp.seek(_rg[4-_i])
      || __rezzkp.cntx_psh();
         __rezzkp.prefix(_rg[4-_i]);
         {? __rezzkp.first() || {! |? _sum+=__rezzkp.ILR; __rezzkp.next() !} ?};
         __rezzkp.cntx_pop();
         __rezzkp.ILR:=_sum;
         __rezzkp.put(1)
      ?}
   !};

   _typ:={? ~_zlim & ZK_P.RODZ='Z' || 2 || 9 ?};

:: ustawia filtr dla dostepnych magazynow
   MG.prefix();
   MG.f_clear();
   MG.f_set('SYM',,'');
   {? MG.f_first()
   || {!
      |? BUFMG.index('US');
         BUFMG.prefix(OPERATOR.USER,_typ);
         {? BUFMG.find_key(MG.ref())
         || MG.f_next()
         || MG.f_del()
         ?}
      !}
   ?};

   _act:='';
   _disp:={? _zlim
          || _arch | ZLGD.ZL().STAN='Z'
          || exec('eann2zk','magdok_wspolne',ZK_P.N)<>'' | (BEER.ZK_N().MG<>null & BEER.ZK_N().MG().PAL='T')
          ?};
:: | ZK_N.LIM='T'
   _actions:='';
   {? _disp | _czy_pal | (_a & _term<date()) | (~_zlim & exec('czyRezZlzam','zamsiw_wspolne',ZK_P.ref()))
   || _actions:='DUP:D'
   ?};
   {? _zlim=2
   || {? ZLGD.ZAK<>'T' | _arch
      || _actions:='R'+_actions
      ?}
   ?};
   _act:=REZ.actions(_wer,_actions);

   exec('wypilzkp','rezerwacje');
   _delerez:=0;
   __rezzkp.clear();
   {? __rezzkp.select()
   || ''
   || {? ~_zlim & ~BEER.OKZKP
      || _delerez:=1;
         FUN.info('Zrezygnowano z akceptacji rezerwacji.\nRezerwacje zostaną usunięte.'@);
         exec('przeprez','rezerwacje',0,_nrpoz)
      ?}
   ?};
   _tr_zl.clear();
   {? _tr_zl.first()
   || {!
      |? exec('aktILRtr_zl','transport_zlec',_tr_zl.TR_ZL);
         _tr_zl.next()
      !}
   ?};
   obj_del(_tr_zl);

   MG.f_clear();
   REZ.actions(_wer,_act);
   VAR_DEL.delete('__rezzkp','__winrez','__ilzzkp','__winzkp');

   ZK_N.cntx_pop();
   ZK_P.cntx_pop();
   REZ.cntx_pop();

   {? ~_zlim & ~BEER.OKZKP
   || exec('unbufRec','#table','ZK_P',_buf);
      obj_del(_buf);
      {? _delerez
      || ZK_P.REZ:=0;
         ZK_P.DOR:=0;
         ZK_P.SR:=0;
         ZK_P.ODDT:=date(0,0,0);
         ZK_P.DODT:=date(0,0,0);
         ZK_P.CZYBEZ:='T';
         ZK_P.ILBEZ:=ZK_P.ILP;
         ZK_P.ILRB:=0;
         ZK_P.ILRW:=0;
         ZK_P.ILRA:=0;
         ZK_P.btn_eopt('RED'+ZK_P.RODZ,'REZER','state=grayed');
         exec('zkp_btnseopt_rezer','zamsiw_poz','state=grayed')
      || _ilr:=exec('ile_rezd','rezerwacje',ZK_N.ref(),ZK_P.POZ);
         ZK_P.ILRB:=_ilr[2];
         ZK_P.ILRW:=_ilr[3];
         ZK_P.ILRD:=_ilr[4];
         ZK_P.ILRA:=_ilr[5];
         ZK_P.SR:=_ilr[2];
         ZK_P.DOR:=_ilr[1];
         ZK_P.ZNB:={? ZK_P.ILRB>0 || 'T' || 'N' ?};
         ZK_P.ZNW:={? ZK_P.ILRW>0 || 'T' || 'N' ?};
         ZK_P.ZNR:={? ZK_P.ILP<ZK_P.ILZ || 'T' || 'N' ?};
         ZK_P.REZ:=ZK_P.ILRB>0 | ZK_P.ILRA>0;
         ZK_P.DOST:=ZK_P.ILRD>0;
         _doroz:=ZK_P.DOR+(ZK_P.ILRW-ZK_P.ILRA);
         ZK_P.ILBEZ:={? ZK_P.END || 0 |? ZK_P.ILP>_doroz || ZK_P.ILP-_doroz || 0 ?};
         ZK_P.CZYBEZ:={? ZK_P.ILBEZ>0 || 'T' || 'N' ?};
         {? ~ZK_P.REZ || ZK_P.ODDT:=ZK_P.DODT:=date(0,0,0) ?}
      ?}
   ?};
   {? ~_zlim & BEER.OKZKP<>0 & ~exec('czyRezZlzam','zamsiw_wspolne',ZK_P.ref())
   || _zkp:=tab_tmp(1,'MAT','STRING[16]','','ZKP','STRING[16]','');
      _zkp.blank(); _zkp.MAT:=$ZK_P.M; _zkp.ZKP:=$ZK_P.ref(); _zkp.add(1);
      exec('aktu_rez','rezerwacje',__zkpmat,__zkpnum,ZK_P.ILP,$__zkpnag,_zkp);
      obj_del(_zkp);
      win_disp()
   ?};
   BEER.REZ_ZLIM:=_rezzlim;
   VAR_DEL.delete('__zkpref','__zkpmat','__zkpnag','__zkpnum','__zkppoz','__zkpdt','__zkpilp','__zkpzl','__zkpmag'
    ,'__zkpdkc','__zkprod','__zkpdor','__zkpreb','__zkprew','__zkpt2','__zkpws2','__zkpj2','__ilprz','__zkpus')
?};
'edit:ILZ'


\odswrezy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: odswieza zapisy na poszczegolnych kartach
::  OLD: \odswrezy/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_zlim:=BEER.REZ_ZLIM;
{? _zlim<>2
|| exec('wypilzkp','rezerwacje');
   __ilzzkp.clear();
   __ilzzkp.first();
   grp_disp(__ilzzkp,__winzkp)
?};
1


\lst_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: lista rezerwacji
::   WE: _a - typ rezerwacji
::   WY: 1
::  OLD: \lst_rez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_zlim:=BEER.REZ_ZLIM;
BEER.RODZR:=_a;
{? _zlim=2
|| REZ.index('ZLREZR');
   REZ.prefix(ZLGD.ZL,'S','R',$ZLGD.ref(),)
|? _zlim=1
|| REZ.index('ZLREZZ');
   REZ.prefix(ZLIM.ZLEC,'S',_a,$ZLIM.ref(),)
|| {? BEER.OKZKP<>0
   || REZ.index('ZK_P');
      REZ.prefix(ZK_P.ref(),_a)
   || REZ.index('ZK_N');
      REZ.prefix(ZK_N.ref(),ZK_P.POZ,_a)
   ?}
?};
_wer:={? _zlim=2 || 'WER_ZLGD' |? _zlim=1 || 'WER_ZLIM' || 'WER' ?};
REZ.win_sel(_wer);

{? _zlim<>2
|| exec('wypilzkp','rezerwacje');
   __ilzzkp.clear();
   __ilzzkp.first();
   grp_disp(__ilzzkp,__winzkp)
?};
1


\rekbufmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: rekord przed dla BUFMG
::  OLD: \rekbufmg/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pwczy_sd','rezerwacje');
{? BEER.ST_REZ='T' || 'BUFMG#01'
|? BEER.ST_REZ='B' || ''
|? BEER.ST_REZ='I' || 'BUFMG#02'
|| ''
?}


\sm_rezer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: pokazuje rezerwacje na danym indeksie materialowym lub danym kontrahencie
::   WE: [_a] - 0-(domyslnie) indeks 1-kontrahent
::       [_b] - 1-czy dla stanów ogólnych 0-(domyslnie) aktualny magazyn
::----------------------------------------------------------------------------------------------------------------------

{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

VAR_DEL.delete('__infozk','__winzk');
__infozk:=tab_tmp({? ~_a || 4 || 7 ?},'TREE','TREE_REF',''
           ,'NRK','INTEGER',''
           ,'DOD','STRING[10]',''
           ,'POZ','STRING[7]',''
           ,'LAB','STRING[50]',''
           ,'KHS','STRING[10]',''
           ,'KHK','STRING[50]',''
           ,'KHN','STRING[120]',''
           ,'ILR','REAL',''
           ,'ODD','STRING[10]',''
           ,'TYP','STRING[1]',''
           ,'USERS','STRING[10]',''
           ,'DOST','INTEGER',''
           ,'OPIS','STRING[100]','');
_opis:={? ~_a & ~_b
       || 'Rezerwacje: '+SM.M().KTM+' - '+SM.M().N
       |? ~_a & _b
       || 'Rezerwacje: '+M.KTM+' - '+M.N
       || 'Rezerwacje: '+KH.KOD+' - '+KH.NAZ
       ?};
_win_sel:=__winzk:=__infozk.mk_sel(_opis,'P',,'#rez_mag_sel'+$_a,,,__infozk.size(),1,,,,,,'html_maximized');

__infozk.win_fld(_win_sel,,'LAB',,,45,,1,'');
{? ~_a
|| __infozk.win_fld(_win_sel,,'KHK',,,-12,,1,'Kod kontrahenta'@);
   __infozk.win_fld(_win_sel,,'KHN',,,-14,,1,'Nazwa kontrahenta'@)
|| __infozk.win_fld(_win_sel,,'KHS',,,8,,1,'Magazyn'@);
   __infozk.win_fld(_win_sel,,'KHK',,,8,,1,'Indeks kod'@);
   __infozk.win_fld(_win_sel,,'KHN',,,8,,1,'Indeks nazwa'@)
?};
__infozk.win_fld(_win_sel,,'DOST',,,-3,,,'Dostawa'@,,,2,,"1","0");
__infozk.win_fld(_win_sel,,'ODD',,,10,,1,'Od dnia'@);
__infozk.win_fld(_win_sel,,'DOD',,,10,,1,'Do dnia'@);
__infozk.win_fld(_win_sel,,'POZ',,,-7,,1,'Pozostało dni'@);
__infozk.win_fld(_win_sel,,'ILR',,,-12,{? _a || ST.DOKL || {? ~_b || SM.M().DOKL || M.DOKL ?} ?},1,'Zarezerwowano'@);
__infozk.win_fld(_win_sel,,'USERS',,,-9,,,'Użytkownik'@);
__infozk.win_fld(_win_sel,,'OPIS',,,5,,,'Opis'@);
__infozk.win_act(_win_sel,,'Formuła','Z&wiń/rozwiń'@@,,'Zwijanie/rozwijanie całości'@,
                      "exec('zwrw_all','#tree','__infozk','TREE')",,,,,,'W');

__infozk.tr_fml(_win_sel,,"_a");
__infozk.win_fml(_win_sel,,'LAB',,'ICON_BEFORE',"
         {? __infozk.TREE=0
         || 'xwin16.png:52'
         |? __infozk.TREE<>0 & (2+__infozk.LAB='Re')
         || 'xwin16.png:53'
         || 'xwin16.png:76'
         ?}
     ");
__infozk.win_sel(_win_sel);
_jest:=0;

{? ~_a
||
:: rezerwacje wg indeksu materialowego na danym magazynie
   _mag:={? ~_b || SM.MAG || null ?};
   _mat:={? ~_b || SM.M || M.ref() ?};
   _smg:={? ~_b || SM.MAG().SYM || '' ?};
   {? ~_b
   || _mag:=SM.MAG;
      _smg:=SM.MAG().SYM
   || __smmag.cntx_psh();
      __smmag.clear();
      {? __smmag.first()
      || _smg:=__smmag.MAG;
         _mag:=exec('FindAndGet','#table','MG',__smmag.RSQL,,,null())
      ?}
   ?};
   {? _mag<>null
   || _jest:=0;
      {!
      |? _krt:=0; _krz:=0; _krl:=0; _krd:=0; _jmag:=0; _st:=_sz:=_sl:=_sr:=_sd:=0;
         REZ.index('MG_M');
         REZ.prefix(_mag,_mat,'B');
         {? REZ.first() & (_oki:=0; {! |? {? 'ZTLS'*REZ.TYP & REZ.ILR>0 || _oki:=1; 0 || REZ.next() ?} !}; _oki)
         || __infozk.prefix();
            __infozk.blank();
            __infozk.TREE:=0;
            __infozk.LAB:='REZERWACJE MAGAZYN: '+_smg;
            _kor:={? __infozk.add(1) || #__infozk.ref() || 0 ?};
            {!
            |?
               _czysur:=REZ.TYP='S';
               _czylim:=(REZ.TYP='Z' & ref_name(REZ.ZK_P().ZLIM)<>'') | _czysur;
               {? 'ZTS'*REZ.TYP & REZ.ILR>0
               || _reztyp:={? _czylim || 'L'
                           |? REZ.TR_ZL<>'' & REZ.TYP='Z' || 'D'
                           |? REZ.TYP='Z' || 'Z'
                           |? REZ.TYP='T' || 'T'
                           || ''
                           ?};
                  {? (REZ.TYP='Z' & ~_czylim & (_krz=0 | _krd=0)) | (REZ.TYP='T' & _krt=0) | (_czylim & _krl=0)
                  || __infozk.blank();
                     __infozk.TREE:=_kor;
                     __infozk.TYP:=REZ.TYP;
                     __infozk.LAB:={? _reztyp='L' || 'REZERWACJE ZE ZLECEŃ'
                                   |? _reztyp='D' || 'REZERWACJE NA DYSPOZYCJACH'
                                   |? _reztyp='Z' || 'REZERWACJE NA ZAMÓWIENIACH'
                                   |? _reztyp='T' || 'REZERWACJE TYMCZASOWE'
                                   || ''
                                   ?};
                     {? _reztyp='L' & ~_krl || _krl:={? __infozk.add(1) || #__infozk.ref() || 0 ?}
                     |? _reztyp='D' & ~_krd || _krd:={? __infozk.add(1) || #__infozk.ref() || 0 ?}
                     |? _reztyp='Z' & ~_krz || _krz:={? __infozk.add(1) || #__infozk.ref() || 0 ?}
                     |? _reztyp='T' & ~_krt || _krt:={? __infozk.add(1) || #__infozk.ref() || 0 ?}
                     || ''
                     ?}
                  ?};
                  _jmag:=1;
                  __infozk.blank();
                  __infozk.TREE:={? _reztyp='L' || _sl+=REZ.ILR; _krl
                                 |? _reztyp='D' || _sd+=REZ.ILR; _krd
                                 |? _reztyp='Z' || _sz+=REZ.ILR; _krz
                                 |? _reztyp='T' || _st+=REZ.ILR; _krt
                                 || 0
                                 ?};
                  __infozk.TYP:=REZ.TYP;
                  {? ~_a
                  || __infozk.KHK:={? _reztyp='L' || {? _czysur || REZ.KH().KOD ||  REZ.ZK_P().ZL().KH().KOD ?}
                                   |? _reztyp='Z' || REZ.ZK_P().N().KH().KOD
                                   || REZ.KH().KOD
                                   ?};
                     __infozk.KHS:={? _reztyp='L' || {? _czysur || REZ.KH().SKR || REZ.ZK_P().ZL().KH().SKR ?}
                                   |? _reztyp='Z' || REZ.ZK_P().N().KH().SKR
                                   || REZ.KH().SKR
                                   ?};
                     __infozk.KHN:={? _reztyp='L' || {? _czysur || REZ.KH().NAZ || REZ.ZK_P().ZL().KH().NAZ ?}
                                   |? _reztyp='Z' || REZ.ZK_P().N().KH().NAZ
                                   || REZ.KH().NAZ
                                   ?}
                  || __infozk.KHK:=REZ.M().KTM;
                     __infozk.KHS:=REZ.MG().SYM;
                     __infozk.KHN:=REZ.M().N
                  ?};
                  __infozk.DOST:=REZ.SC<>'';
                  __infozk.ILR:=REZ.ILR;
                  __infozk.ODD:=form(REZ.ODDT);
                  __infozk.DOD:=form(REZ.DODT);
                  __infozk.POZ:={? REZ.TYP='S' & REZ.BTERM='T' || '' || form(REZ.DODT-date,7,0,'99') ?};
                  __infozk.LAB:={? _reztyp='L'
                                || {? _czysur
                                   || REZ.ZL().SYM+' produkt o kodzie: '+REZ.ZL().KTM().KTM
                                   || REZ.ZK_P().ZL().SYM+' produkt o kodzie: '+REZ.ZK_P().ZL().KTM().KTM
                                   ?}
                                |? _reztyp='D'
                                || _trnzl:=exec('FindAndGet','#table',TR_ZL,REZ.TR_ZL,,"$TR_NZL",'');
                                   {? _trnzl<>'' || _trnzl:=exec('FindAndGet','#table',TR_NZL,_trnzl,,"SYM",'') ?};
                                   {? _trnzl<>''
                                   || _trnzl+' ['+REZ.ZK_P().N().T().T+' >> '+REZ.ZK_P().N().SYM+']'
                                   || REZ.ZK_P().N().T().T+' >> '+REZ.ZK_P().N().SYM
                                   ?}
                                |? _reztyp='Z'
                                || REZ.ZK_P().N().T().T+' >> '+REZ.ZK_P().N().SYM
                                |? _reztyp='T'
                                || REZ.US().KOD+' >> '+REZ.US().DANE
                                || '???'
                                ?};
                  __infozk.USERS:=REZ.US().KOD;
                  __infozk.OPIS:={? REZ.ZL_REZ='T'
                                 || _str:='rezerwacja do zlecenia';
                                    {? REZ.ZL<>null()
                                    || ZL.cntx_psh();
                                       ZL.clear();
                                       {? ZL.seek(REZ.ZL)
                                       || _str:='Zlecenie %1'@[ZL.SYM];
                                          {? REZ.SC<>''
                                          || exec('sc_info','magazyn_stan',REZ.MG,REZ.M,BB.sqlint(REZ.SC)
                                                ,8+REZ.SC,0,0,1);
                                             {? DISP.DOST<>''
                                             || _str+=', '+DISP.DOST
                                             ?}
                                          ?}
                                       ?};
                                       ZL.cntx_pop();
                                       _str
                                    ?}
                                 |? (REZ.ZL_REZ<>'N' & REZ.ZGP<>'' & ref_name(REZ.ZGP)='zguidep')
                                    | (REZ.REFSQL<>'' & ref_name(REZ.REFSQL)='zguidep')
                                 || _str:='';
                                    _zgp:={? REZ.ZGP<>'' & ref_name(REZ.ZGP)='zguidep' || REZ.ZGP || REZ.REFSQL ?};
                                    ZGP.cntx_psh();
                                    ZGH.cntx_psh();
                                    ZL.cntx_psh();
                                    ZGP.clear();
                                    {? ZGP.seek(_zgp)
                                    || _str:='Zl. %1, przew. %2, oper. %3 - %4'
                                             [ZGP.ZL().SYM,ZGP.NRPRZ().NRPRZ,$ZGP.NRP,ZGP.OPIS]
                                    || _str:='automatyczna rezerwacja'
                                    ?};
                                    ZGH.cntx_pop();
                                    ZL.cntx_pop();
                                    ZGP.cntx_pop();
                                    _str
                                 |? REZ.SC<>''
                                 || exec('sc_info','magazyn_stan',REZ.MG,REZ.M,BB.sqlint(REZ.SC),8+REZ.SC,0,0,1);
                                    DISP.DOST+{? exec('upr_cm','ceny') || ', cena: '+form(BO.CEN,,,'99') || '' ?}
                                 || 'automatyczna rezerwacja'
                                 ?};
                  __infozk.NRK:=REZ.NRK;
                  __infozk.add(1)
               ?};
               REZ.next()
            !};
            {? _jmag
            || _jest+=1;
               _sr:=_sz+_st+_sl+_sd;
               __infozk.prefix();
               {? __infozk.first() || __infozk.ILR:=_sr; __infozk.put(1) ?};
               {? _krd & __infozk.seek(_krd,) || __infozk.ILR:=_sd; __infozk.put(1) ?};
               {? _krz & __infozk.seek(_krz,) || __infozk.ILR:=_sz; __infozk.put(1) ?};
               {? _krt & __infozk.seek(_krt,) || __infozk.ILR:=_st; __infozk.put(1) ?};
               {? _krl & __infozk.seek(_krl,) || __infozk.ILR:=_sl; __infozk.put(1) ?}
            ?}
         ?};
         {? ~_b
         || 0
         || {? __smmag.next()
            || _smg:=__smmag.MAG;
               _mag:=exec('FindAndGet','#table','MG',__smmag.RSQL,,,null())
            || 0
            ?}
         ?}
      !}
   ?};
   {? _b || __smmag.cntx_pop() ?};
   {? _jest
   || __infozk.prefix();
      __infozk.first();
      __infozk.select()
   || FUN.info('Brak rezerwacji na danym indeksie materiałowym.'@)
   ?}
||
:: rezerwacje wg kontrahenta na wszystkich magazynach
   KH.cntx_psh();
   _kh:=KH.ref();
:: rezerwacje na zamowieniach
   REZ.index('KH');
   REZ.prefix(_kh,'B');
   {? REZ.first()
   || _krt:=0; _krz:=0; _krl:=0; _krd:=0; _jest:=0; _st:=_sz:=_sl:=_sr:=_sd:=0;
      __infozk.prefix();
      __infozk.blank();
      __infozk.TREE:=0;
      __infozk.LAB:='WSZYSTKIE REZERWACJE';
      _kor:={? __infozk.add(1) || #__infozk.ref() || 0 ?};
      {!
      |? _czylim:=REZ.TYP='Z' & ref_name(REZ.ZK_P().ZLIM)<>'';
         {? 'ZT'*REZ.TYP & REZ.ILR>0
         || _reztyp:={? _czylim || 'L'
                     |? REZ.TR_ZL<>'' & REZ.TYP='Z' || 'D'
                     |? REZ.TYP='Z' || 'Z'
                     |? REZ.TYP='T' || 'T'
                     || ''
                     ?};
            {? (REZ.TYP='Z' & ~_czylim & _krz=0) | (REZ.TYP='T' & _krt=0) | (_czylim & _krl=0)
            || __infozk.blank();
               __infozk.TREE:=_kor;
               __infozk.TYP:=REZ.TYP;
               __infozk.LAB:={? _reztyp='L' || 'REZERWACJE ZE ZLECEŃ'
                             |? _reztyp='D' || 'REZERWACJE NA DYSPOZYCJI'
                             |? _reztyp='Z' || 'REZERWACJE NA ZAMÓWIENIACH'
                             |? _reztyp='T' || 'REZERWACJE TYMCZASOWE'
                             || ''
                             ?};
               {? _reztyp='L' & ~_krl || _krl:={? __infozk.add(1) || #__infozk.ref() || 0 ?}
               |? _reztyp='D' & ~_krd || _krd:={? __infozk.add(1) || #__infozk.ref() || 0 ?}
               |? _reztyp='Z' & ~_krz || _krz:={? __infozk.add(1) || #__infozk.ref() || 0 ?}
               |? _reztyp='T' & ~_krt || _krt:={? __infozk.add(1) || #__infozk.ref() || 0 ?}
               || ''
               ?}
            ?};
            _jest:=1;
            __infozk.blank();
            __infozk.TREE:={? _reztyp='L' || _sl+=REZ.ILR; _krl
                           |? _reztyp='Z' || _sz+=REZ.ILR; _krz
                           |? _reztyp='T' || _st+=REZ.ILR; _krt
                           || 0
                           ?};
            __infozk.TYP:=REZ.TYP;
            {? ~_a
            || __infozk.KHK:={? _reztyp='L' || REZ.ZK_P().ZL().KH().KOD
                             |? _reztyp='Z' || REZ.ZK_P().N().KH().KOD
                             || REZ.KH().KOD
                             ?};
               __infozk.KHS:={? _reztyp='L' || REZ.ZK_P().ZL().KH().SKR
                             |? _reztyp='Z' || REZ.ZK_P().N().KH().SKR
                             || REZ.KH().SKR
                             ?};
               __infozk.KHN:={? _reztyp='L' || REZ.ZK_P().ZL().KH().NAZ
                             |? _reztyp='Z' || REZ.ZK_P().N().KH().NAZ
                             || REZ.KH().NAZ
                             ?}
            || __infozk.KHK:=REZ.M().KTM;
               __infozk.KHS:=REZ.MG().SYM;
               __infozk.KHN:=REZ.M().N
            ?};
            __infozk.DOST:=REZ.SC<>'';
            __infozk.ILR:=REZ.ILR;
            __infozk.ODD:=form(REZ.ODDT);
            __infozk.DOD:=form(REZ.DODT);
            __infozk.POZ:=form(REZ.DODT-date,7,0,'99');
            __infozk.LAB:={? _reztyp='L'
                          || REZ.ZK_P().ZL().SYM+' produkt o kodzie: '+REZ.ZK_P().ZL().KTM().KTM
                          |? _reztyp='D'
                          || _trnzl:=exec('FindAndGet','#table',TR_ZL,REZ.TR_ZL,,"$TR_NZL",'');
                             {? _trnzl<>'' || _trnzl:=exec('FindAndGet','#table',TR_NZL,_trnzl,,"SYM",'') ?};
                             {? _trnzl<>''
                             || _trnzl+' ['+REZ.ZK_P().N().T().T+' >> '+REZ.ZK_P().N().SYM+']'
                             || REZ.ZK_P().N().T().T+' >> '+REZ.ZK_P().N().SYM
                             ?}
                          |? _reztyp='Z'
                          || REZ.ZK_P().N().T().T+' >> '+REZ.ZK_P().N().SYM
                          |? _reztyp='T'
                          || REZ.US().KOD+' >> '+REZ.US().DANE
                          || '???'
                          ?};
            __infozk.USERS:=REZ.US().KOD;
            __infozk.OPIS:={? REZ.REFSQL<>'' & ref_name(REZ.REFSQL)='zguidep'
                           || _str:='';
                              ZGP.cntx_psh();
                              ZGH.cntx_psh();
                              ZL.cntx_psh();
                              ZGP.clear();
                              {? ZGP.seek(REZ.REFSQL)
                              || _str:='Automatyczna rezerwacja do zlecenia: %1, przewodnika: %2, operacji: %3 - %4'
                                       [ZGP.ZL().SYM,ZGP.NRPRZ().NRPRZ,$ZGP.NRP,ZGP.OPIS]
                              || _str:='automatyczna rezerwacja'
                              ?};
                              ZGH.cntx_pop();
                              ZL.cntx_pop();
                              ZGP.cntx_pop();
                              _str
                           |? REZ.SC<>''
                           || exec('sc_info','magazyn_stan',REZ.MG,REZ.M,BB.sqlint(REZ.SC),8+REZ.SC,0,0,1);
                              DISP.DOST+{? exec('upr_cm','ceny') || ', cena: '+form(BO.CEN,,,'99') || '' ?}
                           || 'automatyczna rezerwacja'
                           ?};
            __infozk.NRK:=REZ.NRK;
            __infozk.add(1)
         ?};
         REZ.next()
      !};
      {? _jest
      || _sr:=_sz+_st+_sl+_sd;
         __infozk.prefix();
         {? __infozk.first() || __infozk.ILR:=_sr; __infozk.put(1) ?};
         {? _krz & __infozk.seek(_krz,) || __infozk.ILR:=_sz; __infozk.put(1) ?};
         {? _krd & __infozk.seek(_krd,) || __infozk.ILR:=_sd; __infozk.put(1) ?};
         {? _krt & __infozk.seek(_krt,) || __infozk.ILR:=_st; __infozk.put(1) ?};
         {? _krl & __infozk.seek(_krl,) || __infozk.ILR:=_sl; __infozk.put(1) ?};
         __infozk.select()
      || FUN.info('Brak rezerwacji dla danego kontrahenta.'@)
      ?}
   || FUN.info('Brak rezerwacji dla danego kontrahenta.'@)
   ?};
   KH.cntx_pop()
?};
VAR_DEL.delete('__infozk','__winzk');
''


\zam_us_tym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przeglad rezerwacji tymczasowych dla podanego materialu, uzytkownika i magazynu
::   WE:  _a - material
::        _b - Uzytkownik (ref)
::        _c - magazyn (ref)
::  OLD: \zam_us_tym/zk.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.TYP:='T';
BEER.ALL:='T';
BEER.CZY_REZT:=1;
typ:=2;
exec('ustazprz','zamsiw_poz');
REZ.win_sel('TYM');
_patt:=REZ.win_patt('?');
REZ.win_patt('TYM');
REZ.index('MG_M');
REZ.prefix(SM.MAG,SM.M,'B','T',OPERATOR.USER);
{? REZ.first()
|| REZ.hdr_sel();
   REZ.hdr_sel(' operatora: %1 - %2'@[REZ.US().KOD,REZ.US().DANE]);
   REZ.select()
|| FUN.info('Brak rezerwacji tymczasowych dla operatora:\n%1 - %2.'@[OPERATOR.USER().KOD,OPERATOR.USER().DANE])
?};
REZ.win_patt(_patt);
''


\m_rezer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: pokazuje rezerwacje na danym indeksie materialowym
::  OLD: \m_rezer/zk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('sm_rezer','rezerwacje',,1)


\rezwg_mz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: rezerwacja z poziomu zamiennikow
::  OLD: \rezwg_mz/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
MZ.cntx_psh();
M.clear();
{? M.seek(MZ.MZ)
|| exec('rek_mate_upr','magazyn_stan');
   exec('zam_tymc_stn','rezerwacje')
?};
MZ.cntx_pop();
M.cntx_pop();
1


\zam_tymc_stn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: zamowienie tymczasowe obsluga
::   WE: [_a] miejsce wywloania funkcji
::            1 - stany magazynowe
::            2 - pozycje zamowien
::       [_b]  na podany magazyn (jezeli nie to wybor magazynu)
::   WY: czy dodano rekord 1 -tak 0 -nie
::  OLD: \zam_tymc/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;

{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? _>=2 || {? type_of(_b)<>7 || _b:=null ?} || _b:=null ?};
{? _=0 || _a:=2 ?};

BEER.CZY_REZT:=1;
exec('ustazprz','zamsiw_poz');
exec('zam_tymc','rezerwacje',_a,_b);
BEER.CZY_REZT:=0;
:: usuwa filtr programowy dla jednostek dodatkowych
JM.f_clear();
JM.win_dict('WER');
_wyn


\zam_tymc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zamowienie tymczasowe obsluga
::   WE: [_a] miejsce wywloania funkcji
::            1 - stany magazynowe
::            2 - pozycje zamowien
::            0 - automatycznie zakładane wg parametrów: indeks,dostawa,zlecenie,ilość
::                (dla tego trybu nie są aktualizowane stany magazynowe i rezerwacje)
::       [_b]  na podany magazyn (jezeli nie to wybor magazynu)
::       [_c] - dotyczy _a=0: wskazanie na dostawę
::       [_d] - dotyczy _a=0: zlecenie
::       [_e] - dotyczy _a=0: ilość do zarezerwowania
::       [_f] - dotyczy _a=0: czy rezerwacja dedykowana dla zleceń: ['N']/'T'
::   WY: czy dodano rekord 1 -tak 0 -nie
::  OLD: \zam_tymc/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
VAR_DEL.delete('__buf_mg');
_tryb:={? var_pres('_a')=type_of(0) || _a || 2 ?};
_magp:={? var_pres('_b')=type_of(null()) || _b || null() ?};

{? _tryb=0
|| _dst:={? var_pres('_c')=type_of('') || _c || '' ?};
   _rzl:={? var_pres('_d')=type_of(null()) || _d || null() ?};
   _ilr:={? var_pres('_e')=type_of(0) || _e || 0 ?};
   _zl_rez:={? var_pres('_f')=type_of('') || _f || 'N' ?};
   {? _magp=null() || _magp:=ST.MAG ?}
|| _dst:=''; _rzl:=null(); _ilr:=0; _zl_rez:='N'
?};

BEER.DOSTAWA:=date(0,0,0);
BEER.RODZR:='B';
BEER.CZY_REZT:=1;
_atrmjs:=ATR.MJS;
ATR.MJS:='REZ';

KH.win_dict('WER');
KH.actions('WER','W');

exec('ustazprz','zamsiw_poz');
M.cntx_psh();
typ:={? ~_tryb || 1 || _tryb ?};
{? _magp<>null || typ:=1 || typ:=2 ?};

:: wymagany magazyn
{? _tryb=0 & (_dst='' | exec('FindAndGet','#table',DK,_dst,,null())=null() | _rzl=null() | _ilr<=0)
|| _oki:=0
|? typ=2
|| _oki:={? ((_mag:=exec('wybwgupr','magdok_wspolne')); _mag>0) || _magp:=_mag; 1 || 0 ?}
|| _oki:=1
?};
{? _tryb<=1 || exec('obl_stan','magazyn_stan',M.ref,1,_magp) ?};
__buf_mg:=_magp;
{? _oki & BEER.SD>0
||
:: rezerwacja tymczasowa
   M.get();
   _mat:={? _tryb>0 || M.ref() || exec('FindAndGet','#table',DK,_dst,,"M",null()) ?};
   BEER.IL_DNI:=0;
   BEER.TYP:='T';
   BEER.ZK_N:=null;
   BEER.WG:=ZK_N.WG;
   REZ.prefix();
   REZ.blank();
   REZ.M:=_mat;
   REZ.JM:=REZ.M().J;
   REZ.TYP:='T';
   REZ.RODZ:='B';
   REZ.RP_REZ:='N';
   REZ.MG:=_magp;
   REZ.ODDT:=date();
   REZ.KH:=null;
   REZ.BTERM:='N';
   REZ.US:=OPERATOR.USER;
   {? BEER.IL_DNI=0
   || BEER.IL_DNI:=exec('get','#params',3003,1,OPERATOR.USER);
      REZ.DODT:=date()+BEER.IL_DNI
   ?};
   REZ.REA:='NN';
   REZ.NRK:=exec('blnrkrez','rezerwacje',REZ.TYP,REZ.M);
   exec('ustazprz','zamsiw_poz',REZ.M,REZ.JM);
   {? _tryb=0
   || REZ.SC:=_dst;
      REZ.ZL:=_rzl;
      REZ.ILR:=_ilr;
      REZ.ZL_REZ:=_zl_rez;
      {? REZ.ZL_REZ<>'N'
      || REZ.TYP:='S'
      ?};
      _dokl_s:=exec('jaka_dok_mjm','jm',REZ.M,REZ.J2,REZ.M().J);
      _dokl_m:=exec('jaka_dok_m','jm',REZ.M);
      {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
      REZ.IL2:=REZ.ILR/REZ.WS2 $ (_dokl_s+1);
      roundmet(BEER.MDOKL);
      REZ.IL2:=REZ.IL2 $ _dokl_s;
      roundmet(5);
      REZ.SESID:=SYSLOG.ses_id()
   ?};
   REZ.win_edit('RED');
   exec('set_efld_opt','rezerwacje','RED');
   {? _tryb=0 | REZ.edit("exec('chkrez_t','rezerwacje')")
   || do();
      _wyn:=REZ.add();
      end();
      {? _tryb<>0
      || {? _wyn || exec('aktu_rez','rezerwacje',_mat,REZ.NRK,REZ.ILR) ?};
::       aktualizacja stanow i statusow - zalozenie ze zawsze bedzie podany magazyn
         SM.cntx_psh();
         exec('obl_stan','magazyn_stan',_mat,1,_b);
         SM.cntx_pop();
         SM.get()
      ?}
   ?}
|? ~_oki
|| {? ~_tryb
   || FUN.info('Nie podano prawidłowych danych dla rezerwacji dostawy (dostawa, zlecenie, ilość).\n'
               'Rezerwacja niemożliwa.'@)
   |? _mag>=0
   || FUN.info('Nie wybrano magazynu.\nRezerwacja niemożliwa.'@)
   |? _mag=-1
   || FUN.info('Brak stanu dostępnego.\nRezerwacja niemożliwa.'@)
   ?}
|| FUN.info('Brak stanu dostępnego.\nRezerwacja niemożliwa.'@)
?};
&typ;
M.cntx_pop();
VAR_DEL.delete('__buf_mg');

BEER.CZY_REZT:=0;
:: usuwa filtr programowy dla jednostek dodatkowych
JM.f_clear();
JM.win_dict('WER');
ATR.MJS:=_atrmjs;
KH.actions('WER','');
_wyn


\chkrez_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdzenie poprawnosci pol dla rezerwacji tymczasowej
::   WY: ''-ok, akronim pola
::  OLD: \chkrez_t/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:='';
{? REZ.ILR<=0
|| FUN.info('Należy podać ilość większą od zera.'@);
   _wyn:='ILR'
|? exec('spr_iler','rezerwacje',typ)=0
|| _wyn:='ILR'
|? REZ.KH=null
|| _wyn:='KH'
|? BEER.IL_DNI>0
|| _okr:=exec('get','#params',3003,1,OPERATOR.USER);
   {? _wyn='' & _okr<BEER.IL_DNI
   || FUN.info('Maksymalna ilość dni rezerwacji: %1.'@[$_okr]);
      _wyn:='IL_DNI'
   ?}
|? BEER.IL_DNI<0
|| FUN.info('Ilość dni rezerwacji nie może być mniejsza od zera.'@);
   _wyn:='IL_DNI'
?};
_wyn


\spr_iler
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: sprawdza ilosc podana do rezerwacji
::   WE:   _a  miejsce wywolania
::             1 - stany magazynowe
::             2 - zamowienia
::   WY: czy ilosc jest poprawna
::  OLD: \spr_iler/zk.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:=0;
_ile:=REZ.ILR;
{? _a=2
|| {? REZ.MG<>null
   || exec('obl_stan','magazyn_stan',REZ.M,1,REZ.MG)
   || exec('obl_stan','magazyn_stan',REZ.M,{? ZK_P.RODZ='Z' || 2 || 9 ?})
   ?};
   _jm:=REZ.M().J().KOD
|| exec('obl_stan','magazyn_stan',SM.M,1);
   _jm:=SM.M().J().KOD
?};
{? _ile>BEER.SD
|| FUN.info('Brak podanej ilości.\nMaksymalna ilość dostępna to %1 %2.'@[$BEER.SD,_jm])
|| _wyn:=1
?};
_wyn


\spr_fakt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy na pozycjach faktury sa pozycje z rezerwacji tymczasowych
::   WE: _a - ref faktury
::   WY: 1-sa i usunac 2-sa i odrezerwowac 0-rezygnacja 3-brak
::  OLD: \spr_fakt/rezerw.fml
::       \spr_fakt/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=3;
_rodz:=exec('get','#params',3008,2,OPERATOR.USER);
{? _rodz='N'
|| _wyn:=1
|? _rodz='T'
|| _wyn:=2
|| FAP.cntx_psh();
   FAP.index('FAP');
   FAP.prefix(_a);
   {? FAP.first()
   || {!
      |? {? exec('czyhisrt','rezerwacje',$FAP.ref(),form(8+$FAP.ref())+3)
         || _wyn:=FUN.choice('Na pozycjach faktury są pozycje(a) powstałe z rezerwacji tymczasowych.\n'@+
                   'Wybierz jedną z opcji?'@,,'Wyłącznie usunięcie pozycji'@,'Przywrócenie rezerwacji'@)
         ?};
         _wyn=3 & FAP.next()
      !}
   ?};
   FAP.cntx_pop()
?};
_wyn


\wydawgmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: oblicza ilość rezerwacji wg magazynu
::   WE: _a - ref ZK_P
::       _b - ref indeksu materiałowego
::       _c - magazyn
::   WY: ilosc rezerwacji bezwarunkowej
::  OLD: \wydawgmg/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
REZ.cntx_psh();
REZ.index('URODZ');
REZ.prefix(_a,_b,_c,'B');
{? REZ.first() || {! |? _wyn+=REZ.ILR; REZ.next() !} ?};
REZ.cntx_pop();
_wyn


\dowgmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: tworzy tabelke rezerwacji warunkowych z podzialem na magazyny
::   WE: _a - ZK_P.ref
::       _b - ref magazynu
::   WY: ilosc do pomniejszenia
::  OLD: \dowgmag/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
ZK_P.clear();
{? ZK_P.seek(_a)
|| REZ.index('ZK_PA');
   REZ.prefix(ZK_P.ref(),'W',0);
   {? REZ.first()
   || {!
      |? {? REZ.ZLZAM=null() & ~(REZ.MG=null | REZ.MG=_b) || _wyn+=REZ.ILR ?};
         REZ.next()
      !}
   ?}
?};
ZK_N.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();
_wyn


\zk_pdk_c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: tworzy tabelke DK_C do sprawdzenia z ilosciami wg podpietych pod pozycje zamowienia
::   WE: _a - ZK_P.ref
::   WY: tabelka DK_C
::  OLD: \zk_pdk_c/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=tab_tmp(1,'DKC','STRING[16]','','ILE','REAL','');
ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
ZK_P.clear();
{? ZK_P.seek(_a)
|| _dkc:={? ZK_P.DK_C<>null || $ZK_P.DK_C || 'brak' ?};
   _ile:={? _dkc<>'brak' || ZK_P.ILP-ZK_P.ILRB || 0 ?};
   _ilr:=0;
   REZ.index('ZK_P');
   REZ.prefix(ZK_P.ref(),'W');
   {? REZ.first()
   || {!
      |? {? REZ.DK_C<>null & ($REZ.DK_C)<>_dkc
         || _wyn.clear();
            {? _wyn.find_key($REZ.DK_C)
            || _wyn.ILE+=REZ.ILR;
               _wyn.put(1)
            || _wyn.blank();
               _wyn.DKC:=$REZ.DK_C;
               _wyn.ILE:=REZ.ILR;
               _wyn.add(1)
            ?};
            _ilr+=REZ.ILR;
            _wyn.blank()
         ?};
         REZ.next()
      !}
   ?};
   {? _dkc<>'brak' & _ile>_ilr
   || _wyn.clear();
      {? _wyn.find_key(_dkc)
      || _wyn.ILE+=_ile-_ilr;
         _wyn.put(1)
      || _wyn.blank();
         _wyn.DKC:=_dkc;
         _wyn.ILE:=_ile-_ilr;
         _wyn.add(1)
      ?}
   ?}
?};
ZK_N.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();
_wyn


\sm_rezt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: rr [2008]
:: OPIS: rezerwacja tymczasowa z poziomu stanow magazynowych
::  OLD: \sm_rezt/pommag.fml
::----------------------------------------------------------------------------------------------------------------------
typ:=1;
SM.M;
exec('zam_tymc','rezerwacje',1,ST.MAG);
''


\zrez_tym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: generuje tabelke z rezerwacjami tymczasowymi
::   WE: [_a] - miejsce wywolania Z-zamowienia M-dokumenty magazynowe F-faktury
::       [_b] - automatycznie: wskazanie na REZ, domyslnie null()
::       [_c] - automatycznie: ilość przenoszona z rezerwacji, domyslnie 0
::       [_d] - automatycznie: wskazanie na limit, domyslnie null()
::       [_e] - automatycznie: wskazanie na pozycję zamówienia lub dokumentu magazynowego
::   WY: dla automatycznych parametrów: 1/0 bez nich ~~
::  OLD: \zrez_tym/rezerw.fml
::       \zrez_tym/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>2 || _a:='Z' ?} || _a:='Z' ?};
 _rez:={? var_pres('_b')=type_of(null()) || _b || null() ?};
 _ilr:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_zlim:={? var_pres('_d')=type_of(null()) || _d || null() ?};
_refp:={? var_pres('_e')=type_of(null()) || _e || null() ?};

_auto:=_rez<>null() & _ilr>0;

BEER.MJSLOG:='PTT';
VAR_DEL.delete('__przrez','__czycen');
__przrez:=tab_tmp(1,'REZ','STRING[16]',''
           ,'REA','REAL',''
           ,'CSP','REAL',''
           ,'CWL','REAL',''
           ,'RAB','REAL',''
           ,'RAK','REAL',''
           ,'KRS','REAL',''
           ,'CPR','REAL',''
           ,'PROMO','STRING[16]',''
           ,'TAR_H','STRING[16]',''
           ,'TAR_TMS','REAL','');

__czycen:=1;

BEER.ZK_N:={? _a<>'Z' || null || ZK_N.ref ?};
TAZ.RAB_TYP:=ZK_N.RAB_TYP;
:: miejsce przepisywania
DPOZ.MJSR:=_a;
typ:=2;
_mg:=null;

{? _a='Z'
|| _kh:=ZK_N.KH;
   _kontr:=ZK_N.KH().KOD+' - '+ZK_N.KH().SKR;
   {? ZK_N.MG<>null() || _mg:=ZK_N.MG ?};
   BEER.WALCSP:=ZK_N.WAL
|? _a='M'
|| __czycen:=ND.TYP().CS='T';
   _kh:=ND.KH;
   _kontr:=ND.KH().KOD+' - '+ND.KH().SKR;
   BEER.WALCSP:=ND.WAL;
   _mg:=ND.MAG;
   _fifo:={? ND.MAG().TYP*'DOST' || (';FL'*ND.TYP().AFIFO)>1 | ND.MAG().IL='T' || 1 ?};
   {? ND.TYP().Z='N' & ND.PROJEKT<>''
   || exec('projekt2projm','projekty',ND.PROJEKT);
      _kontr+=PROJM.PROJN
   ?}
|? _a='F'
|| _kh:=FAKS.KH;
   _kontr:=FAKS.KH().KOD+' - '+FAKS.KH().SKR;
   _fifo:={? FAKS.MAG<>null & FAKS.MAG().TYP*'DOST'
          || (';FL'*FAKS.TYPYDOK().AFIFO)>1
          |? (';FL'*FAKS.TYPYDOK().AFIFO)>1
          || 1
          || 0
          ?};
   _mg:=FAKS.MAG;
   BEER.WALCSP:=FAKS.WAL
|| _kh:=null;
   _kontr:=''
?};

_pr:=0;
{? _a='M' & ND.TYP().Z='N'
|| _pr:={? ND.PROJEKT='' || 1 || 2 ?};
   {? _pr=2
   || exec('projekt2projm','projekty',ND.PROJEKT);
      _proj:=PROJM.PROJEKTY;
      _etap:=PROJM.PROJETAP;
      _zl:=PROJM.ZL
   ?}
?};

:: trzeba zalozyc filtr - problems z uprawnieniami magazynowymi w przypadku zamowien
REZ.cntx_psh();

REZ.win_edit('PRZ');
REZ.win_sel('TYMREA');

_filtr:=0;
{? _auto
|| REZ.prefix();
   {? REZ.seek(_rez)
   || __przrez.blank();
      __przrez.REZ:=$REZ.ref();
      __przrez.REA:=_ilr;
      {? ~__przrez.add(1) || _auto:=-1 ?}
   || _auto:=-1
   ?}
|? ~(_a='M' & ND.TYP().Z='N') & _kh=null
|| ''
|? _a='Z'
|| _filtr:=1;
   REZ.index('KH');
   REZ.prefix();
   REZ.f_clear();
   {? _mg=null()
   || REZ.f_set('M(KTM),ODDT','','TYP=\'T\' and KH=:_a',_kh)
   || REZ.f_set('M(KTM),ODDT','','TYP=\'T\' and KH=:_a and MG=:_b',_kh,_mg)
   ?};
:: korekta REZ wg uprawnien do zamowien sprzedazy
   {? REZ.f_first()
   || {!
      |? BUFMG.index('US');
         BUFMG.prefix(OPERATOR.USER,2);
         {? BUFMG.find_key(REZ.MG)
         || REZ.f_next()
         || REZ.f_del()
         ?}
      !}
   ?}
|? _a='M' & _fifo
|| {? ~_pr
   || REZ.index('KH');
      REZ.prefix(_kh,'B','T',_mg)
   |? _pr>0
   || _filtr:=1;
      REZ.index('KH');
      REZ.prefix();
      REZ.f_clear();
      REZ.f_set('M(KTM),ODDT','','TYP=\'T\' and \"REZ\".RODZ=\'B\' and PROJEKT<>\'\' and MG=:_a ',_mg);
      {? _pr=2
      || {? REZ.f_first()
         || {!
            |? exec('projekt2projm','projekty',REZ.PROJEKT);
               {? _proj=PROJM.PROJEKTY & (_etap=null | _etap=PROJM.PROJETAP) & (_zl=null | _zl=PROJM.ZL)
               || REZ.f_next()
               || REZ.f_del()
               ?}
            !}
         ?}
      ?}
   ?}
|? _a='M' & ~_fifo
|| _filtr:=1;
   REZ.index('KH');
   REZ.prefix();
   REZ.f_clear();
   {? ~_pr
   || REZ.f_set('M(KTM),ODDT','','TYP=\'T\' and \"REZ\".RODZ=\'B\' and KH=:_a and MG=:_b ',_kh,_mg)
   || REZ.f_set('M(KTM),ODDT','','TYP=\'T\' and \"REZ\".RODZ=\'B\' and PROJEKT<>\'\' and MG=:_a ',_mg);
      {? _pr=2
      || {? REZ.f_first()
         || {!
            |? exec('projekt2projm','projekty',REZ.PROJEKT);
               {? _proj=PROJM.PROJEKTY & (_etap=null | _etap=PROJM.PROJETAP) & (_zl=null | _zl=PROJM.ZL)
               || REZ.f_next()
               || REZ.f_del()
               ?}
            !}
         ?}
      ?}
   ?};
:: korekta REZ wg dostaw
   {? REZ.f_first()
   || {!
      |? {? REZ.SC=''
         || REZ.f_del()
         || REZ.f_next()
         ?}
      !}
   ?}
|? _a='F' & _fifo
|| REZ.index('KH');
   REZ.prefix(_kh,'B','T')
|? _a='F' & ~_fifo
|| _filtr:=1;
   REZ.index('KH');
   REZ.prefix();
   REZ.f_clear();
   REZ.f_set('M(KTM),ODDT','','TYP=\'T\' and KH=:_a ',_kh);
:: korekta REZ wg uprawnien do magazynu i dostawy
   {? REZ.f_first()
   || {!
      |? {? (_mg<>null & REZ.MG<>_mg) | ((1+REZ.MG().TYP)='D' & REZ.SC='')
         || REZ.f_del()
         || REZ.f_next()
         ?}
      !}
   ?}
?};

{? {? _auto=1 || 1 |? ~_auto || {? ~_filtr || REZ.first() || REZ.f_first() ?} || 0 ?}
|| _nag:={? _a='Z' || 'ZK_N' |? _a='M' || 'ND' |? _a='F' || 'FAKS' || '' ?};
   exec('st_licz_wz','ceny',_nag);
   BEER.WALREZ:=TAZ.WAL;
   BEER.KRSREZ:=TAZ.KRS;
   BEER.WALCSP:=exec('bl_wal','ustawienia');
   {? _a='M' & ~_fifo & ND.MAG().TYP*'DOST' & ~_auto
   || FUN.info('Uwaga. W magazynie typu DOSTAWY, DOSTEWI dla typu dokumentu bez obsługi AUTO FIFO/LIFO\n'
               'pobierane są wyłącznie rezerwacje tymczasowe ze wskazaną dostawą.'@)
   ?};
   {? ~_auto || exec('set_efld_opt','rezerwacje') ?};
   {? _auto | REZ.select()
   ||
::    przeniesienie rezerwacji na dokument
      __przrez.clear();
      {? __przrez.first()
      || {!
         |? {? (REZ.clear();
              {? ~_filtr
              || REZ.seek(__przrez.REZ)
              || REZ.f_seek(__przrez.REZ)
              ?})
            || {? _a='Z' || exec('add_pozz','rezerwacje',_zlim,_refp)
               |? _a='M' || exec('add_pozm','rezerwacje',_refp)
               |? _a='F' || exec('add_pozf','rezerwacje')
               ?}
            ?};
            __przrez.next()
         !}
      ?}
   ?}
|| {? _auto=-1
   || FUN.info('Nie udało się zmienić stanu rezerwacji tymczasowej dla zlecenia.'@)
   |? ~_pr
   || FUN.info(
       {? _a='M' & ~_fifo & ND.MAG().TYP*'DOST'
       || 'Brak rezerwacji tymczasowych dla kontrahenta:\n%1.'
          '\n\nUwaga. W magazynie typu DOSTAWY, DOSTEWI dla typu dokumentu bez obsługi AUTO FIFO/LIFO\n'
          'pobierane są wyłącznie rezerwacje tymczasowe ze wskazaną dostawą.'@[_kontr]
       || 'Brak rezerwacji tymczasowych dla kontrahenta:\n%1.'@[_kontr]
       ?})
   || FUN.info('Brak rezerwacji tymczasowych dla projektu.'@+
       {? _a='M' & ~_fifo & ND.MAG().TYP*'DOST'
       || '\n\nUwaga. W magazynie typu DOSTAWY, DOSTEWI dla typu dokumentu bez obsługi AUTO FIFO/LIFO\n'
          'pobierane są wyłącznie rezerwacje tymczasowe ze wskazaną dostawą.'@
       || ''
       ?})
   ?}
?};
REZ.f_clear();
REZ.cntx_pop();

VAR_DEL.delete('__przrez','__czycen');
BEER.MJSLOG:='';
{? _auto=1  || 1
|? _auto=-1 || 0
|| ~~
?}


\zrez_tyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: akcja z rezerwacji tymczasowych dla dokumentow wydania
::  OLD: \zrez_tyd/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zrez_tym','rezerwacje','M')


\zrez_tyf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: akcja z rezerwacji tymczasowych dla faktur
::  OLD: \zrez_tyf/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_r_lock:=exec('r_lock_one','#table',FAKS,FAKS.ref);
{? ~_r_lock
||
   exec('who_rlock_faks','faktury_nag');
   return(0)
?};
exec('zrez_tym','rezerwacje','F');
exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock);
~~


\add_pozz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: dodaje jedna pozycje do zamowienia sprzedazy na podstawie wybranej rezerwacji tymczasowej
::   WE: [_a] - wskazanie na ZLIM.ref()
::       [_b] - wskazanie na ZK_P - podpięcie tylko rezerwacji
::   WY: 1-OK 0-nie
::  OLd: \add_pozz/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_kodmsk:=DK.name()+3;

_zlim:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_zk_p:={? var_pres('_b')=type_of(null()) || _b || null() ?};
  _up:={? _zk_p<>null() || 2 || 0 ?};
 _oki:=0;

ZK_P.cntx_psh();
{? _zk_p<>null()
|| ZK_P.prefix();
   {? ZK_P.seek(_zk_p) || _oki:=1 ?}
|| ZK_P.blank();
   ZK_P.NR:=REZ.NRK;
   ZK_P.DP:=date();
   ZK_P.DT:=REZ.DODT;
   {? ZK_P.DT<ZK_P.DP || ZK_P.DT:=ZK_P.DP ?};
   ZK_P.RR:=ZK_P.DP~1;
   ZK_P.RM:=ZK_P.DP~2;
   ZK_P.A:='A';
   ZK_P.M:=REZ.M;
   ZK_P.ILP:=ZK_P.ILZ:=__przrez.REA;
   ZK_P.RMAG:=REZ.MG;
   ZK_P.ONLY:=1;
   ZK_P.MG:=ZK_P.RMAG;
   {? ~(ZK_P.MG().TYP*'DOST') || ZK_P.DOST:=0 ?};
   ZK_P.REZ:=1;
   ZK_P.DOR:=__przrez.REA;
   ZK_P.DT:={? REZ.DODT>ZK_P.N().DT || REZ.DODT || ZK_P.N().DT ?};
   ZK_P.ODDT:={? ZK_P.N().DP>date() || ZK_P.N().DP || date() ?};
   ZK_P.DODT:=REZ.DODT;
   ZK_P.JM:=ZK_P.M().J;
   {? ZK_P.M().J2<>null()
   || ZK_P.J2:=ZK_P.M().J2;
      ZK_P.T2:='M';
      ZK_P.WS2:=exec('oblWSP','jm',ZK_P.M);
      ZK_P.IL2:=0;
      exec('oblJMG','jm',ZK_P,'ILZ',0)
   || ZK_P.WS2:=1;
      ZK_P.T2:='G';
      ZK_P.J2:=ZK_P.JM;
      ZK_P.T2:={? ~(exec('get','#params',400000,2)*'ZK') || 'G' || 1+(1-BEER.ZMJM) ?};
      {? (';AR'*ZK_P.T2)>1
      || ZK_P.J2:={? REZ.J2<>ZK_P.JM
                  || REZ.J2
                  || exec('FindInSet','#table','MJM','JP',ZK_P.M().J,ZK_P.M,"MJM.JM",,,ZK_P.J2)
                  ?};
         ZK_P.WS2:=exec('prz','jm',ZK_P.M,ZK_P.J2,ZK_P.M().J);
         ZK_P.WS2:={? ZK_P.WS2>0 || 1/ZK_P.WS2 || ZK_P.J2:=ZK_P.JM; 1 ?};
         _dokl_m:=exec('jaka_dok_m','jm',ZK_P.M);
         _dokl_s:=exec('jaka_dok_mjm','jm',ZK_P.M,ZK_P.J2,ZK_P.M().J);
         {? ZK_P.WS2=1 || _dokl_s:=_dokl_m ?};
         ZK_P.IL2:=ZK_P.ILZ*ZK_P.WS2 $ (_dokl_s+1);
         roundmet(BEER.MDOKL)
      ?}
   ?};
   ZK_P.SV:=exec('m_vat','material',ZK_P.M,ZK_P.N().KH,,ZK_N.DP~1,ZK_N.DP~2);
   ZK_P.CENA:=__przrez.CSP;
   ZK_P.CN:=__przrez.CPR;
   ZK_P.RAB:=__przrez.RAB;
   ZK_P.RABK:=__przrez.RAK;
   ZK_P.CWAL:=__przrez.CWL;
   ZK_P.KRS:=__przrez.KRS;
   {? __przrez.TAR_H<>''
   || TAR_H.cntx_psh();
      TAR_H.use(8+__przrez.TAR_H);
      ZK_P.TAR_H:=exec('FindAndGet','#table','TAR_H',__przrez.TAR_H,,,null());
      TAR_H.cntx_pop()
   ?};
   ZK_P.TAR_TMS:=__przrez.TAR_TMS;
   ZK_P.PROMO:=exec('FindAndGet','#table','PROMO',__przrez.PROMO,,,null());
   ZK_P.U:=REZ.UW;
   ZK_P.KH:=ZK_P.N().KH;
   ZK_P.KH_ODB:=ZK_P.N().ODB;
   ZK_P.ZL:=REZ.ZL;
   ZK_P.ZLIM:=_zlim;
   ZK_P.M_ZLIM:=ref_name(_zlim);
   {? ZK_P.add(1) || _oki:=1 ?}
?};
{? _oki
|| _kodmsk:=ST.ODDZ+form((ZK_P.DP~1)-2000,-2,0,'99');
   exec('update','rezerwacje','ZK_P',ZK_P.ref(),ZK_P.MG,ZK_P.M,ZK_P.DOR,REZ.SC,,,_up,,,ZK_P.IL2,ZK_P.J2,ZK_P.WS2);
   {? __przrez.REA=REZ.ILR
   || exec('archtymc','rezerwacje',0,$ZK_P.ref(),'',_kodmsk);
      REZ.del()
   || exec('archtymc','rezerwacje',REZ.ILR-__przrez.REA,$ZK_P.ref(),$REZ.ref(),_kodmsk);
      REZ.ILR-=__przrez.REA;
      REZ.put(1)
   ?};
   _ilr:=exec('ile_reze','rezerwacje',ZK_P.ref());
   ZK_P.ILRB:=_ilr[2];
   ZK_P.ILRW:=_ilr[3];
   ZK_P.ILRD:=_ilr[4];
   ZK_P.ILRA:=_ilr[5];
   ZK_P.SR:=_ilr[2];
   ZK_P.DOR:=_ilr[1];
   ZK_P.ZNB:={? ZK_P.ILRB>0 || 'T' || 'N' ?};
   ZK_P.ZNW:={? ZK_P.ILRW>0 || 'T' || 'N' ?};
   ZK_P.ZNR:={? ZK_P.ILP<ZK_P.ILZ || 'T' || 'N' ?};
   ZK_P.REZ:=ZK_P.ILRB>0 | ZK_P.ILRA>0;
   ZK_P.DOST:=ZK_P.ILRD>0;
   _rezzlzam:=_ilr[6];
   _doroz:=ZK_P.DOR+(ZK_P.ILRW-_rezzlzam-ZK_P.ILRA);
   ZK_P.ILBEZ:={? ZK_P.END || 0 |? ZK_P.ILP>_doroz || ZK_P.ILP-_doroz || 0 ?};
   ZK_P.CZYBEZ:={? ZK_P.ILBEZ>0 || 'T' || 'N' ?};
   obj_del(_ilr);
   {? ~ZK_P.put(1)
   || undo()
   || exec('obl_stan','magazyn_stan',ZK_P.M,1,ZK_P.MG);
      exec('war_zam','zamsiw_nag',ZK_P.N);
      _zkn:=tab_tmp(1,'ZKN','STRING[16]','');
      _zkn.blank(); _zkn.ZKN:=$ZK_P.N; _zkn.add(1);
      exec('aktznzkn','zamsiw_nag',_zkn);
      obj_del(_zkn)
   ?}
|| undo()
?};
ZK_P.cntx_pop();
~~


\add_pozm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: dodaje jedna pozycje do dokumentu magazynowego na podstawie wybranej rezerwacji tymczasowej
::       [_a] - wskazanie na ZK_P - podpięcie tylko rezerwacji
::   WY: 1-OK 0-nie
::  OLD: \add_pozm/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_refdk:={? var_pres('_a')=type_of(null()) || _a || null() ?};
   _up:={? _refdk<>null() || 2 || 0 ?};
_oki:=0;

DK.cntx_psh();
{? _refdk<>null()
|| DK.prefix();
   DK.seek(_refdk);
   DK.N().SYM;
   _oki:=1
?};

_kodmsk:=DK.name()+3;
_zlim:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_zk_p:={? var_pres('_b')=type_of(null()) || _b || null() ?};
 _oki:=0;

_kodmsk:=DK.name()+3;
_kh:=ND.KH;
_nag:=ND.ref;
_rab:=__przrez.RAB;
_rabk:=__przrez.RAK;
_tar_h:=null();
{? __przrez.TAR_H<>''
|| TAR_H.cntx_psh();
   TAR_H.use(8+__przrez.TAR_H);
   _tar_h:=exec('FindAndGet','#table','TAR_H',__przrez.TAR_H,,,null());
   TAR_H.cntx_pop()
?};
_tartms:=__przrez.TAR_TMS;
_promo:=exec('FindAndGet','#table','PROMO',__przrez.PROMO,,,null());
_cwal:=__przrez.CWL;
_c_sp:=__przrez.CSP;
_sv:=exec('m_vat','material',REZ.M,ND.KH,,ND.AR,ND.AM,REZ.M().VAT,2,);
_krs:=__przrez.KRS;
_wal:=ND.WAL;
_proj:=null;
_poz:=exec('NewOrder','#table','DK','P','DOKMAG',ND.ref());
_mat:=REZ.M;
_mag:=REZ.MG;
_zlec:=REZ.ZL;
_wyd:={? REZ.ZL<>null() || REZ.ZL().JORG || null() ?};
_j2:={? REZ.J2<>null() || $REZ.J2 || $REZ.M().J ?};
{? _refdk=null()
 & (_refdk:=exec('gen_pozy','zamsiw_rea',_nag,REZ.M,_poz,__przrez.REA,BB.sqlint(REZ.SC),8+REZ.SC,__przrez.CSP
      ,_cwal,_krs,_wal,_rab,_sv,,_j2,1,__przrez.REA,,REZ.PROJEKT,_zlec,_wyd,_rabk,_tar_h,_promo,,_tartms,REZ.UW))=null()
|| undo()
|| exec('update','rezerwacje','DK',_refdk,ND.MAG,REZ.M,__przrez.REA,REZ.SC,,,_up);
   {? __przrez.REA=REZ.ILR
   || exec('archtymc','rezerwacje',0,$_refdk,'',_kodmsk);
      REZ.del()
   || exec('archtymc','rezerwacje',REZ.ILR-__przrez.REA,$_refdk,$REZ.ref(),_kodmsk);
      REZ.ILR-=__przrez.REA;
      REZ.put(1)
   ?};
   exec('obl_stan','magazyn_stan',_mat,1,_mag)
?};
DK.cntx_pop();
~~


\add_pozf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: dodaje jedna pozycje do dokumentu sprzedazy na podstawie wybranej rezerwacji tymczasowej
::   WY: 1-OK 0-nie
::----------------------------------------------------------------------------------------------------------------------

_kodmsk:=DK.name()+3;
_kh:=FAKS.KH;
_nag:=FAKS.ref;
_rab:=__przrez.RAB;
_rabk:=__przrez.RAK;
_tar_h:=null();
{? __przrez.TAR_H<>''
|| TAR_H.cntx_psh();
   TAR_H.use(8+__przrez.TAR_H);
   _tar_h:=exec('FindAndGet','#table','TAR_H',__przrez.TAR_H);
   TAR_H.cntx_pop()
?};
_tartms:=__przrez.TAR_TMS;
_promo:=exec('FindAndGet','#table','PROMO',__przrez.PROMO);
_cwal:=__przrez.CWL;
_c_sp:=__przrez.CSP;
_sv:=exec('m_vat','material',REZ.M,FAKS.KH,exec('exp_ue','typysp'),FAKS.AR,FAKS.AM,REZ.M().VAT,2,);
_krs:=__przrez.KRS;
_wal:=FAKS.WAL;
_proj:=null;

_mat:=REZ.M;
_mag:=REZ.MG;
_wsp:=0;
_ws2:=1;
_j2:=REZ.M().J;

FAKS.get();
exec('ADDPOZF','faktury_poz',REZ.M,__przrez.REA,_c_sp,_rab,_sv,,,_cwal,_krs,_wal,_j2,,_rabk,_tar_h,_promo
 ,{? REZ.SC<>'' || REZ.DK_C || null ?},_tartms);

FAP.J2:={? FAP.J2<>null || FAP.J2 || FAP.JM ?};
FAP.T2:={? _wsp<>0 || 'R' || 'N' ?};
FAP.WS2:={? _wsp<>0 || _wsp || 1 ?};
FAP.IL2:={? _wsp<>0 || REZ.IL2 || FAP.IL ?};

{? FAP.M().J2<>null()
|| FAP.J2:=FAP.M().J2;
   FAP.T2:='M';
   FAP.WS2:=exec('oblWSP','jm',FAP.M);
   FAP.IL2:=0;
   exec('oblJMG','jm',FAP,'IL',0)
|| FAP.T2:={? ~(exec('get','#params',400000,2)*'FK') || 'G' || 1+(1-BEER.FMJM) ?};
   {? (';AR'*FAP.T2)>1
   || FAP.J2:={? REZ.J2<>ZK_P.JM
              || REZ.J2
              || exec('FindInSet','#table','MJM','JP',FAP.M().J,FAP.M,"MJM.JM",,,FAP.J2)
              ?};
      FAP.WS2:=exec('prz','jm',FAP.M,FAP.J2,FAP.M().J);
      FAP.WS2:={? FAP.WS2>0 || 1/FAP.WS2 || FAP.J2:=FAP.JM; 1 ?};
      _dokl_m:=exec('jaka_dok_m','jm',FAP.M);
      _dokl_s:=exec('jaka_dok_mjm','jm',FAP.M,FAP.J2,FAP.M().J);
      {? FAP.WS2=1 || _dokl_s:=_dokl_m ?};
      FAP.IL2:=FAP.IL*FAP.WS2 $ (_dokl_s+1);
      roundmet(BEER.MDOKL)
   ?}
?};

FAP.U:=REZ.UW;
FAP.memo_set(REZ.UW,'UWAGI');
FAP.put(1);
FAP.memo_put(,'UWAGI');
_reffap:=FAP.ref();

{? _reffap=null
|| null;
   undo()
|| exec('update','rezerwacje','FAP',_reffap,REZ.MG,REZ.M,__przrez.REA,REZ.SC,,,,,,FAP.IL2,FAP.J2,FAP.WS2);
   {? __przrez.REA=REZ.ILR
   || exec('archtymc','rezerwacje',0,$_reffap,'',_kodmsk);
      REZ.del()
   || exec('archtymc','rezerwacje',REZ.ILR-__przrez.REA,$_reffap,$REZ.ref(),_kodmsk);
      REZ.ILR-=__przrez.REA;
      REZ.put(1)
   ?};
   exec('obl_stan','magazyn_stan',_mat,1,_mag)
?}


\archtymc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: dodaje informacje do tabeli historii rezerwacji tymczasowych
::   WE: _a - ilosc do pomniejszenia
::       _b - ref SQL pozycji dokumentu
::       _c - ref SQL REZ-a
::       _d - kod maski - 3 znaki
::   WY: 1-dodano 0-nie dodano
::  OLD: \archtymc/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_mask:=REZ.name();
_hist:=(REZ.name()-3)+_d;

REZ.cntx_psh();
REZ.use(_hist);
REZ.prefix();
REZ.ILR-=_a;
REZ.POZSQL:=_b;
REZ.REFSQL:=_c;
_add:=1;
:: W przypadku rezerwacji surowców do wykonania produkcji sprawdzenie, czy nie ma już rezerwacji o danych parametrach
{? REZ.ZL_REZ='R'
|| _ilr:=REZ.ILR;
   _zlim:=REZ.ZLIM;
   _zlgd:=REZ.REFREA;
   _sc:=REZ.SC;
   {? REZ.find_tab(,'ZLIM',,'=',_zlim,'REFREA',,'=',_zlgd,'SC',,'=',_sc)
   || _add:=0;
      REZ.ILR+=_ilr;
      _wyn:=REZ.put(1)
   ?}
?};
{? _add>0
|| _wyn:=REZ.add(1)
?};
REZ.use((_mask-2)+'__');
REZ.cntx_pop();
_wyn


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zaznacza wymagalne pola w pozycji rezerwacji
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || REZ.win_edit('?') ?};


_prz:='enable='+{? REZ.T2<>'N' || '1' || '0' ?};
_atr:='enable='+{? REZ.DK_C<>null() || '1' || '0' ?};

REZ.efld_opt(_win_red,_prz,,'WS2');
REZ.efld_opt(_win_red,_prz,,'J2');
REZ.efld_opt(_win_red,_prz,,'IL2');
REZ.efld_opt(_win_red,_prz,,'T2');
REZ.efld_opt(_win_red,_atr,,'DK_C');
{? REZ.TYP='T' | (REZ.TYP='Z' & REZ.ZK_P().RODZ='Z')
|| REZ.efld_opt(_win_red,'enable=1',,'KH');
   REZ.efld_opt(_win_red,'mark=1',,'KH')
|| REZ.efld_opt(_win_red,'enable=0',,'KH');
   REZ.efld_opt(_win_red,'mark=0',,'KH')
?};
{? BEER.REZ_ZLIM=2
|| REZ.efld_opt(_win_red,'mark=1',,'M','KTM');
   REZ.efld_opt(_win_red,'editable=grayed',BEER,'DOSTAWA')
|| REZ.efld_opt(_win_red,'mark=0',,'M','KTM');
   REZ.efld_opt(_win_red,'editable=1',BEER,'DOSTAWA')
?};
{? BEER.REZ_ZLIM>0
|| {? REZ.BTERM='T'
   || REZ.efld_opt(_win_red,'enable=0',BEER,'IL_DNI')
   || REZ.efld_opt(_win_red,'enable=1',BEER,'IL_DNI')
   ?}
|| REZ.efld_opt(_win_red,'enable=1',BEER,'IL_DNI')
?};
~~


\del_dodt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: usuwa przeterminowane rezerwacje do danej daty warunkowe i bezwarunkowe
::   WY: ilość usuniętych rezerwacji
::  OLD: \del_dodt/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_od_dtb:=date(0,0,0);
_do_dtb:=date()-1;
REZ.index('DODT');
REZ.prefix('B');
{? REZ.first()
|| {!
   |? {? REZ.DODT<>date(0,0,0) & REZ.DODT<=_do_dtb
      || _od_dtb:=REZ.DODT;
         0
      || REZ.next()
      ?}
   !}
?};

_od_dtw:=date(0,0,0);
_do_dtw:=date()-1;
REZ.index('DODT');
REZ.prefix('W');
{? REZ.first()
|| {!
   |? {? REZ.DODT<>date(0,0,0) & REZ.DODT<=_do_dtw
      || _od_dtw:=REZ.DODT;
         0
      || REZ.next()
      ?}
   !}
?};

_buftrzl:=tab_tmp(1,'TR_ZL','STRING[50]','');

{? (_od_dtb<>date(0,0,0) & _od_dtb<=_do_dtb) | (_od_dtw<>date(0,0,0) & _od_dtw<=_do_dtw)
||
   _mat:=tab_tmp(1,'MAT','STRING[16]',''
          ,'ILR','REAL',''
          ,'NRK','INTEGER','');
   _zkp:=tab_tmp(2,'MAT','STRING[16]','','ZKP','STRING[16]','');
   _zkn:=tab_tmp(1,'ZKN','STRING[16]','');

   {! _krok:=1..2
   |! {? _krok=1
      || _od_dt:=_od_dtb;
         _do_dt:=_do_dtb;
         _rodz:='B'
      || _od_dt:=_od_dtw;
         _do_dt:=_do_dtw;
         _rodz:='W'
      ?};
      {? _od_dt<>date(0,0,0)
      || {!
         |? REZ.index('DODT');
            REZ.prefix(_rodz,_od_dt);
            {? REZ.first()
            || _ref:=REZ.ref();
               {!
               |? _next:=0;
                  _mskzkp:=ref_name(REZ.ZK_P);
                  ZK_N.cntx_psh();
                  ZK_P.cntx_psh();
                  {? _mskzkp<>'' & _mskzkp<>ZK_P.name()
                  || ZK_N.use('zknag'+(_mskzkp+3));
                     ZK_P.use(_mskzkp)
                  ?};
                  _nag:=REZ.ZK_P().N;
                  _norea:=_nag<>null() & {? ZK_N.r_lock(1,1,1,#_nag,ref_name(_nag)) || ZK_N.r_unlock();1 || 0 ?};
                  {? (REZ.TYP='Z' | REZ.TYP='T') & _norea
                  || {? REZ.TR_ZL<>''
                     || _buftrzl.clear();
                        _buftrzl.prefix(REZ.TR_ZL);
                        {? ~_buftrzl.first()
                        || _buftrzl.blank();
                           _buftrzl.TR_ZL:=REZ.TR_ZL;
                           _buftrzl.add(1)
                        ?}
                     ?};
                     {? REZ.ZK_P<>null
                     ||
                        _zkp.clear();
                        {? ~_zkp.find_key($REZ.M,$REZ.ZK_P)
                        || _zkp.blank();
                           _zkp.MAT:=$REZ.M;
                           _zkp.ZKP:=$REZ.ZK_P;
                           _zkp.add(1)
                        ?};
                        _zkn.clear(); {? ~_zkn.find_key($REZ.ZK_N) || _zkn.blank(); _zkn.ZKN:=$REZ.ZK_N; _zkn.add(1) ?}
                     ?};
                     _ktm:=REZ.M;
                     _nrk:=REZ.NRK;
                     _ilr:=REZ.ILR;
                     {? REZ.seek(_ref)=0
                     || _next:=REZ.next()
                     ||
::                      wylaczenie komunikatu przy jednoczesnym usuwaniu rekordy z wielu stanowisk
                        no_msg(1);
                        {? REZ.count() & REZ.TYP='Z' & REZ.ZK_P<>null() || exec('delezkrp','zamsiw_rea',REZ.ZK_P) ?};
                        _next:=REZ.del();
                        _res+=1;
                        no_msg(0);
                        _mat.clear();
                        {? _mat.find_key($_ktm)
                        || _mat.ILR+=_ilr;
                           {? _mat.NRK>_nrk || _mat.NRK:=_nrk ?};
                           _mat.put(1)
                        || _mat.blank();
                           _mat.MAT:=$_ktm;
                           _mat.ILR:=_ilr;
                           _mat.NRK:=_nrk;
                           _mat.add(1)
                        ?}
                     ?}
                  || _next:=REZ.next()
                  ?};
                  _ref:=REZ.ref();
                  ZK_N.cntx_pop();
                  ZK_P.cntx_pop();
                  _next
               !}
            ?};
            _od_dt+=1;
            _od_dt<=_do_dt
         !}
      ?}
   !};
   _mat.clear();
   {? _mat.first()
   || {!
      |? _refm:=exec('FindAndGet','#table','M',_mat.MAT,,,null());
         _buf:=exec('aktu_rez','rezerwacje',_refm,_mat.NRK,_mat.ILR,,_zkp);
         _buf.clear();
         {? _buf.first()
         || {!
            |? _zkn.clear();
               {? ~_zkn.find_key(_buf.ZKN)
               || _zkn.blank();
                  _zkn.ZKN:=_buf.ZKN;
                  _zkn.add(1)
               ?};
               _buf.next()
            !}
         ?};
         obj_del(_buf);
         _mat.next()
      !}
   ?};
   exec('aktznzkn','zamsiw_nag',_zkn);
   obj_del(_mat);
   obj_del(_zkp);
   obj_del(_zkn)
?};
_buftrzl.clear();
{? _buftrzl.first()
|| {!
   |? exec('aktILRtr_zl','transport_zlec',_buftrzl.TR_ZL);
      _buftrzl.next()
   !}
?};
obj_del(_buftrzl);
_res


\autowrez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zaklada automatycznie rezerwacje dla rezerwacji warunkowych jesli sie da
::   WY: ilość zmienionych rezerwacji
::  OLD: \autowrez/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_od_dt:=date(0,0,0);
_do_dt:=date();
REZ.index('ODDT');
REZ.prefix('W');
{? REZ.first()
|| {!
   |? {? REZ.ZLZAM=null() & REZ.ODDT<>date(0,0,0) & REZ.ODDT<=date() & REZ.DODT>=_do_dt
      || _od_dt:=REZ.ODDT;
         0
      || REZ.next()
      ?}
   !}
?};

_buftrzl:=tab_tmp(1,'TR_ZL','STRING[50]','');

{? _od_dt<>date(0,0,0) & _od_dt<=_do_dt
|| _zkp:=tab_tmp(2,'MAT','STRING[16]','','ZKP','STRING[16]','');
   _zkn:=tab_tmp(1,'ZKN','STRING[16]','');
   _mat:=tab_tmp(1,'MAT','STRING[16]',''
          ,'NRK','INTEGER',''
          ,'ILE','REAL','');
   _rez:=tab_tmp(1,'REZ','STRING[16]','');
   {!
   |? REZ.index('ODDT');
      REZ.prefix('W',_od_dt);
      {? REZ.first()
      || {!
         |? {? REZ.TR_ZL<>''
            || _buftrzl.clear();
               _buftrzl.prefix(REZ.TR_ZL);
               {? ~_buftrzl.first()
               || _buftrzl.blank();
                  _buftrzl.TR_ZL:=REZ.TR_ZL;
                  _buftrzl.add(1)
               ?}
            ?};
            _warunek:=(REZ.TYP='Z' | REZ.TYP='T') & REZ.ODDT<=date();
            {? _warunek & REZ.ZK_P<>null() & ZK_P.name()<>ref_name(REZ.ZK_P)
            || _next:=REZ.del();
               _res+=1
            |? _warunek & REZ.ZLZAM=null()
            || _ktm:=REZ.M;
               _nrk:=REZ.NRK;
               _ilr:=REZ.ILR;
               _ref:=REZ.ref();
               _czy:=REZ.ZK_P<>null;

               _next:=REZ.next();
               {? _czy
               || REZ.cntx_psh();
                  REZ.clear();
                  {? {? (#_ref)>0 & REZ.r_lock(1,1,1,#_ref,ref_name(_ref))
                     || REZ.seek(_ref) & REZ.RODZ='W' & REZ.r_lock(1,1,1)
                     || 0
                     ?}
                  || _ildo:=REZ.ILR;
                     _rmag:=REZ.MG;
                     _dkc:={? REZ.DK_C<>null || REZ.DK_C || REZ.ZK_P().DK_C ?};
                     _dokl:=REZ.M().DOKL;
                     _mat.clear();
                     {? _mat.find_key($REZ.M)
                     || _mat.ILE+=REZ.ILR;
                        _mat.put(1)
                     || _mat.blank();
                        _mat.MAT:=$REZ.M;
                        _mat.NRK:=exec('FindInSet','#table','REZ','RODZ',REZ.M,'W',"REZ.NRK",,,0);
                        _mat.ILE:=REZ.ILR;
                        _mat.add(1)
                     ?};
                     {? REZ.SC<>'' | _rmag<>null
                     || {? REZ.SC<>''
                        || _std:=exec('obl_stad','magazyn_stan',REZ.M,REZ.SC)
                        || exec('obl_stan','magazyn_stan',REZ.M,1,_rmag,,,,,,,,_dkc);
                           _std:=BEER.SD
                        ?};
                        {? _std>=_ildo
                        || REZ.RODZ:='B';
                           REZ.RP_REZ:='N';
                           {? REZ.put(1)
                           || _res+=1;
                              {? (_rez.clear(); ~_rez.find_key($REZ.ref()))
                              || _rez.blank();
                                 _rez.REZ:=$REZ.ref();
                                 _rez.add(1)
                              ?}
                           ?};
                           _zkp.clear();
                           {? ~_zkp.find_key($REZ.M,$REZ.ZK_P)
                           || _zkp.blank();
                              _zkp.MAT:=$REZ.M;
                              _zkp.ZKP:=$REZ.ZK_P;
                              _zkp.add(1)
                           ?};
                           _zkn.clear();
                           {? ~_zkn.find_key($REZ.ZK_N) || _zkn.blank(); _zkn.ZKN:=$REZ.ZK_N; _zkn.add(1) ?}
                        |? _std>0
                        || _sql:=$REZ.ref();
                           REZ.ILR-=_std;
                           REZ.put(1);
                           _res+=1;
                           _zkp.clear();
                           {? ~_zkp.find_key($REZ.M,$REZ.ZK_P)
                           || _zkp.blank();
                              _zkp.MAT:=$REZ.M;
                              _zkp.ZKP:=$REZ.ZK_P;
                              _zkp.add(1)
                           ?};
                           _zkn.clear();
                           {? ~_zkn.find_key($REZ.ZK_N) || _zkn.blank(); _zkn.ZKN:=$REZ.ZK_N; _zkn.add(1) ?};
                           exec('update','rezerwacje','ZK_P',REZ.ZK_P,REZ.MG,REZ.M,_std,REZ.SC,'B',,1,REZ.ZK_P().NR,''
                            ,,,,,date(),REZ.DODT,REZ.DK_C)
                        ?}
                     || BUFMG.index('NR');
                        BUFMG.prefix(OPERATOR.USER,{? REZ.ZK_P().RODZ='Z' || 2 || 9 ?});
                        {? BUFMG.first()
                        || {!
                           |? {? BUFMG.MG().ODDZ=ST.ODDZ_KOD & BUFMG.MG().PAL<>'T'
                              || exec('obl_stan','magazyn_stan',REZ.M,1,BUFMG.MG,,,,,,,,_dkc);
                                 _std:=BEER.SD;
                                 {? _std>=_ildo
                                 || _ildo:=0;
                                    REZ.MG:=BUFMG.MG;
                                    REZ.RODZ:='B';
                                    REZ.RP_REZ:='N';
                                    {? REZ.put(1)
                                    || _res+=1;
                                       {? (_rez.clear(); ~_rez.find_key($REZ.ref()))
                                       || _rez.blank();
                                          _rez.REZ:=$REZ.ref();
                                          _rez.add(1)
                                       ?}
                                    ?};
                                    _zkp.clear();
                                    {? ~_zkp.find_key($REZ.M,$REZ.ZK_P)
                                    || _zkp.blank();
                                       _zkp.MAT:=$REZ.M;
                                       _zkp.ZKP:=$REZ.ZK_P;
                                       _zkp.add(1)
                                    ?};
                                    _zkn.clear();
                                    {? ~_zkn.find_key($REZ.ZK_N) || _zkn.blank(); _zkn.ZKN:=$REZ.ZK_N; _zkn.add(1) ?}
                                 |? _std>0
                                 || _ildo-=_std;
                                    _sql:=$REZ.ref();
                                    REZ.MG:=BUFMG.MG;
                                    REZ.ILR-=_std;
                                    REZ.put(1);
                                    _res+=1;
                                    _zkp.clear();
                                    {? ~_zkp.find_key($REZ.M,$REZ.ZK_P)
                                    || _zkp.blank();
                                       _zkp.MAT:=$REZ.M;
                                       _zkp.ZKP:=$REZ.ZK_P;
                                       _zkp.add(1)
                                    ?};
                                    _zkn.clear();
                                    {? ~_zkn.find_key($REZ.ZK_N) || _zkn.blank(); _zkn.ZKN:=$REZ.ZK_N; _zkn.add(1) ?};
                                    exec('update','rezerwacje','ZK_P',REZ.ZK_P,REZ.MG,REZ.M,_std,REZ.SC,'B',,1
                                     ,REZ.ZK_P().NR,'',,,,,date(),REZ.DODT,REZ.DK_C)
                                 ?}
                              ?};
                              _ildo>0 & BUFMG.next()
                           !}
                        ?}
                     ?};
                     REZ.r_unlock()
                  ?};
                  REZ.cntx_pop()
               ?}
            || _next:=REZ.next()
            ?};
            _next
         !}
      ?};
      _od_dt+=1;
      _od_dt<=_do_dt
   !};
   _rez.clear();
   {? _rez.first()
   || {!
      |? {? (REZ.clear(); REZ.seek(_rez.REZ))
         || REZ.ODDT:=date();
            REZ.put(1)
         ?};
         _rez.next()
      !}
   ?};
   exec('aktznzkp','zamsiw_poz',_zkp);
   _mat.clear();
   {? _mat.first()
   || {!
      |? exec('aktu_rez','rezerwacje',exec('FindAndGet','#table','M',_mat.MAT,,,null()),_mat.NRK,_mat.ILE);
         _mat.next()
      !}
   ?};
   obj_del(_zkp);
   obj_del(_zkn);
   obj_del(_rez);
   obj_del(_mat)
?};
_buftrzl.clear();
{? _buftrzl.first()
|| {!
   |? exec('aktILRtr_zl','transport_zlec',_buftrzl.TR_ZL);
      _buftrzl.next()
   !}
?};
obj_del(_buftrzl);
_res


\killrezt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: usuniecie przeterminowanych rezerwacji tymczasowych
::   WY: ilość przeterminowanych rezerwacji tymczasowych
::  OLD: \killrezt/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_data:=date();
_msk:=REZ.name()-2;
_mask:=REZ.name();
OKR.cntx_psh();
REZ.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first()
|| {!
   |? REZ.use(_msk+form(OKR.ROK-2000,-2,0,'99'));
      REZ.clear();
      {? REZ.first()
      || {!
         |? {? REZ.DODT<_data
            || _ok:=1;
               {? REZ.TYP='S' & REZ.ZL<>null()
               ||
::                Rezrwacje archiwalne dla pobrań surowców zlecenia - trzymane do momentu zamknięcia zlecenia
                  _ok:=exec('FindAndGet','#table',ZL,REZ.ZL,,"ZL.STAN='Z'",1)
               ?};
               {? _ok>0
               || no_msg(1);
                  _next:=REZ.del();
                  _res+=1;
                  no_msg(0);
                  _next
               || REZ.next()
               ?}
            || REZ.next()
            ?}
         !}
      ?};
      OKR.next()
   !}
?};
OKR.cntx_pop();
REZ.cntx_pop();
REZ.use(_msk+'__');
_res


\neworder
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: zmiana kolejki rezerwacji
::   WE: [_a] - ref zamowienia
::       [_b] - ref pozycji zamowienia
::  OLD: \neworder/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=ZK_N.ref() ?} || _a:=ZK_N.ref() ?};
{? _>=2 || {? type_of(_b)<>7 || _b:=null ?} || _b:=null ?};
_beerzk_n:=BEER.ZK_N;
BEER.ZK_N:=_a;

{? _b=null & exec('eann2zk','magdok_wspolne',BEER.ZK_N)<>''
|| FUN.info('Zamówienie wysłane na urządzenie mobilne - Kompletacja wysyłki.\n'@+
            'Zmiana kolejności rezerwacji niemożliwa.'@)
|? _b=null & (BEER.ZK_N().MG<>null & BEER.ZK_N().MG().PAL='T')
|| FUN.info('Zamówienie dotyczące magazynu z obsługą palet.\n'@+
            'Zmiana kolejności rezerwacji niemożliwa.'@)
|? _b<>null() & exec('czyRezZlzam','zamsiw_wspolne',_b)
|| FUN.info('Pozycja powiązana ze zleceniem.\n'@+
            'Zmiana kolejności rezerwacji niemożliwa.'@)
|? _b<>null() & exec('czyRezRPrez','zamsiw_wspolne',_b)
|| FUN.info('Pozycja powiązana z rezerwacjami dedykowanymi.\n'@+
            'Zmiana kolejności rezerwacji niemożliwa.'@)
|| exec('init_blk','zamsiw_nag');
   exec('neworderFun','rezerwacje',_a,_b)
?};
BEER.ZK_N:=_beerzk_n;
~~


\neworderFun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zmiana kolejki rezerwacji
::   WE: [_a] - ref zamowienia
::       [_b] - ref pozycji zamowienia
::  OLD: \neworder/rezerw.fml
:: ~OST: INWINBTN
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=ZK_N.ref() ?} || _a:=ZK_N.ref() ?};
{? _>=2 || {? type_of(_b)<>7 || _b:=null ?} || _b:=null ?};
{? _>=3 || {? type_of(_c)<>7 || _c:=null ?} || _c:=null ?};

BEER.MJSLOG:='ORD';
ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
_zpoz:=_b<>null;
{? _zpoz & ZK_P.ILP<=0
|| FUN.info('Pozycja zrealizowana.\nZmiana kolejności rezerwacji niemożliwa.'@)
|? _zpoz & ~ZK_P.REZ
|| FUN.info('Pozycja bez znacznika rezerwacji.\nZmiana kolejności rezerwacji niemożliwa.'@)
||
   _refzkn:=BEER.ZK_N:=_a;
   _refzkp:=_b;
   {? BEER.ZK_N().T().R='Z'
   || _typzam:='ZAM';
      _tr:=exec('get','#params',3500,2,OPERATOR.USER)
   || _typzam:='ZAW';
      _tr:=exec('get','#params',3510,2,OPERATOR.USER)
   ?};
   _userr:=BEER.ZK_N().USR;

   {? _tr<>'N'
   ||
::    uprawnienia do magazynow
      _mag:=exec('tabuprmg','users',BEER.ZK_N().USR,'ZA'+{? BEER.ZK_N().T().R='Z' || 'M' || 'W' ?});
      _ile:=obj_len(_mag);
      {? _ile=1 & _mag[1]=null || _ile:=0 ?};

::    sprawdzenie czy uzytkownik realizujacy ma uprawnienia do magazynow
      {? _ile>0
      ||
         VAR_DEL.delete('__wybrez','__winroz','__powod','__btnord');
         {? _b=null || exec('init_blk','zamsiw_nag') ?};
         __wybrez:=tab_tmp(5,'TREE','TREE_REF','galazka',
                    'LAB','STRING[120]','Etykieta',
                    'NRK','INTEGER','Nr w kolejce',
                    'MAG','STRING[20]','Magazyn',
                    'KTO','STRING[20]','Kto rezerwuje',
                    'ILZ','REAL','Ilość zamówiona',
                    'ILR','REAL','Ilość rezerwowana',
                    'REP','REAL','Pozostało do rezerwacji',
                    'JM','STRING[10]','jm',
                    'REF','STRING[16]','ref',
                    'DOKL','INTEGER','Dokladnoś',
                    'POZ','INTEGER','Poziom',
                    'NRP','INTEGER','Nr pozycji',
                    'RMAT','STRING[16]','ref materialu',
                    'KHKOD','STRING[10]','Kod kontrahenta',
                    'KHSKR','STRING[10]','Skrót kontrahenta',
                    'KHNAZ','STRING[60]','Nazwa kontrahenta',
                    'TREA','DATE','termin realizacji',
                    'ZLEC','STRING[20]','zlecenie',
                    'WYDZ','STRING[8]','wydzial',
                    'RMAG','STRING[16]','ref magazynu',
                    'INNE','INTEGER','sa inne pozycje',
                    'OPIS','STRING[255]','opis');

         __wybrez.fld_fml('ILZ','DISPLAY_FORMAT',"'out_prec='+$__wybrez.DOKL");
         __wybrez.fld_fml('ILR','DISPLAY_FORMAT',"'out_prec='+$__wybrez.DOKL");
         __wybrez.fld_fml('REP','DISPLAY_FORMAT',"'out_prec='+$__wybrez.DOKL");

         _win_sel:=__wybrez.mk_sel({? _zpoz
                                   || 'Rezerwacje dla pozycji zamówienia: '@
                                   || 'Rezerwacje dla zamówienia: '@
                                   ?}+ZK_N.SYM,'P'
          ,,'#zmkolrez',,,__wybrez.size(),1,,,,,,'html_maximized');
         __winroz:=_win_sel;

         __wybrez.win_fld(_win_sel,,'LAB',,,30,,1,'');
         __wybrez.win_fld(_win_sel,,'NRP',,,-4,,1,'Pozycja'@);
         __wybrez.win_fld(_win_sel,,'NRK',,,-4,,1,'Numer'@);
         __wybrez.win_fld(_win_sel,,'MAG',,,-10,,1,'Magazyn/Zamówienie'@);
         __wybrez.win_fld(_win_sel,,'KTO',,,-10,,1,'Kto rezerwował'@);
         {? BEER.ZK_N().T().R='Z'
         || __wybrez.win_fld(_win_sel,,'KHSKR',,,10,,1,'Kontrahent'@)
         || __wybrez.win_fld(_win_sel,,'ZLEC',,,10,,1,'Zlecenie'@)
         ?};
         __wybrez.win_fld(_win_sel,,'TREA',,,-10,,1,'Termin realizacji'@);
         __wybrez.win_fld(_win_sel,,'ILZ',,,-11,3,1,'Ilość zamawiana'@);
         __wybrez.win_fld(_win_sel,,'ILR',,,-11,3,,'Ilość rezerwowana'@);
         __wybrez.win_fld(_win_sel,,'REP',,,-11,3,,'Do rezerwacji'@);

         __wybrez.win_act(_win_sel,0,'Formuła','&Zmień kolejkę'@@,,'Zmiana kolejności rezerwacji'@,
                   "exec('akc_krez','rezerwacje')",,1,,,,'Z');
         __wybrez.win_act(_win_sel,0,'Formuła','Zwiń/&rozwiń'@@,,'Zwijanie/rozwijanie całości'@,
                   "exec('zwin_rozwin','#tree')",,1,,,,'R');
         __wybrez.win_act(_win_sel,0,'Formuła','&Przesuń'@@,,'Przesunięcie kolejki'@,
                   "exec('newkolej','rezerwacje',1)",,,1,"exec('newkolej','rezerwacje',1)",,'P');
         __wybrez.win_act(_win_sel,0,'Rekord',,,,"exec('rekprzed','color','__wybrez#01')",,0);
         __wybrez.win_act(_win_sel,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','@__wybrez#01')",,,,,,'L');
         __wybrez.win_act(_win_sel,0,'Szukaj');

         __wybrez.tr_fml(_win_sel,,"{? _a || {? __wybrez.TREE=0 || 1 || _a ?} || _a ?}");
         __wybrez.win_fml(_win_sel,,'LAB',,'ICON_BEFORE',"
               {? __wybrez.POZ=0
               || 'xwin16.png:185'
               |? __wybrez.POZ=1
               || 'xwin16.png:93'
               |? __wybrez.POZ=2 & __wybrez.ILR>0
               || 'xwin16.png:38'
               || ''
               ?}
            ");
         __btnord:=__wybrez.win_btn(_win_sel,'text='+'&Zmień kolejkę'@+', panel=bottom, align=begin'
                    ,'menu:Z',,,,,,'noempty');
         __wybrez.fld_fml('NRP','DISPLAY_FORMAT',"{? ~__wybrez.TREE || 'empty=1' || 'empty=0' ?}");
         __wybrez.fld_fml('NRK','DISPLAY_FORMAT',"{? ~__wybrez.TREE || 'empty=1' || 'empty=0' ?}");
         __wybrez.fld_fml('ILZ','DISPLAY_FORMAT',"{? ~__wybrez.TREE || 'empty=1' || 'empty=0' ?}");
         __wybrez.fld_fml('ILR','DISPLAY_FORMAT',"{? ~__wybrez.TREE | __wybrez.ILR<=0 || 'empty=1' || 'empty=0' ?}");
         __wybrez.fld_fml('REP','DISPLAY_FORMAT',"{? ~__wybrez.TREE | __wybrez.REP<=0 || 'empty=1' || 'empty=0' ?}");
         __wybrez.fld_fml('TREA','DISPLAY_FORMAT',"{? ~__wybrez.TREE || 'empty=1' || 'empty=0' ?}");
         __wybrez.win_sel(_win_sel);
         __wybrez.win_fml(_win_sel,__wybrez,'ILR',,'ICON_BEFORE'
                  ,"{? __wybrez.ILR>0
                    || 'xwin16.png:61'
                    || ''
                    ?}");
         __wybrez.win_fml(_win_sel,__wybrez,'REP',,'ICON_BEFORE'
                  ,"{? __wybrez.REP>0
                    || 'xwin16.png:83'
                    || ''
                    ?}");

         __wybrez.TREE:=0;
         __wybrez.LAB:={? _zpoz || 'Pozycja zamówienia ' || 'Zamówienie ' ?}+ZK_N.SYM;
         __wybrez.POZ:=0;
         _korzen:=__wybrez.add();
         _oki:=0;

         {? _korzen
         || ZK_N.cntx_psh();
            ZK_P.cntx_psh();
            REZ.cntx_psh();
            {? ~_zpoz
            || _ok:=0;
               REZ.index('ZK_N');
               REZ.prefix(_refzkn);
               _ok:=REZ.first();
               ZK_P.index('TYPN');
               ZK_P.prefix('A','Z',_refzkn,1);
               {? _ok || _ok:=ZK_P.first() ?}
            || ZK_P.clear();
               _ok:=ZK_P.seek(_refzkp)
            ?};
            _blokad:=1;
            {? _ok
            || _oki:={? _b=null || exec('add_blk','zamsiw_nag',ZK_P.N) || 1 ?};
               {!
               |? {? ZK_P.REZ & ZK_P.ILP>0 & ~exec('czyRezRPrez','zamsiw_wspolne',ZK_P.ref())
                  || _dokl:=ZK_P.M().DOKL;
                     __wybrez.blank();
                     __wybrez.TREE:=_korzen;
                     __wybrez.LAB:=ZK_P.M().KTM+' - '+ZK_P.M().N;
                     __wybrez.RMAT:=$ZK_P.M;
                     __wybrez.NRP:=ZK_P.POZ;
                     __wybrez.NRK:=ZK_P.NR;
                     __wybrez.MAG:={? ZK_P.RMAG<>null || ZK_P.RMAG().SYM || '' ?};
                     __wybrez.KTO:=ZK_P.N().USR().KOD;
                     __wybrez.ILZ:=ZK_P.ILP;
                     __wybrez.ILR:=ZK_P.ILRB;
                     __wybrez.REP:=exec('iledowar','rezerwacje',ZK_P.ref(),date());
                     __wybrez.JM:=ZK_P.M().J().KOD;
                     __wybrez.REF:=$ZK_P.ref();
                     __wybrez.DOKL:=_dokl;
                     __wybrez.POZ:=1;
                     __wybrez.KHKOD:={? ZK_P.RODZ='Z' || ZK_P.N().KH().KOD || '' ?};
                     __wybrez.KHSKR:={? ZK_P.RODZ='Z' || ZK_P.N().KH().SKR || '' ?};
                     __wybrez.KHNAZ:={? ZK_P.RODZ='Z' || ZK_P.N().KH().NAZ || '' ?};
                     __wybrez.TREA:=ZK_P.DT;
                     __wybrez.ZLEC:={? ZK_P.RODZ='W' || ZK_P.ZL().SYM || '' ?};
                     __wybrez.WYDZ:={? ZK_P.RODZ='W' || ZK_P.WYD().KOD || '' ?};
                     __wybrez.RMAG:={? ZK_P.RMAG<>null || $ ZK_P.RMAG || 'null' ?};
                     __wybrez.OPIS:=ZK_P.N().T().T+' / '+ZK_P.N().SYM+' / '+ZK_P.N().KH().KOD+' / '+
                                    form(ZK_P.N().R,-4,0,'99')+ form(ZK_P.N().M,-2,0,'99');
                     _galaz:={? __wybrez.add(1) || __wybrez.ref() || null ?};
                     _mat:=ZK_P.M;
                     {? _galaz<>null
                     ||
::                      czesc z lista rezerwacji danej pozycji
                        _blokad:=exec('odsw_gal','rezerwacje',_galaz,_mat,_mag,0,ZK_P.N().USR,ZK_P.RODZ)
                     ?}
                  ?};
                  _blokad & {? _b=null || ZK_P.next() || 0 ?}
               !}
            ?};
            ZK_N.cntx_pop();
            ZK_P.cntx_pop();
            REZ.cntx_pop()
         ?};
         {? ~_blokad
         || FUN.info('W aktualnej chwili blokowane są pozycje zamówień(-ia),\n'
             'związane ze zmianą kolejki rezerwacji (indeks materiałowy, zamówienie).'@+
             '\nZmiana kolejności rezerwacji niemożliwa.'@)
         |? __wybrez.size()=1
         || FUN.info('Brak pozycji rezerwowanych.\n'@+'Zmiana kolejności rezerwacji niemożliwa.'@)
         || __wybrez.dnd_sel(__winroz,,'records.#zmkolrez',"exec('newkolej','rezerwacje')");
            exec('akt_inne','rezerwacje');
            __wybrez.select();
            __wybrez.dnd_sel(__winroz,,'records.#zmkolrez',"")
         ?};

         {? _b=null || exec('done_blk','zamsiw_nag') ?};

         VAR_DEL.delete('__wybrez','__winroz','__powod','__btnord')
      || FUN.info('Brak uprawnień do magazynów realizujących zamówienie.'@)
      ?}
   || FUN.info('Brak uprawnień do zmiany kolejności rezerwacji na zamówieniu.'@)
   ?}
?};
ZK_N.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();
BEER.MJSLOG:='';
echo()


\rekwybr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: podswietlenie rekordu dla tabeli __wybrez
::  OLD: \rekwybr/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
__wybrez.btn_sopt(__winroz,__btnord,{? __wybrez.POZ<2 || 'state=normal' || 'state=grayed' ?});
{? __wybrez.POZ=2 & __wybrez.ILR>0
|| '__wybrez#01#01'
|? __wybrez.POZ=2 & __wybrez.ILR=0
|| '__wybrez#01#02'
|? __wybrez.POZ=1 & __wybrez.ILR>0
|| '__wybrez#01#04'
|? __wybrez.POZ=1 & __wybrez.ILR=0
|| '__wybrez#01#05'
|| ''
?}


\akc_krez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: akceptacja kolejki rezerwacji
::  OLD: \akc_krez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__matakt');
__matakt:=tab_tmp(2,'REF','STRING[16]',''
           ,'NRK','INTEGER',''
           ,'ILR','REAL',''
           ,'ZKP','STRING[16]',''
           ,'ZKN','STRING[16]','');
_refods:=tab_tmp(1,'REF','INTEGER','');

_tab:=__wybrez.sel_aget();
__wybrez.sel_adel();
_pow:=1;
{? _tab.size()
||
:: usuwa z tabelki poziomy rozne od 1
   __wybrez.cntx_psh();
   _tab.clear();
   {? _tab.first()
   || {!
      |? {? (__wybrez.clear(); __wybrez.seek(_tab.REF,))
         || {? __wybrez.POZ=1
            || _tab.next()
            || _tab.del()
            ?}
         || _tab.del()
         ?}
      !}
   ?};
   __powod:='';
   _tab.clear();
   {? ~_tab.size()
   || FUN.info('Brak wśród zaznaczonych rekordów pozycji zamówienia.\n'@+
               'Zmiana kolejności rezerwacji niemożliwa.'@)
   |? _tab.first() & FUN.ask('Czy zmienić kolejność rezerwacji dla zaznaczonych pozycji zamówienia?'@)
     & (_pow:=exec('wprpowod','rezerwacje'))>0
   || do();
      {!
      |? {? (__wybrez.clear(); __wybrez.seek(_tab.REF,))
         || _nrk:=__wybrez.NRK;
            _ref:=__wybrez.ref();
            __wybrez.cntx_psh();
            __wybrez.clear();
            __wybrez.prefix(_ref);
            {? __wybrez.first() || exec('ordernew','rezerwacje',_ref,_nrk,__wybrez.NRK) ?};
            _refods.clear();
            {? ~_refods.find_key(#_ref)
            || _refods.blank(1);
               _refods.REF:=#_ref;
               _refods.add(1)
            ?};
            __wybrez.cntx_pop()
         ?};
         _tab.next()
      !};
      exec('akt_rezy','rezerwacje');
      _refods.clear(); {? _refods.first() || {! |? exec('odsw_one','rezerwacje',_refods.REF); _refods.next() !} ?};
      end()
   ?};
   __wybrez.cntx_pop()
|| _ok:=1;
   __powod:='';
   __wybrez.cntx_psh();
   {? (__wybrez.POZ=1 | (__wybrez.POZ=0 & (1+__wybrez.LAB)='P')) & __wybrez.INNE<1
   || FUN.info('Dana pozycja zamówienia jest pierwsza w kolejce rezerwacji\n'
       'lub brak innych rezerwacji dla danego indeksu materiałowego.\n\n'@+
       'Zmiana kolejności rezerwacji niemożliwa.'@)
   |? __wybrez.POZ=0 & __wybrez.INNE<1
   || FUN.info('Każda z pozycji zamówienia jest pierwsza w kolejce rezerwacji\n'
       'lub brak innych rezerwacji dla danego indeksu materiałowego.\n\n'@+
       'Zmiana kolejności rezerwacji niemożliwa.'@)
   |? __wybrez.POZ=1 & (_ok:=FUN.ask('Czy zmienić kolejność rezerwacji dla danej pozycji zamówienia?'@))
     & (_pow:=exec('wprpowod','rezerwacje'))>0
   || _nrk:=__wybrez.NRK;
      _ref:=__wybrez.ref();

      do();
      __wybrez.clear();
      __wybrez.prefix(_ref);
      {? __wybrez.first() || exec('ordernew','rezerwacje',_ref,_nrk,__wybrez.NRK) ?};
      exec('akt_rezy','rezerwacje');
      exec('odsw_one','rezerwacje',#_ref);
      end()
   |? __wybrez.POZ=0 & ({? (1+__wybrez.LAB)='P'
                        || _ok:=FUN.ask('Czy zmienić kolejność rezerwacji dla danej pozycji zamówienia?'@)
                        || _ok:=FUN.ask('Czy zmienić kolejność rezerwacji dla wszystkich pozycji zamówienia?'@)
                        ?})
     & (_pow:=exec('wprpowod','rezerwacje'))>0
   || _rzam:=__wybrez.ref();

      do();
      __wybrez.clear();
      __wybrez.prefix(_rzam);
      {? __wybrez.first()
      || {!
         |? _nrk:=__wybrez.NRK;
            _ref:=__wybrez.ref();
            __wybrez.cntx_psh();
            __wybrez.clear();
            __wybrez.prefix(_ref);
            {? __wybrez.first() || exec('ordernew','rezerwacje',_ref,_nrk,__wybrez.NRK) ?};
            __wybrez.cntx_pop();
            _refods.clear();
            {? ~_refods.find_key(#_ref)
            || _refods.blank(1);
               _refods.REF:=#_ref;
               _refods.add(1)
            ?};
            __wybrez.next()
         !}
      ?};
      exec('akt_rezy','rezerwacje');
      _refods.clear(); {? _refods.first() || {! |? exec('odsw_one','rezerwacje',_refods.REF); _refods.next() !} ?};
      end()

   |? _ok & ~_pow
   || FUN.info('Należy podać powód zmiany kolejności rezerwacji.'@)
   |? _ok
   || FUN.info('Zmiana kolejności rezerwacji jest możliwa wyłącznie dla pozycji zamówienia lub dla całego zamówienia.'@)
   ?};
   __wybrez.cntx_pop()
?};
obj_del(_refods);
VAR_DEL.delete('__matakt');
~~


\wprpowod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: podanie powodu
::   WY: 1-ok 0-nie
::  OLD: \wprpowod/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__rez');
__rez:={? BEER.ZK_N().T().R='Z' || exec('get','#params',3500,2,OPERATOR.USER)
       |? BEER.ZK_N().T().R='W' || exec('get','#params',3510,2,OPERATOR.USER)
       || ''
       ?};
BEER.PZM01:=BEER.PZM02:='';
BEER.win_edit('PZM');
BEER.efld_opt('PZM',{? __rez='B' || 'mark=0' || 'mark=1' ?},,'PZM01');
{? BEER.edit("{? form(BEER.PZM01)+form(BEER.PZM02)<>'' | __rez='B'
              || 1
              || FUN.info('Należy podać powód zmiany kolejności rezerwacji.'@);
                 0
              ?}")
|| __powod:=form(BEER.PZM01)+' '+form(BEER.PZM02)
|| __powod:=''
?};
undefine();
{? __rez='W' & __powod=''
|| _wyn:=0
|| _wyn:=1
?};
VAR_DEL.delete('__rez');
_wyn


\ordernew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zamiana w obrebie jednej galazki
::   WE: _a - ref galezi nadrzednej
::       _b - NRK które zmieniamy
::       _c - NRK na ktory zmieniamy
::       _d - ref galezi zmienianej
::   WY: 1-tak 0-bardzo nam przykro, ale niestety nie
::  OLD: \ordernew/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=4 || {? type_of(_d)<>7 || _d:=null ?} || _d:=null ?};

{? _b>_c
|| __wybrez.cntx_psh();
   __wybrez.clear();
   {? {? _d<>null || __wybrez.seek(_d) || __wybrez.seek(_a) ?}
   || _ilrdo:=__wybrez.REP;
      _ileroz:=0;
      _magdo:=__wybrez.RMAG;
      _refzkp:=exec('FindAndGet','#table','ZK_P',__wybrez.REF,,,null());
      _user:=exec('FindAndGet','#table','ZK_P',__wybrez.REF,,"N().USR",null());
      _opis:=__wybrez.OPIS
   ?};
   _zmien:=0;
   _newnrk:=_b;
   ZK_P.cntx_psh();
   REZ.cntx_psh();
   __wybrez.prefix(_a);
   {? __wybrez.first() & __wybrez.NRK<>_b & __wybrez.last()
   || {!
      |? _refwyb:=__wybrez.ref();
         _ok:=__wybrez.prev();

         __wybrez.cntx_psh();
         __wybrez.clear();
         {? __wybrez.seek(_refwyb)
         || {? __wybrez.NRK>=_c & __wybrez.NRK<_b & (ZK_P.clear; ZK_P.seek(__wybrez.REF))
            || _zmien:=1;
               _typ:={? ZK_P.RODZ='Z' || 4 || 10 ?};
               _ilrb:=__wybrez.ILR;
               exec('addhiszk','rezerwacje',__powod,__wybrez.OPIS);
               ZK_P.NR:=_newnrk;
               ZK_P.put(1);
               exec('admatzkp','rezerwacje',$ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N,$ZK_P.ref());
               _newnrk:=__wybrez.NRK;
               {? ~_ilrb | _ilrdo<=0 | (_magdo<>'null' & _magdo<>__wybrez.RMAG)
               || REZ.index('ZK_P');
                  REZ.prefix(ZK_P.ref());
                  {? REZ.first()
                  || {!
                     |? REZ.NRK:=REZ.ZK_P().NR;
                        REZ.put(1);
                        REZ.next()
                     !}
                  ?}
               || REZ.index('ZK_P');
                  REZ.prefix(ZK_P.ref());
                  {? REZ.first()
                  || {!
                     |? {? _ilrdo>0 & REZ.RODZ='B' & REZ.SC='' & exec('uprmgpow','magazyn_stan',REZ.MG,_typ,_user)
                        || _refrez:=REZ.ref();
                           _next:=REZ.next();
                           REZ.cntx_psh();
                           REZ.clear();
                           {? REZ.seek(_refrez)
                           || _rozp:=exec('bezw2war','rezerwacje',_refzkp,_ilrdo,_c);
                              _ilrdo-=_rozp;
                              _ileroz+=_rozp
                           ?};
                           REZ.cntx_pop();
                           REZ.get();
                           _next
                        || REZ.NRK:=REZ.ZK_P().NR;
                           REZ.put(1);
                           REZ.next()
                        ?}
                     !}
                  ?}
               ?}
            ?}
         ?};
         __wybrez.cntx_pop();
         _ok
      !};
      {? (ZK_P.clear(); ZK_P.seek(_refzkp)) & _zmien
      || _data:=date();
         exec('addhiszk','rezerwacje',__powod,_opis);
         ZK_P.NR:=_c;
         ZK_P.put(1);
         exec('admatzkp','rezerwacje',$ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N,$ZK_P.ref());
         REZ.index('ZK_P');
         REZ.prefix(ZK_P.ref());
         {? REZ.first()
         || {!
            |? {? REZ.RODZ='W' & REZ.ODDT>=_data & _data<=REZ.DODT
               || {? _ileroz>0
                  || {? REZ.ILR<=_ileroz
                     || _ileroz-=REZ.ILR;
                        REZ.del()
                     || REZ.ILR-=_ileroz;
                        REZ.NRK:=REZ.ZK_P().NR;
                        REZ.put(1);
                        _ileroz:=0
                     ?}
                  || REZ.NRK:=REZ.ZK_P().NR;
                     REZ.put(1)
                  ?}
               || REZ.NRK:=REZ.ZK_P().NR;
                  REZ.put(1)
               ?};
               REZ.next()
            !}
         ?}
      ?}
   ?};
   ZK_P.cntx_pop();
   REZ.cntx_pop();
   __wybrez.cntx_pop()
?};
~~


\odsw_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizuje dane galezi i ewentualnie podgalezi
::   WE: _a - ref galezi dla ktorej to robimy
::  OLD: \odsw_one/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
__wybrez.cntx_psh();
ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
__wybrez.clear();
{? __wybrez.seek(_a,) & (5+__wybrez.REF)='zkpoz' & (ZK_P.clear(); ZK_P.seek(__wybrez.REF,form(8+__wybrez.REF)))
|| __wybrez.NRK:=ZK_P.NR;
   __wybrez.ILZ:=ZK_P.ILP;
   __wybrez.ILR:=ZK_P.ILRB;
   __wybrez.REP:=exec('iledowar','rezerwacje',ZK_P.ref(),date());
   {? __wybrez.put(1)
   || _tree:=__wybrez.ref();
      __wybrez.clear();
      __wybrez.prefix(_tree);
      {? __wybrez.first()
      || _refods:=tab_tmp(1,'REF','INTEGER','');
         {!
         |? _refods.blank();
            _refods.REF:=#__wybrez.ref();
            _refods.add(1);
            __wybrez.next()
         !};
         {? _refods.first()
         || {!
            |? exec('odsw_one','rezerwacje',_refods.REF);
               _refods.next()
            !}
         ?};
         obj_del(_refods)
      ?}
   ?}
?};
__wybrez.cntx_pop();
ZK_N.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();
exec('akt_inne','rezerwacje');
~~


\iledowar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: oblicza ilość rezerwacji warunkowych wg daty i pozycji zamowienia
::   WE: _a - ref ZK_P
::       _b - data
::   WY: ilosc rezerwacji warunkowych
::  OLD: \iledowar/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
REZ.index('ZK_P');
REZ.prefix(_a,'W');
{? REZ.first()
|| {!
   |?
      {? REZ.ODDT<date()  || REZ.ODDT:=date(); REZ.put(1) ?};
      {? REZ.ODDT>=_b & _b<=REZ.DODT || _wyn+=REZ.ILR ?};
      REZ.next()
   !}
?};
_wyn


\akt_inne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizuje znacznik __wybrez.INNE
::  OLD: \akr_inne/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
__wybrez.cntx_psh();
__wybrez.clear();
__wybrez.prefix(0);
{? __wybrez.first()
|| {!
   |? _k0:=__wybrez.ref();
      _inno:=0;
      __wybrez.cntx_psh();
      __wybrez.clear();
      __wybrez.prefix(_k0);
      {? __wybrez.first()
      || {!
         |? _ref:=__wybrez.REF;
            _k1:=__wybrez.ref();
            __wybrez.cntx_psh();
            __wybrez.clear();
            __wybrez.prefix(_k1);
            _inne:=__wybrez.first() & __wybrez.size()>1 & __wybrez.REF<>_ref;
            __wybrez.cntx_pop();
            __wybrez.INNE:=_inne;
            __wybrez.put(1);
            _inno+=_inne;
            __wybrez.next()
         !}
      ?};
      __wybrez.cntx_pop();
      __wybrez.INNE:=_inno;
      __wybrez.put(1);
      __wybrez.next()
   !}
?};
__wybrez.cntx_pop();
~~


\odsw_gal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizuje dane galezi
::   WE: _a - ref galezi dla ktorej to robimy
::       _b - ref indeksu materialowego
::       _c - tabela uprawnien do magazynu
::       _d - czy aktualizowac dane pozycji zamowienia
::       _e - user
::       _f - typ zamowienia
::   WY: 1-zablokowano naglowki zamowien 0-nie zablokowano
::  OLD: \odsw_gal/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_mat:=_b;
_mag:=_c;
_ile:=obj_len(_mag);
{? _ile=1 & _mag[1]=null || _ile:=0 ?};

_blk:=1;

:: usuniecie starych zapisow
__wybrez.cntx_psh();
__wybrez.clear();
__wybrez.prefix(_a);
{? __wybrez.first() || {! |? __wybrez.del() !} ?};
__wybrez.cntx_pop();

:: wprowadzenie aktualnych zapisow
{? _ile
|| __wybrez.cntx_psh();
   ZK_N.cntx_psh();
   ZK_P.cntx_psh();
   REZ.cntx_psh();
   {! _i:=1.._ile
   |! ZK_P.index('AKT');
      ZK_P.prefix('A',_mag[_i],_mat,'Z',1);
      {? ZK_P.first()
      || {!
         |? {? ZK_P.REZ & ZK_P.ILP>0
            || _blk:=exec('add_blk','zamsiw_nag',ZK_P.N);
               __wybrez.clear();
               __wybrez.blank();
               __wybrez.TREE:=_a;
               __wybrez.LAB:=ZK_P.M().KTM+' - '+ZK_P.M().N;
               __wybrez.RMAT:=$ZK_P.M;
               __wybrez.NRK:=ZK_P.NR;
               __wybrez.NRP:=ZK_P.POZ;
               __wybrez.MAG:=ZK_P.N().SYM;
               __wybrez.KTO:=ZK_P.N().USR().KOD;
               __wybrez.ILZ:=ZK_P.ILP;
               __wybrez.ILR:=ZK_P.ILRB;
               __wybrez.REP:=exec('iledowar','rezerwacje',ZK_P.ref(),date());
               __wybrez.JM:=ZK_P.M().J().KOD;
               __wybrez.REF:=$ZK_P.ref();
               __wybrez.DOKL:=ZK_P.M().DOKL;
               __wybrez.POZ:=2;
               __wybrez.KHKOD:={? ZK_P.RODZ='Z' || ZK_P.N().KH().KOD || '' ?};
               __wybrez.KHSKR:={? ZK_P.RODZ='Z' || ZK_P.N().KH().SKR || '' ?};
               __wybrez.KHNAZ:={? ZK_P.RODZ='Z' || ZK_P.N().KH().NAZ || '' ?};
               __wybrez.TREA:=ZK_P.DT;
               __wybrez.ZLEC:={? ZK_P.RODZ='W' || ZK_P.ZL().SYM || '' ?};
               __wybrez.WYDZ:={? ZK_P.RODZ='W' || ZK_P.WYD().KOD || '' ?};
               __wybrez.RMAG:={? ZK_P.RMAG<>null || $ ZK_P.RMAG || 'null' ?};
               __wybrez.OPIS:=ZK_P.N().T().T+' / '+ZK_P.N().SYM+' / '+ZK_P.N().KH().KOD+' / '+
                              form(ZK_P.N().R,-4,0,'99')+ form(ZK_P.N().M,-2,0,'99');
               __wybrez.add(1)
            ?};
            _blk & ZK_P.next()
         !}
      ?}
   !};
   ZK_P.index('AKT');
   ZK_P.prefix('A',null,_mat,'Z',1);
   {? _blk & ZK_P.first()
   || {!
      |? {? exec('zawusupr','users',_e,ZK_P.N().USR,_f,ZK_P.RODZ) & ZK_P.REZ & ZK_P.ILP>0
         || _blk:=exec('add_blk','zamsiw_nag',ZK_P.N);
            __wybrez.clear();
            __wybrez.blank();
            __wybrez.TREE:=_a;
            __wybrez.LAB:=ZK_P.M().KTM+' - '+ZK_P.M().N;
            __wybrez.RMAT:=$ZK_P.M;
            __wybrez.NRK:=ZK_P.NR;
            __wybrez.NRP:=ZK_P.POZ;
            __wybrez.MAG:=ZK_P.N().SYM;
            __wybrez.KTO:=ZK_P.N().USR().KOD;
            __wybrez.ILZ:=ZK_P.ILP;
            __wybrez.ILR:=ZK_P.ILRB;
            __wybrez.REP:=exec('iledowar','rezerwacje',ZK_P.ref(),date());
            __wybrez.JM:=ZK_P.M().J().KOD;
            __wybrez.REF:=$ZK_P.ref();
            __wybrez.DOKL:=ZK_P.M().DOKL;
            __wybrez.POZ:=2;
            __wybrez.KHKOD:={? ZK_P.RODZ='Z' || ZK_P.N().KH().KOD || '' ?};
            __wybrez.KHSKR:={? ZK_P.RODZ='Z' || ZK_P.N().KH().SKR || '' ?};
            __wybrez.KHNAZ:={? ZK_P.RODZ='Z' || ZK_P.N().KH().NAZ || '' ?};
            __wybrez.TREA:=ZK_P.DT;
            __wybrez.ZLEC:={? ZK_P.RODZ='W' || ZK_P.ZL().SYM || '' ?};
            __wybrez.WYDZ:={? ZK_P.RODZ='W' || ZK_P.WYD().KOD || '' ?};
            __wybrez.OPIS:=ZK_P.N().T().T+' / '+ZK_P.N().SYM+' / '+ZK_P.N().KH().KOD+' / '+
                           form(ZK_P.N().R,-4,0,'99')+ form(ZK_P.N().M,-2,0,'99');
            __wybrez.add(1)
         ?};
         _blk & ZK_P.next()
      !}
   ?};
   __wybrez.cntx_pop();
   ZK_N.cntx_pop();
   ZK_P.cntx_pop();
   REZ.cntx_pop()
?};

:: aktualizacja aktualnej pozycji
{? _d
|| __wybrez.cntx_psh();
   ZK_N.cntx_psh();
   ZK_P.cntx_psh();
   REZ.cntx_psh();
   __wybrez.clear();
   {? __wybrez.seek(_a) & (ZK_P.clear(); ZK_P.seek(__wybrez.REF,form(8+__wybrez.REF)))
   || __wybrez.NRK:=ZK_P.NR;
      __wybrez.ILZ:=ZK_P.ILP;
      __wybrez.ILR:=ZK_P.ILRB;
      __wybrez.REP:=exec('iledowar','rezerwacje',ZK_P.ref(),date());
      __wybrez.put(1)
   ?};
   __wybrez.cntx_pop();
   ZK_N.cntx_pop();
   ZK_P.cntx_pop();
   REZ.cntx_pop()
?};
obj_del(_mag);
_wyn:=_blk;
_wyn


\newkolej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: utworzenie nowej kolejki
::   WE: [_a] - tryb 0(domyślnie) d&d, 1-akcja
::  OLD: \newkolej/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};

_ref:=null();
__wybrez.cntx_psh();
{? ~_tryb
||
:: rekordy do przeciagniecia
   _tab:=dnd_info('dropped_records');
:: na rekord
   _ref:=dnd_info('dest_record')
|| __wybrez.cntx_psh();
   _win_sel:=__wybrez.mk_sel('Wybierz miejsce w kolejce'@,'P',,'#wybkolrez',,,__wybrez.size(),1);
   __wybrez.win_fld(_win_sel,,'LAB',,,30,,1,'');
   __wybrez.win_fld(_win_sel,,'NRP',,,-4,,1,'Pozycja'@);
   __wybrez.win_fld(_win_sel,,'NRK',,,-4,,1,'Numer'@);
   __wybrez.win_fld(_win_sel,,'MAG',,,-10,,1,'Magazyn/Zamówienie'@);
   __wybrez.win_fld(_win_sel,,'KTO',,,-10,,1,'Kto rezerwował'@);
   {? BEER.ZK_N().T().R='Z'
   || __wybrez.win_fld(_win_sel,,'KHSKR',,,10,,1,'Kontrahent'@)
   || __wybrez.win_fld(_win_sel,,'ZLEC',,,10,,1,'Zlecenie'@)
   ?};
   __wybrez.win_fld(_win_sel,,'TREA',,,-10,,1,'Termin realizacji'@);
   __wybrez.win_fld(_win_sel,,'ILZ',,,-11,3,1,'Ilość zamawiana'@);
   __wybrez.win_fld(_win_sel,,'ILR',,,-11,3,,'Ilość rezerwowana'@);
   __wybrez.win_fld(_win_sel,,'REP',,,-11,3,,'Do rezerwacji'@);

   __wybrez.win_act(_win_sel,0,'Formuła','&Wybierz'@@,,'Wybór pozycji'@,"sel_exit()",,1,,,,'W');
   __wybrez.win_act(_win_sel,0,'Rekord',,,,"exec('rekprzed','color','__wybrez#01')",,0);
   __wybrez.win_act(_win_sel,0,'Szukaj');
   __wybrez.tr_fml(_win_sel,,"1");
   __wybrez.win_sel(_win_sel);
   {? __wybrez.last & __wybrez.select() || _ref:=__wybrez.ref() ?};
   __wybrez.cntx_pop();
   {? __wybrez.sel_size()
   || _tab:=__wybrez.sel_aget();
      __wybrez.sel_adel()
   || _tab:=tab_tmp(1,'REF','INTEGER','');
      _tab.blank();
      _tab.REF:=#__wybrez.ref();
      _tab.add(1)
   ?}
?};

_galaz:=#__wybrez.ref();
_numer:=0;
_last:=0;
_reflst:=0;
_mat:=null;
__powod:='';
_pow:=1;

_wyn:=0;
_num:=tab_tmp(1,'NUM','INTEGER','','REF','INTEGER','');

:: sprawdzenie poprawnosci zaznaczenie - tylko rekordy z POZ=2 w zakresie danej galezi
__wybrez.clear();
{? _ref<>null() & __wybrez.seek(_ref)
|| {? __wybrez.POZ=2
   || _galaz:=__wybrez.TREE;
      _numer:=__wybrez.NRK
   ?};
   _num.clear();
   _num.blank();
   _num.NUM:=__wybrez.NRK;
   _num.REF:=#__wybrez.ref();
   _num.add(1)
?};
_error:=0;

{? _numer>0
|| _tab.clear();
   {? _tab.first()
   || {!
      |? {? (__wybrez.clear(); __wybrez.seek(_tab.REF,))
         || _wyn:=__wybrez.POZ=2 & __wybrez.TREE=_galaz;
            _num.clear();
            {? ~_num.find_key(__wybrez.NRK)
            || _num.blank();
               _num.NUM:=__wybrez.NRK;
               _num.REF:=#__wybrez.ref();
               _num.add(1);
               _error:=_num.NUM<_numer
            ?}
         ?};
         _wyn & ~_error & _tab.next()
      !}
   ?}
|| _wyn:=0
?};

{? _error
|| FUN.info('Zmiana kolejności rezerwacji dla rezerwowanych pozycji zamówień\n'
    'dostępna wyłącznie wtedy jeżeli numery zmieniane są większe od wskazanego.'@)
|? ~_wyn
|| FUN.info('Zmiana kolejności rezerwacj dla rezerwowanych pozycji zamówień\n'
    'dostępna wyłącznie w zakresie danej "gałęzi" z uwzględnieniem kolejności rezerwacji.'@)
|? _num.clear(); _num.size<=1
|| FUN.info('Ażeby zmienić kolejność należy wybrać (wskazać) co najmniej dwie różne rezerwacje.'@)
|? (_ok:=FUN.ask('Czy zmienić kolejność rezerwacji?'@)) & (_pow:=exec('wprpowod','rezerwacje'))>0
|| do();
   _num.clear();
   {? _num.first()
   || __wybrez.clear();
      {? __wybrez.seek(_num.REF,)
      || _narez:=__wybrez.ref();
         _nanrk:=__wybrez.NRK
      ?};
      _num.del()
   ?};
   _num.clear();
   {? _num.last()
   || {!
      |? __wybrez.clear();
         {? __wybrez.seek(_num.REF,)
         || VAR_DEL.delete('__matakt');
            __matakt:=tab_tmp(2,'REF','STRING[16]',''
                       ,'NRK','INTEGER',''
                       ,'ILR','REAL',''
                       ,'ZKP','STRING[16]',''
                       ,'ZKN','STRING[16]','');
            _bfrez:=__wybrez.ref();
            exec('ordernew','rezerwacje',_galaz,__wybrez.NRK,_nanrk,__wybrez.ref());
            exec('akt_rezy','rezerwacje');
            exec('odsw_one','rezerwacje',_galaz);
            VAR_DEL.delete('__matakt');
            __wybrez.clear();
            {? __wybrez.seek(_bfrez)
            || _narez:=__wybrez.ref();
               _nanrk:=__wybrez.NRK
            ?}
         ?};
         _num.prev()
      !}
   ?};
   end()
|? _ok & ~_pow
|| FUN.info('Należy podać powód zmiany kolejności rezerwacji.'@)
?};
obj_del(_num);
__wybrez.cntx_pop();
__wybrez.seek(_galaz,)


\addhiszk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: dodanie do historii zmiany kolejnosci rezerwacji
::   WE: _a - opis powodu
::       [_b] - opis pozycji zamowienia - domyslnie ''
::   WY: 1-dodano 0-nie dodano
::  OLD: \addhiszk/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};

{? _b=''
|| _b:=ZK_P.N().T().T+' / '+ZK_P.N().SYM+' / '+ZK_P.N().KH().KOD+' / '+form(ZK_P.N().R,-4,0,'99')+
       form(ZK_P.N().M,-2,0,'99')
?};

HISZKP.win_edit('RED');
HISZKP.clear();
HISZKP.blank();
HISZKP.ZAM:=_b;
HISZKP.POZ:=ZK_P.POZ;
HISZKP.US_OLD:=ZK_P.US;
HISZKP.US_NEW:=OPERATOR.USER;
HISZKP.REZ:={? ZK_P.RODZ='Z' || exec('get','#params',3500,2,OPERATOR.USER)
            |? ZK_P.RODZ='W' || exec('get','#params',3510,2,OPERATOR.USER)
            || ''
            ?};
HISZKP.M:=ZK_P.M;
HISZKP.ILR:=ZK_P.ILRB-ZK_P.ILRD;
HISZKP.OPIS:=_a;
_wyn:=HISZKP.add(1);
_wyn


\bezw2war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przepisuje rezerwacje bezwarunkowa na inna pozycje zamowienia
::   WE: _a - ref nowego ZK_P
::       _b - ilosc do przepisania
::       _c - ZK_P.NR
::   WY: ilosc przepisana
::  OLD: \bezw2war/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_ilrdo:=_b;

_ilerez:=REZ.ILR;
_refrez:=REZ.ref();
_oldzkp:=REZ.ZK_P;
_oldnum:=REZ.ZK_P().NR;
_magrez:=REZ.MG;
_olddkc:={? REZ.DK_C<>null || REZ.DK_C || REZ.ZK_P().DK_C ?};
_bezrez:=null;

{? _ilerez=_ilrdo
|| {? ~exec('update','rezerwacje','ZK_P',_a,REZ.MG,REZ.M,_ilrdo,,'B',,4,_c)
   || undo()
   || {? ~exec('update','rezerwacje','ZK_P',_oldzkp,REZ.MG,REZ.M,_ilrdo,,'W',,4,_oldnum)
      || undo()
      || REZ.del();
         _wyn:=_ilrdo
      ?}
   ?}
|? _ilerez>_ilrdo
|| REZ.ILR-=_ilrdo;
   REZ.NRK:=REZ.ZK_P().NR;
   {? ~REZ.put(1) || undo() ?};
   {? ~exec('update','rezerwacje','ZK_P',_a,REZ.MG,REZ.M,_ilrdo,,'B',,4,_c)
   || undo()
   || {? ~exec('update','rezerwacje','ZK_P',_oldzkp,REZ.MG,REZ.M,_ilrdo,,'W',,4,_oldnum)
      || undo()
      || _wyn:=_ilrdo
      ?}
   ?}
|| {? ~exec('update','rezerwacje','ZK_P',_a,REZ.MG,REZ.M,_ilerez,,'B',,4,_c)
   || undo()
   || {? ~exec('update','rezerwacje','ZK_P',_oldzkp,REZ.MG,REZ.M,_ilerez,,'W',,4,_oldnum)
      || undo()
      || REZ.del();
         _wyn:=_ilerez
      ?}
   ?}
?};
_wyn


\buf_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wypelnia tabele aktualnymi rezerwacjami na pozycjach zamówienia
::   WE: _a - ref ZK_N-a
::  OLD: \buf_rez/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
REZ.index('ZK_N');
REZ.prefix(_a);
{? REZ.first()
|| {!
   |? _ref:=REZ.ref();
      _ok:=REZ.next();
      REZ.cntx_psh();
      REZ.clear();
      {? REZ.seek(_ref) & REZ.RODZ='B' & (';DAPZ'*REZ.M().IDMOB)>1
      || __bufrez.clear();
         __bufrez.blank();
         __bufrez.ZKP:=$REZ.ZK_P;
         __bufrez.MAT:=$REZ.M;
         __bufrez.ODD:=REZ.ODDT;
         __bufrez.DOD:=REZ.DODT;
         __bufrez.ILR:=REZ.ILR;
         __bufrez.ILW:=0;
         __bufrez.add(1);
         ZK_P.clear();
         {? ZK_P.seek(REZ.ZK_P)
         || ZK_P.ILRB-=REZ.ILR;
            ZK_P.DOR+=REZ.ILR;
            ZK_P.put(1)
         ?};
         REZ.del()
      ?};
      REZ.cntx_pop();
      _ok
   !}
?};
ZK_N.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();
~~


\uzup_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: rezerwuje (uzupelnia rezerwacje) do podanej ilosci pozycje ZK_P dla danej pozycji zamowienia
::   WE: _a - ref SQL ZK_P
::       _b - ilosc do zarezerwowania
::       _c - kod identyfikacyjny
::       [_d] - pomijanie wydan z kompletacji 0-nie(domyslnie) 1-tak
::       [_e] - magazyn
::       [_f] - termin ważności
::       [_g] - wg GS1
::   WY: ilosc bez rezerwacji
::  OLD: \uzup_rez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
{? _>=5 || {? type_of(_e)<>7 || _e:=null() ?} || _e:=null() ?};
{? _>=6 || {? type_of(_f)<>4 || _f:=date(0,0,0) ?} || _f:=date(0,0,0) ?};
_gs1:={? var_pres('_g')=type_of('') & (+_g)=16 || _g || '' ?};
_noupd:=(+_gs1)=16;

_wyn:=_b;
ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
ZK_P.clear();
{? ZK_P.seek(_a,form(8+_a))
|| _bezrez:=ZK_P.ILP-ZK_P.ILRB;
   _dorez:=_b;
   _iledor:={? (_c<>'xxxxx' & _c<>'') | _noupd
            || _b
            |? ZK_P.ILRB>=_b
            || 0
            |? _b>=ZK_P.ILP
            || ZK_P.ILP-ZK_P.ILRB
            || _b-ZK_P.ILRB
            ?};
   {? _c='xxxxx' || _c:='xxxx' ?};
   {? _iledor>0 & (_c<>'xxxx' & _c<>'')
   || exec('rozp_sce','rezerwacje',__refrea,{? _c='xxxx' || '' || _c ?},_iledor,_e,_f)
   |? _iledor>0
   || exec('rozp_rez','rezerwacje',__refrea,,_iledor,{? ZK_P.REZ || 1 || -1 ?},,_d,,_e)
   ?};
   REZ.index('ZK_P');
   REZ.prefix(ZK_P.ref(),'B');
   {? REZ.last()
   ||
::    sprawdzamy czy sa rezerwacje wg dostaw
      _czydst:=0;
      _allrez:=0;
      {! |? {? REZ.SC<>'' || _czydst+=REZ.ILR ?}; _allrez+=REZ.ILR; REZ.prev() !};
      {? _czydst>0 || _petla:=1 || _petla:=0 ?};
      {? REZ.first()
      || _refzkrp:=null;
         _refzksc:=null;
         {!
         |? {!
            |? {? {? _petla=1 || REZ.SC<>'' || REZ.SC='' ?} & REZ.ILR>0
                & exec('matnamag','zamsiw_wspolne',REZ.M,REZ.MG) & ~exec('czyinw_a','magazyn_inw',REZ.MG)
                & {? _c<>'xxxx' & _c<>'' & REZ.SC<>'' || exec('FindAndGet','#table',DK,REZ.SC,,"SCEAN",'')=_c || 1 ?}
               || _dorea:={? REZ.ILR>_dorez || _dorez || REZ.ILR ?};
                  _dorez-=_dorea;
                  _wyn-=_dorea;
                  exec('one_prea','zamsiw_rea',null,ZK_P.ref(),_dorea,REZ.MG,ZK_P.TOP,__refrea,null,1,,-1
                   ,REZ.ref(),0,_noupd,_gs1)
               ?};
               _dorez>0 & REZ.next()
            !};
            _petla-=1;
            REZ.first();
            _petla>=0 & _dorez>0
         !}
      ?}
   ?}
?};
ZK_N.cntx_pop();
REZ.cntx_pop();
ZK_P.cntx_pop();
_wyn


\rozp_sce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: rozpisuje rezerwacje wg kodow identyfikacyjnych dostawy
::   WE: _a - id realizacji
::       _b - kod identyfikacyjny
::       _c - ilosc do rozpisania
::       [_d] - magazyn domyślnie ZK_P.RMAG
::       [_e] - termin ważności
::  OLD: \rozp_sce/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_parmag:={? var_pres('_d')=type_of(null()) || _d || null() ?};


ZK_N.cntx_psh();
ZK_P.cntx_psh();

_znb:=_znw:=_zbb:=_zbz:='N';
_ilrb:=_ilrw:=_ilrd:=_ilra:=0;

_ildo:=_c;
_rmag:={? _parmag=null() || ZK_P.RMAG || _parmag ?};
_dsttw:=ZK_P.M().SETW='P';
_twdst:={? var_pres('_e')=type_of(date(0,0,0)) || _e || date(0,0,0) ?};

:: sprawdzenie ile juz rozpisano
_ilbez:=0;

REZ.index('ZK_P');
REZ.prefix(ZK_P.ref());
{? REZ.first()
|| {!
   |? {? REZ.RODZ='B' & REZ.SC<>'' & exec('FindAndGet','#table',DK,REZ.SC,,"SCEAN",'')=_b & REZ.ILR>0
       & (~_dsttw | exec('FindAndGet','#table',DK,REZ.SC,,"TW",date(0,0,0))=_twdst)
      || {? _ildo>=REZ.ILR
         || _ildo-=REZ.ILR
         || _ildo:=0
         ?}
      ?};
      REZ.next()
   !}
?};

:: rozpisujemy to co pozostalo w szczegolnosci nowa rezerwacja
{? _ildo>0
|| _fifo:=exec('FindAndGet','#table',MG,_rmag,,"SP_IDMOB='F'",0);
   _mag:=_rmag;
   _mat:=ZK_P.M;
   exec('sc_tymczas','magazyn_stan',_mag,_mat,'T',,,,,_b);
   _ind:=__sc.ndx_tmp('',,'D',,,'NDK',,,'RDK',,);
   __sc.index(_ind);
   {? {? _fifo || __sc.first() || __sc.last() ?}
   || exec('obl_stan','magazyn_stan',_mat,1,_mag);
      _mgd:=exec('FindAndGet','#table',MG,_mag,,"(1+TYP)='D'",0);
      {!
      |? {? ~_dsttw | __sc.TW=_twdst
         || _ilenasc:=exec('obl_stsc','magazyn_stan',__sc.RDK,__sc.NDK,_mag,_mat);
            _scsql:=form(__sc.NDK,8)+(-(('0000000'+BB.hex(__sc.RDK))+8));
            {? _ilenasc>0 & __sc.SCEAN=_b & _mgd & exec('FindAndGet','#table',STATS,__sc.STATS,,"KIND='Z'",0)
            || {? _ilenasc>=_ildo
               || exec('update','rezerwacje','ZK_P',ZK_P.ref(),_mag,ZK_P.M,_ildo,_scsql,'B',,2,ZK_P.NR,_a);
                  _ildo:=0
               || exec('update','rezerwacje','ZK_P',ZK_P.ref(),_mag,ZK_P.M,_ilenasc,_scsql,'B',,2,ZK_P.NR,_a);
                  _ildo-=_ilenasc
               ?}
            ?}
         ?};
         _ildo>0 & {? _fifo || __sc.next() || __sc.prev() ?}
      !}
   ?};
   __sc.ndx_drop(_ind)
?};
:: aktualizacja znacznikow na ZK_P
exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
ZK_P.get();
exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,0,$ZK_P.N);

ZK_N.cntx_pop();
ZK_P.cntx_pop();
~~


\unbufrez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przywraca poprzednie rezerwacje wg poprzedniej tabelki na pozycjach zamówienia
::   WE: _a - ref ZK_N-a
::  OLd: \unbufrez/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
__bufrez.clear();
{? __bufrez.first()
|| {!
   |? {? __bufrez.ILR>__bufrez.ILW & (ZK_P.clear(); ZK_P.seek(__bufrez.ZKP))
      || ZK_P.REZ:=1;
         ZK_P.put(1);
         exec('update','rezerwacje','ZK_P',ZK_P.ref(),ZK_P.RMAG,ZK_P.M,__bufrez.ILR-__bufrez.ILW,,'B',,2,ZK_P.NR
          ,,,,,,__bufrez.ODD,__bufrez.DOD)
      ?};
      __bufrez.next()
   !}
?};
ZK_N.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();
~~


\Rez2StnDostMg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: sprawdza stan dostępny magazynów wg rezerwacji dla pozycji zamówienia
::   WE: _a - ref ZK_P
::   WY: stan
::  OLD: \Rez2StnDostMg/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_mag:=tab_tmp(1,'MAG','STRING[16]','');
REZ.cntx_psh();
REZ.index('ZK_P');
REZ.prefix(_a,'B');
{? REZ.first()
|| {!
   |? {? (_mag.clear(); ~_mag.find_key($REZ.MG))
      || _wyn+=exec('FindInSet','#table','SM','SM',REZ.M,REZ.MG,"SM.SD",,,0);
         _mag.blank();
         _mag.MAG:=$REZ.MG;
         _mag.add(1)
      ?};
      REZ.next()
   !}
?};
REZ.cntx_pop();
obj_del(_mag);
_wyn


\pr_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: przed edycją pola kontrahent dla rezerwacji
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_wyn:=REZ.TYP='T';
_wyn


\realOrdMg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.02]
:: OPIS: ustawienie realizacji wg kolejki magazynów
::   WE: _a - ref SQL magazynu
::   WY: ilość do realizacji dla magazynu
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
{? __zknrea.TREE<>0 & (ZK_RP.clear(); ZK_RP.seek(__zknrea.REF))
|| _ord:=tab_tmp(2,'LP','INTEGER','','MG','STRING[16]','','REZ','REAL','','REA','REAL','');
   {? __zknrea.NAD
   || _doreal:=0;
      __zknrea.cntx_psh();
      __zknrea.clear();
      __zknrea.prefix(__zknrea.ref());
      {? __zknrea.first()
      || {!
         |? {? __zknrea.DOST & __zknrea.MAG=exec('FindAndGet','#table',MG,_a,,"SYM",'')
            || _doreal+=__zknrea.RES
            |? ~__zknrea.DOST
            || _doreal+=__zknrea.RES
            ?};
            __zknrea.next()
         !}
      ?};
      __zknrea.cntx_pop()
   || _doreal:=__zknrea.RES
   ?};
   _zkp:=ZK_RP.P;
   _us:=ZK_RP.P().N().US;
   {? ZK_RP.P().RODZ='Z'
   || _typupr:={? exec('jakieupr','zamsiw_wspolne',0,_us) || 2 || 4 ?}
   || _typupr:={? exec('jakieupr','zamsiw_wspolne',1,_us) || 9 || 10 ?}
   ?};
   BUFMG.cntx_psh();
   BUFMG.index('US');
   BUFMG.prefix(_us,_typupr);
   {? BUFMG.first()
   || {!
      |? _ord.clear();
         _ord.blank();
         __kolmag.clear();
         _ord.LP:={? __kolmag.find_key($__zknrea.ref(),$BUFMG.MG) || __kolmag.NRK || BUFMG.NRK ?};
         _ord.MG:=$BUFMG.MG;
         _ord.clear();
         _ord.prefix(_ord.LP,_ord.MG,);
         {? ~_ord.first()
         || _ord.REZ:=exec('ilrPlusZK_P','zamsiw_rea',_zkp,__refrea,'',$BUFMG.MG,'N',1,1);
            _ord.REA:=0;
            _ord.add(1)
         ?};
         BUFMG.next()
      !}
   ?};
   BUFMG.cntx_pop();
   _ord.clear();
   {? _ord.first()
   || {!
      |? {? _ord.REZ>=_doreal
         || _ord.REA:=_doreal;
            _ord.put(1);
            _doreal:=0
         |? _ord.REZ
         || _ord.REA:=_ord.REZ;
            _ord.put(1);
            _doreal-=_ord.REZ
         ?};
         {? _ord.MG=_a
         || _res:=_ord.REA;
            0
         || _doreal>0 & _ord.next()
         ?}
      !}
   ?};
   obj_del(_ord)
?};
_res


\addWrez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zwiększa automatyczne rezerwacje warunkowe
::   WE: _a - o ile zwiększyć
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh();
ZK_P.cntx_psh();
_zlim:=BEER.REZ_ZLIM;
REZ.cntx_psh();
{? _zlim<>2
|| {? _zlim=1
   || REZ.index('ZLIMA');
      REZ.prefix(__zkpref,'W',1)
   || {? BEER.OKZKP<>0
      || REZ.index('ZK_PA');
         REZ.prefix(ZK_P.ref(),'W',1)
      || REZ.index('ZK_NA');
         REZ.prefix(__zkpnag,__zkppoz,'W',1)
      ?}
   ?};
   {? REZ.first() || REZ.ILR+=_a; REZ.put(1) ?}
?};
ZK_N.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();
~~


\rez_pozy_tr_zl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: rezerwuje pozycje na dyspozycji w magzynie
::   WE: [_a] - jedna z opcji do ask (jezeli podana brak komunikatow) dla 0 i -1
::              1 - biezaca pozycja
::              2 - Rezerwuj wszystkie
::              3 - Anuluj wszystkie
::              5 - rozpisz ponownie wg całej ilości pozostałej
::              6 - usuniecie rezerwacji (bez rezerwacji wg dostaw) i bez likwidacji znacznika rezerwacji
::       [_b] - czy usuwac wg dostaw 0-nie(domyslnie) 1-tak 2-nie usuwac i nie pytac
::       [_c] - czy zapisywac i odtwarzac informacje o statusach zamowienia - 1-tak(domyslnie) 0-nie
::       [_d] - czy usuwac zapisy o rezerwacji (T/N) [T - domyslnie]
::       [_e] - czy kompletacja wysylki - domyslnie 0-nie 1-tak
::       [_f] - 0-bez pytania 1-z pytaniem (domyslnie)
::  OLD: \rez_pozy/rezerw.fml
::       \rez_pozy/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?}  || _a:=0  ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?}  || _b:=0  ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=1 ?}  || _c:=1  ?};
{? _>=4 || {? type_of(_d)<>2 || _d:='T' ?} || _d:='T' ?};
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};
{? _>=6 || {? type_of(_f)<>1 || _f:=1 ?} || _f:=1 ?};

exec('rez_pozy','rezerwacje',_a,_b,_c,_d,_e,_f,1);
~~


\disp_rez_tr_zl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wyswietlanie zarezerwonanych dostaw dla pozycji zamowienia - dyspozycji w magazynie
::----------------------------------------------------------------------------------------------------------------------
_uid:=TR_ZL.uidref();
{? TR_ZL.POZ_REF<>''
|| exec('opentr_psh','open_tab');
   exec('openz','open_tab',form(TR_ZL.POZ_REF-8)+3);
   ZK_P.prefix();
   {? ZK_P.seek(TR_ZL.POZ_REF)
   || exec('disp_rez','rezerwacje');
      exec('aktILRtr_zl','transport_zlec',_uid)
   ?};
   exec('opentr_pop','open_tab')
?};
~~


\REZtr_nzl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: zwraca ilość rezerwacji pod pozycją zamówienia dla dyspozycji w magazynie
::   WE: _a - ZK_P.ref()
::       _b - TR_NZL.ref()
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_tr_nzl:=$_b;
TR_NZL.cntx_psh();
REZ.cntx_psh();
REZ.index('ZK_P');
REZ.prefix(_a,'B');
{? REZ.first()
|| {!
   |? {? REZ.TR_ZL<>'' & exec('FindAndGet','#table',TR_ZL,REZ.TR_ZL,,"$TR_NZL",'')=_tr_nzl
      || _res+=REZ.ILR
      ?};
      REZ.next()
   !}
?};
REZ.cntx_pop();
TR_NZL.cntx_pop();
_res


\rp_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: nadaje znacznik REZ.RP_REZ
::   WE: _a - typ rezerwacji
::       _b - rodzaj rezerwacji
::       _c - wskazanie na zlecenie
::       _d - wskazanie na ZLIM
::   WY: 'N' (domyślna wartość) lub 'T'
::----------------------------------------------------------------------------------------------------------------------
_res:='N';
 _typ:={? var_pres('_a')=type_of('') || _a || '' ?};
_rodz:={? var_pres('_b')=type_of('') || _b || 'B' ?};
  _zl:={? var_pres('_c')=type_of(null()) || _c || null() ?};
_zlim:={? var_pres('_d')=type_of(null()) || _d || null() ?};

:: ewentualne nadanie znacznika dla pozycji zamówień ze zleceniami i dla rezerwacji warunkowych
{? (';ZK_N;ZK_P'*_typ)>1 & _rodz='W' & _zl<>null()
|| _nozl:=0;
   {? _zlim<>null()
   || _nozl:=exec('FindAndGet','#table',ZLIM,_zlim,,
              "{? ZLIM.RTMAT<>''
               || exec('FindInSet','#table','ZL','RTMATSRC',ZLIM.ZLEC().UNRZL,ZLIM.RTMAT)=null()
               || 0
               ?}",0)
   ?};

   _res:={? ~_nozl
         || exec('FindAndGet','#table',ZL,_zl,,
             "{? RP_REZ='N' || {? RODZAJ='P' & NRNZL=0
                               || 'N'
                               || _res:=TYP().RP_REZ;
                                  {? NRNZL<>0
                                  || cntx_psh();
                                     index('UNRZL');
                                     prefix(NRNZL);
                                     {? first() & RODZAJ='N' & NRNZL=0 || _res:='N' ?};
                                     cntx_pop()
                                  ?};
                                  _res
                               ?}
              |? RP_REZ='Z' || 'T'
              || 'N'
              ?}",'N')
         || 'N'
         ?}
?};
_res


\is_rp_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: sprawdza RP_REZ
::   WE: _a - ZL.ref()
::       _b - M.ref()
::   WY: 'N' (domyślna wartość) lub 'T'
::----------------------------------------------------------------------------------------------------------------------
 _res:='N';
  _zl:=_a;
 _mat:=exec('FindAndGet','#table',M,_b,,,null());
_nrnzl:=exec('FindAndGet','#table',ZL,_zl,,"NRNZL",0);

{? _mat<>null() & _nrnzl<>0
|| _pod:=0;
   ZL.cntx_psh();
   ZL.index('NRNZL');
   ZL.prefix(_nrnzl);
   {? ZL.first() & ZL.find_tab('first','KTM',,'=',_mat)
   || {!
      |? _pod:=~(ZL.RODZAJ='N' | ZL.RP<>'T');
         ~_pod & ZL.find_tab('next','KTM',,'=',_mat)
      !}
   ?};
   ZL.cntx_pop();
   {? _pod
   || _res:=exec('FindAndGet','#table',ZL,_zl,,"{? RP_REZ='N' || TYP().RP_REZ |? RP_REZ='Z' || 'T' || 'N' ?}",'N')
   ?}
?};
_res


\delreza
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: usuwa rezerwacje tymczasowa i z zamówień oraz aktualizuje status
::----------------------------------------------------------------------------------------------------------------------
REZ.cntx_psh();
SM.cntx_psh();

_tab:=REZ.sel_aget();
REZ.sel_adel();

VAR_DEL.delete('__matakt');
__matakt:=tab_tmp(2
   ,'REF','STRING[16]',''
   ,'NRK','INTEGER',''
   ,'ILR','REAL',''
   ,'ZKP','STRING[16]',''
   ,'ZKN','STRING[16]','');

_del:=0;
{? _tab.size()
|| {? _tab.first() & FUN.ask('Czy usunąć zaznaczone rezerwacje?'@)
   || do();
      {!
      |? REZ.cntx_psh();
         {? (REZ.clear(); REZ.seek(_tab.REF,))
         || _del:=1;
            exec('admatzkp','rezerwacje',$REZ.M,REZ.NRK,REZ.ILR,$REZ.ZK_N,$REZ.ZK_P);
            REZ.del()
         ?};
         REZ.cntx_pop();
         _tab.next()
      !};
      end()
   ?}
|| {? FUN.ask('Czy usunąć daną rezerwację?'@)
   || _del:=1;
      exec('admatzkp','rezerwacje',$REZ.M,REZ.NRK,REZ.ILR,$REZ.ZK_N,$REZ.ZK_P);
      do();
      REZ.del();
      end()
   ?}
?};
REZ.cntx_pop();
SM.cntx_pop();
{? _del
|| exec('akt_rezy','rezerwacje');
   exec('arezREZ','faktury_wspolne',1)
?};
VAR_DEL.delete('__matakt');
''


\czyuprREZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Sprawdza uprawnienia do rezerwacji
::   WE: _a - użytkownik
::       _b - materiał
::       _c - -1-wycofanie 0-zarezerwowanie
::       _d - użytkownik zamówienia
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_usr:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_mat:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_del:={? var_pres('_c')=type_of(0) || _c=-1 || 0 ?};
_usz:={? var_pres('_d')=type_of(null()) || _d || null() ?};

{? _usr=_usz
|| _res:=1
|? _usr<>null()
|| _isg:=0;
   _mgr:={? _mat<>null() || exec('FindAndGet','#table',M,_mat,,"MGR",null()) || null() ?};
   USERREZ.cntx_psh();
   USERREZ.index('UNIK');
   USERREZ.prefix(_usr);
   {? USERREZ.first()
   || {!
      |? _isg+=USERREZ.MGR<>null();
         {? _del & USERREZ.MGR=null()       || _res:=USERREZ.DEL='T'
         |? ~_del & _mgr<>null() & USERREZ.MGR=_mgr || _res:=1
         ?};
         ~_res & USERREZ.next()
      !};
      {? ~_res & ~_del & ~_isg || _res:=1 ?}
   || _res:=1
   ?};
   USERREZ.cntx_pop()
?};
_res


\cleanSESID
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Czyści zapisy o sesji w rezerwacjach
::   WY: 1-wyczyszczone 0-nie do końca-coś się nie udało
::----------------------------------------------------------------------------------------------------------------------
_sesid:='T'+SYSLOG.ses_id();
_res:=1;
REZ.cntx_psh();
REZ.index('SESID');
REZ.prefix(_sesid,);
{? REZ.first()
|| {!
   |? _ref:=REZ.ref(); _next:=REZ.next();
      REZ.cntx_psh();
      REZ.prefix();
      {? REZ.seek(_ref)
      || REZ.SESID:='';
         {? ~REZ.put(1) || _res:=0 ?}
      ?};
      REZ.cntx_pop();
      _next
   !}
?};
REZ.cntx_pop();
_res


\pr_mrez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: przed redakcja pola REZ.M
::----------------------------------------------------------------------------------------------------------------------
{? BEER.REZ_ZLIM=2 & -menu_txt()='dołącz'
|| exec('slo_m_ok','material','T',0,,'W');
   ZAKR.R_KOMP:='T';
   POMOC.RODZ:='T';
   ZAKR.MATU:='T';
   HELP.REFMAT:=REZ.M;
   1
|| 0
?}


\po_mrez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: po redakcji pola REZ.M
::----------------------------------------------------------------------------------------------------------------------
{? BEER.REZ_ZLIM=2 & HELP.REFMAT<>REZ.M
|| __zkpmat:=REZ.M;
   REZ.NRK:=__zkpnum:=exec('blnrkrez','rezerwacje','S',REZ.M);
   REZ.JM:=REZ.M().J;
   REZ.J2:=__zkpj2:={? REZ.M().J2<>null() || REZ.M().J2 || REZ.M().J ?};
   REZ.WS2:=__zkpws2:= {? REZ.M().J2<>null() || exec('oblWSP','jm',REZ.M) || 1 ?};
:: Sprawdzenie, czy do zlecenia istnieje już zdefiniowane zapotrzebowanie na dany surowiec
   exec('spr_nlim','zl_nlimit',ZLGD.ZL,$ZLGD.ref(),1);
   win_disp();
   REZ.SC:='';
   BEER.DOSTAWA:=date(0,0,0);
   exec('obl_stan','magazyn_stan',REZ.M,1,REZ.MG);
   {? BEER.SD<REZ.ILR
   || REZ.ILR:=BEER.SD;
      exec('porezilr','rezerwacje')
   ?}
?};
1

:Sign Version 2.0 jowisz:1045 2023/09/19 10:25:56 183d4c6acfda172367dba1894d4d83f36fc3f2971896a5091306c2b0c4b977130c856dbcb7468c97df2b028db34d4e60f091dc2028ae959e3cdfa705fefb8be75cd5468add5c87cde60093723f0117caac9912c0c6f0dae2ffe65f58994427ab218a2d18930da8a7790a492371b9be8fff4b852a7b5c59e072e7c8a9dd41d85b
