:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrze�one
::======================================================================================================================
:: Nazwa pliku: teryt.fml
:: Utworzony: 31.10.2019
:: Autor: MW
:: Systemy: Merit
::======================================================================================================================
:: Zawartość: TERYT
::======================================================================================================================


\WypelnijDane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Pobranie danych do tabel TER_WOJ, TER_POW, TER_GMI, TER_MSC i TER_ULI.
::   WE: [a] - [0]/1 - czy pominąć odczyt XINFO
::   WY: 1 - powodzenie, 0 - błąd
::----------------------------------------------------------------------------------------------------------------------
_pomin_xinfo:={? var_pres('_a')=type_of(0) || _a || 0 ?};

{? ~_pomin_xinfo
|| exec('czytaj','#stalesys',,XINFO)
?};
exec('ini_kom','#message','Informacje o imporcie danych TERYT'@);

_tmp_dir:=fmk_tmp_dir(0);
{? type_of(_tmp_dir)<>type_of(~~)
|| _tmp_pth:=_tmp_dir.get_path();
   {? _wyn:=exec('WypelnijDaneTERC','teryt',1,_tmp_pth)
   || {? _wyn:=exec('WypelnijDaneSIMC','teryt',1,_tmp_pth)
      || _wyn:=exec('WypelnijDaneULIC','teryt',1,_tmp_pth)
      ?}
   ?}
?};
exec('end_kom','#message');

_wyn


\WypelnijDaneTERC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Pobranie danych do tabel TER_WOJ, TER_POW, TER_GMI.
::   WE: [_a] 1 - tabela komunikatów już jest, 0 - nie (domyślnie)
::        _b - STRING - katalog tymczasowy na serwerze
::   WY: 1 - powodzenie, 0 - błąd
::----------------------------------------------------------------------------------------------------------------------
_komm_zewn:=0;
{? var_pres('_a')=type_of(0)
|| _komm_zewn:=_a
?};
_tmp_pth:=_b;


{? ~_komm_zewn
|| exec('ini_kom','#message','Informacje o imporcie danych TERYT'@)
?};
__kom_gr:='Województwa, powiaty, gminy'@;
__lp:=0;

_uu:=exec('xinfo_url_usr_czyt','teryt');

_fn:=exec('PLKatalogTERC','#teryt',_uu,,_tmp_pth);
{? _fn=''
|| exec('add_kom','#message','Import nieudany.'@,4,,__lp+=1);
   {? ~_komm_zewn
   || exec('end_kom','#message')
   ?};
   return(0)
?};
{? -(_fn+4)<>'.xml'
|| exec('add_kom','#message','Import nieudany. Komunikat: %1'@[_fn],4,,__lp+=1);
   {? ~_komm_zewn
   || exec('end_kom','#message')
   ?};
   return(0)
?};
{? ~fexists(_fn)
|| exec('add_kom','#message','Import nieudany. Brak pliku: %1'@[_fn],4,,__lp+=1);
   {? ~_komm_zewn
   || exec('end_kom','#message')
   ?};
   return(0)
?};
_fh:=fopen(_fn,'br',0,1,1);
{? ~_fh.is_open()
|| exec('add_kom','#message','Import nieudany. Błąd otwarcia pliku: %1'@[_fn],4,,__lp+=1);
   {? ~_komm_zewn
   || exec('end_kom','#message')
   ?};
   return(0)
?};
_tab:=xml_tparse(_fh,,,0);
fclose(_fh);

TER_GMI.clear();
TER_POW.clear();
TER_WOJ.clear();

TER_GMI.erase();
TER_POW.erase();
TER_WOJ.erase();

{? _tab.first()
|| _size:=_tab.size();
   _licz:=0;
   progress(0,,'Województwa, powiaty, gminy'@);
   _row:=obj_new('woj','pow','gmi','rodz_gmi','nazwa','nazdod');
   {!
   |? {? _tab.NAME='row'
      || _row.woj:='';
         _row.pow:='';
         _row.gmi:='';
         _row.rodz_gmi:='';
         _row.nazwa:='';
         _row.nazdod:='';
         _tab.cntx_psh();
         _tab.prefix(_tab.ref());
         {? _tab.first()
         || {!
            |? {? _tab.NAME='WOJ'
               || _row.woj:=_tab.VAL
               |? _tab.NAME='POW'
               || _row.pow:=_tab.VAL
               |? _tab.NAME='GMI'
               || _row.gmi:=_tab.VAL
               |? _tab.NAME='RODZ'
               || _row.rodz_gmi:=_tab.VAL
               |? _tab.NAME='NAZWA'
               || _row.nazwa:=_tab.VAL
               |? _tab.NAME='NAZWA_DOD'
               || _row.nazdod:=_tab.VAL
               ?};
               _licz+=1;
               _prgs:= 100*_licz/_size;
               progress(_prgs,'Zapis danych'@ + ' ' + $int(_prgs)+'%','Województwa, powiaty, gminy'@);
               _tab.next()
            !};
            _licz+=1;
            _prgs:= 100*_licz/_size;
            progress(_prgs,'Zapis danych'@ + ' ' + $int(_prgs)+'%','Województwa, powiaty, gminy'@);
            {? _row.woj<>'' & _row.nazwa<>''
            || params_set('row',_row);
               exec('ZapiszDaneTERC','teryt')
            ?}
         ?};
         _tab.cntx_pop()
      ?};
      _tab.next()
   !};
   {? _licz<_size
   || progress(100,'Zapis danych '@ + ' 100%','Województwa, powiaty, gminy'@)
   ?};
   exec('WypelnijDaneDodTERC','teryt');
   prgs_clr()
?};

exec('add_kom','#message','Województwa - liczba pozycji: %1.'@[$(TER_WOJ.size())],1,,__lp+=1);
exec('add_kom','#message','Powiaty - liczba pozycji: %1.'@[$(TER_POW.size())],1,,__lp+=1);
exec('add_kom','#message','Gminy - liczba pozycji: %1.'@[$(TER_GMI.size())],1,,__lp+=1);

{? ~_komm_zewn
|| exec('end_kom','#message')
?};

1


\WypelnijDaneSIMC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Pobranie danych do tabeli TER_MSC.
::   WE: [_a] 1 - tabela komunikatów już jest, 0 - nie (domyślnie)
::        _b - STRING - katalog tymczasowy na serwerze
::   WY: 1 - powodzenie, 0 - błąd
::----------------------------------------------------------------------------------------------------------------------
_komm_zewn:=0;
{? var_pres('_a')=type_of(0)
|| _komm_zewn:=_a
?};
_tmp_pth:=_b;

{? ~_komm_zewn
|| exec('ini_kom','#message','Informacje o imporcie danych TERYT'@)
?};
__kom_gr:='Miejscowości'@;
__lp:=0;

_uu:=exec('xinfo_url_usr_czyt','teryt');

_fn:=exec('PLKatalogSIMC','#teryt',_uu,,_tmp_pth);
{? _fn=''
|| exec('add_kom','#message','Import nieudany.'@,4,,__lp+=1);
   {? ~_komm_zewn
   || exec('end_kom','#message')
   ?};
   return(0)
?};
{? -(_fn+4)<>'.xml'
|| exec('add_kom','#message','Import nieudany. Komunikat: %1'@[_fn],4,,__lp+=1);
   {? ~_komm_zewn
   || exec('end_kom','#message')
   ?};
   return(0)
?};
{? ~fexists(_fn)
|| exec('add_kom','#message','Import nieudany. Brak pliku: %1'@[_fn],4,,__lp+=1);
   {? ~_komm_zewn
   || exec('end_kom','#message')
   ?};
   return(0)
?};
_fh:=fopen(_fn,'br',0,1,1);
{? ~_fh.is_open()
|| exec('add_kom','#message','Import nieudany. Błąd otwarcia pliku: %1'@[_fn],4,,__lp+=1);
   {? ~_komm_zewn
   || exec('end_kom','#message')
   ?};
   return(0)
?};
_tab:=xml_tparse(_fh,,,0);
fclose(_fh);

TER_MSC.clear();
TER_MSC.erase();

{? _tab.first()
|| _size:=_tab.size();
   _licz:=0;
   progress(0,,'Miejscowości'@);
   _row:=obj_new('woj','pow','gmi','rodz_gmi','rodz_msc','msc','mscp','nazwa','nazdod');
   {!
   |? {? _tab.NAME='row'
      || _row.woj:='';
         _row.pow:='';
         _row.gmi:='';
         _row.rodz_gmi:='';
         _row.rodz_msc:='';
         _row.msc:='';
         _row.mscp:='';
         _row.nazwa:='';
         _row.nazdod:='';
         _tab.cntx_psh();
         _tab.prefix(_tab.ref());
         {? _tab.first()
         || {!
            |? {? _tab.NAME='WOJ'
               || _row.woj:=_tab.VAL
               |? _tab.NAME='POW'
               || _row.pow:=_tab.VAL
               |? _tab.NAME='GMI'
               || _row.gmi:=_tab.VAL
               |? _tab.NAME='RODZ_GMI'
               || _row.rodz_gmi:=_tab.VAL
               |? _tab.NAME='RM'
               || _row.rodz_msc:=_tab.VAL
               |? _tab.NAME='SYM'
               || _row.msc:=_tab.VAL
               |? _tab.NAME='SYMPOD'
               || _row.mscp:=_tab.VAL
               |? _tab.NAME='NAZWA'
               || _row.nazwa:=_tab.VAL
               |? _tab.NAME='NAZWA_DOD'
               || _row.nazdod:=_tab.VAL
               ?};
               _licz+=1;
               _prgs:= 100*_licz/_size;
               progress(_prgs,'Zapis danych'@ + ' ' + $int(_prgs)+'%','Miejscowości'@);
               _tab.next()
            !};
            _licz+=1;
            _prgs:= 100*_licz/_size;
            progress(_prgs,'Zapis danych'@ + ' ' + $int(_prgs)+'%','Miejscowości'@);
            {? _row.woj<>'' & _row.pow<>'' & _row.gmi<>'' & _row.msc<>'' & _row.nazwa<>''
            || params_set('row',_row);
               exec('ZapiszDaneSIMC','teryt')
            ?}
         ?};
         _tab.cntx_pop()
      ?};
      _tab.next()
   !};
   {? _licz<_size
   || progress(100,'Zapis danych '@ + ' 100%','Miejscowości'@)
   ?};
   exec('WypelnijDaneDodSIMC','teryt');
   prgs_clr()
?};

exec('add_kom','#message','Miejscowości - liczba pozycji: %1.'@[$(TER_MSC.size())],1,,__lp+=1);

{? ~_komm_zewn
|| exec('end_kom','#message')
?};

1


\WypelnijDaneULIC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Pobranie danych do tabeli TER_ULI.
::   WE: [_a] 1 - tabela komunikatów już jest, 0 - nie (domyślnie)
::        _b - STRING - katalog tymczasowy na serwerze
::   WY: 1 - powodzenie, 0 - błąd
::----------------------------------------------------------------------------------------------------------------------
_komm_zewn:=0;
{? var_pres('_a')=type_of(0)
|| _komm_zewn:=_a
?};
_tmp_pth:=_b;

{? ~_komm_zewn
|| exec('ini_kom','#message','Informacje o imporcie danych TERYT'@)
?};
__kom_gr:='Ulice'@;
__lp:=0;

_uu:=exec('xinfo_url_usr_czyt','teryt');

_fn:=exec('PLKatalogULIC','#teryt',_uu,,_tmp_pth);
{? _fn=''
|| exec('add_kom','#message','Import nieudany.'@,4,,__lp+=1);
   {? ~_komm_zewn
   || exec('end_kom','#message')
   ?};
   return(0)
?};
{? -(_fn+4)<>'.xml'
|| exec('add_kom','#message','Import nieudany. Komunikat: %1'@[_fn],4,,__lp+=1);
   {? ~_komm_zewn
   || exec('end_kom','#message')
   ?};
   return(0)
?};
{? ~fexists(_fn)
|| exec('add_kom','#message','Import nieudany. Brak pliku: %1'@[_fn],4,,__lp+=1);
   {? ~_komm_zewn
   || exec('end_kom','#message')
   ?};
   return(0)
?};
_fh:=fopen(_fn,'br',0,1,1);
{? ~_fh.is_open()
|| exec('add_kom','#message','Import nieudany. Błąd otwarcia pliku: %1'@[_fn],4,,__lp+=1);
   {? ~_komm_zewn
   || exec('end_kom','#message')
   ?};
   return(0)
?};
_tab:=xml_tparse(_fh,,,0);
fclose(_fh);

TER_ULI.clear();
TER_ULI.erase();

{? _tab.first()
|| _size:=_tab.size();
   _licz:=0;
   progress(0,,'Ulice'@);
   _row:=obj_new('woj','pow','gmi','rodz_gmi','msc','uli','cecha','nazwa_1','nazwa_2');
   {!
   |? {? _tab.NAME='row'
      || _row.woj:='';
         _row.pow:='';
         _row.gmi:='';
         _row.rodz_gmi:='';
         _row.msc:='';
         _row.uli:='';
         _row.cecha:='';
         _row.nazwa_1:='';
         _row.nazwa_2:='';
         _tab.cntx_psh();
         _tab.prefix(_tab.ref());
         {? _tab.first()
         || {!
            |? {? _tab.NAME='WOJ'
               || _row.woj:=_tab.VAL
               |? _tab.NAME='POW'
               || _row.pow:=_tab.VAL
               |? _tab.NAME='GMI'
               || _row.gmi:=_tab.VAL
               |? _tab.NAME='RODZ_GMI'
               || _row.rodz_gmi:=_tab.VAL
               |? _tab.NAME='SYM'
               || _row.msc:=_tab.VAL
               |? _tab.NAME='SYM_UL'
               || _row.uli:=_tab.VAL
               |? _tab.NAME='CECHA'
               || _row.cecha:=_tab.VAL
               |? _tab.NAME='NAZWA_1'
               || _row.nazwa_1:=_tab.VAL
               |? _tab.NAME='NAZWA_2'
               || _row.nazwa_2:=_tab.VAL
               ?};
               _licz+=1;
               _prgs:= 100*_licz/_size;
               progress(_prgs,'Zapis danych'@ + ' ' + $int(_prgs)+'%','Ulice'@);
               _tab.next()
            !};
            _licz+=1;
            _prgs:= 100*_licz/_size;
            progress(_prgs,'Zapis danych'@ + ' ' + $int(_prgs)+'%','Ulice'@);
            {? _row.woj<>'' & _row.pow<>'' & _row.gmi<>'' & _row.msc<>'' & _row.uli<>'' & _row.nazwa_1<>''
            || params_set('row',_row);
               exec('ZapiszDaneULIC','teryt')
            ?}
         ?};
         _tab.cntx_pop()
      ?};
      _tab.next()
   !};
   {? _licz<_size
   || progress(100,'Zapis danych '@ + ' 100%','Ulice'@)
   ?};
   prgs_clr()
?};

exec('add_kom','#message','Ulice - liczba pozycji: %1.'@[$(TER_ULI.size())],1,,__lp+=1);

{? ~_komm_zewn
|| exec('end_kom','#message')
?};

1


\ZapiszDaneTERC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Zapis danych do tabel TER_WOJ, TER_POW i TER_GMI.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
{? _par.row.gmi<>'' & _par.row.pow<>''
|| TER_GMI.blank();
   TER_GMI.WOJ:=_par.row.woj;
   TER_GMI.POW:=_par.row.pow;
   TER_GMI.GMI:=_par.row.gmi;
   TER_GMI.RODZ_GMI:=_par.row.rodz_gmi;
   TER_GMI.NAZWA:=_par.row.nazwa;
   TER_GMI.NAZDOD:=_par.row.nazdod;
   TER_GMI.add()
|? _par.row.pow<>''
|| TER_POW.blank();
   TER_POW.WOJ:=_par.row.woj;
   TER_POW.POW:=_par.row.pow;
   TER_POW.NAZWA:=_par.row.nazwa;
   TER_POW.NAZDOD:=_par.row.nazdod;
   TER_POW.add()
|| TER_WOJ.blank();
   TER_WOJ.WOJ:=_par.row.woj;
   TER_WOJ.NAZWA:=-(_par.row.nazwa);
   TER_WOJ.NAZDOD:=_par.row.nazdod;
   TER_WOJ.add()
?};
~~


\ZapiszDaneSIMC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Zapis danych do tabeli TER_MSC.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();

_woj_naz:='';
TER_WOJ.cntx_psh();
TER_WOJ.index('WOJ');
TER_WOJ.prefix(_par.row.woj);
{? TER_WOJ.first()
|| _woj_naz:=TER_WOJ.NAZWA
?};
TER_WOJ.cntx_pop();

_pow_naz:='';
TER_POW.cntx_psh();
TER_POW.index('POW');
TER_POW.prefix(_par.row.woj,_par.row.pow);
{? TER_POW.first()
|| _pow_naz:=TER_POW.NAZWA
?};
TER_POW.cntx_pop();

_gmi_naz:='';
TER_GMI.cntx_psh();
TER_GMI.index('GMI');
TER_GMI.prefix(_par.row.woj,_par.row.pow,_par.row.gmi);
{? TER_GMI.first()
|| _gmi_naz:=TER_GMI.NAZWA
?};
TER_GMI.cntx_pop();

TER_MSC.blank();
TER_MSC.WOJ:=_par.row.woj;
TER_MSC.POW:=_par.row.pow;
TER_MSC.GMI:=_par.row.gmi;
TER_MSC.RODZ_GMI:=_par.row.rodz_gmi;
TER_MSC.RODZ_MSC:=_par.row.rodz_msc;
TER_MSC.MSC:=_par.row.msc;
TER_MSC.MSCP:=_par.row.mscp;
TER_MSC.NAZWA:=_par.row.nazwa;
TER_MSC.NAZDOD:=_par.row.nazdod;
TER_MSC.WOJ_NAZ:=_woj_naz;
TER_MSC.POW_NAZ:=_pow_naz;
TER_MSC.GMI_NAZ:=_gmi_naz;
{? _par.row.msc=_par.row.mscp
|| TER_MSC.MSCP_NAZ:=_par.row.nazwa
?};

TER_MSC.add();
~~


\ZapiszDaneULIC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Zapis danych do tabeli TER_ULI.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();

_woj_naz:='';
TER_WOJ.cntx_psh();
TER_WOJ.index('WOJ');
TER_WOJ.prefix(_par.row.woj);
{? TER_WOJ.first()
|| _woj_naz:=TER_WOJ.NAZWA
?};
TER_WOJ.cntx_pop();

_pow_naz:='';
TER_POW.cntx_psh();
TER_POW.index('POW');
TER_POW.prefix(_par.row.woj,_par.row.pow);
{? TER_POW.first()
|| _pow_naz:=TER_POW.NAZWA
?};
TER_POW.cntx_pop();

_gmi_naz:='';
TER_GMI.cntx_psh();
TER_GMI.index('GMI');
TER_GMI.prefix(_par.row.woj,_par.row.pow,_par.row.gmi);
{? TER_GMI.first()
|| _gmi_naz:=TER_GMI.NAZWA
?};
TER_GMI.cntx_pop();

_msc_naz:='';
_mscp:='';
_mscp_naz:='';
TER_MSC.cntx_psh();
TER_MSC.index('MSC');
TER_MSC.prefix(_par.row.woj,_par.row.pow,_par.row.gmi,_par.row.rodz_gmi,_par.row.msc);
{? TER_MSC.first()
|| _mscp:=TER_MSC.MSCP;
   _msc_naz:=TER_MSC.NAZWA;
   _mscp_naz:=TER_MSC.MSCP_NAZ
?};
TER_MSC.cntx_pop();

TER_ULI.blank();
TER_ULI.WOJ:=_par.row.woj;
TER_ULI.POW:=_par.row.pow;
TER_ULI.GMI:=_par.row.gmi;
TER_ULI.RODZ_GMI:=_par.row.rodz_gmi;
TER_ULI.MSC:=_par.row.msc;
TER_ULI.MSCP:=_mscp;
TER_ULI.ULI:=_par.row.uli;
TER_ULI.CECHA:=_par.row.cecha;
TER_ULI.NAZWA_1:=_par.row.nazwa_1;
TER_ULI.NAZWA_2:=_par.row.nazwa_2;
{? _par.row.nazwa_2=''
|| TER_ULI.NAZWA:=_par.row.nazwa_1
|| TER_ULI.NAZWA:=120+(_par.row.nazwa_2+' '+_par.row.nazwa_1)
?};
TER_ULI.WOJ_NAZ:=_woj_naz;
TER_ULI.POW_NAZ:=_pow_naz;
TER_ULI.GMI_NAZ:=_gmi_naz;
TER_ULI.MSC_NAZ:=_msc_naz;
TER_ULI.MSCP_NAZ:=_mscp_naz;
TER_ULI.add();
~~


\WypelnijDaneDodTERC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Uzupełnienie danych w tabelach TER_POW i TER_GMI po imporcie.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
TER_WOJ.cntx_psh();
TER_WOJ.index('WOJ');

{? TER_POW.first()
|| {!
   |? TER_WOJ.prefix(TER_POW.WOJ);
      {? TER_WOJ.first()
      || TER_POW.WOJ_NAZ:=TER_WOJ.NAZWA;
         TER_POW.put()
      ?};
      TER_POW.next()
   !}
?};

TER_POW.cntx_psh();
TER_POW.index('POW');

{? TER_GMI.first()
|| {!
   |? TER_WOJ.prefix(TER_GMI.WOJ);
      {? TER_WOJ.first()
      || TER_GMI.WOJ_NAZ:=TER_WOJ.NAZWA;
         TER_GMI.put()
      ?};
      TER_POW.prefix(TER_GMI.WOJ,TER_GMI.POW);
      {? TER_POW.first()
      || TER_GMI.POW_NAZ:=TER_POW.NAZWA;
         TER_GMI.put()
      ?};
      TER_GMI.next()
   !}
?};

TER_POW.cntx_pop();
TER_WOJ.cntx_pop();

~~


\WypelnijDaneDodSIMC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Uzupełnienie danych w tabeli TER_MSC po imporcie.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TER_MSC.first()
|| {!
   |? {? TER_MSC.MSC<>TER_MSC.MSCP
      || _mscp:=TER_MSC.MSCP;
         _mscp_naz:='';
         TER_MSC.cntx_psh();
         TER_MSC.index('MSC0');
         TER_MSC.prefix(_mscp);
         {? TER_MSC.first()
         || _mscp_naz:=TER_MSC.NAZWA
         ?};
         TER_MSC.cntx_pop();
         {? _mscp_naz<>''
         || TER_MSC.MSCP_NAZ:=_mscp_naz;
            TER_MSC.put()
         ?}
      ?};
      TER_MSC.next()
   !}
?};

~~


\xinfo_teryt_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Tablicę  z adresem i danymi logowania do webservice TERYT odczytana z parametrów (XINFO)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? __CHK.record(XINFO,,'TER_URL','TER_USR','TER_PASS')=''
|| {? FUN.ask('Czy zaimportować dane z TERYT?\nImport potrwa kilka minut.'@)
   || exec('WypelnijDane','teryt',1)
   ?}
?};
''


\xinfo_url_usr_czyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Tablicę z adresem i danymi logowania do webservice TERYT odczytana z parametrów (XINFO)
::   WE: [_a] url
::       [_b] user
::       [_c] password
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_t:=exec('_url_user','#teryt',XINFO.TER_URL,XINFO.TER_USR,XINFO.TER_PASS);
_t


\xinfo_url_usr_demo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Zapis w parametach (XINFO) domyślny adres i dane logowania do webservice TERYT.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_t:=exec('_url_user_demo','#teryt');
_czy:=0;
{? XINFO.TER_URL<>'' | XINFO.TER_USR<>'' | XINFO.TER_PASS<>''
|| {? FUN.ask(
         'Czy na pewno wypełnić parametry wartościami domyślnymi?\n\n'
         'Adres: %1\n'
         'Użytkownik: %2\n'
         'Hasło: %3'@
         [_t.url,_t.user,_t.password]
      )
   || _czy:=1
   ?}
|| _czy:=1
?};
{? _czy
|| XINFO.TER_URL:=_t.url;
   XINFO.TER_USR:=_t.user;
   XINFO.TER_PASS:=_t.password
?};
''


\xinfo_url_usr_sprawdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Sprawdzanie poprawności adresu i danych logowania do webservice TERYT.
::   WE: [_a] - czy funkcja 'Waliduj' [1], czy kontrola dla okna 'OK' (0)
::   WY: '' - dane poprawne, wpp. - nie
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _valid:=_a
|| _valid:=1
?};

_wyn:=__CHK.record(XINFO,,'TER_URL','TER_USR','TER_PASS');

{? _valid
|| {? _wyn=''
   || _t:=exec('xinfo_url_usr_czyt','teryt');
      {? ~exec('PLCzyZalogowany','#teryt',_t)
      || XINFO.TER_AKT:='N';
         FUN.info('Nie udało się nawiązać połączenia.'@)
      || XINFO.TER_AKT:='T';
         FUN.info('Nawiązano połączenie.'@)
      ?}
   || _wyn:=''
   ?}
?};

_wyn


\xinfo_url_usr_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Edycja w parametach (XINFO) domyślnego adresu i danych logowania do webservice TERYT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ae:="exec('xinfo_url_usr_sprawdz','teryt',0)";
exec('edytuj','#stalesys',XINFO,'ZDO_TER',_ae,1);
~~


\ter_woj_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Tymczasowa tabela województw z TER_WOJ.
::   WY: tabela tymczasowa
::----------------------------------------------------------------------------------------------------------------------
::sql_log('sql.log',1);
_sql:= 'select distinct ter_woj.nazwa as woj_naz '
       'from ter_woj';
_sql+=' order by woj_naz';
_tab:=sql(_sql);
_tab


\ter_woj_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Wybór z tymczasowej tabeli województw z TER_WOJ.
::   WE: [_a] ewentualny początek nazwy województwa
::   WY: nazwa wybranego województwa
::----------------------------------------------------------------------------------------------------------------------
_woj_naz0:='';
{? var_pres('_a')=type_of('')
|| _woj_naz0:=_a
?};

_woj_naz:='';
_tab:=exec('ter_woj_tab','teryt');
{? _tab.size()>0
|| {? _woj_naz0<>''
   || _tab.find_ge(_woj_naz0)
   || _tab.first()
   ?};
   _tytul:='Województwa'@;
   _okn:=_tab.mk_sel(_tytul,'T',,'ter_woj_okn',,,,,'U');
   _tab.win_fld(_okn,,'WOJ_NAZ',,,30,,,'Województwo'@);
   _tab.win_act(_okn,,'Formuła','&Wybierz'@@,,'Wybór województwa'@,"sel_exit()",,1,,,,'W');
   _tab.win_act(_okn,,'Szukaj');
   _tab.win_act(_okn,,'Kolejność');
   _tab.win_sel(_okn);
   {? _tab.select(,1)
   || _woj_naz:=_tab.WOJ_NAZ
   ?}
|| FUN.info('Nie znaleziono województw.'@)
?};

_woj_naz


\ter_woj_wybierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Wybór województwa z TER_MSC i jego zapis w edytowanej tabeli.
::   WE: [_a] akronim tabeli
::       [_b] akronim pola "województwo" w tej tabeli
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('')
|| return(~~)
?};
{? var_pres('_b')<>type_of('')
|| return(~~)
?};

_fm:=$(_a+'.'+_b);
_woj_naz0:=_fm();
_woj_naz:=exec('ter_woj_sel','teryt',_woj_naz0);

{? _woj_naz<>'' & _woj_naz<> _woj_naz0
|| _fm:=$(_a+'.'+_b+':=\''+_woj_naz+'\'');
   _fm();
   win_disp()
?};

~~


\ter_pow_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Tymczasowa tabela powiatów z TER_POW.
::   WE: [_a] ewentualna nazwa województwa
::   WY: tabela tymczasowa
::----------------------------------------------------------------------------------------------------------------------
_woj_naz:='';
{? var_pres('_a')=type_of('')
|| _woj_naz:=-_a
?};
::sql_log('sql.log',1);
_sql:= 'select distinct ter_pow.nazwa as pow_naz, ter_pow.woj_naz '
       'from ter_pow';
{? _woj_naz<>''
|| _sql+=' where lower(ter_pow.woj_naz) = \''+_woj_naz+'\''
?};
_sql+=' order by pow_naz, woj_naz';
_tab:=sql(_sql);
_tab


\ter_pow_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Wybór z tymczasowej tabeli powiatów z TER_POW.
::   WE: [_a] ewentualny początek nazwy powatu
::       [_b] ewentualna nazwa województwa
::   WY: obj(pow,woj) nazwa wybranego powiatu i województwa
::----------------------------------------------------------------------------------------------------------------------
_pow_naz0:='';
{? var_pres('_a')=type_of('')
|| _pow_naz0:=_a
?};
_woj_naz0:='';
{? var_pres('_b')=type_of('')
|| _woj_naz0:=_b
?};

_opi:='';
{? _woj_naz0<>''
|| _opi:=' ('+'województwo'@+': '+_woj_naz0+')'
?};

_pow_naz:='';
_woj_naz:='';
_tab:=exec('ter_pow_tab','teryt',_woj_naz0);
{? _tab.size()>0
|| {?_pow_naz0<>''
   || _tab.find_ge(_pow_naz0)
   || _tab.first()
   ?};
   _tytul:='Powiaty'@+_opi;
   _okn:=_tab.mk_sel(_tytul,'T',,'ter_pow_okn',,,,,'U');
   _tab.win_fld(_okn,,'POW_NAZ',,,30,,,'Powiat'@);
   _tab.win_fld(_okn,,'WOJ_NAZ',,,30,,,'Województwo'@);
   _tab.win_act(_okn,,'Formuła','&Wybierz'@@,,'Wybór powiatu'@,"sel_exit()",,1,,,,'W');
   _tab.win_act(_okn,,'Szukaj');
   _tab.win_act(_okn,,'Kolejność');
   _tab.win_sel(_okn);
   {? _tab.select(,1)
   || _pow_naz:=_tab.POW_NAZ;
      _woj_naz:=_tab.WOJ_NAZ
   ?}
|| FUN.info('Nie znaleziono powiatów'@+exec('opis_dla_komunikatu','teryt',_opi)+'.')
?};

_wyn:=obj_new('pow','woj');
_wyn.pow:=_pow_naz;
_wyn.woj:=_woj_naz;
_wyn


\ter_pow_wybierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Wybór powiatu z TER_POW i jego zapis w edytowanej tabeli.
::   WE: [_a] akronim tabeli
::       [_b] akronim pola "powiat" w tej tabeli
::       [_c] ewentualny akronim pola "województwo" w tej tabeli lub powiązanie do innej (np. WOJEWODZ().NAZWA)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('')
|| return(~~)
?};
{? var_pres('_b')<>type_of('')
|| return(~~)
?};
{? var_pres('_c')<>type_of('')
|| _c:=''
?};

_fm:=$(_a+'.'+_b);
_pow_naz0:=_fm();
_woj_naz0:='';
{? _c<>''
|| _fm:=$(_a+'.'+_c);
   _woj_naz0:=_fm()
?};

_wyn:=exec('ter_pow_sel','teryt',_pow_naz0,_woj_naz0);
_pow_naz:=_wyn.pow;
_woj_naz:=_wyn.woj;

_zmiana:=0;
{? _pow_naz<>'' & _pow_naz<> _pow_naz0
|| _fm:=$(_a+'.'+_b+':=\''+_pow_naz+'\'');
   _fm();
   _zmiana:=1
?};
{? _c<>'' & _c*'()'=0  & _woj_naz<>'' & _woj_naz<> _woj_naz0
|| _fm:=$(_a+'.'+_c+':=\''+_woj_naz+'\'');
   _fm();
   _zmiana:=1
?};

{? _zmiana
|| win_disp()
?};

~~


\ter_gmi_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Tymczasowa tabela gmin z TER_GMI.
::   WE: [_a] ewentualna nazwa powiatu
::       [_b] ewentualna nazwa województwa
::   WY: tabela tymczasowa
::----------------------------------------------------------------------------------------------------------------------
_pow_naz:='';
{? var_pres('_a')=type_of('')
|| _pow_naz:=-_a
?};
_woj_naz:='';
{? var_pres('_b')=type_of('')
|| _woj_naz:=-_b
?};
::sql_log('sql.log',1);
_sql:= 'select distinct ter_gmi.nazwa as gmi_naz, ter_gmi.pow_naz, ter_gmi.woj_naz '
       'from ter_gmi';
_where:=0;
{? _pow_naz<>''
|| _sql+=' where lower(ter_gmi.pow_naz) = \''+_pow_naz+'\'';
   _where:=1
?};
{? _woj_naz<>''
|| {? _where
   || _sql+=' and '
   || _sql+=' where '
   ?};
   _sql+='lower(ter_gmi.woj_naz) = \''+_woj_naz+'\''
?};
_sql+=' order by gmi_naz, pow_naz, woj_naz';
_tab:=sql(_sql);
_tab


\ter_gmi_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Wybór z tymczasowej tabeli gmin z TER_GMI.
::   WE: [_a] ewentualny początek nazwy gminy
::       [_b] ewentualna nazwa powiatu
::       [_c] ewentualna nazwa województwa
::       [_d] - kod gminy - do ustawienia się na danym rekordzie
::   WY: obj(gmi,pow,woj) nazwa wybranej gminy, powiatu i województwa
::----------------------------------------------------------------------------------------------------------------------
_gmi_naz0:='';
{? var_pres('_a')=type_of('')
|| _gmi_naz0:=_a
?};
_pow_naz0:='';
{? var_pres('_b')=type_of('')
|| _pow_naz0:=_b
?};
_woj_naz0:='';
{? var_pres('_c')=type_of('')
|| _woj_naz0:=_c
?};
_gmi_kod:='';
{? var_pres('_d')=type_of('')
|| _gmi_kod:=_d
?};

_opi:='';
{? _pow_naz0<>''
|| _opi:=' ('+'powiat'@+': '+_pow_naz0
?};
{? _woj_naz0<>''
|| {? _opi<>''
   || _opi+=', '
   || _opi+=' ('
   ?};
   _opi+='województwo'@+': '+_woj_naz0
?};
{? _opi<>''
|| _opi+=')'
?};

_gmi_naz:='';
_pow_naz:='';
_woj_naz:='';
_kod_gmi:='';
_tab:=exec('ter_gmi_tab','teryt',_pow_naz0,_woj_naz0);
{? _tab.size()>0
|| {?_gmi_naz0<>''
   || _tab.find_ge(_gmi_naz0)
   || _tab.first();
      {? _gmi_kod<>''
      ||  TER_GMI.cntx_psh();
          TER_GMI.index('GMI');
          TER_GMI.prefix(2+_gmi_kod,2+(2-_gmi_kod),2+(4-_gmi_kod),_gmi_kod+1);
          {? TER_GMI.first()
          || _tab.find_tab(,'WOJ_NAZ',,'=',TER_GMI.WOJ_NAZ,'POW_NAZ',,'=',TER_GMI.POW_NAZ,'GMI_NAZ',,'=',TER_GMI.NAZWA)
          ?};
          TER_GMI.cntx_pop()
      ?}
   ?};
   _tytul:='Gminy'@+_opi;
   _okn:=_tab.mk_sel(_tytul,'T',,'ter_gmi_okn',,,,,'U');
   _tab.win_fld(_okn,,'GMI_NAZ',,,20,,,'Gmina'@);
   _tab.win_fld(_okn,,'POW_NAZ',,,20,,,'Powiat'@);
   _tab.win_fld(_okn,,'WOJ_NAZ',,,20,,,'Województwo'@);
   _tab.win_act(_okn,,'Formuła','&Wybierz'@@,,'Wybór gminy'@,"sel_exit()",,1,,,,'W');
   _tab.win_act(_okn,,'Szukaj');
   _tab.win_act(_okn,,'Kolejność');
   _tab.win_sel(_okn);
   {? _tab.select(,1)
   || _gmi_naz:=_tab.GMI_NAZ;
      _pow_naz:=_tab.POW_NAZ;
      _woj_naz:=_tab.WOJ_NAZ;
      TER_GMI.cntx_psh();
      TER_GMI.index('NAZ');
      TER_GMI.prefix();
      {? TER_GMI.find_ge(_woj_naz,_pow_naz,_gmi_naz)
      || _kod_gmi:=TER_GMI.WOJ+TER_GMI.POW+TER_GMI.GMI+TER_GMI.RODZ_GMI
      ?};
      TER_GMI.cntx_pop()
   ?}
|| FUN.info('Nie znaleziono gmin'@+exec('opis_dla_komunikatu','teryt',_opi)+'.')
?};

_wyn:=obj_new('gmi','pow','woj','kod');
_wyn.gmi:=_gmi_naz;
_wyn.pow:=_pow_naz;
_wyn.woj:=_woj_naz;
_wyn.kod:=_kod_gmi;
_wyn


\ter_gmi_wybierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Wybór gminy z TER_GMI i jej zapis w edytowanej tabeli.
::   WE: [_a] akronim tabeli
::       [_b] akronim pola "gmina" w tej tabeli
::       [_c] ewentualny akronim pola "powiat" w tej tabeli lub powiązanie do innej (np. POWIAT().NAZWA)
::       [_d] ewentualny akronim pola "województwo" w tej tabeli lub powiązanie do innej (np. WOJEWODZ().NAZWA)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('')
|| return(~~)
?};
{? var_pres('_b')<>type_of('')
|| return(~~)
?};
{? var_pres('_c')<>type_of('')
|| _c:=''
?};
{? var_pres('_d')<>type_of('')
|| _d:=''
?};

_fm:=$(_a+'.'+_b);
_gmi_naz0:=_fm();
_pow_naz0:='';
{? _c<>''
|| _fm:=$(_a+'.'+_c);
   _pow_naz0:=_fm()
?};
_woj_naz0:='';
{? _d<>''
|| _fm:=$(_a+'.'+_d);
   _woj_naz0:=_fm()
?};

_wyn:=exec('ter_gmi_sel','teryt',_gmi_naz0,_pow_naz0,_woj_naz0);
_gmi_naz:=_wyn.gmi;
_pow_naz:=_wyn.pow;
_woj_naz:=_wyn.woj;

_zmiana:=0;
{? _gmi_naz<>'' & _gmi_naz<> _gmi_naz0
|| _fm:=$(_a+'.'+_b+':=\''+_gmi_naz+'\'');
   _fm();
   _zmiana:=1
?};
{? _c<>'' & _c*'()'=0  & _pow_naz<>'' & _pow_naz<> _pow_naz0
|| _fm:=$(_a+'.'+_c+':=\''+_pow_naz+'\'');
   _fm();
   _zmiana:=1
?};
{? _d<>'' & _d*'()'=0  & _woj_naz<>'' & _woj_naz<> _woj_naz0
|| _fm:=$(_a+'.'+_d+':=\''+_woj_naz+'\'');
   _fm();
   _zmiana:=1
?};

{? _zmiana
|| win_disp()
?};

~~


\ter_msc_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Tymczasowa tabela miejscowości z TER_MSC.
::   WE: [_a] ewentualna nazwa gminy
::       [_b] ewentualna nazwa powiatu
::       [_c] ewentualna nazwa województwa
::   WY: tabela tymczasowa
::----------------------------------------------------------------------------------------------------------------------
_gmi_naz:='';
{? var_pres('_a')=type_of('')
|| _gmi_naz:=-_a
?};
_pow_naz:='';
{? var_pres('_b')=type_of('')
|| _pow_naz:=-_b
?};
_woj_naz:='';
{? var_pres('_c')=type_of('')
|| _woj_naz:=-_c
?};

::sql_log('sql.log',1);
_sql:= 'select distinct ter_msc.nazwa as msc_naz, ter_msc.gmi_naz, ter_msc.pow_naz, ter_msc.woj_naz '
       'from ter_msc '
       'where ter_msc.msc=ter_msc.mscp';
{? _gmi_naz<>''
|| _sql+=' and lower(ter_msc.gmi_naz) = \''+_gmi_naz+'\''
?};
{? _pow_naz<>''
|| _sql+=' and lower(ter_msc.pow_naz) = \''+_pow_naz+'\''
?};
{? _woj_naz<>''
|| _sql+=' and lower(ter_msc.woj_naz) = \''+_woj_naz+'\''
?};
_sql+=' order by msc_naz, gmi_naz, pow_naz, woj_naz';
_tab:=sql(_sql);
_tab


\ter_msc_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Wybór z tymczasowej tabeli miejscowości z TER_MSC.
::   WE: [_a] ewentualny początek nazwy miejscowości
::       [_b] ewentualna nazwa gminy
::       [_c] ewentualna nazwa powiatu
::       [_d] ewentualna nazwa województwa
::   WY: obj(msc,gmi,pow,woj) nazwa wybranej miejscowości, gminy, powiatu i województwa
::----------------------------------------------------------------------------------------------------------------------
_msc_naz0:='';
{? var_pres('_a')=type_of('')
|| _msc_naz0:=_a
?};
_gmi_naz0:='';
{? var_pres('_b')=type_of('')
|| _gmi_naz0:=_b
?};
_pow_naz0:='';
{? var_pres('_c')=type_of('')
|| _pow_naz0:=_c
?};
_woj_naz0:='';
{? var_pres('_d')=type_of('')
|| _woj_naz0:=_d
?};

_opi:='';
{? _gmi_naz0<>''
|| _opi:=' ('+'gmina'@+': '+_gmi_naz0
?};
{? _pow_naz0<>''
|| {? _opi<>''
   || _opi+=', '
   || _opi+=' ('
   ?};
   _opi+='powiat'@+': '+_pow_naz0
?};
{? _woj_naz0<>''
|| {? _opi<>''
   || _opi+=', '
   || _opi+=' ('
   ?};
   _opi+='województwo'@+': '+_woj_naz0
?};
{? _opi<>''
|| _opi+=')'
?};

_msc_naz:='';
_gmi_naz:='';
_pow_naz:='';
_woj_naz:='';
_tab:=exec('ter_msc_tab','teryt',_gmi_naz0,_pow_naz0,_woj_naz0);
{? _tab.size()>0
|| {? _msc_naz0<>''
   || _tab.find_ge(_msc_naz0)
   || _tab.first()
   ?};
   _tytul:='Miejscowości'@+_opi;
   _okn:=_tab.mk_sel(_tytul,'T',,'ter_msc_okn',,,,,'U');
   _tab.win_fld(_okn,,'MSC_NAZ',,,30,,,'Miejscowość'@);
   _tab.win_fld(_okn,,'GMI_NAZ',,,20,,,'Gmina'@);
   _tab.win_fld(_okn,,'POW_NAZ',,,20,,,'Powiat'@);
   _tab.win_fld(_okn,,'WOJ_NAZ',,,20,,,'Województwo'@);
   _tab.win_act(_okn,,'Formuła','&Wybierz'@@,,'Wybór miejscowości'@,"sel_exit()",,1,,,,'W');
   _tab.win_act(_okn,,'Szukaj');
   _tab.win_act(_okn,,'Kolejność');
   _tab.win_sel(_okn);
   {? _tab.select(,1)
   || _msc_naz:=_tab.MSC_NAZ;
      _gmi_naz:=_tab.GMI_NAZ;
      _pow_naz:=_tab.POW_NAZ;
      _woj_naz:=_tab.WOJ_NAZ
   ?}
|| FUN.info('Nie znaleziono miejscowości'@+exec('opis_dla_komunikatu','teryt',_opi)+'.')
?};

_wyn:=obj_new('msc','gmi','pow','woj');
_wyn.msc:=_msc_naz;
_wyn.gmi:=_gmi_naz;
_wyn.pow:=_pow_naz;
_wyn.woj:=_woj_naz;
_wyn


\ter_msc_wybierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Wybór miejscowości z TER_MSC i jej zapis w edytowanej tabeli.
::   WE: [_a] akronim tabeli
::       [_b] akronim pola "miejscowość" w tej tabeli
::       [_c] ewentualny akronim pola "gmina" w tej tabeli lub powiązanie do innej (np. GMINA().NAZWA)
::       [_d] ewentualny akronim pola "powiat" w tej tabeli lub powiązanie do innej (np. POWIAT().NAZWA)
::       [_e] ewentualny akronim pola "województwo" w tej tabeli lub powiązanie do innej (np. WOJEWODZ().NAZWA)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('')
|| return(~~)
?};
{? var_pres('_b')<>type_of('')
|| return(~~)
?};
{? var_pres('_c')<>type_of('')
|| _c:=''
?};
{? var_pres('_d')<>type_of('')
|| _d:=''
?};
{? var_pres('_e')<>type_of('')
|| _e:=''
?};

_fm:=$(_a+'.'+_b);
_msc_naz0:=_fm();
_gmi_naz0:='';
{? _c<>''
|| _fm:=$(_a+'.'+_c);
   _gmi_naz0:=_fm()
?};
_pow_naz0:='';
{? _d<>''
|| _fm:=$(_a+'.'+_d);
   _pow_naz0:=_fm()
?};
_woj_naz0:='';
{? _e<>''
|| _fm:=$(_a+'.'+_e);
   _woj_naz0:=_fm()
?};

_wyn:=exec('ter_msc_sel','teryt',_msc_naz0,_gmi_naz0,_pow_naz0,_woj_naz0);
_msc_naz:=_wyn.msc;
_gmi_naz:=_wyn.gmi;
_pow_naz:=_wyn.pow;
_woj_naz:=_wyn.woj;

_zmiana:=0;
{? _msc_naz<>'' & _msc_naz<> _msc_naz0
|| _fm:=$(_a+'.'+_b+':=\''+_msc_naz+'\'');
   _fm();
   _zmiana:=1
?};
{? _c<>'' & _c*'()'=0  & _gmi_naz<>'' & _gmi_naz<> _gmi_naz0
|| _fm:=$(_a+'.'+_c+':=\''+_gmi_naz+'\'');
   _fm();
   _zmiana:=1
?};
{? _d<>'' & _d*'()'=0  & _pow_naz<>'' & _pow_naz<> _pow_naz0
|| _fm:=$(_a+'.'+_d+':=\''+_pow_naz+'\'');
   _fm();
   _zmiana:=1
?};
{? _e<>'' & _e*'()'=0  & _woj_naz<>'' & _woj_naz<> _woj_naz0
|| _fm:=$(_a+'.'+_e+':=\''+_woj_naz+'\'');
   _fm();
   _zmiana:=1
?};

{? _zmiana
|| win_disp()
?};

~~


\ter_uli_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Tymczasowa tabela ulic z TER_ULI.
::   WE: [_a] ewentualna nazwa miejscowości
::       [_b] ewentualna nazwa gminy
::       [_c] ewentualna nazwa powiatu
::       [_d] ewentualna nazwa województwa
::   WY: tabela tymczasowa
::----------------------------------------------------------------------------------------------------------------------
_msc_naz:='';
{? var_pres('_a')=type_of('')
|| _msc_naz:=-_a
?};
_gmi_naz:='';
{? var_pres('_b')=type_of('')
|| _gmi_naz:=-_b
?};
_pow_naz:='';
{? var_pres('_c')=type_of('')
|| _pow_naz:=-_c
?};
_woj_naz:='';
{? var_pres('_d')=type_of('')
|| _woj_naz:=-_d
?};

::sql_log('sql.log',1);
_sql:= 'select ter_uli.nazwa_1 as uli_skr, ter_uli.cecha, ter_uli.nazwa as uli_naz, '
       'ter_uli.msc_naz, ter_uli.gmi_naz, ter_uli.pow_naz, ter_uli.woj_naz '
       'from ter_uli '
       'where ter_uli.msc=ter_uli.mscp';
{? _msc_naz<>''
|| _sql+=' and lower(ter_uli.msc_naz) = \''+_msc_naz+'\''
?};
{? _gmi_naz<>''
|| _sql+=' and lower(ter_uli.gmi_naz) = \''+_gmi_naz+'\''
?};
{? _pow_naz<>''
|| _sql+=' and lower(ter_uli.pow_naz) = \''+_pow_naz+'\''
?};
{? _woj_naz<>''
|| _sql+=' and lower(ter_uli.woj_naz) = \''+_woj_naz+'\''
?};
_sql+=' order by uli_skr, msc_naz, gmi_naz, pow_naz';
_tab:=sql(_sql);
_tab


\ter_uli_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Wybór z tymczasowej tabeli ulic z TER_ULI.
::   WE: [_a] ewentualny początek nazwy ulicy
::       [_b] ewentualna nazwa miejscowości
::       [_c] ewentualna nazwa gminy
::       [_d] ewentualna nazwa powiatu
::       [_e] ewentualna nazwa województwa
::   WY: obj(msc,uli,gmi,pow,woj) nazwa wybranej ulicy, miejscowości, gminy, powiatu i województwa
::----------------------------------------------------------------------------------------------------------------------
_uli_naz0:='';
{? var_pres('_a')=type_of('')
|| _uli_naz0:=_a
?};
_msc_naz0:='';
{? var_pres('_b')=type_of('')
|| _msc_naz0:=_b
?};
_gmi_naz0:='';
{? var_pres('_c')=type_of('')
|| _gmi_naz0:=_c
?};
_pow_naz0:='';
{? var_pres('_d')=type_of('')
|| _pow_naz0:=_d
?};
_woj_naz0:='';
{? var_pres('_e')=type_of('')
|| _woj_naz0:=_e
?};

_opi:='';
{? _msc_naz0<>''
|| _opi:=' ('+'miejscowość'@+': '+_msc_naz0
?};
{? _gmi_naz0<>''
|| {? _opi<>''
   || _opi+=', '
   || _opi+=' ('
   ?};
   _opi+='gmina'@+': '+_gmi_naz0
?};
{? _pow_naz0<>''
|| {? _opi<>''
   || _opi+=', '
   || _opi+=' ('
   ?};
   _opi+='powiat'@+': '+_pow_naz0
?};
{? _woj_naz0<>''
|| {? _opi<>''
   || _opi+=', '
   || _opi+=' ('
   ?};
   _opi+='województwo'@+': '+_woj_naz0
?};
{? _opi<>''
|| _opi+=')'
?};

_uli_naz:='';
_msc_naz:='';
_gmi_naz:='';
_pow_naz:='';
_woj_naz:='';
_tab:=exec('ter_uli_tab','teryt',_msc_naz0,_gmi_naz0,_pow_naz0,_woj_naz0);
{? _tab.size()>0
|| {?_uli_naz0<>''
   || _tab.blank();
      _tab.ULI_NAZ:=_uli_naz0;
      {? ~_tab.find_rec()
      || _jest:=0;
         _szuk:=_uli_naz0;
         {!
         |? ~_jest & _szuk<>''
         |! _tab.first();
            {? _tab.find_tab(,'ULI_NAZ',,'LikeIC',_szuk)
            || _jest:=1
            || _szuk:=_szuk-1
            ?}
         !};
         {? ~_jest
         || _tab.first()
         ?}
      ?}
   || _tab.first()
   ?};
   _tytul:='Ulice'@+_opi;
   _okn:=_tab.mk_sel(_tytul,'T',,'ter_uli_okn',,,,,'U');
   _tab.win_fld(_okn,,'ULI_SKR',,,20,,,'Ulica - nazwa skrócona'@);
   _tab.win_fld(_okn,,'CECHA',,,6,,,'Cecha'@);
   _tab.win_fld(_okn,,'ULI_NAZ',,,30,,,'Ulica - nazwa pełna'@);
   _tab.win_fld(_okn,,'MSC_NAZ',,,20,,,'Miejscowość'@);
   _tab.win_fld(_okn,,'GMI_NAZ',,,20,,,'Gmina'@);
   _tab.win_fld(_okn,,'POW_NAZ',,,20,,,'Powiat'@);
   _tab.win_fld(_okn,,'WOJ_NAZ',,,20,,,'Województwo'@);
   _tab.win_act(_okn,,'Formuła','&Wybierz'@@,,'Wybór ulicy'@,"sel_exit()",,1,,,,'W');
   _tab.win_act(_okn,,'Szukaj');
   _tab.win_act(_okn,,'Kolejność');
   _tab.win_sel(_okn);
   {? _tab.select(,1)
   || _uli_naz:=_tab.ULI_NAZ;
      _msc_naz:=_tab.MSC_NAZ;
      _gmi_naz:=_tab.GMI_NAZ;
      _pow_naz:=_tab.POW_NAZ;
      _woj_naz:=_tab.WOJ_NAZ
   ?}
|| FUN.info('Nie znaleziono ulic'@+exec('opis_dla_komunikatu','teryt',_opi)+'.')
?};

_wyn:=obj_new('msc','uli','gmi','pow','woj');
_wyn.uli:=_uli_naz;
_wyn.msc:=_msc_naz;
_wyn.gmi:=_gmi_naz;
_wyn.pow:=_pow_naz;
_wyn.woj:=_woj_naz;
_wyn


\ter_uli_wybierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Wybór ulicy z TER_ULI i jej zapis w edytowanej tabeli.
::   WE: [_a] akronim tabeli
::       [_b] akronim pola "ulica" w tej tabeli
::       [_c] ewentualny akronim pola "miejscowość" w tej tabeli lub powiązanie do innej (np. MIA().NAZWA)
::       [_d] ewentualny akronim pola "gmina" w tej tabeli lub powiązanie do innej (np. GMINA().NAZWA)
::       [_e] ewentualny akronim pola "powiat" w tej tabeli lub powiązanie do innej (np. POWIAT().NAZWA)
::       [_f] ewentualny akronim pola "województwo" w tej tabeli lub powiązanie do innej (np. WOJEWODZ().NAZWA)
::       [_g] numer domu w tym samum polu co ulica 0 - nie (domyślnie), 1 - tak
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('')
|| return(~~)
?};
{? var_pres('_b')<>type_of('')
|| return(~~)
?};
{? var_pres('_c')<>type_of('')
|| _c:=''
?};
{? var_pres('_d')<>type_of('')
|| _d:=''
?};
{? var_pres('_e')<>type_of('')
|| _e:=''
?};
{? var_pres('_f')<>type_of('')
|| _f:=''
?};
{? var_pres('_g')<>type_of(0)
|| _g:=0
?};

_fm:=$(_a+'.'+_b);
_uli_naz0:=_fm();
_msc_naz0:='';
{? _c<>''
|| _fm:=$(_a+'.'+_c);
   _msc_naz0:=_fm()
?};
_gmi_naz0:='';
{? _d<>''
|| _fm:=$(_a+'.'+_d);
   _gmi_naz0:=_fm()
?};
_pow_naz0:='';
{? _e<>''
|| _fm:=$(_a+'.'+_e);
   _pow_naz0:=_fm()
?};
_woj_naz0:='';
{? _f<>''
|| _fm:=$(_a+'.'+_f);
   _woj_naz0:=_fm()
?};

_wyn:=exec('ter_uli_sel','teryt',_uli_naz0,_msc_naz0,_gmi_naz0,_pow_naz0,_woj_naz0);
_uli_naz:=_wyn.uli;
_msc_naz:=_wyn.msc;
_gmi_naz:=_wyn.gmi;
_pow_naz:=_wyn.pow;
_woj_naz:=_wyn.woj;

_zmiana:=0;
{? _uli_naz<>'' & _uli_naz<> _uli_naz0 & (_g=0 | _uli_naz0*_uli_naz<> 1)
|| _fm:=$(_a+'.'+_b+':=\''+gsub(_uli_naz,'\'','\\\'')+'\'');
   _fm();
   _zmiana:=1
?};
{? _c<>'' & _c*'()'=0  & _msc_naz<>'' & _msc_naz<> _msc_naz0
|| _fm:=$(_a+'.'+_c+':=\''+_msc_naz+'\'');
   _fm();
   _zmiana:=1
?};
{? _d<>'' & _d*'()'=0  & _gmi_naz<>'' & _gmi_naz<> _gmi_naz0
|| _fm:=$(_a+'.'+_d+':=\''+_gmi_naz+'\'');
   _fm();
   _zmiana:=1
?};
{? _e<>'' & _e*'()'=0  & _pow_naz<>'' & _pow_naz<> _pow_naz0
|| _fm:=$(_a+'.'+_e+':=\''+_pow_naz+'\'');
   _fm();
   _zmiana:=1
?};
{? _f<>'' & _f*'()'=0  & _woj_naz<>'' & _woj_naz<> _woj_naz0
|| _fm:=$(_a+'.'+_f+':=\''+_woj_naz+'\'');
   _fm();
   _zmiana:=1
?};

{? _zmiana
|| win_disp()
?};

~~


\xinfo_ter_widok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Aktualizacja stałych systemu: Dane z TERYT bez historii zmian i dodane do widoku stałych systemu
::----------------------------------------------------------------------------------------------------------------------
_fld:=spli_str('TER_AKT,TER_URL,TER_USR,TER_PASS,TER_KNT',',');

{! _ii:=1..obj_len(_fld)
|! _acr:=_fld[_ii];
   KST_DEF.cntx_psh();
   KST_DEF.index('SYMBOL');
   KST_DEF.prefix('XINFO.'+_acr,);
   {? KST_DEF.first()
   || {? KST_DEF.HISTORIA='T'
      || KST_DEF.HISTORIA:='N';
         KST_DEF.put()
      ?};
      {? KST_DEF.ZAPIS='N'
      || KST_DEF.ZAPIS:='T';
         KST_DEF.put()
      ?}
   ?};
  KST_DEF.cntx_pop();
  exec('add_acr','#stalesys',_acr,'','N','N','T','XINFO','ZWS')
!};

_kstzes_ref:=null();
KST_ZES.cntx_psh();
KST_ZES.index('SYMBOL');
KST_ZES.prefix('XINFO',);
{? KST_ZES.first()
|| _kstzes_ref:=KST_ZES.ref()
?};
KST_ZES.cntx_pop();

{? _kstzes_ref<>null()
|| KST_DOM.cntx_psh();
   KST_DOM.index('DOM_SYM');
   KST_DOM.prefix(_kstzes_ref);
   _kstdom_nowy:=1;
   {? KST_DOM.find_key('ZWS',)
   || _kstdom_nowy:=0
   || KST_DOM.blank();
      KST_DOM.KST_ZES:=_kstzes_ref;
      KST_DOM.B_DOMAIN:=exec('domain_ref','#b_domain','ZWS');
      KST_DOM.add()
   ?};
   KST_DOM.cntx_pop();
   {? _kstdom_nowy
   || {! _ii:=1..obj_len(_fld)
      |! _acr:=_fld[_ii];
         exec('add_acr','#stalesys',_acr,'','N','N','T','XINFO','ZWS')
      !}
   ?}
?};

obj_del(_fld);

~~


\opis_dla_komunikatu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: z podanego opisu tworzy opis podzielony na linie
::   WE: [_a] opis
::       [_b] dzielić, gdy jest tylko 1 linia: 0 nie (domyślnie), 1 tak
::   WY: opis podzielony na linie
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<>type_of(0)
|| _b:=0
?};
_opi0:=_a;
_opi1:=2-_opi0-1;
_ot:=spli_str(_opi1,', ');
{? obj_len(_ot)<=1 & ~_b
|| _opi:=_opi0
|| _opi:=':\n';
   {! _ii:=1..obj_len(_ot)
   |! _opi+=_ot[_ii];
      {? _ii<obj_len(_ot)
      || _opi+=',\n'
      ?}
   !}
?};
_opi


\WyszukajGmine
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Wyszukuje nazwę gminy na podstawie podanego kodu gminy
::   WE: _a  - siedmioznakowy kod gminy
::   WY: nazwa gminy
::----------------------------------------------------------------------------------------------------------------------
_kod:={? var_press('_a')=type_of('str') || _a || return('') ?};
_res:='';
{? _kod<>'' & +_kod=7
|| _woj:=2+_kod;
   _pow:=2+(2-_kod);
   _gmi:=2+(4-_kod);
   _r_gmi:=_kod+1;
   TER_GMI.cntx_psh();
   TER_GMI.index('GMI');
   TER_GMI.prefix(_woj,_pow,_gmi,_r_gmi);
   {? TER_GMI.first()
   || _res:=TER_GMI.NAZWA
   ?};
   TER_GMI.cntx_pop()
?};
_res


\ter_sprawdz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Tworzy tablicę parametrów dla ter_sprawdz.
::   WY: tablica parametrów
::----------------------------------------------------------------------------------------------------------------------
_par:=obj_new('PYT_KOM','TAB','ULI_P','MSC_P','GMI_P','POW_P','WOJ_P','ULI_ND','ULI','MSC','GMI','POW','WOJ');
:: PYT_KOM: w przypadku niezgodności P - pytanie czy kontynuować, K - komunikat, inne - nic
_par.PYT_KOM:='K';
:: TAB - akronim tabeli ze sprawdzanymi danymi, obowiązkowy
_par.TAB:='';
:: ULI_P - akronim pola z nazwą ulicy, zwracany przy niezgodności, obowiązkowy przy sprawdzaniu ulicy
_par.ULI_P:='';
:: MSC_P - akronim pola z nazwą miejscowości, zwracany przy niezgodności, obowiązkowy przy sprawdzaniu miejscowości
_par.MSC_P:='';
:: GMI_P - akronim pola z nazwą gminy, zwracany przy niezgodności, obowiązkowy przy sprawdzaniu gminy
_par.GMI_P:='';
:: POW_P - akronim pola z nazwą powiatu, zwracany przy niezgodności, obowiązkowy przy sprawdzaniu powiatu
_par.POW_P:='';
:: WOJ_P - akronim pola z nazwą województwa, zwracany przy niezgodności, obowiązkowy przy sprawdzaniu województwa
_par.WOJ_P:='';
:: _ULI_ND - numer domu w tym samym polu co ulica 0 - nie (domyślnie), 1 - tak
_par.ULI_ND:=0;
:: ULI - nazwa ulicy, jeżeli pusta, to wyliczana z TAB.ULI_P
_par.ULI:='';
:: MSC - nazwa miejscowości, jeżeli pusta, to wyliczana z TAB.MSC_P
_par.MSC:='';
:: GMI - nazwa gminy, jeżeli pusta, to wyliczana z TAB.GMI_P
_par.GMI:='';
:: POW - nazwa powiatu, jeżeli pusta, to wyliczana z TAB.POW_P
_par.POW:='';
:: WOJ - nazwa województwa, jeżeli pusta, to wyliczana z TAB.WOJ_P
_par.WOJ:='';
_par


\ter_sprawdz_a_aktu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Wylicza parametry WOJ, POW, GMI, MSC, ULI w tablicy parametrów.
::   WE: [_a] tablica parametrów (utworzona w ter_sprawdz_a)
::   WY: tablica parametrów
::----------------------------------------------------------------------------------------------------------------------
_par:=_a;
{? _par.ULI_P='' & _par.ULI<>''
|| _par.ULI:=''
?};
{? _par.MSC_P='' & _par.MSC<>''
|| _par.MSC:=''
?};
{? _par.GMI_P='' & _par.GMI<>''
|| _par.GMI:=''
?};
{? _par.POW_P='' & _par.POW<>''
|| _par.POW:=''
?};
{? _par.WOJ_P='' & _par.WOJ<>''
|| _par.WOJ:=''
?};
{? _par.TAB<>''
|| {? _par.ULI_P<>'' & _par.ULI=''
   || _fm:=$(_par.TAB+'.'+_par.ULI_P);
      _naz:=_fm();
      {? var_pres('_naz')=type_of('')
      || _par.ULI:=_naz
      ?}
   ?};
   {? _par.MSC_P<>'' & _par.MSC=''
   || _fm:=$(_par.TAB+'.'+_par.MSC_P);
      _naz:=_fm();
      {? var_pres('_naz')=type_of('')
      || _par.MSC:=_naz
      ?}
   ?};
   {? _par.GMI_P<>'' & _par.GMI=''
   || _fm:=$(_par.TAB+'.'+_par.GMI_P);
      _naz:=_fm();
      {? var_pres('_naz')=type_of('')
      || _par.GMI:=_naz
      ?}
   ?};
   {? _par.POW_P<>'' & _par.POW=''
   || _fm:=$(_par.TAB+'.'+_par.POW_P);
      _naz:=_fm();
      {? var_pres('_naz')=type_of('')
      || _par.POW:=_naz
      ?}
   ?};
   {? _par.WOJ_P<>'' & _par.WOJ=''
   || _fm:=$(_par.TAB+'.'+_par.WOJ_P);
      _naz:=_fm();
      {? var_pres('_naz')=type_of('')
      || _par.WOJ:=_naz
      ?}
   ?}
?};
_par


\ter_sprawdz_opi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Utworzenie opisu z szukanymi danymi wg tablicy parametrów
::   WE: [_a] tablica parametrów (utworzona w ter_sprawdz_a)
::----------------------------------------------------------------------------------------------------------------------
_par:=_a;
_opi:='';
{? _par.WOJ_P<>'' & _par.WOJ<>''
|| _opi:=' ('+'województwo'@+': '+_par.WOJ
?};
{? _par.POW_P<>'' & _par.POW<>''
|| {? _opi<>''
   || _opi+=', '
   || _opi+=' ('
   ?};
   _opi+='powiat'@+': '+_par.POW
?};
{? _par.GMI_P<>'' & _par.GMI<>''
|| {? _opi<>''
   || _opi+=', '
   || _opi+=' ('
   ?};
   _opi+='gmina'@+': '+_par.GMI
?};
{? _par.MSC_P<>'' & _par.MSC<>''
|| {? _opi<>''
   || _opi+=', '
   || _opi+=' ('
   ?};
   _opi+='miejscowość'@+': '+_par.MSC
?};
{? _par.ULI_P<>'' & _par.ULI<>''
|| {? _opi<>''
   || _opi+=', '
   || _opi+=' ('
   ?};
   _opi+='ulica'@+': '+_par.ULI
?};
{? _opi<>''
|| _opi+=')'
?};
_opi


\ter_sprawdz_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Tymczasowa tabela danych z TER_ULI zgodnych z podanymi parametrami.
::   WE: [_a] tablica parametrów (utworzona w ter_sprawdz_a)
::       [_b] nie uwzględniać wielkości liter 0 - nie (domyślnie), 1 - tak
::   WY: tabela tymczasowa
::----------------------------------------------------------------------------------------------------------------------
_par:=exec('ter_sprawdz_a_aktu','teryt',_a);
_uli_naz:='';
{? _par.ULI_P<>''
|| _uli_naz:=_par.ULI
?};
_msc_naz:='';
{? _par.MSC_P<>''
|| _msc_naz:=_par.MSC
?};
_gmi_naz:='';
{? _par.GMI_P<>''
|| _gmi_naz:=_par.GMI
?};
_pow_naz:='';
{? _par.POW_P<>''
|| _pow_naz:=_par.POW
?};
_woj_naz:='';
{? _par.WOJ_P<>''
|| _woj_naz:=_par.WOJ
?};
{? var_pres('_b')<>type_of(0)
|| _b:=0
?};

_uli_pol:='\'\'';
_uli1_pol:='\'\'';
_msc_pol:='\'\'';
_gmi_pol:='\'\'';
_pow_pol:='\'\'';
_woj_pol:='\'\'';

{? _uli_naz<>''
|| _uli_pol:='ter_uli.nazwa';
   _uli1_pol:='ter_uli.nazwa_1';
   _msc_pol:='ter_uli.msc_naz';
   _gmi_pol:='ter_uli.gmi_naz';
   _pow_pol:='ter_uli.pow_naz';
   _woj_pol:='ter_uli.woj_naz';
   _sql:= 'select woj_naz, pow_naz, gmi_naz, msc_naz, nazwa as uli_naz, nazwa_1 as uli_skr '
          'from ter_uli '
          'where ter_uli.msc=ter_uli.mscp'
|? _msc_naz<>''
|| _msc_pol:='ter_msc.nazwa';
   _gmi_pol:='ter_msc.gmi_naz';
   _pow_pol:='ter_msc.pow_naz';
   _woj_pol:='ter_msc.woj_naz';
   _sql:= 'select woj_naz, pow_naz, gmi_naz, nazwa as msc_naz '
          'from ter_msc '
          'where ter_msc.msc=ter_msc.mscp'
|? _gmi_naz<>''
|| _gmi_pol:='ter_gmi.nazwa';
   _pow_pol:='ter_gmi.pow_naz';
   _woj_pol:='ter_gmi.woj_naz';
   _sql:= 'select woj_naz, pow_naz, nazwa as gmi_naz '
          'from ter_gmi '
          'where 1=1'
|? _pow_naz<>''
|| _pow_pol:='ter_pow.nazwa';
   _woj_pol:='ter_pow.woj_naz';
   _sql:= 'select woj_naz, nazwa as pow_naz '
          'from ter_pow '
          'where 1=1'
|| _woj_pol:='ter_woj.nazwa';
   _sql:= 'select nazwa as woj_naz '
          'from ter_woj '
          'where 1=1'
?};

{? _b
|| _uli_naz:=-_uli_naz;
   _msc_naz:=-_msc_naz;
   _gmi_naz:=-_gmi_naz;
   _pow_naz:=-_pow_naz;
   _woj_naz:=-_woj_naz;
   _uli_pol:='lower('+_uli_pol+')';
   _uli1_pol:='lower('+_uli1_pol+')';
   _msc_pol:='lower('+_msc_pol+')';
   _gmi_pol:='lower('+_gmi_pol+')';
   _pow_pol:='lower('+_pow_pol+')';
   _woj_pol:='lower('+_woj_pol+')'
?};

{? _uli_naz<>''
|| _sql_uli:=gsub(_uli_pol,'\'','\'\'')+' = \''+gsub(_uli_naz,'\'','\'\'')+'\'';
:: Usuwanie ewentualnego numeru domu i lokalu
   {? _par.ULI_ND
   || _nn:=0;
      _stop:=0;
      _nap1:=_uli_naz;
      _nap2:='';
      {!
      |? _nap1<>'' & ~_stop
      |! {!
         |? _nap2:=(_nap1+1)+_nap2;
            _nap1:=_nap1-1;
            _nap1<>'' & (_nap1+1=' ' | 1+_nap2<>' ')
         !};
         {? ~exec('space_digit_in_string','teryt',_nap1) &
            ~exec('isDigit','#string',1+ exec('delspace','#string',_nap2))
         || _stop:=1
         ?};
         {? _nap1<>'' & ~_stop
         || _nn+=1;
            _sql_uli+=' or '+_uli_pol+' = \''+_nap1+'\''
         ?}
      !};
      {? _nn>0
      || _sql_uli:='('+_sql_uli+')'
      ?}
   ?};
   _sql+=' and '+_sql_uli
?};

{? _msc_naz<>''
|| _sql+=' and '+_msc_pol+' = \''+_msc_naz+'\''
?};

{? _gmi_naz<>''
|| _sql+=' and '+_gmi_pol+' = \''+_gmi_naz+'\''
?};

{? _pow_naz<>''
|| _sql+=' and '+_pow_pol+' = \''+_pow_naz+'\''
?};

{? _woj_naz<>''
|| _sql+=' and '+_woj_pol+' = \''+_woj_naz+'\''
?};

::sql_log('sql.log',1);
_tab:=sql(_sql);
_tab


\ter_sprawdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Sprawdzenie, czy w TER_ULI są dane zgodne z podanymi parametrami.
::   WE: [_a] tablica parametrów (utworzona w ter_sprawdz_a)
::   WY: tablica (WYNIK, POLE, DALEJ)
::       WYNIK 1 - są zgodne dane, 0 - brak
::       POLE ew. akronim niezgodnego pola
::       DALEJ 1 - kontynuować 0 - wrócić do edycji (gdy było pytanie, to jest decyzja użytkownika)
::----------------------------------------------------------------------------------------------------------------------
_par:=exec('ter_sprawdz_a_aktu','teryt',_a);

_wyn:=obj_new('WYNIK','POLE','DALEJ');
_wyn.WYNIK:=1;
_wyn.POLE:='';
_wyn.DALEJ:=1;

_opi:=exec('ter_sprawdz_opi','teryt',_par);

{? _opi<>''

|| _tab:=exec('ter_sprawdz_tab','teryt',_par);

   {? _tab.size()=0

   || _txt:='Wprowadzone dane adresowe nie są zgodne z rejestrem TERYT'@;
      _tab1:=exec('ter_sprawdz_tab','teryt',_par,1);
      {? _tab1.size()>0
      || _zle_lit:=1;
         _txt+=' (błędna wielkość liter)'@
      || _zle_lit:=0
      ?};
      _txt+=exec('opis_dla_komunikatu','teryt',_opi,1)+'.';

      {? _par.ULI<>''
      || _nn_zle:=5
      |? _par.MSC<>''
      || _nn_zle:=4
      |? _par.GMI<>''
      || _nn_zle:=3
      |? _par.POW<>''
      || _nn_zle:=2
      || _nn_zle:=1
      ?};

      _par1:=obj_ntab_del(_par);
      _nn_dob:=0;
      _nn:=_nn_zle-1;

      {!
      |? _nn>=1 & (_nn_dob=0)
      |! {? _nn=4
         || _par1.ULI_P:=''
         |? _nn=3
         || _par1.MSC_P:=''
         |? _nn=2
         || _par1.GMI_P:=''
         |? _nn=1
         || _par1.POW_P:=''
         ?};
         {? (_nn=4 & _par1.MSC='') | (_nn=3 & _par1.GMI='') | (_nn=2 & _par1.POW='')
            | (_nn=1 & _par1.WOJ='')
         || _nn-=1
         || &_tab;
            _tab:=exec('ter_sprawdz_tab','teryt',_par1);
            {? _tab.size()=0
            || &_tab1;
               _tab1:=exec('ter_sprawdz_tab','teryt',_par1,1);
               {? _tab1.size()>0
               || _zle_lit:=1
               || _zle_lit:=0
               ?};
               _nn_zle:=_nn;
               _nn-=1
            || _nn_dob:=_nn
            ?}
         ?}
      !};

      {? _nn_dob>=1
      || _opi:=exec('ter_sprawdz_opi','teryt',_par1);
         {? _opi<>''
         || _txt+='\n\n'+'Prawidłowe dane'@;
            _txt+=exec('opis_dla_komunikatu','teryt',_opi,1)+'.'
         ?}
      ?};

      {? _nn_zle>=1
      || &_par1;
         _par1:=obj_ntab_del(_par);
         {? _nn_zle<>5
         || _par1.ULI:=''
         ?};
         {? _nn_zle<>4
         || _par1.MSC:=''
         ?};
         {? _nn_zle<>3
         || _par1.GMI:=''
         ?};
         {? _nn_zle<>2
         || _par1.POW:=''
         ?};
         {? _nn_zle<>1
         || _par1.WOJ:=''
         ?};
         _opi:=exec('ter_sprawdz_opi','teryt',_par1);
         {? _opi<>''
         || _txt+='\n\n'+'Nie znaleziono'@;
            {? _zle_lit
            || _txt+=' (błędna wielkość liter)'@
            ?};
            _txt+=exec('opis_dla_komunikatu','teryt',_opi,1)+'.'
         ?}
      ?};

      _wyn.WYNIK:=0;
      {? _nn_zle=5
      || _wyn.POLE:=_par.ULI_P
      |? _nn_zle=4
      || _wyn.POLE:=_par.MSC_P
      |? _nn_zle=3
      || _wyn.POLE:=_par.GMI_P
      |? _nn_zle=2
      || _wyn.POLE:=_par.POW_P
      |? _nn_zle=1
      || _wyn.POLE:=_par.WOJ_P
      ?};

      {? _par.PYT_KOM='K'
      || _wyn.DALEJ:=_wyn.WYNIK;
         FUN.info(_txt)
      |? _par.PYT_KOM='P'
      || _txt+='\n\n'+'Czy kontynuować?';
         _wyn.DALEJ:=FUN.ask(_txt)
      ?}

   ?}

?};

_wyn


\space_digit_in_string
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Sprawdzenie, czy w napisie występuje spacja + cyfra (sprawdzanie czy w napisie może być numer domu)
::   WE: [_a] napis
::   WY: 1 - tak, 0 - nie
::----------------------------------------------------------------------------------------------------------------------
_jest:=0;
{? var_press('_a')=type_of('') & _a<>''
|| _napis:=_a;
   _ii:=0;
   {!
   |? _ii<=9 & ~_jest
   |! _nap:=' '+$_ii;
     {? _napis*_nap>0
     || _jest:=1
     ?};
     _ii+=1
   !}
?};
_jest

:Sign Version 2.0 jowisz:1045 2023/10/30 11:09:37 28c447d017c6dcab69f5986996e6fd9cf60e58941e42e7e2270e0af072f8d2093be241f5fb32df54c6990251cf9f5a930178aece633c1e95e9108b7ed44ffbca9b3c2dd43e87f6d370f4ac8601a9ac61da4e91dc661fffe1d372885075295eb8faaf49e85e4f3a2c984e8983402f859cd79afd4a68ace5783da0a35f64440705
