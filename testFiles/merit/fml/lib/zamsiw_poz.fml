:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zamsiw_poz.fml
:: Utworzony: 12.05.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Obsługa zamówień sprzedaży/wewnętrznych - pozycje zamówień
::======================================================================================================================


\buffer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.02]
:: OPIS: Zwraca obiekt nazwany - bufor tabeli ZK_P
::   WY: obj_new()
::----------------------------------------------------------------------------------------------------------------------
exec('ZK_P','buffer')


\pwzj2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed wyświetleniem pól dla jednostek dodatkowych (pozycje zamówień sprzedaży)
::  OLD: \pwzj2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? (1+BEER.ZMJM)='T'
|| ''
|| exec('findfnv','#color')
?}


\przj2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcją pól dla jednostek dodatkowych (pozycje zamówień sprzedaży)
::  OLD: \przj2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? ATR.MJS='PD_K' & PD_K.TYPYZAM().R='W'
|| {? cur_afld<>'J2' & PD_K.M().J=PD_K.J2
   || 0
   || {? 'WS2 J2 IL2'*cur_afld() || exec('ustazprz','zamsiw_poz',PD_K.M,PD_K.M().J) ?};
      {? PD_K.T2='A' & {? JM.f_active() || JM.f_size<=1 || 1 ?}
      || 0
      |? cur_afld()='WS2' & PD_K.T2='A'
      || 0
      |? (BEER.ZMJM+1)='1'
      || BEER.IL22:=PD_K.IL2;
         'WS2 J2 IL2'*cur_afld()
      || (1+BEER.ZMJM)='T'
      ?}
   ?}
|? ATR.MJS='ZK_P' | (ATR.MJS='M_ATR' & cur_tab(1)=ZK_P)
|| _jmg:=ZK_P.M().J2<>null();
   {? (cur_afld()<>'J2' & ZK_P.M().J=ZK_P.J2) | (_jmg & 'WS2 J2'*cur_afld())
   || 0
   || {? 'WS2 J2 IL2'*cur_afld() || exec('ustazprz','zamsiw_poz',ZK_P.M,ZK_P.M().J) ?};
      {? ZK_P.T2='A' & {? JM.f_active() || JM.f_size<=1 || 1 ?}
      || 0
      |? cur_afld()='WS2' & ZK_P.T2='A'
      || 0
      |? (BEER.ZMJM+1)='1'
      || BEER.IL22:=ZK_P.IL2;
         'WS2 J2 IL2'*cur_afld()
      || (1+BEER.ZMJM)='T'
      ?}
   ?}
|| {? (cur_afld()<>'J2' & REZ.M().J=REZ.J2) | ('J2 WS2'*cur_afld() & REZ.M().J2<>null() & REZ.J2=REZ.M().J2)
    | ('J2 WS2'*cur_afld() & REZ.TYP='Z' & REZ.ZK_P<>null())
   || 0
   || {? 'WS2 J2 IL2'*cur_afld() & (REZ.JM=REZ.J2 | REZ.J2=null) || exec('ustazprz','zamsiw_poz',REZ.M,REZ.M().J) ?};
      {? REZ.T2='A' & {? JM.f_active() || JM.f_size<=1 || 1 ?}
      || 0
      |? cur_afld()='WS2' & REZ.T2='A'
      || 0
      |? (BEER.ZMJM+1)='1'
      || BEER.IL22:=REZ.IL2;
         'WS2 J2 IL2'*cur_afld()
      || (1+BEER.ZMJM)='T'
      ?}
   ?}
?}


\pozj2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji pól dla jednostek dodatkowych (pozycje zamówień sprzedaży)
::  OLD: \pozj2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
_pril:=BEER.IL22;

{? (ATR.MJS='PD_K' | (ATR.MJS='M_ATR' & cur_tab(1)=PD_K)) & PD_K.TYPYZAM().R='W'
||
   {? cur_afld()='J2' & (PD_K.T2='A' | (PD_K.T2='R' & PD_K.WS2=0))
   || PD_K.WS2:=exec('prz','jm',PD_K.M,PD_K.J2,PD_K.M().J)
   ?};

   {? PD_K.M().J=PD_K.J2
   || _dokl_s:=_dokl_m:=exec('jaka_dok_m','jm',PD_K.M);
      _dokl_m:=exec('jaka_dok_m','jm',PD_K.M)
   || _dokl_s:=exec('jaka_dok_mjm','jm',PD_K.M,PD_K.J2,PD_K.M().J);
      _dokl_m:=exec('jaka_dok_m','jm',PD_K.M)
   ?};
   {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
   {? PD_K.T2<>'N' & PD_K.WS2
   || _il2:=PD_K.IL/PD_K.WS2 $ (_dokl_s+1);
      roundmet(BEER.MDOKL);
      _il2:=_il2 $ _dokl_s;
      roundmet(5)
   || _il2:=0
   ?};
   {? PD_K.IL=0 | (_il2>0 & _il2<>PD_K.IL2
    & FUN.ask('Ilość wyliczona wg jednostki dodatkowej jest różna od ilości.\nCzy zmienić ilość?'@))
   || PD_K.IL:=PD_K.IL2*PD_K.WS2 $ _dokl_m
   || _mjs:=ATR.MJS;
      ATR.MJS:='PD_K';
      exec('aktzil2','zamsiw_poz');
      ATR.MJS:=_mjs
   ?};
   exec('pd_k_obl','plan_dostaw');
   win_disp
|? ATR.MJS='ZK_P' | (ATR.MJS='M_ATR' & cur_tab(1)=ZK_P)
|| _jmg:=ZK_P.M().J2<>null();
   {? ZK_P.RODZ='Z' & cur_afld()='J2' & (ZK_P.T2='A' | ZK_P.T2='R')
   || _ws2:=exec('prz','jm',ZK_P.M,ZK_P.M().J,ZK_P.J2);
      {? ZK_P.T2='A'
       | (ZK_P.T2='R' & ZK_P.WS2=0)
       | (ZK_P.T2='R' & ZK_P.WS2<>_ws2 & _ws2<>0
        & FUN.ask('Współczynnik przeliczenia jest różny\nod przypisanego w przelicznikach jednostek.\nCzy zamienić?'@))
      || ZK_P.WS2:=_ws2
      ?}
   |? ZK_P.RODZ='W' & cur_afld()='J2' & (ZK_P.T2='A' | (ZK_P.T2='R' & ZK_P.WS2=0))
   || ZK_P.WS2:=exec('prz','jm',ZK_P.M,ZK_P.J2,ZK_P.M().J)
   ?};

   {? ZK_P.M().J=ZK_P.J2
   || _dokl_s:=_dokl_m:=exec('jaka_dok_m','jm',ZK_P.M);
      _dokl_m:=exec('jaka_dok_m','jm',ZK_P.M)
   || _dokl_s:=exec('jaka_dok_mjm','jm',ZK_P.M,ZK_P.J2,ZK_P.M().J);
      _dokl_m:=exec('jaka_dok_m','jm',ZK_P.M)
   ?};
   {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
   {? ZK_P.RODZ='Z'
   || {? _jmg & ZK_P.WS2=0 || ZK_P.WS2:=exec('oblWSP','jm',ZK_P.M) ?};
      _ws2:={? _jmg || 1/ZK_P.WS2 || ZK_P.WS2 ?};
      {? (ZK_P.IL2>0 & (ZK_P.ILZ=0 | ZK_P.IL2<>BEER.IL22))
      || ZK_P.ILP:=ZK_P.ILZ:={? _ws2 || ZK_P.IL2/_ws2 || 0 ?} $ _dokl_m
      ?};
      {? ZK_P.ILZ>0 & cur_afld()<>'IL2'
      || ZK_P.IL2:=ZK_P.ILZ*_ws2 $ (_dokl_s+1);
         roundmet(BEER.MDOKL);
         ZK_P.IL2:=ZK_P.IL2 $ _dokl_s;
         roundmet(5)
      ?};
      BEER.IL22:=ZK_P.IL2
   || {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
      {? ZK_P.T2<>'N' & ZK_P.WS2
      || _il2:=ZK_P.ILZ/ZK_P.WS2 $ (_dokl_s+1);
         roundmet(BEER.MDOKL);
         _il2:=_il2 $ _dokl_s;
         roundmet(5)
      || _il2:=0
      ?};
      {? ZK_P.ILZ=0 | (_il2>0 & _il2<>ZK_P.IL2
       & FUN.ask('Ilość wyliczona wg jednostki dodatkowej jest różna od ilości.'@+
                 '\n'+'Czy zmienić ilość?'@))
      || ZK_P.ILZ:=ZK_P.IL2*ZK_P.WS2 $ _dokl_m
      || _mjs:=ATR.MJS;
         ATR.MJS:='ZK_P';
         exec('aktzil2','zamsiw_poz');
         ATR.MJS:=_mjs
      ?}
   ?};
   ZK_P.efld_opt(ZK_P.win_edit('?'),'editable=1',,'ILZ');
   exec('war_pozz','zamsiw_poz')
|| {? BEER.CZY_REZT & cur_afld()='J2' & (REZ.T2='A' | REZ.T2='R')
   || _ws2:=exec('prz','jm',REZ.M,REZ.J2,REZ.M().J);
      {? REZ.T2='A'
       | (REZ.T2='R' & REZ.WS2=0)
       | (REZ.T2='R' & REZ.WS2<>_ws2 & _ws2<>0
        & FUN.ask('Współczynnik przeliczenia jest różny\nod przypisanego w przelicznikach jednostek.'@+'\n'+
                  'Czy zamienić?'@))
      || REZ.WS2:=_ws2
      ?}
   ?};

   {? REZ.M().J=REZ.J2
   || _dokl_s:=_dokl_m:=exec('jaka_dok_m','jm',REZ.M);
      _dokl_m:=exec('jaka_dok_m','jm',REZ.M);
      REZ.WS2:=1;
      REZ.IL2:=REZ.ILR
   || _dokl_s:=exec('jaka_dok_mjm','jm',REZ.M,REZ.J2,REZ.M().J);
      _dokl_m:=exec('jaka_dok_m','jm',REZ.M)
   ?};
   {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
   {? BEER.CZY_REZT
   || {? REZ.ILR>0  & cur_afld()<>'IL2'
      || REZ.IL2:=REZ.ILR/REZ.WS2 $ (_dokl_s+1);
         roundmet(BEER.MDOKL);
         REZ.IL2:=REZ.IL2 $ _dokl_s;
         roundmet(5)
      |? REZ.IL2>0
      || _ilr:={? REZ.WS2 || REZ.IL2*REZ.WS2 || 0 ?} $ _dokl_m;
         {? REZ.ILR<>0 & REZ.ILR=_ilr
         || 1
         |? REZ.ILR=0
           | FUN.ask('Rozbieżność  pomiędzy podaną ilością rezerwacji: %1,\n'
                     'a obliczoną według ilości w jednostce dodatkowej: %2.\n\n'
                     'Czy zaakceptować wg obliczeń?'@[form(REZ.ILR,20,_dokl_m),form(_ilr,20,_dokl_m)])
         || REZ.ILR:=_ilr
         ?}
      ?}
   || {? (REZ.ZK_P<>null() & REZ.ZK_P().RODZ='Z') | (REZ.ZK_N<>null() & REZ.ZK_N().T().R='Z')
      || _jmg:=REZ.M().J2<>null() & REZ.J2=REZ.M().J2 & REZ.TYP='Z';
         {? ~_jmg
         || {? REZ.IL2>0 & (REZ.ILR=0 | REZ.IL2<>BEER.IL22)
            || REZ.ILR:={? REZ.WS2 || REZ.IL2/REZ.WS2 || 0 ?} $ _dokl_m
            ?};
            {? REZ.ILR>0 & cur_afld()<>'IL2'
            || REZ.IL2:=REZ.ILR*REZ.WS2 $ (_dokl_s+1);
               roundmet(BEER.MDOKL);
               REZ.IL2:=REZ.IL2 $ _dokl_s;
               roundmet(5)
            ?};
            BEER.IL22:=REZ.IL2
         || exec('oblJMG','jm',REZ,'ILR',0)
         ?}
      || {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
         {? REZ.T2<>'N' & REZ.WS2
         || _il2:=REZ.ILR/REZ.WS2 $ (_dokl_s+1);
            roundmet(BEER.MDOKL);
            _il2:=_il2 $ _dokl_s;
            roundmet(5)
         || _il2:=0
         ?};
         _jmg:=REZ.M().J2<>null() & REZ.J2=REZ.M().J2 & REZ.TYP='Z';
         {? REZ.ILR=0 | (_il2>0 & _il2<>REZ.IL2
          & {? _jmg | (REZ.TYP='Z' & REZ.ZK_P().RODZ='W')
            || cur_afld()='IL2'
            || FUN.ask('Ilość wyliczona wg jednostki dodatkowej jest różna od ilości.'@+'\n'+
                       'Czy zmienić ilość?'@)
            ?})
         || REZ.ILR:=REZ.IL2*REZ.WS2 $ _dokl_m
         || _mjs:=ATR.MJS;
            ATR.MJS:='REZ';
            exec('aktzil2','zamsiw_poz');
            ATR.MJS:=_mjs
         ?}
      ?}
   ?};
   win_disp()
?};
{? ATR.MJS='ZK_P' & ZK_P.ILZ<>0 || {? ~exec('po_ilz','zamsiw_poz') || ZK_P.IL2:=_pril; 0 || 1 ?} || 1 ?}


\ustazprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: ustawia zmienna BEER.ZMJM
::   WE: [_a] - ref indeksu materiałowego
::       [_b] - ref jednostki miary
::  OLD: \ustazprz/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0
|| BEER.JMZ:=exec('get','#params',400999,2)='T';
   BEER.ZMJM:='NN0';
   BEER.TAB:={? BEER.CZY_REZT || 'REZ' || 'ZK_P' ?};
   _kod:=exec('get','#params',400000,2);
   {? BEER.CZY_REZT & _kod*'RT'
   || {? 'RA'*(_rodz:=exec('get','#params',400501,2)) || BEER.ZMJM:='T'+_rodz+'0' ?}
   |? ~BEER.CZY_REZT & _kod*{? ZK_N.T().R='Z' || 'ZK' || 'ZW' ?}
   || {? 'RA'*(_rodz:=exec('get','#params',{? ZK_N.T().R='Z' || 400201 || 400601 ?},2)) || BEER.ZMJM:='T'+_rodz+'0' ?}
   ?}
|? _a<>null
|| _czyrez:=(type_of(cur_tab)<>type_of(~~) & (3+cur_tab.name())='rez') | BEER.CZY_REZT
      | (var_pres('typ')=type_of(0) & typ=3);
   _jmg:=exec('FindAndGet','#table',M,_a,,"J2",null());
   _dom:=null();
   JM.win_dict('WERF');
   JM.f_clear();
   JM.index('KOD');
   JM.prefix();
   JM.f_set('KOD,NAZ',,,);
   {? _jmg<>null()
   || _dom:=_jmg
   |? (1+(1-BEER.ZMJM))='A' & JM.f_first()
   || {!
      |? {? exec('prz','jm',_a,_b,JM.ref())<>0
         || {? exec('FindInSet','#table','MJM','JM',JM.ref(),_a,"MJM.DOM",,,0) || _dom:=JM.ref() ?};
            JM.f_next()
         || JM.f_del()
         ?}
      !}
   |? JM.f_first()
   || {!
      |? {? exec('FindInSet','#table','MJM','JM',JM.ref(),_a,"MJM.DOM",,,0) || _dom:=JM.ref() ?};
         _dom=null() & JM.f_next()
      !}
   ?};
   _ile:=JM.f_size();
   {? _jmg<>null()
   || {? ATR.MJS='PD_K' & PD_K.TYPYZAM().R='W'
      || PD_K.T2:='M';
         PD_K.J2:=_jmg;
         {? PD_K.WS2=0 | PD_K.WS2=1 || PD_K.WS2:=exec('oblWSP','jm',PD_K.M) ?}
      |? ~_czyrez & ZK_P.J2=null()
      || ZK_P.T2:='M';
         ZK_P.J2:=_jmg;
         {? ZK_P.WS2=0 | ZK_P.WS2=1 || ZK_P.WS2:=exec('oblWSP','jm',ZK_P.M) ?}
      |? ZK_P.J2=null()
      || REZ.T2:='M';
         REZ.J2:=_jmg;
         {? REZ.WS2=0 | REZ.WS2=1 || REZ.WS2:=exec('oblWSP','jm',REZ.M) ?}
      ?}
   |? ATR.MJS='PD_K' & PD_K.TYPYZAM().R='W'
   ||
      {? ~_ile  || BEER.ZMJM:='N'+(1-BEER.ZMJM)
      |? _ile=1 || JM.f_first(); PD_K.J2:=JM.ref(); PD_K.WS2:=exec('prz','jm',_a,JM.ref(),_b)
      |? PD_K.J2=null & exec('FindInSet','#table','MJM','JM',PD_K.M().J,PD_K.M)<>null
      || PD_K.J2:={? _dom<>null()
                  || _dom
                  || exec('FindInSet','#table','MJM','JM',PD_K.M().J,PD_K.M,"MJM.JP",,,null())
                  ?};
         PD_K.WS2:={? PD_K.TYPYZAM().R='Z'
                   || exec('prz','jm',PD_K.M,PD_K.M().J,PD_K.J2)
                   || exec('prz','jm',PD_K.M,PD_K.J2,PD_K.M().J)
                   ?}
      |? PD_K.J2=null & exec('FindInSet','#table','MJM','JP',PD_K.M().J,PD_K.M)<>null
      || PD_K.J2:={? _dom<>null()
                  || _dom
                  || exec('FindInSet','#table','MJM','JP',PD_K.M().J,PD_K.M,"MJM.JM",,,null())
                  ?};
         PD_K.WS2:={? PD_K.TYPYZAM().R='Z'
                   || exec('prz','jm',PD_K.M,PD_K.M().J,PD_K.J2)
                   || exec('prz','jm',PD_K.M,PD_K.J2,PD_K.M().J)
                   ?}
      ?}
   |? ~_czyrez
   || {? ~_ile  || BEER.ZMJM:='N'+(1-BEER.ZMJM)
      |? _ile=1 || JM.f_first(); ZK_P.J2:=JM.ref(); ZK_P.WS2:=exec('prz','jm',_a,JM.ref(),_b)
      |? ZK_P.J2=null & exec('FindInSet','#table','MJM','JM',ZK_P.M().J,ZK_P.M)<>null
      || ZK_P.J2:={? _dom<>null()
                  || _dom
                  || exec('FindInSet','#table','MJM','JM',ZK_P.M().J,ZK_P.M,"MJM.JP",,,null())
                  ?};
         ZK_P.WS2:={? ZK_P.RODZ='Z'
                   || exec('prz','jm',ZK_P.M,ZK_P.M().J,ZK_P.J2)
                   || exec('prz','jm',ZK_P.M,ZK_P.J2,ZK_P.M().J)
                   ?}
      |? ZK_P.J2=null & exec('FindInSet','#table','MJM','JP',ZK_P.M().J,ZK_P.M)<>null
      || ZK_P.J2:={? _dom<>null()
                  || _dom
                  || exec('FindInSet','#table','MJM','JP',ZK_P.M().J,ZK_P.M,"MJM.JM",,,null())
                  ?};
         ZK_P.WS2:={? ZK_P.RODZ='Z'
                   || exec('prz','jm',ZK_P.M,ZK_P.M().J,ZK_P.J2)
                   || exec('prz','jm',ZK_P.M,ZK_P.J2,ZK_P.M().J)
                   ?}
      ?}
   ||
      {? ~_ile  || BEER.ZMJM:='N'+(1-BEER.ZMJM)
      |? _ile=1 || JM.f_first(); REZ.J2:=JM.ref(); REZ.WS2:=exec('prz','jm',_a,_b,JM.ref())
      |? REZ.J2=null & exec('FindInSet','#table','MJM','JM',REZ.M().J,REZ.M)<>null
      || REZ.J2:={? _dom<>null()
                 || _dom
                 || exec('FindInSet','#table','MJM','JM',REZ.M().J,REZ.M,"MJM.JP",,,null())
                 ?};
         REZ.WS2:={? ~BEER.CZY_REZT
                   & ((REZ.ZK_P<>null() & REZ.ZK_P().RODZ='Z') | (REZ.ZK_N<>null() & REZ.ZK_N().T().R='Z'))
                  || exec('prz','jm',REZ.M,REZ.M().J,REZ.J2)
                  || exec('prz','jm',REZ.M,REZ.J2,REZ.M().J)
                  ?}
      |? REZ.J2=null & exec('FindInSet','#table','MJM','JP',REZ.M().J,REZ.M)<>null
      || REZ.J2:={? _dom<>null()
                 || _dom
                 || exec('FindInSet','#table','MJM','JP',REZ.M().J,REZ.M,"MJM.JM",,,null())
                 ?};
         REZ.WS2:={? ~BEER.CZY_REZT
                   & ((REZ.ZK_P<>null() & REZ.ZK_P().RODZ='Z') | (REZ.ZK_N<>null() & REZ.ZK_N().T().R='Z'))
                  || exec('prz','jm',REZ.M,REZ.M().J,REZ.J2)
                  || exec('prz','jm',REZ.M,REZ.J2,REZ.M().J)
                  ?}
      || REZ.J2:=REZ.M().J; REZ.WS2:=1
      ?}
   ?}
?}


\aktzil2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: aktualizuje pole ZK_P.IL2 po zmianie pola ZK_P.IL
::  OLD: \aktzil2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? ATR.MJS='PD_K' & PD_K.TYPYZAM().R='W'
|| {? PD_K.T2<>'N' & PD_K.WS2<>0 & PD_K.M().J<>PD_K.J2
   || _dokl_m:=exec('jaka_dok_m','jm',PD_K.M);
      _dokl_s:=exec('jaka_dok_mjm','jm',PD_K.M,PD_K.J2,PD_K.M().J);
      {? _dokl_s<0 || _dokl_s:=_dokl_m ?};

      {? PD_K.T2<>'N' & PD_K.WS2
      || PD_K.IL2:=PD_K.IL/PD_K.WS2 $ (_dokl_s+1);
         roundmet(BEER.MDOKL);
         PD_K.IL2:=PD_K.IL2 $ _dokl_s;
         roundmet(5)
      ?}
   || PD_K.J2:=PD_K.M().J;
      PD_K.WS2:=1;
      PD_K.IL2:=PD_K.IL
   ?}
|? ATR.MJS='ZK_P'
|| {? ZK_P.M().J2<>null()
   || exec('oblJMG','jm',ZK_P,'ILZ',0);
      BEER.IL22:=ZK_P.IL2;
      1
   |? ZK_P.T2<>'N' & ZK_P.WS2<>0 & ZK_P.M().J<>ZK_P.J2
   || {? ZK_P.RODZ='Z'
      || _dokl:=exec('jaka_dok_mjm','jm',ZK_P.M,ZK_P.J2,ZK_P.M().J);
         {? _dokl<0 || _dokl:=exec('jaka_dok_m','jm',ZK_P.M) ?};
         ZK_P.IL2:=ZK_P.ILZ*ZK_P.WS2 $ (_dokl+1);
         roundmet(BEER.MDOKL);
         ZK_P.IL2:=ZK_P.IL2 $ _dokl;
         roundmet(5)
      || _dokl_m:=exec('jaka_dok_m','jm',ZK_P.M);
         _dokl_s:=exec('jaka_dok_mjm','jm',ZK_P.M,ZK_P.J2,ZK_P.M().J);
         {? _dokl_s<0 || _dokl_s:=_dokl_m ?};

         {? ZK_P.T2<>'N' & ZK_P.WS2
         || ZK_P.IL2:=ZK_P.ILZ/ZK_P.WS2 $ (_dokl_s+1);
            roundmet(BEER.MDOKL);
            ZK_P.IL2:=ZK_P.IL2 $ _dokl_s;
            roundmet(5)
         ?}
      ?}
   || ZK_P.J2:=ZK_P.M().J;
      ZK_P.WS2:=1;
      ZK_P.IL2:=ZK_P.ILZ
   ?}
|| {? REZ.T2<>'N' & REZ.WS2<>0 & REZ.M().J<>REZ.J2
   || {? ((REZ.ZK_P<>null() & REZ.ZK_P().RODZ='Z') | (REZ.ZK_N<>null() & REZ.ZK_N().T().R='Z'))
      || _dokl_m:=exec('jaka_dok_mjm','jm',REZ.M,REZ.J2,REZ.M().J);
         {? _dokl_m<0 || _dokl_m:=exec('jaka_dok_m','jm',REZ.M) ?};
         REZ.IL2:=REZ.ILR*REZ.WS2 $ (_dokl_m+1);
         roundmet(BEER.MDOKL);
         REZ.IL2:=REZ.IL2 $ _dokl_m;
         roundmet(5)
      || _dokl_m:=exec('jaka_dok_m','jm',REZ.M);
         _dokl_s:=exec('jaka_dok_mjm','jm',REZ.M,REZ.J2,REZ.M().J);
         {? _dokl_s<0 || _dokl_s:=_dokl_m ?};

         {? REZ.T2<>'N' & REZ.WS2
         || REZ.IL2:=REZ.ILR/REZ.WS2 $ (_dokl_s+1);
            roundmet(BEER.MDOKL);
            REZ.IL2:=REZ.IL2 $ _dokl_s;
            roundmet(5)
         ?}
      ?}
   || REZ.J2:=REZ.M().J;
      REZ.WS2:=1;
      REZ.IL2:=REZ.ILR
   ?}
?}


\blzj2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: blankuje jednostke dodatkowa
::  OLD: \blzj2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
null


\blzt2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: blankuje typ przeliczenia jednostki dodatkowej (pozycje zamówień klienta)
::  OLD: \blzt2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
1+(1-BEER.ZMJM)


\aktznzkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizuje statusy pozycji zamowien wg podanej tabeli
::   WE: _a - tabela ref-ow sql-owych lub ZK_P.ref() w przypadku _b=1
::       [_b] - domyslnie 0 1-ref ZK_P
::       [_c] - 0(domyślnie) 1-tryb obliczenia ilości bez rezerwacji dla pozycji powiązanych ze zleceniami
::  OLD: \aktznzkp/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
_aktbez:={? var_pres('_c')=type_of(0) || _c || 0 ?};

ZK_P.cntx_psh();
{? {? ~_b || _a.clear(); _a.first() || 1 ?}
|| {!
   |? ZK_P.clear();
      {? {? ~_b
         || (_rp:=BB.sqlint(_a.ZKP); _rp>0) & ZK_P.r_lock(1,1,1,_rp,form(8+_a.ZKP)) & ZK_P.seek(_a.ZKP)
         || (#_a)>0 & ZK_P.r_lock(1,1,1,#_a,ref_name(_a)) & ZK_P.seek(_a)
         ?} & ZK_P.r_lock(1,1,1)
      || {? ZK_P.M().RODZ='T'
         || ZK_P.ZBB:='N';
            ZK_P.ZBZ:='N';
            ZK_P.ZNB:={? exec('FindInSet','#table','REZ','ZK_P','B',ZK_P.ref())<>null || 'T' || 'N' ?};
            ZK_P.ZNW:={? exec('spr_waru','rezerwacje',ZK_P.ref()) || 'T' || 'N' ?};
            ZK_P.ZNR:={? ZK_P.ILP<ZK_P.ILZ || 'T' || 'N' ?};
            _ilr:=exec('ile_reze','rezerwacje',ZK_P.ref());
            ZK_P.SR:=_ilr[2];
            ZK_P.DOR:=_ilr[1];
            ZK_P.ILRB:=_ilr[2];
            ZK_P.ILRW:=_ilr[3];
            ZK_P.ILRD:=_ilr[4];
            ZK_P.ILRA:=_ilr[5];
            ZK_P.ZNB:={? ZK_P.ILRB>0 || 'T' || 'N' ?};
            ZK_P.ZNW:={? ZK_P.ILRW>0 || 'T' || 'N' ?};
            ZK_P.ZNR:={? ZK_P.ILP<ZK_P.ILZ || 'T' || 'N' ?};
            ZK_P.DOST:=ZK_P.ILRD>0;
            ZK_P.REZ:=(ZK_P.ILRB>0 | ZK_P.ILRW>0);
            _rezzlzam:=_ilr[6];
            obj_del(_ilr);
            _doroz:=ZK_P.DOR+(ZK_P.ILRW-_rezzlzam-ZK_P.ILRA);
            ZK_P.ILBEZ:={? ZK_P.END || 0 |? ZK_P.ILP>_doroz || ZK_P.ILP-_doroz || 0 ?};
            ZK_P.CZYBEZ:={? ZK_P.ILBEZ>0 || 'T' || 'N' ?};
            ZK_P.put(1);
            exec('zkp_upd_ilosc','px_obj');
            {? _rezzlzam>0 & _aktbez
            || VAR_DEL.delete('__magmat','__stm','__zkn_t','__zkp_t','__usr_t');
               __magmat:=tab_tmp(2,'MAT','STRING[16]','','MAG','STRING[16]','');
               __stm:=tab_tmp(1,'MAG','STRING[16]',''
                    ,'SD','REAL',''
                    ,'SR','REAL',''
                    ,'SP','REAL',''
                    ,'BYL','INTEGER','');

               __usr_t:=tab_tmp(2,'USR','STRING[16]',''
                         ,'TYP','STRING[1]',''
                         ,'SD','REAL','');
               __zkn_t:=tab_tmp(1,'ZKN','STRING[16]','');

               exec('bez_rez','rezerwacje',ZK_P.M);
               VAR_DEL.delete('__magmat','__stm','__zkn_t','__zkp_t','__usr_t')
            ?}
         || _czyusl:=(ZK_P.RODZ='W' | (ZK_P.RMAG<>null & ZK_P.RMAG().U='T')) & ZK_P.ILP>0;
            ZK_P.ZBB:={? _czyusl || 'T' || 'N' ?};
            ZK_P.ZBZ:='N';
            ZK_P.ZNB:='N';
            ZK_P.ZNW:='N';
            ZK_P.ZNR:={? ZK_P.ILP<ZK_P.ILZ || 'T' || 'N' ?};
            ZK_P.SR:=0;
            ZK_P.DOR:=0;
            ZK_P.ILRB:=0;
            ZK_P.ILRW:=0;
            ZK_P.ILRD:=0;
            ZK_P.ILRA:=0;
            ZK_P.DOST:=0;
            ZK_P.REZ:=ZK_P.DT>=date() & (ZK_P.ILRB>0 | ZK_P.ILRW>0);
            ZK_P.ILBEZ:=ZK_P.ILP;
            ZK_P.CZYBEZ:='N';
            ZK_P.put(1);
            exec('zkp_upd_ilosc','px_obj')
         ?};
         ZK_P.r_unlock()
      ?};
      {? ~_b || _a.next() || 0 ?}
   !}
?};
ZK_P.cntx_pop();
~~


\all_reze
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: oblicza pola SR dla wszystkich pozycji zamowienia
::  OLD: \all_reze/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_mat:=tab_tmp(1,'KTM','STRING[50]','');
_wew:=0;

ZK_P.cntx_psh;

ZK_P.index('TYPN');
ZK_P.prefix('A','Z',_a,1);
{? ZK_P.first
|| _wew:=ZK_P.RODZ='W';
   {!
   |? _mat.clear(); _mat.blank(); _mat.KTM:=$ZK_P.M; _mat.add(1);
      ZK_P.SR:=exec('obl_wgsr','zamsiw_poz',ZK_P.N,ZK_P.POZ);
      ZK_P.put(1);
      ZK_P.next
   !}
?};
:: odswiezenie stanu na magazynach zwiazanych z uzytkownikiem
_mat.clear();
{? _mat.first()
|| {!
   |? exec('zamstany','magazyn_stan',exec('FindAndGet','#table','M',_mat.KTM,,,null()),_wew);
      _mat.next()
   !}
?};
obj_del(_mat);

ZK_P.cntx_pop


\obl_wgsr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: obliczenie sumy rezerwacji
::   WE: _a - naglowek
::       _b - pozycja
::       [_c] - typ
::       [_d] - material
::       [_e] - Uzytkownik (ref)
::       [_f] - magazyn (ref)
::       [_g] - numer kolejny
::       [_h] - czy odrzucac inwenture domyslnie 0-nie 1-tak
::  OLD: \obl_wgsr/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>2 || _c:='Z' ?} || _c:='Z' ?};
{? _>=8 || {? type_of(_h)<>1 || _h:=0 ?} || _h:=0 ?};

_wyn:=0;
ZK_P.cntx_psh;
{? _c='T'
|| ZK_P.index('NRKOL');
   ZK_P.prefix('A','T',_d,_g)
|| ZK_P.index('NAG');
   ZK_P.prefix(_a,_b)
?};
{? ZK_P.first()
|| _typ:={? _c='T' || 'T' || ZK_P.T ?};
   {!
   |?
      {? ZK_P.MG<>null & ZK_P.A='A' & ZK_P.T=_typ
       & (~_h | (_h & ~exec('czyinwds','magdok_wspolne',ZK_P.MG,ZK_P.N().DP,,2)))
      || _wyn+=ZK_P.ILR
      ?};
      ZK_P.next()
   !}
?};
ZK_P.cntx_pop();
_wyn


\war_pozz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: oblicza wartosc pozycji zamowienia (biezacej)
::       !!!UWAGA!!! dane naglowkowe zamowienia musza byc przekazywane przez zmienne ze wzgledu na rezerwacje
::       tymczasowe, ktore nie maja zlaczenia do naglowka, ponadto dane te wynikaja z roznych tabel ZK_N, FAP, DK
::       TAZ.RAB        - procent rabatu z naglowka
::       TAZ.TYP_RAB    - typ rabatu w pozycji dokumentu [P/K]
::       TAZ.CB         - czy ceny brutto [T/N]
::       TAZ.CZY_WAL    - czy walutowy [1/O]
::       TAZ.WAL        - waluta SLO.ref
::       TAZ.KRS        - kurs na walute opodatkowania
::       TAZ.SPOBLRAB   - sposob liczenia rabatu [W/C]
::   WE: [_a] - obliczenia dla podanej ilosci 0-nie (domyslnie), 1-tak
::       [_b] - ilosc do przeliczenia
::  OLD: \war_pozz/zk2.fml
::       \po_zkpsv/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

_wgewi:=exec('czyJS','jm',ZK_P.M);
{? ~_a | ~_b
|| {? _wgewi & ZK_P.J2<>ZK_P.JM & ZK_P.WS2<>0
   || _dokl:=exec('jaka_dok_mjm','jm',ZK_P.M,ZK_P.J2,ZK_P.M().J);
      {? _dokl<0 || _dokl:=exec('jaka_dok_m','jm',ZK_P.M) ?}
   || _dokl:=exec('jaka_dok_m','jm',ZK_P.M)
   ?};
   roundmet(BEER.MDOKL);
   _ile_poz:={? _wgewi & ZK_P.J2<>ZK_P.JM & ZK_P.WS2<>0
             || ZK_P.WS2
             || 1
             ?}*ZK_P.ILP $ _dokl;
   roundmet(5);
   _ile_zam:={? _wgewi || ZK_P.IL2 || ZK_P.ILZ ?}
|| _ile_poz:=_ile_zam:=_b
?};

_dokl_c:=ZK_P.M().DOKL_S;

_netto:=_brutto:=_nettow:=_bruttow:=_net:=_brt:=_netw:=_brtw:=_cn:=_cb:=0;
_kwrabz:=_kwrabp:=_kwrabj:=0;

{? exec('czyrabp','ceny',TAZ.RAB_TYP)
|| _rabat:=exec('rab_proc','ceny',ZK_P.RAB,TAZ.RAB,TAZ.RAB_TYP);
   _rabat1:=1-(_rabat)/100
?};

_vat:=#((ZK_P.SV().KOD*'%')+ZK_P.SV().KOD-1)/100;
_walj:={? TAZ.CZY_WAL || exec('FindInSet','#table','WAL','WAL_SYM',TAZ.WAL().KOD,,"WAL.J",,,1) || 1 ?};
_krs:={? TAZ.CZY_WAL & _walj || TAZ.KRS/_walj || 1 ?};

:: obliczanie cen

KALK.JM:=ZK_P.JM;
KALK.J2:=ZK_P.J2;
KALK.WS2:=ZK_P.WS2;
exec('ceny2rab','zamsiw_poz');

_cpr:={? TAZ.CZY_WAL || ZK_P.CWAL || ZK_P.CENA ?};

:: waluta handlowa
{? TAZ.CZY_WAL
||
   _cena:=ZK_P.CWAL;
   {? ~exec('czyrabp','ceny',TAZ.RAB_TYP)
   || _nagwsp:=-TAZ.RAB/100;
      _kwpoz:=-ZK_P.RABK;
      _kwil:=_ile_zam;
      _kwrabz:=
         {? TAZ.RAB_TYP='W'
         || _kwpoz+(_nagwsp*((_cena*_kwil)$2))$2
         || ((_kwpoz+(_nagwsp*_cena)$_dokl_c)*_kwil)$2
         ?};
      _kwrabj:=
         {? TAZ.RAB_TYP='W'
         || {? _kwil || (_kwpoz/_kwil)$_dokl_c ?}+(_nagwsp*_cena)$_dokl_c
         || _kwpoz+(_nagwsp*_cena)$_dokl_c
         ?};
      _kwil:=_ile_poz;
      _kwrabp:=
         {? TAZ.RAB_TYP='W'
         || _kwpoz+(_nagwsp*((_cena*_kwil)$2))$2
         || ((_kwpoz+(_nagwsp*_cena)$_dokl_c)*_kwil)$2
         ?}
   ?};

   {? TAZ.CB='T'
   ||
      {? TAZ.SPOBLRAB='W'
      ||
         {? exec('czyrabp','ceny',TAZ.RAB_TYP)
         || _brtw:=exec('obl_rabat','ceny',_cena*_ile_poz,_rabat)$2;
            _bruttow:=exec('obl_rabat','ceny',_cena*_ile_zam,_rabat)$2
         || _brt:=(_cpr*_ile_poz)$2+_kwrabp;
            _brutto:=(_cpr*_ile_zam)$2+_kwrabz
         ?}
      ||
         _cena:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (_cena*_rabat1)$_dokl_c
            || _cpr+_kwrabj
            ?};
         _brtw:=(_ile_poz*_cena)$2;
         _bruttow:=(_ile_zam*_cena)$2
      ?};
      _netw:=(_brtw/(1+_vat))$2;
      _nettow:=(_bruttow/(1+_vat))$2
   ||
      {? TAZ.SPOBLRAB='W'
      ||
         {? exec('czyrabp','ceny',TAZ.RAB_TYP)
         || _netw:=exec('obl_rabat','ceny',_cena*_ile_poz,_rabat)$2;
            _nettow:=exec('obl_rabat','ceny',_cena*_ile_zam,_rabat)$2
         || _netw:=(_cpr*_ile_poz)$2+_kwrabp;
            _nettow:=(_cpr*_ile_zam)$2+_kwrabz
         ?}
      ||
         _cena:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (_cena*_rabat1)$_dokl_c
            || _cpr+_kwrabj
            ?};
         _netw:=(_ile_poz*_cena)$2;
         _nettow:=(_ile_zam*_cena)$2
      ?};
      _brtw:=(_netw+(_netw*_vat)$2)$2;
      _bruttow:=(_nettow+(_nettow*_vat)$2)$2
   ?}
?};

:: waluta opodatkowania
_cena:=ZK_P.CENA;
{? ~exec('czyrabp','ceny',TAZ.RAB_TYP)
|| _nagwsp:=-TAZ.RAB/100;
   _kwpoz:=-ZK_P.RABK;
   _kwil:=_ile_zam;
   _kwrabz:=
      {? TAZ.RAB_TYP='W'
      || _kwpoz+(_nagwsp*((_cena*_kwil)$2))$2
      || ((_kwpoz+(_nagwsp*_cena)$_dokl_c)*_kwil)$2
      ?};
   _kwrabj:=
      {? TAZ.RAB_TYP='W'
      || {? _kwil || (_kwpoz/_kwil)$_dokl_c ?}+(_nagwsp*_cena)$_dokl_c
      || _kwpoz+(_nagwsp*_cena)$_dokl_c
      ?};
   _kwil:=_ile_poz;
   _kwrabp:=
      {? TAZ.RAB_TYP='W'
      || _kwpoz+(_nagwsp*((_cena*_kwil)$2))$2
      || ((_kwpoz+(_nagwsp*_cena)$_dokl_c)*_kwil)$2
      ?}
?};

{? TAZ.CB='T'
||
   {? TAZ.SPOBLRAB='W'
   ||
      {? exec('czyrabp','ceny',TAZ.RAB_TYP)
      || {? TAZ.CZY_WAL & TAZ.SPP='T'
         || _brt:=(_brtw*_krs)$2;
            _brutto:=(_bruttow*_krs)$2
         || _brt:=exec('obl_rabat','ceny',_cena*_ile_poz,_rabat)$2;
            _brutto:=exec('obl_rabat','ceny',_cena*_ile_zam,_rabat)$2
         ?}
      ||
         {? TAZ.CZY_WAL & TAZ.SPP='T'
         || _brt:=(_brtw*_krs)$2;
            _brutto:=(_bruttow*_krs)$2
         || _brt:=(_cena*_ile_poz)$2+(_kwrabp*_krs)$2;
            _brutto:=(_cena*_ile_zam)$2+(_kwrabz*_krs)$2
         ?}
      ?}
   ||
      {? TAZ.CZY_WAL & TAZ.SPP='T'
      ||
         _brt:=(_brtw*_krs)$2;
         _brutto:=(_bruttow*_krs)$2
      ||
         _cena:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (_cena*_rabat1)$_dokl_c
            || _cena+(_kwrabj*_krs)$_dokl_c
            ?};
         _brt:=(_ile_poz*_cena)$2;
         _brutto:=(_ile_zam*_cena)$2
      ?}
   ?};
   _net:=(_brt/(1+_vat))$2;
   _netto:=(_brutto/(1+_vat))$2
||
   {? TAZ.SPOBLRAB='W'
   ||
      {? exec('czyrabp','ceny',TAZ.RAB_TYP)
      ||
         {? TAZ.CZY_WAL & TAZ.SPP='T'
         || _net:=(_netw*_krs)$2;
            _netto:=(_nettow*_krs)$2
         || _net:=exec('obl_rabat','ceny',_cena*_ile_poz,_rabat)$2;
            _netto:=exec('obl_rabat','ceny',_cena*_ile_zam,_rabat)$2
         ?}
      ||
         {? TAZ.CZY_WAL & TAZ.SPP='T'
         || _net:=(_netw*_krs)$2;
            _netto:=(_nettow*_krs)$2
         || _net:=(_cena*_ile_poz)$2+(_kwrabp*_krs)$2;
            _netto:=(_cena*_ile_zam)$2+(_kwrabz*_krs)$2
         ?}
      ?}
   ||
      {? TAZ.CZY_WAL & TAZ.SPP='T'
      ||
         _net:=(_netw*_krs)$2;
         _netto:=(_nettow*_krs)$2
      ||
         _cena:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (_cena*_rabat1)$_dokl_c
            || _cena+(_kwrabj*_krs)$_dokl_c
            ?};
         _net:=(_ile_poz*_cena)$2;
         _netto:=(_ile_zam*_cena)$2
      ?}
   ?};
   _brt:=(_net+(_net*_vat)$2)$2;
   _brutto:=(_netto+(_netto*_vat)$2)$2
?};

:: waluta handlowa
{? ~TAZ.CZY_WAL
||
   _nettow:=0;
   _bruttow:=0;
   _netw:=0;
   _brtw:=0
?};

:: aktualizacja ZK_P
{? ~_a
|| ZK_P.NETTO:=_netto;
   ZK_P.BRUTTO:=_brutto;
   ZK_P.NET:=_net;
   ZK_P.BRT:=_brt;
   ZK_P.NETTOW:=_nettow;
   ZK_P.BRUTTOW:=_bruttow;
   ZK_P.NETW:=_netw;
   ZK_P.BRTW:=_brtw;
   ''
|| {? TAZ.CB='N' || _netto |? TAZ.CB='T' || _brutto || 0 ?}
?}


\ceny2rab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: obliczenie cen po rabacie
::       !!!UWAGA!!! dane naglowkowe zamowienia musza byc przekazywane przez zmienne ze wzgledu na rezerwacje
::       tymczasowe, ktore nie maja zlaczenia do naglowka, ponadto dane te wynikaja z roznych tabel ZK_N, FAP, DK
::       TAZ.RAB        - procent rabatu z naglowka
::       TAZ.TYP_RAB    - typ rabatu w pozycji dokumentu [P/K]
::       TAZ.CB         - czy ceny brutto [T/N]
::       TAZ.CZY_WAL    - czy walutowy [1/O]
::       TAZ.WAL        - waluta SLO.ref
::       TAZ.KRS        - kurs na walute opodatkowania
::       TAZ.SPOBLRAB   - sposob liczenia rabatu [W/C]
::  OLD: \ceny2rab/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_walj:={? TAZ.CZY_WAL || exec('FindInSet','#table','WAL','WAL_SYM',TAZ.WAL().KOD,,"WAL.J",,,1) || 1 ?};
_krs:={? TAZ.CZY_WAL || TAZ.KRS/_walj || 1 ?};
_dokl_c:={? ZK_P.RODZ='Z' || ZK_P.M().DOKL_S || 2 ?};

{? TAZ.CZY_WAL
|| ZK_P.CENA:=(ZK_P.CWAL*_krs)$_dokl_c
|| {? ZK_P.CWAL & ZK_P.CENA=0
   || ZK_P.CENA:=(ZK_P.CWAL*ZK_P.KRS/_walj)$_dokl_c
   ?}
?};

_cpr:={? TAZ.CZY_WAL || ZK_P.CWAL || ZK_P.CENA ?};

_rabat:=_kwrab:=_kwrabj:=0;

{? exec('czyrabp','ceny',TAZ.RAB_TYP)
|| _rabat:=1-exec('rab_proc','ceny',ZK_P.RAB,TAZ.RAB,TAZ.RAB_TYP)/100
|| _cena:=_cpr;
   _kwil:=ZK_P.IL2;
   _nagwsp:=-TAZ.RAB/100;
   _kwpoz:=-ZK_P.RABK;
   _kwrabj:=
      {? TAZ.RAB_TYP='W'
      || {? _kwil || (_kwpoz/_kwil)$_dokl_c ?}+(_nagwsp*_cena)$_dokl_c
      || _kwpoz+(_nagwsp*_cena)$_dokl_c
      ?}
?};

{? ZK_P.SV<>null
||
   _vat:=#((ZK_P.SV().KOD*'%')+ZK_P.SV().KOD-1)/100;

   {? TAZ.CB='T'
   ||
      ZK_P.CB:=
         {? exec('czyrabp','ceny',TAZ.RAB_TYP)
         || ((_cpr*_krs)$_dokl_c*_rabat $_dokl_c)
         || ((_cpr+_kwrabj)*_krs)$_dokl_c
         ?};
      ZK_P.CN:=(ZK_P.CB/(1+_vat))$_dokl_c
   ||
      ZK_P.CN:=
         {? exec('czyrabp','ceny',TAZ.RAB_TYP)
         || ((_cpr*_krs)$_dokl_c*_rabat)$_dokl_c
         || ((_cpr+_kwrabj)*_krs)$_dokl_c
         ?};
      ZK_P.CB:=ZK_P.CN*(1+_vat)$_dokl_c
   ?}
||
   ZK_P.CN:=
      {? exec('czyrabp','ceny',TAZ.RAB_TYP)
      || ((_cpr*_krs)$_dokl_c*_rabat)$_dokl_c
      || ((_cpr+_kwrabj)*_krs)$_dokl_c
      ?};
   ZK_P.CB:=ZK_P.CN
?};
1


\find_zkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: poszukuje pozycji ZK_P na zamowieniu
::   WE: _a - ref ZK_N
::       _b - indeks materialowy
::       _c - ilosc
::       _d - czy aktualizacja pozycji niezalezna od ilosci = szuka maksymalnej w stosunku do danej
::   WY: - ref ZK_P lub null
::  OLD: \find_zkp/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null;
_max:=0;
ZK_P.cntx_psh();
ZK_P.index('NAG');
ZK_P.prefix(_a,_b);
{? ZK_P.first()
|| {!
   |? {? ZK_P.ILP>=_c
      || _wyn:=ZK_P.ref();
         0
      |? _d & _max<ZK_P.ILP
      || _wyn:=ZK_P.ref();
         _max:=ZK_P.ILP;
         ZK_P.next()
      || ZK_P.next()
      ?}
   !}
?};
ZK_P.cntx_pop();
_wyn


\blnr_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: inicjuje numer w kolejce zamowien
::  OLD: \blnr_kol/zk.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_P.cntx_psh();
ZK_P.index('NR');
ZK_P.prefix('A',1,_a);
_wyn:={? ZK_P.last() || ZK_P.NR || 0 ?}+1;
ZK_P.cntx_pop();
_wyn


\wys_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: podmienia okienko wyswietlania pozycji
::   WE: [_a] 1-podgląd z nagłówkiem 0-sama pozycja (domyślnie)
::  OLD: \wys_pozy/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

__fz_formapla_tab:=ZK_N;
_edit:=ZK_P.win_edit('?');
_sel:=ZK_P.win_sel('?');
_atrmjs:=ATR.MJS;
_magdst:={? ZK_P.RMAG<>null() || (1+ZK_P.RMAG().TYP)='D' || exec('samgdost','mat_atr') ?};
{? _magdst
|| ATR.MJS:='ZK_P';
   ATR.M_ATR:=ZK_P.M().M_ATR
|| ATR.MJS:='M_ATR';
   M_ATR.blank(0);
   ATR.M_ATR:=null()
?};

_ndit:=_edit;
{? ZK_P.N=null
|| {? ZK_P.M().RODZ='T'
   || _ndit:={? ZK_P.PROJEKT='' || 'DISPT' || 'DISPPROJ' ?}
   || _ndit:='REDU'
   ?}
|| {? ZK_P.M().RODZ='T'
   ||
::    podswietla znacznik wg dostaw
      {? exec('sprwgdst','zamsiw_poz',ZK_P.N,ZK_P.POZ)>0 || ZK_P.REZ:=1; ZK_P.DOST:=1 ?};
      {? ZK_P.RODZ='W'
      || ZMSLAPP.ZL1W:='';
         ZMSLAPP.ZL7W:='';
         exec('zlpwys1w','zamsiw_poz');
         exec('zl_p_wys3','zl_common','ZK_P.ZL','ZMSLAPP.ZL7W')
      ?};
      exec('czytadkc','mat_atr',ZK_P.DK_C,ZK_P.RDKC);
      _ndit:={? ZK_P.RODZ='Z'
             || 'DISPZ'
             |? ZK_P.RODZ='W'
             || 'DISPW'
             || _edit
             ?}
   ||
      {? ZK_P.RODZ='W'
      || _ndit:='REDUW'
      || _ndit:='REDU'
      ?}
   ?}
?};
ZK_P.win_edit(_ndit);

BEER.DOL:=0;
BEER.ILZ:=ZK_P.ILZ;
BEER.REZ:=ZK_P.REZ;
BEER.DOST:=ZK_P.DOST;
BEER.JM:=ZK_P.M().J;
BEER.IL22:=ZK_P.IL2;
:: przeliczniki jednostek
exec('ustazprz','zamsiw_poz',ZK_P.M,ZK_P.M().J);
POMOC.MGRZ:=ZK_P.M().MGR;
POMOC.MGR:=ZK_P.M().MGR;
{? POMOC.MGR<>null()
|| MGR.seek(POMOC.MGR)
?};
DISP.RAB:=ZK_N.RAB;
DISP.RABO:={? exec('czyrabp','ceny',TAZ.RAB_TYP) || '%' || ZK_N.WAL().KOD ?};
DISP.RABZTYP:=exec('rabztyp','ceny',TAZ.RAB_TYP);
ZLIM.cntx_psh();
{? ref_name(ZK_P.ZLIM)<>''
|| ZLIM.use(ref_name(ZK_P.ZLIM));
   VAR.ZGP:=ZK_P.ZLIM().ZGP
?};
{? ~_a
|| exec('set_efld_opt','mat_atr','ZK_P');
   exec('set_efld_opt','zamsiw_poz',_ndit);
   exec('dispWithFakso','fakso','ZK_P')
|| ZK_P.N().SYM;
   ZK_N.memo_get(,'UW');
   exec('set_efld_opt','mat_atr','ZK_P');
   exec('set_efld_opt','zamsiw_poz','RED'+ZK_P.RODZ);
   exec('dispWithNag','okienka','ZK_P',_ndit,'ZK_N','N','RED'+{? ZK_P.RODZ='Z' || '' || 'W' ?},'Podgląd zamówienia'@)
?};
ZLIM.cntx_pop();
ZK_P.win_edit(_edit);
ZK_P.win_sel(_sel);
VAR_DEL.delete('__fz_formapla_tab');
ATR.MJS:=_atrmjs;
1


\sprwgdst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza ilosc zarezerwowana wg dostaw opcja dla funkcji popraw na pozycji
::   WE: _a - naglowek zamowienia
::       _b - pozycja zamowienia
::   WY: zwraca sumaryczna ilosc rezerwacji wg dostaw
::  OLD: \sprwgdst/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('FindInSet','#table','ZK_P','NAG',_b,_a,"ZK_P.ILRD",,,0);
_wyn


\zlpwys1w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: Przed wyswietleniem pola zlecenie - dla pola ZMSLAPP.ZL1W
::   WY: ~~
::  OLD: \zlpwys1w/zlecenia.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_P.N().ZL<>null()
|| {? ZK_P.N().ZL().NRNZL<>0
   || ZK_P.N().ZL();
      ZMSLAPP.ZL1W:=exec('nrnzl','zl_head',ZL.NRNZL)
   || ZK_P.N().ZL();
      ZMSLAPP.ZL1W:=ZL.SYM
   ?};
   ZK_P.ZL:=ZL.ref()
|? ZK_P.ZL<>null()
|| {? ZK_P.ZL().NRNZL<>0
   || ZK_P.ZL();
      ZMSLAPP.ZL1W:=exec('nrnzl','zl_head',ZL.NRNZL)
   || ZK_P.ZL();
      ZMSLAPP.ZL1W:=ZL.SYM
   ?};
   ZK_P.ZL:=ZL.ref()
|| ZMSLAPP.ZL1W:=''
?};
~~


\bltyppoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: Formula na wartosc poczatkowa pola ZK_P.T
::  OLD: \bltyppoz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.TYP


\bl_zk_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Wartosc poczatkowa ZK_P.N
::   OLD: \bl_zk_n/zk.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.ZK_N


\bl_nrpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: blankuje numer pozycji
::   WY: numer
::  OLD: \bl_nrpoz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_P.cntx_psh();
ZK_P.index('TYPN');
ZK_P.prefix('A',BEER.TYP,BEER.ZK_N,1);
_wyn:={? ZK_P.last() || ZK_P.POZ || 0 ?}+1;
ZK_P.cntx_pop();
_wyn


\ae_zkp_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po edycji materialu w pozycji zamowienia
::  OLD: \ae_zkp_m/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld<>null
|| BEER.JM:=ZK_P.M().J;
   {? BEER.JM<>ZK_P.JM || ZK_P.JM:=ZK_P.J2:=BEER.JM ?};
   {? ZK_P.SV=null || ZK_P.SV:=exec('m_vat','material',ZK_P.M,ZK_P.N().KH,,ZK_N.DP~1,ZK_N.DP~2) ?};
   exec('juz_jest','material',ZK_P.RODZ,ZK_P.N,ZK_P.M,{? ~-(6+menu_txt())='POPRAW' || ZK_P.ref() || null ?});
   D_HELP.M_ZKP:={? ZK_P.M<>null || ZK_P.M().KTM || '' ?}
|| BEER.JM:=null
?};
1


\bl_zkpre
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: znacznik rezerwacji na blanku
::  OLD: \bl_zkpre/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_war:={? date<(ZK_P.DT+1) || exec('get','#params',3001,2,OPERATOR.USER) || 'N' ?};
{? _war='T' || 1 |? _war='N' || 0 || 1 ?}


\pr_rerez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Przed redakcja ZK_P.REZ
::  OLD: \pr_rerez/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_P.RMAG<>null || ZK_P.RMAG().PAL<>'T' || 1 ?}
& BEER.DOL
& date()<(ZK_P.DT+1)
& ZK_P.ILP>0
& exec('czyuprREZ','rezerwacje',OPERATOR.USER,ZK_P.M,{? ~ZK_P.REZ || 0 || -1 ?},ZK_P.US)


\po_rerez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: po redakcji pola ZK_P.REZ
::   WE: [_a] - czy zmieniono ilosc na mniejsza
::  OLD: \po_rerez/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_grp:=(ZK_P.win_edit('?')+3)='_GR';
{? ZK_P.REZ=0 | ~BEER.DOL
||
   {? ~_grp || ZK_P.btn_eopt('RED'+ZK_P.RODZ,'REZER','state=grayed') ?};
   ZK_P.DOST:=0;
   ZK_P.DOR:=0;
   ZK_P.ODDT:=date(0,0,0);
   ZK_P.DODT:=date(0,0,0)
|| {? ~_grp & ~(ZK_P.N().MG<>null & ZK_P.N().MG().PAL='T')
   || ZK_P.btn_eopt('RED'+ZK_P.RODZ,'REZER','state=normal');
      exec('zkp_btnseopt_rezer','zamsiw_poz','state=normal')
   ?};
   {? ZK_P.DOR=0
   || ZK_P.DOR:=ZK_P.ILP;
      ZK_P.ODDT:={? ZK_P.N().DP>date() || ZK_P.N().DP || date() ?};
      ZK_P.DODT:=ZK_P.DT
   |? ZK_P.DOR>ZK_P.ILP
   || ZK_P.DOR:=ZK_P.ILP
   ?}
?};
{? ~_grp & ZK_P.REZ & ZK_P.DOR>0 & (_a | exec('FindInSet','#table','REZ','ZK_N',ZK_P.POZ,ZK_P.N)=null)
|| {? _a
   || _nrpoz:=ZK_P.POZ;
      _zkpref:=ZK_P.ref();
      ZK_P.cntx_psh();
      exec('przeprez','rezerwacje',0,_nrpoz,BEER.DOL=-1);
      _ilr:={? BEER.DOL>0
            || exec('ile_rezd','rezerwacje',ZK_P.N,_nrpoz)
            || exec('ile_reze','rezerwacje',_zkpref)
            ?};
      ZK_P.cntx_pop()
   ?};
   exec('rozp_rez','rezerwacje',,BEER.DOL,,BEER.DOL=-1)
|? ~_grp & ~ZK_P.REZ
|| _nrpoz:=ZK_P.POZ;
   ZK_P.cntx_psh();
   exec('przeprez','rezerwacje',0,_nrpoz);
   _ilr:=exec('ile_rezd','rezerwacje',ZK_P.N,_nrpoz);
   ZK_P.cntx_pop();
   ZK_P.SR:=_ilr[2];
   ZK_P.DOR:=_ilr[1];
   ZK_P.ILRB:=_ilr[2];
   ZK_P.ILRW:=_ilr[3];
   ZK_P.ILRD:=_ilr[4];
   ZK_P.ZNB:={? ZK_P.ILRB>0 || 'T' || 'N' ?};
   ZK_P.ZNW:={? ZK_P.ILRW>0 || 'T' || 'N' ?};
   ZK_P.ZNR:={? ZK_P.ILP<ZK_P.ILZ || 'T' || 'N' ?};
   ZK_P.DOST:=ZK_P.ILRD>0;
   ZK_P.REZ:=ZK_P.ILRB>0 | ZK_P.ILRW>0;
   _rezzlzam:=_ilr[6];
   obj_del(_ilr);
   {? ZK_P.ILZ<(ZK_P.ILRB+ZK_P.ILRW)
   || ZK_P.ILZ:=ZK_P.ILP:=(ZK_P.ILRB+ZK_P.ILRW);
      _mjs:=ATR.MJS;
      ATR.MJS:='ZK_P';
      exec('aktzil2','zamsiw_poz');
      ATR.MJS:=_mjs
   ?};
   ZK_P.ILBEZ:={? ZK_P.END || 0 |? ZK_P.ILP>ZK_P.DOR || ZK_P.ILP-ZK_P.DOR || 0 ?};
   ZK_P.CZYBEZ:={? ZK_P.ILBEZ>0 || 'T' || 'N' ?}
?};
win_disp();
1


\ae_zkilr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: po edycji pola ILR w pozycjach zamowien klienta
::   WY: czy wychodzic z edycji pola
::  OLD: \ae_zkilr/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_dokl:=3;
{? ZK_P.M<>null || _dokl:=exec('jaka_dok_m','jm',ZK_P.M) ?};
ZK_P.ILR:=ZK_P.ILR$_dokl;
exec('pozj2','zamsiw_poz');
_wyn


\po_ilz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji ilosci zamawianej
::  OLD: \po_ilz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_dokl:=exec('jaka_dok_m','jm',ZK_P.M);
ZK_P.ILZ:=ZK_P.ILZ$_dokl;
&_dokl;

_zkn:=ZK_P.N;
_poz:=ZK_P.POZ;
_ilerez:=0;
_rezdst:=0;
_ilebez:=0;

:: ile na powiazanych zleceniach
_ilzl:=0;
{? -menu_txt()='popraw'
||
   ZLZAM.index('ZMZL');
   ZLZAM.prefix($ZK_P.ref());
   {? ZLZAM.first()
   ||
      {!
      |?
         _ilzl+=ZLZAM.ILZL;
         ZLZAM.next()
      !}
   ?}
?};

:: ile w powiazanym planie
_ilpx:=0;
{? -menu_txt()='popraw'
|| PX_OBJ.index('ZK_P');
   PX_OBJ.prefix(ZK_P.name(),ZK_P.ref());
   {? PX_OBJ.first()
   || _ilpx+=PX_OBJ.IL_PLAN
   ?}
?};
_par:=exec('get','#params',3016,2,OPERATOR.USER)='T';
{? _par & ~BEER.DOL & BEER.PRILZ<>ZK_P.ILZ || BEER.DOL:=-1 ?};

{? BEER.DOL>0
|| _buf:=exec('ile_rezd','rezerwacje',_zkn,_poz);
   _ilerez:=_buf[2];
   _rezdst:=_buf[4]<>0;
   obj_del(_buf)
|? BEER.DOL<0
|| _buf:=exec('ile_reze','rezerwacje',ZK_P.ref());
   _ilerez:=_buf[2];
   _rezdst:=_buf[4]<>0;
   _ilebez:=_ilerez-_buf[4];
   obj_del(_buf)
|? ~BEER.DOL
|| _ilerez:=ZK_P.DOR
?};

_ilr:={? var_pres('__ZKP_ILR')=type_of(0) || __ZKP_ILR || 0 ?};

{? ZK_P.ILZ-_ilr<0
||
   FUN.info('Ilość zamówiona %1 jest mniejsza od ilości zrealizowanej %2.'@[form(ZK_P.ILZ),form(_ilr)]);
   _wyn:=0
:: sprawdzamy czy ilosc zadeklarowana jest mozliwa do rezerwacji
|? ZK_P.ILZ<ZK_P.IL_ZT
|| FUN.info('Ilość zamówiona nie może być mniejsza od ilości\n'
            'aktualnie zadysponowanej do transportu: %1 %2.'@[$ZK_P.IL_ZT,ZK_P.JM().KOD]);
   ZK_P.ILZ:=ZK_P.IL_ZT;
   _wyn:=0
|? BEER.DOL & (~BEER.RDOST | (_ilerez>0 & _ilerez>ZK_P.ILZ & BEER.DOL=-1 & _ilebez>=_ilerez-ZK_P.ILZ))
|| _wyn:={? ZK_P.ILZ>0 || 1 || FUN.info('Niewypełnione pole: Ilość.'@); 0 ?}
|? _ilerez>0 & _ilerez>ZK_P.ILZ
|| FUN.info('Wprowadzono rezerwacje bezwarunkowe dla danej pozycji zamówienia.\n'
            'Nie można zmniejszyć ilości.'@);
   _wyn:=0
|? ZK_P.M<>null & ZK_P.M().RODZ='U'
|| _wyn:=1
|? (BEER.DOL=0 | (BEER.DOL=2 & BEER.RDOST)) & ZK_P.DOST & ZK_P.ILZ<(_ilewg_d:=exec('sprwgdst','zamsiw_poz',ZK_P.N,ZK_P.POZ))
|| FUN.info('Wg dostaw została zarezerwowana większa ilość od ilości zamawianej.\n'
            'Ilość zarezerwowana wg dostaw: %1.\n'
            'Ilość zamawiana: %2.\n\n'
            'Ilość zamawiana powinna być większa lub równa ilości zarezerwowanej wg dostaw.'@
            [form(_ilewg_d,15,ZK_P.M().DOKL),form(ZK_P.ILZ,15,ZK_P.M().DOKL)]);
    _wyn:=0
|? _ilzl>0 & ZK_P.ILZ<_ilzl
|| FUN.info('Ilość zamawiana nie może być mniejsza od ilości zleconej do produkcji: '@
    +form(_ilzl,,ZK_P.M().DOKL)+' '+M.J().KOD+'.');
   _wyn:=0
|? _ilpx>0 & ZK_P.ILZ<_ilpx
|| FUN.info('Ilość zamawiana nie może być mniejsza od ilości zaplanowanej do produkcji: '@
    +form(_ilpx,,ZK_P.M().DOKL)+' '+M.J().KOD+'.');
   _wyn:=0
|| _dilz:=ZK_P.ILZ;
   _pilz:=BEER.ILZ;
:: roznica ilosci
   _rilz:=ZK_P.ILZ-BEER.ILZ;
:: ref pozycji zamowienia
   _refp:=ZK_P.ref;
   _mat:=ZK_P.M;
   {? _rilz<=0 | ~ZK_P.REZ
   ||
::    zmniejszyc ilosc na zamowieniu mozna zawsze
      _wyn:=1
   ||
::    wg zasady pozostalo wolne na stanie lub ostatnie zamowienie wg kolejki
::    sprawdzamy czy nie jest to stania pozycja wg kolejki
      _wyn:=0;
      ZK_P.cntx_psh();
      ZK_P.index('NR');
      ZK_P.prefix('A',1,_mat);
      {? ZK_P.last()
      || {!|?
            {? ZK_P.REZ
            || {? _refp=ZK_P.ref() || _wyn:=1 || _wyn:=0 ?}; 0
            || ZK_P.prev()
            ?}
         !}
      ?};
      ZK_P.cntx_pop();

      {? ~_wyn
      ||
::       nie jest to ostatnia pozycja wg kolejki
         ZK_P.cntx_psh();
         {? ZK_P.RMAG<>null
         || exec('obl_stan','magazyn_stan',ZK_P.M,1,ZK_P.RMAG)
         || exec('obl_stan','magazyn_stan',ZK_P.M,{? ZK_P.RODZ='Z' || 2 || 9 ?})
         ?};
         ZK_P.cntx_pop();
         {? BEER.SD>=_rilz
         || _wyn:=1
         || FUN.info('Uwaga. Obecnie można zarezerwować ilość: '@+form(BEER.SD,10,ZK_P.M().DOKL)+'.');
            _wyn:=1
         ?}
      || ZK_P.cntx_psh();
         exec('obl_stan','magazyn_stan',ZK_P.M,{? ZK_P.RODZ='Z' || 2 || 9 ?});
         ZK_P.cntx_pop();
::       jezeli ostatnia pozycja to mozna poprawiac
         _wyn:=1
      ?}
   ?}
?};
{? _wyn
|| ZK_P.ILP:=ZK_P.ILZ-_ilr;
   _mjs:=ATR.MJS;
   ATR.MJS:='ZK_P';
   exec('aktzil2','zamsiw_poz');
   BEER.IL22:=ZK_P.IL2;
   ATR.MJS:=_mjs
?};
{? _wyn || exec('war_pozz','zamsiw_poz') ?};
{? _wyn
||
:: zapamietuje poprzednia ilosc
   _czy_pal:=(ZK_P.N().MG<>null & ZK_P.N().MG().PAL='T');
   _zmien:={? BEER.DOL || BEER.PRILZ=ZK_P.DOR || BEER.PRILZ<>ZK_P.DOR ?};
   _mniej:=BEER.DOL & ZK_P.REZ & ZK_P.DOR<>ZK_P.ILZ & (~_rezdst | BEER.DOL=-1);
   BEER.PRILZ:=ZK_P.ILZ;
   {? ZK_P.REZ & (BEER.DOL | _czy_pal)
   || {? _zmien & (~_ilerez | BEER.DOL<0 | (BEER.DOL>0 & _par & ZK_P.ILZ>ZK_P.DOR)) || ZK_P.DOR:=ZK_P.ILZ ?};
      {? _zmien & _czy_pal
      || _ilz:=ZK_P.ILZ;
         ZK_P.REZ:=0;
         exec('po_rerez','zamsiw_poz',_mniej);
         ZK_P.REZ:=1;
         ZK_P.DOR:=ZK_P.ILZ
      ?};
      exec('po_rerez','zamsiw_poz',_mniej)
   || win_disp
   ?}
?};
_wyn


\pr_cenaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: przed redakcja ceny sprzedazy dla ZK_P
::  OLD: \pr_cenaz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
DPOZ.WPR_R:=fld;
{? ZK_N.T().R='W'
|| 1
|? ZK_P.ILZ=0
|| 0
|| exec('f3_ceny','zamsiw_poz',0);
   exec('czy_rwal','eurusd','Z')
?}


\f3_cenaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: F3 dla wyboru ceny sprzedazy dla ZK_P
::  OLD: \f3_cenaz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=~~;
TAZ.WYB:=0;
{? ZK_N.T().R='Z' || exec('f3_ceny','zamsiw_poz',1) ?};
{? TAZ.WYB=1
|| {? ZK_P.TAR_H
   || TAR_H.cntx_psh();
      TAR_H.use(ref_name(ZK_P.TAR_H));
      _wyn:={? ZK_P.TAR_H().CEN_OD || ~~ || ZK_P.CENA ?};
      TAR_H.cntx_pop()
   || _wyn:=ZK_P.CENA
   ?}
?};
_wyn


\po_cenaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: po redakcji ceny dla zamowienia
::  OLD: \po_cenaz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? DPOZ.WPR_R<>fld
||
   {? ZK_P.CENA<0 || FUN.info('Cena musi być dodatnia.'@); return(0) ?};
   exec('clr_promo_tap','ceny',,fld,exec('bl_nwal','ustawienia'));
   exec('war_pozz','zamsiw_poz');
   {? ZK_P.WAL<>exec('bl_nwal','ustawienia') || exec('clr_promo_tap','ceny',,ZK_P.CWAL,ZK_P.WAL) ?};
   win_disp;
   MDOST.cntx_psh;
   MDOST.index('M');
   MDOST.prefix('S',ZK_P.M,null,ZK_P.N().WAL);
   {? MDOST.first & ZK_P.CENA<MDOST.CMIN & MDOST.CMIN>0 & ZK_P.CENA<>0
   || _wyn:=FUN.ask('Sprzedaż poniżej ceny minimalnej.\nCzy zatwierdzić cenę?'@)
   ?};
   MDOST.cntx_pop
?};
_wyn


\f3_ceny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: klawisz F3 dla wyboru ceny sprzedazy dla ZK_P
::   WE: _a - 1 dla F3, 0 przed redakcj, 2 przy realizacji
::       [_b] - 1-na portalu 0-nie (domyslnie)
::  OLD: \f3_ceny/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2|| {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

_wyn:=0;
:: inicjalizuje dane do kalkulacji
_wgewi:=exec('czyJS','jm',ZK_P.M);
{? ZK_P.JM=null || ZK_P.JM:=ZK_P.M().J ?};
{? ZK_P.J2=null || ZK_P.J2:=ZK_P.JM; ZK_P.WS2:=1 ?};
KALK.JM:=ZK_P.JM;
{? _wgewi & ZK_P.J2<>null
|| KALK.J2:=ZK_P.J2;
   KALK.WS2:=ZK_P.WS2
|| KALK.J2:=ZK_P.JM;
   KALK.WS2:=1
?};
{? exec('czy_rwal','eurusd','Z')
||
   _wyn:=1;
   exec('taz_sd_set','ceny');
   {? _a=1
    | ((_a=0 |_a=2) & {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?} & ZK_P.CENA=0)
   ||
      _params:=obj_new('CZY_SEL','PORTAL','S_DPOZ');
      _params.CZY_SEL:=_a;
      _params.PORTAL:=_b;
      _params.S_DPOZ:=~_a;
      exec('f3_zkpcena','zamsiw_poz',_params,_a);
      {? _a=0 & ZK_P.CENA || _wyn:=exec('licz','ceny',ZK_P) ?}
   ?}
?};
_wyn


\f3_zkpcena
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: wykorzystywana przed redakcja, na F3 pol ZK_P.CENA, DPOZ.CENR oraz na portalu
::   WE: _a(CZY_SEL,PORTAL)
::       _b - 1 dla F3, 0 przed redakcj, 2 przy realizacji
::  OLD: \f3_zkpcena/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
_paramsa:=_a;
_b_tms:=(var_pres('_b')=type_of(1) & _b=2);

:: F3 ZK_P.CENA
exec('st_licz_wz','ceny','ZK_N');
exec('stplicz','ceny',{? ZK_P.J2 || ZK_P.IL2 || ZK_P.ILZ ?});
_brutto:={? DPOZ.MJSR='M' || ND.get(); ND.CB='T'
         |? DPOZ.MJSR='F' || FAKS.get(); FAKS.T().FIS='T'
         || ZK_N.get(); ZK_N.CB='T'
         ?};
_params:=exec('ceny_mat_a','ceny_mat');
_params.M:=ZK_P.M;
_params.MG:=null();
_params.J2:={? ZK_P.J2<>null || ZK_P.J2().KOD || '' ?};
_params.WS2:={? ZK_P.J2<>null || ZK_P.WS2 || 0 ?};
_params.KH:={? ZK_P.T='T' || ZK_P.KH || ZK_N.KH ?};
_params.KH_ODB:={? ZK_P.T='T' || null || ZK_N.ODB ?};
_params.PL:=ZK_N.PL;
_params.CZY_WAL:='N';
_params.WAL:=exec('bl_wal','ustawienia');
_params.KRS:=ZK_P.KRS;
_params.SV:=ZK_P.SV;
_params.CZY_BRT:=_brutto;
_params.FLD_CENA:='ZK_P.CENA';
_params.FLD_RAB:='ZK_P.RAB';
_params.FLD_CWAL:='ZK_P.CWAL';
_params.CZY_SEL:=_paramsa.CZY_SEL;
_params.SHOW_CDO:=0;
_params.PORTAL:=_paramsa.PORTAL;
_params.S_TAZ:=1;
_params.S_DPOZ:=_paramsa.S_DPOZ;
_params.S_VAR:='';
_params.TMS:={? ZK_P.N().DT<>date(0,0,0) & _b_tms=0 & exec('get','#params',300807)='N'
             || tm_stamp(ZK_P.N().DT~1,ZK_P.N().DT~2,ZK_P.N().DT~3)
             || FIRMA.tm_stamp()
             ?};
exec('ceny_mat','ceny_mat',_params)


\pr_dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcja pola ZK_P.DOST
::  OLD: \pr_dost/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_wyn:=ZK_P.REZ & {? ZK_P.RMAG<>null || ZK_P.RMAG().PAL='N' || 1 ?}
    & {? ZK_P.ONLY
      || (1+ZK_P.RMAG().TYP)='D'
      || exec('czymdost','magazyn_stan')
      ?};
_wyn


\bl_zkp_rmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wartosc blank dla pola ZK_P.RMAG
::  OLD: \bl_zkp_rmag/zk.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.RMAG


\pr_rmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: przed redakcja pola ZK_P.RMAG
::  OLD: \pr_rmag/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_P.N().MG=null
 & ((BEER.DOL & var_pres('__wybgrp')>0 & __wybgrp)
  | (~ZK_P.ILRB & ZK_P.ILP=ZK_P.ILZ & (BEER.DOL | exec('FindInSet','#table','ZLZAM','ZMZL',$ZK_P.ref())=null())))
|| _wewn:=ZK_P.N().T().R='W';
   BEER.ZAMUPR:=exec('jakieupr','zamsiw_wspolne',_wewn);
   MG.prefix();
   MG.f_clear();
   MG.clear();
   MG.f_set('SYM,NAZ');
   {? MG.f_first()
   || {? BEER.ZAMUPR
      || {!
         |? USERS_UP.index('MG');
            USERS_UP.prefix(OPERATOR.USER,'ZA'+{? _wewn || 'W' || 'M' ?},ST.ODDZ_KOD);
            {? ~USERS_UP.find_key(MG.ref())
            || MG.f_del()
            || MG.f_next()
            ?}
         !}
      || {!
         |? USERS_UP.index('MG');
            USERS_UP.prefix(null,'ZA'+{? _wewn || 'W' || 'M' ?},ST.ODDZ_KOD);
            {? ~USERS_UP.find_key(MG.ref())
            || MG.f_del()
            || MG.f_next()
            ?}
         !}
      ?}
   ?};
   1
|| 0
?}


\po_rmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: po redakcji pola ZK_P.RMAG
::   WY: 1-poprawnie wypelnione 0-nie wypelnione
::  OLD: \po_rmag/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_wewn:=ZK_P.N().T().R='W';
BEER.ZAMUPR:=exec('jakieupr','zamsiw_wspolne',_wewn);
{? BEER.ZAMUPR & ZK_P.RMAG=null
|| FUN.info('Należy podać magazyn.'@);
   0
|? ZK_P.RMAG().PAL='T'
|| FUN.info('Zabronione przypisanie.\nNie można wybrać magazynu z obsługą palet.'@);
   ZK_P.RMAG:=null;
   0
|? ZK_P.RMAG<>null() & ZK_P.RMAG=ZK_P.N().MD
|| FUN.info('Zabronione przypisanie.\nNie można wybrać magazynu, do którego przesuwamy towar.'@);
   ZK_P.RMAG:=null;
   0
|| ZK_P.ONLY:=ZK_P.RMAG<>null;
   ZK_P.MG:=ZK_P.RMAG;
   ATR.MJS:='ZK_P';
   _magdst:={? ZK_P.RMAG<>null() || (1+ZK_P.RMAG().TYP)='D' || exec('samgdost','mat_atr') ?};
   {? ~(ZK_P.MG().TYP*'DOST') || ZK_P.DOST:=0 ?};
   {? ~_magdst
   || ZK_P.DK_C:=null;
      ATR.M_ATR:=null();
      M_ATR.blank(0)
   || ZK_P.M().M_ATR().SYM
   ?};
   {? ZK_P.RMAG<>null() | _magdst
   || {? ~_magdst || ZK_P.DK_C:=null(); ZK_P.DK_C().SYM; M_ATR.blank(0) ?};
      ATR.M_ATR:={? _magdst || ZK_P.M().M_ATR || null() ?};
      ATR.MJS:={? _magdst || 'ZK_P' || 'M_ATR' ?};
      ATR.FLAG_ED:=_magdst & ATR.CZY_ATR & ATR.M_ATR().EDIT;
      ATR.FLAG:={? ATR.FLAG_ED & ZK_P.M().M_ATR<>null() || 2 || 0 ?};
      {? ATR.FLAG_ED || {? ZK_P.M().M_ATR<>null() || ATR.FLAG_ED:=2 ?} ?};
      {? ZK_P.DK_C<>null() & ZK_P.DK_C().M_ATR<>null()
      || {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():=($('ZK_P.DK_C().WAR'+form(_i,-2,,'99')))() !}
      |? ZK_P.M().M_ATR=null() | (1+ZK_P.MG().TYP)<>'D'
      || {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():='' !}
      ?}
   || ATR.MJS:='M_ATR';
      ZK_P.DK_C:=null(); ZK_P.DK_C().SYM;
      M_ATR.blank(0);
      {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():='' !};
      ATR.FLAG:=0;
      ATR_FLAG_ED:=0
   ?};
   win_disp();
   1
?}


\bl_only
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS:Warosc poczatkowa ZK_P.ONLY
::  OLD: \bl_only/zk.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.ZAMUPR


\blwydzkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: Wartosc poczatkowa pola ZK_P.WYD
::----------------------------------------------------------------------------------------------------------------------

{? ZK_N.ZL<>null()
|| ZK_N.WYD
|| null
?}


\prwydzkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola ZK_P.WYD
::   WY: 0/1
::  OLD: \prwydzkp/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_prod:=exec('tte_lic','tte');
{? ZK_N.WYD<>null
|| ZK_P.WYD:=ZK_N.WYD;
   ZK_P.WYD().SLU();
   _wyn:=0
|| {? ZK_P.ZL<>null
   || ZK_P.WYD:=ZL.JORG;
      ZK_P.WYD().SLU();
      {? ZK_N.T().TYPYDOK().WYR='T' | _prod='N'
      || _wyn:=0
      || {? exec('chk_wyd','magdok_nag',null,ZK_P.ZL,0)
         || _wyn:=0
         || _wyn:=1
         ?}
      ?}
   || ZK_P.WYD:=null;
      _wyn:=0
   ?}
?};
_wyn


\powydzkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pola ZK_P.WYD
::   WY: 0/1
::  OLD: \powydzkp/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_prod:=exec('tte_lic','tte');
_zlec:={? ZK_P.N().T().TYPYDOK<>null || ZK_P.N().T().TYPYDOK().ZLEC || 'N' ?};
{? _prod='T' & (_zlec='T' & chk_fld() | _zlec='O' & ZK_P.ZL<>null)
|| {? ZK_P.ZL<>null
   || {? chk_fld()
      || {? ZK_P.ZL().KTM=ZK_P.M & ZK_P.ZL().JORG=ZK_P.WYD
         || 1
         || exec('chk_wyd','magdok_nag',ZK_P.WYD,ZK_P.ZL,1)
         ?}
      ?}
    ?}
|? _zlec='N' | _zlec='O' & ZK_P.ZL=null | _prod='N'
|| 1
?}


\bezkptrn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: przed redakcja ZK_P.TRN
::  OLD: \bezkptrn/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_P.TRN='T' & ~BEER.DOL
|| ~exec('czyTRANSPORT','transport_wspolne',ZK_P.N().uidref(),ZK_P.uidref())
|| 1
?}


\spr_trnp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: sprawdza czy pozycja ZK_P jest powiazana z transportem
::   WE: _a - $ZK_P.ref()
::  OLD: \spr_trnp/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_test:="
   ZKW_P.index('ZK_P');
   ZKW_P.prefix(_a,_a);
   ~ZKW_P.first()
";
:: w biezacej masce
_wyn:=_test(_a);
:: w archiwum
{? _wyn=1
||
   ZKW_P.cntx_psh();
   OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.first()
   ||
      {!
      |?
         ZKW_P.use('zkpwp'+ST.ODDZ+($OKR.ROK+2));
         _wyn:=_test(_a);
         _wyn=1 & OKR.next()
      !}
   ?};
   OKR.cntx_pop();
   ZKW_P.cntx_pop()
?};
_wyn


\bl_zkpdt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wartosc poczatkowa pola ZK_P.DT
::  OLD: \bl_zkpdt/zk.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_P.N().DT


\pr_zkpdt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola ZK_P.DT
::  OLD: \pr_zkpdt/zk.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_P.ILP=ZK_P.ILZ | ZK_P.ILP>0


\po_zkpdt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pola ZK_P.DT
::  OLD: \po_zkpdt/zk.fml
::----------------------------------------------------------------------------------------------------------------------
:: sprawdza podpięte rezerwacje
_wyn:=0;
_term:=exec('term_rez','rezerwacje',ZK_P.N,ZK_P.POZ);
{? _term>ZK_P.DT
|| FUN.info('Dla pozycji zamówienia wprowadzono rezerwacje,\n'
            'dla których maksymalnym terminem ich obowiązywania jest data: %1.\n'
            'Niemożliwa zmiana terminu realizacji na podany.'@[form(_term)]);
   ZK_P.DT:=_term;
   ZK_P.DODT:=_term;
   _wyn:=0
|| {? ZK_P.PL_DATA=date(0,0,0) || ZK_P.PL_DATA:=ZK_P.DT ?};
   ZK_P.DODT:=ZK_P.DT;
   _wyn:=1
?};
{? ZK_P.DT<date() | (ZK_P.N().MG<>null & ZK_P.N().MG().PAL='T')
|| ZK_P.REZ:=0;
   exec('po_rerez','zamsiw_poz');
   ZK_P.btn_eopt('RED'+ZK_P.RODZ,'REZER','state=grayed');
   exec('zkp_btnseopt_rezer','zamsiw_poz','state=grayed')
|? BEER.DOL
|| ZK_P.btn_eopt('RED'+ZK_P.RODZ,'REZER','state=normal');
   exec('zkp_btnseopt_rezer','zamsiw_poz','state=normal')
?};
_wyn


\bl_zrodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wartosc poczatkowa pola ZK_P.RODZ
::  OLD: \bl_zrodz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_P.N<>null || ZK_P.N().T().R || 'Z' ?}


\pwilerez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietlenie pol ILRB, ILRD, ILRW
::  OLD: \pwilerez/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
''


\pw_dor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem pola
::  OLD: \pw_dor/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_P.DT<date()
|| exec('findfnv','#color')
|| ''
?}


\pr_dor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja pola
::  OLD: \pr_dor/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.DOL & ZK_P.ILZ>0 & ZK_P.REZ & ZK_P.DT>=date() & exec('FindInSet','#table','REZ','ZK_N',ZK_P.POZ,ZK_P.N)=null


\po_dor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wartosc poczatkowa T/N, druga litera oznacza czy utw.na czas real. T/N
::  OLD: \po_dor/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_P.DOR>0
|| {? ZK_P.ODDT=date(0,0,0) || ZK_P.ODDT:={? ZK_P.N().DP>date() || ZK_P.N().DP || date() ?} ?}
?};
1


\pwinfobl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem informacji o sposobie obliczenia cen
::  OLD: \pwinfobl/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.INFOBLCN:={? exec('get','#params',800907,2)='N' || 'X'
               |? ZK_N.OBLCEN='N' || 'Nie obliczono'
               |? ZK_N.OBLCEN='T' || 'Obliczono'
               |? ZK_N.OBLCEN='P' || 'Obliczono częściowo'
               || ''
               ?};
''


\zkp_pl_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Domyslny kierunek planowania dla pozycji zamowienia (blank pol: ZK_P.PL_DIR, PL_DATA, PL_TIME, PL_FORCE)
::  OLD: \zkp_pl_bl/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_cur_afld:=cur_afld();
{? _cur_afld='PL_DIR'
|| BEER.ZK_N().PL_DIR
|? _cur_afld='PL_DATA'
|| BEER.ZK_N().PL_DATA
|? _cur_afld='PL_TIME'
|| BEER.ZK_N().PL_TIME
|? _cur_afld='PL_FORCE'
|| BEER.ZK_N().PL_FORCE
|| ~~
?}


\zkp_pl_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Przed wyswietleniem pol ZK_P.PL* (zwiazanych z planowaniem): PL_DIR, PL_DATA, PL_TIME, PL_FORCE
::  OLD: \zkp_pl_bd/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_prod:=exec('tte_lic','tte')='T';
_cur_afld:=cur_afld();
_color:=exec('findfnrd','color');
_win:=cur_win(1,1);

{? 1+cur_kwin()='e'
||
   {? _prod
   || ZK_P.efld_opt(_win,'label_color=',,_cur_afld)
   || ZK_P.efld_opt(_win,'label_color='+((_color*',')-_color),,_cur_afld)
   ?}
?};

{? _cur_afld='PL_DIR'
|| _prod
|| {? _prod || 1 || _color ?}
?}


\zkp_pl_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Przed redakcja pol ZK_P.PL* (zwiazanych z planowaniem): PL_DIR, PL_DATA, PL_TIME, PL_FORCE
::  OLD: \zkp_pl_be/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('tte_lic','tte')='T'


\zkp_pl_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Po redakcji pol ZK_P.PL* (zwiazanych z planowaniem): PL_DIR, PL_DATA, PL_TIME
::  OLD: \zkp_pl_ae/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_cur_afld:=cur_afld();
{? _cur_afld='PL_TIME'
|| exec('valid_time','#field',ZK_P.PL_TIME)
|| 1
?}


\zkp_pl_fd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Format wyswietlania pol ZK_P.PL* (zwiazanych z planowaniem): PL_DIR, PL_DATA, PL_TIME, PL_FORCE
::  OLD: \zkp_pl_fd/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('tte_lic','tte')='T'
|| 'empty=0'
|| 'empty=1'
?}


\del_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: usuwa pozycje z zamowienia
::   WE: [_a] - komunikaty,pytania = 1, 0-bez
::       [_b] - 0-powoluj transakcje 1-juz powolano transakcje
::   WY: ''-OK 'cosik'-komunikatotos o bledos yeah
::  OLD: \del_pozy/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

_wyn:='';

BEER.MENU_PTH+='U';

_rr:=3;

{? ZK_P.ZD_POZ<>''
|| {? _a
   || exec('zdp_info','zamsiw_poz');
      FUN.info('Pozycja powiązana z dostawą dedykowaną %1.'@[ZK_Z.ZDP_INFO])
   ?}
?};

ZLZAM.index('ZMZL');
ZLZAM.prefix($ZK_P.ref());
PX_OBJ.cntx_psh();
PX_OBJ.index('ZK_P');
PX_OBJ.prefix(ZK_P.name(),ZK_P.ref());
PL_PART.cntx_psh();
PL_PART.index('ZK_P');
PL_PART.prefix(ZK_P.ref());
PROD_REJ.cntx_psh();
PROD_REJ.index('ZK_P');
PROD_REJ.prefix(ZK_P.name(),ZK_P.ref());

{? PROD_REJ.first()
|| {!
   |?
      PROD_NXT.index('PROD_REJ');
      PROD_NXT.prefix(PROD_REJ.ref());
      {? PROD_NXT.first() || {! |? PROD_NXT.del() !} ?};
      PROD_NXT.index('NEXT');
      PROD_NXT.prefix(PROD_REJ.ref());
      {? PROD_NXT.first() || {! |? PROD_NXT.del() !} ?};
      PROD_REJ.del()
   !}
?};

{? ZK_P.IL_ZT>0
|| {? _a
   || FUN.info('Do pozycji są aktualnie wystawione dyspozycje transportu.'@+'\n\n'+
               'Usunięcie pozycji zabronione.'@);
      _wyn:='error'
   || _wyn:='Do pozycji są aktualnie wystawione dyspozycje transportu.'@
   ?}
|? ZLZAM.first()
|| {? _a
   || FUN.info('Do pozycji są już wystawione zlecenia.'@+'\n\n'+
               'Usunięcie pozycji zabronione.'@);
      _wyn:='error'
   || _wyn:='Do pozycji zamówienia są już wystawione zlecenia.'@
   ?}
|? PL_PART.first()
|| {? _a
   || FUN.info('Pozycja zamówienia znajduje się w planie operacyjnym.'@+'\n\n'+
               'Usunięcie pozycji zabronione.'@);
      _wyn:='error'
   || _wyn:='Pozycja zamówienia znajduje się w planie operacyjnym.'@
   ?}
|? PX_OBJ.first() & PX_OBJ.IL_PLAN>0
|| {? _a
   || FUN.info('Do pozycji przypisany jest aktywny obiekt w planie strategicznym.'@+'\n\n'+
               'Usunięcie pozycji zabronione.'@);
      _wyn:='error'
   || _wyn:='Do pozycji zamówienia jest przypisany obiekt w planie strategicznym.'@
   ?}
|? ZK_P.ILP<>ZK_P.ILZ
|| {? _a
   || FUN.info('Pozycja była już realizowana.'@+'\n\n'+
               'Usunięcie pozycji zabronione.'@);
      _wyn:='error'
   || _wyn:='Pozycja była już realizowana.'@
   ?}
|? ZK_P.size=1 & ZK_P.N().STAT_REJ<>'N'
|| _stan:={? ZK_P.N().STAT_REJ='T' || 'Zamówienie jest zaakceptowane.'@ || 'Zakończono rejestrację zamówienia.'@ ?};
   {? _a
   || FUN.info(_stan+'\n\n'+'Usunięcie ostatniej pozycji zabronione.'@);
      _wyn:='error'
   || _wyn:=_stan
   ?}
|? ZK_P.TRN='T' & exec('spr_trnp','zamsiw_poz',$ZK_P.ref())=0
|| {? _a
   || FUN.info('Pozycja powiązana z transportem.\n\nUsunięcie niemożliwe.'@);
      _wyn:='error'
   || _wyn:='Pozycja powiązana z transportem.'@
   ?}
|? {? _a
   || _rr:=exec('returnrt','rezerwacje',$ZK_P.ref(),ST.ODDZ+form((ZK_P.DP~1)-2000,-2,0,'99'),0,ZK_P.N().KH);
      {? _rr=3
      || _opc:={? _a || FUN.ask('Usunąć bieżący wiersz?'@) || 1 ?}
      || _opc:=_rr>0
      ?};
      _opc
   || _rr:={? (';PT'*exec('get','#params',3008,2,OPERATOR.USER))>1 || 2 || 1 ?};
      _opc:=1;
      _opc
   ?}
||
:: Wyczyszczenie pozostalosci po planach strategicznych i symulacjach
   {? PX_OBJ.first()
   || _px_ver:=exec('get_mainversion','px_ver');
      PX_POZ.index('PX_POZ');
      PX_POZ.prefix(_px_ver,PX_OBJ.ref());
::    Jezeli brak pozycji w wersji glownej, to kasujemy obiekt z powiazaniami
      {? ~PX_POZ.first()
      || exec('delete','px_obj',PX_OBJ.ref())
      ?}
   ?};

   _nag:=ZK_P.N; _poz:=ZK_P.POZ; _ktm:=ZK_P.M; _sr:=ZK_P.SR; _poz1:=0;
   ZK_P.cntx_psh();
   ZK_P.index('TYPN');
   ZK_P.prefix('A',BEER.TYP,BEER.ZK_N,1);
   {? ZK_P.find_key(_poz) & ZK_P.next()
   || _poz1:=_poz
   |? ZK_P.find_key(_poz) & ZK_P.prev()
   || _poz1:=ZK_P.POZ
   ?};
   ZK_P.cntx_pop();

   ZK_P.cntx_psh();
   ZK_P.index('NAG');
   ZK_P.prefix(_nag,_poz);

   _I_do:=do_state()=0;

   {? ZK_P.first()
   ||
      _rezm:=ZK_P.M;
      _reznr:=ZK_P.NR;
      _rezil:=0;
      _rezzkn:=$ZK_P.N;
      {? _I_do & ~_b || do() ?};
      exec('del_lnk','plan_dostaw',ZK_P.N,ZK_P.ref());
      exec('zk_usun','zamsiw_poz',_nag,ZK_P.M().KTM,_ktm);
      exec('delezkrp','zamsiw_rea',ZK_P.ref());
      FAKSO.cntx_psh();
      FAKSO.use('fakto'+ST.ODDZ+'__');
      exec('delprzyp','fakso','FAKSO','ZK_P',ZK_P.ref());
      _dane:=obj_new(4);
      _kodmsk:=ST.ODDZ+form((ZK_P.DP~1)-2000,-2,0,'99');
      _refzkp:=$ZK_P.ref();
      _uidzkp:=ZK_P.uidref();
      _dane[1]:=$ZK_P.ref(); _dane[2]:=ZK_P.ILZ; _dane[3]:=ZK_P.M; _dane[4]:=ZK_P.N().KH;
      _rezil+={? ZK_P.TOP || ZK_P.DOR || 0 ?};
      {? ~exec('update','rezerwacje','ZK_P',ZK_P.ref(),ZK_P.RMAG,ZK_P.M,0)
      || _wyn:='Nie udało się usunąć rezerwacji'@
      ?};
::       zmiana informacji o zmianach kolejnosci rezerwacji
      exec('del_zk_n','zamsiw_poz',ZK_P.POZ);
      _ok:=ZK_P.del(1,1)>0;
      {? _ok
      || exec('returnrt','rezerwacje',_refzkp,_kodmsk,_rr,_dane[4]);
         exec('delaRekD','reklamacje',_uidzkp)
      ?};
      obj_del(_dane);
      FAKSO.cntx_pop();
      {? ~_ok
      || _wyn:='Nie usunięto pozycji zamówienia.'@;
         undo()
      || exec('akt_num','zamsiw_poz',_nag,_poz)
      ?};
      {? _I_do & ~_b || end() ?};

::    aktualizacja pozostalych pozycji zamowien
      {? _a & var_pres('__zam')>100
      || {? ~__zam.find_key(#BEER.ZK_N)
         || __zam.N:=#BEER.ZK_N;
            __zam.add(1)
         ?}
      ||
         exec('obl_warz','zamsiw_nag',BEER.ZK_N);
         exec('aktu_rez','rezerwacje',_rezm,_reznr,_rezil,_rezzkn)
      ?};

      {? ZK_N.MG<>null & ZK_N.MG().PAL='T' || exec('ctrl_pal','zamsiw_palety',_a) ?}
   ?};
   ZK_P.cntx_pop();
   ZK_P.index('TYPN');
   ZK_P.prefix('A',BEER.TYP,BEER.ZK_N,1);
   ZK_P.find_key({? _poz1 || _poz1 || _poz ?});
   {? _a
   || BEER.NET_REA:=0; BEER.BRT_REA:=0;
      BEER.MAS:=0; BEER.PRS:=0;
      BEER.MAP:=0; BEER.PRP:=0;
      {? BEER.MENU_PTH='ZZYDU' | BEER.MENU_PTH='ZZTYDU'
      || grp_disp(M,'WER_ZAM');
         grp_disp(__smmag,__okn)
      ?}
   ?};
   {? BEER.ZK_N<>null || exec('obl_marz','zamsiw_wspolne') ?}
|| _wyn:='Nieznany błąd'@
?};
BEER.MENU_PTH-=1;
PX_OBJ.cntx_pop();
PL_PART.cntx_pop();
PROD_REJ.cntx_pop();
_wyn


\zdp_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: przypisanie informacji o dostawie dedykowanej do zmiennej ZD_Z.ZDP_INFO
::  OLD: \zdp_info/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_Z.ZDP_INFO:='';

{? 5+ZK_P.ZD_POZ='zdpoz'
||
   ZD_NAG.cntx_psh; ZD_POZ.cntx_psh;
   ZD_POZ.use(8+ZK_P.ZD_POZ);
   ZD_POZ.prefix;
   {? ZD_POZ.seek(ZK_P.ZD_POZ)
   ||
      ZD_NAG.use(ref_name(ZD_POZ.ZD_NAG));
      ZK_Z.ZDP_INFO:=ZD_POZ.ZD_NAG().SYM+' poz.'+form(ZD_POZ.POZ,,,'99')
   ||
      ZK_Z.ZDP_INFO:='Nie znaleziono.'
   ?};
   ZD_NAG.cntx_pop; ZD_POZ.cntx_pop
|? 8+ZK_P.ZD_POZ='pdkoszyk'
||
   PD_N.cntx_psh; PD_K.cntx_psh;
   PD_K.prefix;
   {? PD_K.seek(ZK_P.ZD_POZ)
   ||
      ZK_Z.ZDP_INFO:=PD_K.PD_N().SYM+', '+form(PD_K.ID,,,'99')
   ||
      ZK_Z.ZDP_INFO:='Nie znaleziono.'
   ?};
   PD_N.cntx_pop; PD_K.cntx_pop
?};

exec('findfnrd','color')


\zk_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Usuwa pozycje analizy przypisanej do zamowienia
::       (czysci jednoczesnie tabele pozycji oraz parametry przypisane do niej)
::   WE: _a - ZK_N.ref()
::       [_b] - M.KTM
::       [_c] - M.ref()
::  OLD: \zk_usun/plprod.fml
::----------------------------------------------------------------------------------------------------------------------
TKTL.cntx_psh();
PLRELWYR.index('ZAM');

{? _<2 || PLRELWYR.prefix(_a) || PLRELWYR.prefix(_a,_b,_c) ?};
{? PLRELWYR.first()
|| {!
   |?
      {? PLRELWYR.RTKTL<>''
      ||
         _mask:=form(8+PLRELWYR.RTKTL);
         TKTL.use(_mask);
         TKTL.clear();
         {? TKTL.seek(PLRELWYR.RTKTL)
         || exec('usun_tktl','zl_tech','no ask','ext_del','pl_prod')
         ?}
      ?};
::    Na wszelki wypadek usuwam jeszcze wszystkie technologie wskazujace na ta pozycje analizy
      TKTL.index('PLRELWYR');
      TKTL.prefix(PLRELWYR.ref());
      {? TKTL.first()
      || {!
         |? _can_continue:=exec('usun_tktl','zl_tech','no ask','ext_del','pl_prod');
            TKTL.first() & _can_continue>0
         !}
      ?};
      PLRELWYR.del()
   !}
?};
TKTL.cntx_pop();
1


\del_zk_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: usuniecie zamowienia - rejestracja informacji o usunieciu
::   WE: [_a] rozne od zera numer pozycji zamowienia 0(domyslnie)-wszystkie
::  OLD: \del_zk_n/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

{? _a<>0 || ZK_P.N().SYM ?};
_zam:=ZK_N.T().T+' / '+ZK_N.SYM+' / '+ZK_N.KH().KOD+' / '+form(ZK_N.R,-4,0,'99')+form(ZK_N.M,-2,0,'99');
{? _zam<>''
|| HISZKP.index('ZAM');
   {? ~_a || HISZKP.prefix(_zam,_zam) || HISZKP.prefix(_zam,_zam,_a) ?};
   {? HISZKP.first()
   || {!
      |? _ref:=HISZKP.ref(); _ok:=HISZKP.next();
         HISZKP.cntx_psh();
         HISZKP.clear();
         {? HISZKP.seek(_ref)
         || HISZKP.ZAM:='usunęte: '+form(date)+', '+form(time)+' ... '+HISZKP.ZAM;
            HISZKP.put(1)
         ?};
         HISZKP.cntx_pop();
         ~_a & _ok
      !}
   ?}
?}


\akt_num
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: renumeracja pozycji zamowienia
::   WE:  _a - naglowek
::        _b - od numeru
::  OLD: \akt_num/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_P.cntx_psh;
ZK_P.index('TYPN');
ZK_P.prefix('A','Z',_a,1);
{? ZK_P.find_le(_b) || _poz:=ZK_P.POZ; _ok:=ZK_P.next || _poz:=0; _ok:=ZK_P.first() ?};
{? _ok
|| {!
   |? _poz+=1; _old:=ZK_P.POZ; _ok:=ZK_P.next;
      ZK_P.cntx_psh;
      exec('przenum','zamsiw_poz',ZK_P.N,_old,_poz);
      ZK_P.cntx_pop;
      _ok
   !}
?};
ZK_P.cntx_pop;
''


\przenum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przenumerowuje pozycje zamowienia
::   WE:  _a - ref naglowka
::        _b - numer stary
::        _c - numer nowy
::  OLD: \przenum/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_P.cntx_psh;
ZK_P.index('NAG');
ZK_P.prefix(_a,_b);
{? ZK_P.first
|| {!
   |? _ref:=ZK_P.ref; _ok:=ZK_P.next;
      ZK_P.cntx_psh;
      ZK_P.clear;
      {? ZK_P.seek(_ref)
      || ZK_P.POZ:=_c;
         {? ~ZK_P.put(1)
         || _ok:=0;
            undo()
         || REZ.cntx_psh();
            REZ.index('ZK_P');
            REZ.prefix(ZK_P.ref());
            {? REZ.first()
            || {!
               |? REZ.NRPOZ:=REZ.ZK_P().POZ;
                  REZ.put(1);
                  REZ.next()
               !}
            ?};
            REZ.cntx_pop()
         ?}
      || _ok:=0
      ?};
      ZK_P.cntx_pop;
      _ok
   !}
?};
ZK_P.cntx_pop;
''


\zam_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: wyswietlanie pozycji zamowien dla biezacego zamowienia
::   WE: [_a] - czy tylko wyswietlenie pozycji bez wszelakich akcji
::       [_b] - blokady zamówień i usunięcie blokad 1-tak(domyślnie) 0-nie
::  OLD: \zam_poz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_display:=BPMN.DISPLAY;
{? var_pres('_a')=type_of(0)
|| _display:=_a
?};
_lock:=1;
{? var_pres('_b')=type_of(0)
|| _lock:=_b
?};

_params:=params_get();
{? type_of(_params)>0 & var_pres('LINK',_params)>0
|| _link:=_params.LINK
|| _link:=''
?};

:: Obsługa linku
{? exec('FindAndGet','#table',ZK_P,_link,,"name()")=ZK_P.name()
||
   {? _link<>'' & ref_tab(_link)=ZK_P & ZK_P.seek(_link)
   ||
      _lspr:=1
   ||
      _lspr:=0
   ?}
||
   _lspr:=0
?};

_menupth:=BEER.MENU_PTH;
BEER.MENU_PTH+='Y';
BEER.MAP:=0; BEER.PRP:=0;
BEER.MAS:=0; BEER.PRS:=0;
ZK_N.cntx_psh();
BEER.CZY_REZT:=0;
BEER.ZK_N:=ZK_N.ref();
BEER.WG:=ZK_N.WG;
BEER.TYP:='Z';
BEER.MW:='Z';
ATR.MJS:='ZK_P';
exec('st_licz_wz','ceny','ZK_N');
DISP.RAB:=ZK_N.RAB;
DISP.RABO:={? exec('czyrabp','ceny',TAZ.RAB_TYP) || '%' || ZK_N.WAL().KOD ?};
DISP.RABZTYP:=exec('rabztyp','ceny',TAZ.RAB_TYP);
PROJZ.PROJEKTY:=ZK_N.PROJEKTY;
BEER.KH:=ZK_N.KH;
BEER.RMAG:=ZK_N.MG;
BEER.NET_REA:=BEER.BRT_REA:=0;
BEER.KRAJ_VAT:=ZK_N.KRAJ_VAT;
DPOZ.MJSR:='Z';
exec('ustazprz','zamsiw_poz');
{? _lock || exec('init_blk','zamsiw_nag') ?};
_dictm:=M.win_dict('?');
M.win_dict('SLO_M');
{? ZK_N.A<>'Z' & ~_display
||
   {? ~_lock | (exec('zam_lock','zamsiw_nag') & exec('add_blk','zamsiw_nag',ZK_N.ref()))
   ||
      ZK_Z.R_LOCK:='T';
      ZK_Z.ZK_NLOCK:=$ZK_N.ref();
      _war_be:=ZK_N.BRT;
      {? ZK_N.T().R='Z'
      || ZK_P.win_edit('REDZ');
         ZK_P.win_sel('ZAMZ');
         exec('pwspobl','zamsiw_poz');
         _enable:={? (4+BEER.SPOBLCEN)='Brak' || "'empty=1'" || "'empty=0'" ?};
         _enwart:={? ZK_N.WAL=INFO.NAROD || "'empty=1'" || "'empty=0'" ?};
         BEER.fld_fml('SPOBLCEN','DISPLAY_FORMAT',_enable);
         BEER.fld_fml('INFOBLCN','DISPLAY_FORMAT',_enable);
         BEER.fld_fml('MAP','DISPLAY_FORMAT',_enable);
         BEER.fld_fml('MAS','DISPLAY_FORMAT',_enable);
         BEER.fld_fml('PMP','DISPLAY_FORMAT',_enable);
         BEER.fld_fml('PMS','DISPLAY_FORMAT',_enable);
         BEER.fld_fml('PRP','DISPLAY_FORMAT',_enable);
         BEER.fld_fml('PRS','DISPLAY_FORMAT',_enable);
         ZK_P.fld_fml('SZCEN','DISPLAY_FORMAT',_enable);
         ZK_N.fld_fml('NETTOW','DISPLAY_FORMAT',_enwart);
         ZK_N.fld_fml('BRUTTOW','DISPLAY_FORMAT',_enwart)
      || ZK_P.win_edit('REDW');
         ZK_P.win_sel('ZAMW')
      ?};
      ZK_P.index('TYPN');
      ZK_P.prefix('A',BEER.TYP,BEER.ZK_N,1);
      exec('zkp_act','zamsiw_poz');
      exec('obl_marz','zamsiw_wspolne');
      {? _lspr & __spr_z
      ||
         ZK_P.select(,1,5,,,,1);
         __spr_z:=0
      ||
         ZK_P.select()
      ?};
      exec('aktznzkn','zamsiw_nag',ZK_N.ref(),1);
      ZK_P.actions(ZK_P.win_sel('?'),'');
      exec('obl_warz','zamsiw_nag',BEER.ZK_N,,0);
      exec('plat_przel','faktury_plat',ZK_N.ref());
      ZK_Z.R_LOCK:='N';
      ZK_Z.ZK_NLOCK:='';
      ZK_N.fld_fml('NETTOW','DISPLAY_FORMAT',"'empty=0'");
      ZK_N.fld_fml('BRUTTOW','DISPLAY_FORMAT',"'empty=0'")
   ?}
|| ZK_P.win_edit('REDW');
   {? ZK_N.T().R='Z'
   || ZK_P.win_sel({? BPMN.DISPLAY || 'ZAMZ_DOK' || 'DZAM' ?});
      ZK_P.actions('DZAM','')
   || ZK_P.win_sel({? BPMN.DISPLAY || 'ZAMW_DOK' || 'ZAMW' ?});
      _akt_act:=ZK_P.actions('ZAMW','RKIJWN(EO)DUPCYZG:D')
   ?};
   ZK_P.index('TYPN');
   exec('obl_marz','zamsiw_wspolne');
   ZK_P.prefix(ZK_N.A,BEER.TYP,BEER.ZK_N,1);
   {? _lspr & __spr_z
   ||
      ZK_P.select(,1,5,,,,1);
      __spr_z:=0
   ||
      ZK_P.select()
   ?};
   {? ZK_N.T().R='W' || ZK_P.actions('ZAMW',_akt_act) ?}
?};
M.win_dict(_dictm);
{? _lock || exec('done_blk','zamsiw_nag') ?};
:: usuwa filtr programowy dla jednostek dodatkowych
JM.f_clear();
JM.win_dict('WER');

PROJZ.PROJEKTY:=null();
BEER.KH:=null();
ZK_N.cntx_pop();
ZK_N.get();
BEER.MENU_PTH:=_menupth;
BEER.KRAJ_VAT:=null();
''


\zkp_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: ustawienie akcji dla pozycji zam. klienta
::  OLD: \zkp_act/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=obj_new('UPR_WWW','ZAM_WWW','COM_WWW');
_upr_www:=_tab.UPR_WWW:='N';
_zam_www:=_tab.ZAM_WWW:='';
_com_www:=_tab.COM_WWW:='';
{? Plugin.run('TYP_ZAM_WWW_001',_tab)
|| _upr_www:=_tab.UPR_WWW;
   _zam_www:=_tab.ZAM_WWW;
   _com_www:=_tab.COM_WWW
?};
obj_del(_tab);

_www_upr:=1;
{? _zam_www<>'' & BEER.ZK_N().T().T=_zam_www
|| {? _upr_www='N' | (_upr_www<>'T' & _com_www<>'')
   || _www_upr:=0
   ?}
?};

_upr_akc:=1;
_zam_ln:='';
_act:=':';
_kplmod:=exec('get','#params',{? BEER.ZK_N().T().R='Z' || 600703 || 600704 ?},2)='T';
:: palety do realizacji
{? ~(BEER.ZK_N().MG<>null & BEER.ZK_N().MG().PAL='T') || _act:='I'+_act || _act:='R'+_act ?};
{? ~_www_upr | ~_upr_akc | KHVZ.WIDOKI
||
   _act:='GDUPO'+_act+'DGO';
{? BEER.ZK_N().AKC<>'T' | KHVZ.WIDOKI
|| _act:='WN(ME)KJFC'+_act ?}
|? (_kpl:=exec('eann2zk','magdok_wspolne',BEER.ZK_N)<>''; _kpl) | (BEER.ZK_N().MG<>null & BEER.ZK_N().MG().PAL='T')
|| _act:='N(E)C'+{? (BEER.ZK_N().MG<>null & BEER.ZK_N().MG().PAL='T') || 'KWO' || 'PU' ?}
       +{? _kpl & ~_kplmod || 'DGORWK' || '' ?}+_act
       +{? (BEER.ZK_N().MG<>null & BEER.ZK_N().MG().PAL='T') || 'O' || '' ?}

?};
_prod:=exec('tte_lic','tte');
{? _prod='N'
|| _act:='N(O)Y'+_act
?};
{? BEER.ZK_N().T().T=_zam_ln
||
   _act:='DdGOPU'+_act+'DdGO'
?};
{? BEER.ZK_N().STAT_REJ<>'N' || _act:='Z'+_act ?};
{? BEER.ZK_N().AKC<>'T' || _act:='N(E)'+_act ?};
{? exec('get','#params',3012,2,OPERATOR.USER)='N' || _act:='N(O)'+_act ?};
_lim:=BEER.ZK_N().LIM='T' | exec('get','#params',500011,2)=BEER.ZK_N().T().T;
:: {? _lim || _act:='GIJDUPC'+_act+'GD' ?};
{? _lim || _act:='GIJDUP'+_act+'GD' ?};
_wer:=ZK_P.win_sel('?');
_pact:=Plugin.run('SEL_ACTIONS_001','ZK_P');
ZK_P.actions(_wer,{? _pact<>'*' || _pact || _act ?});
''


\pwmarnar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem danych zwiazanych z marza/narzutem
::  OLD: \pwmarnar/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
''


\pwspobl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem informacji o sposobie obliczenia cen
::  OLD: \pwspobl/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=exec('get','#params',800907,2);
BEER.SPOBLCEN:={? _par='N' || 'Brak obliczeń'
               |? _par='S' || 'Według średniej arytmetycznej'
               |? _par='M' || 'Według mediany'
               || ''
               ?}


\rek_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja rekord na pozycjach zamowienia
::  OLD: \rek_pozy/zk.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.KH:=ZK_P.N().KH;
BEER.JM:=ZK_P.M().J;
BEER.RDST:=ZK_P.ILRD>0;
BEER.RAUT:=ZK_P.SR-BEER.RDST;
ZK_P.DOST:=BEER.RDST>0;
POMOC.MGRZ:=ZK_P.M().MGR;
{? ZK_P.RODZ='Z'
|| exec('obl_marz','zamsiw_wspolne');
   exec('war_pozz','zamsiw_poz')
?};
{? ZK_P.RODZ='W'
|| BEER.MAP:=0; BEER.PRP:=0; BEER.PMP:=0
?};
_grp:=ZK_P.sel_size();
ZK_P.N().T();
_sel:=ZK_P.win_sel('?');
{? _sel=''
|| 0
|? ZK_P.END & ~_grp
|| ZK_P.actions_grayed(_sel,'PURCWKAN(Z)')
|? (ref_name(ZK_P.N)+2)<>'__'
|| ZK_P.actions_grayed(_sel,'RKAN(ZP)')
|? ZK_P.M().RODZ='U'
|| ZK_P.actions_grayed(_sel,'RCWKYN(EO)')
|? ~_grp
|| ZK_P.actions_grayed(_sel,'N(P)')
|| ZK_P.actions_grayed(_sel,'')
?};
{? ZK_P.TAR_H & ref_name(ZK_P.TAR_H)<>TAR_H.name()
|| TAR_H.use(ref_name(ZK_P.TAR_H))
?};
exec('rekprzed','color','ZKP#01')


\add_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr], MZ [2008]
:: OPIS: dolaczenie pozycji do zamowienia
::  OLD: \add_pozy/zk.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.MENU_PTH+='D';
ZK_P.cntx_psh();
ATR.MJS:='ZK_P';
BEER.DOL:=2;
BEER.M:=ZK_P.M;
BEER.ZAMUPR:=exec('jakieupr','zamsiw_wspolne',ZK_P.RODZ='W');
BEER.OKZKP:=0;
exec('dol_pozy','zamsiw_poz');
ZK_P.cntx_pop();
exec('zam_reko','zamsiw_nag');
BEER.MENU_PTH-=1;
1


\dol_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: dodawanie pozycji zamowienia (jezeli nie ma jeszcze zdanej pozycji)
::       wychodzimy od kartoteki materialowej-podobnie jak dla tymczasow
::  OLD: \dol_pozy/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.ZK_N:=ZK_N.ref;
BEER.WG:=ZK_N.WG;
BEER.TYP:='Z';
DPOZ.DT:=date();
BEER.IND:='ARODZ';
POMOC.MGR:=null();

{? BEER.DOL=1
|| {? ZK_N.T().R='Z'
   || ZK_P.win_edit('REDZ');
      ZK_P.win_sel('ZAMZ')
   || ZK_P.win_edit('REDW');
      ZK_P.win_sel('ZAMW')
   ?}
?};

ZK_P.index('TYPN');
ZK_P.prefix('A',BEER.TYP,BEER.ZK_N,1);
{? ~ZK_P.first() | BEER.DOL=2
|| _beerdol:=BEER.DOL;
   M.index(BEER.IND);
   M.prefix('T','T');
   {!
   |? exec('zam_stan','magazyn_stan',1,BEER.ZK_N().T().R='Z',,1)
   !};
   exec('obl_warz','zamsiw_nag',BEER.ZK_N);
   BEER.DOL:=_beerdol;
   {? BEER.DOL=1
   || ZK_P.index('TYPN');
      ZK_P.prefix('A',BEER.TYP,BEER.ZK_N,1)
   ?}
?};
{? BEER.DOL=1
||
   exec('zkp_act','zamsiw_poz');
   ZK_P.select();
   ZK_P.actions(ZK_P.win_sel('?'),'')
?};
exec('obl_warz','zamsiw_nag',BEER.ZK_N);
MG.f_clear();
JM.f_clear();
JM.win_dict('WER');
''


\pop_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: poprawia pozycje na zamowieniu
::   WE: [_a] - INTEGER - 0/1 - czy okno wywołane od strony planu strategicznego
::   WY: 0 / 1
::  OLD: \pop_pozy/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_px_plan:=0;
{? var_pres('_a')=type_of(0)
|| _px_plan:=_a
?};
:: czy przypadkiem pozycja nie zamknięta
{? ZK_P.END || FUN.info('Pozycja zamknięta do realizacji\nModyfikacja niemożliwa.'@); return(0) ?};

POMOC.RODZ:='T';
BEER.OKZKP:=1;
ATR.MJS:='ZK_P';
_oldmg:=ZK_P.RMAG;

{? ZK_P.ZD_POZ<>''
||
   exec('zdp_info','zamsiw_poz');
   FUN.info('Pozycja powiązana z dostawą dedykowaną %1.'@[ZK_Z.ZDP_INFO])
?};

BEER.MENU_PTH+='P';
_wyn:=1;

:: _pop_rea - poprawa realizowanej pozycji =0-niedostępna, =1-dostępna
_pop_rea:=0;

{? ZK_N.T().R='Z' & exec('get','#params',3010,2,OPERATOR.USER)='T'
||
:: ile na powiazanych zleceniach
   _ilzl:=0;
   ZLZAM.index('ZMZL');
   ZLZAM.prefix($ZK_P.ref());
   {? ZLZAM.first()
   ||
      {!
      |?
         _ilzl+=ZLZAM.ILZL;
         ZLZAM.next()
      !}
   ?};

:: ile w powiazanym planie
   _ilpx:=0;
   PX_OBJ.index('ZK_P');
   PX_OBJ.prefix(ZK_P.name(),ZK_P.ref());
   {? PX_OBJ.first()
   || _ilpx+=PX_OBJ.IL_PLAN
   ?};

:: ile zarezerwowano
   _ilr:=ZK_P.ILRB+ZK_P.ILRW+ZK_P.ILRD;

   _pop_rea:=(_ilzl+_ilpx+_ilr)=0
?};

:: ile zrealizowano
VAR_DEL.delete('__ZKP_ILR');
__ZKP_ILR:=ZK_P.ILZ-ZK_P.ILP;

D_HELP.M_ZKP:={? ZK_P.M<>null || ZK_P.M().KTM || '' ?};
_prilz:=BEER.PRILZ;
BEER.PRILZ:=ZK_P.ILZ;
{? (ZK_P.M().RODZ='T' | ZK_P.M=null()) & (ZK_P.ILZ=ZK_P.ILP & ZK_P.ILP<>0 | _pop_rea)
|| _prrez:=ZK_P.REZ;
   BEER.ZAMUPR:=exec('jakieupr','zamsiw_wspolne',ZK_P.RODZ='W');
   exec('oneuprzk','zamsiw_wspolne',BEER.ZK_N,BEER.ZAMUPR);
   {? ZK_P.N().MG<>null
   || ZK_P.RMAG:=ZK_P.N().MG;
      ZK_P.put(1)
   ?};
   BEER.DOL:=0;
   BEER.ILZ:=ZK_P.ILZ;
   BEER.REZ:=ZK_P.REZ;
   BEER.DOST:=ZK_P.DOST;
   BEER.JM:=ZK_P.M().J;
   BEER.IL22:=ZK_P.IL2;
:: przeliczniki jednostek
   exec('ustazprz','zamsiw_poz',ZK_P.M,ZK_P.M().J);

   ZK_P.get();
   _term:=ZK_P.DT;
   _dan:=obj_new(8);
   _dan[1]:=ZK_P.ref();  _dan[2]:=ZK_P.ILP;  _dan[3]:=ZK_P.ILZ;    _dan[4]:=ZK_P.SR;
   _dan[5]:=ZK_P.CENA; _dan[6]:=ZK_P.CWAL; _dan[7]:=ZK_P.M().VAT().KOD; _dan[8]:=ZK_P.M;
   _rmag:=ZK_P.RMAG; _ilewgd:=0;
   {? (_ilewgd:=exec('sprwgdst','zamsiw_poz',ZK_P.N,ZK_P.POZ))>0 || ZK_P.REZ:=1; ZK_P.DOST:=1; ZK_P.put(1) ?};
   ATR.M_ATR:=ZK_P.M().M_ATR;
   ATR.UZUP:='';
   BEER.RDOST:=_ilewgd>0;
   BEER.RDST:=_ilewgd;
   BEER.RAUT:=ZK_P.SR-BEER.RDST;
   _bylrez:=ZK_P.REZ;
   _win_red:=_win_red0:='';
   ZK_P.cntx_psh();
   {? var_pres('PxSelect')>100 | _px_plan>0
   ||
      _px_plan:=1;
::    W planie strategicznym dostepna tylko mozliwosc poprawiania daty
      ZK_P.win_edit('REDDT')
   |? __ZKP_ILR
   ||
      ZK_P.win_edit('POPREA1')
   ||
      _win_red0:='RED'+ZK_P.RODZ;
      _win_red:=exec('zkp_win_edit','zamsiw_poz');
      ZK_P.win_edit(_win_red);
      exec('zkp_btnseopt_rezer','zamsiw_poz','state=grayed');
      {? ~exec('samgdost','mat_atr')
      || ZK_P.btn_eopt(_win_red,'ATRYB','state=grayed')
      || ZK_P.btn_eopt(_win_red,'ATRYB','state=normal')
      ?}
   ?};
   _magdst:={? ZK_P.RMAG<>null() || (1+ZK_P.RMAG().TYP)='D' || exec('samgdost','mat_atr') ?};
   {? _magdst
   || ATR.MJS:='ZK_P';
      ATR.M_ATR:=ZK_P.M().M_ATR
   || ATR.MJS:='M_ATR';
      M_ATR.blank(0);
      ATR.M_ATR:=null()
   ?};
   ATR.FLAG_ED:=_magdst & ATR.CZY_ATR & ATR.M_ATR().EDIT & ~exec('czysarez','rezerwacje');
   ATR.FLAG:={? ATR.FLAG_ED & ZK_P.M().M_ATR<>null() || 2 || 0 ?};
   {? ATR.FLAG_ED || {? ZK_P.M().M_ATR<>null() || ATR.FLAG_ED:=2 ?} ?};
   {? ZK_P.DK_C<>null() & ZK_P.DK_C().M_ATR<>null()
   || ZK_P.DK_C().M_ATR().SYM;
      {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():=($('ZK_P.DK_C().WAR'+form(_i,-2,,'99')))() !}
   || {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():='' !}
   ?};
   exec('set_efld_opt','mat_atr','ZK_P');
   exec('set_efld_opt','zamsiw_poz');
   POMOC.MGRZ:=ZK_P.M().MGR;
   POMOC.MGR:=ZK_P.M().MGR;
   {? POMOC.MGR<>null()
   || MGR.seek(POMOC.MGR)
   ?};
   BEER.ORD:=exec('ordIL','jm',ZK_P.M,0);
   {? __ZKP_ILR
   || {? ~BEER.ORD || ZK_P.efld_opt('POPREA1','editable=0',,'ILZ') || ZK_P.efld_opt('POPREA1','editable=1',,'ILZ') ?}
   || {? ~BEER.ORD || ZK_P.efld_opt(_win_red,'editable=0',,'ILZ') || ZK_P.efld_opt(_win_red,'editable=1',,'ILZ') ?}
   ?};
   {? ZK_P.edit("exec('chk_pozy','zamsiw_poz')")
   || _mat:=ZK_P.M;
      _rez:=ZK_P.REZ; _prrez:=ZK_P.REZ;
      {? ZK_P.RMAG=null & ZK_P.ILR=0 & ~ZK_P.ONLY || ZK_P.MG:=null ?};
      {? ZK_P.M().RODZ='T'
      || _zmien:=ZK_P.DT<>_term;
         {? _zmien || ZK_P.DODT:=ZK_P.DT ?};
         ZK_P.put(1);
         {? _zmien
         || REZ.index('ZK_P');
            REZ.prefix(ZK_P.ref());
            {? REZ.first()
            || {!
               |? {? (REZ.RODZ='B' | REZ.AUTO) & REZ.DODT=_term
                  || REZ.DODT:=REZ.ZK_P().DT;
                     REZ.put(1)
                  ?};
                  REZ.next()
               !}
            ?}
         ?};
         _zkp:=tab_tmp(1,'MAT','STRING[16]','','ZKP','STRING[16]','');
         _zkp.blank(); _zkp.MAT:=$ZK_P.M; _zkp.ZKP:=$ZK_P.ref(); _zkp.add(1);
         {? ZK_P.REZ
         || {? ~_bylrez
            || exec('pop_rezy','rezerwacje',ZK_P.ref(),ZK_P.ILZ);
               exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,ZK_P.ILZ,$ZK_P.N,_zkp)
            || exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,fabs(ZK_P.ILZ-BEER.ILZ),$ZK_P.N,_zkp)
            ?}
         || exec('update','rezerwacje','ZK_P',ZK_P.ref(),ZK_P.RMAG,ZK_P.M,0);
            exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,BEER.ILZ,$ZK_P.N,_zkp);
            {? _dan[8]<>_mat
            || exec('aktu_zam_sm','magazyn_stan',_dan[8]);
               exec('aktu_zam_sm','magazyn_stan',_mat,ZK_P.RMAG)
            ?}
         ?};
         obj_del(_zkp)
      || {? ZK_P.RMAG<>null & ZK_P.RMAG().U='T' & ZK_P.ILP>0 || 'T' || 'N' ?};
         ZK_P.put(1)
      ?};
      exec('war_zam','zamsiw_nag',ZK_P.N,_dan);
      exec('aktu_stu','zamsiw_wspolne',_mat,1,1);
      exec('modiRekD','reklamacje',ZK_P.uidref(),ZK_P.M,ZK_P.ILZ);
      {? ZK_N.MG<>null & ZK_N.MG().PAL='T' || exec('ctrl_pal','zamsiw_palety') ?};

::    Produkcja - jesli dostepny modul planow strategicznych to po udanej
::    edycji pozycji zamowienia aktualizuje obiekt planowania
      {? exec('tpp_lic','tpp')='T'
      || exec('zkp2obj','px_obj')
      ?};
      {? ZK_P.RMAG<>_oldmg || exec('aktu_zam_sm','magazyn_stan',ZK_P.M,ZK_P.RMAG) ?}
   ||
      {? _px_plan
      || _wyn:=0
      ?};
::    nacisnieto klawisz ESC przywracamy poprzedniego RMAG-a
      {? _rmag<>ZK_P.RMAG
      || _nag:=ZK_P.N;
         _poz:=ZK_P.POZ;
         ZK_P.cntx_psh();
         ZK_P.index('NAG');
         ZK_P.prefix(_nag,_poz);
         {? ZK_P.first()
         || {!
            |? ZK_P.RMAG:=_rmag;
               ZK_P.MG:=_rmag;
               {? ~(ZK_P.MG().TYP*'DOST') || ZK_P.DOST:=0 ?};
               ZK_P.ONLY:=_rmag<>null;
               ZK_P.put(1);
               ZK_P.next()
            !}
         ?};
         ZK_P.cntx_pop()
      ?};
      {? ZK_P.DOST || ZK_P.get(); ZK_P.DOST:=0; ZK_P.REZ:=_prrez; ZK_P.put(1) ?}
   ?};
   ZK_P.cntx_pop();
   obj_del(_dan);
   {? _win_red<>'' & _win_red<>_win_red0
   || ZK_P.win_edit(_win_red0);
      ZK_P.win_edel(_win_red)
   ?};
   {? BEER.MENU_PTH='ZZYDP' | BEER.MENU_PTH='ZZTYDP'
   || grp_disp(M,'WER_ZAM');
      grp_disp(__smmag,__okn)
   ?};
   MG.f_clear();
   JM.f_clear();
   JM.win_dict('WER')
|? ZK_P.M().RODZ='U' & ZK_P.ILZ=ZK_P.ILP
||
   BEER.ILZ:=ZK_P.ILZ;
   POMOC.RODZ:='U';
   ZK_P.get();
   _dan:=obj_new(8);
   _dan[1]:=ZK_P.ref();  _dan[2]:=ZK_P.ILP;  _dan[3]:=ZK_P.ILZ;    _dan[4]:=ZK_P.SR;
   _dan[5]:=ZK_P.CENA; _dan[6]:=ZK_P.CWAL; _dan[7]:=ZK_P.M().VAT().KOD; _dan[8]:=ZK_P.M;
   {? BEER.TYPYZAM().R='W'
   || _win_red0:='REDUW'
   || _win_red0:='REDU'
   ?};
   _win_red:=exec('zkp_win_edit','zamsiw_poz',_win_red0);
   ZK_P.win_edit(_win_red);
   {? BEER.TYPYZAM().R<>'W'
   || ZK_P.efld_opt(_win_red,'mark=1',BEER,'SMG')
   ?};
   {? ZK_P.edit("exec('chk_pozy_usl','zamsiw_poz')")
   || {? ZK_P.MG<>null || ZK_P.RMAG:=ZK_P.MG ?};
      ZK_P.put(1);
      exec('war_zam','zamsiw_nag',ZK_P.N,_dan);
      exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
      exec('aktznzkn','zamsiw_nag',ZK_P.N,1)
   ?};
   obj_del(_dan);
   {? _win_red<>_win_red0
   || ZK_P.win_edit(_win_red0);
      ZK_P.win_edel(_win_red)
   ?};
   ZK_P.efld_opt('REDU','mark=0',BEER,'SMG');
   POMOC.RODZ:='T'
|? ZK_P.M().RODZ='T' & ZK_P.ILP>0
||
   ZK_P.win_edit('POPREA');
   {? ZK_P.edit("exec('chk_pozy','zamsiw_poz')")
   || ZK_P.put(1);
      _wyn:=1
   || _wyn:=0
   ?}
|? ZK_P.M().RODZ='U' & ZK_P.ILP>0
||
   FUN.info('Pozycja już realizowana, modyfikacja niemożliwa.'@);
   _wyn:=0
|? ZK_P.ILP=0
||
   FUN.info('Pozycja została zrealizowana.\nPoprawianie pozycji niemożliwe.'@);
   _wyn:=0
||
   _wyn:=0
?};
BEER.MENU_PTH-=1;
VAR_DEL.delete('__ZKP_ILR');
BEER.PRILZ:=_prilz;
_wyn


\add_zusl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: dolaczenie do pozycji zamowienia uslugi
::  OLD: \add_zusl/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_refzkp:=null();
POMOC.RODZ:='U';
_mgrp:=Plugin.run('BLANK_GRPMAG_001','ZK_N');
POMOC.MGRZ:={? exec('pr_mgrz','zamsiw_poz') & var_pres('_mgrp')=type_of(null()) || _mgrp || null() ?};
{? POMOC.MGRZ().RODZ<>'U' || POMOC.MGRZ:=null() ?};
POMOC.MGR:=null();
ZK_P.cntx_psh;
BEER.DOL:=2;
BEER.ZK_N:=ZK_N.ref;
BEER.WG:=ZK_N.WG;
BEER.TYP:='Z';
DPOZ.DT:=date();
BEER.IND:='RODZ';
ZAKR.MATU:='A';
{? BEER.TYPYZAM().R='W'
|| _win_red:=exec('zkp_win_edit','zamsiw_poz','REDUW');
   ZK_P.win_edit(_win_red)
|| _win_red:=exec('zkp_win_edit','zamsiw_poz','REDU');
   ZK_P.win_edit(_win_red);
   ZK_P.efld_opt(_win_red,'mark=1',BEER,'SMG')
?};
ZK_P.blank;
ZK_P.WAL:=ZK_P.N().WAL;
{? ZK_P.WAL<>INFO.NAROD || ZK_P.KRS:=ZK_P.N().KRS ?};
{? ZK_P.RMAG<>null || ZK_P.MG:=ZK_P.RMAG ?};
ZK_P.M:=null;
BEER.JM:=null;
M.cntx_psh();
M.win_dict('NL_WERU');
_edit:=M.win_edit('?');
_patt:=M.win_patt('?');

{? ZK_P.edit("exec('chk_pozy','zamsiw_poz')")
|| ZK_P.ILP:=ZK_P.ILZ;
   {? ZK_P.MG<>null || ZK_P.RMAG:=ZK_P.MG ?};
   ZK_P.KH:=ZK_P.N().KH;
   ZK_P.KH_ODB:=ZK_P.N().ODB;
   ZK_P.HAN:=ZK_P.N().HAN;
   ZK_P.add(1);
   _refzkp:=ZK_P.ref();
   exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
   exec('aktznzkn','zamsiw_nag',ZK_P.N,1);
   exec('obl_warz','zamsiw_nag',BEER.ZK_N)
?};
M.win_edit(_edit);
M.win_patt(_patt);
M.cntx_pop();
ZK_P.cntx_pop;
{? _refzkp<>null() || ZK_P.seek(_refzkp) ?};
ZK_P.efld_opt('REDU','mark=0',BEER,'SMG');
POMOC.RODZ:='T';
''


\chk_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: sprawdza wypelnienie danych dla pozycji zamowienia
::   WE: 0 - dokument manualny (domyślnie), 1 - import z komunikatu EDI
::       _b - nazwa konfiguracji (BASELINKER/ABSTOREB2B/ABSTOREB2C)
::  OLD: \chk_pozy/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _edi:=_a
|| _edi:=0
?};
_name_conf:={? var_pres('_b')=type_of('')|| _b || '' ?};
_wyn:='';
_web:=+app_info('web_sesid')<>0;
_prod:=exec('tte_lic','tte');
{? ~ZK_P.REZ || ZK_P.ODDT:=ZK_P.DODT:=date(0,0,0) ?};
{? {? _edi || ZK_P.M=null() || D_HELP.M_ZKP='' ?}
|| {? _web
   || _msg:='Należy podać indeks usługi lub materiału.'@
   |? _edi
   || {? var_pres('FIND_M')=type_of('')
      || {? FIND_M=''
         || _msg:='Należy podać indeks usługi lub materiału (nie podano kodu).'
         || _msg:='Należy podać indeks usługi lub materiału (nieznany kod: %1).'@[FIND_M]
         ?}
      || _msg:='Należy podać indeks usługi lub materiału.'@
      ?}
   || _msg:={? (ZK_P.win_edit('?')+1)='U'
               || 'Należy podać indeks usługi.'@
               || 'Należy podać indeks materiału.'@
               ?}
   ?};
   {? _edi
   || _msg:='Pozycja %1: '[$ZK_P.POZ]+_msg;
      exec('add_kom','#message',_msg,4,{? ZK_P.N().ZAM_KL='' || ZK_P.N().SYM || ZK_P.N().ZAM_KL ?})
   || FUN.emsg(_msg)
   ?};
   _wyn:='M_ZKP'
?};
{? (_wyn='' | _edi) & ZK_P.M<>null() & ZK_P.M().RODZ='U' & ZK_P.MG=null & BEER.TYPYZAM().R<>'W'
|| _msg:='Należy podać magazyn.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$ZK_P.POZ]+_msg;
      exec('add_kom','#message',_msg,4,{? ZK_P.N().ZAM_KL='' || ZK_P.N().SYM || ZK_P.N().ZAM_KL ?})
   || FUN.emsg(_msg)
   ?};
   _wyn:='SMG'
?};
{? (_wyn='' | _edi) & ZK_P.ILZ<=0
|| _msg:='Niepoprawna ilość zamawiana.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$ZK_P.POZ]+_msg;
      exec('add_kom','#message',_msg,4,{? ZK_P.N().ZAM_KL='' || ZK_P.N().SYM || ZK_P.N().ZAM_KL ?})
   || FUN.emsg(_msg)
   ?};
   _wyn:='ILZ'
?};
{? (_wyn='' | _edi) & (ZK_P.DOR<0 | ZK_P.DOR>ZK_P.ILP)
|| _msg:='Niepoprawna ilość do rezerwacji.\nIlość powinna być mniejsza lub równa od ilości pozostałej.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$ZK_P.POZ]+gsub(_msg,'\n',' ');
      exec('add_kom','#message',_msg,4,{? ZK_P.N().ZAM_KL='' || ZK_P.N().SYM || ZK_P.N().ZAM_KL ?})
   || FUN.emsg(_msg)
   ?};
   _wyn:='DOR'
?};
{? (_wyn='' | _edi) & ZK_P.REZ & ZK_P.DODT>date(0,0,0) & ZK_P.ODDT>ZK_P.DODT
|| _msg:='Niepoprawny zakres dat dla okresu rezerwacji.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$ZK_P.POZ]+_msg;
      exec('add_kom','#message',_msg,4,{? ZK_P.N().ZAM_KL='' || ZK_P.N().SYM || ZK_P.N().ZAM_KL ?})
   || FUN.emsg(_msg)
   ?};
   _wyn:='DODT'
?};
{? (_wyn='' | _edi) & ZK_P.RODZ='Z' & ZK_P.WAL=null
|| _msg:='Należy podać walutę.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$ZK_P.POZ]+_msg;
      exec('add_kom','#message',_msg,4,{? ZK_P.N().ZAM_KL='' || ZK_P.N().SYM || ZK_P.N().ZAM_KL ?})
   || FUN.emsg(_msg)
   ?};
   _wyn:='WAL'
?};
{? (_wyn='' | _edi) & ZK_P.M<>null() & ZK_P.RODZ='Z' & ZK_P.SV=null
|| _msg:='Niewypełnione pole: Stawka VAT.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$ZK_P.POZ]+_msg;
      exec('add_kom','#message',_msg,4,{? ZK_P.N().ZAM_KL='' || ZK_P.N().SYM || ZK_P.N().ZAM_KL ?})
   || FUN.emsg(_msg)
   ?};
   _wyn:='SV'
?};
{? (_wyn='' | _edi) & ZK_P.RODZ='Z' & ZK_P.CENA<0
|| _msg:='Cena nie może być ujemna.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$ZK_P.POZ]+_msg;
      exec('add_kom','#message',_msg,4,{? ZK_P.N().ZAM_KL='' || ZK_P.N().SYM || ZK_P.N().ZAM_KL ?})
   || FUN.emsg(_msg)
   ?};
   _wyn:='CENA'
?};
{? (_wyn='' | _edi) & ZK_P.RODZ='Z' & ZK_P.CWAL<0
|| _msg:='Cena nie może być ujemna.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$ZK_P.POZ]+_msg;
      exec('add_kom','#message',_msg,4,{? ZK_P.N().ZAM_KL='' || ZK_P.N().SYM || ZK_P.N().ZAM_KL ?})
   || FUN.emsg(_msg)
   ?};
   _wyn:='CWAL'
?};
{? _wyn='' & ~_edi & ~_web
   & ZK_P.RODZ='Z' & (ZK_P.CENA | ZK_P.CWAL | DISP.RABP)
   & exec('czy_cena_z_tap','ceny','ZK_P').WYN
|| _wyn:={? ZK_P.WAL<>exec('bl_nwal','ustawienia') || 'CWAL' || 'CENA' ?}
?};
{? _wyn='' & ~_edi & ~_web
   & ZK_P.RODZ='Z' & ~exec('spr_rab','ceny',DISP.RABP,0,,'zkpoz')
|| _wyn:=exec('rab_2130','ceny',ZK_P,'RABP')
?};
{? (_wyn='' | _edi) & ZK_P.DT<ZK_P.N().DT
|| _msg:='Termin realizacji dla pozycji musi być większy lub równy\nod terminu realizacji dla całego zamówienia.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$ZK_P.POZ]+gsub(_msg,'\n',' ');
      exec('add_kom','#message',_msg,4,{? ZK_P.N().ZAM_KL='' || ZK_P.N().SYM || ZK_P.N().ZAM_KL ?})
   || FUN.emsg(_msg)
   ?};
   _wyn:='DT'
?};
{? (_wyn='' | _edi) & ZK_P.REZ=1 & ZK_P.DT<date()
|| _msg:='Dla pozycji wybrano automatyczną rezerwację materiału.\n'
            'Termin realizacji nie może być wcześniejszy od bieżącej daty - %1.'@[$date()];
   {? _edi
   || _msg:='Pozycja %1: '[$ZK_P.POZ]+gsub(_msg,'\n',' ');
      exec('add_kom','#message',_msg,4,{? ZK_P.N().ZAM_KL='' || ZK_P.N().SYM || ZK_P.N().ZAM_KL ?})
   || FUN.emsg(_msg)
   ?};
   _wyn:='DT'
?};
{? (_wyn='' | _edi) & ZMSLAPP.ZL1W='' & {? ZK_P.N().T().TYPYDOK<>null || ZK_N.T().TYPYDOK().ZLEC='T' || 0 ?}
   & ZK_P.N().T().R='W'
|| _msg:='Niewypełnione pole: Zlecenie.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$ZK_P.POZ]+_msg;
      exec('add_kom','#message',_msg,4,{? ZK_P.N().ZAM_KL='' || ZK_P.N().SYM || ZK_P.N().ZAM_KL ?})
   || FUN.emsg(_msg)
   ?};
   _wyn:='ZL1W'
?};
{? (_wyn='' | _edi) & _prod='T' & ZK_N.T().R<>'D'
|| {? ~exec('po_zkp_pldata','zamsiw_poz',{? _edi || 2 || 1?},_name_conf)
   || _wyn:='PL_DATA'
   |? ~exec('valid_time','#field',ZK_P.PL_TIME,_edi)
   || {? _edi
      || _msg:='Pozycja %1: Godzina musi mieścić się w przedziale %2 ÷ %3.'@[$ZK_P.POZ,'0:0:0','23:59:59'];
         exec('add_kom','#message',_msg,4,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
      ?};
      _wyn:='PL_TIME'
   ?}
?};
:: brak wspolpracy z produkcja - przepisanie daty
{? _prod='N'
|| {? _edi & ZK_P.PL_DATA<>ZK_P.DT
   || _msg:='Zmieniono wewnętrzny termin realizacji na planowany termin realizacji zamówienia.';
      _msg:='Pozycja %1: '[$ZK_P.POZ]+_msg;
      exec('add_kom','#message',_msg,2,{? ZK_N.ZAM_KL='' || ZK_N.SYM || ZK_N.ZAM_KL ?})
   ?};
   ZK_P.PL_DATA:=ZK_P.DT
?};
:: uzupelnia dane transportowe
{? _wyn=''
||
   ZK_P.RR:=ZK_P.DT~1;
   ZK_P.RM:=ZK_P.DT~2;
   ZK_P.RT:=exec('NumberOfWeek','#datetime',ZK_P.DT);
   {? ATR.FLAG_ED & ATR.FLAG<>1
   || exec('akcepatr','mat_atr',0,1)
   ?}
?};
:: Sprawdzanie poprawnosci zwrotu planowania i znacznika kontunuacji po przekroczeniu
{? _wyn='' & ~_edi
|| _wyn:=exec('pl_force_chk','px_utils','ZK_P')
?};
{? _wyn='' & (';AR'*ZK_P.T2)>1 & ZK_P.REZ & ~ZK_P.DOR || exec('po_ilz','zamsiw_poz') ?};
:: sprawdzenie wdrożeniowe
{? _wyn='' & Plugin.runnable('VAL_POZLOG_001')
|| _wyn:=Plugin.run('VAL_POZLOG_001','ZK_P')
?};
_wyn


\chk_pozy_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PS [17.00]
:: OPIS: Sprawdza wypelnienie danych dla pozycji zamowienia wywołanego z grupowej selekcji
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? ZK_P.ILZ<=0 || FUN.info('Zamówiona ilość musi być większa od zera.'@); _res:='ILZ' ?};

BEER.ZAMUPR:=exec('jakieupr','zamsiw_wspolne',ZK_P.RODZ='W');
{? BEER.ZAMUPR & ZK_P.RMAG=null
|| FUN.info('Należy podać magazyn.'@);
   _res:='RMAG'
|? ZK_P.RMAG().PAL='T'
|| FUN.info('Zabronione przypisanie.\nNie można wybrać magazynu z obsługą palet.'@);
   ZK_P.RMAG:=null;
   _res:='RMAG'
?};
_res


\po_zkp_pldata
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Po wewnetrznym terminie realizacji ZK_P.PL_DATA
::   WE: [_a] - INTEGER - [1]/2 - 1 - komunikaty na ekran
::                                2 - komunikaty do KOMMa
::       _b - nazwa konfiguracji (BASELINKER/ABSTOREB2B/ABSTOREB2C)
::  OLD: \po_zkp_pldata/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_display:=1;
{? var_pres('_a')=type_of(0)
|| _display:=_a
?};
_name_conf:={? var_pres('_b')=type_of('')|| _b || '' ?};
{? ZK_P.PL_DATA<>date(0,0,0) & ZK_P.PL_DATA>ZK_P.DT
||
   _msg:='Wewnętrzny termin realizacji nie może być późniejszy niż planowany termin realizacji pozycji zamówienia.'@;
   {? _display=1
   || _msg+='\n'+'Należy podać wcześniejszą datę.'@;
      FUN.info(_msg)
   |? _display=2
   || KOMM.add(_msg,2,,1)
   ?};
   _res:=0
|? ZK_P.PL_DATA<>date(0,0,0) & ZK_P.PL_DATA<date() & _name_conf=''
|| _msg:='Wewnętrzny termin realizacji nie może być wcześniejszy od bieżącej daty.'@;
   {? _display=1
   || FUN.info(_msg)
   |? _display=2
   || KOMM.add(_msg,2,,1)
   ?};
   _res:=0
?};
_res


\chk_pozy_usl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza wypelnienie danych dla pozycji zamowienia
::   WY: akronim pola do poprawnego wypelnienia lub ''
::  OLD: \chk_pozy/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_a:='';
{? ZK_P.M=null
|| FUN.info('Należy podać usługę.'@); _a:='M'
|? _a='' & ZK_P.ILZ<=0
|| FUN.info('Niepoprawna ilość zamawiana.'@); _a:='ILZ'
|? ZK_P.M().RODZ='U' & ZK_P.MG=null & BEER.TYPYZAM().R<>'W'
|| FUN.info('Należy podać magazyn.'@); _a:='SMG'
|? ZK_P.CENA<0
|| FUN.info('Cena nie może być ujemna.'@); _a:='CENA'
?};
_a


\del_rere
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: usuniecie znacznika rezerwacji na pozycjach zamowienia
::   WE: [_a] - 1-pytac (domyslnie)  0-nie pytac
::       [_b] - 1-usuwac wg dostaw   0-nie usuwac (domyslnie)
::       [_c] - czy usuwac zapisy o rezerwacji (T/N) [T - domyslnie]
::       [_d] - czy do wysylki domyslnie nie-0 tak-1
::  OLD: \del_rere/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>2 || _c:='T' ?} || _c:='T' ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};


{? {? _a
   || FUN.ask('Usunięcie znacznika rezerwacji usunie'
              '\nrezerwacje na wszystkich magazynach'
              '\noraz umieści daną pozycję na ostatnim miejscu'
              '\nw kolejce pozycji zamawianych'
              '\n\nCzy usunąć rezerwację ?'@)
   || 1
   ?}
||
   _sr:=0;
   _trans:=do_state();
   {? _trans=0
   ||
::    wylaczenie komunikatu - kilka stanowisk moze przetwarzac ten sam rekord w transakcji
      _no_msg:=no_msg(1);
      do()
   ?};
   _nag:=ZK_P.N; _poz:=ZK_P.POZ;
   _mat:=ZK_P.M; _rmag:=ZK_P.RMAG;
   _wew:=ZK_P.RODZ='W';

   ZK_P.cntx_psh;
   ZK_P.index('NAG');
   ZK_P.prefix(_nag,_poz);
   {? ZK_P.first
   || {!
      |?
         {? ZK_P.TOP
         || _sr+={? ~_b & ZK_P.DOST || ZK_P.ILR || 0 ?};
            ZK_P.next()
         |? ~_b & ZK_P.DOST
         || _sr+=ZK_P.ILR;
            ZK_P.next()
         |? ZK_P.count
         || ZK_P.ILR:=0;
            ZK_P.REZ:=0;
            ZK_P.A:='N';
            ZK_P.put(1);
            ZK_P.next()
         || _uidzkp:=ZK_P.uidref();
            _ok:=ZK_P.del();
            exec('delaRekD','reklamacje',_uidzkp);
            _ok
         ?}
      !}
   ?};
   ZK_P.cntx_pop;
   ZK_P.get();

   {? _c='T' || ZK_P.REZ:=0 ?};
   {? ~ZK_P.DOST | _b
   || ZK_P.DOST:=0;
      ZK_P.ILR:=0
   ?};
   ZK_P.SR:=_sr;
   {? ~ZK_P.ONLY || ZK_P.MG:=ZK_P.RMAG ?};
   {? _c='T' || ZK_P.NR:=exec('blnr_kol','zamsiw_poz',ZK_P.M) ?};
   _put:=ZK_P.put(1);"komunikat pojawia sie w logu - powod uzycie funkcji no_msg";
   {? _trans=0
   ||
      no_msg(_no_msg);
      end()
   ?};

   BEER.REZ:=0;

:: aktualizacja stanow magazynowych
   {? _rmag<>null
   || exec('obl_stan','magazyn_stan',_mat,1,_rmag)
   || USERS_UP.index('MG');
      USERS_UP.prefix(null,'ZA'+{? ~_wew || 'M' || 'W' ?},ST.ODDZ);
      {? USERS_UP.first()
      ||
         {! |? exec('obl_stan','magazyn_stan',_mat,1,USERS_UP.MG);USERS_UP.next !}
      ?}
   ?};
   1
?};
''


\add_rerez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: nadanie znacznika rezerwacji
::   WE:  [_a] - magazyn dla funkcji rozpisz
::        [_b] - czy kompletacja wysylki - domyslnie 0-nie 1-tak 2-tak realizacja
::        [_c] - tabela danych magazyn/ilosc
::        [_d] - 1-nie zmieniaj numeru / 0-zmieniaj(domyslnie)
::  OLD: \add_rerez/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_tabmag:=1;
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>118 || _tabmag:=0 ?} || _tabmag:=0 ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};

{? ZK_P.M().RODZ<>'U'
|| _wew:=ZK_P.RODZ='W';
   BEER.DOL:=0;
   BEER.ILZ:=ZK_P.ILZ;
   BEER.REZ:=ZK_P.REZ;
   BEER.JM:=ZK_P.M().J;
   ZK_P.get;

   ZK_P.REZ:=1;
   {? ~_d || ZK_P.NR:=exec('blnr_kol','zamsiw_poz',ZK_P.M) ?};
   ZK_P.put(1);
   _rmag:=ZK_P.RMAG;
   _mat:=ZK_P.M;
   ZK_P.cntx_psh();
   {? ~ZK_P.DOST
   || _rozn:=ZK_P.ILZ-BEER.ILZ;
      ZK_P.ILP+=_rozn;
      {? _tabmag
      || _ilp:=0;
         _c.clear();
         {? _c.first() || {! |? _ilp+=_c.ILR; _c.next() !} ?}
      || _ilp:=ZK_P.ILP
      ?};
      {? ZK_P.REZ || ZK_P.ILR:=_ilp ?};
      ZK_P.put(1)
   ?};
   ZK_P.cntx_pop();

:: aktualizacja tabeli SM
   {? _rmag<>null
   ||
      exec('obl_stan','magazyn_stan',_mat,1,_rmag)
   || USERS_UP.index('MG');
      USERS_UP.prefix(null,'ZA'+{? ~_wew || 'M' || 'Z' ?},ST.ODDZ);
      {? USERS_UP.first()
      ||
         {! |? exec('obl_stan','magazyn_stan',ZK_P.M,1,USERS_UP.MG);USERS_UP.next !}
      ?}
   ?}
?};
1


\wyb_pozy_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: grupa przed wybor okna WER_ZAM tabeli M
::   WY: 1 - poprawiac zaznaczone wiersze, 0 - wpp
::  OLD: \wyb_pozy_gr/zk.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__wybgrp');
__wybgrp:=1;
{? var_pres('__tab')>100 || obj_del(__tab) ?};
__tab:=M.sel_aget(); M.sel_adel();
ZK_P.blank(1);
ZK_P.N:=ZK_N.ref();
ZK_P.WAL:=ZK_N.WAL;
ZK_P.KRS:=ZK_N.KRS;
ZK_P.REZ:=exec('bl_zkpre','zamsiw_poz');
ZK_P.DT:={? ZK_P.N().DT<date() || date() || ZK_P.N().DT ?};
ZK_P.PL_DATA:={? ZK_P.N().PL_DATA<date() || date() || ZK_P.N().PL_DATA ?};
ZK_P.RMAG:=ZK_P.N().MG;
{? ZK_N.T().R='Z'
|| exec('set_efld_opt','zamsiw_poz','REDZ_GR');
   ZK_P.win_edit('REDZ_GR')
|| exec('set_efld_opt','zamsiw_poz','REDW_GR');
   ZK_P.win_edit('REDW_GR')
?};
M.cntx_psh();
{? ZK_N.ZL<>null || ZK_P.ZL:=ZK_N.ZL ?};
{? ZK_N.WYD<>null || ZK_P.WYD:=ZK_N.WYD ?};
_czy_ed:=ZK_P.edit("exec('chk_pozy_gr','zamsiw_poz')");
M.cntx_pop();
{? _czy_ed=1
||
   exec('utw_zk_tymc','zamsiw_wspolne');
   __ilz:=ZK_P.ILZ;
   __wal:=ZK_P.WAL;
   __cwal:=ZK_P.CWAL;
   __krs:=ZK_P.KRS;
   __cena:=ZK_P.CENA;
   __rab:={? exec('czyrabp','ceny',TAZ.RAB_TYP) || ZK_P.RAB || ZK_P.RABK ?};
   __rez:=ZK_P.REZ;
   __dost:=ZK_P.DOST;
   __promo:=ZK_P.PROMO;
   __rmag:=ZK_P.RMAG
?};
VAR_DEL.delete('__wybgrp');
_czy_ed=1


\wyb_pozy_gp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: grupa przed wybor okna WER_ZAM tabeli M
::  OLD: \wyb_pozy_gp/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__tab')>100
||
   {? __tab.first()
   ||
      M.cntx_psh();
      {!
      |? {? M.seek(__tab.REF,)
         ||
            exec('wyb_pozy','zamsiw_poz',1,~(__tab.next & __tab.prev))
         ?};
         __tab.next()
      !};
      exec('odt_zk_tymc','zamsiw_wspolne');
      M.cntx_pop()
   ?}
?};
VAR_DEL.delete('__tab','__ilz','__wal','__cwal','__krs','__cena','__rab','__rez','__dost','__promo','__rmag')


\wyb_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: wybiera pozycje do zamowienia
::   WE: _a = 1 - grupowe dodawanie pozycji, 0 - dodawanie pojedynczej pozycji
::   WY: ''
::  OLD: \wyb_pozy/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=0 ?};
{? var_pres('_b')<>type_of(1) || _b:=1 ?};

POMOC.RODZ:='T';
BEER.DOL:=1;
BEER.RDOST:=0;
BEER.RAUT:=0;
BEER.RDST:=0;
BEER.OKZKP:=0;
ATR.MJS:='ZK_P';
BEER.MJSLOG:='ZKA';

:: uzytkownik musi wybrac magazyn

BEER.ZAMUPR:=exec('jakieupr','zamsiw_wspolne',BEER.ZK_N().T().R='W');

:: dodatkowe sprawdzenie czy uprawnienia tylko do jednego magazynu - wówczas dopisuje ten magazyn do naglowka
exec('oneuprzk','zamsiw_wspolne',BEER.ZK_N,BEER.ZAMUPR);

_oki:={? BEER.ZK_N().MG<>null
      || BEER.RMAG:=BEER.ZK_N().MG;
         1
      |? _a & __rmag<>null
      || BEER.RMAG:=__rmag;
         1
      |? BEER.ZAMUPR
      || {? ((_mag:=exec('wybwgupr','magdok_wspolne',_a,BEER.ZK_N().T().R='W')); _mag>0) || BEER.RMAG:=_mag; 1 || 0 ?}
      || 1
      ?};

{? _oki & (M.sel_size()=0 | _a)
||
   M.get;
   M.M_ATR().SYM;
   BEER.TYP:='Z';
   BEER.JM:=M.J;
   M.cntx_psh();
   ZK_P.prefix();
   ZK_P.blank();
   _win_red:=exec('zkp_win_edit','zamsiw_poz','RED'+ZK_P.RODZ);
   ZK_P.win_edit(_win_red);
   {? ~exec('samgdost','mat_atr')
   || ZK_P.btn_eopt(_win_red,'ATRYB','state=grayed');
      M_ATR.blank(0)
   || ZK_P.btn_eopt(_win_red,'ATRYB','state=normal')
   ?};
   ZK_P.SV:=exec('m_vat','material',M.ref(),ZK_P.N().KH,,ZK_N.DP~1,ZK_N.DP~2);
   ZK_P.TRN:=ZK_P.N().TRN;
   ZK_P.POJAZD:=ZK_P.N().POJAZD;

   _ldni:=exec('FindInSet','#table','USERREZ','UNIK',ZK_P.M().MGR,OPERATOR.USER,"@.USERREZ.LDNI",,,0);
   {? ~_ldni || _ldni:=exec('FindInSet','#table','USERREZ','UNIK',null(),OPERATOR.USER,"@.USERREZ.LDNI",,,0) ?};
   _zkndt:={? _ldni>0 || ZK_P.N().DP+_ldni || ZK_P.N().DT ?};
   {? ZK_P.N().DT>_zkndt || _zkndt:=ZK_P.N().DT ?};
   ZK_P.DT:={? _zkndt<date() || date() || _zkndt ?};
   ZK_P.PL_DATA:={? ZK_P.N().PL_DATA<date() || date() || ZK_P.N().PL_DATA ?};

   _war:={? ZK_P.N().MG<>null & ZK_P.N().MG().PAL='T'
         || 'N'
         || {? date<(ZK_P.DT+1) || exec('get','#params',3001,2,OPERATOR.USER) || 'N' ?}
         ?};
   {? _war='T' & ~exec('czyuprREZ','rezerwacje',OPERATOR.USER,ZK_P.M,0,ZK_P.US) || _war:='N' ?};

   ZK_P.REZ:={? _war='T' || 1 |? _war='N' || 0 || 1 ?};
   {? ~ZK_P.REZ | (ZK_P.N().MG<>null & ZK_P.N().MG().PAL='T')
   || exec('zkp_btnseopt_rezer','zamsiw_poz','state=grayed')
   || ZK_P.ODDT:={? ZK_P.N().DP>date() || ZK_P.N().DP || date() ?};
      ZK_P.DODT:=ZK_P.DT;
      exec('zkp_btnseopt_rezer','zamsiw_poz','state=normal')
   ?};
   ZK_P.RR:=ZK_P.N().RR;
   ZK_P.RM:=ZK_P.N().RM;
   ZK_P.RT:=ZK_P.N().RT;
   ZK_P.MG:={? ZK_P.ONLY | ZK_P.RMAG<>null || ZK_P.RMAG || null ?};
   ZK_P.ZL:=null;
   D_HELP.M_ZKP:=ZK_P.M().KTM;
   POMOC.MGRZ:=ZK_P.M().MGR;
   POMOC.MGR:=ZK_P.M().MGR;
   {? POMOC.MGR<>null()
   || MGR.seek(POMOC.MGR)
   ?};
   exec('ustazprz','zamsiw_poz',ZK_P.M,ZK_P.M().J);
   exec('juz_jest','material',ZK_P.RODZ,ZK_P.N,ZK_P.M,null);
   {? _a=1
   ||
::    zmienne __ilz, __cena - powolywane w \wyb_pozy_gr
      ZK_P.ILZ:=ZK_P.ILP:=__ilz;
      ZK_P.CENA:=__cena;
      ZK_P.WAL:=__wal;
      ZK_P.CWAL:=__cwal;
      ZK_P.KRS:=__krs;
      ZK_P.CENA:=__cena;
      {? exec('czyrabp','ceny',TAZ.RAB_TYP) || ZK_P.RAB:=__rab || ZK_P.RABK:=__rab ?};
      ZK_P.REZ:=__rez;
      ZK_P.DOST:=__dost;
      ZK_P.PROMO:=__promo;
      {? ZK_P.REZ
      || {? ZK_P.DOR=0
         || ZK_P.DOR:=ZK_P.ILP;
            ZK_P.ODDT:={? ZK_P.N().DP>date() || ZK_P.N().DP || date() ?};
            ZK_P.DODT:=ZK_P.DT
         |? ZK_P.DOR>ZK_P.ILP
         || ZK_P.DOR:=ZK_P.ILP
         ?};
         {? ZK_P.DOR>0 || exec('rozp_rez','rezerwacje',,BEER.DOL) ?}
      ?}
   ?};
   _edit:=1;
   ATR.M_ATR:=ZK_P.M().M_ATR;
   _magdst:={? ZK_P.RMAG<>null() || (1+ZK_P.RMAG().TYP)='D' || exec('samgdost','mat_atr') ?};
   ATR.FLAG_ED:=_magdst & ATR.CZY_ATR & ATR.M_ATR().EDIT;
   ATR.FLAG:={? ATR.FLAG_ED & ZK_P.M().M_ATR<>null() || 2 || 0 ?};
   {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():='' !};
   {? ATR.FLAG_ED || {? ZK_P.M().M_ATR || ATR.FLAG_ED:=2 ?} ?};
   {? ~_magdst
   || ATR.MJS:='M_ATR';
      ATR.M_ATR:=null();
      M_ATR.blank(0);
      ATR.FLAG:=0;
      ATR_FLAG_ED:=0
   || ATR.MJS:='ZK_P'
   ?};
   exec('set_efld_opt','mat_atr','ZK_P');
   exec('set_efld_opt','zamsiw_poz',_win_red);
   {? ZK_P.ILZ=0
   || BEER.ORD:=exec('ordIL','jm',ZK_P.M,0);
      {? ~BEER.ORD || ZK_P.efld_opt(_win_red,'editable=0',,'ILZ') || ZK_P.efld_opt(_win_red,'editable=1',,'ILZ') ?}
   || ZK_P.efld_opt(_win_red,'editable=1',,'ILZ')
   ?};
   {? {? _a=0
      ||
         {? ZK_P.J2=null || ZK_P.WS2:=1; ZK_P.JM:=ZK_P.J2:=BEER.JM ?};
         {? ~_magdst
         || ZK_P.DK_C:=null;
            ATR.M_ATR:=null();
            M_ATR.blank(0)
         || ATR.M_ATR:=ZK_P.M().M_ATR;
            ZK_P.M().M_ATR().SYM
         ?};
         ATR.UZUP:='';
         (_edit:=ZK_P.edit("exec('chk_pozy','zamsiw_poz')"))>0
      ||
         1
      ?}
   || ZK_P.KH:=ZK_P.N().KH;
      ZK_P.KH_ODB:=ZK_P.N().ODB;
      ZK_P.HAN:=ZK_P.N().HAN;
      {? {? ~BEER.RDOST || ZK_P.add() || 1 ?}
      || _przepr:=exec('przeprez','rezerwacje',1,ZK_P.POZ);
         _rez:=ZK_P.REZ;
         {? ZK_P.JM=null
         || {? ZK_P.J2<>null & ZK_P.WS2<>1
            || ZK_P.JM:=ZK_P.M().J
            || ZK_P.WS2:=1; ZK_P.JM:=ZK_P.J2:=ZK_P.M().J
            ?}
         ?};
         exec('inf_dod','fakso',0,'zkpoz');
         {? ~BEER.RDOST
         || ZK_P.NR:=exec('blnr_kol','zamsiw_poz',ZK_P.M);
            {? ZK_P.REZ
            || ZK_P.ILR:=ZK_P.ILP:=ZK_P.ILZ
            || ZK_P.ILP:=ZK_P.ILZ; ZK_P.ILR:=0
            ?};
            ZK_P.put(1)
         ?};
         {? ~_przepr || exec('rozp_rez','rezerwacje') ?};
         ZK_P.REZ:=_rez;
         ZK_P.DOST:=0;
         _mjs:=ATR.MJS;
         ATR.MJS:='ZK_P';
         exec('aktzil2','zamsiw_poz');
         ATR.MJS:=_mjs;
         exec('war_pozz','zamsiw_poz');
         ZK_P.put(1);
         {? ZK_P.REZ
         || exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1)
         || _zkp:=tab_tmp(1,'MAT','STRING[16]','','ZKP','STRING[16]','');
            _zkp.blank(); _zkp.MAT:=$ZK_P.M; _zkp.ZKP:=$ZK_P.ref(); _zkp.add(1);
            exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,ZK_P.ILZ,$ZK_P.N,_zkp);
            obj_del(_zkp)
         ?};
         {? ZK_P.REZ=1
         || _mat:=ZK_P.M;
            exec('obl_warz','zamsiw_nag',ZK_P.N);
            exec('aktu_stu','zamsiw_wspolne',_mat,1,1)
         ?};
         _dan:=obj_new(8);
         _dan[1]:=ZK_P.ref();  _dan[2]:=0;  _dan[3]:=0;    _dan[4]:=0;
         _dan[5]:=0;    _dan[6]:=0;  _dan[7]:='00'; _dan[8]:=null;
         {? _b || exec('war_zam','zamsiw_nag',ZK_P.N,_dan) ?};
         obj_del(_dan);
         exec('aktu_zam_sm','magazyn_stan',ZK_P.M,ZK_P.RMAG)
      ?}
   || exec('przeprez','rezerwacje',0,ZK_P.POZ)
   ?};
   {? ~_edit & BEER.RDOST || exec('del_pozy','zamsiw_poz',0) ?};
   {? _edit & BEER.ZK_N().OBLCEN<>'N'
   || ZK_N.cntx_psh();
      ZK_N.clear();
      {? ZK_N.seek(BEER.ZK_N)
      || ZK_N.OBLCEN:='P';
         ZK_N.put(1)
      ?};
      ZK_N.cntx_pop()
   ?};
   {? _edit
   ||
::    Produkcja - jesli dostepny modul planow strategicznych to po udanej
::    edycji pozycji zamowienia aktualizuje obiekt planowania
      {? exec('tpp_lic','tpp')='T'
      || exec('zkp2obj','px_obj')
      ?}
   ?};
   M.cntx_pop();
   JM.f_clear();
   JM.win_dict('WER')
?};
BEER.MJSLOG:='';
''


\bl_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: wartość pola ZK_P.WAL
::  OLD: \bl_wal/eurusd.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_N.WAL


\bl_krsz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Wartosc poczatkowa ZK_P.KRS
::  OLD: \bl_krsz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_N.KRS


\bezpkwce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: przed redakcja ceny walutowej na pozycji zamowienia klienta
::   WE: _a - przed realizacja zamówienia
::   WY: czy mozna redagowac pole 0 - nie 1 -tak
::  OLD: \bezpkwce/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_a_tms:={? var_pres('_a')=type_of(1) || _a || 0 ?};
DPOZ.WPR_R:={? _a_tms || ZK_P.CWAL || fld ?};
:: inicjalizuje dane do kalkulacji
{? ZK_P.JM=null || ZK_P.JM:=ZK_P.M().J ?};
{? ZK_P.J2=null || ZK_P.J2:=ZK_P.JM; ZK_P.WS2:=1 ?};
KALK.JM:=ZK_P.JM;
KALK.J2:=ZK_P.J2;
KALK.WS2:=ZK_P.WS2;
_wyn:=exec('spr_npoz','eurusd');
exec('taz_sd_set','ceny');
{? _wyn & {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?} & ZK_P.CWAL=0
||
   exec('be_zkpcwal','zamsiw_poz',_a_tms);
   {? ZK_P.CWAL || DPOZ.WPR_R:=-1; exec('po_cenaw','ceny',0,{? _a_tms || 0 || 1 ?}); DPOZ.WPR_R:={? _a_tms || ZK_P.CWAL || fld ?} ?}
?};
_wyn


\be_zkpcwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: przed redakcja ceny walutowej na pozycji zamowienia klienta ZK_P.CWAL
::   WE: _a - przed realizacja zamówienia
::  OLD: \be_zkpcwal/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
_a_tms:={? var_pres('_a')=type_of(1) || _a || 0 ?};
exec('st_licz_wz','ceny','ZK_N');
exec('stplicz','ceny',{? ZK_P.J2 || ZK_P.IL2 || ZK_P.ILZ ?});
_tms:={? ZK_P.N().DT<>date(0,0,0) & _a_tms=0 & exec('get','#params',300807)='N'
      || tm_stamp(ZK_P.N().DT~1,ZK_P.N().DT~2,ZK_P.N().DT~3)
      || FIRMA.tm_stamp()
      ?};
exec('ceny_mat','ceny_mat',ZK_P.M,ZK_P.N().KH,'ZK_P.CWAL',ZK_N.ODB,,'ZK_P.RAB','T',ZK_P.WAL,'ZK_P.CWAL',
   ZK_P.KRS,ZK_P.N().CB='T',
   {? ZK_P.J2<>null || ZK_P.J2().KOD || '' ?},{? ZK_P.J2<>null || ZK_P.WS2 || 0 ?},0,,,,ZK_P.SV,,,ZK_N.PL,_tms)


\f3_cenaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: F3 dla ceny walutowej na pozycji zamowienia klienta
::  OLD: \f3_cenaw/zkd.fml
::       \f3_zkpcwal/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
exec('st_licz_wz','ceny','ZK_N');
exec('stplicz','ceny',{? ZK_P.J2 || ZK_P.IL2 || ZK_P.ILZ ?});
exec('ceny_mat','ceny_mat',ZK_P.M,ZK_P.N().KH,'ZK_P.C',ZK_N.ODB,,'ZK_P.RAB','T',ZK_P.WAL,'ZK_P.CWAL'
   ,ZK_P.KRS,ZK_P.N().CB='T'
   ,{? ZK_P.J2<>null || ZK_P.J2().KOD || '' ?},{? ZK_P.J2<>null || ZK_P.WS2 || 0 ?},1,,,,ZK_P.SV,,,ZK_N.PL);
''


\pw_mgrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem zmiennej POMOC.MGRZ
::  OLD: \pw_mgrz/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? POMOC.RODZ='U'
|| {? ZK_P.ILP<>ZK_P.ILZ || _wyn:=exec('findfnrd','color') ?}
|? ZK_P.REZ | ZK_P.ILP<>ZK_P.ILZ |
   exec('zkp_zlecone','zamsiw_poz',ZK_P.ref())
:: DRO:[rr] plany produkcyjne
::    |
::   exec('zkp_utilization','pl_okr3',1,ZK_P.ref()) |
::   exec('zkp_pxed','px_tie',ZK_P.ref())
|| _wyn:=exec('findfnrd','color')
?};
_wyn


\pr_mgrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja zmiennej POMOC.MGRZ
::  OLD: \pr_mgrz/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? POMOC.RODZ='U'
|| _wyn:=ZK_P.ILZ=ZK_P.ILP
|? BEER.DOL | ZK_P.REZ | ZK_P.ILP<>ZK_P.ILZ |
   exec('zkp_zlecone','zamsiw_poz',ZK_P.ref())
:: DRO:[rr] plany produkcyjne
::    |
::   exec('zkp_utilization','pl_okr3',1,ZK_P.ref()) |
::   exec('zkp_pxed','px_tie',ZK_P.ref())
|| _wyn:=0
?};
_wyn


\po_mgrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji zmiennej POMOC.MGRZ
::  OLD: \po_mgrz/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.MGR:=POMOC.MGRZ;
{? D_HELP.M_ZKP<>''
|| M.cntx_psh();
   M.index('MATKTM');
   M.prefix();
   {? M.find_key(D_HELP.M_ZKP,D_HELP.M_ZKP) || ZK_P.M:=M.ref ?};
   M.cntx_pop()
?};
1


\zkp_zlecone
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Sprawdza, czy pozycja zamowienia jest zlecona do produkcji
::   WE: _a - ZK_P.ref() (nie jest sprawdzana obecnosc i typ argumentu)
::   WY: 1 (sa powiazania), 0 (brak powiazan)
::  OLD: \zkp_zlecone/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_zkp:=_a;
_res:=0;
ZLZAM.cntx_psh();
ZLZAM.index('ZMZL');
ZLZAM.prefix($_a);
{? ZLZAM.first() || _res:=1 ?};
ZLZAM.cntx_pop();
_res


\pw_m_zkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem zmiennej D_HELP.M_ZKP
::  OLD: \pw_m_zkp/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
D_HELP.M_ZKP:={? ZK_P.M<>null || ZK_P.M().KTM || '' ?};

{? POMOC.RODZ='U' & ZK_P.ILZ=ZK_P.ILP
|| ''
|? ~BEER.DOL & ~ZK_P.REZ & ZK_P.ILZ=ZK_P.ILP &
 ~exec('zkp_zlecone','zamsiw_poz',ZK_P.ref())
:: DRO:[rr] plany produkcyjne
:: &
:: ~exec('zkp_utilization','pl_okr3',1,ZK_P.ref()) &
:: ~exec('zkp_pxed','px_tie',ZK_P.ref())
|| ''
|| exec('findfnrd','color')
?}


\pr_m_zkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja zmiennej D_HELP.M_ZKP
::  OLD: \pr_mzkp/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
HELP.MOD_IND:=ZK_P.M;
{? POMOC.RODZ='U' & ZK_P.ILZ=ZK_P.ILP
|| 1
|| ~BEER.DOL & ~ZK_P.REZ & ZK_P.ILZ=ZK_P.ILP & ~exec('zkp_zlecone','zamsiw_poz',ZK_P.ref())
:: DRO:[rr] plany produkcyjne
::   &
::   ~exec('zkp_utilization','pl_okr3',1,ZK_P.ref()) & ~exec('zkp_pxed','px_tie',ZK_P.ref())
?}


\f3_m_zkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: klawisz F3 zmiennej D_HELP.M_ZKP
::  OLD: \f3_m_zkp
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_oldmzkp:=D_HELP.M_ZKP;
JM.f_clear;
JM.win_dict('WER');
POMOC.MGR:=null;

ZAKR.MATU:='A';
{? POMOC.RODZ='' || POMOC.RODZ:='T' ?};
{? POMOC.MGRZ().RODZ<>POMOC.RODZ || POMOC.MGR:=POMOC.MGRZ:=null ?};

BEER.KH:=ZK_N.KH;
{? POMOC.MGRZ<>null
|| M.index('AMGM');
   M.prefix('T',POMOC.RODZ,POMOC.MGRZ);
   POMOC.MGR:=POMOC.MGRZ
|| M.index('ARODZ');
   M.prefix('T',POMOC.RODZ)
?};
M.find_key(D_HELP.M_ZKP);

{? POMOC.RODZ='T'
|| M.win_sel('NL_WER')
|| M.win_sel('NL_WERU')
?};

{? M.select(,1,10)
|| D_HELP.M_ZKP:=M.KTM; _wyn:=M.KTM; ZK_P.M:=M.ref();
   POMOC.MGR:=POMOC.MGRZ:=ZK_P.M().MGR
|| {? _oldmzkp<>'' & (_refm:=exec('FindInSet','#table','M','MATKTM',_oldmzkp,_oldmzkp))<>null
   || D_HELP.M_ZKP:=_oldmzkp;
      _wyn:=_oldmzkp;
      ZK_P.M:=_refm
   ?}
?};
BEER.KH:=null;
_wyn


\po_m_zkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji zmiennej D_HELP.M_ZKP
::  OLD: \po_mzkp/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
ATR.MJS:='ZK_P';
_wyn:=0;
{? D_HELP.M_ZKP=''
||
   D_HELP.MR:=null;
   {? POMOC.RODZ='U'
   || exec('find_sql','#table','M','KTM;N;KODK'
       ,'M.A=\'\'T\'\' and M.RODZ=\'\'U\'\''
       ,'D_HELP.MR','20@Indeks usługi;40@Nazwa usługi;20@Kod kreskowy;','REDU','','')
   || exec('find_sql','#table','M','KTM;N;KODK;*(R)IL','M.A=\'\'T\'\' and M.RODZ=\'\'T\'\'','D_HELP.MR'
       ,'20@Indeks materiału;40@Nazwa materiału;20@Kod kreskowy;12@Dostępne;','RED','obl_stz#magazyn_stan','*IL')
   ?};
   {? D_HELP.MR<>null
   ||
      ZK_P.M:=D_HELP.MR; D_HELP.M_ZKP:=ZK_P.M().KTM;
      POMOC.MGR:=POMOC.MGRZ:=ZK_P.M().MGR
   ?}
?};
{? D_HELP.M_ZKP=''
|| FUN.info('Niewypełnione pole.'@)
||
   M.cntx_psh();
   M.index('ARODZ');
   M.prefix('T',POMOC.RODZ,D_HELP.M_ZKP,D_HELP.M_ZKP);
   {? M.first()
   || ZK_P.M:=M.ref();
      POMOC.MGR:=POMOC.MGRZ:=ZK_P.M().MGR;
      _wyn:=1
   ||
::    dodatkowo poszukujemy pierwszego indeksu wg czesci KTM-u
      {? form(D_HELP.M_ZKP)<>''
      || M.index('ARODZ');
         M.prefix('T',POMOC.RODZ);
         {? M.find_key(D_HELP.M_ZKP)
         || ZK_P.M:=M.ref; D_HELP.M_ZKP:=M.KTM;
            POMOC.MGR:=POMOC.MGRZ:=ZK_P.M().MGR;
            _wyn:=1
         ?}
      ?};
      {? ~_wyn || FUN.info('Brak indeksu w słowniku.'@) ?}
   ?};
   {? ZK_P.SV=null | ZK_P.M<>HELP.MOD_IND
   ||
      {? KSTE.KRAJ=null
      ||
         FUN.info('Niewypełnione pole "Kraj" w parametrach oddziału.'@);
         ZK_P.SV:=null
      ||
         _st_vat:=exec('m_vat','material',ZK_P.M,ZK_P.N().KH,0,ZK_N.R,ZK_N.M);
         ZK_P.SV:=_st_vat
      ?};
      ZK_P.JM:=ZK_P.M().J
   ?};
   {? ZK_P.M<>null & ZK_P.M<>HELP.MOD_IND
   ||
      ZK_P.DK_C:=null;
::    zerowanie wartosci sprzedazowych
      ZK_P.CENA:=ZK_P.CWAL:=ZK_P.CN:=ZK_P.RAB:=ZK_P.RABK:=0;
      exec('clr_promo_tap','ceny');
      exec('war_pozz','zamsiw_poz');
::    przeliczniki jednostek
      ZK_P.J2:=ZK_P.JM:=ZK_P.M().J;
      ZK_P.T2:={? ZK_P.M().J2<>null() || ZK_P.J2:=ZK_P.M().J2; ZK_P.IL2:=0; 'M' || (1+(1-BEER.ZMJM)) ?};
      ZK_P.WS2:=1;
      exec('ustazprz','zamsiw_poz',ZK_P.M,ZK_P.M().J);
      ZK_P.IL2:={? ZK_P.WS2>0 || ZK_P.ILZ/ZK_P.WS2 || ZK_P.ILZ ?}
   ?};
   M.cntx_pop();
   win_disp()
?};
{? _wyn
|| exec('juz_jest','material','Z',ZK_P.N,ZK_P.M,{? ~-(6+menu_txt())='POPRAW' || ZK_P.ref() || null ?})
?};
{? _wyn & 0
|| {? ZK_P.M<>null & ZK_P.M().M_ATR<>null
   || ZK_P.btn_eopt(ZK_P.win_edit('?'),'ATRYB','state=normal')
   || ZK_P.btn_eopt(ZK_P.win_edit('?'),'ATRYB','state=grayed')
   ?}
?};
{? ZK_P.M().M_ATR<>null & #ZK_P.M().M_ATR<>#ZK_P.DK_C().M_ATR
|| {! _i..10 |! ($('ATR.WAR'+form(_i,-2,0,'99')))():='' !};
   ZK_P.DK_C:=null
?};
_magdst:={? ZK_P.RMAG<>null() || (1+ZK_P.RMAG().TYP)='D' || exec('samgdost','mat_atr') ?};
ATR.M_ATR:=ZK_P.M().M_ATR;
{? ZK_P.M().M_ATR=null() || M_ATR.blank() || ZK_P.M().M_ATR().SYM ?};
ATR.FLAG_ED:=ATR.CZY_ATR & _magdst & ATR.M_ATR().EDIT;
ATR.FLAG:={? _wyn & ATR.FLAG_ED & ATR.M_ATR<>null() || 2 || 0 ?};
{? ATR.FLAG_ED || {? ZK_P.M().M_ATR<>null() || ATR.FLAG_ED:=2 ?} ?};
exec('set_efld_opt','mat_atr',ATR.MJS);
BEER.JM:=ZK_P.JM;
_wyn


\pw_smg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: rr [2008]
:: OPIS: Przed wyswietleniem pola BEER.SMG
::  OLD: \pw_smg/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_typ:=(~-(1+menu_txt()))='P';
{? _typ;1
|| BEER.SMG:=ZK_P.MG().SYM
|| BEER.SMG:=''
?}


\pr_smg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: Przed redakcja pola BEER.SMG
::  OLD: \pr_smg/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_N.MG=null


\f3_smg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: wyswietla uprawnione magazyny - z uslugami
::  OLD: \f3_smg/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_tsql:=tab_tmp(1,'SYM','STRING[10]',''
                ,'NAZ','STRING[40]','');

MG.cntx_psh();
USERS_UP.index('MG');
USERS_UP.prefix(OPERATOR.USER,'ZA'+{? ZK_P.RODZ='W' || 'W' || 'M' ?},ST.ODDZ_KOD);
{? USERS_UP.first()
|| {!
   |?
      {? USERS_UP.MG().U='T' & USERS_UP.MG().PAL='N'
      || _tsql.SYM:=USERS_UP.MG().SYM;
         _tsql.NAZ:=USERS_UP.MG().NAZ;
         _tsql.add(1)
      ?};
      USERS_UP.next()
   !}
||
:: uprawnienia globalne
   USERS_UP.index('MG');
   USERS_UP.prefix(null,'ZA'+{? ZK_P.RODZ='W' || 'W' || 'M' ?},ST.ODDZ_KOD);
   {? USERS_UP.first()
   || {!
      |?
         {? USERS_UP.MG().U='T' & USERS_UP.MG().PAL='N'
         || _tsql.SYM:=USERS_UP.MG().SYM;
            _tsql.NAZ:=USERS_UP.MG().NAZ;
            _tsql.add(1)
         ?};
         USERS_UP.next()
      !}
   ?}
?};
MG.cntx_pop();

_acr_sel:=_tsql.mk_sel('Magazyny'@,'T',0,'f3_smgacr_sel');
_tsql.win_fld(_acr_sel,,'SYM',,,8,,1,'Symbol'@);
_tsql.win_fld(_acr_sel,,'NAZ',,,20,,1,'Nazwa'@);
_tsql.win_act(_acr_sel,0,'Formuła','&Wybierz'@@,,'Wybór bieżącego zapisu'@,"sel_exit();1",,1,,,,'W');
_tsql.win_sel(_acr_sel);
{? _tsql.select
|| ZK_P.MG:=exec('FindInSet','#table','MG','MAGAZYNY',_tsql.SYM);
   BEER.SMG:=ZK_P.MG().SYM;
:: wyczyszczenie atrybutów cech dostaw
   _rmag:=ZK_P.RMAG;
   ZK_P.RMAG:=ZK_P.MG;
   exec('po_rmag','zamsiw_poz');
   ZK_P.RMAG:=_rmag;

   _wyn:=_tsql.SYM
|| _wyn:=''
?};
_wyn


\po_smg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: Po redakcji pola BEER.SMG
::  OLD: \po_smg/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_sym:=form(fld());
_mag:=exec('spr_magu','users',ZK_P.RODZ='W');
{? _sym<>'' & _mag*(_sym+'^')
|| ZK_P.MG:=exec('FindInSet','#table','MG','MAGAZYNY',_sym);
   ZK_P.ONLY:=1
?};
1


\pw_raut
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed wyswietlenie BEER.RAUT
::  OLD: \pw_raut/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~ZK_P.REZ
|| exec('findfnv','#color')
|| '0:0:255,255:255:160'
?}


\pw_rdst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed wyswietlenie BEER.RDST
::  OLD: \pw_rdst/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~ZK_P.REZ | ~ZK_P.DOST
|| exec('findfnv','#color')
|| '255:0:0,255:255:160'
?}


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zaznacza wymagalne pola w pozycji dokumentu magazynowego
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || ZK_P.win_edit('?') ?};

ZK_N.cntx_psh();
{? (_win_red='REDZ_GR') & exec('get','#params',2131,2,OPERATOR.USER)='T'
|| _grp:='enable=0'
|| _grp:='enable=1'
?};
ZK_P.efld_opt(_win_red,_grp,,'CENA');
{? ZK_P.RODZ='Z'
|| ZK_P.efld_opt(_win_red,_grp,,'CN');
   ZK_P.efld_opt(_win_red,_grp,,'CB');
   ZK_P.efld_opt(_win_red,_grp,DISP,'RABP');
   ZK_P.efld_opt(_win_red,_grp,DISP,'RAB');
   ZK_P.efld_opt(_win_red,_grp,DISP,'RABO');
   ZK_P.efld_opt(_win_red,_grp,INFO,'NAROD')
?};

:: walutowość
{? ZK_P.RODZ='Z'
|| {? ZK_P.WAL=exec('bl_nwal','ustawienia')
   || ZK_P.efld_opt(_win_red,'enable=0',,'CWAL');
      ZK_P.efld_opt(_win_red,'enable=0',,'KRS')
   || ZK_P.efld_opt(_win_red,'enable=1',,'CWAL');
      ZK_P.efld_opt(_win_red,'enable=1',,'KRS')
   ?}
?};

:: Projekt
{? ZK_P.PROJEKTY=null() & (ZK_N.T().PROJZAKR='' | TYPYZAM.PROJZAKR=exec('projzakr_nie_dotyczy','projekty'))
|| ZK_P.efld_opt(_win_red,'enable=0',,'PROJEKTY')
|| ZK_P.efld_opt(_win_red,'enable=1',,'PROJEKTY')
?};

{? ZK_P.RODZ='W'
|| {? ZK_P.N().T().TYPYDOK<>null & ZK_N.T().TYPYDOK().ZLEC='T'
   || ZK_P.efld_opt(_win_red,'mark=1',ZMSLAPP,'ZL1W')
   || ZK_P.efld_opt(_win_red,'mark=0',ZMSLAPP,'ZL1W')
   ?}
?};
BEER.ZAMUPR:=exec('jakieupr','zamsiw_wspolne',ZK_P.RODZ='W');
{? BEER.ZAMUPR
|| ZK_P.efld_opt(_win_red,'mark=1',,'RMAG')
|| ZK_P.efld_opt(_win_red,'mark=0',,'RMAG')
?};
ZK_N.cntx_pop();
~~


\del_pozz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: grupowe usuniecie pozycji zamowienia
::  OLD: \del_pozz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=ZK_P.sel_aget();
ZK_P.sel_adel();
ZK_P.cntx_psh();
_czyall:=ZK_P.size()=_tab.size();
_stan:={? ZK_P.N().STAT_REJ='T'
       || 'Zamówienie jest zaakceptowane.'@
       |? ZK_P.N().STAT_REJ='Z'
       || 'Zakończono rejestrację zamówienia.'@
       || ''
       ?};
_tab.clear();
{? _tab.first()
|| {? _czyall & _stan<>'' & _tab.size()=1
   || FUN.info(_stan+'\n\n'+'Usunięcie ostatniej pozycji zabronione.'@)
   |? FUN.ask({? _czyall & _stan<>''
              || 'Czy usunąć zaznaczone pozycje zamówienia?\n'
                 'Uwaga. Usunięte zostaną jedynie pozycje nierealizowane,\n'
                 'dla których brak dyspozycji transportu\n'
                 'oraz pozostanie choć jedna pozycja.'@
              || 'Czy usunąć zaznaczone pozycje zamówienia?\n'
                 'Uwaga. Usunięte zostaną jedynie pozycje nierealizowane,\n'
                 'dla których brak dyspozycji transportu.'@
              ?})
   || {!
      |? {? _czyall & _stan<>''
         || ZK_P.cntx_psh();
            ZK_P.index('TYPN');
            ZK_P.prefix('A',BEER.TYP,BEER.ZK_N,1);
            _size:=ZK_P.size();
            ZK_P.cntx_pop()
         || _size:=2
         ?};
         {? (ZK_P.clear(); ZK_P.seek(_tab.REF,)) & ZK_P.ILP=ZK_P.ILZ & _size>1
         || exec('del_pozy','zamsiw_poz',0)
         ?};
         _tab.next()
      !}
   ?}
?};
ZK_P.cntx_pop();
~~


\aktywpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: aktywuje ponownie pozycje zamowienia
::   WE:  _a  - ref zamowienia (ZK_N.ref)
::       [_b] - czy wywolywac transakcje (0 - tak, 1 - nie, transakcja wolana zewnetrznie)
::   WE: czy operacja sie powiodla
::  OLD: \aktywpoz/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2  || {? type_of(_b)<>1 || _b:=0 ?}  || _b:=0  ?};

_wyn:=1;
ZK_P.cntx_psh();
ZK_P.index('TYPN');
ZK_P.prefix('Z','Z',_a,1);
{? ZK_P.first()
||
   {? _b=0 || do() ?};
   {!
   |?
      _ref:=ZK_P.ref();
      _oki:=ZK_P.next();
      ZK_P.cntx_psh();
      ZK_P.prefix();
      {? ZK_P.seek(_ref)
      ||
         ZK_P.A:='A';
         ZK_P.DOST:=0;
         {? ~ZK_P.put(1)
         || _wyn:=0;
            undo()
         ?}
      ?};
      ZK_P.cntx_pop();
      _oki & _wyn
   !};
   {? _b=0 || end() ?}
?};
ZK_P.cntx_pop();
_wyn


\var_zgp_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Przed wyswietleniem pola VAR.ZGP (umieszczonego w oknie redagowania tabeli ZK_P)
::----------------------------------------------------------------------------------------------------------------------
_color:=exec('findfnrd','color');
_win:=cur_win(1,1);

VAR.ZGP:=null();

{? cur_kwin()='e_edit' | cur_kwin()='e_disp'
|| ZK_P.efld_opt(_win,'label_color='+((_color*',')-_color),VAR,'ZGP');
   ZK_P.efld_opt(_win,'label_color='+((_color*',')-_color),ZGP,'NRZLP');
   ~~
?};
_color;

_rule:="
   _win:=cur_win(1,1);

   VAR.ZGP:=ZK_P.ZLIM().ZGP;

   {? VAR.ZGP<>null()
   ||
      {? cur_kwin()='e_edit' | cur_kwin()='e_disp'
      || ZK_P.efld_opt(_win,'label_color=',VAR,'ZGP');
         ZK_P.efld_opt(_win,'label_color=',@.ZGP,'NRZLP');
         ~~
      ?};
      1
   ?}
";

exec('FindAndGet','#table','ZLIM',#ZK_P.ZLIM,ref_name(ZK_P.ZLIM),_rule,_color)


\wyb_zzam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: dla wybranego zamiennika tworzy rezerwacje tymczasowa lub rezerwacje
::  OLD: \wyb_zzam/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? BEER.SD>0 & BEER.TYP='Z'
|| M.clear;
   M.seek(MZ.MZ);
   exec('wyb_pozy','zamsiw_poz');
   sel_exit()
|| FUN.info('Brak stanu dostępnego.\nRezerwacja niemożliwa.'@)
?};
''


\trig_zk_p_put_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Trigger tabeli ZK_P (po put)
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
exec('zk_p_put','zamsiw_poz');
~~


\zk_p_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: trig_a put - zamowienia
::  OLD: \zk_p_put/zamowien.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ZK_P.name()+2)='__' & (ZK_P.PL_DATA<>bfld('PL_DATA') | ZK_P.PL_TIME<>bfld('PL_TIME')) | ZK_P.DT<>bfld('DT')
|| ZLZAM.cntx_psh();
   REZ.cntx_psh();
   ZLZAM.index('ZMZL');
   ZLZAM.prefix($ZK_P.ref(),);
   {? ZLZAM.first()
   || {!
      |? ZLZAM.PL_DATA:=ZK_P.PL_DATA;
         ZLZAM.PL_TIME:=ZK_P.PL_TIME;
         ZLZAM.put();
         REZ.index('ZLZAM');
         REZ.prefix(ZLZAM.ref());
         {? REZ.first()
         || {!
            |? REZ.DODT:=ZK_P.DT;
               REZ.put();
               REZ.next()
            !}
         ?};
         ZLZAM.next()
      !}
   ?};
   ZLZAM.cntx_pop();
   REZ.cntx_pop()
?};
~~


\zkp_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2005]
:: OPIS: kolorowanie rekordow pozycji zamowien od klienta
::  OLD: \akp_kol/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_P.ILP=0        || 'ZKP#01#01'
|? ZK_P.END          || 'ZKP#01#04'
|? ZK_P.ILP=ZK_P.ILZ || 'ZKP#01#02'
                     || 'ZKP#01#03'
?}


\zkp_kol_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: kolorowanie rekordow pozycji zamowien
::  OLD: \zkp_kol/wysylki.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.STAN:='';
{? POMOC.IL_TRN>0
|| 'ZKP#02#01'
|| _il:=exec('obl_wys','magdok_wspolne',$ZK_P.ref());
   {? _il=0
   || 'ZKP#02#02'
   |? _il>=ZK_P.ILZ
   || POMOC.STAN:='X';
      'ZKP#02#04'
   || 'ZKP#02#03'
   ?}
?}


\kalk_cen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: kalkulacja cen dla wszystkich pozycji zamówienia
::   WE: [_a] - 0-dla danego zamowienia (domyslnie) 1-dla wszystkich aktywnych zamowien
::  OLD: \kalk_cen/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_srm:=exec('get','#params',800907,2);

{? _srm='N'
|| FUN.info('W parametrach systemu nie wybrano sposobu oblicznia marży/narzutu dla zamówień.\n'
    'Operacja niemożliwa.'@)
|? {? ~_a
   || FUN.ask({? _srm='S'
              || 'Przeliczyć ceny zakupu dla pozycji zamówienia wg średniej arytmetycznej?'@
              || 'Przeliczyć ceny zakupu dla pozycji zamówienia wg mediany?'@
              ?})
   || FUN.ask({? _srm='S'
              || 'Przeliczyć ceny zakupu dla pozycji wszystkich zamówień wg średniej arytmetycznej?'@
              || 'Przeliczyć ceny zakupu dla pozycji wszystkich zamówień wg mediany?'@
              ?})
   ?}
|| _zkn:=tab_tmp(1,'ZKN','STRING[16]','');
   _mat:=tab_tmp(1,'MAT','STRING[16]','','CEN','REAL','','DOKL','INTEGER','','DOKC','INTEGER','');
   _cen:=tab_tmp(2,'MAT','STRING[16]','','CEN','REAL','');

   ZK_N.cntx_psh();
   ZK_P.cntx_psh();
:: pobieramy materialy na zamowieniu
   {? ~_a
   || ZK_P.index('TYPN');
      ZK_P.prefix('A','Z',BEER.ZK_N,1)
   || ZK_P.index('MG');
      ZK_P.prefix('A','Z',1)
   ?};
   {? ZK_P.first()
   || {? ~_a || _zkn.clear(); {? ~_zkn.find_key($ZK_P.N) || _zkn.blank(); _zkn.ZKN:=$ZK_P.N; _zkn.add(1) ?} ?};
      {!
      |? {? ZK_P.RODZ='Z'
         || _mat.clear();
            {? ~_mat.find_key($ZK_P.M)
            || _mat.blank();
               _mat.MAT:=$ZK_P.M;
               _mat.DOKL:=ZK_P.M().DOKL;
               _mat.DOKC:=ZK_P.M().DOKL_C;
               _mat.add(1)
            ?};
            {? _a || _zkn.clear(); {? ~_zkn.find_key($ZK_P.N) || _zkn.blank(); _zkn.ZKN:=$ZK_P.N; _zkn.add(1) ?} ?}
         ?};
         ZK_P.next()
      !}
   ?};

:: pobieramy wszystkie aktualne ceny dostaw w zakresie okresow
   _okr:=exec('get','#params',800807,1);
   _emsk:=DK.name()+2;
   _oddz:=1+(DK.name()+3);

   _msk:=obj_new(_okr+1);
   {! _i..(_okr+1) |! _msk[_i]:=form((#_emsk)-(_okr+1-_i),-2,0,'99') !};

   ND.cntx_psh();
   DK.cntx_psh();
   SC.cntx_psh();
   SM.cntx_psh();

   {! _i..(_okr+1)
   |! exec('open','open_tab',_oddz,_msk[_i]);
      _mat.clear();
      {? _mat.first()
      || {!
         |? _ref:=exec('FindAndGet','#table','M',_mat.MAT,,,null());
            SC.index('SD');
            SC.prefix(_ref);
            {? SC.first()
            || {!
               |? _cena:=exec('cena_mag','ceny',SC.M,SC.RDK,SC.NDK,SC.MAG,SC.C);
                  _cen.clear();
                  _cen.blank();
                  _cen.MAT:=_mat.MAT;
                  _cen.CEN:=_cena;
                  _cen.add(1);
                  SC.next()
               !}
            ?};
            _mat.next()
         !}
      ?}
   !};

   ND.cntx_pop();
   DK.cntx_pop();
   SC.cntx_pop();
   SM.cntx_pop();

:: obliczamy cene srednia lub mediana w zaleznosci od parametru _srm
   _mat.clear();
   _mat.first();
   {!
   |? _ile:=0;
      _sum:=0;
      _cen.clear();
      _cen.prefix(_mat.MAT);
      {? _cen.first()
      || _ile:=_cen.size();
         {? _srm='M'
         || {? (_ile%*2)
            || _nr1:=_nr2:=(_ile%2)+1;
               _ile:=1
            || _nr1:=(_ile%2);
               _nr2:=_nr1+1;
               _ile:=2
            ?}
         || _nr1:=_nr2:=0
         ?};
         _sum:=0;
         _i:=0;
         {!
         |? _i+=1;
            {? _srm='S' || _sum+=_cen.CEN
            |? _srm='M' & (_i=_nr1 | _i=_nr2) || _sum+=_cen.CEN
            ?};
            _cen.next()
         !}
      ?};
      _mat.CEN:={? _ile>0 || _sum/_ile || 0 ?} $ _mat.DOKC;
      _mat.put(1);
      _mat.next()
   !};

:: przepisanie obliczonych cen na pozycje zamowienia

   {? ~_a
   || ZK_P.index('TYPN');
      ZK_P.prefix('A','Z',BEER.ZK_N,1)
   || ZK_P.index('MG');
      ZK_P.prefix('A','Z',1)
   ?};
   {? ZK_P.first()
   || {!
      |? _mat.clear();
         {? _mat.find_key($ZK_P.M)
         || ZK_P.SZCEN:=_mat.CEN;
            ZK_P.put(1)
         ?};
         ZK_P.next()
      !}
   ?};
   _zkn.clear();
   {? _zkn.first()
   || {!
      |? ZK_N.clear();
         {? ZK_N.seek(exec('FindAndGet','#table','ZK_N',_zkn.ZKN,,,null()))
         || ZK_N.OBLCEN:='T';
            ZK_N.put(1)
         ?};
         _zkn.next()
      !}
   ?};
   ZK_N.cntx_pop();
   ZK_P.cntx_pop();

   obj_del(_mat);
   obj_del(_cen);
   obj_del(_zkn)

?};
~~


\roz_dost_ded
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: Usuwa powiazanie do dostawy dedykowanej
::  OLD: \roz_dost_ded/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
_Sel:=ZK_P.sel_aget;
ZK_P.sel_adel;
_brak:=0;

{? ~_Sel.first
|| _Sel.REF:=#ZK_P.ref;
   _Sel.add;
   _brak:=ZK_P.ZD_POZ=''
|| _brak:=-1
?};

{? _brak
|| FUN.info('Pozycja nie jest powiązana z dostawą dedykowaną.'@);
   return
|? {? _brak<0
   || ~FUN.ask('Usunąć powiązania z dostawami dedykowanymi w zaznaczonych pozycjach?\n'
       'Uwaga. Pozycje niepowiązane zostaną pominięte.'@)
   || ~FUN.ask('Usunąć powiązanie z dostawą dedykowaną?'@)
   ?}
|| return
|| ''
?};

{? _Sel.first
||
   ZK_P.cntx_psh;
   ZK_P.clear();
   {!
   |?
      {? ZK_P.seek(_Sel.REF,) & ZK_P.ZD_POZ<>''
      ||
         ZK_P.ZD_POZ:='';
         ZK_P.put
      ?};
      _Sel.next
   !};
   ZK_P.cntx_pop
?}


\zkp_poz_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Po zmianie dla pola Waluta dla ZK_P
::----------------------------------------------------------------------------------------------------------------------
{? exec('ae_poz_wal','ceny','Z')
|| exec('set_efld_opt','zamsiw_poz','REDZ'+{? var_pres('__wybgrp')>0 & __wybgrp || '_GR' || '' ?});
   1
?}


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.02]
:: OPIS: dodaje pozycję zamówienia - formuła główna
::   WE: _a - 'webservice', 'edi'
::       _b - buffer ZK_P
::       _c - nazwa konfiguracji (BASELINKER/ABSTOREB2B/ABSTOREB2C)
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_context:=_a;
_name_conf:={? var_pres('_c')=type_of('')|| _c || '' ?};
{? _context='edi'
|| exec('add_zkp','edi_form')
|? _context='webservice'
|| exec('add_zkp','zamsiw_poz',_b, _name_conf)
?}


\add_zkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.02]
:: OPIS: dodaje pozycję zamówienia
::   WE: _a - buffer ZK_P
::       _b - nazwa konfiguracji (BASELINKER/ABSTOREB2B/ABSTOREB2C)
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_Zk_p:=_a;
_name_conf:={? var_pres('_b')=type_of('')|| _b || '' ?};

_result:=0;

exec('bl_zkp','edi_form');
exec('fill_zkp','zamsiw_poz',_Zk_p);

{? exec('chk_pozy','zamsiw_poz',,_name_conf)=''
||
   ZK_P.prefix();
   exec('add_zkp','edi_form');
   _result:=1
?};
_result


\fill_zkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.02]
:: OPIS: uzupełnia pola niezbędne do prawidłowego działania zamówienia
::   WE: _a - buffer ZK_P
::   WY: ''-jeśli udało się wypełnić pola
::----------------------------------------------------------------------------------------------------------------------
_Zk_p:=_a;
:: wartości przekazane
ZK_P.POZ:=_Zk_p.POZ;
ZK_P.M:=_Zk_p.M; D_HELP.M_ZKP:=ZK_P.M().KTM;
ZK_P.ILZ:=_Zk_p.ILZ;
ZK_P.CENA:=_Zk_p.CENA;
ZK_P.LOTUSID:=_Zk_p.LOTUSID;
{? _Zk_p.MG<>null() || ZK_P.MG:=_Zk_p.MG ?};
:: dodatkowe uzupełnienie
ZK_P.SV:=ZK_P.M().VAT;
{? ZK_P.M().RODZ='U' & ZK_P.MG=null() & ZK_P.N().MG().U='T' || ZK_P.MG:=ZK_N.MG ?};
ZK_P.WS2:=_Zk_p.WS2;
ZK_P.J2:=_Zk_p.J2;
ZK_P.IL2:=_Zk_p.IL2;
1


\upd_zkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: aktualizacja pomocniczych pól pozycji
::   WE: ZK_N.ref()
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<>7 || return(~~) ?};
ZK_P.cntx_psh();ZK_N.cntx_psh();
ZK_P.index('NAG');
ZK_P.prefix(_a);
{? ZK_P.first()
||
   {!|?
      ZK_P.KH:=ZK_N.KH;
      ZK_P.KH_ODB:=ZK_N.ODB;
      ZK_P.HAN:=ZK_N.HAN;
      ZK_P.put();
      ZK_P.next()
   !}
?};
ZK_P.cntx_pop();ZK_N.cntx_pop();
~~


\rek_pozy_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: akcja rekord na pozycjach zamowienia (wszystkie pozycje)
::   WE: _a - 0/1 - ostatni odrysowany rekord
::----------------------------------------------------------------------------------------------------------------------
{? ZK_P.TAR_H & ref_name(ZK_P.TAR_H)<>TAR_H.name()
|| TAR_H.use(ref_name(ZK_P.TAR_H))
?};
~~


\end_zk_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zamknięcie pozycji do realizacji dla zamówień
::   WE: [_a] - 0(domyślnie)-zamknięcie 1-przywrócenie do realizacji
::----------------------------------------------------------------------------------------------------------------------
_end:={? var_pres('_a')=type_of(0) || ~_a || 1 ?};
_sel:=ZK_P.sel_aget();
_symz:=ZK_N.SYM;

VAR_DEL.delete('__matakt');

__matakt:=tab_tmp(2,'REF','STRING[16]',''
           ,'NRK','INTEGER',''
           ,'ILR','REAL',''
           ,'ZKP','STRING[16]',''
           ,'ZKN','STRING[16]','');
ZK_P.sel_adel();
ZK_P.cntx_psh();
{? _sel.first()
|| {? {? _end
      || FUN.ask('Czy zamknąć realizację wskazanych pozycji zamówienia %1?'@[_symz])
      || FUN.ask('Czy przywrócić do realizacji wskazane pozycje zamówienia %1?'@[_symz])
      ?}
   || {!
      |? {? (ZK_P.prefix(); ZK_P.seek(_sel.REF,))
         || {? _end & ~ZK_P.END
            || {? ZK_P.REZ || exec('rez_pozy','rezerwacje',-1,,,,,0) ?};
               ZK_P.get();
               ZK_P.ILBEZ:=0;
               ZK_P.ZBB:=ZK_P.ZBZ:=ZK_P.CZYBEZ:='N';
               ZK_P.END:=1;
               ZK_P.put(1)
            |? ~_end & ZK_P.END
            || ZK_P.get();
               ZK_P.ILBEZ:=ZK_P.ILP;
               {? ZK_P.ILBEZ>0 || ZK_P.CZYBEZ:='T' || ZK_P.CZYBEZ:='N' ?};
               ZK_P.END:=0;
               {? ZK_P.put(1) || exec('admatzkp','rezerwacje',$ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N,$ZK_P.ref()) ?}
            ?}
         ?};
         _sel.next()
      !};
      {? ~_end || exec('akt_rezy','rezerwacje') ?}
   ?}
|? {? ~ZK_P.END
   || FUN.ask('Czy zamknąć realizację danej pozycji zamówienia %1?'@[_symz])
   || FUN.ask('Czy przywrócić do realizacji daną pozycję zamówienia %1?'@[_symz])
   ?}
|| _end:=~ZK_P.END;
   {? _end
   || {? ZK_P.REZ || exec('rez_pozy','rezerwacje',-1,,,,,0) ?};
      ZK_P.get();
      ZK_P.ILBEZ:=0;
      ZK_P.ZBB:=ZK_P.ZBZ:=ZK_P.CZYBEZ:='N';
      ZK_P.END:=1;
      ZK_P.put(1)
   |? ~_end
   || ZK_P.get();
      ZK_P.ILBEZ:=ZK_P.ILP;
      {? ZK_P.ILBEZ>0 || ZK_P.CZYBEZ:='T' || ZK_P.CZYBEZ:='N' ?};
      ZK_P.END:=0;
      {? ZK_P.put(1) || exec('admatzkp','rezerwacje',$ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N,$ZK_P.ref()) ?}
   ?};
   {? ~_end || exec('akt_rezy','rezerwacje') ?}
?};
ZK_P.cntx_pop();
obj_del(_sel);
VAR_DEL.delete('__matakt');
~~


\zkp_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Zwraca okno redakcji tabeli ZK_P
::   WE: [_a] - akronim okna
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('')
|| {? ZK_P.M().RODZ='U'
   || {? ZK_P.RODZ='W'
      || _a:='REDUW'
      || _a:='REDU'
      ?}
   || _a:='RED'+ZK_P.RODZ
   ?}
?};

VAR_DEL.delete('__ZKP_btnREZER');
__ZKP_btnREZER:='';

_win_akr:=_a;
_dokum_view:=0;
{? ZK_N.T().R<>'W'
|| _dokum:=exec('bl_dokum_seek','zbl',ZK_N) | exec('dokum_seek','zbl',ZK_N);
   _dokum_view:=_dokum & DOKUM.DOKUMI
?};
{? _dokum_view
:: Tymczasowe okno redakcji
|| _win_red:=ZK_P.mk_edit('Pozycja zamówienia'@,,'#edzk_pspr',,,'html_maximized');
   ZK_P.win_etab(_win_red,'Dane podstawowe'@);
   ZK_P.win_ewin(_win_red,,_win_akr);
   ZK_P.win_etab(_win_red,'Podgląd'@);
   ZK_P.win_ewin(_win_red,DOKUM,'DOKUMI');
   {? _win_akr='REDZ' | _win_akr='REDW'
   || _fml:="params_exec('rozpirez','rezerwacje')";
      __ZKP_btnREZER:=ZK_P.win_ebtn(_win_red,'text='+'&Rezerwacje'@+',btn_label_align=center,panel=bottom,align=begin',_fml)
   ?};
   exec('ok_esc','#window',ZK_P,_win_red,1);
   _win_red
|| _win_akr
?}


\zkp_btnseopt_rezer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Wykonanie "btn_eopt" dla przecisku "REZER" w oknie redakcji tabeli ZK_P
::   WE: [_a] - parametr dla "btn_eopt", np. 'state=grayed'
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('')
|| _win_red:=ZK_P.win_edit('?')
?};
{? _win_red='REDZ' | _win_red='REDW'
|| ZK_P.btn_eopt(_win_red,'REZER',_a)
|? var_pres('__ZKP_btnREZER')=type_of('') & __ZKP_btnREZER<>''
|| ZK_P.btn_eopt(_win_red,__ZKP_btnREZER,_a)
?};
~~

:Sign Version 2.0 jowisz:1045 2024/02/05 08:59:00 a5147c945a1d9edab90b3bf335d7c19843eda1d234d015039c8dc89b1b4fe60be3d57bde216e7620ac50fce04a339c80dee4c30d1f8e3636146ee5d97ff3bd08d6122560f96453016528b70fec796a681893d0e76a870af77f03522ade3338a730f8a8ba27f971dc70eded17f9bce8bf8a2d60b95825f0e3c2d2a851643a3e9e
