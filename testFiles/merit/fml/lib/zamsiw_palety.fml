:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zamsiw_palety.fml
:: Utworzony: 06.10.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Obsługa zamówień sprzedaży/wewnętrznych - formuły dla palet
::======================================================================================================================


\ctrl_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: kontrola zablokowanych palet w stosunku do aktualnych pozycji zamowienia
::   WE: [_a] - 1(domyslnie)-z tabelka blednych palet 0-bez tabelki
::  OLD: \ctrl_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

VAR_DEL.delete('__palkpl','__pozkpl');

PAL.cntx_psh();
PAL_ZAM.cntx_psh();

__palkpl:=tab_tmp(3,'LP','INTEGER',''
           ,'KOD','STRING[30]',''
           ,'SQL','STRING[16]',''
           ,'WYB','STRING[1]',''
           ,'PZM','STRING[16]',''
           ,'KTM','STRING[50]','');
__pozkpl:=tab_tmp(2,'SQL','STRING[16]',''
           ,'KTM','STRING[50]',''
           ,'NAZ','STRING[100]',''
           ,'ILE','REAL',''
           ,'JM','STRING[10]',''
           ,'CEN','REAL',''
           ,'TW','DATE',''
           ,'ILR','REAL',''
           ,'ALL','INTEGER',''
           ,'MAT','STRING[16]','');

__palkpl.blank();
__palkpl.KOD:='<BEZ PALET>';
__palkpl.SQL:='xxx';
__palkpl.WYB:='N';
__palkpl.PZM:='';
__palkpl.KTM:='';
_rbrak:={? __palkpl.add(1) || $__palkpl.ref() || '' ?};

ZK_P.cntx_psh();
PAL_ZAM.index('ZK_N');
PAL_ZAM.prefix(BEER.ZK_N);
{? PAL_ZAM.first()
|| {!
   |? __palkpl.blank();
      __palkpl.KOD:=PAL_ZAM.PAL().KODK;
      __palkpl.SQL:=$PAL_ZAM.PAL;
      __palkpl.WYB:='N';
      __palkpl.PZM:=$PAL_ZAM.ref();
      __palkpl.KTM:=PAL_ZAM.PAL().MKTM;
      {? __palkpl.add(1)
      || PAL_POZ.index('PAL');
         PAL_POZ.prefix(PAL_ZAM.PAL);
         {? PAL_POZ.first()
         || {!
            |? __pozkpl.clear();
               __pozkpl.blank();
               __pozkpl.SQL:=$__palkpl.ref();
               __pozkpl.KTM:=PAL_POZ.M().KTM;
               __pozkpl.NAZ:=PAL_POZ.M().N;
               __pozkpl.ILE:=PAL_POZ.ILP;
               __pozkpl.JM:=PAL_POZ.JM().KOD;
               __pozkpl.CEN:=PAL_POZ.C;
               __pozkpl.TW:=PAL_POZ.TW;
               __pozkpl.ILR:=0;
               __pozkpl.ALL:=0;
               __pozkpl.MAT:=$PAL_POZ.M;
               __pozkpl.add(1);
               PAL_POZ.next()
            !}
         ?}
      ?};
      PAL_ZAM.next()
   !}
?};
_ndx:=__pozkpl.ndx_tmp('',0,'MAT',,0,'ALL',,0);

ZK_P.index('TYPN');
ZK_P.prefix('A',BEER.TYP,BEER.ZK_N,1);
{? ZK_P.first()
|| {!
   |? {? ZK_P.ILP>0
      || _ilp:=ZK_P.ILP;
         __pozkpl.index(_ndx);
         __pozkpl.prefix($ZK_P.M,0);
         {? __pozkpl.first()
         || {!
            |? _ile:=__pozkpl.ILE-__pozkpl.ILR;
               {? _ile>_ilp
               || __pozkpl.ILR+=_ilp;
                  __pozkpl.put(1);
                  _ilp:=0
               |? _ile=_ilp
               || __pozkpl.prefix();
                  __pozkpl.ILR+=_ilp;
                  __pozkpl.ALL:=1;
                  __pozkpl.put(1);
                  _ilp:=0
              |? _ile>0
               || __pozkpl.cntx_psh();
                  __pozkpl.prefix();
                  __pozkpl.ILR+=_ile;
                  __pozkpl.ALL:=1;
                  __pozkpl.put(1);
                  __pozkpl.cntx_pop();
                  _ilp-=_ile
               ?};
               _ilp>0 & __pozkpl.next()
            !}
         ?};
         {? _ilp>0
         || __pozkpl.clear();
            __pozkpl.blank();
            __pozkpl.SQL:=_rbrak;
            __pozkpl.KTM:=ZK_P.M().KTM;
            __pozkpl.NAZ:=ZK_P.M().N;
            __pozkpl.ILE:=_ilp;
            __pozkpl.JM:=ZK_P.M().J().KOD;
            __pozkpl.CEN:=0;
            __pozkpl.TW:=date(0,0,0);
            __pozkpl.ILR:=_ilp;
            __pozkpl.ALL:=1;
            __pozkpl.MAT:=$ZK_P.M;
            __pozkpl.add(1)
         ?}
      ?};
      ZK_P.next()
   !}
?};
ZK_P.cntx_pop();

__pozkpl.ndx_drop(_ndx);

_czy_zle:=0;
__palkpl.clear();
{? __palkpl.first()
|| {!
   |? _wyb:=0;
      __pozkpl.clear();
      __pozkpl.prefix($__palkpl.ref());
      {? __pozkpl.first()
      || _wyb:=__pozkpl.size();
         {!
         |? _wyb-=__pozkpl.ALL;
            __pozkpl.next()
         !}
      ?};
      __palkpl.WYB:={? ~_wyb || 'T' || 'N' ?};
      _czy_zle+=__palkpl.WYB='N';
      __palkpl.put(1);
      __palkpl.next()
   !}
?};
{? _czy_zle
||
   {? _a & FUN.ask('Po modyfikacji pozycji zamówienia powstały błędne przypisania palet do realizacji zamówienia.'
                   '\nCzy pokazać błędne przypisania palet do realizacji zamówienia?'
                   '\n\nUwaga. Błędne przypisania zostaną automatycznie usunięte.'@)
   ||
::    definiowanie okienek selekcji i okienka grupowego do wyboru

      _win_sel:=__palkpl.mk_sel('Palety wg pozycji realizowanych zamówień'@,'P',,'#pal_zknsel',,,,,'U');
      __palkpl.win_fld(_win_sel,,'KOD',,,30,,1,'Paleta'@);
      __palkpl.win_fld(_win_sel,,'WYB',,,3,,1,'OK'@,,,2,,"'T'","'N'","'W'");
      __palkpl.win_act(_win_sel,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','__palctr#01')",,,,,,'L');
      __palkpl.win_act(_win_sel,0,'Rekord',,,,"exec('rekprzed','color','__palctr#01')");
      __palkpl.win_act(_win_sel,0,'Szukaj');
      __palkpl.win_act(_win_sel,0,'Kolejność');
      __palkpl.win_sel(_win_sel);

      _win_sep:=__pozkpl.mk_sel('Pozycje palety'@,'P',,'#poz_zknsel',,,,,'U');
      __pozkpl.win_fld(_win_sep,,'KTM',,,20,,1,'Indeks'@);
      __pozkpl.win_fld(_win_sep,,'NAZ',,,22,,1,'Nazwa'@);
      __pozkpl.win_fld(_win_sep,,'ILE',,,12,3,1,'Ilość'@);
      __pozkpl.win_fld(_win_sep,,'ILR',,,12,3,1,'Z poz.zam.'@);
      __pozkpl.win_fld(_win_sep,,'JM',,,6,,1,'jm'@);
      __pozkpl.win_fld(_win_sep,,'CEN',,,10,2,1,'Cena'@);
      __pozkpl.win_fld(_win_sep,,'TW',,,-10,,1,'Termin ważności'@);
      __pozkpl.win_act(_win_sep,0,'Szukaj');
      __pozkpl.win_act(_win_sep,0,'Kolejność');
      __pozkpl.win_sel(_win_sep);

      _acr_grp:=__palkpl.grp_make('Kontrola palet do realizacji'@,,'#grp_zknctrl');
      __palkpl.grp_sel(_acr_grp,__palkpl,_win_sel,,"exec('aktzkkpl','zamsiw_palety',0)"
                       ,,,12,,,,,'maximized_with_title');
      __palkpl.grp_splt(_acr_grp,,'vertical','tab1');
      __palkpl.grp_sel(_acr_grp,__pozkpl,_win_sep,,,65,0,12,,,,,'maximized_with_title');
      __palkpl.win_sel(_acr_grp);

      __palkpl.clear();
      __palkpl.first();
      __palkpl.select()
   ?};
   __palkpl.clear();
   {? __palkpl.first()
   || {!
      |? {? __palkpl.WYB='N' & __palkpl.PZM<>'' & (PAL_ZAM.clear(); PAL_ZAM.seek(__palkpl.PZM))
         || _pal:=PAL_ZAM.PAL;
            PAL_ZAM.del();
            PAL.clear();
            {? PAL.seek(_pal) || PAL.Z:='N'; PAL.put(1) ?}
         ?};
         __palkpl.next()
      !}
   ?}
?};

PAL.cntx_pop();
PAL_ZAM.cntx_pop();

VAR_DEL.delete('__palkpl','__pozkpl');
~~


\aktzkkpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: odswiezenie okienek __palkpl
::   WE: [_a] - 1-okienko realizacji(domyslnie) 0-brak okienka
::  OLD: \aktzkkpl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

{? _a
|| __pozkpl.clear();
   {? (6+__palkpl.SQL)='palety'
   || __pozkpl.prefix($__palkpl.ref())
   || __pozkpl.prefix($__palkpl.ref(),'N')
   ?};
   __pozkpl.first();
   grp_disp(__pozkpl,__pozkpl.win_sel('?'))
?};
{? _a
|| __zrekpl.clear();
   __zrekpl.first();
   grp_disp(__zrekpl,__zrekpl.win_sel('?'))
|? var_pres('__winzkr')>0
|| __zknrea.cntx_psh();
   __zknrea.clear();
   {? __zknrea.first() || {! |? exec('zrea_kol','zamsiw_rea'); __zknrea.next() !} ?};
   __zknrea.cntx_pop();
   grp_disp(__zknrea,__winzkr)
?};
{? var_pres('__reazld')>0 & var_pres('__filtrz')>117 &__reazld<=1
|| __filtrz.clear();
   __filtrz.first();
   grp_disp(__filtrz,__filtrz.win_sel('?'))
?};
~~


\del_palz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: usuwa informacje o przyblokowanych paletach dla zamowienia
::   WE: _a - ref zamowienia
::  OLD: \del_palz/mws.fml
::----------------------------------------------------------------------------------------------------------------------
PAL.cntx_psh();
PAL_ZAM.index('ZK_N');
PAL_ZAM.prefix(_a);
{? PAL_ZAM.first()
|| {!
   |? _pal:=PAL_ZAM.PAL;
      _ok:=PAL_ZAM.del();
      PAL.clear();
      {? PAL.seek(_pal) || PAL.Z:='N'; PAL.put(1) ?};
      _ok
   !}
?};
PAL.cntx_pop()


\spr_palz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy dana paleta jest dla danego zamowienia i nie przyblokowana przez inne
::   WE: _a - ref ZK_N
::       _b - ref palety
::       [_c] - TR_NZL.uidref() lub ''-domyślnie
::   WY: 1-nie powiazana z zadnym zamowieniem 2-powiazana z zamowieniem 0-niedostepna
::  OLD: \spr_palz/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_id_nzl:={? var_pres('_c')=type_of('') & (+_c)=48 || _c || '' ?};
_tr_nzl:={? _id_nzl<>'' || exec('FindAndGet','#table',TR_NZL,_id_nzl,,"ref()",null()) || null() ?};

_wyn:=0;
ZK_N.cntx_psh();
PAL_ZAM.index('PAL');
PAL_ZAM.prefix(_b);
{? PAL_ZAM.first()
|| _wyn:={? PAL_ZAM.ZK_N=_a & (_id_nzl='' | PAL_ZAM.TR_NZL=_id_nzl) || 2 || 0 ?}
|| _wyn:=1
?};
ZK_N.cntx_pop();
TR_NZL.cntx_psh();
TR_ZLM.cntx_psh();
{? _tr_nzl<>null()
|| TR_ZLM.index('POZ_REF');
   TR_ZLM.prefix(_tr_nzl);
   {? TR_ZLM.first()
   || {!
      |? {? TR_ZLM.PAL=_b & TR_ZLM.MANPAL>=0
         || _wyn:=2;
            0
         || TR_ZLM.next()
         ?}
      !}
   ?}
?};
TR_NZL.cntx_pop();
TR_ZLM.cntx_pop();
_wyn


\pal2dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: ponowna rozpiska rezerwacji na podstawie wybranych palet - tabel __dostpal - magazyn tyou DOSTAWY, DOSTEWI
::   WE: [_a] - czy realizacja kompletacji wysylki-1 0(domyslnie)-nie 2-realizacja na eKiosku
::  OLD: \pal2dost/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_ekiosk:={? _a=2 || _a:=0; 1 || 0 ?};
_buf:=tab_tmp(1,'ZKP','STRING[16]','','ILE','REAL','');

__dostpal.clear();
{? __dostpal.first()
|| {!
   |? _rdk:=__dostpal.RDK;
      _ndk:=__dostpal.NDK;
      _typ:='Z';
      _nag:=BEER.ZK_N;
      _mat:=exec('FindAndGet','#table','M',__dostpal.M,,,null());
      _mag:=BEER.ZK_N().MG;
      _scsql:=exec('MaskInt2RefSql','#convert',__dostpal.NDK,__dostpal.RDK);

      ZK_P.cntx_psh();
      ZK_P.index('ZAM');
      ZK_P.prefix(_nag,_mat,1);
      {? ZK_P.first()
      || {!
         |? _buf.clear();
            _ilejuz:={? _buf.find_key($ZK_P.ref()) || _buf.ILE || 0 ?};
            _zkpilp:=ZK_P.ILP-_ilejuz;
            _std:=exec('obl_stad','magazyn_stan',ZK_P.M,_scsql);

            {? _zkpilp>0
            || {? _zkpilp>=__dostpal.ILP
            || _ile:={? _std>=__dostpal.ILP || __dostpal.ILP || _std ?};
                  {? _ile>0
                  || {? ~exec('update','rezerwacje','ZK_P',ZK_P.ref(),_mag,ZK_P.M,_ile,_scsql,'B','',2,,__refrea)
                     || undo()
                     ?}
                  ?};
                  _buf.clear();
                  {? ~_buf.find_key($ZK_P.ref())
                  || _buf.blank();
                     _buf.ZKP:=$ZK_P.ref();
                     _buf.ILE:=_ile;
                     _buf.add(1)
                  || _buf.ILE+=_ile;
                     _buf.put(1)
                  ?};
                  __dostpal.ILP-=_ile;
                  __dostpal.put(1);
                  0
               |? _zkpilp<__dostpal.ILP
               || _ile:={? _std>=_zkpilp || _zkpilp || _std ?};
                  {? _ile>0
                  || {? ~exec('update','rezerwacje','ZK_P',ZK_P.ref(),_mag,ZK_P.M,_ile,_scsql,'B','',2,,__refrea)
                     || undo()
                     ?}
                  ?};
                  _buf.clear();
                  {? ~_buf.find_key($ZK_P.ref())
                  || _buf.blank();
                     _buf.ZKP:=$ZK_P.ref();
                     _buf.ILE:=_ile;
                     _buf.add(1)
                  || _buf.ILE+=_ile;
                     _buf.put(1)
                  ?};
                  __dostpal.ILP-=_ile;
                  __dostpal.put(1);
                  ZK_P.next()
               ?}
            || ZK_P.next()
            ?}
         !}
      ?};
      ZK_P.cntx_pop();
      __dostpal.next()
   !}
?};

exec('copy_poz','zamsiw_rea',BEER.ZK_N,__refrea,2,_a,{? _a || 2 || 1 ?},1);
exec('akt_rezy','rezerwacje');

_ndx:=__dostpal.ndx_tmp('',,'RDK',,0,'NDK',,0,'M',,0,'ILR',,0,'PALDO',,0);
REZ.cntx_psh();
ZK_RP.index('NAGA');
ZK_RP.prefix(__refrea,null);
{? ZK_RP.first()
|| {!
   |? _ref:=ZK_RP.ref(); _ok:=ZK_RP.next();
      ZK_RP.cntx_psh();
      ZK_RP.clear();
      {? ZK_RP.seek(_ref)
      || _ilr:=ZK_RP.ILR;
         _rez:={? ZK_RP.REZ<>null() || $ZK_RP.REZ || '' ?};
         REZ.index('ZK_P');
         REZ.prefix(ZK_RP.P,'B');
         {? REZ.first()
         || {!
            |? {? REZ.SC<>'' & $REZ.ref()=_rez
               || __dostpal.index(_ndx);
                  _oki:=(__dostpal.prefix(); __dostpal.find_key(BB.sqlint(REZ.SC),form(8+REZ.SC),$ZK_RP.P().M)
                       & __dostpal.ILR>=REZ.ILR)
                      | (__dostpal.prefix(BB.sqlint(REZ.SC),form(8+REZ.SC),$ZK_RP.P().M,REZ.ILR); __dostpal.first());
                  {? _oki
                  || ZK_RP.PAL:=__dostpal.KOD;
                     ZK_RP.TW:=__dostpal.TW;
                     ZK_RP.EANL:=__dostpal.LOK;
                     ZK_RP.MG:=REZ.MG;
                     ZK_RP.PALDO:={? __dostpal.PALDO<>''
                                  || exec('FindAndGet','#table','PAL',__dostpal.PALDO,,"KODK",'')
                                  || ''
                                  ?};
                     ZK_RP.PAL_POZ:=__dostpal.POZ;
                     {? ZK_RP.put(1)
                     || {? __dostpal.ILR=ZK_RP.ILR
                        || _ilr-=ZK_RP.ILR;
                           __dostpal.del()
                        |? __dostpal.ILR>ZK_RP.ILR
                        || __dostpal.ILR-=ZK_RP.ILR;
                           __dostpal.put(1);
                           _ilr-=ZK_RP.ILR
                        ?}
                     ?}
                  ?}
               ?};
               _ilr>0 & REZ.next()
            !}
         ?}
      ?};
      ZK_RP.cntx_pop();
      _ok
   !}
?};
REZ.cntx_pop();
obj_del(_buf);
~~


\addrepal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: zwraca palete na podstawie ref-u ZK_RP
::   WE: _a - ZK_RP.PAL
::       _b - ref DK
::       _c - ilosc
::       _d - magazyn
::       _e - lokalizacja
::       _f - termin waznosci
::       _g - ZK_RP.PALDO
::       _h - ZK_RP.PAL_POZ
::       _i - ref reorganizacji
::   WY: ref reorganizacji dla rozpakowania
::  OLD: \addrepal/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_refreo:=_i;
_rpal:={? _a<>'' || exec('FindInSet','#table','PAL','PAL',_a,_a) || null ?};
_rlok:={? _e<>'' || exec('FindInSet','#table','EANL','KOD',_e,_e) || null ?};
_ppal:={? _g<>'' || exec('FindInSet','#table','PAL','PAL',_g,_g) || null ?};
_zpalet:={? _ppal<>null & (_ppal<>_rpal | exec('FindAndGet','#table',PAL,_rpal,,"BEZOZN='B'",0)) || 2 || 1 ?};

{? _rpal<>null & _rlok<>null
|| DK.cntx_psh();
   DK.clear();
   {? DK.seek(_b)
   || _refnd:=$DK.N;
      _nowyd:=_zpalet=2 & _ppal<>null() & exec('FindInSet','#table','PAL','NOPAL',DK.N().MAG,'B',,,,null())=_ppal;
      _palet:={? _zpalet=2 || _ppal || _rpal ?};
      {? {? _nowyd
         || ~exec('add2dk_l','magdok_wspolne',DK.ref(),null(),_rlok,null(),_f,date(0,0,0),_c,_d,DK.M,0,
              ,_rpal,_ppal,1,2)
         || ~exec('add2dk_l','magdok_wspolne',DK.ref(),null(),_rlok,null(),_f,date(0,0,0),_c,_d,DK.M,0,
              ,_palet,null(),,1)
         ?}
      || undo()
      || {? _h<>'' & _zpalet=2
         || {? _refreo=null() & ~_nowyd
            || DK_LN.clear();
               DK_LN.blank();
               DK_LN.TM+=0.033333;
               DK_LN.MG:=ZK_N.MG;
               DK_LN.RODZ:='S';
               DK_LN.ZDOK:=_refnd;
               _refreo:={? ~DK_LN.add() || undo(); null || DK_LN.ref() ?}
            ?};
            {? ~_nowyd &
               (_refreo=null()
               | ~exec('add2dk_l','magdok_wspolne',null(),_refreo,_rlok,null()
                   ,_f,date(0,0,0),_c,_d,DK.M,0,,_rpal,_ppal,,_zpalet))
            || undo()
            || PAL_POZ.cntx_psh();
               PAL_POZ.use(form(8+_h));
               PAL_POZ.clear();
               {? PAL_POZ.seek(_h)
               || PAL_POZ.ILP-=_c;
                  exec('akt_palp','magdok_palety');
                  {? PAL_POZ.put(1)
                  || exec('poz_bpal','magdok_palety',1,$_ppal,$_rpal,PAL_POZ.M().KTM,_c,PAL_POZ.C,PAL_POZ.TW
                        ,PAL_POZ.SCSQL,_d,PAL_POZ.DK_C,_nowyd)
                  ?};
                  exec('znacznik','magdok_palety',PAL_POZ.PAL)
               ?};
               PAL_POZ.cntx_pop()
            ?}
         ?}
      ?}
   ?};
   DK.cntx_pop()
?};
_refreo


\zmrezpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: rezerwowanie palet pod zamowienie
::   WE: [_a] - wg TR_NZL-a
::   WY: 1-zatwierdzono wybór dla transportu, 0(domyślnie)-nieistotnie
::  OLD: \zmrezpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tr_nzl:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_id_nzl:={? _tr_nzl<>null() || exec('FindAndGet','#table',TR_NZL,_tr_nzl,,"uidref()",'') || '' ?};
_res:=0;

VAR_DEL.delete('__zknrea','__stnmat');
__zknrea:=tab_tmp(4,'TREE','TREE_REF','galazka'
           ,'LAB','STRING[90]','Etykieta'
           ,'ZAM','STRING[20]','Symbol zamówienia'
           ,'POZ','INTEGER','Pozycja'
           ,'REF','STRING[16]','ref'
           ,'MAG','STRING[10]','Magazyn'
           ,'KTM','STRING[50]','Indeks-KTM'
           ,'NAZ','STRING[100]','Indeks-Nazwa'
           ,'ILZ','REAL','Il.zamówiona'
           ,'ILP','REAL','Il.pozostała'
           ,'REZ','REAL','Il.zarezerwowana'
           ,'REA','REAL','Il.do realizacji'
           ,'ICON','INTEGER','Ikonka'
           ,'WYB','STRING[1]','Wybrano'
           ,'RJ2','REAL','Ilość w j.sprz.'
           ,'JM1','STRING[10]','jm'
           ,'JM2','STRING[10]','J.sprz.'
           ,'DTZ','DATE','Data zamówienia'
           ,'ZKN','STRING[16]','ref zamowienia'
           ,'PAL','STRING[16]','paleta'
           ,'SQM','STRING[16]','ref SQL M'
           ,'KPAL','STRING[30]','kod kreskowy palety'
           ,'CZY','INTEGER','czy magazyn paletowy'
           ,'LOKZ','STRING[20]','Lokalizacja'
           ,'KODK','STRING[128]','Kod kreskowy'
           ,'TW','DATE','Termin ważności'
           ,'ZLSYM','STRING[20]','Symbol zlecenia'
           ,'WART','REAL','wartosc sprzedazy'
           ,'ONEMG','STRING[16]','tylko z magazynu'
           ,'DOST','INTEGER','rezerwacje wg dostaw'
           ,'NAD','INTEGER','czy galaz nadrzedna'
           ,'MGP','INTEGER','czy magazyn paletowy'
           ,'TR','DATE','Termin realizacji'
           ,'WTR','DATE','Wewnętrzny termin realizacji'
           ,'USL','STRING[1]','Czy usluga'
           ,'ZGH','INTEGER','Przewodnik zlecenia - #ZGH.ref()'
           ,'ZGP','INTEGER','Pozycja przewodnika - #ZGP.ref()'
           ,'ZGP_NAME','STRING[40]','Pozycja przewodnika'
           ,'RED','REAL','Ilość zarezerwowana wg dostawy'
           ,'PLUS','REAL','Ilość powyżej'
           ,'RES','REAL','Sumaryczna ilość do realizacji'
           ,'RS2','REAL','Sumaryczna ilość wg j.sprz.'
           ,'WDST','INTEGER','Czy wynika z wyboru dostawy');

__stnmat:=tab_tmp(2,'MAT','STRING[16]',''
           ,'MAG','STRING[16]',''
           ,'ILE','REAL',''
           ,'ILR','REAL','');

_win_sel:=__zknrea.mk_sel('Ilości do realizacji'@,'P',,'qqqqrrraeokax',,,__zknrea.size(),1);

__zknrea.win_fld(_win_sel,,'LAB',,,30,,1,'');
__zknrea.win_fld(_win_sel,,'ILP',,,10,ST.DOKL,1,'Pozostało'@);
__zknrea.win_fld(_win_sel,,'REZ',,,10,ST.DOKL,1,'Zarezerwowano'@);
__zknrea.win_fld(_win_sel,,'REA',,,10,ST.DOKL,,'Do realizacji (jm)'@);
__zknrea.win_fld(_win_sel,,'JM1',,,4,,1,'jm'@);
{? ZK_N.T().R='Z'
|| __zknrea.win_fld(_win_sel,,'RJ2',,,10,ST.DOKL,1,'Do realizacji (j.sp.)'@);
   __zknrea.win_fld(_win_sel,,'JM2',,,4,,1,'J.sp.'@)
?};
__zknrea.win_fld(_win_sel,,'KPAL',,,10,,1,'Kod palety'@);
{? ZK_N.T().R='Z'
|| __zknrea.win_fld(_win_sel,,'WART',,,10,2,1,{? ZK_N.CB='N' || 'Wartość Netto'@ || 'Wartość Brutto'@ ?},,,,1)
?};
__zknrea.win_act(_win_sel,0,'Rekord',,,,"exec('rekprzed','color','ZREA#01')","exec('popzkrea','zamsiw_palety')");
__zknrea.win_act(_win_sel,0,'Formuła','&Akceptuj'@@,,'Akceptacja ilości do realizacji'@,,"sel_exit()",,,,,'A');
__zknrea.win_act(_win_sel,0,'Formuła','&Zeruj'@@,,'Zerowanie pola Do realizacji'@,
   "exec('zatw_wyb','zamsiw_rea',0)",,,1,"exec('zatw_wyb','zamsiw_rea',0)",,'Z');
__zknrea.win_act(_win_sel,0,'Formuła','&Wypełnij'@@,,'Wypełnienie pola Do realizacji'@,
   "exec('zatw_wyb','zamsiw_rea',1)",,,1,"exec('zatw_wyb','zamsiw_rea',1)",,'W');

__zknrea.win_act(_win_sel,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','@ZREA#01')",,,,,,'L');

__zknrea.tr_fml(_win_sel,,"{? _a || {? __zknrea.TREE=0 || 1 || _a ?} || _a ?}");
__zknrea.win_fml(_win_sel,,'LAB',,'ICON_BEFORE',"
         {? __zknrea.TREE<>0 & __zknrea.WYB='*'
         || 'xwin16.png:38'
         |? __zknrea.TREE<>0 & __zknrea.WYB=''
         || ''
         |? __zknrea.ICON=-1
         || 'xwin16.png:7'+{? __zknrea.tr_state()=1 || '5' || '4' ?}
         || ''
         ?}
      ");
__zknrea.win_sel(_win_sel);

exec('copy_poz','zamsiw_rea',ZK_N.ref(),'',1,,,,,,,_tr_nzl);
{? (_opc:=exec('wybpalzk','zamsiw_palety',2,_id_nzl); _opc<0)
|| FUN.info('Brak palet zgodnych z pozycjami zamówienia\n'
            '(cała paleta powinna zawierać się w pozycjach zamówienia).\n'
            'Opcja niedostępna.'@)
|? _opc & _tr_nzl<>null()
|| _res:=1
?};
ZK_RP.index('NAGZ');
ZK_RP.prefix(BEER.ZK_N,null);
{? ZK_RP.first() || {! |? ZK_RP.del() !} ?};
VAR_DEL.delete('__zknrea','__stnmat');
_res


\wybpalzk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: okienko wyboru palet dla zamowien - kompletacja wysylki/realizacja zamowienia
::   WE: [_a] - 0(domyslnie) realizacja zamowienia 1-kompletacja wysylki 2-rezerwacja palet
::       [_b] - wskazanie na dyspozycję transportową (uidref)
::   WY: 1 - wybrano 0 - zrezygnowano -1 - brak palet realizujacych
::  OLD: \wybpalzk/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
_tr_nzl:={? var_pres('_b')=type_of('') & (+_b)=48 || _b || null() ?};

_wyn:=0;
VAR_DEL.delete('__palkpl','__pozkpl','__zrekpl','__palki1','__palki2','__dkc');
__palkpl:=exec('tab_nkpl','zamsiw_palety');
__pozkpl:=exec('tab_pkpl','zamsiw_palety');
__zrekpl:=exec('tab_zkpl','zamsiw_palety');

__palki1:=__palkpl.ndx_tmp('',0,'ZKN',,0,'LP',,0,'KOD',,0,'SQL',,0);
__palki2:=__palkpl.ndx_tmp('',0,'ZKN',,0,'KOD',,0,'SQL',,0);

{? ~exec('upr_cz','ceny') || __pozkpl.fld_fml('CEN','BEFORE_DISPLAY',"0") ?};

:: wypelnia tabele materialow i ilosci do realizacji na jej podstawie wypelniana jest lista dostepnych palet

:: tabela cech dla pozycji zamowienia
__dkc:=tab_tmp(3,'MAT','STRING[16]',''
        ,'DKC','STRING[16]',''
        ,'ILE','REAL','');

BEER.AKTZKN:=$BEER.ZK_N;
__zknrea.cntx_psh();
SL.cntx_psh();
PAL.cntx_psh();
PAL_POZ.cntx_psh();

__zknrea.clear();
{? __zknrea.first()
|| BEER.AKTZKN:=__zknrea.ZKN;
   {!
   |? {? __zknrea.TREE<>0
      || __zrekpl.clear();
         __zrekpl.prefix(BEER.AKTZKN);
         {? __zrekpl.find_key(__zknrea.KTM,__zknrea.KTM)
         || __zrekpl.ILR+=__zknrea.REA;
            __zrekpl.ILP+=__zknrea.REA;
            __zrekpl.put(1)
         || __zrekpl.blank();
            __zrekpl.ZKN:=BEER.AKTZKN;
            __zrekpl.KTM:=__zrekpl.KT2:=__zknrea.KTM;
            __zrekpl.NAZ:=__zknrea.NAZ;
            __zrekpl.ILR:=__zknrea.REA;
            __zrekpl.ILW:=0;
            __zrekpl.ILP:=__zknrea.REA;
            __zrekpl.JM:=__zknrea.JM1;
            __zrekpl.add(1)
         ?};
         ZK_P.cntx_psh();
         ZK_RP.cntx_psh();
         EANP.cntx_psh();
         {? _a<>1 & (ZK_RP.clear(); ZK_RP.seek(__zknrea.REF))
         || _refdkc:=$ZK_RP.P().DK_C
         |? _a=1
          & (EANP.clear(); EANP.seek(__zknrea.REF)) & (5+EANP.RSQL)='zkpoz'
          & (ZK_P.clear(); ZK_P.seek(EANP.RSQL))
         || _refdkc:=$ZK_P.DK_C
         || _refdkc:=''
         ?};
         __dkc.clear();
         __dkc.blank();
         __dkc.MAT:=$exec('FindInSet','#table','M','MATKTM',__zknrea.KTM,__zknrea.KTM);
         __dkc.DKC:=_refdkc;
         __dkc.ILE:=__zknrea.REA;
         __dkc.add(1);
         ZK_RP.cntx_pop();
         ZK_P.cntx_pop();
         EANP.cntx_pop()
      ?};
      __zknrea.next()
   !}
?};

:: wypelnia tabele palet wg materialow do realizacji

__zrekpl.clear();
{? __zrekpl.first()
|| _lok:=tab_tmp(2,'KOD','STRING[30]',''
          ,'KO2','STRING[30]','');
   {!
   |? _mat:=exec('FindInSet','#table','M','MATKTM',__zrekpl.KTM,__zrekpl.KTM);
      {? _mat<>null
      || SL.index('PALM');
         SL.prefix(BEER.ZK_N().MG,_mat);
         {? SL.first()
         || {!
            |? _palz:=0;
               {? SL.EANL<>null & SL.PAL<>null & SL.PAL().AKT='T'
                & (_palz:=exec('spr_palz','zamsiw_palety',BEER.ZK_N,SL.PAL,_tr_nzl))>0
                & (__palkpl.index(__palki1); ~__palkpl.find_key(BEER.AKTZKN,0,SL.PAL().KODK,$SL.PAL))
               || __zrekpl.cntx_psh();
                  _tak:=-1;
                  _buf:=tab_tmp(1,'MAT','STRING[16]','');
                  {? SL.PAL().AKT='N'
                  || PAL_POZ.use('palet'+form(SL.PAL().AR-2000,-2,0,'99'))
                  || PAL_POZ.use('paletyp')
                  ?};
                  PAL_POZ.index('PAL');
                  PAL_POZ.prefix(SL.PAL);
                  {? PAL_POZ.first()
                  || {!
                     |? _buf.clear();
                        {? ~_buf.find_key($PAL_POZ.M)
                        || _buf.blank();
                           _buf.MAT:=$PAL_POZ.M;
                           _buf.add(1);
                           _ile:=0;
                           _ktm:=PAL_POZ.M().KTM;
                           PAL_POZ.cntx_psh();
                           PAL_POZ.index('PAL');
                           PAL_POZ.prefix(SL.PAL,_ktm,_ktm);
                           {? PAL_POZ.first() || {! |? _ile+=PAL_POZ.ILP; PAL_POZ.next() !} ?};
                           PAL_POZ.cntx_pop();
                           {? _ile>0
                           || __zrekpl.clear();
                              __zrekpl.prefix(BEER.AKTZKN,_ktm,_ktm);
                              {? __zrekpl.first()
                              || _tak:=__zrekpl.ILR>=_ile
                              || _tak:=0
                              ?}
                           ?}
                        ?};
                        _tak<=0 & PAL_POZ.next()
                     !}
                  ?};
                  obj_del(_buf);
                  __zrekpl.cntx_pop();
                  {? _tak>0
                  || __palkpl.clear();
                     __palkpl.blank();
                     __palkpl.ZKN:=BEER.AKTZKN;
                     __palkpl.LP:=0;
                     __palkpl.KOD:=SL.PAL().KODK;
                     __palkpl.SQL:=$SL.PAL;
                     __palkpl.LOK:=SL.EANL().KOD;
                     __palkpl.WYB:=0;
                     __palkpl.BLK:=0;
                     __palkpl.WYD:=SL.PAL().W;
                     __palkpl.KPL:=exec('czynakpl','magdok_palety',SL.PAL);
                     __palkpl.KTM:=SL.PAL().MKTM;
                     {? __palkpl.add(1)
                     || _okpal:=1;
                        PAL_POZ.index('PAL');
                        PAL_POZ.prefix(SL.PAL);
                        {? PAL_POZ.first()
                        || {!
                           |? __pozkpl.clear();
                              __pozkpl.blank();
                              __pozkpl.SQL:=$__palkpl.ref();
                              __pozkpl.KTM:=PAL_POZ.M().KTM;
                              __pozkpl.NAZ:=PAL_POZ.M().N;
                              __pozkpl.ILE:=PAL_POZ.ILP;
                              __pozkpl.JM:=PAL_POZ.JM().KOD;
                              __pozkpl.CEN:=PAL_POZ.C;
                              __pozkpl.TW:=PAL_POZ.TW;
                              {? PAL_POZ.SCSQL<>''
                              || _dost:=(8+PAL_POZ.SCSQL)+form(BB.sqlint(PAL_POZ.SCSQL),-8,0,'99')
                              || _dost:=exec('last_dst','magdok_palety',PAL_POZ.M,PAL_POZ.PAL,PAL_POZ.C
                                             ,PAL_POZ.DK_C,PAL_POZ.IL)
                              ?};
                              __pozkpl.RDK:=#form(8-_dost);
                              __pozkpl.NDK:=form(8+_dost);
                              _tab:=exec('aktrdndk','magdok_palety',SL.MG,__pozkpl.RDK,__pozkpl.NDK,SL.PAL);
                              __pozkpl.RDK:=_tab[1];
                              __pozkpl.NDK:=_tab[2];
                              obj_del(_tab);
                              __pozkpl.M:=$PAL_POZ.M;
                              __pozkpl.PQL:=$PAL_POZ.PAL;
                              __pozkpl.POZ:=$PAL_POZ.ref();
                              __pozkpl.DKC:=exec('czyp_dkc','magdok_palety',$PAL_POZ.M,PAL_POZ.DK_C,PAL_POZ.ILP,__dkc);
                              __pozkpl.SDK:={? PAL_POZ.DK_C<>null() || PAL_POZ.DK_C().SYM || '' ?};
                              __pozkpl.WYB:={? __palkpl.WYB || 'T' || 'N' ?};
                              {? __pozkpl.DKC='A'
                              || __pozkpl.add(1);
                                 PAL_POZ.next()
                              || _okpal:=0;
                                 0
                              ?}
                           !}
                        ?};
                        {? ~_okpal
                        || __palkpl.del()
                        || {? _palz=2 || exec('wybzkkpl','zamsiw_palety',1,1) ?}
                        ?}
                     ?}
                  ?}
               ?};
               SL.next()
            !}
         ?}
      ?};
      __zrekpl.next()
   !};
   {? _a>0 || exec('blkzkkpl','zamsiw_palety') ?};
:: sort wg lokalizacji palet
   {? ZK_N.MG().MWS='T' & __zrekpl.first() & (_typ_lok:=ZK_N.MG().SP_REANL; _typ_lok<>'N')
   || _loki:=tab_tmp(2,'LOK','STRING[30]',''
              ,'LO2','STRING[30]',''
              ,'LP','INTEGER','');
      _wgmggr:=ND.MAG().WGMGGR='T';
      _lp:=0;
      {!
      |? _sort:=exec('sort_sl','magazyn_stan',_typ_lok,_wgmggr,ZK_N.MG
                 ,exec('FindInSet','#table','M','MATKTM',__zrekpl.KTM,__zrekpl.KTM),ZK_N.DLAKH,,,,1);
         {? _sort.size() & _sort.first()
         || {!
            |? _lokz:=exec('FindAndGet','#table','EANL',_sort.EAN,,"EANL.KOD",'');
               _loki.clear();
               {? ~_loki.find_key(_lokz,_lokz)
               || _lp+=1;
                  _loki.blank();
                  _loki.LOK:=_loki.LO2:=_lokz;
                  _loki.LP:=_lp;
                  _loki.add(1)
               ?};
               _sort.next()
            !}
         ?};
         obj_del(_sort);
         __zrekpl.next()
      !};
      __palkpl.cntx_psh();
      _ndx:=__palkpl.ndx_tmp('',0,'LOK',,0,'LOK',,0,'KOD',,0);
      __palkpl.index(_ndx);
      {? __palkpl.first() & _loki.size()
      || {!
         |? _loki.clear();
            {? _loki.find_key(__palkpl.LOK,__palkpl.LOK)
            || __palkpl.LP:=_loki.LP;
               __palkpl.put(1)
            ?};
            __palkpl.next()
         !}
      ?};
      __palkpl.ndx_drop(_ndx);
      __palkpl.cntx_pop();
      obj_del(_loki)
   ?}
?};

__zknrea.cntx_pop();
SL.cntx_pop();
PAL.cntx_pop();
PAL_POZ.cntx_pop();

:: definiowanie okienek selekcji i okienka grupowego do wyboru

_win_sel:=__palkpl.mk_sel('Palety wg pozycji realizowanych zamówień'@,'N',,'#pal_zknsel',,,,,'U');
__palkpl.win_fld(_win_sel,,'KOD',,,{? _a=2 || 15 || 12 ?},,1,'Paleta'@,,'Kod kreskowy palety'@);
__palkpl.win_fld(_win_sel,,'LOK',,,{? _a=2 || 20 || 12 ?},,1,'Lokalizacja'@,,'Lokalizacja palety'@);
__palkpl.win_fld(_win_sel,,'WYD',,,-3,,1,'W wydaniu'@,,'Paleta na dokumencie wydania (T/N)'@,2,,"'T'","'N'","'W'");
__palkpl.win_fld(_win_sel,,'KPL',,,-3,,1,'Na urządzeniu mobilnym'@,,'Paleta na kompletacji wysyłki (T/N)'@,2,,"'T'","'N'","'W'");
{? _a<2 || __palkpl.win_fld(_win_sel,,'ILW',,,9,3,1,'Do wydania'@,,'Ilość do wydania'@) ?};
__palkpl.win_act(_win_sel,0,'Formuła','&Wybierz'@@,,,"exec('wybzkkpl','zamsiw_palety',1)",,1,1
  ,"exec('wybzkkpl','zamsiw_palety',1)",,'W');
__palkpl.win_act(_win_sel,0,'Formuła','&Zrezygnuj'@@,,,"exec('wybzkkpl','zamsiw_palety',0)",,,1
  ,"exec('wybzkkpl','zamsiw_palety',0)",,'Z');
__palkpl.win_act(_win_sel,0,'Formuła','&Akceptuj'@@,,,"exec('akczkkpl','zamsiw_palety')",,,,,,'A');
{? BEER.ZK_N().MG().FPAL<>null
|| __palkpl.win_act(_win_sel,0,'Formuła','Au&tomatyczny wybór'@@,,,"exec('auto_wyb','zamsiw_palety')",,,,,,'T')
?};
{? BEER.ZK_N().MG().FROZ<>null & _a<2
|| __palkpl.win_act(_win_sel,0,'Formuła','Auto&matyczne rozpakowanie'@@,,,"exec('rozzkkpl','zamsiw_palety',1)",,,,,,'M');
   __palkpl.win_act(_win_sel,1,'Formuła','Auto&matyczne rozpakowanie'@@,,,"exec('rozzkkpl','zamsiw_palety',1)",,,,,,'M')
?};
{? _a<2
|| __palkpl.win_act(_win_sel,1,'Formuła','&Dodaj z rozpakowania'@@,,,"exec('rozzkkpl','zamsiw_palety')",,1,,,,'D');
   __palkpl.win_act(_win_sel,0,'Formuła','&Dodaj z rozpakowania'@@,,,"exec('rozzkkpl','zamsiw_palety')",,,,,,'D')
?};
__palkpl.win_act(_win_sel,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','__palkpl#01')",,,,,,'L');
__palkpl.win_act(_win_sel,0,'Rekord',,,,"exec('rekprzed','color','__palkpl#01')");
__palkpl.win_act(_win_sel,0,'Szukaj');
__palkpl.win_act(_win_sel,0,'Kolejność');
__palkpl.win_sel(_win_sel);

__palkpl.fld_fml('ILW','DISPLAY_FORMAT',"{? exec('ilw_wpal','zamsiw_palety')=0 || 'empty=1' || 'empty=0' ?}");

_win_sep:=__pozkpl.mk_sel('Pozycje palety'@,'N',,'#poz_zknsel',,,,,'U');
__pozkpl.win_fld(_win_sep,,'KTM',,,15,,1,'Indeks'@,,'Indeks materiałowy'@);
__pozkpl.win_fld(_win_sep,,'NAZ',,,16,,1,'Nazwa'@,,'Nazwa materiału'@);
__pozkpl.win_fld(_win_sep,,'ILE',,,10,3,1,'Ilość'@,,'Ilość materiału'@);
__pozkpl.win_fld(_win_sep,,'JM',,,4,,1,'jm'@,,'Jednostka miary'@);
__pozkpl.win_fld(_win_sep,,'CEN',,,10,2,1,'Cena'@,,'Cena materiału'@);
__pozkpl.win_fld(_win_sep,,'TW',,,-10,,1,'Termin ważności'@,,'Termin ważności materiału'@);
__pozkpl.win_act(_win_sep,0,'Menu','Przesu&ń'@@,,,,,,,,,'Ń');
__pozkpl.win_act(_win_sep,0,'Formuła','W &górę'@@,'Przesu&ń',,"exec('renumroz','zamsiw_palety','U')",,,1
          ,"exec('renumroz','zamsiw_palety','U')",,'G');
__pozkpl.win_act(_win_sep,0,'Formuła','W &dół'@@,'Przesu&ń',,"exec('renumroz','zamsiw_palety','D')",,,1
          ,"exec('renumroz','zamsiw_palety','D')",,'D');
__pozkpl.win_act(_win_sep,0,'Formuła','Do &numeru'@@,'Przesu&ń',,"exec('renumroz','zamsiw_palety','N')",,,1
          ,"exec('renumroz','zamsiw_palety','N')",,'N');
__pozkpl.win_act(_win_sep,0,'Szukaj');
__pozkpl.win_act(_win_sep,0,'Wyświetl',,,,"exec('dispdkcp','magdok_palety',__pozkpl.POZ)");
__pozkpl.win_sel(_win_sep);

__pozkpl.dnd_sel(_win_sep,,'records.#poz_zknsel',"exec('renumroz','zamsiw_palety')");

_win_ser:=__zrekpl.mk_sel('Pozycje do realizacji wg indeksów materiałowych'@,'N',,'#rea_zknsel',,,,,'U');
__zrekpl.win_fld(_win_ser,,'KTM',,,30,,1,'Indeks'@,,'Indeks materiałowy'@);
__zrekpl.win_fld(_win_ser,,'NAZ',,,37,,1,'Nazwa'@,,'Nazwa materiału'@);
__zrekpl.win_fld(_win_ser,,'ILR',,,-11,3,1,'Zarezerwowano'@,,'Ilość zarezerwowano'@);
__zrekpl.win_fld(_win_ser,,'ILW',,,11,3,1,'Wybrano'@,,'Ilość wybrano'@);
__zrekpl.win_fld(_win_ser,,'ROZ',,,-11,3,1,'Do rozpakowania'@,,'Ilość do rozpakowania'@);
__zrekpl.win_fld(_win_ser,,'ILP',,,11,3,1,'Pozostało'@,,'Ilość pozostało'@);
__zrekpl.win_fld(_win_ser,,'JM',,,4,,1,'jm'@,,'Jednostka miary'@);
__zrekpl.win_act(_win_ser,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','__zrekpl#01')",,,,,,'L');
__zrekpl.win_act(_win_ser,0,'Rekord',,,,"exec('rekprzed','color','__zrekpl#01')");
__zrekpl.win_act(_win_ser,0,'Szukaj');
__zrekpl.win_act(_win_ser,0,'Kolejność');
__zrekpl.win_sel(_win_ser);

_acr_grp:=__palkpl.grp_make('Wybór palet do realizacji'@,,'#grp_zknsel');

__palkpl.grp_sel(_acr_grp,__palkpl,_win_sel,,"exec('aktzkkpl','zamsiw_palety')",,,12,,,,,'maximized_with_title');
__palkpl.grp_splt(_acr_grp,,'vertical','tab1');
__palkpl.grp_sel(_acr_grp,__pozkpl,_win_sep,,,65,0,12,,,,,'maximized_with_title');
__palkpl.grp_splt(_acr_grp,,'horizontal','tab2');
__palkpl.grp_sel(_acr_grp,__zrekpl,_win_ser,,,0,14,10,,,,,'maximized_with_title');
__palkpl.win_sel(_acr_grp);

__palkpl.clear();
__zrekpl.clear();
{? _a<2
 & ((ZK_N.T().R='Z' & exec('get','#params',600705,2)='T') | (ZK_N.T().R='W' & exec('get','#params',600706,2)='T'))
|| exec('initRozpPAL','zamsiw_palety')
?};
{? {? __palkpl.first() | (__zrekpl.first() & _a<2) || 1 || _wyn:=-1; 0 ?} & __palkpl.select()
|| _wyn:=_a=2;
   __palkpl.clear();
   {? ~_wyn & __palkpl.first()
   || {!
      |? _wyn:=__palkpl.WYB;
         ~_wyn & __palkpl.next()
      !}
   ?};
   {? _wyn
   ||
      {? ~_a
      ||
::       likwidacja znacznika wyboru
         ZK_RP.index('NAGZ');
         ZK_RP.prefix(BEER.ZK_N,null);
         {? ZK_RP.first() || {! |? ZK_RP.W:=''; ZK_RP.put(1); ZK_RP.next() !} ?}
      |? _a=1
      ||
::       likwidacja dotychczasowych pozycji
         EANP.index('EANN');
         EANP.prefix(EANN.ref());
         {? EANP.first() || {! |? EANP.del() !} ?}
      ?};

      _buf:=tab_tmp(1,'ZKN','STRING[16]',''
             ,'ILR','REAL','');
      __zknrea.cntx_psh();
      _ndx:=__zknrea.ndx_tmp('',0,'KTM',,0,'KTM',,0);
      __palkpl.clear();
      {? __palkpl.first()
      || _lp:=0;
         {!
         |? {? _a=2
            || exec('akt_palz','magdok_palety',exec('FindInSet','#table','PAL','PAL',__palkpl.KOD,__palkpl.KOD)
                ,__palkpl.WYB,BEER.ZK_N,_tr_nzl,exec('FindInSet','#table','EANL','KOD',__palkpl.LOK,__palkpl.LOK))
            |? __palkpl.WYB
            || {? ~_a
               || __pozkpl.clear();
                  __pozkpl.prefix($__palkpl.ref());
                  {? __pozkpl.first()
                  || {!
                     |? _bez:=__palkpl.BEZ;
                        _ilp:={? ~_bez || __pozkpl.ILE || __palkpl.ILW ?};
                        __zknrea.index(_ndx);
                        __zknrea.prefix(__pozkpl.KTM,__pozkpl.KTM);
                        {? _ilp>0 & __zknrea.first()
                        || {!
                           |? _buf.clear();
                              {? _buf.find_key($__zknrea.ref())
                              || _ile:=__zknrea.REA-_buf.ILR
                              || _ile:=__zknrea.REA
                              ?};
                              {? _ile>0
                              || ZK_RP.cntx_psh();
                                 ZK_RP.clear();
                                 {? ZK_RP.seek(__zknrea.REF)
                                 || _ilb:=0;
                                    {? _ile=_ilp
                                    || ZK_RP.PAL:={? ~_bez || __palkpl.KOD || __pozkpl.KTM ?};
                                       ZK_RP.TW:=__pozkpl.TW;
                                       ZK_RP.EANL:={? ~_bez || __palkpl.LOK || __pozkpl.NAZ ?};
                                       ZK_RP.MG:=BEER.ZK_N().MG;
                                       ZK_RP.W:='*';
                                       ZK_RP.ILR:=_ilp;
                                       ZK_RP.PALDO:={? ~_bez || '' || __palkpl.LOK ?};
                                       ZK_RP.put(1);
                                       _ilb:=_ilp;
                                       _ilp:=0
                                    |? _ile>_ilp
                                    || ZK_RP.ILR-=_ilp;
                                       ZK_RP.put(1);
                                       ZK_RP.PAL:={? ~_bez || __palkpl.KOD || __pozkpl.KTM ?};
                                       ZK_RP.TW:=__pozkpl.TW;
                                       ZK_RP.EANL:={? ~_bez || __palkpl.LOK || __pozkpl.NAZ ?};
                                       ZK_RP.MG:=BEER.ZK_N().MG;
                                       ZK_RP.W:='*';
                                       ZK_RP.ILR:=_ilp;
                                       ZK_RP.PALDO:={? ~_bez || '' || __palkpl.LOK ?};
                                       ZK_RP.add(1);
                                       _ilb:=_ilp;
                                       _ilp:=0
                                    || ZK_RP.PAL:={? ~_bez || __palkpl.KOD || __pozkpl.KTM ?};
                                       ZK_RP.TW:=__pozkpl.TW;
                                       ZK_RP.EANL:={? ~_bez || __palkpl.LOK || __pozkpl.NAZ ?};
                                       ZK_RP.MG:=BEER.ZK_N().MG;
                                       ZK_RP.W:='*';
                                       ZK_RP.ILR:=_ile;
                                       ZK_RP.PALDO:={? ~_bez || '' || __palkpl.LOK ?};
                                       ZK_RP.put(1);
                                       _ilb:=_ile;
                                       _ilp-=_ile
                                    ?};
                                    {? _ilb>0
                                    || _buf.clear();
                                       {? _buf.find_key($__zknrea.ref())
                                       || _buf.ILR+=_ilb;
                                          _buf.put(1)
                                       || _buf.blank();
                                          _buf.ZKN:=$__zknrea.ref();
                                          _buf.ILR:=_ilb;
                                          _buf.add(1)
                                       ?}
                                    ?}
                                 ?};
                                 ZK_RP.cntx_pop()
                              ?};
                              _ilp>0 & __zknrea.next()
                           !}
                        ?};
                        __pozkpl.next()
                     !}
                  ?}
               || _bez:=__palkpl.BEZ;
                  _magmws:=ZK_N.MG().MWS='T' & ~ZK_N.MG().W_ALL;
                  _domlok:={? _magmws || ZK_N.MG().EANL || null() ?};
                  {? EANX.DOK=null() || EANX.DOK:=_domlok ?};
                  EANP.cntx_psh();
                  {? ~_bez
                  || _lp+=1;
                     _eanl:=exec('lokaldok','magazyn_stan',__palkpl.LOK,_domlok);
                     EANP.clear();
                     EANP.blank();
                     EANP.EANN:=EANN.ref();
                     EANP.NRC:=EANN.NRC;
                     EANP.LOKZ:={? _magmws || EANX.DOK || _eanl ?};
                     EANP.LOKDO:={? _magmws || _eanl || null ?};
                     EANP.LP:=_lp;
                     EANP.RSQL:='';
                     EANP.IL:=1;
                     EANP.PAL:=exec('FindInSet','#table','PAL','PAL',__palkpl.KOD,__palkpl.KOD);
                     EANP.PALEAN:=EANP.PAL().KODK;
                     EANP.EAN:=EANP.PAL().KODK;
                     EANP.M:=null;
                     EANP.ZPALET:=1;
                     EANP.ROZPAL:=0;
                     exec('uzupIDkod','magdok_palety',EANP);
                     {? EANP.add()
                     || EANP.UNIK:=(($EANP.EANN)+8)+(form(8+$EANP.ref())+3)+($EANP.ref()+8);
                        EANP.put()
                     ?};
                     {? EANP.PAL<>null & 'ZW'*EANP.EANN().TYP || exec('znacznik','magdok_palety',EANP.PAL) ?}
                  || _ileroz:=__palkpl.ILW;
                     __pozkpl.clear();
                     __pozkpl.prefix($__palkpl.ref());
                     {? __pozkpl.first()
                     || {!
                        |? {? __pozkpl.ILE>=_ileroz
                           || _lp+=1;
                              _eanl:=exec('lokaldok','magazyn_stan',__pozkpl.NAZ,_domlok);
                              EANP.clear();
                              EANP.blank();
                              EANP.EANN:=EANN.ref();
                              EANP.NRC:=EANN.NRC;
                              EANP.LOKZ:={? _magmws || EANX.DOK || _eanl ?};
                              EANP.LOKDO:={? _magmws || _eanl || null ?};
                              EANP.LP:=_lp;
                              EANP.RSQL:='';
                              EANP.IL:=_ileroz;
                              EANP.PAL:=exec('FindInSet','#table','PAL','PAL',__pozkpl.KTM,__pozkpl.KTM);
                              EANP.PALEAN:=EANP.PAL().KODK;
                              EANP.PALDO:=exec('FindInSet','#table','PAL','PAL',__palkpl.LOK,__palkpl.LOK);
                              EANP.PALDOEAN:=EANP.PALDO().KODK;
                              EANP.M:=exec('FindAndGet','#table',M,__pozkpl.M,,,null());
                              EANP.EAN:=EANP.M().KODK;
                              EANP.ZPALET:=2;
                              EANP.BEZOZN:=EANP.PALDO().BEZOZN;
                              EANP.TYMCZAS:={? (1+EANP.BEZOZN)='T' || EANP.PALDOEAN || '' ?};
                              EANP.ROZPAL:=1;
                              exec('uzupIDkod','magdok_palety',EANP);
                              {? EANP.add()
                              || EANP.UNIK:=(($EANP.EANN)+8)+(form(8+$EANP.ref())+3)+($EANP.ref()+8);
                                 EANP.put()
                              ?};
                              {? EANP.PAL<>null & 'ZW'*EANP.EANN().TYP
                              || exec('znacznik','magdok_palety',EANP.PAL)
                              ?};
                              {? EANP.PALDO<>null & 'ZW'*EANP.EANN().TYP
                              || exec('znacznik','magdok_palety',EANP.PALDO)
                              ?};
                              _ileroz:=0
                           |? __pozkpl.ILE>0
                           || _lp+=1;
                              _eanl:=exec('lokaldok','magazyn_stan',__pozkpl.NAZ,_domlok);
                              EANP.clear();
                              EANP.blank();
                              EANP.EANN:=EANN.ref();
                              EANP.NRC:=EANN.NRC;
                              EANP.LOKZ:={? _magmws || EANX.DOK || _eanl ?};
                              EANP.LOKDO:={? _magmws || _eanl || null ?};
                              EANP.LP:=_lp;
                              EANP.RSQL:='';
                              EANP.IL:=__pozkpl.ILE;
                              EANP.PAL:=exec('FindInSet','#table','PAL','PAL',__pozkpl.KTM,__pozkpl.KTM);
                              EANP.PALEAN:=EANP.PAL().KODK;
                              EANP.PALDO:=exec('FindInSet','#table','PAL','PAL',__palkpl.LOK,__palkpl.LOK);
                              EANP.PALDOEAN:=EANP.PALDO().KODK;
                              EANP.M:=exec('FindAndGet','#table','M',__pozkpl.M,,,null());
                              EANP.EAN:=EANP.M().KODK;
                              EANP.ZPALET:=2;
                              EANP.BEZOZN:=EANP.PALDO().BEZOZN;
                              EANP.TYMCZAS:={? (1+EANP.BEZOZN)='T' || EANP.PALDOEAN || '' ?};
                              EANP.ROZPAL:=1;
                              exec('uzupIDkod','magdok_palety',EANP);
                              {? EANP.add()
                              || EANP.UNIK:=(($EANP.EANN)+8)+(form(8+$EANP.ref())+3)+($EANP.ref()+8);
                                 EANP.put()
                              ?};
                              {? EANP.PAL<>null & 'ZW'*EANP.EANN().TYP
                              || exec('znacznik','magdok_palety',EANP.PAL)
                              ?};
                              {? EANP.PALDO<>null & 'ZW'*EANP.EANN().TYP
                              || exec('znacznik','magdok_palety',EANP.PALDO)
                              ?};
                              _ileroz-=__pozkpl.ILE
                           ?};
                           _ileroz>0 & __pozkpl.next()
                        !}
                     ?}
                  ?};
                  EANN.clear();
                  {? EANN.seek(EANP.EANN)
                  || {? (+EANN.RODZ)=1 || EANN.RODZ+='P' ?};
                     EANN.STAN:='O';
                     EANN.ILP:=exec('addilp','magazyn_mob',EANN.ref());
                     _refeann:=$EANN.ref();
                     EANN.put(1)
                  ?};
                  EANP.cntx_pop()
               ?}
            ?};
            __palkpl.next()
         !}
      ?};
      __zknrea.ndx_drop(_ndx);
      __zknrea.cntx_pop();
      obj_del(_buf)
   ?}
|| {? _wyn<>-1 || _wyn:=0 ?}
?};
{? var_pres('__dostpal')>0
|| _magdost:=(1+BEER.ZK_N().MG().TYP)='D';
   __dostpal.clear();
   {? __dostpal.first() || {! |? __dostpal.del() !} ?};
   __palkpl.clear();
   {? __palkpl.first()
   || {!
      |? {? __palkpl.WYB
         || _bez:=__palkpl.BEZ;
            {? ~_bez
            || __pozkpl.clear();
               __pozkpl.prefix($__palkpl.ref());
               {? __pozkpl.first()
               || {!
                  |? __dostpal.clear();
                     __dostpal.blank();
                     __dostpal.PAL:=__palkpl.SQL;
                     __dostpal.LOK:=__palkpl.LOK;
                     __dostpal.M:=__pozkpl.M;
                     __dostpal.ILR:=__pozkpl.ILE;
                     __dostpal.ILP:=__pozkpl.ILE;
                     __dostpal.RDK:=__pozkpl.RDK;
                     __dostpal.NDK:=__pozkpl.NDK;
                     __dostpal.KOD:=__palkpl.KOD;
                     __dostpal.TW:=__pozkpl.TW;
                     __dostpal.PALDO:='';
                     __dostpal.POZ:=__pozkpl.POZ;
                     __dostpal.add(1);
                     __pozkpl.next()
                  !}
               ?}
            || _ileroz:=__palkpl.ILW;
               __pozkpl.clear();
               __pozkpl.prefix($__palkpl.ref());
               {? __pozkpl.first()
               || {!
                  |? {? __pozkpl.ILE>=_ileroz & {? _magdost || __pozkpl.RDK || 1 ?}
                     || __dostpal.clear();
                        __dostpal.blank();
                        __dostpal.PAL:=__pozkpl.PQL;
                        __dostpal.LOK:=__pozkpl.NAZ;
                        __dostpal.M:=__pozkpl.M;
                        __dostpal.ILR:=_ileroz;
                        __dostpal.ILP:=_ileroz;
                        __dostpal.RDK:=__pozkpl.RDK;
                        __dostpal.NDK:=__pozkpl.NDK;
                        __dostpal.KOD:=__pozkpl.KTM;
                        __dostpal.TW:=__pozkpl.TW;
                        __dostpal.PALDO:=__palkpl.PQL;
                        __dostpal.POZ:=__pozkpl.POZ;
                        __dostpal.add(1);
                        _ileroz:=0
                     |? __pozkpl.ILE>0 & {? _magdost || __pozkpl.RDK || 1 ?}
                     || __dostpal.clear();
                        __dostpal.blank();
                        __dostpal.PAL:=__pozkpl.PQL;
                        __dostpal.LOK:=__pozkpl.NAZ;
                        __dostpal.M:=__pozkpl.M;
                        __dostpal.ILR:=__pozkpl.ILE;
                        __dostpal.ILP:=__pozkpl.ILE;
                        __dostpal.RDK:=__pozkpl.RDK;
                        __dostpal.NDK:=__pozkpl.NDK;
                        __dostpal.KOD:=__pozkpl.KTM;
                        __dostpal.TW:=__pozkpl.TW;
                        __dostpal.PALDO:=__palkpl.PQL;
                        __dostpal.POZ:=__pozkpl.POZ;
                        __dostpal.add(1);
                        _ileroz-=__pozkpl.ILE
                     ?};
                     _ileroz>0 & __pozkpl.next()
                  !}
               ?}
            ?}
         ?};
         __palkpl.next()
      !}
   ?}
?};
__pozkpl.dnd_sel(_win_sep,,'records.#poz_zknsel',"");
VAR_DEL.delete('__palkpl','__pozkpl','__zrekpl','__palki1','__palki2','__dkc');
_wyn


\wybzkkpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wybor palety na __palkpl
::   WE: _a - 1-wybor 0-rezygnacja z wyboru
::       [_b] - bez pytania-1, 0-z pytaniem (domyslnie), -1-bez pytania z pojedynczym wyborem
::  OLD: \wybzkkpl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

_onesel:=_b=-1;
__zrekpl.cntx_psh();
{? _a=1
|| {? ~_onesel
   || _wyd:=0;
      _kpl:=0;
      _tab:=__palkpl.sel_aget();
      __palkpl.sel_adel()
   ?};
   __palkpl.cntx_psh();
   {? ~_onesel & _tab.size()
   || {? _tab.first()
      || {!
         |? __palkpl.clear();
            {? __palkpl.seek(_tab.REF,)
            || _wyd+=__palkpl.WYD<>'N';
               _kpl+=__palkpl.KPL<>'N'
            ?};
            _tab.next()
         !}
      ?};
      {? _tab.first()
       & (_b | FUN.ask('Czy realizacja wybranymi paletami?'@+
                {? _wyd || '\nUwaga. Wśród zaznaczonych palet są palety na dokumentach wydania.'@ || '' ?}+
                {? _kpl || '\nUwaga. Wśród zaznaczonych palet są palety na kompletacji wysyłki.'@ || '' ?}))
      || {!
         |? {!
            |? {? (__palkpl.clear(); __palkpl.seek(_tab.REF,)) & ~__palkpl.BEZ & ~__palkpl.WYB & ~__palkpl.BLK
               || __palkpl.WYB:=1;
                  __palkpl.BLK:=0;
                  {? __palkpl.put(1)
                  || __pozkpl.clear();
                     __pozkpl.prefix($__palkpl.ref());
                     {? __pozkpl.first()
                     || {!
                        |? __zrekpl.clear();
                           __zrekpl.prefix(BEER.AKTZKN);
                           {? __zrekpl.find_key(__pozkpl.KTM,__pozkpl.KTM)
                           || __zrekpl.ILW+=__pozkpl.ILE;
                              __zrekpl.put(1);
                              {? __zrekpl.ILR<(__zrekpl.ILW+__zrekpl.ROZ)
                              || exec('onerozpa','zamsiw_palety',__zrekpl.KTM,__zrekpl.ILR-__zrekpl.ILW)
                              || exec('onerozpa','zamsiw_palety',__zrekpl.KTM,__zrekpl.ROZ)
                              ?};
                              __zrekpl.ILP:=__zrekpl.ILR-__zrekpl.ILW-__zrekpl.ROZ;
                              __zrekpl.put(1)
                           ?};
                           __pozkpl.next()
                        !}
                     ?}
                  ?};
                  exec('blkzkkpl','zamsiw_palety')
               ?};
               _tab.next()
            !}
         !}
      ?}
   || {? __palkpl.BEZ
      || FUN.info('Pozycja do rozpakowania.\nZostała już wybrana.'@);
         0
      |? __palkpl.WYB
      || {? ~_b || FUN.info('Wybrano już paletę.'@) ?};
         0
      |? __palkpl.BLK
      || {? ~_b
         || FUN.info('Paleta jest wykluczona z wyboru\n(Zbyt duża ilość towarów na palecie od ilości do realizacji).'@)
         ?};
         0
      |? fabs(_b) | FUN.ask('Czy realizacja wybraną paletą?'@+
                     {? __palkpl.WYD<>'N' || '\nUwaga. Paleta na dokumencie wydania.'@ || '' ?}+
                     {? __palkpl.KPL<>'N' || '\nUwaga. Paleta na kompletacji wysyłki.'@ || '' ?})
      || __palkpl.WYB:=1;
         __palkpl.BLK:=0;
         {? __palkpl.put(1)
         || __pozkpl.clear();
            __pozkpl.prefix($__palkpl.ref());
            {? __pozkpl.first()
            || {!
               |? __zrekpl.clear();
                  __zrekpl.prefix(BEER.AKTZKN);
                  {? __zrekpl.find_key(__pozkpl.KTM,__pozkpl.KTM)
                  || __zrekpl.ILW+=__pozkpl.ILE;
                     __zrekpl.put(1);
                     {? __zrekpl.ILR<(__zrekpl.ILW+__zrekpl.ROZ)
                     || exec('onerozpa','zamsiw_palety',__zrekpl.KTM,__zrekpl.ILR-__zrekpl.ILW)
                     || exec('onerozpa','zamsiw_palety',__zrekpl.KTM,__zrekpl.ROZ)
                     ?};
                     __zrekpl.ILP:=__zrekpl.ILR-__zrekpl.ILW-__zrekpl.ROZ;
                     __zrekpl.put(1)
                  ?};
                  __pozkpl.next()
               !}
            ?}
         ?};
         exec('blkzkkpl','zamsiw_palety')
      ?}
   ?};
   __palkpl.cntx_pop()
|| _tab:=__palkpl.sel_aget();
   __palkpl.sel_adel();
   __palkpl.cntx_psh();
   {? _tab.size()
   || {? _tab.first() & FUN.ask('Czy rezygnacja z realizacji wybranymi paletami?'@)
      || {!
         |? {!
            |? {? (__palkpl.clear(); __palkpl.seek(_tab.REF,)) & ~__palkpl.BEZ & __palkpl.WYB
               || __palkpl.WYB:=0;
                  __palkpl.BLK:=0;
                  {? __palkpl.put(1)
                  || __pozkpl.clear();
                     __pozkpl.prefix($__palkpl.ref());
                     {? __pozkpl.first()
                     || {!
                        |? __zrekpl.clear();
                           __zrekpl.prefix(BEER.AKTZKN);
                           {? __zrekpl.find_key(__pozkpl.KTM,__pozkpl.KTM)
                           || __zrekpl.ILW-=__pozkpl.ILE;
                              __zrekpl.put(1);
                              {? __zrekpl.ILR<(__zrekpl.ILW+__zrekpl.ROZ)
                              || exec('onerozpa','zamsiw_palety',__zrekpl.KTM,__zrekpl.ILR-__zrekpl.ILW)
                              || exec('onerozpa','zamsiw_palety',__zrekpl.KTM,__zrekpl.ROZ)
                              ?};
                              __zrekpl.ILP:=__zrekpl.ILR-__zrekpl.ILW-__zrekpl.ROZ;
                              __zrekpl.put(1)
                           ?};
                           __pozkpl.next()
                        !}
                     ?}
                  ?};
                  exec('blkzkkpl','zamsiw_palety')
               ?};
               _tab.next()
            !}
         !}
      ?}
   || {? __palkpl.BEZ
      || FUN.info('Pozycja do rozpakowania.'@);
         0
      |? ~__palkpl.WYB
      || FUN.info('Paleta nie jest wybrana.'@);
         0
      |? _b | FUN.ask('Czy zrezygnować z realizacji daną paletą?'@)
      || __palkpl.WYB:=0;
         __palkpl.BLK:=0;
         {? __palkpl.put(1)
         || __pozkpl.clear();
            __pozkpl.prefix($__palkpl.ref());
            {? __pozkpl.first()
            || {!
               |? __zrekpl.clear();
                  __zrekpl.prefix(BEER.AKTZKN);
                  {? __zrekpl.find_key(__pozkpl.KTM,__pozkpl.KTM)
                  || __zrekpl.ILW-=__pozkpl.ILE;
                     __zrekpl.put(1);
                     {? __zrekpl.ILR<(__zrekpl.ILW+__zrekpl.ROZ)
                     || exec('onerozpa','zamsiw_palety',__zrekpl.KTM,__zrekpl.ILR-__zrekpl.ILW)
                     || exec('onerozpa','zamsiw_palety',__zrekpl.KTM,__zrekpl.ROZ)
                     ?};
                     __zrekpl.ILP:=__zrekpl.ILR-__zrekpl.ILW-__zrekpl.ROZ;
                     __zrekpl.put(1)
                  ?};
                  __pozkpl.next()
               !}
            ?}
         ?};
         exec('blkzkkpl','zamsiw_palety')
      ?}
   ?};
   __palkpl.cntx_pop()
?};
__zrekpl.cntx_pop()


\blkzkkpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: blokuje/odblokowuje palety jesli jest na nich za duzo towaru w stosunku do realizacji
::  OLD: \blkzkkpl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
__palkpl.cntx_psh();
__pozkpl.cntx_psh();
__zrekpl.cntx_psh();
__palkpl.clear();
{? __palkpl.first()
|| {!
   |? {? ~__palkpl.BEZ & ((~__palkpl.WYB & ~__palkpl.BLK) | __palkpl.BLK)
      || _blk:=0;
         _buf:=tab_tmp(2,'KTM','STRING[50]',''
                ,'KT2','STRING[50]',''
                ,'ILE','REAL','');
         __pozkpl.clear();
         __pozkpl.prefix($__palkpl.ref());
         {? __pozkpl.first()
         || {!
            |? {? __pozkpl.ILE>0
               || _buf.clear();
                  {? _buf.find_key(__pozkpl.KTM,__pozkpl.KTM)
                  || _buf.ILE+=__pozkpl.ILE;
                     _buf.put(1)
                  || _buf.blank();
                     _buf.KTM:=_buf.KT2:=__pozkpl.KTM;
                     _buf.ILE:=__pozkpl.ILE;
                     _buf.add(1)
                  ?}
               ?};
               __pozkpl.next()
            !}
         ?};
         _buf.clear();
         {? _buf.first()
         || {!
            |? __zrekpl.clear();
               __zrekpl.prefix(BEER.AKTZKN);
               {? __zrekpl.find_key(_buf.KTM,_buf.KTM)
               || _blk:=_buf.ILE>(__zrekpl.ILP+__zrekpl.ROZ)
               || _blk:=1
               ?};
               ~_blk & _buf.next()
            !}
         ?};
         obj_del(_buf);
         __palkpl.BLK:=_blk;
         __palkpl.put(1)
      ?};
      __palkpl.next()
   !}
?};
__palkpl.cntx_pop();
__pozkpl.cntx_pop();
__zrekpl.cntx_pop();
~~


\auto_wyb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: automatyczny wybor palet
::  OLD: \auto_wyb/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
($BEER.ZK_N().MG().FPAL().FORMULA)()


\rozzkkpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: dodaje pozycje z rozpakowania
::   WE: [_a] 1-automat 0-nie (domyslnie)
::  OLD: \rozzkkpl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

{? exec('isRealPAL','zamsiw_palety')
|| _menu_pth:=BEER.MENU_PTH;
   BEER.MENU_PTH:='ZZ';
   VAR_DEL.delete('__rozpal');
   __rozpal:=tab_tmp(2,'KTM','STRING[50]',''
              ,'KT2','STRING[50]',''
              ,'NAZ','STRING[100]',''
              ,'ILP','REAL',''
              ,'ILR','REAL',''
              ,'JM','STRING[10]',''
              ,'KOD','STRING[30]',''
              ,'PQL','STRING[16]','');

   __zrekpl.clear();
   {? __zrekpl.first()
   || {!
      |? {? (__zrekpl.ILP+__zrekpl.ROZ)>0
         || __rozpal.blank();
            __rozpal.KTM:=__zrekpl.KTM;
            __rozpal.KT2:=__zrekpl.KT2;
            __rozpal.NAZ:=__zrekpl.NAZ;
            __rozpal.ILP:=(__zrekpl.ILP+__zrekpl.ROZ);
            __rozpal.ILR:=exec('ilerozpa','zamsiw_palety',__zrekpl.KTM);
            __rozpal.JM:=__zrekpl.JM;
            __rozpal.add(1)
         ?};
         __zrekpl.next()
      !}
   ?};

   _win_sel:=__rozpal.mk_sel('Pozostałe pozycje do realizacji wg indeksów materiałowych'@,'P',,'#rea2zknsel',,,,,'U');
   __rozpal.win_fld(_win_sel,,'KTM',,,30,,1,'Indeks'@,,'Indeks materiałowy'@);
   __rozpal.win_fld(_win_sel,,'NAZ',,,30,,1,'Nazwa'@,,'Nazwa materiału'@);
   __rozpal.win_fld(_win_sel,,'ILP',,,12,2,1,'Pozostało'@,,'Ilość pozostała'@);
   __rozpal.win_fld(_win_sel,,'ILR',,,12,3,0,'Do realizacji'@,,'Ilość do realizacji'@);
   __rozpal.win_fld(_win_sel,,'JM',,,6,,1,'jm'@,,'Jednostka miary'@);
   __rozpal.win_fld(_win_sel,,'KOD',,,20,,1,'Na paletę'@);
   __rozpal.win_act(_win_sel,0,'Popraw',,,,,,1);
   __rozpal.win_act(_win_sel,0,'Formuła','&Akceptuj'@@,,,"exec('akcrozpa','zamsiw_palety')",,,,,,'A');
   __rozpal.win_act(_win_sel,0,'Formuła','&Nowa paleta'@@,,,"exec('newrozpa','zamsiw_palety')",,0,1
     ,"exec('newrozpa','zamsiw_palety')",,'N');
   __rozpal.win_act(_win_sel,0,'Rekord',,,,,"exec('chkrozpa','zamsiw_palety')");
   __rozpal.win_act(_win_sel,0,'Szukaj');
   __rozpal.win_act(_win_sel,0,'Kolejność');
   __rozpal.win_sel(_win_sel);

   __rozpal.clear();
   {? ~_a
   || {? __rozpal.select()
   || __rozpal.clear();
      {? __rozpal.first()
      || {!
         |? {? __rozpal.ILR>=0 & __rozpal.KOD<>''
            || exec('onerozpa','zamsiw_palety',__rozpal.KTM,__rozpal.ILR,__rozpal.KOD,__rozpal.PQL)
            ?};
            __rozpal.next()
         !}
      ?}
      ?}
   |? _a
   || exec('newrozpa','zamsiw_palety',1)
   ?};
   VAR_DEL.delete('__rozpal');
   BEER.MENU_PTH:=_menu_pth
|| FUN.info('Brak pozycji do rozpakowania.'@)
?};
~~


\ilerozpa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: ile zadeklarowano do realizacji
::   WE: _a - indeks materialowy KTM
::   WY: ilosc do realizacji
::  OLD: \ilerozpa/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
__palkpl.cntx_psh();
__palkpl.clear();
{? __palkpl.last()
|| {!
   |? {? __palkpl.KOD=('<'+_a+'>') & __palkpl.BEZ
      || _wyn:=__palkpl.ILW;
         0
      || __palkpl.prev()
      ?}
   !}
?};
__palkpl.cntx_pop();
_wyn


\akcrozpa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: akceptacja wprowadzonych danych
::  OLD: \akcrozpa/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_brakpal:=0;
:: sprawdzenie przypisania nowych palet
__rozpal.cntx_psh();
__rozpal.clear();
{? __rozpal.first()
|| {!
   |? _brakpal:=__rozpal.ILR>0 & __rozpal.KOD='';
      ~_brakpal & __rozpal.next()
   !}
?};
__rozpal.cntx_pop();
{? FUN.ask('Zatwiedzić pozostałe pozycje do realizacji zamówienia?'@+
    {? _brakpal || '\n\nUwaga. Pozycje bez przypisanych nowych palet zostaną pominięte.'@ || '' ?})
|| sel_exit()
?}


\newrozpa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przypisanie nowej palety dla pozycji rozpakowywanej
::   WE: [_a] - 1-tylko wybor palety 0-nie (domyslnie)
::  OLD: \newrozpa/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

{? ~_a
|| _tab:=__rozpal.sel_aget();
__rozpal.sel_adel();

PAL.cntx_psh();
PAL_POZ.cntx_psh();
__rozpal.cntx_psh();
_ok:=0;
:: sprawdzamy czy istnieja ilosci do wydania na zaznaczonych pozycjach
{? _tab.first()
|| {!
   |? {? (__rozpal.clear(); __rozpal.seek(_tab.REF,)) || _ok:=__rozpal.ILR>0 ?};
      ~_ok & _tab.next()
   !}
|| _ok:=__rozpal.ILR>0
   ?}
|| _ok:=1
?};

{? _ok
|| {? {? ~_a || FUN.ask('Czy przypisać nową paletę do zaznaczonych pozycji?'@) || 1 ?}
   || _paln:={? BEER.ZK_N().MG<>null() & exec('wewNOPAL','zamsiw_palety',BEER.ZK_N)
             || exec('FindInSet','#table','PAL','NOPAL',BEER.ZK_N().MG,'B',,,,null())
             || null()
             ?};
      {? _paln<>null()
      || _newpal:=exec('FindInSet','#table','PAL','NOPAL',BEER.ZK_N().MG,'B',"@.PAL.KODK",,,null());
         _pql:=$_paln
      || PAL.win_sel('SLO');
         PAL.index('STAN');
         PAL.prefix(ST.ODDZ,'T','B');
         _newpal:={? PAL.select() || _pql:=$PAL.ref(); PAL.KODK || _pql:=''; '' ?}
      ?};
      {? _newpal=''
      || FUN.info('Nie podano nowej palety dla wydania.\nPrzypisanie nowej palety niemożliwe.'@);
         0
      || {? ~_a
      || {? _tab.first()
         || {!
            |? {? (__rozpal.clear(); __rozpal.seek(_tab.REF,))
               || __rozpal.KOD:=_newpal;
                  __rozpal.PQL:=_pql;
                  __rozpal.put(1)
               ?};
               _tab.next()
            !}
         || __rozpal.KOD:=_newpal;
            __rozpal.PQL:=_pql;
            __rozpal.put(1)
         ?}
         || __rozpal.clear();
            {? __rozpal.first()
            || {!
               |? __rozpal.KOD:=_newpal;
                  __rozpal.PQL:=_pql;
                  __rozpal.ILR:=__rozpal.ILP;
                  __rozpal.put(1);
                  {? __rozpal.ILR>=0 & __rozpal.KOD<>''
                  || exec('onerozpa','zamsiw_palety',__rozpal.KTM,__rozpal.ILR,__rozpal.KOD,__rozpal.PQL,1)
                  ?};
                  __rozpal.next()
               !}
            ?}
         ?}
      ?}
   ?}
|| FUN.info('Wśród zanaczonych pozycji brak pozycji do realizacji.\nPrzypisanie nowej palety niemożliwe.'@);
   0
?};
{? ~_a
|| PAL.cntx_pop();
   PAL_POZ.cntx_pop();
   __rozpal.cntx_pop()
?};
~~


\onerozpa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: dodaje jedna pozycje o statusie rozpakowania
::   WE: _a - indeks
::       _b - ilosc
::       [_c] - nowa paleta
::       [_d] - ref SQL nowej palety
::       [_e] - auto rozpakowanie 1, 0-nie (domyslnie), 2-auto rozpakowanie eKiosk
::       [_f] - kod rozpakowywanej palety
::  OLD: \onerozpa/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>2 || _c:='' ?} || _c:='' ?};
{? _>=4 || {? type_of(_d)<>2 || _d:='' ?} || _d:='' ?};
_auto:={? var_pres('_e')=type_of(0) || _e || 0 ?};
_pkod:={? var_pres('_f')=type_of('') || _f || '' ?};
_ekiosk:=_auto=2;
_auto:=_auto>0;
_rozp:=_b;

_ok:=0;
_mat:=exec('FindInSet','#table','M','MATKTM',_a,_a);
__palkpl.clear();
{? __palkpl.find_key(BEER.AKTZKN,0,'<'+_a+'>',$_mat)
|| {? _b<=0
   || __palkpl.del()
   || __palkpl.ILW:={? _ekiosk || __palkpl.ILW+_b || _b ?};
      __palkpl.AUR:=_auto;
      {? _c<>''
      || __palkpl.LOK:=_c;
         __palkpl.PQL:=_d
      ?};
      _ok:=__palkpl.put(1)
   ?}
|? _b>0
|| __palkpl.blank();
   __palkpl.ZKN:=BEER.AKTZKN;
   __palkpl.LP:=0;
   __palkpl.KOD:='<'+_a+'>';
   __palkpl.SQL:=$_mat;
   __palkpl.LOK:=_c;
   __palkpl.WYB:=1;
   __palkpl.BLK:=0;
   __palkpl.WYD:='N';
   __palkpl.KPL:='N';
   __palkpl.BEZ:=1;
   __palkpl.ILW:=_b;
   __palkpl.PQL:=_d;
   __palkpl.AUR:=_auto;
   __palkpl.KTM:=_a;
   _ok:=__palkpl.add(1)
?};
{? _ok
||
:: usuniecie poprzednich zapisow
   __pozkpl.clear();
   __pozkpl.prefix($__palkpl.ref());
   {? __pozkpl.first()
   || {!
      |? {? ~_ekiosk
         || __pozkpl.del()
         || {? _f<>'' & __pozkpl.KTM=_f
            || _rozp+=__pozkpl.ROZ;
               __pozkpl.del()
            || __pozkpl.next()
            ?}
         ?}
      !}
   ?};
   _sapoz:=0;
   _nrk:=0;
:: generacja nowych zapisow na podstawie pozycji palet
   PAL_POZ.use('paletyp');
   PAL_POZ.index('POZKTM');
   PAL_POZ.prefix(_mat,ZK_N.MG);
   {? PAL_POZ.first()
   || {!
      |? {? PAL_POZ.PAL().STAN<>'B' & (_ekiosk | exec('czyniewy','magdok_palety',PAL_POZ.PAL().KODK,$PAL_POZ.PAL))
          & exec('FindInSet','#table','SL','PAL',PAL_POZ.PAL,ZK_N.MG)<>null
::          & PAL_POZ.PAL().W='N'
          & exec('czynakpl','magdok_palety',PAL_POZ.PAL)='N'
          & PAL_POZ.ILP>0
          & (_pkod='' | PAL_POZ.PAL().KODK=_pkod)
         || __pozkpl.clear();
            __pozkpl.blank();
            __pozkpl.SQL:=$__palkpl.ref();
            __pozkpl.KTM:=PAL_POZ.PAL().KODK;
            __pozkpl.NAZ:=exec('FindInSet','#table','SL','PAL',PAL_POZ.PAL,ZK_N.MG,"SL.EANL().KOD",,,'');
            __pozkpl.ILE:=PAL_POZ.ILP;
            __pozkpl.JM:=PAL_POZ.JM().KOD;
            __pozkpl.CEN:=PAL_POZ.C;
            __pozkpl.TW:=PAL_POZ.TW;
            {? PAL_POZ.SCSQL<>''
            || _dost:=(8+PAL_POZ.SCSQL)+form(BB.sqlint(PAL_POZ.SCSQL),-8,0,'99')
            || _dost:=exec('last_dst','magdok_palety',PAL_POZ.M,PAL_POZ.PAL,PAL_POZ.C,PAL_POZ.DK_C,PAL_POZ.IL)
            ?};
            __pozkpl.RDK:=#form(8-_dost);
            __pozkpl.NDK:=form(8+_dost);
            _tab:=exec('aktrdndk','magdok_palety',ZK_N.MG,__pozkpl.RDK,__pozkpl.NDK,PAL_POZ.PAL);
            __pozkpl.RDK:=_tab[1];
            __pozkpl.NDK:=_tab[2];
            obj_del(_tab);
            __pozkpl.M:=$PAL_POZ.M;
            __pozkpl.PQL:=$PAL_POZ.PAL;
            __pozkpl.POZ:=$PAL_POZ.ref();
            __pozkpl.ILW:=PAL_POZ.IL;
            __pozkpl.DKC:=exec('czyp_dkc','magdok_palety',$PAL_POZ.M,PAL_POZ.DK_C,PAL_POZ.ILP,__dkc);
            __pozkpl.SDK:={? PAL_POZ.DK_C<>null() || PAL_POZ.DK_C().SYM || '' ?};
            _nrk+=1;
            __pozkpl.NRK:=_nrk;
            __pozkpl.ROZ:=_rozp;
            __pozkpl.WYB:=exec('isselPozPal','zamsiw_palety',__pozkpl.PQL);
            {? __pozkpl.DKC='A' & __pozkpl.add(1) || _sapoz+=1 ?}
         ?};
         PAL_POZ.next()
      !}
   ?};
   {? ~_sapoz
   || _ok:=0;
      __palkpl.del();
      FUN.info('Aktualnie brak palet, które można rozpakować\ndla indeksu: %1.'@[_a])
   || {? _auto || exec('auto_roz','zamsiw_palety') ?}
   ?}
?};
{? _ok
|| __zrekpl.clear();
   __zrekpl.prefix(BEER.AKTZKN);
   {? __zrekpl.find_key(_a,_a)
   || __zrekpl.ROZ:={? _b<=0 || 0 || {? ~_ekiosk || _b || _b+__zrekpl.ROZ ?} ?};
      __zrekpl.ILP:=__zrekpl.ILR-__zrekpl.ILW-__zrekpl.ROZ;
      __zrekpl.put(1)
   ?}
?}


\auto_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: automatyczny rozpakowuje pozostale ilosci i zaznacza znacznik automatycznego rozpakowania
::  OLD: \auto_roz/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
($BEER.ZK_N().MG().FROZ().FORMULA)()


\chkrozpa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdzenie poprawnosci wprowadzonych danych
::   WY: ''-OK lub kod komorki
::  OLD: \chkrozpa/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? __rozpal.ILR<0
|| FUN.info('Ilość do realizacji powinna być liczbą większą lub równą zero.'@);
   _wyn:='ILR'
|? __rozpal.ILR>__rozpal.ILP
|| FUN.info('Ilość do realizacji nie może być większa od ilości pozostałej.'@);
   _wyn:='ILR'
?};
_wyn


\tab_nkpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zwraca definicje tablicy palet do kompletacji i realizacji wg palet
::   WY: definicja tabeli
::  OLD: \tab_nkpl/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=tab_tmp(4,'ZKN','STRING[16]',''
        ,'LP','INTEGER',''
        ,'KOD','STRING[60]',''
        ,'SQL','STRING[16]',''
        ,'LOK','STRING[30]',''
        ,'WYB','INTEGER',''
        ,'BLK','INTEGER',''
        ,'WYD','STRING[1]',''
        ,'KPL','STRING[1]',''
        ,'BEZ','INTEGER',''
        ,'ILW','REAL',''
        ,'PQL','STRING[16]',''
        ,'AUR','INTEGER',''
        ,'KTM','STRING[50]','');
_wyn


\tab_pkpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zwraca definicje tablicy pozycji do kompletacji i realizacji wg palet
::   WY: definicja tabeli
::  OLD: \tab_pkpl/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=tab_tmp(3,'SQL','STRING[16]',''
        ,'WYB','STRING[1]',''
        ,'NRK','INTEGER',''
        ,'KTM','STRING[50]',''
        ,'NAZ','STRING[100]',''
        ,'ILE','REAL',''
        ,'JM','STRING[10]',''
        ,'CEN','REAL',''
        ,'TW','DATE',''
        ,'RDK','INTEGER',''
        ,'NDK','STRING[16]',''
        ,'M','STRING[16]',''
        ,'PQL','STRING[16]',''
        ,'POZ','STRING[16]',''
        ,'ILW','REAL',''
        ,'DKC','STRING[1]',''
        ,'SDK','STRING[20]','Symbol cechy'
        ,'ROZ','REAL','ekiosk rozpakowanie');
_wyn


\tab_zkpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zwraca definicje tablicy wybranych realizacji do kompletacji i realizacji wg palet
::   WY: definicja tabeli
::  OLD: \tab_zkpl/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=tab_tmp(3,'ZKN','STRING[16]',''
        ,'KTM','STRING[50]',''
        ,'KT2','STRING[50]',''
        ,'NAZ','STRING[100]',''
        ,'ILR','REAL',''
        ,'ILW','REAL',''
        ,'ILP','REAL',''
        ,'ROZ','REAL',''
        ,'JM','STRING[10]','');
_wyn


\akczkkpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: akceptakcja wyboru palet na __palkpl
::   WE: [_a] - wybor palet do zablokowania-2, domyslnie nie-0
::  OLD: \akczkkpl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Akceptacja realizacji wskazanymi paletami?'@) || sel_exit() || 1 ?}


\rekzkkpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: podswietlenie reokrdu dla __palkpl
::  OLD: \rekzkkpl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? __palkpl.WYB
|| {? ~__palkpl.BEZ
   || '__palkpl#01#01'
   || '__palkpl#01#03'
   ?}
|? __palkpl.BLK
|| '__palkpl#01#02'
|| ''
?}


\ilw_wpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wyswietlenie/wygaszenie pola ilosc do wydania
::  OLD: \ilw_wpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? __palkpl.BEZ
|| 1
|| 0
?}


\renumroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: renumeracja zaznaczenia
::   WE: [_a] - ''(domyślnie) - drag&drop, 'U','D','N'-akcja do przenumerowania
::  OLD: \renumroz/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (';UDN'*_a)>1 || _a || '' ?};

__pozkpl.cntx_psh();
_ind:=__pozkpl.ndx_tmp('',0,'NRK',,0,'SQL',,0);
{? _tryb=''
|| _ref:=dnd_info('dest_record');
   {? __pozkpl.seek(_ref) || exec('zmien_lp','#dragdrop','NRK',_ind) ?}
|| exec('zmien_lpa','#dragdrop','NRK',_ind,,,_tryb)
?};
__pozkpl.ndx_drop(_ind);
__pozkpl.cntx_pop()


\rezzkkpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: podswietlenie reokrdu dla __zrekpl
::  OLD: \rezzkkpl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? __zrekpl.ILW>0
|| '__zrekpl#01#01'
|| ''
?}


\reawgpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: dodatkowe okienko realizacji dla palet
::  OLD: \reawgpal/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
__palkpl:=exec('tab_nkpl','zamsiw_palety');
__pozkpl:=exec('tab_pkpl','zamsiw_palety');
__zrekpl:=exec('tab_zkpl','zamsiw_palety');
__palki1:=__palkpl.ndx_tmp('',0,'ZKN','',0,'LP',,0,'KOD',,0,'SQL',,0);
__palki2:=__palkpl.ndx_tmp('',0,'ZKN','',0,'KOD',,0,'SQL',,0);
{? ~exec('upr_cz','ceny') || __pozkpl.fld_fml('CEN','BEFORE_DISPLAY',"0") ?};

:: definiowanie okienek selekcji i okienka grupowego do wyboru

_win_sek:=__palkpl.mk_sel('Palety wg pozycji realizowanych zamówień'@,'N',,'#pal_zknsel',,,,,'U');
__palkpl.win_fld(_win_sek,,'KOD',,,12,,1,'Paleta'@);
__palkpl.win_fld(_win_sek,,'LOK',,,12,,1,'Lokalizacja'@);
__palkpl.win_fld(_win_sek,,'KTM',,,20,,1,'Indeks'@);
__palkpl.win_fld(_win_sek,,'WYD',,,-3,,1,'W wydaniu'@,,,2,,"'T'","'N'","'W'");
__palkpl.win_fld(_win_sek,,'KPL',,,-3,,1,'Na urządzeniu mobilnym'@,,,2,,"'T'","'N'","'W'");
__palkpl.win_fld(_win_sek,,'ILW',,,9,3,1,'Do wydania'@);
__palkpl.win_act(_win_sek,0,'Formuła','&Wybierz'@@,,,"exec('wybzkkpl','zamsiw_palety',1)",,1,1
   ,"exec('wybzkkpl','zamsiw_palety',1)",,'W');
__palkpl.win_act(_win_sek,0,'Formuła','&Zrezygnuj'@@,,,"exec('wybzkkpl','zamsiw_palety',0)",,,1
   ,"exec('wybzkkpl','zamsiw_palety',0)",,'Z');
__palkpl.win_act(_win_sek,0,'Formuła','&Akceptuj'@@,,,"exec('akczkkpl','zamsiw_palety')",,,,,,'A');
{? BEER.ZK_N().MG().FPAL<>null
|| __palkpl.win_act(_win_sek,0,'Formuła','Au&tomatyczny wybór'@@,,,"exec('auto_wyb','zamsiw_palety')",,,,,,'T')
?};
{? BEER.ZK_N().MG().FROZ<>null
|| __palkpl.win_act(_win_sek,0,'Formuła','Auto&matyczne rozpakowanie'@@,,,"exec('rozzkkpl','zamsiw_palety',1)",,,,,,'M');
   __palkpl.win_act(_win_sek,1,'Formuła','Auto&matyczne rozpakowanie'@@,,,"exec('rozzkkpl','zamsiw_palety',1)",,,,,,'M')
?};
__palkpl.win_act(_win_sek,1,'Formuła','&Dodaj z rozpakowania'@@,,,"exec('rozzkkpl','zamsiw_palety')",,1,,,,'D');
__palkpl.win_act(_win_sek,0,'Formuła','&Dodaj z rozpakowania'@@,,,"exec('rozzkkpl','zamsiw_palety')",,,,,,'D');
__palkpl.win_act(_win_sek,0,'Formuła','&Pozycje palety'@@,,,"exec('poz_pal','zamsiw_palety')",,,,,,'P');
__palkpl.win_act(_win_sek,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','__palkpl#01')",,,,,,'L');
__palkpl.win_act(_win_sek,0,'Rekord',,,,"exec('rekprzed','color','__palkpl#01')");
__palkpl.win_act(_win_sek,0,'Szukaj');
__palkpl.win_act(_win_sek,0,'Kolejność');
__palkpl.win_sel(_win_sek);

__palkpl.fld_fml('ILW','DISPLAY_FORMAT',"{? exec('ilw_wpal','zamsiw_palety')=0 || 'empty=1' || 'empty=0' ?}");

_win_sep:=__pozkpl.mk_sel('Pozycje palety'@,'N',,'#poz_zknsel',,,,,'U');
__pozkpl.win_fld(_win_sep,,'KTM',,,10,,1,'Indeks'@);
__pozkpl.win_fld(_win_sep,,'NAZ',,,10,,1,'Nazwa'@);
__pozkpl.win_fld(_win_sep,,'ILE',,,10,3,1,'Ilość'@);
__pozkpl.win_fld(_win_sep,,'JM',,,4,,1,'jm'@);
__pozkpl.win_fld(_win_sep,,'CEN',,,10,2,1,'Cena'@);
__pozkpl.win_fld(_win_sep,,'TW',,,-10,,1,'Termin ważności'@);
__pozkpl.win_act(_win_sep,0,'Menu','Przesu&ń'@@,,,,,,,,,'Ń');
__pozkpl.win_act(_win_sep,0,'Formuła','W &górę'@@,'Przesu&ń',,"exec('renumroz','zamsiw_palety','U')",,,1
          ,"exec('renumroz','zamsiw_palety','U')",,'G');
__pozkpl.win_act(_win_sep,0,'Formuła','W &dół'@@,'Przesu&ń',,"exec('renumroz','zamsiw_palety','D')",,,1
          ,"exec('renumroz','zamsiw_palety','D')",,'D');
__pozkpl.win_act(_win_sep,0,'Formuła','Do &numeru'@@,'Przesu&ń',,"exec('renumroz','zamsiw_palety','N')",,,1
          ,"exec('renumroz','zamsiw_palety','N')",,'N');
__pozkpl.win_act(_win_sep,0,'Szukaj');
__pozkpl.win_act(_win_sep,0,'Kolejność');
__pozkpl.win_act(_win_sep,0,'Wyświetl',,,,"exec('dispdkcp','magdok_palety',__pozkpl.POZ)");
__pozkpl.win_sel(_win_sep);

__pozkpl.dnd_sel(_win_sep,,'records.#poz_zknsel',"exec('renumroz','zamsiw_palety')");

_winsel:=__zkrwi2:=__zknrea.grp_make('Realizacja'@,,'#realgrpzap');

__zknrea.grp_sel(_winsel,__zknrea,__winzkr,,"exec('odsw_inf','zamsiw_rea')",,,20,,,,,'maximized_with_title');
__zknrea.grp_splt(_winsel,,'horizontal','rez');
__zknrea.grp_sel(_winsel,__filtrz,__winflt,,,,,8,"",,,,'maximized_with_title');
__zknrea.grp_splt(_winsel,'rez','vertical','mag');
__zknrea.grp_sel(_winsel,__palkpl,_win_sek,,"exec('aktzkkpl','zamsiw_palety',0)",,,8,"",,,,'maximized_with_title',,1);
:: __zknrea.grp_splt(_winsel,'mag','vertical','inf');
:: __zknrea.grp_sel(_winsel,__pozkpl,_win_sep,,,,,8,"",,,,'maximized_with_title');
__zknrea.win_sel(_winsel);
~~


\popzkrea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po funkcji popraw na rekordzie
::   WY: podswietla zaznaczone rekordy
::  OLD: \popzkrea/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? __zknrea.REA<0
|| FUN.info('Należy podać ilość nieujemną.\nWybór nie został zatwierdzony.'@);
   __zknrea.REA:=__zknrea.ILP;
   __zknrea.put(1)
|? __zknrea.REA>__zknrea.ILP
|| FUN.info('Podano zbyt dużą ilość.\nWybór nie został zatwierdzony.'@);
   __zknrea.REA:=__zknrea.ILP;
   __zknrea.put(1)
|| ZK_RP.cntx_psh();
   ZK_RP.prefix();
   {? ZK_RP.seek(__zknrea.REF)
   || _last:=ZK_RP.ILR;
      ZK_RP.ILR:=__zknrea.REA $ exec('jaka_dok_m','jm',ZK_RP.M);
      ZK_RP.put(1);
      _wyn:=exec('pop_real','zamsiw_rea',_last,__zknrea.ref());
      {? ~_wyn
      || ZK_RP.ILR:=__zknrea.REA:=_last;
         ZK_RP.put(1)
      ?}
   ?};
   ZK_RP.cntx_pop();
   {? __zknrea.REA>0 || __zknrea.WYB:='*' || __zknrea.WYB:='' ?};
   __zknrea.put(1)
?};
_wyn


\poz_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: pozycje palety
::----------------------------------------------------------------------------------------------------------------------
__pozkpl.clear();
__pozkpl.prefix($__palkpl.ref());
__pozkpl.first();
__pozkpl.select();
~~


\initRozpPAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: podpowiadanie palet do kompletacji wysyłki i rozpakowania
::   WE: [_a] - wskazanie na dyspozycję transportową lub brak
::----------------------------------------------------------------------------------------------------------------------
_tr_nzl:={? var_pres('_a')=type_of(null()) || _a || null() ?};
{? _tr_nzl<>null() & BEER.ZK_N().MG().PAL='T' || exec('roztrzlm','zamsiw_palety',_tr_nzl) ?};
{? BEER.ZK_N().MG().FPAL<>null || exec('auto_wyb','zamsiw_palety') ?};
{? BEER.ZK_N().MG().FROZ<>null & exec('isRealPAL','zamsiw_palety') || exec('rozzkkpl','zamsiw_palety',1) ?};
~~


\ilRealPAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: oblicza ilość do realizacji wg zaznaczonych palet
::----------------------------------------------------------------------------------------------------------------------
_spr:=BEER.ZK_N().T().R='Z';
_res:={? _spr || __zknrea.RES || __zknrea.REA ?};
{? __zknrea.TREE<>0
|| _ref:=$__zknrea.ref();
   _ktm:=__zknrea.KTM;
   __zrekpl.cntx_psh();
   __zrekpl.clear();
   __zrekpl.prefix(BEER.AKTZKN,_ktm,);
   {? __zrekpl.first() || _res:=__zrekpl.ILW+__zrekpl.ROZ ?};
   __zrekpl.cntx_pop();
   __zknrea.cntx_psh();
   __zknrea.prefix();
   {? __zknrea.first() & __zknrea.find_tab('first','KTM',,'=',_ktm)
   || {!
      |? {? __zknrea.ILP<=_res
         || {? _spr
            || __zknrea.RES:=__zknrea.ILP
            || __zknrea.REA:=__zknrea.ILP
            ?};
            __zknrea.put(1);
            _res-=__zknrea.ILP
         || {? _spr
            || __zknrea.RES:=_res
            || __zknrea.REA:=_res
            ?};
            __zknrea.put(1);
            _res:=0
         ?};
         __zknrea.find_tab('next','KTM',,'=',_ktm)
      !}
   ?};
   __zknrea.cntx_pop()
?};
_res


\isRealPAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: sprawdza czy zostało coś jeszcze do realizacji
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
__zrekpl.cntx_psh();
__zrekpl.clear();
__zrekpl.prefix(BEER.AKTZKN);
{? __zrekpl.first()
|| {!
   |? _res:=__zrekpl.ILP>0;
      ~_res & __zrekpl.next()
   !}
?};
__zrekpl.cntx_pop();
_res


\wybRealPAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: wybor palety na __palkpl
::   WE: [_a] - ref palety
::       [_b] - 0-wybor palety(domyślnie) 1-rozpakowanie
::       [_c] - materiał KTM
::       [_d] - ilość do rozpakowania
::       [_e] - kod palety do rozpakowania
::----------------------------------------------------------------------------------------------------------------------
_rpal:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_mode:={? var_pres('_b')=type_of(0) || _b || 0 ?};
_kmat:={? var_pres('_c')=type_of('') || _c || '' ?};
_iler:={? var_pres('_d')=type_of(0) || _d || 0 ?};
_pkod:={? var_pres('_e')=type_of('') || _e || '' ?};

_npal:=exec('FindInSet','#table','PAL','NOPAL',BEER.ZK_N().MG,'B',"@.PAL.KODK",,,'');
_psql:=exec('FindInSet','#table','PAL','NOPAL',BEER.ZK_N().MG,'B',"$@.PAL.ref()",,,'');
{? ~_mode
|| __palkpl.cntx_psh();
   __palkpl.prefix();
   {? __palkpl.seek(_rpal)
   || exec('wybzkkpl','zamsiw_palety',1,-1)
   ?};
   __palkpl.cntx_pop()
|| __palkpl.cntx_psh();
   __palkpl.prefix();
   {? _rpal<>null() & __palkpl.seek(_rpal)
   || exec('onerozpa','zamsiw_palety',_kmat,_iler,_npal,_psql,2,__palkpl.KOD)
   |? _rpal=null() & _pkod<>''
   || exec('onerozpa','zamsiw_palety',_kmat,_iler,_npal,_psql,2,_pkod)
   || exec('onerozpa','zamsiw_palety',_kmat,_iler,_npal,_psql,2)
   ?};
   __palkpl.cntx_pop()
?};
exec('ilRealPAL','zamsiw_palety');
__zknrea.get()


\sprPALrozp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: sprawdza czy podaną paletę można rozpakować w podanej ilości
::   WE: _a - kod palety
::       _b - materiał
::       _c - ilość do rozpakowania
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_pkod:={? var_pres('_a')=type_of('') || _a || '' ?};
 _mat:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_iler:={? var_pres('_c')=type_of(0) || _c || 0 ?};

{? _pkod<>'' & _mat<>null() & _iler>0
|| _ilep:=0;
   PAL_POZ.use('paletyp');
   PAL_POZ.index('POZKTM');
   PAL_POZ.prefix(_mat,ZK_N.MG);
   {? PAL_POZ.first() & PAL_POZ.find_tab('first','PAL','KODK','=',_pkod)
   || {!
      |? {? PAL_POZ.PAL().STAN<>'B'
          & exec('FindInSet','#table','SL','PAL',PAL_POZ.PAL,ZK_N.MG)<>null
::          & PAL_POZ.PAL().W='N'
          & exec('czynakpl','magdok_palety',PAL_POZ.PAL)='N'
          & PAL_POZ.ILP>0
         || _ilep+=PAL_POZ.ILP
         ?};
         _ilep<_iler & PAL_POZ.find_tab('next','PAL','KODK','=',_pkod)
      !}
   ?};
   _res:=_ilep>=_iler
?};
_res


\isselPozPal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca znacznik czy wybrano już paletę
::   WE: _a - ref SQL palety
::----------------------------------------------------------------------------------------------------------------------
_res:='N';
__palkpl.cntx_psh();
__palkpl.prefix();
{? _a<>'' & __palkpl.first() & __palkpl.find_tab('first','SQL',,'=',_a,'WYB',,'=',1) || _res:='T' ?};
__palkpl.cntx_pop();
_res


\roztrzlm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: dodaje pozycje z rozpakowania pod pozycjami dyspozycji
::   WE: _a - ref TR_NZL
::----------------------------------------------------------------------------------------------------------------------
_tr_nzl:={? var_pres('_a')=type_of(null()) || _a || null() ?};

{? exec('isRealPAL','zamsiw_palety')
|| TR_ZLM.cntx_psh();
   TR_ZLM.index('POZ_REF');
   TR_ZLM.prefix(_tr_nzl);
   {? TR_ZLM.first()
   || {!
      |? {? TR_ZLM.PAL<>null() & TR_ZLM.MANPAL<0 & TR_ZLM.IL>0
         || exec('onerozpa','zamsiw_palety',TR_ZLM.TR_ZL().M().KTM,TR_ZLM.IL,'','',1,TR_ZLM.PAL().KODK)
         ?};
         TR_ZLM.next()
      !}
   ?};
   TR_ZLM.cntx_pop()
?};
~~


\wewNOPAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [RR.xx]
:: OPIS: sprawdza czy możliwe rozpakowanie bez wydania dla zamówień wewnętrznych
::   WE: _a - ref ZK_N
::   WY: 1-tak, 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
ZK_N.cntx_psh();
ZK_N.prefix();
{? ZK_N.seek(_a) & ZK_N.T().R='W'
|| _res:={? ZK_N.MG().PAL='T' || ZK_N.MD=null() | ZK_N.MD().PAL<>'T' || 0 ?}
?};
ZK_N.cntx_pop();
_res

:Sign Version 2.0 jowisz:1045 2023/09/06 12:34:10 92e4af3bdb956e937887aa5b0aca7630b60e745153d58a76c0b8cfd47d2c34aca5b6f3e7bdd4e1338ef86266966f449f7bbc0ff05c36c356a54a543657effac5164718714e18f3f16f73b62c7da3aea831bdfddd0dafec4c4a7d88fc02779aa23adf2509efb6da767fceb600751b15b7e7a5b14eb8a796c355feb2d80f4c9ba6
