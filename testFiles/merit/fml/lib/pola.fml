:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: pola.fml
:: Utworzony: -
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły różne do obsługi pól
::======================================================================================================================

:: TODO: !!! Do usunięcia raczej core


\wz_kodpocz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2010]
:: OPIS: wzorzec edycji kodu pocztowego
::   WY: '99-999&'
::  OLD: \wz_kodpocz/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? -(6+menu_txt)='szukaj' || '' || '99-999&' ?}


\wz_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2010]
:: OPIS: tworzy maske edycji
::   WE: _a - dlugość identyfikatora
::   WY: maska edycji o wymaganej długości
::  OLD: \wz_id/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
(_a*'9')+'&'


\spr_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2010]
:: OPIS: sprawdza, czy długość edytowanego w polu napisu jest zgodna z zalecana
::   WE: _a - oczekiwana dlugość identyfikatora
::   WY: 0 - długość identyfikatora różna od dopuszczalnej,
::       1 - długość identyfikatora 0 lub zgodna z zalecana
::  OLD: \spr_id/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
_l:=+fld;
_wy:=~_l | _l=_a;
{? ~_wy || FUN.emsg('Wprowadzona wartość jest krótsza od wymaganej ('+$_a+' znaków).') ?};
_wy


\pole_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dodanie pola
::   WE: _a - Uchwyt do tabeli zwracanej przez exec('pola','pola')
::       _b - Akronim pola
::       _c - Wartość
::       _d - Dokładność liczby
::   WY:
::  OLD: \pole_add/polatab.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=_a;
_Tab.blank(1);
_Tab.AKRONIM:=_b;
_Tab.DOKL:={? var_press('_d')=type_of(0) || _d || 0 ?};
_formula:=exec('convert','pola',_e,_Tab.DOKL);
_Tab.FORMULA1:=255+_formula;
_Tab.FORMULA2:=255-_formula;
_Tab.add()


\convert
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Konwersja wartości na formułę
::   WE: _a - wartość do konwersji
::       _b - dokładność liczby/długość ciągu znaków
::   WY: formuła
::  OLD: \convert/polatab.fml
::----------------------------------------------------------------------------------------------------------------------
_wart:=_a;
_dokl:=_b;

{? type_of(_wart)=type_of(0)
|| form(_wart,,_dokl,'9.')
|| exec('val2fml','#convert',_wart,type_of(_wart))
?}


\buf_fill
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Wypełnienie pól zmiennej _c wartościami z tabeli _d dotyczącymi dokumentu _b
::   WE: _a - Tabela - akronim
::       _b - ref dokumentu
::       _c - Zmienna
::       _d - Tabela z danymi, które przepisujemy do zmiennej - uchwyt
::   WY:
::  OLD: \buf_fill/polatab.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=_a;
_ref:=_b;
_To:=_c;
_From:=_d;

_From.index('UNIK');
_From.prefix(_ref);
_first:=_From.first();
{? _first
|| _To.MK:=_From.MK;
   _To.SAMFAK:=_From.SAMFAK;
   _To.OO:=_From.OO;
   _To.ZW:=_From.ZW;
   _To.PZW_PRZE:=_From.PZW_PRZE;
   _To.PZW_DUE:=_From.PZW_DUE;
   _To.PZW_INNA:=_From.PZW_INNA;
   _To.EGZ:=_From.EGZ;
   _To.EGZ_KH:=_From.EGZ_KH;
   _To.EGZ_NAZ:=_From.EGZ_NAZ;
   _To.EGZ_ADR:=_From.EGZ_ADR;
   _To.PP:=_From.PP;
   _To.PP_KH:=_From.PP_KH;
   _To.PP_NAZ:=_From.PP_NAZ;
   _To.PP_ADR:=_From.PP_ADR;
   _To.PP_ID:=_From.PP_ID;
   _To.NST_DATA:=_From.NST_DATA;
   _To.NST_KM:=_From.NST_KM;
   _To.NST_GODZ:=_From.NST_GODZ;
   _To.NST_RODZ:=_From.NST_RODZ;
   _To.NST_POJ:=_From.NST_POJ;
   _To.TT:=_From.TT;
   _To.USL_TUR:=_From.USL_TUR;
   _To.UDS:=_From.UDS;
   _To.UDS_OPIS:=_From.UDS_OPIS
|| _To.blank()
?};

FAKS.cntx_psh();

_change:=0;

{? ~_first & _Tab=DOK
|| {? 1+DOK.DOKZRODL='D'
   || _ref:=#(4-DOK.DOKZRODL);
      {? _ref
      || _maska:=(3+(1-DOK.DOKZRODL));
         FAKS.use((FAKS.name()-3)+_maska);
         FAKSPOLA.use((FAKSPOLA.name()-3)+_maska);
         FAKS.prefix();
         {? FAKS.seek(_ref,)
         || obj_del(_From); _From:=FAKSPOLA;
            _change:=1
         ?}
      ?}
   ?}
?};

{? _change
|| _From.index('UNIK');
   _From.prefix(_ref);
   _first:=_From.first();
   {? _first
   || _To.MK:=_From.MK;
      _To.SAMFAK:=_From.SAMFAK;
      _To.OO:=_From.OO;
      _To.ZW:=_From.ZW;
      _To.PZW_PRZE:=_From.PZW_PRZE;
      _To.PZW_DUE:=_From.PZW_DUE;
      _To.PZW_INNA:=_From.PZW_INNA;
      _To.EGZ:=_From.EGZ;
      _To.EGZ_KH:=_From.EGZ_KH;
      _To.EGZ_NAZ:=_From.EGZ_NAZ;
      _To.EGZ_ADR:=_From.EGZ_ADR;
      _To.PP:=_From.PP;
      _To.PP_KH:=_From.PP_KH;
      _To.PP_NAZ:=_From.PP_NAZ;
      _To.PP_ADR:=_From.PP_ADR;
      _To.PP_ID:=_From.PP_ID;
      _To.NST_DATA:=_From.NST_DATA;
      _To.NST_KM:=_From.NST_KM;
      _To.NST_GODZ:=_From.NST_GODZ;
      _To.NST_RODZ:=_From.NST_RODZ;
      _To.NST_POJ:=_From.NST_POJ;
      _To.TT:=_From.TT;
      _To.USL_TUR:=_From.USL_TUR;
      _To.UDS:=_From.UDS;
      _To.UDS_OPIS:=_From.UDS_OPIS
   || _To.blank()
   ?}
?};

{? _change & FAKS.SZ='S'
||
   {? _first || exec('polafaks_update','jpk_log') ?}
?};

FAKS.cntx_pop()


\buf_save
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zapis pól zmiennej _c do pola _b w tabeli _a wg definicji _d
::   WE: _a - ref dokumentu
::       _b - Zmienna
::       _c - Tabela z danymi, które przepisujemy do zmiennej - uchwyt
::   WY:
::  OLD: \buf_save/polatab.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_From:=_b;
_To:=_c;

_To.blank();
_To.REK:=_ref;
_To.MK:=_From.MK;
_To.SAMFAK:=_From.SAMFAK;
_To.OO:=_From.OO;
_To.ZW:=_From.ZW;
_To.PZW_PRZE:=_From.PZW_PRZE;
_To.PZW_DUE:=_From.PZW_DUE;
_To.PZW_INNA:=_From.PZW_INNA;
_To.EGZ:=_From.EGZ;
_To.EGZ_KH:=_From.EGZ_KH;
_To.EGZ_NAZ:=_From.EGZ_NAZ;
_To.EGZ_ADR:=_From.EGZ_ADR;
_To.PP:=_From.PP;
_To.PP_KH:=_From.PP_KH;
_To.PP_NAZ:=_From.PP_NAZ;
_To.PP_ADR:=_From.PP_ADR;
_To.PP_ID:=_From.PP_ID;
_To.NST_DATA:=_From.NST_DATA;
_To.NST_KM:=_From.NST_KM;
_To.NST_GODZ:=_From.NST_GODZ;
_To.NST_RODZ:=_From.NST_RODZ;
_To.NST_POJ:=_From.NST_POJ;
_To.TT:=_From.TT;
_To.USL_TUR:=_From.USL_TUR;
_To.UDS:=_From.UDS;
_To.UDS_OPIS:=_From.UDS_OPIS;
_To.OKRES_OD:=_From.OKRES_OD;
_To.OKRES_DO:=_From.OKRES_DO


\delpola
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Usuwa dane dodatkowe rekordu _b z tabeli _a
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Tab:=_a;
_ref:=_b;

_Tab.cntx_psh();
_Tab.index('UNIK');
_Tab.prefix(_ref);
_loop:=_Tab.first();
{!
|? _loop
|!
   _loop:=_Tab.del()
!};
_Tab.cntx_pop()


\oo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.41]
:: OPIS: Zwraca T jeśli dokument dotyczy odwrotnego obciążenia
::   WE:
::   WY: N-nie dotyczy odwrotnego obciążenia, T-dotyczy odwrotnego obciążenia
::----------------------------------------------------------------------------------------------------------------------
_oo:={? FAKS.NDVAT='O' || 'T' || 'N' ?};
{? _oo='N'
||
   FAP.cntx_psh();
   _faks:=FAKS.ref();
   _ii:=0;
   _loop:=1;
   {!
   |? _loop
   |!
      _ii+=1;
      FAP.index('FAP');
      FAP.prefix(_faks);
      _loop:=FAP.first();
      {!
      |? _loop
      |!
         {? {? FAKS.SZ='S' || FAP.SV().KOD=' -o' || FAP.OO='T' ?} || _oo:='T' ?};
         _loop:=_oo='N' & FAP.next()
      !};
      {? _ii=1 & FAKS.LKSQL<>''
      ||
         FAP.use((FAP.name()-3)+(8+FAKS.LKSQL+3));
         _faks:=exec('FindAndGet','#table',FAKS,FAKS.LKSQL,,,null());
         _loop:=_faks<>null()
      ?}
   !};
   FAP.cntx_pop()
?};
_oo


\projekt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Projekt
::   WE:
::   WY:
::  OLD: \projekt/polatab.fml
::----------------------------------------------------------------------------------------------------------------------
:: Ograniczenia
:: fopen - od 11.20 tworzenie obiektu FILE
:: win_efld - od 12.10 opcja umieszczania check-box w okienku

:: Wątpliwości
:: JPK_MAG
:: Czy zapamiętywać nazwę dostawcy, odbiorcy?
:: JPK_FA
:: Jakie wartości wysyłać w pozycjach korekty? Po korekcie, różnicę?

:: Pola dokumentu sprzedaży zakupu
::P_16        - boolean   - metoda kasowa
::P_17        - boolean   - samofakturowanie
::P_18        - boolean   - odwrotne obciążenie
::P_19        - boolean   - zwolnione od podatku
::P_19A       - s[256]    - podstawa zwolnienia - przepis
::P_19B       - s[256]    - podstawa zwolniania - dyrektywa UE
::P_19C       - s[256]    - podstawa zwolnienia - inna
::P_20        - boolean   - organ egzekucyjny - wystawił
::P_20A       - s[256]    - organ egzekucyjny - nazwa
::P_20B       - s[256]    - organ egzekucyjny - adres
::P_21        - boolean   - przedstawiciel podatkowy
::P_21A       - s[256]    - przedstawiciel podatkowy - nazwa
::P_21B       - s[256]    - przedstawiciel podatkowy - adres
::P_21C       - s[256]    - przedstawiciel podatkowy - nr identyfikacyjny
::P_22A       - date      - nowy środek transportu - data dopuszczenia do użytku
::P_22B       - s[256]    - nowy środek transportu - przebieg
::P_22C       - s[256]    - nowy środek transportu - liczba godzin użytkowania
::P_23        - boolean   - transakcja trójstronna
::P_106E_2    - boolean   - usługi turystki
::P_106E_3    - boolean   - używane dzieła sztuki
::P_106E_3A   - s[256]    - "procedura marży - towary używane" lub "procedura marży - dzieła sztuki"
::                           lub "procedura marży - przedmioty kolekcjonerskie i antyki"

:Sign Version 2.0 jowisz:1045 2024/01/30 14:38:36 9b480eec03093b78419d7e6f3cddc24adea357a5d137a7f1eac427196e625e049c2996dd0f157084bc20b7f38c4bb623915800b37976875bdbf4edbabe7591be3aa736945bd9dda5ed111994c962036ba5ae425740bea8cee14531a88cc4435e494a12c86bcba720f017553267961319db7987953ddc41ebefe85b43c5e62a6e
