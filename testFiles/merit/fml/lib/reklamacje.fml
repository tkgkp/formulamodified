:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: reklamacje.fml
:: Utworzony: 19.02.2021
:: Autor: MW
::======================================================================================================================
:: Zawartość: Obsługa reklamacje klientów i reklamacji do dostawców
::======================================================================================================================


\rekl_main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Główne okno roboczego reklamacji klienta (TRE_REK) i reklamacji do dostawców (TRE_DRO)
::   WE: [_a] - S - reklamacje klientów, D - reklamacje do dostawców
::----------------------------------------------------------------------------------------------------------------------
:: Ustalenie treści linku
_params:=params_get();
{? type_of(_params)>0 & var_pres('LINK',_params)=type_of('')
|| _link:=_params.LINK
|| _link:=''
?};
:: Ustalenie parametrów sesji na podstawie przekazanego rekordu
{? _link<>''
|| {? ref_tab(_link)=REK_N
   || _oddz:=exec('FindAndGet','#table',REK_N,_link,,"ODDZ",'');
      _oddz_ref:=exec('FindInSet','#table','ODDZ','KOD2',_oddz,,,1);
::    Wykluczenie dostępu na podstawie uprawnień do danych - oddziały
      {? ~exec('spr_upr','users','ODDZ',_oddz_ref)
      || return()
      || __PARSES.setVal('OddzialLogProd',_oddz)
      ?}
   || return()
   ?}
?};
{? var_pres('_a')<>2 | (_a<>'S' & _a<>'Z')
|| _a:='S'
?};

:: exec('rek_open','open_tab', ST.ODDZ, ($ST.AR)+2);

BEER.SZ:=_a;
:: ustawienie formatu wyświetlania
exec('f_DISP_EDIT','reklamacje');
:: uzupełnienie słownika powiązań
exec('addREK_Z','reklamacje');
_etyk:={? BEER.SZ='S' || 'reklamvies' || 'reklamviez' ?};
_grp:=REK_N.grp_make('',,_etyk,,,"exec('exit','zws',_a)","",'maximized');
_fr:="";
::_fr:="REK_H.index('REKN');
::      REK_H.prefix(REK_N.ref());
::      {? REK_N.STAT_REJ='Z'
::      || REK_H.actions_grayed('WER')
::      || REK_H.actions_grayed('WER','D:D')
::      ?};
::      grp_disp(REK_H,'WER')";
REK_N.grp_sel(_grp,,'WER'+BEER.SZ,,_fr,,,,,,,,'maximized_with_title','reklam');
::REK_N.grp_splt(_grp,,'horizontal','bottom',24);
::_fb:="{? grp_empty(REK_N,'WER'+BEER.SZ)
::      || '#disable'
::      || ~~
::      ?}";
::REK_N.grp_sel(_grp,REK_H,'WER',,,,,,_fb,,,,'maximized_with_title','hist');
REK_N.win_fml('WER'+BEER.SZ,,'SYM',,'ICON_BEFORE',exec('rek_n_sym_ib','reklamacje'));
REK_N.win_fml('WER'+BEER.SZ,,'M','KTM','ICON_BEFORE',exec('rek_n_sym_it','reklamacje'));
REK_N.win_fml('WERS',,'ILDNI',,'ICON_BEFORE',exec('rek_n_sym_iz','reklamacje'));

REK_N.win_sel(_grp);

AreaTitle.setTabWin(REK_N,~~);
AreaTitle.setTitle();

REK_H.index('REKN');
REK_N.index('DP');
REK_N.prefix(BEER.SZ);

{? _link<>''
|| {? ref_tab(_link)=REK_N
   || _name:=ref_name(_link);
      _oddz:=(_name-2)+1;
      _rok:=_name+2;
      exec('rek_open','open_tab',_oddz,_rok);
      {? REK_N.seek(_link)
      || REK_N.select(,1,10)
      || FUN.info('Reklamacja o identyfikatorze %1 nie została odnaleziona.'@[_link]);
         return()
      ?}
   || return()
   ?}
|| REK_N.select()
?};

~~


\rekl_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Dopisane reklamacji klienta lub reklamacji do dostawców
::----------------------------------------------------------------------------------------------------------------------
_uid:={? BEER.SZ='Z' || 'TRE_RDO_DRDO' || 'TRE_REK_DREK' ?};

_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:=_uid;
_args.AKCJA:='DOŁĄCZ';
_args.PROC_START:='T';

_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);

exec('mp_run','#b__box',_args);
~~


\rekl_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Dopisane reklamacji klienta lub reklamacji do dostawców
::----------------------------------------------------------------------------------------------------------------------
_uid:={? BEER.SZ='Z' || 'TRE_RDO_DRDO' || 'TRE_REK_DREK' ?};

_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:=_uid;
_args.UIDREF:=REK_N.uidref();
_args.AKCJA:='POPRAW';
_args.PROC_START:='N';

_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'REK_N',REK_N.ref());

exec('mp_run','#b__box',_args);
~~


\rekl_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Usuwanie reklamacji klienta lub reklamacji do dostawców
::----------------------------------------------------------------------------------------------------------------------
_uid:={? BEER.SZ='Z' || 'TRE_RDO_DRDO' || 'TRE_REK_DREK' ?};

_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:=_uid;
_args.UIDREF:=REK_N.uidref();
_args.AKCJA:='USUŃ';
_args.PROC_START:='N';

_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'REK_N',REK_N.ref());

exec('mp_run','#b__box',_args);
~~


\rekl_zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Zakonczenie rejestracji reklamacji
::----------------------------------------------------------------------------------------------------------------------
_uid:={? BEER.SZ='Z' || 'TRE_RDO_DRDO' || 'TRE_REK_DREK' ?};

_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:=_uid;
_args.UIDREF:=REK_N.uidref();
_args.AKCJA:='ZAKOŃCZ';
_args.PROC_START:='N';

_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'REK_N',REK_N.ref());

exec('mp_run','#b__box',_args);
~~


\rekl_akceptacja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Akceptacja reklamacji klienta lub reklamacji do dostawców
::----------------------------------------------------------------------------------------------------------------------
_uid:={? BEER.SZ='Z' || 'TRE_RDO_AERD' || 'TRE_REK_AERK' ?};

_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:=_uid;
_args.UIDREF:=REK_N.uidref();
_args.AKCJA:='AKCEPTACJA';
_args.PROC_START:='N';

_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'REK_N',REK_N.ref());

exec('mp_run','#b__box',_args);
~~


\rekl_odrzucenie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Odrzucenie reklamacji klienta lub reklamacji do dostawców
::----------------------------------------------------------------------------------------------------------------------
_uid:={? BEER.SZ='Z' || 'TRE_RDO_AERD' || 'TRE_REK_AERK' ?};

_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:=_uid;
_args.UIDREF:=REK_N.uidref();
_args.AKCJA:='ODRZUCENIE';
_args.PROC_START:='N';

_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'REK_N',REK_N.ref());

exec('mp_run','#b__box',_args);
~~


\rekl_zamkniecie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Zamknięcie reklamacji klienta lub reklamacji do dostawców
::----------------------------------------------------------------------------------------------------------------------
_can_continue:=1;
{? exec('FindAndGet','#table',REM_ZGL,exec('rek_n_czy_rem','reklamacje',,1),,
        "REM_ZGL.STAT_REJ<>exec('status_closed','remonty_zgloszenia')",0)
|| {? ~FUN.ask('Powiązane z reklamacją zgłoszenie remontowe nie zostało zamknięte.\n'
               'Czy mimo to zamknąć reklamację?'@)
   || _can_continue:=0
   ?}
?};
{? _can_continue
|| _uid:={? BEER.SZ='Z' || 'TRE_RDO_AZRD' || 'TRE_REK_AZRK' ?};

   _args:=exec('mp_run_a','#b__box');
   _args.ACT_UID:=_uid;
   _args.UIDREF:=REK_N.uidref();
   _args.AKCJA:='ZAMKNIĘCIE';
   _args.PROC_START:='N';

   _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
   exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'REK_N',REK_N.ref());

   exec('mp_run','#b__box',_args)
?};
~~


\po_rek_r_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Po rodzaju reklamacji
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? REK_N.REK_R=null()
|| FUN.info('Należy wskazać rodzaj reklamacji.'@);
   _res:=0
|| {? REK_N.ILDNI<=0 || REK_N.ILDNI:=REK_N.REK_R().ILDNI ?};
   {? REK_N.OP='' || REK_N.OP:=REK_N.REK_R().OP ?}
?};
_res


\rek_n_set_zmienne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Ustawienie zmiennych używanych przy edycji reklamacji klienta lub reklamacji do dostawców
::   WE: _a - 1-poprawianie, 0-dołączanie
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0)
|| _a:=0
?};
{? _a
|| POMOC.RODZR:=POMOC.RODZ:={? REK_N.M<>null() || REK_N.M().RODZ || 'N' ?};
   BEER.KH:=REK_N.KH;
   UMO.KHPOS:=REK_N.KH;
   ZLEC.MIA:=REK_N.POS().MIA;
   ZLEC.UL:=REK_N.POS().UL;
   TR_Z.TR_ADR:=1
|| POMOC.RODZR:=exec('get','#params',700600,2);
   BEER.KH:=null();
   UMO.KHPOS:=null();
   ZLEC.MIA:=null();
   ZLEC.UL:=null();
   TR_Z.TR_ADR:=0
?};
~~


\rekrek_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: REK_N - "rekord przed"
::   WE: _a - wskazanie czy ostatni odrysowany rekord
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _bez:='';
   _inftra:={? ~exec('czyTRANSPORT','transport_wspolne',REK_N.uidref()) || 'N(B(I))' || '' ?};
   _czydtr:={? ((';ZT'*REK_N.STAT_REJ)>1) & exec('czyTR_NZL','transport_wspolne',REK_N.uidref())
            || ''
            || 'N(B(T))'
            ?};
   {? REK_N.STAT_REJ='N'
   || _bez:='AMRN(WM)'
   |? REK_N.STAT_REJ='Z'
   || _bez:='MPUZN(M)'
   |? REK_N.STAT_REJ='T'
   || _bez:='APRUZ'+{? REK_N.RESULT='N' || 'N(M)' || '' ?}
   |? REK_N.STAT_REJ='X'
   || _bez:='AMPRUZN(M)'
   ?};
:: Generowanie zgłoszeń remontowych dostępne tylko dla zaakceptowanych (i niezamkniętych) reklamacji
   {? ~(REK_N.STAT_REJ='T' & REK_N.RESULT='T')
   || _bez:='N(R)'+_bez
   ?};
:: Podgląd zgłoszeń remontowych dostępne tylko dla reklamacji, do których wygenerowano zgłoszenie
   {? ~exec('rek_n_czy_rem','reklamacje')
   || _bez:='N(P)'+_bez
   ?};
   _bez:=_czydtr+_inftra+_bez;
   REK_N.actions_grayed('WER'+BEER.SZ,_bez);
   REK_N.actions_grayed('WER_DOK'+BEER.SZ,_bez);
   {? REK_N.STAT_REJ='X'
   || REK_N.win_edit('REDX')
   |? REK_N.STAT_REJ='T'
   || REK_N.win_edit('REDR')
   || REK_N.win_edit('RED')
   ?};
   exec('rek_n_set_zmienne','reklamacje',1)
?};
exec('rekprzed','color','REK_N#01')


\rek_r_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Po edycji rodzaju reklamacji
::----------------------------------------------------------------------------------------------------------------------
exec('rek_r_chk_core','reklamacje',-menu_txt()='popraw')


\rek_r_chk_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [21.14]
:: OPIS: Walidacja rekordu tabeli REK_R (Rodzaje reklamacji)
::       - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::   WY: akronim pola / ''
::----------------------------------------------------------------------------------------------------------------------
_chk:=__CHK.record(REK_R,,'KOD','OPIS');
{? _chk=''
|| {? _a
   || _ref:=REK_R.ref()
   || _ref:=null()
   ?};
   _kod:=REK_R.KOD;
   REK_R.cntx_psh();
   REK_R.index('KOD');
   REK_R.prefix(BEER.SZ,_kod,);
   {? REK_R.first() & (~_a | REK_R.ref()<>_ref)
   || FUN.info('Istnieje rodzaj reklamacji o kodzie: %1.'@[_kod]);
      _chk:='KOD'
   ?};
   REK_R.cntx_pop()
?};
{? _chk=''
|| {? REK_R.ILDNI<0
   || FUN.info('Ilość dni na rozpatrzenie reklamacji nie może być ujemna.'@);
      _chk:='ILDNI'
   ?}
?};
_chk


\po_prodzr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: po redakcji zmiennej POMOC.RODZR
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? ~((';TUN'*fld())>1)
|| FUN.info('Wpisz: T-Materiał, U-Usługa, N-Nie dotyczy.'@)
||
   _wyn:=1;
   {? fld()='T'
   ||
      M.win_dict('NL_WER');
      M.win_sel('NL_WER');
      M.actions('NL_WER','WE')
   |? fld()='U'
   ||
      M.win_dict('NL_WERU');
      M.win_sel('NL_WERU');
      M.actions('NL_WERU','WE')
   ?};
   POMOC.RODZ:=POMOC.RODZR;
   {? POMOC.RODZ='N' | REK_N.M().RODZ<>POMOC.RODZ || REK_N.M:=null(); REK_N.JM:=null() ?}
?};
exec('set_efld_opt','reklamacje');
_wyn


\pw_prodzr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: wartość początkowa zmiennej POMOC.RODZR
::----------------------------------------------------------------------------------------------------------------------
POMOC.RODZ:=POMOC.RODZR;
1


\rek_n_win_edit_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Ustawia okno redakcji tabeli REK_N, wymagane pola, okna słowników
::   WE: [_a] - tryb - 0 - dopisywanie/edycja (domyślnie), 1 - zakończenie, 2 - zamknięcie
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};

BPMN.END:=0;
REK_R.actions('SEL','W');
{? _tryb=2
|| _win_red:=exec('rek_n_win_edit','reklamacje','REDX')
|? _tryb=1
|| _win_red:=exec('rek_n_win_edit','reklamacje','REDR')
|| _win_red:=exec('rek_n_win_edit','reklamacje','RED')
?};
{? _tryb=1 | _tryb=2
|| exec('ok_esc','#window',REK_N,_win_red,1,,,1)
|? REK_N.STAT_REJ='T' | REK_N.STAT_REJ='X'
|| exec('ok_esc','#window',REK_N,_win_red,1,,,0)
|| _ff:="params_exec('priority_action_red','#b__box')";
   REK_N.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin'['Pr&iorytet'@],_ff);
   _ff:="params_exec('rek_n_zakoncz_red','reklamacje')";
   exec('zakoncz','#window',REK_N,_win_red,1,_ff,0, exec('help_red_zakoncz','#window','E'),
   exec('text_red_zakoncz','#window','E'));
   exec('ok_esc','#window',REK_N,_win_red,1,,,,,exec('help_red_ok','#window','Z'),exec('text_red_ok','#window'),
   exec('help_red_esc','#window','A'))
?};
REK_N.win_edit(_win_red);
exec('set_efld_opt','reklamacje',_win_red);
exec('sel_win_kh','ustawienia');
~~


\rek_n_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Zwraca okno redakcji tabeli REK_N
::   WE: [_a] - akronim okna
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || _a:='RED' ?};

{? BEER.SZ='Z'
|| _tyt:='Reklamacja do dostawcy'@
|| _tyt:='Reklamacja klienta'@
?};

_win_akr:=_a;
{? _win_akr='RED'
:: Tymczasowe okno redakcji
|| _win_red:=REK_N.mk_edit(_tyt,,,,,'html_maximized');
   REK_N.win_ewin(_win_red,,_win_akr);
   _win_red
|? _win_akr='REDR'
:: Tymczasowe okno redakcji
|| _win_red:=REK_N.mk_edit(_tyt,,,,,'html_maximized');
   REK_N.win_ewin(_win_red,,_win_akr);
   _win_red
|? _win_akr='REDX'
:: Tymczasowe okno redakcji
|| _win_red:=REK_N.mk_edit(_tyt,,,,,'html_maximized');
   REK_N.win_ewin(_win_red,,_win_akr);
   _win_red
|| _win_akr
?}


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Zaznacza wymagalne pola w nagłówku reklamacji
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || REK_N.win_edit('?') ?};

:: Czy wygenerowana do dokumentu lub zamówienia
_isDok:=REK_N.FAK_POZ<>'' | REK_N.ZAM_ZRP<>'';
{? POMOC.RODZR='N'
|| _markM:='mark=0';
   _markOP:='mark=1';
   _enableM:='enable=0'
|| _markM:='mark=1';
   _markOP:='mark=0';
   _enableM:='enable=1'
?};
{? _isDok
|| REK_N.efld_opt(_win_red,'editable=0',POMOC,'RODZR');
   REK_N.efld_opt(_win_red,'editable=0',,'M');
   REK_N.efld_opt(_win_red,'editable=0',,'KH');
   REK_N.efld_opt(_win_red,'editable=0',,'KH_ODB')
|| REK_N.efld_opt(_win_red,'editable=1',POMOC,'RODZR');
   REK_N.efld_opt(_win_red,'editable=1',,'M');
   REK_N.efld_opt(_win_red,'editable=1',,'KH');
   {? REK_N.KH=null()
   || REK_N.efld_opt(_win_red,'editable=0',,'KH_ODB','KOD');
      REK_N.efld_opt(_win_red,'editable=0',,'KH_OSOB','NAZWISKO');
      REK_N.efld_opt(_win_red,'editable=0',,'POS','NR')
   || REK_N.efld_opt(_win_red,'editable=1',,'KH_ODB','KOD');
      REK_N.efld_opt(_win_red,'editable=1',,'KH_OSOB','NAZWISKO');
      REK_N.efld_opt(_win_red,'editable=1',,'POS','NR')
   ?};
   REK_N.efld_opt(_win_red,_markM,,'M');
   REK_N.efld_opt(_win_red,_markOP,,'OP');
   REK_N.efld_opt(_win_red,_enableM,,'M');
   REK_N.efld_opt(_win_red,_enableM,,'JM')
?};

{? XINFO.TER_AKT<>'T'
|| REK_N.btn_eopt(_win_red,'MIASTO','state=grayed');
   REK_N.btn_eopt(_win_red,'UL','state=grayed')
|| REK_N.btn_eopt(_win_red,'MIASTO','state=normal');
   REK_N.btn_eopt(_win_red,'UL','state=normal')
?};

''



\rek_n_zakoncz_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Zakończ dla reklamacji - Zakończ - okno redagowania
::   WE: params_get()
::   WY: 'key:F2' - jeśli pola nagłówka zamówienia sprzedaży prawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka zamówienia sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;

_btnRuleResult:='';

_fld:=params_exec('chk_rek_n','reklamacje',REK_N.ref());
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| {? exec('rek_n_akc','reklamacje')
   || _btnRuleResult:='key:F2';
      _mp.done()
   ?}
?};

_btnRuleResult


\przed_rekn_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Przed edycją pola REK_N.M
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? POMOC.RODZR='T' | POMOC.RODZR='U'
|| _wyn:=1
?};
_wyn


\po_rekn_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: po redkacji pola REK_N.M
::----------------------------------------------------------------------------------------------------------------------
{? REK_N.M<>null() || REK_N.JM:=REK_N.M().J || REK_N.JM:=null() ?};
1


\po_rekn_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: po redkacji pola REK_N.OP
::----------------------------------------------------------------------------------------------------------------------
1


\po_rekn_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [21.14]
:: OPIS: po redkacji pola REK_N.KH
::----------------------------------------------------------------------------------------------------------------------
exec('set_efld_opt','reklamacje');
exec('po_miejsce','reklamacje');
1


\przed_rekn_khodb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Przed edycją pola REK_N.KH_ODB
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? REK_N.KH<>null()
|| BEER.KH:=REK_N.KH;
   _wyn:=1
?};
_wyn


\przed_rekn_khosob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Przed edycją pola REK_N.KH_OSOB
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? REK_N.KH<>null()
|| BEER.KH:=REK_N.KH;
   _wyn:=1
?};
_wyn


\przed_rekn_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Przed edycją pola REK_N.POS
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? REK_N.KH<>null()
|| UMO.KHPOS:=REK_N.KH;
   _wyn:=1
?};
_wyn


\po_rekn_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [21.14]
:: OPIS: po redkacji pola REK_N.KHPOS
::----------------------------------------------------------------------------------------------------------------------
ZLEC.MIA:=REK_N.POS().MIA;
ZLEC.UL:=REK_N.POS().UL;
win_disp();
exec('po_miejsce','reklamacje');
1


\chk_rek_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: sprawdza poprawność wypełnienia pól
::   WY: ''-wszystko w porządku, pole-brak uzupełnienia
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? REK_N.KH=null()
|| FUN.info('Wymagane podanie kontrahenta.'@);
   _res:='KH'
?};
{? _res='' & REK_N.DP=date(0,0,0)
|| FUN.info('Wymagane podanie daty przyjęcia.'@);
   _res:='DP'
?};
{? _res=''
|| {? (';TU'*POMOC.RODZR)>1 & REK_N.M=null()
   || FUN.info('Wymagane podanie indeksu.'@);
      _res:='M'
   |? POMOC.RODZR='N' & REK_N.OP=''
   || FUN.info('Wymagane podanie opisu reklamacji.'@);
      _res:='OP'
   ?}
?};
{? _res=''
|| exec('rek_n_teryt_sprawdz','reklamacje')
?};
_res


\rek_n_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: zakończenie redakcji reklamacji
::   WE: [_a] - 0-z pytaniami(domyślnie) 1-bez
::   WY: 1-zakończono rejestrację 0-nie
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
REK_N.STAT_REJ:='Z';
REK_N.ST:=exec('status_zarejestrowano','reklamacje');
_wyn


\rek_n_gen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: generacja reklamacji na podstawie dokumentów
::   WE: _a - wskazanie na dokument
::       _b - rodzaj reklamacji
::   WY: 1-wygenrowano 0-nie
::----------------------------------------------------------------------------------------------------------------------
 _dok:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_rodz:={? var_pres('_b')=type_of('') || _b || '' ?};
_res:=0;
_rek_n:=null();

REKVAR.TRYB:=0;
REK_N.cntx_psh();

_tab:=ref_tab(_dok);

exec('initREKVAR','reklamacje',{? _dok=null() || 0
                               |? _tab=ZK_N   || 1
                               |? _tab=ZD_NAG || 2
                               |? _tab=ND     || 3
                               || 0 ?});
exec('f_DISP_EDIT','reklamacje');

_opis:='';
_letsGo:=-1;
REK_R.actions('SEL','W');
{? var_pres('_tab')=type_of(~~)
|| REKVAR.blank(0);
   REKVAR.OKR:=exec('FindInSet','#table','OKR','MC',date()~1,REF.FIRMA,,,1);
   REKVAR.ARCH:='N';
   REKVAR.DP:=date();
   OKR.fld_fml('MC','BLANK',"1");
   REKVAR.win_edit('REKFND');
   {? REKVAR.edit("exec('rek_gen_chk','reklamacje')") || _letsGo:=1 ?};
   OKR.fld_fml('MC','BLANK',"0")
|? _tab=FAKS
|| _letsGo:=0;
   REKVAR.DP:=date();
   REKVAR.win_edit('REKGEN');
   exec('genFAKS','reklamacje',_dok)
|? _tab=ZK_N
|| _letsGo:=0;
   REKVAR.DP:=date();
   REKVAR.win_edit('REKZEN');
   exec('genZAM','reklamacje',_dok)
|? _tab=ZD_NAG
|| _letsGo:=0;
   REKVAR.DP:=date();
   REKVAR.win_edit('REKZEN');
   exec('genDST','reklamacje',_dok)
|? _tab=ND
|| _letsGo:=0;
   REKVAR.DP:=date();
   REKVAR.win_edit('REKMAG');
   exec('genMAG','reklamacje',_dok)
?};
__reklpos.clear();
_first:=__reklpos.first();
{? _first & (_letsGo=1 | (~_letsGo & REKVAR.edit("exec('rek_gen_chk','reklamacje')")))
|| __reklpos.prefix('T');
   {? __reklpos.select()
   || __reklpos.clear;
      __reklpos.f_clear();
      {? __reklpos.first() || {! |? {? __reklpos.WYB='T' || __reklpos.next() || __reklpos.del() ?} !} ?};

      {? __reklpos.first()
      || do();
         {!
         |? _rek_n:=exec('addOneRekl','reklamacje');
            {? _rek_n=null()
            || undo(); _res:=0; 0
            || _res:=1;
               {? __reklpos.FAKREF<>''
               || _uid:=exec('FindAndGet','#table',FAKS,__reklpos.FAKREF,,"uidref()",'');
                  _uip:=exec('FindAndGet','#table',FAP,__reklpos.FAPREF,,"uidref()",'');
                  {? ~exec('rozpRekD','reklamacje',_rek_n,_uid,_uip,__reklpos.ILR)
                  || undo(); _res:=0
                  ?}
               |? __reklpos.ZAMREF<>'' & __reklpos.ZRPREF<>''
               || _uid:=exec('FindAndGet','#table',ref_tab(__reklpos.ZAMREF),__reklpos.ZAMREF,,"uidref()",'');
                  _uip:=exec('FindAndGet','#table',ref_tab(__reklpos.ZAPREF),__reklpos.ZAPREF,,"uidref()",'');
                  _uir:=__reklpos.ZRPREF;
                  {? ~exec('rozpRekZ','reklamacje',_rek_n,_uid,_uip,__reklpos.ZRPREF,__reklpos.ILR)
                  || undo(); _res:=0
                  ?}
               |? __reklpos.ZAMREF<>''
               || _uid:=exec('FindAndGet','#table',ref_tab(__reklpos.ZAMREF),__reklpos.ZAMREF,,"uidref()",'');
                  _uip:=exec('FindAndGet','#table',ref_tab(__reklpos.ZAPREF),__reklpos.ZAPREF,,"uidref()",'');
                  _zat:=ref_tab(_uid);
                  {? ~exec('autoRekD','reklamacje',_rek_n,_uid,_uip,__reklpos.ILR
                       ,{? _zat=ZK_N
                        || 'Przyjęcie reklamacji zamówienia sprzedaży'
                        |? _zat=ZD_NAG
                        || 'Zgłoszenie reklamacji do zamówienia dostaw'
                        ?})
                  || undo(); _res:=0
                  ?}
               |? __reklpos.NDREF<>''
               || _uid:=exec('FindAndGet','#table',ND,__reklpos.NDREF,,"uidref()",'');
                  _uip:=exec('FindAndGet','#table',DK,__reklpos.PRDK,,"uidref()",'');

                  _ild:=exec('FindAndGet','#table',DK,__reklpos.PRDK,,"IL-IL_RK",0);
                  {? _ild>0
                  || _ilp:={? _ild>=__reklpos.ILR || __reklpos.ILR || _ild ?};
                     {? ~exec('autoRekD','reklamacje',_rek_n,_uid,_uip,_ilp
                          ,'Dokument przyjęcia dostawy niezgodnej zgłoszonej do reklamacji')
                     || undo(); _res:=0
                     || REKVAR.ILP:=_ilp;
                        exec('FindAndGet','#table',DK,__reklpos.PRDK,,"IL_RK+=REKVAR.ILP;put(1)",0)
                     ?}
                  ?}
               ?};
               {? _res || __reklpos.next() || 0 ?}
            ?}
         !};
         end()
      ?}
   ?}
|? ~_first
|| FUN.info('Brak pozycji do reklamacji.'@)
?};

exec('doneREKVAR','reklamacje');
REK_N.cntx_pop();
{? _res & _rek_n<>null() || {? REK_N.f_active() || REK_N.f_seek(_rek_n) || REK_N.seek(_rek_n) ?} ?};
_res


\rekl_mark
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: zaznaczanie rekordu __reklpos - dyspozycja transportu
::   WE: _a - 1-wypelnij 0-zeruj
::----------------------------------------------------------------------------------------------------------------------
_mark:="
   _ok:=0;
   {? _a=0 & __reklpos.WYB='T'
   || _ok:=1;
      __reklpos.WYB:='N';
      __reklpos.SYMRER:='';
      __reklpos.RERREF:='';
      __reklpos.ILR:=0
   |? _a=1 & __reklpos.WYB='N'
   || _ok:=1;
      __reklpos.WYB:='T';
      __reklpos.ILR:=__reklpos.ILS;
      __reklpos.SYMRER:=REKVAR.REK_R().KOD;
      __reklpos.RERREF:=$REKVAR.REK_R
   ?};
   {? _ok || _ok:=__reklpos.put(1) ?};
   _ok
";
_mark(_a);
''


\rekl_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: akceptacja wyboru pozycji do reklamacji
::----------------------------------------------------------------------------------------------------------------------
_selrekl:=0;
__reklpos.cntx_psh();
__reklpos.clear();
{? __reklpos.first()
|| {!
   |? _seldsp:=__reklpos.WYB='T';
      ~_seldsp & __reklpos.next()
   !}
?};
__reklpos.cntx_pop();

{? _seldsp
 | (~_seldsp
    & FUN.ask('Ponieważ nie wskazano żadnej pozycji do reklamacji\n'
              'Dla żadnej pozycji nie zostanie utworzona reklamacja.\n\n'
              'Czy rezygnacja z zarejestrowania reklamacji?'@)
    )
|| sel_exit()
|| ''
?}


\rekl_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: rekord przed
::----------------------------------------------------------------------------------------------------------------------
''


\rekl_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: po popraw pozycje do rekalamacji
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_dokl:=exec('FindAndGet','#table',M,__reklpos.MREF,,"exec('jaka_dok_m','jm',ref())",0);
__reklpos.ILR:=__reklpos.ILR$_dokl;
{? ~__reklpos.KOR & __reklpos.ILR<0
|| FUN.info('Należy podać ilość większą lub równą zero.'@)
|? __reklpos.KOR & __reklpos.ILS<0 & {? __reklpos.ILR<=0 || __reklpos.ILR<__reklpos.ILS || 1 ?}
|| FUN.info('Należy podać ilość większą lub równą %1 oraz nie większą niż zero.'@[form(__reklpos.ILS,,_dokl)])
|? {? __reklpos.KOR || __reklpos.ILS>0 || 1 ?} & __reklpos.ILR>__reklpos.ILS
|| FUN.info('Należy podać ilość mniejszą lub równą %1.'@[form(__reklpos.ILS,,_dokl)])
|| _res:=1
?};
{? _res
|| {? {? __reklpos.KOR || __reklpos.ILR<>0 || __reklpos.ILR>0 ?}
   || __reklpos.WYB:='T';
      {? __reklpos.RERREF=''
      || __reklpos.SYMRER:=REKVAR.REK_R().KOD;
         __reklpos.RERREF:=$REKVAR.REK_R
      ?}
   || __reklpos.WYB:='N';
      __reklpos.SYMRER:='';
      __reklpos.RERREF:=''
   ?}
?};
_res


\rek_a_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [21.14]
:: OPIS: Po edycji rodzaju reklamacji
::----------------------------------------------------------------------------------------------------------------------
exec('rek_a_chk_core','reklamacje',-menu_txt()='popraw')


\rek_a_chk_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [21.14]
:: OPIS: Walidacja rekordu tabeli REK_A (Działania dla reklamacji)
::       - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::   WY: akronim pola / ''
::----------------------------------------------------------------------------------------------------------------------
_chk:=__CHK.record(REK_A,,'KOD','OPIS');
{? _chk=''
|| {? _a
   || _ref:=REK_A.ref()
   || _ref:=null()
   ?};
   _kod:=REK_A.KOD;
   REK_A.cntx_psh();
   REK_A.index('KOD');
   REK_A.prefix(BEER.SZ,_kod,);
   {? REK_A.first() & (~_a | REK_A.ref()<>_ref)
   || FUN.info('Istnieje działanie o kodzie: %1.'@[_kod]);
      _chk:='KOD'
   ?};
   REK_A.cntx_pop()
?};
_chk


\rek_r_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Przed usunieciem rekordu z tabeli REK_R (Rodzaje reklamacji)
::----------------------------------------------------------------------------------------------------------------------
{? REK_R.count()>0
|| FUN.emsg('Rodzaj reklamacji jest używany w systemie i nie można go usunąć.'@);
   0
|| 1
?}


\rek_a_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Przed usunieciem rekordu z tabeli REK_A (Działania dla reklamacji)
::----------------------------------------------------------------------------------------------------------------------
{? REK_A.count()>0
|| FUN.emsg('Działanie jest używane w systemie i nie można go usunąć.'@);
   0
|| 1
?}


\rek_n_miasto_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: przycisk pola REK_N.MIASTO
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT='T'
|| exec('ter_msc_wybierz','teryt','REK_N','MIASTO')
?}


\rek_n_ul_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: przycisk pola REK_N.UL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT='T'
|| exec('ter_uli_wybierz','teryt','REK_N','UL','MIASTO')
?}


\rek_n_teryt_sprawdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: sprawdzanie zgodności z TERYT adresu do korespondencji kontrahenta
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT='T' & XINFO.TER_KNT='T' & ~exec('rek_n_zagr','reklamacje')
|| _par:=exec('ter_sprawdz_a','teryt');
   _par.TAB:='REK_N';
   _par.ULI_P:='UL';
   _par.MSC_P:='MIASTO';
   _wyn:=exec('ter_sprawdz','teryt',_par);
   _wyn.WYNIK
?}


\rek_n_zagr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Sprawdzenie, czy reklamacja jest zagraniczna
::   WE:
::   WY: 1 - tak, 0 - nie
::----------------------------------------------------------------------------------------------------------------------
_zagr:=0;
{? REK_N.KRAJ<>'' & -REK_N.KRAJ<>'polska' & -REK_N.KRAJ<>'pl'
|| _zagr:=1
?};
_zagr


\addr_cho_prev
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [21.14]
:: OPIS: Funkcja przed wyborem adresu
::----------------------------------------------------------------------------------------------------------------------
{? var_press('__temp_addr_cho_kod')<>7 || VAR_DEL.delete('__temp_addr_cho_kod') ?};
__temp_addr_cho_kod:=ADDR_CHO.ref();
ADDR_CHO.f_clear();
ADDR_CHO.prefix();
ADDR_CHO.f_set('N',,'K = \':_a\' or K = \':_b\' or K = \':_c\' or K = \':_d\'','MANUAL','KH','KH_ODB','POS');
~~


\addr_cho_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Wybór miejsca skąd ma być pobrany adres
::----------------------------------------------------------------------------------------------------------------------
TR_Z.TR_ADR:=1;
exec('adres_set_select','transport_wspolne','REK_N',ADDR_CHO.K);
1


\rek_h_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Dołaczenie działania do historii reklamacji
::----------------------------------------------------------------------------------------------------------------------
REK_H.blank();
REK_H.REK_N:=REK_N.ref();
{? REK_H.edit("exec('rek_h_chk','reklamacje')")
|| _dt:=REK_H.DT;
   _gd:=REK_H.GD;
   _dob:=1;
   REK_H.cntx_psh();
   REK_H.index('REKN');
   {? REK_H.last() & (REK_H.DT>_dt | (REK_H.DT=_dt & REK_H.GD>=_gd))
   || _dob:=0
   ?};
   REK_H.cntx_pop();
   {? _dob
   || {? REK_H.add(1)
      || {? REK_H.REK_A().ST<>''
         || REK_N.ST:=REK_H.REK_A().ST;
            REK_N.put()
         ?}
      ?}
   || FUN.info('Istnieje już późniejsze działanie.'@)
   ?}
?};
~~


\rek_h_a_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [21.14]
:: OPIS: Po rodzaju reklamacji
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? REK_H.REK_A=null()
|| FUN.info('Należy wskazać działanie.'@);
   _res:=0
?};
_res


\rek_h_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [21.14]
:: OPIS: Po edycji historii działań dla reklamacji
::----------------------------------------------------------------------------------------------------------------------
exec('rek_h_chk_core','reklamacje',-menu_txt()='popraw')


\rek_h_chk_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [21.14]
:: OPIS: Walidacja rekordu tabeli REK_H (Historia działań dla reklamacji)
::       - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::   WY: akronim pola / ''
::----------------------------------------------------------------------------------------------------------------------
_chk:=__CHK.record(REK_H,,'REK_A');
_chk


\po_rek_r_var
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Po rodzaju reklamacji
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? REKVAR.REK_R=null()
|| FUN.info('Należy wskazać rodzaj reklamacji.'@);
   _res:=0
|| {? REKVAR.ILDNI<=0 || REKVAR.ILDNI:=REKVAR.REK_R().ILDNI ?};
   {? REKVAR.OP='' || REKVAR.OP:=REKVAR.REK_R().OP ?}
?};
_res


\rek_gen_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Sprawdza poprawność wypełnienia pól dla okienka
::   WY: ''-jest ok 'pole'-do wypełnienia
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? REKVAR.FND_UID=''
|| {? REKVAR.FINDKH<>null() | REKVAR.FIND<>''
   || exec('f3_find_rek_n','reklamacje');
      {? REKVAR.FND_UID=''
      || FUN.info('Nie wskazano dokumentu lub zamówienia, którego dotyczy reklamacja.'@);
         _res:='FIND'
      ?}
   || FUN.info('Nie wprowadzono kryteriów wyszukiwania dokumentu lub zamówienia, którego dotyczy reklamacja.'@);
      _res:='FINDKH'
   ?}
|? REKVAR.win_edit('?')<>'REKDOK' & REKVAR.REK_R=null()
|| FUN.info('Należy podać rodzaj reklamacji.'@);
   _res:='REK_R'
?};
_res


\f3_symrer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Klawisz F3 dla rodzaju reklamacji
::----------------------------------------------------------------------------------------------------------------------
_sym:=__reklpos.SYMRER;
_ref:=__reklpos.RERREF;
REK_R.cntx_psh();
REK_R.index('KOD');
REK_R.prefix(BEER.SZ);
_win:=REK_R.win_sel('?');
REK_R.win_sel('SEL');
REK_R.actions('SEL','');
{? (REK_R.find_key(_sym) | REK_R.first()) & REK_R.select(,1)
||  _ref:=$REK_R.ref();
    _sym:=REK_R.KOD
?};
REK_R.cntx_pop();
REK_R.win_sel(_win);
__reklpos.SYMRER:=_sym;
__reklpos.RERREF:=_ref;
1


\be_symrer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed redkacją dla rodzaju reklamacji
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
{? __reklpos.ILR>0
|| {? __reklpos.RERREF=''
   || __reklpos.RERREF:=$REKVAR.REK_R;
      __reklpos.SYMRER:=REKVAR.REK_R().KOD
   ?};
   _res:=1
?};
_res


\ae_symrer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Po redakcji dla rodzaju reklamacji
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_sym:=__reklpos.SYMRER;
_ref:='';
{? __reklpos.ILR<=0
|| __reklpos.SYMRER:='';
   __reklpos.RERREF:='';
   _res:=1
|? _sym<>''
|| REK_R.cntx_psh();
   REK_R.index('KOD');
   REK_R.prefix(BEER.SZ,_sym,);
   {? REK_R.first()
   ||  _ref:=$REK_R.ref();
       _sym:=REK_R.KOD;
       _res:=1
   ?};
   {? ~_res
   || REK_R.prefix(BEER.SZ,_sym);
      {? REK_R.first()
      || _ref:=$REK_R.ref();
         _sym:=REK_R.KOD;
         _res:=1
      ?}
   ?};
   REK_R.cntx_pop()
?};
{? _res
|| __reklpos.SYMRER:=_sym;
   __reklpos.RERREF:=_ref
?};
_res


\addOneRekl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Zakłada jedną reklamację
::   WY: ref nowej reklamacji lub null
::----------------------------------------------------------------------------------------------------------------------
_res:=null();
POM.TAB:='REK_N';
POM.TYPDOK:={? BEER.SZ='S' || 'REK' || 'ZEK' ?};
REK_N.cntx_psh();
REK_N.prefix();
_czy_num:=exec('nr_pola','numery');
REK_N.blank();
REK_N.ODDZ:=ST.ODDZ;
REK_N.SZ:=BEER.SZ;
REK_N.REK_R:=exec('FindAndGet','#table',REK_R,__reklpos.RERREF,,,null());
REK_N.DP:=REKVAR.DP;
REK_N.AR:=REK_N.DP~1;
REK_N.AM:=REK_N.DP~2;
REK_N.ILDNI:=REKVAR.ILDNI;
REK_N.KH:=REKVAR.KH;
REK_N.KH_ODB:=REKVAR.KH_ODB;
REK_N.KH_OSOB:=REKVAR.KH_OSOB;
REK_N.M:=exec('FindAndGet','#table',M,__reklpos.MREF,,,null());
REK_N.OP:=REKVAR.OP;
:: Jeżeli zmieniono rodzaj, a opisy są domyślne z rodzaju to go zmieniamy
{? REKVAR.OP=REKVAR.REK_R().OP & __reklpos.RERREF<>'' & $REKVAR.REK_R<>__reklpos.RERREF
|| _op:=exec('FindAndGet','#table',REK_R,__reklpos.RERREF,,"OP",'');
   {? _op<>'' || REK_N.OP:=_op ?}
?};
_jm:={? __reklpos.JM<>'' || exec('FindInSet','#table','JM','KOD',__reklpos.JM,__reklpos.JM,,,,null()) || null() ?};
REK_N.JM:={? REK_N.M<>null() || {? _jm<>null() || _jm || REK_N.M().J ?} || null() ?};
REK_N.IL:=__reklpos.ILR;
REK_N.STAT_REJ:='N';
REK_N.OSR:=REK_N.USR;
:: faktura
REK_N.FAKS:=__reklpos.SYMFAK;
REK_N.FAKSD:=__reklpos.DATFAK;
REK_N.FAK_DOK:={? __reklpos.FAKREF<>''
               || exec('FindAndGet','#table',FAKS,__reklpos.FAKREF,,"uidref()",'')
               || ''
               ?};
REK_N.FAK_POZ:={? __reklpos.FAPREF<>''
               || exec('FindAndGet','#table',FAP,__reklpos.FAPREF,,"uidref()",'')
               || ''
               ?};
:: zamówienie
REK_N.ZAM:=__reklpos.SYMZAM;
REK_N.ZAMD:=__reklpos.DATZAM;
REK_N.ZAM_DOK:={? __reklpos.ZAMREF<>''
               || exec('FindAndGet','#table',ref_tab(__reklpos.ZAMREF),__reklpos.ZAMREF,,"uidref()",'')
               || ''
               ?};
REK_N.ZAM_POZ:={? __reklpos.ZAPREF<>''
               || exec('FindAndGet','#table',ref_tab(__reklpos.ZAPREF),__reklpos.ZAPREF,,"uidref()",'')
               || ''
               ?};
REK_N.ZAM_ZRP:={? __reklpos.ZRPREF<>''
               || exec('FindAndGet','#table',ref_tab(__reklpos.ZRPREF),__reklpos.ZRPREF,,"uidref()",'')
               || ''
               ?};
:: Projekt
REK_N.PROJEKTY:={? REK_N.FAK_POZ<>''
                || exec('FindAndGet','#table',FAP,REK_N.FAK_POZ,,"FAP.PROJEKTY",null())
                |? REK_N.ZAM_POZ<>''
                || exec('FindAndGet','#table',ref_tab(REK_N.ZAM_POZ),REK_N.ZAM_POZ,,"PROJEKTY",null())
                || null()
                ?};

:: dokument magazynowy
:: REK_N.ND
:: REK_N.NDD
REK_N.ND_DOK:={? __reklpos.NDREF<>''
              || exec('FindAndGet','#table',ND,__reklpos.NDREF,,"uidref()",'')
              || ''
              ?};
:: REK_N.ND_POZ
REK_N.PRDK:=__reklpos.PRDK;

:: dane adresowe
_addr:='KH';
{? REK_N.KH_ODB<>null || _addr:='KH_ODB' ?};
ADDR_CHO.cntx_psh();
ADDR_CHO.index('KOD');
ADDR_CHO.prefix(_addr,);
{? ADDR_CHO.first() || REK_N.ADDR_CHO:=ADDR_CHO.ref() ?};
ADDR_CHO.cntx_pop();
exec('adres_set_select','transport_wspolne','REK_N',_addr,1);

:: dane kontaktowe
{? REKVAR.EM<>'' || REK_N.EM:=REKVAR.EM ?};
{? REKVAR.TEL<>'' || REK_N.TEL:=REKVAR.TEL ?};

{? _czy_num & REK_N.add()
|| _ref:=#REK_N.ref();
   REK_N.memo_set(REK_N.OP,'OPIS');
   params_exec('fak_numer','numery','PACZKA',0);
   exec('znak','numery','REK_N');
   {? REK_N.put(1)
   || _res:=REK_N.ref();
      {? __reklpos.FAPREF<>''
      || exec('FindAndGet','#table',FAP,__reklpos.FAPREF,,"IL_RK+=REK_N.IL;put(1)",0)
      ?};
      {? __reklpos.ZRPREF<>''
      || exec('FindAndGet','#table',ref_tab(__reklpos.ZRPREF),__reklpos.ZRPREF,,"IL_RK+=REK_N.IL;put(1)",0)
      ?}
   || oldnumer:=1;
      numer:=REK_N.NR;
      exec('nr_old','numery');
      REK_N.del()
   ?}
?};
REK_N.cntx_pop();
_res


\po_osob_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przepisuje dane na podstawie wskazanej osoby
::   WE: [_a] - tabela - domyślnie REK_N
::----------------------------------------------------------------------------------------------------------------------
_tab:={? var_pres('_a')=type_of(REKVAR) || _a || REK_N ?};

{? _tab.KH_OSOB<>null()
|| _em:=_tab.KH_OSOB().EMAIL;
   _tel:=_tab.KH_OSOB().TEL;
   _oki:=(_em<>'' | _tel<>'') & (_em<>_tab.EM | _tel<>_tab.TEL);
   _wyp:=_tab.EM<>'' | _tab.TEL<>'';

   {? _oki & (~_wyp | FUN.ask('Czy zamienić dane dotyczące e-mail i telefonu na podstawie danych osoby kontaktowej?'@))
   || _tab.EM:=_em;
      _tab.TEL:=_tel
   ?}
?};
1


\hist_rekl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: wyświetla historię reklamacji dla danego dokumentu
::   WE: _a - uid ref dokumentu lub zamówienia
::----------------------------------------------------------------------------------------------------------------------
_dok:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || '' ?};

{? _dok<>''
|| _tab:=ref_tab(_dok);
   _ind:='';
   _beersz:=BEER.SZ;
   {? _tab=FAKS               || _ind:='FAKS'
   |? _tab=ZK_N | _tab=ZD_NAG || _ind:='ZAM'
   |? _tab=ND                 || BEER.SZ:='Z'; _ind:='ND'
   ?};
   {? _ind<>''
   || exec('f_DISP_EDIT','reklamacje');
      REK_N.cntx_psh();
      REK_N.index(_ind);
      REK_N.prefix(_dok);
      {? REK_N.first()
      || _winold:=REK_N.win_sel('?');
         REK_N.win_sel('WER_DOK'+BEER.SZ);
         REK_N.win_fml('WER_DOK'+BEER.SZ,,'SYM',,'ICON_BEFORE',exec('rek_n_sym_ib','reklamacje'));
         REK_N.win_fml('WER_DOK'+BEER.SZ,,'M','KTM','ICON_BEFORE',exec('rek_n_sym_it','reklamacje'));
         REK_N.win_fml('WER_DOKS',,'ILDNI',,'ICON_BEFORE',exec('rek_n_sym_iz','reklamacje'));
         REK_N.select();
         REK_N.win_sel(_winold)
      || _opis:={? _ind='FAKS' || 'faktury'@ || 'zamówienia'@?};
         _sym:=exec('FindAndGet','#table',_tab,_dok,,"SYM",'');
         FUN.info('Nie znaleziono aktywnych reklamacji dla %1 o symbolu: %2.'@[_opis,_sym])
      ?};
      REK_N.cntx_pop();
      BEER.SZ:=_beersz
   ?}
?};
~~


\po_rek_n_ilr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: po edycji pola IL
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_iler:=fld();
{? _iler>0
|| {? REK_N.FAK_POZ<>''
   || _ilep:=exec('FindAndGet','#table',FAP,REK_N.FAK_POZ,,"IL-IL_RK",0)+REKVAR.ILR;
      {? _iler>_ilep
      || _sym:=exec('FindAndGet','#table',FAKS,REK_N.FAK_DOK,,"SYM",'');
         FUN.info('Podano zbyt dużą ilość do reklamacji.\n\n'
                  'Reklamacja dotyczy dokumentu: %1.\n'
                  'Dostępna ilość do reklamacji: %2 %3.'@[_sym,form(_ilep,,,'99'),REK_N.JM().KOD]);
         REK_N.IL:=_ilep;
         _res:=0
      ?}
   ?}
?};
_res


\rek_n_sym_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Formuła ikony dla REK_N
::----------------------------------------------------------------------------------------------------------------------
"{? REK_N.STAT_REJ='T'
 || {? REK_N.RESULT='T'
    || exec('zaakceptowany','icon')
    || exec('zakonczony','icon')
    ?}
 |? REK_N.STAT_REJ='X'
 || {? REK_N.RESULT='T'
    || exec('zrealizowany','icon')
    || exec('zamkniety0','icon')
    ?}
 |? REK_N.STAT_REJ='Z'
 || exec('zarejestrowany','icon')
 |? REK_N.STAT_REJ='N'
 || exec('pusta','#icon')
 || exec('pusta','#icon')
 ?}
"


\rek_n_sym_it
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła określająca ikony
::----------------------------------------------------------------------------------------------------------------------
"{? REK_N.FAK_POZ<>'' | REK_N.ZAM_ZRP<>'' | REK_N.PRDK<>''
 || exec('zafakturowany','icon')
 || exec('pusta','#icon')
 ?}
"


\rek_n_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Formuła ikony dla REK_N
::----------------------------------------------------------------------------------------------------------------------
_wyn:={? REK_N.STAT_REJ='Z' & (REK_N.DP+REK_N.ILDNI)<date() || 'REK_N#01#01'
      || ''
      ?};
_wyn


\pr_find_rek_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed redakcja REKVAR.FND
::----------------------------------------------------------------------------------------------------------------------
REKVAR.FND_UID=''


\f3_find_rek_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Klawisz F3 dla REKVAR.FND
::----------------------------------------------------------------------------------------------------------------------
{? REKVAR.FINDKH=null() & REKVAR.FIND=''
|| FUN.info('Należy wskazać kontrahenta lub symbol do wyszukiwania.\nWyszukiwanie niemożliwe.'@)
|? REKVAR.OKR=null()
|| FUN.info('Należy wskazać rok dla wyszukiwania.\nWyszukiwanie niemożliwe.'@)
|? REKVAR.TRYB
|| exec('f3_find_rek_d','reklamacje')
|| _rok:=REKVAR.OKR().ROK;
   __reklfnd.clear(); {? __reklfnd.first() || {! |? __reklfnd.del() !} ?};
   _buf:=tab_tmp(2,'FAK','STRING[16]','','REK','STRING[16]','','ZAM','STRING[16]','');
   exec('fak_psh','open_tab');
   exec('mag_psh','open_tab');
   {? BEER.SZ='S' || exec('openz_psh','open_tab') || exec('openzd_psh','open_tab') ?};
   OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1,_rok);
   {? OKR.first()
   || {!
      |? exec('fak_open','open_tab',ST.ODDZ,form(OKR.ROK-2000,-2,0,'99'));
         exec('mag_open','open_tab',ST.ODDZ,form(OKR.ROK-2000,-2,0,'99'));
         {? BEER.SZ='S'
         || exec('openz','open_tab',ST.ODDZ+form(OKR.ROK-2000,-2,0,'99'))
         || exec('openzd','open_tab',ST.ODDZ+form(OKR.ROK-2000,-2,0,'99'))
         ?};
::       pobranie faktur
         {? REKVAR.FINDKH<>null()
         || FAKS.index('FAK_KH');
            FAKS.prefix(BEER.SZ,REKVAR.FINDKH().KOD,)
         || FAKS.index('FAK_SYM');
            FAKS.prefix(BEER.SZ)
         ?};
         {? FAKS.first()
          & FAKS.find_tab('first','SYM',,':-',REKVAR.FIND,'WHERE',,'<>','L','T','KOR','=','N','STAT_REJ',,'=','T')
         || {!
            |? _buf.clear();
               _buf.prefix($FAKS.ref(),);
               {? ~_buf.first()
               || __reklfnd.clear();
                  __reklfnd.blank();
                  __reklfnd.SYMFAK:=FAKS.SYM;
                  __reklfnd.DATFAK:=FAKS.DW;
                  __reklfnd.TYPFAK:=FAKS.T().T;
                  __reklfnd.UIDFAK:=FAKS.uidref();
                  __reklfnd.KHKOD:=FAKS.KH().KOD;
                  __reklfnd.KHSKR:=FAKS.KH().SKR;
                  __reklfnd.KHNAZ:=FAKS.KH().NAZ;
                  __reklfnd.REFKH:=$FAKS.KH;
                  __reklfnd.add(1);
                  _buf.clear();
                  _buf.FAK:=$FAKS.ref();
                  _buf.ZAM:='';
                  _buf.REK:=$__reklfnd.ref();
                  _buf.add(1)
               ?};
               FAKS.find_tab('next','SYM',,':-',REKVAR.FIND,'WHERE',,'<>','L','T','KOR','=','N','STAT_REJ',,'=','T')
            !}
         ?};
::       pobranie dokumentów magazynowych
         {? BEER.SZ<>'S'
         || {? REKVAR.FINDKH<>null()
            || ND.index('REKKH');
               ND.prefix('T','T',REKVAR.FINDKH)
            || ND.index('REKKH');
               ND.prefix('T','T')
            ?};
            {? ND.first()
             & ND.find_tab('first','SYM',,':-',REKVAR.FIND,'TYP','KOOP','<>','T','STAT_REJ',,'=','T')
            || {!
               |? DK.index('DOKMAG');
                  DK.prefix(ND.ref());
                  {? DK.first() & DK.find_tab('first','STATS','KIND','=','N')
                  || _isadd:=0;
                     {!
                     |? {? DK.IL-DK.IL_RK>0
                        || _isadd:=1;
                           _buf.clear();
                           _buf.prefix($ND.ref(),);
                           {? ~_buf.first()
                           || __reklfnd.clear();
                              __reklfnd.blank();
                              __reklfnd.SYMFAK:=ND.SYM;
                              __reklfnd.DATFAK:=ND.D;
                              __reklfnd.TYPFAK:=ND.TYP().T;
                              __reklfnd.UIDFAK:=ND.uidref();
                              __reklfnd.KHKOD:=ND.KH().KOD;
                              __reklfnd.KHSKR:=ND.KH().SKR;
                              __reklfnd.KHNAZ:=ND.KH().NAZ;
                              __reklfnd.REFKH:=$ND.KH;
                              __reklfnd.add(1);
                              _buf.clear();
                              _buf.FAK:=$ND.ref();
                              _buf.ZAM:='';
                              _buf.REK:=$__reklfnd.ref();
                              _buf.add(1)
                           ?}
                        ?};
                        ~_isadd & DK.find_tab('next','STATS','KIND','=','N')
                     !}
                  ?};
                  ND.find_tab('next','SYM',,':-',REKVAR.FIND,'TYP','KOOP','<>','T','STAT_REJ',,'=','T')
               !}
            ?}
         ?};
::       pobranie zamówień
         {? BEER.SZ='S'
         || ZK_N.index('ZAM_KL');
            {? REKVAR.FINDKH<>null() || ZK_N.prefix('Z',REKVAR.FINDKH) || ZK_N.prefix('Z') ?};
            {? ZK_N.first() & ZK_N.find_tab('first','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T','R',,'=',_rok)
            || {!
               |? _add:=1;
                  ZK_RN.index('ZAM');
                  ZK_RN.prefix(ZK_N.ref());
                  {? ZK_RN.first()
                  || {!
                     |? {? {? (+ZK_RN.ND)=16
                           || exec('FindAndGet','#table',ND,ZK_RN.ND,,"STAT_REJ='T'",0)
                           || ZK_RN.SWZ='- USŁUGI -'
                           ?}
                         & ZK_RN.FAKS<>''
                         & (_uidfak:=exec('FindAndGet','#table',FAKS,ZK_RN.FAKS,
                                      ,"{? STAT_REJ='T' || uidref() || '' ?}",''); _uidfak<>'')
                        || _jest:=0;
                           _buf.clear();
                           _buf.prefix(ZK_RN.FAKS,);
                           {? _buf.first()
                           || {!
                              |? {? _buf.ZAM=$ZK_N.ref()
                                 || _jest:=1
                                 |? (__reklfnd.clear(); __reklfnd.seek(_buf.REK)) & __reklfnd.UIDZAM=''
                                 || __reklfnd.SYMZAM:=ZK_N.SYM;
                                    __reklfnd.DATZAM:=ZK_N.DP;
                                    __reklfnd.TYPZAM:=ZK_N.T().T;
                                    __reklfnd.UIDZAM:=ZK_N.uidref();
                                    __reklfnd.KHKOD:=ZK_N.KH().KOD;
                                    __reklfnd.KHSKR:=ZK_N.KH().SKR;
                                    __reklfnd.KHNAZ:=ZK_N.KH().NAZ;
                                    __reklfnd.REFKH:=$ZK_N.KH;
                                    __reklfnd.put(1);
                                    _buf.ZAM:=$ZK_N.ref();
                                    _jest:=1
                                 ?};
                                 ~_jest & _buf.next()
                              !}
                           ?};
                           {? ~_jest
                           || __reklfnd.clear();
                              __reklfnd.blank();
                              __reklfnd.SYMFAK:=exec('FindAndGet','#table',FAKS,ZK_RN.FAKS,,"SYM",'');
                              __reklfnd.DATFAK:=exec('FindAndGet','#table',FAKS,ZK_RN.FAKS,,"DW",'');
                              __reklfnd.TYPFAK:=exec('FindAndGet','#table',FAKS,ZK_RN.FAKS,,"T().T",'');
                              __reklfnd.UIDFAK:=_uidfak;
                              __reklfnd.SYMZAM:=ZK_N.SYM;
                              __reklfnd.DATZAM:=ZK_N.DP;
                              __reklfnd.TYPZAM:=ZK_N.T().T;
                              __reklfnd.UIDZAM:=ZK_N.uidref();
                              __reklfnd.KHKOD:=ZK_N.KH().KOD;
                              __reklfnd.KHSKR:=ZK_N.KH().SKR;
                              __reklfnd.KHNAZ:=ZK_N.KH().NAZ;
                              __reklfnd.REFKH:=$ZK_N.KH;
                              __reklfnd.add(1);
                              {? __reklfnd.UIDFAK<>''
                              || _buf.clear();
                                 _buf.FAK:=ZK_RN.FAKS;
                                 _buf.ZAM:=$ZK_N.ref();
                                 _buf.REK:=$__reklfnd.ref();
                                 _buf.add(1)
                              ?}
                           ?}
                        || _add:=0
                        ?};
                        ZK_RN.next()
                     !}
                  ?};
                  {? ~_add
                  || __reklfnd.clear();
                     __reklfnd.blank();
                     __reklfnd.SYMZAM:=ZK_N.SYM;
                     __reklfnd.DATZAM:=ZK_N.DP;
                     __reklfnd.TYPZAM:=ZK_N.T().T;
                     __reklfnd.UIDZAM:=ZK_N.uidref();
                     __reklfnd.KHKOD:=ZK_N.KH().KOD;
                     __reklfnd.KHSKR:=ZK_N.KH().SKR;
                     __reklfnd.KHNAZ:=ZK_N.KH().NAZ;
                     __reklfnd.REFKH:=$ZK_N.KH;
                     __reklfnd.add(1)
                  ?};
                  ZK_N.find_tab('next','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T','R',,'=',_rok)
               !}
            ?}
         || ZD_NAG.index('KH');
            {? REKVAR.FINDKH<>null() || ZD_NAG.prefix(REKVAR.FINDKH) || ZD_NAG.prefix() ?};
            {? ZD_NAG.first() & ZD_NAG.find_tab('first','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T','R',,'=',_rok)
            || {!
               |? _add:=1;
                  ZD_RN.index('ZAM');
                  ZD_RN.prefix(ZD_NAG.ref());
                  {? ZD_RN.first()
                  || {!
                     |? {? {? (+ZD_RN.ND)=16
                           || exec('FindAndGet','#table',ND,ZD_RN.ND,,"STAT_REJ='T'",0)
                           || ZD_RN.SPZ='- USŁUGI -'
                           ?}
                        || _lstfaks:=exec('zd_rn2FAKS','powdok',ZD_RN.ref());
                           {? (+ZD_RN.ND)=16
                           || _lstfaks.blank();
                              _lstfaks.SQL:=ZD_RN.ND;
                              _lstfaks.UID:=exec('FindAndGet','#table',ND,ZD_RN.ND,,"uidref()",'');
                              _lstfaks.add(1)
                           ?};
                           {? _lstfaks.first()
                           || {!
                              |? _jest:=0;
                                 _buf.clear();
                                 _buf.prefix(_lstfaks.SQL,);
                                 {? _buf.first()
                                 || {!
                                    |? {? _buf.ZAM=$ZD_NAG.ref()
                                       || _jest:=1
                                       |? (__reklfnd.clear(); __reklfnd.seek(_buf.REK)) & __reklfnd.UIDZAM=''
                                       || __reklfnd.SYMZAM:=ZD_NAG.SYM;
                                          __reklfnd.DATZAM:=ZD_NAG.DATA;
                                          __reklfnd.TYPZAM:=ZD_NAG.T().T;
                                          __reklfnd.UIDZAM:=ZD_NAG.uidref();
                                          __reklfnd.KHKOD:=ZD_NAG.KH().KOD;
                                          __reklfnd.KHSKR:=ZD_NAG.KH().SKR;
                                          __reklfnd.KHNAZ:=ZD_NAG.KH().NAZ;
                                          __reklfnd.REFKH:=$ZD_NAG.KH;
                                          __reklfnd.put(1);
                                          _buf.ZAM:=$ZD_NAG.ref();
                                          _jest:=1
                                       ?};
                                       ~_jest & _buf.next()
                                    !}
                                 ?};
                                 {? ~_jest
                                 || __reklfnd.clear();
                                    __reklfnd.blank();
                                    {? ref_tab(_lstfaks.SQL)=FAKS
                                    || __reklfnd.SYMFAK:=exec('FindAndGet','#table',FAKS,_lstfaks.SQL,,"SYM",'');
                                       __reklfnd.DATFAK:=exec('FindAndGet','#table',FAKS,_lstfaks.SQL,,"DW",'');
                                       __reklfnd.TYPFAK:=exec('FindAndGet','#table',FAKS,_lstfaks.SQL,,"T().T",'')
                                    |? ref_tab(_lstfaks.SQL)=ND
                                    || __reklfnd.SYMFAK:=exec('FindAndGet','#table',ND,_lstfaks.SQL,,"SYM",'');
                                       __reklfnd.DATFAK:=exec('FindAndGet','#table',ND,_lstfaks.SQL,,"D",'');
                                       __reklfnd.TYPFAK:=exec('FindAndGet','#table',ND,_lstfaks.SQL,,"TYP().T",'')
                                    ?};
                                    __reklfnd.UIDFAK:=_lstfaks.UID;
                                    __reklfnd.SYMZAM:=ZD_NAG.SYM;
                                    __reklfnd.DATZAM:=ZD_NAG.DATA;
                                    __reklfnd.TYPZAM:=ZD_NAG.T().T;
                                    __reklfnd.UIDZAM:=ZD_NAG.uidref();
                                    __reklfnd.KHKOD:=ZD_NAG.KH().KOD;
                                    __reklfnd.KHSKR:=ZD_NAG.KH().SKR;
                                    __reklfnd.KHNAZ:=ZD_NAG.KH().NAZ;
                                    __reklfnd.REFKH:=$ZD_NAG.KH;
                                    __reklfnd.add(1);
                                    {? __reklfnd.UIDFAK<>''
                                    || _buf.clear();
                                       _buf.FAK:=_lstfaks.SQL;
                                       _buf.ZAM:=$ZD_NAG.ref();
                                       _buf.REK:=$__reklfnd.ref();
                                       _buf.add(1)
                                    ?}
                                 ?};
                                 _lstfaks.next()
                              !}
                           || _add:=0
                           ?};
                           obj_del(_lstfaks)
                        ?};
                        ZD_RN.next()
                     !}
                  ?};
                  {? ~_add
                  || __reklfnd.clear();
                     __reklfnd.blank();
                     __reklfnd.SYMZAM:=ZD_NAG.SYM;
                     __reklfnd.DATZAM:=ZD_NAG.DATA;
                     __reklfnd.TYPZAM:=ZD_NAG.T().T;
                     __reklfnd.UIDZAM:=ZD_NAG.uidref();
                     __reklfnd.KHKOD:=ZD_NAG.KH().KOD;
                     __reklfnd.KHSKR:=ZD_NAG.KH().SKR;
                     __reklfnd.KHNAZ:=ZD_NAG.KH().NAZ;
                     __reklfnd.REFKH:=$ZD_NAG.KH;
                     __reklfnd.add(1)
                  ?};
                  ZD_NAG.find_tab('next','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T','R',,'=',_rok)
               !}
            ?}
         ?};
         OKR.next()
      !}
   ?};
   OKR.cntx_pop();
   {? BEER.SZ='S' || exec('openz','open_tab',ST.ODDZ+'__') || exec('openzd','open_tab',ST.ODDZ+'__') ?};
:: pobranie aktywnych zamówień
   {? BEER.SZ='S'
   || ZK_N.index('ZAM_KL');
      {? REKVAR.FINDKH<>null() || ZK_N.prefix('Z',REKVAR.FINDKH) || ZK_N.prefix('Z') ?};
      {? ZK_N.first() & ZK_N.find_tab('first','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T','R',,'=',_rok)
      || {!
         |? _add:=1;
            ZK_RN.index('ZAM');
            ZK_RN.prefix(ZK_N.ref());
            {? ZK_RN.first()
            || {!
               |? {? {? (+ZK_RN.ND)=16
                     || exec('FindAndGet','#table',ND,ZK_RN.ND,,"STAT_REJ='T'",0)
                     || ZK_RN.SWZ='- USŁUGI -'
                     ?}
                   & ZK_RN.FAKS<>''
                   & (_uidfak:=exec('FindAndGet','#table',FAKS,ZK_RN.FAKS,
                                ,"{? STAT_REJ='T' || uidref() || '' ?}",''); _uidfak<>'')
                  || _jest:=0;
                     _buf.clear();
                     _buf.prefix(ZK_RN.FAKS,);
                     {? _buf.first()
                     || {!
                        |? {? _buf.ZAM=$ZK_N.ref()
                           || _jest:=1
                           |? (__reklfnd.clear(); __reklfnd.seek(_buf.REK)) & __reklfnd.UIDZAM=''
                           || __reklfnd.SYMZAM:=ZK_N.SYM;
                              __reklfnd.DATZAM:=ZK_N.DP;
                              __reklfnd.TYPZAM:=ZK_N.T().T;
                              __reklfnd.UIDZAM:=ZK_N.uidref();
                              __reklfnd.KHKOD:=ZK_N.KH().KOD;
                              __reklfnd.KHSKR:=ZK_N.KH().SKR;
                              __reklfnd.KHNAZ:=ZK_N.KH().NAZ;
                              __reklfnd.REFKH:=$ZK_N.KH;
                              __reklfnd.put(1);
                              _buf.ZAM:=$ZK_N.ref();
                              _buf.put(1);
                              _jest:=1
                           ?};
                           ~_jest & _buf.next()
                        !}
                     ?};
                     {? ~_jest
                     || __reklfnd.clear();
                        __reklfnd.blank();
                        __reklfnd.SYMFAK:=exec('FindAndGet','#table',FAKS,ZK_RN.FAKS,,"SYM",'');
                        __reklfnd.DATFAK:=exec('FindAndGet','#table',FAKS,ZK_RN.FAKS,,"DW",'');
                        __reklfnd.TYPFAK:=exec('FindAndGet','#table',FAKS,ZK_RN.FAKS,,"T().T",'');
                        __reklfnd.UIDFAK:=_uidfak;
                        __reklfnd.SYMZAM:=ZK_N.SYM;
                        __reklfnd.DATZAM:=ZK_N.DP;
                        __reklfnd.TYPZAM:=ZK_N.T().T;
                        __reklfnd.UIDZAM:=ZK_N.uidref();
                        __reklfnd.KHKOD:=ZK_N.KH().KOD;
                        __reklfnd.KHSKR:=ZK_N.KH().SKR;
                        __reklfnd.KHNAZ:=ZK_N.KH().NAZ;
                        __reklfnd.REFKH:=$ZK_N.KH;
                        __reklfnd.add(1);
                        {? __reklfnd.UIDFAK<>''
                        || _buf.clear();
                           _buf.FAK:=ZK_RN.FAKS;
                           _buf.ZAM:=$ZK_N.ref();
                           _buf.REK:=$__reklfnd.ref();
                           _buf.add(1)
                        ?}
                     ?}
                  || _add:=0
                  ?};
                  ZK_RN.next()
               !}
            ?};
            {? ~_add
            || __reklfnd.clear();
               __reklfnd.blank();
               __reklfnd.SYMZAM:=ZK_N.SYM;
               __reklfnd.DATZAM:=ZK_N.DP;
               __reklfnd.TYPZAM:=ZK_N.T().T;
               __reklfnd.UIDZAM:=ZK_N.uidref();
               __reklfnd.KHKOD:=ZK_N.KH().KOD;
               __reklfnd.KHSKR:=ZK_N.KH().SKR;
               __reklfnd.KHNAZ:=ZK_N.KH().NAZ;
               __reklfnd.REFKH:=$ZK_N.KH;
               __reklfnd.add(1)
            ?};
            ZK_N.find_tab('next','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T','R',,'=',_rok)
         !}
      ?}
   || ZD_NAG.index('KH');
      {? REKVAR.FINDKH<>null() || ZD_NAG.prefix(REKVAR.FINDKH) || ZD_NAG.prefix() ?};
      {? ZD_NAG.first() & ZD_NAG.find_tab('first','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T','R',,'=',_rok)
      || {!
         |? _add:=1;
            ZD_RN.index('ZAM');
            ZD_RN.prefix(ZD_NAG.ref());
            {? ZD_RN.first()
            || {!
               |? {? {? (+ZD_RN.ND)=16
                     || exec('FindAndGet','#table',ND,ZD_RN.ND,,"STAT_REJ='T'",0)
                     || ZD_RN.SPZ='- USŁUGI -'
                     ?}
                  || _lstfaks:=exec('zd_rn2FAKS','powdok',ZD_RN.ref());
                     {? (+ZD_RN.ND)=16
                     || _lstfaks.blank();
                        _lstfaks.SQL:=ZD_RN.ND;
                        _lstfaks.UID:=exec('FindAndGet','#table',ND,ZD_RN.ND,,"uidref()",'');
                        _lstfaks.add(1)
                     ?};
                     {? _lstfaks.first()
                     || {!
                        |? _jest:=0;
                           _buf.clear();
                           _buf.prefix(_lstfaks.SQL,);
                           {? _buf.first()
                           || {!
                              |? {? _buf.ZAM=$ZD_NAG.ref()
                                 || _jest:=1
                                 |? (__reklfnd.clear(); __reklfnd.seek(_buf.REK)) & __reklfnd.UIDZAM=''
                                 || __reklfnd.SYMZAM:=ZD_NAG.SYM;
                                    __reklfnd.DATZAM:=ZD_NAG.DATA;
                                    __reklfnd.TYPZAM:=ZD_NAG.T().T;
                                    __reklfnd.UIDZAM:=ZD_NAG.uidref();
                                    __reklfnd.KHKOD:=ZD_NAG.KH().KOD;
                                    __reklfnd.KHSKR:=ZD_NAG.KH().SKR;
                                    __reklfnd.KHNAZ:=ZD_NAG.KH().NAZ;
                                    __reklfnd.REFKH:=$ZD_NAG.KH;
                                    __reklfnd.put(1);
                                    _buf.ZAM:=$ZD_NAG.ref();
                                    _jest:=1
                                 ?};
                                 ~_jest & _buf.next()
                              !}
                           ?};
                           {? ~_jest
                           || __reklfnd.clear();
                              __reklfnd.blank();
                              {? ref_tab(_lstfaks.SQL)=FAKS
                              || __reklfnd.SYMFAK:=exec('FindAndGet','#table',FAKS,_lstfaks.SQL,,"SYM",'');
                                 __reklfnd.DATFAK:=exec('FindAndGet','#table',FAKS,_lstfaks.SQL,,"DW",'');
                                 __reklfnd.TYPFAK:=exec('FindAndGet','#table',FAKS,_lstfaks.SQL,,"T().T",'')
                              |? ref_tab(_lstfaks.SQL)=ND
                              || __reklfnd.SYMFAK:=exec('FindAndGet','#table',ND,_lstfaks.SQL,,"SYM",'');
                                 __reklfnd.DATFAK:=exec('FindAndGet','#table',ND,_lstfaks.SQL,,"D",'');
                                 __reklfnd.TYPFAK:=exec('FindAndGet','#table',ND,_lstfaks.SQL,,"TYP().T",'')
                              ?};
                              __reklfnd.UIDFAK:=_lstfaks.UID;
                              __reklfnd.SYMZAM:=ZD_NAG.SYM;
                              __reklfnd.DATZAM:=ZD_NAG.DATA;
                              __reklfnd.TYPZAM:=ZD_NAG.T().T;
                              __reklfnd.UIDZAM:=ZD_NAG.uidref();
                              __reklfnd.KHKOD:=ZD_NAG.KH().KOD;
                              __reklfnd.KHSKR:=ZD_NAG.KH().SKR;
                              __reklfnd.KHNAZ:=ZD_NAG.KH().NAZ;
                              __reklfnd.REFKH:=$ZD_NAG.KH;
                              __reklfnd.add(1);
                              {? __reklfnd.UIDFAK<>''
                              || _buf.clear();
                                 _buf.FAK:=_lstfaks.SQL;
                                 _buf.ZAM:=$ZD_NAG.ref();
                                 _buf.REK:=$__reklfnd.ref();
                                 _buf.add(1)
                              ?}
                           ?};
                           _lstfaks.next()
                        !}
                     || _add:=0
                     ?};
                     obj_del(_lstfaks)
                  ?};
                  ZD_RN.next()
               !}
            ?};
            {? ~_add
            || __reklfnd.clear();
               __reklfnd.blank();
               __reklfnd.SYMZAM:=ZD_NAG.SYM;
               __reklfnd.DATZAM:=ZD_NAG.DATA;
               __reklfnd.TYPZAM:=ZD_NAG.T().T;
               __reklfnd.UIDZAM:=ZD_NAG.uidref();
               __reklfnd.KHKOD:=ZD_NAG.KH().KOD;
               __reklfnd.KHSKR:=ZD_NAG.KH().SKR;
               __reklfnd.KHNAZ:=ZD_NAG.KH().NAZ;
               __reklfnd.REFKH:=$ZD_NAG.KH;
               __reklfnd.add(1)
            ?};
            ZD_NAG.find_tab('next','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T','R',,'=',_rok)
         !}
      ?}
   ?};
   obj_del(_buf);
   exec('fak_pop','open_tab');
   exec('mag_pop','open_tab');
   {? BEER.SZ='S' || exec('openz_pop','open_tab') || exec('openzd_pop','open_tab') ?};
   __reklfnd.clear();
   {? __reklfnd.first()
   || {? __reklfnd.select()
      || _fak:=0;
         _zam:=0;
         _dok:=0;
         REKVAR.FINDKH:=exec('FindAndGet','#table',KH,__reklfnd.REFKH,,,null());
         REKVAR.FND_UID:={? __reklfnd.UIDFAK<>''
                         || {? ref_tab(__reklfnd.UIDFAK)=FAKS || _fak:=1 || _dok:=1 ?};
                            __reklfnd.UIDFAK
                         || _zam:=1;
                            __reklfnd.UIDZAM
                         ?};
         REKVAR.FIND:={? __reklfnd.UIDFAK<>'' || __reklfnd.SYMFAK || __reklfnd.SYMZAM ?};
         {? _fak
         || exec('genFAKS','reklamacje',REKVAR.FND_UID)
         |? _zam & BEER.SZ='S'
         || exec('genZAM','reklamacje',REKVAR.FND_UID)
         |? _zam & BEER.SZ='Z'
         || exec('genDST','reklamacje',REKVAR.FND_UID)
         |? _dok
         || exec('genMAG','reklamacje',REKVAR.FND_UID,__reklfnd.SYMZAM,__reklfnd.DATZAM,__reklfnd.TYPZAM)
         || ''
         ?}
      ?}
   ?}
?};
REKVAR.FIND


\po_find_rek_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Po redakcji dla REKVAR.FND
::----------------------------------------------------------------------------------------------------------------------
REKVAR.FND_UID<>'' | REKVAR.TRYB=1


\genFAKS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: generuje pozycje do reklamacji dla wskazanego FAKS-a
::   WE: _a - wskazanie na FAKS-a
::----------------------------------------------------------------------------------------------------------------------
_dok:={? var_pres('_a')=type_of(null())
      || _a
      |? var_pres('_a')=type_of('') & (+_a )=48
      || exec('FindAndGet','#table',FAKS,_a,,,null())
      || null()
      ?};
{? _dok=null() || return(0) ?};

_msk:=ref_name(_dok)+3;
exec('fak_psh','open_tab');
exec('fak_open','open_tab',1+_msk,_msk+2);
FAKS.prefix();
{? FAKS.seek(_dok)
|| REKVAR.FINDKH:=FAKS.KH;
   REKVAR.FIND:=FAKS.SYM;
   REKVAR.FND_UID:=FAKS.uidref();
   FAP.index('FAP');
   FAP.prefix(_dok);
   {? FAP.first()
   || _opis:='%1 o symbolu %2 z dnia %3'@[FAP.FAKS().T().T,FAP.FAKS().SYM,$FAP.FAKS().DW];
      REKVAR.DOK:=FAKS.SYM;
      REKVAR.TYPDOK:=FAKS.T;
      REKVAR.TYPTYP:=REKVAR.TYPDOK().T;
      REKVAR.TYPNAZ:=REKVAR.TYPDOK().NAZ;
      REKVAR.DATDOK:=FAKS.DW;
      REKVAR.DP:=date();
      REKVAR.KH:=FAKS.KH;
      REKVAR.KH_ODB:=FAKS.KH_ODB;
      {!
      |? __reklpos.blank();
         __reklpos.SHOW:='T';
         __reklpos.POS:=FAP.POZ;
         __reklpos.POZ:=0;
         __reklpos.KTM:=FAP.M().KTM;
         __reklpos.NAZ:=FAP.M().N;
         __reklpos.JM:={? FAP.FAKS().SZ='Z' | (FAP.M().J2<>null() & exec('czyJS','jm',FAP.M))
                       || FAP.JM().KOD
                       || FAP.J2().KOD
                       ?};
         __reklpos.ILS:=FAP.IL-FAP.IL_RK;
         __reklpos.ILR:=0;
         __reklpos.MREF:=$FAP.M;
         __reklpos.FAPREF:=$FAP.ref();
         __reklpos.ZAPREF:='';
         __reklpos.FAKREF:=$FAP.FAKS;
         __reklpos.ZAMREF:='';
         __reklpos.ZRPREF:='';
         __reklpos.RERREF:='';
         __reklpos.SYMFAK:=FAP.FAKS().SYM;
         __reklpos.SYMZAM:='';
         __reklpos.SYMRER:='';
         __reklpos.DATFAK:=FAP.FAKS().DW;
         __reklpos.DATZAM:=date(0,0,0);
         __reklpos.TYPFAK:=FAP.FAKS().T().T;
         __reklpos.TYPZAM:='';
         __reklpos.DATREK:=date();
         __reklpos.WYB:='N';
         {? __reklpos.ILS>0 || __reklpos.add(1) ?};
         FAP.next()
      !}
   ?}
?};
exec('fak_pop','open_tab');
~~


\dispfak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Podgląd dokumentu sprzedaży zakupu
::   WE: _a - uid dokumentu
::----------------------------------------------------------------------------------------------------------------------
_dok:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || '' ?};
{? _dok<>'' & ref_tab(_dok)=FAKS & (';FW'*(1+menu_txt()))>1
|| _name:=ref_name(_dok);
   FAKS.cntx_psh();
   FAP.cntx_psh();
   FAKS.prefix();
   FAP.prefix();
   FAKS.use(_name);
   FAP.use('fakpo'+(_name+3));
   _refn:=exec('FindAndGet','#table',FAKS,_dok,,,null());
   _refp:=exec('FindInSet','#table','FAP','FAP',_refn);
   FAKS.seek(_refn);
   _red:=exec('faks_win_edit_set','faktury_nag',1);

   FAP.index('FAP');
   FAP.prefix(_refn);
   FAP.seek(_refp);
   FAP.actions('WER_DOK',{? FAP.FAKS().SZ='Z' || 'H' || '' ?});
   exec('dselWithNag','okienka','FAP','WER_DOK','FAKS',_red);
   FAKS.cntx_pop();
   FAP.cntx_pop()
|? _dok<>'' & ref_tab(_dok)=ND & (';DW'*(1+menu_txt()))>1
|| _name:=ref_name(_dok);
   ND.cntx_psh();
   DK.cntx_psh();
   DK_L.cntx_psh();
   ND.use(_name);
   DK.use('dokma'+(_name+3));
   DK_L.use('doklk'+(_name+3));
   ND.prefix();
   DK.prefix();
   DK_L.prefix();
   _refn:=exec('FindAndGet','#table',ND,_dok,,,null());
   _refp:=exec('FindInSet','#table','DK','DOKMAG',_refn);
   ND.seek(_refn);
   _buf:=ND.win_edit('?');
   _red:=exec('nd_win_edit_set','magdok_nag',1);

   DK.index('DOKMAG');
   DK.prefix(_refn);
   DK.seek(_refp);
   _act:=DK.actions('WER_DOK','H'+{? ND.MAG().SL<>'T' || 'M' || '' ?});
   exec('dselWithNag','okienka','DK','WER_DOK','ND',_red);
   ND.cntx_pop();
   DK.cntx_pop();
   DK_L.cntx_pop();
   ND.win_edit(_buf);
   DK.actions('WER_DOK',_act)
?};
~~


\dispzam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Podgląd zamówienia sprzedaży dostaw
::   WE: _a - uid zamówienia
::----------------------------------------------------------------------------------------------------------------------
_zam:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || '' ?};
{? _zam<>''
|| {? BEER.SZ='S' || exec('disp_all_zam','lsp',_zam) || exec('disp_all_zad','lzk',_zam) ?}
?};
~~


\autoRekD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Dodanie powiązanego dokumentu
::   WE: _a - reklamacja REK_N
::       _b - uid dokumentu
::       _c - uid pozycji
::       _d - ilość
::       _e - opis działania
::       [_f] - poziom zapisu
::       [_g] - magazyn
::       [_h] - uid realizacji zamówienia
::   WY: 1-dodano 0-nie
::----------------------------------------------------------------------------------------------------------------------
_rek:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_dok:={? var_pres('_b')=type_of('') & (+_b)=48 || _b || '' ?};
_poz:={? var_pres('_c')=type_of('') & (+_c)=48 || _c || '' ?};
_ile:={? var_pres('_d')=type_of(0) || _d || 0 ?};
_opi:={? var_pres('_e')=type_of('') || _e || '' ?};
_num:={? var_pres('_f')=type_of(0) || _f || -99 ?};
_mag:={? var_pres('_g')=type_of(null()) || _g || null() ?};
_rea:={? var_pres('_h')=type_of('') & (+_c)=48 || _h || '' ?};

_res:=0;
{? _rek<>null() & _dok<>'' & _poz<>''
|| _tabD:=ref_tab(_dok);
   _tabP:=ref_tab(_poz);
   REK_D.prefix();
   REK_D.blank();
   REK_D.REK_N:=_rek;
   REK_D.DK_REF:=_dok;
   REK_D.DP_REF:=_poz;
   REK_D.DR_REF:=_rea;
   REK_D.SYM:=exec('FindAndGet','#table',_tabD,_dok,,"SYM",'');
   REK_D.P:={? _tabP<>DK
            || exec('FindAndGet','#table',_tabP,_poz,,"POZ",'')
            || exec('FindAndGet','#table',_tabP,_poz,,"P",'')
            ?};
   REK_D.M:=exec('FindAndGet','#table',_tabP,_poz,,"M",null());
   REK_D.JM:=REK_D.M().J;
   {? _tabP<>TR_ZL
   || REK_D.DK_C:=exec('FindAndGet','#table',_tabP,_poz,,"DK_C",null());
      REK_D.RDKC:=exec('FindAndGet','#table',_tabP,_poz,,"RDKC",'')
   ?};
   REK_D.IL:=_ile;
   REK_D.OPIS:=_opi;
   {? _tabD=ZK_N
   || REK_D.R:='Zamówienie sprzedaży';
      {? exec('czyJS','jm',REK_D.M)
      || REK_D.JM:=exec('FindAndGet','#table',_tabP,_poz,,"J2",REK_D.JM)
      ?};
      REK_D.TYP:=exec('FindAndGet','#table',_tabD,_dok,,"T().T",'');
      REK_D.DT:=exec('FindAndGet','#table',_tabD,_dok,,"DP",date(0,0,0));
      REK_D.POZ:={? _num=-99 || 0 || _num ?};
      REK_D.MG:=_mag
   |? _tabD=ZD_NAG
   || REK_D.R:='Zamówienie dostaw';
::      REK_D.JM:=exec('FindAndGet','#table',_tabP,_poz,,"JM",REK_D.JM);
      REK_D.TYP:=exec('FindAndGet','#table',_tabD,_dok,,"T().T",'');
      REK_D.DT:=exec('FindAndGet','#table',_tabD,_dok,,"DATA",date(0,0,0));
      REK_D.POZ:={? _num=-99 || 0 || _num ?};
      REK_D.MG:=_mag
   |? _tabD=ND
   || REK_D.R:='Dokument magazynowy';
      REK_D.TYP:=exec('FindAndGet','#table',_tabD,_dok,,"TYP().T",'');
      REK_D.DT:=exec('FindAndGet','#table',_tabD,_dok,,"D",date(0,0,0));
      REK_D.POZ:={? _num=-99 || 1 || _num ?};
      REK_D.MG:=exec('FindAndGet','#table',_tabD,_dok,,"MAG",date(0,0,0))
   |? _tabD=FAKS
   || REK_D.R:={? BEER.SZ='S' || 'Faktura sprzedaży' || 'Faktura zakupu' ?};
      REK_D.JM:={? BEER.SZ='S' & ~(REK_D.M().J2<>null() & exec('czyJS','jm',REK_D.M))
                || exec('FindAndGet','#table',_tabP,_poz,,"J2",REK_D.JM)
                || exec('FindAndGet','#table',_tabP,_poz,,"JM",REK_D.JM)
                ?};
      REK_D.TYP:=exec('FindAndGet','#table',_tabD,_dok,,"T().T",'');
      REK_D.DT:=exec('FindAndGet','#table',_tabD,_dok,,"DW",date(0,0,0));
      REK_D.POZ:={? _num=-99 || 2 || _num ?}
   |? _tabD=TR_NZL
   || REK_D.R:='Dyspozycja transportowa';
      REK_D.TYP:='TRANSPORT';
      REK_D.DT:=exec('FindAndGet','#table',_tabD,_dok,,"DT",date(0,0,0));
      REK_D.POZ:={? _num=-99 || 2 || _num ?}
   ?};
   {? REK_D.add(1) || REKVAR.RESULT:=$REK_D.ref(); _res:=1 ?}
?};
_res


\pow_dok_rek_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Wiązanie z dokumentami danej reklamacji
::   WE: [_a] 0 - edycja (domyślnie), 1 - podgląd
::----------------------------------------------------------------------------------------------------------------------
_disp:=0;
{? var_pres('_a')=type_of(0)
|| _disp:=1
?};
REK_D.index('POZ');
REK_D.prefix(REK_N.ref());
{? _disp
|| REK_D.win_sel('SEL'+REK_N.SZ)
|| {? ~REK_D.first() & REK_N.STAT_REJ='N'
   || REK_D.actions_grayed('WER'+REK_N.SZ,'D:D')
   || REK_D.actions_grayed('WER'+REK_N.SZ,'')
   ?};
   REK_D.win_sel('WER'+REK_N.SZ)
?};
REK_D.select();
~~


\add_rekd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Dodanie powiązanego dokumentu
::   WE: _a - rodzaj S/Z
::   WY: 1-dodano 0-nie
::----------------------------------------------------------------------------------------------------------------------
_sz:={? var_pres('_a')=type_of('') & (';SZ'*_a)>1 || _a || 'S' ?};
_res:=1;
_rek_n:=REK_N.ref();
REKVAR.RESULT:='';
REK_N.cntx_psh();
REK_D.cntx_psh();
REKVAR.TRYB:=1;
exec('initREKVAR','reklamacje');
REKVAR.RDOK2:='K';
REKVAR.RDOK:=exec('FindInSet','#table','REK_Z','KOD','K',BEER.SZ);
REKVAR.OP:='';
REKVAR.FIND:='';
REKVAR.FND_UID:='';
REKVAR.SYM:=REKVAR.TYP:=REKVAR.NAZ:=REKVAR.MAG:='';
REKVAR.DAT:=date(0,0,0);
REKVAR.OKR:=exec('FindInSet','#table','OKR','MC',date()~1,REF.FIRMA,,,1);
REKVAR.ARCH:='N';
OKR.fld_fml('MC','BLANK',"1");
exec('po_rdok_rek_d','reklamacje');
REKVAR.FINDKH:=REK_N.KH;
REKVAR.win_edit('REKDOK');
{? REKVAR.edit("exec('rek_gen_chk','reklamacje')")
|| __reklpos.clear();
   _first:=__reklpos.first();
   {? _first
   || {? __reklpos.select()
      || __reklpos.clear;
         __reklpos.f_clear();
         {? __reklpos.first() || {! |? {? __reklpos.WYB='T' || __reklpos.next() || __reklpos.del() ?} !} ?};
         {? __reklpos.first()
         || do();
            {!
            |? {? ~exec('autoRekD','reklamacje',_rek_n,__reklpos.UID,__reklpos.UIP,__reklpos.ILR,REKVAR.OP,4)
               || undo(); _res:=0
               || _res:=1
               ?};
               {? _res || __reklpos.next() || 0 ?}
            !};
            end()
         ?}
      ?}
   |? ~_first
   || FUN.info('Brak pozycji do powiązania z reklamacją.'@)
   ?}
?};
OKR.fld_fml('MC','BLANK',"0");
exec('doneREKVAR','reklamacje');
REK_N.cntx_pop();
REK_D.cntx_pop();
{? REKVAR.RESULT<>''
|| {? REK_D.f_active() || REK_D.f_rfresh(); REK_D.f_seek(REKVAR.RESULT) || REK_D.seek(REKVAR.RESULT) ?}
?};
_res


\mod_rekd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Poprawa powiązanego dokumentu
::   WE: _a - rodzaj S/Z
::   WY: 1-dodano 0-nie
::----------------------------------------------------------------------------------------------------------------------
_sz:={? var_pres('_a')=type_of('') & (';SZ'*_a)>1 || _a || 'S' ?};
_res:=1;
_rek_n:=REK_N.ref();
{? REK_D.POZ<3
|| FUN.info('Powiązanie zostało wygenerowane automatycznie.\nModyfikacja niemożliwa.'@)
|| _tab:=ref_tab(REK_D.DP_REF);
   REKVAR.ILR:={? _tab=ZK_P   || exec('FindAndGet','#table',_tab,REK_D.DP_REF,,"ILZ",0)
               |? _tab=ZD_NAG || exec('FindAndGet','#table',_tab,REK_D.DP_REF,,"IL_ZAM",0)
               || exec('FindAndGet','#table',_tab,REK_D.DP_REF,,"IL",0)
               ?};
   {? REK_D.edit("exec('chk_rekd','reklamacje')") || REK_D.put(1) ?}
?};
_res


\del_rekd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Usunięcie powiązanego dokumentu
::   WE: _a - rodzaj S/Z
::   WY: 1-usunięto 0-nie
::----------------------------------------------------------------------------------------------------------------------
_sz:={? var_pres('_a')=type_of('') & (';SZ'*_a)>1 || _a || 'S' ?};
_res:=1;
{? REK_D.POZ<3
|| FUN.info('Powiązanie zostało wygenerowane automatycznie.\nUsunięcie niemożliwe.'@)
|? FUN.ask('Usunąć powiązanie z reklamacją?'@)
|| _res:=REK_D.del(,1)>0
?};
_res


\roz_rekd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Rozpisanie powiązanych dokumentów magazynowych
::   WE: _a - rodzaj S/Z
::   WY: 1-dodano 0-nie
::----------------------------------------------------------------------------------------------------------------------
_sz:={? var_pres('_a')=type_of('') & (';SZ'*_a)>1 || _a || 'S' ?};
_res:=1;

_rek:=REK_N.ref();
_uip:=REK_N.FAK_POZ;
_ile:=REK_N.IL;
_rodz:=REK_N.SZ;
_sym:=REK_N.SYM;

_res:=_rek<>null() & _rodz='S';

:: Pobieramy informacje o wydaniach
{? _res & _ile>0 & _uip<>''
|| REKVAR.ILP:=0;
   VAR_DEL.delete('__reklpos','__winrekl');
   __reklpos:=tab_tmp(4,'DATDOK','DATE',''
            ,'SYMDOK','STRING[20]',''
            ,'MAGSYM','STRING[10]',''
            ,'POZ','INTEGER',''
            ,'KTM','STRING[50]',''
            ,'NAZ','STRING[100]',''
            ,'JM','STRING[10]',''
            ,'ILS','REAL',''
            ,'ILR','REAL',''
            ,'WYB','STRING[1]',''
            ,'TYPDOK','STRING[20]',''
            ,'REFDOK','STRING[16]',''
            ,'REFPOZ','STRING[16]',''
            ,'MREF','STRING[16]',''
            ,'UID','STRING[48]',''
            ,'UIP','STRING[48]',''
            ,'DKC','STRING[16]',''
            ,'SYMDKC','STRING[20]',''
            ,'W01','STRING[25]',''
            ,'W02','STRING[25]',''
            ,'W03','STRING[25]',''
            ,'W04','STRING[25]',''
            ,'W05','STRING[25]',''
            ,'W06','STRING[25]',''
            ,'W07','STRING[25]',''
            ,'W08','STRING[25]',''
            ,'W09','STRING[25]',''
            ,'W10','STRING[25]',''
            ,'PRDK','STRING[16]','');

   _fap:=_uip+16;
   _ilr:=_ile;
   _jsp:=exec('FindAndGet','#table',FAP,_uip,,"J2",null());
   exec('mag_psh','open_tab');
   OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.first()
   || {!
      |? exec('mag_open','open_tab',ST.ODDZ,form(OKR.ROK-2000,-2,0,'99'));
         DK.index('FAP');
         DK.prefix(_fap,);
         {? DK.first()
         || {!
            |? _dokl_m:=exec('jaka_dok_m','jm',DK.M);
               _wgs:=_jsp<>null() & _jsp<>DK.M().J & DK.WS2>0 & _jsp=DK.J2;
               _ws2:=DK.WS2;
               _ilm:=(DK.IL-DK.IL_RK) $ _dokl_m;
::               _ild:={? _wgs || _ws2 || 1 ?}*_ilm $ _dokl_m;
               _ild:=_ilm;
               __reklpos.POZ:=DK.P;
               __reklpos.DATDOK:=DK.N().D;
               __reklpos.SYMDOK:=DK.N().SYM;
               __reklpos.MAGSYM:=DK.N().MAG().SYM;
               __reklpos.KTM:=DK.M().KTM;
               __reklpos.NAZ:=DK.M().N;
               __reklpos.JM:=DK.M().J().KOD;
               __reklpos.ILS:=_ild;
               __reklpos.TYPDOK:=DK.N().TYP().T;
               __reklpos.REFDOK:=$DK.N;
               __reklpos.REFPOZ:=$DK.ref();
               __reklpos.MREF:=$DK.M;
               __reklpos.UID:=DK.N().uidref();
               __reklpos.UIP:=DK.uidref();
               __reklpos.ILR:=exec('ctrlREK_D','reklamacje',_rek,__reklpos.UID,__reklpos.UIP);
               __reklpos.WYB:={? __reklpos.ILR>0 || 'T' || 'N' ?};
               __reklpos.ILS+=__reklpos.ILR;
               __reklpos.DKC:={? DK.DK_C<>null() || $DK.DK_C || DK.RDKC ?};
               __reklpos.SYMDKC:={? __reklpos.DKC<>'' || exec('FindAndGet','#table',DK_C,__reklpos.DKC,,"SYM",'') || '' ?};
               {? __reklpos.DKC<>''
               || {! _i:=1..10
                  |! _num:=form(_i,-2,0,'99');
                     ($('__reklpos.W%1'[_num]))()
                       :=($('exec(\'FindAndGet\',\'#table\',DK_C,__reklpos.DKC,,"WAR%1",\'\')'[_num]))()
                  !}
               ?};
               {? __reklpos.ILS>0 || __reklpos.add(1); REKVAR.ILP+=__reklpos.ILR ?};
               DK.next()
            !}
         ?};
         OKR.next()
      !}
   ?};
   OKR.cntx_pop();
   exec('mag_pop','open_tab');
   __reklpos.clear();
   {? __reklpos.first() & __reklpos.size()>1
   ||
:: okienko
      _etyk:='Reklamacji %1. Wydania do rozpisania: %2 %3'@[REK_N.SYM,form(REK_N.IL,,,'99'),REK_N.JM().KOD];
      __winrekl:=__reklpos.mk_sel(_etyk,'P',,'#winreklwyd',,,,,'U');
      __reklpos.win_fld(__winrekl,,'WYB',,,,,,,0,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
      __reklpos.win_fld(__winrekl,,'MAGSYM',,,10,,1,'Magazyn'@);
      __reklpos.win_fld(__winrekl,,'TYPDOK',,,10,,1,'Typ dokumentu'@);
      __reklpos.win_fld(__winrekl,,'SYMDOK',,,20,,1,'Dokument'@);
      __reklpos.win_fld(__winrekl,,'DATDOK',,,10,,1,'Data dokumentu'@);
      __reklpos.win_fld(__winrekl,,'POZ',,,5,,1,'Pozycja'@);
      __reklpos.win_fld(__winrekl,,'KTM',,,20,,1,'Indeks'@);
      __reklpos.win_fld(__winrekl,,'NAZ',,,20,,1,'Nazwa'@);
      __reklpos.win_fld(__winrekl,,'SYMDKC',,,15,,1,'Cecha dostawy'@);
      __reklpos.win_fld(__winrekl,,'ILS',,,-12,ST.DOKL,1,'Ilość');
      __reklpos.win_fld(__winrekl,,'ILR',,,-12,ST.DOKL,,'Do powiązania'@);
      __reklpos.win_fld(__winrekl,,'JM',,,4,,1,'jm'@);
      __reklpos.win_act(__winrekl,,'Formuła','Wypełnij'@@,,,,"exec('rekl_marw','reklamacje',1)",,1,"sel_nchk()");
      __reklpos.win_act(__winrekl,,'Formuła','Zeruj'@@,,,,"exec('rekl_marw','reklamacje',0)",,1,"sel_nchk()");
      __reklpos.win_act(__winrekl,,'Popraw',,,,,,1);
      __reklpos.win_act(__winrekl,,'Formuła','Akceptuj'@@,,,"exec('rekl_akw','reklamacje')");
::      __reklpos.win_act(__winrekl,,'Kolejność');
      __reklpos.win_act(__winrekl,,'Szukaj');
      __reklpos.win_act(__winrekl,,'Rekord',,,,"exec('rekl_rew','reklamacje')","exec('rekl_mow','reklamacje')");
      __reklpos.win_act(__winrekl,,'Wyświetl',,,,"exec('dispPOZ','transport_zlec',__reklpos.REFPOZ)");
      __reklpos.fld_fml('DATDOK','DISPLAY_FORMAT',"{? __reklpos.POZ=-1 || 'empty=1' || 'empty=0' ?}");
      __reklpos.fld_fml('POZ','DISPLAY_FORMAT',"{? __reklpos.POZ=-1 || 'empty=1' || 'empty=0' ?}");
      __reklpos.fld_fml('WYB','BEFORE_EDIT',"0");
      __reklpos.win_sel(__winrekl);
      __reklpos.POZ:=-1;
      __reklpos.DATDOK:=DK.N().D;
      __reklpos.SYMDOK:='DO REKLAMACJI';
      __reklpos.MAGSYM:='';
      __reklpos.ILS:=REKVAR.ILP;
      __reklpos.TYPDOK:='';
      __reklpos.REFDOK:='';
      __reklpos.REFPOZ:='';
      __reklpos.MREF:=$DK.M;
      __reklpos.UID:=REK_N.uidref();
      __reklpos.ILR:=REKVAR.ILP;
      __reklpos.WYB:='T';
      __reklpos.DKC:='';
      __reklpos.SYMDKC:='';
      {! _i:=1..10 |! _num:=form(_i,-2,0,'99'); ($('__reklpos.W%1'[_num]))():='' !};
      {? __reklpos.ILS>0 || __reklpos.add(1) ?};

      {? __reklpos.select()
      || _res:=exec('rozpWyda','reklamacje',_rek)
      ?}
   || FUN.info('Nie zarejestrowano więcej niż jedno wydanie dla reklamacji.\nRozpisanie niemożliwe.'@)
   ?};
   VAR_DEL.delete('__reklpos','__winrekl')
?};
_res


\deleRekD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Usunięcie powiązań z dokumentami
::   WE: _a - wskazanie na REK_N
::   WY: 1-usunięto 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
REK_D.index('POZ');
REK_D.prefix(_a);
{? REK_D.first()
|| {!
   |? {? REK_D.POZ=1 || exec('FindAndGet','#table',DK,REK_D.DP_REF,,"IL_RK-=REK_D.IL;put(1)",0) ?};
      _del:=REK_D.del(,1);
      {? _del>0 || (_del-1) || _res:=0; 0 ?}
   !}
?};
_res


\rozpRekD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Dodaje rozpisanie powiązań z dokumentem
::   WE: _a - wskazanie na REK_N
::       _b - uid FAKS
::       _c - uid FAP
::       _d - ilość
::   WY: 1-rozpisano przynajmniej rekord przyjęcia 0-nie
::----------------------------------------------------------------------------------------------------------------------
_rek:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_uid:={? var_pres('_b')=type_of('') & (+_b)=48 || _b || '' ?};
_uip:={? var_pres('_c')=type_of('') & (+_c)=48 || _c || '' ?};
_ile:={? var_pres('_d')=type_of(0) || _d || 0 ?};
_res:=1;

_rodz:=exec('FindAndGet','#table',FAKS,_uid,,"{? SZ='S' || 1 |? SZ='Z' || 2 || 0 ?}",0);

:: Dodajemy zapis o przyjęciu reklamacji do dokumentu sprzedaży lub zakupu
{? _rodz=1
|| {? ~exec('autoRekD','reklamacje',_rek,_uid,_uip,__reklpos.ILR,'Przyjęcie reklamacji sprzedaży') || _res:=0 ?}
|? _rodz=2
|| {? ~exec('autoRekD','reklamacje',_rek,_uid,_uip,__reklpos.ILR,'Zgłoszenie reklamacji zakupu') || _res:=0 ?}
|| _res:=0
?};

:: Dodajemy zapisy o dokumentach rozchodowych
:: - dodatkowo zapisy o dostawach, z których pochodził rozchód
:: - dodatkowo o zamówieniu z którego pochodziła realizacja
{? _res & _ile>0
|| _fap:=_uip+16;
   _ilr:=_ile;
   _jsp:=exec('FindAndGet','#table',FAP,_uip,,"J2",null());
   exec('mag_psh','open_tab');
   OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.first()
   || {!
      |? exec('mag_open','open_tab',ST.ODDZ,form(OKR.ROK-2000,-2,0,'99'));
         DK.index('FAP');
         DK.prefix(_fap,);
         {? DK.first()
         || {!
            |? _dokl_m:=exec('jaka_dok_m','jm',DK.M);
               _wgs:={? DK.M().J2<>null() || exec('czyJS','jm',DK.M) |? _jsp<>null() & _jsp=DK.J2 || 2 || 0 ?};
               _ws2:={? DK.WS2>0 || DK.WS2 || 1 ?};
               _ilm:=(DK.IL-DK.IL_RK) $ _dokl_m;
               _ild:={? _wgs=1 || 1/_ws2 |? _wgs=2 || _ws2 || 1 ?}*_ilm $ _dokl_m;
               {? _ild>0
               || _ilp:={? _ild>=_ilr || _ilr || _ild ?};
                  _il2:={? _wgs=1 || _ws2 |? _wgs=2 || 1/_ws2 || 1 ?}*_ilp $ _dokl_m;
::                Wydanie
                  {? ~exec('autoRekD','reklamacje',_rek,DK.N().uidref(),DK.uidref(),{? _wgs || _il2 || _ilp ?}
                       ,'Wydanie towaru, który jest w reklamacji')
                  || _ilr:=0; _res:=0
                  || _ilr-=_ilp;
::                   dodanie do wydania zapisu o reklamacji
                     DK.IL_RK+={? _wgs || _il2 || _ilp ?};
                     DK.put(1);
::                   Dostawa
                     {? DK.PRDK<>''
                     || _dip:=exec('FindAndGet','#table',DK,DK.PRDK,,"uidref()",'');
                        _did:=exec('FindAndGet','#table',DK,DK.PRDK,
                              ,"ND.cntx_psh();ND.use('nagdo'+(name()+3));_rr:=N().uidref();ND.cntx_pop();_rr",'');
                        {? _did<>'' & _dip<>''
                        || {? ~exec('autoRekD','reklamacje',_rek,_did,_dip,{? _wgs || _il2 || _ilp ?}
                                ,'Towar w reklamacji wydano z dostawy',-1)
                           || _ilr:=0; _res:=0
                           ?}
                        ?}
                     ?};
::                   Realizacja zamówienia
                     {? DK.ZAM_RP<>'' & DK.ZAM_RN<>''
                     || _zid:=exec('FindAndGet','#table',ZK_RN,DK.ZAM_RN,
                              ,"ZK_N.cntx_psh();ZK_N.use('zknag'+(name()+3));_rr:=N().uidref();ZK_N.cntx_pop();_rr",'');
                        _zip:=exec('FindAndGet','#table',ZK_RP,DK.ZAM_RP,
                              ,"ZK_P.cntx_psh();ZK_P.use('zkpoz'+(name()+3));_rr:=P().uidref();ZK_P.cntx_pop();_rr",'');
                        _zir:=DK.ZAM_RP;
                        {? _zid<>'' & _zip<>''
                        || {? ~exec('autoRekD','reklamacje',_rek,_zid,_zip,_ilp
                                ,'Realizacja zamówienia towaru w reklamacji',,DK.N().MAG,_zir)
                           || _ilr:=0; _res:=0
                           || REKVAR.ILP:=_ilp;
                              exec('FindAndGet','#table',ZK_RP,DK.ZAM_RP,,"IL_RK+=REKVAR.ILP;put(1)",0)
                           ?}
                        ?}
                     ?}
                  ?}
               ?};
               _ilr>0 & DK.next()
            !}
         ?};
         _ilr>0 & OKR.next()
      !}
   ?};
   OKR.cntx_pop();
   exec('mag_pop','open_tab')
?};
_res


\disp_rek_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Wyświetlenie powiązanego dokumentu
::   WE: [_a] - uid domyślnie brane z pola REK_D.DK_REF
::----------------------------------------------------------------------------------------------------------------------
_uid:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || REK_D.DK_REF ?};
_tab:={? _uid<>'' || ref_tab(_uid) || REK_D ?};

{? _tab=FAKS   || exec('dispfak','reklamacje',_uid)
|? _tab=ZK_N   || exec('dispzam','reklamacje',_uid)
|? _tab=ZD_NAG || exec('dispzam','reklamacje',_uid)
|? _tab=ND     || exec('disp_all_dok','lmg',_uid)
|? _tab=TR_NZL || exec('disp_tr_nzl_dysp','transport',_uid)
|? _tab=REK_N  || exec('disp_all_rek','reklamacje',_uid)
?};
''


\rek_rek_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Wygaszanie akcji
::----------------------------------------------------------------------------------------------------------------------
_act:={? REK_D.POZ<3 || 'PU' || '' ?}
     +{? fabs(REK_D.POZ)=1 | (REK_D.POZ=4 & ref_tab(REK_D.DP_REF)=DK) || '' || 'H' ?}
     +{? REK_N.STAT_REJ='N' || 'D:D' || '' ?}
     +{? REK_D.REK_N().ZAM_ZRP='' & REK_D.REK_N().FAK_POZ='' || 'Z' || '' ?};
_res:='';
{? REK_D.REK_N().SZ='S'
|| _res:={? REK_D.POZ=-1 || 'REK_D#01#01'
         |? REK_D.POZ=0  || 'REK_D#01#02'
         |? REK_D.POZ=1  || 'REK_D#01#03'
         |? REK_D.POZ=2  || {? REK_D.TYP<>'TRANSPORT'  || 'REK_D#01#04' || 'REK_D#01#06' ?}
         |? REK_D.POZ=3 & REK_D.R='Zamówienie sprzedaży' || 'REK_D#01#07'
         |? REK_D.POZ>2  || 'REK_D#01#05'
         || ''
         ?}
|| _res:={? REK_D.POZ=0  || 'REK_D#02#02'
         |? REK_D.POZ=1  || 'REK_D#02#03'
         |? REK_D.POZ=2  || {? REK_D.TYP<>'TRANSPORT' || 'REK_D#01#04' || 'REK_D#01#06' ?}
         |? REK_D.POZ>2  || 'REK_D#02#05'
         || ''
         ?}
?};

REK_D.actions_grayed('WER'+REK_D.REK_N().SZ,_act);
_res


\rekl_wycof
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Wycofanie rejestracji reklamacji klienta lub reklamacji do dostawców
::----------------------------------------------------------------------------------------------------------------------
{? exec('blk_lock','#table','REK_N',REK_N.ref(),,,'Reklamacja jest redagowana'@)
|| {? REK_N.STAT_REJ='Z'
   || _uid:={? BEER.SZ='Z' || 'TRE_RDO_DRDO' || 'TRE_REK_DREK' ?};
      {? exec('chk_role','#b__box',OPERATOR.USER,_uid)
      || {? FUN.ask('Czy wycofać rejestrację reklamacji?'@)
         || REK_N.STAT_REJ:='N';
            REK_N.ST:='';
            REK_N.RESULT:='';
            REK_N.memo_set('','RES_OPIS');
            REK_N.memo_set('','X_OPIS');
            REK_N.put();
            REK_N.memo_put(,'RES_OPIS');
            REK_N.memo_set('','X_OPIS')
         ?}
      ?}
   |? REK_N.STAT_REJ='T'
   || _uid:={? BEER.SZ='Z' || 'TRE_RDO_AERD' || 'TRE_REK_AERK' ?};
      {? exec('chk_role','#b__box',OPERATOR.USER,_uid)
      || {? REK_N.RESULT='T'
         || _jak:=FUN.choice('Wybierz jedną z opcji wycofania akceptacji lub rejestracji reklamacji'@
                     ,,'Akceptację i &rejestrację'@,'&Akceptację'@)
         || _jak:=FUN.choice('Wybierz jedną z opcji wycofania odrzucenia lub rejestracji reklamacji'@
                     ,,'Odrzucenie i &rejestrację'@,'&Odrzucenie'@)
         ?};
         {? _jak=1 | _jak = 2
         || {? _jak=1
            || REK_N.STAT_REJ:='N';
               REK_N.ST:=''
            || REK_N.STAT_REJ:='Z';
               REK_N.ST:=exec('status_zarejestrowano','reklamacje')
            ?};
            REK_N.RESULT:='';
            REK_N.memo_set('','RES_OPIS');
            REK_N.memo_set('','X_OPIS');
            REK_N.put();
            REK_N.memo_put(,'RES_OPIS');
            REK_N.memo_put(,'X_OPIS')
         ?}
      ?}
   |? REK_N.STAT_REJ='X'
   || _uid:={? BEER.SZ='Z' || 'TRE_RDO_AERD' || 'TRE_REK_AERK' ?};
      {? exec('chk_role','#b__box',OPERATOR.USER,_uid)
      || {? REK_N.RESULT='T'
         || _jak:=FUN.choice('Wybierz jedną z opcji wycofania akceptacji lub rejestracji reklamacji'@
                     ,,'Zamknięcie, akceptację i &rejestrację'@,'Zamknięcie i &akceptację'@,'&Zamknięcie'@)
         || _jak:=FUN.choice('Wybierz jedną z opcji wycofania odrzucenia lub rejestracji reklamacji'@
                     ,,'Zamknięcie, odrzucenie i &rejestrację'@,'Zamknięcie i &odrzucenie'@,'&Zamknięcie'@)
         ?};
         {? _jak=1 | _jak = 2 | _jak=3
         || {? _jak=1
            || REK_N.STAT_REJ:='N';
               REK_N.ST:='';
               REK_N.RESULT:=''
            |? _jak=2
            || REK_N.STAT_REJ:='Z';
               REK_N.ST:=exec('status_zarejestrowano','reklamacje');
               REK_N.RESULT:=''
            || REK_N.STAT_REJ:='T';
               {? REK_N.RESULT='T'
               || REK_N.ST:=exec('status_akceptacja','reklamacje')
               || REK_N.ST:=exec('status_odrzucenie','reklamacje')
               ?}
            ?};
            {? _jak=1 | _jak=2
            || REK_N.memo_set('','RES_OPIS')
            ?};
            REK_N.memo_set('','X_OPIS');
            REK_N.put();
            {? _jak=1 | _jak=2
            || REK_N.memo_put(,'RES_OPIS')
            ?};
            REK_N.memo_put(,'X_OPIS')
         ?}
      ?}
   ?}
?};
exec('blk_unlock','#table','REK_N',REK_N.ref());
~~


\rekl_zalacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Załączniki reklamacji klienta lub reklamacji do dostawców
::   WE: [_a] 0 - edycja (domyślnie), 1 - podgląd
::----------------------------------------------------------------------------------------------------------------------
_disp:=0;
{? var_pres('_a')=type_of(0)
|| _disp:=1
?};
_uid:={? BEER.SZ='Z' || 'TRE_RDO_DRDO' || 'TRE_REK_DREK' ?};

{? ~_disp
|| {? REK_N.STAT_REJ='T' | REK_N.STAT_REJ='X' | ~exec('hasAction','users',_uid)
   || _disp:=1
   ?}
?};

exec('sel_dok','dokum','REK_N',,_disp,,1);

~~


\hist_dstrek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Załączniki reklamacji klienta lub reklamacji do dostawców
::----------------------------------------------------------------------------------------------------------------------
{? REK_D.DP_REF<>'' || exec('his_dost','magdok_wspolne',REK_D.DP_REF+16) ?};
~~

\pr_rdok_rek_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed polem REKVAR.RDOK
::----------------------------------------------------------------------------------------------------------------------
REKVAR.RDOK2:=REKVAR.RDOK().KOD;
1


\po_rdok_rek_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Po polu REKVAR.RDOK
::----------------------------------------------------------------------------------------------------------------------
{? REKVAR.OP='' | (REKVAR.RDOK2<>REKVAR.RDOK().KOD) || REKVAR.OP:=REKVAR.RDOK().OP ?};
REKVAR.RDOK2:=REKVAR.RDOK().KOD;
1


\initREKVAR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Inicjuje tabele i okienka do obsługi automatów dla reklamacji
::   WE: [_a] 0-domyślnie-faktura 1-zamówienie sprzedaży 2-zamówienie dostaw 3-dokument magazynowy
::----------------------------------------------------------------------------------------------------------------------
_what:={? var_pres('_a')=type_of(0) || _a || 0 ?};

exec('doneREKVAR','reklamacje');
__reklpos:=tab_tmp(3,'SHOW','STRING[1]',''
            ,'POS','INTEGER',''
            ,'POZ','INTEGER',''
            ,'KTM','STRING[50]',''
            ,'NAZ','STRING[100]',''
            ,'JM','STRING[10]',''
            ,'ILS','REAL',''
            ,'ILR','REAL',''
            ,'WYB','STRING[1]',''
            ,'SYMFAK','STRING[20]',''
            ,'SYMZAM','STRING[20]',''
            ,'SYMRER','STRING[20]',''
            ,'DATFAK','DATE',''
            ,'DATZAM','DATE',''
            ,'DATREK','DATE',''
            ,'RERREF','STRING[16]',''
            ,'FAPREF','STRING[16]',''
            ,'ZAPREF','STRING[16]',''
            ,'FAKREF','STRING[16]',''
            ,'ZAMREF','STRING[16]',''
            ,'ZRPREF','STRING[16]',''
            ,'TYPFAK','STRING[10]',''
            ,'TYPZAM','STRING[10]',''
            ,'MREF','STRING[16]',''
            ,'UID','STRING[48]',''
            ,'UIP','STRING[48]',''
            ,'KOR','INTEGER',''
            ,'OPDOKM','STRING[60]',''
            ,'OPFAKS','STRING[60]',''
            ,'ILP','REAL',''
            ,'NDREF','STRING[16]',''
            ,'PRDK','STRING[16]','');
__reklfnd:=tab_tmp(4,'DATFAK','DATE',''
            ,'SYMFAK','STRING[20]',''
            ,'DATZAM','DATE',''
            ,'SYMZAM','STRING[20]',''
            ,'TYPFAK','STRING[10]',''
            ,'TYPZAM','STRING[40]',''
            ,'UIDFAK','STRING[48]',''
            ,'UIDZAM','STRING[48]',''
            ,'KHKOD','STRING[8]',''
            ,'KHSKR','STRING[10]',''
            ,'KHNAZ','STRING[60]',''
            ,'REFKH','STRING[16]',''
            ,'REFTYP','STRING[16]',''
            ,'REFMAG','STRING[16]','');
_sel:={? ~REKVAR.TRYB
      || __reklfnd.mk_sel('Znalezione dokumenty i zamówienia'@,'T',0,'#rekfakzam',,,,,'U')
      || __reklfnd.mk_sel('Do powiązania: %1'@[REKVAR.RDOK().OPIS],'T',0,'#rekdokpow',,,,,'U')
      ?};
{? ~REKVAR.TRYB
|| __reklfnd.win_fld(_sel,,'TYPFAK',,,10,,0,'Typ'@);
   __reklfnd.win_fld(_sel,,'SYMFAK',,,20,,0,'Dokument'@);
   __reklfnd.win_fld(_sel,,'DATFAK',,,10,,0,'Data wystawienia'@);
   __reklfnd.win_fld(_sel,,'TYPZAM',,,10,,0,'Typ'@);
   __reklfnd.win_fld(_sel,,'SYMZAM',,,20,,0,'Zamówienie'@);
   __reklfnd.win_fld(_sel,,'DATZAM',,,10,,0,'Data przyjęcia'@);
   __reklfnd.win_fld(_sel,,'KHKOD',,,10,,0,'Kontrahent'@);
   __reklfnd.win_fld(_sel,,'KHSKR',,,10,,0,'Skrót'@);
   __reklfnd.win_fld(_sel,,'KHNAZ',,,40,,0,'Nazwa'@);
   __reklfnd.win_act(_sel,,'Formuła','&Wybierz'@@,,'Wybór dokumentu do reklamacji'@,"sel_exit()",,1,,,,'W');
   __reklfnd.win_act(_sel,,'Formuła','&Faktura'@@,,'Podgląd faktury'@
    ,"exec('dispfak','reklamacje',__reklfnd.UIDFAK)",,,,,,'F');
   __reklfnd.win_act(_sel,,'Formuła','&Zamówienie'@@,,'Podgląd zamówienia'@
    ,"exec('dispzam','reklamacje',__reklfnd.UIDZAM)",,,,,,'Z');
   __reklfnd.win_act(_sel,,'Formuła','&Dokument'@@,,'Podgląd dokumentu'@
    ,"exec('dispfak','reklamacje',__reklfnd.UIDFAK)",,,,,,'D')
|| __reklfnd.win_fld(_sel,,'TYPFAK',,,10,,0,'Typ'@);
   __reklfnd.win_fld(_sel,,'SYMFAK',,,20,,0,'Symbol'@);
   __reklfnd.win_fld(_sel,,'DATFAK',,,10,,0,'Data'@);
   __reklfnd.win_fld(_sel,,'UIDZAM',,,10,,0,'Magazyn'@);
   __reklfnd.win_fld(_sel,,'KHKOD',,,10,,0,'Kontrahent'@);
   __reklfnd.win_fld(_sel,,'KHSKR',,,10,,0,'Skrót'@);
   __reklfnd.win_fld(_sel,,'KHNAZ',,,40,,0,'Nazwa'@);
   __reklfnd.win_act(_sel,,'Formuła','&Wybierz'@@,,'Wybór dokumentu do powiązania'@,"sel_exit()",,1,,,,'W');
   __reklfnd.win_act(_sel,,'Formuła','W&yświetl'@@,,'Podgląd dokumentu'@
    ,"exec('disppow','reklamacje',__reklfnd.UIDFAK)",,,,,,'Y')
?};
__reklfnd.win_act(_sel,,'Szukaj');
__reklfnd.win_act(_sel,,'Kolejność');
__reklfnd.fld_fml('SYMFAK','DISPLAY_FORMAT',"{? __reklfnd.UIDFAK='' || 'empty=1' || 'empty=0' ?}");
__reklfnd.fld_fml('TYPFAK','DISPLAY_FORMAT',"{? __reklfnd.UIDFAK='' || 'empty=1' || 'empty=0' ?}");
__reklfnd.fld_fml('DATFAK','DISPLAY_FORMAT',"{? __reklfnd.UIDFAK='' || 'empty=1' || 'empty=0' ?}");
__reklfnd.fld_fml('SYMZAM','DISPLAY_FORMAT',"{? __reklfnd.UIDZAM='' || 'empty=1' || 'empty=0' ?}");
__reklfnd.fld_fml('TYPZAM','DISPLAY_FORMAT',"{? __reklfnd.UIDZAM='' || 'empty=1' || 'empty=0' ?}");
__reklfnd.fld_fml('DATZAM','DISPLAY_FORMAT',"{? __reklfnd.UIDZAM='' || 'empty=1' || 'empty=0' ?}");
__reklfnd.win_sel(_sel);

:: okienko
{? ~REKVAR.TRYB
|| __winrekl:=__reklpos.mk_sel('Pozycje do reklamacji: '@,'P',,'#winreklpos',,,,,'U',,,,,'html_maximized')
|| __winrekl:=__reklpos.mk_sel('Pozycje do powiązania: '@,'P',,'#winreklpow',,,,,'U',,,,,'html_maximized')
?};
__reklpos.win_fld(__winrekl,,'WYB',,,,,,'Wybrano'@,0,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
{? _what=1
|| __reklpos.win_fld(__winrekl,,'OPDOKM',,,30,,1,'Wydanie'@);
   __reklpos.win_fld(__winrekl,,'OPFAKS',,,30,,1,'Sprzedaż'@)
|? _what=2
|| __reklpos.win_fld(__winrekl,,'OPDOKM',,,1,,20,'Przyjęcie'@)
?};
::   __reklpos.win_fld(__winrekl,,'TYPFAK',,,10,,1,'Typ dokumentu'@);
::   __reklpos.win_fld(__winrekl,,'SYMFAK',,,20,,1,'Dokument'@);
::   __reklpos.win_fld(__winrekl,,'DATFAK',,,10,,1,'Data dokumentu'@);
{? ~_what
|| __reklpos.win_fld(__winrekl,,'POS',,,5,,1,'Pozycja'@)
|| __reklpos.win_fld(__winrekl,,'POZ',,,5,,1,'Pozycja'@)
?};
::   __reklpos.win_fld(__winrekl,,'TYPZAM',,,10,,1,'Typ zamówienia'@);
::   __reklpos.win_fld(__winrekl,,'SYMZAM',,,20,,1,'Zamówienie'@);
::   __reklpos.win_fld(__winrekl,,'DATZAM',,,10,,1,'Data zamówienia'@);
::   __reklpos.win_fld(__winrekl,,'POZ',,,5,,1,'Pozycja'@);
__reklpos.win_fld(__winrekl,,'KTM',,,20,,1,'Indeks'@);
__reklpos.win_fld(__winrekl,,'NAZ',,,30,,1,'Nazwa'@);
__reklpos.win_fld(__winrekl,,'ILS',,,-12,ST.DOKL,1,'Ilość'@);
{? ~REKVAR.TRYB
|| __reklpos.win_fld(__winrekl,,'ILR',,,-12,ST.DOKL,,'Do reklamacji'@)
|| __reklpos.win_fld(__winrekl,,'ILR',,,-12,ST.DOKL,,'Do powiązania'@)
?};
__reklpos.win_fld(__winrekl,,'JM',,,4,,1,'jm'@);
{? ~REKVAR.TRYB || __reklpos.win_fld(__winrekl,,'SYMRER',,,10,,,'Rodzaj reklamacji'@) ?};
__reklpos.win_act(__winrekl,,'Formuła','Wypełnij'@@,,,,"exec('rekl_mark','reklamacje',1)",,1,"sel_nchk()");
__reklpos.win_act(__winrekl,,'Formuła','Zeruj'@@,,,,"exec('rekl_mark','reklamacje',0)",,1,"sel_nchk()");
__reklpos.win_act(__winrekl,,'Popraw',,,,,,1);
__reklpos.win_act(__winrekl,,'Formuła','Akceptuj'@@,,,"exec('rekl_akc','reklamacje')");
__reklpos.win_act(__winrekl,,'Kolejność');
__reklpos.win_act(__winrekl,,'Szukaj');
__reklpos.win_act(__winrekl,,'Rekord',,,,"exec('rekl_rek','reklamacje')","exec('rekl_mod','reklamacje')");
__reklpos.win_act(__winrekl,,'Wyświetl',,,,"exec('dispPOZ','transport_zlec',__reklpos.FAPREF)");
{? ~REKVAR.TRYB
|| __reklpos.fld_fml('SYMRER','F3',"exec('f3_symrer','reklamacje')");
   __reklpos.fld_fml('SYMRER','BEFORE_EDIT',"exec('be_symrer','reklamacje')");
   __reklpos.fld_fml('SYMRER','AFTER_EDIT',"exec('ae_symrer','reklamacje')")
?};
__reklpos.fld_fml('WYB','BEFORE_EDIT',"0");
__reklpos.win_sel(__winrekl);
~~


\doneREKVAR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Usuwa definicje do obsługi automatów dla reklamacji
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__reklpos','__winrekl','__indrekl','__reklfnd');
~~


\addREK_Z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Uzupełnia tabele REK_Z
::----------------------------------------------------------------------------------------------------------------------
_add:="REK_Z.cntx_psh();
       REK_Z.index('KOD');
       REK_Z.prefix(_a,_c);
       {? ~REK_Z.first()
       || REK_Z.blank();
          REK_Z.SZ:=_a;
          REK_Z.OPIS:=_b;
          REK_Z.KOD:=_c;
          REK_Z.TAB:=_d;
          REK_Z.P01:={? var_pres('_e')=type_of('') || _e || '' ?};
          REK_Z.P02:={? var_pres('_f')=type_of('') || _f || '' ?};
          REK_Z.OP:={? var_pres('_g')=type_of('') || _g || '' ?};
          REK_Z.add(1)
       ?};
       REK_Z.cntx_pop()";
:: powiązania dla reklamacji klienta
_add('S','Dyspozycja transportu','T','TR_NZL',,,'Dyspozycja transportu na odbiór reklamowanego towaru');
_add('S','Korekta sprzedaży','K','FAKS','T',,'Korekta sprzedaży na podstawie uznania reklamacji');
_add('S','Zwrot w magazynie','D','ND','T','T','Zwrot towaru do magazynu na podstawie reklamacji');
_add('S','Zamówienie sprzedaży','Z','ZK_N',,,'Nowe zamówienie sprzedaży na reklamowany towar');
_add('S','Wydanie z magazynu','W','ND','N','N','Wydanie z magazynu towaru na podstawie uznania reklamacji');
_add('S','Faktura sprzedaży','F','FAKS','N',,'Faktura sprzedaży na podstawie uznania reklamacji');
:: powiązania dla reklamacji do dodstawców
_add('Z','Dyspozycja transportu','T','TR_NZL',,,'Dyspozycja transportu na dostarczenie reklamowanego towaru');
_add('Z','Korekta zakupu','K','FAKS','T',,'Korekta zakupu na podstawie uznania reklamacji');
_add('Z','Zamówienie dostaw','Z','ZD_NAG',,,'Nowe zamówienie dostaw na reklamowany towar');
_add('Z','Przyjęcie do magazynu','P','ND','T','N','Przyjęcie do magazynu towaru na podstawie uznania reklamacji');
_add('Z','Faktura zakupu','F','FAKS','N',,'Faktura zakupu na podstawie uznania reklamacji');
~~


\f3_find_rek_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Klawisz F3 dla REKVAR.FND - tryb dodawania powiązań
::----------------------------------------------------------------------------------------------------------------------
__reklfnd.clear(); {? __reklfnd.first() || {! |? __reklfnd.del() !} ?};

_oki:=(';ND;FAKS;ZK_N;ZD_NAG;TR_NZL;'*('%1%2%1'[';',REK_Z.TAB]))>0;
_tab:=($REKVAR.RDOK().TAB)();

{? _oki & var_pres('_tab')=type_of(SYSLOG)
||
:: jest tabela do przetwarzania danych - jest co pobierać
:: maski do przeglądnięcia
   _rok:=REKVAR.OKR().ROK;
   _msk:=_tab.names();
   {? _msk.first() & REKVAR.OKR<>null()
   || _war:={? _tab=ND | _tab=FAKS
            || _odd:=1+(_tab.name()+3);
               _odd+form(REKVAR.OKR().ROK-2000,-2,0,'99')
            |? (_tab=ZK_N | _tab=ZD_NAG | _tab=TR_NZL) & REKVAR.ARCH='N'
            || _odd:=1+(_tab.name()+3);
               _odd+'__'
            || ''
            ?};
      {? _war<>''
      || {!
         |? {? (_msk.NAME+(+_war))<>_war
            || _msk.del()
            || _msk.next()
            ?}
         !}
      ?}
   ?};
   _msk.clear();
   {? _msk.first()
   ||
      {? _tab=ND     || exec('mag_psh','open_tab')
      |? _tab=FAKS   || exec('fak_psh','open_tab')
      |? _tab=ZK_N   || exec('openz_psh','open_tab')
      |? _tab=ZD_NAG || exec('openzd_psh','open_tab')
      |? _tab=TR_NZL || exec('opentr_psh','open_tab')
      ?};

      {!
      |? _next:=0;
         _rrm:=_msk.NAME+4;
         _odd:=1+(_msk.NAME+3);
         _rr2:=_msk.NAME+2;
         {? _tab=ND & ST.ODDZ=_odd     || exec('mag_open','open_tab',_odd,_rr2)
         |? _tab=FAKS & ST.ODDZ=_odd   || exec('fak_open','open_tab',_odd,_rr2)
         |? _tab=ZK_N & ST.ODDZ=_odd   || exec('openz','open_tab',_odd+_rr2)
         |? _tab=ZD_NAG & ST.ODDZ=_odd || exec('openzd','open_tab',_odd+_rr2)
         |? _tab=TR_NZL                || exec('opentr','open_tab',_rrm)
         || _next:=1
         ?};
         {? ~_next
         ||
::          Jeśli jest zgodny oddział to pobieramy dane
            {? _tab=FAKS
            ||
::             pobranie zapisów w tabeli FAKS
               {? REKVAR.FINDKH<>null()
               || FAKS.index('FAK_KH');
                  FAKS.prefix(BEER.SZ,REKVAR.FINDKH().KOD)
               || FAKS.index('FAK_SYM');
                  FAKS.prefix(BEER.SZ)
               ?};
               {? FAKS.first()
                & FAKS.find_tab('first','SYM',,':-',REKVAR.FIND,'WHERE',,'<>','L'
                                       ,'STAT_REJ',,'=','T','T','KOR','=',REK_Z.P01)
               || {!
                  |? {? exec('ctrlREK_D','reklamacje',REK_N.ref(),FAKS.uidref())
                     || __reklfnd.clear();
                        __reklfnd.blank();
                        __reklfnd.SYMFAK:=FAKS.SYM;
                        __reklfnd.DATFAK:=FAKS.DW;
                        __reklfnd.TYPFAK:=FAKS.T().T;
                        __reklfnd.TYPZAM:=FAKS.T().NAZ;
                        __reklfnd.UIDFAK:=FAKS.uidref();
                        __reklfnd.KHKOD:=FAKS.KH().KOD;
                        __reklfnd.KHSKR:=FAKS.KH().SKR;
                        __reklfnd.KHNAZ:=FAKS.KH().NAZ;
                        __reklfnd.REFKH:=$FAKS.KH;
                        __reklfnd.add(1)
                     ?};
                     FAKS.find_tab('next','SYM',,':-',REKVAR.FIND,'WHERE',,'<>','L'
                                          ,'STAT_REJ',,'=','T','T','KOR','=',REK_Z.P01)
                  !}
               ?}
            |? _tab=ZK_N
            || ZK_N.index('ZAM_KL');
               {? REKVAR.FINDKH<>null() || ZK_N.prefix('Z',REKVAR.FINDKH) || ZK_N.prefix('Z') ?};
               {? ZK_N.first()
                & ZK_N.find_tab('first','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T','R',,'=',_rok)
               || {!
                  |? {? exec('ctrlREK_D','reklamacje',REK_N.ref(),ZK_N.uidref())
                     || __reklfnd.clear();
                        __reklfnd.blank();
                        __reklfnd.SYMFAK:=ZK_N.SYM;
                        __reklfnd.DATFAK:=ZK_N.DP;
                        __reklfnd.TYPFAK:=ZK_N.T().T;
                        __reklfnd.TYPZAM:=ZK_N.T().NAZ;
                        __reklfnd.UIDFAK:=ZK_N.uidref();
                        __reklfnd.KHKOD:=ZK_N.KH().KOD;
                        __reklfnd.KHSKR:=ZK_N.KH().SKR;
                        __reklfnd.KHNAZ:=ZK_N.KH().NAZ;
                        __reklfnd.REFKH:=$ZK_N.KH;
                        __reklfnd.add(1)
                     ?};
                     ZK_N.find_tab('next','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T','R',,'=',_rok)
                  !}
               ?}
            |? _tab=ZD_NAG
            || ZD_NAG.index('KH');
               {? REKVAR.FINDKH<>null() || ZD_NAG.prefix(REKVAR.FINDKH) || ZD_NAG.prefix() ?};
               {? ZD_NAG.first()
                & ZD_NAG.find_tab('first','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T','R',,'=',_rok)
               || {!
                  |? {? exec('ctrlREK_D','reklamacje',REK_N.ref(),ZD_NAG.uidref())
                     || __reklfnd.clear();
                        __reklfnd.blank();
                        __reklfnd.SYMFAK:=ZD_NAG.SYM;
                        __reklfnd.DATFAK:=ZD_NAG.DATA;
                        __reklfnd.TYPFAK:=ZD_NAG.T().T;
                        __reklfnd.TYPZAM:=ZD_NAG.T().NAZ;
                        __reklfnd.UIDFAK:=ZD_NAG.uidref();
                        __reklfnd.KHKOD:=ZD_NAG.KH().KOD;
                        __reklfnd.KHSKR:=ZD_NAG.KH().SKR;
                        __reklfnd.KHNAZ:=ZD_NAG.KH().NAZ;
                        __reklfnd.REFKH:=$ZD_NAG.KH;
                        __reklfnd.add(1)
                     ?};
                     ZD_NAG.find_tab('next','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T','R',,'=',_rok)
                  !}
               ?}
            |? _tab=ND
            || {? REK_Z.P02='T'
               || _war:='"TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DN=\'T\''
                        +'and "TYPYDOK".TD=\'\' and "TYPYDOK".DS=\'N\''
               || _war:=''
               ?};
::               _war:={? REK_Z.P02='T' || exec('get','#params',300501,2) || '' ?};
               ND.index('REKKH');
               {? REKVAR.FINDKH<>null() || ND.prefix(REK_Z.P01,'T',REKVAR.FINDKH) || ND.prefix(REK_Z.P01,'T') ?};
               {? ND.first() & ND.find_tab('first','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T')
               || {!
                  |? {? _war=''
                      | (_txt:='select * from TYPYDOK where %1 and "TYPYDOK".T=\'%2\''[_war,ND.TYP().T];
                         sql(_txt).size())
                     || {? exec('ctrlREK_D','reklamacje',REK_N.ref(),ND.uidref())
                        || __reklfnd.clear();
                           __reklfnd.blank();
                           __reklfnd.SYMFAK:=ND.SYM;
                           __reklfnd.DATFAK:=ND.D;
                           __reklfnd.TYPFAK:=ND.TYP().T;
                           __reklfnd.TYPZAM:=ND.TYP().NAZ;
                           __reklfnd.UIDFAK:=ND.uidref();
                           __reklfnd.KHKOD:=ND.KH().KOD;
                           __reklfnd.KHSKR:=ND.KH().SKR;
                           __reklfnd.KHNAZ:=ND.KH().NAZ;
                           __reklfnd.REFKH:=$ND.KH;
                           __reklfnd.REFMAG:=$ND.MAG;
                           __reklfnd.UIDZAM:='%1 - %2'[ND.MAG().SYM,ND.MAG().NAZ];
                           __reklfnd.add(1)
                        ?}
                     ?};
                     ND.find_tab('next','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T')
                  !}
               ?}
            |? _tab=TR_NZL
            || TR_NZL.index('KH');
               {? REKVAR.FINDKH<>null() || TR_NZL.prefix(ST.ODDZ,REKVAR.FINDKH) || TR_NZL.prefix(ST.ODDZ) ?};
               {? TR_NZL.first()
                & TR_NZL.find_tab('first','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','Z','WHERE',,'=','','AR',,'=',_rok)
               || {!
                  |? {? exec('ctrlREK_D','reklamacje',REK_N.ref(),TR_NZL.uidref())
                     || __reklfnd.clear();
                        __reklfnd.blank();
                        __reklfnd.SYMFAK:=TR_NZL.SYM;
                        __reklfnd.DATFAK:=TR_NZL.DT;
                        __reklfnd.TYPFAK:='TRANSPORT';
                        __reklfnd.TYPZAM:='Dyspozycja transportu';
                        __reklfnd.UIDFAK:=TR_NZL.uidref();
                        __reklfnd.KHKOD:=TR_NZL.KH().KOD;
                        __reklfnd.KHSKR:=TR_NZL.KH().SKR;
                        __reklfnd.KHNAZ:=TR_NZL.KH().NAZ;
                        __reklfnd.REFKH:=$TR_NZL.KH;
                        __reklfnd.add(1)
                     ?};
                     TR_NZL.find_tab('next','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','Z','WHERE',,'=','','AR',,'=',_rok)
                  !}
               ?};
               {? TR_NZL.first()
                & TR_NZL.find_tab('first','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T','WHERE',,'=','','AR',,'=',_rok)
               || {!
                  |? {? exec('ctrlREK_D','reklamacje',REK_N.ref(),TR_NZL.uidref())
                     || __reklfnd.clear();
                        __reklfnd.blank();
                        __reklfnd.SYMFAK:=TR_NZL.SYM;
                        __reklfnd.DATFAK:=TR_NZL.DT;
                        __reklfnd.TYPFAK:='TRANSPORT';
                        __reklfnd.TYPZAM:='Dyspozycja transportu';
                        __reklfnd.UIDFAK:=TR_NZL.uidref();
                        __reklfnd.KHKOD:=TR_NZL.KH().KOD;
                        __reklfnd.KHSKR:=TR_NZL.KH().SKR;
                        __reklfnd.KHNAZ:=TR_NZL.KH().NAZ;
                        __reklfnd.REFKH:=$TR_NZL.KH;
                        __reklfnd.add(1)
                     ?};
                     TR_NZL.find_tab('next','SYM',,':-',REKVAR.FIND,'STAT_REJ',,'=','T','WHERE',,'=','','AR',,'=',_rok)
                  !}
               ?}
            ?}
         ?};
         _msk.next()
      !};

      {? _tab=ND     || exec('mag_pop','open_tab')
      |? _tab=FAKS   || exec('fak_pop','open_tab')
      |? _tab=ZK_N   || exec('openz_pop','open_tab')
      |? _tab=ZD_NAG || exec('openzd_pop','open_tab')
      |? _tab=TR_NZL || exec('opentr_pop','open_tab')
      ?}

   ?};
   obj_del(_msk)
?};

__reklfnd.clear();
{? __reklfnd.first()
|| {? __reklfnd.select()
   || REKVAR.SYM:=__reklfnd.SYMFAK;
      REKVAR.TYP:=__reklfnd.TYPFAK;
      REKVAR.NAZ:=__reklfnd.TYPZAM;
      REKVAR.DAT:=__reklfnd.DATFAK;
      REKVAR.MAG:={? __reklfnd.REFMAG<>''
                  || exec('FindAndGet','#table',MG,__reklfnd.REFMAG,,"'%1 - %2'[SYM,NAZ]",'')
                  || ''
                  ?};
      REKVAR.FINDKH:=exec('FindAndGet','#table',KH,__reklfnd.REFKH,,,null());
      REKVAR.FND_UID:=__reklfnd.UIDFAK;
      REKVAR.FIND:=__reklfnd.SYMFAK;
      exec('genDOK','reklamacje',REKVAR.FND_UID)
   ?}
|| FUN.info('Dla podanego rodzaju: %1,\nnic nie znaleziono: wskazany kontrahent i symbol.'@[REKVAR.RDOK().OPIS])
?};
REKVAR.FIND


\genDOK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: generuje pozycje do reklamacji dla wskazanego dokumentu
::   WE: _a - wskazanie na dokument, zamówienie, dyspozycje
::       [_b] - 1-tryb kontroli zwraca uproszczona tablice pozycji 0(domyślnie)-generator
::----------------------------------------------------------------------------------------------------------------------
_dok:={? var_pres('_a')=type_of(null())
      || _a
      |? var_pres('_a')=type_of('') & (+_a )=48
      || exec('FindAndGet','#table',ref_tab(_a),_a,,,null())
      || null()
      ?};
{? _dok=null() || return(0) ?};

_tryb:=0;
_res:={? var_pres('_b')=type_of(0) & _b
      || _tryb:=1;
         tab_tmp(1,'DP_REF','STRING[48]','','IL','REAL','')
      || 1
      ?};

_msk:=ref_name(_dok)+3;
_ms4:=ref_name(_dok)+4;
_tab:=ref_tab(_dok);
_ind:='';
_rek_n:=REK_N.ref();

_oki:=1;
{? _tab=ND     || exec('mag_psh','open_tab'); exec('mag_open','open_tab',1+_msk,_msk+2); _tap:=DK; _ind:='DOKMAG'
|? _tab=FAKS   || exec('fak_psh','open_tab'); exec('fak_open','open_tab',1+_msk,_msk+2); _tap:=FAP; _ind:='FAP'
|? _tab=ZK_N   || exec('openz_psh','open_tab'); exec('openz','open_tab',_msk); _tap:=ZK_P; _ind:='NAG'
|? _tab=ZD_NAG || exec('openzd_psh','open_tab'); exec('openzd','open_tab',_msk); _tap:=ZD_POZ; _ind:='POZ'
|? _tab=TR_NZL || exec('opentr_psh','open_tab'); exec('opentr','open_tab',_ms4); _tap:=TR_ZL; _ind:='POZ'
|| _tap:=_tab;
   _oki:=0
?};

_tab.prefix();
{? _oki & _tab.seek(_dok)
|| _tap.index(_ind);
   _tap.prefix(_dok);
   {? _tap.first()
   || _sym:={? _tab=ND     || DK.N().SYM
            |? _tab=FAKS   || FAP.FAKS().SYM
            |? _tab=ZK_N   || ZK_P.N().SYM
            |? _tab=ZD_NAG || ZD_POZ.ZD_NAG().SYM
            |? _tab=TR_NZL || TR_ZL.TR_NZL().SYM
            || ''
            ?};
      _typ:={? _tab=ND     || ND.TYP().T
            |? _tab=TR_NZL || 'TRANSPORT'
            || _tab.T().T
            ?};
      _dat:={? _tab=ND     || DK.N().D
            |? _tab=FAKS   || FAP.FAKS().DW
            |? _tab=ZK_N   || ZK_P.N().DP
            |? _tab=ZD_NAG || ZD_POZ.ZD_NAG().DATA
            |? _tab=TR_NZL || TR_ZL.TR_NZL().DT
            || ''
            ?};
      _kor:={? _tab=FAKS   || FAP.FAKS().T().KOR='T' || 0 ?};
      _opis:='%1 o symbolu %2 z dnia %3'@[_typ,_sym,$_dat];
      {!
      |? {? _tryb
         || _res.blank();
            _res.DP_REF:=_tap.uidref();
            _res.IL:={? _tap=ZK_P   || _tap.ILZ
                     |? _tap=ZD_POZ || _tap.IL
                     || _tap.IL
                     ?};
            {? {? _kor || _res.IL<>0 || _res.IL>0 ?} || _res.add(1) ?}
         || __reklpos.blank();
            __reklpos.POS:={? _tab=ND || _tap.P || _tap.POZ ?};
            __reklpos.POZ:=0;
            __reklpos.KTM:=_tap.M().KTM;
            __reklpos.NAZ:=_tap.M().N;
            __reklpos.JM:={? (_tab=FAKS & _tab.SZ='Z') | (_tab=ZD_NAG)
                          || _tap.JM().KOD
                          || _tap.M().J().KOD
                          ?};
            __reklpos.ILS:={? _tap=ZK_P   || _tap.ILZ
                           |? _tap=ZD_POZ || _tap.IL
                           || _tap.IL
                           ?};
            __reklpos.ILR:=0;
            __reklpos.MREF:=$_tap.M;
            __reklpos.FAPREF:=$_tap.ref();
            __reklpos.FAKREF:=$_dok;
            __reklpos.SYMFAK:=_sym;
            __reklpos.DATFAK:=_dat;
            __reklpos.TYPFAK:=_typ;
            __reklpos.WYB:='N';
            __reklpos.UID:=_tab.uidref();
            __reklpos.UIP:=_tap.uidref();
            __reklpos.KOR:=_kor;
            _ilr:=exec('ctrlREK_D','reklamacje',_rek_n,__reklpos.UID,__reklpos.UIP);
            __reklpos.ILS-=_ilr;
            {? ~_ilr & {? _kor || __reklpos.ILS<>0 || __reklpos.ILS>0 ?} || __reklpos.add(1) ?}
         ?};
         _tap.next()
      !}
   ?}
?};
{? _tab=ND     || exec('mag_pop','open_tab')
|? _tab=FAKS   || exec('fak_pop','open_tab')
|? _tab=ZK_N   || exec('openz_pop','open_tab')
|? _tab=ZD_NAG || exec('openzd_pop','open_tab')
|? _tab=TR_NZL || exec('opentr_pop','open_tab')
?};
_res


\disppow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: wyświetla powiązany dokument
::   WE: _a - wskazanie na dokument uidref
::----------------------------------------------------------------------------------------------------------------------
exec('disp_rek_d','reklamacje',_a);
''


\chk_rekd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: kontrola podania prawidłowej ilości
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_tab:=ref_tab(REK_D.DK_REF);
_dokl:={? _tab=ND | _tab=TR_NZL || M.DOKL
       |? _tab=FAKS | _tab=ZK_N || M.DOKL_S
       |? _tab=ZD_NAG           || M.DOKL_Z
       || M.DOKL
       ?};
REK_D.IL:=REK_D.IL$_dokl;
_kor:=REKVAR.ILR<0;
{? ~_kor & REK_D.IL<=0
|| FUN.info('Należy podać ilość większą od zera.'@);
   _res:='IL'
|? _kor & REK_D.IL>=0
|| FUN.info('Należy podać ilość mniejszą od zera.'@);
   _res:='IL'
|? ~_kor & REK_D.IL>REKVAR.ILR
|| FUN.info('Należy podać ilość mniejszą lub równą %1.'@[form(REKVAR.ILR,,_dokl)]);
   _res:='IL'
|? _kor & REK_D.IL<REKVAR.ILR
|| FUN.info('Należy podać ilość większą lub równą %1.'@[form(REKVAR.ILR,,_dokl)]);
   _res:='IL'
?};
_res


\rek_n_word
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Wydruk reklamcji wg szablonu WORD
::----------------------------------------------------------------------------------------------------------------------
{? BEER.SZ='Z'
|| params_exec('generuj','szablon_zws','TRE_REKL_DOSTAWCA',$REK_N.ref())
|| params_exec('generuj','szablon_zws','TRE_REKL_KLIENT',$REK_N.ref())
?};
~~


\rek_n_deleted_in_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Obsługa sytuacji że jest czynność na liście todo reklamacja została usunięta
::   WE: _a - obj_new - obiekt Menadżera Procesów
::       [_b] - INTEGER - 0/[1] - czy errorować proces, jeżeli 0 to jest robiony .done()
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_mp:=_a;

_error:=1;
{? var_pres('_b')=type_of(0)
|| _error:=_b
?};

_msg:=exec('rek_n_deleted_msg','reklamacje');
_action:=exec('cur_act_uid','#b__box');
{? _mp.isService()=0 & _mp.CLEANER=0
|| FUN.emsg(_msg)
?};
{? _error>0
|| _mp.error(_msg)
|| _mp.done()
?};
~~


\rek_n_deleted_msg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Komunikat o usunięciu reklamacji
::----------------------------------------------------------------------------------------------------------------------
'Reklamacja nie została odnaleziona, prawdopodobnie została usunięta.'@@


\status_zarejestrowano
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Status reklamacji - zarejestrowano
::   WE: [_a] - czy napis tłumaczony do etykiet (1), napis zwykły (domyślnie: 0)
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & _a
|| 'Zarejestowano'@
|| 'Zarejestowano'
?}


\status_akceptacja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Status reklamacji - akceptacja
::   WE: [_a] - czy napis tłumaczony do etykiet (1), napis zwykły (domyślnie: 0)
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & _a
|| 'Akceptacja'@
|| 'Akceptacja'
?}


\status_odrzucenie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Status reklamacji - odrzucenie
::   WE: [_a] - czy napis tłumaczony do etykiet (1), napis zwykły (domyślnie: 0)
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & _a
|| 'Odrzucenie'@
|| 'Odrzucenie'
?}


\status_akceptacja_zamkniecie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Status reklamacji - akceptacja zamknięcie
::   WE: [_a] - czy napis tłumaczony do etykiet (1), napis zwykły (domyślnie: 0)
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & _a
|| 'Akceptacja (zamknięcie)'@
|| 'Akceptacja (zamknięcie)'
?}


\status_odrzucenie_zamkniecie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Status reklamacji - akceptacja zamknięcie
::   WE: [_a] - czy napis tłumaczony do etykiet (1), napis zwykły (domyślnie: 0)
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & _a
|| 'Odrzucenie (zamknięcie)'@
|| 'Odrzucenie (zamknięcie)'
?}


\rek_n_status_wybierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Wybór końcowego statusu reklamacji - akceptacja lub odrzucenie
::----------------------------------------------------------------------------------------------------------------------
_st:='';
_wyn:=FUN.choice('Wybierz zamknięcie reklamacji: %1.'@[REK_N.SYM],,'Akceptacja'@,'Odrzucenie'@);
{? _wyn=1
|| _st:=exec('status_akceptacja','reklamacje')
|? _wyn=2
|| _st:=exec('status_odrzucenie','reklamacje')
?};
_st


\ctrlREK_D
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Kontroluje czy dany typ nie został już dołączony do powiązań
::   WE: _a - wskazanie na REK_N
::       _b - uidref dokumentu do powiązania
::       [_c] - uidref pozycji do powiązania
::   WY: 0-nie podlega powiązaniu 1-podlega lub w przypadku podanego _c ilość pozostała powiązana
::----------------------------------------------------------------------------------------------------------------------
 _rek_n:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_dk_ref:={? var_pres('_b')=type_of('') & (+_b)=48 || _b || '' ?};
_dp_ref:={? var_pres('_c')=type_of('') & (+_c)=48 || _c || '' ?};
_res:=0;

REK_D.cntx_psh();
REK_D.index('REK_D');
{? _dp_ref='' || REK_D.prefix(_rek_n,_dk_ref) || REK_D.prefix(_rek_n,_dk_ref,_dp_ref) ?};
{? REK_D.first()
|| {? _dp_ref<>''
   || {!
      |? _res+=REK_D.IL;
         REK_D.next()
      !}
   || _pos:=exec('genDOK','reklamacje',_dk_ref,1);
      _pos.clear();
      _isPos:=0;
      {? _pos.first()
      || {!
         |? _ilr:=exec('ctrlREK_D','reklamacje',_rek_n,_dk_ref,_pos.DP_REF);
            _isPos+=_ilr=0;
            ~_isPos & _pos.next()
         !}
      ?};
      obj_del(_pos);
      _res:=_isPos>0
   ?}
|| {? _dp_ref<>'' || _res:=0 || _res:=1 ?}
?};
REK_D.cntx_pop();
_res



\rek_n_druk_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Drukowanie grupowe reklamacji
::   WE: _a - utworz pdf 0-nie 1-tak
::       _b - UID czynności
::       _c - nazwa akcji
::       [_d] - maska wydruku
::       [_e] - nie powoływać i nie usuwać komm-ów jeśli istnieją
::----------------------------------------------------------------------------------------------------------------------
_czy_pdf:=_a;
_act_uid:=_b;
_akcja:=_c;
_msk:={? var_pres('_d')=type_of('') || _d || '' ?};
_nom:={? var_pres('_e')=type_of(0) || _e & var_pres('__kom')>100 || 0 ?};

_czysc:="VAR_DEL.delete('__GRP_DR')";
_czysc();
{? ~_nom || exec('ini_kom','#message','Wydruk grupowy reklamacji'@) ?};

:: __GRP_DR - srodowisko grupowego drukowania
__GRP_DR:=obj_new('GR','SEL','SIZE','FIRST','ESC','WZ','PDF','SHOW_PDF','DR_N_AKC','DR_N_CAN');
:: __GRP_DR.SEL, _Sel - wybrane dokumenty
__GRP_DR.SEL:=_Sel:=REK_N.sel_aget();
{? _Sel.first()
|| __GRP_DR.GR:=1
|| __GRP_DR.GR:=0;
   _Sel.REF:=#REK_N.ref(); _Sel.CRC:=REK_N.crc(); _Sel.add()
?};
__GRP_DR.SIZE:=_Sel.size();
:: __GRP_DR.FIRST - drukowanie pierwszego dokumentu sposrod zaznaczonych 0-nie 1-tak
__GRP_DR.FIRST:=1;
:: __GRP_DR.ESC - zrezygnowano z wypelnienia parametrow wydruku 0-nie 1-tak
__GRP_DR.ESC:=0;
:: __GRP_DR.WZ - wybrany wzorzec wydruku
__GRP_DR.WZ:=_msk;
:: __GRP_DR.PDF - utworz pdf 0-nie 1-tak
__GRP_DR.PDF:=_czy_pdf;
:: __GRP_DR.SHOW_PDF - wyswietlac utworzone pdf 0-nie 1-tak
__GRP_DR.SHOW_PDF:=0;
_ok:=1;

REK_N.cntx_psh();

{? _ok>0
|| {? __GRP_DR.GR
   || __GRP_DR.SHOW_PDF:={? __GRP_DR.PDF || FUN.ask('Wyświetlić wygenerowane dokumenty?'@) ?}
   ?}
?};
:: Drukowanie
{? _ok
||
   _loop:=_Sel.first();
   {!
   |? _loop
   |!
      {? REK_N.seek(_Sel.REF,)
      ||
         _params:=exec('mp_run_a','#b__box');
         _params.ACT_UID:=_act_uid;
         _params.UIDREF:=REK_N.uidref();
         _params.AKCJA:=_akcja;
         _params.GRUPA:={? __GRP_DR.GR || 'T' || 'N' ?};
         _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
         exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'REK_N',REK_N.ref());
         exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'CZY_PDF',{? _czy_pdf || 'TAK' || 'NIE' ?});

         exec('mp_run','#b__box',_params);

         obj_del(_params);

         __GRP_DR.FIRST:=0
      ?};
      _loop:=__GRP_DR.ESC=0 & {? _czy_pdf || _Sel.next() || 0 ?}
   !}
?};

{? __GRP_DR.ESC=0 || REK_N.sel_adel() ?};
{? __GRP_DR.ESC=0 & ~_nom || exec('end_kom','#message') ?};
REK_N.cntx_pop();
_czysc();
0


\rek_n_druk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: drukuje reklamcję
::   WE: [_a] - czy zapisywać dokument 0 - nie 1 - tak
::       [_b] - maska wydruku
::       [_c] - 0/1-czynność uruchomiona automatycznie
::   WY: _wyn.WYN - 0 / 1
::       _wyn.REF - DOKUM.ref() / null()
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new('REF','WYN');
:: null lub ref zalozonego rekordu w tabeli DOKUM
_wyn.REF:=null;
_wyn.WYN:=1;

{? _>=1  || {? type_of(_a)<>1 || _a:=0 ?}  || _a:=0  ?};
_msk:={? var_pres('_b')=type_of('') || _b || '' ?};
_auto:={? var_pres('_c')=type_of(0) || _c || 0 ?};

:: grupowy wydruk
_grp_dr:=var_pres('__GRP_DR')>100 & __GRP_DR.GR;

__TOPDF:=_a;
_ok:=1;

{? _a=1
|| NRDOK.index('NRDOK');
   NRDOK.prefix('SYS','');
   {? ~NRDOK.first()
   || _ok:=0;
      FUN.info('Nie zdefiniowano numeracji SYS dla dokumentów powiązanych.'@)
   ?}
?};
_txt:={? BEER.SZ='S' || 'Reklamacja klienta' || 'Reklamacja do dostawy' ?};
{? _ok
||
   _drukuj:=1;
   {? _drukuj=1
   ||
      POLA.NAZ_WYDR:='';
      _repexec:=0;

      {? _a=1
      ||
         {? exec('czy_autoadd','dokum',REK_N.ref())
         ||
            {? _grp_dr
            ||
               _repexec:=-1;
               exec('add_kom','#message','Utworzono już PDF dla reklamacji.'@,7,exec('record','#to_string',REK_N.ref()))
            |? ~FUN.ask('Utworzono już PDF dla reklamacji %1.\nCzy utworzyć kolejny?'@[exec('record','#to_string',REK_N.ref())])
            ||
               _repexec:=-1
            ?}
         ?};
         {? _repexec<>-1
         ||
            {? BEER.SZ='S'
            || _pth:='Reklamacja klienta '+exec('str_to_pth','#string',REK_N.SYM)+'.pdf'
            || _pth:='Reklamacja do dostawcy '+exec('str_to_pth','#string',REK_N.SYM)+'.pdf'
            ?};
            _repexec:=
               {? _grp_dr & __GRP_DR.FIRST=0 & __GRP_DR.WZ<>''
               || rep_exec(__GRP_DR.WZ,,,_pth,1)
               || exec('rep_exec','#b_report','',{? _msk<>''
                                                 || _msk
                                                 |? BEER.SZ='S'
                                                 || 'tre_rekw_*'
                                                 || 'tre_rdow_*'
                                                 ?},,2,_pth,1)

               ?}
         ?}
      || _repexec:=
            {? _grp_dr & __GRP_DR.FIRST=0 & __GRP_DR.WZ<>''
            || rep_exec(__GRP_DR.WZ)
            || exec('rep_exec','#b_report','',{? _msk<>''
                                              || _msk
                                              |? BEER.SZ='S'
                                              || 'tre_rekw_*'
                                              || 'tre_rdow_*'
                                              ?},_txt,2,,,,,,'W')

            ?}
      ?};
      _wyn.WYN:=_repexec;
      {? POLA.NAZ_WYDR<>'' & _a=1 & _repexec>0
      ||
         {? _auto & ~_grp_dr
::         & (';AC'*FAKS.WHERE)>1
         ||
            VAR_DEL.delete('__GRP_DR');
            __GRP_DR:=obj_new('GR','SHOW_PDF');
            __GRP_DR.GR:=1;
            __GRP_DR.SHOW_PDF:=0
         ?};
         _wyn.REF:=
            exec('save_dok','dokum','REK_N',_pth,POLA.NAZ_WYDR,REK_N.SYM,
               REK_N.EM,'Reklamacja o symbolu: '+REK_N.SYM+' wystawca: '+XINFO.NAZ,
               PARAM_W.JEZYK,REK_N.STAT_REJ
            );
         {? _auto & ~_grp_dr
         ||
            VAR_DEL.delete('__GRP_DR')
         ?}
      ?};
      {? _grp_dr & _repexec=0 || __GRP_DR.ESC:=1 ?}
   || {? _grp_dr || __GRP_DR.ESC:=1 ?}
   ?}
?};
VAR_DEL.delete('__TOPDF');
_wyn


\begin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: klauzula BEGIN dla wyruków dot. reklamacji
::   WE:  _a  - nazwa wydruku
::       [_b] - czy pokazywac panel dialogowy z parametrami ([1] -tak, 0 - nie) - gdy nie pokazuje panel nie zapisuje
::              rowniez ustawien wybranych
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};

REK_N.cntx_psh;

exec('end','reklamacje',0);

:: do numeracji stron przy drukowaniu paczek reklamacji
pages:=0;
color:=prn1:=prn2:='';
lm:=ll:=vp:=lmt:=lmt_org:=rsep:=0;
wyjscie:=0;
_wydr_naz:=_a;

PARAM_W.KOPIA:=2;
PARAM_W.DR_DUPL:='N';
PARAM_W.DUPLIKAT:=date(0,0,0);

WYDRUKIL.index('WYDRUKI');
WYDRUKIL.prefix(OPERATOR.USER().KOD,_wydr_naz);
{? ~WYDRUKIL.first()
||
   WYDRUKIL.blank();
   WYDRUKIL.USERS:=OPERATOR.USER().KOD;
   WYDRUKIL.WYDRUK:=_wydr_naz;
   WYDRUKIL.add()
||
   PARAM_W.KOPIA:=WYDRUKIL.TYP_ZEST;
   PARAM_W.DR_DUPL:=WYDRUKIL.STR3;
   PARAM_W.DUPLIKAT:={? PARAM_W.DR_DUPL='T' || date() || date(0,0,0) ?}
?};

PARAM_W.win_edit('WYDR_REK');
{? wyjscie=0
||
   _chk_par:="
      _wyn:='';
      {? PARAM_W.KOPIA<0
      || FUN.info('Ilość kopii nie może być ujemna.'@);
         _wyn:='KOPIA'
      ?};
      {? _wyn='' & PARAM_W.DR_DUPL='T'
      || {? PARAM_W.DUPLIKAT=date(0,0,0)
         || FUN.info('Niewypełniona data wystawienia duplikatu.'@);
            _wyn:='DUPLIKAT'
         ?};
         {? _wyn=''
         || {? PARAM_W.DUPLIKAT<FAKS.DW
            || FUN.info('Data duplikatu wcześniejsza od daty wystawienia dokumentu.'@);
               _wyn:='DUPLIKAT'
            ?}
         ?}
      ?};
      _wyn
   ";
   {? {? _b=1
      || exec('set_efld_opt_paramw','faktury_wydruk',0);
         {? PARAM_W.edit(_chk_par)
         || 1
         || {? exec('czy_grp_dr','faktury_wydruk') || __GRP_DR.ESC:=1 ?}; 0
         ?}
      || 1
      ?}
   ||
      {? _b
      || WYDRUKIL.index('WYDRUKI');
         WYDRUKIL.prefix(OPERATOR.USER().KOD,_wydr_naz);
         {? WYDRUKIL.first()
         ||
            WYDRUKIL.TYP_ZEST:=PARAM_W.KOPIA;
            WYDRUKIL.STR3:=PARAM_W.DR_DUPL;
            WYDRUKIL.OD_DATY:=PARAM_W.DUPLIKAT;
            WYDRUKIL.put()
         ?}
      ?}
   ||
      wyjscie:=1
   ?}
?};

{? wyjscie=0
||
:: Dane towaru/usługi
:: szerokosc kolumn
   VAR_DEL.delete('k');    k:=obj_new(3);
:: dane drukowane
   VAR_DEL.delete('w');    w:=obj_new(obj_len(k));
:: nazwy kolumn
   VAR_DEL.delete('n');    n:=obj_new(obj_len(k));
:: Ocena reklamacji
:: szerokosc kolumn
   VAR_DEL.delete('k2');    k2:=obj_new(4);
:: dane drukowane
   VAR_DEL.delete('w2');    w2:=obj_new(obj_len(k2));
:: nazwy kolumn
   VAR_DEL.delete('n2');    n2:=obj_new(obj_len(k2));
:: szerokosci pozycji towaru/usługi
   VAR_DEL.delete('szer1'); szer1:=obj_new(obj_len(k));
:: szerokosci pozycji ocen reklamacji
   VAR_DEL.delete('szer2'); szer2:=obj_new(obj_len(k2));
:: Dane kontaktowe
   VAR_DEL.delete('__dk1');__dk1:=obj_new(20); {! _ii:=1..obj_len(__dk1)|! __dk1[_ii]:='' !};
   VAR_DEL.delete('__dk2');__dk2:=obj_new(20); {! _ii:=1..obj_len(__dk2)|! __dk2[_ii]:='' !};

   VAR_DEL.delete('PRN1'); PRN1:=obj_new(@.CLASS.PRINT,obj_len(k));
   VAR_DEL.delete('PRN2'); PRN2:=obj_new(@.CLASS.PRINT,obj_len(k2));
   VAR_DEL.delete('PRN3'); PRN3:=obj_new(@.CLASS.PRINT,obj_len(5));
   PRN1.sl_frame();
   PRN2.sl_frame();
   PRN3.n_frame();

:: Towar / usluga
   n[1]:=exec('tr','tlumaczenia','1000181');           k[1]:=40;
:: Ilosc
   n[2]:=exec('tr','tlumaczenia','1000183');           k[2]:=10;
:: jm
   n[3]:=exec('tr','tlumaczenia','1000184');           k[3]:=4;
:: wyliczenie szerokosci kolumn wg etykiet
   {! _i:=1..obj_len(n)
   |!
      {? var_pres('['+$_i+']',n)=type_of('stringi')
      ||
         _max:=0;
         STR.split(n[_i]);
         {! |? _word:=STR.get_word(); {? +_word>_max || _max:=+_word ?}; STR.next() !};
         k[_i]:=_max
      ?}
   !};

   {! _i:=1..obj_len(k) |! w[_i]:=0 !};

   n2[1]:='Status'@;           k2[1]:=20;
   n2[2]:='Sporządził'@;       k2[2]:=20;
   n2[3]:='Dnia'@;             k2[3]:=10;
   n2[4]:='Opis'@;             k2[4]:=60;
:: wyliczenie szerokosci kolumn wg etykiet
   {! _i:=1..obj_len(n2)
   |!
      {? var_pres('['+$_i+']',n2)=type_of('stringi')
      ||
         _max:=0;
         STR.split(n2[_i]);
         {! |? _word:=STR.get_word(); {? +_word>_max || _max:=+_word ?}; STR.next() !};
         k2[_i]:=_max
      ?}
   !};

   {! _i:=1..obj_len(k2) |! w2[_i]:=0 !};

:: ilosc znakow w wierszu
   max_T8B:=max_T10B:=max_T8G:=max_T8:=0;
   licznik:=ilkop:=stron:=0;
   Text:=Text1:='';

:: dokładność ilości
   ddokl:=exec('fld_prec','#field',FAP,'IL');

   print1:="
      VAR_DEL.delete('PRN1');
      PRN1:=obj_new(@.CLASS.PRINT,obj_len(k));
      PRN1.sl_frame();
      {? k[1] || PRN1.add($('w[1]'),               k[1], n[1]) ?};
      {? k[2] || PRN1.add($('form(w[2])'),         k[2], n[2]) ?};
      {? k[3] || PRN1.add($('w[3]'),               k[3], n[3],1) ?}
   ";
   print2:="
      VAR_DEL.delete('PRN2');
      PRN2:=obj_new(@.CLASS.PRINT,obj_len(k2));
      PRN2.sl_frame();
      {? k2[1] || PRN2.add($('w2[1]'),               k2[1], n2[1]) ?};
      {? k2[2] || PRN2.add($('w2[2]'),               k2[2], n2[2]) ?};
      {? k2[3] || PRN2.add($('form(w2[3])'),         k2[3], n2[3]) ?};
      {? k2[4] || PRN2.add($('w2[4]'),               k2[4], n2[4]) ?}
   ";
   print3:="
      prn1:='PRN3';
      op_1:=op_2:=op_3:=op_4:='';
      VAR_DEL.delete('PRN3');
      PRN3:=obj_new(@.CLASS.PRINT,5);
      PRN3.n_frame();
      PRN3.add($('form('''',)'),_a,'',1);
      PRN3.add($('form(op_1,)'),_b,'');
      PRN3.add($('form(op_2,)'),_c,'',1);
      PRN3.add($('form(op_3,)'),_d,'');
      PRN3.add($('form(op_4,)'),_e,'',1)
   ";
:: przypisanie wartosci dot. towaru/usługi
   pozycja:="
      w[1]:=REK_N.M().KTM+' - '+REK_N.M().N;
      w[2]:=REK_N.IL;
      w[3]:=REK_N.JM().KOD;
::    szacowanie ilosci lini pozycji
      _f:=prn1+'.ini_line()'; _v:=($(_f))();
      _f:=prn1+'.length()'; il_lin:=($(_f))()+1
   ";
:: przypisanie wartosci dot. oceny reklamacji
   pozycja2:="
      w2[1]:=REK_N.ST;
      w2[2]:=REK_N.ESR().DANE;
      w2[3]:={? REK_N.DZ<>date(0,0,0) || REK_N.DZ || '' ?};
      w2[4]:={? +REK_N.memo_txt(,1,'RES_OPIS')>0 || gsub(REK_N.memo_txt(,1,'RES_OPIS'),'\n',' ') || '' ?};
::    szacowanie ilosci lini pozycji
      _f:=prn1+'.ini_line()'; _v:=($(_f))();
      _f:=prn1+'.length()'; il_lin:=($(_f))()+1
   ";
:: uzupełenienie danych kontaktowych
   fill_dane:="
      {? exec('get','#params',100227,2)='T'
      || _kpocz:=2; _ul:=3
      || _kpocz:=3; _ul:=2
      ?};
      {? exec('get','#params',100229,2)='T'
      || REK_N.KH();
         __dk2[1]:='Dane kontaktowe:';
         __dk2[_kpocz]:=exec('kpocz','faktury_wydruk',REK_N.KPOCZ,REK_N.POCZ,REK_N.MIASTO,REK_N.UL);
         __dk2[_ul]:=exec('adr','faktury_wydruk',REK_N.UL,REK_N.NUMER,REK_N.LOKAL,REK_N.MIASTO,REK_N.POCZ);
         __dk2[4]:={? +REK_N.TEL || exec('tr','tlumaczenia','1000106')+' '+REK_N.TEL || '' ?};
         __dk2[5]:={? +REK_N.EM || 'e-mail: '+' '+REK_N.EM || '' ?}
      |? exec('get','#params',100229,2)='N'
      || REK_N.KH();
         __dk1[1]:='Dane kontaktowe:';
         __dk1[_kpocz]:=exec('kpocz','faktury_wydruk',REK_N.KPOCZ,REK_N.POCZ,REK_N.MIASTO,REK_N.UL);
         __dk1[_ul]:=exec('adr','faktury_wydruk',REK_N.UL,REK_N.NUMER,REK_N.LOKAL,REK_N.MIASTO,REK_N.POCZ);
         __dk1[4]:={? +REK_N.TEL || exec('tr','tlumaczenia','1000106')+' '+REK_N.TEL || '' ?};
         __dk1[5]:={? +REK_N.EM || 'e-mail: '+' '+REK_N.EM || '' ?}
      ?}
   "
?}


\end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: klauzula END w wydrukach dot. reklamacji
::   WE: [_a] =1-zdejmowac konteksty; =0-wpp
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=1 ?};

{? _a || REK_N.cntx_pop ?};

VAR_DEL.delete('color','prn1','prn2');
VAR_DEL.delete('lm','ll','vp','lmt','lmt_org','rsep');
VAR_DEL.delete('wyjscie');

undefine();

VAR_DEL.delete('k','w','n','k2','w2','n2','szer1','szer2','szer');
VAR_DEL.delete('PRN1','PRN2','PRN3','STR1','__dk1','__dk2');
VAR_DEL.delete('licznik','ilkop','stron','pages');
VAR_DEL.delete('max_T8','max_T8G','max_T10B','max_T8B');
VAR_DEL.delete('Text','Text1','poz');
VAR_DEL.delete('ddokl','op_1','op_2','op_3','op_4','seller_first');
VAR_DEL.delete('print1','print2','print3','fill_dane');
VAR_DEL.delete('pozycja','pozycja1');
VAR_DEL.delete('il_lin');
VAR_DEL.delete('bpage','ok')


\genZAM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: generuje pozycje do reklamacji dla wskazanego ZK_N-a
::   WE: _a - wskazanie na ZK_N-a
::----------------------------------------------------------------------------------------------------------------------
_dok:={? var_pres('_a')=type_of(null())
      || _a
      |? var_pres('_a')=type_of('') & (+_a )=48
      || exec('FindAndGet','#table',ZK_N,_a,,,null())
      || null()
      ?};
{? _dok=null() || return(0) ?};

_msk:=ref_name(_dok)+3;
exec('openz_psh','open_tab');
exec('openz','open_tab',_msk);
ZK_N.prefix();
{? ZK_N.seek(_dok)
|| REKVAR.FINDKH:=ZK_N.KH;
   REKVAR.FIND:=ZK_N.SYM;
   REKVAR.FND_UID:=ZK_N.uidref();
   ZK_RN.index('ZAM');
   ZK_RN.prefix(_dok);
   {? ZK_RN.first()
   || _opis:='%1 o symbolu %2 z dnia %3'@[ZK_N.T().T,ZK_N.SYM,$ZK_N.DP];
      REKVAR.ZAM:=ZK_N.SYM;
      REKVAR.TYPZAM:=ZK_N.T;
      REKVAR.DATZAM:=ZK_N.DP;
      REKVAR.DP:=date();
      REKVAR.KH:=ZK_N.KH;
      REKVAR.KH_ODB:=ZK_N.ODB;
      {!
      |? ZK_RP.index('POZR');
         ZK_RP.prefix(ZK_RN.ref());
         {? ZK_RP.first()
          & {? (+ZK_RN.ND)=16
            || exec('FindAndGet','#table',ND,ZK_RN.ND,,"STAT_REJ='T'",0)
            || ZK_RN.SWZ='- USŁUGI -'
            ?}
         || _opdokm:='%1 z dnia %2'@[ZK_RN.SWZ,form(ZK_RN.DND)];
            _opfaks:={? ZK_RN.FAKS<>'' || '%1 z dnia %2'@[ZK_RN.SFK,form(ZK_RN.DFK)] || '' ?};
            {!
            |? __reklpos.blank();
               __reklpos.SHOW:='T';
               __reklpos.POS:=0;
               __reklpos.POZ:=ZK_RP.P().POZ;
               __reklpos.KTM:=ZK_RP.P().M().KTM;
               __reklpos.NAZ:=ZK_RP.P().M().N;
               __reklpos.JM:=ZK_RP.P().M().J().KOD;
               __reklpos.ILS:=ZK_RP.ILR-ZK_RP.IL_RK;
               __reklpos.ILP:=__reklpos.ILS;
               __reklpos.ILR:=0;
               __reklpos.MREF:=$ZK_RP.P().M;
               __reklpos.FAPREF:='';
               __reklpos.ZAPREF:=$ZK_RP.P;
               __reklpos.FAKREF:='';
               __reklpos.ZAMREF:=$ZK_RP.P().N;
               __reklpos.ZRPREF:=$ZK_RP.ref();
               __reklpos.RERREF:='';
               __reklpos.SYMFAK:='';
               __reklpos.SYMZAM:=ZK_RP.P().N().SYM;
               __reklpos.SYMRER:='';
               __reklpos.DATFAK:=date(0,0,0);
               __reklpos.DATZAM:=ZK_RP.P().N().DP;
               __reklpos.TYPFAK:='';
               __reklpos.TYPZAM:=ZK_RP.P().N().T().T;
               __reklpos.DATREK:=date();
               __reklpos.WYB:='N';
               __reklpos.OPDOKM:=_opdokm;
               __reklpos.OPFAKS:=_opfaks;
               __reklpos.NDREF:=ZK_RP.N().ND;
               {? __reklpos.ILS>0 || __reklpos.add(1) ?};
               ZK_RP.next()
            !}
         ?};
         ZK_RN.next()
      !}
   ?}
?};
_buf:=tab_tmp(2,'ZAPREF','STRING[48]','','NDREF','STRING[16]','','SQL','STRING[16]','');
__reklpos.clear();
__reklpos.prefix('N');
{? __reklpos.first()
|| {!
   |? _ref:=__reklpos.ref(); _zapref:=__reklpos.ZAPREF; _ndref:=__reklpos.NDREF; _ilp:=__reklpos.ILP;
      _oki:=__reklpos.next();
      {? (_buf.clear(); _buf.prefix(_zapref,_ndref); ~_buf.first())
      || _buf.blank();
         _buf.ZAPREF:=_zapref;
         _buf.NDREF:=_ndref;
         _buf.SQL:=$_ref;
         {? _buf.add(1)
         || __reklpos.cntx_psh();
            __reklpos.prefix();
            {? __reklpos.seek(_ref)
            || __reklpos.SHOW:='T';
               __reklpos.put(1)
            ?};
            __reklpos.cntx_pop()
         ?}
      || __reklpos.cntx_psh();
         __reklpos.prefix();
         {? __reklpos.seek(_buf.SQL)
         || __reklpos.ILS+=_ilp;
            __reklpos.put(1)
         ?};
         __reklpos.cntx_pop()
      ?};
      _oki
   !}
?};
obj_del(_buf);
exec('openz_pop','open_tab');
~~


\genDST
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: generuje pozycje do reklamacji dla wskazanego ZD_NAG-a
::   WE: _a - wskazanie na ZD_NAG-a
::----------------------------------------------------------------------------------------------------------------------
_dok:={? var_pres('_a')=type_of(null())
      || _a
      |? var_pres('_a')=type_of('') & (+_a )=48
      || exec('FindAndGet','#table',ZD_NAG,_a,,,null())
      || null()
      ?};
{? _dok=null() || return(0) ?};

_msk:=ref_name(_dok)+3;
exec('openzd_psh','open_tab');
exec('openzd','open_tab',_msk);
ZD_NAG.prefix();
{? ZD_NAG.seek(_dok)
|| REKVAR.FINDKH:=ZD_NAG.KH;
   REKVAR.FIND:=ZD_NAG.SYM;
   REKVAR.FND_UID:=ZD_NAG.uidref();
   ZD_RN.index('ZAM');
   ZD_RN.prefix(_dok);
   {? ZD_RN.first()
   || _opis:='%1 o symbolu %2 z dnia %3'@[ZD_NAG.T().T,ZD_NAG.SYM,$ZD_NAG.DATA];
      REKVAR.ZAM:=ZD_NAG.SYM;
      REKVAR.TYPZAM:=ZD_NAG.T;
      REKVAR.DATZAM:=ZD_NAG.DATA;
      REKVAR.DP:=date();
      REKVAR.KH:=ZD_NAG.KH;
      REKVAR.KH_ODB:=null();
      {!
      |? ZD_RP.index('POZ');
         ZD_RP.prefix(ZD_RN.ref());
         {? ZD_RP.first()
          & {? (+ZD_RN.ND)=16
            || exec('FindAndGet','#table',ND,ZD_RN.ND,,"STAT_REJ='T'",0)
            || ZD_RN.SPZ='- USŁUGI -'
            ?}
         || _opdokm:='%1 z dnia %2'@[ZD_RN.SPZ,form(ZD_RN.DND)];
            _opfaks:='';
            {!
            |? __reklpos.blank();
               __reklpos.SHOW:='T';
               __reklpos.POS:=0;
               __reklpos.POZ:=ZD_RP.ZD_POZ().POZ;
               __reklpos.KTM:=ZD_RP.ZD_POZ().M().KTM;
               __reklpos.NAZ:=ZD_RP.ZD_POZ().M().N;
               __reklpos.JM:=ZD_RP.ZD_POZ().M().J().KOD;
               __reklpos.ILS:=ZD_RP.IL_ZRE-ZD_RP.IL_RK;
               __reklpos.ILS:=__reklpos.ILS;
               __reklpos.ILR:=0;
               __reklpos.MREF:=$ZD_RP.ZD_POZ().M;
               __reklpos.FAPREF:='';
               __reklpos.ZAPREF:=$ZD_RP.ZD_POZ;
               __reklpos.FAKREF:='';
               __reklpos.ZAMREF:=$ZD_RP.ZD_POZ().ZD_NAG;
               __reklpos.ZRPREF:=$ZD_RP.ref();
               __reklpos.RERREF:='';
               __reklpos.SYMFAK:='';
               __reklpos.SYMZAM:=ZD_RP.ZD_POZ().ZD_NAG().SYM;
               __reklpos.SYMRER:='';
               __reklpos.DATFAK:=date(0,0,0);
               __reklpos.DATZAM:=ZD_RP.ZD_POZ().ZD_NAG().DATA;
               __reklpos.TYPFAK:='';
               __reklpos.TYPZAM:=ZD_RP.ZD_POZ().ZD_NAG().T().T;
               __reklpos.DATREK:=date();
               __reklpos.WYB:='N';
               __reklpos.OPDOKM:=_opdokm;
               __reklpos.OPFAKS:=_opfaks;
               __reklpos.NDREF:=ZD_RN.ND;
               {? __reklpos.ILS>0 || __reklpos.add(1) ?};
               ZD_RP.next()
            !}
         ?};
         ZD_RN.next()
      !}
   ?}
?};
_buf:=tab_tmp(2,'ZAPREF','STRING[48]','','NDREF','STRING[16]','','SQL','STRING[16]','');
__reklpos.clear();
__reklpos.prefix('N');
{? __reklpos.first()
|| {!
   |? _ref:=__reklpos.ref(); _zapref:=__reklpos.ZAPREF; _ndref:=__reklpos.NDREF; _ilp:=__reklpos.ILP;
      _oki:=__reklpos.next();
      {? (_buf.clear(); _buf.prefix(_zapref,_ndref); ~_buf.first())
      || _buf.blank();
         _buf.ZAPREF:=_zapref;
         _buf.NDREF:=_ndref;
         _buf.SQL:=$_ref;
         {? _buf.add(1)
         || __reklpos.cntx_psh();
            __reklpos.prefix();
            {? __reklpos.seek(_ref)
            || __reklpos.SHOW:='T';
               __reklpos.put(1)
            ?};
            __reklpos.cntx_pop()
         ?}
      || __reklpos.cntx_psh();
         __reklpos.prefix();
         {? __reklpos.seek(_buf.SQL)
         || __reklpos.ILS+=_ilp;
            __reklpos.put(1)
         ?};
         __reklpos.cntx_pop()
      ?};
      _oki
   !}
?};
obj_del(_buf);
exec('openzd_pop','open_tab');
~~


\rozpRekZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Dodaje rozpisanie powiązań z dokumentem na podstawie pozycji realizacji zamówienia
::   WE: _a - wskazanie na REK_N
::       _b - uid ZK_N/ZD_NAG
::       _c - uid ZK_P/ZD_POZ
::       _d - ref SQL realizacji ZK_RP lu ZD_RP
::       _e - ilość
::   WY: 1-rozpisano przynajmniej rekord przyjęcia 0-nie
::----------------------------------------------------------------------------------------------------------------------
_rek:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_uid:={? var_pres('_b')=type_of('') & (+_b)=48 || _b || '' ?};
_uip:={? var_pres('_c')=type_of('') & (+_c)=48 || _c || '' ?};
_srz:={? var_pres('_d')=type_of('') & (+_d)=16 || _d || '' ?};
_ile:={? var_pres('_e')=type_of(0) || _e || 0 ?};
_res:=1;

_tab:=ref_tab(_uid);
_rodz:={? _tab=ZK_N || 1 |? _tab=ZD_NAG || 2 |? _tab=ND || 3 || 0 ?};
_prdk:={? _rek<>null() || exec('FindAndGet','#table',REK_N,_rek,,"PRDK",'') || '' ?};

:: Dodajemy zapis o przyjęciu reklamacji do zamówienia
{? _rodz=1
|| {? ~exec('autoRekD','reklamacje',_rek,_uid,_uip,__reklpos.ILR,'Przyjęcie reklamacji do zamówienia sprzedaży')
   || _res:=0
   ?}
|? _rodz=2
|| {? ~exec('autoRekD','reklamacje',_rek,_uid,_uip,__reklpos.ILR,'Zgłoszenie reklamacji do zamówienia dostaw')
   || _res:=0
   ?}
|? _rodz<>3
|| _res:=0
?};


:: Dodajemy zapisy o dokumentach rozchodowych
:: - dodatkowo zapisy o dostawach, z których pochodził rozchód
:: - dodatkowo o zamówieniu z którego pochodziła realizacja
{? _res & _ile>0 & _srz<>''
|| _ilr:=_ile;
   _mat:=exec('FindAndGet','#table',ref_tab(_srz),_srz,,"M",null());
   exec('mag_psh','open_tab');
   OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.first()
   || {!
      |? exec('mag_open','open_tab',ST.ODDZ,form(OKR.ROK-2000,-2,0,'99'));
         DK.index('ZAM_RP');
         DK.prefix(_srz,);
         {? DK.first()
         || {!
            |? {? _prdk='' | _prdk=DK.SRDK
               || _ild:={? DK.M=_mat || DK.IL-DK.IL_RK || 0 ?};
                  {? _ild>0
                  || _ilp:={? _ild>=_ilr || _ilr || _ild ?};
::                   Wydanie
                     {? ~exec('autoRekD','reklamacje',_rek,DK.N().uidref(),DK.uidref(),_ilp
                          ,{? _rodz=1 || 'Wydanie towaru, który jest w reklamacji'
                           |? _rodz=2 || {? _prdk=''
                                         || 'Dokument przyjęcia dostawy zgłoszonej do reklamacji'
                                         || 'Dokument przyjęcia dostawy niezgodnej zgłoszonej do reklamacji'
                                         ?}
                           || ''
                           ?})
                     || _ilr:=0; _res:=0
                     || _ilr-=_ilp;
::                      dodanie do wydania zapisu o reklamacji
                        DK.IL_RK+=_ilp;
                        DK.put(1);
::                      Dostawa
                        {? _rodz=1 & DK.PRDK<>''
                        || _dip:=exec('FindAndGet','#table',DK,DK.PRDK,,"uidref()",'');
                           _did:=exec('FindAndGet','#table',DK,DK.PRDK,
                                 ,"ND.cntx_psh();ND.use('nagdo'+(name()+3));_rr:=N().uidref();ND.cntx_pop();_rr",'');
                           {? _did<>'' & _dip<>''
                           || {? ~exec('autoRekD','reklamacje',_rek,_did,_dip,_ilp
                                   ,'Towar w reklamacji wydano z dostawy',-1)
                              || _ilr:=0; _res:=0
                              ?}
                           ?}
                        ?};
::                      Faktura sprzedaży o ile wydanie zostało zafakturowane
                        {? DK.FAP<>''
                        || _fip:=exec('FindAndGet','#table',FAP,DK.FAP,,"uidref()",'');
                           _fid:=exec('FindAndGet','#table',FAP,DK.FAP,
                                 ,"@.FAKS.cntx_psh();@.FAKS.use('faktu'+(name()+3));_rr:=FAKS().uidref();@.FAKS.cntx_pop();_rr",'');
                           {? _fid<>'' & _fip<>''
                           || {? ~exec('autoRekD','reklamacje',_rek,_fid,_fip,_ilp
                                   ,'Reklamacja dokumentu sprzedaży')
                              || _ilr:=0; _res:=0
                              || REKVAR.ILP:=_ilp;
                                 exec('FindAndGet','#table',FAP,DK.FAP,,"IL_RK+=REKVAR.ILP;put(1)",0)
                              ?}
                           ?}
                        ?}
                     ?}
                  ?}
               ?};
               _ilr>0 & DK.next()
            !}
         ?};
         _ilr>0 & OKR.next()
      !}
   ?};
   OKR.cntx_pop();
   exec('mag_pop','open_tab')
?};
_res


\rekl_rew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: rekord przed
::----------------------------------------------------------------------------------------------------------------------
_act:={? __reklpos.POZ=-1 || 'P'+{? ~__reklpos.sel_size() || 'ZW' || '' ?} || '' ?};
_res:=_act<>'';
__reklpos.actions_grayed(__winrekl,_act);
_res


\rekl_mow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: po popraw pozycje do rekalamacji
:----------------------------------------------------------------------------------------------------------------------
_res:=0;
_dokl:=exec('FindAndGet','#table',M,__reklpos.MREF,,"exec('jaka_dok_m','jm',ref())",0);
__reklpos.ILR:=__reklpos.ILR$_dokl;
_ilr:=0;
__reklpos.cntx_psh();
__reklpos.prefix();
{? __reklpos.first() || _ilr:=__reklpos.ILR ?};
__reklpos.cntx_pop();
_ilb:=exec('FindAndGet','#table',__reklpos,__reklpos.ref(),,"ILR",0);
_ilp:=REKVAR.ILP-_ilr+_ilb;

{? __reklpos.ILR=_ilb
|| _res:=1
|? __reklpos.ILR<0
|| FUN.info('Należy podać ilość większą lub równą zero.'@)
|? __reklpos.ILR>_ilp
|| FUN.info('Wydania zostały rozpisane maksymalna ilość do wydania: %1 %2.'@[form(_ilp,,_dokl),__reklpos.JM])
|? __reklpos.ILR>__reklpos.ILS
|| FUN.info('Należy podać ilość mniejszą lub równą %1 %2.'@[form(__reklpos.ILS,,_dokl),__reklpos.JM])
|| _res:=2
?};
{? _res=2
|| _ilr:=__reklpos.ILR;
   {? _ilr>0
   || __reklpos.WYB:='T'
   || __reklpos.WYB:='N'
   ?};
   __reklpos.cntx_psh();
   __reklpos.prefix();
   {? __reklpos.first() || __reklpos.ILR-=(_ilb-_ilr); __reklpos.put(1) ?};
   __reklpos.cntx_pop()
?};
_res


\rekl_marw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: zaznaczanie rekordu __reklpos - dyspozycja transportu
::   WE: _a - 1-wypelnij 0-zeruj
::----------------------------------------------------------------------------------------------------------------------
_mark:="
   _ilr:=0;
   __reklpos.cntx_psh();
   __reklpos.prefix();
   {? __reklpos.first() || _ilr:=__reklpos.ILR ?};
   __reklpos.cntx_pop();
   _ilp:=REKVAR.ILP-_ilr;
   _ok:=0;
   {? __reklpos.POZ<>-1
   || {? _a=0 & __reklpos.WYB='T'
      || _ok:=1;
         _ilr-=__reklpos.ILR;
         __reklpos.WYB:='N';
         __reklpos.ILR:=0
      |? _a=1 & __reklpos.WYB='N' & _ilp>0
      || _ok:=1;
         __reklpos.WYB:='T';
         __reklpos.ILR:={? __reklpos.ILS<=_ilp || __reklpos.ILS || _ilp ?};
         _ilr+=__reklpos.ILR
      ?}
   ?};
   {? _ok || _ok:=__reklpos.put(1) ?};
   {? _ok
   || __reklpos.cntx_psh();
      __reklpos.prefix();
      {? __reklpos.first() || __reklpos.ILR:=_ilr; __reklpos.put(1) ?};
      __reklpos.cntx_pop()
   ?};
   _ok
";
_mark(_a);
''


\rekl_akw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: akceptacja wyboru pozycji wydaniado reklamacji
::----------------------------------------------------------------------------------------------------------------------
_sumilr:=0;
__reklpos.cntx_psh();
__reklpos.clear();
{? __reklpos.first()
|| {!
   |? {? __reklpos.WYB='T' & __reklpos.POZ<>-1 || _sumilr+=__reklpos.ILR ?};
      __reklpos.next()
   !}
?};
__reklpos.cntx_pop();

_seldsp:=REKVAR.ILP=_sumilr;
{? _seldsp
 | (~_seldsp
    & FUN.ask('Ponieważ nie rozpisano całej ilości reklamacji: %1 %2.\n'
              'Dla żadnej pozycji nie zostanie zmienione wydanie do reklamacji.\n\n'
              'Czy rezygnacja z rozpisania wydań do reklamacji?'@[form(REKVAR.ILP,,,'99'),__reklpos.JM])
    )
|| sel_exit()
|| ''
?}


\rozpWyda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Nowe rozpisanie wydań
::   WE: _a - wskazanie na REK_N
::   WY: 1-rozpisano przynajmniej rekord przyjęcia 0-nie
::----------------------------------------------------------------------------------------------------------------------
_rek:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_res:=1;

:: najpierw usuwamy poprzednie zapisy dotyczące wydań, realizacji zamówień, dostaw
do();
REK_D.cntx_psh();
REK_D.index('POZ');
REK_D.prefix(_rek);
{? REK_D.first()
|| {!
   |? {? REK_D.POZ<=1
      || _poz:=REK_D.POZ;
         _ref:=REK_D.DP_REF;
         REKVAR.ILP:=REK_D.IL;
         _del:=REK_D.del(,1);
         {? _del>0
         || _tab:=ref_tab(_ref);
            {? _poz>=0
            || {? _tab<>ZK_P & _tab<>ZD_POZ
               || exec('FindAndGet','#table',_tab,_ref,,"IL_RK-=REKVAR.ILP;put(1)",0)
               ?}
            ?};
            obj_del(_tab);
            1
         || _res:=0; undo(); _res
         ?}
      || REK_D.next()
      ?}
   !}
?};

:: dopisujemy nowe wydania wg utworzonej listy
{? _res & __reklpos.first()
|| exec('mag_psh','open_tab');
   {!
   |? {? __reklpos.WYB='T' & __reklpos.POZ<>-1
      || _uip:=__reklpos.UIP;
         _sql:=__reklpos.UIP+16;
         _msk:=form(8+_sql)+3;
         exec('mag_open','open_tab',1+_msk,_msk+2);
         DK.prefix();
         {? DK.seek(_uip)
         ||
::          Wydanie
            {? ~exec('autoRekD','reklamacje',_rek,DK.N().uidref(),DK.uidref(),__reklpos.ILR
                  ,'Wydanie towaru, który jest w reklamacji')
            || undo(); _res:=0
            ||
::             dodanie do wydania zapisu o reklamacji
               DK.IL_RK+=__reklpos.ILR;
               DK.put(1);
::             Dostawa
               {? DK.PRDK<>''
               || _dip:=exec('FindAndGet','#table',DK,DK.PRDK,,"uidref()",'');
                  _did:=exec('FindAndGet','#table',DK,DK.PRDK,
                        ,"ND.cntx_psh();ND.use('nagdo'+(name()+3));_rr:=N().uidref();ND.cntx_pop();_rr",'');
                  {? _did<>'' & _dip<>''
                  || {? ~exec('autoRekD','reklamacje',_rek,_did,_dip,__reklpos.ILR
                          ,'Towar w reklamacji wydano z dostawy',-1)
                     || undo(); _res:=0
                     ?}
                  ?}
               ?};
::             Realizacja zamówienia
               {? DK.ZAM_RP<>'' & DK.ZAM_RN<>''
               || _zid:=exec('FindAndGet','#table',ZK_RN,DK.ZAM_RN,
                        ,"ZK_N.cntx_psh();ZK_N.use('zknag'+(name()+3));_rr:=N().uidref();ZK_N.cntx_pop();_rr",'');
                  _zip:=exec('FindAndGet','#table',ZK_RP,DK.ZAM_RP,
                        ,"ZK_P.cntx_psh();ZK_P.use('zkpoz'+(name()+3));_rr:=P().uidref();ZK_P.cntx_pop();_rr",'');
                  _zir:=DK.ZAM_RP;
                  {? _zid<>'' & _zip<>''
                  || {? ~exec('autoRekD','reklamacje',_rek,_zid,_zip,__reklpos.ILR
                          ,'Realizacja zamówienia towaru w reklamacji',,DK.N().MAG,_zir)
                     || _ilr:=0; _res:=0
                     || REKVAR.ILP:=__reklpos.ILR;
                        exec('FindAndGet','#table',ZK_RP,DK.ZAM_RP,,"IL_RK+=REKVAR.ILP;put(1)",0)
                     ?}
                  ?}
               ?}
            ?}
         ?}
      ?};
      _res & __reklpos.next()
   !};
   exec('mag_pop','open_tab')
?};
end();
REK_D.cntx_pop();
_res


\po_miejsce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: po redakcji pól KH, KH_ODB, KH_MSC, POS
::   WE: [_a] - wskazanie na miejsce, domyślnie akronim aktywnego pola
::----------------------------------------------------------------------------------------------------------------------
_mjs:={? var_pres('_a')=type_of('') & +(_a) || _a || cur_afld() ?};

_cntx:=';'+_mjs+';';
_empty:=($('REK_N.'+_mjs))()=null();

{? ';KH;KH_ODB;POS;'*_cntx
||
   _code:={? TR_Z.TR_ADR
          || ''
          || {? _mjs='KH'
             || {? REK_N.KH_ODB<>null() || 'KH_ODB'
                |? REK_N.KH<>null()     || 'KH'
                || ''
                ?}
             || {? {? _mjs<>'POS' || ($('REK_N.'+_mjs))()<>null() || REK_N.POS<>null() ?}
                || _mjs
                || ''
                ?}
             ?}
          ?};
   {? _code<>''
   || ADDR_CHO.cntx_psh();
      ADDR_CHO.index('KOD');
      ADDR_CHO.prefix(_code,);
      {? ADDR_CHO.first()
      ||
         REK_N.ADDR_CHO:=ADDR_CHO.ref()
      ?};
      ADDR_CHO.cntx_pop()
   ?};
   exec('adres_change','transport_wspolne','REK_N',_code);
   1
?};
1


\po_rekn_kh_odb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: po redkacji pola REK_N.KH_ODB
::----------------------------------------------------------------------------------------------------------------------
exec('po_miejsce','reklamacje');
1


\f_DISP_EDIT
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: ustawienie precyzji wyświetlenia i edycji
::----------------------------------------------------------------------------------------------------------------------
REK_N.fld_fml('IL','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' & REK_N.M<>null()
                                             || $REK_N.M().DOKL
                                             || $ST.DOKL
                                             ?}");
REK_N.fld_fml('IL','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' & REK_N.M<>null()
                                                 || $REK_N.M().DOKL
                                                 || $ST.DOKL
                                                 ?}");
REK_D.fld_fml('IL','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' & REK_D.M<>null()
                                             || $REK_D.M().DOKL
                                             || $ST.DOKL
                                             ?}");
REK_D.fld_fml('IL','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_'  & REK_D.M<>null()
                                                 || $REK_D.M().DOKL
                                                 || $ST.DOKL
                                                 ?}");
~~


\dokWITHrek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: kontrola czy dany dokument nie jest powiązany z reklamacją
::   WE: _a - uidref dokumentu
::   WY: '' jak nie jest powiązany
::          lub symbol powiązanej reklamacji oraz na pierwszysch dwóch znakach:
::            [1] - 'S'-klienta 'Z'-dostaw
::            [2] - 'N'-reklamacja 'D'-dokument powiązany z reklamacją
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_uid:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || '' ?};

{? _uid<>''
|| REK_N.cntx_psh();
   REK_D.cntx_psh();
   REK_N.index('FAKS');
   REK_N.prefix(_uid);
   {? REK_N.first() || _res:=REK_N.SZ+'N'+REK_N.SYM ?};
   {? _res=''
   || REK_N.index('FAKS');
      REK_N.prefix(_uid);
      {? REK_N.first() || _res:=REK_N.SZ+'N'+REK_N.SYM ?}
   ?};
   {? _res=''
   || REK_D.index('DK_REF');
      REK_D.prefix(_uid);
      {? REK_D.first() || _res:=REK_D.REK_N().SZ+'D'+REK_D.REK_N().SYM ?}
   ?};
   REK_N.cntx_pop();
   REK_D.cntx_pop()
?};
_res


\changeUID
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: aktualizacja uidref-ów dla tabeli warunkiem jest indeks o pierwszym reprezentacie typu uidref
::   WE: _a - tabela
::       _b - indeks
::       _c - pole
::       _d - stary uid
::       _e - nowy uid
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_tab:=_a;
_ndx:=_b;
_fld:=_c;
_old:=_d;
_new:=_e;

_tab.cntx_psh();
_tab.index(_ndx);
_tab.prefix(_old);
{? _tab.first()
|| {!
   |? _ref:=_tab.ref(); _oki:=_tab.next();
      _tab.cntx_psh();
      _tab.prefix();
      {? _tab.seek(_ref)
      || ($('{|_a |! '+_fld+':=_b |}'))(_tab,_new);
         {? ~_tab.put(1) || _res:=0 ?}
      || _res:=0
      ?};
      _tab.cntx_pop();
      _res & _oki
   !}
?};
_tab.cntx_pop();
_res


\gen_rem_zgl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Generuje zgłoszenie remontowe na podstawie reklamacji (aktualnego rekordu tabeli REK_N)
::   WE: _a - REK_N.ref() - jak nie podany to aktualny ref
::----------------------------------------------------------------------------------------------------------------------
:: Sprawdzenie, czy było już generowane zgłoszenie do danej reklamacji
{? ~exec('rek_n_czy_rem','reklamacje')
||
:: Sprawdzenie statusu reklamacji (tylko zaakceptowane)
   {? REK_N.STAT_REJ='T' & REK_N.RESULT='T'
   ||  _ref:=REK_N.ref();
      {? _ref<>null()
      || _args:=exec('mp_run_a','#b__box');
         _args.ACT_UID:='TRE_ZGL_DZGL';
         _args.AKCJA:='DOŁĄCZ';
         _args.PROC_START:='T';
         _args.CONTEXT:=obj_new('REM_ZGL','REK_N');
         _args.CONTEXT.REM_ZGL:=null();
         _args.CONTEXT.REK_N:=_ref;
         _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);

         exec('mp_run','#b__box',_args);

         {? _args.CONTEXT.REM_ZGL<>null()
         || FUN.info('Wygenerowano zgłoszenie remontowe o symbolu %1.'@
                     [exec('FindAndGet','#table',REM_ZGL,_args.CONTEXT.REM_ZGL,,"REM_ZGL.SYM",'')])
         ?}
      ?}
   || FUN.info('Nieprawidłowy status reklamacji.\n'
               'Zgłoszenie można generować wyłącznie do zaakceptowanych (niezamkniętych) reklamacji.'@)
   ?}
|| FUN.info('Do reklamacji zostało już wygenerowane zgłoszenie remontowe.'@)
?};
~~


\rek_n_czy_rem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Sprawdza, czy do danej reklmacji zostało wygenerowane zgłoszenie remontowe
::   WE: [_a] - $REK_N.ref() lub aktualny rekord, jeżeli nie podany
::       [_b] - INTEGER - typ zwracany: [0] - 0/1, 1 - ref powiązanej reklamacji lub '' w przypadku jej braku
::   WY: 0/1 lub ref powiązanej reklamacji (zależne od _b)
::----------------------------------------------------------------------------------------------------------------------
_ref:={? var_press('_a')=type_of('') || _a || $REK_N.ref() ?};
_type:={? var_press('_b')=type_of(0) || _b || 0 ?};
_res:={? _type || '' || 0 ?};
REK_N.cntx_psh();
REK_N.use(ref_name(_ref));
REK_N.cntx_psh();
REK_N.clear();
{? REK_N.seek(_ref)
|| REM_ZGL.cntx_psh();
   REM_ZGL.index('RREK');
   REM_ZGL.prefix($REK_N.ref());
   {? REM_ZGL.first()
   || _res:={? _type || $REM_ZGL.ref() || 1 ?}
   ?};
   REM_ZGL.cntx_pop()
?};
REK_N.cntx_pop();
REK_N.cntx_pop();
_res


\rek_n_show_rem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Wyświetla powiązane z daną reklamacją zgłoszenie remontowe (działa na aktualnym rekordzie tabeli REK_N)
::----------------------------------------------------------------------------------------------------------------------
REM_ZGL.cntx_psh();
REM_ZGL.index('RREK');
REM_ZGL.prefix($REK_N.ref());
{? REM_ZGL.first()
|| exec('action_display','remonty_zgloszenia')
|| FUN.info('Do danej reklamacji nie wygenerowano zgłoszenia remontowego.'@)
?};
REM_ZGL.cntx_pop();
~~


\disp_all_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: wyświetlenie całej reklamacji dokumentu
::   WE: [_a] - uidref REK_N
::----------------------------------------------------------------------------------------------------------------------
_uid:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || '' ?};
_refn:=null();

REK_N.cntx_psh();
{? _uid<>''
|| _msk:=form(8+(_uid+16));
   REK_N.use(_msk);
   REK_N.prefix();
   {? REK_N.seek(_uid)
   || _refn:=REK_N.ref();
      REK_N.SYM
   ?}
|| _refn:=REK_N.ref();
   REK_N.SYM
?};
REK_N.display();
REK_N.cntx_pop();
~~


\delaRekD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: usunięcie powiązanego wpisu w REK_D
::   WE: [_a] - wartość pola DP_REF
::----------------------------------------------------------------------------------------------------------------------
_uip:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || '' ?};

{? _uip<>''
|| REK_D.cntx_psh();
   REK_D.index('DP_REF');
   REK_D.prefix(_uip);
   {? REK_D.first() || {! |? REK_D.del() !} ?};
   REK_D.cntx_pop()
?};
~~


\modiRekD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: aktulizacja powiązanego wpisu w REK_D
::   WE: [_a] - wartość pola DP_REF
::       [_b] - indeks materiałowy
::       [_c] - nowa ilość
::----------------------------------------------------------------------------------------------------------------------
_uip:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || '' ?};

{? _uip<>''
|| REK_D.cntx_psh();
   REK_D.index('DP_REF');
   REK_D.prefix(_uip);
   {? REK_D.first()
   || {!
      |? {? REK_D.POZ>2
         || _put:=0;
            {? REK_D.M<>_b || REK_D.M:=_b; _put:=1 ?};
            {? REK_D.IL>_c || REK_D.IL:=_c; _put:=1 ?};
            {? _put || REK_D.put(1) ?}
         ?};
         REK_D.next()
      !}
   ?};
   REK_D.cntx_pop()
?};
~~


\initREK_Ndod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: inne reklamacje związane z kontrahentem
::   WE: [_a] - REK_N do pominięcia
::       [_b] - kontrahent
::       [_c] - odbiorca
::----------------------------------------------------------------------------------------------------------------------
_rek_n:={? var_pres('_a')=type_of(null()) || _a || null() ?};
   _kh:={? var_pres('_b')=type_of(null()) || _b || null() ?};
  _odb:={? var_pres('_c')=type_of(null()) || _c || null() ?};

_beerkh:=BEER.KH;
BEER.KH:=_kh;
__rekndod:=tab_tmp(4,'DATFAK','DATE',''
            ,'SYMREK','STRING[20]',''
            ,'DATREK','DATE',''
            ,'SYMZAM','STRING[20]',''
            ,'UIDREK','STRING[48]',''
            ,'MKTM','STRING[50]',''
            ,'MNAZ','STRING[100]',''
            ,'IL','REAL',''
            ,'JM','STRING[10]',''
            ,'POWZAM','STRING[1]',''
            ,'WYB','STRING[1]',''
            ,'ZKP','STRING[48]','');

_sel:=__rekndod.mk_sel('Reklamacje dla: %1 - %2'@[BEER.KH().KOD,BEER.KH().SKR],'T',0,'#rekn2zam',,,,,'U');
__rekndod.win_fld(_sel,,'WYB',,,,,,,0,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
__rekndod.win_fld(_sel,,'SYMREK',,,20,,0,'Symbol'@);
__rekndod.win_fld(_sel,,'DATREK',,,10,,0,'Data'@);
__rekndod.win_fld(_sel,,'MKTM',,,20,,0,'Indeks'@);
__rekndod.win_fld(_sel,,'MNAZ',,,20,,0,'Nazwa'@);
__rekndod.win_fld(_sel,,'IL',,,12,3,0,'Ilość'@);
__rekndod.win_fld(_sel,,'JM',,,5,,0,'jm'@);
__rekndod.win_fld(_sel,,'POWZAM',,,,,,'Zamówiono'@,,'Zamówiono powtórnie [T/N]?'@,2,,"'T'","'N'");
__rekndod.win_act(_sel,,'Formuła','Wypełnij'@@,,,,"exec('rekndmarw','reklamacje',1)",,1,"sel_nchk()");
__rekndod.win_act(_sel,,'Formuła','Zeruj'@@,,,,"exec('rekndmarw','reklamacje',0)",,1,"sel_nchk()");
__rekndod.win_act(_sel,,'Formuła','&Akceptuj'@@,,'Zatwierdzenie wyboru reklamacji'@,"sel_exit()",,1,,,,'A');
__rekndod.win_act(_sel,,'Formuła','W&yświetl'@@,,'Podgląd reklamacji'@
 ,"exec('disppow','reklamacje',__rekndod.UIDREK)",,,,,,'Y');
__rekndod.win_act(_sel,,'Szukaj');
__rekndod.win_act(_sel,,'Kolejność');
__rekndod.win_sel(_sel);

REK_N.cntx_psh();
REK_N.index('KH1');
REK_N.prefix('S',_kh);
{? REK_N.first()
|| {!
   |? {? REK_N.STAT_REJ='T' & REK_N.RESULT='T' & REK_N.KH_ODB=_odb & REK_N.M<>null() & REK_N.IL>0
      || __rekndod.blank();
         __rekndod.SYMREK:=REK_N.SYM;
         __rekndod.DATREK:=REK_N.DP;
         __rekndod.UIDREK:=REK_N.uidref();
         __rekndod.MKTM:=REK_N.M().KTM;
         __rekndod.MNAZ:=REK_N.M().N;
         __rekndod.IL:=REK_N.IL;
         __rekndod.JM:=REK_N.JM().KOD;
         __rekndod.WYB:={? REK_N.ref()=_rek_n || 'T' || 'N' ?};
         __rekndod.POWZAM:={? exec('FindInSet','#table','REK_D','POZ',3,REK_N.ref(),,,,null())<>null() || 'T' || 'N' ?};
         __rekndod.ZKP:='';
         __rekndod.add(1)
      ?};
      REK_N.next()
   !}
?};
REK_N.cntx_pop();
BEER.KH:=_beerkh;
__rekndod.clear();
{? __rekndod.first() & __rekndod.size()>1
|| {? __rekndod.select()
   || __rekndod.first(); {! |? {? __rekndod.WYB='T' || __rekndod.next() || __rekndod.del() ?} !}
   || __rekndod.first(); {! |? __rekndod.del() !}
   ?}
?};
~~


\rekndmarw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: zaznaczanie rekordu __rekndod
::   WE: _a - 1-wypelnij 0-zeruj
::----------------------------------------------------------------------------------------------------------------------
_mark:="
   _ok:=0;
   {? _a=0 & __rekndod.WYB='T'
   || _ok:=1;
      __rekndod.WYB:='N'
   |? _a=1 & __rekndod.WYB='N'
   || _ok:=1;
      __rekndod.WYB:='T'
   ?};
   {? _ok || __rekndod.put(1) ?}
";
_mark(_a);
''


\rek_n_sym_iz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła określająca ikony - czy zamówiono
::----------------------------------------------------------------------------------------------------------------------
"{? REK_N.SZ='S' & exec('FindInSet','#table','REK_D','POZ',3,REK_N.ref())<>null()
 || 'xwin16.png:184'
 || exec('pusta','#icon')
 ?}
"


\genMAG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: generuje pozycje do reklamacji dla wskazanego ND
::   WE: _a - wskazanie na ND
::       [_b] - symbol zamówienia lub brak
::       [_c] - data zamówienia lub brak
::       [_d] - typ zamówienia lub brak
::----------------------------------------------------------------------------------------------------------------------
_dok:={? var_pres('_a')=type_of(null())
      || _a
      |? var_pres('_a')=type_of('') & (+_a )=48
      || exec('FindAndGet','#table',ND,_a,,,null())
      || null()
      ?};
_zam:={? var_pres('_b')=type_of('') || _b || '' ?};
_dtz:={? var_pres('_c')=type_of(date()) || _c || date(0,0,0) ?};
_typ:={? var_pres('_d')=type_of('') || _d || '' ?};
{? _dok=null() || return(0) ?};

_msk:=ref_name(_dok)+3;
exec('mag_psh','open_tab');
exec('mag_open','open_tab',1+_msk,_msk+2);
ND.prefix();
{? ND.seek(_dok)
|| REKVAR.FINDKH:=ND.KH;
   REKVAR.FIND:=ND.SYM;
   REKVAR.FND_UID:=ND.uidref();
   DK.index('DOKMAG');
   DK.prefix(_dok);
   {? DK.first() & DK.find_tab('first','STATS','KIND','=','N')
   || _opis:='%1 o symbolu %2 z dnia %3'@[ND.TYP().T,ND.SYM,$ND.D];
      REKVAR.DOK:=ND.SYM;
      REKVAR.TYPMAG:=ND.TYP;
      REKVAR.TYPTYP:=REKVAR.TYPMAG().T;
      REKVAR.TYPNAZ:=REKVAR.TYPMAG().NAZ;
      REKVAR.DATDOK:=ND.D;
      REKVAR.DP:=date();
      REKVAR.KH:=ND.KH;
      REKVAR.KH_ODB:=null();
      REKVAR.DATZAM:=_dtz;
      REKVAR.ZAM:=_zam;
      REKVAR.TYPZAM:={? _typ='' || null() || exec('FindInSet','#table','TYPYZAM','TYPN',_typ,,,1,,null()) ?};
      {!
      |? _opdokm:='%1 z dnia %2'@[ZD_RN.SPZ,form(ZD_RN.DND)];
         _opfaks:='';
         __reklpos.blank();
         __reklpos.SHOW:='T';
         __reklpos.POS:=DK.P;
         __reklpos.POZ:=DK.P;
         __reklpos.KTM:=DK.M().KTM;
         __reklpos.NAZ:=DK.M().N;
         __reklpos.JM:=DK.M().J().KOD;
         __reklpos.ILS:=DK.IL-DK.IL_RK;
         __reklpos.ILS:=__reklpos.ILS;
         __reklpos.ILR:=0;
         __reklpos.MREF:=$DK.M;
         __reklpos.FAPREF:='';
         __reklpos.PRDK:=DK.SRDK;
         _zapref:=''; _zamref:=''; _symzam:=''; _datzam:=date(0,0,0); _typzam:='';
         {? DK.ZAM_RP<>''
         || _msk:=form(8+DK.ZAM_RP)+3;
            exec('openzd_psh','open_tab');
            {? _msk<>(ZD_NAG.name()+3) || exec('openzd','open_tab',_msk) ?};
            ZD_RP.prefix();
            {? ZD_RP.seek(DK.ZAM_RP)
            || _zapref:=$ZD_RP.ZD_POZ;
               _zamref:=$ZD_RP.ZD_POZ().ZD_NAG;
               _symzam:=ZD_RP.ZD_POZ().ZD_NAG().SYM;
               _datzam:=ZD_RP.ZD_POZ().ZD_NAG().DATA;
               _typzam:=ZD_RP.ZD_POZ().ZD_NAG().T().T
            ?};
            exec('openzd_pop','open_tab')
         ?};
         __reklpos.ZAPREF:=_zapref;
         __reklpos.FAKREF:='';
         __reklpos.ZAMREF:=_zamref;
         __reklpos.ZRPREF:=DK.ZAM_RP;
         __reklpos.RERREF:='';
         __reklpos.SYMFAK:='';
         __reklpos.SYMZAM:=_symzam;
         __reklpos.SYMRER:='';
         __reklpos.DATFAK:=date(0,0,0);
         __reklpos.DATZAM:=_datzam;
         __reklpos.TYPFAK:='';
         __reklpos.TYPZAM:=_typzam;
         __reklpos.DATREK:=date();
         __reklpos.WYB:='N';
         __reklpos.OPDOKM:=_opdokm;
         __reklpos.OPFAKS:=_opfaks;
         __reklpos.NDREF:=$ND.ref();
         {? __reklpos.ILS>0 || __reklpos.add(1) ?};
         DK.find_tab('next','STATS','KIND','=','N')
      !}
   ?}
?};
_buf:=tab_tmp(2,'ZAPREF','STRING[48]','','NDREF','STRING[16]','','SQL','STRING[16]','');
__reklpos.clear();
__reklpos.prefix('N');
{? __reklpos.first()
|| {!
   |? _ref:=__reklpos.ref(); _zapref:=__reklpos.ZAPREF; _ndref:=__reklpos.NDREF; _ilp:=__reklpos.ILP;
      _oki:=__reklpos.next();
      {? (_buf.clear(); _buf.prefix(_zapref,_ndref); ~_buf.first())
      || _buf.blank();
         _buf.ZAPREF:=_zapref;
         _buf.NDREF:=_ndref;
         _buf.SQL:=$_ref;
         {? _buf.add(1)
         || __reklpos.cntx_psh();
            __reklpos.prefix();
            {? __reklpos.seek(_ref)
            || __reklpos.SHOW:='T';
               __reklpos.put(1)
            ?};
            __reklpos.cntx_pop()
         ?}
      || __reklpos.cntx_psh();
         __reklpos.prefix();
         {? __reklpos.seek(_buf.SQL)
         || __reklpos.ILS+=_ilp;
            __reklpos.put(1)
         ?};
         __reklpos.cntx_pop()
      ?};
      _oki
   !}
?};
obj_del(_buf);
exec('mag_pop','open_tab');
~~

:Sign Version 2.0 jowisz:1045 2024/01/25 10:29:28 73d399b549d9806c4ff400f39748f2eef01f2cbedc64b49db8b0430df1db9c17b47d478f5153a85b5df9f72b65ce093a90f16e6e0100dd858ae150419caa4af7728b6b70cd650019c4632566e19b02539806a54cbe8dc5349654a186cf8f907ccd0af72261b3bdbb5b735cf6141d2c042e9b9bf30b5ce4378c6d8f6d8432467a
