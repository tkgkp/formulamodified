:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: wt_group.fml
:: Utworzony: 17.10.2017
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Plik zawiera formuły wspomagające obsługę akcji grupowych dla webTerm-a.
::            Lista rekordów zaznaczonych w oknie wertowania dostepna jest "przez chwilę". Czasami warto ją zapamiętać
::            i przetwarzać w kolejnym wywołaniu webTerm-a. "Zapamiętanie" odbywa się w dedykowanej do tego tabeli
::            WT_GROUP.
::======================================================================================================================


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Kasowanie danych w tabeli WT_GROUP.
::   WE: _a [INTEGER] - Moment wywołania:
::                      1 - Start TOMCATA - kasowane są wszystkie rekordy związane z identyfikatorem serwera.
::                      2 - Zakończenie sesji webTerma - kasowane są tylko rekordy związane z daną sesją.
::                      3 - Zamknięcie zakładki - kasowane są tylko rekordy związane z daną zakładką.
::   WY: Wynik operacji:
::       0 - Operacja zakończyła się sukcesem.
::       1 - Operacja nie zakończyła się sukcesem.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & (0<_a & _a<4)
|| _tryb:=_a
|| return(0)
?};

WT_GROUP.cntx_psh();
WT_GROUP.index('KEY');
{? _tryb=1
|| WT_GROUP.prefix(app_info('web_tcid'),)
|? _tryb=2
|| WT_GROUP.prefix(app_info('web_tcid'),app_info('web_sesid'),)
|| WT_GROUP.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),)
?};
{? WT_GROUP.first()
|| {!
   |? WT_GROUP.del()
   !}
?};
_ret:=~WT_GROUP.first();
WT_GROUP.cntx_pop();
_ret


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Dla wskazanego identyfikatora zestawu danych formuła pozwala dodać do tabeli WT_GROUP kolejny klucz
::       z ewentualnym opisem, który określa kolejność.
::   WE:  _a  [STRING] - Identyfikator zestawu danych.
::        _b  [STRING] - Zapamiętywany klucz (SQL-ref, uidref, ...).
::       [_c] [STRING] - Nazwa/opis klucza - określa kolejność [domyślnie: wartość klucza].
::       [_d] [NUMBER] - Czy dopuszczać dodawanie nieunikalnych kluczy:
::                         0 - Nie [domyślnie];
::                         1 - Tak.
::   WY: Wynik operacji:
::       0 - Aktualizacja tabeli WT_GROUP nie powiodła się.
::       1 - Aktualizacja tabeli WT_GROUP powiodła się.
::       2 - Aktualizacja tabeli WT_GROUP nie była wymagana (próba dodanie istniejącego rekordu przy _d=0).
::----------------------------------------------------------------------------------------------------------------------
_tSTRING:=type_of('');

{? var_pres('_a')=_tSTRING
|| _setid:=_a
|| return(0)
?};
{? var_pres('_b')=_tSTRING
|| _key:=_b
|| return(0)
?};
_name:={? var_pres('_c')=_tSTRING || _c || _key ?};
_uniq:=var_pres('_d')=type_of(0) & _d;

_add:=$(
   'WT_GROUP.blank(); '
   'WT_GROUP.TCID:=_a; WT_GROUP.SESID:=_b; WT_GROUP.TABID:=_c; '
   'WT_GROUP.SETID:=_d; WT_GROUP.KEY:=_e; WT_GROUP.NAME:=_f; '
   'WT_GROUP.add()'
);

_tcid:=app_info('web_tcid');
_sesid:=app_info('web_sesid');
_tabid:=app_info('web_tabid');

_ret:=0;
WT_GROUP.cntx_psh();
WT_GROUP.index('KEY');
WT_GROUP.prefix(_tcid,_sesid,_tabid,_setid,);
{? _uniq
:: Jeżeli dopuszczamy dodawanie nieunikalnych kluczy, to dodajemy bez żadnych dodatkowych warunków.
|| _ret:=_add(_tcid,_sesid,_tabid,_setid,_key,_name)

:: Wymagamy unikalności.
|| {? WT_GROUP.find_key(_key,)
::    Klucz istnieje - nie dodajemy go ponownie.
   || _ret:=2
   || _ret:=_add(_tcid,_sesid,_tabid,_setid,_key,_name)
   ?}
?};
WT_GROUP.cntx_pop();
_ret


\add_selected
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Formuła dodaje do tabeli WT_GROUP klucze zaznaczonych rekordów.
::       Funkcja może być wywołana tylko w obsłudze akcji grupowej, czyli w formule "Grupa - przed" lub procedurach
::       z niej wywoływanych.
::   WE:  _a  [STRING] - Identyfikator zestawu danych.
::       [_b] [NUMBER] - Czy dopuszczać dodawanie nieunikalnych kluczy:
::                         0 - Nie [domyślnie];
::                         1 - Tak.
::       [_c] [NUMBER] - Czy usunąć zaznaczenie z przetwarzanych rekordów
::                         0 - Nie [domyślnie];
::                         1 - Tak.
::       [_d] [STRING] - Identyfikator okna umieszczonego w oknie grupowym lub '' dla okna niegupowego
::   WY: Wynik operacji:
::       0 - Aktualizacja tabeli WT_GROUP nie powiodła się.
::       1 - Aktualizacja tabeli WT_GROUP powiodła się.
::       2 - Aktualizacja tabeli WT_GROUP nie była wymagana (próba dodanie istniejącego rekordu przy _d=0).
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('')
|| _setid:=_a
|| return(0)
?};
_uniq:=var_pres('_b')=type_of(0) & _b;
_uncheck:=var_pres('_c')=type_of(0) & _c;
_ident:={? var_pres('_d')=type_of('') || _d || '' ?};

_TAB:=web_sel_aget(0);
{? type_of(_TAB)<>type_of(WT_GROUP)
|| return(0)
?};

{? _uncheck
|| web_top_sel_adel(,_ident)
?};

_add:=
   'WT_GROUP.blank(); '
   'WT_GROUP.TCID:=_a; WT_GROUP.SESID:=_b; WT_GROUP.TABID:=_c; '
   'WT_GROUP.SETID:=_d; WT_GROUP.KEY:=_e; WT_GROUP.NAME:=_f; '
   'WT_GROUP.add()';

_add:=$
   {? _uniq
   || '{? WT_GROUP.find_key(_e,) || 2 || '+_add+' ?}'
   || _add
   ?};

_tcid:=app_info('web_tcid');
_sesid:=app_info('web_sesid');
_tabid:=app_info('web_tabid');

_ret:=1;
WT_GROUP.cntx_psh();
WT_GROUP.index('KEY');
WT_GROUP.prefix(_tcid,_sesid,_tabid,_setid,);
_loop:=_TAB.first();
{!
|? _loop
|! _ret*=_add(_tcid,_sesid,_tabid,_setid,_TAB.REF,_TAB.REF);
   _loop:=_TAB.next()
!};
WT_GROUP.cntx_pop();
{? _ret>1
|| 2
|| _ret
?}


\del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Dla wskazanego identyfikatora zestawu danych formuła pozwala usunąć wskazany lub wszystkie rekordy.
::   WE:  _a  [STRING] - Identyfikator zestawu danych.
::       [_b] [STRING] - Zapamiętany klucz (SQL-ref, uidref, ...).
::       [_c] [NUMBER] - Czy usuwać wszystkie wystąpienia klucza:
::                         0 - Nie, usuwamy tylko jeden rekord [domyślnie];
::                         1 - Tak, usuwamy wszystkie rekordy z kluczem.
::                      Parametr ma znaczenie wyłącznie przy podaniu klucza. Jeżeli klucz nie został podany, to usuwane
::                      są wszystkie rekordy zestawu danych.
::   WY: Wynik operacji:
::       0 - Rekordu(-ów) nie udało się usunąć.
::       1 - Usunięcie rekordu(-ów) zakończyło się sukcesem lub zestaw nie zawierał rekordów.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('')
|| _setid:=_a
|| return(0)
?};
_key:={? var_pres('_b')=type_of('') || _b || ~~ ?};
_all:=_key=~~ | var_pres('_c')=type_of(0) & _c;

_ret:=0;
WT_GROUP.cntx_psh();
WT_GROUP.index('KEY');
{? _key=~~
|| WT_GROUP.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),_setid,)
|| WT_GROUP.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),_setid,_key,)
?};
{? WT_GROUP.first()
|| {? _all
   || {!
      |? WT_GROUP.del()
      !};
      _ret:=~WT_GROUP.first()
   || _ret:=WT_GROUP.del(,1)>0
   ?}
|| _ret:=1
?};
WT_GROUP.cntx_pop();
_ret


\find
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Formuła sprawdza, czy w tabeli WT_GROUP istnieją zapisy związane ze wskazanym identyfikatorem danych. Pytanie
::       można zawęziź do konkretnego rekordu (klucza).
::   WE:  _a  [STRING] - Identyfikator zestawu danych.
::       [_b] [STRING] - Zapamiętywany klucz (SQL-ref, uidref, ...).
::   WY: Wynik operacji:
::       0 - Rekordu nie udało się znaleźć.
::       n - Liczba znalezionych rekordów.
::----------------------------------------------------------------------------------------------------------------------
_tSTRING:=type_of('');

{? var_pres('_a')=_tSTRING
|| _setid:=_a
|| return(0)
?};
_key:={? var_pres('_b')=_tSTRING || _b || ~~ ?};

WT_GROUP.cntx_psh();
WT_GROUP.index('KEY');
{? _key=~~
|| WT_GROUP.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),_setid,)
|| WT_GROUP.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),_setid,_key,)
?};
_ret:=WT_GROUP.size();
WT_GROUP.cntx_pop();
_ret


\get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Formuła zwraca tabelę tymczasową ze wszystkimi rekordami podanego zestawu danych.
::   WE: _a [STRING] - Identyfikator zestawu danych.
::   WY: ~~ jeżeli podano niepoprawne parametry wywołania lub tabela tymczasowa o schemacie
::          NAME  STRING
::          KEY   STRING
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('')
|| _setid:=_a
|| return(~~)
?};

_TAB:=tab_tmp(1,
   'NAME','STRING[255]','',
   'KEY','STRING[48]',''
);

WT_GROUP.cntx_psh();
WT_GROUP.index('KEY');
WT_GROUP.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),_setid,);
_loop:=WT_GROUP.first();
{!
|? _loop
|! _TAB.blank();
   _TAB.NAME:=WT_GROUP.NAME;
   _TAB.KEY:=WT_GROUP.KEY;
   _TAB.add();
   _loop:=WT_GROUP.next()
!};
WT_GROUP.cntx_pop();

_TAB

:Sign Version 2.0 jowisz:1028 2019/06/07 16:00:04 4c5e090b57edaee2f4caa87ee886eec83b1c6fa696222c30febef2a427b26da6e25e56d7d13f299a47d4587c62662b168b30379584e9ebaa8e1297082be536ed0995277cfb1665b12ec720e41176a249650e954640f6d31b2f35c3c617b1655fd91e32bf7f59c49c494663de47e5d31c4d0f074d9bd5b89e7c0a6f9cb39a3a1c
