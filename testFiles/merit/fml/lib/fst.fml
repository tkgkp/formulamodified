:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: fst.fml
:: Utworzony: 15.09.2015
:: Autor: PJ
::======================================================================================================================
:: Zawartość: Formuły obszaru FST
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła inicjująca dla obszaru FST
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,XINFO,FINFO);
BPMN.SYM_DOM:=BPMN.KK_DOM:='FST';
exec('SRD','object');
exec('BUF','object');
exec('BUFR','object');
exec('BUFSP','object');
exec('KOMM','#object');
exec('STR','#object');
exec('myDPRINT','object');
exec('__RUB','object');
SRD.FST:=exec('szuk_b_dom','parses','FST');
:: triggery na tabeli rejestru stanów
SRST.trig_a('put',"exec('trig_a_srst_put','fst',_a)",'srst_put');
SRST.trig_a('add',"exec('trig_a_srst_add','fst',_a)",'srst_add');
:: triggery na tabeli środków
SRSR.trig_b('put',"exec('trig_b_srsr_put','fst_ext')");
SRSR.trig_b('add',"exec('trig_b_srsr_add','fst_ext')");
SRSR.trig_b('del',"exec('trig_b_srsr_del','fst_ext')");
SRSR.trig_a('add',"exec('trig_a_srsr_add','fst_ext')");
SRSR.trig_a('put',"exec('trig_a_srsr_put','fst_ext')");
:: triggery na tabeli dokumentów
SRDO.trig_b('put',"exec('trig_b_srdo_put','fst_ext')");
SRDO.trig_b('add',"exec('trig_b_srdo_add','fst_ext')");
SRDO.trig_b('del',"exec('trig_b_srdo_del','fst_ext')");
SRDO.trig_a('add',"exec('trig_a_srdo_add','fst_ext')");
SRDO.trig_a('del',"exec('trig_a_srdo_del','fst_ext')");
~~


\fst_ewi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Główna formuła obszaru roboczego FST_EWI - Środki trwałe
::----------------------------------------------------------------------------------------------------------------------
:: weryfikacja uprawnień do czyncości, aby uruchomić obszar użytkownik musi mieć uprawnienia
:: do jednej z czynności przegladania środków lub dodawania środków.
{? exec('hasAction','users','FST_EWI_ZASA') | exec('hasAction','users','FST_EWI_DESN')
   | exec('hasAction','users','FST_EWI_ZASB') | exec('hasAction','users','FST_EWI_DESR')
   | exec('hasAction','users','FST_EWI_ZASD') | exec('hasAction','users','FST_EWI_DESS')
   | exec('hasAction','users','FST_EWI_ZKLA') |  exec('hasAction','users','FST_EWI_ZBSR')
|| _ma:=1
|| _ma:=0
?};
{? _ma=0
|| FUN.emsg('Brak wystarczających uprawnień do uruchomienia obszaru FST.'@);
   return(0)
?};
exec('init','fst');
{? REF.S_FIRMA().SYMBOL='000'
|| {? exec('hasAction','users','FST_EWI_ZBSR')
   ||
:: parametry domyślnie wyświetlania
      EDIT_ES.ZB_TRYB:='Z';
      EDIT_ES.ZB_ZAKR:='W';
      EDIT_ES.ZB_OD:=date(0,0,0);
      EDIT_ES.ZB_DO:=date(0,0,0);
      exec('srsfirma','!fst_ewi_zbsr',1);
      return(0)
   || FUN.emsg('Brak wystarczających uprawnień do uruchomienia obszaru FST.'@);
      return(0)
   ?}
?};
_form:="{? SRST.GRP='T'
        || 'xwin16.png:74'
        |? SRST.GRP='E'
        || 'xwin16.png:76'
        || ''
        ?}";
_form_tr:="{? SRST.GRP='T'
           || {? SRST.tr_state()=1 || 'xwin16.png:75' || 'xwin16.png:74' ?}
           |? SRST.GRP='E'
           || 'xwin16.png:76'
           || ''
           ?}";
SRST.win_fml('WER',SRST,'NST',,'ICON_BEFORE',_form);
SRST.win_fml('WER_N',SRST,'NST',,'ICON_BEFORE',_form);
SRST.win_fml('WER_U',SRST,'NST',,'ICON_BEFORE',_form);
SRST.win_fml('DWER',SRST,'GR','GR','ICON_BEFORE',_form_tr);
SRST.win_fml('DWER_O',SRST,'GR','GR','ICON_BEFORE',_form_tr);
SRST.win_fml('DWER_N',SRST,'GR','GR','ICON_BEFORE',_form_tr);
SRST.win_fml('DWER_N_O',SRST,'GR','GR','ICON_BEFORE',_form_tr);
SRST.fld_attr('DES',2);
OKRO_F.win_dict('SLO_SR');
:: zmienna globalna __DTREE informuje czy wyświetlany jest widok drzewa (>0) czy lista
:: wartość pobierana jest pierwotnie z ustawień użytkownika
__DTREE:=exec('get_srst_wid','fst');
:: zmienna globalna __LELEM informuje czy wyświetlana jest lista samych środków (0) czy zmieszana środków
:: i elementów składowych (>0)
__LELEM:=exec('get_srst_ele','fst');
__TABSEL:='';
:: obowiązująca klasyfikacja środków
STER.KST:=exec('cur_krst','fst');
:: Ustalenie treści linku
_params:=params_get();
{? type_of(_params)>0 & var_pres('LINK',_params)
|| _link:=_params.LINK
|| _link:=''
?};
{? _link<>''
|| SRD.selectAssets(_link)
|| SRD.selectAssets()
?}


\cur_krst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.02]
:: OPIS: Formuła zwraca obowiązującą w bieżącym roku klasyfikację środków
::----------------------------------------------------------------------------------------------------------------------
TAB_KRST.cntx_psh();
TAB_KRST.index('TABKRST');
TAB_KRST.prefix();
_tmprok:=0; _tmpref:=null;
{? TAB_KRST.first()
|| {! |?
      {? TAB_KRST.AR<=SSTALE.AO().RES & TAB_KRST.AR>_tmprok
      || _tmprok:=TAB_KRST.AR; _tmpref:=TAB_KRST.ref()
      ?};
      TAB_KRST.next()
   !}
?};
TAB_KRST.cntx_pop();
_tmpref


\fst_ewz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Główna formuła obszaru roboczego FST_EWZ - Planowanie amortyzacji
::----------------------------------------------------------------------------------------------------------------------
exec('init','fst');
__DTREE:=exec('get_srst_wid','fst');
__LELEM:=exec('get_srst_ele','fst');
OKRO_F.win_dict('SLO_SR');
SRD.selPlan()


\fst_inp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Główna formuła obszaru roboczego FST_INP - Inwentaryzacja środków
::----------------------------------------------------------------------------------------------------------------------
exec('init','fst');
OKRO_F.win_dict('SLO_SR');
OSOBA.win_sel('SLO');
OSOBA.win_dict('SLO');
_form:="{? SRXD.GRP='T' || 'xwin16.png:74' |? SRXD.GRP='E' || 'xwin16.png:76' || '' ?}";
SRXD.win_fml('WER',SRXD,'JORG_N','SYMBOL','ICON_BEFORE',_form);
SRD.selInw()


\zws_par_fstp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Podstawowe parametry środków trwałych
::----------------------------------------------------------------------------------------------------------------------
: zaktualizuj wartości wszystkich stalych
exec('init_wer','#stalesys');

exec('stalesys','#stalesys');

exec('init','fst');
SRD.maski('r');

FINFO.win_edit('FSTP');
VAR_DEL.delete('__tor_d');
__tor_d:=FINFO.TOR_D;
SRDT.win_dict('SEL');
{? FINFO.edit("_ret:=''; __tor:='';
               _tab:=sql('select SUM(WARD) as SUMA from SRST');
               {? FINFO.TOR_D='T' & FINFO.TOR_D<>__tor_d & (_tab.first(); _tab.SUMA>0)
               || FUN.emsg('Ponowne włączenie obsługi toru dodatkowego nie jest możliwe.'@);
                  _ret:='TOR_D'
               || {? FINFO.TOR_D='T' & FINFO.TOR_D<>__tor_d & ~exec('tor_d','fst')
                  || {? FUN.ask('Włączenie obsługi toru dodatkowego w trakcie pracy systemu.'
                              '\nCzy chcesz kontynuować?'@)
                     ||  __tor:=FUN.choice('Z którego toru mają zostać przeniesione dane?',,'Podatkowy','Bilansowy');
                        {? __tor=1
                        || __tor:='podatkowy'
                        |? __tor=2
                        || __tor:='bilansowy'
                        |? __tor=0
                        || _ret:='TOR_D';
                           __tor:=''
                        ?}
                     || _ret:='TOR_D'
                     ?}
                  ?}
               ?};
               {? FINFO.TOR_D='N' & FINFO.TOR_D<>__tor_d
               || {? FUN.ask('Po wyłączeniu obsługi toru dodatkowego nie będzie możliwe jej ponowne włączenie.'
                                '\nCzy chcesz kontynuować?'@)=0
                  || _ret:='TOR_D'
                  ?}
               ?};
               {? _ret='' & FINFO.KST_MT<>null & FINFO.KST_MT().GR<>'T'
               || FUN.emsg('Typ dokumentu do zmiany klasyfikacji środków powinien obsługiwać pole\n'
                           'dotyczące zmiany grupy środka.'@);
                  _ret:='KST_MT'
               ?};
               _ret
              ")
|| exec('zapisz','#stalesys',1,FINFO,'DOKL');
   exec('zapisz','#stalesys',1,FINFO,'W');
   exec('zapisz','#stalesys',1,FINFO,'NRI_T');
   exec('zapisz','#stalesys',1,FINFO,'NRI_N');
   exec('zapisz','#stalesys',1,FINFO,'NRI_T_S');
   exec('zapisz','#stalesys',1,FINFO,'NRI_N_S');
   exec('zapisz','#stalesys',1,FINFO,'NRI_REDP');
   exec('zapisz','#stalesys',1,FINFO,'LIMIT_EU');
   exec('zapisz','#stalesys',1,FINFO,'TOR_D');
   exec('zapisz','#stalesys',1,FINFO,'SRST_MET');
   exec('zapisz','#stalesys',1,FINFO,'SRXI_LT');
   exec('zapisz','#stalesys',1,FINFO,'SRXI_MT');
   exec('zapisz','#stalesys',1,FINFO,'ZAS_MT');
   exec('zapisz','#stalesys',1,FINFO,'SPR_GRP');
   exec('zapisz','#stalesys',1,FINFO,'AMOR');
   exec('zapisz','#stalesys',1,FINFO,'AMO_RODZ');
   exec('zapisz','#stalesys',1,FINFO,'KST_MT');
   exec('zapisz','#stalesys',1,FINFO,'LIMIT_OS');
   exec('zapisz','#stalesys',1,FINFO,'LIMIT_OE');
   exec('zapisz','#stalesys',1,FINFO,'SPR_AMOR');
   {? __tor<>'' || exec('tor_dodatkowy','fst2') ?}
?};
SRDT.win_dict('WER');
VAR_DEL.delete('__tor_d')


\metody
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Definiowanie metod amortyzacji
::  OLD: \definicje/metamo.fml
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.NISKO:='N';
MA.index('MA');
MA.prefix();
MA.win_sel('GRP_MA');
MA.select()


\ma_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Dodawanie metody amortyzacji
::  OLD: \MAdodpr/metamo.fml
::----------------------------------------------------------------------------------------------------------------------
MA.win_edit('R_METAMO');
MA.blank();
MA.CZESTO_O:='Miesięczna';
MA.hdr_edit();
{? EDIT_ES.RODZAJ='P' || MA.hdr_edit(' - tor podatkowy'@)
|? EDIT_ES.RODZAJ='F' || MA.hdr_edit(' - tor bilansowy'@)
|? EDIT_ES.RODZAJ='D' || MA.hdr_edit(' - tor dodatkowy'@)
?};
{? 1+MA.T='D'
|| MA.efld_opt(MA.win_edit('?'),'mark=1, enable=1',,'LIN')
|| MA.efld_opt(MA.win_edit('?'),'mark=0, enable=0',,'LIN');
   MA.LIN:=''
?};
{? MA.edit("exec('chk_ma','fst',null)")
|| MA.add()
?};
MA.hdr_edit()


\chk_ma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Kontrola wartości pól podczas dodawania metody amortyzacji
::   WE: ref rekordu jeśli wywołana na Popraw, null jesli na Dołącz
::   WY: pusty string jeśli ok, akronim pola w przypadku problemu
::  OLD: \MArekpo/metamo.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=__CHK.record(MA,,'T','K','N');
{? _wy='' & MA.RODZAJ<>'F' & MA.T='Naturalna'
|| FUN.emsg('Metoda %1 ma określony typ: Naturalna, który może\n'
            'występować tylko dla metod o rodzaju: Bilansowa.'@[MA.K]);
   _wy:='T'
?};
{? _wy=''
|| {? __CHK.index(MA,(_>0 & _a<>null))<>'' || _wy:='K' ?}
?};
{? _wy='' & 1+MA.T='D' & MA.LIN=''
|| FUN.emsg('Dla metody degresywnej należy wskazać metodę liniową,\n'
            'która będzie obowiązywać po przejściu obliczania amortyzacji na sposób liniowy.'@);
   _wy:='LIN'
?};
{? _wy='' & MA.RODZAJ<>'F' & MA.T='Leasing'
|| FUN.emsg('Metoda %1 ma określony typ: Leasing, który może\n'
            'występować tylko dla metod o rodzaju: Bilansowa.'@[MA.K]);
   _wy:='T'
?};
_wy


\be_ma_czesto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redakcją pola MA.CZESTO
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
{? 1+MA.T='N' || 0 || 1 ?}


\ae_ma_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redakcji pola MA.T
::----------------------------------------------------------------------------------------------------------------------
{? 1+MA.T='N' || MA.CZESTO:='M' ?};
{? 1+MA.T='N' || MA.PD:=''; MA.NISKO:='N' ?};
{? 2+MA.T='Le' || MA.NISKO:='N' ?};
{? 1+MA.T='D'
|| MA.efld_opt(MA.win_edit('?'),'mark=1, enable=1',,'LIN')
|| MA.efld_opt(MA.win_edit('?'),'mark=0, enable=0',,'LIN');
   MA.LIN:=''
?};
{? 2+MA.T='Le'
|| MA.efld_opt(MA.win_edit('?'),'editable=0',,'PDM');
   MA.PDM:='N'
|| MA.efld_opt(MA.win_edit('?'),'editable=1',,'PDM')
?};
1


\ma_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Poprawianie metody amortyzacji
::  OLD: \MApoppr/metamo.fml
::----------------------------------------------------------------------------------------------------------------------
{? MA.count()=0
|| MA.win_edit('R_METAMO')
|| MA.win_edit('O_METAMO')
?};
{? EDIT_ES.RODZAJ='P' || MA.hdr_edit(' - tor podatkowy'@)
|? EDIT_ES.RODZAJ='F' || MA.hdr_edit(' - tor bilansowy'@)
|? EDIT_ES.RODZAJ='D' || MA.hdr_edit(' - tor dodatkowy'@)
?};
{? 1+MA.T='D'
|| MA.efld_opt(MA.win_edit('?'),'mark=1, enable=1',,'LIN')
|| MA.efld_opt(MA.win_edit('?'),'mark=0, enable=0',,'LIN');
   MA.LIN:=''
?};
{? MA.edit("exec('chk_ma','fst',MA.ref())")
|| MA.put()
?};
MA.hdr_edit()


\ma_crtl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Kontrola czy biezaca metoda liniowa nie jest podpieta do wskazanej np. degresywnej lub jednorazowej
::   WE: _a - metoda do sprawdzenia (obecnie tylko 'Degresywna')
::----------------------------------------------------------------------------------------------------------------------
_wy:='';
_kod:=MA.K;
_tor:=MA.RODZAJ;
MA.cntx_psh();
MA.index('TYPKOD');
MA.prefix(_a,_tor);
{? MA.first()
|| {! |?
      {? _a='Degresywna'
      || {? MA.LIN=_kod || _wy:=MA.K ?}
      ?};
      _wy='' & MA.next()
   !}
?};
MA.cntx_pop();
_wy


\ma_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Usuwanie metody amortyzacji
::----------------------------------------------------------------------------------------------------------------------
{? MA.count()=0
|| _dalej:=1;
   {? 1+MA.T='L'
   || _deg:=exec('ma_crtl','fst','Degresywna');
      {? _deg<>''
      || FUN.emsg('Metoda jest wykorzystywana w definicji metody degresywnej %1 i nie można jej usunąć.'@[_deg]);
         _dalej:=0
      ?}
   ?};
   {? _dalej & FUN.ask('Usunać metodę amortyzacji %1 (%2)?'@[MA.K,MA.N])
   || MA.del()
   ?}
|| FUN.info('Wskazana metoda jest wykorzystywana w systemie i nie można jej usunąć.'@)
?}


\ma_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wyświetlanie danych metody amortyzacji
::  OLD: \ma_p_wys/metamo.fml
::----------------------------------------------------------------------------------------------------------------------
MA.win_edit('R_METAMO');
{? EDIT_ES.RODZAJ='P' || MA.hdr_edit(' - tor podatkowy'@)
|? EDIT_ES.RODZAJ='F' || MA.hdr_edit(' - tor bilansowy'@)
|? EDIT_ES.RODZAJ='D' || MA.hdr_edit(' - tor dodatkowy'@)
?};
MA.display();
MA.hdr_edit()


\rodzblan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: Akcja na blank dla pola MA.RODZAJ
::   WY: zwraca kod rodzaju zależnie od bieżącej zakładki
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ


\be_ma_pd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PJ] [8.60]
:: OPIS: przed redakcją pola MA.PD
::  OLD: \MApredPD/metamo.fml
::----------------------------------------------------------------------------------------------------------------------
{? 1+MA.T='D' || 1 || 0 ?}


\tor_pod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: przed obsługą zakładki Tor podatkowy
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='P';
MA.index('MA_RODZ');
MA.prefix(EDIT_ES.RODZAJ)


\tor_fin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: przed obsługą zakładki Tor bilansowy
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='F';
MA.index('MA_RODZ');
MA.prefix(EDIT_ES.RODZAJ)


\tor_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: przed obsługą zakładki Tor dodatkowy
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='D';
MA.index('MA_RODZ');
MA.prefix(EDIT_ES.RODZAJ)


\sezony
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: mprze: sezony amortyzacji
::  OLD: \SEZONY/estra.fml
::----------------------------------------------------------------------------------------------------------------------
SEZ.win_sel('WER');
SEZ.index('KOD');
SEZ.prefix(REF.FIRMA);
SEZ.select()


\sezam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: pored: sezon amortyzacji
::  OLD: \SEZAM/estra.fml
::----------------------------------------------------------------------------------------------------------------------
fld(~-fld());
{? fld()<>'T' & fld()<>'N'
|| {? FUN.ask('~~Możliwe wartości:\n'@) || fld('T') || fld('N') ?}
?};
SEZ.LM:=0;
{! _i:=1..12
|! SEZ.LM+={? ($('SEZ.M'+$_i))()='T' || 1 || 0 ?}
!};
1


\sez_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formuła usuwa rekord tabeli SEZ
::  OLD: \czy_del_sez/sezony.fml
::----------------------------------------------------------------------------------------------------------------------
{? SEZ.count()<>0
|| FUN.emsg('Schemat jest wykorzystywany i nie można go usunąć\n'
            '(co najmniej 1 środek sezonowy ma przypisany ten schemat).'@)
|| {? FUN.ask('Usunąć schemat %1 (%2)?'@[SEZ.KOD,SEZ.OPIS]) || SEZ.del() ?}
?}


\chk_sez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: formula sprawdza wypelnienie pol tabeli SEZ
::   WE: _a = ref poprawianego rekordu SEZ lub null
::  OLD: \chk_sez/sezony.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=__CHK.record(SEZ,,'KOD');
{? _wy='' & _>0 & _a<>null
|| SEZ.cntx_psh();
   SEZ.index('KOD');
   SEZ.prefix();
   {? SEZ.find_key(REF.FIRMA,SEZ.KOD) & SEZ.ref()<>_a
   || FUN.emsg('Schemat o kodzie: %1 już istnieje.'@[SEZ.KOD]);
      _wy:='KOD'
   ?};
   SEZ.cntx_pop()
?};
{? _wy=''
|| {? SEZ.LM=0
   || {? ~FUN.ask('Nie wybrano żadnego okresu. Zatwierdzić pusty schemat?'@)
      || _wy:='M1'
      || _wy:=''
      ?}
   ?}
?};
_wy


\sez_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formula na dolacz w oknie wertowania WER tabeli SEZ
::  OLD: \add_sez/sezony.fml
::----------------------------------------------------------------------------------------------------------------------
_exit:=0;
SEZ.blank();
{! |?
   {? SEZ.edit("exec('chk_sez','fst',null)")
   || no_msg(1);
      errno();
      SEZ.add();
      _err:=errno;
      {? _err<>0 & _err=317
      || FUN.emsg('Schemat o podanym kodzie (%1) już istnieje,\n'
                  'aby dodać schemat należy zmienić kod na unikalny'@[SEZ.KOD]);
         _exit:=0
      |? _err<>0 & _err<>317
      || FUN.emsg('Podczas dodawania rekordu wystąpił błąd: %1.'@[$_err]);
         _exit:=1
      || _exit:=1
      ?};
      no_msg(0)
   || _exit:=1
   ?};
   _exit=0
!}


\sez_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: formula na popraw w okienku redagowania tabeli SEZ (schematy sezonow)
::  OLD: \edit_sez/sezony.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('is_amort_sez','fst',SEZ.ref())
|| FUN.emsg('Schematu %1 nie można poprawić. Przynajmniej 1 środek sezonowy\n'
            'korzystający z tego schematu ma naliczoną amortyzację lub plan amortyzacji.'@[SEZ.KOD]);
   return()
?};
_exit:=0;
{! |?
   {? SEZ.edit("exec('chk_sez','fst',SEZ.ref())")
   || no_msg(1);
      errno();
      SEZ.put();
      _err:=errno;
      {? _err <> 0 & _err= 317
      || FUN.emsg('Schemat o podanym kodzie (%1) już istnieje,\n'
                  'aby zachować zmiany należy zmienić kod na unikalny'@[SEZ.KOD]);
         _exit:=0
      |? _err<>0 & _err<>317
      || FUN.emsg('Podczas zapisywania zmian wystąpił błąd: %1.'@[$_err]);
         _exit:=1
      || _exit:=1
      ?};
      no_msg(0)
   || _exit:=1
   ?};
   _exit=0
!}


\sez_rep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: uruchamia wydruk schematow sezonow amortyzacji
::  OLD: \sez_rep/sezony.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','','fst_sez_list',,,,,,,,'W')


\is_amort_sez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formula sprawdza czy obliczono amortyzacje dla choc jednego srodka sezonowego
::       z danym schematem amortyzacji
::  WE : _a = ref schematu z tabeli SEZ
::  WY : 1 = tak, 0 - nie
::  OLD: \is_amort_sez/sezony.fml
::----------------------------------------------------------------------------------------------------------------------
SRST.cntx_psh();
SRST.use('srst'+'r'+REF.FIRMA().SYMBOL);
SRST.prefix();
SRST.blank(1);
SRST.SCH_SEZ:=_a;
SRST.NAL:='T';
SRST.S:='T';
{? SRST.find_rec(0) || _wy:=1 || _wy:=0 ?};
SRST.cntx_pop();
_wy


\typ_metody
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Zwraca nazwę typu metody
::   WE: 1 literowy skrót np. L=Liniowa
::   WY: Nazwa typu metody
::----------------------------------------------------------------------------------------------------------------------
{? _a='L' || 'Liniowa'
|? _a='D' || 'Degresywna'
|? _a='N' || 'Naturalna'
|? _a='P' || 'Przyspieszona'
|? _a='E' || 'Leasing'
?}


\ae_ma_czesto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola MA.CZESTO
::----------------------------------------------------------------------------------------------------------------------
{? MA.CZESTO='M' || MA.CZESTO_O:='Miesięczna'
|? MA.CZESTO='K' || MA.CZESTO_O:='Kwartalna'
|? MA.CZESTO='R' || MA.CZESTO_O:='Roczna'
|? MA.CZESTO='J' || MA.CZESTO_O:='Roczna w 1 okresie'
?};
1


\def_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Funkcja Dolacz (formula po) w oknie wertowania tabeli DEFAULT
::  OLD: \def_new/srodki.fml
::----------------------------------------------------------------------------------------------------------------------
DEFAULT.blank();
DEFAULT.win_edit('RED');
_enable:=FINFO.TOR_D='T';
DEFAULT.efld_opt(DEFAULT.win_edit('?'), 'enable='+$_enable,, 'KONDOD');
DEFAULT.efld_opt(DEFAULT.win_edit('?'), 'enable='+$_enable,, 'MAD');
oper_dep:=OPERATOR.DEPT;
EDIT_ES.JORG:='';
EDIT_ES.EDITABLE:=1;
{? DEFAULT.edit("exec('chk_default','fst')")
|| DEFAULT.add()
|| OPERATOR.DEPT:=oper_dep
?};
1


\pop_defa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2006]
:: OPIS: Formula przed akcja Popraw w oknie wertowania tabeli DEFAULT
::  OLD: \pop_defa/srodki.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.EDITABLE:=1;
EDIT_ES.JORG:=DEFAULT.JORG().SYMBOL;
1


\chk_default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formula rekord po w oknie wertowania WER tabeli DEFAULT
::  OLD: \chk_default/srodki.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:='';
_cecha:=0;
_wy:=__CHK.record(DEFAULT,,'JORG');
{? _wy=''
|| {? DEFAULT.MAP<>null
   || _cecha:=1
   ?};
   {? _cecha=0 & DEFAULT.MAF<>null
   || _cecha:=1
   ?};
   {? _cecha=0 & DEFAULT.KONPOD<>null
   || _cecha:=1
   ?};
   {? _cecha=0 & DEFAULT.KONFIN<>null
   || _cecha:=1
   ?};
   {? _cecha=0 & DEFAULT.PRZYCHOD<>null
   || _cecha:=1
   ?};
   {? _cecha=0
   || FUN.emsg('Należy ustawić choć jedną wartość domyślną.'@);
      _wy:='PRZYCHOD'
   ?}
?};
{? _wy=''
|| {? DEFAULT.R='N' & DEFAULT.MAP<>null
   || {? DEFAULT.MAP().NISKO<>'T'
      || FUN.emsg('Wybrana metoda amortyzacji nie może być stosowana dla środków niskocennych.'@);
         _wy:='MAP'
      ?}
   ?}
?};
{? _wy=''
|| {? DEFAULT.R='N' & DEFAULT.MAF<>null
   || {? DEFAULT.MAF().NISKO<>'T'
      || FUN.emsg('Wybrana metoda amortyzacji nie może być stosowana dla środków niskocennych.'@);
         _wy:='MAF'
      ?}
   ?}
?};
{? _wy=''
|| {? menu_txt()='Dołącz'
   || _jorg:=DEFAULT.JORG;
      _rodz:=DEFAULT.R;
      DEFAULT.cntx_psh();
      DEFAULT.index('DEFAULT');
      DEFAULT.prefix(_rodz, _jorg);
      {? DEFAULT.first()
      || FUN.emsg('Dla wybranego rodzaju środków i j. organizacyjnej\n wprowadzono już zestaw wartości domyślnych.\n'
                  'Wybierz inny rodzaj środków lub j. organizacyjną.'@);
         _wy:='R'
      ?};
      DEFAULT.cntx_pop()
   || _ref:=DEFAULT.ref();
      _jorg:=DEFAULT.JORG;
      _rodz:=DEFAULT.R;
      DEFAULT.cntx_psh();
      DEFAULT.index('DEFAULT');
      DEFAULT.prefix(_rodz, _jorg);
      {? DEFAULT.first() & _ref<>DEFAULT.ref()
      || FUN.emsg('Dla wybranego rodzaju środków i j. organizacyjnej\n wprowadzono już zestaw wartości domyślnych.\n'
                  'Wybierz inny rodzaj środków lub j. organizacyjną.'@);
         _wy:='R'
      ?};
      DEFAULT.cntx_pop()
   ?}
?};
_wy


\def_activ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formula do podswietlania wierszy w oknie wertowania WER tabeli DEFAULT
::  OLD: \def_activ/srodki.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEFAULT.ACTIV='T'
|| _wy:='DEFAULT#01#01'
|| _wy:=''
?};
_wy


\default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: uruchamia funkcje definiowania wartosci domyslnych z menu Definicje
::  OLD: \default/srodki.fml
::----------------------------------------------------------------------------------------------------------------------
DEFAULT.index('DEFAULO');
DEFAULT.prefix();
UD_POM.JORG:='';
BPMN.SYM_DOM:=BPMN.KK_DOM:='FST';
VAR.EDITABLE:=1;
DEFAULT.select()


\ae_map_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: po redakcji pola MAP tabeli DEFAULT
::  OLD: \ae_map_d/srodki.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEFAULT.R='N' & fld()<>null
|| {? DEFAULT.MAP().NISKO<>'T'
   || FUN.emsg('Wybrana metoda amortyzacji nie może być stosowana dla środków niskocennych!'@);
      _wy:=0
   || _wy:=1
   ?}
|| _wy:=1
?};
_wy


\ae_maf_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: po redakcji pola MAF tabeli DEFAULT
::----------------------------------------------------------------------------------------------------------------------
{? DEFAULT.R='N' & fld()<>null
|| {? DEFAULT.MAF().NISKO<>'T'
   || FUN.emsg('Wybrana metoda amortyzacji nie może być stosowana dla środków niskocennych!'@);
      _wy:=0
   || _wy:=1
   ?}
|| _wy:=1
?};
_wy


\ae_mad_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: po redakcji pola MAD tabeli DEFAULT
::----------------------------------------------------------------------------------------------------------------------
{? DEFAULT.R='N' & fld()<>null
|| {? DEFAULT.MAD().NISKO<>'T'
   || FUN.emsg('Wybrana metoda amortyzacji nie może być stosowana dla środków niskocennych!'@);
      _wy:=0
   || _wy:=1
   ?}
|| _wy:=1
?};
_wy


\mf_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: Przed redakcja pola MF tabel SRSR
::  OLD: \mf_red/metamo.fml
::----------------------------------------------------------------------------------------------------------------------
MA.hdr_sel();
MA.hdr_sel(' bilansowej'@);
EDIT_ES.RODZAJ:='F';
{? DEFAULT.R='T' || EDIT_ES.NISKO:='' || EDIT_ES.NISKO:='T' ?};
1


\md_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Przed redakcja pola MD tabel SRSR
::----------------------------------------------------------------------------------------------------------------------
MA.hdr_sel();
MA.hdr_sel(' dodatkowej'@);
EDIT_ES.RODZAJ:='D';
{? DEFAULT.R='T' || EDIT_ES.NISKO:='' || EDIT_ES.NISKO:='T' ?};
1


\kp_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MAKO [2010]
:: OPIS: Przed redagowaniem pola DAFAULT.KONPOD
::  OLD: \kp_be/estra.fml
::----------------------------------------------------------------------------------------------------------------------
ZSKON.win_dict('WYB_P');

ZSKON.hdr_sel();
ZSKON.hdr_sel(' do amortyzacji podatkowej'@);
EDIT_ES.RODZAJ:='P'


\spr_zsdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2010]
:: OPIS: Weryfikacja wybranego zestawu kont kosztowych
::  OLD: \spr_zsdo/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld<>null
|| _PROCENT:=0;
   KKOSZ.cntx_psh();
   KKOSZ.index('KONTO');
   KKOSZ.prefix(fld());
   {? KKOSZ.first()
   || {! |?
         _PROCENT+=KKOSZ.PR;
         KKOSZ.next()
      !}
   ?};
   KKOSZ.cntx_pop();
   {? _PROCENT$2>100 | _PROCENT<=0
   || FUN.emsg('Wybrany zestaw jest niepoprawnie zdefiniowany.'@);
      0
   |? _PROCENT>0 & _PROCENT<100
   || FUN.ask('Suma udziałów kont wchodzących w skład zestawu jest mniejsza niż 100%%. Kontynuować?'@)
   || 1
   ?}
|| 1
?}


\kf_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MAKO [2010]
:: OPIS: Przed redagowaniem pola DEFAULT.KONFIN
::  OLD: \kf_be/estra.fml
::----------------------------------------------------------------------------------------------------------------------
ZSKON.win_dict('WYB_F');

ZSKON.hdr_sel();
ZSKON.hdr_sel(' do amortyzacji bilansowej'@);
EDIT_ES.RODZAJ:='F'


\kd_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redagowaniem pola DEFAULT.KONDOD
::----------------------------------------------------------------------------------------------------------------------
ZSKON.win_dict('WYB_D');

ZSKON.hdr_sel();
ZSKON.hdr_sel(' do amortyzacji dodatkowej'@);
EDIT_ES.RODZAJ:='D'


\kon_zes
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wyświetla listę kont zestawu
::----------------------------------------------------------------------------------------------------------------------
KKOSZ.index('KONTO');
KKOSZ.prefix(ZSKON.ref());
_hdr:=': '+ZSKON.KOD;
KKOSZ.hdr_sel(_hdr);
KKOSZ.select();
KKOSZ.hdr_sel()


\get_default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formula wstawia do pol tabeli SRSR wartosci domyslne z tabeli DEFAULT
::        jesli sa zdefiniowane i aktywne
::  OLD: \get_default/srodki.fml
::----------------------------------------------------------------------------------------------------------------------
DEFAULT.cntx_psh();
DEFAULT.index('DEFAULT');
DEFAULT.prefix(SRSR.R, SRSR.JORG);
_dalej:=1;
_jorg:=SRSR.JORG;
{! |?
   {? DEFAULT.first() & DEFAULT.ACTIV='T'
   || {? DEFAULT.MAP<>null & SRSR.MP=null
      || SRSR.MP:=DEFAULT.MAP
      ?};
      {? DEFAULT.MAF<>null & SRSR.MF=null
      || SRSR.MF:=DEFAULT.MAF
      ?};
      {? DEFAULT.KONPOD<>null & SRSR.KONPOD=null
      || SRSR.KONPOD:=DEFAULT.KONPOD
      ?};
      {? DEFAULT.KONFIN<>null & SRSR.KONFIN=null
      || SRSR.KONFIN:=DEFAULT.KONFIN
      ?};
      {? DEFAULT.PRZYCHOD<>null & SRSR.PRZYCHOD=null
      || SRSR.PRZYCHOD:=DEFAULT.PRZYCHOD
      ?};
      _dalej:=0
   || {? _jorg<>null
      || _ud_typ:=SRSR.JORG().UD_TYP;
         UD_SCH.cntx_psh();
         UD_SCH.index('SYMBOL');
         UD_SCH.prefix(_ud_typ, 'STRORG', 'STRORG');
         {? UD_SCH.first() || _ud_sch:=UD_SCH.ref() || _ud_sch:=null ?};
         UD_SCH.cntx_pop();
         UD_DEF.cntx_psh();
         UD_DEF.index('PODTEC');
         UD_DEF.prefix();
         {? UD_DEF.find_key(_ud_sch,_jorg) & UD_DEF.UD_DEF<>null
         || UD_DEF.seek(UD_DEF.UD_DEF, UD_DEF.name());
            _jorg:=UD_DEF.UD_SKL;
            DEFAULT.prefix(SRSR.R,_jorg)
         || _dalej:=0;
            _jorg:=null
         ?};
         UD_DEF.cntx_pop()
      || _dalej:=0
      ?}
   ?};
   _dalej
!};
DEFAULT.cntx_pop()


\bl_defod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Wartosc na blank dla pola ODD tabeli DEFAULT
::  OLD: \bl_defod/srodki.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPERATOR.DEPT<>null || OPERATOR.DEPT ?}


\be_defod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formula przed redakcja dla pola ODD tabeli DEFAULT
::  OLD: \be_defod/srodki.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPERATOR.DEPT <> null || 0 || 1 ?}


\defa_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Formula na Wyswietl w oknie wertowania WER tabeli DEFAULT
::  OLD: \defa_wys/srodki.fml
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.JORG:=DEFAULT.JORG().SYMBOL;
DEFAULT.display()


\mp_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: Przed redakcja pola MP tabel DEFAULT
::----------------------------------------------------------------------------------------------------------------------
MA.hdr_sel();
MA.hdr_sel(' podatkowej'@);
EDIT_ES.RODZAJ:='P';
{? DEFAULT.R='T' || EDIT_ES.NISKO:='' || EDIT_ES.NISKO:='T' ?};
1


\be_default_jorg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Przed redakcja pola JORG zmiennej EDIT_ES
::----------------------------------------------------------------------------------------------------------------------
{? 4+cur_tab.name()='srsr' | (4+cur_tab.name()='srxd' & SRXD.KIND='T') | 4+cur_tab.name()='srxn'
   | 4+cur_tab.name()='srxp' | 4+cur_tab.name()='srxa' | (var_pres('SRD')>0 & SRD.PAR_WYDR='T')
|| 1
|? cur_tab.name()='default'
|| EDIT_ES.EDITABLE
|? 4+cur_tab.name()='srdo'
|| {? SRDO.TYP().JORG='N' || 0 || 1 ?}
|| 0
?}


\f3_default_jorg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Obsługa F3 pola JORG zmiennej EDIT_ES
::----------------------------------------------------------------------------------------------------------------------
exec('ud_def_symbol_f3','schemat','PODZORG',,2)


\ae_default_jorg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Po redakcji pola JORG zmiennej EDIT_ES
::----------------------------------------------------------------------------------------------------------------------
{? cur_afld()='JORG' & exec('be_default_jorg','fst')=1 & EDIT_ES.JORG='' &
   4+cur_tab.name()<>'srxn' & 4+cur_tab.name()<>'srxp' & 4+cur_tab.name()<>'srxa' & 4+cur_tab.name()<>'srxd'
   & ~(var_pres('SRD')>0 & SRD.PAR_WYDR='T')
|| {? ~menu_txt()='Grupowa zmiana miejsca'
   || FUN.emsg('Pole musi zostać wypełnione.'@);
      return(0)
   || return(1) ?}
|? EDIT_ES.JORG=''
   & (4+cur_tab.name()='srxn' | 4+cur_tab.name()='srxp' | 4+cur_tab.name()='srxa'
      | 4+cur_tab.name()='srxd' | (var_pres('SRD')>0 & SRD.PAR_WYDR='T'))
|| {? 4+cur_tab.name()='srxn' || SRXN.JORG:=null
   |? 4+cur_tab.name()='srxp' || SRXP.JORG:=null
   |? 4+cur_tab.name()='srxa' || SRXA.JORG:=null
   |? 4+cur_tab.name()='srxd' || SRXD.JORG:=null
   |? (var_pres('SRD')>0 & SRD.PAR_WYDR='T') || PAR_WYDR.JORG:=null
   ?};
   return(1)
?};
_ref:=exec('ud_skl_symbol_ae','schemat','PODZORG',,2);
{? _ref
|| {? 4+cur_tab.name()='srsr'
   || SRSR.JORG:=_ref;
      _dokodd:=null;
      {? var_pres('__doktosrsr')>0
      || DOK.cntx_psh(); DOK.prefix();
         {? DOK.seek(__doktosrsr,ref_name(__doktosrsr)) || _dokodd:=DOK.ODD ?};
         DOK.cntx_pop()
      ?};
      SKIDXODD.cntx_psh();
      SKIDXODD.index('UD_SKL');
      SKIDXODD.prefix(SRSR.JORG);
      {? SKIDXODD.first() & SKIDXODD.ODD<>null
      || {? OPERATOR.DEPT=null | SKIDXODD.ODD=OPERATOR.DEPT
         || {? _dokodd=null
            || SRSR.ODD:=SKIDXODD.ODD;
               _out:=1
            || {? _dokodd=SKIDXODD.ODD
               || SRSR.ODD:=SKIDXODD.ODD;
                  _out:=1
               || FUN.emsg('Wskazana jednostka organizacyjna jest powiązana z inną\n'@+
                           'jednostką księgową niż dokument'@);
                  _out:=0
               ?}
            ?}
         || FUN.emsg('Wskazana jednostka organizacyjna jest powiązana z inną (%1)\n'
                     'jednostką księgową niż ta ustawiona w parametrach pracy (%2).'@[SKIDXODD.ODD().OD,OPERATOR.DEPT().OD]);
            _out:=0
         ?}
      || FUN.emsg('Wskazana jednostka organizacyjna nie jest powiązana z jednostką księgową.'@);
         _out:=0
      ?};
      SKIDXODD.cntx_pop();
      {? _out & SRSR.JORG<>null & -menu_txt()='dołącz' & SRSR.win_edit('?')<>'RED_U'
      || DEFAULT.index('DEFAULT');
         DEFAULT.prefix(SRSR.R,SRSR.JORG);
         {? DEFAULT.first() & DEFAULT.ACTIV='T' & SRSR.win_edit('?')<>'RED_UG'
            & SRSR.win_edit('?')<>'RED_U' & SRSR.win_edit('?')<>'RED_UE'
         || {? SRSR.PRZYCHOD=null || SRSR.PRZYCHOD:=DEFAULT.PRZYCHOD ?};
            {? SRSR.MP=null || SRSR.MP:=DEFAULT.MAP ?};
            {? SRSR.KONPOD=null || SRSR.KONPOD:=DEFAULT.KONPOD ?};
            {? SRSR.MF=null || SRSR.MF:=DEFAULT.MAF ?};
            {? SRSR.KONFIN=null || SRSR.KONFIN:=DEFAULT.KONFIN ?};
            {? FINFO.TOR_D='T'
            || {? SRSR.MD=null || SRSR.MD:=DEFAULT.MAD ?};
               {? SRSR.KONDOD=null || SRSR.KONDOD:=DEFAULT.KONDOD ?}
            ?}
         ?}
      ?}
   |? 4+cur_tab.name()='srdo'
   || SRDO.JORG:=_ref;
      SKIDXODD.cntx_psh();
      SKIDXODD.index('UD_SKL');
      SKIDXODD.prefix(SRDO.JORG);
      {? SKIDXODD.first() & SKIDXODD.ODD<>null
      || {? OPERATOR.DEPT=null | SKIDXODD.ODD=OPERATOR.DEPT
         || SRDO.ODD:=SKIDXODD.ODD;
            _out:=1
         || FUN.emsg('Wskazana jednostka organizacyjna jest powiązana z inną (%1)\n'
                     'jednostką księgową niż ta ustawiona w parametrach pracy (%2).'@[SKIDXODD.ODD().OD,OPERATOR.DEPT().OD]);
            _out:=0
         ?}
      || FUN.emsg('Wskazana jednostka organizacyjna nie jest powiązana z jednostką księgową.'@);
         _out:=0
      ?};
      SKIDXODD.cntx_pop()
   |? 4+cur_tab.name()='srxa'
   || SRXA.JORG:=_ref;
      SKIDXODD.cntx_psh();
      SKIDXODD.index('UD_SKL');
      SKIDXODD.prefix(SRXA.JORG);
      {? SKIDXODD.first() & SKIDXODD.ODD<>null
      || {? (SKIDXODD.ODD=SRXA.SRXI().ODD | SRXA.SRXI().ODD=null)
         || SRXA.ODD:=SKIDXODD.ODD;
            _out:=1
         || FUN.emsg('Wskazana jednostka organizacyjna jest powiązana z inną (%1)\n'
                     'jednostką księgową niż ta ustawiona w parametrach inwentaryzacji (%2).'@[SKIDXODD.ODD().OD,SRXA.SRXI().ODD().OD]);
            _out:=0
         ?}
      || FUN.emsg('Wskazana jednostka organizacyjna nie jest powiązana z jednostką księgową.'@);
         _out:=0
      ?};
      SKIDXODD.cntx_pop()
   |? 4+cur_tab.name()='srxd'
   || SRXD.JORG_N:=_ref;
      SKIDXODD.cntx_psh();
      SKIDXODD.index('UD_SKL');
      SKIDXODD.prefix(SRXD.JORG_N);
      {? SKIDXODD.first() & SKIDXODD.ODD<>null
      || {? (SKIDXODD.ODD=SRXD.SRXA().SRXI().ODD | SRXD.SRXA().SRXI().ODD=null)
         || SRXD.ODD_N:=SKIDXODD.ODD;
            _out:=1
         || FUN.emsg('Wskazana jednostka organizacyjna jest powiązana z inną (%1)\n'
                     'jednostką księgową niż ta ustawiona w parametrach inwentaryzacji (%2).'@[SKIDXODD.ODD().OD,SRXD.SRXA().SRXI().ODD().OD]);
            _out:=0
         ?}
      || FUN.emsg('Wskazana jednostka organizacyjna nie jest powiązana z jednostką księgową.'@);
         _out:=0
      ?};
      SKIDXODD.cntx_pop()
   |? 4+cur_tab.name()='srxp'
   || SRXP.JORG:=_ref;
      SKIDXODD.cntx_psh();
      SKIDXODD.index('UD_SKL');
      SKIDXODD.prefix(SRXP.JORG);
      {? SKIDXODD.first() & SKIDXODD.ODD<>null
      || {? OPERATOR.DEPT=null | SKIDXODD.ODD=OPERATOR.DEPT
            | (SKIDXODD.ODD=SRXP.SRXN().SRXI().ODD | SRXP.SRXN().SRXI().ODD=null)
         || SRXP.ODD:=SKIDXODD.ODD;
            {? SRXP.POM<>null & SRXP.POM().ODD<>SRXP.ODD || SRXP.POM:=null ?};
            _out:=1
         || FUN.emsg('Wskazana jednostka organizacyjna jest powiązana z inną (%1)\n'
                     'jednostką księgową niż ta ustawiona w parametrach inwentaryzacji (%2).'@[SKIDXODD.ODD().OD,SRXP.SRXN().SRXI().ODD().OD]);
            _out:=0
         ?}
      || FUN.emsg('Wskazana jednostka organizacyjna nie jest powiązana z jednostką księgową.'@);
         _out:=0
      ?};
      SKIDXODD.cntx_pop()
   |? 4+cur_tab.name()='srxn'
   || SRXN.JORG:=_ref;
      SKIDXODD.cntx_psh();
      SKIDXODD.index('UD_SKL');
      SKIDXODD.prefix(SRXN.JORG);
      {? SKIDXODD.first() & SKIDXODD.ODD<>null
      || {? OPERATOR.DEPT=null | SKIDXODD.ODD=OPERATOR.DEPT
            | (SKIDXODD.ODD=SRXN.SRXI().ODD | SRXN.SRXI().ODD=null)
         || SRXN.ODD:=SKIDXODD.ODD;
            {? SRXN.POM<>null & SRXN.POM().ODD<>SRXN.ODD || SRXN.POM:=null ?};
            _out:=1
         || FUN.emsg('Wskazana jednostka organizacyjna jest powiązana z inną (%1)\n'
                     'jednostką księgową niż ta ustawiona w parametrach inwentaryzacji (%2).'@[SKIDXODD.ODD().OD,OPERATOR.DEPT().OD]);
            _out:=0
         ?}
      || FUN.emsg('Wskazana jednostka organizacyjna nie jest powiązana z jednostką księgową.'@);
         _out:=0
      ?};
      SKIDXODD.cntx_pop()
   |? (var_pres('SRD')>0 & SRD.PAR_WYDR='T')
   || PAR_WYDR.JORG:=_ref;
      SKIDXODD.cntx_psh();
      SKIDXODD.index('UD_SKL');
      SKIDXODD.prefix(PAR_WYDR.JORG);
      {? SKIDXODD.first() & SKIDXODD.ODD<>null
      || {? OPERATOR.DEPT=null | SKIDXODD.ODD=OPERATOR.DEPT
         || PAR_WYDR.ODD:=SKIDXODD.ODD;
            _out:=1
         || FUN.emsg('Wskazana jednostka organizacyjna jest powiązana z inną (%1)\n'
                     'jednostką księgową niż ta ustawiona w parametrach pracy (%2).'@[SKIDXODD.ODD().OD,OPERATOR.DEPT().OD]);
            _out:=0
         ?}
      || FUN.emsg('Wskazana jednostka organizacyjna nie jest powiązana z jednostką księgową.'@);
         _out:=0
      ?};
      SKIDXODD.cntx_pop()
   |? cur_tab.name()='default'
   || DEFAULT.JORG:=_ref;
      _out:=1
   ?}
|| _out:=0
?};
_out


\getOkresRok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Zwraca ref okresu lub roku obrachunkowego z parametrów pracy, dla obszaru FST
::   WE: _a=1 - okres (domyślnie), _a=2 - rok obrachunkowy
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=1 ?};
_okres:=__PARSES.getVal('OkresRok').OKRO_E;
{? _okres<>null
|| _fst:=SRD.FST;
   OKR_OBSZ.cntx_psh();
   OKR_OBSZ.index('OKRO_F2');
   OKR_OBSZ.prefix(_fst,_okres);
   {? ~OKR_OBSZ.first() || _okres:=null ?};
   OKR_OBSZ.cntx_pop()
?};
{? _okres=null
|| _ref:=null
|| {? _a=1
   || _ref:=_okres
   |? _a=2
   || OKRO_F.cntx_psh();
      OKRO_F.prefix();
      OKRO_F.seek(_okres,OKRO_F.name());
      _ref:=OKRO_F.ROK;
      OKRO_F.cntx_pop()
   ?}
?};
_ref


\liniowa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na wartość początkową dla pola MA.T
::----------------------------------------------------------------------------------------------------------------------
'Liniowa'


\title
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła ustawiająca tytuł okna
::----------------------------------------------------------------------------------------------------------------------
AreaTitle.setTabWin(_a,~~);
AreaTitle.setTitle()


\get_new_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2011]
:: OPIS: Formula generuje nastepny wolny numer inwentarzowy
::   WY: numer inwentarzowy [STRING]
::  OLD: \get_new_nr/numerinw.fml
::----------------------------------------------------------------------------------------------------------------------
_nri_max:=0; _nri:='';_len:=0;
:: czy osobna numeracja dla środków niskocennych
_p207:=PAR_SKID.get(207);
:: czy osobna numeracja dla każdej jednostki księgowej
_p200:=PAR_SKID.get(200);
{? SRSR.NRI<>''
|| _nri:=SRSR.NRI;
   {? SRSR.NRI+1='.' || _tmp:=SRSR.NRI-1 || _tmp:=SRSR.NRI ?};
   {? _p207='T' || _tmp:=1-_tmp ?};
   _nri_max:=#(_tmp)
|| _nri:='';
   _nri_max:=0
?};
SRSR.cntx_psh();
{? _p207='T'
|| {? _p200='T'
   || SRSR.index('RNRI_O');
      SRSR.prefix(SRSR.R,SRSR.ODD,'T')
   || SRSR.index('RNRI');
      SRSR.prefix(SRSR.R,'T')
   ?}
|| {? _p200='T'
   || SRSR.index('NRI_O');
      SRSR.prefix(SRSR.ODD,'T')
   || SRSR.index('NRI');
      SRSR.prefix('T')
   ?}
?};
{? SRSR.last()
|| {? SRSR.NRI+1='.' || _tmp:=SRSR.NRI-1 || _tmp:=SRSR.NRI ?};
   {? _p207='T' || _tmp:=1-_tmp ?};
   {? #(_tmp)>=_nri_max
   || _nri_max:=#(_tmp);
      _nri:=SRSR.NRI;
      _len:=+_tmp;
      {? +($(#_tmp))>_len || _len:=+($(#_tmp)) ?}
   ?}
?};

:: analiza zmian NRI dokumentami zmiany właściwości
SRDO.cntx_psh();
SRDO.index('NRI');
{? _p207='T'
|| SRDO.prefix('L',SRSR.R)
|| SRDO.prefix('L')
?};
{? SRDO.last()
|| _find:=0;
   {! |?
      {? SRDO.NRI<>''
      || _find:=1;
         {? SRDO.NRI+1='.' || _tmpd:=SRDO.NRI-1 || _tmpd:=SRDO.NRI ?};
         {? _p207='T' || _tmpd:=1-_tmpd ?};
         _t_max:=#(_tmpd);
         {? _t_max>_nri_max
         || _nri:=SRDO.NRI;
            _nri_max:=_t_max;
            _tmp:=_tmpd;
            {? +($(#_tmp))>_len || _len:=+($(#_tmp)) ?}

         ?}
      ?};
      ~_find & SRDO.prev()
   !}
?};
SRDO.cntx_pop();

{? _nri<>''
|| _nri_max+=1;
   {? _len<=0 || _len:={? _p207='T' || 12 || 13 ?} ?};

   _nri:={? _p207='T' || SRSR.R || '' ?}+form(_nri_max,-1*_len,0,'9.')+'.'
|| _nri:={? _p207='T' || SRSR.R || '' ?}+'0000000000001.'
?};
SRSR.cntx_pop();
_nri


\ae_kropa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: pored: numer inw, symbol grupy
::   WY: 0/1
::  OLD: \AE_KROPA/estra.fml
::  TAG: <AE>
::----------------------------------------------------------------------------------------------------------------------
{? fld()=''
|| FUN.emsg('Proszę wypełnić pole.'@);
   0
|| {? fld()+1<>'.'
   || {? +fld()=18
      || FUN.emsg('Numer bez kropki nie może mieć więcej niż 17 znaków.'@);
         0
      || fld(fld()+'.');
         1
      ?}
   || 1
   ?}
?}


\dubel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DPU
:: OPIS: Formula wyszukujaca zdublowane nr inwentarzowe dla podanego NRI
::   WE: _a = nr inwentarzowy do sprawdzenia, _b = jednostka księgowa srodka jesli numeracja
::        jest wewnatrz j. księgowych, jesli ogolna to _b=null
::       _c = jeżeli jest i równe 1 to sprawdzanie w trybie Popraw
::   WY: jesli zwraca 0 to dubletow brak, jesli 1 to znaleziono
::  OLD: \dubel/valid.fml
::----------------------------------------------------------------------------------------------------------------------
_dubel:=0;_odd:=_b;_nri:=_a;
_p207:=PAR_SKID.get(207);
{? _>=3 & _c=1 || _ref:=SRSR.ref() || _ref:=null ?};
SRSR.cntx_psh();
SRST.cntx_psh();
{? _odd=null
|| {? _p207='T'
   || SRSR.index('RNRI');
      SRSR.prefix();
      _dubel:=SRSR.find_key(SRSR.R,'T',_nri,) & (_ref=null | _ref<>SRSR.ref())
   || SRSR.index('NRI');
      SRSR.prefix();
      _dubel:=SRSR.find_key('T',_nri,) & (_ref=null | _ref<>SRSR.ref())
   ?}
|| {? _p207='T'
   || SRSR.index('RNRI_O');
      SRSR.prefix();
      _dubel:=SRSR.find_key(SRSR.R,_odd,'T',_nri,) & (_ref=null | _ref<>SRSR.ref())
   || SRSR.index('NRI_O');
      SRSR.prefix();
      _dubel:=SRSR.find_key(_odd,'T',_nri,) & (_ref=null | _ref<>SRSR.ref())
   ?}
?};
{? _dubel=0
|| SRST.index('NRI');
   SRST.prefix(_a,);
   {? SRST.first()
   || {! |?
         {? (_ref=null | SRST.SRSR<>_ref) & SRST.OKRO_F().POCZ>=SSTALE.AO().POCZ
         || _dubel:=1
         ?};
         _dubel=0 & SRST.next()
      !}
   ?}
?};
SRST.cntx_pop();
SRSR.cntx_pop();
_dubel


\val_nri
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DPU
:: OPIS: Formula weryfikujaca czy wprowadzony nr inwentarzowy nie wystepuje
::       juz w systemie
::   WE: jeżeli _a i _a=1 to w trybie Popraw
::  OLD: \val_nri/valid.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(200)='T' || _odd:=SRSR.ODD || _odd:=null ?};
_dubel:=exec('dubel','fst',SRSR.NRI,_odd,_a);
{? _dubel
|| {? _odd=null
   || _msg:='Środek o numerze %1 został już wprowadzony.'@[SRSR.NRI]
   || _msg:='Środek o numerze %1 w oddziale %2 został już wprowadzony.'@[SRSR.NRI,SRSR.ODD().OD]
   ?};
   _ask:=_msg+'\n'+'Wygenerować nowy numer?'@;
   {? FUN.ask(_ask)
   || _formula:=exec('nri_form','fst');
      {? _formula<>''
      || _nri:=($(_formula))();
         {? _nri<>'' || SRSR.NRI:=_nri ?}
      || FUN.emsg('Nie ustawiono formuły nadającej numery inwentarzowe. Generowanie niemożliwe.'@)
      ?}
   ?};
   'NRI'
|| ''
?}


\nri_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formula zwraca formułę generującą NRI
::   WY: Tekst zawierający formułę na numer inwentarzowy
::----------------------------------------------------------------------------------------------------------------------
_formula:='';
{? SRSR.R='T'
|| {? FINFO.NRI_T=''
   || FUN.emsg('Nie ustawiono formuły na numer inwentarzowy dla środków trwałych w parametrach programu.'@)
   || _formula:=FINFO.NRI_T
   ?}
|? SRSR.R='N'
|| {? FINFO.NRI_N=''
   || FUN.emsg('Nie ustawiono formuły na numer inwentarzowy dla środków niskocennych w parametrach programu.'@)
   || _formula:=FINFO.NRI_N
   ?}
?};
_formula


\licznik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Obliczenie liczby miesięcy pomiędzy VAR.MP a miesiącem VAR.D
::       Zwracany wynik podstawiony do zmiennej VAR.L
::  OLD: \licznik/licznik.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.L:=VAR.D~2-1+VAR.MP


\dnal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DPU
:: OPIS: Formula oblicza date przejscia z metody degresywnej na liniowa
::       r - rok końca amortyzacji degresywnej,
::       n - wartość umarzana (netto),
::       o - odpis amortyzacyjny w roku
::       s - stawka amortyzacji
::       k - wspolczynnik korekty
::       VAR.L - liczba miesięcy pomiędzy VAR.MP (miesiac poczatkowy) a miesiącem VAR.D
::       VAR.D - na wejsciu = data eksploatacji srodka, na wyjsciu data przejscia
::   WY: data przejscia z metody degresywnej na liniowa
::  OLD: \dnal/metamo.fml
::----------------------------------------------------------------------------------------------------------------------
exec('licznik','fst');
r:=VAR.D~1;
{? k>1
 || n:=100;
    o:=(((s*k)/12)*(12-VAR.L))$2;
    {! |? r+=1;
          n:=(n-o)$2;
          o:=(n*s*k/100)$2;
          o>s
    !};
    VAR.D:=date(r+1,1,1)
?}


\licz_d_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wylicza datę przejścia z metody degresywnej na liniową dla bieżącego rekordu SRSR
::   WE: _a - określa dla których wartość F-bilansowych, P-podatkowych czy D-dodatkowych;
::       _b - określa w jakiej tabeli (ma to sens dla SRSR i SRDO)
::----------------------------------------------------------------------------------------------------------------------
{? (1+($(_b+'.MF'+'().T'))()<>'D' & ($(_b+'.MF'))()<>null & _a='F')
   | (1+($(_b+'.MP'+'().T'))()<>'D' & ($(_b+'.MP'))()<>null & _a='P')
   | (1+($(_b+'.MD'+'().T'))()<>'D' & ($(_b+'.MD'))()<>null & _a='D')
|| 0
|| {? 1+($(_b+'.M'+_a+'().T'))()<>''
   || {? 1+($(_b+'.M'+_a+'().T'))()='D'
      || VAR.D:={? SRSR.OKRO_F().POCZ<>date(0,0,0) || SRSR.OKRO_F().POCZ || SRSR.DE ?};
         s:={? _a='P' || ($(_b+'.STAP'))()
            |? _a='F' || ($(_b+'.STAF'))()
            |? _a='D' || ($(_b+'.STAD'))()
            ?};
         k:=($(_b+'.WK'+_a))();
         VAR.MP:=($(_b+'.M'+_a+'().MP'))();
         exec('dnal','fst')
      |? 1+($(_b+'.M'+_a+'().T'))()='L'
      || VAR.D:=SRSR.DE
      ?};
      {? SRSR.DE~1>=2000 || VAR.D:=date(VAR.D~1-1,1,1) ?}
   ?};
   {? _a='P' || SRSR.DPLP:={? VAR.D>SRSR.DE || VAR.D || date(0,0,0) ?}
   |? _a='F' || SRSR.DPLF:={? VAR.D>SRSR.DE || VAR.D || date(0,0,0) ?}
   |? _a='D' || SRSR.DPLD:={? VAR.D>SRSR.DE || VAR.D || date(0,0,0) ?}
   ?};
   1
?}


\data_przejscia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: formuła przed redakcją daty przejścia z metody degresywnej na liniową
::       s - stawka amortyzacji,
::       k - współczynnik korekty
::   WE: _a - określa dla których wartość F-bilansowych, P-podatkowych czy D-dodatkowych;
::       _b - określa w jakiej tabeli (ma to sens dla SRSR i SRDO)
::   WY: 0/1
::  OLD: \be_dpdl/metamo.fml
::----------------------------------------------------------------------------------------------------------------------
{? (1+($(_b+'.MF'+'().T'))()<>'D' & ($(_b+'.MF'))()<>null & _a='F')
   | (1+($(_b+'.MP'+'().T'))()<>'D' & ($(_b+'.MP'))()<>null & _a='P')
   | (1+($(_b+'.MD'+'().T'))()<>'D' & ($(_b+'.MD'))()<>null & _a='D')
|| 0
|| {? 1+($(_b+'.M'+_a+'().T'))()<>''
   || {? 1+($(_b+'.M'+_a+'().T'))()='D'
      || VAR.D:=SRSR.DE;
         s:={? _a='P' || ($(_b+'.STAP'))()
            |? _a='F' || ($(_b+'.STAF'))()
            |? _a='D' || ($(_b+'.STAD'))()
            ?};
         k:=($(_b+'.WK'+_a))();
         exec('dnal','fst')
      |? 1+($(_b+'.M'+_a+'().T'))()='L'
      || VAR.D:=SRSR.DE
      ?};
      {? SRSR.DE~1>=2000 || VAR.D:=date(VAR.D~1-1,1,1) ?}
   ?};
   {? SRSR.DE<>date(0,0,0) & VAR.D>SRSR.DE
   || ($(_b+'.DPL'+_a))():=VAR.D
   || ($(_b+'.DPL'+_a))():=date(0,0,0)
   ?};
   1
?}


\user
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca nazwę obszaru i użytkownika, dla pól z informacjami o modyfikacji rekordu
::   WY: nazwa obszaru i użytkownika
::----------------------------------------------------------------------------------------------------------------------
'FST: '+app_info('app_user')


\sch_sez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PJ] [8.70]
:: OPIS: ustawia pola zmiennej EDIT_ES wyswietlane w okienkach redagowania srodka,
::       a dotyczace sezonow amortyzacji na podstawie wskazanego ref-a schematu
::  OLD: \sch_sez/sezony.fml
::----------------------------------------------------------------------------------------------------------------------
SEZ.cntx_psh();
SEZ.prefix();
{? SEZ.seek(SRSR.SCH_SEZ)
|| EDIT_ES.M1:=SEZ.M1; EDIT_ES.M2:=SEZ.M2; EDIT_ES.M3:=SEZ.M3;
   EDIT_ES.M4:=SEZ.M4; EDIT_ES.M5:=SEZ.M5; EDIT_ES.M6:=SEZ.M6;
   EDIT_ES.M7:=SEZ.M7; EDIT_ES.M8:=SEZ.M8; EDIT_ES.M9:=SEZ.M9;
   EDIT_ES.M10:=SEZ.M10; EDIT_ES.M11:=SEZ.M11; EDIT_ES.M12:=SEZ.M12
|| FUN.emsg('Brak wskazanego schematu w bazie schematów aktywnych'
            '\n miesięcy dla środków amortyzowanych sezonowo.'@);
   exec('set_sez','fst','N')
?};
SEZ.cntx_pop()


\set_sez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PJ] [8.70]
:: OPIS: Ustawia pola zmiennej EDIT_ES wyswietlane w okienkach redagowania srodka,
::       a dotyczace sezonow amortyzacji
:    WE: _a - nowa wartość dla pól EDIT_ES.M?
::  OLD: \set_sez/sezony.fml
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.M1:=_a; EDIT_ES.M2:=_a; EDIT_ES.M3:=_a;
EDIT_ES.M4:=_a; EDIT_ES.M5:=_a; EDIT_ES.M6:=_a;
EDIT_ES.M7:=_a; EDIT_ES.M8:=_a; EDIT_ES.M9:=_a;
EDIT_ES.M10:=_a; EDIT_ES.M11:=_a; EDIT_ES.M12:=_a


\akt_sez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PJ] [8.70]
:: OPIS: aktualizuje pola zmiennej EDIT_ES wyswietlane w okienkach redagowania srodka,
::       a dotyczace sezonow amortyzacji
::  OLD: \akt_sez/sezony.fml
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.S='T'
|| {? SRSR.SCH_SEZ<>null
   || exec('sch_sez','fst')
   || exec('set_sez','fst','N')
   ?}
|| exec('set_sez','fst','')
?}


\find_okro_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyszukuje okres obrachunkowy dla podanej daty
::   WE: _a - data,
::       _b - 1 = sprawdzania czy jest dla obszaru w tabeli globalnej OKR_OBSG
::            0 = sprawdzania czy jest dla obszaru w tabeli OKR_OBSZ
::   WY: OKRO_F.ref()
::----------------------------------------------------------------------------------------------------------------------
{? _<2 || _b:=0 ?};
_ref:=null;
OKRO_F.cntx_psh();
OKRO_F.index('KON');
OKRO_F.prefix(REF.FIRMA);
{? OKRO_F.first()
|| {! |?
      {? _a>=OKRO_F.POCZ & _a<=OKRO_F.KON & ((_b=0 & exec('is_okro_fst','fst')) | (_b=1 & exec('gis_okro_fst','fst')))
      || _ref:=OKRO_F.ref();
         _dalej:=0
      || _dalej:=OKRO_F.next()
      ?};
      _dalej
   !}
?};
OKRO_F.cntx_pop();
_ref


\is_okro_fst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła sprawdza czy dla bieżącego lub podanego rekordu OKRO_F jest okres w obszarze FST
::   WE: [_a] - opcjonalnie okres obrachunkowy do sprawdznenia, jeśli nie podano to biezący OKRO_F
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? _=0 | type_of(_a)<>type_of(null) | _a=null || _a:=OKRO_F.ref() ?};
OKR_OBSZ.cntx_psh();
OKR_OBSZ.index('OKRO_F2');
OKR_OBSZ.prefix(SRD.FST,_a);
{? OKR_OBSZ.first() || _wy:=1 ?};
OKR_OBSZ.cntx_pop();
_wy


\gis_okro_fst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła sprawdza czy dla bieżącego lub podanego rekordu OKRO_F jest okres w obszarze FST
::       sprawdzanie globalne w tabeli OKR_OBSG
::   WE: [_a] - opcjonalnie okres obrachunkowy do sprawdznenia, jeśli nie podano to biezący OKRO_F
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? _=0 | type_of(_a)<>type_of(null) | _a=null || _a:=OKRO_F.ref() ?};
OKR_OBSG.cntx_psh();
OKR_OBSG.index('B_DOMAIN');
OKR_OBSG.prefix(REF.FIRMA,SRD.FST,_a);
{? OKR_OBSG.first() || _wy:=1 ?};
OKR_OBSG.cntx_pop();
_wy


\find_next_okro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyszukuje następny okres obrachunkowy w stosunku do podanego
::       z pominięciem BO/BZ, okres musi być aktywny w obszarze FST
::   WE: _a=OKRO_F.ROK, _b=OKRO_F.NR
::   WY: OKRO_F.ref() lub null
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
OKRO_F.cntx_psh();
OKRO_F.index('ROK');
OKRO_F.prefix();
{? OKRO_F.find_key(_a,_b)
|| {? OKRO_F.next()
   || _dalej:=0;
      {! |?
         {? OKRO_F.ROK().FIRMA=REF.FIRMA & OKRO_F.POCZ<>date(0,0,0) & exec('is_okro_fst','fst')
         || _ref:=OKRO_F.ref()
         || _dalej:=OKRO_F.next()
         ?};
         _ref=null & _dalej
      !}
   ?}
?};
OKRO_F.cntx_pop();
_ref


\find_prev_okro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyszukuje poprzedni okres obrachunkowy w stosunku do podanego
::       z pominięciem BO/BZ, okres musi być aktywny w obszarze FST i niezamknięty!
::   WE: _a=OKRO_F.ROK, _b=OKRO_F.NR, [_c]=1/0 - opcjonalnie, jeżeli 1 to zwraca także zamknięte okresy
::   WY: OKRO_F.ref() lub null
::----------------------------------------------------------------------------------------------------------------------
{? _<3 || _c:=0 ?};
_ref:=null;
OKRO_F.cntx_psh();
OKRO_F.index('ROK');
OKRO_F.prefix();
{? OKRO_F.find_key(_a,_b)
|| {? OKRO_F.prev()
   || _dalej:=0;
      {! |?
         {? OKRO_F.ROK().FIRMA=REF.FIRMA & OKRO_F.POCZ<>date(0,0,0) & exec('is_okro_fst','fst') & (_c | OKRO_F.AMOR='N')
         || _ref:=OKRO_F.ref()
         || _dalej:=OKRO_F.prev() & (_c | OKRO_F.AMOR='N')
         ?};
         _ref=null & _dalej
      !}
   ?}
?};
OKRO_F.cntx_pop();
_ref


\find_rok_by_okro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyszukuje rok okresu na podstawie podanego ref-u tabeli OKRO_F
::   WE: OKRO_F.ref()
::   WY: ROK_F.ref()
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
OKRO_F.cntx_psh();
OKRO_F.prefix();
{? OKRO_F.seek(_a) || _ref:=OKRO_F.ROK ?};
OKRO_F.cntx_pop();
_ref


\find_next_rok_o
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyszukuje pierwszy okres następnego chronologicznie roku w stosunku do podanego ref-u
::       tabeli ROK_F (w zakresie obszaru FST)
::   WE: ROK_F.ref()
::   WY: OKRO_F.ref()
::----------------------------------------------------------------------------------------------------------------------
_wy:=null;
{? _>0 & type_of(_a)=type_of(null)
|| ROK_F.cntx_psh();
   OKRO_F.cntx_psh();
   OKR_OBSZ.cntx_psh();
   ROK_F.index('ROKPOCZ');
   ROK_F.prefix(REF.FIRMA);
   {? ROK_F.seek(_a)
   || {? ROK_F.next()
      || OKRO_F.index('ROK');
         OKRO_F.prefix(ROK_F.ref(),1);
         {? OKRO_F.first()
         || OKR_OBSZ.index('OKRO_F2');
            _fst:=SRD.FST;
            OKR_OBSZ.prefix(_fst,OKRO_F.ref());
            {? OKR_OBSZ.first()
            || _wy:=OKRO_F.ref()
            ?}
         ?}
      ?}
   ?};
   OKR_OBSZ.cntx_pop();
   OKRO_F.cntx_pop();
   ROK_F.cntx_pop()
?};
_wy


\find_pocz_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyszukuje początek roku na podstawie podanego ref-u tabeli OKRO_F
::   WE: OKRO_F.ref()
::   WY: (date) - początek roku
::----------------------------------------------------------------------------------------------------------------------
_wy:=date(0,0,0);
OKRO_F.cntx_psh();
OKRO_F.prefix();
{? OKRO_F.seek(_a) || _wy:=OKRO_F.ROK().POCZ_ROK ?};
OKRO_F.cntx_pop();
_wy


\find_pocz_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyszukuje początek okresu na podstawie podanego ref-u tabeli OKRO_F
::   WE: OKRO_F.ref()
::   WY: (date) - początek okresu
::----------------------------------------------------------------------------------------------------------------------
_wy:=date(0,0,0);
OKRO_F.cntx_psh();
OKRO_F.prefix();
{? OKRO_F.seek(_a) || _wy:=OKRO_F.POCZ ?};
OKRO_F.cntx_pop();
_wy


\find_okro_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyszukuje nr okresu na podstawie podanego ref-u tabeli OKRO_F
::   WE: OKRO_F.ref()
::   WY: OKRO_F.NR
::----------------------------------------------------------------------------------------------------------------------
_wy:=-1;
OKRO_F.cntx_psh();
OKRO_F.prefix();
{? OKRO_F.seek(_a) || _wy:=OKRO_F.NR ?};
OKRO_F.cntx_pop();
_wy


\find_okro_podat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwarca numer okresu podatkowego na podstawie podanego ref-u tabeli OKRO_F
::   WE: OKRO_F.ref()
::   WY: OKRO_F.OES
::----------------------------------------------------------------------------------------------------------------------
_wy:=-1;
OKRO_F.cntx_psh();
OKRO_F.prefix();
{? OKRO_F.seek(_a) || _wy:=OKRO_F.OES ?};
OKRO_F.cntx_pop();
_wy


\find_rok_podat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwarca numer roku podatkowego na podstawie podanego ref-u tabeli OKRO_F
::   WE: OKRO_F.ref()
::   WY: OKRO_F.RES
::----------------------------------------------------------------------------------------------------------------------
_wy:=-1;
OKRO_F.cntx_psh();
OKRO_F.prefix();
{? OKRO_F.seek(_a) || _wy:=OKRO_F.RES ?};
OKRO_F.cntx_pop();
_wy


\first_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła sprawdza czy podany okres jest pierwszym okresem systemu
::   WE: OKRO_F.ref()
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
OKR_OBSZ.cntx_psh();
OKR_OBSZ.index('OBS_ROK');
_fst:=SRD.FST;
OKR_OBSZ.prefix(REF.FIRMA,_fst);
{? OKR_OBSZ.first()
|| OKRO_F.cntx_psh();
   ROK_F.cntx_psh();
   _ref_rok:=OKR_OBSZ.OKRO_F().ROK;
   OKRO_F.index('ROK');
   OKRO_F.prefix(_ref_rok);
   {? OKRO_F.first() & _a=OKRO_F.ref() || _wy:=1 ?};
   ROK_F.cntx_pop();
   OKRO_F.cntx_pop()
?};
OKR_OBSZ.cntx_pop();
_wy


\first_obsz_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca pierwszy okres systemu w ramach obszaru FST
::   WY: OKRO_F.ref()
::----------------------------------------------------------------------------------------------------------------------
_wy:=null;
OKR_OBSZ.cntx_psh();
OKR_OBSZ.index('OBS_ROK');
_fst:=SRD.FST;
OKR_OBSZ.prefix(REF.FIRMA,_fst);
{? OKR_OBSZ.first()
|| OKRO_F.cntx_psh();
   ROK_F.cntx_psh();
   _ref_rok:=OKR_OBSZ.OKRO_F().ROK;
   OKRO_F.index('ROK');
   OKRO_F.prefix(_ref_rok);
   {? OKRO_F.first() || _wy:=OKRO_F.ref() ?};
   ROK_F.cntx_pop();
   OKRO_F.cntx_pop()
?};
OKR_OBSZ.cntx_pop();
_wy


\last_okr_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca ostatni okres systemu w ramach obszaru FST, który zawiera dane w rejestrze stanu
::   WY: OKRO_F.ref()
::----------------------------------------------------------------------------------------------------------------------
_wy:=null;
OKR_OBSZ.cntx_psh();
OKR_OBSZ.index('OBS_ROK');
_fst:=SRD.FST;
OKR_OBSZ.prefix(REF.FIRMA,_fst);
{? OKR_OBSZ.last()
|| OKRO_F.cntx_psh();
   ROK_F.cntx_psh();
   _last:=OKR_OBSZ.OKRO_F;
   OKRO_F.index('SRODKI');
   OKRO_F.prefix(REF.FIRMA);
   {? _last & OKRO_F.seek(_last)
   || {! |?
         SRST.cntx_psh();
         SRST.index('OKR_O_W');
         SRST.prefix(OKRO_F.ref());
         {? SRST.first() || _wy:=SRST.OKRO_F ?};
         SRST.cntx_pop();
         _wy=null & OKRO_F.prev()
      !}
   ?};
   ROK_F.cntx_pop();
   OKRO_F.cntx_pop()
?};
OKR_OBSZ.cntx_pop();
_wy


\first_okr_podat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca pierwszy rok podatkowy systemu w ramach obszaru FST
::   WY: INT - rok podatkowy
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
OKR_OBSZ.cntx_psh();
OKR_OBSZ.index('OBS_ROK');
_fst:=SRD.FST;
OKR_OBSZ.prefix(REF.FIRMA,_fst);
{? OKR_OBSZ.first()
|| OKRO_F.cntx_psh();
   ROK_F.cntx_psh();
   _ref_rok:=OKR_OBSZ.OKRO_F().ROK;
   OKRO_F.index('ROK');
   OKRO_F.prefix(_ref_rok);
   {? OKRO_F.first() || _wy:=OKRO_F.RES ?};
   ROK_F.cntx_pop();
   OKRO_F.cntx_pop()
?};
OKR_OBSZ.cntx_pop();
_wy


\last_okr_podat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca ostatni rok podatkowy systemu w ramach obszaru FST
::   WY: INT - rok podatkowy
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
OKR_OBSZ.cntx_psh();
OKR_OBSZ.index('OBS_ROK');
_fst:=SRD.FST;
OKR_OBSZ.prefix(REF.FIRMA,_fst);
{? OKR_OBSZ.last()
|| OKRO_F.cntx_psh();
   ROK_F.cntx_psh();
   _ref_rok:=OKR_OBSZ.OKRO_F().ROK;
   OKRO_F.index('ROK');
   OKRO_F.prefix(_ref_rok);
   {? OKRO_F.last() || _wy:=OKRO_F.RES ?};
   ROK_F.cntx_pop();
   OKRO_F.cntx_pop()
?};
OKR_OBSZ.cntx_pop();
_wy


\first_rok_pocz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca początek pierwszego roku systemu w ramach obszaru FST
::   WY: DATA
::----------------------------------------------------------------------------------------------------------------------
_wy:=date(0,0,0);
OKR_OBSZ.cntx_psh();
OKR_OBSZ.index('OBS_ROK');
_fst:=SRD.FST;
OKR_OBSZ.prefix(REF.FIRMA,_fst);
{? OKR_OBSZ.first()
|| OKRO_F.cntx_psh();
   ROK_F.cntx_psh();
   _wy:=OKR_OBSZ.OKRO_F().ROK().POCZ_ROK;
   ROK_F.cntx_pop();
   OKRO_F.cntx_pop()
?};
OKR_OBSZ.cntx_pop();
_wy


\find_state
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyszukuje rekord stanu
::   WE: a_ ref środka (SRSR), b - ref roku (ROK_F.ref), _c - ref okres (OKRO_F.ref)
::   WY: SRST.ref()
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
SRST.cntx_psh();
SRST.index('SROD');
SRST.prefix(_a,_b,_c);
{? SRST.first() || _ref:=SRST.ref() ?};
SRST.cntx_pop();
_ref


\srsr_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyświetla listę wszystkich środków zarejestrowanych w systemie, z danymi pierwotnymi
::----------------------------------------------------------------------------------------------------------------------
SRSR.cntx_psh();
{? SRSR.name()<>'srsr'+'r'+REF.FIRMA().SYMBOL
|| SRSR.use('srsr'+'r'+REF.FIRMA().SYMBOL)
?};

{? OPERATOR.DEPT=null
|| SRSR.index('NRI');
   SRSR.prefix('S')
|| SRSR.index('NRI_O');
   SRSR.prefix(OPERATOR.DEPT,'S')
?};
_win:=SRSR.mk_sel('Środki'@,'P',,'_srsr_sel',5,5,20,,'U');
SRSR.win_fld(_win,SRSR,'NRI',,,15,,,'Numer'@);
SRSR.win_fld(_win,SRSR,'NST',,,25,,,'Nazwa'@);
SRSR.win_fld(_win,SRSR,'ODD','OD',,10,,,'J. księgowa'@);
SRSR.win_fld(_win,SRSR,'OSOBA','NAZWISKO',,15,,,'Użytkownik'@);
SRSR.win_fld(_win,SRSR,'DE',,,10,,,'Data eksploatacji'@);
SRSR.win_fld(_win,SRSR,'OKRO_F','NAZ',,12,,,'Okres wprow.'@);
SRSR.win_fld(_win,SRSR,'ROK_F','NAZ',,6,,,'Rok wprow.'@);
SRSR.win_fld(_win,SRSR,'WARP',,,12,2,,'Wartość (P)'@);
SRSR.win_fld(_win,SRSR,'WARF',,,12,2,,'Wartość (F)'@);
SRSR.win_sel(_win);
SRSR.select();
SRSR.cntx_pop()


\srdo_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Edycja dokumentów dla środków
::----------------------------------------------------------------------------------------------------------------------
SRDO.get();
{? SRDO.K='T'
|| FUN.emsg('Bieżący dokument został już zaksiegowany i nie można go modyfikować.'@);
   return(0)
?};
{? SRDO.TYP().TYP<>'OT'
|| {? SRDO.SRSR().BENEFIT='T'
   || FUN.emsg('Środek trwały związany z bieżącym dokumentem jest benefitem i nie można go modyfikować.'@);
   return(0)
   ?}
?};

{? SRDO.TYP().RODZ='W'
|| exec('m_drdf','fst','popraw')
|? SRDO.TYP().RODZ='L' | SRDO.TYP().RODZ='D'
|| exec('m_drdz','fst','popraw')
|? SRDO.TYP().RODZ='M'
|| exec('m_drdm','fst','popraw')
|? SRDO.TYP().RODZ='I'
|| exec('m_drdk','fst','popraw')
|? SRDO.TYP().RODZ='P'
|| exec('m_drda','fst','popraw')
?}


\srdo_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Usuwanie dokumentów dla środków
::----------------------------------------------------------------------------------------------------------------------
SRDO.get();
{? SRDO.K='T'
|| FUN.emsg('Bieżący dokument został już zaksiegowany i nie można go modyfikować.'@);
   return(0)
?};
{? SRDO.SRSR_E<>null & SRSR.ref()<>SRDO.SRSR_E
|| FUN.emsg('Nie można usuwać i modyfikować dokumentów wartościowych dla elementów zestawu środków.\n'
            'Dane tego typu są oddzielne dla elementów zestawu dlatego taki dokument należy\n'
            'usuwać na poziomie elementu składowego.'@);
   return(0)
?};
OKRO_F.cntx_psh();
_okres:=exec('find_okro_f','fst',SRDO.DW);
OKRO_F.seek(_okres);
{? OKRO_F.AMOR='T'
|| FUN.info('Okres (%1 %2), w którym wystawiono dokument jest zamknięty w obszarze FST.'@[OKRO_F.NAZ,OKRO_F.ROK().NAZ]);
   OKRO_F.cntx_pop();
   return(0)
?};
OKRO_F.cntx_pop();
{? SRDO.TYP().RODZ='W'
|| exec('m_drdf','fst','usuń')
|? SRDO.TYP().RODZ='L' | SRDO.TYP().RODZ='D'
|| exec('m_drdz','fst','usuń')
|? SRDO.TYP().RODZ='M'
|| exec('m_drdm','fst','usuń')
|? SRDO.TYP().RODZ='I'
|| exec('m_drdk','fst','usuń')
|? SRDO.TYP().RODZ='P'
|| exec('m_drda','fst','usuń')
?}


\dok_show_drdf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wyświetlanie dokumentu
::----------------------------------------------------------------------------------------------------------------------
_tmp:=EDIT_ES.RODZ;
EDIT_ES.RODZ:='W';
:: jeżeli dokument zbycia w grupie kapitałowej to specjalna obsługa
{? SRDO.TYP().P='S' || SRDO.win_edit('RED_WS') || SRDO.win_edit('RED_W') ?};
exec('set_field','fst',1);
SRDO.display();
EDIT_ES.RODZ:=_tmp


\set_field_drdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Ustawia dostępność pól w oknie dokumentu zgodnie z definicją typu
::----------------------------------------------------------------------------------------------------------------------
{? SRDO.TYP().NRI='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'NRI');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'NRI');
{? SRDO.TYP().NST='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'NST');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'NST');
{? SRDO.TYP().JORG='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,EDIT_ES, 'JORG');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'JORG');
{? SRDO.TYP().JORG='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'ODD');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'ODD');
{? SRDO.TYP().OSOBA='N'
|| _enable:=0;
   SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'OSOBA');
   SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'OSOBA');
   SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,EDIT_ES, 'PRCNAZ');
   SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'PRCD');
   SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,EDIT_ES, 'STNAZ');
   SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'PSTN')
|| {? SRDO.SRSR().BENEFIT='T' || _enable:=1 || _enable:=0 ?};
   SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable, EDIT_ES, 'PRCNAZ');
   SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable, EDIT_ES, 'STNAZ');
   SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable, EDIT_ES, 'WYDZNAZ');
   SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable, SRDO_POM, 'PRCD');
   SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable, SRDO_POM, 'PSTN');
   SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable, SRDO_POM, 'PWYD');
   SRDO.efld_opt(SRDO.win_edit('?'), 'enable=1,editable='+$~_enable,, 'OSOBA')
?};
{? SRDO.TYP().POM='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'POM');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'POM');
{? SRDO.TYP().KONPOD='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'KONPOD');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'KONPOD');
{? SRDO.TYP().KONFIN='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'KONFIN');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'KONFIN');
{? SRDO.TYP().GR='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'GR');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'GR');
{? SRDO.TYP().R='T' || _enable:=1 || _enable:=0 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'R');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'R');
{? FINFO.TOR_D='N'
|| _enable:=0
|| {? SRDO.TYP().KONDOD='N' || _enable:=0 || _enable:=1 ?}
?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'KONDOD');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'KONDOD');
1


\dok_show_drdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wywietlanie dokumentu zmiany właściwości
::----------------------------------------------------------------------------------------------------------------------
_tmp:=EDIT_ES.RODZ;
{? SRDO.win_sel('?')='WER_D'
|| EDIT_ES.RODZ:='D'
|| EDIT_ES.RODZ:='L'
?};
OSOBA.win_sel('SLO');
ZASOB_ZM.cntx_psh();
ZASOB_ZM.index('SRDO_Z');
ZASOB_ZM.prefix(SRDO.ref());
{? ZASOB_ZM.first() || SRDO.win_edit('RED_L_ZS') || SRDO.win_edit('RED_L') ?};
ZASOB_ZM.cntx_pop();
{? SRDO.JORG<>null
|| EDIT_ES.JORG:=SRDO.JORG().SYMBOL
|| EDIT_ES.JORG:=''
?};
exec('set_srdo_pom','fst2');
exec('set_field_drdz','fst');
SRDO.display();
EDIT_ES.RODZ:=_tmp


\dok_show_drdm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wyświetlanie dokumentu
::----------------------------------------------------------------------------------------------------------------------
_tmp:=EDIT_ES.RODZ;
EDIT_ES.RODZ:='M';
SRDO.win_edit('RED_M');
exec('set_srdo_pom','fst2');
exec('set_field_drdm','fst');
SRDO.display();
EDIT_ES.RODZ:=_tmp


\set_field_drdm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Ustawia dostępność pól w oknie dokumentu zgodnie z definicją typu
::----------------------------------------------------------------------------------------------------------------------
{? SRDO.TYP().MP='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'MP');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'DPLP');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'MP');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'DPLP');
{? SRDO.TYP().STAP='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'STAP');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'STAP');
{? SRDO.TYP().WKP='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'WKP');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'WKP');

{? SRDO.TYP().MF='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'MF');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'DPLF');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'MB');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'DPLF');
{? SRDO.TYP().STAF='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'STAF');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'STAB');
{? SRDO.TYP().WKF='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'WKF');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'WKF');

{? FINFO.TOR_D='N'
|| _enable:=0
|| {? SRDO.TYP().MD='N' || _enable:=0 || _enable:=1 ?}
?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'MD');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'DPLD');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'MD');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'DPLD');
{? FINFO.TOR_D='N'
|| _enable:=0
|| {? SRDO.TYP().STAD='N' || _enable:=0 || _enable:=1 ?}
?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'STAD');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'STAD');
{? FINFO.TOR_D='N'
|| _enable:=0
|| {? SRDO.TYP().WKD='N' || _enable:=0 || _enable:=1 ?}
?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'WKD');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'WKD');
1


\dok_show_drdk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wyświetlanie dokumentu
::----------------------------------------------------------------------------------------------------------------------
_tmp:=EDIT_ES.RODZ;
EDIT_ES.RODZ:='I';
SRDO.win_edit('RED_I');
exec('set_srdo_pom','fst2');
exec('set_field_drdk','fst');
SRDO.display();
EDIT_ES.RODZ:=_tmp


\set_field_drdk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Ustawia dostępność pól w oknie dokumentu zgodnie z definicją typu
::----------------------------------------------------------------------------------------------------------------------
{? SRDO.TYP().ULWK='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'ULWK');
{? SRDO.TYP().SEZONOWY='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'SEZ');
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,SRDO_POM, 'SEZ');
{? SRDO.SEZ='N'
|| SRDO.efld_opt(SRDO.win_edit('?'), 'editable=grayed',, 'SCH_SEZ');
   SRDO.efld_opt(SRDO.win_edit('?'), 'editable=grayed',, 'SCH_SEZ')
?};
1


\dok_show_drda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wyświetlanie dokumentu
::----------------------------------------------------------------------------------------------------------------------
SRDO.win_edit('RED_P');
_tmp:=EDIT_ES.RODZ;
EDIT_ES.DOK_ZAK:=exec('symb_fz','fst',1);
EDIT_ES.RODZ:='P';
SRDO.display();
EDIT_ES.DOK_ZAK:='';
EDIT_ES.RODZ:=_tmp


\srdo_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wyświetlanie dokumentów dla środków
::----------------------------------------------------------------------------------------------------------------------
{? SRDO.TYP().RODZ='W'
|| exec('dok_show_drdf','fst')
|? SRDO.TYP().RODZ='L' | SRDO.TYP().RODZ='D'
|| exec('dok_show_drdz','fst')
|? SRDO.TYP().RODZ='M'
|| exec('dok_show_drdm','fst')
|? SRDO.TYP().RODZ='I'
|| exec('dok_show_drdk','fst')
|? SRDO.TYP().RODZ='P'
|| exec('dok_show_drda','fst')
?}


\bl_srdo_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na wartość początkową pola SRDO.RODZ
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZ


\symdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: formuła do nadawania symbolu dokumentom
::  OLD: \symdok/doku_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? SRDO.TYP().RODZ_NUM<>'N'
|| SRDO.TYP().TYP+'-'+$SRDO.NR+'/'+$SRDO.ROK
|| {? SRDO.SYMBOL='' | SRDO.TYP().AKT_SYM='T' || ($(SRDO.TYP().FORM_SYM))() || SRDO.SYMBOL ?}
?}


\bl_srdo_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na wartość początkową pola SRDO.TYP
::----------------------------------------------------------------------------------------------------------------------
SRDT.ref()


\bl_srdo_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na wartość początkową pola SRDO.NR
::   WE: [_a] - dotychczasowy numer
::----------------------------------------------------------------------------------------------------------------------
SRDO.cntx_psh();
SRDO.index('NUMER');
{? SRDO.ROK=0 || SRDO.ROK:=exec('bl_srdo_rok','fst') ?};
SRDO.prefix(SRDO.ROK,SRDO.TYP,SRDO.ODD_DOK);
{? SRDO.last() || _nr:=SRDO.NR+1 || _nr:=1 ?};
SRDO.cntx_pop();
{? _>0 & _nr=_a || _nr+=1 ?};
_nr


\bl_srdo_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na wartość początkową pola SRDO.AR
::----------------------------------------------------------------------------------------------------------------------
{? 5+SRDO.name()='srdor'
|| SSTALE.AO().RES
|| SRSP.OD
?}


\be_srdo_symbol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redakcją pola SRDO.SYMBOL
::----------------------------------------------------------------------------------------------------------------------
{? SRDO.SYMBOL=''
|| SRDO.SYMBOL:=exec('symdok','fst');
   1
|| 1
?}


\bl_srdo_srsr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na wartość początkową pola SRDO.SRSR
::----------------------------------------------------------------------------------------------------------------------
SRSR.ref()


\bl_srdo_dw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na wartość początkową pola SRDO.DW
::----------------------------------------------------------------------------------------------------------------------
{? SRDO.SRSR<>null & SSTALE.AO().POCZ<SRDO.SRSR().DE || SRDO.SRSR().DE || SSTALE.AO().POCZ ?}


\ae_srdo_dw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redakcji pola SRDO.DW
::----------------------------------------------------------------------------------------------------------------------
_wy:=1;
{? SRDO.DW<>date(0,0,0)
|| _maska:=1+(4-SRDO.name());
:: dla dokumentów w planach uaktualnienie symbolu
   {? _maska<>'r'
   || {? SRDO.DW<>date(0,0,0) & SRDO.DW~1<>SRDO.ROK
      || SRDO.ROK:=SRDO.DW~1;
         SRDO.OKRES:=SRDO.DW~2;
         SRDO.NR:=exec('bl_srdo_nr','fst',SRDO.NR)
      ?};
      _sym:=exec('symdok','fst');
      {? _sym<>SRDO.SYMBOL || SRDO.SYMBOL:=_sym ?}
   ?};
   {? SRDO.DW<SRSR.DE
   || FUN.emsg('Data wystawienia nie może być wcześniejsza niż data wprowadzenia\n środka do eksploatacji (%1).'@[$SRSR.DE]);
      _wy:=0
   |? _maska='r' & (SRDO.DW<SSTALE.AO().ROK().POCZ_ROK | SRDO.DW>SSTALE.AO().ROK().KON_ROK)
   || FUN.emsg('Data wystawienia dokumentu (%1) poza zakresem bieżącego roku obrachunkowego\n'
               '(%2 - %3)'@[$SRDO.DW,$SSTALE.AO().ROK().POCZ_ROK,$SSTALE.AO().ROK().KON_ROK]);
      _wy:=0
   ?};
   {? _wy & SRDO.DO=date(0,0,0)
   || SRDO.DO:=SRDO.DW
   ?}
?};
_wy


\be_srdo_do
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redakcją pola SRDO.DO
::----------------------------------------------------------------------------------------------------------------------
{? SRDO.DO=date(0,0,0) & SRDO.DW<>date(0,0,0)
||
::   _reff:=exec('find_okro_f','fst',SRDO.DW);
::   _nr:=exec('find_okro_nr','fst',_reff);
::   _rok:=exec('find_rok_by_okro','fst',_reff);
::   _ref:=exec('find_next_okro','fst',_rok,_nr);
::   {? _ref
::   || SRDO.DO:=exec('find_pocz_okr','fst',_ref)
::   || FUN.emsg('Dla podane daty wystawienia nie można odnaleźć kolejnego okresu w obszarze Środków trwałych.\n'
::               'Data obowiązywania dokumentu nie może pochodzić z kolejnego okresu, przyjęto datę obowiązywania\n'
::               'równą dacie wystawienia dokumentu.'@);
      SRDO.DO:=SRDO.DW
::   ?}
?};
exec('be_srdo_do','fst_ext');
win_disp();
1


\ae_srdo_do
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redakcji pola SRDO.DO
::----------------------------------------------------------------------------------------------------------------------
_wy:=1;
{? SRDO.TYP().RODZ<>'P' & SRDO.DO<>date(0,0,0)
|| {? SRDO.DO<SRSR.DE
   || FUN.emsg('Data obowiązywania nie może być wcześniejsza niż data wprowadzenia\n środka do eksploatacji ('
               '%1).'@[$SRSR.DE]);
      _wy:=0
   |? exec('not_plan','fst',SRDO.name()) & SRDO.DO<SSTALE.AO().ROK().POCZ_ROK
   || FUN.emsg('Data obowiązywania nie może być wcześniejsza niż początek bieżącego roku (%1).'@[$SSTALE.AO().ROK().POCZ_ROK]);
      _wy:=0
   || {? exec('not_plan','fst',SRDO.name())
      || _ref:=exec('find_okro_f','fst',SRDO.DO);
         EDIT_ES.OKRO_F:=exec('find_okro_f','fst',SRDO.DO);
         _ref_n:=EDIT_ES.OKRO_F:=exec('find_next_okro','fst',EDIT_ES.OKRO_F().ROK,EDIT_ES.OKRO_F().NR);
         {? _ref
         || {? SRDO.TYP().RODZ='I' & SRDO.TYP().SEZONOWY='T' & (SRDO.OKRO_F=null | (_ref<>null & SRDO.OKRO_F<>_ref))
            || SRDO.OKRO_F:=_ref;
               SRDO.ROK_F:=SRDO.OKRO_F().ROK
            |? SRDO.OKRO_F=null() | ((_ref<>null & SRDO.OKRO_F<>_ref) & (_ref_n<>null & SRDO.OKRO_F<>_ref_n))
            || {? _ref<>null || SRDO.OKRO_F:=_ref_n || SRDO.OKRO_F:=_ref ?};
               SRDO.ROK_F:=SRDO.OKRO_F().ROK
            ?}
         || FUN.emsg('Nie znaleziono aktywnego okresu obrachunkowego w obszarze FST dla podanej daty.'@);
            _wy:=0
         ?}
      || SRDO.ROK:=SRDO.DO~1;
         SRDO.OKRES:=SRDO.DO~2;
:: dla dokumentów w planach uaktualnienie symbolu
         _sym:=exec('symdok','fst');
         {? _sym<>SRDO.SYMBOL || SRDO.SYMBOL:=_sym ?}
      ?}
   ?}
?};
{? SRDO.OKRO_F<>null || exec('ae_srdo_okr','fst') ?};
_wy


\ae_srdo_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redakcji pola SRDO.OKRO_F
::----------------------------------------------------------------------------------------------------------------------
{? (SRDO.TYP().P='-' | SRDO.TYP().P='S') & ~SRD.isSet()
|| exec('set_field_wart','fst')
?};
{? SRDO.OKRO_F<>null
|| SRDO.ROK_F:=SRDO.OKRO_F().ROK;
   SRDO.OKRES:=SRDO.OKRO_F().OES;
   SRST.cntx_psh();
   SRST.index('SROD');
   SRST.prefix();
   {? SRDO.RODZ='I' | SRDO.RODZ='L' | SRDO.RODZ='M'
   || {? SRDO_POM.EDIT='T' || exec('set_srdo_pom','fst2') || exec('set_srdo_pom','fst2',SRDO.ROK_F,SRDO.OKRO_F) ?}
   || SRST.find_key(SRDO.SRSR,SRDO.ROK_F,SRDO.OKRO_F)
   ?};
   {? SRDO.ODD_DOK<>SRST.ODD
      || SRDO.ODD_DOK:=SRST.ODD
   ?};
   _tmp:=exec('bl_srdo_nr','fst');
   {? menu_txt()<>'Popraw' & menu_txt()<>'Grupowa zmiana miejsca' & SRDO.NR<>0 & SRDO.NR<>_tmp
   || {? SRDO.win_edit('?')<>'RED_LT_G' & SRDO.win_edit('?')<>'RED_M_GR' &
         FUN.ask('Wprowadzony numer dokumentu nie jest kolejnym numerem w roku podatkowym.\n'
                 'Zastąpić bieżący numer i symbol wygenerowanym przez system?'@)
      || SRDO.NR:=_tmp;
         SRDO.SYMBOL:=exec('symdok','fst')
      ?}
   |? SRDO.NR=0
   || SRDO.NR:=_tmp;
      SRDO.SYMBOL:=exec('symdok','fst')
   ?};
   SRST.cntx_pop()
?};
{? EDIT_ES.PRCNAZ='' & var_press('rek')<0
|| P.ST:=null();
   P.WYDZIAL:=null()
?};

1


\set_field_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Ustawia wartość pól w oknie dokumentu rozchodowego likwidacyjnego zgodnie z definicją typu
::----------------------------------------------------------------------------------------------------------------------
SRST.cntx_psh();
SRST.index('SROD');
SRST.prefix(SRST.SRSR);
{? SRST.find_key(SRDO.ROK_F,SRDO.OKRO_F)
|| {? SRDO.OKRO_F=SRST.SRSR().OKRO_F
   || {? SRDO.TYP().WARP='T' || SRDO.WARP:=-SRST.WARP ?};
      {? SRDO.TYP().WARF='T' || SRDO.WARF:=-SRST.WARF ?};
      {? SRDO.TYP().UMOP='T' || SRDO.UMOP:=0 ?};
      {? SRDO.TYP().UMOF='T' || SRDO.UMOF:=0 ?};
      {? FINFO.TOR_D='T'
      || {? SRDO.TYP().WARD='T' || SRDO.WARD:=-SRST.WARD ?};
         {? SRDO.TYP().UMOD='T' || SRDO.UMOD:=0 ?}
      ?};
      {? SRDO.TYP().P='S' & SRDO.TYP().WART_ZB='T'
      || SRDO.WARSP_P:=SRST.WARP;
         SRDO.WARSP_F:=SRST.WARF;
         {? FINFO.TOR_D='T' || SRDO.WARSP_D:=SRST.WARD ?}
      ?}
   || SRST.prev();
      {? SRDO.TYP().WARP='T' || SRDO.WARP:=-SRST.WARP ?};
      {? SRDO.TYP().WARF='T' || SRDO.WARF:=-SRST.WARF ?};
      {? SRDO.TYP().UMOP='T' || SRDO.UMOP:=-SRST.UMOP ?};
      {? SRDO.TYP().UMOF='T' || SRDO.UMOF:=-SRST.UMOF ?};
      {? FINFO.TOR_D='T'
      || {? SRDO.TYP().WARD='T' || SRDO.WARD:=-SRST.WARD ?};
         {? SRDO.TYP().UMOD='T' || SRDO.UMOD:=-SRST.UMOD ?}
      ?};
      {? SRST.MP().PDM='T' & SRDO.Z='T' & SRDO.OKRO_F().POCZ>SRDO.DO
:: przy likwidacji specjalna obsługa dla amortyzacji uwzględniającej dni
      || _dni:=SRST.OKRO_F().KON~3;
         _dzien:=SRDO.DO~3;
         {? _dni>0
         || _pdm:=(_dzien/_dni);
            _amop:=(SRST.AMOP*_pdm); _korp:=SRST.AMOP-_amop;
            _amof:=(SRST.AMOF*_pdm); _korf:=SRST.AMOF-_amof;
            {? FINFO.TOR_D='T'
            || _amod:=(SRST.AMOD*_pdm);
               _kord:=SRST.AMOD-_amod
            ?};
            {? SRDO.TYP().UMOP='T' || SRDO.UMOP:=(SRDO.UMOP+_korp)$FINFO.DOKL ?};
            {? SRDO.TYP().UMOF='T' || SRDO.UMOF:=(SRDO.UMOF+_korf)$FINFO.DOKL ?};
            {? FINFO.TOR_D='T'
            || {? SRDO.TYP().UMOD='T' || SRDO.UMOD:=(SRDO.UMOD+_kord)$FINFO.DOKL ?}
            ?}
         ?}
      ?};
      {? SRDO.TYP().P='S' & SRDO.TYP().WART_ZB='T'
      || SRDO.WARSP_P:=SRST.WARP;
         SRDO.WARSP_F:=SRST.WARF;
         {? FINFO.TOR_D='T' || SRDO.WARSP_D:=SRST.WARD ?}
      ?}
   ?}
?};
SRST.cntx_pop()


\bl_srsr_rodzaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na wartość początkową pola SRSR.R
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.R


\srsr_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Fommuła wyświetla listę wzystkich środków (trwałych lub niskocennych) z wartościami pierwotnymi
::----------------------------------------------------------------------------------------------------------------------
SRSR.cntx_psh();
SRSR.index('RNRI_O');
{? OPERATOR.DEPT<>null
|| SRSR.prefix(EDIT_ES.R,OPERATOR.DEPT)
|| SRSR.prefix(EDIT_ES.R)
?};
{? FINFO.SPR_GRP='T' || SRSR.win_sel('WER_S') || SRSR.win_sel('WER') ?};
SRSR.hdr_sel();
{? EDIT_ES.R='T'
|| SRSR.hdr_sel(' trwałych'@)
|? EDIT_ES.R='N'
|| SRSR.hdr_sel(' niskocennych'@)
?};
SRSR.win_patt('SZUKAJ');
SRSR.select();
SRSR.hdr_sel();
SRSR.cntx_pop();
1


\okr_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła sprawdza czy są dozwolone modyfikacje w bieżącym okresie
::   WE: [_a] - okres do sprawdzenia (OKRO_F.ref()) lub bieżący okres jeżeli brak parametru
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
OKRO_F.cntx_psh();
{? _>0 & type_of(_a)=type_of(null) & _a<>null
|| OKRO_F.prefix();
   {? OKRO_F.seek(_a)
   || _amor:=OKRO_F.AMOR;
      _okr_naz:=OKRO_F.NAZ;
      _rok_naz:=OKRO_F.ROK().NAZ;
      _okr_pocz:=OKRO_F.POCZ;
      _okr_prok:=OKRO_F.ROK().POCZ_ROK;
      _ref:=OKRO_F.ref()
   ?}
|| _amor:=SSTALE.AO().AMOR;
   _okr_naz:=SSTALE.AO().NAZ;
   _rok_naz:=SSTALE.AO().ROK().NAZ;
   _okr_pocz:=SSTALE.AO().POCZ;
   _okr_prok:=SSTALE.AR().POCZ_ROK;
   _ref:=SSTALE.AO
?};
OKRO_F.cntx_pop();
{? _ref=null
|| FUN.emsg('Nieprawidłowy parametr formuły lub brak ustawienia okresu w parametrach pracy.'@);
   return(0)
?};

{? _amor='T'
|| FUN.info('Okres (%1 %2) jest zamknięty w obszarze FST.'@[_okr_naz,_rok_naz]);
   0
||
:: test czy dowolny z późniejszych okresów nie jest zamknięty w obszarze FST
   {? _okr_pocz=date(0,0,0)
   || _date:=_okr_prok
   || _date:=_okr_pocz
   ?};
   _find:=0;
   _nazwa:='';
   OKRO_F.cntx_psh();
   OKRO_F.index('SRODKI');
   OKRO_F.prefix(REF.FIRMA);
   {? OKRO_F.seek(_ref)
   || _licznik:=0;
      {! |?
         {? OKRO_F.AMOR='T' || _find:=1; _nazwa:=OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ ?};
         _licznik+=1;
         _find=0 & _licznik<=3 & OKRO_F.next()
      !}
   ?};
   OKRO_F.cntx_pop();
   {? ~_find
   || 1
   || FUN.info('Jeden z późniejszych okresów (%1) jest już zamknięty w obszarze FST.'@[_nazwa]);
      0
   ?}
?}


\skladowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed obsługą zakładki elementów składowych
::   WE: [_a] - jeżeli _a i _a<>'' to wyświetalnie okna z aktywnym bieżącym rekdorem zamiast pierwszego
::----------------------------------------------------------------------------------------------------------------------
{? SRST.GRP<>'T'
|| FUN.emsg('Funkcja dostępna jest dla zestawów środków.'@);
   return(0)
?};
_sel:=SRST.win_sel('?');
_doc:=EDIT_ES.RODZ;
EDIT_ES.RODZ:='W';
SRSR.cntx_psh();
SRST.cntx_psh();
SRST.index('TREE');
{? EDIT_ES.TSK<>'T'
|| SRST.prefix(SRST.R,EDIT_ES.SRST().OKRO_F,EDIT_ES.SRST().ODD,EDIT_ES.SRST)
|| SRST.prefix(TST.R,TST.SRST().OKRO_F,EDIT_ES.SRST().ODD,TST.SRST)
?};

_title:='Kartoteka elementów składowych'@;
_wer:=SRST.grp_make(_title,,'srst_wer_e');
_okno:={? EDIT_ES.R='' || 'WER_UE' |? EDIT_ES.R='T' || 'WER_E' |? EDIT_ES.R='N' || 'WER_N_E' ?};
_form:="exec('dok_wer_w','fst');grp_disp(SRDO,'WER_W');exec('dok_wer_p','fst');grp_disp(SRDO,'WER_P')";
SRST.grp_sel(_wer,SRST,_okno,,_form,,,18,"",,,,'maximized');
SRST.grp_splt(_wer,,'horizontal','tab2',24);
SRST.grp_sel(_wer,SRDO,'WER_W','Dokumenty wartościowe'@,"",,,6,"exec('dok_wer_w','fst')",,,,'maximized');
task_attach('FST_EWI_DRDF');
SRST.grp_sel(_wer,SRDO,'WER_P','Dokument przyjęcia'@,"",,,6,"exec('dok_wer_p','fst')",,,,'maximized');
task_attach('FST_EWI_DRDA');

SRST.win_sel(_wer);
SRST.hdr_sel();
SRST.hdr_sel(' %1 - %2'@[SRST.NRI,SRSR.NST]);
__SRST_E:='WER_E';
{? _>0 & _a<>''
||
:: obsługa linku
   SRST.seek(_a,SRST.name());
   SRST.select(,1)
|| SRST.select()
?};
__SRST_E:='';
SRST.cntx_pop();
SRSR.cntx_pop();
EDIT_ES.RODZ:=_doc;
SRST.win_sel(_sel)


\dok_wer_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed obsługą zakładki dokumentów wszystkich
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(208)='N'
|| _tmp:='N'
|| _tmp:=''
?};
EDIT_ES.RODZ:='';
SRDO.index('SRDO');
{? SRST.GRP='E'
|| SRDO.index('SRDOE');
   _root:=exec('get_srsr_root','fst',SRSR.ref())
|| SRDO.index('SRDO');
   _root:=SRSR.ref()
?};
{? EDIT_ES.TSK<>'T'
|| {? SRST.size()>0 & (SRST.f_active=0 | (SRST.f_active>0 & SRST.f_size>0))
   || {? SRST.GRP='E' || SRDO.prefix(_root, SRSR.ref()) || SRDO.prefix(_root) ?};
      {? SSTALE.AO().POCZ=date(0,0,0) & SSTALE.AO().KON=date(0,0,0)
      || _first:=exec('first_okr','fst',SSTALE.AO);
         {? ~_first
         || _hid:='D:D';
            {? SRDO.size()>0 || _hid:='DPU:D' ?}
         || _hid:=''
         ?}
      || _hid:=''
      ?};
      {? _hid=''
      || SRDO.btn_sopt('WER','btn_srdo_add','state=normal')
      || SRDO.btn_sopt('WER','btn_srdo_add','state=grayed')
      ?};
      SRDO.actions('WER',_hid+_tmp,,1)
   || SRDO.prefix(null,-1);
      SRDO.btn_sopt('WER','btn_srdo_add','state=grayed');
      SRDO.actions('WER','D'+_tmp+':D',,1)
   ?}
|| {? TST.size()>0
   || SRDO.prefix(TST.SRST().SRSR);
      {? SSTALE.AO().POCZ=date(0,0,0) & SSTALE.AO().KON=date(0,0,0)
      || _first:=exec('first_okr','fst',SSTALE.AO);
         {? ~_first
         || _hid:='D:D';
            {? SRDO.size()>0 || _hid:='DPU:D' ?}
         || _hid:=''
         ?}
      || _hid:=''
      ?};
      {? _hid=''
      || SRDO.btn_sopt('WER','btn_srdo_add','state=normal')
      || SRDO.btn_sopt('WER','btn_srdo_add','state=grayed')
      ?};
      SRDO.actions('WER',_hid+_tmp,,1)
   || SRDO.prefix(null,-1);
      SRDO.btn_sopt('WER','btn_srdo_add','state=grayed');
      SRDO.actions('WER','D'+_tmp+':D',,1)
   ?}
?}


\dok_wer_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed obsługą zakładki dokumentów wartościowych
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(208)='N'
|| _tmp:='N'
|| _tmp:=''
?};
EDIT_ES.RODZ:='W';
{? SRST.GRP='E'
|| SRDO.index('SRODZAJE');
   _root:=exec('get_srsr_root','fst',SRSR.ref())
|| SRDO.index('SRODZAJ')
?};
{? EDIT_ES.TSK<>'T'
|| {? SRST.size()>0
   || {? SRST.GRP='E'
      || SRDO.prefix(_root,SRSR.ref(),EDIT_ES.RODZ)
      || SRDO.prefix(SRSR.ref(),EDIT_ES.RODZ)
      ?};
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=normal');
      {? SSTALE.AO().POCZ=date(0,0,0) & SSTALE.AO().KON=date(0,0,0)
      || _first:=exec('first_okr','fst',SSTALE.AO);
         {? ~_first
         || _hid:='D:D';
            {? SRDO.size()>0 || _hid:='DPU:D' ?}
         || _hid:=''
         ?}
      || _hid:=''
      ?};
      SRDO.actions('WER_'+EDIT_ES.RODZ,_hid+_tmp,,1)
   || SRDO.prefix(null,EDIT_ES.RODZ);
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed');
      SRDO.actions('WER_'+EDIT_ES.RODZ,'D'+_tmp+':D',,1)
   ?}
|| {? TST.size()>0
   || SRDO.prefix(TST.SRST().SRSR,EDIT_ES.RODZ);
      {? SSTALE.AO().POCZ=date(0,0,0) & SSTALE.AO().KON=date(0,0,0)
      || _first:=exec('first_okr','fst',SSTALE.AO);
         {? ~_first
         || _hid:='D:D';
            {? SRDO.size()>0 || _hid:='DPU:D' ?}
         || _hid:=''
         ?}
      || _hid:=''
      ?};
      {? _hid=''
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=normal')
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed')
      ?};
      SRDO.actions('WER_'+EDIT_ES.RODZ,_hid+_tmp,,1)
   || SRDO.prefix(null,EDIT_ES.RODZ);
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed');
      SRDO.actions('WER_'+EDIT_ES.RODZ,'D'+_tmp+':D',,1)
   ?}
?}


\dok_wer_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed obsługą zakładki dokumentów zmiany właściwości
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZ:='L';
SRDO.index('SRODZAJ');
{? EDIT_ES.TSK<>'T'
|| {? SRST.size()>0
   || SRDO.prefix(SRSR.ref(),EDIT_ES.RODZ);
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=normal');
      {? SSTALE.AO().POCZ=date(0,0,0) & SSTALE.AO().KON=date(0,0,0)
      || _first:=exec('first_okr','fst',SSTALE.AO);
         {? ~_first
         || _hid:='D:D';
            {? SRDO.size()>0 || _hid:='DPU:D' ?}
         || _hid:=''
         ?}
      || _hid:=''
      ?};
      {? _hid=''
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=normal')
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed')
      ?};
      SRDO.actions('WER_'+EDIT_ES.RODZ,_hid,,1)
   || SRDO.prefix(null,EDIT_ES.RODZ);
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed');
      SRDO.actions('WER_'+EDIT_ES.RODZ,'D:D',,1)
   ?}
|| {? TST.size()>0
   || SRDO.prefix(TST.SRST().SRSR,EDIT_ES.RODZ);
      {? SSTALE.AO().POCZ=date(0,0,0) & SSTALE.AO().KON=date(0,0,0)
      || _first:=exec('first_okr','fst',SSTALE.AO);
         {? ~_first
         || _hid:='D:D';
            {? SRDO.size()>0 || _hid:='DPU:D' ?}
         || _hid:=''
         ?}
      || _hid:=''
      ?};
      {? _hid=''
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=normal')
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed')
      ?};
      SRDO.actions('WER_'+EDIT_ES.RODZ,_hid,,1)
   || SRDO.prefix(null,EDIT_ES.RODZ);
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed');
      SRDO.actions('WER_'+EDIT_ES.RODZ,'D:D',,1)
   ?}
?}


\dok_wer_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed obsługą zakładki dokumentów zmiany metody
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZ:='M';
SRDO.index('SRODZAJ');
{? EDIT_ES.TSK<>'T'
|| {? SRST.size()>0
   || SRDO.prefix(SRSR.ref(),EDIT_ES.RODZ);
      {? SSTALE.AO().POCZ=date(0,0,0) & SSTALE.AO().KON=date(0,0,0)
      || _first:=exec('first_okr','fst',SSTALE.AO);
         {? ~_first
         || _hid:='D:D';
            {? SRDO.size()>0 || _hid:='DPU:D' ?}
         || _hid:=''
         ?}
      || _hid:=''
      ?};
      {? _hid=''
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=normal')
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed')
      ?};
      SRDO.actions('WER_'+EDIT_ES.RODZ,_hid,,1)
   || SRDO.prefix(null,EDIT_ES.RODZ);
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed');
      SRDO.actions('WER_'+EDIT_ES.RODZ,'D:D',,1)
   ?}
|| {? TST.size()>0
   || SRDO.prefix(TST.SRST().SRSR,EDIT_ES.RODZ);
      {? SSTALE.AO().POCZ=date(0,0,0) & SSTALE.AO().KON=date(0,0,0)
      || _first:=exec('first_okr','fst',SSTALE.AO);
         {? ~_first
         || _hid:='D:D';
            {? SRDO.size()>0 || _hid:='DPU:D' ?}
         || _hid:=''
         ?}
      || _hid:=''
      ?};
      {? _hid=''
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=normal')
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed')
      ?};
      SRDO.actions('WER_'+EDIT_ES.RODZ,_hid,,1)
   || SRDO.prefix(null,EDIT_ES.RODZ);
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed');
      SRDO.actions('WER_'+EDIT_ES.RODZ,'D:D',,1)
   ?}
?}


\dok_wer_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed obsługą zakładki dokumentów innych zmian
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZ:='I';
SRDO.index('SRODZAJ');
{? EDIT_ES.TSK<>'T'
|| {? SRST.size()>0
   || SRDO.prefix(SRSR.ref(),EDIT_ES.RODZ);
      {? SSTALE.AO().POCZ=date(0,0,0) & SSTALE.AO().KON=date(0,0,0)
      || _first:=exec('first_okr','fst',SSTALE.AO);
         {? ~_first
         || _hid:='D:D';
            {? SRDO.size()>0 || _hid:='DPU:D' ?}
         || _hid:=''
         ?}
      || _hid:=''
      ?};
      {? _hid=''
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=normal')
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed')
      ?};
      SRDO.actions('WER_'+EDIT_ES.RODZ,_hid,,1)
   || SRDO.prefix(null,EDIT_ES.RODZ);
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed');
      SRDO.actions('WER_'+EDIT_ES.RODZ,'D:D',,1)
   ?}
|| {? TST.size()>0
   || SRDO.prefix(TST.SRST().SRSR,EDIT_ES.RODZ);
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=normal');
      {? SSTALE.AO().POCZ=date(0,0,0) & SSTALE.AO().KON=date(0,0,0)
      || _first:=exec('first_okr','fst',SSTALE.AO);
         {? ~_first
         || _hid:='D:D';
            {? SRDO.size()>0 || _hid:='DPU:D' ?}
         || _hid:=''
         ?}
      || _hid:=''
      ?};
      {? _hid=''
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=normal')
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed')
      ?};
      SRDO.actions('WER_'+EDIT_ES.RODZ,_hid,,1)
   || SRDO.prefix(null,EDIT_ES.RODZ);
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed');
      SRDO.actions('WER_'+EDIT_ES.RODZ,'D:D',,1)
   ?}
?}


\dok_wer_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed obsługą zakładki dokumentów przyjęcia
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZ:='P';
{? SRST.GRP='E'
|| SRDO.index('SRODZAJE');
   {? EDIT_ES.TSK<>'T'
   || _root:=exec('get_srsr_root','fst',SRSR.ref())
   || _root:=exec('get_srsr_root','fst',TST.SRST().SRSR)
   ?}
|| SRDO.index('SRODZAJ')
?};

{? EDIT_ES.TSK<>'T'
|| {? SRST.size()>0
   || {? SRST.GRP<>'E'
      || SRDO.prefix(SRSR.ref(),EDIT_ES.RODZ)
      || SRDO.prefix(_root,SRSR.ref(),EDIT_ES.RODZ)
      ?};
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=normal');
      {? SSTALE.AO().POCZ=date(0,0,0) & SSTALE.AO().KON=date(0,0,0)
      || _first:=exec('first_okr','fst',SSTALE.AO);
         {? ~_first
         || _hid:='D:D';
            {? SRDO.size()>0 || _hid:='DPU:D' ?}
         || _hid:=''
         ?}
      || _hid:=''
      ?};
      SRDO.actions('WER_'+EDIT_ES.RODZ,_hid,,1)
   || SRDO.prefix(null,EDIT_ES.RODZ);
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed');
      SRDO.actions('WER_'+EDIT_ES.RODZ,'D:D',,1)
   ?}
|| {? TST.size()>0
   || {? TST.SRST().GRP<>'E'
      || SRDO.prefix(TST.SRST().SRSR,EDIT_ES.RODZ)
      || SRDO.prefix(_root,TST.SRST().SRSR,EDIT_ES.RODZ)
      ?};
      {? SSTALE.AO().POCZ=date(0,0,0) & SSTALE.AO().KON=date(0,0,0)
      || _first:=exec('first_okr','fst',SSTALE.AO);
         {? ~_first
         || _hid:='D:D';
            {? SRDO.size()>0 || _hid:='DPU:D' ?}
         || _hid:=''
         ?}
      || _hid:=''
      ?};
      {? _hid=''
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=normal')
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed')
      ?};
      SRDO.actions('WER_'+EDIT_ES.RODZ,_hid,,1)
   || SRDO.prefix(null,EDIT_ES.RODZ);
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed');
      SRDO.actions('WER_'+EDIT_ES.RODZ,'D:D',,1)
   ?}
?}


\chk_dok_okres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła kontrolująca okres obowiązywania dla dokumentu (opiera się na bieżącym buforze tabeli SRDO)
::   WY: 1/0 - (poprawny/niepoprawny)
::----------------------------------------------------------------------------------------------------------------------
_wy:=1;
ROK_F.cntx_psh();
_granica:=SSTALE.AO().ROK().KON_ROK;
ROK_F.cntx_pop();

:: jeżeli znaleziono pierwszy okres następnego roku w obszarze FST to dozwolony taki okres obowiązywania
:: jeżeli nie to pozostaje ostatni okres bieżącego roku
OKRO_F.cntx_psh();
OKRO_F.prefix();
_ref:=exec('find_next_rok_o','fst',SSTALE.AR);
{? _ref
|| {? OKRO_F.seek(_ref) || _granica:=OKRO_F.KON ?}
?};
OKRO_F.cntx_pop();
:: następny okres po dacie obowiązywania
EDIT_ES.OKRO_F:=exec('find_okro_f','fst',SRDO.DO);
_tmp_k:=EDIT_ES.OKRO_F().KON;
EDIT_ES.OKRO_F:=exec('find_next_okro','fst',EDIT_ES.OKRO_F().ROK,EDIT_ES.OKRO_F().NR);

{? EDIT_ES.OKRO_F<>null || _tmp_k:=EDIT_ES.OKRO_F().KON ?};

SRSR.cntx_psh();
_pdm:=(SRDO.SRSR().MP().PDM='T' | SRDO.SRSR().MF().PDM='T' | (FINFO.TOR_D='T' & SRDO.SRSR().MD().PDM='T'));
SRSR.cntx_pop();

SRSR.cntx_psh();
{? SRDO.OKRO_F().KON<SRSR.DE
|| FUN.emsg('Okres obowiązywania nie może być wcześniejszy niż data wprowadzenia\n środka do eksploatacji ('
            '%1).'@[$SRSR.DE]);
   _wy:=0
|? SRDO.OKRO_F().KON<SRDO.DW
|| FUN.emsg('Okres obowiązywania nie może być wcześniejszy niż data wystawienia dokumentu ('
            '%1).'@[$SRDO.DW]);
   _wy:=0
|? SRDO.OKRO_F().KON<SRDO.DO
|| FUN.emsg('Okres obowiązywania nie może być wcześniejszy niż data obowiązywania dokumentu ('
            '%1).'@[$SRDO.DO]);
   _wy:=0
|? SRDO.OKRO_F().KON>_tmp_k
|| FUN.emsg('Okres obowiązywania nie może być późniejszy niż okres następny po dacie obowiązywania dokumentu.'@);
   _wy:=0
|? SRDO.OKRO_F().POCZ<SSTALE.AO().ROK().POCZ_ROK | SRDO.OKRO_F().KON>_granica
|| FUN.emsg('Okres obowiązywania nie może być wcześniejszy niż początek bieżącego roku\n w systemie'
            '(%1) lub późniejszy niż koniec bieżącego roku, a w przypadku\n gdy istnieje kolejny rok '
            'w obszarze FST - późniejszy niż pierwszy okres roku następnego.'@[$SSTALE.AO().ROK().POCZ_ROK]);
   _wy:=0
|? SRDO.TYP().RODZ='I' & SRDO.TYP().SEZONOWY='T' & SRDO.OKRES<>exec('first_month_of_year','fst',SRDO.ROK)
|| FUN.emsg('Dokument zmieniający środek na amortyzowany sezonowo, lub rezygujący z sezonowej amortyzacji\n'
            'środka musi być wystawiony w pierwszym okresie roku podatkowego.'@);
   _wy:=0
|? SRDO.TYP().RODZ='W' & SRDO.Z='T'
   & _pdm
   & SRDO.OKRO_F=SRSR.OKRO_F
|| FUN.emsg('Okres obowiązywania dokumentu likwidującego środek amortyzowany metodą uwzględniającą dni '
            'nie może być okresem w którym wprowadzono środek do eksploatacji. Należy wskazać kolejny okres.'@);
   _wy:=0
?};
SRSR.cntx_pop();
_wy


\bl_ma_nisko
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na wartość początkową pola MA.NISKO
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.NISKO


\chk_nri
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Kontrola numeru inwentarzowego - czy nie występuje już w systemie
::----------------------------------------------------------------------------------------------------------------------
_wy:=1;
_nri:=SRDO.NRI;
_r:=SRST.R;
_p200:=PAR_SKID.get(200);
_srsr:=SRST.SRSR;
{? SRDO.TYP().JORG='T' || _odd:=SRDO.ODD || _odd:=SRST.ODD ?};
SRST.cntx_psh();
{? PAR_SKID.get(207)='T'
|| SRST.index('RNRI');
   SRST.prefix(_r,_nri,)
|| SRST.index('NRI');
   SRST.prefix(_nri,)
?};
{? SRST.first()
|| _dalej:=1;
   {! |?
      {? SRST.SRSR<>_srsr & (_p200='N' | (_p200='T' & SRST.ODD=_odd))
      || FUN.emsg('Podany numer inwentarzowy jest już wykorzystany w systemie\n '
                 +'(środek: %1 %2).'@[SRST.NRI,SRST.NST]);
         _dalej:=0;
         _wy:=0
      ?};
      _dalej & SRST.next()
   !}
?};
SRST.cntx_pop();
_wy


\be_ma_nisko
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redakcją MA.NISKO
::----------------------------------------------------------------------------------------------------------------------
{? EDIT_ES.R='N'
|| 0
|| {? 2+MA.T<>'Li' || 0 || 1 ?}
?}


\bl_sied_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na blank dla pola SIED.ODD
::  TAG: <BL>
::----------------------------------------------------------------------------------------------------------------------
{? OPERATOR.DEPT<>null || OPERATOR.DEPT || null ?}


\czy_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: Sprawdzanie oddzialu
::  OLD: \czy_odd/srodki.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPERATOR.DEPT<>0 || 0 || 1 ?}


\bl_rok_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MAKO [2010]
:: OPIS: Formuła na wartość początkową pola KONS.RZ
::  OLD: \bl_rok_1/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
(date()~1)-1


\rp_srst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła ustawia kolor podświetlenia rekordu środków wymagających uzupełnienia danych (dodanych
::       przez kartotekę uproszczoną).
::----------------------------------------------------------------------------------------------------------------------
_win:=cur_win(1,1);
:: zestaw środków
{? SRST.GRP='T'
|| EDIT_ES.SRST:=SRST.ref();
   EDIT_ES.SRSR:=SRSR.ref();
   EDIT_ES.Z_NST:=SRST.NST;
   EDIT_ES.Z_NRI:=SRST.NRI;
   _grayed:='';
   {? var_press('__DTREE') & __DTREE>0
   || _default:='T'
   || _default:='N'
   ?}
|? SRST.GRP='E'
||
:: element składowy
   EDIT_ES.SRST:=exec('get_srst_root','fst',SRST.ref());
   EDIT_ES.SRSR:=exec('get_srsr_root','fst',SRSR.ref());
   SRST.cntx_psh();
   EDIT_ES.Z_NST:=EDIT_ES.SRST().NST;
   EDIT_ES.Z_NRI:=EDIT_ES.SRST().NRI;
   SRST.cntx_pop();
   _grayed:='N';
   {? var_press('__DTREE') & __DTREE>0
   || _default:='T'
   || _default:='D'
   ?}
||
:: zwykły środek
   EDIT_ES.SRST:=SRST.ref();
   EDIT_ES.SRSR:=SRSR.ref();
   _grayed:='NT';
   _default:='D'
?};
_tmp:='';
{? SRST.GRP='T' | SRST.GRP='E' || _tmp+='R' ?};
{? SRST.GRP='T' || _tmp+='U' ?};
{? SRST.GRP<>'T' || _tmp+='J' ?};
{? SRST.GRP<>'T' & SRST.GRP<>'E' || _tmp+='U' ?};
{? _tmp<>'' || _grayed+=('F('+_tmp+')') ?};
SRST.actions_grayed(_win,_grayed);
SRD.setActions(SSTALE.AO,_default);
::SRST.actions(_win,'',_default,1);
::Sprawdzenie, czy któryś z elementów środka nie posiada dokumentu OT
_componentOT:=0;
{? SRST.GRP='T'
|| SRST.cntx_psh(); SRSR.cntx_psh();
   SRST.index('TREE');
   SRST.prefix(SRST.R,SRST.OKRO_F,SRST.ODD,SRST.ref());
   {? SRST.first()
   || {!
      |? {? SRST.SRSR().DOKPRZ=null || _componentOT:=1 ?};
         _componentOT=0 & SRST.next()
      !}
   ?};
   SRST.cntx_pop(); SRSR.cntx_pop()
?};
{? ~SRD.isDataCompleted()
|| 'SRST#01#01'
|? SRST.SRSR().Z='T'
|| 'SRST#01#02'
|? SRST.SRSR().GRP='T' & _componentOT=1
|| 'SRST#01#03'
|? SRST.SRSR().GRP<>'T' & SRST.SRSR().DOKPRZ=null
|| 'SRST#01#03'
|| ''
?}


\rp_srst_e
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła ustawia kolor podświetlenia rekordu w oknie wertowania elementów składowych
::----------------------------------------------------------------------------------------------------------------------
_win:=cur_win(1,1);
:: element składowy
{? SRST.GRP='E'
|| EDIT_ES.SRST:=exec('get_srst_root','fst',SRST.ref());
   EDIT_ES.SRSR:=exec('get_srsr_root','fst',SRSR.ref());
   SRST.cntx_psh();
   EDIT_ES.Z_NST:=EDIT_ES.SRST().NST;
   EDIT_ES.Z_NRI:=EDIT_ES.SRST().NRI;
   SRST.cntx_pop()
?};

:: Jeżeli BO/BZ to ukrywanie akcji edycyjnych/dodających ()z wyjątiem pierwszego BO obszaru FST)
{? SSTALE.AO().POCZ=date(0,0,0) & SSTALE.AO().KON=date(0,0,0)
|| _first:=exec('first_okr','fst',SSTALE.AO);
   {? ~_first
   || _hid:='DPUOC:DC'; _greyed:=''
   || {? EDIT_ES.SRSR().Z='T' | EDIT_ES.SRSR().R='S' || _hid:='DPUOC:DC' || _hid:='' ?};
      {? _hid='' & (SRSR.Z='T'| SRSR.ZB='T') || _greyed:='PU' || _greyed:='' ?}
   ?}
|| {? EDIT_ES.SRSR().Z='T' | EDIT_ES.SRSR().R='S' || _hid:='DPUOC:DC' || _hid:='' ?};
   {? _hid='' & (SRSR.Z='T' | SRSR.ZB='T') || _greyed:='PU' || _greyed:='' ?}
?};

:: ukrycie nabycia elementów z grupy kapitałowej
_hid:='G'+_hid+'G';

SRST.actions(_win,_hid,,1);
SRST.actions_grayed(_win,_greyed);
{? SRST.SRSR().Z='T'
|| 'SRST#04#01'
|? SRST.SRSR().DOKPRZ=null
|| 'SRST#04#02'
|| ''
?}


\test_dzrk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Test czy środek jest już przypisany do wskazanego typu
::   WE: SRSR.ref(), TSK.ref()
::   WY: '' lub nazwa typu ze wskazanej klasyfikacji, do której przypisany jest środek
::----------------------------------------------------------------------------------------------------------------------
_find:='';
TSK.cntx_psh();
TST.cntx_psh();
TSR.cntx_psh();
SRSR.cntx_psh();

TSK.prefix();
{? TSK.seek(_b)
|| _class:=TSK.TREE;
   TSK.index('MAIN');
   TSK.prefix(_class);
   {? TSK.first()
   || {! |?
         TSR.index('TYPK');
         TSR.prefix(_a,TSK.ref());
         {? TSR.first() || _find:=TSR.TYP().NAZ ?};
         _find='' & TSK.next()
      !}
   ?}
?};

SRSR.cntx_pop();
TSR.cntx_pop();
TST.cntx_pop();
TSK.cntx_pop();
_find


\rp_srsr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła ustawia kolor podświetlenia rekordu dla środków już przypisanych do bieżącej klasyfikacji
::----------------------------------------------------------------------------------------------------------------------
:: dla przypisanych do bieżącego typu
{? exec('test_dzrk','fst',SRSR.ref(),TSK.ref())=TSK.NAZ
|| 'SRSR#01#01'
:: dla przypisanych do innego typu ale z tej samej klasyfikacji
|? exec('test_dzrk','fst',SRSR.ref(),TSK.ref())<>''
|| 'SRSR#01#02'
|| ''
?}


\rp_srdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na rekord przed w oknie WER tabeli SRDO
::----------------------------------------------------------------------------------------------------------------------
{? ~(SRDO.RODZ='W' & SRDO.TYP().P='+')
|| SRDO.actions_grayed('WER','IN(O)')
|? SRDO.RODZ<>'W'
|| SRDO.actions_grayed('WER','N(O)')
|| SRDO.actions_grayed('WER','')
?};
~~


\srsr_tab_amo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyświetla tabelę amortyzacji bieżącego środka
::   WE: [_a] - jeżeli _a ustawione na 'READONLY' to bez akcji obliczania i usuwania amortyzacji
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & type_of(_a)=type_of('') & _a='READONLY' || _r_only:=1 || _r_only:=0 ?};
VAR_DEL.delete('__SRST_W');
SRST.SRSR();
_sel:=SRST.win_sel('?');
SRST.cntx_psh();
SRST.index('SROD');
SRST.prefix(SRSR.ref());
__SRST_W:=SRST.mk_sel('Tabela amortyzacji'@,'P',0,'_tab_amo',10,5,15,,'U',,,,,'normal');
SRST.win_fld(__SRST_W,SRST,'ROK_F','NAZ',,10,,,'Rok bilansowy'@,,'Rok bilansowy'@);
SRST.win_fld(__SRST_W,SRST,'OKRO_F','NAZ',,15,,,'Okres bilansowy'@,,'Okres bilansowy'@);
SRST.win_fld(__SRST_W,SRST,'OKRO_F','RES',,13,,,'Rok podatkowy'@,,'Rok podatkowy'@);
SRST.win_fld(__SRST_W,SRST,'OKRO_F','OES',,13,,,'Okres podatkowy'@,,'Okres podatkowy'@);
SRST.win_fld(__SRST_W,SRST,'NAL',,,6,,,'Nal.'@,,'Naliczono amortyzację'@,2,,"'T'","'N'");
SRST.win_fld(__SRST_W,SRST,'AMOP',,,16,2,,'Amortyzacja pod.'@,,'Amortyzacja podatkowa'@);
SRST.win_fld(__SRST_W,SRST,'AMOF',,,16,2,,'Amortyzacja bil.'@,,'Amortyzacja bilansowa'@);
{? FINFO.TOR_D='T'
|| SRST.win_fld(__SRST_W,SRST,'AMOD',,,16,2,,'Amortyzacja dod.'@,,'Amortyzacja dodatkowa'@)
?};
{? ~_r_only
|| {? SSTALE.AO().POCZ<>date(0,0,0) & SSTALE.AO().KON<>date(0,0,0) & ~SRD.isElement()
   || SRST.win_act(__SRST_W,,'Formuła','Oblicz amortyzację'@@,,,,"mb_exec('FST_EWI_DOBL_ONE');exec('razems_refresh','fst')");
      task_attach('FST_EWI_DOBL');
      SRST.win_act(__SRST_W,,'Formuła','Usuń amortyzację'@@,,,,"mb_exec('FST_EWI_DOBL_USU');exec('razems_refresh','fst')");
      task_attach('FST_EWI_DOBL')
   ?}
?};
{? ~_r_only
|| SRST.win_act(__SRST_W,,'Formuła','Składniki wartości'@@,,,,"exec('srsw_select','fst')")
?};
SRST.win_act(__SRST_W,,'Rekord',,,,"exec('rekprzed','color','SRST#02#')");
SRST.win_act(__SRST_W,,'Formuła','Legenda'@@,,,,"exec('legenda','color','SRST#02#')");
SRST.win_act(__SRST_W,,'Wyświetl',,,,,"exec('srst_show_a','fst')");

{? FINFO.TOR_D='T'
|| _sql:='select TO_STRING(OKRO_F.RES) as ROKP, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, sum(AMOD) as SAMOD'
        +' from SRST join OKRO_F where SRST.SRSR=:_a group by OKRO_F.RES'
|| _sql:='select TO_STRING(OKRO_F.RES) as ROKP, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF'
        +' from SRST join OKRO_F where SRST.SRSR=:_a group by OKRO_F.RES'
?};
VAR_DEL.delete('__RAZEMS','__idx_ra');
__RAZEMS:=sql(_sql,SRSR.ref());
:: czy dla środka był dokument K- zmniejszający umorzenie
SRDO.cntx_psh();
SRDO.index('SRODZAJ');
SRDO.prefix(SRST.SRSR,'W');
{? SRDO.first()
|| __RAZEMS.cntx_psh();
   _idx_tmp:=__RAZEMS.ndx_tmp(,,'ROKP',,0);
   __RAZEMS.index(_idx_tmp);
   {! |?
      {? SRDO.P='-' & SRDO.Z<>'T' & (SRDO.UMOP<0 | SRDO.UMOF<0 | SRDO.UMOD<0)
      || {? __RAZEMS.find_key($SRDO.ROK+' - zmniejszenie umorzenia')
         || __RAZEMS.SAMOP+={? SRDO.UMOP<0 || SRDO.UMOP || 0 ?};
            __RAZEMS.SAMOF+={? SRDO.UMOF<0 || SRDO.UMOF || 0 ?};
            {? FINFO.TOR_D='T'
            || __RAZEMS.SAMOD+={? SRDO.UMOD<0 || SRDO.UMOD || 0 ?}
            ?};
            __RAZEMS.put()
         || __RAZEMS.blank(1);
            __RAZEMS.ROKP:=$SRDO.ROK+' - zmniejszenie umorzenia';
            __RAZEMS.SAMOP:={? SRDO.UMOP<0 || SRDO.UMOP || 0 ?};
            __RAZEMS.SAMOF:={? SRDO.UMOF<0 || SRDO.UMOF || 0 ?};
            {? FINFO.TOR_D='T'
            || __RAZEMS.SAMOD:={? SRDO.UMOD<0 || SRDO.UMOD || 0 ?}
            ?};
            __RAZEMS.add()
         ?}
      ?};
      SRDO.next()
   !};
   __RAZEMS.ndx_drop(_idx_tmp);
   __RAZEMS.cntx_pop()
?};
SRDO.cntx_pop();
{? __RAZEMS.first()
|| _samop:=_samof:=0;
   {? FINFO.TOR_D='T' || _samod:=0 ?};
   __RAZEMS.cntx_psh();
   {! |?
      _samop+=__RAZEMS.SAMOP;
      _samof+=__RAZEMS.SAMOF;
      {? FINFO.TOR_D='T' || _samod+=__RAZEMS.SAMOD ?};
      __RAZEMS.next()
   !};
   __RAZEMS.cntx_pop();
   __RAZEMS.ROKP:='Razem';
   __RAZEMS.SAMOP:=_samop;
   __RAZEMS.SAMOF:=_samof;
   {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=_samod ?};
   __RAZEMS.add();
   __idx_ra:=__RAZEMS.ndx_tmp(,,'ROKP',,0);
   __RAZEMS.index(__idx_ra);
   __RAZEMS.find_key($SSTALE.AO().RES,)
?};
_winr:=__RAZEMS.mk_sel('Podumowanie'@,,,'__razems_win',,,5,,,,,,,'normal',,'disabled');
__RAZEMS.win_sel(_winr);
__RAZEMS.win_fld(_winr,__RAZEMS,'ROKP',,,66,,,'Rok podatkowy'@,,'Rok podatkowy'@);
__RAZEMS.win_fld(_winr,__RAZEMS,'SAMOP',,,16,2,,'Amortyzacja pod.'@,,'Amortyzacja podatkowa'@);
__RAZEMS.win_fld(_winr,__RAZEMS,'SAMOF',,,16,2,,'Amortyzacja bil.'@,,'Amortyzacja bilansowa'@);
{? FINFO.TOR_D='T'
|| __RAZEMS.win_fld(_winr,__RAZEMS,'SAMOD',,,16,2,,'Amortyzacja dod.'@,,'Amortyzacja dodatkowa'@)
?};
__RAZEMS.win_act(_winr,,'Rekord',,,,"{? __RAZEMS.ROKP*'Razem' || 1 || '' ?}");
_title:='Tabela amortyzacji'@;
_grp:=SRST.grp_make(_title,"__RAZEMS.find_key($SRST.ROK,);grp_disp(__RAZEMS,__RAZEMS.win_sel('?'))",'_tab_amo',5,5);
SRST.win_sel(_grp);
SRST.grp_sel(_grp,,__SRST_W,'Tabela amortyzacji'@,"",,,14,"","",0,1,'maximized');
SRST.grp_splt(_grp,,'horizontal','dół',20);
SRST.grp_sel(_grp,__RAZEMS,_winr,'Podsumowanie'@,"",,,5,"","",0,0,'maximized');
SRST.select(,1,-1);
SRST.win_sel(_sel);
VAR_DEL.delete('__RAZEMS','__idx_ra');
SRST.cntx_pop();
VAR_DEL.delete('__SRST_W')


\rp_srst_amo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na rekord przed w oknie tabeli amortyzacji
::   WY: schemat koloru lub ''
::----------------------------------------------------------------------------------------------------------------------

{? var_pres('__RAZEMS')>0
|| {? SRST.OKRO_F().POCZ=date(0,0,0) | SRST.OKRO_F().AMOR='T' | (FINFO.AMOR='B' & (SSTALE.AO <> SRST.OKRO_F))
   || _actions:='OU'
   || _actions:=''
   ?};
   {? SRST.NAL='T' || _default:='U' || _default:='O' ?};
   SRST.actions_grayed(__SRST_W,_actions);
   SRST.actions(__SRST_W,,_default,1);
   __RAZEMS.find_key($SRST.ROK);
   grp_disp(__RAZEMS,__RAZEMS.win_sel('?'))
?};
{? SRST.OKRO_F().POCZ=date(0,0,0)
|| 'SRST#02#01'
|? SRST.NAL='N'
|| 'SRST#02#02'
|| ''
?}


\rp_srst_amo_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na rekord przed w oknie tabeli zużycia
::   WY: schemat koloru lub ''
::----------------------------------------------------------------------------------------------------------------------
__RAZEMS.find_key($SRST.ROK);
grp_disp(__RAZEMS,__RAZEMS.win_sel('?'));
{? SRST.OKRES=0 | SRST.OKRES>12 || 'SRST#02#01' || '' ?}


\razems_refresh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła odświeża podsumowanie w tabeli amortyzacji, po funkcjach Oblicz, Usuń
::----------------------------------------------------------------------------------------------------------------------
{? FINFO.TOR_D='T'
|| _sql:='select TO_STRING(OKRO_F.RES) as ROKP, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, sum(AMOD) as SAMOD'
        +' from SRST join OKRO_F where SRST.SRSR=:_a group by OKRO_F.RES'
|| _sql:='select TO_STRING(OKRO_F.RES) as ROKP, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF'
        +' from SRST join OKRO_F where SRST.SRSR=:_a group by OKRO_F.RES'
?};
_tmp:=sql(_sql,SRSR.ref());

_idx_tm:=_tmp.ndx_tmp(,,'ROKP',,0);
_tmp.index(_idx_tm);
_tmp.prefix();
__RAZEMS.cntx_psh();
{? __RAZEMS.first()
|| {! |?
      {? _tmp.find_key(__RAZEMS.ROKP,)
      || __RAZEMS.SAMOP:=_tmp.SAMOP;
         __RAZEMS.SAMOF:=_tmp.SAMOF;
         {? FINFO.TOR_D='T'
         || __RAZEMS.SAMOD:=_tmp.SAMOD
         ?};
         __RAZEMS.put()
      ?};
      __RAZEMS.next()
   !}
?};

:: razem
{? __RAZEMS.first()
|| _samop:=_samof:=0;
   {? FINFO.TOR_D='T' || _samod:=0 ?};
   __RAZEMS.cntx_psh();
   {! |?
      {? __RAZEMS.ROKP<>'Razem'
      || _samop+=__RAZEMS.SAMOP;
         _samof+=__RAZEMS.SAMOF;
         {? FINFO.TOR_D='T' || _samod+=__RAZEMS.SAMOD ?}
      ?};
      __RAZEMS.next()
   !};
   __RAZEMS.cntx_pop();
   {? __RAZEMS.find_key('Razem',)
   || __RAZEMS.SAMOP:=_samop;
      __RAZEMS.SAMOF:=_samof;
      {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=_samod ?};
      __RAZEMS.put()
   ?}
?};
__RAZEMS.cntx_pop();
grp_disp(__RAZEMS,__RAZEMS.win_sel('?'))


\sum_zuz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Suma zużycia planowanego lub rzeczywistego do wskazanego okresu (ale nie włącznie!)
::   WE: _a - 'P' = planowane, 'R' - rzeczywiste
::       _b - rok podatkowy
::       _c - okres podatkowy
::       _d - 1 = suma wszystkich, dla okresu z _b wartość z bufora,
::            0 = (domyślnie) suma do wskazanego okresu
::----------------------------------------------------------------------------------------------------------------------
{? _<3 || _d:=0 ?};
{? _d=1
|| {? _a='P' || _tmp:=SRST.PZUZ
   |? _a='R' || _tmp:=SRST.RZUZ
   ?}
|| _tmp:=0
?};
SRST.cntx_psh();
_suma:=0;
SRST.index('PODAT');
SRST.prefix(SRSR.ref());
{? SRST.first()
|| {? SRST.OKRES>=1 & SRST.OKRES<=12
   || {! |?
         {? _d=1 & SRST.ROK=_b & SRST.OKRES=_c
         || _suma+=_tmp
         |? _d=1 | (_d=0 & (SRST.ROK<_b | (SRST.ROK=_b & SRST.OKRES<_c)))
         || {? _a='P' || _suma+=SRST.PZUZ
            |? _a='R' || _suma+=SRST.RZUZ
            ?}
         ?};
         SRST.next()
      !}
   ?}
?};
SRST.cntx_pop();
_suma


\mapa_zuz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: 'mapa' okresów amortyzacji naturalnej
::----------------------------------------------------------------------------------------------------------------------
::stan początkowy
_tmp:=tab_tmp(2,'ROK','INTEGER','Rok'@,
                'OKRES','INTEGER','Okres'@,
                'CZY_NAT','STRING[1]','Naturalna'@);
_prok:=SRSR.ROK;
_pokres:=SRSR.OKRES;
_srsr:=SRSR.ref();
SRST.cntx_psh(); SRDO.cntx_psh();
SRST.index('PODAT');
SRST.prefix(SRST.SRSR);
{? SRST.first()
|| _start:=SRST.MF().MP;
   _ile:=SRST.OKE;
   _licznik:=0;
   {! |?
      {? (SRST.OKRES>0 & SRST.OKRES<=12) & (SRST.ROK>_prok | (SRST.ROK=_prok & SRST.OKRES>=_pokres+_start))
      || _licznik+=1;
         _tmp.ROK:=SRST.ROK;
         _tmp.OKRES:=SRST.OKRES;
         {? _licznik<=_ile || _tmp.CZY_NAT:='T' || _tmp.CZY_NAT:='N' ?};
         _tmp.add()
      ?};
      SRST.next()
   !}
?};
:: jeżeli korygowano dokumentami to uaktualnienie
SRDO.index('SRODZAJD');
SRDO.prefix(_srsr,'W');
{? SRDO.first()
|| {! |?
      {? SRDO.TYP().OKE='T'
      || _doke:=SRDO.OKE;
         {? _tmp.find_key(SRDO.ROK,SRDO.OKRES)
         || {! |?
               {? _tmp.CZY_NAT='N'
               || {? _doke
                  || _tmp.CZY_NAT:='T'; _tmp.put();
                     _doke-=1
                  ?}
               ?};
               _tmp.next()
            !}
         ?}
      ?};
      SRDO.next()
   !}
?};
SRST.cntx_pop(); SRDO.cntx_pop();
_tmp


\oke_zuz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Liczba okresów (poza BO, BZ) od okresu wprowadzenia środka do bieżącego (włącznie)
::   WE: _a - OKRO_F.RES (rok podatkowy), _b= OKRO_F.OES (okres podatkowy)
::----------------------------------------------------------------------------------------------------------------------
_licz:=0;
{? var_pres('__tmp_zuz')>0 & __tmp_zuz.first()
|| {! |?
      {? __tmp_zuz.ROK<_a | (__tmp_zuz.ROK=_a & __tmp_zuz.OKRES<=_b)
      || {? __tmp_zuz.CZY_NAT='T' || _licz+=1 ?}
      ?};
      __tmp_zuz.next()
   !}
|| _biezacy:=SRST.MF().MP=1;
   SRST.cntx_psh();
   OKRO_F.cntx_psh();
   SRST.index('SROD');
   SRST.prefix(SRSR.ref());
   {? SRST.first()
   || {! |?
         {? SRST.OKRES>=1 & SRST.OKRES<=12
         || {? SRST.ROK=_a & SRST.OKRES=_b
            || _licz+=1;
               SRST.last()
            |? SRST.ROK<_a | (SRST.ROK=_a & SRST.OKRES<_b)
            || _licz+=1
            ?}
         ?};
         SRST.next()
      !};
      {? _licz>0 & _biezacy || _licz-=1 ?}
   ?};
   OKRO_F.cntx_pop();
   SRST.cntx_pop()
?};
_licz


\fst_parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Zmiana parametrów pracy w obszarze FST
::----------------------------------------------------------------------------------------------------------------------
_rok:=SSTALE.AR;
_okres:=SSTALE.AO;
_odd:=OPERATOR.DEPT;
_dalej:=0;
SRD.REF:=SRST.SRSR;
{! |?
   {? __PARSES.editDom('FST')
   || {? exec('getOkresRok','fst',1)
      || {? _rok<>SSTALE.AR | _odd<>OPERATOR.DEPT | _okres<>SSTALE.AO
         || {? _rok<>SSTALE.AR
            || {? SSTALE.AR & SRSR.size()>0
               || SRST.cntx_psh();
                  SRST.index('ROK'); SRST.prefix();
                  {? SRST.first() || _all:=1 || _all:=0 ?};
                  _n_year:=exec('test_new_year','fst',SSTALE.AR);
                  _srsr_size:=exec('srsr_size','srodobj');
:: jeżeli nie ma rekordów z rejestru stanów to nowy rok bez danych, które trzeba uzupełnić
:: o ile istnieją środki nieskreślone w poprzednim roku
                  {? _all & _n_year & _srsr_size
                  || {? ~FUN.ask('Wskazano okres z nowego roku.\n\n'
                                 'Zmiana obowiązującego okresu na nowy wymaga utworzenia danych\n'
                                 'w nowym roku i będzie czasochłonna. Kontynuować?'@)
                     || __PARSES.setVal('OkresRok',_okres);
                        _dalej:=-2
                     || echo('Trwa tworzenie rejestru stanów środków dla roku %1'@[SSTALE.AR().NAZ]);
                        SRST.cntx_psh(); SRSR.cntx_psh(); SRSW.cntx_psh();
                        __EOKREF:=exec('last_okr_data','fst');
                        {? __EOKREF
                        || SRSR.for_each("SRD.updateRecState(__EOKREF)",1)
                        ?};
                        SRST.cntx_pop(); SRSR.cntx_pop(); SRSW.cntx_pop();
                        echo('')
                     ?}
                  ?};
                  SRST.cntx_pop()
               ?}
            ?};
            {? _dalej=-2
            || _dalej:=1
            || {? var_press('__DTREE') & __DTREE>0
               || _dalej:=-1
               || SRD.refreshAssets(SSTALE.AO);
:: obowiązująca klasyfikacja środków
                  TAB_KRST.cntx_psh();
                  TAB_KRST.index('TABKRST');
                  TAB_KRST.prefix();
                  _tmprok:=0; _tmpref:=null;
                  {? TAB_KRST.first()
                  || {! |?
                        {? TAB_KRST.AR<=SSTALE.AO().RES & TAB_KRST.AR>_tmprok
                        || _tmprok:=TAB_KRST.AR; _tmpref:=TAB_KRST.ref()
                        ?};
                        TAB_KRST.next()
                     !}
                  ?};
                  TAB_KRST.cntx_pop();
                  STER.KST:=_tmpref;
                  _dalej:=0
               ?}
            ?}
         || _dalej:=0
         ?}
      ||  FUN.info('Obowiązujący okres pracy dla obszaru FST nie istnieje.\n '
                   'Należy zweryfikować ustawienia w parametrach pracy.'@);
         _dalej:=1
      ?}
   || {? exec('getOkresRok','fst',1)
      || _dalej:=0
      || FUN.info('Obowiązujący okres pracy dla obszaru FST nie istnieje.\n '
                  'Należy zweryfikować ustawienia w parametrach pracy.'@);
         _dalej:=1
      ?}
   ?};
   _dalej>0
!};
:: jeżeli zmiana parametrów dotyczy j. ksiegowych a system pracuje w widoku drzewa
:: to trzeba przeładować całe okno
{? _dalej=-1 || BEER.ESC:=1; exec('srst_view_change','fst',1) ?}


\fst_parses_inp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Zmiana parametrów pracy w obszarze FST (bez obsługi odświeżania tabeli stanów środków)
::----------------------------------------------------------------------------------------------------------------------
_rok:=SSTALE.AR;
_okres:=SSTALE.AO;
_odd:=OPERATOR.DEPT;
_dalej:=0;
SRD.REF:=SRST.SRSR;
{! |?
   {? __PARSES.editDom('FST')
   || {? ~exec('getOkresRok','fst',1)
      ||  FUN.info('Obowiązujący okres pracy dla obszaru FST nie istnieje.\n '
                   'Należy zweryfikować ustawienia w parametrach pracy.'@);
         _dalej:=1
      || AreaTitle.setTitle()
      ?}
   || {? exec('getOkresRok','fst',1)
      || _dalej:=0
      || FUN.info('Obowiązujący okres pracy dla obszaru FST nie istnieje.\n '
                  'Należy zweryfikować ustawienia w parametrach pracy.'@);
         _dalej:=1
      ?}
   ?};
   _dalej>0
!}


\srsr_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na Wyświetl w tabeli SRSR
::----------------------------------------------------------------------------------------------------------------------
SRD.showEarlyAsset()


\dok_show_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po odświeżeniu dla okna środków z klasyfikacją
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(208)='N'
|| _tmp:='N'
|| _tmp:=''
?};
{? PAR_SKID.get(208)='N' & EDIT_ES.RODZ='W'
|| _tmp2:='N'
|| _tmp2:=''
?};
{? EDIT_ES.RODZ=''
|| SRDO.index('SRDO');
   {? TST.size()>0
   || {? var_pres('goto_find')>=0 & goto_find
      || {? SRST.seek(goto_find)
         || TST.cntx_psh();
            TST.index('SRST');
            TST.prefix();
            _tst:={? TST.find_key(goto_find,TST.TSK) || TST.ref() || null ?};
            TST.cntx_pop();
            {? TST.seek(_tst)
            || win_disp()
            || FUN.emsg('Środek spoza klasyfikacji.'@)
            ?}
         ?}
      ?};
      TST.SRST();
      SRDO.prefix(TST.SRST().SRSR);
      {? SSTALE.AO().POCZ=date(0,0,0) & SSTALE.AO().KON=date(0,0,0)
      || _first:=exec('first_okr','fst',SSTALE.AO);
         {? ~_first
         || _hid:='D:D';
            {? SRDO.size()>0 || _hid:='DPU:D' ?}
         || _hid:=''
         ?}
      || _hid:=''
      ?};
      {? _hid=''
      || SRDO.btn_sopt('WER','btn_srdo_add','state=normal')
      || SRDO.btn_sopt('WER','btn_srdo_add','state=grayed')
      ?};
      SRDO.actions('WER',_hid+_tmp,,1)
   || SRDO.prefix(null);
      SRDO.btn_sopt('WER','btn_srdo_add','state=grayed');
      SRDO.actions('WER','D'+_tmp+':D',,1)
   ?};
   grp_disp(SRDO,'WER')
|| SRDO.index('SRODZAJ');
   {? TST.size()>0
   || TST.SRST();
      SRDO.prefix(TST.SRST().SRSR,EDIT_ES.RODZ);
      {? SSTALE.AO().POCZ=date(0,0,0) & SSTALE.AO().KON=date(0,0,0)
      || _first:=exec('first_okr','fst',SSTALE.AO);
         {? ~_first
         || _hid:='D:D';
            {? SRDO.size()>0 || _hid:='DPU:D' ?}
         || _hid:=''
         ?}
      || _hid:=''
      ?};
      {? _hid=''
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=normal')
      || SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed')
      ?};
      SRDO.actions('WER_'+EDIT_ES.RODZ,_hid+_tmp2,,1)
   || SRDO.prefix(null);
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed');
      SRDO.actions('WER_'+EDIT_ES.RODZ,'D'+_tmp2+':D',,1)
   ?};
   grp_disp(SRDO,'WER_'+EDIT_ES.RODZ)
?};  VAR_DEL.delete('goto_find')


\dok_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po odświeżeniu dla okna środków
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(208)='N'
|| _tmp:='N'
|| _tmp:=''
?};
{? PAR_SKID.get(208)='N' & EDIT_ES.RODZ='W'
|| _tmp2:='N'
|| _tmp2:=''
?};
{? EDIT_ES.RODZ=''
|| SRDO.index('SRDO');
   {? SRST.sel_size() | {? SRST.f_active || SRST.f_size || SRST.size ?}
   || SRDO.prefix(SRSR.ref());
      SRDO.btn_sopt('WER','btn_srdo_add','state=normal');
      SRDO.actions('WER',''+_tmp,,1)
   || SRDO.prefix(null);
      SRDO.btn_sopt('WER','btn_srdo_add','state=grayed');
      SRDO.actions('WER','D'+_tmp+':D',,1)
   ?};
   grp_disp(SRDO,'WER')
|| SRDO.index('SRODZAJ');
   {? SRST.sel_size() | {? SRST.f_active || SRST.f_size || SRST.size ?}
   || SRDO.prefix(SRSR.ref(),EDIT_ES.RODZ);
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=normal');
      SRDO.actions('WER_'+EDIT_ES.RODZ,''+_tmp2,,1)
   || SRDO.prefix(null);
      SRDO.btn_sopt('WER_'+EDIT_ES.RODZ,'btn_srdo_add_'+(-EDIT_ES.RODZ),'state=grayed');
      SRDO.actions('WER_'+EDIT_ES.RODZ,'D'+_tmp2+':D',,1)
   ?};
   grp_disp(SRDO,'WER_'+EDIT_ES.RODZ)
?}


\be_srsr_samochod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.SAMOCHOD
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.POJAZD='T' || 1 || 0 ?}


\be_srsr_euro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.SAMOCHOD
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.SAMOCHOD='T' || 1 || 0 ?}


\be_srsr_kurs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.SAMOCHOD
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.SAMOCHOD='T' || 1 || 0 ?}


\be_srsr_warpelna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.SAMOCHOD
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.SAMOCHOD='T' || 1 || 0 ?}


\be_srsr_schemat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.SCH_SEZ
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.S='T' || 1 || 0 ?}


\be_srsr_jm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.JM
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRSR.MF().T='N' || 1 || 0 ?}


\be_srsr_max
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.MAX
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRSR.MF().T='N' || 1 || 0 ?}


\be_srsr_oke
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.OKE
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRSR.MF().T='N' || 1 || 0 ?}


\be_srsr_konpod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.KONPOD
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='P';
ZSKON.win_dict('WYB_P');
1


\be_srsr_konfin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.KONFIN
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='F';
ZSKON.win_dict('WYB_F');
1


\be_srsr_kondod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.KONDOD
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='D';
ZSKON.win_dict('WYB_D');
SRD.TOR_D


\be_srsr_mp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.MP
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='P';
1


\be_srsr_mf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.MF
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='F';
1


\be_srsr_md
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.MD
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='D';
SRD.TOR_D


\ae_srsr_mp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola SRSR.MP
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.MP().K='UJP' & SRSR.STAP<>100 || SRSR.STAP:=100 ?};
{? 1+SRSR.MP().T='D' & SRSR.WKP<=1
|| SRSR.WKP:=SRSR.GR().WD
|? 1+SRSR.MP().T<>'D' & SRSR.WKP<>1
|| SRSR.WKP:=1;
   SRSR.DPLP:=date(0,0,0)
?};
exec('ae_ext_mp','fst_ext'); 1


\ae_srsr_mf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola SRSR.MF
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.MF().K='UJB' & SRSR.STAF<>100 || SRSR.STAF:=100 ?};
{? 1+SRSR.MF().T='D' & SRSR.WKF<=1
|| SRSR.WKF:=SRSR.GR().WD
|? 1+SRSR.MF().T<>'D' & SRSR.WKF<>1
|| SRSR.WKF:=1;
   SRSR.DPLF:=date(0,0,0)
?};
{? 1+SRSR.MF().T<>'N'
|| SRSR.OKE:=0;
   SRSR.MAX:=0;
   SRSR.JM:=null
|| SRSR.STAF:=0;
   SRSR.WKF:=0
?};
{? SRSR.OSTATEK<>0
|| SRSR.OSTATEK:=0
?};
exec('srsr_ed','fst_ext'); 1


\ae_srsr_md
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola SRSR.MD
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.MD().K='UJD' & SRSR.STAD<>100 || SRSR.STAD:=100 ?};
{? 1+SRSR.MD().T='D' & SRSR.WKD<=1
|| SRSR.WKD:=SRSR.GR().WD
|? 1+SRSR.MD().T<>'D' & SRSR.WKD<>1
|| SRSR.WKD:=1;
   SRSR.DPLD:=date(0,0,0)
?};
1


\ae_srsr_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola SRSR.GR
::  OLD: \AE_GRUPA/estra.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()
|| {? SRSR.STAP=0 || SRSR.STAP:=SRSR.GR().S ?};
   {? SRSR.STAF=0 || SRSR.STAF:=SRSR.GR().S ?};
   {? SRSR.STAD=0 || SRSR.STAD:=SRSR.GR().S ?};
:: dla metody naturalnej bilansowej
   {? (SRSR.MF().T<>'' & 'N'*SRSR.MF().T>0)
   || SRSR.STAF:=0
   ?};
:: jeżeli z numeru grupy wynika, że to samochód
   {? 3+SRSR.GR().GR='741'
   || SRSR.SAMOCHOD:='T';
      SRSR.POJAZD:='T';
      SRSR.EURO:=FINFO.LIMIT_EU
   || SRSR.SAMOCHOD:='N';
      SRSR.WARPELNA:=0;
      SRSR.EURO:=0;
      SRSR.KURS_EUR:=0
   ?};
:: jeżeli wypełniona grupa i środek z metodą degresywną to uzupełnia wsp. korekty
   {? 1+SRSR.MP().T='D' & SRSR.WKP<=1 || SRSR.WKP:=SRSR.GR().WD ?};
   {? 1+SRSR.MF().T='D' & SRSR.WKF<=1 || SRSR.WKF:=SRSR.GR().WD ?};
   {? FINFO.TOR_D='T' & 1+SRSR.MD().T='D' & SRSR.WKD<=1 || SRSR.WKD:=SRSR.GR().WD ?};
   {? SRSR.GR().KST<>null || EDIT_ES.TAB_KRST:=SRSR.GR().KST || EDIT_ES.TAB_KRST:=null ?};
:: uzupełnienie benefitu
   TAM_DOD.cntx_psh();
   TAM_DOD.index('TAM_DOD');
   TAM_DOD.prefix(exec('firma','ustawienia'),SRSR.GR().ref());
   {? TAM_DOD.first()
   || _bnftt:=TAM_DOD.BNFTT
   || _bnftt:=null()
   ?};
   TAM_DOD.cntx_pop();
   EDIT_ES.BNFTT:=_bnftt;
   EDIT_ES.BENEFIT:=SRSR.BENEFIT:={? _bnftt=null() || 'N' || 'T' ?}
|| EDIT_ES.TAB_KRST:=null;
   EDIT_ES.BNFTT:=null;
   EDIT_ES.BENEFIT:=SRSR.BENEFIT:='N'
?};
{? EDIT_ES.BNFTT().AKRONIM<>'' || _enable:=1 || _enable:=0 ?};
SRSR.efld_opt(SRSR.win_edit('?'), 'enable='+$_enable, EDIT_ES, 'PRCNAZ');
SRSR.efld_opt(SRSR.win_edit('?'), 'enable='+$_enable, EDIT_ES, 'BENEFIT');
SRSR.efld_opt(SRSR.win_edit('?'), 'enable='+$_enable, SRDO_POM, 'PSTN');
SRSR.efld_opt(SRSR.win_edit('?'), 'enable='+$_enable, SRDO_POM, 'PWYD');
SRSR.efld_opt(SRSR.win_edit('?'), 'editable='+$~_enable,, 'OSOBA');
1


\be_srsr_nri
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2011]
:: OPIS: formula przed redagowaniem pola SRSR.NRI (numer inwentarzowy srodka)
::  OLD: \numerinw/numerinw.fml
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.GRP<>'E'
||
:: numer dla środka lub zestawu
   {? PAR_SKID.get(200)='T' & SRSR.ODD=null
   || FUN.emsg('W przypadku numeracji środków w obrębie jednostek księgowych (parametr 200)\n'
               'należy najpierw uzupełnić pole z jednostką organizacyjną (księgowa uzupełni się automatycznie)\n'
               'Brak wypełnienia tych pól uniemożliwia wygenerowanie i redakcję numeru inwentarzowego.'@);
      return(0)
   ?};
   _nri:='';
   {? form(fld())=''
   || _formula:=exec('nri_form','fst');
      {? _formula<>''
      || _nri:=($(_formula))();
         {? _nri<>'' || fld(_nri) ?}
      || 'NRI'
      ?}
   || 1
   ?}
||
:: numer dla elementu składowego
   {? form(fld())=''
   || SRSR.cntx_psh();
      _nri:=EDIT_ES.SRSR().NRI;
      {? _nri+1='.' || _nri:=_nri-1 ?};
      SRSR.cntx_pop();
      _nri:=_nri+'/';
      SRSR.cntx_psh();
      SRSR.index('TREE');
      SRSR.prefix(EDIT_ES.SRSR);
      _big:=0; _chars:=2;
      {? SRSR.first()
      || {! |?
            {? SRSR.NRI+1='.' || SRSR.NRI:=SRSR.NRI-1 ?};
            _pos:=SRSR.NRI*'/';
            {? +(_pos-SRSR.NRI)>_chars || _chars:=+(_pos-SRSR.NRI) ?};
            {? _pos & #(_pos-SRSR.NRI)>_big || _big:=#(_pos-SRSR.NRI) ?};
            SRSR.next()
         !}
      ?};
      {? _big>0
      || _new:=_big+1;
         {? +($_new)>_chars || _chars:=+($_new) ?};
         _nri+=form(_new,-_chars,0,'9')
      || _nri+='001'
      ?};
      SRSR.cntx_pop();
      {? _nri<>'' || fld(_nri) ?}
   ?};
   1
?}


\ae_srsr_nri
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Formuła po redakcji SRSR.NRI
::   WY: 0/1
::  OLD: \AE_KROP1/estra.fml
::----------------------------------------------------------------------------------------------------------------------
{? FINFO.NRI_REDP<>''
|| ($(FINFO.NRI_REDP))()
|| exec('redp_standard','fst')
?}


\redp_standard
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.02]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.GRP<>'E'
|| {? exec('val_nri','fst',SRD.TRYB='E')='' || 1 || 0 ?}
|| 1
?}


\be_srsr_warf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.WARF
::  OLD: \PRZ_WARF/estra.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()=0
|| {? SRSR.WARPELNA>0
   || fld(SRSR.WARPELNA$FINFO.DOKL)
   || fld(SRSR.WARP$FINFO.DOKL)
   ?}
?};
1


\be_srsr_netp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Przed redakcją pola SRSR.NETP
::  OLD: \srod_netp_be/srodki.fml
::  OLD: \PRZ_NETP/estra.fml
::----------------------------------------------------------------------------------------------------------------------
fld((SRSR.WARP-SRSR.UMOP)$FINFO.DOKL);
1


\be_srsr_umof
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed redakcją pola SRSR.UMOF
::  OLD: \PRZ_UMOF/estra.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()=0 || fld(SRSR.UMOP) ?};
1


\ae_srsr_warpelna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Formula po redakcji pola Wartosc pelna pojazdu
::  OLD: \ae_pojazd/srodki.fml
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.DE<>date(0,0,0) & SRSR.DE<date(2019,1,1)
|| {? SRSR.KURS_EUR>0 & SRSR.WARPELNA>0
   || _wart:=SRSR.EURO*SRSR.KURS_EUR$FINFO.DOKL;
      {? _wart<SRSR.WARPELNA
      || SRSR.WARP:=_wart
      || SRSR.WARP:=SRSR.WARPELNA
      ?}
   || FUN.emsg('Nie podano kursu EURO z dnia wprowadzenia\n'
               'pojazdu do eksploatacji, lub pełnej wartości pojazdu.'@)
   ?}
|| _limit:=0;
   exec('czytaj','#stalesys',date(),FINFO,'LIMIT_OS');
   exec('czytaj','#stalesys',date(),FINFO,'LIMIT_OE');
   {? FINFO.LIMIT_OS=0 | FINFO.LIMIT_OE=0
   || FUN.emsg('Brak wypełnionych limitów odliczeń dla samochodów osobowych\n'
               'w Ustawieniach i parametryzacji systemu.'@)
   || {? SRSR.SAM_EL='N'
      || {? SRSR.WARPELNA>FINFO.LIMIT_OS || _limit:=FINFO.LIMIT_OS ?}
      |? SRSR.SAM_EL='T'
      || {? SRSR.WARPELNA>FINFO.LIMIT_OE || _limit:=FINFO.LIMIT_OE ?}
      ?};

      {? _limit>0 & SRSR.WARPELNA<=_limit
      || SRSR.WARP:=SRSR.WARPELNA
      |? _limit>0 & SRSR.WARPELNA>_limit & (SRSR.WARP=0 | SRSR.WARP>_limit)
      || SRSR.WARP:=_limit
      |? _limit=0
      || SRSR.WARP:=SRSR.WARPELNA
      ?}
   ?}
?};
1


\ae_srsr_samochod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Formula po redakcji pola SRSR.SAMOCHOD
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.SAMOCHOD='N'
|| SRSR.WARPELNA:=0;
   {? SRSR.DE<>date(0,0,0) & SRSR.DE<date(2019,1,1)
   || SRSR.EURO:=0;
      SRSR.KURS_EUR:=0
   ?};
   SRSR.SAM_EL:='N'
|| {? SRSR.DE<>date(0,0,0) & SRSR.DE<date(2019,1,1)
   || {? SRSR.EURO=0 || SRSR.EURO:=FINFO.LIMIT_EU ?}
   ?}
?};
exec('ae_samochod','fst_ext'); 1


\be_srsr_netf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed redakcją pola SRSR.NETF
::  OLD: \PRZ_NETF/estra.fml
::----------------------------------------------------------------------------------------------------------------------
fld((SRSR.WARF-SRSR.UMOF)$FINFO.DOKL);
1


\ae_srsr_stap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Po redakcji pola tabeli SRSR.STAP
::   WY: 0/1
::  OLD: \ae_stafk/zuzycie.fml
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRSR.MP().T='D' || exec('data_przejscia','fst','P','SRSR')
 ?};
{? fld=0
|| {? SRSR.MP().K='UJP'
   || FUN.emsg('System wymaga dla środka trwałego z grupy %1'
               '\n wprowadzenia niezerowej stawki amortyzacji.'@[SRSR.GR().GR]);
      0
   || 1
   ?}
|| 1
?}


\ae_srdo_stap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola SRDO.STAP
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRDO.MP().T='D' || exec('data_przejscia','fst','P','SRDO')
 ?};
1


\ae_srdo_staf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola SRDO.STAF
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRDO.MF().T='D' || exec('data_przejscia','fst','F','SRDO')
 ?};
1


\ae_srdo_stad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola SRDO.STAD
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRDO.MD().T='D' || exec('data_przejscia','fst','D','SRDO')
 ?};
1


\ae_srsr_wkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola tabeli SRSR.WKP
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRSR.MP().T='D' || exec('data_przejscia','fst','P','SRSR') ?};
1


\ae_srsr_wkf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola tabeli SRSR.WKF
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRSR.MF().T='D' || exec('data_przejscia','fst','F','SRSR') ?};
1


\ae_srsr_wkd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola tabeli SRSR.WKD
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRSR.MD().T='D' || exec('data_przejscia','fst','D','SRSR')
 ?};
1


\ae_srsr_staf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Po redakcji pola tabeli SRSR.STAF
::   WY: 0/1
::  OLD: \ae_stafk/zuzycie.fml
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRSR.MF().T='D' || exec('data_przejscia','fst','F','SRSR')
 ?};
{? fld=0
|| {? SRSR.MF().K='UJF'
   || FUN.emsg('System wymaga dla środka trwałego z grupy %1'
               '\n wprowadzenia niezerowej stawki amortyzacji.'@[SRSR.GR().GR]);
      0
   || 1
   ?}
|| 1
?}


\ae_srsr_stad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola tabeli SRSR.STAD
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRSR.MD().T='D' || exec('data_przejscia','fst','D','SRSR')
 ?};
{? fld=0
|| {? SRSR.MD().K='UJD'
   || FUN.emsg('System wymaga dla środka trwałego z grupy %1'
               '\n wprowadzenia niezerowej stawki amortyzacji.'@[SRSR.GR().GR]);
      0
   || 1
   ?}
|| 1
?}


\ae_srsr_konpod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Po redakcji pola tabeli SRSR.KONPOD
::   WY: 0/1
::  OLD: \srod_konpod_ae/srodki.fml
::----------------------------------------------------------------------------------------------------------------------
exec('spr_zsdo','fst')


\ae_srsr_konfin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Po redakcji pola tabeli SRSR.KONFIN
::   WY: 0/1
::  OLD: \srod_konfin_ae/srodki.fml
::----------------------------------------------------------------------------------------------------------------------
exec('spr_zsdo','fst')


\ae_srsr_kondod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Po redakcji pola tabeli SRSR.KONDOD
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
exec('spr_zsdo','fst')


\be_srsr_dplp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed radakcją pola SRSR.DPLP
::----------------------------------------------------------------------------------------------------------------------
exec('data_przejscia','fst','P','SRSR')


\be_srsr_dplf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed radakcją pola SRSR.DPLF
::----------------------------------------------------------------------------------------------------------------------
exec('data_przejscia','fst','F','SRSR')


\be_srsr_dpld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed radakcją pola SRSR.DPLD
::----------------------------------------------------------------------------------------------------------------------
{? SRD.TOR_D || exec('data_przejscia','fst','D','SRSR') || 0 ?}


\be_srsr_de
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed redakcją pola SRSR.DE
::   WY: 1
::  OLD: \PRZ_DZ/estra.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()=date(0,0,0) || fld(SRSR.DZ) ?};
1


\ae_srsr_de
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola SRSR.DE, formuła ustala pierwszy okres ewidencji w systemie
::----------------------------------------------------------------------------------------------------------------------
_out:=1;
_okres:=null;
:: dla rzeczywistych środków
{? SRSR.DE<>date(0,0,0) & (5+SRSR.name())+1='r'
||
   {? SSTALE.AO().POCZ<>date(0,0,0) & SRSR.DE>=SSTALE.AO().POCZ
   || _okres:=exec('find_okro_f','fst',SRSR.DE)
   |? SRSR.DE>=SSTALE.AR().POCZ_ROK & SRSR.DE<SSTALE.AO().POCZ
   || _okres:=exec('find_okro_f','fst',SRSR.DE);
     {? _okres<>null
     || {? FUN.ask('Data eksploatacji (%1) wcześniejsza niż początek bieżącego okresu.\n'
                   'Pierwszym okresem ewidencji ma być okres bieżący?\n'
                   'Jeśli nie, program przyjmie okres zgodny z datą eksploatacji.'@[$SRSR.DE])
        || _okres:=exec('find_okro_f','fst',SSTALE.AO().POCZ)
        ?}
     ?}
   |? SRSR.DE>SSTALE.AR().KON_ROK
   || FUN.emsg('Data eksploatacji nie może być późniejsza niż koniec bieżącego roku (%1)'@[$SSTALE.AR().KON_ROK]);
      _out:=0
   |? SRSR.DE<SSTALE.AR().POCZ_ROK
   || {? FUN.ask('Data eksploatacji (%1) wcześniejsza niż początek bieżącego roku '
                 '(%2). Poprawić?'@[$SRSR.DE,$SSTALE.AR().POCZ_ROK])
      || _okres:=exec('find_okro_f','fst',SRSR.DE);
         {? _okres<>null
         ||  {? FUN.ask('Pierwszym okresem ewidencji ma być okres bieżący?\n'
                         'Jeśli nie, program przyjmie okres zgodny z datą eksploatacji.'@)
             || _okres:=exec('find_okro_f','fst',SSTALE.AO().POCZ)
             ?}
         || {? FUN.ask('Pierwszym okresem ewidencji ma być okres bieżący?\n'
                       'Jeśli nie, program przyjmie pierwszy okres bieżącego roku.'@)
            || _okres:=exec('find_okro_f','fst',SSTALE.AO().POCZ)
            || _okres:=exec('find_okro_f','fst',SSTALE.AR().POCZ_ROK)
            ?}
         ?}
      || _out:=1
      ?}
   ?};
   {? _okres<>null
   || OKRO_F.cntx_psh();
      OKRO_F.prefix();
      {? OKRO_F.seek(_okres)
      || SRSR.OKRO_F:=OKRO_F.ref();
         {? SRSR.OKRO_F<>null || SRSR.ROK_F:=SRSR.OKRO_F().ROK || SRSR.ROK_F:=null ?}
      ?};
      OKRO_F.cntx_pop()
   ?}
:: dla środków w planach amrotyzacji
|? SRSR.DE<>date(0,0,0) & (5+SRSR.name())+1<>'r'
|| {? SRSR.DE~1>SRSP.DO
   || FUN.emsg('Rok wprowadzenia do eksploatacji (%1) nie może być późniejszy niż'
               ' rok końcowy planu amortyzacji (%2).'@[$(SRSR.DE~1),$SRSP.DO]);
      _out:=0
   ?};
   {? _out
   || {? SRSR.ROK=0 & SRSR.DE~1>=SRSP.OD & SRSR.DE~1<=SRSP.DO
      || SRSR.ROK:=SRSR.DE~1
      ?};
      {? SRSR.OKRES=0 & SRSR.DE~1>=SRSP.OD & SRSR.DE~1<=SRSP.DO
      || SRSR.OKRES:=SRSR.DE~2
      ?}
   ?}
?};
:: weryfikacja zgodności klasyfikacji środków z okresem wprowadzenia do eksploatacji
{? (5+SRSR.name())+1='r' & SRSR.ROK<>SRSR.OKRO_F().RES || SRSR.ROK:=SRSR.OKRO_F().RES ?};
{? (5+SRSR.name())+1='r' & SRSR.OKRES<>SRSR.OKRO_F().OES || SRSR.OKRES:=SRSR.OKRO_F().OES ?};
_rok:={? SRSR.ROK<>0 | (5+SRSR.name())+1<>'r' || SRSR.ROK || SRSR.OKRO_F().RES ?};
_kst:=exec('kst_obow','fst_kst',_rok,1);
{? SRSR.GRP<>'E'
|| {? _kst<>EDIT_ES.TAB_KRST || EDIT_ES.TAB_KRST:=_kst ?};
   {? SRSR.GR<>null & SRSR.GR().KST<>_kst
   || STER.KST:=_kst;
      EDIT_ES.TAB_KRST:=_kst;
      TAM.cntx_psh();
      TAM.index('KST');
      TAM.prefix(_kst,SRSR.GR().GR,);
      {? TAM.first() || SRSR.GR:=TAM.ref() || SRSR.GR:=null ?};
      TAM.cntx_pop();
      EDIT_ES.TAB_KRST:=_kst
   ?}
?};
{? SRSR.DE<>date(0,0,0) & SRSR.DE<date(2019,1,1) || _enable:=1 || _enable:=0 ?};
SRSR.efld_opt(SRSR.win_edit('?'), 'enable='+$_enable,, 'KURS_EUR');
SRSR.efld_opt(SRSR.win_edit('?'), 'enable='+$_enable,, 'EURO');
_out


\ae_srsr_sez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PJ] [8.70]
:: OPIS: formula po redakcji pola SRSR.S
::  OLD: \ae_sez/sezony.fml
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.S='N' || SRSR.SCH_SEZ:=null ?};
exec('akt_sez','fst');
1


\ae_srsr_schem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PJ] [8.70]
:: OPIS: po redakcji pola SRSR.SCH_SEZ
::  OLD: \ae_schem/sezony.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=1;
{? SRSR.SCH_SEZ=null
|| {? FUN.ask('Dla środka sezonowego należy określić schemat aktywnych miesięcy amortyzacji.\n'
              'Usunąć znacznik sezonowości dla środka?'@)
   || SRSR.S:='N'
   || _wy:=0
   ?}
|| {? SRSR.SCH_SEZ().LM=0
   || {? ~FUN.ask('Wybrany schemat jest pusty - amortyzacja\n'
                 'nie będzie naliczana dla żadnego z miesięcy.\n'
                 'Kontynuować?'@)
      || _wy:=0
      ?}
   ?}
?};
{? _wy=1 || exec('akt_sez','fst') ?};
_wy


\be_srsr_okro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.OKRO_F
::----------------------------------------------------------------------------------------------------------------------
0


\ae_srsr_okro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola SRSR.OKRO_F
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.OKRO_F<>null & SRSR.OKRO_F().POCZ<SRSR.DE
|| FUN.emsg('Pierwszy okres ewidencjonowania nie może być wcześniejszy niż data eksploatacji środka.'@);
   0
|| SRSR.ROK_F:={? SRSR.OKRO_F=null || null || SRSR.OKRO_F().ROK ?};
   1
?}


\be_srsr_stad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.STAD
::----------------------------------------------------------------------------------------------------------------------
SRD.TOR_D & SRSR.MD().K<>'UJD'


\be_srsr_ward
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.WARD
::----------------------------------------------------------------------------------------------------------------------
SRD.TOR_D


\be_srsr_umod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.UMOD
::----------------------------------------------------------------------------------------------------------------------
SRD.TOR_D


\be_srsr_netd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.NETD
::----------------------------------------------------------------------------------------------------------------------
{? SRD.TOR_D
|| fld((SRSR.WARD-SRSR.UMOD)$FINFO.DOKL);
   1
|| 0
?}


\be_srsr_stap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.STAP
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.MP().K='UJP' || 0 || 1 ?}


\be_srsr_staf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRSR.STAF
::  OLD: \st_pred/zuzycie.fml
::----------------------------------------------------------------------------------------------------------------------
(1+SRSR.MF().T<>'N' & SRSR.MF().K<>'UJB') | SRSR.MF=null


\be_srsr_pomi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed redakcja pola tabeli SRSR.POM
::----------------------------------------------------------------------------------------------------------------------
{? OPERATOR.DEPT=null & SRSR.ODD<>null
|| OPERATOR.DEPT:=SRSR.ODD;
   __DEPT:=1
?};
1


\ae_srsr_pomi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Po redakcji pola tabeli SRSR.POM
::  OLD: \ae_pom_s/slowniki.fml
::----------------------------------------------------------------------------------------------------------------------
{? __DEPT=1
|| OPERATOR.DEPT:=null;
   __DEPT:=0
?};
1


\be_srsr_ostatek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola tabeli SRSR.OSTATEK
::  OLD: \be_ostat/zuzycie.fml
::----------------------------------------------------------------------------------------------------------------------
1+SRSR.MF().T<>'D'


\be_srsr_dokprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola tabeli SRSR.DOKPRZ
::----------------------------------------------------------------------------------------------------------------------
0


\be_srst_rzuz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola tabeli SRST.RZUZ (jeżeli amortyzacja od następnego miesiąca to brak redakcji)
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRST.MF().T='N' & SRST.MF().MP=1 & SRST.SRSR().OKRO_F=SRST.OKRO_F
|| 0
|| 1
?}


\be_srst_pzuz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola tabeli SRST.PZUZ (jeżeli amortyzacja od następnego miesiąca to brak redakcji)
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRST.MF().T='N' & SRST.MF().MP=1 & SRST.SRSR().OKRO_F=SRST.OKRO_F
|| 0
|| 1
?}


\konta_kosztowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wyświetlanie kont kosztowych dla środka
::----------------------------------------------------------------------------------------------------------------------
_tytul:='Zestawy kont kosztowych środka: %1'@[SRST.NRI];
_win:=ZSKON.grp_make(_tytul,"",'zskon_srst',5,5);
_tytul:='Zestaw podatkowy: '+SRST.KONPOD().KOD;
ZSKON.grp_sel(_win,KKOSZ,'KKOSZWER',_tytul,,,,12,"exec('kkosz_p','fst')",,,,'maximized');
_tytul:='Zestaw bilansowy: '+SRST.KONFIN().KOD;
ZSKON.grp_sel(_win,KKOSZ,'KKOSZWER',_tytul,,,,12,"exec('kkosz_f','fst')",,,,'maximized');
{? FINFO.TOR_D='T' & SRST.KONDOD<>null
|| _tytul:='Zestaw dodatkowy: '+SRST.KONDOD().KOD;
   ZSKON.grp_sel(_win,KKOSZ,'KKOSZWER',_tytul,,,,12,"exec('kkosz_d','fst')",,,,'maximized')
?};
ZSKON.win_sel(_win);

_loop:=1;
{! |?
   ZSKON.select();
   _pod:=_fin:=_dod:=0;
   _pod:=exec('kontrol_zestaw','fst',SRST.KONPOD,SRST.KONPOD().KOD);
   {? _pod || _fin:=exec('kontrol_zestaw','fst',SRST.KONFIN,SRST.KONFIN().KOD) ?};
   {? _pod & _fin || _dod:=FINFO.TOR_D='N' | exec('kontrol_zestaw','fst',SRST.KONDOD,SRST.KONDOD().KOD) ?};
   {? _pod & _fin & _dod || _loop:=0 ?};
   _loop
!}


\konta_srsw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wyświetlanie kont kosztowych dla składnika wartości środka
::----------------------------------------------------------------------------------------------------------------------
_tytul:='Zestawy kont kosztowych bieżącego składnika'@;
_win:=ZSKON.grp_make(_tytul,"",'zskon_srsw',5,5);
_tytul:='Zestaw podatkowy: '+SRSW.KONPOD().KOD;
KKOSZ.actions('KKOSZWER','DPU:D',,1);
ZSKON.grp_sel(_win,KKOSZ,'KKOSZWER',_tytul,,,,12,"exec('kkosz_p_w','fst')",,,,'maximized');
_tytul:='Zestaw bilansowy: '+SRSW.KONFIN().KOD;
ZSKON.grp_sel(_win,KKOSZ,'KKOSZWER',_tytul,,,,12,"exec('kkosz_f_w','fst')",,,,'maximized');
{? FINFO.TOR_D='T' & SRSW.KONDOD<>null
|| _tytul:='Zestaw dodatkowy: '+SRSW.KONDOD().KOD;
   ZSKON.grp_sel(_win,KKOSZ,'KKOSZWER',_tytul,,,,12,"exec('kkosz_d_w','fst')",,,,'maximized')
?};
ZSKON.win_sel(_win);
ZSKON.select();
KKOSZ.actions('KKOSZWER','',,1)


\kontrol_zestaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła kontrolująca poprawność zestawu kont
::   WE: _a - wskazanie na zestaw kont
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_PROCENT:=0;
KKOSZ.cntx_psh();
KKOSZ.index('KONTO');
KKOSZ.prefix(_a);
{? KKOSZ.first()
|| {! |?
      _PROCENT+=KKOSZ.PR;
      KKOSZ.next()
   !}
?};
KKOSZ.cntx_pop();
{? _PROCENT$2>100 | _PROCENT<=0
|| FUN.emsg('Zestaw %1 jest niepoprawnie zdefiniowany.'@[_b]);
   0
|? _PROCENT>0 & _PROCENT<100
|| FUN.ask('Suma udziałów kont wchodzących w skład zestawu %1 jest mniejsza niż 100%%. Kontynuować?'@[_b])
|| 1
?}


\kkosz_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Odświeżanie zakładki kont kosztowych dla środka
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='P';
SRST.KONPOD();
KKOSZ.index('KONTO');
KKOSZ.prefix(SRST.KONPOD)


\kkosz_p_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Odświeżanie zakładki kont kosztowych dla składnika
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='P';
SRSW.KONPOD();
KKOSZ.index('KONTO');
KKOSZ.prefix(SRSW.KONPOD)


\kkosz_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Odświeżanie zakładki kont kosztowych dla środka
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='F';
SRST.KONFIN();
KKOSZ.index('KONTO');
KKOSZ.prefix(SRST.KONFIN)


\kkosz_f_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Odświeżanie zakładki kont kosztowych dla składnika
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='F';
SRSW.KONFIN();
KKOSZ.index('KONTO');
KKOSZ.prefix(SRSW.KONFIN)


\kkosz_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Odświeżanie zakładki kont kosztowych dla środka
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='D';
SRST.KONDOD();
KKOSZ.index('KONTO');
KKOSZ.prefix(SRST.KONDOD)


\kkosz_d_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Odświeżanie zakładki kont kosztowych dla środka
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='D';
SRSW.KONDOD();
KKOSZ.index('KONTO');
KKOSZ.prefix(SRSW.KONDOD)


\druk_srsr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wydruki dla środka
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','','fst_z*')


\srdo_druk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Druk bieżącego dokumentu środka
::----------------------------------------------------------------------------------------------------------------------
{? SRDO.TYP().RODZ='P'
|| exec('rep_exec','#b_report','','fst_dok_p',,,,,,,,'W')
|? SRDO.TYP().RODZ='W'
|| exec('rep_exec','#b_report','','fst_dok_w',,,,,,,,'W')
|? SRDO.TYP().RODZ='L' | SRDO.TYP().RODZ='D'
|| exec('rep_exec','#b_report','','fst_dok_l',,,,,,,,'W')
|? SRDO.TYP().RODZ='M'
|| exec('rep_exec','#b_report','','fst_dok_m',,,,,,,,'W')
|? SRDO.TYP().RODZ='I'
|| exec('rep_exec','#b_report','','fst_dok_i',,,,,,,,'W')
?}


\tsk_zkla
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Okno WER tabeli TSK - formuła przed obsługą, w oknie grupowym
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(208)='N'
|| _tmp:='N'
|| _tmp:=''
?};
TSK.cntx_psh();
EDIT_ES.TSK:='T';
EDIT_ES.R:='T';
EDIT_ES.NISKO:='';
{? OPERATOR.DEPT=null
|| TST.index('MAIN')
|| TST.index('MAIN_O')
?};
{? TSK.size()>0
|| SRD.setPriv('FST_EWI_DZRK');
   TST.actions('WER','',,1);
   TST.btn_sopt('WER','btn_tst_add','state=normal');

   {? TSK.TREE<>null
   || {? OPERATOR.DEPT=null
      || TST.prefix(SSTALE.AO,TSK.TREE,TSK.ref())
      || TST.prefix(SSTALE.AO,OPERATOR.DEPT,TSK.TREE,TSK.ref())
      ?}
   || {? OPERATOR.DEPT=null
      || TST.prefix(SSTALE.AO,#TSK.ref())
      || TST.prefix(SSTALE.AO,OPERATOR.DEPT,#TSK.ref())
      ?}
   ?};
   {? TST.first()
   || SRDO.btn_sopt('WER','btn_srdo_add','state=normal');
      SRDO.actions('WER',''+_tmp,,1)
   ?}
|| TST.prefix(null);
   TST.actions('WER','D:D',,1);
   SRD.setPriv('FST_EWI_DZRK');
   SRD.READONLY:='T';
   TST.btn_sopt('WER','btn_tst_add','state=grayed');

   SRDO.btn_sopt('WER','btn_srdo_add','state=grayed');
   SRDO.actions('WER','D'+_tmp+':D',,1)
?};
grp_disp(TST,'WER');
TSK.cntx_pop()


\tst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Okno WER tabeli TST - formuła przed obsługą, w oknie grupowym
::----------------------------------------------------------------------------------------------------------------------
exec('dok_show_k','fst')


\create_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Utworzenie dynamicznego okna obszaru roboczego FST_EWI
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__CTR');
__CTR:=obj_new('BTAB','BBLOB','TAB','WIN_ID','WIN_ACR','DIR_SEP','DND');
__CTR.BTAB:='DOKUM';
__CTR.TAB:='SRSR';
__CTR.BBLOB:='DOKUM';
__CTR.WIN_ACR:=exec('mk_ctr','srsr_zal','srst_dokum_ctr',':');
__CTR.WIN_ID:=-(1-__CTR.WIN_ACR);
__CTR.DIR_SEP:=exec('dir_sep','srsr_zal');
__CTR.DND:=1;
_befor:="exec('bobs_dokum','srsr_zal',SRSR.Z='T' | SRSR.ZB='T' | SRD.READONLY='T')";

ODD.prefix();
ODD.f_clear();
ODD.f_set('OD,N',
    'left join USERSDEP using(USERSDEP.DEPT,ODD.REFERENCE)',
    '(:_a=1 or USERSDEP.USERS=:_b) and ODD.FIRMA=:_c',Perm.hasFull('FJKS'),OPERATOR.USER,REF.FIRMA);

VAR_DEL.delete('__wodd');
{? OPERATOR.DEPT=null
|| _odd:=ODD.f_size();
   {? _odd>1
   || __wodd:=ODD.mk_sel('J. księgowe'@,'P',0,'odd_srst',,,,,'U');
      ODD.win_fld(__wodd,ODD,'OD',,,10,,,'J. księgowa'@)
   ?}
|| _odd:=1
?};

_title:='';
{? var_press('__DTREE') & __DTREE>0
|| _wer:=SRST.grp_make(_title,,'dsrst_wer',,,"{? var_press('srstvc')>0 & srstvc=1
                                              || VAR_DEL.delete('srstvc')
                                              || VAR_DEL.delete('srstvc'); exec('exit','zws','Esc')
                                              ?}")
|| _wer:=SRST.grp_make(_title,,'srst_wer',,,"{? var_press('srstvc')>0 & srstvc=1
                                             || VAR_DEL.delete('srstvc')
                                             || VAR_DEL.delete('srstvc'); exec('exit','zws','Esc')
                                             ?}")
?};

:: pierwsza zakładka - kartoteka środków trwałych
_ftabsel:='{? var_pres(\'__TABSEL\')>0 & __TABSEL=\'NISKOCENNE\' || __TABSEL:=\'\'; tab_sel(2,\'panel0\') ?}';
_far:=$('exec(\'dok_show\',\'fst\');'+_ftabsel+';'
       +'exec(\'dokum_rfr\',\'srsr_zal\',\':'+__CTR.WIN_ID+'\',\''+__CTR.WIN_ACR+'\');'
       +'exec(\'srsr_rfr\',\'wyp_head\')');
_zakl:='Środki trwałe';
{? var_press('__DTREE') & __DTREE>0
|| {? _odd>1
   || _faro:=$('{? var_press(\'__wodd_s\')<=0 | __wodd_s=0 || grp_disp(SRST,\'DWER\');'
              +'exec(\'dok_show\',\'fst\');'
              +_ftabsel
              +';'
              +'exec(\'dokum_rfr\',\'srsr_zal\',\':'
              +__CTR.WIN_ID+'\',\''+__CTR.WIN_ACR+'\') ?}');
      _fara:=$('{? var_press(\'__wodd_s\')<=0 | __wodd_s=0 || exec(\'odd_filtr\',\'fst\');grp_disp(SRST,\'DWER\');'
             +'exec(\'dokum_rfr\',\'srsr_zal\',\':'+__CTR.WIN_ID+'\',\''+__CTR.WIN_ACR+'\') ?}');
      SRST.grp_sel(_wer,ODD,__wodd,_zakl,_faro,,,22,_fara,,,,'maximized','zsrst_odd');
      SRST.tab_splt(_wer,,'vertical','tabo');
      SRST.grp_sel(_wer,SRST,'DWER',,_far,,,22,"exec('trwale','fst')",,,1,'maximized','zsrst_dwer')
   || SRST.grp_sel(_wer,SRST,'DWER_O',_zakl,_far,,,22,"exec('trwale','fst')",,,,'maximized','zsrst_dwer_o')
   ?}
|| SRST.grp_sel(_wer,SRST,'WER',_zakl,_far,,,22,"exec('trwale','fst')",,,,'maximized','zsrst_wer')
?};
task_attach('FST_EWI_ZASA');
task_attach('FST_EWI_DESN');

:: druga zakładka - kartoteka środków niskocennych
_far:=$('exec(\'dok_show\',\'fst\');'
       +'exec(\'dokum_rfr\',\'srsr_zal\',\':'+__CTR.WIN_ID+'\',\''+__CTR.WIN_ACR+'\');'
       +'exec(\'srsr_rfr\',\'wyp_head\')');
_zakl:='Środki niskocenne';
{? var_press('__DTREE') & __DTREE>0
|| {? _odd>1
   || _faro:=$('{? var_press(\'__wodd_s\')<=0 | __wodd_s=0 || grp_disp(SRST,\'DWER_N\');exec(\'dok_show\',\'fst\');exec(\'dokum_rfr\',\'srsr_zal\',\':'
              +__CTR.WIN_ID+'\',\''+__CTR.WIN_ACR+'\') ?}');
      _fara:=$('{? var_press(\'__wodd_s\')<=0 | __wodd_s=0 || exec(\'odd_filtr\',\'fst\');grp_disp(SRST,\'DWER_N\');'
             +'exec(\'dokum_rfr\',\'srsr_zal\',\':'+__CTR.WIN_ID+'\',\''+__CTR.WIN_ACR+'\') ?}');
      SRST.grp_sel(_wer,ODD,__wodd,_zakl,_faro,,,22,_fara,,,,'maximized','zsrst_odd_n');
      SRST.tab_splt(_wer,,'vertical','tabon');
      SRST.grp_sel(_wer,SRST,'DWER_N',,_far,,,22,"exec('niskocenne','fst')",,,,'maximized','zsrst_dwer_n')
   || SRST.grp_sel(_wer,SRST,'DWER_N_O',_zakl,_far,,,22,"exec('niskocenne','fst')",,,,'maximized','zsrst_dwer_n_o')
   ?}
|| SRST.grp_sel(_wer,SRST,'WER_N',_zakl,_far,,,22,"exec('niskocenne','fst')",,,,'maximized','zsrst_wer_n')
?};
task_attach('FST_EWI_ZASB');
task_attach('FST_EWI_DESR');

:: zakładka specjalna na środki sprzedane do innych firm grupy kapitałowej
{? FINFO.SPR_GRP='T'
|| _zakl:='Kartoteka środków zbytych na rzecz grupy';
   _far:=$('exec(\'dok_show\',\'fst\');'
          +'exec(\'dokum_rfr\',\'srsr_zal\',\':'+__CTR.WIN_ID+'\',\''+__CTR.WIN_ACR+'\');'
          +'exec(\'srsr_rfr\',\'wyp_head\')');
   SRST.grp_sel(_wer,SRST,'WER_S',_zakl,_far,,,22,"exec('zbyte','fst')",,,,'maximized','srst_sprz');
   task_attach('FST_EWI_ZASD');
   task_attach('FST_EWI_DESS');
   task_attach('FST_EWI_ZASA');
   task_attach('FST_EWI_DESN')
?};

:: trzecia zakładka - karoteka uproszczona
_zakl:='Kartoteka uproszczona';
_far:=$('exec(\'dok_show\',\'fst\');'
       +'exec(\'dokum_rfr\',\'srsr_zal\',\':'+__CTR.WIN_ID+'\',\''+__CTR.WIN_ACR+'\');'
       +'exec(\'srsr_rfr\',\'wyp_head\')');
SRST.grp_sel(_wer,SRST,'WER_U',_zakl,_far,,,22,"exec('uproszczone','fst')",,,,'maximized','zsrst_wer_u');
task_attach('FST_EWI_ZASD');
task_attach('FST_EWI_DESS');

:: czwarta zakładka - środki według klasyfikacji dodatkowych
_far:=$('exec(\'tsk_zkla\',\'fst\');'
       +'exec(\'dokum_rfr\',\'srsr_zal\',\':'+__CTR.WIN_ID+'\',\''+__CTR.WIN_ACR+'\');'
       +'exec(\'srsr_rfr\',\'wyp_head\')');
_zakl:='Klasyfikacje środków';
SRST.grp_sel(_wer,TSK,'WER',_zakl,_far,,,22,"exec('tsk_zkla','fst')",,,,'maximized','srst_dod');
task_attach('FST_EWI_ZKLA');
task_attach('FST_EWI_DESN');
task_attach('FST_EWI_DESR');
task_attach('FST_EWI_DESS');
TSK.win_fml('WER',,'NAZ',,'ICON_BEFORE',"'xwin16.png:'+
            {? TSK.TREE=0
            || {? TSK.tr_state()=1 || '75' || '74' ?}
            || '76'
            ?}");
:: drag & drop
TSK.dnd_sel('WER',, 'records.TST', "exec('tst_drag_drop','fst')");

SRST.tab_splt(_wer,,'vertical','tabk',',25%');
_far:=$('exec(\'dok_show_k\',\'fst\');'
       +'exec(\'dokum_rfr\',\'srsr_zal\',\':'+__CTR.WIN_ID+'\',\''+__CTR.WIN_ACR+'\');'
       +'exec(\'srsr_rfr\',\'wyp_head\')');
SRST.grp_sel(_wer,TST,'WER',,_far,,,22,"exec('tst','fst')",,,,'maximized','srst_tst_wer');

:: dolny panel z dokumentami i załącznikami
SRST.grp_splt(_wer,,'horizontal','tab2',28);
SRST.grp_sel(_wer,SRDO,'WER','Wszystkie dokumenty'@,"",,,6,"exec('dok_wer_all','fst')",,,,'maximized','zsrdo_wer');
task_attach('FST_EWI_DRDA');
task_attach('FST_EWI_DRDZ');
task_attach('FST_EWI_DRDF');
task_attach('FST_EWI_DRDM');
task_attach('FST_EWI_DRDK');
SRST.grp_sel(_wer,SRDO,'WER_W','Dokumenty wartościowe'@,"",,,6,"exec('dok_wer_w','fst')",,,,'maximized','zsrdo_werw');
task_attach('FST_EWI_DRDF');
SRST.grp_sel(_wer,SRDO,'WER_L','Dokumenty zmiany właściwości'@,"",,,6,"exec('dok_wer_l','fst')",,,,'maximized','zsrdo_werl');
task_attach('FST_EWI_DRDZ');
SRST.grp_sel(_wer,SRDO,'WER_M','Dokumenty zmiany metody'@,"",,,6,"exec('dok_wer_m','fst')",,,,'maximized','zsrdo_werm');
task_attach('FST_EWI_DRDM');
SRST.grp_sel(_wer,SRDO,'WER_I','Dokumenty innych zmian'@,"",,,6,"exec('dok_wer_i','fst')",,,,'maximized','zsrdo_weri');
task_attach('FST_EWI_DRDK');
SRST.grp_sel(_wer,SRDO,'WER_P','Dokument przyjęcia'@,"",,,6,"exec('dok_wer_p','fst')",,,,'maximized','zsrdo_werp');
task_attach('FST_EWI_DRDA');
SRST.grp_ctr(_wer,DOKUM,__CTR.WIN_ACR,__CTR.WIN_ID,'Załączniki'@,,,,,,_befor,,,'maximized');
SRST.grp_sel(_wer,KARO,'WER_SRSR','Wydane wyposażenie'@,"",,,6,"exec('srsr_bm','wyp_head')",,,,'maximized','zsrdo_wyp');
task_attach('WYP_LWW_PWYD');
task_attach('WYP_LWW_DWYD');
SRST.win_sel(_wer);
_wer


\tst_drag_drop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Obsługa drag & drop w oknie klasyfikacji dodatkowych
::----------------------------------------------------------------------------------------------------------------------
KOMM.init(100,,'Uwagi dotyczące przypisywania środków do typów w klasyfikacjach.'@);
TST.cntx_psh(); TSR.cntx_psh(); TSK.cntx_psh();
_mask:=dnd_info('table_name');
_dest:=dnd_info('dest_record');
_tab:=dnd_info('dropped_records');
_loop:=_tab.first();
{? _dest<>null
|| {! |? _loop |!
      {? TST.seek(_tab.REF,_mask)
      || _src:=TST.TSK;
         _nri:=TST.SRST().NRI;
         _s_tree:=TST.TSK().TREE;
         do();
:: dodawanie w nowym miejscu
            _dalej:=0;
            TST.cntx_psh(); TSR.cntx_psh(); TSK.cntx_psh();
            TSK.prefix();
            {? TSK.seek(_dest,TSK.name())
            || _d_tree:=TSK.TREE;
               {? TSK.TREE<>null
               || {? _s_tree=_d_tree
                  || {? _src<>TSK.ref()
                     || TST.SRST().SRSR();
                        TSR.index('TYPK'); TSR.prefix();
                        {? ~TSR.find_key(SRSR.ref(),TSK.ref())
                        || TST.index('SRST'); TST.prefix();
                           TSR.SRSR:=SRSR.ref();
                           TSR.TYP:=TSK.ref();
                           {? TSR.add()
                           || SRST.cntx_psh();
                              SRST.index('SROD'); SRST.prefix(SRSR.ref());
                              {? SRST.first()
                              || {! |?
                                    {? ~TST.find_key(SRST.ref(),TSK.ref())
                                    || TST.SRST:=SRST.ref();
                                       TST.TSK:=TSK.ref();
                                       TST.CLASS:=TST.TSK().TREE;
                                       TST.ODD:=TST.SRST().ODD;
                                       TST.JORG:=TST.SRST().JORG;
                                       TST.OSOBA:=TST.SRST().OSOBA;
                                       TST.POM:=TST.SRST().POM;
                                       TST.GR:=TST.SRST().GR;
                                       TST.add()
                                     ?};
                                     SRST.next()
                                 !}
                              ?};
                              _dalej:=1;
                              SRST.cntx_pop()
                           ?}
                        ?}
                     || _txt:='Źródłowy typ i typ docelowy są identyczne, przeniesienie niemożliwe.'@;
                        KOMM.add(_nri+' - '+_txt)
                     ?}
                  || _txt:='Przenoszenie środków możliwe jest między typami tej samej klasyfikacji.'@;
                     KOMM.add(_nri+' - '+_txt)
                  ?}
               || _txt:='Należy wskazać typ środka, nie klasyfikację.'@;
                  KOMM.add(_nri+' - '+_txt)
               ?}
            ?};
:: usuwanie z poprzedniego typu, jeżeli udało się dodać
            {? _dalej
            || TST.prefix();
               {? TST.seek(_tab.REF,_mask)
               || _ref:=TST.SRST().SRSR;
                  _typ:=TST.TSK;
                  _tree:=TST.TSK().TREE;
                  TST.index('TST'); TST.prefix(_typ,_ref);
                  {? TST.first()
                  || {! |? TST.del() !}
                  ?};
                  {? TST.size()=0
                  || TSR.index('TYPK'); TSR.prefix(_ref,_typ);
                     {? TSR.first() || TSR.del() ?}
                  ?}
               ?}
            ?};
            TST.cntx_pop();  TSR.cntx_pop(); TSK.cntx_pop();
         end()
      ?};
      _loop:=_tab.next()
   !}
|| KOMM.add('Nie wskazano poprawnego docelowego typu środka.'@)
?};
TST.cntx_pop(); TSR.cntx_pop(); TSK.cntx_pop();
{? ~KOMM.empty() || KOMM.select() ?}


\be_srdt_srst_met
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redakcją pola FINFO.SRST_MET
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZ:='M';
1


\srst_show_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na Wyświetl w tabeli SRST
::----------------------------------------------------------------------------------------------------------------------
SRD.showAsset()


\srsr_tab_hist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyświetla historię zmian wartości bieżącego środka
::   WE: [_a] - jeżeli _a i _a='P' to wersja dla planów amortyzacji
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & type_of(_a)=type_of('a') & _a='P' || _a:='PLAN' || _a:='REAL' ?};
VAR_DEL.delete('__SRST_W');
{? _a<>'PLAN' || SRST.SRSR() ?};
_sel:=SRST.win_sel('?');
SRST.cntx_psh();
SRST.index('SROD');
SRST.prefix(SRSR.ref());
__SRST_W:=SRST.mk_sel('Historia zmian wartości środka/elementu: %1 %2 '@[SRST.NRI,SRST.NST],'P',0,'_tab_hist',10,5,24,,'U');
{? _a='PLAN'
|| SRST.win_fld(__SRST_W,SRST,'ROK',,,13,,,'Rok podatkowy'@,,'Rok podatkowy'@);
   SRST.win_fld(__SRST_W,SRST,'OKRES',,,13,,,'Okres podatkowy'@,,'Okres podatkowy'@)
|| SRST.win_fld(__SRST_W,SRST,'ROK_F','NAZ',,10,,,'Rok bilansowy'@,,'Rok bilansowy'@);
   SRST.win_fld(__SRST_W,SRST,'OKRO_F','NAZ',,15,,,'Okres bilansowy'@,,'Okres bilansowy'@);
   SRST.win_fld(__SRST_W,SRST,'OKRO_F','RES',,13,,,'Rok podatkowy'@,,'Rok podatkowy'@);
   SRST.win_fld(__SRST_W,SRST,'OKRO_F','OES',,13,,,'Okres podatkowy'@,,'Okres podatkowy'@)
?};
SRST.win_fld(__SRST_W,SRST,'NAL',,,6,,,'Nal.'@,,'Naliczono'@,2,,"'T'","'N'");
SRST.win_fld(__SRST_W,SRST,'WARP',,,12,2,,'Wartość pod.'@,,'Wartość podatkowa'@);
SRST.win_fld(__SRST_W,SRST,'UMOP',,,12,2,,'Umorzenie pod.'@,,'Umorzenie podatkowe'@);
SRST.win_fld(__SRST_W,SRST,'NETP',,,12,2,,'Netto pod.'@,,'Netto podatkowo'@);
SRST.win_fld(__SRST_W,SRST,'WARF',,,12,2,,'Wartość bil.'@,,'Wartość bilansowa'@);
SRST.win_fld(__SRST_W,SRST,'UMOF',,,12,2,,'Umorzenie bil.'@,,'Umorzenie bilansowe'@);
SRST.win_fld(__SRST_W,SRST,'NETF',,,12,2,,'Netto bil.'@,,'Netto bilansowe'@);
{? _a<>'PLAN'
|| SRST.win_act(__SRST_W,,'Rekord',,,,"exec('rekprzed','color','SRST#02#')");
   SRST.win_act(__SRST_W,,'Formuła','Legenda'@@,,,,"exec('legenda','color','SRST#02#')")
?};
SRST.win_act(__SRST_W,,'Wyświetl',,,,,"exec('srst_show_a','fst')");
SRST.win_sel(__SRST_W);
SRST.select(,1,-1);
SRST.win_sel(_sel);
SRST.cntx_pop();
VAR_DEL.delete('__SRST_W')


\ile_m_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Ile miesięcy liczy wskazany rok podatkowy
::   WE: _a (INTEGER) - rok podatkowy
::   WY: ile miesięcy liczy wskazany rok podatkowy
::----------------------------------------------------------------------------------------------------------------------
_m:=0;
OKRO_F.cntx_psh();
OKRO_F.index('SRODKI');
OKRO_F.prefix(REF.FIRMA,_a);
{? OKRO_F.first()
|| {! |?
      {? OKRO_F.OES<>0 || _m+=1 ?};
      OKRO_F.next()
   !}
?};
OKRO_F.cntx_pop();
_m


\full_year
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła sprawdza czy wskazany rok jest pełnym 12 miesięcznym rokiem
::       a wskazany środek istniał przez cały rok i w trakcie roku nie zachodziły zmiany
::       wpływające na wysokość amortyzacji
::   WE: _a - SRSR.ref (wskazanie na środek), _b = Numer roku podatkowego,
::       _c - Tor amortyzacji ('P'/'F'/'D'),
::       _d - miesiac początkowy metody amortyzacji (0- bieżący, 1 - nastepny)
::   WY: 1/0 - czy jest to pełny 12 miesięczny rok
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
SRST.cntx_psh();
SRST.index('PODAT');
SRST.prefix(_a,_b);
{? SRST.find_key(1)
|| _metoda:={? _c='P' || SRST.MP |? _c='F' || SRST.MF |? _c='D' || SRST.MD ?};
   _stawka:={? _c='P' || SRST.STAP |? _c='F' || SRST.STAF |? _c='D' || SRST.STAD ?};
   _wk:={? _c='P' || SRST.WKP |? _c='F' || SRST.WKF |? _c='D' || SRST.WKD ?};
   _podst:={? _c='P' || SRST.WARP |? _c='F' || SRST.WARF |? _c='D' || SRST.WARD ?};
   {! |?
      {? SRST.OKRES>0 & SRST.OKRES<=12
      ||
         SRDO.cntx_psh();
         _srdo_find:=0;

         SRDO.index('PODAT');
         SRDO.prefix(SRST.SRSR,SRST.ROK);
         {? SRDO.first()
         || {! |?
               {? SRDO.OKRES=SRST.OKRES & SRDO.TYP=FINFO.SRST_MET & SRDO.AUTO='T'
               || _srdo_find:=1
               ?};
               _srdo_find=0 & SRDO.next()
            !}
         ?};

         {? _srdo_find=1
         || _m:=1
         || _m:=(_c='P' & SRST.MP=_metoda) | (_c='F' & SRST.MF=_metoda) | (_c='D' & SRST.MD=_metoda)
         ?};
         SRDO.cntx_pop();
         _s:=(_c='P' & SRST.STAP=_stawka) | (_c='F' & SRST.STAF=_stawka) | (_c='D' & SRST.STAD=_stawka);
         _w:=(_c='P' & SRST.WKP=_wk) | (_c='F' & SRST.WKF=_wk) | (_c='D' & SRST.WKD=_wk);
         _p:=(_c='P' & SRST.WARP=_podst) | (_c='F' & SRST.WARF=_podst) | (_c='D' & SRST.WARD=_podst);
         {? _m & _s & _w  & _p || _wy+=1 ?}
      ?};
      SRST.next() & SRST.OKRES<=12
   !}
?};
SRST.cntx_pop();

{? SRSR.ROK=_b & _d=1 || _wy-=1 ?};
_wy=12


\suma_amor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Sumuje amortyzacje dla wskazanego środka we wskazanym zakresie
::   WE: _a - SRSR.ref(), _b - numer roku podatkowego, _c - tor amortyzacji,
::       _d - numer pierwszego miesiąca do sumowania, _e - numer ostatniego miesiąca do sumowania
::   WY: suma amortyzacji
::----------------------------------------------------------------------------------------------------------------------
SRST.cntx_psh();
SRST.index('PODAT');
SRST.prefix();
_suma:=0;
{! _i:=_d.._e |!
   {? SRST.find_key(_a,_b,_i)
   || _suma+={? _c='P' || SRST.AMOP |? _c='F' || SRST.AMOF |? _c='D' || SRST.AMOD ?}
   ?}
!};
SRST.cntx_pop();
_suma


\be_srdo_max
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redakcją pola SRDO.MAX
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRST.MF().T<>'N' || 0 || 1 ?}


\be_srdo_oke
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redakcją pola SRDO.OKE
::----------------------------------------------------------------------------------------------------------------------
{? 1+SRST.MF().T<>'N' || 0 || 1 ?}


\be_srdo_sch_sez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redakcją pola SRDO.SCH_SEZ
::----------------------------------------------------------------------------------------------------------------------
{? SRDO.SEZ='T' || 1 || 0 ?}


\ae_srdo_sez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redakcji pola SRDO.SEZ
::----------------------------------------------------------------------------------------------------------------------
{? SRDO.SEZ='N'
|| SRDO.SCH_SEZ:=null;
   SRDO.efld_opt(SRDO.win_edit('?'),'editable=grayed',,'SCH_SEZ','KOD');SRDO.efld_opt(SRDO.win_edit('?'),'editable=grayed',,'SCH_SEZ','OPIS')
|| SRDO.efld_opt(SRDO.win_edit('?'),'editable=1',,'SCH_SEZ','KOD'); SRDO.efld_opt(SRDO.win_edit('?'),'editable=1',,'SCH_SEZ','OPIS')
?};1


\trig_a_srst_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Trigger po SRST.put()
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | (var_pres('__SRSTOF')>0 & __SRSTOF=1) || return ?};
{? SRST.GRP<>'T' || SRD.updateValueComp(SRST.ref()) ?};
{? SRST.KIND='N' || return ?};
TST.cntx_psh();
TST.index('SRST');
TST.prefix(SRST.ref());
{? TST.first()
|| {! |?
      TST.ODD:=TST.SRST().ODD;
      TST.JORG:=TST.SRST().JORG;
      TST.OSOBA:=TST.SRST().OSOBA;
      TST.POM:=TST.SRST().POM;
      TST.GR:=TST.SRST().GR;
      TST.put();
      TST.next()
   !}
?};
TST.cntx_pop();
~~


\trig_a_srst_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Trigger po SRST.add()
::----------------------------------------------------------------------------------------------------------------------
{? ~_a || return ?};
{? SRST.GRP<>'T' || SRD.updateValueComp(SRST.ref()) ?};
{? SRST.KIND='N' || return ?};
TST.cntx_psh();
TSR.cntx_psh();
TSR.index('TYPK');
TSR.prefix(SRST.SRSR);
{? TSR.first()
|| {! |?
      TST.index('SRST');
      TST.prefix(SRST.ref());
      TST.SRST:=SRST.ref();
      TST.TSK:=TSR.TYP;
      TST.CLASS:=TSR.TYP().TREE;
      TST.ODD:=TST.SRST().ODD;
      TST.JORG:=TST.SRST().JORG;
      TST.OSOBA:=TST.SRST().OSOBA;
      TST.POM:=TST.SRST().POM;
      TST.GR:=TST.SRST().GR;
      TST.add();
      TSR.next()
   !}
?};
TSR.cntx_pop();
TST.cntx_pop();
~~


\srst_view_change
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła dla: Funkcje -> Zmiana widoku (zmienia widok zwykły na drzwo i odwrotnie
::   WE: [_a] = 0/1
::       Opcjonalny parametr decyduje czy ma nastapić zmiana z drzewa na listę (0 lub brak) czy tylko przeładowanie
::       okien po zmianie parametrów pracy (1)
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('srstvc');
{? _=0 || _a:=0 ?};
{? ~_a
|| {? __DTREE>0 || __DTREE:=0 || __DTREE:=1 ?}
?};
__TABSEL:={? cur_win(1,0)*'_N' || 'NISKOCENNE' || '' ?};
srstvc:=1;
sel_exit()


\odd_count
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca liczbę j. księgowych w bieżącej firmie do których ma uprawnienia bieżący użytkownik
::   WY: Liczba jednostek księgowych
::----------------------------------------------------------------------------------------------------------------------
_ref:=ODD.ref();
ODD.cntx_psh();
ODD.prefix();
ODD.f_clear();
ODD.f_set('OD,N',
   'left join USERSDEP using(USERSDEP.DEPT,ODD.REFERENCE)',
   '(:_a=1 or USERSDEP.USERS=:_b) and ODD.FIRMA=:_c',Perm.hasFull('FJKS'),OPERATOR.USER,REF.FIRMA);
_odd:=ODD.f_size();
ODD.cntx_pop();
{? _ref || ODD.f_seek(_ref) ?};
_odd


\odd_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca ref() pierwszej j. księgowej w bieżącej firmie, do której ma uprawnienia bieżący użytkownik
::   WY: ODD.ref()
::----------------------------------------------------------------------------------------------------------------------
_odd:=null;
ODD.cntx_psh();
ODD.prefix();
ODD.f_clear();
ODD.f_set('OD,N',
   'left join USERSDEP using(USERSDEP.DEPT,ODD.REFERENCE)',
   '(:_a=1 or USERSDEP.USERS=:_b) and ODD.FIRMA=:_c',Perm.hasFull('FJKS'),OPERATOR.USER,REF.FIRMA);
{? ODD.f_first() || _odd:=ODD.ref() ?};
ODD.cntx_pop();
_odd


\odd_filtr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła ustawia filtr na tabeli ODD zależnie od uprawnień
::   WE: [_a] - jeżeli _a i _a=1 to wszystkie jednostki we wszystkich firmach
::----------------------------------------------------------------------------------------------------------------------
ODD.prefix();
ODD.f_clear();
{? _>0 & _a=1
|| ODD.f_set('OD,N',
     'left join USERSDEP using(USERSDEP.DEPT,ODD.REFERENCE)',
     '(:_a=1 or USERSDEP.USERS=:_b)',Perm.hasFull('FJKS'),OPERATOR.USER)
|| ODD.f_set('OD,N',
     'left join USERSDEP using(USERSDEP.DEPT,ODD.REFERENCE)',
     '(:_a=1 or USERSDEP.USERS=:_b) and ODD.FIRMA=:_c',Perm.hasFull('FJKS'),OPERATOR.USER,REF.FIRMA)
?}


\srst_wid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Ustawienia widoków środków trwałych
::----------------------------------------------------------------------------------------------------------------------
_r_user:=exec('user_ref','param_wydr',app_info('app_user'));
PARWYD.win_edit('SRSTTREE');
PARWYD.index('USER');
PARWYD.prefix(_r_user);
{? ~PARWYD.first() || exec('addpus','param_wydr',_r_user) ?};
{? PARWYD.edit()
|| PARWYD.put();
   exec('set_var','param_wydr')
?}


\get_srst_wid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Zwraca wartość pola PARWYD.SRST_WID dla bieżącego użytkownika
::----------------------------------------------------------------------------------------------------------------------
_wid:=0;
_r_user:=exec('user_ref','param_wydr',app_info('app_user'));
PARWYD.index('USER');
PARWYD.prefix(_r_user);
{? PARWYD.first() || _wid:=PARWYD.SRST_WID ?};
_wid


\get_srst_ele
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Zwraca wartość pola PARWYD.SRST_ELE dla bieżącego użytkownika
::----------------------------------------------------------------------------------------------------------------------
_ele:=0;
_r_user:=exec('user_ref','param_wydr',app_info('app_user'));
PARWYD.index('USER');
PARWYD.prefix(_r_user);
{? PARWYD.first() || _ele:=PARWYD.SRST_ELE ?};
_ele


\get_srst_root
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Zwraca ref nadrzędnego rekordu w przypadku elementu składowego zestawu środków
::   WE: SRST.ref()
::   WY: SRST.ref()
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
SRST.cntx_psh();
SRST.prefix();
{? SRST.seek(_a)
|| {? SRST.seek(SRST.TREE,SRST.name())
   || _ref:=SRST.ref()
   ?}
?};
SRST.cntx_pop();
_ref


\get_srsr_root
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Zwraca ref nadrzędnego rekordu w przypadku elementu składowego zestawu środków
::   WE: SRSR.ref()
::   WY: SRSR.ref()
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
SRSR.cntx_psh();
SRSR.prefix();
{? SRSR.seek(_a)
|| {? SRSR.seek(SRSR.TREE,SRSR.name())
   || _ref:=SRSR.ref()
   ?}
?};
SRSR.cntx_pop();
_ref


\parwyd_srst_ele
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redakcją pola PARWYD.SRST_ELE
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
{? PARWYD.SRST_WID=0 || 1 || 0 ?}


\ae_parwyd_wid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redakcji pola PARWYD.SRST_WID
::----------------------------------------------------------------------------------------------------------------------
{? PARWYD.SRST_WID=1 || PARWYD.SRST_ELE:=0 ?};
1


\be_srsr_wkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redagowaniem pola SRSR.WKP
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.MP=null | 1+SRSR.MP().T='D' | 1+SRSR.MP().T='L' || 1 || 0 ?}


\be_srsr_wkf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redagowaniem pola SRSR.WKF
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.MF=null | 1+SRSR.MF().T='D' | 1+SRSR.MF().T='L' || 1 || 0 ?}


\be_srsr_wkd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redagowaniem pola SRSR.WKD
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
{? FINFO.TOR_D='T' & (SRSR.MD=null | 1+SRSR.MD().T='D' | 1+SRSR.MD().T='L') || 1 || 0 ?}


\srsw_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Składniki wartości
::----------------------------------------------------------------------------------------------------------------------
{? SRST.GRP<>'T'
|| SRSW.win_sel('WER');
   _txt:=' ('+SRST.OKRO_F().NAZ+' '+SRST.ROK_F().NAZ+')';
   SRSW.hdr_sel(); SRSW.hdr_sel(_txt);
   SRSW.win_edit('RED');
   SRZF.win_dict('SEL');
   SRSW.index('SSRW');
   SRSW.prefix(SRST.ref());
   SRSW.select();
   SRSW.hdr_sel()
|| FUN.info('W przypadku zestawów środków składniki wartości można oglądać dla każdego\n'
            'z elementów składowych zestawu, nie są one dostępne na poziomie zestawu.'@)
?}


\srsw_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wyświetlanie bieżącego składnika wartości
::----------------------------------------------------------------------------------------------------------------------
SRSW.win_edit('RED');
{? FINFO.TOR_D='T'
|| SRSW.efld_opt('RED', 'enable=1',, 'WARD');
   SRSW.efld_opt('RED', 'enable=1',, 'UMOD');
   SRSW.efld_opt('RED', 'enable=1',, 'NETD');
   SRSW.efld_opt('RED', 'enable=1',, 'AMOD');
   SRSW.efld_opt('RED', 'enable=1',, 'KONDOD')
|| SRSW.efld_opt('RED', 'enable=0',, 'WARD');
   SRSW.efld_opt('RED', 'enable=0',, 'UMOD');
   SRSW.efld_opt('RED', 'enable=0',, 'NETD');
   SRSW.efld_opt('RED', 'enable=0',, 'AMOD');
   SRSW.efld_opt('RED', 'enable=0',, 'KONDOD')
?};
{? SRSW.TYP='W'
|| SRSW.efld_opt('RED', 'enable=0',, 'SRZF','NAZWA');
   SRSW.efld_opt('RED', 'enable=0',, 'SRZF','DATA')
|? SRSW.TYP='D' | SRSW.TYP='U'
|| SRSW.efld_opt('RED', 'enable=1',, 'SRZF','NAZWA');
   SRSW.efld_opt('RED', 'enable=1',, 'SRZF','DATA')
?};
SRSW.display()


\sum_ulga
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Suma ulg inwentycyjnych dla bieżącego środka
::   WE: Wskazanie na środek (SRSR.ref())
::   WY: Suma kwot pełnych ulg bieżącego środka
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
SRZF.cntx_psh();
SRZF.index('SRODEKU');
SRZF.prefix(_a,'U');
{? SRZF.first()
|| {! |?
      _wy+=SRZF.WARP_P;
      SRZF.next()
   !}
?};
SRZF.cntx_pop();
_wy


\sum_srsw_amor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła sumuje amortyzację dla składnika wartości od początku do wskazanego roku i okresu
::   WE: _a - wskazanie na dofinansowanie, _b - do którego roku podatkowego,
::       _c - do którego okresu podatkowego, _d - tor amortyzacji ('P', 'F' lub 'D'))
::       [_e] - jeśli = 1 - to suma tylko w obrębie wskazanego roku
::   WY: Suma amortyzacji dla składnika wartości
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? _<5 || _e:=0 ?};
SRSW.cntx_psh();
SRSW.index('PODAT');
SRSW.prefix(_a);
{? SRSW.first()
|| _dalej:=1;
   {! |?
      SRSW.OKRO_F();
      {? (_e=0 & OKRO_F.RES<_b | (OKRO_F.RES=_b & OKRO_F.OES<_c))
         | (_e=1 & OKRO_F.RES=_b & OKRO_F.OES<=_c)
      || {? _d='P' || _wy+=SRSW.AMOP
         |? _d='F' || _wy+=SRSW.AMOF
         |? _d='D' || _wy+=SRSW.AMOD
         ?}
      || _dalej:=0
      ?};
      _dalej & SRSW.next()
   !}
?};
SRSW.cntx_pop();
_wy


\sum_srsw_do
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła sumuje amortyzację dla wskaznego składnika wartości od początku do wskazanego roku i okresu
::   WE: _a - środek (SRSR.ref())
::       _b - typ składnika 'W', 'D', 'U'
::       _c - do którego roku podatkowego
::       _d - do którego okresu podatkowego (nie włącznie!),
::       _e - tor amortyzacji ('P', 'F' lub 'D'))
::   WY: Suma amortyzacji dla składnika wartości
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
SRSW.cntx_psh();
SRSW.index('PODAT2');
SRSW.prefix(_a,_b);
{? SRSW.first()
|| _dalej:=1;
   {! |?
      {? (SRSW.OKRO_F().RES<_c | (SRSW.OKRO_F().RES=_c & SRSW.OKRO_F().OES<_d))
      || {? _e='P' || _wy+=SRSW.AMOP
         |? _e='F' || _wy+=SRSW.AMOF
         |? _e='D' || _wy+=SRSW.AMOD
         ?}
      || _dalej:=0
      ?};
      _dalej & SRSW.next()
   !}
?};
SRSW.cntx_pop();
_wy


\sum_srdo_netto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Suma wartości
::   WE: _a - Wskazanie na środek (SRSR.ref())
::       _b - rok podatkowy (INT)
::       _c - okres podatkowy (INT)
::       _d - tor amortyzacji ('P', 'F' lub 'D')
::       _e - środek ('N'), zestaw ('T') czy element ('E')
::   WY: Suma kwot netto dokumentów wartościowych bieżącego środka
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
SRDO.cntx_psh(); OKRO_F.cntx_psh();
SRDO.index('PODAT');
{? _>=5 & _e='E' || _srsr:=exec('get_srsr_root','fst',_a) || _srsr:=_a ?};
SRDO.prefix(_srsr,_b,'W');
{? SRDO.first()
|| {! |?
      {? ~(_>=5 & _e='E') | SRDO.SRSR_E=_a
      || {? SRDO.OKRES<=_c & SRDO.OKRO_F().RES<=_b
         || {? _d='P'
            || {? SRDO.P='+'
               || _wy+=SRDO.WARP-SRDO.UMOP
               |? SRDO.P='-'
               || _wy+=SRDO.WARP
               ?}
            |? _d='F'
            || {? SRDO.P='+'
               || _wy+=SRDO.WARF-SRDO.UMOF
               |? SRDO.P='-'
               || _wy+=SRDO.WARF
               ?}
            |? _d='D'
            || {? SRDO.P='+'
               || _wy+=SRDO.WARD-SRDO.UMOD
               |? SRDO.P='-'
               || _wy+=SRDO.WARD
               ?}
            ?}
         ?}
      ?};
      SRDO.next
   !}
?};
SRDO.cntx_pop(); OKRO_F.cntx_pop();
_wy


\get_srsw_val
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wyszukuje wartość rozliczeń dofinansowania w ostatnim okresie roku poprzedniego
::       do wskazanego
::   WE: _a - dofinansowanie (_SRZF),
::       _b - rok
::       _c rodzaj wartości ('NETP', 'NETF','NETD','WARP','WARF','WARD','UMOP','UMOF','UMOD')
::   WY: wartość
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? _a<>null
|| SRSW.cntx_psh();
   SRSW.index('PODAT');
   SRSW.prefix(_a,_b-1,12);
   {? SRSW.first()
   || _wy:=($('SRSW.'+_c))()
   ?};
   SRSW.cntx_pop()
?};
_wy


\test_nal_amo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Test czy naliczono amortyzcję choć w jednym z okresów w czasie obowiązywania dofinansowania lub ulgi,
::       jeżeli tak to modyfikacje kwot lub usunięcie dofinansowania lub ulgi nie jest możliwe
::   WE: _a - wskazanie na środek (SRSR)
::       _b - rok podatkowy (INT) od którego obowiązuje dofinansowanie (lub ulga)
::       _c - okres podatkowy (INT) od którego obowiązuje dofinansowanie (lub ulga)
::   WY: 1 - naliczono, 0 - nie naliczono
::----------------------------------------------------------------------------------------------------------------------
_find:=0;
SRSR.cntx_psh(); SRST.cntx_psh(); SRZF.cntx_psh();
SRST.index('PODAT');
SRST.prefix(_a);
{? SRST.find_key(_b,_c)
|| {! |?
      {? SRST.NAL='T' || _find:=1 ?};
      _find=0 & SRST.next()
   !}
?};
SRSR.cntx_pop(); SRST.cntx_pop(); SRZF.cntx_pop();
_find


\first_month_of_year
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca numer pierwszego okresu podanego roku podatkowego
::   WE: numer roku podatkowego
::   WY: numer pierwszego okresu podanego roku podatkowego
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
OKRO_F.cntx_psh();
OKRO_F.index('SRODKI');
OKRO_F.prefix(REF.FIRMA,_a);
{? OKRO_F.first()
|| {? OKRO_F.OES=0 || OKRO_F.next() ?};
   _wy:=OKRO_F.OES
?};
OKRO_F.cntx_pop();
_wy


\prev_year
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przełącza okno wyboru okresu w dziedzinie środków trwałych na poprzedni rok (o ile jest)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ref:=ROK_F.ref();
_okr:=OKRO_F.ref();
ROK_F.index('ROKPOCZ');
ROK_F.prefix(REF.FIRMA);
ROK_F.seek(_ref);
ROK_F.prev();
OKRO_F.prefix(ROK_F.ref());
OKRO_F.first();
{? ~exec('is_okro_fst','fst')
|| ROK_F.seek(_ref);
   OKRO_F.prefix(ROK_F.ref());
   OKRO_F.seek(_okr)
?}


\next_year
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przełącza okno wyboru okresu w dziedzinie środków trwałych na natępny rok (o ile jest)
::----------------------------------------------------------------------------------------------------------------------
_ref:=ROK_F.ref();
_okr:=OKRO_F.ref();
ROK_F.index('ROKPOCZ');
ROK_F.prefix(REF.FIRMA);
ROK_F.seek(_ref);
ROK_F.next();
OKRO_F.prefix(ROK_F.ref());
OKRO_F.first();
{? ~exec('is_okro_fst','fst')
|| ROK_F.seek(_ref);
   OKRO_F.prefix(ROK_F.ref());
   OKRO_F.seek(_okr)
?}


\get_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca kolejny wolny numer w ramach firmy
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
SRXA.cntx_psh();
SRXA.index('SRXI');
SRXA.prefix(SRXI.ref());
{? SRXA.last() || _wy:=SRXA.NR+1 || _wy:=1 ?};
SRXA.cntx_pop();
_wy


\be_srdt_srxi_lt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redakcją pola FINFO.SRXI_LT
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZ:='W';
1


\be_srdt_srxi_mt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redakcją pola FINFO.SRXI_MT
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZ:='L';
1


\be_srdt_zas_mt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redakcją pola FINFO.ZAS_MT
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZ:='L';
1


\be_srdt_kst_mt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.02]
:: OPIS: Formuła przed redakcją pola FINFO.KST_MT
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZ:='L';
1


\create_ark_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: utworzenie arkusza automatycznego z natury dla pozycji zatwierdzanych w arkuszu spisowym
::   WY: ref arkusza
::----------------------------------------------------------------------------------------------------------------------
_wy:=null;
SRXN.cntx_psh();
SRXN.index('AUTO');
SRXN.prefix(SRXI.ref(),'T');
{? ~SRXN.first()
|| SRXN.blank();
   SRXN.SRXI:=SRXI.ref();
   SRXN.AUTO:='T';
   SRXN.NAZWA:='Arkusz automatyczny';
   SRXN.DATA:=date();
   SRXN.USER:=exec('username','#users');
   SRXN.OPIS:='Arkusz tworzony na podstawie operacji wykonywanych przez użytkownika na arkuszach spisowych';
   SRXN.add();
   _wy:=SRXN.ref()
|| _wy:=SRXN.ref()
?};
SRXN.cntx_pop();
_wy


\srxp_add_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Dołącza pozycję do automatycznego arkusza z natury
::   WE: _a - SRXD.NRI,
::       _b - SRXD.NST,
::       _c - SRXD.JORG,
::       _d - SRXD.ODD,
::       _e - SRXD.POM,
::       _f - SRXD.OSOBA
::----------------------------------------------------------------------------------------------------------------------
_wy:=null;
_ref:=exec('create_ark_auto','fst');
SRXP.cntx_psh();
SRXP.prefix();
SRXP.blank();
SRXP.SRXN:=_ref;
SRXP.NRI:=_a;
SRXP.NST:=_b;
SRXP.JORG:=_c;
SRXP.ODD:=_d;
SRXP.POM:=_e;
SRXP.OSOBA:=_f;
SRXP.WCZYTANY:='T';
{? SRXP.add() || _wy:=SRXP.ref() ?};
SRXP.cntx_pop();
_wy


\srxp_del_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Usuwa pozycję z automatycznego arkusza z natury, lub odpina pozycję ze zwykłego arkusza z natury
::   WE: _a - SRXP.ref,
::----------------------------------------------------------------------------------------------------------------------
SRXP.cntx_psh();
SRXP.prefix();
{? SRXP.seek(_a)
|| {? SRXP.SRXN().AUTO='T'
   || _arkusz:=SRXP.SRXN;
      {? SRXP.count()=0 || SRXP.del() ?};
:: jeżeli to ostatnia pozycja w arkuszu automatycznym to usuwa arkusz
      SRXP.cntx_psh();
      SRXP.index('SRXP');
      SRXP.prefix(_arkusz);
      {? SRXP.size()=0
      || SRXN.cntx_psh();
         SRXN.prefix();
         {? SRXN.seek(_arkusz) & SRXN.count()=0 || SRXN.del() ?};
         SRXN.cntx_pop()
      ?};
      SRXP.cntx_pop()

   || SRXP.WCZYTANY:='N';
      SRXP.put()
   ?}
?};
SRXP.cntx_pop()


\ae_edites_okro_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redakcji pola EDIT_ES.OKRO_F
::----------------------------------------------------------------------------------------------------------------------
{? EDIT_ES.OKRO_F<>null
|| EDIT_ES.ROK_F:=EDIT_ES.OKRO_F().ROK;
   EDIT_ES.DO:=EDIT_ES.OKRO_F().KON
|| EDIT_ES.ROK_F:=null
?};
1


\f3_srsr_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Obsługa roku podatkowego na F3 dla środków dodawanych do planu amortyzacji
::----------------------------------------------------------------------------------------------------------------------
_sql:='select SRST.ROK from SRST where 0=1';
_tmp:=sql(_sql);
_win:=_tmp.mk_sel('Rok podatkowy'@,'P',0,'_rok_podatkowy',10,5,10,,'U');
_tmp.win_fld(_win,,'ROK',,,12,,,'Rok podatkowy'@);
_tmp.win_act(_win,,'Formuła','Wybierz'@@,,,,"sel_exit()",1);
_tmp.win_sel(_win);
{! _i:=SRSP.OD..SRSP.DO |!
   _tmp.ROK:=_i;
   _tmp.add()
!};
{? _tmp.select() || SRSR.ROK:=_tmp.ROK || ~~ ?}


\be_srsr_okres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redakcją dla pola SRSR.OKRES
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.ROK<>0 || 1 || 0 ?}


\be_srdo_okres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redakcją dla pola SRDO.OKRES
::----------------------------------------------------------------------------------------------------------------------
{? SRDO.ROK<>0 || 1 || 0 ?}


\f3_srsr_okres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Obsługa okresu podatkowego na F3 dla środków dodawanych do planu amortyzacji
::----------------------------------------------------------------------------------------------------------------------
_sql:='select SRST.OKRES from SRST where 0=1';
_tmp:=sql(_sql,SRSR.ROK);
_win:=_tmp.mk_sel('Okres podatkowy'@,'P',0,'_okres_podat',10,5,10,,'U');
_tmp.win_fld(_win,,'OKRES',,,12,,,'Okres podatkowy'@);
_tmp.win_act(_win,,'Formuła','Wybierz'@@,,,,"sel_exit()",1);
_tmp.win_sel(_win);

ROK_F.cntx_psh(); OKRO_F.cntx_psh(); OKR_OBSZ.cntx_psh();
OKR_OBSZ.index('OKRO_ES');
OKR_OBSZ.prefix(REF.FIRMA,SRD.FST,SRSR.ROK);
{? OKR_OBSZ.first()
|| {! |?
      {? OKR_OBSZ.OKRO_F().OES>0 & OKR_OBSZ.OKRO_F().POCZ<>date(0,0,0)
      || _tmp.OKRES:=OKR_OBSZ.OKRO_F().OES;
         _tmp.add()
      ?};
      OKR_OBSZ.next()
   !}
?};
OKRO_F.cntx_pop(); ROK_F.cntx_pop(); OKR_OBSZ.cntx_pop();

{? _tmp.select() || SRSR.OKRES:=_tmp.OKRES || ~~ ?}


\f3_srdo_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Obsługa roku podatkowego na F3 dla dokumentów dodawanych do planu amortyzacji
::----------------------------------------------------------------------------------------------------------------------
_sql:='select SRST.ROK from SRST where 0=1';
_tmp:=sql(_sql);
_win:=_tmp.mk_sel('Rok podatkowy'@,'P',0,'_rok_podatkowy',10,5,10,,'U');
_tmp.win_fld(_win,,'ROK',,,12,,,'Rok podatkowy'@);
_tmp.win_act(_win,,'Formuła','Wybierz'@@,,,,"sel_exit()",1);
_tmp.win_sel(_win);
{! _i:=SRSP.OD..SRSP.DO |!
   _tmp.ROK:=_i;
   _tmp.add()
!};
{? _tmp.select() || SRDO.ROK:=_tmp.ROK || ~~ ?}


\f3_srdo_okres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Obsługa okresu podatkowego na F3 dla dokumentów dodawanych do planu amortyzacji
::----------------------------------------------------------------------------------------------------------------------
_sql:='select SRST.OKRES from SRST where 0=1';
_tmp:=sql(_sql,SRSR.ROK);
_win:=_tmp.mk_sel('Okres podatkowy'@,'P',0,'_okres_podat',10,5,10,,'U');
_tmp.win_fld(_win,,'OKRES',,,12,,,'Okres podatkowy'@);
_tmp.win_act(_win,,'Formuła','Wybierz'@@,,,,"sel_exit()",1);
_tmp.win_sel(_win);

ROK_F.cntx_psh(); OKRO_F.cntx_psh(); OKR_OBSZ.cntx_psh();
OKR_OBSZ.index('OKRO_ES');
OKR_OBSZ.prefix(REF.FIRMA,SRD.FST,SRDO.ROK);
{? OKR_OBSZ.first()
|| {! |?
      {? OKR_OBSZ.OKRO_F().OES>0 & OKR_OBSZ.OKRO_F().POCZ<>date(0,0,0)
      || _tmp.OKRES:=OKR_OBSZ.OKRO_F().OES;
         _tmp.add()
      ?};
      OKR_OBSZ.next()
   !}
?};
OKRO_F.cntx_pop(); ROK_F.cntx_pop(); OKR_OBSZ.cntx_pop();

{? _tmp.select() || SRDO.OKRES:=_tmp.OKRES || ~~ ?}


\set_field
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Ustawia wartość i dostępność pól w oknie dokumentu zgodnie z definicją typu
::   WE: jeżeli _a i _a=1 to tylko dostępność pól
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
{? FINFO.TOR_D='T' & SRDO.TYP().WARD='T' || _enable:=1 || _enable:=0 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'WARD');
{? FINFO.TOR_D='T' & SRDO.TYP().UMOD='T' || _enable:=1 || _enable:=0 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'UMOD');
{? FINFO.TOR_D='T' & SRDO.TYP().WART_ZB='T' || _enable:=1 || _enable:=0 ?};
{? SRDO.win_edit('?')='RED_WS' || SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'WARSP_D') ?};
{? _a=0
|| SRDO.P:=SRDO.TYP().P;
   SRDO.PRZYCHOD:=SRDO.TYP().PRZYCHOD;
   SRDO.ROZ:=SRDO.TYP().ROZ;
   SRDO.Z:=SRDO.TYP().Z
?};
{? SRDO.TYP().P='+' || _enable:=1 || _enable:=0 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'PRZYCHOD');
{? SRDO.TYP().P='-' || _enable:=1 || _enable:=0 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'ROZ');
{? SRDO.TYP().WARP='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'WARP');
{? SRDO.TYP().WARP='T' & SRDO.TYP().P='+' & SRDO.SRSR().AMOR100='T' || _enable:=1 || _enable:=0 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'WARP100');
{? SRDO.TYP().WARF='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'WARF');
{? SRDO.TYP().UMOP='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'UMOP');
{? SRDO.TYP().UMOF='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'UMOF');
{? SRDO.TYP().OSTATEK='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'OSTATEK');
{? SRDO.TYP().WP='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'WP');
{? SRDO.TYP().OKE='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'OKE');
{? SRDO.TYP().MAX='N' || _enable:=0 || _enable:=1 ?};
SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'MAX');
{? SRDO.TYP().WART_ZB<>'T' || _enable:=0 || _enable:=1 ?};
{? SRDO.win_edit('?')='RED_WS'
|| SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'WARSP_P');
   SRDO.efld_opt(SRDO.win_edit('?'), 'enable='+$_enable,, 'WARSP_F')
?};
1


\field_test_nat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Test pól wartościowych związanych z metodą naturalną - czy dokument dotyczy tylko pól związanych
::       z tą metodą
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_pola:=_npola:=0;
{? SRDT.WARP='T' || _pola+=1 ?};
{? SRDT.UMOP='T' || _pola+=1 ?};
{? SRDT.WARF='T' || _pola+=1 ?};
{? SRDT.UMOF='T' || _pola+=1 ?};
{? FINFO.TOR_D='T' & SRDT.WARD='T' || _pola+=1 ?};
{? FINFO.TOR_D='T' & SRDT.UMOD='T' || _pola+=1 ?};
{? SRDT.OSTATEK='T' ||  _pola+=1 ?};
{? SRDT.OKE='T' ||  _pola+=1; _npola+=1 ?};
{? SRDT.MAX='T' ||  _pola+=1; _npola+=1 ?};
{? _pola>0 & _pola=_npola || 1 || 0 ?}


\ae_srdo_okres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redakcji pola SRDO.OKRES (w dokumentach wartościowych w planach amortyzacji),
::       w przypadku dokumentów skreślajacych oszacowanie wartości i umorzenia
::----------------------------------------------------------------------------------------------------------------------
{? SRDO.TYP().Z='T'
|| SRST.cntx_psh();
   SRST.index('PODAT');
   SRST.prefix(SRSR.ref(),SRDO.ROK, SRDO.OKRES);
   {? SRST.first()
   || {? SRDO.TYP().WARP='T' || SRDO.WARP:=-SRST.WARP ?};
      {? SRDO.TYP().UMOP='T' || SRDO.UMOP:=-SRST.UMOP+SRST.AMOP ?};
      {? SRDO.TYP().WARF='T' || SRDO.WARF:=-SRST.WARF ?};
      {? SRDO.TYP().UMOF='T' || SRDO.UMOF:=-SRST.UMOF+SRST.AMOF ?};
      {? FINFO.TOR_D='T'
      || {? SRDO.TYP().WARD='T' || SRDO.WARD:=-SRST.WARD ?};
         {? SRDO.TYP().WARD='T' || SRDO.UMOD:=-SRST.UMOD+SRST.AMOD ?}
      ?}
   ?};
   SRST.cntx_pop()
?};
1


\get_odd_from_srdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca ref ODD.ref() środka na podstawie bieżącego rekordu dokumentu wartościowego
::       i dla bieżącego okresu
::----------------------------------------------------------------------------------------------------------------------
_srsr:=SRDO.SRSR;
SRST.cntx_psh();
SRST.index('SROD');
SRST.prefix(_srsr,SSTALE.AR,SSTALE.AO);
{? SRST.first() || _odd:=SRST.ODD || _odd:=null ?};
SRST.cntx_pop();
_odd


\get_gr_from_srdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca ref TAM.ref() - grupa środka, na podstawie bieżącego rekordu dokumentu wartościowego
::       i dla bieżącego okresu
::----------------------------------------------------------------------------------------------------------------------
{? SRDO.SRSR_E<>null || _srsr:=SRDO.SRSR_E || _srsr:=SRDO.SRSR ?};
SRST.cntx_psh();
SRST.index('SROD');
SRST.prefix(_srsr,SSTALE.AR,SSTALE.AO);
{? SRST.first() || _tam:=SRST.GR; SRST.GR() || _tam:=null ?};
SRST.cntx_pop();
_tam


\get_odd_naz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca nazwę jendostki księgowej
::   WE: ref ODD
::   WY: ODD.OD
::----------------------------------------------------------------------------------------------------------------------
ODD.cntx_psh();
ODD.prefix();
{? ODD.seek(_a) || _wy:=ODD.OD || _wy:='' ?};
ODD.cntx_pop();
_wy


\filtr_zestawy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła filtruje środki tak by widoczne były tylko zestawy
::   WE: _a = 'T' - zestawy środków trwałych, 'N' - zestawy środków niskocennych,
::            'U' - zestawy dostępne w trybie uproszczonym
::----------------------------------------------------------------------------------------------------------------------
SRSR.prefix();
SRSR.f_clear();
{? _a='T'
|| _sql:='GRP=''T'' AND R=''T'''
|? _a='N'
|| _sql:='GRP=''T'' AND R=''N'''
|? _a='U'
|| _sql:='GRP=''T'' AND U_SR=''T'''
?};
SRSR.f_set('NRI','',_sql)


\srsr_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła tworzy okno tymczasowe dla tabeli środków
::----------------------------------------------------------------------------------------------------------------------
_win:=SRSR.mk_sel('Środki'@,'P',0,'_tmp_srsr',10,5,15,,'U',,,,,'normal');
SRSR.win_fld(_win,,'NRI',,,20,,,'Nr inwentarzowy'@,,'Numer inwentarzowy'@);
SRSR.win_fld(_win,,'NST',,,30,,,'Nazwa'@,,'Nazwa'@);
SRSR.win_fld(_win,,'GR','GR',,10,,,'Grupa'@,,'Grupa środków'@);
SRSR.win_fld(_win,,'DE',,,10,,,'Eksploatowany od'@,,'W eksploatacji od'@);
_win


\chk_srsr_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła testuje poprawność wypełnienia okna NEW zmiennej EDIT_ES (wybór rodzaju dodawanego środka w procesie)
::   WY: '' lub akronim pola
::----------------------------------------------------------------------------------------------------------------------
_wy:='';
{? EDIT_ES.GRP='E' & EDIT_ES.ZESTAW=null
|| FUN.emsg('W przypadku dodawania elementu składowego należy wskazać zestaw, do którego będzie dodawany element'@);
   _wy:='ZESTAW'
?};
_wy


\be_edites_zestaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redakcją pola EDIT_ES.ZESTAW
::----------------------------------------------------------------------------------------------------------------------
{? EDIT_ES.GRP='E' || 1 || 0 ?}


\ae_edites_grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redakcji pola EDIT_ES.GRP
::----------------------------------------------------------------------------------------------------------------------
{? EDIT_ES.GRP<>'E'
|| EDIT_ES.ZESTAW:=null;
   EDIT_ES.efld_opt('NEW', 'enable=0, mark=0',,'ZESTAW')
|| EDIT_ES.efld_opt('NEW', 'enable=1, mark=1',,'ZESTAW')
?};
1


\create_win_srsr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Tworzy okno wertowania środków dla tabeli SRSR - wybór środka dla którego będzie wystawiany dokument przyjęcia
::----------------------------------------------------------------------------------------------------------------------
_title:=SSTALE.AO().NAZ+' '+SSTALE.AR().NAZ;
_win:=SRSR.mk_sel('Środki: %1'@[_title],'P',0,'_srsr_wyb',10,5,15,,'U');
SRSR.win_fld(_win,SRSR,'ODD','OD',,10,,,'J. księgowa'@);
SRSR.win_fld(_win,SRSR,'NRI',,,18,,,'Nr inwentarzowy'@);
SRSR.win_fld(_win,SRSR,'NST',,,25,,,'Nazwa'@);
SRSR.win_fld(_win,SRSR,'JORG','SYMBOL',,16,,,'J. organizacyjna'@);
SRSR.win_fld(_win,SRSR,'WARP',,,12,2,,'Wartość pod.'@);
SRSR.win_fld(_win,SRSR,'WARF',,,12,2,,'Wartość bil.'@);
SRSR.win_act(_win,0,'Formuła','Wybierz'@@,,,,"sel_exit()",1,,,,'W');
_win


\czy_spr_grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.02]
:: OPIS: Czy bieżący środek został zbyty do innej firmy z grupy kapitałowej
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
SRDO.cntx_psh();
{? SRST.GRP<>'E'
|| SRDO.index('SRODZAJ');
   SRDO.prefix(SRST.SRSR,'W')
|| SRDO.index('SRODZAJE');
   _root:=exec('get_srsr_root','fst',SRST.SRSR);
   SRDO.prefix(_root,SRST.SRSR,'W')
?};
{? SRDO.first()
|| {! |?
      {? SRDO.TYP().P='S' || _wy:=1 ?};
      _wy=0 & SRDO.next()
   !}
?};
SRDO.cntx_pop();
_wy


\srst_wybierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wybór środka podczas dodawania dokumentu
::       jeżeli _a=1 to zmiany własności, jeżeli 0 brak _a to wartościowego
::   WE: [_a] - 0/1
::----------------------------------------------------------------------------------------------------------------------
{? (_>0 & _a=1) | SRST.GRP<>'T'
|| {? SRST.SRSR().Z='T'
   || FUN.emsg('Wskazany środek został zlikwidowany.'@)
   || _zb:=0;
      {? FINFO.SPR_GRP='T' & exec('czy_spr_grp','fst')
      || FUN.emsg('Wskazany środek został zbyty na rzecz innej firmy z grupy kapitałowej.'@);
         _zb:=1
      ?};
      {? ~_zb || sel_exit() ?}
   ?}
|| FUN.emsg('Nie można dodawać dokumentów wartościowych dla zestawów środków.\n'
            'Dane tego typu są oddzielne dla elementów zestawu dlatego taki dokument należy\n'
            'dodawać na poziomie elementu składowego.'@)
?}


\create_win_srst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Tworzy okno wertowania środków dla tabeli SRST - wybór środka dla którego będzie wystawiany dokument
::   WE: [_a] - rodzaj wystawianego dokumentu np.
::              'W' = 'wartościowy'
::              'L' = 'zmiany właściwości'
::----------------------------------------------------------------------------------------------------------------------
_title:=SSTALE.AO().NAZ+' '+SSTALE.AR().NAZ;
_win:=SRST.mk_sel('Wybór środka: %1'@[_title],'P',0,'_srst_wyb',10,5,20,,'U');
SRST.win_fld(_win,SRST,'ODD','OD',,12,,,'J. księgowa'@);
SRST.win_fld(_win,SRST,'NRI',,,20,,,'Nr inwentarzowy'@);
SRST.win_fld(_win,SRST,'NST',,,30,,,'Nazwa'@);
SRST.win_fld(_win,SRST,'JORG','SYMBOL',,16,,,'J. organizacyjna'@);
SRST.win_fld(_win,SRST,'WARP',,,16,2,,'Wartość podatkowa'@);
SRST.win_fld(_win,SRST,'WARF',,,16,2,,'Wartość bilansowa'@);
{? FINFO.TOR_D='T'
|| SRST.win_fld(_win,SRST,'WARD',,,16,2,,'Wartość dodatkowa'@)
?};
{? _>0 & type_of(_a)=type_of('') & _a='L'
|| SRST.win_act(_win,0,'Formuła','Wybierz'@@,,,,"exec('srst_wybierz','fst',1)",1,,,,'W')
|| SRST.win_act(_win,0,'Formuła','Wybierz'@@,,,,"exec('srst_wybierz','fst')",1,,,,'W')
?};
SRST.win_btn(_win,'text=%1,btn_label_align=center,panel=right,align=begin'['Wybierz'@],'menu:W',,,,,,'');
_form:="{? SRST.GRP='T'
        || 'xwin16.png:74'
        |? SRST.GRP='E'
        || 'xwin16.png:76'
        || ''
        ?}";
SRST.win_fml(_win,SRST,'NST',,'ICON_BEFORE',_form);
SRST.win_act(_win,,'Formuła','Legenda'@@,,,,"exec('legenda','color','SRST#01#E')");
_win


\clear_par
::----------------------------------------------------------------------------------------------------------------------
:: UTW : PJ  [8.50]
:: OPIS: Formula czysci pola zmiennej PAR_WYDR (parametry zestawienia)
::  OLD: \clear_par/equery.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_WYDR.RODZAJ:=0;
PAR_WYDR.RODZAJ2:=0;
PAR_WYDR.MAP:=null;
PAR_WYDR.MAF:=null;
PAR_WYDR.MAD:=null;
PAR_WYDR.ODD:=null;
PAR_WYDR.FROM_DE:=date(0, 0, 0);
PAR_WYDR.TO_DE:=date(0, 0, 0);
PAR_WYDR.GRUPA:='';
PAR_WYDR.GRUPA_OD:='';
PAR_WYDR.GRUPA_DO:='';
PAR_WYDR.SKR_ONLY:=0;
PAR_WYDR.UMO_ONLY:=0;
PAR_WYDR.ZESTAW:=0;
PAR_WYDR.STAN_NA:=date(0, 0, 0);
PAR_WYDR.WART_PN:=0;
PAR_WYDR.PRZYCHOD:=null;
PAR_WYDR.ROZCHOD:=null;
PAR_WYDR.DOKTYP:='';
PAR_WYDR.SRDT:=null;
PAR_WYDR.DATA_OD:=date(0, 0, 0);
PAR_WYDR.DATA_DO:=date(0, 0, 0);
PAR_WYDR.TYPDOKP:=null;
PAR_WYDR.TYPDOKW:=null;
PAR_WYDR.ELEMENTY:=0;
PAR_WYDR.PODSUM:=0;
PAR_WYDR.ZESTINW:=0;
PAR_WYDR.AMOR_ALL:=0;
PAR_WYDR.MO_DO:=1;
PAR_WYDR.TYPDOKO:='';
PAR_WYDR.JORG:=null;
PAR_WYDR.RODZ_POM:=0;
PAR_WYDR.OKRES_OD:=0;
PAR_WYDR.OKRES_DO:=0;
PAR_WYDR.DANE:=1;
PAR_WYDR.WAR_GR:=1;
PAR_WYDR.ZMIANY:='T';
PAR_WYDR.WYB_GRUP:='<- F3 ->';
PAR_WYDR.LISTA_GR:='';
PAR_WYDR.CECHA:=null;
PAR_WYDR.WAR_CECH:='';
PAR_WYDR.DRUKCECH:=0;
PAR_WYDR.SRODEK:='';
~~


\zaznacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Zaznacza/odznacza grupe na liscie wyboru grup
::  OLD: \zaznacz/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? GR_LIST.WYB=1 || GR_LIST.WYB:=0 || GR_LIST.WYB:=1 ?};
GR_LIST.put()


\list_gr_refresh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Odswieza pole PAR_WYDR.LISTA_GR
::  OLD: \list_gr_refresh/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
_lista:='';
{? GR_LIST.first()
|| {! |?
      {? GR_LIST.WYB=1 || _lista+=GR_LIST.KOD + ',' ?};
      GR_LIST.WYB2:=GR_LIST.WYB;
      GR_LIST.put();
      GR_LIST.next()
   !}
?};
{? _lista+1=',' || _lista:=((+_lista)-1)+_lista ?};
{? +_lista>22 || _lista:=(22+_lista)+' [...]' ?};
PAR_WYDR.LISTA_GR:=_lista


\set_gr_list
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Funkcja tworzy tabele tymczasowa GR_LIST wraz z obsluga
::  OLD: \set_gr_list/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('GR_LIST','I_GR_LIS');
:: definicja tabeli tymczasowej na grupy do wyboru
GR_LIST:=tab_tmp(,'KOD','STRING[15]','Kod', 'NAZWA','STRING[100]','Nazwa', 'WYB', 'INTEGER', 'Wybrana?', 'WYB2','INTEGER','Wybrana (poprzednio)');
_gr_edit:=GR_LIST.mk_edit('Grupa'@,0,'_gr_edit');
GR_LIST.win_efld(_gr_edit,,'KOD');
GR_LIST.win_efld(_gr_edit,,'NAZWA');
GR_LIST.win_efld(_gr_edit,,'WYB');
I_GR_LIS:=GR_LIST.ndx_tmp(,1,'KOD',,,'KOD',,);
{? I_GR_LIS<>'' || GR_LIST.index(I_GR_LIS) ?};
GR_LIST.win_edit(_gr_edit);
_gr_wer:=GR_LIST.mk_sel('Lista grup środków do wyboru'@,,0,'_gr_wer',,,20);
GR_LIST.win_fld(_gr_wer,,'WYB',,,3,,,'Wyb?'@,,,2,,"1","0");
GR_LIST.win_fld(_gr_wer,,'KOD',,,15,,,'Kod'@);
GR_LIST.win_fld(_gr_wer,,'NAZWA',,,50,,,'Nazwa'@);
GR_LIST.win_sel(_gr_wer);
GR_LIST.win_act(_gr_wer,,'Formuła','Zaznacz/odznacz'@@,,'Zaznacza/odznacza grupę'@,"exec('zaznacz','fst')",,1,1);
GR_LIST.win_act(_gr_wer,,'Formuła','Akceptuj wybór'@@,,'Zapisuje wybrane grupy'@,"exec('list_gr_refresh','fst');sel_exit()",,0);
:: wypelnienie listy grup
TAM.cntx_psh();
TAM.index('KST');
TAM.prefix(SSTALE.AO().TAB_KRST);
{? TAM.first()
|| {! |?
      GR_LIST.blank();
      GR_LIST.KOD:=TAM.GR;
      GR_LIST.NAZWA:=TAM.NGS;
      GR_LIST.WYB:=0;
      GR_LIST.add();
      TAM.next()
   !}
?};
TAM.cntx_pop()


\check_dokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: po redakcji okienka DOKUM zmiennej PAR_WYDR
::   WY: 0 - jesli blad w parametrach, 1 jesli ok
::  OLD: \check_dokum/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:='';
{? PAR_WYDR.DATA_DO<PAR_WYDR.DATA_OD | PAR_WYDR.DATA_OD=date(0,0,0) | PAR_WYDR.DATA_DO=date(0,0,0)
|| FUN.emsg('Nieprawidłowy lub niewypełniony zakres dat.'@);
   _wy:='DATA_DO'
|| _wy:=''
?};

{? _wy='' & PAR_WYDR.WAR_GR<>4 || _wy:=exec('check_wyb_grup','fst') ?};

{? _wy='' || 1 || _wy ?}


\check_wyb_grup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Formula sprawdza wypelnienie pol dotyczacych grup srodkow
::  OLD: \check_wyb_grup/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:='';
{? PAR_WYDR.WAR_GR=3 & ~exec('test_gr_list','fst')
|| FUN.emsg('Wybrano opcję \'Wybór grup\', ale nie zaznaczono\nżadnej grupy na liście.'@);
   _wy:='WYB_GRUP'
|| _wy:=''
?};
{? _wy='' & PAR_WYDR.WAR_GR=2
|| {? |PAR_WYDR.GRUPA_OD<>'' & |PAR_WYDR.GRUPA_DO<>''
   || {? |PAR_WYDR.GRUPA_OD>|PAR_WYDR.GRUPA_DO
      || FUN.emsg('Nieprawidłowy zakres grup.'@);
         _wy:='GRUPA_OD'
      || _wy:=''
      ?}
   || _wy:=''
   ?}
?};
_wy


\test_gr_list
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Testuje czy zaznaczono jakakolwiek grupe
::   WY: 1 - jesli jest zaznaczona choc 1 grupa, 0 jesli brak zaznaczen.
::  OLD: \test_gr_list/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? GR_LIST.first()
|| {! |?
      {? GR_LIST.WYB=1 || _wy:=1 ?};
      GR_LIST.next()
   !}
?};
_wy


\create_list_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Tworzy liste grup do parametrow wydruku
::   WY: String z lista wybranych grup rozdzielonych przecinkiem
::  OLD: \create_list_gr/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
_lista:='';
{? GR_LIST.first()
|| {! |?
      {? GR_LIST.WYB=1 || _lista+=GR_LIST.KOD + ',' ?};
      GR_LIST.next()
   !}
?};
{? _lista+1=',' || _lista:=((+_lista)-1)+_lista ?};
_lista


\ae_wargr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: po redakcji pola WAR_GR zmiennej PAR_WYDR
::  OLD: \ae_wargr/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.WAR_GR=1
|| PAR_WYDR.GRUPA_OD:=''; PAR_WYDR.GRUPA_DO:='';
   PAR_WYDR.WYB_GRUP:='<- F3 ->'; PAR_WYDR.LISTA_GR:=''
|? PAR_WYDR.WAR_GR=2
|| PAR_WYDR.GRUPA:='';
   PAR_WYDR.WYB_GRUP:='<- F3 ->'; PAR_WYDR.LISTA_GR:=''
|? PAR_WYDR.WAR_GR=3
|| PAR_WYDR.GRUPA:='';
   PAR_WYDR.GRUPA_OD:=''; PAR_WYDR.GRUPA_DO:=''
|? PAR_WYDR.WAR_GR=4
|| PAR_WYDR.GRUPA:='';
   PAR_WYDR.GRUPA_OD:=''; PAR_WYDR.GRUPA_DO:='';
   PAR_WYDR.WYB_GRUP:='<- F3 ->'; PAR_WYDR.LISTA_GR:=''
?}


\be_grupa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: przed redakcja pola GRUPA zmiennej PAR_WYDR
::  OLD: \be_grupa/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.WAR_GR = 1 || 1 || 0 ?}


\wyb_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: -
:: OPIS: wybór --- wybór grupy środków trwałych
::   WE:
::   WY: grupa
::  OLD: \WYB_GR/estra.fml
::----------------------------------------------------------------------------------------------------------------------
_fld:=0;
TAM.cntx_psh();
TAM.win_sel('WYBOR');
TAM.index('KST');
TAM.prefix(SSTALE.AO().TAB_KRST);
{? ~TAM.find_key(fld()) & ~TAM.find_le(fld()) || TAM.first() ?};
{? TAM.select(, 1) || _fld:=TAM.GR ?};
TAM.cntx_pop();
_fld


\wyb_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Formula na wzorzec pola PAR_WYDR.WYB_GRUP
::  OLD: \wyb_f3/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
'<- \\F\\3 ->#'


\be_wyb_grup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Funkcja przed redakcją pola PAR_WYDR.WYB_GRUP
::  OLD: \be_wyb_grup/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.WAR_GR=3 || 1 || 0 ?}


\f3_wyb_grup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Funkcja na F3 pola PAR_WYDR.WYB_GRUP
::  OLD: \f3_wyb_grup/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~GR_LIST.select() || exec('list_przywroc','fst') ?};
win_disp();
1


\list_przywroc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Przywraca zaznaczenie GR_LIST.WYB, jesli uzytkownik wyszedl
::       z okienka wyboru przez F3
::  OLD: \list_przywroc/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? GR_LIST.first()
|| {! |?
      GR_LIST.WYB:=GR_LIST.WYB2;
      GR_LIST.put();
      GR_LIST.next()
   !}
?}


\ae_wyb_grup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Funkcja po redakcji pola PAR_WYDR.WYB_GRUP
::  OLD: \ae_wyb_grup/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
1


\ae_doktyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: po redakcji pola PAR_WYDR.DOKTYP, weryfikacja czy typ dokumentu zgodny z rodzajem zmiany
::  OLD: \ae_doktyp/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.DOKTYP<>PAR_WYDR.SRDT().RODZ || PAR_WYDR.SRDT:=null ?};
EDIT_ES.RODZ:=PAR_WYDR.DOKTYP;
1


\be_przychod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Formula przed redagowaniem pol Przychod w oknach zmiennej PAR_WYDR
::  OLD: \be_przychod/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.win_edit('?')<>'DOKUM'
|| 1
|? PAR_WYDR.win_edit('?')='DOKUM'
|| {? PAR_WYDR.DOKTYP='W' || 1 || 0 ?}
?}


\be_rozchod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Formula przed redagowaniem pola Rozchod w oknach zmiennej PAR_WYDR
::  OLD: \be_rozchod/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.win_edit('?')<>'DOKUM'
|| 1
|? PAR_WYDR.win_edit('?')='DOKUM'
|| {? PAR_WYDR.DOKTYP='W' || 1 || 0 ?}
?}


\be_z_grupa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.50]
:: OPIS: przed redakcja pol GRUPA_OD i GRUPA_DO zmiennej PAR_WYDR
::  OLD: \be_z_grupa/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.WAR_GR = 2 || 1 || 0 ?}


\from_srst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca wartość wskazanego pola z rejestru stanu środka dla przekazanego roku i okresu
::   WE: _a - ref środka SRSR, _b - ref roku, _c - ref okresu, _d - akronim pola, _e-akronim pola w złączeniu
::----------------------------------------------------------------------------------------------------------------------
{? _<4 | type_of(_a)<>type_of(null) | type_of(_b)<>type_of(null) | type_of(_c)<>type_of(null)
   | type_of(_d)<>type_of('')
|| FUN.emsg('Nieprawidłowy parametr formuły.'@);
   return(0)
?};
_typ:=type_of(($('SRST.'+_d))());
_wy:={? _typ=1 || 0
     |? _typ=2 || ''
     |? _typ=3 || ""
     |? _typ=4 || date(0,0,0)
     |? _typ=5 || time(0,0,0)
     |? _typ=7 || null
     || 0
     ?};
SRST.cntx_psh();
SRST.index('SROD');
SRST.prefix(_a,_b,_c);
{? SRST.first()
|| {? _<5
   || _wy:=($('SRST.'+_d))()
   || _wy:=($('SRST.'+_d+'().'+_e))()
   ?}
?};
SRST.cntx_pop();
_wy


\zakres_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca tabelę tymczsową z zestawem grup środków wg parametrów
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TAM_SQL');
_grupa:=_zakres:='';
{? PAR_WYDR.WAR_GR=1
|| {? |PAR_WYDR.GRUPA<>''
   || _lok:=|PAR_WYDR.GRUPA * '*';
      {? _lok
      || _lok-=1; _grupa:=(_lok+|PAR_WYDR.GRUPA) + '%'
      || _grupa:=|PAR_WYDR.GRUPA + '%'
      ?};
      _zakres+='select * from TAM where TAM.GR LIKE '':_a'''
   || PAR_WYDR.WAR_GR:=4
   ?}
|? PAR_WYDR.WAR_GR=2 & (|PAR_WYDR.GRUPA_OD<>'' | |PAR_WYDR.GRUPA_DO<>'')
|| _zakres:='select TAM.GR from TAM where ';
   {? |PAR_WYDR.GRUPA_OD<>'' & |PAR_WYDR.GRUPA_DO<>''
   || _zakres+=' TAM.GR BETWEEN '':_b'' and '':_c'''
   |? |PAR_WYDR.GRUPA_OD<>'' & |PAR_WYDR.GRUPA_DO=''
   || _zakres+=' TAM.GR >= '':_b'''
   |? |PAR_WYDR.GRUPA_OD='' & |PAR_WYDR.GRUPA_DO<>''
   || _zakres+=' TAM.GR <= '':_c'''
   ?}
|? PAR_WYDR.WAR_GR=2 & |PAR_WYDR.GRUPA_OD='' & |PAR_WYDR.GRUPA_DO=''
|| _zakres:='select TAM.GR from TAM '
|? PAR_WYDR.WAR_GR=3 & PAR_WYDR.WYB_GRUP<>''
|| _zakres:='select * from TAM where ';
   _zakres:=exec('get_grupy','fst',_zakres,'TAM.GR')
|? PAR_WYDR.WAR_GR=4
|| _zakres:=''
?};
{? _zakres<>''
|| _zakres+=' order by TAM.GR';
   TAM_SQL:=sql(_zakres,_grupa,|PAR_WYDR.GRUPA_OD,|PAR_WYDR.GRUPA_DO)
?}


\gr_fit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła sprawdza czy wskazana grupa środka pasuje do warunków
::   WE: Grupa środka do weryfikacji
::   WY  0/1
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)<>type_of('') | _a='' || return(0) ?};
TAM_SQL.prefix(_a,);
TAM_SQL.first()


\get_grupy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Zbiera zaznaczone grupy z tabeli tymczasowej GR_LIST
::   WE: _a - dotychczasowa czesc warunku
::       _b - akronim pola do warunku
::  OLD: \get_grupy/equery.fml
::----------------------------------------------------------------------------------------------------------------------
GR_LIST.first();
_warunek:=_a+' (';
{! |?
   {? GR_LIST.WYB=1
   || _warunek+=(' '+_b+'='''+form(GR_LIST.KOD)+''' OR')
   ?};
   GR_LIST.next()
!};
{? _warunek+2='OR' || _warunek:=((+_warunek)-2)+_warunek ?};
_warunek+=')';
_warunek


\test_zakresu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [10.30]
:: OPIS: Analiza parametrow zakresu grup
::  OLD: \test_zakresu/equery.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.WAR_GR<=2
|| PAR_WYDR.GRUPA_OD:=form(PAR_WYDR.GRUPA_OD);
   PAR_WYDR.GRUPA_DO:=form(PAR_WYDR.GRUPA_DO);
   TAM.cntx_psh();
   {? PAR_WYDR.GRUPA_OD<>''
   || TAM.index('TAMSTRGR');
      TAM.prefix(PAR_WYDR.GRUPA_OD);
      {? TAM.first()
      || PAR_WYDR.GRUPA_OD:=TAM.GR
      ?}
   ?};
   {? PAR_WYDR.GRUPA_DO<>''
   || TAM.index('TAMSTRGR');
      TAM.prefix(PAR_WYDR.GRUPA_DO);
      {? TAM.last()
      || PAR_WYDR.GRUPA_DO:=TAM.GR
      ?}
   ?};
   TAM.cntx_pop()
?}


\check_zest_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Formula po redakcji okienka ZEST_DEF dla wydruku B.
::  OLD: \check_zest_def/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=exec('check_wyb_grup','fst');
{? _wy='' || 1 || _wy ?}


\be_stan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: przed redakcja pola PAR_WYDR.STAN_NA
::  OLD: \be_stan/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.STAN_NA<>date(0,0,0) || 0 || 1 ?}


\ae_rodz2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: po redakcji pola PAR_WYDR.RODZAJ2,
::       jesli = 1 - wszystkie srodki
::       jeśli = 2 (jedn. umorz.)
::       ustawia wartość pola PAR_WYDR.MAP i MAF na UJP i UJF
::       jesli = 5 to ustawie date "w eksploatacji od", jesli = 4,
::       jesli = 3 to checkbox to ustawia calkowicie umozone
::       jesli = 4 to checkbox to
::  OLD: \ae_rodz2/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RODZAJ2=1
|| PAR_WYDR.MAP:=null;
   PAR_WYDR.MAF:=null;
   PAR_WYDR.UMO_ONLY:=0;
   PAR_WYDR.SKR_ONLY:=0;
   PAR_WYDR.SKR_OD:=0;
   PAR_WYDR.FROM_DE:=date(0,0,0);
   PAR_WYDR.TO_DE:=date(0,0,0)
|? PAR_WYDR.RODZAJ2=2
|| MA.cntx_psh(); MA.index('MA'); MA.prefix('UJP');
   {? MA.first() || PAR_WYDR.MAP:=MA.ref() || PAR_WYDR.MAP:=null ?};
   MA.prefix(); MA.prefix('UJF');
   {? MA.first() || PAR_WYDR.MAF:=MA.ref() || PAR_WYDR.MAF:=null ?};
   MA.cntx_pop();
   PAR_WYDR.UMO_ONLY:=0;
   PAR_WYDR.SKR_ONLY:=0;
   PAR_WYDR.SKR_OD:=0;
   PAR_WYDR.FROM_DE:=date(0,0,0);
   PAR_WYDR.TO_DE:=date(0,0,0)
|? PAR_WYDR.RODZAJ2=3
|| PAR_WYDR.MAP:=null;
   PAR_WYDR.MAF:=null;
   PAR_WYDR.SKR_ONLY:=0;
   PAR_WYDR.SKR_OD:=0;
   PAR_WYDR.UMO_ONLY:=1;
   PAR_WYDR.FROM_DE:=date(0,0,0);
   PAR_WYDR.TO_DE:=date(0,0,0)
|? PAR_WYDR.RODZAJ2=4
|| PAR_WYDR.MAP:=null;
   PAR_WYDR.MAF:=null;
   PAR_WYDR.UMO_ONLY:=0;
   PAR_WYDR.SKR_ONLY:=1;
   PAR_WYDR.SKR_OD:=0;
   PAR_WYDR.FROM_DE:=date(0,0,0);
   PAR_WYDR.TO_DE:=date(0,0,0)
|? PAR_WYDR.RODZAJ2=5
|| PAR_WYDR.MAP:=null;
   PAR_WYDR.MAF:=null;
   PAR_WYDR.UMO_ONLY:=0;
   PAR_WYDR.SKR_ONLY:=0;
   PAR_WYDR.SKR_OD:=0;
   PAR_WYDR.FROM_DE:=SSTALE.AR().POCZ_ROK;
   PAR_WYDR.TO_DE:=date(0,0,0)
?};
{? PAR_WYDR.win_edit('?')='ZEST_SKR' & PAR_WYDR.RODZAJ2=4
|| PAR_WYDR.efld_opt('ZEST_SKR','editable=1',PAR_WYDR,'SKR_OD')
|| PAR_WYDR.efld_opt('ZEST_SKR','editable=grayed',PAR_WYDR,'SKR_OD')
?};
1


\fst_lic
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła sprawdzająca licencję dla obszaru FST
::   WY: 'T' - jest licencja, 'N' - nie ma licencji
::----------------------------------------------------------------------------------------------------------------------
_result:='N';
_domain:=exec('domain_ref','#b_domain','FST');
{? _domain<>null()
|| {? exec('lic','#b_domain',_domain)=1
   || _result:='T'
   ?}
?};
_result


\check_zest_sz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Formula po redakcji okienka ZEST_SZ dla wydruku D.
::  OLD: \check_zest_sz/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=exec('check_wyb_grup','fst');
{? _wy=''
|| {? PAR_WYDR.TO_DE<>date(0,0,0) & PAR_WYDR.TO_DE>PAR_WYDR.STAN_NA
   || FUN.emsg('Data wprowadzenia do eksploatacji, data <do>\n'
               'nie może być późniejsza niż data stanu środków <stan na>.'@);
      _wy:='TO_DE'
   ?}
?};
{? _wy=''
|| {? PAR_WYDR.TO_DE<>date(0,0,0) & PAR_WYDR.FROM_DE<>date(0,0,0) & PAR_WYDR.FROM_DE>PAR_WYDR.TO_DE
   || FUN.emsg('Data wprowadzenia do eksploatacji, data <do>\n'
               'nie może być wcześniejsza niż data <od>.'@);
      _wy:='TO_DE'
   ?}
?};
{? _wy='' || 1 || _wy ?}


\be_skr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: przed redakcja pola PAR_WYDR.SKR_ONLY
::  OLD: \be_skr/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RODZAJ2 <> 1 || 0 || 1 ?}


\ae_skr_only
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2006]
:: OPIS: Po redakcji pola PAR_WYDR.SKR_ONLY
::  OLD: \ae_skr_only/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.SKR_ONLY=1 || PAR_WYDR.SKRESL:=0 ?};
{? PAR_WYDR.win_edit('?')='ZEST_SKR'
|| {? PAR_WYDR.SKR_ONLY<>1
   || PAR_WYDR.efld_opt('ZEST_SKR','editable=grayed',PAR_WYDR,'SKR_OD'); PAR_WYDR.SKR_OD:=0
   || PAR_WYDR.efld_opt('ZEST_SKR','editable=1',PAR_WYDR,'SKR_OD')
   ?}
?};
1


\be_umo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: przed redakcja pola PAR_WYDR.UMO_ONLY
::  OLD: \be_umo/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RODZAJ2 <> 1 || 0 || 1 ?}


\check_etykiety
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2006]
:: OPIS: Formula sprawdza wypelnienie pol w oknie parametrow druku etykiet
::  OLD: \check_etykiety/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.ETY_WYB=3
|| {? PAR_WYDR.OD_NRI='' | PAR_WYDR.DO_NRI=''
   || FUN.emsg('Nie podano zakresu środków.'@); 'OD_NRI'
   || {? PAR_WYDR.OD_NRI>PAR_WYDR.DO_NRI
      || FUN.emsg('Nieprawidłowy zakres środków.'@); 'OD_NRI'
      || 1
      ?}
   ?}
|| 1
?}


\barcode
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2006]
:: OPIS: Formula do druku kodow kreskowych na drukarkach Zebra, Datamax, Clever
::   WE: Jesli _a jest i jest rowne 1 to wydruk arkusza etykiet na standardowej drukarce,
::       jesli _a nie ma lub jest = 0, wydruk na drukarce kodow kreskowych
::  OLD: \barcode/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
SRSR.cntx_psh(); SRST.cntx_psh();
{? _=0 || _a:=0 ?};
{? _a=1 || bar_form:='' ?};
:: Srodki trwale i niskocenne
{? PAR_WYDR.ZAKRESDR=0
||
:: wszystkie
   {? PAR_WYDR.ETY_WYB=1
   || SRST.index('OKR_O_W');
      {? PAR_WYDR.ODD<>null
      || SRST.prefix(SSTALE.AO,PAR_WYDR.ODD)
      || SRST.prefix(SSTALE.AO)
      ?};
      {? SRST.first()
      || {! |?
            exec('bar_srod','fst',_a)
         !}
      || FUN.emsg('Brak środków zgodnych z ustawionymi parametrami.'@)
      ?}
:: wybor uzytkownika
   |? PAR_WYDR.ETY_WYB=2
   || SRST.index('OKR_O_W');
      {? PAR_WYDR.ODD<>null
      || SRST.prefix(SSTALE.AO,PAR_WYDR.ODD)
      || SRST.prefix(SSTALE.AO)
      ?};
      {? SRST.first()
      || _win:=exec('create_win_wkkr','fst');
         SRST.win_sel(_win);
         {? _a=0
         || SRST.hdr_sel();
            SRST.hdr_sel(', etykieta: %1'@[PAR_WYDR.URZ_LAB().KOD])
         ?};
         SRST.select()
      || FUN.emsg('Brak środków zgodnych z ustawionymi parametrami.'@)
      ?}
   |? PAR_WYDR.ETY_WYB=3
:: zakres od nr do nr inwentarzowego
   || SRST.index('OKR_O_W');
      {? PAR_WYDR.ODD<>null
      || SRST.prefix(SSTALE.AO,PAR_WYDR.ODD)
      || SRST.prefix(SSTALE.AO)
      ?};
      {? SRST.first()
      || _licznik:=0;
         {! |?
            {? SRST.SRSR().Z='N' & (SRST.NRI>=PAR_WYDR.OD_NRI & SRST.NRI<=PAR_WYDR.DO_NRI)
            || exec('bar_srod','fst',_a);
               _licznik+=1
            || SRST.next()
            ?}
         !};
         {? _licznik=0 || FUN.emsg('Brak środków zgodnych z ustawionymi parametrami.'@) ?}
      || FUN.emsg('Brak środków zgodnych z ustawionymi parametrami.'@)
      ?}
   ?}
:: Srodki trwale
|? PAR_WYDR.ZAKRESDR=1
|| {? PAR_WYDR.ETY_WYB=1
   || SRST.index('OKRES_W');
      {? PAR_WYDR.ODD<>null
      || SRST.prefix('T',SSTALE.AO,PAR_WYDR.ODD().OD,)
      || SRST.prefix('T',SSTALE.AO)
      ?};
      {? SRST.first()
      || {! |?
            {? SRST.SRSR().Z='N'
            || exec('bar_srod','fst',_a)
            || SRST.next()
            ?}
         !}
      || FUN.emsg('Brak środków zgodnych z ustawionymi parametrami.'@)
      ?}
   |? PAR_WYDR.ETY_WYB=2
   || SRST.index('OKRES_W');
      {? PAR_WYDR.ODD<>null
      || SRST.prefix('T',SSTALE.AO,PAR_WYDR.ODD().OD,)
      || SRST.prefix('T',SSTALE.AO)
      ?};
      {? SRST.first()
      || _win:=exec('create_win_wkkr','fst');
         SRST.win_sel(_win);
         {? _a=0
         || SRST.hdr_sel();
            SRST.hdr_sel(', etykieta: %1'@[PAR_WYDR.URZ_LAB().KOD])
         ?};
         SRST.select()
      || FUN.emsg('Brak środków zgodnych z ustawionymi parametrami.'@)
      ?}
   |? PAR_WYDR.ETY_WYB=3
   || SRST.index('OKRES_W');
      {? PAR_WYDR.ODD
      || SRST.prefix('T',SSTALE.AO,PAR_WYDR.ODD().OD,)
      || SRST.prefix('T',SSTALE.AO)
      ?};
      {? SRST.first()
      || _licznik:=0;
         {! |?
            {? SRST.SRSR().Z='N' & (SRST.NRI>=PAR_WYDR.OD_NRI & SRST.NRI<=PAR_WYDR.DO_NRI)
            || exec('bar_srod','fst',_a);
               _licznik+=1
            || SRST.next()
            ?}
         !};
         {? _licznik=0 || FUN.emsg('Brak środków zgodnych z ustawionymi parametrami.'@) ?}
      || FUN.emsg('Brak środków zgodnych z ustawionymi parametrami.'@)
      ?}
   ?}
:: Srodki niskocenne
|? PAR_WYDR.ZAKRESDR=2
|| {? PAR_WYDR.ETY_WYB=1
   || SRST.index('OKRES_W');
      {? PAR_WYDR.ODD<>null
      || SRST.prefix('N',SSTALE.AO,PAR_WYDR.ODD().OD,)
      || SRST.prefix('N',SSTALE.AO)
      ?};
      {? SRST.first()
      || {! |?
            {? SRST.SRSR().Z='N'
            || exec('bar_srod','fst',_a)
            || SRST.next()
            ?}
         !}
      || FUN.emsg('Brak środków zgodnych z ustawionymi parametrami.'@)
      ?}
   |? PAR_WYDR.ETY_WYB=2
   || SRST.index('OKRES_W');
      {? PAR_WYDR.ODD<>null
      || SRST.prefix('N',SSTALE.AO,PAR_WYDR.ODD().OD,)
      || SRST.prefix('N',SSTALE.AO)
      ?};
      {? SRST.first()
      || _win:=exec('create_win_wkkr','fst');
         SRST.win_sel(_win);
         {? _a=0
         || SRST.hdr_sel();
            SRST.hdr_sel(', etykieta: %1'@[PAR_WYDR.URZ_LAB().KOD])
         ?};
         SRST.select()
      || FUN.emsg('Brak środków zgodnych z ustawionymi parametrami.'@)
      ?}
   |? PAR_WYDR.ETY_WYB=3
   || SRST.index('OKRES_W');
      {? PAR_WYDR.ODD<>null
      || SRST.prefix('N',SSTALE.AO,PAR_WYDR.ODD().OD,)
      || SRST.prefix('N',SSTALE.AO)
      ?};
      {? SRST.first()
      || _licznik:=0;
         {! |?
            {? SRST.SRSR().Z='N' & (SRST.NRI>=PAR_WYDR.OD_NRI & SRST.NRI<=PAR_WYDR.DO_NRI)
            || exec('bar_srod','fst',_a);
               _licznik+=1
            || SRST.next()
            ?}
         !};
         {? _licznik=0 || FUN.emsg('Brak środków zgodnych z ustawionymi parametrami.'@) ?}
      ?}
   ?}
?};
SRST.hdr_sel();
SRSR.cntx_pop(); SRST.cntx_pop();
1


\check_amk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: funkcja sprawdzająca poprawność danych w okienku AMKONTO
::       zmiennej PAR_WYDR
::   WE:
::   WY:
::  OLD: \check_amk/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RODZAJ=2 & PAR_WYDR.KONTA=3
|| FUN.emsg('Wydruku w wersji syntetycznej nie można grupować według środków i kont.'@);
   _wy:='RODZAJ'
|| _wy:=1
?};
_wy


\srsw_druk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Czy uwzlgędniać rekord SRSW na wydruku
::   WY: 1 - tak, 0 - nie
::----------------------------------------------------------------------------------------------------------------------
(PAR_WYDR.ODD=null | PAR_WYDR.ODD=SRSW.SRST().ODD)
& (PAR_WYDR.ZAKRESDR=0 | (PAR_WYDR.ZAKRESDR=1 & SRSW.SRST().R='T') | (PAR_WYDR.ZAKRESDR=2 & SRSW.SRST().R='N'))
& ((PAR_WYDR.DANE=1 & SRSW.KONPOD<>null) | (PAR_WYDR.DANE=2 & SRSW.KONFIN<>null) | (PAR_WYDR.DANE=3 & SRSW.KONFIN<>null))


\check_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Formula po redakcji okienka BO dla wydruku A.
::  OLD: \check_bo/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=exec('check_wyb_grup','fst');
{? _wy='' || 1 || _wy ?}


\if_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS:  Funkcja testuje czy utworzono poprawnie tabele tymczasowa
::        z wynikiem zapytania SQL i czy zawiera ono jakies dane
::   WE: _a = akronim tabeli, _b = jesli podano _b i _b = 1 to wyswietl komunikat
::   WY:  1 = ok, utworzono tabele i zawiera ona dane, 0 = brak danych, nie utworzono tabeli
::  OLD: \if_ok/equery.fml
::----------------------------------------------------------------------------------------------------------------------
{? type_of(($(_a))()) <> type_of(~~)
|| {? ~($(_a + '.first'))()
   || {? _ = 2 & _b = 1
      || FUN.emsg('Brak danych spełniających założone warunki.'@);
         _wy:=0
      || _wy:=1
      ?}
   || _wy:=1
   ?}
|| FUN.emsg('Nie udało się poprawnie wykonać zapytania SQL.'@);
   _wy:=0
?};
_wy




\get_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca BO bieżącego roku lub pierwszy itniejący okres w roku podatkowym
::   WY: OKRO_F.ref()
::----------------------------------------------------------------------------------------------------------------------
_wy:=null;
OKRO_F.cntx_psh();
OKRO_F.index('SRODKI');
OKRO_F.prefix(REF.FIRMA,SSTALE.AO().RES,0);
{? OKRO_F.first()
|| _wy:=OKRO_F.ref()
|| OKRO_F.prefix(REF.FIRMA,SSTALE.AO().RES);
   {? OKRO_F.first() || _wy:=OKRO_F.ref() ?}
?};
OKRO_F.cntx_pop();
_wy


\check_wartamo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PJ] [8.60]
:: OPIS: Weryfikacja wartosci parametrow w okienku WARTAMO zmiennej PAR_WYDR
::  OLD: \check_wartamo/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.WAR_GR=2
|| {? |PAR_WYDR.GRUPA_OD<>'' & |PAR_WYDR.GRUPA_DO<>''
   || {? |PAR_WYDR.GRUPA_OD > |PAR_WYDR.GRUPA_DO
      || FUN.emsg('Nieprawidłowy zakres grup.'@);
         _wy:='GRUPA_OD'
      || _wy:=''
      ?}
   || _wy:=''
   ?}
|? PAR_WYDR.WAR_GR=3 & ~exec('test_gr_list','fst')
|| FUN.emsg('Wybrano opcję \'Wybór grup\', ale nie zaznaczono\nżadnej grupy na liście.'@);
   _wy:='WYB_GRUP'
|| _wy:=''
?};
{? _wy=''
|| {? PAR_WYDR.FROM_DE>PAR_WYDR.STAN_NA
   || FUN.emsg('Data wprowadzenia do eksploatacji, zakres <od>\n'
               'nie może być póżniejsza niż koniec bieżącego okresu.'@);
      _wy:='FROM_DE'
   ?}
?};
{? _wy=''
|| {? PAR_WYDR.TO_DE>PAR_WYDR.STAN_NA
   || FUN.emsg('Data wprowadzenia do eksploatacji, zakres <do>\n'
               'nie może być póżniejsza niż koniec bieżącego okresu.'@);
      _wy:='TO_DE'
   ?}
?};
{? _wy=''
|| {? PAR_WYDR.TO_DE<>date(0,0,0) & PAR_WYDR.FROM_DE>PAR_WYDR.TO_DE
   || FUN.emsg('Data wprowadzenia do eksploatacji, zakres <od>\n'
               'nie może być póżniejszy niż zakres <do>.'@);
      _wy:='FROM_DE'
   ?}
?};
_wy


\be_k_tsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola PAR_WYDR.K_TSK
::----------------------------------------------------------------------------------------------------------------------
TSK.prefix(null);
1


\be_t_tsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola PAR_WYDR.T_TSK
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.K_TSK
|| TSK.prefix(PAR_WYDR.K_TSK);
   1
|| 0
?}


\be_maf
::----------------------------------------------------------------------------------------------------------------------
:: Utworzyl: PJ  [8.50]
:: OPIS: Przed redakcją pola MAF - umożliwia redakcję jeśli
::       PAR_WYDR.RODZAJ2 <> 2 czyli 'jednorazowo umorzone'
::  OLD: \be_maf/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RODZAJ2 <> 1
|| 0
|| EDIT_ES.RODZAJ:='F';
   {? PAR_WYDR.ZAKRESDR=0 || EDIT_ES.NISKO:=''
   |? PAR_WYDR.ZAKRESDR=1 || EDIT_ES.NISKO:='N'
   |? PAR_WYDR.ZAKRESDR=2 || EDIT_ES.NISKO:='T'
   ?};
   1
?}


\be_map
::----------------------------------------------------------------------------------------------------------------------
:: Utworzyl: PJ  [8.50]
:: OPIS: Przed redakcją pola MAP - umożliwia redakcję jeśli
::       PAR_WYDR.RODZAJ2 <> 2 czyli 'jednorazowo umorzone'
::  OLD: \be_map/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RODZAJ2<>1
|| 0
|| EDIT_ES.RODZAJ:='P';
   {? PAR_WYDR.ZAKRESDR=0 || EDIT_ES.NISKO:=''
   |? PAR_WYDR.ZAKRESDR=1 || EDIT_ES.NISKO:='N'
   |? PAR_WYDR.ZAKRESDR=2 || EDIT_ES.NISKO:='T'
   ?};
   1
?}


\be_mad
::----------------------------------------------------------------------------------------------------------------------
:: Utworzyl: JK  [18.42]
:: OPIS: Przed redakcją pola MAD - umożliwia redakcję jeśli
::       PAR_WYDR.RODZAJ2 <> 2 czyli 'jednorazowo umorzone'
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RODZAJ2<>1
|| 0
|| EDIT_ES.RODZAJ:='D';
   {? PAR_WYDR.ZAKRESDR=0 || EDIT_ES.NISKO:=''
   |? PAR_WYDR.ZAKRESDR=1 || EDIT_ES.NISKO:='N'
   |? PAR_WYDR.ZAKRESDR=2 || EDIT_ES.NISKO:='T'
   ?};
   1
?}


\ae_par_zakres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redakcji pola PAR_WYDR.ZAKRESDR
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.ZAKRESDR=2 & PAR_WYDR.MAP().NISKO='N' || PAR_WYDR.MAP:=null ?};
{? PAR_WYDR.ZAKRESDR=2 & PAR_WYDR.MAF().NISKO='N' || PAR_WYDR.MAF:=null ?};
1


\kopia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Kopiuje rekord TAB_SROD na TMP_SROD lub odwrotnie dla \sql_sr
::  OLD: \kopia/equery.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a = 1
|| TMP_SROD.SROD_R:=TAB_SROD.SROD_R;
   TMP_SROD.NST:=TAB_SROD.NST;
   TMP_SROD.NRI:=TAB_SROD.NRI;
   TMP_SROD.DE:=TAB_SROD.DE;
   TMP_SROD.DSE:=TAB_SROD.DSE;
   TMP_SROD.NF:=TAB_SROD.NF;
   TMP_SROD.U:=TAB_SROD.U;
   TMP_SROD.DZ:=TAB_SROD.DZ;
   TMP_SROD.GRUPA:=TAB_SROD.GRUPA;
   TMP_SROD.GR:=TAB_SROD.GR;
   TMP_SROD.ODDZIAL:=TAB_SROD.ODDZIAL;
   TMP_SROD.UMOF:=TAB_SROD.UMOF;
   TMP_SROD.UMOP:=TAB_SROD.UMOP;
   TMP_SROD.UMOD:=TAB_SROD.UMOD;
   TMP_SROD.WARF:=TAB_SROD.WARF;
   TMP_SROD.WARP:=TAB_SROD.WARP;
   TMP_SROD.WARD:=TAB_SROD.WARD;
   TMP_SROD.NETP:=TAB_SROD.NETP;
   TMP_SROD.NETF:=TAB_SROD.NETF;
   TMP_SROD.NETD:=TAB_SROD.NETD;
   TMP_SROD.PNETP:=TAB_SROD.PNETP;
   TMP_SROD.PNETF:=TAB_SROD.PNETF;
   TMP_SROD.PNETD:=TAB_SROD.PNETD;
   TMP_SROD.WKP:=TAB_SROD.WKP;
   TMP_SROD.WKF:=TAB_SROD.WKF;
   TMP_SROD.WKD:=TAB_SROD.WKD;
   TMP_SROD.WAR1:=TAB_SROD.WAR1;
   TMP_SROD.WAR2:=TAB_SROD.WAR2;
   TMP_SROD.ULGA:=TAB_SROD.ULGA;
   TMP_SROD.STAWKA:=TAB_SROD.STAWKA;
   TMP_SROD.STAFIN:=TAB_SROD.STAFIN;
   TMP_SROD.STADOD:=TAB_SROD.STADOD;
   TMP_SROD.WKF:=TAB_SROD.WKF;
   TMP_SROD.WKP:=TAB_SROD.WKP;
   TMP_SROD.WKD:=TAB_SROD.WKD;
   TMP_SROD.JORG:=TAB_SROD.JORG;
   TMP_SROD.NOT:=TAB_SROD.NOT;
   TMP_SROD.DOT:=TAB_SROD.DOT;
   TMP_SROD.RODZSROD:=TAB_SROD.RODZSROD;
   TMP_SROD.MAP:=TAB_SROD.MAP;
   TMP_SROD.MAF:=TAB_SROD.MAF;
   TMP_SROD.MAD:=TAB_SROD.MAD;
   TMP_SROD.MAPT:=TAB_SROD.MAPT;
   TMP_SROD.MAFT:=TAB_SROD.MAFT;
   TMP_SROD.MADT:=TAB_SROD.MADT;
   TMP_SROD.KONTOP:=TAB_SROD.KONTOP;
   TMP_SROD.KONTOF:=TAB_SROD.KONTOF;
   TMP_SROD.KONTOD:=TAB_SROD.KONTOD;
   TMP_SROD.KONTOF_R:=TAB_SROD.KONTOF_R;
   TMP_SROD.KONTOP_R:=TAB_SROD.KONTOP_R;
   TMP_SROD.KONTOD_R:=TAB_SROD.KONTOD_R;
   TMP_SROD.PRZYCH:=TAB_SROD.PRZYCH;
   TMP_SROD.ROZCH:=TAB_SROD.ROZCH;
   TMP_SROD.Z:=TAB_SROD.Z;
   TMP_SROD.S:=TAB_SROD.S;
   TMP_SROD.DSE:=TAB_SROD.DSE;
   TMP_SROD.NDS:=TAB_SROD.NDS;
   TMP_SROD.SCHEMAT:=TAB_SROD.SCHEMAT;
   TMP_SROD.AM_POD:=TAB_SROD.AM_POD;
   TMP_SROD.AM_FIN:=TAB_SROD.AM_FIN;
   TMP_SROD.AM_DOD:=TAB_SROD.AM_DOD;
   TMP_SROD.ACT_AMP:=TAB_SROD.ACT_AMP;
   TMP_SROD.ACT_AMF:=TAB_SROD.ACT_AMF;
   TMP_SROD.ACT_AMD:=TAB_SROD.ACT_AMD;
   TMP_SROD.K_WARP:=TAB_SROD.K_WARP;
   TMP_SROD.K_WARD:=TAB_SROD.K_WARD;
   TMP_SROD.K_UMOP:=TAB_SROD.K_UMOP;
   TMP_SROD.K_WARF:=TAB_SROD.K_WARF;
   TMP_SROD.K_UMOD:=TAB_SROD.K_UMOD;
   TMP_SROD.K_UMOF:=TAB_SROD.K_UMOF;
   TMP_SROD.K_ULGA:=TAB_SROD.K_ULGA;
   TMP_SROD.AKTYWNY:=TAB_SROD.AKTYWNY;
   TMP_SROD.MIE_OD:=TAB_SROD.MIE_OD;
   TMP_SROD.MIE_DO:=TAB_SROD.MIE_DO
|? _a = 2
|| TAB_SROD.SROD_R:=TMP_SROD.SROD_R;
   TAB_SROD.NST:=TMP_SROD.NST;
   TAB_SROD.NRI:=TMP_SROD.NRI;
   TAB_SROD.DE:=TMP_SROD.DE;
   TAB_SROD.DSE:=TMP_SROD.DSE;
   TAB_SROD.NF:=TMP_SROD.NF;
   TAB_SROD.U:=TMP_SROD.U;
   TAB_SROD.DZ:=TMP_SROD.DZ;
   TAB_SROD.GRUPA:=TMP_SROD.GRUPA;
   TAB_SROD.GR:=TMP_SROD.GR;
   TAB_SROD.ODDZIAL:=TMP_SROD.ODDZIAL;
   TAB_SROD.UMOF:=TMP_SROD.UMOF;
   TAB_SROD.UMOP:=TMP_SROD.UMOP;
   TAB_SROD.UMOD:=TMP_SROD.UMOD;
   TAB_SROD.WARD:=TMP_SROD.WARD;
   TAB_SROD.WARF:=TMP_SROD.WARF;
   TAB_SROD.WARP:=TMP_SROD.WARP;
   TAB_SROD.NETP:=TMP_SROD.NETP;
   TAB_SROD.NETF:=TMP_SROD.NETF;
   TAB_SROD.NETD:=TMP_SROD.NETD;
   TAB_SROD.PNETP:=TMP_SROD.PNETP;
   TAB_SROD.PNETF:=TMP_SROD.PNETF;
   TAB_SROD.PNETD:=TMP_SROD.PNETD;
   TAB_SROD.WKP:=TMP_SROD.WKP;
   TAB_SROD.WKF:=TMP_SROD.WKF;
   TAB_SROD.WKD:=TMP_SROD.WKD;
   TAB_SROD.WAR1:=TMP_SROD.WAR1;
   TAB_SROD.WAR2:=TMP_SROD.WAR2;
   TAB_SROD.ULGA:=TMP_SROD.ULGA;
   TAB_SROD.STAWKA:=TMP_SROD.STAWKA;
   TAB_SROD.STAFIN:=TMP_SROD.STAFIN;
   TAB_SROD.STADOD:=TMP_SROD.STADOD;
   TAB_SROD.WKF:=TMP_SROD.WKF;
   TAB_SROD.WKP:=TMP_SROD.WKP;
   TAB_SROD.WKD:=TMP_SROD.WKD;
   TAB_SROD.JORG:=TMP_SROD.JORG;
   TAB_SROD.NOT:=TMP_SROD.NOT;
   TAB_SROD.DOT:=TMP_SROD.DOT;
   TAB_SROD.RODZSROD:=TMP_SROD.RODZSROD;
   TAB_SROD.MAP:=TMP_SROD.MAP;
   TAB_SROD.MAF:=TMP_SROD.MAF;
   TAB_SROD.MAD:=TMP_SROD.MAD;
   TAB_SROD.MAPT:=TMP_SROD.MAPT;
   TAB_SROD.MAFT:=TMP_SROD.MAFT;
   TAB_SROD.MADT:=TMP_SROD.MADT;
   TAB_SROD.KONTOP:=TMP_SROD.KONTOP;
   TAB_SROD.KONTOF:=TMP_SROD.KONTOF;
   TAB_SROD.KONTOD:=TMP_SROD.KONTOD;
   TAB_SROD.KONTOF_R:=TMP_SROD.KONTOF_R;
   TAB_SROD.KONTOP_R:=TMP_SROD.KONTOP_R;
   TAB_SROD.KONTOD_R:=TMP_SROD.KONTOD_R;
   TAB_SROD.PRZYCH:=TMP_SROD.PRZYCH;
   TAB_SROD.ROZCH:=TMP_SROD.ROZCH;
   TAB_SROD.Z:=TMP_SROD.Z;
   TAB_SROD.S:=TMP_SROD.S;
   TAB_SROD.DES:=TMP_SROD.DES;
   TAB_SROD.NDS:=TMP_SROD.NDS;
   TAB_SROD.SCHEMAT:=TMP_SROD.SCHEMAT;
   TAB_SROD.AM_POD:=TMP_SROD.AM_POD;
   TAB_SROD.AM_DOD:=TMP_SROD.AM_DOD;
   TAB_SROD.AM_FIN:=TMP_SROD.AM_FIN;
   TAB_SROD.ACT_AMP:=TMP_SROD.ACT_AMP;
   TAB_SROD.ACT_AMD:=TMP_SROD.ACT_AMD;
   TAB_SROD.ACT_AMF:=TMP_SROD.ACT_AMF;
   TAB_SROD.K_WARP:=TMP_SROD.K_WARP;
   TAB_SROD.K_WARD:=TMP_SROD.K_WARD;
   TAB_SROD.K_UMOP:=TMP_SROD.K_UMOP;
   TAB_SROD.K_UMOD:=TMP_SROD.K_UMOD;
   TAB_SROD.K_WARF:=TMP_SROD.K_WARF;
   TAB_SROD.K_UMOF:=TMP_SROD.K_UMOF;
   TAB_SROD.K_ULGA:=TMP_SROD.K_ULGA;
   TAB_SROD.AKTYWNY:=TMP_SROD.AKTYWNY;
   TAB_SROD.MIE_OD:=TMP_SROD.MIE_OD;
   TAB_SROD.MIE_DO:=TMP_SROD.MIE_DO
?}


\check_tabamo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Formula po redakcji okienka TABAMO dla wydruku H.
::  OLD: \check_tabamo/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=exec('check_wyb_grup','fst');
{? _wy='' || 1 || _wy ?}


\be_ma_lin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formula przed redakcja pola MA.LIN
::----------------------------------------------------------------------------------------------------------------------
{? 1+MA.T='D' || 1 || 0 ?}


\ae_ma_lin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formula po redakcji pola MA.LIN
::----------------------------------------------------------------------------------------------------------------------
_wy:=1;
{? MA.LIN<>''
|| _kod:=MA.LIN;
   _tor:=MA.RODZAJ;
   MA.cntx_psh();
   MA.index('TYPKOD');
   MA.prefix('Liniowa',_tor,_kod);
   {? ~MA.first()
   || FUN.emsg('Brak metody amortyzacji liniowej o podanym kodzie.'@);
      _wy:=0
   ?};
   MA.cntx_pop()
?};
_wy


\f3_ma_lin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formula na F3 w polu MA.LIN
::----------------------------------------------------------------------------------------------------------------------
_lin:=MA.LIN;
_tor:=MA.RODZAJ;
MA.cntx_psh();
MA.index('TYPKOD');
MA.prefix('Liniowa',_tor);
MA.find_key(_lin);
_win:=MA.mk_sel(,,0);
MA.win_fld(_win,,'K',,,6,,,'Kod'@);
MA.win_fld(_win,,'N',,,30,,,'Nazwa'@);
MA.win_act(_win,,'Formuła','Wybierz'@@,,,,"sel_exit()",1,,,,'W');
MA.win_sel(_win);
{? MA.select(,1) || _lin:=MA.K ?};
MA.cntx_pop();
MA.LIN:=_lin


\tor_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła weryfikująca możliwość włączenia dodatkowego toru amortyzacji.
::       Zasada korzystania z toru dodatkowego jest taka, że można włączyć tor dodatkowy
::       na starcie systemu. Można później wyłączyć w dowolnym momencie, ale nie można włączyć
::       w trakcie działania firmy jeżeli naliczono już amortyzację lub dodano dokument (poza OT) do
::       dowolnego środka w dowolnym okresie.
::----------------------------------------------------------------------------------------------------------------------
_wy:=1;
SRSR.cntx_psh();
SRST.cntx_psh();
SRDO.cntx_psh();
SRD.maski('r');
SRSR.prefix();
{? SRSR.first()
|| _sql:='select NRI from SRST where SRST.NAL=''T''';
   _srst:=sql(_sql);
   {? _srst.first() || _wy:=0 ?};
   {? _wy
   || SRDO.prefix();
      {? SRDO.first()
      || _sql:='select NRI from SRDO where SRDO.RODZ<>''P''';
         _srdo:=sql(_sql);
         {? _srdo.first() || _wy:=0 ?}
      ?}
   ?}
?};
SRDO.cntx_pop();
SRST.cntx_pop();
SRSR.cntx_pop();
_wy


\ae_srsr_pojazd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redakcji pola SRSR.POJAZD
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.POJAZD='N'
|| {? SRSR.SAMOCHOD='T' || SRSR.SAMOCHOD:='N' ?};
   {? SRSR.SAM_EL='T' || SRSR.SAM_EL:='N' ?}
?};
exec('ae_pojazd','fst_ext'); 1


\zestaw_kont_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Weryfikacja czy zestaw kont jest poprawny
::   WE: _wskazanie na zestaw kont
::   WY: 1/0 - poprawny lub nie
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & _a<>null
|| _PROCENT:=0;
   KKOSZ.cntx_psh();
   KKOSZ.index('KONTO');
   KKOSZ.prefix(_a);
   {? KKOSZ.first()
   || {! |?
         _PROCENT+=KKOSZ.PR;
         KKOSZ.next()
      !}
   ?};
   KKOSZ.cntx_pop();
   {? _PROCENT$2>100 | _PROCENT<=0 || 0 || 1 ?}
|| 0
?}


\ae_srsr_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redakcji pola SRSR.R
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.U_SR='T' & cur_win()='RED_U'
|| {? SRSR.R='T'
   || SRSR.efld_opt('RED_U', 'enable=1',, 'SAMOCHOD');
      SRSR.efld_opt('RED_U', 'enable=1',, 'SAM_EL')
   || SRSR.efld_opt('RED_U', 'enable=0',, 'SAMOCHOD');
      SRSR.efld_opt('RED_U', 'enable=0',, 'SAM_EL')
   ?}
?};
1


\parses_srdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła ustala PARSES dla czynności na podstawie rekordu SRDO (dokument środka)
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;
{? _mp.pathTodo()
|| _result:=0;
   _rok:='';
   {? var_pres('SRDO',_in) & var_pres('SRDO',_in)=type_of(null()) & _in.SRDO<>null & SRDO.seek(_in.SRDO,ref_name(_in.SRDO),1)
   || exec('SRD','object');
      {? SRD.FST=null || SRD.FST:=exec('szuk_b_dom','parses','FST') ?};
      _okres:=exec('find_okro_f','fst',SRDO.DO)
   || _okres:=null
   ?};
   {? _okres<>null
   || __PARSES.setVal('OkresRok',_okres);
      _result:=1
   || _result:=1
   ?}
?};
_result


\podp_srdo_nri
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2011]
:: OPIS: formula podpowiada wartość pola SRDO.NRI (numer inwentarzowy srodka w dokumencie zmiany właściwości)
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.GRP<>'E'
||
:: numer dla środka lub zestawu
   {? PAR_SKID.get(200)='T' & SRDO.ODD=null
   || FUN.emsg('W przypadku numeracji środków w obrębie jednostek księgowych (parametr 200)\n'
               'należy najpierw uzupełnić pole z jednostką organizacyjną (księgowa uzupełni się automatycznie)\n'
               'Brak wypełnienia tych pól uniemożliwia wygenerowanie i redakcję numeru inwentarzowego.'@);
      return(0)
   ?};
   _nri:='';
   {? SRDO.NRI=''
   || _formula:=exec('nri_form','fst');
      {? _formula<>''
      || _nri:=($(_formula))();
         {? _nri<>'' || SRDO.NRI:=_nri ?}
      || 'NRI'
      ?}
   || 1
   ?}
||
:: numer dla elementu składowego
   {? SRDO=''
   || SRSR.cntx_psh();
      _nri:=EDIT_ES.SRSR().NRI;
      {? _nri+1='.' || _nri:=_nri-1 ?};
      SRSR.cntx_pop();
      _nri:=_nri+'/';
      SRSR.cntx_psh();
      SRSR.index('TREE');
      SRSR.prefix(EDIT_ES.SRSR);
      {? SRSR.last()
      || _nri+=form((#(SRSR.NRI+2)+1),-2)
      || _nri+='01'
      ?};
      SRSR.cntx_pop();
      {? _nri<>'' || SRDO.NRI:=_nri ?}
   ?};
   1
?}


\mod_rec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła uzupełnia pola dotyczące daty modyfikacji dokumentu
::----------------------------------------------------------------------------------------------------------------------
SRDO.MOD_KTO:=exec('user','fst');
SRDO.MOD_DATA:=date();
SRDO.MOD_CZAS:=time()


\be_srsw_ward
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redagowaniem pól dotyczacych wartości dla toru dodatkowego w składniku wartości
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
{? FINFO.TOR_D='T' || 1 || 0 ?}


\isSet
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Czy wskazany rekord SRSR jest zestawem?
::   WE: SRSR.ref()
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
SRSR.cntx_psh();
SRSR.prefix();
{? _>0 & type_of(_a)=type_of(null) & _a<>null
|| {? SRSR.seek(_a,SRSR.name()) & SRSR.GRP='T' || _wy:=1 ?}
?};
SRSR.cntx_pop();
_wy


\isElement
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Czy wskazany rekord SRSR jest elementem?
::   WE: SRSR.ref()
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
SRSR.cntx_psh();
SRSR.prefix();
{? _>0 & type_of(_a)=type_of(null) & _a<>null
|| {? SRSR.seek(_a,SRSR.name()) & SRSR.GRP='E' || _wy:=1 ?}
?};
SRSR.cntx_pop();
_wy


\isAsset
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Czy wskazany rekord SRSR jest zwykłym środkiem?
::   WE: SRSR.ref()
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
SRSR.cntx_psh();
SRSR.prefix();
{? _>0 & type_of(_a)=type_of(null) & _a<>null
|| {? SRSR.seek(_a,SRSR.name()) & SRSR.GRP='N' || _wy:=1 ?}
?};
SRSR.cntx_pop();
_wy


\czy_nal_amor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Test czy naliczono amortyzcję we wskazanym okresie i j. księgowej
::   WE: _a - wskazanie na okres (OKRO_F.ref())
::       _b - wskazanie na j. księgową (ODD.ref())
::   WY: 1 - naliczono, 0 - nie naliczono
::----------------------------------------------------------------------------------------------------------------------
_wy:=1;
SRST.cntx_psh();
SRST.index('NAL');
SRST.prefix(_a,_b,'N');
{? SRST.first() || _wy:=0 ?};
SRST.cntx_pop();
_wy


\czy_amor_de
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Czy możliwe dołączanie środków w bieżącej (jeżeli ustawiona w parametrach)
::       lub jakiejkolwiek j. księgowej dla której bieżący użytkownik ma uprawnienia,
::       jeżeli podano opcjonalny parametr _a to dla jednostki ktorą wskazano w parametrze
::       Formuła sprawdza czy zadekretowano amortyzację.
::   WE: [_a] - wskazanie na jednostkę księgową (ODD.ref())
::       [_b] - wskazanie na okres (OKRO_F.ref())
::       [_c] - 1/0 czy sprawdzać kolejne okresy
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? _>0 & type_of(_a)=type_of(null) & _a<>null || _odd:=_a || _odd:=null ?};
{? _<2 | type_of(_b)<>type_of(null) | _b=null || _b:=SSTALE.AO ?};
{? _<3 || _c:=0 ?};
ODD.cntx_psh();
OKRO_F.cntx_psh();
OKRO_F.index('SRODKI');
OKRO_F.prefix();
OKRO_F.seek(_b);
{? OPERATOR.DEPT<>null
|| OPERATOR.DEPT();
   {! |?
      {? OKRO_F.OES>=1 & OKRO_F.OES<=12
      || _maska:=exec('dok_maska','fst',OKRO_F.ref());
         {? exec('spr_czy_ksie','dok_fks_aut_dok','EP'+$(#OKRO_F.ref()),_maska)
            & exec('spr_czy_ksie','dok_fks_aut_dok','EF'+$(#OKRO_F.ref()),_maska)
            & (FINFO.TOR_D='N' | exec('spr_czy_ksie','dok_fks_aut_dok','ED'+$(#OKRO_F.ref()),_maska))
         || _wy:=1
         || _wy:=0
         ?}
      || _wy:=1
      ?};
      _c & _wy & OKRO_F.next()
   !}
|? _odd
|| ODD.prefix();
   {? ODD.seek(_a)
   || {! |?
         {? OKRO_F.OES>=1 & OKRO_F.OES<=12
         || _maska:=exec('dok_maska','fst',OKRO_F.ref());
            {? exec('spr_czy_ksie','dok_fks_aut_dok','EP'+$(#OKRO_F.ref()),_maska)
               & exec('spr_czy_ksie','dok_fks_aut_dok','EF'+$(#OKRO_F.ref()),_maska)
               & (FINFO.TOR_D='N' | exec('spr_czy_ksie','dok_fks_aut_dok','ED'+$(#OKRO_F.ref()),_maska))
            || _wy:=1
            || _wy:=0
            ?}
         || _wy:=1
         ?};
         _c & _wy & OKRO_F.next()
      !}
   ?}
|| exec('odd_filtr','fst');
   {? ODD.f_first()
   || {! |?
         {! |?
            {? OKRO_F.OES>=1 & OKRO_F.OES<=12
            || _maska:=exec('dok_maska','fst',OKRO_F.ref());
               {? exec('spr_czy_ksie','dok_fks_aut_dok','EP'+$(#OKRO_F.ref()),_maska)
                  & exec('spr_czy_ksie','dok_fks_aut_dok','EF'+$(#OKRO_F.ref()),_maska)
                  & (FINFO.TOR_D='N' | exec('spr_czy_ksie','dok_fks_aut_dok','ED'+$(#OKRO_F.ref()),_maska))
               || _wy:=1
               || _wy:=0
               ?}
            || _wy:=1
            ?};
            _c & _wy & OKRO_F.next()
         !};
         ~_wy & ODD.f_next()
      !}
   ?}
?};
OKRO_F.cntx_pop();
ODD.cntx_pop();
_wy


\be_fr_de
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: przed redakcja pola PAR_WYDR.FROM_DE, jesli RODZAJ2 <> 1 to
::       nieredagowalne
::  OLD: \be_fr_de/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RODZAJ2<>1 || 0 || 1 ?}


\be_to_de
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: przed redakcja pola PAR_WYDR.TO_DE, jesli RODZAJ2 <> 1 to
::       nieredagowalne
::  OLD: \be_to_de/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
1


\okr_test_dekret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła sprawdza czy amortyzacja za okres jest zadekretowana (lub nie ma potrzeby jej dekretowania)
::   WE: _a - OKRO_F.ref()
::   WY: 1/0 (jest zadekretowane/wymaga zadekretowania)
::----------------------------------------------------------------------------------------------------------------------
{? _=0 | type_of(_a)<>type_of(null) | _a=null
|| FUN.emsg('Niepoprawny parametr, weryfikacja zadekretowania amortyzacji niemożliwa.'@);
   return(0)
?};
_wy:=1;
ODD.cntx_psh();
ODD.index('ODDZIALY');
ODD.prefix(REF.FIRMA);
{? ODD.first()
|| {! |?
      _maska:=exec('dok_maska','fst',_a);
      {? (exec('spr_czy_ksie','dok_fks_aut_dok','EP'+$(#_a),_maska)
               & exec('czy_wart_amor','fst',OKRO_F.ref(),ODD.ref(),'P'))
         | (exec('spr_czy_ksie','dok_fks_aut_dok','EF'+$(#_a),_maska)
               & exec('czy_wart_amor','fst',OKRO_F.ref(),ODD.ref(),'F'))
         | (FINFO.TOR_D='T' & exec('spr_czy_ksie','dok_fks_aut_dok','ED'+$(#_a),_maska)
               & exec('czy_wart_amor','fst',OKRO_F.ref(),ODD.ref(),'D'))
      || _wy:=0
      ?};
      _wy & ODD.next()
   !}
?};
ODD.cntx_pop();
_wy


\okr_test_dekdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła sprawdza czy dokumenty wartościowe za okres są już zadekretowane (lub nie ma potrzeby jej dekretowania)
::   WE: _a - OKRO_F.ref()
::       _b - rodzja dokumentów środków trwałych ('W' - wartościowe, 'P' - przyjęcia)
::   WY: 1/0 (są zadekretowane/wymagają zadekretowania)
::----------------------------------------------------------------------------------------------------------------------
{? _=0 | type_of(_a)<>type_of(null) | _a=null
|| FUN.emsg('Niepoprawny parametr, weryfikacja zadekretowania dokumentów niemożliwa.'@);
   return(0)
?};
_wy:=1;

SRDO.cntx_psh();
SRDO.index('DEKRET');
SRDO.prefix(_a,_b,'N');
{? SRDO.first() || _wy:=0 ?};
SRDO.cntx_pop();
_wy


\czy_wart_amor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Czy amortyzacja we wskazanym okresie i j. księgowej dla wybranego toru amortyzacji
::       dla choć jednego środka jest > 0
::   WE: _a - wskazanie na okres (OKRO_F.ref())
::       _b - wskazanie na j. księgową (ODD.ref())
::       _c - tor amortyzacji ('P','F' lub 'D')
::   WY: 1/0 (Tak/Nie)
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? _>=3 & type_of(_a)=type_of(null) & _a<>null & type_of(_b)=type_of(null) & _b<>null & type_of(_c)=type_of('') & _c<>''
|| SRST.cntx_psh();
   {? SRST.name()<>('srstr'+REF.FIRMA().SYMBOL) || SRST.use('srstr'+REF.FIRMA().SYMBOL) ?};
   SRST.prefix();
   {? _c='P' || _sql:='select top 1 SRST.AMOP from SRST where SRST.OKRO_F=:_a and SRST.ODD=:_b and SRST.AMOP>0'
   |? _c='F' || _sql:='select top 1 SRST.AMOF from SRST where SRST.OKRO_F=:_a and SRST.ODD=:_b and SRST.AMOF>0'
   |? _c='D' || _sql:='select top 1 SRST.AMOD from SRST where SRST.OKRO_F=:_a and SRST.ODD=:_b and SRST.AMOD>0'
   ?};
   _tmp:=sql(_sql,_a,_b);
   {? _tmp.first() || _wy:=1 ?};
   SRST.cntx_pop()
?};
_wy


\suma_nal_amor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Suma amortyzcję we wskazanym okresie i j. księgowej dla wybranego toru amortyzacji
::   WE: _a - wskazanie na okres (OKRO_F.ref())
::       _b - wskazanie na j. księgową (ODD.ref())
::       _c - tor amortyzacji ('P','F' lub 'D')
::   WY: suma naliczonej amortyzacji
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? _>=3 & type_of(_a)=type_of(null) & _a<>null & type_of(_b)=type_of(null) & _b<>null & type_of(_c)=type_of('') & _c<>''
|| SRST.cntx_psh();
   {? SRST.name()<>('srstr'+REF.FIRMA().SYMBOL) || SRST.use('srstr'+REF.FIRMA().SYMBOL) ?};
   SRST.prefix();
   {? _c='P' || _sql:='select sum(SRST.AMOP) as SUM_AMOR from SRST where SRST.OKRO_F=:_a and SRST.ODD=:_b'
   |? _c='F' || _sql:='select sum(SRST.AMOF) as SUM_AMOR from SRST where SRST.OKRO_F=:_a and SRST.ODD=:_b'
   |? _c='D' || _sql:='select sum(SRST.AMOD) as SUM_AMOR from SRST where SRST.OKRO_F=:_a and SRST.ODD=:_b'
   ?};
   _tmp:=sql(_sql,_a,_b);
   {? _tmp.first() || _wy:=_tmp.SUM_AMOR ?};
   SRST.cntx_pop()
?};
_wy


\amor_zero
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Zwraca 1 jeżeli przekazana wartość sumy amortyzacji zerowa, zaś 0 w przeciwnym przypadku,
::       wykorzystywana w bramce procesu naliczania i dekretowania amortyzacji
::   WE: _a - wartość amortyzacji, _b - tor amortyzacji
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
{? _b='D' & ~exec('czy_tor_dod','fst') || return(1) ?};
{? _a=0
|| _par:={? _b='P' || 'podatkowego' |? _b='F' || 'bilansowego' |? _b='D' || 'dodatkowego' ?};
   FUN.emsg('Wartość amortyzacji dla toru %1 we wskazanym okresie, jednostce księgowej\n'
            'wynosi 0, czynność dekretowania amortyzacji nie będzie uruchamiana.'@[_par]);
   1
|| 0
?}


\amor_total_zero
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Zwraca 1 jeżeli przekazana wartość sumy amortyzacji zerowa, zaś 0 w przeciwnym przypadku,
::       wykorzystywana w bramce procesu naliczania i dekretowania amortyzacji
::   WE: _a - wartość amortyzacji dla toru podatkowego, _b - wartość amortyzacji dla toru bilansowego
::       _c - wartość amortyzacji dla toru dodatkowego
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
{? _a=0 & _b=0 & (~exec('czy_tor_dod','fst') | _c=0)
|| FUN.emsg('Wartość amortyzacji dla wszystkich torów we wskazanym okresie i jednostce księgowej\n'
            'wynosi 0, czynność dekretowania amortyzacji nie będzie uruchamiana.'@);
   1
|| 0
?}


\czy_tor_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Czy tor dodatkowy jest obsługiwany
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,FINFO);
FINFO.TOR_D='T'


\rok_podat_amor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyświetla tabelę amortyzacji dla roku podatkowego dla środków z bieżącej kartoteki
::       (środków trwałych lub niskocennych)
::   WE: [_a] - tor amortyzacji ('P'/'F'/'D'), jeżeli nie podano to program wyświetla okno z wyborem toru
::----------------------------------------------------------------------------------------------------------------------
{? _=0
|| {? FINFO.TOR_D='T' || EDIT_ES.win_edit('TOR_D') || EDIT_ES.win_edit('TOR') ?};
   EDIT_ES.TOR='P';
   {? ~EDIT_ES.edit()  || return() || _a:=EDIT_ES.TOR ?}
|? type_of(_a)<>type_of('') | |_a=''
|| FUN.emsg('Nieprawidłowe parametry wejściowe formuły.'@);
   return()
?};
{? _a='P' || _tor:='AMOP'
|? _a='F' || _tor:='AMOF'
|? _a='D' || _tor:='AMOD'
?};

_sql:='select NRI, '
       'max(ODD.OD) as JODD,'
       'max(TAM.GR) as GRUPA, '
       'max(case when OKRES=1 then %1 else null end) as AM1, '
       'max(case when OKRES=2 then %1 else null end) as AM2, '
       'max(case when OKRES=3 then %1 else null end) as AM3, '
       'max(case when OKRES=4 then %1 else null end) as AM4, '
       'max(case when OKRES=5 then %1 else null end) as AM5, '
       'max(case when OKRES=6 then %1 else null end) as AM6, '
       'max(case when OKRES=7 then %1 else null end) as AM7, '
       'max(case when OKRES=8 then %1 else null end) as AM8, '
       'max(case when OKRES=9 then %1 else null end) as AM9, '
       'max(case when OKRES=10 then %1 else null end) as AM10, '
       'max(case when OKRES=11 then %1 else null end) as AM11, '
       'max(case when OKRES=12 then %1 else null end) as AM12 '
       'from SRST '
       'left join ODD '
       'left join TAM '
       'where KIND=''T'' and ROK=:_a and SRST.R='':_b'' '[_tor];
{? OPERATOR.DEPT<>null || _sql+=' and SRST.ODD=:_c ' ?};
_sql+='group by ODD,NRI '
      'order by JODD, SRST.NRI';

_tAMO:=sql(_sql,SSTALE.AO().RES,EDIT_ES.R,OPERATOR.DEPT);

{? _tAMO.first()
|| _month:=obj_new(12);
   OKRO_F.cntx_psh();
   OKRO_F.index('SRODKI');
   {! _i:=1..12
   |!
      OKRO_F.prefix(REF.FIRMA,SSTALE.AO().RES,_i);
      {? OKRO_F.first() || _month[_i]:='%1 (%2)'[exec('num_to_roman','#convert',_i),OKRO_F.NAZ] || '-' ?}
   !};
   OKRO_F.cntx_pop();

   {? _a='P' || _tor:='podatkowy'
   |? _a='F' || _tor:='bilansowy'
   |? _a='D' || _tor:='dodatkowy'
   ?};
   {? EDIT_ES.R='T' || _srodki:='trwałe'
   |? EDIT_ES.R='N' || _srodki:='niskocenne'
   |? EDIT_ES.R='S' || _srodki:='zbyte w obrębie grupy kapitałowej'
   ?};
   {? exec('interm','#system')
   || _win:=_tAMO.mk_sel('Amortyzacja w roku podatkowym %1, tor %2, środki %3'[$SSTALE.AO().RES,_tor,_srodki],'P',0,'_rok_amor',2,5,20,,'U',,,,,'maximized')
   || _win:=_tAMO.mk_sel('Amortyzacja w roku podatkowym %1, tor %2, środki %3'[$SSTALE.AO().RES,_tor,_srodki],'P',0,'_rok_amor',2,5,20,,'U',,,,,'normal')
   ?};
   _tAMO.win_fld(_win,,'NRI',,,15,,,'Nr inwentarzowy'@,,'Numer inwentarzowy'@);
   _tAMO.win_fld(_win,,'GRUPA',,,6,,,'Grupa'@,,'Grupa'@);
   _tAMO.win_fld(_win,,'JODD',,,12,,,'J. księgowa'@,,'Jednostka księgowa'@);
   {? _month[1]<>'-' || _tAMO.win_fld(_win,,'AM1',,,9,,,_month[1],,'Okres roku'@) ?};
   {? _month[2]<>'-' || _tAMO.win_fld(_win,,'AM2',,,9,,,_month[2],,'Okres roku'@) ?};
   {? _month[3]<>'-' || _tAMO.win_fld(_win,,'AM3',,,9,,,_month[3],,'Okres roku'@) ?};
   {? _month[4]<>'-' || _tAMO.win_fld(_win,,'AM4',,,9,,,_month[4],,'Okres roku'@) ?};
   {? _month[5]<>'-' || _tAMO.win_fld(_win,,'AM5',,,9,,,_month[5],,'Okres roku'@) ?};
   {? _month[6]<>'-' || _tAMO.win_fld(_win,,'AM6',,,9,,,_month[6],,'Okres roku'@) ?};
   {? _month[7]<>'-' || _tAMO.win_fld(_win,,'AM7',,,9,,,_month[7],,'Okres roku'@) ?};
   {? _month[8]<>'-' || _tAMO.win_fld(_win,,'AM8',,,9,,,_month[8],,'Okres roku'@) ?};
   {? _month[9]<>'-' || _tAMO.win_fld(_win,,'AM9',,,9,,,_month[9],,'Okres roku'@) ?};
   {? _month[10]<>'-' || _tAMO.win_fld(_win,,'AM10',,,9,,,_month[10],,'Okres roku'@) ?};
   {? _month[11]<>'-' || _tAMO.win_fld(_win,,'AM11',,,9,,,_month[11],,'Okres roku'@) ?};
   {? _month[12]<>'-' || _tAMO.win_fld(_win,,'AM12',,,9,,,_month[12],,'Okres roku'@) ?};
   _tAMO.win_sel(_win);
   _tAMO.select()
?}




\check_bilans
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Formula po redakcji okienka BILANS dla wydruku I.
::  OLD: \check_bilans/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
1


\check_tabzmia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Formula po redakcji okienka TABZMIA dla wydruku G.
::  OLD: \check_tabzmia/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.WAR_GR=2
|| {? |PAR_WYDR.GRUPA_OD<>'' & |PAR_WYDR.GRUPA_DO<>''
   || {? |PAR_WYDR.GRUPA_OD > |PAR_WYDR.GRUPA_DO
      || FUN.emsg('Nieprawidłowy zakres grup.'@);
         _wy:='GRUPA_OD'
      || _wy:=''
      ?}
   || _wy:=''
   ?}
|? PAR_WYDR.WAR_GR=3 & ~exec('test_gr_list','fst')
|| FUN.emsg('Wybrano opcję \'Wybór grup\', ale nie zaznaczono\nżadnej grupy na liście.'@);
   _wy:='WYB_GRUP'
|| _wy:=''
?};
_wy





\br_srst_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na rekord przed tabeli SRST
::----------------------------------------------------------------------------------------------------------------------
SRST.SRSR();
SRD.REF:=SRSR.ref();
{? SRST.GR().KST<>null || EDIT_ES.TAB_KRST:=SRST.GR().KST || EDIT_ES.TAB_KRST:=null ?};
exec('rekprzed','color','SRST#01#')


\br_srst_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na rekord przed tabeli SRST
::----------------------------------------------------------------------------------------------------------------------
SRST.SRSR();
SRD.REF:=SRSR.ref();
exec('rekprzed','color','SRST#01#')


\dok_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przeglądanie dokumentów (dla wszystkich środków we wzystkich latach)
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.cntx_psh(); SRDO.cntx_psh(); SRSR.cntx_psh();
EDIT_ES.RODZ:='P';
EDIT_ES.win_edit('SRDO');
{? EDIT_ES.edit()
|| SRDO.index('RROKNR');
   SRDO.prefix(EDIT_ES.RODZ,EDIT_ES.R);
   {? SRDO.first()
   || {? EDIT_ES.RODZ='P' || SRDO.win_sel('WER_PS')
      |? EDIT_ES.RODZ='W' || SRDO.win_sel('WER_WS')
      |? EDIT_ES.RODZ='L' || SRDO.win_sel('WER_LS')
      |? EDIT_ES.RODZ='M' || SRDO.win_sel('WER_MS')
      |? EDIT_ES.RODZ='I' || SRDO.win_sel('WER_IS')
      |? EDIT_ES.RODZ='D' || SRDO.win_sel('WER_DS')
      ?};
      SRDO.hdr_sel();
      SRDO.hdr_sel({? EDIT_ES.R='T' || ' (dla środków trwałych)' |? EDIT_ES.R='N' || ' (dla środków niskocennych)' ?});
      goto_find:=null;
      SRDO.select();
      {? goto_find
      || {? EDIT_ES.R='T' || exec('br_srst_a','fst')
         |? EDIT_ES.R='N' || exec('br_srst_b','fst')
         ?}
      ?}
   || FUN.emsg('Nie znaleziono dokumentów wskaznego rodzaju.'@)
   ?}
?};
EDIT_ES.cntx_pop(); SRDO.cntx_pop(); SRSR.cntx_pop()


\goto_srst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Funkcja przechodzi do środka związanego z bieżącym dokumentem
::----------------------------------------------------------------------------------------------------------------------
{? SRDO.RODZ<>'D'
|| _srsr:=SRDO.SRSR;
   SRST.cntx_psh();
   SRST.index('PODAT');
   SRST.prefix(SRDO.SRSR,SSTALE.AO().RES,SSTALE.AO().OES);
   {? SRST.first() || goto_find:=SRST.ref() || goto_find:=null ?};
   SRST.cntx_pop();
   {? goto_find & SRST.seek(goto_find)
   || sel_exit()
   || goto_find:=null;
      _srodek:={? EDIT_ES.R='T' || 'trwały' |? EDIT_ES.R='N' || 'niskocenny' ?};
      FUN.emsg('Środek %1 związany z dokumentem nie występuje w bieżącym okresie.'@[_srodek])
   ?}
?}


\okro_f_naz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca nazwę podanego okresu
::   WE: wskazanie na okres: ref OKRO_F.ref()
::   WY: nazwa okresu i roku
::----------------------------------------------------------------------------------------------------------------------
_wy:='';
{? _>0 & type_of(_a)=type_of(null) & _a<>null
|| OKRO_F.cntx_psh(); ROK_F.cntx_psh();
   OKRO_F.prefix(); ROK_F.prefix();
   {? OKRO_F.seek(_a) || _wy:=OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ ?};
   OKRO_F.cntx_pop(); ROK_F.cntx_pop()
?};
_wy


\dok_maska
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca maskę tabeli dokumentów ksiegowych DOK dla podanego okresu
::   WE: wskazanie na okres: ref OKRO_F.ref()
::   WY: maska tabeli dokumentów księgowych
::----------------------------------------------------------------------------------------------------------------------
_wy:='';
{? _>0 & type_of(_a)=type_of(null) & _a<>null
|| OKRO_F.cntx_psh(); ROK_F.cntx_psh();
   OKRO_F.prefix(); ROK_F.prefix();
   {? OKRO_F.seek(_a)
   || _wy:=OKRO_F.ROK().KOD+form(OKRO_F.NR,-2)
   ?};
   OKRO_F.cntx_pop(); ROK_F.cntx_pop()
?};
_wy


\stan_amor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła prezentuje stan amortyzacji w bieżącym okresie (stan naliczenia, zadekretowania itp.
::----------------------------------------------------------------------------------------------------------------------
SRST.cntx_psh();
_tmp:=tab_tmp(1,'LP','INTEGER','Lp',
                'KEY','STRING[65]','Parametr'@,
                'VALUE','STRING[30]','Wartość'@);
_win:=_tmp.mk_sel('Stan amortyzacji w bieżącym okresie'@,'P',0,'_stan_amor',15,5,15,,'U',,,,,'normal');
_tmp.win_fld(_win,_tmp,'KEY',,,60,,,'Parametr'@,,'Nazwa parametru amortyzacji'@);
_tmp.win_fld(_win,_tmp,'VALUE',,,20,,,'Wartość'@,,'Wartość parametru amortyzacji'@);
_tmp.win_sel(_win);
{? OPERATOR.DEPT<>null
|| _head:=' (jednostka księgowa: %1)'@[OPERATOR.DEPT().OD]
|| _head:=' (wszystkie jednostki księgowe)'
?};
_tmp.hdr_sel();
_tmp.hdr_sel(_head);

:: zamknięcie okresu
{? SSTALE.AO().AMOR='T' || _tmp.KEY:='Okres zamknięty w obszarze Środków trwałych?'; _tmp.VALUE:='TAK'
|? SSTALE.AO().AMOR='N' || _tmp.KEY:='Okres zamknięty w obszarze Środków trwałych?'; _tmp.VALUE:='NIE'
?};
_tmp.LP:=1;
_tmp.add();

:: stan naliczenia
SRST.index('TREE');
{? OPERATOR.DEPT<>null
|| SRST.prefix('T',SSTALE.AO,OPERATOR.DEPT)
|| SRST.prefix('T',SSTALE.AO)
?};
_t_size:=SRST.size();
_t_size1:=0;
{? OPERATOR.DEPT<>null
|| SRST.prefix('N',SSTALE.AO,OPERATOR.DEPT)
|| SRST.prefix('N',SSTALE.AO)
?};
_n_size:=SRST.size();
_n_size1:=0;
_sql:='select count(*) as ILE from SRST where SRST.R=''T'' and SRST.NAL=''T'' and SRST.OKRO_F=:_a ';
{? OPERATOR.DEPT<>null || _sql+=' and SRST.ODD=:_b' ?};
_run:=sql(_sql,SSTALE.AO,OPERATOR.DEPT);
{? _run.first() || _t_size1:=_run.ILE ?};
_sql:='select count(*) as ILE from SRST where SRST.R=''N'' and SRST.NAL=''T'' and SRST.OKRO_F=:_a ';
{? OPERATOR.DEPT<>null || _sql+=' and SRST.ODD=:_b' ?};
_run2:=sql(_sql,SSTALE.AO,OPERATOR.DEPT);
{? _run2.first() || _n_size1:=_run2.ILE ?};
_tmp.KEY:='Stan naliczenia amortyzacji dla środków trwałych (dla firmy):';
{? _t_size>0
|| _tmp.VALUE:=form((_t_size1/_t_size)*100,,1,'9.')+' %'
|| _tmp.VALUE:='Brak środków trwałych'
?};
_tmp.LP:=2;
_tmp.add();
_tmp.KEY:='Stan naliczenia amortyzacji dla środków niskocennych (dla firmy):';
{? _n_size>0
|| _tmp.VALUE:=form((_n_size1/_n_size)*100,,1,'9.')+' %'
|| _tmp.VALUE:='Brak środków niskocennych'
?};
_tmp.LP:=3;
_tmp.add();

ODD.cntx_psh();
ODD.index('ODDZIALY');
ODD.prefix();
exec('odd_filtr','fst');
{? ODD.f_first()
|| {! |?
      {? OPERATOR.DEPT=null | OPERATOR.DEPT=ODD.ref()
::    stan zadekretowania podatkowo
      || _maska:=exec('dok_maska','fst',SSTALE.AO);
         _tmp.KEY:='%1: zadekretowano amortyzację podatkową?'@[ODD.OD];
         _tmp.VALUE:={? exec('spr_czy_ksie','dok_fks_aut_dok','EP'+$(#SSTALE.AO),_maska) || 'NIE' || 'TAK' ?};
         _tmp.LP:=4;
         _tmp.add()
      ?};

      {? OPERATOR.DEPT=null | OPERATOR.DEPT=ODD.ref()
:: stan zadekretowania bilansowo
      || _maska:=exec('dok_maska','fst',SSTALE.AO);
         _tmp.KEY:='%1: zadekretowano amortyzację bilansową?'@[ODD.OD];
         _tmp.VALUE:={? exec('spr_czy_ksie','dok_fks_aut_dok','EF'+$(#SSTALE.AO),_maska) || 'NIE' || 'TAK' ?};
         _tmp.LP:=5;
         _tmp.add()
      ?};

      {? FINFO.TOR_D='T'
      ||
         {? OPERATOR.DEPT=null | OPERATOR.DEPT=ODD.ref()
::    stan zadekretowania dodatkowo
         || _maska:=exec('dok_maska','fst',SSTALE.AO);
            _tmp.KEY:='%1: zadekretowano amortyzację dodatkową?'@[ODD.OD];
            _tmp.VALUE:={? exec('spr_czy_ksie','dok_fks_aut_dok','ED'+$(#SSTALE.AO),_maska) || 'NIE' || 'TAK' ?};
            _tmp.LP:=6;
            _tmp.add()
         ?}
      ?};
      ODD.f_next()
   !}
?};
ODD.cntx_pop();

:: wyświetlenie informacji
_tmp.select();
SRST.cntx_pop()


\wycofaj_dekret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wycofuje znacznik zadekretowania dla rekordów rejestru stanu środków zgodnych z parametrami
::   WE: _a - okres (OKRO_F.ref()), _b - j. księgowa
::----------------------------------------------------------------------------------------------------------------------
SRST.cntx_psh();
SRST.index('OKR_O_W');
SRST.prefix(SSTALE.AO,ODD.ref());
{? SRST.first()
|| {! |?
      {? SRST.DEKRET='T'
      || SRST.DEKRET:='N';
         SRST.put()
      ?};
      SRST.next()
   !}
?};
SRST.cntx_pop()


\bar_srod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2006]
:: OPIS: Formula drukuje etykiete srodka
::   WE: _a=1 druk arkusza etykiet, 0 - druk na drukarce kodow kreskowych
::           jesli brak _a to przyjmuje wartosci na podstawie zadeklarowania
::           zmiennej bar_form lub nie.
::  OLD: \bar_srod/wydr_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 & ~(var_pres('bar_form')<0) || _a:=1
|? _=0 || _a:=0
?};
{? _a=0
|| {? PARWYD.TYPDR=null
   || FUN.emsg('Nie wybrano typu drukarki w parametrach\n'
              +'wydruków użytkownika (adMinistracja -> parametry\n'
              +'Wydruków -> Użytkownika, lub akcja eTykiety podczas\n'
              +'wydruku). Nie można uruchomić wydruku.'@);
      return(0)
   ?};
   {? PAR_WYDR.URZ_LAB=null
   || FUN.emsg('W parametrach wydruków nie ustawiono obowiązującej definicji etykiety.'@);
      return(0)
   ?}
?};
{? _a=1
|| bar_nri:=SRST.NRI;
   bar_rod:='S';
   _print:=1
|? _a=0
|| VAR.S_OR_E:=0;
   _print:=mb_exec('FST_EWI_WKKR_M') & __BARDRU
?};
{? _print & ~BAR_SROD.find_key(#SRST.ref())
|| BAR_SROD.REF:=#SRST.ref();
   BAR_SROD.NRI:=SRST.NRI;
   BAR_SROD.NST:=SRST.NST;
   BAR_SROD.ODD:=SRST.ODD().OD;
   BAR_SROD.add(1)
?};
SRST.next()


\rp_wydruk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na rekord przed dla tabeli środków
::----------------------------------------------------------------------------------------------------------------------
{? BAR_SROD.find_key(#SRST.ref()) || ZM.WYDRUK:='TAK' || ZM.WYDRUK:='---' ?};
''


\create_win_wkkr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Tworzy okno środków do wydruku kodów wg wyboru użytkownika
::----------------------------------------------------------------------------------------------------------------------
_title:=SSTALE.AO().NAZ+' '+SSTALE.AR().NAZ;
_win:=SRST.mk_sel('Środki: %1'@[_title],'P',0,'_srst_wyb',10,5,15,,'U');
SRST.win_fld(_win,ZM,'WYDRUK',,,4,,,'Wydrukowano?'@);
SRST.win_fld(_win,SRST,'ODD','OD',,10,,,'J. księgowa'@);
SRST.win_fld(_win,SRST,'NRI',,,18,,,'Nr inwentarzowy'@);
SRST.win_fld(_win,SRST,'NST',,,25,,,'Nazwa'@);
SRST.win_fld(_win,SRST,'JORG','SYMBOL',,16,,,'J. organizacyjna'@);
SRST.win_fld(_win,SRST,'WARP',,,12,2,,'Wartość pod.'@);
SRST.win_fld(_win,SRST,'WARF',,,12,2,,'Wartość bil.'@);
SRST.win_act(_win,0,'Formuła','Drukuj'@@,,,,"exec('bar_srod','fst')",1,1,"exec('before_grp_barcode','fst_ext')",,'D');
SRST.win_act(_win,0,'Formuła','Etykieta'@@,,,,"exec('urz_lab_zmia','urzadzenia')",,,,,'E');
SRST.win_act(_win,0,'Rekord',,,,"exec('rp_wydruk','fst')","");
SRST.win_btn(_win,'text=%1,btn_label_align=center,panel=right,align=begin'['Drukuj'@],'menu:D',,,,,,'');
_win


\uproszczone
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Okno WER_D tabeli SRST - formuła przed obsługą, w oknie grupowym
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.TSK:='N';
EDIT_ES.R:='';
EDIT_ES.NISKO:='';
SRD.setPriv('FST_EWI_DESS');
SRST.win_patt('SZUK_U');
SRST.index('OKR_O');

{? var_press('__LELEM') & __LELEM>0
|| SRST.index('OKR_O_W');
   {? OPERATOR.DEPT<>null
   || SRST.prefix(SSTALE.AO,OPERATOR.DEPT)
   || SRST.prefix(SSTALE.AO)
   ?}
|| SRST.index('OKR_O');
   {? OPERATOR.DEPT<>null
   || SRST.prefix('T',SSTALE.AO,OPERATOR.DEPT)
   || SRST.prefix('T',SSTALE.AO)
   ?}
?}


\niskocenne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Okno WER_N tabeli SRST - formuła przed obsługą, w oknie grupowym
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.TSK:='N';
EDIT_ES.R:='N';
EDIT_ES.NISKO:='T';
SRD.setPriv('FST_EWI_DESR');
__TABSEL:='';
SRST.win_patt('SZUK_N');

_odd_l:=exec('odd_count','fst');
{? var_press('__DTREE') & __DTREE>0
|| SRST.index('TREE');
   {? OPERATOR.DEPT<>null
   || _odd_r:=OPERATOR.DEPT
   |? _odd_l=1
   || _odd_r:=exec('odd_ref','fst')
   || _odd_r:=ODD.ref()
   ?};
   ODD.f_seek(_odd_r);
   {? var_pres('__wodd')>0
   || __wodd_s:=1;
      grp_disp(ODD,__wodd,0);
      __wodd_s:=0
   ?};
   SRST.prefix(EDIT_ES.R,SSTALE.AO,_odd_r)
|| {? var_press('__LELEM') & __LELEM>0
   || SRST.index('OKRES_W');
      {? OPERATOR.DEPT<>null
      || SRST.prefix(EDIT_ES.R,SSTALE.AO,OPERATOR.DEPT().OD,)
      || SRST.prefix(EDIT_ES.R,SSTALE.AO)
      ?}
   || {? SRST.index('?')<>'TREE'
      || SRST.index('OKRES');
         {? OPERATOR.DEPT<>null
         || SRST.prefix('T',EDIT_ES.R,SSTALE.AO,OPERATOR.DEPT().OD,)
         || SRST.prefix('T',EDIT_ES.R,SSTALE.AO)
         ?}
      ?}
   ?}
?}


\trwale
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Okno WER tabeli SRST - formuła przed obsługą, w oknie grupowym
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.TSK:='N';
EDIT_ES.R:='T';
EDIT_ES.NISKO:='N';
SRD.setPriv('FST_EWI_DESN');
SRST.win_patt('SZUK');

_odd_l:=exec('odd_count','fst');
{? var_press('__DTREE') & __DTREE>0
|| SRST.index('TREE');
   {? OPERATOR.DEPT<>null
   || _odd_r:=OPERATOR.DEPT
   |? _odd_l=1
   || _odd_r:=exec('odd_ref','fst')
   || _odd_r:=ODD.ref()
   ?};
   ODD.f_seek(_odd_r);
   {? var_pres('__wodd')>0
   || __wodd_s:=1;
      grp_disp(ODD,__wodd,0);
      __wodd_s:=0
   ?};
   SRST.prefix(EDIT_ES.R,SSTALE.AO,_odd_r)
|| {? var_press('__LELEM') & __LELEM>0
   || {? SRST.index('?')<>'TREE'
      || SRST.index('OKRES_W');
         {? OPERATOR.DEPT<>null
         || SRST.prefix(EDIT_ES.R,SSTALE.AO,OPERATOR.DEPT().OD,)
         || SRST.prefix(EDIT_ES.R,SSTALE.AO)
         ?}
      ?}
   || {? SRST.index('?')<>'TREE'
      || SRST.index('OKRES');
        {? OPERATOR.DEPT<>null
        || SRST.prefix('T',EDIT_ES.R,SSTALE.AO,OPERATOR.DEPT().OD,)
        || SRST.prefix('T',EDIT_ES.R,SSTALE.AO)
        ?}
      ?}
   ?}
?}


\zbyte
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Okno WER tabeli SRST - formuła przed obsługą, w oknie grupowym
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.TSK:='N';
EDIT_ES.R:='S';
EDIT_ES.NISKO:='';
SRD.setPriv('FST_EWI_DESN');
SRST.win_patt('SZUK_U');
SRST.index('OKR_O');

_odd_l:=exec('odd_count','fst');
{? var_press('__DTREE') & __DTREE>0
|| SRST.index('TREE');
   {? OPERATOR.DEPT<>null
   || _odd_r:=OPERATOR.DEPT
   |? _odd_l=1
   || _odd_r:=exec('odd_ref','fst')
   || _odd_r:=ODD.ref()
   ?};
   ODD.f_seek(_odd_r);
   {? var_pres('__wodd')>0
   || __wodd_s:=1;
      grp_disp(ODD,__wodd,0);
      __wodd_s:=0
   ?};
   SRST.prefix(EDIT_ES.R,SSTALE.AO,_odd_r)
|| {? var_press('__LELEM') & __LELEM>0
   || SRST.index('OKRES_W');
      {? OPERATOR.DEPT<>null
      || SRST.prefix(EDIT_ES.R,SSTALE.AO,OPERATOR.DEPT().OD,)
      || SRST.prefix(EDIT_ES.R,SSTALE.AO)
      ?}
   || SRST.index('OKRES');
      {? OPERATOR.DEPT<>null
      || SRST.prefix('T',EDIT_ES.R,SSTALE.AO,OPERATOR.DEPT().OD,)
      || SRST.prefix('T',EDIT_ES.R,SSTALE.AO)
      ?}
   ?}
?}


\f_podsumowanie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Raport - Podsumowania amortyzacji dla firmy
::   WE: [_a] = opcjonalny tekst doklejany do tytułu okna
::----------------------------------------------------------------------------------------------------------------------
{? FINFO.TOR_D='' || exec('czytaj','#stalesys',,FINFO,'TOR_D') ?};

EDIT_ES.win_edit('PLANY');
{? ~EDIT_ES.edit() || return() ?};

VAR_DEL.delete('__RAZEMS','__idx_ra','__tmpRAZ','__treeRAZ','__tmpRAO','__treeRAO', '__tmpOKR', '__treeOKR', '__COL_NAME');
{? EDIT_ES.PODZ_OKR='T'
|| {? EDIT_ES.PODSUM='L'
   || {? FINFO.TOR_D='T'
      || _sql:='select TO_STRING(SRST.ROK,60) as KOL, TO_STRING(SRST.ROK) as ROKP, SRST.OKRES, TO_STRING(SRST.OKRES) as OKR, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, sum(AMOD) as SAMOD, '
              +'CAST(0 AS TREE_REF_TYPE) as PTREE, 0 as POZIOM from SRST where SRST.KIND=''T'' group by SRST.ROK, SRST.OKRES ORDER BY PTREE, ROKP, SRST.OKRES'
      || _sql:='select TO_STRING(SRST.ROK,60) as KOL, TO_STRING(SRST.ROK) as ROKP, SRST.OKRES, TO_STRING(SRST.OKRES) as OKR, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, '
              +'CAST(0 AS TREE_REF_TYPE) as PTREE, 0 as POZIOM from SRST where SRST.KIND=''T'' group by SRST.ROK, SRST.OKRES ORDER BY PTREE, ROKP, SRST.OKRES'
      ?}
   |? EDIT_ES.PODSUM='G'
   || {? FINFO.TOR_D='T'
      || _sql:='select TO_STRING(SRST.ROK,60) as KOL, TO_STRING(SRST.ROK) as ROKP, SRST.OKRES as OKRES, TO_STRING(SRST.OKRES) as OKR, SUBSTR(TAM.GR,1,1) as GRUPA, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, sum(AMOD) as SAMOD,'
              +'CAST(0 AS TREE_REF_TYPE) as PTREE, 0 as POZIOM from SRST join TAM where SRST.KIND=''T'' group by SRST.ROK, OKRES, SUBSTR(TAM.GR,1,1) ORDER BY PTREE, ROKP, OKRES, GRUPA'
      || _sql:='select TO_STRING(SRST.ROK,60) as KOL, TO_STRING(SRST.ROK) as ROKP, SRST.OKRES as OKRES, TO_STRING(SRST.OKRES) as OKR, SUBSTR(TAM.GR,1,1) as GRUPA, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF,'
              +'CAST(0 AS TREE_REF_TYPE) as PTREE, 0 as POZIOM from SRST join TAM where SRST.KIND=''T'' group by SRST.ROK, OKRES, SUBSTR(TAM.GR,1,1) ORDER BY PTREE, ROKP, OKRES, GRUPA'
      ?}
   |? EDIT_ES.PODSUM='K'
   || {? FINFO.TOR_D='T'
      || _sql:='select TO_STRING(SRST.ROK,60) as KOL, TO_STRING(SRST.ROK) as ROKP, SRST.OKRES as OKRES, TO_STRING(SRST.OKRES) as OKR, SUBSTR(TAM.GR,1,1) as GRUPA, ODD.OD AS JKSIEG, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, sum(AMOD) as SAMOD, '
              +'CAST(0 AS TREE_REF_TYPE) as PTREE, 0 as POZIOM from SRST join TAM join ODD where SRST.KIND=''T'' group by SRST.ROK, OKRES, ODD.OD, SUBSTR(TAM.GR,1,1) ORDER BY PTREE, ROKP, OKRES, JKSIEG, GRUPA'
      || _sql:='select TO_STRING(SRST.ROK,60) as KOL, TO_STRING(SRST.ROK) as ROKP, SRST.OKRES as OKRES, TO_STRING(SRST.OKRES) as OKR, SUBSTR(TAM.GR,1,1) as GRUPA, ODD.OD AS JKSIEG, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, '
              +'CAST(0 AS TREE_REF_TYPE) as PTREE, 0 as POZIOM from SRST join TAM join ODD where SRST.KIND=''T'' group by SRST.ROK, OKRES, ODD.OD, SUBSTR(TAM.GR,1,1) ORDER BY PTREE, ROKP, OKRES, JKSIEG, GRUPA'
      ?}
   |? EDIT_ES.PODSUM='O'
   || {? FINFO.TOR_D='T'
      || _sql:='select TO_STRING(SRST.ROK,60) as KOL, TO_STRING(SRST.ROK) as ROKP, SRST.OKRES as OKRES, TO_STRING(SRST.OKRES) as OKR, SUBSTR(TAM.GR,1,1) as GRUPA, UD_SKL.SYMBOL AS JKSIEG, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, sum(AMOD) as SAMOD, '
              +'CAST(0 AS TREE_REF_TYPE) as PTREE, 0 as POZIOM from SRST join TAM join UD_SKL where SRST.KIND=''T'' group by SRST.ROK, OKRES, UD_SKL.SYMBOL, SUBSTR(TAM.GR,1,1) ORDER BY PTREE, ROKP, OKRES, JKSIEG, GRUPA'
      || _sql:='select TO_STRING(SRST.ROK,60) as KOL, TO_STRING(SRST.ROK) as ROKP, SRST.OKRES as OKRES, TO_STRING(SRST.OKRES) as OKR, SUBSTR(TAM.GR,1,1) as GRUPA, UD_SKL.SYMBOL AS JKSIEG, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, '
              +'CAST(0 AS TREE_REF_TYPE) as PTREE, 0 as POZIOM from SRST join TAM join UD_SKL where SRST.KIND=''T'' group by SRST.ROK, OKRES, UD_SKL.SYMBOL, SUBSTR(TAM.GR,1,1) ORDER BY PTREE, ROKP, OKRES, JKSIEG, GRUPA'
      ?}
   ?}
|| {? EDIT_ES.PODSUM='L'
   || {? FINFO.TOR_D='T'
      || _sql:='select TO_STRING(SRST.ROK,60) as KOL, TO_STRING(SRST.ROK) as ROKP, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, sum(AMOD) as SAMOD, 0 as POZIOM'
              +' from SRST where SRST.KIND=''T'' group by SRST.ROK ORDER BY ROKP'
      || _sql:='select TO_STRING(SRST.ROK,60) as KOL, TO_STRING(SRST.ROK) as ROKP, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, 0 as POZIOM'
              +' from SRST where SRST.KIND=''T'' group by SRST.ROK ORDER BY ROKP'
      ?}
   |? EDIT_ES.PODSUM='G'
   || {? FINFO.TOR_D='T'
      || _sql:='select TO_STRING(SRST.ROK,60) as KOL, TO_STRING(SRST.ROK) as ROKP, SUBSTR(TAM.GR,1,1) as GRUPA, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, sum(AMOD) as SAMOD,'
              +'CAST(0 AS TREE_REF_TYPE) as PTREE, 0 as POZIOM from SRST join TAM where SRST.KIND=''T'' group by SRST.ROK, SUBSTR(TAM.GR,1,1) ORDER BY PTREE, ROKP, GRUPA'
      || _sql:='select TO_STRING(SRST.ROK,60) as KOL, TO_STRING(SRST.ROK) as ROKP, SUBSTR(TAM.GR,1,1) as GRUPA, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF,'
              +'CAST(0 AS TREE_REF_TYPE) as PTREE, 0 as POZIOM from SRST join TAM where SRST.KIND=''T'' group by SRST.ROK, SUBSTR(TAM.GR,1,1) ORDER BY PTREE, ROKP, GRUPA'
      ?}
   |? EDIT_ES.PODSUM='K'
   || {? FINFO.TOR_D='T'
      || _sql:='select TO_STRING(SRST.ROK,60) as KOL, TO_STRING(SRST.ROK) as ROKP, SUBSTR(TAM.GR,1,1) as GRUPA, ODD.OD AS JKSIEG, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, sum(AMOD) as SAMOD, '
              +'CAST(0 AS TREE_REF_TYPE) as PTREE, 0 as POZIOM from SRST join TAM join ODD where SRST.KIND=''T'' group by SRST.ROK, ODD.OD, SUBSTR(TAM.GR,1,1) ORDER BY PTREE, ROKP, JKSIEG, GRUPA'
      || _sql:='select TO_STRING(SRST.ROK,30) as KOL, TO_STRING(SRST.ROK) as ROKP, SUBSTR(TAM.GR,1,1) as GRUPA, ODD.OD AS JKSIEG, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, '
              +'CAST(0 AS TREE_REF_TYPE) as PTREE, 0 as POZIOM from SRST join TAM join ODD where SRST.KIND=''T'' group by SRST.ROK, ODD.OD, SUBSTR(TAM.GR,1,1) ORDER BY PTREE, ROKP, JKSIEG, GRUPA'
      ?}
   |? EDIT_ES.PODSUM='O'
   || {? FINFO.TOR_D='T'
      || _sql:='select TO_STRING(SRST.ROK,60) as KOL, TO_STRING(SRST.ROK) as ROKP, SUBSTR(TAM.GR,1,1) as GRUPA, UD_SKL.SYMBOL AS JKSIEG, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, sum(AMOD) as SAMOD, '
              +'CAST(0 AS TREE_REF_TYPE) as PTREE, 0 as POZIOM from SRST join TAM join UD_SKL where SRST.KIND=''T'' group by SRST.ROK, UD_SKL.SYMBOL, SUBSTR(TAM.GR,1,1) ORDER BY PTREE, ROKP, JKSIEG, GRUPA'
      || _sql:='select TO_STRING(SRST.ROK,30) as KOL, TO_STRING(SRST.ROK) as ROKP, SUBSTR(TAM.GR,1,1) as GRUPA, UD_SKL.SYMBOL AS JKSIEG, sum(AMOP) as SAMOP, sum(AMOF) as SAMOF, '
              +'CAST(0 AS TREE_REF_TYPE) as PTREE, 0 as POZIOM from SRST join TAM join UD_SKL where SRST.KIND=''T'' group by SRST.ROK, UD_SKL.SYMBOL, SUBSTR(TAM.GR,1,1) ORDER BY PTREE, ROKP, JKSIEG, GRUPA'
      ?}
   ?}
?};

__RAZEMS:=sql(_sql,SRSR.ref());
{? __RAZEMS.first()
|| _samop:=_samof:=0;
   {? FINFO.TOR_D='T' || _samod:=0 ?};
   __RAZEMS.cntx_psh();
   {! |?
      _samop+=__RAZEMS.SAMOP;
      _samof+=__RAZEMS.SAMOF;
      __RAZEMS.KOL:=__RAZEMS.ROKP;
      {? EDIT_ES.PODZ_OKR='T'
      ||
         {? EDIT_ES.PODSUM='G'
         || __RAZEMS.KOL+='/'+exec('msc_nazwa','#convert',#__RAZEMS.OKR);
            __RAZEMS.KOL+='/'+__RAZEMS.GRUPA
         |? EDIT_ES.PODSUM='K'
         || __RAZEMS.KOL+='/'+exec('msc_nazwa','#convert',#__RAZEMS.OKR);
            __RAZEMS.KOL+='/'+__RAZEMS.JKSIEG;
            __RAZEMS.KOL+='/'+__RAZEMS.GRUPA
         |? EDIT_ES.PODSUM='O'
         || __RAZEMS.KOL+='/'+exec('msc_nazwa','#convert',#__RAZEMS.OKR);
            __RAZEMS.KOL+='/'+__RAZEMS.JKSIEG;
            __RAZEMS.KOL+='/'+__RAZEMS.GRUPA
         |? EDIT_ES.PODSUM='L'
         || __RAZEMS.KOL+='/'+exec('msc_nazwa','#convert',#__RAZEMS.OKR)
         ?}
      ||
         {? EDIT_ES.PODSUM='G'
         || __RAZEMS.KOL+='/'+__RAZEMS.GRUPA
         |? EDIT_ES.PODSUM='K'
         || __RAZEMS.KOL+='/'+__RAZEMS.JKSIEG;
            __RAZEMS.KOL+='/'+__RAZEMS.GRUPA
         |? EDIT_ES.PODSUM='O'
         || __RAZEMS.KOL+='/'+__RAZEMS.JKSIEG;
            __RAZEMS.KOL+='/'+__RAZEMS.GRUPA
         ?}
      ?};
      __RAZEMS.put();
      {? FINFO.TOR_D='T' || _samod+=__RAZEMS.SAMOD ?};
      __RAZEMS.next()
   !};
   __RAZEMS.cntx_pop();
   __RAZEMS.ROKP:='Razem';
   __RAZEMS.KOL:='Razem';
   __RAZEMS.SAMOP:=_samop;
   __RAZEMS.SAMOF:=_samof;
   {? EDIT_ES.PODZ_OKR='T'
   || {? EDIT_ES.PODSUM='G'
      || __RAZEMS.OKR:='';
         __RAZEMS.GRUPA:=''
      |? EDIT_ES.PODSUM='K'
      || __RAZEMS.OKRES:=null();
         __RAZEMS.OKR:='';
         __RAZEMS.GRUPA:='';
         __RAZEMS.JKSIEG:=''
      |? EDIT_ES.PODSUM='O'
      || __RAZEMS.OKRES:=null();
         __RAZEMS.OKR:='';
         __RAZEMS.GRUPA:='';
         __RAZEMS.JKSIEG:=''
      |?  EDIT_ES.PODSUM='L'
      || __RAZEMS.OKR:=''
      ?}
   || {? EDIT_ES.PODSUM='G'
      || __RAZEMS.GRUPA:=''
      |? EDIT_ES.PODSUM='K'
      || __RAZEMS.GRUPA:='';
         __RAZEMS.JKSIEG:=''
      |? EDIT_ES.PODSUM='O'
      || __RAZEMS.GRUPA:='';
         __RAZEMS.JKSIEG:=''
      ?}
   ?};
   {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=_samod ?};
   __RAZEMS.add();
   {? EDIT_ES.PODSUM='L' & EDIT_ES.PODZ_OKR<>'T'
   || __idx_ra:=__RAZEMS.ndx_tmp(,,'ROKP',,0);
      __RAZEMS.index(__idx_ra);
      __RAZEMS.find_key($SSTALE.AO().RES)
   ?}
?};
{? EDIT_ES.PODSUM='L'
||
   {? EDIT_ES.PODZ_OKR='T'
   || _winr:=__RAZEMS.mk_sel('Podsumowanie dla firmy'@,'P',,'__razems_win_p',,,16,1);
      __RAZEMS.win_sopt(_winr,'select_record_checkbox=0');
      __RAZEMS.win_fld(_winr,__RAZEMS,'KOL',,,66,,,'Rok podatkowy/Okres'@,,'Rok podatkowy'@);
      __COL_NAME:='Rok podatkowy/Okres';
      {? FINFO.TOR_D='T'
      || __tmpRAZ:=sql('SELECT ROKP, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF, SUM(SAMOD) as PSAMOD '
                       'FROM :_a WHERE ROKP<>''Razem'' GROUP BY ROKP',__RAZEMS)
      || __tmpRAZ:=sql('SELECT ROKP, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF '
                       'FROM :_a WHERE ROKP<>''Razem'' GROUP BY ROKP',__RAZEMS)
      ?};
      {? __tmpRAZ.first()
      || {! |?
            __RAZEMS.ROKP:=__tmpRAZ.ROKP;
            __RAZEMS.KOL:=__tmpRAZ.ROKP;
            __RAZEMS.OKR:='';
            __RAZEMS.SAMOP:=__tmpRAZ.PSAMOP;
            __RAZEMS.SAMOF:=__tmpRAZ.PSAMOF;
            {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=__tmpRAZ.PSAMOD ?};
            {? __RAZEMS.add()
            || __treeRAZ:=__RAZEMS.ref();
               __RAZEMS.for_each("{? __RAZEMS.ROKP=__tmpRAZ.ROKP & __RAZEMS.ref()<>__treeRAZ
                                  || __RAZEMS.PTREE:=__treeRAZ;
::                                     __RAZEMS.ROKP:='';
                                     __RAZEMS.POZIOM+=1;
                                     __RAZEMS.put()
                                  ?}")
            ?};
            __tmpRAZ.next()
         !}
      ?}
   || _winr:=__RAZEMS.mk_sel('Podsumowanie dla firmy'@,'P',,'__razems_win_p',,,16);
      __RAZEMS.win_sopt(_winr,'select_record_checkbox=0');
      __RAZEMS.win_fld(_winr,__RAZEMS,'KOL',,,66,,,'Rok podatkowy'@,,'Rok podatkowy'@);
      __COL_NAME:='Rok podatkowy'
   ?}
|? EDIT_ES.PODSUM='G'
|| _winr:=__RAZEMS.mk_sel('Podsumowanie dla firmy'@,'P',,'__razems_win_p',,,20,1);
   __RAZEMS.win_sopt(_winr,'select_record_checkbox=0');
   {? FINFO.TOR_D='T'
   || __tmpRAZ:=sql('SELECT ROKP, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF, SUM(SAMOD) as PSAMOD '
                    'FROM :_a WHERE ROKP<>''Razem'' GROUP BY ROKP',__RAZEMS)
   || __tmpRAZ:=sql('SELECT ROKP, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF '
                    'FROM :_a WHERE ROKP<>''Razem'' GROUP BY ROKP',__RAZEMS)
   ?};
   {? EDIT_ES.PODZ_OKR='T'
   || __RAZEMS.win_fld(_winr,__RAZEMS,'KOL',,,66,,,'Rok podatkowy/Okres/Grupa'@,,'Rok podatkowy'@);
      __COL_NAME:='Rok podatkowy/Okres/Grupa';
      {? __tmpRAZ.first()
      || {! |?
            __RAZEMS.ROKP:=__tmpRAZ.ROKP;
            __RAZEMS.KOL:=__tmpRAZ.ROKP;
            __RAZEMS.GRUPA:='';
            __RAZEMS.OKR:='';
            __RAZEMS.SAMOP:=__tmpRAZ.PSAMOP;
            __RAZEMS.SAMOF:=__tmpRAZ.PSAMOF;
            {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=__tmpRAZ.PSAMOD ?};
            {? __RAZEMS.add()
            || __treeRAZ:=__RAZEMS.ref();
               __RAZEMS.for_each("{? __RAZEMS.ROKP=__tmpRAZ.ROKP & __RAZEMS.ref()<>__treeRAZ
                                  || __RAZEMS.PTREE:=__treeRAZ;
                                     __RAZEMS.POZIOM+=1;
::                                     __RAZEMS.ROKP:='';
                                     __RAZEMS.put()
                                  ?}")
            ?};
            __tmpRAZ.next()
         !}
      ?};

:: Grupowanie według okresów
      {? FINFO.TOR_D='T'
      || __tmpOKR:=sql('SELECT ROKP, OKRES, OKR, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF, SUM(SAMOD) as PSAMOD '
                       'FROM :_a WHERE ROKP<>''Razem'' AND OKR<>'''' GROUP BY ROKP, OKRES, OKR ORDER BY ROKP, OKRES',__RAZEMS)
      || __tmpOKR:=sql('SELECT ROKP, OKRES, OKR, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF '
                       'FROM :_a WHERE ROKP<>''Razem'' AND OKR<>'''' GROUP BY ROKP, OKRES, OKR ORDER BY ROKP, OKRES',__RAZEMS)
      ?};
      {? __tmpRAZ.first()
      || {! |?
            __tmpOKR.prefix(__tmpRAZ.ROKP);
            {? __tmpOKR.first()
            || {! |?
                  __RAZEMS.ROKP:=__tmpOKR.ROKP;
                  __RAZEMS.GRUPA:='';
                  __RAZEMS.KOL:=__tmpOKR.ROKP+'/'+exec('msc_nazwa','#convert',#__tmpOKR.OKR);
                  __RAZEMS.OKR:=__tmpOKR.OKR;
                  __RAZEMS.SAMOP:=__tmpOKR.PSAMOP;
                  __RAZEMS.POZIOM+=1;
                  __RAZEMS.SAMOF:=__tmpOKR.PSAMOF;
                  {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=__tmpOKR.PSAMOD ?};
                  __RAZEMS.cntx_psh();
                  {? __RAZEMS.find_key(null,__tmpOKR.ROKP)
                  || _rtree:=__RAZEMS.ref()
                  || FUN.emsg('Błąd podczas tworzenia struktury hierarchicznej.'@)
                  ?};
                  __RAZEMS.cntx_pop();
                  __RAZEMS.PTREE:=_rtree;
                  {? __RAZEMS.add()
                  || __treeOKR:=__RAZEMS.ref();
                     __RAZEMS.cntx_psh();
                     _form:="{? __RAZEMS.PTREE<>null & __RAZEMS.ROKP=__tmpOKR.ROKP
                                & __RAZEMS.OKR=__tmpOKR.OKR & __RAZEMS.ref()<>__treeOKR
                             || __RAZEMS.PTREE:=__treeOKR;
::                                __RAZEMS.ROKP:='';
                                __RAZEMS.POZIOM+=1;
::                                __RAZEMS.OKR:='';
                                __RAZEMS.put()
                             ?}";
                     __RAZEMS.for_each(_form);
                     __RAZEMS.cntx_pop();
                     __RAZEMS.ROKP:='';
                     __RAZEMS.put()
                  ?};
                  __tmpOKR.next()
               !}
            ?};
            __tmpRAZ.next()
         !}
      ?}
   || __RAZEMS.win_fld(_winr,__RAZEMS,'KOL',,,66,,,'Rok podatkowy/Grupa'@,,'Rok podatkowy'@);
      __COL_NAME:='Rok podatkowy/Grupa';
      {? __tmpRAZ.first()
      || {! |?
            __RAZEMS.ROKP:=__tmpRAZ.ROKP;
            __RAZEMS.KOL:=__tmpRAZ.ROKP;
            __RAZEMS.GRUPA:='';
            __RAZEMS.SAMOP:=__tmpRAZ.PSAMOP;
            __RAZEMS.SAMOF:=__tmpRAZ.PSAMOF;
            {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=__tmpRAZ.PSAMOD ?};
            {? __RAZEMS.add()
            || __treeRAZ:=__RAZEMS.ref();
               __RAZEMS.for_each("{? __RAZEMS.ROKP=__tmpRAZ.ROKP & __RAZEMS.ref()<>__treeRAZ
                                  || __RAZEMS.PTREE:=__treeRAZ;
::                                     __RAZEMS.ROKP:='';
                                     __RAZEMS.POZIOM+=1;
                                     __RAZEMS.put()
                                  ?}")
            ?};
            __tmpRAZ.next()
         !}
      ?}
   ?}
|? EDIT_ES.PODSUM='K'
|| _winr:=__RAZEMS.mk_sel('Podsumowanie dla firmy'@,'P',,'__razems_win_p',,,24,1);
   __RAZEMS.win_sopt(_winr,'select_record_checkbox=0');
   {? EDIT_ES.PODZ_OKR='T'
   || __RAZEMS.win_fld(_winr,__RAZEMS,'KOL',,,66,,,'Rok podatkowy/Okres/Jednostka księgowa/Grupa'@,,'Rok podatkowy'@);
      __COL_NAME:='Rok podatkowy/Okres/Jednostka księgowa/Grupa';
:: grupowanie wg lat
      {? FINFO.TOR_D='T'
      || __tmpRAZ:=sql('SELECT ROKP, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF, SUM(SAMOD) as PSAMOD '
                       'FROM :_a WHERE ROKP<>''Razem'' GROUP BY ROKP',__RAZEMS)
      || __tmpRAZ:=sql('SELECT ROKP, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF '
                       'FROM :_a WHERE ROKP<>''Razem'' GROUP BY ROKP',__RAZEMS)
      ?};
      {? __tmpRAZ.first()
      || {! |?
            __RAZEMS.ROKP:=__tmpRAZ.ROKP;
            __RAZEMS.KOL:=__tmpRAZ.ROKP;
            __RAZEMS.GRUPA:='';
            __RAZEMS.JKSIEG:='';
            __RAZEMS.OKR:='';
            __RAZEMS.OKRES:=null();
            __RAZEMS.SAMOP:=__tmpRAZ.PSAMOP;
            __RAZEMS.SAMOF:=__tmpRAZ.PSAMOF;
            {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=__tmpRAZ.PSAMOD ?};
            {? __RAZEMS.add()
            || __treeRAZ:=__RAZEMS.ref();
               __RAZEMS.for_each("{? __RAZEMS.ROKP=__tmpRAZ.ROKP & __RAZEMS.ref()<>__treeRAZ
                                  || __RAZEMS.PTREE:=__treeRAZ;
                                     __RAZEMS.POZIOM+=1;
::                                  __RAZEMS.KOL+='/'+__RAZEMS.GRUPA;
                                     __RAZEMS.put()
                                  ?}")
            ?};
            __tmpRAZ.next()
         !}
      ?};

:: Grupowanie według okresów
      {? FINFO.TOR_D='T'
      || __tmpOKR:=sql('SELECT ROKP, OKRES, OKR, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF, SUM(SAMOD) as PSAMOD '
                       'FROM :_a WHERE ROKP<>''Razem'' AND OKR<>'''' GROUP BY ROKP, OKRES, OKR ORDER BY ROKP, OKRES',__RAZEMS)
      || __tmpOKR:=sql('SELECT ROKP, OKRES, OKR, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF '
                       'FROM :_a WHERE ROKP<>''Razem'' AND OKR<>'''' GROUP BY ROKP, OKRES, OKR ORDER BY ROKP, OKRES',__RAZEMS)
      ?};
      __tmpOKR.cntx_psh();
      {? __tmpRAZ.first()
      || {! |?
            __tmpOKR.prefix(__tmpRAZ.ROKP);
            {? __tmpOKR.first()
            || {! |?
                  __RAZEMS.ROKP:=__tmpOKR.ROKP;
                  __RAZEMS.GRUPA:='';
                  __RAZEMS.JKSIEG:='';
                  __RAZEMS.KOL:=__tmpOKR.ROKP+'/'+exec('msc_nazwa','#convert',#__tmpOKR.OKR);
                  __RAZEMS.OKR:=__tmpOKR.OKR;
                  __RAZEMS.OKRES:=__tmpOKR.OKRES;
                  __RAZEMS.SAMOP:=__tmpOKR.PSAMOP;
                  __RAZEMS.SAMOF:=__tmpOKR.PSAMOF;
                  __RAZEMS.POZIOM+=1;
                  {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=__tmpOKR.PSAMOD ?};
                  __RAZEMS.cntx_psh();
                  {? __RAZEMS.find_key(null,__tmpOKR.ROKP,null)
                  || _rtree:=__RAZEMS.ref()
                  || FUN.emsg('Błąd podczas tworzenia struktury hierarchicznej.'@)
                  ?};
                  __RAZEMS.cntx_pop();
                  __RAZEMS.PTREE:=_rtree;
                  {? __RAZEMS.add()
                  || __treeOKR:=__RAZEMS.ref();
                     __RAZEMS.cntx_psh();
                     _form:="{? __RAZEMS.PTREE<>null & __RAZEMS.ROKP=__tmpOKR.ROKP
                               & __RAZEMS.OKR=__tmpOKR.OKR & __RAZEMS.ref()<>__treeOKR
                             || __RAZEMS.PTREE:=__treeOKR;
::                                __RAZEMS.ROKP:='';
                                __RAZEMS.POZIOM+=1;
                                __RAZEMS.put()
                             ?}";
                     __RAZEMS.for_each(_form);
                     __RAZEMS.cntx_pop();
::                     __RAZEMS.ROKP:='';
                     __RAZEMS.put()
                  ?};
                  __tmpOKR.next()
               !}
            ?};
            __tmpRAZ.next()
         !}
      ?};
      __tmpOKR.cntx_pop();

:: grupowanie wg jednostek księgowych
      {? FINFO.TOR_D='T'
      || __tmpRAO:=sql('SELECT ROKP, OKRES, OKR, JKSIEG, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF, SUM(SAMOD) as PSAMOD '
                       'FROM :_a WHERE ROKP<>''Razem'' AND JKSIEG<>'''' AND OKR<>'''' GROUP BY ROKP, OKRES, OKR, JKSIEG ORDER BY ROKP, OKRES, OKR, JKSIEG',__RAZEMS)
      || __tmpRAO:=sql('SELECT ROKP, OKRES, OKR, JKSIEG, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF '
                       'FROM :_a WHERE ROKP<>''Razem'' AND JKSIEG<>'''' AND OKR<>'''' GROUP BY ROKP, OKRES, OKR, JKSIEG ORDER BY ROKP, OKRES, OKR, JKSIEG',__RAZEMS)
      ?};
      {? __tmpOKR.first()
      || {! |?
            __tmpRAO.prefix(__tmpOKR.ROKP,__tmpOKR.OKRES);
            {? __tmpRAO.first()
            || {! |?
                  __RAZEMS.ROKP:='';
                  __RAZEMS.GRUPA:='';
                  __RAZEMS.OKRES:=__tmpRAO.OKRES;
                  __RAZEMS.OKR:=__tmpRAO.OKR;
                  __RAZEMS.KOL:=__tmpRAO.ROKP+'/'+exec('msc_nazwa','#convert',#__tmpRAO.OKR)+'/'+__tmpRAO.JKSIEG;
                  __RAZEMS.JKSIEG:=__tmpRAO.JKSIEG;
                  __RAZEMS.POZIOM+=1;
                  __RAZEMS.SAMOP:=__tmpRAO.PSAMOP;
                  __RAZEMS.SAMOF:=__tmpRAO.PSAMOF;
                  {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=__tmpRAO.PSAMOD ?};
                  __RAZEMS.cntx_psh();
                  _ind:=__RAZEMS.ndx_tmp(,1,'ROKP',,,'OKRES',,,'JKSIEG',,);
                  __RAZEMS.index(_ind);
                  {? __RAZEMS.find_key(__tmpRAO.ROKP,__tmpRAO.OKRES,'')
                  || _rtree:=__RAZEMS.ref()
                  || FUN.emsg('Błąd podczas tworzenia struktury hierarchicznej.'@)
                  ?};
                  __RAZEMS.ndx_drop(_ind);
                  __RAZEMS.cntx_pop();
                  __RAZEMS.PTREE:=_rtree;
                  {? __RAZEMS.add()
                  || __treeRAO:=__RAZEMS.ref();
                     __RAZEMS.cntx_psh();
                     _form:="{? __RAZEMS.PTREE<>null & __RAZEMS.OKRES=__tmpRAO.OKRES
                                & __RAZEMS.JKSIEG=__tmpRAO.JKSIEG &__RAZEMS.ROKP=__tmpRAO.ROKP & __RAZEMS.ref()<>__treeRAO
                             || __RAZEMS.PTREE:=__treeRAO;
::                                __RAZEMS.JKSIEG:='';
::                                __RAZEMS.OKRES:=null();
::                                __RAZEMS.OKR:='';
                                __RAZEMS.POZIOM+=1;
                                __RAZEMS.put()
                             ?}";
                     __RAZEMS.for_each(_form);
                     __RAZEMS.cntx_pop();
                     __RAZEMS.OKRES:=null();
                     __RAZEMS.OKR:='';
                     __RAZEMS.put()
                  ?};
                  __tmpRAO.next()
               !}
            ?};
            __tmpOKR.next()
         !}
      ?}
   || __RAZEMS.win_fld(_winr,__RAZEMS,'KOL',,,66,,,'Rok podatkowy/Jednostka księgowa/Grupa'@,,'Rok podatkowy'@);
      __COL_NAME:='Rok podatkowy/Jednostka księgowa/Grupa';
:: grupowanie wg lat
      {? FINFO.TOR_D='T'
      || __tmpRAZ:=sql('SELECT ROKP, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF, SUM(SAMOD) as PSAMOD '
                       'FROM :_a WHERE ROKP<>''Razem'' GROUP BY ROKP',__RAZEMS)
      || __tmpRAZ:=sql('SELECT ROKP, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF '
                       'FROM :_a WHERE ROKP<>''Razem'' GROUP BY ROKP',__RAZEMS)
      ?};
      {? __tmpRAZ.first()
      || {! |?
            __RAZEMS.ROKP:=__tmpRAZ.ROKP;
            __RAZEMS.KOL:=__tmpRAZ.ROKP;
            __RAZEMS.GRUPA:='';
            __RAZEMS.JKSIEG:='';
            __RAZEMS.SAMOP:=__tmpRAZ.PSAMOP;
            __RAZEMS.SAMOF:=__tmpRAZ.PSAMOF;
            {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=__tmpRAZ.PSAMOD ?};
            {? __RAZEMS.add()
            || __treeRAZ:=__RAZEMS.ref();
               __RAZEMS.for_each("{? __RAZEMS.ROKP=__tmpRAZ.ROKP & __RAZEMS.ref()<>__treeRAZ
                                  || __RAZEMS.PTREE:=__treeRAZ;
                                     __RAZEMS.POZIOM+=1;
::                                  __RAZEMS.KOL+='/'+__RAZEMS.GRUPA;
                                     __RAZEMS.put()
                                  ?}")
            ?};
            __tmpRAZ.next()
         !}
      ?};

:: grupowanie wg jednostek księgowych
      {? FINFO.TOR_D='T'
      || __tmpRAO:=sql('SELECT ROKP, JKSIEG, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF, SUM(SAMOD) as PSAMOD '
                       'FROM :_a WHERE ROKP<>''Razem'' AND JKSIEG<>'''' GROUP BY ROKP, JKSIEG ORDER BY ROKP, JKSIEG',__RAZEMS)
      || __tmpRAO:=sql('SELECT ROKP, JKSIEG, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF '
                       'FROM :_a WHERE ROKP<>''Razem'' AND JKSIEG<>'''' GROUP BY ROKP, JKSIEG ORDER BY ROKP, JKSIEG',__RAZEMS)
      ?};
      {? __tmpRAZ.first()
      || {! |?
            __tmpRAO.prefix(__tmpRAZ.ROKP);
            {? __tmpRAO.first()
            || {! |?
                  __RAZEMS.ROKP:=__tmpRAO.ROKP;
                  __RAZEMS.GRUPA:='';
                  __RAZEMS.KOL:=__tmpRAO.ROKP+'/'+__tmpRAO.JKSIEG;
                  __RAZEMS.JKSIEG:=__tmpRAO.JKSIEG;
                  __RAZEMS.SAMOP:=__tmpRAO.PSAMOP;
                  __RAZEMS.SAMOF:=__tmpRAO.PSAMOF;
                  __RAZEMS.POZIOM+=1;
                  {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=__tmpRAO.PSAMOD ?};
                  __RAZEMS.cntx_psh();
                  {? __RAZEMS.find_key(null,__tmpRAO.ROKP)
                  || _rtree:=__RAZEMS.ref()
                  || FUN.emsg('Błąd podczas tworzenia struktury hierarchicznej.'@)
                  ?};
                  __RAZEMS.cntx_pop();
                  __RAZEMS.PTREE:=_rtree;
                  {? __RAZEMS.add()
                  || __treeRAO:=__RAZEMS.ref();
                     __RAZEMS.cntx_psh();
                     _form:="{? __RAZEMS.PTREE<>null & __RAZEMS.ROKP=__tmpRAO.ROKP
                                & __RAZEMS.JKSIEG=__tmpRAO.JKSIEG & __RAZEMS.ref()<>__treeRAO
                             || __RAZEMS.PTREE:=__treeRAO;
::                                __RAZEMS.ROKP:='';
::                                __RAZEMS.JKSIEG:='';
                                __RAZEMS.POZIOM+=1;
                                __RAZEMS.put()
                             ?}";
                     __RAZEMS.for_each(_form);
                     __RAZEMS.cntx_pop();
                     __RAZEMS.ROKP:='';
                     __RAZEMS.put()
                  ?};
                  __tmpRAO.next()
               !}
            ?};
            __tmpRAZ.next()
         !}
      ?}
   ?}
|? EDIT_ES.PODSUM='O'
|| _winr:=__RAZEMS.mk_sel('Podsumowanie dla firmy'@,'P',,'__razems_win_p',,,24,1);
   __RAZEMS.win_sopt(_winr,'select_record_checkbox=0');
   {? EDIT_ES.PODZ_OKR='T'
   || __RAZEMS.win_fld(_winr,__RAZEMS,'KOL',,,66,,,'Rok podatkowy/Okres/Jednostka organizacyjna/Grupa'@,,'Rok podatkowy'@);
      __COL_NAME:='Rok podatkowy/Okres/Jednostka organizacyjna/Grupa';
:: grupowanie wg lat
      {? FINFO.TOR_D='T'
      || __tmpRAZ:=sql('SELECT ROKP, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF, SUM(SAMOD) as PSAMOD '
                       'FROM :_a WHERE ROKP<>''Razem'' GROUP BY ROKP',__RAZEMS)
      || __tmpRAZ:=sql('SELECT ROKP, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF '
                       'FROM :_a WHERE ROKP<>''Razem'' GROUP BY ROKP',__RAZEMS)
      ?};

      {? __tmpRAZ.first()
      || {! |?
            __RAZEMS.ROKP:=__tmpRAZ.ROKP;
            __RAZEMS.KOL:=__tmpRAZ.ROKP;
            __RAZEMS.GRUPA:='';
            __RAZEMS.JKSIEG:='';
            __RAZEMS.OKR:='';
            __RAZEMS.OKRES:=null();
            __RAZEMS.SAMOP:=__tmpRAZ.PSAMOP;
            __RAZEMS.SAMOF:=__tmpRAZ.PSAMOF;
            {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=__tmpRAZ.PSAMOD ?};
            {? __RAZEMS.add()
            || __treeRAZ:=__RAZEMS.ref();
               __RAZEMS.for_each("{? __RAZEMS.ROKP=__tmpRAZ.ROKP & __RAZEMS.ref()<>__treeRAZ
                                  || __RAZEMS.PTREE:=__treeRAZ;
                                     __RAZEMS.POZIOM+=1;
::                                  __RAZEMS.KOL+='/'+__RAZEMS.GRUPA;
                                     __RAZEMS.put()
                                  ?}")
            ?};
            __tmpRAZ.next()
         !}
      ?};
:: Grupowanie według okresów
      {? FINFO.TOR_D='T'
      || __tmpOKR:=sql('SELECT ROKP, OKRES, OKR, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF, SUM(SAMOD) as PSAMOD '
                       'FROM :_a WHERE ROKP<>''Razem'' AND OKR<>'''' GROUP BY ROKP, OKRES, OKR ORDER BY ROKP, OKRES',__RAZEMS)
      || __tmpOKR:=sql('SELECT ROKP, OKRES, OKR, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF '
                       'FROM :_a WHERE ROKP<>''Razem'' AND OKR<>'''' GROUP BY ROKP, OKRES, OKR ORDER BY ROKP, OKRES',__RAZEMS)
      ?};
      __tmpOKR.cntx_psh();
      {? __tmpRAZ.first()
      || {! |?
            __tmpOKR.prefix(__tmpRAZ.ROKP);
            {? __tmpOKR.first()
            || {! |?
                  __RAZEMS.ROKP:=__tmpOKR.ROKP;
                  __RAZEMS.GRUPA:='';
                  __RAZEMS.JKSIEG:='';
                  __RAZEMS.KOL:=__tmpOKR.ROKP+'/'+exec('msc_nazwa','#convert',#__tmpOKR.OKR);
                  __RAZEMS.OKR:=__tmpOKR.OKR;
                  __RAZEMS.OKRES:=__tmpOKR.OKRES;
                  __RAZEMS.SAMOP:=__tmpOKR.PSAMOP;
                  __RAZEMS.SAMOF:=__tmpOKR.PSAMOF;
                  __RAZEMS.POZIOM+=1;
                  {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=__tmpOKR.PSAMOD ?};
                  __RAZEMS.cntx_psh();
                  {? __RAZEMS.find_key(null,__tmpOKR.ROKP)
                  || _rtree:=__RAZEMS.ref()
                  || FUN.emsg('Błąd podczas tworzenia struktury hierarchicznej.'@)
                  ?};
                  __RAZEMS.cntx_pop();
                  __RAZEMS.PTREE:=_rtree;
                  {? __RAZEMS.add()
                  || __treeOKR:=__RAZEMS.ref();
                     __RAZEMS.cntx_psh();
                     _form:="{? __RAZEMS.PTREE<>null & __RAZEMS.ROKP=__tmpOKR.ROKP
                               & __RAZEMS.OKR=__tmpOKR.OKR & __RAZEMS.ref()<>__treeOKR
                             || __RAZEMS.PTREE:=__treeOKR;
::                                __RAZEMS.ROKP:='';
                                __RAZEMS.POZIOM+=1;
                                __RAZEMS.put()
                             ?}";
                     __RAZEMS.for_each(_form);
                     __RAZEMS.cntx_pop();
::                     __RAZEMS.ROKP:='';
                     __RAZEMS.put()
                  ?};
                  __tmpOKR.next()
               !}
            ?};
            __tmpRAZ.next()
         !}
      ?};
      __tmpOKR.cntx_pop();
:: grupowanie wg jednostek księgowych
      {? FINFO.TOR_D='T'
      || __tmpRAO:=sql('SELECT ROKP, OKRES, OKR, JKSIEG, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF, SUM(SAMOD) as PSAMOD '
                       'FROM :_a WHERE ROKP<>''Razem'' AND JKSIEG<>'''' AND OKR<>'''' GROUP BY ROKP, OKRES, OKR, JKSIEG ORDER BY ROKP, OKRES, OKR, JKSIEG',__RAZEMS)
      || __tmpRAO:=sql('SELECT ROKP, OKRES, OKR, JKSIEG, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF '
                       'FROM :_a WHERE ROKP<>''Razem'' AND JKSIEG<>'''' AND OKR<>'''' GROUP BY ROKP, OKRES, OKR, JKSIEG ORDER BY ROKP, OKRES, OKR, JKSIEG',__RAZEMS)
      ?};
      {? __tmpOKR.first()
      || {! |?
            __tmpRAO.prefix(__tmpOKR.ROKP,__tmpOKR.OKRES);
            {? __tmpRAO.first()
            || {! |?
                  __RAZEMS.ROKP:='';
                  __RAZEMS.GRUPA:='';
                  __RAZEMS.OKRES:=__tmpRAO.OKRES;
                  __RAZEMS.OKR:=__tmpRAO.OKR;
                  __RAZEMS.KOL:=__tmpRAO.ROKP+'/'+exec('msc_nazwa','#convert',#__tmpRAO.OKR)+'/'+__tmpRAO.JKSIEG;
                  __RAZEMS.JKSIEG:=__tmpRAO.JKSIEG;
                  __RAZEMS.SAMOP:=__tmpRAO.PSAMOP;
                  __RAZEMS.POZIOM+=1;
                  __RAZEMS.SAMOF:=__tmpRAO.PSAMOF;
                  {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=__tmpRAO.PSAMOD ?};
                  __RAZEMS.cntx_psh();
                  _ind:=__RAZEMS.ndx_tmp(,1,'ROKP',,,'OKRES',,,'JKSIEG',,);
                  __RAZEMS.index(_ind);
                  {? __RAZEMS.find_key(__tmpRAO.ROKP,__tmpRAO.OKRES,'')
                  || _rtree:=__RAZEMS.ref()
                  || FUN.emsg('Błąd podczas tworzenia struktury hierarchicznej.'@)
                  ?};
                  __RAZEMS.ndx_drop(_ind);
                  __RAZEMS.cntx_pop();
                  __RAZEMS.PTREE:=_rtree;
                  {? __RAZEMS.add()
                  || __treeRAO:=__RAZEMS.ref();
                     __RAZEMS.cntx_psh();
                     _form:="{? __RAZEMS.PTREE<>null & __RAZEMS.OKRES=__tmpRAO.OKRES
                                & __RAZEMS.JKSIEG=__tmpRAO.JKSIEG & __RAZEMS.ROKP=__tmpRAO.ROKP & __RAZEMS.ref()<>__treeRAO
                             || __RAZEMS.PTREE:=__treeRAO;
::                                __RAZEMS.JKSIEG:='';
                                __RAZEMS.POZIOM+=1;
::                                __RAZEMS.OKRES:=null();
::                                __RAZEMS.OKR:='';
                                __RAZEMS.put()
                             ?}";
                     __RAZEMS.for_each(_form);
                     __RAZEMS.cntx_pop();
                     __RAZEMS.OKRES:=null();
                     __RAZEMS.OKR:='';
                     __RAZEMS.put()
                  ?};
                  __tmpRAO.next()
               !}
            ?};
            __tmpOKR.next()
         !}
      ?}
   || __RAZEMS.win_fld(_winr,__RAZEMS,'KOL',,,66,,,'Rok podatkowy/Jednostka organizacyjna/Grupa'@,,'Rok podatkowy'@);
      __COL_NAME:='Rok podatkowy/Jednostka organizacyjna/Grupa';
      {? FINFO.TOR_D='T'
      || __tmpRAZ:=sql('SELECT ROKP, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF, SUM(SAMOD) as PSAMOD '
                       'FROM :_a WHERE ROKP<>''Razem'' GROUP BY ROKP',__RAZEMS)
      || __tmpRAZ:=sql('SELECT ROKP, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF '
                       'FROM :_a WHERE ROKP<>''Razem'' GROUP BY ROKP',__RAZEMS)
      ?};
::    grupowanie wg lat
      {? __tmpRAZ.first()
      || {! |?
            __RAZEMS.ROKP:=__tmpRAZ.ROKP;
            __RAZEMS.KOL:=__tmpRAZ.ROKP;
            __RAZEMS.GRUPA:='';
            __RAZEMS.JKSIEG:='';
            __RAZEMS.SAMOP:=__tmpRAZ.PSAMOP;
            __RAZEMS.SAMOF:=__tmpRAZ.PSAMOF;
            {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=__tmpRAZ.PSAMOD ?};
            {? __RAZEMS.add()
            || __treeRAZ:=__RAZEMS.ref();
               __RAZEMS.for_each("{? __RAZEMS.ROKP=__tmpRAZ.ROKP & __RAZEMS.ref()<>__treeRAZ
                                  || __RAZEMS.PTREE:=__treeRAZ;
                                     __RAZEMS.POZIOM+=1;
                                     __RAZEMS.put()
                                  ?}")
            ?};
            __tmpRAZ.next()
         !}
      ?};

::    grupowanie wg jednostek księgowych
      {? FINFO.TOR_D='T'
      || __tmpRAO:=sql('SELECT ROKP, JKSIEG, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF, SUM(SAMOD) as PSAMOD '
                       'FROM :_a WHERE ROKP<>''Razem'' AND JKSIEG<>'''' GROUP BY ROKP, JKSIEG ORDER BY ROKP, JKSIEG',__RAZEMS)
      || __tmpRAO:=sql('SELECT ROKP, JKSIEG, SUM(SAMOP) as PSAMOP, SUM(SAMOF) as PSAMOF '
                       'FROM :_a WHERE ROKP<>''Razem'' AND JKSIEG<>'''' GROUP BY ROKP, JKSIEG ORDER BY ROKP, JKSIEG',__RAZEMS)
      ?};
      {? __tmpRAZ.first()
      || {! |?
            __tmpRAO.prefix(__tmpRAZ.ROKP);
            {? __tmpRAO.first()
            || {! |?
                  __RAZEMS.ROKP:=__tmpRAO.ROKP;
                  __RAZEMS.GRUPA:='';
                  __RAZEMS.KOL:=__tmpRAO.ROKP+'/'+__tmpRAO.JKSIEG;
                  __RAZEMS.JKSIEG:=__tmpRAO.JKSIEG;
                  __RAZEMS.SAMOP:=__tmpRAO.PSAMOP;
                  __RAZEMS.SAMOF:=__tmpRAO.PSAMOF;
                  __RAZEMS.POZIOM+=1;
                  {? FINFO.TOR_D='T' || __RAZEMS.SAMOD:=__tmpRAO.PSAMOD ?};
                  __RAZEMS.cntx_psh();
                  {? __RAZEMS.find_key(null,__tmpRAO.ROKP)
                  || _rtree:=__RAZEMS.ref()
                  || FUN.emsg('Błąd podczas tworzenia struktury hierarchicznej.'@)
                  ?};
                  __RAZEMS.cntx_pop();
                  __RAZEMS.PTREE:=_rtree;
                  {? __RAZEMS.add()
                  || __treeRAO:=__RAZEMS.ref();
                     __RAZEMS.cntx_psh();
                     _form:="{? __RAZEMS.PTREE<>null & __RAZEMS.ROKP=__tmpRAO.ROKP
                                & __RAZEMS.JKSIEG=__tmpRAO.JKSIEG & __RAZEMS.ref()<>__treeRAO
                             || __RAZEMS.PTREE:=__treeRAO;
::                                __RAZEMS.ROKP:='';
::                                __RAZEMS.JKSIEG:='';
                                __RAZEMS.POZIOM+=1;
                                __RAZEMS.put()
                             ?}";
                     __RAZEMS.for_each(_form);
                     __RAZEMS.cntx_pop();
                     __RAZEMS.ROKP:='';
                     __RAZEMS.put()
                  ?};
                  __tmpRAO.next()
               !}
            ?};
            __tmpRAZ.next()
         !}
      ?}
   ?}
?};
__RAZEMS.win_fld(_winr,__RAZEMS,'SAMOP',,,16,2,,'Amortyzacja podatkowa'@,,'Amortyzacja podatkowa'@);
__RAZEMS.win_fld(_winr,__RAZEMS,'SAMOF',,,16,2,,'Amortyzacja bilansowa'@,,'Amortyzacja bilansowa'@);
{? FINFO.TOR_D='T'
|| __RAZEMS.win_fld(_winr,__RAZEMS,'SAMOD',,,16,2,,'Amortyzacja dodatkowa'@,,'Amortyzacja dodatkowa'@)
?};
__RAZEMS.win_act(_winr,,'Rekord',,,,"{? __RAZEMS.ROKP*'Razem' || 1 || '' ?}");
::{? EDIT_ES.PODSUM<>'L'
::|| __RAZEMS.win_act(_winr,,'Formuła','Rozwiń wszystko'@@,,,"__RAZEMS.tr_set(1)");
::   __RAZEMS.win_act(_winr,,'Formuła','Zwiń wszystko'@@,,,"__RAZEMS.tr_set(0)")
::|| {?  EDIT_ES.PODZ_OKR='T'
::   || __RAZEMS.win_act(_winr,,'Formuła','Rozwiń wszystko'@@,,,"__RAZEMS.tr_set(1)");
::      __RAZEMS.win_act(_winr,,'Formuła','Zwiń wszystko'@@,,,"__RAZEMS.tr_set(0)")
::   ?}
::?};
__zwin:=1;
{? EDIT_ES.PODSUM<>'L'
|| __RAZEMS.win_act(_winr,,'Formuła','Zwiń/rozwiń wszystko'@@,,,"__RAZEMS.tr_set(__zwin);__zwin:=~__zwin")
|| {?  EDIT_ES.PODZ_OKR='T'
   || __RAZEMS.win_act(_winr,,'Formuła','Zwiń/rozwiń wszystko'@@,,,"__RAZEMS.tr_set(__zwin);__zwin:=~__zwin")
   ?}
?};

::__RAZEMS.win_act(_winr,,'Formuła','Druku&j'@@,,'Drukowanie obrotów'@,"exec('widoczne','fst'); 0",,,0,"exec('bgp_poz','fst','fst_podsum',__RAZEMS)",,'J',,'icon=print');
__RAZEMS.win_act(_winr,,'Formuła','Druku&j'@@,,'Drukowanie obrotów'@,"exec('widoczne','fst'); 0",,,0,,,'J',,'icon=print');

{? EDIT_ES.PODZ_OKR='T'
|| {? EDIT_ES.PODSUM='G'
   || __RAZEMS.win_fml(_winr,,'KOL',,'ICON_BEFORE',
                        "'xwin16.png:'+
                        {? __RAZEMS.PTREE=null | (__RAZEMS.PTREE<>null & __RAZEMS.OKR<>'')
                        || {? __RAZEMS.tr_state()=1 || '75' || '74' ?}
                        || '76'
                        ?}")
   |? EDIT_ES.PODSUM='K'
   || __RAZEMS.win_fml(_winr,,'KOL',,'ICON_BEFORE',
                        "'xwin16.png:'+
                        {? __RAZEMS.PTREE=null | (__RAZEMS.PTREE<>null & __RAZEMS.JKSIEG<>'' & __RAZEMS.OKR<>'')
                        || {? __RAZEMS.tr_state()=1 || '75' || '74' ?}
                        || '76'
                        ?}")
   |? EDIT_ES.PODSUM='O'
   || __RAZEMS.win_fml(_winr,,'KOL',,'ICON_BEFORE',
                        "'xwin16.png:'+
                        {? __RAZEMS.PTREE=null | (__RAZEMS.PTREE<>null & __RAZEMS.JKSIEG<>'' & __RAZEMS.OKR<>'')
                        || {? __RAZEMS.tr_state()=1 || '75' || '74' ?}
                        || '76'
                        ?}")
   |? EDIT_ES.PODSUM='L'
   || __RAZEMS.win_fml(_winr,,'KOL',,'ICON_BEFORE',
                        "'xwin16.png:'+
                        {? __RAZEMS.PTREE=null | (__RAZEMS.PTREE<>null & __RAZEMS.OKR<>'')
                        || {? __RAZEMS.tr_state()=1 || '75' || '74' ?}
                        || '76'
                        ?}")
   ?}
|| {? EDIT_ES.PODSUM='G'
   || __RAZEMS.win_fml(_winr,,'KOL',,'ICON_BEFORE',
                        "'xwin16.png:'+
                        {? __RAZEMS.PTREE=null
                        || {? __RAZEMS.tr_state()=1 || '75' || '74' ?}
                        || '76'
                        ?}")
   |? EDIT_ES.PODSUM='K'
   || __RAZEMS.win_fml(_winr,,'KOL',,'ICON_BEFORE',
                        "'xwin16.png:'+
                        {? __RAZEMS.PTREE=null | (__RAZEMS.PTREE<>null & __RAZEMS.JKSIEG<>'')
                        || {? __RAZEMS.tr_state()=1 || '75' || '74' ?}
                        || '76'
                        ?}")
   |? EDIT_ES.PODSUM='O'
   || __RAZEMS.win_fml(_winr,,'KOL',,'ICON_BEFORE',
                        "'xwin16.png:'+
                        {? __RAZEMS.PTREE=null | (__RAZEMS.PTREE<>null & __RAZEMS.JKSIEG<>'')
                        || {? __RAZEMS.tr_state()=1 || '75' || '74' ?}
                        || '76'
                        ?}")
   ?}
?};
__RAZEMS.win_sel(_winr);
{? _>0 & type_of(_a)=type_of('') & _a<>''
|| __RAZEMS.hdr_sel(_a)
?};

__RAZEMS.select();
VAR_DEL.delete('__RAZEMS','__idx_ra','__tmpRAZ','__treeRAZ','__tmpRAO','__treeRAO', '__tmpOKR', '__treeOKR','__COL_NAME','__zwin')


\widoczne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [JD] [2023]
:: OPIS: Wrzuca do tabelki tymczasowej rozwiniete elementy i drukuje je
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TAB_WID','lp_dru');
{? FINFO.TOR_D='T'
|| TAB_WID:=tab_tmp(1,'LP_DRU','INTEGER',''
                     ,'PODZ','STRING[60]','Podział'
                     ,'SAMOP','REAL','Amortyzacja pod.'
                     ,'SAMOF','REAL','Amortyzacja bil.'
                     ,'SAMOD','REAL','Amortyzacja dod.'
                     ,'ROKP','STRING[5]','Rok'
                     ,'POZIOM','INTEGER','Poziom')
|| TAB_WID:=tab_tmp(1,'LP_DRU','INTEGER',''
                     ,'PODZ','STRING[60]','Podział'
                     ,'SAMOP','REAL','Amortyzacja pod.'
                     ,'SAMOF','REAL','Amortyzacja bil.'
                     ,'ROKP','STRING[5]','Rok'
                     ,'POZIOM','INTEGER','Poziom')
?};
__RAZEMS.cntx_psh();
lp_dru:=1;
{? EDIT_ES.PODSUM='L' & EDIT_ES.PODZ_OKR<>'T'
|| __RAZEMS.prefix('2');
   {? __RAZEMS.first()
   || {! |?
      exec('add_wid','fst');
      __RAZEMS.next()
      !}
   ?}
|| __RAZEMS.index('?');
   __RAZEMS.prefix(0,'2');
   {? __RAZEMS.first()
   || {! |?
         exec('add_wid','fst');
         {? __RAZEMS.tr_state()=1 || exec('rekuren','fst',__RAZEMS.ref()) ?};
         __RAZEMS.next()
      !}
   ?}
?};
__RAZEMS.cntx_pop();
exec('rep_exec','#b_report','','fst_podsum',,,,,,,,'W');
VAR_DEL.delete('TAB_WID','lp_dru');
1


\rekuren
_zwrot:=1;
__RAZEMS.cntx_psh();
__RAZEMS.prefix(_a);
{? __RAZEMS.first()
|| {! |?
    exec('add_wid','fst');
   {? __RAZEMS.tr_state()=1 || exec('rekuren','fst',__RAZEMS.ref()) ?};
   __RAZEMS.next()
   !}
|| _zwrot:=0
?};
__RAZEMS.cntx_pop();
_zwrot


\add_wid
{? __RAZEMS.KOL<>'Razem'
|| TAB_WID.LP_DRU:=lp_dru;
   TAB_WID.PODZ:=__RAZEMS.KOL;
   TAB_WID.SAMOP:=__RAZEMS.SAMOP;
   TAB_WID.SAMOF:=__RAZEMS.SAMOF;
   {? FINFO.TOR_D='T'
   || TAB_WID.SAMOD:=__RAZEMS.SAMOD
   ?};
   TAB_WID.ROKP:=__RAZEMS.ROKP;
   TAB_WID.POZIOM:=__RAZEMS.POZIOM;
   lp_dru+=1;
   TAB_WID.add()
?}


\bgp_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2006]
:: OPIS: Przed grupowa akcja wydruk
::   WE: _a - nazwa wydruku
::       _b - tabela
::  OLD: \bgp_poz/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Wydrukować zaznaczone wiersze?'@)
|| TT_AGET:=_b.sel_aget();
   _b.sel_adel();
   _b.sel_sres(TT_AGET);
   _r:=_b.ref();
   {? _a<>'' || exec('rep_exec','#b_report','',_a,,,,,,,,'W') ?};
   _b.seek(_r);
   VAR_DEL.delete('TT_AGET')
?}; 0


\delete_dpob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Usuwanie planu amortyzacji
::----------------------------------------------------------------------------------------------------------------------
SRD.maski(SRSP.MASKA);
_out:=TST.erase();
{? _out || _out:=TSR.erase() ?};
{? _out || _out:=TSK.erase() ?};
:: usunięcie powiązań dla dokumentów skreslających
{? _out
|| SRSR.prefix();
   SRSR.for_each("{? SRSR.DOKPRZ<>null | SRSR.DOKSKR<>null
                  || SRSR.DOKPRZ:=null;
                     SRSR.DOKSKR:=null;
                     SRSR.put()
                  ?}
                 ")
?};
{? _out || _out:=SRDO.erase() ?};
{? _out || _out:=SRDT.erase() ?};
{? _out || _out:=SRZF.erase() ?};
{? _out || _out:=SRZD.erase() ?};
{? _out || _out:=SRSW.erase() ?};
{? _out || _out:=SRST.erase() ?};
{? _out || _out:=SRSR.erase() ?};
_out


\m_drda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Uruchomienie w obszarze roboczym
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FST_EWI_DRDA';
{? _>0 & _a<>''
|| _params.AKCJA:=_a
|? -menu_txt()='dołącz' | -menu_txt()='dokument przyjęcia'
|| _params.AKCJA:='dołącz'
|| _params.AKCJA:=-menu_txt()
?};
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
_params.UIDREF:=SRSR.uidref();
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'SRSR',SRSR.ref());
_params.PROC_START:='N';
exec('mp_run','#b__box',_params)


\m_drdf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Uruchomienie w obszarze roboczym
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FST_EWI_DRDF';
{? _>0 & _a<>''
|| _params.AKCJA:=_a
|? -menu_txt()='dołącz' | -menu_txt()='dokument wartościowy'
|| _params.AKCJA:='dołącz'
|| _params.AKCJA:=-menu_txt()
?};
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
_params.UIDREF:=SRST.uidref();
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'SRST',SRST.ref());
_params.PROC_START:='N';
exec('mp_run','#b__box',_params)


\m_drdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Uruchomienie rejetracji dokumentu zmiany właściwości w obszarze roboczym
::   WE [_a] - opcjonalny symbol typu dokumentu np. PU
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FST_EWI_DRDZ';
{? -menu_txt()='dokument zmiany właściwości'
|| _params.AKCJA:='dołącz'
|| _params.AKCJA:=menu_txt()
?};
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'SRSR',SRSR.ref());
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OKRO_F',SSTALE.AO);
{? _>0 & type_of(_a)=type_of('') & _a<>''
|| exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYP',_a)
?};
_params.PROC_START:='N';
exec('mp_run','#b__box',_params)


\m_drdm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wywołanie czynności fst_ewi_drdm z bibliotek
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:='dołącz' ?};
params_set('drdm_akcja',_a);
exec('np_run','#b__box','FST_EWI_DRDM')


\m_drdk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wywołanie czynności fst_ewi_drdk z bibliotek
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:='dołącz' ?};
params_set('drdk_akcja',_a);
exec('np_run','#b__box','FST_EWI_DRDK')


\rp_srsr_zpla
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na rekord przed w oknie wertowania środków w obszarze planów amortyzacji
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.SRSR:=SRSR.ref();
EDIT_ES.R:=SRSR.R;
{? SRSR.GRP='T'
|| SRSR.actions_grayed(__WPLAN,'')
|| SRSR.actions_grayed(__WPLAN,'E')
?};
{? SRSR.PLAN_NAL<>'T'
|| 'SRSR#02#01'
|| ''
?}


\rp_srxd_zinw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła ustala kolor rekordu tabeli SRXD
::   WY: kolor lub ''
::----------------------------------------------------------------------------------------------------------------------
{? SRXD.STATUS='T' || 'SRXD#01#01'
|? SRXD.STATUS='P' || 'SRXD#01#02'
|? SRXD.STATUS='Z' || 'SRXD#01#03'
|? SRXD.STATUS='D' || 'SRXD#01#04'
|| ''
?}


\tst_clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Usuwanie z klasyfikacji jeżeli usuwa się rekord rejestru stanu
::   WE: _a - SRST.ref()
::----------------------------------------------------------------------------------------------------------------------
{? _=0 | type_of(_a)<>type_of(null) | _a=null || return(0) ?};
TST.cntx_psh();
TST.index('SRST');
TST.prefix(_a);
{? TST.first()
|| {! |? TST.del() !}
?};
_size:=TST.size();
TST.cntx_pop();
_size=0


\dokzrodl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wyświetla dokument OT z poziomu dokumentów księgowych
::   WE: ref SRDO
::----------------------------------------------------------------------------------------------------------------------
{? _=0 | #_a=0
|| FUN.info('Dokument nie posiada wskazania na dokument źródłowy. Na przykład jest wynikiem księgowania amortyzacji.'@);
   return()
?};
SRDO.cntx_psh();
SRDO.prefix();
exec('maski','srodobj');
{? SRDO.seek(#_a,SRDO.name())
|| SRDO.win_edit('RED_P');
   SRDO.display()
|| FUN.info('Nie znaleziono dokumentu źródłowego OT.'@)
?};
SRDO.cntx_pop()


\not_plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Czy maska tabeli z rzeczywistymi danymi? W przeciwnym razie plan amortyzacji.
::   WE: maska tabeli
::   WY: 1/0 (realne dane/plan amortyzacji)
::----------------------------------------------------------------------------------------------------------------------
1+(_a+4)='r'


\naz_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Zwraca nazwe roku
::   WE: ROK_F.ref()
::   WY: ROK_F.NAZ
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh();
ROK_F.prefix();
{? ROK_F.seek(_a) || _naz_rok:=ROK_F.NAZ || _naz_rok:='' ?};
ROK_F.cntx_pop();
_naz_rok


\is_year_fst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Czy rok istnieje w FST?
::   WE: ROK_F.ref()
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
OKRO_F.cntx_psh();
OKRO_F.index('ROK');
OKRO_F.prefix(_a);
{? OKRO_F.last()
|| {? exec('is_okro_fst','fst',OKRO_F.ref()) || _wy:=1 ?}
?};
OKRO_F.cntx_pop();
_wy


\last_year_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła bada czy są stany środków w ostatnim istniejącym roku dla obszaru środków trwałych
::       badając od ostatniego roku
::   WY: 1/0 (tak/nie)
::----------------------------------------------------------------------------------------------------------------------
_wy:=1;
SRST.cntx_psh(); ROK_F.cntx_psh();
ROK_F.index('ROKPOCZ');
ROK_F.prefix(REF.FIRMA);
{? ROK_F.last()
|| _loop:=1;
   {! |?
      {? exec('is_year_fst','fst',ROK_F.ref())
      || _loop:=0;
         SRST.index('ROK');
         SRST.prefix(ROK_F.ref());
         {? ~SRST.first() || _wy:=0 ?}
      ?};
      _loop & ROK_F.prev()
   !}
?};
SRST.cntx_pop(); ROK_F.cntx_pop();
_wy


\fst_zamk_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła sprawdza czy w systemie w bieżącej firmie istnieją jakiekolwiek okresy zamknięte w obszarze FST
::   WY: 1/0 (tak/nie)
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
OKRO_F.cntx_psh();
OKRO_F.index('SRODKI');
OKRO_F.prefix(REF.FIRMA);
{? OKRO_F.first()
|| {! |?
      {? OKRO_F.AMOR='T' || _wy:=1 ?};
      _wy=0 & OKRO_F.next()
   !}
?};
OKRO_F.cntx_pop();
_wy


\test_new_year
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Weryfikacja czy wskazany rok należy do nowo dodanych lat bez uzupełnionego rejestru stanów
::   WE: _a - ROK_F.ref()
::   WY: 1/0 (tak/nie)
::----------------------------------------------------------------------------------------------------------------------
SRST.cntx_psh();
SRST.index('ROK'); SRST.prefix();
{? SRST.first() || _all:=1 || _all:=0 ?};
_last:=exec('last_year_data','fst');
SRST.prefix(_a);
{? SRST.first() || _curr:=1 || _curr:=0 ?};
:: jeżeli w systemie są zapisy w rejestrze stanów ale nie ma rekordów w rejestrze stanów
:: w ostatnim roku i we wskazanym to wskazany rok należy do nowo dodanych lat w systemie
{? _all & ~_curr & ~_last || _wy:=1 || _wy:=0 ?};
SRST.cntx_pop();
_wy


\find_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wyszukiwanie j,. ksiegowych
::   WE: _a - kod j. ksiegowej
::   WY: ref j. ksiegowej
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
ODD.cntx_psh();
ODD.index('ODDZIALY');
ODD.prefix(REF.FIRMA,_a,_a);
{? ODD.first() || _ref:=ODD.ref() ?};
ODD.cntx_pop();
_ref


\zestawp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Czy zestaw zawiera pojazd?
::   WE: SRSR.ref()
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_find:=0;
{? _>0 & type_of(_a)=type_of(null) & _a<>null
|| SRSR.cntx_psh();
   SRSR.index('TREE');
   SRSR.prefix(_a);
   {? SRSR.first()
   || _find:=0;
      {! |?
         {? SRSR.POJAZD='T' || _find:=1 ?};
         _find=0 & SRSR.next()
      !}
   ?};
   SRSR.cntx_pop()
?};
_find


\f3_srsr_stap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Kalkulator stawki amortyzacji
::----------------------------------------------------------------------------------------------------------------------
undefine();
define('LM',24,'Liczba miesięcy'@,'Liczba miesięcy do wyliczenia stawki'@,10,10,0);
_ok:=def_btn('text='+'&OK'@+', btn_label_align=center',"'key:F2'");
_anuluj:=def_btn('text='+'&Anuluj'@+', btn_label_align=center',"'key:Esc'");
def_bopt(_ok,'tooltip='+exec('help_red_ok','#window','P'));
def_bopt(_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
{? def_edit("{? DEFINE.LM<12 | DEFINE.LM>1200 || FUN.emsg('Nieprawidłowa wartość. Kalkulator obsługuje zakres 12-1200.'@); 0 || 1 ?}",
             '|--|'+'Kalkulator stawki amortyzacji liniowej'@)
|| {? DEFINE.LM>0 || fld():=(100/(DEFINE.LM/12))$2 ?}
?};
~~


\sel_exit_srst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Formuła obsługująca akcję Przejdź do środka w oknie wertowania wartości pierwotnych środków
::----------------------------------------------------------------------------------------------------------------------
SRST.cntx_psh();
SRST.index('SROD');
SRST.prefix(SRSR.ref(),SSTALE.AR,SSTALE.AO);
{? SRST.first() & SRST.R<>'S'
|| {? SRSR.GRP<>'E' | __DTREE | __LELEM
   || _ref:=SRST.ref()
   || _sr_ref:=exec('get_srsr_root','fst',SRSR.ref());
      SRST.prefix(_sr_ref,SSTALE.AR,SSTALE.AO);
     {? SRST.first()  || _ref:=SRST.ref() || _ref:=null ?}
   ?}
|| _ref:=null
?};
SRST.cntx_pop();
goto_find:=_ref;
{? _ref
|| SRST.seek(_ref)
|| FUN.info('Nie odnaleziono środka w danych bieżącego okresu.\n'
            'Środek mógł zostać zlikwidowany lub zbyty do innej firmy grupy kapitałowej\n'
            'w okresie wcześniejszym lub dołączony w okresie późniejszym.'@)
?};
sel_exit()


\srdz_dok_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Formuła wyświetla podgląd nagłówka dokumentu księgowego
::----------------------------------------------------------------------------------------------------------------------
{? __T_SRDZ.DOK<>''
|| DOK.cntx_psh();
   DOK.prefix();
   {? DOK.seek(__T_SRDZ.DOK,ref_name(__T_SRDZ.DOK))
   || exec('RB','object');
      exec('dok_spac','dok_fks')
   ?};
   DOK.cntx_pop()
?}


\del_t_srdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Formuła usuwająca tabelę tymczasową na powiązane faktury
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__T_SRDZ','__T_SRDD','__T_SRDS')


\f3_dok_zak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Redakcja listy wskazań na fakturę zakupu
::----------------------------------------------------------------------------------------------------------------------
exec('lic','zam_okr_rok');
{? exec('a_lic','zam_okr_rok','FKS')
||
:: w trakcie redakcji powiązanych faktur zakupu możliwa jest zmiana maski tabeli DOK
   DOK.cntx_psh();
   __T_SRDZ.prefix();
   __T_SRDZ.select();
   EDIT_ES.DOK_ZAK:=exec('symb_fz','fst',0);
   DOK.cntx_pop()
|| FUN.emsg('Brak licencji dla dziedziny FKS, wyświetlenie faktur zakupu nie jest możliwe.'@)
?};
''


\srdz_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Dołączanie powiązania faktury zakupu z dokumentem przyjęcia środka trwałego
::----------------------------------------------------------------------------------------------------------------------
_sort:='NK';
_from:='left join DOK_REJ using (DOK.DOK_REJ,DOK_REJ.REFERENCE)';
_where:='DOK_REJ.ZAK_SR=''T'' and DOK.ODD=:_a';
_maska:='doku'+SSTALE.AR().KOD+form(SSTALE.AO().NR,-2);
{? DOK.name()<>_maska || DOK.use(_maska) ?};
DOK.prefix();
DOK.f_set(_sort,_from,_where,SRSR.ODD);
{? DOK.f_first()
|| __T_SRDZ.cntx_psh();
   {! |?
      __T_SRDZ.index(__T_SRDD);
      __T_SRDZ.prefix(DOK.uidref(),);
      {? __T_SRDZ.first() || DOK.f_del() || DOK.f_next() ?}
   !};
   __T_SRDZ.cntx_pop()
?};
DOK.f_first();
_okres:=SSTALE.AO().NAZ+' '+SSTALE.AR().NAZ;
_win:=DOK.mk_sel(,'P',0,'_dok_fzak',12,7,15,,'U','T',,,,'normal');
DOK.win_fld(_win,,'NR',,,10,,,'Nr w rejestrze'@,,'Numer w rejestrze ksiegowym'@);
DOK.win_fld(_win,,'REJ','KOD',,8,,,'Rejestr'@,,'Rejestr kięgowy'@);
DOK.win_fld(_win,,'NK',,,50,,,'Symbol'@,,'Symbol dokumentu'@);
DOK.win_fld(_win,,'DTW',,,10,,,'Data zapisu'@,,'Data zapisu'@);
DOK.win_fld(_win,,'DTO',,,10,,,'Data wystawienia'@,,'Data wystawienia'@);
DOK.win_fld(_win,,'TR',,,30,,,'Opis'@,,'Opis'@);
DOK.win_act(_win,,'Formuła','Wybierz'@,,'Wybór dokumentu'@,,"sel_exit()",1,,,,'W');
DOK.win_act(_win,,'Formuła','Zmiana okresu'@,,'Zmiana okresu'@,,"exec('zm_okr','fst')",0,,,,'Z');
DOK.win_act(_win,1,'Formuła','Zmiana okresu'@,,'Zmiana okresu'@,,"exec('zm_okr','fst')",1,,,,'Z');
DOK.win_btn(_win,'text=%1'['Wybierz'@],'menu:W',,,,,,'noempty');
DOK.win_btn(_win,'text=%1'['Zmiana okresu'@],'menu:Z',,,,,,'');
DOK.win_sel(_win);
DOK.hdr_sel('Faktury zakupu [%1] '@[_okres]);
{? DOK.select()
|| {? ~(var_pres('__T_BLAN')>0 & __T_BLAN=1)
   || {? SRDO.r_lock(1,1,1)
      || __T_SRDZ.blank();
         __T_SRDZ.NK:=DOK.NK;
         __T_SRDZ.DTO:=DOK.DTO;
         __T_SRDZ.DTW:=DOK.DTW;
         __T_SRDZ.TR:=DOK.TR;
         __T_SRDZ.SRDO:='';
         __T_SRDZ.DOK:=DOK.uidref();
         {? __T_SRDZ.add()
         || SRDZ.blank();
            SRDZ.SRDO:=SRDO.ref();
            SRDZ.DOK_REF:=DOK.uidref();
            {? SRDZ.add()
            || SRDO.get();
               SRDO.DOK_ZAK:=exec('symb_fz','fst',1);
               SRDO.put();
               __T_SRDZ.SRDZ_REF:=$SRDZ.ref();
               __T_SRDZ.put()
            ?}
         ?};
         SRDO.r_unlock()
      || FUN.emsg('Dokument OT został zablokowany przez innego użytkownika.\n'
                  'Nie można dodać powiązania z fakturą zakupu.'@)
      ?}
   || __T_SRDZ.blank();
      __T_SRDZ.NK:=DOK.NK;
      __T_SRDZ.DTO:=DOK.DTO;
      __T_SRDZ.DTW:=DOK.DTW;
      __T_SRDZ.TR:=DOK.TR;
      __T_SRDZ.SRDO:='';
      __T_SRDZ.DOK:=DOK.uidref();
      __T_SRDZ.add()
   ?}
?}


\srdz_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Usunięcie powiązania faktury zakupu z dokumentem przyjęcia środka trwałego
::----------------------------------------------------------------------------------------------------------------------
SRDZ.cntx_psh();
SRDZ.prefix();
_ref:=__T_SRDZ.SRDZ_REF;
_del:=0;
{? _ref<>''
|| {? SRDZ.seek(_ref,ref_name(_ref))
   || {? FUN.ask('Usunąć powiązanie dokumentu zakupu z dokumentem przyjęcia środka trwałego?'@)
      || {? SRDZ.del(1,1)
         || _del:=1
         || FUN.emsg('Wystąpił problem podczas próby usunięcia powiązania dokumentu OT z fakturą zakupu.'@)
         ?}
      ?}
   || FUN.emsg('Powiązanie zostało już usunięte.'@);
      _del:=1
   ?}
|| {? FUN.ask('Usunąć powiązanie dokumentu zakupu z dokumentem przyjęcia środka trwałego?'@)
   || _del:=1
   ?}
?};
{? _del || __T_SRDZ.del() ?};
SRDZ.cntx_pop()


\zm_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Zmiana okresu na liście faktur zakupu
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh(); OKRO_F.cntx_psh();
OKRO_F.win_sel('WER');
OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(REF.FIRMA);
SSTALE.AO();
{? OKRO_F.select(,1)
|| _maska:='doku'+OKRO_F.ROK().KOD+form(OKRO_F.NR,-2);
   {? DOK.name()<>_maska || DOK.use(_maska); DOK.prefix() ?};
   _sort:='NK';
   _from:='left join DOK_REJ using (DOK.DOK_REJ,DOK_REJ.REFERENCE)';
   _where:='DOK_REJ.ZAK_SR=''T'' and DOK.ODD=:_a';
   DOK.f_set(_sort,_from,_where,SRSR.ODD);
   {? DOK.f_first()
   || __T_SRDZ.cntx_psh();
      {! |?
         __T_SRDZ.index(__T_SRDD);
         __T_SRDZ.prefix(DOK.uidref(),);
         {? __T_SRDZ.first() || DOK.f_del() || DOK.f_next() ?}
      !};
      __T_SRDZ.cntx_pop()
   ?};
   DOK.f_first();
   _okres:=OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ;
   DOK.hdr_sel();
   DOK.hdr_sel('Faktury zakupu [%1] '@[_okres])
?};
ROK_F.cntx_pop(); OKRO_F.cntx_pop()


\symb_fz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Formuła zwraca tekst z listą symboli faktur zakupu związanych ze środkiem
::   WE: _a = 0 na podstawie tymczasowej tabeli __T_SRDZ
::       _a = 1 na podstawie tabeli SRDZ i bieżącego rekordu SRDO.
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
_tmp:='';
{? _a=0
|| __T_SRDZ.prefix();
   {? __T_SRDZ.first()
   || {! |?
         {? _tmp<>'' || _tmp+=', '+__T_SRDZ.NK || _tmp+=__T_SRDZ.NK ?};
         __T_SRDZ.next()
      !}
   ?}
|? _a=1
|| SRDZ.cntx_psh();
   SRDZ.index('SRDZ');
   SRDZ.prefix(SRDO.ref());
   {? SRDZ.first()
   || {! |?
         DOK.cntx_psh();
         DOK.prefix();
         {? DOK.seek(SRDZ.DOK_REF,ref_name(SRDZ.DOK_REF))
         || {? _tmp<>'' || _tmp+=', '+DOK.NK || _tmp+=$DOK.DTO+', '+DOK.NK ?}
         ?};
         DOK.cntx_pop();
         SRDZ.next()
      !}
   ?};
   SRDZ.cntx_pop()
?};
_tmp


\po_red_ot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Formuła po dodaniu lub redakcji dokumentu przyjęcia
::----------------------------------------------------------------------------------------------------------------------
__T_SRDZ.prefix();
SRDZ.index('SRDZ');
SRDZ.prefix(SRDO.ref());
{? SRDZ.first() || {! |? SRDZ.del() !} ?};
{? __T_SRDZ.first()
|| {! |?
      DOK.cntx_psh();
      DOK.prefix();
      {? DOK.seek(__T_SRDZ.DOK,ref_name(__T_SRDZ.DOK))
      || SRDZ.blank();
         SRDZ.SRDO:=SRDO.ref();
         SRDZ.DOK_REF:=__T_SRDZ.DOK;
         SRDZ.add()
      ?};
      DOK.cntx_pop();
      __T_SRDZ.next()
   !}
?};
SRDO.cntx_psh();
_get:=SRDO.get();
SRDO.cntx_pop();
{? _get
|| SRDO.DOK_ZAK:=exec('symb_fz','fst',1);
   SRDO.put()
?};
VAR_DEL.delete('__T_SRDZ','__T_SRDD','__T_SRDS')


\przed_red_ot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Formuła przed dodaniem lub redakcją dokumentu przyjęcia
::   WE: _a = 0 - dołącz, _a = 1 - popraw
::----------------------------------------------------------------------------------------------------------------------
exec('create_t_srdz','fst_kst');
EDIT_ES.DOK_ZAK:=exec('symb_fz','fst',_a);
{? _a=1
|| SRDZ.index('SRDZ');
   SRDZ.prefix(SRDO.ref());
   {? SRDZ.first()
   || {! |?
         DOK.cntx_psh();
         DOK.prefix();
         _ok:={? DOK.seek(SRDZ.DOK_REF,ref_name(SRDZ.DOK_REF))
              || __T_SRDZ.blank();
                 __T_SRDZ.NK:=DOK.NK;
                 __T_SRDZ.DTO:=DOK.DTO;
                 __T_SRDZ.DTW:=DOK.DTW;
                 __T_SRDZ.TR:=DOK.TR;
                 __T_SRDZ.SRDO:=SRDO.uidref();
                 __T_SRDZ.DOK:=DOK.uidref();
                 __T_SRDZ.SRDZ_REF:=$SRDZ.ref();
                 __T_SRDZ.add();
                 SRDZ.next()
              || SRDZ.del()
              ?};
              DOK.cntx_pop();
              _ok
      !}
   ?}
?}


\dok_zak_srdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Formuła dla bieżącego dokumentu księgowego wyszukuje powiązany dokument OT i środek trwały
::----------------------------------------------------------------------------------------------------------------------
exec('lic','zam_okr_rok');
{? ~exec('a_lic','zam_okr_rok','FST')
|| FUN.emsg('Brak licencji dla dziedziny FST, wyświetlenie dokumentów przyjęcia środków trwałych nie jest możliwe.'@)
?};

{? DOK.DOK_REJ().ZAK_SR<>'T'
|| FUN.emsg('Rodzaj bieżącego dokumentu (%1) nie jest związany z zakupami środków trwałych.'@[DOK.DOK_REJ().NAZ]);
   return()
?};
VAR_DEL.delete('__T_SRSR');
_sql:='select SRDO.SYMBOL as OT_SYM, SRDO.REFERENCE as SRDO_REF, SRSR.NRI as NRI, SRSR.NST as NST, SRSR.REFERENCE as REF, '
      'SRSR.R as R, SRSR.GRP as GRP, SRDZ.REFERENCE as SRDZ_REF, SRSR.DE, SRDO.ROK, SRDO.NR '
      'from SRDO join SRSR '
      'using (SRDO.SRSR,SRSR.REFERENCE) join SRDZ using (SRDZ.SRDO,SRDO.REFERENCE) '
      'where SRDZ.DOK_REF='':_a'' order by SRDO.ROK, SRDO.NR';
__T_SRSR:=sql(_sql,DOK.uidref());
_win:=__T_SRSR.mk_sel('Powiązane środki trwałe'@,'P',0,'_dok_srdo',10,5,15,,'U','T',,,,'normal');
__T_SRSR.win_fld(_win,,'OT_SYM',,,20,,,'Dokument OT'@,,'Dokument przyjęcia OT'@);
__T_SRSR.win_fld(_win,,'ROK',,,4,,,'Rok'@,,'Rok wystawienia OT'@);
__T_SRSR.win_fld(_win,,'NR',,,4,,,'Nr w roku'@,,'Nr dokumentu w roku'@);
__T_SRSR.win_fld(_win,,'NRI',,,18,,,'Nr inwentarzowy'@,,'Numer inwentarzowy środka'@);
__T_SRSR.win_fld(_win,,'NST',,,40,,,'Nazwa środka'@,,'Nazwa środka trwałego'@);
__T_SRSR.win_fld(_win,,'DE',,,10,,,'Data eksploatacji'@,,'Data wprowadzenia do eksploatacji'@);
__T_SRSR.win_act(_win,,'Wyświetl',,,,,"SRSR.cntx_psh();
                                       SRSR.prefix();
                                       {? SRSR.seek(__T_SRSR.REF,ref_name(__T_SRSR.REF))
                                       || {? __T_SRSR.R='T' & __T_SRSR.GRP='N'
                                          || SRSR.win_edit('RED_T')
                                          |? __T_SRSR.R='T' & __T_SRSR.GRP='T'
                                          || SRSR.win_edit('RED_TG')
                                          |? __T_SRSR.R='T' & __T_SRSR.GRP='E'
                                          || SRSR.win_edit('RED_TE')
                                          |? __T_SRSR.R='N' & __T_SRSR.GRP='N'
                                          || SRSR.win_edit('RED_N')
                                          |? __T_SRSR.R='N' & __T_SRSR.GRP='T'
                                          || SRSR.win_edit('RED_NG')
                                          |? __T_SRSR.R='N' & __T_SRSR.GRP='E'
                                          || SRSR.win_edit('RED_NE')
                                          ?};
                                          EDIT_ES.JORG:=SRSR.JORG().SYMBOL;
                                          SRSR.display()
                                       || FUN.emsg('Nie znaleziono wskazanego środka trwałego.'@)
                                       ?};
                                       SRSR.cntx_pop()");
__T_SRSR.win_act(_win,,'Formuła','Dołącz'@,,'Dołączenie powiązania ze środkiem trwałym'@,,"exec('t_srsr_add','fst')",1,,,,'D');
__T_SRSR.win_act(_win,1,'Formuła','Dołącz'@,,'Dołączenie powiązania ze środkiem trwałym'@,,"exec('t_srsr_add','fst')",1,,,,'D');
__T_SRSR.win_act(_win,,'Formuła','Usuń'@,,'Usunięcie powiązania ze środkiem trwałym'@,,"exec('t_srsr_del','fst')",0,,,,'U');
__T_SRSR.win_btn(_win,'text=%1'['Dołącz'@],'menu:D',,,,,,'');
__T_SRSR.win_btn(_win,'text=%1'['Usuń'@],'menu:U',,,,,,'noempty');
__T_SRSR.win_sel(_win);
__T_SRSR.select();
VAR_DEL.delete('__T_SRSR')


\t_srsr_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Dołączenie powiązania dokumentu ze środkiem trwałym - od strony dokumentu księgowego
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__srsr_d');
_sql:='select SRDO.SYMBOL, SRDO.REFERENCE as SRDO_REF, SRSR.REFERENCE as REF, SRSR.NRI, SRSR.NST, '
      'SRSR.R, SRSR.GRP, SRDO.ROK, SRDO.NR, SRSR.DE, ODD.OD '
      'from SRDO join SRSR using (SRDO.SRSR, SRSR.REFERENCE) join ODD using (SRSR.ODD, ODD.REFERENCE) '
      'where SRDO.RODZ=''P'' and SRSR.ODD=:_a';
__srsr_d:=sql(_sql,DOK.ODD);
{? __srsr_d.first()
|| __srsr_d.for_each("
                     SRDZ.cntx_psh(); SRDO.cntx_psh();
                     SRDO.prefix();
                     SRDZ.index('SRDD');
                     SRDZ.prefix(DOK.uidref());
                     {? SRDO.seek(__srsr_d.SRDO_REF,ref_name(__srsr_d.SRDO_REF))
                     || {? SRDZ.find_key(SRDO.ref()) || __srsr_d.del() ?}
                     ?};
                     SRDO.cntx_pop(); SRDZ.cntx_pop()
                    ")
?};
{? __srsr_d.first()
|| _win:=__srsr_d.mk_sel('Dokumenty przyjęcia środków trwałych'@,'P',0,'_srdo_srsr',12,7,15,,'U','T',,,,'normal');
   __srsr_d.win_fld(_win,,'SYMBOL',,,20,,,'Dokument OT'@,,'Dokument przyjęcia OT'@);
   __srsr_d.win_fld(_win,,'NRI',,,18,,,'Nr inwentarzowy'@,,'Numer inwentarzowy środka'@);
   __srsr_d.win_fld(_win,,'NST',,,40,,,'Nazwa środka'@,,'Nazwa środka trwałego'@);
   __srsr_d.win_act(_win,,'Formuła','Wybierz'@,,'Dołącz powiązanie wskazanego środka z dokumentem ksiegowym'@,,"sel_exit()",1,,,,'W');
   _form:="SRDO.cntx_psh();
           {? SRDO.seek(__srsr_d.SRDO_REF,ref_name(__srsr_d.SRDO_REF))
           || SRDO.win_edit('RED_P');
              SRDO.display()
           || FUN.emsg('Nie znaleziono dokumentu przyjęcia środka trwałego.'@)
           ?};
           SRDO.cntx_pop()
          ";
   __srsr_d.win_act(_win,,'Wyświetl',,,,,_form);
   _form:="SRSR.cntx_psh(); SRDO.cntx_psh();
           SRSR.prefix(); SRDO.prefix();
           {? SRSR.seek(__srsr_d.REF,ref_name(__srsr_d.REF))
           || {? SRSR.R='T' & SRSR.GRP='N' || SRSR.win_edit('RED_T')
              |? SRSR.R='T' & SRSR.GRP='T' || SRSR.win_edit('RED_TG')
              |? SRSR.R='T' & SRSR.GRP='E' || SRSR.win_edit('RED_TE')
              |? SRSR.R='N' & SRSR.GRP='N' || SRSR.win_edit('RED_N')
              |? SRSR.R='N' & SRSR.GRP='T' || SRSR.win_edit('RED_NG')
              |? SRSR.R='N' & SRSR.GRP='E' || SRSR.win_edit('RED_NE')
              ?};
              EDIT_ES.JORG:=SRSR.JORG().SYMBOL;
              SRSR.display()
           || FUN.emsg('Nie znaleziono środka trwałego.'@)
           ?};
           SRSR.cntx_pop(); SRDO.cntx_pop()
          ";
   __srsr_d.win_act(_win,,'Formuła','Pokaż dane środka'@,,'Funkcja wyświetla dane środka trwałego związanego z OT',,_form,,,,,'P');
   __srsr_d.win_btn(_win,'text=%1'['Wybierz'@],'menu:W',,,,,,'noempty');
   __srsr_d.win_sel(_win);
   {? __srsr_d.select()
   || {? DOK.r_lock(1,1,1)
      || SRDO.cntx_psh();
         {? SRDO.seek(__srsr_d.SRDO_REF,ref_name(__srsr_d.SRDO_REF))
         || {? SRDO.r_lock(1,1,1)
            || __T_SRSR.blank();
               __T_SRSR.OT_SYM:=__srsr_d.SYMBOL;
               __T_SRSR.NRI:=__srsr_d.NRI;
               __T_SRSR.NST:=__srsr_d.NST;
               __T_SRSR.SRDO_REF:=__srsr_d.SRDO_REF;
               __T_SRSR.R:=__srsr_d.R;
               __T_SRSR.GRP:=__srsr_d.GRP;
               __T_SRSR.ROK:=__srsr_d.ROK;
               __T_SRSR.NR:=__srsr_d.NR;
               __T_SRSR.REF:=__srsr_d.REF;
               __T_SRSR.DE:=__srsr_d.DE;
               __T_SRSR.add();
               SRDZ.blank();
               SRDZ.SRDO:=SRDO.ref();
               SRDZ.DOK_REF:=DOK.uidref();
               {? SRDZ.add()
               || {? SRDO.get()
                  || SRDO.DOK_ZAK:=exec('symb_fz','fst',1);
                     SRDO.put()
                  ?};
                  __T_SRSR.SRDZ_REF:=$SRDZ.ref();
                  __T_SRSR.put()
               ?};
               SRDO.r_unlock()
            || FUN.emsg('Dokument przyjęcia środka zablokowany przez innego użytkownika.'@)
            ?}
         ?};
         SRDO.cntx_pop();
         DOK.r_unlock()
      || FUN.emsg('Dokument księgowy zablokowany przez innego użytkownika.'@)
      ?}
   ?}
|| FUN.emsg('Brak niepowiązanych środków trwałych.'@)
?};
VAR_DEL.delete('__srsr_d')


\t_srsr_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Usunięcie powiązania dokumentu ze środkiem trwałym - od strony dokumentu księgowego
::----------------------------------------------------------------------------------------------------------------------
SRDZ.cntx_psh(); SRDO.cntx_psh();
SRDO.prefix(); SRDZ.prefix();
{? SRDZ.seek(__T_SRSR.SRDZ_REF,ref_name(__T_SRSR.SRDZ_REF))
|| SRDZ.SRDO();
   {? SRDO.r_lock(1,1,1)
   || {? FUN.ask('Usunąć powiązanie bieżącego dokumentu księgowego ze środkiem trwałym i dokumentem przyjęcia?'@)
      || {? SRDZ.del(1,1)
         || {? SRDO.get()
            || SRDO.DOK_ZAK:=exec('symb_fz','fst',1);
               SRDO.put()
            ?};
            __T_SRSR.del()
         || FUN.emsg('Nie udało się usunąć powiązania bieżącego dokumentu ze środkiem trwałym.'@)
         ?}
      ?};
      SRDO.r_unlock()
   || FUN.emsg('Dokument przyjęcia środka związany z bieżącym zapisem jest zablokowany\n'
               'przez innego użytkownika. Usunięcie zapisu nie jest możliwe.'@)
   ?}
|| FUN.emsg('Nie znaleziono powiązania, prawdopodobnie zostało już usunięte przez innego użytkownika.'@);
   __T_SRSR.del()
?};
SRDO.cntx_pop(); SRDZ.cntx_pop()


\dok_del_srdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Usunięcie powiązań dokumentów OT środków ze wskazanym dokumentem księgowym
::   WE: _a - DOK.uidref
::----------------------------------------------------------------------------------------------------------------------
{? _=0 | type_of(_a)<>type_of('') | _a='' || return(0) ?};
SRDZ.index('SRDD');
SRDZ.prefix(_a,);
{? SRDZ.first() || {! |? SRDZ.del() !} ?}


\srdz_tsrdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Formuła uzupełnia tabelę tymczasową __T_SRDZ
::   WE: [_a] - wskazanie na dokument OT (SRDO.ref())
::----------------------------------------------------------------------------------------------------------------------
{? _=0 | type_of(_a)<>type_of(null) | _a=null || _a:=SRDO.ref() ?};
SRDZ.index('SRDZ');
SRDZ.prefix(_a);
{? SRDZ.first()
|| {!
   |? DOK.cntx_psh();
      DOK.prefix();
      _loop:={? DOK.seek(SRDZ.DOK_REF,ref_name(SRDZ.DOK_REF))
             || __T_SRDZ.blank();
                __T_SRDZ.NK:=DOK.NK;
                __T_SRDZ.DTO:=DOK.DTO;
                __T_SRDZ.DTW:=DOK.DTW;
                __T_SRDZ.TR:=DOK.TR;
                __T_SRDZ.SRDO:=SRDO.uidref();
                __T_SRDZ.DOK:=DOK.uidref();
                __T_SRDZ.SRDZ_REF:=$SRDZ.ref();
                __T_SRDZ.add();
                SRDZ.next()
             || SRDZ.del()
             ?};
      DOK.cntx_pop();
      _loop
   !}
?}


\srdz_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Lista faktur zakupu powiązanych z bieżącym środkiem trwałym
::----------------------------------------------------------------------------------------------------------------------
exec('lic','zam_okr_rok');
{? exec('a_lic','zam_okr_rok','FKS')
|| {? SRDO.TYP().RODZ<>'P'
   || FUN.emsg('Bieżący dokument nie jest dokumentem przyjęcia środka (OT).\n'
               'Faktury zakupu związane są tylko z dokumentami przyjęcia środka'@);
      return()
   ?};
   exec('create_t_srdz','fst_kst');
   exec('srdz_tsrdz','fst');
   __T_SRDZ.prefix();
   __T_SRDZ.select();
   {? SRDO.get()
   || EDIT_ES.DOK_ZAK:=SRDO.DOK_ZAK:=exec('symb_fz','fst',0);
      SRDO.put()
   ?};
   exec('del_t_srdz','fst')
|| FUN.emsg('Brak licencji dla dziedziny FKS, wyświetlenie faktur zakupu nie jest możliwe.'@)
?}


\ae_skresl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Po redakcji pola PAR_WYDR.SKRESL
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.SKRESL=1 || PAR_WYDR.SKR_ONLY:=0 ?};
1


\srs_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Formuła umożliwia wybór środka/elementu zbytego w obrębie grupy kapitałowej
::   WE: _a = Środek - 'N', Element - 'E'
::   WY: 1/0 - wybrano lub zrezygnowano
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__T_SRSF');
SRSFIRMA.index('SRDO');
SRSFIRMA.prefix();

EDIT_ES.SRSFIRMA:=null;

__T_SRSF:=tab_tmp(2,'DATA_Z','DATE','Data zbycia'@,
                    'FIRMA_Z','STRING[10]','Firma źródłowa'@,
                    'DATA_D','DATE','Data przyjęcia'@,
                    'FIRMA_D','STRING[10]','Firma docelowa'@,
                    'SRDO_Z','STRING[30]','Symbol dokumentu zbycia'@,
                    'SRDO_REF','STRING[48]','Dokument zbycia'@,
                    'NRI_Z','STRING[18]','Nr pierwotny'@,
                    'NRI_D','STRING[18]','Nr docelowy'@,
                    'NST_Z','STRING[100]','Nazwa pierwotna'@,
                    'NST_D','STRING[100]','Nazwa docelowa'@,
                    'ORG_REF','STRING[48]','Środek pierwotny'@,
                    'SRC_REF','STRING[48]','Środek źródłowy'@,
                    'SRSF_REF','STRING[48]','Wskazanie na zapis zbycia'@,
                    'GRP','STRING[1]','Środek czy element?');

{? _a='E' || _tmp:='Elementy składowe'@ || _tmp:='Środki'@ ?};
_win:=__T_SRSF.mk_sel('%1 sprzedane z grupy kapitałowej do bieżącej firmy'@[_tmp],'P',0,'_t_srsf',10,5,15,0,'U',,,,,'normal');
__T_SRSF.win_fld(_win,,'DATA_Z',,,14,,,'Data zbycia'@,,'Da`ta zbycia środka'@);
__T_SRSF.win_fld(_win,,'FIRMA_Z',,,16,,,'Firma zbywająca'@,,'Symbol firmy zbywającej środek'@);
__T_SRSF.win_fld(_win,,'DATA_D',,,14,,,'Data przyjęcia'@,,'Data przyjęcia w firmie docelowej'@);
__T_SRSF.win_fld(_win,,'FIRMA_D',,,14,,,'Firma docelowa'@,,'Data przyjęcia środka w firmie docelowej'@);
__T_SRSF.win_fld(_win,,'SRDO_Z',,,14,,,'Dokument zbycia'@,,'Symbol dokumentu zbycia środka'@);
__T_SRSF.win_fld(_win,,'NRI_Z',,,12,,,'Nr pierwotnie'@,,'Nr inwentarzowy w firmie zbywającej'@);
__T_SRSF.win_fld(_win,,'NRI_D',,,12,,,'Nr docelowy'@,,'Nr inwentarzowy w firmie docelowej'@);
__T_SRSF.win_act(_win,,'Wyświetl',,,,,"__T_SRSF.display()");
__T_SRSF.win_act(_win,,'Formuła','Wybierz'@,,'Wybór środka do nabycia',,"sel_exit()",1,,,,'W');
__T_SRSF.win_btn(_win,'text=%1'['Wybierz'@],'menu:W',,,,,,'noempty');
__T_SRSF.win_sel(_win);
_red:=__T_SRSF.mk_edit('Dane środka'@,1,'_srs_edi',12,7);
__T_SRSF.win_edit(_red);

{? SRSFIRMA.first()
||
   SRDO.cntx_psh(); SRSR.cntx_psh();
   SRDO.prefix();
   {! |?
      {? SRSFIRMA.PRZYJETO<>'T' & (SRSFIRMA.FIRMA_D=REF.FIRMA | SRSFIRMA.FIRMA_D=null) & SRSFIRMA.GRP=_a
         & SRSFIRMA.FIRMA_Z<>REF.FIRMA
      || __T_SRSF.blank();
         __T_SRSF.DATA_Z:=SRSFIRMA.DATA_Z;
         __T_SRSF.FIRMA_Z:=SRSFIRMA.FIRMA_Z().SYMBOL;
         __T_SRSF.DATA_D:=SRSFIRMA.DATA_D;
         __T_SRSF.FIRMA_D:=SRSFIRMA.FIRMA_D().SYMBOL;
         __T_SRSF.SRDO_REF:=SRSFIRMA.SRDO_REF;
         __T_SRSF.SRSF_REF:=SRSFIRMA.uidref();

         {? SRDO.seek(SRSFIRMA.SRDO_REF,ref_name(SRSFIRMA.SRDO_REF))
         || __T_SRSF.SRDO_Z:=SRDO.SYMBOL
         ?};
         {? SRSR.seek(SRSFIRMA.SRSR_Z,ref_name(SRSFIRMA.SRSR_Z))
         || __T_SRSF.NRI_Z:=SRSR.NRI;
            __T_SRSF.NST_Z:=SRSR.NST
         ?};
         {? SRSR.seek(SRSFIRMA.SRSR_D,ref_name(SRSFIRMA.SRSR_D))
         || __T_SRSF.NRI_D:=SRSR.NRI;
            __T_SRSF.NST_D:=SRSR.NST
         ?};
         __T_SRSF.ORG_REF:=SRSFIRMA.ORG_REF;
         __T_SRSF.SRC_REF:=SRSFIRMA.SRSR_Z;
         __T_SRSF.GRP:=SRSFIRMA.GRP;
         __T_SRSF.add()
      ?};
      SRSFIRMA.next()
   !};
   SRDO.cntx_pop(); SRSR.cntx_pop()
?};

{? __T_SRSF.select()
|| SRSFIRMA.prefix();
   {? SRSFIRMA.seek(__T_SRSF.SRSF_REF)
   || _diff:=0;
      {? FINFO.TOR_D<>'T'
      || SRDO.cntx_psh();
         {? SRDO.seek(SRSFIRMA.SRDO_REF,ref_name(SRSFIRMA.SRDO_REF))
         || {? SRDO.WARD<>0 | SRDO.UMOD<>0
            || FUN.emsg('W firmie pierwotnej środka obsługiwano dodatkowy tor amortyzacji.\n'
                        'W firmie bieżącej ta obsługa nie jest włączona. Przyjęcie środka nie jest możliwe.'@);
               _diff:=1
            ?}
         ?};
         SRDO.cntx_pop()
      ?};
      {? ~_diff
      || EDIT_ES.NAB_GRP:='T';
         EDIT_ES.ORG_REF:=__T_SRSF.ORG_REF;
         EDIT_ES.SRC_REF:=__T_SRSF.SRC_REF;
         EDIT_ES.SRDO_REF:=__T_SRSF.SRDO_REF;
         EDIT_ES.SRSF_REF:=__T_SRSF.SRSF_REF;
         EDIT_ES.SRSFIRMA:=SRSFIRMA.ref();
         1
      || 0
      ?}
   || FUN.emsg('Dokument zbycia w poprzedniej firmie został usunięty, środka nie można przyjąć.'@);
      0
   ?}
|| 0
?}


\copy_org
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Formuła kopiuje dokument wartościowy do pierwotnego środka
::   WE: _a - wskazanie na dokument wartościowy (SRDO.ref()),
::       _b = rodzaj zmiany 'W' - wartościowa, 'M' - zmiana metody amortyzacji
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? _=0 | type_of(_a)<>type_of(null) | _a=null || return(0) ?};
SRDO.cntx_psh();
SRDO.prefix();
{? SRDO.seek(_a,ref_name(_a))
|| _org_ref:=SRDO.SRSR().ORG_REF;
   _link_ref:=SRDO.uidref();
   _data_dok:=SRDO.OKRO_F().POCZ;
   _grp:=SRDO.SRSR().GRP;
   _typd:=SRDO.TYP().TYP;
   _element:={? _grp='E' || SRDO.SRSR_E || null ?};
   _firma:=(ref_name(_org_ref))+3;
   _ref_firma:=null;
   _p_sym:=SRDO.SYMBOL;
   _p_firma:=REF.FIRMA().SYMBOL;
   {? +_firma=3
   || FIRMA.index('SYMBOL');
      FIRMA.prefix(_firma,_firma);
      {? FIRMA.first()
      || _ref_firma:=REF.FIRMA;
         REF.FIRMA:=FIRMA.ref()
      ?}
   ?};
   {? _ref_firma
   || exec('fst_cntx_psh','srodobj');
      exec('maski','srodobj');
      SRSR.prefix();
      {? SRSR.seek(_org_ref,ref_name(_org_ref))
      || SRDO.cntx_psh();
         SRDO.index('LINK_REF');
         SRDO.prefix(_link_ref);
         {? ~SRDO.first()
         || {? _grp='N'
            || SRDO.SRSR:=SRSR.ref()
            |? _grp='E'
            || SRDO.SRSR_E:=SRSR.ref();
               SRDO.SRSR:=exec('get_srsr_root','fst',SRSR.ref())
            ?};
            SRDO.UWAGI:='[Kopia dokumentu: '+_p_sym+'z firmy: '+_p_firma+'] '+SRDO.UWAGI;
            SRDO.LINK_REF:=_link_ref;
            SRDO.OKRO_F:=exec('find_okro_f','fst',_data_dok,1);
            {? SRDO.OKRO_F<>null
            || SRDO.ROK_F:=SRDO.OKRO_F().ROK;
               SRDO.ROK:=SRDO.OKRO_F().RES;
               SRDO.OKRES:=SRDO.OKRO_F().OES;
               SRDO.DOKKSIEG:='';
               SRDT.index('SRDT');
               SRDT.prefix(_b,_typd);
               {? SRDT.first()
               || SRDO.TYP:=SRDT.ref();
                  SRDO.NR:=exec('bl_srdo_nr','fst');
                  SRDO.SYMBOL:=exec('symdok','fst');
:: jezeli dokument wartościowy likwidujący to w firmie pierwotnej należy zlikwidować z wartością z firmy pierwotnej
:: a nie kopiować wartości z firmy bieżącej gdyż mogą się różnić.
                  {? SRDO.Z='T'
                  || SRST.cntx_psh();
                     SRST.index('SROD');
                     SRST.prefix(SRDO.SRSR,SRDO.ROK_F,SRDO.OKRO_F);
                     {? SRST.first() & SRST.NAL='T'
                     || SRDO.WARP:=-SRST.WARP;
                        SRDO.WARF:=-SRST.WARF;
                        SRDO.WARD:=-SRST.WARD;
                        SRDO.UMOP:=-SRST.UMOP;
                        SRDO.UMOF:=-SRST.UMOF;
                        SRDO.UMOD:=-SRST.UMOD
                     || FUN.emsg('W firmie pierwotnej nie udało się ustalić wartości środka w okresie likwidacji\n'
                                 'lub nie naliczono amortyzacji do okresu likwidacji włącznie.'@)
                     ?};
                     SRST.cntx_pop()
                  ?};
                  {? SRDO.add()
                  || SRD.updateRecState(SRDO.OKRO_F,1,1);
:: dla zestawów i elementów: odświeżenie zestawu - jeżeli zmiana wartościowa lub elementów jeżeli zmiana metody
                     {? _b='W'
                     || {? SRD.isElement() || SRD.rootUpdate(SRSR.TREE, SRDO.OKRO_F,1) ?}
                     |? _b='M'
                     || {? SRD.isSet() || SRD.updateElements() ?}
                     ?};
                     _wy:=1
                  ?}
               || FUN.emsg('W firmie pierwotnej dla środka brak typu dokumentu %1.'@[_typd])
               ?}
            || FUN.emsg('W firmie pierwotnej dla środka brak okresu dla daty %1.'@[$_data_dok])
            ?}
         ?};
         SRDO.cntx_pop()
      || FUN.emsg('Nie znaleziono środka w pierwotnej firmie.'@)
      ?};
      REF.FIRMA:=_ref_firma;
      exec('fst_cntx_pop','srodobj')
   ?}
?};
SRDO.cntx_pop();
_wy


\update_org
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Formuła odświeża dokument wartościowy podpięty do pierwotnego środka, po zmianach w dokumencie
::       dla środka nabytego w nowej firmie
::   WE: _a - wskazanie na dokument wartościowy (SRDO.ref()),
::       _b = rodzaj zmiany 'W' - wartościowa, 'M' - zmiana metody amortyzacji
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? _=0 | type_of(_a)<>type_of(null) | _a=null || return(0) ?};
SRDO.cntx_psh();
SRDO.prefix();
{? SRDO.seek(_a,ref_name(_a))
|| _org_ref:=SRDO.SRSR().ORG_REF;
   _link_ref:=SRDO.uidref();
   _data_dok:=SRDO.OKRO_F().POCZ;
   _grp:=SRDO.SRSR().GRP;
   _typd:=SRDO.TYP().TYP;
   _p_sym:=SRDO.SYMBOL;
   _p_firma:=REF.FIRMA().SYMBOL;
   _element:={? _grp='E' || SRDO.SRSR_E || null ?};
:: wartości do aktualizacji
   {? _b='W'
   || _warp:=SRDO.WARP;
      _warf:=SRDO.WARF;
      _ward:=SRDO.WARD;
      _umop:=SRDO.UMOP;
      _umof:=SRDO.UMOF;
      _umod:=SRDO.UMOD
   |? _b='M'
   || _stap:=SRDO.STAP;
      _staf:=SRDO.STAF;
      _stad:=SRDO.STAD;
      _wkp:=SRDO.WKP;
      _wkf:=SRDO.WKF;
      _wkd:=SRDO.WKD
   ?};

   _firma:=(ref_name(_org_ref))+3;
   _ref_firma:=null;

   {? +_firma=3
   || FIRMA.index('SYMBOL');
      FIRMA.prefix(_firma,_firma);
      {? FIRMA.first()
      || _ref_firma:=REF.FIRMA;
         REF.FIRMA:=FIRMA.ref()
      ?}
   ?};
   {? _ref_firma
   || exec('fst_cntx_psh','srodobj');
      exec('maski','srodobj');
      SRSR.prefix();
      {? SRSR.seek(_org_ref,ref_name(_org_ref))
      || SRDO.cntx_psh();
         SRDO.index('LINK_REF');
         SRDO.prefix(_link_ref);
         {? SRDO.first()
         || _okro_f:=exec('find_okro_f','fst',_data_dok,1);
            {? _okro_f & _okro_f<>SRDO.OKRO_F
            || SRDO.OKRO_F:=_okro_f;
               SRDO.ROK_F:=SRDO.OKRO_F().ROK;
               SRDO.ROK:=SRDO.OKRO_F().RES;
               SRDO.OKRES:=SRDO.OKRO_F().OES
            ?};
:: aktualizacja wartości
            SRDO.UWAGI:='[Kopia dokumentu: '+_p_sym+'z firmy: '+_p_firma+'] '+SRDO.UWAGI;
            {? _b='W'
            || {? SRDO.Z<>'T'
               || SRDO.WARP:=_warp;
                  SRDO.WARF:=_warf;
                  SRDO.WARD:=_ward;
                  SRDO.UMOP:=_umop;
                  SRDO.UMOF:=_umof;
                  SRDO.UMOD:=_umod
:: jezeli dokument wartościowy likwidujący to w firmie pierwotnej należy zlikwidować z wartością z firmy pierwotnej
:: a nie kopiować wartości z firmy bieżącej gdyż mogą się różnić.
               |? SRDO.Z='T'
               || SRST.cntx_psh();
                  SRST.index('SROD');
                  SRST.prefix(SRDO.SRSR,SRDO.ROK_F,SRDO.OKRO_F);
                  {? SRST.first() & SRST.NAL='T'
                  || SRDO.WARP:=-SRST.WARP;
                     SRDO.WARF:=-SRST.WARF;
                     SRDO.WARD:=-SRST.WARD;
                     SRDO.UMOP:=-SRST.UMOP;
                     SRDO.UMOF:=-SRST.UMOF;
                     SRDO.UMOD:=-SRST.UMOD
                  || FUN.emsg('W firmie pierwotnej nie udało się ustalić wartości środka w okresie likwidacji\n'
                              'lub nie naliczono amortyzacji do okresu likwidacji włącznie.'@)
                  ?};
                  SRST.cntx_pop()
               ?}
            |? _b='M'
            || SRDO.STAP:=_stap;
               SRDO.STAF:=_staf;
               SRDO.STAD:=_stad;
               SRDO.WKP:=_wkp;
               SRDO.WKF:=_wkf;
               SRDO.WKD:=_wkd
            ?};

            {? SRDO.put()
            || SRD.updateRecState(SRDO.OKRO_F);
:: dla zestawów i elementów: odświeżenie zestawu - jeżeli zmiana wartościowa lub elementów jeżeli zmiana metody
               {? _b='W'
               || {? SRD.isElement() || SRD.rootUpdate(SRSR.TREE, SRDO.OKRO_F,1) ?}
               |? _b='M'
               || {? SRD.isSet() || SRD.updateElements() ?}
               ?};
               _wy:=1
            || FUN.emsg('Błąd podczas zapisu zmian w kopii dokumentu dla firmy pierwotnej.'@)
            ?}
         || FUN.emsg('W firmie pierwotnej nie znaleziono kopii dokumentu.'@)
         ?};
         SRDO.cntx_pop()
      || FUN.emsg('Nie znaleziono środka w pierwotnej firmie.'@)
      ?};
      REF.FIRMA:=_ref_firma;
      exec('fst_cntx_pop','srodobj')
   ?}
?};
SRDO.cntx_pop();
_wy


\delete_org
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Formuła usuwa dokument wartościowy podpięty do pierwotnego środka, po usunięciu dokumentu
::       dla środka nabytego w nowej firmie
::   WE: _a - wskazanie na dokument wartościowy (SRDO.ref()),
::       _b = rodzaj zmiany 'W' - wartościowa, 'M' - zmiana metody amortyzacji
::       _c = ref środka pierwotnego
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? _=0 | type_of(_a)<>type_of('') | _a='' || return(0) ?};
{? _<2 | type_of(_b)<>type_of('') | _b='' || return(0) ?};
{? _<3 | type_of(_c)<>type_of('') | _c='' || return(0) ?};
SRDO.cntx_psh();
SRDO.prefix();
_link_ref:=_a;
_org_ref:=_c;

_firma:=(ref_name(_org_ref))+3;
_ref_firma:=null;

{? +_firma=3
|| FIRMA.index('SYMBOL');
   FIRMA.prefix(_firma,_firma);
   {? FIRMA.first()
   || _ref_firma:=REF.FIRMA;
      REF.FIRMA:=FIRMA.ref()
   ?}
?};
{? _ref_firma
|| exec('fst_cntx_psh','srodobj');
   exec('maski','srodobj');
   SRSR.prefix();
   {? SRSR.seek(_org_ref,ref_name(_org_ref))
   || SRDO.cntx_psh();
      SRDO.index('LINK_REF');
      SRDO.prefix(_link_ref);
      {? SRDO.first()
      || {? SRDO.Z='T' & SRSR.DOKSKR=SRDO.ref()
         || SRSR.DOKSKR:=null;
            SRSR.put()
         ?};
         _okro_f:=SRDO.OKRO_F;
         {? SRDO.del(,1)
         || SRD.updateRecState(_okro_f,1,1);
:: dla zestawów i elementów: odświeżenie zestawu - jeżeli zmiana wartościowa lub elementów jeżeli zmiana metody
            {? _b='W'
            || {? SRD.isElement() || SRD.rootUpdate(SRSR.TREE, _okro_f,1) ?}
            |? _b='M'
            || {? SRD.isSet() || SRD.updateElements() ?}
            ?};
            _wy:=1
         || FUN.emsg('Błąd podczas usuwania zmian w kopii dokumentu dla firmy pierwotnej.'@)
         ?}
      || FUN.emsg('W firmie pierwotnej nie znaleziono kopii dokumentu.'@)
      ?};
      SRDO.cntx_pop()
   || FUN.emsg('Nie znaleziono środka w pierwotnej firmie.'@)
   ?};
   REF.FIRMA:=_ref_firma;
   exec('fst_cntx_pop','srodobj')
?};
SRDO.cntx_pop();
_wy


\amor_diff
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Formuła zwraca różnicę między wartością amortyzacji pierwotnej a bieżącą dla wskazanego środka i okresu
::   WE: _a - wskazanie na środek (bieżący, SRSR.ref()),
::       _b - wskazanie na okres (OKRO_F.ref())
::       _c - tor amortyzacji 'P' - podatkowo, 'F' - bilansowo, 'D' - dodatkowo
::   WY: wartość różnicy
::  OLD: \amor_diff/!fst_ewi_zbsr.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
{? _<3 | type_of(_a)<>type_of(null) | type_of(_b)<>type_of(null)
   | _a=null | _b=null | type_of(_c)<>type_of('') | _c='' | (_c<>'P' & _c<>'F' & _c<>'D')
|| return(0)
?};
SRSR.cntx_psh(); SRST.cntx_psh(); OKRO_F.cntx_psh();
OKRO_F.prefix(); SRSR.prefix();
{? OKRO_F.seek(_b,ref_name(_b))
|| {? SRSR.seek(_a,ref_name(_a))
   || {? SRST.name()<>'srstr'+(SRSR.name()+3) || SRST.use('srstr'+(SRSR.name()+3)) ?};
      SRST.index('SROD');
      SRST.prefix(SRSR.ref(),OKRO_F.ROK,OKRO_F.ref());
      {? SRST.first()
      || {? _c='P' || _b_amo:=SRST.AMOP
         |? _c='F' || _b_amo:=SRST.AMOF
         |? _c='D' || _b_amo:=SRST.AMOD
         ?};
         {? SRSR.seek(SRSR.ORG_REF,ref_name(SRSR.ORG_REF))
         || {? SRST.name()<>'srstr'+(SRSR.name()+3) || SRST.use('srstr'+(SRSR.name()+3)) ?};
            SRST.index('SROD');
            SRST.prefix(SRSR.ref(),OKRO_F.ROK,OKRO_F.ref());
            {? SRST.first()
            || {? _c='P' || _result:=_b_amo-SRST.AMOP
               |? _c='F' || _result:=_b_amo-SRST.AMOF
               |? _c='D' || _result:=_b_amo-SRST.AMOD
               ?}
            ?}
         ?}
      ?}
   ?}
?};
SRSR.cntx_pop(); SRST.cntx_pop(); OKRO_F.cntx_pop();
_result


\amor_pierwotna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Formuła zwraca wartość amortyzacji pierwotnej
::   WE: _a - wskazanie na składnik wartości (w firmie bieżącej, SRSW.ref()),
::       _b - tor amortyzacji 'P' - podatkowo, 'F' - bilansowo, 'D' - dodatkowo
::   WY: wartość amortyzacji
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
{? _<2 | type_of(_a)<>type_of(null) | _a=null | type_of(_b)<>type_of('') | _b=''
   | (_b<>'P' & _b<>'F' & _b<>'D')
|| return(0)
?};
SRSW.cntx_psh(); SRSR.cntx_psh(); SRST.cntx_psh(); OKRO_F.cntx_psh();
{? SRSW.seek(_a,ref_name(_a))
|| _typ:=SRSW.TYP;
   _pocz:=SRSW.OKRO_F().POCZ;
   {? SRST.name()<>'srstr'+(SRSW.name()+3) || SRST.use('srstr'+(SRSW.name()+3)) ?};
   {? SRSR.name()<>'srsrr'+(SRSW.name()+3) || SRSR.use('srsrr'+(SRSW.name()+3)) ?};
   SRST.prefix(); SRSR.prefix();
   SRSW.SRST(); SRST.SRSR();
   {? SRSR.seek(SRSR.ORG_REF,ref_name(SRSR.ORG_REF))
   || {? SRST.name()<>'srstr'+(SRSR.name()+3) || SRST.use('srstr'+(SRSR.name()+3)) ?};
      {? SRSW.name()<>'srswr'+(SRSR.name()+3) || SRSW.use('srswr'+(SRSR.name()+3)) ?};
      SRST.index('SROD');
      _firma:=REF.FIRMA;
      FIRMA.cntx_psh();
      FIRMA.index('SYMBOL');
      _symbol:=(SRST.name()+3);
      FIRMA.prefix(_symbol,_symbol);
      {? FIRMA.first() || REF.FIRMA:=FIRMA.ref() ?};
      FIRMA.cntx_pop();
      _okro_f:=exec('find_okro_f','fst',_pocz,1);
      _rok_f:=null;
      OKRO_F.cntx_psh();
      OKRO_F.prefix();
      {? OKRO_F.seek(_okro_f,ref_name(_okro_f)) || _rok_f:=OKRO_F.ROK ?};
      {? _rok_f
      || SRST.prefix(SRSR.ref(),_rok_f,_okro_f);
         {? SRST.first()
         || SRSW.index('PODAT2');
            SRSW.prefix(SRST.SRSR,_typ,OKRO_F.RES,OKRO_F.OES);
            {? SRSW.first()
            || {? _b='P' || _result:=SRSW.AMOP
               |? _b='F' || _result:=SRSW.AMOF
               |? _b='D' || _result:=SRSW.AMOD
               ?}
            ?}
         ?}
      ?};
      OKRO_F.cntx_pop()
   ?}
?};
SRSW.cntx_pop(); SRSR.cntx_pop(); SRST.cntx_pop(); OKRO_F.cntx_pop();
_result


\be_srsr_warp100
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.02]
:: OPIS: Przed redagowaniem pol SRSR.WARP100
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.AMOR100='T' || 1 || 0 ?}


\be_srsr_zalp100
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.02]
:: OPIS: Przed redagowaniem pol SRSR.ZALP100
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.AMOR100='T' || 1 || 0 ?}


\be_srsr_freq100
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.02]
:: OPIS: Przed redagowaniem pol SRSR.FREQ100
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.AMOR100='T' || 1 || 0 ?}


\ae_srsr_amor100
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.02]
:: OPIS: Po redakcji pola SRSR.AMOR100
::----------------------------------------------------------------------------------------------------------------------
{? SRSR.AMOR100<>'T' || SRSR.WARP100:=SRSR.ZALP100:=0 ?};
{? SRSR.AMOR100='T' || _enable:=1 || _enable:=0 ?};
SRSR.efld_opt(SRSR.win_edit('?'), 'enable='+$_enable,, 'WARP100');
SRSR.efld_opt(SRSR.win_edit('?'), 'enable='+$_enable,, 'ZALP100');
SRSR.efld_opt(SRSR.win_edit('?'), 'enable='+$_enable,, 'FREQ100');
1


\t_sgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.02]
:: OPIS: Zwraca grupę do wydruku
::----------------------------------------------------------------------------------------------------------------------
SRST.index('PODAT');
SRST.prefix();
{? SRST.find_key(SRDO.SRSR,SSTALE.AO().RES-1,12) || __t_sgr:=SRST.GR().GR || __t_sgr:='' ?}


\rp_srsw_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.02]
:: OPIS: Oznaczanie kolorem składników wartości środka zbytego w historii rozliczeń dofinansowania
::----------------------------------------------------------------------------------------------------------------------
{? SRSW.SRST().R='S' || 'SRSW#01#01' || '' ?}


\br_srsw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.02]
:: OPIS: Formuła na rekord przed tabeli SRSW
::----------------------------------------------------------------------------------------------------------------------
exec('rekprzed','color','SRSW#01#')


:Sign Version 2.0 jowisz:1045 2024/02/28 10:12:41 81be7752b9e7ec93ec892b3af256bf0103ed651efebdf2c130d6aca39908a37f3e01ed8ee1beb5d2c9fa50f096fa293d4dacf1297dd9501b3f25cf248a63bf000c15bbcff9b8382512f611c73fc66eb6147ce9f140bb47f73fd02f8dd310e1846d458ea4e83361e69e18715d1dc3745636ed1eba805c60f6e90311a1f94970cf
