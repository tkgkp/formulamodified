:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: dok_fks_aut_dok.fml
:: Utworzony: 22.05.2015 [17.00]
:: Autor: AMK
::======================================================================================================================
:: Zawartość: Formuły do obsługi dokumentów księgowych - automatyczna dekretacja za pomocą schematów dziedzinowych
::======================================================================================================================

\run_tree_dek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula uruchamia dekretacje
::   WY: 0 - zrezygnowano z dekretacji (np. ESC), 1 - w p.p.
::  OLD: \run_tree_dek/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('czy_okr_zam_con','konsolidacja',1) | exec('is_okr_blck','!zws_par_aokr',SSTALE.AO,OPERATOR.USER)
|| {? SSTALE.AO().ZAM='T'
   || FUN.info('Niedozwolona dekretacja w zamkniętym okresie.'@)
   || run_dek:=1;
      exec('czytaj','#stalesys');
      VAR_DEL.delete('T_DK_RUN');
      exec('gen_tr_dek_run','dok_fks_aut_dok');
      VAR_DEL.delete('run_dek')
   ?}
?}


\gen_tr_dek_run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula wyswietla drzewko do uruchamiania dekretacji podczas przegladania rejestrow
::   WY: 0 - zrezygnowano z dekretacji (np. ESC) lub brak dekretacji, 1 - w p.p.
::  OLD: \gen_tr_dek_run/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
T_DK_RUN:=tab_tmp(4,'TREE','TREE_REF','Tree',
                    'OPIS','STRING[80]','Schematy',
                    'SYSTEM','STRING[10]','Obszar',
                    'RODZ','STRING[2]','Rodzaj');
DEK_NAG.cntx_psh(); DEK_NAG.index('DEK_NAG'); DEK_NAG.prefix();
_dom:=exec('domain_ref','#b_domain','KAS');
{? DEK_NAG.find_key(SSTALE.AR,'KAS','S') &
   exec('lic','#b_domain',_dom) & exec('chk_role','#b__box',OPERATOR.USER,'FKS_DKS_DRKA')
|| T_DK_RUN.TREE:=0;
   T_DK_RUN.SYSTEM:='KAS';
   T_DK_RUN.RODZ:='S';
   T_DK_RUN.OPIS:='Kasa';
   T_DK_RUN.add();
   _kasa:=#T_DK_RUN.ref();
   {? DEK_NAG.find_key(SSTALE.AR,'KAS','S')
   || T_DK_RUN.TREE:=_kasa;
      T_DK_RUN.SYSTEM:='KAS';
      T_DK_RUN.RODZ:='S';
      T_DK_RUN.OPIS:='Raporty kasowe';
      T_DK_RUN.add
   ?}
?};
_dom:=exec('domain_ref','#b_domain','PPL');
_lp:=exec('chk_role','#b__box',OPERATOR.USER,'FKS_DKS_DPLS');
_um:=exec('chk_role','#b__box',OPERATOR.USER,'FKS_DKS_DPZW');
{? DEK_NAG.find_key(SSTALE.AR,'PPL','K') & exec('lic','#b_domain',_dom) & (_lp | _um)
|| T_DK_RUN.TREE:=0;
   T_DK_RUN.SYSTEM:='PPL';
   T_DK_RUN.RODZ:='K';
   T_DK_RUN.OPIS:='Płace';
   T_DK_RUN.add();
   _kali:=#T_DK_RUN.ref();
   {? DEK_NAG.find_key(SSTALE.AR,'PPL','KL') & _lp
   || T_DK_RUN.TREE:=_kali;
      T_DK_RUN.SYSTEM:='PPL';
      T_DK_RUN.RODZ:='KL';
      T_DK_RUN.OPIS:='Listy płac';
      T_DK_RUN.add()
   ?};
   {? DEK_NAG.find_key(SSTALE.AR,'PPL','KU') & _um
   || T_DK_RUN.TREE:=_kali;
      T_DK_RUN.SYSTEM:='PPL';
      T_DK_RUN.RODZ:='KU';
      T_DK_RUN.OPIS:='Umowy zlecenia';
      T_DK_RUN.add
   ?};
   {? DEK_NAG.find_key(SSTALE.AR,'PPL','Kl') & _lp
   || T_DK_RUN.TREE:=_kali;
      T_DK_RUN.SYSTEM:='PPL';
      T_DK_RUN.RODZ:='Kl';
      T_DK_RUN.OPIS:='Umowy zlecenia z listy';
      T_DK_RUN.add
   ?}
?};
_dom:=exec('domain_ref','#b_domain','FST');
_af:=exec('chk_role','#b__box',OPERATOR.USER,'FKS_DKS_DSAB');
_ap:=exec('chk_role','#b__box',OPERATOR.USER,'FKS_DKS_DSAP');
_ad:=exec('chk_role','#b__box',OPERATOR.USER,'FKS_DKS_DSAZ');
_dw:=exec('chk_role','#b__box',OPERATOR.USER,'FKS_DKS_DSDD');
_ot:=exec('chk_role','#b__box',OPERATOR.USER,'FKS_DKS_DSOT');
{? DEK_NAG.find_key(SSTALE.AR,'FST','E') & exec('lic','#b_domain',_dom) & (_af | _ap | _ad | _dw | _ot)
|| T_DK_RUN.TREE:=0;
   T_DK_RUN.SYSTEM:='FST';
   T_DK_RUN.RODZ:='E';
   T_DK_RUN.OPIS:='Środki Trwałe';
   T_DK_RUN.add();
   _estra:=#T_DK_RUN.ref();
   {? DEK_NAG.find_key(SSTALE.AR,'FST','EF') & _af
   || T_DK_RUN.TREE:=_estra;
      T_DK_RUN.SYSTEM:='FST';
      T_DK_RUN.RODZ:='EF';
      T_DK_RUN.OPIS:='Amortyzacja bilansowa';
      T_DK_RUN.add
   ?};
   {? DEK_NAG.find_key(SSTALE.AR,'FST','EP') & _ap
   || T_DK_RUN.TREE:=_estra;
      T_DK_RUN.SYSTEM:='FST';
      T_DK_RUN.RODZ:='EP';
      T_DK_RUN.OPIS:='Amortyzacja podatkowa';
      T_DK_RUN.add
   ?};
   {? FINFO.TOR_D='T' & DEK_NAG.find_key(SSTALE.AR,'FST','ED') & _ad
   || T_DK_RUN.TREE:=_estra;
      T_DK_RUN.SYSTEM:='FST';
      T_DK_RUN.RODZ:='ED';
      T_DK_RUN.OPIS:='Amortyzacja dodatkowa';
      T_DK_RUN.add
   ?};
   {? DEK_NAG.find_key(SSTALE.AR,'FST','EW') & _dw
   || T_DK_RUN.TREE:=_estra;
      T_DK_RUN.SYSTEM:='FST';
      T_DK_RUN.RODZ:='EW';
      T_DK_RUN.OPIS:='Dokumenty wartościowe';
      T_DK_RUN.add
   ?};
   {? DEK_NAG.find_key(SSTALE.AR,'FST','ET') & _ot
   || T_DK_RUN.TREE:=_estra;
      T_DK_RUN.SYSTEM:='FST';
      T_DK_RUN.RODZ:='ET';
      T_DK_RUN.OPIS:='Dokumenty OT';
      T_DK_RUN.add
   ?}
?};
_dom:=exec('domain_ref','#b_domain','LSP');
_lsp:=exec('chk_role','#b__box',OPERATOR.USER,'FKS_DKS_DLSP');
_par:=exec('chk_role','#b__box',OPERATOR.USER,'FKS_DKS_DLRW');
_kzb:=exec('chk_role','#b__box',OPERATOR.USER,'FKS_DKS_DLTS');
{? DEK_NAG.find_key(SSTALE.AR,'LSP','L') & exec('lic','#b_domain',_dom) & (_lsp | _par | _kzb)
|| T_DK_RUN.TREE:=0;
   T_DK_RUN.SYSTEM:='LSP';
   T_DK_RUN.RODZ:='L';
   T_DK_RUN.OPIS:='Sprzedaż';
   T_DK_RUN.add();
   _emag:=#T_DK_RUN.ref();
   {? DEK_NAG.find_key(SSTALE.AR,'LSP','LS') & _lsp
   || T_DK_RUN.TREE:=_emag;
      T_DK_RUN.SYSTEM:='LSP';
      T_DK_RUN.RODZ:='LS';
      T_DK_RUN.OPIS:='Dokumenty sprzedaży';
      T_DK_RUN.add
   ?};
   {? DEK_NAG.find_key(SSTALE.AR,'LSP','LP') & _par
   || T_DK_RUN.TREE:=_emag;
      T_DK_RUN.SYSTEM:='LSP';
      T_DK_RUN.RODZ:='LP';
      T_DK_RUN.OPIS:='Paragony zbiorczo';
      T_DK_RUN.add
   ?};
   {? DEK_NAG.find_key(SSTALE.AR,'LSP','LK') & _kzb
   || T_DK_RUN.TREE:=_emag;
      T_DK_RUN.SYSTEM:='LSP';
      T_DK_RUN.RODZ:='LK';
      T_DK_RUN.OPIS:='Korekty zbiorcze sprzedaży';
      T_DK_RUN.add
   ?}
?};
_dom:=exec('domain_ref','#b_domain','LMG');
_mag:=exec('chk_role','#b__box',OPERATOR.USER,'FKS_DKS_DLMG');
{? DEK_NAG.find_key(SSTALE.AR,'LMG','L') & exec('lic','#b_domain',_dom) & _mag
|| T_DK_RUN.TREE:=0;
   T_DK_RUN.SYSTEM:='LMG';
   T_DK_RUN.RODZ:='L';
   T_DK_RUN.OPIS:='Magazyny';
   T_DK_RUN.add();
   _mag:=#T_DK_RUN.ref();
   {? DEK_NAG.find_key(SSTALE.AR,'LMG','LM')
   || T_DK_RUN.TREE:=_mag;
      T_DK_RUN.SYSTEM:='LMG';
      T_DK_RUN.RODZ:='LM';
      T_DK_RUN.OPIS:='Dokumenty magazynowe';
      T_DK_RUN.add
   ?}
?};
_zak:=exec('chk_role','#b__box',OPERATOR.USER,'FKS_DKS_DLZK');
_kzbz:=exec('chk_role','#b__box',OPERATOR.USER,'FKS_DKS_DLTZ');
_dom:=exec('domain_ref','#b_domain','LZK');
{? DEK_NAG.find_key(SSTALE.AR,'LZK','L') & exec('lic','#b_domain',_dom) & (_zak | _kzbz)
|| T_DK_RUN.TREE:=0;
   T_DK_RUN.SYSTEM:='LZK';
   T_DK_RUN.RODZ:='L';
   T_DK_RUN.OPIS:='Zakupy';
   T_DK_RUN.add();
   _zak:=#T_DK_RUN.ref();
   {? DEK_NAG.find_key(SSTALE.AR,'LZK','LZ') & _zak
   || T_DK_RUN.TREE:=_zak;
      T_DK_RUN.SYSTEM:='LZK';
      T_DK_RUN.RODZ:='LZ';
      T_DK_RUN.OPIS:='Dokumenty zakupu';
      T_DK_RUN.add
   ?};
   {? DEK_NAG.find_key(SSTALE.AR,'LZK','LX') & _kzbz
   || T_DK_RUN.TREE:=_zak;
      T_DK_RUN.SYSTEM:='LZK';
      T_DK_RUN.RODZ:='LX';
      T_DK_RUN.OPIS:='Korekty zbiorcze zakupu';
      T_DK_RUN.add
   ?}
?};
exec('czytaj','#stalesys',,FINFO);
{? T_DK_RUN.first()
|| _acr_r:=T_DK_RUN.mk_sel('Rodzaje ewidencji'@,'N',0,'tr_dek_run',,,,1);
   T_DK_RUN.win_sopt(_acr_r, 'select_record_checkbox = 0');
   T_DK_RUN.win_sel(_acr_r);
   T_DK_RUN.win_fld(_acr_r,,'OPIS',,,27);
   T_DK_RUN.win_act(_acr_r,,'Formuła','Zwiń/&rozwiń całość'@@,,'Zwija/rozwija wszystkie gałęzie schematów.'@,"",
           "T_DK_RUN.prefix();
            {! |? {? T_DK_RUN.TREE || T_DK_RUN.seek(T_DK_RUN.TREE,) || 0 ?} !};
            {? T_DK_RUN.tr_state || T_DK_RUN.tr_set(0) || T_DK_RUN.tr_set(1) ?}
           ",,,,,'R');
   T_DK_RUN.win_act(_acr_r,,'Formuła','Dekretuj dla firmy'@@,,'Dekretacja dla firmy'@,"",
                    "exec('uruchom','dok_fks_aut_dok',1,WinRej.ODD)",1,,,,'D');
   T_DK_RUN.win_act(_acr_r,,'Formuła','Dekretuj dla &jednostki'@@,,'Dekretacja dla bieżącej jednostki'@,"",
                    "exec('uruchom','dok_fks_aut_dok',2,WinRej.ODD)",1,,,,'J');
   T_DK_RUN.win_act(_acr_r,,'Formuła','De&finicja'@@,,'Podgląd definicji schematów dekretacji.'@,"",
      "SSTALE.AR(); exec('sel_tree_dek','dok_fks_aut_dok')",,,,,'F');
   T_DK_RUN.win_act(_acr_r,,'Rekord',,,,"
      _gray:='';
      {? T_DK_RUN.TREE<>0
      || {? OPERATOR.DEPT
         || _gray:='D'
         ?}
      || _gray:='DJ'
      ?};
      {? ~WinRej.ODD || _gray+='J' ?};
      _default:={? _gray*'J'>0 || 'D' || 'J' ?};
      T_DK_RUN.actions_grayed(T_DK_RUN.win_sel('?'),_gray);
      T_DK_RUN.actions(T_DK_RUN.win_sel('?'),,_default,1)
   ");
   T_DK_RUN.win_btn(_acr_r,'text=%1,btn_label_align=center,panel=right,align=begin'['Dekretuj dla firmy'@],'menu:D');
   T_DK_RUN.win_btn(_acr_r,'text=%1,btn_label_align=center,panel=right,align=begin'['Dekretuj dla &jednostki'@],'menu:J');
   T_DK_RUN.win_fml(_acr_r,,'OPIS',,'ICON_BEFORE',
                   "T_DK_RUN.cntx_psh(); T_DK_RUN.prefix(T_DK_RUN.ref());
                    _zwrot:={? T_DK_RUN.first()
                            || T_DK_RUN.cntx_pop();
                               {? T_DK_RUN.tr_state()=1
                               || 'xwin16.png:75'
                               || 'xwin16.png:74'
                               ?}
                            || T_DK_RUN.cntx_pop(); 'xwin16.png:76'
                            ?}; _zwrot");
: wszystkie galezie na wejscie rozwiniete
   T_DK_RUN.tr_fml(_acr_r,,"{? _a=-1 || 1 || _a ?}");
   T_DK_RUN.win_sel(_acr_r);
   DOK.cntx_psh();
   _wy:=T_DK_RUN.select();
   DOK.cntx_pop();
   VAR_DEL.delete('__firma')
|| FUN.emsg('Brak zdefiniowanych schematów dekretacji dla roku %1, brak licencji dla obszarów'
            '\nlub brak uprawnień do dekretacji dziedzinowych.'@[SSTALE.AR().NAZ])
?};
DEK_NAG.cntx_pop();
_wy


\uruchom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Uruchamia dekretację dziedzinową
::   WE: _a - sposob dekretacji 1 - wszystkie jednoski ksiegowe, 2 - jedna jednostka ksiegowa
::       _b - jednostka księgowa
::----------------------------------------------------------------------------------------------------------------------
__firma:=_a;
REJ.cntx_psh();
{? T_DK_RUN.RODZ='EP'
|| EKSG.SYS:='FST';
   {? ~exec('ksieamo1_new','dok_fks_aut_dok',__firma,_b)
   || FUN.info('Zakończono automatyczną dekretację amortyzacji podatkowej.'@)
   ?}
|? T_DK_RUN.RODZ='EF'
|| EKSG.SYS:='FST';
   {? ~exec('ksieamo2_new','dok_fks_aut_dok',__firma,_b)
   || FUN.info('Zakończono automatyczną dekretację amortyzacji bilansowej.'@)
   ?}
|? T_DK_RUN.RODZ='ED'
|| {? FINFO.TOR_D='T'
   || EKSG.SYS:='FST';
      {? ~exec('ksieamo3_new','dok_fks_aut_dok',__firma,_b)
      || FUN.info('Zakończono automatyczną dekretację amortyzacji dodatkowej.'@)
      ?}
   || FUN.info('Tor dodatkowy amortyzacji nie został włączony w bieżącym systemie.'@)
   ?}
|? T_DK_RUN.RODZ='EW'
|| EKSG.SYS:='FST';
   {? ~exec('ksie_dok_new','dok_fks_aut_dok',__firma,_b)
   || FUN.info('Zakończono automatyczną dekretację dokumentów wartościowych.'@)
   ?}
|? T_DK_RUN.RODZ='ET'
|| EKSG.SYS:='FST';
   {? ~exec('ksie_ot','dok_fks_aut_dok',__firma,_b)
   || FUN.info('Zakończono automatyczną dekretację dokumentów OT.'@)
   ?}
|? ~-T_DK_RUN.RODZ='KL'
|| EKSG.SYS:='PPL'; exec('ksieguj_listy','dok_fks_aut_dok',__firma,_b,T_DK_RUN.RODZ)
|? T_DK_RUN.RODZ='KU'
|| EKSG.SYS:='PPL'; exec('ksieguj_zleceni','dok_fks_aut_dok',__firma,_b)
|? T_DK_RUN.RODZ='LS'
|| EKSG.SYS:=T_DK_RUN.SYSTEM;
   {? ~exec('sprzedaz','dok_fks_aut_dok',__firma,_b)
   || FUN.info('Zakończono automatyczną dekretację dokumentów sprzedaży.'@)
   ?}
|? T_DK_RUN.RODZ='LP'
|| EKSG.SYS:=T_DK_RUN.SYSTEM;
   exec('faks_par_zb','dok_fks_aut_dok',__firma,_b);
   FUN.info('Zakończono automatyczną dekretację paragonów.'@)
|? T_DK_RUN.RODZ='LK'
|| EKSG.SYS:=T_DK_RUN.SYSTEM;
   {? ~exec('sprz_zbiorcz','dok_fks_aut_dok',__firma,_b,'LK')
   || FUN.info('Zakończono automatyczną dekretację korekt zbiorczych sprzedaży.'@)
   ?}
|? T_DK_RUN.RODZ='LX'
|| EKSG.SYS:=T_DK_RUN.SYSTEM;
   {? ~exec('zak_zbiorcz','dok_fks_aut_dok',__firma,_b,'LX')
   || FUN.info('Zakończono automatyczną dekretację korekt zbiorczych zakupów.'@)
   ?}
|? T_DK_RUN.RODZ='LZ'
|| EKSG.SYS:=T_DK_RUN.SYSTEM;
   {? ~exec('zakupy','dok_fks_aut_dok',__firma,_b)
   || FUN.info('Zakończono automatyczną dekretację dokumentów zakupu.'@)
   ?}
|? T_DK_RUN.RODZ='LM'
|| EKSG.SYS:=T_DK_RUN.SYSTEM;
   {? ~exec('magazyny','dok_fks_aut_dok',__firma,_b)
   || FUN.info('Zakończono automatyczną dekretację dokumentów magazynowych.'@)
   ?}
|? T_DK_RUN.RODZ='S'
|| EKSG.SYS:='KAS';
   _r:=exec('ksierap','dok_fks_aut_dok',__firma,_b);
   {? _r=0 || FUN.info('Zakończono automatyczną dekretację raportów kasowych.'@)
   |? _r=1 || sel_exit()
   ?}
|| FUN.emsg('Brak formuły dekretującej wybrany rodzaj dekretacji.'@)
?};
REJ.cntx_pop()


\sel_tree_dek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula wyswietla okienko z schematami dekretacji
::  OLD: \sel_tree_dek/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
SSTALE.AR:=ROK_F.ref();
_typ_wyn:=FL.TYP_WYN;
DEKRET.win_edit('DEKRET');
DEK_POZ.win_patt('RED1');
FORMULA.cntx_psh(); FORMULA.win_edit('FORMULY'); FORMULA.win_dict('FORMULY'); FORMULA.actions('WER','T:T');
exec('win_typysp','dok_fks_aut_dok');
exec('win_ru','dok_fks_aut_dok');
{? var_pres('TREE_DEK')>100
|| obj_del(TREE_DEK);
   exec('gen_tree_dek','dok_fks_aut_dok')
|| exec('gen_tree_dek','dok_fks_aut_dok')
?};
FORMULA.cntx_pop();
FL.TYP_WYN:=_typ_wyn;
SSTALE.AR:=SSTALE.AO().ROK


\win_typysp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula tworzy okienko wertowania z akcja wyboru
::  OLD: \win_typysp/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
_win_acr:=TYPYSP.mk_sel('Typy dokumentów'@,,0,,,,,,'U');
TYPYSP.win_fld(_win_acr,,'T');
TYPYSP.win_fld(_win_acr,,'NAZ');
TYPYSP.win_act(_win_acr,,'Formuła','Wybierz'@@,,,"1","sel_exit()",1,,,,'W');
TYPYSP.win_sel(_win_acr)


\win_ru
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula tworzy okienko wertowania z akcja wyboru dla tabeli RU
::  OLD: \win_ru/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
_win_acr:=RU.mk_sel('Rodzaj umowy'@,,0);
RU.win_fld(_win_acr,,'K');
RU.win_fld(_win_acr,,'O');
RU.win_fld(_win_acr,,'PKU');
RU.win_fld(_win_acr,,'PPD');
RU.win_act(_win_acr,,'Formuła','Wybierz'@@,,,"1","sel_exit()",1,,,,'W');
RU.win_sel(_win_acr)


\gen_tree_dek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula wyswietla drzewko do definiowania dekretacji dla wybranego roku
::   WE: _a - alias do okienka grupowego
::  OLD: \gen_tree_dek/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=KS.grp_make('Schematy dziedzinowe dla roku %1'@[ROK_F.NAZ],"",'#tabrok_wg') ?};
exec('tree_dek_ini','dok_fks_aut_dok');
TREE_DEK.first();
__acr:=TREE_DEK.mk_sel('Obszary i rodzaje'@,'N',0,'tree_dek',,,,1);
TREE_DEK.win_sel(__acr);
TREE_DEK.win_fld(__acr,,'OPIS',,,27);
TREE_DEK.win_act(__acr,,'Formuła','Zwiń/&rozwiń całość'@@,,'Zwija/rozwija wszystkie gałęzie schematów.'@,"",
        "TREE_DEK.prefix();
         {! |? {? TREE_DEK.TREE || TREE_DEK.seek(TREE_DEK.TREE,) || 0 ?} !};
         {? TREE_DEK.tr_state || TREE_DEK.tr_set(0,__acr) || TREE_DEK.tr_set(1,__acr) ?}
        ",,,,,'R');
TREE_DEK.win_fml(__acr,,'OPIS',,'ICON_BEFORE',
                "TREE_DEK.cntx_psh(); TREE_DEK.prefix(TREE_DEK.ref());
                 _zwrot:={? TREE_DEK.first()
                         || TREE_DEK.cntx_pop();
                            {? TREE_DEK.tr_state()=1
                            || 'xwin16.png:75'
                            || 'xwin16.png:74'
                            ?}
                         || TREE_DEK.cntx_pop(); 'xwin16.png:76'
                         ?}; _zwrot");
: wszystkie galezie na wejscie rozwiniete
TREE_DEK.tr_fml(__acr,,"{? _a=-1 || 1 || _a ?}");

TREE_DEK.win_sopt(__acr,'select_record_checkbox=0');
KS.grp_sel(_a,TREE_DEK,__acr,'Schematy dziedzinowe'@,"
 DEK_NAG.index('DEK_NAG');
 {? (+TREE_DEK.RODZ)=2
 || DEK_NAG.prefix(SSTALE.AR,TREE_DEK.SYSTEM,TREE_DEK.RODZ)
 || DEK_NAG.prefix(SSTALE.AR,TREE_DEK.SYSTEM)
 ?};
 grp_disp(TREE_DEK,__acr);
 {? TREE_DEK.SYSTEM='KAS'
 || {? (+TREE_DEK.RODZ)=2
    || {? TREE_DEK.RODZ='SN'
       || DEK_NAG.win_edit('DEK_NAG3')
       || DEK_NAG.win_edit('DEK_NAG6')
       ?}
    ?}
 |? TREE_DEK.SYSTEM='FST'
 || {? (+TREE_DEK.RODZ)=2
    || {? TREE_DEK.RODZ='EF' | TREE_DEK.RODZ='EP' | TREE_DEK.RODZ='ED'
       || DEK_NAG.win_edit('DEK_NAG1')
       |? TREE_DEK.RODZ='EW'
       || DEK_NAG.win_edit('DEK_NAG4')
       || DEK_NAG.win_edit('DEK_NAG3')
       ?}
    ?}
 |? TREE_DEK.SYSTEM='PPL'
 || {? (+TREE_DEK.RODZ)=2
    || DEK_NAG.win_edit('DEK_NAG2')
    ?}
 |? (1+TREE_DEK.SYSTEM)='L'
 || {? (+TREE_DEK.RODZ)=2
    || {? TREE_DEK.RODZ='LM'
       || DEK_NAG.win_edit('DEK_NAG7')
       |? TREE_DEK.RODZ='LZ' | TREE_DEK.RODZ='LX'
       || DEK_NAG.win_edit('DEK_NAG5')
       || DEK_NAG.win_edit('DEK_NAG8')
       ?}
    ?}
 ?};
 {? (+TREE_DEK.RODZ)=2
 || DEK_NAG.actions('DEK_ALL','',,1);
    DEK_POZ.actions('WER_ALL','',,1)
 || DEK_NAG.actions('DEK_ALL','ZSODpU:D',,1);
    DEK_POZ.actions('WER_ALL','dpUWOZ:dZ',,1)
 ?};
 ZMIENNE.DP_OPIS:={? 1+TREE_DEK.RODZ='P' || 'Rubryka'
                  |? 1+TREE_DEK.RODZ='S' || 'Transakcja kasowa'
                  |? 1+TREE_DEK.RODZ='E' || 'Grupa rodzajowa'
                  || ''
                  ?};
 grp_disp(DEK_NAG,'DEK_ALL',1);
 EKSG.RODZ:=TREE_DEK.RODZ
 ",,,,"","",0,,'maximized');

KS.tab_splt(_a,,'vertical','prawo',',25%');
KS.grp_sel(_a,DEK_NAG,'DEK_ALL',,
           "exec('dek_poz_odsw','dok_fks_aut_dok');
            grp_disp(DEK_POZ,'WER2',1)"
            ,,,15,
           "grp_disp(DEK_POZ,'WER2',1,1)","",0,,'maximized_with_title');
KS.tab_splt(_a,'prawo','horizontal','prawo1');
DEK_POZ.fld_opt('WER2','col_name=""',ZMIENNE,'DP_IDENT');
DEK_POZ.fld_opt('WER2','col_name="%1"'[ZMIENNE.DP_OPIS],ZMIENNE,'DP_IDENT');
KS.grp_sel(_a,DEK_POZ,'WER2',,"",,,,"","",,,'maximized_with_title');
DISP.fld_fml('RVATD','BEFORE_DISPLAY',"DEK_NAG.VPOZ_STD='R'");
DEK_POZ.fld_fml('RVAT','BEFORE_DISPLAY',"DEK_NAG.VPOZ_STD='R'");
DEK_POZ.fld_fml('F_RVAT','BEFORE_DISPLAY',"DEK_NAG.VPOZ_STD='R'");
DISP.fld_fml('GRD','BEFORE_DISPLAY',"DEK_NAG.VPOZ_STD='R'");
DEK_POZ.fld_fml('GR','BEFORE_DISPLAY',"DEK_NAG.VPOZ_STD='R'");
DEK_POZ.fld_fml('F_GR','BEFORE_DISPLAY',"DEK_NAG.VPOZ_STD='R'");
DEK_POZ.fld_fml('F_VAT','BEFORE_DISPLAY',"DEK_NAG.VPOZ_STD='R'");
{? _=0
|| KS.win_sel(_a); KS.select()
?}


\tree_dek_ini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Inicjowanie tabeli TRE_DEK
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TREE_DEK')>0 || return(0) ?};
TREE_DEK:=tab_tmp(4,'TREE','TREE_REF','Tree',
                    'OPIS','STRING[80]','Schematy',
                    'SYSTEM','STRING[10]','Obszar',
                    'RODZ','STRING[2]','Rodzaj');

_dom:=exec('domain_ref','#b_domain','KAS');
{? exec('lic','#b_domain',_dom)
|| TREE_DEK.TREE:=0;
   TREE_DEK.SYSTEM:='KAS';
   TREE_DEK.RODZ:='S';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();
   _kasa:=#TREE_DEK.ref();

   TREE_DEK.TREE:=_kasa;
   TREE_DEK.SYSTEM:='KAS';
   TREE_DEK.RODZ:='SN';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();

   TREE_DEK.TREE:=_kasa;
   TREE_DEK.SYSTEM:='KAS';
   TREE_DEK.RODZ:='SV';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add()
?};

_dom:=exec('domain_ref','#b_domain','PPL');
{? exec('lic','#b_domain',_dom)
|| TREE_DEK.TREE:=0;
   TREE_DEK.SYSTEM:='PPL';
   TREE_DEK.RODZ:='K';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();
   _kali:=#TREE_DEK.ref();

   TREE_DEK.TREE:=_kali;
   TREE_DEK.SYSTEM:='PPL';
   TREE_DEK.RODZ:='KL';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();

   TREE_DEK.TREE:=_kali;
   TREE_DEK.SYSTEM:='PPL';
   TREE_DEK.RODZ:='KU';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();

   TREE_DEK.TREE:=_kali;
   TREE_DEK.SYSTEM:='PPL';
   TREE_DEK.RODZ:='Kl';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add()
?};

_dom:=exec('domain_ref','#b_domain','FST');
{? exec('lic','#b_domain',_dom)
|| TREE_DEK.TREE:=0;
   TREE_DEK.SYSTEM:='FST';
   TREE_DEK.RODZ:='E';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();
   _estra:=#TREE_DEK.ref();

   TREE_DEK.TREE:=_estra;
   TREE_DEK.SYSTEM:='FST';
   TREE_DEK.RODZ:='EF';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();

   TREE_DEK.TREE:=_estra;
   TREE_DEK.SYSTEM:='FST';
   TREE_DEK.RODZ:='EP';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();

   TREE_DEK.TREE:=_estra;
   TREE_DEK.SYSTEM:='FST';
   TREE_DEK.RODZ:='ED';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();

   TREE_DEK.TREE:=_estra;
   TREE_DEK.SYSTEM:='FST';
   TREE_DEK.RODZ:='EW';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();

   TREE_DEK.TREE:=_estra;
   TREE_DEK.SYSTEM:='FST';
   TREE_DEK.RODZ:='ET';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add()
?};

_dom:=exec('domain_ref','#b_domain','LSP');
{? exec('lic','#b_domain',_dom)
|| TREE_DEK.TREE:=0;
   TREE_DEK.SYSTEM:='LSP';
   TREE_DEK.RODZ:='L';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();
   _emag:=#TREE_DEK.ref();

   TREE_DEK.TREE:=_emag;
   TREE_DEK.SYSTEM:='LSP';
   TREE_DEK.RODZ:='LS';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();

   TREE_DEK.TREE:=_emag;
   TREE_DEK.SYSTEM:='LSP';
   TREE_DEK.RODZ:='LP';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();

   TREE_DEK.TREE:=_emag;
   TREE_DEK.SYSTEM:='LSP';
   TREE_DEK.RODZ:='LK';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add()
?};

_dom:=exec('domain_ref','#b_domain','LMG');
{? exec('lic','#b_domain',_dom)
|| TREE_DEK.TREE:=0;
   TREE_DEK.SYSTEM:='LMG';
   TREE_DEK.RODZ:='L';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();
   _mag:=#TREE_DEK.ref();

   TREE_DEK.TREE:=_mag;
   TREE_DEK.SYSTEM:='LMG';
   TREE_DEK.RODZ:='LM';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add()
?};
_dom:=exec('domain_ref','#b_domain','LZK');
{? exec('lic','#b_domain',_dom)
|| TREE_DEK.TREE:=0;
   TREE_DEK.SYSTEM:='LZK';
   TREE_DEK.RODZ:='LZ';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();
   _zak:=#TREE_DEK.ref();

   TREE_DEK.TREE:=_zak;
   TREE_DEK.SYSTEM:='LZK';
   TREE_DEK.RODZ:='LZ';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add();

   TREE_DEK.TREE:=_zak;
   TREE_DEK.SYSTEM:='LZK';
   TREE_DEK.RODZ:='LX';
   TREE_DEK.OPIS:=exec('opis','dok_fks_aut_dok',TREE_DEK.RODZ,TREE_DEK.SYSTEM);
   TREE_DEK.add()
?};

TREE_DEK.first()


\dek_poz_odsw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula wykonywana przed obsluga okienka w oknie grupowym, formula odswieza wiok pozycji schematu dziedzinowego
:: OLD: \dek_poz_odsw/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
DEK_POZ.index('LP');
{? DEK_NAG.get || DEK_POZ.prefix(DEK_NAG.ref) || DEK_POZ.prefix(0) ?};
1


\ksieguj_listy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2011]
:: OPIS: Formula ksiegujaca liste plac
::   WE: _a - znacznik czy ksiegowanie dla calej firmy (1 - cala firma, 2 - jedna jedn., 3 -uruachamiany kalego)
::       _b - Oddzial (REJ.ODD)
::       _c - rodzaj dekretacji
::  OLD: \ksieguj_listy/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
r_dekr:=_c;
_f_zatr:={? _c='KL' || 'P' || 'Z' ?};
exec('start_listy','dok_fks_aut_dok');
exec('FUNKCJE','object');
{? exec('initWARL','dok_fks_aut_dok',ROK_F.ref,'PPL',_c)
|| exec('init','dok_fks_aut_dok','Informacje o błędach dekretacji listy płac');
   O.cntx_psh(); LS.cntx_psh(); LS.clear();
   optym:=(PAR_SKID.get(194)='T');
   POMOC.OKR:=OKRO_F.ref();
   {? _a=2
   || _ndx:=O.ndx_tmp('oddzial',1,'FIRMA',,,'ODDZIAL',,0,'Z',,0,'F_ZATR','KOD',0,'R',,0,'M',,0,'T','T',0);
      O.index(_ndx); O.prefix(exec('ref_firma','ustawienia'),_b,'T',_f_zatr)
   || _ndx:=O.ndx_tmp('all',1,'FIRMA',,,'Z',,0,'F_ZATR','KOD',0,'R',,0,'M',,0,'T','T',0);
      O.index(_ndx); O.prefix(exec('ref_firma','ustawienia'),'T',_f_zatr)
   ?};
   _wer:=O.mk_sel('Listy płac'@,'P',,'ksiegowanie',,,,,'U');
   O.win_fld(_wer,,'ODDZIAL','OD',,14,,,'Jednostka księgowa'@);
   O.win_fld(_wer,,'LT',,,8,,,'Lista'@);
   O.win_fld(_wer,,'R',,,,,,'Rok kosztowy'@);
   O.win_fld(_wer,,'M',,,,,,'Miesiąc kosztowy'@);
   O.win_fld(_wer,,'RP',,,,,,'Rok podatkowy'@);
   O.win_fld(_wer,,'MP',,,,,,'Miesiąc podatkowy'@);
   O.win_fld(_wer,,'RU',,,,,,'Rok ZUS'@);
   O.win_fld(_wer,,'MU',,,,,,'Miesiąc ZUS'@);
   O.win_fld(_wer,,'O','O',,25,,,'Opis'@);
   O.win_act(_wer,0,'Rekord',,,,"
      O.LT:=~-O.LT;
      _wer:=O.win_sel('?');
      {? O.DOK<>''
      || O.actions_grayed(_wer,'K');
         Color.fnd_kol('O#01#01')
      |? O.F_ZATR().KOD='Z' & exec('one_rh_dok','dok_fks_aut_dok')
      || Color.fnd_kol('O#01#02')
      || O.actions_grayed(_wer);
         ''
      ?}
   ",,,,);
   O.win_act(_wer,0,'Formuła','Dekretuj'@@,,'Dekretuj listę płac',
                  "_zeruj:=0;
                   {? __licz || _zeruj:=exec('wybrana_o','dok_fks_aut_dok') ?};
                   {? __optym & _zeruj || __licz:=0 ?}",,1,1,
                  "__licz:=1; sel_nchk(); exec('ksieg_gr_be','dok_fks_aut_dok',O)",
                  "exec('ksieg_gr_po','dok_fks_aut_dok')",'D');
   O.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['&Dekretuj'@],'menu:D');
   O.win_act(_wer,0,'Formuła','Legenda'@@,,,"exec('leg_zaksiegowan','dok_fks_aut_dok')",,,,,,'L',,'target=window');
   O.win_sel(_wer); O.win_edit;
   {? ~O.find_key(OKRO_F.POCZ~1,OKRO_F.POCZ~2) || O.last ?};
   O.select(,1,5);
   &optym;
   LS.cntx_pop(); O.cntx_pop();
   FUNKCJE.OTWOLIST()
?};
VAR_DEL.delete('r_dekr');
exec('done','dok_fks_aut_dok');
exec('stop_listy','dok_fks_aut_dok')


\start_listy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Deklaracje startowe  - Listy plac
::  OLD: \start_listy/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
P.use('pracowni');
P.clear();
exec('stop_listy','dok_fks_aut_dok');
__Ref:=null;
__grp:=EKSG.TSP:=EKSG.ESYM:=EKSG.EMSP:=EKSG.ETYP:='';
EKSG.REF_ODD:=null();
__licz:=1;
__optym:={? PAR_SKID.get(310)='N' || 0 || 1 ?};
1


\stop_listy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Sprzatanie - Listy plac
::  OLD: \stop_listy/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
exec('end_kom','#message');
VAR_DEL.delete('CBUFF','ZB_DRUK','ZB_RUB','LS_DRUK','SARRAY','FUNKCJE');
VAR_DEL.delete('Qoksg','Qwksg','Qpksg','__Ref','prac_w','prac_m','rub_w','rub_m','ile_list','listy');
VAR_DEL.delete('__grp','__optym','__dok','__licz');
~~


\sprzedaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: ksiegowanie wszelakich dokumentow sprzedazy tabela TYPYSP
::   WE: _a - znacznik czy jeden oddzial czy cala firma
::            1 - cala firma, 2 - jeden oddzial (wskazany parm. _b)
::       _b - ref oddzialu ODD.ref
::   WY: 1 - wyswietlona lista z brakami (bledami), 0 - w p.p.
::  OLD: \sprzedaz/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_zakr:=0;
DEK_NAG.cntx_psh();
DEK_NAG.index('DEK_NAG');
DEK_NAG.prefix();
ParZbiorczo:=DEK_NAG.find_key(SSTALE.AR,'LSP','LP');
DEK_NAG.cntx_pop();
FAKS.cntx_psh();
exec('jest','#stalesys',INFO);
{? exec('initWARL','dok_fks_aut_dok',SSTALE.AR,'LSP','LS')
|| exec('czytaj','#stalesys',,INFO);
   exec('init','dok_fks_aut_dok','Informacje o błędach dekretacji dokumentów sprzedaży');
   POMOC.OKR:=SSTALE.AO;
   _odd:=exec('find_oddz','dok_fks_aut_dok',_a,_b,'LS');
   {? type_of(_odd)>7
   || {? exec('zakres','dok_fks_aut_dok','F',_odd,'LS')
      || _zakr:=1;
         _rok2:=(form(SSTALE.AO().KON,,4)+2);
         _rok1:=form((#_rok2)-1,-2,0,'99');
         _rok3:=form((#_rok2)+1,-2,0,'99');
         _ile:=obj_len(_odd);
         _msk:=FAKS.names();
         {? _msk.first()
         || {? EKSG.WS='O'
            || Qzkr.prefix('O');
               {? Qzkr.first()
               || {!|?
                     _oddz:=(1+(_msk.NAME+3)); _rok:=_msk.NAME+2;
                     {? Qzkr.find_key(_oddz,_oddz) & (_rok1=_rok | _rok2=_rok | _rok3=_rok)
                     || _msk.next()
                     || _msk.del()
                     ?}
                  !}
               || {!|? _msk.del() !}
               ?}
            || {! |?
                  _name:=_msk.NAME+3;
                  _nxt:=0;
                  {! _i:=1.._ile
                  |! {? ~_nxt & (_name=(_odd[_i][1]+_rok1) | _name=(_odd[_i][1]+_rok2) | _name=(_odd[_i][1]+_rok3))
                     || _nxt:=1
                     ?}
                  !};
                  {? _nxt
                  || _msk.next()
                  || _msk.del()
                  ?}
               !}
            ?}
         ?};
         _st_oddz:=ST.ODDZ; _st_ar:=ST.AR;
         _r_dat:=exec('spr_daty','dok_fks_aut_dok',SSTALE.AR,'LSP','LS');
         {? _msk.first()
         || {! |?
               exec('open','open_tab',1+(_msk.NAME+3),_msk.NAME+2);
               ST.ODDZ:=1+(_msk.NAME+3); ST.AR:=#('20'+(_msk.NAME+2));
               FAKS.clear();
               exec('set_war','dok_fks_aut_dok','F',_r_dat);
               {? FAKS.f_first()
               || _size:=FAKS.f_size(); _licz:=0;  _time:=time();
                  exec('set_fld','dok_fks_aut_dok','O','LS');
                  _p492:=PAR_SKID.get(492);
                  {!
                  |? {? FAKS.SYMF='' | _p492='B' | _p492='F' | (_p492='W' & exec('war1','dok_fks_aut_dok',FAKS.T().PAR))
                     || _licz+=1;
                        exec('faks_dekret_all','dok_fks_aut_dok');
                        FAKS.r_unlock()
                     ?};
                     FAKS.f_next()
                  !}
               ?};
               FAKS.f_clear;
               _msk.next()
            !}
         ?};
         ST.ODDZ:=_st_oddz; ST.AR:=_st_ar;
         obj_del(_msk)
      ?}
   || FUN.emsg('Brak uprawnień do oddziałów logistycznych.'@)
   ?}
?};
_wy:=(var_pres('__kom')>100 & __kom.get_size()>0);
exec('done','dok_fks_aut_dok');
echo;
prgs_clr();
FAKS.cntx_pop();
{? ~_wy & ~_zakr || _wy:=1 ?};
_wy


\faks_dekret_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dekretacja dokumentu sprzedaży
::----------------------------------------------------------------------------------------------------------------------
FAKS.cntx_psh();
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DLSP';
_params.AKCJA:='Dekretuj';
_params.UIDREF:=FAKS.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FAKS',FAKS.ref());
_params.PROC_START:='N';
exec('mp_run','#b__box',_params);
FAKS.cntx_pop()


\initWARL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: zmienne dla formul/warunki logiczne
::   WE: _a - rok
::       _b - system
::       _c - rodzaj dekretacji
::       [_d] - czy komunikowac o braku zmiennych 0/1 [1] - TAK
::   WY: 1 - prawidlowo zainicjowano zmienne, 0 - w p.p.
::  OLD: \initWARL/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=4  || {? type_of(_d)<>1 || _d:=1 ?}  || _d:=1  ?};
EKSG.TSP:='';
VAR_DEL.delete('Qwksg','Qoksg');
_wyn:=0;

:: tabela wykorzystywanych WARLOG-ow
Qoksg:=exec('analifrm','dok_fks_aut_dok',_a,_b,_c);

WARLOG.index('KKOD');
WARLOG.prefix(1+_c);
{? WARLOG.first()
||
   {? Qoksg.size()
   || _tab:='tab_tmp(1';
      {!
      |? Qoksg.clear();
         {? Qoksg.find_key(WARLOG.KOD,WARLOG.KOD)
         || _tab+=',\''+form(WARLOG.KOD);
            _tab+={? WARLOG.TD='R' || '\',\'REAL\'' |? WARLOG.TD='D' || '\',\'DATE\'' || '\',\'STRING[100]\'' ?}+',\'\''
         ?};
         WARLOG.next()
      !};
      _tab+=')';

      Qwksg:=($_tab)();
      _wyn:=1
   ||
::    brak wykorzystywanych zmiennych powolujemy tabelke tylko PROforma
      Qwksg:=tab_tmp(1,'XXX','STRING[100]','');
      _wyn:=1
   ?}
||
   {? _d=1 || FUN.info('Brak zmiennych dla formuł księgowych.\nNależy uzupełnić lub zaimportować dane.'@) ?}
?};
_wyn


\analifrm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: analizuje wykorzystanie zmiennych WARLOG w dekretach
::   WE: _a - rok
::       _b - system
::       _c - rodzaj dekretu
::   WY: tabela kodow danego ksiegowania
::  OLD: \analifrm/ksg.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:=tab_tmp(2,'FR1','STRING[20]',''
       ,'FR2','STRING[20]',''
       ,'SO','STRING[1]','');

_sys:=3+_b;
DEK_NAG.cntx_psh();
DEK_NAG.index('DEK_NAG');
DEK_NAG.prefix(_a,_sys,_c);
{? DEK_NAG.first()
|| {! |?
      {? form(DEK_NAG.WARLOG)<>''
      || _buf:=exec('add_warl','dok_fks_aut_dok',DEK_NAG.WARLOG,_wyn,_c);
         obj_del(_wyn);
         _wyn:=_buf;
         obj_del(_buf)
      ?};
      {? DEK_NAG.F_RVAT<>null
      || _buf:=exec('add_warl','dok_fks_aut_dok',DEK_NAG.F_RVAT().FORMULA,_wyn,_c);
         obj_del(_wyn);
         _wyn:=_buf;
         obj_del(_buf)
      ?};
      {? DEK_NAG.F_GR_VAT<>null
      || _buf:=exec('add_warl','dok_fks_aut_dok',DEK_NAG.F_GR_VAT().FORMULA,_wyn,_c);
         obj_del(_wyn);
         _wyn:=_buf;
         obj_del(_buf)
      ?};
      DEK_NAG.next()
   !}
?};
DEK_NAG.cntx_pop();
DEK_POZ.cntx_psh();
DEK_POZ.index('RODZ');
DEK_POZ.prefix(_a,_sys,_c);
{? DEK_POZ.first()
|| {!
   |? {? form(DEK_POZ.WARLOG)<>''
      || _buf:=exec('add_warl','dok_fks_aut_dok',DEK_POZ.WARLOG,_wyn,_c);
         obj_del(_wyn);
         _wyn:=_buf;
         obj_del(_buf)
      ?};
      {? DEK_POZ.DEKRET_W<>null
      || _buf:=exec('add_warl','dok_fks_aut_dok',DEK_POZ.DEKRET_W,_wyn,_c);
         obj_del(_wyn);
         _wyn:=_buf;
         obj_del(_buf)
      ?};
      {? DEK_POZ.DEKRET_M<>null
      || _buf:=exec('add_warl','dok_fks_aut_dok',DEK_POZ.DEKRET_M,_wyn,_c);
         obj_del(_wyn);
         _wyn:=_buf;
         obj_del(_buf)
      ?};
      {? DEK_POZ.F_RVAT<>null
      || _buf:=exec('add_warl','dok_fks_aut_dok',DEK_POZ.F_RVAT().FORMULA,_wyn,_c);
         obj_del(_wyn);
         _wyn:=_buf;
         obj_del(_buf)
      ?};
      {? DEK_POZ.F_GR<>null
      || _buf:=exec('add_warl','dok_fks_aut_dok',DEK_POZ.F_GR().FORMULA,_wyn,_c);
         obj_del(_wyn);
         _wyn:=_buf;
         obj_del(_buf)
      ?};
      DEK_POZ.next()
   !}
?};
DEK_POZ.cntx_pop();
_wyn


\add_warl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: dodaje rekordy WARLOG na podstawie formul danego dekretu
::   WE: _a - ref tabeli DEKRET lub STRING
::       _b - tabela
::       _c - rodzaj dekretu
::   WY: tabela kodow danego ksiegowania
::  OLD: \add_warl/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=_b;
{? type_of(_a)=2
|| WARLOG.cntx_psh();
   WARLOG.index('KKOD');
   WARLOG.prefix(1+_c);
   {? WARLOG.first()
   || {!
      |? _wyn.clear;
         {? ~_wyn.find_key(WARLOG.KOD,WARLOG.KOD) & exec('formwarl','dok_fks_aut_dok',_a,WARLOG.KOD)
         || _wyn.blank(); _wyn.FR1:=_wyn.FR2:=WARLOG.KOD; _wyn.SO:=WARLOG.SO; _wyn.add(1)
         ?};
         WARLOG.next()
      !}
   ?};
   WARLOG.cntx_pop()
|| DEKRET.cntx_psh();
   DEKRET.clear();
   {? DEKRET.seek(_a)
   || WARLOG.cntx_psh();
      WARLOG.index('KKOD');
      WARLOG.prefix(1+_c);
      {? WARLOG.first()
      || {!
         |? _wyn.clear;
            {? ~_wyn.find_key(WARLOG.KOD,WARLOG.KOD)
            || {? DEKRET.KW_PLN<>null & exec('formwarl','dok_fks_aut_dok',DEKRET.KW_PLN().FORMULA,WARLOG.KOD)
               || _wyn.blank(); _wyn.FR1:=_wyn.FR2:=WARLOG.KOD;  _wyn.SO:=WARLOG.SO; _wyn.add(1)
               |? DEKRET.KW_WAL<>null & exec('formwarl','dok_fks_aut_dok',DEKRET.KW_WAL().FORMULA,WARLOG.KOD)
               || _wyn.blank(); _wyn.FR1:=_wyn.FR2:=WARLOG.KOD; _wyn.SO:=WARLOG.SO; _wyn.add(1)
               |? DEKRET.WALUTA<>null & exec('formwarl','dok_fks_aut_dok',DEKRET.WALUTA().FORMULA,WARLOG.KOD)
               || _wyn.blank(); _wyn.FR1:=_wyn.FR2:=WARLOG.KOD; _wyn.SO:=WARLOG.SO; _wyn.add(1)
               |? DEKRET.KURS_WAL<>null & exec('formwarl','dok_fks_aut_dok',DEKRET.KURS_WAL().FORMULA,WARLOG.KOD)
               || _wyn.blank(); _wyn.FR1:=_wyn.FR2:=WARLOG.KOD; _wyn.SO:=WARLOG.SO; _wyn.add(1)
               |? DEKRET.KONTO<>null & exec('formwarl','dok_fks_aut_dok',DEKRET.KONTO().FORMULA,WARLOG.KOD)
               || _wyn.blank(); _wyn.FR1:=_wyn.FR2:=WARLOG.KOD; _wyn.SO:=WARLOG.SO; _wyn.add(1)
               |? DEKRET.OPERACJA<>null & exec('formwarl','dok_fks_aut_dok',DEKRET.OPERACJA().FORMULA,WARLOG.KOD)
               || _wyn.blank(); _wyn.FR1:=_wyn.FR2:=WARLOG.KOD; _wyn.SO:=WARLOG.SO; _wyn.add(1)
               |? DEKRET.DATA<>null & exec('formwarl','dok_fks_aut_dok',DEKRET.DATA().FORMULA,WARLOG.KOD)
               || _wyn.blank(); _wyn.FR1:=_wyn.FR2:=WARLOG.KOD; _wyn.SO:=WARLOG.SO; _wyn.add(1)
               |? DEKRET.N_Z<>null & exec('formwarl','dok_fks_aut_dok',DEKRET.N_Z().FORMULA,WARLOG.KOD)
               || _wyn.blank(); _wyn.FR1:=_wyn.FR2:=WARLOG.KOD; _wyn.SO:=WARLOG.SO; _wyn.add(1)
               |? DEKRET.TRESC<>null & exec('formwarl','dok_fks_aut_dok',DEKRET.TRESC().FORMULA,WARLOG.KOD)
               || _wyn.blank(); _wyn.FR1:=_wyn.FR2:=WARLOG.KOD; _wyn.SO:=WARLOG.SO; _wyn.add(1)
               |? DEKRET.PROLOG<>null & exec('formwarl','dok_fks_aut_dok',DEKRET.PROLOG().FORMULA,WARLOG.KOD)
               || _wyn.blank(); _wyn.FR1:=_wyn.FR2:=WARLOG.KOD; _wyn.SO:=WARLOG.SO; _wyn.add(1)
               |? DEKRET.EPILOG<>null & exec('formwarl','dok_fks_aut_dok',DEKRET.EPILOG().FORMULA,WARLOG.KOD)
               || _wyn.blank(); _wyn.FR1:=_wyn.FR2:=WARLOG.KOD; _wyn.SO:=WARLOG.SO; _wyn.add(1)
               ?}
            ?};
            WARLOG.next()
         !}
      ?};
      WARLOG.cntx_pop()
   ?};
   DEKRET.cntx_pop()
?};
_wyn


\formwarl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy podana wartosc znajduje sie w podanej formule
::   WE: _a - formula
::       _b - wartosc
::   WY: 1-jest 0-nie ma
::  OLD: \formwarl/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_form:=_a;
{!
|? _nr:=_form*_b;
   {? _nr
   || _prev:=(_nr-1)+_form;
      _form:=(_nr-1)-_form;
      _next:=(+_b)-_form;
      _wyn:=((+_b)+_form)=_b
         & (_prev+2)<>'()' & (2+_next)<>'()'
         & {? (_prev+1)='.' || ~(%(1+(_prev+2))>=65 & %(1+(_prev+2))<=90) & (1+(_prev+2))<>')' || 1 ?}
         & {? (1+_next)='.' || ~(%((2+_next)+1)>=65 & %((2+_next)+1)<=90) & ((2+_next)+1)<>'(' || 1 ?}
         & ~( (65<=%(1+_next) & %(1+_next)<=90) | (48<=%(1+_next) & %(1+_next)<=57) | %(1+_next)=95)
         & ~( (65<=%(_prev+1) & %(_prev+1)<=90) | (48<=%(_prev+1) & %(_prev+1)<=57) | %(_prev+1)=95)
         & ~( %(1+_next)=39 & %(_prev+1)=39);
      {? _wyn || 0 || _form:=1-_form; 1  ?}
   || 0
   ?}
!};
_wyn


\done
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: usuwanie zmiennych po ksiegowaniu
::       [_b] - 0-nie kasowac tabeli komunikatow, 1-kasowac tabele komunikatow
::  OLD: \done/ksg.fml
::----------------------------------------------------------------------------------------------------------------------

{? var_pres('_b')<>type_of(1) || _b:=1 ?};

{? var_pres('__kom')>100 & _b
|| _save:="{? .save('dekret.log') || FUN.info('Zapisano plik: ['+pth_dir('dekret.log')+'\\\\dekret.log'+']')?};1";
   __kom.select(,,_save,,{? _>0 & type_of(_a)=2 || _a || ''?});
   obj_del(__kom); &__kom
?};
VAR_DEL.delete('Qnksg','Qpksg','Qxksg','Qwksg','Qzkr','Qoksg','Qyksg','__lp','ParZbiorczo');
''


\find_oddz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula sprawdza uprawnienia do oddzialow logistycznych i zwraca odpowiednia liste
::        oddzialow odpowiadajaca liscie oddzialow finansowych zgodnie z parametrami _a i _b
::  WE: _a - znacznik czy jeden oddzial czy cala firma
::      _b - ref oddzialu ODD.ref
::      _c - rodzaj dekretacji
::   WY: tabelka z lista oddzialow do ktorych operator ma uprawnienia, w p.p. 0
::  OLD: \find_oddz/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| OPERATOR.USER();
   {? Perm.hasFull('FJKS')=0
   || USERSDEP.index('USERSDEP'); USERSDEP.prefix(REF.FIRMA,OPERATOR.USER);
      {? USERSDEP.first()
      || _ile_fk:=USERSDEP.size();
         _odd_fk:=obj_new(_ile_fk);
         _i:=0;
         {!|? _i+=1; _odd_fk[_i]:=USERSDEP.DEPT; USERSDEP.next() !}
      || FUN.emsg('Brak uprawnień dla jednostek księgowych'@);
         _ile_fk:=0
      ?}
   || ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
      {? ODD.first()
      || _ile_fk:=ODD.size();
         _odd_fk:=obj_new(_ile_fk);
         _i:=0;
         {!|? _i+=1; _odd_fk[_i]:=ODD.ref(); ODD.next() !}
      || FUN.emsg('Brak jednostek księgowych'@);
         _ile_fk:=0
      ?}
   ?}
|? _a=2
|| _ile_fk:=1;
   _odd_fk:=obj_new(_ile_fk);
   _odd_fk[1]:=_b
?};
ODDZ.cntx_psh();
ODDZ.index('ODD');
{? _ile_fk & type_of(_odd_fk)>7
|| _il_oddz:=0;
   {! _i:=1.._ile_fk
   |! ODDZ.prefix(_odd_fk[_i]);
      {? ODDZ.first()
      || {! |? _il_oddz+=1; ODDZ.next() !}
      ?}
   !};
   {? _il_oddz
   || _odd:=obj_new(_il_oddz);
      {! _ii:=1.._il_oddz |! _odd[_ii]:=obj_new(2) !};
      _all:=0;
      {! _i:=1.._ile_fk
      |! ODDZ.prefix(_odd_fk[_i]);
         {? ODDZ.first()
         || {! |?
               _all+=1;
               _odd[_all][1]:=ODDZ.KOD;
               _odd[_all][2]:=ODDZ.NAZ;
               ODDZ.next()
            !}
         ?}
      !}
   || _odd:=0
   ?}
|| _odd:=0
?};
ODDZ.cntx_pop();
_odd


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: dane do ksiegowan
::   WE: _a - napis przekazywany do okienka z bledami (Opis okienka) [opcjonalny]
::       [_b] - 0-nie inicjowac tabeli komunikatow, 1-inicjowac tabele komunikatow
::  OLD: \init/ksg.fml
::----------------------------------------------------------------------------------------------------------------------

{? _<1 || _a:='Informacje o błędach dekretacji dokumentów' ?};
{? var_pres('_b')<>type_of(1) || _b:=1 ?};
VAR_DEL.delete('Qpksg','Qxksg','Qnksg','Qyksg','__lp');

:: naglowki DOK-i
Qnksg:=tab_tmp(1
   ,'NK_','STRING[20]' ,'symbol'
   ,'KOR','STRING[20]' ,'korekta');

:: pozycje POZ-y
Qpksg:=tab_tmp(17
   ,'RDK','INTEGER'    ,'ref dokumentu'
   ,'STR','STRING[1]'  ,'strona'
   ,'TYP','STRING[1]'  ,'typ pozycji'
   ,'KON','STRING[35]' ,'konto'
   ,'KO2','STRING[35]' ,'konto 2'
   ,'SYM','STRING[50]' ,'symbol'
   ,'SY2','STRING[50]' ,'symbol 2'
   ,'STV','STRING[8]'  ,'stawka VAT'
   ,'RVAT','STRING[8]'  ,'rejestr VAT'
   ,'GRV','STRING[20]' ,'grupa podatkowa'
   ,'OKR','STRING[20]' ,'okres VAT'
   ,'KWY','STRING[50]' ,'kod wyroznikow'
   ,'KW2','STRING[50]' ,'kod wyroznikow 2'
   ,'LST','STRING[8]'  ,'lista KALI lub LP dokumentu z KASY'
   ,'RUB','INTEGER'    ,'Rubryka KALI'
   ,'SPW','STRING[1]'  ,'Split payment - wymagany'
   ,'DSPR','DATE'      ,'Data sprzedaży'
   ,'ODD','STRING[8]'  ,'jedn. ksiegowa rozrachunku'
   ,'NET','REAL'       ,'netto'
   ,'VAT','REAL'       ,'VAT'
   ,'VATKOSZT','REAL'  ,'Kwota VAT bez odliczenia'
   ,'VAT_ODL','REAL'   ,'Kwota VAT do odliczenia'
   ,'BRT','REAL'       ,'Brutto'
   ,'WAL','STRING[3]'  ,'waluta'
   ,'WWL','REAL'       ,'wartosc w walucie'
   ,'KRS','REAL'       ,'kurs'
   ,'SUM','REAL'       ,'kwota'
   ,'OPI','STRING[100]' ,'opis'
   ,'N_Z','STRING[3]'  ,'n_z'
   ,'OPT','INTEGER'    ,'czy optymalizacja'
   ,'KN','INTEGER'    ,'czy korekta nagłówkowa'
   ,'P_V','INTEGER'    ,'ref P_V'
   ,'DAT','DATE'       ,'data'
   ,'DAT_O','DATE'     ,'data otwarcia'
   ,'WYR','INTEGER'    ,'sa wyrozniki'
   ,'DEK','REAL'       ,'wartość - dekret'
   ,'NKR','REAL'       ,'kurs - dekret'
   ,'PRO','INTEGER'    ,'sa projekty'
   ,'SYM_ROK','STRING[25]','symbol i rok'
   ,'REF_PROJ','STRING[20]','ref projektu');

:: wyrozniki pod pozycjami POW-y
Qxksg:=tab_tmp(4
   ,'KSG','INTEGER'   ,''
   ,'POW','INTEGER'   ,''
   ,'KOW','STRING[8]' ,''
   ,'KO2','STRING[8]' ,''
   ,'SLW','STRING[20]',''
   ,'WOW','REAL'      ,'');

:: pozycje z projektami
Qyksg:=tab_tmp(2
   ,'KSG','INTEGER'   ,''
   ,'FAP','STRING[16]',''
   ,'POZ','STRING[16]','');

{? _b || exec('ini_kom','#message',_a,,,,150) ?};
__lp:=0;

:: podczytanie odpowiedniego ROK_F do bufora
SSTALE.AO().ROK().NAZ;
1


\spr_daty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula sprawdza jakie parametry ustawiono w schematach dekretacji (dotyczy wg daty)
::   WE: _a - rok
::       _b - system
::       _c - rodzaj dekretacji dla ktorej sa sprawdzane warunki
::      [_d] - <opcjonalnie> typ dokumentu, dla którego realizowany jest schemat dekretacji
::   WY: ustawione pramentry w postaci stringu W, S, O,
::  OLD: \spr_daty/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:='';
DEK_NAG.cntx_psh;
DEK_NAG.index('DEK_NAG');
{? var_press('_d')>0
|| DEK_NAG.prefix(_a,_b,_c,$_d);
   {? DEK_NAG.first || _wy:=DEK_NAG.S_DATA ?}
|| DEK_NAG.prefix(_a,_b,_c);
   {? DEK_NAG.first
   || _wy:=DEK_NAG.S_DATA;
      {! |?
         {? (_wy*DEK_NAG.S_DATA)=0 || _wy+=DEK_NAG.S_DATA ?};
            DEK_NAG.next
      !}
   ?}
?};
DEK_NAG.cntx_pop;
_wy


\set_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: ustawia filtr dla dokumentow
::   WE: _a - na pierwszym znaku typ sprawdzenia F/M/Z na drugim znaku P/K Paragon/Korekta zbiorcza
::       [_b] - dla zakupu i sprzedazy rodzaj ustawionej daty definicjach schematow dekretacji
::       [_c] - opcjonalny unikalny numer drukarki fiskalnej dla pragonow / korekty zbiorczej dla korekt
::       [_d] - opcjonalny dla dekretacja paragonow jezeli ustawiono ksiegowanie paragonow w raportach dziennych/miesiecznych
::  OLD: \set_war/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<2 || _b:='' ?};
{? _<3 || _c:='' ?};
_ar:=POMOC.OKR().POCZ~1;
_am:=POMOC.OKR().POCZ~2;
_from:=_where:='';
_sort:='D,SYM';
{? Plugin.runnable('DOK_SORT')
|| _sort:=Plugin.run('DOK_SORT')
?};
{? (1+_a)='F' | (1+_a)='Z'
||
   _pref:={? (1+_a)='F' || 'S' || 'K' ?};

   _from+=' left join STS using("FAKS".STS,STS.reference) left join TYPYSP using("FAKS".T,TYPYSP.reference)'+
           ' left join TYPYSP as TYP_KZ using("FAKS".KZ_T,TYP_KZ.reference)';

   _where+='TYPYSP.ZAK=\''+{? (1+_a)='F' || 'N' || 'T' ?}+'\'\n';
   {? (_a+1)<>'K' || _where+='and "FAKS".HIDDEN=\'N\'\n' ?};
:: _where+='and "FAKS".AM='+$_am+'\n';
   {? _a+1='P' & par496
   || _where+='and ("FAKS".ZAK=\'N\' or "FAKS".ZAK2=\'N\')\n'
   || _where+='and "FAKS".ZAK=\'N\'\n'
   ?};
   _where+='and ("FAKS".STS is null or STS.KSG=\'T\')\n';
:   _where+='and "FAKS".SYS=\''+EKSG.SYS+'\'\n';
   _where+='and (\n';
   {? _b*'W'
   || _where+='   ("FAKS".DW between to_date(\''+$EKSG.ODD+'\') and to_date(\''+$EKSG.DOD+'\'))\n'
   ?};
   {? _b*'S'
   || {? _b*'W' || _where+='      or\n' ?};
      _where+='   ("FAKS".D between to_date(\''+$EKSG.ODD+'\') and to_date(\''+$EKSG.DOD+'\'))\n'
   ?};
   {? _b*'O'
   || {? _b*'W' | _b*'S' || _where+='      or\n' ?};
      _where+='   ("FAKS".DO between to_date(\''+$EKSG.ODD+'\') and to_date(\''+$EKSG.DOD+'\'))\n'
   ?};
   _where+=')\n';

:: STS I ZAKRES NUMEROW
   {? EKSG.WS='T'
   ||
      Qzkr.prefix((1+_a));
      {? Qzkr.first()
      || _where+='and (';
         {!
         |?  _where+=' (STS.KOD = \''+Qzkr.KOD+'\'';
            {?  Qzkr.NOD>0 & Qzkr.NDO=0
            || _where+='and FAKS.NR >='+$Qzkr.NOD+')'
            |?  Qzkr.NDO>0 & Qzkr.NOD=0
            || _where+='and FAKS.NR <='+$Qzkr.NDO+')'
            |?  Qzkr.NDO>0 & Qzkr.NOD>0
            || _where+='and FAKS.NR between '+ $Qzkr.NOD+' and '+ $Qzkr.NDO+')'
            || _where+=')'
            ?};
            {? Qzkr.next() || _where+='or ';1 || _where+=')';0 ?}
         !}
      ?}
   || _where+='and ("FAKS".STS is null ';
      _where+='or STS.KOD in (\'\'';
      Qzkr.prefix(_a);
      {? Qzkr.first()
      || {!
         |?
            _where+=',\''+Qzkr.KOD+'\'';
            Qzkr.next()
         !}
      ?};
      _where+='))\n'
   ?};
:: TYPYSP
   {? EKSG.WT='T'
   ||
      {? _>=3 & _c<>'' & (_a+1)='K'
      || _where+='and TYP_KZ.T in (\'\''
      || _where+='and TYPYSP.T in (\'\''
      ?};

      Qzkr.prefix(_pref);
      {? Qzkr.first()
      ||
         {!
         |?
            _where+=',\''+Qzkr.KOD+'\'';
            Qzkr.next()
         !}
      ?};

      _where+=')\n'
   ||
      {? (_a+1)<>'K' || _where+='and not TYPYSP.KOR=\'Z\'\n' ?}
   ?};

:: grupujacy skladnik dla pargonow/zbiorczych korekt

   {? _>=3 & _c<>''
   || {? (_a+1)='P'
      || {? par496
         || _where+='and (TYPYSP.PAR=\'T\' or TYPYSP.DRPAR=\'T\') and FAKS.NRUNIKAT=\''
         || _where+='and TYPYSP.PAR=\'T\' and FAKS.NRUNIKAT=\''
         ?}
      || _where+='and FAKS.KZ=\''
      ?};
      _where+=_c+'\'\n';
      {? (_a+1)='K' || _where+='and FAKS.KZ_AKC=\'T\'\n' ?};
      {? (_a+1)='P' & PAR_SKID.get(492)='F' || _where+='and FAKS.SYMF=\'\'\n' ?}
   ?};
   {? _>=4 & (_a+1)='P'
   || {? PAR_SKID.get(307)='M'
      || {? _d<>'' || _where+='and substr(to_string(FAKS.D),0,7) = \''+_d+'\'\n' ?}
      || {? _d<>date(0,0,0) || _where+='and FAKS.D = to_date(\''+$_d+'\')\n' ?}
      ?}
   ?};
   FAKS.clear();
   FAKS.f_set(_sort,_from,_where)

|? (1+_a)='M'
||
   _from+=' left join MG using("ND".MAG,MG.reference) left join TYPYDOK using("ND".TYP,TYPYDOK.reference)';

   _where+='"ND".AR='+$_ar+'\n';
   _where+='and "ND".AM='+$_am+'\n';
   _where+='and "ND".ZAK=\'N\'\n';
   _where+='and ("ND".MAG is null or MG.KSG=\'T\')\n';
   _where+='and ("ND".D between to_date(\''+$EKSG.ODD+'\') and to_date(\''+$EKSG.DOD+'\'))\n';

:: MG
   {? EKSG.WS='T'
   ||
      _where+='and MG.SYM in (\'\'';

      Qzkr.prefix('M');
      {? Qzkr.first()
      ||
         {!
         |?
            _where+=',\''+Qzkr.KOD+'\'';
            Qzkr.next()
         !}
      ?};

      _where+=')\n'
   ?};

:: TYPYDOK
   {? EKSG.WT='T'
   ||
      _where+='and TYPYDOK.T in (\'\'';

      Qzkr.prefix('D');
      {? Qzkr.first()
      ||
         {!
         |?
            _where+=',\''+Qzkr.KOD+'\'';
            Qzkr.next()
         !}
      ?};

      _where+=')\n'
   ?};
   ND.clear();
   ND.f_set('D,SYM',_from,_where)

?};
''


\set_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: ustawia wartosci zmiennych dla warlog i przepisuje do Qwksg
::   WE: _a - typ zmiennej O-ogolna N-naglowek P-pozycja, D-Dekret
::       _b - rodzaj dekretacji
::  OLD: \set_fld/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? Qoksg.size()
|| {? Qwksg.first()
   || _n:=Qwksg.fld_num();
      {! _i.._n
      |! Qoksg.clear();
         {? Qoksg.find_key(Qwksg.fld_acr(_i),Qwksg.fld_acr(_i))
         || _so:=Qoksg.SO
         || _so:=''
         ?};
         {? (_a='P' & 'P'*_so) | (_a='N' & 'NP'*_so) | (_a='O' & 'ONP'*_so)
         || _typ:=type_of(Qwksg[_i]);
            Qwksg[_i]:={? _typ=1 || 0 |? _typ=2 || '' |? _typ=4 || date(0,0,0) || 0 ?}
         ?}
      !}
   || Qwksg.blank();
      Qwksg.add(1)
   ?};
   WARLOG.index('SO');
   WARLOG.prefix(1+_b,_a);
   {? WARLOG.first()
   || {!
      |? Qoksg.clear;
         {? Qoksg.find_key(WARLOG.KOD,WARLOG.KOD)
         || exec('cntx_psh','dok_fks_aut_dok',_b);
            ($('Qwksg.'+form(WARLOG.KOD)))():=($(WARLOG.FO))();
            exec('cntx_pop','dok_fks_aut_dok',_b)
         ?};
         WARLOG.next()
      !}
   ?};
   Qwksg.put(1)
?}


\cntx_psh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula odlozenie kontekstow
::   WE: _a - rodzaj dekretacji
::  OLD: \cntx_psh/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? (1+_a)='L'
|| ND.cntx_psh(); DK.cntx_psh(); FAKS.cntx_psh(); FAP.cntx_psh(); FAKSV.cntx_psh()
|? _a='EW'
|| SRDO.cntx_psh()
|? _a='ET'
|| SRDO.cntx_psh(); SRSR.cntx_psh()
|? _a='EP' | _a='EF' | _a='ED'
|| SRST.cntx_psh(); SRSW.cntx_psh(); KKOSZ.cntx_psh(); TAM.cntx_psh()
|? (1+_a)='K'
|| LS.cntx_psh();
   O.cntx_psh()
|? (1+_a)='S'
|| EZALPOZ.cntx_psh(); POZDOK.cntx_psh(); POZOPER.cntx_psh(); OPER.cntx_psh(); DOKUMENT.cntx_psh()
?}


\cntx_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula przywrocenie kontekstow
::   WE: _a - rodzaj dekretacji
::  OLD: \cntx_pop/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? (1+_a)='L'
|| ND.cntx_pop(); DK.cntx_pop(); FAKS.cntx_pop(); FAP.cntx_pop(); FAKSV.cntx_pop()
|? _a='EW'
|| SRDO.cntx_pop()
|? _a='ET'
|| SRDO.cntx_pop(); SRSR.cntx_pop()
|? _a='EP' | _a='EF' | _a='ED'
|| SRST.cntx_pop(); SRSW.cntx_pop(); KKOSZ.cntx_pop(); TAM.cntx_pop()
|? (1+_a)='K'
|| LS.cntx_pop();
   O.cntx_pop()
|? (1+_a)='S'
|| EZALPOZ.cntx_pop(); POZDOK.cntx_pop(); POZOPER.cntx_pop(); OPER.cntx_pop(); DOKUMENT.cntx_pop()
?}


\spr_war0
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [1210]
:: OPIS: Formula sprawdza czy jest zdefiniowany schemat dziedzinowy dla wybranego rodzaju dokumentu
::   WE: _a - rok
::       _b - system
::       _c - rodzaj dekretacji dla ktorej sa sprawdzane warunki
::       [_d] - opcjonalny parametr do dekretacji (typ dokumetu/lista plac - wyroznik SQL-owy ref)
::   WY: 1 - zdefiniowany schemat dziedzinowy, 0 -w p.p.
::  OLD: \spr_war0/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
DEK_NAG.index('DEK_NAG');
{? _<4 | _d='' || DEK_NAG.prefix(_a,_b,_c) || DEK_NAG.prefix(_a,_b,_c,_d) ?};
EKSG.ETRB:='';
{? DEK_NAG.first()
|| _ok:=0;
   {! |?
:warunek dla naglowka DEK_NAG.WARUNEK
      {? exec('war_log_nag','dok_fks_aut_dok')
      || EKSG.WG_DATY:=DEK_NAG.S_DATA;
         EKSG.ETRB:=DEK_NAG.SPR;
         _ok:=1
      ?};
      ~_ok & DEK_NAG.next()
   !}
?};
EKSG.ETRB<>''


\spr_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: sprawdza warunki dla zakresu ksiegowania Data wyst., Magazyn/St.sprzedazy/St.zakupu, Typ dokumentu
::       ustawia zmienne dla naglowka na podstawie stalych DEK_STAL i przypisuje do odpowiednich zmiennych
::       w przypadku braku ustawienia stalych odpowiednio zaznacza komunikaty o bledach zgodnie z
::       ustawionym paramentrem DEK_NAG.SPR
::   WE: _a - rok
::       _b - system
::       _c - rodzaj dekretacji dla ktorej sa sprawdzane warunki
::       [_d] - opcjonalny parametr do dekretacji (typ dokumentu/lista plac - wyroznik SQL-owy ref)
::       [_e]  - 1 - byla wczesniej uruchomiona formula \spr_war0, 0 - w p.p.
::   WY: 0 nie jest dobrze 1 jest ok
::  OLD: \spr_war/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?}   || _e:=0 ?};
{? (1+_c)<>'S' || EKSG.REF_ODD:=null() ?};
EKSG.REJ:=null();
EKSG.RVAT:=null();
EKSG.ESYM:=EKSG.EMSP:=EKSG.ETYP:='';
_wyn:=1;

EKSG.RODZ:=_c;

{? _e=0
|| {? _<4 | _d='' || exec('spr_war0','dok_fks_aut_dok',_a,_b,_c) || exec('spr_war0','dok_fks_aut_dok',_a,_b,_c,_d) ?}
?};

{? _c='SN'
|| EKSG.EMSP:=EKSG.STANKAS().STANKAS().NAZWA; EKSG.ETYP:=form(RAPORT.NUM_RAP); EKSG.ESYM:='';

   {? EKSG.ETRB=''
   ||
      exec('add_err','dok_fks_aut_dok','11','',_c);
      _wyn:=0
   ?};
   {? _wyn || {? RAPORT.r_lock(1,1,1) || RAPORT.r_unlock() || _wyn:=0; exec('add_err','dok_fks_aut_dok','08','',_c) ?} ?}
|? _c='SV'
|| EKSG.EMSP:=EKSG.STANKAS().STANKAS().NAZWA; EKSG.ESYM:=form(POZDOK.MF_FIKS);
   EKSG.ETYP:=form(POZDOK.DOKUMENT().LP,-3)+'/'+DOKUMENT.TYP_DOK+'/'+$DOKUMENT.DOK_NUM+' '+DOKUMENT.OPIS;

   {? EKSG.ETRB=''
   ||
      exec('add_err','dok_fks_aut_dok','11','',_c);
      _wyn:=0
   || _wyn:=1
   ?};
   {? _wyn || {? POZDOK.r_lock(1,1,1) || POZDOK.r_unlock() || _wyn:=0; exec('add_err','dok_fks_aut_dok','08','',_c) ?} ?}
|? _c='EP' | _c='EF' | _c='ED'
|| EKSG.REF_ODD:=ODD.ref();
   {? EKSG.ETRB=''
   ||
      exec('add_err','dok_fks_aut_dok','11','',_c);
      _wyn:=0
   ?}
|? _c='EW'
|| EKSG.EMSP:=SRDO.UWAGI; EKSG.ETYP:=SRDO.TYP().TYP; EKSG.ESYM:=SRDO.SYMBOL;
:: komunikaty dla dokumentu wartosciowych estry

   SRST.cntx_psh();
   SRST.use('srst'+'r'+REF.FIRMA().SYMBOL);
   SRST.index('SROD');
   SRST.prefix(SRDO.SRSR,SSTALE.AR,SSTALE.AO);
   {? SRST.first() || EKSG.REF_ODD:=SRST.ODD ?};
   SRST.cntx_pop();

   {? EKSG.ETRB=''
   ||
      exec('add_err','dok_fks_aut_dok','11','',_c);
      _wyn:=0
   ||
      _wyn:=1
   ?};
   {? _wyn || {? SRDO.r_lock(1,1,1) || SRDO.r_unlock() || _wyn:=0; exec('add_err','dok_fks_aut_dok','08','',_c) ?} ?}
|? _c='ET'
|| EKSG.EMSP:=SRDO.SYMBOL; EKSG.ETYP:=SRDO.TYP().TYP; EKSG.ESYM:=SRDO.SYMBOL;
:: komunikaty dla dokumentów OT środków trwałych
   SRST.cntx_psh();
   SRST.index('SROD');
   SRST.prefix(SRDO.SRSR,SRDO.ROK_F,SRDO.OKRO_F);
   {? SRST.first() || _odd:=SRST.ODD || _odd:=SRDO.SRSR().ODD ?};
   SRST.cntx_pop();
   EKSG.REF_ODD:=_odd;
   {? EKSG.ETRB=''
   ||
      exec('add_err','dok_fks_aut_dok','11','',_c);
      _wyn:=0
   ||
      _wyn:=1
   ?};
   {? SRDO.r_lock(1,1,1)
   || SRDO.get();
      {? _wyn & SRDO.K='T' || _wyn:=0; SRDO.r_unlock(); exec('add_err','dok_fks_aut_dok','18','',_c) ?};
      _wyn
   || {? _wyn || exec('add_err','dok_fks_aut_dok','08','',_c) ?};
      _wyn:=0
   ?}
|? _c='LZ' | _c='LS'
|| EKSG.ESYM:=FAKS.SYM; EKSG.EMSP:=FAKS.STS().KOD; EKSG.ETYP:=FAKS.T().T;
:: komunikaty dla sprzedazy
   {? EKSG.ETRB=''
   || {? _c='LS' & (var_pres('ParZbiorczo')>0 & ParZbiorczo)
      || _wyn:=1
      || exec('add_err','dok_fks_aut_dok','11','',_c);
         _wyn:=0
      ?}
   ||
      {? FAKS.STS<>null & FAKS.STS().KSG<>'T'
      ||
         _wyn:=0
      |? FAKS.WHERE='N'
::: korekta nagłówkowa
      || _korid:=FAKS.FKSQL;
         _omsk:=FAKS.name();
         _nmsk:=form(8+FAKS.FKSQL);
         FAKS.cntx_psh();
         {? _omsk<>_nmsk || FAKS.use(_nmsk) ?};
         FAKS.prefix();
         {? ~FAKS.seek(_korid) | FAKS.ZAK='N'
         || exec('add_err','dok_fks_aut_dok','44','',_c);
            _wyn:=0
         || _wyn:=1
         ?};
         FAKS.cntx_pop();
         _wyn
      |? _c<>'LP' & PAR_SKID.get(492)='F' & FAKS.T().PAR='T' & FAKS.SYMF<>''
      ||
         _wyn:=0
      ||
         {? FAKS.AKC<>'T'
         ||
            {? 'TD'*EKSG.ETRB || exec('add_err','dok_fks_aut_dok','31','',_c) ?};
            _wyn:=0
         || {? EKSG.WG_DATY='W' || _wyn:=_e | (FAKS.DW>=EKSG.ODD & FAKS.DW<=EKSG.DOD)
            |? EKSG.WG_DATY='S' || _wyn:=_e | (FAKS.D>=EKSG.ODD & FAKS.D<=EKSG.DOD)
            |? EKSG.WG_DATY='O' || _wyn:=_e | (FAKS.DO>=EKSG.ODD & FAKS.DO<=EKSG.DOD)
            || _wyn:=_e
            ?}
         ?}
      ?}
   ?};
   {? _wyn
   || EKSG.REF_ODD:=exec('FindInSet','#table','ODDZ','KOD2',FAKS.ODDZ,,"ODDZ.ODD",,,null());
      {? EKSG.REF_ODD=null || exec('add_err','dok_fks_aut_dok','013','',_c); _wyn:=0 ?}
   ?};
   {? FAKS.r_lock(1,1,1)
   || FAKS.get();
      {? _wyn & FAKS.ZAK='T' || _wyn:=0; FAKS.r_unlock(); exec('add_err','dok_fks_aut_dok','18','',_c) ?};
      {? _wyn & _c='LS' & FAKS.T().KOR<>'T' & FAKS.DW>=date(2014,1,1) & PAR_SKID.get(308)='T' & FAKS.DO=date(0,0,0)
      || _wyn:=0; FAKS.r_unlock(); exec('add_err','dok_fks_aut_dok','30','',_c)
      ?};
      _wyn
   || {? _wyn || exec('add_err','dok_fks_aut_dok','08','',_c) ?};
      _wyn:=0
   ?}
|? _c='LP' | _c='LK' | _c='LX'
|| {? _c='LK' | _c='LX'
   || EKSG.ESYM:=FAKS.KZ;
      EKSG.ETYP:=FAKS.KZ_T().T
   || EKSG.ESYM:=FAKS.NRUNIKAT;
      EKSG.ETYP:=FAKS.T().T
   ?};
   EKSG.EMSP:=FAKS.STS().KOD;

:: komunikaty dla sprzedazy
   {? EKSG.ETRB=''
   || exec('add_err','dok_fks_aut_dok','11','',_c);
      _wyn:=0
   || {? FAKS.STS<>null & FAKS.STS().KSG<>'T'
      || _wyn:=0
      |? _c<>'LP' & PAR_SKID.get(492)='F' & FAKS.T().PAR='T' & FAKS.SYMF<>''
      || _wyn:=0
      || {? EKSG.WG_DATY='W' || _wyn:=_e | (FAKS.DW>=EKSG.ODD & FAKS.DW<=EKSG.DOD)
         |? EKSG.WG_DATY='S' || _wyn:=_e | (FAKS.D>=EKSG.ODD & FAKS.D<=EKSG.DOD)
         |? EKSG.WG_DATY='O' || _wyn:=_e | (FAKS.DO>=EKSG.ODD & FAKS.DO<=EKSG.DOD)
         || _wyn:=_e
         ?}
      ?}
   ?};
   {? _wyn
   || EKSG.REF_ODD:=exec('FindInSet','#table','ODDZ','KOD2',FAKS.ODDZ,,"ODDZ.ODD",,,null());
     {? EKSG.REF_ODD=null || exec('add_err','dok_fks_aut_dok','013','',_c); _wyn:=0 ?}
   ?}
|? _c='LM'
|| EKSG.ESYM:=ND.SYM; EKSG.EMSP:=ND.MAG().SYM; EKSG.ETYP:=ND.TYP().T;
:: komunikaty dla magazynu
   {? EKSG.ETRB=''
   ||
      exec('add_err','dok_fks_aut_dok','11','',_c);
      _wyn:=0
   ||
      {? ND.STAT_REJ<>'T'
      || {? 'TD'*EKSG.ETRB || exec('add_err','dok_fks_aut_dok','31','',_c) ?};
          _wyn:=0
      |? ND.TYP().WYR<>'U' & exec('only_usl','dok_fks_aut_dok',ND.ref())
      || exec('add_err','dok_fks_aut_dok','34','',_c);
         exec('add_err','dok_fks_aut_dok','01','',_c);
         _wyn:=0
      |? ND.MAG().KSG<>'T'
      ||
         _wyn:=0
      ||
::       czy uzupelnione ceny w zaakceptowanym dokumencie
         DK.index('DOKMAG');
         DK.prefix(ND.ref());
         {? DK.first()
         ||
            {!
            |?
               {? DK.M().RODZ='T' & ~exec('ctrlWycen','magdok_wspolne')
               ||
                  exec('add_err','dok_fks_aut_dok','33','',_c);
                  _wyn:=0
               ?};
               _wyn=1 & DK.next()
            !}
         ?}
      ?}
   ?};
   {? _wyn
   || EKSG.REF_ODD:=exec('FindInSet','#table','ODDZ','KOD2',ND.ODDZ,ND.ODDZ,"ODDZ.ODD",,,null());
      {? EKSG.REF_ODD=null || exec('add_err','dok_fks_aut_dok','013','',_c); _wyn:=0 ?}
   ?};
   {? ND.r_lock(1,1,1)
   || ND.get();
      {? _wyn & ND.ZAK='T' || _wyn:=0; ND.r_unlock(); exec('add_err','dok_fks_aut_dok','18','',_c) ?};
      _wyn
   || {? _wyn || exec('add_err','dok_fks_aut_dok','08','',_c) ?};
      _wyn:=0
   ?}
|? 1+_c='K'
||
:: KALI - kadry i place
   EKSG.ESYM:={? _c='KU' || '' |? ~-_c='KL' || (~-O.LT) ?};
   {? ~-_c='KL'
   || 'obsluga list plac';
      EKSG.REF_ODD:=O.ODDZIAL
   |? _c='KU'
   || 'rachunki z umow';
      EKSG.REF_ODD:=ODD.ref()
   ?};
   EKSG.EMSP:=EKSG.ETYP:='';
   {? EKSG.ETRB=''
   || exec('add_err','dok_fks_aut_dok','','Brak schematu dziedzinowego',_c); _wyn:=0
   ||
      KT.cntx_psh();
      KT.prefix();
      EKSG.ETYP:={? KT.seek(BIT.sqlint(DEK_NAG.TYP),KT.name) || KT.T || '' ?};
      KT.cntx_pop()
   ?}
|| ''
?};
:wyznaczenie rejestru (na pozniejsze potrzeby dekretacji)
{? _wyn
|| {? _c='SV'
   || EKSG.REJ:=POZDOK.REJ
   || {? exec('bl_rej','dok_fks_aut_dok',EKSG.REF_ODD)=null
      || exec('add_err','dok_fks_aut_dok','011','',_c);
         _wyn:=0
      ?}
   ?}
?};
_wyn


\bl_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: wartosc poczatkowa pola REJ
::   WE: _a - ref oddzialu
::   WY: REJ.ref() lub null
::  OLD: \bl_rej/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEK_NAG.SREJ='S'
|| DEK_STAL.index('DEK_STAL');
   DEK_STAL.prefix();
   EKSG.REJ:={? DEK_STAL.find_key(DEK_NAG.ref,_a) || DEK_STAL.REJ || null ?}
|| _rej:={? DEK_NAG.F_REJ().FORMULA<>'' || ($DEK_NAG.F_REJ().FORMULA)() || '~~' ?};
   REJ.index('KOD');
   REJ.prefix(SSTALE.AR,_a);
   EKSG.REJ:={? REJ.find_key(_rej,_rej) || REJ.ref() || null ?}
?};
EKSG.REJ


\add_err
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: dodaje informacje o bledzie
::   WE: _a - kod bledu
::       [_b] - opis bledu
::       Parametry ponizej dla przypadku gdy nie podano _a
::       [_c] - rodzaj dekretacji
::  OLD: \add_err/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};
{? _>=3 || {? type_of(_c)<>2 || _c:='' ?} || _c:='' ?};
ODD.cntx_psh();
_jedn:=EKSG.REF_ODD().OD;
{? +_jedn || _jedn:='Jedn. księgowa: '+_jedn+';' ?};
_rej:=EKSG.REJ().KOD;
{? +_rej || _rej:=' Rejestr księgowy: '+_rej+';' ?};
_grupa:=EKSG.EMSP;
{? +_grupa
|| _grupa:={? ~-_c='KL' || ''
           |? _c='KU' || ''
           |? _c='SN' | _c='SV' || ' Stanowisko kasowe: '
           |? _c='EW' || ' Opis: '
           |? _c='ET' || ' Dokument OT: '
           |? _c='LM' || ' Magazyn: '
           |? _c='LS' || ' St. Sprzedaży: '
           |? _c='LZ' | _c='LX' || ' St. Zakupu: '
           ?}+_grupa+';'
?};

_typ:=EKSG.ETYP;
{? +_typ
|| _typ:={? ~-_c='KL' || ''
         |? _c='KU' || ''
         |? _c='SN' || ' Numer raportu: '
         |? _c='SV' || ' Dokument: '
         |? _c='EW' | _c='ET' || ' Typ: '
         |? (1+_c)='L' || ' Typ dokumentu: '
         ?}+_typ+';'
?};

_symbol:=EKSG.ESYM;
{? +_symbol
|| _symbol:={? ~-_c='KL' || ' Lista płac: '
            |? _c='KU' || ' Nr umowy: '
            |? _c='SN' || ' Transakcja kasowa: '
            |? _c='SV' || ' Symbol: '
            |? _c='EW' | _c='ET' || ' Symbol: '
            |? (1+_c)='L' || ' Symbol dokumentu: '
            ?}+_symbol+';'
         ?};
{? _>0 & +_a
|| _opis:={? _a='01' || 'nie dołączono nagłówka dokumentu'
          |? _a='02' || 'nie dołączono pozycji VAT'
          |? _a='03' || 'nie dołączono pozycji dekretu'
          |? _a='04' || 'nie dołączono pozycji wyróżnika'
          |? _a='05' || 'nie dopisano pozycji dekretu strona Wn'
          |? _a='06' || 'nie dopisano pozycji dekretu strona Ma'
          |? _a='07' || 'nie dołączono nagłówka dokumentu - brak wypełnionego pola rodzaj dokumentu'
          |? _a='08' || 'dokument zablokowany przez innego użytkownika'
          |? _a='09' || 'zablokowano ostatni dokument w rejestrze'
          |? _a='011' || 'nie dołączono nagłówka dokumentu - brak wypełnionego pola rejestr księgowy'
          |? _a='012' || 'nie dołączono nagłówka dokumentu - brak wypełnionego pola rejestr VAT'
          |? _a='013' || 'nie dołączono nagłówka dokumentu - brak wypełnionego pola jednoska księgowa'
          |? _a='10' || 'nie rozpisano pozycji wg projektów'
          |? _a='11' || 'brak definicji schematu dziedzinowego spełniającego kryteria dla tego typu operacji'
          |? _a='13' || 'niepełny dekret'
          |? _a='17' || 'nie dołączono nagłówka dokumentu - brak typu dokumentu prostego'
          |? _a='18' || 'dokument zaksięgowany przez innego użytkownika'
          |? _a='21' || 'błędne konto księgowe'
          |? _a='22' || 'błędna definicja wyróżnika'
          |? _a='30' || 'niewypełniona data dostawy towaru'
          |? _a='31' || 'dokument niezaakceptowany'
          |? _a='32' || 'stanowisko/magazyn dokumentu jest pozabilansowy'
          |? _a='33' || 'nieuzupełnione ceny w pozycjach dokumentu lub nie wyceniono składowych'
          |? _a='34' || 'dokument posiadający wyłącznie pozycje usługowe'
          |? _a='41' || 'brak domyślnego słownika projektów'
          |? _a='42' || 'nie znaleziono projektu'
          |? _a='43' || 'niewłaściwy wzorzec słownika projektów'
          |? _a='44' || 'nie dołączono korekty nagłówkowej - dokument pierwotny nie został zadekretowany'
          |? _a='45' || 'nie dołączono korekty nagłówkowej - dokument pierwotny o symbolu '+_b+' nie został zaksięgowany'
          |? _a='46' || 'nie znaleziono dokumentu pierwotnego'
          || ''
          ?};
   _rodz:={? (1+_a)='0' || 2 |? (1+_a)='1' || 3 |? (1+_a)='2' || 4 || 7 ?};
   exec('add_kom','#message',_opis,_rodz,_jedn+_rej+_grupa+_typ+_symbol,__lp+=1);
   {? _b<>''
   || exec('add_kom','#message',_b,_rodz,_jedn+_rej+_grupa+_typ+_symbol,,__lp+=1)
   ?}
||
   exec('add_kom','#message',_b,7,_jedn+_rej+_grupa+_typ+_symbol,,__lp+=1)
?};
ODD.cntx_pop();
1


\only_usl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdza czy dany dokument magazynowy zawiera tylko pozycje uslugowe
::   WE: _a - ref ND
::   WY: 1-tylko uslugi 0-sa materialy
::  OLD: \only_usl/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
DK.cntx_psh(); DK.index('DOKMAG'); DK.prefix(_a);
{? DK.first || {! |? _wyn:=DK.M().RODZ='U'; _wyn & DK.next() !} ?};
DK.cntx_pop();
_wyn


\war_log_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: wykorzystywana w one_poz ksg.fml
::  OLD: \war_log_nag/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEK_NAG.WARLOG<>''
|| _rr:=exec('exec','dok_fks_aut_dok',DEK_NAG.WARLOG);
   {? type_of(_rr) || _rr || 0 ?}
|| 1
?}


\exec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: wykorzystywana w war_log, tmp_one ksg.fml
::  OLD: \exec/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_msg:=no_msg(1);
errno;
_rr:=exec('exec2','dok_fks_aut_dok',_a);
_err:=errno;
{? _err<>0 || exec('add_err','dok_fks_aut_dok','','Nie zdefiniowana zmienna dla formuł: \''+_a+'\'',EKSG.RODZ) ?};
no_msg(_msg);
_rr


\exec2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula techniczna do w ktorej moga wystapic bledy nie rozpoznany symbol ze wzgledu
::       na brak zdefiniowanych wlasciwych zmiennych dla formul. Formula zostala stworzona na
::       potrzeby obslugi w\w bledow
::  OLD: \exec2/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_rr:={? _a<>'' || ($('{| Qwksg |! '+_a+' |}'))() ?};
_rr


\pozycje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: rejestruje pozycje dokumentu
::   WE: _a - rok
::       _b - system
::       _c - Rodzaj dekretacji
::       [_d] - dodatkowy prefix
::   WY: true - dodano dokument, false - w p.p.
::  OLD: \pozycje/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
:: znajdowanie odpowiedniego schematu dziedzinowego
{? _>3 || _ok:=exec('inicjuj','dok_fks_aut_dok',_a,_b,_c,_d) || _ok:=exec('inicjuj','dok_fks_aut_dok',_a,_b,_c) ?};
{? _ok
|| {? _c='EW'
   || _ok:=exec('pozycje_ew','dok_fks_aut_dok')
   |?  _c='ET'
   || _ok:=exec('pozycje_ot','dok_fks_aut_dok')
   |? _c='EP' | _c='EF' | _c='ED'
   || _ok:=exec('pozycje_amor','dok_fks_aut_dok',_c)
   |? (_c='LS' | _c='LZ')
   || _ok:=exec('pozycje_ls_lz','dok_fks_aut_dok',_c)
   |? _c='LM'
   || _ok:=exec('pozycje_lm','dok_fks_aut_dok',_c)
   |? ~-_c='KL'
   || _ok:=exec('pozycje_kl','dok_fks_aut_dok',_c)
   |? _c='KU'
   || _ok:=exec('pozycje_ku','dok_fks_aut_dok',_c)
   |? (1+_c)='S'
   || _ok:=exec('pozycje_ks','dok_fks_aut_dok',_c)
   ?}
|| {? _c='KL'
   || exec('add_err','dok_fks_aut_dok','','Lista płac: '+(~-O.LT)+' - Brak schematu dziedzinowego.',_c)
   |? _c='KU'
   || exec('add_err','dok_fks_aut_dok','','Rachunki z umów ('+form(RU.O)+') za okres: '+$(OKRO_F.POCZ~1)+'-'+$(OKRO_F.POCZ~2)+
                              ' - Brak schematu dziedzinowego.',_c)
   ?};
   _ok:=0
?};
_ok


\inicjuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: ustawia odpowiedni DEK_NAG
::   WE: _a - rok
::       _b - system
::       _c - rodzaj dekretacji dla ktorej sa sprawdzane warunki
::       [_d] - opcjonalny parametr do dekretacji (typ dokumetu/lista plac - wyroznik SQL-owy ref)
::  OLD: \inicjuj/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
DEK_NAG.index('DEK_NAG');
{? _=4 || DEK_NAG.prefix(_a,_b,_c,_d) || DEK_NAG.prefix(_a,_b,_c) ?};
_rr:=null;
{? DEK_NAG.first()
|| {!|?
      {? exec('war_log_nag','dok_fks_aut_dok')
      || _rr:=DEK_NAG.ref(); 0
      || DEK_NAG.next()
      ?}
   !}
?};
_rr


\pozycje_ls_lz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: Formula rejestruje pozycje dla dokumentow sprzedazy i zakupu
::   WE:  _a - Rodzaj dekretacji
::  OLD: \pozycje_ls_lz/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
   _skid_nag:=DEK_NAG.ref();
   _czy_poz:=DEK_NAG.VPOZ_STD='R';
   _ref_fak:=FAKS.ref();


   _rdk:=#_ref_fak;
   _faks:=$FAKS.ref();
   _omsk:=FAKS.name();
   _refk:=BB.sqlint(FAKS.LKSQL);
   _nmsk:=form(8+FAKS.LKSQL);
   _czy_kor:=FAKS.T().KOR='T';
   _f_t_zal:=FAKS.T().ZAL;
   _f_t_roz:=FAKS.T().ZAL_ROZ;
   _czywgv:=0;
   ROZNE.OKR_OBR:=null();
   VAR_DEL.delete('ObjGTU');
   {? _a='LS' & var_pres('T_GTU',DEK_NAG)>0 & DEK_NAG.T_GTU<>'F'
   || ObjGTU:=exec('obj_gtu','dok_fks_aut_dok')
   ?};

   FAPOW.cntx_psh();
   FAPOW.index('END_K'); FAPOW.prefix($FAKS.ref);
   _czy_roz:={? FAPOW.first() || 1 || 0 ?};
   FAPOW.cntx_pop();


:: zbieram dane dla danej faktury
   EKSG.TSP:={? _czy_kor & _refk || 'A' || 'F' ?};

   FAKSV.cntx_psh(); FAKSV.blank(0);
   FAKS.cntx_psh();
   {? _a='LS' | (_a='LZ' & _czy_poz)
   || FAP.index('FAP');
      FAP.prefix(_ref_fak);
      FAKSV.index('FAKS_SV');
      FAKSV.prefix(_faks);
      {? FAP.first()
      || {!
         |?

:: dekretacja wg FAP
            _zpodz:=0;
            {? Plugin.runnable('FAP_PODZ_001')
            || {? Plugin.run('FAP_PODZ_001') & var_pres('__Fap_z')>0 & __Fap_z.first()
               || _zpodz:=1;
                  {!
                  |?
                     exec('one_poz','dok_fks_aut_dok',_rdk,_a);
                     {? _a='LS' & var_pres('ObjGTU')>0 & (_czy_kor=0 | FAP.POZP<>0 | exec('spr_kor','faktury_poz')=1)
                     || ObjGTU.add(FAP.JPK_GTU().KOD)
                     ?};
                     __Fap_z.next()
                  !};
                  VAR_DEL.delete('__Fap_z')
               ?}
            ?};
            {? ~_zpodz
            ||
               exec('one_poz','dok_fks_aut_dok',_rdk,_a);
               {? _a='LS' & var_pres('ObjGTU')>0 & (_czy_kor=0 | FAP.POZP<>0 | exec('spr_kor','faktury_poz')=1)
               || ObjGTU.add(FAP.JPK_GTU().KOD)
               ?}
            ?};
::dekretacja wg FAP koniec
            FAP.next()
         !}
      || 0
      ?}
   || _czywgv:=1;
      FAP.index('FAP');
      FAP.prefix(_ref_fak);
      FAP.first();
      VAR_DEL.delete('ObjFV');
      ObjFV:=_obj:=exec('obj_fv_sp','dok_fks_aut_dok');
      _obj.create(_faks);
      FAKSV.index('FAKS_SV');
      FAKSV.prefix(_faks);
      {? FAKSV.first() & _obj.first()
      || {!
         |? {? FAKSV.WN<>0 | FAKSV.WV<>0 | FAKSV.WB<>0
            || exec('one_poz','dok_fks_aut_dok',_rdk,_a)
            ?};
            _obj.next()
         !}
      ?}
   ?};
   FAKS.cntx_pop();

:: zbieram dane dotyczace korekty
   {? _czy_kor & _refk & ~_czywgv
   || EKSG.TSP:='B';
      FAKS.cntx_psh();
      FAKSPL.cntx_psh();
      FAP.cntx_psh();
      {? _omsk<>_nmsk || FAKS.use(_nmsk); FAP.use('fakpo'+(_nmsk+3)); FAKSPL.use('fakpl'+(_nmsk+3)) ?};
      FAKS.clear();
      {? FAKS.seek(_refk,_nmsk)
      || _ref_kor:=FAKS.ref();
         FAP.index('FAP');
         FAP.prefix(_ref_kor);
         {? FAP.first()
         || {!
            |? exec('one_poz','dok_fks_aut_dok',_rdk,_a);
               FAP.next()
            !}
         || 0
         ?}
      ?};
      FAKS.cntx_pop();
      FAKSPL.cntx_pop();
      FAP.cntx_pop()
   ?};

   {? 'ST'*_f_t_roz & _czy_roz
   || {? var_pres('ObjFV')<=0
      || ObjFV:=_obj:=exec('obj_fv_sp','dok_fks_aut_dok');
         _obj.create(_faks)
      ?};
      FAKSV.index('FF_SV');
      FAKSV.prefix('',_faks);
:: czesc zwiazana z danymi z faktur rozliczajacych
      {? FAKSV.first() & (var_pres('_obj')<=0 | _obj.first('R'))
      ||
         {!
         |? EKSG.TSP:='R';
            {? FAKSV.WN_R<>0 | FAKSV.WV_R<>0 | FAKSV.WB_R<>0
            || exec('one_poz','dok_fks_aut_dok',_rdk,_a)
            ?};
            var_pres('_obj')<=0 & FAKSV.next() |
            var_pres('_obj')>0 & _obj.next()
         !}
      ?}
   ?};
:: czesc zwiazana z danymi z faktur zaliczkowych
   {? (_f_t_zal='T' | _czy_roz)
   || {? var_pres('ObjFV')<=0
      || ObjFV:=_obj:=exec('obj_fv_sp','dok_fks_aut_dok');
         _obj.create(_faks)
      ?};
      FAKS.cntx_psh();
      FAKSV.index('FF_SV');
      FAKSV.prefix('',_faks);
      {? FAKSV.first() & (var_pres('_obj')<=0 | _obj.first('Z'))
      ||
         {!
         |? EKSG.TSP:='Z';
            {? FAKSV.WN_Z<>0 | FAKSV.WV_Z<>0 | FAKSV.WB_Z<>0
            || exec('one_poz','dok_fks_aut_dok',_rdk,_a)
            ?};
            var_pres('_obj')<=0 & FAKSV.next() |
            var_pres('_obj')>0 & _obj.next()
         !}
      ?};
      FAKS.cntx_pop()
   ?};

   FAKSV.cntx_pop();

:: stworzenie dokumentu
   ref_fak:=_ref_fak;
   _dok:=exec('add_dok','dok_fks_aut_dok',_rdk,_a);
   VAR_DEL.delete('ref_fak');
   {? _dok
   || _wn_ma:=exec('spr_dekr','dok_fks_aut_dok',_dok);
      _err:=0;
      {? _wn_ma[1]-_wn_ma[2]<>0
      || _err:=1;_err_txt:='Różnica stron WN-MA: '+form(_wn_ma[1]-_wn_ma[2],,2)
      |? _wn_ma[1]=0 & _wn_ma[2]=0
      || _err:=1;_err_txt:='Brak pozycji'
      ?};
      {? 'TA'*EKSG.ETRB & _err
      || exec('add_err','dok_fks_aut_dok','13',_err_txt,_a)
      ?}
   ?};
   Qpksg.prefix(); {? Qpksg.first() || {! |? Qpksg.del() !} ?};
   Qxksg.prefix(); {? Qxksg.first() || {! |? Qxksg.del() !} ?};
   VAR_DEL.delete('ObjFV','ObjGTU');
_dok<>null


\spr_dekr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: sprawdzenie bilansowania dekretu
::       [rr] dodatkowo dodano usuniecie pozycji zerowych POZ.SUM=0
::       [IF] czyści pole kurs i waluta, gdy POZ.SUMW=0
::   WE: _a - ref DOK-a
::   WY: _wyn - obiekt (0,0) jezeli nie ma pozycji, wpp obiekt (sumaWn,sumaMa) pozycji bilansowych lub w przypadku
::              braku pozycji bilansowych a wystepuja pozycje pozabilansowe (1,1)
::  OLD: \spr_dekr/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new(2);
_wyn[1]:=_wyn[2]:=0;
KS.cntx_psh();
KS.index('SYM');
POMOC.OKR().ROK();
KS.prefix(ROK_F.ref());
DOK.cntx_psh(); POZ.cntx_psh();
POZ.index('DOK');
POZ.prefix(_a);
{? POZ.first()
|| _poz:=1; _nx:=0;
   {!
   |?
      {? POZ.SUMW=0 || POZ.WAL:=null; POZ.KURS:=0 ?};
      {? POZ.SUM<>0
      || _bilans:=(KS.find_key(ROK_F.SYNT+POZ.KON) & (1+KS.TYP)<>'P');
         _wyn[1]+={? POZ.STR='Wn' || {? _bilans || POZ.SUM || 0 ?} || 0 ?} $2;
         _wyn[2]+={? POZ.STR='Ma' || {? _bilans || POZ.SUM || 0 ?} || 0 ?} $2;
         POZ.POZ:=_poz; POZ.put(1); _poz+=1;
         _nx:=POZ.next()
      || {? ~POZ.count()
         || POZ.cntx_psh(); _nx:=POZ.next(); POZ.cntx_pop(); POZ.del()
         || exec('usun_p_v','dok_fks_aut_dok',POZ.ref());
            POZ.cntx_psh(); _nx:=POZ.next(); POZ.cntx_pop(); POZ.del()
         ?}
      ?};
      _nx
   !};
   {? POZ.first() & _wyn[1]=0 & _wyn[2]=0 || _wyn[1]:=_wyn[2]:=1 ?}
|| DOK.prefix();
   {? DOK.seek(_a) || _wyn[1]:=_wyn[2]:=DOK.DOK_REJ().PUDEK='T' ?}
?};
DOK.cntx_pop(); POZ.cntx_pop();
KS.cntx_pop();
_wyn


\usun_p_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: usuwa pozycje powiazana
::   WE: _a - ref POZ-a
::  OLD: \usun_p_v/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
P_V.index('P_V');
P_V.prefix(_a);
{? P_V.first() || {! |? P_V.del() !} ?}


\add_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: dodaje calutki dokument
::   WE:   _a  #FAKS.ref #ND.ref #SRDO.ref #ODD - unikalny identyfikator ksiegowanej operacji
::         _b Rodzaj dekretacji
::   WY:   zwraca ref DOK-a jezeli udalo sie dodac dokument, null - w p.p.
::  OLD: \add_dok/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_dok:=null; _dok_vat:=0; _p308:=PAR_SKID.get(308)<>'N';
{? _p308
|| _tsv:=sql('select distinct RDK, STV, RVAT, GRV, OKR, SPW, DSPR, REF_PROJ from :_a order by 1,2,3,4,5,6,7 ',Qpksg)
|| _tsv:=sql('select distinct RDK, STV, RVAT, GRV, OKR, SPW, REF_PROJ from :_a order by 1,2,3,4,5,6 ',Qpksg)
?};

_projplug:=Plugin.runnable('PROJ_REF_BUF');
{? _projplug ||  _RDK:=0; _STV:=_RVAT:=_GRV:=_OKR:=_SPW:=''; _DSPR:=date(0,0,0) ?};

{? (EKSG.SYS='PPL' | EKSG.SYS='KAS') & var_pres('optym')=type_of(0) & optym
|| _acr:=Qpksg.ndx_tmp('',0,'RDK',,0,'STV',,0,'STV',,0,'RVAT',,0,'GRV',,0,'OKR',,0,'SPW',,0
                       ,'LST',,0,'RUB',,0)
|| {? _p308
   || _acr:=Qpksg.ndx_tmp('',0,'RDK',,0,'STV',,0,'STV',,0,'RVAT',,0,'GRV',,0,'OKR',,0,'SPW',,0,'DSPR',,0)
   || _acr:=Qpksg.ndx_tmp('',0,'RDK',,0,'STV',,0,'STV',,0,'RVAT',,0,'GRV',,0,'OKR',,0,'SPW',,0)
   ?}
?};
:: pomocniczy podgląd kwot do dekretacji
{? 0
|| Qpksg.index(_acr); Qpksg.prefix();
   _win:=Qpksg.mk_sel();  Qpksg.win_sel(_win);
   Qpksg.win_fld(_win,,'KON'); Qpksg.win_fld(_win,,'STR');
   Qpksg.win_fld(_win,,'NET',,,19); Qpksg.win_fld(_win,,'VAT',,,19); Qpksg.win_fld(_win,,'BRT',,,19);
   Qpksg.win_fld(_win,,'SUM',,,19); Qpksg.win_fld(_win,,'DEK',,,19);
   Qpksg.select()
?};
_tsv.prefix(_a);
{? _tsv.first()
||
:: dodajemy naglowek
   _numerek:=exec('dok_nr','dok_fks_aut_dok',EKSG.REJ);
   {? type_of(_numerek)<>2
   || EKSG.DOK_NR:=_numerek;
      _newrek:=1;
      do();
      _dok:=exec('dok_nagl','dok_fks_aut_dok',_b,0,_a);
      _slu:=exec('FindInSet','#table','SLU','NAZ','~STAWKI VAT '+
          {? DOK.JORG<>null()
          || DOK.KRAJ().KOD
          || {? KSTE.KRAJ<>null || KSTE.KRAJ().KOD || INFO.KRAJ().KOD ?}
          ?}
          );
      DOK.cntx_psh();
      {? _dok<>null & (DOK.clear(); DOK.seek(_dok))
      || _dok_vat:=DOK.DOK_REJ().SLO().KOD='VAT' | SLO.KOD='SAD';
         _b_poz:=DOK_REJ.PUDEK='N';
         {!
         |?
::       dodajemy pozycje VPOZ-y,POZ-y i P_V
            {? _projplug &
               (_RDK<>_tsv.RDK | _STV<>_tsv.STV | _RVAT<>_tsv.RVAT | _GRV<>_tsv.GRV
                | _OKR<>_tsv.OKR | _SPW<>_tsv.SPW | (_p308=0 | _DSPR<>_tsv.DSPR))
            || _RDK:=_tsv.RDK; _STV:=_tsv.STV; _RVAT:=_tsv.RVAT; _GRV:=_tsv.GRV; _OKR:=_tsv.OKR; _SPW:=_tsv.SPW;
               _DSPR:=_tsv.DSPR; _newrek:=1
            |? ~_projplug
            || _newrek:=1
            || _newrek:=0
            ?};
            {? _dok_vat & _tsv.STV<>'xxx'
            || Qpksg.cntx_psh();
               Qpksg.index(_acr);
               {? (EKSG.SYS='PPL' | EKSG.SYS='KAS') & var_pres('optym')=type_of(0) & optym
               || Qpksg.prefix(_a,_tsv.STV,_tsv.STV,_tsv.RVAT,_tsv.GRV,_tsv.OKR,_tsv.SPW)
               || {? _p308
                  || Qpksg.prefix(_a,_tsv.STV,_tsv.STV,_tsv.RVAT,_tsv.GRV,_tsv.OKR,_tsv.SPW,_tsv.DSPR)
                  || Qpksg.prefix(_a,_tsv.STV,_tsv.STV,_tsv.RVAT,_tsv.GRV,_tsv.OKR,_tsv.SPW)
                  ?}
               ?};
               {? Qpksg.first()
               || _net:=0; _vat:=0; _brt:=0; _wwl:=0; _vodl:=0; _vkoszt:=0;
                  {!
                  |?
                     _net+=Qpksg.NET; _vat+=Qpksg.VAT; _brt+=Qpksg.BRT;
                     {? Qpksg.BRT || _wwl+=Qpksg.WWL ?};
                     _vodl+=Qpksg.VAT_ODL; _vkoszt+=Qpksg.VATKOSZT;
                     Qpksg.next()
                  !};
:::       dla korekt nagłówkowych następuje zmiana znaku ...
                        _net:={? FAKS.WHERE='N' || -_net || _net ?};
                        _vat:={? FAKS.WHERE='N' || -_vat || _vat ?};
                        _brt:={? FAKS.WHERE='N' || -_brt || _brt ?};
                        _wwl:={? FAKS.WHERE='L'
                              || FAKS.KW_ZAL
                              |? FAKS.WHERE='N'
                              || -_wwl
                              || _wwl
                              ?};
                        _vodl:={? FAKS.WHERE='N' || -_vodl || _vodl ?};
                        _vkoszt:={? FAKS.WHERE='N' || -_vkoszt || _vkoszt ?};
                  {? Qpksg.first()
                  || {? _newrek
                     || _rpv:=exec('add_vpoz','dok_fks_aut_dok',_dok,exec('FindInSet','#table','SLO','SL',Qpksg.STV,_slu),Qpksg.RVAT,Qpksg.GRV,Qpksg.OKR,Qpksg.SPW,FAKS.WHERE='N',Qpksg.DSPR)
                     ?};
                     {!
                     |?
                        {? ~_projplug | Qpksg.REF_PROJ=_tsv.REF_PROJ
                        || Qpksg.P_V:=#_rpv; Qpksg.put(1);

                           'POZ + P_V';

                           {? Qpksg.DEK<>0
                           || _sum:=Qpksg.DEK
                           || _sum:=Qpksg.NET+Qpksg.VAT+Qpksg.BRT+Qpksg.SUM
                           ?};
                           _sum:={? FAKS.WHERE='N' || -_sum|| _sum ?};

                           _krs:={? Qpksg.NKR>0 || Qpksg.NKR || Qpksg.KRS ?};
                           opt_poz:=~Qpksg.WYR & Qpksg.OPT;
                           _kn:=Qpksg.KN & FAKS.WHERE='N';
                           {? Qpksg.KON<>'' & ~_kn
                           || _rpz:=exec('add_poz','dok_fks_aut_dok',Qpksg.KON,{? Qpksg.STR='W' || 'Wn' || 'Ma' ?},Qpksg.WWL,_sum,Qpksg.OPI,
                                 Qpksg.WAL,_krs,Qpksg.SYM,Qpksg.N_Z,Qpksg.DAT,_dok,#Qpksg.ref(),Qpksg.DAT_O,Qpksg.ODD,Qpksg.SPW,,Qpksg.REF_PROJ);
                              {? _b_poz & _rpz<>null || _b_poz:=0 ?};
                              {? Qpksg.WYR & _rpz<>null || exec('add_pow','dok_fks_aut_dok',_rpz,#Qpksg.ref()) ?};
                              exec('add_p_v','dok_fks_aut_dok',_rpv,_rpz);
                              {? _b='LS' | _b='LZ' || exec('poz2proj','dok_fks_aut_dok',_rpv) ?}
                           ?}
                        ?};
                        Qpksg.next()
                     !};
                     {? _b='LS' | _b='LZ' || exec('schxd_skidxd','dok_fks_aut_dok',_dok) ?};
                     {? _b='LS' | (_b='LZ' | _b='LP' | _b='LK' | _b='LX') & DEK_NAG.VPOZ_STD='R'
                     || exec('akt_vpoz','dok_fks_aut_dok',_rpv,_net$2,_vat$2,_brt$2,FAKS.WAL,FAKS.KRS,_wwl,_vodl,_vkoszt)
                     ?}
                  ?}
               ?};
               Qpksg.cntx_pop()
            ||
               Qpksg.cntx_psh();
               Qpksg.index(_acr);
               {? (EKSG.SYS='PPL' | EKSG.SYS='KAS') & var_pres('optym')=type_of(0) & optym
               || Qpksg.prefix(_a,_tsv.STV,_tsv.STV,_tsv.RVAT,_tsv.GRV,_tsv.OKR,_tsv.SPW)
               || {? _p308
                  || Qpksg.prefix(_a,_tsv.STV,_tsv.STV,_tsv.RVAT,_tsv.GRV,_tsv.OKR,_tsv.SPW,_tsv.DSPR)
                  || Qpksg.prefix(_a,_tsv.STV,_tsv.STV,_tsv.RVAT,_tsv.GRV,_tsv.OKR,_tsv.SPW)
                  ?}
               ?};
               {? Qpksg.first()
               || {!
                  |? _sum:=Qpksg.NET+Qpksg.VAT+Qpksg.BRT+Qpksg.SUM;
                     opt_poz:=~Qpksg.WYR & Qpksg.OPT;
                     {? Qpksg.KON<>''
                     || _rpz:=exec('add_poz','dok_fks_aut_dok',Qpksg.KON,{? Qpksg.STR='W' || 'Wn' || 'Ma' ?},Qpksg.WWL,_sum,Qpksg.OPI,
                           Qpksg.WAL,Qpksg.KRS,Qpksg.SYM,Qpksg.N_Z,Qpksg.DAT,_dok,#Qpksg.ref(),Qpksg.DAT_O,Qpksg.ODD,
                           Qpksg.SPW,Qpksg.SYM_ROK,Qpksg.REF_PROJ
                        );
                        {? _b_poz & _rpz<>null || _b_poz:=0 ?};
                        {? Qpksg.WYR & _rpz<>null || exec('add_pow','dok_fks_aut_dok',_rpz,#Qpksg.ref()) ?}
                     ?};

                     Qpksg.next()
                  !}
               ?};
               Qpksg.cntx_pop()
            ?};

            _tsv.next()
         !};
         {? _b_poz & EKSG.ETRB='T'
         || exec('add_err','dok_fks_aut_dok','','Brak dekretów w dokumencie księgowym.',EKSG.RODZ);
            undo()
         ?};
::    [mz] aktualizacja VPOZ dla standordowych dok. VAT
         {? (DOK.DOK_REJ().SLO().KOD='VAT' | SLO.KOD='SAD') &
            (_b='LS' | _b='LZ' | _b='LP' | _b='LK' | _b='LX')
         || {? DEK_NAG.VPOZ_STD='P'
            || exec('sv2vpoz','dok_fks_aut_dok',_dok)
            || VPOZ.prefix(_dok);
               {? VPOZ.first()
               || {!
                  |? {? VPOZ.NETTO=0 & VPOZ.VAT=0 & VPOZ.BRUTTO=0
                     || P_V.index('V_P');
                        P_V.prefix(VPOZ.ref());
                        {? P_V.first()
                        || {!|? P_V.del() !};
                           VPOZ.del()
                        ?}
                     || VPOZ.next()
                     ?}
                  !}
               ?}
            ?}
         ?};
         {? (DOK.DOK_REJ().SLO().KOD='VAT' | SLO.KOD='SAD') & var_pres('_rpv')>0 & _rpv<>0
         || exec('spr_okr_vat','dok_fks_aut_dok',_rpv)
         ?};
         exec('upd_vpoz_wal','dok_fks_aut_dok');
        {? _dok_vat & 1+_b='L' & DOK.get() & DOK.DOK_REJ().KOR_NAG<>'T'
        || DOK.SUMWAL:=exec('dok_sumwal','dok_fks_aut_dok');
           DOK.put()
        ?}
      |? EKSG.ETRB<>'B'
      || {? do_state()=1 || exec('add_err','dok_fks_aut_dok','01','',_b); undo() ?}
      || ''
      ?};
      DOK.cntx_pop();
      {? (1+_b)<>'S' & _b<>'EW' & _b<>'ET' & ~-_b<>'KL' & _b<>'LP' & _b<>'LK' & _b<>'LX' || {? ~end() || _dok:=null() ?} ?}
   || exec('add_err','dok_fks_aut_dok','09','',_b)
   ?}
|| 'blad = brak pozycji'
?};
Qpksg.ndx_drop(_acr);
VAR_DEL.delete('opt_poz');
_dok


\spr_okr_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [BZ] [12.41]
:: OPIS: Formula aktualizauje okres VAT w naglowku dokumentu na podstawie ustawionych okresow w pozycjach VAT dokumentu
::   WE: _a - ref VPOZ-a dokumentu
::----------------------------------------------------------------------------------------------------------------------
VPOZ.cntx_psh(); VPOZ.prefix();
{? VPOZ.seek(_a) || exec('dok_akt','fks_vat') ?};
VPOZ.cntx_pop()


\add_vpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: dodaje nowego VPOZ-a
::   WE: _a - DOK.ref
::       _b - SLO.ref - procent VAT
::       _c - symbol rejestru VAT
::       _d - symbol grupy podatkowej
::       _e - ref SQL-owy okresu VAT
::       _f - wymagany split payment
::       _g - czy korekta nagłówkowa
::       _h - data sprzedaży
::   WY: VPOZ.ref() lub 0 jesli nie zostal dodany
::  OLD: \add_vpoz/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
VPOZ.prefix();
VPOZ.blank();
VPOZ.DOK:=_a;
VPOZ.PR:=_b;
VPOZ.D:=_h;
VPOZ.RVAT:=exec('bl_rejva','dok_fks_aut_dok',_c);
VPOZ.GRVAT:=exec('bl_grvat','dok_fks_aut_dok',_d);
VPOZ.Z:='T';
{? var_press('_f')>0
|| VPOZ.SP_WYM:={? _f='T' || 'W' || 'T' ?}
?};
{? var_press('_g')>0 & _g || VPOZ.KNAG:=2 ?};
exec('przypvat','dok_fks_aut_dok',_e);
{? VPOZ.add(1)
|| VPOZ.ref()
|| {? EKSG.ETRB<>'B' || exec('add_err','dok_fks_aut_dok','02','',EKSG.RODZ) ?}; undo(); 0
?}


\przypvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: rozpisuje POZ-a na kilka wg projektow
::   WE: _a - ref SQL-owy formuly na okres VAT
::  OLD: \przypvat/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
VPOZ.OKRVAT:=VPOZ.DOK().OKRVAT;
VPOZ.A_VAT:=VPOZ.DOK().A_VAT;
VPOZ.OKR_C:=VPOZ.OKR_Z:=null;
{? _a<>'xxx'
|| OKRO_F.cntx_psh();
   OKRO_F.clear();
   {? OKRO_F.seek(BB.sqlint(_a),) || VPOZ.OKRVAT:=OKRO_F.ref ?};
   OKRO_F.cntx_pop()
?};
{? -DOK.DOK_REJ().KOR<>'t' & VPOZ.D<>date(0,0,0)
|| exec('okr_vpoz_d','dok_fks1')
?}


\bl_grvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: wartosc poczatkowa pola VPOZ.GR_VAT
::   WE: _a - symbol grupy podatkowej
::   WY: GR_VAT.ref() lub null
::  OLD: \bl_grvat/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null;
_grv:=_a;
{? _grv<>''
|| GR_VAT.index('REJ_KOD');
   GR_VAT.prefix(EKSG.REJ,_grv);
   {? GR_VAT.first()|| {! |? {? _grv=GR_VAT.KOD || _wyn:=GR_VAT.ref(); 0 || GR_VAT.next() ?} !} ?};
   {? _wyn=null
   || {? EKSG.ETRB<>'B' || exec('add_err','dok_fks_aut_dok','','Dla rejestru ('+EKSG.REJ().KOD+') nie znaleziono w słowniku grupy podatkowej: '+_grv,EKSG.RODZ) ?}
   ?}
?};
_wyn


\poz2proj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: rozpisuje POZ-a na kilka wg projektow
::   WE: _ref VPOZ-a
::  OLD: \poz2proj/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
Qyksg.clear(); {? ~Qyksg.first() || return(0) ?};

{? XINFO.SLU_PROJ=null
|| exec('add_err','dok_fks_aut_dok','41','',EKSG.RODZ); undo()
|| {? XINFO.SLU_PROJ().WZ<>'Projekty_symbol' & SLU.WZ<>'Projekty_id'
   || exec('add_err','dok_fks_aut_dok','43','',EKSG.RODZ); undo()
   ?}
?};
Qyksg.clear();
{? Qyksg.first()
|| {!
   |? {? Qyksg.POZ<>'' & Qyksg.FAP<>''
      || POZ.cntx_psh();
         POZ.clear();
         {? POZ.seek(BB.sqlint(Qyksg.POZ),) & POZ.SLO_PROJ=null
         || POZ.get();
            POZ.DOK;
            _sum:=POZ.SUM;
            _sumw:=POZ.SUMW;
            _roz:=0;
            _rozw:=0;
            _next:=0;
::          suma wartosci na projektach
            _sump:=0;
            PROJ2FAP.index('FAP');
            PROJ2FAP.prefix('N','P',exec('FindAndGet','#table',FAP,Qyksg.FAP,,,null()));
            {? PROJ2FAP.last()
            || {! |? _sump+=PROJ2FAP.W; PROJ2FAP.prev() !};
               {? _sump<>0
               || {!
                  |? _wsp:=PROJ2FAP.W/_sump;
                     POZ.SLO_PROJ:=exec('slo_proj','dok_fks_aut_dok',PROJ2FAP.PROJEKTY);
                     POZ.SUM:=_wsp*_sum $2;
                     POZ.SUMW:=_wsp*_sumw $2;
                     {? _next
                     || POZ.POZ:=exec('bl_poz','dok_fks');
                        {? ~POZ.add(1)
                        || {? EKSG.ETRB<>'B' || exec('add_err','dok_fks_aut_dok','10','',EKSG.RODZ) ?}; undo()
                        ||
::                         dodanie powiazan do P_V
                           exec('add_p_v','dok_fks_aut_dok',_a,POZ.ref())
                        ?}
                     || _next:=1;
                        {? ~POZ.put(1)
                        || {? EKSG.ETRB<>'B' || exec('add_err','dok_fks_aut_dok','10','',EKSG.RODZ) ?}; undo()
                        ?}
                     ?};
                     _roz+=POZ.SUM;
                     _rozw+=POZ.SUMW;
                     PROJ2FAP.next()
                  !}
               ?}
            ?}
         ?};
         POZ.cntx_pop()
      ?};
      Qyksg.next()
   !}
?}


\slo_proj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: rozpisuje POZ-a na kilka wg projektow
::   WE: _a - ref PROJEKTU
::   WY: ref - SLO lub null
::  OLD: \slo_proj/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null;
PROJEKTY.cntx_psh();
PROJEKTY.clear();
{? PROJEKTY.seek(_a)
|| SLO.index('SL'); SLO.prefix(XINFO.SLU_PROJ);
   _kod:={? XINFO.SLU_PROJ().WZ='Projekty_symbol' || PROJEKTY.SYM || form(PROJEKTY.ID_KSG,-SLU.DL,,'1')
 ?};
   {? SLO.find_key(_kod,)
   || _wyn:=SLO.ref()
   || SLO.blank(1);
      SLO.SLU:=XINFO.SLU_PROJ;
      SLO.KOD:=_kod;
      SLO.TR:=PROJEKTY.NAZWA;
      {? SLO.add(1) || _wyn:=SLO.ref() ?}
   ?}
?};
PROJEKTY.cntx_pop();
{? _wyn=null || exec('add_err','dok_fks_aut_dok','42','',EKSG.RODZ); undo() ?};
_wyn


\schxd_skidxd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [BZ] [2012]
:: OPIS: Przepisuje podzialy dla controllingu
::   WE: _a - ref dokumentu
::  OLD: \schxd_skidxd/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ref_fak')>0 & ref_fak
|| SKIDXD.cntx_psh(); SKIDXD.prefix();
   FAKS.cntx_psh(); FAKS.use(ref_name(ref_fak)); FAKS.prefix();
   {? FAKS.seek(ref_fak)
   || SCH_XD.cntx_psh(); SCH_XD.use('scxd_'+(FAKS.name()+3));
      SCH_XD.index('FAKS'); SCH_XD.prefix(FAKS.ref());
      {? SCH_XD.first()
      || {! |?
            SKIDXD.blank();
            SKIDXD.DOK:=_a;
            SKIDXD.SKID_MB:=SCH_XD.SKID_MB;
            SKIDXD.PBUD:=SCH_XD.PBUD;
            SKIDXD.JORG:=SCH_XD.JORG;
            SKIDXD.OKOSZ:=SCH_XD.OKOSZ;
            SKIDXD.WYM4:=SCH_XD.WYM4;
            SKIDXD.WYM5:=SCH_XD.WYM5;
            SKIDXD.WAL:=SCH_XD.WAL;
            {? ~SKIDXD.WAL || SKIDXD.WAL:=exec('wal_nar','dok_fks') ?};
            SKIDXD.KURS:=SCH_XD.KURS;
            SKIDXD.JM:=SCH_XD.JM;
            SKIDXD.WART:=SCH_XD.WART;
            SKIDXD.WARTW:=SCH_XD.WARTW;
            SKIDXD.GEN_AUT:='N';
            SKIDXD.add();
            SCH_XD.next()
         !}
      ?};
      SCH_XD.cntx_pop()
   ?};
   FAKS.cntx_pop(); SKIDXD.cntx_pop()
?}


\add_p_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: dodaje zapis do tabeli P_V
::  OLD: \add_p_v/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
P_V.prefix();
P_V.blank();
P_V.VPOZ:=_a;
P_V.POZ:=_b;
P_V.TMPPOZ:=0;
{? _b<>null
|| P_V.add(1)
|? _b=null() & _a<>null()
|| P_V.VPOZ();
   VPOZ.Z:='';
   VPOZ.put
?}


\dok_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: nadaje numer dla doka
::  OLD: \dok_nr/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
DOK.cntx_psh(); DOK.index('REJ'); DOK.prefix(_a);
_sadok:=DOK.size();
_wyn:={? ~DOK.last() || 1 || DOK.NR+1 ?};
{? _sadok & _wyn=1 || _wyn:='' ?};
DOK.cntx_pop();
_wyn


\sv2vpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2006]
:: OPIS: aktualizuje VPOZ-a dla standardowego dok. VAT na podstawie tab. FAKSV - stawki VAT
::       księgowany dokument jest w buforze
::   WE:  _a - DOK.ref
::  OLD: \sv2vpoz/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
VPOZ.cntx_psh; VPOZ.index('VDPR_SP');
FAKS.cntx_psh();
:: UWAGA księgowany dokument jest w buforze
:: zamiast po FAKSV mozna utworzyc petle po FAP - wg stawek VAT
:{? FAKS.KZ<>'' || FAKS.prefix(); FAKS.seek(FAKS.KZ) ?};
{? FAKS.SZ='S'
|| FAKSV.index('FF_SV');
   FAKSV.prefix('',$FAKS.ref())
|| FAKSV.index('FAKS_SV');
   FAKSV.prefix($FAKS.ref())
?};
 _obj:=exec('obj_fv_sp','dok_fks_aut_dok');
 _obj.create($FAKS.ref());

{? FAKSV.first() & _obj.first('')
|| {!
   |?
      {? FAKS.WHERE='L'
::    faktury zaliczkowe
      ||
         _wn:=FAKSV.WN_Z;
         _wv:=FAKSV.WV_Z;
         _wb:=FAKSV.WB_Z;
         _ww:=FAKSV.WW_Z
      |? FAKS.SZ='S' & FAKS.T().KOR<>'T'
::    faktury sprzedazy
      ||
         FAPOW.cntx_psh;
         FAPOW.index('END_K'); FAPOW.prefix($FAKS.ref);
         {? FAPOW.first
::       faktury rozliczajace
         ||
            _wn:=FAKSV.WN_R;
            _wv:=FAKSV.WV_R;
            _wb:=FAKSV.WB_R;
            _ww:=FAKSV.WW_R
::       faktury pozostale
         ||
            {? (FAKS.PROC().PROCED<>'' & FAKS.WAL=INFO.NAROD)
               | (FAKS.PROC().PROCED='' & FAKS.NWAL=INFO.NAROD)
            ||  _wn:=FAKSV.WN-FAKSV.WN_Z;
                _wv:=FAKSV.WV-FAKSV.WV_Z;
                _wb:=FAKSV.WB-FAKSV.WB_Z;
                _ww:={? FAKS.T().EXPORT='T'
                     || FAKSV.WW
                     |? FAKS.WAL<>INFO.NAROD & FAKS.KRS
                     || _jedn:=exec('jed_wal','waluty',FAKS.WAL().KOD);
                        (FAKSV.WB/FAKS.KRS)*_jedn$2
                     || FAKSV.WW
                     ?};
                _ww:=_ww-FAKSV.WW_Z
            ||
               _wn:=FAKSV.WWN-FAKSV.WWN_Z;
               _wv:=FAKSV.WWV-FAKSV.WWV_Z;
               _wb:=FAKSV.WW-FAKSV.WW_Z;
               _ww:=FAKSV.WW;
               _ww:=_ww-FAKSV.WW_Z
            ?}
         ?};
         FAPOW.cntx_pop
::    dokumenty zakupowe i korekty sprzedazy
      ||
         _wn:=FAKSV.WN;
         _wv:=FAKSV.WV;
         _wb:=FAKSV.WB;
         _ww:={? FAKS.WAL<>INFO.NAROD & FAKS.KRS
              || _jedn:=exec('jed_wal','waluty',FAKS.WAL().KOD);
                 (FAKSV.WB/FAKS.KRS)*_jedn$2
              || FAKSV.WW
              ?}
      ?};
      {? _wn=0 & _wv=0 & _wb=0
      ||
         VPOZ.prefix(_a,FAKSV.SV);
         {? VPOZ.first()
         ||
            P_V.index('V_P');
            P_V.prefix(VPOZ.ref());
            {? P_V.first()
            ||
               {!|? P_V.del() !};
               VPOZ.del()
            ?}
         ?}
      ||
         VPOZ.prefix(_a,FAKSV.SV,{? _obj.SP_WYM='T' || 'W' || 'T' ?},);
         {? VPOZ.first()
         || {? PAR_SKID.get(308)='T' & ~exec('sprvpozd','dok_fks',_a)
            ||
               _tt:=sql('select SV,SP,D, SUM(N) as N, SUM(B) as B from :_a group by SV, SP, D order by D',
                         sql('select FAP.SV SV, FAP.SP_WYM SP, FAP.D as D, FAP.WN as N, FAP.WB as B from FAP where FAKS=\':_a\' and SV=\':_b\'',$FAKS.ref(),$FAKSV.SV));
               _tt.prefix(VPOZ.D);
               _ok:={? _tt.first()
                    || 1
                    |? VPOZ.D=DOK.DOP
                    || _tt.prefix(date(0,0,0));
                       _ok:=_tt.first()
                    || 0
                    ?};
               {? _ok
               || _wsp:={? FAKS.T().FIS='T' || _tt.B/_wb || _tt.N/_wn ?};
                  _wb:=_wb*_wsp; _wn:=_wn*_wsp; _wv:=_wv*_wsp; _ww:=_ww*_wsp
               ?};
               &_tt
            ?};
            exec('akt_vpoz','dok_fks_aut_dok',VPOZ.ref,_wn$2,_wv$2,_wb$2,FAKSV.WAL,FAKS.KRS,_ww)
         ||
            {? EKSG.ETRB<>'B' || exec('add_err','dok_fks_aut_dok','02','',EKSG.RODZ) ?};
            undo()
         ?}
      ?};
      _obj.next()
   !}
?};
VPOZ.cntx_pop(); FAKS.cntx_pop();
1


\akt_vpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: aktualizuje VPOZ-a gdy niestandardowy dok. VAT
::   WE: _a VPOZ.ref()
::       _b netto
::       _c vat
::       _d brutto
::       _e waluta
::       _f kurs
::       _g wartosc w walucie
::       _h vat do odliczenia (przekazywana wartosc w przypadku dekretacji rozszezonej z systemu logistyka)
::       _i vat bez odliczenia (przekazywana wartosc w przypadku dekretacji rozszezonej z systemu logistyka)
::  OLD: \akt_vpoz/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_narod:=FINFO.NAROD;
VPOZ.prefix();
{? VPOZ.seek(_a)
|| VPOZ.NETTO:=_b;
   VPOZ.VAT:=_c;
   VPOZ.BRUTTO:=_d;
   {? _narod<>_e & EKSG.REJ().WAL='T'
   || VPOZ.WARW:=_g;
      VPOZ.KURS:=_f
   ?};
   {? DEK_NAG.VPOZ_STD='R' & PAR_SKID.get(83)='T'
      &  exec('gr_pod_typ','dok_fks',VPOZ.GRVAT().GRVAT().KOD)=1
   || VPOZ.VAT_ODL:=_h;
      VPOZ.VATKOSZT:=_i;
      {? ~(SLO.KOD='ZakuPods' | SLO.KOD='ZInwPods')
      || VPOZ.C_PREWSK:=VPOZ.C_PROC_S:=1
      || VPOZ.C_PREWSK:=VPOZ.C_PROC_S:=0
      ?}
   || ROZNE.GRVAT:=null();
      exec('ae_grvat','dok_fks')
   ?};
   {? VPOZ.put(1)
   || 1
   || {? EKSG.ETRB<>'B' || exec('add_err','dok_fks_aut_dok','02','',EKSG.RODZ) ?}; undo(); 0
   ?}
?}


\add_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: dodaje wartosci wyroznikow pod POZ-em
::  OLD: \add_pow/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
Qxksg.clear();
Qxksg.prefix(_b);
{? Qxksg.first()
|| {!
   |? _sla:=exec('FindInSet','#table','SLUAPPL','NAZ',Qxksg.SLW,'F',,1);
      _slu:=exec('FindInSet','#table','SLU','NAZ',Qxksg.SLW,,,1);
      _slo:={? _slu<>null || exec('FindInSet','#table','SLO','SL',Qxksg.KOW,_slu,,1) || null ?};
      POW.index('POZ');
      POW.prefix();
      {? POW.find_key(_a,Qxksg.POW,_sla,_slo)
      || POW.KW+=Qxksg.WOW;
         {? POW.put(1) || 1 || {? EKSG.ETRB<>'B' || exec('add_err','dok_fks_aut_dok','04','',EKSG.RODZ) ?}; undo(); 0 ?}
      || POW.blank();
         POW.POZ:=_a;
         POW.LP:=Qxksg.POW;
         POW.SLU:=_sla;
         POW.SLO:=_slo;
         POW.KW:=Qxksg.WOW;
         {? POW.add(1) || 1 || {? EKSG.ETRB<>'B' || exec('add_err','dok_fks_aut_dok','04','',EKSG.RODZ) ?}; undo(); 0 ?}
      ?};
      Qxksg.next()
   !}
?}


\add_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: dodaje 1 pozycje dekretu - POZ-a
::   WE: _a - konto
::       _b - strona
::       _c - kwota walutowa
::       _d - kwota
::       _e - opis
::       _f - waluta
::       _g - kurs waluty
::       _h - identyfikator
::       _i - TId
::       _j - data
::       _k - ref DOK-a
::       _l - ref Qpksg (do sprawdzenia projektow)
::       _m - data otwarcia
::       _n - jedn. ksiegowa
::       _o - wymagany split payment
::       _p - sym_rok rozrachunku
::       _q - ref projektu (string)
::   WY: _wyn - ref POZ-a
::  OLD: \add_poz/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null;
{? _<13 || _m:=date(0,0,0) ?};
{? _<14 || _n:='' ?};
{? _>=5  || {? type_of(_e)<>2 || _e:='' ?}   || _e:='' ?};
{? _>=6
||
   {? type_of(_f)<>2
   || _f:=null
   || {? _f='PLN' || _f:=null ?}
   ?}
|| _f:=null
?};

{? type_of(_f)=2 & _f<>''
|| {? (_f:=exec('FindInSet','#table','SLO','SL',_f,exec('FindInSet','#table','SLU','NAZ','WALUTY')))=null
   || FUN.info('Brak waluty %1 w słowniku walut.'@[_f])
   ?}
|| _f:=null
?};
_sym_rok:={? var_pres('_p')>0 || _p || '' ?};
_spw:={? var_press('_o')>0
      || _ksp:=exec('czy_konto_sp','konto',_a);
         {? _ksp='T' || _ksp:={? _f=null | _f=FINFO.NAROD || 'T' || 'N' ?} ?};
         {? _ksp='N' || 'N' |? _o='T' || 'W' || 'T' ?}
      || 'N'
      ?};

POZ.index('D_KON');
{? _h=''
|| POZ.prefix(_k,_f,_a,)
|| POZ.prefix(_k,_f,_a,_h,_spw,)
?};

{? (EKSG.SYS='LSP' | EKSG.SYS='LMG' | EKSG.SYS='LZK') & opt_poz & exec('find_poz','dok_fks_aut_dok',_b)
   & $POZ.PROJEKT=_q
|| POZ.SUMW+={? exec('FindInSet','#table','KS','SYM',POMOC.OKR().ROK().SYNT+POZ.KON,ROK_F.ref(),"KS.WIELO")='T'
             || _c$2
             || 0
             ?};
   POZ.SUM+=_d$2;
   _wyn:={? POZ.put(1)
         || exec('gen_pro','dok_fks_aut_dok',_l,'',$POZ.ref());
            POZ.ref()
         || {? EKSG.ETRB<>'B' || exec('add_err','dok_fks_aut_dok','03','',EKSG.RODZ) ?}; undo(); null
         ?}
|| POZ.prefix();
   POZ.blank();
   POZ.DOK:=_k;
   POZ.KON:=_a;
   POZ.STR:=_b;
   POZ.SUM:=_d$2;
   POZ.OP:=_e;
   {? exec('FindInSet','#table','KS','SYM',POMOC.OKR().ROK().SYNT+POZ.KON,ROK_F.ref(),"KS.WIELO",,,'')='T'
   || POZ.SUMW:=_c$2;
      POZ.WAL:=_f;
      POZ.KURS:=_g
   ?};
   POZ.ID:=_sym_zew:=_h;
   {? _sym_rok<>''
   || OP.cntx_psh();
      OP.index('KON_O'); OP.prefix({? POZ.WAL || POZ.WAL || FINFO.NAROD ?},POZ.ODD,POZ.KON,_sym_zew,_sym_zew,_sym_rok);
      {? OP.first()
      || _sym_zew:=OP.SYM_ZEW
      ?};
      OP.cntx_pop()
   ?};
   POZ.SYM_ZEW:=_sym_zew;
   POZ.A:='N';
   POZ.ZP:='N';
   POZ.ZK:='N';
:: szczegolowa data dla systemu EMAG, dla korekty, podmienia parametr przekazany _m
   _par74:=PAR_SKID.get(74);
   {? _par74='T' & (EKSG.RODZ='LS' | EKSG.RODZ='LK') & FAKS.FKSQL<>''
   || _m:=exec('FindAndGet','#table','FAKS',FAKS.FKSQL,,"DW",'')
   ?};
   {? POZ.ID<>''
   ||
::    pozycje rozrachunkowe
      POZ.TID:=_i;
      {? _n<>'' & |POZ.ID<>'' || POZ.ODD:=exec('FindInSet','#table','ODD','ODDZIALY',_n,REF.FIRMA,,1) ?};
      {? POZ.ODD=null & |POZ.ID<>'' || POZ.ODD:=DOK.ODD ?};
      POZ.DATA_R:=exec('dat_otw','dok_fks');
      _par42:=PAR_SKID.get(42);
      {? EKSG.SYS='PPL' & _par42='N'
      || exec('ustaw_roz','dok_fks',2)
      || POZ.DO:=DOK.DTW;
         POZ.SYM_ROK:=exec('op_unik_sym','rozrach',POZ.ID,POZ.DO);
         {? _j=date(0,0,0)
         || {? EKSG.RODZ='LM'
            || POZ.TP:=ND.D
            |? EKSG.RODZ='LS' | EKSG.RODZ='LZ' | EKSG.RODZ='LP' | EKSG.RODZ='LK' | EKSG.RODZ='LX'
            || POZ.TP:=FAKS.TZ
            ?}
         || POZ.TP:=_j
         ?}
      ?};
::    dla paragonow zbiorczych daty sa rowne do terminu platnosci
      {? EKSG.RODZ='LP' || POZ.DATA_R:=POZ.DO:=POZ.TP ?};
      {? _m<>date(0,0,0)
      || POZ.DO:=_m
      ?};
::    dla korekt nagłówkowych
      {? EKSG.RODZ='LS' & DOK.DOK_REJ().KOR_NAG='T'
      || {? POZ.ID<>DOK.NK & FAKS.FKSQL<>''
         || POZ.DO:=exec('FindAndGet','#table','FAKS',FAKS.FKSQL,,"DW",'');
            POZ.TP:=exec('FindAndGet','#table','FAKS',FAKS.FKSQL,,"TZ",'')
         || POZ.DO:=FAKS.DW;
            POZ.TP:=FAKS.TZ
         ?}
      ?};
      POZ.SP_WYM:=_spw
   ||
::    pozycje nierozrachunkowe
      POZ.TID:=POZ.SYM_ROK:='';
      POZ.ODD:=null;
      POZ.DO:=POZ.TP:=date(0,0,0);
      POZ.SP_WYM:='N'
   ?};
   POZ.KOM:=exec('koment','konto',_a);
   POZ.VAT:=null;

   {? var_pres('_q')>0 & _q<>''
   || PROJEKTY.cntx_psh();
      PROJEKTY.prefix();
      {? PROJEKTY.seek(BIT.sqlint(_q))
      || POZ.PROJEKT:=PROJEKTY.ref()
      ?};
      PROJEKTY.cntx_pop()
   ?};

   {? Plugin.runnable('POZ_ADD')
   || Plugin.run('POZ_ADD')
   ?};

   _wyn:={? (POZ.SUM<>0 | POZ.SUMW<>0)
         || {? POZ.add(1)
            || exec('gen_pro','dok_fks_aut_dok',_l,'',$POZ.ref());
               {? POZ.ID<>'' & (EKSG.RODZ='LS' | EKSG.RODZ='LZ') & POZ.DOK().DOK_REJ().PR='T' || exec('add_dr_b','dok_fks_aut_dok',null,POZ.ref) ?};
               POZ.ref()
            || {? EKSG.ETRB<>'B' || exec('add_err','dok_fks_aut_dok','03','',EKSG.RODZ) ?}; undo(); null
            ?}
         || null
         ?}
?};
_wyn


\bl_rejdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: wartosc poczatkowa pola DOK.DOK_REJ
::   WE: [_a] - domyslny 0/10(raty) prosty 1/11(raty)
::   WY: DOK_REJ.ref() lub null
::  OLD: \bl_rejdo/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
_wyn:=null;
{? DEK_NAG.SDREJ='S'
|| DEK_STAL.index('ODD_REJ');
   DEK_STAL.prefix();
   _wyn:={? DEK_STAL.find_key(DEK_NAG.ref,EKSG.REJ().ODD,EKSG.REJ) || DEK_STAL.DOK_REJ(); DEK_STAL.DOK_REJ || null ?}
|| _drej:={? _a=0
          || {? DEK_NAG.F_DOK_RJ().FORMULA<>'' || ($DEK_NAG.F_DOK_RJ().FORMULA)() || '~~' ?}
          ?};
   DOK_REJ.index('NAZ');
   DOK_REJ.prefix(EKSG.REJ,_drej);
   {? DOK_REJ.first()|| {! |? {? _drej=DOK_REJ.NAZ || _wyn:=DOK_REJ.ref(); 0 || DOK_REJ.next() ?} !} ?};
   {? _wyn=null
   ||
      {? DOK_REJ.first()
      ||
         _wyn:=DOK_REJ.ref();
         {! |? {? _drej=(+_drej)+DOK_REJ.NAZ || _wyn:=DOK_REJ.ref(); 0 || DOK_REJ.next() ?} !}
      ?}
   ?}
?};
_wyn


\add_dr_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: dodanie platnosci do tabeli D_RB
::   WE: _a - ref DOK-a
::       _b - ref POZ-a
::  OLD: \add_dr_b/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
FAKSPL.index('TERM');
FAKSPL.prefix(FAKS.ref);
{? FAKSPL.last()
|| FAKSPL.FAKS;
   _dorozp:=exec('brutto','faktury_plat',FAKS.ref());
   {!
   |? D_RB.clear;
      D_RB.blank();
      D_RB.OKRO_F:=POMOC.OKR;
      D_RB.DOK:=_a;
      D_RB.POZ:=_b;
      D_RB.KTO:={? FAKS.SZ='S' || 'N' || 'S' ?};
      D_RB.FORMAPLA:=FAKSPL.PL;
      D_RB.TERMPLAT:=FAKSPL.TERMPLAT;
      {? _dorozp>=FAKSPL.WAR
      || _rozpisz:=FAKSPL.WAR;
         _dorozp-=_rozpisz
      |? FAKSPL.WAR>0
      || _rozpisz:=_dorozp;
         _dorozp:=0
      || _rozpisz:=0
      ?};
      {? _rozpisz<>0
      || D_RB.WAR:=_rozpisz;
         D_RB.add(1)
      ?};
      _dorozp>0 & FAKSPL.prev()
   !}
?}


\gen_pro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: wypelnia tabelke z projektami
::   WE: _a - wskazanie na pozycje dekretu
::       _b - wskazanie na FAP-a
::       _c - wskazanie na POZ-a lub pusty string
::  OLD: \gen_pro/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
Qyksg.clear;
Qyksg.prefix(_a);
{? _b<>'' & ~Qyksg.find_key(_b)
|| Qyksg.blank();
   Qyksg.KSG:=_a;
   Qyksg.FAP:=_b;
   Qyksg.add(1)
|? _c<>'' & Qyksg.first()
|| {! |? {? Qyksg.POZ='' || Qyksg.POZ:=_c; Qyksg.put(1) ?}; Qyksg.next() !}
?}


\find_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: wykorzystanie w add_poz ksg.fml
::       sprawdza czy wprowadzono juz pozycje dla tego konta i po tej stronie
::   WE: _a - strona
::   WY: 1/0
::  OLD: \find_poz/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? POZ.first()
|| {! |? {? POZ.STR=_a || _wyn:=1; 0 || POZ.next() ?} !}
?};
_wyn


\dok_nagl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula generacji naglowka dokumentu ksiegowego
::   WE: _a - rodzaj dekretacji
::       _b - typ dok.zrodlowego 0-domyslny 1-prosty
::       _c - #FAKS.ref #ND.ref #DOKU.ref #ODD - unikalny identyfikator ksiegowanej operacji
::   WY: DOK.ref
::  OLD: \dok_nagl/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_err:=0;
_wyn:=null;
DOK.prefix();
DOK.fld_fml('NR','BLANK',"");
DOK.fld_fml('RVAT','BLANK',"");
{? _a='EW'
|| DOK.blank();
   DOK.ODD:=EKSG.REF_ODD;
   DOK.REJ:=EKSG.REJ;
   DOK.DOK_REJ:=exec('bl_rejdo','dok_fks_aut_dok',0);
   {? DOK.DOK_REJ=null || _err:=1;  exec('add_err','dok_fks_aut_dok','07','',_a) ?};
   DOK.JPK_V_T:=exec('typ_dok','obiegi2');
   DOK.ZAR:=exec('zarejestrowal','dok_fks_aut_dok');
   DOK.SYSTEM:=EKSG.SYS;
   _sym:='';
   _sym:=exec('dok_symbol','dok_fks_aut_dok');
   {? _sym=''
   || SRST.cntx_psh();
      SRST.index('SROD');
      SRST.prefix(SRDO.SRSR,SSTALE.AO,SSTALE.AR);
      {? SRST.first() || _nri:=SRST.NRI ?};
      SRST.cntx_pop();
      _sym:={? SRDO.SYMBOL='' || SRDO.TYP().TYP+'/'+_nri || SRDO.SYMBOL ?}
   ?};
   _sym_zew:=exec('dok_symzew','dok_fks_aut_dok');
   {? _sym_zew='' || _sym_zew:=_sym ?};
   DOK.NK:=_sym;
   DOK.SYM_ZEW:=_sym_zew;
   DOK.DOKZRODL:=$(#SRDO.ref());
   DOK.NR:=EKSG.DOK_NR;
   DOK.TR:=exec('dok_tr','dok_fks_aut_dok');
   {? DOK.TR='' || DOK.TR:=SRDO.UWAGI ?};
   DOK.DTW:=SRDO.DO;
   DOK.DOP:=SRDO.DO;
   DOK.DTO:=SRDO.DW;
   {? Plugin.exists('DOK_DANE_DOD') || Plugin.run('DOK_DANE_DOD') ?};
   _wyn:={? ~_err & DOK.add(1)
         || SRDO.K:='T';
            SRDO.cntx_psh();
            SRDO.prefix();
            SRDO.put();
            SRDO.cntx_pop();
            DOK.ref()
         || undo(); null
         ?}
|? _a='ET'
|| DOK.blank();
   DOK.ODD:=EKSG.REF_ODD;
   DOK.REJ:=EKSG.REJ;
   DOK.DOK_REJ:=exec('bl_rejdo','dok_fks_aut_dok',0);
   {? DOK.DOK_REJ=null || _err:=1;  exec('add_err','dok_fks_aut_dok','07','',_a) ?};
   DOK.JPK_V_T:=exec('typ_dok','obiegi2');
   _sym:=exec('dok_symbol','dok_fks_aut_dok');
   {? _sym=''
   || _sym:=SRDO.SYMBOL
   ?};
   _sym_zew:=exec('dok_symzew','dok_fks_aut_dok');
   {? _sym_zew='' || _sym_zew:=_sym ?};
   DOK.NK:=_sym;
   DOK.SYM_ZEW:=_sym_zew;
   DOK.DOKZRODL:=$(#SRDO.ref());
   DOK.ZAR:=exec('zarejestrowal','dok_fks_aut_dok');
   DOK.SYSTEM:=EKSG.SYS;
   DOK.NR:=EKSG.DOK_NR;
   DOK.TR:=exec('dok_tr','dok_fks_aut_dok');
   DOK.DTW:=SRDO.DW;
   DOK.DOP:=SRDO.DO;
   DOK.DTO:=SRDO.DO;
   {? Plugin.exists('DOK_DANE_DOD') || Plugin.run('DOK_DANE_DOD') ?};
   _wyn:={? ~_err & DOK.add(1)
         || SRDO.K:='T'; SRDO.put(); DOK.ref()
         || undo(); null
         ?}
|? _a='EP' | _a='EF' | | _a='ED'
|| DOK.blank();
   DOK.ODD:=EKSG.REF_ODD;
   DOK.REJ:=EKSG.REJ;
   DOK.DOK_REJ:=exec('bl_rejdo','dok_fks_aut_dok',0);
   {? DOK.DOK_REJ=null || _err:=1;  exec('add_err','dok_fks_aut_dok','07','',_a) ?};
   DOK.ZAR:=exec('zarejestrowal','dok_fks_aut_dok');
   DOK.SYSTEM:=EKSG.SYS;
   DOK.DOKZRODL:=_a+$(#SSTALE.AO);
   {? DOK.DOK_REJ=null || _err:=1;  exec('add_err','dok_fks_aut_dok','07','',_a)?};
   DOK.JPK_V_T:=exec('typ_dok','obiegi2');
   DOK.NR:=EKSG.DOK_NR;
   DOK.TR:=exec('dok_tr','dok_fks_aut_dok');
   {? DOK.TR=''
   || DOK.TR:={? _a='EP' || 'Amortyzacja podatkowa'
              |? _a='EF' || 'Amortyzacja bilansowa'
              |? _a='ED' || 'Amortyzacja dodatkowa'
              ?}
   ?};
   _sym:=exec('dok_symbol','dok_fks_aut_dok');
   {? _sym=''
   || exec('bedoksym','dok_fks');
      {? _sym=''
      || _sym:='Amor. '+{? _a='EP' || 'podat. '
                        |? _a='EF' || 'bilan. '
                        |? _a='ED' || 'dodat. '
                        ?}
                        +(3-(SSTALE.AO().KON$3))
      ?}
   ?};
   _sym_zew:=exec('dok_symzew','dok_fks_aut_dok');
   {? _sym_zew='' || _sym_zew:=_sym ?};
   DOK.NK:=_sym;
   DOK.SYM_ZEW:=_sym_zew;
   DOK.DTW:=DOK.DTO:=exec('bl_data','dok_fks_aut_dok',_a);
   DOK.DOP:=exec('blo_data','dok_fks_aut_dok',_a);
   {? DOK.DOP=date(0,0,0) || DOK.DOP:=DOK.DTO ?};
   {? Plugin.exists('DOK_DANE_DOD') || Plugin.run('DOK_DANE_DOD') ?};
   _wyn:={? ~_err & DOK.add(1)
         || DOK.ref()
         || undo(); null
         ?}
|? ~-_a='KL' | _a='KU'
|| REJ.cntx_psh();
   DOK.blank();
   DOK.ODD:=EKSG.REF_ODD;
   DOK.REJ:=EKSG.REJ;
   DOK.DOK_REJ:=exec('bl_rejdo','dok_fks_aut_dok',0);
   {? DOK.DOK_REJ=null || _err:=1;  exec('add_err','dok_fks_aut_dok','07','',_a) ?};
   DOK.JPK_V_T:=exec('typ_dok','obiegi2');
   DOK.ZAR:=exec('zarejestrowal','dok_fks_aut_dok');
   DOK.SYSTEM:=EKSG.SYS;
   DOK.NR:=EKSG.DOK_NR;
   _sym:=exec('dok_symbol','dok_fks_aut_dok');
   {? _sym=''
   || _sym:={? _a='KU'
            || 'ZLE'+(('0000'+$(OKRO_F.POCZ~1))+4)+(('00'+$(OKRO_F.POCZ~2))+2)
            || ~O.LT
            ?}
   ?};
   _sym_zew:=exec('dok_symzew','dok_fks_aut_dok');
   {? _sym_zew='' || _sym_zew:=_sym ?};
   DOK.NK:=_sym;
   DOK.SYM_ZEW:=_sym_zew;
   DOK.DTO:=DOK.DTW:=exec('bl_data','dok_fks_aut_dok',_a);
   DOK.DOP:=exec('blo_data','dok_fks_aut_dok',_a);
   {? DOK.DOP=date(0,0,0) || DOK.DOP:=DOK.DTO ?};
   DOK.TR:=exec('dok_tr','dok_fks_aut_dok');
   {? DOK.TR=''
   || DOK.TR:={? _a='KU'
              || _txt1:={? ~__optym || '('+form(RU.O)+')' || ' ' ?};
                 'Rachunki z umów '+_txt1+'za okres '+(('0000'+$(OKRO_F.POCZ~1))+4)+'-'+(('00'+$(OKRO_F.POCZ~2))+2)
              || 'Lista płac '+~O.LT
              ?}
   ?};
   {? Plugin.exists('DOK_DANE_DOD') || Plugin.run('DOK_DANE_DOD') ?};
   _wyn:={? ~_err & DOK.add(1)
         || DOK.ref()
         || undo(); null
         ?};
   REJ.cntx_pop()
|? _a='SN'
|| REJ.cntx_psh();
   DOK.prefix();
   DOK.blank();
   DOK.ODD:=EKSG.REF_ODD;
   DOK.REJ:=EKSG.REJ;
   DOK.DZ:={? DOK.REJ().CZY_DZ='T' || exec('ust_zb','dok_fks_aut_dok') || null ?};
   DOK.DOK_REJ:=exec('bl_rejdo','dok_fks_aut_dok',0);
   {? DOK.DOK_REJ=null || _err:=1;  exec('add_err','dok_fks_aut_dok','07','',_a) ?};
   DOK.JPK_V_T:=exec('typ_dok','obiegi2');
   DOK.NR:=EKSG.DOK_NR;
   DOK.ZAR:=exec('zarejestrowal','dok_fks_aut_dok');
   DOK.SYSTEM:=EKSG.SYS;
   _sym:=exec('dok_symbol','dok_fks_aut_dok');
   {? _sym=''
   || {? EKSG.REJ().CZY_DZ='T'
      || _sym:=DOKUMENT.TYP_DOK+'/'+$DOKUMENT.DOK_NUM
      || exec('czytaj','#stalesys',,KPARAM);
         _stanow:={? KPARAM.CZY_B='T' & STANKAS.SYM<>'' || 'ST'+STANKAS.SYM+'/' || 'ST'+form(STANKAS.KOD)+'/' ?};
         _sym:=_stanow+{? -STANKAS.CZY_KASA='t' || 'RK-' || 'RB-' ?}+form(RAPORT.NUM_RAP)
      ?}
   ?};
   _sym_zew:=exec('dok_symzew','dok_fks_aut_dok');
   {? _sym_zew='' || _sym_zew:=_sym ?};
   DOK.NK:=_sym;
   DOK.SYM_ZEW:=_sym_zew;
   SLOSLU.SLSLU:='';
   DOK.TR:=exec('dok_tr','dok_fks_aut_dok');
   {? DOK.REJ().CZY_DZ='T'
   || DOK.DOKZRODL:=DokZrodl+DOKUMENT.name+$#DOKUMENT.ref();
      DOK.DTW:=DOK.DTO:=DOKUMENT.DATA
   || DOK.DOKZRODL:=DokZrodl+RAPORT.name+$#RAPORT.ref();
      DOK.DTW:=DOK.DTO:=RAPORT.DATA_DO
   ?};
   DOK.DOP:=exec('blo_data','dok_fks_aut_dok',_a);
   {? DOK.DOP=date(0,0,0) || DOK.DOP:=DOK.DTO ?};
   {? Plugin.exists('DOK_DANE_DOD') || Plugin.run('DOK_DANE_DOD') ?};
   _wyn:={? ~_err & DOK.add(1)
         || DOK.ref()
         || undo(); null
         ?};
   REJ.cntx_pop()
|? _a='SV'
|| REJ.cntx_psh();
   DOK.blank();
   DOK.ODD:=EKSG.REF_ODD;
   DOK.REJ:=EKSG.REJ;
   DOK.DZ:={? DOK.REJ().CZY_DZ='T' || exec('ust_zb','dok_fks_aut_dok') || null ?};
   DOK.DOK_REJ:=POZDOK.DOK_REJ;
   {? DOK.DOK_REJ=null || DOK.DOK_REJ:=exec('bl_rejdo','dok_fks_aut_dok',0) ?};
   {? DOK.DOK_REJ=null || _err:=1;  exec('add_err','dok_fks_aut_dok','07','',_a) ?};
   DOK.JPK_V_T:=exec('typ_dok','obiegi2');
   DOK.NR:=EKSG.DOK_NR;
   DOK.ZAR:=exec('zarejestrowal','dok_fks_aut_dok');
   DOK.SYSTEM:=EKSG.SYS;
   {? DOKUMENT.DLA<>null
   || DOK.WYS:=exec('slo_kh','dok_fks_aut_dok',DOKUMENT.DOTYCZY().NAZ,DOKUMENT.DLA().KOD);
      EKSG.KH:=exec('FindInSet','#table','KH','KOD',DOKUMENT.DLA().KOD,2);
      {? EKSG.KH<>null & EKSG.KH().KOD=DOKUMENT.DLA().KOD
      || DOK.KH_FULL:=KH.NAZ_P;
         DOK.KH_KRAJ:=KH.KRAJ;
         DOK.MIASTO:=KH.MIASTO;
         DOK.UL:=KH.UL;
         DOK.DOM:=KH.DOM;
         DOK.LOKAL:=KH.LOKAL;
         DOK.POCZ:=KH.POCZ;
         DOK.KPOCZ:=KH.KPOCZ
      ?}
   ?};
   _sym:=exec('dok_symbol','dok_fks_aut_dok');
   {? _sym='' || _sym:=POZDOK.MF_FIKS ?};
   _sym_zew:=exec('dok_symzew','dok_fks_aut_dok');
   {? _sym_zew='' || _sym_zew:=_sym ?};
   DOK.NK:=_sym;
   DOK.SYM_ZEW:=_sym_zew;
   DOK.DTW:=DOK.D4:=DOKUMENT.DATA;
   DOK.DTO:=POZDOK.DATA1;
   DOK.DOP:=exec('blo_data','dok_fks_aut_dok',_a);
   {? DOK.DOP=date(0,0,0) || DOK.DOP:=DOK.DTO ?};
   DOK.D3:=POZDOK.TP;
   DOK.DOKZRODL:=DokZrodl+POZDOK.name()+$#POZDOK.ref();
   DOK.NIP:=POZDOK.NIP;
   DOK.KH:=POZDOK.KH;
   DOK.OKRVAT:=POZDOK.OKROVAT;
   DOK.RVAT:=POZDOK.RVAT;
   DOK.JORG:=KINFO.NAROD;
   DOK.KRAJ:=exec('kod_pl','slo_slu');
   DOK.TR:=exec('dok_tr','dok_fks_aut_dok');
   {? Plugin.exists('DOK_DANE_DOD') || Plugin.run('DOK_DANE_DOD') ?};
   _wyn:={? ~_err & DOK.add(1)
         || DOK.ref()
         || undo(); null
         ?};
   {? _wyn
   || exec('gen_vpoz','dok_fks_aut_dok')
   ?};
   REJ.cntx_pop()
|? _a='LS' | _a='LZ' | _a='LM' | _a='LP' | _a='LK' | _a='LX'
|| _wyn:=exec('dok_nagl_l','dok_fks_aut_dok',_a,_b,_c)
?};
DOK.fld_fml('NR','BLANK',"*");
DOK.fld_fml('RVAT','BLANK',"*");
_wyn


\ust_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [2006]
:: OPIS: Formula odnajduje lub tworzy grupe dla dokumentu zbiorczego
::  OLD: \ust_zb/ksg_ks.fml
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,KPARAM);
_stanow:={? KPARAM.CZY_B='T' & STANKAS.SYM<>'' || 'ST'+STANKAS.SYM+'/' || 'ST'+form(STANKAS.KOD)+'/' ?};
_sym:=_stanow+{? -STANKAS.CZY_KASA='t' || 'RK-' || 'RB-' ?}+form(RAPORT.NUM_RAP);
GR_DOK.cntx_psh();
GR_DOK.index('REJ'); GR_DOK.prefix(REF.FIRMA,'T',SSTALE.AO,EKSG.REJ);
{? ~GR_DOK.find_key(_sym,_sym)
|| GR_DOK.blank();
   GR_DOK.OKRO_F:=SSTALE.AO;
   GR_DOK.REJ:=EKSG.REJ;
   GR_DOK.CZY_DZ:='T';
   GR_DOK.SYM:=_sym;
   GR_DOK.SYSTEM:=EKSG.SYS;
   GR_DOK.add()
?};
_ref:=GR_DOK.ref();
GR_DOK.cntx_pop();
_ref


\gen_vpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.10]
:: OPIS: Dołączanie rekordów do tabeli VPOZ
::  OLD: \gen_vpoz/ksg_ks.fml
::----------------------------------------------------------------------------------------------------------------------
VPD.index('VPD'); VPD.prefix(POZDOK.ref());
VPOZ.index('VDOK'); VPOZ.prefix();
{? VPD.first()
|| {! |?
      VPOZ.blank();
      VPOZ.PR:=VPD.PR;
      VPOZ.GRVAT:=VPD.GRVAT;
      VPOZ.NETTO:=VPD.NETTO;
      VPOZ.VAT:=VPD.VAT;
      VPOZ.BRUTTO:=VPD.BRUTTO;
      VPOZ.R:=VPD.R;
      VPOZ.KK:=VPD.KK;
      ROZNE.GRVAT:=null();
      exec('ae_grvat','dok_fks');
      VPOZ.add();
      VPD.next()
   !}
?}


\dok_nagl_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: generacja naglowka dokumentu z systemu logistyka
::   WE:  _a - typ dekretacji
::        _b - typ dok.zrodlowego 0-domyslny 1-prosty
::        _c - #FAKS.ref #ND.ref #DOKU.ref #ODD - unikalny identyfikator ksiegowanej operacji
::   WY: _wyn - ref DOK-a
::  OLD: \dok_nagl_l/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
:: sprzedaz nieopodatkowana
{? _a='LS' & FAKS.NDVAT='T' || _b:=1  ?};

_err:=0;
_wyn:=null;
_tab:={? _a='LS' | _a='LZ' | _a='LP' | _a='LK' | _a='LX' || 'FAKS.'
      |? _a='LM' || 'ND.'
      || ''
      ?};
DOK.prefix();

:: tworzenie naglowka dokumentu
:: czy rozszerzona forma platnosci
_wsp:={? FAKS.PLISTA='T'& ~((_a='LS' | _a='LZ') & FAKS.SZ='S' & FAKS.T().UE='T') || 10 || 0 ?};

{? _b=0 & _wsp=0 || EKSG.TDK:='V'
|? _b=1 & _wsp=0 || EKSG.TDK:='P'
|? _b=1 & _wsp=10 || EKSG.TDK:='R'
|? _b=0 & _wsp=10 || EKSG.TDK:='S'
|| EKSG.TDK:=''
?};
Qpksg.cntx_psh();
Qpksg.prefix(_c);
_kwn:=_kwv:=_kwb:=0;
{? Qpksg.first()
|| {!
   |? _mn:={? Qpksg.STR='W' || -1 || 1 ?};
      _kwn+=_mn*Qpksg.NET;
      _kwv+=_mn*Qpksg.VAT;
      _kwb+=_mn*Qpksg.BRT;
      Qpksg.next()
   !}
?};
Qpksg.cntx_pop();
{? _kwn=0 & _kwv=0 & _kwb=0
|| EKSG.TDK:='P'
?};
_dok_rej:=exec('bl_rejdo','dok_fks_aut_dok',0);
DOK.blank();
DOK.ODD:=EKSG.REF_ODD;
DOK.REJ:=EKSG.REJ;
::: korekta nagłówkowa - wypełnienie pól DOK.KN i podmiana rodzaju dokumentu na ten z KOR_NAG=T
{? FAKS.WHERE='N'
|| _korid:=FAKS.LKSQL;
   FAKS.cntx_psh();
   FAKS.prefix();
:: szukam dokumentu po stronie Finansów, który jest korygowany poprzez dokument, który chcę zadekretować
   _mam:={? FAKS.seek(_korid)
         || {? FAKS.KZ<>''
            || FAKS.seek(FAKS.KZ)
            || 1
            ?}
         || 0
         ?};
   {? _mam
   || {? FAKS.ZAK='N'
      || _err:=1; exec('add_err','dok_fks_aut_dok','44','',_a)
      || {? FAKS.DOK<>''
         || _zaks:=exec('FindAndGet','#table',DOK,FAKS.DOK,,"ZP",'X');
            {? _zaks='N'
            || _err:=1; exec('add_err','dok_fks_aut_dok','45',FAKS.SYM,_a)
            |? _zaks='X'
            || _err:=1; exec('add_err','dok_fks_aut_dok','46','',_a)
            ?}
         ?}
      ?};
      {? FAKS.KOR<>''
      || FAKS.cntx_psh();
         _korid:=FAKS.FKSQL;
         _mam:={? FAKS.seek(_korid)
               || {? FAKS.KZ<>''
                  || FAKS.seek(FAKS.KZ)
                  || 1
                  ?}
               || 0
               ?};
         {? _mam
         || {? FAKS.ZAK='N'
            || _err:=1; exec('add_err','dok_fks_aut_dok','44',,_a)
            || {? FAKS.DOK<>''
               || _zaks:=exec('FindAndGet','#table',DOK,FAKS.DOK,,"ZP",'X');
                  {? _zaks='N'
                  || _err:=1; exec('add_err','dok_fks_aut_dok','45',FAKS.SYM,_a)
                  |? _zaks='X'
                  || _err:=1; exec('add_err','dok_fks_aut_dok','46','',_a)
                  ?}
               ?}
            ?}
         ?};
         FAKS.cntx_pop()
      ?};
      {? ~_err
      || DOK.KN:=FAKS.DOK;
         DOK.KOR:=DOK.KOR_ZEW:=FAKS.SYM;
         _ind1:=DOK_REJ.ndx_tmp(,1,'REJ',,0,'KOR_NAG',,0);
         DOK_REJ.cntx_psh();
         DOK_REJ.index(_ind1);
         DOK_REJ.prefix(EKSG.REJ,'T');
         {? DOK_REJ.first()
         || DOK.DOK_REJ:=DOK_REJ.ref()
         || _err:=1; exec('add_err','dok_fks_aut_dok','','Dla rejestru ('+EKSG.REJ().KOD+') nie znaleziono rodzaju dokumentu: Korekta nagłówkowa',_a)
         ?};
         DOK_REJ.cntx_pop()
      ?}
   ?};
   FAKS.cntx_pop()
|| DOK.DOK_REJ:=_dok_rej
?};

{? DOK.DOK_REJ=null
|| _err:=1;
   exec('add_err','dok_fks_aut_dok','07','',_a)
?};

{? ~_b & (DOK.DOK_REJ().SLO().KOD='VAT' | SLO.KOD='SAD')
|| exec('set_zm_rvat','dok_fks_aut_dok',_c);
   DOK.RVAT:=exec('bl_rejva','dok_fks_aut_dok');
   {? ~_err & DOK.RVAT=null
   || _err:=1;
      {? EKSG.RVAT<>null()
      || exec('add_err','dok_fks_aut_dok','','Dla rejestru ('+EKSG.REJ().KOD+') nie znaleziono w słowniku rejestrów VAT: '+EKSG.RVAT().SYM,_a)
      || exec('add_err','dok_fks_aut_dok','012','',_a)
      ?}
   ?}
|| DOK.RVAT:=null
?};
DOK.SP_WYM:={? FAKS.SP_WYM='' || 'N' || FAKS.SP_WYM ?};
{? 'VAT,SAD'*DOK.DOK_REJ().SLO().KOD=0
|| DOK.SP_WYM:='N'
?};
_narod:=FINFO.NAROD;
DOK.KRAJ:=($(_tab+'KRAJ'))();
DOK.NIP:=($(_tab+'NIP_UE'))();
DOK.JORG:=($(_tab+'NWAL'))();
{? _tab='FAKS.'
|| {? ($(_tab+'KRAJ_VAT().NAZ'))()<>''
   || SLU.cntx_psh(); SLO.cntx_psh();
      SLU.index('NAZ'); SLU.prefix('~KRAJE UE');
      {? SLU.first()
      || SLO.index('SL_TR');
         SLO.prefix(SLU.ref(),($(_tab+'KRAJ_VAT().NAZ'))());
         {? SLO.first()
         || DOK.KRAJ:=SLO.ref()
         ?}
      ?};
      SLU.cntx_pop(); SLO.cntx_pop();
      JPK_SLO.cntx_psh();
      DOK.JPK_PROC:=(($(_tab+'PROC().KOD'))());
      DOK.PROCED:=(($(_tab+'PROC().PROCED'))())<>'';
      {? DOK.PROCED || DOK.JORG:=($(_tab+'WAL'))() ?};
      JPK_SLO.cntx_pop()
   ?}
?};
{? DOK.KRAJ=null || DOK.KRAJ:=INFO.KRAJ ?};
{? DOK.JORG=null || DOK.JORG:=_narod ?};

_sym:='';
_sym:=exec('dok_symbol','dok_fks_aut_dok');
{? _sym=''
|| {? _a='LZ'
   || _sym:=($(_tab+'ID'))()
   |? _a='LP'
   || _sym:={? PAR_SKID.get(307)='D' || 'PARZB/D/'+form(FAKS.D) || 'PARZB/M/'+(7+form(FAKS.D)) ?}
   || _sym:=($(_tab+'SYM'))()
   ?}
?};
_sym_zew:=exec('dok_symzew','dok_fks_aut_dok');
{? _sym_zew='' || _sym_zew:=_sym ?};
DOK.NK:=_sym;
DOK.SYM_ZEW:=_sym_zew;
{? DOK.KOR=''
|| DOK.KOR:={? (_a='LS' | _a='LZ' | _a='LK' | _a='LX') & ($(_tab+'T().KOR'))()='T'
            || ($(_tab+'KOR'))()
            || ''
            ?}
?};
{? DOK.KOR_ZEW=''
|| DOK.KOR_ZEW:={? (_a='LS' | _a='LZ') & ($(_tab+'T().KOR'))()='T'
                || ($(_tab+'KOR_ID'))()
                || ''
                ?}
?};
DOK.KOR_PRZY:={? (_a='LS' | _a='LZ' | _a='LK' | _a='LX') & FAKS.T().KOR='T'
              || FAKS.TZP
              || ''
              ?};
DOK.KOR_OKR:={? (_a='LS' | _a='LZ') & FAKS.T().KOR='T'
             || {? FAKS.KZ_OD<>date(0,0,0)
                || 'Od '+FAKS.KZ_OD$1+' do '+FAKS.KZ_DO$1
                || exec('FindAndGet','#table','FAKS',FAKS.FKSQL,,$"(('0'+$FAKS.AM)+2)+'.'+$FAKS.AR",'')
                ?}
             || ''
             ?};
DOK.DWKOR:={? (_a='LS' | _a='LZ') & FAKS.T().KOR='T'
           || exec('FindAndGet','#table','FAKS',FAKS.FKSQL,,"DW",'')
           || date(0,0,0)
           ?};
DOK.SP_PL:={? _a='LS' | _a='LZ' | _a='LP'
           || FAKS.PL
           |? _a='LM'
           || null
           ?};
DOK.A:='N';
DOK.ZK:='N';
DOK.ZP:='N';
DOK.WAL:={? _a='LM'
         || null
         |? ($(_tab+'WAL'))()<>_narod
         || ($(_tab+'WAL'))()
         || null
         ?};
DOK.ZAR:=exec('zarejestrowal','dok_fks_aut_dok');
DOK.SYSTEM:=EKSG.SYS;

DOK.NR:=EKSG.DOK_NR;
DOK.TR:=exec('dok_tr','dok_fks_aut_dok');
{? DOK.TR=''
|| {? _a='LP' || DOK.TR:='Paragon zbiorczy' || DOK.TR:=($(_tab+'SYM'))() ?}
?};
::    data operacji musi byc zgodna z okresem w ktorym ksiegujemy (wg jakiej jakiej daty dekretujemy)
DOK.DTW:={? (_a='LS' | _a='LZ') & EKSG.WG_DATY='W' || ($(_tab+'DW'))()
         |? (_a='LS' | _a='LZ') & EKSG.WG_DATY='S' || ($(_tab+'D'))()
         |? (_a='LS' | _a='LZ') & EKSG.WG_DATY='O' || ($(_tab+'DO'))()
         |? (_a='LK' | _a='LP' | _a='LX') || ($(_tab+'DW'))()
         || ($(_tab+'D'))()
         ?};
::    data wystawienia
DOK.DTO:={? _a='LM' || ($(_tab+'D'))() || ($(_tab+'DW'))() ?};
::    data operacji
DOK.DOP:=exec('blo_data','dok_fks_aut_dok',_a);
{? DOK.DOP=date(0,0,0)
|| {? _a='LS' & ($(_tab+'DW'))()>=date(2014,1,1) & FAKS.T().KOR<>'T' & PAR_SKID.get(308)='T'
   || DOK.DOP:=($(_tab+'DO'))()
   || {? _a='LK' | _a='LX'
      || DOK.DOP:=($(_tab+'DW'))()
      || DOK.DOP:=($(_tab+'D'))()
      ?}
   ?}
?};
::    termin platnosci
DOK.D3:={? _a='LM' || date(0,0,0) || ($(_tab+'TZ'))() ?};
::    w przypadku sprzedazy zwlaszcza dla korekt jesli brak terminu platnosci = termin wg daty wystawienia
{? (_a='LS' | _a='LZ' | _a='LK' | _a='LX' | _a='LP') & DOK.D3=date(0,0,0) || DOK.D3:=DOK.DTO ?};
::    data otrzymania dla zakupow / potwierdzenia odbioru korekty
DOK.RVAT().RVAT();
_kvat:=RVAT.KVAT().SYM;
DOK.D4:={? _a='LZ' & (_kvat='_WWspNab' | _kvat='_WWspNus' | RVAT.RT <>'W') || ($(_tab+'DO'))() || date(0,0,0) ?};
DOK.HAN:={? (_a='LS' | _a='LZ') || ($(_tab+'HAN'))() || null ?};

_slown:=exec('bl_slkh','dok_fks_aut_dok');
_kh:=($(_tab+'KH().KOD'))();
{? _slown<>'' & _kh<>'' || DOK.WYS:=exec('slo_kh','dok_fks_aut_dok',_slown,_kh) ?};
DOK.KH_ODB:=FAKS.KH_ODB;
DOK.O_NAZ:=FAKS.O_NAZ;
DOK.O_MIASTO:=FAKS.O_MIASTO;
DOK.O_UL:=FAKS.O_UL;
DOK.O_DOM:=FAKS.O_DOM;
DOK.O_LOKAL:=FAKS.O_LOKAL;
DOK.O_KPOCZ:=FAKS.O_KPOCZ;
DOK.O_POCZ:=FAKS.O_POCZ;
DOK.O_NIP:=FAKS.O_NIP;
DOK.O_KRAJ:=FAKS.O_KRAJ;
DOK.O_KRISO:=FAKS.O_KRISO;
DOK.NRKSEF:=FAKS.NRKSEF;
DOK.KSEFCDAT:=FAKS.KSEFCDAT;
DOK.PROC:=FAKS.PROC;
{? _a='LS' | _a='LZ'
|| DOK.DOKZRODL:=exec('maska','dok_fks_aut_dok','F')
|? _a='LP'
|| DOK.DOKZRODL:=exec('maska','dok_fks_aut_dok','P')
|? _a='LK'
|| DOK.DOKZRODL:=exec('maska','dok_fks_aut_dok','K')
|? _a='LX'
|| DOK.DOKZRODL:=exec('maska','dok_fks_aut_dok','X')
|| DOK.DOKZRODL:=exec('maska','dok_fks_aut_dok','M');
   DOK.MG:=ND.MAG().SYM
?};
DOK.OKRVAT:={? (DOK.DOK_REJ().SLO().KOD='VAT' | SLO.KOD='SAD') || exec('bl_okrvat','dok_fks_aut_dok',_a) || null ?};
::    data otrzymania dla sprzedaży SLIM VAT
_dsv:=exec('slimvat','dok_fks');
{? _a='LS' & FAKS.T().KOR='T' & DOK.D4=date(0,0,0) & _dsv<>date(0,0,0) & DOK.DTO>=_dsv
|| {? exec('FindInSet','#table','KH','KOD',($(_tab+'KH().KOD'))(),2) & exec('slimkh','dok_fks')
   || DOK.D4:=DOK.DTO; DOK.OKRVAT:=exec('okres','dok_fks_aut_dok',DOK.D4)
   ?}
?};
{? _a='LZ'
|| {? var_pres('RB_V',DOK)>0 & var_pres('VSKIDRBK',FAKS)>0 & FAKS.VSKIDRBK
   || DOK.RB_V:=FAKS.VSKIDRBK
   ?};
:: konto
   DOK.RB:=FAKS.SKID_RBK
|? _a='LS'
|| {? FAKS.SKID_RBK
   || {? exec('ps_65','rachunki')='T'
:: subkonto - szukanie czy bank wypelniony FAKS to jest subkonto
      || SKID_RBK.index('TAB'); SKID_RBK.prefix(RACHBANK.FIRMA,REF.FIRMA().SYMBOL+'KH2',REF.FIRMA().SYMBOL+'KH2',#FAKS.KH);
         {? SKID_RBK.first()
         || {!|? {? SKID_RBK.ref()=FAKS.SKID_RBK || DOK.RB:=FAKS.SKID_RBK; 0 || 1 ?} & SKID_RBK.next() !}
         ?}
      || DOK.RB:=FAKS.SKID_RBK
      ?}
   ?};
   {? var_pres('RB_V',DOK)>0 & var_pres('VSKIDRBK',FAKS)>0 & FAKS.VSKIDRBK
   || DOK.RB_V:=FAKS.VSKIDRBK
   ?}
?};

_jpk_proc:='';
{? var_pres('JPK_GTU',DOK)>0
|| {? _a='LS'
   || {? DEK_NAG.T_GTU='F'
      || {? DEK_NAG.F_GTU
         || _gtu:=($DEK_NAG.F_GTU().FORMULA)()
         ?}
      |? var_pres('ObjGTU')>0
      || _gtu:=ObjGTU.get()
      ?};
      {? var_pres('_gtu')>0 & type_of(_gtu)=type_of('')
      || DOK.JPK_GTU:=exec('jpk_slo','dok_fks_aut_dok','GTU',_gtu,_a)
      ?}
   ?};
   {? (_a='LS' | _a='LZ') & DEK_NAG.F_PROC
   || _proc:=($DEK_NAG.F_PROC().FORMULA)();
      {? type_of(_proc)=type_of('')
      || _jpk_proc:=exec('jpk_slo','dok_fks_aut_dok','PROC',_proc,_a)
      ?}
   ?}
?};

{? (_a='LS' | _a='LZ' | _a='LK' | _a='LP' | _a='LX') & (DOK.DOK_REJ().SLO().KOD='VAT' | SLO.KOD='SAD')
||
   EKSG.KH:=exec('FindInSet','#table','KH','KOD',($(_tab+'KH().KOD'))(),2);
   {? EKSG.KH<>null
   || DOK.KH:=EKSG.KH().SKR;
      {? _a<>'LP'
      || DOK.KH_FULL:=FAKS.NAZ;
         DOK.KH_KRAJ:=FAKS.KH_KRAJ;
         DOK.KH_KRISO:=FAKS.KH_KRISO;
         DOK.MIASTO:=FAKS.MIASTO;
         DOK.UL:=FAKS.UL;
         DOK.POCZ:=FAKS.POCZ;
         DOK.DOM:=FAKS.DOM;
         DOK.LOKAL:=FAKS.LOKAL;
         DOK.KPOCZ:=FAKS.KPOCZ
      ?};
      DOK.NIP:=
         {? ($(_tab+'NIP_UE'))()=''
         || {? (KH.TYP='R' | KH.TYP='I') & KH.NIP='' || KH.PESEL || KH.NIP ?}
         || ($(_tab+'NIP_UE'))()
         ?};
      DOK.JPK_V_T:={? _a='LP'
                   || 'RO'
                   |? _a='LS'& FAKS.T().DRPAR='T'
                   || {? FAKS.NRUNIKAT<>'' & FAKS.PAR<>''
                      || 'FP'
                      || ''
                      ?}
                   |? _a='LS'& FAKS.SYMF<>''
                   || 'FP'
                   || exec('typ_dok','obiegi2')
                   ?};
      {? PAR_SKID.get(113)='T'
      || _okres:={? DOK.OKRVAT=null()
                 || {? VPOZ.first()
                    || {!
                       |? {? VPOZ.OKRVAT=null()
                          || {? VPOZ.OKR_C().POCZ>VPOZ.OKR_Z().POCZ
                             || _okr:=VPOZ.OKR_C().POCZ>=exec('data_upr','jpk_v')
                             || _okr:=VPOZ.OKR_Z().POCZ>=exec('data_upr','jpk_v')
                             ?}
                          || _okr:=VPOZ.OKRVAT().POCZ>=exec('data_upr','jpk_v')
                          ?};
                          ~_okr & VPOZ.next()
                       !};
                       _okr
                    || 0
                    ?}
                 || DOK.OKRVAT().POCZ>=exec('data_upr','jpk_v')
                 ?};
         {? _okres
         || {? DOK.JPK_V_T='RO'
            || DOK.JPK_GTU:='';
               DOK.JPK_PROC:=''
            ?};
            {? DOK.JPK_V_T='WEW'
            || DOK.JPK_GTU:=''
            ?}
         ?}
      ?};
:: wtyczka do danych dodatkowych
      {? Plugin.exists('DOK_DANE_DOD') || Plugin.run('DOK_DANE_DOD') ?};
      _wyn:=
         {? ~_err & DOK.add(1)
         || {? _a<>'LP'
            || ($(_tab+'get()'))();
               ($(_tab+'cntx_psh()'))();
               ($(_tab+'clear'))();
               ($(_tab+'ZAK'))():='T';
               {? var_pres('DOK',($(_tab-1))())>0 || ($(_tab+'DOK'))():=$DOK.ref() ?};
               ($(_tab+'put()'))();
               ($(_tab+'cntx_pop()'))();
               DOK.ref()
            || DOK.ref()
            ?}
         || undo(); null
         ?}
   ?}
||
   DOK.JPK_V_T:=exec('typ_dok','obiegi2');
:: wtyczka do danych dodatkowych
   {? Plugin.exists('DOK_DANE_DOD') || Plugin.run('DOK_DANE_DOD') ?};
   _wyn:=
      {? ~_err & DOK.add(1)
      || ($(_tab+'get()'))();
         ($(_tab+'cntx_psh()'))();
         ($(_tab+'clear'))();
         ($(_tab+'ZAK'))():='T';
         {? var_pres('DOK',($(_tab-1))())>0 || ($(_tab+'DOK'))():=$DOK.ref() ?};
         ($(_tab+'put()'))();
         ($(_tab+'cntx_pop()'))();
         DOK.ref()
      || undo(); null
      ?}
?};
:: KSEF przekopiowanie podmiotów powiązanych
_err:={? _tab='FAKS.' & DOK.RB<>null()
      || exec('fakskh_copy','faktury_wspolne',FAKS.ref(),DOK.ref(),1)
      || 1
      ?};
{? ~_err
|| exec('add_err','dok_fks_aut_dok','','Nie powiodło się kopiowanie podmiotów powiązanych.')
?};
{? _wyn<>null & (_a='LS' | _a='LZ' | _a='LP' | _a='LK')
|| exec('fakspola2dokpola','dok_ksef',{? FAKS.KZ<>'' || exec('FindAndGet','#table',FAKS,FAKS.KZ,,,null()) || FAKS.ref() ?},DOK.ref(),_jpk_proc)
?};
_err:=0;
:: dla korekty nagłówkowej podwiązuje dokument pierwotny na podstawie pola DOK.KN
{? _wyn<>null & (_a='LS' | _a='LZ') & DOK.DOK_REJ().KOR_NAG='T' & 4+DOK.KN='doku'
|| DOK.cntx_psh();
   DOK.trig_off('*','*');
   _ref:=BB.sqlint(DOK.KN);
   DOK.use(8+DOK.KN);
   DOK.prefix();
   _ok:={? _ref<>0 & DOK.seek(_ref,)
        || _CzyTezKor:={? DOK.DOK_REJ().KOR='T' || DOK.KOR || '' ?};
           DOK.LKN:=$_wyn; DOK.put()
        || 0
        ?};
    {? _ok
    || _ile:=0;
       VPOZ.cntx_psh();
       VPOZ.use('pozv'+(DOK.name+4));
       VPOZ.index('VDOK');
       VPOZ.prefix(DOK.ref());
       {? VPOZ.first() || VPOZ.trig_off('*','*'); {! |? VPOZ.KNAG:=2; _ile+=VPOZ.put(); VPOZ.next() !}; VPOZ.trig_on('*','*') ?};
       _err:=_ile<>VPOZ.size();
       VPOZ.cntx_pop()
    ?};
    {? _ok & _CzyTezKor<>''
    || _msk:=exec('FindAndGet','#table','FAKS',FAKS.FKSQL,,"DOK",'');
       _ref:=BB.sqlint(_msk);
       {? _ref<>0
       || DOK.use(8+_msk); DOK.prefix();
          {? DOK.seek(_ref,) & DOK.ZP='T'
          || DOK.LKN:=$_wyn; DOK.put()
          ?}
       ?}
    ?};
    {? _ok
    || _ile:=0;
       VPOZ.cntx_psh();
       VPOZ.use('pozv'+(DOK.name+4)); VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
       {? VPOZ.first() || VPOZ.trig_off('*','*'); {! |? VPOZ.KNAG:=2; _ile+=VPOZ.put(); VPOZ.next() !}; VPOZ.trig_on('*','*') ?};
       _err:=_ile<>VPOZ.size();
       VPOZ.cntx_pop()
   ?};
   DOK.trig_on('*','*');
   DOK.cntx_pop()
?};
{? _err
|| exec('add_err','dok_fks_aut_dok','','Nie udało się powiązanie korekty nagłówkowej z dokumentem pierwotnym')
?};
{? _wyn<>null & (_a='LS' | _a='LZ' | _a='LP' | _a='LK')
||
   DOKPOLA.cntx_psh(); DOKPOLA.use('dokp'+((ref_name(DOK.ref))+4)); DOKPOLA.prefix(DOK.ref());
   {? ~DOKPOLA.first()
   || DOKPOLA.blank(); DOKPOLA.REK:=DOK.ref(); DOKPOLA.add()
   ?};
   DOKPOLA.PAR:=FAKS.PAR;
   DOKPOLA.put();
:: numery faktur zaliczkowych
   {? _a='LS' | _a='LP'
   || exec('dok_maga','powdok',3);
      __tt.prefix();
      {? __tt.first()
      || _wz:='';
         {! |?
             _wz+=__tt.SYM;
             {? __tt.next() || _wz+='\n'; 1 || 0 ?}
         !};
         {? |_wz<>''
         || DOKPOLA.memo_set(|_wz,'WZ');
            DOKPOLA.memo_put(,'WZ')
         ?}
      ?}
   ?};
:: zaliczki
   exec('edi_buf','edi_fo_ufd');
   exec('edi_buf_fill','edi_fo_ufd',FAKS.ref());
   __EB.ZAL.prefix();
   {? __EB.ZAL.first()
   || _sym:=''; _war:=0;
      {! |?
         _sym+=__EB.ZAL.SYM;
         _war+=__EB.ZAL.WAR;
         {? __EB.ZAL.next() || _sym+='\n'; 1 || 0 ?}
      !};
      {? |_sym<>''
      || DOKPOLA.memo_set(|_sym,'NRFAZAL');
         DOKPOLA.memo_put(,'NRFAZAL');
         DOKPOLA.memo_set(|_sym,'ZALPOW');
         DOKPOLA.memo_put(,'ZALPOW');
         DOKPOLA.ZALKWOD:=_war; DOKPOLA.put()
      ?}
   ?};
   DOKPOLA.cntx_pop();
:: symbole KSeF dokumentów korygowanych
   VAR_DEL.delete('__v_fk');
   __v_fk:={? FAKS.KZ=''
           || exec('FaKorygowane','edi_fo_ksef')
           || exec('FindAndGet','#table',FAKS,FAKS.KZ,,"exec('FaKorygowane','edi_fo_ksef')",~~)
           ?};
   {? var_pres('__v_fk')>0 & __v_fk.first()
   || _nr_ksef:='';
      {! |?
         _nr_ksef+=__v_fk.NRKSEF;
         {? __v_fk.next() || _nr_ksef+='\n'; 1 || 0 ?}
      !};
      {? |_nr_ksef<>''
      || DOK.memo_set(|_nr_ksef,'NRKSEFDK');
         DOK.memo_put(,'NRKSEFDK')
      ?}
   ?}
?};
::    platnosci ratalne
{? _wyn<>null & (_a='LS' | _a='LZ') & DOK.DOK_REJ().PR='T'
|| exec('add_dr_b','dok_fks_aut_dok',DOK.ref,null)
?};
::    powiazane dokumenty dopina do DOK-a
{? _wyn<>null & (_a='LS' | _a='LZ')
||
   DOKUM.index('DOKUM');
   DOKUM.prefix(REF.FIRMA,$FAKS.ref());
   {? DOKUM.first()
   || {!
::    nie dublujemy dokumentów powiązanych z BL
      |? {? DOKUM.BL<>'T'
         || _fdok:=DOKUM.ref();
            DOKUM.cntx_psh();
            DOKUM.clear();
            DOKUM.DOKR:=DOKUM.REFSQL:=$_wyn;
            _ddok:={? DOKUM.add(1) || DOKUM.ref() || null ?};
            DOKUMZ.cntx_psh();
            DOKUMZ.index('DOK'); DOKUMZ.prefix(_fdok);
            {? DOKUMZ.first()
            || {! |?
                  DOKUMZ.cntx_psh(); DOKUMZ.prefix();
                  DOKUMZ.DOK:=_ddok;
                  DOKUMZ.add();
                  DOKUMZ.cntx_pop();
                  DOKUMZ.next()
               !}
            ?};
            DOKUMZ.cntx_pop();
            DOKTYP.index('DOKDC');
            DOKTYP.prefix(_fdok);
            {? DOKTYP.first()
            || {!
               |? DOKTYP.cntx_psh();
                  DOKTYP.clear();
                  DOKTYP.DOKUM:=_ddok;
                  DOKTYP.add(1);
                  DOKTYP.cntx_pop();
                  DOKTYP.next()
               !}
            ?};
::             dane MEMO
            DOKUM.cntx_psh();
            DOKUM.use(ref_name(_fdok));
            DOKUM.prefix();
            {? DOKUM.seek(_fdok)
            || _is_src:=1;
               _src:=DOKUM.memo_txt(0,1,'OPIS')
            || _is_src:=0
            ?};
            {? _is_src
            || DOKUM.use(ref_name(_ddok));
               DOKUM.prefix();
               {? DOKUM.seek(_ddok)
               || DOKUM.memo_set(_src,'OPIS');
                  DOKUM.memo_put(,'OPIS')
               ?}
            ?};
            DOKUM.cntx_pop();

            DOKUM.cntx_pop()
         || {? DOKUM.DOKUMI || DOK.E_DOC:=DOKUM.DOKUMI; DOK.put() ?};
            DOKUM.DOKR:=$DOK.ref(); DOKUM.put()
         ?};
         DOKUM.next()
      !}
   ?}
?};
_wyn


\maska
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: formula wykorzytywana w dok_nagl ksg.fml
::  OLD: \maska/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a='F'
|| 'D'+FAKS.ODDZ+(($(FAKS.AR))+2)+form(#FAKS.ref,,,'99')
|? _a='P'
|| 'P'+FAKS.ODDZ+(($(FAKS.AR))+2)+PAR_SKID.get(307)+form(FAKS.AM,-2,0,'9.')+
   {? var_pres('iddekpar')>0 || ' '+iddekpar+'1' || '' ?}
|? _a='K'
||
:: ustalam ref-a korekty wynikające z korekty zbiorczej
   _refnr:=#FAKS.ref();
   _oddz:=FAKS.ODDZ;
   _ar:=FAKS.AR;
   FAKS.cntx_psh();
   FAKS_KZF.cntx_psh();
   {? FAKS.T().KOR='T'
   || _jest:=0;
      FAKS_KZF.index('KOR');
      FAKS_KZF.prefix($FAKS.ref(),);
      {? FAKS_KZF.first()
      || _refnr:=#FAKS_KZF.FAKS;
         _oddz:=1+(5-$FAKS_KZF.FAKS);
         _ar:=#(2+(6-$FAKS_KZF.FAKS))
      ?}
   ?};
   FAKS.cntx_pop();
   FAKS_KZF.cntx_pop();
   'K'+_oddz+(($(_ar))+2)+form(_refnr,,,'99')
|? _a='X'
|| 'X'+FAKS.ODDZ+(($(FAKS.AR))+2)
|| 'M'+ND.ODDZ+(($(ND.AR))+2)+form(#ND.ref,,,'99')
?}


\slo_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: sprawdza (lub) dodaje kontrahenta _b do slownika uzytkownika _a
::  OLD: \slo_kh/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null;
{? SLU.index('NAZ'); SLU.prefix(_a); SLU.first()
||
::  ustawianie tabeli RS
   RS.index('RS');
   RS.prefix('Kontrahent');
   {? RS.first()
   || {? SLO.index('SL'); SLO.prefix(SLU.ref(),_b); SLO.first()
      || _wyn:=SLO.ref()
      || _a:=$('{? (SLU.DL<>+form('+ RS.TAB+'.'+RS.KOD+') & type_of('+RS.TAB+'.'+RS.KOD+')=2)
              | (SLU.DL<>+form('+RS.TAB+'.'+RS.KOD+',-SLU.DL,,'+"'1'"+') & type_of('+RS.TAB+'.'+RS.KOD+')=1)
                || 1
                || 0
                ?}');
         _b:=$('SLO.KOD:={? type_of('+RS.TAB+'.'+RS.KOD+')=2 || SLU.DL+form('+RS.TAB+'.'+RS.KOD+')|| form('+RS.TAB+'.'+RS.KOD+',-SLU.DL,,'+"'1'"+') ?}');
         _c:=$('SLO.TR:={|'+RS.TAB+'|!'+RS.TR+'|}');
         {? ~_a()
         || SLO.blank();
            SLO.SLU:=SLU.ref();
            _b();
            _c();
            SLO.add();
            _wyn:=SLO.ref()
         || {? (RS.TAB='KH' & KH.sel_size()=0) | RS.TAB<>'KH'
            || exec('add_err','dok_fks_aut_dok','','Długość kodu kontrahenta niezgodna z ustaloną w słowniku "'+SLU.NAZ+'"'+' ('+$SLU.DL+').',EKSG.RODZ)
            ?}
         ?}
      ?}
   || exec('add_err','dok_fks_aut_dok','','Brak wzorca słownika "Kontrahent".',EKSG.RODZ)
   ?}
|| exec('add_err','dok_fks_aut_dok','','Brak słownika '+_a+' w systemie.',EKSG.RODZ)
?};
_wyn


\bl_okrvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: okres VAT
::  OLD: \bl_okrvat/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null;
{? DEK_NAG.F_OK_VAT<>null
||
   _wyn:=($DEK_NAG.F_OK_VAT().FORMULA)()
|? _a='LS' | _a='LZ'
||
   {? FAKS.D>=date(2014,1,1)
   || {? _a='LZ' & FAKS.DO<FAKS.D
      || _wyn:=exec('okres','dok_fks_aut_dok',FAKS.D)
      |? _a='LZ'
      || _wyn:=exec('okres','dok_fks_aut_dok',FAKS.DO)
      |? _a='LS' & FAKS.T().KOR<>'T' & -FAKS.T().UE='t'
      || _wyn:=exec('okres','dok_fks_aut_dok',FAKS.DW)
      |? _a='LS' & FAKS.T().KOR<>'T'
      || {? PAR_SKID.get(308)='T'
         || _wyn:=exec('okres','dok_fks_aut_dok',FAKS.DO)
         || _wyn:=exec('okres','dok_fks_aut_dok',FAKS.D)
         ?}
      || _wyn:=null
      ?}
   || {? _a='LZ'
      || _wyn:=exec('okres','dok_fks_aut_dok',FAKS.DO)
      |? (_a='LS' | _a='LZ') & FAKS.T().KOR<>'T'
      || _wyn:=exec('okres','dok_fks_aut_dok',FAKS.DW)
      || _wyn:=null
      ?}
   ?}
|? _a='LP'
|| _wyn:=POMOC.OKR
|? _a='LM'
|| _wyn:=null
?};
_wyn


\okres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: zwraca ref okresu na podstawie daty zawartej w _a
::   WE:  _a - data
::       [_b] - zwraca rok-1 zwraca okres-0 (domyslnie)
::   WY: ref okresu lub ref roku
::  OLD: \okres/ksg_form.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
_wynik:=null;
_data:=_a;
OKRO_F.cntx_psh();
_dalej:=1;
OKRO_F.index('KON'); OKRO_F.prefix(REF.FIRMA);
{? OKRO_F.first()
|| {!
   |?
      {? _data>=OKRO_F.POCZ & _data<=OKRO_F.KON
      || _wynik:={? _b || OKRO_F.ROK || OKRO_F.ref ?};
         _dalej:=0
      || _dalej:=OKRO_F.next()
      ?};
      _dalej
   !}
?};
OKRO_F.cntx_pop();
{? _wynik=null || FUN.info('Nie znaleziono okresu VAT.'@) ?};
_wynik


\bl_slkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: formula wykorzytywana w dok_nagl ksg.fml
::  OLD: \bl_slkh/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEK_NAG.F_SLKH<>null
|| ($DEK_NAG.F_SLKH().FORMULA)()
|| exec('get_slkh','dok_fks_aut_dok')
?}


\get_slkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: funkcja sprawdza jaki slownik jest wpisany w stalych systemu
::   WY: nazwa slownika
::  OLD: \get_slkh/firma.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? INFO.SLKH____().SLU<>null
|| _wyn:=INFO.SLKH____().SLU().NAZ
?};
_wyn


\blo_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WS [1210]
:: OPIS: Formula zwraca date operacji ustawiona w defnicji dekretacji (FO_DATA)
::       Jesli wynik jest date(0,0,0) to potem przepisujemy z daty DTO
::   WE: _a - rodzaj dekretacji (na razie wszystkie dekretacje tak samo)
::   WY: data
::  OLD: \blo_data/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_rr:=date(0,0,0);
{? DEK_NAG.FO_DATA<>null
|| DEK_NAG.FO_DATA(); _rr:=FL.run()
?};
_rr


\dok_tr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Ustala tresc dokumentu
::  OLD: \dok_tr/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? DEK_NAG.F_TRESC
|| _zwrot:=($DEK_NAG.F_TRESC().FORMULA)();
   {? type_of(_zwrot)<>2 || _zwrot:='' ?}
?};
_zwrot


\zarejestrowal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula zwraca string ktorym bedzie wypelniane pole DOK.ZAR
::  OLD: \zarejestrowal/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
EKSG.SYS+': '+app_info('app_user')


\dok_symbol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [$12.10]
:: OPIS: Ustala symbol dokumentu
::   WY: obliczony wg formuly symbol dokumentu
::  OLD: \dok_symbol/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? DEK_NAG.F_SYMBOL
|| _zwrot:=($DEK_NAG.F_SYMBOL().FORMULA)();
   {? type_of(_zwrot)<>2 || _zwrot:='' ?}
?};
_zwrot


\dok_symzew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [$17.28]
:: OPIS: Ustala symbol zewntrzny dokumentu
::   WY: obliczony wg formuly symbol dokumentu
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? DEK_NAG.F_SYMZEW
|| _zwrot:=($DEK_NAG.F_SYMZEW().FORMULA)();
   {? type_of(_zwrot)<>2 || _zwrot:='' ?}
?};
_zwrot


\bl_rejva
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: wartosc poczatkowa pola DOK.RVAT
::   WE: _a - symbol rejestru VAT (opcjonalny) uruchamiany w VPOZ
::   WY: VAT_REJ.ref() lub null
::  OLD: \bl_rejva/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_refv:=_wyn:=null();
{? _ & _a<>'' & _a<>'xxx'
|| _refv:=exec('FindInSet','#table','RVAT','SYM',_a,REF.FIRMA,,1);
   {? EKSG.RVAT=null() || EKSG.RVAT:=_refv ?}
|? EKSG.RVAT<>null()
|| _refv:=EKSG.RVAT
?};
{? _refv=null()
|| {? DEK_NAG.RVAT<>null
   || _refv:=DEK_NAG.RVAT
   || {? DEK_NAG.F_RVAT().FORMULA<>''
      || _rvat:=($DEK_NAG.F_RVAT().FORMULA)();
         _refv:={? _rvat=''
                || null
                || exec('FindInSet','#table','RVAT','SYM',_rvat,REF.FIRMA,,1)
                ?}
      || _refv:=null
      ?}
   ?}
?};
{? _refv<>null
|| VAT_REJ.index('REJ_VREF');
   VAT_REJ.prefix();
   _wyn:={? VAT_REJ.find_key(EKSG.REJ,_refv) || VAT_REJ.ref() || null ?}
?};
_wyn


\bl_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula zwraca odpowiednia date ustawiona w defnicji dekretacji
::   WE: _a - rodzaj dekretacji
::   WY: data
::  OLD: \bl_data/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_rr:=date(0,0,0);
{? _a='EP' | _a='EF' | _a='ED' | ~-_a='KL' | _a='KU'
|| {? DEK_NAG.S_DATA='P' || _rr:=SSTALE.AO().POCZ
   |? DEK_NAG.S_DATA='K' || _rr:=SSTALE.AO().KON
   |? DEK_NAG.F_DATA<>null ||  DEK_NAG.F_DATA(); _rr:=FL.run()
   ?}
?};
_rr


\set_zm_rvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [BZ] [12.30]
:: OPIS: Formula ustawia zmienna EKSG.RVAT na podstawie zapisow w Qpksg
::   WE:  _a - #FAKS.ref #ND.ref #DOKU.ref #ODD - unikalny identyfikator ksiegowanej operacji
::  OLD: \set_zm_rvat/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? EKSG.RVAT=null()
|| Qpksg.cntx_psh();
   Qpksg.prefix(_a);
   {? Qpksg.first()
   || {!
      |? {? Qpksg.RVAT<>''
         || EKSG.RVAT:=exec('FindInSet','#table','RVAT','SYM',Qpksg.RVAT,REF.FIRMA,,1)
         ?};
         EKSG.RVAT=null() & Qpksg.next()
      !}
   ?};
   Qpksg.cntx_pop()
?}


\one_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: Formula  inicjuje dekretacje dla wybranej: pozycji dokumentu / srodka / skladnika listy
::   WE: _a #ref() naglowka dokumentu
::       _b rodzaj dekretacji
::       [_c] dodatkowy prefix na pozycji
::       [_d] strona (W/M)- jezeli wypelniony to tylko dekretacja jednej strony, jezeli pusty to dekretacja obu stron
::       [_e] opcjonalny ref dok. zbiorczego
::  OLD: \one_poz/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<3 || _c:='' ?};
{? _<4 || _d:='' ?};
{? _<5 || _e:=0 ?};
exec('set_fld','dok_fks_aut_dok','P',_b);
DEK_POZ.index('DEK_POZ');
{? _c<>'' || DEK_POZ.prefix(DEK_NAG.ref(),_c) || DEK_POZ.prefix(DEK_NAG.ref()) ?};
{? DEK_POZ.first()
|| {!
   |?
      {?  (_c='' | DEK_POZ.IDENT=_c) & exec('war_log_poz','dok_fks_aut_dok')
      || {? (EKSG.TSP<>'Z' & EKSG.TSP<>'R' & DEK_POZ.ZAL<>'Z' & DEK_POZ.ZAL<>'R')
            | (EKSG.TSP='Z' & 'TZ'*DEK_POZ.ZAL)
            | (EKSG.TSP='R' & DEK_POZ.ZAL='R')
         || exec('add_tmp','dok_fks_aut_dok',_a,_b,_d,_e)
         ?}
      ?};
      DEK_POZ.next()
   !}
|? _c<>''
:: jezeli byl dodatkowy prefiks to szukanie definicji domyslnych (pustych)
|| {? _b='EP' | _b='EF' | _b='ED'
:: formula dla estry dziala dla prefiksow poszczegolnych znakow grupy jezeli znajdzie pierwszy prefix
:: nie szuka dalej tylko wykonje wszystkie dekrety dla tego prefixu i nie szuka nowego prefixu
   || _prefix:=_c;
      _jest:=0;
      {!|?
         _prefix:=_prefix-1;
         DEK_POZ.prefix(DEK_NAG.ref(),_prefix);
         {? DEK_POZ.first()
         || {!|?
               {? DEK_POZ.IDENT=_prefix
               || _jest:=1;
                  exec('set_fld','dok_fks_aut_dok','P',_b);
                  {? exec('war_log_poz','dok_fks_aut_dok') || exec('add_tmp','dok_fks_aut_dok',_a,_b,_d,_e) ?}
               ?};
               DEK_POZ.next()
            !}
         ?};
         ~_jest & _prefix<>''
      !}
   |? _b='SN'
   || exec('add_err','dok_fks_aut_dok','11','',_b)
   || DEK_POZ.prefix(DEK_NAG.ref());
      {? DEK_POZ.first()
      || {!
         |? {? DEK_POZ.IDENT=''
            ||
               exec('set_fld','dok_fks_aut_dok','P',_b);
               {? exec('war_log_poz','dok_fks_aut_dok')
               || {? (EKSG.TSP<>'Z' & DEK_POZ.ZAL<>'Z') | (EKSG.TSP='Z' & 'TZ'*DEK_POZ.ZAL)
                  || exec('add_tmp','dok_fks_aut_dok',_a,_b,_d,_e)
                  ?}
               ?}
            ?};
            DEK_POZ.next()
         !}
      ?}
   ?}
?}


\add_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: dodaje do tabelki dekretu
::   WE: _a - ref dokumentu
::       _b - rodzaj dekretacji
::       _c - strona ( 'W' - Wn / 'M' - Ma / '' - obie strony )
::       _d - opcjonalny przy zbiorczych dokumentach (ref zbiorczego)
::  OLD: \add_tmp/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<4 || _d:=0 ?};
_wyn:=0;
{? _c='' | _c='W'
|| EKSG.STR:='W';
   _wyn:={? DEK_POZ.DEKRET_W<>null || exec('tmp_one','dok_fks_aut_dok',_a,_b,DEK_POZ.DEKRET_W,'W',_d) || 1 ?};
   {? ~_wyn || exec('add_err','dok_fks_aut_dok','05','Dekret: '+DEK_POZ.DEKRET_W().KONTOTXT,_b); undo() ?}
?};
{? _c='' | _c='M'
|| EKSG.STR:='M';
   _wyn:={? DEK_POZ.DEKRET_M<>null || exec('tmp_one','dok_fks_aut_dok',_a,_b,DEK_POZ.DEKRET_M,'M',_d) || 1 ?};
   {? ~_wyn || exec('add_err','dok_fks_aut_dok','05','Dekret: '+DEK_POZ.DEKRET_M().KONTOTXT,_b); undo() ?}
?};
{? _wyn & var_press('IsDek')=type_of(1) || IsDek+=1 ?};
1


\tmp_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: jedna strona dekretu
::   WE:  _a - ref dokumentu
::        _b - rodzaj dekretacji
::        _c - ref DEKRET
::        _d - strona
::        [_e] - opcjonalny ref dok zbiorczego
::  OLD: \tmp_one/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
 _p308:=PAR_SKID.get(308)<>'N';
{? _<5 || _e:=0 ?};
{? EKSG.SYS='PPL' & var_pres('optym')=type_of(0) & optym
|| {? (~-_b='KL' | _b='KU') & DEK_POZ.IDENT<>''
   || _rubryka:=#DEK_POZ.IDENT;
      _lista:=~(-O.LT)
   || _rubryka:=0;
      _lista:=''
   ?}
|? EKSG.SYS='KAS' & var_pres('optym')=type_of(0) & optym
|| _rubryka:=0;
   _lista:=form(DOKUMENT.LP,6,,'9.')
|| _rubryka:=0;
   _lista:=''
?};
EKSG.DEK:=_c;
EKSG.DEK();
exec('set_fld','dok_fks_aut_dok','D',_b);
{? _b='LS' | _b='LZ'  | _b='LP' | _b='LK' | _b='LX'
|| WARLOG.cntx_psh();
   WARLOG.index('KKOD');
   WARLOG.prefix(_b);
   {? WARLOG.find_key(EKSG.DEK().KW_PLN().SKROT,EKSG.DEK().KW_PLN().SKROT)
   || EKSG.WLOG:=WARLOG.ref
   || EKSG.WLOG:=null
   ?};
   WARLOG.cntx_pop();

:: [rr] czy pozycja zwiazana z VAT
:: [rr] + sprzedaz nieopodatkowana
   _typ:=EKSG.WLOG().DV;
:: [rr] rodzaj kwoty
   _rkw:=EKSG.WLOG().RKW
|| _typ:='N';
   _rkw:='D'
?};
:stawka vat w pozycji vat-owskiej
_stv:={? _typ='T'
      || {? (_b='LS' | _b='LZ' | _b='LP' | _b='LK' | _b='LX') & EKSG.TSP<>'Z' & EKSG.TSP<>'R'
         || {? FAKS.SZ='S' | (FAKS.SZ='Z' & (DEK_NAG.VPOZ_STD='R' | FAKS.T().KOR='T'))
            || FAP.SV().KOD
            || FAKSV.SV().KOD
            ?}
         |? _b='LM' || DK.SV().KOD
         |? (_b='LS' | _b='LZ' | _b='LP' | _b='LK' | _b='LX') & (EKSG.TSP='Z' | EKSG.TSP='R') || FAKSV.SV().KOD
         || 'xxx'
         ?}
      || 'xxx'
      ?};
_dsprz:={? _b='LS' | _b='LZ'
        || {? FAKS.DSP_WPOZ='T'
           || FAP.D
           || date(0,0,0)
           ?}
        || date(0,0,0)
        ?};
_kon:={? EKSG.DEK().KONTO=null
      || ''
      || _rr:=exec('exec','dok_fks_aut_dok',EKSG.DEK().KONTO().FORMULA);
         {? type_of(_rr)=2 || _rr || '' ?}
      ?};
_sum:={? EKSG.DEK().KW_PLN=null
      || 0
      || {? var_press('_rr')>0 || &_rr ?};
         _rr:=exec('exec','dok_fks_aut_dok',EKSG.DEK().KW_PLN().FORMULA);
         {? type_of(_rr)=1 || DEK_POZ.WSP*_rr || 0 ?}
      ?};
_ksu:={? EKSG.DEK().PROLOG=null
      || 0
      || {? var_press('_rr')>0 || &_rr ?};
         _rr:=exec('exec','dok_fks_aut_dok',EKSG.DEK().PROLOG().FORMULA);
         {? type_of(_rr)=1 || DEK_POZ.WSP*_rr || 0 ?}
      ?};
_kkr:={? EKSG.DEK().EPILOG=null
      || 0
      || {? var_press('_rr')>0 || &_rr ?};
         _rr:=exec('exec','dok_fks_aut_dok',EKSG.DEK().EPILOG().FORMULA);
         {? type_of(_rr)=1 || DEK_POZ.WSP*_rr || 0 ?}
      ?};
_wwl:={? EKSG.DEK().KW_WAL=null
      || 0
      || {? var_press('_rr')>0 || &_rr ?};
         _rr:=exec('exec','dok_fks_aut_dok',EKSG.DEK().KW_WAL().FORMULA);
         {? type_of(_rr)=1 || DEK_POZ.WSP*_rr || 0 ?}
      ?};
_wal:={? EKSG.DEK().WALUTA=null
      || 'PLN'
      || {? var_press('_rr')>0 || &_rr ?};
         _rr:=exec('exec','dok_fks_aut_dok',EKSG.DEK().WALUTA().FORMULA);
         {? type_of(_rr)=2 || _rr || 'PLN' ?}
      ?};
_krs:={? EKSG.DEK().KURS_WAL=null
      || 0
      || {? var_press('_rr')>0 || &_rr ?};
         _rr:=exec('exec','dok_fks_aut_dok',EKSG.DEK().KURS_WAL().FORMULA);
         {? type_of(_rr)=1 || _rr || 0 ?}
      ?};
_opi:={? EKSG.DEK().TRESC=null
      || ''
      || {? var_press('_rr')>0 || &_rr ?};
         _rr:=exec('exec','dok_fks_aut_dok',EKSG.DEK().TRESC().FORMULA);
         {? type_of(_rr)=2 || _rr || '' ?}
      ?};
:fragment z objektu dotyczacy pola DEKRET.OPERACJA - wyznaczanie dat
_sym:=_sym_rok:=''; _odat:=_dat:=date(0,0,0); _n_z:=''; _oddz:='';
{? EKSG.DEK().OPERACJA<>0
|| _sym:={? EKSG.DEK().OPERACJA=null
         || ''
         || {? var_press('_rr')>0 || &_rr ?};
            _rr:=exec('exec','dok_fks_aut_dok',EKSG.DEK().OPERACJA().FORMULA);
            {? type_of(_rr)=2 || _rr || '' ?}
         ?};
  {? _sym<>''
  ||
::   szegolowe daty dla systemu KASA
     _odat:=_rdat:=date(0,0,0);
     {? (1+_b)='S'
     || _odat:=exec('data_o','dok_fks_aut_dok',_kon,_sym); _rdat:=DOKUMENT.DATA;
        _sym_rok:=POZDOK.SYM_ROK
     ?};
     _dat:={? EKSG.DEK().DATA=null
           || date(0,0,0)
           || {? var_press('_rr')>0 || &_rr ?};
              _rr:=exec('exec','dok_fks_aut_dok',EKSG.DEK().DATA().FORMULA);
              {? type_of(_rr)=4 || _rr || date(0,0,0) ?}
           ?};
     {? _dat=date(0,0,0)
     || {? (1+_b)='S' || _dat:=exec('data_t','dok_fks_aut_dok',_kon,_sym) ?};
        {? _dat=date(0,0,0) & _odat<>date(0,0,0) || _dat:=_odat ?};
        {? _dat<>date(0,0,0) & _odat=date(0,0,0) || _odat:=_dat ?}
     ?};
     _oddz:={? (1+_b)='S' || POZDOK.ODD().OD || '' ?};
     _n_z:={? EKSG.DEK().N_Z=null
           || ''
           || {? var_press('_rr')>0 || &_rr ?};
              _rr:=exec('exec','dok_fks_aut_dok',EKSG.DEK().N_Z().FORMULA);
              {? type_of(_rr)=2 || _rr || '' ?}
           ?}
   ?}
?};
:: Rejestr VAT
:: Rejestr VAT z pozycji tylko dla dekretacji rozszerzonej poniewaz nie mozna dla dekretacji podstawowej
_rvat:={? DEK_NAG.VPOZ_STD='R' & _typ='T' & DEK_POZ.RVAT<>null
       || DEK_POZ.RVAT().SYM
       |? DEK_NAG.VPOZ_STD='R' & _typ='T' & DEK_POZ.F_RVAT().FORMULA<>''
       || exec('exec','dok_fks_aut_dok',DEK_POZ.F_RVAT().FORMULA)
       |? _typ='T' & DEK_NAG.RVAT<>null
       || DEK_NAG.RVAT().SYM
       |? _typ='T' & DEK_NAG.F_RVAT().FORMULA<>''
       || exec('exec','dok_fks_aut_dok',DEK_NAG.F_RVAT().FORMULA)
       || 'xxx'
       ?};
:: Grupa podatkowa
:: Grupa podatkowa z pozycji tylko dla dekretacji rozszerzonej poniewaz nie mozna dla dekretacji podstawowej
:: zidentytyfikowac FAKSV z kilkoma pozycjami VPOZ tej samej stawki i roznymi grupami podatkowymi
_grv:={? DEK_NAG.VPOZ_STD='R' & _typ='T' & DEK_POZ.GR<>null
      || DEK_POZ.GR().KOD
      |? DEK_NAG.VPOZ_STD='R' & _typ='T' & DEK_POZ.F_GR().FORMULA<>''
      || exec('exec','dok_fks_aut_dok',DEK_POZ.F_GR().FORMULA)
      |? _typ='T' & DEK_NAG.GR_VAT<>null
      || DEK_NAG.GR_VAT().KOD
      |? _typ='T' & DEK_NAG.F_GR_VAT().FORMULA<>''
      || exec('exec','dok_fks_aut_dok',DEK_NAG.F_GR_VAT().FORMULA)
      || 'xxx'
      ?};
:: Okres VAT
:: Okres VAT z pozycji tylko dla dekretacji rozszerzonej poniewaz nie mozna dla dekretacji podstawowej
:: zidentytyfikowac FAKSV z kilkoma pozycjami VPOZ tej samej stawki i roznymi okresami VAT
_okr:={? DEK_NAG.VPOZ_STD='R' & _typ='T' & DEK_POZ.F_VAT<>null
      || $(($DEK_POZ.F_VAT().FORMULA)())
      |? _typ='T' & DEK_NAG.F_OK_VAT<>null
      || $(($DEK_NAG.F_OK_VAT().FORMULA)())
      || 'xxx'
      ?};
_okr_ref:=null();

:: wymagany split payment
_spw:={? _typ='T' & (_b='LS' | _b='LZ' | _b='LP' | _b='LK') & EKSG.TSP<>'Z' & EKSG.TSP<>'R' &
         (FAKS.SZ='S' | DEK_NAG.VPOZ_STD='R')
      || FAP.SP_WYM
      |? var_pres('ObjFV')>0
      || ObjFV.SP_WYM
      || 'N'
      ?};

: pozycja korekty lub zaliczki - zmiana znaku
_sum:={? EKSG.TSP='B' | (EKSG.TSP='Z' & DEK_POZ.ZAL='T') || -_sum || _sum ?};
_ksu:={? EKSG.TSP='B' | (EKSG.TSP='Z' & DEK_POZ.ZAL='T') || -_ksu || _ksu ?};
_wwl:={? EKSG.TSP='B' | (EKSG.TSP='Z' & DEK_POZ.ZAL='T') || -_wwl || _wwl ?};

{? _b='EP'| _b='EF' | _b='ED' || _sum:=exec('epilog','dok_fks_aut_dok',_b,_sum) ?};

_wyr:=exec('add_wyr','dok_fks_aut_dok',DEK_NAG.ROK().SYNT+_kon,'DEK_POZ',DEK_POZ.name(),#DEK_POZ.ref(),_d,_sum);

Qpksg.prefix();
_dalej:={?  DEK_POZ.OPT='T'
        || {? _p308
           || Qpksg.find_key(_a,_d,_typ,_kon,_kon,_sym,_sym,_stv,_rvat,_grv,_okr,EKSG.WYR,EKSG.WYR,_lista, _rubryka,_spw,_dsprz)
           || Qpksg.find_key(_a,_d,_typ,_kon,_kon,_sym,_sym,_stv,_rvat,_grv,_okr,EKSG.WYR,EKSG.WYR,_lista,_rubryka,_spw)
           ?}
        || 0
        ?};
{? _dalej
|| Qpksg.NET+={? _rkw='N' || _sum || 0 ?};
   Qpksg.VAT+={? _rkw='V' || _sum || 0 ?};
   Qpksg.BRT+={? _rkw='B' || _sum || 0 ?};
   Qpksg.SUM+={? _rkw='D' || _sum || 0 ?};
   {? _rkw='V' & (_b='LS' | _b='LZ' | _b='LP' | _b='LK' | _b='LX') & DEK_NAG.VPOZ_STD='R'
     & PAR_SKID.get(83)='T' & exec('gr_pod_typ','dok_fks',_grv)=1
   || {? _okr<>'xxx' & (_okr_ref:=exec('jaki_okr','dok_fks_aut_dok',_okr))<>null()
      || ROZNE.OKRKON:=_okr_ref
      || {? ROZNE.OKR_OBR=null || ROZNE.OKR_OBR:=exec('bl_okrvat','dok_fks_aut_dok',_b) ?}
      ?};
      {? _okr<>'xxx' & _okr_ref<>null()
      || {? (_grv='ZakuPodS' | _grv='ZInwPodS')
         || _vat_odl:=(_sum*(ROZNE.OKRKON().ROK().PROC_VAT/100)*(ROK_F.PREWSK/100)*(50/100))$2
         |? (_grv='ZakuPods' | _grv='ZInwPods')
         || _vat_odl:=(_sum*(50/100))$2
         || _vat_odl:=(_sum*(ROZNE.OKRKON().ROK().PROC_VAT/100)*(ROK_F.PREWSK/100))$2
         ?};
         Qpksg.VAT_ODL+=_vat_odl;
         Qpksg.VATKOSZT+=(_sum-_vat_odl)
      || {? (_grv='ZakuPodS' | _grv='ZInwPodS')
         || _vat_odl:=(_sum*(ROZNE.OKR_OBR().ROK().PROC_VAT/100)*(ROK_F.PREWSK/100)*(50/100))$2
         |? (_grv='ZakuPods' | _grv='ZInwPods')
         || _vat_odl:=(_sum*(50/100))$2
         || _vat_odl:=(_sum*(ROZNE.OKR_OBR().ROK().PROC_VAT/100)*(ROK_F.PREWSK/100))$2
         ?};
         Qpksg.VAT_ODL+=_vat_odl;
         Qpksg.VATKOSZT+=(_sum-_vat_odl)
      ?}
   ?};
   Qpksg.WWL+=_wwl;
   Qpksg.WYR+={? EKSG.WYR<>'' || exec('gen_wyr','dok_fks_aut_dok',#Qpksg.ref(),_wyr) || 0 ?};
   Qpksg.DEK+={? _kkr>0 | _ksu<>0 || _ksu || _sum ?};
   {? _sym<>''
     & (
         (_b='LS' | (_b='LZ' & DEK_NAG.VPOZ_STD='R')) &
         (exec('FindInSet','#table','PROJ2FAP','FAP',FAP.ref(),'N',,,'P')<>null |
          exec('FindInSet','#table','SCH_XD','FAP',FAP.ref())<>null)
         )
   || exec('gen_pro','dok_fks_aut_dok',#Qpksg.ref(),$FAP.ref(),'')
   ?};
   _wyn:=Qpksg.put(1)
|| Qpksg.prefix();
   Qpksg.blank();
   {? (_b='LP' | _b='LK' | _b='LX') & _e || Qpksg.RDK:=_e || Qpksg.RDK:=_a ?};
   Qpksg.STR:=_d;
   Qpksg.TYP:=_typ;
   Qpksg.KON:=Qpksg.KO2:=_kon;
   Qpksg.STV:=_stv;
   Qpksg.LST:=_lista;
   Qpksg.RUB:=_rubryka;
   Qpksg.SPW:=_spw;
   Qpksg.DSPR:=_dsprz;
   Qpksg.NET:={? _rkw='N' || _sum || 0 ?};
   Qpksg.VAT:={? _rkw='V' || _sum || 0 ?};
   Qpksg.BRT:={? _rkw='B' || _sum || 0 ?};
   Qpksg.SUM:={? _rkw='D' || _sum || 0 ?};
   {? _rkw='V' & (_b='LS' | _b='LZ' | _b='LP' | _b='LK' | _b='LX') & DEK_NAG.VPOZ_STD='R'
     & PAR_SKID.get(83)='T' & exec('gr_pod_typ','dok_fks',_grv)=1
   || {? _okr<>'xxx' & (_okr_ref:=exec('jaki_okr','dok_fks_aut_dok',_okr))<>null()
      || ROZNE.OKRKON:=_okr_ref
      || {? ROZNE.OKR_OBR=null || ROZNE.OKR_OBR:=exec('bl_okrvat','dok_fks_aut_dok',_b) ?}
      ?};
      {? _okr<>'xxx' & _okr_ref<>null()
      || {? (_grv='ZakuPodS' | _grv='ZInwPodS')
         || _vat_odl:=(_sum*(ROZNE.OKRKON().ROK().PROC_VAT/100)*(ROK_F.PREWSK/100)*(50/100))$2
         |? (_grv='ZakuPods' | _grv='ZInwPods')
         || _vat_odl:=(_sum*(50/100))$2
         || _vat_odl:=(_sum*(ROZNE.OKRKON().ROK().PROC_VAT/100)*(ROK_F.PREWSK/100))$2
         ?};
         Qpksg.VAT_ODL:=_vat_odl;
         Qpksg.VATKOSZT:=(_sum-_vat_odl)
      || {? (_grv='ZakuPodS' | _grv='ZInwPodS')
         || _vat_odl:=(_sum*(ROZNE.OKR_OBR().ROK().PROC_VAT/100)*(ROK_F.PREWSK/100)*(50/100))$2
         |? (_grv='ZakuPods' | _grv='ZInwPods')
         || _vat_odl:=(_sum*(50/100))$2
         || _vat_odl:=(_sum*(ROZNE.OKR_OBR().ROK().PROC_VAT/100)*(ROK_F.PREWSK/100))$2
         ?};
         Qpksg.VAT_ODL:=_vat_odl;
         Qpksg.VATKOSZT:=(_sum-_vat_odl)
      ?}
   ?};
   Qpksg.WWL:=_wwl;
   Qpksg.KRS:=_krs;
   Qpksg.SYM:=Qpksg.SY2:=_sym;
   Qpksg.SYM_ROK:=_sym_rok;
   Qpksg.OPI:=_opi;
   Qpksg.N_Z:=_n_z;
   Qpksg.WAL:=_wal;
   Qpksg.OPT:=DEK_POZ.OPT='T';
   Qpksg.KN:=DEK_POZ.KN='T';
   Qpksg.DAT:=_dat;
   Qpksg.DAT_O:=_odat;
   Qpksg.RVAT:=_rvat;
   Qpksg.GRV:=_grv;
   Qpksg.OKR:=_okr;
   Qpksg.ODD:=_oddz;
   Qpksg.DEK:={? _kkr>0 | _ksu<>0 || _ksu || _sum ?};
   Qpksg.NKR:=_kkr;
   Qpksg.KWY:=Qpksg.KW2:=EKSG.WYR;
   Qpksg.REF_PROJ:='';
   {? Plugin.runnable('PROJ_REF_BUF')
   || Qpksg.REF_PROJ:=Plugin.run('PROJ_REF_BUF')
   ?};

   _wyn:={? _b='LS' || {? Qpksg.DEK || Qpksg.add(1) || -1 ?} || Qpksg.add(1) ?};
   {? _wyn>0
   || Qpksg.WYR+={? EKSG.WYR<>'' || exec('gen_wyr','dok_fks_aut_dok',#Qpksg.ref(),_wyr) || 0 ?};
      {? _sym<>'' &
         (
          (_b='LS' | (_b='LZ' & DEK_NAG.VPOZ_STD='R')) &
           (exec('FindInSet','#table','PROJ2FAP','FAP',FAP.ref(),'N',,,'P')<>null |
            exec('FindInSet','#table','SCH_XD','FAP',FAP.ref())<>null
           )
         ) & FAP.FAKS().T().PROJZAKR<>'Nie dotyczy'
      || exec('gen_pro','dok_fks_aut_dok',#Qpksg.ref(),$FAP.ref(),'')
      ?};
      Qpksg.put(1)
   ?}
?};
{? _wyn>0 & var_pres('TMPBRKAS')>0
|| TMPBRKAS.TMPPOZ:=#Qpksg.ref();
   TMPBRKAS.POZDOK:=$POZDOK.ref();
   TMPBRKAS.cntx_psh();
   TMPBRKAS.prefix(); TMPBRKAS.add();
   TMPBRKAS.cntx_pop()
?};
_wyn


\gen_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: wypelnia tabelke wyroznikow jesli sa
::   WE: _a - ref pozycji ksiegowej
::       _b - tabela z danymi
::   WY: 1-dodano wyrozniki 0-nie dodano
::  OLD: \gen_wyr/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_len:=obj_len(_b);
{! _i.._len
|! Qxksg.clear();
   {? _b[_i][2] & _b[_i][4]<>''
   || {? Qxksg.find_key(_a,_b[_i][2],_b[_i][4],_b[_i][4])
      || Qxksg.WOW+=_b[_i][5];
         _wyn+=Qxksg.put(1)
      || Qxksg.blank;
         Qxksg.KSG:=_a;
         Qxksg.POW:=_b[_i][2];
         Qxksg.SLW:=_b[_i][3];
         Qxksg.KOW:=Qxksg.KO2:=_b[_i][4];
         Qxksg.WOW:=_b[_i][5];
         _wyn+=Qxksg.add(1)
      ?}
   ?}
!};
_wyn


\add_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: wypelnia tabelke wyroznikow jesli sa
::   WE: _a - konto
::       _b - tabela
::       _c - tabname
::       _d - ref tabeli
::       _e - strona
::       _f - kwota
::   WY: dwuwymiarowa tablica danych - gdzie na _wyn[_i][1] jest
::       dodatkowo wypelniania jest zmienna EKSG.WYR - sumaryczne kody wyroznikow 6x8 = max. 48 znakow
::  OLD: \add_wyr/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
EKSG.WYR:='';
{? (_syn:=exec('czy_wyr','dok_fks_aut_dok',_a))<>null
|| SKID_WYR.index('SKID_WYR');
   SKID_WYR.prefix(REF.FIRMA,_b,_c,_d,_e);
   KS_W.index('KSSLU');
   KS_W.prefix(_syn);
   {? SKID_WYR.first
   || _rozm:=exec('ustal_il_wyr','dok_fks_aut_dok');
      _wyn:=obj_new(_rozm);
      {! _i.._rozm
      |! _wyn[_i]:=obj_new(5);
         _wyn[_i][1]:=0;
         _wyn[_i][2]:=0;
         _wyn[_i][3]:='';
         _wyn[_i][4]:='';
         _wyn[_i][5]:=0
      !};
      _i:=0;
      {!
      |? _lp:=exec('FindInSet','#table','KS_W','KSSLU',SKID_WYR.SLU,_syn,"KS_W.LP",,,0);
         {? _lp
         ||
            {? SKID_WYR.KWOTA<>null & SKID_WYR.KOD=null & SKID_WYR.FORMULA=null
            || SLO.index('SL'); SLO.prefix(SKID_WYR.SLU().SLU);
               {? SLO.first()
               || {!|?
                     _i+=1;
                     _kod:=SLO.KOD;
                     _war:={? SKID_WYR.KWOTA<>null
                           || ($SKID_WYR.KWOTA().FORMULA)()
                           || _f
                           ?}*{? SKID_WYR.PROC=0 || 1 || SKID_WYR.PROC*0.01 ?} $2;
                     _wyn[_i][1]=1;
                     _wyn[_i][2]:=_lp;
                     _wyn[_i][3]:=SKID_WYR.SLU().SLU().NAZ;
                     _wyn[_i][4]:=_kod;
                     _wyn[_i][5]:=_war;
                     EKSG.WYR+=form(_kod,8);
                     SLO.next()
                  !}
               ?}
            || _i+=1;
               _kod:={? SKID_WYR.KOD<>null || SKID_WYR.KOD().KOD
                     |? SKID_WYR.FORMULA<>null || ($SKID_WYR.FORMULA().FORMULA)()
                     || ''
                     ?};
              SLO.index('SL'); SLO.prefix(SKID_WYR.SLU().SLU);
              {? SLO.find_key(_kod,)
              || _war:={? SKID_WYR.KWOTA<>null
                       || ($SKID_WYR.KWOTA().FORMULA)()
                       || _f
                       ?}*{? SKID_WYR.PROC=0 || 1 || SKID_WYR.PROC*0.01 ?} $2;

                  _wyn[_i][1]=1;
                  _wyn[_i][2]:=_lp;
                  _wyn[_i][3]:=SKID_WYR.SLU().SLU().NAZ;
                  _wyn[_i][4]:=_kod;
                  _wyn[_i][5]:=_war;
                  EKSG.WYR+=form(_kod,8)
              ?}
            ?}
         ?};
         SKID_WYR.next
      !}
::  Uzupełnianie wyróżników wartością domyślną przypisaną do konta
   |? KS_W.first()
   || _rozm:=KS_W.size();
      _wyn:=obj_new(_rozm);
      {! _i.._rozm
      |! _wyn[_i]:=obj_new(5);
         _wyn[_i][1]:=0;
         _wyn[_i][2]:=0;
         _wyn[_i][3]:='';
         _wyn[_i][4]:='';
         _wyn[_i][5]:=0
      !};
      _i:=0;
      {!
      |? {? KS_W.AN='S'
         || _i+=1;
            _kod:=KS_W.ST().KOD;
            _wyn[_i][1]=1;
            _wyn[_i][2]:=KS_W.LP;
            _wyn[_i][3]:=KS_W.SLU().SLU().NAZ;
            _wyn[_i][4]:=_kod;
            _wyn[_i][5]:=_f;
            EKSG.WYR+=form(_kod,8)
         ?};
          KS_W.next()
      !}
   ?}
?};
_wyn


\czy_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: sprawdzenie czy wyrozniki stosowane dla danego konta
::   WE: _a - symbol konta
::  OLD: \czy_wyr/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_syn:=null; _wyr:=null;
{? exec('get_par','#parametr',35)='T'
|| _syn:=exec('FindInSet','#table','KS','SYM',_a,POMOC.OKR().ROK);
   _wyr:={? _syn<>null || exec('FindInSet','#table','KS_W','LP',_syn) || null ?}
?};
{? _wyr<>null || _syn || null ?}


\ustal_il_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [BZ] [12.30]
:: OPIS: Formula ustala faktyczna liczbe wyroznikow dla pozycji (razem z wyroznikami rozdzielnikowymi)
::   WY: liczba wyroznikow
::  OLD: \ustal_il_wyr/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_il:=0;
SKID_WYR.cntx_psh();
{? SKID_WYR.first()
|| {!|?
      {? SKID_WYR.KWOTA<>null & SKID_WYR.KOD=null & SKID_WYR.FORMULA=null
      || SLO.index('SL'); SLO.prefix(SKID_WYR.SLU().SLU);
         _il+=SLO.size
      || _il+=1
      ?};
      SKID_WYR.next()
   !}
?};
SKID_WYR.cntx_pop();
_il


\init_amor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Formula inicjujaca ksiegowanie amortyzacji. Formula zaklada tabele tymczasowa do rozliczania zaokraglen
::  OLD: \init_amor/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('Qsamor');
Qsamor:=tab_tmp(2
   ,'DEK','INTEGER',''
   ,'POZ','INTEGER',''
   ,'LP','INTEGER' ,''
   ,'SUM','REAL'   ,'')


\epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula uzupelnia wartosc dekretu o grosze wynikajace z zaokraglenia
::       Dla amortyzaji roznicowej
::   WE: _a - rodzaj dekretacji
::       _b - wartosc
::   WY: wartosc uzupelniona o grosze w przypadku roznicy wynikajacej z zaokraglenia
::  OLD: \epilog/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
_war:=_b;
{? Qsamor.find_key(#EKSG.DEK,#DEK_POZ.ref)
|| {? Qsamor.LP<lp || Qsamor.LP:=lp; Qsamor.SUM+=_war$2; Qsamor.put() ?}
|| Qsamor.LP:=lp; Qsamor.SUM:=_war; Qsamor.DEK:=#EKSG.DEK; Qsamor.POZ:=#DEK_POZ.ref(); Qsamor.add()
?};
_ref:=KKOSZ.ref();
{? _war$2<>0 & KKOSZ.size>1 & KKOSZ.last() & KKOSZ.ref=_ref
|| {? _a='EP'
   || {? EKSG.DEK().KW_PLN().SKROT='AMORT_PG'
      || _w:=Qsamor.SUM
      || _w:=SRSW.AMOP$2
      ?}
   |? _a='EF'
   || {? EKSG.DEK().KW_PLN().SKROT='ROZNICA'
      || _w:=SRSW.AMOF$2-SRSW.AMOP$2
      |? EKSG.DEK().KW_PLN().SKROT='AMORT_FG'
      || _w:=Qsamor.SUM
      |? EKSG.DEK().KW_PLN().SKROT='AMORT_P'
      || _w:=SRSW.AMOP$2
      || _w:=SRSW.AMOF$2
      ?}
   |? _a='ED'
   || {? EKSG.DEK().KW_PLN().SKROT='AMORT_DG'
      || _w:=Qsamor.SUM
      || _w:=SRSW.AMOD$2
      ?}
   ?};
   {? DEK_POZ.WSP<>1 || _w:=(_w*DEK_POZ.WSP)$2 ?};
   {? Qsamor.SUM-_w<>0 || _war+=(_w-Qsamor.SUM)$2 ?}
?};
KKOSZ.seek(_ref);
_war


\data_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula
:: OLD: \data_t/ksg_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_d:=POZDOK.TP;
SLUAPPL.cntx_psh();
SLUAPPL.index('NAZ');
SLUAPPL.prefix('F','WALUTY');
{? SLUAPPL.first()
|| SLO.cntx_psh();
   SLO.index('SL');
   SLO.prefix(SLUAPPL.SLU,POZDOK.DOKUMENT().WALUTA().SYM);
   {? SLO.first()
   || OP.cntx_psh();
      OP.index('KON_O');
      {? POZDOK.SYM_ROK<>''
      || OP.prefix(SLO.ref(),USRCONST.STANKAS().STANKAS().ODD,_a,_b,_b,POZDOK.SYM_ROK)
      || OP.prefix(SLO.ref(),USRCONST.STANKAS().STANKAS().ODD,_a,_b,_b)
      ?};
      {? OP.first() || _d:=OP.TZ ?};
      OP.cntx_pop()
   ?};
   SLO.cntx_pop()
?};
SLUAPPL.cntx_pop();
_d


\data_o
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula
::  OLD: \data_o/ksg_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_d:=POZDOK.DATA1;
SLUAPPL.cntx_psh();
SLUAPPL.index('NAZ');
SLUAPPL.prefix('F','WALUTY');
{? SLUAPPL.first()
|| SLO.cntx_psh();
   SLO.index('SL');
   SLO.prefix(SLUAPPL.SLU,POZDOK.DOKUMENT().WALUTA().SYM);
   {? SLO.first()
   || OP.cntx_psh();
      OP.index('KON_O');
      {? POZDOK.SYM_ROK<>''
      || OP.prefix(SLO.ref(),USRCONST.STANKAS().STANKAS().ODD,_a,_b,_b,POZDOK.SYM_ROK)
      || OP.prefix(SLO.ref(),USRCONST.STANKAS().STANKAS().ODD,_a,_b,_b)
      ?};
      {? OP.first() || _d:=OP.DO ?};
      OP.cntx_pop()
   ?};
   SLO.cntx_pop()
?};
SLUAPPL.cntx_pop();
_d


\war_log_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: wykorzystywana w one_poz ksg.fml
::  OLD: \war_log_poz/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEK_POZ.WARLOG<>''
|| _rr:=exec('exec','dok_fks_aut_dok',DEK_POZ.WARLOG);
   {? type_of(_rr) || _rr || 0 ?}
|| 1
?}


\pozycje_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula na podstawie ustawionego wczesniej bufora schematu dekretacji DEK_NAG
::       dekretuje pozycje uruchamniajac dla kazdej poz. dekretacje nastepnie dodaje
::       dokument na podstawie przygotowanych wczesniej tabel tymczasowych
::   WE: _ - rodzaj dekretacji
::  OLD: \pozycje/ksg_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_skid_nag:=DEK_NAG.ref();
pierwszy:=1;
{? _a='SV'
|| _ref_nag:=POZDOK.ref();
   _rdk:=#_ref_nag;
   _czy:=0;
   {? -POZDOK.ZAKS='n' & POZDOK.POZOPER().VAT='T'
   || POZOPER.OPER();
      EKSG.REJ:=POZDOK.REJ;
      exec('set_fld','dok_fks_aut_dok','N',_a);
      POZDOK.cntx_psh();
      _wn:=_ma:=0;
      {? _wn=0 | _ma=0
      || VPD.index('VPD');
         VPD.prefix(POZDOK.ref());
         {? VPD.first()
         ||
            {!|?
               {? _wn=0 & _ma=0
               || exec('one_poz','dok_fks_aut_dok',_rdk,_a)
               |? _wn=0
               || exec('one_poz','dok_fks_aut_dok',_rdk,_a,'','W')
               |? _ma=0
               || exec('one_poz','dok_fks_aut_dok',_rdk,_a,'','M')
               ?};
               pierwszy:=0;
               VPD.next()
            !}
         ?}
      ?};
      POZDOK.cntx_pop()
   ?}
|? _a='SN' & EKSG.REJ().CZY_DZ<>'T'
|| _ref_nag:=RAPORT.ref();
   _rdk:=#_ref_nag;
   {!|?
      POZDOK.index('DOKUMENT'); POZDOK.prefix(DOKUMENT.ref);
      {? POZDOK.first()
      || exec('set_fld','dok_fks_aut_dok','N',_a);
         {!|?
            {? -POZDOK.ZAKS='n' & POZDOK.POZOPER().VAT<>'T'
            || POZOPER.OPER();
               _wn:=_ma:=0;
               {? _wn=0 & _ma=0
               || exec('one_poz','dok_fks_aut_dok',_rdk,_a,$POZDOK.POZOPER)
               |? _wn=0
               || exec('one_poz','dok_fks_aut_dok',_rdk,_a,$POZDOK.POZOPER,'W')
               |? _ma=0
               || exec('one_poz','dok_fks_aut_dok',_rdk,_a,$POZDOK.POZOPER,'M')
               ?}
            ?};
            POZDOK.next()
         !}
      ?};
      DOKUMENT.next()
   !}
|? _a='SN' & EKSG.REJ().CZY_DZ='T'
|| _ref_nag:=DOKUMENT.ref();
   _rdk:=#_ref_nag;
   POZDOK.index('DOKUMENT'); POZDOK.prefix(DOKUMENT.ref);
   {? POZDOK.first()
   || exec('set_fld','dok_fks_aut_dok','N',_a);
      {!|?
         {? -POZDOK.ZAKS='n' & POZDOK.POZOPER().VAT<>'T'
         || EKSG.ESYM:=form(POZOPER.OPER().KOD,8)+form(POZOPER.KOD);
            _wn:=_ma:=0;
            {? _wn=0 & _ma=0
            || exec('one_poz','dok_fks_aut_dok',_rdk,_a,$POZDOK.POZOPER)
            |? _wn=0
            || exec('one_poz','dok_fks_aut_dok',_rdk,_a,$POZDOK.POZOPER,'W')
            |? _ma=0
            || exec('one_poz','dok_fks_aut_dok',_rdk,_a,$POZDOK.POZOPER,'M')
            ?}
         ?};
         POZDOK.next()
      !}
   ?}
?};
&pierwszy;
_wyn:=0;
:: zakladana transakcja w srodku formuly ('add_dok','dok_fks_aut_dok')
_dok:=exec('add_dok','dok_fks_aut_dok',_rdk,_a);
{? _dok & do_state()=1
|| {? _a='SV'
   || {? -POZDOK.ZAKS='n' & POZDOK.POZOPER().VAT='T'
      || POZDOK.ZAKS:='T'; POZDOK.put()
      ?}
   |? _a='SN' & EKSG.REJ().CZY_DZ<>'T'
   || {? DOKUMENT.first()
      || {!|?
            POZDOK.index('DOKUMENT'); POZDOK.prefix(DOKUMENT.ref);
            {? POZDOK.first()
            || {!|?
                  POZDOK.cntx_psh();
                  {? -POZDOK.ZAKS='n' & POZDOK.POZOPER().VAT<>'T'
                  || POZDOK.ZAKS:='T'; POZDOK.put()
                  ?};
                  POZDOK.cntx_pop(); POZDOK.next()
               !}
            ?};
            DOKUMENT.next()
         !}
      ?}
   |? _a='SN' & EKSG.REJ().CZY_DZ='T'
   || POZDOK.index('DOKUMENT'); POZDOK.prefix(DOKUMENT.ref);
      {? POZDOK.first()
      || {! |?
            POZDOK.cntx_psh();
            {? -POZDOK.ZAKS='n' & POZDOK.POZOPER().VAT<>'T'
            || POZDOK.ZAKS:='T'; POZDOK.put()
            ?};
            POZDOK.cntx_pop(); POZDOK.next()
         !}
      ?}
   ?};
   _wyn:=end()
|? do_state() || end()
?};
{? _wyn
|| _wn_ma:=exec('spr_dekr','dok_fks_aut_dok',_dok);
   _err:=0;
   {? _wn_ma[1]-_wn_ma[2]<>0
   || _err:=1;_err_txt:='Różnica stron WN-MA: '+form(_wn_ma[1]-_wn_ma[2],,2)
   |? _wn_ma[1]=0 & _wn_ma[2]=0
   || _err:=1;_err_txt:='Brak pozycji'
   ?};
   {? 'TA'*EKSG.ETRB & _err
   || exec('add_err','dok_fks_aut_dok','13',_err_txt,_a)
   ?}
?};
Qpksg.prefix(); {? Qpksg.first() || {! |? Qpksg.del() !} ?};
Qxksg.prefix(); {? Qxksg.first() || {! |? Qxksg.del() !} ?};
_wyn


\pozycje_ew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula rejestruje pozycje dla dokumentow wartosciowych
::  OLD: \pozycje_ew/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
   _skid_nag:=DEK_NAG.ref();
   _ref_nag:=SRDO.ref();
   _rdk:=#_ref_nag;

:: zbieram dane dla danego dokumentu
   SRDO.cntx_psh();

   _wn:=_ma:=0;
   {? exec('czy_zap_es','dok_fks_aut_dok','EW','W')
   || _wn:=1; exec('wyp_zap_es','dok_fks_aut_dok',_rdk,'EW','W')
   ?};
   {? exec('czy_zap_es','dok_fks_aut_dok','EW','M')
   || _ma:=1; exec('wyp_zap_es','dok_fks_aut_dok',_rdk,'EW','M')
   ?};
   {? _wn=0 & _ma=0
   || exec('one_poz','dok_fks_aut_dok',_rdk,'EW')
   |? _wn=0
   || exec('one_poz','dok_fks_aut_dok',_rdk,'EW','','W')
   |? _ma=0
   || exec('one_poz','dok_fks_aut_dok',_rdk,'EW','','M')
   ?};

   SRDO.cntx_pop();

:: stworzenie dokumentu

   _dok:=exec('add_dok','dok_fks_aut_dok',_rdk,'EW');
   {? _dok & do_state()=1
   || DOK.cntx_psh();
      DOK.prefix();
      {? DOK.seek(_dok) || _uid:=DOK.uidref() ?};
      DOK.cntx_pop();
      SRDO.DOKKSIEG:=_uid;
      SRDO.cntx_psh();
      SRDO.prefix();
      SRDO.put();
      SRDO.cntx_pop();
      _wyn:=end()
   |? do_state() || end()
   ?};
   {? _wyn
   || _wn_ma:=exec('spr_dekr','dok_fks_aut_dok',_dok);
      _err:=0;
      {? _wn_ma[1]-_wn_ma[2]<>0
      || _err:=1;_err_txt:='Różnica stron WN-MA: '+form(_wn_ma[1]-_wn_ma[2],,2)
      |? _wn_ma[1]=0 & _wn_ma[2]=0
      || _err:=1;_err_txt:='Brak pozycji'
      ?};
      {? 'TA'*EKSG.ETRB & _err
      || exec('add_err','dok_fks_aut_dok','13',_err_txt,'EW')
      ?}
   ?};
   Qpksg.prefix(); {? Qpksg.first() || {! |? Qpksg.del() !} ?};
   Qxksg.prefix(); {? Qxksg.first() || {! |? Qxksg.del() !} ?};
_wyn


\czy_zap_es
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula sprawdza czy sa zapisy w ATRUSE dotyczace dekretu
::   WE: _a - rodzaj dekretacji
::       _b - strona (W/M)
::   WY:
::  OLD: \czy_zap/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
_rr:=0;
{? _a='EP' | _a='EF' | _a='ED'
|| ATRDEF.index('AKRONIM');
   ATRDEF.prefix(EKSG.SYS,'T','ZAPIS_'+_b);
   {? ATRDEF.first()
   || _rr:={? ~exec('fnd_cec','dok_fks_aut_dok',SRSR.name(),#SRSR.ref(),ATRDEF.ref())
           || SRSR.GR();
              {? ~exec('fnd_cec','dok_fks_aut_dok',TAM.name(),#TAM.ref(),ATRDEF.ref())
              || TSR.index('TYPK'); TSR.prefix(SRSR.ref);
                 {? TSR.first()
                 || {!|? TSR.TYP;
                         _k:=exec('fnd_cec','dok_fks_aut_dok',TSK.name(),#TSK.ref(),ATRDEF.ref());
                         _k=0 & TSR.next()
                    !}; _k
                 || 0
                 ?}
              || 1
              ?}
           || 1
           ?}
   ?}
?};
_rr


\fnd_cec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Szukanie cech
::  OLD: \fnd_cec/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
ATRDEFWD.index('KLASA');
ATRDEFWD.prefix(_a,_b,_c);
{? ATRDEFWD.first()
|| {! |?
      {? exec('fnd_dek','dok_fks_aut_dok') || _ok:=DEKRET.KONTO & DEKRET.KW_PLN ?};
      _ok=0 & ATRDEFWD.next()
   !}
?};
_ok


\fnd_dek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Szukanie dekretów
::  OLD: \fnd_dek/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
DEKRET.index('REF');
{? ATRDEFWD.CZY_WARD='T'
|| _for:=ATRDEF.CZY_KOP;   DEKRET.prefix(REF.FIRMA,'ATRDEF',#ATRDEF.ref)
|| _for:=ATRDEFWD.CZY_KOP; DEKRET.prefix(REF.FIRMA,'ATRDEFWD',#ATRDEFWD.ref)
?};
{? DEKRET.first
|| {? form(_for)<>'' || _for:=($_for)(); type_of(_for)=1 & _for || 1 ?}
?}


\wyp_zap_es
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula wypelnia tabelke tymczasowa na podstawie ATRUSE
::   WE: _a - ref dokumentu
::       _b - rodzaj dekretacji
::       _c - strona (W/M)
::  OLD: \wyp_zap/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? _b='EW'
|| {? ATRUSE_E.first()
   || {!|?
        _kon:=ATRUSE_E.KON;
        _sum:=ATRUSE_E.SUM;
        _wwl:=ATRUSE_E.SUMW;
        _wal:=ATRUSE_E.WAL().KOD;
        _krs:=ATRUSE_E.KURS;
        _sym:=ATRUSE_E.ID;
        _opi:=ATRUSE_E.OP;
        _dat:=ATRUSE_E.TP;
        _dat_o:=ATRUSE_E.DO;
        _n_z:=ATRUSE_E.TID;


        _wyr:=exec('add_wyr_ew','dok_fks_aut_dok',DEK_NAG.ROK().SYNT+_kon,_c);

         Qpksg.prefix();
         Qpksg.blank();
         Qpksg.RDK:=_a;
         Qpksg.STR:=_c;
         Qpksg.TYP:='N';
         Qpksg.KON:=Qpksg.KO2:=_kon;
         Qpksg.STV:='xxx';
         Qpksg.SUM:=_sum;
         Qpksg.WWL:=_wwl;
         Qpksg.KRS:=_krs;
         Qpksg.SYM:=Qpksg.SY2:=_sym;
         Qpksg.OPI:=_opi;
         Qpksg.N_Z:=_n_z;
         Qpksg.WAL:=_wal;
         Qpksg.OPT:=0;
         Qpksg.DAT:=_dat;
         Qpksg.DAT_O:=_dat_o;
         Qpksg.RVAT:='xxx';
         Qpksg.GRV:='xxx';
         Qpksg.OKR:='xxx';
         Qpksg.DEK:=0;
         Qpksg.NKR:=0;
         Qpksg.KWY:=Qpksg.KW2:=EKSG.WYR;
         Qpksg.SPW:='N';
         _wyn:=Qpksg.add(1);
         {? _wyn
         || Qpksg.WYR+={? EKSG.WYR<>'' || exec('gen_wyr','dok_fks_aut_dok',#Qpksg.ref(),_wyr) || 0 ?};
            Qpksg.put(1)
         ?};
         &_wyr;
         _wyn & ATRUSE_E.next()
      !}
   ?}
|? _b='EP' | _b='EF'
|| {!|?
      {? exec('fnd_dek','dok_fks_aut_dok')
      || exec('tmp_one','dok_fks_aut_dok',_a,_b,DEKRET.ref,_c)
      ?};
      ATRDEFWD.next()
   !}
?}


\add_wyr_ew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula wypelnia tabelke pomocnicza z wyroznikami dla cech przy dokumentach wartosciowych
::   WE: _a - Konto syntetyczne dla ktorego sa wprowadzane wyrozniki
::       _b - strona (W/M)
::  OLD: \add_wyr_ew/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
EKSG.WYR:='';
{? (_syn:=exec('czy_wyr','dok_fks_aut_dok',_a))<>null
|| {? exec('czy_wyr_es','dok_fks_aut_dok')
   || _rozm:=ATR_WYRE.size();
      _wyn:=obj_new(_rozm);
      {! _i.._rozm
      |! _wyn[_i]:=obj_new(5);
         _wyn[_i][1]:=0;
         _wyn[_i][2]:=0;
         _wyn[_i][3]:='';
         _wyn[_i][4]:='';
         _wyn[_i][5]:=0
      !};
      _i:=0;
      {!
      |? _i+=1;
         _sld:=exec('FindInSet','#table','KS_W','LP',ATR_WYRE.LP,_syn,"KS_W.SLU",,,null());
         SLUAPPL.cntx_psh();
         SLUAPPL.clear;
         _slu:={? _sld<>null & SLUAPPL.seek(_sld) || SLUAPPL.SLU || null ?};
         SLUAPPL.cntx_pop();
         {? _slu=ATR_WYRE.SLU().SLU
         ||
::          dodajemy wyroznik
            _kod:={? ATR_WYRE.SLO<>null || ATR_WYRE.SLO().KOD || '' ?};
            _war:=ATR_WYRE.KW;

            _wyn[_i][1]:=1;
            _wyn[_i][2]:=ATR_WYRE.LP;
            _wyn[_i][3]:=ATR_WYRE.SLU().SLU().NAZ;
            _wyn[_i][4]:=_kod;
            _wyn[_i][5]:=_war;
            EKSG.WYR+=form(_kod,8)
         ?};
         ATR_WYRE.next()
      !}
   ?}
?};
_wyn


\czy_wyr_es
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula sprawdza czy dla zapisow sa wypelnione wyrozniki
::  OLD: \czy_wyr/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
ATR_WYRE.index('LP');
ATR_WYRE.prefix(ATRUSE_E.ref());
ATR_WYRE.first()


\pozycje_ot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula rejestruje pozycje dla dokumentow ot
::  OLD: \pozycje_ot/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
   _skid_nag:=DEK_NAG.ref();
   _ref_nag:=SRDO.ref();
   _rdk:=#_ref_nag;

:: zbieram dane dla danego dokumentu
   SRDO.cntx_psh(); SRSR.cntx_psh();
   exec('one_poz','dok_fks_aut_dok',_rdk,'ET');

   SRSR.cntx_pop(); SRDO.cntx_pop();

:: stworzenie dokumentu

   _dok:=exec('add_dok','dok_fks_aut_dok',_rdk,'ET');
   {? _dok & do_state()=1
   || _maska:=(ref_name(_dok)+4);
      SRDO.DOKKSIEG:=_maska+$(#_dok);
      SRDO.put();
      SRDO.SRSR();
      SRSR.DOKKSIEG:=_maska+$(#_dok);
      SRSR.put();
      _wyn:=end()
   |? do_state() || end()
   ?};
   {? _wyn
   || _wn_ma:=exec('spr_dekr','dok_fks_aut_dok',_dok);
      _err:=0;
      {? _wn_ma[1]-_wn_ma[2]<>0
      || _err:=1;_err_txt:='Różnica stron WN-MA: '+form(_wn_ma[1]-_wn_ma[2],,2)
      |? _wn_ma[1]=0 & _wn_ma[2]=0
      || _err:=1;_err_txt:='Brak pozycji'
      ?};
      {? 'TA'*EKSG.ETRB & _err
      || exec('add_err','dok_fks_aut_dok','13',_err_txt,'ET')
      ?}
   ?};
   Qpksg.prefix(); {? Qpksg.first() || {! |? Qpksg.del() !} ?};
   Qxksg.prefix(); {? Qxksg.first() || {! |? Qxksg.del() !} ?};
_wyn


\pozycje_amor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula rejestruje pozycje dla amortyzacji środków
::   WE: _a  - rodzaj dekretacji
::  OLD: \pozycje_amor/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
_skid_nag:=DEK_NAG.ref();
_ref_nag:=ODD.ref();
_rdk:=#_ref_nag;
{? var_pres('Qsamor')<=0 || exec('init_amor','dok_fks_aut_dok') ?};
:: zbieram dane dla danego dokumentu
ODD.cntx_psh();
lp:=0;
{? SRST.first()
|| {! |?
:: pomijanie stanów z innych j. księgowych, zestawów i środków zbytych
      {? SRST.ODD=ODD.ref & SRST.GRP<>'T'& SRST.R<>'S'
      || SRST.GR();
         SRSW.cntx_psh();
         SRSW.index('SSRW');
         SRSW.prefix(SRST.ref());
         {? SRSW.first()
         || {! |?
               {? (_a='EP' & (SRSW.AMOP$2<>0 | SRSW.AMOF$2-SRSW.AMOP$2<>0))
                  | (_a='EF' & SRSW.AMOF$2<>0) | (_a='ED' & SRSW.AMOD$2<>0)
               || {? (_a='EP' & SRSW.KONPOD<>null) | (_a='EF' & SRSW.KONFIN<>null) | (_a='ED' & SRSW.KONDOD<>null)
                  || Qsamor.erase();
                     KKOSZ.index('KONTO');
                     {? _a='EP' || KKOSZ.prefix(SRSW.KONPOD)
                     |? _a='EF' || KKOSZ.prefix(SRSW.KONFIN)
                     |? _a='ED' || KKOSZ.prefix(SRSW.KONDOD)
                     ?};
                     lp:=0;
                     {? KKOSZ.first()
                     || {! |? lp+=1;
:                          SD_OB.loop('AMOR');
                           exec('one_poz','dok_fks_aut_dok',_rdk,_a,TAM.GR);
                           KKOSZ.next()
                        !}
                     ?}
                  ?}
               ?};
               SRSW.next()
            !}
         ?};
         SRSW.cntx_pop();
:: znacznik dekretowania
         {? SRST.DEKRET<>'T'
         || SRST.DEKRET:='T';
            __SRSTOF:=1;
            SRST.put();
            {? SRST.GRP='E'
            || SRST.cntx_psh();
               _t:=SRST.TREE;
               SRST.prefix();
               {? SRST.seek(_t,SRST.name()) & SRST.DEKRET<>'T'
               || SRST.DEKRET:='T';
                  SRST.put()
               ?};
               SRST.cntx_pop()
            ?};
            __SRSTOF:=1
         ?}
      ?};
      SRST.next()
   !}
?};
&lp;
ODD.cntx_pop();
:: stworzenie dokumentu
_dok:=exec('add_dok','dok_fks_aut_dok',_rdk,_a);
{? _dok
|| _wn_ma:=exec('spr_dekr','dok_fks_aut_dok',_dok);
   _err:=0;
   {? _wn_ma[1]-_wn_ma[2]<>0
   || _err:=1;_err_txt:='Różnica stron WN-MA: '+form(_wn_ma[1]-_wn_ma[2],,2)
   |? _wn_ma[1]=0 & _wn_ma[2]=0
   || _err:=1;_err_txt:='Brak pozycji'
   ?};
   {? 'TA'*EKSG.ETRB & _err
   || exec('add_err','dok_fks_aut_dok','13',_err_txt,_a)
   ?}
?};
Qpksg.prefix(); {? Qpksg.first() || {! |? Qpksg.del() !} ?};
Qxksg.prefix(); {? Qxksg.first() || {! |? Qxksg.del() !} ?};
_dok<>null


\pozycje_lm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula rejestruje pozycje dla dokumentow magazynowych
::   WE: _a - Rodzaj dekretacji
::  OLD: \pozycje_lm/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_skid_nag:=DEK_NAG.ref();
_ref_nag:=ND.ref();
_rdk:=#_ref_nag;
:: zbieram dane dla danego dokumentu
EKSG.TSP:='M';
ND.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_ref_nag);
{? DK.first()
|| {!
   |? exec('one_poz','dok_fks_aut_dok',_rdk,_a);
      DK.next()
   !}
|| 0
?};
ND.cntx_pop();
:: stworzenie dokumentu
_dok:=exec('add_dok','dok_fks_aut_dok',_rdk,_a);
{? _dok
|| _wn_ma:=exec('spr_dekr','dok_fks_aut_dok',_dok);
   _err:=0;
   {? _wn_ma[1]-_wn_ma[2]<>0
   || _err:=1;_err_txt:='Różnica stron WN-MA: '+form(_wn_ma[1]-_wn_ma[2],,2)
   |? _wn_ma[1]=0 & _wn_ma[2]=0
   || _err:=1;_err_txt:='Brak pozycji'
   ?};
   {? 'TA'*EKSG.ETRB & _err
   || exec('add_err','dok_fks_aut_dok','13',_err_txt,_a)
   ?}
?};
Qpksg.prefix(); {? Qpksg.first() || {! |? Qpksg.del() !} ?};
Qxksg.prefix(); {? Qxksg.first() || {! |? Qxksg.del() !} ?};
_dok<>null


\pozycje_kl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS, KGS [2011]
:: OPIS: Petla po liscie
::  OLD: \pozycje_kl/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
_tab_o:=O;
__rdk:=#O.ref();
_wyn:=_err:=_wn:=_ma:=0;
_list:='';
{? __licz=1
|| _komm:="{? +O.DOK
           || exec('add_err','dok_fks_aut_dok','','Lista zadekretowana wcześniej.','KL');0
           |? O.T().T='SUM'
           || exec('add_err','dok_fks_aut_dok','','Lista SUM nie podlega dekretacji.','KL');0
           |? O.F_ZATR().KOD='Z' & exec('one_rh_dok','dok_fks_aut_dok')
           || exec('add_err','dok_fks_aut_dok','','Rachunki umów z listy są już częściowo zaksięgowane.','KL');0
           || 1
           ?}";

   _ustaw:="FUNKCJE.OTWOLIST();
            LS.index('NAZWRUBR');
            LS.prefix(O.FIRMA);
            ATRUSE_L.use('kak'+'l'+($O.R+2)+form(O.M,-2));
            ATR_WYRL.use('kwk'+'l'+($O.R+2)+form(O.M,-2));
            {? var_pres('ile_list')>0 || ile_list+=1 ?};
            {? var_pres('listy')>0 || listy+=(~(-O.LT)+', ') ?};
            prac_w:=prac_m:=rub_w:=rub_m:=null
           ";

   _listy:="_wn:=_ma:=0;
            {? LS.first
            || _txt:={? +__grp>0
                     || 'Przebieg '+__grp+'\nPrzetwarzanie listy '
                     || 'Trwa księgowanie listy płac '
                     ?}+(~O.LT);
               PROGRESS.set(LS.size,_txt,FUN.TYT);
               {!
               |? LS.RB();
                  LS.P();
                  {? prac_w<>LS.P | rub_w<>LS.RB || _wn:=0 ?};
                  {? prac_m<>LS.P | rub_m<>LS.RB || _ma:=0 ?};
                  {? exec('czy_zap_ksieguj','dok_fks_aut_dok','KL','W','PPL')
                  || _wn:=1;
                     exec('wyp_zap_ksieguj','dok_fks_aut_dok',__rdk,'KL','W')
                  ?};
                  {? exec('czy_zap_ksieguj','dok_fks_aut_dok','KL','M','PPL')
                  || _ma:=1;
                     exec('wyp_zap_ksieguj','dok_fks_aut_dok',__rdk,'KL','M')
                  ?};
                  {? _wn=0 & _ma=0
                  || exec('one_poz','dok_fks_aut_dok',__rdk,'KL',$R.RN)
                  |? _wn=0
                  || exec('one_poz','dok_fks_aut_dok',__rdk,'KL',$R.RN,'W')
                  |? _ma=0
                  || exec('one_poz','dok_fks_aut_dok',__rdk,'KL',$R.RN,'M')
                  ?};
                  PROGRESS.next();
                  LS.next
               !};
               PROGRESS.close()
            ?}
           ";

   {? __optym & _tab_o.sel_size>0
   || 'Wykonanie z optymalizacja list - wiele list, jeden dokument';
      _select:=_tab_o.sel_aget;
      {? _select.first
      ||
         {!
         |? __grp:={? ~+__grp
                   || '1/'+$_tab_o.sel_size
                   || _lx:=__grp*'/';
                      $((#(__grp-_lx))+1)+(__grp+_lx)
                   ?};
            {? _tab_o.seek(_select.REF,_tab_o.name)
            || _tab_o.get();
               {? _komm()
               || _list:=_list+','+~O.LT;
                  _ustaw();
                  _listy()
               ?}
            ?};
            _select.next
         !};
         {? 1+_list=',' || _list:=1-_list ?};
         progress(0,'Trwa analiza pobranych informacji...'@,FUN.TYT,1);
         __dok:=exec('add_dok','dok_fks_aut_dok',__rdk,'KL');
         prgs_clr();
         {? __dok & do_state()=1
         || DOK.TR:={? _list*',' || 'Listy ' || 'Lista ' ?}+'płac: '+_list;
            DOK.NK:='LS_'+STR.gsub(DOK.DTW$1,'/','-');
            DOK.put(1);
            _select.first;
            {!
            |? {?_tab_o.seek(_select.REF,_tab_o.name)
               || _tab_o.get();
                  _ustaw();
                  exec('zaliczki','dok_fks_aut_dok','KLI',__rdk,'KL');
                  {? _list*(~O.LT)
                  || O.DOK:=$DOK.ref();
                     O.put(1);
                     exec('rh_dok','dok_fks_aut_dok')
                  ?}
               ?};
               _select.next
            !};
            _wyn:=end()
         |? do_state()=1 || end()
         ?}
      ?}
   || 'Wykonanie bez optymalizacji list - wiele list, wiele dokumentow';
      {? ~_komm() || return(0) ?};
      _ustaw();
      _listy();
      progress(0,'Trwa analiza pobranych informacji...'@,FUN.TYT,1);
      __dok:=exec('add_dok','dok_fks_aut_dok',__rdk,'KL');
      prgs_clr();
      {? __dok & do_state()=1
      || exec('zaliczki','dok_fks_aut_dok','KLI',__rdk,'KL');
         O.DOK:=$DOK.ref();
         O.put(1);
         exec('rh_dok','dok_fks_aut_dok');
         _wyn:=end()
      |? do_state() || end()
      ?}
   ?};
   {? _wyn
   || _wn_ma:=exec('spr_dekr','dok_fks_aut_dok',__dok);
      _err:=0;
      {? _wn_ma[1]-_wn_ma[2]<>0
      || _err:=1;_err_txt:='Różnica stron WN-MA: '+form(_wn_ma[1]-_wn_ma[2],,2)
      |? _wn_ma[1]=0 & _wn_ma[2]=0
      || _err:=1;_err_txt:='Brak pozycji'
      ?};
      {? 'TA'*EKSG.ETRB & _err
      || exec('add_err','dok_fks_aut_dok','',_err_txt,'KL')
      ?}
   ?};

   Qpksg.prefix(); {? Qpksg.first() || {! |? Qpksg.del() !} ?};
   Qxksg.prefix(); {? Qxksg.first() || {! |? Qxksg.del()!} ?}
?};
_wyn


\zaliczki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ATA [2009]
:: OPIS: Ksiegowanie zaliczek
::  _a - _rdk
::  _b - system KL
::  OLD: \zaliczki/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh;
exec('dekl_rub','rubobj');
_RUB:=obj_new(@.CLASS.RUB);
_nr_rub:=_RUB.sys_rub(2112,date(O.R,O.M,0)).RN;

POZ.cntx_psh;
POZ.index('DOK');
POZ.prefix(DOK.ref);
_lp:={? POZ.last || POZ.POZ ?};
KOM_SP.cntx_psh;
KOM_SP.index('KOM_LT');
KOM_SP.prefix(O.ref);
_kwota_ma:=0;
{? KOM_SP.first
|| {!
   |? {? KOM_SP.RH=null & KOM_SP.KOM_OS().KOM_RP().R().RN=_nr_rub
         & KOM_SP.KOM_OS().EZAL<>null
      || KOM_SP.KOM_OS().EZAL().ETYPZAL();

         _kon_roz:=ETYPZAL.KON_ROZ;
         {? _kon_roz<>''
         || _kon_roz:=($_kon_roz)()
         ?};
         _kwota:=KOM_SP.KW;
         _kwota_ma+=_kwota;
         _lp+=1;
         exec('add_poz_ksieguj','dok_fks_aut_dok',_kwota,_kon_roz,_lp,'Ma',EZAL.SYM)
      ?};
      KOM_SP.next
   !}
?};
KOM_SP.cntx_pop;

_kwota_wn:=0;
ZALICZ.cntx_psh;
ZALICZ.index('ZALLTPR');
ZALICZ.prefix(O.ref);
{? ZALICZ.first
|| {!
   |? {? ZALICZ.EZAL<>null
      ||
         ZALICZ.EZAL().ETYPZAL();
         _kon_roz:=ETYPZAL.KON_ROZ;
         {? _kon_roz<>''
         || _kon_roz:=($_kon_roz)()
         ?};
         _kwota:=ZALICZ.KW;
         _kwota_wn+=_kwota;
         _lp+=1;
         exec('add_poz_ksieguj','dok_fks_aut_dok',_kwota,_kon_roz,_lp,'Wn',EZAL.SYM)
      ?};
      ZALICZ.next
   !}
?};
ZALICZ.cntx_pop;
{? _kwota_ma
|| _lp+=1;
  exec('add_poz_ksieguj','dok_fks_aut_dok',_kwota_ma,DEKRET.KONTOTXT,_lp,'Wn','')

?};
{? _kwota_wn
|| _lp+=1;
   exec('add_poz_ksieguj','dok_fks_aut_dok',_kwota_ma,DEKRET.KONTOTXT,_lp,'Ma','')
?};
POZ.cntx_pop;

DOK.cntx_pop;
1


\add_poz_ksieguj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ATA [2009]
:: OPIS: Dodaje pozycje do poza
::   WE: _a - kwota
::       _b - konto
::       _c - kolejny numer
::       _d - strona
::       _e - symbol zaliczki
::  OLD: \add_poz/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.blank();
POZ.POZ:=_c;
POZ.KON:=_b;
_i:=exec('koment','konto',POZ.KON);
{? _i>0 || POZ.KOM:=_i ?};
POZ.SUM:=_a$2;
POZ.STR:=_d;
POZ.WAL:=null;
POZ.KURS:=0;
POZ.SUMW:=0;
POZ.OP:='L'+FUNKCJE.ZNLISTY()+' zaliczki pracownicze';
KS.cntx_psh();
KS.index('SYM');
KS.prefix(ROK_F.ref(),ROK_F.SYNT+_b);
_rozrach:=KS.first() & KS.ROZR<>'Z';
KS.cntx_pop();
{? _rozrach
|| POZ.ID:=_e;
   POZ.ODD:=POZ.DOK().ODD;
   POZ.DATA_R:=O.D;
   POZ.DO:=O.D;
   POZ.SYM_ROK:=exec('op_unik_sym','rozrach',POZ.ID,POZ.DO);
   POZ.TP:=O.D;
   POZ.TID:='ZOB'
|| POZ.ODD:=null
?};
POZ.add()


\wyp_zap_ksieguj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS, KGS [2011]
:: OPIS: Formula wypelnia tabelke tymczasowa na podstawie ATRUSE
::   WE: _a - uchwyt naglowka dokumentu
::       _b - rodzaj dekretacji: KL, KU
::       _c - strona
::    WY:
::  OLD: \wyp_zap/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~-_b='KL' | _b='KU'
||
   {? ATRUSE_L.first()
   || {? _c='W'
         || prac_w:=LS.P;
            rub_w:=LS.RB
         || prac_m:=LS.P;
            rub_m:=LS.RB
      ?};
      {? var_pres('optym')=type_of(0) & optym
      || _rubryka:=R.RN;
         _lista:=~(-O.LT)
      || _rubryka:=0;
         _lista:=''
      ?};
      DEK_POZ.cntx_psh();
      DEK_POZ.index('DEK_POZ');
      DEK_POZ.prefix();
      _opt:={? DEK_POZ.find_key(DEK_NAG.ref(),$R.RN) || DEK_POZ.OPT='T' || 0 ?};
      DEK_POZ.cntx_pop();
      {!|? _kon:=ATRUSE_L.KON;
           _sum:=ATRUSE_L.SUM;
           _wwl:=ATRUSE_L.SUMW;
           _wal:=ATRUSE_L.WAL().KOD;
           _krs:=ATRUSE_L.KURS;
           _sym:=ATRUSE_L.ID;
           _opi:=ATRUSE_L.OP;
           _dat:=ATRUSE_L.TP;
           _dat_o:=ATRUSE_L.DO;
           _n_z:=ATRUSE_L.TID;

           _wyr:=exec('add_wyr_ksieguj','dok_fks_aut_dok',DEK_NAG.ROK().SYNT+_kon,_c);

           Qpksg.prefix();
           {?  _opt
             & Qpksg.find_key(_a,_c,'N',_kon,_kon,_sym,_sym,'xxx','xxx','xxx','xxx',EKSG.WYR,EKSG.WYR,_lista,_rubryka)
           ||
              Qpksg.SUM+=_sum;
              Qpksg.WWL+=_wwl;

              Qpksg.WYR+={? EKSG.WYR<>'' || exec('gen_wyr','dok_fks_aut_dok',#Qpksg.ref(),_wyr) || 0 ?};
              _wyn:=Qpksg.put(1)
           ||
              Qpksg.prefix();
              Qpksg.blank();
              Qpksg.RDK:=_a;
              Qpksg.STR:=_c;
              Qpksg.TYP:='N';
              Qpksg.KON:=Qpksg.KO2:=_kon;
              Qpksg.STV:='xxx';
              Qpksg.LST:=_lista;
              Qpksg.RUB:=_rubryka;
              Qpksg.SUM:=_sum;
              Qpksg.WWL:=_wwl;
              Qpksg.KRS:=_krs;
              Qpksg.SYM:=Qpksg.SY2:=_sym;
              Qpksg.OPI:=_opi;
              Qpksg.N_Z:=_n_z;
              Qpksg.WAL:=_wal;
              Qpksg.OPT:=_opt;
              Qpksg.DAT:=_dat;
              Qpksg.DAT_O:=_dat_o;
              Qpksg.RVAT:='xxx';
              Qpksg.GRV:='xxx';
              Qpksg.OKR:='xxx';
              Qpksg.DEK:=0;
              Qpksg.NKR:=0;
              Qpksg.KWY:=Qpksg.KW2:=EKSG.WYR;
              Qpksg.SPW:='N';
              _wyn:=Qpksg.add(1);
              {? _wyn
              || Qpksg.WYR+={? EKSG.WYR<>'' || exec('gen_wyr','dok_fks_aut_dok',#Qpksg.ref(),_wyr) || 0 ?};
                 Qpksg.put(1)
              ?}
           ?};
           &_wyr;
           _wyn & ATRUSE_L.next()
      !}
   ?}
?}


\add_wyr_ksieguj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula sprawdza czy sa wyrozniki i dodaje wyroznik do obiektu
::   WE: _a - Konto syntetyczne dla ktorego sa wprowadzane wyrozniki
::       _b - Strona
:: OLD: \add_wyr/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
EKSG.WYR:='';
{? (_syn:=exec('czy_wyr','dok_fks_aut_dok',_a))<>null
|| {? exec('czy_wyr_ksieguj','dok_fks_aut_dok')
   || _rozm:=ATR_WYRL.size();
      _wyn:=obj_new(_rozm);
      {! _i.._rozm
      |! _wyn[_i]:=obj_new(5);
         _wyn[_i][1]:=0;
         _wyn[_i][2]:=0;
         _wyn[_i][3]:='';
         _wyn[_i][4]:='';
         _wyn[_i][5]:=0
      !};
      _i:=0;
      {!
      |? _i+=1;
         _sld:=exec('FindInSet','#table','KS_W','LP',ATR_WYRL.LP,_syn,"KS_W.SLU",,,null());
         SLUAPPL.cntx_psh();
         SLUAPPL.clear;
         _slu:={? _sld<>null & SLUAPPL.seek(_sld) || SLUAPPL.SLU || null ?};
         SLUAPPL.cntx_pop();
         {? _slu=ATR_WYRL.SLU().SLU
         ||
::          dodajemy wyroznik
            _kod:={? ATR_WYRL.SLO<>null || ATR_WYRL.SLO().KOD || '' ?};
            _war:=ATR_WYRL.KW;

            _wyn[_i][1]:=1;
            _wyn[_i][2]:=ATR_WYRL.LP;
            _wyn[_i][3]:=ATR_WYRL.SLU().SLU().NAZ;
            _wyn[_i][4]:=_kod;
            _wyn[_i][5]:=_war;
            EKSG.WYR+=form(_kod,8)
         ?};
         ATR_WYRL.next()
      !}
   ?}
?};
_wyn


\czy_wyr_ksieguj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS, KGS [2011]
:: OPIS: Czy wyroznik
::  OLD: \czy_wyr/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
ATR_WYRL.index('LP');
ATR_WYRL.prefix(ATRUSE_L.ref());
ATR_WYRL.first()


\czy_zap_ksieguj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS, KGS [2011]
:: OPIS: Formula sprawdza czy sa zapisy w ATRUSE dotyczace dekretu
::   WE:  _a - rodzaj dekretacji: KL, KU
::        _b - strona: W lub M
::       [_c] - system
::  OLD: \czy_zap/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || return(0) ?};
{? _<3 || _c:='PPL' ?};
{? ~-_a='KL' | _a='KU'
|| ATRDEF.index('AKRONIM');
   ATRDEF.prefix(_c,'T','ZAPIS_'+_b);
   {? ATRDEF.first() & {? _b='W' || (prac_w<>LS.P | rub_w<>LS.RB) || (prac_m<>LS.P | rub_m<>LS.RB) ?}
   || ATRUSE_L.index('PRRBLS');
      ATRUSE_L.prefix(LS.P,R.RN,'L'+FUNKCJE.ZNLISTY(),ATRDEF.ref());
      ATRUSE_L.first()
   ?}
?}


\pozycje_ku
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS, KGS [2011]
:: OPIS: Petla po rachunkach z umow
::  OLD: \pozycje_ku/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
_rdk:=#((('0000'+($(OKRO_F.POCZ~1)))+4)+(('00'+($(OKRO_F.POCZ~2)))+2));
_wn:=_ma:=0;
{? RH.find_ge(OKRO_F.POCZ)
|| {? ~_rdk || _rdk:=#((('0000'+($(OKRO_F.POCZ~1)))+4)+(('00'+($(OKRO_F.POCZ~2)))+2)) ?};
::   PROGRESS.set(RH.size,'Trwa księgowanie rachunków z umów za okres '+$(OKRO_F.POCZ~1)+'-'+$(OKRO_F.POCZ~2),FUN.TYT);
   O.cntx_psh();
   LS.cntx_psh();
   {!
   |? {? ($('RH.'+rodz_dat))()<=OKRO_F.KON
      || {? ~+RH.DOK
         || IsDek:=0;
            RH.ZLE(); EKSG.ESYM:=|ZC.NU;
            {? RH.O
            || LS.use(RH.O().LT);
               FUNKCJE.OTWOLTRH();
               ATRUSE_L.use('kak'+'l'+($O.R+2)+form(O.M,-2));
               ATR_WYRL.use('kwk'+'l'+($O.R+2)+form(O.M,-2));
               {? var_pres('ile_list')>0 || ile_list+=1 ?};
               {? var_pres('listy')>0 || listy+=(~(-O.LT)+', ') ?};
               prac_w:=prac_m:=rub_w:=rub_m:=null();
               LS.index('ZLEC');
               LS.prefix(RH.ref());
               {? LS.first
               ||
                  {!
                  |? LS.RB();
                     LS.P();
                     {? prac_w<>LS.P | rub_w<>LS.RB || _wn:=0 ?};
                     {? prac_m<>LS.P | rub_m<>LS.RB || _ma:=0 ?};
                     {? exec('czy_zap_ksieguj','dok_fks_aut_dok','KU','W','PPL')
                     || _wn:=1;
                        exec('wyp_zap_ksieguj','dok_fks_aut_dok',_rdk,'KU','W')
                     ?};
                     {? exec('czy_zap_ksieguj','dok_fks_aut_dok','KU','M','PPL')
                     || _ma:=1;
                        exec('wyp_zap_ksieguj','dok_fks_aut_dok',_rdk,'KU','M')
                     ?};
                     {? _wn=0 & _ma=0
                     || exec('one_poz','dok_fks_aut_dok',_rdk,'KU',$R.RN)
                     |? _wn=0
                     || exec('one_poz','dok_fks_aut_dok',_rdk,'KU',$R.RN,'W')
                     |? _ma=0
                     || exec('one_poz','dok_fks_aut_dok',_rdk,'KU',$R.RN,'M')
                     ?};
                     LS.next()
                  !}
               ?}
            ?};
            {? IsDek
            || TmpRH.add(#RH.ref())
            ?}
         ?};
::         PROGRESS.next();
         RH.next
      || 0
      ?}
   !};
   O.cntx_pop();
   LS.cntx_pop()
::   PROGRESS.close()
?};
_dok:=exec('add_dok','dok_fks_aut_dok',_rdk,'KU');
{? _dok
|| _wn_ma:=exec('spr_dekr','dok_fks_aut_dok',_dok);
   _err:=0;
   {? _wn_ma[1]-_wn_ma[2]<>0
   || _err:=1;_err_txt:='Różnica stron WN-MA: '+form(_wn_ma[1]-_wn_ma[2],,2)
   |? _wn_ma[1]=0 & _wn_ma[2]=0
   || _err:=1;_err_txt:='Brak pozycji'
   ?};
   {? 'TA'*EKSG.ETRB & _err
   || exec('add_err','dok_fks_aut_dok','','Rachunki z umów ('+form(RU.O)+') za okres: '+$(OKRO_F.POCZ~1)+'-'+$(OKRO_F.POCZ~2)+' - '+_err_txt,'KU')
   ?}
?};
Qpksg.prefix(); {? Qpksg.first() || {! |? Qpksg.del() !} ?};
Qxksg.prefix(); {? Qxksg.first() || {! |? Qxksg.del() !} ?};
_dok<>null


\zakres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: definiowanie zakresu przejmowania danych
::   WE: _a - pole TYP tabeli Qzkr moze przyjac wartosci:
::           - F -st.sprzedazy
::           - M -magazyny
::           - Z -st.zakupowe
::           - D -dok.magazynowe
::           - S -dok.sprzedazy
::           - K -dok.zakupowe
::           - R -raporty kasowe z systemu KASA
::       _b - oddzialy w systemie logistyka ODDZ.KOD tabelka oddzialow ktore odpowiadaja jednosce ksiegowej
::            - dla systemu kasa (R) ref(y) jedn. ksiegowych
::       [_c] - rodzaj dekretacji (opcjonalny)
::   WY: czy rozpoczynac ksiegowanie
::  OLD: \zakres/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<3 || _c:='' ?};
_wyn:=1;
exec('qzkr','dok_fks_aut_dok');
EKSG.ODD:=POMOC.OKR().POCZ;
EKSG.DOD:=POMOC.OKR().KON;
EKSG.win_edit('ZAKR'+_a);
{? EKSG.edit("exec('spr_zakr','dok_fks_aut_dok')")
|| exec('pob_dane','dok_fks_aut_dok',_a,_b,_c);
   {? EKSG.WS='T' | EKSG.WS='O'
   ||
::    wybor magazynu/st.sprzedazy
      {? _a='F' & EKSG.WS='T' || _opi:='Stanowiska sprzedaży'
      |? _a='M' & EKSG.WS='T' || _opi:='Magazyny'
      |? _a='Z' & EKSG.WS='T' || _opi:='Stanowiska zakupów'
      |? EKSG.WS='O' || _opi:='Oddziały (logistyka)'
      |? _a='R' || _opi:='Stanowiska kasowe'
      || _opi:=''
      ?};
      {? _opi<>''
      || _acr_sel:=Qzkr.mk_sel(_opi,'P',0,'zakres_acr_sel');
         Qzkr.win_fld(_acr_sel,,'KOD',,,8,,1,'Kod'@);
         Qzkr.win_fld(_acr_sel,,'NAZ',,,40,,1,'Opis'@);
         {? _a='F' & EKSG.WT<>'T' & EKSG.WS='T'
         || Qzkr.win_fld(_acr_sel,,'NOD',,,4,,1,'Od numeru'@);
            Qzkr.win_fld(_acr_sel,,'NDO',,,4,,1,'Do numeru'@);
            Qzkr.win_act(_acr_sel,0,'Formuła','Zak&res numerów'@@,,,"exec('zakr_num','dok_fks_aut_dok');1",,,,,,'R')
         ?};
         Qzkr.win_act(_acr_sel,,'Formuła','Akceptuj'@@,,,"exec('wyb_qzkr','dok_fks_aut_dok')",,1,1,
                      "sel_nchk(); 1","exec('wyb_qzkr_gpo','dok_fks_aut_dok')",'A');
         Qzkr.win_act(_acr_sel,,'Kolejność');
         Qzkr.win_sel(_acr_sel);
         Qzkr.prefix({? EKSG.WS='O' || 'O' || _a?});
         {? Qzkr.select()
         ||
            {? Qzkr.first() || {! |? {? Qzkr.WYB='*' || Qzkr.next() || Qzkr.del() ?} !} ?};


            {? ~Qzkr.first()
            ||  {? _a='F' & EKSG.WS='T' || FUN.info('Nie wybrano stanowiska sprzedaży.'@)
                |? _a='M' & EKSG.WS='T' || FUN.info('Nie wybrano magazynu.'@)
                |? _a='Z' & EKSG.WS='T' || FUN.info('Nie wybrano stanowiska zakupu.'@)
                |? EKSG.WS='O' || FUN.info('Nie wybrano oddziału (logistyka).'@)
                |? _a='R' || FUN.info('Nie wybrano stanowiska kasowego.'@)
                ?}; _wyn:=0
            ?}
         ||
            Qzkr.prefix();
            {? Qzkr.first() || {! |? Qzkr.del() !} ?};
            FUN.info('Zrezygnowano z opcji automatycznej rejestracji.'@); _wyn:=0
         ?}
      ?}
   ?};
   {? _a='R' || exec('pob_dane1','dok_fks_aut_dok',_b) ?};
   {? EKSG.WT='T' & _wyn
   ||
::    wybor typow dokumentow
      {? _a='F' || _opi:='Dokumenty sprzedaży'; _a:='S'
      |? _a='M' || _opi:='Dokumenty magazynowe'; _a:='D'
      |? _a='Z' || _opi:='Dokumenty zakupu'; _a:='K'
      |? _a='R' || _opi:='Raporty kasowe'; _a:='P'
      || _opi:=''
      ?};
      {? _opi<>''
      || _acr_sel:=Qzkr.mk_sel(_opi,'P',0,'zakresacr_sel');
         {? _a='P'
         || Qzkr.win_fld(_acr_sel,,'KOD',,,8,,1,'Numer'@);
            Qzkr.win_fld(_acr_sel,,'DATA_OD',,,10,,1,'Data od'@);
            Qzkr.win_fld(_acr_sel,,'DATA_DO',,,10,,1,'Data do'@);
            Qzkr.win_fld(_acr_sel,,'NAZ',,,40,,1,'Stanowisko kasowe'@)
         || Qzkr.win_fld(_acr_sel,,'KOD',,,8,,1,'Kod'@);
            Qzkr.win_fld(_acr_sel,,'NAZ',,,60,,1,'Opis'@)
         ?};
         Qzkr.win_act(_acr_sel,,'Formuła','Akceptuj'@@,,,"exec('wyb_qzkr','dok_fks_aut_dok')",,1,1,
                      "sel_nchk(); 1","exec('wyb_qzkr_gpo','dok_fks_aut_dok')",'A');
         Qzkr.win_act(_acr_sel,,'Kolejność');
         Qzkr.win_sel(_acr_sel);
         Qzkr.prefix(_a);
         {? Qzkr.select()
         || {? Qzkr.first()
            || {! |?
                  {? Qzkr.WYB='*'
                  || Qzkr.next()
                  || {? _a='P' ||  exec('usu_status','dok_fks_aut_dok') ?}; Qzkr.del()
                  ?}
               !}
            ?}
         || Qzkr.prefix();
            {? Qzkr.first()
            || {! |?
                  {? _a='P' &  Qzkr.TYP='P' || exec('usu_status','dok_fks_aut_dok') ?};
                  Qzkr.del()
               !}
            ?};
            FUN.info('Zrezygnowano z opcji automatycznej rejestracji.'@)
         ?}
      ?}
   ?};
   {? _a='R' | _a='P' || Qzkr.prefix('P') || Qzkr.prefix() ?};
   _wyn:=Qzkr.first()
|| FUN.info('Zrezygnowano z opcji automatycznej rejestracji.'@); _wyn:=0
?};
_wyn


\qzkr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Inicjowanie tabelki Qzkr
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('Qzkr');
Qzkr:=tab_tmp(3,'TYP','STRING[1]' ,''
               ,'KOD','STRING[8]' ,''
               ,'KO2','STRING[8]' ,''
               ,'NAZ','STRING[60]',''
               ,'DATA_OD','DATE' ,''
               ,'DATA_DO','DATE' ,''
               ,'NUM','INTEGER' ,''
               ,'WYB','STRING[1]' ,''
               ,'NOD','INTEGER' ,''
               ,'NDO','INTEGER' ,'')


\wyb_qzkr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wybór rekordów w okienku Qzkr
::----------------------------------------------------------------------------------------------------------------------
{? Qzkr.sel_size()
|| _tab:=Qzkr.sel_aget();
   {? _tab.first()
   || {! |?
         {? Qzkr.WYB='*'
         || 0
         || {? Qzkr.seek(_tab.REF,) || Qzkr.WYB:='*'; Qzkr.put(1) ?};
            _tab.next()
         ?}
      !}
   ?}
|| FUN.info('Nie wybrano żadnej pozycji.'@); 0
?}


\wyb_qzkr_gpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wybór rekordów w okienku Qzkr
::----------------------------------------------------------------------------------------------------------------------
{? Qzkr.first()
|| {! |?
      {? Qzkr.WYB<>'*' || Qzkr.NOD:=Qzkr.NDO:=0; Qzkr.WYB:=''; Qzkr.put() ?};
      Qzkr.next()
   !}
?};
sel_exit()


\spr_zakr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: sprawdza podane parametry zakresu
::   WY: 1 lub akronim pola
::  OLD: \spr_zakr/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_odd:=_dod:=date(0,0,0);
_ar:=POMOC.OKR().POCZ~1;
_am:=POMOC.OKR().POCZ~2;
{? _ar>0 & _am>0
|| _odd:=date(_ar,_am,1);
   _dod:=date(_ar,_am,0)
?};
{? EKSG.ODD=date(0,0,0)
|| FUN.info('Data OD DNIA nie może być zerowa.'@); 'ODD'
|? EKSG.DOD=date(0,0,0)
|| FUN.info('Data DO DNIA nie może być zerowa.'@); 'DOD'
|? EKSG.ODD>EKSG.DOD
|| FUN.info('Data OD DNIA nie może być większa od daty DO DNIA.'@); 'ODD'
|? EKSG.ODD>=_odd & EKSG.DOD<=_dod
|| 1
|| FUN.info('Zakres dat niezgodny z wybranym okresem obrachunkowym.'@); 'ODD'
?}


\pob_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: pobiera dane do zakresow wypelnia tabele Qzkr
::   WE: _a - typ danych
::       _b - oddzialy w systemie logistyka ODDZ.KOD ktore odpowiadaja jedn. ksiegowej
::            (_b dla KASY ksiegowane jednostki ksiegowe)
::       _c - rodzaj dekretacji
::  OLD: \pob_dane/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_size:=obj_len(_b);
{? _a='R' || __odd:=_b[1] || __odd:=_b[1][1] ?};
{! _i:=1.._size
|! {? _a='R' || __odd:=_b[_i] || __odd:=_b[_i][1] ?};
   {? _a='M'
   ||
:: dane stan. magazynow
      MG.cntx_psh();
      MG.for_each("
         {? MG.KSG='T' & MG.ODDZ=__odd
         ||
            Qzkr.TYP:='M';Qzkr.KOD:=Qzkr.KO2:=MG.SYM;Qzkr.NAZ:=MG.NAZ; Qzkr.add(1)
         ?}",0);
      MG.cntx_pop()
   |? _a='F'
   ||
:: dane stan. sprzedazy
      STS.cntx_psh();
      STS.for_each("
         {? STS.KSG='T' & STS.SZ='S' & STS.ODDZ=__odd
         || Qzkr.TYP:='F';Qzkr.KOD:=Qzkr.KO2:=STS.KOD;Qzkr.NAZ:=STS.NAZ; Qzkr.add(1)
         ?}",0);
      STS.cntx_pop()
   |? _a='Z'
   ||
:: dane stan. zakupow
      STS.cntx_psh();
      STS.for_each("
         {? STS.KSG='T' & STS.SZ='Z' & STS.ODDZ=__odd
         || Qzkr.TYP:='Z';Qzkr.KOD:=Qzkr.KO2:=STS.KOD;Qzkr.NAZ:=STS.NAZ;Qzkr.add(1)
         ?}",0);
      STS.cntx_pop()
   ?};
   {? _a='R'
   ||
:: dane stanowisk kasowych
      KUSERUPR.cntx_psh();
      STANKAS.cntx_psh();
      KUSERUPR.index('KU'); KUSERUPR.prefix(OPERATOR.USER);
      {? KUSERUPR.first()
      || {!|?
            {? KUSERUPR.STANKAS().ODD=__odd
            || Qzkr.TYP:='R';Qzkr.KOD:=Qzkr.KO2:=form(STANKAS.KOD,-3);Qzkr.NAZ:=STANKAS.NAZWA;Qzkr.add(1)
            ?};
            KUSERUPR.next()
         !}
      ?};
      STANKAS.cntx_pop();
      KUSERUPR.cntx_pop()
   ?}
!};
{? EKSG.WS='O'
|| {! _i:=1.._size |! Qzkr.TYP:='O';Qzkr.KOD:=Qzkr.KO2:=_b[_i][1];Qzkr.NAZ:=_b[_i][2]; Qzkr.add(1) !}
?};
&__odd;
{? _a='M'
||
:: Typy dok. dla magazynow
   TYPYDOK.cntx_psh();
   TYPYDOK.for_each("Qzkr.TYP:='D';Qzkr.KOD:=Qzkr.KO2:=TYPYDOK.T;Qzkr.NAZ:=TYPYDOK.NAZ; Qzkr.add(1)",0);
   TYPYDOK.cntx_pop()
|? _a='F'
||
:: dane sprzedazy
   TYPYSP.cntx_psh();
   {? _c='LS'
   || TYPYSP.for_each("
         {? TYPYSP.ZAK='N' & TYPYSP.KOR<>'Z'
         || Qzkr.TYP:='S';Qzkr.KOD:=Qzkr.KO2:=TYPYSP.T;Qzkr.NAZ:=TYPYSP.NAZ; Qzkr.add(1)
         ?}",0)
   |? _c='LP'
   || {? PAR_SKID.get(496)='T'
      || TYPYSP.for_each("
         {? TYPYSP.ZAK='N' & (TYPYSP.PAR='T' | TYPYSP.DRPAR='T')
         || Qzkr.TYP:='S';Qzkr.KOD:=Qzkr.KO2:=TYPYSP.T;Qzkr.NAZ:=TYPYSP.NAZ;Qzkr.add(1)
         ?}",0)
      || TYPYSP.for_each("
         {? TYPYSP.ZAK='N' & TYPYSP.PAR='T'
         || Qzkr.TYP:='S';Qzkr.KOD:=Qzkr.KO2:=TYPYSP.T;Qzkr.NAZ:=TYPYSP.NAZ; Qzkr.add(1)
         ?}",0)
      ?}
   |? _c='LK'
   || TYPYSP.for_each("
         {? TYPYSP.ZAK='N' & TYPYSP.KOR='Z'
         || Qzkr.TYP:='S';Qzkr.KOD:=Qzkr.KO2:=TYPYSP.T;Qzkr.NAZ:=TYPYSP.NAZ; Qzkr.add(1)
         ?}",0)
   |? _c='LX'
   || TYPYSP.for_each("
         {? TYPYSP.ZAK='T' & TYPYSP.KOR='Z'
         || Qzkr.TYP:='S';Qzkr.KOD:=Qzkr.KO2:=TYPYSP.T;Qzkr.NAZ:=TYPYSP.NAZ; Qzkr.add(1)
         ?}",0)
   ?};
   TYPYSP.cntx_pop()
|? _a='Z'
||
:: dane zakupow
   TYPYSP.cntx_psh();
   TYPYSP.for_each("
      {? TYPYSP.ZAK='T'
      || Qzkr.TYP:='K';Qzkr.KOD:=Qzkr.KO2:=TYPYSP.T;Qzkr.NAZ:=TYPYSP.NAZ; Qzkr.add(1)
      ?}",0);
   TYPYSP.cntx_pop()
?};
''


\zakr_num
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [12.41]
:: OPIS: Wprowadzenie zakresu dokumentow do dekretacji
::  OLD: \zakr_num/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
FAKS.cntx_psh();
FAKS.use('faktuc'+($(EKSG.ODD~1)+2));
{? Qzkr.WYB='*'
|| Qzkr.cntx_psh;
   undefine;
   _nrtab:=sql('select min(FAKS.NR) as OD, max(FAKS.NR) as DO '+
               'from FAKS '+
               'left join STS using (FAKS.STS,STS.REFERENCE) '+
               'where FAKS.D between to_date(\''+$EKSG.ODD+'\') and to_date(\''+$EKSG.DOD+'\')\n'+
               'and FAKS.ZAK = \'N\' and FAKS.AKC = \'T\' and STS.KOD = \''+Qzkr.KOD+'\'\n'+
               'order by 1 ');
   _nrod:={? Qzkr.NOD & Qzkr.NOD>=_nrtab.OD || Qzkr.NOD || _nrtab.OD ?};
   _nrdo:={? Qzkr.NDO & Qzkr.NDO<=_nrtab.DO || Qzkr.NDO || _nrtab.DO ?};
   define('NOD',_nrod,'Od numeru:'@,,8,8,-1);
   define('NDO',_nrdo,'Do numeru:'@,,8,8,-1);
   {? def_edit("exec('spr_par','dok_fks_aut_dok')",'Zakres numerów:'@)
   || Qzkr.NOD:=DEFINE.NOD;
      Qzkr.NDO:=DEFINE.NDO;
      Qzkr.put
   ?};
   Qzkr.cntx_pop
|| FUN.info('Funkcja dostępna po wyborze stanowiska.'@)
?};
FAKS.cntx_pop()


\spr_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [12.41]
:: OPIS: Weryfikacja poprawnosci danych (zakresu dokumentow do dekretacji)
::  OLD: \spr_par/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEFINE.NOD<0
|| FUN.info('Dolna wartość zakresu nie może być mniejsza od zera.'@); 'NOD'
|? DEFINE.NDO<0
|| FUN.info('Górna wartość zakresu nie może być mniejsza od zera.'@); 'NDO'
|? DEFINE.NOD>DEFINE.NDO & DEFINE.NDO
|| FUN.info('Zakres jest nieprawidłowy'@);0
|| 1
?}


\jaki_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Wyznacza ref okresu zgodny z refem intiger przekazanym przez parametr _a
::   WE: _a - intigerowy ref okresu
::   WY: _ref okresy jezeli zostanie znaleziony, w.p.p. null
::  OLD: \jaki_okr/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
OKRO_F.cntx_psh();
OKRO_F.clear();
_ref:={? OKRO_F.seek(BB.sqlint(_a),) || OKRO_F.ref || null() ?};
OKRO_F.cntx_pop();
_ref


\pob_dane1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: pobiera dane do zakresow wypelnia tabele Qzkr
::  OLD: \pob_dane1/ksg_ks.fml
::----------------------------------------------------------------------------------------------------------------------
Qzkr.prefix('R');
{? Qzkr.first()
|| {!|?
      Qzkr.cntx_psh();
      exec('kas_open','kasa_raport',#Qzkr.KOD,SSTALE.AR().KOD);
      _s_kas:=Qzkr.NAZ;
      _s_num:=#Qzkr.KOD;
      RAPORT.index('NUMER');
      RAPORT.prefix();
      {? RAPORT.first()
      || Qzkr.prefix();
         {!|?
            {? RAPORT.DATA_OD>=EKSG.ODD & RAPORT.DATA_DO<=EKSG.DOD & exec('spr_raport','dok_fks_aut_dok')
            || Qzkr.TYP:='P';
               Qzkr.WYB:='';
               Qzkr.KOD:=Qzkr.KO2:=form(RAPORT.NUM_RAP,-8,0,'9.');
               Qzkr.DATA_OD:=RAPORT.DATA_OD;
               Qzkr.DATA_DO:=RAPORT.DATA_DO;
               Qzkr.NAZ:=_s_kas;
               Qzkr.NUM:=_s_num;
               Qzkr.add(1)
            ?};
            RAPORT.next()
         !}
      ?};
      Qzkr.cntx_pop();
      Qzkr.next()
   !}
?};
Qzkr.prefix()


\spr_raport
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula sprawdza czy mozna dekretowac raport
::  OLD: \spr_raport/ksg_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1; RAPORT.get();
_status:=exec('rap_code','kasa_raport',RAPORT.STATUS);
DOKUMENT.cntx_psh();
DOKUMENT.index('RAPORT'); DOKUMENT.prefix(RAPORT.ref);
{? ~DOKUMENT.first()
|| _zwrot:=0
?};
DOKUMENT.cntx_pop();
{? _zwrot
|| {? _status=2 | _status=5
   || {? ~exec('set_lock','kasa_raport',3)
      || _zwrot:=0
      ?}
   || _zwrot:=0
   ?}
?};
_zwrot


\usu_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula usuwa znacznik dekretowany przywracajac znacznik zamkniety
::  OLD: \usu_status/ksg_ks.fml
::----------------------------------------------------------------------------------------------------------------------
EKSG.STANKAS:=exec('FindInSet','#table','KUSERUPR','KU',Qzkr.NUM,OPERATOR.USER);
{? EKSG.STANKAS<>null
|| USRCONST.STANKAS:=EKSG.STANKAS;
   EKSG.REF_ODD:=USRCONST.STANKAS().STANKAS().ODD;
   exec('kas_open','kasa_raport',EKSG.STANKAS().STANKAS().KOD,SSTALE.AR().KOD);
   RAPORT.index('NUMER'); RAPORT.prefix();
   {? RAPORT.find_key(#Qzkr.KOD) || exec('set_lock','kasa_raport',2) ?}
?}


\zakupy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: ksiegowanie wszelakich dokumentow zakupowych tabela TYPYSP o zancznik ZAK='T'
::   WE: _a - znacznik czy jeden oddzial czy cala firma
::            1 - cala firma, 2 - jeden oddzial (wskazany parm. _b)
::       _b - ref jednostki ksiegowej
::   WY: 1 - wyswietlona lista z brakami (bledami), 0 - w p.p.
::  OLD: \zakupy/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_zakr:=0;
FAKS.cntx_psh();
:: TODO powinno byc pietro jnizej w warunku
exec('jest','#stalesys',INFO);
{? exec('initWARL','dok_fks_aut_dok',SSTALE.AR,'LZK','LZ')
|| exec('czytaj','#stalesys',,INFO);
   exec('init','dok_fks_aut_dok','Informacje o błędach dekretacji dokumentów zakupu');
   POMOC.OKR:=SSTALE.AO;
   _odd:=exec('find_oddz','dok_fks_aut_dok',_a,_b,'LZ');
   {? type_of(_odd)>7
   || {? exec('zakres','dok_fks_aut_dok','Z',_odd)
      || _zakr:=1;
         _rok2:=(form(SSTALE.AO().KON,,4)+2);
         _rok1:=form((#_rok2)-1,-2,0,'99');
         _rok3:=form((#_rok2)+1,-2,0,'99');
         _ile:=obj_len(_odd);
         _msk:=FAKS.names();
         {? _msk.first()
         || {? EKSG.WS='O'
            || Qzkr.prefix('O');
               {? Qzkr.first()
               || {! |?
                     _oddz:=(1+(_msk.NAME+3)); _rok:=_msk.NAME+2;
                     {? Qzkr.find_key(_oddz,_oddz) & (_rok1=_rok | _rok2=_rok | _rok3=_rok)
                     || _msk.next()
                     || _msk.del()
                     ?}
                  !}
               || {! |? _msk.del() !}
               ?}
            || {! |?
                  _name:=_msk.NAME+3;
                  _nxt:=0;
                  {! _i:=1.._ile
                  |! {? ~_nxt & (_name=(_odd[_i][1]+_rok1) | _name=(_odd[_i][1]+_rok2) | _name=(_odd[_i][1]+_rok3))
                     || _nxt:=1
                     ?}
                  !};
                  {? _nxt
                  || _msk.next()
                  || _msk.del()
                  ?}
               !}
            ?}
         ?};
         _st_oddz:=ST.ODDZ; _st_ar:=ST.AR;
         _narod:=FINFO.NAROD;
         _r_dat:=exec('spr_daty','dok_fks_aut_dok',SSTALE.AR,'LZK','LZ');
         {? _msk.first()
         || {! |?
               exec('open','open_tab',1+(_msk.NAME+3),_msk.NAME+2);
               ST.ODDZ:=1+(_msk.NAME+3); ST.AR:=#('20'+(_msk.NAME+2));
               FAKS.clear();
               exec('set_war','dok_fks_aut_dok','Z',_r_dat);
               {? FAKS.f_first()
               || _size:=FAKS.f_size(); _licz:=0;  _time:=time();
                  exec('set_fld','dok_fks_aut_dok','O','LZ');
                  {!
                  |? _licz+=1;
:: TODO
::                     FZL.ECHO(_licz,_size,_time,time(),FAKS.SYM);
                     exec('faks_dekret_all1','dok_fks_aut_dok');
                     FAKS.r_unlock();
                     FAKS.f_next()
                  !}
               ?};
               FAKS.f_clear;
               _msk.next()
            !}
         ?};
         ST.ODDZ:=_st_oddz; ST.AR:=_st_ar;
         obj_del(_msk)
      ?}
   || FUN.emsg('Nie zdefiniowano prawidłowo parametrów oddziałów.'@)
   ?}
:: TODO
|| {? 0 & ~exec('jest','#stalesys',INFO)
   || FUN.emsg('Nie zdefiniowano prawidłowo parametrów programu.'@)
   ?}
?};
_wy:=(var_pres('__kom')>100 & __kom.get_size()>0);
exec('done','dok_fks_aut_dok');
echo();
prgs_clr();
FAKS.cntx_pop();
{? ~_wy & ~_zakr || _wy:=1 ?};
_wy


\faks_dekret_all1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dekretacja dokumentu sprzedaży
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DLZK';
_params.AKCJA:='Dekretuj';
_params.UIDREF:=FAKS.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FAKS',FAKS.ref());
_params.PROC_START:='N';
exec('mp_run','#b__box',_params)


\ksierap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.10]
:: OPIS: Formula ksiegujeca raport kasowy
::   WE: _a - znacznik czy ksiegowanie dla calej firmy (1 - cala firma, 2 - jedna jedn., 3 - dekretacja z kasy)
::       _b - ref jenostki ksiegowej (w przypadku ksiegowania dla jednej jednostki organiz)
::     ks_dial zadeklarowane i rowne 1 - z poziomy wertowania raportow kasowych
::       niezadeklarowane - z menu SKID->DOKUMENTY KSIEGOWE
::    WY: 2 - wyswietlona lista z brakami (bledami), 1- uruchomiony z kasy z poziomu raportow, 0 - w p.p.
::  OLD: \ksierap/ksg_ks.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<1 || _a:=0 ?};
{? _a=3 || _b:=null ?};
{? var_press('ks_dial')<=0 || ks_dial:=0 ?};
_zakr:=0;
_ok:=0; _err:=1;
{? exec('initWARL','dok_fks_aut_dok',SSTALE.AR,'KAS','S')
|| exec('czytaj','#stalesys',,KINFO,KPARAM);
   exec('init','dok_fks_aut_dok','Informacje o błędach dekretacji raportów kasowych');
   POMOC.OKR:=SSTALE.AO;
   {? _a=1
   || OPERATOR.USER();
      exec('get_usersf','users');
      {? Perm.hasFull('FJKS')=0
      || USERSDEP.index('USERSDEP'); USERSDEP.prefix(REF.FIRMA,OPERATOR.USER);
         {? USERSDEP.first()
         || _ile:=USERSDEP.size();
            _odd:=obj_new(_ile);
            _i:=0;
            {!|? _i+=1; _odd[_i]:=USERSDEP.DEPT; USERSDEP.next() !};
            _ok:=exec('zakres','dok_fks_aut_dok','R',_odd,'S');
            _zakr:=_ok
         || FUN.emsg('Brak uprawnień dla jednostek księgowych'@);
            _err:=0
         ?}
      || ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
         {? ODD.first()
         || _ile:=ODD.size();
            _odd:=obj_new(_ile);
            _i:=0;
            {!|? _i+=1; _odd[_i]:=ODD.ref(); ODD.next() !};
            _ok:=exec('zakres','dok_fks_aut_dok','R',_odd);
            _zakr:=_ok
         || FUN.emsg('Brak jednostek księgowych'@);
            _err:=0
         ?}
      ?}
   |? _a=2 & _b<>null()
   || _odd:=obj_new(1);
      _odd[1]:=_b;
      EKSG.REF_ODD:=_b;
      _ok:=exec('zakres','dok_fks_aut_dok','R',_odd);
      _zakr:=_ok
   |? _a=3
   || _ok:=1;
      EKSG.REF_ODD:=USRCONST.STANKAS().STANKAS().ODD;
      EKSG.STANKAS:=USRCONST.STANKAS
   ?};

   {? _a=1 | _a=2 || ks_dial:=1
   |? _a=3 || {? var_pres('ks_dial')<=0 || ks_dial:=0 ?}
   ?};

   {? _ok & _err
   ||
      {? ~ks_dial || RAPORT.win_sel('RAP_WYB') ?};
      optym:=(PAR_SKID.get(210)='D');

      _petla:={? _a=1 | _a=2 || Qzkr.prefix('P'); Qzkr.first() || 0 ?};
      {? _petla
      || {!
         |? EKSG.STANKAS:=exec('FindInSet','#table','KUSERUPR','KU',Qzkr.NUM,OPERATOR.USER);
            {? EKSG.STANKAS<>null
            || USRCONST.STANKAS:=EKSG.STANKAS;
               EKSG.REF_ODD:=USRCONST.STANKAS().STANKAS().ODD;
               exec('kas_open','kasa_raport',EKSG.STANKAS().STANKAS().KOD,SSTALE.AR().KOD);
               RAPORT.index('NUMER'); RAPORT.prefix();
               {? RAPORT.find_key(#Qzkr.KOD)
               || exec('ksierap2','dok_fks_aut_dok')
               ?}
            ?};
            Qzkr.next()
         !}
      || exec('ksierap2','dok_fks_aut_dok')
      ?};
      &optym
   ?}
|| {? ~exec('jest','#stalesys',KINFO) | ~exec('jest','#stalesys',KPARAM)
   || FUN.emsg('Nie zdefiniowano prawidłowo parametrów programu.'@);
      _err:=0
   ?}
?};
_wy:={? ks_dial || 1
     |? (var_pres('__kom')>100 & __kom.get_size()>0) || 2
     |? _err=0 || 2
     || 0
     ?};
exec('done','dok_fks_aut_dok');
echo;
prgs_clr();
{? ~_wy & ~_zakr || _wy:=1 ?};
VAR_DEL.delete('ks_dial');
_wy


\ksierap1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Czesc glowna ksiegujaca raporty
::  OLD: \ksierap1/ksg_ks.fml
::----------------------------------------------------------------------------------------------------------------------
TMPBRKAS:=tab_tmp(1,
   'TMPPOZ','INTEGER','REF TMPPOZ',
   'POZDOK','STRING[20]','ID POZDOK'
);
:: ksiegowanie operacji VAT
exec('set_fld','dok_fks_aut_dok','O','SV');
DOKUMENT.index('RAPORT'); DOKUMENT.prefix(RAPORT.ref);
{? DOKUMENT.first()
|| {!
   |? POZDOK.index('DOKUMENT'); POZDOK.prefix(DOKUMENT.ref);
      {? POZDOK.first()
      || {!
         |? {? POZDOK.POZOPER().VAT='T' & exec('spr_war','dok_fks_aut_dok',SSTALE.AR,'KAS','SV',$POZDOK.POZOPER)
            || exec('pozycje','dok_fks_aut_dok',SSTALE.AR,'KAS','SV',$POZDOK.POZOPER)
            ?};
            POZDOK.next()
         !}
      ?};
      DOKUMENT.next()
   !}
?};
:: Ksiegowanie operacji bez VAT
{? exec('spr_war','dok_fks_aut_dok',SSTALE.AR,'KAS','SN')
|| exec('set_fld','dok_fks_aut_dok','O','SN');
   _zb:=EKSG.REJ().CZY_DZ='T';
   {? _zb=0
   || DOKUMENT.index('RAPORT'); DOKUMENT.prefix(RAPORT.ref);
      {? DOKUMENT.first()
      ||
::wszystkie dokumenty i ich pozycje TO jeden dok
         exec('pozycje','dok_fks_aut_dok',SSTALE.AR,'KAS','SN')
      ?}
   || DOKUMENT.index('RAPORT'); DOKUMENT.prefix(RAPORT.ref);
      {? DOKUMENT.first()
      || {!
         |?
:: jeden dokument TO dokument w dokumencie zbiorczym
            exec('pozycje','dok_fks_aut_dok',SSTALE.AR,'KAS','SN');
            DOKUMENT.next()
         !}
      ?}
   ?}
?};
exec('ust_stat','dok_fks_aut_dok');
VAR_DEL.delete('TMPBRKAS')


\ust_stat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Ustawianie statusu raportu kasowego
::  OLD: \ust_stat/ksg_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_zad:=-1; _niezad:=-1;
DOKUMENT.cntx_psh(); DOKUMENT.index('RAPORT'); DOKUMENT.prefix(RAPORT.ref());
{? DOKUMENT.first()
|| POZDOK.cntx_psh();
   {! |?
      POZDOK.index('DOKUMENT'); POZDOK.prefix(DOKUMENT.ref());
      {? POZDOK.first()
      || {! |? {? -POZDOK.ZAKS='t' | -POZDOK.ZAKS='a'|| _zad:=1 || _niezad:=1 ?};
               ~(_zad=1 & _niezad=1) & POZDOK.next()
         !}
      ?};
      ~(_zad=1 & _niezad=1) & DOKUMENT.next()
   !};
   POZDOK.cntx_pop()
?};
{? _zad=-1
|| exec('set_lock','kasa_raport',2)
|? _zad=1 & _niezad=-1
|| exec('set_lock','kasa_raport',4)
|| exec('set_lock','kasa_raport',5)
?};
DOKUMENT.cntx_pop()


\dost_rap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formuła sprawdzająca, czy można dekretować raport
::  OLD: \dost_rap/ksg_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
DOKUMENT.cntx_psh();
DOKUMENT.index('RAPORT'); DOKUMENT.prefix(RAPORT.ref);
{? ~DOKUMENT.first()
||  FUN.info('Tego raportu nie można zadekretować.\n' 'Brak dokumentów w raporcie.'@);
     _zwrot:=0
?};
DOKUMENT.cntx_pop();
{? _zwrot
|| {? (RAPORT.DATA_OD<SSTALE.AO().POCZ | RAPORT.DATA_OD>SSTALE.AO().KON)
   || FUN.info('Początkowa data raportu nie mieści się\nw bieżącym okresie obrachunkowym.'@);
       _zwrot:=0
   || _status:=exec('rap_code','kasa_raport',RAPORT.STATUS);
      {? _status=2 | _status=5
      || {? ~exec('set_lock','kasa_raport',3)
         || FUN.info('Tego raportu nie można zadekretować.\n'
                     'Raport jest zablokowany lub\n'
                     'jest zmieniany na innym stanowisku.'@); _zwrot:=0
         ?}
      || FUN.info('Tego raportu nie można zadekretować.\n'
                  'Status raportu musi być: >>%1'
                  '<< lub \n'
                  '>>%2<<'@[exec('rap_stat','kasa_raport',2),exec('rap_stat','kasa_raport',5)]); _zwrot:=0
      ?}
   ?}
?};
_zwrot


\magazyny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: ksiegowanie wszelakich dokumentow magazynowych tabela TYPYDOK
::   WE: _a - znacznik czy jeden oddzial czy cala firma
::            1 - cala firma, 2 - jeden oddzial (wskazany parm. _b)
::       _b - ref jednostki ksiegowej
::   WY: 1 - wyswietlona lista z brakami (bledami), 0 - w p.p.
::  OLD: \magazyny/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_zakr:=0;
ND.cntx_psh();
:: TODO powinno byc pietro jnizej w warunku
exec('jest','#stalesys',INFO);
{? exec('initWARL','dok_fks_aut_dok',SSTALE.AR,'LMG','LM')
||
   exec('czytaj','#stalesys',,INFO);

   exec('init','dok_fks_aut_dok','Informacje o błędach dekretacji dokumentów magazynowych');

   POMOC.OKR:=SSTALE.AO;

   _odd:=exec('find_oddz','dok_fks_aut_dok',_a,_b,'LM');

   {? type_of(_odd)>7
   ||
      {? exec('zakres','dok_fks_aut_dok','M',_odd)
      || _zakr:=1;
         _rok:=(form(SSTALE.AO().KON,,4)+2);
         _ile:=obj_len(_odd);
         _msk:=ND.names();
         {? _msk.first()
         || {? EKSG.WS='O'
            ||
               Qzkr.prefix('O');
               {? Qzkr.first()
               || {!|?
                     _oddz:=(1+(_msk.NAME+3)); _rok_m:=_msk.NAME+2;
                     {? Qzkr.find_key(_oddz,_oddz) & (_rok_m=_rok)
                     || _msk.next()
                     || _msk.del()
                     ?}
                  !}
               || {!|? _msk.del() !}
               ?}
            ||
               {!
               |? _name:=_msk.NAME+3;
                  _nxt:=0;
                  {! _i:=1.._ile
                  |! {? ~_nxt & _name=_odd[_i][1]+_rok
                     || _nxt:=1
                     ?}
                  !};
                  {? _nxt
                  || _msk.next()
                  || _msk.del()
                  ?}
               !}
            ?}
         ?};
         {? _msk.first()
         || {!
            |?
               exec('open','open_tab',1+(_msk.NAME+3),_msk.NAME+2);
               ND.clear();
               exec('set_war','dok_fks_aut_dok','M');
               {? ND.f_first
               || _size:=ND.f_size(); _licz:=0;  _time:=time();
                  exec('set_fld','dok_fks_aut_dok','O','LM');
                  {!
                  |? _licz+=1;
:: TODO
::                     FZL.ECHO(_licz,_size,_time,time(),ND.SYM);
                     exec('nd_dekret_all','dok_fks_aut_dok');
                     ND.r_unlock();
                     ND.f_next
                  !}
               ?};
               ND.f_clear;
               _msk.next()
            !}
         ?};
         obj_del(_msk)
      ?}
   || FUN.emsg('Nie zdefiniowano prawidłowo parametrów oddziałów.'@)
   ?}
?};
_wy:=(var_pres('__kom')>100 & __kom.get_size()>0);
exec('done','dok_fks_aut_dok');
echo;
prgs_clr();
ND.cntx_pop();
{? ~_wy & ~_zakr || _wy:=1 ?};
_wy


\nd_dekret_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dekretacja dokumentu magazynowego
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DLMG';
_params.AKCJA:='Dekretuj';
_params.UIDREF:=ND.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ND',ND.ref());
_params.PROC_START:='N';
exec('mp_run','#b__box',_params)


\sprz_zbiorcz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [BZ] [12.30]
:: OPIS: ksiegowanie zbiorcze paragonow.
::   WE: _a - znacznik czy jeden oddzial czy cala firma
::            1 - cala firma, 2 - jeden oddzial (wskazany parm. _b)
::       _b - ref oddzialu ODD.ref
::       _c - rodzaj dekretacji
::   WY: 1 - wyswietlona lista z brakami (bledami), 0 - w p.p.
::  OLD: \sprz_zbiorcz/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_zakr:=0;
FAKS.cntx_psh();
:: TODO powinno byc pietro nizej w warunku
exec('jest','#stalesys',INFO);
{? exec('initWARL','dok_fks_aut_dok',SSTALE.AR,'LSP',_c)
|| exec('upr_set','ceny');
   exec('czytaj','#stalesys',,INFO);
   exec('init','dok_fks_aut_dok','Informacje o błędach dekretacji dokumentów sprzedaży');
   POMOC.OKR:=SSTALE.AO;
   _odd:=exec('find_oddz','dok_fks_aut_dok',_a,_b,_c);
   {? type_of(_odd)>7
   ||
      {? exec('zakres','dok_fks_aut_dok','F',_odd,_c)
      || _zakr:=1;
         _rok2:=(form(SSTALE.AO().KON,,4)+2);
         _rok1:=form((#_rok2)-1,-2,0,'99');
         _rok3:=form((#_rok2)+1,-2,0,'99');
         _ile:=obj_len(_odd);
         _msk:=FAKS.names();
         {? _msk.first()
         || {? EKSG.WS='O'
            ||
               Qzkr.prefix('O');
               {? Qzkr.first()
               || {!|?
                     _oddz:=(1+(_msk.NAME+3)); _rok:=_msk.NAME+2;
                     {? Qzkr.find_key(_oddz,_oddz) & (_rok1=_rok | _rok2=_rok | _rok3=_rok)
                     || _msk.next()
                     || _msk.del()
                     ?}
                  !}
               || {!|? _msk.del() !}
               ?}
            ||
               {!
               |? _name:=_msk.NAME+3;
                  _nxt:=0;
                  {! _i:=1.._ile
                  |! {? ~_nxt & (_name=(_odd[_i][1]+_rok1) | _name=(_odd[_i][1]+_rok2) | _name=(_odd[_i][1]+_rok3))
                     || _nxt:=1
                     ?}
                  !};
                  {? _nxt
                  || _msk.next()
                  || _msk.del()
                  ?}
               !}
            ?}
         ?};
         _st_oddz:=ST.ODDZ; _st_ar:=ST.AR;
         _narod:=FINFO.NAROD;
         _sd:=exec('spr_war0','dok_fks_aut_dok',SSTALE.AR,'LSP',_c);
         par496:=PAR_SKID.get(496)='T';
         {? _sd & _msk.first()
         || {!
            |?
               exec('open','open_tab',1+(_msk.NAME+3),_msk.NAME+2);
               ST.ODDZ:=1+(_msk.NAME+3); ST.AR:=#('20'+(_msk.NAME+2));
               FAKS.clear();
               {? _c='LP'
               || exec('dekr_pzb','dok_fks_aut_dok')
               || _grp_fak:=sql('select distinct KZ as GRP from FAKS where FAKS.SZ=\'S\'');
                  {? _grp_fak.first()
                  || {! |?
                        {? _grp_fak.GRP<>''
                        || {? _c='LK'
                           || FAKS.cntx_psh();
                              _ref:=BB.sqlint(_grp_fak.GRP); _nam:=form(_grp_fak.GRP-8);
                              {? _ref<>0 & _nam<>''
                              || FAKS.use(_nam); FAKS.prefix();
                                 {? FAKS.seek(_ref,_nam)
                                 || exec('faks_sprz_kor_zb','dok_fks_aut_dok')
                                 ?}
                              ?};
                              FAKS.cntx_pop()
                           ?}
                        ?};
                        _grp_fak.next()
                     !}
                  ?};
                  obj_del(_grp_fak)
               ?};
               _msk.next()
            !}
         |? ~_sd
         || FUN.emsg('Nie zdefiniowano prawidłowo schematów dziedzinowych.'@)
         ?};
         ST.ODDZ:=_st_oddz; ST.AR:=_st_ar;
         obj_del(_msk)
      ?}
   || FUN.emsg('Nie zdefiniowano prawidłowo parametrów oddziałów.'@)
   ?}
?};
_wy:=(var_pres('__kom')>100 & __kom.get_size()>0);
exec('done','dok_fks_aut_dok');
echo;
prgs_clr();
FAKS.cntx_pop();
{? ~_wy & ~_zakr || _wy:=1 ?};
_wy


\zak_zbiorcz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [19.02]
:: OPIS: ksiegowanie zbiorcze dokumentów zakupu
::   WE: _a - znacznik czy jeden oddzial czy cala firma
::            1 - cala firma, 2 - jeden oddzial (wskazany parm. _b)
::       _b - ref oddzialu ODD.ref
::       _c - rodzaj dekretacji
::   WY: 1 - wyswietlona lista z brakami (bledami), 0 - w p.p.
::  OLD: \sprz_zbiorcz/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_zakr:=0;
FAKS.cntx_psh();
:: TODO powinno byc pietro nizej w warunku
exec('jest','#stalesys',INFO);
{? exec('initWARL','dok_fks_aut_dok',SSTALE.AR,'LZK',_c)
|| exec('upr_set','ceny');
   exec('czytaj','#stalesys',,INFO);
   exec('init','dok_fks_aut_dok','Informacje o błędach dekretacji dokumentów zakupu');
   POMOC.OKR:=SSTALE.AO;
   _odd:=exec('find_oddz','dok_fks_aut_dok',_a,_b,_c);
   {? type_of(_odd)>7
   || {? exec('zakres','dok_fks_aut_dok','Z',_odd,_c)
      || _zakr:=1;
         _rok2:=(form(SSTALE.AO().KON,,4)+2);
         _rok1:=form((#_rok2)-1,-2,0,'99');
         _rok3:=form((#_rok2)+1,-2,0,'99');
         _ile:=obj_len(_odd);
         _msk:=FAKS.names();
         {? _msk.first()
         || {? EKSG.WS='O'
            ||
               Qzkr.prefix('O');
               {? Qzkr.first()
               || {!|?
                     _oddz:=(1+(_msk.NAME+3)); _rok:=_msk.NAME+2;
                     {? Qzkr.find_key(_oddz,_oddz) & (_rok1=_rok | _rok2=_rok | _rok3=_rok)
                     || _msk.next()
                     || _msk.del()
                     ?}
                  !}
               || {!|? _msk.del() !}
               ?}
            ||
               {!
               |? _name:=_msk.NAME+3;
                  _nxt:=0;
                  {! _i:=1.._ile
                  |! {? ~_nxt & (_name=(_odd[_i][1]+_rok1) | _name=(_odd[_i][1]+_rok2) | _name=(_odd[_i][1]+_rok3))
                     || _nxt:=1
                     ?}
                  !};
                  {? _nxt
                  || _msk.next()
                  || _msk.del()
                  ?}
               !}
            ?}
         ?};
         _st_oddz:=ST.ODDZ; _st_ar:=ST.AR;
         _narod:=FINFO.NAROD;
         _sd:=exec('spr_war0','dok_fks_aut_dok',SSTALE.AR,'LZK',_c);
         {? _sd & _msk.first()
         || {!
            |?
               exec('open','open_tab',1+(_msk.NAME+3),_msk.NAME+2);
               ST.ODDZ:=1+(_msk.NAME+3); ST.AR:=#('20'+(_msk.NAME+2));
               FAKS.clear();
               _grp_fak:=sql('select distinct KZ as GRP from FAKS where FAKS.SZ=\'Z\'');
               {? _grp_fak.first()
               || {! |?
                     {? _grp_fak.GRP<>''
                     || FAKS.cntx_psh();
                        _ref:=BB.sqlint(_grp_fak.GRP); _nam:=form(_grp_fak.GRP-8);
                        {? _ref<>0 & _nam<>''
                        || FAKS.use(_nam); FAKS.prefix();
                           {? FAKS.seek(_ref,_nam)
                           || exec('faks_zak_kor_zb','dok_fks_aut_dok')
                           ?}
                        ?};
                        FAKS.cntx_pop()
                     ?};
                     _grp_fak.next()
                  !}
               ?};
               obj_del(_grp_fak);
               _msk.next()
            !}
         |? ~_sd
         || FUN.emsg('Nie zdefiniowano prawidłowo schematów dziedzinowych.'@)
         ?};
         ST.ODDZ:=_st_oddz; ST.AR:=_st_ar;
         obj_del(_msk)
      ?}
   || FUN.emsg('Nie zdefiniowano prawidłowo parametrów oddziałów.'@)
   ?}
?};
_wy:=(var_pres('__kom')>100 & __kom.get_size()>0);
exec('done','dok_fks_aut_dok');
echo;
prgs_clr();
FAKS.cntx_pop();
{? ~_wy & ~_zakr || _wy:=1 ?};
_wy


\faks_sprz_kor_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dekretacja dokumentu korekty zbiorczej sprzedaży
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DLTS';
_params.AKCJA:='Dekretuj';
_params.UIDREF:=FAKS.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FAKS',FAKS.ref());
_params.PROC_START:='N';
exec('mp_run','#b__box',_params)


\faks_zak_kor_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [19.02]
:: OPIS: Dekretacja dokumentu korekty zbiorczej zakupów
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DLTZ';
_params.AKCJA:='Dekretuj';
_params.UIDREF:=FAKS.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FAKS',FAKS.ref());
_params.PROC_START:='N';
exec('mp_run','#b__box',_params)


\faks_par_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dekretacja zbiorcza paragonów
::   WE: _a - znacznik czy jeden oddzial czy cala firma
::            1 - cala firma, 2 - jeden oddzial (wskazany parm. _b)
::       _b - ref oddzialu ODD.ref()
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DLRW';
_params.AKCJA:='Dekretuj';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
_params.PROC_START:='T';
ust_fir:=_a;
ust_odd:=_b;
exec('mp_run','#b__box',_params);
VAR_DEL.delete('ust_fir','ust_odd')


\dekr_pzb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zbiorcza dekretacja paragonów - wewnętrzna
::----------------------------------------------------------------------------------------------------------------------
exec('fl_decl','dekret_aut');
exec('dek_decl','dekret_aut');
exec('sd_decl','dekret_aut');
exec('czytaj','#stalesys');
{? PAR_SKID.get(307)='M'
|| _grp_fak:=sql('select distinct FAKS.NRUNIKAT as GRP, substr(to_string(FAKS.D),0,7) as D '+
                 'from FAKS '+
                 'where D between to_date(:_a) and to_date(:_b)',EKSG.ODD,EKSG.DOD)
|| _grp_fak:=sql('select distinct FAKS.NRUNIKAT as GRP, FAKS.D as D '
                 'from FAKS '+
                 'where D between to_date(:_a) and to_date(:_b)',EKSG.ODD,EKSG.DOD)
?};
{? _grp_fak.first()
|| {! |?
      {? _grp_fak.GRP<>''
      || exec('dekr_pzb1','dok_fks_aut_dok',_grp_fak)
      ?};
      _grp_fak.next()
   !}
?};
obj_del(_grp_fak)


\dekr_pzb1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zbiorcza dekretacja paragonów - wewnętrzna
::   WE: _a - tabelka zbiorcza z paragonami
::----------------------------------------------------------------------------------------------------------------------
_r_dat:=exec('spr_daty','dok_fks_aut_dok',SSTALE.AR,'LSP','LP');
_grp_fak:=_a;
exec('set_war','dok_fks_aut_dok','FP',_r_dat,_grp_fak.GRP,_grp_fak.D);
exec('set_fld','dok_fks_aut_dok','O','LP');
_p492:=PAR_SKID.get(492);
par496:=PAR_SKID.get(496)='T';
{? par496
|| FAKS.f_each("{? FAKS.T().DRPAR='T' & TYPYSP.PAR='N' & FAKS.ZAK2='T'
                || 'paragon z faktury fiskalnej zaksięgowany - usuwamy z filtra';
                   FAKS.f_del()
                |? TYPYSP.PAR='T' & FAKS.ZAK='T'
                || 'zwykły paragon zaksięgowany - usuwamy z filtra';
                   FAKS.f_del()
                |? TYPYSP.DRPAR='T' & TYPYSP.PAR='N' & FAKS.NRUNIKAT='' & FAKS.PAR=''
                || 'f.fis. nie poszła na drukarkę - usuwamy z paragonów zbiorczo';
                   'ta faktura zostanie zaksięgowana jako zwykła faktura (nie FP)';
                   FAKS.f_del()
                ?}")
?};
{? FAKS.f_first()
|| _rdk:=#FAKS.ref();
   _size:=FAKS.f_size(); _licz:=0; _time:=time();
   {? exec('spr_war','dok_fks_aut_dok',SSTALE.AR,'LSP','LP',$FAKS.T)
   || exec('set_fld','dok_fks_aut_dok','N','LP');
      {!
      |? _licz+=1;
:: TODO
:: FZL.ECHO(_licz,_size,_time,time(),'Dokumenty w roku 20'+(_msk.NAME+2)+': '+FAKS.SYM);
         exec('pozycje','dok_fks_aut_dok',SSTALE.AR,'LSP','LP',$FAKS.T);
         {? FAKS.SYMF='' | _p492='B' | _p492='F' | (_p492='W' & exec('war1','dok_fks_aut_dok',FAKS.T().PAR))
         || {? FAKS.AKC='T'
            || exec('pozycje_zbio','dok_fks_aut_dok','LP',_rdk)
            || {? 'TD'*EKSG.ETRB || exec('add_err','dok_fks_aut_dok','31','','LP') ?}
            ?}
         ?};
         FAKS.f_next()
      !};
:: stworzenie jednego dokumentu dla pargonu zbiorczego
      _dok:=exec('add_dok','dok_fks_aut_dok',_rdk,'LP');
      {? _dok & var_pres('zap_par')>0 || zap_par:=DOK.DOKZRODL ?};
      _wyn:=0;
      {? _dok & do_state()=1
      || {? par496
         || FAKS.f_each("{? FAKS.T().DRPAR='T' & TYPYSP.PAR='N' & FAKS.NRUNIKAT<>'' & FAKS.PAR<>''
                         || 'oznaczenie na FAKS w drugim polu - ZAK2,że paraagon na podstawie f.fis. został zaksięgowany';
                            FAKS.ZAK2:='T'; FAKS.DOK2:=$DOK.ref(); FAKS.put()
                         ?}")
         || FAKS.f_each("FAKS.DOK:=$DOK.ref(); FAKS.ZAK:='T'; FAKS.put()")
         ?};
         _wyn:=end()
      |? do_state() || end()
      ?};
      {? _wyn
      || _wn_ma:=exec('spr_dekr','dok_fks_aut_dok',_dok);
         _err:=0;
         {? _wn_ma[1]-_wn_ma[2]<>0
         || _err:=1;_err_txt:='Różnica stron WN-MA: '+form(_wn_ma[1]-_wn_ma[2],,2)
         |? _wn_ma[1]=0 & _wn_ma[2]=0
         || _err:=1;_err_txt:='Brak pozycji'
         ?};
         {? 'TA'*EKSG.ETRB & _err
         || exec('add_err','dok_fks_aut_dok','13',_err_txt,'LP')
         ?};
         obj_del(_wn_ma)
      ?};
      Qpksg.prefix(); {? Qpksg.first() || {! |? Qpksg.del() !} ?};
      Qxksg.prefix(); {? Qxksg.first() || {! |? Qxksg.del() !} ?};
      _dok<>null
   ?}
?};
FAKS.f_clear()


\pozycje_zbio
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [BZ] [12.30]
:: OPIS: Formula przygotowuje pozycje dla faktur zbiorczych/paragonow zbiorczych
::   WE:  _a - Rodzaj dekretacji
::        _b - _rdk (zbiorcze)
::  OLD: \pozycje_zbio/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_skid_nag:=DEK_NAG.ref();
_czy_poz:=DEK_NAG.VPOZ_STD='R';
_ref_fak:=FAKS.ref();

_rdk:=_b;
_faks:=$FAKS.ref();
_omsk:=FAKS.name();
_refk:=BB.sqlint(FAKS.LKSQL);
_nmsk:=form(8+FAKS.LKSQL);
_czy_kor:=FAKS.T().KOR='T';
_czywgv:=0;
ROZNE.OKR_OBR:=null();

:: zbieram dane dla danej faktury
EKSG.TSP:={? _czy_kor & _refk || 'A' || 'F' ?};

FAKS.cntx_psh();
{? _a='LK' | _a='LP' | _a<>'LX'
|| FAP.index('FAP');
   FAP.prefix(_ref_fak);
   {? FAP.first()
   || {!
      |? exec('one_poz','dok_fks_aut_dok',_ref_fak,_a,'','',_rdk);
         FAP.next()
      !}
   || 0
   ?}
|| _czywgv:=1;
   FAP.index('FAP');
   FAP.prefix(_ref_fak);
   FAP.first();
   FAKSV.index('FAKS_SV');
   FAKSV.prefix(_faks);
   {? FAKSV.first()
   ||
      {!
      |? {? FAKSV.WN<>0 | FAKSV.WV<>0 | FAKSV.WB<>0
         || exec('one_poz','dok_fks_aut_dok',_ref_fak,_a,'','',_rdk)
         ?};
         FAKSV.next()
      !}
   ?}
?};
FAKS.cntx_pop();

:: zbieram dane dotyczace korekty
{? _czy_kor & _refk & ~_czywgv
|| EKSG.TSP:='B';
   FAKS.cntx_psh();
   FAKSPL.cntx_psh();
   FAP.cntx_psh();
   {? _omsk<>_nmsk || FAKS.use(_nmsk); FAP.use('fakpo'+(_nmsk+3)); FAKSPL.use('fakpl'+(_nmsk+3)) ?};
   FAKS.clear();
   {? FAKS.seek(_refk,_nmsk)
   || _ref_kor:=FAKS.ref();
      FAP.index('FAP');
      FAP.prefix(_ref_kor);
      {? FAP.first()
      || {!
         |? exec('one_poz','dok_fks_aut_dok',_ref_fak,_a,'','',_rdk);
            FAP.next()
         !}
      || 0
      ?}
   ?};
   FAKS.cntx_pop();
   FAKSPL.cntx_pop();
   FAP.cntx_pop()
?}


\wybrana_o_upr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR, KGS [2011]
:: OPIS: akcja formula Ksieguj - tabeli O ksiegowanie wybranej listy plac
::  OLD: \wybrana_o_upr/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
EKSG.ESYM:=EKSG.EMSP:=EKSG.ETYP:='';
{? O.sel_size=0
|| {? +O.DOK
   || FUN.emsg('Wskazana lista została już zaksięgowana.'@);
      return(0)
   ?};
   sel_exit
?};
exec('wybrana','dok_fks_aut_dok')


\wybrana
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.10]
:: OPIS: akcja formula Ksieguj - tabeli O ksiegowanie wybranej listy plac
::  OLD: \wybrana/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
{? +O.DOK
|| exec('add_err','dok_fks_aut_dok','','Lista płac: '+(~-O.LT)+' - Lista zadekretowana wcześniej.','KL');
   return(0)
|? O.T().T='SUM'
|| exec('add_err','dok_fks_aut_dok','','Lista płac: '+(~-O.LT)+' - Lista SUM nie podlega dekretacji.','KL');
   return(0)
?};
FUNKCJE.OTWOLIST();

ATRUSE_L.use('kak'+'l'+($O.R+2)+form(O.M,-2));
ATR_WYRL.use('kwk'+'l'+($O.R+2)+form(O.M,-2));
{? var_pres('ile_list')>0 || ile_list+=1 ?};
{? var_pres('listy')>0 || listy+=(~(-O.LT)+', ') ?};

prac_w:=prac_m:=rub_w:=rub_m:=null;

LS.index('LISTPRAC'); LS.prefix(O.ref());
exec('o_dekret','dok_fks_aut_dok');
1


\ksieguj_zleceni
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS, KGS [2011]
:: OPIS: Formula ksiegujaca rachunki z umow-zlecen
::   WE: _a - znacznik czy ksiegowanie dla calej firmy (1 - cala firma, 2 - jedna jedn., 3 -uruachamiany z kalego)
::       _b - ref jenostki ksiegowej (w przypadku ksiegowania dla jednej jednostki organiz)
::  OLD: \ksieguj_zleceni/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DPZW';
_params.AKCJA:='Dekretuj';
_params.UIDREF:=SSTALE.AO().uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OKRO_F',SSTALE.AO);
{? var_press('_b')>0
|| exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ODD',_b)
?};
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\start_zlecenia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Deklaracje startowe  - Umowy
::  OLD: \start_zlecenia/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
P.use('pracowni');
P.clear();
exec('stop_zlecenia','dok_fks_aut_dok');
exec('end_kom','#message');
exec('ZB_DRUK','object');
exec('dekl_cbuff','lista_plac');
exec('FUNKCJE','object');
__optym:={? PAR_SKID.get(311)='N' || 0 || 1 ?};
EKSG.TSP:=EKSG.ESYM:=EKSG.EMSP:=EKSG.ETYP:='';
EKSG.REF_ODD:=null();
1


\stop_zlecenia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Sprzatanie - Umowy
::  OLD: \stop_zlecenia/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
exec('end_kom','#message');
VAR_DEL.delete('CBUFF','ZB_DRUK','ZB_RUB','LS_DRUK','SARRAY','FUNKCJE');
VAR_DEL.delete('Qoksg','Qwksg','Qpksg','prac_w','prac_m','rub_w','rub_m','ile_list','listy','__optym');
~~


\wybrana_o
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.10]
:: OPIS: akcja formula Ksieguj - tabeli O ksiegowanie wybranej listy plac
::  OLD: \wybrana_o/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
EKSG.ESYM:=EKSG.EMSP:=EKSG.ETYP:='';
{? O.sel_size=0
|| {? +O.DOK
   || FUN.emsg('Wskazana lista została już zaksięgowana.'@);
      return(0)
   ?};
   sel_exit
?};
O.get();
exec('wybrana','dok_fks_aut_dok')


\ksieg_gr_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [2006]
:: OPIS: akcja Ksieguj - formula przed dla grupy rekordow tabeli O
::       ustawia zmienne pomocnicze
::   _a: wskazanie na wertowana tabele
::  OLD: \ksieg_gr_be/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
{? {? _a.sel_size=1
   || FUN.ask('Czy księgować zaznaczoną listę płac?'@)
   || FUN.ask('Czy księgować zaznaczone listy płac?'@)
   ?}
|| ile_list:=0;listy:=''; 1
?}


\ksieg_gr_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [2006]
:: OPIS: akcja Ksieguj - formula po dla grupy rekordow tabeli O
::       usuwa zmienne pomocnicze i wyswietla informacje
::  OLD: \ksieg_gr_po/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ile_list')>0
|| sel_exit;
   ''
?}


\ksieamo1_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula ksiegujaca amortyzacje podatkowa dla jednostki księgowej
::   WE: _a - znacznik czy ksiegowanie dla calej firmy (1 - cala firma, 2 - jedna jednostka księgowa)
::       _b - ref jednostki ksiegowej (w przypadku ksiegowania dla jednej jednostki księgowej)
::   WY: 1 - wyswietlona lista z brakami (bledami), 0 - w p.p.
::  OLD: \ksieamo1_new/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1 | _a=3 || _b:=null ?};
{? exec('initWARL','dok_fks_aut_dok',SSTALE.AR,'FST','EP')
|| exec('init','dok_fks_aut_dok','Informacje o błędach dekretacji amortyzacji podatkowej');
   exec('init_amor','dok_fks_aut_dok');
   SSTALE.AO();
   exec('czytaj','#stalesys');
   exec('SRD','object');
   SRD.FST:=exec('szuk_b_dom','parses','FST');
   SRD.maski('r');
   {? exec('is_okro_fst','fst')
   || exec('set_fld','dok_fks_aut_dok','O','EP');
      POMOC.OKR:=SSTALE.AO;
      exec('odd_filtr','fst');
      SRST.cntx_psh();
      SRST.index('ROK');
      SRST.prefix(SSTALE.AR,SSTALE.AO);
      {? SRST.first()
      || {? (_b<>null & ODD.f_seek(_b)) | (_b=null & ODD.f_first())
         || {! |?
               {? exec('usr_fjks','b_perm',ODD.OD)
               || _ref_odd:=ODD.ref();
                  _tabKey:=obj_new(2);
                  _tabKey[1]:=OKRO_F.uidref();
                  _tabKey[2]:=ODD.uidref();
                  exec('amor_dekret_p','dok_fks_aut_dok',SSTALE.AO,_tabKey,ODD.ref());
                  {? ODD.ref()<>_ref_odd || ODD.f_seek(_ref_odd) ?};
                  obj_del(_tabKey)
               ?};
               _b=null & ODD.f_next()
            !}
         ?}
      || FUN.emsg('W bieżącym okresie brak środków do zadekretowania.'@)
      ?};
      SRST.cntx_pop()
   || FUN.emsg('Bieżący okres nie jest okresem aktywnym w dziedzinie Środki trwałe.'@)
   ?};
   VAR_DEL.delete('Qsamor')
?};
_wy:=(var_pres('__kom')>100 & __kom.get_size()>0);
exec('done','dok_fks_aut_dok');
echo;
prgs_clr();
_wy


\ksieamo2_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula ksiegujaca amortyzacje bilansowa
::   WE: _a - znacznik czy ksiegowanie dla calej firmy (1 - cala firma, 2 - jedna jednostka)
::       _b - ref jenostki ksiegowej (w przypadku ksiegowania dla jednej jednostki księgowej)
::   WY: 1 - wyswietlona lista z brakami (bledami), 0 - w p.p.
::  OLD: \ksieamo2_new/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1 | _a=3 || _b:=null ?};
{? exec('initWARL','dok_fks_aut_dok',SSTALE.AR,'FST','EF')
|| exec('init','dok_fks_aut_dok','Informacje o błędach dekretacji amortyzacji bilansowej');
   exec('init_amor','dok_fks_aut_dok');
   SSTALE.AO();
   exec('czytaj','#stalesys');
   exec('SRD','object');
   SRD.FST:=exec('szuk_b_dom','parses','FST');
   SRD.maski('r');
   {? exec('is_okro_fst','fst')
   || exec('set_fld','dok_fks_aut_dok','O','EF');
      POMOC.OKR:=SSTALE.AO;
      exec('odd_filtr','fst');
      SRST.cntx_psh();
      SRST.index('ROK');
      SRST.prefix(SSTALE.AR,SSTALE.AO);
      {? SRST.first()
      || {? (_b<>null & ODD.f_seek(_b)) | (_b=null & ODD.f_first())
         || {! |?
               {? exec('usr_fjks','b_perm',ODD.OD)
               || _ref_odd:=ODD.ref();
                  _tabKey:=obj_new(2);
                  _tabKey[1]:=OKRO_F.uidref();
                  _tabKey[2]:=ODD.uidref();
                  exec('amor_dekret_b','dok_fks_aut_dok',SSTALE.AO,_tabKey,ODD.ref());
                  {? ODD.ref()<>_ref_odd || ODD.f_seek(_ref_odd) ?};
                  obj_del(_tabKey)
               ?};
               _b=null & ODD.f_next()
            !}
         ?}
      || FUN.emsg('W bieżącym okresie brak amortyzacji środków do zadekretowania.'@)
      ?};
      SRST.cntx_pop()
   || FUN.emsg('Bieżący okres nie jest okresem aktywnym w dziedzinie Środki trwałe.'@)
   ?};
   VAR_DEL.delete('Qsamor')
?};
_wy:=(var_pres('__kom')>100 & __kom.get_size()>0);
exec('done','dok_fks_aut_dok');
echo;
prgs_clr();
_wy


\ksieamo3_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula ksiegujaca amortyzacje dodatkowa dla jednostki księgowej
::   WE: _a - znacznik czy ksiegowanie dla calej firmy (1 - cala firma, 2 - jedna jednostka księgowa)
::       _b - ref jednostki ksiegowej (w przypadku ksiegowania dla jednej jednostki księgowej)
::   WY: 1 - wyswietlona lista z brakami (bledami), 0 - w p.p.
::  OLD: \ksieamo1_new/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1 | _a=3 || _b:=null ?};
{? exec('initWARL','dok_fks_aut_dok',SSTALE.AR,'FST','ED')
|| exec('init','dok_fks_aut_dok','Informacje o błędach dekretacji amortyzacji dodatkowej');
   exec('init_amor','dok_fks_aut_dok');
   SSTALE.AO();
   exec('czytaj','#stalesys');
   exec('SRD','object');
   SRD.FST:=exec('szuk_b_dom','parses','FST');
   SRD.maski('r');
   {? exec('is_okro_fst','fst')
   || exec('set_fld','dok_fks_aut_dok','O','ED');
      POMOC.OKR:=SSTALE.AO;
      exec('odd_filtr','fst');
      SRST.cntx_psh();
      SRST.index('ROK');
      SRST.prefix(SSTALE.AR,SSTALE.AO);
      {? SRST.first()
      || {? (_b<>null & ODD.f_seek(_b)) | (_b=null & ODD.f_first())
         || {! |?
               {? exec('usr_fjks','b_perm',ODD.OD)
               || _ref_odd:=ODD.ref();
                  _tabKey:=obj_new(2);
                  _tabKey[1]:=OKRO_F.uidref();
                  _tabKey[2]:=ODD.uidref();
                  exec('amor_dekret_d','dok_fks_aut_dok',SSTALE.AO,_tabKey,ODD.ref());
                  {? ODD.ref()<>_ref_odd || ODD.f_seek(_ref_odd) ?};
                  obj_del(_tabKey)
               ?};
               _b=null & ODD.f_next()
            !}
         ?}
      || FUN.emsg('W bieżącym okresie brak amortyzacji środków do zadekretowania.'@)
      ?};
      SRST.cntx_pop()
   || FUN.emsg('Bieżący okres nie jest okresem aktywnym w dziedzinie Środki trwałe.'@)
   ?};
   VAR_DEL.delete('Qsamor')
?};
_wy:=(var_pres('__kom')>100 & __kom.get_size()>0);
exec('done','dok_fks_aut_dok');
echo;
prgs_clr();
_wy


\oddatyks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: poczatek okresu
::  OLD: \oddatyks/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
OKRO_F.POCZ


\dodatyks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: koniec okresu
::  OLD: \dodatyks/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
OKRO_F.KON


\pr_grd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcja DISP.GRD
::  OLD: \pr_grd/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
DEK_NAG.VPOZ_STD='R' &
DEK_NAG.RVAT<>null | DEK_NAG.F_RVAT<>null |
DEK_POZ.RVAT<>null | DEK_POZ.F_RVAT<>null


\po_grd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji DISP.GRD
::  OLD: \po_grd/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? DISP.GRD='B' || DEK_POZ.GR:=null; DEK_POZ.F_GR:=null
|? DISP.GRD='N' || DEK_POZ.F_GR:=null
|? DISP.GRD='T' || DEK_POZ.GR:=null
?};
win_disp();
1


\pr_rvatd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [BZ] [12.30]
:: OPIS: przed redakcja DISP.RVATD
::  OLD: \pr_rvatd/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
DEK_NAG.VPOZ_STD='R'


\po_rvatd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [BZ] [12.30]
:: OPIS: Po redakcji DISP.RVATD
::  OLD: \po_rvatd/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? DISP.RVATD='B' || DEK_POZ.RVAT:=null; DEK_POZ.F_RVAT:=null
|? DISP.RVATD='N' || DEK_POZ.F_RVAT:=null
|? DISP.RVATD='T' || DEK_POZ.RVAT:=null
?};
win_disp();
1


\pw_seksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: przed wyswietleniem pola EKSG.S
::  OLD: \pw_seksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
EKSG.S:=DEKRET.KW_PLN().SKROT


\pr_seksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: przed redakcja pola EKSG.S
::  OLD: \pr_seksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
1


\f3_seksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: f3 dla kwoty PLN
::  OLD: \f3_seksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
WARLOG.win_sel('SLO');
WARLOG.index('TD'); WARLOG.prefix(1+EKSG.RODZ,'R');
{? WARLOG.find_key(EKSG.S) | WARLOG.first()
|| {? WARLOG.select(,1)
   || DEKRET.KW_PLN:=exec('przeform','dok_fks_aut_dok',WARLOG.KOD,'R',WARLOG.OPIS,WARLOG.FO);
      EKSG.S:=DEKRET.KW_PLN().SKROT
   ?};
   1
|| FUN.info('Brak definicji zmiennych dla formuł typu liczbowego.'@); 0
?}


\po_seksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: po f3 dla kwoty PLN
::  OLD: \po_seksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
WARLOG.index('TD'); WARLOG.prefix(1+EKSG.RODZ,'R',EKSG.S);
{? EKSG.S<>'' & WARLOG.find_key(EKSG.S)
|| DEKRET.KW_PLN:=exec('przeform','dok_fks_aut_dok',WARLOG.KOD,'R',WARLOG.OPIS,WARLOG.FO); 1
|| exec('f3_seksg','dok_fks_aut_dok')
?};
1


\przeform
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: zwraca FORMULA.ref odpowiadajace WARLOG
::   WE: _a - skrot formuly
::       _b - rodzaj
::       _c - nazwa
::       _d - formula
::   WY: _wyn - FORMULA.ref
::  OLD: \przeform/ksg.fml

::----------------------------------------------------------------------------------------------------------------------
FORMULA.index('FORMULA4'); FORMULA.prefix(_b);
{? FORMULA.find_key(_a)
|| {? FORMULA.FORMULA=_a
   || _wyn:=FORMULA.ref()
   || {? FUN.ask('Błędna treść odpowiednika w formułach.\n Poprawić treść formuły?'@)
      || FORMULA.FORMULA:=_a;
         _wyn:={? FORMULA.put() || FORMULA.ref() || null ?}
      || _wyn:=null
      ?}
   ?}
|| FORMULA.blank();
   FORMULA.RODZAJ:=_b;
   FORMULA.SKROT:=_a;
   FORMULA.NAZWA:=_c;
   FORMULA.FORMULA:=_a;
   _wyn:={? FORMULA.add(1) || FORMULA.ref() || null ?}
?};
_wyn


\pwsweksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed wyswietleniem pola EKSG.SW
::  OLD: \pwsweksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
EKSG.SW:=DEKRET.KW_WAL().SKROT


\prsweksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed redakcja pola EKSG.SW
::   WY: 1
::  OLD: \prsweksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
1


\f3sweksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: klawisz F3 dla pola EKSG.SW
::   WY: 1/0
::  OLD: \f3sweksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
WARLOG.win_sel('SLO');
WARLOG.index('TD'); WARLOG.prefix(1+EKSG.RODZ,'R');
{? WARLOG.find_key(EKSG.SW)
|| {? WARLOG.select(,1)
   || DEKRET.KW_WAL:=exec('przeform','dok_fks_aut_dok',WARLOG.KOD,'R',WARLOG.OPIS,WARLOG.FO);
      EKSG.SW:=DEKRET.KW_WAL().SKROT
   ?};
   1
|| FUN.info('Brak definicji zmiennych do dekretacji typu liczbowego.'@); 0
?}


\posweksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: formula po edycji pola kwota w walucie EKSG.SW
::   WY: 1/0
::  OLD: \posweksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()<>''
|| _wyn:=0;
   WARLOG.index('TD');
   WARLOG.prefix(1+EKSG.RODZ,'R',EKSG.SW);
   {? EKSG.SW<>'' & WARLOG.find_key(EKSG.SW)
   || DEKRET.KW_WAL:=exec('przeform','dok_fks_aut_dok',WARLOG.KOD,'R',WARLOG.OPIS,WARLOG.FO);
      _wyn:=1
   || exec('f3_seksg','dok_fks_aut_dok')
   ?}
|| DEKRET.KW_WAL:=null;
   _wyn:=1
?};
_wyn


\pw_keksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: przed wyswietleniem pola EKSG.K
::  OLD: \pw_keksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
EKSG.K:=DEKRET.PROLOG().SKROT


\pr_keksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: przed redakcja pola EKSG.K
::  OLD: \pr_keksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
1


\f3_keksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: f3 dla kwoty PLN - EKSG.K
::  OLD: \f3_keksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
WARLOG.win_sel('SLO');
WARLOG.index('TD');
WARLOG.prefix(1+EKSG.RODZ,'R');
{? WARLOG.find_key(EKSG.K)
|| {? WARLOG.select(,1)
   || DEKRET.PROLOG:=exec('przeform','dok_fks_aut_dok',WARLOG.KOD,'R',WARLOG.OPIS,WARLOG.FO);
      EKSG.K:=DEKRET.PROLOG().SKROT
   ?};
   1
|| FUN.info('Brak definicji zmiennych dla formuł typu liczbowego.'@);
   0
?}


\po_keksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: po f3 dla kwoty PLN - EKSG.K
::  OLD: \po_keksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
WARLOG.index('TD');
WARLOG.prefix(1+EKSG.RODZ,'R',EKSG.K);
{? EKSG.K<>''
|| {? WARLOG.find_key(EKSG.K)
   || DEKRET.PROLOG:=exec('przeform','dok_fks_aut_dok',WARLOG.KOD,'R',WARLOG.OPIS,WARLOG.FO)
   || _wyn:=0
   ?}
|| DEKRET.PROLOG:=null
?};
_wyn


\pwkreksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: przed wyswietleniem pola EKSG.KR
::  OLD: \pwkreksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
EKSG.KR:=DEKRET.EPILOG().SKROT


\prkreksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: przed redakcja pola EKSG.KR
::  OLD: \prkreksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
1


\f3kreksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: f3 dla kwoty PLN - EKSG.KR
::  OLD: \f3kreksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
WARLOG.win_sel('SLO');
WARLOG.index('TD');
WARLOG.prefix(1+EKSG.RODZ,'R');
{? WARLOG.find_key(EKSG.KR)
|| {? WARLOG.select(,1)
   || DEKRET.EPILOG:=exec('przeform','dok_fks_aut_dok',WARLOG.KOD,'R',WARLOG.OPIS,WARLOG.FO);
      EKSG.KR:=DEKRET.EPILOG().SKROT
   ?};
   1
|| FUN.info('Brak definicji zmiennych dla formuł typu liczbowego.'@);
   0
?}


\pokreksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: po f3 dla kwoty PLN - EKSG.KR
::  OLD: \pokreksg/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
WARLOG.index('TD');
WARLOG.prefix(1+EKSG.RODZ,'R',EKSG.KR);
{? EKSG.KR<>''
|| {? WARLOG.find_key(EKSG.KR)
   || DEKRET.EPILOG:=exec('przeform','dok_fks_aut_dok',WARLOG.KOD,'R',WARLOG.OPIS,WARLOG.FO)
   || _wyn:=0
   ?}
|| DEKRET.EPILOG:=null
?};
_wyn


\f3_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: F3 na polu z trescia dla formuly
::  OLD: \f3_form/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? (';v'*FORMULA.RODZAJ)>1
|| FUN.info('Ten rodzaj formuły nie obsługuję zmiennych.\nWybór niemożliwy.'@)
|| FORMULA.FORMULA:=exec('warlog','dok_fks_aut_dok')
?};
1


\warlog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: obsluga tabeli z warunkami logicznymi
::  OLD: \warlog/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
WARLOG.win_sel('SLO'); WARLOG.prefix(1+EKSG.RODZ);
WARLOG.index('KKOD');
{? WARLOG.select()
|| _pos:=get_cpos()-1;
   _przed:=_pos + fld();
   {? _pos>+fld() || _przed+=' ' ?};
   _po:=fld()+{? (+fld())-_pos>0 || (+fld()) - _pos || 0?} ;
   _string:=_przed;
   _string+=WARLOG.KOD;
   _string+=_po;
   set_cpos(_pos + (+WARLOG.KOD) + 1);
   _string
|| fld()
?}


\spr_czy_ksie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula sprawdza czy byla ksiegowana amortyzacja typu _a (Podatkowa/Bilansowa/Dodatkowa) z biezacego
::       okresu i z biezacego oddzialu
::   WE: _a - rodzaj amortyzacji EP - podatkowa, EF - Bilansowa, ED - Dodatkowa
::       [_b] - jeżeli podano _b to sprawdzanie we wskazanym okresie a nie w masce bieżącej
::   WY: 1- nie byla ksiegowana amortyzacja, 0 - w p.p.
::  OLD: \spr_czy_ksie/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
_jest:=0;
DOK.cntx_psh();
{? _>1 & _b<>'' || DOK.use('doku'+_b) ?};
DOK.index('ODDZRODL');
DOK.prefix(ODD.ref(),_a,_a);
{? DOK.first() || _jest:=1 ?};
DOK.cntx_pop();
~_jest


\ksie_dok_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula ksiegowania dokumentow wartosciowych
::   WE: _a - znacznik czy ksiegowanie dla calej firmy (1 - cala firma, 2 - jedna jedn., 3 -uruachamiany z estry)
::       _b - ref jenostki ksiegowej (w przypadku ksiegowania dla jednej jednostki organiz)
::   WY: 1 - wyswietlona lista z brakami (bledami), 0 - w p.p.
::  OLD: \ksie_dok_new/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('initWARL','dok_fks_aut_dok',SSTALE.AR,'FST','EW')
|| exec('init','dok_fks_aut_dok','Informacje o błędach dekretacji dokumentów wartościowych');
   SSTALE.AO();
   exec('SRD','object');
   SRD.FST:=exec('szuk_b_dom','parses','FST');
   {? exec('is_okro_fst','fst')
   ||
      SRD.maski('r');
      POMOC.OKR:=SSTALE.AO;
      SRDT.index('SRDT');
      SRDT.prefix('W');
      SRDO.index('RODZAJ');
      SRDO.prefix('W');
      _srdo_de:=0;
      {? SRDO.first()
      || exec('set_fld','dok_fks_aut_dok','O','EW');
         {! |?
::          dekretowanie dokumentów wartościowych wg daty obowiązywania
            {? SRDO.K='N' & SRDO.DO>=SSTALE.AO().POCZ & SRDO.DO<=SSTALE.AO().KON
            || {? ({? _a=2 || _b=exec('get_odd_from_srdo','fst') || 1  ?})
               || _srdo_de:=1;
                  exec('srdo_dekret','dok_fks_aut_dok')
               ?}
            ?};
            SRDO.next()
         !}
      ?};
      {? ~_srdo_de
      || {? _a=1 & _b<>null
         || ODD.cntx_psh();
            ODD.prefix();
            {? ODD.seek(_b) || _cur_odd:=ODD.OD || _cur_odd:='' ?};
            ODD.cntx_pop();
            FUN.emsg('W bieżącym okresie brak dokumentów wartościowych do zadekretowania w jednostce %1.'@[_cur_odd])
         || FUN.emsg('W bieżącym okresie brak dokumentów wartościowych do zadekretowania.'@)
         ?}
      ?}
   || FUN.emsg('Bieżący okres nie jest okresem aktywnym w dziedzinie Środki trwałe.'@)
   ?}
?};
_wy:=(var_pres('__kom')>100 & __kom.get_size()>0);
exec('done','dok_fks_aut_dok');
echo;
prgs_clr();
_wy


\ksie_ot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula ksiegowania dokumentow OT
::   WE: _a - znacznik czy ksiegowanie dla calej firmy (1 - cala firma, 2 - jedna jedn., 3 -uruchamiany z estry)
::       _b - ref jednostki ksiegowej (w przypadku ksiegowania dla jednej jednostki księgowej)
::   WY: 1 - wyswietlona lista z brakami (bledami), 0 - w p.p.
::  OLD: \ksie_ot/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('initWARL','dok_fks_aut_dok',SSTALE.AR,'FST','ET')
|| exec('init','dok_fks_aut_dok','Informacje o błędach dekretacji dokumentów OT');
   SSTALE.AO();
   exec('SRD','object');
   SRD.FST:=exec('szuk_b_dom','parses','FST');

   {? exec('is_okro_fst','fst')
   ||
      SRD.maski('r');
      POMOC.OKR:=SSTALE.AO;
      SRDT.index('SRDT');
      SRDT.prefix('W');
      SRDO.index('OKRRODZ');
      SRDO.prefix(SSTALE.AO,'P');
      POMOC.OKR:=SSTALE.AO;

      {? SRDO.first()
      || exec('set_fld','dok_fks_aut_dok','O','ET');
         {! |?
            {? SRDO.K='N'
            || {? ({? _a=2 || _b=exec('get_odd_from_srdo','fst') || 1  ?})
               || exec('srdo_dekret_ot','dok_fks_aut_dok')
               ?}
            ?};
            SRDO.next()
         !}
      || FUN.emsg('W bieżącym okresie brak dokumentów OT do zadekretowania.'@)
      ?}
   || FUN.emsg('Bieżący okres nie jest okresem aktywnym w dziedzinie Środki trwałe.'@)
   ?}
?};
_wy:=(var_pres('__kom')>100 & __kom.get_size()>0);
exec('done','dok_fks_aut_dok');
echo;
prgs_clr();
_wy


\find_for
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Szukanie formul
::   WE: _a - Rodzaj formuly
::       _b - Skrot
::   WY:  0 - nie ma rekordu
::       <>0 - ref tabeli
::  OLD: \find_for/skid_ims.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=0;
FORMULA.cntx_psh();
FORMULA.index('FORMULA4'); FORMULA.prefix();
{? FORMULA.find_key(_a,_b) || _r:=FORMULA.ref() ?};
FORMULA.cntx_pop();
_r


\adel_dek_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula po akcji usun na naglowku schematu dekretacji. Formula usuwa naglowek wraz z powiazaniami
::   WE: _a - opcjonalny parametr czy nie wyswietlac komunikaty
::   WY: 1 - usunieto schemat dekretacji, 0 - nie usunieto schematu dekretacji
::  OLD: \adel_dek_nag/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<1 || _a:=0 ?};
do();
DEK_POZ.index('DEK_POZ');
DEK_POZ.prefix(DEK_NAG.ref);
{? DEK_POZ.first()
|| {! |?
      exec('kas_wyr','dok_fks_aut_dok','DEK_POZ',#DEK_POZ.ref(),'W');
      exec('kas_wyr','dok_fks_aut_dok','DEK_POZ',#DEK_POZ.ref(),'M');
      DEK_POZ.del()
   !}
?};
DEK_STAL.index('DEK_STAL');
DEK_STAL.prefix(DEK_NAG.ref());
{? DEK_STAL.first() || {! |? DEK_STAL.del()!} ?};
DEK_NAG.del();
{? ~end()
|| {? _a=0 || FUN.info('Nie udało sie usunąć rekordu wraz z powiązaniami.'@) ?};
   0
|| 1
?}


\kas_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Formula kasuje liste uzupelnien wyroznikow dla danej strony dekretu schematu
::   WE: _a - akronim tabeli                                             ";
::       _b - nr rekordu w SKID_WYR.TAB                                  ";
::       _c - strona dekretu (W/M)
::  OLD: \kas_wyr/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_WYR.cntx_psh();
SKID_WYR.index('SKID_WYR');
SKID_WYR.prefix(REF.FIRMA,_a,($(_a+'.name()'))(),_b,_c);
{? SKID_WYR.first() || {!|? SKID_WYR.del() !} ?};
SKID_WYR.cntx_pop()


\find_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA  [8.70]
:: OPIS: Formula szuka istnienia rekordu w tabeli SLO
::   WE: _a - Wartosc pola SLUAPPL.NAZ
::       _b - Wartosc pola KOD
::   WY: 0 - nie ma rekordu
::       <>0 - ref tabeli
::  OLD: \find_slo/skid_ims.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=0;
SLU.cntx_psh(); SLU.index('NAZ'); SLU.prefix(_a); _slu:=null;
SLO.cntx_psh(); SLO.index('SL'); SLO.prefix();
{? SLU.first()
|| {? & SLU.NAZ=_a
   || _slu:=SLU.ref()
   || {! |? {? SLU.NAZ=_a || _slu:=SLU.ref(); 0 || SLU.next() ?} !}
   ?}
?};
{? _slu<>null & SLO.find_key(_slu,_b) || _r:=SLO.ref() ?};
SLO.cntx_pop();
SLU.cntx_pop();
_r


\find_dokrej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA  [8.70]
:: OPIS: Formula szuka istnienia rekordu w tabeli DOK_REJ
::   WE: _a - REJ.ref
::       _b - Wartosc pola NAZ
::   WY: 0 - nie ma rekordu
::       <>0 - ref tabeli
::  OLD: \find_dokrej/skid_ims.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=0;
DOK_REJ.cntx_psh(); DOK_REJ.index('NAZ'); DOK_REJ.prefix();
{? DOK_REJ.find_key(_a,_b) || _r:=DOK_REJ.ref() ?};
DOK_REJ.cntx_pop();
_r


\find_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA  [8.70]
:: OPIS: Formula szuka istnienia rekordu w tabeli REJ dla ostatniego okresu obrachunkowego i aktualnej jednostki ksiegowej
::   WE: _a - ROK_F.ref
::       _b - ODD.ref
::       _c - Wartosc pola KOD - symbol rejestru
::   WY: 0 - nie ma rekordu
::       <>0 - ref tabeli
::  OLD: \find_rej/skid_ims.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=0;
REJ.cntx_psh(); REJ.index('KOD'); REJ.prefix();
{? REJ.find_key(_a,_b,_c) || _r:=REJ.ref() ?};
REJ.cntx_pop();
_r


\find_dekret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA  [8.70]
:: OPIS: Formula szuka istnienia rekordu w tabeli DEKRET
::   WE: _a - Wartosc pola RODZAJ
::       _b - Wartosc pola KONTOTXT
::       _c - Wartosc pola ID (unikalnego pola od wersji [2011])
::   WY: 0 - nie ma rekordu
::       <>0 - ref tabeli
::  OLD: \find_dekret/skid_ims.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=0;
DEKRET.cntx_psh();
{? _c<>''
|| DEKRET.index('RODZ_ID');
   DEKRET.prefix(REF.FIRMA);
   {? DEKRET.find_key(_a,_c,_c) || _r:=DEKRET.ref() ?}
|| DEKRET.index('RODZ');
   DEKRET.prefix(REF.FIRMA);
   {? DEKRET.find_key(_a,_b) || _r:=DEKRET.ref() ?}
?};
DEKRET.cntx_pop();
_r


\uwaga
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK
:: OPIS: Formula wolana z formul: formks, schemdek, defint, sl_uzyt, def_zam
::  OLD: \uwaga/skid_ims.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Nie wszystkie akcje dla tabeli %1'
         '\nzakończone zgodnie z oczekiwaniem'
         '\nlub nastąpiła próba dołączenia już istniejących rekordów.'
         '\nInformacje o błędach i ostrzeżeniach zostały wpisane do pliku .log.'@[_a])


\leg_zaksiegowan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Legenda zaksięgowań
::  OLD: \leg_zaksiegowan/menu.fml
::----------------------------------------------------------------------------------------------------------------------
{? r_dekr='KL'
|| exec('legenda','color','O#01#01')
|| exec('legenda','color','O#01#')
?}


\faks_win_edit_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawia okno redakcji tabeli FAKS, wymagane pola, okna słowników
::----------------------------------------------------------------------------------------------------------------------
_win_red:=exec('faks_win_edit','faktury_nag');
_ff:="exec('pozycje_fak','faktury_poz',1); ''";
VAR_DEL.delete('TAB2POLA','TAB2FAKSPOLA');
TAB2POLA:=DOKPOLA;
TAB2FAKSPOLA:=FAKS;
FAKS.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['Poz&ycje'@],_ff);
FAKS.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Dekretuj'@],
              "BtnDek:=1; 'key:Esc'"
             );
_an:=FAKS.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Anuluj'@],
              "BtnDek:=0; 'key:Esc'"
             );
FAKS.btn_eopt(_win_red,_an,'tooltip='+exec('help_red_esc','#window','A'));
FAKS.win_edit(_win_red);
exec('set_efld_opt','faktury_nag',_win_red);
exec('set_win_slo','faktury_nag',_win_red)


\nd_win_edit_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawia okno redakcji tabeli ND, wymagane pola, okna słowników
::----------------------------------------------------------------------------------------------------------------------
_win_red:=exec('nd_win_edit','magdok_nag');
_ff:="exec('poz_dok','magdok_poz',1); ''";
ND.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['Poz&ycje'@],_ff);
ND.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Dekretuj'@],
              "BtnDek:=1; 'key:Esc'");
_anuluj:=ND.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Anuluj'@],
              "BtnDek:=0; 'key:Esc'");
ND.btn_eopt(_win_red,_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
ND.win_edit(_win_red);
exec('set_efld_opt','magdok_nag',_win_red);
exec('set_win_slo','magdok_nag',_win_red)


\konto_z_dek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula symuluje dekretacje operacji z pozycji raportu kasowego
::   WY: konto ksiegowe
::  OLD: \konto_z_dek/ogolne.fml
::----------------------------------------------------------------------------------------------------------------------
_konto:='';
POZDOK.cntx_psh();
VPD.cntx_psh();
POZDOK.index('DOKUMENT'); POZDOK.prefix(POZDOK.DOKUMENT,POZDOK.POZOPER().KOD);
_rodz:={? POZDOK.POZOPER().VAT='T' || 'SV' || 'SN' ?};
exec('set_fld','dok_fks_aut_dok','P',_rodz);
_ok:=0;
{? _rodz='SV'
|| DEK_NAG.prefix(USRCONST.ROK,'KAS',_rodz,$POZDOK.POZOPER)
|| DEK_NAG.prefix(USRCONST.ROK,'KAS',_rodz)
?};
{? DEK_NAG.first()
|| {!|?
      {? exec('war_log_nag','dok_fks_aut_dok')
      || _ok:=1
      ?};
     ~_ok & DEK_NAG.next()
   !};
   {? _ok
   || {? _rodz='SV'
      || DEK_POZ.prefix(DEK_NAG.ref())
      || DEK_POZ.prefix(DEK_NAG.ref(),$POZDOK.POZOPER)
      ?};
      _ok:=0;

      {? DEK_POZ.first()
      || _first:=0; _i:=0;
         {? _rodz='SV'
         || VPD.index('VPD');
            VPD.prefix(POZDOK.ref());
            _first:=VPD.first();
            {? _first
            || ile_l_k:=VPD.size()*DEK_POZ.size();
               konto:=obj_new(ile_l_k); kwoty:=obj_new(ile_l_k); kwotyw:=obj_new(ile_l_k);
               {! _i:=1..ile_l_k |! konto[_i]:=''; kwoty[_i]:=0; kwotyw[_i]:=0 !};
               _i:=0
            ?}
         ?};
         {!
         |?
            EKSG.DEK:=null;
            {!
            |?
               {? exec('war_log_poz','dok_fks_aut_dok')
               || {? POZDOK.PLUS_MIN='-'
                  || EKSG.STR:='W'; EKSG.DEK:=DEK_POZ.DEKRET_W
                  || EKSG.STR:='M'; EKSG.DEK:=DEK_POZ.DEKRET_M
                  ?};
                  {? EKSG.DEK<>null
                  || {? _rodz='SV' & _first
                     || WARLOG.cntx_psh();
                        WARLOG.index('KKOD');
                        WARLOG.prefix('SV');
                        {? WARLOG.find_key(EKSG.DEK().KW_PLN().SKROT,EKSG.DEK().KW_PLN().SKROT)
                        || {? WARLOG.RKW='N' || _ok:=1 ?}
                        ?};
                        WARLOG.cntx_pop();
                        {? _ok:=1
                        || _i+=1;
                           exec('set_fld','dok_fks_aut_dok','D',_rodz);
                           konto[_i]:={? EKSG.DEK().KONTO=null
                                      || ''
                                      || _rr:=exec('exec','dok_fks_aut_dok',EKSG.DEK().KONTO().FORMULA);
                                         {? type_of(_rr)=2 || _rr || '' ?}
                                      ?};
                           kwoty[_i]:={? EKSG.DEK().KW_PLN=null
                                      || 0
                                      || _rr:=exec('exec','dok_fks_aut_dok',EKSG.DEK().KW_PLN().FORMULA);
                                         {? type_of(_rr)=1 || _rr || '' ?}
                                      ?};
                           kwotyw[_i]:={? EKSG.DEK().KW_WAL=null
                                       || 0
                                       || _rr:=exec('exec','dok_fks_aut_dok',EKSG.DEK().KW_WAL().FORMULA);
                                          {? type_of(_rr)=2 || _rr || '' ?}
                                       ?}
                        ?}
                     || _ok:=1
                     ?}
                  ?}
               ?};
               {? ~_first || ~_ok || 1 ?} & DEK_POZ.next()
            !};
            {? _first
            || VPD.next()
            || 0
            ?}
         !}
      ?}
   ?};
   {? _ok
   || exec('set_fld','dok_fks_aut_dok','D',_rodz);
      _konto:={? EKSG.DEK().KONTO=null
              || ''
              || _rr:=exec('exec','dok_fks_aut_dok',EKSG.DEK().KONTO().FORMULA);
                 {? type_of(_rr)=2 || _rr || '' ?}
              ?}
   ?}
?};
POZDOK.cntx_pop();
VPD.cntx_pop();
_konto


\srdo_dekret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Dekretacja dokumentu wartościowego środka
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DSDD';
_params.AKCJA:='Dekretuj';
_params.UIDREF:=SRDO.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'SRDO',SRDO.ref());
_params.PROC_START:='N';
exec('mp_run','#b__box',_params)


\amor_dekret_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Dekretacja amortyzacji podatkowej
::   WE: _a - okres (OKRO_F.ref()), _b - OKRO_F.uidref(), _c - jednostka księgowa (ODD.ref()),
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DSAP';
_params.AKCJA:='Dekretuj';
_params.UIDREF:=_b;
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OKRO_F',_a);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ODD',_c);
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\amor_dekret_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Dekretacja amortyzacji bilansowej
::   WE: _a - okres (OKRO_F.ref()), _b - OKRO_F.uidref(), _c - jednostka księgowa (ODD.ref()),
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DSAB';
_params.AKCJA:='Dekretuj';
_params.UIDREF:=_b;
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OKRO_F',_a);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ODD',_c);
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\amor_dekret_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Dekretacja amortyzacji dodatkowej
::   WE: _a - okres (OKRO_F.ref()), _b - OKRO_F.uidref(), _c - jednostka księgowa (ODD.ref()),
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DSAZ';
_params.AKCJA:='Dekretuj';
_params.UIDREF:=_b;
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OKRO_F',_a);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ODD',_c);
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\srdo_dekret_ot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Dekretacja dokumentu OT środka
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DSOT';
_params.AKCJA:='Dekretuj';
_params.UIDREF:=SRDO.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'SRDO',SRDO.ref());
_params.PROC_START:='N';
exec('mp_run','#b__box',_params)


\o_dekret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dekretacja listy płac
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DPLS';
_params.AKCJA:='Dekretuj';
_params.UIDREF:=O.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'O',O.ref());
_params.PROC_START:='N';
exec('mp_run','#b__box',_params)


\rh_dekret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dekretacja umów zleceń
::   WE: [_a] - wskazanie na rodzaj umowy (RU.ref)
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DPZW';
_params.AKCJA:='Dekretuj';
_params.UIDREF:=RH.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'RH',RH.ref());
{? var_press('_a')>0
|| exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'RU',_a)
?};
_params.PROC_START:='N';
exec('mp_run','#b__box',_params)


\ksierap2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dekretacja raportu kasowego
::----------------------------------------------------------------------------------------------------------------------
{? ks_dial | RAPORT.select()
|| exec('ust_stat','dok_fks_aut_dok');
   {? ks_dial | exec('dost_rap','dok_fks_aut_dok')
   || _params:=exec('mp_run_a','#b__box');
      _params.ACT_UID:='FKS_DKS_DRKA';
      _params.AKCJA:='Dekretuj';
      _params.UIDREF:=RAPORT.uidref();
      _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
      exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'RAPORT',RAPORT.ref());
      _params.PROC_START:='N';
      exec('mp_run','#b__box',_params)
   ?}
?}


\ae_rok_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Rekord po ROZNE.ROK_F
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.ROK_F<>ROZNE.OKRO_F().ROK
|| ROZNE.OKRO_F:=null
?};
1


\be_odd_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ODD.prefix();
ODD.f_clear();
ODD.f_set('OD,N',
      'left join USERSDEP using(USERSDEP.DEPT,ODD.REFERENCE)',
      '(:_a=1 or USERSDEP.USERS=:_b) and ODD.FIRMA=:_c',Perm.hasFull('FJKS'),OPERATOR.USER,REF.FIRMA);
1


\konto
::----------------------------------------------------------------------------------------------------------------------
:: Utworzyl: AMK  [8.50]
:: OPIS:     Szuka konta (kont) dla pozycji dokumentu kasowego (POZDOK)
::  OLD: \konto/ogolne.fml
::>---------------------------------------------------------------------------------------------------------------------
_dek_kon:='';
ile_l_k:=0;
{? var_pres('konto')>0 || obj_del(konto) ?};
{? var_pres('kwoty')>0 || obj_del(kwoty) ?};
{? var_pres('kwotyw')>0 || obj_del(kwotyw) ?};
_dek_kon:=exec('konto_z_dek','dok_fks_aut_dok');
{? ile_l_k=0 || ile_l_k:=1 ?};
_dek_kon


\rh_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Pieczątkowanie rachunku umowy dokumentem księgowym
::  OLD: \rh_dok/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('r_dekr')>0 & r_dekr='Kl' & O.F_ZATR().KOD='Z'
|| RH.cntx_psh();
   RH.index('LISTA'); RH.prefix(O.ref());
   {? RH.first()
   || {!
      |? RH.DOK:=$DOK.ref();
         RH.put();
         RH.next()
      !}
   ?};
   RH.cntx_pop()
?}


\one_rh_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Sprawdza, czy rachunki umów nie były już zaksięgowane dla listy
::  OLD: \one_rh_dok/ksieguj.fml
::----------------------------------------------------------------------------------------------------------------------
_jest:=0;
RH.cntx_psh();
RH.index('LISTA'); RH.prefix(O.ref());
{? RH.first()
|| {!
   |? _jest:=RH.DOK<>'';
      _jest=0 & RH.next()
   !}
?};
RH.cntx_pop();
_jest


\dek_nag_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Zwraca lub ustawia wartość pola DEK_NAG.TYP
::   WE: _a - tryb pracy: 0-eksport, 1-import
::       _b - wartość
::----------------------------------------------------------------------------------------------------------------------
{? _b='' || return('') ?};
_ret:='';
{? _a=0
|| {? ~-DEK_NAG.RODZ='KL' & 8+_b='kryteria'
   || _ret:=exec('FindAndGet','#table','KT',_b,,"T")
   |? ~-DEK_NAG.RODZ='KU' & 6+_b='rodzum'
   || _ret:=_ret:=exec('FindAndGet','#table','RU',_b,,"O")
   |? ~-DEK_NAG.RODZ='SV' & 8+_b='koperpoz'
   || _ret:=exec('FindAndGet','#table','POZOPER',_b,,"OPER().KOD+'|'+KOD")
   |? ~-DEK_NAG.RODZ='EW' & 4+_b='srdt'
   || SRDT.cntx_psh();
      SRDT.use(8+_b);
      SRDT.prefix();
      {? SRDT.seek(_b)
      || _ret:=SRDT.TYP
      ?};
      SRDT.cntx_pop()
   |? ~-DEK_NAG.RODZ='LM' & 7+_b='typydok'
   || _ret:=exec('FindAndGet','#table','TYPYDOK',_b,,"T")
   |? 1+(~-DEK_NAG.RODZ)='L' & 7+_b='typydsp'
   || _ret:=exec('FindAndGet','#table','TYPYSP',_b,,"T")
   ?}
|| {? ~-DEK_NAG.RODZ='KL'
   || _ret:=$exec('FindInSet','#table','KT','KRYTERIA',_b,REF.FIRMA,,1)
   |? ~-DEK_NAG.RODZ='KU'
   || _slo_typ:=exec('FindInSet','#table','SLO_TYP','SYMBOL','UMZLEC',,,1);
      {? _slo_typ
      || _ret:=$exec('FindInSet','#table','RU','O',_b,_slo_typ,,1)
      ?}
   |? ~-DEK_NAG.RODZ='SV'
   || _tab:=spli_str(_b,'|');
      {? _tab[1]<>'' & _tab[2]<>''
      || _oper:=exec('FindInSet','#table','OPER','KOD',_tab[1],,,1);
         {? _oper
         || _ret:=$exec('FindInSet','#table','POZOPER','OPER',_tab[2],_oper,,1)
         ?}
      ?}
   |? ~-DEK_NAG.RODZ='EW'
   || SRDT.cntx_psh();
      SRDT.use('srdtr'+REF.FIRMA().SYMBOL);
      _ret:=$exec('FindInSet','#table','SRDT','TYP',_b,,,1);
      SRDT.cntx_pop()
   |? ~-DEK_NAG.RODZ='LM'
   || _ret:=$exec('FindInSet','#table','TYPYDOK','TYP',_b,,,1)
   |? 1+(~-DEK_NAG.RODZ)='L'
   || _ret:=$exec('FindInSet','#table','TYPYSP','TYPYKOD',_b,,,1)
   ?}
?};
{? _ret=~~ || _ret:='Brak typu' ?};
_ret


\dek_nag_naz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Zwraca nową nazwę schematu dziedzinowego
::   WE: [_a] - nazwa gdy podano lub bieżąca nazwa
::       [_b] - nazwa istnieje? [1]-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_nowa:='';
_nazwa:={? var_press('_a')>0 || _a || DEK_NAG.NAZ ?};
_jest:={? var_press('_b')>0 || _b || 1 ?};
{? _nazwa=''
|| {? DEK_NAG.TYP<>''
   || _nazwa:=exec('dek_nag_typ','dok_fks_aut_dok',0,DEK_NAG.TYP)
   ?};
   {? _nazwa=''
   || {? DEK_NAG.RODZ='SV'
      || _nazwa:='Kasowy dokument VAT'
      |? DEK_NAG.RODZ='SN'
      || _nazwa:='Raporty kasowe'
      |? DEK_NAG.RODZ='LM'
      || _nazwa:='Dokumenty magazynowe'
      |? DEK_NAG.RODZ='KL'
      || _nazwa:='Listy płac'
      |? DEK_NAG.RODZ='KU'
      || _nazwa:='Umowy zlecenia'
      |? DEK_NAG.RODZ='Kl'
      || _nazwa:='Umowy zlecenia z listy'
      |? DEK_NAG.RODZ='LS'
      || _nazwa:='Dokumenty sprzedaży'
      |? DEK_NAG.RODZ='LK'
      || _nazwa:='Korekty zbiorcze sprzedaży'
      |? DEK_NAG.RODZ='LP'
      || _nazwa:='Paragony zbiorczo'
      |? DEK_NAG.RODZ='EF'
      || _nazwa:='Amortyzacja bilansowa'
      |? DEK_NAG.RODZ='ED'
      || _nazwa:='Amortyzacja dodatkowa'
      |? DEK_NAG.RODZ='EP'
      || _nazwa:='Amortyzacja podatkowa'
      |? DEK_NAG.RODZ='ET'
      || _nazwa:='Dokumenty OT'
      |? DEK_NAG.RODZ='EW'
      || _nazwa:='Dokumenty wartościowe'
      |? DEK_NAG.RODZ='LZ'
      || _nazwa:='Dokumenty zakupu'
      |? DEK_NAG.RODZ='LX'
      || _nazwa:='Korekty zbiorcze zakupów'
      || _nazwa:='Schemat dziedzinowy'
      ?}
   ?}
?};
_nr:=#(_nazwa+6);
{? _jest || _nr+=1 ?};
_naz:=_nazwa;
{!
|? {? _nr & +_naz>44 || _naz:=_naz-(6-(50-(+_naz))) ?};
   _nowa:=_naz+{? _nr || (('00000'+$_nr)+6) || '' ?};
   DEK_NAG.cntx_psh();
   DEK_NAG.index('UNIK'); DEK_NAG.prefix(DEK_NAG.ROK,DEK_NAG.RODZ,_nowa,);
   _dalej:=DEK_NAG.first();
   DEK_NAG.cntx_pop();
   _nr+=1;
   _dalej
!};
_nowa


\t_dek_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Triger przed add i put dla tabeli DEK_NAG (pseudo unikalność indeksu UNIK)
::   WE: _a - 1-add 2-put
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
_ref:=DEK_NAG.ref();
DEK_NAG.cntx_psh();
DEK_NAG.index('UNIK'); DEK_NAG.prefix(DEK_NAG.ROK,DEK_NAG.RODZ,DEK_NAG.NAZ,);
{? DEK_NAG.first() & (_a=1 | _ref<>DEK_NAG.ref())
|| _ret:=0
?};
DEK_NAG.cntx_pop();
_ret


\chk_dek_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula sprawdza wymagane pola w tabeli DEK_NAG
::   WE: _a - tryb pracy: 1-popraw 0-dołącz
::   WY: akronim pola ktore musi byc wypelnione, '' - w p.p.
::  OLD: \chk_dek_nag/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
_rr:='';
{? (1+DEK_NAG.RODZ)='L' | DEK_NAG.RODZ='EW'
|| {? DEK_NAG.TYP=''
   || FUN.info('Niewypełnione pole typ dokumentu.'@);
       _rr:='DEK_TYP'
   ?}
|? DEK_NAG.RODZ='SV'
|| {? DEK_NAG.TYP=''
   || FUN.info('Niewypełnione pole transakcja kasowa.'@);
       _rr:='DEK_TYP'
   ?}
?};
{? _rr='' & DEK_NAG.NAZ=''
|| FUN.info('Niewypełnione pole nazwa.'@); _rr:='NAZ'
?};
{? _rr=''
|| _ref:=DEK_NAG.ref();
   DEK_NAG.cntx_psh();
   DEK_NAG.index('UNIK'); DEK_NAG.prefix(DEK_NAG.ROK,DEK_NAG.RODZ,DEK_NAG.NAZ,);
   {? DEK_NAG.first() & (_a=0 | _ref<>DEK_NAG.ref())
   || FUN.info('Istnieje schemat dziedzinowy o nazwie: %1.'@[DEK_NAG.NAZ]);
      _rr:='NAZ'
   ?};
   DEK_NAG.cntx_pop()
?};
{? _rr='' & DEK_NAG.RODZ<>'SV' & var_press('WL_exp')<=0
|| {? DEK_NAG.SREJ='S'
   || {? exec('spr_ile_oddz','!zws_par_fast')
      || {? ZMIENNE.DEK_SREJ='' | ZMIENNE.DEK_RREJ=null()
         || FUN.info('Niewypełnione pole stały rejestr księgowy.'@);
            _rr:='DEK_SREJ'
         ?}
      || {? ZMIENNE.DEK_EDIT='P'
         || DEK_STAL.cntx_psh();
            DEK_STAL.index('DEK_STAL');
            DEK_STAL.prefix(DEK_NAG.ref());
            {? ~DEK_STAL.first()
            || FUN.info('Niewypełnione pole stały rejestr księgowy.'@);
               _rr:='DEK_SREJ'
            ?};
            DEK_STAL.cntx_pop()
         |? ZMIENNE.DEK_EDIT='D'
         || {? ~(var_pres('TD_STAL')>100 & TD_STAL.first())
            || FUN.info('Niewypełnione pole stały rejestr księgowy.'@);
               _rr:='DEK_SREJ'
            ?}
         ?}
      ?}
   |? DEK_NAG.SREJ='F'
   || {? DEK_NAG.F_REJ=null
      || FUN.info('Niewypełnione pole formuła na rejestr księgowy.'@);
         _rr:='F_REJ'
      ?}
   ?};
   {? _rr<>''
   || return(_rr)
   |? DEK_NAG.SREJ='F' & DEK_NAG.SDREJ='S'
   || FUN.info('Nie można wprowadzić stałego rodzaju dokumentu dla rejestru wyznaczanego formułą.'@);
      _rr:='SDREJ'
   |? DEK_NAG.SDREJ='S'
   || {? exec('spr_ile_oddz','!zws_par_fast')
      || {? ZMIENNE.DEK_SDOK='' | ZMIENNE.DEK_RDOK=null()
         || FUN.info('Niewypełnione pole stały rodzaj dokumentu.'@);
            _rr:='DEK_SDOK'
         ?}
      || {? ZMIENNE.DEK_EDIT='P'
         || DEK_STAL.cntx_psh();
            DEK_STAL.index('DEK_STAL');
            DEK_STAL.prefix(DEK_NAG.ref());
            {? ~(DEK_STAL.first() & DEK_STAL.DOK_REJ<>null)
            || FUN.info('Niewypełnione pole stały rodzaj dokumentu.'@);
               _rr:='DEK_SDOK'
            ?};
            DEK_STAL.cntx_pop()
         |? ZMIENNE.DEK_EDIT='D'
         || {? ~(var_pres('TD_STAL')>100 & TD_STAL.first() & TD_STAL.DOK_REF<>'')
            || FUN.info('Niewypełnione pole stały rodzaj dokumentu.'@);
               _rr:='DEK_SDOK'
            ?}
         ?}
      ?}
   |? DEK_NAG.SDREJ='F'
   || {? DEK_NAG.F_DOK_RJ=null
      || FUN.info('Niewypełnione pole formuła na rodzaj dokumentu.'@);
         _rr:='F_DOK_RJ'
      ?}
   ?}
?};
_rr


\chk_dek_stal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula spradza poprawnosc wprowadzonych danych do stalych
::  OLD: \chk_dek_stal/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEK_NAG.SDREJ='S'
|| __CHK.record(DEK_STAL,,'ODD','REJ','DOK_REJ')
|| __CHK.record(DEK_STAL,,'ODD','REJ')
?}


\chk_dekret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Rekord po tabeli DEKRET
::   WE: [_a] - typ operacji: 1-popraw 0-dołacz
::  OLD: \po_dekr/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=(1+(-menu_txt()))='p' ?};
_ret:=__CHK.record(DEKRET,,'KONTOTXT','ID','KONTO','KW_PLN');
{? _ret=''
|| {? ~exec('spr_unik_dekret','dok_fks_aut_dok',_a)
   || FUN.info('Wystepuje dekret o podanym identyfikatorze.'
              '\nWprowadź unikalny identyfikator.'@);
      _ret:='ID'
   ?}
?};
_ret


\spr_unik_dekret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula sprawdza czy wprowadzono unikalny identyfikator dla dekretu
::   WE: _a - 1-popraw, 0-dolacz
::   WY: 1 - wprowadzono unikalny identyfikator,  0 - w p.p.
::  OLD: \spr_unik_dekret/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
_rr:=1;
DEKRET.cntx_psh();
DEKRET.index('RODZ_ID');
{? _a
|| _ref:=DEKRET.ref;
   DEKRET.prefix(REF.FIRMA,DEKRET.RODZAJ,DEKRET.ID,DEKRET.ID);
   {? DEKRET.first()
   || {! |?
         {? _rr || _rr:=(DEKRET.ref=_ref) ?};
         _rr=1 & DEKRET.next()
      !}
   ?}
|| DEKRET.prefix(REF.FIRMA,DEKRET.RODZAJ,DEKRET.ID,DEKRET.ID);
   {? DEKRET.first() || _rr:=0 ?}
?};
DEKRET.cntx_pop();
_rr


\bl_dekr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: wartosc na blanku - dekret
::  OLD: \bl_dekr/skid_for.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEK_NAG.RODZ='EP' || 'A'
|? DEK_NAG.RODZ='EF' || 'B'
|? DEK_NAG.RODZ='ED' || 'C'
|? DEK_NAG.RODZ='EW' || 'W'
|? DEK_NAG.RODZ='ET' || 'T'
|? DEK_NAG.RODZ='LM' || 'M'
|? DEK_NAG.RODZ='LS' | DEK_NAG.RODZ='LP' | DEK_NAG.RODZ='LK' || 'D'
|? DEK_NAG.RODZ='LZ' | DEK_NAG.RODZ='LX' || 'Z'
|? ~-DEK_NAG.RODZ='KL' || 'L'
|? DEK_NAG.RODZ='KU' || 'U'
|? DEK_NAG.RODZ='SV' || 'R'
|? DEK_NAG.RODZ='SN' || 'R'
|| 'X'
?}


\chk_dek_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula sprawdza wymagane pola w tabeli DEK_POZ
::   WY: akronim pola ktore musi byc wypelnione, '' - w p.p.
::  OLD: \chk_dek_poz/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
_rr:='';
{? DEK_POZ.DEK_NAG().RODZ='SN'
|| {? DEK_POZ.IDENT=''
   || FUN.info('Niewypełnione pole transakcja kasowa.'@);
       _rr:='DP_IDENT'
   ?}
|? ~-DEK_POZ.DEK_NAG().RODZ='KL' | DEK_NAG.RODZ='KU'
|| {? DEK_POZ.IDENT=''
   || FUN.info('Niewypełnione pole rubryka.'@);
       _rr:='DP_IDENT'
   ?}
?};
_rr


\chk_warlog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: akcja na rekord po WARLOG
::   WE: _a - typ operacji: 1-popraw 0-dołącz
::  OLD: \war_reca/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=-(1+menu_txt())='p' ?};
_fld:=__CHK.record(WARLOG,,'KOD','FO');
{? _fld=''
|| _rek:=#WARLOG.ref();
   _kod:=WARLOG.KOD;
   _rodz:=WARLOG.RODZ;
   WARLOG.cntx_psh(); WARLOG.index('KKOD'); WARLOG.prefix(_rodz,_kod,_kod);
   {? WARLOG.first() & (_a=0 | #WARLOG.ref()<>_rek)
   || FUN.info('Istnieje już pozycja o kodzie %1.'@[_kod]);
      _fld:='KOD'
   ?};
   WARLOG.cntx_pop()
?};
_fld


\chk_warlog0
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Sprawdzenie znaczników w tabeli WARLOG
::----------------------------------------------------------------------------------------------------------------------
_fld:=__CHK.record(WARLOG,,'RODZ','TD','SO','DV','RKW');
{? _fld=''
|| {? 'SLKE'*WARLOG.RODZ=0
   || FUN.info('Niedozwolona wartość pola: Rodzaj dekretacji: %1. Dozwolone wartości: SLKE.'@[WARLOG.RODZ]);
      _fld:='RODZ'
   |? 'SDR'*WARLOG.TD=0
   || FUN.info('Niedozwolona wartość pola: Typ danej: %1. Dozwolone wartości: SDR.'@[WARLOG.TD]);
      _fld:='TD'
   |? 'ONPD'*WARLOG.SO=0
   || FUN.info('Niedozwolona wartość pola: Sposób obliczeń: %1. Dozwolone wartości: ONPD.'@[WARLOG.SO]);
      _fld:='SO'
   |? 'TN'*WARLOG.DV=0
   || FUN.info('Niedozwolona wartość pola: Dotyczy VAT: %1. Dozwolone wartości: TN.'@[WARLOG.DV]);
      _fld:='DV'
   |? 'DNVBW'*WARLOG.RKW=0
   || FUN.info('Niedozwolona wartość pola: Rodzaj kwoty: %1. Dozwolone wartości: DNVBW.'@[WARLOG.RKW]);
      _fld:='RKW'
   |? WARLOG.TD<>'R' & WARLOG.DV='T'
   || FUN.info('Niedozwolona wartość pola: Dotyczy VAT: T gdy Typ danej inny niż R.'@);
      _fld:='DV'
   |? WARLOG.DV='N' & WARLOG.RKW<>'D'
   || FUN.info('Niedozwolona wartość pola: Rodzaj kwoty: %1 (inna niż D) gdy Dotyczy VAT równe: N.'@[WARLOG.RKW]);
      _fld:='RKW'
   ?}
?};
_fld


\opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Zwraca opis rodzaju schematu
::   WE: _a - rodzaj
::       _b - obszar
::----------------------------------------------------------------------------------------------------------------------
{? _a='S'  || 'Kasa'
|? _a='SN' || 'Raporty kasowe bez VAT'
|? _a='SV' || 'Dokumenty VAT'
|? _a='K'  || 'Płace'
|? _a='KL' || 'Listy płac'
|? _a='KU' || 'Umowy zlecenia'
|? _a='Kl' || 'Umowy zlecenia z listy'
|? _a='E'  || 'Środki Trwałe'
|? _a='EF' || 'Amortyzacja bilansowa'
|? _a='EP' || 'Amortyzacja podatkowa'
|? _a='ED' || 'Amortyzacja dodatkowa'
|? _a='EW' || 'Dokumenty wartościowe'
|? _a='ET' || 'Dokumenty OT'
|? _a='L' & _b='LSP' || 'Sprzedaż'
|? _a='LS' || 'Dokumenty sprzedaży'
|? _a='LP' || 'Paragony zbiorczo'
|? _a='LK' || 'Korekty zbiorcze sprzedaży'
|? _a='LX' || 'Korekty zbiorcze zakupów'
|? _a='L'  || 'Magazyny'
|? _a='LM' || 'Dokumenty magazynowe'
|? _a='L' & _b='LZK' || 'Zakupy'
|? _a='LZ' || 'Dokumenty zakupu'
|| 'Nieznany'
?}


\obj_fv_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Tworzy objekt na potrzeby podstawowej dekretacji z zapisami jak FAKSV
::   WE: _a - wskazanie na nagłowek dokumentu FAKS
::  OLD: \obj_fv_sp/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new('tab','first','next','set','create','SP_WYM');
_obj.tab:=tab_tmp(2,
   'SV','INTEGER','Stawka VAT',
   'SP_WYM','STRING[1]','SP',
   'WN_Z','REAL','Netto zaliczkowe',
   'WV_Z','REAL','VAT zaliczkowe',
   'WB_Z','REAL','Brutto zaliczkowe',
   'WN','REAL','Netto',
   'WV','REAL','VAT',
   'WB','REAL','Brutto',
   'WN_R','REAL','Netto rozliczeniowe',
   'WV_R','REAL','VAT rozliczeniowe',
   'WB_R','REAL','Brutto rozliczeniowe',
   'WWN_Z','REAL','Wartość walutowa zaliczki netto',
   'WWV_Z','REAL','VAT w walucie zaliczki',
   'WW_Z','REAL','Wartość walutowa zaliczki',
   'WWN','REAL','Wartość walutowa netto',
   'WWV','REAL','VAT w walucie',
   'WW','REAL','Wartość walutowa',
   'WWN_R','REAL','Wartość walutowa rozliczenia netto',
   'WWV_R','REAL','VAT w walucie rozliczenia',
   'WW_R','REAL','Wartość walutowa rozliczenia'
);
_obj.create:="
   _tab:=.tab;
   _tab.clear();
:   _tab.erase();
   _Sp:=tab_tmp(1
      ,'SV','INTEGER','#FAP.SV'
      ,'WAR','REAL','Wartość'
      ,'WN','REAL','Netto'
      ,'WV','REAL','VAT'
      ,'WB','REAL','Brutto'
      ,'WWN','REAL','Wartość walutowa netto'
      ,'WWV','REAL','VAT w walucie'
      ,'WW','REAL','Wartość walutowa'
      ,'WAR_SP','REAL','Wartość wymaganego split payment'
      ,'WN_SP','REAL','Netto'
      ,'WV_SP','REAL','VAT'
      ,'WB_SP','REAL','Brutto'
      ,'WWN_SP','REAL','Wartość walutowa netto'
      ,'WWV_SP','REAL','VAT w walucie'
      ,'WW_SP','REAL','Wartość walutowa'
      );
   _dokl:=2;
   _faks:=_a;
   _faks_n:=8+_a;
   _obl_zal_rozl:={? var_pres('_b')=type_of(0) || _b || 1 ?};
   FAKS.cntx_psh();
   FAKS.use(_faks_n);
   FAKS.prefix();
   {? FAKS.seek(BIT.sqlint(_faks),)
   ||
:: rozliczone zaliczki
      _rozl:=0;
      FAPOW.cntx_psh();
      FAPOW.index('END_K');
      FAPOW.prefix($FAKS.ref(),'N');
      _loop:=_obl_zal_rozl & FAPOW.first();
      {!
      |? _loop
      |!
         _Faksv:=exec('faksv','dok_fks_aut_dok',FAPOW.ref(),'zal');
         _loop:=_Faksv.first();
         {!
         |? _loop
         |!
            _rozl:=1;
            {? _tab.find_key(_Faksv.SV,_Faksv.SP_WYM)
            ||
               _tab.WN_Z+=_Faksv.WN;
               _tab.WV_Z+=_Faksv.WV;
               _tab.WB_Z+=_Faksv.WB;
               _tab.WWN_Z+=_Faksv.WWN;
               _tab.WWV_Z+=_Faksv.WWV;
               _tab.WW_Z+=_Faksv.WW;
               _tab.put()
            ||
               _tab.blank(1);
               _tab.SV:=_Faksv.SV;
               _tab.SP_WYM:=_Faksv.SP_WYM;
               _tab.WN_Z:=_Faksv.WN;
               _tab.WV_Z:=_Faksv.WV;
               _tab.WB_Z:=_Faksv.WB;
               _tab.WWN_Z:=_Faksv.WWN;
               _tab.WWV_Z:=_Faksv.WWV;
               _tab.WW_Z:=_Faksv.WW;
               _tab.add()
            ?};
            _loop:=_Faksv.next()
         !};
         obj_del(_Faksv);
         _loop:=FAPOW.next()
      !};
      FAPOW.cntx_pop();
      {? _rozl
      ||
:: rozliczenie
         _Faksv:=exec('faksv','dok_fks_aut_dok',FAKS.ref(),'roz');
         _loop:=_Faksv.first();
         {!
         |? _loop
         |!
            {? _tab.find_key(_Faksv.SV,_Faksv.SP_WYM)
            ||
               _tab.WN_R+=_Faksv.WN;
               _tab.WV_R+=_Faksv.WV;
               _tab.WB_R+=_Faksv.WB;
               _tab.WWN_R+=_Faksv.WWN;
               _tab.WWV_R+=_Faksv.WWV;
               _tab.WW_R+=_Faksv.WW;
               _tab.put()
            ||
               _tab.blank(1);
               _tab.SV:=_Faksv.SV;
               _tab.SP_WYM:=_Faksv.SP_WYM;
               _tab.WN_R:=_Faksv.WN;
               _tab.WV_R:=_Faksv.WV;
               _tab.WB_R:=_Faksv.WB;
               _tab.WWN_R:=_Faksv.WWN;
               _tab.WWV_R:=_Faksv.WWV;
               _tab.WW_R:=_Faksv.WW;
               _tab.add()
            ?};
            _loop:=_Faksv.next()
         !};
         obj_del(_Faksv);
         _loop:=FAPOW.next()
      ?};
:: faktura
      {? FAKS.WHERE='L'
      ||
         _Faksv:=exec('faksv','dok_fks_aut_dok',FAKS.ref(),'zal');
         _loop:=_Faksv.first();
         {!
         |? _loop
         |!
            {? _tab.find_key(_Faksv.SV,_Faksv.SP_WYM)
            ||
               _tab.WN_Z+=_Faksv.WN;
               _tab.WV_Z+=_Faksv.WV;
               _tab.WB_Z+=_Faksv.WB;
               _tab.WWN_Z+=_Faksv.WWN;
               _tab.WWV_Z+=_Faksv.WWV;
               _tab.WW_Z+=_Faksv.WW;
               _tab.put()
            ||
               _tab.blank(1);
               _tab.SV:=_Faksv.SV;
               _tab.SP_WYM:=_Faksv.SP_WYM;
               _tab.WN_Z:=_Faksv.WN;
               _tab.WV_Z:=_Faksv.WV;
               _tab.WB_Z:=_Faksv.WB;
               _tab.WWN_Z:=_Faksv.WWN;
               _tab.WWV_Z:=_Faksv.WWV;
               _tab.WW_Z:=_Faksv.WW;
               _tab.add()
            ?};
            _loop:=_Faksv.next()
         !}
      ||
         _Faksv:=exec('faksv','dok_fks_aut_dok',FAKS.ref(),'fak');
         _loop:=_Faksv.first();
         {!
         |? _loop
         |!
            _rozl:=1;
            {? _tab.find_key(_Faksv.SV,_Faksv.SP_WYM)
            ||
               _tab.WN+=_Faksv.WN;
               _tab.WV+=_Faksv.WV;
               _tab.WB+=_Faksv.WB;
               _tab.WWN+=_Faksv.WWN;
               _tab.WWV+=_Faksv.WWV;
               _tab.WW+=_Faksv.WW;
               _tab.put()
            ||
               _tab.blank(1);
               _tab.SV:=_Faksv.SV;
               _tab.SP_WYM:=_Faksv.SP_WYM;
               _tab.WN:=_Faksv.WN;
               _tab.WV:=_Faksv.WV;
               _tab.WB:=_Faksv.WB;
               _tab.WWN:=_Faksv.WWN;
               _tab.WWV:=_Faksv.WWV;
               _tab.WW:=_Faksv.WW;
               _tab.add()
            ?};
            _loop:=_Faksv.next()
         !}
      ?};
      obj_del(_Faksv)
   ?};
   FAKS.cntx_pop()
";
_obj.first:="
   _tab:=.tab;
   {? _tab.first()
   || .set(); 1
   ?}
";
_obj.next:="
   _tab:=.tab;
   {? _tab.next()
   || .set(); 1
   ?}
";
_obj.set:="
   _tab:=.tab;
   .SP_WYM:=_tab.SP_WYM;
   FAKSV.SV:=exec('FindAndGet','#table',SLO,_tab.SV,SLO.name(),\"ref()\");
   FAKSV.WN_Z:=_tab.WN_Z;
   FAKSV.WV_Z:=_tab.WV_Z;
   FAKSV.WB_Z:=_tab.WB_Z;
   FAKSV.WN:=_tab.WN;
   FAKSV.WV:=_tab.WV;
   FAKSV.WB:=_tab.WB;
   FAKSV.WN_R:=_tab.WN_R;
   FAKSV.WV_R:=_tab.WV_R;
   FAKSV.WB_R:=_tab.WB_R;
   FAKSV.WW_Z:=_tab.WW_Z;
   FAKSV.WW:=_tab.WW;
   FAKSV.WW_R:=_tab.WW_R;
   FAKSV.SP_WYM:=_tab.SP_WYM;
   FAKSV.WWN_Z:=_tab.WWN_Z;
   FAKSV.WWV_Z:=_tab.WWV_Z;
   FAKSV.WWN:=_tab.WWN;
   FAKSV.WWV:=_tab.WWV;
   FAKSV.WWN_R:=_tab.WWN_R;
   FAKSV.WWV_R:=_tab.WWV_R
";
_obj


\upd_vpoz_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Aktualizuje walutowe pozycje VAT
::  OLD: \upd_vpoz_wal/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.WAL & var_pres('NETTO_W',VPOZ)>0
|| VPOZ.cntx_psh();
   VPOZ.index('VDOK');
   VPOZ.prefix(DOK.ref());
   {? VPOZ.first()
   || {!
      |? {? VPOZ.WARW
         || _jedn:=exec('jed_wal','waluty',DOK.WAL().KOD);
            _typ:=(VPOZ.WARW*VPOZ.KURS)/_jedn$2<>VPOZ.NETTO;
            exec('ae_vpozw','dok_fks1','WARW',_typ);
            VPOZ.put()
         ?};
         VPOZ.next()
      !}
   ?};
   VPOZ.cntx_pop()
?}


\dok_sumwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42]
:: OPIS: Zwraca wartośc pola DOK.SUMWAL
::----------------------------------------------------------------------------------------------------------------------
_ile_wal:=0;
_kw:=0;
{? DOK.DOK_REJ().SLO().KOD='SAD' | (_ile_wal:=exec('ile_wal','dok_fks'))<2
|| VPOZ.cntx_psh();
   VPOZ.index('VDOK');
   VPOZ.prefix(DOK.ref);
   {? VPOZ.first() || {! |? _kw+={? _ile_wal || VPOZ.WARW || VPOZ.BRUTTO ?}; VPOZ.next() !} ?};
   VPOZ.cntx_pop()
?};
_kw


\obj_gtu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Obiekt do obsługi dekretacji GTU
::  OLD: \obj_gtu/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new(
   'GTU',
   'add','get'
);
_obj.GTU:='';
_obj.add:="
   {? .GTU*_a=0
   || .GTU+=_a+','
   ?}
";
_obj.get:="
   .GTU-1
";
_obj


\jpk_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Zwraca napisu z pozycjami słownika JPK
::   WE: _a - typ słownika
::       _b - napis do sprawdzenia
::       _c - typ dekretacji
::  OLD: \jpk_slo/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
{? _b='' || return('') ?};
_txt:='';
_str:=spli_str(_b,',');
_wer:=exec('bl_js_wersja','jpk_v');
JPK_SLO.cntx_psh();
JPK_SLO.index('KOD');
JPK_SLO.prefix(_wer,_a,);
{! _ii:=1..obj_len(_str)
|! {? _str[_ii]<>''
   || {? ~JPK_SLO.find_key(_str[_ii],)
      || exec('add_err','dok_fks_aut_dok','','Nie znaleziono elementu: '+_str[_ii]+' dla typu: '+_a,_c)
      |? _txt*_str[_ii]=0
      || _txt+=_str[_ii]+','
      ?}
   ?}
!};
JPK_SLO.cntx_pop();
_txt-1


\sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Wartość dokumentu w podziale na stawki vat wg pozycji dokumentu
::       z wydzieleniem wartości dotyczących wymaganego split payment
::   WE: _a - FAKS.ref()
::   WY: wskazanie na tabelę z wartościami
::----------------------------------------------------------------------------------------------------------------------
_faks:=_a;
_faks_n:=ref_name(_faks);

_Sp:=tab_tmp(1
   ,'SV','INTEGER','#FAP.SV'
   ,'WAR','REAL','Wartość'
   ,'WN','REAL','Netto'
   ,'WV','REAL','VAT'
   ,'WB','REAL','Brutto'
   ,'WWN','REAL','Wartość walutowa netto'
   ,'WWV','REAL','VAT w walucie'
   ,'WW','REAL','Wartość walutowa'
   ,'WAR_SP','REAL','Wartość wymaganego split payment'
   ,'WN_SP','REAL','Netto'
   ,'WV_SP','REAL','VAT'
   ,'WB_SP','REAL','Brutto'
   ,'WWN_SP','REAL','Wartość walutowa netto'
   ,'WWV_SP','REAL','VAT w walucie'
   ,'WW_SP','REAL','Wartość walutowa'
   );
TYPYSP.cntx_psh();
_kor:=exec('FindAndGet','#table',FAKS,_faks,,"FAKS.T().KOR='T'",0);
TYPYSP.cntx_pop();
FAP.cntx_psh();
FAP.use((5+FAP.name())+(_faks_n+3));
FAP.index('FAP');
FAP.prefix(_faks);
_loop:=FAP.first();
{!
|? _loop
|!
   {? _kor
   ||
      exec('wysw_kor','faktury_poz');
:: po korekcie
      _sv:=#FAP.SV;
      {? _Sp.find_key(_sv)
      ||
         _Sp.WAR+=FKOR.BWWAL_P;
         _Sp.WN+=FKOR.BWWAL_P;   _Sp.WV+=FKOR.BVWAL_P;   _Sp.WB+=FKOR.BBWAL_P;
         _Sp.WWN+=FKOR.BWWAL;     _Sp.WWV+=FKOR.BVWAL;    _Sp.WW+=FKOR.BBWAL;
         {? FAP.SP_WYM='T'
         ||
            _Sp.WAR_SP+=FKOR.BWWAL_P;
            _Sp.WN_SP+=FKOR.BWWAL_P;   _Sp.WV_SP+=FKOR.BVWAL_P;   _Sp.WB_SP+=FKOR.BBWAL_P;
            _Sp.WWN_SP+=FKOR.BWWAL;    _Sp.WWV_SP+=FKOR.BVWAL;    _Sp.WW_SP+=FKOR.BBWAL
         ?};
         _Sp.put()
      ||
         _Sp.blank();
         _Sp.SV:=_sv;
         _Sp.WAR:=FKOR.BWWAL_P;
         _Sp.WN:=FKOR.BWWAL_P;   _Sp.WV:=FKOR.BVWAL_P;   _Sp.WB:=FKOR.BBWAL_P;
         _Sp.WWN:=FKOR.BWWAL;    _Sp.WWV:=FKOR.BVWAL;    _Sp.WW:=FKOR.BBWAL;
         {? FAP.SP_WYM='T'
         ||
            _Sp.WAR_SP:=FKOR.BWWAL_P;
            _Sp.WN_SP:=FKOR.BWWAL_P;   _Sp.WV_SP:=FKOR.BVWAL_P;   _Sp.WB_SP:=FKOR.BBWAL_P;
            _Sp.WWN_SP:=FKOR.BWWAL;    _Sp.WWV_SP:=FKOR.BVWAL;    _Sp.WW_SP:=FKOR.BBWAL
         ?};
         _Sp.add()
      ?};
:: przed korektą
      _sv:=#FKOR.SV;
      {? _Sp.find_key(_sv)
      ||
         _Sp.WAR-=FKOR.WWAL_P;
         _Sp.WN-=FKOR.WWAL_P; _Sp.WV-=FKOR.VWAL_P; _Sp.WB-=FKOR.BWAL_P;
         _Sp.WWN-=FKOR.WWAL;  _Sp.WWV-=FKOR.VWAL;  _Sp.WW-=FKOR.BWAL;
         {? FKOR.SP_WYM='T'
         ||
            _Sp.WAR_SP-=FKOR.WWAL_P;
            _Sp.WN_SP-=FKOR.WWAL_P; _Sp.WV_SP-=FKOR.VWAL_P; _Sp.WB_SP-=FKOR.BWAL_P;
            _Sp.WWN_SP-=FKOR.WWAL;  _Sp.WWV_SP-=FKOR.VWAL;  _Sp.WW_SP-=FKOR.BWAL
         ?};
         _Sp.put()
      ||
         _Sp.blank();
         _Sp.SV:=_sv;
         _Sp.WAR:=-FKOR.WWAL_P;
         _Sp.WN:=-FKOR.WWAL_P;   _Sp.WV:=-FKOR.VWAL_P;   _Sp.WB:=-FKOR.BWAL_P;
         _Sp.WWN:=-FKOR.WWAL;    _Sp.WWV:=-FKOR.VWAL;    _Sp.WW:=-FKOR.BWAL;
         {? FKOR.SP_WYM='T'
         ||
            _Sp.WAR_SP:=-FKOR.WWAL_P;
            _Sp.WN_SP:=-FKOR.WWAL_P;   _Sp.WV_SP:=-FKOR.VWAL_P;   _Sp.WB_SP:=-FKOR.BWAL_P;
            _Sp.WWN_SP:=-FKOR.WWAL;    _Sp.WWV_SP:=-FKOR.VWAL;    _Sp.WW_SP:=-FKOR.BWAL
         ?};
         _Sp.add()
      ?}
   ||
      _sv:=#FAP.SV;
      {? _Sp.find_key(_sv)
      ||
         _Sp.WAR+=FAP.WWAL_P;
         _Sp.WN+=FAP.WWAL_P;  _Sp.WV+=FAP.VWAL_P;  _Sp.WB+=FAP.BWAL_P;
         _Sp.WWN+=FAP.WWAL;   _Sp.WWV+=FAP.VWAL;   _Sp.WW+=FAP.BWAL;
         {? FAP.SP_WYM='T'
         ||
            _Sp.WAR_SP+=FAP.WWAL_P;
            _Sp.WN_SP+=FAP.WWAL_P;  _Sp.WV_SP+=FAP.VWAL_P;  _Sp.WB_SP+=FAP.BWAL_P;
            _Sp.WWN_SP+=FAP.WWAL;   _Sp.WWV_SP+=FAP.VWAL;   _Sp.WW_SP+=FAP.BWAL
         ?};
         _Sp.put()
      ||
         _Sp.blank();
         _Sp.SV:=_sv;
         _Sp.WAR:=FAP.WWAL_P;
         _Sp.WN:=FAP.WWAL_P;  _Sp.WV:=FAP.VWAL_P;  _Sp.WB:=FAP.BWAL_P;
         _Sp.WWN:=FAP.WWAL;   _Sp.WWV:=FAP.VWAL;   _Sp.WW:=FAP.BWAL;
         {? FAP.SP_WYM='T'
         ||
            _Sp.WAR_SP:=FAP.WWAL_P;
            _Sp.WN_SP:=FAP.WWAL_P;  _Sp.WV_SP:=FAP.VWAL_P;  _Sp.WB_SP:=FAP.BWAL_P;
            _Sp.WWN_SP:=FAP.WWAL;   _Sp.WWV_SP:=FAP.VWAL;   _Sp.WW_SP:=FAP.BWAL
         ?};
         _Sp.add()
      ?}
   ?};
   _loop:=FAP.next()
!};
FAP.cntx_pop();
_Sp


\faksv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Zwraca wartość dokumentu w podziale na stawiki vat
::   WE: _a - FAKS.ref(), FAPOW.ref()
::       _b - 'zal'/'roz'/'fak' rozpisywane wartości
::   WY: wskazanie na tabelę z wartościami
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_typ:=_b;

_Tab:=tab_tmp(1,
   'SV','INTEGER','Stawka VAT',
   'SP_WYM','STRING[1]','SP',
   'WN','REAL','Netto',
   'WV','REAL','VAT',
   'WB','REAL','Brutto',
   'WWN','REAL','Wartość walutowa netto',
   'WWV','REAL','VAT w walucie',
   'WW','REAL','Wartość walutowa'
);

_fapow:=ref_name(_ref)=FAPOW.name();
_faks:=_ref;
{? _fapow
||
   _faks:=exec('FindAndGet','#table',FAPOW,$_ref,,"FAPOW.FAKS",null());
   _faks:=exec('FindAndGet','#table',FAKS,_faks,,,null())
?};

{? _faks=null() || return(_Tab) ?};

_dokl:=2;
_wwal:=exec('FindAndGet','#table',FAKS,$_faks,,"FAKS.WAL<>FAKS.NWAL",null());

_Sp:=exec('sp','dok_fks_aut_dok',_faks);

FAKSV.cntx_psh();
FAKSV.use('faksv'+((8+$_faks)+3));
FAKSV.index('FF_SV');
{? _fapow
|| FAKSV.prefix($_ref,$_faks)
|| FAKSV.prefix('',$_faks)
?};

_loop:=FAKSV.first();
{!
|? _loop
|!
   _Tab.blank();
   _Tab.SV:=#FAKSV.SV;
   _vat:=#((FAKSV.SV().KOD*'%')+FAKSV.SV().KOD-1)/100;
   _sp_find:=_Sp.find_key(_Tab.SV);
   {? _sp_find | _typ='roz'
   ||
      _wsp:={? _sp_find & _Sp.WAR_SP & _Sp.WAR || _Sp.WAR_SP/_Sp.WAR || 1 ?};
      _wb:=_wn:=_wv:=0;
      _ww:=_wwn:=_wwv:=0;
      {? _typ='fak'
      ||
         _wb:=FAKSV.WB;
         _wn:=FAKSV.WN;
         _wv:=FAKSV.WV;
         _ww:=FAKSV.WW;
         {? 0
         ||
:: todo: przełączyć po uzupełnieniu wartości pól w transferze i obsłudze w algorytmach wyliczania
            _wwn:=FAKSV.WWN;
            _wwv:=FAKSV.WWV
         ||
            {? _sp_find
            ||
               _wwn:=_Sp.WWN;
               _wwv:=_Sp.WWV
            ?}
         ?}

      |? _typ='zal'
      ||
         _wb:=FAKSV.WB_Z;
         _wn:=FAKSV.WN_Z;
         _wv:=FAKSV.WV_Z;
         _ww:=FAKSV.WW_Z;
         {? 0
         ||
:: todo: przełączyć po uzupełnieniu wartości pól w transferze i obsłudze w algorytmach wyliczania
            _wwn:=FAKSV.WWN_Z;
            _wwv:=FAKSV.WWV_Z
         ||
            _wwn:={? _wwal || (_ww/(1+_vat))$_dokl || _wn ?};
            _wwv:={? _wwal || _ww-_wwn || _wv ?}
         ?}

      |? _typ='roz'
      ||
         _wb:=FAKSV.WB_R;
         _wn:=FAKSV.WN_R;
         _wv:=FAKSV.WV_R;
         _ww:=FAKSV.WW_R;
         {? 0
         ||
:: todo: przełączyć po uzupełnieniu wartości pól w transferze i obsłudze w algorytmach wyliczania
            _wwn:=FAKSV.WWN-FAKSV.WWN_Z;
            _wwv:=FAKSV.WWV-FAKSV.WWV_Z
         ||
            _wwn:=_wwv:=0;
            {? _sp_find
            ||
               _wwn:=_Sp.WWN;
               _wwv:=_Sp.WWV
            ?};
            _wwn_z:=0;
            {? _wwal & FAKSV.WW_Z<>FAKSV.WW
            ||
               _wwn_z:=exec('wwn_z','faktury_vat',FAKSV.FAKS,FAKSV.SV().KOD,_vat,_dokl)
            ?};
            _wwn:={? _wwal || _wwn-_wwn_z || _wn ?};
            _wwv:={? _wwal || _ww-_wwn || _wv ?}
         ?}
      ?};
      {? _sp_find & _Sp.WAR_SP
      ||
         _Tab.SP_WYM:='T';
         {? _wsp=1
         ||
            _Tab.WB:=_wb;
            _Tab.WV:=_wv;
            _Tab.WN:=_wn;
            _Tab.WW:=_ww;
            _Tab.WWV:=_wwv;
            _Tab.WWN:=_wwn
         ||
            _Tab.WB:=(_wsp*_wb)$_dokl;
            _Tab.WV:=(_wsp*_wv)$_dokl;
            _Tab.WN:=(_wsp*_wn)$_dokl;
            _Tab.WW:=(_wsp*_ww)$_dokl;
            _Tab.WWV:=(_wsp*_wwv)$_dokl;
            _Tab.WWN:=(_wsp*_wwn)$_dokl
         ?};
         _Tab.add()
      ?};
      _Tab.SP_WYM:='N';
      _Tab.WB:=_wb-_Tab.WB;
      _Tab.WV:=_wv-_Tab.WV;
      _Tab.WN:=_wn-_Tab.WN;
      _Tab.WW:=_ww-_Tab.WW;
      _Tab.WWV:=_wwv-_Tab.WWV;
      _Tab.WWN:=_wwn-_Tab.WWN;
      {? _Tab.WB | _Tab.WV | _Tab.WN | _Tab.WW | _Tab.WWV | _Tab.WWN
      ||
         _Tab.add()
      ?}
   ?};
   _loop:=FAKSV.next()
!};
FAKSV.cntx_pop();
_Tab


\war1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [IFZ] [12.51]
:: OPIS: ksiegowanie paragonow
::   WE: _a: typ dokumentu: paragon - T, faktura - N
::   WY: 1 - kontrahent na wystawionej do paragonu fakturze nie jest podatnikiem VAT, 0 - w p.p.
::----------------------------------------------------------------------------------------------------------------------
_nie_vat:=1;
{? _a='T'
||
: dla paragonu - szukamy wystawionej do niego faktury i sprawdzamy czy kh na tej fakturze jest vatowcem
     _par:=exec('FindAndGet','#table',FAKS,FAKS.SYMF,,"FAKS.SYM",'');
     FAKS.cntx_psh();
     FAKS.index('FAK_SYM');
     FAKS.prefix('S',_par,_par);
     _nie_vat:=FAKS.first & (FAKS.KH().TYP='I' | FAKS.KH().TYP='R');
     FAKS.cntx_pop()
||
: dla faktury - czy kontahent na fakturze jest vatowcem
 _nie_vat:=~(FAKS.KH().TYP='I' | FAKS.KH().TYP='R')
?};
 _nie_vat

:Sign Version 2.0 jowisz:1045 2024/02/21 10:48:41 e0088ad183e185acd8347dc7d12606ee9350000079d6a426ca0cfe68a4819f84189338bc828ab1680b9a9d2ac237ad788c5f87ade203a8786421ca2c39a48d903a47df3d5338b48fc4df0a758d89b539cddabc16ccbe6066e9b40ffec19a3297b8f52cabea99a7311d1df9259af8cbc19d3602e32a1002c194d7117d07028b08
