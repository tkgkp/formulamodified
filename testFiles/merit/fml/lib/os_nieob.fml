:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: os_nieob.fml [2006]
:: Utworzony: 2006/10/17
:: Autor: PKOSO
::======================================================================================================================
:: Zawartosc: Definicje funkcji wykorzystywanych do realizacji nieobecnosci
::            dla osob nie bedacych pracownikami (zleceniobiorcow)
::======================================================================================================================


\grant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Sprawdzenie uprawnien do zleceniobiorcy
::       (wymagane sa uprawnienia do wszystkich wystapien osoby w kartotece zleceniobiorcow)
::       funkcja wolana miedzy innymi w definicji jako OS_N_02
::   WE: _a = integer - bez komunikatu
::   WY: 1 - sa uprawnienia; 0 brak uprawnien
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
P.index('PRACOSOB');
P.prefix(exec('ref_firma','ustawienia'),'Z',OSOBA.ref());
_wyn:=0;
{? P.first()
|| _P_upr:=exec('dostepne_p_osoba','schemat','PPL','Z','*',$OSOBA.ref());
   {? P.size()=_P_upr.size()
   || _wyn:=1
   || _wyn:=0
   ?};
   obj_del(_P_upr)
?};
P.cntx_pop();
{? ~_wyn
|| {? var_pres('_a')<>type_of(0) || FUN.emsg('Brak uprawnień. Akcja niedostępna.'@) ?};
   0
|| 1
?}


\czy_rach
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Funkcja sprawdza czy realizacja nieobecnosci zostala wyplacona
::       wolana na rekord przed
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| {? ZC_N.RH=RH.ref
   || _ag:='W'
   |? ZC_N.RH=null & ZC_N.OD<=RH.DWY
   || _ag:='C'
   || _ag:='WC'
   ?};
   ZC_N.actions_grayed('WERH',_ag)
?};
{? ZC_N.RH=null
|| 0
|? ZC_N.RH=RH.ref
|| Color.fnd_kol('ZC_N#01#01')
|| Color.fnd_kol('ZC_N#01#02')
?}


\czy_zasilek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Sprawdzenie czy nieobecnosc jest zasilkiem realizowanym w standardowej wersji systemu
::   WE: _a - numer składnika płacowego
::       _b - data od
::----------------------------------------------------------------------------------------------------------------------
__RUB.sys_attr(_a,122,_b)


\czy_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Sprawdzenie czy jest nieobecnosc wyplacona rachunkiem
::   WY: 1 - nie jest wyplacona
::       0 - jest wyplacona + komunikat
::----------------------------------------------------------------------------------------------------------------------
{? ZC_N.RH<>null
|| FUN.emsg('Akcja niedostępna.\n Istnieje wypłata zasiłku dotycząca usuwanej realizacji.'@);
   0
|| 1
?}


\dod_wyp_zas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Wyplacenie zasilku bez wyplaty rachunku
::----------------------------------------------------------------------------------------------------------------------
{? ~({? exec('grant','os_nieob',1) || exec('zas_zc','os_nieob',1) ?})
|| FUN.emsg('Zlecenie nie ma zasiłków do realizacji.'@);
   return()
?};

VAR.P:=0;
UZ.DRH:=0;
RH.blank();
RH.R:=RH.DWY~1;
RH.M:=RH.DWY~2;

{? PAR_SKID.get(258)='T'
:: wybieramy liste ręcznie
|| _ret:=1
|| _ret:=exec('ustal_lista_rh','zlec_rh')
?};

{? ~_ret
|| return(0)
?};

RH.WAL:=0;
UZ.STAWKA:=UZ.GODZ:=UZ.RH:=0;
RH.ZAS:='T';
RH.win_edit(exec('rh_win_edit','zlec_rh'));
exec('rh_efld_opt','zlec_rh');
{? RH.edit("
      {? |RH.N='' || return('N') ?};
      {? RH.DWY<ZC.DU
      || FUN.emsg('\nData wypłaty wcześniejsza od daty wystawienia.\n'@);
         return('DWY')
      |? PAR_SKID.get(258)='T' & ~exec('spr_uz_lt','zlec_rh')
      || return('LT')
      || 1
      ?};
      RH.R:=RH.DWY~1; RH.M:=RH.DWY~2;
      {? RH.O=null()
      || FUN.emsg('Wypłata zasiłku chorobowego niemożliwa.\n'
             'Wykonaj parametryzację modułu umów zleceń,\n'
             'wprowadź domyślny typ listy płac dla umów zleceń.'@);
         0
      || _ret:=exec('ustal_lista_rh','zlec_rh');
         _ret
      ?}
   ")
   || RH.R:=RH.DWY~1; RH.M:=RH.DWY~2;
      {? exec('get_ZC_INFO','zlec_rh',RH.DWY)
      || RH.ZC_INFO:=ZC_INFO.ref
      ?};
      {? RH.add
      || {? RH.DWY>ZC.DZB
         || ZC.DZB:=RH.DWY;
            ZC.put()
         ?};
         exec('wylicz_rhs','zlec_rh')
      || VAR.P:=1;
         UZ.DRH:=1
      ?}
   || VAR.P:=1;
      UZ.DRH:=1
?};
~~


\licz_nie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Wyliczenie nieobecnosci z kartoteki OS_N.
::   WE: _a - data Od
::       _b - data Do
::----------------------------------------------------------------------------------------------------------------------
__KAL.set_cal('standard');
_nie:=0;
OS_N.cntx_psh();
OS_N.index('OND');
OS_N.prefix(exec('ref_firma','ustawienia'),OSOBA.ref);
{? OS_N.last()
|| {!
   |? {? OS_N.OD<=_b & OS_N.DO>=_a
      || {? ~__RUB.sys_attr(OS_N.R,113,OS_N.OD)
         || _od:={? OS_N.OD<_a || _a || OS_N.OD ?};
            _do:={? OS_N.DO>_b || _b || OS_N.DO ?};
            _nie+=__KAL.w_days(_od,_do)
         ?}
      ?};
      (OS_N.prev()) & OS_N.DO>=_a
   !}
?};
OS_N.cntx_pop();
_nie


\spr_nb_braki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Funkcja umozliwia realizacje nieobecnosci lub ich czesci w obrebie biezacego zlecenia
::       funkcja wolana po dołącz oraz popraw dla zlecenia
::   WE: _a [NUMBER] - funkcja wolana podczas aktualizacji.
::----------------------------------------------------------------------------------------------------------------------
:: !!! Przejść na zmienne lokalne z wykorzystaniem params_set() / params_get().
:: !!! Zastosować ST-INT do okna wertowania tabeli tymczasowej (nazwy, komentarze).
:: !!! Uzupełnić tłumaczenia.
:: !!! Przenieść okna i obsługę tabeli ZC_N

: sekcja begin
_a:=var_pres('_a')=type_of(0);
ZC_N.cntx_psh;
OS_N.cntx_psh;
OS_N.index('OND');
OS_N.prefix(exec('ref_firma','ustawienia'),OSOBA.ref());
ZC_INFO.cntx_psh();
ZC_INFO.index('ZC');
ZC_INFO.prefix(ZC.ref);

: sekcja main
: sprawdz wszystkie nieobecnosci dla danej osoby
{? OS_N.first()
|| {? var_pres('tab_n')>0
   || &tab_n
   ?};
   tab_n:=tab_tmp(1,
      'NOD','DATE','Data od nieob.'@,
      'NDO','DATE','Data do nieob.'@,
      'KOD','INTEGER','Kod'@,
      'NA','STRING[20]','Nieobecność'@,
      'OD','DATE','Data od (do rozliczenia)'@,
      'DO','DATE','Data do (do rozliczenia)'@,
      'OK','STRING[1]','Wybór'@,
      'REF','INTEGER','REF OS_N'@
   );
   _dodaj_brak:=
      "  {? ZC_INFO.first
         || {!
            |? {? 2+ZC_INFO.TTUB().KOD<>'01' &
                 ({? __RUB.sys_attr(OS_N.R,12232,OS_N.OD) & (OS_N.KDSW().KOD='322' | OS_N.KDSW().KOD='314')
                  || 1
                  || ZC_INFO.FC='T'
                  ?})
               || {? _a<=ZC_INFO.DW & _b>=ZC_INFO.DU
                  ||
:                    normalizacja zapisow daty od i do wzgledem biezacej umowy
                     _od:={? _a<ZC_INFO.DU || ZC_INFO.DU || _a ?};
                     _do:={? _b>ZC_INFO.DW || ZC_INFO.DW || _b ?};
                     tab_n.blank;
                     tab_n.NOD:=OS_N.OD;
                     tab_n.NDO:=OS_N.DO;
                     tab_n.KOD:=OS_N.R().RN;
                     tab_n.NA:=R.RT;
                     tab_n.OD:=_od;
                     tab_n.DO:=_do;
                     tab_n.REF:=#OS_N.ref;
                     tab_n.OK:='N';
                     tab_n.add
                  ?}
               ?};
               ZC_INFO.next()
            !}
         ?}
      ";
   {? _a
   || exec('usun_zc_n','os_nieob',1)
   ?};
   ZC_N.index('ZC_W');
   {!
   |? ZC_N.prefix(OS_N.ref,'N');
      {? OS_N.OD<=ZC.DW & OS_N.DO>=ZC.DU & OS_N.ROZ='T'
:        jesli znaleziono odpowiednia nieobecnosc sprawdz czy sa okresy nierozliczone
:        jesli tak to zapisz w tabeli tymczasowej
      || {? ZC_N.first()
:           brakuje rozliczenia dla czesci od poczatku nieobecnosci
         || {? ZC_N.OD>OS_N.OD || _dodaj_brak(OS_N.OD, ZC_N.OD-1) ?};
            _do:=ZC_N.DO;
            {!
            |? ZC_N.next()
:              rozliczenia sie nie pokrywaja
            |! {? _do+1<ZC_N.OD || _dodaj_brak(_do+1, ZC_N.OD-1) ?};
               _do:=ZC_N.DO
            !};
:           brakuje rozliczenia dla czesci koncowej nieobecnosci
            {? ZC_N.DO<OS_N.DO || _dodaj_brak(ZC_N.DO+1, OS_N.DO) ?}
         ||
:           brak rozliczenia
            _dodaj_brak(OS_N.OD, OS_N.DO)
         ?}
      ?};
      OS_N.next()
   !};
:  wyswietlenie okienka wyboru nieobecnosci do rozliczenia
   _win:=tab_n.mk_sel('Wybór nieobecności lub ich części, które nie zostały zrealizowane'@,,,'wyb_z_um');
   tab_n.win_sel(_win);
   tab_n.win_fld(_win,,'NOD',,,,,0);
   tab_n.win_fld(_win,,'NDO',,,,,0);
   tab_n.win_fld(_win,,'KOD',,,,,0);
   tab_n.win_fld(_win,,'NA',,,,,0);
   tab_n.win_fld(_win,,'OD',,,,,0);
   tab_n.win_fld(_win,,'DO',,,,,0);
   tab_n.win_fld(_win,,'OK',,,,,0);
   tab_n.win_act(_win,0,'Formuła','Zmiana wyboru'@@,,,,"{| tab_n |! {? OK='N' || OK:='T' || OK:='N' ?}; put |}",1);
   tab_n.win_act(_win,0,'Rekord',,,,"tab_n.OK='T'",,1);
   {? tab_n.first &
      {? ~_a
      || _akt:=FUN.ask(
            'Istnieją nierozliczone nieobecności, które zawierają się w czasie trwania umowy.\n'
            'Czy zlecenie ma realizować te nieobecności?'@
         )
      || _akt:=0;
         1
      ?}
   ||
:     jesli wybrano nieobecnosci do rozliczenia nastepuje zapisanie do tabeli ZC_N
      {? ~_akt || tab_n.select() ?};
      {? tab_n.first()
      || _ok:=0;
         ZC_N.win_sel('WEZ');
         {!
         |? {? OS_N.seek(tab_n.REF,) & (_akt | tab_n.OK='T')
            || exec('zapis_zc','os_nieob',tab_n.OD,tab_n.DO);
               _ok:=1;
               {? OS_N.OP>0 || exec('potr_25','os_nieob') ?}
            ?};
            tab_n.next()
         !};
         {? _ok & ~_a || exec('zas_zc','os_nieob',,,1) ?}
      ?}
   || {? _a || FUN.emsg('Nie znaleziono nieobecności, które należy aktualizować.'@) ?}
   ?};
   &tab_n
|| {? _a || FUN.emsg('Nie znaleziono nieobecności, które należy rozliczyć.'@) ?}
?};

: sekcja end
OS_N.cntx_pop();
ZC_N.cntx_pop();
ZC_INFO.cntx_pop()


\sprawdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Sprawdzenie poprawności zredagowanych danych w tabeli ZC_N
::----------------------------------------------------------------------------------------------------------------------
{? (_chk:=__CHK.record(ZC_N,,'R','OD','DO','KW','KDSW','PROC'))<>'' || return(_chk) ?};
{? ZC_N.DO<ZC_N.OD
|| FUN.emsg('\nPodano błędne daty okresu, za który obowiązuje wyrównanie.'
      '\n(data zakończenia jest wcześniejsza od daty rozpoczęcia)\n'@);
   'OD'
|? ZC_N.OD<date(2003,10,1) & exec('wyr_zas','lista_wyr')*(','+$ZC_N.R().RN+',')
|| FUN.emsg('\nWyrównania świadczeń za miesiące poprzedzające październik 2003r.'
      '\nmuszą być raportowane według zasad obowiązujących do tego okresu.'@);
   'OD'
|| 1
?}


\usun_zc_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Usuniecie wszystkich zapisow w ZC_N dla biezacej nieobecnosci (oprocz wyrownan),
::       funkcja wolana dla aktualizacji zapisow w ZC_N
::   WE: _a [NUMBER] - kasuje dla zlecenia
::----------------------------------------------------------------------------------------------------------------------
_a:=var_pres('_a')=type_of(0);
{? _a
|| ZC_N.index('ZC_Z');
   ZC_N.prefix(ZC.ref())
|| ZC_N.index('ZC_D');
   ZC_N.prefix(OS_N.ref())
?};
{? ZC_N.first()
|| {!
   |? {? ZC_N.WYR<>'T' & ZC_N.RH=null()
      || ZC_N.del()
      || ZC_N.next()
      ?}
   !}
?}


\ustaw_rh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Akcja Wlacz/wylacz - ustawia ref RH do tabeli ZC_N w celu wyplacenia nieobecnosci
::----------------------------------------------------------------------------------------------------------------------
{? ZC_N.RH=RH.ref
|| ZC_N.RH:=null;
   ZC_N.put
|? ZC_N.RH=null & ZC_N.OD<=RH.DWY
|| {? ZC_N.KW
   || ZC_N.RH:=RH.ref;
      ZC_N.put
   || FUN.emsg('Akcja dla wybranej nieobecności jest niedostępna.\nNieobecność nie ma wyliczonej podstawy.'@)
   ?}
|| FUN.emsg('Akcja dla wybranej nieobecności jest niedostępna.\nZasiłek został wypłacony lub data wypłaty zasiłku\n'
      'jest wcześniejsza od realizacji nieobecności.'@)
?}


\zapis_zc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Zapisanie rekordu do tabeli ZC_N, funkcja uwzglednia podzial dla czesci miesiaca.
::       Uwaga, wymagane jest ustawienie prawidlowego buforu dla: ZC oraz OS_N.
::   WE: _a [DATE ]- data od rozliczenia
::       _b [DATE] - data do rozliczenia
::----------------------------------------------------------------------------------------------------------------------
__KAL.set_cal('standard');
ZC_N.prefix();
_odp:=_od:=_a;
_do:=_b;
{!
|?
:  normalizacja zapisu wg przelomu miesiecy
   {? _od~2<>_b~2 | _od~1 <> _b~1
   || _do:=date(_od~1,_od~2,0)
   || _do:=_b
   ?};
   ZC_N.blank();
   ZC_N.OD:=_odp;
   ZC_N.DO:=_do;
   ZC_N.NK:=_do-_odp+1;
   ZC_N.OS_N:=OS_N.ref();
   ZC_N.R:=OS_N.R;
   ZC_N.ZC:=ZC.ref();
   ZC_N.WYR:='N';
   ZC_N.KDSW:=OS_N.KDSW;
   ZC_N.KW:=OS_N.STD*ZC_N.NK$2;
   ZC_N.NR:=__KAL.w_days(ZC_N.OD,ZC_N.DO);
   ZC_N.NG:=__KAL.w_hours(ZC_N.OD,ZC_N.DO);
   ZC_N.PROC:=OS_N.PROC;
   ZC_N.add();
   _od:=_do+1;
   _odp:=_od;
   _do<_b
!}


\zas_zc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Wyswietlenie okienka z rozliczeniem nieobecnosci dla biezacego zlecenia,
::       funkcja wolana  OS_N_05 oraz zlecenia/spr_zc.
::   WE: _a jesli int - tylko sprawdzenie czy istnieja rozliczenia
::       _b jesli int - dodatkowa akcja Wlacz/wylacz
::       _c jesli int - dodatkowo wylacz akcje Aktualizuj
::----------------------------------------------------------------------------------------------------------------------
_a:=var_pres('_a')=type_of(0);
_b:=var_pres('_b')=type_of(0);
_c:=var_pres('_c')=type_of(0);

_lsw:=exec('lsw_params','lista_wyr');
_lsw.tryb:='ZC_N';

ZC_N.index('ZC_Z');
ZC_N.prefix(ZC.ref());
_wyn:=ZC_N.first();
{? _a
|| _wyn
|| {? _b
   || ZC_N.win_sel('WERH');
      _akc:={? 1+menu_txt()='z' || 'W' || '' ?}
   || ZC_N.win_sel('WEZ');
      _akc:={? _c || 'A' || '' ?}
   ?};
   ZC_N.select(,,,_akc); 1
?}


\potr_25
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Przeliczenie potracenia -25 za opoznienie w dostarczeniu zwolnienia
::----------------------------------------------------------------------------------------------------------------------
ZC_N.cntx_psh();
_opozn:=OS_N.OP;
ZC_N.index('ZC_D');
ZC_N.prefix(OS_N.ref());
{? ZC_N.first()
|| {!
   |? {? ZC_N.OP & ZC_N.RH
      || _opozn-=ZC_N.OP
      ?};
      ZC_N.next()
   !};
   ZC_N.first();
   {!
   |? {? ZC_N.NK>=_opozn
      || ZC_N.OP:=_opozn;
         _opozn:=0
      || ZC_N.OP:=ZC_N.NK;
         _opozn-=ZC_N.NK
      ?};
      ZC_N.KW:=(OS_N.POD*ZC_N.PROC/100/30)$2*(ZC_N.NK-ZC_N.OP*0.25)$2;
      ZC_N.put();
      _opozn>0 & ZC_N.next()
   !}
?};
ZC_N.cntx_pop()


\rekord
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.10]
:: OPIS: Rekord przed okienek wertowania tabeli OS_N.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::----------------------------------------------------------------------------------------------------------------------
EDIT_VAR.DT:={? OS_N.UW='T' || OS_N.NT || OS_N.NK ?};

exec('rekprzed','color','OS_N#01#')


\zasilki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Zliczenie ilosci dni oraz wartosci nieobecnosci realizowanej przez dany rachunek
::       UWAGA: Procedura korzysta z numerow rubryk!
::----------------------------------------------------------------------------------------------------------------------
ZC_N.cntx_psh();
ZC_N.index('ZC_H');

_wylicz:=
   "  _wyn:=0;
      {? (_rub:=__RUB.ref(_a))>0
      || ZC_N.prefix(RH.ref(),_rub);
         {? ZC_N.first()
         || {!
            |? {? var_pres('_b')=type_of('')
               || _wyn+={?_b='R' || ZC_N.NR || ZC_N.NK ?}
               || _wyn+=ZC_N.KW
               ?};
               ZC_N.next()
            !}
         ?}
      ?};
      _wyn
   ";

_ustal:=
   "  _wylicz:=_a;
      _rub:=__RUB.sys_rub(_b,RH.DWY);
      _wyn:=0;
      _licz:=0;
      {? _rub.first()
      || {!
         |? _dni:=_wylicz(_rub.RN,'K');
            {? _dni
            || FUNKCJE.ZK(_rub.RN,,_dni);
               _licz:=1;
               _wyn+=_wylicz(_rub.RN)
            ?};
            _rub.next()
         !};
         {? _licz
         || _wartosc:=__RUB.sys_val(_b,RH.DWY);
            {? var_pres('_wartosc')=type_of(0)
            || FUNKCJE.ZK(_wartosc,,_wyn)
            ?}
         ?}
      ?}";

: Choroba szpital 70%
_ustal(_wylicz,12212);
: Wyr.zas.chor.szpital
FUNKCJE.ZK(517,,_wylicz(517));

: Urlop macierzynski
_ustal(_wylicz,1227);
: Wyr zas.mac.
FUNKCJE.ZK(524,,_wylicz(524));

: Opieka
_ustal(_wylicz,1225);
: Wyr.zas.opiek.
FUNKCJE.ZK(530,,_wylicz(530));

_ustal(_wylicz,12211);
: Wyr zas.chor.
FUNKCJE.ZK(511,,_wylicz(511));

_ustal(_wylicz,12213);
: Wyr.zas.chor.-wyp.
FUNKCJE.ZK(513,,_wylicz(513));

_ustal(_wylicz,1222);
: Wyr swiadcz.rehab.
FUNKCJE.ZK(537,,_wylicz(537));

ZC_N.cntx_pop()


\wysw_zc_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Funkcja wyswietla realizacje nieobecnosci podczas redakcji rachunku UZ
::----------------------------------------------------------------------------------------------------------------------
{? RH.ZAS='T'
|| ZC_N.win_sel('WERH');
   exec('zas_zc','os_nieob',,1);
   ZC_N.win_sel('WEZ');
   {? {? ZC_N.first()
      || _wyn:=0;
         {!
         |? {? ZC_N.RH=RH.ref()
            || _wyn:=1;
               0
            || ZC_N.next()
            ?}
         !};
         _wyn
      ?}
   || 1
   || FUN.emsg('Nie wybrano zasiłku do rozliczenia.\nAkcja anulowana.'@);
      exec('cascadel','#table',RH);
      UZ.DRH:=1;
      0
   ?}
?}


\_OS_N_26
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2010]
:: OPIS: Przed wyswietl OS_N
::  OLD: \_OS_N_26/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('grant','os_nieob') & (BPMN.SYM_DOM='PPL' | BPMN.SYM_DOM='PKD')
|| OS_N.display()
?}


\wysw_dzas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Funkcja przed wyswietleniem pola zmiennej UZZ.DZAS
::----------------------------------------------------------------------------------------------------------------------
RH.cntx_psh();
UZZ.DZAS:=ZC_N.RH().DWY;
RH.cntx_pop();
1


\os_n_14
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Akcja Wyswietl
::----------------------------------------------------------------------------------------------------------------------
UZZ.RN:=ZC_N.R().RN;
exec('wyswietl','os_nieob');
ZC_N.display()


\os_n_30
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Akcja Wyswietl
::----------------------------------------------------------------------------------------------------------------------
exec('wyswietl','os_nieob');
ZC_N.display();
1


\wyrownanie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Obsluga akcji Dolacz wyrownanie dla tabeli ZC_N
::----------------------------------------------------------------------------------------------------------------------
{? 1+menu_txt='D'
|| ZC_N.RH:=ZC_N.KDSW:=null;
   ZC_N.ZC:=ZC.ref;
   {? exec('czy_zasilek','os_nieob',ZC_N.R().RN,ZC_N.OD)
   || ZC_N.R:=__RUB.ref(exec('nieo2wyr','lista_wyr',ZC_N.R().RN))
   || ZC_N.R:=null
   ?};
   ZC_N.KW:=ZC_N.OP:=0;
   ZC_N.WYR:='T'
|| {? ZC_N.RH<>null
   || FUN.emsg('Akcja niedostępna.'@);
      return()
   ?}
?};
{? ZC_N.WYR='T'
|| ZC_N.win_edit('REDWYR')
|| ZC_N.win_edit('RED')
?};
_lsw:=exec('lsw_params','lista_wyr');
_lsw.tryb:='ZC_N';
_fld:=exec('n_params','nieobecnosc');
params_set(
  'lsw',_lsw,
  'fld',_fld
  );
{? ZC_N.edit("exec('sprawdz','os_nieob')")
|| {? 1+menu_txt='D' || ZC_N.add || ZC_N.put ?}
?}


\wyswietl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Ustawienie odpowiedniego okienka na wyswietl tabeli ZC_N
::----------------------------------------------------------------------------------------------------------------------
{? ZC_N.WYR='T'
|| ZC_N.win_edit('REDWYR')
|| ZC_N.win_edit('RED')
?};
1


\zc_n_legenda_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [17.00]
:: OPIS: Wyświetlenie okna Legendy dla tabeli ZC_N okno WERH
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','ZC_N#01')


\sprawdz_2022
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Sprawdzenie, czy choroba pierwotna powstała przed 1.1.2022
::       Argumentem jest wskazanie na OS_N lub para wskazanie na OSOBA i data nieobecności
::   WE: _a [REFERENCE] - wskazanie na OS_N lub wskazanie na OSOBA
::       [_b [DATA] - data nieobecności]
::   WY: 0 lub 1
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
{? _=1 & var_pres('_a')=type_of(null())
|| OS_N.cntx_psh();
   OS_N.prefix();
   {? OS_N.seek(_a)
   || {? OS_N.OD<date(2022,1,1) || _ret:=1 ?};
      {? ~_ret
      || OS_N.index('OND');
         OS_N.prefix(exec('ref_firma','ustawienia'),OS_N.OSOBA);
         _exit:=0;
         {! |?
            _data:=OS_N.OD;
            {? OS_N.prev() & exec('czy_zasilek','os_nieob',OS_N.R,OS_N.OD) & _data-1=OS_N.DO
            || {? OS_N.OD<date(2022,1,1)
               || _ret:=1;
                  _exit:=1
               ?}
            || _exit:=1
            ?};
            ~_exit
         !}
      ?}
   ?};
   OS_N.cntx_pop()

|? _=2 & var_pres('_a')=type_of(null()) & var_pres('_b')=type_of(date()) & _b>#0
|| {? _b<date(2022,1,1) || _ret:=1 ?};
   {? ~_ret
   || OS_N.cntx_psh();
      OS_N.index('ONDX');
      OS_N.prefix(exec('ref_firma','ustawienia'),_a);
      {? OS_N.find_ge(_b-1) & exec('czy_zasilek','os_nieob',OS_N.R,OS_N.OD) & _b-1=OS_N.DO
      || _ret:=exec('sprawdz_2022','os_nieob',OS_N.ref())
      ?};
      OS_N.cntx_pop()
   ?}
?};
_ret

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:37 21b5fc0c0152a209172bb9fa7bb9afb50bf31ed1f7d37b503c6cb9f4bc2b5690bb9a3c21aae5209631e5cc9e512b09b70204b8f8d133b5e3f8a0343879eeb9a3ea1ea8aa514ca7eec8e99786051e90a61fe449baf1eef72c6c22ad511b3357e705c8e24cb1490fc1eb186b36de780b8110642cae2c7852371ae3c8addad81bee
