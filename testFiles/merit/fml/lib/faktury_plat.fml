:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: faktury_plat.fml
:: Utworzony: 26.03.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Obsługa płatności na dokumentach sprzedaży
::======================================================================================================================



\buffer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Zwraca obiekt nazwany - bufor tabeli FAKSPL
::   WY: obj_new()
::----------------------------------------------------------------------------------------------------------------------
exec('FAKSPL','buffer')


\akt_tz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: aktualizacja terminu zaplaty
::   WE: [_a] - akronim pola
::  OLD: \akt_tz/plat.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:=''?} || _a:='' ?};
_Tab:=cur_tab();
_czyFaks:=_Tab=FAKS;
_czyZkn:=_Tab=ZK_N;
_czyZdNag:=_Tab=ZD_NAG;
_ind:={? _czyFaks || 'FAKS' |? _czyZkn || 'ZK_N' |? _czyZdNag || 'ZD_NAG' || '' ?};
_czyFakspl:=_ind<>'';
FAKSPL.cntx_psh();
SLO.cntx_psh();
SLO.index('SL');
SLO.prefix(XINFO.SLP);
{? ~_czyFakspl
||
   {? FZ.FORMAPLA<>''
   ||
      {? SLO.find_tab(,'KOD',,':*',FZ.FORMAPLA)
      ||
         FZ.FORMAPLA:=SLO.KOD;
         FZ.PL:=SLO.ref();
         _Tab.PL:=FZ.PL
      ?}
   ?}
||
   _name:=(5+FAKSPL.name())+(ref_name(_Tab.ref())+3);
   _param:=0;
   {? ~_czyZdNag
   || _param:=BEER.SZ='S' & _Tab.PLISTA='T';
       FAKSPL.use(_name);
       FAKSPL.index(_ind);
       FAKSPL.prefix(_Tab.ref)
   ?};
   {? ~_param | (FAKSPL.first() & FAKSPL.size()=1)
   ||
      {? FZ.FORMAPLA<>''
      || {? SLO.find_tab(,'KOD',,':*',FZ.FORMAPLA)
         || FZ.FORMAPLA:=SLO.KOD;
            FZ.PL:=SLO.ref();
            FZ.TERMPLAT:=exec('term_plat','faktury_plat',_a,,_Tab.ref());
            {? _czyZdNag
            || ZD_NAG.PL:=FZ.PL;
               ZD_NAG.TZ:=FZ.TERMPLAT
            || exec('plat_one','faktury_plat',_Tab.ref())
            ?}
         || exec('plat_f3','faktury_plat');
            FZ.PL();
            FZ.TERMPLAT:=exec('term_plat','faktury_plat',_a,,_Tab.ref());
            {? _czyZdNag
            || ZD_NAG.PL:=FZ.PL;
               ZD_NAG.TZ:=FZ.TERMPLAT
            || exec('plat_one','faktury_plat',_Tab.ref())
            ?}
         ?}
      |? ~_czyZdNag &
         (_czyFaks & FAKS.T().KOR='T' & FAKSPL.first() & FUN.ask('Czy usunąć sposób płatności?'@)
          | ~_czyFaks & FAKSPL.first())
      || FZ.TERMPLAT:=date(0,0,0);
         {! |? FAKSPL.del() !}
      ?}
   ?}
?};
SLO.cntx_pop();
FAKSPL.cntx_pop();
1


\term_plat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: formula wyznacza termin platnosci
::   WE: [_a] - akronim pola
::       [_b] - czy wyswietlac msg z informacja (T/N) - domyslnie T
::       _c - FAKS.ref lub ZK_N.ref lub ZD_NAG.ref
::   WY: _tz - termin platosci
::  OLD: \term_plat/plat.fml
::----------------------------------------------------------------------------------------------------------------------
{? FZ.PL=null() || return(date(0,0,0)) ?};

_Tab:=ref_tab(_c);
_czyFaks:=_Tab=FAKS;
_czyZdNag:=_Tab=ZD_NAG;

{? _>=1 || {? type_of(_a)<>2 || _a:=''?} || _a:='' ?};
{? _>=2 || {? type_of(_b)<>2 || _b:='T'?} || _b:='T' ?};
{? _czyFaks & FAKS.T().PAR='T' || _b:='N' ?};

_dw:={? _czyFaks || FAKS.DW |? _czyZdNag || ZD_NAG.DTPREAL || ZK_N.DT ?};
_akc:={? _czyFaks || FAKS.AKC |? _czyZdNag || {? 'NAC'*ZD_NAG.STAN>0  || 'N' || 'T' ?} || ZK_N.AKC ?};
_fld_akr:={? _czyFaks || 'DW' |? _czyZdNag || 'DTPREAL' || 'DP' ?};

:: _tz - dotychczasowy termin zapłaty
_tz:=FZ.TERMPLAT;
_ldni:=#exec('FindInSet','#table','ZR_SLO','SLO_NR',2,FZ.PL,"ZR_SLO.WAR",,,'');
:: _tn - nowy termin zapłaty
_tn:=
   {? _a='Y'
   || _tz
   || {? _dw=date(0,0,0) || date(ST.AR,ST.AM,1) || _dw ?}+_ldni
   ?};
::{? _czyFaks & _tn<FAKS.D || _tn:=FAKS.D ?};

{? exec('get','#params',300202,2)='T'
||
:: przesunięcie terminu płatności zgodnie z kalendarzem
   {!
   |? exec('spr_kal','faktury_plat',_tn,~('XY'*_a))=1
   |!
      _tn+=1
   !}
?};

_txt:=
   {? {? _a<>'' || _a || cur_afld() ?}=_fld_akr
   || {? _czyZdNag
      || 'Zmieniono datę realizacji'@
      || 'Zmieniono datę wystawienia'@
      ?}
   || 'Zmieniono liczbę dni płatności na '@+form(_ldni,,0,'99')
   ?};
{? #_dw<>0 & _akc<>'T'
   &  (
      #FZ.TERMPLAT=0
      |  (
         FZ.TERMPLAT<>_tn
         &
         {? _a='X' || 1
         |? _b='T' || FUN.ask(_txt+'.\nCzy zaktualizować termin płatności?'@)
         || 1
         ?}
         )
      )
||
:: aktualizacja terminu zapłaty
   _tz:=_tn
?};
_tz


\plat_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula dodaje, aktualizuje platnosc jednorazowa
::   WE: _a - FAKS.ref() lub ZK_N.ref()
::  OLD: \plat_one/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=ref_tab(_a);
_czyFaks:=_Tab=FAKS;
VAR_DEL.delete('__PLAT');
__PLAT:=_Tab;
_ind:={? _czyFaks || 'FAKS' || 'ZK_N' ?};
_name:=(5+FAKSPL.name())+(ref_name(_Tab.ref())+3);

FAKSPL.cntx_psh();
FAKSPL.use(_name);
{? _Tab.AKC<>'T'
||
   FAKSPL.index(_ind);
   FAKSPL.prefix(_Tab.ref);
   {? FAKSPL.first & FAKSPL.next=0
   ||
      _Tab.PL:=FZ.PL;
      _Tab.TZ:=FZ.TERMPLAT;
      FAKSPL.PL:=FZ.PL;
      FAKSPL.TERMPLAT:=FZ.TERMPLAT;
      FAKSPL.PROCR:=100;
      FAKSPL.PROCW:=100;
      FAKSPL.WAR:=0;
      FAKSPL.R:='N';
      FAKSPL.put
   ||
      _Tab.PL:=FZ.PL;
      _Tab.TZ:=FZ.TERMPLAT;
      FAKSPL.blank;
      {? _czyFaks || FAKSPL.FAKS:=FAKS.ref() || FAKSPL.ZK_N:=ZK_N.ref() ?};
      FAKSPL.PL:=FZ.PL;
      FAKSPL.TERMPLAT:=FZ.TERMPLAT;
      FAKSPL.PROCR:=100;
      FAKSPL.PROCW:=100;
      FAKSPL.WAR:=0;
      FAKSPL.R:='N';
      FAKSPL.add
   ?}
?};
FAKSPL.cntx_pop();
1


\plat_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula na f3 dla formy platnosci
::  OLD: \plat_f3/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_sel:=0;
_Tab:=cur_tab();
_czyFaks:=_Tab=FAKS;
_czyZkn:=_Tab=ZK_N;
_ind:={? _czyFaks || 'FAKS' |? _czyZkn || 'ZK_N' || '' ?};
_czyFakspl:=_ind<>'';
_czyTermplat:=var_pres('TERMPLAT',_Tab)=type_of(date());
FZ.BRUTTO:=exec('brutto','faktury_plat',_Tab.ref());
FZ.PLAT_SUM:=0;
SLO.cntx_psh();
{? _czyFakspl
||
   VAR_DEL.delete('__PLAT');
   __PLAT:=_Tab;
   FAKSPL.cntx_psh();
   _name:=(5+FAKSPL.name())+(ref_name(_Tab.ref())+3);
   FAKSPL.use(_name);
   FAKSPL.index(_ind);
   FAKSPL.prefix(_Tab.ref());
   FAKSPL.win_sel('SLO')
?};
{? BEER.SZ='S'
|| SLO.win_sel('SPR_SEL');
   SLO.actions_grayed('SPR_SEL',{? _czyFakspl || '' || 'L:L' ?})
|| SLO.win_sel('ONE_SEL')
?};
exec('czytaj','#stalesys',,XINFO,'SLP');
XINFO.SLP();
exec('slu_okn','slo_slu');
SLO.index('SL');
SLO.prefix(XINFO.SLP);
SLO.find_tab(0,'KOD',,':*',FZ.FORMAPLA);
_var:=obj_new('ACTION');
_var.ACTION:='';
params_set('var',_var);
SLO.win_dict('SLO_FO');
SLO.actions('SLO_FO','IW');
_plista:={? _czyFakspl || _Tab.PLISTA || 'N' ?};
_loop:=1;
{!
|? _loop
|!
   _loop:=0;
   {? _plista='N'
   ||
      SLO.hdr_sel();
      SLO.hdr_sel('Formy płatności'@);
      {? SLO.select(,1,3)
      ||
         {? _var.ACTION='plista'
         ||
            _plista:='T';
            _loop:=1
         ||
            FZ.FORMAPLA:=SLO.KOD;
            FZ.PL:=SLO.ref();
            {? _czyFakspl
            ||
               _Tab.PLISTA:='N';
               exec('del_plat','faktury_plat',_Tab.ref());
               exec('plat_one','faktury_plat',_Tab.ref())
            ?};
            _Tab.PL:=SLO.ref();
            {? _czyTermplat || _Tab.TZ:=FZ.TERMPLAT ?};
            _sel:=1
         ?}
      ?}
   ||
      _Tab.PLISTA:='T';
      FAKSPL.win_patt('SZUK');
      FAKSPL.hdr_sel({? +_Tab.SYM || ': '+_Tab.SYM || '' ?});
      FAKSPL.hdr_edit({? +_Tab.SYM || ': '+_Tab.SYM || '' ?});
      {? FAKSPL.select()
      || {? _var.ACTION='formplat'
         ||
            _plista:='N';
            _loop:=1
         ?}
      ?};
      FAKSPL.hdr_sel();
      FAKSPL.hdr_edit();
      exec('plat_sel','faktury_plat',_Tab)
   ?}
!};
SLO.actions('SLO_FO','');
SLO.cntx_pop();
{? _czyFakspl
||
   FAKSPL.cntx_pop()
?};
{? _sel=1 || FZ.FORMAPLA || 0 ?}


\spr_kal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [2008]
:: OPIS: sprawdzenie kalendarz dla  terminu platnosci
::   WE: _a - dzien
::       _b - czy komunikat 1-tak(domyslnie) 0-nie
::       [_c] - 0-soboty wg parametr 300203, 1-soboty zawsze pomijane
::   WY: 0/1/-1
::  OLD: \spr_kal/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2  || {? type_of(_b)<>1 || _b:=1 ?}  || _b:=1  ?};
{? var_pres('_c')<>type_of(0) || _c:=0 ?};

_przes:=0;
_rok:=_a~1;
_data:=$_a;
_dzien:=(((_a$7)*',')-1)+(_a$7);
_kalnaz:=exec('get_par','#parametr',8);
_sobota:=_c | exec('get','#params',300203,2)='T';
KAL_WZOR.index('KAL_WZOR');
KAL_WZOR.prefix(exec('ref_firma','ustawienia'),_kalnaz);
{? KAL_WZOR.first()
||
   _kalwzor:=KAL_WZOR.ref();
   _ndx:=KAL_OPIS.ndx_tmp('',0,'WZORZEC',,0,'ROK',,0,'TYP',,0,'DATA',,0,'DZIEŃ',,0);
   KAL_OPIS.clear();
   KAL_OPIS.index(_ndx);
   KAL_OPIS.prefix(_kalwzor,_rok);
   {? KAL_OPIS.first()
   ||
      KAL_OPIS.clear();
      KAL_OPIS.index(_ndx);
      {? _sobota=1 & _dzien='sobota'
      ||
         KAL_OPIS.prefix(_kalwzor,_rok,'W',$_rok,'sobota');
         {? KAL_OPIS.first() || _przes:=1 ?}
      |? _dzien='niedziela'
      ||
         KAL_OPIS.prefix(_kalwzor,_rok,'S',$_rok,'niedziela');
         {? KAL_OPIS.first() || _przes:=1 ?}
      ||
         KAL_OPIS.prefix(_kalwzor,_rok,'S',_data);
         {? KAL_OPIS.first() || _przes:=1 ?}
      ?}
   ||
      _przes:=-1;
      {? _b || FUN.info('Brak kalendarza standardowego na rok %1.'@[$_rok]) ?}
   ?};
   KAL_OPIS.ndx_drop(_ndx)
||
   _przes:=-1;
   {? _b || FUN.info('Nie zdefiniowano kalendarza standardowego w systemie.'@) ?}
?};
_przes


\brutto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wyznacza wartosc brutto dla roznych typow dokumentow - FAKS w buforze
::   WE: _a - TAB.ref()
::       _b - 0-domyślne działanie, 1-wartość do kontroli split payment
::       _c - 0/1 - jeśli _b=1 zwracać wartości walutowe
::  OLD: \brutto/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_b:={? var_pres('_b')=type_of(0) || _b || 0 ?};
_c:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_Tab:=ref_tab(_a);
_czyFaks:=_Tab=FAKS;
_brutto:=0;
{? _czyFaks
||
   {? _b & FAKS.WAL<>FAKS.NWAL
   ||
      FAKSV.cntx_psh();
      FAKSV.index('FF_SV');
      FAKSV.prefix('',$FAKS.ref());
      _loop:=FAKSV.first();
      {!
      |? _loop
      |!
         _brutto+=
            {? _c
            || {? FAKS.WHERE='L' || FAKSV.WW_Z |? FAKSV.WW_R || FAKSV.WW_R || FAKSV.WW ?}
            || {? FAKS.WHERE='L' || FAKSV.WB_Z |? FAKSV.WB_R || FAKSV.WB_R || FAKSV.WB ?}
            ?};
         _loop:=FAKSV.next()
      !};
      FAKSV.cntx_pop()

   |? FAKS.WHERE='L'
   ||
      _brutto:=FAKS.KW_ZAL
   ||
      {? INFO.NAROD=FAKS.WAL
      || _brutto:={? FAKS.NDVAT='N' || FAKS.BRUTTO || FAKS.NETTO ?}
      || _brutto:={? FAKS.NDVAT='N' || FAKS.BRTW || FAKS.NETW ?}
      ?};
      _brutto-=FAKS.KW_ZAL;
      {? exec('czy_end','faktury_zalicz')
      ||
         exec('faks_vat','faktury_vat',0);
         {? INFO.NAROD=FAKS.WAL
         || _brutto:=SUM.BRUTTO-SUM.WB_Z
         || _brutto:=SUM.WAR-SUM.WW_Z
         ?}
      ?}
   ?}
||
   _brutto:={? exec('czy_nwal','ustawienia',ZK_N.WAL) || ZK_N.BRUTTO || ZK_N.BRUTTOW ?}
?};
{? FAKS.CASHBACK>0
||
   _brutto:=_brutto+FAKS.CASHBACK
?};
_brutto


\plat_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula przed wyswieleniem formy platnosci
::   WE: FAKS lub ZK_N
::  OLD: \plat_sel/plat.fml
::----------------------------------------------------------------------------------------------------------------------
:: _Tab = FAKS lub ZK_N
_tab:=
   {? var_pres('_a')=type_of(FAKS) || _a
   |? var_pres('__fz_formapla_tab')=type_of(FAKS) || __fz_formapla_tab
   || {? app_info('web_sesid')<>'' || FAKS || cur_tab(1,1) ?}
   ?};
_Tab:={? _tab=FAP || FAKS || _tab ?};

_wynik:='';

_czyFaks:=_Tab=FAKS;
_czyZkn:=_Tab=ZK_N;
_ind:={? _czyFaks || 'FAKS' |? _czyZkn || 'ZK_N' || '' ?};
{? _ind=''
||
:: obsługa pozostałych tabel
   FZ.FORMAPLA:=_Tab.PL().KOD

|? ($_Tab.ref())<>''
||
:: obsługa tabel: FAKS, ZK_N
   {? app_info('web_sesid')<>'' & _ & _a=ZK_N
   || _name:='fakpl'+(ref_name(_Tab.ref())+3)
   || _name:=(5+FAKSPL.name())+(ref_name(_Tab.ref())+3)
   ?};
   FAKSPL.cntx_psh();
   FAKSPL.use(_name);
   FAKSPL.index(_ind);
   FAKSPL.prefix(_Tab.ref);
   {? ~FAKSPL.first()
   ||
:: brak płatności
      FZ.FORMAPLA:=''

   |? ~FAKSPL.next()
   ||
:: jedna płatność
      FAKSPL.first();
      _Tab.PL:=FAKSPL.PL;
      _Tab.TZ:=FAKSPL.TERMPLAT;
      FZ.FORMAPLA:=FAKSPL.PL().KOD;
      FZ.TERMPLAT:=FAKSPL.TERMPLAT
   ||
:: wiele płatności
      FAKSPL.index('TERM');
      FAKSPL.prefix(_Tab.ref);
      FAKSPL.last();
      _Tab.PL:=FAKSPL.PL;
      _Tab.TZ:=FZ.TERMPLAT:=FAKSPL.TERMPLAT;
      FZ.FORMAPLA:='<--F3-->'
   ?};
   FAKSPL.cntx_pop()
?};
_wynik


\bl_plat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: Zwraca BEER.PL
::   WY: BEER.PL
::  OLD: \bl_plat/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.PL


\selfaks_plat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula przed wyswieleniem formy platnosci FAKS.PL w okienku szukania
::  OLD: \selfaks_plat/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_wynik:='';
_param:=BEER.SZ='S' & FAKS.PLISTA='T' & FAKS.PL=null;
{? _param || _wynik:=exec('findfnv','#color') ?};
_wynik


\beffaks_plat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula przed redakcja formy platnosci FAKS.PL w okienku szukania
::  OLD: \beffaks_plat/plat.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~(BEER.SZ='S' & FAKS.PLISTA='T') | cur_tab.name()='fpaczki'
|| exec('wz_sppl','wzorce')='' & XINFO.SLP<>null
|| 0
?}


\a_e_fspl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: okresla termin platnosci
::   WY: 1
::  OLD: \a_e_fspl/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? FZ.PL<>FAKS.PL
||
   _ldni:=#exec('FindInSet','#table','ZR_SLO','SLO_NR',2,FAKS.PL,"ZR_SLO.WAR",,,'');
   _tz:=FAKS.DW+_ldni;
   _czy_gotow:=exec('get_par','slo_slu',FAKS.PL,1);
   {? exec('get','#params',300202,2)='T' & _czy_gotow='N'
   ||
      {! |? exec('spr_kal','faktury_plat',_tz)=1
      |! _tz+=1
      !}
   ?};
   FAKS.TZ:=_tz
?};
1


\bl_term
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Zwraca BEER.TERM
::   WY: BEER.TERM
::  OLD: \bl_term/plat.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.TERM


\selfaks_term
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula przed wyswieleniem formy platnosci FAKS.TZ w okienku szukania
::  OLD: \selfaks_term/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_wynik:='';
_param:=BEER.SZ='S' & FAKS.PLISTA='T' & FAKS.PL=null;
{? _param || _wynik:=exec('findfnv','#color') ?};
_wynik


\beffaks_term
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula przed redakcja formy platnosci FAKS.TZ w okienku szukania
::  OLD: \beffaks_term/plat.fml
::----------------------------------------------------------------------------------------------------------------------
~(BEER.SZ='S' & FAKS.PLISTA='T')


\plat_przel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula przelicza FAKSPL w dziedzinie faktury (rozpisuje wartosc nie rozisana recznie)
::   WE:  FAKS.ref
::  OLD: \plat_przel/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=ref_tab(_a);
_czyFaks:=_Tab=FAKS;
_ind:={? _czyFaks || 'FAKS' || 'ZK_N' ?};
_name:=(5+FAKSPL.name())+(ref_name(_Tab.ref())+3);

_sumar:=0;
_roznica:=0;
_ilewyl:=0;

_faks_brt:=exec('brutto','faktury_plat',_Tab.ref());

FAKSPL.cntx_psh();
FAKSPL.use(_name);
FAKSPL.index(_ind);
FAKSPL.prefix(_a,'T');
{? FAKSPL.first()
|| {!
   |?
      {? FAKSPL.WAR<>0 & _faks_brt
      || FAKSPL.PROCR:=(FAKSPL.WAR/_faks_brt)*100$2;
         FAKSPL.PROCW:=(FAKSPL.WAR/_faks_brt)*100$2
      ?};
      {? FAKSPL.PROCR<>0 & FAKSPL.WAR=0
      || FAKSPL.WAR:=_faks_brt*(FAKSPL.PROCR/100)$2;
         FAKSPL.PROCW:=FAKSPL.PROCR
      ?};
      FAKSPL.put();
      _sumar+=FAKSPL.WAR;
      FAKSPL.next()
   !}
?};
:: przeliczenie pozycji nieredagowanych recznie
_roznica:=_faks_brt-_sumar;
FAKSPL.prefix(_a,'N');
_ilewyl:=FAKSPL.size();
_doklad:=0;
{? FAKSPL.first()
|| _doklad:=(_faks_brt-(_ilewyl*(_roznica/_ilewyl$2)))-_sumar;
   {!
   |?
      FAKSPL.WAR:=_roznica/_ilewyl$2;
      FAKSPL.PROCR:={? _faks_brt>0 || (FAKSPL.WAR/_faks_brt)*100$2 || 100 ?};
      FAKSPL.PROCW:={? _faks_brt>0 || (FAKSPL.WAR/_faks_brt)*100$2 || 100 ?};
      FAKSPL.put();
      FAKSPL.next()
   !};
:: doliczenie do ostatniej pozycji roznicy wynikajacej z dokladnosci
   {? _doklad<>0
   || FAKSPL.WAR:=FAKSPL.WAR+_doklad;
      FAKSPL.put()
   ?}
?};
FAKSPL.cntx_pop();
1


\check_plat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula kontroluje czy istnieje prawidlowo okreslona platnosc
::   WE: _a - FAKS.ref
::   WY: 0 - platnosci nie istnieja
::   WY: 1 - nie okreslono formy plat
::   WY: 2 - nie okreslono daty plat lub jest ona bledna
::   WY: 4 - okreslono platnosc
::  OLD: \check_plat/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=ref_tab(_a);
_czyFaks:=_Tab=FAKS;
_ind:={? _czyFaks || 'FAKS' || 'ZK_N' ?};
_name:=(5+FAKSPL.name())+(ref_name(_Tab.ref())+3);
_dw:={? _czyFaks || FAKS.DW || ZK_N.DP ?};
_wynik:=4;
FAKSPL.cntx_psh();
FAKSPL.use(_name);
FAKSPL.index(_ind);
FAKSPL.prefix(_a);
{? FAKSPL.first
||
   TYPYSP.cntx_psh();
   {? _czyFaks & FAKS.SYMF<>'' & FAKS.T().PAR='N'
   || _dw:=exec('FindAndGet','#table',FAKS,FAKS.SYMF,,"FAKS.DW",FAKS.DW)
   ?};
   TYPYSP.cntx_pop();
   {? FAKSPL.PL=null
   || _wynik:=1
   |? #FAKSPL.TERMPLAT=0
      | exec('get','#params',300301)='T' & FAKSPL.TERMPLAT<_dw
   || _wynik:=2
   ?}
|| _wynik:=0
?};
FAKSPL.cntx_pop();
_wynik


\term_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: przed redakcja FZ.TERMPLAT
::  OLD: \term_pr/plat.fml
::----------------------------------------------------------------------------------------------------------------------
FZ.FORMAPLA<>'<--F3-->'
& (cur_tab()<>FAKS | FAKS.WHERE<>'N')


\del_plat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula usuwa powiazane platnosci
::   WE: _a - ref tabeli FAKS lub ZK_N
::       [_b] - ref nowego ZK_N-a domyślnie brak
::   WY: 0 - platnosci usunieto
::   WY: 1 - nie udalo sie usunac
::  OLD: \del_plat/plat.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<>type_of(null()) || _b:=null() ?};

_Tab:=ref_tab(_a);
_czyFaks:=_Tab=FAKS;
_ind:={? _czyFaks || 'FAKS' || 'ZK_N' ?};
_name:=(5+FAKSPL.name())+(ref_name(_Tab.ref())+3);
_wynik:=1;
FAKSPL.cntx_psh();
FAKSPL.use(_name);
FAKSPL.index(_ind);
FAKSPL.prefix(_a);
{? FAKSPL.first() || {! |? _wynik:=FAKSPL.del !} ?};
{? _ind='ZK_N' & ref_name(_b)<>''
|| _tab:=sql('select FAKSPL.REFERENCE REF from @FAKSPL where FAKSPL.ZK_N=:_a',_a);
   _tab.clear();
   {? _tab.first()
   || {!
      |? FAKSPL.use(form(8+_tab.REF));
         FAKSPL.prefix();
         {? FAKSPL.seek(_tab.REF)
         || FAKSPL.ZK_N:=_b;
            FAKSPL.put(1)
         ?};
         _tab.next()
      !}
   ?};
   obj_del(_tab)
?};
FAKSPL.cntx_pop();
_wynik


\plat_default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula ustawia wartosci domylne po wybraniu kontrahenta
::   WE:  _a  - KH.ref
::       [_b] - sposob platnosci (jezeli podany TO nie szuka innego)
::  OLD: \plat_default/plat.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>7 || _b:=null ?} || _b:=null ?};

_Tab:=FAKS;
_czyFaks:=_Tab=FAKS;
_ind:={? _czyFaks || 'FAKS' || 'ZK_N' ?};
VAR_DEL.delete('__PLAT');
__PLAT:=_Tab;

_platnosc:=null;
{? _b<>null || _platnosc:=_b ?};
{? _platnosc=null & _a<>null
||
   _platnosc:=exec('sp_plat','kontrahent',_a)
?};

FZ.FORMAPLA:='';
FZ.PL:=null;
FZ.TERMPLAT:=date(0,0,0);

FAKSPL.cntx_psh();
FAKSPL.use('%1%2'[gsub(FAKSPL.name(1),'?',''),_Tab.name()+3]);
FAKSPL.index(_ind);
FAKSPL.prefix(_Tab.ref);
{? _Tab.AKC<>'T' & _platnosc<>null
||
   {? ~FAKSPL.first()
   ||
      FAKSPL.blank;
      {? _czyFaks || FAKSPL.FAKS:=FAKS.ref() || FAKSPL.ZK_N:=ZK_N.ref() ?};
      FAKSPL.PL:=_platnosc;
      FZ.FORMAPLA:=FAKSPL.PL().KOD;
      FZ.PL:=FAKSPL.PL;
      FAKSPL.TERMPLAT:=exec('term_plat','faktury_plat','X',,_Tab.ref());
      FZ.TERMPLAT:=FAKSPL.TERMPLAT;
      FAKSPL.PROCR:=100;
      FAKSPL.PROCW:=100;
      FAKSPL.WAR:=0;
      FAKSPL.R:='N';
      {? FAKSPL.add
      ||
         _Tab.PL:=FZ.PL;
         _Tab.TZ:=FZ.TERMPLAT
      ?}
   ?}
?};
FAKSPL.cntx_pop();
1


\plat_obieg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: formula dodaje, aktualizuje platnosc podczas rejestracji z realizacji zamówienia
::   WE: _a - FAKS.ref
::       _b - SLO.ref
::       _c - data od której liczone dni
::       _d - termin platnosci
::  OLD: \plat_obieg/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_platnosc:=_b;
VAR_DEL.delete('__PLAT');
__PLAT:=FAKS;

FAKSPL.cntx_psh();
FAKS.cntx_psh();
FAKS.prefix();
{? FAKS.seek(_a) & FAKS.AKC<>'T'
|| {? _platnosc<>null
   || FZ.TERMPLAT:=_d;
      FAKSPL.index('FAKS');
      FAKSPL.prefix(_a);
      {? FAKSPL.first()
      || FAKS.PL:=_platnosc;
         FAKS.TZ:=FZ.TERMPLAT;
         FAKSPL.PL:=_platnosc;
         FAKSPL.TERMPLAT:=FZ.TERMPLAT;
         FAKSPL.PROCR:=100;
         FAKSPL.PROCW:=100;
         FAKSPL.WAR:=0;
         FAKSPL.R:='N';
         FAKSPL.put
      || FAKS.PL:=_platnosc;
         FAKS.TZ:=FZ.TERMPLAT;
         FAKSPL.blank;
         FAKSPL.FAKS:=_a;
         FAKSPL.PL:=_platnosc;
         FAKSPL.TERMPLAT:=FZ.TERMPLAT;
         FAKSPL.PROCR:=100;
         FAKSPL.PROCW:=100;
         FAKSPL.WAR:=0;
         FAKSPL.R:='N';
         FAKSPL.add
      ?}
   || FAKS.PL:=_platnosc;
      FAKS.TZ:=_d;
      FAKS.put
   ?}
?};
FAKS.cntx_pop();
FAKSPL.cntx_pop();
1


\pr_plat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcja form platnosci - dla rozszerzonych dziala jak na F3
::  OLD: \pr_plat/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=cur_tab();
{? _Tab=FAKS & FAKS.WHERE='N' || return(0) ?};
FZ.FORMAPLB:=FZ.FORMAPLA;
_param:=BEER.SZ='S' & var_pres('PLISTA',_Tab)=type_of('') & _Tab.PLISTA='T';
{? ~_param
|| 1
|| exec('plat_f3','faktury_plat');
   1
?}


\plat_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula po dla formy platnosci
::  OLD: \plat_po/plat.fml
::----------------------------------------------------------------------------------------------------------------------
{? FZ.FORMAPLB<>FZ.FORMAPLA
||
   exec('akt_tz','faktury_plat')
::   exec('taz_sd_set','ceny');
::   _kh_rab:=exec('sp_plat','kontrahent',FAKS.KH,1);
::   _zk_rab:=exec('zk_rab','zk2',FAKS.ref);
::   FAKS.RAB:={? _zk_rab[2] || _zk_rab[2] |? _kh_rab || _kh_rab || 0 ?};
::   {? TAZ.RAB_N_BE=0 & _zk_rab[2]=0 || TAZ.RAB_N_BE:=FAKS.RAB ?}
?};
1


\term_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula przed wyswieleniem terminu platnosci
::   WE: _a-FAKS.ref lub ZK_N.ref
::  OLD: \term_sel/plat.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(FAKS)
|| _Tab:=_a
|? var_pres('_a')=type_of(null())
|| _Tab:=ref_tab(_a)
|| return(1)
?};
{? var_pres('_Tab')=type_of(FAKS)
|| {? _Tab=ZD_NAG
   || FZ.TERMPLAT:=ZD_NAG.TZ
   || _czyFaks:=_Tab=FAKS | _Tab=FAP;
      _ind:={? _czyFaks || 'FAKS' || 'ZK_N' ?};
      _ref:={? _czyFaks || FAKS.ref() || ZK_N.ref() ?};
      {? $_ref<>''
      || {? app_info('web_sesid')<>'' & _ & _Tab=ZK_N
         || _name:='fakpl'+(ZK_N.name()+3)
         || _name:=(5+FAKSPL.name())+(ref_name(_Tab.ref())+3)
         ?};

         {? FZ.FORMAPLA<>'<--F3-->'
         ||
            FAKSPL.cntx_psh();
            FAKSPL.use(_name);
            FAKSPL.index(_ind);
            FAKSPL.prefix(_ref);
            _l:=FAKSPL.size();
            {? _l=0
            || FZ.TERMPLAT:=date(0,0,0)
            |? _l=1
            || FAKSPL.first();
               FZ.TERMPLAT:=FAKSPL.TERMPLAT
            || FZ.TERMPLAT:=date(0,0,0)
            ?};
            FAKSPL.cntx_pop()
         ?}
      ?}
   ?}
?};
1


\term_por
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula po redakcji terminu platnosci
::   WE: [_a] - uchwyt do tabeli FAKS.ref() lub ZK_N.ref()
::       [_b] - 0/1 - edi
::  OLD: \term_por/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:={? var_pres('_a')=type_of(null()) || ref_tab(_a) || cur_tab() ?};
_edi:={? var_pres('_b')=type_of(0) || _b || 0 ?};

{? _Tab=ZD_NAG
|| ZD_NAG.TZ:=FZ.TERMPLAT;
   return(1)
|? _Tab<>FAKS & _Tab<>ZK_N
|| return()
?};

_czyFaks:=_Tab=FAKS;
_ind:={? _czyFaks || 'FAKS' || 'ZK_N' ?};
_name:=(5+FAKSPL.name())+(ref_name(_Tab.ref())+3);

TYPYSP.cntx_psh();
_dw:={? _czyFaks || FAKS.DW || ZK_N.DP ?};
_txt:='Termin płatności wcześniejszy od daty wystawienia dokumentu.';
{? _czyFaks & FAKS.SYMF<>'' & FAKS.T().PAR='N'
||
   _dw:=exec('FindAndGet','#table',FAKS,FAKS.SYMF,,"FAKS.DW",FAKS.DW);
   _txt:='Termin płatności wcześniejszy od daty wystawienia paragonu.'
?};
TYPYSP.cntx_pop();
{? exec('get','#params',300301)='T'
   & FZ.TERMPLAT<_dw
   & (_czyFaks & FAKS.T().KOR<>'T' | ~_czyFaks & FZ.TERMPLAT<>date(0,0,0))
   & FZ.FORMAPLA<>'<--F3-->'
||
   {? _edi
   || exec('add_kom','#message',_txt,4,{? FAKS.ID='' || FAKS.SYM || FAKS.ID ?})
   || FUN.info(_txt)
   ?};
   1
||
   FAKSPL.cntx_psh();
   FAKSPL.use(_name);
   {? _Tab.AKC<>'T' & _Tab.PLISTA<>'T'
   ||
      {? FZ.FORMAPLA<>'' |  #FZ.TERMPLAT<>0
      ||
         FAKSPL.index(_ind);
         FAKSPL.prefix(_Tab.ref);
         {? FAKSPL.first
         ||
            FAKSPL.TERMPLAT:=FZ.TERMPLAT;
            _Tab.TZ:=FZ.TERMPLAT;
            FAKSPL.put
         ||
            FAKSPL.blank;
            {? _czyFaks || FAKSPL.FAKS:=FAKS.ref() || FAKSPL.ZK_N:=ZK_N.ref() ?};
            {? FZ.FORMAPLA<>''
            ||
               FAKSPL.PL:=SLO.ref();
               _Tab.PL:=SLO.ref
            ||
               FAKSPL.PL:=null;
               _Tab.PL:=null
            ?};
            FAKSPL.TERMPLAT:=FZ.TERMPLAT;
            _Tab.TZ:=FZ.TERMPLAT;
            FAKSPL.PROCR:=100;
            FAKSPL.PROCW:=100;
            FAKSPL.WAR:=0;
            FAKSPL.R:='N';
            FAKSPL.add
         ?}

      |? #FZ.TERMPLAT=0
      ||
         _Tab.TZ:=date(0,0,0)
      ?}
   |? FAKS.AKC<>'T' & FAKS.PLISTA='T' & #FZ.TERMPLAT<>0 & FZ.FORMAPLA<>'<--F3-->'
   ||
      FAKSPL.index(_ind);
      FAKSPL.prefix(_Tab.ref);
      {? FAKSPL.first
      ||
         FAKSPL.TERMPLAT:=FZ.TERMPLAT;
         _Tab.TZ:=FZ.TERMPLAT;
         FAKSPL.put
      ||
         FAKSPL.blank;
         {? _czyFaks || FAKSPL.FAKS:=FAKS.ref() || FAKSPL.ZK_N:=ZK_N.ref() ?};
         {? FZ.FORMAPLA<>''
         ||
            FAKSPL.PL:=SLO.ref();
            _Tab.PL:=SLO.ref
         ||
            FAKSPL.PL:=null;
            _Tab.PL:=null
         ?};
         FAKSPL.TERMPLAT:=FZ.TERMPLAT;
         _Tab.TZ:=FZ.TERMPLAT;
         FAKSPL.PROCR:=100;
         FAKSPL.PROCW:=100;
         FAKSPL.WAR:=0;
         FAKSPL.R:='N';
         FAKSPL.add
      ?}
   ?};
   FAKSPL.cntx_pop();
   1
?}


\faksplbl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula na blank FAKSPL.FAKS
::  OLD: \faksplbl/plat.fml
::----------------------------------------------------------------------------------------------------------------------
{? __PLAT=FAKS || FAKS.ref || null() ?}


\plred_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula przed redakcja FAKSPL.PL
::  OLD: \plred_b/plat.fml
::----------------------------------------------------------------------------------------------------------------------
FZ.PL:=FAKSPL.PL;
SLO.win_sel('ONE'); SLO.win_dict('ONE');
XINFO.SLP<>null


\plred_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula po redakcji FAKSPL.PL
::  OLD: \plred_a/plat.fml
::----------------------------------------------------------------------------------------------------------------------
{? FZ.PL<>FAKSPL.PL & FAKSPL.PL<>null
|| FZ.TERMPLAT:=FAKSPL.TERMPLAT:=exec('term_plat','faktury_plat',,,__PLAT.ref())
?};
1


\procr_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula po redakcji FAKSPL.PROCR
::  OLD: \procr_a/plat.fml
::----------------------------------------------------------------------------------------------------------------------
1


\plat_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula przed wyswietleniem FZ.PLAT_KOM
::  OLD: \plat_kom/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=__PLAT;
_czyFaks:=_Tab=FAKS;
{? _Tab.BRUTTO=0
|| FZ.PLAT_KOM:='Nieokreślona wartość dokumentu.'@
|? FZ.PLAT_SUM<>exec('brutto','faktury_plat',_Tab.ref())
||
   {? _czyFaks & FAKS.WHERE='L'
   ||
      FZ.PLAT_KOM:='Faktura zaliczkowa.'@
   ||
      {? _czyFaks & exec('czy_end','faktury_zalicz')
      || FZ.PLAT_KOM:='Faktura rozliczająca zaliczki.'@
      || FZ.PLAT_KOM:='Różnica wartości płatności i dokumentu.'@
      ?}
   ?}
|? FZ.PLAT_SUM=0
|| FZ.PLAT_KOM:='Nie określono płatności.'@
|? FZ.PLAT_SUM=exec('brutto','faktury_plat',_Tab.ref())
|| FZ.PLAT_KOM:='Wartość rozpisana prawidłowo.'@
?};
1


\platdolb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula przed dolacz FAKSPL
::  OLD: \platdolb/plat.fml
::----------------------------------------------------------------------------------------------------------------------
FZ.PLAT_POP:='N';
FZ.TERMPLAT:=date(0,0,0);
1


\platdola
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula po dolacz FAKSPL
::  OLD: \platdola/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=__PLAT;
{? FAKSPL.WAR<>0 | FAKSPL.PROCR<>0
|| FAKSPL.R:='T';
   FAKSPL.put
?};
exec('pla_sum','faktury_plat',_Tab.ref,1);
{? var_press('__FAKSPL')>0 & __FAKSPL || exec('plat_sel','faktury_plat',_Tab); _Tab.put() ?};
1


\pla_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula oblicza podsumowanie platnosci
::   WE: _a = FAKS.ref
::       _b = 1 - suma wartosci
::       _b = 2 - suma procent recznie wpisanych
::  OLD: \pla_sum/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=ref_tab(_a);
_czyFaks:=_Tab=FAKS;
_ind:={? _czyFaks || 'FAKS' || 'ZK_N' ?};
_name:=(5+FAKSPL.name())+(ref_name(_Tab.ref())+3);
{? _Tab.AKC<>'T' || exec('plat_przel','faktury_plat',_a) ?};
_suma:=0;
_sumapr:=0;
FAKSPL.cntx_psh();
FAKSPL.use(_name);
FAKSPL.index(_ind);
FAKSPL.prefix(_a);
{? FAKSPL.first()
||
   {!
   |?
      _suma+=FAKSPL.WAR;
      _sumapr+=FAKSPL.PROCR;
      FAKSPL.next
   !};
   FZ.PLAT_SUM:=_suma
||
   FZ.PLAT_SUM:=_suma
?};
FAKSPL.cntx_pop();
{? _b=2
||
   _suma:=_sumapr
?};
FZ.BRUTTO:=exec('brutto','faktury_plat',_Tab.ref());
_suma


\platpopb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula przed popraw FAKSPL
::  OLD: \platpopb/plat.fml
::----------------------------------------------------------------------------------------------------------------------
FZ.PLAT_POP:='T';
FAKSPL.get;
FZ.PLAT_WAR:=FAKSPL.WAR;
FZ.PLAT_PRO:=FAKSPL.PROCR;
FZ.PL:=FAKSPL.PL;
1


\platpopa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula po popraw FAKSPL
::  OLD: \platpopa/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=__PLAT;
{? FZ.PLAT_WAR<>FAKSPL.WAR | FZ.PLAT_PRO<>FAKSPL.PROCR
|| FAKSPL.R:='T';
   FAKSPL.put
?};
exec('pla_sum','faktury_plat',_Tab.ref,1);
{? var_press('__FAKSPL')>0 & __FAKSPL || exec('plat_sel','faktury_plat',_Tab); _Tab.put() ?};
1


\platusua
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula po usun FAKSPL
::  OLD: \platusua/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=__PLAT;
exec('pla_sum','faktury_plat',_Tab.ref,1);
{? var_press('__FAKSPL')>0 & __FAKSPL || exec('plat_sel','faktury_plat',_Tab); _Tab.put() ?};
1


\plrecb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula rekord przed FAKSPL
::  OLD: \plrecb/plat.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pla_sum','faktury_plat',__PLAT.ref,1);
0


\plreca
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula rekord po FAKSPL
::  OLD: \plreca/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=__PLAT;
_wyn:='';
_brutto:=exec('brutto','faktury_plat',_Tab.ref());
{? XINFO.SLP=null
|| FUN.info('Nie zdefiniowano słownika form płatności.'@);
   _wyn:='TERMPLAT'
|? FAKSPL.PL=null
|| FUN.info('Należy wypełnić formę płatności.'@); _wyn:={? XINFO.SLP<>null || 'PL' || 'TERMPLAT' ?}
|? #FAKSPL.TERMPLAT=0
|| FUN.info('Należy podać termin płatności.'@); _wyn:='TERMPLAT'
|? (FAKSPL.PROCR<0 | FAKSPL.PROCR>100)
|| FUN.info('Podaj prawidłową wartość procentową.'@); _wyn:='PROCR'
|? _brutto>=0 & FAKSPL.WAR<0
|| FUN.info('Podaj prawidłową wartość, większą lub równą zero.'@); _wyn:='WAR'
|? _brutto<0 & FAKSPL.WAR>0
|| FUN.info('Podaj prawidłową wartość, mniejszą lub równą zero.'@); _wyn:='WAR'
?};
{? _wyn=''
|| _war:=FAKSPL.WAR;
   _ref:={? FZ.PLAT_POP='T' || FAKSPL.ref || null ?};
   FAKSPL.cntx_psh();
   {? FAKSPL.first()
   ||
      {!
      |? {? _ref<>FAKSPL.ref() || _war+=FAKSPL.WAR ?};
         FAKSPL.next()
      !}
   ?};
   FAKSPL.cntx_pop();
   {? _brutto>0 & FAKSPL.WAR>_brutto
   ||
      FUN.info('Suma płatności (%1) większa od wartości dokumentu.'
               '\nNależy zmienić wartość płatności.'@[form(_war,,2)]);
      _wyn:='WAR'
   |? _brutto<0 & FAKSPL.WAR<_brutto
   ||
      FUN.info('Suma płatności (%1) mniejsza od wartości dokumentu.'
               '\nNależy zmienić wartość płatności.'@[form(_war,,2)]);
      _wyn:='WAR'
   ?}
?};
_wyn


\palt_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula rozpisuje platnosci na kilka rat
::  OLD: \palt_roz/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=__PLAT;
_czyFaks:=_Tab=FAKS;
_ind:={? _czyFaks || 'FAKS' || 'ZK_N' ?};
_name:=(5+FAKSPL.name())+(ref_name(_Tab.ref())+3);

FAKSPL.cntx_psh();
FAKSPL.use(_name);
SLO.cntx_psh();
FAKSPL.index(_ind);
FAKSPL.prefix(_Tab.ref);
SLO.win_sel('ONE_SEL');
SLO.index('SL');
SLO.prefix(XINFO.SLP);
FAKSPL.win_edit('PLATX');
FAKSPL.win_sel('WER');
{? HELP.ILPLAT=0
|| HELP.ILPLAT:=exec('get','#params',300302,1)
?};
{? HELP.ILDPLAT=0
|| HELP.ILDPLAT:=exec('get','#params',300303,1)
?};
{? FAKSPL.edit("exec('chkedit_plat','faktury_plat')")
|| {? HELP.ILPLAT<>0 & HELP.ILDPLAT<>0
   ||
      {! _i:=1 ..HELP.ILPLAT |!
         _tz:=FAKSPL.TERMPLAT;
         {? _i<>1
         || _tz:=_tz+HELP.ILDPLAT
         ?};
         {? exec('get','#params',300202,2)='T'
         || {! |? exec('spr_kal','faktury_plat',_tz)=1
            |! _tz+=1
            !}
         ?};
         FAKSPL.blank;
         {? _czyFaks || FAKSPL.FAKS:=FAKS.ref() || FAKSPL.ZK_N:=ZK_N.ref() ?};
         FAKSPL.PL:=SLO.ref();
         FAKSPL.TERMPLAT:=_tz;
         FAKSPL.add()
      !}
   ?}
?};
FAKSPL.win_edit('PLAT');
exec('plat_sel','faktury_plat',_Tab);
SLO.cntx_pop();
FAKSPL.cntx_pop();
1


\chkedit_plat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula kontroluje wypelnienie pol edycyjnych okienka PLATX tabeli FAKSPL
::  OLD: \chkedit_plat/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_wynik:='';
{? FAKSPL.PL=null
|| FUN.info('Należy wypełnić formę płatności.'@);
   _wynik:='PL'
|? #FAKSPL.TERMPLAT=0 | FAKSPL.TERMPLAT<FAKS.DW
|| FUN.info('Należy podać następny termin płatności\npóźniejszy lub zgodny z datą wystawienia dokumentu %1.'@[FAKS.DW$1]);
   _wynik:='TERMPLAT'
|? HELP.ILPLAT=null | HELP.ILPLAT<2 | HELP.ILPLAT>100
|| FUN.info('Należy podać na ile rat ma być rozpisana płatność.\n Wartość z zakresu 2..100.'@);
   _wynik:='ILPLAT'
|? HELP.ILDPLAT=null | HELP.ILDPLAT<0 | HELP.ILDPLAT<0 | HELP.ILDPLAT>365
|| FUN.info('Należy podać co ile dni ma być wyznaczany termin płatności.\n Wartość z zakresu 1..365.'@);
   _wynik:='ILDPLAT'
?};
_wynik


\pop_exit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: przywracanie platnosci przy zaniechaniu edycji
::   WE: _[1]=0-zapamietanie platnosci,=1-przywrocenie platnosci,=2-kasowanie zmiennej __PLATXX
::       _[2]-FAKS.ref
::  OLD: \pop_exit/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=ref_tab(_b);
_czyFaks:=_Tab=FAKS;
_ind:={? _czyFaks || 'FAKS' || 'ZK_N' ?};
_name:=(5+FAKSPL.name())+(ref_name(_Tab.ref())+3);

FAKSPL.cntx_psh();
{? ~_czyFaks || FAKSPL.use(_name) ?};
{? _[1]=0
||
   VAR_DEL.delete('__PLATXX');
   __PLATXX:=~~;
   FAKSPL.index(_ind);
   FAKSPL.prefix(_[2]);
   {? FAKSPL.first()
   ||
      __PLATXX:=obj_new(FAKSPL.size());
      _ii:=0;
      {!
      |? _ii+=1;
         __PLATXX[_ii]:=obj_new(@.CLASS.BUFFER,'FAKSPL'); __PLATXX[_ii].save();
         FAKSPL.next()
      !}
   ?}
|? _[1]=1
||
   _type_off:=var_pres('__PLATXX');
   {? _type_off>=0
   ||
      FAKSPL.index(_ind);
      FAKSPL.prefix(_[2]);
      {? FAKSPL.first() || {! |? FAKSPL.del() !} ?};

      {? _type_off>0
      ||
         {! _ii:=1..obj_len(__PLATXX)
         |? __PLATXX[_ii].restore();
            FAKSPL.add()
         !}
      ?};
      VAR_DEL.delete('__PLATXX')
   ?}
?};
FAKSPL.cntx_pop();
~~


\war_got
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: sprawdza ile jest do zaplaty gotowkowa dla dokumentu sprzedazy
::   WY: wartosc do zaplaty gotowka
::  OLD: \war_got/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_got:=exec('FindInSet','#table','ZR_SLO','SLO_NR',1,FAKS.PL,"ZR_SLO.WAR",,,'');

{? FAKS.WHERE='L'
|| {? _got='T' || _wyn:=FAKS.KW_ZAL ?}
|? FAKS.PLISTA<>'T'
|| {? _got='T'
   || _wyn:=exec('brutto','faktury_plat',FAKS.ref())
   ?}
|| FAKSPL.cntx_psh();
   FAKSPL.index('FAKS');
   FAKSPL.prefix(FAKS.ref);
   {? FAKSPL.first
   ||
      {!
      |?
         {? exec('FindInSet','#table','ZR_SLO','SLO_NR',1,FAKSPL.PL,"ZR_SLO.WAR",,,'')='T'
         || _wyn+=FAKSPL.WAR
         ?};
         FAKSPL.next
      !}
   ?};
   FAKSPL.cntx_pop()
?};
_wyn


\data_got
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: sprawdza jaka jest data do zaplaty gotowkowa dla dokumentu sprzedazy
::   WE: [_a] - ref Faktury, domyślnie aktualny FAKS
::   WY: data zaplaty gotowka
::  OLD: \data_got/plat.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=FAKS.ref() ?} || _a:=FAKS.ref() ?};

_wyn:=date(0,0,0);
FAKS.cntx_psh();
FAKSV.cntx_psh();
FAKS_K.cntx_psh();
FAKSPL.cntx_psh();
FAKSO.cntx_psh();
FAP.cntx_psh();
FAP_K.cntx_psh();
_msk:=ref_name(_a)+3;
{? _msk<>''
|| exec('fak_open','open_tab',1+_msk,_msk+2);
   FAKS.prefix();
   {? FAKS.seek(_a)
   || {? FAKS.WHERE='L'
      || {? exec('FindInSet','#table','ZR_SLO','SLO_NR',1,FAKS.PL,"ZR_SLO.WAR",,,'')='T' || _wyn:=FAKS.DW ?}
      |? FAKS.PLISTA<>'T'
      || {? exec('FindInSet','#table','ZR_SLO','SLO_NR',1,FAKS.PL,"ZR_SLO.WAR",,,'')='T' || _wyn:=FAKS.TZ ?}
      || FAKSPL.index('FAKS');
         FAKSPL.prefix(FAKS.ref);
         {? FAKSPL.first
         ||
            {!
            |?
               {? exec('FindInSet','#table','ZR_SLO','SLO_NR',1,FAKSPL.PL,"ZR_SLO.WAR",,,'')='T'
               || _wyn:=FAKSPL.TERMPLAT
               ?};
               FAKSPL.next & _wyn=date(0,0,0)
            !}
         ?}
      ?}
   ?}
?};
FAKS.cntx_pop();
FAKSV.cntx_pop();
FAKS_K.cntx_pop();
FAKSPL.cntx_pop();
FAKSO.cntx_pop();
FAP.cntx_pop();
FAP_K.cntx_pop();
_wyn


\faks_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formula wyswietla formy platnosci dla faktury
::  OLD: \faks_pl/plat.fml
::----------------------------------------------------------------------------------------------------------------------
_Tab:=cur_tab(1,1);
_czyFaks:=_Tab=FAKS;
_ind:={? _czyFaks || 'FAKS' || 'ZK_N' ?};
VAR_DEL.delete('__PLAT');
__PLAT:=_Tab;
_name:=(5+FAKSPL.name())+(ref_name(_Tab.ref())+3);

{? _czyFaks & FAKS.WHERE='K'
|| FUN.info('Funkcja niedostępna dla korekt zbiorczych.'@);
   return
?};

VAR_DEL.delete('__FAKSPL');
__FAKSPL:=1;
_param:=BEER.SZ='S' & _Tab.PLISTA='T';
FAKSPL.cntx_psh();
SLO.cntx_psh();
SLO.index('SL');
SLO.prefix(XINFO.SLP);
FZ.PLAT_SUM:=0;
{? ~_czyFaks
||
   FAKSPL.use(_name);
:: ustawienie wartości dla okna wertowania WER tabeli FAKSPL
   FAKS.WAL:=ZK_N.WAL
?};
FAKSPL.index(_ind);
FAKSPL.prefix(_Tab.ref);
SLO.win_sel('ONE');
FAKSPL.win_patt('SZUK');
FAKSPL.win_sel('WER');
FAKSPL.hdr_sel(': '+_Tab.SYM);
FAKSPL.hdr_edit(': '+_Tab.SYM);
_put:=
   {? ~_param
      | {? _czyFaks || FAKS.AKC='T' || ZK_N.AKC='T' | ZK_N.name()+2<>'__' ?}
      | ~_Tab.r_lock(1,1,1)
   || _default:=FAKSPL.actions('WER','dupR:dR');
      0
   || _default:=FAKSPL.actions('WER','');
      1
   ?};
FAKSPL.select;
exec('plat_sel','faktury_plat',_Tab);
{? _put || _Tab.put() ?};
_Tab.r_unlock();
FAKSPL.hdr_sel();
FAKSPL.hdr_edit();
FAKSPL.actions('WER',,_default);
SLO.cntx_pop();
FAKSPL.cntx_pop();
VAR_DEL.delete('__FAKSPL','__PLAT');
1


\lista_plat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [14.10]
:: OPIS: Akcja Lista płatności
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_get().var.ACTION:='plista';
sel_exit()


\formy_plat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [14.10]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_get().var.ACTION:='formplat';
sel_exit()


\fap_all_plat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.02]
:: OPIS: Akcja na rekord dla wyświetlanych wszystkich pozycji
::----------------------------------------------------------------------------------------------------------------------
FAP.FAKS().SYM;
exec('plat_sel','faktury_plat',ref_tab(FAP.FAKS));
exec('term_sel','faktury_plat',ref_tab(FAP.FAKS));
~~


\fakspl_zkn_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: Wartość początkowa pola FAKSPL.ZK_N
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? __PLAT=FAKS || null() || ZK_N.ref() ?}


\zkn_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: Płatność
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('faks_pl','faktury_plat')


\fz_wal_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: przed wyświetleniem FZ.WAL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FZ.WAL:=__PLAT.WAL;
1


\replacePlat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: jeśli są płatności zamówienia to zastępuje płatności faktury płatnościami zamówienia
::   WE: _a - ZK_N.ref()
::       _b - FAKS.ref()
::   WY: 0 - nie zastąpiono płatności, 1 - zastąpiono płatności
::----------------------------------------------------------------------------------------------------------------------
_src:=_a;
_dst:=_b;

_result:=0;

{? _src=null() | _dst=null() || return(_result) ?};

_src_name:=(5+FAKSPL.name())+(ref_name(_src)+3);
_dst_name:=(5+FAKSPL.name())+(ref_name(_dst)+3);

FAKSPL.cntx_psh();
FAKSPL.use(_src_name);
FAKSPL.index('ZK_N');
FAKSPL.prefix(_a);
_loop:=FAKSPL.first();
{? _loop
||
:: usunięcie dotychczasowych płatności przy założeniu, że jest coś do skopiowania
   exec('del_plat','faktury_plat',_dst)
?};
:: skopiowanie płatności
_loop:=FAKSPL.first();
{!
|? _loop
|!
   FAKSPL.cntx_psh();
   FAKSPL.use(_dst_name);
   FAKSPL.prefix();
   FAKSPL.ZK_N:=null();
   FAKSPL.FAKS:=_dst;
   _result:=FAKSPL.add();
   FAKSPL.cntx_pop();
   _loop:=FAKSPL.next()
!};
FAKSPL.cntx_pop();
_result


\copyPlatZkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: kopiowanie płatności
::   WE: _a - ZK_N.ref()
::       _b - ZK_N.ref()
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_src:=_a;
_dst:=_b;

_result:=0;

{? _src=null() | _dst=null() || return(_result) ?};

_src_name:=(5+FAKSPL.name())+(ref_name(_src)+3);
_dst_name:=(5+FAKSPL.name())+(ref_name(_dst)+3);

FAKSPL.cntx_psh();
FAKSPL.use(_src_name);
FAKSPL.index('ZK_N');
FAKSPL.prefix(_src);
_loop:=FAKSPL.first();
{!
|? _loop
|!
   FAKSPL.cntx_psh();
   FAKSPL.use(_dst_name);
   FAKSPL.prefix();
   FAKSPL.ZK_N:=_dst;
   FAKSPL.add();
   FAKSPL.cntx_pop();
   _loop:=FAKSPL.next()
!};
FAKSPL.cntx_pop()


\platSameZkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: Kontrola czy płatności na fakturze zgadna płatnościami na zamówieniu powiązanym z fakturą.
::       Jeśli faktura nie powiązana z zamówieniem lub powiązana z więcej niż jednym zamówieniem to w wyniku -1.
::   WE: _a - FAKS.ref()
::   WY: -1-nie dotyczy, 0-płatności są niezgodne, 1-płatności są zgodne
::----------------------------------------------------------------------------------------------------------------------
_faks:=_a;

_result:=-1;

_zk_n:=~~;
_Nd:=tab_tmp(1
   ,'REF'   ,'STRING[16]', '$ND.ref()');
ND.cntx_psh();
_Names:=ND.names();
_loop:=_Names.first();
{!
|? _loop
|!
   ND.use(_Names.NAME);
   ND.index('FAKS_REF');
   ND.prefix($_faks);
   _loop:=ND.first();
   {!
   |? _loop
   |!
      {? ~_Nd.find_key($ND.ref())
      ||
         _Nd.REF:=$ND.ref();
         {? _Nd.add()
         ||
            _zk_n1:=exec('FindAndGet','#table',ZK_RN
               ,exec('spr_zkrn','zamsiw_rea'),,"ZK_RN.N",null());
            {? _zk_n=~~ | _zk_n1 & _zk_n=_zk_n1 || _zk_n:=_zk_n1 || _zk_n:=null() ?}
         ?}
      ?};
      _loop:=(_zk_n=~~ | _zk_n) & ND.next()
   !};
   _loop:=(_zk_n=~~ | _zk_n) & _Names.next()
!};
ND.cntx_pop();
{? _zk_n<>~~ & _zk_n
||
   _plHash:=tab_tmp(1
      ,'HASH'  ,'STRING[40]'  ,'hash');
   FAKSPL.cntx_psh();
   FAKSPL.index('FAKS');
   FAKSPL.prefix(FAKS.ref());
   _loop:=FAKSPL.first();
   {!
   |? _loop
   |!
      _plHash.HASH:=hash($FAKSPL.PL+$FAKSPL.TERMPLAT+$FAKSPL.WAR);
      _loop:=_plHash.add() & FAKSPL.next()
   !};
   FAKSPL.use((5+FAKSPL.name())+(ref_name(_zk_n)+3));
   FAKSPL.index('ZK_N');
   FAKSPL.prefix(_zk_n);
   _loop:=FAKSPL.first();
   {!
   |? _loop
   |!
      {? _plHash.find_key(hash($FAKSPL.PL+$FAKSPL.TERMPLAT+$FAKSPL.WAR))
      ||
         _plHash.del()
      ?};
      _loop:=FAKSPL.next()
   !};
   FAKSPL.cntx_pop();
   _result:=~_plHash.first()
?};
_result


\do_zaplaty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.22]
:: OPIS: Kwota do zapłaty
::   WE: _a - FAKS.ref() - faktura
::       _b - SLO.ref() - waluta handlowa
::       _c - SLO.ref() - waluta podatkowa
::       _d - PARAM_W.WALH - tryb wdyruku
::       _e - ndvat
::   WY: Kwota do zapłaty
::----------------------------------------------------------------------------------------------------------------------
_faks:=_a;
_walh:=_b;
_walp:=_c;
_p_walh:=_d;
_tryb:=(_p_walh='T' | _p_walh='H');
_ndvat:=_e;

_result:=0;

_faks_cur:=_faks;
_walutowa:=_walh<>_walp;

FAKSV.cntx_psh();
FAKS.cntx_psh();
FAKS.prefix();
_faks_cur:=
   {? exec('rozl_na_par','faktury_zalicz',FAKS.SYMF)=1 & FAKS.seek(FAKS.SYMF)
   || BB.refsql(FAKS.ref())
   || BB.refsql(_faks)
   ?};
::
{? FAKS.seek(_faks_cur)
||
   {? _walh<>_walp & _tryb
   ||
::    waluta
      {? FAKS.WHERE='L'
      ||
::       zaliczkowa
         _result:=FAKS.KW_ZAL
      ||
::       pozostała
         {? ('TO'*_ndvat)
         || _result:=FAKS.NETW; 's[4]'
         || _result:=FAKS.BRTW; 's[6]'
         ?};
::       minus rozliczone zaliczki
         FAPOW.index('END_K');
         FAPOW.prefix(_faks_cur,'N');
         _loop:=FAPOW.first();
         {!
         |? _loop
         |!
            _result-=FAPOW.KW_ROZ;
            _loop:=FAPOW.next()
         !}
      ?}
   ||
::    waluta opodtkowania
      {? FAKS.WHERE='L'
      ||
::       zaliczkowa
         FAKSV.index('FF_SV');
         FAKSV.prefix('',_faks_cur);
         _loop:=FAKSV.first();
         {!
         |? _loop
         |!
            _result+=FAKSV.WB_Z; 'spz[3]=FAKSV.WB_Z';
            _loop:=FAKSV.next()
         !}

      |? exec('czy_end','faktury_zalicz')
      ||
::       końcowa
         FAKSV.index('FF_SV');
         FAKSV.prefix('',_faks_cur);
         {? FAKSV.first()
         ||
            {? ~('TO'*_ndvat) & _walutowa
            ||
               {!
               |? _result+=FAKSV.WW-FAKSV.WW_Z; 'sp[12] w zakresie waluty';
                  FAKSV.next()
               !}
            ||
               {!
               |? _result+=FAKSV.WB_R;
                  FAKSV.next
               !}
            ?}
         ?}
      ||
::       pozostała
         {? ('TO'*_ndvat)
         || _result:=FAKS.NETTO; 'sp[1]'
         || _result:=FAKS.BRUTTO; 'sp[3]'
         ?}
      ?}
   ?}
?};
:: rozliczająca zaliczki gdzie zaliczka podana z ręki
{? FAKS.WHERE<>'L' & FAKS.KW_ZAL
||
   {? _walh<>_walp & _p_walh='N'
   ||
      _walj:=exec('FindInSet','#table','WAL','WAL_SYM',FAKS.WAL().KOD,,"WAL.J",,,1);
      _result-=((FAKS.KW_ZAL*FAKS.KRS/_walj)$2)
   ||
      _result-=FAKS.KW_ZAL
   ?}
?};
FAKS.cntx_pop();
FAKSV.cntx_pop();
_result


\spr_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.02]
:: OPIS: Typ płątności
::   WE: _a - string - wartość z parametru
::   WY: string - poprawna wartość, jeżeli była niepoprawna zwraca wartość INNE
::----------------------------------------------------------------------------------------------------------------------
_re:='inna';
{? _ > 0
||
   {? type_of(_a)=type_of('')
   ||
      {? _a='gotówka'
      ||
         _re:='gotówka'
      |? _a='karta'
      ||
         _re:='karta'
      |? _a='czek'
      ||
         _re:='czek'
      |? _a='bon'
      ||
         _re:='bon'
      |? _a='kredyt'
      ||
         _re:='kredyt'
      |? _a='voucher'
      ||
         _re:='voucher'
      |? _a='konto klienta'
      ||
         _re:='konto klienta'
      ||
         _re:='inna'
      ?}
   ||
      _re:='inna'
   ?}
?};
_re


\chk_plat_faks_zdnag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: porównanie formy płatności z faktury zakupowej (FAKS) i z zwiazanych z nią zamówień dostaw (ZD_NAG)
::       ostrzeżenie o niezgodności
::----------------------------------------------------------------------------------------------------------------------
_faks:=FAKS.ref();
_wh:=FAKS.WHERE;

_zdplat:=tab_tmp(1,
                 'PL','STRING[8]','Forma płatności - skrót',
                 'PL_NAZ','STRING[80]','Forma płatności - nazwa');

_fkplat:=tab_tmp(1,
                 'PL','STRING[8]','Forma płatności - skrót',
                 'PL_NAZ','STRING[80]','Forma płatności - nazwa');

FAP2DK.cntx_psh();
DK.cntx_psh();
ZD_RN.cntx_psh();
ZD_NAG.cntx_psh();

FAP2DK.index('FAKS');
FAP2DK.prefix(_wh,$_faks);
{? FAP2DK.first
|| {!
   |? {? FAP2DK.DK<>''
      || DK.use(8+$FAP2DK.DK);
         DK.clear();
         {? DK.seek(FAP2DK.DK) & DK.ZAM_RN<>''
         || ZD_RN.use(8+DK.ZAM_RN);
            ZD_RN.clear();
            {? ZD_RN.seek(DK.ZAM_RN) & ZD_RN.ZD_NAG<>null()
            || ZD_NAG.use(8+$ZD_RN.ZD_NAG);
               ZD_NAG.clear();
               {? ZD_NAG.seek(ZD_RN.ZD_NAG) & ZD_NAG.PL<>null()
               || _pl:=ZD_NAG.PL().KOD;
                  _pl_naz:=ZD_NAG.PL().TR;
                  _zdplat.prefix(_pl);
                  {? ~_zdplat.first()
                  || _zdplat.blank();
                     _zdplat.PL:=_pl;
                     _zdplat.PL_NAZ:=_pl_naz;
                     _zdplat.add()
                  ?}
               ?}
            ?}
         ?}
      ?};
      FAP2DK.next()
   !}
?};

FAP2DK.cntx_pop();
DK.cntx_pop();
ZD_RN.cntx_pop();
ZD_NAG.cntx_pop();

FAKSPL.cntx_psh();
FAKSPL.index('FAKS');
FAKSPL.prefix(_faks);
{? FAKSPL.first()
|| {!
   |? _pl:=FAKSPL.PL().KOD;
      _pl_naz:=FAKSPL.PL().TR;
      _fkplat.prefix(_pl);
      {? ~_fkplat.first()
      || _fkplat.blank();
         _fkplat.PL:=_pl;
         _fkplat.PL_NAZ:=_pl_naz;
         _fkplat.add()
      ?};
      FAKSPL.next()
   !}
?};
FAKSPL.cntx_pop();

_chk:=1;

{? _zdplat.size()>0

|| _zdpl_txt:='';
   _zdplat.prefix();
   {? _zdplat.first()
   || {!
      |? {? _zdpl_txt<>''
         || _zdpl_txt+=', '
         ?};
         _zdpl_txt+=_zdplat.PL+' ('+_zdplat.PL_NAZ+')';
         _zdplat.next()
      !}
   ?};

   _fkpl_txt:='';
   _fkplat.prefix();
   {? _fkplat.first()
   || {!
      |? {? _fkpl_txt<>''
         || _fkpl_txt+=', '
         ?};
         _fkpl_txt+=_fkplat.PL+' ('+_fkplat.PL_NAZ+')';
        _fkplat.next()
      !}
   ?};

   {? _zdpl_txt<>_fkpl_txt
   || _txt:='Forma płatności dokumentu: '@+_fkpl_txt+
            ',\nforma płatności zamówienia dostawy: '@+_zdpl_txt+
            '.\nCzy kontynuować?';
      {? ~FUN.ask(_txt)
      || _chk:=0
      ?}
   ?}

?};

_chk

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:37 cbb1fcdb02afcb228ed1201d51810d94865bdc69a867edc69b9080503298d1bc00de058e507747d86f7f5edfba49f8cb10d94a655281f64bfd02cf46457cf823590e6cf8205d8b7bc0bb3179e1baa692c050807e9c7ebe6dc620f31017c0f03fc499abd6a1ceac4db983b2138bfcf6be4f17543a4dcb47c116ffce8a94084c0f
