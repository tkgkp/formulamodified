:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: roz_godz.fml [2011]
:: Utworzony: 2010
:: Autor: MK
::======================================================================================================================
:: Zawartosc: procedury do obslugi rozliczenia godzin
::======================================================================================================================

\G_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [2011]
:: OPIS: Wartosc poczatkowa pola G w tabeli R_GODZ
::----------------------------------------------------------------------------------------------------------------------
G.ref()


\opis_g
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [2011]
:: OPIS: Po redkacji pola Rodzaj wyplaty w tabeli R_GODZ lub w trakcie wyliczen wynagrodzenia za
::       godziny nadliczbowe
::  WE : _a=1 wywolanie z formuly plf_nadg
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')=type_of(0) || _a ?};
{? {? _a || R_GODZ.R || fld ?}='W'
|| R_GODZ.OPIS:='Wynagrodzenie'
|? {? _a || R_GODZ.R || fld ?}='D'
|| R_GODZ.OPIS:='Dodatek'
|? {? _a || R_GODZ.R || fld ?}='R'
|| R_GODZ.OPIS:='Wyrównanie przez użytkownika'
|? {? _a || R_GODZ.R || fld ?}='A'
|| R_GODZ.OPIS:='Wynagrodzenie Wyrównanie'
|? {? _a || R_GODZ.R || fld ?}='B'
|| R_GODZ.OPIS:='Dodatek Wyrównanie'
?};
1


\wp_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [2011]
:: OPIS: Wartosc poczatkowa pola OPIS w tabeli R_GODZ
::----------------------------------------------------------------------------------------------------------------------
'Wyrównanie'


\roz_godz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [2011]
:: OPIS: Wyswietlenie rozliczenia godzin nadliczbowych
::----------------------------------------------------------------------------------------------------------------------
R_GODZ.index('R_GODZ');
R_GODZ.prefix(G.ref());
R_GODZ.hdr_sel();
R_GODZ.hdr_sel(': '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE);
R_GODZ.select()


\usu_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [2011]
:: OPIS: usuniecie rozliczenia godzin, wywolanie w procedurze plf_nadg (plf_nadg.fml)
::   WE: [_a] - usuwanie wyrównań
::       [_b] - usuwanie wg poprzedniej listy
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')=type_of('') || _a || 'N' ?};
_b:={? var_pres('_b')=type_of('') || _a || 'N' ?};
:: w procedurze plf_nadg zostala ustawiona dziedzina w tabeli G
_usu_ls:={? _b='N'
         || "R_GODZ.index('R_GODZ');R_GODZ.prefix(G.ref,_a,VAR.NAZWALIS);
             {? R_GODZ.first || {! |? R_GODZ.del !} ?}"
         || "R_GODZ.index('R_GODZ');R_GODZ.prefix(G.ref,_a,UZZ.LT);
             {? R_GODZ.first || {! |? R_GODZ.del !} ?}"
         ?};

G.cntx_psh;
R_GODZ.cntx_psh;
{? G.first
|| {!
   |? _usu_ls('W');
      _usu_ls('D');
      _usu_ls('A');
      _usu_ls('B');
      {? _a='T' || _usu_ls('R') ?};
      G.next
   !}
?};
G.cntx_pop;
R_GODZ.cntx_pop


\wyplata
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [2011]
:: OPIS: Wypelnienie rozliczenia godzin, wywolanie w procedurze plf_nadg (plf_nadg.fml)
::   WE: _a = rodzaj wyplaty , _b kwota , _c numer rubryki w ktorej nastepuje wyplata
::----------------------------------------------------------------------------------------------------------------------
_b:={? var_pres('_b')=type_of(0) || _b ?};
{? ~_b || return(0) ?};
_a:={? var_pres('_a')=type_of('') || _a || 'W' ?};
R.cntx_psh;
R.index('RUBKOD');
R.prefix();
_rub:={? var_pres('_c')=type_of(0) & R.find_key(_c) || R.ref || null ?};
R.cntx_pop;
R_GODZ.prefix();
R_GODZ.blank();
R_GODZ.R:=_a;
:ustawienie opisu;
exec('opis_g','roz_godz',1);
R_GODZ.KW:=_b;
R_GODZ.LT:=VAR.NAZWALIS;
R_GODZ.RN:=_rub;
R_GODZ.add


\dod_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [2011]
:: OPIS: Dodanie wyrownania rozliczenia godzin, wprowadzonego recznie,
::       wywolanie w procedurze plf_nadg (plf_nadg.fml)
::   WE: _a numer rubryki rozliczajacej wyrownanie
::----------------------------------------------------------------------------------------------------------------------
R.cntx_psh;
R.index('RUBKOD');
R.prefix();
_rub:={? var_pres('_a')=type_of(0) & R.find_key(_a) || R.ref || null ?};
R.cntx_pop;
_val:=0;
R_GODZ.index('R_GODZ');
R_GODZ.prefix(G.ref,'R');
{? R_GODZ.first
|| {!
   |? {? R_GODZ.LT=VAR.NAZWALIS
      || R_GODZ.RN:=_rub;
         {? R_GODZ.put || _val+=R_GODZ.KW ?}
      |? |R_GODZ.LT=''
      || R_GODZ.LT:=VAR.NAZWALIS;
         R_GODZ.RN:=_rub;
         {? R_GODZ.put(1)
         || _val+=R_GODZ.KW
         || RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                      'Nie dokonano wypłaty wprowadzonego wyrównania ',
                      'dotyczącego godzin nadliczbowych')
         ?}
      ?};
      R_GODZ.next
   !}
?};
_val


\groz_usp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [2011]
:: OPIS: Akcja przed usun i popraw rekordu w tabeli R_GODZ
::----------------------------------------------------------------------------------------------------------------------
{? 1+menu_txt='P' & R_GODZ.R<>'R'
|| FUN.emsg('\nRekord został wyliczony przez program.\n'+'\nPoprawienie niemożliwe.\n');
    return(0)
|? R_GODZ.R<>'R'
|| {? ~FUN.choice('\nRekord jest rozliczony na liście płac\n'+
               '\nUsunięcie może spowodować błędy w wyliczeniach podstaw zasiłków chorobowych.\n',,'Kontynuuj')
   || return(0)
   ?}
?};
_RetVal:=0;
{? VAR.JESTLIST
|| {? R_GODZ.LT=''
   || _RetVal:=1
   || _RetVal:=exec('o_writable','lista_plac',R_GODZ.LT)
   ?}
|| _RetVal:={? R_GODZ.LT<>'' || exec('o_writable','lista_plac',R_GODZ.LT) || 1 ?}
?};
{? _RetVal<0
|| FUN.emsg({? _RetVal=-1
            || '\nLista płac '+VAR.NAZWALIS+' nie rozlicza godzin.'+
               '\n(Wybierz listę płac uwzględnioną w rozliczeniu.)\n'
            |? _RetVal=-2
            || '\nGodziny zostały rozliczone.'+'\n(Wybierz odpowiednią listę płac.)\n'
            || ''
            ?})
?};
_RetVal>0


\wyl_zas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [2011]
:: OPIS: rozpisanie rozliczenia godzin do podstawy zasilku chorobowego
::   WE: _a - data OD nieobecnosci
::       _b - miesiac od do podstawy
::       _c - miesiac do do podstawy
::       [_d] - jesli podany numer ref H
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<>type_of(0) | var_pres('_c')<>type_of(0) | _b>_c || return(0) ?};
{? var_pres('_d')<>type_of(0) || _d:=0 ?};

::Najpierw sprawdzamy czy wszystkie wyplacone na liscie dodatki za godziny sa zarejestrowane w rozliczeniu godzin
::jezeli nie to dodajemy do podstawy wg miesiaca wyplaty

_war:='';
_wag:='';
_rk:=O.R;
_mc:=O.M;
{! _i:=_b.._c
|! _dt:=date(_rk,_mc-_i,1);
   _r1:=_dt~1;
   _m1:=_dt~2;
   {? _war<>'' || _war+=' or ' ?};
   {? _wag<>'' || _wag+=' or ' ?};
   _zn:='l'+(($_r1)+2)+form(_m1,-2)+'%';
   _war+='LS.REFERENCE like \''+_zn+'\'';
   _wag+='R_GODZ.LT like \''+(~_zn)+'\''
!};
{? _war='' || return(0) ?};
_war:='('+_war+')';
_wag:='('+_wag+')';

_rub:=__RUB.sys_sql(46);

{? _rub=''
|| RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,'Nie wprowadzono atrybutu dotyczącego godzin nadliczbowych',
             'rozliczanych w zasiłkach chorobowych.',
             'Godziny nadliczbowe nie zostaną uwzględnione w podstawie zasiłku chorobowego.');
   return(0)
?};
::Dla wyliczeń z bieżącego miesiąca nie mamy wszystkich danych w bazie LS ponieważ mamy wyliczenia w "buforze"
::nie będzie wyliczania i weryfikacji danych LS z G oraz R_GODZ tylko pobranie danych z R_GODZ
{? _b<>0 & _c<>0
|| _ls:=sql(
      'select R.RN as RN, R.RT as RT, substr(LS.REFERENCE,1,8) as LT, sum(LS.KW) as KW '
      'from @LS join R '
      'where '+_war+' and LS.P=:_a and R.RN in (:_b) '
      'group by substr(LS.REFERENCE,1,8), R.RN, R.RT '
      'order by LT,RN',
      P.ref(),
      _rub
   )
?};

_rk:=date(O.R,_mc-_b,1)~1;
_rb1:='godz'+$_rk+'%';
_rb2:='godz'+$(_rk-1)+'%';
_rb3:='godz'+$(_rk+1)+'%';
_rz1:='rzg_'+$_rk+'%';
_rz2:='rzg_'+$(_rk-1)+'%';
_rz3:='rzg_'+$(_rk+1)+'%';
::Dla wyliczeń z bieżącego miesiąca nie mamy wszystkich danych w bazie LS ponieważ mamy wyliczenia w "buforze"
::nie będzie wyliczania i weryfikacji danych LS z G oraz R_GODZ tylko pobranie danych z R_GODZ
{? _b<>0 & _c<>0
|| _gd:=sql(
      'select R.RN as RN, R.RT as RT, R_GODZ.LT as LT, sum(R_GODZ.KW) as KW '
      'from @R_GODZ join @G using(R_GODZ.G,G.REFERENCE) join R using(R_GODZ.RN,R.REFERENCE) '
      'where (R_GODZ.REFERENCE like \':_c\' or R_GODZ.REFERENCE like \':_d\' or R_GODZ.REFERENCE like \':_g\') '
      '  and (G.REFERENCE like \':_e\' or G.REFERENCE like \':_f\' or G.REFERENCE like \':_h\') '
      '  and '+_wag+' and G.P=:_a and R.RN in (:_b) '
      'group by R_GODZ.LT, R.RN, R.RT '
      'order by LT,RN',
      P.ref(),_rub,_rz1,_rz2,_rb1,_rb2,_rz3,_rb3
   )
?};

::sprawdzamy czy kwoty na liscie sa zgodne z rozliczeniem godzin
KZ.cntx_psh;

_ust_prc:="
{? _b || return(0) ?};
{? _a=VAR.NAZWALIS
|| _pomx:=FUNKCJE.L_SYS(5621)+FUNKCJE.LU_SYS(5621);
   _pomy:=FUNKCJE.L_SYS(56111)+FUNKCJE.LU_SYS(56111);
   {? _pomy=0 & _pomx=0 & O.R>1
   || _pomx:=FUNKCJE.LU_SYS(5621,1);
      _pomy:=FUNKCJE.LU_SYS(56111,1);
      {? (_pomy=0 & _pomx>0) | (_pomy=_pomx & _pomy>0)
      || RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                  'Sprawdź odbruttowienie składnika rozliczanego w bieżącym miesiącu,\n'+
                  'który został pobrany do podstawy zasiłku/wynagrodzenia za chorobę.\n'+
                  'Przyjęto od odbruttowienia podstawy ZUS z poprzedniego miesiąca.')
      || _pomy:=_pomx:=0
      ?}
   ?};
   {? _pomy=0 & _pomx=0
   || RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
               'Sprawdź odbruttowienie składnika rozliczanego w bieżącym miesiącu,\n'+
               'który został pobrany do podstawy zasiłku/wynagrodzenia za chorobę.\n'+
               'Przyjęto 13,71%.')
   ?};
   _rok:=O.R;
   _mc:=O.M
|| _rok:=#('20'+((3+_a)+2));
   _mc:=#((5+_a)+2);
: dodanie informacji dotyczacej podstawy ze zwrotow ZUS
   _pomy:=exec('kor_prac_zus','korekty_zus',P.ref,_rok,_mc);
   {? KZ.find_key(_rok,_mc)
   || {? _pomy<0 || _pomy:=KZ.S41 ?};
      _pomx:=KZ.S43
   || _pomx:=_pomy:=0
   ?}
?};

exec('czytaj','#stalesys',date(_rok,_mc,0),KST,'PRFRP','WSODBR');
{? _pomy=_pomx & _pomx<>0
|| _proc_s:=KST.WSODBR/100
|| 'obsluga procentu skladek w przypadku przekroczenia podstawy';
   _pd_s:={? _pomx || _pomy/_pomx || 1 ?};
   _proc_s:=((KST.PRFE*0.005+KST.PRFRP*0.01)*_pd_s)+KST.PRFC*0.01
?};
_proc_s$4";

_add:="__SK_CHO.prefix;
       __SK_CHO.REF:=_a;
       __SK_CHO.R:=_b;
       __SK_CHO.O:=_c;
       __SK_CHO.MC:=_d;
       __SK_CHO.OD:=_e;
       __SK_CHO.DO:=_f;
       __SK_CHO.SKL:=_h;
       __SK_CHO.SKL_NR:=_g;
       __SK_CHO.K_B:=_i;
       __SK_CHO.K_N:=_j;
       __SK_CHO.LT:=_k;
       __SK_CHO.TYP:='G';
       __SK_CHO.REF_N:=_m;
       __SK_CHO.PRC:=_l*100;
       __SK_CHO.add";
::Dla wyliczeń z bieżącego miesiąca nie mamy wszystkich danych w bazie LS ponieważ mamy wyliczenia w "buforze"
::nie będzie wyliczania i weryfikacji danych LS z G oraz R_GODZ tylko pobranie danych z R_GODZ
{? _b<>0 & _c<>0
|| {? _ls.first
   || {!
      |? _gd.prefix(~_ls.LT,_ls.RN);
         {? _gd.first
         || {? (_kw:=_ls.KW-_gd.KW)
            || _prc:=_ust_prc(~_ls.LT,_d);
               _kwn:=_kw-(_kw*_prc);
               _rok:=#('20'+((3+_ls.LT)+2));
               _mc:=#((5+_ls.LT)+2);
               _add(0,'M','L',date(_rok,_mc,1),date(_rok,_mc,0),date(_rok,_mc,0),_ls.RN,_ls.RT,_kw$2,_kwn$2,(~_ls.LT),_prc,
                  {? _d || _d || #N.ref ?})
            ?}
         || _prc:=_ust_prc(~_ls.LT,_d);
            _kw:=_ls.KW;
            _kwn:=_kw-(_kw*_prc);
            _rok:=#('20'+((3+_ls.LT)+2));
            _mc:=#((5+_ls.LT)+2);
            _add(0,'M','L',date(_rok,_mc,1),date(_rok,_mc,0),date(_rok,_mc,0),_ls.RN,_ls.RT,_kw$2,_kwn$2,(~_ls.LT),_prc,
               {? _d || _d || #N.ref ?})
        ?};
        _ls.next
      !}
   ?}
?};

::teraz mozemy rozliczyc godziny na podstawie rozliczenia godzin

_mc:=O.M-_b;
{? _mc<1 || _od:=date(O.R-1,_mc+12,1) || _od:=date(O.R,_mc,1) ?};
_od:=date(_od~1,_od~2,0);

_mc:=O.M-_c;
{? _mc<1 || _do:=date(O.R-1,_mc+12,1) || _do:=date(O.R,_mc,1) ?};


_rozg:=sql(
   'select R.RN as RN, R.RT as RT, R_GODZ.LT as LT, substr(to_string(G.D),1,4) as ROK, '
   'substr(to_string(G.D),6,2) as MC, sum(R_GODZ.KW) as KW '
   'from @R_GODZ join @G using(R_GODZ.G,G.REFERENCE) left join R using(R_GODZ.RN,R.REFERENCE) '
   'where (R_GODZ.REFERENCE like \':_e\' or R_GODZ.REFERENCE like \':_f\' or R_GODZ.REFERENCE like \':_i\') '
   '  and (G.REFERENCE like \':_g\' or G.REFERENCE like \':_h\' or G.REFERENCE like \':_j\') '
   '  and G.D>=to_date(:_a) and G.D<=to_date(:_b) and G.P=:_c and R.RN in (:_d) '
   'group by R_GODZ.LT, R.RN, R.RT, substr(to_string(G.D),1,4), substr(to_string(G.D),6,2) '
   'order by ROK, MC',
   _do,_od,P.ref(),_rub,_rz1,_rz2,_rb1,_rb2,_rz3,_rb3
);
{? _rozg.first
|| {!
   |? _prc:=_ust_prc(_rozg.LT,_d);
      _kw:=_rozg.KW;
      _kwn:=_kw-(_kw*_prc);
      _rok:=#_rozg.ROK;
      _mc:=#_rozg.MC;
      _add(0,'M','G',date(_rok,_mc,1),date(_rok,_mc,0),date(_rok,_mc,0),_rozg.RN,_rozg.RT,_kw$2,_kwn$2,_rozg.LT,_prc,
         {? _d || _d || #N.ref ?});
      _rozg.next
   !}
?};

KZ.cntx_pop;
1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 7b6d8e7f21419933ef74ef1afb39238f3d2f52a3f41eee2133442a2b6f343431f3879e5f87d5faf09ea4de566e4dd70a8dc98d694684c74da9279e7671848488dd36083b0e99f77920cd60246e798a5beb5b7a04f2dc8ca6d64691c1f6326640416e9f129f664f5dcf63bfcedf770f7e2533775ef38be63b01ed22fe251165b0
