:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: cechy_dodatkowe.fml
:: Utworzony: 22.06.2016
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Procedury do obsługi cech dodatkowych
::======================================================================================================================


\dH3Wartd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI, RL [8.50]
:: OPIS: F3 pola SKID.WARTOSCD
::  OLD: \dH3Wartd/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ATRDEF.SLOWNIK<>''
|| on_error(2);
   _war:=($ATRDEF.SLOWNIK)();
   {? in_error()
   || FUN.info('Wystąpił błąd w formule, zapisanej w polu Słownik.'@)
   || fld(_war)
   ?};
   on_error()
?};
~~


\dWdCech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI, RL [8.50]
:: OPIS: Definiowanie powiazan cech dodatkowych
::   WE: _a - maska (nazwa pliku, w którym znajduje sie rekord o nr _b)
::       _b - numer z ref rekordu
::       [_c] - akronim tabeli
::  OLD: \dWdCech/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
ATRDEFWD.index('KLASA');
ATRDEFWD.prefix(_a,_b);
SKID.MASKA:=_a;
SKID.TAB:={? _>2 || _c || exec('akr_tab','cechy_dodatkowe',_a) ?};
KA.TAB:='DEKRET';
KA.STR:='X';
ATRDEFWD.win_sel('WER');
ATRDEFWD.select()


\akr_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Dla maski tabeli zwraca akronim
::   WE: _a - maska tabeli
::   WY: akronim tabeli
::  OLD: \akr_tab/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
_akr:='';
_i:=1;
{!
|? {? ($(tab_acr(_i)+'.name(1)'))()=_a || _akr:=tab_acr(_i) ?};
   _i+=1;
   _akr='' & _i<=tab_num
!};
_akr


\sH3Wduse
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI, RL [8.50]
:: OPIS: Przed wyswietleniem pola SKID.WDUSE
::  OLD: \sH3Wduse/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('tab_sys','cechy_dodatkowe');
{? ($('~'+_tab+'.CECHA'))()
|| SKID.WDUSE:=''
|| ($(_tab+'.CECHA()'))();
   SKID.WDUSE:=
   {? 'S'=ATRDEF.TYP
   || ($(_tab+'.WARS'))()
   |? 'N'=ATRDEF.TYP
   || form(($(_tab+'.WARR'))(),,,'0.')
   |? 'D'=ATRDEF.TYP
   || {? ($(_tab+'.WARR'))()
      || 10+tm_form(($(_tab+'.WARR'))())
      || form(date(0,0,0),,1)
      ?}
   |? 'T'=ATRDEF.TYP
   || {? ($(_tab+'.WARR'))()
      || 8+(11-tm_form(($(_tab+'.WARR'))()))
      || form(time(0,0,0),,1)
      ?}
   || ''
   ?}
?}


\tab_sys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Dla systemu zwraca akronim tabeli z wartosciami cech
::   WY: akronim tabeli
::  OLD: \tab_sys/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? (var_pres('AreaTitle')>0 & (3+AreaTitle.area='FST')) | EKSG.SYS='FST'
|| 'ATRUSE_E'
|| 'ATRUSE_L'
?}


\warr2wars
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [8.70]
:: OPIS: Konwertuje wartosc liczbowa do string odpowiednio formatujac.
::   WE: _a - uchwyt do tabeli ATRDEF lub ATRDEFWD
::   WY: _b - wartosc, ktora bedzie konwertowana
::   WY: _rr - skonwertowana i sformatowana
::  OLD: \warr2wars/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
_rr:='';
_var:=_a;
{? ATRDEF.TYP='N'
|| _rr:=form(_var,,,'0.')
|? ATRDEF.TYP='D'
|| {? _var
   || _date:=10+tm_form(_var);
      _rr:=$date(#(4+_date),#(2+(5-_date)),#(_date+2))
   || _rr:=$date(0,0,0)
   ?}
|? ATRDEF.TYP='T'
|| {? _var
   || _time:=8+(11-tm_form(_var));
      _rr:=$time(#(2+_time),#(2+(3-_time)),#(_time+2))
   || _rr:=$time(0,0,0)
   ?}
?};
_rr


\uzu_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Tworzy rekord w tabeli z wartosciami cech
:    WE: _a - typ uzupelnienia (string)
::  OLD: \uzu_tab/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
_case:=_a;
_add:=($SKID.FORM3)();
_fun:='{|'+SKID.TAB+'|!'+
      'prefix(); '+
      {? _add || 'blank(); ATRDEFWD:=@.ATRDEFWD.ref; ' || '' ?}+
      'CECHA:=ATRDEF.ref(); WARS:=SKID.WARS; WARR:=SKID.WARR; '+
      {? ATRDEF.TYP_CECH='SKID01'
      || '{? DEKRET.KONTO || KON:=ZAPIS.KONTO ?}; WARS:=KON; '+
         '{? DEKRET.WALUTA || WAL:=exec(''fnd_wal'',''cechy_dodatkowe'',ZAPIS.WALUTA) ?}; '+
         '{? DEKRET.KW_PLN || SUM:=ZAPIS.KW_PLN ?}; WARR:=SUM; '+
         '{? WAL '+
         '|| {? DEKRET.KW_WAL || SUMW:=ZAPIS.KW_WAL ?};{? DEKRET.KURS_WAL || KURS:=ZAPIS.KURS ?}'+
         '|| KURS:=KW_WAL:=0 ?}; '+
         '{? DEKRET.TRESC || OP:=ZAPIS.OPIS ?}; '+
         '{? DEKRET.OPERACJA || ID:=ZAPIS.IDENT ?}; '+
         '{? ID<>'''' '+
         '|| {? DEKRET.N_Z || TID:=ZAPIS.ITYP ?}; DO:=ZAPIS.ODATA; TP:=ZAPIS.IDATA; DATA_R:=ZAPIS.RDATA'+
         '|| TID:=''''; DO:=TP:=DATA_R:=date(0,0,0) ?}; '
      || ''
      ?}+
      {? _case='POZDOK'
      || 'POZDOK:=@.POZDOK.ref();'+{? ATRDEFWD.ITER<>'' || 'ROZDZ:=form(#VPD.ref(),20); ' || '' ?}
      |? _case='R' || 'P:=@.P.ref;R:=@.R.ref;LT:=''L''+FUNKCJE.ZNLISTY();'
      || ''
      ?}+
      {? SKID.TAB='ATRUSE_L' || 'PROJEKTY:=@.PROJEKT;' || '' ?}+
      {? _add || 'add' || 'put' ?}+' |}';
{? ($_fun)() & ATRDEF.TYP_CECH='SKID01'
|| TMPWYR.index(ind_wyr1);
   TMPWYR.prefix(null);
   {? TMPWYR.first()
   || ($(SKID.TAB2+'.index(''LP'')'))();
      {! _i:=1..6 |!
          TMPWYR.prefix(null,_i);
          {? TMPWYR.first()
          || ($(SKID.TAB2+'.prefix('+SKID.TAB+'.ref,'+$_i+')'))();
             {? ($(SKID.TAB2+'.first()'))()
             || {!|? ($(SKID.TAB2+'.del()'))() !}
             ?};
             {!|?  ($(SKID.TAB2+'.prefix()'))();
                   ($(SKID.TAB2+'.blank()'))();
                   ($(SKID.TAB2+'.ATRUSE:='+SKID.TAB+'.ref()'))();
                   ($(SKID.TAB2+'.LP:=TMPWYR.LP'))();
                   ($(SKID.TAB2+'.KW:={? TMPWYR.KW$2=0 || ZAPIS.KW_PLN$2 || TMPWYR.KW$2 ?}'))();
                   SLUAPPL.cntx_psh(); SLUAPPL.prefix();
                   {? SLUAPPL.seek(TMPWYR.SLU,) ||  ($(SKID.TAB2+'.SLU:=SLUAPPL.ref()'))() ?};
                   SLUAPPL.cntx_pop();
                   SLO.cntx_psh(); SLO.prefix();
                   {? SLO.seek(TMPWYR.KOD,) || ($(SKID.TAB2+'.SLO:=SLO.ref()'))() ?};
                   SLO.cntx_pop();
                   _ok:=($(SKID.TAB2+'.add()'))();
                   _ok & TMPWYR.del()
             !}
          ?}
      !}
   ?}
?}


\run_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Wpisuje domyslne wyrozniki dla cechy zapisu do tabeli TMPWYl
::  OLD: \run_wyr/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAPIS.KONTO<>'' & exec('ustaw_rok','dok_fks',date(O.R,O.M,1))
||
::   {? FL.SYSTEM='KALI' || SD_OB.TAB:='G' || SD_OB.TAB:='DEKRET' ?};
   SD_OB.TAB:='G';
   SD_OB.DEK_OBJ.KW_PLN:=ZAPIS.KW_PLN; SD_OB.Str:='X';
   {? PAR_SKID.get(35)='T' & SD_OB.konto_be(ROK_F.ref(),ROK_F.SYNT+ZAPIS.KONTO)
      & SD_OB.ksw_be()
   || SD_OB.ksw_loop('X',null)
   ?}
?}


\usu_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Usuniecie zawartosci tabeli TMPWml
::  OLD: \usu_wyr/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ATRDEF.TYP_CECH='SKID01'
|| TMPWYR.index(ind_wyr1);
   TMPWYR.prefix(null);
   {? TMPWYR.first() || {!|? TMPWYR.del() !} ?}
?}


\ust_zm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Ustawienie zmiennych i wykonanie formul przed domyslnym uzupelnianiem cech
::   WE: _a - typ uzupelnienia (string)
::  OLD: \ust_zm/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
SKID.TAB:=exec('tab_sys','cechy_dodatkowe');
{? _a='R'
|| SKID.LISTA:='R%';
   SKID.FORM:='';
   SKID.FORM2:='1';
   SKID.FORM3:='1';
   SKID.TAB2:='ATR_WYRL'
|| ''
?}


\uzu_cec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Uzupelnia domyslne wartosci cech dla obiektu
::   WE: _a - typ uzupelnienia (string)
::  OLD: \uzu_cec/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('dek_decl','dekret_aut');
exec('sd_decl','dekret_aut');
exec('fl_decl','dekret_aut');
{? _a<>'R' || ZAPIS:=obj_new(@.CLASS.DEK_CLASS); SD_OB:=obj_new(@.CLASS.SD_CLASS) ?};
SD_OB.opentmp();
_case:=_a;
_ok:=0;
exec('ust_zm','cechy_dodatkowe',_case);
($(SKID.TAB+'.cntx_psh()'))();
{!|? _i:=SKID.LISTA*'%'; _tab:=(_i-1)+SKID.LISTA; SKID.LISTA:=_i-SKID.LISTA;
     _i:=SKID.FORM*'%'; _f:=(_i-1)+SKID.FORM; SKID.FORM:=_i-SKID.FORM;
     {? _tab<>''
     || ($_f)();
        ATRDEFWD.index('AKTYWNY');
        ATRDEFWD.prefix('T',($(_tab+'.name(1)'))(),($('#('+_tab+'.ref)'))());
        {? ATRDEFWD.first()
        || _ok:=1;
           {!|?  ATRDEFWD.CECHA();
                 {? ATRDEF.AKTYWNY='T' & ($SKID.FORM2)(_tab)
                 || _ward:=ATRDEFWD.CZY_WARD='T';
                    {? ATRDEF.TYP_CECH<>'SKID01'
                    || SKID.WARS:=''; SKID.WARR:=0;
                       {? _ward
                       || {? ATRDEF.CZY_FOR='T'
                          || exec('setSkidW','cechy_dodatkowe',1)
                          || {? ATRDEF.TYP='S' || SKID.WARS:=ATRDEF.WARS || SKID.WARR:=ATRDEF.WARR ?}
                          ?};
                          {? ATRDEF.TYP<>'S' || SKID.WARS:=exec('warr2wars','cechy_dodatkowe',SKID.WARR) ?}
                       || {? ATRDEFWD.CZY_FOR='T'
                          || exec('setSkidW','cechy_dodatkowe',2)
                          || {? ATRDEF.TYP='S' || SKID.WARS:=ATRDEFWD.WARS || SKID.WARR:=ATRDEFWD.WARR ?}
                          ?};
                          {? ATRDEF.TYP<>'S' || SKID.WARS:=exec('warr2wars','cechy_dodatkowe',SKID.WARR) ?}
                       ?};
                       _czy:={? _ward || ATRDEF.CZY_KOP || ATRDEFWD.CZY_KOP ?};
                       _jest:={? form(_czy)<>'' || _czy:=($_czy)(); type_of(_czy)=1 & _czy || 1 ?};
                       {? _jest || exec('uzu_tab','cechy_dodatkowe',_a) ?}
                    || _pocz:={? _ward || ATRDEF.WARS || ATRDEFWD.WARS ?};
                       {? _pocz='' | ($_pocz)()
                       || {!|?  SKID.WARS:=''; SKID.WARR:=0;
                                DEKRET.index('REF');
                                {? _ward
                                || DEKRET.prefix(REF.FIRMA,'ATRDEF',#ATRDEF.ref)
                                || DEKRET.prefix(REF.FIRMA,'ATRDEFWD',#ATRDEFWD.ref)
                                ?};
                                {? DEKRET.first()
                                || ZAPIS.run(ATRDEF.OPIS+2); SKID.WARS:=ZAPIS.KONTO; SKID.WARR:=ZAPIS.KW_PLN;
                                   exec('run_wyr','cechy_dodatkowe')
                                || ZAPIS.clr_flds()
                                ?};
                                _czy:={? _ward || ATRDEF.CZY_KOP || ATRDEFWD.CZY_KOP ?};
                                _jest:={? form(_czy)<>'' || _czy:=($_czy)(); type_of(_czy)=1 & _czy || 1 ?};
                                {? _jest || exec('uzu_tab','cechy_dodatkowe',_case) ?};
                                exec('usu_wyr','cechy_dodatkowe');
                                _iter:={? _ward || ATRDEF.ITER || ATRDEFWD.ITER ?};
                                _iter<>'' & ($_iter)()
                          !}
                       ?}
                    ?}
                 ?};
                 ATRDEFWD.next()
           !}
        ?}; 1
      || +SKID.LISTA
      ?}
!};
{? menu_pth()+2='OZ' & _ok=0 || FUN.info('Brak aktywnych cech do uzupełnienia.'@) ?};
($(SKID.TAB+'.cntx_pop()'))();
{? _a<>'R' || obj_del(ZAPIS); obj_del(SD_OB) ?}


\pw_war_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Przed wysw. dla pola SKID.WAR_DEK
::  OLD: \pw_war_d/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
($(SKID.TAB+'.CECHA()'))();
_ok:=0;
SKID.WAR_DEK:={? ATRDEF.TYP_CECH='SKID01' || _ok:=1;($(SKID.TAB+'.WARR'))() || 0 ?};
_ok


\wys_wcen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Akcja Wyswietl dla okienek wert. tabeli SKID.TAB
::  OLD: \wys_wcen/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
($(SKID.TAB+'.CECHA()'))();
{? ATRDEF.TYP_CECH='SKID01'
|| exec('ini_tpow','dok_fks');
   exec('ust_tpow','cechy_dodatkowe');
   exec('ust_poz','cechy_dodatkowe');
   KA.AKCJA:=1;
   POZ.display();
   obj_del(TPOW)
|| ($(SKID.TAB+'.display()'))()
?}


\ust_tpow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Przepisanie wyroznikow ze SKID.TAB2 do TPOW
::  OLD: \ust_tpow/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
($(SKID.TAB2+'.index(''LP'')'))();
($(SKID.TAB2+'.prefix('+SKID.TAB+'.ref)'))();
{? ($(SKID.TAB2+'.first()'))()
|| {!|? _lp:=($(SKID.TAB2+'.LP'))();
        {? ($('KA.KW'+$_lp))()=null
        || TPOW.LP:=_lp; TPOW.KW:=($(SKID.TAB2+'.KW$2'))();
           TPOW.SLO:=($(SKID.TAB2+'.SLO().KOD'))();
           TPOW.SLU:=($(SKID.TAB2+'.SLU().SLU().NAZ'))();
           TPOW.prefix();
           TPOW.add()
        ?};
        ($(SKID.TAB2+'.next'))()
   !}
?}


\ust_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Wypenienie bufora POZ i zmiennych do wyswietlenia zapisu
::  OLD: \ust_poz/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ustaw_rok','dok_fks');
POZ.blank();
exec('gr_bufor','dok_fks');
_f:='{| '+SKID.TAB+'|!'+
    'POZ.KON:=KON; POZ.WAL:=WAL; POZ.SUM:=SUM; POZ.SUMW:=SUMW; POZ.KURS:=KURS;'+
    'POZ.ID:=ID; POZ.TID:=TID; POZ.DO:=DO; POZ.TP:=TP; POZ.DATA_R:=DATA_R; POZ.OP:=OP; '+
    'POZ.DOK:=null |}';
($_f)();
POZ.STR:=ATRDEF.OPIS+2;
POZ.SYM_ROK:=exec('op_unik_sym','rozrach',POZ.ID,POZ.DO);
exec('okn_poz_edit','powdok');
exec('ustal_ka','cechy_dodatkowe')


\ustal_ka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Wypełnienie zmiennej KA do prezentacji wyroznikow zapisu
::   WE: [_a - jesli bez sprawdzenia tabeli SKID.TAB2]
::  OLD: \ustal_ka/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(35)='T' & (_k:=exec('jak_kon','konto',ROK_F.SYNT+POZ.KON))<>null
|| KS_W.cntx_psh();
   SLU.cntx_psh();
   SLUAPPL.cntx_psh();
   ($(SKID.TAB2+'.cntx_psh()'))();
   ($(SKID.TAB2+'.index(''LP'')'))();
   ($(SKID.TAB2+'.prefix('+SKID.TAB+'.ref)'))();
   KS_W.index('LP');
   KS_W.prefix(_k);
   {! _i:=1..6 |!
     {? KS_W.find_key(_i)
     || ($('KA.S'+$_i+':=KS_W.SLU().SLU().NAZ'))();
        {? _=0 & ($(SKID.TAB2+'.find_key('+$_i+')'))() & ($(SKID.TAB2+'.SLU=KS_W.SLU'))() & KS_W.ROZDZ<>'T'
        || ($('KA.KW'+$_i+':='+SKID.TAB2+'.SLO'))();
           ($('KA.E'+$_i+':='+SKID.TAB2+'.SLO().KOD'))()
        || {? KS_W.ROZDZ='T'
           || ($('KA.E'+$_i+':=''<- F3 ->'''))()
           || ($('KA.E'+$_i+':='''''))()
           ?};
           ($('KA.KW'+$_i+':=null'))()
        ?}
     || ($('KA.S'+$_i+':='''''))();
        ($('KA.KW'+$_i+':=null'))();
        ($('KA.E'+$_i+':='''''))()
     ?}
  !};
  KS_W.cntx_pop();
  SLU.cntx_pop();
  SLUAPPL.cntx_pop();
  ($(SKID.TAB2+'.cntx_pop()'))()
|| exec('pus_wyr','dok_fks')
?}


\pop_wcec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Akcja Popraw dla okienek wert. tabeli SKID.TAB
::  OLD: \pop_wcec/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
($(SKID.TAB+'.CECHA()'))();
{? ATRDEF.r_lock(1,1)
|| ATRDEF.r_unlock();
   {? ATRDEF.TYP_CECH='SKID01'
   || exec('ini_tpow','dok_fks');
      KA.AKCJA:=1;
      exec('ust_poz','cechy_dodatkowe');
      exec('ust_tpow','cechy_dodatkowe');
      pop_kon:='';
      {? POZ.edit("exec('spr_poz','dok_fks')")
      || exec('poz2tab','cechy_dodatkowe');
         exec('usu_wcen','cechy_dodatkowe',1);
         exec('do_wyr','cechy_dodatkowe');
         ($(SKID.TAB+'.WARS:=POZ.KON'))();
         ($(SKID.TAB+'.WARR:=POZ.SUM'))();
         _ok:=1
      ?};
      obj_del(TPOW)
   || _ok:=exec('eSkidWa','cechy_dodatkowe',2,SKID.TAB)
   ?};
   {? _ok
   || _fun:='{|'+SKID.TAB+'|! put |}';
      ($_fun)()
   ?}
|| FUN.info('Definicja wybranej cechy jest obsługiwana przez innego operatora.\nEdycja zablokowana'@)
?}


\poz2tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Przepisanie zawartosci okienka zapisu do tabeli SKID.TAB
::  OLD: \poz2tab/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
_f:='{| '+SKID.TAB+'|!'+
    'KON:=POZ.KON; WAL:=POZ.WAL; SUM:=POZ.SUM; SUMW:=POZ.SUMW; KURS:=POZ.KURS;'+
    'ID:=POZ.ID; TID:=POZ.TID; DO:=POZ.DO; TP:=POZ.TP; DATA_R:=POZ.DATA_R; OP:=POZ.OP; '+
    'put() |}';
    SKID.WARS:=POZ.KON; SKID.WARR:=POZ.SUM;
($_f)()


\usu_wcen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Akcja Usun biezaca ceche dla okienek wert. tabeli SKID.TAB
::   WE: [_a - jesli nie pytac o usuniecie i nie usuwac rekordu ze SKID.TAB]
::  OLD: \usu_wcen/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=1 | FUN.ask('Usunąć bieżący wiersz?'@)
|| {? _=0 || do() ?};
   exec('del_wyr','cechy_dodatkowe');
   {? _=0
   || {? exec('be_del_atruse','cechy_dodatkowe')
      || _msg:=0; ($(SKID.TAB+'.del()'))()
      || _msg:=1
      ?};
      end();
      {? _msg
      || FUN.info('Definicja cechy jest obsługiwana przez innego operatora.\nUsuwanie cech zablokowane'@)
      ?}
   ?}
?}


\del_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Usuniecie wyroznikow z SKID.TAB2 dla aktualnego SKID.TAB
::  OLD: \del_wyr/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
($(SKID.TAB2+'.index(''LP'')'))();
($(SKID.TAB2+'.prefix('+SKID.TAB+'.ref)'))();
{? ($(SKID.TAB2+'.first()'))()
|| {!|? ($(SKID.TAB2+'.del()'))() !}
?}


\do_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Po redakcji zapisu - przepisanie wyroznikow do tabeli SKID.TAB2
::  OLD: \do_wyr/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(35)='T'
|| SLUAPPL.cntx_psh();
   SLU.cntx_psh();
   ($(SKID.TAB2+'.cntx_psh()'))();
   ($(SKID.TAB2+'.index(''LP'')'))();
   ($(SKID.TAB2+'.prefix('+SKID.TAB+'.ref)'))();
   {! _i:=1..6 |!
      _s:=($('KA.S'+$_i))();
      {? _s<>''
      || _k:=($('KA.KW'+$_i))();
         {? _k<>null
         || ($(SKID.TAB2+'.blank()'))();
            ($(SKID.TAB2+'.ATRUSE:='+SKID.TAB+'.ref()'))();
            ($(SKID.TAB2+'.SLU:=exec(''jaki_slu'',''slo_slu'',KA.S'+$_i+')'))();
            ($(SKID.TAB2+'.SLO:=KA.KW'+$_i))();
            ($(SKID.TAB2+'.LP:='+$_i))();
            ($(SKID.TAB2+'.KW:=POZ.SUM$2'))();
            ($(SKID.TAB2+'.add'))()
         || {? var_pres('TPOW')>100
            || TPOW.prefix(_i);
               {? TPOW.first()
               || {!|? ($(SKID.TAB2+'.blank()'))();
                       ($(SKID.TAB2+'.ATRUSE:='+SKID.TAB+'.ref()'))();
                       ($(SKID.TAB2+'.SLU:=exec(''jaki_slu'',''slo_slu'',TPOW.SLU)'))();
                       ($(SKID.TAB2+'.SLO:=exec(''jaki_slo'',''slo_slu'','+SKID.TAB2+'.SLU().SLU,TPOW.SLO)'))();
                       ($(SKID.TAB2+'.LP:='+$_i))();
                       ($(SKID.TAB2+'.KW:=TPOW.KW$2'))();
                       ($(SKID.TAB2+'.add'))();
                       TPOW.del()
                  !}
               ?}
            ?}
         ?}
      ?}
   !};
   SLUAPPL.cntx_pop();
   SLU.cntx_pop();
   ($(SKID.TAB2+'.cntx_pop()'))()
?}


\eSkidWa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [8.50]
:: OPIS: Przed redakcją pola ATRDEF.WARS. Służy do wyznaczenie wartości domyślnej
::       o typie zgodnym z definicją cechy.
::       WOLANA: (MG)
::   WE: _a - miejsce wywołania
::          = 0 - wartości domyślne
::          = 1 - przed redakcją SKID.WDKLASA
::          = 2 - tabela użyć
::   WY: 0 - blokada redakcji pola
::  OLD: \eSkidWa/skid2.fml
::----------------------------------------------------------------------------------------------------------------------

_a:={? _ || _a || 0 ?};
_name:='Wartość';
_SKIDRED:=SKID.mk_edit(,,'skid_red');
_tab:='SKID';
_fld:='';
_wd:=
{? _a=0 || 'SKID.WARTOSCD'
|? _a=1 ||'SKID.WDKLASA'
|| 'SKID.WDUSE'
?};
_tab1:=
{? _a=0 || 'ATRDEF'
|? _a=1 || 'ATRDEFWD'
|| _b
?};
{? _a=1 || ATRDEFWD.CECHA()
|? _a=2 || ($(_tab1+'.CECHA()'))()
?};
: kontekst wywołania _cntx=1 - definicja cechy lub miejsce podpięcia cechy
: _cntx=2 - użycie cechy
_cntx:=
{? 0=_a | 1=_a || 1
|? 2=_a || 2
?};
{? ATRDEF.TYP='S'
 | {? 0=_a
   || ATRDEF.CZY_FOR='T'
   |? 1=_a
   || ATRDEFWD.CZY_FOR='T'
   |? 2=_a
   || 0
   ?}
|| _fld:='STRING01';
   _dl:=50;
   _war:='form('+_tab+'.'+_fld+')';
   _name:={? (_a=0 & ATRDEF.CZY_FOR='T') | (_a=1 & ATRDEFWD.CZY_FOR='T') || 'Formuła' || _name ?};
   SKID.STRING01:=($(_tab1+'.WARS'))()
|? ATRDEF.TYP='N'
|| _fld:='NUMBER01';
   _dl:=20;
   _war:='form('+_tab+'.'+_fld+',,,''0.'')';
   SKID.NUMBER01:=($(_tab1+'.WARR'))()
|? ATRDEF.TYP='D'
|| _fld:={? ATRDEF.SLOWNIK='' || 'DATE01' || 'DATE02' ?};
   _dl:=10;
   _war:='form('+_tab+'.'+_fld+',,1)';
   _t_f:=_tab+'.'+_fld;
   {? ($(_tab1+'.WARR'))()
   || _date:=10+tm_form(($(_tab1+'.WARR'))());
      ($_t_f)():=date(#(4+_date),#(2+(5-_date)),#(_date+2))
   || ($_t_f)():=date(0,0,0)
   ?}
|? ATRDEF.TYP='T'
|| _fld:='TIME01';
   _dl:=8;
   _war:='form('+_tab+'.'+_fld+',,3)';
   {? ($(_tab1+'.WARR'))()
   || _time:=8+(11-tm_form(($(_tab1+'.WARR'))()));
      SKID.TIME01:=time(#(2+_time),#(2+(3-_time)),#(_time+2))
   || SKID.TIME01:=time(0,0,0)
   ?}
?};
SKID.win_efld(_SKIDRED,ATRDEF,'AKRONIM',,,8,,1,'Cecha');
SKID.win_efld(_SKIDRED,ATRDEF,'OPIS',,,,,1,'',1);
SKID.win_efld(_SKIDRED,,_fld,,,_dl,,,_name,,
{? _name='Formuła' || 'Formuła wyznaczająca wartość cechy' || 'Wartość domyślna cechy' ?});
_btnok:=SKID.win_ebtn(_SKIDRED,'text=%1,panel=bottom,align=end'['Ok'@],"'key:F2'");
_btnan:=SKID.win_ebtn(_SKIDRED,'text=%1,panel=bottom,align=end'['Anuluj'@],"'key:Esc'");
SKID.btn_eopt(_SKIDRED,_btnok,'tooltip='+exec('help_red_ok','#window','P'));
SKID.btn_eopt(_SKIDRED,_btnan,'tooltip='+exec('help_red_esc','#window','A'));
SKID.win_edit(_SKIDRED);
SKID.hdr_edit('Wartość cechy');
{? _rr:=SKID.edit() || ($_wd)():=($_war)() ?};
exec('aH3Wartd','cechy_dodatkowe',_tab1,_wd,_cntx);
{? _a=2
|| _rr
|| win_disp();
   0
?}


\usu_wce2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Akcja Usun wszystkie dla okienek wert. tabeli SKID.TAB
::  OLD: \usu_wce2/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć wszystkie wiersze?'@)
|| {? ($(SKID.TAB+'.first()'))()
   || do();
      {! |?
         {? exec('be_del_atruse','cechy_dodatkowe')
         || exec('del_wyr','cechy_dodatkowe',1);
            ($(SKID.TAB+'.del()'))()
         || ($(SKID.TAB+'.next()'))()
         ?}
      !};
      end()
   ?}
?}


\dod_wcen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Akcja Dolacz dla okienek wert. tabeli SKID.TAB
::  OLD: \dod_wcen/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=0;
pop_kon:='';
SKID.WARS:=''; SKID.WARR:=0;
($(SKID.TAB+'.cntx_psh()'))();
($(SKID.TAB+'.prefix()'))();
($(SKID.TAB+'.blank()'))();
ATRDEF.index('AKRONIM');
ATRDEF.prefix(BPMN.SYM_DOM,'T');
_wer:=ATRDEF.mk_sel('Wybierz cechę'@,,,'atrdef_wer');
ATRDEF.win_fld(_wer,,'AKRONIM');
ATRDEF.win_fld(_wer,,'OPIS');
{? SKID.CASE='E_SROD'
|| ATRDEF.win_act(_wer,,'Formuła','Wybierz'@@,,,,
                  "{? ATRDEF.TYP_CECH='SKID01' || FUN.info('Wybierz cechę innego typu.'@) || sel_exit; 1?}",1)
|| ATRDEF.win_act(_wer,,'Formuła','Wybierz'@@,,,,"sel_exit();1",1);
   {? SKID.CASE='E_DOKU'
   || ATRDEF.index('TYP');
      ATRDEF.prefix(BPMN.SYM_DOM,'SKID01')
   ?}
?};
ATRDEF.win_sel(_wer);
{? ATRDEF.select()
|| {? ATRDEF.r_lock(1,1)
   || ATRDEF.r_unlock();
      _fun:='{|'+SKID.TAB+'|! WARS:=SKID.WARS; WARR:=SKID.WARR; CECHA:=ATRDEF.ref; '+
            {? SKID.CASE='K_POZDOK' || 'POZDOK:=@.POZDOK.ref();' || '' ?}+
            {? SKID.CASE='E_DOKU' || 'SRDO:=@.SRDO.ref();' || '' ?}+
            {? SKID.CASE='E_SROD' || 'SRSR:=@.SRSR.ref();' || '' ?}+
            'add |}';
      ($_fun)();
      ($(SKID.TAB+'.CECHA()'))();
      _ref:=($(SKID.TAB+'.ref()'))();
      {? ATRDEF.TYP_CECH='SKID01'
      || exec('ini_tpow','dok_fks');
         exec('ust_poz','cechy_dodatkowe');
         {? POZ.edit("exec('spr_poz','dok_fks')")
         || exec('poz2tab','cechy_dodatkowe');
            exec('do_wyr','cechy_dodatkowe');
            _fun:='{|'+SKID.TAB+'|! WARS:=SKID.WARS; WARR:=SKID.WARR; put |}';
            ($_fun)()
         || ($(SKID.TAB+'.del()'))()
         ?};
         obj_del(TPOW)
      || {? ATRDEF.CZY_FOR='T'
         || exec('setSkidW','cechy_dodatkowe',1)
         || {? ATRDEF.TYP='S' || SKID.WARS:=ATRDEF.WARS || SKID.WARR:=ATRDEF.WARR ?}
         ?};
         ($(SKID.TAB+'.WARR:=SKID.WARR;'+SKID.TAB+'.WARS:=SKID.WARS'))();
         ($(SKID.TAB+'.put()'))();
         {? exec('pop_wcec','cechy_dodatkowe')
         || _ref:=($(SKID.TAB+'.ref()'))()
         || ($(SKID.TAB+'.del()'))()
         ?}
      ?}
   || FUN.info('Definicja jest edytowana przez innego operatora'@)
   ?}
?};
VAR_DEL.delete('pop_kon');
ATRDEF.win_sel('WER');

:: TODO: zmienić tą linię dla dawnej ESTRY!!!
{? BPMN.SYM_DOM<>'ESTRA' || ATRDEF.win_dict('WER') ?};

($(SKID.TAB+'.cntx_pop()'))();
{? 0<>_ref
|| ($(SKID.TAB+'.seek(_a)'))(_ref)
?}


\aH3Wartd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI, RL [8.50]
:: OPIS: Po redakcji pola SKID.WARTOSCD
::WE: _a - Akronim tabeli
::    _b - Wartość
::    _c = 1 - w kontekście definicji
::       = 2 - w kontekście użycia
::  OLD: \aH3Wartd/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_war:=($_b)();
_cntx:=_c;
($(_tab+'.WARR'))():=0;
($(_tab+'.WARS'))():='';
{? 'S'=ATRDEF.TYP
 | {? _a='ATRDEFWD' || ATRDEFWD.CZY_WARD='N' & ATRDEFWD.CZY_FOR='T' ?} & 1=_cntx
 | (_a='ATRDEF' & ATRDEF.CZY_FOR='T' & 1=_cntx)
|| ($(_tab+'.WARS'))():=_war
|? 'N'=ATRDEF.TYP
|| ($(_tab+'.WARR'))():=#_war
|? 'D'=ATRDEF.TYP
|| ($(_tab+'.WARR'))():=
   {? $date(0,0,0)<>_war & _war<>''
   || tm_stamp(#(4+_war),#(2+(5-_war)),#(_war+2))
   ?}
|? 'T'=ATRDEF.TYP
|| ($(_tab+'.WARR'))():=
   {? $time(0,0,0)<>_war
   || tm_stamp(1971,1,1,#(2+_war),#(2+(3-_war)),#(_war+2))
   ?}
?};
{? _cntx=2 || ($(_tab+'.WARS'))():=_war ?};
SKID.WARS:=($(_tab+'.WARS'))(); SKID.WARR:=($(_tab+'.WARR'))();
1


\sH3Wdkla
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI, RL [8.50]
:: OPIS: Przed wyswietleniem pola SKID.WDKLASA
::  OLD: \sH3Wdkla/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~ATRDEFWD.CECHA
|| SKID.WDKLASA:=''
|| ATRDEFWD.CECHA();
   {? ATRDEFWD.CZY_WARD='T'
   || exec('sH3Wartd','cechy_dodatkowe');
      SKID.WDKLASA:=SKID.WARTOSCD
   || SKID.WDKLASA:=
      {? 'S'=ATRDEF.TYP | ATRDEFWD.CZY_FOR='T'
      || ATRDEFWD.WARS
      |? 'N'=ATRDEF.TYP
      || form(ATRDEFWD.WARR,,,'0.')
      |? 'D'=ATRDEF.TYP
      || {? ATRDEFWD.WARR
         || 10+tm_form(ATRDEFWD.WARR)
         || form(date(0,0,0),,1)
         ?}
      |? 'T'=ATRDEF.TYP
      || {? ATRDEFWD.WARR
         || 8+(11-tm_form(ATRDEFWD.WARR))
         || form(time(0,0,0),,1)
         ?}
      || ''
      ?}
   ?}
?}


\sH3Wartd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI, RL [8.50]
:: OPIS: Przed wyswietleniem pola SKID.WARTOSCD
::  OLD: \sH3Wartd/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
SKID.WARTOSCD:=
{? 'S'=ATRDEF.TYP | ATRDEF.CZY_FOR='T'
|| ATRDEF.WARS
|? 'N'=ATRDEF.TYP
|| form(ATRDEF.WARR,,,'0.')
|? 'D'=ATRDEF.TYP
|| {? ATRDEF.WARR
   || 10+tm_form(ATRDEF.WARR)
   || form(date(0,0,0),,1)
   ?}
|? 'T'=ATRDEF.TYP
|| {? ATRDEF.WARR
   || 8+(11-tm_form(ATRDEF.WARR))
   || form(time(0,0,0),,1)
   ?}
|| ''
?};
1


\cDDAdwdW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI,RL [8.50]
:: OPIS: Akcja Dolacz (pusta dziedzina) okienka WER tabeli ATRDEFWD
::  OLD: \cDDAdwdW/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
ATRDEFWD.index('KLASA');
ATRDEFWD.prefix(SKID.MASKA,($('#'+SKID.TAB+'.ref'))());
ATRDEFWD.win_edit('RED');
ATRDEF.actions('WER','DPU',,1);
ATRDEFWD.blank();
{? ATRDEFWD.edit()
|| ATRDEFWD.MASKA:=SKID.MASKA;
   ATRDEFWD.REF:=($('#'+SKID.TAB+'.ref'))();
   {? var_press('BIT')>100
   || ATRDEFWD.SQLREF:=BIT.refsql(($(SKID.TAB+'.ref'))())
   || ATRDEFWD.SQLREF:=BB.refsql(($(SKID.TAB+'.ref'))())
   ?};
   ATRDEFWD.add();
   {? ATRDEF.TYP_CECH='SKID01' & ATRDEFWD.CZY_WARD<>'T'
   || {? ATRDEFWD.r_lock(1,1,1)
      || ATRDEFWD.CECHA();
         DEKRET.win_edit('DEF_POW');
         DEKRET.index('REF');
         DEKRET.prefix(REF.FIRMA,'ATRDEFWD',#ATRDEFWD.ref());
         {? DEKRET.first() || DEKRET.del() ?};
         {? ~exec('pod_dek','cechy_dodatkowe') || DEKRET.blank() ?};
         DEKRET.MASKA:='ATRDEFWD'; DEKRET.REF:=#ATRDEFWD.ref();
         DEKRET.FIRMA:=REF.FIRMA;
         DEKRET.add();
         KA.DEKRET:=DEKRET.ref();
         {!|? {? DEKRET.edit()
              || _p:=exec('dek_emp','cechy_dodatkowe')=0
              || _p:=1
              ?};
              {? _p
              || _wyb:=FUN.choice('Brak danych definicji dekretu.\nRezygnujesz z dołączenia definicji dekretacji?'@,,
                                  'Ustaw z definicji cechy'@,'Tak'@,,,'Nie'@);

                {? _wyb=2
                || do(); ATRDEFWD.del(); DEKRET.del(); end(); 0
                |? _wyb=1
                || do(); DEKRET.del(); ATRDEFWD.CZY_WARD:='T'; ATRDEFWD.put(); end(); 0
                || 1
                ?}
             || do(); DEKRET.put(); ATRDEFWD.put(); end(); ATRDEFWD.r_unlock(); 0
             ?}
         !}
      || FUN.info('\nPowiązanie cechy edytowane przez innego użytkownika.'@)
      ?}
   ?}
?};
ATRDEF.actions('WER','',,1)


\pod_dek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Funkcja podpowiada zawartosc DEKRETU jesli istnieje dla schematu dekretacji
::  OLD: \pod_dek/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
::{? FL.SYSTEM='KASA' & SKID.TAB='POZOPER'
::|| POZOPER.OPER();
::   SKID_DEK.index('SYSTEM');
::   SKID_DEK.prefix(FL.SYSTEM,'R',form(OPER.KOD,8)+form(POZOPER.KOD));
::   {? SKID_DEK.first()
::   || {!|? {? ($('SKID_DEK.DEKRET_'+(1+(ATRDEF.AKRONIM+2))))()
::           || _ok:=1; ($('SKID_DEK.DEKRET_'+(1+(ATRDEF.AKRONIM+2))+'()'))();0
::           || SKID_DEK.next()
::           ?}
::      !}
::   ?}
::|? FL.SYSTEM='ESTRA' & SKID.TAB='TPD'
::|| SKID_DEK.index('SYSTEM');
::   SKID_DEK.prefix(FL.SYSTEM,'W',form(TPD.T,2));
::   {? SKID_DEK.first()
::   || {!|? {? ($('SKID_DEK.DEKRET_'+(1+(ATRDEF.AKRONIM+2))))()
::           || _ok:=1; ($('SKID_DEK.DEKRET_'+(1+(ATRDEF.AKRONIM+2))+'()'))();0
::           || SKID_DEK.next()
::           ?}
::      !}
::   ?}
::?};
_ok


\dek_emp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI,RL [8.50]
:: OPIS: Funkcja sprawdza czy definicja dekretu jest wypelniona
::   WY: 0/1
::  OLD: \dek_emp/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
DEKRET.KONTOTXT<>'' | DEKRET.KONTO | DEKRET.KW_PLN | DEKRET.TRESC | DEKRET.KW_WAL |
DEKRET.WALUTA | DEKRET.KURS_WAL | DEKRET.OPERACJA | DEKRET.N_Z | DEKRET.DATA | SKID.SWZ<>''


\bAdwdCec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Przed redakcja pola ATRDEFWD.CECHA
::  OLD: \bAdwdCec/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
-menu_txt<>'popraw'


\czy_skid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Przed redakcja pola ATRDEFWD.CZY_FOR
::  OLD: \czy_skid/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
ATRDEFWD.CECHA();
ATRDEF.TYP_CECH<>'SKID01'


\aAtrwWar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Przed redakcja pola ATRDEFWD.CZY_WARD
::  OLD: \aAtrwWar/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
~(-menu_txt='popraw' & ATRDEF.TYP_CECH='SKID01'); 1


\bH3Wdkla
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Przed redakcja pola SKID.WDKLASA
::  OLD: \bH3Wdkla/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ATRDEFWD.CECHA & ATRDEFWD.CZY_WARD='N' & ATRDEF.TYP_CECH<>'SKID01'
|| exec('eSkidWa','cechy_dodatkowe',1)
?}


\aAdwdCec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI, RL [8.50]
:: OPIS: Po redakcji pola ATRDEFWD.CECHA
::  OLD: \aAdwdCec/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ATRDEFWD.CECHA
|| ATRDEFWD.CECHA();
   SKID.WARTOSCD:=ATRDEF.WARS;
   {? ATRDEF.CZY_FOR='T' || ATRDEFWD.CZY_FOR:='T' ?};
   {? ATRDEF.TYP_CECH<>'SKID01'
   || {? (('S'=ATRDEF.TYP | ATRDEF.CZY_FOR='T') & SKID.WDKLASA='')
       | ('N|D|T'*ATRDEF.TYP
         &('0|'+form(date(0,0,0),,1)+'|'+form(time(0,0,0),,3))*SKID.WDKLASA)
      || exec('aH3Wartd','cechy_dodatkowe','ATRDEF','SKID.WARTOSCD',1);
         SKID.WDKLASA:=SKID.WARTOSCD;
         ATRDEFWD.CZY_FOR:=ATRDEF.CZY_FOR;
         ATRDEFWD.CZY_KOP:=ATRDEF.CZY_KOP;
         ATRDEFWD.AKTYWNY:=ATRDEF.AKTYWNY;
         exec('aH3Wartd','cechy_dodatkowe','ATRDEFWD','SKID.WDKLASA',1)
      ?}
   ?};1
?}


\bAtrwWar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Po redakcji pola ATRDEFWD.CZY_WARD
::  OLD: \bAtrwWar/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ATRDEFWD.CZY_WARD='T' || ATRDEFWD.WARS:=''; ATRDEFWD.WARR:=0 ?};
1


\cPAdwdWe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI,RL [8.50]
:: OPIS: Popraw po okienka WER tabeli ATRDEFWD
::  OLD: \cPAdwdWe/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
del:=0;
{? ATRDEFWD.r_lock(1,1,1)
|| ATRDEFWD.CECHA();
   {? ATRDEF.TYP_CECH='SKID01' & ATRDEFWD.CZY_WARD<>'T'
   || exec('cPAdwdW2','cechy_dodatkowe')
   || ATRDEFWD.win_edit('RED');
      {? ATRDEFWD.edit()
      || ATRDEFWD.put();
         {? ATRDEF.TYP_CECH='SKID01' & ATRDEFWD.CZY_WARD<>'T'
         || exec('cPAdwdW2','cechy_dodatkowe')
         ?}
      ?}
   ?};
   {? del=0 || ATRDEFWD.r_unlock() ?}
|| FUN.info('Powiązanie cechy redaguje inny operator.'@)
?};
&del


\cPAdwdW2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Popraw dla okienka WER tabeli ATRDEFWD - cecha typu SKID01
::  OLD: \cPAdwdW2/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
del:=0;
DEKRET.win_edit('DEF_POW');
DEKRET.index('REF');
DEKRET.prefix(REF.FIRMA,'ATRDEFWD',#ATRDEFWD.ref);
{? ~DEKRET.first()
|| DEKRET.blank();
   DEKRET.MASKA:='ATRDEFWD'; DEKRET.REF:=#ATRDEFWD.ref;
   DEKRET.add()
?};
KA.DEKRET:=DEKRET.ref();
{!
|? {? DEKRET.edit()
   || {? exec('dek_emp','cechy_dodatkowe')
      || do(); ATRDEFWD.put(); DEKRET.put(); end();_p:=0
      || _p:=1
      ?}
   ||  _p:=~exec('dek_emp','cechy_dodatkowe')
   ?};
   {? _p
   || _wyb:=FUN.choice('Brak danych definicji dekretu.\nRezygnujesz z definicji dekretacji?'@,,
                                  'Ustaw z definicji cechy'@,'Tak'@,,,'Nie'@);
      {? _wyb=2
      || do(); {? ATRDEFWD.count=0 || ATRDEFWD.del() ?}; DEKRET.del(); del:=end(); 0
      |? _wyb=1
      || do(); DEKRET.del(); ATRDEFWD.CZY_WARD:='T'; ATRDEFWD.put(); end(); 0
      || 1
      ?}
   ?}
!}


\pw_swz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula przed wysw. pola SKID.SWZ
::  OLD: \pw_swz/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_WYR.index('SKID_WYR');
SKID_WYR.prefix(REF.FIRMA,KA.TAB,($(KA.TAB+'.name()'))(),#KA.DEKRET,'X');
_s:=SKID_WYR.size();
{? _s=1 & SKID_WYR.first()
|| SKID.SWZ:=SKID_WYR.SLU().SLU().NAZ;
   SKID.KWZ:={? SKID_WYR.KOD || SKID_WYR.KOD || null ?}
|? _s>1
|| SKID.SWZ:='<- F3 ->'; SKID.KWZ:=null
|| SKID.SWZ:=''; SKID.KWZ:=null
?};
1


\pw_kwz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula przed wysw. pola SKID.KWZ
::  OLD: \pw_kwz/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
SKID.SWZ<>'' & SKID.SWZ<>'<- F3 ->'


\skid_swz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula Wzorzec pola SKID.SWZ
::  OLD: \skid_swz/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
'<- \\F\\3 ->#'


\pr_swz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula po red. pola SKID.SWZ
::  OLD: \pr_swz/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pw_swz','cechy_dodatkowe');
1


\f3_swz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula F3 pola SKID.SWZ
::  OLD: \f3_swz/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_WYR.index('SKID_WYR');
SKID_WYR.prefix(REF.FIRMA,KA.TAB,($(KA.TAB+'.name()'))(),#KA.DEKRET,'X');
SKID_WYR.win_sel('WER2');
SKID_WYR.select();
1


\cWAdwdWe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Akcja Wyswietl okienka WER tabeli ATRDEFWD
::  OLD: \cWAdwdWe/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
_bylo:=0;
ATRDEFWD.CECHA();
{? ATRDEF.TYP_CECH='SKID01'
|| DEKRET.index('REF');
   DEKRET.prefix(REF.FIRMA,'ATRDEFWD',#ATRDEFWD.ref);
   {? DEKRET.first()
   || DEKRET.win_edit('DEF_POW'); _bylo:=1;
      KA.DEKRET:=DEKRET.ref();
      DEKRET.display()
   ?}
?};
{? _bylo=0 || ATRDEFWD.win_edit('RED'); ATRDEFWD.display() ?}


\cUAdwdWe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Usun dla okienka WER tabeli ATRDEFWD
::  OLD: \cUAdwdWe/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ATRDEFWD.count()<>0
|| FUN.info('Powiązanie wykorzystane w wartościach cech.\nUsunięcie niemożliwe.'@)
|| {? ATRDEFWD.r_lock(1,1,1)
   || {? FUN.ask('Usunąć bieżący wiersz?'@)
      || do();
         ATRDEFWD.CECHA();
         {? ATRDEF.TYP_CECH='SKID01'
         || DEKRET.index('REF');
            DEKRET.prefix(REF.FIRMA,'ATRDEFWD',#ATRDEFWD.ref);
            {? DEKRET.first()
            || {!|? SKID_WYR.index('SKID_WYR');
                    SKID_WYR.prefix(REF.FIRMA,'DEKRET',DEKRET.name,#DEKRET.ref,'X');
                    {? SKID_WYR.first() || {!|? SKID_WYR.del() !} ?};
                    {? DEKRET.count()=0 || DEKRET.del() ?}
               !}
            ?}
         ?};
         ATRDEFWD.del();
         {? ~end() || ATRDEFWD.r_unlock() ?}
      || ATRDEFWD.r_unlock()
      ?}
   || FUN.info('Powiązanie cechy redaguje inny operator.'@)
   ?}
?};
1


\bH3Wduse
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI, RL [8.50]
:: OPIS: Przed redakcja pola SKID.WDUSE
::  OLD: \bH3Wduse/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
($(SKID.TAB+'.CECHA()'))();
{? ATRDEF.TYP_CECH<>'SKID01'
|| exec('eSkidWa','cechy_dodatkowe',2,SKID.TAB); 0
?}


\cDDAtdWe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI,RL [8.50]
:: OPIS: Akcja Dolacz (pusta dziedzina) okienka WER tabeli ATRDEF
::  OLD: \cDDAtdWe/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
SKID.ADTYPRED:='T';
ATRDEF.blank();
ATRDEF.SYSTEM:='FST';
SKID.WARTOSCD:='';
ATRDEF.win_edit('RED');
{? ATRDEF.edit("exec('chkAtrd','cechy_dodatkowe')")
|| ATRDEF.add(1)
?}


\chkAtrd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI,RL [8.50]
:: OPIS: Walidacja rekordu tabel ATRDEF
::   WY: _r = Akronim pola do ponownej redakcji
::       = '' - wpp
::  OLD: \chkAtrd/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
_rr:='';
_akr:=ATRDEF.AKRONIM; _typ:=ATRDEF.TYP_CECH; _sys:='FST'; _nok:=0;
ATRDEF.cntx_psh(); ATRDEF.index('TYP'); ATRDEF.prefix(_sys,_typ,_akr);
{? ATRDEF.first() || _nok:=1 ?};
ATRDEF.cntx_pop();
{? 4+ATRDEF.TYP_CECH='SKID'
|| FUN.info('Typ cechy nie może zawierać na początku słowa ''SKID''.'@); _rr:='TYP_CECH'
|? ATRDEF.TYP_CECH='KOSZT' & ATRDEF.TYP<>'N'
|| FUN.info('Cecha typu ''KOSZT'' musi być typu liczbowego.'@); _rr:='TYP'
|? ATRDEF.AKRONIM=''
|| FUN.info('\nWypełnij pole ''Akronim''.\n'@); _rr:='AKRONIM'
|? ATRDEF.OPIS=''
|| FUN.info('\nWypełnij pole ''Opis''.\n'@); _rr:='OPIS'
|? _nok
|| FUN.info('W systemie istnieje już definicja z takim samym typem cechy i akronimem.'@); _rr:='TYP_CECH'
?};
_rr


\eAtrdTyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI, RL [8.50]
:: OPIS: Przed redakcja pola ATRDEF.TYP
::  OLD: \eAtrdTyp/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
SKID.ADTYPRED='T'


\aUAtdWer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI, RL [8.50]
:: OPIS: Usun przed okienka WER tabeli ATRDEF
::  OLD: \aUAtdWer/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ATRDEF.r_lock(1,1)
|| ATRDEF.r_unlock();
   {? 4+ATRDEF.TYP_CECH<>'SKID'
   || {? ATRDEF.count()<>0
      || FUN.info('Dla wybranej definicji istnieją cechy w środkach trwałych/dokumentach wartościowych.\nDefinicja nie '@+
                  'może być usunięta'@);0
      || 1
      ?}
   || FUN.info('Definicja cechy zastrzeżona.\nNie może być usunięta.'@);0
   ?}
|| FUN.info('Definicja cechy obsługiwana przez innego operatora.\nOperacja usunięcia zablokowana.'@)
?}


\cPAtdWer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI, RL [8.50]
:: OPIS: Popraw po okienka WER tabeli ATRDEF
::  OLD: \cPAtdWer/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
SKID.ADTYPRED:='N';
{? ATRDEF.r_lock(1,1)
|| _count:=ATRDEF.count();
   {? _count=0
   || {? _ok:=ATRDEF.r_lock(1,1)
      || {? 4+ATRDEF.TYP_CECH<>'SKID' & ATRDEF.WARR=0 & ATRDEF.WARS=''|| SKID.ADTYPRED:='T' ?}
      || FUN.emsg('Nie udało się zablokować rekordu tabeli definicji cech (ATRDEF).'@)
      ?}
   || _ok:=1
   ?};
   {? _ok
   || {? ATRDEF.TYP_CECH='SKID01'
      || DEKRET.win_edit('DEF_CECH');
         DEKRET.index('REF');
         DEKRET.prefix(REF.FIRMA,'ATRDEF',#ATRDEF.ref);
         {? ~DEKRET.first()
         || _add:=1;
            DEKRET.blank(); DEKRET.MASKA:='ATRDEF'; DEKRET.REF:=#ATRDEF.ref; DEKRET.add()
         || _add:=0
         ?};
         KA.DEKRET:=DEKRET.ref();
         {? DEKRET.edit()
         || do();
            {? exec('dek_emp','cechy_dodatkowe')
            || DEKRET.put()
            || DEKRET.del()
            ?};
            ATRDEF.put();
            end()
         || {? _add || DEKRET.del() ?}
         ?}
      || ATRDEF.win_edit('RED');
         {? ATRDEF.edit("exec('chkAtrd','cechy_dodatkowe')")
         || ATRDEF.put()
         ?}
      ?}
   ?};
   ATRDEF.r_unlock()
|| FUN.info('Atrybut edytowany przez innego użytkownika.'@)
?}


\cWAtrWer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Akcja Wyswietl okienka WER tabeli ATRDEF
::  OLD: \cWAtrWer/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ATRDEF.TYP_CECH='SKID01'
|| DEKRET.win_edit('DEF_CECH');
   DEKRET.index('REF');
   DEKRET.prefix(REF.FIRMA,'ATRDEF',#ATRDEF.ref);
   {? DEKRET.first()
   || KA.DEKRET:=DEKRET.ref()
   || DEKRET.blank();
      KA.DEKRET:=null
   ?};
   DEKRET.display()
|| ATRDEF.win_edit('RED'); ATRDEF.display()
?}


\setSkidW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [8.41]
:: OPIS: wyznacza wartosc cech wyznaczanej formula
::   WE: _a = 1 - w kontekście ATRDEF
::          = 2 - w kontekście ATRDEFWD
::  OLD: \setSkidW/skid201.fml
::----------------------------------------------------------------------------------------------------------------------
_warFor:=
{? 1=_a || ($ATRDEF.WARS)()
|? 2=_a || ($ATRDEFWD.WARS)()
: sytuacja błędna
|| ''
?};
{? ATRDEF.TYP='S'
|| SKID.WARS:={? 2=type_of(_warFor) || _warFor || '' ?}
|| {? 'D'=ATRDEF.TYP & 4=type_of(_warFor)
   || _warFor:=tm_stamp(_warFor~1,_warFor~2,_warFor~3)
   |? 'T'=ATRDEF.TYP & 5=type_of(_warFor)
   || _warFor:=tm_stamp(1971,1,1,_warFor~1,_warFor~2,_warFor~3)
   ?};
   SKID.WARR:={? 1=type_of(_warFor) || _warFor || 0 ?}
?}


\po_atyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Po red. polem ATRDEF.CZY_FOR
::  OLD: \po_atyp/skid201.fml
::----------------------------------------------------------------------------------------------------------------------
{? ATRDEF.CZY_FOR<>SKID.FIKS || ATRDEF.WARR:=0; ATRDEF.WARS:=''; SKID.WARTOSCD:='' ?};
1


\pr_atyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Przed red. polem ATRDEF.CZY_FOR
::  OLD: \pr_atyp/skid201.fml
::----------------------------------------------------------------------------------------------------------------------
SKID.FIKS:=ATRDEF.CZY_FOR;
1


\cechy_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Wyświetla wartości cech dodatkowych
::   WE: _a: 'E_DOKU'-dokument, 'E_SROD'-środek
::----------------------------------------------------------------------------------------------------------------------
exec('F','object');
{? _a='E_DOKU'
|| SKID.CASE:=_a;
   SKID.TAB:='ATRUSE_E';
   SKID.TAB2:='ATR_WYRE';
   ATRUSE_E.index('DOKU');
   ATRUSE_E.prefix(SRDO.ref());
   ATRUSE_E.win_sel('WER');
   {? _=1 | ATRUSE_E.first()
   || {? SRDO.Z='T' || ATRUSE_E.select(,,,'PDUZ:DZ') || ATRUSE_E.select() ?}
   ?}
|? _a='E_SROD'
|| _tmp:=SKID.fld_fml('STRING01','F3',"exec('dH3Wartd','cechy_dodatkowe')");
   SKID.CASE:=_a;
   SKID.TAB:='ATRUSE_E';
   SKID.TAB2:='ATR_WYRE';
   ATRUSE_E.index('SROD');
   ATRUSE_E.prefix(SRST.SRSR);
   ATRUSE_E.win_sel('WER2');
   ATRUSE_E.select(,,,'FZ:ZF');
   SKID.fld_fml('STRING01','F3',_tmp)
?}


\fnd_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Dla kodu waluty znajduje ref w SLO (w slowniku Walut)
:/ WE: _a - kod waluty
:/ WY: ref SLO lub null
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
SLU.index('NAZ');
SLU.prefix();
{? _a<>'' & _a<>'PLN' & SLU.find_key('WALUTY')
|| SLO.index('SL');SLO.prefix(); {? SLO.find_key(SLU.ref(),_a) || _ref:=SLO.ref ?}
?};
_ref


\ae_a_cec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Przed red. ATRUSE_K.CECHY
::----------------------------------------------------------------------------------------------------------------------
-menu_txt='dołącz'


\rek_wcen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Akcja Rekord przed dla okienek wert. tabeli SKID.TAB
::----------------------------------------------------------------------------------------------------------------------
{? ($(SKID.TAB+'.ATRDEFWD=null'))() || exec('findtmp','#color') ?}


\def_wcen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Akcja definicja wartosci dla okienek wert. tabeli SKID.TAB
::----------------------------------------------------------------------------------------------------------------------
KA.TAB:='DEKRET';
KA.STR:='X';
_ref:=($(SKID.TAB+'.ATRDEFWD'))();
{? _ref<>null
|| ATRDEFWD.prefix();
   {? ATRDEFWD.seek(_ref)
   || exec('cPAdwdWe','cechy_dodatkowe')
   || FUN.info('Nie znaleziono definicji wartości.')
   ?}
|| FUN.info('Wartość dodawana przez operatora.\nBrak definicji wartości.')
?}


\def_cech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Wyświetlenie listy zdefiniowanych cech
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(208)='N'
|| FUN.info('Obsługa cech dodatkowych w obszarze Środki trwałe jest wyłączona.\nAby ją włączyć zmień wartość'@+
            ' parametru 208.'@)
|| KA.TAB:='DEKRET';
   KA.STR:='X';
   ATRDEF.index('TYP');
   ATRDEF.prefix('FST');
   ATRDEF.win_sel('WER');
   ATRDEF.select()
?}


\be_del_atruse
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Przed usunięciem rekordu z ATRUSE_E
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? ATRDEF.r_lock(1,1)
|| ATRDEF.unlock; _wyn:=1
?};
_wyn



:Sign Version 2.0 jowisz:1045 2023/09/12 08:31:42 2a0f0793d6437215b14e847eed4560b077ab43a79e302069f3761c77e693f74a20f3d025093aab32398c5490e47055df07c24c2cc5780323f1dc4b9eefbd49e7ab7e3154ce2f14b779fc2730fdcd0d332e562e3a96c700149c0ddaa60564e54e4b8a74e0b53c13c38fbe1c31debf94f311c1df5f26215840911198d192d42cbe
