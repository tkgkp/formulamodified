:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: phr_sz_tab.fml
:: Utworzony: 09.03.2017
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły wyzwalaczy dla tabel obszarów PSZ.
::======================================================================================================================


\szb_licz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Wylicza wartości pól w okresie i pozycji budżetu.
::   WE: _a [TABLE] - Uchwyt tabeli na rzecz której przeprowadzane będą obliczenia.
::  OLD: \szb_licz/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
_plan:=_a.KW_PLAN+{? _a=SZB_POZ || _a.KW_POZ ?};
_a.KW_JEST:=_plan-_a.KW_REAL-_a.KW_BLOK;
{? _a=SZB_POZ & _a.WYLICZ<>'T'
|| _a.KW_PLAN:=0
?};
{? ~_plan
|| _a.KW_JEST:=0
?};
_a.KW_PROC:={? _plan || (100*_a.KW_REAL/_plan)$2 ?};
1


\szb_okr_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZB_OKR.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \szb_okr_ba/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
exec('szb_okr_modb','phr_sz_tab');

exec('dok_addb','phr_tab',SZB_OKR) & exec('szb_okr_chk','phr_sz_tab',0)


\szb_okr_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZB_OKR.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \szb_okr_bp/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZB_OKR*'PUTB|'
|| return(1)
?};
exec('szb_okr_modb','phr_sz_tab');

exec('dok_putb','phr_tab',SZB_OKR) & exec('szb_okr_chk','phr_sz_tab',1)


\szb_okr_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZB_OKR.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \szb_okr_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',SZB_POZ,'SZB_POZ',SZB_OKR.ref())


\szb_okr_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZB_OKR.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \szb_okr_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',SZB_OKR,_a);
{? SZB_OKR.SZK_PLAN<>null
|| exec('szb_poz_plan_a','psz')
?};
~~


\szb_okr_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZB_OKR.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \szb_okr_ap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZB_OKR*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',SZB_OKR,_a);
~~


\szb_okr_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZB_OKR.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\szb_okr_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Wywoływana z wyzwalaczy przed dołącz i popraw.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('szb_licz','phr_sz_tab',SZB_OKR);

{? SZB_OKR.PLAN<>'T'
|| SZB_OKR.SZK_PLAN:=null()
|| SZB_OKR.OD:=SZB_OKR.SZK_PLAN().OD;
   SZB_OKR.DO:=SZB_OKR.SZK_PLAN().DO;
   SZB_OKR.RODZAJ:=exec('kod_ref','ext_slo','SZB_OROD','PLAN','Plan szkoleń')
?};

1


\szb_okr_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \szb_okr_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZB_OKR*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZB_OKR,
   {? SZB_OKR.PLAN='T'
   || $("_a.table(_b,"+$_mode+",,'SZK_PLAN')")
   || $("_a.table(_b,"+$_mode+",,'PLAN','OD','DO','RODZAJ')")
   ?},
   "{? _b.DO<_b.OD || _a.err_fld(_b,'OD',1,'Podano niespójne daty.'@) || 1 ?}",
   "_a.in_set(_b,'PLAN',,'T','N')",
   "{? _b.PLAN='T' || _a.record(_b,,'SZK_PLAN') || 1 ?}",
   "{? _b.PLAN='T' & _b.SZK_PLAN<>null
    || _b.SZK_PLAN();
       {? _b.OD<>SZK_PLAN.OD | _b.DO<>SZK_PLAN.DO
       || _a.err_fld(_b,'OD',1,'Okres budżetu niezgodny z planem.'@)
       || 1
       ?}
    || 1
    ?}"
)


\szb_poz_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZB_POZ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \szb_poz_ba/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
exec('szb_poz_modb','phr_sz_tab');
exec('dok_addb','phr_tab',SZB_POZ) & exec('szb_poz_chk','phr_sz_tab',0)


\szb_poz_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZB_POZ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \szb_poz_bp/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZB_POZ*'PUTB|'
|| return(1)
?};
exec('szb_poz_modb','phr_sz_tab');
exec('dok_putb','phr_tab',SZB_POZ) & exec('szb_poz_chk','phr_sz_tab',1)


\szb_poz_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZB_POZ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \szb_poz_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_tmp','#table',SZB_POZ,'SZB_POZ',#SZB_POZ.ref())


\szb_poz_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZB_POZ.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \szb_poz_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_adda','phr_tab',SZB_POZ,_a)
|| exec('szb_poz_licz','phr_sz_tab',SZB_POZ.SZB_OKR)
?};
~~


\szb_poz_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZB_POZ.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \szb_poz_ap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZB_POZ*'PUTA|'
|| return()
?};
{? exec('dok_puta','phr_tab',SZB_POZ,_a)
|| exec('szb_poz_licz','phr_sz_tab',SZB_POZ.SZB_OKR)
?};
~~


\szb_poz_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZB_POZ.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \szb_poz_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_dela','phr_tab',_a)
|| exec('szb_poz_licz','phr_sz_tab',bfld('SZB_OKR'))
?};
~~


\szb_poz_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Wywoływana z wyzwalaczy przed dołącz i popraw.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
UD_SKL.cntx_psh();
SLO_KOD.cntx_psh();
SZB_POZ.SYMBOL:=SZB_POZ.UD_SKL().SYMBOL+'/'+SZB_POZ.RODZAJ().KOD;
SLO_KOD.cntx_pop();
UD_SKL.cntx_pop();
{? SZB_POZ.WYLICZ='T'
|| SZB_POZ.KW_POZ:=0
?};
exec('szb_licz','phr_sz_tab',SZB_POZ);
1


\szb_poz_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.10]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \szb_poz_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZB_POZ*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZB_POZ,
   $("_a.table(_b,"+$_mode+",,'SZB_OKR','UD_SKL','RODZAJ','WYLICZ')"),
   "_a.in_set(_b,'WYLICZ',,'T','N')"
)


\szb_poz_licz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.10]
:: OPIS: Aktualizuje pozycje budżetu.
::   WE: _a [REFERENCE] - Wskazanie okresu.
::  OLD: \poz_bud_licz/zz_data.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) & _a<>null() & ref_tab(_a)=SZB_OKR
|| _okres:=_a
|| return()
?};

{? var_pres('__SZB_POZ_LICZ')>=0
|| return()
?};
__SZB_POZ_LICZ:=1;

SZB_OKR.cntx_psh();
SZB_OKR.prefix();
{? SZB_OKR.seek(_okres)
|| _plan:=_real:=_blok:=_poz:=0;
   _dyd:=_zakw:=_wyz:=_del:=0;

   SZB_POZ.cntx_psh();
   SZB_POZ.index('SZB_POZ');
   SZB_POZ.prefix(SZB_OKR.ref(),0);
   _loop:=SZB_POZ.first();
   {!
   |? _loop
   |! {? ~SZB_POZ.SZB_POZ
      || exec('szb_poz_sum','phr_sz_tab',SZB_POZ.SZB_OKR,#SZB_POZ.ref());
         _poz+=SZB_POZ.KW_POZ;
         _plan+=SZB_POZ.KW_PLAN;
         _real+=SZB_POZ.KW_REAL;
         _blok+=SZB_POZ.KW_BLOK;
         _dyd+=SZB_POZ.DYD;
         _zakw+=SZB_POZ.ZAKW;
         _wyz+=SZB_POZ.WYZ;
         _del+=SZB_POZ.DEL
      ?};
      _loop:=SZB_POZ.next()
   !};
   SZB_POZ.cntx_pop();

   {? SZB_OKR.KW_PLAN<>_plan+_poz | SZB_OKR.KW_REAL<>_real | SZB_OKR.KW_BLOK<>_blok |
      SZB_OKR.DYD<>_dyd | SZB_OKR.ZAKW<>_zakw | SZB_OKR.WYZ<>_wyz | SZB_OKR.DEL<>_del
   || SZB_OKR.KW_PLAN:=_plan+_poz;
      SZB_OKR.KW_REAL:=_real;
      SZB_OKR.KW_BLOK:=_blok;
      SZB_OKR.DYD:=_dyd;
      SZB_OKR.ZAKW:=_zakw;
      SZB_OKR.WYZ:=_wyz;
      SZB_OKR.DEL:=_del;
      SZB_OKR.put()
   ?}
?};
SZB_OKR.cntx_pop();

&__SZB_POZ_LICZ


\szb_poz_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.10]
:: OPIS: Aktualizuje pozycje budzetu.
::   WE: _a [REFERENCE] - Wskazanie okresu.
::       _b [NUMBER]    - Pozycja budżetu.
::  OLD: \poz_bud_sum/zz_data.fml
::----------------------------------------------------------------------------------------------------------------------
_plan:=_real:=_blok:=_poz:=0;
_dyd:=_zakw:=_wyz:=_del:=0;

SZB_POZ.cntx_psh();
SZB_POZ.index('SZB_POZ');
SZB_POZ.prefix(_a,_b);
_loop:=SZB_POZ.first();
{!
|? _loop
|! exec('szb_poz_sum','phr_sz_tab',SZB_POZ.SZB_OKR,#SZB_POZ.ref());
   _poz+=SZB_POZ.KW_POZ;
   _plan+=SZB_POZ.KW_PLAN;
   _real+=SZB_POZ.KW_REAL;
   _blok+=SZB_POZ.KW_BLOK;
   _dyd+=SZB_POZ.DYD;
   _zakw+=SZB_POZ.ZAKW;
   _wyz+=SZB_POZ.WYZ;
   _del+=SZB_POZ.DEL;
   _loop:=SZB_POZ.next()
!};
SZB_POZ.cntx_pop();

SZB_WYK.cntx_psh();
SZB_WYK.index('SZB_POZ');
SZB_WYK.prefix(SZB_POZ.ref());
SZK_PRAC.cntx_psh();
SZK_OPIS.cntx_psh();
SLO_KOD.cntx_psh();
_loop:=SZB_WYK.first();
{!
|? _loop
|! _status:=SZB_WYK.SZK_PRAC().SZKOL().STATUS().KOD;
   {? _status='P' | _status='Z'
   || _blok+=SZB_WYK.SUMA
   |? _status='W'
   || _real+=SZB_WYK.SUMA;
      _dyd+=SZB_WYK.DYD;
      _zakw+=SZB_WYK.ZAKW;
      _wyz+=SZB_WYK.WYZ;
      _del+=SZB_WYK.DEL
   ?};
   _loop:=SZB_WYK.next
!};
SLO_KOD.cntx_pop();
SZK_OPIS.cntx_pop();
SZK_PRAC.cntx_pop();
SZB_WYK.cntx_pop();

{? SZB_POZ.KW_PLAN<>_plan+_poz | SZB_POZ.KW_REAL<>_real | SZB_POZ.KW_BLOK<>_blok |
   SZB_POZ.DYD<>_dyd | SZB_POZ.ZAKW<>_zakw | SZB_POZ.WYZ<>_wyz | SZB_POZ.DEL<>_del
|| {? SZB_POZ.WYLICZ='T'
   || SZB_POZ.KW_PLAN:=_poz+_plan
   || SZB_POZ.KW_PLAN:=0
   ?};
   SZB_POZ.KW_REAL:=_real;
   SZB_POZ.KW_BLOK:=_blok;
   SZB_POZ.DYD:=_dyd;
   SZB_POZ.ZAKW:=_zakw;
   SZB_POZ.WYZ:=_wyz;
   SZB_POZ.DEL:=_del;
   SZB_POZ.put()
?}


\szb_wyk_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_WYK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('szb_wyk_modb','phr_sz_tab');
exec('dok_addb','phr_tab',SZB_WYK) & exec('szb_wyk_chk','phr_sz_tab')


\szb_wyk_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_WYK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZB_WYK*'PUTB|'
|| return(1)
?};
exec('szb_wyk_modb','phr_sz_tab');
exec('dok_putb','phr_tab',SZB_WYK) & exec('szb_wyk_chk','phr_sz_tab')


\szb_wyk_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_WYK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\szb_wyk_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_WYK.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_adda','phr_tab',SZB_WYK,_a)
|| exec('szb_wyk_moda','phr_sz_tab')
?};
~~


\szb_wyk_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_WYK.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZB_WYK*'PUTA|'
|| return()
?};
{? exec('dok_puta','phr_tab',SZB_WYK,_a)
|| exec('szb_wyk_moda','phr_sz_tab')
?};
~~


\szb_wyk_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_WYK.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \szb_wyk_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_dela','phr_tab',_a)
|| SZK_PRAC.cntx_psh();
   SZK_PRAC.prefix();
   SZK_OPIS.cntx_psh();
   {? SZK_PRAC.seek(bfld('SZK_PRAC'))
   || exec('szb_poz_licz','phr_sz_tab',SZK_PRAC.SZKOL().SZB_OKR)
   ?};
   SZK_OPIS.cntx_pop();
   SZK_PRAC.cntx_pop()
?};
~~


\szb_wyk_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Wywoływana z wyzwalaczy przed dołacz i popraw, przed przeprowadzeniem testów poprawności rekordu.
::  OLD: \szb_wyk_bw/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
OSOBA.cntx_psh();
SZK_PRAC.cntx_psh();
SZK_OPIS.cntx_psh();
{? SZB_WYK.SZK_PRAC
|| SZB_WYK.P:=SZB_WYK.SZK_PRAC().P;
   SZB_WYK.OSOBA:=SZK_PRAC.P().OSOBA;
   SZB_WYK.UD_SKL:=P.WYDZIAL;
   H.cntx_psh();
   H.index('_HISTKOD');
   H.prefix(SZK_PRAC.P,'Z');
   {? H.find_le(SZK_PRAC.SZKOL().OD)
   || SZB_WYK.UD_SKL:=H.WYDZIAL
   ?};
   H.cntx_pop();
   SZB_POZ.cntx_psh();
   SZB_POZ.index('UNIQUE');
   SZB_POZ.prefix(SZK_PRAC.SZKOL().SZB_OKR);
   {? SZB_POZ.find_key(SZB_WYK.UD_SKL,SZB_WYK.SZB_PROD)
   || SZB_WYK.SZB_POZ:=SZB_POZ.ref()
   ?};
   SZB_POZ.cntx_pop()
?};
SZK_OPIS.cntx_pop();
SZK_PRAC.cntx_pop();
OSOBA.cntx_pop();
P.cntx_pop();

SZB_WYK.SUMA:=SZB_WYK.DYD+SZB_WYK.ZAKW+SZB_WYK.WYZ+SZB_WYK.DEL;

1


\szb_wyk_moda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Wywoływana z wyzwalaczy po dołącz i popraw.
::  OLD: \szb_wyk_aw/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
SZK_PRAC.cntx_psh();
SZK_OPIS.cntx_psh();
SZB_OKR.cntx_psh();
exec('szb_poz_licz','phr_sz_tab',SZB_WYK.SZK_PRAC().SZKOL().SZB_OKR);
SZB_OKR.cntx_pop();
SZK_OPIS.cntx_pop();
SZK_PRAC.cntx_pop();
{? SZB_WYK.SUMA=0
|| SZB_WYK.del()
?};
~~


\szb_wyk_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.10]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołacz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \szb_wyk_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZB_WYK*'CHK|'
|| return(1)
?};
__CHK.record(SZB_WYK,,'SZK_PRAC','UD_SKL','P','OSOBA','AUTO')=''


\szk_dat_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_DAT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',SZK_DAT) & exec('szk_dat_chk','phr_sz_tab',0)


\szk_dat_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_DAT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_DAT*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',SZK_DAT) & exec('szk_dat_chk','phr_sz_tab',1)


\szk_dat_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_DAT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\szk_dat_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_DAT.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',SZK_DAT,_a);
~~


\szk_dat_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_DAT.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_DAT*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',SZK_DAT,_a);
~~


\szk_dat_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_DAT.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\szk_dat_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Sprawdza wypelnienie wymaganych pol. Wykorzystywana w wyzwalaczach przed dolacz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_DAT*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_DAT,
   $("_a.table(_b,"+$_mode+",,'OD','DO','GEN')"),
   "_a.in_set(_b,'GEN',,'T','N')",
   "  {? _b.DO<_b.OD
      || _a.err_fld(_b,'OD',1,'Podano niespójne daty.'@)
      || 1
      ?}
   "
)


\szk_ofe_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalaczy przed dołączeniem i poprawieniem tabeli SZK_OFE.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
SZK_OFE.TRENER:=SZK_OFE.SZK_TREN().ZZ_OSOBA;
~~


\szk_ofe_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_OFE.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('szk_ofe_modb','phr_sz_tab');

exec('dok_addb','phr_tab',SZK_OFE) & exec('szk_ofe_chk','phr_sz_tab',0)


\szk_ofe_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_OFE.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_OFE*'PUTB|'
|| return(1)
?};
exec('szk_ofe_modb','phr_sz_tab');

exec('dok_putb','phr_tab',SZK_OFE) & exec('szk_ofe_chk','phr_sz_tab',1)


\szk_ofe_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_OFE.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\szk_ofe_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_OFE.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',SZK_OFE,_a);
~~


\szk_ofe_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_OFE.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_OFE*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',SZK_OFE,_a);
~~


\szk_ofe_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_OFE.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\szk_ofe_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \szk_ofe_nn/zz_table.fml
::  OLD: \szk_ofe_ck/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_OFE*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_OFE,
   $("_a.table(_b,"+$_mode+",,'SZK_ORG','SZK_WZO','MIARA')"),
   "  _zdate:=date(0,0,0);
      {? _b.OD<>_zdate & _b.DO<>_zdate & _b.DO<_b.OD
      || _a.err_fld(_b,'OD',1,'Data \"Od dnia\" nie może być późniejsza od daty \"Do dnia\".'@)
      || 1
      ?}
   ",
   "  {? _b.ILE<0   || _a.err_fld(_b,'ILE',1,'Liczba dni nie może być mniejsza od zera.'@)
      |? _b.LIMIT<0 || _a.err_fld(_b,'LIMIT',1,'Limit miejsc nie może być mniejszy od zera.'@)
      |? _b.KWOTA<0 || _a.err_fld(_b,'KWOTA',1,'Kwota nie może być mniejsza od zera.'@)
      || 1
      ?}
   "
)


\szk_opis_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Wywoływana z wyzwalaczy przed dołącz i popraw, przed przeprowadzeniem testów poprawności rekordu.
::  OLD: \szk_opis_bw/zz_table.fml
::  OLD: \szk_opis_ba/zz_table.fml
::  OLD: \szk_opis_bp/zz_table.fml
::  OLD: \SZPRmod/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
SZK_OPIS.TRENER:=SZK_OPIS.SZK_TREN().ZZ_OSOBA;

exec('zz_ocena_add','phr_tab',SZK_OPIS,'ZZ_OCENA');
exec('zz_ocena_add','phr_tab',SZK_OPIS,'OC_MER');
exec('zz_ocena_add','phr_tab',SZK_OPIS,'OC_TER');
exec('zz_ocena_add','phr_tab',SZK_OPIS,'OC_KOS');
exec('zz_ocena_add','phr_tab',SZK_OPIS,'OC_SKU');
exec('zz_ocena_add','phr_tab',SZK_OPIS,'OC_WYK');

SZK_PRAC.cntx_psh();
SZK_PRAC.index('SZK_PRAC');
SZK_PRAC.prefix(SZK_OPIS.ref());
SZK_OPIS.LU:=SZK_PRAC.size();
SZK_OPIS.LU_POTW:=exec('oblicz_potw','szkolenia');
SZK_PRAC.cntx_pop();

exec('oblicz_do_opis','szkolenia');

SZK_OPIS.BS_GEN:=
   {? SZK_OPIS.BS_ANK=null
   || {? SZK_OPIS.BS_TMP<>null
      || 'N'
      || ''
      ?}
   || 'T'
   ?};

{? SZK_OPIS.SZB_OKR<>null
|| SZK_OPIS.SZB_OROD:=SZK_OPIS.SZB_OKR().RODZAJ
|? SZK_OPIS.SZB_OROD<>null
|| SZB_OKR.cntx_psh();
   SZB_OKR.prefix();
   _loop:=SZB_OKR.first();
   _done:=0;
   {!
   |? _loop & ~_done
   |! {? SZB_OKR.OD<=SZK_OPIS.OD & SZK_OPIS.OD<=SZB_OKR.DO & SZB_OKR.RODZAJ=SZK_OPIS.SZB_OROD
      || SZK_OPIS.SZB_OKR:=SZB_OKR.ref();
         _done:=1
      ?};
      _loop:=SZB_OKR.next()
   !};
   SZB_OKR.cntx_pop()
?};

1


\szk_opis_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_OPIS.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \szk_opis_ba/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return(1)
?};

{? exec('dok_addb','phr_tab',SZK_OPIS) & exec('szk_opis_chk','phr_sz_tab',0)
|| exec('szk_opis_modb','phr_sz_tab')
?}


\szk_opis_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_OPIS.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \szk_opis_bp/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_OPIS*'PUTB|'
|| return(1)
?};
: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return(1)
?};

{? exec('dok_putb','phr_tab',SZK_OPIS) & exec('szk_opis_chk','phr_sz_tab',1)
|| exec('szk_opis_modb','phr_sz_tab')
?}


\szk_opis_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_OPIS.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \szk_opis_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('del_ndx','#table',SZK_PRAC,'SZK_PRAC',SZK_OPIS.ref())
|| return(0)
?};

: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return(1)
?};

exec('set_null','#table',ZZ_OCENA,'ZZ_LINK',SZK_OPIS.ZZ_DOK) &
exec('set_null','#table',ZA_FORM,'ZZ_LINK',SZK_OPIS.ZZ_DOK) &
exec('del_ndx','#table',SZB_WYK,'OSOBA',SZK_OPIS.ref()) &
exec('del_ndx','#table',ZA_ZEST,'NAZWA',ref_name(SZK_OPIS.ZZ_DOK),SZK_OPIS.ZZ_DOK) &
exec('del_ndx','#table',ZA_WAR,'UNIQUE',ref_name(SZK_OPIS.ZZ_DOK),SZK_OPIS.ZZ_DOK)


\szk_opis_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_OPIS.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return()
?};

exec('dok_adda','phr_tab',SZK_OPIS,_a);
~~


\szk_opis_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_OPIS.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \szk_opis_ap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_OPIS*'PUTA|'
|| return()
?};
: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return()
?};

{? var_pres('__OPIS_AKT')>=0
|| return()
?};

{? ~exec('dok_puta','phr_tab',SZK_OPIS,_a)
|| return()
?};

__OPIS_AKT:=1;
exec('opis_bud_auto','phr_sz_tab',SZK_OPIS.STATUS<>bfld('STATUS'));

_prog:=SZK_OPIS.PROMOCJA;
{? _prog<>bfld('PROMOCJA')
: zmiana progu zdawalności - aktualizacja ankiety
|| exec('akt_prog','phr_dane',1,_prog)
?};

_wd_mod:=(SZK_OPIS.WD<>bfld('WD'));
:: Jeżeli zmieniły się daty szkolenia, to modyfikację należy wysłac na portal.
_dt_mod:=(SZK_OPIS.OD<>bfld('OD') | SZK_OPIS.DO<>bfld('DO')) & exec('lic','#b_domain','POR');
{? SZK_OPIS.DYD_U<>bfld('DYD_U') | SZK_OPIS.DYD<>bfld('DYD') |
   SZK_OPIS.WYZ_U<>bfld('WYZ_U') | SZK_OPIS.WYZ<>bfld('WYZ') |
   SZK_OPIS.DEL_U<>bfld('DEL_U') | SZK_OPIS.DEL<>bfld('DEL') |
   SZK_OPIS.ZAKW_U<>bfld('ZAKW_U') | SZK_OPIS.ZAKW<>bfld('ZAKW') |
   _wd_mod |
   _dt_mod
|| SZK_PRAC.cntx_psh();
   SZK_PRAC.index('SZK_PRAC');
   SZK_PRAC.prefix(SZK_OPIS.ref());
   _loop:=SZK_PRAC.first();
   {!
   |? _loop
   |! {? SZK_PRAC.U_KOSZT='T' | _wd_mod | _dt_mod
      || SZK_PRAC.put(,1)
      ?};
      _loop:=SZK_PRAC.next()
   !};
   SZK_PRAC.cntx_pop()
?};
&__OPIS_AKT;

{? SZK_OPIS.TRENER<>bfld('TRENER')
:  zmiana trenera - aktualizuj oceny
|| exec('ocena_trenera','phr_dane',SZK_OPIS.TRENER);
   exec('ocena_trenera','phr_dane',bfld('TRENER'))
?};
~~


\szk_opis_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_OPIS.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \szk_opis_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return()
?};

{? do_state()<>1 | ~_a
|| return()
?};

exec('zz_ocena_del','phr_tab','ZZ_OCENA');
exec('zz_ocena_del','phr_tab','OC_MER');
exec('zz_ocena_del','phr_tab','OC_TER');
exec('zz_ocena_del','phr_tab','OC_KOS');
exec('zz_ocena_del','phr_tab','OC_SKU');
exec('zz_ocena_del','phr_tab','OC_WYK');

exec('dok_dela','phr_tab',_a);
~~


\szk_opis_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \szk_opis_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_OPIS*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_OPIS,
   $("_a.table(_b,"+$_mode+",,'ORG','TEMAT','OD','DO')"),
   "{? _b.DO<_b.OD || _a.err_fld(_b,'OD',1,'Podano niespójne daty.'@) || 1 ?}",
   "{? _b.ILE<0 || _a.err_fld(_b,'ILE',1,'Liczba dni nie może być ujemna.'@) || 1 ?}",
   "{? _b.GODZ<0 || _a.err_fld(_b,'GODZ',1,'Liczba godzin nie może być ujemna.'@) || 1 ?}",
   "{? _b.LIMIT<0 || _a.err_fld(_b,'LIMIT',1,'Limit miejsc nie może być ujemny.'@) || 1 ?}",
   "{? _b.POTW_DO>=_b.OD
    || _a.err_fld(_b,'POTW_DO',1,
         'Data potwierdzenia uczestnictwa w szkoleniu musi być\n'
         'wcześniejsza od daty rozpoczęcia szkolenia.'@)
    || 1
    ?}",
   "{? _b.MONIT_OD>=_b.OD
    || _a.err_fld(_b,'MONIT_OD',1,
         'Data rozpoczęcia wysyłania monitów o potwierdzenie uczestnictwa w szkoleniu\n'
         'musi być wcześniejsza od daty rozpoczęcia szkolenia.'@)
    || 1
    ?}",
   "{? _b.WD<>#0 & _b.WD<_b.DO
    || _a.err_fld(_b,'WD',1,'Data ważności szkolenia nie może być wcześniejsza od daty zakończenia.'@)
    || 1
    ?}",
   "{? _b.BADANIE<>#0 || _a.record(_b,,'BS_TMP')
    |? _b.BS_TMP<>null || _a.record(_b,,'BADANIE')
    || 1
    ?}",
   "{? _b.BADANIE<>#0 & _b.BADANIE<=_b.DO
    || _a.err_fld(_b,'BADANIE',1,'Data badania skuteczności szkolenia musi być późniejsza od daty jego zakończenia.'@)
    || 1
    ?}"
)


\szk_org_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_ORG.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \szk_org_ba/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return(1)
?};

{? exec('dok_addb','phr_tab',SZK_ORG) & exec('szk_org_chk','phr_sz_tab',0)
|| exec('zz_ocena_add','phr_tab',SZK_ORG)
?}


\szk_org_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_ORG.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_ORG*'PUTB|'
|| return(1)
?};
: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return(1)
?};

exec('dok_putb','phr_tab',SZK_ORG) & exec('szk_org_chk','phr_sz_tab',1)


\szk_org_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_ORG.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \szk_org_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',SZK_OPIS,'ORG_DATA',SZK_ORG.ref()) &

: czy jest PSZ, POC, PRE, PBA?
{? exec('jest_lic','phr_tab')
|| exec('set_null','#table',ZZ_OCENA,'ZZ_LINK',SZK_ORG.ZZ_DOK)
|| 1
?}


\szk_org_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_ORG.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return()
?};

exec('dok_adda','phr_tab',SZK_ORG,_a);
~~


\szk_org_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_ORG.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_ORG*'PUTA|'
|| return()
?};
: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return()
?};

exec('dok_puta','phr_tab',SZK_ORG,_a);
~~


\szk_org_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_ORG.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \szk_org_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return()
?};

{? do_state()=1 & _a
|| exec('zz_ocena_del','phr_tab');
   exec('dok_dela','phr_tab',_a)
?};
~~


\szk_org_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \szk_org_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_ORG*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_ORG,
   $("_a.table(_b,"+$_mode+",,'NAZWA')")
)


\szk_plan_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_PLAN.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',SZK_PLAN) & exec('szk_plan_chk','phr_sz_tab',0)


\szk_plan_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_PLAN.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PLAN*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',SZK_PLAN) & exec('szk_plan_chk','phr_sz_tab',1)


\szk_plan_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_PLAN.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',SZK_PSZK,'PLAN',SZK_PLAN.ref()) &
exec('del_ndx','#table',SZK_PLAN,'SZK_TREE',#SZK_PLAN.ref())


\szk_plan_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_PLAN.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',SZK_PLAN,_a);
~~


\szk_plan_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_PLAN.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PLAN*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',SZK_PLAN,_a);
~~


\szk_plan_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_PLAN.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\szk_plan_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \szk_plan_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PLAN*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_PLAN,
   $("_a.table(_b,"+$_mode+",,'OD','DO','TYP','AKC')"),
   "  {? _b.DO<_b.OD
      || _a.err_fld(_b,'OD',1,'Podano niespójne daty.'@)
      || 1
      ?}
   ",
   "_a.in_set(_b,'AKC',,'T','N')"
)


\szk_prac_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Wywoływana z wyzwalaczy przed dołącz i popraw.
::  OLD: \szk_prac_bw/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
SZK_PRAC.SUMA:=SZK_PRAC.DEL+SZK_PRAC.DYD+SZK_PRAC.WYZ+SZK_PRAC.ZAKW;

{? SZK_PRAC.P
|| P.cntx_psh();
   P.prefix();
   SZK_PRAC.P();
   SZK_PRAC.WYDZIAL:=P.WYDZIAL;
   SZK_PRAC.KK:=P.KK;
   SZK_PRAC.STN:=P.ST;
   {? SZK_PRAC.UMLOJN
   || UMLOJN.cntx_psh();
      UMLOJN.prefix();
      {? SZK_PRAC.P<>SZK_PRAC.UMLOJN().P
      || SZK_PRAC.UMLOJN:=null()
      || F_ZATR.cntx_psh();
         F_ZATR.prefix();
         {? P.F_ZATR().KOD<>'P'
         || SZK_PRAC.UMLOJN:=null()
         ?};
         F_ZATR.cntx_pop()
      ?};
      UMLOJN.cntx_pop()
   ?};
   P.cntx_pop()
|| SZK_PRAC.WYDZIAL:=null();
   SZK_PRAC.KK:=null();
   SZK_PRAC.STN:=null();
   SZK_PRAC.UMLOJN:=null()
?};

1


\szk_prac_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_PRAC.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \szk_prac_ba/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
exec('szk_prac_modb','phr_sz_tab');

: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return(1)
?};

{? exec('dok_addb','phr_tab',SZK_PRAC) & exec('szk_prac_chk','phr_sz_tab',0)
|| exec('ustal_wd','szkolenia',SZK_PRAC.P,SZK_PRAC.SZKOL().SZK_WZO,null);
   exec('wyl_prac','szkolenia',SZK_PRAC.U_KOSZT='T',null);
:  utwórz ocenę skuteczności szkolenia
   exec('zz_ocena_add','phr_tab',SZK_PRAC,'SK_OCENA');
   1
?}


\szk_prac_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_PRAC.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \szk_prac_bp/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PRAC*'PUTB|'
|| return(1)
?};
exec('szk_prac_modb','phr_sz_tab');

: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return(1)
?};

{? exec('dok_putb','phr_tab',SZK_PRAC) & exec('szk_prac_chk','phr_sz_tab',1)
|| exec('ustal_wd','szkolenia',SZK_PRAC.P,SZK_PRAC.SZKOL().SZK_WZO,SZK_PRAC.ref());
   exec('wyl_prac','szkolenia',SZK_PRAC.U_KOSZT='T',SZK_PRAC.ref());
   1
?}


\szk_prac_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_PRAC.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return(1)
?};

SZK_ZAP.cntx_psh();
SZK_ZAP.index('UNIQUE');
SZK_ZAP.prefix(SZK_PRAC.SZKOL().SZK_WZO);
{!
|? SZK_ZAP.find_key(SZK_PRAC.ref(),SZK_PRAC.P)
|! SZK_ZAP.SZK_PRAC:=null;
   {? ~SZK_ZAP.put()
   || SZK_ZAP.cntx_pop();
      return(0)
   ?}
!};
SZK_ZAP.cntx_pop();

exec('set_null','#table',ZZ_OCENA,'ZZ_LINK',SZK_PRAC.ZZ_DOK) &
exec('set_null','#table',ZA_FORM,'ZZ_LINK',SZK_PRAC.ZZ_DOK) &
exec('del_ndx','#table',SZB_WYK,'SZK_PRAC',SZK_PRAC.ref())


\szk_prac_moda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Wywoływana z wyzwalaczy po dołącz i popraw.
::  OLD: \szk_prac_aw/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
exec('prac_bud_auto','phr_sz_tab');
exec('szk_prac_opis_akt','phr_sz_tab',SZK_PRAC.SZKOL);
~~


\szk_prac_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_PRAC.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \szk_prac_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return()
?};

{? ~exec('dok_adda','phr_tab',SZK_PRAC,_a)
|| return()
?};

exec('szk_prac_zap','phr_sz_tab',SZK_PRAC.P,SZK_PRAC.SZKOL().SZK_WZO,null,SZK_PRAC.ref());

SZK_OPIS.cntx_psh();
SZK_OPIS.clear();
SZK_OPIS.put();
SZK_OPIS.cntx_pop();

exec('szk_prac_moda','phr_sz_tab');
~~


\szk_prac_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_PRAC.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \szk_prac_ap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PRAC*'PUTA|'
|| return()
?};
: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return()
?};
{? ~exec('dok_puta','phr_tab',SZK_PRAC,_a)
|| return()
?};

{? SZK_PRAC.P<>bfld('P')
|| exec('szk_prac_adda','phr_sz_tab',_a);
   exec('szk_prac_zap','phr_sz_tab',bfld('P'),SZK_PRAC.SZKOL().SZK_WZO,SZK_PRAC.ref(),null)
?};

exec('szk_prac_moda','phr_sz_tab');
~~


\szk_prac_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_PRAC.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \szk_prac_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
exec('szk_prac_opis_akt','phr_sz_tab',bfld('SZKOL'));

: czy jest PSZ, POC, PRE, PBA?
{? ~exec('jest_lic','phr_tab')
|| return()
?};

: usuń ocenę skuteczności szkolenia
{? do_state()=1 & _a
|| exec('zz_ocena_del','phr_tab','SK_OCENA')
?};

{? ~exec('dok_dela','phr_tab',_a)
|| return()
?};
~~


\szk_prac_opis_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Aktualizacja opisu szkolenia po zmianach na liście uczestników.
::   WE: _a [_SZK_OPIS] - szkazanie opisu szkolenia
::   WY:
::----------------------------------------------------------------------------------------------------------------------
: aktualizacja szkolenia
SZK_OPIS.cntx_psh();
SZK_OPIS.prefix();
{? SZK_OPIS.seek(_a)
|| SZK_OPIS.put()
?};
SZK_OPIS.cntx_pop();
SZK_OPIS.get();
~~


\szk_prac_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \szk_prac_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PRAC*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_PRAC,
   $("_a.table(_b,"+$_mode+",,'SZKOL','P')")
)


\szk_prac_zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Wywołania z wyzwalaczy - wstawia wartość w pole SZK_ZAP.SZK_PRAC.
::   WE: _a - wskazanie na pracownika
::       _b - wskazanie na wzorzec szkolenia
::       _c - wskazanie na uczestnika szkolenia
::       _d - nowa wartość wskazania na uczestnika
::  OLD: \szk_prac_zap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=_d
|| return()
?};

SZK_ZAP.cntx_psh();
SZK_ZAP.index('UNIQUE');
SZK_ZAP.prefix(_b);
{? SZK_ZAP.find_key(_c,_a)
|| SZK_ZAP.SZK_PRAC:=_d;
   {? ~SZK_ZAP.put(1)
   || SZK_ZAP.del()
   ?}
?};
SZK_ZAP.cntx_pop()


\szk_prog_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_PROG.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',SZK_PROG) & exec('szk_prog_chk','phr_sz_tab',0)


\szk_prog_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_PROG.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PROG*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',SZK_PROG) & exec('szk_prog_chk','phr_sz_tab',1)


\szk_prog_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_PROG.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',SZK_PWZO,'UNIQUE',SZK_PROG.ref())


\szk_prog_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_PROG.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_TYP,_a);
~~


\szk_prog_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_PROG.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PROG*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',SZK_PROG,_a);
~~


\szk_prog_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_PROG.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\szk_prog_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Sprawdza wypelnienie wymaganych pol. Wykorzystywana w wyzwalaczach przed dolacz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \szk_prog_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PROG*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_PROG,
   $("_a.table(_b,"+$_mode+",,'NAZWA','OD','DO')"),
   "  {? _b.DO<_b.OD
      || _a.err_fld(_b,'OD',1,'Podano niespójne daty.'@)
      || 1
      ?}
   ",
   "  {? _b.KOSZT<0
      || _a.err_fld(_b,'KOSZT',1,'Koszt nie może być mniejszy od zera.'@)
      || 1
      ?}
   "
)


\szk_pszk_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Wywoływana z wyzwalaczy przed dołącz i popraw.
::----------------------------------------------------------------------------------------------------------------------
{? SZK_PSZK.SZK_ZAP=null
|| return()
?};

{? SZK_PSZK.PRZEN=''
|| SZK_PSZK.PRZEN:='N'
?};

_mask:=SZK_ZAP.name();
SZK_ZAP.use(ref_name(SZK_PSZK.SZK_ZAP));

P.cntx_psh();
SZK_ZAP.cntx_psh();

SZK_PSZK.SZK_ZAP();

SZK_PSZK.P:=SZK_ZAP.P;
SZK_PSZK.OSOBA:=SZK_ZAP.P().OSOBA;
SZK_PSZK.UD_SKL:=SZK_ZAP.UD_SKL;
SZK_PSZK.STN:=SZK_ZAP.STN;
SZK_PSZK.KK:=SZK_ZAP.KK;

SZK_ZAP.cntx_pop();
P.cntx_pop();

SZK_ZAP.use(_mask);
~~


\szk_pszk_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_PSZK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('szk_pszk_modb','phr_sz_tab');

exec('szk_pszk_chk','phr_sz_tab',0)


\szk_pszk_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_PSZK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PSZK*'PUTB|'
|| return(1)
?};
exec('szk_pszk_modb','phr_sz_tab');

exec('szk_pszk_chk','phr_sz_tab',1)


\szk_pszk_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_PSZK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\szk_pszk_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_PSZK.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\szk_pszk_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_PSZK.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PSZK*'PUTA|'
|| return()
?};
~~


\szk_pszk_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_PSZK.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\szk_pszk_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \szk_plan_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PSZK*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_PSZK,
   $("_a.table(_b,"+$_mode+",,'SZK_PLAN','SZK_ZAP','PRZEN')"),
   "_a.in_set(_b,'PRZEN',,'T','N')"
)


\szk_pucz_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_PUCZ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
_numer:=1;
SZK_PUCZ.cntx_psh();
SZK_PUCZ.index('SZK_PUCZ');
SZK_PUCZ.prefix(SZK_PUCZ.SZK_PROG);
{? SZK_PUCZ.last()
|| _numer:=SZK_PUCZ.NUMER+1
?};
SZK_PUCZ.cntx_pop();
SZK_PUCZ.NUMER:=_numer;

exec('dok_addb','phr_tab',SZK_PUCZ) & exec('szk_pucz_chk','phr_sz_tab',0)


\szk_pucz_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_PUCZ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PUCZ*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',SZK_PUCZ) & exec('szk_pucz_chk','phr_sz_tab',1)


\szk_pucz_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_PUCZ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\szk_pucz_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_PUCZ.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',SZK_PUCZ,_a);
~~


\szk_pucz_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_PUCZ.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PUCZ*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',SZK_PUCZ,_a);
~~


\szk_pucz_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_PUCZ.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_dela','phr_tab',_a)
|| return()
?};

SZK_PUCZ.cntx_psh();
SZK_PUCZ.index('SZK_PUCZ');
SZK_PUCZ.prefix(bfld('SZK_PROG'));
_numer:=bfld('NUMER');
_break:=0;
{!
|? SZK_PUCZ.find_ge(_numer) | _break
|! {? SZK_PUCZ.NUMER<>_numer
   || SZK_PUCZ.NUMER:=_numer;
      {? SZK_PUCZ.put(1)
      || _numer+=1
      || undo('Wystąpił błąd podczas usuwania danych.'@);
         _break:=1
      ?}
   || _break:=1
   ?}
!};
SZK_PUCZ.cntx_pop();

~~


\szk_pucz_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypelnienie wymaganych pol. Wykorzystywana w wyzwalaczach przed dolacz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \szk_pwzo_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PUCZ*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_PUCZ,
   $("_a.table(_b,"+$_mode+",,'SZK_PROG','NUMER','P')")
)


\szk_pwzo_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_PWZO.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',SZK_PWZO) & exec('szk_pwzo_chk','phr_sz_tab',0)


\szk_pwzo_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_PWZO.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PWZO*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',SZK_PWZO) & exec('szk_pwzo_chk','phr_sz_tab',1)


\szk_pwzo_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_PWZO.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\szk_pwzo_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_PWZO.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',SZK_PWZO,_a);
~~


\szk_pwzo_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_PWZO.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PWZO*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',SZK_PWZO,_a);
~~


\szk_pwzo_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_PWZO.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\szk_pwzo_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypelnienie wymaganych pol. Wykorzystywana w wyzwalaczach przed dolacz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \szk_pwzo_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_PWZO*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_PWZO,
   $("_a.table(_b,"+$_mode+",,'SZK_PROG','SZK_WZO')"),
   "  {? _b.KOSZT<0
      || _a.err_fld(_b,'KOSZT',1,'Koszt nie może być mniejszy od zera.'@)
      || 1
      ?}
   "
)


\szk_stn_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_STN.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',SZK_STN) & exec('szk_stn_chk','phr_sz_tab',0)


\szk_stn_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_STN.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_STN*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',SZK_STN) & exec('szk_stn_chk','phr_sz_tab',1)


\szk_stn_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_STN.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\szk_stn_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_STN.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',SZK_STN,_a);
~~


\szk_stn_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_STN.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_STN*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',SZK_STN,_a);
~~


\szk_stn_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_STN.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\szk_stn_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_STN*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_STN,
   $("_a.table(_b,"+$_mode+",,'SZK_WZO')"),
   "_a.in_set(_b,'W',,'T','N')",
   "{? _b.WAZNE<0 || _a.err_fld(_b,'WAZNE',1,'Liczba miesięcy ważności nie może być ujemna.'@) || 1 ?}"
)


\szk_tren_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalaczy przed dołączeniem i poprawieniem tabeli SZK_TREN.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? SZK_TREN.ZZ_OSOBA<>null
|| ZZ_OSOBA.cntx_psh();
   SZK_TREN.ZZ_OSOBA();
   SZK_TREN.NAZWISKO:=ZZ_OSOBA.NAZWISKO;
   SZK_TREN.PIERWSZE:=ZZ_OSOBA.PIERWSZE;
   SZK_TREN.PESEL:=ZZ_OSOBA.PESEL;
   ZZ_OSOBA.cntx_pop()
?};
~~


\szk_tren_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_TREN.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('szk_tren_modb','phr_sz_tab');

{? exec('dok_addb','phr_tab',SZK_TREN) & exec('szk_tren_chk','phr_sz_tab',0)
|| exec('zz_ocena_add','phr_tab',SZK_TREN,'ZZ_OCENA')
?}


\szk_tren_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_TREN.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_TREN*'PUTB|'
|| return(1)
?};
exec('szk_tren_modb','phr_sz_tab');

exec('dok_putb','phr_tab',SZK_TREN) & exec('szk_tren_chk','phr_sz_tab',1)


\szk_tren_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_TREN.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('set_null','#table',ZZ_OCENA,'ZZ_LINK',SZK_TREN.ZZ_DOK)


\szk_tren_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_TREN.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',SZK_TREN,_a);
~~


\szk_tren_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_TREN.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_TREN*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',SZK_TREN,_a);
~~


\szk_tren_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_TREN.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_dela','phr_tab',_a)
|| exec('zz_ocena_del','phr_tab','ZZ_OCENA')
?};
~~


\szk_tren_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_TREN*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_TREN,
   $("_a.table(_b,"+$_mode+",,'ZZ_OSOBA')")
)


\szk_wzo_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_WZO.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',SZK_WZO) & exec('szk_wzo_chk','phr_sz_tab',0)


\szk_wzo_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_WZO.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_WZO*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',SZK_WZO) & exec('szk_wzo_chk','phr_sz_tab',1)


\szk_wzo_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_WZO.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \szk_wzo_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('set_null','#table',SZK_OPIS,'SZK_WZO',SZK_WZO.ref()) &
exec('del_ndx','#table',SZK_OFE,'SZK_ORG',SZK_WZO.ref()) &
exec('del_ndx','#table',SZK_PWZO,'SZK_PROG',SZK_WZO.ref())


\szk_wzo_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_WZO.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',SZK_WZO,_a);
~~


\szk_wzo_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_WZO.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_WZO*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',SZK_WZO,_a);
~~


\szk_wzo_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_WZO.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\szk_wzo_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \szk_wzo_nn/zz_table.fml
::  OLD: \szk_wzo_ck/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_WZO*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_WZO,
   $("_a.table(_b,"+$_mode+",,'OPIS','TEMAT','RODZAJ','OKRES','EGZAMIN')"),
   "  {? _b.WAZNE<0    || _a.err_fld(_b,'WAZNE',1,'Liczba miesięcy ważności nie może być ujemna.'@)
      |? _b.GODZ<0     || _a.err_fld(_b,'GODZ',1,'Czas szkolenia nie może być mniejszy od zera.'@)
      |? _b.PROMOCJA<0 || _a.err_fld(_b,'PROMOCJA',1,'Poziom promujący nie może być mniejszy od zera.'@)
      |? _b.KWOTA<0    || _a.err_fld(_b,'KWOTA',1,'Kwota nie może być mniejsza od zera.'@)
      || 1
      ?}
   "
)


\szk_zap_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Wywoływana z wyzwalaczy przed dołącz i popraw.
::  OLD: \szk_zap_bw/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
SLO_KOD.cntx_psh();
SLO_KOD.prefix();
_kod:=
   {? SZK_ZAP.ZGL_TYP().KOD='M'
   || 'M'
   |? SZK_ZAP.ZGL_KTO=null()
   || 'U'
   |? SZK_ZAP.ZGL_KTO=SZK_ZAP.P
   || 'P'
   || 'S'
   ?};
SZK_ZAP.ZGL_TYP:=exec('kod','ext_slo','ZGL_TYP',_kod);
SLO_KOD.cntx_pop();

{? SZK_ZAP.SZK_WZO
|| SZK_WZO.cntx_psh();
   SZK_WZO.prefix();
   {? SZK_ZAP.KOSZT=0
::    Wyliczenie wstępnej wartości szkolenia.
   || SZK_ZAP.KOSZT:=SZK_ZAP.SZK_WZO().KWOTA
   ?};
:: Pielęgnacja anomalii.
   SZK_TEM.cntx_psh();
   SZK_TEM.prefix();
   SZK_ZAP.TEMAT:=SZK_ZAP.SZK_WZO().TEMAT().TEMAT;
   SZK_TEM.cntx_pop();
   SZK_WZO.cntx_pop()
?};

P.cntx_psh();
SZK_ZAP.OSOBA:=SZK_ZAP.P().OSOBA;
{? SZK_ZAP.P<>null
|| {? SZK_ZAP.UD_SKL=null
   || SZK_ZAP.UD_SKL:=SZK_ZAP.P().WYDZIAL
   ?};
   {? SZK_ZAP.STN=null
   || SZK_ZAP.STN:=SZK_ZAP.P().ST
   ?};
   ~~
?};
SZK_ZAP.ZGL_OS:=SZK_ZAP.ZGL_KTO().OSOBA;
SZK_ZAP.WER_OS:=SZK_ZAP.WER_KTO().OSOBA;
P.cntx_pop();

{? SZK_ZAP.OD=date(0,0,0)
|| SZK_ZAP.OD:=SZK_ZAP.DATA
?};
{? SZK_ZAP.ROK=0
|| SZK_ZAP.ROK:=SZK_ZAP.OD~1
?};
{? SZK_ZAP.MC=0
|| SZK_ZAP.MC:=SZK_ZAP.OD~2
?};
{? SZK_ZAP.KWARTAL=0
|| SZK_ZAP.KWARTAL:=exec('kwartal','#datetime',SZK_ZAP.MC)
?};
~~


\szk_zap_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_ZAP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('szk_zap_modb','phr_sz_tab');

exec('dok_addb','phr_tab',SZK_ZAP) & exec('szk_zap_chk','phr_sz_tab',0)


\szk_zap_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_ZAP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_ZAP*'PUTB|'
|| return(1)
?};
exec('szk_zap_modb','phr_sz_tab');

exec('dok_putb','phr_tab',SZK_ZAP) & exec('szk_zap_chk','phr_sz_tab',1)


\szk_zap_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_ZAP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\szk_zap_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_ZAP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \szk_zap_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_adda','phr_tab',SZK_ZAP,_a)
|| SZK_WZO.cntx_psh();
   SZK_WZO.prefix();
   SZK_ZAP.SZK_WZO();
   SZK_WZO.ZAP+=1;
   SZK_WZO.put();
   SZK_WZO.cntx_pop()
?};
~~


\szk_zap_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_ZAP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \szk_zap_ap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_ZAP*'PUTA|'
|| return()
?};
{? exec('dok_puta','phr_tab',SZK_ZAP,_a)
|| {? SZK_ZAP.SZK_PRAC<>bfld('SZK_PRAC')
   || SZK_WZO.cntx_psh();
      SZK_WZO.prefix();
      SZK_ZAP.SZK_WZO();
      SZK_WZO.ZAP+=
         {? SZK_ZAP.SZK_PRAC
         || -1
         || 1
         ?};
      SZK_WZO.put();
      SZK_WZO.cntx_pop()
   ?};
   {? SZK_ZAP.P<>bfld('P') | SZK_ZAP.OSOBA<>bfld('OSOBA') |
      SZK_ZAP.UD_SKL<>bfld('UD_SKL') | SZK_ZAP.STN<>bfld('STN') |
      SZK_ZAP.KK<>bfld('KK')
   || SZK_PSZK.cntx_psh();
      _name:=
         {? SZK_ZAP.name()='szk_zap' || 'szk_pszk'
         |? SZK_ZAP.name()='szk_zah' || 'szk_pszh'
         || ''
         ?};
      {? _name<>''
      || SZK_PSZK.use(_name)
      ?};
      SZK_PSZK.index('SZK_ZAP');
      SZK_PSZK.prefix(SZK_ZAP.ref());
      _loop:=SZK_PSZK.first();
      {!
      |? _loop
      |! SZK_PSZK.put();
         _loop:=SZK_PSZK.next()
      !};
      SZK_PSZK.cntx_pop()
   ?}
?};
~~


\szk_zap_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_ZAP.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \szk_zap_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_dela','phr_tab',_a)
|| {? bfld('SZK_PRAC')=null()
   || SZK_WZO.cntx_psh();
      SZK_WZO.prefix();
      {? SZK_WZO.seek(bfld('SZK_WZO'))
      || SZK_WZO.ZAP-=1;
         SZK_WZO.put()
      ?};
      SZK_WZO.cntx_pop();
      SZK_WZO.get()
   ?}
?};
~~


\szk_zap_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::  OLD: \szk_zap_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_ZAP*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_ZAP,
   $("_a.table(_b,"+$_mode+",,'SZK_WZO','NUMER','DATA','OD','ZGL_TYP','UD_SKL','STN')"),
   "  {? _b.DO<>date(0,0,0) & _b.DO<_b.OD
      || _a.err_fld(_b,'DO',1,'Data nie może być wcześniejsza od %1.'@[$_b.OD])
      || 1
      ?}
   "
)


\szk_zok_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_ZOK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\szk_zok_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_ZOK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_ZOK*'PUTB|'
|| return(1)
?};
1


\szk_zok_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_ZOK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\szk_zok_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_ZOK.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\szk_zok_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_ZOK.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_ZOK*'PUTA|'
|| return()
?};
~~


\szk_zok_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_ZOK.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\opis_bud_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Aktualizacja budżetów szkoleń.
::  OLD: \opis_bud_auto/zz_data.fml
::----------------------------------------------------------------------------------------------------------------------
_force:=(var_pres('_a')=type_of(0) & _a<>0);
_mod:=0;
SZK_PRAC.cntx_psh();
SZK_PRAC.index('SZK_PRAC');
SZK_PRAC.prefix(SZK_OPIS.ref());
_loop:=SZK_PRAC.first();
{!
|? _loop
|! _mod+=exec('prac_bud_auto','phr_sz_tab',_force);
   _loop:=SZK_PRAC.next()
!};
SZK_PRAC.cntx_pop();
_mod


\prac_bud_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Aktualizacja budżetów szkoleń.
::  OLD: \prac_bud_auto/zz_data.fml
::----------------------------------------------------------------------------------------------------------------------
_mod:=0;
SZB_WYK.cntx_psh();
SZB_WYK.index('SZK_PRAC');
SZB_WYK.prefix(SZK_PRAC.ref());
{? SZB_WYK.first()
|| _loop:=1;
   {!
   |? {? SZB_WYK.AUTO='T'
      || _force:=(var_pres('_a')=type_of(0) & _a<>0);
         _test:=0;
         {? ~_force
         || _len:=SZB_WYK.fld_num()-1;
            _buf:=obj_new(_len);
            {! _n:=1.._len
            |! _buf[_n]:=SZB_WYK[_n]
            !}
         || _test:=1
         ?};
         SZB_WYK.SZB_PROD:=SZK_OPIS.SZB_PROD;
         SZB_WYK.ILE:=SZK_OPIS.ILE;
         SZB_WYK.DYD:={? SZK_OPIS.DYD_B='T' || SZK_PRAC.DYD ?};
         SZB_WYK.ZAKW:={? SZK_OPIS.ZAKW_B='T' || SZK_PRAC.ZAKW ?};
         SZB_WYK.WYZ:={? SZK_OPIS.WYZ_B='T' || SZK_PRAC.WYZ ?};
         SZB_WYK.DEL:={? SZK_OPIS.DEL_B='T' || SZK_PRAC.DEL ?};
         {? ~_force
         || {! _n:=1.._len |? ~_test
            |! _test:=(_buf[_n]<>SZB_WYK[_n])
            !};
            obj_del(_buf)
         ?};
         {? _test
         || _mod+=SZB_WYK.put()
         ?}
      ?};
      _loop:=SZB_WYK.next()
   !}
|? SZK_OPIS.SZB_PROD & SZK_OPIS.SZB_OROD
|| SZB_WYK.blank(1);
   SZB_WYK.SZK_PRAC:=SZK_PRAC.ref();
   SZB_WYK.SZB_PROD:=SZK_OPIS.SZB_PROD;
   SZB_WYK.AUTO:='T';
   SZB_WYK.ILE:=SZK_OPIS.ILE;
   SZB_WYK.DYD:={? SZK_OPIS.DYD_B='T' || SZK_PRAC.DYD ?};
   SZB_WYK.ZAKW:={? SZK_OPIS.ZAKW_B='T' || SZK_PRAC.ZAKW ?};
   SZB_WYK.WYZ:={? SZK_OPIS.WYZ_B='T' || SZK_PRAC.WYZ ?};
   SZB_WYK.DEL:={? SZK_OPIS.DEL_B='T' || SZK_PRAC.DEL ?};
   _mod+=SZB_WYK.add()
?};
SZB_WYK.cntx_pop();
_mod


\szk_komp_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [17.42]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_KOMP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('szk_komp_chk','phr_sz_tab',0)


\szk_komp_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [17.42]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_KOMP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_KOMP*'PUTB|'
|| return(1)
?};
exec('szk_komp_chk','phr_sz_tab',1)


\szk_komp_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [17.42]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli SZK_KOMP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\szk_komp_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [17.42]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli SZK_KOMP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\szk_komp_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [17.42]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli SZK_KOMP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_KOMP*'PUTA|'
|| return()
?};
~~


\szk_komp_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [17.42]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli SZK_KOMP.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\szk_komp_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [17.42]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \szb_komp_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_KOMP*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_KOMP,
   $("_a.table(_b,"+$_mode+",,'SZK_ZAP','ZZ_KOMP','Z')"),
   "_a.in_set(_b,'Z',,'T','N')"
)


\szk_tem_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli SZK_TEM.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('szk_tem_chk','phr_sz_tab',0)


\szk_tem_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli SZK_TEM.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_TEM*'PUTB|'
|| return(1)
?};
exec('szk_tem_chk','phr_sz_tab',1)


\szk_tem_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli SZK_TEM.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_TEM*'PUTA|'
|| return()
?};
{? ~(_a & do_state()=1)
|| return()
?};

{? bfld('TEMAT')<>SZK_TEM.TEMAT
:: Zmienił sie temat szkolenia - aktualizacja anomalii.
|| SZK_WZO.cntx_psh();
   SZK_WZO.index('SZK_WZO');
   SZK_WZO.prefix(SZK_TEM.ref());
   {? SZK_WZO.first()
::    Ten warunek ma charakter optymalizujący, jeżeli nie ma żadnych wzorców powiązanych z tematem, to kolejne kroki
::    są zbędne.
   || SZK_ZAP.cntx_psh();
      _ZAP:=SZK_ZAP.names();
      {? _ZAP.first()
      || {!
         |? {? SZK_WZO.first()
::             Pętla po wzorcach musi się wykonać dla każdej maski tabeli SZK_ZAP. Trzeba zatem ustawić się na pierwszym
::             rekordzie.
::             Kod wykonuje się w transakcji, właściwie nie ma możliwość, aby tego rekordu nie było (jego istnienie
::             zostało sprawdzone wcześniej) - moglibyśmy wykonać samo SZK_WZO.first() bez sprawdzania wyniku tej
::             operacji. Ale w ramach akcji "Kodowanie+" zachowajmy się (nad)poprawnie.
            || SZK_ZAP.use(_ZAP.NAME);
               SZK_ZAP.index('SZKOZAP');
               {!
               |? SZK_ZAP.prefix(SZK_WZO.ref());
                  {? SZK_ZAP.first()
                  || {!
                     |? {? SZK_ZAP.TEMAT<>SZK_TEM.TEMAT
                        || SZK_ZAP.TEMAT:=SZK_TEM.TEMAT;
                           SZK_ZAP.put()
                        ?};
                        SZK_ZAP.next()
                     !}
                  ?};
                  SZK_WZO.next()
               !}
            ?};
            _ZAP.next()
         !}
      ?};
      SZK_ZAP.cntx_pop()
   ?};
   SZK_WZO.cntx_pop()
?};

~~


\szk_tem_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \szb_komp_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.SZK_TEM*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(SZK_TEM,
   $("_a.table(_b,"+$_mode+",,'TEMAT')")
)

:Sign Version 2.0 jowisz:1048 2020/10/16 15:22:55 af4c8ba549f5a969b9e3fc43c33c511271fc4a515f360f77fb90660bfa1eddff9a4aadc93e29b67a14fd54c98b4e72b93de50849340352ed7489d2fcea3d3750dcc101a30fdc6cb6fe05409069846b92abccb5bface7e92066cfc57c003e2635aaf8e5b8d81e57b4ac1ca65c2bc0d8da8238be4e56ddfbc33086291823550ff4
