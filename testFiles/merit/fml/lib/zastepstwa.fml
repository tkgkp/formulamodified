:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zastepstwa.fml [17.00]
:: Utworzony: 02.09.2016
:: Autor: AMK
::======================================================================================================================
:: Zawartość: Zastępstwa użytkowników
::======================================================================================================================

\zast_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zastępstwa użytkowników - select
::----------------------------------------------------------------------------------------------------------------------
exec('zast_nag_red','zastepstwa');
USERS.cntx_psh(); USERS.index('USR_KKOD'); USERS.prefix();
OPERATOR.USER();
x_user:=OPERATOR.USER;
{? exec('hasAction','users','ZPR_ZAS_DARZ')
|| x_user:=null; zas_opc:=1;
   _grp:=USERS.grp_make(,,'zast_nag_sel1',,,"exec('exit','zws','Esc')");
   USERS.grp_sel(_grp,USERS,'NAW1',,"exec('arfr_users_zast','zastepstwa')",,,,
                 "exec('bobs_users','zastepstwa')",,,,'maximized_with_title');
   USERS.grp_splt(_grp,,'vertical','tab2',',30%');
   {? czy_pkd
   || USERS.grp_sel(_grp,ZAST_NAG,'WER',,"exec('arfr_zast_nag','zastepstwa')",,,,
                    "exec('bobs_zast_nag','zastepstwa')","exec('aobs_zast_nag','zastepstwa')",,,'maximized')
   || USERS.grp_sel(_grp,ZAST_NAG,'WERNOPKD',,"exec('arfr_zast_nag','zastepstwa')",,,,
                    "exec('bobs_zast_nag','zastepstwa')","exec('aobs_zast_nag','zastepstwa')",,,'maximized')
   ?};
   USERS.grp_splt(_grp,'tab2','horizontal','tab3',18);
   USERS.grp_sel(_grp,ZAST_POZ,'WER3',,,,,,
                 "exec('bobs_zast_poz','zastepstwa')","exec('aobs_zast_poz','zastepstwa')",,,'maximized');
   USERS.win_sel(_grp);
   AreaTitle.setTabWin(USERS,_grp);
   AreaTitle.setTitle();
   USERS.select(,1)
|| zas_opc:=2;
   _grp:=ZAST_NAG.grp_make(,,'zast_nag_sel2',,,"exec('exit','zws','Esc')");
   {? czy_pkd
   || ZAST_NAG.grp_sel(_grp,ZAST_NAG,'WER',,"exec('arfr_zast_nag','zastepstwa')",,,,
                       "exec('bobs_zast_nag','zastepstwa')","exec('aobs_zast_nag','zastepstwa')",,,'maximized')
   || ZAST_NAG.grp_sel(_grp,ZAST_NAG,'WERNOPKD',,"exec('arfr_zast_nag','zastepstwa')",,,,
                       "exec('bobs_zast_nag','zastepstwa')","exec('aobs_zast_nag','zastepstwa')",,,'maximized')
   ?};
   ZAST_NAG.grp_splt(_grp,,'vertical','tab3');
   ZAST_NAG.grp_sel(_grp,ZAST_POZ,'WER2',,,,,,
                    "exec('bobs_zast_poz','zastepstwa')","exec('aobs_zast_poz','zastepstwa')",,,'maximized');
   ZAST_NAG.win_sel(_grp);
   AreaTitle.setTabWin(ZAST_NAG,_grp);
   AreaTitle.setTitle();
   ZAST_NAG.select(,1)
?};
USERS.cntx_pop();
VAR_DEL.delete('x_user','czy_pkd')


\zast_nag_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dołączanie nagłówków zastępstw
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')=''
|| ZAST_NAG.blank();
   ZAST_NAG.USERS:=x_user;
   ZAST_NAG.ZASTNIEO:='N';
   ZAST_NAG.FIRMA:=REF.FIRMA;
   OBIEGI.B_USRROL:=''; OBIEGI.USERS:=null;
   {? ZAST_NAG.edit("exec('zast_nag_spr','zastepstwa')")
   || exec('zast_nag_add2','zastepstwa')
   ?}
|| ZAST_NAG.blank();
   ZAST_NAG.ZASTNIEO:='N';
   ZAST_NAG.FIRMA:=REF.FIRMA;
   _par:=web_global_params_get();
   {? type_of(_par)>100 & var_pres('x_user',_par)>0
   || exec('lic','zam_okr_rok');
      _o_pkd:=exec('szuk_b_dom','parses','PKD');
      _okno:={? exec('a_lic','zam_okr_rok',_o_pkd) || 'RED_W1' || 'RED_W11' ?};
      ZAST_NAG.web_efld_init(_okno,,'win_dict=SLO_WT, mark=1, editable=1',OBIEGI,'USERS','KOD');
      ZAST_NAG.USERS:=_par.x_user;
      OBIEGI.B_USRROL:=''; OBIEGI.USERS:=null;
      ZAST_NAG.web_edit(_okno,,,,"{? _a='OK'
                                  || _par:=web_global_params_get();
                                     x_user:=null;
                                     {? type_of(_par)>100 & var_pres('x_user',_par)>0
                                     || x_user:=_par.x_user
                                     ?};
                                     _pole:='';
                                     _pole:=exec('zast_nag_spr','zastepstwa');
                                     {? _pole=''
                                     || exec('zast_nag_add2','zastepstwa');
                                        ZAST_NAG.web_eclose();
                                        _tcid:=app_info('web_tcid');
                                        _tabid:=app_info('web_tabid');
                                        ZAST_NAG.web_refresh('WER_WEB2','ID_ZAST_NAG');
                                        TAB_WT.index('INDEX09'); TAB_WT.prefix(_tcid,_tabid,10);
                                        {? TAB_WT.first() || TAB_WT.web_select('WER10') ?};
                                        1
                                     || web_top_update(0,,,_pole)
                                     ?}
                                  || ZAST_NAG.web_eclose()
                                  ?}")
   ?}
?};
1


\zast_nag_add2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Dołączanie nagłówków zastępstw - wewnętrzna
::----------------------------------------------------------------------------------------------------------------------
ZAST_NAG.ZASTEPCA:=OBIEGI.USERS; rola_wyb:=null;
B_ROLE.cntx_psh();
B_ROLE.index('UNIK'); B_ROLE.prefix(ZAST_NAG.FIRMA,OBIEGI.B_USRROL);
{? B_ROLE.first() || ZAST_NAG.B_ROLE:=rola_wyb:=B_ROLE.ref() ?};
B_ROLE.cntx_pop();
{? ZAST_NAG.add()
|| VAR_DEL.delete('KOMM','KOM_ZAS');
   exec('KOMM','#object');
   KOMM.init(255);
   KOM_ZAS:=KOMM;
   exec('zast_nag_add3','zastepstwa');
   {? ZAST_NAG.DATA_OD<=date() || exec('add_upr_zast','zastepstwa') ?};
   KOM_ZAS.select('Komunikaty',,,0);
   VAR_DEL.delete('KOM_ZAS')
?};
VAR_DEL.delete('rola_wyb')


\zast_nag_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Sprawdzanie nagłówka zastępstwa dla akcji Dołącz
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? ZAST_NAG.DATA_OD=date(0,0,0)
|| FUN.info('Nie wprowadzono początkowej daty zastępstwa.'@); _zwrot:='DATA_OD'
?};
{? ZAST_NAG.DATA_DO=date(0,0,0)
|| FUN.info('Nie wprowadzono końcowej daty zastępstwa.'@); _zwrot:='DATA_DO'
?};
{? _zwrot='' & ZAST_NAG.DATA_DO<>date(0,0,0) & ZAST_NAG.DATA_OD>ZAST_NAG.DATA_DO
|| FUN.info('Błędny zakres dat zastępstwa.'@); _zwrot:='DATA_DO'
?};
{? _zwrot='' & OBIEGI.B_USRROL=''
|| FUN.info('Nie wybrano roli.'@); _zwrot:='B_USRROL'
?};
{? _zwrot='' & ~OBIEGI.USERS
|| FUN.info('Nie wybrano użytkownika.'@); _zwrot:='USERS'
?};
{? _zwrot='' & OBIEGI.USERS=x_user
|| FUN.info('Jako zastępcę nie można wybrać samego siebie.'@); _zwrot:='USERS'
?};
{? _zwrot='' & exec('powiel_zast','zastepstwa')
|| FUN.info('Wprowadzony zakres dat jest używany w innym zastępstwie.'@); _zwrot:='B_USRROL'
?};
_zwrot


\zast_nag_add3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Dodawanie zastępstw dla użytkownika
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| _tcid:=app_info('web_tcid');
   _mbid:=app_info('web_mbid');
   _sesid:=app_info('web_sesid');
   _tabid:=app_info('web_tabid');
   TAB_WT.index('INDEX04'); TAB_WT.prefix(_tcid,_tabid,10);
   {? TAB_WT.first()
   || {! |? TAB_WT.del() !}
   ?}
|| _tcid:=_mbid:=_sesid:=_tabid:=''
?};
OBIEGI.B_ROLE:=null;
B_ROLE.cntx_psh(); B_ROLE.index('UNIK'); B_ROLE.prefix(ZAST_NAG.FIRMA,OBIEGI.B_USRROL,);
{? B_ROLE.first() || OBIEGI.B_ROLE:=B_ROLE.ref() ?};
B_ROLE.cntx_pop();
B_ACTROL.cntx_psh(); B_ACTROL.index('B_ROLE'); B_ACTROL.prefix(OBIEGI.B_ROLE);
B_ROLE.cntx_psh(); B_ROLE.prefix();
{? B_ACTROL.first()
|| {! |?
      B_ACTROL.B_ACTION().B_DOMAIN();
      {? B_ACTION.PROC='T' & B_ACTION.AKT='T'
      || _dalej:=1;
         {? exec('spr_cykl','zastepstwa',x_user,OBIEGI.USERS,ZAST_NAG.DATA_OD,ZAST_NAG.DATA_DO,B_ACTION.ref())
         || _opis:='Nie można wybrać na zastępcę w czynności '@+B_ACTION.NAME+' użytkownika '@+
                   OBIEGI.USERS().DANE+' - wystąpi cykl.'@;
            exec('add_kom','zastepstwa',_tcid,_mbid,_sesid,_tabid,_opis,B_ACTION.UID)
         ?};
         {? _dalej
         || _od:=ZAST_NAG.DATA_OD; _do:=ZAST_NAG.DATA_DO;
            _ref:=ZAST_NAG.ref(); _firma:=ZAST_NAG.FIRMA; _users:=ZAST_NAG.USERS;
            ZAST_NAG.cntx_psh(); ZAST_NAG.index('DISP'); ZAST_NAG.prefix();
            ZAST_POZ.cntx_psh(); ZAST_POZ.index('FIND1'); ZAST_POZ.prefix(REF.FIRMA,_users,B_ACTION.ref());
            {? ZAST_POZ.first()
            || {! |?
                  ZAST_POZ.ZAST_NAG();
                  {? ZAST_NAG.ref()<>_ref & ZAST_NAG.B_ROLE=rola_wyb &
                     ((_od>=ZAST_NAG.DATA_OD & _od<=ZAST_NAG.DATA_DO) |
                      (_do>=ZAST_NAG.DATA_OD & _do<=ZAST_NAG.DATA_DO)
                     )
                  || _opis:='Czynność '@+B_ACTION.NAME+
                            ' jest już wybrana w innym zastępstwie obejmującym wybrany przedział czasu i wybraną rolę.';
                     exec('add_kom','zastepstwa',_tcid,_mbid,_sesid,_tabid,_opis,B_ACTION.UID);
                     _dalej:=0
                  ?};
                  _dalej & ZAST_POZ.next()
               !}
            ?};
            ZAST_NAG.cntx_pop(); ZAST_POZ.cntx_pop()
         ?};
         {? _dalej
         || ZAST_POZ.index('UNIK'); ZAST_POZ.prefix(ZAST_NAG.ref(),B_ACTION.ref());
            {? ~ZAST_POZ.first()
            || ZAST_POZ.blank();
               ZAST_POZ.ZAST_NAG:=ZAST_NAG.ref();
               ZAST_POZ.USERS:=OBIEGI.USERS;
               ZAST_POZ.B_ACTION:=B_ACTION.ref();
               ZAST_POZ.add(1)
            ?}
         ?}
      ?};
      B_ACTROL.next()
   !}
?};
B_ACTROL.cntx_pop(); B_ROLE.cntx_pop()


\add_upr_zast
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Dodawanie uprawnień czasowych dla użytkownika
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| _tcid:=app_info('web_tcid');
   _mbid:=app_info('web_mbid');
   _sesid:=app_info('web_sesid');
   _tabid:=app_info('web_tabid')
|| _tcid:=_mbid:=_sesid:=_tabid:=''
?};
ZAST_POZ.cntx_psh(); ZAST_POZ.index('UNIK'); ZAST_POZ.prefix(ZAST_NAG.ref());
{? ZAST_POZ.first()
||
:: dopisywanie użytkownika do roli ze wskazaniem na zastępstwo
   B_USRROL.cntx_psh(); B_USRROL.index('UNIK');
   B_USRROL.prefix(ZAST_NAG.FIRMA,OBIEGI.B_ROLE,OBIEGI.USERS,null());
   {? ~B_USRROL.first()
   || B_USRROL.prefix(ZAST_NAG.FIRMA,OBIEGI.B_ROLE,OBIEGI.USERS,ZAST_NAG.ref());
      {? ~B_USRROL.first()
      || _buffer:=exec('buffer','#b_usrrol');
         _buffer.blank();
         _buffer.USERS:=OBIEGI.USERS;
         _buffer.B_ROLE:=OBIEGI.B_ROLE;
         _buffer.FIRMA:=ZAST_NAG.FIRMA;
         exec('add','#b_usrrol',_buffer,ZAST_NAG.ref())
      ?}
   ?};
   B_USRROL.cntx_pop();
   USERS.cntx_psh(); USERS.prefix();
   B_PERM.cntx_psh(); B_PERM.index('NAME'); B_PERM.prefix();
   B_PERM_U.cntx_psh(); B_PERM_U.index('USER');
   B_PERM_A.cntx_psh(); B_PERM_A.index('B_ACTION');
   {! |?
      B_PERM_A.prefix(ZAST_POZ.B_ACTION);
      {? B_PERM_A.first()
      || {! |?
            B_PERM_A.B_PERM();
            B_PERM_U.prefix(ZAST_NAG.FIRMA,x_user,B_PERM.ref());
            {? B_PERM_U.first() & B_PERM_U.ACCESS='T'
            || _hasfull:=0;
:: zakładanie lub aktualizacja zapisu w uprawnieniach wspólnych dla zastępcy
               B_PERM_U.cntx_psh(); B_PERM_U.prefix(ZAST_NAG.FIRMA,OBIEGI.USERS,B_PERM.ref());
               {? B_PERM_U.first()
               || {? B_PERM_U.FULL='T' || _hasfull:=1 ?};
                  B_PERM_U.ACCESS:='T';
                  B_PERM_U.put()
               || B_PERM_U.USER:=OBIEGI.USERS;
                  B_PERM_U.FULL:='N';
                  B_PERM_U.ACCESS:='T';
                  B_PERM_U.prefix(); B_PERM_U.add(1)
               ?};
               B_PERM_U.cntx_pop();
:: kopiowanie uprawnień z zastępowanego na zastępcę o ile zastępca nie ma obecnie pełnych uprawnień
               {? ~_hasfull
               || {? B_PERM.NAME='FJKS'
                  || USERSDEP.cntx_psh(); USERSDEP.index('UNIK');
                     {? B_PERM_U.FULL='T'
                     || ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
                        {? ODD.first()
                        || {! |?
                              USERSDEP.cntx_psh();
                              USERSDEP.prefix(ZAST_NAG.FIRMA,OBIEGI.USERS,ODD.ref(),null);
                              _add:=~USERSDEP.first();
                              USERSDEP.cntx_pop();
                              {? _add
                              || USERSDEP.prefix();
                                 USERSDEP.blank(1);
                                 USERSDEP.USERS:=OBIEGI.USERS;
                                 USERSDEP.DEPT:=ODD.ref();
                                 USERSDEP.FIRMA:=ZAST_NAG.FIRMA;
                                 USERSDEP.ZAST_NAG:=ZAST_NAG.ref();
                                 USERSDEP.add(1)
                              ?};
                              ODD.next()
                           !}
                        ?};
                        ODD.cntx_pop()
                     || USERSDEP.prefix(ZAST_NAG.FIRMA,x_user);
                        {? USERSDEP.first()
                        || {! |?
                              USERSDEP.cntx_psh();
                              USERSDEP.prefix(ZAST_NAG.FIRMA,OBIEGI.USERS,USERSDEP.DEPT,null);
                              _add:=~USERSDEP.first();
                              USERSDEP.cntx_pop();
                              {? _add
                              || USERSDEP.cntx_psh(); USERSDEP.prefix();
                                 USERSDEP.USERS:=OBIEGI.USERS;
                                 USERSDEP.ZAST_NAG:=ZAST_NAG.ref();
                                 USERSDEP.add(1);
                                 USERSDEP.cntx_pop()
                              ?};
                              USERSDEP.next()
                           !}
                        ?}
                     ?};
                     USERSDEP.cntx_pop()
                  |? B_PERM.NAME='HRB'
                  || UPR_RB.cntx_psh(); UPR_RB.index('RB'); SKID_RBK.cntx_psh();
                     {? B_PERM_U.FULL='T'
                     || SKID_RBK.index('TRN'); SKID_RBK.prefix(REF.INFO,0,null);
                        {? SKID_RBK.first()
                        || {! |?
                              UPR_RB.cntx_psh();
                              UPR_RB.prefix(OBIEGI.USERS,SKID_RBK.ref(),null);
                              _add:=~UPR_RB.first();
                              UPR_RB.cntx_pop();
                              {? _add
                              || UPR_RB.prefix();
                                 UPR_RB.blank(1);
                                 UPR_RB.USER:=OBIEGI.USERS;
                                 UPR_RB.RB:=SKID_RBK.ref();
                                 UPR_RB.ZAST_NAG:=ZAST_NAG.ref();
                                 UPR_RB.add(1)
                              ?};
                              SKID_RBK.next()
                           !}
                        ?}
                     || UPR_RB.prefix(x_user);
                        {? UPR_RB.first()
                        || {! |?
                              UPR_RB.cntx_psh();
                              UPR_RB.prefix(OBIEGI.USERS,UPR_RB.RB,null);
                              _add:=~UPR_RB.first();
                              UPR_RB.cntx_pop();
                              {? _add
                              || UPR_RB.cntx_psh(); UPR_RB.prefix();
                                 UPR_RB.USER:=OBIEGI.USERS;
                                 UPR_RB.ZAST_NAG:=ZAST_NAG.ref();
                                 UPR_RB.add(1);
                                 UPR_RB.cntx_pop()
                              ?};
                              UPR_RB.next()
                           !}
                        ?}
                     ?};
                     UPR_RB.cntx_pop(); SKID_RBK.cntx_pop()
                  |? B_PERM.NAME='HRP'
                  || UPR.cntx_psh(); UPR.index('REFKOD'); TZL.cntx_psh();
                     {? B_PERM_U.FULL='T'
                     || TZL.index('KOD'); TZL.prefix();
                        {? TZL.first()
                        || {! |?
                              UPR.cntx_psh();
                              UPR.prefix(OBIEGI.USERS,TZL.KOD,null);
                              _add:=~UPR.first();
                              UPR.cntx_pop();
                              {? _add
                              || UPR.prefix();
                                 UPR.blank(1);
                                 UPR.RR:=OBIEGI.USERS;
                                 UPR.TP:=TZL.ref();
                                 UPR.ZAST_NAG:=ZAST_NAG.ref();
                                 UPR.add(1)
                              ?};
                              TZL.next()
                           !}
                        ?}
                     || UPR.prefix(x_user);
                        {? UPR.first()
                        || {! |?
                              UPR.cntx_psh();
                              UPR.prefix(OBIEGI.USERS,UPR.TP().KOD,null);
                              _add:=~UPR.first();
                              UPR.cntx_pop();
                              {? _add
                              || UPR.cntx_psh(); UPR.prefix();
                                 UPR.RR:=OBIEGI.USERS;
                                 UPR.ZAST_NAG:=ZAST_NAG.ref();
                                 UPR.add(1);
                                 UPR.cntx_pop()
                              ?};
                              UPR.next()
                           !}
                        ?}
                     ?};
                     UPR.cntx_pop(); TZL.cntx_pop()
                  |? B_PERM.NAME='ODDZ'
                  || exec('users_up_add','zastepstwa','ODDZ','ODDZ','ODDZ')
                  |? B_PERM.NAME='LMG'
                  || exec('users_up_add','zastepstwa','MAG','MG','MG')
                  |? B_PERM.NAME='LSP'
                  || exec('users_up_add','zastepstwa','STS','STS','STS')
                  |? B_PERM.NAME='LZK'
                  || exec('users_up_add','zastepstwa','STZ','STZ','STZ')
                  |? B_PERM.NAME='ZSMG'
                  || exec('users_up_add','zastepstwa','MAG','ZAM','MG')
                  |? B_PERM.NAME='ZWMG'
                  || exec('users_up_add','zastepstwa','MAG','ZAW','MG')
                  |? B_PERM.NAME='KAS'
                  || exec('kuserupr_add','zastepstwa')
                  |? B_PERM.NAME='KAS_MUL'
                  || exec('mkasaupr_add','zastepstwa')
                  |? B_PERM.NAME='TARS'
                  || exec('tarup_add','zastepstwa','S')
                  |? B_PERM.NAME='TARD'
                  || exec('tarup_add','zastepstwa','D')
                  |? B_PERM.NAME='F_ZATR'
                  || exec('f_zatr_add','zastepstwa')
                  |? B_PERM.NAME='UD_SKL'
                  || exec('ud_skl_add','zastepstwa')

                  || _opis:='Brak możliwości automatycznego ustawienia uprawnień do "'@+B_PERM.DESC+'".';
                     exec('add_kom','zastepstwa',_tcid,_mbid,_sesid,_tabid,_opis,ZAST_POZ.B_ACTION().UID)
                  ?}
               ?}
            || _user:='';
               {? USERS.seek(x_user,USERS.name(),1) || _user:=USERS.DANE ?};
               _opis:='Użytkownik '@+_user+' nie ma uprawnień do "'@+B_PERM.DESC+'".';
               exec('add_kom','zastepstwa',_tcid,_mbid,_sesid,_tabid,_opis,ZAST_POZ.B_ACTION().UID)
            ?};
            B_PERM_A.next()
         !}
      ?};
      ZAST_POZ.next()
   !};
   B_PERM_A.cntx_pop(); B_PERM.cntx_pop(); B_PERM_U.cntx_pop();
   USERS.cntx_pop()
?};
ZAST_POZ.cntx_pop()


\add_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Dodawanie rekordów do tabelki z komunikatami
::   WE: _a - tcid
::       _b - mbid
::       _c - sesid
::       _d - tabid
::       _e - opis
::       _f - czynność
::----------------------------------------------------------------------------------------------------------------------
_e:='Czynność '@+_f+'. '+_e;
{? app_info('web_sesid')<>''
|| TAB_WT.index('INDEX09'); TAB_WT.prefix();
   {? ~TAB_WT.find_key(_a,_d,10,_e)
   || TAB_WT.blank(1);
      TAB_WT.SESID:=_c;
      TAB_WT.MBID:=_b;
      TAB_WT.TCID:=_a;
      TAB_WT.TABID:=_d;
      TAB_WT.TYP:=10;
      TAB_WT.OPIS:=_e;
      TAB_WT.add()
   ?}
|? var_pres('KOM_ZAS')>0
|| KOM_ZAS.add(_e)
?}


\zast_nag_edi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Edycja nagłówków zastępstw
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')=''
|| _czy_poz:=exec('czy_zast_poz','zastepstwa');
   {? _czy_poz
   || exec('lic','zam_okr_rok');
      _o_pkd:=exec('szuk_b_dom','parses','PKD');
      czy_pkd:=exec('a_lic','zam_okr_rok',_o_pkd);
      {? ZAST_NAG.DATA_DO=date(0,0,0)
      || {? czy_pkd
         || ZAST_NAG.win_edit('RED')
         || ZAST_NAG.win_edit('REDNOPKD')
         ?};
         {? ZAST_NAG.edit("exec('zast_nag_edi_spr','zastepstwa')") || ZAST_NAG.put() ?}
      || {? czy_pkd
         || ZAST_NAG.win_edit('REDPOP1')
         || ZAST_NAG.win_edit('REDPOP2')
         ?};
         {? ZAST_NAG.edit() || ZAST_NAG.put() ?}
      ?};
      exec('zast_nag_red','zastepstwa')
   || {? ZAST_NAG.edit("exec('zast_nag_spr','zastepstwa')") || ZAST_NAG.put() ?}
   ?}
|| {? ZAST_NAG.get()
   || ZAST_NAG.web_edit('RED_W3',,,,"{? _a='OK'
                                     || ZAST_NAG.put();
                                        ZAST_NAG.web_eclose();
                                        ZAST_NAG.web_refresh('WER_WEB2','ID_ZAST_NAG'); 1
                                     || ZAST_NAG.web_eclose()
                                     ?}")
   || FUN.info('Bieżąca pozycja nie istnieje.'@);
      ZAST_NAG.web_refresh('WER_WEB2','ID_ZAST_NAG'); 1
   ?}
?};
1


\zast_nag_edi_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Sprawdzanie nagłówka zastępstwa dla akcji Popraw
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? ZAST_NAG.DATA_DO<>date(0,0,0) & ZAST_NAG.DATA_OD>ZAST_NAG.DATA_DO
|| FUN.info('Błędny zakres dat zastępstwa.'@); _zwrot:='DATA_DO'
?};
_zwrot


\zast_nag_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Okienko redakcyjne tabeli ZAST_NAG
::----------------------------------------------------------------------------------------------------------------------
exec('lic','zam_okr_rok');
_o_pkd:=exec('szuk_b_dom','parses','PKD');
czy_pkd:=exec('a_lic','zam_okr_rok',_o_pkd);
{? czy_pkd
|| ZAST_NAG.win_edit('RED')
|| ZAST_NAG.win_edit('REDNOPKD')
?}


\zast_nag_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Usuwanie zastępstw
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| ZAST_NAG.web_cntx_save();
   _us:="{? ZAST_NAG.web_cntx_load()=1
         || {? _a
            || exec('zast_nag_del1','zastepstwa');
               ZAST_NAG.web_refresh(web_top_win(0),'ID_ZAST_NAG')
            ?}
         ?}";
   {? ZAST_NAG.get()
   || web_ask(_us,'Usunąć zastępstwo?'@,FUN.TYT)
   || FUN.info('Bieżąca pozycja została już usunięta.'@);
      ZAST_NAG.web_refresh(web_top_win(0),'ID_ZAST_NAG')
   ?}
|| _size:=ZAST_NAG.sel_size();
   {? ZAST_NAG.r_lock(1,1)
   || {? _size | FUN.ask('Usunąć zastępstwa?'@)
      || exec('zast_nag_del1','zastepstwa')
      || ZAST_NAG.r_unlock()
      ?}
   |? ~_size
   || FUN.info('Dane zastępstwa obsługuje inny użytkownik.'@)
   ?}
?}


\zast_nag_del1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Usuwanie zastępstw - wewnętrzna
::----------------------------------------------------------------------------------------------------------------------
do();
ZAST_POZ.cntx_psh(); ZAST_POZ.index('UNIK'); ZAST_POZ.prefix(ZAST_NAG.ref());
{? ZAST_POZ.first()
|| {! |?
      _delr:=ZAST_POZ.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
   !}
?};
ZAST_POZ.cntx_pop();
exec('del_upr_users','zastepstwa');
_delr:=ZAST_NAG.del(,1);
{? _delr=0 || undo(); 0 ?};
end()


\del_upr_users
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Kasuje uprawnienia do danych dla danego ZAST_NAG w buforze
::----------------------------------------------------------------------------------------------------------------------
:: Role dla zastępstwa
B_USRROL.cntx_psh(); B_USRROL.index('ZAST_NAG'); B_USRROL.prefix(ZAST_NAG.ref());
{? B_USRROL.first()
|| {! |?
      _delr:=B_USRROL.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
   !}
?};
B_USRROL.cntx_pop();

:: FJKS
USERSDEP.cntx_psh(); USERSDEP.index('ZAST_NAG'); USERSDEP.prefix(ZAST_NAG.ref());
{? USERSDEP.first()
|| {! |?
      _delr:=USERSDEP.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
   !}
?};
USERSDEP.cntx_pop();
B_PERM.cntx_psh(); B_PERM.index('NAME'); B_PERM.prefix('FJKS');
{? B_PERM.first()
|| B_PERM_U.cntx_psh(); B_PERM_U.index('USER');
   B_PERM_U.prefix(ZAST_NAG.FIRMA,ZAST_NAG.ZASTEPCA,B_PERM.ref());
   {? B_PERM_U.first() & B_PERM_U.FULL='N'
   || USERSDEP.cntx_psh(); USERSDEP.index('UNIK'); USERSDEP.prefix(ZAST_NAG.FIRMA,ZAST_NAG.ZASTEPCA);
      _access:={? USERSDEP.first() || 'T' || 'N' ?};
      exec('b_perm_u_update','zastepstwa',B_PERM.ref(),_access);
      USERSDEP.cntx_pop()
   ?};
   B_PERM_U.cntx_pop()
?};
B_PERM.cntx_pop();

:: HRB
UPR_RB.cntx_psh(); UPR_RB.index('ZAST_NAG'); UPR_RB.prefix(ZAST_NAG.ref());
{? UPR_RB.first()
|| {! |?
      _delr:=UPR_RB.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
   !}
?};
UPR_RB.cntx_pop();
B_PERM.cntx_psh(); B_PERM.index('NAME'); B_PERM.prefix('HRB');
{? B_PERM.first()
|| B_PERM_U.cntx_psh(); B_PERM_U.index('USER');
   B_PERM_U.prefix(ZAST_NAG.FIRMA,ZAST_NAG.ZASTEPCA,B_PERM.ref());
   {? B_PERM_U.first() & B_PERM_U.FULL='N'
   || UPR_RB.cntx_psh(); UPR_RB.index('RB'); UPR_RB.prefix(ZAST_NAG.ZASTEPCA);
      _access:={? UPR_RB.first() || 'T' || 'N' ?};
      exec('b_perm_u_update','zastepstwa',B_PERM.ref(),_access);
      UPR_RB.cntx_pop()
   ?};
   B_PERM_U.cntx_pop()
?};
B_PERM.cntx_pop();

:: HRP
UPR.cntx_psh(); UPR.index('ZAST_NAG'); UPR.prefix(ZAST_NAG.ref());
{? UPR.first()
|| {! |?
      _delr:=UPR.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
   !}
?};
UPR.cntx_pop();
B_PERM.cntx_psh(); B_PERM.index('NAME'); B_PERM.prefix('HRP');
{? B_PERM.first()
|| B_PERM_U.cntx_psh(); B_PERM_U.index('USER');
   B_PERM_U.prefix(ZAST_NAG.FIRMA,ZAST_NAG.ZASTEPCA,B_PERM.ref());
   {? B_PERM_U.first() & B_PERM_U.FULL='N'
   || UPR.cntx_psh(); UPR.index('REFKOD'); UPR.prefix(ZAST_NAG.ZASTEPCA);
      _access:={? UPR.first() || 'T' || 'N' ?};
      exec('b_perm_u_update','zastepstwa',B_PERM.ref(),_access);
      UPR.cntx_pop()
   ?};
   B_PERM_U.cntx_pop()
?};
B_PERM.cntx_pop();

:: ODDZ
exec('users_up_del','zastepstwa','ODDZ','ODDZ','ODDZ');
:: LMG
exec('users_up_del','zastepstwa','LMG','MAG','MG');
:: LSP
exec('users_up_del','zastepstwa','LSP','STS','STS');
:: LZK
exec('users_up_del','zastepstwa','LZK','STZ','STZ');
:: ZSMG
exec('users_up_del','zastepstwa','ZSMG','MAG','ZAM');
:: ZWMG
exec('users_up_del','zastepstwa','ZWMG','MAG','ZAW');
:: KAS
exec('kuserupr_del','zastepstwa');
:: KAS_MUL
exec('mkasaupr_del','zastepstwa');
:: TARS
exec('tarup_del','zastepstwa','TARS');
:: TARD
exec('tarup_del','zastepstwa','TARD');
:: F_ZATR
exec('f_zatr_del','zastepstwa');
:: UD_SKL
exec('ud_skl_del','zastepstwa');

~~


\bg_zast_nag_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Usuwanie nagłówków zastępstw - grupa przed
::----------------------------------------------------------------------------------------------------------------------
FUN.ask('Usunąć zaznaczone zastępstwa?'@)


\zast_poz_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dołączanie pozycji zastępstw
::----------------------------------------------------------------------------------------------------------------------
exec('act_tmp','zastepstwa');
ZAST_POZ.cntx_psh(); ZAST_POZ.index('UNIK');
B_DOMAIN.cntx_psh(); B_DOMAIN.prefix();
B_ACTION.cntx_psh(); B_ACTION.prefix();
B_ACTROL.cntx_psh(); B_ACTROL.index('B_ROLE');
B_ROLE.cntx_psh(); B_ROLE.prefix();
B_USRROL.cntx_psh(); B_USRROL.index('USER'); B_USRROL.prefix(REF.FIRMA,x_user);
{? B_USRROL.first()
|| {! |?
      B_USRROL.B_ROLE();
      B_ACTROL.prefix(B_ROLE.ref());
      {? B_ACTROL.first()
      || {! |?
            B_ACTROL.B_ACTION().B_DOMAIN();
            {? B_ACTION.PROC='T' & B_ACTION.AKT='T'
            || ACT_TMP.prefix(B_DOMAIN.SYMBOL,B_DOMAIN.NAME,B_ACTION.UID,);
               ZAST_POZ.prefix(ZAST_NAG.ref(),B_ACTION.ref());
               {? ~ACT_TMP.first() & ~ZAST_POZ.first()
               || ACT_TMP.blank(1);
                  ACT_TMP.UID:=B_ACTION.UID;
                  ACT_TMP.NAME:=B_ACTION.NAME;
                  ACT_TMP.B_DOMSYM:=B_DOMAIN.SYMBOL;
                  ACT_TMP.B_DOMNAZ:=B_DOMAIN.NAME;
                  ACT_TMP.REF_ACT:=#B_ACTION.ref();
                  ACT_TMP.add()
               ?}
            ?};
            B_ACTROL.next()
         !}
      ?};
      B_USRROL.next()
   !};
   ACT_TMP.prefix();
   {? ACT_TMP.first()
   || USERS.cntx_psh(); USERS.prefix();
      {? USERS.seek(x_user)
      || ACT_TMP.hdr_sel(); ACT_TMP.hdr_sel(' '@+USERS.DANE)
      ?};
      USERS.cntx_pop();
      ACT_TMP.select()
   || FUN.info('Nie znaleziono czynności dla których można zdefiniowac zastępstwa.'@)
   ?}
|| FUN.info('Nie zdefiniowano żadnej roli dla użytkownika.'@)
?};
B_USRROL.cntx_pop(); B_ROLE.cntx_pop(); B_ACTROL.cntx_pop(); B_ACTION.cntx_pop(); B_DOMAIN.cntx_pop();
ZAST_POZ.cntx_pop();
VAR_DEL.delete('ACT_TMP');
1


\act_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Tworzenie tabelki tymczasowej z czynnościami
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('ACT_TMP');
ACT_TMP:=tab_tmp(3,'B_DOMSYM','STRING[3]','Dziedzina',
                   'B_DOMNAZ','STRING[30]','',
                   'UID','STRING[12]','Czynność',
                   'NAME','STRING[30]','',
                   'REF_ACT','INTEGER','Ref czynności'
                 );
_okno:=ACT_TMP.mk_sel('Czynności użytkownika'@,'P',,'act_tmp',,,,,'U');
ACT_TMP.win_fld(_okno,,'UID',,,,,,,,'Identyfikator czynności'@);
ACT_TMP.win_fld(_okno,,'NAME',,,,,,,,'Nazwa czynności'@);
ACT_TMP.win_fld(_okno,,'B_DOMSYM',,,,,,,,'Symbol dziedziny'@);
ACT_TMP.win_fld(_okno,,'B_DOMNAZ',,,,,,,,'Nazwa dziedziny'@);
ACT_TMP.win_act(_okno,,'Formuła','Wybierz'@@,,'Wybór czynności'@,,
                "exec('users_action','zastepstwa'); sel_exit(); 1",1,
                1,"exec('act_tmp_gprz','zastepstwa')","exec('act_tmp_gpo','zastepstwa')",'W');
ACT_TMP.win_sel(_okno)


\act_tmp_gprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Tabelka z czynnościami - grupa przed
::----------------------------------------------------------------------------------------------------------------------
exec('def_U_Tab','zastepstwa');
VAR_DEL.delete('U_Tab1');
U_Tab1:=tab_tmp(2,'B_ACTION','INTEGER','Ref czynności',
                  'USER','STRING[16]','Ref uzytkownika',
                  'KOD','STRING[10]','Kod',
                  'DANE','STRING[50]','Dane',
                  'LOGIN_D','DATE','Data zalogowania',
                  'LOGIN_T','TIME','Czas zalogowania'
               );
T_czynn:=ACT_TMP.sel_aget();
{? T_czynn.first()
|| {! |?
      {? ACT_TMP.seek(T_czynn.REF,)
      || exec('u_tab_add','zastepstwa',U_Tab1,ACT_TMP.REF_ACT)
      ?};
      T_czynn.next()
   !};
   {? U_Tab1.first() & T_czynn.first() & ACT_TMP.seek(T_czynn.REF,)
   || U_Tab1.prefix(ACT_TMP.REF_ACT);
      {? U_Tab1.first()
      || {? T_czynn.next()
         || {! |?
               _user:=U_Tab1.USER;
               _ok:=1;
               {! |?
                  {? ACT_TMP.seek(T_czynn.REF,)
                  || U_Tab1.cntx_psh();
                     U_Tab1.prefix(ACT_TMP.REF_ACT,_user);
                     _ok:=U_Tab1.first();
                     U_Tab1.cntx_pop()
                  || _ok:=0
                  ?};
                  _ok & T_czynn.next()
               !};
               {? _ok
               || U_Tab.USER:=U_Tab1.USER;
                  U_Tab.KOD:=U_Tab1.KOD;
                  U_Tab.DANE:=U_Tab1.DANE;
                  U_Tab.LOGIN_D:=U_Tab1.LOGIN_D;
                  U_Tab.LOGIN_T:=U_Tab1.LOGIN_T;
                  U_Tab.add()
               ?};
               U_Tab1.next()
            !}
         || {! |?
               U_Tab.USER:=U_Tab1.USER;
               U_Tab.KOD:=U_Tab1.KOD;
               U_Tab.DANE:=U_Tab1.DANE;
               U_Tab.LOGIN_D:=U_Tab1.LOGIN_D;
               U_Tab.LOGIN_T:=U_Tab1.LOGIN_T;
               U_Tab.add();
               U_Tab1.next()
            !}
         ?}
      ?}
   ?}
?};
_index:=U_Tab.ndx_tmp(,,'KOD',,0); U_Tab.index(_index); U_Tab.prefix();
{? U_Tab.first()
|| U_Tab.select()
|| FUN.info('Nie znaleziono użytkowników mających uprawnienia jednocześnie do wszystkich wybranych czynności.'@)
?};
VAR_DEL.delete('U_Tab','U_Tab1','T_czynn');
1


\act_tmp_gpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Tabelka z czynnościami - grupa po
::----------------------------------------------------------------------------------------------------------------------
sel_exit();
VAR_DEL.delete('U_Tab','U_Tab1');
1


\zast_poz_edi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Edycja pozycji zastępstw
::----------------------------------------------------------------------------------------------------------------------
exec('act_tmp','zastepstwa');
{? ZAST_POZ.B_ACTION
|| B_ACTION.cntx_psh(); B_ACTION.prefix();
   B_DOMAIN.cntx_psh(); B_DOMAIN.prefix();
   B_ACTION.B_DOMAIN();
   ACT_TMP.blank(1);
   ACT_TMP.UID:=B_ACTION.UID;
   ACT_TMP.NAME:=B_ACTION.NAME;
   ACT_TMP.B_DOMSYM:=B_DOMAIN.SYMBOL;
   ACT_TMP.B_DOMNAZ:=B_DOMAIN.NAME;
   ACT_TMP.REF_ACT:=#B_ACTION.ref();
   {? ACT_TMP.add()
   || exec('users_action','zastepstwa')
   ?};
   B_ACTION.cntx_pop(); B_DOMAIN.cntx_pop()
?};
VAR_DEL.delete('ACT_TMP');
1


\zast_poz_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Usuwanie pozycji zastępstw
::----------------------------------------------------------------------------------------------------------------------
_size:=ZAST_POZ.sel_size();
{? ZAST_NAG.r_lock(1,1)
|| {? _size | FUN.ask('Usunąć zastępstwo?'@)
   || do();
      _delr:=ZAST_POZ.del(,1);
      {? _delr=0 || undo(); 0 ?};
      end()
   ?};
   ZAST_NAG.r_unlock()
|? ~_size
|| FUN.info('Dane zastępstwa obsługuje inny użytkownik.'@)
?}


\bg_zast_poz_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Usuwanie pozycji zastępstw - grupa przed
::----------------------------------------------------------------------------------------------------------------------
FUN.ask('Usunąć zaznaczone zastępstwa?'@)


\arfr_users_zast
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po odświeżeniu okienka z użytkownikami - zastępstwa
::----------------------------------------------------------------------------------------------------------------------
x_user:=USERS.ref();
{? czy_pkd
|| grp_disp(ZAST_NAG,'WER')
|| grp_disp(ZAST_NAG,'WERNOPKD')
?};
{? zas_opc=1 || grp_disp(ZAST_POZ,'WER3') || grp_disp(ZAST_POZ,'WER2') ?};
1


\arfr_zast_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po odświeżeniu okienka z nagłókami zastępstw
::----------------------------------------------------------------------------------------------------------------------
B_ROLE.cntx_psh(); B_ROLE.index('UNIK'); B_ROLE.prefix();
OBIEGI.B_USRROL:=ZAST_NAG.B_ROLE().NAME;
B_ROLE.cntx_pop();
OBIEGI.USERS:=ZAST_NAG.ZASTEPCA;
{? zas_opc=1 || grp_disp(ZAST_POZ,'WER3') || grp_disp(ZAST_POZ,'WER2') ?};
1


\bobs_users
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługa okienka tabeli USERS
::----------------------------------------------------------------------------------------------------------------------
{? x_user || USERS.seek(x_user) ?};
1


\bobs_zast_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługa okienka tabeli ZAST_NAG
::----------------------------------------------------------------------------------------------------------------------
USERS.cntx_psh();
ZAST_NAG.index('DISP');
{? x_user
|| ZAST_NAG.prefix(REF.FIRMA,x_user);
   {? ~ZAST_NAG.get() || ZAST_NAG.first() ?};
   ZAST_NAG.actions('WER',,,1)
|| ZAST_NAG.prefix(null,null);
   ZAST_NAG.actions('WER','DUP:D',,1)
?};
1


\aobs_zast_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po obsłudze okienka tabeli ZAST_NAG
::----------------------------------------------------------------------------------------------------------------------
USERS.cntx_pop(); 1


\bobs_zast_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługa okienka tabeli ZAST_POZ
::----------------------------------------------------------------------------------------------------------------------
POLA_GRP.fld_fml('TXT_1','BEFORE_DISPLAY',"
            POLA_GRP.TXT_1:=exec('lang_obj','zastepstwa').translate(ZAST_POZ.B_ACTION().NAME);
            1
         ");
USERS.cntx_psh();
ZAST_POZ.index('DISP');
{? ZAST_NAG.get
|| ZAST_POZ.prefix(ZAST_NAG.ref());
   {? ~ZAST_POZ.get() || ZAST_POZ.first() ?}
|| ZAST_POZ.prefix(null)
?};
1


\aobs_zast_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po obsłudze okienka tabeli ZAST_POZ
::----------------------------------------------------------------------------------------------------------------------
USERS.cntx_pop(); 1


\users_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Użytkownicy mający uprawnienia do danej czynności
::----------------------------------------------------------------------------------------------------------------------
{? ~ACT_TMP.sel_size()
|| exec('def_U_Tab','zastepstwa');
   exec('u_tab_add','zastepstwa',U_Tab,ACT_TMP.REF_ACT);
   _index:=U_Tab.ndx_tmp(,,'KOD',,0); U_Tab.index(_index); U_Tab.prefix();
   U_Tab.select()
?};
VAR_DEL.delete('U_Tab');
1


\def_U_Tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Definiowanie tabelki z uzytkownikami mającymi uprawnienia do czynności
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('U_Tab');
U_Tab:=tab_tmp(2,'B_ACTION','INTEGER','Ref czynności',
                 'USER','STRING[16]','Ref uzytkownika',
                 'KOD','STRING[10]','Kod',
                 'DANE','STRING[50]','Dane',
                 'LOGIN_D','DATE','Data zalogowania',
                 'LOGIN_T','TIME','Czas zalogowania'
              );
_okno:=U_Tab.mk_sel('Użytkownicy z uprawnieniami do czynności'@,'P',,'_tab_tmp',,,,,'U');
U_Tab.win_fld(_okno,,'KOD');
U_Tab.win_fld(_okno,,'DANE');
U_Tab.win_fld(_okno,,'LOGIN_D');
U_Tab.win_fld(_okno,,'LOGIN_T');
U_Tab.win_act(_okno,,'Formuła','Wybierz'@@,,'Wybór użytkownika'@,,
              "exec('users_wyb','zastepstwa'); sel_exit(); 1",1,,,,'W');
U_Tab.win_sel(_okno)


\u_tab_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dołączanie rekordów do tabelki z użytkownikami
::   WE: _a - alias do tabelki z operatorami
::       _b - ref czynności (INTEGER)
::----------------------------------------------------------------------------------------------------------------------
USERS.cntx_psh(); USERS.prefix();
B_ROLE.cntx_psh(); B_ROLE.prefix();
B_USRROL.cntx_psh(); B_USRROL.index('B_ROLE');
B_ACTION.cntx_psh(); B_ACTION.prefix();
{? B_ACTION.seek(_b,B_ACTION.name())
|| B_ACTROL.cntx_psh(); B_ACTROL.index('ACTION'); B_ACTROL.prefix(B_ACTION.ref());
   {? B_ACTROL.first()
   || {! |?
         B_USRROL.prefix(B_ACTROL.B_ROLE);
         {? B_USRROL.first()
         || {! |?
               B_USRROL.USERS();
               {? ~_a.find_key(_b,$USERS.ref()) & USERS.ref()<>x_user
               || {? ~exec('spr_cykl','zastepstwa',x_user,USERS.ref(),ZAST_NAG.DATA_OD,ZAST_NAG.DATA_DO,B_ACTION.ref())
                  || _a.blank();
                     _a.USER:=$USERS.ref();
                     _a.KOD:=USERS.KOD;
                     _a.DANE:=USERS.DANE;
                     _a.LOGIN_D:=USERS.LOGIN_D;
                     _a.LOGIN_T:=USERS.LOGIN_T;
                     _a.B_ACTION:=_b;
                     _a.add()
                  ?}
               ?};
               B_USRROL.next()
            !}
         ?};
         B_ACTROL.next()
      !}
   ?};
   B_ACTROL.cntx_pop()
?};
B_ACTION.cntx_pop(); B_ROLE.cntx_pop(); B_USRROL.cntx_pop(); USERS.cntx_pop()


\spr_cykl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Sprawdzenie czy nie ma cykliczności w zastępstwach
::   WE: _a - użytkownik zastępowany (USERS)
::       _b - zastępca (USERS)
::       _c - początkowa data zastępstwa
::       _d - końcowa data zastępstwa
::       _e - czynność
::   WY: 1/0 - jest / nie jest cykl
::----------------------------------------------------------------------------------------------------------------------
_cykl:=0;
_od:=_c; _do:=_d;
ZAST_NAG.cntx_psh(); ZAST_NAG.prefix();
ZAST_POZ.cntx_psh(); ZAST_POZ.index('FIND1'); ZAST_POZ.prefix(REF.FIRMA,_b,_e);
{? ZAST_POZ.first()
|| {! |?
      ZAST_POZ.ZAST_NAG();
      {? (_do=date(0,0,0) & ZAST_NAG.DATA_DO=date(0,0,0)) |
         (_do<>date(0,0,0) & ZAST_NAG.DATA_DO<>date(0,0,0) &
          (_od>=ZAST_NAG.DATA_OD & _od<=ZAST_NAG.DATA_DO) | (_do>=ZAST_NAG.DATA_OD & _do<=ZAST_NAG.DATA_DO)
         ) |
         (ZAST_NAG.DATA_DO=date(0,0,0) & _do>=ZAST_NAG.DATA_OD) |
         (_do=date(0,0,0) & _od<=ZAST_NAG.DATA_DO)
      || {? ZAST_POZ.USERS=_a
         || _cykl:=1
         || _cykl:=exec('spr_cykl','zastepstwa',_a,ZAST_POZ.USERS,_c,_d,_e)
         ?}
      ?};
      ~_cykl & ZAST_POZ.next()
   !}
?};
ZAST_POZ.cntx_pop(); ZAST_NAG.cntx_pop();
_cykl


\users_wyb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wybór użytkownika do zastępstwa
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('T_czynn')>0
|| {? T_czynn.first()
   || {! |?
         {? ACT_TMP.seek(T_czynn.REF,)
         || exec('users_wyb1','zastepstwa')
         ?};
         T_czynn.next()
      !}
   ?}
|| exec('users_wyb1','zastepstwa')
?};
1


\users_wyb1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wybór użytkownika do zastępstwa - wewnętrzna
::----------------------------------------------------------------------------------------------------------------------
ZAST_POZ.cntx_psh(); ZAST_POZ.index('UNIK'); ZAST_POZ.prefix();
B_ACTION.cntx_psh(); B_ACTION.prefix();
USERS.cntx_psh(); USERS.prefix();
{? B_ACTION.seek(ACT_TMP.REF_ACT,B_ACTION.name()) & USERS.seek(U_Tab.USER)
|| {? ZAST_POZ.find_key(ZAST_NAG.ref(),B_ACTION.ref())
   || ZAST_POZ.USERS:=USERS.ref(); ZAST_POZ.put()
   || ZAST_POZ.blank();
      ZAST_POZ.ZAST_NAG:=ZAST_NAG.ref();
      ZAST_POZ.USERS:=USERS.ref();
      ZAST_POZ.B_ACTION:=B_ACTION.ref();
      ZAST_POZ.add()
   ?}
?};
B_ACTION.cntx_pop(); USERS.cntx_pop(); ZAST_POZ.cntx_pop()


\be_data_od_zast
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed redakcją pola ZAST_NAG.DATA_OD
::----------------------------------------------------------------------------------------------------------------------
-menu_txt()<>'popraw' | (-menu_txt()='popraw' & ~exec('czy_zast_poz','zastepstwa'))


\czy_zast_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Sprawdzenie, czy zastępstwo ma pozycje
::   WY: 1 - ma, 0 - nie ma
::----------------------------------------------------------------------------------------------------------------------
ZAST_POZ.cntx_psh();
ZAST_POZ.index('DISP'); ZAST_POZ.prefix(ZAST_NAG.ref());
_czy_poz:=ZAST_POZ.first();
ZAST_POZ.cntx_pop();
_czy_poz


\act_b_usrrol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Sprawdzenie roli dla użytkownika (B_USRROL) w aspekcie zastępstw
::   WE: _a - B_USRROL.ref()
::       _b - 'N' - deaktywacja roli dla użytkownika (trigger na usuń przed)
::            'T' - aktywacja roli dla użytkownika (trigger na dołącz po)
::----------------------------------------------------------------------------------------------------------------------
ZAST_NAG.cntx_psh(); ZAST_NAG.prefix();
{? ZAST_NAG.first()
|| B_USRROL.cntx_psh(); B_USRROL.prefix();
   {? _a & B_USRROL.seek(_a)
   || {? _b='N' || b_usrrol:=B_USRROL.ref() ?};
      B_ACTROL.cntx_psh(); B_ACTROL.index('B_ROLE'); B_ACTROL.prefix(B_USRROL.B_ROLE);
      {? B_ACTROL.first()
      || {! |?
            {? _b='N'
            || {? ~exec('spr_act','zastepstwa',B_USRROL.USERS,B_ACTROL.B_ACTION,B_USRROL.FIRMA)
               || exec('act_act','zastepstwa',B_USRROL.USERS,B_ACTROL.B_ACTION,B_USRROL.FIRMA,'N')
               ?}
            || exec('act_act','zastepstwa',B_USRROL.USERS,B_ACTROL.B_ACTION,B_USRROL.FIRMA,'T')
            ?};
            B_ACTROL.next()
         !}
      ?};
      B_ACTROL.cntx_pop();
      VAR_DEL.delete('b_usrrol')
   ?};
   B_USRROL.cntx_pop()
?};
ZAST_NAG.cntx_pop();
{? _b='T' & exec('lic','#b_domain','POR') || exec('add_etypyp_usrrol','obiegi2') ?};
{? _b='N' & exec('lic','#b_domain','POR') || exec('del_etypyp_usrrol','obiegi2',B_USRROL.USERS,B_USRROL.B_ROLE) ?};
{? _b='T' || exec('upd_super_user','portal_wnioski','B_USRROL',1) ?};
{? _b='N' || 1 || ~~ ?}


\act_ap_usrrol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Triger after put dla tabeli USRROL
::   WE: _a - wynik akcji put
::----------------------------------------------------------------------------------------------------------------------
: zakończ, jeśli nie poprawiono rekordu
{? ~_a | do_state()<>1 || return() ?};
{? exec('lic','#b_domain','POR') || exec('put_etypyp_usrrol','obiegi2',bfld('USERS')) ?};
~~


\act_ad_usrrol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Triger after put dla tabeli USRROL
::   WE: _a - wynik akcji put
::----------------------------------------------------------------------------------------------------------------------
: zakończ, jeśli nie poprawiono rekordu
{? ~_a | do_state()<>1 || return() ?};
{? exec('lic','#b_domain','POR') || exec('del_etypyp_usrrol','obiegi2',bfld('USERS'),bfld('B_ROLE')) ?};
exec('upd_super_user','portal_wnioski','B_USRROL',0);
~~


\act_b_actrol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Sprawdzenie czynności dla roli (B_ACTROL) w aspekcie zastępstw
::   WE:  _a  - B_ACTROL.ref()
::        _b  - 'N' - deaktywacja czynności dla roli (trigger na usuń przed)
::              'T' - aktywacja czynności dla roli (trigger na dołącz po)
::              'n' - deaktywacja czynności dla roli (trigger na usuń po)
::       [_c] - status operacji del po
::----------------------------------------------------------------------------------------------------------------------
{? 'TN'*_b
|| ZAST_NAG.cntx_psh(); ZAST_NAG.prefix();
   {? ZAST_NAG.first()
   || B_ACTROL.cntx_psh(); B_ACTROL.prefix();
      {? _a & B_ACTROL.seek(_a)
      || {? _b='N' || b_actrol:=B_ACTROL.ref() ?};
         B_USRROL.cntx_psh(); B_USRROL.index('UNIK'); B_USRROL.prefix(B_ACTROL.FIRMA,B_ACTROL.B_ROLE);
         {? B_USRROL.first()
         || {! |?
               {? _b='N'
               || {? ~exec('spr_act','zastepstwa',B_USRROL.USERS,B_ACTROL.B_ACTION,B_USRROL.FIRMA)
                  || exec('act_act','zastepstwa',B_USRROL.USERS,B_ACTROL.B_ACTION,B_USRROL.FIRMA,'N')
                  ?}
               || exec('act_act','zastepstwa',B_USRROL.USERS,B_ACTROL.B_ACTION,B_USRROL.FIRMA,'T')
               ?};
               B_USRROL.next()
            !}
         ?};
         B_USRROL.cntx_pop();
         VAR_DEL.delete('b_actrol')
      ?};
      B_ACTROL.cntx_pop()
   ?};
   ZAST_NAG.cntx_pop();
   {? _b='T' || exec('upd_super_user','portal_wnioski','B_ACTROL',1) ?};
   {? _b='N' || 1 || ~~ ?}
|? _b='n'
|| {? _c
   || exec('upd_super_user','portal_wnioski','B_ACTROL',0)
   ?};
   ~~
?}


\spr_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Sprawdzenie, czy użytkownik ma aktywną czynność
::   WE: _a - użytkownik (USERS)
::       _b - czynność (B_ACTION)
::       _c - firma (FIRMA)
::   WY: 1/0 - aktywna/nieaktywna
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
USERS.cntx_psh(); USERS.prefix();
B_ACTION.cntx_psh(); B_ACTION.prefix();
FIRMA.cntx_psh(); FIRMA.prefix();
{? _a & _b & _c & USERS.seek(_a) & B_ACTION.seek(_b) & FIRMA.seek(_c)
|| B_USRROL.cntx_psh(); B_USRROL.index('USER'); B_USRROL.prefix(FIRMA.ref(),USERS.ref());
   {? B_USRROL.first()
   || B_ROLE.cntx_psh(); B_ROLE.prefix();
      B_ACTROL.cntx_psh(); B_ACTROL.index('UNIK');
      {! |?
         {? var_pres('b_usrrol')<=0 | B_USRROL.ref()<>b_usrrol
         || B_ACTROL.prefix(FIRMA.ref(),B_USRROL.B_ROLE,B_ACTION.ref());
            _zwrot:=B_ACTROL.first() & (var_pres('b_actrol')<=0 | B_ACTROL.ref()<>b_actrol)
         ?};
         ~_zwrot & B_USRROL.next()
      !};
      B_ROLE.cntx_pop(); B_ACTROL.cntx_pop()
   ?};
   B_USRROL.cntx_pop()
?};
B_ACTION.cntx_pop(); USERS.cntx_pop(); FIRMA.cntx_pop();
_zwrot


\act_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dekatywacja czynności dla użytkownika
::   WE: _a - użytkownik (USERS)
::       _b - czynność (B_ACTION)
::       _c - firma (FIRMA)
::       _d - 'T' - aktywacja
::            'N' - deaktywacja
::----------------------------------------------------------------------------------------------------------------------
{? _a & (_d='T' | _d='N')
|| ZAST_POZ.cntx_psh();
   ZAST_POZ.index('USERS1');
   {? _b & _c
   || ZAST_POZ.prefix(_a,_c,_b)
   || ZAST_POZ.prefix(_a)
   ?};
   {? ZAST_POZ.first()
   || {! |?
         ZAST_POZ.CZ_AKT1:=_d; ZAST_POZ.put();
         ZAST_POZ.next()
      !}
   ?};
   ZAST_POZ.index('USERS2');
   {? _b & _c
   || ZAST_POZ.prefix(_a,_c,_b)
   || ZAST_POZ.prefix(_a)
   ?};
   {? ZAST_POZ.first()
   || {! |?
         ZAST_POZ.CZ_AKT2:=_d; ZAST_POZ.put();
         ZAST_POZ.next()
      !}
   ?};
   ZAST_POZ.cntx_pop()
?};
1


\users_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Trigger na USERS - aktualizacja zastępstw - put przed
::----------------------------------------------------------------------------------------------------------------------
{? USERS.AKT<>'T'
|| exec('act_act','zastepstwa',USERS.ref(),null,null,'N')
?};
1


\bobs_red_zas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Przed obsługa okienka redakcyjnego nagłówka zastępstwa (WEBTERM)
::----------------------------------------------------------------------------------------------------------------------
_get:=web_params_get();
web_params_set(_get);
exec('env_wt','b_proces');
exec('FUN','#object');
1


\zast_poz_pref_wpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Przed obsługa okienka wertowania pozycji zastępstw (WEBTERM)
::----------------------------------------------------------------------------------------------------------------------
_ref:=web_win_ref('ID_ZAST_NAG');
ZAST_POZ.index('DISP');
{? type_of(_ref)>0 & _ref & ZAST_NAG.seek(_ref,ref_name(_ref),1)
|| ZAST_POZ.prefix(ZAST_NAG.ref())
|| ZAST_POZ.prefix(null)
?};
1


\zast_poz_pref_wpr_trslt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [21.37]
:: OPIS: Przed obsługa okienka wertowania pozycji zastępstw tabeli technicznej TAB_WT (WEBTERM)
::----------------------------------------------------------------------------------------------------------------------
_ref:=web_win_ref('ID_ZAST_NAG');
ZAST_POZ.index('DISP');
{? type_of(_ref)>0 & _ref & ZAST_NAG.seek(_ref,ref_name(_ref),1)
|| ZAST_POZ.prefix(ZAST_NAG.ref());
   {? var_pres('__PAR_LANG')<100
   || __PAR_LANG:=exec(,'__fmlang','action.lang',,,lang_language(1))
   ?};
   _lang:=__PAR_LANG;

   _tcid:=app_info('web_tcid');
   _mbid:=app_info('web_mbid');
   _sesid:=app_info('web_sesid');
   _tabid:=app_info('web_tabid');
   TAB_WT.index('INDEX01'); TAB_WT.prefix(_tcid,_tabid,12);
   {? TAB_WT.first() || {! |? TAB_WT.del !} ?};
   {? ZAST_POZ.first()
   || {!
      |? TAB_WT.blank(1);
         TAB_WT.SESID:=_sesid;
         TAB_WT.MBID:=_mbid;
         TAB_WT.TCID:=_tcid;
         TAB_WT.TABID:=_tabid;
         TAB_WT.TYP:=12;
         TAB_WT.STR01:=ZAST_POZ.B_ACTION().UID;
         TAB_WT.STR02:=_lang.translate(ZAST_POZ.B_ACTION().NAME);
         TAB_WT.add();
         ZAST_POZ.next()
      !}
   ?};
   TAB_WT.index('INDEX01'); TAB_WT.prefix(_tcid,_tabid,12)
|| ZAST_POZ.prefix(null)
?};
1


\zast_nag_dsp_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Na wyświetl dla tabeli ZAST_NAG (WWW)
::----------------------------------------------------------------------------------------------------------------------
{? ~ZAST_NAG.get()
|| FUN.info('Bieżąca pozycja nie istnieje.'@);
   ZAST_NAG.web_refresh(web_top_win(0),'ID_ZAST_NAG');
   return(1)
?};
exec('lic','zam_okr_rok');
_o_pkd:=exec('szuk_b_dom','parses','PKD');
B_ROLE.cntx_psh(); B_ROLE.index('UNIK'); B_ROLE.prefix();
OBIEGI.B_USRROL:=ZAST_NAG.B_ROLE().NAME;
B_ROLE.cntx_pop();
OBIEGI.USERS:=ZAST_NAG.ZASTEPCA;

{? exec('a_lic','zam_okr_rok',_o_pkd)
|| ZAST_NAG.web_display('RED_W1',,"ZAST_NAG.web_eclose()")
|| ZAST_NAG.web_display('RED_W11',,"ZAST_NAG.web_eclose()")
?};
1


\f3_busrrol_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Na F3 dla pola OBIEGI.B_USRROL
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| _tcid:=app_info('web_tcid');
   _mbid:=app_info('web_mbid');
   _sesid:=app_info('web_sesid');
   _tabid:=app_info('web_tabid');
   TAB_WT.index('INDEX05'); TAB_WT.prefix(_tcid,_tabid,11);
   {? TAB_WT.first()
   || {! |? TAB_WT.del() !}
   ?};
   _par:=web_global_params_get();
   x_user:=null;
   {? type_of(_par)>100 & var_pres('x_user',_par)>0
   || x_user:=_par.x_user
   ?};
   B_ROLE.cntx_psh(); B_ROLE.index('UNIK'); B_ROLE.prefix();
   B_USRROL.cntx_psh(); B_USRROL.index('USER'); B_USRROL.prefix(ZAST_NAG.FIRMA,x_user);
   {? B_USRROL.first()
   || {! |?
         B_USRROL.B_ROLE();
         TAB_WT.index('INDEX05'); TAB_WT.prefix(_tcid,_tabid,11,B_ROLE.NAME,);
         {? ~TAB_WT.first()
         || TAB_WT.blank(1);
            TAB_WT.SESID:=_sesid;
            TAB_WT.MBID:=_mbid;
            TAB_WT.TCID:=_tcid;
            TAB_WT.TABID:=_tabid;
            TAB_WT.TYP:=11;
            TAB_WT.NAZ:=B_ROLE.NAME;
            TAB_WT.add()
         ?};
         B_USRROL.next()
      !}
   ?};
   B_ROLE.cntx_pop(); B_USRROL.cntx_pop();
   exec('tab_form','obiegi','TAB_WT','wyb_rol_wt','zastepstwa','bobs_rol_wt','zastepstwa');
   TAB_WT.prefix(_tcid,_tabid,11);
   {? TAB_WT.first() || TAB_WT.find_key(OBIEGI.B_USRROL) ?};
   ZAST_NAG.web_cntx_save(1);
   TAB_WT.web_select('WER11',,1)
|| B_USRROL.cntx_psh(); B_USRROL.index('WER3'); B_USRROL.prefix(ZAST_NAG.FIRMA,x_user);
   B_USRROL.first(); {? OBIEGI.B_USRROL<>'' || B_USRROL.find_key(OBIEGI.B_USRROL) ?};
   B_USRROL.win_sel('WER_ZAST');
   {? B_USRROL.select(,1) || OBIEGI.B_USRROL:=B_USRROL.B_ROLE().NAME ?};
   B_USRROL.cntx_pop();
   OBIEGI.B_USRROL
?}


\ae_busrrol_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Po redakcji pola OBIEGI.B_USRROL
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? OBIEGI.B_USRROL<>''
|| {? app_info('web_sesid')<>''
   || _par:=web_global_params_get();
      x_user:=null;
      {? type_of(_par)>100 & var_pres('x_user',_par)>0
      || x_user:=_par.x_user
      ?}
   ?};
   B_ROLE.cntx_psh(); B_ROLE.index('UNIK'); B_ROLE.prefix();
   B_USRROL.cntx_psh(); B_USRROL.index('WER3'); B_USRROL.prefix(ZAST_NAG.FIRMA,x_user,OBIEGI.B_USRROL);
   {? B_USRROL.first()
   || OBIEGI.B_USRROL:=B_USRROL.B_ROLE().NAME
   || FUN.info('Nie znaleziono roli użytkownika o podanych początkowych znakach.'@);
      _zwrot:=0
   ?};
   B_USRROL.cntx_pop(); B_ROLE.cntx_pop()
?};

_zwrot


\bobs_rol_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Przed obsługą - wybór roli użytkownika zastępowanego (WWW)
::----------------------------------------------------------------------------------------------------------------------
1


\wyb_rol_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Wybór roli użytkownika zastępowanego (WWW)
::----------------------------------------------------------------------------------------------------------------------
ZAST_NAG.web_cntx_load(1);
OBIEGI.B_USRROL:=TAB_WT.NAZ;
TAB_WT.web_close();
web_top_fld_update(1,1);
1


\users_up_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: dodaje uprawnienia do danych logistycznych przechowywanych w USERS_UP
::   WE: _a - akronim indeksu
::       _b - akronim tabeli
::       _c - akronim pola
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ind:=_a;
_tab:=_b;
_fld:=$('USERS_UP.'+_c);

_iter:=_nr:=0;
{? 'ZAM|ZAW'*_tab
||
   USERS_UP.cntx_psh();
   USERS_UP.index('MGNR');
   USERS_UP.prefix(OBIEGI.USERS,_tab);
   _iter:=USERS_UP.last();
   _nr:={? _iter || USERS_UP.NR || 0 ?};
   USERS_UP.cntx_pop()
?};

USERS_UP.cntx_psh();
USERS_UP.index(_ind);
USERS_UP.prefix(x_user,_tab);
_loop:=USERS_UP.first();
{!
|? _loop
|!
   USERS_UP.cntx_psh();
   USERS_UP.prefix(OBIEGI.USERS,_tab,_fld());
   _add:=~USERS_UP.first();
   USERS_UP.cntx_pop();
   {? _add
   || USERS_UP.cntx_psh();
      USERS_UP.prefix();
      USERS_UP.USERS:=OBIEGI.USERS;
      USERS_UP.ZAST_NAG:=ZAST_NAG.ref();
      {? _iter
      || _nr+=1;
         USERS_UP.NR:=_nr;
         USERS_UP.DOM:='N'
      ?};
      USERS_UP.add(1);
      USERS_UP.cntx_pop()
   ?};
   _loop:=USERS_UP.next()
!};
USERS_UP.cntx_pop()


\users_up_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: usuwa uprawnienia do danych logistycznych przechowywanych w USERS_UP
::   WE: _a - uprawnienie
::       _b - akronim indeksu
::       _c - akronim tabeli
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_perm:=_a;
_ind:=_b;
_tab:=_c;

USERS_UP.cntx_psh(); USERS_UP.index('ZAST_NAG'); USERS_UP.prefix(ZAST_NAG.ref());
{? USERS_UP.first()
|| {! |?
      _delr:=USERS_UP.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
   !}
?};
USERS_UP.cntx_pop();
B_PERM.cntx_psh(); B_PERM.index('NAME'); B_PERM.prefix(_perm);
{? B_PERM.first()
|| B_PERM_U.cntx_psh(); B_PERM_U.index('USER');
   B_PERM_U.prefix(ZAST_NAG.FIRMA,ZAST_NAG.ZASTEPCA,B_PERM.ref());
   {? B_PERM_U.first() & B_PERM_U.FULL='N'
   || USERS_UP.cntx_psh(); USERS_UP.index(_ind); USERS_UP.prefix(ZAST_NAG.ZASTEPCA,_tab);
      _access:={? USERS_UP.first() || 'T' || 'N' ?};
      exec('b_perm_u_update','zastepstwa',B_PERM.ref(),_access);
      USERS_UP.cntx_pop()
   ?};
   B_PERM_U.cntx_pop()
?};
B_PERM.cntx_pop()


\kuserupr_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: dodaje uprawnienia do danych kasowych przechowywanych w KUSERUPR
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KUSERUPR.cntx_psh();
KUSERUPR.index('KU_ST');
KUSERUPR.prefix(x_user);
_loop:=KUSERUPR.first();
{!
|? _loop
|!
   KUSERUPR.cntx_psh();
   KUSERUPR.prefix(OBIEGI.USERS,KUSERUPR.STANKAS);
   _add:=~KUSERUPR.first();
   KUSERUPR.cntx_pop();
   {? _add
   || KUSERUPR.cntx_psh();
      KUSERUPR.prefix();
      KUSERUPR.KU:=OBIEGI.USERS;
      KUSERUPR.ZAST_NAG:=ZAST_NAG.ref();
      KUSERUPR.add(1);
      KUSERUPR.cntx_pop()
   ?};
   _loop:=KUSERUPR.next()
!};
KUSERUPR.cntx_pop()


\kuserupr_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: usuwa uprawnienia do danych kasowych przechowywanych w KUSERUPR
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KUSERUPR.cntx_psh(); KUSERUPR.index('ZAST_NAG'); KUSERUPR.prefix(ZAST_NAG.ref());
{? KUSERUPR.first()
|| {! |?
      _delr:=KUSERUPR.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
   !}
?};
KUSERUPR.cntx_pop();
B_PERM.cntx_psh(); B_PERM.index('NAME'); B_PERM.prefix('KAS');
{? B_PERM.first()
|| B_PERM_U.cntx_psh(); B_PERM_U.index('USER');
   B_PERM_U.prefix(ZAST_NAG.FIRMA,ZAST_NAG.ZASTEPCA,B_PERM.ref());
   {? B_PERM_U.first() & B_PERM_U.FULL='N'
   || KUSERUPR.cntx_psh(); KUSERUPR.index('KU_ST'); KUSERUPR.prefix(ZAST_NAG.ZASTEPCA);
      _access:={? KUSERUPR.first() || 'T' || 'N' ?};
      exec('b_perm_u_update','zastepstwa',B_PERM.ref(),_access);
      KUSERUPR.cntx_pop()
   ?};
   B_PERM_U.cntx_pop()
?};
B_PERM.cntx_pop()


\mkasaupr_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: dodaje uprawnienia do danych mulikas przechowywanych w MKASAUPR
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
MKASAUPR.cntx_psh();
MKASAUPR.index('UNIK');
MKASAUPR.prefix(x_user);
_loop:=MKASAUPR.first();
{!
|? _loop
|!
   MKASAUPR.cntx_psh();
   MKASAUPR.prefix(OBIEGI.USERS,MKASAUPR.MKASA);
   _add:=~MKASAUPR.first();
   MKASAUPR.cntx_pop();
   {? _add
   || MKASAUPR.cntx_psh();
      MKASAUPR.prefix();
      MKASAUPR.USER:=OBIEGI.USERS;
      MKASAUPR.ZAST_NAG:=ZAST_NAG.ref();
      MKASAUPR.add(1);
      MKASAUPR.cntx_pop()
   ?};
   _loop:=MKASAUPR.next()
!};
MKASAUPR.cntx_pop()


\mkasaupr_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: usuwa uprawnienia do danych mulikas przechowywanych w MKASAUPR
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
MKASAUPR.cntx_psh(); MKASAUPR.index('ZAST_NAG'); MKASAUPR.prefix(ZAST_NAG.ref());
{? MKASAUPR.first()
|| {! |?
      _delr:=MKASAUPR.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
   !}
?};
MKASAUPR.cntx_pop();
B_PERM.cntx_psh(); B_PERM.index('NAME'); B_PERM.prefix('KAS');
{? B_PERM.first()
|| B_PERM_U.cntx_psh(); B_PERM_U.index('USER');
   B_PERM_U.prefix(ZAST_NAG.FIRMA,ZAST_NAG.ZASTEPCA,B_PERM.ref());
   {? B_PERM_U.first() & B_PERM_U.FULL='N'
   || MKASAUPR.cntx_psh(); MKASAUPR.index('UNIK'); MKASAUPR.prefix(ZAST_NAG.ZASTEPCA);
      _access:={? MKASAUPR.first() || 'T' || 'N' ?};
      exec('b_perm_u_update','zastepstwa',B_PERM.ref(),_access);
      MKASAUPR.cntx_pop()
   ?};
   B_PERM_U.cntx_pop()
?};
B_PERM.cntx_pop()


\tarup_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: dodaje uprawnienia do danych cenników w TARUP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_sd:=_a;
TARGN.cntx_psh();
TARUP.cntx_psh();
TARUP.index('USER');
TARUP.prefix(x_user,null());
_loop:=TARUP.first();
{!
|? _loop
|!
   {? TARUP.TARGN().SD=_sd
   ||
      TARUP.cntx_psh();
      TARUP.prefix(OBIEGI.USERS,TARUP.TARGN);
      _add:=~TARUP.first();
      TARUP.cntx_pop();
      {? _add
      || TARUP.cntx_psh();
         TARUP.prefix();
         TARUP.USER:=OBIEGI.USERS;
         TARUP.ZAST_NAG:=ZAST_NAG.ref();
         TARUP.add(1);
         TARUP.cntx_pop()
      ?}
   ?};
   _loop:=TARUP.next()
!};
TARUP.cntx_pop();
TARGN.cntx_pop()


\tarup_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: usuwa uprawnienia do danych cenników w TARUP
::   WE: _a - uprawnienie
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_perm:=_a;

_sd:=_perm+1;

TARUP.cntx_psh(); TARUP.index('ZAST_NAG'); TARUP.prefix(ZAST_NAG.ref());
{? TARUP.first()
|| {! |?
      _delr:=TARUP.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
   !}
?};
TARUP.cntx_pop();
B_PERM.cntx_psh(); B_PERM.index('NAME'); B_PERM.prefix(_perm);
{? B_PERM.first()
|| B_PERM_U.cntx_psh(); B_PERM_U.index('USER');
   B_PERM_U.prefix(ZAST_NAG.FIRMA,ZAST_NAG.ZASTEPCA,B_PERM.ref());
   {? B_PERM_U.first() & B_PERM_U.FULL='N'
   || _count:=0;
      TARUP.cntx_psh(); TARUP.index('USER'); TARUP.prefix(ZAST_NAG.ZASTEPCA);
      _loop:=TARUP.first();
      {!
      |? _loop
      |!
         _count+=TARUP.TARGN().SD=_sd;
         _loop:=TARUP.next()
      !};
      _access:={? _count || 'T' || 'N' ?};
      exec('b_perm_u_update','zastepstwa',B_PERM.ref(),_access);
      TARUP.cntx_pop()
   ?};
   B_PERM_U.cntx_pop()
?};
B_PERM.cntx_pop()


\f_zatr_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła dodaje uprawnienia do form współpracy w ramach obsługi zastępstw. Operacja przeprowadzana jest przy
::       prawidłowo ustalonym buforze tabeli ZAST_NAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_firma:=ZAST_NAG.FIRMA;
_from:=ZAST_NAG.USERS;
_to:=ZAST_NAG.ZASTEPCA;

USERS_FZ.cntx_psh();
USERS_FZ.index('UNIQUE');
USERS_FZ.prefix();
F_ZATR.cntx_psh();
F_ZATR.index('UNIQUE');
F_ZATR.prefix();
_loop:=F_ZATR.first();
{!
|? _loop
|! _f_zatr:=F_ZATR.ref();
   _dn:={? USERS_FZ.find_key(_firma,_from,_f_zatr) || USERS_FZ.DOSTEP || '?' ?};
   {? USERS_FZ.find_key(_firma,_to,_f_zatr)
   || _da:=USERS_FZ.DOSTEP;
      {? (_da='?' & _dn<>'?') | (_da='N' & _dn='T')
::       Uprawnienie osoby zastępowanej jest szersze niż uprawnienie osoby zastępującej.
      || USERS_FZ.DOSTEP:=_dn;
         USERS_FZ.DOSTORG:=_da;
         USERS_FZ.ZAST_NAG:=ZAST_NAG.ref();
         USERS_FZ.put()
      ?}
   || USERS_FZ.blank(1);
      USERS_FZ.FIRMA:=_firma;
      USERS_FZ.USERS:=_to;
      USERS_FZ.F_ZATR:=_f_zatr;
      USERS_FZ.DOSTEP:=_dn;
      USERS_FZ.DOSTORG:='?';
      USERS_FZ.ZAST_NAG:=ZAST_NAG.ref();
      USERS_FZ.add()
   ?};
   _loop:=F_ZATR.next()
!};
F_ZATR.cntx_pop();
USERS_FZ.cntx_pop();
~~


\f_zatr_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła usuwa uprawnienia do form współpracy w ramach obsługi zastępstw. Operacja przeprowadzana jest przy
::       prawidłowo ustalonym buforze tabeli ZAST_NAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
USERS_FZ.cntx_psh();
USERS_FZ.index('ZAST_NAG');
USERS_FZ.prefix(ZAST_NAG.ref());
{!
|? USERS_FZ.first()
|! USERS_FZ.cntx_psh();
   USERS_FZ.prefix();
   USERS_FZ.DOSTEP:=USERS_FZ.DOSTORG;
   USERS_FZ.DOSTORG:='';
   USERS_FZ.ZAST_NAG:=null();
   USERS_FZ.put();
   USERS_FZ.cntx_pop()
!};
USERS_FZ.cntx_pop();
~~


\ud_skl_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła dodaje uprawnienia do schematów danych w ramach obsługi zastępstw. Operacja przeprowadzana jest przy
::       prawidłowo ustalonym buforze tabeli ZAST_NAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_firma:=ZAST_NAG.FIRMA;
_from:=ZAST_NAG.USERS;
_to:=ZAST_NAG.ZASTEPCA;

UDB_UPR.cntx_psh();
UDB_UPR.index('UNIQUE');
UDB_UPR.prefix();
UD_SKL.cntx_psh();
UD_SKL.index('SYMBOL');
UDB_SYS.cntx_psh();
UDB_SYS.index('OCHRONA');
UDB_SYS.prefix();
_dsys:=UDB_SYS.first();
{!
|? _dsys
|! _udb_sys:=UDB_SYS.ref();
   UD_SKL.prefix(UDB_SYS.UD_TYP);
   _dskl:=UD_SKL.first();
   {!
   |? _dskl
   |! _ud_skl:=UD_SKL.ref();
      _dn:={? UDB_UPR.find_key(_udb_sys,_from,_ud_skl) || UDB_UPR.DOSTEP || '?' ?};
      {? UDB_UPR.find_key(_udb_sys,_to,_ud_skl)
      || _da:=UDB_UPR.DOSTEP;
         {? (_da='?' & _dn<>'?') | (_da='N' & _dn='T')
::          Uprawnienie osoby zastępowanej jest szersze niż uprawnienie osoby zastępującej.
         || UDB_UPR.DOSTEP:=_dn;
            UDB_UPR.DOSTORG:=_da;
            UDB_UPR.ZAST_NAG:=ZAST_NAG.ref();
            UDB_UPR.put()
         ?}
      || UDB_UPR.blank(1);
         UDB_UPR.UDB_SYS:=_udb_sys;
         UDB_UPR.USERS:=_to;
         UDB_UPR.UD_SKL:=_ud_skl;
         UDB_UPR.DOSTEP:=_dn;
         UDB_UPR.DOSTORG:='?';
         UDB_UPR.ZAST_NAG:=ZAST_NAG.ref();
         UDB_UPR.add()
      ?};
      _dskl:=UD_SKL.next()
   !};
   _dsys:=UDB_SYS.next()
!};
UDB_SYS.cntx_pop();
UD_SKL.cntx_pop();
UDB_UPR.cntx_pop();
~~


\ud_skl_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła usuwa uprawnienia do schematów danych w ramach obsługi zastępstw. Operacja przeprowadzana jest przy
::       prawidłowo ustalonym buforze tabeli ZAST_NAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
UDB_UPR.cntx_psh();
UDB_UPR.index('ZAST_NAG');
UDB_UPR.prefix(ZAST_NAG.ref());
{!
|? UDB_UPR.first()
|! UDB_UPR.cntx_psh();
   UDB_UPR.prefix();
   UDB_UPR.DOSTEP:=UDB_UPR.DOSTORG;
   UDB_UPR.DOSTORG:='';
   UDB_UPR.ZAST_NAG:=null();
   UDB_UPR.put();
   UDB_UPR.cntx_pop()
!};
UDB_UPR.cntx_pop();
~~


\b_perm_u_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: aktualizuje B_PERM_U przez ustawienie znacznika B_PERM_U.ACCESS jeśli użtkownik ma uprawnienie _a
::       lub usuwa B_PERM_U jeśli użtkownik nie ma uprawnienia _a
::   WE: _a - B_PERM.ref()
::       _b - access
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| REF.FIRMA:=exec('firma_ref','#firma',app_info('cluster_group'),app_info('app_ident'))
?};
_b_perm:=_a;
_access:=_b;
_b_perm_u:=0;
B_PERM_A.cntx_psh();
B_PERM_A.index('B_PERM');
B_PERM_A.prefix(_b_perm);
_loop:=B_PERM_A.first();
{!
|? _loop
|!
   B_ACTROL.cntx_psh();
   B_ACTROL.index('ACTION');
   B_ACTROL.prefix(B_PERM_A.B_ACTION);
   _loop:=B_ACTROL.first();
   {!
   |? _loop
   |!
      B_USRROL.cntx_psh();
      B_USRROL.index('UNIK');
      B_USRROL.prefix(REF.FIRMA,B_ACTROL.B_ROLE,ZAST_NAG.ZASTEPCA);
      _b_perm_u:=B_USRROL.first();
      B_USRROL.cntx_pop();
      _loop:=_b_perm_u=0 & B_ACTROL.next()
   !};
   B_ACTROL.cntx_pop();
   _loop:=_b_perm_u=0 & B_PERM_A.next()
!};
B_PERM_A.cntx_pop();

B_PERM_U.ACCESS:=_access;

B_PERM_U.put()


\powiel_zast
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Dodawanie zastępstw dla użytkownika
::----------------------------------------------------------------------------------------------------------------------
_user:=x_user;
_user2:=OBIEGI.USERS;
_data_od:=ZAST_NAG.DATA_OD;
_data_do:=ZAST_NAG.DATA_DO;
_rola:=OBIEGI.B_USRROL;
_ret:=0;
ZAST_NAG.cntx_psh();
ZAST_NAG.index('DISP');
ZAST_NAG.prefix(REF.FIRMA,_user);
{? ZAST_NAG.first()
|| B_ROLE.cntx_psh();
   {!
   |? {? ZAST_NAG.ZASTEPCA=_user2 & ZAST_NAG.B_ROLE().NAME=_rola
      || {? _data_od<ZAST_NAG.DATA_OD
         || {? (_data_do<=ZAST_NAG.DATA_DO & _data_do>=ZAST_NAG.DATA_OD) | _data_do>=ZAST_NAG.DATA_DO
            || _ret:=1
            ?}
         || {? _data_od<=ZAST_NAG.DATA_DO
            || _ret:=1
            ?}
         ?}
      ?};
      _ret=0 & ZAST_NAG.next()
   !};
   B_ROLE.cntx_pop()
?};
ZAST_NAG.cntx_pop();
_ret


\lang_obj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Tworzy obiekt odpowiedzialny za tłumaczenie nazw funkcji parametryzacji.
::   WE:
::  OLD: \lang_obj/#funpar_wid.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__PAR_LANG')<100
|| __PAR_LANG:=exec(,'__fmlang','action.lang',,,lang_language(1))
?};
__PAR_LANG


\B_ROLE_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Czy odpisywać B_ROLE do przetworzenia i wysłania na portal HR
::   WE: _a - akcja put/del
::       _b - symbol firmy
::       _c - wskazanie na firmę
::----------------------------------------------------------------------------------------------------------------------
_akc:={? var_pres('_a')=type_of('') || _a || '' ?};
{? _akc='del' || return(1) ?};

B_ROLE.FIRMA=REF.S_FIRMA


\ZAST_NAG_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Czy odpisywać ZAST_NAG do przetworzenia i wysłania na portal HR
::   WE: _a - akcja put/del
::       _b - symbol firmy
::       _c - wskazanie na firmę
::----------------------------------------------------------------------------------------------------------------------
_akc:={? var_pres('_a')=type_of('') || _a || '' ?};
{? _akc='del' || return(1) ?};

ZAST_NAG.FIRMA=REF.S_FIRMA


:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:35 61833c0f1d1565af490486b4bd7ef25bb28cc093a1309c775ba1cd8cb90245ded9b4baa0617803a7bcfbe50e5302b3647f8e018dd0fe5c89e19e54e1138d105b473af59edb7b52af86a80da7f6d8faa8a5c858c4ee32c9c7aca5b4dce5faac7a849a5c8d57922874cb180d9fe33111fe3522dc4d6e9274faa37f933f18aa1ad9
