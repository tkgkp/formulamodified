:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: fks_vat.fml
:: Utworzony: 03.07.2015 [17.00]
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły do obsługi ewidencji VAT
::======================================================================================================================


\tree_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca tabelę tymczasową z rejestrami VAT
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TREE_VAT','TMP_VAT');
TREE_VAT:=tab_tmp(,'TREE','TREE_REF',,
                   'RVAT','STRING[71]','Rejestry VAT',
                   'RVAT_REF','STRING[16]','ref RVAT',
                   'ODD_REF','STRING[16]','ref ODD',
                   'POZ','INTEGER',);
exec('fill_tree_vat','fks_vat');
w_acr:=TREE_VAT.mk_sel('Rejestry VAT'@,'P',,,,,,1);
TREE_VAT.win_fld(w_acr,,'RVAT',,,15,,,'Rejestry VAT'@);
TREE_VAT.win_act(w_acr,,'Formuła','Zwin/&rozwin całość'@@,,'Zwija/rozwija wszystkie gałęzie rejestrów'@,"",
        "TREE_VAT.prefix();
         {! |? {? TREE_VAT.TREE || TREE_VAT.seek(TREE_VAT.TREE,) || 0 ?} !};
         {? TREE_VAT.tr_state || TREE_VAT.tr_set(0,w_acr) || TREE_VAT.tr_set(1,w_acr) ?}
        ",,,,,'R');
TREE_VAT.win_fml(w_acr,,'RVAT',,'ICON_BEFORE',
                "_zwrot:={? TREE_VAT.POZ<2
                         || {? TREE_VAT.tr_state()=1
                            || 'xwin16.png:75'
                            || 'xwin16.png:74'
                            ?}
                         || 'xwin16.png:76'
                         ?}; _zwrot");
TREE_VAT.tr_fml(w_acr,,"{? _a=-1 || 1 || _a ?}");
TREE_VAT.win_sel(w_acr);
TREE_VAT


\fill_tree_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zasila tabelę tymczasową z rejestrami VAT
::----------------------------------------------------------------------------------------------------------------------
TREE_VAT.TREE:=0;
VAR_DEL.delete('TMP_VAT');
{? OPERATOR.DEPT
|| TREE_VAT.POZ:=1;
   TREE_VAT.RVAT:=OPERATOR.DEPT().OD; TREE_VAT.ODD_REF:=$OPERATOR.DEPT; TREE_VAT.add();
   __ref:=TREE_VAT.ref;
   TMP_VAT:=sql('select RVAT.SYM, RVAT.NAZ, RVAT.REFERENCE as RVAT_REF, REJ.ODD as ODD_REF
                  from REJ join VAT_REJ join RVAT
                  where REJ.ROK=:_a and REJ.ODD=:_b group by RVAT.SYM,RVAT.NAZ,RVAT.REFERENCE,REJ.ODD',
                  SSTALE.AR,OPERATOR.DEPT);
   TMP_VAT.for_each("
      TREE_VAT.TREE:=__ref;
      TREE_VAT.RVAT:=TMP_VAT.SYM+' - '+TMP_VAT.NAZ;
      TREE_VAT.RVAT_REF:=TMP_VAT.RVAT_REF;
      TREE_VAT.ODD_REF:=TMP_VAT.ODD_REF;
      TREE_VAT.POZ:=2;
      TREE_VAT.add()
   ");
   &__ref
|| _all:=Perm.hasFull('FJKS');
   {? _all
   || TREE_VAT.RVAT:='Wszystkie';
      TREE_VAT.RVAT_REF:='';
      TREE_VAT.ODD_REF:='';
      TREE_VAT.POZ:=0;
      _nad:={? TREE_VAT.add() || #TREE_VAT.ref() ?}
   || _nad:=0
   ?};
   ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
   {? ODD.first()
   || {!
      |? TREE_VAT.TREE:=_nad;
         TREE_VAT.POZ:=1;
         TREE_VAT.RVAT:=ODD.OD; TREE_VAT.ODD_REF:=$ODD.ref; TREE_VAT.add();
         ODD.next()
      !}
   ?};
   ODD.cntx_pop();
   TMP_VAT:=sql('select ODD.OD OD, RVAT.SYM, RVAT.NAZ, RVAT.REFERENCE as RVAT_REF, REJ.ODD as ODD_REF
                  from ODD join REJ join VAT_REJ join RVAT
                  where REJ.ROK=:_a group by ODD.OD,RVAT.SYM,RVAT.NAZ,RVAT.REFERENCE,REJ.ODD',
                  SSTALE.AR);
   TMP_VAT.for_each("
      {? TREE_VAT.find_tab(,'RVAT',,'=',TMP_VAT.OD)
      || TREE_VAT.TREE:=TREE_VAT.ref;
         TREE_VAT.RVAT:=TMP_VAT.SYM+' - '+TMP_VAT.NAZ;
         TREE_VAT.RVAT_REF:=TMP_VAT.RVAT_REF;
         TREE_VAT.ODD_REF:=TMP_VAT.ODD_REF;
         TREE_VAT.POZ:=2;
         TREE_VAT.add()
      ?}
   ")
?}


\title
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Trtuł w oknie obszaru ewidencji VAT
::----------------------------------------------------------------------------------------------------------------------
AreaTitle.setTabWin(TREE_VAT,~~);
AreaTitle.setTitle()


\dvat_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Parametry pracy
::----------------------------------------------------------------------------------------------------------------------
_ar:=SSTALE.AR;
_ao:=SSTALE.AO;
_odd:=OPERATOR.DEPT;
_wgkraj:=__wgkraj;
{? __PARSES.editDom('FKS')
|| {? SSTALE.AR<>_ar | _odd<>OPERATOR.DEPT
   || TREE_VAT.erase();
      exec('fill_tree_vat','fks_vat');
      TREE_VAT.first()
   ?};
   {? SSTALE.AR<>_ar | _odd<>OPERATOR.DEPT | _ao<>SSTALE.AO
   || VAR_DEL.delete('dokref','dokndx');
      grp_disp(TREE_VAT,w_acr,1);
      exec('title','fks_vat')
   ?};
   VPOZ.ndx_drop(); VAR_DEL.delete('vpozndx');
   {? cur_tab(1,1)=VPOZ & cur_win(1,1)='WER_T'
   || _maska:=SSTALE.AR().KOD+form(SSTALE.AO().NR,-2);
      {? VPOZ.use('pozv'+_maska) & DOK.use('doku'+_maska)
      || VPOZ.f_clear();
         {? OPERATOR.DEPT=null
         || VPOZ.index('KS_PR'); VPOZ.prefix('T','N');
            {? VPOZ.first() || 1 ?}
         || VPOZ.index('KS_PR'); VPOZ.prefix('T','N',OPERATOR.DEPT().OD);
            {? VPOZ.first() || 1 ?}
         ?}
      ?}
   || vpozpar:=1
   ?};
   1
?};
{? ~(cur_tab(1,1)=VPOZ & cur_win(1,1)='WER_T')
|| __wgkraj:=_wgkraj;
   {? __wgkraj || exec('arw_tree_vat2','!fks_vat_zdoz') || exec('arw_tree_vat','!fks_vat_zdoz') ?}
?};
ODD.f_clear()


\is_rozl_cz_full
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Czy pozycja VAT jest rozliczona czesciami calkowicie
::  OLD: \is_rozl_cz_full/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
exec('bv_rozl_cz','fks_vat');
ROZLICZ.NETTO2=0 &
ROZLICZ.VAT2=0 &
ROZLICZ.BRUTTO2=0


\is_rozl_cz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Czy jest rozliczenie czesciowe
::   WE: [_a] - okres
::  OLD: \is_rozl_cz/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
VPOZ_ROZ.cntx_psh();
VPOZ_ROZ.index('VPOZ_ROZ');
{? _=0
|| VPOZ_ROZ.prefix(VPOZ.ref())
|| VPOZ_ROZ.prefix(VPOZ.ref(),_a)
?};
_is:=VPOZ_ROZ.first();
VPOZ_ROZ.cntx_pop();
_is


\is_dok_rozl_cz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Czy dokument ksiegowy zawiera pozycje VAT czesciowo rozliczone?
::   WE: [_a] - data sprzedaży
::  OLD: \is_dok_rozl_cz/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
VPOZ_ROZ.index('VPOZ_ROZ');
VPOZ.cntx_psh();
{? _=1
|| VPOZ.index('VDSP'); VPOZ.prefix(DOK.ref(),_a)
|| VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref())
?};
_jest:=0;
{? VPOZ.first()
|| {!
   |? VPOZ_ROZ.prefix(VPOZ.ref());
      _jest:=VPOZ_ROZ.first();
      _jest=0 & VPOZ.next()
   !}
?};
VPOZ.cntx_pop();
_jest


\bl_rvat_ewid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Wartość początkowa pola RVAT.EWID
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab()=VAT7
|| VAT7.EWI
|| null
?}


\rvl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Korekta pozycji VAT o czesciowe rozliczenia
::   WE: _a - pozycja VAT (VPOZ)
::       _b - czy uwzglednia czesciowe roliczenia VAT
::  OLD: \rvl/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=obj_new(3);
_ret[1]:=0;
_ret[2]:=0;
_ret[3]:=0;
{? _b
|| VPOZ_ROZ.index('VPOZ_ROZ');
   VPOZ_ROZ.prefix(_a);
   {? VPOZ_ROZ.first()
   || {!
      |? _ret[1]+=VPOZ_ROZ.NETTO;
         _ret[2]+=VPOZ_ROZ.VAT;
         _ret[3]+=VPOZ_ROZ.BRUTTO;
         VPOZ_ROZ.next()
      !}
   ?}
?};
_ret


\czy_rvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Czy w danym roku bilansowym istnieje rejestr VAT
::   WE: _a - rok bilansowy
::       _b - jednostka ksiegowa
::       _c - rejestr VAT
::  OLD: \czy_rvat/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
REJ.cntx_psh(); VAT_REJ.cntx_psh();
VAT_REJ.index('VAT_REJR'); VAT_REJ.prefix(_c);
{? VAT_REJ.first() ||
   {! |?
      _ok:=VAT_REJ.REJ().ROK=_a & REJ.ODD=_b;
      ~_ok & VAT_REJ.next()
   !}
?};
REJ.cntx_pop(); VAT_REJ.cntx_pop();
_ok


\dok_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2008]
:: OPIS: Aktualizuje pola OKRVAT, A_VAT tabeli DOK na podstawie VPOZ
::  OLD: \dok_akt/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
VPOZ.cntx_psh();
VPOZ.index('VDOK'); VPOZ.prefix(VPOZ.DOK); VPOZ.DOK();
{? VPOZ.first()
|| _okrvat:=VPOZ.OKRVAT;
   _a_vat:=VPOZ.A_VAT;
   _zmien:=0;
   _rvat:=VPOZ.RVAT;
   _w1:=_w2:=_w3:=1;
   {! |?
      {? _w1 || _w1:=_okrvat=VPOZ.OKRVAT & ~VPOZ.OKR_C & ~VPOZ.OKR_Z ?};
      {? _w2 || _w2:=_a_vat=VPOZ.A_VAT ?};
      {? _w3 || _w3:=_rvat=VPOZ.RVAT ?};
      (_w1+_w2+_w3>0) & VPOZ.next
   !};
   {? _w1*_w2=0 | DOK.OKRVAT<>VPOZ.OKRVAT | DOK.A_VAT<>VPOZ.A_VAT
   || {? _w1=0 || DOK.OKRVAT:=null || DOK.OKRVAT:=_okrvat ?};
      {? _w2=0 || DOK.A_VAT:=null || DOK.A_VAT:=VPOZ.A_VAT ?};
      _zmien:=1
   ?};
   {? _w3 & DOK.RVAT<>VPOZ.RVAT
   || DOK.RVAT:=VPOZ.RVAT; _zmien:=1
   ?};
   {? _zmien
   || DOK.cntx_psh();
      DOK.prefix();
      okrDok:=1;
      DOK.put();
      VAR_DEL.delete('okrDok');
      DOK.cntx_pop()
   ?}
?};
VPOZ.cntx_pop();
1


\bv_rozl_cz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Obliczenia wartosci w zmiennych
::  OLD: \bv_rozl_cz/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
ROZLICZ.NETTO1:=ROZLICZ.VAT1:=ROZLICZ.BRUTTO1:=ROZLICZ.VAT_ODL1:=ROZLICZ.KOSZT1:=0;
VPOZ_ROZ.cntx_psh();
VPOZ_ROZ.index('VPOZ_ROZ');
VPOZ_ROZ.prefix(VPOZ.ref());
{? VPOZ_ROZ.first()
|| {!
   |? ROZLICZ.NETTO1+=VPOZ_ROZ.NETTO;
      ROZLICZ.VAT1+=VPOZ_ROZ.VAT;
      ROZLICZ.BRUTTO1+=VPOZ_ROZ.BRUTTO;
      ROZLICZ.VAT_ODL1+=VPOZ_ROZ.VAT_ODL;
      ROZLICZ.KOSZT1+=VPOZ_ROZ.VATKOSZT;
      VPOZ_ROZ.next()
   !}
?};
VPOZ_ROZ.cntx_pop();
exec('bv_rozl_cz1','fks_vat');
UNPAR.P10:=VPOZ.PR().KOD;
UNPAR.P11:=VPOZ.GRVAT().KOD


\bv_rozl_cz1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Obliczenia wartosci w zmiennych
::  OLD: \bv_rozl_cz1/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
ROZLICZ.NETTO2:=VPOZ.NETTO-ROZLICZ.NETTO1;
ROZLICZ.VAT2:=VPOZ.VAT-ROZLICZ.VAT1;
ROZLICZ.BRUTTO2:=VPOZ.BRUTTO-ROZLICZ.BRUTTO1;
ROZLICZ.VAT_ODL2:=VPOZ.VAT_ODL-ROZLICZ.VAT_ODL1;
ROZLICZ.KOSZT2:=VPOZ.VATKOSZT-ROZLICZ.KOSZT1;
{? _
|| ROZLICZ.NETTO2-=VPOZ_ROZ.NETTO;
   ROZLICZ.VAT2-=VPOZ_ROZ.VAT;
   ROZLICZ.BRUTTO2-=VPOZ_ROZ.BRUTTO;
   ROZLICZ.VAT_ODL2-=VPOZ_ROZ.VAT_ODL;
   ROZLICZ.KOSZT2-=VPOZ_ROZ.VATKOSZT
?}


\bd_roz_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [19.22]
:: OPIS: Obliczenia wiersza sum 'Rozliczono'
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab()=VPOZ_ROZ & cur_win(1)='WER'
|| {? f_usr_changed() | ~VPOZ_ROZ.f_active()
   || ROZLICZ.NETTO1:=ROZLICZ.VAT1:=ROZLICZ.BRUTTO1:=ROZLICZ.VAT_ODL1:=ROZLICZ.KOSZT1:=0;
   VPOZ_ROZ.cntx_psh();
   VPOZ_ROZ.index('VPOZ_ROZ');
   VPOZ_ROZ.prefix(VPOZ.ref());
   {? {? VPOZ_ROZ.f_active() || VPOZ_ROZ.f_first() || VPOZ_ROZ.first() ?}
   || {!
      |? ROZLICZ.NETTO1+=VPOZ_ROZ.NETTO;
      ROZLICZ.VAT1+=VPOZ_ROZ.VAT;
      ROZLICZ.BRUTTO1+=VPOZ_ROZ.BRUTTO;
      ROZLICZ.VAT_ODL1+=VPOZ_ROZ.VAT_ODL;
      ROZLICZ.KOSZT1+=VPOZ_ROZ.VATKOSZT;
      VPOZ_ROZ.next()
      !}
   ?};
   VPOZ_ROZ.cntx_pop();
   exec('bv_rozl_cz1','fks_vat')
   ?};
   1
|| 1
?}


\m2eoq
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Liczba miesiecy do konca kwartalu wzgledem okresu bazowego _a
::   WE: _a - okres bazowy (OKRO_F.ref())
::  OLD: \m2eoq/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_ile:=-1;
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix();
{? OKRO_F.seek(_a)
|| OKRO_F.prefix(OKRO_F.ROK); _kw:=OKRO_F.KWARTAL;
   {! |? {? OKRO_F.KWARTAL=_kw || _ile+=1; 1 ?} & OKRO_F.next() !}
?};
OKRO_F.cntx_pop();
_ile


\czy_ue
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Czy okres po 01.05.2004
::  OLD: \czy_ue/vat.fml
::----------------------------------------------------------------------------------------------------------------------
OKRO_F.cntx_psh();
{? _=0 || SSTALE.AO() ?};
OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(REF.FIRMA);
{? OKRO_F.NR=0 || OKRO_F.next() |? OKRO_F.POCZ=date(0,0,0) || OKRO_F.prev() ?};
_ok:=OKRO_F.POCZ>=date(2004,5,1);
OKRO_F.cntx_pop();
_ok


\kw_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Zwraca numer kwartalu na podstawie biezacego okresu
::   WE: [_a] - okres (domyslnie z parametrow pracy)
::  OLD: \kw_vat/vat.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0
|| SSTALE.AO()
|| OKRO_F.prefix();
   OKRO_F.seek(_a)
?};
{? OKRO_F.POCZ=date(0,0,0)
|| {? OKRO_F.NR=0
   || 1
   || 4
   ?}
|| floor((OKRO_F.POCZ~2-1)/3)+1
?}


\czy_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Sprawdzenie czy w aktualnym i poprzednich otwartych okresach zaksiegowano wszystkie dokumenty
::   WY: 0/1
::  OLD: \czy_ks/dok2zest.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
DOK.cntx_psh();
DOK.index('PR1');
DOK.prefix('T','N'); _p1:=DOK.first();
DOK.prefix('N','N'); _p2:=DOK.first();
OKRO_F.cntx_psh();
OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(REF.FIRMA);
SSTALE.AO();
_okres:=OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ;
_p3:=_p4:=0;
{? OKRO_F.prev() & OKRO_F.ZAM='N'
|| {!
   |?
      {? OKRO_F.POCZ<>date(0,0,0)
      || DOK.use('doku'+OKRO_F.ROK().KOD+form(OKRO_F.NR,-2));
         DOK.index('PR1');
         DOK.prefix('T','N'); _p3+=DOK.first();
         DOK.prefix('N','N'); _p4+=DOK.first()
      ?};
      _p3=0 & _p4=0 & OKRO_F.prev() & OKRO_F.ZAM='N'
   !}
?};
OKRO_F.cntx_pop();
{? (_p1 | _p2) & (_p3 | _p4)
|| _ok:=FUN.choice('Istnieją niezaksięgowane dokumenty w okresie %1 oraz poprzednich niezamkniętych okresach.'@[_okres]
      ,,'Kontynuuj'@)
|? (_p1 | _p2)
|| _ok:=FUN.choice('Istnieją niezaksięgowane dokumenty w okresie %1.'@[_okres],,'Kontynuuj'@)
|? (_p3 | _p4)
|| _ok:=FUN.choice('Istnieją niezaksięgowane dokumenty w niezamkniętych okresach poprzedzających okres %1.'@[_okres]
      ,,'Kontynuuj'@)
?};
DOK.cntx_pop();
_ok


\be_c_vpoz_rozl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Przed redakcja pol VPOZ_ROZ
::  OLD: \be_c_vpoz_rozl/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
VPOZ_ROZ.GR_VAT & exec('gr_pod_typ','dok_fks',VPOZ_ROZ.GR_VAT().GRVAT().KOD)=1 & ~(SLO.KOD='ZakuPods' | SLO.KOD='ZInwPods')


\ae_c_vpoz_rozl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Po redakcji pol VPOZ_ROZ
::  OLD: \ae_c_vpoz_rozl/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
exec('setvatodlroz','!fks_vat_droz');
exec('bv_rozl_cz1','fks_vat',1);
1


\chk_kh_in_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Sprawdzenie, czy kontrahent jest czynnym podatnikiem VAT
::   WE: [_a] - kontrahent
::       [_b] - nip
::       [_c] - [0]-przycisk 1-akcja
::  OLD: \chk_kh_in_vat/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);
_nip:={? var_press('_b')>0 || _b
      |? _tab=DOK || DOK.NIP
      |? _tab=KH || KH.NIP
      |? _tab=WIND_KH || WIND_KH.KH().SNIP
      |? _tab=VAT_PS || VAT_PS.NIP
      || SKID.NIP
      ?};
{? 2+_nip='PL' || _nip:=2-_nip ?};
{? _tab.sel_size() & var_pres('CinVAT')>0
|| _data:=CinVAT
|| _data:=exec('chk_in_vat_data','fks_vat',0);
   {? _tab=DOK
   || _data.D:=DOK.DOP;
      _data.BTN:='Na datę &operacji'@
   |? _tab=EDOKUM
   || _data.D:=EDOKUM.DOP;
      _data.BTN:='Na datę &sprzedaży'@
   || _data.D:=date();
      _data.BTN:='Na &dziś'@
   ?}
?};
_snip:=exec('niptostr','#string',_nip);
{? _snip=''
|| {? _tab.sel_size()=0
   || FUN.info('Nie podano numeru NIP.'@)
   || _data.BRAK+=1
   ?}
|? exec('period','blp',_snip)=-1
|| {? _tab.sel_size()=0
   || FUN.info('Wyłączono sprawdzanie podatnika VAT.'@)
   || _data.OFF+=1
   ?}
|? _data.ask(_snip)
|| echo('Trwa sprawdzanie aktywności podatnika VAT ...'@);
   _res:=exec('check','blp','K',_snip,_data.D);
   {? _res.RES=200
   || {? _tab=DOK & var_pres('ID_S_VAT',DOK)>0
      || DOK.ID_S_VAT:=_res.ID_REQ
      |? _tab=KH & var_pres('S_VAT',KH)>0
      || _kh_svat:='';
         _kh_svatd:=date(0,0,0);
         KH.cntx_psh();
         {? KH.get()
         || _kh_svat:=KH.S_VAT;
            _kh_svatd:=KH.S_VAT_D
         ?};
         KH.cntx_pop();
         KH.S_VAT:=_kh_svat;
         KH.S_VAT_D:=_kh_svatd
      ?};
      _odp:={? _res.GRVAT
            || 'Podmiot '+KH.NAZ+' jest na dzień '+$_data.D+' członkiem grupy VAT.\n'+
               'Wynik sprawdzania dotyczy grupy VAT.\n\n'+_res.OPIS 
            || _res.OPIS
            ?};
      echo();
      {? _odp<>'' & ~_data.GRP
      || {? _res.KOD='C'
         || FUN.info(_odp)
         || FUN.emsg(_odp)
         ?}
      ?}
   |? _res.RES=400
   || {? ~_data.GRP || FUN.info(_res.OPIS) ?}
   || {? ~_data.GRP
      || FUN.info('Nie udało się pobrać informacji o podatniku VAT\nz bramki Ministerstwa Finansów.'@)
      ?}
   ?};
   {? _data.GRP=0 & _res.REF
   || KHCHKNIP.seek(_res.REF,)
   ?};
   _data.update(_res);
   echo()
?};
{? _tab=KH || '' || _nip ?}


\vat_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Zwraca informacje o kontrahencie po sprawdzeniu aktywności podatnika VAT
::   WE: _a - obieky z odpowiedzią
::  OLD: \vat_info/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=_a;
'Bramka Ministerstwa Finansów dla podatnika:\n\n'+
_res.NAZ+'\n'+
_res.ADRES+'\n\n'+
'zwraca następujący status VAT:\n\n'+
{? _res.DATA<>date()
|| {? _res.ACTIV='T' || 'Czynny' || 'Niezarejestrowany' ?}+' ('+$_res.DATA+')\n'
|| ''
?}+
_res.STATUS+' ('+$date()+')'


\chk_in_vat_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Obiekt do ustawienia daty sprawdzenia podatnika VAT oraz operacji grupowej sprawdzania podatnika
::   WE: _a - akcja grupowa: 1-tak 2-tak z pomijaniem sprawdzonych
::----------------------------------------------------------------------------------------------------------------------
_data:=obj_new(
   'D','BTN','GRP','first','update','HT',
   'ALL','NEW','SKIP','ERR','BRAK','OFF',
   'ask','info'
);
_data.D:=date();
_data.BTN:='Na &dziś';
_data.GRP:=_a;
_data.first:=1;
_data.HT:=~~;
_data.ask:="
   {? .first
   || .first:=0;
      .ALL:=cur_tab(1).sel_size();
      .NEW:=.ERR:=.SKIP:=.BRAK:=.OFF:=0;
      {? .GRP=2
      || .HT:=exec('create_set','blp','STRING[15]')
      ?};
      _txt:={? .GRP
            || 'Czy sprawdzić aktywność zaznaczonych podatników VAT?'@
            || 'Czy sprawdzić aktywność podatnika VAT?'@
            ?};
      {? (_opt:=FUN.choice(_txt,,.BTN,'Inny dzień'))
      || {? _opt=2
         || undefine();
            define('D',date(),'Data','Data dla której nastąpi sprawdzenia aktywności podatnika VAT'@);
            {? def_edit(\"
                  {? DEFINE.D=date(0,0,0)
                  || FUN.info('Nie podano daty.'@);
                     0
                  |? DEFINE.D>date()
                  || FUN.info('Data nie może być późniejsza niż dzisiejsza.'@);
                     DEFINE.D:=date();
                     0
                  || 1
                  ?}
               \")
            || .D:=DEFINE.D
            || _opt:=0
            ?}
         ?};
         _opt
      ?}
   |? .GRP=1 | .HT.addIfNotExists(_a)
   || 1
   ?}
";
_data.update:="
   _res:=_a;
   {? _res.SKIP
   || .SKIP+=1
   |? _res.RES=-2
   || .OFF+=1
   |? _res.RES=200
   || .NEW+=1
   || .ERR+=1
   ?}
";
_data.info:="
   {? .GRP=2
   || .ALL:=.HT.TAB.size()
   ?};
   FUN.info(
      'Liczba zaznaczonych podatników do sprawdzenia: '@+$.ALL+
      {? .NEW || '\nLiczba sprawdzonych podatników: '@+$.NEW || '' ?}+
      {? .SKIP || '\nLiczba pominiętych sprawdzeń podatników: '@+$.SKIP || '' ?}+
      {? .OFF || '\nLiczba wyłączonych sprawdzeń podatników: '@+$.OFF || '' ?}+
      {? .BRAK || '\nLiczba podatników bez NIP-u: '@+$.BRAK || '' ?}+
      {? .ERR || '\nLiczba błędnych sprawdzeń podatników: '@+$.ERR || '' ?}
   )
";
_data


\bg_kh_in_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Przed akcja grupową sprawdzania aktywności podatników VAT
::   WE: _a - 1-dla wszystkich, 2-z pominięciem tych samych NIP-ów
::----------------------------------------------------------------------------------------------------------------------
_par:={? var_pres('_a')>0 || _a || 1 ?};
VAR_DEL.delete('CinVAT');
CinVAT:=exec('chk_in_vat_data','fks_vat',_par);
{? CinVAT.ask(1)
|| sel_nchk(); 1
|| VAR_DEL.delete('CinVAT');
   0
?}


\ag_kh_in_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Po akcja grupowej sprawdzania aktywności podatników VAT
::--------------------------------------------------------------------------------------------------------------------------------------
CinVAT.info();
VAR_DEL.delete('CinVAT')


\is_vpoz_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Czy dokument ksiegowy zawiera rozdzielone rozliczenie VAT-u należnego i naliczonego?
::   WY: 1 - tak, 0 w p. p.
::----------------------------------------------------------------------------------------------------------------------
VPOZ.cntx_psh();
VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
_ret:=0;
{? VPOZ.first()
|| {!
   |? _ret:={? VPOZ.OKR_Z=null() & VPOZ.OKR_C<>null()
            || FUN.info('Rozliczono już podatek naliczony.\nSkorzystaj z funkcji ROZLICZ dla pozycji VAT.'@);
               1
            |? VPOZ.OKR_C=null() & VPOZ.OKR_Z<>null()
            || FUN.info('Rozliczono już podatek należny.\nSkorzystaj z funkcji ROZLICZ dla pozycji VAT.'@);
               1
            |? VPOZ.OKR_C<>null() & VPOZ.OKR_Z<>null()
            || FUN.info('Rozliczono już podatek należny i naliczony.'@);
               1
            ?};
            ~_ret & VPOZ.next()
   !}
?};
VPOZ.cntx_pop();
_ret


\is_vpoz_czrozl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła sprawdza, czy pozycja VAT została całkowicie rozliczona i zapisuje DOK.OKRVAT
::   WE: _a-ref tabeli VPOZ
::----------------------------------------------------------------------------------------------------------------------
_p300235:=exec('get','#params',300235,2);
{? _p300235<>'N'
|| DOK.cntx_psh(); VPOZ.cntx_psh(); VPOZ_ROZ.cntx_psh();
   _mask:=ref_name(_a)+4; VPOZ.use('pozv'+_mask); VPOZ_ROZ.use('pozr'+_mask); DOK.use('doku'+_mask);
   VPOZ.prefix(); VPOZ_ROZ.prefix(); DOK.prefix();
   _dalej:=0;
   {? VPOZ.seek(_a) & DOK.seek(VPOZ.DOK)
   || _dokref:=VPOZ.DOK;
      _okr:=SSTALE.AO;
      {? exec('is_rozl_cz_full','fks_vat')
      || OKRO_F.cntx_psh();
         VPOZ_ROZ.index('VPOZ_ROZ'); VPOZ_ROZ.prefix(_a);
         _okrtab:=tab_tmp(,'POCZ','DATE','Początek','OREF','STRING[16]','Ref');
         {? VPOZ_ROZ.first()
         || {! |?
               VPOZ_ROZ.OKRO_F();
               _okrtab.POCZ:=OKRO_F.POCZ;
               _okrtab.OREF:=$VPOZ_ROZ.OKRO_F;
               _okrtab.add();
               VPOZ_ROZ.next()
            !}
         ?};
         _okrtab.prefix();
         {? _okrtab.last() & OKRO_F.seek(_okrtab.OREF)
         || _okr:=OKRO_F.ref()
         ?};
         OKRO_F.cntx_pop();
         VPOZ.OKRVAT:=_okr;
         VPOZ.trig_off('*','*');
         VPOZ.put(1);
         VPOZ.trig_on('*','*');
         _dalej:=1
      ?};
      {? _dalej
      || VPOZ.index('VDOK'); VPOZ.prefix(_dokref); _ok:=1;
         {? VPOZ.first()
         || {! |?
               {? VPOZ.OKRVAT<>_okr || _ok:=0 ?};
               VPOZ.next()
            !};
            {? _ok
            || DOK.seek(_dokref);
               DOK.OKRVAT:=_okr;
               DOK.CZY_CZ:='T';
               DOK.trig_off('*','*');
               DOK.put(1);
               DOK.trig_on('*','*')
            ?}
         ?}
      ?}
   ?};
   DOK.cntx_pop(); VPOZ.cntx_pop(); VPOZ_ROZ.cntx_pop()
|| 1
?}


\grvat_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [23.25]
:: OPIS: Parametry pracy
::----------------------------------------------------------------------------------------------------------------------
_ar:=SSTALE.AR;
_ao:=SSTALE.AO;
_odd:=OPERATOR.DEPT;
_wgkraj:=__wgkraj;
{? __PARSES.editDom('FKS')
|| {? SSTALE.AR<>_ar | _odd<>OPERATOR.DEPT
    || TREE_VAT.erase();
       exec('fill_tree_vat','fks_vat');
       TREE_VAT.first()
   ?};
   {? SSTALE.AR<>_ar | _odd<>OPERATOR.DEPT | _ao<>SSTALE.AO
   || grp_disp(TREE_VAT,w_acr,1);
      exec('title','fks_vat'); VAR_DEL.delete('dokref','dokndx');
      DOK.f_clear();
      {? cur_tab(1,1)=DOK & cur_win(1,1)='C_GRVAT'
      || _maska:=SSTALE.AR().KOD+form(SSTALE.AO().NR,-2);
          {? DOK.use('doku'+_maska) & POZ.use('pozy'+_maska)
          || {? OPERATOR.DEPT=null
              || {? var_pres('dokndx')<=0
                  || DOK.index('GV')
                  || DOK.index(dokndx)
                  ?};
                 DOK.prefix('GL','T');
                 {? var_pres('dokref')>0
                 || {? DOK.seek(#dokref,'doku'+_maska) || DOK.DOK_REJ(); 1 ?}
                 || {? DOK.first() || DOK.DOK_REJ(); 1 ?}
                 ?}
              || {? var_pres('dokndx')<=0
                  || DOK.index('GV_O')
                  || DOK.index(dokndx)
                  ?};
                  DOK.prefix(OPERATOR.DEPT,'GL','T');
                  {? var_pres('dokref')>0
                  || {? DOK.seek(#dokref,'doku'+_maska) || DOK.DOK_REJ(); 1 ?}
                  || {? DOK.first() || DOK.DOK_REJ(); 1 ?}
                  ?}
              ?};
             exec('czytaj','#stalesys',DOK.DTO,KST,'GRVAT')
          ?}
      ?}
   ?};
  {? ~(cur_tab(1,1)=DOK & cur_win(1,1)='C_GRVAT')
  || __wgkraj:=_wgkraj;
     {? __wgkraj || exec('arw_tree_vat2','!fks_vat_zdoz') || exec('arw_tree_vat','!fks_vat_zdoz') ?}
  ?};
ODD.f_clear()
?}


:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:36 6ce2a501d1aa380fdcc8f0d15ab7c4d0970b0177da086bcce166d3e0255178483559956f6fd917ed73d76ba304acdc27a2f86fe88afdfb79c9fe3ebc53f9bd75bc194ba32eafa692351725cd0a107e06ed32ca3b3a599c4a693b7a73d4895d890b598432226ba23315bd2ded5b72fc587c1fa6b7304911aee6847ff570d6a4d2
