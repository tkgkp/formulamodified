:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: st_wer.fml
:: Utworzony: 03.06.2020
:: Autor: AKUL
::======================================================================================================================
:: Zawartość: Formuły tworzące treść maili dla dla systemu Statystyki
::======================================================================================================================


\parse
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Mail zawierający komunikaty z parsowania
::   WE: _a - obj_new - środowisko parsowania
::   WY: STRING - treść maila
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_result:='';
_can_continue:=1;

_maxstr:=524172;

_tab:=_env.TAB_ERR;
_tab.cntx_psh();
_tab.index(_env.NDX_ERR3);
_tab.prefix(0);
{? _tab.first()
||
   _result:='<h3>Liczba nowych komunikatów: %1</h3><br><br>'@[$_tab.size()];
   _result+='
      <table [[STYLE_TABLE]]>
      <tr [[STYLE_TABLE_TR]]>
         <th [[STYLE_TABLE_TH]]>%1 &nbsp;&nbsp;&nbsp;</th>
         <th [[STYLE_TABLE_TH]]>%2 &nbsp;&nbsp;&nbsp;</th>
         <th [[STYLE_TABLE_TH]]>%3 &nbsp;&nbsp;&nbsp;</th>
         <th [[STYLE_TABLE_TH]]>%4 &nbsp;&nbsp;&nbsp;</th>
         <th [[STYLE_TABLE_TH]]>%5 &nbsp;&nbsp;&nbsp;</th>
      </tr>
   '
   ['Lp.','Plik','Treść','Id','Komputer'];
   _lp:=0;
   _size_end:=exec('get_str_size','#string','</table>');
   {!
   |? _size_txt:=0;
      _line:=form(_tab.LINE);

      _rec_s:='?';
      _rec_osw:='?';
      _computername:='?';
      _id:='?';
      {? _tab.FILEPATH<>''
      || ST_SRC.cntx_psh();
         ST_SRC.index('KIND');
         ST_SRC.prefix('S',_tab.FILEPATH,);
         {? ST_SRC.first()
         || _rec_s:=ST_SRC.memo_txt(,1,'LINE')
         ?};
         ST_SRC.prefix('OSW',_tab.FILEPATH,);
         {? ST_SRC.first()
         || _rec_osw:=ST_SRC.memo_txt(,1,'LINE')
         ?};
         ST_SRC.cntx_pop();
         ~~
      ?};
      {? _rec_osw<>''
      || {? var_pres('_split')>100
         || obj_del(_split)
         ?};
         _split:=spli_str(_rec_osw,',');
         {? obj_len(_split)>2
         || _computername:=_split[3]
         ?}
      ?};
      {? _rec_s<>''
      || {? var_pres('_split')>100
         || obj_del(_split)
         ?};
         _split:=spli_str(_rec_s,',');
         {? obj_len(_split)>6
         || _id:=_split[3]+' '+_split[4]+' '+_split[5]+' '+_split[6]+' '+_split[7]
         ?}
      ?};

      {? _line<>''
      || _lp+=1;
         _msg:=_tab.memo_txt(,1,'MESSAGE');
         _row:='
            <tr [[STYLE_TABLE_TR]]>
               <td [[STYLE_TABLE_TD]] align="right">%1</td>
               <td [[STYLE_TABLE_TD]] >%2</td>
               <td [[STYLE_TABLE_TD]] >%3</td>
               <td [[STYLE_TABLE_TD]] >%4</td>
               <td [[STYLE_TABLE_TD]] >%5</td>
            </tr>
         '
         [$_lp,_tab.FILENAME,_msg,_id,_computername];

         _size_row:=exec('get_str_size','#string',_row);

         {? _size_row+_size_txt+_size_end>_maxstr
         || _can_continue:=0
         ||
            _result+=_row;
            _size_txt:=exec('get_str_size','#string',_result)
         ?}
      ?};
      _tab.next() & _can_continue>0
   !};
   _result+='</table>'
?};
_tab.cntx_pop();
_result


\system_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Mail o stanie systemu
::   WY: STRING
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_result:='';

_result:='<h3>Tygodniowy mail o statusie systemu</h3><br><br>';
   _result+='
      <table [[STYLE_TABLE]]>
      <tr [[STYLE_TABLE_TR]]>
         <th [[STYLE_TABLE_TH]]>%1 &nbsp;&nbsp;&nbsp;</th>
         <th [[STYLE_TABLE_TH]]>%2 &nbsp;&nbsp;&nbsp;</th>
         <th [[STYLE_TABLE_TH]]>%3 &nbsp;&nbsp;&nbsp;</th>
      </tr>
   '
   ['Lp.','Nazwa','Wartość'];

_lp:=0;

_lp+=1;
ST_KHI.cntx_psh();
ST_KHI.index('ANALIZA');
ST_KHI.prefix('T');
_result+='
            <tr [[STYLE_TABLE_TR]]>
               <td [[STYLE_TABLE_TD]] align="right">%1</td>
               <td [[STYLE_TABLE_TD]] >%2</td>
               <td [[STYLE_TABLE_TD]] >%3</td>
            </tr>
         '
         [$_lp,'Ilość instalacji klientów które są analizowane',form(ST_KHI.size(),,,' ')];
ST_KHI.cntx_pop();

_lp+=1;
ST_ARCH.cntx_psh();
ST_ARCH.prefix();
_result+='
            <tr [[STYLE_TABLE_TR]]>
               <td [[STYLE_TABLE_TD]] align="right">%1</td>
               <td [[STYLE_TABLE_TD]] >%2</td>
               <td [[STYLE_TABLE_TD]] >%3</td>
            </tr>
         '
         [$_lp,'Ilość archiwów',$ST_ARCH.size()];
ST_ARCH.cntx_pop();

_lp+=1;
{? var_pres('_args_src')>100
|| obj_del(_args_src)
?};
_args_src:=obj_new('SIZE');
_args_src.SIZE:=0;
_rule_src:="
   _args:=_b;
   _result:=1;
   ST_SRC.cntx_psh();
   ST_SRC.index('TM_STAMP');
   ST_SRC.prefix();
   _args.SIZE+=ST_SRC.size();
   ST_SRC.cntx_pop();
   _result
";
exec('for_each_mask','#table',ST_SRC,_rule_src,,,_args_src,1);

_result+='
            <tr [[STYLE_TABLE_TR]]>
               <td [[STYLE_TABLE_TD]] align="right">%1</td>
               <td [[STYLE_TABLE_TD]] >%2</td>
               <td [[STYLE_TABLE_TD]] >%3</td>
            </tr>
         '
         [$_lp,'Ilość rekordów źródłowych',form(_args_src.SIZE,,,' ')];

_lp+=1;
_args_log:=obj_new('SIZE');
_args_log.SIZE:=0;
_rule_log:="
   _args:=_b;
   _result:=1;
   ST_LOG.cntx_psh();
   ST_LOG.index('TM_ADD');
   ST_LOG.prefix();
   _args.SIZE+=ST_LOG.size();
   ST_LOG.cntx_pop();
   _result
";
exec('for_each_mask','#table',ST_LOG,_rule_log,,,_args_log,1);

_result+='
            <tr [[STYLE_TABLE_TR]]>
               <td [[STYLE_TABLE_TD]] align="right">%1</td>
               <td [[STYLE_TABLE_TD]] >%2</td>
               <td [[STYLE_TABLE_TD]] >%3</td>
            </tr>
         '
         [$_lp,'Ilość rekordów sparsowanych',form(_args_log.SIZE,,,' ')];

_lp+=1;
{? var_pres('_args_src')>100
|| obj_del(_args_src)
?};
_args_src:=obj_new('SIZE');
_args_src.SIZE:=0;
_rule_src:="
   _args:=_b;
   _result:=1;
   ST_SRC.cntx_psh();
   ST_SRC.index('HAS_MSG');
   ST_SRC.prefix('T');
   _args.SIZE+=ST_SRC.size();
   ST_SRC.cntx_pop();
   _result
";
exec('for_each_mask','#table',ST_SRC,_rule_src,,,_args_src,1);

_result+='
            <tr [[STYLE_TABLE_TR]]>
               <td [[STYLE_TABLE_TD]] align="right">%1</td>
               <td [[STYLE_TABLE_TD]] >%2</td>
               <td [[STYLE_TABLE_TD]] >%3</td>
            </tr>
         '
         [$_lp,'Rekordy źródłowe z komunikatami',form(_args_src.SIZE,,,' ')];

_lp+=1;
{? var_pres('_args_src')>100
|| obj_del(_args_src)
?};
_args_src:=obj_new('SIZE');
_args_src.SIZE:=0;
_rule_src:="
   _args:=_b;
   _result:=1;
   ST_SRC.cntx_psh();
   ST_SRC.index('PARSED');
   ST_SRC.prefix('X');
   _args.SIZE+=ST_SRC.size();
   ST_SRC.cntx_pop();
   _result
";
exec('for_each_mask','#table',ST_SRC,_rule_src,,,_args_src,1);

_result+='
            <tr [[STYLE_TABLE_TR]]>
               <td [[STYLE_TABLE_TD]] align="right">%1</td>
               <td [[STYLE_TABLE_TD]] >%2</td>
               <td [[STYLE_TABLE_TD]] >%3</td>
            </tr>
         '
         [$_lp,'Rekordy źródłowe niesparsowane poprawnie',form(_args_src.SIZE,,,' ')];

_lp+=1;
_args_inst:=obj_new('SIZE');
_args_inst.SIZE:=0;
_rule_inst:="
   _args:=_b;
   _result:=1;
   BI_PROC.cntx_psh();
   BI_PROC.index('UID');
   BI_PROC.prefix();
   _args.SIZE+=BI_PROC.size();
   BI_PROC.cntx_pop();
   _result
";
exec('for_each_mask','#table',BI_PROC,_rule_inst,,,_args_inst,1);

_result+='
            <tr [[STYLE_TABLE_TR]]>
               <td [[STYLE_TABLE_TD]] align="right">%1</td>
               <td [[STYLE_TABLE_TD]] >%2</td>
               <td [[STYLE_TABLE_TD]] >%3</td>
            </tr>
         '
         [$_lp,'Ilość instancji procesów',form(_args_inst.SIZE,,,' ')];

{? sys_name(1)*'U_'>0
|| _filepath:='/tmp/disk.txt';
   system('sh -c "df -h / >>%1"'[_filepath],1);
   _file:=fopen(_filepath,'ur',0);
   {? _file>0
   ||
      _lp+=1;
      {!
      |? _line:=fread(_file);
         {? _line*'/dev/mapper/mcl-mstats'>0
         || _line:=gsub(_line,'/dev/mapper/mcl-mstats','');
            _line:=gsub(_line,'/','');
            _line:=form(_line);
            _result+='
                        <tr [[STYLE_TABLE_TR]]>
                           <td [[STYLE_TABLE_TD]] align="right">%1</td>
                           <td [[STYLE_TABLE_TD]] >%2</td>
                           <td [[STYLE_TABLE_TD]] >%3</td>
                        </tr>
                     '
                     [$_lp,'Dysk (Rozmiar/Użyto/Wolne/% użycia)',_line]
         ?};
         _line<>'\n'
      !};
      fclose(_file)
   ?};
   _file2:=fopen(_filepath,'Uw',0);
   {? _file2>0
   || fclose(_file2)
   ?};
   ~~
?};

B_WORKER.cntx_psh();
B_WORKER.index('KOD');
B_WORKER.prefix(REF.FIRMA);
{? B_WORKER.first()
||
   _result+='
            <tr [[STYLE_TABLE_TR]]>
               <td [[STYLE_TABLE_TD]] align="right">%1</td>
               <td [[STYLE_TABLE_TD]] >%2</td>
               <td [[STYLE_TABLE_TD]] >%3</td>
            </tr>
         '
         ['---','-------------','---'];
   {!
   |? _lp+=1;
      _result+='
            <tr [[STYLE_TABLE_TR]]>
               <td [[STYLE_TABLE_TD]] align="right">%1</td>
               <td [[STYLE_TABLE_TD]] >%2</td>
               <td [[STYLE_TABLE_TD]] >%3</td>
            </tr>
         '
         [$_lp,'Czas przetwarzania [s] kolejki: %1'[B_WORKER.KOD],form(B_WORKER.TMAXPROC,,1,' ')];
      B_WORKER.next()
   !}
?};
B_WORKER.cntx_pop();

_result+='</table>';
_result


\restarts
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Zwraca liczbę restartów wszystkich kolejek
::   WY: REAL
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
B_WORKER.cntx_psh();
B_WORKER.index('KOD');
B_WORKER.prefix(REF.FIRMA);
{? B_WORKER.first()
|| {!
   |? _result+=B_WORKER.RESTARTS;
      B_WORKER.next()
   !}
?};
B_WORKER.cntx_pop();
_result


\restarts_mail
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Mail o restartach kolejek
::   WY: REAL
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_result:='';
_p100930:=exec('get','#params',100930,1);
_result:='<h3>Liczba wszystkich restartów: %1, kolejki zostaną wyłączone przy liczbie restartów: %2</h3><br><br>'[$exec('restarts','st_mail'),$_p100930];

_result+='
   <table [[STYLE_TABLE]]>
   <tr [[STYLE_TABLE_TR]]>
      <th [[STYLE_TABLE_TH]]>%1 &nbsp;&nbsp;&nbsp;</th>
      <th [[STYLE_TABLE_TH]]>%2 &nbsp;&nbsp;&nbsp;</th>
   </tr>
'
['Kolejka.','Liczba restartów'];

B_WORKER.cntx_psh();
B_WORKER.index('KOD');
B_WORKER.prefix(REF.FIRMA);
{? B_WORKER.first()
|| {!
   |?
      _row:='
         <tr [[STYLE_TABLE_TR]]>
            <td [[STYLE_TABLE_TD]] >%1</td>
            <td [[STYLE_TABLE_TD]] >%2</td>
         </tr>
      '
      [B_WORKER.KOD,$B_WORKER.RESTARTS];
      _result+=_row;
      B_WORKER.next()
   !}
?};
B_WORKER.cntx_pop();
_result+='</table>';
_result


\st_kh_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Zebranie danych dot. kontrahentów wysyłających statystyki mimo braku zgody
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_out:=params_get().out;
_env:=exec('env_parse','st_common');
_env.DIALOG:=0;

_tab:=tab_tmp(4
   ,'GHW_REF','STRING[16]','ST_GHW.ref()'
   ,'GHW','STRING[150]','GHW'
   ,'NRS','STRING[6]','Nr seryjny'
   ,'KH','STRING[150]','Kontrahent'
   ,'OD','DATE','Zakres danych od'
   ,'DO','DATE','Zakres danych do'
   ,'COUNT_F','INTEGER','Ilość plików'
   ,'COUNT_R','INTEGER','Ilość wpisów'
);
_args:=obj_new('TAB','ENV');
_args.TAB:=_tab;
_args.ENV:=_env;

_rule:="
   _args:=_b;
   _env:=_args.ENV;
   _tab:=_args.TAB;

   ST_SRC.cntx_psh();
   ST_SRC.index('KH_STAT');
   ST_SRC.prefix('X','S','T');
   {? ST_SRC.first()
   || {!
      |?
         _txt:=ST_SRC.memo_txt(,1,'MESSAGE');
         {? _txt*'Brak zgody na przetwarzanie statystyk kontrahenta powiązanym z numerem seryjnym'@>0
         ||
::          Pobranie ilości wpisów
            _count:=0;
            _file:=ST_SRC.FILEPATH;
            ST_SRC.cntx_psh();
            ST_SRC.index('FILEPATH');
            ST_SRC.prefix(_file,);
            _count:=ST_SRC.size();
            ST_SRC.cntx_pop();
::          Znalezienie kontrahenta (parsowanie pojedynczej linii)
            _line:=ST_SRC.memo_txt(,1,'LINE');
            {? var_pres('_obj')>100
            || obj_del(_obj)
            ?};
            _obj:=exec('create_parse_obj','st_parse_core',_env,_line,_file);
::            _nrs:=_obj.OBJ.SerSerial+6;
            _nrs:=exec('chmura_podmiana','st_kh',_obj.OBJ.SerSerial);
            ST_KH.cntx_psh();
            ST_KH.index('NRS');
            ST_KH.prefix(_nrs);
            {? ST_KH.first()
            ||
::             Dodanie rekordu
               ST_GHW.cntx_psh();
               ST_GHW.clear();
               _tab.cntx_psh();
               _tab.clear();
::               _tab.prefix($ST_KH.ST_GHW,ST_KH.NRS,);
               {? _tab.find_tab(,'GHW_REF',,'=',$ST_KH.ST_GHW,'NRS',,'=',ST_KH.NRS)
               || _tab.COUNT_F+=1;
                  _tab.COUNT_R+=_count;
                  {? ST_SRC.SRC_DATE>_tab.DO || _tab.DO:=ST_SRC.SRC_DATE ?};
                  {? ST_SRC.SRC_DATE<_tab.OD || _tab.OD:=ST_SRC.SRC_DATE ?};
                  _tab.put()
               || _tab.GHW_REF:=$ST_KH.ST_GHW;
                  _tab.NRS:=ST_KH.NRS;
                  _tab.GHW:=ST_KH.ST_GHW().DANE;
                  _tab.KH:=ST_KH.DANE;
                  _tab.COUNT_F:=1;
                  _tab.COUNT_R:=_count;
                  _tab.DO:=ST_SRC.SRC_DATE;
                  _tab.OD:=ST_SRC.SRC_DATE;
                  _tab.add()
               ?};
               ST_GHW.cntx_pop();
               _tab.cntx_pop()
            ?};
            ST_KH.cntx_pop()
         ?};
         ST_SRC.next()
      !}

   ?};
   ST_SRC.cntx_pop()
";
exec('for_each_mask','#table',ST_SRC,_rule,,,_args,1);
{? _tab.first()
||
:: Eksport do pliku CSV
   _name:='st_stat_'+$SYSLOG.tm_stamp()+'.csv';
   _can_continue:=_tab.export(_name,,,'UTF-8',,
                                 'GHW',,1,,
                                 'NRS',,2,,
                                 'KH',,3,,
                                 'OD',,4,,
                                 'DO',,5,,
                                 'COUNT_F',,6,,
                                 'COUNT_R',,7,,
                                 'GHW_REF',,8,
   );
   {? _can_continue>0
   || _BLOB:=tab_tmp(1,'PLIK','BLOBRAW','Nazwa pliku'@);
      _BLOB.blank();
      {? _BLOB.add()
      || {? _BLOB.bl_put('PLIK',_name,1,1,,1)
         || {? _mp.bl_add(_BLOB.PLIK)>0
            || ferase(_name,1);
               _mp.save(,_out)
            ?}
         ?}
      ?}
   ?}
?};
1


\st_ghw_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Zebranie danych dot. kontrahentów wysyłających statystyki mimo braku zgody (dla danego GHW)
::   WE: [_a] - INTEGER - 0/[1] - czy zawężać dziedzinę do GHW
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_out:=params_get().out;
_in:=params_get().in;

_blob:=_in.p01;
_pref_ghw:=1;
{? var_pres('_a')=type_of(0)
|| _pref_ghw:=_a
?};
{? _pref_ghw>0
|| _st_ghw:=_in.p02
|| _st_ghw:='brak'
?};
{? _blob<>null() & _st_ghw<>''
||
:: Odnalezienie i pobranie przekazanego w parametrze BLOBa
   BI_BLOB.cntx_psh();
   BI_BLOB.use(ref_name(_blob));
   BI_BLOB.prefix();
   BI_BLOB.cntx_psh();
   {? BI_BLOB.seek(_blob)
   || BI_BLOP.cntx_psh();
      _msk:=(4+BI_BLOP.name())+(BI_BLOB.name()+4);
      BI_BLOP.use(_msk);
      BI_BLOP.cntx_psh();
      BI_BLOP.index('BI_BLOB');
      BI_BLOP.prefix(BI_BLOB.ref());
      {? BI_BLOP.first()
      || _filename:=BI_BLOP.bl_info('BLOB','NAME');
         {? _filename<>'' & BI_BLOP.bl_get('BLOB',_filename,1)
         || _tab:=tab_tmp(4
               ,'GHW_REF','STRING[16]','ST_GHW.ref()'
               ,'GHW','STRING[150]','GHW'
               ,'NRS','STRING[6]','Nr seryjny'
               ,'KH','STRING[150]','Kontrahent'
               ,'OD','DATE','Zakres danych od'
               ,'DO','DATE','Zakres danych do'
               ,'COUNT_F','INTEGER','Ilość plików'
               ,'COUNT_R','INTEGER','Ilość wpisów'
            );
::          Załadowanie danych z pliku do tabeli
            _can_continue:=_tab.import(_filename,,,,'UTF-8',,
                                          'GHW',,1,,
                                          'NRS',,2,,
                                          'KH',,3,,
                                          'OD',,4,,
                                          'DO',,5,,
                                          'COUNT_F',,6,,
                                          'COUNT_R',,7,,
                                          'GHW_REF',,8,
            );
            ferase(_filename,1);
            {? _can_continue
            || {? _pref_ghw>0
               || _tab.prefix(_st_ghw)
               || _tab.prefix()
               ?};
               {? _tab.first()
               ||
::                Eksport do pliku CSV (plik zawiera tylko rekordy dotyczące danego GHW)
                  _name:='st_stat_'+$SYSLOG.tm_stamp()+'.csv';
                  _can_continue:=_tab.export(_name,,,'UTF-8',,
                                             'GHW',,1,,
                                             'NRS',,2,,
                                             'KH',,3,,
                                             'OD',,4,,
                                             'DO',,5,,
                                             'COUNT_F',,6,,
                                             'COUNT_R',,7,
                  );
                  {? _can_continue>0
                  || _BLOB:=tab_tmp(1,'PLIK','BLOBRAW','Nazwa pliku'@);
                     _BLOB.blank();
                     {? _BLOB.add()
                     || {? _BLOB.bl_put('PLIK',_name,1,1,,1)
                        || {? _mp.bl_add(_BLOB.PLIK)>0
                           || ferase(_name,1);
                              _mp.save(,_out)
                           ?}
                        ?}
                     ?}
                  ?}
               ?}
            ?}
         ?}
      ?};
      BI_BLOP.cntx_pop();
      BI_BLOP.cntx_pop()
   ?};
   BI_BLOB.cntx_pop();
   BI_BLOB.cntx_pop()
?};
1


\st_ghw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Wystawia klucz grupujący z GHW - ST_GHW.DANE
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;

_mp.grpkey();

ST_GHW.cntx_psh();
ST_GHW.prefix();
{? ST_GHW.first()
|| {!
   |? _mp.grpkeyAdd($ST_GHW.ref());
      ST_GHW.next()
   !}
?};
ST_GHW.cntx_pop();

_mp.done();
~~


\st_ghw_to
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Formuła zwraca listę adresów, które mają dostawać e-maile o liście kontrahentów wysyłających statystyki
::       bez wyrażenia zgody
::       Sposób użycia - wpisanie do pola 'Do': $exec('st_ghw_to','%mail',_a.p01)
::       albo: $exec('st_ghw_to','%mail',params_get().in.p01)
::       UWAGA: jeżeli przetwarzana osoba albo kontrahent nie ma zdefiniowanego adresu e-mail,
::              to formuła zwróci pustą listę
::   WE: _a - ST_GHW.ref()
::   WY: lista adresów e-mail oddzielonych przecinkami
::----------------------------------------------------------------------------------------------------------------------
_st_ghw:=_a;

_result:='';
ST_GHW.cntx_psh();
ST_GHW.prefix();
{? ST_GHW.seek(_st_ghw)
|| _email:=ST_GHW.EM;
   {? _email<>''
   || _tab:=exec('mail_from_list','#email',_email);
      {? _tab.first()
      || {!
         |? {? exec('mail_ok','#email',_tab.ADRES)
            || _result+=_tab.ADRES+','
            ?};
            _tab.next()
         !}
      ?}
   ?};
   ~~
?};
ST_GHW.cntx_pop();
_result


\st_ghw_sub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Formuła zwraca temat wiadomości o liście kontrahentów wysyłających statystyki bez wyrażenia zgody
::       Sposób użycia - wpisanie do pola 'Temat': $exec('st_ghw_sub','%mail',_a.p01)
::       albo: $exec('st_ghw_sub','%mail',params_get().in.p01)
::   WE: [_a] - ST_GHW.ref()
::----------------------------------------------------------------------------------------------------------------------
_st_ghw:=null();
{? var_pres('_a')=type_of(null())
|| _st_ghw:=_a
?};

_result:='';
_result:='[Statystyki] Informacja o statystykach użycia od klientów, którzy nie wyrazili zgody na ich przetwarzanie'@;
::ST_GHW.cntx_psh();
::ST_GHW.prefix();
::{? ST_GHW.seek(_st_ghw)
::||
::?};
::ST_GHW.cntx_pop();
_result


\st_ghw_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Formuła zwraca treść wiadomości o liście kontrahentów wysyłających statystyki bez wyrażenia zgody
::       (do części tekstowej e-maila)
::       Sposób użycia - wpisanie do pola 'Treść': $exec('st_ghw_txt','%mail',_a.p01,_a.FILE_A)
::       albo: $exec('st_ghw_txt','%mail',params_get().in.p01,params_get().in.FILE_A)
::   WE: _a - ST_GHW.ref()
::----------------------------------------------------------------------------------------------------------------------
_st_ghw:=_a;
_blob:=_b;

_result:='';
ST_GHW.cntx_psh();
ST_GHW.prefix();
{? ST_GHW.seek(_st_ghw)
||
:: Odnalezienie i pobranie przekazanego w parametrze BLOBa
   BI_BLOB.cntx_psh();
   BI_BLOB.use(ref_name(_blob));
   BI_BLOB.prefix();
   BI_BLOB.cntx_psh();
   {? BI_BLOB.seek(_blob)
   || BI_BLOP.cntx_psh();
      _msk:=(4+BI_BLOP.name())+(BI_BLOB.name()+4);
      BI_BLOP.use(_msk);
      BI_BLOP.cntx_psh();
      BI_BLOP.index('BI_BLOB');
      BI_BLOP.prefix(BI_BLOB.ref());
      {? BI_BLOP.first()
      || _filename:=BI_BLOP.bl_info('BLOB','NAME');
         {? _filename<>'' & BI_BLOP.bl_get('BLOB',_filename,1)
         || _tab:=tab_tmp(3
               ,'GHW','STRING[150]','GHW'
               ,'NRS','STRING[6]','Nr seryjny'
               ,'KH','STRING[150]','Kontrahent'
               ,'OD','DATE','Zakres danych od'
               ,'DO','DATE','Zakres danych do'
               ,'COUNT_F','INTEGER','Ilość plików'
               ,'COUNT_R','INTEGER','Ilość wpisów'
            );
::          Załadowanie danych z pliku do tabeli
            _can_continue:=_tab.import(_filename,,,,'UTF-8',,
                                          'GHW',,1,,
                                          'NRS',,2,,
                                          'KH',,3,,
                                          'OD',,4,,
                                          'DO',,5,,
                                          'COUNT_F',,6,,
                                          'COUNT_R',,7,
            );
            ferase(_filename,1);
::          Wypełnienie treści HTML
            {? _can_continue
            || _result:='Analiza dla GHW: %1.\n\n'@[ST_GHW.DANE];
               _result+='Poproś swoich Klientów o zgodę na zbieranie statystyk (wzór dokumentu w załączeniu) lub poproś o wygenerowanie nowych kluczy bez statystyk.\n\n'@;
               _result+='Nr seryjny'@+';'+'Kontrahent'@+';'+'Od'@+';'+'Do'@+';'+
                        'Ilość plików'@+';'+'Ilość wpisów źródłowych'@+'\n';
               {? _tab.first()
               || {!
                  |?
                     _result+=_tab.NRS+';';
                     _result+=_tab.KH+';';
                     _result+=$_tab.OD+';';
                     _result+=$_tab.DO+';';
                     _result+=form(_tab.COUNT_F,,,' ')+';';
                     _result+=form(_tab.COUNT_R,,,' ')+'\n';
                     _tab.next()
                  !}
               ?}
            ?}
         ?}
      ?};
      BI_BLOP.cntx_pop();
      BI_BLOP.cntx_pop()
   ?};
   BI_BLOB.cntx_pop();
   BI_BLOB.cntx_pop()
?};
ST_GHW.cntx_pop();
_result


\st_ghw_txt_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Formuła zwraca treść wiadomości o liście kontrahentów wysyłających statystyki bez wyrażenia zgody
::       (do części tekstowej e-maila)
::       Sposób użycia - wpisanie do pola 'Treść': $exec('st_ghw_txt','%mail',_a.p01,_a.FILE_A)
::       albo: $exec('st_ghw_txt','%mail',params_get().in.p01,params_get().in.FILE_A)
::   WE: _a - ST_GHW.ref()
::----------------------------------------------------------------------------------------------------------------------
_blob:=_a;

_result:='';
:: Odnalezienie i pobranie przekazanego w parametrze BLOBa
BI_BLOB.cntx_psh();
BI_BLOB.use(ref_name(_blob));
BI_BLOB.prefix();
BI_BLOB.cntx_psh();
{? BI_BLOB.seek(_blob)
|| BI_BLOP.cntx_psh();
   _msk:=(4+BI_BLOP.name())+(BI_BLOB.name()+4);
   BI_BLOP.use(_msk);
   BI_BLOP.cntx_psh();
   BI_BLOP.index('BI_BLOB');
   BI_BLOP.prefix(BI_BLOB.ref());
   {? BI_BLOP.first()
   || _filename:=BI_BLOP.bl_info('BLOB','NAME');
      {? _filename<>'' & BI_BLOP.bl_get('BLOB',_filename,1)
      || _tab:=tab_tmp(3
            ,'GHW','STRING[150]','GHW'
            ,'NRS','STRING[6]','Nr seryjny'
            ,'KH','STRING[150]','Kontrahent'
            ,'OD','DATE','Zakres danych od'
            ,'DO','DATE','Zakres danych do'
            ,'COUNT_F','INTEGER','Ilość plików'
            ,'COUNT_R','INTEGER','Ilość wpisów'
         );
::       Załadowanie danych z pliku do tabeli
         _can_continue:=_tab.import(_filename,,,,'UTF-8',,
                                       'GHW',,1,,
                                       'NRS',,2,,
                                       'KH',,3,,
                                       'OD',,4,,
                                       'DO',,5,,
                                       'COUNT_F',,6,,
                                       'COUNT_R',,7,
         );
         ferase(_filename,1);
::       Wypełnienie treści HTML
         {? _can_continue
         || _result:='Analiza zbiorcza dla GHW.\n\n'@;
            _result+='Poproś swoich Klientów o zgodę na zbieranie statystyk (wzór dokumentu w załączeniu) lub poproś o wygenerowanie nowych kluczy bez statystyk.\n\n'@;
            _result+='GHW'@+';'+'Nr seryjny'@+';'+'Kontrahent'@+';'+'Od'@+';'+'Do'@+';'+
                     'Ilość plików'@+';'+'Ilość wpisów źródłowych'@+'\n';
            {? _tab.first()
            || {!
               |?
                  _result+=_tab.GHW+';';
                  _result+=_tab.NRS+';';
                  _result+=_tab.KH+';';
                  _result+=$_tab.OD+';';
                  _result+=$_tab.DO+';';
                  _result+=form(_tab.COUNT_F,,,' ')+';';
                  _result+=form(_tab.COUNT_R,,,' ')+'\n';
                  _tab.next()
               !}
            ?}
         ?}
      ?}
   ?};
   BI_BLOP.cntx_pop();
   BI_BLOP.cntx_pop()
?};
BI_BLOB.cntx_pop();
BI_BLOB.cntx_pop();
_result


\st_ghw_html
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Formuła zwraca treść wiadomości o liście kontrahentów wysyłających statystyki bez wyrażenia zgody
::       (do części HTML e-maila)
::       Sposób użycia - wpisanie do pola 'Treść html': $exec('st_ghw_html','%mail',_a.p01,_a.FILE_A)
::       albo: $exec('st_ghw_html','%mail',params_get().in.p01,params_get().in.FILE_A)
::   WE: _a - ST_GHW.ref()
::       _b - Plik z danymi kontrahentów dla GHW
::----------------------------------------------------------------------------------------------------------------------
_st_ghw:=_a;
_blob:=_b;

_result:='';
ST_GHW.cntx_psh();
ST_GHW.prefix();
{? ST_GHW.seek(_st_ghw)
||
:: Odnalezienie i pobranie przekazanego w parametrze BLOBa
   BI_BLOB.cntx_psh();
   BI_BLOB.use(ref_name(_blob));
   BI_BLOB.prefix();
   BI_BLOB.cntx_psh();
   {? BI_BLOB.seek(_blob)
   || BI_BLOP.cntx_psh();
      _msk:=(4+BI_BLOP.name())+(BI_BLOB.name()+4);
      BI_BLOP.use(_msk);
      BI_BLOP.cntx_psh();
      BI_BLOP.index('BI_BLOB');
      BI_BLOP.prefix(BI_BLOB.ref());
      {? BI_BLOP.first()
      || _filename:=BI_BLOP.bl_info('BLOB','NAME');
         {? _filename<>'' & BI_BLOP.bl_get('BLOB',_filename,1)
         || _tab:=tab_tmp(3
               ,'GHW','STRING[150]','GHW'
               ,'NRS','STRING[6]','Nr seryjny'
               ,'KH','STRING[150]','Kontrahent'
               ,'OD','DATE','Zakres danych od'
               ,'DO','DATE','Zakres danych do'
               ,'COUNT_F','INTEGER','Ilość plików'
               ,'COUNT_R','INTEGER','Ilość wpisów'
            );
::          Załadowanie danych z pliku do tabeli
            _can_continue:=_tab.import(_filename,,,,'UTF-8',,
                                          'GHW',,1,,
                                          'NRS',,2,,
                                          'KH',,3,,
                                          'OD',,4,,
                                          'DO',,5,,
                                          'COUNT_F',,6,,
                                          'COUNT_R',,7,
            );
            ferase(_filename,1);
::          Wypełnienie treści HTML
            {? _can_continue
            || _result:='Analiza dla GHW <b>%1</b>.<br><br>'@[ST_GHW.DANE];
               _result+='Poproś swoich Klientów o zgodę na zbieranie statystyk (wzór dokumentu w załączeniu) lub poproś o wygenerowanie nowych kluczy bez statystyk.<br><br>'@;
               _result+='
                 <table [[STYLE_TABLE]]>
                 <tr [[STYLE_TABLE_TR]]>
                   <th [[STYLE_TABLE_TH]]><span style="font-weight:bold">%1</span></th>
                   <th [[STYLE_TABLE_TH]]><span style="font-weight:bold">%2</span></th>
                   <th [[STYLE_TABLE_TH]]><span style="font-weight:bold">%3</span></th>
                   <th [[STYLE_TABLE_TH]]><span style="font-weight:bold">%4</span></th>
                   <th [[STYLE_TABLE_TH]]><span style="font-weight:bold">%5</span></th>
                   <th [[STYLE_TABLE_TH]]><span style="font-weight:bold">%6</span></th>
                 </tr>
               '['Nr seryjny'@,'Kontrahent'@,'Od'@,'Do'@,'Ilość plików'@,'Ilość wpisów źródłowych'@];
               {? _tab.first()
               || {!
                  |?
                     _result+='
                         <tr [[STYLE_TABLE_TR]]>
                         <td [[STYLE_TABLE_TD]]>%1</td>
                         <td [[STYLE_TABLE_TD]]>%2</td>
                         <td [[STYLE_TABLE_TD]]>%3</td>
                         <td [[STYLE_TABLE_TD]]>%4</td>
                         <td [[STYLE_TABLE_TD]]>%5</td>
                         <td [[STYLE_TABLE_TD]]>%6</td>
                         </tr>
                     '[_tab.NRS,_tab.KH,$_tab.OD,$_tab.DO,form(_tab.COUNT_F,,,' '),form(_tab.COUNT_R,,,' ')];
                     _tab.next()
                  !}
               ?};
               _result+='</table>'
            ?}
         ?}
      ?};
      BI_BLOP.cntx_pop();
      BI_BLOP.cntx_pop()
   ?};
   BI_BLOB.cntx_pop();
   BI_BLOB.cntx_pop()
?};
ST_GHW.cntx_pop();
_result


\st_ghw_html_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Formuła zwraca treść wiadomości o liście kontrahentów wysyłających statystyki bez wyrażenia zgody
::       (do części HTML e-maila)
::       Sposób użycia - wpisanie do pola 'Treść html': $exec('st_ghw_html','%mail',_a.p01,_a.FILE_A)
::       albo: $exec('st_ghw_html','%mail',params_get().in.p01,params_get().in.FILE_A)
::   WE: _b - Plik z danymi kontrahentów dla GHW
::----------------------------------------------------------------------------------------------------------------------
_blob:=_a;

_result:='';
:: Odnalezienie i pobranie przekazanego w parametrze BLOBa
BI_BLOB.cntx_psh();
BI_BLOB.use(ref_name(_blob));
BI_BLOB.prefix();
BI_BLOB.cntx_psh();
{? BI_BLOB.seek(_blob)
|| BI_BLOP.cntx_psh();
   _msk:=(4+BI_BLOP.name())+(BI_BLOB.name()+4);
   BI_BLOP.use(_msk);
   BI_BLOP.cntx_psh();
   BI_BLOP.index('BI_BLOB');
   BI_BLOP.prefix(BI_BLOB.ref());
   {? BI_BLOP.first()
   || _filename:=BI_BLOP.bl_info('BLOB','NAME');
      {? _filename<>'' & BI_BLOP.bl_get('BLOB',_filename,1)
      || _tab:=tab_tmp(3
            ,'GHW','STRING[150]','GHW'
            ,'NRS','STRING[6]','Nr seryjny'
            ,'KH','STRING[150]','Kontrahent'
            ,'OD','DATE','Zakres danych od'
            ,'DO','DATE','Zakres danych do'
            ,'COUNT_F','INTEGER','Ilość plików'
            ,'COUNT_R','INTEGER','Ilość wpisów'
         );
::       Załadowanie danych z pliku do tabeli
         _can_continue:=_tab.import(_filename,,,,'UTF-8',,
                                       'GHW',,1,,
                                       'NRS',,2,,
                                       'KH',,3,,
                                       'OD',,4,,
                                       'DO',,5,,
                                       'COUNT_F',,6,,
                                       'COUNT_R',,7,
         );
         ferase(_filename,1);
::       Wypełnienie treści HTML
         {? _can_continue
         || _result:='Analiza zbiorcza.<br><br>'@;
            _result+='
              <table [[STYLE_TABLE]]>
              <tr [[STYLE_TABLE_TR]]>
                <th [[STYLE_TABLE_TH]]><span style="font-weight:bold">%1</span></th>
                <th [[STYLE_TABLE_TH]]><span style="font-weight:bold">%2</span></th>
                <th [[STYLE_TABLE_TH]]><span style="font-weight:bold">%3</span></th>
                <th [[STYLE_TABLE_TH]]><span style="font-weight:bold">%4</span></th>
                <th [[STYLE_TABLE_TH]]><span style="font-weight:bold">%5</span></th>
                <th [[STYLE_TABLE_TH]]><span style="font-weight:bold">%6</span></th>
                <th [[STYLE_TABLE_TH]]><span style="font-weight:bold">%7</span></th>
              </tr>
            '['GHW'@,'Nr seryjny'@,'Kontrahent'@,'Od'@,'Do'@,'Ilość plików'@,'Ilość wpisów źródłowych'@];
            {? _tab.first()
            || {!
               |?
                  _result+='
                      <tr [[STYLE_TABLE_TR]]>
                      <td [[STYLE_TABLE_TD]]>%1</td>
                      <td [[STYLE_TABLE_TD]]>%2</td>
                      <td [[STYLE_TABLE_TD]]>%3</td>
                      <td [[STYLE_TABLE_TD]]>%4</td>
                      <td [[STYLE_TABLE_TD]]>%5</td>
                      <td [[STYLE_TABLE_TD]]>%6</td>
                      <td [[STYLE_TABLE_TD]]>%7</td>
                      </tr>
                  '[_tab.GHW,_tab.NRS,_tab.KH,$_tab.OD,$_tab.DO,form(_tab.COUNT_F,,,' '),form(_tab.COUNT_R,,,' ')];
                  _tab.next()
               !}
            ?};
            _result+='</table>'
         ?}
      ?}
   ?};
   BI_BLOP.cntx_pop();
   BI_BLOP.cntx_pop()
?};
BI_BLOB.cntx_pop();
BI_BLOB.cntx_pop();
_result


:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:35 bd616505b2381baddd13591c75d607cbdaf5f9afba072050de5cead5141e81ba6dfaa5fd09c7b590ebf6a90ed1178d828ffcad6ec72aa022b6d67d8cb01283ef0c38860a264e4e058aa469281a70d7bd22f880a94db0ddfd3f5f0593383de615667702730c5382210c9922041a79631c95803a7ce611c0a3bea140b4b794a9a7
