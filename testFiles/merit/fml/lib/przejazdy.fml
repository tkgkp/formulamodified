:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: przejazdy.fml
:: Utworzony: 28.06.2016
:: Autor: PJ
::======================================================================================================================
:: Zawartość: Formuły obszaru OBE, obsługa delegacji - przejazdy
::======================================================================================================================


\edokump_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed obsługą okna wertowania przejazdów
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| EDOKUM.web_cntx_load(1);
   EDOKUMP.use('skidpu'+(EDOKUM.name()+2));
   EDOKUMP.index('CHRONO'); EDOKUMP.prefix(EDOKUM.ref())
|| EDOKUMP.index('CHRONO'); EDOKUMP.prefix(EDOKUM.ref());
   {? ~EDOKUMP.get() || EDOKUMP.first() ?}
?}


\edokump_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na Dołącz dla tabeli przejazdów EDOKUMP
::----------------------------------------------------------------------------------------------------------------------
web_params_set(web_params_get());
exec('env_wt','b_proces');
EDOKUM.web_cntx_load(1);
EDOKUM.web_cntx_save(1);
{? EDOKUM.ZAM='T'
|| FUN.info('Delegacja zamknięta, nie podlega modyfikacjom.'@);
   return()
?};
EDOKUMP.blank();
EDOKUMP.EDOKUM:=EDOKUM.ref();
{? EDOKUM.TYP().DEL_ZAGR
|| _win:='RED_WW';
   exec('be_win_edokump','przejazdy')
|| _win:='REDK_WW';
   exec('be_win_edokump_k','przejazdy')
?};
_form:="EDOKUM.web_cntx_load(1);
        web_params_set(web_params_get());
        exec('env_wt','b_proces');
        {? _a='OK'
        || EDOKUMP.cntx_psh();
           tab_an:=EDOKUMP;
           _chk:=exec('edkp_ra','przejazdy','ADD');
           _tab_an:=tab_an; VAR_DEL.delete('tab_an');
           EDOKUMP.cntx_pop();
           {? _chk=''
           || EDOKUMP.prefix();
              EDOKUMP.add();
              EDOKUMP.web_eclose();
              EDOKUMD.use('bdiety'+(EDOKUMP.name()+2)); EDOKUMD.index('DELEG'); EDOKUMD.prefix();
              EDOKUMD.web_refresh('POZ_DEL','poz_del_przejazdy')
           || web_top_update(0,,_tab_an,_chk)
           ?}
        |? _a='ANULUJ'
        || EDOKUMP.web_eclose()
        ?}";
_del:='delegacja: '@;
_txt:=_del+EDOKUM.ID+', '+$EDOKUM.DATA_OD+', '+EDOKUM.DEL_MIE;
EDOKUMP.web_ewin_init(_win,,'title=", '+_txt+'"');
EDOKUMP.web_edit(_win,'_edokump'+(-_win),,,_form)


\edokump_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na Popraw dla tabeli przejazdów EDOKUMP
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| {? EDOKUMP.get()
   || web_params_set(web_params_get());
      exec('env_wt','b_proces');
      EDOKUM.web_cntx_load(1);
      EDOKUM.web_cntx_save(1);
      {? EDOKUMP.EDOKUM().ZAM='T'
      || FUN.info('Delegacja zamknięta, nie podlega modyfikacjom.'@);
         return()
      ?};
      {? exec('edkp_zagraniczn','przejazdy')
      || _win:='RED_WW';
         exec('be_win_edokump','przejazdy')
      || _win:='REDK_WW';
         exec('be_win_edokump_k','przejazdy')
      ?};
      _form:="EDOKUM.web_cntx_load(1);
              web_params_set(web_params_get());
              exec('env_wt','b_proces');
              {? _a='OK'
              || EDOKUMP.cntx_psh();
                 tab_an:=EDOKUMP;
                 _chk:=exec('edkp_ra','przejazdy','EDIT');
                 _tab_an:=tab_an; VAR_DEL.delete('tab_an');
                 EDOKUMP.cntx_pop();
                 {? _chk=''
                 || EDOKUMP.put();
                    EDOKUMP.web_eclose();
                    EDOKUMD.use('bdiety'+(EDOKUMP.name()+2)); EDOKUMD.index('DELEG'); EDOKUMD.prefix();
                    EDOKUMD.web_refresh('POZ_DEL','poz_del_przejazdy')
                 || web_top_update(0,,_tab_an,_chk)
                 ?}
              |? _a='ANULUJ'
              ||  EDOKUMP.web_eclose()
              ?}";
      _del:='delegacja: '@;
      _txt:=_del+EDOKUM.ID+', '+$EDOKUM.DATA_OD+', '+EDOKUM.DEL_MIE;
      EDOKUMP.web_ewin_init(_win,,'title=", '+_txt+'"');
      EDOKUMP.web_edit(_win,'_edokump'+(-_win),,,_form)
   || FUN.info('Nie znaleziono przejazdu.'@);
      web_top_refresh()
   ?}
|| {? EDOKUMP.get()
   || EDOKUM.use('skid_v'+(EDOKUMP.name()+2)); EDOKUM.index('ID'); EDOKUM.prefix();
      {? EDOKUMP.EDOKUM().ZAM='T'
      || FUN.info('Delegacja zamknięta, nie podlega modyfikacjom.'@);
         return()
      ?};
      {? exec('edkp_zagraniczn','przejazdy')
      || _win:='RED';
         exec('be_win_edokump','przejazdy')
      || _win:='REDK';
         exec('be_win_edokump_k','przejazdy')
      ?};
      _form:="EDOKUMP.cntx_psh();
              tab_an:=EDOKUMP;
              _chk:=exec('edkp_ra','przejazdy','EDIT');
              _tab_an:=tab_an; VAR_DEL.delete('tab_an');
              EDOKUMP.cntx_pop();
              {? _chk=''
              || EDOKUMP.put();
                 EDOKUMD.use('bdiety'+(EDOKUMP.name()+2)); EDOKUMD.index('DELEG'); EDOKUMD.prefix()
              ?}";
      _del:='delegacja: '@;
      _txt:=_del+EDOKUM.ID+', '+$EDOKUM.DATA_OD+', '+EDOKUM.DEL_MIE;
      EDOKUMP.win_edit(_win);
      EDOKUMP.edit(_form)
   || FUN.info('Nie znaleziono przejazdu.'@)
   ?}
?}


\edokump_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na Usuń dla tabeli przejazdów EDOKUMP
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUMP.get()
|| EDOKUM.use('skid_v'+(EDOKUMP.name()+2)); EDOKUM.index('ID'); EDOKUM.prefix();
   {? EDOKUMP.EDOKUM().ZAM='T'
   || FUN.info('Delegacja zamknięta, nie podlega modyfikacjom.'@);
      return()
   ?};
   EDOKUMP.web_cntx_save();
   _form:="{? _a=1
           || {? EDOKUMP.web_cntx_load() || EDOKUMP.del() ?};
              EDOKUMD.use('bdiety'+(EDOKUMP.name()+2)); EDOKUMD.index('DELEG'); EDOKUMD.prefix();
              EDOKUMD.web_refresh('POZ_DEL','poz_del_przejazdy')
           ?}";
   web_ask(_form,'Usunąć bieżący przejazd?'@,FUN.TYT)
|| FUN.info('Nie znaleziono przejazdu.'@);
   web_top_refresh()
?}


\edokump_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyświetla rekord w tabeli przejazdów
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')=''
|| EDOKUM.use('skid_v'+(EDOKUMP.name()+2)); EDOKUM.index('ID'); EDOKUM.prefix();
   _win:={? EDOKUMP.EDOKUM().TYP().DEL_ZAGR || 'RED' || 'REDK' ?};
   EDOKUMP.win_edit(_win); EDOKUMP.display()
|| _win:={? EDOKUMP.EDOKUM().TYP().DEL_ZAGR || 'RED_WWD' || 'REDK_WWD' ?};
   _form:="EDOKUMP.web_eclose()";
   EDOKUMP.web_display(_win,'_edokump'+(-(_win-1)),_form)
?}


\edkp_dwyj_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Wartosc poczatkowa dla EDOKUMP.DATA_WYJ
::       EDOKUM musi byc znany
::   WY: porponowana wartosc dla pola lub date(0,0,0) gdy nie dalo sie ustalic
::  OLD: \edkp_dwyj_wp/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
_odp:=date(0,0,0);
::najpierw proba wg chronologii
EDOKUMP.cntx_psh();
{? exec('edkp_uzgmask','przejazdy')
||
   EDOKUMP.index('CHRONO'); EDOKUMP.prefix(EDOKUM.ref());
   _odp:={? EDOKUMP.last()
         || EDOKUMP.DATA_PRZ
         || EDOKUM.DATA_OD
         ?};
:: jak sie nie udalo to wg naglowka
   {? (_odp=date(0,0,0))
   || _odp:={? #EDOKUM.DATDOK || EDOKUM.DATDOK || EDOKUM.DATAW ?}
   ?}
?};
EDOKUMP.cntx_pop();
_odp


\edkp_uzgmask
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Uzgodnienie maski EDOKUMP z aktualna EDOKUM
::   WY: 1 -zgodna, 0 - nie udalo sie uzgodnic
::  OLD: \edkp_uzgmask/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
{? (EDOKUMP.name()+2)<>(EDOKUM.name()+2)
|| EDOKUMP.use((EDOKUMP.name(1)-2)+(EDOKUM.name()+2))
|| 1
?}


\edkp_dwyj_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Po redakcji EDOKUMP.DATA_WYJ
::  OLD: \edkp_dwyj_ae/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
::niedopuszczenie do tego, aby chwila wyjazdu byla pozniejsza od chwili przyjazdu
{? EDOKUMP.DATA_PRZ<EDOKUMP.DATA_WYJ || EDOKUMP.DATA_PRZ:=EDOKUMP.DATA_WYJ ?};
{? EDOKUMP.DATA_PRZ=EDOKUMP.DATA_WYJ
|| {? EDOKUMP.GODZ_WYJ>EDOKUMP.GODZ_PRZ
   || EDOKUMP.GODZ_PRZ:=EDOKUMP.GODZ_WYJ
   ?}
?};
{? EDOKUMP.DATA_WYJ<>date(0,0,0)
|| {? EDOKUMP.SRODTRAN='P' & EDOKUMP.SAMREF<>''
   || EDOKUMP.STAWKA:=exec('ustal_stawke','przejazdy',EDOKUMP.SAMREF,EDOKUMP.DATA_WYJ);
      EDOKUMP.WARTOSC:=exec('oblicz_wart','przejazdy',EDOKUMP.SAMREF,EDOKUMP.DATA_WYJ,EDOKUMP.LICZ_KM)
   ?}
?};
~~


\ustal_stawke
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Ustala stawke za 1 km
::   WE: _a = refsql pojazdu, _b = data (jesli nie podana to dzisiejsza)
::  OLD: \ustal_stawke/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
{? +_a<>16 || return(0) ?};
{? _<2 || _b:=date() ?};
_ref:=BB.sqlint(_a); _nam:=form(8+_a);
_stawka:=0;
POJAZDY.cntx_psh();
POJAZDY.prefix();
{? POJAZDY.seek(_ref,_nam)
|| _rodzaj:=POJAZDY.SAMDELTY().RODZAJ;
   SAMDELTY.index('RODZAJ');
   SAMDELTY.prefix(_rodzaj,_rodzaj);
   {? SAMDELTY.first()
   || SAMDELEG.index('RODZAJ');
      SAMDELEG.prefix(SAMDELTY.ref());
      {? SAMDELEG.last()
      || {! |?
            {? _b>=SAMDELEG.DATA | SAMDELEG.DATA=date(0,0,0)
            || _stawka:=SAMDELEG.STAWKA;
               _next:=0
            || _next:=SAMDELEG.prev()
            ?};
            _next
         !}
      ?}
   ?}
?};
POJAZDY.cntx_pop();
_stawka


\oblicz_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Obliczanie wartosci przejazdu sam. prywatnym wg stawek za 1 km
::   WE: _a = refsql pojazdu, _b=data, _c - liczba km
::  OLD: \oblicz_wart/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
_wartosc:=0;
{? _b=date(0,0,0) || _b:=date() ?};
{? _a<>'' & _c>0
|| _stawka:=exec('ustal_stawke','przejazdy',_a,_b);
   _wartosc:=(_stawka*_c)$2
?};
_wartosc


\edkp_gwyj_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Wartosc poczatkowa pola EDOKUMP.GODZ_WYJ
::  OLD: \edkp_gwyj_wp/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUMP.cntx_psh();
EDOKUMP.index('CHRONO');
EDOKUMP.prefix(EDOKUM.ref());
{? ~EDOKUMP.last() || _wy:=EDOKUM.GODZ_OD || _wy:=EDOKUMP.GODZ_PRZ ?};
EDOKUMP.cntx_pop();
_wy


\edkp_gwyj_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Po redakcji EDOKUMP.GODZ_WYJ
::  OLD: \edkp_gwyj_ae/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
::niedopuszczenie do tego, aby chwila wyjazdu byla pozniejsza od chwili przyjazdu
_wyn:=1;
{? EDOKUMP.GODZ_WYJ>time(24,00,00)
|| FUN.emsg('Podany czas nie może być większy od 24:00:00'@);
   _wyn:=0
|| {? EDOKUMP.DATA_WYJ=EDOKUMP.DATA_PRZ
   || {? EDOKUMP.GODZ_WYJ>EDOKUMP.GODZ_PRZ || EDOKUMP.GODZ_PRZ:=EDOKUMP.GODZ_WYJ ?}
   ?}
?};
_wyn


\edkp_krwyj_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Wartosc poczatkowa dla pola KRAJ_WYJ
::   WY: KREJE.ref()
::  OLD: \edkp_krwyj_wp/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
::domyslnie Polska, ale jak jest rekord to z pola KRAL_PRZ poprzedniego
_odp:=exec('bl_kraj','ustawienia');
EDOKUMP.cntx_psh();
{? exec('edkp_uzgmask','przejazdy')
||
   EDOKUMP.index('CHRONO'); EDOKUMP.prefix(EDOKUM.ref());
   _odp:={? EDOKUMP.last()
         || EDOKUMP.KRAJ_PRZ
         || _odp:=exec('bl_kraj','ustawienia')
         ?}
?};
EDOKUMP.cntx_pop();
_odp


\edkp_miawyj_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: wartosc poczatkowa EDOKUM.MIA_WYJ
::   WY: wartosc dla pola lub '' gdy nie udalo sie ustalic
::  OLD: \edkp_miawyj_wp/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
_odp:='';
EDOKUM.seek(EDOKUMP.EDOKUM);
EDOKUMP.cntx_psh();
{? exec('edkp_uzgmask','przejazdy')
||
   EDOKUMP.index('CHRONO'); EDOKUMP.prefix(EDOKUM.ref());
   _odp:={? EDOKUMP.last()
         || EDOKUMP.MIE_PRZ
         || _wyj:='';
            P.cntx_psh(); H.cntx_psh();
            H.use('_hist');
            {? EDOKUM.REFPRAC<>''
            || P.use('pracowni');
               P.prefix();
               _ref:=BB.sqlint(EDOKUM.REFPRAC); _nam:=form(EDOKUM.REFPRAC-8);
               {? P.seek(_ref,_nam)
               || H.index('_HISTKOD');
                  H.prefix(P.ref(),'Z');
                  {? H.last() & H.MIEJSCE<>''
                     & EDOKUMP.DATA_WYJ>=H.OD & (H.DO=date(0,0,0) | EDOKUMP.DATA_WYJ<=H.DO)
                  || _wyj:=H.MIEJSCE
                  ?}
               ?}
            || {? EDOKUM.DOSTAWCA<>null
               || exec('__F_ZATR','object');
                  P.use('pracowni');
                  P.index('PRACOSOB');
                  P.prefix(exec('ref_firma','ustawienia'),__F_ZATR.P,EDOKUM.DOSTAWCA);
                  {? P.first() & P.size()=1
                  || H.index('_HISTKOD');
                     H.prefix(P.ref(),'Z');
                     {? H.last() & H.MIEJSCE<>''
                        & EDOKUMP.DATA_WYJ>=H.OD & (H.DO=date(0,0,0) | EDOKUMP.DATA_WYJ<=H.DO)
                     || _wyj:=H.MIEJSCE
                     ?}
                  ?}
               ?}
            ?};
            H.cntx_pop(); P.cntx_pop();
            _wyj
         ?}
?};
EDOKUMP.cntx_pop();
_odp


\edkp_dprz_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Wartosc poczatkowa pola EDOKUMP.DATA_PRZ
::  OLD: \edkp_dprz_wp/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUMP.DATA_WYJ


\edkp_dprz_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Po redakcji EDOKUMP.DATA_PRZ
::   WY: jak dla po redakcji pola
::  OLD: \edkp_dprz_ae/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
::niedopuszczenie do tego, aby chwila wyjazdu byla pozniejsza od chwili przyjazdu
_odp:=0;
{? EDOKUMP.DATA_PRZ<EDOKUMP.DATA_WYJ
|| FUN.emsg('Data przyjazdu nie może być wcześniejsza od daty wyjazdu.'@)
||
   {? EDOKUMP.DATA_WYJ=EDOKUMP.DATA_PRZ
   || {? EDOKUMP.GODZ_WYJ>EDOKUMP.GODZ_PRZ || EDOKUMP.GODZ_PRZ:=EDOKUMP.GODZ_WYJ ?}
   ?};
   _odp:=1
?};
_odp


\edkp_gprz_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Po redakcji EDOKUMP.GODZ_PRZ
::   WY: jak dla po redakcji pola
::  OLD: \edkp_gprz_ae/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
::niedopuszczenie do tego, aby chwila wyjazdu byla pozniejsza od chwili przyjazdu
{? EDOKUMP.GODZ_PRZ>time(24,00,00)
|| FUN.emsg('Podany czas nie może być większy od 24:00:00'@);
   0
|| {? EDOKUMP.DATA_WYJ=EDOKUMP.DATA_PRZ
   || {? EDOKUMP.GODZ_WYJ>EDOKUMP.GODZ_PRZ
      || FUN.emsg('Chwila przyjazdu nie może być wcześniejsza od chwili wyjazdu.'@);
         0
      || 1
      ?}
   || 1
   ?}
?}


\edkp_zagraniczn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Czy delegacja zagraniczna
::   WE: _a - EDOKUM.ref() [biezacy]
::   WY: 1 - tak, 0 -nie (i gdy bledny prametr)
::  OLD: \edkp_zagraniczn/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_<1) | (_a=~~) || _a:=EDOKUM.ref() ?};
{? (type_of(_a)<>type_of(null())) | ((ref_name(_a)-2)<>(EDOKUM.name(1)-2)) || return(0) ?};
{? _a=null() || _a:=EDOKUM.ref() ?};

_odp:=0; _ok:=0;
EDOKUM.cntx_psh();
{? EDOKUM.ref()<>_a
||
   {? EDOKUM.name()<>ref_name(_a)
   || {? EDOKUM.use(ref_name(_a)) || _ok:=1 ?}
   || _ok:=1
   ?};
   {? _ok || EDOKUM.index('ID'); EDOKUM.prefix(); _ok:=EDOKUM.seek(_a) || _ok:=0 ?}
|| _ok:=1
?};
{? _ok
|| _odp:=EDOKUM.TYP().DEL_ZAGR
?};
EDOKUM.cntx_pop();
_odp


\edkp_miaprz_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: wartosc poczatkowa EDOKUM.MIA_PRZ
::       EDOKUM musi byc znany i musza byc zgodne maski
::   WY: wartosc dla pola lub '' gdy nie udalo sie ustalic
::  OLD: \edkp_miaprz_wp/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
:: wartosc nadawana jest wylacznie dla pierwszego rekordu w dziedzinie na podstawie danych z naglowka
_odp:='';
EDOKUMP.cntx_psh();
{? exec('edkp_uzgmask','przejazdy')
||
   EDOKUMP.index('CHRONO'); EDOKUMP.prefix(EDOKUM.ref());
   _odp:={? ~EDOKUMP.first() || EDOKUM.DEL_MIE || '' ?}
?};
EDOKUMP.cntx_pop();
_odp


\edkp_srtran_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: wartosc poczatkowa EDOKUM.SRODTRAN
::       EDOKUM musi byc znany i musza byc zgodne maski
::   WY: wartosc dla pola lub '' gdy nie udalo sie ustalic
::  OLD: \edkp_srtran_wp/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
:: wartosc nadawana jest na podstawie ostatniego rekordu w dokumencie
_odp:='S';
EDOKUMP.cntx_psh();
{? exec('edkp_uzgmask','przejazdy')
||
   EDOKUMP.index('CHRONO'); EDOKUMP.prefix(EDOKUM.ref());
   _odp:={? EDOKUMP.last() || EDOKUMP.SRODTRAN || 'S' ?}
?};
EDOKUMP.cntx_pop();
_odp


\edkp_srtran_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Po redakcji EDOKUMP.SRODTRAN
::  OLD: \edkp_srtran_ae/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
::aktualizacja pol SAM i INNESRTR w zaleznosci od wartosci pola
EDOKUM.use('skid_v'+(EDOKUMP.name()+2)); EDOKUM.index('ID'); EDOKUM.prefix();
{? app_info('web_sesid')<>''
|| {? EDOKUMP.EDOKUM().TYP().DEL_ZAGR || _win:='RED_WW' || _win:='REDK_WW' ?};
   {? EDOKUMP.SRODTRAN='S'
   || EDOKUMP.INNESRTR:=null();
      {? EDOKUMP.SAMREF<>''
      || _ref:=BB.sqlint(EDOKUMP.SAMREF); _nam:=form(EDOKUMP.SAMREF-8);
         POJAZDY.index('FIRWLNR');
         POJAZDY.prefix(REF.FIRMA,'T');
         {? ~POJAZDY.seek(_ref,_nam) || EDOKUMP.SAMREF:=''; VAR.SAMREF:='' ?}
      || VAR.SAMREF:=''
      ?};
      EDOKUMP.web_efld_opt(_win,,'mark=0, enable=0',EDOKUMP,'INNESRTR','NAZWA');
      EDOKUMP.web_efld_opt(_win,,'mark=1, enable=1, editable=1',VAR,'SAMREF');
      {? _win='REDK_WW'
      || EDOKUMP.web_efld_opt(_win,,'mark=0, enable=0',EDOKUMP,'STAWKA');
         EDOKUMP.web_efld_opt(_win,,'mark=0, enable=0',EDOKUMP,'WARTOSC')
      ?}
   |? EDOKUMP.SRODTRAN='P'
   || EDOKUMP.INNESRTR:=null();
      {? EDOKUMP.SAMREF<>''
      || _ref:=BB.sqlint(EDOKUMP.SAMREF); _nam:=form(EDOKUMP.SAMREF-8);
         POJAZDY.index('FIRWLNR');
         POJAZDY.prefix(REF.FIRMA,'N');
         {? ~POJAZDY.seek(_ref,_nam) || EDOKUMP.SAMREF:=''; VAR.SAMREF:='' ?}
      || VAR.SAMREF:=''
      ?};
      EDOKUMP.web_efld_opt(_win,,'mark=0, enable=0, editable=0',EDOKUMP,'INNESRTR','NAZWA');
      EDOKUMP.web_efld_opt(_win,,'mark=1, enable=1, editable=1',VAR,'SAMREF');
      {? _win='REDK_WW'
      || EDOKUMP.web_efld_opt(_win,,'mark=0, enable=1, editable=1',EDOKUMP,'STAWKA');
         EDOKUMP.web_efld_opt(_win,,'mark=0, enable=1, editable=1',EDOKUMP,'WARTOSC')
      ?}
   || VAR.SAMREF:=''; EDOKUMP.SAMREF:='';
      EDOKUMP.web_efld_opt(_win,,'mark=0, enable=1, editable=1',EDOKUMP,'INNESRTR','NAZWA');
      EDOKUMP.web_efld_opt(_win,,'mark=0, enable=0',VAR,'SAMREF');
      {? _win='REDK_WW'
      || EDOKUMP.web_efld_opt(_win,,'mark=0, enable=0',EDOKUMP,'STAWKA');
         EDOKUMP.web_efld_opt(_win,,'mark=0, enable=0',EDOKUMP,'WARTOSC')
      ?}
   ?}
|| {? EDOKUMP.EDOKUM().TYP().DEL_ZAGR || _win:='RED' || _win:='REDK' ?};
   {? EDOKUMP.SRODTRAN='S'
   || EDOKUMP.INNESRTR:=null();
      {? EDOKUMP.SAMREF<>''
      || _ref:=BB.sqlint(EDOKUMP.SAMREF); _nam:=form(EDOKUMP.SAMREF-8);
         POJAZDY.index('FIRWLNR');
         POJAZDY.prefix(REF.FIRMA,'T');
         {? ~POJAZDY.seek(_ref,_nam) || EDOKUMP.SAMREF:=''; VAR.SAMREF:='' ?}
      || VAR.SAMREF:=''
      ?};
      EDOKUMP.efld_opt(_win,'mark=0, enable=0',EDOKUMP,'INNESRTR','NAZWA');
      EDOKUMP.efld_opt(_win,'mark=1, enable=1, editable=1',VAR,'SAMREF');
      {? _win='REDK'
      || EDOKUMP.efld_opt(_win,'mark=0, enable=0',EDOKUMP,'STAWKA');
         EDOKUMP.efld_opt(_win,'mark=0, enable=0',EDOKUMP,'WARTOSC')
      ?}
   |? EDOKUMP.SRODTRAN='P'
   || EDOKUMP.INNESRTR:=null();
      {? EDOKUMP.SAMREF<>''
      || _ref:=BB.sqlint(EDOKUMP.SAMREF); _nam:=form(EDOKUMP.SAMREF-8);
         POJAZDY.index('FIRWLNR');
         POJAZDY.prefix(REF.FIRMA,'N');
         {? ~POJAZDY.seek(_ref,_nam) || EDOKUMP.SAMREF:=''; VAR.SAMREF:='' ?}
      || VAR.SAMREF:=''
      ?};
      EDOKUMP.efld_opt(_win,'mark=0, enable=0, editable=0',EDOKUMP,'INNESRTR','NAZWA');
      EDOKUMP.efld_opt(_win,'mark=1, enable=1, editable=1',VAR,'SAMREF');
      {? _win='REDK'
      || EDOKUMP.efld_opt(_win,'mark=0, enable=1, editable=1',EDOKUMP,'STAWKA');
         EDOKUMP.efld_opt(_win,'mark=0, enable=1, editable=1',EDOKUMP,'WARTOSC')
      ?}
   || VAR.SAMREF:=''; EDOKUMP.SAMREF:='';
      EDOKUMP.efld_opt(_win,'mark=0, enable=1, editable=1',EDOKUMP,'INNESRTR','NAZWA');
      EDOKUMP.efld_opt(_win,'mark=0, enable=0',VAR,'SAMREF');
      {? _win='REDK'
      || EDOKUMP.efld_opt(_win,'mark=0, enable=0',EDOKUMP,'STAWKA');
         EDOKUMP.efld_opt(_win,'mark=0, enable=0',EDOKUMP,'WARTOSC')
      ?}
   ?}
?};
1


\edkp_liczkm_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Po redakcji pola EDOKUMP.LICZ_KM
::  OLD: \edkp_liczkm_ae/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUMP.LICZ_KM>=0
|| {? EDOKUMP.SRODTRAN='P' & EDOKUMP.SAMREF<>'' & EDOKUMP.DATA_WYJ<>date(0,0,0)
   || EDOKUMP.STAWKA:=exec('ustal_stawke','przejazdy',EDOKUMP.SAMREF,EDOKUMP.DATA_WYJ);
      EDOKUMP.WARTOSC:=exec('oblicz_wart','przejazdy',EDOKUMP.SAMREF,EDOKUMP.DATA_WYJ,EDOKUMP.LICZ_KM)
   || EDOKUMP.STAWKA:=0;
      EDOKUMP.WARTOSC:=0
   ?};
   1
|| 0
?}


\edkp_sam_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: wartosc poczatkowa EDOKUMP.SAM
::       EDOKUMP musi byc znany i musza byc zgodne maski
::   WY: wartosc dla pola lub null gdy nie udalo sie ustalic
::  OLD: \edkp_sam_wp/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
:: wartosc nadawana jest na podstawie otatniego rekordu w dokumencie
_odp:='';
EDOKUMP.cntx_psh();
{? exec('edkp_uzgmask','przejazdy')
||
   EDOKUMP.index('CHRONO'); EDOKUMP.prefix(EDOKUM.ref());
   _odp:={? EDOKUMP.last() || EDOKUMP.SAMREF || '' ?}
?};
EDOKUMP.cntx_pop();
_odp


\edkp_innest_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: wartosc poczatkowa EDOKUM.INNESRTR
::       EDOKUM musi byc znany i musza byc zgodne maski
::   WY: wartosc dla pola lub null gdy nie udalo sie ustalic
::  OLD: \edkp_innest_wp/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
:: wartosc nadawana jest na podstawie otatniego rekordu w dokumencie
_odp:='';
EDOKUMP.cntx_psh();
{? exec('edkp_uzgmask','przejazdy')
||
   EDOKUMP.index('CHRONO'); EDOKUMP.prefix(EDOKUM.ref());
   _odp:={? EDOKUMP.last() || EDOKUMP.INNESRTR || null() ?}
?};
EDOKUMP.cntx_pop();
_odp


\edkp_innest_bv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Przed wyswietleniem EDOKUMP.INNESRTR
::   WY: jak dla przed wyswietleniem pola
::  OLD: \edkp_innest_bv/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUMP.SRODTRAN<>'I'
|| ''
|| ''
?}


\edkp_innest_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Przed edycja pola EDOKUMP.INNESRTR
::   WY: jak dla przed_edycja_pola
::  OLD: \edkp_innest_be/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUMP.SRODTRAN='I'
|| 1
|| 0
?}


\edkp_stawka_bv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Przed wyswietleniem pol EDOKUMP.STAWKA i EDKOMUMP.WARTOSC
::  OLD: \edkp_stawka_bv/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
''


\edkp_sam_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Po redakcji VAR.SAMREF
::  OLD: \edkp_sam_ae/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=~~; _findrej:=0;
{? VAR.SAMREF<>''
|| {? EDOKUMP.SAMREF<>''
   || _ref:=BB.sqlint(EDOKUMP.SAMREF); _nam:=form(EDOKUMP.SAMREF-8); POJAZDY.prefix();
      {? POJAZDY.seek(_ref,_nam)
      || {? VAR.SAMREF<>POJAZDY.NRREJ
         || _findrej:=1
         ?}
      ?}
   || _findrej:=1
   ?}
?};
{? _findrej
|| POJAZDY.cntx_psh();
   POJAZDY.index('FIRAKTNR');
   POJAZDY.prefix(REF.FIRMA,'T',VAR.SAMREF);
   {? POJAZDY.first() & POJAZDY.NRREJ=VAR.SAMREF
   || EDOKUMP.SAMREF:=$POJAZDY.ref()
   || FUN.emsg('Nieznany numer rejestracji.'@);
      _wy:=0
   ?};
   POJAZDY.cntx_pop()
?};
::usuniecie filtra
POJAZDY.prefix();
{? EDOKUMP.SRODTRAN='P' & EDOKUMP.SAMREF<>'' & EDOKUMP.DATA_WYJ<>date(0,0,0)
|| EDOKUMP.STAWKA:=exec('ustal_stawke','przejazdy',EDOKUMP.SAMREF,EDOKUMP.DATA_WYJ);
   EDOKUMP.WARTOSC:=exec('oblicz_wart','przejazdy',EDOKUMP.SAMREF,EDOKUMP.DATA_WYJ,EDOKUMP.LICZ_KM)

?};
_wy


\edkp_sam_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Obsługa pola VAR.SAMREF na F3
::  OLD: \edkp_sam_f3/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
_poz:=0;
REF.FIRMA:=exec('firma_ref','#firma',app_info('app_ident'));
POJAZDY.index('FIRWLNR');
POJAZDY.prefix(REF.FIRMA,{? EDOKUMP.SRODTRAN='S' || 'T' || 'N' ?});
{? EDOKUMP.SAMREF<>''
|| _ref:=BB.sqlint(EDOKUMP.SAMREF); _nam:=form(EDOKUMP.SAMREF-8);
   {? POJAZDY.seek(_ref,_nam) || _poz:=1 ?}
?};
{? app_info('web_sesid')<>''
|| EDOKUMP.web_cntx_save(1);
   POJAZDY.web_select('SLO','_pojazd_slo',_poz)
|| POJAZDY.win_sel('SLO_J');
   {? POJAZDY.select(,_poz)
   || EDOKUMP.SAMREF:=$POJAZDY.ref();
      VAR.SAMREF:=POJAZDY.NRREJ
   ?}
?}


\wyb_sam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła dla akcji Wybierz w oknie słownika samochodów
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| EDOKUMP.web_cntx_load(1);
   EDOKUMP.SAMREF:=$POJAZDY.ref();
   VAR.SAMREF:=POJAZDY.NRREJ;
   POJAZDY.web_close('SLO');
   EDOKUM.use('skid_v'+(EDOKUMP.name()+2)); EDOKUM.index('ID'); EDOKUM.prefix();
   {? EDOKUMP.EDOKUM().TYP().DEL_ZAGR || _win:='RED_WW' || _win:='REDK_WW' ?};
   EDOKUMP.web_update(_win)
|| EDOKUMP.SAMREF:=$POJAZDY.ref();
   VAR.SAMREF:=POJAZDY.NRREJ;
   sel_exit()
?}


\edkp_ra
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Rekord po EDOKUMP
::   WE: _a='ADD' lub _a='EDIT'
::   WY: Jak dla rekord_po
::  OLD: \edkp_ra/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
_odp:=__CHK.record(EDOKUMP,,'DATA_WYJ','DATA_PRZ','MIE_WYJ','MIE_PRZ');
{? _odp=''
||
   {? exec('edkp_zagraniczn','przejazdy')
   || _odp:=__CHK.record(EDOKUMP,,'KRAJ_WYJ','KRAJ_PRZ')
   ?};
   {? _odp='' & exec('on','#mwapi')
   || _odp:=__CHK.record(EDOKUMP,,'SRODTRAN');
      {? _odp='' & 'SPI'*EDOKUMP.SRODTRAN<=0
      || FUN.emsg('Nieprawidłowy typ środka transportu.\nDozwolone wartości: %1.'@['S, P i I']);
         _odp:='SRODTRAN'
      ?}
   ?};
   {? _odp=''
   ||
      _odp:=exec('edkp_valid_cur','przejazdy');
      {? _odp=''
      ||
         _rec:={? _a='EDIT' || EDOKUMP.ref() || null() ?};
         _rec:=exec('edkp_q_intersec','przejazdy',_rec);
         {? _rec<>null()
         || FUN.emsg('Podany okres przejazdu nachodzi na inny okres przejazdu w tym dokumencie.'@);
            _odp:='DATA_WYJ'
         ?}
      || FUN.emsg('Dane dotyczące okresu przejazdu są nieprawidłowe.'@)
      ?};

      {? _odp='' & EDOKUM.DATA_OD<>date(0,0,0) & EDOKUM.DATA_DO<>date(0,0,0) & EDOKUM.GODZ_OD<>time(0,0,0)
                 & EDOKUM.GODZ_DO<>time(0,0,0)
      || {? EDOKUMP.DATA_WYJ<EDOKUM.DATA_OD | EDOKUMP.DATA_PRZ>EDOKUM.DATA_DO
            | (EDOKUMP.DATA_WYJ=EDOKUM.DATA_OD & EDOKUMP.GODZ_WYJ<EDOKUM.GODZ_OD)
            | (EDOKUMP.DATA_PRZ=EDOKUM.DATA_DO & EDOKUMP.GODZ_PRZ>EDOKUM.GODZ_DO)
         || FUN.emsg('Wprowadzony zakres czasowy przejazdu przekracza\n zakres delegacji.'@);
            _odp:='DATA_WYJ'
         ?}
      |? _odp='' & EDOKUM.DATA_OD<>date(0,0,0) & EDOKUM.DATA_DO<>date(0,0,0)
      || {? EDOKUMP.DATA_WYJ<EDOKUM.DATA_OD | EDOKUMP.DATA_PRZ>EDOKUM.DATA_DO
         || FUN.emsg('Wprowadzony zakres czasowy przejazdu przekracza\n zakres delegacji.'@);
            _odp:='DATA_WYJ'
         ?}
      ?};

      {? _odp=''
      || {? EDOKUMP.MIE_WYJ=EDOKUMP.MIE_PRZ
         || FUN.emsg('Miejsce wyjazdu nie może być równe miejscu przyjazdu.'@);
            _odp:='MIE_PRZ'
         ?}
      ?};
      {? _odp='' & EDOKUMP.SRODTRAN<>'I' & EDOKUMP.SAMREF=''
      || FUN.emsg('Nie wskazano samochodu.'@);
         VAR_DEL.delete('tab_an'); tab_an:=VAR; _odp:='SAMREF'
      ?}
   ?}
?};
_odp


\edkp_valid_cur
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Sprawdzenie poprawnosci danych w buforze EDOKUMP
::   WY: Akronim blednego pola
::  OLD: \edkp_valid_cur/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
{? (#EDOKUMP.DATA_WYJ)
|| {? (#EDOKUMP.DATA_PRZ)
   || {? EDOKUMP.DATA_WYJ<=EDOKUMP.DATA_PRZ
      ||
         {? (EDOKUMP.DATA_WYJ=EDOKUMP.DATA_PRZ) & (EDOKUMP.GODZ_WYJ>EDOKUMP.GODZ_PRZ)
         || 'GODZ_PRZ'
         || ''
         ?}
      || 'DATA_PRZ'
      ?}
   || 'DATA_PRZ'
   ?}
|| 'DATA_WYJ'
?}


\edkp_q_intersec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Sprawdzenie, czy w danym dokumencie jest rekord ktorego okres pokrywa sie z zadanymi parametrami
::       Jezeli podany _a, to znaczy, ze sprawdzane sa dane istniejacego rekordu jezeli null() to rekordu dopisywanego
::   WE: _a - EDOKUMP.ref() - rekord, ktorego dane sa badane, lub null() gdy nie ma takiego rekordu
::       Uwaga, jezeli parametr nie zgadza sie z biezaca maska to przyjmowany jest jako null()
::       jezeli ktorys z ponizszych parametrow nie jest podany to pobierana jest wartosc z bufora
::       _b - DATA_WYJ
::       _c - GODZ_WYJ
::       _d - DATA_PRZ
::       _e - GODZ_PRZ
::       Uwaga, nalezy zadbac o poprawnosc parametrow, bo inaczej zwrocene bedzie null()
::   WY: EDOKMP.ref - rekordu ktory sie pokrywa, lub null() gdy nie ma lub blad
::       Jezeli _a<>null i zwrocono _a, to znaczy, ze on jest bledny
::  OLD: \edkp_q_intersec/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_<1) | (_a=~~) || _a:=null() ?};
{? (type_of(_a)<>type_of(null())) | (ref_name(_a)<>EDOKUMP.name()) || &_a; _a:=null() ?};
{? (_<2) | (_b=~~) || _b:=EDOKUMP.DATA_WYJ ?};
{? (_<3) | (_c=~~) || _c:=EDOKUMP.GODZ_WYJ ?};
{? (_<4) | (_d=~~) || _d:=EDOKUMP.DATA_PRZ ?};
{? (_<5) | (_e=~~) || _e:=EDOKUMP.GODZ_PRZ ?};
::sprawdzenie poprawnosci parametrow _b  .. _e
{? (type_of(_b)<>type_of(date())) | (type_of(_d)<>type_of(_b))
   | (type_of(_c)<>type_of(time())) | (type_of(_c)<>type_of(_e))
   | (_d<_b) | ((_b=_d) & (_e<_c))
|| return(_a)
?};

:: jezeli _a<>null, to rekord o tum refie jest pomijany w analizie
_odp:=null();
EDOKUMP.cntx_psh();
EDOKUMP.index('CHRONO'); EDOKUMP.prefix(EDOKUM.ref());
{? EDOKUMP.first()
||
   {!
   |?
      {? EDOKUMP.ref()=_a
      || EDOKUMP.next()
      ||
         _lt:=13;
         _test:=obj_new(_lt);
         {! _i:=1.._lt |! _test[_i]:=0 !};
         _test[1]:=(_b>EDOKUMP.DATA_WYJ & _b<EDOKUMP.DATA_PRZ);
         _test[2]:=(_d>EDOKUMP.DATA_WYJ & _d<EDOKUMP.DATA_PRZ);
         _test[3]:=(_b<EDOKUMP.DATA_WYJ & _d>EDOKUMP.DATA_PRZ);
         _test[4]:=(_b>EDOKUMP.DATA_WYJ & _d<EDOKUMP.DATA_PRZ);

         _test[5]:=(_b=EDOKUMP.DATA_WYJ & _c>=EDOKUMP.GODZ_WYJ & _b=EDOKUMP.DATA_PRZ & _c<EDOKUMP.GODZ_PRZ);
         _test[6]:=(_b=EDOKUMP.DATA_WYJ & _c>=EDOKUMP.GODZ_WYJ & _b<EDOKUMP.DATA_PRZ);
         _test[7]:=(_b>EDOKUMP.DATA_WYJ & _b=EDOKUMP.DATA_PRZ & _c<EDOKUMP.GODZ_PRZ);

         _test[8]:=(_d=EDOKUMP.DATA_WYJ & _e>EDOKUMP.GODZ_WYJ & _d=EDOKUMP.DATA_PRZ & _e<=EDOKUMP.GODZ_PRZ);
         _test[9]:=(_d=EDOKUMP.DATA_WYJ & _e>EDOKUMP.GODZ_WYJ & _d<EDOKUMP.DATA_PRZ);
         _test[10]:=(_d>EDOKUMP.DATA_WYJ & _d=EDOKUMP.DATA_PRZ & _e<EDOKUMP.GODZ_PRZ);
         _test[11]:=(_b=EDOKUMP.DATA_WYJ & _d=EDOKUMP.DATA_PRZ & _c<EDOKUMP.GODZ_WYJ & _e>EDOKUMP.GODZ_PRZ);
         _test[12]:=(_b<EDOKUMP.DATA_WYJ & _d=EDOKUMP.DATA_PRZ & _e>EDOKUMP.GODZ_WYJ);

         _test[13]:=(_b=EDOKUMP.DATA_WYJ & _d=EDOKUMP.DATA_PRZ & _e=EDOKUMP.GODZ_PRZ);

         _sum:=0;
         {! _i:=1.._lt |!
            _sum+=_test[_i]
         !};

         obj_del(_test); &_test;

         {? _sum=0
         || EDOKUMP.next()
         || _odp:=EDOKUMP.ref();
            0
         ?}
      ?}
   !}
?};
EDOKUMP.cntx_pop();
_odp


\be_win_edokump_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed obsługą okna redagowania REDK_WW / REDK przejazdu EDOKUMP
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| {? EDOKUMP.SRODTRAN='S'
   || EDOKUMP.web_efld_init('REDK_WW',,'win_dict=SLO_WW, mark=0, enable=0',EDOKUMP,'INNESRTR','NAZWA');
      EDOKUMP.web_efld_init('REDK_WW',,'mark=1, enable=1, editable=1',VAR,'SAMREF');
      EDOKUMP.web_efld_init('REDK_WW',,'mark=0, enable=0',EDOKUMP,'STAWKA');
      EDOKUMP.web_efld_init('REDK_WW',,'mark=0, enable=0',EDOKUMP,'WARTOSC')
   |? EDOKUMP.SRODTRAN='P'
   || EDOKUMP.web_efld_init('REDK_WW',,'win_dict=SLO_WW, mark=0, enable=0, editable=0',EDOKUMP,'INNESRTR','NAZWA');
      EDOKUMP.web_efld_init('REDK_WW',,'mark=1, enable=1, editable=1',VAR,'SAMREF');
      EDOKUMP.web_efld_init('REDK_WW',,'mark=0, enable=1, editable=0',EDOKUMP,'STAWKA');
      EDOKUMP.web_efld_init('REDK_WW',,'mark=0, enable=1, editable=0',EDOKUMP,'WARTOSC')
   || EDOKUMP.web_efld_init('REDK_WW',,'win_dict=SLO_WW, mark=0, enable=1, editable=1',EDOKUMP,'INNESRTR','NAZWA');
      EDOKUMP.web_efld_init('REDK_WW',,'mark=0, enable=0',VAR,'SAMREF');
      EDOKUMP.web_efld_init('REDK_WW',,'mark=0, enable=0',EDOKUMP,'STAWKA');
      EDOKUMP.web_efld_init('REDK_WW',,'mark=0, enable=0',EDOKUMP,'WARTOSC')
   ?}
|| {? EDOKUMP.SRODTRAN='S'
   || EDOKUMP.efld_opt('REDK','mark=0, enable=0',EDOKUMP,'INNESRTR','NAZWA');
      EDOKUMP.efld_opt('REDK','mark=1, enable=1, editable=1',VAR,'SAMREF');
      EDOKUMP.efld_opt('REDK','mark=0, enable=0',EDOKUMP,'STAWKA');
      EDOKUMP.efld_opt('REDK','mark=0, enable=0',EDOKUMP,'WARTOSC')
   |? EDOKUMP.SRODTRAN='P'
   || EDOKUMP.efld_opt('REDK','mark=0, enable=0, editable=0',EDOKUMP,'INNESRTR','NAZWA');
      EDOKUMP.efld_opt('REDK','mark=1, enable=1, editable=1',VAR,'SAMREF');
      EDOKUMP.efld_opt('REDK','mark=0, enable=1, editable=0',EDOKUMP,'STAWKA');
      EDOKUMP.efld_opt('REDK','mark=0, enable=1, editable=0',EDOKUMP,'WARTOSC')
   || EDOKUMP.efld_opt('REDK','mark=0, enable=1, editable=1',EDOKUMP,'INNESRTR','NAZWA');
      EDOKUMP.efld_opt('REDK','mark=0, enable=0',VAR,'SAMREF');
      EDOKUMP.efld_opt('REDK','mark=0, enable=0',EDOKUMP,'STAWKA');
      EDOKUMP.efld_opt('REDK','mark=0, enable=0',EDOKUMP,'WARTOSC')
   ?}
?}


\be_win_edokump
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed obsługą okna redagowania RED_WW przejazdu EDOKUMP
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUMP.SRODTRAN='S'
|| EDOKUMP.web_efld_init('RED_WW',,'win_dict=SLO_WW, mark=0, enable=0',EDOKUMP,'INNESRTR','NAZWA');
   EDOKUMP.web_efld_init('RED_WW',,'mark=1, enable=1, editable=1',VAR,'SAMREF')
|? EDOKUMP.SRODTRAN='P'
|| EDOKUMP.web_efld_init('RED_WW',,'win_dict=SLO_WW, mark=0, enable=0',EDOKUMP,'INNESRTR','NAZWA');
   EDOKUMP.web_efld_init('RED_WW',,'mark=1, enable=1, editable=1',VAR,'SAMREF')
|| EDOKUMP.web_efld_init('RED_WW',,'win_dict=SLO_WW, mark=0, enable=1, editable=1',EDOKUMP,'INNESRTR','NAZWA');
   EDOKUMP.web_efld_init('RED_WW',,'mark=0, enable=0',VAR,'SAMREF')
?};
EDOKUMP.web_efld_init('RED_WW',,'win_dict=SLO_WW, enable=1, editable=1',EDOKUMP,'KRAJ_WYJ');
EDOKUMP.web_efld_init('RED_WW',,'win_dict=SLO_WW, enable=1, editable=1',EDOKUMP,'KRAJ_PRZ')


\edkp_gprz_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Wartosc poczatkowa pola EDOKUMP.GODZ_PRZ
::  OLD: \edkp_gprz_wp/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
_d_wyj:=EDOKUMP.DATA_WYJ;
EDOKUMP.cntx_psh();
EDOKUMP.index('CHRONO');
EDOKUMP.prefix(EDOKUM.ref());
{? ~EDOKUMP.last()
|| {? _d_wyj=EDOKUM.DATA_DO || _wy:=EDOKUM.GODZ_DO || _wy:=time(0,0,0) ?}
|| {? EDOKUMP.DATA_PRZ=EDOKUM.DATA_DO || _wy:=EDOKUM.GODZ_DO || _wy:=time(0,0,0) ?}
?};
EDOKUMP.cntx_pop();
_wy


\edkp_sam_bv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Przed wyswietleniem VAR.SAMREF
::   WY: jak dla przed wyswietleniem pola
::  OLD: \edkp_sam_bv/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.SAMREF:='';
{? EDOKUMP.SAMREF<>''
|| _ref:=BB.sqlint(EDOKUMP.SAMREF); _nam:=form(EDOKUMP.SAMREF-8);
   POJAZDY.prefix();
   {? POJAZDY.seek(_ref,_nam) || VAR.SAMREF:=POJAZDY.NRREJ ?}
?};
exec('load_sam','przejazdy');
''


\load_sam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Zaladowanie do bufora rekordu POJAZDY odpowiadajacemu EDOKUMP.SAMREF i zmiennej VAR.SAMREF
::   WY: POJAZDY.ref() lub null()
::  OLD: \load_sam/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.SAMREF:='';
_odp:=null();
{? EDOKUMP.SAMREF<>''
|| _ref:=BB.sqlint(EDOKUMP.SAMREF); _nam:=form(EDOKUMP.SAMREF-8);
   POJAZDY.prefix();
   {? POJAZDY.seek(_ref,_nam) || _odp:=POJAZDY.ref(); VAR.SAMREF:=POJAZDY.NRREJ ?}
?};
_odp


\bd_srodt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JSz [12.30]
:: OPIS: Akcja przed wyświetleniem pola OBIEGI.SRODT
::  OLD: \bd_srodt/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.SRODT:='';
{? 'SP'*EDOKUMP.SRODTRAN
||
   {? EDOKUMP.SAMREF<>''
   ||
      _refs:=BB.sqlint(EDOKUMP.SAMREF); _nams:=form(8+EDOKUMP.SAMREF);
      POJAZDY.prefix();
      {? POJAZDY.seek(_refs,_nams)
      || _sep:={? POJAZDY.NRREJ<>'' & POJAZDY.NAZ<>'' || ' - ' || '' ?};
         OBIEGI.SRODT:=POJAZDY.NRREJ+_sep+POJAZDY.NAZ
      ?}
   ?}
|? EDOKUMP.SRODTRAN='I'
|| OBIEGI.SRODT:=EDOKUMP.INNESRTR().NAZWA
?};
''


\poj_przej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Formuła sprawdza czy w systemie są zarejestrowane przejazdy dla pojazdu
::   WE: Wskazaniena pojazd ($POJAZDY.ref)
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_find:=0;
EDOKUMP.cntx_psh();
_ename:=EDOKUMP.names();
{? _ename.first()
|| {! |?
      EDOKUMP.use(_ename.NAME);
      EDOKUMP.index('SAMCHR');
      EDOKUMP.prefix(_a);
      {? EDOKUMP.first() || _find:=1 ?};
      _find=0 & _ename.next()
   !}
?};
EDOKUMP.cntx_pop();
_find

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 54da67c699b7be114904d9ef13710ce2a91b4237f3ef3a0de307a22911a253e855ad874c34c3019c18449d339cb82bf1652834b1d62416a4a540f9bbdb38888e7fe27f2e4b5420824d8876e07a594815e610ad0c7ddb5220e50ca6ffb74d9640d4a542c4bc39a63d9a63b889276abd220be65f731941b95e4304fbc34ebb02c2
