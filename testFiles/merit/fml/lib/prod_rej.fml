:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: prod_rej.fml [12.30]
:: Utworzony: 2012-01-19
:: Autor: TS
::======================================================================================================================
:: Zawartość: Obsługa rejestracji wykonania produkcji do planów i zleceń (tabele PROD_REJ, PROD_NXT)
::            Obsługa rejestracji problemów (tabela EK_PROB)
::======================================================================================================================


\rejestracja_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Tablica parametrów dla exec('rejestracja','prod_rej')
::----------------------------------------------------------------------------------------------------------------------
_args:=obj_new(
:: znaczniki dostępności funkcji
   'F_NAWIG',
   'F_FILTER',
   'F_START',
   'F_STOP',
   'F_WYKON',
   'F_XWYKON',
   'F_PROB',
   'F_XPROB',
   'F_DOC',
   'F_MAT',
   'F_PRAC',
   'F_BRYG',
   'F_REJ',
   'F_POTW',
   'F_XPOTW',
   'F_NPU',
   'F_SEND',
   'F_ROZP',
:: znaczniki filtrowania danych
   'FILTR_PX',
   'FILTR_PL',
   'FILTR_ZL',
:: czy czyścić pola filtra
   'CLRFILTR',
:: wartości pól filtra
   'PR_DATA',
   'PR_KOOP',
   'PR_KONT',
   'PR_GROP',
:: znaczniki edycji filtra
   'ED_DATA',
   'ED_ZAKR',
   'ED_RES',
   'ED_M',
   'ED_WYD',
   'ED_OPIS',
   'ED_START',
   'ED_OK',
   'ED_POTW',
   'ED_PROB',
   'ED_PRAC',
   'ED_BRYG',
   'ED_KH',
   'ED_KOOP',
   'ED_GROP',
   'ED_A',
   'ED_DOREJ',
   'ED_PX',
   'ED_PL',
   'ED_ZL',
   'ED_KONT',
:: znaczniki kontekstu pracy - zapisy będą podpisywane tym P i tą ZLBR (pracownik, brygada) - nie filtrowane!
   'C_P',
   'C_ZLBR',
:: predefiniowana fraza WHERE do filtra - pozostałe składowe filtra są na bieżąco doklejane
   'WHERE',
:: fraza JOIN do filtra
   'JOIN',
:: fraza SORT do filtra
   'SORT',
:: dodatkowa tabela jako parametr do filtra
   'TAB',
:: formularz do rejestrowania
   'FORM',
:: tytuł okna
   'TITLE',
:: formula na zamkniecie okna
   'CLOSE',
:: czy uruchomienie w ramach procesu
   'PROCES'
);
_args.F_NAWIG:=0;
_args.F_FILTER:=0;
_args.F_START:=0;
_args.F_STOP:=0;
_args.F_WYKON:=0;
_args.F_XWYKON:=0;
_args.F_PROB:=0;
_args.F_XPROB:=0;
_args.F_DOC:=0;
_args.F_MAT:=0;
_args.F_PRAC:=0;
_args.F_BRYG:=0;
_args.F_REJ:=0;
_args.F_POTW:=0;
_args.F_XPOTW:=0;
_args.F_NPU:=0;
_args.F_SEND:=0;
_args.F_ROZP:=1;
_args.FILTR_PX:=0;
_args.FILTR_PL:=0;
_args.FILTR_ZL:=0;
_args.CLRFILTR:=1;
_args.PR_DATA:=date(0,0,0);
_args.PR_KOOP:='';
_args.PR_KONT:='';
_args.PR_GROP:='';
_args.ED_DATA:=0;
_args.ED_ZAKR:=0;
_args.ED_RES:=0;
_args.ED_M:=0;
_args.ED_WYD:=0;
_args.ED_OPIS:=0;
_args.ED_START:=0;
_args.ED_OK:=0;
_args.ED_POTW:=0;
_args.ED_PROB:=0;
_args.ED_PRAC:=0;
_args.ED_BRYG:=0;
_args.ED_KH:=0;
_args.ED_KOOP:=0;
_args.ED_GROP:=0;
_args.ED_A:=0;
_args.ED_DOREJ:=0;
_args.ED_PX:=0;
_args.ED_PL:=0;
_args.ED_ZL:=0;
_args.ED_KONT:=0;
_args.C_P:=null();
_args.C_ZLBR:=null();
_args.WHERE:='';
_args.JOIN:='';
_args.SORT:='';
_args.TAB:=0;
_args.FORM:='select';
_args.TITLE:='';
_args.CLOSE:="";
_args.PROCES:=0;
_args


\rejestracja_e
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Redagowanie tablicy parametrow dla exec('rejestracja','prod_rej')
::   WE: _args - agrumenty funkcji - wynik exec('rejestracja_a','prod_rej')
::----------------------------------------------------------------------------------------------------------------------
_args:={? _=1 || _a || exec('rejestracja_a','prod_rej') ?};

_tab:=tab_tmp(,
   'F_NAWIG','INTEGER','Funkcje nawigacyjne',
   'F_FILTER','INTEGER','Filtrowanie',
   'F_START','INTEGER','Startowanie',
   'F_STOP','INTEGER','Stopowanie',
   'F_WYKON','INTEGER','Rejestracja wykonania',
   'F_XWYKON','INTEGER','Wycofanie wykonania',
   'F_PROB','INTEGER','Rejestracja problemu',
   'F_XPROB','INTEGER','Rozwiązanie problemu',
   'F_DOC','INTEGER','Podgląd dokumentacji',
   'F_MAT','INTEGER','Podgląd listy materiałów',
   'F_NPU','INTEGER','Podgląd listy N-P-U',
   'F_PRAC','INTEGER','Ustawienie pracownika',
   'F_BRYG','INTEGER','Ustawienie brygady',
   'F_REJ','INTEGER','Podgląd rejestracji',
   'F_POTW','INTEGER','Potwierdzanie wykonania',
   'F_XPOTW','INTEGER','Odrzucenie potwierdzenia wykonania',
   'F_SEND','INTEGER','Przesłanie do płac',
   'FILTR_PX','INTEGER','Plan strategiczny w filtrze',
   'FILTR_PL','INTEGER','Plan operacyjny w filtrze',
   'FILTR_ZL','INTEGER','Przewodniki zleceń w filtrze'
);

_tab.blank();
{! _it:=1.._tab.fld_num() |! ($('_a.'+_tab.fld_acr(_it)+':=_b.'+_tab.fld_acr(_it)))(_tab,_args) !};

_red:=_tab.mk_edit('|--|'+'Parametry rejestracji wykonań'@,0,'rej_param');
{! _it:=1.._tab.fld_num()
|! _tab.win_efld(_red,,_tab.fld_acr(_it),,,5,,,_tab.fld_name(_it),,,'check-box',,"1","0")
!};
_tab.win_edit(_red);

{? _tab.edit()
|| {! _it:=1.._tab.fld_num() |! ($('_b.'+_tab.fld_acr(_it)+':=_a.'+_tab.fld_acr(_it)))(_tab,_args) !}
?};
~~


\rejestracja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Rejestracja wykonań produkcji - główny widok w oknie 'select'
::   WE: _args - agrumenty funkcji - wynik exec('rejestracja_a','prod_rej')
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('jakislw','wzorce') || return(0) ?};

:: Jeżeli dostęp do redagowania, ale mechanizm zasilania wyłączony, to wyjście
_msg:='';
{? exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_DWZL') & exec('get','#params',500611,2)='N'
|| _msg+=
      '\n'+
      'Posiadasz uprawnienia do rejestracji do przewodników, ale rejestracja ta nie jest skonfigurowana.\n'
      'Należy usunąć uprawnienia do czynności %1 lub ustawić parametr aplikacyjny %2 na wartość \'%3\'.\n'@
      ['TTE_WYK_DWZL','500611','T']
?};
{? exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_DWPO') & exec('get','#params',500612,2)='N'
|| _msg+=
      '\n'+
      'Posiadasz uprawnienia do rejestracji do planu operacyjnego ale rejestracja ta nie jest skonfigurowana.\n'
      'Należy usunąć uprawnienia do czynności %1 lub ustawić parametr aplikacyjny %2 na wartość \'%3\'.\n'@
      ['TTE_WYK_DWPO','500612','T']
?};
{? exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_DWPS') & exec('get','#params',500613,2)='N'
|| _msg+=
      '\n'+
      'Posiadasz uprawnienia do rejestracji do planu strategicznego ale rejestracja ta nie jest skonfigurowana.\n'
      'Należy usunąć uprawnienia do czynności %1 lub ustawić parametr aplikacyjny %2 na wartość \'%3\'.\n'@
      ['TTE_WYK_DWPS','500613','T']
?};

{? _msg<>''
|| FUN.info(
      'Posiadasz uprawnienia do rejestracji wykonań, ale konfiguracja systemu nie jest spójna.'@+
      '\n'+_msg
   );
   return()
?};

:: Jeżeli dostęp do przeglądu, ale wszystkie mechanizmy zasilania wyłączone, to wyjście
{? exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_PWYK') &
   exec('get','#params',500611,2)='N' &
   exec('get','#params',500612,2)='N' &
   exec('get','#params',500613,2)='N'
|| FUN.info(
      'Rejestracja wykonań nie jest skonfigurowana\n'
      'Należy ustawić parametr aplikacyjny %1 lub %2 lub %3.'@['500611','500612','500613']
   );
   return()
?};

_args:={? _=1 || _a || exec('rejestracja_a','prod_rej') ?};
params_set('args',_args);

:: Czyszczenie pól filtra
{? _args.CLRFILTR || exec('filter_clear','prod_rej') ?};

exec('var_akord','zl_guide');
exec('doklwg_m','material');
:: Zmianna globalna ProdRej przechowujaca srodowisko do rejestracji wykonan
VAR_DEL.delete('ProdRej');
ProdRej:=obj_new(
:: znaczniki dostępności funkcji (przycisków)
   'F_NAWIG',
   'F_FILTER',
   'F_START',
   'F_STOP',
   'F_WYKON',
   'F_XWYKON',
   'F_PROB',
   'F_XPROB',
   'F_DOC',
   'F_MAT',
   'F_PRAC',
   'F_BRYG',
   'F_REJ',
   'F_POTW',
   'F_XPOTW',
   'F_NPU',
   'F_SEND',
   'F_ROZP',
:: znaczniki edycji filtra
   'ED_DATA',
   'ED_ZAKR',
   'ED_RES',
   'ED_M',
   'ED_WYD',
   'ED_OPIS',
   'ED_START',
   'ED_OK',
   'ED_POTW',
   'ED_PROB',
   'ED_PRAC',
   'ED_BRYG',
   'ED_KH',
   'ED_KOOP',
   'ED_GROP',
   'ED_A',
   'ED_DOREJ',
   'ED_ZL',
   'ED_PL',
   'ED_PX',
   'ED_KONT',
   'WHERE',
   'JOIN',
   'SORT',
   'TAB',
:: znaczniki kontekstu pracy
   'C_P',
   'C_ZLBR',
:: znacznik wyjscia z petli okna redakcyjnego
   'EXIT',
:: zmienne robocze (tabele tymczasowe i okna dla rejestracji do zleceń)
   'ZLGB',
   'KOOP',
   'WRK',
   'GROP',
:: zmienna do rozpisywania elementow grupy operacji
   'GROPP'
);

:: Tabela do rozpisywania elementow grupy operacji
ProdRej.GROPP:=obj_new('TAB','NdxPoz','NdxOpis','NdxEkiosk');
ProdRej.GROPP.TAB:=tab_tmp(1,
   'GROPP','INTEGER','#GROPP.ref()',
   'ZGP_REF','INTEGER','#ZGP.ref()',
   'ZGP_OPIS','STRING[100]','Opis pozycji przewodnika',
   'IL','REAL','Ilość planowana',
   'IL_WYK','REAL','Ilość wykonana',
   'IL_BRAK','REAL','Ilość braków',
   'CZASM','REAL','Czas w minutach',
   'DOKL','INTEGER','Dokładność',
   'JM','STRING[10]','jm',
   'PARTY','INTEGER','Czy partiowana? 1-tak 0-nie',
   'ZPARN','INTEGER','#ZPARN.ref()',
   'PARSYM','STRING[25]','Symbol partii',
   'ZL_WYR','INTEGER','#ZL_WYR.ref()',
   'KTM','STRING[50]','Produkt',
   'MAG','STRING[8]','Magazyn',
   'LOK','STRING[20]','Lokalizacja',
   'BRAKI_R','STRING[20]','Rodzaj braku'
);
ProdRej.GROPP.TAB.fld_fml('IL_WYK','EDIT_FORMAT',"'in_prec='+$ProdRej.GROPP.TAB.DOKL");
_form:="
   _result:=1;
   _tab:=ProdRej.GROPP.TAB;
   {? _tab.IL_WYK<0
   || FUN.emsg('Ilość nie może być ujemna.'@);
      _result:=0
   |? _tab.IL_WYK>_tab.IL
   || FUN.emsg('Ilość wykonana nie może być większa niż planowana.'@);
      _result:=0
   ?};
::  Aktualizacja ilości braków i rodzaj braku
   {? _result>0
   || _tab.IL_BRAK:=_tab.IL-_tab.IL_WYK;
      {? _tab.IL_BRAK=0 || _tab.BRAKI_R:='' ?}
   ?};
   _result
";
ProdRej.GROPP.TAB.fld_fml('IL_WYK','AFTER_EDIT',_form);
ProdRej.GROPP.TAB.fld_fml('PARSYM','BEFORE_DISPLAY',"{? ProdRej.GROPP.TAB.PARTY>0 || 1 || 0 ?}");
ProdRej.GROPP.TAB.fld_fml('PARSYM','BEFORE_EDIT',"{? ProdRej.GROPP.TAB.PARTY>0 || 1 || 0 ?}");
ProdRej.GROPP.TAB.fld_fml('BRAKI_R','BEFORE_EDIT',"{? ProdRej.GROPP.TAB.IL_BRAK>0 || 1 || 0 ?}");

_form:="
   _res:=ProdRej.GROPP.TAB.PARSYM;
   ZPARN.cntx_psh();
   ZPARN.win_sel('SLO');
   _zl:=exec('FindAndGet','#table',ZGP,ProdRej.GROPP.TAB.ZGP_REF,,\"ZGP.ZL\",null());
:: Zwracam najbliższe zlecenie partiowane
   _prod_zl:=exec('party_first','zl_link',_zl);
   _zgh:=null();
   {? _zl=_prod_zl
   ||
::    Jesli zlecenie na ktorym powstaje produkt i zlecenie ktore jest na ZLGD to
::    prefiksuje lepiej partie. Moge to zrobic tylko w tym wypadku, poniewaz sa takie sytuacje
      _zgh:=exec('FindAndGet','#table',ZGP,ProdRej.GROPP.TAB.ZGP_REF,,\"ZGP.NRZLP\",null())
   ?};
   {? _zgh<>null()
   || ZPARN.index('ZGH2');
      ZPARN.prefix(_zl,_zgh)
   || ZPARN.index('ZL2');
      ZPARN.prefix(_zl)
   ?};
   {? ZPARN.first()
   ||
      {? ZPARN.select(,1,10)
      ||
         ProdRej.GROPP.TAB.ZPARN:=#ZPARN.ref;
         _res:=ProdRej.GROPP.TAB.PARSYM:=ZPARN.SYM
::         ProdRej.GROPP.TAB.put()
      ?}
   ||
      FUN.info('Wskazany przewodnik zlecenia nie posiada partii.'@)
   ?};
   ZPARN.cntx_pop();
   _res
";
ProdRej.GROPP.TAB.fld_fml('PARSYM','F3',_form);

_form:="
   _result:=1;
   {? ProdRej.GROPP.TAB.PARTY>0 & ProdRej.GROPP.TAB.PARSYM<>''
      & exec('FindInSet','#table','ZPARN','ZL2',ProdRej.GROPP.TAB.PARSYM
           ,exec('FindAndGet','#table',ZGP,ProdRej.GROPP.TAB.ZGP_REF,,\"ZGP.ZL\",''),\"ZPARN.ref()\",1,,null)=null
   || FUN.emsg('Nie odnaleziono partii o wskazanym symbolu.'@);
      _result:=0
   ?};
   _result
";
ProdRej.GROPP.TAB.fld_fml('PARSYM','AFTER_EDIT',_form);

_form:="
   _tab:=ProdRej.GROPP.TAB;
   _res:=_tab.BRAKI_R;
   BRAKI_R.cntx_psh();
   BRAKI_R.win_sel('SEL');
   BRAKI_R.index('KOD');
   BRAKI_R.prefix();
   {? BRAKI_R.select()
   || _res:=_tab.BRAKI_R:=BRAKI_R.KOD
   ?};
   BRAKI_R.cntx_pop();
   _res
";
ProdRej.GROPP.TAB.fld_fml('BRAKI_R','F3',_form);

_form:="
   _result:=1;
   {? ProdRej.GROPP.TAB.IL_BRAK>0 & ProdRej.GROPP.TAB.BRAKI_R<>'' & ~BRAKI_R.f_find(ProdRej.GROPP.TAB.BRAKI_R,)
   || FUN.emsg('Nie odnaleziono rodzaju braku o podanym kodzie.'@);
      _result:=0
   ?};
   _result
";
ProdRej.GROPP.TAB.fld_fml('BRAKI_R','AFTER_EDIT',_form);

ProdRej.GROPP.NdxPoz:=ProdRej.GROPP.TAB.index('?');
ProdRej.GROPP.NdxOpis:=ProdRej.GROPP.TAB.ndx_tmp(,,'ZGP_OPIS',,);
ProdRej.GROPP.NdxEkiosk:=ProdRej.GROPP.TAB.ndx_tmp(,,'ZGP_REF',,,'ZGP_OPIS',,);

:: Uwzględnienie uprawnień użytkownika/grupy
ProdRej.F_NAWIG :=_args.F_NAWIG  & exec('get','#params',8701,2,OPERATOR.USER)='T';
ProdRej.F_FILTER:=_args.F_FILTER & exec('get','#params',8702,2,OPERATOR.USER)='T';
ProdRej.F_START :=_args.F_START  & exec('get','#params',8703,2,OPERATOR.USER)='T';
ProdRej.F_STOP  :=_args.F_STOP   & exec('get','#params',8704,2,OPERATOR.USER)='T';
ProdRej.F_WYKON :=_args.F_WYKON  & exec('get','#params',8705,2,OPERATOR.USER)='T';
ProdRej.F_XWYKON:=_args.F_XWYKON & exec('get','#params',8706,2,OPERATOR.USER)='T';
ProdRej.F_PROB  :=_args.F_PROB   & exec('upr_problem','zl_wkj');
ProdRej.F_XPROB :=_args.F_XPROB  & exec('upr_xproblem','zl_wkj');
ProdRej.F_DOC   :=_args.F_DOC    & exec('get','#params',8708,2,OPERATOR.USER)='T';
ProdRej.F_MAT   :=_args.F_MAT    & exec('get','#params',8709,2,OPERATOR.USER)='T';
ProdRej.F_PRAC  :=_args.F_PRAC   & exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_DWBZ');
ProdRej.F_BRYG  :=_args.F_BRYG   & exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_DWBZ');
ProdRej.F_REJ   :=_args.F_REJ    & exec('get','#params',8712,2,OPERATOR.USER)='T';
ProdRej.F_POTW  :=_args.F_POTW   & exec('get','#params',8713,2,OPERATOR.USER)='T';
ProdRej.F_XPOTW :=_args.F_XPOTW  & exec('get','#params',8713,2,OPERATOR.USER)='T';
ProdRej.F_NPU   :=_args.F_NPU    & exec('get','#params',8714,2,OPERATOR.USER)='T';
ProdRej.F_SEND  :=_args.F_SEND;
ProdRej.F_ROZP  :=_args.F_ROZP   & exec('get','#params',8715,2,OPERATOR.USER)='T';

_args.FILTR_ZL:=
   _args.FILTR_ZL &
   (exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_DWZL') | exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_PWYK')) &
   exec('get','#params',500611,2)='T';
_args.FILTR_PL:=
   _args.FILTR_PL &
   (exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_DWPO') | exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_PWYK')) &
   exec('get','#params',500612,2)='T';
_args.FILTR_PX:=
   _args.FILTR_PX &
   (exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_DWPS') | exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_PWYK')) &
   exec('get','#params',500613,2)='T';

ProdRej.ED_DATA:=_args.ED_DATA;
ProdRej.ED_ZAKR:=_args.ED_ZAKR;
ProdRej.ED_RES:=_args.ED_RES;
ProdRej.ED_M:=_args.ED_M;
ProdRej.ED_WYD:=_args.ED_WYD;
ProdRej.ED_OPIS:=_args.ED_OPIS;
ProdRej.ED_START:=_args.ED_START;
ProdRej.ED_OK:=_args.ED_OK;
ProdRej.ED_POTW:=_args.ED_POTW;
ProdRej.ED_PROB:=_args.ED_PROB;
ProdRej.ED_PRAC:=_args.ED_PRAC;
ProdRej.ED_BRYG:=_args.ED_BRYG;
ProdRej.ED_KH:=_args.ED_KH;
ProdRej.ED_KOOP:=_args.ED_KOOP;
ProdRej.ED_GROP:=_args.ED_GROP;
ProdRej.ED_A:=_args.ED_A;
ProdRej.ED_DOREJ:=_args.ED_DOREJ;
ProdRej.ED_ZL:=
   _args.ED_ZL &
   (exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_DWZL') | exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_PWYK')) &
   exec('get','#params',500611)='T' & exec('get','#params',500621)='Z';
ProdRej.ED_PL:=
   _args.ED_PL &
   (exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_DWPO') | exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_PWYK')) &
   exec('get','#params',500612)='T' & exec('get','#params',500621)='P';
ProdRej.ED_PX:=
   _args.ED_PX &
   (exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_DWPS') | exec('chk_role','#b__box',OPERATOR.USER,'TTE_WYK_PWYK')) &
   exec('get','#params',500613)='T';
ProdRej.ED_KONT:=_args.ED_KONT;
ProdRej.C_P:=_args.C_P;
ProdRej.C_ZLBR:=_args.C_ZLBR;

ProdRej.WHERE:=_args.WHERE;
ProdRej.JOIN:=_args.JOIN;
ProdRej.SORT:=_args.SORT;
ProdRej.TAB:=_args.TAB;
ProdRej.EXIT:=0;

{? VEK.TERM<>'T'
|| exec('filter_load','prod_rej')
?};

{? _args.PR_DATA<>date(0,0,0) || FILTER.PR_DATA:=_args.PR_DATA ?};
{? _args.PR_KOOP<>'' || FILTER.PR_KOOP:=_args.PR_KOOP ?};
{? _args.PR_KONT<>'' || FILTER.PR_KONT:=_args.PR_KONT ?};
{? _args.PR_GROP<>'' || FILTER.PR_GROP:=_args.PR_GROP ?};

FILTER.PR_L_PX:={? _args.FILTR_PX || 'T' || 'N' ?};
FILTER.PR_L_PL:={? _args.FILTR_PL || 'T' || 'N' ?};
FILTER.PR_L_ZL:={? _args.FILTR_ZL || 'T' || 'N' ?};

:: Filtr wg aktualnych kryteriow
:: Dla terminala funkcja ma sie nie wykonac poniewaz recznie ja wywoluje
:: mozna rowniez ustawic warunek dla _args.FORM<>''
{? VEK.TERM<>'T'
|| exec('filter','prod_rej');
   exec('twrkplc_filter_all','zasoby')
|| _args.FORM:='';
:: Ustawiam filtr na stawnowisko
   {? VEK.INIT_PLC<>''
   || exec('twrkplc_filter_place','zasoby',VEK.TWRKPLC)
   |? VEK.INIT_WYD<>''
   || VAR.A_WYD:=VEK.A_WYD;
      exec('twrkplc_filter_wyd','zasoby')
   || exec('twrkplc_filter_all','zasoby')
   ?}
?};

_wer:={? _args.PROCES
      || {? ProdRej.F_FILTER
         || 'WERF_P'
         || 'WER_P'
         ?}
      || {? ProdRej.F_FILTER
         || 'WERF'
         || 'WER'
         ?}
      ?};

:: "blankuje" PX_VAR - po to zeby sie zblankowalo PX_VAR.GREY
PX_VAR.GREY:=exec('findfnv','#color');

:: Ikony
_formikon:="
   {? PROD_REJ.OK='T'
   || 'xwin16.png:38'
   |? PROD_REJ.A='N'
   || 'xwin16.png:81'
   |? PROD_REJ.DOREJ='T'
   || 'xwin16.png:38'
   |? PROD_REJ.DOREJ='N'
   || {? PROD_REJ.SRODZ='ZL'
      || {? exec('get','#params',500631,2)='T' || 'xwin16.png:8' || 'xwin16.png:38' ?}
      |? PROD_REJ.SRODZ='PL'
      || {? exec('get','#params',500632,2)='T' || 'xwin16.png:8' || 'xwin16.png:38' ?}
      |? PROD_REJ.SRODZ='PX'
      || {? exec('get','#params',500633,2)='T' || 'xwin16.png:8' || 'xwin16.png:38' ?}
      || 'xwin16.png:48'
      ?}
   || 'xwin16.png:110'
   ?}
";
PROD_REJ.win_fml(_wer,,'STARTD',,'ICON_BEFORE',_formikon);
_formikon:="
   {? PROD_REJ.PL_OGR<>null() | PROD_REJ.GROP<>null()
   || 'xwin16.png:188'
   || 'xwin16.png:110'
   ?}
";
PROD_REJ.win_fml(_wer,,'ILC',,'ICON_BEFORE',_formikon);
_formikon:="
   {? PROD_REJ.KJ_BAD='B'
   || 'xwin16.png:93'
   |? PROD_REJ.KJ_BAD='P'
   || 'xwin16.png:94'
   |? PROD_REJ.KONTROLA='T'
   || 'xwin16.png:94'
   || 'xwin16.png:110'
   ?}
";
PROD_REJ.win_fml(_wer,,'ILW',,'ICON_BEFORE',_formikon);
_formikon:="
   {? PROD_REJ.KOOP='T'
   || 'xwin16.png:90'
   |? PROD_REJ.BRYG='T'
   || 'xwin16.png:31'
   |? PROD_REJ.PRAC='T'
   || 'xwin16.png:100'
   || 'xwin16.png:110'
   ?}
";
PROD_REJ.win_fml(_wer,,'RES_SYM',,'ICON_BEFORE',_formikon);
_formikon:="
   _zgp:=exec('get_zgp','prod_rej');
   _dok:=exec('FindAndGet','#table',ZGP,_zgp,,\"DOK\",null());
   {? _dok<>null()
   || 'xwin16.png:190'
   || 'xwin16.png:110'
   ?}
";
PROD_REJ.win_fml(_wer,,'OPIS',,'ICON_BEFORE',_formikon);

::================================================= SELECT =============================================================
{? _args.FORM='select'
||
   _grp:=PROD_REJ.grp_make(_args.TITLE,,'prodrejselect'+$ProdRej.F_FILTER,,,_args.CLOSE);
   PROD_REJ.win_sel(_grp);

   _af:="
      {? ProdRej.F_FILTER || grp_edisp(FILTER,'RED_PREJ') ?};
      exec('grayed','prod_rej',cur_win(1,1));
      ~~
   ";
   PROD_REJ.grp_sel(_grp,,_wer,,_af,,,,,,,,'maximized');

   {? ProdRej.F_FILTER
   || PROD_REJ.grp_splt(_grp,'panel0','vertical','filter',',80%','#');
      PROD_REJ.grp_edit(_grp,FILTER,'RED_PREJ')
   ?};

   {? ~_args.PROCES || AreaTitle.setTitle() ?};
   PROD_REJ.select()

::================================================= GRP ================================================================
|? _args.FORM='grp'
||
   _grp:=PROD_REJ.grp_make(_args.TITLE,,'prodrejgrp'+$ProdRej.F_FILTER,,,_args.CLOSE);
   PROD_REJ.win_sel(_grp);

   _af:="
      {? PROD_REJ.SRODZ='ZL' & PROD_REJ.KOOP<>'T' & PROD_REJ.ZGP().NTIME=0 & PROD_REJ.GROP=null()
      || tab_show(1,'tabs'); tab_hide(2,,'tabs'); tab_hide(3,,'tabs');
         tab_hide(4,,'tabs'); tab_hide(5,,'tabs'); tab_hide(6,,'tabs');
         {? ProdRej.F_ROZP || tab_show(7,'tabs') || tab_hide(7,,'tabs') ?};
         tab_hide(8,,'tabs'); tab_hide(9,,'tabs');
         PROD_REJ.ZGP();
         PROD_REJ.ZGH();
         exec('prepzch','zl_guide');
         exec('zgp_wrk','zl_wyk',ProdRej.WRK.TAB);
         _tabwyk:=VAR.A_TABWYK;
         grp_disp(ProdRej.WRK.TAB,ProdRej.WRK.WER);
         {? ProdRej.F_ROZP || grp_disp(ProdRej.WRK.TAB,ProdRej.WRK.WERR) ?};
         VAR.A_TABWYK:=_tabwyk;
         {? ProdRej.F_ROZP & VAR.A_TABWYK='EK' || tab_sel(7,'tabs') ?}
      |? PROD_REJ.SRODZ='ZL' & PROD_REJ.KOOP='T'
      || tab_hide(1,,'tabs'); tab_show(2,'tabs'); tab_hide(3,,'tabs');
         tab_hide(4,,'tabs'); tab_hide(5,,'tabs'); tab_hide(6,,'tabs');
         tab_hide(7,,'tabs'); tab_hide(8,,'tabs'); tab_hide(9,,'tabs');
         PROD_REJ.ZGP();
         PROD_REJ.ZGH();
         exec('prepzch','zl_guide');
         exec('zgp_koop','zl_koop',ProdRej.KOOP.TAB);
         grp_disp(ProdRej.KOOP.TAB,ProdRej.KOOP.WER)
      |? PROD_REJ.SRODZ='ZL' & PROD_REJ.KOOP<>'T' & PROD_REJ.ZGP().NTIME<>0
      || tab_hide(1,,'tabs'); tab_hide(2,,'tabs'); tab_show(3,'tabs');
         tab_hide(4,,'tabs'); tab_hide(5,,'tabs'); tab_hide(6,,'tabs');
         tab_hide(7,,'tabs'); tab_hide(9,,'tabs');
         {? ProdRej.F_ROZP || tab_show(8,'tabs') || tab_hide(8,,'tabs') ?};
         PROD_REJ.ZGP();
         PROD_REJ.ZGH();
         exec('prepzch','zl_guide');
         exec('zgp_godz','zl_wyk',ProdRej.ZLGB.TAB);
         _tabwyk:=VAR.A_TABWYK;
         grp_disp(ProdRej.ZLGB.TAB,ProdRej.ZLGB.WER);
         {? ProdRej.F_ROZP || grp_disp(ProdRej.ZLGB.TAB,ProdRej.ZLGB.WERR) ?};
         VAR.A_TABWYK:=_tabwyk;
         {? ProdRej.F_ROZP & VAR.A_TABWYK='EK' || tab_sel(8,'tabs') ?}
      |? PROD_REJ.SRODZ='ZL' & PROD_REJ.GROP<>null()
      || tab_hide(1,,'tabs'); tab_hide(2,,'tabs'); tab_hide(3,,'tabs');
         tab_show(4,'tabs'); tab_hide(5,,'tabs'); tab_hide(6,,'tabs');
         tab_hide(7,,'tabs'); tab_hide(8,,'tabs');
         {? ProdRej.F_ROZP || tab_show(9,'tabs') || tab_hide(9,,'tabs') ?};
         PROD_REJ.GROP();
         PROD_REJ.GROPS();
         exec('grop_godz','zl_grop',ProdRej.GROP.TAB);
         _tabwyk:=VAR.A_TABWYK;
         grp_disp(ProdRej.GROP.TAB,ProdRej.GROP.WER);
         {? ProdRej.F_ROZP || grp_disp(ProdRej.GROP.TAB,ProdRej.GROP.WERR) ?};
         VAR.A_TABWYK:=_tabwyk;
         {? ProdRej.F_ROZP & VAR.A_TABWYK='EK' || tab_sel(9,'tabs') ?}
      |? PROD_REJ.SRODZ='PL'
      || tab_hide(1,,'tabs'); tab_hide(2,,'tabs'); tab_hide(3,,'tabs');
         tab_hide(4,,'tabs'); tab_show(5,'tabs'); tab_hide(6,,'tabs');
         tab_hide(7,,'tabs'); tab_hide(8,,'tabs'); tab_hide(9,,'tabs');
         {? PROD_REJ.PL_OZ<>null()
         || PL_WYK.index('PL_OZ');
            PL_WYK.prefix(PROD_REJ.PL_OZ)
         |? PROD_REJ.PL_OGR<>null()
         || PL_WYK.index('PL_OGR');
            PL_WYK.prefix(PROD_REJ.PL_OGR)
         |? PROD_REJ.PL_OPER<>null()
         || PL_WYK.index('PL_OPER');
            PL_WYK.prefix(PROD_REJ.PL_OPER)
         ?};
         grp_disp(PL_WYK,'WER')
      |? PROD_REJ.SRODZ='PX'
      || tab_hide(1,,'tabs'); tab_hide(2,,'tabs'); tab_hide(3,,'tabs');
         tab_hide(4,,'tabs'); tab_hide(5,,'tabs'); tab_show(6,'tabs');
         tab_hide(7,,'tabs'); tab_hide(8,,'tabs'); tab_hide(9,,'tabs');
         PX_WYK.index('POZ');
         PX_WYK.prefix(PROD_REJ.PX_POZ);
         grp_disp(PX_WYK,'WER1')
      || tab_hide(1,,'tabs'); tab_hide(2,,'tabs'); tab_hide(3,,'tabs');
         tab_hide(4,,'tabs'); tab_hide(5,,'tabs'); tab_hide(6,,'tabs');
         tab_hide(7,,'tabs'); tab_hide(8,,'tabs'); tab_hide(9,,'tabs')
      ?};
      {? ProdRej.F_FILTER || grp_edisp(FILTER,'RED_PREJ') ?};
      exec('grayed','prod_rej',cur_win(1,1));
      ~~
   ";
   PROD_REJ.grp_sel(_grp,,_wer,,_af,,,,,,,,'maximized');

   {? ProdRej.F_FILTER
   || PROD_REJ.grp_splt(_grp,'panel0','vertical','filter',',80%','#');
      PROD_REJ.grp_edit(_grp,FILTER,'RED_PREJ')
   ?};

   PROD_REJ.grp_splt(_grp,'panel0','horizontal','tabs','26,70%');
   ProdRej.WRK:=exec('zgp_wrk','zl_wyk',0);
   _before:="
      _used:=~exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref());
      ProdRej.WRK.TAB.win_sel(ProdRej.WRK.WER);
      ProdRej.WRK.TAB.hdr_sel();
      ProdRej.WRK.TAB.hdr_sel({? _used || ' — '+'PODGLĄD'@ || '' ?});
      ProdRej.WRK.TAB.actions(ProdRej.WRK.WER,{? _used || 'PUG' || '' ?},,1);
      ProdRej.WRK.TAB.prefix('T');
      VAR.A_TABWYK:='';
      ~~
   ";
   _after:="exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref());ProdRej.WRK.TAB.prefix();~~";
   PROD_REJ.grp_sel(_grp,ProdRej.WRK.TAB,ProdRej.WRK.WER,'Zlecenie'@,,,,10,_before,_after,,,'maximized_with_title');
   ProdRej.KOOP:=exec('zgp_koop','zl_koop',0);
   _before:="
      _used:=~exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref());
      ProdRej.KOOP.TAB.win_sel(ProdRej.KOOP.WER);
      ProdRej.KOOP.TAB.hdr_sel();
      ProdRej.KOOP.TAB.hdr_sel({? _used || ' — '+'PODGLĄD'@ || '' ?});
      ProdRej.KOOP.TAB.actions(ProdRej.KOOP.WER,{? _used || 'PUG' || '' ?},,1);
      VAR.A_TABWYK:='';
      ~~
   ";
   _after:="exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref());~~";
   PROD_REJ.grp_sel(_grp,ProdRej.KOOP.TAB,ProdRej.KOOP.WER,'Zlecenie'@,,,,10,_before,_after,,,'maximized_with_title');
   ProdRej.ZLGB:=exec('zgp_godz','zl_wyk',0);
   _before:="
      _used:=~exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref());
      ProdRej.ZLGB.TAB.win_sel(ProdRej.ZLGB.WER);
      ProdRej.ZLGB.TAB.hdr_sel();
      ProdRej.ZLGB.TAB.hdr_sel({? _used || ' — '+'PODGLĄD'@ || '' ?});
      ProdRej.ZLGB.TAB.actions(ProdRej.ZLGB.WER,{? _used || 'PUG' || '' ?},,1);
      ProdRej.ZLGB.TAB.prefix('T');
      VAR.A_TABWYK:='';
      ~~
   ";
   _after:="exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref());ProdRej.ZLGB.TAB.prefix();~~";
   PROD_REJ.grp_sel(_grp,ProdRej.ZLGB.TAB,ProdRej.ZLGB.WER,'Zlecenie'@,,,,10,_before,_after,,,'maximized_with_title');
   ProdRej.GROP:=exec('grop_godz','zl_grop',0);
   _before:="
      _used:=~exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref());
      ProdRej.GROP.TAB.win_sel(ProdRej.GROP.WER);
      ProdRej.GROP.TAB.hdr_sel();
      ProdRej.GROP.TAB.hdr_sel({? _used || ' — '+'PODGLĄD'@ || '' ?});
      ProdRej.GROP.TAB.actions(ProdRej.GROP.WER,{? _used || 'PUG' || '' ?},,1);
      VAR.A_TABWYK:='';
      ~~
   ";
   _after:="exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref());~~";
   PROD_REJ.grp_sel(_grp,ProdRej.GROP.TAB,ProdRej.GROP.WER,'Zlecenie'@,,,,10,_before,_after,,,'maximized_with_title');
   _before:="
      _used:=~exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref());
      PL_WYK.win_sel('WER');
      PL_WYK.hdr_sel();
      PL_WYK.hdr_sel({? _used || ' — '+'PODGLĄD'@ || '' ?});
      PL_WYK.actions('WER',{? _used || 'PUCWIO' || '' ?},,1);
      VAR.A_TABWYK:='';
      ~~
   ";
   _after:="exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref());~~";
   PROD_REJ.grp_sel(_grp,PL_WYK,'WER','Plan operacyjny'@,,,,,_before,_after,,,'maximized_with_title');
   _before:="
      VAR.A_TABWYK:='';
      PROD_REJ.PX_POZ();
      _il_wym:=PX_POZ.PX_KONT().IL_WYM;
      _max_wym:=exec('il_wym','px_param');
      {! _it:=1.._il_wym
      |! ($('PX_VAR.TITD'+$_it+':=PX_KONT.JM'+$_it+'().KOD+\'\' - \'\'+JM.NAZ'))()
      !};
      {? _il_wym<_max_wym
      || {! _it:=_il_wym+1.._max_wym
         |! ($('PX_VAR.TITD'+$_it+':=\'\' - \'\''))()
         !}
      ?}
   ";
   PROD_REJ.grp_sel(_grp,PX_WYK,'WER1','Plan strategiczny'@,,,,,_before,,,,'maximized_with_title');
   _before:="
      _used:=~exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref());
      ProdRej.WRK.TAB.win_sel(ProdRej.WRK.WERR);
      ProdRej.WRK.TAB.hdr_sel();
      ProdRej.WRK.TAB.hdr_sel({? _used || ' — '+'PODGLĄD'@ || '' ?});
      ProdRej.WRK.TAB.actions(ProdRej.WRK.WERR,{? _used || 'U' || '' ?},,1);
      ProdRej.WRK.TAB.prefix('N');
      VAR.A_TABWYK:='EK';
      ~~
   ";
   _after:="exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref());ProdRej.WRK.TAB.prefix();~~";
   PROD_REJ.grp_sel(_grp,ProdRej.WRK.TAB,ProdRej.WRK.WERR,'E-kiosk'@,,,,10,
                    _before,_after,,,'maximized_with_title');
   _before:="
      _used:=~exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref());
      ProdRej.ZLGB.TAB.win_sel(ProdRej.ZLGB.WERR);
      ProdRej.ZLGB.TAB.hdr_sel();
      ProdRej.ZLGB.TAB.hdr_sel({? _used || ' — '+'PODGLĄD'@ || '' ?});
      ProdRej.ZLGB.TAB.actions(ProdRej.ZLGB.WERR,{? _used || 'U' || '' ?},,1);
      ProdRej.ZLGB.TAB.prefix('N');
      VAR.A_TABWYK:='EK';
      ~~
   ";
   _after:="exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref());ProdRej.ZLGB.TAB.prefix();~~";
   PROD_REJ.grp_sel(_grp,ProdRej.ZLGB.TAB,ProdRej.ZLGB.WERR,'E-kiosk'@,,,,10,
                    _before,_after,,,'maximized_with_title');
   _before:="
      _used:=~exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref());
      ProdRej.GROP.TAB.win_sel(ProdRej.GROP.WERR);
      ProdRej.GROP.TAB.hdr_sel();
      ProdRej.GROP.TAB.hdr_sel({? _used || ' — '+'PODGLĄD'@ || '' ?});
      ProdRej.GROP.TAB.actions(ProdRej.GROP.WERR,{? _used || 'U' || '' ?},,1);
      ProdRej.GROP.TAB.prefix('N');
      VAR.A_TABWYK:='EK';
      ~~
   ";
   _after:="exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref());ProdRej.GROP.TAB.prefix();~~";
   PROD_REJ.grp_sel(_grp,ProdRej.GROP.TAB,ProdRej.GROP.WERR,'E-kiosk'@,,,,10,
                    _before,_after,,,'maximized_with_title');
   {? ~_args.PROCES || AreaTitle.setTitle() ?};
   PROD_REJ.select()
?};
::======================================================================================================================

{? VEK.TERM<>'T'
|| VAR_DEL.delete('ProdRej')
?};
~~


\display_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga 'wyswietl' w oknie tymczasowej tabeli do rejestracji wykonan
::       Kontekst pracy: ProdRej
::----------------------------------------------------------------------------------------------------------------------
{? PROD_REJ.SRODZ='PX'
|| exec('display_4rej','px_wyk')
|? PROD_REJ.SRODZ='PL'
|| exec('display_4rej','po_wyk')
|? PROD_REJ.SRODZ='ZL'
|| exec('display_4rej','zl_wyk')
?};
~~


\doc_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Informacja o dokumentach wyswietlana z poziomu rejestracji wykonan
::       Obsluga przycisku 'Dokumentacja' - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
{? PROD_REJ.SRODZ='PX'
|| exec('doc_4rej','px_wyk')
|? PROD_REJ.SRODZ='PL'
|| exec('doc_4rej','po_wyk')
|? PROD_REJ.SRODZ='ZL'
|| exec('doc_4rej','zl_wyk')
?};
~~


\npu_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.14]
:: OPIS: Informacja o NPU wyświetlana z poziomu rejestracji wykonań
::       Obsługa przycisku 'NPU' - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
{? PROD_REJ.SRODZ='PX'
|| exec('npu_4rej','px_wyk')
|? PROD_REJ.SRODZ='PL'
|| exec('npu_4rej','po_wyk')
|? PROD_REJ.SRODZ='ZL'
|| exec('npu_4rej','zl_wyk')
?};
~~


\prev_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku 'Wczesniej' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
{? FILTER.PR_DATA=date(0,0,0)
|| FILTER.PR_DATA:=date()
|| FILTER.PR_DATA:=FILTER.PR_DATA-1
?};
FILTER.PR_ODD:=date(0,0,0);
FILTER.PR_ODT:=time(0,0,0);
FILTER.PR_DOD:=date(0,0,0);
FILTER.PR_DOT:=time(0,0,0);
exec('filter','prod_rej');
~~


\next_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku 'Pozniej' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
{? FILTER.PR_DATA=date(0,0,0)
|| FILTER.PR_DATA:=date()
|| FILTER.PR_DATA:=FILTER.PR_DATA+1
?};
FILTER.PR_ODD:=date(0,0,0);
FILTER.PR_ODT:=time(0,0,0);
FILTER.PR_DOD:=date(0,0,0);
FILTER.PR_DOT:=time(0,0,0);
exec('filter','prod_rej');
~~


\filter_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsługa przycisku 'Filtr' w oknie rejestracji wykonań - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('Filter');
Filter:=obj_new(
   'PR_DATA',
   'PR_ODD',
   'PR_ODT',
   'PR_DOD',
   'PR_DOT',
   'PR_WYD',
   'PR_A_WYD',
   'PR_OPIS',
   'PR_RESS',
   'PR_RESN',
   'PR_MKTM',
   'PR_MN',
   'PR_M',
   'PR_L_PX',
   'PR_L_PL',
   'PR_L_ZL',
   'PR_OK',
   'PR_POTW',
   'PR_START',
   'PR_PROB',
   'PR_PRAC',
   'PR_BRYG',
   'PR_KH',
   'PR_P',
   'PR_ZLBR',
   'PR_A',
   'PR_DOREJ',
   'PR_KOOP',
   'PR_GROP',
   'PR_RP',
   'PR_KONT',
   'PR_OSOBA'
);

{! _it:=1..obj_len(Filter)
|! _tmp:=exec('revert','#string',!Filter[_it]);
   _pos:=_tmp*'.';
   _acr:=!Filter[_it]+_pos;
   Filter[_it]:=($('FILTER'+_acr))()
!};

:: Dodatkowe ustawienia
exec('ustaw_okna','kontrahent');
_p_naz:=VAR1.P_NAZ;

FILTER.win_edit('RED_PR');
{? FILTER.edit()
||
   REF.OSOBA:=FILTER.PR_OSOBA;
   exec('filter','prod_rej');
   grp_edisp(FILTER,'RED_PREJ');
   exec('filter_save','prod_rej')
||
   {! _it:=1..obj_len(Filter)
   |! _tmp:=exec('revert','#string',!Filter[_it]);
      _pos:=_tmp*'.';
      _acr:=!Filter[_it]+_pos;
      ($('FILTER'+_acr))():=Filter[_it]
   !};
   VAR1.P_NAZ:=_p_naz
?};
VAR_DEL.delete('Filter');
~~


\filter
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Tworzenie filtra dla rejestracji wykonań
::       UWAGA: przy dużej ilości rekordów może być stosowne zmienienie na index/prefix,
::              ale nie będzie np. możliwości filtrowania bez względu na rejestr liter
::              i wg dowolnego ciągu znaków czy zakresu dat
::----------------------------------------------------------------------------------------------------------------------
_where:='';

{? FILTER.PR_DATA<>date(0,0,0)
|| _where+='PROD_REJ.STARTD=to_date(\''+$FILTER.PR_DATA+'\') and '
?};

{? FILTER.PR_RESS<>''
|| _where+='(PROD_REJ.RES_SYM=\''+FILTER.PR_RESS+'\') and '
?};

{? FILTER.PR_A_WYD<>null()
|| _where+='(PROD_REJ.WYD=\''+$exec('szukaj_ud_skl','schemat','PODZORG',FILTER.PR_A_WYD().KOD)+'\') and '
?};

{? FILTER.PR_KH<>null()
|| _where+='(PROD_REJ.KH=\''+$FILTER.PR_KH+'\') and '
?};

{? FILTER.PR_GKTL<>null()
|| _where+='(PROD_REJ.GKTL=\''+$FILTER.PR_GKTL+'\') and '
?};

_where+='(';
{? FILTER.PR_L_PX='T' || _where+='PROD_REJ.SRODZ=\'PX\'' || _where+='1=2' ?};
_where+=' or ';
{? FILTER.PR_L_PL='T' & exec('get','#params',500621)='P' || _where+='PROD_REJ.SRODZ=\'PL\'' || _where+='1=2' ?};
_where+=' or ';
{? FILTER.PR_L_ZL='T' & exec('get','#params',500621)='Z' || _where+='PROD_REJ.SRODZ=\'ZL\'' || _where+='1=2' ?};
_where+=')';

{? FILTER.PR_ODD<>date(0,0,0) & FILTER.PR_DOD=date(0,0,0)
|| _tm_od:=exec('create','#tm_stamp',FILTER.PR_ODD,FILTER.PR_ODT);
   _where+=' and PROD_REJ.TM_START>='+$_tm_od
|? FILTER.PR_ODD=date(0,0,0) & FILTER.PR_DOD<>date(0,0,0)
|| _tm_do:=exec('create','#tm_stamp',FILTER.PR_DOD,FILTER.PR_DOT);
   _where+=' and PROD_REJ.TM_START<='+$_tm_do
|? FILTER.PR_ODD<>date(0,0,0) & FILTER.PR_DOD<>date(0,0,0)
|| _tm_od:=exec('create','#tm_stamp',FILTER.PR_ODD,FILTER.PR_ODT);
   _tm_do:=exec('create','#tm_stamp',FILTER.PR_DOD,FILTER.PR_DOT);
   _where+=' and PROD_REJ.TM_START>='+$_tm_od+' and PROD_REJ.TM_START<='+$_tm_do
?};

{? FILTER.PR_START='T'
|| _where+=' and PROD_REJ.START=\'T\''
|? FILTER.PR_START='N'
|| _where+=' and PROD_REJ.START=\'N\''
?};

{? FILTER.PR_OK='T'
|| _where+=' and PROD_REJ.OK=\'T\''
|? FILTER.PR_OK='N'
|| _where+=' and PROD_REJ.OK=\'N\''
?};

{? FILTER.PR_POTW='T'
|| _where+=' and PROD_REJ.POTW=\'T\''
|? FILTER.PR_POTW='N'
|| _where+=' and PROD_REJ.POTW=\'N\''
?};

{? FILTER.PR_PROB='T'
|| _where+=' and PROD_REJ.PROBLEM=\'T\''
|? FILTER.PR_PROB='N'
|| _where+=' and PROD_REJ.PROBLEM=\'N\''
?};

{? FILTER.PR_PRAC='T'
|| _where+=' and PROD_REJ.PRAC=\'T\''
|? FILTER.PR_PRAC='N'
|| _where+=' and PROD_REJ.PRAC=\'N\''
?};

{? FILTER.PR_BRYG='T'
|| _where+=' and PROD_REJ.BRYG=\'T\''
|? FILTER.PR_BRYG='N'
|| _where+=' and PROD_REJ.BRYG=\'N\''
?};

{? FILTER.PR_KOOP='T'
|| _where+=' and PROD_REJ.KOOP=\'T\''
|? FILTER.PR_KOOP='N'
|| _where+=' and PROD_REJ.KOOP=\'N\''
?};

{? FILTER.PR_GROP='T'
|| _where+=' and not(PROD_REJ.PL_OGR is null and PROD_REJ.GROP is null)'
|? FILTER.PR_GROP='N'
|| _where+=' and (PROD_REJ.PL_OGR is null and PROD_REJ.GROP is null)'
?};

{? FILTER.PR_KONT='T'
|| _where+=' and (PROD_REJ.KONTROLA=\'T\')'
|? FILTER.PR_KONT='N'
|| _where+=' and (PROD_REJ.KONTROLA=\'N\')'
?};

{? FILTER.PR_A='T'
|| _where+=' and PROD_REJ.A=\'T\''
|? FILTER.PR_A='N'
|| _where+=' and PROD_REJ.A=\'N\''
?};

{? FILTER.PR_DOREJ='T'
|| _where+=' and PROD_REJ.DOREJ=\'T\''
|? FILTER.PR_DOREJ='N'
|| _where+=' and PROD_REJ.DOREJ=\'N\''
?};

{? FILTER.PR_RP='T'
|| _where+=' and PROD_REJ.RP=\'T\''
|? FILTER.PR_RP='N'
|| _where+=' and PROD_REJ.RP=\'N\''
?};

{? FILTER.PR_P<>null() & FILTER.PR_ZLBR=null()
|| _where+=' and KAP.P='''+$FILTER.PR_P+''''
|? FILTER.PR_ZLBR<>null() & FILTER.PR_P=null()
|| _where+=' and KAP.B='''+$FILTER.PR_ZLBR+''''
|? FILTER.PR_ZLBR<>null() & FILTER.PR_P<>null()
|| _where+=' and (KAP.P='''+$FILTER.PR_P+'''';
   _where+=' or KAP.B='''+$FILTER.PR_ZLBR+''')'
?};
ODDZ.cntx_psh();
ODDZ.prefix();
{? ODDZ.size()>1
|| _where+=' and (PROD_REJ.ZL is NULL and GROP.ODDZ='''+ST.ODDZ_KOD+''' or ZL.ODDZ='''+ST.ODDZ_KOD+''')'
?};
ODDZ.cntx_pop();

:: Pominięcie operacji wykorzystanych w grupach operacji (tylko dla ekiosków)
{? VEK.TERM='T'
|| _where+=' and (GROPP.ZGP is null)'
?};

{? ProdRej.WHERE<>'' || _where+=' and '+ProdRej.WHERE ?};

PROD_REJ.clear();
PROD_REJ.f_set(
   {? ProdRej.SORT<>'' || ProdRej.SORT || 'OPER,TM_END' ?},
   {? FILTER.PR_P<>null() | FILTER.PR_ZLBR<>null()
   || 'left join ZGP '
      'left join @KAP '
      'left join ZL using(PROD_REJ.ZL,ZL.REFERENCE) '
      'left join GROPP using(GROPP.ZGP,ZGP.REFERENCE) '
      'left join GROP using(PROD_REJ.GROP,GROP.REFERENCE) '
   || 'left join ZGP '
      'left join ZL using(PROD_REJ.ZL,ZL.REFERENCE) '
      'left join GROPP using(GROPP.ZGP,ZGP.REFERENCE) '
      'left join GROP using(PROD_REJ.GROP,GROP.REFERENCE) '
   ?}+
   ProdRej.JOIN,
   _where,
   ProdRej.TAB
);
:: Ustawienie od razu na pierwszy rekord
::PROD_REJ.f_first();
~~


\filter_save
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Zapisuje bieżący filtr do parametrów FO bieżącego użytkownika
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_user:=OPERATOR.USER;

exec('set','#params',8650,FILTER.PR_A_WYD().KOD,_user);
exec('set','#params',8651,$FILTER.PR_P,_user);
exec('set','#params',8652,FILTER.PR_ZLBR().KOD,_user);
exec('set','#params',8653,FILTER.PR_KH().SKR,_user);

exec('set','#params',8654,FILTER.PR_ODD,_user);
exec('set','#params',8655,FILTER.PR_ODT,_user);
exec('set','#params',8656,FILTER.PR_DOD,_user);
exec('set','#params',8657,FILTER.PR_DOT,_user);

exec('set','#params',8658,FILTER.PR_L_ZL,_user);
exec('set','#params',8659,FILTER.PR_L_PL,_user);
exec('set','#params',8660,FILTER.PR_L_PX,_user);

exec('set','#params',8661,FILTER.PR_A,_user);
exec('set','#params',8662,FILTER.PR_DOREJ,_user);
exec('set','#params',8663,FILTER.PR_START,_user);
exec('set','#params',8664,FILTER.PR_OK,_user);
exec('set','#params',8665,FILTER.PR_POTW,_user);
exec('set','#params',8666,FILTER.PR_RP,_user);

exec('set','#params',8667,FILTER.PR_PRAC,_user);
exec('set','#params',8668,FILTER.PR_BRYG,_user);
exec('set','#params',8669,FILTER.PR_KOOP,_user);
exec('set','#params',8670,FILTER.PR_GROP,_user);
exec('set','#params',8671,FILTER.PR_PROB,_user);
exec('set','#params',8672,FILTER.PR_KONT,_user);

exec('set','#params',8673,FILTER.PR_GKTL().GR,_user);
~~


\filter_load
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Zapisuje bieżący filtr do parametrów FO bieżącego użytkownika
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_user:=OPERATOR.USER;

_fo:=exec('get','#params',8650,type_of(''),_user);
FILTER.PR_WYD:=exec('szukaj_ud_skl','schemat','PODZORG',_fo);
FILTER.PR_A_WYD:=exec('FindInSet','#table','SLO','KOD',_fo,,,1,,null());
_fo:=exec('get','#params',8651,type_of(''),_user);
FILTER.PR_P:=exec('FindAndGet','#table',P,_fo,,,null());
FILTER.PR_OSOBA:=FILTER.PR_P().OSOBA;
VAR1.P_NAZ:=FILTER.PR_P().OSOBA().NAZWISKO;
_fo:=exec('get','#params',8652,type_of(''),_user);
{? _fo<>''
|| FILTER.PR_ZLBR:=exec('FindInSet','#table','ZLBR','KOD',_fo,,,1,,null())
|| FILTER.PR_ZLBR:=null()
?};
_fo:=exec('get','#params',8653,type_of(''),_user);
{? _fo<>''
|| FILTER.PR_KH:=exec('FindInSet','#table','KH','SKR',_fo,2,,1,,null())
|| FILTER.PR_KH:=null()
?};

FILTER.PR_ODD:=exec('get','#params',8654,type_of(date()),_user);
FILTER.PR_ODT:=exec('get','#params',8655,type_of(time()),_user);
FILTER.PR_DOD:=exec('get','#params',8656,type_of(date()),_user);
FILTER.PR_DOT:=exec('get','#params',8657,type_of(time()),_user);

FILTER.PR_L_ZL:=exec('get','#params',8658,type_of(''),_user);
FILTER.PR_L_PL:=exec('get','#params',8659,type_of(''),_user);
FILTER.PR_L_PX:=exec('get','#params',8660,type_of(''),_user);

FILTER.PR_A:=exec('get','#params',8661,type_of(''),_user);
FILTER.PR_DOREJ:=exec('get','#params',8662,type_of(''),_user);
FILTER.PR_START:=exec('get','#params',8663,type_of(''),_user);
FILTER.PR_OK:=exec('get','#params',8664,type_of(''),_user);
FILTER.PR_POTW:=exec('get','#params',8665,type_of(''),_user);
FILTER.PR_RP:=exec('get','#params',8666,type_of(''),_user);

FILTER.PR_PRAC:=exec('get','#params',8667,type_of(''),_user);
FILTER.PR_BRYG:=exec('get','#params',8668,type_of(''),_user);
FILTER.PR_KOOP:=exec('get','#params',8669,type_of(''),_user);
FILTER.PR_GROP:=exec('get','#params',8670,type_of(''),_user);
FILTER.PR_PROB:=exec('get','#params',8671,type_of(''),_user);
FILTER.PR_KONT:=exec('get','#params',8672,type_of(''),_user);

_fo:=exec('get','#params',8673,type_of(''),_user);
{? _fo<>''
|| FILTER.PR_GKTL:=exec('FindInSet','#table','GKTL','GR',_fo,,,1,,null())
|| FILTER.PR_GKTL:=null()
?};
~~


\start_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obluga przycisku 'Start' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
{? exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref(),,,'Zapis jest redagowany'@)
|| _res:=0;
   {? PROD_REJ.SRODZ='PX'
   || _res:=exec('start_4rej','px_wyk')
   |? PROD_REJ.SRODZ='PL'
   || _res:=exec('start_4rej','po_wyk')
   |? PROD_REJ.SRODZ='ZL'
   || _res:=exec('start_4rej','zl_wyk')
   ?};
   {? _res || PROD_REJ.f_rfresh() ?};
   exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref())
?};
~~


\stop_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku 'Koniec' w oknie rejestracji wykonan - opcja 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
{? exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref(),,,'Zapis jest redagowany'@)
|| _res:=0;
   {? PROD_REJ.SRODZ='PX'
   || _res:=exec('stop_4rej','px_wyk')
   |? PROD_REJ.SRODZ='PL'
   || _res:=exec('stop_4rej','po_wyk')
   |? PROD_REJ.SRODZ='ZL'
   || _res:=exec('stop_4rej','zl_wyk')
   ?};
   {? _res || PROD_REJ.f_rfresh() ?};
   exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref())
?};
~~


\rej_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku 'Rejestracje' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
_used:=~exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref());
{? PROD_REJ.SRODZ='PX'
|| exec('rej_4rej','px_wyk',_used)
|? PROD_REJ.SRODZ='PL'
|| exec('rej_4rej','po_wyk',_used)
|? PROD_REJ.SRODZ='ZL'
|| {? PROD_REJ.KOOP='T'
   || exec('rej_4rej','zl_koop',_used)
   |? PROD_REJ.GROP<>null()
   || exec('rej_4rej','zl_grop',_used)
   || exec('rej_4rej','zl_wyk',_used)
   ?}
?};
{? _used=0 || exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref()) ?};
~~


\wykon_4rej_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsługa akcji 'przed' przycisku 'Wykonano' w oknie rejestracji wykonań - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
{? PROD_REJ.sel_size()=0
|| {? exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref(),,,'Zapis jest redagowany'@)
   || _ref:=PROD_REJ.ref();

      _can_continue:=1;

::    Zapamiętuję poprzedni rekord na którym się ustawić, jeżeli bieżący wypadnie z filtra
::    z jakiejś przyczyny (np filtr był założony na niewykonane, a ta akcja wykonuje)
      _prev:=null();
      {? _ref<>null()
      || PROD_REJ.cntx_psh();
         {? PROD_REJ.f_active()>0
         || {? PROD_REJ.f_prev()>0
            || _prev:=PROD_REJ.ref();

::             Przywracam to na czym oryginalnie stałem
               _can_continue:=PROD_REJ.f_seek(_ref)
            ?}
         ||
            {? PROD_REJ.prev()
            || _prev:=PROD_REJ.ref()
            ?}
         ?};
         PROD_REJ.cntx_pop()
      ?};

      _res:=0;

      {? _can_continue>0
      ||
         {? PROD_REJ.SRODZ='PX'
         || _res:=exec('wykon_4rej','px_wyk')
         |? PROD_REJ.SRODZ='PL'
         || _res:=exec('wykon_4rej','po_wyk')
         |? PROD_REJ.SRODZ='ZL'
         || _res:=exec('wykon_4rej','zl_wyk')
         ?}
      ?};

      {? _res || PROD_REJ.f_rfresh() ?};

::    Przywracam kontekst w oknie, lub skaczę na poprzedni rekord względem tego który wykonywałem
::    żeby nie skakać po oknie jak szalony
      {? _res
      || {? _ref<>null() & _prev<>null()
         || {? PROD_REJ.f_active()>0
            || {? PROD_REJ.f_seek(_ref)=0
               || PROD_REJ.f_seek(_prev)
               ?}
            || {? PROD_REJ.seek(_ref)=0
               || PROD_REJ.seek(_prev)
               ?}
            ?}
         ?}
      ?};
      exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref())
   ?}
?};
~~


\wykon_4rej_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga akcji 'po' przycisku 'Wykonano' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
~~


\wykon_4rej_gpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga akcji 'grupa przed' przycisku 'Wykonano' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Akcja grupowa dla wykonań nie jest obsługiwana.'@);
VAR.GRUPA:='T';
1


\wykon_4rej_gpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga akcji 'grupa po' przycisku 'Wykonano' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
VAR.GRUPA:='N';
~~


\xwykon_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku 'Wycofaj' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
{? VAR.GRUPA<>'T'
|| _res:=0;
   {? exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref(),,,'Zapis jest redagowany'@)
   || {? PROD_REJ.SRODZ='PX'
      || _res:=exec('xwykon_4rej','px_wyk')
      |? PROD_REJ.SRODZ='PL'
      || _res:=exec('xwykon_4rej','po_wyk')
      |? PROD_REJ.SRODZ='ZL'
      || _res:=exec('xwykon_4rej','zl_wyk')
      ?};
      {? _res || PROD_REJ.f_rfresh() ?};
      exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref())
   ?}
?};
~~


\potw_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsługa przycisku 'Potwierdź' w oknie rejestracji wykonań - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
{? exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref(),,,'Zapis jest redagowany'@)
|| _res:=0;
   {? PROD_REJ.SRODZ='PX'
   || _res:=exec('potw_4rej','px_wyk')
   |? PROD_REJ.SRODZ='PL'
   || _res:=exec('potw_4rej','po_wyk')
   |? PROD_REJ.SRODZ='ZL'
   || _res:=exec('potw_4rej','zl_wyk')
   ?};
   {? _res || PROD_REJ.f_rfresh() ?};
   exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref())
?};
~~


\xpotw_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Obsługa przycisku 'Odrzuć' w oknie rejestracji wykonań - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
{? exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref(),,,'Zapis jest redagowany'@)
|| _res:=0;
   {? PROD_REJ.SRODZ='PX'
   || _res:=exec('xpotw_4rej','px_wyk')
   |? PROD_REJ.SRODZ='PL'
   || _res:=exec('xpotw_4rej','po_wyk')
   |? PROD_REJ.SRODZ='ZL'
   || _res:=exec('xpotw_4rej','zl_wyk')
   ?};
   {? _res || PROD_REJ.f_rfresh() ?};
   exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref())
?};
~~


\problem_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsługa przycisku 'Zgłoś problem' w oknie rejestracji wykonań - opcje 'select' i 'grp'
::       oraz wywołanie z formuły exec('problem_4erej','prod_rej') - opcja 'edit'
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('upr_problem','zl_wkj')
|| FUN.info('Brak uprawnień do zgłaszania problemów.'@);
   return('')
?};

{? PROD_REJ.A<>'T'
|| FUN.info('Zapis nieaktywny — nie można zgłaszać problemów.'@);
   return('')
?};

::{? PROD_REJ.PROBLEM='T'
::|| FUN.info('Do tego zapisu problem już został zgłoszony.'@);
::   return('')
::?};

{? exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref(),,,'Zapis jest redagowany'@)
|| {? PROD_REJ.SRODZ='PX'
   || exec('problem_4rej','px_wyk')
   |? PROD_REJ.SRODZ='PL'
   || exec('problem_4rej','po_wyk')
   |? PROD_REJ.SRODZ='ZL'
   || exec('problem_4rej','zl_wyk')
   ?};
   exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref())
?};
~~


\xproblem_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Obsługa przycisku 'Rozwiąż problem' w oknie rejestracji wykonań - opcje 'select' i 'grp'
::       oraz wywołanie z formuły exec('problem_4erej','prod_rej') - opcja 'edit'
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('upr_xproblem','zl_wkj')
|| FUN.info('Brak uprawnień do rozwiązywania problemów.'@);
   return('')
?};

{? PROD_REJ.A<>'T'
|| FUN.info('Zapis nieaktywny — nie można rozwiązywać problemów.'@);
   return('')
?};

{? PROD_REJ.PROBLEM='N'
|| FUN.info('Do tego zapisu problem już został rozwiązany.'@);
   return('')
?};

{? exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref(),,,'Zapis jest redagowany'@)
|| {? PROD_REJ.SRODZ='PX'
   || exec('xproblem_4rej','px_wyk')
   |? PROD_REJ.SRODZ='PL'
   || exec('xproblem_4rej','po_wyk')
   |? PROD_REJ.SRODZ='ZL'
   || exec('xproblem_4rej','zl_wyk')
   ?};
   exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref())
?};
~~


\prac_4rej_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga akcji 'przed' przycisku 'Pracownik' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
{? VAR.GRUPA<>'T'
||
   {? PROD_REJ.SRODZ='PX'
   || exec('prac_4rej','px_wyk')
   |? PROD_REJ.SRODZ='PL'
   || exec('prac_4rej','po_wyk')
   |? PROD_REJ.SRODZ='ZL'
   || exec('prac_4rej','zl_wyk')
   ?}
?};
~~


\prac_4rej_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga akcji 'po' przycisku 'Pracownik' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
~~


\prac_4rej_gpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga akcji 'grupa przed' przycisku 'Pracownik' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
VAR.GRUPA:='T';
1


\prac_4rej_gpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga akcji 'grupa po' przycisku 'Pracownik' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
VAR.GRUPA:='N';
~~


\bryg_4rej_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga akcji 'przed' przycisku 'Brygada' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
{? VAR.GRUPA<>'T'
||
   {? PROD_REJ.SRODZ='PX'
   || exec('bryg_4rej','px_wyk')
   |? PROD_REJ.SRODZ='PL'
   || exec('bryg_4rej','po_wyk')
   |? PROD_REJ.SRODZ='ZL'
   || exec('bryg_4rej','zl_wyk')
   ?}
?};
~~


\bryg_4rej_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga akcji 'po' przycisku 'Brygada' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
~~


\bryg_4rej_gpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga akcji 'grupa przed' przycisku 'Brygada' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
VAR.GRUPA:='T';
1


\bryg_4rej_gpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga akcji 'grupa po' przycisku 'Brygada' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
VAR.GRUPA:='N';
~~


\anuluj_4erej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku 'Anuluj' a oknie rejestracji produkcji - opcja 'edit'
::----------------------------------------------------------------------------------------------------------------------
ProdRej.EXIT:=1;
'key:Esc'


\rkprz_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga 'rekord przed' w oknie rejestracji wykonan - opcje 'select' i 'grp'
::   WY: kolor MacroBASE
::----------------------------------------------------------------------------------------------------------------------
exec('rekprzed','color','PROD_REJ#01#01')


\bre_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Faktyczna obsługa 'rekord przed' w oknie rejestracji wykonań (PROD_REJ) - opcje 'select' i 'grp'
::   WY: Kod miejsca kolorowania
::----------------------------------------------------------------------------------------------------------------------
:: Wyznaczenie ilości maksymalnej możliwej do zarejestrowania
exec('vprodrej_fill','prod_rej');
:: Wyznaczenie wartości zmiennej VAR1.TPZ (dla kart pracy)
ZGP.cntx_psh();
VAR1.TPZ:=PROD_REJ.ZGP().TPZ;
VAR.A_ZLEC:=PROD_REJ.ZGP().ZL;
ZGP.cntx_pop();
:: Kolorowanie
{? PROD_REJ.PROBLEM='T' & PROD_REJ.PROBKLAS=exec('prob_class_suspensing','zl_wkj')
|| 'PROD_REJ#01#03'
|? PROD_REJ.PROBLEM='T' & PROD_REJ.PROBKLAS=exec('prob_class_information','zl_wkj')
|| 'PROD_REJ#01#05'
|? PROD_REJ.PROBLEM='T' & PROD_REJ.PROBKLAS=exec('prob_class_blocking','zl_wkj')
|| 'PROD_REJ#01#06'
|? PROD_REJ.OK='T'
|| 'PROD_REJ#01#02'
|? PROD_REJ.A='N'
|| 'PROD_REJ#01#04'
|? PROD_REJ.START='T'
|| 'PROD_REJ#01#01'
|| ''
?}


\leg_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Legenda w oknie rejestracji wykonań - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','PROD_REJ#01#','#PROD_REJ#01','#PROD_REJ#02');
~~


\prod_rej_main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Rejestracja wykonań produkcji - wszystko razem (formuła testowa)
::   WE: [_a] - formuła na zamknięcie okna
::       [_b] - P.ref() - rejestracje będą dotyczyć wybranego pracownika
::       [_c] - ZLBR.ref() - rejestracje będą dotyczyć wybranej brygady
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of("") || _close:="" || _close:=_a ?};
{? var_pres('_b')<>type_of(null()) || _pracownik:=null() || _pracownik:=_b ?};
{? var_pres('_c')<>type_of(null()) || _zlbr:=null() || _zlbr:=_c ?};

_ask_4par:=0;

_choice:=FUN.choice('Wybierz sposób rejestracji'@,,'Okno &bez zakładek'@,'Okno &z zakładkami'@);

FILTER.PR_A:='T';

{? _choice=1
|| exec('rej_all_select','prod_rej',_ask_4par,_pracownik,_zlbr,_close)
|? _choice=2
|| exec('rej_all_grp','prod_rej',_ask_4par,_pracownik,_zlbr,_close)
?};
~~


\rej_all_grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Rejestracja wykonań produkcji - wszystko razem w oknie grupowym - opcja 'grp' (z zakładkami)
::   WE: _a - czy wybór parametrów (aktywny tylko dla 'superużytkownika')
::       _b - P.ref()/null() - rejestracje będą dotyczyć wybranego pracownika
::       _c - ZLBR.ref()/null() - rejestracje będą dotyczyć wybranej brygady
::      [_d] - formuła na zamkniecie okna
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_d')<>type_of("") || _close:="" || _close:=_d ?};

_args:=exec('rejestracja_a','prod_rej');
_args.F_NAWIG:=1;
_args.F_FILTER:=1;
_args.F_START:=1;
_args.F_STOP:=1;
_args.F_WYKON:=1;
_args.F_XWYKON:=1;
_args.F_PROB:=1;
_args.F_XPROB:=1;
_args.F_DOC:=1;
_args.F_MAT:=1;
_args.F_PRAC:=1;
_args.F_BRYG:=1;
_args.F_REJ:=1;
_args.F_POTW:=1;
_args.F_XPOTW:=1;
_args.F_NPU:=1;
_args.F_SEND:=1;
_args.FILTR_PX:=1;
_args.FILTR_PL:=1;
_args.FILTR_ZL:=1;
_args.ED_DATA:=1;
_args.ED_ZAKR:=1;
_args.ED_RES:=1;
_args.ED_M:=1;
_args.ED_WYD:=1;
_args.ED_KH:=1;
_args.ED_OPIS:=1;
_args.ED_START:=1;
_args.ED_OK:=1;
_args.ED_POTW:=1;
_args.ED_PROB:=1;
_args.ED_PRAC:=1;
_args.ED_BRYG:=1;
_args.ED_KOOP:=1;
_args.ED_GROP:=1;
_args.ED_A:=1;
_args.ED_DOREJ:=1;
_args.ED_PX:=1;
_args.ED_PL:=1;
_args.ED_ZL:=1;
_args.C_P:=_b;
_args.C_ZLBR:=_c;
_args.WHERE:='';
_args.JOIN:='';
_args.TAB:=0;
_args.FORM:='grp';
_args.CLOSE:=_close;
{? _a & sec_superuser() || exec('rejestracja_e','prod_rej',_args) ?};
exec('rejestracja','prod_rej',_args);
~~


\rej_all_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Rejestracja wykonań produkcji - wszystko razem w oknie 'select' (bez zakładek)
::   WE: _a - czy wybór parametrów (aktywny tylko dla 'superużytkownika')
::       _b - P.ref()/null() - rejestracje będą dotyczyć wybranego pracownika
::       _c - ZLBR.ref()/null() - rejestracje będą dotyczyć wybranej brygady
::      [_d] - formula na zamkniecie okna
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_d')<>type_of("") || _close:="" || _close:=_d ?};

_args:=exec('rejestracja_a','prod_rej');
_args.F_NAWIG:=1;
_args.F_FILTER:=1;
_args.F_START:=1;
_args.F_STOP:=1;
_args.F_WYKON:=1;
_args.F_XWYKON:=1;
_args.F_PROB:=1;
_args.F_XPROB:=1;
_args.F_DOC:=1;
_args.F_MAT:=1;
_args.F_PRAC:=1;
_args.F_BRYG:=1;
_args.F_REJ:=1;
_args.F_POTW:=1;
_args.F_XPOTW:=1;
_args.F_NPU:=1;
_args.F_SEND:=1;
_args.FILTR_PX:=1;
_args.FILTR_PL:=1;
_args.FILTR_ZL:=1;
_args.ED_DATA:=1;
_args.ED_ZAKR:=1;
_args.ED_RES:=1;
_args.ED_M:=1;
_args.ED_WYD:=1;
_args.ED_KH:=1;
_args.ED_OPIS:=1;
_args.ED_START:=1;
_args.ED_OK:=1;
_args.ED_POTW:=1;
_args.ED_PROB:=1;
_args.ED_PRAC:=1;
_args.ED_BRYG:=1;
_args.ED_KOOP:=1;
_args.ED_GROP:=1;
_args.ED_A:=1;
_args.ED_DOREJ:=1;
_args.ED_PX:=1;
_args.ED_PL:=1;
_args.ED_ZL:=1;
_args.C_P:=_b;
_args.C_ZLBR:=_c;
_args.WHERE:='';
_args.JOIN:='';
_args.TAB:=0;
_args.FORM:='select';
_args.CLOSE:=_close;
{? _a & sec_superuser() || exec('rejestracja_e','prod_rej',_args) ?};
exec('rejestracja','prod_rej',_args);
~~


\filter_pr_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga 'przed wyswietl' pol w zmiennej FILTER
::----------------------------------------------------------------------------------------------------------------------
{? cur_afld()='PR_DATA'
|| {? ProdRej.ED_DATA || 1 || exec('findfnrd','color') ?}
|? cur_afld()='PR_ODD' | cur_afld()='PR_ODT' | cur_afld()='PR_DOD' | cur_afld()='PR_DOT'
|| {? ProdRej.ED_ZAKR || 1 || exec('findfnrd','color') ?}
|? cur_afld()='PR_RESS' | cur_afld()='PR_RESN'
|| {? ProdRej.ED_RES || 1 || exec('findfnrd','color') ?}
|? cur_afld()='PR_MKTM' | cur_afld()='PR_MN'
|| {? ProdRej.ED_M || 1 || exec('findfnrd','color') ?}
|? cur_afld()='PR_A_WYD'
|| {? ProdRej.ED_WYD || 1 || exec('findfnrd','color') ?}
|? cur_afld()='PR_KH'
|| {? ProdRej.ED_KH || 1 || exec('findfnrd','color') ?}
|? cur_afld()='PR_OPIS'
|| {? ProdRej.ED_OPIS || 1 || exec('findfnrd','color') ?}
|? cur_afld()='PR_START'
|| ProdRej.ED_START
|? cur_afld()='PR_OK'
|| ProdRej.ED_OK
|? cur_afld()='PR_POTW'
|| ProdRej.ED_POTW
|? cur_afld()='PR_PROB'
|| ProdRej.ED_PROB
|? cur_afld()='PR_PRAC'
|| ProdRej.ED_PRAC
|? cur_afld()='PR_BRYG'
|| ProdRej.ED_BRYG
|? cur_afld()='PR_KOOP'
|| ProdRej.ED_KOOP
|? cur_afld()='PR_GROP'
|| ProdRej.ED_GROP
|? cur_afld()='PR_A'
|| ProdRej.ED_A
|? cur_afld()='PR_DOREJ'
|| ProdRej.ED_DOREJ
|? cur_afld()='PR_L_ZL'
|| ProdRej.ED_ZL
|? cur_afld()='PR_L_PL'
|| ProdRej.ED_PL
|? cur_afld()='PR_L_PX'
|| ProdRej.ED_PX
|| 1
?}


\filter_pr_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obluga 'przed redakcja' pol w zmiennej FILTER
::----------------------------------------------------------------------------------------------------------------------
{? cur_afld()='PR_DATA'
|| ProdRej.ED_DATA
|? cur_afld()='PR_ODD' | cur_afld()='PR_ODT' | cur_afld()='PR_DOD' | cur_afld()='PR_DOT'
|| ProdRej.ED_ZAKR
|? cur_afld()='PR_RESS' | cur_afld()='PR_RESN'
|| ProdRej.ED_RES
|? cur_afld()='PR_MKTM' | cur_afld()='PR_MN'
|| ProdRej.ED_M
|? cur_afld()='PR_A_WYD'
|| ProdRej.ED_WYD
|? cur_afld()='PR_KH'
|| ProdRej.ED_KH
|? cur_afld()='PR_OPIS'
|| ProdRej.ED_OPIS
|? cur_afld()='PR_START'
|| ProdRej.ED_START
|? cur_afld()='PR_OK'
|| ProdRej.ED_OK
|? cur_afld()='PR_POTW'
|| ProdRej.ED_POTW
|? cur_afld()='PR_PROB'
|| ProdRej.ED_PROB
|? cur_afld()='PR_PRAC'
|| ProdRej.ED_PRAC
|? cur_afld()='PR_BRYG'
|| ProdRej.ED_BRYG
|? cur_afld()='PR_KOOP'
|| ProdRej.ED_KOOP
|? cur_afld()='PR_GROP'
|| ProdRej.ED_GROP
|? cur_afld()='PR_A'
|| ProdRej.ED_A
|? cur_afld()='PR_DOREJ'
|| ProdRej.ED_DOREJ
|? cur_afld()='PR_L_ZL'
|| ProdRej.ED_ZL
|? cur_afld()='PR_L_PL'
|| ProdRej.ED_PL
|? cur_afld()='PR_L_PX'
|| ProdRej.ED_PX
|| 1
?}


\filter_pr_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga 'po redakcji' pol w zmiennej FILTER
::----------------------------------------------------------------------------------------------------------------------
{? cur_afld()='PR_A_WYD'
|| FILTER.PR_WYD:=exec('szukaj_ud_skl','schemat','PODZORG',FILTER.PR_A_WYD().KOD)
?};
1


\filter_pr_fd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga 'format wyswietlania' pol w zmiennej FILTER
::----------------------------------------------------------------------------------------------------------------------
''


\filter_pr_fe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga 'format redagowania' pol w zmiennej FILTER
::----------------------------------------------------------------------------------------------------------------------
''


\filter_pr_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga 'F3' pol w zmiennej FILTER
::----------------------------------------------------------------------------------------------------------------------
~~


\prodrej_wz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obluga na wzorzec pol w tabeli PROD_REJ
::----------------------------------------------------------------------------------------------------------------------
''


\vprodrej_wz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga na wzorzec pol w zmiennej VPRODREJ
::----------------------------------------------------------------------------------------------------------------------
''


\vprodrej_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsługa 'przed wyświetl' pól w zmiennej VPRODREJ
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
{? cur_afld()='IL'
|| {? VPRODREJ.EDIT_IL
   || _result:=1
   || _result:=exec('findfnrd','color')
   ?}
|? cur_afld()='IL_BRAK'
|| {? VPRODREJ.EDIT_ILB
   || _result:=1
   || _result:=exec('findfnrd','color')
   ?}
|? cur_afld()='PROCENT'
|| {? VPRODREJ.EDIT_PR
   || _result:=1
   || _result:=exec('findfnrd','color')
   ?}
|? cur_afld()='IL_PLAN'
|| {? VPRODREJ.EDIT_ILP
   || _result:=1
   || _result:=exec('findfnrd','color')
   ?}
|? cur_afld()='IL_POP'
|| {? PROD_REJ.SRODZ=''
   || _result:=exec('findfnv','#color')
   || _result:=exec('findfnrd','color')
   ?}
|? cur_afld()='IL_POPB'
|| _result:=exec('findfnrd','color')
|? cur_afld()='IL_DOREJ'
|| _result:=exec('findfnrd','color')
|? cur_afld()='JM'
|| _result:=exec('findfnrd','color')
|? cur_afld()='STARTD' | cur_afld()='STARTT'
|| {? VPRODREJ.EDIT_STA
   || _result:=1
   || _result:=exec('findfnrd','color')
   ?}
|? cur_afld()='ENDD' | cur_afld()='ENDT'
|| {? VPRODREJ.EDIT_END
   || _result:=1
   || _result:=exec('findfnrd','color')
   ?}
|? cur_afld()='TIME'
|| {? VPRODREJ.EDIT_TM
   || _result:=1
   || _result:=exec('findfnrd','color')
   ?}
|? cur_afld()='ZPARN'
||
   {? PROD_REJ.SRODZ='PL' & exec('get','#params',500621,2)='T'
   ||
::    Jesli jestem na planie operacyjnym to daje partie do redakcji tylko
::    jesli jest wlaczona synchronizacja PL->ZL czyli par 500621 ma wartosc N
      _result:=exec('findfnrd','color')
   ||
::    Zwracam najbliższe zlecenie partiowane
      _prod_zl:=exec('party_first','zl_link',PROD_REJ.ZL);
      {? _prod_zl=null()
      || _result:=exec('findfnrd','color')
      ?}
   ?}
|? cur_afld()='OK'
|| _result:=VPRODREJ.EDIT_OK
|? cur_afld()='MAX'
|| {? PROD_REJ.SRODZ='ZL'
   || {? exec('get','#params',500631,2)='T' || _result:=1 || _result:=0 ?}
   |? PROD_REJ.SRODZ='PL'
   || {? exec('get','#params',500632,2)='T' || _result:=1 || _result:=0 ?}
   |? PROD_REJ.SRODZ='PX'
   || {? exec('get','#params',500633,2)='T' || _result:=1 || _result:=0 ?}
   || _result:=0
   ?}
|? cur_afld()='AUTO'
|| {? cur_tab(1,1)=ZLGD
   || _ref:=exec('FindAndGet','#table',ZL,ZLGD.ZL,,"ref()",null())
   || _ref:=exec('FindAndGet','#table',ZL,PROD_REJ.ZL,,"ref()",null())
   ?};
   {? _ref<>null()
      & exec('FindAndGet','#table',ZL,_ref,,"ZL.RP='T'",0)
      & exec('get','#params',500771,2)='T'
      & exec('zlec_party','zl_common',_ref)
   || _result:=1
   || _result:=0;
      VPRODREJ.AUTO:='N'
   ?}
?};
_result


\vprodrej_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga 'przed redakcja' pol w zmiennej VPRODREJ
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
{? cur_afld()='OPER'
|| _result:=0
|? cur_afld()='IL'
|| _result:=VPRODREJ.EDIT_IL
|? cur_afld()='IL_BRAK'
|| _result:=VPRODREJ.EDIT_ILB
|? cur_afld()='PROCENT'
|| _result:=VPRODREJ.EDIT_PR
|? cur_afld()='IL_PLAN'
|| _result:=VPRODREJ.EDIT_ILP
|? cur_afld()='IL_POP'
|| _result:=0
|? cur_afld()='IL_DOREJ'
|| _result:=0
|? cur_afld()='JM'
|| _result:=0
|? cur_afld()='STARTD' | cur_afld()='STARTT'
|| _result:=VPRODREJ.EDIT_STA
|? cur_afld()='ENDD' | cur_afld()='ENDT'
|| _result:=VPRODREJ.EDIT_END
|? cur_afld()='TIME'
|| _result:=VPRODREJ.EDIT_TM
|? cur_afld()='ZPARN'
||
   {? VAR1.REJ_WYR='T'
   || __VAR1_IL:=VAR1.IL
   ?};

   _result:=1;
   {? PROD_REJ.SRODZ='PL' & exec('get','#params',500621,2)='T'
   ||
::    Jesli jestem na planie operacyjnym to daje partie do redakcji tylko
::    jesli jest wlaczona synchronizacja PL->ZL czyli par 500621 ma wartosc N
      _result:=0
   ?};

   {? _result>0
   ||
::    Sprawdzam czy pole z partią musi być wypełnione
      _party_req:=exec('party_req','zl_wyk',PROD_REJ.ZL);
::    Zwracam najbliższe zlecenie partiowane
      _prod_zl:=exec('party_first','zl_link',PROD_REJ.ZL);
      _result:=_party_req;
      {? _result>0
      ||
::       Ustawiam okno słownika w ZPARN
         ZPARN.win_dict('SLO_ZGP');
         ZPARN.actions('SLO_ZGP','W:W');
::       ATR.ZL,ATR.ZGH i ATR.KTM sluzy do niejawnego prefiksowania slownika partii
         ATR.ZL:=_prod_zl;

         {? _prod_zl=PROD_REJ.ZL
         ||
::          Jesli zlecenie na ktorym powstaje produkt i zlecenie ktore jest na ZLGD to
::          prefiksuje lepiej partie. Moge to zrobic tylko w tym wypadku, poniewaz sa takie sytuacje
            _zgh:=null();
            {? PROD_REJ.SRODZ='ZL'
            || _zgh:=PROD_REJ.ZGH
            |? PROD_REJ.SRODZ='PL'
            || _zgh:=PROD_REJ.PL_OPER().ZGP().NRZLP
            ?};
            ATR.ZGH:=_zgh
         || ATR.ZGH:=null()
         ?};
         {? VAR1.REJ_WYR='T' & var_pres('__ENV_WYR')>0 & __ENV_WYR.WHERE=1
         ||
::          Jeśli poprawiany zapis ZLGD, który posiada rozpiskę w rozbiciu na produkty, to lepiej prefiksuje partie
::          (wg indeksu materiałowego)
            ATR.KTM:=VPRODREJ.KTM
         || ATR.KTM:=null()
         ?}
      ?}
   ?}
|? cur_afld()='OK'
|| _result:=VPRODREJ.EDIT_OK
|? cur_afld()='AUTO'
|| {? cur_tab(1,1)=ZLGD
   || _ref:=exec('FindAndGet','#table',ZL,ZLGD.ZL,,"ref()",null())
   || _ref:=exec('FindAndGet','#table',ZL,PROD_REJ.ZL,,"ref()",null())
   ?};
   {? _ref<>null()
      & exec('FindAndGet','#table',ZL,_ref,,"ZL.RP='T'",0)
      & exec('get','#params',500771,2)='T'
      & exec('zlec_party','zl_common',_ref)
   || _result:=1
   || _result:=0;
      VPRODREJ.AUTO:='N'
   ?}
|? cur_afld()='PLACE'
|| exec('twrkplc_filter_plugin','zasoby',PROD_REJ.ref());
   _result:=1
|? cur_afld()='EANL'
|| {? VPRODREJ.MG().SL='T'
   || EANX.MG:=VPRODREJ.MG;
      EANX.WYLZAL:='T';
      _result:=1
   || _result:=0
   ?}
|? cur_afld()='KTM'
|| exec('slo_m_ok','material','T',0,,'WEDPIUORJN(ZS)');
   exec('ktm_f_set','zl_wyr')
|? cur_afld()='BRAKI_R'
|| {? VPRODREJ.IL_BRAK<=0
   || _result:=0
   || BRAKI_R.win_dict('WER');
      BRAKI_R.actions('WER','O');
      exec('braki_r_filter','braki',PROD_REJ.ZGP)
   ?}
?};
_result


\vprodrej_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga 'po redakcji' pol w zmiennej VPRODREJ
::----------------------------------------------------------------------------------------------------------------------
{? cur_afld()='PROD_REJ'
||
:: Aktualizacja przyciskow
   {? VPRODREJ.PROD_REJ().SRODZ='ZL'
   ||
      VPRODREJ.btn_eopt('RED','START','state=grayed');
      VPRODREJ.btn_eopt('RED','STOP','state=grayed');
      {? ProdRej.F_WYKON
      || VPRODREJ.btn_eopt('RED','WYKON','state=normal')
      || VPRODREJ.btn_eopt('RED','WYKON','state=grayed')
      ?}
   |? VPRODREJ.PROD_REJ().SRODZ='PL'
   ||
      {? ProdRej.F_START
      || VPRODREJ.btn_eopt('RED','START','state=normal')
      || VPRODREJ.btn_eopt('RED','START','state=grayed')
      ?};
      {? ProdRej.F_STOP
      || VPRODREJ.btn_eopt('RED','STOP','state=normal')
      || VPRODREJ.btn_eopt('RED','STOP','state=grayed')
      ?};
      VPRODREJ.btn_eopt('RED','WYKON','state=grayed')
   |? VPRODREJ.PROD_REJ().SRODZ='PX'
   ||
      {? ProdRej.F_START
      || VPRODREJ.btn_eopt('RED','START','state=normal')
      || VPRODREJ.btn_eopt('RED','START','state=grayed')
      ?};
      {? ProdRej.F_STOP
      || VPRODREJ.btn_eopt('RED','STOP','state=normal')
      || VPRODREJ.btn_eopt('RED','STOP','state=grayed')
      ?};
      VPRODREJ.btn_eopt('RED','WYKON','state=grayed')
   ?};
:: Aktualizacja pola VPRODREJ.OPIS
   VPRODREJ.OPER:=VPRODREJ.PROD_REJ().OPER;
   win_disp();
   1
|? cur_afld()='PROCENT'
||
   {? VPRODREJ.PROCENT<0 | VPRODREJ.PROCENT>100
   || FUN.emsg('Podaj wartość z przedziału 0..100.'@);
      0
   || VPRODREJ.IL:=(VPRODREJ.PROD_REJ().ILC*VPRODREJ.PROCENT/100)$VPRODREJ.M().DOKL;
      1
   ?}
|? cur_afld()='STARTT' | cur_afld()='ENDT'
||
   exec('valid_time','#field',fld())
|? cur_afld()='IL'
|| exec('vprodrej_efld_opt','prod_rej');
   1
|? cur_afld()='IL_BRAK'
|| exec('vprod_ilbr_ae','prod_rej')
|? cur_afld()='ZPARN'
|| {? VAR1.REJ_WYR='T'
   || VAR1.IL:=__VAR1_IL
   ?};
   VPRODREJ.PROD_REJ().ZGH();
   1
|? cur_afld()='KTM'
|| {? M.f_active() || M.f_clear() ?}
|? cur_afld()='MG'
|| {? VPRODREJ.MG().SL='T'
   || {? VPRODREJ.EANL<>null() & VPRODREJ.EANL().MG<>VPRODREJ.MG
      || VPRODREJ.EANL:=null()
      ?}
   || VPRODREJ.EANL:=null()
   ?};
   1
|| 1
?}


\vprodrej_fd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsługa 'format wyświetlania' pól w zmiennej VPRODREJ
::----------------------------------------------------------------------------------------------------------------------
_cur_afld:=cur_afld();

_result:='';
{? _cur_afld='TIME'
|| _result+='out_prec='+$exec('get','#params',500604,1)
|? _cur_afld='IL' | _cur_afld='IL_BRAK' | _cur_afld='IL_PLAN' |
   _cur_afld='IL_POP' | _cur_afld='IL_POPB' | _cur_afld='IL_DOREJ'
|| _result+='out_prec='+$VPRODREJ.DOKL
?};
{? _cur_afld='IL_POP'
|| {? _result<>'' || _result+=',' ?};
   {? PROD_REJ.SRODZ=''
   || _result+='empty=1'
   || _result+='empty=0'
   ?}
?};
{? _cur_afld='PROCENT'
|| {? _result<>'' || _result+=',' ?};
   {? VPRODREJ.EDIT_PR
   || _result+='empty=0'
   || _result+='empty=1'
   ?}
?};
_result


\vprodrej_fe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsługa 'format redagowania' pól w zmiennej VPRODREJ
::----------------------------------------------------------------------------------------------------------------------
_cur_afld:=cur_afld();
{? cur_afld()='TIME'
|| 'in_prec='+$exec('get','#params',500604,1)
|? _cur_afld='IL' | _cur_afld='IL_BRAK' | _cur_afld='IL_PLAN'
|| 'in_prec='+$VPRODREJ.DOKL
|| ''
?}


\prod_rej_fld_fd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga 'format wyswietlania' pol w tabeli PROD_REJ
::----------------------------------------------------------------------------------------------------------------------
'out_prec='+{? (2+cur_kwin())='e_' || {? PROD_REJ.M=null() || $ST.DOKL_P || $PROD_REJ.M().DOKL ?} || $ST.DOKL_P ?}


\prod_rej_fld_fe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga 'format redagowania' pol w tabeli PROD_REJ
::----------------------------------------------------------------------------------------------------------------------
''


\PROD_REJ_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Trigger przed add() i przed put() w tabeli PROD_REJ. Automatycznie wypelnia pola:
::       PROD_REJ.TM_START i PROD_REJ.TM_END
::  OLD: \prod_rej_trig/prod_rej.fml
::----------------------------------------------------------------------------------------------------------------------
PROD_REJ.TM_START:=exec('create','#tm_stamp',PROD_REJ.STARTD,PROD_REJ.STARTT);
PROD_REJ.TM_END:=exec('create','#tm_stamp',PROD_REJ.ENDD,PROD_REJ.ENDT);
PROD_REJ.M_ZK_N:=ref_name(PROD_REJ.ZK_N);
PROD_REJ.M_ZK_P:=ref_name(PROD_REJ.ZK_P);
1


\trig_ZGH
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Triggery dla tabeli ZGP - pozycje przewodnikow
::  OLD: \ur_ZGH/trigger.fml
::----------------------------------------------------------------------------------------------------------------------
ZGH.trig_a('put',"exec('update_4rej','zl_wyk','put',ZGH)",'update4rej');
ZGH.trig_b('del',"exec('update_4rej','zl_wyk','del',ZGH)",'update4rej');
~~


\trig_ZGP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Triggery dla tabeli ZGP - pozycje przewodnikow
::   WE: [_a] - INTEGER - trigger włączony, wyłączony
::  OLD: \ur_ZGP/trigger.fml
::----------------------------------------------------------------------------------------------------------------------
_on:=1;
{? var_pres('_a')=type_of(0)
|| _on:=_a
?};
{? _on>0
|| ZGP.trig_a('add',"exec('update_4rej','zl_wyk','add',ZGP)",'update4rej');
   ZGP.trig_a('put',"exec('update_4rej','zl_wyk','put',ZGP)",'update4rej');
   ZGP.trig_b('del',"exec('update_4rej','zl_wyk','del',ZGP)",'update4rej')
|| ZGP.trig_a('add',"",'update4rej');
   ZGP.trig_a('put',"",'update4rej');
   ZGP.trig_b('del',"",'update4rej')
?};
~~


\trig_NASZGP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Triggery dla tabeli NASZGP - nastepniki do pozycji przewodnikow
::  OLD: \ur_NASZGP/trigger.fml
::----------------------------------------------------------------------------------------------------------------------
NASZGP.trig_a('add',"exec('update_4rej','zl_wyk','add',NASZGP)",'update4rej');
NASZGP.trig_a('put',"exec('update_4rej','zl_wyk','put',NASZGP)",'update4rej');
NASZGP.trig_b('del',"exec('update_4rej','zl_wyk','del',NASZGP)",'update4rej');
~~


\trig_ZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Triggery dla tabeli ZL - zlecenia
::  OLD: \ur_ZL/trigger.fml
::----------------------------------------------------------------------------------------------------------------------
ZL.trig_a('put',"exec('update_4rej','zl_wyk','put',ZL)",'update4rej');
ZL.trig_a('put',"exec('update_4rej','po_wyk','put',ZL)",'update4rej1');
~~


\trig_GROP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Triggery dla tabeli GROP - grupy operacji
::  OLD: \ur_GROP/trigger.fml
::----------------------------------------------------------------------------------------------------------------------
GROP.trig_a('add',"exec('update_4rej','zl_grop','add',GROP)",'update4rej');
GROP.trig_a('put',"exec('update_4rej','zl_grop','put',GROP)",'update4rej');
GROP.trig_b('del',"exec('update_4rej','zl_grop','del',GROP)",'update4rej');
GROP.trig_a('put',"exec('update_4rej','po_wyk','put',GROP)",'update4rej1');
~~


\trig_GROPP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.02]
:: OPIS: Triggery dla tabeli GROPP - pozycje grupy operacji
::----------------------------------------------------------------------------------------------------------------------
GROPP.trig_a('add',"exec('update_4rej','zl_grop','add',GROPP)",'update4rej');
GROPP.trig_b('del',"exec('update_4rej','zl_grop','del',GROPP)",'update4rej');
~~


\trig_GROPS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.02]
:: OPIS: Triggery dla tabeli GROPP - zasoby grupy operacji
::----------------------------------------------------------------------------------------------------------------------
GROPS.trig_a('add',"exec('update_4rej','zl_grop','add',GROPS)",'update4rej');
GROPS.trig_a('put',"exec('update_4rej','zl_grop','put',GROPS)",'update4rej');
GROPS.trig_b('del',"exec('update_4rej','zl_grop','del',GROPS)",'update4rej');
~~


\trig_KAP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Triggery dla tabeli KAP - karty pracy do pozycji przewodnikow
::   WE: [_a] - INTEGER - [1]/0 - wlaczyc/wylaczyc triggery
::  OLD: \ur_KAP/trigger.fml
::----------------------------------------------------------------------------------------------------------------------
_on:=1;
{? var_pres('_a')=type_of(0)
|| _on:=_a
?};
{? _on>0
|| KAP.trig_a('add',"exec('update_4rej','zl_wyk','add',KAP)",'update4rej');
   KAP.trig_a('put',"exec('update_4rej','zl_wyk','put',KAP)",'update4rej');
   KAP.trig_a('del',"{? _a || exec('update_4rej','zl_wyk','del',KAP) || ~~ ?}",'update4rej')
|| KAP.trig_a('add',"",'update4rej');
   KAP.trig_a('put',"",'update4rej');
   KAP.trig_a('del',"",'update4rej')
?};
~~


\trig_ZLGD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Triggery dla tabeli ZLGD - rejestracja robocizny do pozycji przewodnikow zlecen
::   WE: [_a] - INTEGER - [1]/0 - wlaczyc/wylaczyc triggery
::  OLD: \ur_ZLGD/trigger.fml
::----------------------------------------------------------------------------------------------------------------------
_on:=1;
{? var_pres('_a')=type_of(0)
|| _on:=_a
?};
{? _on>0
|| ZLGD.trig_a('add',"exec('update_4rej','zl_wyk','add',ZLGD)",'update4rej');
   ZLGD.trig_a('put',"exec('update_4rej','zl_wyk','put',ZLGD)",'update4rej');
   ZLGD.trig_a('del',"{? _a || exec('update_4rej','zl_wyk','del',ZLGD) || ~~ ?}",'update4rej')
|| ZLGD.trig_a('add',"",'update4rej');
   ZLGD.trig_a('put',"",'update4rej');
   ZLGD.trig_a('del',"",'update4rej')
?};
~~


\trig_PL_OGR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Triggery dla tabeli PL_OGR - zaplanowane grupy operacji planu zasobow (operacyjnego)
::  OLD: \ur_PL_OGR/trigger.fml
::----------------------------------------------------------------------------------------------------------------------
PL_OGR.trig_a('add',"exec('update_4rej','po_wyk','add',PL_OGR)",'update4rej');
PL_OGR.trig_a('put',"exec('update_4rej','po_wyk','put',PL_OGR)",'update4rej');
PL_OGR.trig_b('del',"exec('update_4rej','po_wyk','del',PL_OGR)",'update4rej');
~~


\trig_PL_OPER
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Triggery dla tabeli PL_OPER - zaplanowane operacje planu zasobow (operacyjnego)
::   WE: [_a] - INTEGER - [1]/0 - wlaczyc/wylaczyc triggery
::  OLD: \ur_PL_OPER/trigger.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _on:=_a || _on:=1 ?};
{? _on>0
|| PL_OPER.trig_a('add',"exec('update_4rej','po_wyk','add',PL_OPER)",'update4rej');
   PL_OPER.trig_a('put',"exec('update_4rej','po_wyk','put',PL_OPER)",'update4rej');
   PL_OPER.trig_b('del',"exec('update_4rej','po_wyk','del',PL_OPER)",'update4rej')
|| PL_OPER.trig_a('add',"",'update4rej');
   PL_OPER.trig_a('put',"",'update4rej');
   PL_OPER.trig_b('del',"",'update4rej')
?};
~~


\trig_PL_NEXT
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Triggery dla tabeli PL_NEXT - nastepniki zaplanowanych operacji planu zasobow (operacyjnego)
::   WE: [_a] - INTEGER - [1]/0 - wlaczyc/wylaczyc triggery
::  OLD: \ur_PL_NEXT/trigger.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _on:=_a || _on:=1 ?};
{? _on>0
|| PL_NEXT.trig_a('add',"exec('update_4rej','po_wyk','add',PL_NEXT)",'update4rej');
   PL_NEXT.trig_b('del',"exec('update_4rej','po_wyk','del',PL_NEXT)",'update4rej')
|| PL_NEXT.trig_a('add',"",'update4rej');
   PL_NEXT.trig_b('del',"",'update4rej')
?};
~~


\trig_PL_OZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Triggery dla tabeli PL_OZ - rezerwacje zasobow do planu zasobow (operacyjnego)
::   WE: [_a] - INTEGER - [1]/0 - wlaczyc/wylaczyc triggery
::  OLD: \ur_PL_OZ/trigger.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _on:=_a || _on:=1 ?};
{? _on>0
|| PL_OZ.trig_a('add',"exec('update_4rej','po_wyk','add',PL_OZ)",'update4rej');
   PL_OZ.trig_a('put',"exec('update_4rej','po_wyk','put',PL_OZ)",'update4rej');
   PL_OZ.trig_b('del',"exec('update_4rej','po_wyk','del',PL_OZ)",'update4rej')
|| PL_OZ.trig_a('add',"",'update4rej');
   PL_OZ.trig_a('put',"",'update4rej');
   PL_OZ.trig_b('del',"",'update4rej')
?};
~~


\trig_PL_WYK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Triggery dla tabeli PL_WYK - rejestracja wykonan do planu zasobow (operacyjnego)
::   WE: [_a] - INTEGER - [1]/0 - wlaczyc/wylaczyc triggery
::  OLD: \ur_PL_WYK/trigger.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _on:=_a || _on:=1 ?};
{? _on>0
|| PL_WYK.trig_a('add',"exec('update_4rej','po_wyk','add',PL_WYK)",'update4rej');
   PL_WYK.trig_a('put',"exec('update_4rej','po_wyk','put',PL_WYK)",'update4rej');
   PL_WYK.trig_a('del',"{? _a || exec('update_4rej','po_wyk','del',PL_WYK) || ~~ ?}",'update4rej')
|| PL_WYK.trig_a('add',"",'update4rej');
   PL_WYK.trig_a('put',"",'update4rej');
   PL_WYK.trig_a('del',"",'update4rej')
?};
~~


\trig_PX_POZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Triggery dla tabeli PX_POZ - pozycje planu strategicznego (WPP)
::   WE: [_a] - INTEGER - [1]/0 - wlaczyc/wylaczyc triggery
::  OLD: \ur_PX_POZ/trigger.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _on:=_a || _on:=1 ?};
{? _on>0
|| PX_POZ.trig_a('add',"exec('update_4rej','px_wyk','add',PX_POZ)",'update4rej');
   PX_POZ.trig_a('put',"exec('update_4rej','px_wyk','put',PX_POZ)",'update4rej');
   PX_POZ.trig_b('del',"exec('update_4rej','px_wyk','del',PX_POZ)",'update4rej')
|| PX_POZ.trig_a('add',"",'update4rej');
   PX_POZ.trig_a('put',"",'update4rej');
   PX_POZ.trig_b('del',"",'update4rej')
?};
~~


\trig_PX_WYK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Triggery dla tabeli PX_WYK - rejestracje wykonan do planu strategicznego (WPP)
::   WE: [_a] - INTEGER - [1]/0 - wlaczyc/wylaczyc triggery
::  OLD: \ur_PX_WYK/trigger.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _on:=_a || _on:=1 ?};
{? _on>0
|| PX_WYK.trig_a('add',"exec('update_4rej','px_wyk','add',PX_WYK)",'update4rej');
   PX_WYK.trig_a('put',"exec('update_4rej','px_wyk','put',PX_WYK)",'update4rej');
   PX_WYK.trig_b('del',"exec('update_4rej','px_wyk','del',PX_WYK)",'update4rej')
|| PX_WYK.trig_a('add',"",'update4rej');
   PX_WYK.trig_a('put',"",'update4rej');
   PX_WYK.trig_b('del',"",'update4rej')
?};
~~


\ustaw_trigger
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Ustawienie trigerów związanych z aktualizacją tabel PROD_REJ i PROD_NXT
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',500611,2)='T'
|| exec('trig_ZGP','prod_rej');
   exec('trig_NASZGP','prod_rej');
   exec('trig_ZGH','prod_rej');
   exec('trig_ZL','prod_rej');
   exec('trig_KAP','prod_rej');
   exec('trig_ZLGD','prod_rej');
   exec('trig_GROP','prod_rej');
   exec('trig_GROPP','prod_rej');
   exec('trig_GROPS','prod_rej');
   ~~
?};
{? exec('get','#params',500612,2)='T'
|| exec('trig_GROP','prod_rej');
   exec('trig_PL_OPER','prod_rej');
   exec('trig_PL_OGR','prod_rej');
   exec('trig_PL_NEXT','prod_rej');
   exec('trig_PL_OZ','prod_rej');
   exec('trig_PL_WYK','prod_rej');
   ~~
?};
{? exec('get','#params',500613,2)='T'
|| exec('trig_PX_POZ','prod_rej');
   exec('trig_PX_WYK','prod_rej');
   ~~
?};
~~


\zlbr_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Wybor brygady (ZLBR) z listy albo automatyczne przypisanie wg operatora
::   WY: ZLBR.ref() / null()
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ProdRej',@)>100 & ProdRej.C_ZLBR<>null() || return(ProdRej.C_ZLBR) ?};
_res:=null();
::_wer:=ZLBR.mk_sel('Brygady'@,,,'wybierzzlbr');
::ZLBR.win_fld(_wer,,'KOD',,,20,,,'Kod'@);
::ZLBR.win_fld(_wer,,'NAZ',,,40,,,'Nazwa'@);
::ZLBR.win_act(_wer,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
::ZLBR.win_sel(_wer);
ZLBR.win_sel(exec('zlbr_win_grp','zasoby',1));
ZLBR.index('AKT_DYN');
ZLBR.prefix('T','N');
{? ZLBR.select()
|| _res:=ZLBR.ref()
|| _res:=null()
?};
VAR_DEL.delete('__wer');
_res


\p_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Wybór pracownika (P) z listy albo automatyczne przypisanie wg operatora
::   WE: [_a] - OSOBA.ref() - zawęź listę pracowników do tych powiązanych z tą osobą
::   WY: P.ref() / null()
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ProdRej',@)>100 & ProdRej.C_P<>null() || return(ProdRej.C_P) ?};
_osoba:=null();
{? var_pres('_a')=type_of(OSOBA.ref())
|| _osoba:=_a
?};

_p8771:=exec('get','#params',8771,2,OPERATOR.USER);
_ret:=exec('wybierz_pracownika','tte',0,1+_p8771,_p8771+1,_osoba);
{? _ret.STATUS=''
|| {? _ret.P.first() || _res:=exec('FindAndGet','#table',P,_ret.P.UID,,"ref()",null()) || _res:=null() ?}
|| FUN.emsg(_ret.STATUS);
   _res:=null()
?};
_res


\p_select_simple
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Nie pokazuje wyboru pracownika jak jest prosta rejestracja i jest jeden pracownik
::       do osoby, jeżeli jest kilku pracowników do osoby to wybór pracowników jest zawężony
::       do tych przypisanych do tej osoby
::   WY: P.ref() lub null
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
OSOBA.cntx_psh();
P.cntx_psh();
P.index('OSOBA');
{? OPERATOR.USER().OSOBA<>null()
|| P.prefix(OPERATOR.USER().OSOBA,REF.FIRMA);
   {? P.size()=1 & P.first()
   || _result:=P.ref()
   ||
::    Kilku pracowników do osoby
      _result:=exec('p_select','prod_rej',OPERATOR.USER().OSOBA)
   ?}
||
:: Jeżeli użytkownik nie ma osoby to pokazuję i tak pełny wybór
   _result:=exec('p_select','prod_rej')
?};
P.cntx_pop();
OSOBA.cntx_pop();
_result


\voper_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku 'Ok' w panelu edycyjnym
::----------------------------------------------------------------------------------------------------------------------
PROD_REJ.f_seek(VPRODREJ.PROD_REJ);
set_cpos(1);
~~


\voper_prev
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku 'poprzednia operacja' w panelu edycyjnym
::----------------------------------------------------------------------------------------------------------------------
{? PROD_REJ.f_prev()
|| VPRODREJ.PROD_REJ:=PROD_REJ.ref();
   VPRODREJ.OPER:=VPRODREJ.PROD_REJ().OPER;
   win_disp();
   set_cpos(1)
?};
~~


\voper_next
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku 'nastepna operacja' w panelu edycyjnym
::----------------------------------------------------------------------------------------------------------------------
{? PROD_REJ.f_next()
|| VPRODREJ.PROD_REJ:=PROD_REJ.ref();
   VPRODREJ.OPER:=VPRODREJ.PROD_REJ().OPER;
   win_disp();
   set_cpos(1)
?};
~~


\numpad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przyciskow numerycznych w panelu do wprowadzania danych
::   WE: _a - numer przycisku
::----------------------------------------------------------------------------------------------------------------------
VPRODREJ.IL:=_a;
''


\numpad_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przyciku 'backcpace' w panelu do wprowadzania danych
::----------------------------------------------------------------------------------------------------------------------
VPRODREJ.IL:=0;
''


\numpad_dot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku '.' w panelu do wprowadzania danych
::----------------------------------------------------------------------------------------------------------------------
VPRODREJ.IL:=10*VPRODREJ.IL;
''


\numpad_plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku 'Ilosc planowana' w panelu do wprowadzania danych
::----------------------------------------------------------------------------------------------------------------------
VPRODREJ.IL:=VPRODREJ.PROD_REJ().IL;
''


\vp_btn_procent
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku 'PROCENT' w formatce do wpisywania wykonania
::----------------------------------------------------------------------------------------------------------------------
VPRODREJ.EDIT_PR:=1;
VPRODREJ.EDIT_IL:=1;
win_disp();
'edit:PROCENT'


\vp_btn_resetil
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku 'RESET_IL' w formatce do wpisywania wykonania
::----------------------------------------------------------------------------------------------------------------------
VPRODREJ.EDIT_PR:=0;
VPRODREJ.EDIT_IL:=1;
VPRODREJ.IL:=VPRODREJ.PROD_REJ().IL;
win_disp();
'edit:IL'


\vp_btn_resetild
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku 'RESET_ILD' w formatce do wpisywania wykonania
::----------------------------------------------------------------------------------------------------------------------
VPRODREJ.EDIT_PR:=0;
VPRODREJ.EDIT_IL:=1;
VPRODREJ.IL:=VPRODREJ.IL_DOREJ;
win_disp();
'edit:IL'


\vp_btn_resetilc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku 'RESET_ILC' w formatce do wpisywania wykonania
::----------------------------------------------------------------------------------------------------------------------
VPRODREJ.EDIT_PR:=0;
VPRODREJ.EDIT_IL:=1;
VPRODREJ.IL:=VPRODREJ.PROD_REJ().ILC;
win_disp();
'edit:IL'


\vp_btn_ilosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsluga przycisku 'ILOSC' w formatce do wpisywania wykonania
::----------------------------------------------------------------------------------------------------------------------
VPRODREJ.EDIT_PR:=0;
VPRODREJ.EDIT_IL:=1;
win_disp();
'edit:IL'


\vp_btn_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obluga przycisku 'END' w formatce do wpisywania wykonania
::----------------------------------------------------------------------------------------------------------------------
VPRODREJ.OK:='T';
'key:F2'


\vprodrej_fill
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Wyznaczenie ilosci maksymalnej mozliwej do zarejestrowania na podstawie poprzednikow operacji - VPRODREJ.IL_POP
::       Kontekst: biezacy rekord PROD_REJ
::----------------------------------------------------------------------------------------------------------------------
PROD_REJ.cntx_psh();

{? PROD_REJ.SRODZ='ZL'
||
:: W przypadku rejestracji do zlecen - minimum z poprzednikow (bezposrednio z przewodnika)
:: Dla pierwszej operacji (bez poprzednika) o ile parametr 500634 ma wartość T - ZGP.ILOSC
   {? PROD_REJ.ZGP<>null()
   || _il:=exec('il_pop','zl_guide',PROD_REJ.ZGP);
      {? exec('get','#params',500634)='T' & _il.FIRST
      || VPRODREJ.IL_POP:=PROD_REJ.ZGP().ILOSC;
         VPRODREJ.MAX:=1
      || VPRODREJ.IL_POP:=_il.IL_POP;
         VPRODREJ.MAX:=_il.MAX
      ?}
   || VPRODREJ.IL_POP:=0;
      VPRODREJ.MAX:=0
   ?}
|? PROD_REJ.SRODZ='PL'
||
:: W przypadku rejestracji do planu operacyjnego - minimum z poprzednikow (bezposrednio z planu)
   _il:=exec('il_pop','po_wyk',PROD_REJ.ref());
   VPRODREJ.IL_POP:=_il.IL_POP;
   VPRODREJ.MAX:=_il.MAX
||
:: W przypadku rejestracji do planu strategicznego - suma z poprzednikow (bezposrednio z planu)
   _il:=exec('il_pop','px_wyk',PROD_REJ.ref());
   VPRODREJ.IL_POP:=_il.IL_POP;
   VPRODREJ.MAX:=_il.MAX
?};

PROD_REJ.cntx_pop();
:: Zaokraglenie zawsze w dol wg dokladnosci rejestrowanego produktu
_round:=roundmet(); roundmet(1);
VPRODREJ.IL_POP:=VPRODREJ.IL_POP$PROD_REJ.M().DOKL;
roundmet(_round);
:: robocze na wypadek debugowania
:: FUN.info('poprzednio zarejestrowano: %1\nblokować: %2'@[$VPRODREJ.IL_POP,$VPRODREJ.MAX]);
~~


\grayed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.20]
:: OPIS: Stan akcji w oknie rejestracji wykonań - wyszarzenie akcji w zależności od zadanych parametrów
::   WE: [_a] - akronim okna wertowania
::  OLD: \btn_state/prod_rej.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') || _wer:=_a || _wer:=cur_win(1,1) ?};

_grayed:=':';

:: Tablica funkcji dostępnych w poszczególnych obszarach oraz dla pustej dziedziny
VAR_DEL.delete('__Tab');
__Tab:=obj_new('ZL','PL','PX','EMPTY');
{! _it:=1..4
|! __Tab[_it]:=obj_new(
      'NAWIG',
      'FILTER',
      'START',
      'STOP',
      'WYKON',
      'XWYKON',
      'PROB',
      'XPROB',
      'DOC',
      'MAT',
      'PRAC',
      'BRYG',
      'REJ',
      'POTW',
      'XPOTW',
      'NPU',
      'SEND',
      'LIMITY',
      'NIELIMITY',
      'SUROWCE',
      'PARTIE',
      'GENDOK',
      'PLANGROP'
   )
!};
__Tab.ZL.NAWIG:=1;  __Tab.PL.NAWIG:=1;  __Tab.PX.NAWIG:=1;  __Tab.EMPTY.NAWIG:=1;
__Tab.ZL.FILTER:=1; __Tab.PL.FILTER:=1; __Tab.PX.FILTER:=1; __Tab.EMPTY.FILTER:=1;
__Tab.ZL.START:=0;  __Tab.PL.START:=1;  __Tab.PX.START:=0;  __Tab.EMPTY.START:=0;
__Tab.ZL.STOP:=0;   __Tab.PL.STOP:=1;   __Tab.PX.STOP:=0;   __Tab.EMPTY.STOP:=0;
__Tab.ZL.WYKON:=1;  __Tab.PL.WYKON:=1;  __Tab.PX.WYKON:=1;  __Tab.EMPTY.WYKON:=0;
__Tab.ZL.XWYKON:=0; __Tab.PL.XWYKON:=1; __Tab.PX.XWYKON:=0; __Tab.EMPTY.XWYKON:=0;
__Tab.ZL.PROB:=1;   __Tab.PL.PROB:=1;   __Tab.PX.PROB:=0;   __Tab.EMPTY.PROB:=0;
__Tab.ZL.XPROB:=1;  __Tab.PL.XPROB:=1;  __Tab.PX.XPROB:=0;  __Tab.EMPTY.XPROB:=0;
__Tab.ZL.DOC:=1;    __Tab.PL.DOC:=1;    __Tab.PX.DOC:=0;    __Tab.EMPTY.DOC:=0;
__Tab.ZL.MAT:=1;    __Tab.PL.MAT:=1;    __Tab.PX.MAT:=0;    __Tab.EMPTY.MAT:=0;
__Tab.ZL.PRAC:=1;   __Tab.PL.PRAC:=0;   __Tab.PX.PRAC:=0;   __Tab.EMPTY.PRAC:=0;
__Tab.ZL.BRYG:=1;   __Tab.PL.BRYG:=0;   __Tab.PX.BRYG:=0;   __Tab.EMPTY.BRYG:=0;
__Tab.ZL.REJ:=1;    __Tab.PL.REJ:=1;    __Tab.PX.REJ:=1;    __Tab.EMPTY.REJ:=0;
__Tab.ZL.POTW:=1;   __Tab.PL.POTW:=1;   __Tab.PX.POTW:=0;   __Tab.EMPTY.POTW:=0;
__Tab.ZL.XPOTW:=1;  __Tab.PL.XPOTW:=1;  __Tab.PX.XPOTW:=0;  __Tab.EMPTY.XPOTW:=0;
__Tab.ZL.NPU:=1;    __Tab.PL.NPU:=1;    __Tab.PX.NPU:=0;    __Tab.EMPTY.NPU:=0;
__Tab.ZL.SEND:=1;   __Tab.PL.SEND:=1;   __Tab.PX.SEND:=1;   __Tab.EMPTY.SEND:=1;

__Tab.ZL.LIMITY:=1;   __Tab.PL.LIMITY:=1;   __Tab.PX.LIMITY:=0;   __Tab.EMPTY.LIMITY:=0;
__Tab.ZL.SUROWCE:=1;  __Tab.PL.SUROWCE:=1;  __Tab.PX.SUROWCE:=0;  __Tab.EMPTY.SUROWCE:=0;
__Tab.ZL.NIELIMITY:=1;__Tab.PL.NIELIMITY:=1;__Tab.PX.NIELIMITY:=0;__Tab.EMPTY.NIELIMITY:=0;
__Tab.ZL.PARTIE:=1;   __Tab.PL.PARTIE:=1;   __Tab.PX.PARTIE:=0;   __Tab.EMPTY.PARTIE:=0;
__Tab.ZL.GENDOK:=1;   __Tab.PL.GENDOK:=0;   __Tab.PX.GENDOK:=0;   __Tab.EMPTY.GENDOK:=0;
__Tab.ZL.PLANGROP:=1; __Tab.PL.PLANGROP:=0; __Tab.PX.PLANGROP:=0; __Tab.EMPTY.PLANGROP:=0;

_fun:=($('__Tab.'+{? PROD_REJ.SRODZ='' || 'EMPTY' || PROD_REJ.SRODZ ?}))();

{? _fun.NAWIG
|| {? ~ProdRej.F_NAWIG
   || _grayed:='WN'+_grayed+'WN'
   ?}
|| _grayed:='WN'+_grayed+'WN'
?};

{? _fun.FILTER
|| {? ~ProdRej.F_FILTER
   || _grayed:='F'+_grayed+'F'
   ?}
|| _grayed:='F'+_grayed+'F'
?};

{? _fun.START
|| {? ~ProdRej.F_START
   || _grayed:='T'+_grayed
   ?}
|| _grayed:='T'+_grayed
?};

{? _fun.STOP
|| {? ~ProdRej.F_STOP
   || _grayed:='C'+_grayed
   ?}
|| _grayed:='C'+_grayed
?};

{? _fun.WYKON
|| {? ~ProdRej.F_WYKON
   || _grayed:='O'+_grayed
   ?}
|| _grayed:='O'+_grayed
?};

{? _fun.XWYKON
|| {? ~ProdRej.F_XWYKON
   || _grayed:='Y'+_grayed
   ?}
|| _grayed:='Y'+_grayed
?};

{? _fun.PROB
|| {? ~ProdRej.F_PROB
::   | PROD_REJ.PROBLEM='T'
   || _grayed:='M(Z)'+_grayed
   ?}
|| _grayed:='M(Z)'+_grayed
?};

{? _fun.XPROB
|| {? ~ProdRej.F_XPROB | PROD_REJ.PROBLEM='N'
   || _grayed:='M(R)'+_grayed
   ?}
|| _grayed:='M(R)'+_grayed
?};

{? _fun.DOC
|| {? ~ProdRej.F_DOC
   || _grayed:='D(D)'+_grayed
   ?}
|| _grayed:='D(D)'+_grayed
?};

{? _fun.MAT
|| {? ~ProdRej.F_MAT | PROD_REJ.GROP<>null()
   || _grayed:='D(M)'+_grayed
   ?}
|| _grayed:='D(M)'+_grayed
?};

{? _fun.NPU
|| {? ~ProdRej.F_NPU | PROD_REJ.GROP<>null()
   || _grayed:='D(N)'+_grayed
   ?}
|| _grayed:='D(N)'+_grayed
?};

{? _fun.PRAC
|| {? ~ProdRej.F_PRAC | PROD_REJ.ZGP().BRYG='T' | PROD_REJ.KOOP='T' | PROD_REJ.GROP<>null()
   || _grayed:='P'+_grayed
   ?}
|| _grayed:='P'+_grayed
?};

{? _fun.BRYG
|| {? ~ProdRej.F_BRYG | PROD_REJ.ZGP().BRYG='N' | PROD_REJ.KOOP='T' | PROD_REJ.GROP<>null()
   || _grayed:='B'+_grayed
   ?}
|| _grayed:='B'+_grayed
?};

{? _fun.REJ
|| {? ~ProdRej.F_REJ
   || _grayed:='R(S)'+_grayed
   ?}
|| _grayed:='R(S)'+_grayed
?};

{? _fun.POTW
|| {? ~ProdRej.F_POTW | PROD_REJ.GROP=null() | PROD_REJ.POTW='T'
   || _grayed:='I'+_grayed
   ?}
|| _grayed:='I'+_grayed
?};

{? _fun.XPOTW
|| {? ~ProdRej.F_XPOTW | PROD_REJ.GROP=null() | PROD_REJ.POTW='N'
   || _grayed:='U'+_grayed
   ?}
|| _grayed:='U'+_grayed
?};

{? _fun.SEND
|| {? ~ProdRej.F_SEND
   || _grayed:='Ł'+_grayed+'Ł'
   ?}
|| _grayed:='Ł'+_grayed+'Ł'
?};

{? _fun.LIMITY
|| {? PROD_REJ.GROP<>null()
   || _grayed:='D(Y)'+_grayed
   ?}
|| _grayed:='D(Y)'+_grayed
?};

{? _fun.NIELIMITY
|| {? PROD_REJ.GROP<>null()
   || _grayed:='D(W)'+_grayed
   ?}
|| _grayed:='D(W)'+_grayed
?};

{? _fun.SUROWCE
|| {? PROD_REJ.GROP<>null()
   || _grayed:='D(B)'+_grayed
   ?}
|| _grayed:='D(B)'+_grayed
?};

{? _fun.PARTIE
|| {? exec('zl_party_menu','zl_partie',PROD_REJ.ZL)=0 | PROD_REJ.GROP<>null()
   || _grayed:='D(T)'+_grayed
   ?}
|| _grayed:='D(T)'+_grayed
?};

{? _fun.GENDOK & PROD_REJ.ZGP<>null()
|| _warsztat:=exec('czy_zlec_warszt','ekioski',PROD_REJ.ZGP);
   {? _warsztat='T'
   || _grayed:='R(AD)'+_grayed
   ?}
|| _grayed:='R(AD)'+_grayed
?};

{? _fun.PLANGROP
|| {? PROD_REJ.GROP=null()
   || _grayed:='R(G)'+_grayed
   ?}
|| _grayed:='R(G)'+_grayed
?};
:: akcja Etykieta
{? ~exec('isDEFetyk','magazyn_mobi','PROD_REJ')
|| _grayed:='Q'+_grayed
?};
:: Akcja Zmiana sposobu rejestracji
{? PROD_REJ.KOOP='T' | PROD_REJ.GROP<>null()
|| _grayed:='R(P)'+_grayed
?};

VAR_DEL.delete('__Tab');

PROD_REJ.actions_grayed(_wer,_grayed);
~~


\in_prod_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Określa, czy jestem wewnątrz modułu rejestracji wykonań
::   WY: 0 / 1
::----------------------------------------------------------------------------------------------------------------------
var_pres('ProdRej')>100


\filter_clear
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Czysci pola filtra
::----------------------------------------------------------------------------------------------------------------------
FILTER.PR_DATA:=date(0,0,0);
FILTER.PR_WYD:=null();
FILTER.PR_ODD:=date(0,0,0);
FILTER.PR_ODT:=time(0,0,0);
FILTER.PR_DOD:=date(0,0,0);
FILTER.PR_DOT:=time(0,0,0);
FILTER.PR_RESS:='';
FILTER.PR_RESN:='';
FILTER.PR_MKTM:='';
FILTER.PR_MN:='';
FILTER.PR_OPIS:='';
FILTER.PR_P:=null();
FILTER.PR_ZLBR:=null();
FILTER.PR_KH:=null();
FILTER.PR_GROP:='';
~~


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Ustawienie parametru sesji w obszarze roboczym TTE_WYK
::----------------------------------------------------------------------------------------------------------------------
::__PARSES.editDom('TTE');
__PARSES.editPar('OkresRok','Magazyn','WydzialProd');
{? ~params_get().args.PROCES || AreaTitle.setTitle() ?};
~~


\vprodrej_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Opcje pól VPRODREJ
::----------------------------------------------------------------------------------------------------------------------
VPRODREJ.efld_opt('ZL_WYK',
   {? VPRODREJ.IL<>0 & VPRODREJ.IL_BRAK=0 | VPRODREJ.IL=0 & VPRODREJ.IL_BRAK=0 | VPRODREJ.IL<>0 & VPRODREJ.IL_BRAK<>0
   || 'mark=1'
   || 'mark=0'
   ?},,'IL');
VPRODREJ.efld_opt('ZL_WYK',
   {? VPRODREJ.IL=0 & VPRODREJ.IL_BRAK<>0 | VPRODREJ.IL=0 & VPRODREJ.IL_BRAK=0 | VPRODREJ.IL<>0 & VPRODREJ.IL_BRAK<>0
   || 'mark=1'
   || 'mark=0'
   ?},,'IL_BRAK');
_braki_r_mark:='mark=0';
{? VPRODREJ.IL_BRAK>0 & exec('get','#params',500635,2)='T'
|| _braki_r_mark:='mark=1'
?};
VPRODREJ.efld_opt('ZL_WYK',_braki_r_mark,,'BRAKI_R');
VPRODREJ.efld_opt('ZL_WYK_L',_braki_r_mark,,'BRAKI_R');
VPRODREJ.efld_opt('ZL_WYR',_braki_r_mark,,'BRAKI_R');
{? VAR1.ZAK_EK='T'
|| VPRODREJ.efld_opt(VPRODREJ.win_edit('?'),_braki_r_mark,,'BRAKI_R')
?};
~~


\zakres_pracownikow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Redagowanie zakresu widoczności pracowników w module rejestracji wykonań
::----------------------------------------------------------------------------------------------------------------------
_p8771:=exec('get','#params',8771,2,OPERATOR.USER);
_value:=exec('zakres_pracownikow_core','prod_rej',_p8771);
exec('set','#params',8771,_value,OPERATOR.USER);
~~


\zakres_pracownikow_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Zasadnicza część formuły redagowania zakresu widoczności pracowników
::   WE: _a - zakres przed redakcją
::   WY: zakres po redakcji
::----------------------------------------------------------------------------------------------------------------------
_view:=1+_a;
_jorg:=_a+1;

_result:=_a;

_tab:=tab_tmp(,
   'VIEW','STRING[1]','Prezentowane osoby'@,
   'JORG','STRING[1]','Jednostki organizacyjne'@
);

_red:=_tab.mk_edit('Zakres pracowników'@,,'p8771');
_tab.win_esep(_red,'Prezentowane osoby'@);
_tab.win_efld(_red,_tab,'VIEW',,,,,,' ',,,'radio-buttons',,
            'Zatrudnieni / aktywni'@,"'T'",
            'Zwolnieni / archiwalni'@,"'N'",
            'Wszyscy'@,"'W'"
);
_tab.win_esep(_red,'Jednostki organizacyjne'@);
_tab.win_efld(_red,_tab,'JORG',,,,,,' ',,,'radio-buttons',,
            'Wybrany wydział'@,"'W'",
            'Wszystkie jednostki'@,"'A'"
);
exec('ok_esc','#window',_tab,_red);
_tab.win_edit(_red);

_tab.VIEW:=_view;
_tab.JORG:=_jorg;
{? _tab.edit()
|| _result:=_tab.VIEW+_tab.JORG
?};

_result


\get_zgp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.14]
:: OPIS: Z aktualnego PROD_REJa wyciąga ZGPa
::   WY: ZGP.ref lub null()
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
PL_OPER.cntx_psh();
PX_POZ.cntx_psh();
PX_STAGE.cntx_psh();
{? PROD_REJ.ZGP<>null()
|| _result:=PROD_REJ.ZGP
?};
{? _result=null() & PROD_REJ.PL_OPER<>null()
|| PROD_REJ.PL_OPER();
   {? PL_OPER.ZGP<>null()
   || _result:=PL_OPER.ZGP
   ?}
?};
{? _result=null() & PROD_REJ.PX_POZ<>null()
|| {? PROD_REJ.PX_POZ().PX_STAGE<>null
   || ZGP.cntx_psh();
      ZGP.index('PX_STAGE');
      ZGP.prefix(PX_POZ.PX_STAGE);
      {? ZGP.first()
      || _result:=ZGP.ref()
      ?};
      ZGP.cntx_pop()
   ?}
?};
PL_OPER.cntx_pop();
PX_POZ.cntx_pop();
PX_STAGE.cntx_pop();
_result


\problem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.14]
:: OPIS: Zgłoszenie problemu do pozycji przewodnika / pozycji planu
::   WE: _tab.ref() (odpowiednio dla tabeli ZGP, PL_OPER, PX_POZ, GROP)
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_tab:=ref_tab(_ref);

_tab.cntx_psh();
_tab.clear();
:: Odnalezienie źródłowego ZGP, GROP, PL_OPER, PX_POZ, GROP
{? _tab.seek(_ref)
|| {? _tab.PROBLEM='T'
   || _dalej:=FUN.ask('Do operacji już zgłoszono problem, czy zgłosić kolejny?'@)
   || _dalej:=1
   ?};
   {? _dalej
   || EK_SLOP.index('KOD');
      EK_SLOP.prefix();
      EK_SLOP.win_sel(exec('win_problemy_slo','prod_rej'));
      {? EK_SLOP.select()
      || {? exec('simple_problem','zl_wkj')
         || exec('problem_add','prod_rej',EK_SLOP.ref())
         || _buttons:=obj_new(1);
            _formula:="
               _tab:=cur_tab(1,1);
               _desc:=exec('problem_desc','zl_wkj','Z');
               {? type_of(_desc)=type_of('')
               || _tab.memo_set(_desc,'MEMO')
               ?};
               ''
            ";
            _buttons[1]:=exec('obj_ntab_set','#array',,'NAME','Podpowiedź'@,'RULE',_formula);
            _desc:=exec('edit_memo','#edit',,'Opis zgłoszenia problemu'@,,,,,,,_buttons);
            {? type_of(_desc)=type_of('')
            || exec('problem_add','prod_rej',EK_SLOP.ref(),_desc)
            ?}
         ?}
      ?}
   ?}
?};
_tab.cntx_pop();
~~


\xproblem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.14]
:: OPIS: Rozwiązanie problemu do pozycji przewodnika / pozycji planu
::   WE: _tab.ref() (odpowiednio dla tabeli ZGP, PL_OPER, PX_POZ, GROP)
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_tab:=ref_tab(_ref);

_tab.cntx_psh();
_tab.clear();
:: Odnalezienie źródłowego ZGH, ZGP, GROP, PL_OPER, PX_POZ
{? _tab.seek(_ref)
|| {? _tab.PROBLEM='N'
   || FUN.info('Nie zarejestrowano problemu.'@)
   || exec('prob_sel','prod_rej',
         {? _tab=ZGH | _tab=ZGP | _tab=GROP || 'ZL' |? _tab=PL_OPER || 'PL' |? _tab=PX_POZ || 'PX' || '__' ?},_ref
      )
   ?}
?};
_tab.cntx_pop();
~~


\trig_ek_prob_ab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Trigger tabeli EK_PROB (przed add)
::   WY: 0/1
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
exec('ek_prob_trig_b','prod_rej','add')


\trig_ek_prob_aa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Trigger tabeli EK_PROB (po add)
::   WY: 0/1
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
exec('ek_prob_trig_a','prod_rej','add')


\trig_ek_prob_pa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Trigger tabeli EK_PROB (po put)
::   WY: 0/1
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
exec('ek_prob_trig_a','prod_rej','put')


\trig_ek_prob_da
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Trigger tabeli EK_PROB (po del)
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
exec('ek_prob_trig_a','prod_rej','del')


\ek_prob_trig_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SZP [12.46]
:: OPIS: Trigger Before (Przed) dla tabeli EK_PROB
::   WY: Zgodny ze specyfikacją MacroBASE
::  OLD: \ek_prob_trig_b/ekioski.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? _a='add'
|| {? EK_PROB.ZGP<>null()
   || EK_PROB.SQLSRC:=$EK_PROB.ZGP

   |? EK_PROB.GROP<>null()
   || EK_PROB.SQLSRC:=$EK_PROB.GROP

   |? EK_PROB.PX_POZ<>null()
   || EK_PROB.SQLSRC:=$EK_PROB.PX_POZ

   |? EK_PROB.PL_OPER<>null()
   || EK_PROB.SQLSRC:=$EK_PROB.PL_OPER
   ?}
?};
_res


\ek_prob_trig_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SZP [12.46]
:: OPIS: Trigger After (Po) dla tabeli EK_PROB
::   WY: zgodny ze specyfikacją MacroBASE
::  OLD: \ek_prob_trig_a/ekioski.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=~~;
{? _a='put' | _a='del' | _a='add'
||
   _zgp:={? _a='add' || EK_PROB.ZGP || bfld('ZGP') ?};
   _grop:={? _a='add' || EK_PROB.GROP || bfld('GROP') ?};
   _px_poz:={? _a='add' || EK_PROB.PX_POZ || bfld('PX_POZ') ?};
   _pl_oper:={? _a='add' || EK_PROB.PL_OPER || bfld('PL_OPER') ?};

   {? _zgp<>null()
   || _problem:=exec('max_problem','zl_wkj',$_zgp);
      ZGP.cntx_psh();
      ZGP.prefix();
      {? ZGP.seek(_zgp)
      || ZGP.PROBLEM:=_problem[1];
         ZGP.PROBKLAS:=_problem[2];
         ZGP.put()
      ?};
      ZGP.cntx_pop()

   |? _grop<>null()
   || _problem:=exec('max_problem','zl_wkj',$_grop);
      GROP.cntx_psh();
      GROP.prefix();
      {? GROP.seek(_grop)
      || GROP.PROBLEM:=_problem[1];
         GROP.PROBKLAS:=_problem[2];
         GROP.put()
      ?};
      GROP.cntx_pop()

   |? _px_poz<>null()
   || _problem:=exec('max_problem','zl_wkj',$_px_poz);
      PX_POZ.cntx_psh();
      PX_POZ.prefix();
      {? PX_POZ.seek(_px_poz)
      || PX_POZ.PROBLEM:=_problem[1];
         PX_POZ.PROBKLAS:=_problrm[2];
         PX_POZ.put()
      ?};
      PX_POZ.cntx_pop()

   |? _pl_oper<>null()
   || _problem:=exec('max_problem','zl_wkj',$_pl_oper);
      PL_OPER.cntx_psh();
      PL_OPER.prefix();
      {? PL_OPER.seek(_pl_oper)
      || PL_OPER.PROBLEM:=_problem[1];
         PL_OPER.PROBKLAS:=_problem[2];
         PL_OPER.put()
      ?};
      PL_OPER.cntx_pop()

   ?}
?};
_wyn


\win_problemy_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SZP [12.46]
:: OPIS: Tworzy okno wertowania EK_SLOP
::   WY: STRING - uchwyt do okna
::  OLD: \win_problemy_slo/ekioski.fml
::----------------------------------------------------------------------------------------------------------------------
_wer:=EK_SLOP.mk_sel('Problemy produkcyjne'@,'P',0,'ek_slop',,,15,,'U');
EK_SLOP.win_fld(_wer,,'KOD',,,10,,,'Kod'@);
EK_SLOP.win_fld(_wer,,'NAZ',,,50,,,'Nazwa'@);
EK_SLOP.win_fld(_wer,,'KLASA',,,25,,,'Klasa'@);
EK_SLOP.win_act(_wer,,'Formuła','Wybierz'@@,,,{? VEK.TERM='T' || "exec('rec_ten','ekioski')" || "sel_exit()" ?},,1);
EK_SLOP.win_act(_wer,,'Kolejność');
_formikon:="
   {? EK_SLOP.KLASA=exec('prob_class_information','zl_wkj')
   || exec('problem_information','icon')
   |? EK_SLOP.KLASA=exec('prob_class_suspensing','zl_wkj')
   || exec('problem_suspensing','icon')
   |? EK_SLOP.KLASA=exec('prob_class_blocking','zl_wkj')
   || exec('problem_blocking','icon')
   || exec('pusta','#icon')
   ?}
";
EK_SLOP.win_fml(_wer,,'KLASA',,'ICON_BEFORE',_formikon);
EK_SLOP.win_sel(_wer);
_wer


\problem_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SZP [12.46]
:: OPIS: Dodaje problem
::   WE: _a - EK_SLOP.ref() - problem wybrany ze słownika
::       [_b] - dodatkowy opis problemu
::       Kontekst wywołania - rekord PROD_REJ
::   WY: 1/0
::  OLD: \problem_add/ekioski.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:='TTE_WKJ_DPRO';
_args.AKCJA:='DOŁĄCZ';
_args.PROC_START:='T';
_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
_args.CONTEXT:=obj_new('PROD_REJ','EK_SLOP','DESC','RESULT');
   _args.CONTEXT.PROD_REJ:=PROD_REJ.ref();
   _args.CONTEXT.EK_SLOP:=_a;
   _args.CONTEXT.DESC:={? var_pres('_b')=type_of('') || _desc:=_b || _desc:='' ?};
   _args.CONTEXT.RESULT:=0;

exec('mp_run','#b__box',_args);

_result:=_args.CONTEXT.RESULT;
_result


\prob_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SZP [12.46]
:: OPIS: Selekcja problemów
::   WE: [_a] - rodzaj rekordu (ZL, PL, PX)
::       [_b] - .ref() rekordu, do którego przypisany problem
::  OLD: \prob_sel/ekioski.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('upr_xproblem','zl_wkj')
|| {? _>0
   || exec('lst_prob','prod_rej',_a,_b)
   || exec('lst_prob','prod_rej')
   ?}
|| FUN.info('Brak uprawnień do rozwiązywania problemów.'@)
?};
~~


\prob_sel_zl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Selekcja problemów dla zlecenia/przewodnika (działa na VAR.A_ZLEC lub VAR.A_NRPRZ)
::   WE: [_a] - INTEGER - kontekst wywołania: [1] - zlecenie, 0 - przewodnik
::----------------------------------------------------------------------------------------------------------------------
_mode:={? var_pres('_a')=type_of(0) || _a || 1 ?};
VAR.cntx_psh();
ZGH.cntx_psh();
{? _mode=0
|| VAR.A_ZLEC:=VAR.A_NRPRZ().ZLEC;
   VAR.EK_PROBT:='ZGH'
|| VAR.EK_PROBT:='ZL'
?};
EK_PROB.cntx_psh();
EK_PROB.prefix();
exec('prob_sel','prod_rej');
EK_PROB.f_clear(1);
EK_PROB.cntx_pop();
ZGH.cntx_pop();
VAR.cntx_pop();
~~


\lst_prob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SZP [12.46]
:: OPIS: Lista problemów do rozwiązania
::   WE: [_a] - rodzaj rekordu (ZL, PL, PX)
::       [_b] - .ref() rekordu, do którego przypisany problem
::  OLD: \lst_prob/ekioski.fml
::----------------------------------------------------------------------------------------------------------------------
EK_PROB.cntx_psh();
{? VAR.EK_PROBT='ZL' | VAR.EK_PROBT='ZGH' || ZAKR.S:='' || ZAKR.S:='T' ?};

{? _>0
|| _wer:={? VAR.EK_PROBT='ZL' | VAR.EK_PROBT='ZGH'
         || 'WER'
         |? VEK.TERM='T'
         || exec('win_problemy','ekioski',0)
         || exec('win_problemy','prod_rej',0)
         ?};
   EK_PROB.win_sel(_wer);
   EK_PROB.hdr_sel();
   {? VAR.EK_PROBT='ZL' | VAR.EK_PROBT='ZGH'
   || exec('prob_f_set','prod_rej');
      EK_PROB.f_first()
   || {? _a='ZL'
      || {? ref_tab(_b)=ZGP
         || EK_PROB.hdr_sel(' — '+'pozycja przewodnika'@);
            EK_PROB.index('ZGP');
            EK_PROB.prefix(ZAKR.S,_b)
         |? ref_tab(_b)=ZGH
         || EK_PROB.hdr_sel(' — '+'przewodnik'@);
            EK_PROB.index('ZGH');
            EK_PROB.prefix(ZAKR.S,_b)
         || EK_PROB.hdr_sel(' — '+'grupa operacji'@);
            EK_PROB.index('GROP');
            EK_PROB.prefix(ZAKR.S,_b)
         ?}
      |? _a='PL'
      || EK_PROB.index('PL_OPER');
         EK_PROB.prefix(ZAKR.S,_b)
      |? _a='PX'
      || EK_PROB.index('PX_POZ');
         EK_PROB.prefix(ZAKR.S,_b)
      || EK_PROB.index('PROB3');
         EK_PROB.prefix(ZAKR.S)
      ?};
      EK_PROB.first()
   ?}

|| _wer:={? VAR.EK_PROBT='ZL' | VAR.EK_PROBT='ZGH'
         || 'WER'
         |? VEK.TERM='T'
         || exec('win_problemy','ekioski',1)
         || exec('win_problemy','prod_rej',1)
         ?};
   EK_PROB.win_sel(_wer);
   {? VAR.EK_PROBT='ZL' | VAR.EK_PROBT='ZGH'
   || exec('prob_f_set','prod_rej');
      EK_PROB.f_first()
   || EK_PROB.index('PROB3');
      EK_PROB.prefix(ZAKR.S);
      EK_PROB.first()
   ?}
?};
{? VEK.TERM='T'
|| eLevel.up(EK_PROB,eSelect.wer_prob,'ROZW_PROB',
      "params_exec('problem_display','ekioski')",
      "params_exec('prob_zakr','prod_rej'); grp_disp(EK_PROB,eSelect.wer_prob,0,1); ~~"
   )
?};

EK_PROB.select(,1,10);

{? VEK.TERM='T'
|| eLevel.down()
?};

EK_PROB.cntx_pop();
~~


\win_problemy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.14]
:: OPIS: Tworzy okno wertowania EK_PROB
::   WE: [_a] - sposób wywołania: 0 - dla konkretnego rekordu, 1 - dla wszystkich rekordów
::   WY: STRING - uchwyt do okna
::----------------------------------------------------------------------------------------------------------------------
_all:=_a;

_wer:=EK_PROB.mk_sel('Problemy'@,'P',0,'id_proroblem'+(-VEK.TERM),,,25,,{? VEK.TERM='T' || 'P' || 'U' ?});

EK_PROB.win_fld(_wer,VEK,'OPER',,,18,,,'Operacja'@);
EK_PROB.win_fld(_wer,,'ZL','SYM',,15,,,'Zlecenie'@);
EK_PROB.win_fld(_wer,ZL,'KTM','KTM',,15,,,'Detal'@);
EK_PROB.win_fld(_wer,,'ZGP','NRP',,-3,,,'Nr'@);
EK_PROB.win_fld(_wer,ZGP,'PLACE','KOD',,-10,,,'Stanowisko'@);
EK_PROB.win_fld(_wer,VAR,'STRING',,,22,,,'Zgłosił'@);
EK_PROB.win_fld(_wer,,'EK_SLOP','NAZ',,10,,,'Problem'@);
EK_PROB.win_act(_wer,,'Formuła','&Rozwiąż problem'@@,,,"exec('roz_prob','prod_rej')",,1,,,,'R');
EK_PROB.win_act(_wer,,'Formuła','Zgłoszenie r&emontowe'@@,,,"exec('gen_rem_zgl','zl_wkj')",,,,,,'E');
task_attach('TRE_ZGL_DZGL');
{? _all || EK_PROB.win_act(_wer,0,'Formuła','&Zakres'@@,,,"exec('prob_zakr','prod_rej')",,,,,,'Z') ?};
EK_PROB.win_act(_wer,,'Rekord',,,,"exec('prob_rek','prod_rej')",,1);
EK_PROB.win_act(_wer,,'Kolejność');
EK_PROB.win_act(_wer,,'Formuła','Legenda'@@,,,"exec('legenda_prob','zl_wkj')",,,,,,'L');
EK_PROB.win_act(_wer,,'Wyświetl',,,,"exec('problem_display','zl_wkj')");
EK_PROB.win_fml(_wer,,'EK_SLOP','NAZ','ICON_BEFORE',"exec('ikon_prob','zl_wkj')");
_wer


\prob_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SZP [12.46]
:: OPIS: Rekord przed EK_PROB - ustawia zmienne i mozna ustawic ewentualnie kolorowanie
::   WE: [_a] - INTEGER - 0/[1] - czy odrysowanie ostatniego rekordu
::   WY: '' lub kolor
::  OLD: \prob_rek/ekioski.fml
::----------------------------------------------------------------------------------------------------------------------
_lastdraw:=1;
{? var_pres('_a')=type_of(0)
|| _lastdraw:=_a
?};

VAR.STRING:='%1 %2'[EK_PROB.ZGL_US().OSOBA().NAZWISKO,OSOBA.PIERWSZE];
VAR.STRING2:='%1 %2'[EK_PROB.ROZ_US().OSOBA().NAZWISKO,OSOBA.PIERWSZE];

:: Wyszarzanie akcji
_grayed:='';
{? _lastdraw>0
|| {? EK_PROB.PROBLEM='R'
   || _grayed:='R'+_grayed
   ?};
   EK_PROB.actions_grayed(cur_win(1,1),_grayed)
?};
_wyn:='';
::{? _lastdraw>0
::|| exec('set_var_a','ekioski',EK_PROB.ZGP)
::?};

:: Kolorowanie rekordow
exec('rekprzed','color','EK_PROB#01#01')


\prob_zakr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SZP [12.46]
:: OPIS: Zakres widoku problemów
::  OLD: \prob_zakr/ekioski.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAKR.S='T' || _default:=1
|? ZAKR.S='R' || _default:=2
              || _default:=3
?};
_choice:=FUN.choice('Zakres widoku listy problemów.'@,_default,'Zgłoszone'@,'Rozwiązane'@,'Wszystkie'@);

{? _choice=1 || ZAKR.S:='T'
|? _choice=2 || ZAKR.S:='R'
|? _choice=3 || ZAKR.S:=''
?};
_ref:=EK_PROB.ref();
{? VAR.EK_PROBT='ZL'
|| exec('prob_f_set','prod_rej');
   EK_PROB.f_seek(_ref)
|| EK_PROB.index('PROB3');
   EK_PROB.prefix(ZAKR.S);
   EK_PROB.seek(_ref)
?};

~~


\prob_f_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Ustawia filtr programowy na tabelę EK_PROB - filtruje problemy dla zlecenia/przewodnika
::       Działa dla zlecenia VAR.A_ZLEC lub przewodnika VAR.A_NRPRZ
::----------------------------------------------------------------------------------------------------------------------
_sort:='ZGL_D, ZGL_T';
{? VAR.EK_PROBT='ZGH'
|| _from:='
      join ZGP using (EK_PROB.ZGP,ZGP.REFERENCE)
      join ZGH using (ZGP.NRPRZ,ZGH.REFERENCE)
   ';
   _where:='(ZGH.REFERENCE=:_a) ';
   _ref:=VAR.A_NRPRZ
|| _from:='
      left join ZL using (EK_PROB.ZL,ZL.REFERENCE)
      left join GROP using (EK_PROB.GROP,GROP.REFERENCE)
      left join GROPP using (GROPP.GROP, GROP.REFERENCE)
      left join ZL as ZL_G using (GROPP.ZL,ZL_G.REFERENCE)
   ';
   _where:='';
   {? VAR.A_ZLEC().RODZAJ='Z' | VAR.A_ZLEC().RODZAJ='N'
   || _where+='(ZL.NRNZL=:_a or ZL_G.NRNZL=:_a) '
   || _where+='(ZL.UNRZL=:_a or ZL_G.UNRZL=:_a) '
   ?};
   _ref:=VAR.A_ZLEC().UNRZL
?};
{? ZAKR.S<>''
|| _where+=' and EK_PROB.PROBLEM=\':_b\' '
?};
EK_PROB.f_set(_sort,_from,_where,_ref,ZAKR.S);
~~


\roz_prob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SZP [12.46]
:: OPIS: Funkcja która rozwiązuje problem
::  OLD: \roz_prob/ekioski.fml
::----------------------------------------------------------------------------------------------------------------------
{? EK_PROB.size()=0 || FUN.info('Brak danych. Funkcja nieaktywna.'@); return(0) ?};

_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:='TTE_WKJ_EPRO';
_args.UIDREF:=EK_PROB.uidref();
_args.AKCJA:='ROZWIĄŻ';
_args.PROC_START:='N';
_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);

exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'EK_PROB',EK_PROB.ref());

_args.CONTEXT:=obj_new('RESULT'); _args.CONTEXT.RESULT:=0;

exec('mp_run','#b__box',_args);

_result:=_args.CONTEXT.RESULT;
{? _result>0 & VEK.TERM='T'
|| grp_disp(EK_PROB,eSelect.wer_prob)
?};
_result


\vp_btn_surowce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Obsluga przycisku 'SUROWCE' w formatce do wpisywania wykonania
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__ENV_REJ')>0
|| MG.cntx_psh();
   MG.f_clear();
   _il:={? cur_tab(1,1)=ZLGD
        || VAR1.IL+VAR1.IL_BRAK
        || VPRODREJ.IL+VPRODREJ.IL_BRAK
        ?};
   params_set('IL',_il);
:: Tymczasowe okno do wyświetlania magazynów ze stanem
   _win:=MG.mk_sel('Magazyny'@,'P',0,'rejmatmg',42,1,32,0,'U','T');
   MG.win_fld(_win,MG,'SYM',,,8,0,1,'Symbol'@@);
   MG.win_fld(_win,MG,'NAZ',,,27,0,1,'Nazwa'@@);
   MG.win_fld(_win,BEER,'ST_MG',,,12,3,1,'',0,'Stan dostępny w magazynie'@);
   MG.win_act(_win,0,'Szukaj');
   MG.win_act(_win,0,'Kolejność');
   _before:="
      _tab:=__ENV_REJ.TAB;
      _ktm:=exec('FindAndGet','#table','M',_tab.MREF,,\"M.ref\",null);
      _dk_c:=exec('FindAndGet','#table','DK_C',_tab.DKCREF,,\"DK_C.ref\",null);
      _mg:=MG.ref();
      _zl:=exec('FindAndGet','#table','ZL',_tab.ZLREF,,\"ZL.ref\",null);
::    Sprawdzam dostępny stan magazynowy dla podanej pozycji
      {? _dk_c<>null()
      || exec('obl_stan','magazyn_stan',_ktm,1,_mg,,,date(),-2,,,,_dk_c)
      || exec('obl_stan','magazyn_stan',_ktm,1,_mg,,,date(),-2)
      ?};
      BEER.ST_MG:=BEER.SD;
      BEER.ST_MG+=exec('zlim_il_rez','zl_nlimit',_tab.ZLIMREF);
      ~~
   ";
   MG.win_act(_win,0,'Rekord',,,,_before);
   MG.win_dict(_win);
   __ENV_REJ.TAB.select();
   MG.cntx_pop()
?};
''


\limity_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Wyświetlenie limitów od strony PROD_REJ
::   WY:
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
{? PROD_REJ.SRODZ='PX'
|| FUN.info('W tym kontekście (plan strategiczny) funkcja \'Limity\' nie jest obsługiwana.'@)
|? PROD_REJ.SRODZ='PL'
|| ZGP.cntx_psh();
   ZGP.prefix();
   {? ZGP.seek(PROD_REJ.PL_OPER().ZGP)
   || exec('action_zgp_lim','zl_limit')
   || FUN.info('Pozycja planu nie jest powiązana z przewodnikiem zlecenia.'@)
   ?};
   ZGP.cntx_pop()
|? PROD_REJ.SRODZ='ZL'
|| ZGP.cntx_psh();
   ZGP.clear();
   {? ZGP.seek(PROD_REJ.ZGP)
   || exec('action_zgp_lim','zl_limit')
   ?};
   ZGP.cntx_pop()
?};
~~


\nielimity_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Wyświetlenie nielimitów od strony PROD_REJ
::   WE:
::   WY:
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
{? PROD_REJ.SRODZ='PX'
|| FUN.info('W tym kontekście (plan strategiczny) funkcja \'Nielimitowane\' nie jest obsługiwana.'@)
|? PROD_REJ.SRODZ='PL'
|| ZGP.cntx_psh();
   ZGP.prefix();
   {? ZGP.seek(PROD_REJ.PL_OPER().ZGP)
   || exec('action_zgp_nlim','zl_nlimit')
   || FUN.info('Pozycja planu nie jest powiązana z przewodnikiem zlecenia.'@)
   ?};
   ZGP.cntx_pop()
|? PROD_REJ.SRODZ='ZL'
|| ZGP.cntx_psh();
   ZGP.clear();
   {? ZGP.seek(PROD_REJ.ZGP)
   || exec('action_zgp_nlim','zl_nlimit')
   ?};
   ZGP.cntx_pop()
?};
~~


\surowce_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Wyświetlenie surowców od strony PROD_REJ (limity i nielimity)
::----------------------------------------------------------------------------------------------------------------------
{? PROD_REJ.SRODZ='PX'
|| FUN.info('W tym kontekście (plan strategiczny) funkcja \'Zapotrzebowanie\' nie jest obsługiwana.'@)
|? PROD_REJ.SRODZ='PL'
|| ZGP.cntx_psh();
   ZGP.prefix();
   {? ZGP.seek(PROD_REJ.PL_OPER().ZGP)
   || exec('action_zgp_sur','zl_nlimit')
   || FUN.info('Pozycja planu nie jest powiązana z przewodnikiem zlecenia.'@)
   ?};
   ZGP.cntx_pop()
|? PROD_REJ.SRODZ='ZL'
|| ZGP.cntx_psh();
   ZGP.clear();
   {? ZGP.seek(PROD_REJ.ZGP)
   || exec('action_zgp_sur','zl_nlimit')
   ?};
   ZGP.cntx_pop()
?};
~~


\partie_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Wyświetlenie partii od strony PROD_REJ
::   WE:
::   WY:
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
{? PROD_REJ.SRODZ='PX'
|| FUN.info('W tym kontekście (plan strategiczny) funkcja \'Partie\' nie jest obsługiwana.'@)
|? PROD_REJ.SRODZ='PL'
|| ZGP.cntx_psh();
   ZGP.prefix();
   {? ZGP.seek(PROD_REJ.PL_OPER().ZGP)
   || exec('select_zgh','zl_partie',ZGP.NRPRZ)
   || FUN.info('Pozycja planu nie jest powiązana z przewodnikiem zlecenia.'@)
   ?};
   ZGP.cntx_pop()
|? PROD_REJ.SRODZ='ZL'
|| ZGP.cntx_psh();
   ZGP.clear();
   {? ZGP.seek(PROD_REJ.ZGP)
   || exec('select_zgh','zl_partie',ZGP.NRPRZ)
   ?};
   ZGP.cntx_pop()
?};
~~


\vp_btn_badanie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Obsluga przycisku 'BADANIE' w formatce do wpisywania wykonania
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__ENV_BAD')>100
|| BADPAR.cntx_psh();
   BADP.cntx_psh();
   _env:=__ENV_BAD;
   _tab:=_env.TAB;
   _tab.select();
   BADP.cntx_pop();
   BADPAR.cntx_pop()
|| FUN.info('Środowisko do rejestracji badań nie zostało utworzone.'@)
?};
''


\prod_rej_il_kap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Wylicza pozostała ilość do rozpisania na kartach pracy dla danego PROD_REJA.
::       Działa na akutalnym rekordzie tabeli PROD_REJ
::   WY: REAL - pozostała ilość do rozpisania na kartach pracy
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
{? PROD_REJ.ZGP<>null() & PROD_REJ.KOOP='N'
|| ZGP.cntx_psh();
   PROD_REJ.ZGP();
   {? ZGP.NTIME<>0
   || {? PROD_REJ.PRAC='T' | PROD_REJ.BRYG='T'
      || exec('sum_kap_zgp','zl_kap',PROD_REJ.ZGP,0,1);
         _il_max:={? ZGP.TPZ<>'T' || PROD_REJ.ILC || ZGP.NTIME ?};
         _il_new:=_il_max-{? ZGP.TPZ<>'T' || VAR1.K_SUM_I || VAR1.K_SUM_T ?};
         _result:={? _il_new<0
                  || 0
                  |? _il_new>_il_max
                  || _il_max
                  || _il_new
                  ?}
      || _result:={? ZGP.TPZ='T'
                  || ZGP.NTIME
                  || PROD_REJ.ILC
                  ?}
      ?}
   ?};
   ZGP.cntx_pop()
?};
_result


\rej_close
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Obsluga akcji Zakończ w oknie rejestracja wykonania produkcji - ręczne zakończenie czynności przez użytkownika.
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy zakończyć czynność rejestracji wykonania produkcji?'@)
|| _zl_ref:=VAR.A_ZLEC;
   _zl_uid:=exec('FindAndGet','#table',ZL,_zl_ref,,"uidref()",'');

   _arg:=exec('mp_run_a','#b__box');
   _arg.ACT_UID:='TTE_WYK_DWZL';
   _arg.UIDREF:=_zl_uid;
   _arg.AKCJA:='ZAKOŃCZ_TODO';
   _arg.PORTS_IN:=exec('portsIn','#b__box',_arg.ACT_UID);
   _arg.PROC_START:='N';

   exec('portsInSet','#b__box',_arg.PORTS_IN,_arg.ACT_UID,'ZL',_zl_ref);

   exec('mp_run','#b__box',_arg);

   sel_exit()
?};
~~


\zlbr_chk_zlbs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Sprawdza czy brygada ma zdefiniowany skład na zadany dzień
::   WE: _a - ZLBR.ref()
::       [_b] - date() - domyślnie aktualna data (jeżeli mieści się w aktualnym okresie rozliczeniowym)
::                       lub ostatni dzień aktualnego okresu
::       [_c] - wyświetlać komunikat o pustym składzie: [1] - tak, 0 - nie
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_zlbr:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_date:={? var_pres('_b')=type_of(date())
       || _b
       || {? date(ST.AR,ST.AM,0)=date(,,0) || date() || date(ST.AR,ST.AM,0) ?}
       ?};
_msg:={? var_pres('_c')=type_of(0) || _c || 1 ?};
_res:=0;
{? _zlbr<>null()
|| ZLBS.cntx_psh();
   ZLBS.clear();
   exec('zlbs_f_set','zasoby',_zlbr,_date);
   {? ZLBS.f_size()=0
   || {? _msg>0
      || FUN.emsg('Pusty skład brygady na dzień %1.'@[$_date])
      ?}
   || _res:=1
   ?};
   ZLBS.f_clear();
   ZLBS.cntx_pop()
?};
_res


\nastepniki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.37]
:: OPIS: Wyświetla następniki/poprzedniki dla podanego PROD_REJ
::   WE: [_a] - PROD_REJ.ref - rekord rejestracji lub bieżący
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_ref:=null();
{? var_pres('_a')=type_of(PROD_REJ.ref())
|| _ref:=_a
?};

_result:=0;
_can_continue:=1;

PROD_REJ.cntx_psh();
{? _ref<>null()
|| PROD_REJ.prefix();
   {? PROD_REJ.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
|| _grpbefore:="
      grp_disp(PROD_NXT,'NEXT');
      grp_disp(PROD_NXT,'PREV');
      ~~
   ";
   _grp:=PROD_NXT.grp_make('Następstwo operacji: %1'@[PROD_REJ.OPIS],_grpbefore,'#pr_nastepstwo',,,,,'normal');
   _ar:="";
   _fb:="
      _result:=~~;
      {? PROD_REJ.size()=0
      || _result:='#disable'
      ?};
      PROD_NXT.index('NEXT');
      PROD_NXT.prefix(PROD_REJ.ref());
      PROD_REJ.cntx_psh();
      _result
   ";
   _fa:="
      PROD_REJ.cntx_pop();
      ~~
   ";
   PROD_NXT.grp_sel(_grp,PROD_NXT,'PREV',,_ar,,,10,_fb,_fa,,,'maximized');
   PROD_NXT.grp_splt(_grp,,'horizontal','bottom',,'#');
   _ar:="";
   _fb:="
      _result:=~~;
      {? PROD_REJ.size()=0
      || _result:='#disable'
      ?};
      PROD_NXT.index('PROD_REJ');
      PROD_NXT.prefix(PROD_REJ.ref());
      PROD_REJ.cntx_psh();
      _result
   ";
   _fa:="
      PROD_REJ.cntx_pop();
      ~~
   ";
   PROD_NXT.grp_sel(_grp,PROD_NXT,'NEXT',,_ar,,,10,_fb,_fa,,,'maximized');
   PROD_NXT.win_sel(_grp);
   PROD_NXT.select();
   ~~
?};
PROD_REJ.cntx_pop();
~~


\vprod_ilbr_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Formuła do wykonania po redakcji pola VPRODREJ.IL_BRAK
::----------------------------------------------------------------------------------------------------------------------
{? VPRODREJ.IL_BRAK<=0
|| VPRODREJ.BRAKI_R:=null()
?};
exec('vprodrej_efld_opt','prod_rej');
1


\ek_prob_fld_fd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Format wyświetlania dla pól tabeli EK_PROB
::----------------------------------------------------------------------------------------------------------------------
_result:='';
_fld:=cur_afld();
{? _fld='ROZ_D'
|| _val:=fld();
   {? _val=date(0,0,0)
   || _result:='empty=1'
   ?}
|? _fld='ROZ_T'
|| {? EK_PROB.ROZ_D=date(0,0,0)
   || _result:='empty=1'
   ?}
?};
_result


\prod_next_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Akcja 'Wyświetl' w oknie następników operacji
::----------------------------------------------------------------------------------------------------------------------
PROD_REJ.cntx_psh();
PROD_NXT.NEXT();
exec('display_4rej','prod_rej');
PROD_REJ.cntx_pop();
~~


\prod_prev_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Akcja 'Wyświetl' w oknie poprzedników operacji
::----------------------------------------------------------------------------------------------------------------------
PROD_REJ.cntx_psh();
PROD_NXT.PROD_REJ();
exec('display_4rej','prod_rej');
PROD_REJ.cntx_pop();
~~


\prob_sel_zgh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Akcja Problemy w oknie przewodników - selekcja problemów dla przewodnika (działa na VAR.A_NRPRZ)
::----------------------------------------------------------------------------------------------------------------------
exec('prob_sel_zl','prod_rej',0);
~~


\is_fast_wyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Sprawdza czy dla PROD_REJa jest włączona szybka rejestracja
::   WE: [_a] - PROD_REJ.ref() lub bieżący rekord
::   WY: 0 - nie ma szybiej rejestracji
::       1 - jest szybka rejestracja
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_ref:=null();
{? var_pres('_a')=type_of(PROD_REJ.ref())
|| _ref:=_a
?};

_result:=0;
_can_continue:=1;

PROD_REJ.cntx_psh();
ZGP.cntx_psh();
PX_POZ.cntx_psh();
PL_OPER.cntx_psh();
{? _ref<>null()
|| PROD_REJ.prefix();
   {? PROD_REJ.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
||
   _tpz:=0;

   {? PROD_REJ.ZGP<>null()
   || ZGP.cntx_psh();
      PROD_REJ.ZGP();
      {? ZGP.TPZ='T'
      || ZGP.index('UID');
         ZGP.prefix(ZGP.UID_TPZ);
         {? ZGP.first()
         || _tpz:=1;
            {? ZGP.WYK_FAST='T'
            || _result:=1
            ?}
         ?}
      ?};
      ZGP.cntx_pop()
   ?};

   {? PROD_REJ.ZGP<>null()
   || {? PROD_REJ.ZGP().WYK_FAST='T'
      || _result:=1
      ?}
   |? PROD_REJ.PL_OPER<>null()
   || {? PROD_REJ.PL_OPER().ZGP().WYK_FAST='T'
      || _result:=1
      ?}
   ?}
?};
PROD_REJ.cntx_pop();
ZGP.cntx_pop();
PX_POZ.cntx_pop();
PL_OPER.cntx_pop();
_result


\zmsprej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Akcja Zmiana sposobu rejestracji w oknach tabeli PROD_REJ
::   WE:
::   WY: Czy zmieniono sposób rejestracji operacji: 1 -tak, 0 - nie
::----------------------------------------------------------------------------------------------------------------------
_res:=1;

:: Odrzucenie zapsiów dotyczących kooperacji i grup operacji
{? PROD_REJ.KOOP='T'
|| _res:=0;
   FUN.info('Zapis dotyczy kooperacji. Modyfikacja niemożliwa.'@)
|? PROD_REJ.GROP<>null()
|| _res:=0;
   FUN.info('Zapis dotyczy grupy operacji. Modyfikacja niemożliwa.'@)
?};
{? _res>0
|| _zgp:=exec('get_zgp','prod_rej');
   {? ~_zgp
   || _res:=0;
      FUN.info('Zapis nie jest powiązany z pozycją przewodnika.'@)
   || _res:=exec('zgp_bryg_change','zl_guide',_zgp)
   ?}
?};
_res


\rozp_oper_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Tabela rozpoczętych operacji
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(2
   ,'PARENT','TREE_REF','Węzeł nadrzędny'@
   ,'T','REAL','Znacznik czasowy rozpoczęcia'@
   ,'LABEL','STRING[60]','Etykieta węzła'
   ,'N','STRING[30]','Pracownik/brygada'@
   ,'C','STRING[30]','Czas rozpoczęcia'@
   ,'ZGP','INTEGER','#ZGP.ref()'
   ,'GROP','INTEGER','#GROP.ref()'
   ,'GROPS','INTEGER','#GROPS.ref()'
   ,'P','INTEGER','#P.ref()'
   ,'B','INTEGER','#ZLBR.ref()'
   ,'CO','STRING[60]','Co wykonuje'@
   ,'ZLGD','INTEGER','#ZLGD.ref()'
   ,'MZLGD','STRING[8]','MZLGD'
   ,'D','DATE','Data rozpoczęcia'@
   ,'TIME','TIME','Godzina rozpoczęcia'@
   ,'PL_WYK','INTEGER','#PL_WYK.ref()'
   ,'PX_WYK','INTEGER','#PX_WYK.ref()'
   ,'PROD_REJ','INTEGER','#PROD_REJ.ref()'
   ,'WYDZIAL','STRING[8]','Wydział'@
   ,'SRODZ','STRING[2]','Rodzaj operacji'@
   ,'DOREJ','STRING[1]','Do rejestracji'@
   ,'RES_SYM','STRING[60]','Zasób'@
   ,'DNI','INTEGER','Liczba zaległych dni'@
   ,'PROBLEM','STRING[1]','Problem'@
   ,'PROBKLAS','STRING[25]','Klasa problemu'@
);
_tab


\rozp_oper_load
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Zasilenie tabeli rozpoczętych operacji
::   WE: _a - _tab (wynik exec('rozp_oper_tab','prod_rej') / ~~ (wtedy tylko wylicza liczbę rozpoczętych operacji)
::       _b - oddział (ODDZ.KOD)
::       _c - wydział (SLO.ref())
::       [_d] - wariant agregacji wyniku (widok): 1-Lista, 2-Zasoby, 3-Wykonawcy
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _tab:=_a;
   _ndx0:=_tab.index('?');
   _count_only:=0
|| _tab:=~~;
   _count_only:=1
?};
_odd:=_b;
_wyd:=_c;
{? var_pres('_d')=type_of(0)
|| _view:=_d
|| _view:=1
?};

_count:=0;

::-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
:: wykonania dla przewodników/grup operacji
ZLGD.cntx_psh();
_zlgd_names:=ZLGD.names();
{? _zlgd_names.first()
||
   {? _wyd<>null()
   || _wyd_kod:=exec('FindAndGet','#table',SLO,_wyd,,"SLO.KOD",'');
      _sch:=exec('domyslny','schemat','PODZORG');
      UD_DEF.cntx_psh();
      UD_DEF.index('SCHSYM');
      UD_DEF.prefix(_sch,_wyd_kod,);
      {? UD_DEF.first()
      || _ud_skl:=UD_DEF.UD_SKL
      || _ud_skl:=null();
         FUN.info(
            'Nie znaleziono \'%1\' elementu struktury organizacyjnej — '
            'należy sprawdzić konfigurację słownika wydziałów.'@
            [_wyd_kod]
         )
      ?};
      UD_DEF.cntx_pop()
   || _ud_skl:=~~
   ?};

   {!
   |?
::    Przechodzę tylko po maskach danego oddziału
      {? (6+_zlgd_names.NAME)+1=_odd
      ||
         ZLGD.use(_zlgd_names.NAME);
         ZLGD.cntx_psh();
         ZLGD.index('EK3');
         {? _wyd<>null()
         || ZLGD.prefix('N',_ud_skl)
         || ZLGD.prefix('N')
         ?};
         {? ZLGD.first()
         || {!
            |?
               _count+=1;
               {? ~_count_only
               || _tab.blank();
                  _tab.N:={? ZLGD.P || ZLGD.P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE || '['+ZLGD.B().KOD+']' ?};
                  _tab.C:=$ZLGD.STARTD().DATA+' '+$ZLGD.STARTT;
                  _tab.T:=ZLGD.TM_START;
                  _tab.ZGP:=#ZLGD.ZGP;
                  _tab.GROP:=#ZLGD.GROP;
                  _tab.GROPS:=#ZLGD.GROPS;
                  _tab.P:=#ZLGD.P;
                  _tab.B:=#ZLGD.B;
                  _tab.CO:=
                     {? ZLGD.ZGH<>null()
                     || ZLGD.ZGH().NRPRZ+' - '+$ZLGD.ZGP().NRP+': '+ZGP.OPIS
                     || ZLGD.GROP().KOD+': '+GROP.OPIS
                     ?};
                  _tab.ZLGD:=#ZLGD.ref();
                  _tab.MZLGD:=ZLGD.name();
                  _tab.D:=ZLGD.STARTD().DATA;
                  _tab.TIME:=ZLGD.STARTT;
                  _tab.PROD_REJ:=
                     {? ZLGD.ZGP<>null()
                     || #exec('FindInSet','#table','PROD_REJ','ZGP',ZLGD.ZGP,'ZL')
                     || #exec('FindInSet','#table','PROD_REJ','GROPS',ZLGD.GROPS,'ZL')
                     ?};
                  _tab.WYDZIAL:=ZLGD.WYD().SYMBOL;
                  _tab.SRODZ:='ZL';
                  _tab.DOREJ:=exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,"DOREJ",'N');
                  _tab.RES_SYM:=exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,"RES_SYM",'N');
                  _tab.DNI:=date()-_tab.D;
                  _tab.PROBLEM:=exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,"PROBLEM",'N');
                  _tab.PROBKLAS:=exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,"PROBKLAS",'');
                  _tab.add()
               ?};
               ZLGD.next()
            !}
         ?};
         ZLGD.cntx_pop()
      ?};
      _zlgd_names.next()
   !}
?};
ZLGD.cntx_pop();
::-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

::-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
:: wykonania dla planu operacyjnego
PL_WYK.cntx_psh();
PL_WYK.index('EK1');
PL_WYK.prefix(null(),time(0,0,0));
{? PL_WYK.first()
|| {!
   |?
      _count+=1;
      {? ~_count_only
      || _tab.blank();
         _tab.N:=PL_WYK.P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
         _tab.C:=$PL_WYK.STARTD().DATA+' '+$PL_WYK.STARTT;
         _tab.T:=PL_WYK.TM_START;
         _tab.ZGP:=#PL_WYK.PL_OPER().ZGP;
         _tab.P:=#PL_WYK.P;
         _tab.CO:=PL_WYK.ZL().SYM+' '+PL_WYK.PL_OPER().ZGP().OPIS;
         _tab.D:=PL_WYK.STARTD().DATA;
         _tab.TIME:=PL_WYK.STARTT;
         _tab.PL_WYK:=#PL_WYK.ref();
         _tab.PROD_REJ:=#exec('FindInSet','#table','PROD_REJ','PL_OPER',PL_WYK.PL_OPER,'PL');
         _tab.SRODZ:='PL';
         _tab.DOREJ:=exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,"DOREJ",'N');
         _tab.PROBLEM:=exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,"PROBLEM",'N');
         _tab.PROBKLAS:=exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,"PROBKLAS",'');
         _tab.DNI:=date()-_tab.D;
         _tab.add()
      ?};
      PL_WYK.next()
   !}
?};
PL_WYK.cntx_pop();
::-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

::-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
:: wykonania dla planu strategicznego
PX_WYK.cntx_psh();
PX_WYK.index('ZAK2');
PX_WYK.prefix('N');
{? PX_WYK.first()
|| {!
   |?
      _count+=1;
      {? ~_count_only
      || _tab.blank();
         _tab.N:=PX_WYK.P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
         _tab.C:=$PX_WYK.DATA0+' '+$PX_WYK.CZAS0;
         _tab.T:=exec('create','#tm_stamp',PX_WYK.DATA0,PX_WYK.CZAS0);
         _tab.P:=#PX_WYK.P;
         _tab.CO:=PX_WYK.PX_POZ().PX_STAGE().NAZWA;
         _tab.D:=PX_WYK.DATA0;
         _tab.TIME:=PX_WYK.CZAS0;
         _tab.PX_WYK:=#PX_WYK.ref();
         _tab.PROD_REJ:=#exec('FindInSet','#table','PROD_REJ','PX_POZ',PX_WYK.PX_POZ,'PX');
         _tab.SRODZ:='PX';
         _tab.DOREJ:=exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,"DOREJ",'N');
         _tab.PROBLEM:=exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,"PROBLEM",'N');
         _tab.PROBKLAS:=exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,"PROBKLAS",'');
         _tab.DNI:=date()-_tab.D;
         _tab.add()
      ?};
      PX_WYK.next()
   !}
?};
PX_WYK.cntx_pop();
::-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

::-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
:: Agregacja wyniku w drzewie
{? _view=2
|| _ndx1:=_tab.ndx_tmp(,,'RES_SYM',,,'T',,);
   _tab.index(_ndx1);
   _nodes:=sql('select distinct :_a.RES_SYM from :_a',_tab);
   {? _nodes.first()
   || {!
      |? {? _nodes.RES_SYM<>''
         || _tab.prefix();
            _tab.blank();
            _tab.LABEL:=_nodes.RES_SYM;
            _czas:='';
            _dni:=0;
            {? _tab.add()
            || _parent:=#_tab.ref();
               _tab.cntx_psh();
               _tab.prefix(_nodes.RES_SYM,);
               {? _tab.first()
               || _czas:=_tab.C;
                  _dni:=_tab.DNI;
                  {!
                  |? _tab.PARENT:=_parent;
                     _tab.LABEL:=_tab.N;
                     _tab.put();
                     _tab.next()
                  !}
               ?};
               _tab.cntx_pop();
               _tab.C:=_czas;
               _tab.DNI:=_dni;
               _tab.put()
            ?}
         ?};
         _nodes.next()
      !}
   ?}
|? _view=3
|| _nodes:=sql('select distinct :_a.N from :_a',_tab);
   _ndx1:=_tab.ndx_tmp(,,'N',,,'T',,);
   _tab.index(_ndx1);
   {? _nodes.first()
   || {!
      |? {? _nodes.N<>''
         || _tab.prefix();
            _tab.blank();
            _tab.LABEL:=_nodes.N;
            _czas:='';
            _dni:=0;
            {? _tab.add()
            || _parent:=#_tab.ref();
               _tab.cntx_psh();
               _tab.prefix(_nodes.N,);
               {? _tab.first()
               || _czas:=_tab.C;
                  _dni:=_tab.DNI;
                  {!
                  |? _tab.PARENT:=_parent;
                     _tab.LABEL:=_tab.RES_SYM;
                     _tab.put();
                     _tab.next()
                  !}
               ?};
               _tab.cntx_pop();
               _tab.C:=_czas;
               _tab.DNI:=_dni;
               _tab.put()
            ?}
         ?};
         _nodes.next()
      !}
   ?}
?};
::-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

{? ~_count_only
|| _tab.index(_ndx0);
   _tab.prefix()
?};

_count


\rozp_oper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Wyświetlanie i obsługa rozpoczętych operacji
::----------------------------------------------------------------------------------------------------------------------
_env:=obj_new('VIEW');
params_set('env',_env);
_env.VIEW:=1;

_border:=exec('rozp_oper_border','prod_rej');

{!
|?
   _view:=_env.VIEW;

   _tab:=exec('rozp_oper_tab','prod_rej');
   exec('rozp_oper_load','prod_rej',_tab,ST.ODDZ,null(),_view);

   _wer:=_tab.mk_sel(
      'Rozpoczęte operacje (e-kioski)'@,'P',0,'varpracout'+$_view,,,,
      _view=2 | _view=3,
      {? _view=1 || 'U' || 'N' ?},,,,,
      'maximized'
   );
   {? _view=2 | _view=3 || _tab.win_fld(_wer,,'LABEL',,,40,,1,,1) ?};
   {? _view=1 || _tab.win_fld(_wer,,'N',,,40,,1) ?};
   _tab.win_fld(_wer,,'C',,,15,,1);
   _tab.win_fld(_wer,,'DNI',,,-10,,1);
   _tab.win_fld(_wer,,'CO',,,60,,1);
   {? _view=1 || _tab.win_fld(_wer,,'RES_SYM',,,40,,1) ?};
   _tab.win_fld(_wer,,'SRODZ',,,-5);
   _tab.win_fld(_wer,,'DOREJ',,,-10,,1,,,,2,,"'T'","'N'");
   _formula:="exec('rozp_oper_zakoncz','prod_rej')";
   _tab.win_act(_wer,,'Formuła','Zakończ'@@,,,_formula,,1,,,,'Z');
   _formula:="exec('rozp_oper_usun','prod_rej')";
   _tab.win_act(_wer,,'Formuła','Usuń'@@,,,_formula,,,,,,'U');
   _formula:="exec('zwrw_all','#tree',cur_tab(1,1),'PARENT')";
   {? _view<>1
   || _tab.win_act(_wer,,'Formuła','Zwiń/&rozwiń'@@,,'Zwiń/rozwiń wszystkie rekordy'@,_formula,,,,,,'R')
   ?};
   _tab.win_act(_wer,,'Menu','Proble&m'@@,,,,,,,,,'M');
   _formula:="
      _tab:=cur_tab(1,1);
      exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,\"params_exec('problem_4rej','prod_rej')\");
      _tab.PROBLEM:=exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,\"PROBLEM\");
      _tab.PROBKLAS:=exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,\"PROBKLAS\");
      _tab.put()
   ";
   _tab.win_act(_wer,,'Formuła','Zgłoś problem'@@,'#M',,_formula,,,,,,'Z');
   task_attach('TTE_WKJ_DPRO');
   _formula:="
      _tab:=cur_tab(1,1);
      exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,\"params_exec('xproblem_4rej','prod_rej')\");
      _tab.PROBLEM:=exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,\"PROBLEM\");
      _tab.PROBKLAS:=exec('FindAndGet','#table',PROD_REJ,_tab.PROD_REJ,,\"PROBKLAS\");
      _tab.put()
   ";
   _tab.win_act(_wer,,'Formuła','Rozwiąż problem'@@,'#M',,_formula,,,,,,'R');
   task_attach('TTE_WKJ_EPRO');
   _formula:="params_exec('rozp_oper_view','prod_rej')";
   _tab.win_act(_wer,,'Formuła','Widok'@@,,,_formula,,,,,,'W');
   _tab.win_act(_wer,,'Kolejność');
   _formula:=$("
      exec('legenda','color',
         '$TAB_TYMCZ#01#02$'+'Operacje rozpoczęte wcześniej niż %1 godzin temu.'@['"+$_border+"'],
         'PROD_REJ#01#03','PROD_REJ#01#05','PROD_REJ#01#06'
      )
   ");
   _tab.win_act(_wer,,'Formuła','Legenda'@@,,,_formula,,,,,,'L');
   _formula:="
      _tab:=cur_tab(1,1);
      PROD_REJ.cntx_psh();
      PROD_REJ.prefix();
      {? PROD_REJ.seek(_tab.PROD_REJ,)
      || exec('display_4rej','prod_rej')
      || FUN.info(
            'Zapis nieaktywny.'@+'\n\n'+
            'Należy zweryfikować zapis źródłowy: %1'@[_tab.CO]
         )
      ?};
      PROD_REJ.cntx_pop();
      ~~
   ";
   _tab.win_act(_wer,,'Wyświetl',,,,_formula);
   _formula:=$("
      _tab:=cur_tab(1,1);
      {? _a
      || _tab.actions_grayed(cur_win(1,1),{? _tab.LABEL='' | _tab.PARENT<>0 || '' || 'ZU' ?})
      ?};
      {? _tab.PROBKLAS=exec('prob_class_blocking','zl_wkj')
      || Color.fnd_kol('PROD_REJ#01#06')
      |? _tab.PROBKLAS=exec('prob_class_suspensing','zl_wkj')
      || Color.fnd_kol('PROD_REJ#01#03')
      |? _tab.PROBKLAS=exec('prob_class_information','zl_wkj')
      || Color.fnd_kol('PROD_REJ#01#05')
      |? exec('create','#tm_stamp')-_tab.T<"+$_border+"*exec('hour','#tm_stamp')
      || ''
      || exec('findtmp2','#color')
      ?}
   ");
   _tab.win_act(_wer,,'Rekord',,,,_formula);
   _tab.win_sel(_wer);
   _sel_exit:=_tab.select();
   obj_del(_tab);
   _sel_exit
!};
~~


\rozp_oper_border
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Granica czasowa (godziny), od której podświetlać zaległe operacje
::----------------------------------------------------------------------------------------------------------------------
8


\rozp_oper_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Usuwa rozpoczętą operację - w widoku rozpoczętych operacji Merit
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);

:: czy kasować bieżący zapis
_tab_del:=0;

{? _tab.ZLGD
|| ZLGD.cntx_psh();
   ZLGD.use(_tab.MZLGD);
   ZLGD.clear();
   {? ZLGD.seek(_tab.ZLGD,)
   || {? ZLGD.GROP<>null()
      || {? exec('zlgd_usun','zl_grop')
         || _tab_del:=1
         ?}
      || {? exec('zlgd_usun','zl_wyk')>0
         || _tab_del:=1
         ?}
      ?}
   || _tab_del:=1;
      FUN.info('Zapis został już usunięty.'@)
   ?};
   ZLGD.cntx_pop()

|? _tab.PL_WYK
|| PL_WYK.cntx_psh();
   PL_WYK.prefix();
   {? PL_WYK.seek(_tab.PL_WYK,)
   || {? ~PL_WYK.count()
      || exec('usun_wyk','po_wyk');
         {? ~PL_WYK.seek(_tab.PL_WYK,)
         || _tab_del:=1
         ?}
      || _tab_del:=1;
         FUN.info('Zapis powiązany — nie można usunąć.'@)
      ?}
   || _tab_del:=1;
      FUN.info('Zapis został już usunięty.'@)
   ?};
   PL_WYK.cntx_pop()

|? _tab.PX_WYK
|| PX_WYK.cntx_psh();
   PX_WYK.prefix();
   {? PX_WYK.seek(_tab.PX_WYK,)
   || {?  ~PX_WYK.count()
      || _px_poz:=PX_WYK.PX_POZ;
         exec('px_wyk_usun','px_wyk');
         {? _px_poz<>null()
         ||
::          Odblokowuje pozycję planu
            exec('unblock','px_poz',_px_poz)
         ?};
         {? ~PX_WYK.seek(_tab.PX_WYK,)
         || _tab_del:=1
         ?}
      || _tab_del:=1;
         FUN.info('Zapis powiązany — nie można usunąć.'@)
      ?}
   || _tab_del:=1;
      FUN.info('Zapis został już usunięty.'@)
   ?};
   PX_WYK.cntx_pop()

?};

_parent:=_tab.PARENT;

{? _tab_del
|| _tab.del();

:: Regeneracja czasów na rekordzie nadrzędnym
   {? _parent>0
   || _tab.cntx_psh();
      _tab.prefix(_parent);
      _czas:='';
      _dni:=0;
      {? _tab.first() || _czas:=_tab.C; _dni:=_tab.DNI ?};
      _tab.prefix();
      {? _tab.seek(_parent) || _tab.C:=_czas; _tab.DNI:=_dni; _tab.put() ?};
      _tab.cntx_pop()
   ?}
?};
~~


\rozp_oper_zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Zakańcza rozpoczętą operację (e-kioskową) z poziomu Merit ERP
::----------------------------------------------------------------------------------------------------------------------
_wrk:={? var_pres('_a')=type_of(0) || _a || 0 ?};

_tab:=cur_tab(1,1);

{? _tab.ZGP=0 & _tab.GROP=0
|| FUN.info('Zakończenie operacji dostępne jest tylko dla pozycji przewodników zleceń i grup operacji.'@)
||
   _parent:=_tab.PARENT;

   Cntx.psh(ZGP,ZLGD,ZLGB,_tab);
   ZLGD.use(_tab.MZLGD);
   {? ~_wrk
   || ZLGB.use((5+ZLGB.name())+((8+_tab.MZLGD)+3))
   ?};
   Cntx.clr(ZGP,ZLGD,ZLGB);
   {? ZLGD.seek(_tab.ZLGD)
   ||
      exec('end_zlgd_ek_core','zl_wyk',_wrk,0)
   ?};
   Cntx.pop(ZGP,ZLGD,ZLGB,_tab);

:: Regeneracja czasów na rekordzie nadrzędnym
   {? _parent>0
   || _tab.cntx_psh();
      _tab.prefix(_parent);
      _czas:='';
      _dni:=0;
      {? _tab.first() || _czas:=_tab.C; _dni:=_tab.DNI ?};
      _tab.prefix();
      {? _tab.seek(_parent) || _tab.C:=_czas; _tab.DNI:=_dni; _tab.put() ?};
      _tab.cntx_pop()
   ?}
?};
~~


\rozp_oper_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Przełączanie widoku rozpoczętych operacji
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;

_names:=obj_new(3);
_names[1]:='Lista'@;
_names[2]:='Zasoby'@;
_names[3]:='Wykonawcy'@;

_values:=obj_new(3);
_values[1]:=1;
_values[2]:=2;
_values[3]:=3;

_choice:=exec('edit_radiobutton','#edit',_env.VIEW,'Sposób prezentacji danych'@,_names,_values,'Widok'@);

{? type_of(_choice)=type_of(~~)
|| ~~
|? _env.VIEW<>_choice
|| _env.VIEW:=_choice;
   sel_exit()
|| ~~
?}

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:35 a12740f61ab6c7f0003309abb54b69f5ef4fb874513be90a0ac63dfc533ffe08f09cc72ce51210dfe0893830ab4780d7dca3b1b48c4d1870b07debbdf946eefd652071ce4ad2fbdbe27a06af6b286f7193378e3f78a212cdae7ee406065918608f54c2e0a56463cbf564dcd300b3c6bfab63e3add968360cb2a418ad788ca6ec
