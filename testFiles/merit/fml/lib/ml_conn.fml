:!UTF-8
(c) Macrologic SA odzial Wroclaw Wszelkie prawa zastrzeżone
========================================================================================================================
Nazwa pliku: ml_conn.fml
Utworzony: 2005-??-??
Autor: RB
Systemy: FIKS,FIKS_B
========================================================================================================================
Zawartość: Formuły do obsługi tabeli parametrów MLCONNEC, w wersji Finanse i ksiegowość budżetowa
Uwaga: Poprzednia nazwa pliku to connect.fml
========================================================================================================================


\cnrddopr
::-------------------------------------------------------------------------------------------------------------------
::  UTW: RB [x.xx]
:: OPIS: Tabela MLCONNEC, okienko RD, akcja DOLACZ, formuła PRZED
::-------------------------------------------------------------------------------------------------------------------
1


\cnrddopo
::-------------------------------------------------------------------------------------------------------------------
::  UTW: AK [7.50]
:: OPIS: Tabela MLCONNEC, okienko RD, akcja DOLACZ, formuła PO
::-------------------------------------------------------------------------------------------------------------------
1


\cnrdpppr
::-------------------------------------------------------------------------------------------------------------------
::  UTW: RB [x.xx]
:: OPIS: Tabela MLCONNEC,okienko RD, akcja POPRAW, formuła PRZED
::-------------------------------------------------------------------------------------------------------------------
1


\cnrdpppo
::-------------------------------------------------------------------------------------------------------------------
::  UTW: RB [x.xx]
:: OPIS: Tabela MLCONNEC, okienko RD,akcja POPRAW, formuła PO
::-------------------------------------------------------------------------------------------------------------------
1


\cnrduspr
::-------------------------------------------------------------------------------------------------------------------
::  UTW: RB [x.xx]
:: OPIS: Tabela MLCONNEC, okienko RD, akcja USUN, formuła PRZED
::-------------------------------------------------------------------------------------------------------------------
1


\cnrduspo
::-------------------------------------------------------------------------------------------------------------------
::  UTW: RB [x.xx]
:: OPIS: Tabela MLCONNEC, okienko RD, akcja USUN, formuła PO
::-------------------------------------------------------------------------------------------------------------------
1


\cnpppppr
::-------------------------------------------------------------------------------------------------------------------
::  UTW: RB [x.xx]
:: OPIS: Tabela MLCONNEC, okienko PP, akcja POPRAW, formuła PRZED
::-------------------------------------------------------------------------------------------------------------------
MLEX_OKN.OWR:='';
_wyn:=1;
{? MLCONNEC.TP='GLOBAL' & 3+MLCONNEC.ID='DL_'
|| {? MLCONNEC.ID='DL_CZ'
   || ML_CZ.cntx_psh();
      ML_CZ.index('CZSYM');
      ML_CZ.prefix(__Rokbud);
      {? ML_CZ.first
      || {? MLCONNEC.WR=''
         || MLCONNEC.WR:=$(+ML_CZ.SYM); MLCONNEC.put();
            FUN.info('Tabela części zawiera zapisy \nUstawiono długość kodu zgodną ze słownikiem (%1)'@[MLCONNEC.WR])
         || FUN.info('Tabela części zawiera zapisy \nZmiana parametru nie jest możliwa'@)
         ?};
         _wyn:=0
      ?};
      ML_CZ.cntx_pop()
   |? MLCONNEC.ID='DL_DZ'
   || ML_DZ.cntx_psh();
      ML_DZ.index('DZSD');
      ML_DZ.prefix(__Rokbud);
      {? ML_DZ.first
      || {? MLCONNEC.WR=''
         || MLCONNEC.WR:=$(+ML_DZ.SD); MLCONNEC.put();
            FUN.info('Tabela działów zawiera zapisy \nUstawiono długość kodu zgodną ze słownikiem (%1)'@[MLCONNEC.WR])
         || FUN.info('Tabela działów zawiera zapisy \nZmiana parametru nie jest możliwa'@)
         ?};
         _wyn:=0
      ?};
      ML_DZ.cntx_pop()
   |? MLCONNEC.ID='DL_RZ'
   || ML_RZ.cntx_psh();
      ML_RZ.index('RZSR');
      ML_RZ.prefix(__Rokbud);
      {? ML_RZ.first
      || {? MLCONNEC.WR=''
         || MLCONNEC.WR:=$(+ML_RZ.SR); MLCONNEC.put();
            FUN.info('Tabela rozdziałów zawiera zapisy \nUstawiono długość kodu zgodną ze słownikiem (%1)'@[MLCONNEC.WR])
         || FUN.info('Tabela rozdziałów zawiera zapisy \nZmiana parametru nie jest możliwa'@)
         ?};
         _wyn:=0
      ?};
      ML_RZ.cntx_pop()
   |? MLCONNEC.ID='DL_PG'
   || ML_PG.cntx_psh();
      ML_PG.index('PGRZKSPN');
      ML_PG.prefix(__Rokbud);
      {? ML_PG.first
      || {? MLCONNEC.WR=''
         || MLCONNEC.WR:=$(+ML_PG.SP); MLCONNEC.put();
            FUN.info('Tabela paragrafów zawiera zapisy \nUstawiono długość kodu zgodną ze słownikiem (%1)'@[MLCONNEC.WR])
         || FUN.info('Tabela paragrafów zawiera zapisy \nZmiana parametru nie jest możliwa'@)
         ?};
         _wyn:=0
      ?};
      ML_PG.cntx_pop()
   |? MLCONNEC.ID='DL_PP'
   || ML_PP.cntx_psh();
      ML_PP.index('PPSP');
      ML_PP.prefix(__Rokbud);
      {? ML_PP.first
      || {? MLCONNEC.WR=''
         || MLCONNEC.WR:=$(+ML_PP.SP); MLCONNEC.put();
            FUN.info('Tabela pozycji paragrafowych zawiera zapisy \nUstawiono długość kodu zgodną ze słownikiem (%1)'@[MLCONNEC.WR])
         || FUN.info('Tabela pozycji paragrafowych zawiera zapisy \nZmiana parametru nie jest możliwa'@)
         ?};
         _wyn:=0
      ?};
      ML_PP.cntx_pop()
   ?}
?};
_wyn


\cnpppppo
::-------------------------------------------------------------------------------------------------------------------
::  UTW: RB [x.xx]
:: OPIS: Tabela MLCONNEC, okienko PP, akcja POPRAW, formuła PO
::-------------------------------------------------------------------------------------------------------------------
{? MLCONNEC.TP='BUD_KON' & (2+MLCONNEC.ID='PL' | 3+MLCONNEC.ID='SPL')
|| _par:={? MLCONNEC.ID='PLD'
         || 'DOCK'
         |? MLCONNEC.ID='PLW'
         || 'WYDK'
         |? MLCONNEC.ID='SPLW'
         || 'WYDS'
         |? MLCONNEC.ID='SPLD'
         || 'DOCS'
         ?};
   _p2:=exec('znajdz','ml_conn','PLANY',_par);
   {? _p2<>MLCONNEC.WR
   || {? exec('con_put','ml_conn',#ROK_F.ref(),'PLANY',_par,MLCONNEC.WR)
      || FUN.info('Zmieniono powiązany parametr w grupie PLANY: %1'@[_par])
      || FUN.error('Nie powiodła się zmiana powiązanego parametru w grupie PLANY: %1'@[_par])
      ?}
   ?}
|?  MLCONNEC.TP='PLANY' & (MLCONNEC.ID='DOCS' | MLCONNEC.ID='WYDS' | MLCONNEC.ID='DOCK' | MLCONNEC.ID='WYDK')
|| _par:={? MLCONNEC.ID='DOCK'
         || 'PLD'
         |? MLCONNEC.ID='WYDK'
         || 'PLW'
         |? MLCONNEC.ID='WYDS'
         || 'SPLW'
         |? MLCONNEC.ID='DOCS'
         || 'SPLD'
         ?};
   _p2:=exec('znajdz','ml_conn','PLANY',_par);
   {? _p2<>MLCONNEC.WR
   || {? exec('con_put','ml_conn',#ROK_F.ref(),'BUD_KON',_par,MLCONNEC.WR)
      || FUN.info('Zmieniono powiązany parametr w grupie BUD_KON: %1'@[_par])
      || FUN.error('Nie powiodła się zmiana powiązanego parametru w grupie BUD_KON: %1'@[_par])
      ?}
   ?}
?};
1


\cnwrf3
::-------------------------------------------------------------------------------------------------------------------
::  UTW: RB [7.60]
:: OPIS: Tabela MLCONNEC, pole WR, akcja F3. Formuła obsługuje słownikowanie pola MLCONNEC.WR.
::       W przypadku parametrów zawierających konta analityczne lub listy kont
::       analitycznych obsługuje wszystkie poziomy analityki.
:: HIST: AK[8.70] 06.11.2005 - - dla TYP = MLBUD_KO lista prefiksów kont analitycznych
::       AK[8.71] 08.05.2006 - - naprawa błednego prefiksowania tabeli BUD
::       WS[10.02] 16.07.2008 -- MLCONNEC.ID='DZIALAN,FUN,ZAD,PODZAD,BZ_KOL' słowniki użytkownika zaczynające sie od ZADANIA
::-------------------------------------------------------------------------------------------------------------------
_a:=_b:=_c:=_str:='';
{? MLCONNEC.ID='DZTECH'
|| _dzw:=ML_DZ.mk_sel('Wybór działu technicznego'@,,0);
   _str:=MLCONNEC.WR;
   ML_DZ.win_fld(_dzw,,'SD');
   ML_DZ.win_fld(_dzw,,'ND');
   ML_DZ.win_act(_dzw,,'Formuła','Wybierz'@@,,,"sel_exit;1",,1,,,,'W');
   ML_DZ.win_sel(_dzw);
   {? ML_DZ.select()
   || _str:=ML_DZ.SD
   ?}
|| KS.win_sel('SLO_TEN');
   KS.index('SYM');
   KS.prefix({? var_pres('__Rokbud')=7 || __Rokbud || SSTALE.AR ?});
   _sep:={? var_pres('__Rokbud')=7 || ROK_F.SEP || SSTALE.AR().SEP ?};
   _str:=MLCONNEC.WR;
   _ash:=0;"wyznacza pozycje ostatniego przecinka w pierwszej czesci stringa _str";
   _pos:=get_cpos;"pozycja kursora - konto skojarzone z ta pozycja strigna zostanie zmienione";
   "_tmpsh - przesunięcie w stringu tymczasowym";
   {!
   |? _tmpsh:=_str*','; _tmpsh & ((_ash+_tmpsh)<_pos)
   |! _str:=_tmpsh-_str; _ash+=_tmpsh;"szukanie przecinkow w dalszej czesci stringu"
   !};
   _a:=_ash+MLCONNEC.WR;"_a - pierwsza czesc stringu - po edycji trzeba bedzie ja doklejac na poczatku";
   {? _b:=(_tmpsh-1)+_str;"czesc stringu 'obrabianego' - potrzebna w razie gdy uzytkownik zrezygnuje ";
                          "z wyboru w slowniku";
      "koncowa czesc stringu - doklejana po edycji";
      _b=''
   || _c:='';
      _b:=_str
   || _c:=_pos-MLCONNEC.WR;
      _shp:=_c*',';
      _shs:=_c*_sep;
      {? (_shs<_shp)&(_shs>0)
      || _c:=(_shs-1)-_c
      || {? _shp
         || _c:=(_shp-1)-_c
         || _c:=','
         ?}
      ?}
   ?};
   _str:=_ash-((_pos-1)+MLCONNEC.WR);
   "slownik syntetyki konta - dla parametrow bedacych kontami analitycznymi lub syntetycznymi";
   {? (('AKR,MIN,NAD,NDE,NLZ,NPO,NSP,NWY,NZL,POT,POZ,RBU,USK,WNW,WYP,ZPO,WYD,DOC,PLW,PLD,KOS,PRZ,NAL,ZOB'*MLCONNEC.ID) |
      ('SNA,SWY,SDO,SKO,SPR,SZO'*MLCONNEC.ID) | (MLCONNEC.TP='PLANY' & +MLCONNEC.ID=4 & MLCONNEC.ID+1='K')) &
      (MLCONNEC.TP<>'PLANY' | MLCONNEC.TP='PLANY' & +MLCONNEC.ID=4 & MLCONNEC.ID+1='K')
   || _poz:=0;"poziom analityki - jesli tylko k. syntetyczne to zawsze 0 ";
      "PONIZSZY FRAGMENT KODU OBSLUGUJE WPISYWANIE KONT ANALITYCZNYCH";
      _tmpstr:=_str;
      _tmpsh:=0;
      {!
      |? _tmpsh+=_tmpstr*_sep;_tmpstr*_sep
      |! _poz+=1;
         _tmpstr:=(_tmpstr*_sep)-_tmpstr
      !};
      {? _poz=0
      || KS.find_key(_str);
         {? KS.select(,1)
         || _str:=KS.SYM;
            MLEX_OKN.ZN:=0
         || _str:=_b
         ?}
      ?};
      {? (('AKR,NAD,NDE,NLZ,NSP,NWY,NZL,POT,POZ,USK,ZPO'*MLCONNEC.ID) |(MLCONNEC.TP='BUD_KON')) &(_poz>0)
      || _ndx:=BUD.ndx_tmp(,1,'KS','ROK',0,'KS','SYM',0,'POZ',,0);
         BUD.index(_ndx);
         BUD.prefix({? var_pres('__Rokbud')=7 || __Rokbud || SSTALE.AR ?},((_str*_sep)-1)+_str);
         {? BUD.find_key(_poz)
         || SLO.index('SL');
            SLO.prefix(BUD.SLU().SLU().ref);
            SLO.win_sel('ONE_SEL');
            {? SLO.find_key(_tmpstr);SLO.select()
            || _str:=(_tmpsh+_str)+SLO.KOD;
               MLEX_OKN.ZN:=0
            || _str:=_b
            ?}
         ?};
         BUD.ndx_drop
      ?}
   |? (MLCONNEC.ID='SALD')|(MLCONNEC.ID='SAL_ROZW')|(MLCONNEC.ID='WYR_NZ')
   || TABTMP:=tab_tmp(1, 'WR','STRING[1]','Wartość parametru',
         'OPIS','STRING[50]','Opis');
      TABSEL:=TABTMP.mk_sel( 'Wartości dla pola','N',0);
      TABTMP.win_fld(TABSEL, , 'WR',,,,,1);
      TABTMP.win_fld(TABSEL, , 'OPIS',,,,,1);
      TABTMP.win_act(TABSEL, 0,'Formuła','Wybierz'@@,,,"sel_exit",,1,,,,'W');
      {? MLCONNEC.ID='SALD'
      || TABTMP.OPIS:='Drukowanie wszystkich wierszy';
         TABTMP.WR:='T';
         TABTMP.add;
         TABTMP.WR:='N';
         TABTMP.OPIS:='Drukowanie wierszy z saldami różnymi od zera'
      |? MLCONNEC.ID='SAL_ROZW'
      || TABTMP.OPIS:='Saldo zobow.i należn.rozwarte(salda stron Wn i Ma)';
         TABTMP.WR:='T';
         TABTMP.add;
         TABTMP.WR:='N';
         TABTMP.OPIS:='Saldo zobowiązań i należności zwarte (Wn lub Ma)'
      |? MLCONNEC.ID='WYR_NZ'
      || TABTMP.OPIS:='Konta rozrachunkowe - budżet na wyróżnikach';
         TABTMP.WR:='W';
         TABTMP.add;
         TABTMP.WR:='K';
         TABTMP.OPIS:='Konta rozrachunkowe - budżet w analityce kont'
      ?};
      TABTMP.add;
      TABTMP.win_sel(TABSEL);
      "tu wyjatek - rekord odkladany i okno zamykane aby uzytkownik nie musiac zatwierdziac";
      "dwa razy nowej wartosci";
      _str:=MLCONNEC.WR;
      {? TABTMP.select || _str:=TABTMP.WR ?};
      obj_del(TABTMP)
   |? 'WY_RZ,WY_PG,WY_PP'*MLCONNEC.ID
   || _slutmp:=sql('select SLU.NAZ,SLU.OP,SLUAPPL.REFERENCE TAB_REF '+
                   'from SLUAPPL left join SLU using (SLUAPPL.SLU, SLU.REFERENCE) '+
                   'where SLUAPPL.GDZIE=\'F\' and '+
                   'SLU.WZ in(\'Część\',\'Dział\',\'Rozdział\',\'Paragraf\',\'Pozycja\') ');
      _wer:=_slutmp.mk_sel('Słowniki budżetowe'@,'N',,'#ml_slobud_sel',1,1,20);
      _slutmp.win_fld(_wer,,'NAZ',,,,,,'Nazwa słownika'@);
      _slutmp.win_fld(_wer,,'OP',,,,,,'Opis słownika'@);
      _slutmp.win_act(_wer,0,'Formuła','Wybierz'@@,,,"sel_exit",,1,,,,'W');
      _slutmp.win_sel(_wer);
      "tu wyjatek - rekord odkladany i okno zamykane aby uzytkownik nie musial zatwierdziac";
      "dwa razy nowej wartosci";
      _str:=MLCONNEC.WR;
      {? MLCONNEC.WR<>''
      || _slutmp.blank;
         _slutmp.NAZ:=MLCONNEC.WR;
         _str:=_slutmp.NAZ;
         _slutmp.find_rec()
      ?};
      {? _slutmp.select(,1) || _str:=_slutmp.NAZ ?}
   |? 'DZIALAN,FUN,ZAD,PODZAD,BZ_KOL'*MLCONNEC.ID
   ||_slutmp:=sql('select SLU.NAZ,SLU.OP,SLUAPPL.REFERENCE TAB_REF '+
                   'from SLUAPPL left join SLU using (SLUAPPL.SLU, SLU.REFERENCE) '+
                   'where SLUAPPL.GDZIE=\'F\' and SLU.WZ in (\'Funkcja\',\'Zadanie\',\'Podzadanie\',\'Działanie\')');
      _wer:=_slutmp.mk_sel('Słowniki użytkownika'@,'N',,'#ml_slobz_sel',1,1,20);
      _slutmp.win_fld(_wer,,'NAZ',,,,,,'Nazwa słownika'@);
      _slutmp.win_fld(_wer,,'OP',,,,,,'Opis słownika'@);
      _slutmp.win_act(_wer,0,'Formuła','Wybierz'@@,,,"sel_exit",,1,,,,'W');
      _slutmp.win_sel(_wer);
      "tu wyjatek - rekord odkladany i okno zamykane aby uzytkownik nie musial zatwierdziac";
      "dwa razy nowej wartosci";
      _str:=MLCONNEC.WR;
      {? MLCONNEC.WR<>''
      || _slutmp.blank;
         _slutmp.NAZ:=MLCONNEC.WR;
         _str:=_slutmp.NAZ;
         _slutmp.find_rec()
      ?};
      {? _slutmp.select(,1) || _str:=_slutmp.NAZ ?}
   |? 'ML_GRBZ'*MLCONNEC.ID
   || _mlgrtmp:=sql('select KOD,NAZWA '+
                   'from ML_GR '+
                   'where ML_GR.ROK=\':_a\' and ML_GR.WYK=\'T\' and ML_GR.AKTYWNA=\'T\'',$ROK_F.ref());
      _wer:=_mlgrtmp.mk_sel('Aktywne hierarchie słowników w roku %1'@[ROK_F.NAZ],'N',,'#ml_grbz_sel',1,1,20);
      _mlgrtmp.win_fld(_wer,,'KOD',,,,,,'Kod hierarchii'@);
      _mlgrtmp.win_fld(_wer,,'NAZWA',,,,,,'Nazwa'@);
      _mlgrtmp.win_act(_wer,0,'Formuła','Wybierz'@@,,,"sel_exit",,1,,,,'W');
      _mlgrtmp.win_sel(_wer);
      "tu wyjatek - rekord odkladany i okno zamykane aby uzytkownik nie musial zatwierdziac";
      "dwa razy nowej wartosci";
      _str:=MLCONNEC.WR;
      {? _mlgrtmp.select() || _str:=_mlgrtmp.KOD+'_'+_mlgrtmp.NAZWA ?}
   |? MLCONNEC.TP='PLANY' & +MLCONNEC.ID=3
   || _mlgrtmp:=sql('select KOD,NAZWA '+
                   'from ML_GR '+
                   'where ML_GR.ROK=\':_a\' and ML_GR.PLAN=\'T\'',$ROK_F.ref());
      _wer:=_mlgrtmp.mk_sel('Hierarchie słowników do planowania w roku %1'@[ROK_F.NAZ],'N',,'#ml_grbz_se1',1,1,20);
      _mlgrtmp.win_fld(_wer,,'KOD',,,,,,'Kod hierarchii'@);
      _mlgrtmp.win_fld(_wer,,'NAZWA',,,,,,'Nazwa'@);
      _mlgrtmp.win_act(_wer,0,'Formuła','Wybierz'@@,,,"sel_exit",,1,,,,'W');
      _mlgrtmp.win_sel(_wer);
      "tu wyjatek - rekord odkladany i okno zamykane aby uzytkownik nie musial zatwierdziac";
      "dwa razy nowej wartosci";
      _str:=MLCONNEC.WR;
      {? _mlgrtmp.select() || _str:=_mlgrtmp.KOD; _c:='' ?}
   |? MLCONNEC.TP='PLANY' & MLCONNEC.ID='STOR'
   ||  _ask:=FUN.choice('Wybierz działanie'@,1,'M - kwota z minusem'@,'P - strona przeciwna'@);
       {? _ask=1
       || _str:='M'
       |? _ask=2
       || _str:='P'
       || _str:=MLCONNEC.WR
       ?};
       _c:=''
   |? (MLCONNEC.TP='PLANY' & +MLCONNEC.ID=4) |
      ('SWYD,SDOC,SKOS,SNAL,SZOB,SPLW,SPLD'*MLCONNEC.ID)
   ||  _ask:=FUN.choice('Wybierz stronę'@,1,'Wn'@,'Ma'@);
       {? _ask=1
       || _str:='Wn'
       |? _ask=2
       || _str:='Ma'
       || _str:=MLCONNEC.WR
       ?};
       _c:=''
   |? MLCONNEC.TP='BUD_KON' & ('FWYD,FDOC,FKOS,FPLW,FPLD'*MLCONNEC.ID)
   || __str:=MLCONNEC.WR;
      popup
         (0,'Wybierz:',
            'Bilans otwarcia',,"__str:='Bilans otwarcia'",
            'Miesiąc',,"__str:='Miesiąc'",
            'Obroty',,"__str:='Obroty'",
            'Saldo',,"__str:='Saldo'",
            'Per Saldo',,"__str:='Per Saldo'",
            'Różnica stron',,"__str:='Różnica stron'",
            'Miesiąc-różn. stron',,"__str:='Miesiąc-różn. stron'"
         );
      _str:=__str;
      &__str;
      _c:=''
   |? MLCONNEC.ID='FILTR'
   || _ask:=FUN.choice('Wybierz ograniczenie: '@,1,'Kolorem'@,'Filtrem'@);
      {? _ask=1
      || _str:='K'
      |? _ask=2
      || _str:='F'
      || _str:=MLCONNEC.WR
      ?};
      _c:=''
   |? 6+MLCONNEC.ID='KONTR_'
   || _ask:=FUN.choice('Wybierz rodzaj kontroli: '@,1,'Nie (bez kontroli)'@,'Informacja'@,'Blokada'@);
      {? _ask=1
      || _str:='N'
      |? _ask=2
      || _str:='I'
      |? _ask=3
      || _str:='B'
      || _str:=MLCONNEC.WR
      ?};
      _c:=''
   |? MLCONNEC.TP='GLOBAL' & (('AKT,SUM,ED_WBZ,KOMAKT_H'*MLCONNEC.ID) | (3+MLCONNEC.ID='ZN_') | MLCONNEC.ID='CZY_ZBZ')
   || _ask:=FUN.choice('Wybierz: '@,1,'Tak'@,'Nie'@);
      {? _ask=1
      || _str:='T'
      |? _ask=2
      || _str:='N'
      || _str:=MLCONNEC.WR
      ?};
      _c:=''
   |? MLCONNEC.TP='GLOBAL' & MLCONNEC.ID='TRYB'
   || _ask:=FUN.choice('Wybierz tryb: '@,1,'T - ręcznie'@,'S - słownik'@);
      {? _ask=1
      || _str:='T'
      |? _ask=2
      || _str:='S'
      || _str:=MLCONNEC.WR
      ?};
      _c:=''
   |? MLCONNEC.TP='GLOBAL' & MLCONNEC.ID='SLBR'
   || _ask:=FUN.choice('Wybierz tryb: '@,1,'T - drzewo'@,'N - osobne słowniki'@);
      {? _ask=1
      || _str:='T'
      |? _ask=2
      || _str:='N'
      || _str:=MLCONNEC.WR
      ?};
      _c:=''
   ?}
?};
MLCONNEC.WR:=_a+_str+_c;
"PONIZSZY FRAGMENT KODU JEST ODPOWIEDZIALNY ZA ZMIANE WZORCA PODCZAS WPISYWANIA KONT";
"SYNTETYCZNYCH LUB ANALITYCZNYCH";
{? (MLCONNEC.AT='ROK_F')&(MLCONNEC.NP='rokbil')
|| {? 'SPR_BUD'*MLCONNEC.TP
   || {? 'USK,'*MLCONNEC.ID
      || exec('conwr_ok','ml_conn',1,1)
      |? 'AKR,WNW,NDE,NSP,NAD,NWY,NZL,NLZ,POT,POZ,ZPO'*MLCONNEC.ID
      || exec('conwr_ok','ml_conn',1,0)
      |? 'RBU,NAL'*MLCONNEC.ID
      || exec('conwr_ok','ml_conn',0,0)
      || exec('conwr_ok','ml_conn',2,1)
      ?}
   |? 'BUD_KON'*MLCONNEC.TP & +MLCONNEC.ID<4
   || exec('conwr_ok','ml_conn',1,1)
   ?}
?};
MLEX_OKN.ZN:=1;
exec('cnwrpr','ml_conn',MLCONNEC.WR);
0


\cnwrpo
::-------------------------------------------------------------------------------------------------------------------
::  UTW: RB [7.60]
:: OPIS: Formuła dla sprawdza poprawność parametrów. Jej działanie jest uzależnione od
::       pól identyfikujących zawartość pola MLCONNEC.WR.
::       Tabela MLCONNEC, pole WR, akcja PO REDAKCJI
:: HIST: AK [8.60+] 06.11.2005 - dla TYP = MLBUD_KO lista prefiksów kont analitycznych
::-------------------------------------------------------------------------------------------------------------------
{? (MLCONNEC.AT='ROK_F')&(MLCONNEC.NP='rokbil')
|| {? MLCONNEC.TP='GLOBAL'
   || {? (MLCONNEC.ID='SALD')|(MLCONNEC.ID='SAL_ROZW')
      || {? (MLCONNEC.WR='T')|(MLCONNEC.WR='N')
         || _wynik:=1
         || MLCONNEC.WR:='';_wynik:=0
         ?}
      |? (MLCONNEC.ID='WYR_NZ')
      || {? (MLCONNEC.WR='W')|(MLCONNEC.WR='K')
         || _wynik:=1
         || MLCONNEC.WR:='';_wynik:=0
         ?}
      |? (MLCONNEC.ID='DZTECH')
      || {? MLCONNEC.WR=''|ML_DZ.find_tab(,'SD',,':*',MLCONNEC.WR)
         || _wynik:=1;
            MLCONNEC.WR:=ML_DZ.SD;
            return()
         || MLCONNEC.WR:='';_wynik:=0
         ?}
      |? MLCONNEC.ID='DL_CZ'
      || {? MLCONNEC.WR='2' | MLCONNEC.WR='4' | MLCONNEC.WR='5'
         || _wynik:=1
         || MLCONNEC.WR:='';
            FUN.info('Parametr musi mieć wartość 2, 4 lub 5'@);
            _wynik:=0
         ?}
      |? MLCONNEC.ID='DL_DZ' | MLCONNEC.ID='DL_RZ'
      || {? #MLCONNEC.WR>=1 & #MLCONNEC.WR<=5
         || _wynik:=1
         || MLCONNEC.WR:='';
            FUN.info('Parametr musi mieć wartość od 1 do 5'@);
            _wynik:=0
         ?}
      |? MLCONNEC.ID='DL_PG' | MLCONNEC.ID='DL_PP'
      || {? #MLCONNEC.WR>=1 & #MLCONNEC.WR<=10
         || _wynik:=1
         || MLCONNEC.WR:='';
            FUN.info('Parametr musi mieć wartość od 1 do 10'@);
            _wynik:=0
         ?}
      || return()
      ?}
   || _wynik:={? ((MLCONNEC.TP='SPR_BUD')&('USK,'*MLCONNEC.ID))|((MLCONNEC.TP='BUD_KON')&((+MLCONNEC.ID)<4))
              || "tu sprawdzana jest poprawnosc pol zawierających listy kont analitycznych";
                 exec('conwr_ok','ml_conn',1,1)
              |? (MLCONNEC.TP='SPR_BUD')&('AKR,NAD,NDE,NLZ,NSP,NWY,NZL,POT,POZ,ZPO,NZO'*MLCONNEC.ID)
              || "tu sprawdzana jest poprawnosc pol zawierających pojedyncze konta analityczne";
                 exec('conwr_ok','ml_conn',1,0)
              |? (MLCONNEC.TP='SPR_BUD')&('MIN,NPO,RBU,WNW,WYP'*MLCONNEC.ID)
              || "tu sprawdzana jest poprawnosc pol zawierajacych pojedyncze konta syntetyczne";
                 exec('conwr_ok','ml_conn',0,0)
              |? (MLCONNEC.TP='BUD_ZAD')&('FUN,ZAD,PODZAD,DZIALAN,BZ_KOL'*MLCONNEC.ID)
              || "tu sprawdzana jest poprawnosc pol zawierajacych pojedyncze konta syntetyczne";
                 exec('conwr_ok','ml_conn',2,1)
              || exec('conwr_ok','ml_conn',2,1)
              ?}
   ?}
|| 1
?};
_wynik:=_wynik*(MLEX_OKN.OWR=MLCONNEC.WR);
"JESLI MIEDZY PRZECINKAMI BEDA TYLKO SPACJE - WYKASUJ ELEMENT";
{? _wynik&(MLCONNEC.AT='ROK_F')&(MLCONNEC.NP='rokbil')
|| _tmp:=MLCONNEC.WR;
   MLCONNEC.WR:='';
   {!
   |? _sh:=_tmp*','
   |! {? ((_sh-1)+_tmp)<>((_sh-1)*' ')
      || MLCONNEC.WR+=(_sh+_tmp)
      ?};
      _tmp:=_sh-_tmp
   !};
   {? _tmp<>(+_tmp*' ') || MLCONNEC.WR+=_tmp ?}
?};
{? (MLCONNEC.WR+1)=','
|| MLCONNEC.WR-=1
?};
"TU ZOSTANA ZMIENIONE WSZYSTKIE POZOSTALE SPACJE NA '?' - ABY OTRZYMAC MASKI KONT";
{? _wynik&(MLCONNEC.AT='ROK_F')&(MLCONNEC.NP='rokbil')&('SPR_BUD'*MLCONNEC.TP)&(~(MLCONNEC.ID*'WY_'))&MLCONNEC.ID<>'GRUO'
|| _tmp:=MLCONNEC.WR;
   _str:='';
   {!
   |? _sh:=_tmp*' '
   |! _str+=(_sh-1)+_tmp+'?';
      _tmp:=_sh-_tmp
   !};
   MLCONNEC.WR:=_str+_tmp
?};
::Jeśli TYP = MLBUD_KO - konta do budżety tworzymy prefiksy, bez znaków zapytania
{? _wynik&(MLCONNEC.AT='ROK_F')&(MLCONNEC.NP='rokbil')&('BUD_KON'*MLCONNEC.TP)&(~(MLCONNEC.ID*'WY_')) &((+MLCONNEC.ID)<4)
|| MLCONNEC.WR:=STR.gsub(MLCONNEC.WR,' ','');
   STR.split(MLCONNEC.WR,',');
   {? var_pres('__Rokbud')=7
   || _sep:=ROK_F.SEP
   || _sep:=SSTALE.AR().SEP
   ?};
   _tmp:='';
   {!
   |?
      _str:=STR.get_word();
      {!
      |?
         _sh:=_str+1;
        {?_sh=_sep
         ||_str:=_str-1
         ?};
         _sh=_sep
      !};
      _tmp+=_str+',';
      STR.next()
   !};
   {? _tmp+1=',' || _tmp:=_tmp-1 ?};
   MLCONNEC.WR:=_tmp
?};
MLEX_OKN.OWR:=MLCONNEC.WR;
_wynik


\wr_wzor
::-------------------------------------------------------------------------------------------------------------------
::  UTW: RB [x.xx]
:: OPIS: Zwraca wzorzec dla pola MLCONNEC.WR, który określa na bieżąco podczas edycji pola na podstawie zawartości
::       tego pola. Na poczatku dodaje przecinek do krotek ktore grupuja np. kilka kont itp
::-------------------------------------------------------------------------------------------------------------------
"JESLI PARAMETR ZAWIERA WIELE SYMBOLI  - DODAJ PRZECINEK";
{? (MLCONNEC.AT='ROK_F')&(MLCONNEC.NP='rokbil')&((MLCONNEC.WR+1)<>',')&(MLCONNEC.WR<>'')
|| {? 'SPR_BUD'*MLCONNEC.TP
   || {? 'USK,'*MLCONNEC.ID
      || MLCONNEC.WR+=','
      ?}
   |? 'BUD_KON'*MLCONNEC.TP & +MLCONNEC.ID<4
   || MLCONNEC.WR+=','
   ?}
?};
MLEX_OKN.OWR:=MLCONNEC.WR; "na podstawie tego pola okreslane jest co ma zrobic formuła po redakcji";
{? (MLCONNEC.AT='ROK_F')&(MLCONNEC.NP='rokbil')
|| {? MLCONNEC.TP='GLOBAL'
   || {? (MLCONNEC.ID='SALD')|(MLCONNEC.ID='SAL_ROZW')|(MLCONNEC.ID='WYR_NZ')
      || 'U&'
      || ''
      ?}
   |? 'MLBUD_KO,SPR_BUD'*MLCONNEC.TP & ((+MLCONNEC.ID)<4)
   || MLEX_OKN.WZ:='';
      _tmpstr:=MLCONNEC.WR;
      {!
      |? _p:=_tmpstr*',';"pozycja przecinka";
         {? var_pres('__Rokbud')=7 & ROK_F.seek(__Rokbud)
         || _sep:=ROK_F.SEP
         || _sep:=SSTALE.AR().SEP
         ?};
         _s:=_tmpstr*_sep; "pozycja separatora";
         "tu nastąpi wpisanie wzorca do MLEX_OKN.WZ";
         "przypadek _p=_s zachodzi tylko gdy _p=_s=0 wiec nie mozna go pominac";
         {? ((_p<_s)|(_s=0))&(_p>0)
         || MLEX_OKN.WZ+=(_p-1)*'x'+',';
            _tmpstr:=_p-_tmpstr
         |? (_s>0)
         || MLEX_OKN.WZ+=(_s-1)*'x'+_sep;
            _tmpstr:=_s-_tmpstr
         ?};
         _p|_s
      !};
      {? +_tmpstr
      || MLEX_OKN.WZ+=(+_tmpstr)*'x'
      ?};
      {? MLEX_OKN.WZ=''
      || MLEX_OKN.WZ:='x'
      ?};
      MLEX_OKN.WZ+='$';
      MLEX_OKN.WZ
:: WS [10.20] - 16.05.2008 - dodany pusty wzorzec dla innych przypadków (inaczej byl blad)
   || ''
   ?}
|| ''
?}


\rb_conn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [8.70]
:: OPIS: Wyświetla okno z parametrami wydruków budżetowych bieżącego roku
::----------------------------------------------------------------------------------------------------------------------
_x:=MLCONNEC.ndx_tmp(,,'AT',,0,'NP',,0,'NR',,0,'TP',,0,'OP',,0);
MLCONNEC.index(_x);
MLCONNEC.clear;
MLCONNEC.prefix('ROK_F', ref_name(ROK_F.ref), #ROK_F.ref(), 'SPR_BUD');
CON_TP:='SPR_BUD';
MLCONNEC.select;
MLCONNEC.ndx_drop(_x)


\rb_connz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.20]
:: OPIS: Wyświetla okno z parametrami do zadań budżetowych bieżącego roku
::----------------------------------------------------------------------------------------------------------------------
_x:=MLCONNEC.ndx_tmp(,,'AT',,0,'NP',,0,'NR',,0,'TP',,0,'NR',,0);
MLCONNEC.index(_x);
MLCONNEC.clear;
MLCONNEC.prefix('ROK_F', ref_name(ROK_F.ref), #ROK_F.ref(), 'BUD_ZAD');
CON_TP:='BUD_ZAD';
MLCONNEC.select;
MLCONNEC.ndx_drop(_x)


\cnwrpr
::-------------------------------------------------------------------------------------------------------------------
::  UTW: RB [x.xx]
:: OPIS: Formuła wywoływana przed redakcja pola MLCONNEC.WR. Zminna MLEX_OKN.ZN określa sposób w jaki ostatnie znaki
::       zostały wpisane - MLEX_OKN.ZN=1, oznacza wpisanie reczne, MLEX_OKN.ZN:=0 poprzez użycie słownika.
::       Zmienna ta jest sprawdzana nastepnie w formule 'conwr_ok/connect.fml'
::-------------------------------------------------------------------------------------------------------------------
MLEX_OKN.ZN:=1


\conwr_ok
::-------------------------------------------------------------------------------------------------------------------
::  UTW: RB [7.60]
:: OPIS: Sprawdza konto -w zależnosci od parametru _a. W przypadku niepoprawnych kont syntetycznych
::       formuła czyści jego wartość,  w przypadku konta analitycznych kasuje błędne poziomy.
::   WE: _a - typ konta (_a=0 konto syntetyczne lub analityczne,1- symbol lub/i następująca po nim analityke,
::            2-parametr dowolnego typu,traktowany jako string o dowolnej zawartości
::       _b - czy występuje wiele wartości oddzielonych przecinkami[0-tylko jedna,1 -wiele]
::   WY: 1 - prawidłowo wypełnione, w przypadku listy lub analityki konta chodzi o element na którym
::       znajduje sie kursor[czyli np. biezaco wypelniane konto wraz z analitykami)
::       2 - element nie jest jeszcze w pełni wpisany i pozostawiony zostanie bez zmian
::       0 - oznacza błąd i powoduje wycofanie ostatniego znaku i powrót kursora w poprzednie miejsce
:: HIST: AK [8.70] 08.05.2006 - Naprawa błędnego prefiksowania tabeli BUD
::-------------------------------------------------------------------------------------------------------------------
_wynik:=1;
{? MLCONNEC.WR<>''
|| "ROZBICIE ZAWARTOSCI POLA MLCONNEC.WR NA TRZY STRINGI - W TYM SRODKOWY ROBOCZY";
   {? var_pres('__Rokbud')=7
   || _sep:=ROK_F.SEP;
      _synt:=ROK_F.SYNT;
      _rokf:=ROK_F.ref
   || _sep:=SSTALE.AR().SEP;
      _synt:=SSTALE.AR().SYNT;
      _rokf:=SSTALE.AR
   ?};
   _ash:=0;
   _pos:=get_cpos;
   {? _b=0
   || _str:=MLCONNEC.WR;
      _k:='';
      _m:=''
   |? _b=1
   || _str:=MLCONNEC.WR;
      _ash:=0;       "wyznacza pozycje ostatniego przecinka w pierwszej czesci stringa _str";
                     "pozycja kursora - wartosc skojarzona z tą pozycja stringa zostanie sprawdzona";
                     "_tmpsh - przesunięcie w stringu tymczasowym";
      "czy kursor znajduje się za separatorem analityki lub po przecinku - jesli tak i jesli";
      "symbol ostatnio wpisanej analityki byl wpisany recznie (a wiec MLEX_OKN.ZN=1) cofnij o 1 pozycje";
      "po to aby wziac odpowiedni element listy";
      _ost_zn:=((_pos-1)+_str)+MLEX_OKN.ZN;
      {? (_ost_zn=_sep)|(_ost_zn=',')
      || _pos-=1
      ?};
      {!
      |?
         _tmpsh:=_str*','; _tmpsh & ((_ash+_tmpsh)<_pos)
      |!
         _str:=_tmpsh-_str; _ash+=_tmpsh;"szukanie przecinkow w dalszej czesci stringu"
      !};
      _k:=_ash+MLCONNEC.WR;"_k - pierwsza czesc stringu - po edycji trzeba bedzie ją dokleić na początku";
      _str:=_ash-MLCONNEC.WR;
      {? _tmpsh:=_str*','
      || _m:=((_tmpsh-1)-_str); "koncowa czesc stringu - doklejana po edycji";
         _str:=(_tmpsh-1)+_str; "czesc stringu 'obrabianego' - potrzebna w razie gdy uzytkownik zrezygnuje ";
                          "z wyboru w slowniku"
      || _m:=''
      ?}
   ?};
   {? _a=0 | _a=1
   || KS.cntx_psh;
      KS.index('SYM');
      KS.clear;
      "SPRAWDZANIE CZY WSZYSTKO W PORZADKU Z KONTEM SYNTETYCZNYM";
      {? ((_synt+_str)=(_synt*' '))|(+_str<_synt)|((_synt+_str)*' ')
      || _str:=form(_str,_synt);
         _wynik:=2
      |? ~KS.find_key(_rokf,_synt+_str)
      || FUN.emsg('Brak konta syntetycznego o podanym symbolu: '+(_synt+_str),'UWAGA!');
         _str:='';
         _wynik:=0
      || _poz:=1;
         "sprawdzanie analityki";
         {? _a=1
         || BUD.cntx_psh;
            _ndx:=BUD.ndx_tmp(,1,'KS','ROK',0,'KS','SYM',0,'POZ',,0);
            BUD.index(_ndx);
            SLO.cntx_psh;
            SLO.index('SL');
            BUD.prefix(_rokf,_synt+_str);
            _zost:=(_synt+(+_sep))-_str;
            _str:=_synt+_str;
            {!
            |? BUD.find_key(_poz)&_wynik
            |! _akt:=BUD.SLU().SLU().DL+_zost;
               _zost:=(BUD.SLU().SLU().DL+(+_sep))-_zost;
               {!
               |? (+_akt)&((_akt+1)=' ')
               |! _akt:=_akt-1
               !};
               {? SLO.prefix(BUD.SLU().SLU().ref);
                  SLO.find_key(_akt)
               || _str+=_sep+form(_akt,BUD.SLU().SLU().DL);
                  {? (+_akt<BUD.SLU().SLU().DL)
                  || _wynik:=2
                  ?}
               |? (_akt='')|(_akt*' ')|(_akt*'?')
               || _str+=_sep+form(_akt,BUD.SLU().SLU().DL);
                  _wynik:=2
               || _wynik:=0
               ?};
               _poz+=1
            !};
            SLO.cntx_pop;
            BUD.ndx_drop(_ndx);
            BUD.cntx_pop
         ?}
      ?};
      KS.cntx_pop
   ?};
   {? _wynik=0
   || MLCONNEC.WR:=MLEX_OKN.OWR
   || MLCONNEC.WR:=_k+_str+_m
   ?};
   "jesli MLEX_OKN.ZN=0 znaczy to ze ostatni element wybrany byl ze slownika a nie wpisany recznie";
   "ustawianie kursora; jesli wynik=1 - nastepny element/poziom,";
   "jesli 0 - powrot kursora do poprzedniego miejsca";
   {? ~MLEX_OKN.ZN
   || _pos+=1;"po to aby kursor zawsze przechodzil do nastepnego poziomu analityki";
      {!
      |? (~((_sep+',')*(((_pos-1)+MLCONNEC.WR)+1)))&(_pos<=+MLCONNEC.WR)
      |! _pos+=1
      !}
   |? _wynik=0
   || {? ((_sep+',')*(((_pos-1)+MLCONNEC.WR)+1))&((((_pos-2)+MLCONNEC.WR)+1)=' ')
      || _pos-=2
      || _pos-=1
      ?}
   ?};
   set_cpos(_pos)
?};
_wynik


\znajdz
::-------------------------------------------------------------------------------------------------------------------
::  UTW: RB [x.xx]
:: OPIS: Formuła wyszukuje i zwraca wynik poszukiwania rekordu z tabeli MLCONNEC. Funkcja szuka rekordu z bieżącego
::       roku.
::   WE: _a - typ,
::       _b - identyfikator.
::-------------------------------------------------------------------------------------------------------------------
MLCONNEC.cntx_psh;
MLCONNEC.index('ATNPNRTP');
{? var_pres('__Rokbud')=7
|| _kodr:=#ROK_F.ref()
|| _kodr:=#SSTALE.AR
?};
MLCONNEC.prefix('ROK_F', ref_name(ROK_F.ref), _kodr, _a,_b);
_wyn:={? MLCONNEC.first
      || MLCONNEC.WR
      || ''
      ?};
MLCONNEC.cntx_pop;
_wyn


\con_put
::-------------------------------------------------------------------------------------------------------------------
::  UTW: WS [1210]
:: OPIS: Aktualizuje parametr
::   WE: _a - #ROK_F.ref()
::       _b - typ
::       _c - identyfikator.
::       _d - nowa wartość
::-------------------------------------------------------------------------------------------------------------------
MLCONNEC.cntx_psh;
MLCONNEC.index('ATNPNRTP');
MLCONNEC.prefix('ROK_F', ref_name(ROK_F.ref), _a, _b,_c);
{? MLCONNEC.first
|| MLCONNEC.WR:=_d;
   _wyn:=MLCONNEC.put(1)
|| _wyn:=0
?};
MLCONNEC.cntx_pop;
_wyn


\typ_kon
::---------------------------------------------------------------------------------------------------------------------
::  UTW: WS [$1210]
:: OPIS: Pobiera MLCONNEC.ID - z parametrow budżetu dla zadanego konta
::   WE: _a - konto
::   WY: ID lub 'XXX'
::---------------------------------------------------------------------------------------------------------------------
_typ:='';
_dalej:=1;
MLCONNEC.cntx_psh; MLCONNEC.index('ATNPNRLP');
MLCONNEC.prefix('ROK_F', ref_name(ROK_F.ref), #ROK_F.ref(), 'BUD_KON');
{? MLCONNEC.first()
|| {!
   |?
      STR.split(MLCONNEC.WR,',');
      {!
      |?
         _str:=STR.get_word();
         {?_str<>'' & (_str=(+_str)+_a)
         || _typ:=MLCONNEC.ID; _dalej:=0
         || _typ:='XXX'
         ?};
         STR.next() & _dalej
      !};
      MLCONNEC.next() & _dalej
   !}
|| _typ:='XXX'
?};
MLCONNEC.cntx_pop();
_typ


\par_kol
::---------------------------------------------------------------------------------------------------------------------
::  UTW: WS [$1210]
:: OPIS: Ustawia kolor w parametrach
::  CONNEC#01#01 CONNEC#01#02
::---------------------------------------------------------------------------------------------------------------------
{? (MLCONNEC.TP='BUD_KON' & +MLCONNEC.ID=3) | (MLCONNEC.TP='PLANY' & +MLCONNEC.ID=4 & MLCONNEC.ID+1='K') |
   (MLCONNEC.TP='SPR_BUD' & 3+MLCONNEC.ID<>'WY_' & 3+MLCONNEC.ID<>'ZNG')
|| 'CONNEC#01#01'
|? (MLCONNEC.TP='BUD_KON' & 1+MLCONNEC.ID='S') | (MLCONNEC.TP='PLANY' & +MLCONNEC.ID=4 & MLCONNEC.ID+1='S')
|| 'CONNEC#01#02'
|? (MLCONNEC.TP='BUD_KON' & 1+MLCONNEC.ID='F') | (MLCONNEC.TP='PLANY' & MLCONNEC.ID='STOR') |
   (MLCONNEC.TP='GLOBAL' & 6+MLCONNEC.ID='KONTR_') | (MLCONNEC.TP='BUD_ZAD' & 3+MLCONNEC.ID<>'ML_')
|| 'CONNEC#01#03'
|?  (MLCONNEC.TP='PLANY' & +MLCONNEC.ID=3) | (MLCONNEC.TP='GLOBAL' & 3+MLCONNEC.ID='DL_') |
    (MLCONNEC.TP='SPR_BUD') | (MLCONNEC.TP='BUD_ZAD')
|| 'CONNEC#01#04'
|| ''
?}

:Sign Version 2.0 jowisz:1028 2019/06/07 15:59:55 530fdc26e035941043440273f9130f10c17cdb37649dde6049a42a69fa9252e4cc1adb5cc8eea1de7e471620e606d2e7c2804b06f367804b176a5b26db858942f6f5c1fd66760fad08a5885639461b94091c81347b55ef72ad1af5f0db9c8f62bf4a132a4318dcecd055a329f1ca8193d5616ce2f2561d63078b0d850b2a1967
