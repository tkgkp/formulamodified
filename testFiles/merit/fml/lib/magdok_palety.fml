:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: magdok_palety.fml
:: Utworzony: 05.03.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Formuły do obsługi dokumentów magazynowych - magazyn z obsługą palet
::======================================================================================================================


\znacznik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: ustawia znaczniki P R W i STAN
::   WE: _a - ref palety
::  OLD: \znacznik/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('FindAndGet','#table',PAL,_a,,"BEZOZN<>'B'",1)
|| _akt:=DK_L.name()+3;
   _p:=0;
   _r:=0;
   _w:=0;
   _l:=0;
   _mag:=null;
   DK_LN.cntx_psh();
   DK_L.cntx_psh();
   ND.cntx_psh();
   DK.cntx_psh();
   OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.last()
   || {!
      |? exec('mag_open','open_tab',ST.ODDZ,($OKR.ROK+2));
         DK_L.index('PALDTTM');
         DK_L.prefix(_a);
         {? DK_L.last()
         || {? _mag=null & DK_L.DK<>null() & DK_L.DK().Z='T' || _mag:=DK_L.MG ?};
            {!
            |? {? ~_p & DK_L.DK<>null & DK_L.DK().PLUS='T'
               || _p:={? DK_L.DK().Z='T' || 1 || -1 ?}; {? ~_l || _l:=1 ?}
               |? ~_w & DK_L.DK<>null & DK_L.DK().PLUS='N'
               || _w:={? DK_L.DK().Z='T' || 1 || -1 ?}; {? ~_l || _l:=3 ?}
               |? ~_r & DK_L.DK_LN<>null
               || _r:={? DK_L.DK_LN().AKC='T' || 1 || -1 ?}; {? ~_l || _l:=2 ?}
               ?};
               (fabs(_p)+fabs(_r)+fabs(_w))<3 & DK_L.prev()
            !}
         ?};
         (fabs(_p)+fabs(_r)+fabs(_w))<3 & OKR.prev()
      !}
   ?};
   exec('mag_open','open_tab',1+_akt,_akt+2);
   DK_LN.cntx_pop();
   DK_L.cntx_pop();
   ND.cntx_pop();
   DK.cntx_pop();
   OKR.cntx_pop();
   PAL.cntx_psh();
   PAL.clear();
   {? PAL.seek(_a) & PAL.STAN<>'I'
   || PAL.STAN:={? _l=1 || 'P'
                |? _l=2 || 'R'
                |? _l=3 || 'W'
                |? PAL.STAN='B' & PAL.ROZ='B' || 'B'
                |? PAL.STAN<>'N' || 'T'
                || 'N'
                ?};
      PAL.P:={? _p=1 || 'T' |? _p=-1 || 'W' || 'N' ?};
      PAL.R:={? _r=1 || 'T' |? _r=-1 || 'W' || 'N' ?};
      PAL.W:={? _w=1 || 'T' |? _w=-1 || 'W' || 'N' ?};
      {? _mag<>null || PAL.MG:=_mag ?};
      PAL.M:=exec('czynakpl','magdok_palety',PAL.ref());
      {? PAL.ROZ<>'B' || PAL.ROZ:=exec('czyrozp','magdok_palety',PAL.ref()) ?};
      PAL.put(1);
      exec('newscsql','magdok_palety',PAL.ref());
      exec('statsPAL','magdok_palety',PAL.ref())
   ?};
   PAL.cntx_pop()
?};
~~


\czynakpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza czy dana paleta jest na kompletacji wysylki
::   WE: _a -ref PAL
::   WY: 'T'-tak 'N'-nie 'W'-dokument wydania
::  OLD: \czynakpl/palety.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='N';
EANN.cntx_psh();
EANP.cntx_psh();
PAL.cntx_psh();
EANP.index('TYP');
EANP.prefix('Z');
{? EANP.first()
|| {!
   |? {? EANP.EANN().AKT='T' & EANP.PAL=_a || _wyn:='T' ?};
      EANP.next()
   !}
?};
{? _wyn='N'
|| EANP.index('TYP');
   EANP.prefix('W');
   {? EANP.first()
   || {!
      |? {? EANP.EANN().AKT='T' & EANP.PAL=_a || _wyn:='W' ?};
         EANP.next()
      !}
   ?}
?};
EANN.cntx_pop();
EANP.cntx_pop();
PAL.cntx_pop();
_wyn


\czyrozp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy paleta zostala rozpakowana
::   WE: _a - ref palety
::   WY: 'T' lub 'N'
::  OLD: \czyrozp/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_rozp:=0;
PAL.cntx_psh();
PAL_POZ.cntx_psh();
PAL.clear();
{? PAL.seek(_a)
|| {? PAL.AKT='N'
   || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
   || PAL_POZ.use('paletyp')
   ?};
   PAL_POZ.index('PAL');
   PAL_POZ.prefix(PAL.ref());
   {? PAL_POZ.first()
   || {!
      |? _rozp:=PAL_POZ.ILP<>PAL_POZ.IL;
         ~_rozp & PAL_POZ.next()
      !}
   ?}
?};
PAL.cntx_pop();
PAL_POZ.cntx_pop();
{? _rozp || 'T' || 'N' ?}


\newscsql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wypelnienie pol SCSQL
::   WE: _a - ref palety PAL.ref()
::  OLD: \newscsql/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a<>null
||
:: lista dokumentow przychodowych dla danej palety
   _akt:=DK_L.name()+3;
   _refnd:='';

   DK_LN.cntx_psh();
   DK_L.cntx_psh();
   ND.cntx_psh();
   DK.cntx_psh();
   OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.last()
   || {!
      |? exec('mag_open','open_tab',ST.ODDZ,($OKR.ROK+2));
         DK_L.index('PALDTTM');
         DK_L.prefix(_a);
         {? DK_L.last() & DK_L.find_tab('first','DK',,'<>',null(),'DK','PLUS','=','T')
         || {! |? DK_L.find_tab('next','DK',,'<>',null(),'DK','PLUS','=','T') !};
            _refnd:=$DK_L.DK().N
         ?};
         _refnd='' & OKR.prev()
      !}
   ?};

   {? _refnd<>''
   || _palpoz:='';
      _msk:=form(8+_refnd)+3;
      exec('mag_open','open_tab',1+_msk,_msk+2);
      ND.clear();
      {? ND.seek(_refnd)
      || DK.index('DOKMAG');
         DK.prefix(ND.ref());
         {? DK.first()
         || {!
            |? _mat:=DK.M().KTM;
               _dkc:=DK.DK_C;
               _cen:=DK.C;
               _scsql:={? DK.Z='T' || DK.PRDK || $DK.ref() ?};
               _stats:=DK.STATS;
               DK_L.cntx_psh();
               DK_L.index('DK');
               DK_L.prefix(DK.ref(),null);
               {? DK_L.first() & DK_L.find_tab('first','PAL',,'=',_a)
               || {!
                  |? _ile:=DK_L.IL;
                     {? DK_L.PAL().AKT='N'
                     || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
                     || PAL_POZ.use('paletyp')
                     ?};
                     PAL_POZ.index('PAL');
                     PAL_POZ.prefix(DK_L.PAL,_mat,_mat);
                     {? PAL_POZ.first()
                     || {!
                        |? _jest:={? _palpoz*($PAL_POZ.ref()) || 1 || 0 ?};
                           {? ~_jest & PAL_POZ.ILP=_ile & PAL_POZ.DK_C=_dkc & PAL_POZ.C=_cen
                           || _palpoz+=';'+($PAL_POZ.ref());
                              PAL_POZ.SCSQL:=_scsql;
                              PAL_POZ.STATS:=_stats;
                              PAL_POZ.put(1);
                              _jest:=2
                           ?};
                           _jest<2 & PAL_POZ.next()
                        !}
                     ?};
                     DK_L.find_tab('next','PAL',,'=',_a)
                  !}
               ?};
               DK_L.cntx_pop();
               DK.next()
            !}
         ?}
      ?}
   || PAL_POZ.index('PAL');
      PAL_POZ.prefix(PAL.ref());
      {? PAL_POZ.first()
      || {!
         |? {? PAL_POZ.RSQL=''
            || PAL_POZ.SCSQL:='';
               PAL_POZ.STATS:=null;
               PAL_POZ.put(1)
            ?};
            PAL_POZ.next()
         !}
      ?}
   ?};
   exec('mag_open','open_tab',1+_akt,_akt+2);

   DK_LN.cntx_pop();
   DK_L.cntx_pop();
   ND.cntx_pop();
   DK.cntx_pop();
   OKR.cntx_pop()
?}


\poz_bpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: dodanie pozycji do palety buforowanej
::   WE: _a - 1-dodanie 0-usuniecie
::       _b - ref SQL palety
::       _c - ref SQL palety z której pozycja się pojawiła
::       _d - indeks materialowy - KTM
::       _e - ilosc
::       _f - cena (-1 - pomijac sprawdzenie - pozycje reorganizacji)
::       _g - termin waznosci
::       [_h] - ref SQL dostawy
::       [_i] - magazyn
::       [_j] - cecha
::       [_k] - 1-update jeśli to możliwe 0(domyślnie)-nie
::   WY: 1-ok 0-nie udalo sie
::  OLD: \poz_bpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=8 || {? type_of(_h)<>2 || _h:='' ?} || _h:='' ?};
{? _>=9 || {? type_of(_i)<>7 || _i:=null ?} || _i:=null ?};
{? _>=10 || {? type_of(_j)<>7 || _j:=null ?} || _j:=null ?};

_upd:={? var_pres('_k')=type_of(0) || _k || 0 ?};

PAL.cntx_psh();
PAL_POZ.cntx_psh();
_rpal:=exec('FindAndGet','#table','PAL',_b,,,null());
PAL.clear();
{? PAL.seek(_rpal)
|| _kodold:=exec('FindAndGet','#table','PAL',_c,,"KODK",'');
   {? PAL.ROZ<>'B' || PAL.ROZ:='B'; PAL.put(1) ?};
   {? PAL.AKT='N'
   || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
   || {? PAL.BEZOZN='B'
      || PAL_POZ.use('palet%1'[form(ST.AR-2000,-2,0,'99')])
      || PAL_POZ.use('paletyp')
      ?}
   ?};
   {? _a
   || {? _h<>'' & _i<>null
      || _rdk:=BB.sqlint(_h);
         _ndk:=form(8+_h);
         _tab:=exec('aktrdndk','magdok_palety',_i,_rdk,_ndk,exec('FindAndGet','#table','PAL',_c,,,null()));
         _prdk:=form(_tab[2])+form(('0'*8)+(-BB.hex(_tab[1])),-8);
         {? _prdk<>_h || _h:=_prdk ?};
         obj_del(_tab)
      ?};
      _refpoz:=null();

      {? _upd
      || PAL_POZ.index('PAL');
         PAL_POZ.prefix(_rpal,_d,);
         {? PAL_POZ.first()
          & PAL_POZ.find_tab('first','RSQL',,'=',_c,'C',,'=',_f,'TW',,'=',_g,'SCSQL',,'=',_h,'DK_C',,'=',_j)
         || _refpoz:=PAL_POZ.ref()
         ?}
      ?};
      {? _refpoz=null()
      || PAL_POZ.prefix();
         PAL_POZ.blank();
         PAL_POZ.PAL:=_rpal;
         PAL_POZ.M:=exec('FindInSet','#table','M','MATKTM',_d,_d);
         PAL_POZ.IL:=PAL_POZ.ILP:=_e;
         PAL_POZ.RSQL:=_c;
         PAL_POZ.C:=_f;
         PAL_POZ.TW:=_g;
         PAL_POZ.SCSQL:=_h;
         PAL_POZ.SCEAN:='';
         PAL_POZ.AKT:='T';
         PAL_POZ.JM:=PAL_POZ.M().J;
         PAL_POZ.DK_C:=_j;
         exec('uzupIDkod','magdok_palety',PAL_POZ);
         PAL_POZ.KODOLD:=_kodold;
         PAL_POZ.STATS:={? PAL_POZ.SCSQL<>''
                        || exec('FindAndGet','#table',DK,PAL_POZ.SCSQL,,"STATS",null())
                        || null()
                        ?};
         PAL_POZ.add(1)
      || PAL_POZ.IL+=_e;
         PAL_POZ.ILP+=_e;
         PAL_POZ.put(1)
      ?}
   || _ilw:=_e;
      PAL_POZ.index('PAL');
      PAL_POZ.prefix(_rpal,_d,_d);
      {? PAL_POZ.first()
      || {!
         |? {? PAL_POZ.ILP>0 & PAL_POZ.RSQL=_c & (PAL_POZ.C=_f | _f=-1) & PAL_POZ.TW=_g
            || {? _ilw<PAL_POZ.ILP
               || PAL_POZ.ILP-=_ilw;
                  PAL_POZ.put(1);
                  _ilw:=0;
                  0
               |? _ilw>=PAL_POZ.ILP
               || _ilw-=PAL_POZ.ILP;
                  PAL_POZ.del()
               || PAL_POZ.next()
               ?}
            || PAL_POZ.next()
            ?}
         !}
      ?}
   ?};
   exec('ktm2pal','magdok_palety',0)
?};
PAL.cntx_pop();
PAL_POZ.cntx_pop()


\ktm2pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wypelnia pole PAL.MKTM
::   WE: [_a] - odswiezac okienko palet 1 (domyslnie), 0 nie
::       [_b] - ref PAL domyslnie brak - aktualny PAL.ref
::  OLD: \ktm2pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? _>=2 || {? type_of(_b)<>7 || _b:=null ?} || _b:=null ?};

_ktm:='';
PAL.cntx_psh();
PAL_POZ.cntx_psh();
{? _b<>null || PAL.clear(); PAL.seek(_b) || PAL.get() ?};
{? PAL.AKT='N' || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99')) || PAL_POZ.use('paletyp') ?};
PAL_POZ.index('PAL');
PAL_POZ.prefix(PAL.ref());
{? PAL_POZ.first()
|| {!
   |? {? _ktm=''
      || _ktm:=PAL_POZ.M().KTM;
         PAL_POZ.next()
      |? _ktm<>PAL_POZ.M().KTM
      || _ktm:='<KILKA POZYCJI>';
         0
      || PAL_POZ.next()
      ?}
   !}
?};
PAL.MKTM:=_ktm;
PAL.put(1);
PAL.cntx_pop();
PAL_POZ.cntx_pop();
{? _a
|| JM.f_clear();
   _ch:={? PAL.win_sel('?')*'WYB' || 'W' || '' ?};
   grp_disp(PAL,_ch+'SEL')
?};
1


\aktrdndk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: szuka aktualnego RDK,NDK
::   WE: _a - ref magazynu
::       _b - RDK
::       _c - NDK
::       _d - ref palety
::   WY: tabela RDK,NDK
::  OLD: \aktrdndk/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new(2);
_wyn[1]:=_b;
_wyn[2]:=_c;

_prdk:=form(_c)+form(('0'*8)+(-BB.hex(_b)),-8);
_msk:=DK.name()+3;
_jest:=0;

SC.cntx_psh();
ND.cntx_psh();
DK.cntx_psh();
DK_L.cntx_psh();
PAL_POZ.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.last()
|| {!
   |? SC.use('stc__'+(1+_msk)+form(OKR.ROK-2000,-2,0,'99'));
      _ndx:=SC.ndx_tmp('',0,'MAG',,0,'PRDK',,0,'PRDK',,0);
      SC.index(_ndx);
      SC.prefix(_a,_prdk,_prdk);
      {? SC.first()
      || {!
         |? _new:=SC.NDK+3;
            exec('mag_open','open_tab',1+_new,_new+2);
            DK.clear();
            {? DK.seek(SC.RDK,)
            || DK_L.index('DK');
               DK_L.prefix(DK.ref(),null);
               {? DK_L.first()
               || {!
                  |? {? DK_L.PAL=_d & DK_L.ZPALET<>2
                     || _jest:=1;
                        _wyn[1]:=SC.RDK;
                        _wyn[2]:=SC.NDK
                     ?};
                     ~_jest & DK_L.next()
                  !}
               ?}
            ?};
            ~_jest & SC.next()
         !}
      ?};
      SC.ndx_drop(_ndx);
      ~_jest & OKR.prev()
   !}
?};

exec('mag_open','open_tab',1+_msk,_msk+2);
SC.cntx_pop();
ND.cntx_pop();
DK.cntx_pop();
DK_L.cntx_pop();
PAL_POZ.cntx_pop();
_wyn


\zwrilpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: zwraca podana ilosc na podana palete wg indeksu materialowego
::   WE: _a - ref palety
::       _b - indeks materialowy
::       _c - ilosc do zwrotu
::       _d - cena
::       _e - termin waznosci
::   WY: 1-zwrocono 0-nie powiodlo sie
::  OLD: \zwrilpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_ilz:=_c;
PAL.cntx_psh();
PAL.clear();
{? PAL.seek(_a)
|| {? PAL.AKT='N'
   || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
   || PAL_POZ.use('paletyp')
   ?};
   PAL_POZ.index('PAL');
   PAL_POZ.prefix(PAL.ref(),_b,_b);
   {? PAL_POZ.first()
   || {!
      |? {? (PAL_POZ.C=_d | _d=-1) & PAL_POZ.TW=_e
         || {? PAL_POZ.ILP<PAL_POZ.IL
            || _rozn:=PAL_POZ.IL-PAL_POZ.ILP;
               {? _rozn>=_ilz
               || PAL_POZ.ILP+=_ilz;
                  exec('akt_palp','magdok_palety');
                  _wyn:=PAL_POZ.put(1);
                  _ilz:=0
               || PAL_POZ.ILP+=_rozn;
                  exec('akt_palp','magdok_palety');
                  _wyn:=PAL_POZ.put(1);
                  _ilz-=_rozn
               ?}
            ?}
         ?};
         _ilz>0 & PAL_POZ.next()
      !}
   ?}
?};
PAL.cntx_pop();
{? _ilz>0 || _wyn:=0 ?};
_wyn


\akt_palp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: aktualizuje IL2 po rozpakowaniu
::   WE: [_a] - ref indeksu materialowego
::       [_b] - ref jednostki miary
::  OLD: \akt_palp/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
_ws2:=exec('prz','jm',PAL_POZ.M,PAL_POZ.J2,PAL_POZ.M().J);
_dokl_m:=exec('jaka_dok_m','jm',PAL_POZ.M);
_dokl_s:=exec('jaka_dok_mjm','jm',PAL_POZ.M,PAL_POZ.J2,PAL_POZ.M().J);
{? _dokl_s<0 || _dokl_s:=_dokl_m ?};

{? PAL_POZ.WS2>0
|| _il2:=PAL_POZ.ILP/PAL_POZ.WS2 $ (_dokl_s+1);
   roundmet(BEER.MDOKL);
   _il2:=_il2 $ _dokl_s;
   roundmet(5);
   PAL_POZ.IL2:=_il2
?};
~~


\akt_palz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: aktualizacja informacji o przyblokowanych paletach
::   WE: _a - ref palety
::       _b - dodanie-1 usuniecie-0 dodanie z urządzenia-2
::       [_c] - ref ZK_N
::       [_d] - uidref TR_NZL
::       [_e] - lokalizacja
::  OLD: \akt_palz/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>7 || _c:=null ?} || _c:=null ?};
_tr_nzl:={? var_pres('_d')=type_of('') & (+_d)=48 || _d || '' ?};
_eanl:={? var_pres('_e')=type_of(null()) || _e || null() ?};

PAL.cntx_psh();
{? _c<>null
|| PAL_ZAM.index('ZK_N');
   PAL_ZAM.prefix(_c,_a)
|| PAL_ZAM.index('PAL');
   PAL_ZAM.prefix(_a)
?};
{? PAL_ZAM.first() & (_tr_nzl='' | PAL_ZAM.find_tab('first','TR_NZL',,'=',_tr_nzl))
|| {? ~_b
   || PAL_ZAM.del();
      PAL.clear();
      {? PAL.seek(_a) || PAL.Z:='N'; PAL.put(1) ?};
      {? _tr_nzl<>'' || exec('palTR_ZLM','transport_wspolne',_tr_nzl,PAL.ref(),0,_eanl) ?}
   |? _b=2
   || PAL.clear();
      {? PAL.seek(_a) || PAL.Z:='T'; PAL.put(1) ?};
      {? _tr_nzl<>'' || exec('palTR_ZLM','transport_wspolne',_tr_nzl,PAL.ref(),1,_eanl) ?}
   ?}
|| {? _b & _c<>null
   || PAL_ZAM.blank();
      PAL_ZAM.ZK_N:=_c;
      PAL_ZAM.PAL:=_a;
      PAL_ZAM.TR_NZL:=_tr_nzl;
      exec('uzupIDkod','magdok_palety',PAL_ZAM);
      {? PAL_ZAM.add()
      || PAL.clear();
         {? PAL.seek(_a) || PAL.Z:='T'; PAL.put(1) ?};
         {? _tr_nzl<>'' || exec('palTR_ZLM','transport_wspolne',_tr_nzl,PAL.ref(),1,_eanl) ?}
      ?}
   |? ~_b
   || PAL.clear();
      {? PAL.seek(_a) || PAL.Z:='N'; PAL.put(1) ?};
      {? _tr_nzl<>'' || exec('palTR_ZLM','transport_wspolne',_tr_nzl,PAL.ref(),0,_eanl) ?}
   ?}
?};
PAL.cntx_pop()


\spr_ppoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza jak dana pozycja powiazana jest z paletami
::   WE: _a - ref DK
::   WY: 0-nie dotyczy 1-tylko cale palety 2-tylko rozpakowane palety 3-mix
::  OLD: \spr_ppoz/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_cpal:=0;
_rpal:=0;
DK_L.cntx_psh();
DK_L.index('DK');
DK_L.prefix(_a,null);
{? DK_L.first()
|| {!
   |? _cpal+=DK_L.ZPALET=1;
      _rpal+=DK_L.ZPALET=2;
      DK_L.next()
   !}
?};
DK_L.cntx_pop();
_wyn:={? ~_cpal & ~_rpal || 0
      |? _cpal & ~_rpal || 1
      |? ~_cpal $ _rpal || 2
      || 3
      ?};
_wyn


\czy_lpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza jak dana pozycja powiazana jest z paletami juz rozchodowanymi do konca
::   WE: _a - 0-tabela z refami DK, 1-ref ND
::       _a - tabelka z refami DK lub ref ND
::   WY: symbol ostatniego dokumentu wydania lub pusty string
::  OLD: \czy_lpal/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_ok:=0;
ND.cntx_psh();
DK.cntx_psh();
DK_L.cntx_psh();
{? ~_a
|| _b.cntx_psh();
   _b.clear();
   _ok:=_b.first()
|| DK.index('DOKMAG');
   DK.prefix(_b);
   _ok:=DK.first()
?};
{? _ok
|| {!
   |? {? {? ~_a || (DK.clear(); DK.seek(_b.REF,)) || 1 ?}
      || DK_L.index('DK');
         DK_L.prefix(DK.ref(),null);
         {? DK_L.first()
         || {!
            |? {? DK_L.ZPALET=2
               || _wyn:=exec('czy_pwyd','magdok_palety',DK_L.PAL);
                  {? _wyn<>''
                  || _wyn:='Rozpakowana paleta: %1\nzostała wydana w całości dokumentem: %2.'@[DK_L.PAL().KODK,_wyn]
                  ?}
               ?};
               _wyn='' & DK_L.next()
            !}
         ?}
      ?};
      {? ~_a || _b.next() || DK.next() ?}
   !}
?};
DK.cntx_pop();
DK_L.cntx_pop();
ND.cntx_pop();
{? ~_a || _b.cntx_pop() ?};
_wyn


\czy_pwyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy paleta zostala wydana w calosci (dokladniej to co na niej pozostalo)
::   WE: _a - ref palety
::   WY: symbol ostatniego dokumentu wydania lub pusty string
::  OLD: \czy_pwyd/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';

_jest:=0;
_rozp:=0;

_akt:=DK_L.name()+3;
_mag:=null;

PAL.cntx_psh();
DK_LN.cntx_psh();
DK_L.cntx_psh();
ND.cntx_psh();
DK.cntx_psh();
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first()
|| {!
   |? exec('mag_open','open_tab',ST.ODDZ,($OKR.ROK+2));
      DK_L.index('PALDTTM');
      DK_L.prefix(_a);
      {? DK_L.first()
      || {!
         |? {? DK_L.DK<>null & DK_L.ZPALET<>2
            || {? DK_L.DK().PLUS='T'
               || _jest+=1
               || _jest-=1;
                  _wyn:='\nmagazyn: '@+DK_L.DK().N().MAG().SYM+
                        '\ndokument: '@+DK_L.DK().N().TYP().T+': '+DK_L.DK().N().SYM+', z dnia: '@+form(DK_L.DK().N().D)
               ?}
            || _rozp+=DK_L.ZPALET
            ?};
            DK_L.next()
         !}
      ?};
      OKR.next()
   !}
?};
exec('mag_open','open_tab',1+_akt,_akt+2);
PAL.cntx_pop();
DK_LN.cntx_pop();
DK_L.cntx_pop();
ND.cntx_pop();
DK.cntx_pop();
OKR.cntx_pop();
{? _jest<=0 & _rozp || _wyn || '' ?}


\pwpal_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietleniem pola EANX.PAL
::   WE: [_a] czy display-1 domyslnie-0, czyli nie
::  OLD: \pwpal_dk/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

{? ND.MAG().PAL<>'T' | (ND.TYP().DK='W' & ND.TYP().P='N') | ND.INN='T' | DK.ZP
|| exec('findfnv','#color')
|? _a | (1+menu_txt())='P' | BEER.DISP=1
|| _pal:=exec('zwrdkltw','magdok_wspolne',3);
   _zm:=0;
   {? type_of(_pal)=1 || {? _a || _pal:='' || _zm:=1; _pal:='' ?} ?};
   {? _zm
   || EANX.IDPAL:='';
      EANX.PAL:=null();
      EANX.PALK:='';
      EANX.TPAL:='';
      1
   |? _pal<>''
   || _msk:=exec('FindAndGet','#table',PAL,_pal,,"name",'');
      EANX.IDPAL:=_pal;
      EANX.PAL:={? _msk='palety' || exec('FindAndGet','#table',PAL,_pal,,,null()) || null() ?};
      EANX.PALK:=exec('FindAndGet','#table',PAL,_pal,,"KODK",'');
      EANX.TPAL:=exec('FindAndGet','#table',PAL,_pal,,"TPAL().TYP",'');
      1
   || {? _a
      || EANX.IDPAL:='';
         EANX.PAL:=null;
         EANX.PALK:='';
         EANX.TPAL:=''
      || exec('findfnv','#color')
      ?}
   ?}
|| 1
?}


\prpal_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola EANX.PAL
::   WY: 1/0
::  OLD: \prpal_dk/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANX.PALR=null() & DK.ROZPAK=1 & (1+menu_txt())='D'
|| 1
|? ND.MAG().PAL<>'T' | ND.INN='T' | EANX.EANL=null | EANX.PALR<>null()
|| 0
|? ~DK.ROZPAK & (1+menu_txt())='P'
|| _pal:=exec('zwrdkltw','magdok_wspolne',3);
   {? type_of(_pal)=1 || _pal:='' ?};
   _pal<>''
|| 1
?}


\f3pal_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: klawisz F3 dla wyboru palety
::   WY: wybrana wartosc
::  OLD: \f3pal_dk/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__znwyb');
{? ND.TYP().P='T'
|| __znwyb:='A';
   PAL.f_clear();
   PAL.index('PAL');
   PAL.prefix();
   PAL.f_set('KODK',,'');
   PAL.win_sel('SLO');
   PAL.find_key(EANX.PALK);
   {? PAL.select(,1)
   || {? __znwyb='A'
      || EANX.PAL:=PAL.ref();
         EANX.PALK:=EANX.PAL().KODK;
         EANX.TPAL:=EANX.PAL().TPAL().TYP
      ?}
   ?};
   PAL.f_clear()
|| __znwyb:='B';
   SL.index('PALM');
   SL.prefix(ND.MAG,DK.M);
   SL.win_sel('SLO');
   _pal:=exec('FindInSet','#table','PAL','PAL',EANX.PALK,EANX.PALK);
   {? _pal=null || _pal:=exec('FindInSet','#table','PAL','PAL',EANX.PALK) ?};
   SL.find_key(_pal);
   {? SL.select(,1)
   || {? __znwyb='B'
      || EANX.EANL:=SL.EANL;
         EANX.LOKP:=EANX.EANL().KOD;
         EANX.PAL:=SL.PAL;
         EANX.PALK:=EANX.PAL().KODK;
         EANX.TPAL:=EANX.PAL().TPAL().TYP;
         EANX.TW:=SL.TW
      ?}
   ?}
?};
VAR_DEL.delete('__znwyb');
_wyn:=EANX.PALK;
_wyn


\popal_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pola EANX.PAL
::  OLD: \popal_dk/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? form(EANX.PALK)<>''
|| _palk:=exec('FindInSet','#table','PAL','PAL',EANX.PALK,EANX.PALK,"PAL.KODK",,,'');
   _jest:=0;
   _refdk:={? HELP.POP || DK.ref() || null() ?};
   {? _palk=''
   || _palk:=exec('FindInSet','#table','PAL','PAL',EANX.PALK,,"PAL.KODK",,,'')
   || EANX.PAL:=exec('FindInSet','#table','PAL','PAL',EANX.PALK,EANX.PALK);
      EANX.IDPAL:=EANX.PAL().IDADD
   ?};
   {? _palk<>'' & (_refp:=exec('FindInSet','#table','PAL','PAL',_palk,_palk); _refp<>null())
   || DK_L.cntx_psh();
      DK_L.index('CZYPAL');
      DK_L.prefix(ND.ref(),EANX.PALR);
      {? DK_L.first() || _jest:={? _refdk<>null() || DK_L.find_tab('first','DK',,'<>',_refdk) || 1 ?} ?};
      DK_L.cntx_pop();
      {? ~_jest
      || DK_L.cntx_psh();
         DK_L.index('CZYPALDO');
         DK_L.prefix(ND.ref(),EANX.PALR);
         {? DK_L.first() || _jest:={? _refdk<>null() || DK_L.find_tab('first','DK',,'<>',_refdk) || 1 ?} ?};
         DK_L.cntx_pop()
      ?}
   ?};
   {? _jest
   || FUN.info('Wybraną paletę dodano już do dokumentu.\nPonowne przeniesienie na dokument niemożliwe.'@);
      EANX.PALK:='';
      EANX.PAL:=null();
      EANX.IDPAL:='';
      0
   |? _palk<>''
   || EANX.PALK:=_palk;
      EANX.PAL:=exec('FindInSet','#table','PAL','PAL',EANX.PALK,EANX.PALK);
      EANX.TPAL:=EANX.PAL().TPAL().TYP;
      EANX.IDPAL:=EANX.PAL().IDADD;
      {? (1+menu_txt())='P'
      || EANX.PAL:=exec('FindInSet','#table','PAL','PAL',EANX.PALK,EANX.PALK);
         EANX.TPAL:=EANX.PAL().TPAL().TYP;
         EANX.IDPAL:=EANX.PAL().IDADD;
         {? EANX.PAL=null() || EANX.PAL:=exec('FindInSet','#table','PAL','PAL',EANX.PALK) ?};
         EANX.IDPAL:=EANX.PAL().IDADD;
         _pal:=exec('zwrdkltw','magdok_wspolne',3);
         _zm:=0;
         {? type_of(_pal)=1 || _zm:=1; _pal:='' ?};
         {? (_zm | _pal<>EANX.IDPAL) & EANX.IDPAL<>''
         || {? FUN.ask('Czy zmienić paletę na Pozycjach wg wymiarów?'@)
            || DK_L.cntx_psh();
               DK_L.index('DK');
               DK_L.prefix(DK.ref(),null);
               {? DK_L.first()
               || {!
                  |? _ref:=DK_L.ref(); _ok:=DK_L.next();
                     DK_L.cntx_psh();
                     DK_L.clear();
                     {? DK_L.seek(_ref)
                     || DK_L.PAL:=EANX.PAL;
                        DK_L.IDPAL:=EANX.PAL().IDADD;
                        DK_L.KODPAL:=EANX.PAL().KODK;
                        DK_L.put(1)
                     ?};
                     DK_L.cntx_pop();
                     _ok
                  !}
               || exec('add2dk_l','magdok_wspolne',DK.ref(),null,EANX.EANL,null,EANX.TW,date(0,0,0)
                   ,DK.IL,ND.MAG,DK.M,,,EANX.PAL,null)
               ?};
               DK_L.cntx_pop();
               1
            || 0
            ?}
         || 1
         ?}
      || 1
      ?}
   || {? FUN.ask('Brak podanej palety w systemie.\nCzy dodać ją do słownika?'@)
      || PAL.clear();
         PAL.blank();
         PAL.KODK:=EANX.PALK;
         {? PAL.add()
         || EANX.PAL:=PAL.ref();
            EANX.PALK:=PAL.KODK;
            EANX.TPAL:=PAL.TPAL().TYP;
            EANX.IDPAL:=EANX.PAL().IDADD;
            {? (1+menu_txt())='P'
            || EANX.EANL:=exec('FindInSet','#table','PAL','PAL',EANX.PALK,EANX.PALK);
               {? EANX.PAL=null || EANX.PAL:=exec('FindInSet','#table','PAL','PAL',EANX.PALK) ?};
               EANX.IDPAL:=EANX.PAL().IDADD;
               _pal:=exec('zwrdkltw','magdok_wspolne',3);
               _zm:=0;
               {? type_of(_pal)=1 || _zm:=1; _eanl:=null ?};
               {? (_zm | _pal<>EANX.IDPAL) & EANX.IDPAL<>''
               || {? FUN.ask('Czy zmienić paletę na Pozycjach wg wymiarów?'@)
                  || DK_L.cntx_psh();
                     DK_L.index('DK');
                     DK_L.prefix(DK.ref(),null);
                     {? DK_L.first()
                     || {!
                        |? _ref:=DK_L.ref(); _ok:=DK_L.next();
                           DK_L.cntx_psh();
                           DK_L.clear();
                           {? DK_L.seek(_ref)
                           || DK_L.PAL:=EANX.PAL;
                              DK_L.IDPAL:=EANX.PAL().IDADD;
                              DK_L.KODPAL:=EANX.PAL().KODK;
                              DK_L.put(1)
                           ?};
                           DK_L.cntx_pop();
                           _ok
                        !}
                     || exec('add2dk_l','magdok_wspolne',DK.ref(),null,EANX.EANL,null,EANX.TW,date(0,0,0)
                         ,DK.IL,ND.MAG,DK.M,,,EANX.PAL,null)
                     ?};
                     DK_L.cntx_pop();
                     1
                  || 0
                  ?}
               || 1
               ?}
            ?};
            1
         || EANX.PAL:=null;
            EANX.IDPAL:='';
            0
         ?}
      || EANX.PAL:=null;
         EANX.IDPAL:='';
         0
      ?}
   ?}
|| {? (1+menu_txt())='P' & 0
   || EANX.PAL:=null;
      EANX.PALK:='';
      EANX.TPAL:='';
      EANX.IDPAL:='';
      {? exec('FindInSet','#table','DK_L','DK',null,DK.ref())<>null
       & FUN.ask('Czy zmienić lokalizację na Pozycjach wg wymiarów?'@)
      || DK_L.cntx_psh();
         DK_L.index('DK');
         DK_L.prefix(DK.ref(),null);
         {? DK_L.first()
         || {!
            |? {? DK_L.TW=date(0,0,0) & DK_L.LOK=null
               || DK_L.del()
               || DK_L.PAL:=EANX.PAL;
                  DK_L.IDPAL:='';
                  DK_L.KODPAL:='';
                  DK_L.put(1);
                  DK_L.next()
               ?}
            !}
         ?};
         DK_L.cntx_pop();
         1
      || 1
      ?}
   || 1
   ?}
?}


\statspal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: podzial na palecie wg statusow dostaw
::   WE: _a - ref palety PAL.ref()
::       _b - ilosc przed
::       _c - SCSQL
::       _d - DK_C
::       _e - cena
::       _f - nowe SCSQL
::       _g - ilosc o nowym statusie
::       _h - nowy status
::   WY: 1-ok 0-nie
::  OLD: \statspal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_Tab:=tab_tmp(1,'NAME','STRING[8]',);
_Tab.NAME:='paletyp';
_Tab.add;
OKR.cntx_psh;
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first
||
   {!
   |?
      _Tab.NAME:='palet'+($OKR.ROK+2);
      _Tab.add & OKR.next
   !}
?};
OKR.cntx_pop;

{? _Tab.first
||
   PAL_POZ.cntx_psh();
   {!
   |?
      PAL_POZ.use(_Tab.NAME);
      PAL_POZ.index('SCSQL');
      PAL_POZ.prefix(_a,_c,_c);
      {? PAL_POZ.first()
      || {!
         |? {? PAL_POZ.ILP=_b & PAL_POZ.DK_C=_d & PAL_POZ.C=_e
            || PAL_POZ.ILP-=_g;
               PAL_POZ.IL2:=0;
               exec('poilpalp','magdok_palety');
               _wyn:=PAL_POZ.put(1);
               {? _wyn
               || PAL_POZ.cntx_psh();
                  PAL_POZ.clear();
                  PAL_POZ.SCSQL:=_f;
                  PAL_POZ.STATS:=_h;
                  PAL_POZ.ILP:=PAL_POZ.IL:=_g;
                  PAL_POZ.IL2:=0;
                  exec('poilpalp','magdok_palety');
                  exec('uzupIDkod','magdok_palety',PAL_POZ);
                  _wyn:={? PAL_POZ.add(1) || _g || 0 ?};
                  {? _wyn || exec('statsdep','magdok_palety',$PAL_POZ.PAL,_b,_c,_d,_e,_f,_g,_h) ?};
                  PAL_POZ.cntx_pop();
                  {? _wyn>0 || 0 ?}
               ?};
               {? _wyn & PAL_POZ.IL<=0 || PAL_POZ.del() ?}
            || PAL_POZ.next()
            ?}
         !}
      ?};
      _wyn=0 & _Tab.next
   !};
   PAL_POZ.cntx_pop()
?};
_wyn


\aktstpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: aktualizacja na palecie wg statusow dostaw
::   WE: _a - ref DK
::       _b - SCSQL
::       _c - status
::   WY: 1-ok 0-nie
::  OLD: \aktstpal/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
DK_L.cntx_psh();
DK_L.index('DK');
DK_L.prefix(_a,null);
{? DK_L.first()
|| {!
   |? {? DK_L.PAL<>null
      || PAL_POZ.cntx_psh();
         {? DK_L.PAL().AKT='N'
         || PAL_POZ.use('palet'+form(DK_L.PAL().AR-2000,-2,0,'99'))
         || PAL_POZ.use('paletyp')
         ?};
         _stats:=null();
         _onlys:=0;
         PAL_POZ.index('SCSQL');
         PAL_POZ.prefix(DK_L.PAL,_b,_b);
         {? PAL_POZ.first()
         || _onlys:=1;
            {!
            |? _scst:={? PAL_POZ.SCSQL<>'' || exec('FindAndGet','#table',DK,PAL_POZ.SCSQL,,"STATS",null()) || null() ?};
               {? _scst=null() || _scst:=_c ?};
               PAL_POZ.STATS:=_scst;
               {? _stats=null() || _stats:=PAL_POZ.STATS ?};
               {? _stats<>PAL_POZ.STATS || _onlys:=2 ?};
               {? ~PAL_POZ.put(1) || _wyn:=0 || exec('aktstdep','magdok_palety',$PAL_POZ.PAL,_b,PAL_POZ.STATS) ?};
               PAL_POZ.next()
            !}
         ?};
         PAL_POZ.cntx_pop();
         exec('statsPAL','magdok_palety',DK_L.PAL)
      ?};
      DK_L.next()
   !}
?};
DK_L.cntx_pop();
_wyn


\poilpalp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pola PAL.IL - uzupelnia pole PAL.ILP
::  OLD: \poilpalp/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_dokl_m:=exec('jaka_dok_m','jm',PAL_POZ.M);
_dokl_s:=exec('jaka_dok_mjm','jm',PAL_POZ.M,PAL_POZ.J2,PAL_POZ.M().J);
{? _dokl_s<0 || _dokl_s:=_dokl_m ?};
PAL_POZ.IL:=PAL_POZ.ILP;

{? PAL_POZ.WS2
|| PAL_POZ.IL2:=PAL_POZ.ILP/PAL_POZ.WS2 $ (_dokl_s+1);
   roundmet(BEER.MDOKL);
   PAL_POZ.IL2:=PAL_POZ.IL2 $ _dokl_s;
   roundmet(5)
?};
1


\ozn_pbez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: oznaczenie palety
::   WE: [_a] - ref palety
::  OLD: \ozn_pbez/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};

_dok:=_a<>null;

{? ~_dok
|| _tab:=PAL.sel_aget();
   PAL.sel_adel();
   PAL.cntx_psh();
   {? _tab.first()
   || {? FUN.ask('Nadać kody kreskowe dla zaznaczonych palet, wózków?\n\n'
          'Uwaga. Paleta zostanie oznaczona,\n'
          'zaś zawartość wózka zostanie przeniesiona na nową oznaczoną paletę.\n'
          'Pozycje z palety, wózka zostaną usunięte.'@)
      || {!
         |? {? (PAL.clear(); PAL.seek(_tab.REF,)) & (1+PAL.BEZOZN)='T'
            || exec('ozn_npal','magdok_palety',PAL.BEZOZN,0)
            ?};
            _tab.next()
         !};
         grp_disp(PAL,'SEL')
      ?}
   |? FUN.ask('Nadać kod kreskowy dla palety, wózka?\n\n'
       'Uwaga. Paleta zostanie oznaczona,\n'
       'zaś zawartość wózka zostanie przeniesiona na nową oznaczoną paletę.\n'
       'Pozycje z palety, wózka zostaną usunięte.'@)
   || exec('ozn_npal','magdok_palety',PAL.BEZOZN,0);
      grp_disp(PAL,'SEL')
   ?};
   PAL.cntx_pop()
|| PAL.cntx_psh();
   PAL.clear();
   {? PAL.seek(_a) & (1+PAL.BEZOZN)='T'
   || exec('ozn_npal','magdok_palety',PAL.BEZOZN,0)
   ?};
   PAL.cntx_pop()
?};
~~


\ozn_npal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: oznaczenie nowej palety
::   WE: _a - TW-wozek TP-paleta
::       [_b] - czy odswiezenie okienka 1 (domyslnie)-tak 0-nie
::  OLD: \ozn_npal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};

_mpalp:=PAL_POZ.names();
_mdk_l:=DK_L.names();
_czydo:=do_state();
{? ~_czydo || do() ?};
{? _a='TP'
|| PAL.clear();
   PAL.KODK:=exec('kodk_pal','magdok_palety');
   PAL.STAN:={? exec('FindInSet','#table','PAL_POZ','PAL',PAL.ref())<>null || 'T' || 'N' ?};
   PAL.BEZOZN:='N';
   PAL.ROZ:='N';
   PAL.AKT:='T';
   {? PAL.put(1) || exec('znacznik','magdok_palety',PAL.ref()) ?}
|? _a='TW'
|| PAL.clear();
   _czy:=exec('FindInSet','#table','PAL_POZ','PAL',PAL.ref())<>null;
   _ref:=PAL.ref();
   _tpal:=PAL.TPAL;
   PAL.MKTM:='';
   PAL.put(1);
   PAL.blank();
   PAL.AKT:='T';
   {? PAL.add()
   || PAL.KODK:=exec('kodk_pal','magdok_palety');
      PAL.TPAL:=_tpal;
      PAL.STAN:={? _czy || 'T' || 'N' ?};
      PAL.ROZ:='B';
      {? PAL.put()
      || _new:=PAL.ref();
         PAL.cntx_psh();
         PAL_POZ.cntx_psh();
         PAL.clear();
         {? PAL.seek(_ref)
         || {? PAL.AKT='N' || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99')) || PAL_POZ.use('paletyp') ?}
         ?};
         PAL_POZ.index('PAL');
         PAL_POZ.prefix(_ref);
         {? PAL_POZ.first()
         || {!
            |? _poz:=PAL_POZ.ref(); _ok:=PAL_POZ.next();
               PAL_POZ.cntx_psh();
               PAL_POZ.clear();
               {? PAL_POZ.seek(_poz)
               || PAL_POZ.PAL:=_new;
                  PAL_POZ.AKT:='T';
                  exec('uzupIDkod','magdok_palety',PAL_POZ);
                  PAL_POZ.put(1)
               ?};
               PAL_POZ.cntx_pop();
               PAL_POZ.next();
               _ok
            !}
         ?};
         PAL_POZ.use('paletyp');
         PAL.cntx_pop();
         PAL_POZ.cntx_pop();
         exec('ktm2pal','magdok_palety',_b);
         exec('znacznik','magdok_palety',PAL.ref())
      || undo()
      ?}
   || undo()
   ?};
   {? _ref<>null & _new<>null
   || exec('przebpal','magdok_palety',_ref,_new,_mpalp,_mdk_l)
   || undo()
   ?}
?};
{? ~_czydo || end() ?};
obj_del(_mpalp);
obj_del(_mdk_l);
~~


\kodk_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: formula generujaca kod kreskowy palety
::   WE: _a - 0(domyslnie)-oznaczona 1-nieoznaczona
::   WY: kod kreskowy
::  OLD: \kodk_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_form:=exec('eangform','kody_kresk',ST.MAG,'PAL','KODK',_a);
{? _form=''
|| {? ~_a || exec('pal_kod','%mws_form') || exec('pal_bez','%mws_form') ?}
|| ($_form)()
?}


\przebpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przepina odwolania do palet oraz aktualizuje tabele SL
::   WE: _a - ref palety do przepiecia
::       _b - na palete
::       _c - maski dla PAL_POZ-a
::       _d - maski dla DK_L-a
::  OLD: \przebpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
PAL.cntx_psh();
PAL_POZ.cntx_psh();
DK_L.cntx_psh();
SL.cntx_psh();

:: pola RSQL na PAL_POZ-ach
_msk:=_c;
_msk.clear();
{? _msk.first()
|| {!
   |? PAL_POZ.use(_msk.NAME);
      PAL_POZ.index('RSQL');
      PAL_POZ.prefix($_a);
      {? PAL_POZ.first()
      || {!
         |? _ref:=PAL_POZ.ref(); _ok:=PAL_POZ.next();
            PAL_POZ.cntx_psh();
            PAL_POZ.clear();
            {? PAL_POZ.seek(_ref)
            || PAL_POZ.RSQL:=$_b;
               {? ~PAL_POZ.put(1) || undo() ?}
            ?};
            PAL_POZ.cntx_pop();
            _ok
         !}
      ?};
      _msk.next()
   !}
?};
obj_del(_msk);

:: stany wg wymiarow
SL.index('PALALL');
SL.prefix(_a);
{? SL.first()
|| {!
   |? _ref:=SL.ref(); _ok:=SL.next();
      SL.cntx_psh();
      SL.clear();
      {? SL.seek(_ref)
      || SL.PAL:=_b;
         exec('uzupIDkod','magdok_palety',SL);
         {? ~SL.put(1) || undo() ?}
      || undo()
      ?};
      SL.cntx_pop();
      _ok
   !}
?};

:: wymiary pod pozycjami dokumentow
_akt:=DK_L.name();
_msk:=_d;
{? _msk.first()
|| {!
   |? exec('mag_open','open_tab',1+(_msk.NAME+3),(_msk.NAME+2));
      DK_L.index('PALDTTM');
      DK_L.prefix(_a);
      {? DK_L.first()
      || {!
         |? _ref:=DK_L.ref(); _ok:=DK_L.next();
            DK_L.cntx_psh();
            DK_L.clear();
            {? DK_L.seek(_ref)
            || DK_L.PAL:=_b;
               {? ~DK_L.put(1) || undo() ?}
            || undo()
            ?};
            DK_L.cntx_pop();
            _ok
         !}
      ?};
      DK_L.index('PADDTTM');
      DK_L.prefix(_a);
      {? DK_L.first()
      || {!
         |? _ref:=DK_L.ref(); _ok:=DK_L.next();
            DK_L.cntx_psh();
            DK_L.clear();
            {? DK_L.seek(_ref)
            || DK_L.PALDO:=_b;
               {? ~DK_L.put(1) || undo() ?}
            || undo()
            ?};
            DK_L.cntx_pop();
            _ok
         !}
      ?};
      _msk.next()
   !}
?};
obj_del(_msk);
exec('mag_open','open_tab',1+(_akt+3),(_akt+2));
PAL.cntx_pop();
PAL_POZ.cntx_pop();
DK_L.cntx_pop();
SL.cntx_pop();
~~


\sprndpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza uzupelnienie palet dla pozycji dokumentu przesuniecia magazynowego
::   WE: _a - ref ND
::       _b - 0/[1] - komunikaty
::   WY: 0-brak uzupelnienia 1-jest OK-uzupelniono
::  OLD: \sprndpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_czykom:=1;
{? var_pres('_b')=type_of(0)
|| _czykom:=_b
?};

_wyn:=1;
DK.cntx_psh();
DK_L.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first()
|| {!
   |? _ile:=DK.IL;
      DK_L.index('DK');
      DK_L.prefix(DK.ref());
      {? DK_L.first()
      || {!
         |? _ile-={? DK_L.PAL<>null || DK_L.IL || 0 ?};
            DK_L.next()
         !}
      ?};
      {? _ile<>0
      || _wyn:=0;
         {? _czykom
         || _txt:='Poz.%1 materiał %2 brak palet(y).'@[$DK.P,DK.M().KTM];
            exec('add_kom','#message',_txt,2)
         ?}
      ?};
      DK.next()
   !}
?};
DK.cntx_pop();
DK_L.cntx_pop();
_wyn


\pal2dkdk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: rozpisuje palety
::   WE: _a - ref DK
::  OLD: \pal2dkdk/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_dkl:=tab_tmp(1,'DKL','STRING[16]','');
DK_L.index('DK');
DK_L.prefix(_a,null);
{? DK_L.first()
|| {!
   |? {? DK_L.ZPALET=2 & DK_L.PAL<>null & DK_L.PALDO<>null
      || _dkl.clear();
         _dkl.blank();
         _dkl.DKL:=$DK_L.ref();
         _dkl.add(1)
      ?};
      DK_L.next()
   !}
?};
DK_L.cntx_psh();
_dkl.clear();
{? _dkl.first()
|| _sl:=tab_tmp(1,'REF','STRING[16]','','ILR','REAL','');
   {!
   |? {? (DK_L.clear(); DK_L.seek(_dkl.DKL)) & DK_L.PAL<>null & DK_L.PALDO<>null
      || _nalok:=DK_L.LOK;
         _mag:=DK_L.LOK().MG;
         _term:=DK_L.TW;
         {? DK_L.PAL().AKT='N'
         || PAL_POZ.use('palet'+form(DK_L.PAL().AR-2000,-2,0,'99'))
         || PAL_POZ.use('paletyp')
         ?};
         PAL_POZ.index('PAL');
         PAL_POZ.prefix(DK_L.PAL);
         {? PAL_POZ.first()
         || {!
            |? {? PAL_POZ.ILP>=0 & PAL_POZ.IL<>PAL_POZ.ILP
               || _iler:=PAL_POZ.IL-PAL_POZ.ILP;
                  SL.cntx_psh();
                  SL.index('PALM');
                  SL.prefix(_mag,PAL_POZ.M,PAL_POZ.PAL);
                  {? SL.first()
                  || {!
                     |? {? SL.EANL<>_nalok & SL.TW=_term & SL.IL=_iler
                        || DK_L.LOK:=SL.EANL;
                           DK_L.IL:=_iler;
                           DK_L.PALDO:=null;
                           DK_L.ZPALET:=1;
                           DK_L.AUTO:=1;
                           exec('reoIL2','magdok_wymiary');
                           exec('uzupIDkod','magdok_palety',DK_L);
                           DK_L.add(1);
                           DK_L.LOK:=_nalok;
                           DK_L.IL:=-_iler;
                           DK_L.PALDO:=null;
                           DK_L.ZPALET:=1;
                           DK_L.AUTO:=1;
                           exec('reoIL2','magdok_wymiary');
                           exec('uzupIDkod','magdok_palety',DK_L);
                           DK_L.add(1);
                           _iler:=0
                        ?};
                        _iler>0 & SL.next()
                     !}
                  ?};
                  SL.index('PALM');
                  SL.prefix(_mag,PAL_POZ.M,PAL_POZ.PAL);
                  {? _iler>0 & SL.first()
                  || {!
                     |? {? SL.EANL<>_nalok & SL.TW=_term
                         & (_sl.clear(); _ilsl:=SL.IL-{? _sl.find_key($SL.ref()) || _sl.ILR || 0 ?}; _ilsl>0)
                        || _ildkl:={? _iler>=_ilsl || _ilsl || _iler ?};
                           DK_L.LOK:=SL.EANL;
                           DK_L.IL:=_ildkl;
                           DK_L.PALDO:=null;
                           DK_L.ZPALET:=1;
                           DK_L.AUTO:=1;
                           exec('reoIL2','magdok_wymiary');
                           exec('uzupIDkod','magdok_palety',DK_L);
                           DK_L.add(1);
                           DK_L.LOK:=_nalok;
                           DK_L.IL:=-_ildkl;
                           DK_L.PALDO:=null;
                           DK_L.ZPALET:=1;
                           DK_L.AUTO:=1;
                           exec('reoIL2','magdok_wymiary');
                           exec('uzupIDkod','magdok_palety',DK_L);
                           DK_L.add(1);
                           _iler-=_ildkl;
                           {? _sl.find_key($SL.ref())
                           || _sl.ILR+=_ildkl;
                              _sl.put(1)
                           || _sl.blank();
                              _sl.REF:=$SL.ref();
                              _sl.ILR:=_ildkl;
                              _sl.add(1)
                           ?}
                        ?};
                        _iler>0 & SL.next()
                     !}
                  ?};
                  SL.cntx_pop()
               ?};
               PAL_POZ.next()
            !}
         ?};
         PAL_POZ.use('paletyp')
      ?};
      _dkl.del()
   !};
   obj_del(_sl)
?};
DK_L.cntx_pop();
obj_del(_dkl);
~~


\zmienodd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zmienia odwolania do oddzialu dla palety
::   WE: _a - ref pal
::       _b - nowy oddzial
::  OLD: \zmienodd/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
PAL.cntx_psh();
PAL_POZ.cntx_psh();
DK_C.cntx_psh();
PAL.clear();
{? PAL.seek(_a) & PAL.AKT='T'
|| PAL_POZ.use('paletyp');
   PAL_POZ.index('PAL');
   PAL_POZ.prefix(PAL.ref());
   {? PAL_POZ.first()
   || {!
      |? _msk:=ref_name(PAL_POZ.DK_C);
         _odd:=1+(_msk+3);
         {? _odd<>'' & _b<>_odd
         || DK_C.use(_msk);
            PAL_POZ.DK_C:=exec('odd_matr','mat_atr',_b,_odd,PAL_POZ.DK_C);
            PAL_POZ.put(1)
         ?};
         PAL_POZ.next()
      !}
   ?};
   PAL.ODD:=_b;
   PAL.put(1)
?};
PAL.cntx_pop();
PAL_POZ.cntx_pop();
DK_C.cntx_pop();
~~


\czyilpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy cos pozostalo na palecie
::   WE: _a - ref palety
::   WY: 1-tak 0-nie
::  OLD: \czyilpoz/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
PAL.cntx_psh();
PAL_POZ.cntx_psh();
PAL.clear();
{? PAL.seek(_a)
|| {? PAL.AKT='N'
   || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
   || PAL_POZ.use('paletyp')
   ?};
   PAL_POZ.index('PAL');
   PAL_POZ.prefix(PAL.ref());
   {? PAL_POZ.first()
   || {!
      |? _wyn:=PAL_POZ.ILP>0;
         ~_wyn & PAL_POZ.next()
      !}
   ?}
?};
PAL.cntx_pop();
PAL_POZ.cntx_pop();
_wyn


\aktdepal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: zmiana znacznika aktywna/nieaktywna
::   WE: [_a] 0-ustawienie znacznika nieaktywna (domyslnie) 1-ustawienie znacznika aktywna
::       [_b] 0(domyślnie) z pytaniami 1-automatycznie bez pytania -1-automatycznie bez pytania(bez warunków)
::       [_c] 0(domyślnie) normalny status T/N 1-dodatkowo zaznaczenie depaletyzacji
::       [_d] 0(domyślnie) ustawienie filtra 1-bez ustawiania filtra
::  OLD: \aktdepal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=PAL.AKT='N' ?} || _a:=PAL.AKT='N' ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};

_filtr:={? ~do_state() & PAL.f_active()>0 || {? var_pres('_d')=type_of(0) & _d>0 || -1 || 1 ?} || 0 ?};
_tab:=PAL.sel_aget();
_trans:=do_state();
PAL.sel_adel();
PAL.cntx_psh();
_ref:=PAL.ref();
_refpo:=null;
{? _tab.size()
|| _ile:=_tab.size();
   _ndx:=_tab.ndx_tmp('',0,'REF',,0);
   _tab.index(_ndx);
   {? _filtr>0
   || {? PAL.f_first()
      || {!
         |? {? ~_tab.find_key(#PAL.ref())
            || _refpo:=PAL.ref();
               _ile>0 & PAL.f_next()
            || _ile-=1;
               PAL.f_next()
            ?}
         !}
      ?}
   || {? PAL.first()
      || {!
         |? {? ~_tab.find_key(#PAL.ref())
            || _refpo:=PAL.ref();
               _ile>0 & PAL.next()
            || _ile-=1;
               PAL.next()
            ?}
         !}
      ?}
   ?};
   _tab.ndx_drop(_ndx)
|| {? _filtr>0
   || {? PAL.f_next()
      || _refpo:=PAL.ref()
      || _refpo:={? PAL.f_prev || PAL.ref() || null ?}
      ?}
   || {? PAL.next()
      || _refpo:=PAL.ref()
      || _refpo:={? PAL.prev || PAL.ref() || null ?}
      ?}
   ?}
?};
PAL.seek(_ref);
{? _tab.size()
|| {? _tab.first() &
    (_b | FUN.ask({? ~_a || 'Czy zmienić znacznik aktywności\ndla zaznaczonych palet na: NIEAKTYWNA?'
                            '\n\nUwaga. Zostaną usunięte przypisania palet dla realizacji zamówień sprzedaży/wewnętrznych.'@
                         || 'Czy zmienić znacznik aktywności\ndla zaznaczonych palet na: AKTYWNA?'@ ?}))
   || {!
      |? {? (PAL.clear(); PAL.seek(_tab.REF,))
         || {? {? ~_a || PAL.AKT='T' || PAL.AKT='N' ?} & PAL.D='N' & PAL.STAN<>'I'
            || {? ~_trans || do() ?};
               {? ~_a || exec('akt_palz','magdok_palety',PAL.ref(),0) ?};
               exec('aktppal','magdok_palety',PAL.ref(),_a,PAL.AR);
               {? PAL.BEZOZN<>'B' || PAL.AKT:={? ~_a || 'N' || 'T' ?} ?};
               PAL.D:={? _c || 'T' || 'N' ?};
               PAL.put();
               {? ~_trans || end() ?}
            ?}
         ?};
         _tab.next()
      !}
   || _refpo:=null
   ?}
|? PAL.D='T'
|| _refpo:=PAL.ref();
   {? ~_b || FUN.info('Paleta depaletyzowana.\nZmiany możliwe wyłącznie po wycofaniu depaletyzacji.'@) ?};
   0
|? PAL.STAN='I'
|| _refpo:=PAL.ref();
   {? ~_b || FUN.info('Paleta po inwentaryzacji.\nZmiany niemożliwe.'@) ?};
   0
|? {? _b>0 & ~_c
   || {? ~_a
      || ({? PAL.W='T' || PAL.ROZ='B' | exec('spr_wyda','magdok_palety',PAL.ref()) || 0 ?}
          | ~exec('czyilpoz','magdok_palety',PAL.ref())) & (';TN'*PAL.R)>1
      || PAL.W='W' | PAL.R='W'
      ?}
   || 1
  ?}
|| {? {? ~_a || PAL.AKT='T' || PAL.AKT='N' ?} & PAL.D='N' & PAL.STAN<>'I'
    & (_b | FUN.ask({? ~_a || 'Czy zmienić znacznik aktywności\ndla palety na: NIEAKTYWNA?'@
                           || 'Czy zmienić znacznik aktywności\ndla palety na: AKTYWNA?'@ ?}+
             {? ~_a & PAL.Z='T'
             || '\n\nUwaga. Zostanie usunięte przypisanie palety dla realizacji zamówienia sprzedaży/wewnętrznego.'@
             || ''
             ?}))
   || {? ~_trans || do() ?};
      {? ~_a || exec('akt_palz','magdok_palety',PAL.ref(),0) ?};
      exec('aktppal','magdok_palety',PAL.ref(),_a,PAL.AR);
      PAL.clear();
      {? PAL.BEZOZN<>'B' || PAL.AKT:={? ~_a || 'N' || 'T' ?} ?};
      PAL.D:={? _c || 'T' || 'N' ?};
      PAL.put();
      {? ~_trans || end() ?}
   || _refpo:=null
   ?}
?};
PAL.cntx_pop();
{? _filtr=-1
|| PAL.f_rfresh()
|? _filtr
|| PAL.f_rfresh();
   {? _refpo<>null || PAL.f_seek(_refpo) ?}
|| {? _refpo<>null || PAL.seek(_refpo) ?}
?};
~~


\aktppal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: zmiana znacznika aktywna/nieaktywna dla pozycji palety
::   WE: _a - ref palety PAL.ref
::       _b - typ zmiany 0-ustawienie znacznika nieaktywna 1-aktywna
::       _c - rok rejestracji palety
::  OLD: \aktppal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_msk:='paletyp';
_new:='palet'+form(_c-2000,-2,0,'99');
PAL.cntx_psh();
PAL_POZ.cntx_psh();
{? ~_b || PAL_POZ.use(_msk) || PAL_POZ.use(_new) ?};
PAL_POZ.index('PAL');
PAL_POZ.prefix(_a);
{? PAL_POZ.first() & PAL_POZ.PAL().BEZOZN<>'B'
|| {!
   |? PAL_POZ.cntx_psh();
      PAL_POZ.use({? ~_b || _new || _msk ?});
      PAL_POZ.clear();
      PAL_POZ.AKT:={? ~_b || 'N' || {? PAL_POZ.PAL().STAN<>'N' || 'T' || 'N' ?} ?};
      exec('uzupIDkod','magdok_palety',PAL_POZ);
      PAL_POZ.add(1);
      PAL_POZ.cntx_pop();
      PAL_POZ.del()
   !}
?};
{? ~_b || PAL_POZ.use(_new) || PAL_POZ.use(_msk) ?};
PAL.cntx_pop();
PAL_POZ.cntx_pop()


\spr_wyda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: Sprawdza, czy paleta faktycznie została wydana
::   WE: _a - ref palety
::   WY: 1-tak 0-nie
::  OLD: \spr_wyda/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_akt:=DK_L.name()+3;
_tab:=tab_tmp(1,'ND','STRING[16]','','PLUS','STRING[1]','');
_mag:=null;
DK_LN.cntx_psh();
DK_L.cntx_psh();
ND.cntx_psh();
DK.cntx_psh();
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.last()
|| {!
   |? exec('mag_open','open_tab',ST.ODDZ,($OKR.ROK+2));
      DK_L.index('PALDTTM');
      DK_L.prefix(_a);
      {? DK_L.last()
      || {? _mag=null || _mag:=DK_L.MG ?};
         {!
         |? {? DK_L.DK<>null() & (_tab.clear(); ~_tab.find_key($DK_L.DK().N))
            || _tab.blank();
               _tab.ND:=$DK_L.DK().N;
               _tab.PLUS:=DK_L.DK().PLUS;
               _tab.add(1)
            ?};
            DK_L.prev()
         !}
      ?};
      OKR.prev()
   !}
?};
exec('mag_open','open_tab',1+_akt,_akt+2);
DK_LN.cntx_pop();
DK_L.cntx_pop();
ND.cntx_pop();
DK.cntx_pop();
OKR.cntx_pop();
_tab.clear();
{? _tab.first()
|| _wyn:=0;
   {!
   |? _wyn+={? _tab.PLUS='T' || 1 || -1 ?};
      _tab.next()
   !}
?};
obj_del(_tab);
_wyn:=~_wyn;
_wyn


\niedepal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy wszystkie palety na pozycjach nie zostaly depaletyzowane
::   WE: _a - ref ND
::   WY: 1-tak 0-niestety
::  OLD: \niedepal/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
ND.cntx_psh();
DK_L.cntx_psh();
DK.cntx_psh();
DK_L.index('CZYPAL');
DK_L.prefix(_a);
{? DK_L.first()
|| {!
   |? {? DK_L.PAL<>null || _wyn:=DK_L.PAL().D<>'T' ?};
      _wyn & DK_L.next()
   !}
?};
ND.cntx_pop();
DK_L.cntx_pop();
DK.cntx_pop();
_wyn


\czyp2dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy palety z danego dokumentu nie sa na dokumentach w drugim maagzynie
::   WE: _a - ref ND
::       [_b] - dodac komunikaty
::   WY: 1-nie jest 0-jest
::  OLD: \czyp2dok/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

_wyn:=1;
ND.cntx_psh();
DK_L.cntx_psh();
DK.cntx_psh();
MG.cntx_psh();

ND.clear();
{? ND.seek(_a) & ND.MAG().PAL='T' & ND.MD<>null & ND.MD().PAL='T'
|| _msk:=ND.name()+3;
   _md:=ND.MD;
   _smg:=ND.MD().SYM;
   _dr:=ND.DA;
   _tr:=ND.TA;
   _rok:=ND.DA~1;
   _ndsql:=$ND.ref();
:: zbieramy informacje o paletach na danym dokumencie
   _pal:=tab_tmp(1,'PAL','STRING[16]','');
   DK_L.index('CZYPAL');
   DK_L.prefix(ND.ref());
   {? DK_L.first()
   || {!
      |? _pal.clear();
         {? DK_L.PAL<>null & ~_pal.find_key($DK_L.PAL)
         || _pal.blank();
            _pal.PAL:=$DK_L.PAL;
            _pal.add(1)
         ?};
         DK_L.next()
      !}
   ?};
:: kontrola na drugim magazynie
   _pal.clear();
   {? _pal.first()
   || {!
      |? _rpal:=exec('FindAndGet','#table','PAL',_pal.PAL,,,null());
         OKR.cntx_psh();
         OKR.index('MC');
         OKR.prefix(REF.FIRMA,1);
         {? OKR.find_key(_rok)
         || {!
            |? exec('mag_open','open_tab',1+_msk,form(OKR.ROK-2000,-2,0,'99'));
               DK_L.index('MGPAL');
               DK_L.prefix(_md,_rpal);
               {? DK_L.last()
               || {!
                  |? {? (DK_L.DK=null | (DK_L.DK<>null & DK_L.DK().N().NDSQL<>_ndsql))
                      & exec('CompareDateTime','#datetime',DK_L.DT,DK_L.TM,_dr,_tr)<=1
                     || _wyn:=0;
                        {? _b
                        || exec('add_kom','#message','Paleta: %1'
                             ' na dokum. lub reorg. w magazynie %2'
                             '. Wycofanie akceptacji niemożliwe.'@[DK_L.PAL().KODK,_smg],2,,__lp+=1)
                        ?};
                        0
                     || DK_L.next()
                     ?}
                  !}
               ?};
               _wyn & OKR.next()
            !}
         ?};
         OKR.cntx_pop();
         _wyn & _pal.next()
      !}
   ?};
   exec('mag_open','open_tab',1+_msk,_msk+2)
?};
ND.cntx_pop();
DK_L.cntx_pop();
DK.cntx_pop();
MG.cntx_pop();

_wyn


\del_ppal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: odakceptowanie palety
::   WE: _a - ref wejsciowego ND
::   WY: 1-usunieto lub nie trzeba bylo 0-nie jest dobrze
::  OLD: \del_ppal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=ND.ref();
_wyn:=1;
_czy:=1;
_msk:=ND.name()+3;
_mnd:=(form(8+($_a))+3);

{? _czy
|| _pal:=tab_tmp(1,'PAL','STRING[16]',''
          ,'ILE','INTEGER','');

:: sprawdzamy powiazania palety
   ND.cntx_psh();
   DK.cntx_psh();
   DK_L.cntx_psh();
   DK_LN.cntx_psh();
   DK_LI.cntx_psh();
   DK_C.cntx_psh();
   SL.cntx_psh();
   {? _msk<>_mnd || exec('mag_open','open_tab',(1+_mnd),(1-_mnd)) ?};
   ND.clear();
   {? ND.seek(_a)
   || _czy:=ND.MD<>null & ND.MAG().PAL='N';
      {? _czy
      || DK_L.index('CZYPAL');
         DK_L.prefix(_a);
         {? DK_L.first()
         || {!
            |? {? DK_L.PAL<>null
               || {? DK_L.PAL().AKT='N'
                  || _wyn:=0;
                     _czy:=0
                  || _pal.clear();
                     {? _pal.find_key($DK_L.PAL)
                     || _pal.ILE+={? DK_L.PAL=DK_L.PALDO || 2 || 1 ?};
                        _pal.put(1)
                     || _pal.blank();
                        _pal.PAL:=$DK_L.PAL;
                        SL.index('PALALL');
                        SL.prefix(DK_L.PAL);
                        _pal.ILE:=SL.size()-DK_L.PAL().count()+exec('ilpalpoz','magdok_palety',DK_L.PAL)
                         +{? DK_L.PAL=DK_L.PALDO || 2 || 1 ?};
                        _pal.add(1)
                     ?}
                  ?}
               ?};
               _wyn & DK_L.next()
            !}
         ?}
      || _wyn:=2
      ?}
   ?};
   ND.cntx_pop();
   DK.cntx_pop();
   DK_L.cntx_pop();
   DK_LN.cntx_pop();
   DK_LI.cntx_pop();
   DK_C.cntx_pop();
   SL.cntx_pop();
   {? _czy
   || PAL.cntx_psh();
      PAL_POZ.cntx_psh();
      _pal.clear();
      {? _pal.first()
      || {!
         |? {? _pal.ILE<>0
            || exec('add_kom','#message','Paleta %1'
                ' wykorzytywana na innych dokumentach.'@[exec('FindAndGet','#table','PAL',_pal.PAL,,"PAL.KODK",'')],4,,__lp+=1);
               _wyn:=0
            || PAL.clear();
               {? PAL.seek(_pal.PAL)
               || PAL_POZ.index('PAL');
                  PAL_POZ.prefix(PAL.ref());
                  {? PAL_POZ.first() || {! |? PAL_POZ.del() !} ?};
                  PAL.STAN:='N';
                  PAL.P:='N';
                  PAL.W:='N';
                  PAL.R:='N';
                  PAL.put()
               ?}
            ?};
            _wyn & _pal.next()
         !}
      ?};
      PAL.cntx_pop();
      PAL_POZ.cntx_pop()
   ?};
   obj_del(_pal)
|| _wyn:=2
?};
_wyn


\ilpalpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: Zwraca ilosc pozycji palety
::   WE: _a - ref palety
::  OLD: \ilpalpoz/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
PAL.cntx_psh();
PAL_POZ.cntx_psh();
PAL.clear();
{? PAL.seek(_a)
|| {? PAL.AKT='N' || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99')) || PAL_POZ.use('paletyp') ?}
?};
PAL_POZ.index('PAL');
PAL_POZ.prefix(_a);
_wyn:=PAL_POZ.size();
PAL_POZ.use('paletyp');
PAL.cntx_pop();
PAL_POZ.cntx_pop();
_wyn


\czyniewy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy dana paleta nie zostala wybrana
::   WE: _a - kod palety
::       _b - ref SQL palety
::   WY: 1-nie wybrano 0-wybrano
::  OLD: \czyniewy/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
__palkpl.cntx_psh();
__palkpl.index(__palki2);
_wyn:=~(__palkpl.find_key(BEER.AKTZKN,_a,_b) & __palkpl.LP>0 & __palkpl.WYB);
__palkpl.cntx_pop();
_wyn


\last_dst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: szuka ostatniej dostawy dla palety
::   WE: _a - ref indeksu materialowego
::       _b - ref palety
::       _c - cena
::       _d - ref cechy
::       _e - ilosc na palecie
::       _f - tabela dostaw do pominiecia
::   WY: ref w postaci SQL-a
::  OLD: \last_dst/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
ND.cntx_psh();
DK.cntx_psh();
DK_L.cntx_psh();
OKR.cntx_psh();
PAL.cntx_psh();
PAL_POZ.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.last()
|| {!
   |? DK_L.index('PALDTTM');
      DK_L.prefix(_b);
      {? DK_L.last()
      || {!
         |? _czyzakc:=DK_L.DK().N().Z='T' | (';ZT'*DK_L.DK().N().STAT_REJ)>1;
            {? DK_L.DK<>null & DK_L.DK().N().TYP().P='T' & _czyzakc & DK_L.M=_a & (_c=DK_L.DK().C)
             & DK_L.DK().DK_C=_d & DK_L.IL=_e
            || _wyn:=form(DK_L.DK().NDK,8)+form(DK_L.DK().RDK,,0,'99');
               0
            || DK_L.prev()
            ?}
         !}
      ?};
      _wyn='' & OKR.prev()
   !}
?};
{? _wyn='' & ~_c
|| OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.last()
   || {!
      |? DK_L.index('PALDTTM');
         DK_L.prefix(_b);
         {? DK_L.last()
         || {!
            |? _czyzakc:=DK_L.DK().N().Z='T' | (';ZT'*DK_L.DK().N().STAT_REJ)>1;
               {? DK_L.DK<>null & DK_L.DK().N().TYP().P='T' & _czyzakc & DK_L.M=_a & DK_L.DK().DK_C=_d
               || _wyn:=form(DK_L.DK().NDK,8)+form(DK_L.DK().RDK,,0,'99');
                  0
               || DK_L.prev()
               ?}
            !}
         ?};
         _wyn='' & OKR.prev()
      !}
   ?}
?};
ND.cntx_pop();
DK.cntx_pop();
DK_L.cntx_pop();
OKR.cntx_pop();
PAL.cntx_pop();
PAL_POZ.cntx_pop();
_wyn


\czyp_dkc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza zawieranie sie cechy pozycja zamowienia a pozycja palety
::   WE: _a - ref SQL M
::       _b - ref DK_C do sprawdzenia
::       _c - ilosc
::       _d - tabela danych
::   WY: 'A' - zgodne,'B' - brak zgodnosci
::  OLD: \czyp_dkc/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='B';
_d.clear();
_d.prefix(_a);
{? _d.first()
|| {!
|?    {? _b=null || _wyn:='A'
      |? _d.DKC='' || _wyn:='A'
      |? exec('czyzawch','mat_atr',exec('FindAndGet','#table',DK_C,_d.DKC,,,null()),_b) || _wyn:='A'
      ?};
      _wyn<>'A' & _d.next()
   !}
?};
_wyn


\bldommag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wartosc poczatkowa pola PAL.MG
::  OLD: \bldommag/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANX.WHERE='W' | EANX.WHERE='P'
|| {? ND.MD<>null & ND.TYP().DN<>'K'
   || {? ND.MD().PAL='T' || ND.MD || null() ?}
   || {? ST.MAG().PAL='T' || ST.MAG || null() ?}
   ?}
|| {? ST.MAG().PAL='T' || ST.MAG || null() ?}
?}


\pw_mktm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietleniem pola PAL.MKTM
::  OLD: \pw_mktm/mws.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rekprzed','color','PAL#PRO')


\blp_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wartosc poczatkowa pola PAL_POZ.PAL
::  OLD: \blp_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
PAL.ref()


\prm_palp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pola PAL_POZ.M
::  OLD: \prm_palp/mws.fml
::----------------------------------------------------------------------------------------------------------------------
JM.win_dict('WER');
1


\pom_palp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pola PAL_POZ.M
::  OLD: \pom_palp/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAL_POZ.M().M_ATR<>null() & PAL_POZ.M().M_ATR<>PAL_POZ.DK_C().M_ATR || PAL_POZ.DK_C:=null ?};
PAL_POZ.JM:=PAL_POZ.M().J;
{? PAL_POZ.TW=date(0,0,0) & PAL_POZ.M().TWD>0
|| PAL_POZ.TW:=date()+PAL_POZ.M().TWD
?};
1


\be_palpoz_c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: przed edycja PAL_POZ.C
::  OLD: \be_palpoz_c/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAL_POZ.PAL().MG().IL='T'
|| 0
|? PAL_POZ.C=0
||
   TAZ.RABOFF:=1;
   BEER.SZ:='Z';
   exec('taz_sd_set','ceny');
   {? {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?}
   ||
      KALK.JM:=KALK.J2:=PAL_POZ.M().J; KALK.WS2:=1;
      exec('stplicz','ceny',PAL_POZ.IL);
      __cena:=PAL_POZ.C;
      exec('ceny_mat','ceny_mat',PAL_POZ.M,null,!__cena,0,,'','N',INFO.NAROD,'',,0,,,0,0,0);
      PAL_POZ.C:=__cena;
      VAR_DEL.delete('__cena')
   ?};
   TAZ.RABOFF:=0;
   1
|| 1
?}


\f3_palpoz_c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: F3 pola PAL_POZ.C
::  OLD: \f3_palpoz_c/mws.fml
::----------------------------------------------------------------------------------------------------------------------
TAZ.RABOFF:=1;
BEER.SZ:='Z';
KALK.JM:=KALK.J2:=PAL_POZ.M().J; KALK.WS2:=1;
_wyn:=exec('f3_zdcen','ceny_mat',PAL_POZ.M,null(),PAL_POZ.C,,'PAL_POZ');

TAZ.RABOFF:=0;
_wyn


\pwpj2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przed wyswietleniem pol dla PAL_POZ
::  OLD: \pwpj2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
''


\prpj2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przed redakcja pol dla PAL_POZ
::  OLD: \prpj2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? 'WS2 J2 IL2'*cur_afld()
|| JM.win_dict('WERF');
   JM.f_clear();
   JM.index('KOD');
   JM.prefix();
   JM.f_set('KOD,NAZ',,,);

   {? cur_afld()='J2' & PAL_POZ.ILP=0
   || _ile:=JM.f_size();
      {? ~_ile  || _wyn:=0
      |? _ile=1 || JM.f_first(); PAL_POZ.J2:=JM.ref(); PAL_POZ.WS2:=1
      |? PAL_POZ.J2=null & exec('FindInSet','#table','MJM','JM',PAL_POZ.M().J,PAL_POZ.M)<>null
      || PAL_POZ.J2:=exec('FindInSet','#table','MJM','JM',PAL_POZ.M().J,PAL_POZ.M,"MJM.JP",,,null())
      |? PAL_POZ.J2=null & exec('FindInSet','#table','MJM','JP',PAL_POZ.M().J,PAL_POZ.M)<>null
      || PAL_POZ.J2:=exec('FindInSet','#table','MJM','JP',PAL_POZ.M().J,PAL_POZ.M,"MJM.JM",,,null())
      ?}
   |? 'WS2 IL2'*cur_afld() & PAL_POZ.J2=null
   || _wyn:=0
   ?}
?};
_wyn


\popj2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: po redakcji pol dla PAL_POZ
::  OLD: \popj2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
_zmil:=0;
{? cur_afld()='J2'
|| _ws2:=exec('prz','jm',PAL_POZ.M,PAL_POZ.J2,PAL_POZ.M().J);
   {? PAL_POZ.WS2=0
    | (PAL_POZ.WS2<>_ws2
      & FUN.ask('Współczynnik przeliczenia (%1)\n'
         'jest różny niż współczynnik dla powiązanej jednostki (%2).\n\n'
         'Czy zmienić współczynnik przeliczenia oraz ilość?'@[form(PAL_POZ.WS2,,,'99'),form(_ws2,,,'99')]))
   || _zmil:=PAL_POZ.WS2<>_ws2;
      PAL_POZ.WS2:=_ws2
   ?}
?};

_dokl_m:=exec('jaka_dok_m','jm',PAL_POZ.M);
_dokl_s:=exec('jaka_dok_mjm','jm',PAL_POZ.M,PAL_POZ.J2,PAL_POZ.M().J);
{? _dokl_s<0 || _dokl_s:=_dokl_m ?};

{? PAL_POZ.WS2
|| _il2:=PAL_POZ.ILP/PAL_POZ.WS2 $ (_dokl_s+1);
   roundmet(BEER.MDOKL);
   _il2:=_il2 $ _dokl_s;
   roundmet(5);
   {? PAL_POZ.ILP<>0 & PAL_POZ.IL2=0 || PAL_POZ.IL2:=_il2 ?}
|| _il2:=0
?};

{? PAL_POZ.ILP=0
 | (_il2>0 & _il2<>PAL_POZ.IL2
   & (_zmil | FUN.ask('Ilość wyliczona wg jednostki dodatkowej jest różna od ilości.\nCzy zmienić ilość?'@)))
|| PAL_POZ.ILP:=PAL_POZ.IL2*PAL_POZ.WS2 $ _dokl_m;
   PAL_POZ.ILP:=PAL_POZ.ILP $ _dokl_m
|| _dokl_m:=exec('jaka_dok_m','jm',PAL_POZ.M);
   _dokl_s:=exec('jaka_dok_mjm','jm',PAL_POZ.M,PAL_POZ.J2,PAL_POZ.M().J);
   {? _dokl_s<0 || _dokl_s:=_dokl_m ?};

   {? PAL_POZ.WS2
   || PAL_POZ.IL2:=PAL_POZ.ILP/PAL_POZ.WS2 $ (_dokl_s+1);
      roundmet(BEER.MDOKL);
      PAL_POZ.IL2:=PAL_POZ.IL2 $ _dokl_s;
      roundmet(5)
   ?}
?};
1


\autoapal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: Dodanie nowych palet
::   WE: [_a] - kod nowej palety
::       [_b] - tabela dodanych palet
::       [_c] - typ palety - string
::   WY: 1-dodano 0-nie
::  OLD: \autoapal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_czyadd:=0;
_refpo:=PAL.ref();
_kodpal:={? var_pres('_a')=type_of('') & _a<>'' || _a || '' ?};
_tabpal:={? var_pres('_b')=type_of(FIRMA) || _multi:=1; _b || _multi:=0; ~~ ?};
_typpal:={? var_pres('_c')=type_of('') || exec('FindInSet','#table','TPAL','TYP',_c,,,1,,null()) || null() ?};

_atrmjs:=ATR.MJS;
ATR.MJS:='EANX';

_hwhere:=HELP.WHERE;
HELP.WHERE:='';

_menupth:=2+BEER.MENU_PTH;
_addnew:=_menupth='MR' & ST.MAG().PAL='N';
_addbuf:={? _multi
         || 4
         |? (3+cur_tab().name())='ean'
         || 1
         |? _menupth='FW'
         || 2
         |? _menupth='ZW'
         || 3
         |? (_menupth='MR' | _menupth='MO')
         || PAL.win_sel('?')='SLO' & PAL_POZ.win_sel('?')='WYBPOZ'
         |? (_menupth='ZZ' | _menupth='ZT')
         || PAL.win_sel('?')='SLO'
         || 0
         ?};

{? _multi
||
:: parametry ustawione wcześniej
   1
|? _addnew | _addbuf
|| EANX.TYPPAL:={? _typpal<>null()
                || _typpal
                |? _addnew
                || ND.MD().TPAL
                |? _addbuf=2
                || exec('FindInSet','#table','MG','MAGAZYNY',X_Xa.MG,X_Xa.MG,"MG.TPAL",,,null())
                |? _addbuf=3
                || exec('FindInSet','#table','MG','MAGAZYNY',__rea_tab.MAGAZYN,__rea_tab.MAGAZYN,"MG.TPAL",,,null())
                || ND.MAG().TPAL
                ?};
   EANX.KOPIA:='N';
   EANX.MPAL:=null;
   EANX.ALLPAL:=0;
   EANX.ILMPAL:=0;
   EANX.CMPAL:=0;
   EANX.TWMPAL:=date(0,0,0);
   EANX.ILPAL:=1;
   EANX.DOPAS:='N';
   EANX.DK_C:=null;
   TPAL.index('TYP');
   TPAL.win_sel('SEL');
   TPAL.seek(EANX.TYPPAL);
   {? TPAL.select(,1) || EANX.TYPPAL:=TPAL.ref() || EANX.TYPPAL:=null ?}
|| EANX.TYPPAL:=ST.MAG().TPAL;
   EANX.KOPIA:=ST.MAG().SPADD;
   EANX.MPAL:=null;
   EANX.ALLPAL:=0;
   EANX.ILMPAL:=0;
   EANX.CMPAL:=0;
   EANX.TWMPAL:=date(0,0,0);
   EANX.ILPAL:=1;
   EANX.DK_C:=null;
   EANX.DOPAS:=ST.MAG().DOPAS
?};
_mark:='mark='+{? (';JB'*EANX.KOPIA)>1 || '1' || '0' ?};
EANX.efld_opt('PAL',_mark,,'MPAL');
EANX.efld_opt('PAL',_mark,,'ILMPAL');
EANX.win_edit('PAL');
{? {? _addnew | _addbuf | _multi
   || {? EANX.TYPPAL=null
       || FUN.info('Nie wybrano typu palety.\nDołączenie niemożliwe.'@);
          0
       || 1
       ?}
   || EANX.edit("exec('ctrlpal','magdok_palety')")
   ?}
|| _ref:=PAL.ref();
   PAL.cntx_psh();
   PAL.clear();
   {? EANX.KOPIA='N' | EANX.KOPIA='T' | EANX.KOPIA='A'
   || _errlock:=0;
      {! _i..EANX.ILPAL
      |! _lock:=PAL.lock(1,1,1);
         {? _lock>0
         || PAL.blank();
            PAL.AKT:='T';
            {? _addnew || PAL.ODD:=ND.MD().ODDZ ?};
            PAL.KODK:={? _kodpal<>'' || _kodpal || exec('kodk_pal','magdok_palety') ?};
            PAL.TPAL:=EANX.TYPPAL;
            _isadd:=PAL.add();
            {? _lock || PAL.unlock() ?};
            {? _isadd
            || _czyadd:=1;
               _wyn:=1;
               _refpo:=PAL.ref();
               PAL.STAN:={? EANX.KOPIA='A' || 'T' |? _addbuf=1 || 'B' || 'N' ?};
               {? _addbuf & _addbuf<3 || PAL.ROZ:='B' ?};
               {? PAL.put() & (EANX.KOPIA='T' | EANX.KOPIA='A')
               || _new:=PAL.ref();
                  PAL.cntx_psh();
                  PAL_POZ.cntx_psh();
                  PAL.clear();
                  {? PAL.seek(_ref)
                  || {? PAL.AKT='N' || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99')) || PAL_POZ.use('paletyp') ?}
                  ?};
                  PAL_POZ.index('PAL');
                  PAL_POZ.prefix(_ref);
                  {? PAL_POZ.first()
                  || {!
                     |? PAL_POZ.cntx_psh();
                        PAL_POZ.clear();
                        PAL_POZ.PAL:=_new;
                        PAL_POZ.AKT:={? EANX.KOPIA='A' || 'T' || 'N' ?};
                        PAL_POZ.ILP:=PAL_POZ.IL;
                        PAL_POZ.RSQL:='';
                        PAL_POZ.STATS:=null;
                        {? PAL_POZ.PAL().MG().IL='T' || PAL_POZ.C:=0 ?};
                        exec('uzupIDkod','magdok_palety',PAL_POZ);
                        PAL_POZ.add(1);
                        PAL_POZ.cntx_pop();
                        PAL_POZ.next()
                     !}
                  ?};
                  PAL_POZ.use('paletyp');
                  PAL.cntx_pop();
                  PAL_POZ.cntx_pop()
               ?};
               exec('ktm2pal','magdok_palety',0)
            ?}
         || _errlock+=1
         ?}
      !};
      {? _errlock>0
      || {? FUN.ask('Nie udało się dodać %1 palet.\nBrak dostępu do tabeli PALET.\n\n'
                    'Czy chcesz zobaczyć kto blokuje?'@[$_errlock]) & PAL.lock(1,,1)
         || PAL.unlock()
         ?}
      ?}
   |? EANX.KOPIA='J' | EANX.KOPIA='B'
   || _allpal:=EANX.ALLPAL;
      _errlock:=0;
      {! _i..EANX.ILPAL
      |! _lock:=PAL.lock(1,1,1);
         {? _lock>0
         || PAL.blank();
            PAL.AKT:='T';
            PAL.KODK:={? _kodpal<>'' || _kodpal || exec('kodk_pal','magdok_palety') ?};
            PAL.TPAL:=EANX.TYPPAL;
            _isadd:=PAL.add();
            {? _lock || PAL.unlock() ?};
            {? _isadd
            || _czyadd:=1;
               _wyn:=1;
               _refpo:=PAL.ref();
               PAL.STAN:={? EANX.KOPIA='B' || 'T' || 'N' ?};
               {? PAL.put()
               || _new:=PAL.ref();
                  PAL.cntx_psh();
                  PAL_POZ.cntx_psh();
                  PAL_POZ.use('paletyp');
                  PAL_POZ.clear();
                  PAL_POZ.blank();
                  PAL_POZ.PAL:=_refpo;
                  PAL_POZ.M:=EANX.MPAL;
                  PAL_POZ.IL:=PAL_POZ.ILP:={? EANX.DOPAS='T' & _i=EANX.ILPAL || _allpal || EANX.ILMPAL ?};
                  _allpal-=PAL_POZ.ILP;
                  PAL_POZ.C:=EANX.CMPAL;
                  {? PAL_POZ.PAL().MG().IL='T' || PAL_POZ.C:=0 ?};
                  PAL_POZ.TW:=EANX.TWMPAL;
                  PAL_POZ.AKT:={? EANX.KOPIA='B' || 'T' || 'N' ?};
                  PAL_POZ.RSQL:='';
                  PAL_POZ.JM:=PAL_POZ.M().J;
                  PAL_POZ.DK_C:=EANX.DK_C;
                  PAL_POZ.STATS:=null;
                  exec('uzupIDkod','magdok_palety',PAL_POZ);
                  {? PAL_POZ.add(1) & _multi
                  || _tabpal.blank();
                     _tabpal.REF:=$_refpo;
                     _tabpal.IL:=PAL_POZ.IL;
                     _tabpal.add(1)
                  ?};
                  PAL.cntx_pop();
                  PAL_POZ.cntx_pop()
               ?};
               exec('ktm2pal','magdok_palety',0)
            ?}
         || _errlock+=1
         ?}
      !};
      {? _errlock>0
      || {? FUN.ask('Nie udało się dodać %1 palet.\nBrak dostępu do tabeli PALET.\n\n'
                    'Czy chcesz zobaczyć kto blokuje?'@[$_errlock]) & PAL.lock(1,,1)
         || PAL.unlock()
         ?}
      ?}
   ?};
   PAL.cntx_pop();
   {? PAL.f_active()>0 & EANX.KOPIA<>'B'
   || PAL.f_rfresh();
      {? ~PAL.f_seek(_refpo) & _czyadd || FUN.info('Dodana paleta nie mieści się w aktualnym zakresie palet.'@) ?}
   || {? ~PAL.seek(_refpo) & _czyadd || FUN.info('Dodana paleta nie mieści się w aktualnym zakresie palet.'@) ?}
   ?}
?};
ATR.MJS:=_atrmjs;
HELP.WHERE:=_hwhere;
_wyn


\ctrlpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: kontrola wprowadzonych informacji o nowej palecie
::   WY: ''-OK lub akronim pola do poprawy
::  OLD: \ctrlpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? ~{? PAL.f_test() | EANX.WHERE='X' || PAL.f_size() || PAL.size() ?} & (EANX.KOPIA='T' | EANX.KOPIA='A')
|| FUN.info('Brak palet w systemie wybranie opcji Kopia niemożliwe.'@);
   EANX.KOPIA:='N';
   _wyn:='KOPIA'
|? EANX.TYPPAL=null
|| FUN.info('Należy podać typ palety.'@);
   _wyn:='TYPPAL'
|? EANX.ILPAL<=0
|| FUN.info('Ilość palet powinna być większa od zera.'@);
   _wyn:={? EANX.DOPAS='T' || 'ALLPAL' || 'ILPAL' ?}
|? EANX.KOPIA='J' | EANX.KOPIA='B'
|| {? EANX.MPAL=null
   || FUN.info('Dla palety jednopozycyjnej wymagane jest podanie indeksu materiałowego.'@);
      _wyn:='MPAL'
   |? EANX.ILMPAL<=0
   || FUN.info('Dla palety jednopozycyjnej wymagane jest podanie ilości na palecie (wartość większa od zera).'@);
      _wyn:='ILMPAL'
   |? EANX.CMPAL<0
   || FUN.info('Cena nie może być liczb mniejszą od zera.'@);
      _wyn:='CMPAL'
   |? EANX.ALLPAL<0
   || FUN.info('Całkowita ilość nie może być liczbą mniejszą od zera.'@);
      _wyn:='ALLPAL'
   |? EANX.MPAL().CZY_TW='T' & EANX.TWMPAL=date(0,0,0)
   || FUN.info('Dla indeksu: %1\nwymagane podanie terminu ważności.'@[EANX.MPAL().KTM]);
      _wyn:='TWMPAL'
   |? EANX.MPAL().M_ATR<>null & EANX.DK_C=null
   || FUN.info('Dla indeksu: %1\nwymagane podanie cechy dostawy.'@[EANX.MPAL().KTM]);
      _wyn:='DK_C'
   ?}
?};
_wyn


\dele_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: Usuniecie palet
::  OLD: \dele_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_refpo:=PAL.ref();
_tab:=PAL.sel_aget();
PAL.sel_adel();
PAL.cntx_psh();
_tab.clear();
{? _tab.size() & _tab.first()
|| _akc:=0;
   _dok:=0;
   _poz:=0;
   _nop:=0;
   {? FUN.ask('Czy usunąć zaznaczone palety (wózki)?\n\n'
       'Uwaga. Usunąć można tylko palety (wózki) niezaakceptowane.\n'
       'Dodatkowo wózki i palety nieoznaczone z pozycjami nie zostaną usunięte.\n'
       'Nie zostaną również usunięte palety wykorzystane dla rozpakowań wydań.'@)
   || {!
      |? {? (PAL.clear(); PAL.seek(_tab.REF,))
         || {? PAL.BEZOZN='B' & PAL.count()
            || _nop+=1
            |? PAL.STAN='N' | PAL.STAN='B'
            || {? (1+PAL.BEZOZN)='T' & exec('FindInSet','#table','PAL_POZ','PAL',PAL.ref())<>null
               || _poz+=1
               || do();
                  exec('delepalp','magdok_palety',PAL.ref());
                  {? ~PAL.count() || PAL.del() || _dok+=1; undo() ?};
                  end()
               ?}
            || _akc+=1
            ?}
         ?};
         _tab.next()
      !}
   ?};
   _refpo:=PAL.ref();
   {? _akc | _dok | _poz | _nop
   || FUN.info({? _akc
               || 'Pominięto: %1 zaakceptowanych palet (wózków).\n'@[form(_akc,,0,'99')]
               || '\n'
               ?}+
               {? _dok
               || 'Pominięto: %1 powiązanych palet (wózków)(np.dok.przesunięcia).'@[form(_dok,,0,'99')]
               || '\n'
               ?}+
               {? _poz
               || 'Pominięto: %1 palet nieoznaczonych lub wózków z pozycjami.'@[form(_poz,,0,'99')]
               || ''
               ?}+
               {? _nop
               || 'Pominięto: %1 palet wykorzystanych dla rozpakowań wydań.'@[form(_nop,,0,'99')]
               || ''
               ?})
   ?}
|| {? PAL.BEZOZN='B' & PAL.count()
   || FUN.info('Paleta wykorzystana dla rozpakowań do wydań - usunięcie niemożliwe.'@)
   |? PAL.STAN='N' | PAL.STAN='B'
   || {? (1+PAL.BEZOZN)='T' & exec('FindInSet','#table','PAL_POZ','PAL',PAL.ref())<>null
      || FUN.info({? PAL.BEZOZN='TW' || 'Wózek posiada pozycje.\nUsunięcie niemożliwe.'@
                                     || 'Paleta posiada pozycje.\nUsunięcie niemożliwe.'@ ?})
      |? FUN.ask({? PAL.BEZOZN='TW' || 'Czy usunąć wózek?'@ || 'Czy usunąć paletę?'@ ?})
      || do();
         exec('delepalp','magdok_palety',PAL.ref());
         {? ~PAL.count()
         || PAL.del()
         || FUN.info({? PAL.BEZOZN='TW' | PAL.BEZOZN='N'
                     || 'Paleta powiązana (np.dok.przesunięcia) usunięcie niemożliwe.'@
                     || 'Wózek powiązany (np.dok.przesunięcia) usunięcie niemożliwe.'@ ?});
            undo()
         ?};
         end();
         _refpo:=PAL.ref()
      ?}
   || FUN.info('Paleta zaakceptowana usunięcie niemożliwe.'@)
   ?}
?};
PAL.cntx_pop();
PAL.seek(_refpo);
~~


\delepalp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: Usuwa pozycje pod dana paleta
::   WE: _a - ref palety
::  OLD: \delepalp/mws.fml
::----------------------------------------------------------------------------------------------------------------------
PAL_POZ.index('PAL');
PAL_POZ.prefix(_a);
{? PAL_POZ.first() || {! |? PAL_POZ.del() !} ?}


\find_wgm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: szukanie palet wg zawartosci
::  OLD: \find_wgm/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__fpal');

__fpal:=tab_tmp(6,'PAL','STRING[30]',''
         ,'KTM','STRING[50]',''
         ,'MAT','STRING[16]',''
         ,'DKC','STRING[16]',''
         ,'CEN','REAL',''
         ,'TW','DATE',''
         ,'NAZ','STRING[120]',''
         ,'ILP','REAL',''
         ,'JM','STRING[10]',''
         ,'SQL','STRING[16]',''
         ,'PQL','STRING[16]',''
         ,'ATR','STRING[20]',''
         ,'TYP','STRING[20]',''
         ,'ZNP','STRING[1]',''
         ,'ZNR','STRING[1]',''
         ,'ZNW','STRING[1]',''
         ,'ZNM','STRING[1]',''
         ,'ZNZ','STRING[1]',''
         ,'STN','STRING[1]',''
         ,'MKTM','STRING[50]',''
         ,'WAR01','STRING[25]','atrybut 1'
         ,'WAR02','STRING[25]','atrybut 2'
         ,'WAR03','STRING[25]','atrybut 3'
         ,'WAR04','STRING[25]','atrybut 4'
         ,'WAR05','STRING[25]','atrybut 5'
         ,'WAR06','STRING[25]','atrybut 6'
         ,'WAR07','STRING[25]','atrybut 7'
         ,'WAR08','STRING[25]','atrybut 8'
         ,'WAR09','STRING[25]','atrybut 9'
         ,'WAR10','STRING[25]','atrybut 10');

_zatw:=0;
EANX.MJAK:='N';
EANX.MILE:=0;
EANX.win_edit('FPAL');
{? EANX.edit("exec('verifpal','magdok_palety')")
|| _zatw:=1;
   PAL.cntx_psh();
   PAL_POZ.cntx_psh();
   _zakres:='';
   {? {? PAL.f_active()>0 || PAL.f_first() || PAL.first() ?}
   || _zakres:=PAL.AKT
   ?};
   {? {? PAL.f_active()>0 || PAL.f_last() || PAL.last() ?}
   || {? PAL.AKT=_zakres & PAL.name()='palety'
      || _zakr:=tab_tmp(1,'NAME','STRING[8]','');
         _zakr.blank();
         _zakr.NAME:='paletyp';
         _zakr.add(1)
      || _zakr:=PAL_POZ.names()
      ?}
   ?};
   {? _zakres<>'' & (_zakr.clear(); _zakr.first())
   || {!
      |? _mskpal:=1+(4-_zakr.NAME);
         _mskpal:={? _mskpal='t' || 'palety' || 'palet%1'[_mskpal] ?};
         PAL.use(_mskpal);
         PAL_POZ.use(_zakr.NAME);
         PAL_POZ.index('MKTM');
         PAL_POZ.prefix();
         {? PAL_POZ.first()
         || {!
            |? {? ({? EANX.MKTM<>'' || (~-PAL_POZ.M().KTM)*(~-EANX.MKTM) || 1 ?} &
                   {? EANX.MNAZ<>'' || (~-PAL_POZ.M().N)*(~-EANX.MNAZ) || 1 ?} &
                   {? EANX.TWDO<>date(0,0,0) || PAL_POZ.TW>=EANX.TWOD & PAL_POZ.TW<=EANX.TWDO || 1 ?} &
                   {? EANX.MJAK='T'
                   || PAL_POZ.ILP=EANX.MILE
                   |? EANX.MJAK='+'
                   || PAL_POZ.ILP>EANX.MILE
                   |? EANX.MJAK='-'
                   || PAL_POZ.ILP<EANX.MILE
                   || 1
                   ?})
               || __fpal.clear();
                  {? __fpal.find_key(PAL_POZ.PAL().KODK,PAL_POZ.M().KTM,$PAL_POZ.M
                      ,{? PAL_POZ.DK_C<>null || $PAL_POZ.DK_C || 'brak' ?},PAL_POZ.C,PAL_POZ.TW)
                  || __fpal.ILP+=PAL_POZ.ILP;
                     __fpal.put(1)
                  || __fpal.blank();
                     __fpal.PAL:=PAL_POZ.PAL().KODK;
                     __fpal.SQL:=$PAL_POZ.ref();
                     __fpal.PQL:=$PAL_POZ.PAL;
                     __fpal.KTM:=PAL_POZ.M().KTM;
                     __fpal.MAT:=$PAL_POZ.M;
                     __fpal.DKC:={? PAL_POZ.DK_C<>null || $PAL_POZ.DK_C || 'brak' ?};
                     __fpal.NAZ:=PAL_POZ.M().N;
                     __fpal.ILP:=PAL_POZ.ILP;
                     __fpal.TW:=PAL_POZ.TW;
                     __fpal.JM:=PAL_POZ.M().J().KOD;
                     __fpal.CEN:=PAL_POZ.C;
                     __fpal.ATR:=PAL_POZ.DK_C().SYM;
                     __fpal.TYP:=PAL_POZ.PAL().TPAL().TYP;
                     __fpal.STN:=PAL_POZ.PAL().STAN;
                     __fpal.ZNP:=PAL_POZ.PAL().P;
                     __fpal.ZNR:=PAL_POZ.PAL().R;
                     __fpal.ZNW:=PAL_POZ.PAL().W;
                     __fpal.ZNM:=PAL_POZ.PAL().M;
                     __fpal.ZNZ:=PAL_POZ.PAL().Z;
                     __fpal.MKTM:=PAL_POZ.PAL().MKTM;
                     {? PAL_POZ.DK_C<>null
                     || {! _i:=1..10
                        |! ($('__fpal.WAR'+form(_i,-2,0,'99')))():=($('PAL_POZ.DK_C().WAR'+form(_i,-2,0,'99')))()
                        !}
                     ?};
                     __fpal.add(1)
                  ?}
               ?};
               PAL_POZ.next()
            !}
         ?};
         _zakr.next()
      !};
      obj_del(_zakr)
   ?};
   PAL.cntx_pop();
   PAL_POZ.cntx_pop()
?};

__fpal.clear();
{? __fpal.first()
|| _win_sel:=__fpal.mk_sel('Rezultat wyszukiwania'@,'P',,'#palfindzaw',,,,,'U',,,,,'html_maximized');

   __fpal.win_fld(_win_sel,,'TYP',,,3,,,'Typ'@);
   __fpal.win_fld(_win_sel,,'PAL',,,10,,,'Paleta'@);
   __fpal.win_fld(_win_sel,,'STN',,,4,,,'Stan'@);
   __fpal.win_fld(_win_sel,,'ZNP',,,3,,,'P',,,2,,"'T'","'N'","'W'");
   __fpal.win_fld(_win_sel,,'ZNR',,,3,,,'R',,,2,,"'T'","'N'","'W'");
   __fpal.win_fld(_win_sel,,'ZNW',,,3,,,'W',,,2,,"'T'","'N'","'W'");
   __fpal.win_fld(_win_sel,,'ZNM',,,3,,,'M',,,2,,"'T'","'N'","'W'");
   __fpal.win_fld(_win_sel,,'ZNZ',,,3,,,'Z',,,2,,"'T'","'N'","'W'");
   __fpal.win_fld(_win_sel,,'KTM',,,15,,,'Indeks'@);
   __fpal.win_fld(_win_sel,,'NAZ',,,15,,,'Nazwa'@);
   __fpal.win_fld(_win_sel,,'ILP',,,10,3,0,'Ilość'@);
   __fpal.win_fld(_win_sel,,'JM',,,5,,,'jm'@);
   __fpal.win_fld(_win_sel,,'CEN',,,10,2,0,'Cena'@);
   __fpal.win_fld(_win_sel,,'TW',,,10,,0,'Termin ważności'@);
   __fpal.win_fld(_win_sel,,'ATR',,,10,,0,'Cecha'@);
   __fpal.win_act(_win_sel,0,'Formuła','Wybierz'@@,,,"sel_exit",,1);
   __fpal.win_act(_win_sel,0,'Formuła','Po&zycje palety'@@,,,"exec('fpoz_pal','magdok_palety')");
   __fpal.win_act(_win_sel,0,'Formuła','Historia operacji'@@,,,"exec('fhis_pal','magdok_palety')");
   __fpal.win_act(_win_sel,0,'Rekord',,,,"exec('rekprzed','color','__fpal#01')");
   __fpal.win_act(_win_sel,0,'Wyświetl',,,,"exec('dispdkcp','magdok_palety',__fpal.SQL)");
   __fpal.win_act(_win_sel,0,'Szukaj');
   __fpal.win_act(_win_sel,0,'Kolejność');
   __fpal.win_act(_win_sel,0,'Formuła','Legenda'@@,,,"exec('legenda','color','__fpal#01')");

   __fpal.win_sel(_win_sel);
   {? __fpal.select()
   || {? {? PAL.f_active()>0 || ~PAL.f_seek(__fpal.PQL) || ~PAL.seek(__fpal.PQL) ?}
      || FUN.info('Dana paleta nie zawiera się w aktualnym zakresie palet.'@)
      ?}
   ?}
|? _zatw
|| FUN.info('Brak palet spełniających zadane kryteria.'@)
?};
VAR_DEL.delete('__fpal');
~~


\verifpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: weryfikacja poprawnosci wprowadzonych danych
::  OLD: \verifpal/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANX.MILE<0
|| FUN.info('Ilość musi być liczbą większą lub równą zero.'@);
   'MILE'
|? EANX.TWDO<EANX.TWOD
|| FUN.info('Niepoprawny zakres terminów ważności.'@);
   'TWOD'
|| ''
?}


\fpoz_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: podglad pozycji palety
::  OLD: \fpoz_pal/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pozy_pal','magdok_palety',__fpal.PQL);
~~


\pozy_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: Pozycje palet
::   WE: [a] - ref SQL-owy palety, domyslnie jest ustawione PAL.ref()
::  OLD: \pozy_pal/mws.fml
::       \poz_bozn/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};

PAL.cntx_psh();
{? _a<>'' || PAL.clear(); PAL.seek(_a) ?};
{? ~PAL.r_lock(1,1,1)
|| {? FUN.ask('Paletę obsługuje inny operator.\nCzy chcesz zobaczyć kto?'@) & PAL.r_lock() || PAL.r_unlock() ?}
|| _atrmjs:=ATR.MJS;
   ATR.MJS:='PAL_POZ';
   PAL_POZ.win_sel('WER');
   PAL_POZ.index('PAL');
   PAL_POZ.prefix(PAL.ref());
   _act:=PAL_POZ.actions('WER',{? PAL.STAN<>'N' | _a<>'' || 'dupC:d' || '' ?});
   _beertab:=BEER.TAB;
   BEER.TAB:='PAL_POZ';
   PAL_POZ.select();
   BEER.TAB:=_beertab;
   PAL_POZ.actions('WER',_act);
   PAL.r_unlock();
   ATR.MJS:=_atrmjs
?};
PAL.cntx_pop()


\fhis_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: podglad historii operacji dla palety
::  OLD: \fhis_pal/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('hist_pal','magdok_palety',__fpal.PQL);
~~


\hist_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: historia operacji danej palety
::   WE: [a] - ref SQL-owy palety, domyslnie jest ustawione PAL.ref()
::  OLD: \hist_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};

PAL.cntx_psh();
:: ustawienie na palecie wg podanego ref-a SQL
{? _a<>''
|| PAL.use(form(8+_a));
   PAL.prefix();
   PAL.seek(_a)
?};

:: przyjecie, wydanie, reorganizacja, depaletyzacja
VAR_DEL.delete('__hispal');

__hispal:=tab_tmp(6,'TREE','TREE_REF',''
           ,'LAB','STRING[50]',''
           ,'MAG','STRING[10]',''
           ,'DAT','STRING[10]',''
           ,'TYP','STRING[16]',''
           ,'SYM','STRING[40]',''
           ,'AKC','STRING[1]',''
           ,'SQL','STRING[16]',''
           ,'LOK','STRING[50]','');

_win_sel:=__hispal.mk_sel({? PAL.STAN='I'
                          || 'Historia operacji dla palety: %1'@[exec('kodk_akt','magdok_palety',PAL.KODK)]
                          || 'Historia operacji dla palety: %1'@[PAL.KODK]
                          ?},'P',,'histpal_sel',,,__hispal.size(),1);

__hispal.win_fld(_win_sel,,'LAB',,,32,,1,'',,,,,,,,'mobile_visible=1, mobile_header=1');
__hispal.win_fld(_win_sel,,'MAG',,,7,,1,'Magazyn'@);
__hispal.win_fld(_win_sel,,'DAT',,,10,3,1,'Data'@,,,,,,,,'mobile_visible=1');
__hispal.win_fld(_win_sel,,'TYP',,,16,,1,'Typ'@);
__hispal.win_fld(_win_sel,,'SYM',,,20,,1,'Symbol'@,,,,,,,,'mobile_visible=1');
__hispal.win_fld(_win_sel,,'LOK',,,25,,1,'Lokalizacja'@);
__hispal.win_fld(_win_sel,,'AKC',,,-3,,1,'Zaakceptowano'@,,,2,,"'T'","'N'","'N'",'mobile_visible=1');
__hispal.win_act(_win_sel,0,'Rekord',,,,"__hispal.TYP='W' | __hispal.TYP='P' | __hispal.TYP='R' | __hispal.TYP='D'",,0);
__hispal.tr_fml(_win_sel,,"{? _a || 1 || _a ?}");
__hispal.win_fml(_win_sel,,'LAB',,'ICON_BEFORE',"
          {? __hispal.TREE=0
          || 'xwin16.png:98'
          |? __hispal.TYP='P'
          || 'xwin16.png:101'
          |? __hispal.TYP='W'
          || 'xwin16.png:162'
          |? __hispal.TYP='R'
          || 'xwin16.png:85'
          |? __hispal.TYP='D'
          || 'xwin16.png:52'
          |? __hispal.TYP='B'
          || 'xwin16.png:185'
          |? __hispal.TYP='I'
          || 'xwin16.png:187'
          || ''
          ?}
         ");
__hispal.win_sel(_win_sel);

__hispal.clear();
__hispal.blank();
__hispal.TREE:=0;
__hispal.LAB:='Paleta: '+PAL.TPAL().TYP+' - '
             +{? PAL.STAN='I' || exec('kodk_akt','magdok_palety',PAL.KODK) || PAL.KODK ?};
__hispal.MAG:='';
__hispal.DAT:='';
__hispal.TYP:=PAL.TPAL().TYP;
__hispal.SYM:={? PAL.STAN='I' || exec('kodk_akt','magdok_palety',PAL.KODK) || PAL.KODK ?};
__hispal.AKC:={? PAL.STAN<>'N' || 'T' || 'N' ?};
{? __hispal.add(1) || _tpal:=__hispal.ref() ?};
{? _tpal<>null
|| __hispal.clear();
   __hispal.blank();
   __hispal.TREE:=_tpal;
   __hispal.LAB:='Przyjęcia';
   __hispal.MAG:='';
   __hispal.DAT:='';
   __hispal.TYP:='P';
   __hispal.SYM:='';
   __hispal.AKC:='';
   __hispal.LOK:='';
   {? __hispal.add(1) || _tprz:=__hispal.ref() ?};
   __hispal.clear();
   __hispal.blank();
   __hispal.TREE:=_tpal;
   __hispal.LAB:='Wydania';
   __hispal.MAG:='';
   __hispal.DAT:='';
   __hispal.TYP:='W';
   __hispal.SYM:='';
   __hispal.AKC:='';
   __hispal.LOK:='';
   {? __hispal.add(1) || _twyd:=__hispal.ref() ?};
   __hispal.clear();
   __hispal.blank();
   __hispal.TREE:=_tpal;
   __hispal.LAB:='Reorganizacje';
   __hispal.MAG:='';
   __hispal.DAT:='';
   __hispal.TYP:='R';
   __hispal.SYM:='';
   __hispal.AKC:='';
   __hispal.LOK:='';
   {? __hispal.add(1) || _treo:=__hispal.ref() ?};
   __hispal.clear();
   __hispal.blank();
   __hispal.TREE:=_tpal;
   __hispal.LAB:='Depaletyzacje';
   __hispal.MAG:='';
   __hispal.DAT:='';
   __hispal.TYP:='D';
   __hispal.SYM:='';
   __hispal.AKC:='';
   __hispal.LOK:='';
  {? __hispal.add(1) || _tdep:=__hispal.ref() ?};
   __hispal.clear();
   __hispal.blank();
   __hispal.TREE:=_tpal;
   __hispal.LAB:='Rozpakowanie';
   __hispal.MAG:='';
   __hispal.DAT:='';
   __hispal.TYP:='B';
   __hispal.SYM:='';
   __hispal.AKC:='';
   __hispal.LOK:='';
   {? __hispal.add(1) || _troz:=__hispal.ref() ?};
   __hispal.clear();
   __hispal.blank();
   __hispal.TREE:=_tpal;
   __hispal.LAB:='Inwentaryzacja';
   __hispal.MAG:='';
   __hispal.DAT:='';
   __hispal.TYP:='I';
   __hispal.SYM:='';
   __hispal.AKC:='';
   __hispal.LOK:='';
   {? __hispal.add(1) || _tinw:=__hispal.ref() ?}
?};

_msk:=ND.name()+3;
:: dokumenty i reorganizacje
_dok:=sql('select distinct
            ND.REFERENCE DOKUM,
            DK_LN.REFERENCE REORG,
            DK_L.LOK LOKZ,
            DK_L.LOKDO LOKDO
           from @DK_L
            left join @DK
            left join @ND
            left join @DK_LN
           where DK_L.PAL=:_a or DK_L.PALDO=:_a or DK_L.IDPAL=\':_b\'',PAL.ref(),PAL.IDADD);
PAL.cntx_psh();
PAL_POZ.cntx_psh();
_dok.clear();
{? _dok.size & _dok.first()
|| ND.cntx_psh();
   DK.cntx_psh();
   DK_LN.cntx_psh();
   DK_L.cntx_psh();
   {!
   |? {? _dok.DOKUM<>''
      || exec('mag_open','open_tab',1+(form(8+_dok.DOKUM)+3),form(8+_dok.DOKUM)+2);
         ND.clear();
         {? ND.seek(_dok.DOKUM,form(8+_dok.DOKUM))
         || __hispal.clear();
            __hispal.blank();
            __hispal.TREE:={? ND.TYP().P='T' || _tprz || _twyd ?};
            __hispal.LAB:='dokument: '+ND.SYM;
            __hispal.MAG:=ND.MAG().SYM;
            __hispal.DAT:=form(ND.D);
            __hispal.TYP:=ND.TYP().T;
            __hispal.SYM:=ND.SYM;
            __hispal.AKC:=ND.Z;
            __hispal.SQL:=$ND.ref();
            __hispal.LOK:=exec('FindAndGet','#table','EANL',_dok.LOKZ,,"EANL.KOD",'');
            __hispal.add(1)
         ?}
      |? _dok.REORG<>''
      || exec('mag_open','open_tab',1+(form(8+_dok.REORG)+3),form(8+_dok.REORG)+2);
         DK_LN.clear();
         {? DK_LN.seek(_dok.REORG,form(8+_dok.REORG)) & _dok.LOKZ<>_dok.LOKDO
         || _rodzreo:={? DK_LN.RODZ='I'
                      || {? exec('czy_zinw','magdok_wspolne',$DK_LN.ref()) || 'I' || 'L' ?}
                      |? DK_LN.RODZ='D'
                      || 'D'
                      || 'S'
                      ?};
            __hispal.clear();
            __hispal.blank();
            __hispal.TREE:=_treo;
            __hispal.LAB:=' z dnia: '+form(DK_LN.DT);
            __hispal.MAG:=DK_LN.MG().SYM;
            __hispal.DAT:=form(DK_LN.DT);
            __hispal.TYP:={? _rodzreo='S' || 'Standardowa'
                          |? _rodzreo='L' || 'Spis lokalizacji'
                          |? _rodzreo='D' || 'Depaletyzacja'
                          |? _rodzreo='I' || 'Z inwentaryzacji'
                          || 'nieznana'
                          ?};
            __hispal.SYM:='';
            __hispal.AKC:=DK_LN.AKC;
            __hispal.SQL:=$DK_LN.ref();
            __hispal.LOK:={? _dok.LOKZ<>_dok.LOKDO & _dok.LOKDO<>''
                          || 'z '+exec('FindAndGet','#table','EANL',_dok.LOKZ,,"EANL.KOD",'')
                             +' do '+exec('FindAndGet','#table','EANL',_dok.LOKDO,,"EANL.KOD",'')
                          || exec('FindAndGet','#table','EANL',_dok.LOKZ,,"EANL.KOD",'')
                          ?};
            __hispal.add(1);
            {? (1+DK_LN.MG().TYP)='D' & _rodzreo='I'
            || _inwp:=exec('FindInSet','#table','TYPYDOK','TYP','INW+','INW+');
               _rdk:=0;
               _ndk:='';
               PAL.cntx_psh();
               PAL_POZ.cntx_psh();
               {? PAL.AKT='N' || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99')) || PAL_POZ.use('paletyp') ?};
               PAL_POZ.index('PAL');
               PAL_POZ.prefix(PAL.ref());
               {? PAL_POZ.first()
               || {!
                  |? {? PAL_POZ.SCSQL<>'' & PAL_POZ.ILP>0
                     || _ndk:=form(8+PAL_POZ.SCSQL);
                        _rdk:=BB.sqlint(PAL_POZ.SCSQL);
                        0
                     || PAL_POZ.next()
                     ?}
                  !}
               ?};
               PAL.cntx_pop();
               PAL_POZ.cntx_pop();
               {? _rdk<>0 & _ndk<>''
               || _do2:=sql('select distinct '+
                            '  ND.REFERENCE DOKUM'+
                            ' from @DK'+
                            '  join @ND'+
                            ' where ND.TYP=:_a'+
                            '   and DK.RDK=:_b'+
                            '   and DK.NDK=\':_c\'',_inwp,_rdk,_ndk);
                  _do2.clear();
                  {? _do2.first()
                  || {!
                     |? {? _do2.DOKUM<>''
                        || exec('mag_open','open_tab',1+(form(8+_do2.DOKUM)+3),form(8+_do2.DOKUM)+2);
                           ND.clear();
                           {? ND.seek(_do2.DOKUM,form(8+_do2.DOKUM))
                           || __hispal.cntx_psh();
                              __hispal.clear();
                              __hispal.prefix(_tprz,'dokument: '+ND.SYM,);
                              {? ~__hispal.first()
                           || __hispal.clear();
                              __hispal.blank();
                              __hispal.TREE:=_tprz;
                              __hispal.LAB:='dokument: '+ND.SYM;
                              __hispal.MAG:=ND.MAG().SYM;
                              __hispal.DAT:=form(ND.D);
                              __hispal.TYP:=ND.TYP().T;
                              __hispal.SYM:=ND.SYM;
                              __hispal.AKC:=ND.Z;
                              __hispal.SQL:=$ND.ref();
                              __hispal.add(1)
                              ?};
                              __hispal.cntx_pop()
                           ?}
                        ?};
                        _do2.next()
                     !}
                  ?};
                  obj_del(_do2)
               ?}
            ?}
         ?}
      ?};
      _dok.next()
   !};
   exec('mag_open','open_tab',1+_msk,_msk+2);
   ND.cntx_pop();
   DK.cntx_pop();
   DK_LN.cntx_pop();
   DK_L.cntx_pop()
?};
obj_del(_dok);
PAL.cntx_pop();
PAL_POZ.cntx_pop();

_aktpal:=PAL.ref();

PAL.cntx_psh();
PAL_POZ.cntx_psh();
:: czy depaletyzowana
_pal:=sql('select distinct PAL_POZ.PAL PALET from @PAL_POZ where PAL_POZ.RSQL=\':_a\' ',$_aktpal);
_pal.clear();
{? _pal.size & _pal.first()
||
   {!
   |? {? _pal.PALET<>'' & _pal.PALET<>$_aktpal & (PAL.clear(); PAL.seek(_pal.PALET,form(8+_pal.PALET)))
      || __hispal.clear();
         __hispal.blank();
         __hispal.TREE:={? PAL.ROZ<>'N' || _troz || _tdep ?};
         __hispal.LAB:='na paletę: '+PAL.KODK;
         __hispal.MAG:='';
         __hispal.DAT:='';
         __hispal.TYP:=PAL.TPAL().TYP;
         __hispal.SYM:=PAL.KODK;
         __hispal.AKC:={? PAL.STAN<>'N' || 'T' || 'N' ?};
         __hispal.SQL:=$PAL.ref();
         __hispal.add(1)
      ?};
      _pal.next()
   !}
?};
obj_del(_pal);
PAL.cntx_pop();
PAL_POZ.cntx_pop();
PAL.cntx_psh();
PAL_POZ.cntx_psh();
:: czy powstala z depaletyzacji
_pal:=sql('select distinct PAL_POZ.RSQL PALET from @PAL_POZ where PAL_POZ.PAL=:_a and PAL_POZ.RSQL<>\'\' ',_aktpal);
_pal.clear();
{? _pal.size & _pal.first()
||
   {!
   |? {? _pal.PALET<>'' & _pal.PALET<>$_aktpal & (PAL.clear(); PAL.seek(_pal.PALET,form(8+_pal.PALET)))
      || __hispal.clear();
         __hispal.blank();
         __hispal.TREE:={? PAL.ROZ<>'N' || _troz || _tdep ?};
         __hispal.LAB:='z palety: '+PAL.KODK;
         __hispal.MAG:='';
         __hispal.DAT:='';
         __hispal.TYP:=PAL.TPAL().TYP;
         __hispal.SYM:=PAL.KODK;
         __hispal.AKC:={? PAL.STAN<>'N' || 'T' || 'N' ?};
         __hispal.SQL:=$PAL.ref();
         __hispal.add(1)
      ?};
      _pal.next()
   !}
?};
obj_del(_pal);
PAL.cntx_pop();
PAL_POZ.cntx_pop();
PAL.cntx_psh();
PAL_POZ.cntx_psh();
:: inwentaryzacja
{? (PAL.clear(); PAL.seek(_aktpal) & (+PAL.KODK)=24 & PAL.STAN='I')
|| __hispal.clear();
   __hispal.blank();
   __hispal.TREE:=_tinw;
   __hispal.LAB:='palety: '+exec('kodk_akt','magdok_palety',PAL.KODK);
   __hispal.MAG:=exec('FindAndGet','#table','INN',PAL.RSQL,,"INN.MG().SYM",'');
   __hispal.DAT:=form(exec('FindAndGet','#table','INN',PAL.RSQL,,"INN.D",''));
   __hispal.TYP:=PAL.TPAL().TYP;
   __hispal.SYM:=exec('FindAndGet','#table','PAL',16+PAL.KODK,,"PAL.KODK",'');
   __hispal.AKC:={? __hispal.DAT<>form(date(0,0,0)) || 'T' || 'N' ?};
   __hispal.SQL:=$PAL.ref();
   __hispal.add(1)
|| PAL.index('PAL');
   PAL.prefix($_aktpal);
   {? PAL.first()
   || {!
      |? {? (+PAL.KODK)=24 & PAL.STAN='I'
         || __hispal.clear();
            __hispal.blank();
            __hispal.TREE:=_tinw;
            __hispal.LAB:='palety: '+exec('FindAndGet','#table','PAL',16+PAL.KODK,,"PAL.KODK",'');
            __hispal.MAG:=exec('FindAndGet','#table','INN',PAL.RSQL,,"INN.MG().SYM",'');
            __hispal.DAT:=form(exec('FindAndGet','#table','INN',PAL.RSQL,,"INN.D",''));
            __hispal.TYP:=PAL.TPAL().TYP;
            __hispal.SYM:=exec('kodk_akt','magdok_palety',PAL.KODK);
            __hispal.AKC:={? __hispal.DAT<>form(date(0,0,0)) || 'T' || 'N' ?};
            __hispal.SQL:=$PAL.ref();
            __hispal.add(1)
          ?};
          PAL.next()
      !}
   ?}
?};
PAL.cntx_pop();
PAL_POZ.cntx_pop();

__hispal.select();

VAR_DEL.delete('__hispal');
PAL.cntx_pop();
~~


\kodk_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: zwraca kod kreskowy inwentaryzowanej palety
::   WE: _a - PAL.KODK
::   WY: kod kreskowy
::  OLD: \kodk_akt/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
{? (6+_a)='palety' & (+_a)=16
|| _num:=#(_a+8);
   _kod:=exec('FindAndGet','#table','PAL',form(16+_a),,"PAL.KODK",'');
   _kod+'/'+form(_num,,0,'99')
|| _a
?}


\dispdkcp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: podglad na ceche dla PAL_POZ-a
::   WE: [_a] ref SQL PAL_POZ-a, domyslnie dany
::  OLD: \dispdkcp/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};

PAL_POZ.cntx_psh();
:: ustawienie na palecie wg podanego ref-a SQL
{? _a<>'' || PAL_POZ.clear(); PAL_POZ.seek(_a) ?};

{? PAL_POZ.DK_C<>null
|| M_ATR.cntx_psh();
   DK_C.cntx_psh();
   DK_C.clear();
   {? DK_C.seek(PAL_POZ.DK_C)
   || {? DK_C.M_ATR<>null
      || M_ATR.clear();
         {? M_ATR.seek(DK_C.M_ATR)
         || ATR.ATR_IL:=PAL_POZ.ILP;
            {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,0,'99')))():=($('DK_C.WAR'+form(_i,-2,0,'99')))() !};
            _win:='RED_ATR'
         || _win:='RED'
         ?}
      || _win:='RED'
      ?}
   || _win:='RED'
   ?};
   DK_C.win_edit(_win);
   DK_C.display();
   M_ATR.cntx_pop();
   DK_C.cntx_pop()
?};
PAL_POZ.cntx_pop();
~~


\rek_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza poprawnosc wprowadzenia palety
::  OLD: \rek_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? PAL.TPAL=null
|| FUN.info('Nie podano typu palety.'@);
   _wyn:='TPAL'
|? _wyn='' & PAL.KODK<>'' & ~exec('unik_ean','kody_kresk','P',PAL.KODK,{? -(1+menu_txt())<>'p' || null || PAL.ref() ?})
|| FUN.info('Podany kod kreskowy jest już wykorzystywany w systemie.\nNależy podać inny.'@);
   _wyn:='KODK'
?};
_wyn


\poppalet
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja
::  OLD: \poppalet/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAL.STAN='N'
|| 1
|| FUN.info('Paleta zaakceptowana modyfikacja niemożliwa.'@);
   0
?}


\adddkpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: akceptacja wybranych palet i przepisanie danych na pozycje dokumentu
::   WE: [_a] - czy wyjscie z okienka 1(domyslnie), 0-nie
::  OLD: \adddkpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

{? EANX.WHERE='X'
|| sel_exit()
|| _czypoz:=1;
   _palz:=0;
   _pals:=exec('get','#params',1400,2,OPERATOR.USER)='T';
   _tab:=PAL.sel_aget();
:: sprawdzenie czy sa palety o stanie roznym od 'N'
   _ok:=0;
   _jest:=0;
   _inw:=exec('sprpaldk','magdok_wspolne',_tab.size(),_tab,PAL.ref(),ND.D);
   PAL.cntx_psh();
   {? _tab.size() & _tab.first()
   || {!
      |? _ok+=(PAL.clear(); PAL.seek(_tab.REF,)) & PAL.STAN<>'N';
         _palz+=PAL.Z='T';
         {? _pals || 1 || ~_ok ?} & _tab.next()
      !}
   || {? {? PAL.f_active() || PAL.f_size() || PAL.size() ?}
      || _ok:=PAL.STAN<>'N';
         _palz:=PAL.Z='T';
         _jest:=~(exec('FindInSet','#table','DK_L','CZYPAL',PAL.ref(),ND.ref())=null);
         {? ~_jest || _jest:=~(exec('FindInSet','#table','DK_L','CZYPALDO',PAL.ref(),ND.ref())=null) ?};
         _czypoz:=exec('czyilpoz','magdok_palety',PAL.ref())
      || _ok:=0;
         _jest:=-1
      ?}
   ?};
   {? {? ND.TYP().P='T' || ND.MAG().P_ALL || ND.MAG().W_ALL ?}
   || EANL.index('MGBLOK');
      EANL.prefix('T',ND.MAG,'N')
   || EANL.index('MGDOK');
      EANL.prefix('T',ND.MAG,'T','N')
   ?};
   EANL.win_sel('SLO_MAG');
   _act:=EANL.actions('SLO_MAG','E:E');
   _eanl:=null();
:: ustawia się na lokalizacji, na której jest paleta
   {? ~PAL.sel_size()
   || SL.cntx_psh();
      SL.index('PAL');
      SL.prefix(ND.MAG,PAL.ref());
      {? SL.first() || _eanl:=SL.EANL ?};
      SL.cntx_pop()
   ?};
   {? ~_inw
   || 0
   |? _jest>0
   || FUN.info('Wybraną paletę dodano już do dokumentu.\nPonowne przeniesienie na dokument niemożliwe.'@);
      0
   |? ~_ok & _jest=-1
   || FUN.info('Brak palet do wyboru.\nWybór niemożliwy.'@);
      0
   |? ~_ok
   || FUN.info({? _tab.size()
               || 'Wśród wybranych palet brak zaakceptowanych.\nPrzeniesienie na dokument niemożliwe.'@
               || 'Wybrana paleta nie jest zaakceptowana.\nPrzeniesienie na dokument niemożliwe.'@
               ?});
      PAL.sel_adel()
   |? ~_czypoz
   || FUN.info('Na wskazanej palecie brak ilości (została całkowicie rozpakowana).\n'
        'Przeniesienie na dokument niemożliwe.'@);
      0
   |? exec('pminimax','magdok_palety'
           ,_tab.size
           ,_tab,PAL.ref()) & {? _eanl<>null() || EANL.seek(_eanl) || EANL.first() ?}
                            & {? EANL.size()>1 || EANL.select(,1) || 1 ?}
   || _kwalf:=exec('Create_ZON4typ','statexam',ND.TYP(); TYPYDOK);
      PAL.sel_adel();
      {? _tab.size()
      || {? _tab.first()
          & FUN.ask({? _palz
             || 'Czy dopisać zaznaczone palety do pozycji dokumentu?'
                '\n\nUwaga. Wśród zaznaczonych palet są palety do realizacji zamówień sprzedaży/wewnętrznych.'
                '\nDopisanie do dokumentu spowoduję usuniecię przypisania ich do realizacji zamówień.'@
             || 'Czy dopisać zaznaczone palety do pozycji dokumentu?'@
             ?})
         || PAL.sel_adel();
            _niet:=0;
            _byla:=0;
            _brzl:=0;
            _nkwa:=0;
            _czyp:=0;
            {!
            |? {? (PAL.clear(); PAL.seek(_tab.REF,))
               || {? PAL.STAN<>'N'
                  || {? ~exec('czyilpoz','magdok_palety',PAL.ref())
                     || _czyp+=1
                     |? exec('sprzlpal','magdok_palety',PAL.ref(),1)
                     || {? {? (1+ND.MAG().TYP)='D' || exec('sprkwalf','magdok_palety',PAL.ref(),_kwalf,0) || 1 ?}
                        || {? PAL.Z='T' & ND.TYP().P='N' || exec('akt_palz','magdok_palety',PAL.ref(),0) ?};
                           _byla+=~exec('przeppal','magdok_palety',ND.ref(),PAL.ref(),EANL.ref())
                        || _nkwa+=1
                        ?}
                     || _brzl+=1
                     ?}
                  || _niet+=1
                  ?}
               ?};
               _tab.next()
            !};
            exec('dk_sum','magdok_wspolne',ND.ref());

            {? _a
            || sel_exit()
            || DK.index('DOKMAG');
               DK.prefix(ND.ref());
               grp_disp(DK,'WERPAL')
            ?};
            {? _niet | _byla | _brzl | _nkwa | _czyp
            || FUN.info('Liczba niedołączonych palet:\n'@+
                {? _niet || 'niezaakceptowane %1\n'@[form(_niet,5,0,'99')] || '' ?}+
                {? _czyp || 'całkowicie rozpakowane %1\n'@[form(_czyp,5,0,'99')] || '' ?}+
                {? _byla || 'będące na dokumencie %1\n'@[form(_byla,5,0,'99')] || '' ?}+
                {? _brzl || 'niezgodne ze zleceniem %1\n'@[form(_brzl,5,0,'99')] || '' ?}+
                {? _nkwa || 'niezgodność kwalifikacji dostaw z Rodzajem statusu dostaw dokumentu %1'@[form(_nkwa,5,0,'99')]
                         || '' ?}+'.')
            ?}
         ?}
      |? PAL.STAN<>'N' & exec('sprzlpal','magdok_palety',PAL.ref(),0)
       & FUN.ask({? ND.TYP().P='T' & 'WT'*PAL.P
                 || 'Paleta jest już na innym dokumencie przychodowym.\nSprawdź historię operacji palety.\n\n'@
                 |? ND.TYP().P='N' & 'WT'*PAL.W
                 || 'Paleta jest już na innym dokumencie wydania.\nSprawdź historię operacji palety.\n\n'@
                 || ''
                 ?}+
                 {? _palz
                 || 'Czy dopisać zaznaczoną paletę do pozycji dokumentu?'
                    '\n\nUwaga. Paleta do realizacji zamówienia sprzedaży/wewnętrznego.'
                    '\nDopisanie do dokumentu spowoduję usuniecię przypisania palety do realizacji zamówienia.'@
                 || 'Czy dopisać zaznaczoną paletę do pozycji dokumentu?'@
                 ?})
        & {? (1+ND.MAG().TYP)='D' & _kwalf<>'' || exec('sprkwalf','magdok_palety',PAL.ref(),_kwalf,1) || 1 ?}
      || {? PAL.Z='T' & ND.TYP().P='N' || exec('akt_palz','magdok_palety',PAL.ref(),0) ?};
         exec('przeppal','magdok_palety',ND.ref(),PAL.ref(),EANL.ref());
         exec('dk_sum','magdok_wspolne',ND.ref());
         {? _a
         || sel_exit()
         || DK.index('DOKMAG');
            DK.prefix(ND.ref());
            grp_disp(DK,'WERPAL')
         ?}
      ?}
   || PAL.sel_adel()
   ?};
   EANL.actions('SLO_MAG',_act);
   PAL.cntx_pop()
?};
{? ~_a || 'activate:browse' || ~~ ?}


\pminimax
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdzenie pozycji z palet czy nie przekraczaja stanow minimalnych/maksymalnych
::   WE: _a - czy zaznaczono
::       _b - tabela zaznaczen
::       _c - ref PAL (dla opcji bez zaznaczen)
::   WY: 1-jak nie ma przekroczen 0/1-jak sa po decyzji
::  OLD: \pminimax/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_kom:='';
PAL.cntx_psh();
PAL_POZ.cntx_psh();
{? _a
|| {? _b.first()
   || {!
      |? {? (PAL.clear(); PAL.seek(_b.REF,)) & PAL.STAN<>'N'
         || PAL_POZ.index('PAL');
            PAL_POZ.prefix(PAL.ref());
            {? PAL_POZ.first()
            || {!
               |? {? PAL_POZ.ILP>0
                  || _st:=exec('FindInSet','#table','SM','SM',PAL_POZ.M,ST.MAG,"SM.S",,,0)
                         -exec('FindInSet','#table','SM','SM',PAL_POZ.M,ST.MAG,"SM.W",,,0);
                     _kom+=exec('minimax','magazyn_stan',ND.TYP().P='T',ST.MAG,PAL_POZ.M,_st+PAL_POZ.ILP
                                ,_st-PAL_POZ.ILP,1)
                  ?};
                  PAL_POZ.next()
               !}
            ?}
         ?};
         _b.next()
      !}
   ?}
|| PAL_POZ.index('PAL');
   PAL_POZ.prefix(_c);
   {? PAL_POZ.first()
   || {!
      |? {? PAL_POZ.ILP>0
         || _st:=exec('FindInSet','#table','SM','SM',PAL_POZ.M,ST.MAG,"SM.S",,,0)
                -exec('FindInSet','#table','SM','SM',PAL_POZ.M,ST.MAG,"SM.W",,,0);
            _kom+=exec('minimax','magazyn_stan',ND.TYP().P='T',ST.MAG,PAL_POZ.M,_st+PAL_POZ.ILP,_st-PAL_POZ.ILP,1)
         ?};
         PAL_POZ.next()
      !}
   ?}
?};
PAL.cntx_pop();
PAL_POZ.cntx_pop();
{? _kom<>''
|| _wyn:=FUN.ask('Dopisanie palet(y) spowoduje przekroczenie stanów minimalnych lub maksymalnych. Czy dopisać? %1'@[_kom])
?};
_wyn


\akc_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wartosc poczatkowa pola PAL_POZ.PAL
::   WE: [_a] - 0 akceptacja 1 wycofanie akceptacji
::  OLD: \akc_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_loki:=0;
_tab:=PAL.sel_aget();
PAL.sel_adel();
PAL.cntx_psh();
_tab.clear();
{? _tab.size() & _tab.first()
|| _czypoz:=0;
   _wyko:=0;
   {? FUN.ask({? ~_a || 'Czy zaakceptować zaznaczone palety?'@ || 'Czy wycofać akceptację zaznaczonych palet?'@ ?})
   || {!
      |?
         {? (PAL.clear(); PAL.seek(_tab.REF,))
          & {? _a
            || PAL.STAN<>'N' & {? ~(PAL.count()-exec('ilpalpoz','magdok_palety',PAL.ref())) || 1 || _wyko+=1 ?}
            || PAL.STAN='N' & {? exec('FindInSet','#table','PAL_POZ','PAL',PAL.ref())<>null || 1 || _czypoz+=1; 0 ?}
            ?}
          & {? PAL.r_lock(1,1,1) || 1 || _loki+=1; 0 ?}
         || PAL.STAN:={? _a || 'N' || 'T' ?};
            PAL.put(1);
            exec('akcppal','magdok_palety',PAL.ref());
            PAL.r_unlock()
         ?};
         _tab.next()
      !}
   ?};
   {? _czypoz
   || FUN.info({? _wyko
        || 'Z powodu braku pozycji na paletach niezaakceptowano: %1 palet.'
           '\n\nWśród zaznaczonych palet, %2 wykorzytywane w systemie (dokumenty).\n'
           'Akceptacja ich nie została wycofana.'@[form(_czypoz,,0,'99'),form(_wyko,,0,'99')]
        || 'Z powodu braku pozycji na paletach niezaakceptowano: %1 palet.'@[form(_czypoz,,0,'99')]
        ?})
   |? _wyko
   || FUN.info('Wśród zaznaczonych palet, %1 wykorzytywane w systemie (dokumenty).\n'
       'Akceptacja ich nie została wycofana.'@[form(_wyko,,0,'99')])
   ?}
|? ~_a & PAL.STAN<>'N'
|| FUN.info('Paleta już zaakceptowana.'@)
|? _a & PAL.STAN='N'
|| FUN.info('Paleta nie jest zaakceptowana.'@)
|? FUN.ask({? ~_a || 'Czy zaakceptować paletę?'@ || 'Czy wycofać akceptację palety?'@ ?})
  & {? _a
    || PAL.STAN<>'N'
     & {? ~(PAL.count()-exec('ilpalpoz','magdok_palety',PAL.ref()))
       || 1
       || FUN.info('Paleta wykorzystywana w systemie (dokumenty). Wycofanie akceptacji niemożliwe.'@); 0
       ?}
    || PAL.STAN='N'
     & {? exec('FindInSet','#table','PAL_POZ','PAL',PAL.ref())<>null
       || 1
       || FUN.info('Paleta nie posiada pozycji. Akceptacja niemożliwa.'@); 0
       ?}
    ?}
  & {? PAL.r_lock(1,1,1) || 1 || _loki+=1; 0 ?}
|| PAL.STAN:={? _a || 'N' || 'T' ?};
   PAL.put(1);
   exec('akcppal','magdok_palety',PAL.ref());
   PAL.r_unlock()
?};
PAL.cntx_pop();
{? _loki || FUN.info({? _loki=1 || 'Niezaakceptowano: %1 palety (w trakcie edycji).'@[form(_loki)]
                                || 'Niezaakceptowano: %1 palet (w trakcie edycji).'@[form(_loki)] ?}) ?};
~~


\akcppal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: akceptacja pozycji palety
::   WE: _a - ref palety PAL.ref
::       [_b] - 0(domyslnie) nic nie robi 1-usuwa zapisy RSQL
::  OLD: \akcppal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

PAL_POZ.cntx_psh();
PAL_POZ.index('PAL');
PAL_POZ.prefix(_a);
{? PAL_POZ.first()
|| {!
   |? PAL_POZ.AKT:={? PAL.STAN<>'N' & PAL.AKT='T' & PAL_POZ.ILP>0 || 'T' || 'N' ?};
      {? _b || PAL_POZ.RSQL:='' ?};
      PAL_POZ.put(1);
      PAL_POZ.next()
   !}
?};
PAL_POZ.cntx_pop()


\rekpalpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pola
::  OLD: \rekpalpo/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAL.KODK=''
|| FUN.info('Należy podać kod kreskowy palety.'@);
   'KODK'
|? _pal:=exec('FindInSet','#table','PAL','PAL',PAL.KODK,PAL.KODK);
   _pal<>PAL.ref() & _pal<>null
|| FUN.info('Podany kod kreskowy został już przypisany do innej palety.\nNależy podać inny kod kreskowy palety.'@);
   'KODK'
|? PAL.TPAL=null
|| FUN.info('Należy podać typ palety.'@);
   'TPAL'
|| ''
?}


\dommgpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: zmienia domyslny magazyn
::  OLD: \dommgpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=PAL.sel_aget();
PAL.sel_adel();
PAL.cntx_psh();
{? _tab.size()
|| {? _tab.first() & FUN.ask('Czy zmienić domyślny magazyn dla zaznaczonych palet?\n'
                      'Uwaga. Opcja dostępna tylko dla nowych lub zaakceptowanych palet.'@)
   || USERS_UP.win_sel('MGSEL');
      USERS_UP.index('PAL');
      USERS_UP.prefix(OPERATOR.USER,'MG',ST.ODDZ,'T');
      {? USERS_UP.first() & USERS_UP.select()
      || _mag:=USERS_UP.MG;
         {!
         |? {? (PAL.clear(); PAL.seek(_tab.REF,)) & (';NT'*PAL.STAN)>1
            || PAL.MG:=_mag;
               {? PAL.put(1) & PAL.MG().IL='T'
               || {? PAL.AKT='N'
                  || {? PAL.STAN<>'I'
                     || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
                     || PAL_POZ.use('paleths')
                     ?}
                  || PAL_POZ.use('paletyp')
                  ?};
                  PAL_POZ.index('PAL');
                  PAL_POZ.prefix(PAL.ref());
                  {? PAL_POZ.first() || {! |? PAL_POZ.C:=0; PAL_POZ.put(1); PAL_POZ.next() !} ?}
               ?}
            ?};
            _tab.next()
         !}
      ?}
   ?}
|| {? ~((';NT'*PAL.STAN)>1)
   || FUN.info('Opcja dostępna tylko dla nowych lub zaakceptowanych palet.'@)
   |? FUN.ask('Czy zmienić domyślny magazyn dla palety?'@)
   || USERS_UP.win_sel('MGSEL');
      USERS_UP.index('PAL');
      USERS_UP.prefix(OPERATOR.USER,'MG',ST.ODDZ,'T');
      {? USERS_UP.first() & USERS_UP.select()
      || _mag:=USERS_UP.MG;
         PAL.clear();
         PAL.MG:=_mag;
         {? PAL.put(1) & PAL.MG().IL='T'
         || {? PAL.AKT='N'
            || {? PAL.STAN<>'I'
               || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
               || PAL_POZ.use('paleths')
               ?}
            || PAL_POZ.use('paletyp')
            ?};
            PAL_POZ.index('PAL');
            PAL_POZ.prefix(PAL.ref());
            {? PAL_POZ.first() || {! |? PAL_POZ.C:=0; PAL_POZ.put(1); PAL_POZ.next() !} ?}
         ?}
      ?}
   ?}
?};
PAL.cntx_pop();
{? PAL.f_active()>0 || PAL.f_rfresh() ?};
~~


\zakrpalm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: zakres palet albo dla danego magazynu albo wszystkie aktywne palety
::   WE: [_a] - 0(domyslnie) dany magazyn 1-wszystkie palety
::  OLD: \zakrpalm/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

{? ~_a
|| PAL.index('MGPAL');
   PAL.prefix(ST.ODDZ,'T',ND.MAG,'N')
|| PAL.index('AKT');
   PAL.prefix(ST.ODDZ,'N','T')
?}


\pogrppal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po odswiezeniu - okienka grupowego
::   WE: [_a] - akronim okienka (domyslnie WER)
::  OLD: \pogrppal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='WER' ?} || _a:='WER' ?};

_czy:=PAL.sel_aget();
_ch:=PAL.name()+1;
_ch:=gsub(_ch,'y','t');
{? _czy.size() | {? PAL.f_active()>0 || PAL.f_size() || PAL.size() ?}
|| {? PAL.AKT='N'
   || {? PAL.STAN<>'I'
      || PAL_POZ.use('pale'+_ch+form(PAL.AR-2000,-2,0,'99'))
      || PAL_POZ.use('paleths')
      ?}
   || {? PAL.BEZOZN='B'
      || PAL_POZ.use('palet%1'[form(ST.AR-2000,-2,0,'99')])
      || PAL_POZ.use('paletyp')
      ?}
   ?};
   PAL_POZ.index('PAL');
   PAL_POZ.prefix(PAL.ref())
|| PAL_POZ.index('PAL');
   PAL_POZ.prefix(null)
?};
obj_del(_czy);
{? PAL.win_sel('?')='GRP'
|| PAL.cntx_psh();
   PAL_POZ.cntx_psh();
   PAL.index('AKT');
   PAL.prefix(ST.ODDZ,'T');
   grp_disp(PAL,'BEZ');
   PAL.cntx_pop();
   PAL_POZ.cntx_pop();
   PAL_POZ.first();
   grp_disp(PAL,'BEZ')
?};
{? PAL.win_sel('?')='GRPWYB'
|| DK.index('DOKMAG');
   DK.prefix(ND.ref());
   grp_disp(DK,'WERPAL')
?};
BEER.TAB:='PAL_POZ';
grp_disp(PAL_POZ,_a);
1


\pwpalpob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed wyswietleniem - okienka grupowego
::  OLD: \pwpalpob/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_dod:=0;
{? PAL.STAN='N'
|| {? ~PAL.r_lock(1,1,1)
   || echo('Paletę obsługuje inny operator. Edycja pozycji niemożliwa.'@);
      _dod:=1
   ?}
?};
PAL_POZ.actions('WERP',{? PAL.STAN<>'N' | PAL.AKT='N' | PAL.BEZOZN='T' | _dod || 'dupC:d' || '' ?},,1);
1


\popalpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: usuwa r_lock-a dla palety
::  OLD: \popalpoz/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAL.STAN='N' || PAL.r_unlock() ?};
echo();
~~


\prbezpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: palety bez oznaczenia
::  OLD: \prbezpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
PAL.cntx_psh();
{? PAL.name()<>'palety' || PAL.use('palety') ?};
PAL.index('AKT');
PAL.prefix(ST.ODDZ,'T');
~~


\pobezpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: palety bez oznaczenia
::  OLD: \pobezpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
PAL.cntx_pop();
_czy:=PAL.sel_aget();
{? _czy.size() | {? PAL.f_active()>0 || PAL.f_size() || PAL.size() ?}
|| {? PAL.AKT='N'
   || {? PAL.STAN<>'I'
      || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
      || PAL_POZ.use('paleths')
      ?}
   || PAL_POZ.use('paletyp')
   ?};
   PAL_POZ.index('PAL');
   PAL_POZ.prefix(PAL.ref());
   grp_disp(PAL_POZ,'WER')
?};
obj_del(_czy);
~~


\pwpalpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietleniem - okienka grupowego
::   WE: [_a] - 0(domyślnie), 1-pozycje zz rozpakowań dla wydań
::  OLD: \pwpalpoz/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_mode:={? var_pres('_a')=type_of(0) || _a || 0 ?};
POMOC.MGR:=null;
_dod:=0;
{? PAL.STAN='N'
|| {? ~PAL.r_lock(1,1,1)
   || echo('Paletę obsługuje inny operator. Edycja pozycji niemożliwa.'@);
      _dod:=1
   ?}
?};
ATR.MJS:='PAL_POZ';
PAL_POZ.actions({? ~_mode || 'WER' || 'WERR' ?}
 ,{? PAL.STAN<>'N' | PAL.AKT='N' | PAL.BEZOZN='T' | _dod || 'dupC:d' || '' ?},,1);
1


\pwpalpom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed wyswietleniem - okienka grupowego
::  OLD: \pwpalpom/mws.fml
::----------------------------------------------------------------------------------------------------------------------
PAL_POZ.actions('WERM',{? PAL.STAN<>'N' | PAL.AKT='N' | PAL.BEZOZN='T' || 'dupC:d' || '' ?},,1);
1


\prilpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed redakcja pola ILPAL dla palet
::  OLD: \prilpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
~(EANX.DOPAS='T') | (';NTA'*EANX.KOPIA)>1


\pw_kopia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietleniem pola EANX.KOPIA
::  OLD: \pw_kopia/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? {? PAL.f_test() | EANX.WHERE='X' || PAL.f_size() || PAL.size() ?}
|| 1
|| exec('findfnv','#color')
?}


\po_kopia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po znaczniku kopia
::  OLD: \po_kopia/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? (EANX.KOPIA='T' | EANX.KOPIA='A') & EANX.TYPPAL=null || EANX.TYPPAL:=PAL.TPAL ?};
{? {? PAL.f_test() | EANX.WHERE='X' || PAL.f_size() || PAL.size() ?}
 & EANX.KOPIA='A' & exec('FindInSet','#table','PAL_POZ','PAL',PAL.ref())=null
|| FUN.info('Kopiowana paleta nie posiada pozycji - niemożliwe jest jej zaakceptowanie.\n'
    'Zmieniono na opcję: Kopia palety.'@);
   EANX.KOPIA:='T';
   _wyn:=0
?};
_mark:='mark='+{? (';JB'*EANX.KOPIA)>1 || '1' || '0' ?};
EANX.efld_opt('PAL',_mark,,'MPAL');
EANX.efld_opt('PAL',_mark,,'ILMPAL');
win_disp();
_wyn


\pwp_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: ustawia zmienna dla palet
::  OLD: \pwp_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.P_PAL:=PAL.P


\pww_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: ustawia zmienna dla palet
::  OLD: \pww_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.W_PAL:=PAL.W


\pwr_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: ustawia zmienna dla palet
::  OLD: \pwr_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.R_PAL:=PAL.R


\pwm_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: ustawia zmienna dla palet
::  OLD: \pwm_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.M_PAL:=PAL.M


\pwz_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: ustawia zmienna dla palet
::  OLD: \pwz_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.Z_PAL:=PAL.Z


\pwadjedn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed wyswietleniem pol dla palety jednopozycyjnej
::   WY: wygaszenie lub ''
::  OLD: \pwadjedn/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANX.KOPIA='J' | EANX.KOPIA='B'
|| ''
|| exec('findfnv','#color')
?}


\pradjedn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed redakcja pol dla palety jednopozycyjnej
::   WY: 0/1
::  OLD: \pradjedn/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.KOPIA='J' | EANX.KOPIA='B'


\pompal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: po redakcji EANX.MPAL
::  OLD: \pompal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANX.MPAL().M_ATR<>EANX.DK_C().M_ATR || EANX.DK_C:=null ?};
EANX.JM:=EANX.MPAL().J;
{? EANX.TWMPAL=date(0,0,0) & EANX.MPAL().TWD>0
|| EANX.TWMPAL:=date()+EANX.MPAL().TWD
?};
1


\poilmpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: po redakcji znacznika DOPAS
::  OLD: \poilmpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANX.DOPAS='T' & EANX.ILMPAL>0
|| {? EANX.ALLPAL=0 || EANX.ALLPAL:=EANX.ILMPAL ?};
   EANX.ILPAL:={? EANX.ILMPAL>0 || (EANX.ALLPAL % EANX.ILMPAL)+{? (EANX.ALLPAL %* EANX.ILMPAL)>0 || 1 || 0 ?} || 0 ?}
?};
1


\be_eanx_cmpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: przed redakcja EANX.CMPAL
::  OLD: \be_eanx_cmpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? ST.MAG().IL='T'
|| 0
|? EANX.CMPAL=0
||
   TAZ.RABOFF:=1;
   BEER.SZ:='Z';
   exec('taz_sd_set','ceny');
   {? {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?}
   ||
      KALK.JM:=KALK.J2:=EANX.MPAL().J; KALK.WS2:=1;
      exec('stplicz','ceny',EANX.ILMPAL);
      __cena:=EANX.CMPAL;
      exec('ceny_mat','ceny_mat',EANX.MPAL,null,!__cena,0,,'','N',INFO.NAROD,'',,0,,,0,0,0);
      EANX.CMPAL:=__cena;
      VAR_DEL.delete('__cena')
   ?};
   TAZ.RABOFF:=0;
   exec('pradjedn','magdok_palety')
|| exec('pradjedn','magdok_palety')
?}


\f3_eanx_cmpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: F3 pola EANX.CMPAL
::  OLD: \f3_eanx_cmpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
TAZ.RABOFF:=1;
BEER.SZ:='Z';
KALK.JM:=KALK.J2:=EANX.MPAL().J; KALK.WS2:=1;
exec('stplicz','ceny',EANX.ILMPAL);
__cena:=EANX.CMPAL;
exec('ceny_mat','ceny_mat',EANX.MPAL,null,!__cena,0,,'','N',INFO.NAROD,'',,0,,,1,0,0);
TAZ.RABOFF:=0;
_wyn:=__cena;
VAR_DEL.delete('__cena');
_wyn


\pwallpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed redakcja znacznika czy ilości na paletach
::   WY: 0/1
::  OLD: \pwallpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? (EANX.KOPIA='J' | EANX.KOPIA='B') & EANX.DOPAS='T'
|| ''
|| exec('findfnv','#color')
?}


\prallpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed redakcja znacznika czy ilości na paletach
::   WY: 0/1
::  OLD: \prallpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.DOPAS='T' & (EANX.KOPIA='J' | EANX.KOPIA='B')


\poallpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: po redakcji znacznika czy ilości na paletach
::   WY: 0/1
::  OLD: \poallpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANX.ILMPAL>=0
|| {? EANX.ALLPAL=0 || EANX.ALLPAL:=EANX.ILMPAL ?};
   EANX.ILPAL:={? EANX.ILMPAL>0 || (EANX.ALLPAL % EANX.ILMPAL)+{? (EANX.ALLPAL %* EANX.ILMPAL)>0 || 1 || 0 ?} || 0 ?}
?};
1


\podopas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: po redakcji znacznika DOPAS
::  OLD: \podopas/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANX.DOPAS='T' || EANX.ALLPAL:=EANX.ILMPAL*{? EANX.ILPAL>0 || EANX.ILPAL || 1 ?}  || EANX.ALLPAL:=0 ?};
win_disp();
1


\f3_mktm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: klawisz F3 do wyboru z kartoteki materialowej
::  OLD: \f3_mktm/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
_sel:=M.win_sel('?');
M.index('RODZ');
M.prefix('T');
M.win_sel('SEL');
{? M.select() || EANX.MKTM:=M.KTM ?};
M.win_sel(_sel);
M.cntx_pop();
~~


\po_twod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po terminie od - podpowiada termin do
::  OLD: \po_twod/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANX.TWOD<>date(0,0,0) & (EANX.TWDO=date(0,0,0) | EANX.TWDO<EANX.TWOD)
|| EANX.TWDO:=EANX.TWOD
?};
~~


\po_mile
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po wpisaniu ilości do porównania
::  OLD: \po_mile/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANX.MILE<0
|| FUN.info('Ilość musi być liczbą większą lub równą zero.'@);
   0
|| {? EANX.MILE>0 & EANX.MJAK='N' || EANX.MJAK:='T' ?};
   1
?}


\pwinfpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: ustawia zmienna dla palet
::  OLD: \pwinfpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.INFPAL:={? PAL.AKT='N'
             || {? PAL.STAN='I' || 'I' |? PAL.D='T' || 'Y' || 'X' ?}
             |? PAL.STAN='N'
             || {? exec('FindInSet','#table','PAL_POZ','PAL',PAL.ref)=null
                || 'N'
                || 'J'
                ?}
             |? PAL.ROZ='T'
             || 'R'
             |? PAL.STAN='T' | PAL.STAN='R' | PAL.STAN='W' | PAL.STAN='P'
             || 'T'
             |? PAL.STAN='B'
             || {? PAL.BEZOZN='TW'
                || 'W'
                |? PAL.BEZOZN='TP'
                || 'O'
                |? PAL.BEZOZN='B'
                || 'A'
                || 'B'
                ?}
             || ''
             ?}


\sprzlpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: Sprawdzenie pozycji dokumentu wg zlecen
::   WE: _a - ref palety
::       _b - 0(domyslnie) komunikat 1-brak komunikatu
::  OLD: \sprzlpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_prod:=exec('tte_lic','tte');
_wyr:=ND.TYP().WYR='T';
{? _prod='T' & ND.TYP().ZLEC='T'
|| {? PAL.AKT='N' || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99')) || PAL_POZ.use('paletyp') ?};
   PAL_POZ.index('PAL');
   PAL_POZ.prefix(PAL.ref());
   {? PAL_POZ.first()
   || {!
      |? {? ND.ZL<>null
         || {? _wyr
            || _tab:=sql('select M.KTM, ZL.IL as LIL,M.REFERENCE as REF from ZL join M using (ZL.KTM,M.REFERENCE)
                   where ZL.REFERENCE='':_a'' and M.KTM='':_b''',$ND.ZL,PAL_POZ.M().KTM)
            || _tab:=sql('select M.KTM, sum(ZLIM.LIL) as LIL,M.REFERENCE as REF
                   from ZL join @ZLIM using (ZLIM.ZLEC,ZL.REFERENCE) join M using (ZLIM.KTM,M.REFERENCE)
                   where ZL.REFERENCE='':_a'' and M.KTM='':_b'' and
                   (ZLIM.WYD='':_c'' or ZLIM.WYD is null and ZL.JORG='':_c'') and ZLIM.SO='':_d'' and ZLIM.LIMIT=''T''
                   group by M.KTM, M.REFERENCE',$ND.ZL,PAL_POZ.M().KTM,$ND.WYD
                   ,{? (' '+exec('get','#params',500705,2,null()))*(' '+ND.TYP().T+' ')>0 || 'O' || 'S' ?} )
           ?};
           _tab.clear();
           {? ~_tab.size() | {? _wyr || _tab.LIL<PAL_POZ.ILP || _tab.LIL>PAL_POZ.ILP ?}
           || _wyn:=0
           ?};
           obj_del(_tab)
         ?};
         _wyn & PAL_POZ.next()
      !}
   ?};
   PAL_POZ.use('paletyp')
?};
{? ~_wyn & ~_b
|| FUN.info({? _wyr
            || 'Niezgodna struktura palety ze zleceniem.\nDołączenie palety niemożliwe.'@
            || 'Nie wszystkie pozycje z palety (surowce) są powiązane ze zleceniem.\nDołączenie palety niemożliwe.'@
            ?})
?};
_wyn


\sprkwalf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza kwalifikacje dostaw dostepnych na danej palecie
::   WE: _a - ref palety
::       _b - kwalifikacja do porownania
::       _c - komunikat o bledzie 1-tak 0-nie(domyslnie)
::   WY: 1-ok 0-nie
::  OLD: \sprkwalf/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};

_wyn:=0;
_pal:='';
_por:=_b;
PAL.cntx_psh();
PAL_POZ.cntx_psh();
PAL.clear();
{? PAL.seek(_a)
|| {? PAL.AKT='N'
   || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
   || PAL_POZ.use('paletyp')
   ?};
   PAL_POZ.index('PAL');
   PAL_POZ.prefix(PAL.ref());
   {? PAL_POZ.first()
   || {!
      |? {? PAL_POZ.ILP>0 & PAL_POZ.STATS<>null & ~(_pal*PAL_POZ.STATS().KIND)
         || _pal+=PAL_POZ.STATS().KIND
         ?};
         PAL_POZ.next()
      !}
   ?}
?};
PAL.cntx_pop();
PAL_POZ.cntx_pop();
{? (+_por)>=(_len:=+_pal)
|| _wyn:=1;
   {? _len
   || _i:=0;
      {!
      |? _i+=1;
         _wyn:=(_por*(1+((_i-1)-_pal)))>0;
         _wyn & _i<_len
      !}
   ?}
?};
{? ~_wyn & _c
|| FUN.info('Rozbieżność statusów dostaw na pozycjach palety z Rodzajem statusów dostaw dla dokumentu.\n'
            'Dołączenie palety niemożliwe.'@)
?};
_wyn


\przeppal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przepisuje pozycje z palety na dokument
::   WE: _a - ref dokumentu
::       _b - ref palety
::       _c - lokalizacja
::       [_d] - 0-cala paleta(domyslnie) 1-pozycja palety
::       [_e] - ref pozycji palety do przepisania
::       [_f] - ilosc do wydania
::       [_g] - ref SQL-owy paletowy
::       [_h] - lokalizacja do lub null()
::   WY: 1-przepisano 0-jest juz paleta na dokumencie - nieprzepisano
::  OLD: \przeppal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
{? ~_d
|| _e:=null
|| {? _>=5 || {? type_of(_e)<>7 || _e:=null ?} || _e:=null ?}
?};
{? _>=6 || {? type_of(_f)<>1 || _f:=0 ?} || _f:=0 ?};
{? _>=7 || {? type_of(_g)<>2 || _g:='' ?} || _g:='' ?};
_lokdo:={? var_pres('_h')=type_of(null()) || _h || null() ?};

_wyn:=(_d & _g<>'') |
 (exec('FindInSet','#table','DK_L','CZYPAL',_b,_a)=null & exec('FindInSet','#table','DK_L','CZYPALDO',_b,_a)=null);
_trans:=do_state();
{? _wyn
||
   {? ~_trans || do() ?};
   ND.cntx_psh();
   DK.cntx_psh();
   DK_L.cntx_psh();
   PAL.cntx_psh();
   PAL_POZ.cntx_psh();

   {? ND.seek(_a)
   || _only:=ND.MAG().IL='T';
      {? ND.TYP().P='N' & ND.MAG().TYP*'DOST'
      || _wyda:=1
      |? ND.TYP().P<>'T'
      || _wyda:=2
      || _wyda:=0
      ?};

      _dotsp:=_wyda & ND.TYP().CS='T';
      _stskind:=exec('Create_ZON4typ','statexam',ND.TYP(); TYPYDOK);

      PAL_POZ.index('PAL');
      {? ~_d || PAL_POZ.prefix(_b) || PAL_POZ.prefix() ?};
      {? {? ~_d || PAL_POZ.first() || PAL_POZ.seek(_e) ?}
      || {!
         |? {? _wyda=1
            ||
::             rozpisujemy wg automatu FIFO
               _ilepal:={? ~_d || PAL_POZ.ILP || _f ?};
               _prdk:=PAL_POZ.SCSQL;
               _dost:={? _wyda=1
                      || {? PAL_POZ.SCSQL<>''
                         || (8+PAL_POZ.SCSQL)+form(BB.sqlint(PAL_POZ.SCSQL),-8,0,'99')
                         || exec('last_dst','magdok_palety',PAL_POZ.M,PAL_POZ.PAL,PAL_POZ.C,PAL_POZ.DK_C,PAL_POZ.IL)
                         ?}
                      || ''
                      ?};
               _tab:=exec('aktrdndk','magdok_palety',ND.MAG,#form(8-_dost),form(8+_dost),PAL_POZ.PAL);
               _nost:=form(_tab[2])+form(_tab[1],-8,0,'99');
               {? _nost<>_dost
               || _dost:=_nost;
                    _prdk:=''
               ?};
               obj_del(_tab);
               exec('sc_tymczas','magazyn_stan',ND.MAG,PAL_POZ.M,'T',,_stskind);
               _ind:={? _prdk<>''
                     || __sc.ndx_tmp('',,'PRDK',,,'D',,)
                     |? _dost=''
                     || __sc.ndx_tmp('',,'D',,,'NDK',,,'RDK',,)
                     || __sc.ndx_tmp('',,'NDK',,,'RDK',,,'D',,)
                     ?};
               __sc.index(_ind);
               {? _ilepal>0 & __sc.first() &
                 {? _prdk<>''
                 || {? __sc.find_key(_prdk) || 1 || __sc.first() ?}
                 |? _dost<>''
                 || {? __sc.find_key(form(8+_dost),#form(8-_dost)) || 1 || __sc.first() ?}
                 || 1
                 ?}
               || {!
                  |? _ilenasc:=exec('obl_stsc','magazyn_stan',__sc.RDK,__sc.NDK,ND.MAG,PAL_POZ.M);
                     {? _ilenasc>0
                     || _ile:={? _ilenasc>=_ilepal || _ilepal || _ilenasc ?};
                        _cena:={? _only || 0 || __sc.C ?};
                        _ref:=exec('napozdk','magdok_palety',ND.ref(),PAL_POZ.M,_ile,__sc.RDK,__sc.NDK
                                  ,_cena,PAL_POZ.DK_C,PAL_POZ.TW);
                        exec('przyjdod','jm',$PAL_POZ.M().J,1,_ile);
                        {? {? _ref=null
                           || (_ref:=exec('adddk','magdok_poz',ND.ref,PAL_POZ.M,_ile,_cena,__sc.D,,,,
                                      ,exec('m_vat','material',PAL_POZ.M,ND.KH,,ND.AR,ND.AM)
                                      ,,,7,__sc.RDK,__sc.NDK,PAL_POZ.DK_C,__sc.SRDK,__sc.PRDK,,ND.ZL,ND.WYD
                                      ,,,exec('FindAndGet','#table','STATS',__sc.STATS,,,null())))<>null
                           || 1
                           ?}
                        || _ilepal-=_ile;
                           DK.cntx_psh();
                           DK.clear();
                           {? DK.seek(_ref)
                           || {? (1+BEER.MMJM)='T' || DK.T2:=1+(1-BEER.MMJM) ?};
                              {? (';AR'*DK.T2)>1
                              || exec('ustawprz','magdok_poz',DK.M,DK.JM);
                                 exec('aktmil2','magdok_poz')
                              ?};
                              _nrk:=exec('update','rezerwacje','DK',DK.ref(),ND.MAG,DK.M,DK.IL,DK.SRDK);
                              exec('aktu_rez','rezerwacje',DK.M,_nrk,DK.IL);
                              {? ND.WAL<>INFO.NAROD | _dotsp
                              || DK.KURS:=ND.KRS;
                                 {? _dotsp & DK.N().CB='N' & DK.CN=0
                                 || exec('dk_b_cn','magdok_poz')
                                 |? _dotsp & DK.N().CB='T' & DK.CB=0
                                 || exec('dk_b_cb','magdok_poz')
                                 ?};
                                 DK.put(1)
                              ?};
::                            naliczenie opłat dodatkowych
                              exec('actTAXS','oplaty_dod',DK.N().uidref(),DK.uidref(),DK.M,DK.M)
                           ?};
                           DK.cntx_pop();
                           _newpal:={? _d & _g<>'' || exec('FindAndGet','#table','PAL',_g,,,null()) || null ?};
                           {? ~exec('add2dk_l','magdok_wspolne',_ref,null,_c,_lokdo,PAL_POZ.TW,date(0,0,0)
                                ,_ile,ND.MAG,PAL_POZ.M,,,_b,_newpal,1,_d+1)
                           || undo()
                           ?}
                        || undo()
                        ?}
                     ?};
                     _ilepal>0 & __sc.next()
                  !}
               ?};
               __sc.ndx_drop(_ind);
::             to co pozostalo
               {? ~_d & _ilepal>0
               || _cena:={? _only || 0 || PAL_POZ.C ?};
                  exec('przyjdod','jm',$PAL_POZ.M().J,1,_ilepal);
                  {? (_ref:=exec('adddk','magdok_poz',ND.ref(),PAL_POZ.M,_ilepal,_cena,date(0,0,0),,,,
                        ,exec('m_vat','material',PAL_POZ.M,ND.KH,,ND.AR,ND.AM)
                        ,,,7,,,PAL_POZ.DK_C,,,,ND.ZL,ND.WYD))<>null
                  || {? ~exec('add2dk_l','magdok_wspolne',_ref,null,_c,_lokdo,PAL_POZ.TW,date(0,0,0)
                          ,_ilepal,ND.MAG,PAL_POZ.M,,,_b,,1,_d+1)
                     || undo()
                     || DK.cntx_psh();
                        DK.prefix();
                        {? DK.seek(_ref)
                        || {? (1+BEER.MMJM)='T' || DK.T2:=1+(1-BEER.MMJM) ?};
                           {? (';AR'*DK.T2)>1
                           || exec('ustawprz','magdok_poz',DK.M,DK.JM);
                              exec('aktmil2','magdok_poz')
                           ?};
                           _nrk:=exec('update','rezerwacje','DK',DK.ref(),ND.MAG,DK.M,DK.IL,DK.SRDK);
                           exec('aktu_rez','rezerwacje',DK.M,_nrk,DK.IL);
                           {? ND.WAL<>INFO.NAROD | _dotsp
                           || DK.KURS:=ND.KRS;
                              {? _dotsp & DK.N().CB='N' & DK.CN=0
                              || exec('dk_b_cn','magdok_poz')
                              |? _dotsp & DK.N().CB='T' & DK.CB=0
                              || exec('dk_b_cb','magdok_poz')
                              ?};
                              DK.put(1)
                           ?}
                        ?};
                        DK.prefix();
                        {? DK.seek(_ref)
                        ||
::                         naliczenie opłat dodatkowych
                           exec('actTAXS','oplaty_dod',DK.N().uidref(),DK.uidref(),DK.M,DK.M)
                        ?};
                        DK.cntx_pop();
                        _wyn:=1
                     ?}
                  || undo()
                  ?}
               || _wyn:=1
               ?};
               exec('obl_stan','magazyn_stan',PAL_POZ.M,1,ND.MAG)
            || _cena:={? _only || 0 || PAL_POZ.C ?};
               _ref:=exec('napozdk','magdok_palety',ND.ref(),PAL_POZ.M,PAL_POZ.ILP,0,{? _wyda || 'x' || '' ?},_cena
                      ,PAL_POZ.DK_C,PAL_POZ.TW);
               {? _ref=null
               || exec('przyjdod','jm',$PAL_POZ.M().J,1,PAL_POZ.ILP);
                  _ref:=exec('adddk','magdok_poz',ND.ref(),PAL_POZ.M,PAL_POZ.ILP,_cena
                         ,{? ~_wyda || ND.D || date(0,0,0) ?},,,,
                         ,exec('m_vat','material',PAL_POZ.M,ND.KH,,ND.AR,ND.AM,,,,{? ~_wyda || 'Z' || 'S' ?})
                         ,,,7,,,PAL_POZ.DK_C,,,,ND.ZL,ND.WYD
                         ,,,,,{? PAL_POZ.M().SETW='P' || PAL_POZ.TW || date(0,0,0) ?})
               ?};
               {? _ref<>null
               || {? ~exec('add2dk_l','magdok_wspolne',_ref,null,_c,_lokdo,PAL_POZ.TW,date(0,0,0)
                     ,PAL_POZ.ILP,ND.MAG,PAL_POZ.M,,,_b,,1)
                  || undo()
                  || DK.cntx_psh();
                     DK.prefix();
                     {? DK.seek(_ref)
                     || PAL_POZ.SCSQL:=$DK.ref();
                        PAL_POZ.STATS:=DK.STATS
                     ?};
                     DK.cntx_pop();
                     {? ~PAL_POZ.put(1) || undo ?};
                     {? ND.WAL<>INFO.NAROD | _dotsp
                     || DK.cntx_psh();
                        DK.prefix();
                        {? DK.seek(_ref)
                        || DK.KURS:=ND.KRS;
                           DK.CWAL:={? DK.KURS<>0 || DK.C/DK.KURS || 0 ?} $ DK.M().DOKL_Z;
                           {? _dotsp & DK.N().CB='N' & DK.CN=0
                           || exec('dk_b_cn','magdok_poz')
                           |? _dotsp & DK.N().CB='T' & DK.CB=0
                           || exec('dk_b_cb','magdok_poz')
                           ?};
                           DK.put(1)
                        ?};
                        DK.cntx_pop()
                     ?};
                     DK.cntx_psh();
                     DK.prefix();
                     {? DK.seek(_ref)
                     ||
::                      naliczenie opłat dodatkowych
                        exec('actTAXS','oplaty_dod',DK.N().uidref(),DK.uidref(),DK.M,DK.M)
                     ?};
                     DK.cntx_pop();
                     _wyn:=1
                  ?}
               || undo()
               ?};
               {? _wyda || exec('obl_stan','magazyn_stan',PAL_POZ.M,1,ND.MAG) ?}
            ?};
            {? ~_d || PAL_POZ.next() || 0 ?}
         !}
      ?}
   ?};

   ND.cntx_pop();
   DK.cntx_pop();
   DK_L.cntx_pop();

   PAL.cntx_pop();
   PAL_POZ.cntx_pop();
   {? ~_trans || end() ?}
?};
_wyn


\napozdk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: szuka pozycji na dokumencie o danych parametrach
::   WE: _a - ref ND
::       _b - indeks materiałowy
::       _c - ilosc
::       _d - rdk
::       _e - ndk
::       _f - cena
::       _g - cecha
::       [_h] - termin ważności, domyślnie: date(0,0,0)
::   WY: ref DK jesli znalazl lub null
::  OLD: \napozdk/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null;
_tw:={? var_pres('_h')=type_of(date()) || _h || date(0,0,0) ?};
DK.cntx_psh();
{? _e<>'' & _e<>'x'
|| DK.index('DOSTN');
   DK.prefix(ND.ref(),_d,_e)
|| DK.index('MAM');
   DK.prefix(ND.ref(),_b)
?};
{? DK.first() & DK.M=_b
|| {!
   |? {? DK.C=_f & DK.DK_C=_g & {? DK.M().SETW='P' || DK.TW=_tw || 1 ?}
      || DK.IL+=_c;
         DK.IL2:=DK.IL;
         DK.WAR:=DK.IL*DK.C$2;
         {? DK.N().IST_TYP<>''
         || DK.ILUJM:=(DK.IL*(exec('prz','jm',DK.M,DK.JM,DK.M().J))*DK.M().JU_P)$6;
            DK.WS:=DK.WAR$2;
            DK.WF:=DK.WAR$2;
            DK.SCWAR:=(DK.IL*DK.SCC)$2;
            DK.MASAN:=((DK.IL*(exec('prz','jm',DK.M,DK.JM,DK.M().J))*DK.M().JU_P)*DK.M().WN)$6
         ?};
         _wyn:={? DK.put(1) || DK.ref() || null ?};
         0
      || DK.next()
      ?}
   !}
?};
DK.cntx_pop();
_wyn


\rek_palp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: Sprawdzenie poprawnosci wprowadzonej pozycji
::  OLD: \rek_palp/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_res:={? PAL_POZ.M=null
      || FUN.info('Należy podać indeks materiałowy.'@);
         'M'
      |? PAL_POZ.ILP<=0
      || FUN.info('Ilość powinna być większa od zera.'@);
         'ILP'
      |? PAL_POZ.C<0
      || FUN.info('Cena powinna być większa lub równa zero.'@);
         'C'
      |? PAL_POZ.M().CZY_TW='T' & PAL_POZ.TW=date(0,0,0)
      || FUN.info('Wymagany termin ważności dla materiału.'@);
         'TW'
      |? PAL_POZ.M().M_ATR<>null & PAL_POZ.DK_C=null
      || FUN.info('Wymagana cecha dostawy.'@);
         'DK_C'
      || ''
      ?};
{? _res=''
|| PAL_POZ.IDPAL:=PAL_POZ.PAL().IDADD;
   PAL_POZ.KODPAL:=PAL_POZ.PAL().KODK
?};
_res


\rek0palp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: rekord przed
::  OLD: \rek0palp/mws.fml
::----------------------------------------------------------------------------------------------------------------------
~~


\poadppal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po dodaniu usunieciu pozycji palety
::  OLD: \poadppal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAL_POZ.size()
|| PAL.RSQL:=$PAL.ref();
   PAL.put()
|| PAL.RSQL:='';
   PAL.put()
?};
exec('ktm2pal','magdok_palety');
1


\adbezozn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: dodanie palety bez oznaczenia
::  OLD: \adbezozn/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.DOPAS:='';
_refpo:=PAL.ref();
EANX.win_edit('PALB');
{? EANX.edit("{? EANX.TYPPAL=null || FUN.info('Należy podać typ palety.'@); 'TYPPAL'
              |? ~EANX.ILPAL || FUN.info('Należy podać ilość palet.'@); 'ILPAL'
              || ''
              ?}")
|| PAL.cntx_psh();
   PAL.clear();
   {! _i..EANX.ILPAL
   |! PAL.blank();
      PAL.AKT:='T';
      PAL.BEZOZN:='T'+EANX.BEZOZN;
      PAL.ROZ:='B';
      PAL.STAN:='B';
      PAL.KODK:=exec('kodk_pal','magdok_palety',1);
      PAL.TPAL:=EANX.TYPPAL;
      PAL.MG:=ST.MAG;
      PAL.add()
   !};
   PAL.cntx_pop();
   {? PAL.f_active()>0
   || PAL.f_rfresh();
      PAL.f_seek(_refpo)
   || PAL.seek(_refpo)
   ?}
?};
~~


\rdkc_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: rozpisz cechy dla PAL_POZ-a
::  OLD: \rdkc_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_old:=PAL_POZ.DK_C;
_atr:=PAL_POZ.M().M_ATR<>null;
_flag:=ATR.FLAG;
ATR.FLAG:=1;

{? {? _atr & PAL_POZ.DK_C<>null
   || FUN.ask('Pozycja posiada przypisaną cechę.\nCzy usunąć i rozpisać na inne?'@)
   || PAL_POZ.DK_C=null
   ?}
||
   {? _atr
   || PAL_POZ.DK_C:=null;
      PAL_POZ.put(1)
   ?};
   _m_atr:=PAL_POZ.M().M_ATR;
   {? var_pres('x_dokl')>100 || obj_del(x_dokl) ?};
   x_dokl:=exec('jaka_dok_m','jm',PAL_POZ.M);
   ATR.fld_fml('ATR_IL','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $x_dokl || $ST.DOKL ?}");
   ATR.fld_fml('ATR_IL','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $x_dokl || $ST.DOKL ?}");
   hdr:="
      X_Xa.hdr_sel('');
      X_Xa.hdr_sel('Do rozpisania : %1  Rozpisano : %2'
         '  Pozostało : %3'@[form(il_do,,x_dokl),form(il_ro,,x_dokl),form(il_po,,x_dokl)])";
   rozp:="
      {!
      |? X_Xa.IL:=0;
         _edit:=X_Xa.edit(\"X_Xa.IL:=X_Xa.IL$x_dokl;
                           {? X_Xa.IL<=0 || FUN.info(\'Nieprawidłowa ilość.\'@); \'IL\'
                           |? ZMIENNE.DK_C='' || FUN.info(\'Należy podać cechę.\'@); \'DK_C\'
                           || \'\'
                           ?}\");
         {? _edit || X_Xa.SYM:=ZMIENNE.DK_C;X_Xa.add(); hdr(); win_disp ?};_edit
      !}";
   aktu:="X_Xa.cntx_psh();
          il_ro:=0;
          il_po:=il_do-il_ro;
          {? X_Xa.first() || {!|? il_ro+=X_Xa.IL; il_po:=il_do-il_ro; X_Xa.next !} ?};
          X_Xa.cntx_pop;
          hdr();
          ''
         ";

   {? var_pres('X_Xa')>0 || obj_del(X_Xa) ?};
   PARAM_W.TAB_TMP:='X_Xa';
   PARAM_W.TAB_POL:='';
   PARAM_W.TAB_TYT:='Rozpisane pozycje dokumentu';
   t_sumk:='';

   X_Xa:=tab_tmp(,'SYM','STRING[20]','Cecha'@,
                  'IL','REAL','Ilość'@,
                  'NAZ','STRING[60]','Nazwa'@,
                  'WAR01','STRING[25]','Wartość 01'@,
                  'WAR02','STRING[25]','Wartość 02'@,
                  'WAR03','STRING[25]','Wartość 03'@,
                  'WAR04','STRING[25]','Wartość 04'@,
                  'WAR05','STRING[25]','Wartość 05'@,
                  'WAR06','STRING[25]','Wartość 06'@,
                  'WAR07','STRING[25]','Wartość 07'@,
                  'WAR08','STRING[25]','Wartość 08'@,
                  'WAR09','STRING[25]','Wartość 09'@,
                  'WAR10','STRING[25]','Wartość 10'@,
                  'M_ATR','INTEGER','M_ATR'@,
                  'ZPARN','STRING[16]','Partia'@);

   _acr:=X_Xa.mk_sel('',,0,'#dk_rozp_acr');
   {? _m_atr=null
   ||
      X_Xa.win_fld(_acr,,'SYM',,,20);
      X_Xa.win_fld(_acr,,'NAZ',,,40);
      X_Xa.win_fld(_acr,,'IL',,,8,x_dokl)
   ||
      M_ATR.index('TYP');
      M_ATR.prefix('C');
      {? M_ATR.seek(_m_atr)
      ||
         {! _i:=1..10
         |!
            {? ($('M_ATR.SL_'+form(_i,-2,,'99')))()<>null
            ||
               ($('X_Xa.win_fld(_a,,''WAR'+form(_i,-2,,'99')+''',,,10,,,'''
               +($('M_ATR.SL_'+form(_i,-2,,'99')+'().NA'))()+''')'))(_acr)
            ?}
         !};
         X_Xa.win_fld(_acr,,'IL',,,8,x_dokl)
      ?}
   ?};
   {? _m_atr=null
   ||
      X_Xa.win_act(_acr,0,'Formuła','Dołącz'@@,,'Dołączanie nowego zapisu'@,,"rozp()",1);
      X_Xa.win_act(_acr,1,'Formuła','Dołącz'@@,,'Dołączanie nowego zapisu'@,,"rozp()",1)
   ||
      X_Xa.win_act(_acr,0,'Formuła','Dołącz'@@,,'Dołączanie nowego zapisu'@,,"exec(\'atr_tmp_addput\',\'mat_atr\'
       ,\'X_Xa\',PAL_POZ.M().M_ATR,\'add\',\'IL\')",1);
      X_Xa.win_act(_acr,1,'Formuła','Dołącz'@@,,'Dołączanie nowego zapisu'@,,"exec(\'atr_tmp_addput\',\'mat_atr\'
       ,\'X_Xa\',PAL_POZ.M().M_ATR,\'add\',\'IL\')",1)
   ?};
   X_Xa.win_act(_acr,0,'Formuła','Usuń'@@,,'Usunięcie bieżącego zapisu'@,"X_Xa.del;aktu()");
   {? _m_atr=null
   || X_Xa.win_act(_acr,0,'Formuła','Popraw'@@,,'Poprawianie bieżącego zapisu'@,,"
      ZMIENNE.DK_C:=X_Xa.SYM;
      {? X_Xa.edit(\"X_Xa.IL:=X_Xa.IL$x_dokl;
                    {? X_Xa.IL<=0 || FUN.info(\'Nieprawidłowa ilość.\'@); \'IL\'
                    |? ZMIENNE.DK_C='' || FUN.info(\'Należy podać cechę.\'@); \'DK_C\'
                    || \'\'
                    ?}\")
      || X_Xa.IL:=X_Xa.IL$x_dokl;
         X_Xa.SYM:=ZMIENNE.DK_C;
         X_Xa.put()
      || X_Xa.get()
      ?}")
   || X_Xa.win_act(_acr,0,'Formuła','Popraw'@@,,'Poprawianie bieżącego zapisu'@,
                   ,"exec(\'atr_tmp_addput\',\'mat_atr\',\'X_Xa\',PAL_POZ.M().M_ATR,\'put\',\'IL\')",1)
   ?};
   X_Xa.win_act(_acr,0,'Rekord',,,,"aktu()");
   X_Xa.win_act(_acr,0,'Formuła','Rozpisz'@@,,,,"sel_exit();1");

   X_Xa.win_act(_acr,0,'Szukaj');
   X_Xa.win_sel(_acr);

   _acr:=X_Xa.mk_edit('Podaj dane do rozpisania pozycji '@,0);
   X_Xa.win_efld(_acr,,'IL',,,8,x_dokl);
   X_Xa.win_efld(_acr,ZMIENNE,'DK_C',,,20);
   X_Xa.win_efld(_acr,,'NAZ',,,60);
   X_Xa.win_edit(_acr);

   il_do:=PAL_POZ.ILP;
   il_ro:=0;
   il_po:=il_do-il_ro;

   {!
   |?
      hdr();
      _sel:=X_Xa.select();
      {? X_Xa.first() & il_do=il_ro
      || do();
         _dkr:=PAL_POZ.ref(); _dkm:=PAL_POZ.M;
         {!
         |?
            {? _m_atr=null
            ||
               DK_C.index('SYM');
               DK_C.prefix(X_Xa.SYM,X_Xa.SYM);
               {? DK_C.first
               || _cecha:=DK_C.ref()
               || DK_C.blank();
                  DK_C.SYM:=X_Xa.SYM;
                  DK_C.NAZ:=X_Xa.NAZ;
                  DK_C.KOD:=exec('kod2matr','mat_atr');
                  {? ~DK_C.add(1)
                  || FUN.info('Dodanie cechy %1 do słownika cech nie powiodło się.'@[X_Xa.SYM]);
                     undo()
                  ?};
                  _cecha:=DK_C.ref()
               ?}
            ||
               _cecha:=exec('m_atr_sprdod','mat_atr',X_Xa.WAR01,X_Xa.WAR02,X_Xa.WAR03,X_Xa.WAR04,X_Xa.WAR05,X_Xa.WAR06,
                  X_Xa.WAR07,X_Xa.WAR08,X_Xa.WAR09,X_Xa.WAR10,_m_atr,X_Xa.ZPARN)
            ?};
            PAL_POZ.FIRST:='N';
            PAL_POZ.ILP:=PAL_POZ.IL:=X_Xa.IL $ x_dokl;
            PAL_POZ.DK_C:=_cecha;
            PAL_POZ.IL2:=0;
            exec('poilpalp','magdok_palety');
            exec('uzupIDkod','magdok_palety',PAL_POZ);
            PAL_POZ.add();
            X_Xa.next()
         !};
         {? PAL_POZ.seek(_dkr)
         || {? il_do=il_ro
            || PAL_POZ.del()
            || PAL_POZ.ILP:=PAL_POZ.IL:=il_po $ x_dokl;
               PAL_POZ.put()
            ?}
         || FUN.info('Nie odnaleziono rozpisywanej pozycji.'@);
            undo()
         ?};
         {? do_state=1 || _sel:=0 ?};
         end()
      || {? _sel
         || {? il_do<=il_ro
            || FUN.info('Za dużo do rozpisania. Popraw dane.'@)
            || FUN.info('Za mało do rozpisania. Popraw dane.'@)
            ?}
         ?}
      ?};
      _sel
   !};
   {? ~_sel & _atr || PAL_POZ.DK_C:=_old; PAL_POZ.put(1) ?};
   VAR_DEL.delete('il_do','il_ro','il_po');
   VAR_DEL.delete('x_dokl','X_Xa');
   VAR_DEL.delete('aktu','hdr','rozp')
|| {? PAL_POZ.DK_C<>null & ~_atr
   || FUN.info('Pozycja posiada przypisaną cechę.'@)
   ?}
?};
ATR.FLAG:=_flag;
1


\dkc2pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: poprawia ceche na pozycji palety magazyn Dostaw
::  OLD: \dkc2pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.PLUS='T' & (1+DK.N().MAG().TYP)='D'
|| _dost:=$DK.ref();
   _dkc:=DK.DK_C;
   DK_L.cntx_psh();
   DK_L.index('DK');
   DK_L.prefix(DK.ref(),null);
   {? DK_L.first()
   || {!
      |? {? DK_L.PAL<>null
         || PAL.cntx_psh();
            PAL_POZ.cntx_psh();
            PAL.clear();
            {? PAL.seek(DK_L.PAL)
            || {? PAL.AKT='N'
               || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
               || PAL_POZ.use('paletyp')
               ?};
               PAL_POZ.index('SCSQL');
               PAL_POZ.prefix(PAL.ref(),_dost,_dost);
               {? PAL_POZ.first()
               || {!
                  |? PAL_POZ.DK_C:=_dkc;
                     PAL_POZ.put(1);
                     PAL_POZ.next()
                  !}
               ?}
            ?};
            PAL.cntx_pop();
            PAL_POZ.cntx_pop()
         ?};
         DK_L.next()
      !}
   ?};
   DK_L.cntx_pop()
?}


\reki_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: akcja rekord przed dla okienka selekcji palet
::  OLD: \reki_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_ch:={? PAL.win_sel('?')*'WYB' || 'W' || '' ?};
:: wlacznie/wylacznie akcji
_archiv:={? PAL.name()<>'palety' || 'MEIDPUACN(TYFG)' || 'X' ?};
_zmwyb:={? (';ODP'*EANX.WHERE)>1 || 'B' || '' ?};
_zmpar:={? EANX.WHERE='O' || 'R' || '' ?}+_zmwyb+_archiv;
_zmpac:={? _ch='' || 'R' || '' ?}+_zmwyb+_archiv;
_no_et:={? ~exec('isDEFetyk','magazyn_mobi','PAL') || 'Q' || '' ?};

_akcwyc:={? PAL.STAN='N' || 'C' || 'A' ?};

{? PAL.AKT='N' | ZAKR.AKT='N'
|| {? EANX.WHERE='W'
   || PAL.actions(_ch+'SEL',_zmpac+'DUPN(TF)AE(MW):DE(MW)'+_zmpac,'W:D',1);
      PAL.actions_grayed(_ch+'SEL',_no_et+_akcwyc+'E(N):DE(N)')
   |? EANX.WHERE='P'
   || PAL.actions(_ch+'SEL',_zmpac+'ZN(T):'+_zmpac,'W:D',1)
   || PAL.actions(_ch+'SEL',_zmpar+'ZWE(MW):E(MW)'+gsub(_zmpar,'E',''),'D:D',1);
      PAL.actions_grayed(_ch+'SEL',_no_et+_akcwyc+'DUpACN(GTF)E(N):DE(N)')
   ?};
   {? PAL.STAN='I' || PAL.KODK:=exec('kodk_akt','magdok_palety',PAL.KODK) ?};
   'PAL#01#02'
|? (PAL.AKT='T' & PAL.STAN<>'N') | PAL.STAN='B'
|| {? EANX.WHERE='W'
   || PAL.actions(_ch+'SEL',_zmpac+'DUPN(TF)AE(MW):DE(MW)'+_zmpac,'W:D',1);
      PAL.actions_grayed(_ch+'SEL',_no_et+_akcwyc+'N(Y)')
   |? EANX.WHERE='P'
   || PAL.actions(_ch+'SEL',_zmpac+'ZN(TF):'+_zmpac,'W:D',1);
      PAL.actions_grayed(_ch+'SEL',_no_et+'N(YF)')
   || PAL.actions(_ch+'SEL',_zmpar+'ZWE(MW):E(MW)'+_zmpar,'D:D',1);
      PAL.actions_grayed(_ch+'SEL',_no_et+_akcwyc+'N(Y)E(A):E(A)')
   ?};
   {? PAL.STAN='B' || 'PAL#01#03' |? PAL.ROZ='T' || 'PAL#01#04' || 'PAL#01#01' ?}
|| {? EANX.WHERE='W'
   || PAL.actions(_ch+'SEL',_zmpac+'DUPN(TF)AE(MW):DE(MW)'+_zmpac,'W:D',1);
      PAL.actions_grayed(_ch+'SEL',_no_et+_akcwyc+'N(YF)')
   |? EANX.WHERE='P'
   || PAL.actions(_ch+'SEL',_zmpac+'ZN(TF):'+_zmpac,'W:D',1);
      PAL.actions_grayed(_ch+'SEL',_no_et+_akcwyc+'N(YF)')
   |? EANX.WHERE='X'
   || PAL.actions(_ch+'SEL','PZCN(TYF)AME:E','W:D',1)
   || PAL.actions(_ch+'SEL',_zmpar+'ZWE(MW):E(MW)'+gsub(gsub(_zmpar,'D',''),'E',''),'D:D',1);
      PAL.actions_grayed(_ch+'SEL',_no_et+_akcwyc+'E(A)N(TYF):E(A)')
   ?};
   ''
?}


\rekibpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: akcja rekord przed dla okienka selekcji palet
::  OLD: \rekibpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('FindInSet','#table','PAL_POZ','PAL',PAL.ref())<>null
|| ''
|| 'PAL#02#01'
?}


\col_mktm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: kolor na rekordzie __infean.PRO
::  OLD: \col_mktm/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAL.MKTM='<KILKA POZYCJI>'
|| 'PAL#PRO#01'
|| 'PAL#PRO#02'
?}


\rek_ppal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: obliczenie sumy wydania i podswietlenie wybranych pozycji
::  OLD: \rek_ppal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
EANX.ILW:=0;
EANX.NEWPAL:='';
_reorg:=(BEER.MENU_PTH<>'MR');
PAL.cntx_psh();
{? PAL_POZ.PAL().STAN='B'
|| _wyn:='PAL_POZ#01#022'
|? PAL_POZ.IL=PAL_POZ.ILP & exec('czynadok','magdok_palety',_reorg)
|| _wyn:='PAL_POZ#01#02'
|? PAL_POZ.PAL().Z='T'
|| _wyn:='PAL_POZ#01#021'
|? var_pres('__wppal')>0
||
:: obliczenie sumy ilosci do wydania
   EANX.SUW:=0;
   __wppal.clear();
   {? __wppal.first() || {! |? EANX.SUW+=__wppal.ILW; __wppal.next() !} ?};
   __wppal.clear();
   {? __wppal.find_key($PAL_POZ.ref()) & __wppal.ILW>0
   || EANX.ILW:=__wppal.ILW;
      EANX.NEWPAL:=__wppal.KOD;
      _wyn:={? EANX.NEWPAL<>''
            || 'PAL_POZ#01#01'
            || 'PAL_POZ#01#03'
            ?}
   || ''
   ?}
|| _wyn:=''
?};
PAL.cntx_pop();
_wyn


\czynadok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy wystepuja juz na dokumencie
::   WE: _a - 1-reorganizacja 0-dokument
::   WY: 1-tak 0-nie
::  OLD: \czynadok/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? ~_a
|| _wyn:=exec('FindInSet','#table','DK_L','CZYPAL',PAL_POZ.PAL,ND.ref())<>null;
   {? ~_wyn || _wyn:=exec('FindInSet','#table','DK_L','CZYPALDO',PAL_POZ.PAL,ND.ref())<>null ?}
|| _wyn:=exec('FindInSet','#table','DK_L','CZYPAR',PAL_POZ.PAL,DK_LN.ref())<>null;
   {? ~_wyn || _wyn:=exec('FindInSet','#table','DK_L','CZYPARDO',PAL_POZ.PAL,DK_LN.ref())<>null ?}
?};
_wyn


\wyb_mpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przelaczenie na okienko wyboru wg indeksow materialowych
::  OLD: \wyb_mpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
sel_exit();
__okno:='M';
~~


\wyb_palm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przelaczenie na okienko wyboru wg indeksow materialowych
::  OLD: \wyb_palm/mws.fml
::----------------------------------------------------------------------------------------------------------------------
sel_exit();
__okno:='P';
~~


\pogrpmat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przelaczenie na okienko wyboru wg indeksow materialowych
::  OLD: \pogrpmat/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_reorg:=(M.win_sel('?')+1)='R';
M.cntx_psh();
PAL_POZ.use('paletyp');
PAL_POZ.index('POZKTM');
PAL_POZ.prefix(M.ref(),{? ~_reorg || ND.MAG || DK_LN.MG ?});
grp_disp(PAL_POZ,'WERM');
{? ~_reorg
|| DK.index('DOKMAG');
   DK.prefix(ND.ref());
   grp_disp(DK,'WERPAL')
|| DK_L.index('DK_LN');
   DK_L.prefix('Z',DK_LN.ref());
   grp_disp(DK_L,'WERPAL')
?};
M.cntx_pop();
1


\akc_mpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wybor pozycji wg indeksu materialowego
::  OLD: \akc_mpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_reorg:=(M.win_sel('?')+1)='R';
{? ~_reorg & ~exec('sprd_inp','magazyn_inw',M.ref(),ND.D,ND.MAG,,ND.T)
|| 0
|? ~_reorg & ND.MD<>null & ~exec('sprd_inp','magazyn_inw',M.ref(),ND.D,ND.MD,,ND.T)
|| 0
|? BEER.SD>0
|| M.cntx_psh();
   PAL.cntx_psh();
   PAL_POZ.cntx_psh();
   PAL_POZ.use('paletyp');
   PAL_POZ.index('POZKTM');
   PAL_POZ.prefix(M.ref(),{? ~_reorg || ND.MAG || DK_LN.MG ?});
   {? PAL_POZ.first()
   ||
::    sprawdzenie dostępności danej pozycji do wyboru
      _jest:=PAL_POZ.size();
      {!
      |? _jest-=(PAL_POZ.IL=PAL_POZ.ILP & exec('czynadok','magdok_palety',_reorg));
         PAL_POZ.next()
      !};
      {? ~_jest
      || FUN.info('Wszystkie pozycje z palet są dołączone do dokumentu.\nWybór niemożliwy.'@);
      0
      |? PAL_POZ.first() & FUN.ask('Czy dodać pozycje z palet do dokumentu?'@)
      || VAR_DEL.delete('__wppal');
         __wppal:=tab_tmp(2,'SQL','STRING[16]','PAL_POZ'
                   ,'ILW','REAL','Ilość'
                   ,'KOD','STRING[30]','Kod kreskowy'
                   ,'PQL','STRING[16]','Nowa paleta');
         PAL_POZ.win_sel('WYBPOZ');
         {!
         |? _ok:=PAL_POZ.select();
            {? _ok
            || _ok:=0;
               PAL_POZ.cntx_psh();
               {? PAL_POZ.first()
               || {!
                  |? __wppal.clear();
                     {? __wppal.find_key($PAL_POZ.ref()) & __wppal.ILW>0 & __wppal.PQL<>''
                     || _ok:=1;
                        0
                     || PAL_POZ.next()
                     ?}
                  !}
               ?};
               PAL_POZ.cntx_pop();
               {? _ok
               || 0
               || _ok:=FUN.choice('Brak pozycji do przeniesienia (wypełnione pola: Do wydania, Nowa paleta).\n'
                        'Wybierz jedną z opcji.'@,,'Powrót do wyboru'@);
                  {? _ok=1
                  || 1
                  || _ok:=0;
                     0
                  ?}
               ?}
            || 0
            ?}
         !};
         {? _ok
         || _allL:={? _reorg
                   || DK_LN.MG().P_ALL | DK_LN.MG().W_ALL
                   || (ND.TYP().P='T' & ND.MAG().P_ALL) | (ND.TYP().P='N' & ND.MAG().W_ALL)
                   ?};
            {? _allL
            || EANL.index('MGBLOK');
               EANL.prefix('T',{? _reorg || DK_LN.MG || ND.MAG ?},'N')
            || EANL.index('MGDOK');
               EANL.prefix('T',{? _reorg || DK_LN.MG || ND.MAG ?},'T','N')
            ?};
            EANL.win_sel('SLO_MAG');
            _act:=EANL.actions('SLO_MAG','E:E');
            {? EANL.first()
            || {? EANL.size()>1
               || _eanl:={? EANL.select() || EANL.ref() || null ?}
               || _eanl:=EANL.ref()
               ?}
            || _eanl:=null
            ?};
            {? _eanl=null
            || FUN.info('Konieczne wybranie lokalizacji.\nPozycje nie zostaną dodane.'@);
               0
            || __wppal.clear();
               {? __wppal.first()
               || {!
                  |? {? __wppal.ILW>0 & __wppal.PQL<>'' & (PAL_POZ.clear(); PAL_POZ.seek(__wppal.SQL))
                     || {? {? _reorg
                           || _eanz:=exec('FindInSet','#table','SL','PAL',PAL_POZ.PAL,DK_LN.MG,"SL.EANL",,,null());
                              {? _eanz=null || _eanz:=DK_LN.MG().EANL ?};
                              exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),_eanz,_eanl,PAL_POZ.TW,PAL_POZ.TW
                                   ,__wppal.ILW,ST.MAG,PAL_POZ.M,,,PAL_POZ.PAL
                                   ,exec('FindAndGet','#table',PAL,__wppal.PQL,,,null()),,2)
                           || exec('przeppal','magdok_palety',ND.ref(),PAL_POZ.PAL,_eanl,1,PAL_POZ.ref()
                                   ,__wppal.ILW,__wppal.PQL)
                           ?}
                        || PAL_POZ.ILP-=__wppal.ILW;
                           exec('akt_palp','magdok_palety');
                           {? PAL_POZ.put(1)
                           || exec('poz_bpal','magdok_palety',1,__wppal.PQL,$PAL_POZ.PAL,PAL_POZ.M().KTM,__wppal.ILW
                               ,PAL_POZ.C,PAL_POZ.TW,PAL_POZ.SCSQL,ST.MAG,PAL_POZ.DK_C)
                           ?};
                           exec('znacznik','magdok_palety',PAL_POZ.PAL)
                        ?}
                     ?};
                     __wppal.next()
                  !}
               ?}
            ?};
            EANL.actions('SLO_MAG',_act)
         ?};
::       odblokowanie palet
         __wppal.clear();
         {? __wppal.first()
         || {!
            |? {? (PAL_POZ.clear(); PAL_POZ.seek(__wppal.SQL))
               || exec('blun_pal','magdok_palety',PAL_POZ.PAL,0)
               ?};
               __wppal.next()
            !}
         ?};
         VAR_DEL.delete('__wppal')
      ?};
      {? _reorg
      || DK_L.index('DK_LN');
         DK_L.prefix('Z',DK_LN.ref());
         PAL_POZ.use('paletyp');
         PAL_POZ.index('POZKTM');
         PAL_POZ.prefix(M.ref(),DK_LN.MG);
         PAL_POZ.first();
         grp_disp(PAL_POZ,'WERM');
         grp_disp(DK_L,'WERPAL')
      || DK.index('DOKMAG');
         DK.prefix(ND.ref());
         PAL_POZ.use('paletyp');
         PAL_POZ.index('POZKTM');
         PAL_POZ.prefix(M.ref(),ND.MAG);
         PAL_POZ.first();
         grp_disp(PAL_POZ,'WERM');
         grp_disp(DK,'WERPAL')
      ?}
   || FUN.info('Brak stanu na paletach dla indeksu: %1.\nWybór niemożliwy.'@[M.KTM]);
      0
   ?};
   M.cntx_pop();
   PAL.cntx_pop();
   PAL_POZ.cntx_pop()
|| FUN.info('Brak stanu na wybranym indeksie materiałowym.\nWybór niemożliwy.'@)
?};
~~


\blun_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: r_lock na palecie lub r_unlock wg PAL_POZ.PAL
::   WE: _a - ref PAL
::       _b - 1-r_lock 0-r_unlock
::  OLD: \blun_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=PAL_POZ.PAL;
PAL.cntx_psh();
PAL.clear();
{? PAL.seek(_ref) || {? _b || PAL.r_lock(1) || PAL.r_unlock() ?} ?};
PAL.cntx_pop()


\pop_ppal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: poprawa ilosci na pozycji
::  OLD: \pop_ppal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_reorg:=(BEER.MENU_PTH<>'MR');
PAL.cntx_psh();
{? PAL_POZ.PAL().P<>'T' & PAL_POZ.PAL().ROZ<>'B'
|| FUN.info('Paleta niedostępna - nie została przyjęta w magazynie.'@);
   _wyn:=0
|? PAL_POZ.PAL().STAN='B'
|| FUN.info('Paleta niedostępna - z rozpakowania - nie zatwierdzono dokumentu ją tworzącego.'@);
   _wyn:=0
|? PAL_POZ.IL=PAL_POZ.ILP & exec('czynadok','magdok_palety',_reorg)
|| FUN.info('Wszystkie pozycje z palety są dołączone do dokumentu.\nModyfikacja niemożliwa.'@);
   _wyn:=0
|? PAL_POZ.PAL().Z='T'
|| FUN.info('Paleta niedostępna - zablokowana do realizacji zamówienia.'@);
   _wyn:=0
|| _wyn:=1
?};
PAL.cntx_pop();
_wyn


\por_ppal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: po popraw ilosci na pozycji
::  OLD: \por_ppal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANX.ILW>0
|| __wppal.clear();
   {? __wppal.find_key($PAL_POZ.ref())
   || __wppal.ILW:=EANX.ILW;
      {? EANX.NEWPAL<>'' & (_refp:=exec('FindInSet','#table','PAL','PAL',EANX.NEWPAL,EANX.NEWPAL))<>null
      || __wppal.KOD:=EANX.NEWPAL;
         __wppal.PQL:=$_refp
      || __wppal.KOD:='';
         __wppal.PQL:=''
      ?};
      __wppal.put(1)
   || __wppal.SQL:=$PAL_POZ.ref();
      __wppal.ILW:=EANX.ILW;
      {? EANX.NEWPAL<>'' & (_refp:=exec('FindInSet','#table','PAL','PAL',EANX.NEWPAL,EANX.NEWPAL))<>null
      || __wppal.KOD:=EANX.NEWPAL;
         __wppal.PQL:=$_refp
      || __wppal.KOD:='';
         __wppal.PQL:=''
      ?};
      {? __wppal.add(1) || exec('blun_pal','magdok_palety',PAL_POZ.PAL,1) ?}
   ?}
|| __wppal.clear();
   {? __wppal.find_key($PAL_POZ.ref())
   || __wppal.del();
      exec('blun_pal','magdok_palety',PAL_POZ.PAL,0)
   ?}
?}


\wyp_ppal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: zeruj wypelnij do maksymalnej ilosci
::  OLD: \wyp_ppal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_reorg:=BEER.MENU_PTH<>'MR';
_tab:=PAL_POZ.sel_aget();
PAL_POZ.sel_adel();
PAL.cntx_psh();
PAL_POZ.cntx_psh();
{? _tab.first()
|| {? FUN.ask('Zmiana ilości do wydania?'@)
   || {!
      |? {? (PAL_POZ.clear(); PAL_POZ.seek(_tab.REF,)) & ~(PAL_POZ.PAL().Z='T')
          & ~(PAL_POZ.IL=PAL_POZ.ILP & exec('czynadok','magdok_palety',_reorg))
          & PAL_POZ.PAL().STAN<>'B' & (PAL_POZ.PAL().P='T' | PAL_POZ.PAL().ROZ='B')
         || __wppal.clear();
            {? __wppal.find_key($PAL_POZ.ref())
            || __wppal.del();
               exec('blun_pal','magdok_palety',PAL_POZ.PAL,0)
            || __wppal.SQL:=$PAL_POZ.ref();
               __wppal.ILW:=PAL_POZ.ILP;
               {? EANX.NEWPAL<>'' & (_refp:=exec('FindInSet','#table','PAL','PAL',EANX.NEWPAL,EANX.NEWPAL))<>null
               || __wppal.KOD:=EANX.NEWPAL;
                  __wppal.PQL:=$_refp
               || __wppal.KOD:='';
                  __wppal.PQL:=''
               ?};
               {? __wppal.add(1) || exec('blun_pal','magdok_palety',PAL_POZ.PAL,1) ?}
            ?}
         ?};
         _tab.next()
      !}
   ?}
|? PAL_POZ.PAL().P<>'T' & PAL_POZ.PAL().ROZ<>'B'
|| FUN.info('Paleta niedostępna - nie została przyjęta w magazynie.'@)
|? PAL_POZ.PAL().STAN='B'
|| FUN.info('Paleta niedostępna - z rozpakowania - nie zatwierdzono dokumentu ją tworzącego.'@)
|? PAL_POZ.IL=PAL_POZ.ILP & exec('czynadok','magdok_palety',_reorg)
|| FUN.info('Wszystkie pozycje z palety są dołączone do dokumentu.\nModyfikacja niemożliwa.'@)
|? PAL_POZ.PAL().Z='T'
|| FUN.info('Paleta niedostępna - zablokowana do realizacji zamówienia.'@)
|? FUN.ask('Zmiana ilości do wydania?'@)
|| __wppal.clear();
   {? __wppal.find_key($PAL_POZ.ref())
   || __wppal.del();
      exec('blun_pal','magdok_palety',PAL_POZ.PAL,0)
   || __wppal.SQL:=$PAL_POZ.ref();
      __wppal.ILW:=PAL_POZ.ILP;
      {? EANX.NEWPAL<>'' & (_refp:=exec('FindInSet','#table','PAL','PAL',EANX.NEWPAL,EANX.NEWPAL))<>null
      || __wppal.KOD:=EANX.NEWPAL;
         __wppal.PQL:=$_refp
      || __wppal.KOD:='';
         __wppal.PQL:=''
      ?};
      {? __wppal.add(1) || exec('blun_pal','magdok_palety',PAL_POZ.PAL,1) ?}
   ?}
?};
PAL_POZ.cntx_pop();
PAL.cntx_pop();
~~


\new_ppal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: zbiorcze przypisanie palety do zaznaczonych rekordow
::  OLD: \new_ppal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=PAL_POZ.sel_aget();
PAL_POZ.sel_adel();

PAL.cntx_psh();
PAL_POZ.cntx_psh();
_ok:=0;
:: sprawdzamy czy istnieja ilosci do wydania na zaznaczonych pozycjach
{? _tab.first()
|| {!
   |? {? (PAL_POZ.clear(); PAL_POZ.seek(_tab.REF,))
      || __wppal.clear();
         _ok:={? __wppal.find_key($PAL_POZ.ref()) || __wppal.ILW>0 || 0 ?}
      ?};
      ~_ok & _tab.next()
   !}
|| __wppal.clear();
   _ok:={? __wppal.find_key($PAL_POZ.ref()) || __wppal.ILW>0 || 0 ?}
?};

{? _ok
|| {? FUN.ask('Czy przypisać nową paletę do zaznaczonych pozycji?'@)
   || PAL.win_sel('SLO');
      PAL.f_clear();
      PAL.index('STAN');
      PAL.prefix(ST.ODDZ,'T','B');
      _newpal:={? PAL.select() || _pql:=$PAL.ref(); PAL.KODK || _pql:=''; '' ?};
      {? _newpal=''
      || FUN.info('Nie podano nowej palety dla wydania.\nPrzypisanie nowej palety niemożliwe.'@);
         0
      || {? _tab.first()
         || {!
            |? {? (PAL_POZ.clear(); PAL_POZ.seek(_tab.REF,))
               || __wppal.clear();
                  {? __wppal.find_key($PAL_POZ.ref()) & __wppal.ILW>0
                  || __wppal.KOD:=_newpal;
                     __wppal.PQL:=_pql;
                     __wppal.put(1)
                  ?}
               ?};
               _tab.next()
            !}
         || __wppal.clear();
            {? __wppal.find_key($PAL_POZ.ref()) & __wppal.ILW>0
            || __wppal.KOD:=_newpal;
               __wppal.PQL:=_pql;
               __wppal.put(1)
            ?}
         ?}
      ?}
   ?}
|| FUN.info('Wśród zanaczonych pozycji brak pozycji do wydania.\nPrzypisanie nowej palety niemożliwe.'@);
   0
?};
PAL.cntx_pop();
PAL_POZ.cntx_pop();
~~


\chk_ppal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdzeniue poprawnosci wprowadzonych danych
::  OLD: \chk_ppal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? EANX.ILW<0
|| FUN.info('Ilość do wydania musi być większa lub równa zero.'@);
   _wyn:='ILW'
|? EANX.ILW>PAL_POZ.ILP
|| FUN.info('Ilość do wydania nie może byc większa od ilości pozostałej na palecie.'@);
   _wyn:='ILW'
?};
_wyn


\prnewpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed redakcja pola EANX.NEWPAL
::  OLD: \prnewpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
1


\f3newpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: klawisz F3 dla pola EANX.NEWPAL
::  OLD: \f3newpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
PAL.cntx_psh();
PAL_POZ.cntx_psh();
PAL.win_sel('SLO');
PAL.f_clear();
PAL.index('STAN');
PAL.prefix(ST.ODDZ,'T','B');
{? PAL.select() || EANX.NEWPAL:=PAL.KODK ?};
PAL.cntx_pop();
PAL_POZ.cntx_pop();
~~


\ponewpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: po redakcji pola EANX.NEWPAL
::  OLD: \ponewpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
PAL.cntx_psh();
{? EANX.NEWPAL<>''
|| {? exec('FindInSet','#table','PAL','PAL',EANX.NEWPAL,EANX.NEWPAL)=null
   || _byl:=0;
      PAL.index('PAL');
      PAL.prefix(EANX.NEWPAL);
      {? PAL.first()
      || {!
         |? {? PAL.STAN='B'
            || _byl:=1;
               EANX.NEWPAL:=PAL.KODK;
               0
            || PAL.next()
            ?}
         !}
      ?};
      {? ~_byl
      || FUN.info('Brak nowej palety (przeznaczonej do kompletacji) o podanym kodzie.'@);
         EANX.NEWPAL:=''
      ?}
   ?}
?};
PAL.cntx_pop();
1


\bldtreor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: Data reorganizacji magazynu
::  OLD: \bldtreor/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? date()>date(ST.AR,ST.AM,0)
|| date(ST.AR,ST.AM,0)
|? date()<date(ST.AR,ST.AM,1)
|| date(ST.AR,ST.AM,1)
|| date()
?}


\createNewPal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: tworzy nowa palete na podstawie podanej
::   WE: _a - paleta
::       _b - paleta stara - ref SQL
::       _c - tabela różnic pozycji
::   WY: 1-dodano 0-nie
::  OLD: \createNewPal/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_tab:=_c;
PAL.cntx_psh();
PAL.clear();
{? PAL.seek(_a)
|| _old:=PAL.ref();
   _new:=exec('FindAndGet','#table','PAL',_b,,,null());
:: przepisujemy pozycje do maski historycznej
   {? _new<>null()
   || PAL_POZ.index('PAL');
      PAL_POZ.prefix(_old);
      {? PAL_POZ.first()
      || {!
         |? PAL_POZ.cntx_psh();
            PAL_POZ.use('paleths');
            PAL_POZ.clear();
            PAL_POZ.PAL:=_new;
            exec('uzupIDkod','magdok_palety',PAL_POZ);
            {? PAL_POZ.add(1) || _wyn:=1 || _wyn:=0 ?};
            PAL_POZ.cntx_pop();
            _next:=0;
            {? _wyn
            || _tab.clear();
               _tab.prefix($_old,$PAL_POZ.M,PAL_POZ.TW);
               {? _tab.first()
               || {? _tab.IL>0 | PAL_POZ.ILP>=(-_tab.IL)
                  || PAL_POZ.ILP+=_tab.IL;
                     {? PAL_POZ.ILP>0
                     || PAL_POZ.IL:=PAL_POZ.ILP;
                        PAL_POZ.put(1);
                        _next:=PAL_POZ.next()
                     || _next:=PAL_POZ.del()
                     ?};
                     _tab.del()
                  || _tab.IL+=PAL_POZ.ILP;
                     _tab.put(1);
                     _next:=PAL_POZ.del()
                  ?}
               || _next:=PAL_POZ.next()
               ?}
            ?};
            _wyn & _next
         !}
      ?}
   ?};
:: nanosimy różnice
   _tab.clear();
   _tab.prefix($_old);
   {? _tab.first()
   || {!
      |? PAL_POZ.clear();
         PAL_POZ.blank();
         PAL_POZ.PAL:=_old;
         PAL_POZ.M:=exec('FindAndGet','#table','M',_tab.MAT,,,null());
         PAL_POZ.IL:=PAL_POZ.ILP:=_tab.IL;
         PAL_POZ.TW:=_tab.TW;
         PAL_POZ.JM:=PAL_POZ.M().J;
         PAL_POZ.AKT:='T';
         {? _tab.SC<>''
         || PAL_POZ.C:=exec('FindAndGet','#table','DK',_tab.SC,,"C",0);
            PAL_POZ.DK_C:=exec('FindAndGet','#table','DK',_tab.SC,,"DK_C",null());
            PAL_POZ.SCEAN:=exec('FindAndGet','#table','DK',_tab.SC,,"SCEAN",'');
            PAL_POZ.STATS:=exec('FindAndGet','#table','DK',_tab.SC,,"STATS",null());
            PAL_POZ.SCSQL:=_tab.SC
         ?};
         exec('uzupIDkod','magdok_palety',PAL_POZ);
         PAL_POZ.add(1);
         _tab.next()
      !}
   ?}
?};
PAL.cntx_pop();
_wyn


\oldDel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: usuwa starą/nową paletę
::   WE: _a - paleta ref SQL
::  OLD: \oldDel/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
PAL.cntx_psh();
PAL.clear();
{? PAL.seek(exec('FindAndGet','#table','PAL',_a,,,null()))
|| PAL.del()
?};
PAL.cntx_pop()


\deleteNewPal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: usuwa nowa palete na podstawie podanej
::   WE: _a - paleta
::       _b - paleta stara - ref SQL
::   WY: 1-dodano 0-nie
::  OLD: \deleteNewPal/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
PAL.cntx_psh();
PAL_POZ.cntx_psh();
PAL.clear();
{? PAL.seek(_a)
|| _old:=PAL.ref();
   _new:=exec('FindAndGet','#table','PAL',_b,,,null());
:: przepisujemy pozycje z maski historycznej
   {? _new<>null()
   || PAL_POZ.index('PAL');
      PAL_POZ.prefix(_old);
      {? PAL_POZ.first() || {! |? PAL_POZ.del() !} ?};
      PAL_POZ.use('paleths');
      PAL_POZ.index('PAL');
      PAL_POZ.prefix(_new);
      {? PAL_POZ.first()
      || {!
         |? PAL_POZ.cntx_psh();
            PAL_POZ.use('paletyp');
            PAL_POZ.clear();
            PAL_POZ.PAL:=_old;
            exec('uzupIDkod','magdok_palety',PAL_POZ);
            {? PAL_POZ.add(1) || _wyn:=1 || _wyn:=0 ?};
            PAL_POZ.cntx_pop();
            _wyn & PAL_POZ.del()
         !}
      ?}
   ?}
?};
PAL.cntx_pop();
PAL_POZ.cntx_pop();
_wyn


\repalet
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: depaletyzacja palet
::   WE: _a - ref dokumentu
::       _b - ref palety
::   WY: 1-przepisano 0-jest juz paleta na dokumencie - nieprzepisano
::  OLD: \repalet/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_bufeanl:=EANX.EANL;
_tab:=PAL.sel_aget();
PAL.sel_adel();

VAR_DEL.delete('__repoz','__blkpl','__renew');
__repoz:=tab_tmp(3,'TREE','TREE_REF','galazka'
          ,'LAB','STRING[100]','Etykieta'@
          ,'KTM','STRING[50]',''
          ,'NAZ','STRING[120]',''
          ,'KOD','STRING[30]',''
          ,'SQL','STRING[16]','ref SQL pozycji'
          ,'ILE','REAL',''
          ,'CEN','REAL',''
          ,'TW','DATE',''
          ,'ILP','REAL',''
          ,'JM','STRING[10]',''
          ,'LOK','STRING[16]',''
          ,'NEW','INTEGER',''
          ,'PA2','STRING[16]',''
          ,'POZ','INTEGER',''
          ,'OLD','STRING[16]',''
          ,'SCSQL','STRING[16]',''
          ,'DKC','STRING[16]',''
          ,'STATS','STRING[16]','');
__renew:=tab_tmp(2,'KOD','STRING[30]',''
          ,'KO2','STRING[30]',''
          ,'SQL','STRING[16]',''
          ,'REF','INTEGER','');
__blkpl:=tab_tmp(1,'PAL','STRING[16]','');

PAL.cntx_psh();
PAL_POZ.cntx_psh();
{? ~_tab.size()
|| _tab.clear();
   _tab.blank();
   _tab.REF:=#PAL.ref();
   _tab.add(1)
?};
_errlok:=0;
{? _tab.first()
|| _eanl:=tab_tmp(1,'SQL','STRING[16]',''
           ,'REF','INTEGER','');
   {!
   |? {? (PAL.clear(); PAL.seek(_tab.REF,)) & PAL.STAN<>'N' & PAL.Z='N'
       & {? exec('ilpal2sl','magazyn_stan',PAL.ref())>1 || _errlok+=1; 0 || 1 ?} & PAL.r_lock(1,1,1)
      || __blkpl.clear();
         {? ~__blkpl.find_key($PAL.ref)
         || __blkpl.PAL:=$PAL.ref();
            __blkpl.add(1)
         ?};
         EANX.EANL:=exec('FindInSet','#table','SL','PALALL',PAL.ref(),,"SL.EANL",,,null());
         _eanl.clear();
         {? _eanl.find_key({? EANX.EANL<>null || $EANX.EANL || 'nullnull' ?})
         || _treanl:=_eanl.REF
         || _treanl:=0
         ?};
         {? ~_treanl
         || __repoz.clear();
            __repoz.blank();
            __repoz.TREE:=0;
            __repoz.LAB:='Lokalizacja: '+{? EANX.EANL<>null
                                         || EANX.EANL().KOD+' ('+EANX.EANL().EAN+')'
                                         || '(BRAK LOKALIZACJI)'
                                         ?};
            __repoz.KTM:={? EANX.EANL<>null || EANX.EANL().MG().SYM || '' ?};
            __repoz.SQL:=$EANX.EANL;
            __repoz.KOD:=EANX.EANL().KOD;
            {? __repoz.add(1)
            || _treanl:=__repoz.ref();
               _eanl.clear();
               _eanl.blank();
               _eanl.SQL:={? EANX.EANL<>null || $EANX.EANL || 'nullnull' ?};
               _eanl.REF:=_treanl;
               _eanl.add(1)
            ?}
         ?};
         {? _treanl
         || __repoz.clear();
            __repoz.blank();
            __repoz.TREE:=_treanl;
            __repoz.LAB:='Paleta: '+PAL.KODK+' (auto)';
            __repoz.SQL:=$PAL.ref();
            __repoz.KOD:=PAL.KODK;
            __repoz.POZ:=1;
            {? __repoz.add(1)
            || _tree:=__repoz.ref();
               PAL_POZ.index('PAL');
               PAL_POZ.prefix(PAL.ref());
               {? PAL_POZ.first()
               || {!
                  |? __repoz.clear();
                     __repoz.blank();
                     __repoz.TREE:=_tree;
                     __repoz.LAB:=PAL_POZ.M().KTM;
                     __repoz.KTM:=PAL_POZ.M().KTM;
                     __repoz.NAZ:=PAL_POZ.M().N;
                     __repoz.CEN:=PAL_POZ.C;
                     __repoz.ILE:=PAL_POZ.ILP;
                     __repoz.TW:=PAL_POZ.TW;
                     __repoz.ILP:=PAL_POZ.ILP;
                     __repoz.JM:=PAL_POZ.JM().KOD;
                     __repoz.KOD:=PAL.KODK;
                     __repoz.SQL:=$PAL_POZ.ref();
                     __repoz.POZ:=2;
                     __repoz.OLD:=$PAL.ref();
                     __repoz.SCSQL:=PAL_POZ.SCSQL;
                     __repoz.DKC:=$PAL_POZ.DK_C;
                     __repoz.STATS:=$PAL_POZ.STATS;
                     __repoz.add(1);
                     PAL_POZ.next()
                  !}
               ?}
            ?}
         ?}
      ?};
      _tab.next()
   !};
   {? _errlok
   || FUN.info('Liczba palet nie dodanych do depaletyzacji\n'
       'z powodu występowania na stanie magazynowym na kilku lokalizacjach: %1.'@[form(_errlok,,0,'99')])
   ?}
?};

{? __repoz.size()
||
   TPAL.win_sel('SEL');
   TPAL.index('TYP');
   TPAL.prefix();

   _sel_new:=__renew.mk_sel('Lista palet do przeniesienia'@,'P',,'repoz_new');
   __renew.win_fld(_sel_new,,'KOD',,,30,,1,'');
   __renew.win_act(_sel_new,0,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
   __renew.win_act(_sel_new,0,'Szukaj');
   __renew.win_act(_sel_new,0,'Kolejność');
   __renew.win_sel(_sel_new);

   _sel_poz:=__repoz.mk_sel('Depaletyzacja'@,'P',,'#repoz_sel',,,20,1);
   __repoz.win_fld(_sel_poz,,'LAB',,,30,,1,'');
   __repoz.win_fld(_sel_poz,,'KTM',,,12,,1,'Indeks materiałowy'@);
   __repoz.win_fld(_sel_poz,,'NAZ',,,20,,1,'Nazwa'@);
   __repoz.win_fld(_sel_poz,,'ILE',,,10,3,1,'Ilość'@);
   __repoz.win_fld(_sel_poz,,'CEN',,,10,3,1,'Cena'@);
   __repoz.win_fld(_sel_poz,,'TW',,,-10,,1,'Termin ważności'@);
   __repoz.win_fld(_sel_poz,,'ILP',,,10,3,0,'Pozostało'@);
   __repoz.win_fld(_sel_poz,,'JM',,,5,,1,'jm'@);
   __repoz.win_act(_sel_poz,0,'Formuła','Zwiń/&rozwiń'@@,,,,"exec('zwrw_all','#tree','__repoz','TREE')");
   __repoz.win_act(_sel_poz,0,'Formuła','Popraw/przenieś'@@,,,"exec('poprpal','magdok_palety')",,,1
    ,"exec('poprpal','magdok_palety')");
   __repoz.win_act(_sel_poz,0,'Formuła','Dodaj nową paletę'@@,,,"exec('addnewpl','magdok_palety')",,);
   __repoz.win_act(_sel_poz,0,'Formuła','Prz&ypisz paletę'@@,,,"exec('przyppal','magdok_palety')",,);
   __repoz.win_act(_sel_poz,0,'Formuła','Akceptuj'@@,,,"sel_exit");
   __repoz.win_act(_sel_poz,0,'Rekord',,,,"exec('rekrepoz','magdok_palety')","exec('sprrepoz','magdok_palety')");
   __repoz.win_act(_sel_poz,0,'Szukaj');
   __repoz.win_act(_sel_poz,0,'Kolejność');
   __repoz.tr_fml(_sel_poz,,"{? _a || {? __repoz.TREE=0 || 1 || _a ?} || _a ?}");
   __repoz.win_sel(_sel_poz);

   __repoz.dnd_sel(_sel_poz,,'records.#repoz_sel',"exec('redragon','magdok_palety')");

   {? __repoz.select() & FUN.ask('Czy zatwierdzić depaletyzację?'@)
   || _czydep:=0;
      __repoz.clear();
      __repoz.prefix(0);
      do();
      {? __repoz.first()
      || _dkl:=tab_tmp(4,'MAG','STRING[16]',''
                ,'LOK','STRING[16]',''
                ,'PAL','STRING[16]',''
                ,'PA2','STRING[16]','');
         {!
         |?
::          zmiana zawartosci palety bez reorganizacji
            _treanl:=__repoz.ref();
            _lok:=__repoz.SQL;
            EANX.EANL:=exec('FindAndGet','#table','EANL',_lok,,,null());
            _mag:=$EANX.EANL().MG;
            __repoz.cntx_psh();
            __repoz.clear();
            __repoz.prefix(_treanl);
            {? __repoz.first()
            || {!
               |? _trpal:=__repoz.ref();
                  _new:=__repoz.NEW;
                  _aut:=__repoz.PA2;
                  _sql:=__repoz.SQL;
                  _tpl:={? _aut='' || exec('FindAndGet','#table','PAL',_sql,,"TPAL",null()) || null ?};
                  _deaktyw:=__repoz.POZ=1;
                  __repoz.cntx_psh();
                  __repoz.clear();
                  __repoz.prefix(_trpal);
                  {? __repoz.first() & {? __repoz.POZ=2 || exec('czydepal','magdok_palety') || 1 ?}
                  || _czydep+=1;
                     _deaktyw+=1;
                     _refpal:={? _new
                              || exec('FindAndGet','#table','PAL',_sql,,,null())
                              |? _aut<>''
                              || exec('FindAndGet','#table','PAL',_aut,,,null())
                              || null
                              ?};
                     {!
                     |? {? _new | (~_new & __repoz.ILP>0)
                        || {? ~_new & _refpal=null
                           ||
::                            zakladamy jedna nowa palete o typie zgodnym z wyjsciowa paleta
                              PAL.clear();
                              PAL.blank();
                              PAL.AKT:='T';
                              PAL.STAN:='T';
                              {? PAL.add()
                              || {? PAL.r_lock(1,1,1)
                                 || __blkpl.clear();
                                    {? ~__blkpl.find_key($PAL.ref())
                                    || __blkpl.blank();
                                       __blkpl.PAL:=$PAL.ref();
                                       __blkpl.add(1)
                                    ?}
                                 ?};
                                 _refpal:=PAL.ref();
                                 PAL.KODK:=exec('kodk_pal','magdok_palety');
                                 PAL.TPAL:=_tpl;
                                 PAL.STAN:='N';
                                 PAL.put()
                              ?}
                           ?};
                           {? _refpal<>null
                           || {? _lok<>''
                              || _dkl.clear();
                                 {? ~_dkl.find_key(_mag,_lok,__repoz.OLD,'null')
                                 || _dkl.blank();
                                    _dkl.MAG:=_mag;
                                    _dkl.LOK:=_lok;
                                    _dkl.PAL:=__repoz.OLD;
                                    _dkl.PA2:='null';
                                    _dkl.add(1)
                                 ?};
                                 _dkl.clear();
                                 {? ~_dkl.find_key(_mag,_lok,'null',$_refpal)
                                 || _dkl.blank();
                                    _dkl.MAG:=_mag;
                                    _dkl.LOK:=_lok;
                                    _dkl.PAL:='null';
                                    _dkl.PA2:=$_refpal;
                                    _dkl.add(1)
                                 ?}
                              ?};
                              PAL_POZ.clear();
                              PAL_POZ.blank();
                              PAL_POZ.PAL:=_refpal;
                              PAL_POZ.M:=exec('FindInSet','#table','M','MATKTM',__repoz.KTM,__repoz.KTM);
                              PAL_POZ.IL:=PAL_POZ.ILP:=__repoz.ILP;
                              PAL_POZ.C:=__repoz.CEN;
                              PAL_POZ.TW:=__repoz.TW;
                              PAL_POZ.JM:=PAL_POZ.M().J;
                              PAL_POZ.AKT:='N';
                              PAL_POZ.RSQL:=__repoz.OLD;
                              PAL_POZ.SCSQL:=__repoz.SCSQL;
                              PAL_POZ.DK_C:=exec('FindAndGet','#table','DK_C',__repoz.DKC,,,null());
                              PAL_POZ.STATS:=exec('FindAndGet','#table','STATS',__repoz.STATS,,,null());
                              exec('uzupIDkod','magdok_palety',PAL_POZ);
                              PAL_POZ.add(1)
                           ?}
                        ?};
                        __repoz.next()
                     !};
                     {? _refpal<>null & _lok<>''
                     || PAL.cntx_psh();
                        PAL.clear();
                        {? PAL.seek(_refpal)
                        || PAL.STAN:='T';
                           PAL.put(1);
                           exec('akcppal','magdok_palety',PAL.ref())
                        ?};
                        PAL.cntx_pop()
                     ?}
                  ?};
                  __repoz.cntx_pop();
::                zmiana znacznika aktywacji danej depaletyzowanej palety
                  {? _deaktyw=2
                  || PAL.cntx_psh();
                     PAL.clear();
                     {? PAL.seek(__repoz.SQL) || exec('aktdepal','magdok_palety',0,1,1) ?};
                     PAL.cntx_pop()
                  ?};
                  __repoz.next()
               !}
            ?};
            __repoz.cntx_pop();
            __repoz.next()
         !};
::       generacja reorganizacji w przypadku palet na lokalizacjach
         _dkl.clear();
         {? _dkl.size()
         || _magi:=sql('select distinct :_a.MAG from :_a',_dkl);
           _magi.clear();
            {? _magi.first()
            || _i:=0;
               {!
               |? DK_LN.clear();
                  DK_LN.blank();
                  _i+=0.033333;
                  DK_LN.TM+=_i;
                  DK_LN.MG:=exec('FindAndGet','#table','MG',_magi.MAG,,,null());
                  DK_LN.RODZ:='D';
                  {? ~DK_LN.add()
                  || undo()
                  || _dkl.clear();
                     _dkl.prefix(_magi.MAG);
                     {? _dkl.first()
                     || {!
                        |? _lok:=exec('FindAndGet','#table','EANL',_dkl.LOK,,,null());
                           _pal:={? _dkl.PAL='null' || null || exec('FindAndGet','#table','PAL',_dkl.PAL,,,null()) ?};
                           _pa2:={? _dkl.PA2='null' || null || exec('FindAndGet','#table','PAL',_dkl.PA2,,,null()) ?};
                           PAL.cntx_psh();
                           {? _pal<>null
                           || PAL.clear();
                              {? PAL.seek(_pal)
                              || {? PAL.AKT='N'
                                 || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
                                 || PAL_POZ.use('paletyp')
                                 ?};
                                 PAL_POZ.index('PAL');
                                 PAL_POZ.prefix(PAL.ref());
                                 {? PAL_POZ.first()
                                 || {!
                                    |? exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),_lok,_lok,PAL_POZ.TW,PAL_POZ.TW
                                        ,PAL_POZ.ILP,DK_LN.MG,PAL_POZ.M,0,,PAL.ref(),null);
                                       PAL_POZ.next()
                                    !}
                                 ?};
                                 PAL_POZ.use('paletyp')
                              ?}
                           ?};
                           {? _pa2<>null
                           || PAL.clear();
                              {? PAL.seek(_pa2)
                              || {? PAL.AKT='N'
                                 || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
                                 || PAL_POZ.use('paletyp')
                                 ?};
                                 PAL_POZ.index('PAL');
                                 PAL_POZ.prefix(PAL.ref());
                                 {? PAL_POZ.first()
                                 || {!
                                    |? exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),_lok,_lok,PAL_POZ.TW,PAL_POZ.TW
                                        ,PAL_POZ.ILP,DK_LN.MG,PAL_POZ.M,0,,null,PAL.ref());
                                       PAL_POZ.next()
                                    !}
                                 ?};
                                 PAL_POZ.use('paletyp')
                              ?}
                           ?};
                           PAL.cntx_pop();
                           _dkl.next()
                        !}
                     ?};
                     exec('akcreorg','magdok_wymiary',DK_LN.ref(),0)
                  ?};
                  _magi.next()
               !}
            ?}
         ?}
      ?};
      end();
      {? ~_czydep
      || FUN.info('Żadna z wybranych palet nie została depaletyzowana.'@)
      ?}
   ?};
   __repoz.dnd_sel(_sel_poz,,'records.#repoz_sel',"")
|? ~_errlok
|| FUN.info('Brak zakceptowanych palet.\nRepaletyzacja niemożliwa.'@)
?};

:: odblokowanie palet + aktualizacja znacznikow
__blkpl.clear();
{? __blkpl.size() & __blkpl.first()
|| {!
   |? {? (PAL.clear(); PAL.seek(__blkpl.PAL))
      || exec('znacznik','magdok_palety',PAL.ref());
         exec('ktm2pal','magdok_palety',0);
         PAL.r_unlock()
      ?};
      __blkpl.next()
   !}
?};

PAL.cntx_pop();
PAL_POZ.cntx_pop();
VAR_DEL.delete('__repoz','__blkpl','__renew');
EANX.EANL:=_bufeanl;
{? PAL.f_active()>0 || PAL.f_rfresh() ?};
~~


\poprpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: poprawia pozycje
::   WE: [_a] - kod nowej palety
::       [_b] - tabela zaznaczen
::  OLD: \poprpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_dragon:=0;

{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
{? _>=2
|| {? type_of(_b)<>118
   || _tab:=__repoz.sel_aget();
      __repoz.sel_adel()
   || _dragon:=1;
      _tab:=_b
   ?}
|| _tab:=__repoz.sel_aget();
   __repoz.sel_adel()
?};

__repoz.cntx_psh();
_tab.clear();
{? _tab.size()
|| {!
   |? {? (__repoz.clear(); __repoz.seek(_tab.REF,))
      || {? __repoz.POZ=2
         || _tab.next()
         || _tab.del()
         ?}
      || _tab.next()
      ?}
   !}
|| {? __repoz.POZ=1
   || __repoz.clear();
      __repoz.prefix(__repoz.TREE);
      {? __repoz.first()
      || {!
         |? _tab.blank;
            _tab.REF:=#__repoz.ref();
            _tab.add(1);
            __repoz.next()
         !}
      ?}
   |? __repoz.POZ=2
   || _tab.blank;
      _tab.REF:=#__repoz.ref();
      _tab.add(1)
   ?}
?};

_tab.clear();
EANX.ONLYPAL:=_tab.size>1;

{? _dragon
|| EANX.ZPAL:='';
   EANX.NPAL:=_a;
   EANX.ILNA:=0;
   EANX.ONLYPAL:=1
|? ~EANX.ONLYPAL
|| EANX.ILNA:=__repoz.ILP;
   EANX.ZPAL:=__repoz.KOD
|| EANX.ILNA:=0;
   EANX.ZPAL:=''
?};
EANX.win_edit('REPAL');
{? _dragon | EANX.edit("exec('sprrpal','magdok_palety')")
|| __renew.clear();
   {? __renew.find_key(EANX.NPAL,EANX.NPAL) || _new:=__renew.REF; _kod:=__renew.KOD || _new:=0 ?};
   _tab.clear();
   {? _new & _tab.first()
   || {!
      |? {? (__repoz.clear(); __repoz.seek(_tab.REF,)) & __repoz.ILP>0
         || {? EANX.ONLYPAL
            || _ilp:=__repoz.ILP;
               __repoz.ILP:=0;
               __repoz.put(1)
            || _ilp:=EANX.ILDO;
               __repoz.ILP-=_ilp;
               __repoz.put(1)
            ?};
            __repoz.ILE:=__repoz.ILP:=_ilp;
            __repoz.KOD:=_kod;
            __repoz.TREE:=_new;
            __repoz.POZ:=4;
            __repoz.add(1)
         ?};
         _tab.next()
      !}
   ?}
?};
__repoz.cntx_pop()


\sprrpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza pozycje do repaletyzacji
::  OLD: \sprrpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~EANX.ONLYPAL & EANX.ILDO<=0
|| FUN.info('Należy podać ilość do przeniesienia.'@);
   'ILDO'
|? ~EANX.ONLYPAL & EANX.ILDO>EANX.ILNA
|| FUN.info('Ilość do przeniesienia nie może być większa od ilość na palecie.'@);
   'ILDO'
|? form(EANX.NPAL)='' | (__renew.clear(); ~__renew.find_key(EANX.NPAL,EANX.NPAL))
|| FUN.info('Należy podać kod kreskowy nowej palety.'@);
   'NPAL'
|| ''
?}


\addnewpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: dodanie nowej palety
::  OLD: \addnewpl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _opc:=FUN.choice('Wybierz opcję dołączenia nowej palety.'@,1,'Automatycznie'@,'Z listy'@)
|| {? _opc=1
   || {? TPAL.select()
      || PAL.cntx_psh();
         PAL.clear();
         PAL.blank();
         PAL.AKT:='T';
         {? PAL.add() & PAL.r_lock(1,1,1)
         || __blkpl.clear();
            {? ~__blkpl.find_key($PAL.ref())
            || __blkpl.blank();
               __blkpl.PAL:=$PAL.ref();
               __blkpl.add(1)
            ?};
            PAL.blank();
            PAL.KODK:=exec('kodk_pal','magdok_palety');
            PAL.TPAL:=TPAL.ref();
            PAL.STAN:='N';
            {? PAL.put()
            || _tree:={? ~__repoz.TREE || __repoz.ref() || __repoz.TREE ?};
               __repoz.cntx_psh();
               __repoz.clear();
               __repoz.blank();
               __repoz.TREE:=_tree;
               __repoz.LAB:='Paleta: '+PAL.KODK+' (nowa)';
               __repoz.SQL:=$PAL.ref();
               __repoz.KOD:=PAL.KODK;
               __repoz.POZ:=3;
               __repoz.NEW:=1;
               {? __repoz.add(1)
               || __renew.clear();
                  __renew.KOD:=__renew.KO2:=PAL.KODK;
                  __renew.SQL:=$PAL.ref();
                  __renew.REF:=__repoz.ref();
                  __renew.add(1)
               ?};
               __repoz.cntx_pop()
            ?}
         ?};
         PAL.cntx_pop()
      ?}
   |? _opc=2
   || _niet:=0;
      _pozy:=1;
      PAL.cntx_psh();
      PAL.win_sel('SLO');
      PAL.index('STAN');
      PAL.prefix(ST.ODDZ,'T','N');
      {? PAL.select() & (_pozy:=exec('FindInSet','#table','PAL_POZ','PAL',PAL.ref())=null) & PAL.r_lock(1,1,1)
      || __blkpl.clear();
         {? ~__blkpl.find_key($PAL.ref())
         || __blkpl.blank();
            __blkpl.PAL:=$PAL.ref();
            __blkpl.add(1);
            _tree:={? ~__repoz.TREE || __repoz.ref() || __repoz.TREE ?};
            __repoz.cntx_psh();
            __repoz.clear();
            __repoz.blank();
            __repoz.TREE:=_tree;
            __repoz.LAB:='Paleta: '+PAL.KODK+' (nowa)';
            __repoz.KOD:=PAL.KODK;
            __repoz.NEW:=1;
            __repoz.POZ:=3;
            __repoz.SQL:=$PAL.ref();
            {? __repoz.add(1)
            || __renew.clear();
               __renew.KOD:=__renew.KO2:=PAL.KODK;
               __renew.SQL:=$PAL.ref();
               __renew.REF:=__repoz.ref();
               __renew.add(1)
            ?};
            __repoz.cntx_pop()
         || _niet+=1
         ?}
      |? ~_pozy
      || FUN.info('Nie dołączono palety.\nPaleta posiada pozycje.'@)
      ?};
      PAL.cntx_pop();
      {? _niet
      || FUN.info('Nie dołączono palety.\nPaleta znajduję się już na liście depaletyzacji.'@)
      ?}
   ?}
?}


\przyppal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przypisanie nowej palety
::  OLD: \przyppal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~__repoz.NEW & FUN.ask('Czy przypisać nową paletę?'@)
|| PAL.cntx_psh();
   PAL.win_sel('SLO');
   PAL.index('STAN');
   PAL.prefix(ST.ODDZ,'T','N');
   {? PAL.select() & PAL.r_lock(1,1,1)
   || __blkpl.clear();
      {? ~__blkpl.find_key($PAL.ref())
      || __blkpl.blank();
         __blkpl.PAL:=$PAL.ref();
         __blkpl.add(1)
      ?};
      _tree:={? ~__repoz.TREE || __repoz.ref() || __repoz.TREE ?};
      __repoz.cntx_psh();
      __repoz.clear();
      __repoz.TREE:=_tree;
      __repoz.LAB:='Paleta: '+__repoz.KOD+' ('+PAL.KODK+')';
      __repoz.NEW:=0;
      __repoz.PA2:=$PAL.ref();
      __repoz.put(1);
      __repoz.cntx_pop()
   ?};
   PAL.cntx_pop()
?}


\rekrepoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: podswietla rekordy do przeniesienia
::  OLD: \rekrepoz/mws.fml
::----------------------------------------------------------------------------------------------------------------------
:: wylaczanie akcji w zaleznosci od poziomu drzewa
{? __repoz.POZ=0 | __repoz.POZ=3
|| __repoz.actions(__repoz.win_sel('?'),'PY',,1)
|? __repoz.POZ=1
|| __repoz.actions(__repoz.win_sel('?'),'P',,1)
|? __repoz.POZ=2
|| __repoz.actions(__repoz.win_sel('?'),'DY',,1)
|? __repoz.POZ=4
|| __repoz.actions(__repoz.win_sel('?'),'DYP',,1)
?};
__repoz.ILP>0


\sprrepoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza poprawnosc danych
::  OLD: \sprrepoz/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? __repoz.ILP>__repoz.ILE
|| FUN.info('Ilość do przeniesienia nie może być większa od '@+form(__repoz.IL,,3)+'.');
   'ILP'
|? __repoz.ILP<0
|| FUN.info('Ilość do przeniesienia nie może być mniejsza od zera.'@);
   'ILP'
|| ''
?}


\redragon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: D&D dla depaletyzacji
::  OLD: \redragon/mws.fml
::----------------------------------------------------------------------------------------------------------------------
__repoz.cntx_psh();
_ref:=dnd_info('dest_record');
__repoz.clear();
{? __repoz.seek(_ref) & __repoz.POZ=3
|| _korzen:=__repoz.TREE;
   _kod:=__repoz.KOD;
   _zaz:=dnd_info('dropped_records');
   {? _zaz.size() & _zaz.first()
   || {!
      |? {? (__repoz.clear(); __repoz.seek(_zaz.REF,))
          & {? __repoz.POZ=2
            || __repoz.clear(); {? __repoz.seek(__repoz.TREE,) || __repoz.TREE=_korzen || 0 ?}
            || 0
            ?}
         || _zaz.next()
         || _zaz.del()
         ?}
      !}
   ?};
   exec('poprpal','magdok_palety',_kod,_zaz)
?};
__repoz.cntx_pop();
~~


\czydepal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza czy byl ruch na pozycjach palety - chociaz jednej
::   WY: 1-byl 0-nie
::  OLD: \czydepal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? __repoz.first()
|| {!
   |? _wyn:=__repoz.ILE<>__repoz.ILP;
      ~_wyn & __repoz.next()
   !};
   __repoz.first()
?};
_wyn


\pw_ilna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietleniem ilosci do depaletyzacji
::  OLD: \pw_ilna/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANX.ONLYPAL
|| exec('findfnv','#color')
|| ''
?}


\pr_ilna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja ilosci do repaletyzacji
::  OLD: \pr_ilna/mws.fml
::----------------------------------------------------------------------------------------------------------------------
~EANX.ONLYPAL


\f3_npal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: klawisz wyboru nowej palety
::  OLD: \f3_npal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
__renew.clear();
{? __renew.select() || EANX.NPAL:=__renew.KOD ?};
~~


\po_npal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po polu nowa paleta
::  OLD: \po_npal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? form(EANX.NPAL)<>'' & (__renew.clear(); ~__renew.find_key(EANX.NPAL,EANX.NPAL))
|| __renew.clear();
   {? __renew.find_key(EANX.NPAL) || EANX.NPAL:=__renew.KOD ?}
?};
1


\redepal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wycofanie depaletyzacji w przypadku braku ruchu na paletach
::  OLD: \redepal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAL.AKT='N' & PAL.D='T'
||
:: sprawdzenie wykorzystania palet, ktore zostaly utworzone na podstawie danej palety
   _ref_old:=PAL.ref();

:: tabela palet zdepaletyzowanych
   _depal:=tab_tmp(1,'PAL','STRING[16]','');
   _depal.blank();
   _depal.PAL:=$PAL.ref();
   _depal.add(1);
:: tabela palet powstalych na skutek depaletyzacji
   _tab:=sql('select distinct PAL_POZ.PAL PAL from @PAL_POZ where PAL_POZ.RSQL=\':_a\' order by 1',$PAL.ref());
   PAL.cntx_psh();
   PAL_POZ.cntx_psh();
:: uzupelnienie palet depaletyzowanych i po depaletyzacji
   {? _tab.size() & _tab.first()
   || {!
      |? _new:=0;
         {? (PAL.clear(); PAL.seek(_tab.PAL))
         || {? ~exec('niezrozp','magdok_palety',_ref_old,PAL.ref())
            || {? PAL.AKT='N' || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99')) || PAL_POZ.use('paletyp') ?};
               PAL_POZ.index('PAL');
               PAL_POZ.prefix(PAL.ref());
               {? PAL_POZ.first()
               || {!
                  |? _depal.clear();
                     {? PAL_POZ.RSQL<>'' & ~_depal.find_key(PAL_POZ.RSQL)
                     || _depal.blank();
                        _depal.PAL:=PAL_POZ.RSQL;
                        _depal.add(1);
                        _buf:=sql('select distinct PAL_POZ.PAL PAL from @PAL_POZ where PAL_POZ.RSQL=\':_a\' order by 1'
                               ,PAL_POZ.RSQL);
                        {? _buf.size() & _buf.first()
                        || {!
                           |? _tab.clear();
                              {? ~_tab.find_key(_buf.PAL)
                              || _tab.blank();
                                 _tab.PAL:=_buf.PAL;
                                 _tab.add(1);
                                 _new:=1
                              ?};
                              _buf.next()
                           !}
                        ?};
                        obj_del(_buf)
                     ?};
                     PAL_POZ.next()
                  !}
               ?}
            || _new:=-1
            ?}
         ?};
         {? _new<0 || _tab.del() |? _new>0 || _tab.first() || _tab.next() ?}
      !}
   ?};

   _ok:=1;
   _inne:=0;

   {? _tab.size() & _tab.first()
   ||
      _dk_ln:=null;
      _dklnb:=0;
      {!
      |? {? (PAL.clear(); PAL.seek(_tab.PAL))
         ||
::          poszukuje reorganizacji
            {? ~_dklnb
            || _dk_ln:=exec('finddkln','magdok_palety',_ref_old,ST.ODDZ+form(PAL.AR-2000,-2,0,'99'));
               _dklnb:=1
            ?};
::          sprawdzenie powiazan danej palety
            _inne:=PAL.count()-exec('lpow_pal','magdok_palety',PAL.ref());
            {? _inne || _ok:=0 ?};
::          sprawdzenie czy paleta nie byla depaletyzowana
            {? _ok
            || _buf:=sql('select distinct PAL_POZ.PAL from @PAL_POZ where PAL_POZ.RSQL=\':_a\' ',$PAL.ref());
               {? _buf.size() || _ok:=0 ?};
               obj_del(_buf)
            ?}
         ||
::          nieznaleziona paleta
            _ok:=0
         ?};
         _ok & _tab.next()
      !}
   || _dk_ln:=null
   ?};
   _czydod:=_depal.size()>1;
   {? ~_ok
   || FUN.info('Palety powstałe na podstawie depaletyzacji danej palety\n'
       'zostały wykorzystane w systemie (dokumenty, depaletyzacja).\n'
       'Wycofanie depaletyzacji niemożliwe.'@)
   |? _ok
     & {? _czydod
       || _opc:=FUN.choice({? _dk_ln<>null
                           || 'Uwaga. Depaletyzacja wybranej palety jest powiązana z depaletyzacją innych palet.\n'
                              'Czy wycofać depaletyzację wszystkich powiązanych palet?\n'
                              'Wycofanie depaletyzacji powoduję '
                              'usunięcie reorganizacji i '
                              'zmianę stanu palet powstałych na jej podstawie.\n'
                              'Należy wybrać jedną z opcji zmiany stanu palet powstałych na podstawie depaletyzacji:'@
                           || 'Uwaga. Depaletyzacja wybranej palety jest powiązana z depaletyzacją innych palet.\n'
                              'Czy wycofać depaletyzację wszystkich powiązanych palet?\n'
                              'Wycofanie depaletyzacji powoduję '
                              'zmianę stanu palet powstałych na jej podstawie.\n'
                              'Należy wybrać jedną z opcji zmiany stanu palet powstałych na podstawie depaletyzacji:'@ ?}
                  ,,'Usunięcie palet'@,'Usunięcie &pozycji palet'@,'Usunięcie po&wiązań palet'@)
       || _opc:=FUN.choice({? _dk_ln<>null
                           || 'Czy wycofać depaletyzację?\n'
                              'Wycofanie depaletyzacji powoduję '
                              'usunięcie reorganizacji i '
                              'zmianę stanu palet powstałych na jej podstawie.\n'
                              'Należy wybrać jedną z opcji zmiany stanu palet powstałych na podstawie depaletyzacji:'@
                           || 'Czy wycofać depaletyzację?\n'
                              'Wycofanie depaletyzacji powoduję '
                              'zmianę stanu palet powstałych na jej podstawie.\n'
                              'Należy wybrać jedną z opcji zmiany stanu palet powstałych na podstawie depaletyzacji:'@ ?}
                 ,,'Usunięcie palet'@,'Usunięcie &pozycji palet'@,'Usunięcie po&wiązań palet'@)
       ?}
   ||
::    wycofanie reorganizacji i usuniecie reorganizacji
      do();
      exec('ini_kom','#message','Informacja o wycofaniu depaletyzacji'@);
      {? _dk_ln<>null
      || _akt:=ST.ODDZ+form(ST.AR-2000,-2,,'99');
         _msk:=ref_name(_dk_ln)+3;
         DK_LN.cntx_psh();
         DK_L.cntx_psh();
         {? _akt<>_msk || exec('mag_open','open_tab',1+_msk,_msk+2) ?};
         DK_LN.clear();
         {? DK_LN.seek(_dk_ln)
         || exec('wycreorg','magdok_wymiary',1);
            exec('deldk_ln','magdok_wymiary',1);
            _txt:='Wycofano i usunięto reorganizację magazynu'@;
            exec('add_kom','#message',_txt,7,'Wycofanie depaletyzacji'@)
         ?};
         {? _akt<>_msk || exec('mag_open','open_tab',1+_akt,_akt+2) ?};
         DK_LN.cntx_pop();
         DK_L.cntx_pop()
      ?};
::    usuniecie powstalych na podstawie depaletyzacji
      {? _tab.size()
      || _tab.clear();
         {? _tab.first()
         || {!
            |? _palk:=exec('FindAndGet','#table','PAL',_tab.PAL,,"KODK",'');
               exec('denewpal','magdok_palety',_tab.PAL,_opc);
               _txt:={? _opc=1 || 'Usunięto paletę: '@
                     |? _opc=2 || 'Usunięto pozycję palety: '@
                     |? _opc=3 || 'Usunięto powiązania do danej palety: '@
                     || ''
                     ?}+_palk;
               exec('add_kom','#message',_txt,7,'Wycofanie depaletyzacji'@);
               _tab.next()
            !}
         ?}
      ?};
::    zmiana znacznika depaletyzacji dla palet depaletyzaowanych
      _depal.clear();
      {? _depal.first()
      || {!
         |? {? (PAL.clear(); PAL.seek(_depal.PAL)) & PAL.r_lock(1,1,1)
            || PAL.D:='N';
               PAL.put(1);
               _txt:='Usunięto znacznik depaletyzacji palety: %1'@[PAL.KODK];
               exec('add_kom','#message',_txt,7,'Wycofanie depaletyzacji'@);
               PAL.r_unlock
            || undo()
            ?};
            _tab.next()
         !}
      ?};
      end();
      _txt:='Uwaga. Zmiana znacznika depaletyzacja nie zmienia znacznika aktywności palety.'@;
      exec('add_kom','#message',_txt,4,'Wycofanie depaletyzacji'@);
      exec('end_kom','#message')
   ?};
   PAL.cntx_pop();
   PAL_POZ.cntx_pop();
   obj_del(_tab);
   obj_del(_depal)
|| FUN.info('Paleta nie była depaletyzowna.'@)
?}


\niezrozp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy dana paleta nie byla rozpakowaniem wejsciowej
::   WE: _a - paleta wejciowa
::       _b - dana paleta
::   WY: 1-tak 0-nie
::  OLD: \niezrozp/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
PAL.cntx_psh();
:: dokumenty i reorganizacje
_dok:=sql('select distinct
            ND.REFERENCE DOKUM,
            DK_LN.REFERENCE REORG
           from @DK_L
            left join @DK
            left join @ND
            left join @DK_LN
           where DK_L.ZPALET=2 and DK_L.PAL=:_a and DK_L.PALDO=:_b ',_a,_b);
PAL.cntx_pop();
_wyn:=_dok.size()>0;
obj_del(_dok);
_wyn


\finddkln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: szuka reorganizacji
::   WE: _a - ref palety
::       _b - maska poszukiwan
::   WY: ref DK_LN-a
::  OLD: \finddkln/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_akt:=ST.ODDZ+form(ST.AR-2000,-2,,'99');
DK_LN.cntx_psh();
DK_L.cntx_psh();
exec('mag_open','open_tab',1+_b,_b+2);
_wyn:=exec('FindInSet','#table','DK_L','PAL',_a,'D',"DK_L.DK_LN",,,null());
exec('mag_open','open_tab',1+_akt,_akt+2);
DK_LN.cntx_pop();
DK_L.cntx_pop();
_wyn


\lpow_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: zwraca liczbe powiazan z dana paleta
::   WE: _a - ref palety
::  OLD: \lpow_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
PAL.cntx_psh();
PAL_POZ.cntx_psh();
DK_L.cntx_psh();
SL.cntx_psh();
PAL.clear;
{? PAL.seek(_a)
|| {? PAL.AKT='N' || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99')) || PAL_POZ.use('paletyp') ?};
   PAL_POZ.index('PAL');
   PAL_POZ.prefix(_a);
   _wyn+=PAL_POZ.size();
   PAL_POZ.use('paletyp');

   DK_L.index('PAL');
   DK_L.prefix('D',_a);
   _wyn+=DK_L.size();

   DK_L.index('PALDO');
   DK_L.prefix('D',_a);
   _wyn+=DK_L.size();

   SL.index('PALALL');
   SL.prefix(_a);
   _wyn+=SL.size()

?};
PAL.cntx_pop();
PAL_POZ.cntx_pop();
DK_L.cntx_pop();
SL.cntx_pop();
_wyn


\denewpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: zmienia stan danej palety
::   WE: _a - ref SQL-owy palety
::       _b - opcja 1-usuniecie palety 2-usuniecie pozycji 3-zmiana powiazan
::  OLD: \denewpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
PAL.clear();
{? PAL.seek(_a) & PAL.r_lock(1,1,1)
|| exec('znacznik','magdok_palety',PAL.ref());
   {? PAL.AKT='N'
   || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
   || PAL_POZ.use('paletyp')
   ?};
   {? _b=1
   || exec('delepalp','magdok_palety',PAL.ref());
      PAL.del()
   || PAL.STAN:='N';
      PAL.put(1);
      {? _b=2
      || exec('delepalp','magdok_palety',PAL.ref())
      || exec('akcppal','magdok_palety',PAL.ref(),1)
      ?}
   ?};
   PAL.r_unlock();
   PAL_POZ.use('paletyp')
|| undo()
?}


\rrozppal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: rozpakowanie palety na reorganizacji
::  OLD: \rrozppal/mws.fml
::----------------------------------------------------------------------------------------------------------------------

exec('komropal','magdok_wymiary',DK_LN.ref(),2);
M.index('ARODZ');
M.prefix('T','T');
M.btn_sopt('MPAL','PALETY','state=grayed');
M.win_sel('GRPWYR');
M.select()


\zwrippal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: zwraca ilosc na danej pozycji palety
::       (zwieksza to o ilosci wyslane na urzadzenie mobilne reorganizacja - rozpakowanie)
::   WE: [_a] 1-ma uwzgledniac rowniez zamkniete operacje 0(domyslnie)-nie
::  OLD: \zwrippal/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_wyn:=PAL_POZ.ILP;
_mat:=PAL_POZ.M;
_pal:=PAL_POZ.PAL;

{? PAL_POZ.ILP<PAL_POZ.IL
|| PAL.cntx_psh();
   PAL_POZ.cntx_psh();
   EANN.cntx_psh();
   EANP.cntx_psh();

   EANP.index('TYP');
   EANP.prefix('R');
   {? EANP.first()
   || {!
      |? {? (_a | EANP.EANN().STAN<>'Z') & (5+EANP.EANN().REFSQL)='dokln' & EANP.ZPALET=2 & EANP.PAL=_pal & EANP.M=_mat
         || _wyn+=EANP.IL
         ?};
         EANP.next()
      !}
   ?};

   PAL.cntx_pop();
   PAL_POZ.cntx_pop();
   EANN.cntx_pop();
   EANP.cntx_pop()
?};
{? _wyn>PAL_POZ.IL || _wyn:=PAL_POZ.IL ?};

_wyn


\czysapal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy na danym dodkumencie sa calutkie palety
::   WE: _a - ref ND
::   WY: 1-tak 0-nie
::  OLD: \czysapal/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;

ND.cntx_psh();
DK_L.cntx_psh();
DK.cntx_psh();
DK_L.index('CZYPAL');
DK_L.prefix(_a);
{? DK_L.first()
|| {!
   |? _wyn:=DK_L.ZPALET<>2;
      ~_wyn & DK_L.next()
   !}
?};
ND.cntx_pop();
DK_L.cntx_pop();
DK.cntx_pop();
_wyn


\aktywpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: aktywuje podana palete
::   WE: _a - ref pal
::       [_b] - komunikaty
::  OLD: \aktywpal/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};

PAL.cntx_psh();
PAL.clear();
{? PAL.seek(_a) & PAL.AKT<>'T' || exec('aktdepal','magdok_palety',1,_b) ?};
PAL.cntx_pop();
~~


\findmpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: poszukuje wolnej lokalizacji dla danej palety
::   WE: _a - magazyn
::       _b - paleta
::       _c - kontrahent
::       [_d] - tabela danych
::       [_e] - czy reorganizacja
::   WY: tabela danych
::  OLD: \findmpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_dotab:=1;
{? _>=4 || {? type_of(_d)<>118 || _dotab:=0 ?} || _dotab:=0 ?};
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};

_wyn:={? _dotab
      || _d.clear();
         {? _d.first() || {! |? _d.del() !} ?};
         _d
      || tab_tmp(1,'LOK','STRING[30]','','ILE','REAL','')
      ?};

_beer_mg:=BEER.MG;
_domlok:=BEER.MG().EANL().KOD;
BEER.MG:=_beer_mg;

PAL.cntx_psh();
PAL_POZ.cntx_psh();
PAL.clear();
{? PAL.seek(_b)
|| _palpoz:=tab_tmp(1,'MAT','STRING[16]',''
             ,'ILE','REAL','');
   {? PAL.AKT='N' || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99')) || PAL_POZ.use('paletyp') ?};
   PAL_POZ.index('PAL');
   PAL_POZ.prefix(_b);
   {? PAL_POZ.first()
   || {!
      |? _palpoz.clear();
         {? _palpoz.find_key($PAL_POZ.M)
         || _palpoz.ILE+=PAL_POZ.ILP;
            _palpoz.put(1)
         || _palpoz.blank();
            _palpoz.MAT:=$PAL_POZ.M;
            _palpoz.ILE:=PAL_POZ.ILP;
            _palpoz.add(1)
         ?};
         PAL_POZ.next()
      !}
   ?};
   PAL_POZ.use('paletyp');
   _ndx:=_palpoz.ndx_tmp('',0,'ILE',,1,'MAT',,0);
   _palpoz.index(_ndx);
   {? _palpoz.first()
   || {!
      |? _tab:=exec('findmlok','magdok_wymiary',_a
                    ,exec('FindAndGet','#table','M',_palpoz.MAT,,,null()),_palpoz.ILE,_c,);
         _tab.clear();
         {? _tab.first()
         || _czynxt:=_palpoz.next();
            {? (~_e | (_e & _czynxt))  & _tab.LOK=_domlok
            || obj_del(_tab);
               _czynxt
            || _tab.clear;
               {? _tab.first()
               || {!
                  |? _wyn.clear();
                     _wyn.blank();
                     _wyn.LOK:=_tab.LOK;
                     _wyn.ILE:=_tab.ILE;
                     _wyn.add(1);
                     _tab.next()
                  !}
               ?};
               obj_del(_tab);
               0
            ?}
         || _palpoz.next()
         ?}
      !}
   || _wyn.clear();
      _wyn.blank();
      _wyn.LOK:=$BEER.MG().EANL;
      _wyn.ILE:=1;
      _wyn.add(1)
   ?};
   obj_del(_palpoz)
?};
PAL.cntx_pop();
PAL_POZ.cntx_pop();
_wyn


\prgrppal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wejście w zakładkę palety - okienka grupowego
::----------------------------------------------------------------------------------------------------------------------
:: ikonki dla pól
exec('eanx_wys','okienka');
POMOC.RODZ:='T';
ATR.MJS:='PAL_POZ';
ZAKR.AKT:='T';
PAL.f_clear();
PAL.win_sel('GRP');
PAL.index('AKT');
PAL.prefix(ST.ODDZ,'N',ZAKR.AKT);
_act:=PAL.actions('SEL','ZWE(AMW):E(AMW)');
EANX.WHERE:='D';
M.win_dict('WER_S');
M.win_sel('WER_S');
~~


\utwpalet
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: tworzy palete na podstawie pozycji z czytnika
::   WE: _a - ref EANN lub null w przypadku podania drugiego parametru
::       [_b] - tabela zaznaczen
::       [_c] - 0-pole PAL(domyslnie) 1-pole PALDO
::   WY: 1-utworzono palety 0-nie utworzono palet
::  OLD: \utwpalet/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};

_wyn:=0;
_pal:=tab_tmp(1,'SQL','STRING[16]','');

{? _a<>null
|| _buf:=tab_tmp(1,'REF','INTEGER','');
   _buf.clear();
   _buf.blank();
   _buf.REF:=#_a;
   _buf.add(1)
|| _buf:=_b
?};

TPAL.win_sel('SEL');
TPAL.index('TYP');
TPAL.prefix();

_pyt:=-1;
PAL.cntx_psh();
PAL_POZ.cntx_psh();
EANN.cntx_psh();
EANP.cntx_psh();
_rezyg:=1;
_buf.clear();
{? _buf.first()
|| {!
   |? EANN.clear();
      {? EANN.seek(_buf.REF,EANN.name())
      || _wyp:=exec('sprwyp_m','magazyn_mob',EANN.ref());
         EANP.index('EANN');
         EANP.prefix(EANN.ref());
         {? _wyp>0 & EANP.first()
         || {!
            |? {? EANP.ILS>0
               || {? EANP.LOKZ().MG().PAL='T' & ~_c & EANP.PAL=null & EANP.PALEAN='' & EANP.EAN<>''
                   & EANP.EAN<>EANP.M().KODK
                  || EANP.PALEAN:=EANP.EAN;
                     EANP.put(1)
                  ?};
                  _tpal:={? EANP.TPAL<>''
                         || exec('FindInSet','#table','TPAL','TYP',EANP.TPAL,,,1,,null())
                         || EANP.LOKZ().MG().TPAL
                         ?};
                  _spr_pal:=exec('jest_pal','magazyn_mob',_c);
                  {? _spr_pal=3
                  || {? EANN.TYP='P' & EANN.RODZ='Z' & EANP.M<>null
                     || _rezyg:=exec('contrpal','magdok_palety',EANN.ref())
                     ?};
                     _spr_pal:=0
                  ?};
                  {? _rezyg=-1
                  || _wyn:=0
                  |? _c & _spr_pal=1
                  || {? exec('autoapal','magdok_palety',,,EANP.TPAL)
                     || _wyn:=1;
                        _paleta:=PAL.ref();
                        {? EANP.PALDOEAN<>''
                        || PAL.KODK:=EANP.PALDOEAN;
                           PAL.put(1)
                        ?};
                        {!
                        |? {? EANP.PALDO=null
                           || EANP.PALDO:=_paleta;
                              EANP.PALDOEAN:=EANP.PALDO().KODK;
                              EANP.put(1)
                           ?};
                           EANP.next()
                        !}
                     || _wyn:=0
                     ?}
                  |? _c
                  || _wyn:=1
                  ?};
                  {? _rezyg<>-1 & EANP.LOKZ().MG().PAL='T' & _spr_pal & ~_c
                   & ({? _pyt<0
                      || _pyt:={? _spr_pal=1
                               || _tpal<>null() | {? TPAL.select() || _tpal:=TPAL.ref(); 1 || 0 ?}
                               || FUN.ask('Paleta zarejestrowana w systemie.\nCzy dodać do niej pozycje?'@)
                               ?}
                      ?};
                      _pyt)
                  || _new_pal:={? ~_c
                               || exec('FindInSet','#table','PAL','PAL',EANP.PALEAN,EANP.PALEAN)
                               || exec('FindInSet','#table','PAL','PAL',EANP.PALDOEAN,EANP.PALDOEAN)
                               ?};
                     {? _new_pal=null
                     || PAL.clear();
                        PAL.blank();
                        PAL.AKT:='T';
                        {? PAL.add()
                        || _pal.clear();
                           _pal.blank();
                           _pal.SQL:=$PAL.ref();
                           _pal.add(1);
                           _wyn:=1;
                           _new_pal:=PAL.ref();
                           PAL.KODK:={? ~_c || EANP.PALEAN || EANP.PALDOEAN ?};
                           PAL.TPAL:=_tpal;
                           PAL.STAN:='T';
                           PAL.put()
                        ?}
                     |? _spr_pal=2 & exec('FindInSet','#table','PAL_POZ','PAL',_new_pal)
                     || PAL.clear();
                        {? PAL.seek()
                        || _pal.clear();
                           {? ~_pal.find_key($PAL.ref())
                           || _pal.blank();
                              _pal.SQL:=$PAL.ref();
                              _pal.add(1)
                           ?};
                           PAL.STAN:='T';
                           PAL.put(1)
                        ?}
                     ?};
                     {? _new_pal<>null & ~_c
                     || {? ~_c
                        || _old_pal:=EANP.PAL;
                           _old_kod:=EANP.PALEAN;
                           EANP.PAL:=_new_pal
                        || _old_pal:=EANP.PALDO;
                           _old_kod:=EANP.PALDOEAN;
                           EANP.PALDO:=_new_pal
                        ?};
                        EANP.put(1);
                        PAL_POZ.clear();
                        PAL_POZ.blank();
                        PAL_POZ.PAL:=_new_pal;
                        PAL_POZ.IL:=PAL_POZ.ILP:=EANP.ILS;
                        PAL_POZ.AKT:='T';
                        PAL_POZ.M:=EANP.M;
                        PAL_POZ.TW:=EANP.TW;
                        PAL_POZ.JM:=PAL_POZ.M().J;
                        _dk_c:={? EANP.M().M_ATR<>null()
                               || _waratr:='';
                                  {! _ii:=1..10
                                  |! _waratr+={? ($'EANP.M().M_ATR().SL_%1'[form(_ii,-2,0,'99')])()<>null()
                                              || form(($'EANP.WAR%1'[form(_ii,-2,0,'99')])())
                                              || ''
                                              ?}
                                  !};
                                  {? _waratr<>''
                                  || exec('m_atr_sprdod','mat_atr'
                                      ,EANP.WAR01,EANP.WAR02,EANP.WAR03,EANP.WAR04,EANP.WAR05
                                      ,EANP.WAR06,EANP.WAR07,EANP.WAR08,EANP.WAR09,EANP.WAR10
                                      ,EANP.M().M_ATR,null())
                                  || null()
                                  ?}
                               || null()
                               ?};
                        PAL_POZ.DK_C:=_dk_c;
                        exec('uzupIDkod','magdok_palety',PAL_POZ);
                        {? PAL_POZ.IL>0
                        || {? PAL_POZ.add(1)
                           || params_exec('formEANW','magazyn_mob',EANP.ref(),PAL_POZ.M,PAL_POZ.uidref())
                           ?}
                        ?};
::                   uzupelnienie palety o kolejne pozycje
                        EANP.cntx_psh();
                        {? EANP.next()
                        || {!
                           |? {? {? ~_c || EANP.PALEAN=_old_kod || EANP.PALDOEAN=_old_kod ?}
                              || {? ~_c || EANP.PAL:=_new_pal || EANP.PALDO:=_new_pal ?};
                                 EANP.put(1);
                                 PAL_POZ.clear();
                                 PAL_POZ.blank();
                                 PAL_POZ.PAL:=_new_pal;
                                 PAL_POZ.IL:=PAL_POZ.ILP:=EANP.ILS;
                                 PAL_POZ.AKT:='T';
                                 PAL_POZ.M:=EANP.M;
                                 PAL_POZ.TW:=EANP.TW;
                                 PAL_POZ.JM:=PAL_POZ.M().J;
                                 _dk_c:={? EANP.M().M_ATR<>null()
                                        || _waratr:='';
                                           {! _ii:=1..10
                                           |! _waratr+={? ($'EANP.M().M_ATR().SL_%1'[form(_ii,-2,0,'99')])()<>null()
                                                       || form(($'EANP.WAR%1'[form(_ii,-2,0,'99')])())
                                                       || ''
                                                       ?}
                                           !};
                                           {? _waratr<>''
                                           || exec('m_atr_sprdod','mat_atr'
                                               ,EANP.WAR01,EANP.WAR02,EANP.WAR03,EANP.WAR04,EANP.WAR05
                                               ,EANP.WAR06,EANP.WAR07,EANP.WAR08,EANP.WAR09,EANP.WAR10
                                               ,EANP.M().M_ATR,null())
                                           || null()
                                           ?}
                                        || null()
                                        ?};
                                 PAL_POZ.DK_C:=_dk_c;
                                 exec('uzupIDkod','magdok_palety',PAL_POZ);
                                 {? PAL_POZ.IL>0
                                 || {? PAL_POZ.add(1)
                                    || params_exec('formEANW','magazyn_mob',EANP.ref(),PAL_POZ.M,PAL_POZ.uidref())
                                    ?}
                                 ?}
                              ?};
                              EANP.next()
                           !}
                        ?};
                        EANP.cntx_pop()
                     ?}
                  ?}
               ?};
               _rezyg>0 & EANP.next()
            !}
         ?}
      ?};
      _buf.next()
   !}
?};
_pal.clear();
{? _pal.first()
|| {!
   |? PAL.clear();
      {? PAL.seek(_pal.SQL) || exec('ktm2pal','magdok_palety',0,PAL.ref()) ?};
      _pal.next()
   !}
?};
PAL.cntx_pop();
PAL_POZ.cntx_pop();
EANN.cntx_pop();
EANP.cntx_pop();
obj_del(_pal);
obj_del(_buf);
_wyn


\contrpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: kontrola palety w przypadku magazynu paletowego i RODZ='Z' lub 'W'
::   WE: _a - ref EANN
::   WY: 1-zrezygnowano z przepisania niezgodnych palet, -1-blokada wystawienia dokumentu, 0-pozostałe przypadki
::  OLD: \contrpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_pal:=tab_tmp(3,'PAL','STRING[16]',''
       ,'MAT','STRING[16]',''
       ,'TW','DATE',''
       ,'ILE','REAL',''
       ,'KOD','STRING[30]',''
       ,'NEW','STRING[16]','');


EANN.cntx_psh();
EANP.cntx_psh();
PAL.cntx_psh();

EANP.index('EANN');
EANP.prefix(_a);
{? EANP.first()
|| {!
   |? _refpal:={? EANP.PALEAN<>'' || exec('FindInSet','#table','PAL','PAL',EANP.PALEAN,EANP.PALEAN) || EANP.PAL ?};
      _pal.clear();
      {? _pal.find_key($_refpal,$EANP.M,EANP.TW)
      || _pal.ILE+=EANP.ILS;
         _pal.put(1)
      || _pal.blank();
         _pal.PAL:=$_refpal;
         _pal.MAT:=$EANP.M;
         _pal.TW:=EANP.TW;
         _pal.ILE:=EANP.ILS;
         _pal.KOD:=EANP.PAL().KODK;
         _pal.NEW:=$_refpal;
         _pal.add(1)
      ?};
      EANP.next()
   !}
?};

_palet:=sql('select distinct :_a.PAL from :_a order by 1 ',_pal);
_palet.clear();
{? _palet.first()
|| {!
   |? PAL.clear();
      {? PAL.seek(_palet.PAL)
      || {? PAL.AKT='N' || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99')) || PAL_POZ.use('paletyp') ?};
         PAL_POZ.index('PAL');
         PAL_POZ.prefix(PAL.ref());
         {? PAL_POZ.first()
         || {!
            |? _pal.clear();
               {? _pal.find_key($PAL.ref(),$PAL_POZ.M,PAL_POZ.TW)
               || _pal.ILE-=PAL_POZ.ILP;
                  _pal.put(1)
               ?};
               PAL_POZ.next()
            !}
         ?};
         PAL_POZ.use('paletyp')
      ?};
      _palet.next()
   !}
?};
obj_del(_palet);

_pal.clear();
{? _pal.first() || {! |? {? _pal.ILE>0 || _pal.next() || _pal.del() ?} !} ?};


_npal:=tab_tmp(1,'SQL','STRING[16]','');

_palet:=sql('select distinct :_a.PAL, :_a.NEW from :_a order by 1 ',_pal);
_palet.clear();
{? _palet.size() & _palet.first()
|| {? FUN.ask('Istnieją palety (o tych samych kodach kreskowych)\n'
           'na pozycjach operacji niezgodne co do struktury ze strukturą zarejestrowaną w systemie.\n\n'
           'Czy przyjąć je z innymi kodami (jako nowe palety)?\n'
           'Uwaga. Należy dla tych palet wydrukować nowe kody kreskowe.'@)
   || _wyn:=1;
      {!
      |? PAL.clear();
         {? PAL.seek(_palet.PAL)
         || _new_pal:=null;
            _tpal:=PAL.TPAL;
            _old_pal:=PAL.ref();
            EANP.index('EANN');
            EANP.prefix(_a);
            {? EANP.first()
            || {!
               |? _refpal:={? EANP.PALEAN<>''
                           || exec('FindInSet','#table','PAL','PAL',EANP.PALEAN,EANP.PALEAN)
                           || EANP.PAL
                           ?};
                  {? _refpal=_old_pal
                  || {? _new_pal=null
                     || PAL.blank();
                        PAL.AKT:='T';
                        {? PAL.add()
                        || _new_pal:=PAL.ref();
                           PAL.KODK:=exec('kodk_pal','magdok_palety');
                           PAL.TPAL:=_tpal;
                           PAL.STAN:='T';
                           PAL.put(1);
                           _npal.clear();
                           _npal.blank();
                           _npal.SQL:=$PAL.ref();
                           _npal.add(1)
                        ?}
                     ?};
                     {? _new_pal<>null
                     || EANP.PAL:=_new_pal;
                        EANP.PALDO:=_new_pal;
                        EANP.PALEAN:=EANP.PAL().KODK;
                        EANP.put(1);
                        PAL_POZ.clear();
                        PAL_POZ.blank();
                        PAL_POZ.PAL:=_new_pal;
                        PAL_POZ.IL:=PAL_POZ.ILP:=EANP.ILS;
                        PAL_POZ.AKT:='T';
                        PAL_POZ.M:=EANP.M;
                        PAL_POZ.TW:=EANP.TW;
                        PAL_POZ.JM:=PAL_POZ.M().J;
                        exec('uzupIDkod','magdok_palety',PAL_POZ);
                        PAL_POZ.add(1)
                     ?}
                  ?};
                  EANP.next()
               !}
            ?}
         ?};
         _palet.next()
      !}
   || FUN.info('Niemożliwe wygenerowanie dokumentu przyjęcia wg struktury operacji\nOperację należy anulować.'@);
      _wyn:=-1
   ?}
|| _wyn:=1
?};

_npal.clear();
{? _npal.first()
|| {!
   |? PAL.clear();
      {? PAL.seek(_npal.SQL) || exec('ktm2pal','magdok_palety',0,PAL.ref()) ?};
      _npal.next()
   !}
?};

obj_del(_npal);

EANP.cntx_pop();
EANN.cntx_pop();
PAL.cntx_pop();
_wyn


\ctrlrozp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: kontroluje ilosci do rozpakowania dla danej operacji
::   WY: ''-ok, symbol pierwszej z palet-nie jest dobrze
::  OLD: \ctrlrozp/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? EANN.TYP='R'
|| PAL.cntx_psh();
   PAL_POZ.cntx_psh();
   EANN.cntx_psh();
   EANP.cntx_psh();
   _pal:=tab_tmp(2,'PAL','STRING[16]',''
          ,'M','STRING[16]',''
          ,'ILR','REAL',''
          ,'ILE','REAL',''
          ,'KOD','STRING[30]',''
          ,'EAN','STRING[30]','');
:: pobieramy rozpakowywane palety z danej operacji
   EANP.index('EANN');
   EANP.prefix(EANN.ref());
   {? EANP.first()
   || {!
      |? {? EANP.PAL<>null & EANP.M<>null & EANP.ZPALET=2
         || _pal.clear();
            {? ~_pal.find_key($EANP.PAL,$EANP.M)
            || _pal.blank();
               _pal.PAL:=$EANP.PAL;
               _pal.M:=$EANP.M;
               _pal.ILR:=0;
               _pal.KOD:=EANP.PAL().KODK;
               _pal.EAN:=EANP.EAN;
               _pal.add(1)
            ?}
         ?};
         EANP.next()
      !}
   ?};
:: prefiksujemy _pal.EAN
   _pal.clear();
   {? _pal.first()
   || {!
      |? EANP.index('EAN');
         EANP.prefix(_pal.EAN,_pal.EAN);
         {? EANP.first()
         || {!
            |? {? EANP.EANN().TYP='R' & EANP.EANN().STAN='Z'
                & EANP.PAL<>null & EANP.M<>null & $EANP.PAL=_pal.PAL & EANP.ZPALET=2
               || _pal.ILR+=EANP.ILS;
                  _pal.put(1)
               ?};
               EANP.next()
            !}
         ?};
         _pal.next()
      !}
   ?};
:: zbieramy informacje wg struktury wyszczegolnionych palet
   {? _pal.size()
   || _one:=sql('select distinct :_a.PAL from :_a',_pal);
      _one.clear();
      {? _one.first()
      || {!
         |? PAL.clear();
            {? PAL.seek(_one.PAL)
            || {? PAL.AKT='N'
               || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
               || PAL_POZ.use('paletyp')
               ?};
               PAL_POZ.index('PAL');
               PAL_POZ.prefix(PAL.ref());
               {? PAL_POZ.first()
               || {!
                  |? _pal.clear();
                     {? _pal.find_key($PAL_POZ.PAL,$PAL_POZ.M)
                     || _pal.ILE+=exec('zwrippal','magdok_palety',1);
                        _pal.put(1)
                     ?};
                     PAL_POZ.next()
                  !}
               ?}
            ?};
            _one.next()
         !}
      ?}
   ?};
   PAL.cntx_pop();
   PAL_POZ.cntx_pop();
   EANN.cntx_pop();
   EANP.cntx_pop();
   _pal.clear();
   {? _pal.first()
   || {!
      |? {? _pal.ILR>_pal.ILE
         || _wyn:=_pal.KOD;
            0
         || _pal.next()
         ?}
      !}
   ?};
   obj_del(_pal)
?};
_wyn


\frek_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: rekord dla wyszukiwania
::  OLD: \frek_pal/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
{? __fpal.MKTM<>'<KILKA POZYCJI>' || '' || '__fpal#01#01' ?}


\priszpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: palety oznaczone
::----------------------------------------------------------------------------------------------------------------------
{? ZAKR.ARCHPAL<>'' & ZAKR.ARCHPAL<>PAL.name()
|| PAL.use(ZAKR.ARCHPAL);
   {? ZAKR.ARCHPAL<>'palety' || ZAKR.AKT:='N' || ZAKR.AKT:='T' ?}
?};
PAL.index('AKT');
PAL.prefix(ST.ODDZ,'N',ZAKR.AKT);
~~


\poiszpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: palety oznaczone
::----------------------------------------------------------------------------------------------------------------------
~~


\uzupIDkod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: uzupełnie dla danego rekordu tabeli zapisy IDPAL, KODPAL
::   WE: _a - tabela
::   WY: 1-coś zmieniono 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_tab:={? var_pres('_a')=type_of(FIRMA) || _a || return(0) ?};

{? var_pres('PAL',_tab)>0 & _tab.PAL<>null() & _tab.IDPAL<>_tab.PAL().IDADD
|| _res:=1;
   {? _tab.PAL().name()='palety' | _tab=PAL_POZ
   || _tab.IDPAL:=_tab.PAL().IDADD;
      _tab.KODPAL:=_tab.PAL().KODK
   ?}
?};
{? var_pres('PALDO',_tab)>0 & _tab.PALDO<>null() & _tab.IDPALD<>_tab.PALDO().IDADD
|| _res:=1;
   {? _tab.PAL().name()='palety' | _tab=PAL_POZ
   || _tab.IDPALD:=_tab.PALDO().IDADD;
      _tab.KODPALD:=_tab.PALDO().KODK
   ?}
?};
_res


\kodkINarch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Sprawdza czy podany kod kreskowy nie znajduję sięw archiwum palet
::   WE: _a - kod kreskowy
::   WY: 0-nie ma go 1-jest
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_kodk:={? var_pres('_a')=type_of('') || _a || '' ?};
{? _kodk<>''
|| PAL.cntx_psh();
   _msk:=PAL.names();
   {? _msk.first()
   || {!
      |? _ch:=_msk.NAME+1;
         {? _ch<>'y' & _ch<>'_'
         || PAL.use(_msk.NAME);
            PAL.index('PAL');
            _res:=PAL.find_key(_kodk,_kodk)
         ?};
         ~_res & _msk.next()
      !}
   ?};
   PAL.cntx_pop()
?};
_res


\palINarch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Sprawdza czy palety na danym dokumencie nie są w archiwum
::   WE: _a - dokument/reorganizacja
::   WY: 0-nie ma go 1-jest
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_ref:={? var_pres('_a')=type_of(null()) || _a || '' ?};
{? _ref<>null()
|| _tab:=ref_tab(_ref);
   {? _tab=ND
   || ND.cntx_psh();
      DK.cntx_psh();
      DK_L.cntx_psh();
      DK_L.index('CZYPAL');
      DK_L.prefix(_ref);
      {? DK_L.first()
      || {!
         |? {? DK_L.IDPAL<>'' & DK_L.PAL=null()
            || _rpal:=exec('FindAndGet','#table',PAL,DK_L.IDPAL,,"$ref()",'');
               {? _rpal<>'' & ref_name(_rpal)=PAL.name()
               || DK_L.PAL:=exec('FindAndGet','#table',PAL,_rpal,,,null());
                  DK_L.put(1)
               ?}
            ?};
            _res:=(DK_L.IDPAL<>'' & DK_L.PAL=null()) | (DK_L.IDPALD<>'' & DK_L.PALDO=null());
            ~_res & DK_L.next()
         !}
      ?};
      ND.cntx_pop();
      DK.cntx_pop();
      DK_L.cntx_pop()
   |? _tab=DK_LN
   || DK_LN.cntx_psh();
      DK_L.cntx_psh();
      DK_L.index('DK_LNLOK');
      DK_L.prefix(_ref);
      {? DK_L.first()
      || {!
         |? {? DK_L.IDPAL<>'' & DK_L.PAL=null()
            || _rpal:=exec('FindAndGet','#table',PAL,DK_L.IDPAL,,"$ref()",'');
               {? _rpal<>'' & ref_name(_rpal)=PAL.name()
               || DK_L.PAL:=exec('FindAndGet','#table',PAL,_rpal,,,null());
                  DK_L.put(1)
               ?}
            ?};
            {? DK_L.IDPALD<>'' & DK_L.PALDO=null()
            || _rpal:=exec('FindAndGet','#table',PAL,DK_L.IDPALD,,"$ref()",'');
               {? _rpal<>'' & ref_name(_rpal)=PAL.name()
               || DK_L.PALDO:=exec('FindAndGet','#table',PAL,_rpal,,,null());
                  DK_L.put(1)
               ?}
            ?};
            _res:=(DK_L.IDPAL<>'' & DK_L.PAL=null()) | (DK_L.IDPALD<>'' & DK_L.PALDO=null());
            ~_res & DK_L.next()
         !}
      ?};
      DK_LN.cntx_pop();
      DK_L.cntx_pop()
   ?}
?};
_res


\ctrlARCHIV
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Sprawdza czy daną paletę można archiwizować
::   WY: 1-można 0-nie można
::----------------------------------------------------------------------------------------------------------------------
_res:=PAL.AKT='N'
    | (PAL.AKT='T' & PAL.R='N' & PAL.P='N' & PAL.W='N')
    | (PAL.AKT='T' & PAL.W='T' & (';TN'*PAL.R)>1
       & DK_L.ZPALET=2 & DK_L.PALDO<>null())
    | (PAL.AKT='T' & PAL.W='T' & (';TN'*PAL.R)>1
       & ((~DK_L.AUTO & DK_L.ZPALET<2) | ~exec('czyilpoz','magdok_palety',PAL.ref())));
_res


\pr_nopal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: wydania wynikające z rozpakowania nie na paletę
::----------------------------------------------------------------------------------------------------------------------
{? PAL.name()<>'palety' || PAL.use('palety') ?};
PAL.index('AKT');
PAL.prefix(ST.ODDZ,'B');
~~


\po_nopal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: wydania wynikające z rozpakowania nie na paletę
::----------------------------------------------------------------------------------------------------------------------
_czy:=PAL.sel_aget();
{? _czy.size() | {? PAL.f_active()>0 || PAL.f_size() || PAL.size() ?}
|| PAL_POZ.use('palet%1'[form(ST.AR-2000,-2,0,'99')]);
   PAL_POZ.index('PAL');
   PAL_POZ.prefix(PAL.ref());
   grp_disp(PAL_POZ,'WERR')
?};
obj_del(_czy);
~~


\ad_nopal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: dodanie palety dla wydań z rozpakowań
::----------------------------------------------------------------------------------------------------------------------
MG.cntx_psh();
MG.index('MAGAZYNY');
MG.prefix();
MG.f_clear();
MG.f_set('SYM,NAZ','','\"MG\".ODDZ=\':_a\' and \"MG\".PAL=\'T\'',ST.ODDZ);
{? MG.f_first()
|| {!
   |? {? exec('FindInSet','#table','PAL','NOPAL',MG.ref(),'B',,,,null())<>null()
      || MG.f_del()
      || MG.f_next()
      ?}
   !}
?};
_mg:=null();
{? MG.f_first()
|| {? MG.f_size()>1
   || _old:=MG.win_sel('SLO');
      {? MG.select() || _mg:=MG.ref() ?}
   || _mg:=MG.ref()
   ?}
?};
{? _mg<>null()
|| _refpo:=PAL.ref();
   PAL.cntx_psh();
   PAL.clear();
   PAL.blank();
   PAL.AKT:='T';
   PAL.BEZOZN:='B';
   PAL.ROZ:='B';
   PAL.STAN:='B';
   PAL.MG:=_mg;
   PAL.KODK:='Wydanie bez palet [%1]'[PAL.MG().SYM];
   PAL.TPAL:=null();
   {? PAL.add() || _refpo:=PAL.ref() ?};
   PAL.cntx_pop();
   {? PAL.f_active()>0
   || PAL.f_rfresh();
      PAL.f_seek(_refpo)
   || PAL.seek(_refpo)
   ?}
|| FUN.info('Brak magazynów z obsługą palet, które nie mają wydań bez palet dla rozpakowania.'@)
?};
MG.f_clear();
MG.cntx_pop();
~~


\rekinpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: akcja rekord przed dla okienka selekcji palet
::----------------------------------------------------------------------------------------------------------------------
{? exec('FindInSet','#table','PAL_POZ','PAL',PAL.ref())<>null()
|| ''
|| 'PAL#04#01'
?}


\pogrnpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: po odswiezeniu - okienka grupowego
::   WE: [_a] - akronim okienka (domyslnie WERR)
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='WERR' ?} || _a:='WERR' ?};

_czy:=PAL.sel_aget();
_ch:=PAL.name()+1;
_ch:=gsub(_ch,'y','t');
{? _czy.size() | {? PAL.f_active()>0 || PAL.f_size() || PAL.size() ?}
|| {? PAL.AKT='N'
   || {? PAL.STAN<>'I'
      || PAL_POZ.use('pale'+_ch+form(PAL.AR-2000,-2,0,'99'))
      || PAL_POZ.use('paleths')
      ?}
   || {? PAL.BEZOZN='B'
      || PAL_POZ.use('palet%1'[form(ST.AR-2000,-2,0,'99')])
      || PAL_POZ.use('paletyp')
      ?}
   ?};
   PAL_POZ.index('PAL');
   PAL_POZ.prefix(PAL.ref())
|| PAL_POZ.index('PAL');
   PAL_POZ.prefix(null)
?};
obj_del(_czy);
BEER.TAB:='PAL_POZ';
grp_disp(PAL_POZ,_a);
1


\isB_ROZP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: sprawdza czy dostępne proste rozpakowanie dla wydania
::   WE: [_a] - aktonim pola, którego to dotyczy lub pusty STRING
::----------------------------------------------------------------------------------------------------------------------
_afld:={? var_pres('_a')=type_of('') || _a || '' ?};
(~HELP.POP | (HELP.POP & DK.ROZPAK & (_afld='' | ~((';M;EANL;TW;DOST;'*_afld)>1))))
& ND.MAG().PAL='T'
& ND.TYP().P='N'
& {? ND.TYP().TD<>'' & ND.MD<>null() || ND.MD().PAL<>'T' || 1 ?}
& exec('FindInSet','#table','PAL','NOPAL',ND.MAG,'B',,,,null())<>null()


\initNOPAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: ustawienie parametrów dla formuły rozpNOPAL - kontekst działania aktualne DK
::       do wykorzystania przy automatach tworzących automatyczne rozpakowania
::   WE: [_a] - kod rozpakowywanej palety lub pusty string
::       [_b] - EANL.ref() - lokalizacja
::----------------------------------------------------------------------------------------------------------------------
exec('doneNOPAL','magdok_palety');
EANX.PALK:={? var_pres('_a')=type_of('') & (+_a)>0 || _a || '' ?};
_eanl:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_mat:=DK.M;

{? EANX.PALK<>'' & _mat<>null()
|| _palk:={? EANX.PALK='' || null() || exec('FindInSet','#table','PAL','PAL',EANX.PALK,EANX.PALK,,,,null()) ?};
   {? _palk<>null()
   || SL.cntx_psh();
      _jest:=0;
      {? _eanl<>null()
      ||
::       Wyszukanie podanej lokalizacji
         SL.index('PALLOK');
         SL.prefix(_palk,ND.MAG,_eanl);
         {? SL.first() || _jest:=1; EANX.LOKP:=SL.EANL().KOD; EANX.EANL:=SL.EANL ?}
      ?};
      {? _jest=0
      ||
::       Jeżeli nie podano lokazliacji lub nie odnaleziono podanej, to bran pierwsza z brzegu
         SL.index('PALALL');
         SL.prefix(_palk,ND.MAG);
         {? SL.first() || EANX.LOKP:=SL.EANL().KOD; EANX.EANL:=SL.EANL ?}
      ?};
      SL.cntx_pop()
   || EANX.PALK:=''
   ?}
?};
~~


\doneNOPAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zerowanie parametrów dla formuły rozpNOPAL - kontekst działania aktualne DK
::----------------------------------------------------------------------------------------------------------------------
HELP.POP:=0;
EANX.PALK:='';
EANX.LOKP:='';
EANX.EANL:=null();
~~


\rozpNOPAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: proste rozpakowanie dla wydania - kontekst danego DK
::   WY: 1-rozpisane, 0-nie dotyczy, -1-błąd
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_nopal_r:=DK.N().MAG().PAL='T' & exec('isB_ROZP','magdok_palety');

{? _nopal_r
|| _paln:=exec('FindInSet','#table','PAL','NOPAL',ND.MAG,'B',,,,null());
   _palk:={? EANX.PALK='' || null() || exec('FindInSet','#table','PAL','PAL',EANX.PALK,EANX.PALK,,,,null()) ?};
:: sprawdzenie czy jest to rozpakowanie czy też calutka paleta
   _buf:=_ile:=DK.IL;
   _mg:=DK.N().MAG;
   _mat:=DK.M;
   _ktm:=DK.M().KTM;
   _scsql:=DK.SRDK;
   _scold:=DK.PRDK;
   _refdk:=DK.ref();
   _typmag:=DK.N().MAG().TYP;
   _nofifo:=_typmag*'DOST' & DK.N().TYP().AFIFO='';
   _fifo:={? _typmag*'DOST' || {? DK.AFIFO<>'' || DK.AFIFO || '' ?}
          |? _typmag='LIFO' || 'L'
          || 'F'
          ?};
   _oki:=1;
   {? _nofifo & DK.DOST=date(0,0,0)
   || _res:=0
   || SL.cntx_psh();
      DK_L.cntx_psh();
      PAL.cntx_psh();
      PAL_POZ.cntx_psh();
      PAL.prefix();
      {? {? _palk<>null() || PAL.seek(_palk) || 1 ?}
      ||
::       kontrola ilości pozostałej na palecie zmienna _other decyduję czy dodatkowo mają być pobrania z innych palet
         {? _palk<>null()
         || _ilk:=exec('ILmatPAL','magdok_palety',_palk,_ktm);
            _other:={? _ilk>0 || DK.IL>_ilk || _palk:=null(); -1 ?}
         || _other:=-1
         ?};
         {? _palk<>null()
         || {? PAL.AKT='N'
            || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
            || PAL_POZ.use('paletyp')
            ?};
            PAL_POZ.index('PAL');
            PAL_POZ.prefix(PAL.ref())
         || PAL_POZ.use('paletyp');
            PAL_POZ.index('PAL');
            PAL_POZ.prefix()
         ?};
         {? PAL_POZ.first() & PAL_POZ.find_tab('first','M',,'=',_mat) || _oki:=1 ?};
         _buf:=tab_tmp(1,'PAL_POZ','STRING[16]','','ILE','REAL','');
         _czydo:=do_state();
         {? ~_czydo || do() ?};
::       robimy dwa przejścia: 1-wskazanie dostawy, 2-dowolne dostawy
::       ewentualnie może się pojawić jeszcze 3 przejście w przypadku, gdy wskazana paleta nie pokrywa pełnej ilości
         _wsk:={? _scsql<>'' || 1 || 2 ?};
         _wgold:=0;
         {!
         |?
            {? _oki & PAL_POZ.first()
             & {? _wsk=1
               || {? PAL_POZ.find_tab('first','M',,'=',_mat,'SCSQL',,'=',_scsql)
                  || 1
                  || _wgold:=1;
                     PAL_POZ.find_tab('first','M',,'=',_mat,'SCSQL',,'=',_scold)
                  ?}
               || PAL_POZ.find_tab('first','M',,'=',_mat)
               ?}
            || {!
               |? {? (SL.index('PALM'); SL.prefix(_mg,_mat,PAL_POZ.PAL); SL.first())
                  || _upd:=null();
                     _pal_poz:=$PAL_POZ.ref();
                     _buf.clear();
                     _buf.prefix(_pal_poz);
                     {? _buf.first()
                     || _upd:=_buf.ref();
                        _ilp:=PAL_POZ.ILP-_buf.ILE
                     || _ilp:=PAL_POZ.ILP
                     ?};
                     _ilbuf:=_ile;
                     {? _ilp>=_ile
                     || _iler:=_ile;
                        _ile:=0
                     |? _ilp>0
                     || _iler:=_ilp;
                        _ile-=_iler
                     ?};
                     PAL_POZ.cntx_psh();
                     {? _ilp>0 & _iler>0
                     ||
                        _czyrozpa:=~exec('allORpart','magdok_palety',PAL_POZ.PAL,_mat,_ilbuf);
                        _palz:={? _palk<>null() || _palk || PAL_POZ.PAL ?};
                        {? _czyrozpa
                        || {? ~exec('add2dk_l','magdok_wspolne',_refdk,null()
                                ,{? EANX.EANL<>null || EANX.EANL || SL.EANL ?},null()
                                ,PAL_POZ.TW,date(0,0,0)
                                ,_iler,_mg,_mat,,,_palz,_paln,1,2)
                           || _oki:=0;
                              undo()
                           || PAL_POZ.ILP-=_iler;
                              exec('akt_palp','magdok_palety');
                              {? PAL_POZ.put(1)
                              || exec('poz_bpal','magdok_palety',1,$_paln,$_palz,PAL_POZ.M().KTM,_iler
                                  ,PAL_POZ.C,PAL_POZ.TW,PAL_POZ.SCSQL,_mg,PAL_POZ.DK_C,1)
                              || _oki:=0;
                                 undo()
                              ?};
                              exec('znacznik','magdok_palety',PAL_POZ.PAL)
                           ?}
                        || {? ~exec('add2dk_l','magdok_wspolne',_refdk,null()
                                ,{? EANX.EANL<>null || EANX.EANL || SL.EANL ?},null
                                ,PAL_POZ.TW,date(0,0,0)
                                ,_iler,_mg,_mat,,,PAL_POZ.PAL,null)
                           || _oki:=0;
                              undo()
                           || exec('znacznik','magdok_palety',PAL_POZ.PAL)
                           ?}
                        ?};
                        {? _oki
                        || _buf.clear();
                           {? _upd<>null()
                           || {? _buf.seek(_upd) || _buf.ILE+=_iler; _buf.put(1) ?}
                           || _buf.blank(); _buf.PAL_POZ:=_pal_poz; _buf.ILE:=_iler; _buf.add(1)
                           ?}
                        ?}
                     ?};
                     PAL_POZ.cntx_pop()
                  ?};
                  _ile>0
                  & _oki
                  & {? _wsk=1
                    || {? ~_wgold
                       || PAL_POZ.find_tab('next','M',,'=',_mat,'SCSQL',,'=',_scsql)
                       || PAL_POZ.find_tab('next','M',,'=',_mat,'SCSQL',,'=',_scold)
                       ?}
                    || PAL_POZ.find_tab('next','M',,'=',_mat)
                    ?}
               !}
            || EANX.PAL:=_palk
            ?};
            {? _wsk=1 & _other>0
            || PAL_POZ.use('paletyp');
               PAL_POZ.index('PAL');
               PAL_POZ.prefix();
               _palk:=null();
               _other:=-1
            || _wsk+=1
            ?};
            _ile>0 & _wsk<=2 & _oki
         !};
         _res:={? _oki || 1 || -1 ?};
         {? ~_czydo || end() ?};
         obj_del(_buf)
      ?};
      SL.cntx_pop();
      DK_L.cntx_pop();
      PAL.cntx_pop();
      PAL_POZ.cntx_pop()
   ?}
?};
_res


\pobPALsl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: podpowiada paletę, lokalizację, termin do rozpakowania
::----------------------------------------------------------------------------------------------------------------------
{? DK.PLUS='N' & DK.ROZPAK & DK.SRDK<>'' & (~HELP.POP | (DK.DOST<>date(0,0,0)))
|| _scsql:=DK.SRDK;
   _mg:=DK.N().MAG;
   _mat:=DK.M;
   _ile:=DK.IL;
   _find:=0;
   SL.cntx_psh();
   PAL.cntx_psh();
   PAL_POZ.cntx_psh();
   DK.cntx_psh();
   DK_L.cntx_psh();
   PAL_POZ.index('SCMG');
   PAL_POZ.prefix(_scsql,_mg);
   {? PAL_POZ.first()
   || {!
      |? {? PAL_POZ.ILP>0 & (SL.index('PALM'); SL.prefix(_mg,_mat,PAL_POZ.PAL); SL.first())
         || {? PAL_POZ.ILP<_ile || DK.IL:=PAL_POZ.ILP ?};
            EANX.PAL:=PAL_POZ.PAL;
            EANX.PALK:=EANX.PAL().KODK;
            EANX.EANL:=SL.EANL;
            EANX.LOKP:=EANX.EANL().KOD;
            EANX.TW:=SL.TW;
            EANX.TPAL:=EANX.PAL().TPAL().TYP;
            _find:=1
         ?};
         ~_find & PAL_POZ.next()
      !}
   ?};
   SL.cntx_pop();
   PAL.cntx_pop();
   PAL_POZ.cntx_pop();
   DK.cntx_pop();
   DK_L.cntx_pop()
?}


\allORpart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: sprawdza czy wydanie dotyczy całej palety, czy też rozpakowania
::   WE: _a - paleta
::       _b - indeks
::       _c - ilość do wydania
::   WY: 1-cała paleta 0-rozpakowanie -1-coś nie tak (do pominięcia) 2-cała paleta na kilka indeksów lub rozpakowanie
::----------------------------------------------------------------------------------------------------------------------
_pal:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_mat:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_ile:={? var_pres('_c')=type_of(0) || _c || 0 ?};

_res:=-1;
{? _pal<>null() & _mat<>null() & _ile>0
|| _oki:=1;
   _other:=0;
   PAL.cntx_psh();
   PAL_POZ.cntx_psh();
   PAL.prefix();
   {? PAL.seek(_pal)
   || {? PAL.AKT='N'
      || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
      || PAL_POZ.use('paletyp')
      ?};
      PAL_POZ.index('PAL');
      PAL_POZ.prefix(_pal);
      {? PAL_POZ.first()
      || {!
         |? {? PAL_POZ.M=_mat || _ile-=PAL_POZ.ILP
            |? PAL_POZ.ILP>0 || _other:=1; _oki:=0
            ?};
            _oki & PAL_POZ.next()
         !}
      ?}
   ?};
   PAL.cntx_pop();
   PAL_POZ.cntx_pop();
   _res:={? ~_oki | _ile<0 || {? _other || 2 || 0 ?} || 1 ?}
?};
_res


\statsPAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: ustala status dostawy dla całej palety
::   WE: _a - paleta
::----------------------------------------------------------------------------------------------------------------------
PAL.cntx_psh();
PAL_POZ.cntx_psh();
PAL.prefix();
{? PAL.seek(_a)
|| {? PAL.AKT='N'
   || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
   || PAL_POZ.use('paletyp')
   ?};
   _stats:=null();
   _onlys:=0;
   PAL_POZ.index('SCSQL');
   PAL_POZ.prefix(_a);
   {? PAL_POZ.first()
   || _onlys:=1;
      {!
      |? {? PAL_POZ.IL>0
         || {? _stats=null() || _stats:=PAL_POZ.STATS ?};
            {? _stats<>PAL_POZ.STATS || _onlys:=2 ?}
         ?};
         _onlys=1 & PAL_POZ.next()
      !}
   ?};
   {? _onlys=1
   || _var1stats:=VAR1.STATS;
      VAR1.STATS:=_stats;
      exec('FindAndGet','#table',PAL,PAL.ref(),,"STATS:=VAR1.STATS;put(1)",0);
      VAR1.STATS:=_var1stats
   || exec('FindAndGet','#table',PAL,PAL.ref(),,"STATS:=null();put(1)",0)
   ?}
?};
PAL.cntx_pop();
PAL_POZ.cntx_pop();
~~


\kodkINakt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Zwraca paletę o podanym kodzie kreskowym (tylko aktywa maska)
::   WE: _a - kod kreskowy
::   WY: PAL.ref() lub null gdy nie ma palety o podanym kodzie
::----------------------------------------------------------------------------------------------------------------------
_res:=null();
_kodk:={? var_pres('_a')=type_of('') || _a || '' ?};
{? _kodk<>''
|| PAL.cntx_psh();
   PAL.use('palety');
   PAL.index('PAL');
   {? PAL.find_key(_kodk,_kodk)
   || _res:=PAL.ref()
   ?};
   PAL.cntx_pop()
?};
_res


\pr_eanxpalr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Przed redakcją pola EANX.PALR - paleta do rozpakowania
::----------------------------------------------------------------------------------------------------------------------
{? DK.M=null()
|| PAL.index('PAL');
   PAL.prefix();
   PAL.f_set('KODK',,'\"PAL\".P=\'T\' '
                     'and \"PAL\".AKT=\'T\' '
                     'and \"PAL\".ODD=\':_a\' '
                     'and \"PAL\".MG=:_b',ST.ODDZ,ST.MAG);
   EANX.WHERE:='X';
   PAL.win_sel('SLO');
   PAL.win_dict('SLO');
   PAL.actions('SLO','WDU:D');
   1
|| 0
?}


\po_eanxpalr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Po redakcji pola EANX.PALR - paleta do rozpakowania
::   WE: [_a] - 1-tryb z uzupełnionym M, 0-domyślnie-brak
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_res:=1;
_jest:=0;
{? EANX.PALR<>null()
|| _jest:=~(exec('FindInSet','#table','DK_L','CZYPAL',EANX.PALR,ND.ref())=null);
   {? ~_jest || _jest:=~(exec('FindInSet','#table','DK_L','CZYPALDO',EANX.PALR,ND.ref())=null) ?}
?};
{? _jest
|| FUN.info('Wybraną paletę dodano już do dokumentu.\nPonowne przeniesienie na dokument niemożliwe.'@);
   EANX.PALR:=null();
   _res:=0
|? EANX.PALR<>null()
|| EANX.PALK:=EANX.PALR().KODK;
   EANX.TPAL:=EANX.PALR().TPAL().TYP;
   {? _tryb
   || _mat:=DK.M;
      _ktm:=DK.M().KTM;
      _scsql:='';
      _one:=1;
      PAL_POZ.index('PAL');
      PAL_POZ.prefix(EANX.PALR,_ktm,_ktm);
      {? PAL_POZ.first()
      || {? PAL_POZ.find_tab('first','ILP',,'>',0) || _scsql:=PAL_POZ.SCSQL ?}
      || _one:=0;
         _res:=0
      ?}
   || _mat:=null();
      _ktm:='';
      _scsql:='';
      _one:=1;
      PAL_POZ.index('PAL');
      PAL_POZ.prefix(EANX.PALR);
      {? PAL_POZ.first()
      || {!
         |? {? PAL_POZ.ILP>0
            || {? _ktm=''
               || _ktm:=PAL_POZ.M().KTM;
                  _mat:=PAL_POZ.M;
                  _scsql:=PAL_POZ.SCSQL
               || _one:=_ktm=PAL_POZ.M().KTM
               ?}
            ?};
            _one & PAL_POZ.next()
         !}
      ?}
   ?};
   {? _one & _ktm<>''
   || DK.M:=_mat;
      D_HELP.M:=_ktm;
      {? ND.MAG().TYP*'DOST' & _scsql<>''
      || exec('be_dost','magdok_poz','T',_scsql)
      ?};
      SL.cntx_psh();
      SL.index('PALM');
      SL.prefix(ND.MAG,_mat,EANX.PALR);
      {? SL.first() || EANX.LOKP:=SL.EANL().KOD; EANX.EANL:=SL.EANL; EANX.TW:=SL.TW ?};
      SL.cntx_pop()
   || SL.cntx_psh();
      SL.index('PALALL');
      SL.prefix(EANX.PALR,ND.MAG);
      {? SL.first() || EANX.LOKP:=SL.EANL().KOD; EANX.EANL:=SL.EANL ?};
      SL.cntx_pop()
   ?}
?};
{? ~_jest
|| PAL.f_clear();
   PAL.actions('SLO','')
?};
_res


\aktstdep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: aktualizacja na palecie wg statusow dostaw - depaletyzacja
::   WE: _a - ref SQL palety depaletyzowanej
::       _b - SCSQL
::       _c - status
::   WY: 1-ok 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_msk:={? var_pres('_a')=type_of('') & (+_a)=16 & (5+_a)='palet' || form(8+_a) || '' ?};
{? _msk<>''
|| PAL.cntx_psh();
   PAL_POZ.cntx_psh();
   PAL_POZ.use('paletyp');
   PAL_POZ.index('RSQL');
   PAL_POZ.prefix(_a,);
   {? PAL_POZ.first() & PAL_POZ.find_tab('first','SCSQL',,'=',_b)
   || {!
      |? _scst:={? PAL_POZ.SCSQL<>'' || exec('FindAndGet','#table',DK,PAL_POZ.SCSQL,,"STATS",null()) || null() ?};
         {? _scst=null() || _scst:=_c ?};
         PAL_POZ.STATS:=_scst;
         {? ~PAL_POZ.put(1)
         || _res:=0
         || exec('statsPAL','magdok_palety',PAL_POZ.PAL);
            exec('aktstdep','magdok_palety',$PAL_POZ.PAL,_b,PAL_POZ.STATS)
         ?};
         PAL_POZ.next() & PAL_POZ.find_tab('next','SCSQL',,'=',_b)
      !}
   ?};
   PAL.cntx_pop();
   PAL_POZ.cntx_pop()
?};
_res


\statsdep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: podzial na palecie wg statusow dostaw - depaletyzacja
::   WE: _a - ref SQL palety z
::       _b - ilosc przed
::       _c - SCSQL
::       _d - DK_C
::       _e - cena
::       _f - nowe SCSQL
::       _g - ilosc o nowym statusie
::       _h - nowy status
::   WY: 1-ok 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_Tab:=tab_tmp(1,'NAME','STRING[8]',);
_Tab.NAME:='paletyp';
_Tab.add;
OKR.cntx_psh;
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first
||
   {!
   |?
      _Tab.NAME:='palet'+($OKR.ROK+2);
      _Tab.add & OKR.next
   !}
?};
OKR.cntx_pop;

{? _Tab.first
||
   PAL_POZ.cntx_psh();
   {!
   |?
      PAL_POZ.use(_Tab.NAME);
      PAL_POZ.index('RSQL');
      PAL_POZ.prefix(_a,);
      {? PAL_POZ.first() & PAL_POZ.find_tab('first','SCSQL',,'=',_c)
      || {!
         |? {? PAL_POZ.ILP=_b & PAL_POZ.DK_C=_d & PAL_POZ.C=_e & PAL_POZ.SCSQL=_c
            || PAL_POZ.ILP-=_g;
               PAL_POZ.IL2:=0;
               exec('poilpalp','magdok_palety');
               _res:=PAL_POZ.put(1);
               {? _res
               || PAL_POZ.cntx_psh();
                  PAL_POZ.clear();
                  PAL_POZ.SCSQL:=_f;
                  PAL_POZ.STATS:=_h;
                  PAL_POZ.ILP:=PAL_POZ.IL:=_g;
                  PAL_POZ.IL2:=0;
                  exec('poilpalp','magdok_palety');
                  exec('uzupIDkod','magdok_palety',PAL_POZ);
                  _res:={? PAL_POZ.add(1) || _g || 0 ?};
                  {? _res || exec('statsPAL','magdok_palety',PAL_POZ.PAL) ?};
                  PAL_POZ.cntx_pop();
                  {? _res>0 || 0 ?}
               ?};
               {? _res & PAL_POZ.IL<=0 || PAL_POZ.del() ?}
            || PAL_POZ.next() & PAL_POZ.find_tab('next','SCSQL',,'=',_c)
            ?}
         !}
      ?};
      _res=0 & _Tab.next
   !};
   PAL_POZ.cntx_pop()
?};
_res


\palROZnext
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Sprawdza czy palety na danym dokumencie nie są z rozpakowania bez wydania i wykonano kolejne operacje
::   WE: _a - dokument/reorganizacja
::   WY: 0-nie ma go 1-jest choć jedna taka pozycja
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_ref:={? var_pres('_a')=type_of(null()) || _a || '' ?};
{? _ref<>null()
|| _tab:=ref_tab(_ref);
   {? _tab=ND
   || ND.cntx_psh();
      DK.cntx_psh();
      DK_L.cntx_psh();
      DK_L.index('CZYPAL');
      DK_L.prefix(_ref);
      {? DK_L.first()
       & DK_L.find_tab('first','ZPALET',,'=',2,'PALDO','BEZOZN','=','B','PALDO','MG','=',DK_L.DK().N().MAG)
      || {!
         |? _dt:=DK_L.DT;
            _tm:=DK_L.TM;
            _pal:=DK_L.PAL;
            _rok:=DK_L.DT~1;
            exec('mag_psh','open_tab');
            OKR.cntx_psh();
            OKR.index('MC');
            OKR.prefix(REF.FIRMA,1);
            {? OKR.find_ge(_rok)
            || {!
               |? exec('mag_open','open_tab',ST.ODDZ,($OKR.ROK+2));
                  DK_L.index('PALDTTM');
                  DK_L.prefix(_pal);
                  {? DK_L.last()
                   & DK_L.find_tab('first','DK',,'<>',null(),'MG','PAL','=','T','ZPALET',,'<>',2)
                  || {! |? DK_L.find_tab('next','DK',,'<>',null(),'MG','PAL','=','T','ZPALET',,'<>',2) !};
                     _res:=DK_L.DT>_dt | DK_L.DT=_dt & DK_L.TM>_tm
                  ?};
                  ~_res & OKR.next()
               !}
            ?};
            exec('mag_pop','open_tab');
            OKR.cntx_pop();
            ~_res & DK_L.find_tab('next','ZPALET',,'=',2,'PALDO','BEZOZN','=','B','PALDO','MG','=',DK_L.DK().N().MAG)
         !}
      ?};
      ND.cntx_pop();
      DK.cntx_pop();
      DK_L.cntx_pop()
   ?}
?};
_res


\ILmatPAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Zwraca ilość na palecie danego indeksu materiałowego - kontekst danej palety
::   WE: _a - ref palety
::       _b - indeks materiałowy
::   WY: ilość pozostała na palecie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_pal:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_ktm:={? var_pres('_b')=type_of('') || _b || '' ?};

{? _pal<>null() & _ktm<>''
|| PAL_POZ.index('PAL');
   PAL_POZ.prefix(_pal,_ktm,);
   {? PAL_POZ.first() || {! |? _res+=PAL_POZ.ILP; PAL_POZ.next() !} ?}
?};
_res


\pal_poz_stats
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PD] [23.25]
:: OPIS: Sprawdzenie czy pozycje palety mają te same statusy
::   WE: _a - refernecja dostawy
::       _b - magazyn
::       _c - paleta
::   WY: null/ref
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_pal:={? var_pres('_c')=type_of(null()) || _c || null() ?};
PAL_POZ.cntx_psh();
PAL_POZ.use('paletyp');
{? _pal
|| PAL_POZ.index('PAL');
   PAL_POZ.prefix(_c)
|| PAL_POZ.index('SCMG');
   PAL_POZ.prefix(_a,_b)
?};
_pal:=null();
{? PAL_POZ.first()
||
   _stats:=PAL_POZ.STATS;
   {!|?
      _res:=_stats=PAL_POZ.STATS;
      _res & PAL_POZ.next()
   !};
   {? _res || _pal:=PAL_POZ.PAL ?}
?};
PAL_POZ.cntx_pop();
_pal

:Sign Version 2.0 jowisz:1045 2024/02/21 08:46:47 6acd41e3ae1e74d44e29a61e40242692566f1bc67b65effa038e2f0bf93391d8d74d440911ae480b312ac1856b825f10f380ac90731c659282cb761d9a14923bfd636eb9be486ca2657980f1476448d8aeee9ab786ffabcbf7834d7495d75d65bd3e22f80975b38f38fe6bdfcfd6590e976918d850ec1595155ea2883a61a0f8
