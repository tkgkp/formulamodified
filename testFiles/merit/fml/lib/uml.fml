:!UTF-8
::----------------------------------------------------------------------------------------------------------------------
:: UTW:  Piotr Kopacz
::       Zrealizowane w ramach praktyk studenckich sierpień/wrzesień 2011
:: OPIS: Rysuje diagram UML tabel systemu
::       Tworzy plik w formacie .graphml otwierany przez yEd Graph Editor (lub inny program ustawiony jak domyślny dla tego formatu plików)
::       yED można pobrać stąd: http://www.yworks.com/en/products_yed_about.html
::
::       UWAGA!!! Po otwarciu diagramu przez yED wymagane jest automatyczne ułożenie elementów wykresu
::                W tym celu należy z menu wykonać akcję Layout -> Hierarchical...
::
:: UŻYCIE: exec('uml','uml')
::
:: TRYBY:
::       - Fragmenty - wyświetla fragment systemu związany z podanymi w oknie wertowania tabelami
::                    (podaje sie cała nazwe tabeli / początek* / *koniec)
::                     bez użycia "*" podane tabele mają kolor biały
::       - Cały - wyświetla caly system
::       - Help - wyświetla informacje o programie
::       - Wyjdz - wychodzi z procesu bez tworzenia pliku
:: OPCJE:
::       - Formuły - wł/wył formuły używane przez tabele
::       - Indeksy - wł/wył indeksy tabel
::       - Kolory - wł/wył kolory
::----------------------------------------------------------------------------------------------------------------------


\uml
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Piotr Kopacz []
:: OPIS: Menu programu
::   WE:
::   WY:
::UWAGA: Parametry bez [] sa wymagane, formuła moze nie sprawdzać czy zostały podane i może wystąpić błąd.
:: ~OST: INSYSEXEC
::----------------------------------------------------------------------------------------------------------------------
{? exec('interm','#system')
|| FUN.emsg(exec('interm_nacc_msg','#system'));
   return()
?};
{!
|?
_all:=ask('Wyrysować cały graf?','Menu',0,'Fragmenty','Cały','Help','Wyjdź');
{? _all=3 || return('Przerwano')?};
{? _all=2 || msg('OPIS: Tworzy plik w formacie .graphml
otwierany przez yEd Graph Editor (lub inny program ustawiony jak domyślny dla tego formatu plików)

TRYBY:
       - Fragmenty - wyświetla fragment systemu związany z podanymi w oknie wertowania tabelami
                  (podaje sie całą nazwe tabeli / początek* / *koniec)
                  bez użycia "*" podane tabele mają kolor biały
       - Cały - wyświetla caly system
       - Help - wyświetla informacje o programie
       - Wyjdz - wychodzi z procesu bez tworzenia pliku

OPCJE:
       - Formuly - wł/wył formuły używane przez tabele
       - Indeksy - wł/wył indeksy tabel
       - Kolory - wł/wył kolory')
?};
_all=2
!};
plik:=fopen('tab.graphml','w',1);
{? ~plik ||
      msg('Nie można utworzyć pliku tab.txt')
          || _wiersz:='<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:y="http://www.yworks.com/xml/graphml" xmlns:yed="http://www.yworks.com/xml/yed/3" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd">
  <!--Created by yFiles for Java 2.8-->
  <key for="graphml" id="d0" yfiles.type="resources"/>
  <key for="port" id="d1" yfiles.type="portgraphics"/>
  <key for="port" id="d2" yfiles.type="portgeometry"/>
  <key for="port" id="d3" yfiles.type="portuserdata"/>
  <key attr.name="url" attr.type="string" for="node" id="d4"/>
  <key attr.name="description" attr.type="string" for="node" id="d5"/>
  <key for="node" id="d6" yfiles.type="nodegraphics"/>
  <key attr.name="url" attr.type="string" for="edge" id="d8"/>
  <key attr.name="description" attr.type="string" for="edge" id="d9"/>
  <key for="edge" id="d10" yfiles.type="edgegraphics"/>
  <graph edgedefault="directed" id="G">
    <data key="d7"/>';
     fwrite(plik, _wiersz)
?};

_dane:=tab_tmp(1
                ,'ZAKRES','STRING[20]','Podaj tabele'
                );

_wer:=_dane.mk_sel('Graf',,1,,,,15);
_dane.win_act(_wer,1,'Dołącz',,,,,,1);
_dane.win_act(_wer,,'Dołącz',,,,,,1);
_dane.win_act(_wer,,'Popraw');
_dane.win_act(_wer,,'Usuń');
_dane.win_sel(_wer);
{? _all=0||_dane.select() ?};

{? _all=1 | _dane.first()
|| {? var_pres('wyrysowane')>0
   || obj_del(wyrysowane)
   ?};
   wyrysowane:=obj_new(tab_num()+2);

   _opcje:=tab_tmp(
                ,'FORMULY','INTEGER','Formuly'
                ,'INDEKS','INTEGER' ,'Indeksy'
                ,'KOLOR','INTEGER','Kolory'
                );
   _opcje.FORMULY:=0;
   _opcje.INDEKS:=0;
   _opcje.KOLOR:=0;
   _opcje.add();
   _wer:=_opcje.mk_sel('Graf',,0,,,,1,,,'N');
   _opcje.win_sel(_wer);
   _opcje.win_fld(_wer,,'FORMULY',,,,,,,,,2,,"1","0");
   _opcje.win_fld(_wer,,'INDEKS',,,,,,,,,2,,"1","0");
   _opcje.win_fld(_wer,,'KOLOR',,,,,,,,,2,,"0","1");
   _opcje.win_act(_wer,,'Popraw',,,,,,1);
   _opcje.select();
   formuly:=_opcje.FORMULY;
   indeksy:=_opcje.INDEKS;
   kolory:=_opcje.KOLOR;

   _dane.first();
   licznik:=0;
   gwiazdka:=0;
   {?_all=0||
      {!
      |?
         {?_dane.ZAKRES+1='*'||
            gwiazdka:=1;
            _part:=_dane.ZAKRES-1;
            _lngth:=+_part;
            {! _tt:=1..tab_num()
            |!
               _acr:=tab_acr(_tt);
               {?_lngth+_acr=_part ||
               licznik:=licznik+1;
               wyrysowane[licznik]:=_acr ?}
            !}

         |? 1+_dane.ZAKRES='*'||
            gwiazdka:=1;
            _part:=1-_dane.ZAKRES;
            _lngth:=+_part;
            {! _tt:=1..tab_num()
            |!
               _acr:=tab_acr(_tt);
               {?_acr+_lngth=_part ||
               licznik:=licznik+1;
               wyrysowane[licznik]:=_acr ?}
            !}
         ||
            licznik:=licznik+1;
            wyrysowane[licznik]:=_dane.ZAKRES
         ?};

         _dane.next()
      !}
   ?};
   _dane.first();

   {?_all=1|| exec('mbTables','uml',"")||
      {!i:=1..licznik
      |!
         exec('mbTables','uml',wyrysowane[i])
      !}
   ?};

   {! _i:=1..licznik
   |!
      exec('edges','uml',wyrysowane[_i])
   !};


   {? ~plik ||
      msg('Nie można utworzyć pliku tab.txt')
   || _wiersz:='</graph>
  <data key="d0">
    <y:Resources/>
  </data>
</graphml>';
      fwrite(plik, _wiersz)
   ?};

obj_del(wyrysowane);
fclose(plik);
sys_exec('tab.graphml',,2)
?};
return ('Everything is ok, have a nice day')


\mbTables
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Piotr Kopacz []
:: OPIS: Dodanie tabel głównych (wybranych przez uzytkownika) lub wszystkich dla całego systemu
::   WE: _a - tabela
::   WY:
::UWAGA: Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
tabela:=_a;
_znalezione:=0;
{! _tt:=1..tab_num()
|?_znalezione=0
|!
   _acr:=tab_acr(_tt);

   {?_a=""||_zapis:=1;
      licznik:=licznik+1;
      wyrysowane[licznik]:=_acr

   ||
      _zapis:=0
   ?};


   {?_acr=_a || _zapis:=1;_znalezione:=1 ?};

   {? ~plik ||
      msg('Nie można utworzyć pliku tab.txt')
   || {?_zapis=1 ||_wiersz:='    <node id="'+maz_utf8(_acr)+'">
      <data key="d4"/>
      <data key="d5"><![CDATA[UMLClass]]></data>
      <data key="d6">
        <y:UMLClassNode>
          <y:Fill color="#'+{?kolory=0 & (_a="" | gwiazdka=1)||exec('kolor','uml')||'FFFFFF'?}+'" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" modelName="internal" modelPosition="t" textColor="#000000" visible="true" width="45.919921875" x="27.0400390625" y="3.0">'+maz_utf8(_acr)+'</y:NodeLabel>';
          fwrite(plik, _wiersz)
      ?}
   ?};

:: wypełnianie okienka tabeli atrybutami i formułami, oraz tworzenie złączeń
   exec('mbTabFields' ,'uml',_acr,_zapis);
   {? indeksy & _zapis|| {?tab_real(_tt)|| exec('mbTabIndexes' ,'uml',_acr)?}?}


!}


\mbTabFields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Piotr Kopacz []
:: OPIS: Dodanie pól do tabel głównych
::   WE:
::   WY:
::UWAGA: Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
_Tab:={?_>0
      || {? type_of(_a)=type_of(SYSLOG) || _a
         |? type_of(_a)=type_of('')     || ($_a)()
         |? type_of(_a)=type_of(1)      || ($tab_acr(_a))()
                                        || ~~
         ?}
      || ~~
      ?};
_tsize:=40;
_type:=obj_new(_tsize);
{!_tt:=1.._tsize |! _type[_tt]:='?' !};
_type[20]:='REAL';
_type[21]:='DATE';
_type[22]:='INTEGER';
_type[24]:='HEADER';
_type[25]:='MEMO';
_type[26]:='_';
_type[27]:='STRING';
_type[29]:='TIME';
_type[30]:='REFERENCE';
_type[32]:='TREE_REF';
_type[33]:='BLOBxxxxx';
_type[38]:='IDTIME';
_type[39]:='IDADD';
_type[40]:='IDPUT';

_wys:=0;
_bufor:="";
_wiersz2:="";
_procedury:="";
{?_b=1 ||
   _wiersz:='          <y:UML clipContent="true" constraint="" omitDetails="false" stereotype="" use3DEffect="false">';
   fwrite(plik, _wiersz)

?};
 _wiersz:="";


{? type_of(_Tab)
|| _tpos:=0;
   {! _tt:=1..tab_num() |? _tpos=0 |! {? ($tab_acr(_tt))()=_Tab || _tpos:=_tt ?} !};

   _tab2:=tab_tmp(,'TYP','STRING[9]','typ');

   {!_ff:=1.._Tab.fld_num()
   |!
      _fld_acr:=_Tab.fld_acr(_ff);
      _fld_type:=_Tab.fld_join(_ff);

      {? _fld_type=''
      || _fld_type:=_type[var_pres(_fld_acr,_Tab)]
      || _fld_type:='_'+_fld_type

      ?};

      {?_b ||
         _wiersz:=_wiersz+ maz_utf8(_fld_acr)+':'+maz_utf8(_fld_type)+'
';
         _wys:=_wys+1;

         {?_fld_type <> 'HEADER'  & formuly=1 ||
            {?$_Tab.fld_fml(_fld_acr,'*PATTERN',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*PATTERN',""), '&', '&amp;');
               _wys:=_wys+1;
               _bufor:=gsub(_bufor,'\'','');
               _bufor:=STR.sub(_bufor,'exec(','');
               _bufor:=STR.sub(_bufor,')','');
               _procedury:=_procedury+_bufor+'
'           ?};
            {?$_Tab.fld_fml(_fld_acr,'*BLANK',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*BLANK',""), '&', '&amp;');
               _wys:=_wys+1;
               _bufor:=gsub(_bufor,'\'','');
               _bufor:=STR.sub(_bufor,'exec(','');
               _bufor:=STR.sub(_bufor,')','');
               _procedury:=_procedury+_bufor+'
'           ?};
            {?$_Tab.fld_fml(_fld_acr,'*BEFORE_DISPLAY',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*BEFORE_DISPLAY',""), '&', '&amp;');
               _wys:=_wys+1;
               _bufor:=gsub(_bufor,'\'','');
               _bufor:=STR.sub(_bufor,'exec(','');
               _bufor:=STR.sub(_bufor,')','');
               _procedury:=_procedury+_bufor+'
'           ?};
            {?$_Tab.fld_fml(_fld_acr,'*BEFORE_EDIT',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*BEFORE_EDIT',""), '&', '&amp;');
               _wys:=_wys+1;
               _bufor:=gsub(_bufor,'\'','');
               _bufor:=STR.sub(_bufor,'exec(','');
               _bufor:=STR.sub(_bufor,')','');
               _procedury:=_procedury+_bufor+'
'           ?};
            {? _Tab.fld_join(_ff)=""   ||
               {?$_Tab.fld_fml(_fld_acr,'*F3',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*F3',""), '&', '&amp;');
                 _wys:=_wys+1;
                 _bufor:=gsub(_bufor,'\'','');
                 _bufor:=STR.sub(_bufor,'exec(','');
                 _bufor:=STR.sub(_bufor,')','');
                 _procedury:=_procedury+_bufor+'
'             ?}
            ?};
            {?$_Tab.fld_fml(_fld_acr,'*AFTER_EDIT',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*AFTER_EDIT',""), '&', '&amp;');
               _wys:=_wys+1;
               _bufor:=gsub(_bufor,'\'','');
               _bufor:=STR.sub(_bufor,'exec(','');
               _bufor:=STR.sub(_bufor,')','');
               _procedury:=_procedury+_bufor+'
'           ?};
            {?$_Tab.fld_fml(_fld_acr,'*DISPLAY_FORMAT',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*DISPLAY_FORMAT',""), '&', '&amp;');
               _wys:=_wys+1;
               _bufor:=gsub(_bufor,'\'','');
               _bufor:=STR.sub(_bufor,'exec(','');
               _bufor:=STR.sub(_bufor,')','');
               _procedury:=_procedury+_bufor+'
'           ?};
            {?$_Tab.fld_fml(_fld_acr,'*EDIT_FORMAT',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*EDIT_FORMAT',""), '&', '&amp;');
               _wys:=_wys+1;
               _bufor:=gsub(_bufor,'\'','');
               _bufor:=STR.sub(_bufor,'exec(','');
               _bufor:=STR.sub(_bufor,')','');
               _procedury:=_procedury+_bufor+'
'           ?}
         ?}
      ?}

   !};

   _tab2.erase();
   {?_b ||
      _wiersz:='<y:AttributeLabel>'+_wiersz+'</y:AttributeLabel>';
      fwrite(plik, _wiersz);

      {?_procedury <> "" || _wiersz:='<y:MethodLabel>'+maz_utf8(_procedury)+'</y:MethodLabel>';fwrite(plik, _wiersz) ?};

      _wiersz:='     </y:UML>
          <y:Geometry height="'+$(65+_wys*13)+'" width="170.0" x="163.0" y="211.0"/>
         </y:UMLClassNode>
      </data>
    </node>';

      fwrite(plik, _wiersz);
      {?_wiersz2 <>""||fwrite(plik,_wiersz2)?}
   ?};

   {?tabela<>""||
      {!_ff:=1.._Tab.fld_num()
      |!
         _fld_acr:=_Tab.fld_acr(_ff);
         _fld_type:=_Tab.fld_join(_ff);

         {? _fld_type=''
         || _fld_type:=_type[var_pres(_fld_acr,_Tab)];
            {?_fld_type='MEMO'  ||
               _tab2.blank(1);
               _tab2.TYP:= _fld_type;
               {?_tab2.find_rec || "" ||
                  _tab2.TYP:=_fld_type;
                  _tab2.add(1);
                  {? tab_acr(_tpos) = tabela || exec ('dorysujTab','uml','MEMO')?};
                  {? tabela=_fld_type || exec ('dorysujTab','uml', tab_acr(_tpos))?}
               ?}
            ?}

         || _fld_type:='_'+_fld_type;
            _tab2.blank(1);
            _tab2.TYP:= _fld_type;
            {?_tab2.find_rec || "" ||
               _tab2.TYP:=_fld_type;
               _tab2.add(1);
               {? 1-_fld_type = tabela || exec ('dorysujTab','uml', tab_acr(_tpos))?};
               {? tab_acr(_tpos) = tabela || exec ('dorysujTab','uml', (1-_fld_type))?}

            ?}
         ?}
      !}
   ?}

?}


\kolor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Piotr Kopacz []
:: OPIS: Losowanie koloru tabeli
::   WE:
::   WY:
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
_kolor:="";
{!_i:=0..2 |!
   _dec:=255*rand();
   _dec:=_dec%1;
   {?_dec<60 || _dec:=_dec+60 ?};
   _wynik:=_dec%16;
   _kolor:=_kolor+exec('hex','uml',_wynik);
   _wynik:=_dec-_wynik*16;
   _kolor:=_kolor+exec('hex','uml',_wynik)
!};
_kolor


\hex
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Piotr Kopacz []
:: OPIS: Zamiana liczby (<256) z dec na hex
::   WE:
::   WY:
::UWAGA: Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
{?_a<10 || _litera:=$_a
|? _a=10 || _litera:='A'
|? _a=11 || _litera:='B'
|? _a=12 || _litera:='C'
|? _a=13 || _litera:='D'
|? _a=14 || _litera:='E'
|? _a=15 || _litera:='F'
?};
_litera


\mbTabIndexes
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Piotr Kopacz []
:: OPIS: Dodanie indexów oraz krawędzi łączacych je z tabelą
::   WE:
::   WY:
::UWAGA: Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
_Tab:={?_>0
      || {? type_of(_a)=type_of(SYSLOG) || _a
         |? type_of(_a)=type_of('')     || ($_a)()
         |? type_of(_a)=type_of(1)      || ($tab_acr(_a))()
                                        || ~~
         ?}
      || ~~
      ?};

{? type_of(_Tab)
|| _tpos:=0;
   {! _tt:=1..tab_num() |? _tpos=0 |! {? ($tab_acr(_tt))()=_Tab || _tpos:=_tt ?} !};


   {!_ff:=1.._Tab.ndx_num()
   |! _ndx_acr:=_Tab.ndx_acr(_ff);
      _ndx_uniq:={? _Tab.ndx_uniq(_ff) || 'T' || 'N' ?};

      {? ~plik
      ||
         msg('Nie można utworzyć pliku tab.txt')
      || _wiersz:='    <node id="'+maz_utf8(_ndx_acr)+maz_utf8(tab_acr(_tpos))+'">
      <data key="d4"/>
      <data key="d5"><![CDATA[UMLClass]]></data>
      <data key="d6">
        <y:UMLClassNode>
          <y:Fill color="#'+{?kolory=0||'FFFF00'||'FFFFFF'?}+'" transparent="false"/>
          <y:BorderStyle color="#'+{?kolory=0||'FF0000'||'000000'?}+'" type="line" width="1.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" modelName="internal" modelPosition="t" textColor="#000000" visible="true" width="45.919921875" x="27.0400390625" y="3.0">'+maz_utf8(_ndx_acr)+{?_ndx_uniq='T'||' (U)'|| ""?}+'</y:NodeLabel>';
          fwrite(plik, _wiersz)



      ?};
      exec('mbTabNdxFields','uml',tab_acr(_tpos),_ff);

      _wiersz:='          <y:Geometry height="26" width="100.0" x="163.0" y="211.0"/>
         </y:UMLClassNode>
      </data>
    </node>
<edge id="'+maz_utf8(_ndx_acr)+maz_utf8(tab_acr(_tpos))+'" source="'+maz_utf8(_ndx_acr)+maz_utf8(tab_acr(_tpos))+'" target="'+maz_utf8(tab_acr(_tpos))+'">
      <data key="d10">
        <y:PolyLineEdge>
          <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
          <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>'    ;
     fwrite(plik, _wiersz)


   !}

?}


\mbTabNdxFields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Piotr Kopacz []
:: OPIS: Dodanie pól do indexów
::   WE:
::   WY:
::UWAGA: Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
_Tab:={?_>0
      || {? type_of(_a)=type_of(SYSLOG) || _a
         |? type_of(_a)=type_of('')     || ($_a)()
         |? type_of(_a)=type_of(1)      || ($tab_acr(_a))()
                                        || ~~
         ?}
      || ~~
      ?};
_Ndx:={?_>1
      || {? type_of(_b)=1 || _b
         |? type_of(_b)=2
          & type_of(_Tab) || _Tab.ndx_no(_b)
         ?}
      || 0
      ?};


_wiersz:='          <y:UML clipContent="true" constraint="" omitDetails="false" stereotype="" use3DEffect="false">';
 fwrite(plik, _wiersz);
 _wiersz:="";


{? type_of(_Tab) & _Ndx
|| _tpos:=0;

   {! _ff:=1.._Tab.ndx_nfld(_Ndx)
   |! _ndx_afld:=_Tab.ndx_afld(_Ndx,_ff);


        _wiersz:=_wiersz+ maz_utf8(_ndx_afld)+'
'
   !};

   _wiersz:='<y:AttributeLabel>'+_wiersz+'</y:AttributeLabel>
     </y:UML>';
   fwrite(plik, _wiersz)
?}


\dorysujTab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Piotr Kopacz []
:: OPIS: Dodanie tabel powiązanych z tabelami głównymi
::   WE:
::   WY:
::UWAGA:Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
{! _i:=1..licznik
|! {?wyrysowane[_i]=_a || return(1)?}
!};

_znalezione:=0;
licznik:=licznik+1;
wyrysowane[licznik]:=_a;

{! _tt:=1..tab_num()
|?_znalezione=0
|!
   _acr:=tab_acr(_tt);




:tworzenie okienka z tabela
   {?_acr=_a ||
      _znalezione:=1;
      {? ~plik
      ||
         msg('Nie można utworzyć pliku tab.txt')
      || _wiersz:='    <node id="'+maz_utf8(_acr)+'">
      <data key="d4"/>
      <data key="d5"><![CDATA[UMLClass]]></data>
      <data key="d6">
        <y:UMLClassNode>
          <y:Fill color="#'+{?kolory=0||exec('kolor','uml')||'FFFFFF'?}+'" transparent="false"/>
          <y:BorderStyle color="#000000" type="line" width="2.0"/>
          <y:NodeLabel alignment="center" autoSizePolicy="content" fontFamily="Dialog" fontSize="13" fontStyle="bold" hasBackgroundColor="false" hasLineColor="false" height="19.92626953125" modelName="internal" modelPosition="t" textColor="#000000" visible="true" width="45.919921875" x="27.0400390625" y="3.0">'+maz_utf8(_acr)+'</y:NodeLabel>';
          fwrite(plik, _wiersz)

      ?};

:wypełnianie okienka tabeli atrybutami i formułami, oraz tworzenie złączeń
      exec('dodajPola' ,'uml',_acr);
      {? indeksy || {?tab_real(_tt)|| exec('mbTabIndexes' ,'uml',_acr)?}?}

   ?}
!}


\dodajPola
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Piotr Kopacz []
:: OPIS: Dodanie pól do tabel powiązanych z tabelami głównymi
::   WE:
::   WY:
::UWAGA: Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
_Tab:={?_>0
      || {? type_of(_a)=type_of(SYSLOG) || _a
         |? type_of(_a)=type_of('')     || ($_a)()
         |? type_of(_a)=type_of(1)      || ($tab_acr(_a))()
                                        || ~~
         ?}
      || ~~
      ?};
_tsize:=40;
_type:=obj_new(_tsize);
{!_tt:=1.._tsize |! _type[_tt]:='?' !};
_type[20]:='REAL';
_type[21]:='DATE';
_type[22]:='INTEGER';
_type[24]:='HEADER';
_type[25]:='MEMO';
_type[26]:='_';
_type[27]:='STRING';
_type[29]:='TIME';
_type[30]:='REFERENCE';
_type[32]:='TREE_REF';
_type[33]:='BLOBxxxxx';
_type[38]:='IDTIME';
_type[39]:='IDADD';
_type[40]:='IDPUT';

_wys:=0;
_bufor:="";
_procedury:="";
_wiersz:='          <y:UML clipContent="true" constraint="" omitDetails="false" stereotype="" use3DEffect="false">';
fwrite(plik, _wiersz);
_wiersz:="";

{? type_of(_Tab)
|| _tpos:=0;
   {! _tt:=1..tab_num() |? _tpos=0 |! {? ($tab_acr(_tt))()=_Tab || _tpos:=_tt ?} !};

   _tab:=tab_tmp(1
                ,'FLD_ACR' ,'STRING[8]' ,'Akronim'
                ,'FLD_TYPE','STRING[9]' ,'Typ'
                );

   _tab2:=tab_tmp(,'TYP','STRING[9]','typ');

   {!_ff:=1.._Tab.fld_num()
   |!
      _fld_acr:=_Tab.fld_acr(_ff);
      _fld_type:=_Tab.fld_join(_ff);

      {? _fld_type=''
      || _fld_type:=_type[var_pres(_fld_acr,_Tab)]
      || _fld_type:='_'+_fld_type

      ?};

      _wiersz:=_wiersz+ maz_utf8(_fld_acr)+':'+maz_utf8(_fld_type)+'
';
      _wys:=_wys+1;

      {?_fld_type <> 'HEADER' & formuly=1||
         {?$_Tab.fld_fml(_fld_acr,'*PATTERN',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*PATTERN',""), '&', '&amp;');
            _wys:=_wys+1;
            _bufor:=gsub(_bufor,'\'','');
            _bufor:=STR.sub(_bufor,'exec(','');
            _bufor:=STR.sub(_bufor,')','');
            _procedury:=_procedury+_bufor+'
'        ?};
         {?$_Tab.fld_fml(_fld_acr,'*BLANK',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*BLANK',""), '&', '&amp;');
            _wys:=_wys+1;
            _bufor:=gsub(_bufor,'\'','');
            _bufor:=STR.sub(_bufor,'exec(','');
            _bufor:=STR.sub(_bufor,')','');
            _procedury:=_procedury+_bufor+'
'        ?};
         {?$_Tab.fld_fml(_fld_acr,'*BEFORE_DISPLAY',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*BEFORE_DISPLAY',""), '&', '&amp;');
            _wys:=_wys+1;
            _bufor:=gsub(_bufor,'\'','');
            _bufor:=STR.sub(_bufor,'exec(','');
            _bufor:=STR.sub(_bufor,')','');
            _procedury:=_procedury+_bufor+'
'        ?};
         {?$_Tab.fld_fml(_fld_acr,'*BEFORE_EDIT',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*BEFORE_EDIT',""), '&', '&amp;');
            _wys:=_wys+1;
            _bufor:=gsub(_bufor,'\'','');
            _bufor:=STR.sub(_bufor,'exec(','');
            _bufor:=STR.sub(_bufor,')','');
            _procedury:=_procedury+_bufor+'
'        ?};
         {? _Tab.fld_join(_ff)=""   ||
            {?$_Tab.fld_fml(_fld_acr,'*F3',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*F3',""), '&', '&amp;');
               _wys:=_wys+1;
               _bufor:=gsub(_bufor,'\'','');
               _bufor:=STR.sub(_bufor,'exec(','');
               _bufor:=STR.sub(_bufor,')','');
               _procedury:=_procedury+_bufor+'
'           ?}
         ?};
         {?$_Tab.fld_fml(_fld_acr,'*AFTER_EDIT',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*AFTER_EDIT',""), '&', '&amp;');
            _wys:=_wys+1;
            _bufor:=gsub(_bufor,'\'','');
            _bufor:=STR.sub(_bufor,'exec(','');
            _bufor:=STR.sub(_bufor,')','');
            _procedury:=_procedury+_bufor+'
'        ?};
         {?$_Tab.fld_fml(_fld_acr,'*DISPLAY_FORMAT',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*DISPLAY_FORMAT',""), '&', '&amp;');
            _wys:=_wys+1;
            _bufor:=gsub(_bufor,'\'','');
            _bufor:=STR.sub(_bufor,'exec(','');
            _bufor:=STR.sub(_bufor,')','');
            _procedury:=_procedury+_bufor+'
'        ?};
         {?$_Tab.fld_fml(_fld_acr,'*EDIT_FORMAT',"") <> "" || _bufor:=gsub($_Tab.fld_fml(_fld_acr,'*EDIT_FORMAT',""), '&', '&amp;');
            _wys:=_wys+1;
            _bufor:=gsub(_bufor,'\'','');
            _bufor:=STR.sub(_bufor,'exec(','');
            _bufor:=STR.sub(_bufor,')','');
            _procedury:=_procedury+_bufor+'
'        ?}
      ?}
:      _tab.add(1)
   !};

   _wiersz:='<y:AttributeLabel>'+_wiersz+'</y:AttributeLabel>';
   fwrite(plik, _wiersz);

   {?_procedury <> ""|| _wiersz:='<y:MethodLabel>'+maz_utf8(_procedury)+'</y:MethodLabel>';fwrite(plik, _wiersz)?};

   _wiersz:='     </y:UML>
          <y:Geometry height="'+$(65+_wys*13)+'" width="170.0" x="163.0" y="211.0"/>
         </y:UMLClassNode>
      </data>
    </node>';

   fwrite(plik, _wiersz)
?}


\edges
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Piotr Kopacz []
:: OPIS: Dodanie połączeń między tabelami
::   WE: _a - TABELA
::   WY:
::UWAGA: Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
_Tab:={?_>0
      || {? type_of(_a)=type_of(SYSLOG) || _a
         |? type_of(_a)=type_of('')     || ($_a)()
         |? type_of(_a)=type_of(1)      || ($tab_acr(_a))()
                                        || ~~
         ?}
      || ~~
      ?};
_tsize:=40;
_type:=obj_new(_tsize);
{!_tt:=1.._tsize |! _type[_tt]:='?' !};
_type[20]:='REAL';
_type[21]:='DATE';
_type[22]:='INTEGER';
_type[24]:='HEADER';
_type[25]:='MEMO';
_type[26]:='_';
_type[27]:='STRING';
_type[29]:='TIME';
_type[30]:='REFERENCE';
_type[32]:='TREE_REF';
_type[33]:='BLOBxxxxx';
_type[38]:='IDTIME';
_type[39]:='IDADD';
_type[40]:='IDPUT';


{? type_of(_Tab)
|| _tpos:=0;
   {! _tt:=1..tab_num() |? _tpos=0 |! {? ($tab_acr(_tt))()=_Tab || _tpos:=_tt ?} !};


   _tab2:=tab_tmp(,'TYP','STRING[9]','typ');

   {!_ff:=1.._Tab.fld_num()
   |!
      _fld_acr:=_Tab.fld_acr(_ff);
      _fld_type:=_Tab.fld_join(_ff);

      {? _fld_type=''
      || _fld_type:=_type[var_pres(_fld_acr,_Tab)];
         {?_fld_type='MEMO'||
            _tab2.blank(1);
            _tab2.TYP:=_fld_type;
               {?_tab2.find_rec || "" ||
                  _tab2.TYP:=_fld_type;
                  _tab2.add(1);
                  {!_j:=1..licznik
                  |!
                     {? wyrysowane[_j]='MEMO'||
                        _wiersz2:='<edge id="'+maz_utf8(tab_acr(_tpos))+'MEMO'+'" source="'+maz_utf8(tab_acr(_tpos))+'" target="'+'MEMO'+'">
      <data key="d10">
        <y:PolyLineEdge>
         <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
         <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>';
                        fwrite(plik,_wiersz2)
                     ?}
                  !}
               ?}
         ?}
      || _fld_type:='_'+_fld_type;
         _tab2.blank(1);
         _tab2.TYP:= _fld_type;
         {?_tab2.find_rec
         || ""
         ||
            _tab2.TYP:=_fld_type;
            _tab2.add(1);
            {!_j:=1..licznik |!
               {?1-_fld_type=wyrysowane[_j]||
                  _wiersz2:='<edge id="'+maz_utf8(tab_acr(_tpos))+maz_utf8((1-_fld_type))+'" source="'+maz_utf8(tab_acr(_tpos))+'" target="'+maz_utf8((1-_fld_type))+'">
      <data key="d10">
        <y:PolyLineEdge>
         <y:Path sx="0.0" sy="0.0" tx="0.0" ty="0.0"/>
          <y:LineStyle color="#000000" type="line" width="1.0"/>
          <y:Arrows source="none" target="standard"/>
         <y:BendStyle smoothed="false"/>
        </y:PolyLineEdge>
      </data>
    </edge>';
                  fwrite(plik,_wiersz2)
               ?}
            !}
         ?}

      ?}

   !}

?}

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:25 424d589594b455d1aec7a1117dc94de0c237a3ec125f0814fd33436dc9a3efef5cd230522bb87b9700c6ca7810e21010ed5011fc6b10c60eb5d54647581d49f7c5a1eef8258525237c43cf9c333a7b9e759830943e1cb88dbb30010d6fd976d2cd1a8a11fefe4ba2af5a97f9e5cb71a043cc0fc47b461f1b80cc8df48f54aa7a
