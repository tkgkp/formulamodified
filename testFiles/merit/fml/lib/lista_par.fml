:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: lista_par.fml
:: Utworzony: 23.10.2020
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły bibioteczne dla obsługi parametrów list płac.
::======================================================================================================================


\uzupelnij
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Uzupełnia listę parametrów dostarczanych z programem.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('dodaj','o_dpar',,,'BEZ_KU',,'Naliczenie listy płac bez stosowania kosztów uzyskania (umowa o pracę)',
   'W przypadku przypisania parametru do listy płac i włączenia stosowania, koszty uzyskania '
   '(784 - Koszty uzyskania) nie będą liczone na danej liście. Aby koszty ponownie mogły być liczone, '
   'parametr należy usunąć lub wyłączyć jego stosowanie.',,'N',,'''T'''
);
exec('dodaj','o_dpar',,,'BEZ_ULGI',,'Naliczenie listy płac bez stosowania ulgi podatkowej (umowa o pracę)',
   'W przypadku przypisania parametru do listy płac i włączenia stosowania, ulga podatkowa '
   '(785 - Ulga podatkowa) nie będzie liczona na danej liście. Aby ulga ponownie mogła być liczona, '
   'parametr należy usunąć lub wyłączyć jego stosowanie.',,'N',,'''T'''
);
exec('dodaj','o_dpar',,,exec('kod_storno','ext_slo'),,'Storno listy płac (umowa o pracę)',
   'Lista płac zawierająca składniki o wartościach przeciwnych listy, z którą została skojarzona. '
   'Suma odpowiednich składników wynagrodzenia pracownika i ich storno wynosi 0.00.',,'N'
);
~~


\test_wym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdzenie, czy dla wskazanej listy istnieją wszystkie wymagane parametry.
::   WE: _a _O - wskazanie nagłówka listy płac
::   WY: 0/1 - brak parametru lub błąd wywołania/są wszystkie wymagane parametry
::----------------------------------------------------------------------------------------------------------------------
:: kontrola wywołania
{? var_pres('_a')<>type_of(null) | _a=null | ref_tab(_a)<>O
:: _a typu innego niż wskazanie nagłówka listy płac
|| return(0)
?};

SEEK.O:=_a;
_ret:=1;

O.cntx_psh();
O_FPAR.cntx_psh();
O_FPAR.index('WYM_JEST');

_fir:=SEEK.O().FIRMA;
_rid:=O.idadd_value();

:: sprawdź znaczniki sterujące
O_FPAR.prefix(_fir,'T','Z','T');
{? O_FPAR.first()
|| O_ZPAR.cntx_psh();
   O_ZPAR.index('O_FPAR');
   O_ZPAR.prefix(_rid);
   _loop:=1;
   {!
   |? _loop
   |! _ret:=O_ZPAR.find_key(O_FPAR.ref());
      _loop:=(_ret<>0 & O_FPAR.next())
   !};
   O_ZPAR.cntx_pop()
?};

{? _ret=0
|| O_FPAR.cntx_pop();
   O.cntx_pop();
   return(0)
?};

:: sprawdź wartości liczbowe
O_FPAR.prefix(_fir,'T','R','T');
{? O_FPAR.first()
|| O_RPAR.cntx_psh();
   O_RPAR.index('O_FPAR');
   O_RPAR.prefix(_rid);
   _loop:=1;
   {!
   |? _loop
   |! _ret:=O_RPAR.find_key(O_FPAR.ref());
      _loop:=(_ret<>0 & O_FPAR.next())
   !};
   O_RPAR.cntx_pop()
?};

O_FPAR.cntx_pop();
O.cntx_pop();

_ret


\dodaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Dla bieżącej firmy dodaje wartość parametru dla wskazanego kryterium lub listy płac.
::   WE: _a [_O/_KT] - wskazanie listy lub kryterium
::       _b [STRING] - symbol parametru
::       _c [ANY] - wartość parametru, jeśli pominięta, to przyjęta zostanie domyślna
::   WY: 0/1 - porażka/sukces
::----------------------------------------------------------------------------------------------------------------------
:: kontrola wywołania
{? var_pres('_a')<>type_of(null) | _a=null |
   var_pres('_b')<>type_of('') | form(_b)='' |
   (ref_tab(_a)<>O & ref_tab(_a)<>KT)
:: błędne argumenty
|| return(0)
?};

exec('dodaj','o_xpar',,_a,_b,{? var_pres('_c')>type_of(~~) || _c || ~~ ?})


\wartosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Zwraca wartość parametru przypisanego do listy płac.
::   WE: _a STRING - symbol parametru
::       _b [_O/_KT] - wskazanie nagłowka lub typu listy płac, jeśli pominięty, to przyjęte zostanie O.ref()
::   WY: any/~~ - wartość/brak parametru lub błąd wywołania
::----------------------------------------------------------------------------------------------------------------------
_TAB:=~~;
:: kontrola wywołania
{? var_pres('_a')<>type_of('') | form(_a)=''
:: błędny argument
|| return()

|? var_pres('_b')=type_of(null)
|| {? _b<>null
   || _TAB:=ref_tab(_b);
      {? _TAB<>O & _TAB<>KT
::       błędne wskazanie
      || return()
      ?}
   || return()
   ?}

|| _TAB:=O
?};

:: mapa argumentów
_sym:=_a;
_ref:={? var_pres('_b')=type_of(null) || _b || _TAB.ref() ?};
_mov:=(_TAB.ref()<>_ref);

_ret:=~~;
{? _mov
|| _TAB.cntx_psh()
?};
{? {? _mov || _TAB.seek(_ref,,1) || 1 ?}
:: pobierz wartość parametru o danym symbolu
|| _ret:=exec('wartosc','o_xpar',_TAB.idadd_value(),_sym)
?};
{? _mov
|| _TAB.cntx_pop()
?};

_ret

:Sign Version 2.0 jowisz:1048 2021/04/09 15:26:28 6102b4c09b91fca28eef5231c00625c90fb54b52e271a1114b35d2275b80400d0136559c284140faa235278ddb92feb8b9118fcf91af8fa609c6a7f135b57314847157b01b962d926ff302a6ddf485915cdb3bb91744e21de0b395d10dd9a2703b09916441d3b3696045abd6ceaf5593657c80b2c63ca0113b5fcfa1d2e0058e
