:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: st_common.fml
:: Utworzony: 02.06.2020
:: Autor: WH
::======================================================================================================================
:: Zawartość: Formuły wspólne aplikacji do zbierania statystyk
::======================================================================================================================

\dir
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Zwraca ścieżkę do folderu z plikami .mstat
::   WY: STRING - ścieżka na serwerze
::  TAG: <PUBLICZNA>
::  OLD: \dir/stat_common.fml
::----------------------------------------------------------------------------------------------------------------------
_result:='';


_sep:=exec('sep','#file',1);
exec('czytaj','#stalesys');
{? XINFO.LINK_SRV=''
||
   XINFO.LINK_SRV:='';
   XINFO.LINK_PRT:=0;
   exec('hint_link_address','zws')
?};
{? XINFO.LINK_SRV='wawsdro01.abs.assecobs.pl'
||
:: Serwer testowy
   _result:='c:\\macrologic\\temp\\stats'
|? XINFO.LINK_SRV='192.168.39.70'
||
:: Serwer produkcyjny
   _result:='/var/www/upload/uploads'
|? envget('COMPUTERNAME')='CZEN524'
||
:: Instalacja WH
   _result:='p:\\mstats'
||
:: Lokalna instalacja
:: _result:=envget('APPDATA')+_sep+'MacroBASE'+_sep+'statistics';
   _result:=envget('APPDATA')+_sep+'MacroBASE'+_sep+'stat'
?};
XINFO.LINK_SRV:='';
XINFO.LINK_PRT:=0;
_result


\swap_dir
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Podmienia ścieżkę gdzie będą się znajdowały pliki mstat usuniętych zapisów źródłowych
::   WE: _a - STRING - oryginalna ścieżka pliku
::       _b - STRING - nazwa pliku
::       _c - INTEGER - 0 - ścieżka dla pliku niepoprawnie sparsowanego
::                      1 - ścieżka dla pliku poprawnie sparsowanego
::   WY: STRING
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_filepath:=_a;
_filename:=_b;
_ok:=_c;

_result:=_filepath;

_sep:=exec('sep','#file',1);
exec('czytaj','#stalesys');
{? XINFO.LINK_SRV=''
||
   XINFO.LINK_SRV:='';
   XINFO.LINK_PRT:=0;
   exec('hint_link_address','zws')
?};
{? XINFO.LINK_SRV='wawsdro01.abs.assecobs.pl'
||
:: Serwer testowy
   ~~
|? XINFO.LINK_SRV='192.168.39.70'
||
:: Serwer produkcyjny
   _base:='/var/www/upload/uploads';
   _dst_ok:='/var/www/upload/archive_ok';
   _dst_err:='/var/www/upload/archive_err';
   {? _ok>0
   || _result:=gsub(_result,_base,_dst_ok)
   || _result:=gsub(_result,_base,_dst_err)
   ?};
::   {? _ok>0
::   || _result:=_dst_ok
::   || _result:=_dst_err
::   ?};
   ~~

|? envget('COMPUTERNAME')='CZEN524'
||
:: Instalacja WH
   _base:='p:\\mstats';
   _dst_ok:='p:\\mstats_ok';
   _dst_err:='p:\\mstats_err';
   {? _ok>0
   || _result:=gsub(_result,_base,_dst_ok)
   || _result:=gsub(_result,_base,_dst_err)
   ?};
::   {? _ok>0
::   || _result:=_dst_ok
::   || _result:=_dst_err
::   ?};
   ~~
||
:: Lokalna instalacja
:: _result:=envget('APPDATA')+_sep+'MacroBASE'+_sep+'statistics';
   _base:=envget('APPDATA')+_sep+'MacroBASE'+_sep+'stat';
   _dst_ok:=envget('APPDATA')+_sep+'MacroBASE'+_sep+'stat_ok';
   _dst_err:=envget('APPDATA')+_sep+'MacroBASE'+_sep+'stat_err';
   {? _ok>0
   || _result:=gsub(_result,_base,_dst_ok)
   || _result:=gsub(_result,_base,,_dst_err)
   ?};
::   {? _ok
::   || _result:=_dst_ok
::   || _result:=_dst_err
::   ?};
   ~~
?};
XINFO.LINK_SRV:='';
XINFO.LINK_PRT:=0;
_result


\ext
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Zwraca rozszerzenie plików do analizy. Z jakiejś przyczyny na serwerze produkcyjnym
::       nie są już plikami .mstat tylko .txt
::   WE:
::   WY:
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_result:='';

exec('czytaj','#stalesys');
{? XINFO.LINK_SRV=''
||
   XINFO.LINK_SRV:='';
   XINFO.LINK_PRT:=0;
   exec('hint_link_address','zws')
?};
{? XINFO.LINK_SRV='wawsdro01.abs.assecobs.pl'
||
:: Serwer testowy
   _result:='.mstat'
|? XINFO.LINK_SRV='192.168.39.70'
||
:: Serwer produkcyjny
   _result:='.txt'
|? envget('COMPUTERNAME')='CZEN524'
||
:: Instalacja WH
   _result:='.txt'
||
:: Lokalna instalacja
   _result:='.mstat'
?};
XINFO.LINK_SRV:='';
XINFO.LINK_PRT:=0;
_result


\env_parse
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Zwraca obiekt środowiska wczytująco parsującego
::   WY: obj_new
::  TAG: <PUBLICZNA>
::  OLD: \env_parse/stat_common.fml
::----------------------------------------------------------------------------------------------------------------------

::UWAGA: _fld, i _mth to formułki pomocnicze, zeby wygodniej tworzyć tablicę i komentować poszczególne jej elementy
::       powiedzmy, że to bedzie pole
         _fld:="31+form(_a)";
::       powiedzmy, że to bedzie metoda
         _mth:="31+form(_a)";

_env:=obj_new(
::             Zmienne pomocnicze
               _fld('DIR','Ścieżka do plików .mstat')
               ,_fld('DIALOG','Tryb dialogów: 0 - brak, 1 - FUN, 2 - KOMM')
               ,_fld('EXTENSION','Rozszerzenie plików które analizować')
               ,_fld('EXT_LOCAL','Rozszerzenie plików które analizować')
               ,_fld('SEPARATOR','Znak separujący informację w pliku .mstat')
               ,_fld('PROGRESS','Argumenty dla MultiProgressa')
               ,_fld('ST_SRC','Aktualnie przetwarzany rekord tabeli ST_SRC')
               ,_fld('TXT_ERROR','Stała tekstowa')
               ,_fld('TXT_WARNING','Stała tekstowa')
               ,_fld('TXT_SEP','Stała tekstowa')
               ,_fld('OBJ_S','Objekt S')
               ,_fld('OBJ_BF','Objekt BF')
               ,_fld('XPULPIT','Pulpit Xpertis')
               ,_fld('REG','Rejestr log')
               ,_fld('STACK','Stos objektów')
               ,_fld('ERRORS','Czy podczas parsowania powstały jakieś obsłużone komunikatami błędy')

::             tabele tymczasowe
               ,_fld('TAB_FILES','Tabela tymczasowa zawierająca listę plików')
               ,_fld('TAB_SRC','Tabela tymczasowa zawierająca treść odczytanych plików')
               ,_fld('TAB_ERR','Tabela tymczasowa zawierająca treść błędów parsowania')

::             indeksy tymczasowych tabel
               ,_fld('NDX_FILES1','Indeks tabeli tymczasowej .TAB_FILE')
               ,_fld('NDX_SRC1','Indeks tabeli tymczasowej .TAB_SRC')
               ,_fld('NDX_SRC2','Indeks tabeli tymczasowej .TAB_SRC')
               ,_fld('NDX_ERR1','Indeks tabeli tymczasowej .TAB_ERR')
               ,_fld('NDX_ERR2','Indeks tabeli tymczasowej .TAB_ERR')
               ,_fld('NDX_ERR3','Indeks tabeli tymczasowej .TAB_ERR')

::             METODY
               ,_mth('message','Dodaje komunikat o błędzie')
               ,_mth('push','Odłożenie objektu na stos')
               ,_mth('pop','Zdjęcie objektu ze stosu')
               ,_mth('log','Zapis do ST_LOG')
             );
_env.DIR:=exec('dir','st_common');
_env.DIALOG:=1;
_env.EXTENSION:=exec('ext','st_common');
_env.EXT_LOCAL:='.mstat';
_env.SEPARATOR:=',';
_env.PROGRESS:=exec('init','#progress');
_env.PROGRESS.TITLE:='Import plików: %1 z folderu: %2'@[_env.EXTENSION,_env.DIR];
_env.PROGRESS.HEIGHT:=15;
_env.ST_SRC:=null();
_env.TXT_ERROR:='Błąd';
_env.TXT_WARNING:='Ostrzeżenie';
_env.TXT_SEP:=';';
_env.XPULPIT:=0;
_env.REG:=exec('reg','st_common');
_env.STACK:=~~;
_env.ERRORS:=0;

_env.TAB_FILES:=exec('tab_files','st_common',_env);
_env.TAB_SRC:=exec('tab_src','st_common',_env);
_env.TAB_ERR:=exec('tab_errors','st_common',_env);

_env.message:="
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Obsługa komunikatów o błędach/ostrzeżeniach podczas parsowania
::   WE: _a - STRING - treść komunikatu
::       [_b] - INTEGER - nr ikony
::       [_c] - STRING - sekcja komunikatu
::       [_d] - STRING - rodzaj komunikatu, domyślnie 'error'
::----------------------------------------------------------------------------------------------------------------------
   _msg:=_a;
   _icon:=2;
   {? var_pres('_b')=type_of(0) | var_pres('_b')=type_of('')
   || _icon:=_b
   ?};

   _sect:='';
   {? var_pres('_c')=type_of('')
   || _sect:=_c
   ?};

   _kind:='error';
   {? var_pres('_d')=type_of('')
   || _kind:=_d
   ?};

   params_set(params_get());
   exec('parse_error','st_parse_core',.,_msg,3,_icon,_sect,_kind)
";
_env.push:="exec('push','st_common',.,_a,_b)";
_env.pop:="exec('pop','st_common',.,_a)";
_env.log:="exec('log','st_common',.,_a,_b,_c)";
_env



\tab_src
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Tworzy tabelkę tymczasową zawierającą zawartość plików
::   WE: _a - env - środowisko importu - wynik działania exec('env_imex','#b_export')
::   WY: tab_tmp
::  OLD: \tab_src/stat_common.fml
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=tab_tmp( 2
               ,'FILEPATH','STRING[255]' ,'Ścieżka do pliku'
               ,'TM_STAMP','REAL'        ,'Czas utworzenia rekordu'
               ,'FILENAME','STRING[255]' ,'Nazwa pliku'
               ,'FILEHASH','STRING[40]'  ,'Hash pliku'
               ,'KIND'    ,'STRING[20]'  ,'Rodzaj zapisu'
               ,'LINE'    ,'SYS_MEMO'    ,'Linia pliku'
               ,'SRC_DATE','DATE'        ,'Data zdarzenia z pliku'
               ,'SRC_TIME','TIME'        ,'Czas zdarzenia z pliku'
               );
_env.NDX_SRC1:=_tab.ndx_tmp(,,'FILEPATH',,,'TM_STAMP',,);
_env.NDX_SRC2:=_tab.ndx_tmp(,,'FILEPATH',,,'KIND',,,'TM_STAMP',,);
_tab


\tab_errors
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Tworzy tabelę tymczasową przeżywającą transakcję zawierającą komunikaty o błędach
::   WE: _a - env - środowisko importu - wynik działania exec('env_imex','#b_export')
::   WY: tab_tmp
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=tab_tmp_out_tr(1
                  ,'ST_SRC'    ,'STRING[16]' ,'Ref rekodu źródłowego ST_SRC'
                  ,'TM_STAMP'  ,'REAL'       ,'Czas utworzenia rekordu'
                  ,'MESSAGE'   ,'SYS_MEMO'   ,'Komunikat'@
                  ,'LINE'      ,'STRING[255]','Pierwsza linia komunikatu'
                  ,'ICON'      ,'STRING[20]' ,'Nr ikony'
                  ,'SECT'      ,'STRING[255]','Sekcja'
                  ,'KIND'      ,'STRING[20]' ,'Rodzaj'
                  ,'FILEPATH'  ,'STRING[255]','Ścieżka do pliku'
                  ,'FILENAME'  ,'STRING[255]','Nazwa pliku'
                  ,'LICENCE'   ,'INTEGER'    ,'Czy komunikat dotyczy licencji'
                  );
_env.NDX_ERR1:=_tab.ndx_tmp(,,'TM_STAMP',,);
_env.NDX_ERR2:=_tab.ndx_tmp(,,'ST_SRC',,,'LINE',,);
_env.NDX_ERR3:=_tab.ndx_tmp(,,'LICENCE',,,'TM_STAMP',,);
_tab


\tab_files
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Tworzy tabelkę tymczasową zawierającą nazwy plików w folderze
::   WE: _a - env - środowisko importu - wynik działania exec('env_imex','#b_export')
::   WY: tab_tmp
::  OLD: \tab_files/stat_common.fml
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=tab_tmp( 2
               ,'FILEPATH','STRING[255]' ,'Ścieżka do pliku'
               ,'FILENAME','STRING[255]' ,'Nazwa pliku'
               ,'FILEHASH','STRING[40]'  ,'Hash pliku'
               );
_env.NDX_FILES1=_tab.ndx_tmp(,,'FILEPATH',,,'FILENAME',,);
_tab


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Inicjalizuje niezbętne obiekty, otwiera maski itp
::   WE: [_a] - INTEGER - tryb komunikatów: 0, brak, [1] - na ekran, 2 - KOMM
::  TAG: <PUBLICZNA>
::  OLD: \init/stat_common.fml
::----------------------------------------------------------------------------------------------------------------------
_dialog:=1;
{? var_pres('_a')=type_of(0)
|| _dialog:=_a
?};
:: Inicjalizacja obiektów
exec('params','st_arch');

:: Otwarcie masek
exec('open','st_arch',,0,_dialog);
~~


\dialog_path
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Wyświetla dialog z pytaniem o wybór pliku
::   WE: _a - INTEGER - 1 - odczyt
::                      2 - zapis
::       [_b] - STRING - opcjonalny tytul okienka
::   WY: STRING - ścieżka lub '' jeżeli użytkownik zrezygnował
::  TAG: <PUBLICZNA>
:: ~OST: INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
_mode:=_a;
_result:='';
{? exec('interm','#system')>0
|| FUN.emsg(exec('interm_nacc_msg','#system'));
   return('')
?};

_txt:={? _mode=1 || 'Import pliku' || 'Eksport pliku' ?};
_force_txt:=~~;
{? var_pres('_b')=type_of('')
|| _force_txt:=_b
?};
{? type_of(_force_txt)=type_of('')
|| {? _force_txt<>''
   || _txt:=_force_txt
   ?}
?};

ctr_set('!application', 'filechooser','reset');
ctr_set('!application', 'filechooser','setMultiSelectionEnabled',0);
ctr_set('!application', 'filechooser','setFileSelectionMode','FILES_ONLY');
ctr_set('!application', 'filechooser','setDialogTitle',_txt);
{? _mode=1
|| _can_continue:=ctr_call('!application', 'filechooser','showOpenDialog')
|? _mode=2
|| _can_continue:=ctr_call('!application', 'filechooser','showSaveDialog')
?};
{? _can_continue>0
|| _result:=ctr_call('!application', 'filechooser','getSelectedFile')
?};
_result


\stat_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła na wartość początkowa dla zmiennych wykorzystywanych do statystyk
::----------------------------------------------------------------------------------------------------------------------
~~


\stat_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła przed redakcją dla zmiennych wykorzystywanych do statystyk
::----------------------------------------------------------------------------------------------------------------------
~~


\stat_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła po redakcji dla zmiennych wykorzystywanych do statystyk
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
_fld:=fld();
_res:=1;
{? _afld='S_PID'
|| {? _fld=''
   || VAR1.ST_SEST2:=null();
      win_disp()
   ||
      {? _fld=VAR1.ST_SEST2().ST_SESJ2().PID
      || 1
      ||
::       Jak wpisany PID niezgody z PID zapamiętanego refa ST_SEST2 to szukam pierwszego rekordu z danym PID
         ST_SEST2.cntx_psh();
         ST_SEST2.clear();
         {? ST_SEST2.find_tab(0,'ST_SESJ2','PID',':*',_fld)
         || VAR1.ST_SEST2:=ST_SEST2.ref()
         || _res:=0;
            FUN.info('Nie znaleziono sesji o podanym numerze PID.'@)
         ?};
         ST_SEST2.cntx_pop()
      ?}
   ?}
|? _afld='O_ID'
|| {? _fld=''
   || VAR1.ST_OBJ_W:=null();
      win_disp()
   || {? _fld=VAR1.ST_OBJ_W().ST_OBJ().IDENT
      || 1
      ||
::       Jak wpisany ID niezgody z ID zapamiętanego refa ST_OBJ_W to szukam pierwszego rekordu z danym ID
         ST_OBJ_W.cntx_psh();
         ST_OBJ_W.clear();
         {? ST_OBJ_W.find_tab(0,'ST_OBJ','IDENT',':*',_fld)
         || VAR1.ST_OBJ_W:=ST_OBJ_W.ref()
         || _res:=0;
            FUN.info('Nie znaleziono obiektu o podanym identyfikatorze.'@)
         ?};
         ST_OBJ_W.cntx_pop()
      ?}
   ?}
?};
_res


\stat_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła wyświetl przed dla zmiennych wykorzystywanych do statystyk
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
{? _afld='S_PID'
|| fld(VAR1.ST_SEST2().ST_SESJ2().PID)
|? _afld='O_ID'
|| fld(VAR1.ST_OBJ_W().ST_OBJ().IDENT)
?};
~~


\stat_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła nad F3 dla zmiennych wykorzystywanych do statystyk
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
_res:=~~;
{? _afld='S_PID'
|| ST_SEST2.cntx_psh();
   ST_SEST2.win_sel('SEL');
   {? ST_SEST2.select(,1)
   || _res:=ST_SEST2.ST_SESJ2().PID;
      VAR1.ST_SEST2:=ST_SEST2.ref()
   ?};
   ST_SEST2.cntx_pop()
|? _afld='O_ID'
|| ST_OBJ_W.cntx_psh();
   ST_OBJ_W.win_sel('SEL');
   {? ST_OBJ_W.select(,1)
   || _res:=ST_OBJ_W.ST_OBJ().IDENT;
      VAR1.ST_OBJ_W:=ST_OBJ_W.ref()
   ?};
   ST_OBJ_W.cntx_pop()
?};
_res


\reg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: Rejestr log
::   WE:
::   WY: obj
::----------------------------------------------------------------------------------------------------------------------
_reg:=obj_new(
   'ST_SEST2','ST_KHI','ST_APL','ST_OBJ_W','ST_PTH_W',
   'USER','ST_WER','AUTO');
_reg.ST_SEST2:=null();
_reg.ST_KHI:=null();
_reg.ST_APL:=null();
_reg.ST_OBJ_W:=null();
_reg.ST_PTH_W:=null();
_reg.USER:='';
_reg.ST_WER:=null();
_reg.AUTO:='N';
_reg


\obj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: STACK - objekt
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
obj_new('PREV','OBJ','ST_OBJ','ST_PTH')


\push
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: push
::   WE: _a - env
::       _b - obj
::       _c - ST_OBJ.ref()
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_obj:=_b;
_st_obj:=_c;

_result:=0;
_can_continue:=1;

_kind:='push';
_error:=_env.TXT_ERROR;
_warning:=_env.TXT_WARNING;
_stack_empty:=type_of(_env.STACK)=type_of(~~);
_st_wer:=_env.REG.ST_WER;

_obj_push:=exec('obj','st_common');
_obj_push.PREV:=_env.STACK;
_obj_push.OBJ:=_obj;
_obj_push.ST_OBJ:=_st_obj;
_idobj:=hash($_st_obj);
{? _idobj=''
||
   _env.message('%1: %2 - nie powiodło się ustalenie id objektu'@[ _error, _kind]);
   _can_continue:=0
||
   _st_pth_w:=null();
   _idp:=
      {? _stack_empty
      || ''
      || exec('FindAndGet','#table',ST_PTH,_env.STACK.ST_PTH,,"ST_PTH.ID",'')
      ?};
   _id:=hash(_idp+_idobj);
   _st_pth:=exec('FindInSet','#table','ST_PTH','ID',_id,,,1,,null());
   {? _st_pth=null()
   ||
      ST_PTH.blank();
      ST_PTH.ID:=_id;
      ST_PTH.IDP:=_idp;
      ST_PTH.ST_OBJ:=_st_obj;
      ST_PTH.STANDARD:='N';
      ST_PTH.AUTO:='N';
      _opis:=ST_PTH.ST_OBJ().OPIS;
::      ST_PTH.OPIS:=_opis;
      {? ~ST_PTH.add()
      ||
         _env.message('%1: %2 - ST_PTH.add()'@[ _error, _kind]);
         _can_continue:=0
      ||
:: generowanie ścieżki
         _pth:=
            {? _stack_empty
            || ''
            || exec('FindAndGet','#table',ST_PTH,_env.STACK.ST_PTH,,"ST_PTH.memo_txt(,1,'PTH')",'')
            ?}+
            '/'+
            _opis;
         ST_PTH.memo_set(_pth,'PTH');
         {? ~ST_PTH.memo_put(,'PTH')
         ||
            _env.message('%1: %2 - ST_PTH.memo_put()'@[ _error, _kind]);
            _can_continue:=0
         ||
            _st_pth:=ST_PTH.ref()
         ?}
      ?}
   ?};
   {? _can_continue>0
   ||
      ST_PTH_W.index('UNIQ');
      ST_PTH_W.prefix(_st_pth,_st_wer);
      {? ST_PTH_W.first()
      ||
         _st_pth_w:=ST_PTH_W.ref()
      ||
         ST_PTH_W.blank();
         ST_PTH_W.ST_PTH:=_st_pth;
         ST_PTH_W.ST_WER:=_st_wer;
         ST_PTH_W.STANDARD:=ST_PTH.STANDARD;
         ST_PTH_W.AUTO:=ST_PTH.AUTO;
         {? ~ST_PTH_W.add()
         ||
            _env.message('%1: %2 - ST_PTH_W.add()'@[ _error, _kind]);
            _can_continue:=0
         ||
            _st_pth_w:=ST_PTH_W.ref()
         ?}
      ?}
   ?};
   {? _can_continue>0
   ||
      _env.REG.ST_PTH_W:=_st_pth_w;
      _obj_push.ST_PTH:=_st_pth;
      {? ~_stack_empty || obj_del(_env.STACK) ?};
      _env.STACK:=_obj_push
   ?}
?};

{? _can_continue>0
|| _result:=1
?};
_result


\pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: pop
::   WE: _a - _env
::       _b - _obj.KIND zdejmowanego objektu ze stosu
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_kind:=_b;
_obj:=~~;
ST_RODZ.cntx_psh();
ST_RODZ.cntx_pop();
{? var_pres('STACK',_env)=type_of(~~)
||
   _env.STACK:=_obj
||
   _loop:=1;
   {!
   |? _loop
   |!
      _loop:=_env.STACK.OBJ.KIND<>_b;
      _obj:=_env.STACK.PREV;
      obj_del(_env.STACK);
      _env.STACK:=_obj;
      {? var_pres('STACK',_env)<>type_of(~~) || obj_del(_obj) ?};
      _loop:=_loop & var_pres('STACK',_env)<>type_of(~~)
   !}
?}


\log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: log
::   WE: _a - env
::       _b - obj
::       _c - ST_OBJ.ref()
::       _d - STRING - unikalny identyfikator grupujący
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_obj:=_b;
_st_obj:=_c;
_uid_grp:=_d;

_result:=0;
_can_continue:=1;

_kind:=_obj.KIND;
_st_rodz:=exec('FindInSet','#table','ST_RODZ','SYMBOL',_kind,,,1,,null());
_error:=_env.TXT_ERROR;
_warning:=_env.TXT_WARNING;
_st_wer:=_env.REG.ST_WER;
_env.REG.ST_OBJ_W:=null();
_stack_empty:=type_of(_env.STACK)=type_of(~~);

:: wersja
{? _st_wer=null()
||
   _env.message('%1: %2 - Nie ustalono wersji.'@[ _error, _kind]);
   _can_continue:=0
?};
:: objekt
{? _st_obj=null()
||
   _env.message('%1: %2 - Nie ustalono objektu.'@[ _error, _kind]);
   _can_continue:=0
?};
{? _can_continue>0
||
   ST_WER.cntx_psh();
   ST_OBJ.cntx_psh();
   ST_OBJ.prefix();
   {? ST_OBJ.seek(_st_obj)
   ||
      _data_wer:=exec('FindAndGet','#table',ST_WER,_st_wer,,"ST_WER.DATA",date(0,0,0));
      _data_st_obj:=ST_OBJ.OD_WER().DATA;
      {? _data_wer<>date(0,0,0)
            &
         (ST_OBJ.OD_WER=null() | _data_wer<_data_st_obj)
      ||
         ST_OBJ.OD_WER:=_st_wer;
         {? ~ST_OBJ.put()
         ||
            _env.message('%1: %2 - ST_OBJ.put()'@[ _error, _kind]);
            _can_continue:=0
         ?}
      ?}
   ?};
   ST_OBJ.cntx_pop();
   ST_WER.cntx_pop()
?};
:: objekt w wersji
{? _can_continue>0
||
   ST_OBJ_W.index('UNIQ');
   ST_OBJ_W.prefix(_st_obj,_st_wer);
   {? ST_OBJ_W.first()
   ||
      _env.REG.ST_OBJ_W:=ST_OBJ_W.ref()
   ||
      ST_OBJ_W.blank();
      ST_OBJ_W.ST_OBJ:=_st_obj;
      ST_OBJ_W.ST_WER:=_st_wer;
      ST_OBJ_W.STANDARD:=ST_OBJ.STANDARD;
      ST_OBJ_W.AUTO:=ST_OBJ.AUTO;
      {? ~ST_OBJ_W.add()
      ||
         _env.message('%1: %2 - ST_OBJ_W.add()'@[ _error, _kind]);
         _can_continue:=0
      ||
         _env.REG.ST_OBJ_W:=ST_OBJ_W.ref()
      ?}
   ?}
?};
:: log
{? _can_continue>0
||
:: zdejmujemy ze stosu IGW przed kolejnym IGW
   ST_RODZ.cntx_psh();
   {? _kind='IGW'
         &
      (~_stack_empty & _env.STACK.OBJ.KIND='IGW')
   ||
:: objekt ze stosu
      _env.pop('IGW')
   ?};
   ST_RODZ.cntx_pop();
:: objekt na stos
   _env.push(_obj,_st_obj);

   _st_sesta:=_env.REG.ST_SEST2;
   _st_khi:=_env.REG.ST_KHI;
   _st_apl:=_env.REG.ST_APL;
   _st_obj_w:=_env.REG.ST_OBJ_W;
   _st_pth_w:=_env.REG.ST_PTH_W;

   {? _st_sesta=null()
   ||
      _env.message('%1: %2 - Nie ustalono stanu sesji.'@[ _error, _kind]);
      _can_continue:=0

   |? _st_khi=null()
   ||
      _env.message('%1: %2 - Nie ustalono instancji kontrahenta.'@[ _error, _kind]);
      _can_continue:=0

   |? _st_apl=null()
   ||
      _env.message('%1: %2 - Nie ustalono aplikacji.'@[ _error, _kind]);
      _can_continue:=0

   |? _st_obj_w=null()
   ||
      _env.message('%1: %2 - Nie ustalono objektu w wersji.'@[ _error, _kind]);
      _can_continue:=0

   |? _st_pth_w=null()
   ||
      _env.message('%1: %2 - Nie ustalono ścieżki w wersji.'@[ _error, _kind]);
      _can_continue:=0
   ?};
   {? _can_continue>0
   ||
      ST_LOG.blank();
      ST_LOG.ST_SEST2:=_st_sesta;
      ST_LOG.ST_APL:=_st_apl;
      ST_LOG.ST_OBJ_W:=_st_obj_w;
      ST_LOG.ST_PTH_W:=_st_pth_w;
      ST_LOG.DATA:=_obj.DATE;
      ST_LOG.CZAS:=_obj.TIME;
      ST_LOG.EMPTY:='';
      ST_LOG.GROUP:='';
      ST_LOG.SOURCE:='';
      ST_LOG.ICON:='';
      ST_LOG.UID_GRP:=_uid_grp;
      ST_LOG.TM_ADD:=ST_LOG.tm_stamp();
      ST_LOG.LP:=exec('FindAndGet','#table',ST_SRC,_env.ST_SRC,,"LP",0);
      {? _kind='MA'
      ||
         ST_LOG.EMPTY:=_obj.Empty;
         ST_LOG.GROUP:=_obj.Group;
         ST_LOG.SOURCE:=_obj.Source

      |? _kind='BA'
      ||
         ST_LOG.GROUP:=_obj.Group;
         ST_LOG.ICON:=_obj.Icon

      |? _kind='FBA'
      ||
         ST_LOG.ICON:=_obj.Icon

      |? _kind='REPORT'
      ||
         ST_LOG.R_COPY:=_obj.Copy
      ?};
      ST_LOG.AUTO:=_env.REG.AUTO;
      {? ST_LOG.AUTO='N' || ST_LOG.AUTO:=ST_LOG.ST_PTH_W().AUTO ?};
      {? ST_LOG.AUTO='N' || ST_LOG.AUTO:=ST_LOG.ST_OBJ_W().AUTO ?};
      ST_LOG.ST_KHI:=_st_khi;
      _standard:=ST_LOG.ST_KHI().STANDARD;
      ST_LOG.STANDARD:=_standard;
      {? ST_LOG.STANDARD='N' || ST_LOG.STANDARD:=ST_LOG.ST_PTH_W().STANDARD ?};
      {? ST_LOG.STANDARD='N' || ST_LOG.STANDARD:=ST_LOG.ST_OBJ_W().STANDARD ?};
      ST_LOG.PATCH:=#_env.OBJ_S.PatchLevel;
      {? ~ST_LOG.add()
      ||
         _env.message('%1: %2 - ST_LOG.add()'@[ _error, _kind]);
         _can_continue:=0

      |? _standard='T'
      ||
         exec('FindAndGet','#table',ST_PTH_W,ST_LOG.ST_PTH_W,,"ST_PTH_W.STANDARD:='T'; ST_PTH_W.put()",,_standard);
         exec('FindAndGet','#table',ST_OBJ_W,ST_LOG.ST_OBJ_W,,"ST_OBJ_W.STANDARD:='T'; ST_OBJ_W.put()",,_standard)
      ?}
   ?}
?};

{? _can_continue>0
|| _result:=1
?};

_result


\obj1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new('kind',
   'table','acr','ident','title',
   'a_title','a_wyr',
   'b_title','b_ident',
   'popupite',
   'file','copy');
_obj.kind:='';
_obj.table:='';
_obj.acr:='';
_obj.ident:='';
_obj.title:='';
_obj.a_title:='';
_obj.a_wyr:='';
_obj.b_title:='';
_obj.b_ident:='';
_obj.popupite:='';
_obj.file:='';
_obj.copy:='';
_obj


\st_obj_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: ST_OBJ.ID
::   WE: _a - obj_new() - środowisko parsera, wynik działania exec('env_parse','st_common')
::       _b - obj_new() - objekt zawierający treść wiersza przetworzony na potrzeby st_obj, exec('obj1','st_common')
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_obj1:=_b;

_sep:=_env.TXT_SEP;

hash(
   _obj1.kind+_sep+
   _obj1.table+_sep+_obj1.acr+_sep+_obj1.ident+_sep+_obj1.title+_sep+
   _obj1.a_title+_sep+_obj1.a_wyr+_sep+
   _obj1.b_title+_sep+_obj1.b_ident+_sep+
   _obj1.popupite+_sep+
   _obj1.file+_sep+_obj1.copy+_sep
)


\st_obj_window
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: SW, EW, CW, GW
::   WE: _a - obj_new() - środowisko parsera, wynik działania exec('env_parse','st_common')
::       _b - obj_new() - obiekt zawierający treść wiersza, wynik działania exec('SWE','st_parse_obj')
::       _c - STRING - identyfikator grupujący (ST_SRC.UID_GRP)
::       _d - STRING - nazwa pliku
::   WY: 0 - porażka, przerywa transakcję i oznacza że plik został błędnie sparsowany
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_obj:=_b;
_uid_grp:=_c;
_filename:=_d;

_result:=0;
_can_continue:=1;

_kind:=_obj.KIND;
_kind1:=_obj.KIND;
{? _obj.KIND='IGW'
||
   _kind1:='SW'
?};
_st_rodz:=exec('FindInSet','#table','ST_RODZ','SYMBOL',_kind1,,,1,,null());
_error:=_env.TXT_ERROR;
_warning:=_env.TXT_WARNING;
_tab_tmp:='tmp';
_make:='make';
{? _can_continue>0
||
:: objekt
   _obj1:=exec('obj1','st_common');
   _obj1.kind:=_kind1;
   _obj1.table:={? 1+_obj.Table<>'_' || _obj.Table || _tab_tmp ?};
   _obj1.acr:={? _obj.Tmp='0' || _obj.Acr || _make ?};
   _obj1.ident:=_obj.Ident;
   _obj1.title:='';
   {? _obj1.table=_tab_tmp & _obj1.acr=_make
   ||
      {? _obj.TabComm<>'' || _obj.TabComm
      |? var_pres('Title',_obj)=type_of('') || _obj1.title:=_obj.Title
      ?}
   ?};
   _id:=exec('st_obj_id','st_common',_env,_obj1);
   ST_OBJ.index('ID');
   ST_OBJ.prefix(_id,);
   {? ~ST_OBJ.first()
   ||
      ST_OBJ.blank();
      ST_OBJ.ID:=_id;
      {? _obj1.table=_tab_tmp
      ||
         {? _obj1.title<>''
         ||
            _txt1:=_obj1.title;
            _txt2:={? _obj1.ident='' || _obj1.acr || _obj1.ident ?};
            ST_OBJ.TITLE:=_obj1.title

         |? _obj1.ident<>''
         ||
            _txt1:=_tab_tmp;
            _txt2:=_obj1.ident
         ||
            _txt1:='Tabela %1'[_tab_tmp];
            _txt2:=' - okno %1'[_make]
         ?}
      ||
         _txt1:='Nieznana tabela';
         {? _obj.TabComm<>'' || _txt1:=_obj.TabComm
         |? var_press(_obj1.table)=type_of(FIRMA) || _txt1:=($('%1.comment()'[_obj1.table]))()
         ?};
         _txt2:={? _obj1.ident='' || _obj1.acr || _obj1.ident ?}
      ?};
      _kind_o:={? 'SW|IGW'*_kind || 'S' || 1+_kind ?};
      ST_OBJ.OPIS:='(%1) %2 [%3]'[_kind_o,_txt1,_txt2];
      ST_OBJ.ST_RODZ:=_st_rodz;
      ST_OBJ.TABLE:=_obj1.table;
      ST_OBJ.ACR:=_obj1.acr;
      ST_OBJ.IDENT:=_obj1.ident;
::      ST_OBJ.STANDARD:={? 1+_obj1.table='Q' | 1+_obj1.acr='Q' | 1+gsub(_obj1.ident,'#','')='q' || 'N' || 'T' ?};
      ST_OBJ.STANDARD:='N';
      ST_OBJ.AUTO:='N';
      {? _obj.KIND<>'IGW' || ST_OBJ.TITLE:=_obj1.title ?};
      {? ~ST_OBJ.add()
      ||
         _env.message('%1: %2 - ST_OBJ.add()'@[ _error, _kind]);
         _can_continue:=0
      ?}
   ?};
:: log
   {? _can_continue>0
   ||
      _can_continue:=_env.log(_obj,ST_OBJ.ref(),_uid_grp)
   ?}
?};

{? _can_continue>0
|| _result:=1
?};
_result


\st_obj_title
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: DW, POPUP
::   WE: _a - obj_new() - środowisko parsera, wynik działania exec('env_parse','st_common')
::       _b - obj_new() - obiekt zawierający treść wiersza, wynik działania exec('SWE','st_parse_obj')
::       _c - STRING - identyfikator grupujący (ST_SRC.UID_GRP)
::       _d - STRING - nazwa pliku
::       [_e] - STRING - opcjonalny title, jeżeli nie podany to brany z _b.Title
::       [_f] - STRING - opcjonalny rodzaj opisu
::   WY: 0 - porażka, przerywa transakcję i oznacza że plik został błędnie sparsowany
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_obj:=_b;
_uid_grp:=_c;
_filename:=_d;
_title:='';
{? var_pres('_e')=type_of('')
|| _title:=_e
?};
_kind_o:='';
{? var_pres('_f')=type_of('')
|| _kind_o:=_f
?};

_result:=0;
_can_continue:=1;


_kind:=_obj.KIND;
_st_rodz:=exec('FindInSet','#table','ST_RODZ','SYMBOL',_kind,,,1,,null());
_error:=_env.TXT_ERROR;
_warning:=_env.TXT_WARNING;
{? _can_continue>0
||
   {? _title='' || _title:=_obj.Title ?};
:: objekt
   _obj1:=exec('obj1','st_common');
   _obj1.kind:=_kind;
   _obj1.title:=_title;
   _id:=exec('st_obj_id','st_common',_env,_obj1);
   ST_OBJ.index('ID');
   ST_OBJ.prefix(_id,);
   {? ~ST_OBJ.first()
   ||
      {? _kind_o='' || _kind_o:=1+_kind ?};
      ST_OBJ.blank();
      ST_OBJ.ID:=_id;
      ST_OBJ.ST_RODZ:=_st_rodz;
      ST_OBJ.OPIS:='(%1) %2'[_kind_o,_obj1.title];
      ST_OBJ.TITLE:=_obj1.title;
      ST_OBJ.STANDARD:='N';
      ST_OBJ.AUTO:='N';
      {? ~ST_OBJ.add()
      ||
         _env.message('%1: %2 - ST_OBJ.add()'@[ _error, _kind]);
         _can_continue:=0
      ?}
   ?};
:: log
   {? _can_continue>0
   ||
      _can_continue:=_env.log(_obj,ST_OBJ.ref(),_uid_grp)
   ?}
?};

{? _can_continue>0
|| _result:=1
?};
_result


\legenda_read
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Czyta systemowy plik z legendą i zwraca go jako tabela tymczasowa. Dopisuje przy okazji
::       aplikacyjne elementy
::   WY: tab_tmp
::  TAG: <PUBLICZNA>
:: ~OST: INFOPEN
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(3
   ,'LEVEL','INTEGER','Poziom'
   ,'TM_STAMP','REAL','TM_STAMP dodania'
   ,'SYMBOL','STRING[100]','Symbol'
   ,'NAME','STRING[200]','Nazwa'
   ,'KIND','STRING[40]','Rodzaj'
);

{? exec('interm','#system')
|| FUN.emsg(exec('interm_nacc_msg','#system'));
   return(_tab)
?};

_filepath:=exec('dialog_path','st_common',1);

_can_continue:=1;

{? _filepath<>''
|| _file:=fopen('@'+_filepath,'ur',,,1);
   {? _file.is_open()>0
   ||
      {? _can_continue>0
      ||
         {!
         |?
::          Czytam linię z pliku
            _line:=_file.fread();
::          Linię z pliku dodaję do tab tymczasowej
            {? _line<>'' & _line<>'\n' & 1+_line<>'#'
            || _tab.blank();
               _tab.TM_STAMP:=SYSLOG.tm_stamp();
               {? 1+_line=' '
               || _tab.LEVEL:=1
               ?};
               {? var_pres('_split')>100
               || obj_del(_split)
               ?};
               _split:=spli_str(_line,'"');

               _tab.SYMBOL:=exec('delspace','#string',_split[1]);
               _tab.KIND:=_tab.SYMBOL;
               {? _tab.KIND*'.'>0
               ||
                  {? var_pres('_split2')>100
                  || obj_del(_split2)
                  ?};
                  _split2:=spli_str(_tab.KIND,'.');
                  {? obj_len(_split2)>0
                  || _tab.KIND:=exec('delspace','#string',_split2[1])
                  ?}
               ?};
               {? obj_len(_split)>1
               || _tab.NAME:=exec('delspace','#string',_split[2])
               ?};
               _can_continue:=_tab.add()
            ?};
            _line<>'\n' & _can_continue>0
         !}
      ?}
   ?}
?};

:: Rodzaje obiektów aplikacyjnych
:: To co niżej odpowiada w pliku legendy zapisowi
::
:: A_DOMAIN "Dziedzina produktu"
::  A_DOMAIN.Symbol "Symbol dziedziny"
::
:: A_APPVERSION "Wersja aplikacji"
::  A_APPVERSION.AppVersion "Wersja aplikacji"
::
:: A_ACTION "Uruchomienie czynności"
::  A_ACTION.UID "UID czynności"
::  A_ACTION.Name "Nazwa czynności"
::
:: A_ACTIONE "Uruchomienie czynności"
::  A_ACTIONE.UID "UID czynności"
::  A_ACTIONE.Name "Nazwa czynności"
::
:: A_AUTO "Automatyczna"
::  A_ACTION.Auto "Automatyczna"

:: Rodzaj obiektu A_DOMAIN
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_DOMAIN';
_tab.KIND:='A_DOMAIN';
_tab.NAME:='Dziedzina produktu';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_DOMAIN.Symbol';
_tab.KIND:='A_DOMAIN';
_tab.NAME:='Symbol dziedziny';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_APPVERSION
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_APPVERSION';
_tab.KIND:='A_APPVERSION';
_tab.NAME:='Wersja aplikacji';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_APPVERSION.AppVersion';
_tab.KIND:='A_APPVERSION';
_tab.NAME:='Wersja aplikacji';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_ACTION
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_ACTION';
_tab.KIND:='A_ACTION';
_tab.NAME:='Uruchomienie czynności';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_ACTION.UID';
_tab.KIND:='A_ACTION';
_tab.NAME:='UID czynności';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_ACTION.Name';
_tab.KIND:='A_ACTION';
_tab.NAME:='Nazwa czynności';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_ACTIONE
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_ACTIONE';
_tab.KIND:='A_ACTIONE';
_tab.NAME:='Zakończenie czynności';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_ACTIONE.UID';
_tab.KIND:='A_ACTIONE';
_tab.NAME:='UID czynności';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_ACTIONE.Name';
_tab.KIND:='A_ACTIONE';
_tab.NAME:='Nazwa czynności';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_AUTO
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_AUTO';
_tab.KIND:='A_AUTO';
_tab.NAME:='Automatyczna';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_AUTO.Auto';
_tab.KIND:='A_AUTO';
_tab.NAME:='Automatyczna';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_ALERT
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_ALERT';
_tab.KIND:='A_ALERT';
_tab.NAME:='Uruchomienie zadania/zdarzenia biznesowego (alert)';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_ALERT.KIND_AL';
_tab.KIND:='A_ALERT';
_tab.NAME:='Rodzaj zdarzenia';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_ALERT.KOD';
_tab.KIND:='A_ALERT';
_tab.NAME:='Kod zdarzenia';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_ALERT.OPIS';
_tab.KIND:='A_ALERT';
_tab.NAME:='Opis zdarzenia';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_ALERT.AUTO';
_tab.KIND:='A_ALERT';
_tab.NAME:='Automatyczna';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_ALERT_E
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_ALERT_E';
_tab.KIND:='A_ALERT_E';
_tab.NAME:='Zakończenie zadania/zdarzenia biznesowego (alert)';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_ALERT_E.KIND_AL';
_tab.KIND:='A_ALERT_E';
_tab.NAME:='Rodzaj zdarzenia';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_ALERT_E.KOD';
_tab.KIND:='A_ALERT_E';
_tab.NAME:='Kod zdarzenia';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_ALERT_E.OPIS';
_tab.KIND:='A_ALERT_E';
_tab.NAME:='Opis zdarzenia';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_ALERT_E.AUTO';
_tab.KIND:='A_ALERT_E';
_tab.NAME:='Automatyczna';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_EDI
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_EDI';
_tab.KIND:='A_EDI';
_tab.NAME:='Uruchomienie EDI';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_EDI.KIND_EDI';
_tab.KIND:='A_EDI';
_tab.NAME:='Rodzaj EDI';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_EDI.CODE';
_tab.KIND:='A_EDI';
_tab.NAME:='Kod';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_EDI.NAME';
_tab.KIND:='A_EDI';
_tab.NAME:='Nazwa';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_EDI.AUTO';
_tab.KIND:='A_EDI';
_tab.NAME:='Automatyczna';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_EDIE
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_EDIE';
_tab.KIND:='A_EDIE';
_tab.NAME:='Zakończenie EDI';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_EDIE.KIND_EDI';
_tab.KIND:='A_EDIE';
_tab.NAME:='Rodzaj EDI';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_EDIE.CODE';
_tab.KIND:='A_EDIE';
_tab.NAME:='Kod';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_EDIE.NAME';
_tab.KIND:='A_EDIE';
_tab.NAME:='Nazwa';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_EDIE.AUTO';
_tab.KIND:='A_EDIE';
_tab.NAME:='Automatyczna';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_FOR_AKC
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_FOR_AKC';
_tab.KIND:='A_FOR_AKC';
_tab.NAME:='Uruchomienie formuły kontrolnej dla rejestrów';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_FOR_AKC.NAME';
_tab.KIND:='A_FOR_AKC';
_tab.NAME:='Nazwa';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_FOR_AKC_E
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_FOR_AKC_E';
_tab.KIND:='A_FOR_AKC_E';
_tab.NAME:='Zakończenie formuły kontrolnej dla rejestrów';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_FOR_AKC_E.NAME';
_tab.KIND:='A_FOR_AKC_E';
_tab.NAME:='Nazwa';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_AV
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_AV';
_tab.KIND:='A_AV';
_tab.NAME:='Uruchomienie schematu VAT';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_AV.CODE';
_tab.KIND:='A_AV';
_tab.NAME:='Kod';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_AV.DESC';
_tab.KIND:='A_AV';
_tab.NAME:='Opis';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_AV_E
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_AV_E';
_tab.KIND:='A_AV_E';
_tab.NAME:='Zakończenie schematu VAT';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_AV_E.CODE';
_tab.KIND:='A_AV_E';
_tab.NAME:='Kod';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_AV_E.DESC';
_tab.KIND:='A_AV_E';
_tab.NAME:='Opis';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_AUTOKSIE
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_AUTOKSIE';
_tab.KIND:='A_AUTOKSIE';
_tab.NAME:='Uruchomienie schematu księgowego';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
:: Parametry
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_AUTOKSIE.NAME';
_tab.KIND:='A_AUTOKSIE';
_tab.NAME:='Nazwa';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_AUTOKSIE.DESC';
_tab.KIND:='A_AUTOKSIE';
_tab.NAME:='Opis';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_AUTOKSIE.FROM';
_tab.KIND:='A_AUTOKSIE';
_tab.NAME:='Miejsce wywołania';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_AUTOKSIE
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_AUTOKSIE_E';
_tab.KIND:='A_AUTOKSIE_E';
_tab.NAME:='Zakończenie schematu księgowego';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
:: Parametry
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_AUTOKSIE_E.NAME';
_tab.KIND:='A_AUTOKSIE_E';
_tab.NAME:='Nazwa';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_AUTOKSIE_E.DESC';
_tab.KIND:='A_AUTOKSIE_E';
_tab.NAME:='Opis';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_AUTOKSIE_E.FROM';
_tab.KIND:='A_AUTOKSIE_E';
_tab.NAME:='Miejsce wywołania';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_OP_MOBIL
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_OP_MOBIL';
_tab.KIND:='A_OP_MOBIL';
_tab.NAME:='Wybór operacji na urządzeniu mobilnym';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_OP_MOBIL.NAME';
_tab.KIND:='A_OP_MOBIL';
_tab.NAME:='Nazwa';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_OP_MOBIL_E
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_OP_MOBIL_E';
_tab.KIND:='A_OP_MOBIL_E';
_tab.NAME:='Zakończenie wyboru operacji na urządzeniu mobilnym';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_OP_MOBIL_E.NAME';
_tab.KIND:='A_OP_MOBIL_E';
_tab.NAME:='Nazwa';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_GENIUS
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_GENIUS';
_tab.KIND:='A_GENIUS';
_tab.NAME:='Użycie geniuszu asystenta';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_GENIUS.Intention';
_tab.KIND:='A_GENIUS';
_tab.NAME:='Symbol intencji';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Rodzaj obiektu A_BI
_tab.blank();
_tab.LEVEL:=0;
_tab.SYMBOL:='A_BI';
_tab.KIND:='A_BI';
_tab.NAME:='Analizy BI';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

:: Parametry
_tab.blank();
_tab.LEVEL:=1;
_tab.SYMBOL:='A_BI.Name';
_tab.KIND:='A_BI';
_tab.NAME:='Nazwa analizy';
_tab.TM_STAMP:=SYSLOG.tm_stamp();
_tab.add();

_tab.prefix();
_tab


\stat_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: stat_add
::   WE: _a - id
::       _b - parametr 1
::       [_c] - parametr 2
::       [_] - parametr n
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_vp:=20.15;
_vr:='P.80';

_run:=user(11);
{? #_run>=_vp | _run>=_vr
||
   _ff:='stat_add(\'%1\''[ _a];
   {! _ii:=2.._ |! _ff+=',\'%1\''[_[_ii]] !};
   _ff+=')';
   ($_ff)()
?}


\reset_standard
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: Ustawia ST_OBJ_W.STANDARD:='N' i ST_PTH_W.STANDARD:='N'
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ST_OBJ_W.cntx_psh();
ST_OBJ_W.prefix();
ST_OBJ_W.for_each("ST_OBJ_W.STANDARD:='N'; ST_OBJ_W.put()");
ST_OBJ_W.cntx_pop();
ST_PTH_W.cntx_psh();
ST_PTH_W.prefix();
ST_PTH_W.for_each("ST_PTH_W.STANDARD:='N'; ST_PTH_W.put()");
ST_PTH_W.cntx_pop()


\analiza_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Uruchamia analizę procesów - z wczoraj i dzisiaj
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=exec('env','#b_stats');
params_set('env',_env);
_env.MODE:='PROC_ALL';
_env.TM_START:=exec('create','#tm_stamp',date()-1,time(0,0,0));
_env.TM_END:=exec('create','#tm_stamp',date(),time());
_env.select();
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:36 b963ce4ed896d5e088e7ce1a0a03ecca35a5b3b90e9799db5bfc3e22ede26d6b234b4cdbf0eaf6096755db48e944fba8211831fc19c5807a86983b0ac18853aa445a9d4b7d386ee597e7d9ef95ced16c06322fb00e4e575926e0da150a37801db60f7525af64f4d1015249d3eb70ebf43c501b9d8c3735452642f4f7f2711eb3
