:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: portal_paperless.fml
:: Utworzony: 21.05.2021
:: Autor: MB
::======================================================================================================================
:: Zawartość: Plik zawiera formuły wykorzystywane do obsługi wniosków na portalu HR bez papieru.
::======================================================================================================================


\tab_sign
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Tworzy tabelę z typami podpisów
::   WE:  _a  - długość pola z nazwą
::       [_b] - modyfikacje? [1]-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_naz_width:={? var_pres('_a')>0 || _a || 46 ?};
_naz_width-=4;
_mod:={? var_pres('_b')>0 || _b || 1 ?};
_tab:=exec('tabela_podpisow','portal_paperless');
_sel:=_tab.mk_sel('Typ podpisu'@,'P',,'#tsignwin',,,,,'U');
_tab.win_fld(_sel,,'SEL',,,-4,,,'Wybrany'@,,'Wybrany [1/0]'@,2,,"1","0");
_tab.win_fld(_sel,,'NAZ',,,_naz_width,,,'Nazwa'@,,'Nazwa'@);
_tab.win_fld(_sel,,'SKAN',,,-4,,,'Skan'@,,'Wymagany skan podpisu [1/0]'@,2,,"1","0");
{? _mod
|| _tab.win_act(_sel,,'Formuła','Wybierz'@,,,"exec('tsign_check','portal_paperless')","",1);
   _tab.win_btn(_sel,'text=%1,btn_label_align=center,panel=right,align=begin'['Wybierz'@],'menu:W');
   _tab.win_act(_sel,,'Formuła','Wymagany &skan'@,,,"exec('tsign_skan','portal_paperless')","");
   _tab.win_act(_sel,,'Rekord',,,,"exec('tsign_before_record','portal_paperless')","")
?};
_tab.win_sel(_sel);
_tab.first();
_tab


\tsign_check
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zaznaczenie typu podpisu
::----------------------------------------------------------------------------------------------------------------------
_nad:=cur_tab();
_tab:=cur_tab(1);
_tab.SEL:=~_tab.SEL;
_tab.put();
_val:=_nad.memo_txt(,1,'TYPESIGN');
{? _tab.SEL
|| _val+=_tab.ID
|| _val:=gsub(_val,_tab.ID,'')
?};
_nad.memo_set(_val,'TYPESIGN');
_nad.memo_put(,'TYPESIGN');
_nad.put();
~~


\tsign_before_record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Rekord przed dla typu podpisu
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);
_gray:='';
{? _tab.ID<>'R'
|| _gray:='S'
?};
_tab.actions_grayed(_tab.win_sel('?'),_gray);
~~

\tsign_skan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Akcja wymagany skan tabeli z typami podpisów
::----------------------------------------------------------------------------------------------------------------------
_nad:=cur_tab();
_tab:=cur_tab(1);
_tab.SKAN:=~_tab.SKAN;
_tab.put();
_val:=_nad.memo_txt(,1,'TYPESIGN');
{? ~_tab.SKAN
|| _val+='0'
|| _val:=gsub(_val,'0','')
?};
_nad.memo_set(_val,'TYPESIGN');
_nad.memo_put(,'TYPESIGN');
_nad.put();
~~


\etypyatt_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Wyświetlenie typów załączników powiązanych z typem dokumentu w obiegu
::  OLD: \etypyatt_sel/!zws_par_ptyp.fml
::----------------------------------------------------------------------------------------------------------------------
ETYPYATT.index('NAZWA'); ETYPYATT.prefix(ETYPY.ref());
ETYPYATT.win_sel('WER');
ETYPYATT.hdr_sel();
ETYPYATT.hdr_sel(' - '+ETYPY.NAZWA);
VAR_DEL.delete('TSign');
_sign:=TSign:=exec('tab_sign','portal_paperless');
_grp:=ETYPYATT.grp_make('Typy załączników'@,,'#etypyattgrp',,,,,'normal');
ETYPYATT.grp_sel(_grp,,'WER',,"exec('etypyatt_ar','portal_paperless')");
ETYPYATT.grp_splt(_grp,,'horizontal','bottom',15);
ETYPYATT.grp_sel(_grp,_sign,_sign.win_sel('?'),,,,,5);
ETYPYATT.win_sel(_grp);
EDIT_VAR.SLO_TYP:='ZAL';
ETYPYATT.select();
VAR_DEL.delete('TSign')


\typy_zal_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zwraca tabelę tymczasową z typami załaczników
::   WE: [_a] - formuła zaznaczająca typ załacznika
::       [_b] - typ wniosku
::       [_c] - tworzyć okno
::----------------------------------------------------------------------------------------------------------------------
_fml:={? var_pres('_a')<=0 || ~~ |? type_of(_a)=type_of("") || _a || $_a ?};
_typ:={? var_pres('_b')>0 || _b || null ?};
_win:={? var_pres('_c')>0 || _c ?};
_tab:=tab_tmp(1,
   'NAZ','STRING[150]','Nazwa',
   'SYSTEM','INTEGER','Systemowy',
   'REF','INTEGER','ref',
   'SEL','INTEGER','Zaznaczenie',
   'WYM','INTEGER','Wymagany',
   'TYPESIGN','SYS_MEMO','Podpisy'
);
{? _typ
|| ETYPYATT.cntx_psh();
   ETYPYATT.index('SLO_NAZ'); ETYPYATT.prefix(_typ);
   {? ETYPYATT.first()
   || {!
      |? _tab.NAZ:=ETYPYATT.SLO_NAZ().NAZWA;
         _tab.SYSTEM:=SLO_NAZ.SYSTEM='T';
         _tab.REF:=#SLO_NAZ.ref();
         _tab.SEL:={? var_pres('_fml')>0 || _fml() ?};
         _tab.add();
         {? ETYPYATT.TYPESIGN
         || _tab.memo_set(ETYPYATT.memo_txt(,1,'TYPESIGN'),'TYPESIGN');
            _tab.memo_put(,'TYPESIGN')
         ?};
         ETYPYATT.next()
      !}
   ?};
   ETYPYATT.cntx_pop()
|| _typ:=exec('FindInSet','#table','SLO_TYP','SYMBOL','ZAL','ZAL');
   SLO_NAZ.cntx_psh();
   SLO_NAZ.index('NAZWA'); SLO_NAZ.prefix(_typ);
   {? SLO_NAZ.first()
   || {!
      |? _tab.NAZ:=SLO_NAZ.NAZWA;
         _tab.SYSTEM:=SLO_NAZ.SYSTEM='T';
         _tab.REF:=#SLO_NAZ.ref();
         _tab.SEL:={? var_pres('_fml')>0 || _fml() ?};
         _tab.add();
         SLO_NAZ.next()
      !}
   ?};
   SLO_NAZ.cntx_pop()
?};
_tab


\typy_zal_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zwraca okno wertowania dla typów załaczników
::   WE:  _a  - tabela z typami załaczników
::       [_b] - modyfikacje? [1]-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_mod:={? var_pres('_b')>0 || _b || 1 ?};
_sel:=_tab.mk_sel('Typy załączników','P',,'#typyzaledok',,,,,'U');
_tab.win_fld(_sel,,'NAZ',,,50);
_tab.win_fld(_sel,,'SEL',,,,,,'Dozwolony',,,2,,"1","0");
_tab.win_fld(_sel,,'WYM',,,,,,'Wymagany',,,2,,"1","0");
{? _mod
|| _tab.win_act(_sel,,'Formuła','Wybierz',,,"
      _tab:=cur_tab();
      _tab.SEL:=~_tab.SEL;
      {? ~_tab.SEL
      || _tab.WYM:=0
      ?};
      _tab.put()
   ","",1,1);
   _tab.win_act(_sel,,'Formuła','Zmień wy&magalność',,,"
      _tab:=cur_tab();
      _tab.WYM:=~_tab.WYM;
      {? _tab.WYM
      || _tab.SEL:=1
      ?};
      _tab.put()
   ","",,1);
   _tab.win_act(_sel,,'Formuła','Zakończ',,,"
      _par:=params_get();
      _tab:=cur_tab();
      _tab.cntx_psh();
      _tab.index(_par.index);
      _tab.prefix(1);
      _sel:=_tab.first();
      _tab.cntx_pop();
      {? _sel
      || sel_exit()
      || FUN.info('Nie wybrano typów załacznika.')
      ?}
   ");
   _tab.win_btn(_sel,'text=%1,btn_label_align=center,panel=right,align=begin'['Wybierz'@],'menu:W');
   _tab.win_btn(_sel,'text=%1,btn_label_align=center,panel=right,align=begin'['Zmień wy&magalność'@],'menu:M');
   _tab.win_btn(_sel,'text=%1,btn_label_align=center,panel=bottom,align=begin'['Zakończ'@],'menu:Z')
?};
_sel


\etypyatt_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Dołaczenie typu załacznika do typy dokumentu w obiegu
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('typy_zal_tab','portal_paperless',"
   ETYPYATT.cntx_psh();
   ETYPYATT.index('SLO_NAZ'); ETYPYATT.prefix(ETYPY.ref(),SLO_NAZ.ref());
   _sel:=ETYPYATT.first();
   ETYPYATT.cntx_pop();
   _sel
");
_sel:=_tab.mk_sel('Typy załączników','P',,'#typyzaledok',,,,,'U');
_tab.win_fld(_sel,,'NAZ',,,50);
_tab.win_fld(_sel,,'SYSTEM',,,-4,,,,,,2,,"1","0");
_tab.win_act(_sel,,'Formuła','Wybierz',,,"
   _tab:=cur_tab();
   _slo_naz:=exec('FindAndGet','#table','SLO_NAZ',_tab.REF,SLO_NAZ.name());
   {? _slo_naz
   || ETYPYATT.cntx_psh();
      ETYPYATT.index('SLO_NAZ'); ETYPYATT.prefix(ETYPY.ref());
      {? ~ETYPYATT.find_key(_slo_naz)
      || ETYPYATT.prefix();
         ETYPYATT.ETYPY:=ETYPY.ref();
         ETYPYATT.SLO_NAZ:=_slo_naz;
         ETYPYATT.add()
      ?};
      ETYPYATT.cntx_pop();
      sel_exit()
   ?}
","",1,1);
_tab.win_act(_sel,,'Formuła','Dołącz',,,"
   _tab:=cur_tab();
   SLO_NAZ.cntx_psh();
   SLO_NAZ.index('NAZWA'); SLO_NAZ.prefix();
   SLO_NAZ.blank();
   SLO_NAZ.memo_set('','MEMO_R');
   SLO_NAZ.memo_set('','MEMO_Z');
   SLO_NAZ.win_edit('ZAL');
   {? SLO_NAZ.edit(\"exec('slo_naz_ae','!zws_par_ptsl')\")
   || {? SLO_NAZ.add()
      || SLO_NAZ.memo_get(,'MEMO_R',1);
         SLO_NAZ.memo_put(,'MEMO_R');
         SLO_NAZ.memo_get(,'MEMO_Z',1);
         SLO_NAZ.memo_put(,'MEMO_Z');
         SLO_NAZ.put();
         _tab.NAZ:=SLO_NAZ.NAZWA;
         _tab.REF:=#SLO_NAZ.ref();
         _tab.add()
      ?}
   ?};
   SLO_NAZ.cntx_pop()
");
_tab.win_act(_sel,,'Formuła','Popraw',,,"
   _tab:=cur_tab();
   SLO_NAZ.cntx_psh();
   SLO_NAZ.index('NAZWA');
   SLO_NAZ.prefix();
   {? SLO_NAZ.seek(_tab.REF,)
   || SLO_NAZ.win_edit('ZAL');
      SLO_NAZ.efld_opt('ZAL','editable='+$(SLO_NAZ.SYSTEM<>'T'),SLO_NAZ,'NAZWA');
      SLO_NAZ.memo_get(,'MEMO_R',0);
      SLO_NAZ.memo_get(,'MEMO_Z',0);
      {? SLO_NAZ.edit(\"exec('slo_naz_ae','!zws_par_ptsl')\")
      || SLO_NAZ.memo_put(,'MEMO_R');
         SLO_NAZ.memo_put(,'MEMO_Z');
         {? SLO_NAZ.put()
         || _tab.NAZ:=SLO_NAZ.NAZWA;
            _tab.put()
         ?}
      ?}
   || FUN.info('Nie znaleziono typu załącznika.');
      _tab.del()
   ?};
   SLO_NAZ.cntx_pop()
");
_tab.win_act(_sel,,'Formuła','Usuń',,,"
   _tab:=cur_tab();
   SLO_NAZ.prefix();
   {? SLO_NAZ.seek(_tab.REF,)
   || {? SLO_NAZ.count()
      || FUN.info('Typ załącznika używany w systemie.\nUsunięcie niemożliwe.')
      |? FUN.ask('Czy usunąć typ załącznika?')
      || {? SLO_NAZ.del(,1)
         || _tab.del()
         ?}
      ?}
   || FUN.info('Nie znaleziono typu załącznika.');
      _tab.del()
   ?}
");
_tab.win_act(_sel,,'Formuła','Legenda',,,"exec('legenda','color','ETYPYATT#01')");
_tab.win_act(_sel,,'Rekord',,,,"
   _tab:=cur_tab();
   _sys:=exec('FindAndGet','#table','SLO_NAZ',_tab.REF,SLO_NAZ.name(),'SYSTEM');
   _gray:={? _sys='T' || 'U' || '' ?};
   _tab.actions_grayed(_tab.win_sel('?'),_gray);
   {? _tab.SEL || Color.fnd_kol('ETYPYATT#01#01') || '' ?}
");
_tab.win_sel(_sel);
EDIT_VAR.SLO_TYP:='ZAL';
_tab.select()


\etypyatt_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Po odświeżeniu okna z typami załączników
::----------------------------------------------------------------------------------------------------------------------
_nad:=cur_tab();
_jest:=_nad.get();
_tab:=TSign;
{? _jest
|| _val:={? _jest || _nad.memo_txt(,1,'TYPESIGN') || '' ?};
   _cur:=_tab.ref();
   _tab.prefix();
   {? _tab.first()
   || {!
      |? _tab.SEL:={? _val*_tab.ID || 1 ?};
         {? _tab.ID='R'
         || _tab.SKAN:={? _val*'0' || 0 || 1 ?}
         ?};
         _tab.put();
         _tab.next()
      !}
   ?};
   _tab.seek(_cur)
|| _tab.prefix('BRAK',)
?};
TSign.actions_grayed(TSign.win_sel('?'),{? _jest || '' || 'W' ?});
grp_disp(TSign,TSign.win_sel('?'));
1


\typy_zal_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Wymagane typy załączników czynności akceptacji wniosków
::   WE:  _a  - bieżąca wartość parametru
::       [_b] - możliwe modyfikacje: [1]-tak 0-nie
::   WY: Nowa wartość parametru lub ~~ gdy brak zmiany
::----------------------------------------------------------------------------------------------------------------------
_lista_str:=_a;
_mod:={? var_pres('_b')>0 || _b || 1 ?};
_typ_str:=exec('get_type','portal_paperless');
_typ:=null;
_objT:=exec('obj_typ_dok','obiegi2');
{? _typ_str<>''
|| _to:=exec('FindInSet','#table','TYPOBIEG','UNIK','Obieg wniosków');
   {? _to
   || _objT.set(_typ_str);
      ETYPY.cntx_psh();
      ETYPY.index('UNIK_WP'); ETYPY.prefix(_to,_objT.W_PORTAL,_objT.NAZWA,);
      {? ETYPY.first()
      || _typ:=ETYPY.ref()
      ?};
      ETYPY.cntx_pop()
   ?}
?};
_tab:=exec('typy_zal_tab','portal_paperless',,_typ);
_i2:=_tab.ndx_tmp('',1,'SEL',,0);
params_set('index',_i2);
_sel:=exec('typy_zal_win','portal_paperless',_tab,_mod);
_tab.win_sel(_sel);
_tab.hdr_sel();
_tab.hdr_sel({? _typ_str<>'' & _typ || ' - '+_objT.NAZWA || '' ?});
{? _lista_str<>''
|| _tab2:=exec('typy_zal_get','portal_paperless',_lista_str);
   {? _tab2.first()
   || {!
      |? {? _tab.find_key(_tab2.NAZWA,)
         || _tab.SEL:=1;
            _tab.WYM:=_tab2.WYM;
            _tab.memo_set(_tab2.TSIGN,'TYPESIGN');
            _tab.memo_put(,'TYPESIGN');
            _tab.put()
         ?};
         _tab2.next()
      !}
   ?}
?};
VAR_DEL.delete('TSign');
_sign:=TSign:=exec('tab_sign','portal_paperless',66,_mod);
_grp:=_tab.grp_make('Typy załączników i ich podpisy',,'#typzalsel1',,,,,'normal');
_tab.grp_sel(_grp,,_sel,,"exec('etypyatt_ar','portal_paperless')",,,,,,,,'maximized_with_title');
_tab.grp_splt(_grp,,'horizontal','bottom',20);
_tab.grp_sel(_grp,_sign,_sign.win_sel('?'),,"",,,,,,,,'maximized_with_title');
_tab.win_sel(_grp);
{? _tab.select()
|| _old:=_lista_str;
   _lista_str:='';
   _tab.index(_i2);
   _tab.prefix(1);
   {? _tab.first()
   || {!
      |? _lista_str+=_tab.NAZ;
         _par:='';
         {? _tab.WYM || _par+='W' ?};
         {? _tab.TYPESIGN
         || _par+=_tab.memo_txt(,1,'TYPESIGN')
         ?};
         {? _par<>''
         || _lista_str+=','+_par
         ?};
         _lista_str+=';';
         _tab.next()
      !};
      _lista_str:=_lista_str-1
   ?};
   _ret:=_lista_str;
   B_ELE.cntx_psh();
   {? _old<>_lista_str & B_PREL.B_ELE().SYMBOL='OBE_FAW_DARP' & _typ
   || ETYPY.cntx_psh();
      ETYPY.prefix();
      {? ETYPY.seek(_typ)
      || ETYPY.put(,1)
      ?};
      ETYPY.cntx_pop()
   ?};
   B_ELE.cntx_pop()
|| _ret:=~~
?};
VAR_DEL.delete('TSign');
_ret


\get_type
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zwraca typ wniosku dla bieżącego procesu
::----------------------------------------------------------------------------------------------------------------------
_typ:='';
B_PREL.cntx_psh();
B_PREL.index('PROC');
B_PREL.prefix(B_PREL.B_PROC,'B_ACTION',);
B_ELE.cntx_psh();
{? B_PREL.first()
|| {!
   |? {? B_PREL.B_ELE().SYMBOL='OBE_FAW_DARP'
      || B_VALPRT.cntx_psh();
         B_VALPRT.index('PREL'); B_VALPRT.prefix(B_PREL.ref(),'T','IN','TYP_DOK',);
         {? B_VALPRT.first()
         || _typ:=B_VALPRT.VALUE
         ?};
         B_VALPRT.cntx_pop();
         0
      || B_PREL.next()
      ?}
   !}
?};
B_ELE.cntx_pop();
B_PREL.cntx_pop();
_typ


\mp_run_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Parametry uruchamiania obiegu wniosków bez papieru
::----------------------------------------------------------------------------------------------------------------------
_par:=obj_new(
   'TYPE_NAME','PROCESS_SYMBOL','PROCESS_VERSION','EDOKUM','P',
   'ATT',
   'add',
   'errMsg'
);

:: Nazwa typu wniosku
_par.TYPE_NAME:='';

:: Symbol procesu
_par.PROCESS_SYMBOL:='';

:: Wersja procesu
_par.PROCESS_VERSION:='';

:: Tabela do przechowywania załączników
_par.ATT:=tab_tmp(1,
   'TYPE','STRING[100]','Typ załącznika',
   'BLOB','BLOBRAW','Załacznik',
   'ID','STRING[16]','Identyfikator',
   'EDOKUMZ','STRING[16]','Załacznik wniosku'
);

:: Metoda dodająca załącznik
:: _a - nazwa typu załacznika
:: _b - załacnik: BLOBRAW lub scieżka do pliku
:: _c - identyfiakto - np. ref sql rekordu z którtego pochodzi załacznik
_par.add:="
   _typ:=_a;
   _file:=_b;
   _id:={? var_pres('_c')>0 & type_of(_c)=type_of('') || _c || '' ?};
   {? var_pres('_file')>0
   || _att:=.ATT;
      _att.TYPE:=_typ;
      _att.ID:=_id;
      {? _att.add()
      || {? type_of(_file)=type_of(null) & ref_name(_file)*'blob'
         || _att.BLOB:=_file;
            _att.put()
         |? type_of(_file)=type_of('') & fexists(_file,1+_file<>'@')
         || _loc:=1+_file='@';
            {? _loc
            || _file:=1-_file
            ?};
            _att.bl_put('BLOB',_file,~_loc);
            _att.put()
         ?}
      ?}
   ?}
";

:: Utworzony wniosek w obiegu - EDOKUM.uidref()
_par.EDOKUM:=~~;

_par


\mp_run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Uruchamia obieg wniosku bez papieru
::   WE: _a - parametry uruchamiania
::----------------------------------------------------------------------------------------------------------------------
_par:={? var_pres('_a')>0 || _a || return(~~) ?};

_type_name:={? var_pres('TYPE_NAME',_par)>0 & type_of(_par.TYPE_NAME)=type_of('') || _par.TYPE_NAME || return(~~) ?};
_process_symbol:={? var_pres('PROCESS_SYMBOL',_par)>0 & type_of(_par.PROCESS_SYMBOL)=type_of('') || _par.PROCESS_SYMBOL || '' ?};
_process_version:={? var_pres('PROCESS_VERSION',_par)>0 & type_of(_par.PROCESS_VERSION)=type_of('') || _par.PROCESS_VERSION || '' ?};
_prac:={? var_pres('P',_par)>0 & type_of(_par.P)=type_of(null()) || _par.P || ~~ ?};

{? var_pres('_prac')>0
|| _p_uidref:=exec('FindAndGet','#table',P,_prac,,"uidref()",'');
   _p_id:=exec('getPid','portal_core',_p_uidref);
   {? _p_id=0
   || _par.errMsg:='Dane pracownika, którego dotyczy wniosek nie zostały jeszcze zsynchronizowane z Portalem HR.\n'
             'Nie można uruchomić procesu obiegu dokumentów Paperless HR.';
      return()
   ?}
?};

_to:=exec('FindInSet','#table','TYPOBIEG','UNIK','Obieg wniosków');
{? _to=null || return(~~) ?};
_objT:=exec('obj_typ_dok','obiegi2');
_objT.set(_type_name);
ETYPY.cntx_psh();
ETYPY.index('UNIK_WP'); ETYPY.prefix(_to,'P',_objT.NAZWA,);
_type:={? ETYPY.first() || ETYPY.ref() || null ?};
ETYPY.cntx_pop();
{? _type=null || return(~~) ?};

{? _process_symbol='' | _process_version=''
|| ETYPPROC.cntx_psh();
   ETYPPROC.index('DISP');
   ETYPPROC.prefix(_type);
   {? ETYPPROC.first()
   || _process_symbol:=ETYPPROC.PROC_SYM;
      _process_version:=ETYPPROC.PROC_VER
   ?};
   ETYPPROC.cntx_pop()
?};
_ref:=~~;
EDOKUM.cntx_psh();
EDOKUM.prefix();
EDOKUM.blank(1);
EDOKUM.TYP:=_type;
EDOKUM.FIRMA:=REF.FIRMA;
EDOKUM.USERS:=OPERATOR.USER;
EDOKUM.DOSTAWCA:=EDOKUM.USERS().OSOBA;
P.cntx_psh();
P.index('OSOZATR');
P.prefix(EDOKUM.FIRMA,EDOKUM.DOSTAWCA,);
{? P.first()
|| EDOKUM.OSOBAWWW:=$P.ref()
?};
P.cntx_pop();
EDOKUM.REFPRAC:={? var_pres('_prac')>0 & type_of(_prac)=type_of(null) || $_prac || EDOKUM.OSOBAWWW ?};
EDOKUM.STATUS:='';
EDOKUM.DATAW:=date();
EDOKUM.CZASW:=time();
EDOKUM.FIRMA:=REF.FIRMA;
ROK_F.cntx_psh();
ROK_F.index('ROKPOCZ'); ROK_F.prefix(EDOKUM.FIRMA);
{? ROK_F.find_le(date(EDOKUM.DATAW~1,1,1))
|| EDOKUM.ROK_F:=ROK_F.ref()
?};
ROK_F.cntx_pop();
{? EDOKUM.ROK_F
|| EDOKUM.use('skid_v'+($(EDOKUM.ROK_F().POCZ_ROK~1)+2));
   _ref:=exec('EDOKUM_add','portal_wnioski');
   {? var_pres('_ref')>0
   || _edokum:=EDOKUM.ref();
::    dodanie pól z definicji wniosku
      _par.errMsg:=exec('edk_atr_dolacz','obiegi',0,0,0);
::    uzupełnienie wymaganych pól wniosku
      {? _par.errMsg='' & var_pres('_prac')>0 & type_of(_prac)=type_of(null)
      || exec('atr_put','portal_walidacja','PracownikIdERP',$_prac);
         exec('atr_put','portal_walidacja','PersonFromRequestId',$_p_id)
      ?};
      _att:=_par.ATT;
      {? _att.first()
      || EDOKUMZ.cntx_psh();
         EDOKUMZ.use('skid_n'+(ref_name(_ref)+2));
         EDOKUMZ.index('NAZWA');
         EDOKUMZ.prefix(EDOKUM.ref());
         ETYPYATT.cntx_psh();
         ETYPYATT.index('NAZWA');
         ETYPYATT.prefix(EDOKUM.TYP);
         {!
         |? {? ETYPYATT.find_key(_att.TYPE,)
            || _naz:=_att.bl_info('BLOB','NAME');
               {? EDOKUMZ.find_key(_naz,)
               || EDOKUMZ.EDOKUM:=_att.BLOB;
                  EDOKUMZ.put()
               || EDOKUMZ.cntx_psh();
                  EDOKUMZ.prefix();
                  EDOKUMZ.blank(1);
                  EDOKUMZ.DOKUM:=EDOKUM.ref();
                  EDOKUMZ.DATE:=date();
                  EDOKUMZ.TIME:=time();
                  EDOKUMZ.USER:=EDOKUM.USERS().KOD;
                  EDOKUMZ.EDOKUM:=_att.BLOB;
                  EDOKUMZ.NAZWA:=_naz;
                  EDOKUMZ.TYP_ZAL:=ETYPYATT.SLO_NAZ;
                  {? EDOKUMZ.add()
                  || _att.EDOKUMZ:=$EDOKUMZ.ref(); _att.put()
                  ?};
                  EDOKUMZ.cntx_pop()
               ?}
            ?};
            _att.next()
         !};
         ETYPYATT.cntx_pop();
         exec('EDOKUMZS_upd','portal_paperless');
         EDOKUMZ.cntx_pop()
      ?};

      _params:=exec('mp_run_a','#b__box');
      _params.ACT_UID:='OBE_FAW_DARP';
      _params.AKCJA:='Portal';
      _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
      exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'EDOKUM',EDOKUM.ref());
      _typ:=EDOKUM.TYP().NAZWA;
      {? _typ<>''
      || {? ETYPY.W_PORTAL<>'' & ETYPY.W_PORTAL<>'N'
         || _typ+=';'+ETYPY.W_PORTAL
         ?}
      ?};
      exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYP_DOK',_typ);
      _params.PROC_START:='T';
      _params.CONTEXT:=obj_new('STATUS','START','B_PREL','B_PRELS');
      _params.CONTEXT.STATUS:=0;
      _params.CONTEXT.START:=1;
      _params.CONTEXT.B_PREL:='';
      _params.CONTEXT.B_PRELS:='';
      {? _process_symbol<>'' & _process_version<>''
      || _params.PROC_SYM:=_process_symbol;
         _params.PROC_VER:=_process_version
      ?};
      VAR_DEL.delete('StartProc');
      StartProc:=1;
      exec('mp_run','#b__box',_params);
      _akc:=StartProc=2;
      VAR_DEL.delete('StartProc');
      {? _params.CONTEXT.STATUS
      || _par.EDOKUM:=_ref;
         EDOKUMZ.cntx_psh();
         EDOKUMZ.use('skid_n'+(ref_name(_ref)+2));
         EDOKUMZ.index('NAZWA');
         EDOKUMZ.prefix(_edokum);
         {? EDOKUMZ.first()
         || {!
            |? EDOKUMZ.B_PREL:=_params.CONTEXT.B_PREL;
               EDOKUMZ.B_PRELS:=_params.CONTEXT.B_PRELS;
               EDOKUMZ.put();
               EDOKUMZ.next()
            !}
         ?};
         EDOKUMZ.cntx_pop()
      || exec('EDOKUM_del','portal_wnioski',_edokum,0);
         _par.errMsg:='Nie udało się dodać rekordu kluczowego tabeli EDOKUM'
      ?}
   || _par.errMsg:='Nie udało się dodać rekordu kluczowego tabeli EDOKUM'
   ?}
|| _par.errMsg:='Nie udało się dodać rekordu kluczowego tabeli EDOKUM'
?};
EDOKUM.cntx_pop();
~~


\mp_run_test
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Test uruchamiania wniosku bez papieru
::----------------------------------------------------------------------------------------------------------------------
_ret:='';
_proc:=exec('mp_run_proc_sel','portal_paperless');
{? _proc.select()
|| _tzal:=_proc.memo_txt(,1,'MEMO');
   {? _tzal<>''
   || _zal:=exec('typy_zal_get','portal_paperless',_tzal);
      {? _zal.first()
      || _par:=exec('mp_run_a','portal_paperless');
         _par.TYPE_NAME:=_proc.TYPE;

         PROGRESS.set(_zal.size(),'Generowanie załaczników ...');
         _obj:=exec('mp_run_test_obj','portal_paperless');
         {!
         |? PROGRESS.next();
            _fn:=exec('mp_run_test_file','portal_paperless',_zal.NAZWA);
            {? _fn<>''
            || _obj.add(_zal.NAZWA,_fn,_zal.WYM,_zal.TSIGN);
               ferase(_fn,0)
            ?};
            _zal.next()
         !};
         PROGRESS.close();

         {? _obj.select()
         || _tab:=_obj.TAB;
            {? _tab.first()
            || {!
               |? {? _tab.BLOB
                  || _par.add(_tab.NAZ,_tab.BLOB)
                  ?};
                  _tab.next()
               !}
            ?};
            exec('mp_run','portal_paperless',_par);
            _ret:=_par.EDOKUM
         ?}
      ?}
   ?}
?};
_ret


\mp_run_test_file
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Typ złącznika
::   WE: _a - typ załacznika
:: ~OST: INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_file_name:=$SYSBLOB.tm_stamp()+'.pdf';
_pdf:='@'+tmp_dir()+'\\'+_file_name;
{? exec('rep_exec','#b_report','','wsp_usr_sign',,,_pdf,0,1,,,'W')
|| _pdf
|| ''
?}


\mp_run_test_obj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zwraca tabelę z załacznikami do dodania do wniosku
::   WE: _a - nazwy załaczników
:: ~OST: INBLGET,INBLPUT,INBLVIEW,INFERASE,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_zal:={? var_pres('_a')>0 & type_of(_a)=type_of('') || _a || '' ?};

_tab:=tab_tmp(1,
   'NAZ','STRING[150]','Typ załącznika',
   'BLOB','BLOBRAW','Plik',
   'WYM','INTEGER','Wymagany',
   'TSIGN','STRING[4]','Typy podpisów',
   'SK','INTEGER','Kwalifikowany',
   'SN','INTEGER','Niekwalifikowany',
   'SR','INTEGER','Ręczny',
   'SZ','INTEGER','Zwykły'
);
{? _zal<>''
|| _zal_tab:=spli_str(_zal,',');
   {! _ii:=1..obj_len(_zal_tab)
   |! _tab.blank();
      _tab.NAZ:=_zal_tab[_ii];
      _tab.add()
   !}
?};
_tab.fld_fml('NAZ','BEFORE_EDIT',"0");
_o:=_tab.mk_sel('Załączniki','P',,'#filetestsign',,,,,'U');
_tab.win_fld(_o,,'NAZ',,,20,,,'Typ');
_tab.win_fld(_o,,'BLOB','NAME',,100,,,'Plik');
_tab.win_fld(_o,,'WYM',,,,,,'Wymagany',,,2,,"1","0");
_tab.win_fld(_o,,'SK',,,-4,,,'Kwalifikowany',,,2,,"1","0");
_tab.win_fld(_o,,'SN',,,-4,,,'Niekwalifikowany',,,2,,"1","0");
::_tab.win_fld(_o,,'TSIGN',,,,,,'Typy podpisów');
::_tab.win_act(_o,1,'Dołącz',,,,"","",1);
::_tab.win_act(_o,,'Dołącz',,,,"","",1);
_tab.win_act(_o,,'Popraw',,,,"","",1);
_tab.win_act(_o,,'Usuń',,,,,,,1);
_tab.win_act(_o,,'Formuła','Poka&ż',,,"
   _tab:=cur_tab();
   _tab.bl_view('BLOB')
");
_tab.win_act(_o,,'Formuła','Podp&isz',,,"
   _tab:=cur_tab();
   _fn:=_tab.bl_info('BLOB','NAME');
   {? -(_fn+4)<>'.pdf'
   || FUN.info('Podpis dostępny tylko dla plików PDF.'@)
   || _fn2:=$SYSLOG.tm_stamp+'.pdf';
      _pth:=tmp_dir()+'/'+_fn2;
      {? _tab.bl_get('BLOB','@'+_pth,0)
      || {? sign('PAdES','@'+_pth)
         || _tab.bl_put('BLOB','@'+_pth,0,,_fn);
            _tab.put()
         ?};
         ferase('@'+_pth,0)
      ?}
   ?}
");
_tab.win_act(_o,,'Formuła','Podpi&sy',,,"
   _tab:=cur_tab();
   _fn:=_tab.bl_info('BLOB','NAME');
   {? -(_fn+4)<>'.pdf'
   || FUN.info('Akcja dostępna tylko dla plików PDF.'@)
   || _obj:=exec('ESIGN','#object');
      _obj.start();
      _obj.v_blob_add(_tab,'BLOB');
      _res:=_obj.verify(1);
      {? _res.status=1
      || _stab:=_res.TSIGN;
         _win:=exec('sign_tab','bloby',_stab);
         _stab.win_sel(_win);
         _stab.select()
      ?};
      _obj.stop()
   ?}
");
_tab.win_act(_o,,'Formuła','Zakończ',,,"sel_exit()");
_tab.win_act(_o,,'Rekord',,,,"
   _tab:=cur_tab();
   _gray:='';
   {? ~_tab.BLOB
   || _gray+='ISŻ'
   ?};
   {? _tab.WYM
   || _gray+='U'
   ?};
   _tab.actions_grayed(_tab.win_sel('?'),_gray);
   ''
");
_tab.win_sel(_o);

_obj:=obj_new(
   'TAB',
   'select','add'
);
_obj.TAB:=_tab;
_obj.select:=".TAB.select()";
_obj.add:="
   _tab:=.TAB;
   _tab.blank();
   _tab.NAZ:=_a;
   _tab.WYM:=_c;
   _tab.TSIGN:={? var_pres('_d')>0 || _d || '' ?};
   _tab.SK:=_tab.TSIGN*'K'>0;
   _tab.SN:=_tab.TSIGN*'N'>0;
   _tab.SR:=_tab.TSIGN*'R'>0;
   _tab.SZ:=_tab.TSIGN*'Z'>0;
   {? _tab.add()
   || _tab.bl_put('BLOB',_b,{? 1+_b='@' || 0 || 1 ?});
      _tab.put()
   ?}
";
_obj


\mp_run_proc_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zwraca tabelę z procesami paperless
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1,
   'SYMBOL','STRING[100]','Nazwa',
   'NAME','STRING[45]','Nazwa',
   'VER','STRING[5]','Wersja',
   'MEMO','SYS_MEMO','Parametry',
   'B_PREL','STRING[16]','Element procesu',
   'TYPE','STRING[50]','Typ wniosku'
);
B_PROC.cntx_psh();
B_PROC.index('FIRMA'); B_PROC.prefix(REF.FIRMA,'T',);
{? B_PROC.first()
|| _b_ele:=exec('FindInSet','#table','B_ELE','SYMBOL','OBE_FAW_DARP',,,1);
   {? _b_ele
   || {!
      |? B_PREL.cntx_psh();
         B_PREL.index('PREL');
         B_PREL.prefix(B_PROC.ref(),_b_ele);
         {? B_PREL.first()
         || _zal:='';
            _typ:='';
            B_VALPRT.cntx_psh();
            B_VALPRT.index('PREL');
            B_VALPRT.prefix(B_PREL.ref(),'T','IN','TYPY_ZAL',);
            {? B_VALPRT.first() || _zal:=B_VALPRT.VALUE ?};
            B_VALPRT.prefix(B_PREL.ref(),'T','IN','TYP_DOK',);
            {? B_VALPRT.first() || _typ:=B_VALPRT.VALUE ?};
            B_VALPRT.cntx_pop();
            {? _zal<>''
            || _tab.blank();
               _tab.SYMBOL:=B_PROC.SYMBOL;
               _tab.NAME:=B_PROC.NAME;
               _tab.VER:=B_PROC.VER;
               _tab.B_PREL:=$B_PREL.ref();
               _tab.TYPE:=_typ;
               {? _tab.add()
               || _tab.memo_set(_zal,'MEMO');
                  _tab.memo_put(,'MEMO');
                  _tab.put()
               ?}
            ?}
         ?};
         B_PREL.cntx_pop();
         B_PROC.next()
      !}
   ?}
?};
B_PROC.cntx_pop();
_wer:=_tab.mk_sel('Procesy paperless','P',,'#procpaperless',,,,,'U');
_tab.win_fld(_wer,,'SYMBOL',,,20,,,'Symbol');
_tab.win_fld(_wer,,'NAME',,,50,,,'Nazwa');
_tab.win_fld(_wer,,'VER',,,10,,,'Wersja');
_tab.win_fld(_wer,,'TYPE',,,20,,,'Typ wniosku');
_tab.win_act(_wer,,'Formuła','Wybierz',,,"sel_exit()",,1);
_tab.win_act(_wer,,'Formuła','Typy &załączników',,,"
   _tab:=cur_tab();
   B_PREL.cntx_psh();
   B_PREL.prefix();
   {? B_PREL.seek(_tab.B_PREL)
   || exec('typy_zal_akc','portal_paperless',_tab.memo_txt(,1,'MEMO'),0)
   ?};
   B_PREL.cntx_pop()
");
_tab.win_sel(_wer);
_tab


\tabela_podpisow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Tabela podpisów
::   WE:
::   WY: [TABELA]
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1,
   'NAZ','STRING[20]','Nazwa'@,
   'ID','STRING[1]','Identyfikator'@,
   'SEL','INTEGER','Wybrany'@,
   'SKAN','INTEGER','Skan'@
);
_add:="
   _tab:=_a;
   _tab.blank(1);
   _tab.NAZ:=_b;
   _tab.ID:=_c;
   {? var_pres('_d')>0
   || _tab.SKAN:=_d
   ?};
   _tab.add()
";
_add(_tab,'Kwalifikowany','K');
_add(_tab,'Niekwalifikowany','N');
_add(_tab,'Odręczny','R',1);
_add(_tab,'Zwykły','Z');
_tab


\f3_typ_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Klawisz F3 dla pola OBIEGI.TYP_ZAL
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('typy_zal_act','portal_paperless');
::_tab:=sql('
::   select SLO_NAZ.NAZWA, SLO_NAZ.REFERENCE as REF
::   from ETYPYATT join SLO_NAZ
::   where ETYPYATT.ETYPY=:_a
::   order by 1',EDOKUM.TYP
::);
{? fld()<>''
|| _tab.find_key(fld())
|| _tab.first()
?};
_o:=_tab.mk_sel('Typy załaczników','P',,'#typzalsel3',,,,,'U');
_tab.win_fld(_o,,'NAZWA',,,80,,,'Nazwa');
_tab.win_fld(_o,,'WYM',,,-4,,,'Wymagany',,,2,,"1","0");
_tab.win_act(_o,,'Formuła','Wybierz',,,"sel_exit()",,1);
_tab.win_sel(_o);
{? _tab.select(,1,3)
|| _tab.NAZWA
?}


\ae_typ_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Po redakcji pola OBIEGI.TYP_ZAL
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
_fld:=fld();
{? _fld<>''
|| _tab:=exec('typy_zal_act','portal_paperless');
   {? _tab.find_key(_fld)
   || fld(_tab.NAZWA);
      EDOKUMZ.TYP_ZAL:=exec('FindAndGet','#table','SLO_NAZ',_tab.REF)
   || FUN.info('Nie znaleziono typu załącznika \'%1\' związanego z typem wniosku.'@[_fld]);
      _ret:=0
   ?}
|| EDOKUMZ.TYP_ZAL:=null
?};
_ret


\typy_zal_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zwraca tabelę z typami załączników dla czynności
::   WE: [_a] - identyfikator czynności procesu B_PREL, domyślnie bieżaca czynność wniosku
::----------------------------------------------------------------------------------------------------------------------
_b_prel:={? var_pres('_a')>0 || _a || EDOKUM.B_PREL ?};
EDOKPAR.cntx_psh();
EDOKPAR.use('skidh_'+(ref_name(EDOKUM.ref())+2));
EDOKPAR.index('UNIK');
EDOKPAR.prefix(EDOKUM.ref(),_b_prel,);
{? EDOKPAR.first()
|| _txt:=EDOKPAR.memo_txt(,1,'TYPY_ZAL')
|| _txt:=''
?};
EDOKPAR.cntx_pop();
_tab:=exec('typy_zal_get','portal_paperless',_txt);
_i2:=_tab.ndx_tmp('',1,'NAZWA',,0);
_tab.index(_i2);
_tab


\typy_zal_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zwraca tabele z typami załaczników
::   WE: _a - wartość parametru czynności TYPY_ZAL
::----------------------------------------------------------------------------------------------------------------------
_lista_str:={? var_pres('_a')>0 & type_of(_a)=type_of('') || _a || '' ?};
_tab:=tab_tmp(1,
   'WYM','INTEGER','Wymagane',
   'REF','INTEGER','ref slo_naz',
   'NAZWA','STRING[150]','Nazwa',
   'TSIGN','STRING[5]','Typy podpisów'
);
{? _lista_str<>''
|| SLO_NAZ.cntx_psh();
   SLO_NAZ.index('NAZWA'); SLO_NAZ.prefix(exec('slo_typ','ext_slo','ZAL'));
   _lista:=spli_str(_lista_str,';');
   {! _ii:=1..obj_len(_lista)
   |! _zal:=spli_str(_lista[_ii],',');
      {? obj_len(_zal)>1
      || _ost:=_zal[obj_len(_zal)];
         _ost:=gsub(_ost,'W','');
         _ost:=gsub(_ost,'K','');
         _ost:=gsub(_ost,'N','');
         _ost:=gsub(_ost,'Z','');
         _ost:=gsub(_ost,'R','');
         _ost:=gsub(_ost,'0','');
         {? _ost<>''
         || {! _ii:=2..obj_len(_zal)
            |! _zal[1]+=','+_zal[_ii]
            !};
            _zal[2]:=''
         || {! _ii:=2..obj_len(_zal)-1
            |! _zal[1]+=','+_zal[_ii]
            !};
            _zal[2]:=_zal[obj_len(_zal)]
         ?}
      ?};
      {? SLO_NAZ.find_key(_zal[1],)
      || _tab.blank(1);
         _tab.REF:=#SLO_NAZ.ref();
         _tab.NAZWA:=SLO_NAZ.NAZWA;
         {? obj_len(_zal)>1
         || {? _zal[2]*'W' || _tab.WYM:=1 ?};
            _zal[2]:=gsub(_zal[2],'W','');
            _tab.TSIGN:=_zal[2]
         ?};
         _tab.add()
      ?};
      &_zal
   !};
   SLO_NAZ.cntx_pop()
?};
_tab


\chk_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Sprawdzanie wymaganych załączników podczas zakończenia rejestracji wniosku paperless
::   WE: [_a] - wartość parametru wejściowego TYPY_ZAL czynności winioskowych
::       [_b] - czy dodawać komunikaty: [1]-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
_txt:='';
{? var_pres('_a')>0 & type_of(_a)=type_of('')
|| _txt:=_a
|| EDOKPAR.cntx_psh();
   {? exec('szuk_edokpar','obiegi')
   || _txt:=EDOKPAR.memo_txt(,1,'TYPY_ZAL')
   ?};
   EDOKPAR.cntx_pop()
?};
_kom:={? var_pres('_b')>0 || _b || 1 ?};

{? _txt<>''
||
:: exec('add_kom','obiegi',1,1,'Stop techniczny');
   EDOKUMZ.cntx_psh();
   EDOKUMZ.use('skid_n'+(ref_name(EDOKUM.ref())+2));
   EDOKUMZ.index('TYPY_ZAL');
   EDOKUMZ.prefix(EDOKUM.ref());
   SLO_NAZ.cntx_psh();
   SLO_NAZ.prefix();
   _tab:=exec('typy_zal_get','portal_paperless',_txt);
   _tab.prefix(1);
   {? _tab.first()
   || {!
      |? {? SLO_NAZ.seek(_tab.REF,)
         || {? ~EDOKUMZ.find_key(SLO_NAZ.ref())
            || {? _kom
               || exec('add_kom','obiegi',1,1,'Brak wymaganego załącznika typu: %1.'@[SLO_NAZ.NAZWA])
               ?};
               _ret:=0
            ?}
         ?};
         _tab.next()
      !}
   ?};
   _skan_ref:=exec('slo_naz','ext_slo','ZAL','Skan');
   {? EDOKUMZ.first()
   || _tv:=tab_tmp(1,
         'FN','STRING[255]','Nazwa pliku',
         'BLOB','BLOBRAW','BLOB',
         'WYM','INTEGER','Wymagane',
         'WSIGN','STRING[5]','Wymagane podpisy',
         'TSIGN','STRING[255]','Podpisany',
         'REF','STRING[16]','ref'
      );
      _i2:=_tab.ndx_tmp('',1,'REF',,0);
      _tab.index(_i2); _tab.prefix();
      EDOKUMZS.cntx_psh();
      EDOKUMZS.use('skids_'+(ref_name(EDOKUMZ.ref())+2));
      EDOKUMZS.index('USER');
      _l_skan:=0;
      _l_hand:=0;
      {!
      |? {? _tab.find_key(#EDOKUMZ.TYP_ZAL) & _tab.TSIGN<>'' & _tab.TSIGN<>'0'
         || _tv.FN:=EDOKUMZ.bl_info('EDOKUM','NAME')+' ('+EDOKUMZ.TYP_ZAL().NAZWA+')';
            _tv.WSIGN:=_tab.TSIGN;
            _tv.BLOB:=EDOKUMZ.EDOKUM;
            _tv.REF:=$EDOKUMZ.ref();
            _tv.WYM:=_tab.WYM;
            EDOKUMZS.prefix(EDOKUMZ.ref(),OPERATOR.USER);
            {? EDOKUMZS.first()
            || {!
               |? _zn:=EDOKUMZS.TYPE;
                  {? _tv.TSIGN*_zn=0
                  || _tv.TSIGN+=_zn
                  ?};
                  {? _zn='R' & _tv.WSIGN*'0'=0
                  || _l_hand+=1
                  ?};
                  EDOKUMZS.next()
               !}
            ?};
            _tv.add()
         ?};
         {? EDOKUMZ.USERS=OPERATOR.USER & EDOKUMZ.TYP_ZAL=_skan_ref
         || _l_skan+=1
         ?};
         EDOKUMZ.next()
      !};
      EDOKUMZS.cntx_pop();
      {? _l_skan<_l_hand
      || exec('add_kom','obiegi',1,1,
            'Liczba wymaganych załączników ze skanem podpisu (%1) '
            'jest mniejsza niż liczba podpisów odręcznych (%2).'@[$_l_skan,$_l_hand]
         )
      ?};
      _tab.ndx_drop(_i2);
      {? _tv.first()
      || {!
         |? {? _tv.WYM
            || {? _tv.TSIGN=''
               || {? _kom
                  || exec('add_kom','obiegi',1,1,
                        'Załącznik: %1 - brak podpisu lub certyfikat nie jest zarejestrowany w magazynie certyfikatów.'@[_tv.FN]
                     )
                  ?};
                  _ret:=0
               || _sig:=0;
                  {? _tv.WSIGN*'K' & -_tv.TSIGN*'k' || _sig+=1 ?};
                  {? _tv.WSIGN*'N' & (-_tv.TSIGN*'n' | -_tv.TSIGN*'k') || _sig+=1 ?};
                  {? _tv.WSIGN*'R' & (-_tv.TSIGN*'r' | -_tv.TSIGN*'n' | -_tv.TSIGN*'k') || _sig+=1 ?};
                  {? _tv.WSIGN*'Z' & (-_tv.TSIGN*'z' | -_tv.TSIGN*'r' | -_tv.TSIGN*'n' | -_tv.TSIGN*'k') || _sig+=1 ?};
                  {? _sig=0
                  || {? _kom
                     || exec('add_kom','obiegi',1,1,
                           'Załącznik: %1 - inny format podpisu niż wymagany.'@[_tv.FN]
                        )
                     ?};
                     _ret:=0
                  ?}
               ?}
            ?};
            _tv.next()
         !}
      ?}
   ?};
   SLO_NAZ.cntx_pop();
   EDOKUMZ.cntx_pop()
?};
_ret


\trigger
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Trigger dla tebeli ETYPYATT
::   WE:  _a  - typ triggera:
::       'ba' - przed add, 'aa' - po add,
::       'bd' - przed del, 'ad' - po del
::       [_b] - wynik operacji del/add
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_pres('_a')=type_of('') || _a || '' ?};
_ok:={? var_pres('_b')>0 || _b || _typ='bd' ?};
{? _typ='ba' | _typ='ad'
|| ETYPYATT.cntx_psh();
   ETYPYATT.index('S1'); ETYPYATT.prefix(ETYPYATT.SLO_NAZ);
   {? ~ETYPYATT.first()
   || SLO_NAZ.cntx_psh();
      SLO_NAZ.prefix();
      {? SLO_NAZ.seek(ETYPYATT.SLO_NAZ)
      || SLO_NAZ.put(,1)
      ?};
      SLO_NAZ.cntx_pop()
   ?};
   ETYPYATT.cntx_pop()
?};
{? _ok
|| _nazwa:=exec('_wydanie_zasw','portal_walidacja').name;
   _obieg:=exec('FindInSet','#table','TYPOBIEG','UNIK','Obieg wniosków',,,1,,null);
   _zapo:=exec('FindInSet','#table','ETYPY','UNIK_WP',_nazwa,_obieg,,1,'P',null);
   {? ETYPYATT.ETYPY=_zapo & (_typ='aa' | _typ='bd')
   || SLO_NAZ.cntx_psh();
      {? SLO_NAZ.seek(ETYPYATT.SLO_NAZ)
      || _oper:={? _typ='aa' || 'add' |? _typ='bd' || 'del' || '' ?};
         exec('porsloit_oper','portal_slowniki',_oper,SLO_NAZ.NAZWA,,,,'ZaswiadczenieNazwa')
      ?};
      SLO_NAZ.cntx_pop()
   ?}
?};
{? 1+_typ='b' || 1 || ~~ ?}


\ETYPY_akc_json
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zwraca warunki akceptacji wniosku podczas jego rejestracji w postaci JSON
::----------------------------------------------------------------------------------------------------------------------
_typ_zal:='';
_b_role:=null;
_jeden:=0;
ETYPPROC.cntx_psh();
ETYPPROC.index('UNIK'); ETYPPROC.prefix(REF.FIRMA,ETYPY.ref());
{? ETYPPROC.first()
|| B_PROC.cntx_psh();
   B_PROC.index('SYMVER');
   B_PROC.prefix(REF.FIRMA,ETYPPROC.PROC_SYM,ETYPPROC.PROC_VER,);
   {? B_PROC.first()
   || _act:={? ETYPY.W_PORTAL='D' || 'OBE_FDL_DBRP' || 'OBE_FAW_DARP' ?};
      _b_ele:=exec('FindInSet','#table','B_ELE','SYMBOL',_act,,,1);
      {? _b_ele
      || B_PREL.cntx_psh();
         B_PREL.index('PREL');
         B_PREL.prefix(B_PROC.ref(),_b_ele);
         {? B_PREL.first()
         || B_VALPRT.cntx_psh();
            B_VALPRT.index('PREL'); B_VALPRT.prefix(B_PREL.ref(),'T','IN','TYPY_ZAL',);
            {? B_VALPRT.first()
            || _typ_zal:=B_VALPRT.VALUE
            ?};
            B_VALPRT.prefix(B_PREL.ref(),'T','IN',);
            {? B_VALPRT.find_key('B_ROLE')
            || _str:=B_VALPRT.VALUE;
               {? _str<>''
               || _b_role:=exec('FindInSet','#table','B_ROLE','UNIK',_str,REF.FIRMA,,1,,null)
               ?}
            ?};
            {? _b_role=null & B_VALPRT.find_key('B_ROLEF')
            || _fml:=B_VALPRT.VALUE;
               {? _fml<>''
               || _b_role:=($_fml)()
               ?}
            ?};
            {? B_VALPRT.find_key('JEDEN_OP') & B_VALPRT.VALUE<>''
            || _jeden:=B_VALPRT.VALUE='Tak'
            ?};
            B_VALPRT.cntx_pop()
         ?};
         B_PREL.cntx_pop()
      ?}
   ?};
   B_PROC.cntx_pop()
?};
ETYPPROC.cntx_pop();
_jman:=exec('json_man','__jsonm','{}');
_jman.setObject(_pathAC:=_jman.addChildElement('','AcceptanceCondition'),'[]');
_tab:=exec('typy_zal_get','portal_paperless',_typ_zal);
{? _tab.first()
|| _jman.setObject(_pathACE:=_jman.addChildElement(_pathAC,''),'{}');
   exec('akc_json','portal_paperless',_jman,_tab,_pathACE)
?};
{? _b_role
|| exec('B_ROLE_usr_json','portal_seod',_jman,_pathAC,_b_role,_jeden)
?};
_jman.getJSON()


\akc_json
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Ustawia element AcceptanceCondition
::   WE: _a - obiekt JMAN
::       _b - tabela tymczasowa z typami załaczników
::       _c - element nadrzędny w json
::----------------------------------------------------------------------------------------------------------------------
_jman:=_a;
_zal:=_b;
_pathACE:=_c;
{? _zal.first()
||
:: _jman.setObject(_pathAC:=_jman.addChildElement(_path,'AcceptanceCondition'),'[]');
:: _jman.setObject(_pathACE:=_jman.addChildElement(_pathAC,''),'{}');
:: _jman.setObject(_pathACE:=_jman.addChildElement(_path,'AcceptanceCondition'),'{}');
   _jman.setValue(_jman.addChildElement(_pathACE,'DataGroup'), 'Attachment');
   _jman.setValue(_jman.addChildElement(_pathACE,'Required'), 1);
   _jman.setValue(_jman.addChildElement(_pathACE,'CanEdit'), 1);
   _jman.setObject(_pathAs:=_jman.addChildElement(_pathACE,'AttachmentKinds'),'[]');
   {!
   |? _jman.setObject(_pathA:=_jman.addChildElement(_pathAs,''),'{}');
      _jman.setValue(_jman.addChildElement(_pathA,'AttachmentKind'), _zal.NAZWA);
      _jman.setValue(_jman.addChildElement(_pathA,'Required'), {? _zal.WYM || 'true' || 'false' ?});
      _jman.setValue(_jman.addChildElement(_pathA,'Allowed'), 'true');
      _jman.setValue(_jman.addChildElement(_pathA,'HandWritten'),{? _zal.TSIGN*'R' || 'true' || 'false' ?});
      _jman.setValue(_jman.addChildElement(_pathA,'Qualified'),{? _zal.TSIGN*'K' || 'true' || 'false' ?});
      _jman.setValue(_jman.addChildElement(_pathA,'NonQualified'),{? _zal.TSIGN*'N' || 'true' || 'false' ?});
      _jman.setValue(_jman.addChildElement(_pathA,'Simply'),{? _zal.TSIGN*'Z' || 'true' || 'false' ?});
      _jman.setValue(_jman.addChildElement(_pathA,'RequiredHandWrittenCopy'),{? _zal.TSIGN*'0' || 'false' || 'true' ?});
      _zal.next()
   !}
?};
&_zal


\prac_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Obsługa pola z pracownikiem na potrzeby wniosków paperless
::   WE: _a - typ akcji: BD, F3, AE
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
{? _typ='BD'
|| _prac:='';
   {? EDOKUM.REFPRAC<>''
   || P.cntx_psh();
      P.prefix();
      {? P.seek(EDOKUM.REFPRAC)
      || _prac:=P.OSOBA().PIERWSZE+' '+P.OSOBA().NAZWISKO
      ?};
      P.cntx_pop();
      fld(_prac);
      ''
   || ''
   ?}
|? _typ='F3'
|| _obj:=exec('prac_tab','portal_paperless');
   _tab:=_obj.TAB;
   _tab_i1:=_obj.i1;
   _tab_i2:=_obj.i2;
   {? EDOKUM.REFPRAC=''
   || _tab.first()
   || _tab.index(_tab_i2); _tab.prefix(); _tab.find_key(EDOKUM.REFPRAC)
   ?};
   {? _tab.select(,1,3)
   || EDOKUM.REFPRAC:=_tab.REF;
      EDOKUM.put();
      _tab.IN
   ?}
|? _typ='AE'
|| _ret:=1;
   {? fld=''
   || EDOKUM.REFPRAC:=''
   || _obj:=exec('prac_tab','portal_paperless');
      _tab:=_obj.TAB;
      _ind:=_obj.in;
      _tab.cntx_psh();
      _tab.index(_ind);
      _tab.prefix(fld());
      {? _tab.first()
      || {? EDOKUM.REFPRAC=''
         || EDOKUM.REFPRAC:=_tab.REF
         |? ~_tab.find_key(EDOKUM.REFPRAC,)
         || EDOKUM.REFPRAC:=_tab.REF
         ?}
      || FUN.info('Nie znaleziono pracownika.');
         EDOKUM.REFPRAC:='';
         _ret:=0
      ?};
      _tab.cntx_pop()
   ?};
   _ret
?}


\prac_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zwraca tabelę tymczasową z pracownikami portalu HR
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ObjPrac')>0
|| _obj:=ObjPrac
|| _obj:=obj_new(
      'TAB',
      'i1','i2','in'
   );
   _obj.TAB:=_tab:=tab_tmp(3,
      'N','STRING[30]','Nazwisko'@,
      'I','STRING[20]','Imię'@,
      'T','STRING[9]','Numer teczki'@,
      'IN','STRING[51]','Imię i nazwisko'@,
      'REF','STRING[16]','Ref'
   );
   _obj.i1:=_tab.index('?');
   _obj.i2:=_tab.ndx_tmp('',1,'REF',,0);
   _obj.in:=_tab.ndx_tmp('',1,'IN',,0,'REF',,0);
   _wer:=_tab.mk_sel('Pracownicy','P',,'#idpracsel',,,,,'U');
   _tab.win_fld(_wer,,'N');
   _tab.win_fld(_wer,,'I');
   _tab.win_fld(_wer,,'T');
   _tab.win_act(_wer,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
   _tab.win_act(_wer,,'Kolejność');
   _tab.win_sel(_wer);
   P.cntx_psh();
   P.use('pracowni');
   P.index('FIRMA_ZA');
   P.prefix(REF.FIRMA,'T',);
   {? P.first()
   || USERS.cntx_psh();
      USERS.index('OSOBA');
      {!
      |? USERS.prefix(P.OSOBA,'T');
         {? P.PORTAL='T' & USERS.first() & exec('FindInSet','#table','USERSF','UNIK',USERS.ref(),REF.S_FIRMA,"USERSF.PORTAL2")='T'
         || _tab.I:=P.OSOBA().PIERWSZE;
            _tab.N:=OSOBA.NAZWISKO;
            _tab.T:=P.T;
            _tab.IN:=_tab.I+' '+_tab.N;
            _tab.REF:=$P.ref();
            _tab.add()
         ?};
         P.next()
      !};
      USERS.cntx_pop()
   ?};
   P.cntx_pop();
   ObjPrac:=_obj
?};
_obj


\EDOKUMZS_type_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zwraca opis typu podpisu
::   WE: _a - znacznik typu podpisu
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
{? _typ='K' || 'Kwalifikowany'
|? _typ='N' || 'Niekwalifikowany'
|? _typ='R' || 'Odręczny'
|? _typ='Z' || 'Zwykły'
|| ''
?}


\EDOKUMZS_from_sign
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Dodaje podpis do załącznika
::   WE: _a - Wskazanie na załacznik (EDOKUMZ.ref())
::       _b - Tabela z wynikiem podpisu
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_tab:=_b;
EDOKUMZS.cntx_psh();
EDOKUMZS.use('skids_'+(ref_name(_ref)+2));
EDOKUMZS.prefix();
EDOKUMZS.blank(1);
EDOKUMZS.EDOKUMZ:=_ref;
EDOKUMZS.USER:=OPERATOR.USER;
EDOKUMZS.SIGNDATE:=_tab.DTSIGN;
EDOKUMZS.SIGNTIME:=_tab.TMSIGN;
{? EDOKUMZS.SIGNTIME=time(0,0,0)
|| EDOKUMZS.SIGNTIME:=time()
?};
EDOKUMZS.FINGER:=_tab.FINGER;
USR_SIGN.cntx_psh();
USR_SIGN.index('FINGER2'); USR_SIGN.prefix(EDOKUMZS.FINGER,);
{? USR_SIGN.first() & ~USR_SIGN.next()
|| EDOKUMZS.USER:=USR_SIGN.USERS
?};
USR_SIGN.cntx_pop();
EDOKUMZS.NAME:=_tab.IDSIGN;
{? EDOKUMZS.NAME=''
|| EDOKUMZS.NAME:=$EDOKUMZS.tm_stamp()
?};
EDOKUMZS.SIGNER:=EDOKUMZS.USER().WEBLOGIN;
EDOKUMZS.VALID:=1;
EDOKUMZS.TYPE:={? _tab.CERTTYPE='qualified' || 'K' || 'N' ?};
EDOKUMZS.TYPEDESC:=exec('EDOKUMZS_type_desc','portal_paperless',EDOKUMZS.TYPE);
EDOKUMZS.FROM_VD:=_tab.DTFROM;
EDOKUMZS.FROM_VT:=_tab.TMFROM;
EDOKUMZS.TO_VD:=_tab.DTTO;
EDOKUMZS.TO_VT:=_tab.TMTO;
{? EDOKUMZS.add()
|| EDOKUMZS.memo_set(_tab.memo_txt(,1,'SUBJECT'),'SUBJECT');
   EDOKUMZS.memo_put(,'SUBJECT');
   EDOKUMZS.memo_set(_tab.memo_txt(,1,'ISSUER'),'ISSUER');
   EDOKUMZS.memo_put(,'ISSUER');
   EDOKUMZS.put()
?};
EDOKUMZS.cntx_pop()


\ar_edokumzs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Rekord po tabeli EDOKUMZS
::----------------------------------------------------------------------------------------------------------------------
_ret:=__CHK.record2(
   EDOKUMZS,
   'SIGNDATE','Data',
   'AKC','Akceptacja'
);
{? _ret='' & EDOKUMZS.TYPE='R' & exec('sign_hand_att_req','portal_paperless')
|| _ret:=__CHK.record2(POMOC,'BLOB','Skan')
?};
_ret


\sign
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Akcja podpisanie załącznika dokumentu w obiegu
::   WY: Czy załaczniki wymagają odświeżenia? 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_refresh:=0;
_fn:=EDOKUMZ.bl_info('EDOKUM','NAME');
{? ~EDOKUM.PAPERLES
|| FUN.info('Akcja dostępna tylko dla wniosków typu paperless.'@)
|? var_pres('zakres')>0 & zakres<>1
|| FUN.info('Akcja dostępna na etapie rejestracji.\nWykonaj podpis na portalu HR.'@)
|? -(_fn+4)<>'.pdf'
|| FUN.info('Podpis dostępny tylko dla plików PDF.'@)
|| _pyt:=FUN.choice('Wybierz typ podpisu.'@,1,'Cyfrowy'@,'Odręczny'@,'Zwykły'@);
   {? _pyt=1
   || _obj:=exec('ESIGN','#object');
      _obj.start();
      _obj.s_blob_add(EDOKUMZ,'EDOKUM');
      _res:=_obj.sign('PAdES',1);
      {? _res.status=1
      ||
::       _obj.show();
         _stab:=_obj.TAB;
         {? _stab.first()
         || {? EDOKUMZ.bl_put('EDOKUM',_obj.dir+_stab.FV,0,,_fn)
            || EDOKUMZ.DATE:=date();
               EDOKUMZ.TIME:=time();
               EDOKUMZ.put();
               exec('EDOKUMZS_from_sign','portal_paperless',EDOKUMZ.ref(),_stab)
            ?}
         ?}
      ?};
      _obj.stop()
   |? _pyt>1
   || EDOKUMZS.cntx_psh();
      EDOKUMZS.use('skids_'+(ref_name(EDOKUMZ.ref())+2));
      EDOKUMZS.index('EDOKUMZ');
      EDOKUMZS.prefix();
      EDOKUMZS.blank(1);
      EDOKUMZS.EDOKUMZ:=EDOKUMZ.ref();
      EDOKUMZS.USER:=OPERATOR.USER;
      EDOKUMZS.SIGNER:=EDOKUMZS.USER().WEBLOGIN;
      EDOKUMZS.SIGNDATE:=date();
      EDOKUMZS.SIGNTIME:=time();
      EDOKUMZS.AKC:=0;
      EDOKUMZS.TYPE:={? _pyt=2 || 'R' || 'Z' ?};
      EDOKUMZS.TYPEDESC:=exec('EDOKUMZS_type_desc','portal_paperless',EDOKUMZS.TYPE);
      EDOKUMZS.NAME:=$EDOKUMZS.tm_stamp();
      EDOKUMZS.win_edit('SIMPLE');
      _txt:='';
      SLO_NAZ.cntx_psh();
      SLO_NAZ.prefix();
      {? SLO_NAZ.seek(EDOKUMZ.TYP_ZAL)
      || _txt:=SLO_NAZ.memo_txt(,1,{? EDOKUMZS.TYPE='R' || 'MEMO_R' || 'MEMO_Z' ?})
      ?};
      SLO_NAZ.cntx_pop();
      {? _txt<>''
      || EDOKUMZS.memo_set(_txt,'DECLAR')
      ?};
      EDOKUMZS.efld_opt('SIMPLE','enable='+$(EDOKUMZS.TYPE='R'),POMOC,'BLOB');
      _mark:=EDOKUMZS.TYPE='R' & exec('sign_hand_att_req','portal_paperless');
      EDOKUMZS.efld_opt('SIMPLE','mark='+$_mark,POMOC,'BLOB');
      POMOC.bl_file('BLOB',1);
      {? EDOKUMZS.edit("exec('ar_edokumzs','portal_paperless')")
      || {? EDOKUMZS.add()
         || EDOKUMZS.memo_put(,'DECLAR');
            EDOKUMZS.put()
         ?};
         {? (_file:=POMOC.bl_file('BLOB'))<>''
         || _name:=EDOKUMZ.NAZWA;
            EDOKUMZ.cntx_psh();
            EDOKUMZ.use('skid_n'+(ref_name(EDOKUMZ.ref())+2));
            EDOKUMZ.prefix();
            EDOKUMZ.blank(1);
            EDOKUMZ.DOKUM:=EDOKUM.ref();
            EDOKUMZ.DATE:=date();
            EDOKUMZ.TIME:=time();
            EDOKUMZ.USER:=OPERATOR.USER().KOD;
            EDOKUMZ.KR_OP:='Skan podpisu odręcznego - '+_name;
            EDOKUMZ.TYP_ZAL:=exec('slo_naz','ext_slo','ZAL','Skan',1);
            EDOKUMZ.B_PREL:=EDOKUM.B_PREL;
            EDOKUMZ.B_PRELS:=EDOKUM.B_PRELS;
            {? EDOKUMZ.add()
            || EDOKUMZ.bl_put('EDOKUM',_file,0);
               EDOKUMZ.NAZWA:=EDOKUMZ.bl_info('EDOKUM','NAME');
               EDOKUMZ.put();
               _refresh:=1
            ?};
            EDOKUMZ.cntx_pop()
         ?}
      ?};
      EDOKUMZS.cntx_pop()
   ?}
?};
_refresh


\sign_hand_att_req
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Czy wymagany jest załącznik ze skanem podpisu odręcznego?
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
_txt:='';
EDOKPAR.cntx_psh();
EDOKPAR.use('skidh_'+(ref_name(EDOKUM.ref())+2));
EDOKPAR.index('UNIK'); EDOKPAR.prefix(EDOKUM.ref(),EDOKUM.B_PREL,);
{? EDOKPAR.first()
|| _txt:=EDOKPAR.memo_txt(,1,'TYPY_ZAL')
?};
EDOKPAR.cntx_pop();
{? _txt<>''
|| _tab:=exec('typy_zal_get','portal_paperless',_txt);
   _i2:=_tab.ndx_tmp('',1,'REF',,0);
   _tab.index(_i2);
   {? _tab.find_key(EDOKUMZ.TYP_ZAL)
   || _ret:=_tab.TSIGN*'0'=0
   ?}
?};
_ret


\sign_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Akcja prezentująca podpisy załącznika do dokumentu w obiegu
::----------------------------------------------------------------------------------------------------------------------
{? ~EDOKUM.PAPERLES
|| FUN.info('Akcja dostępna tylko dla wniosków paperless.'@)
|? -(EDOKUMZ.bl_info('EDOKUM','NAME')+4)<>'.pdf'
|| FUN.info('Akcja dostępna tylko dla plików PDF.'@)
|| EDOKUMZS.cntx_psh();
   EDOKUMZS.use('skids_'+(ref_name(EDOKUMZ.ref())+2));
   EDOKUMZS.index('EDOKUMZ');
   EDOKUMZS.prefix(EDOKUMZ.ref());
   _win:=exec('EDOKUMZS_win','portal_paperless');
   EDOKUMZS.win_sel(_win);
   EDOKUMZS.select();
   EDOKUMZS.cntx_pop()
::   _obj:=exec('ESIGN','#object');
::   _obj.start();
::   _obj.v_blob_add(EDOKUMZ,'EDOKUM');
::   _res:=_obj.verify(1);
::   {? _res.status=1
::   || _stab:=_res.TSIGN;
::      _win:=exec('sign_tab','bloby',_stab);
::      _stab.win_sel(_win);
::      _stab.select()
::   ?};
::   _obj.stop()
?}


\EDOKUMZS_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zwraca okno wertowania tabeli EDOKUMZS
::----------------------------------------------------------------------------------------------------------------------
_ws:=EDOKUMZS.mk_sel('Podpisy','P',,'#edokumzs04',,,,,'U');
EDOKUMZS.win_fld(_ws,,'SIGNDATE',,,,,,'Data');
EDOKUMZS.win_fld(_ws,,'SIGNTIME',,,,,,'Czas');
EDOKUMZS.win_fld(_ws,,'TYPEDESC',,,20,,,'Typ');
EDOKUMZS.win_fld(_ws,,'SIGNER',,,150,,,'Sygnatariusz');
_ws


\EDOKUMZS_upd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Aktualizuje podpisy na podstawie podpisów w dołączanym pliku
::   WE: [_a] - obiekt
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>0 & var_pres('TAB',_a)>0
|| _radd:=_a;
   _tab:=_radd.TAB
?};
_edokum:=var_pres('_tab')<=0;
{? _edokum | _tab.first()
|| _obj:=exec('ESIGN','#object');
   _obj.start();
   EDOKUMZ.cntx_psh();
   {? _edokum
   || EDOKUMZ.index('DISP'); EDOKUMZ.prefix(EDOKUM.ref());
      {? EDOKUMZ.first()
      || {!
         |? _obj.v_blob_add(EDOKUMZ,'EDOKUM');
            EDOKUMZ.next()
         !}
      ?}
   || EDOKUMZ.prefix();
      {!
      |? {? EDOKUMZ.seek(_tab.REF,)
         || _obj.v_blob_add(EDOKUMZ,'EDOKUM')
         ?};
         _tab.next()
      !}
   ?};
   EDOKUMZ.cntx_pop();
   _res:=_obj.verify(1);
:: _obj.show();
   {? _res.status=1
   || _ts:=_res.TSIGN;
      {? var_pres('_ts')>0 & _ts.first()
      || EDOKUMZ.cntx_psh();
         EDOKUMZ.prefix();
         {!
         |? {? EDOKUMZ.seek(_ts.ID)
            || exec('EDOKUMZS_from_sign','portal_paperless',EDOKUMZ.ref(),_ts)
            ?};
            _ts.next()
         !};
         EDOKUMZ.cntx_pop()
      ?}
   ?};
   _obj.stop()
?}


\EDOKUM_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Walidacja załączników podczas walidacji wniosków
::   WY: Treść komunikatu
::----------------------------------------------------------------------------------------------------------------------
_ret:='';
_tzal:='';
ETYPPROC.cntx_psh();
ETYPPROC.index('UNIK'); ETYPPROC.prefix(EDOKUM.FIRMA,EDOKUM.TYP);
{? ETYPPROC.first()
|| B_PROC.cntx_psh();
   B_PROC.index('SYMVER'); B_PROC.prefix(EDOKUM.FIRMA,ETYPPROC.PROC_SYM,ETYPPROC.PROC_VER,);
   {? B_PROC.first()
   || _b_ele:=exec('FindInSet','#table','B_ELE','CLASSSYM','OBE_FAW_DARP','B_ACTION',,1);
      {? _b_ele
      || B_PREL.cntx_psh();
         B_PREL.index('PREL'); B_PREL.prefix(B_PROC.ref(),_b_ele);
         {? B_PREL.first()
         || B_VALPRT.cntx_psh();
            B_VALPRT.index('PREL'); B_VALPRT.prefix(B_PREL.ref(),'T','IN','TYPY_ZAL',);
            {? B_VALPRT.first()
            || _tzal:=B_VALPRT.VALUE
            ?};
            B_VALPRT.cntx_pop()
         ?};
         B_PREL.cntx_pop()
      ?}
   ?};
   B_PROC.cntx_pop()
?};
ETYPPROC.cntx_pop();
{? _tzal<>''
|| VAR_DEL.delete('__OBISPR');
   exec('create_kom_tab','obiegi');
   _oper:=OPERATOR.USER;
   OPERATOR.USER:=EDOKUM.USERS;
   exec('chk_zal','portal_paperless',_tzal);
   OPERATOR.USER:=_oper;
   _tab:=__OBISPR;
   {? _tab.first()
   || {!
      |? _ret+=_tab.OPIS+'\n';
         _tab.next()
      !}
   ?};
   VAR_DEL.delete('__OBISPR')
?};
_ret


\zasw_nazw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.37]
:: OPIS: Aktualizuje nazwę elementu słownika portalowego w oparciu o zmianę w słowniku nazw załączników podpiętych do
::       wniosku Paperless - "Wydanie zaświadczenia" przy założeniu, że rekord SLO_NAZ jest ustawiony.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_nazwa:=exec('_wydanie_zasw','portal_walidacja').name;
_obieg:=exec('FindInSet','#table','TYPOBIEG','UNIK','Obieg wniosków',,,1,,null);
_etyp:=exec('FindInSet','#table','ETYPY','UNIK_WP',_nazwa,_obieg,,1,'P',null);
_nazwa:=SLO_NAZ.NAZWA;
_buffer:=exec('obj_new','#buf','SLO_NAZ');
_buffer.get();
ETYPYATT.cntx_psh();
ETYPYATT.index('SLO_NAZ');
ETYPYATT.prefix(_etyp,SLO_NAZ.ref);
{? ETYPYATT.first()
|| exec('porsloit_oper','portal_slowniki','put',SLO_NAZ.NAZWA,,_nazwa,,'ZaswiadczenieNazwa')
?};
ETYPYATT.cntx_pop();
_buffer.set();
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 724f60275ecf1f99bd973190fbfc1228c78e8e458758cd838a90c9167b8fd44d7887577203f2cef1da2a9bf5e3561cec69f19b35f40d76e4af2fb78e8a7d1224f76399eff46746b17b7a61fc7668046bf095c6f128799f41811a945947598b2b9160b51ef9755178eecc50f4b7802335efdb35841f83216b6667a6c5ba8a7c56
