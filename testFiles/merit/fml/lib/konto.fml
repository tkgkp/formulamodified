:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: konto.fml
:: Utworzony: 2015.01.29
:: Autor: AMK
::======================================================================================================================
:: Zawartość: Funkcje odpowiedzialne za obsługę kont
::======================================================================================================================


\mask
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Formula sprawdza, czy maska konta podana w polu WYDRUKI.MASKA o dlugosci podanej w polu
::       WYDRUKIN.DLKON jest zgodna z kontem z pierwszego parametru funkcji
::    WE: _a - symbol konta do porownania
::  OLD: \mask/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
_b:=WYDRUKI.MASKA;
_c:=1;
{! ..WYDRUKIN.DLKON
|? _c=1
|! {? 1+_b='?'| 1+_b=1+_a
   || _a:=1-_a;
      _b:=1-_b
   || _c:=0
   ?}
!};
_c


\op_konta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.60]
:: OPIS: Formula wyswietla okienko ze szczegolowymi informacjami o koncie
::   WE: _a - symbol konta
::       [ _b - ref KS]
::       [ _c - liczba '?', ktore maja byc zwrocone w opisie analityki jesli nie znaleziono kodu
::              analityki]
::  OLD: \op_konta/opis_kon.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh();
_ok:=1;
{? var_pres('rokpoz')>0 & rokpoz<>null
|| ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA); ROK_F.seek(rokpoz)
|| SSTALE.AO().ROK()
?};
exec('zer_anal','konto');
{? _=1 | _b=null
|| KS.index('SYM'); KS.prefix(ROK_F.ref());
   {? ~KS.find_key(BILANSP.ASYNT+_a) & _=1
   || FUN.info('Nie znaleziono konta syntetycznego: %1'@[(BILANSP.ASYNT+_a)]); _ok:=0
   ?}
?};
{? _ok
|| exec('ust_anal1','konto',_a,KS.ref(),{? _=1 || 40 || _c ?});
   KA.KS:=KS.SYM;
   KA.WAL:=SSTALE.WAL().KOD;
   {? _=1
   || KA.win_edit('RED'+$BUD.size);
      KA.hdr_edit(' '''+KS.NAZ+'''');
      KA.display(,,'Opis konta'@)
   ?}
?};
SLO.cntx_pop()


\zer_anal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Zerowanie opisoww analityki
::  OLD: \zer_anal/opis_kon.fml
::----------------------------------------------------------------------------------------------------------------------
_a:='';
{! _i:=1..10 |! ($('KA.O'+$_i+':=_a'))(_a); ($('KA.K'+$_i+':=_a'))(_a) !};
_i+=1;
($('KA.O'+$_i+':=_a'))(_a);
0


\ana_find
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS
:: OPIS: Odnajduje SLO.ref do analityki konta (poziom _a)
::       Funkcja obsluguje konto ksiegowe. Odnajduje SLO.TR dla _a-tego poziomu analityki konta
::       lub zwraca znaki '?' (jeli nie znaleziono analityki)
::   WE: _a - poziom analityki konta
::       [_b - liczba zwracanych znakow '?' jesli brak kodu analityki]
::  OLD: \ana_find/opis_kon.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.index('SL');
SLO.prefix(BUD.SLU().SLU,_a);
{? +_a & SLO.first()
|| SLO.TR
|| {? _=1 || 40*'?' || _b*'?' ?}
?}


\ka_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Wyswietla echo z kontem na pasku
::   WE: _a - 0 - bez echo, 1 - z echo
::  OLD: \ka_opis/opis_kon.fml
::----------------------------------------------------------------------------------------------------------------------
_echo:={? var_pres('_a')>0 || _a || 1 ?};
{? _echo || echo() ?};
_sep:=' / ';
_t:={? var_pres('opis_poz')<=0 | (var_pres('opis_poz')>0 & odd_ksn=0)
    || KS.NAZ+_sep
    || ''
    ?}+
    {? KA.O2<>'' || KA.O2+_sep || '' ?}+
    {? KA.O3<>'' || KA.O3+_sep || '' ?}+
    {? KA.O4<>'' || KA.O4+_sep || '' ?}+
    {? KA.O5<>'' || KA.O5+_sep || '' ?}+
    {? KA.O6<>'' || KA.O6+_sep || '' ?}+
    {? KA.O7<>'' || KA.O7+_sep || '' ?}+
    {? KA.O8<>'' || KA.O8+_sep || '' ?}+
    {? KA.O9<>'' || KA.O9+_sep || '' ?}+
    {? KA.O10<>'' || KA.O10+_sep || '' ?}+
    {? KA.O11<>'' || KA.O11+_sep || '' ?};
_t:=_t-(+_sep);
{? _echo || echo(_t) ?};
{? var_pres('opis_poz')>0 || opis_poz:=_t ?};
0


\chk_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: akcja rekord po dla slownika KK - konto kosztowe
::  OLD: \chk_kon/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('lic','#b_domain','POR')
|| _wy:=__CHK.record(KK,,'SYM','NAZWA')
|| _wy:=__CHK.record(KK,,'SYM')
?};
{? _wy=''
|| {? KK.ROK_F
   || anal_rok:=KK.ROK_F;
      {? exec('akc_kont','edkonto',KK.SYM)
      || FUN.emsg('Błędny symbol konta.'@);
         _wy:='SYM'
      ?}
   ?}
?};
{? __CHK.index(KK,-menu_txt(,)='popraw')<>'' || _wy:='SYM' ?};
_wy


\us_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: Formula do usuwania kont kosztowych sprawdza powiązania
::   WY: 1/0
::  OLD: \us_kk/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? KK.count()=0
|| 1
|| FUN.info('Konto jest wykorzystywane w systemie.\nUsunięcie niemożliwe.'@);
   0
?}


\koment
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Znajduje systemowy komentarz ksiegowy.
::   WE:  _a  - symbol konta analitycznego
::       [_b] - rok
::   WY: KOM.ref() lub null jesli nie znaleziono
::  OLD: \koment/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=null;
{? _a='' || return(null) ?};
{? _=1 || _b:=SSTALE.AR ?};
ROK_F.cntx_psh();
ROK_F.prefix();
{? _b & ROK_F.seek(_b)
|| _vk:=ROK_F.SYNT+form(_a);
   {? KS.index('SYM'); KS.prefix(ROK_F.ref()); KS.find_key(_vk)
   || KOM.cntx_psh; KOM.index('SYS'); KOM.prefix(KS.ref(),'T');
      {? KOM.first() || _ret:=KOM.ref() ?};
      KOM.cntx_pop
   ?}
?};
ROK_F.cntx_pop();
_ret


\jak_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.41]
:: OPIS: Funkcja sprawdza, czy podany symbol konta istnieje w planie kont aktualnego roku
::   WE: _a =_a - symbol konta
::   WY: ref KS lub null
::  OLD: \jak_kon/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
KS.cntx_psh(); KS.index('SYM'); KS.prefix(ROK_F.ref(),_a);
{? KS.first() & KS.SYM=_a || _ref:=KS.ref() ?};
KS.cntx_pop();
_ref


\kt_bud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.20]
:: OPIS: Funkcja sprawdza, czy podany slownik jest zawarty w budowie danego
::       konta syntetycznego.
::   WE: _a - konto, ktorego budowa bedzie sprawdzana (ref KS)
::       _b - sprawdzany slownik (ref SLUAPPL)
::   WY: 0 - brak slownika w budowie konta
::         numer poziomu, na ktorym znajduje sie podany slownik w budowie konta
::  OLD: \kt_bud/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
_lp:=0;
BUD.cntx_psh(); BUD.index('KS'); BUD.prefix(_a);
{? BUD.first()
|| {! |?
      {? BUD.SLU=_b || _lp:=BUD.POZ ?};
      BUD.next()
   !}
?};
BUD.cntx_pop();
_lp


\ust_anal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Funkcja ustawia odpowiednie wartości pól zmiennej KA do prezentacji analityk konta _a.
::   WE: _a  -  symbol konta
::       _b  -  ref do konta syntetycznego (KS.ref())
::  OLD: \ust_anal/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{! _i:=1..10 |! ($('KA.P'+$_i+':=0'))() !};
BUD.index('KS'); BUD.prefix(_b);
_p:=1;
_k:=_a;
{? BUD.first()
|| {! |?
      _s:=BILANSP.ASEP; _l:=BUD.SLU().SLU().DL;
      _i:=_k*_s;
      {? _i>0
      || _k:=_i-_k;
         _a:=_l+_k;
         _b:=exec('ana_find','edkonto',_a);
         ($('KA.P'+$_p+':=_a'))(_b)
      ?};
      _p+=1;
      BUD.next()
   !}
?};
1


\ust_anal1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS
:: OPIS: Ustawienie wartosci zmiennej KA
::       Funkcja ustawia odpowiednie wartosci pol zmiennej KA do prezentacji analityk konta _a.
::   WE: _a  -  symbol konta
::       _b  -  ref do konta syntetycznego (KS.ref)
::       [_c  -  liczba znakow '?' w opisie analityki jesli brak wypelnienia analityki ]
::  OLD: \ust_anal/opis_kon.fml
::----------------------------------------------------------------------------------------------------------------------
BUD.index('KS');
BUD.prefix(_b);
_p:=1;
_k:=_a; _kk:=(BILANSP.ASYNT+1)-_a;
_s:=BILANSP.ASEP;
{? _s<>','
|| {? BUD.first()
   || {! |?
         _l:=BUD.SLU().SLU().DL;
         {? +_kk>0
         || _a:=_l+_kk;
            _b:=exec('ana_find','konto',_a,{? _=2 || 80 || _c ?});
            ($('KA.K'+$(_p)+':=_a'))(_a);
            ($('KA.O'+$(_p+1)+':=_a'))(_b)
         ?};
         _p+=1;
         _kk:=(_l+1)-_kk;
         BUD.next
      !}
   ?}
|| _a:=BILANSP.ASYNT-_a;
   _k:=_a;
   {? BUD.first()
   || {! |?
         _l:=BUD.SLU().SLU().DL;
         _a:=_l+_k;
         {? |_k<>''
         || _k:=_l-_k;
            _b:=exec('ana_find','konto',_a,{? _=2 || 80 || _c ?});
            ($('KA.K'+$(_p)+':=_a'))(_a);
            ($('KA.O'+$(_p+1)+':=_a'))(_b);
            _p+=1;
            BUD.next()
         || 0
         ?}
      !}
   ?}
?};
1


\addanslu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Dodanie budowy konta analitycznego
::   WE: _a - ref rekordu w tabeli AN
::   WY: 1/0 - czy udalo sie dodac budowe konta analitycznego
::  OLD: \addanslu/opis_kon.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
AN.cntx_psh(); AN.index('SYM'); AN.prefix();
{? AN.seek(_a)
|| AN_SLU.cntx_psh();
   AN_SLU.index('DISP'); AN_SLU.prefix(AN.ref());
   {? ~AN_SLU.first()
   || KS.cntx_psh(); KS.prefix();
      ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
      AN.KS().ROK();
      BUD.cntx_psh(); BUD.index('KS'); BUD.prefix(KS.ref());
      {? BUD.first()
      || _synt:=ROK_F.SYNT; _sep:=ROK_F.SEP; _konto:=_synt-AN.SYM;
         {? _sep<>',' || _konto:=1-_konto ?};
         SLU.cntx_psh(); SLU.prefix();
         SLUAPPL.cntx_psh(); SLUAPPL.prefix();
         SLO.cntx_psh(); SLO.index('SL');
         {! |?
            BUD.SLU().SLU();
            _poziom:=SLU.DL+_konto;
            _konto:=SLU.DL-_konto;
            {? _sep<>',' || _konto:=1-_konto ?};
            SLO.prefix(SLU.ref(),_poziom);
            {? SLO.first()
            || AN_SLU.AN:=AN.ref();
               AN_SLU.POZ:=BUD.POZ;
               AN_SLU.SLU:=SLU.ref();
               AN_SLU.SLO:=SLO.ref();
               AN_SLU.add()
            || _zwrot:=0
            ?};
            _dalej:=BUD.next();
         {? ~_dalej || AN.OPIS:=SLO.TR; AN.put() ?};
         _zwrot=1 & _dalej
         !};
         SLO.cntx_pop(); SLU.cntx_pop(); SLUAPPL.cntx_pop()
      || AN.OPIS:=KS.NAZ;
         AN.put()
      ?};
      BUD.cntx_pop(); ROK_F.cntx_pop(); KS.cntx_pop()
   ?};
   AN_SLU.cntx_pop()
|| _zwrot:=0
?};
AN.cntx_pop();
_zwrot


\akc_zabl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Sprawdzanie, czy konto nie jest zablokowane
::  OLD: \akc_zabl/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
AN.index('SYM'); AN.prefix();
{? AN.find_key(_a)
|| AN.STAN
|| 'N'
?}


\szcz_bud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Szczegoly budowy konta
::  OLD: \szcz_bud/opis_kon.fml
::----------------------------------------------------------------------------------------------------------------------
AN_SLU.cntx_psh();
AN_SLU.index('DISP'); AN_SLU.prefix(AN.ref());
AN_SLU.select();
AN_SLU.cntx_pop()


\kon_fun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Funkcja do pobierania informacji o koncie księgowym
::   WE: [_a] - symbol konta analitycznego
::   WY: gdy bez parametrow - zwraca separator analityk konta biezacego roku
::       gdy podano symbol konta - zwraca tablice tab[][] z
::           tab[1][1] - symbol konta syntetycznego
::           tab[1][i+1] - symbol analityki i-tego poziomu konta
::           tab[2][] - zamiast symbolu jest opis
::  OLD: \kon_fun/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0
|| {? ROK_F.SEP=',' || '' || ROK_F.SEP ?}
|| _tab:=null;
   KS.index('SYM'); KS.prefix(ROK_F.ref(),ROK_F.SYNT+_a);
   {? KS.first()
   || BUD.index('KS'); BUD.prefix(KS.ref());
      _ile:=BUD.size();
      _tab:=obj_new(2);
      _tab[1]:=obj_new(_ile+1);
      _tab[2]:=obj_new(_ile+1);
      _tab[1][1]:=ROK_F.SYNT+_a;
      _tab[2][1]:=KS.NAZ;
      {? BUD.first()
      || SLO.index('SL'); SLO.prefix();
         _a:=ROK_F.SYNT-_a;
         {!
         |? {? ROK_F.SEP<>',' || _a:=1-_a ?};
            _tab[1][BUD.POZ+1]:=BUD.SLU().SLU().DL+_a;
            _tab[2][BUD.POZ+1]:={? SLO.find_key(SLU.ref(),_tab[1][BUD.POZ+1]) & SLO.KOD=_tab[1][BUD.POZ+1] || SLO.TR || '' ?};
            _a:=SLU.DL-_a;
            BUD.next()
         !}
      ?}
   ?};
   _tab
?}


\kurs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2008]
:: OPIS: Wyznacza kurs z uwzglednieniem jednostki waluty
::   WE: _a - kod waluty
::       _b - kurs
::  OLD: \kurs/konta.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a='' || return(1.0) ?};
{? _b=0 || _b:=1.0 ?};
WAL.index('WAL_SYM');
WAL.prefix(_a);
{? WAL.first() || _b/WAL.J || _b ?}


\ini_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2008]
:: OPIS: Ustawienie formul uniwersalnych parametrow uzywanych w parametrach wydrukow z wyborem waluty
::   WE: [_a] - waluta aktualna wydruku [1]-ze stałych 0-narodowa
::  OLD: \ini_wal/konta.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=1 ?};
_wal:={? _a || 'SSTALE.WAL' || 'FINFO.NAROD' ?};
UNPAR.PSLO:=null;
UNPAR.P25:=1;
UNPAR.PSLO_BV:='{? PAR_SKID.get(33)=\'N\' || exec(\'findfnv\',\'#color\') || \'\' ?}';
UNPAR.P25_BV:='_en:=PAR_SKID.get(33)=\'N\' | ~UNPAR.PSLO | UNPAR.PSLO='+_wal+'; cur_tab().efld_opt(cur_tab().win_edit(\'?\'),\'enable=\'+$(~_en),UNPAR,\'P25\');~~';
UNPAR.PSLO_BE:='{? PAR_SKID.get(33)<>\'N\' || SLO.win_dict(\'ONE\');SLO.win_sel(\'ONE\');SLU.index(\'NAZ\'); SLU.prefix(\'WALUTY\');{?SLU.first()||pSloWal:=fld();1 ?}?}';
UNPAR.P25_BE:='PAR_SKID.get(33)<>\'N\' & UNPAR.PSLO & UNPAR.PSLO<>'+_wal;
UNPAR.PSLO_AE:='{? ~fld | fld='+_wal+' || UNPAR.P25:=1 || exec(\'be_krs\',\'konto\','+_wal+') ?};win_disp();1';
UNPAR.P25_AE:='fld(fld$6); {? fld()=0 || FUN.info(\'Nie podano kursu waluty.\');0 || 1 ?}'


\be_krs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2008]
:: OPIS: Ustawienie pola UNPAR.P25
::   WE: [_a] - waluta aktualna wydruku
::  OLD: \be_krs/konta.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=SSTALE.WAL ?};
{? PAR_SKID.get(33)<>'N' & UNPAR.PSLO & UNPAR.PSLO<>_a
|| {? (UNPAR.P25=0 | UNPAR.P25=1 | var_press('pSloWal')>0 & pSloWal<>UNPAR.PSLO) & FINFO.B_WYDR
   || TKRS.index('TKRS_DT');
      TKRS.prefix(FINFO.B_WYDR,_a,date());
      {? TKRS.find_le(time())
      || KRS.index('KRS_WAL');
         KRS.prefix(TKRS.ref(),UNPAR.PSLO);
         {? KRS.first()
         || UNPAR.P25:={? FINFO.KURS_TYP='K' || KRS.KP |? FINFO.KURS_TYP='S' || KRS.SP || KRS.SR ?}
         ?}
      ?}
   ?};
   ($UNPAR.P25_BV)();
   1
?}


\opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS
:: OPIS: Funkcja ustawia odpowiednie wartosci pol zmiennej KA do prezentacji analityk konta _a.
::   WE: _a  -  symbol konta
::       _b  -  ref do konta syntetycznego (KS.ref)
::  OLD: \opis/opis_kon.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zer_anal','konto');
_v:=1;
{? POZ.KOM=null
|| KS.index('SYM'); KS.prefix(SSTALE.AO().ROK);
   {? ~KS.find_key(BILANSP.ASYNT+_a) || _v:=0 ?}
?};
_vr:=KS.ref();
{? _v
|| KA.O1:=KS.NAZ; exec('ust_anal1','konto',_a,_vr,40)
|| KA.O1:=60*'?'; _vr:=null
?};
0


\zapisy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.60]
:: OPIS: Zapisy dla wybranej pozycji w tabeli tymczasowej
::   WE: _a - konto lub jego poczatkowe znaki
::       _b - okres obrachunkowy (_OKRO_F)
::  OLD: \zapisy/obroty.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')>0 || ROZNE.UT_OKROD:=ROZNE.UT_OKRDO:=_b ?};
_kurs:={? var_pres('__KURS')>0 || __KURS || 1.0 ?};
_data_od:=_data_do:=date(0,0,0);
OKRO_F.prefix();
_data_od:=ROZNE.UT_OKROD().POCZ;
_data_do:=ROZNE.UT_OKRDO().KON;
{? _data_od=date(0,0,0) || _data_od:=exec('szuk_dat','okresy',ROZNE.UT_OKROD,0) ?};
{? _data_do=date(0,0,0) || _data_do:=exec('szuk_dat','okresy',ROZNE.UT_OKRDO,1) ?};
{? _data_od=date(0,0,0) | _data_do=date(0,0,0)
|| FUN.info('Nie znaleziono zapisów na kontach.'@)
|| _symbol:={? var_pres('_a')>0
            || ROZNE.PAR4:=1;
               _a
            || TAB_OBR.SYM_KON:=form(TAB_OBR.SYM_KON);
               TAB_OBR.cntx_psh();
               TAB_OBR.prefix();
               {! |? TAB_OBR.TREE<>0 & TAB_OBR.seek(TAB_OBR.TREE,) !};
               _full:=TAB_OBR.SYM_KON;
               TAB_OBR.cntx_pop();
               {? ROZNE.PAR4=0
               || _poz:=_full*'?';
                  {?_poz>0 || _full:=_poz+_full-1 ?};
                  {? +TAB_OBR.SYM_KON<+_full || _full || TAB_OBR.SYM_KON ?}
               || TAB_OBR.SYM_KON+((+TAB_OBR.SYM_KON)-_full)
               ?}
            ?};
   _maska:=35+exec('str_sql','#sql',_symbol);
   _odd:={? OPERATOR.DEPT=null || '%' || OPERATOR.DEPT().OD ?};
   _maskod:=ROZNE.UT_OKROD().ROK().KOD+form(ROZNE.UT_OKROD().NR,-2);
   _maskdo:=ROZNE.UT_OKRDO().ROK().KOD+form(ROZNE.UT_OKRDO().NR,-2);
   {? SSTALE.WAL=UNPAR.PSLO || _kurs:=1 ?};
   {? var_pres('dwiewalo')>0 & dwiewalo
   || TABTMP:=proc_exe('dekretyw@dokument',_maska,_odd,_data_od,_data_do,'T',UNPAR.PSLO().KOD,
                       'pozy'+_maskod,'pozy'+_maskdo+%255,'doku'+_maskod,'doku'+_maskdo+%255,_kurs)
   || _wal:=SSTALE.WAL().KOD;
      {? _wal=FINFO.NAROD().KOD
      || TABTMP:=proc_exe('dekrety@dokument',_maska,_odd,_data_od,_data_do,'T',
                          'pozy'+_maskod,'pozy'+_maskdo+%255,'doku'+_maskod,'doku'+_maskdo+%255,_kurs)
      || TABTMP:=proc_exe('dekretyw@dokument',_maska,_odd,_data_od,_data_do,'T',_wal,
                          'pozy'+_maskod,'pozy'+_maskdo+%255,'doku'+_maskod,'doku'+_maskdo+%255,_kurs)
      ?}
   ?};
   ind:=TABTMP.index('?');
   TABTMP.index(ind);
   _zakr_kon:={? ROZNE.PAR4=0 & TAB_OBR.ANALIT<>-1
              || 'Dekrety dla prefiksu konta: \''+TAB_OBR.SYM_KON+'\''
              || 'Dekrety dla maski konta: \''+_symbol+'\''
              ?};
   _wer:=TABTMP.mk_sel(,,,'tabtmp_wer1',,,,,'U');
   TABTMP.win_fld(_wer,,'KONTO',,,20,,,'Konto'@);
   TABTMP.win_fld(_wer,,'D_ZAPKS',,,10,,,'Data zap.'@);
   TABTMP.win_fld(_wer,,'ODDZIAL',,,9,,,'Jedn. ks.'@);
   TABTMP.win_fld(_wer,,'REJESTR',,,8,,,'Rejestr'@);
   TABTMP.win_fld(_wer,,'NR_W_REJ',,,6,,,'Nr'@);
   TABTMP.win_fld(_wer,,'POZYCJA',,,6,,,'Poz.'@);
   TABTMP.win_fld(_wer,,'WN',,,15,,,'Wn'@);
   TABTMP.win_fld(_wer,,'MA',,,15,,,'Ma'@);
   TABTMP.win_fld(_wer,,'TR',,,24,,,'Opis'@);
   TABTMP.win_act(_wer,,'Wyświetl',,,,"exec('wyswietl','dok_fks',4-(8+TABTMP.POZ_REF),BB.sqlint(TABTMP.POZ_REF))");
   TABTMP.win_act(_wer,,'Rekord',,,,
                  " POZ.KOM:=null;
                    exec('opis','konto',TABTMP.KONTO);
                    exec('ka_opis','konto');
                    DOK.cntx_psh();POZ.cntx_psh();
                    DOK.use('doku'+(4-(8+TABTMP.POZ_REF)));
                    POZ.use(8+TABTMP.POZ_REF);
                    DOK.prefix();POZ.prefix();
                     _hid_d:=''; _hid:='';
                    {? POZ.seek(BB.sqlint(TABTMP.POZ_REF),(8+TABTMP.POZ_REF))
                    ||  {? POZ.DOK().get()
                        ||  {? PAR_SKID.get(82)='N'
                             ||     DOKUM.index('DOKUM');
                                     DOKUM.prefix(REF.FIRMA,$DOK.ref);
                                     {? DOKUM.first()
                                     ||  ''
                                     || _hid_d+='Z'
                                     ?}
                               ?};'załącznik';
                              {? DOK.DOKZRODL='' | DOK.REJ().KOD='~BO'  || _hid_d+='D' ?};'dokument źródłowy';
                              {? ~DOK.E_DOC || _hid_d+='E' ?};'skan ';
                              {? _hid_d<>'' || _hid:='D('+_hid_d+')' || _hid:='' ?}
                         ?}
                     ?};
                     DOK.cntx_pop();POZ.cntx_pop();
                    TABTMP.actions_grayed(TABTMP.win_sel('?'),_hid);
                    {? ~(_hid*'E')
                    || exec('findtmp','#color')
                    || ''
                    ?}
                 ");
   TABTMP.win_act(_wer,,'Formuła','Podsumowanie'@@,,'Podsumowanie wyświetlanych pozycji'@,,
                         "exec('suma','dok_fks')",1,,,,'P');
   TABTMP.win_act(_wer,,'Formuła','Oblicz obroty'@@,,'Obroty dla maski kont lub dla wybranych pozycji'@
                         ,,"exec('suma_tmp','dok_fks')",,
                         1,"exec('pr_obl','dok_fks')","exec('wys_tobr','dok_fks');&JAK",'O' );
   ust_wal:={? var_pres('dwiewalo')>0 & dwiewalo || UNPAR.PSLO || FINFO.NAROD ?};
   TABTMP.win_act(_wer,,'Formuła','Zapisy dokumentu'@@,,,"exec('zapisy','dok_fks',4-(8+TABTMP.POZ_REF),BB.sqlint(TABTMP.POZ_REF),0)");
   _menu:='Dane źródłowe'@;
   TABTMP.win_act(_wer,,'Menu',_menu,,'');
   TABTMP.win_act(_wer,0,'Formuła','Dokumenty z innej dziedziny'@@,_menu,'Przeglądanie dokumentu źródłowego'@,"
                                   DOK.cntx_psh();POZ.cntx_psh();
                                   DOK.use('doku'+(4-(8+TABTMP.POZ_REF)));
                                   POZ.use(8+TABTMP.POZ_REF);
                                   DOK.prefix();POZ.prefix();
                                   {? POZ.seek(BB.sqlint(TABTMP.POZ_REF),(8+TABTMP.POZ_REF))
                                   ||  {? POZ.DOK().get() || exec('dok_zrd','dok_fks') ?}
                                   ?};
                                   DOK.cntx_pop();POZ.cntx_pop()",,,,,,'D');
   TABTMP.win_act(_wer,0,'Formuła','E-dokument'@@,_menu,,"exec('wyswietl_edok','dok_fks',4-(8+TABTMP.POZ_REF),BB.sqlint(TABTMP.POZ_REF))",,,,,,'E');
   TABTMP.win_act(_wer,0,'Formuła','Załączniki'@@,_menu,," exec('dok_zal','dokum_zal',4-(8+TABTMP.POZ_REF),BB.sqlint(TABTMP.POZ_REF))",,,,,,'Z');
   TABTMP.win_act(_wer,0,'Formuła','Legenda'@@,,'Opis znaczenia ikon i kolorowania'@,
                  "exec('legenda','color','$Pozycje dokumentów z podpiętym E-dokumentem')",,,,,,'L');
   TABTMP.win_act(_wer,,'Kolejność');
   TABTMP.win_sel(_wer);
   TABTMP.hdr_sel();
   TABTMP.hdr_sel(_zakr_kon+
                  {? var_pres('_b')>0
                  || ', '+ROZNE.UT_OKROD().NAZ+' '+ROZNE.UT_OKROD().ROK().NAZ
                  || ', od daty '+$_data_od+', do daty '+$_data_do
                  ?}+
                  {? var_pres('dwiewalo')>0 & ~dwiewalo & SSTALE.WAL & SSTALE.WAL<>FINFO.NAROD
                  || ', Waluta: '+SSTALE.WAL().KOD
                  ?}
   );
   TABTMP.select();
   &ust_wal;
   obj_del(TABTMP); &ind
?}


\wmasce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Formula sprawdza czy konto miesci sie w masce
::   WE: _a - maska
::       _b - konto (maska)
::       _c - separator
::   WY: (0/1)
::  OLD: \wmasce/skid_app.fml
::----------------------------------------------------------------------------------------------------------------------
_m:=_a; _w:=1; _k:=_b;
{! ..+_m
|? _w=1
|! {? 1+_m='?' | 1+_k='?' | 1+_m=1+_k | (+_c & 1+_m=_c)
   || _k:=1-_k; _m:=1-_m
   || _w:=0
   ?}
!};_w


\maska2prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Czy można uznać maskę za prefiks konta
::   WE: _a - maska konta
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{! |? _zn:=_a+1; {? _zn='?' || _a:=_a-1; 1 ?} !};
{? _a*'?'>0
|| '?'
|| _a
?}


\usostsep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [7.62]
:: OPIS: Jesli w masce ostatnim znakiem jest separator usuwa go
::   WE: _a - maska
::  OLD: \usostsep/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? SSTALE.AR().SEP<>','
|| _b:=1;
   {! ..WYDRUKIN.DLKON
   |? _b=1
   |! {? (_a+1)='?'
      || _a:=_a-1
      |? (_a+1)=SSTALE.AR().SEP
      || _b:=0; _a:=_a-1
      || _b:=0
      ?}
  !}
?};
_a


\licencja_fks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Weryfikacja czy jest licencja na obszar FKS
::   WY: (1/0) - jest lub nie
::----------------------------------------------------------------------------------------------------------------------
o_fks:=exec('szuk_b_dom','parses','FKS');
exec('lic','#b_domain',o_fks)


\ae_kk_rok_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji roku finansowego
::----------------------------------------------------------------------------------------------------------------------
ROZNE.ROKKON:=anal_rok:=KK.ROK_F;
1


\be_kk_rok_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją roku finansowego
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(18)<>'N' & exec('licencja_fks','konto') || 1 || 0 ?}


\bs_kk_rok_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed wyświetleniem roku finansowego
::----------------------------------------------------------------------------------------------------------------------
{? exec('licencja_fks','konto') || 1 || exec('findfnv','#color') ?}


\bl_kk_system
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wartość początkowa pola KK.SYSTEM
::----------------------------------------------------------------------------------------------------------------------
BPMN.KK_DOM


\bl_kk_rok_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na wartość początkową pola KK.
::----------------------------------------------------------------------------------------------------------------------
_rok_f:=~~;
{? BPMN.KK_DOM='FST' & PAR_SKID.get(18)<>'N'
|| _okres:=__PARSES.getVal('OkresRok').OKRO_F;
   {? _okres<>null
   || OKRO_F.cntx_psh();
      OKRO_F.prefix();
      {? OKRO_F.seek(_okres,OKRO_F.name()) || _rok_f:=OKRO_F.ROK ?};
      OKRO_F.cntx_pop()
   ?}
?};
_rok_f


\chk_ks_zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Rekord po tabeli KS_ZEST
::   WE: _a - dodawanie: 1-tak 0-poprawianie
::  OLD: \ar_ks_zest/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=__CHK.record(KS_ZEST,,'KOD','OPIS');
{? _ret=''
|| _ref:=KS_ZEST.ref();
   KS_ZEST.cntx_psh();
   KS_ZEST.index('KOD'); KS_ZEST.prefix(KS_ZEST.KOD,);
   {? KS_ZEST.first() & (_a | KS_ZEST.ref()<>_ref)
   || FUN.info('Istnieje zespół o kodzie: %1.'@[KS_ZEST.KOD]);
      _ret:='KOD'
   ?};
   KS_ZEST.cntx_pop()
?};
_ret


\chk_ks_kat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Rekord po tabeli KS_KAT
::   WE: _a - dodawanie: 1-tak 0-poprawianie
::  OLD: \ar_ks_kat/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=__CHK.record(KS_KAT,,'KOD','OPIS');
{? _ret=''
|| _ref:=KS_KAT.ref();
   KS_KAT.cntx_psh();
   KS_KAT.index('KOD'); KS_KAT.prefix(KS_KAT.KS_ZEST,KS_KAT.KOD,);
   {? KS_KAT.first() & (_a | KS_KAT.ref()<>_ref)
   || FUN.info('Istnieje kategoria zespołu kont o kodzie: %1.'@[KS_KAT.KOD]);
      _ret:='KOD'
   ?};
   KS_KAT.cntx_pop()
?};
_ret


\chk_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Sprawdzenie poprawności danych konta syntetycznego
::   WE: _a - dodawanie: 1-tak 0-poprawianie
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(KS,,'SYM','NAZ','TYP','SALDO','WIELO','ROZR');
{? _zwrot='' & +KS.SYM<>KS.ROK().SYNT

|| FUN.info('Długość symbolu konta nie jest zgodna z deklaracją\n'
            'długości konta syntetycznego w roku: %1'
            '\nZadeklarowana długość konta: %2.'@[KS.ROK().NAZ,$KS.ROK().SYNT]);
   _zwrot:='SYM'
?};
{? _zwrot=''
|| {? __CHK.index(KS,~_a)<>'' || _zwrot:='SYM' ?}
?};
{? _zwrot=''
|| {? var_press('ksSP')>0 & ksSP<>KS.SP & PAR_SKID.get(87)='T'
   || {? ~FUN.ask('Zmieniono ustawienie podzielnej płatności.\nWymaga to aktualizacji danych w dokumentach księgowych i rozrachunkach.\nCzy kontynuować?'@)
      || _zwrot:='SP'
      ?}
   ?}
?};
_zwrot


\dl_analit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Zwraca długość konta analitycznego dla konta
::   WE:  _a  - konto syntetyczne
::       [_b] - numer pozyci pomijanej przy obliczeniach
::----------------------------------------------------------------------------------------------------------------------
_dl:=0;
KS.cntx_psh();
KS.prefix();
{? KS.seek(_a) || _dl+=+KS.SYM; _sep:=KS.ROK().SEP ?};
KS.cntx_pop();
BUD.cntx_psh();
BUD.index('KS'); BUD.prefix(_a);
{? BUD.first()
|| {!
   |? _dl+={? _sep<>',' || 1 ?}+{? var_press('_b')<=0 | _b<>BUD.POZ || BUD.SLU().SLU().DL ?};
      BUD.next()
   !}
?};
BUD.cntx_pop();
_dl


\spr_bud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Sprawdza czy mozna modyfikowac budowe konta syntetycznego
::       lub usunac konto syntetyczne (wersja bez komunikatu)
::   WE: [_a - bez komunikatów]
::   WY: jesli nie podano _a: 1-tak 0-nie
::       jesli podano _a: tresc z komunikatu
::  OLD: \spr_bud/m.fml
::----------------------------------------------------------------------------------------------------------------------
KS.cntx_psh(); ROK_F.cntx_psh();
_sym:=KS.SYM;
{? _=0 || _wyn:=1 || _wyn:='' ?};
{? KS.ROK().FIRMA().TYP='C'
|| _rok:=ROK_F.ref();
   OKRO_F_G.index('ROK_F_G'); OKRO_F_G.prefix(ROK_F.ref());
   {? OKRO_F_G.first()
   || {!
      |? OKRO_F_G.prefix(_rok,OKRO_F_G.FIRMA);
         OKRO_F_G.last();
         {? OKRO_F_G.ROK_F().PLAN_GR='T'
         || KS.cntx_psh(); KS.index('SYM'); KS.prefix(ROK_F.ref(),_sym);
            {? KS.first()
            || {? _=0
               || _wyn:=exec('spr_bud1','konto')
               || _wyn:=exec('spr_bud1','konto',_a)
               ?};
               {? ((_=0 & _wyn) | (_=1 & _wyn='')) & ROK_F.FIRMA().TYP='S'
               || _rw:=exec('rok_f_w','konsolidacja',ROK_F.FIRMA,ROK_F.ref());
                  {? _rw<>null
                  || KS.prefix(_rw,_sym);
                     {? KS.first()
                     || {? _=0
                        || _wyn:=exec('spr_bud1','konto')
                        || _wyn:=exec('spr_bud1','konto',_a)
                        ?}
                     ?}
                  ?}
               ?}
            ?};
            KS.cntx_pop()
         ?};
         OKRO_F_G.prefix(_rok);
         ( (_=0 & _wyn) | (_=1 & _wyn='') ) & OKRO_F_G.next()
      !}
   ?}
|? FIRMA.TYP='S'
|| {? _=0
   || _wyn:=exec('spr_bud1','konto')
   || _wyn:=exec('spr_bud1','konto',_a)
   ?};
   {? (_=0 & _wyn) | (_=1 & _wyn='')
   || _rw:=exec('rok_f_w','konsolidacja',FIRMA.ref(),ROK_F.ref());
      {? _rw<>null
      || KS.cntx_psh(); KS.index('SYM'); KS.prefix(_rw,_sym);
         {? KS.first()
         || {? _=0
            || _wyn:=exec('spr_bud1','konto')
            || _wyn:=exec('spr_bud1','konto',_a)
            ?}
         ?};
         KS.cntx_pop()
      ?}
   ?}
|| {? _=0
   || _wyn:=exec('spr_bud1','konto')
   || _wyn:=exec('spr_bud1','konto',_a)
   ?}
?};
KS.cntx_pop(); ROK_F.cntx_pop();
_wyn


\spr_bud1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Sprawdza czy mozna modyfikowac budowe konta syntetycznego
::       lub usunac konto syntetyczne (wersja bez komunikatu)
::   WE: [_a - bez komunikatów]
::   WY: jesli nie podano _a: 1-tak 0-nie
::       jesli podano _a: tresc z komunikatu
::  OLD: \spr_bud1/m.fml
::----------------------------------------------------------------------------------------------------------------------
_b:=1;
_msg:='';
AN.cntx_psh(); DOK.cntx_psh(); POZ.cntx_psh(); VPOZ.cntx_psh(); POW.cntx_psh(); ROK_F.cntx_psh(); OKRO_F.cntx_psh();
AN.use('koan__'+KS.ROK().KOD);
AN.index('KS'); AN.prefix(KS.ref);
{? AN.first()
|| _msg:='Konto ' + AN.SYM + ' zawiera zapisy w firmie '+ROK_F.FIRMA().SYMBOL+'.' +
         {? _=0
         || '\nNiemożliwe zmiany w budowie konta syntetycznego.'
         || '\nNiemożliwe usunięcie konta syntetycznego.'
         ?};
   {? _=0 || FUN.info(_msg)?}; _b:=0
|| echo('Trwa sprawdzanie dekretacji dokumentów w firmie %1... '@[ROK_F.FIRMA().SYMBOL]);
   OKRO_F.index('ZAM'); OKRO_F.prefix(KS.ROK);
   _e:=1;
   {? _c:=OKRO_F.first()
   || {!
      |? _c & _e & OKRO_F.ZAM <> 'T'
      |! _maska:=KS.ROK().KOD+form(OKRO_F.NR,-2);
         DOK.use('doku'+_maska); POZ.use('pozy'+_maska); VPOZ.use('pozv'+_maska); POW.use('pow_'+_maska);
         DOK.prefix();
         POZ.index('OKWAL_O1'); POZ.prefix('T','N');
         {? _e
         || {? _d:=POZ.first()
            || {! |? _d & _e
                  |! {? ROK_F.SYNT+POZ.KON = KS.SYM
                     || _e:=0; _f:=OKRO_F.NAZ; _g:=POZ.DOK().NK; _h:=POZ.KON
                     || _d:=POZ.next()
                     ?}
                 !}
              ?}
           ?};
           {? _e & _
           || {? _d:=(POZ.prefix('N','N'); POZ.first())
              || {! |? _d & _e
                    |! {? ROK_F.SYNT+POZ.KON=KS.SYM
                       || _e:=0; _f:=OKRO_F.NAZ; _g:=POZ.DOK().NK; _h:=POZ.KON
                       || _d:=POZ.next()
                       ?}
                 !}
              ?}
           ?};
           {? _e || _c:=OKRO_F.next() ?}
      !}
   ?};
   echo();
   {? _e=0
   || _b:=0;
      _msg:='W firmie '+ROK_F.FIRMA().SYMBOL+' w okresie '+_f+'\n istnieje '+
            {? (2+POZ.cur_prfx+1)='N'
            || 'nie'
            || ''
            ?}+'zaakceptowany dokument' +
            '\n o symbolu '+_g+' \n zadekretowany na konto '+ _h +
            {? _=0
            || '.\nNiemożliwe zmiany w budowie konta syntetycznego.'
            || '.\nNiemożliwe usunięcie konta syntetycznego.'
            ?};
      {? _=0 || FUN.info(_msg) ?}
   ?}
?};
{? _b
|| _txt:='';
   ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA); KS.ROK();
   AN_BO.index('ROK_N'); AN_BO.prefix(ROK_F.ref(),KS.SYM);
   _txt+={? AN_BO.first() || ROK_F.NAZ || '' ?};
   {? ROK_F.next()
   || AN_BO.index('ROK'); AN_BO.prefix(ROK_F.ref(),KS.SYM);
      _txt+={? AN_BO.first() || {?_txt<>'' || ' i ' || '' ?}+ROK_F.NAZ || '' ?}
   ?};
   {? _txt<>''
   || _msg:='W firmie '+ROK_F.FIRMA().SYMBOL+' istnieją reguły przekształcenia kont BO w roku '+_txt+' dla konta '+KS.SYM+
            {? _=0
            || '.\nNiemożliwe zmiany w budowie konta syntetycznego.'
            || '.\nNiemożliwe usunięcie konta syntetycznego.'
            ?};
      {? _=0 || FUN.info(_msg) ?}; _b:=0
   ?}
?};
AN.cntx_pop(); ROK_F.cntx_pop(); OKRO_F.cntx_pop(); DOK.cntx_pop(); POZ.cntx_pop(); VPOZ.cntx_pop(); POW.cntx_pop();
{? _=0 || _b || _msg ?}


\chk_anbo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Sprawdzenie poprawności reguły przekształcenia kont
::   WE: _a - poprawianie: 1-tak 0-nie (dołączanie)
::----------------------------------------------------------------------------------------------------------------------
AN_BO.ROK();
_w:=__CHK.record(AN_BO,,'PKON','KON');
{? _w<>''
|| _w
|? exec('rowne','konto',AN_BO.PKON,AN_BO.KON,1)
|| FUN.info('"Stare" i "nowe" konto są identyczne.'@); 0
|? AN_BO.PKON*'?'=0 & exec('rowne','konto',AN_BO.PKON,AN_BO.KON,0,,,2)
|| FUN.info('Konto "stare" i "nowe" mają taką samą budowę.'@); 'PKON'
|? (_r:=exec('licz','konto',AN_BO.PKON)-exec('licz','konto',AN_BO.KON))<0
|| FUN.info('Za mała liczba znaków \'?\' w masce konta "starego".\nLiczba brakujących znaków %1.'@[$-_r]); 0
|? (_r:=exec('akc_mask','konto',AN_BO.PKON,AN_BO.KON))>0
|| FUN.info('Błędne słowniki kont w maskach.\nPoziom %1 konta "starego".'@[$_r]); 0
|? (_r:=exec('is_an_bo','zam_okr_rok',_a))<>null
|| AN_BO.cntx_psh(); AN_BO.prefix(); AN_BO.seek(_r);
   FUN.info('Reguła już istnieje.\n%1 -> %2.'@[AN_BO.PKON,AN_BO.KON]);
   AN_BO.cntx_pop(); 0
|| 1
?}


\rowne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Czy konta analityczne sa identyczne: ta sama syntetyka i budowa
::   WE:  _a  - konto poprzednie
::        _b  - konto nowe
::        _c  - czy porownywac syntetyke? 1-tak 0-nie
::       [_d] - wskazanie na rok konta poprzedniego
::       [_e] - wskazanie na rok konta nowego
::       [_f] - czy dokładnie taka sama budowa?  1(zgodnosc slownikow) 0(zgodnosc typu slownika i dlugosci konta)
::              2 (akceptuj bez względu na budowę)
::   WY: 1-tak 0-nie
::  OLD: \rowne/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
KS.cntx_psh(); KS.index('SYM');
ROK_F.cntx_psh();
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
_d:={? var_pres('_d')<=0 || null || _d ?};
_e:={? var_pres('_e')<=0 || null || _e ?};
{? _d
|| ROK_F.prefix();
   ROK_F.seek(_d)
?};
_sb:=ROK_F.SEP;
_db:=ROK_F.SYNT;
KS.prefix(ROK_F.ref(),_db+_b); _ks_b:={? KS.first() || KS.ref() || null ?};
{? (~_e & ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref()) & ROK_F.prev()) |
   (_e & ROK_F.seek(_e))
|| _sa:=ROK_F.SEP;
   _da:=ROK_F.SYNT;
   KS.prefix(ROK_F.ref(),_da+_a); _ks_a:={? KS.first() || KS.ref() || null ?};
   {? _da+_a=_db+_b & _ks_a<>null & _ks_b<>null
   || _a:=_da-_a;
      _b:=_db-_b;
      BUD.index('KS'); BUD.prefix(_ks_a);
      {? BUD.first()
      || _ok:=1;
         {! |?
            {? _sa<>',' || _a:=1-_a ?};
            _dl_a:=BUD.SLU().SLU().DL;
            _slu_a:=SLU.ref();
            _wzslu_a:=BUD.SLU().SLU().WZ;
            BUD.cntx_psh();
            BUD.prefix(_ks_b,BUD.POZ);
            {? BUD.first()
            || _dl_b:=BUD.SLU().SLU().DL;
               _slu_b:=BUD.SLU().SLU;
               _wzslu_b:=BUD.SLU().SLU().WZ;
               {? _sb<>',' || _b:=1-_b ?}
            || _ok:=0
            ?};
            BUD.cntx_pop();
            {? _ok
            || _fok:={? _<6 | _f=1
                     || _slu_a=_slu_b
                     |? _f=0
                     || (_wzslu_a=_wzslu_b) & (_dl_a=_dl_b)
                     |? _f=2
                     || 0
                     ?}
            ?};
            {? _ok & _fok & (_c=0 | _dl_a+_a=_dl_b+_b)
            || _a:=_dl_a-_a;
               _b:=_dl_b-_b
            || _ok:=0
            ?};
            _ok & BUD.next()
         !};
         {? _ok ||
            BUD.prefix(_ks_b,BUD.POZ+1);
            {? BUD.first() || _ok:=0 ?}
         ?}
      || BUD.prefix(_ks_b); {? ~BUD.first() || _ok:=1 ?}
      ?}
   ?}
?};
ROK_F.cntx_pop(); KS.cntx_pop();
_ok


\licz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Zlicza znaki '?'
::   WE: _a - napis
::   WY: Liczba znakow '?' w napisie
::  OLD: \licz/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
_liczba:=0;
{! _i:=1 .. +_a |!
   {? (_i+_a)+1='?' || _liczba+=1 ?}
!};
_liczba


\akc_mask
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Sprawdza poprawnosc masek kont z uwzglednieniem budowy i slownikow
::       w analitykach
::   WE: _a - maska poprzedniego konta
::       _b - maska nowego konta
::   WY: Poziom analityki konta pop. z roznymi slownikami
::       lub 0 gdy maski poprawne
::  OLD: \akc_mask/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
_poz_a:=_poz_b:=_nr_a:=_nr_b:=0;
_ks_a:=_ks_b:=null;
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
{? var_pres('rok_bo')>0 || ROK_F.seek(rok_bo) || SSTALE.AR() ?};
_sep_b:=ROK_F.SEP;
KS.cntx_psh();
KS.index('SYM'); BUD.index('KS');
KS.prefix(ROK_F.ref(),ROK_F.SYNT+_b); {? KS.first() || _ks_b:=KS.ref() ?};
{? ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref()) & ROK_F.prev()
|| _sep_a:=ROK_F.SEP;
   KS.prefix(ROK_F.ref(),ROK_F.SYNT+_a); {? KS.first() || _ks_a:=KS.ref() ?};
   ROK_F.next()
?};
_l:=exec('licz','konto',_b);
{? _l>0 & _ks_b<>null & _ks_a<>null
|| {! _j:=1 .. _l |? ~_ok |!
      _p:=_a*'?'; _nr_a+=_p; _a:=_p-_a; _poz_a:=exec('poz_znak','konto',_ks_a,_nr_a);
      _p:=_b*'?'; _nr_b+=_p; _b:=_p-_b; _poz_b:=exec('poz_znak','konto',_ks_b,_nr_b);
      BUD.prefix(_ks_a,_poz_a);
      _slu:={? BUD.first() || BUD.SLU || null ?};
      BUD.prefix(_ks_b,_poz_b);
      {? BUD.first() ||
         {? _slu<>BUD.SLU || _ok:=_poz_a ?}
      ?}
   !}
|| _ok:=(_l<>0)
?};
KS.cntx_pop();
_ok


\poz_znak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Zwraca nr poziomu budowy konta dla podanego nr znaku
::   WE: _a - wskazanie na konto syntetyczne (_KS)
::       _b - nr znaku z konta
::   WY: Numer poziomu budowy, na ktorym wystepuje znak lub -1 - blad
::  OLD: \poz_znak/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
_poz:=-1; KS.prefix();
{? KS.seek(_a) ||
   _dl:=KS.ROK().SYNT;
   {? _b<=_dl
   || _poz:=0
   || BUD.index('KS'); BUD.prefix(KS.ref);
      {? BUD.first() ||
         {! |?
            {? ROK_F.SEP<>',' || _dl+=1 ?};
            _dl+=BUD.SLU().SLU().DL;
            {? _b<=_dl || _poz:=BUD.POZ ?};
            _poz=-1 & BUD.next()
         !}
      ?}
   ?}
?};
_poz


\czy_konto_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AFI] [19.42]
:: OPIS: Czy konto SP
::   WE: _a  - symbol konta analitycznego
::  OLD: \czy_konto_sp/konto.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:='N';
ROK_F.cntx_psh();
ROK_F.prefix();
ROK_F.seek(SSTALE.AR);
_vk:=ROK_F.SYNT+form(_a);
KS.index('SYM'); KS.prefix(ROK_F.ref());
{? KS.find_key(_vk)
|| _ret:=KS.SP
?};
ROK_F.cntx_pop();
_ret


\kk_slo_bfw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Akcja 'Okienko - przed' dla tabeli KK okno SLO
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__kk_limit');
_ind:=KK.index('?');

:: Obiekt przechowujący informacje o ustawieniach użytkownika odnośnie okienka konta kosztów
:: Zapamiętujemy ustawienia początkowe ustawione w defie (indeks początkowy)
__kk_limit:=obj_new('LIMIT','IND_LIM','IND_EXT');
__kk_limit.LIMIT:={? _ind='KONTASYS' || 1 || 0 ?};
__kk_limit.IND_LIM:={? __kk_limit.LIMIT || _ind || 'KONTASYS' ?};
__kk_limit.IND_EXT:={? ~__kk_limit.LIMIT || _ind || 'KONTAKOD' ?};

_set:=exec('kk_zakres_ograniczony','konto',BPMN.KK_DOM,__kk_limit.LIMIT);
{? __kk_limit.LIMIT<>_set
|| exec('kk_slo_config','konto',_set)
?};
1


\kk_widok_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Zmiana zakresu wyświetlanych danych dla kont kosztów (ograniczenie do bieżącej dziedziny)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_limit:={? __kk_limit.LIMIT || 'T' || 'N' ?};
_set:=exec('kk_zakres_zmien','konto',BPMN.KK_DOM,_limit);
exec('kk_slo_config','konto',_set);
1


\kk_slo_config
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Konfiguracja okienka słownikowego
::   WE: _a - Czy ograniczony zakres (1/0)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| KK.index(__kk_limit.IND_LIM);
   KK.prefix(exec('firma','ustawienia'),BPMN.KK_DOM)
|| KK.index(__kk_limit.IND_EXT);
   KK.prefix(exec('firma','ustawienia'))
?};
__kk_limit.LIMIT:=_a


\kk_zakres_zmien
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Zapisuje ustawienia zakresu konta kosztów w pliku ustawień użytkownika.
::   WE: _a STRING - kod dziedziny
::       _b STRING - czy ograniczony zakres? (T/N)
::   WY: czy ograniczony zakres [1/0]
::----------------------------------------------------------------------------------------------------------------------
_set:={? exec('kk_zakres_ograniczony','konto',_a,_b) || 'N' || 'T' ?};
exec('set','#profile',,exec('kk_zakres_sekcja','konto'),_a,_set);
_set='T'


\kk_zakres_sekcja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Zwraca kod sekcji w pliku ustawień użytkownika.
::   WE:
::   WY: kod sekcji w pliku ustawień
::----------------------------------------------------------------------------------------------------------------------
'kk_zakres_ograniczony'


\kk_zakres_ograniczony
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Sprawdzenie zastosowania zakresu ograniczonego dla dziedziny.
::   WE: _a STRING - symbol dziedziny
::       [_b] STRING - czy zakres ograniczony? (1/0 - domyślnie)
::   WY: 0/1 - wszystkie dziedziny / bieżąca dziedzina
::----------------------------------------------------------------------------------------------------------------------
_default:={? var_pres('_b')=type_of(0) & _b=1 || 'T' || 'N' ?};
exec('get','#profile',,exec('kk_zakres_sekcja','konto'),_a,_default)='T'


\kk_slo_afw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Akcja 'Okienko - po' dla tabeli KK okno SLO
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__kk_limit');
1

:Sign Version 2.0 jowisz:1045 2023/12/22 14:10:25 700ee53540f5d7b7746200db62bad566a1dbdde4940acba7456daca54c4c5bcedc4ab41b6548f03a75e986a317c3dca1a79db2800116cfbb13addc54c812a932363832c2206afedbfa5899e2c70d9518f6f484b85ad29e984061d4a55ec7124f8a5ceea9a48cb28bb4ab6d119378e717b372003fa04ddb8a6681456994f0356c
