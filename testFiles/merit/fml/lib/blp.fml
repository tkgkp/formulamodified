:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: blp.fml
:: Utworzony: 24.10.2019
:: Autor: MB
:: Systemy: EMAG,FIKS,IF,KALI,PROD,ESTRA,FAKTURY,UMOWY,KASA
::======================================================================================================================
:: Zawartosc:  Formuly do obslugi białej listy podatników
::======================================================================================================================


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [1410]
:: OPIS: Wyświetla zapytania kierowane do API BLP
::----------------------------------------------------------------------------------------------------------------------
KHCHKNIP.cntx_psh();
KHCHKNIP.index('DATA');
KHCHKNIP.prefix('K');
KHCHKNIP.first();
KHCHKNIP.win_sel('WER');
KHCHKNIP.win_fml('WER',,'ID_REQ',,'ICON_BEFORE',"exec('icona_zal','blp')");
KHCHKNIP.select();
KHCHKNIP.cntx_pop()


\set_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Ustawia okna redagowania
::----------------------------------------------------------------------------------------------------------------------
{? KHCHKNIP.TYPE='B'
|| KHCHKNIP.win_edit('RED_B'); 1
|? KHCHKNIP.TYPE='K'
|| KHCHKNIP.win_edit('RED'); 1
|| KHCHKNIP.win_edit('')
?}


\bv_khchknip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Przed wyświetleniem
::----------------------------------------------------------------------------------------------------------------------
{? exec('set_edit','blp')
|| KHCHKNIP.display()
?}


\modify
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Przed dołącz/popraw tabeli KHCHKNIP
::   WE: _a - 1-dołącz, 0-popraw
::----------------------------------------------------------------------------------------------------------------------
_add:=_a;
{? ~_add & KHCHKNIP.ID_REQ<>''
|| FUN.info('Nie można modyfikować danych pobranych z\nwykazu podatników VAT.'@);
   return(0)
?};

{? _add
|| KHCHKNIP.blank();
   {? var_pres('KHchkTYP')>0
   || KHCHKNIP.TYPE:=KHchkTYP;
      KHCHKNIP.NIP:=KH.SNIP
   ?};
   {? KHCHKNIP.TYPE='B'
   || KHCHKNIP.RBK:=SKID_RBK.N;
      KHCHKNIP.DATA_DO:=date()
   ?};
   KHCHKNIP.USER:=OPERATOR.USER().KOD;
   KHCHKNIP.BAZA:='K';
   KHCHKNIP.D_ACTIVE:=date();
   KHCHKNIP.memo_set(,'RB');
   KHCHKNIP.memo_set(,'OSOBY')
|| KHCHKNIP.memo_get(,'RB');
   KHCHKNIP.memo_get(,'OSOBY')
?};
KHchkNIP:=1;
_red:=KHCHKNIP.win_edit('?');
KHCHKNIP.win_edit('RED_ALL');
KHCHKNIP.bl_file('ZAL',0);
{? KHCHKNIP.edit("exec('after_modify','blp')")
|| _ref:=null;
   KHCHKNIP.cntx_psh();
   KHCHKNIP.prefix();
   {? _add
   || {? KHCHKNIP.add()
      || _ref:=KHCHKNIP.ref();
         KHCHKNIP.memo_put(,'RB');
         KHCHKNIP.memo_put(,'OSOBY');
         KHCHKNIP.put()
      ?}
   || KHCHKNIP.memo_put(,'RB');
      KHCHKNIP.memo_put(,'OSOBY');
      KHCHKNIP.put()
   ?};
   {? (_file1:=KHCHKNIP.bl_file('ZAL'))<>''
   || KHCHKNIP.bl_put('ZAL',_file1)
   ?};
   KHCHKNIP.cntx_pop();
   {? _ref
   || KHCHKNIP.seek(_ref)
   ?}
?};
KHCHKNIP.bl_file('ZAL',1);
KHCHKNIP.win_edit(_red);
VAR_DEL.delete('KHchkNIP');
1


\after_modify
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Rekord po okna KHCHKNIP
::----------------------------------------------------------------------------------------------------------------------
KHCHKNIP.NIP:=exec('niptostr','#string',KHCHKNIP.NIP);
_ret:=chk_rec('NIP');
{? _ret='' & exec('nip_ok','#id',KHCHKNIP.NIP,1)=0 &
   FUN.ask('Wprowadzony numer NIP jest niepoprawny.\nCzy kontynuować?'@)=0
|| _ret:='NIP'
?};
{? _ret='' & KHCHKNIP.TYPE='B'
|| _ret:=chk_rec('RBK')
?};
{? _ret=''
|| {? KHCHKNIP.TYPE='B'
   || _ret:=chk_rec('D_ACTIVE','DATA_DO');
      {? _ret='' & KHCHKNIP.D_ACTIVE>KHCHKNIP.DATA_DO
      || FUN.info('Data późniejsza niż data do.'@);
         _ret:='D_ACTIVE'
      ?};
      {? _ret='' & KHCHKNIP.DATA_DO>date()
      || FUN.info('Data nie może być późniejsza niż dzisiejsza.'@);
         _ret:='DATA_DO'
      ?}
   || _ret:=chk_rec('D_ACTIVE')
   ?}
?};
{? _ret=''
|| {? KHCHKNIP.TYPE='K'
   || _ref:=KHCHKNIP.ref();
      KHCHKNIP.cntx_psh();
      KHCHKNIP.index('ID'); KHCHKNIP.prefix('K',KHCHKNIP.NIP,'',KHCHKNIP.D_ACTIVE);
      {? KHCHKNIP.first() & (-menu_txt()<>'popraw' | KHCHKNIP.ref()<>_ref)
      || FUN.info('Istnieje sprawdzenie na wskazaną datę.'@);
         _ret:='D_ACTIVE'
      ?};
      KHCHKNIP.cntx_pop()
   || _od:=KHCHKNIP.D_ACTIVE;
      _do:=KHCHKNIP.DATA_DO;
      _ref:=KHCHKNIP.ref();
      KHCHKNIP.cntx_psh();
      KHCHKNIP.index('ID'); KHCHKNIP.prefix('B',KHCHKNIP.NIP,KHCHKNIP.RBK);
      {? KHCHKNIP.find_ge(_od) & KHCHKNIP.DATA_DO>=_od & (-menu_txt()<>'popraw' | KHCHKNIP.ref()<>_ref)
      || FUN.info('Istnieje sprawdzenie na wskazany zakres dat.'@);
         _ret:='D_ACTIVE'
      ?};
      {? _ret='' & KHCHKNIP.find_ge(_do) & KHCHKNIP.DATA_DO>=_do & (-menu_txt()<>'popraw' | KHCHKNIP.ref()<>_ref)
      || FUN.info('Istnieje sprawdzenie na wskazany zakres dat.'@);
         _ret:='DATA_DO'
      ?};
      {? _ret='' & KHCHKNIP.find_le(_od) & (KHCHKNIP.D_ACTIVE<=_od & KHCHKNIP.DATA_DO>=_do) &
         (-menu_txt()<>'popraw' | KHCHKNIP.ref()<>_ref)
      || FUN.info('Istnieje sprawdzenie na wskazany zakres dat.'@);
         _ret:='DATA_DO'
      ?};
      KHCHKNIP.cntx_pop()
   ?}
?};
_ret


\before_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Przed redakcją pól tabeli KHCHKNIP
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
{? _fld='TYPE'
|| var_pres('KHchkTYP')<=0 | KHchkTYP=''
|? KHCHKNIP.TYPE='B'
|| {? var_pres('KHchkTYP')>0
   || ',D_ACTIVE,C_ACTIVE,'*(','+_fld+',')
   || ',NIP,RBK,D_ACTIVE,C_ACTIVE,'*(','+_fld+',')
   ?}
|| {? var_pres('KHchkTYP')>0
   || ',NIP,RBK,'*(','+_fld+',')=0
   || _fld<>'RBK'
   ?}
?}


\after_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Po redakcji pól tabeli KHCHKNIP
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
{? _fld='TYPE'
|| win_disp()
?};
1


\before_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Przed wyświetleniem pól tabeli KHCHKNIP
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('KHchkNIP')>0
|| {? exec('before_edit','blp')
   || ''
   || exec('findfnrd','color')
   ?}
|| ''
?}


\triger
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Triger dla tabeli KHCHKNIP
::   WE: _a  - typ:
::             -1 - przed add, -2 - przed put, -3 - przed del
::              1 - po add,     2 - po put,     3 - po del
::       [_b] - wynik operacji del
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('D_ACTIVE',KHCHKNIP)>0
|| {? _a=-3
   || {? KHCHKNIP.TYPE='K' & KHCHKNIP.KH
      || VAR_DEL.delete('KHchkDel');
         KHchkDel:=obj_new('TYPE','REF');
         KHchkDel.TYPE:=KHCHKNIP.TYPE;
         KHchkDel.REF:=KHCHKNIP.KH
      |? KHCHKNIP.TYPE='B' & KHCHKNIP.RBK<>''
      || VAR_DEL.delete('KHchkDel');
         KHchkDel:=obj_new('TYPE','NIP','REF');
         KHchkDel.TYPE:=KHCHKNIP.TYPE;
         KHchkDel.NIP:=KHCHKNIP.NIP;
         KHchkDel.REF:=KHCHKNIP.RBK
      ?}
   |? _a=3
   || {? var_pres('KHchkDel')>0
      || {? KHchkDel.TYPE='K'
         || KH.cntx_psh();
            KH.prefix();
            {? KH.seek(KHchkDel.REF)
            || KHCHKNIP.cntx_psh();
               KHCHKNIP.index('D_ACTIVE'); KHCHKNIP.prefix(KH.ref(),'K');
               {? KHCHKNIP.first()
               || KH.S_VAT:=KHCHKNIP.C_ACTIVE;
                  KH.S_VAT_D:=KHCHKNIP.D_ACTIVE;
                  KH.put()
               || KH.S_VAT:='';
                  KH.S_VAT_D:=date(0,0,0);
                  KH.put()
               ?};
               KHCHKNIP.cntx_pop()
            ?};
            KH.cntx_pop()
         || KHCHKNIP.cntx_psh();
            KHCHKNIP.index('DATA_DO'); KHCHKNIP.prefix('B',KHchkDel.NIP,KHchkDel.REF,);
            {? KHCHKNIP.first()
            || _s_vat:=KHCHKNIP.C_ACTIVE;
               _s_vat_d:=KHCHKNIP.DATA_DO
            || _s_vat:='';
               _s_vat_d:=date(0,0,0)
            ?};
            KHCHKNIP.cntx_pop();
            KH.cntx_psh();
            KH.index('SNIP'); KH.prefix(2,KHchkDel.NIP,);
            SKID_RBK.cntx_psh();
            SKID_RBK.index('TRN');
            {? KH.first()
            || {!
               |? SKID_RBK.prefix('KH',#KH.ref(),RACHBANK.FIRMA,KHchkDel.REF,);
                  {? SKID_RBK.first()
                  || {!
                     |? SKID_RBK.S_VAT:=_s_vat;
                        SKID_RBK.S_VAT_D:=_s_vat_d;
                        SKID_RBK.put();
                        SKID_RBK.next()
                     !}
                  ?};
                  KH.next()
               !}
            ?};
            SKID_RBK.cntx_pop();
            KH.cntx_pop()
         ?}
      ?};
      VAR_DEL.delete('KHchkDel')
   |? _a<0
   || {? KHCHKNIP.NIP<>'' & KHCHKNIP.KH=null
      || KH.cntx_psh();
         KH.index('SNIP'); KH.prefix(2,KHCHKNIP.NIP,);
         {? KH.first()
         || KHCHKNIP.KH:=KH.ref()
         ?};
         KH.cntx_pop()
      ?}
   || {? KHCHKNIP.KH & KHCHKNIP.TYPE='K'
      || KH.cntx_psh();
         KH.prefix();
         {? KH.seek(KHCHKNIP.KH)
         || {? KH.S_VAT_D<=KHCHKNIP.D_ACTIVE
            || KH.S_VAT_D:=KHCHKNIP.D_ACTIVE;
               KH.S_VAT:=KHCHKNIP.C_ACTIVE;
               KH.put()
            ?}
         ?};
         KH.cntx_pop()
      |? KHCHKNIP.TYPE='B' & KHCHKNIP.RBK<>''
      || KH.cntx_psh();
         KH.index('SNIP'); KH.prefix(2,KHCHKNIP.NIP,);
         SKID_RBK.cntx_psh();
         SKID_RBK.index('TRN');
         {? KH.first()
         || {!
            |? SKID_RBK.prefix('KH',#KH.ref(),RACHBANK.FIRMA,KHCHKNIP.RBK,);
               {? SKID_RBK.first()
               || {!
                  |? {? SKID_RBK.S_VAT_D<=KHCHKNIP.DATA_DO
                     || SKID_RBK.S_VAT_D:=KHCHKNIP.DATA_DO;
                        SKID_RBK.S_VAT:=KHCHKNIP.C_ACTIVE;
                        SKID_RBK.put()
                     ?};
                     SKID_RBK.next()
                  !}
               ?};
               KH.next()
            !}
         ?};
         SKID_RBK.cntx_pop();
         KH.cntx_pop()
      ?}
   ?}
?};
{? _a<0 || 1 || ~~ ?}


\obj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Zwraca obiekt do obsługi zapytań o aktywność podatnika VAT i jego rachunku bankowego
:: ~OST: INFOPEN,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_res:=obj_new(
   'TYPE','ID','DATA','RBK','KNIPRB','API','AT','CHKGRVAT',
   'RES','KOD','REF','SKIP',
   'STATUS','ACTIVE','OPIS','ERR','TXT','NAZ','ADRES','REGON','KRS','PESEL','ID_REQ','RBS','NIP','D','T','GRVAT',
   'D_REJ','D_USU','P_USU','D_RET','P_RET',
   'OSOBY',
   'BUF','TAB',
   'setActiv','find','clear','check','find_buf','add_buf','download','getText','setDT'
);
_res.KNIPRB:=PAR_SKID.get(98)='T';
_res.API:=PAR_SKID.get(97)='A';
_res.CHKGRVAT:=0;
:: Bramka testowa
::_res.AT:='f581c145fa3014a604edcaab14e81cecf936c873df40311063fea613f98576ba';
:: Bramka produkcyjna
_res.AT:='0b2f6df629c8baf9b855614796523814ec054e577422a365e3ba1f9ac1b4413b';
_res.clear:="
   .ACTIVE:='?';
   .KOD:=.OPIS:=.ID_REQ:=.NAZ:=.ADRES:=.REGON:=.KRS:=.STATUS:=.OSOBY:=.PESEL:=.ERR:=.NIP:='';
   .P_USU:=.P_RET:='';
   .D_REJ:=.D_USU:=.D_RET:=date(0,0,0);
   .RES:=-1;
   .SKIP:=0;
   .REF:=0;
   .GRVAT:=-1
";
_res.setActiv:="
   {? .DATA=date()
   || .ACTIVE:={? 'CZ'*.KOD || 'T' || 'N' ?}
   || .ACTIVE:='T';
      {? .D_REJ=date(0,0,0) |
         .DATA<.D_REJ |
         .D_USU<>date(0,0,0) & .DATA>.D_USU &
         (.D_RET=date(0,0,0) | .DATA>.D_RET)
      || .ACTIVE:='N'
      ?}
   ?}
";
_res.find:="
   {? .BUF & .find_buf() || return(1) ?};
   {? .CHKGRVAT
   || KH.cntx_psh();
      KH.index('SNIP'); KH.prefix(2,.ID,);
      {? KH.first()
      || _gr_vat:=exec('kh_grvat_szuk','kontrahent',KH.ref(),1);
         {? _gr_vat<>null()
         || .GRVAT:=1;
            KH.prefix;
            KH.seek(_gr_vat);
            {? exec('nip_ok','#id',KH.SNIP)
            || .ID:=KH.SNIP
            ?}
         || .GRVAT:=0
         ?}
      ?};
      KH.cntx_pop()
   ?};
   {? .TYPE='B'
   || _co_ile:=1
   || _co_ile:=exec('period','blp',.ID)
   ?};
   {? _co_ile=-1
   || .RES:=-2
   |? _co_ile=-2
   || .OPIS:=.ERR:='Brak naniesiania zmian w definicji na potrzeby aktualizacji 19.42_09 - Biała lista podatników.'@;
      .RES:=200;
      -2
   || _find:=0;
      {? .TYPE='B'
      || KHCHKNIP.index('DATA_DO');
         KHCHKNIP.prefix('B',.ID,.RBK,);
         _find:=KHCHKNIP.find_le(.DATA) & KHCHKNIP.D_ACTIVE<=.DATA
      || KHCHKNIP.index('ID');
         KHCHKNIP.prefix(.TYPE,.ID,.RBK,);
         {? KHCHKNIP.find_ge(.DATA)
         || _find:=.DATA-KHCHKNIP.D_ACTIVE<=_co_ile-1
         ?};
         {? _find=0 & KHCHKNIP.find_le(.DATA)
         || _find:=KHCHKNIP.D_ACTIVE-.DATA<=_co_ile-1
         ?}
      ?};
      {? _find=1
      || .RES:=200;
         .SKIP:=1;
         .ACTIVE:=KHCHKNIP.C_ACTIVE;
         .ID_REQ:=KHCHKNIP.ID_REQ;
         .D_USU:=KHCHKNIP.D_REMOVE;
         .D_RET:=KHCHKNIP.D_REST;
         .D_REJ:=KHCHKNIP.D_REG;
         .NAZ:=KHCHKNIP.NAZ;
         .ADRES:=KHCHKNIP.ADRES;
         .REGON:=KHCHKNIP.REGON;
         .KRS:=KHCHKNIP.KRS;
         .STATUS:=KHCHKNIP.STATUS;
         .KOD:=1+.STATUS;
         .OPIS:=exec('vat_info','blp',.);
         .OSOBY:=KHCHKNIP.memo_txt(,1,'OSOBY')
      ?};
      _find
   ?}
";
_res.find_buf:="
   {? var_pres('TAB',.)<=0
   || .TAB:=tab_tmp(3,
         'DATA','DATE','Data',
         'RBK','STRING[26]','Rachunek',
         'NIP','STRING[10]','NIP',
         'ACTIVE','STRING[1]','Aktywny'
      )
   ?};
   {? .TAB.find_key(.DATA,.RBK,.ID,)
   || .ACTIVE:=.TAB.ACTIVE;
      1
   ?}
";
_res.add_buf:="
   _tab:=.TAB;
   _tab.DATA:=.DATA;
   _tab.RBK:=.RBK;
   _tab.NIP:=.ID;
   _tab.ACTIVE:=.ACTIVE;
   _tab.add()
";
_res.getText:="
   _fn:=_a;
   _f:=fopen('@'+_fn,'r',0);
   _txt:='';
   {? _f
   || {! |? {? (_line:=fread(_f))<>'\n' || _txt+=_line; 1 ?} !};
      fclose(_f)
   ?};
   _txt
";
_res.download:="
   {? cli_ver()='cgi' | cli_ver()='interm' || _url:=_a || _url:='@'+_a ?};
   _http:=exec('inet_get','proxy',_url);
   {? .API=0 & .TYPE='B'
   || _http.append_h('Content-Type: application/json');
      _http.append_h('AccessToken: '+.AT)
   ?};
   {? sys_name(1)='U_LINUX'
   || {? .API=1
      || _pem:='ssl_mf.pem'
      || _pem:='ssl_abs.pem'
      ?};
      _pem_local:='@'+tmp_dir()+'/'+_pem;
      fcopy(_pem,_pem_local,1,0,1);
      _http.set_cert(_pem_local)
   ?};
   .RES:=_http.http_get();
   _http.get_data()
";
_res.check:="
   _res:=.;
   _res.clear();
   _res.TYPE:=_a;
   _res.ID:=_b;
   _res.DATA:={? var_pres('_c')>0 || _c || date() ?};
   _res.RBK:={? var_pres('_d')>0 || _d || '' ?};
   _res.BUF:={? var_pres('_e')>0 || _e ?};
   _res.D:=date();
   _res.T:=time();
   {? .find()=0
   ||
:: Sprawdzenie przez API
:: bramka testowa
:: _url:='https://wl-api.mf.gov.pl:9091/wykaz-podatnikow/';
:: bramka produkcyjna
:: _url:='https://wl-api.mf.gov.pl/';

:: Sprawdzenie rachunków bakowych API ABS
:: bramka testowa
:: _url:='https://wawsdocker01.abs.assecobs.pl';
:: bramka produkcyjna
:: _url:='https://waproapi.assecobs.pl';

      _url:='https://wl-api.mf.gov.pl/';
      {? _res.TYPE='B' & _res.RBK<>''
      || {? .API=0
         || _url:='https://waproapi.assecobs.pl';
            _url+='/whitelist/Check/nip/'+_res.ID+'/bank-account/'+_res.RBK+'?date='+STR.gsub($_res.DATA,'/','');
            _str:=.download(_url);
         {? _res.RES<>200
         || _res.ACTIVE:='?';
            _res.ID_REQ:='plik';
            _res.ERR:='Bramka ABS zwróciła kod: '+$_res.RES;
            _res.RES:=0
         || _obj:=exec('jsonobj','blp',_str);
            {? (_val:=_obj.getStr('customerStatus'))<>''
            || _res.STATUS:=_val;
               _res.KOD:=_res.ACTIVE:={? 'AZ'*(1+_val) || 'T' || 'N' ?};
               _res.ID_REQ:='plik_'+$KHCHKNIP.tm_stamp();
               _res.OPIS:=exec('vat_info','blp',_res)
            || _res.OPIS:='Powstał nieznany błąd podczas komunikacji z bramką ABS.'
            ?}
         ?}
         || _url+='api/check/nip/'+_res.ID+'/bank-account/'+_res.RBK+'?date='+STR.gsub($_res.DATA,'/','-');
            _str:=.download(_url);
            {? _res.RES<>200 & _res.RES<>400
            || _res.ERR:='Bramka zwróciła kod: '+$_res.RES;
               _res.RES:=0
            || _obj:=exec('jsonobj','blp',_str);
               {? (_val:=_obj.getStr('accountAssigned'))<>''
               || _res.STATUS:=_val;
                  _res.KOD:=_res.ACTIVE:=1+_val;
                  _res.ID_REQ:=_obj.getStr('requestId');
                  _res.OPIS:=exec('vat_info','blp',_res);
                  _res.setDT(_obj)
               |? (_val:=_obj.getStr('code'))<>''
               || _res.STATUS:=_val;
                  _res.KOD:='N';
                  _res.ERR:=_val;
                  {? (_val:=_obj.getStr('message'))<>''
                  || _res.ERR+=' - '+_val
                  ?};
                  _res.OPIS:='Bramka Ministerstwa Finansów zwróciła następujące informacje:\n\n'+_res.ERR
               ?}
            ?}
         ?}
      || {? _res.RBK<>''
         || _url+='api/search/bank-accounts/'+_res.RBK+'?date='+STR.gsub($_res.DATA,'/','-')
         || _url+='api/search/nip/'+_res.ID+'?date='+STR.gsub($_res.DATA,'/','-')
         ?};
         _str:=.download(_url);
         {? _res.RES<>200 & _res.RES<>400
         || _res.ERR:='Bramka zwróciła kod: '+$_res.RES;
            _res.RES:=0
         || _obj:=exec('jsonobj','blp',_str);
            {? (_val:=_obj.getStr('statusVat'))<>''
            || _res.STATUS:=_val;
               _res.KOD:=1+_val;
               _res.NIP:=_obj.getStr('nip');
               _res.ID_REQ:=_obj.getStr('requestId');
               _res.D_REJ:=_obj.getDate('registrationLegalDate');
               _res.D_USU:=_obj.getDate('removalDate');
               _res.P_USU:=_obj.getStr('removalBasis');
               _res.D_RET:=_obj.getDate('restorationDate');
               _res.P_RET:=_obj.getStr('restorationBasis');
               _res.NAZ:=_obj.getStr('name');
               _res.ADRES:=_obj.getStr('workingAddress');
               {? _res.ADRES=''
               || _res.ADRES:=_obj.getStr('residenceAddress')
               ?};
               _res.setActiv();
               _res.OPIS:=exec('vat_info','blp',_res);
               {? var_pres('RBS',_res)>0 || obj_del(_res.RBS) ?};
               _res.RBS:=_obj.getStrArr('accountNumbers');
               _res.KRS:=_obj.getStr('krs');
               _res.REGON:=_obj.getStr('regon');
               _res.PESEL:=_obj.getStr('pesel');
               _osoby:='';
               _trep:=_obj.getObjArr('representatives');
               _tpro:=_obj.getObjArr('authorizedClerks');
               _tpar:=_obj.getObjArr('partners');
               {? var_pres('_trep')>0 || _osoby+='Reprezentanci:\n'+exec('osoby','blp',_obj,_trep) ?};
               {? var_pres('_tpro')>0 || _osoby+='Prokurenci:\n'+exec('osoby','blp',_obj,_tpro) ?};
               {? var_pres('_tpar')>0 || _osoby+='Partnerzy:\n'+exec('osoby','blp',_obj,_tpar) ?};
               _res.OSOBY:=_osoby;
               _res.setDT(_obj)
            |? (_val:=_obj.getStr('requestId'))<>''
            || _res.STATUS:='';
               _res.KOD:=_res.ACTIVE:='N';
               _res.ID_REQ:=_val;
               _res.OPIS:='Podmiot nie figuruje w rejestrze VAT.'
            |? (_val:=_obj.getStr('code'))<>''
            || _res.STATUS:=_val;
               _res.ERR:=_val;
               {? (_val:=_obj.getStr('message'))<>''
               || _res.ERR+=' - '+_val
               ?};
               _res.OPIS:='Bramka Ministerstwa Finansów zwróciła następujące informacje:\n\n'+_res.ERR
            || _res.OPIS:='Bramka Ministerstwa Finasów nie zwraca żadnych\ninformacja na temat tego kontahenta.';
               _res.RES:=0
            ?}
         ?}
      ?};
      {? _res.RES=200
      || {? _res.TYPE='K'
         || {? _res.RBK=''
            || KH.cntx_psh();
               KH.index('SNIP'); KH.prefix(2,_res.ID,);
               {? KH.first()
               || {!
                  |? KH.cntx_psh;
                     exec('add_chk_vat','kontrahent',_res.ID,_res.TYPE,KH.ref(),'CZ'*_res.KOD,_res);
                     KH.cntx_pop;
                     KH.next()
                  !}
               || exec('add_chk_vat','kontrahent',_res.ID,_res.TYPE,null,'CZ'*_res.KOD,_res)
               ?};
               KH.cntx_pop()
            || _res.TYPE:='B';
               _res.OPIS:=exec('vat_info','blp',_res);
               exec('add_rbk','blp',_res.ID,_res.RBK,_res.ACTIVE,_res.DATA,_res.ID_REQ)
            ?}
         |? .API=0 | _res.ACTIVE='T' | _res.KNIPRB
         || exec('add_rbk','blp',_res.ID,_res.RBK,_res.ACTIVE,_res.DATA,_res.ID_REQ)
         ?}
      ?};
      {? .BUF || .add_buf() ?}
   ?}
";
_res.setDT:="
   _obj:=_a;
   {? (_dt:=_obj.getStr('requestDateTime'))<>''
   || _d:=10+_dt;
      _t:=_dt+8;
      .D:=date(#(_d+4),#(3-_d-5),#(2+_d));
      .T:=time(#(2+_t),#(3-_t-3),#(_t+2))
   ?}
";
_res


\check
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Sprawdza aktywność podatnika VAT po NIP-ie przez API wykazu podatników VAT (Biała lista podatników)
::   WE:  _a  - typ sprawdzenia: K-kontrahent, B-rachunek bankowy
::        _b  - NIP
::       [_c] - data (domyślnie bieżąca)
::       [_d] - rachunek bankowy
::       [_e] - buforowany wynik aktywności
::       [_f] - czy sprawdzać grupę VAT dla podanego NIPu, domyślnie 1
::   WY: tablica nazwana z wynikiem zapytania
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_c')<=0 || _c:=date() ?};
{? var_pres('_d')<=0 || _d:='' ?};
{? var_pres('_e')<=0 || _e:=0 ?};
{? var_pres('_f')<=0 || _f:=1 ?};
_res:=exec('obj','blp');
_res.CHKGRVAT:=_f;
_res.check(_a,_b,_c,_d,_e);
{? _res.TYPE='B' & _res.ACTIVE<>'T' & _res.SKIP=0 & _res.KNIPRB=0 & _res.API
|| _res.check('K',_b,_c,_d,_e)
?};
_res


\period
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Co ile dni sprawdzać aktywność podatnika VAT
::   WE: _a - snip kontrahenta
::----------------------------------------------------------------------------------------------------------------------
{? var_press('KHCHKNIP',KH)<=0 || return(-2) ?};
_co_ile:=0;
KH.cntx_psh();
KH.index('SNIP'); KH.prefix(2,_a,);
{? KH.first()
|| _co_ile:=KH.KHCHKNIP;
   {? _co_ile=0 & KH.GRKH
   || _co_ile:=KH.GRKH().KHCHKNIP
   ?}
?};
KH.cntx_pop();
{? _co_ile=0
|| _co_ile:=#PAR_SKID.get(96)
?};
{? _co_ile<-1 || _co_ile:=-1 ?};
_co_ile


\vat_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Zwraca informacje o kontrahencie po sprawdzeniu aktywności podatnika VAT
::   WE: _a - obieky z odpowiedzią
::----------------------------------------------------------------------------------------------------------------------
_res:=_a;
{? _res.TYPE='K'
|| {? _res.NAZ='' & _res.STATUS=''
   || 'Podmiot nie figuruje w rejestrze VAT.'
   || 'Podmiot\n'+
      {? _res.NAZ<>'' || '\n'+_res.NAZ+'\n' || '' ?}+
      {? _res.ADRES<>'' || _res.ADRES+'\n\n' || '' ?}+
      'występuje w wykazie Ministerstwa Finansów z następującym statusem:\n\n'+
      {? _res.DATA<>date()
      || 'na dzień '+$_res.DATA+' - '+{? _res.ACTIVE='T' || 'Aktywny' || 'Niezarejestrowany' ?}+'\n'
      || ''
      ?}+
      {? _res.STATUS<>''
      || 'na dzień '+$date()+' - '+{? 'CZ'*_res.KOD || 'Aktywny ('+_res.STATUS+')' || _res.STATUS ?}
      || ''
      ?}
   ?}
|| 'Rachunwek bankowy '+
   {? _res.ACTIVE='T' || 'figuruje' || 'nie figuruje' ?}+
   ' w wykazie podatników VAT'
?}


\osoby
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Zwraca informacje o osobach
::   WE: _a - obiekt do obsługi json
::       _b - tablica z jsonami osob
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_tab:=_b;
_osoby:='';
{! _i:=1..obj_len(_tab)
|! _obj.setJson(_tab[_i]);
   _osoba:=_obj.getStr('companyName');
   {? (_str:=_obj.getStr('firstName'))<>'' || _osoba+=' '+_str ?};
   {? (_str:=_obj.getStr('lastName'))<>'' || _osoba+=' '+_str ?};
   {? (_str:=_obj.getStr('nip'))<>'' || _osoba+=' '+_str ?};
   {? (_str:=_obj.getStr('pesel'))<>'' || _osoba+=' '+_str ?};
   _osoby+=|_osoba+'\n'
!};
_osoby


\jsonobj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Obiekt do pobierania informacji z formatu json
::   WE: _a  - napis w formacje json
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new('json','setJson','getStr','getStrArr','getObjArr','getDate','findChar','find');
_obj.setJson:="
   .json:=STR.gsub(_a,%92+%34,'||')
";
_obj.findChar:="
   _str:=_a;
   _char:=_b;
   _poz:=0;
   _in:=0;
   {! _i:=1..+_str
   |? _poz=0
   |! _zn:=_i+_str+1;
      {? _zn=_char & _in=0
      || _poz:=_i
      |? _zn='\"'
      || _in:=~_in
      ?}
   !};
   _poz
";
_obj.find:="
   _str:=_a;
   _z1:=_b;
   _z2:=_c;
   _tab:={? var_pres('_d')>0 || _d || obj_new(2) ?};
   _s1:=_s2:=0;
   _nr:=0;
   {! _i:=1..+_str
   |? _s2=0
   |! _zn:=_i+_str+1;
      {? _zn=_z1
      || {? _nr=0
         || _s1:=_i
         ?};
         _nr+=1
      |? _zn=_z2
      || _nr-=1;
         {? _nr=0
         || _s2:=_i
         ?}
      ?}
   !};

   {? _s1 & _s2
   || _tab[1]:=_s1;
      _tab[2]:=_s2
   || _tab[1]:=-1;
      _tab[2]:=-1
   ?};
   _tab
";
_obj.getStr:="
   _ret:='';
   _val:=_a;
   _str:='\"'+_val+'\"';
   _p:=.json*_str;
   {? _p
   || _nstr:=(_p+(+_str-1))-.json;
      _p:=_nstr*':';
      {? _p
      || _nstr:=_p-_nstr;
         _sep:=',}]';
         _p:=0;
         {! _i:=1..+_sep
         |? _p=0
         |! _zn:=_i+_sep+1;
            _p:=.findChar(_nstr,_zn)
         !};
         {? _p
         || _nstr:=_p+_nstr;
            _p:=_nstr*'\"';
            {? _p
            || _nstr:=_p-_nstr;
               _p:=_nstr*'\"';
               {? _p
               || _ret:=(_p-1)+_nstr
               ?}
            ?}
         ?}
      ?}
   ?};
   STR.gsub(_ret,'||','""')
";
_obj.getStrArr:="
   _ret:='';
   _val:=_a;
   _str:='\"'+_val+'\"';
   _p:=.json*_str;
   {? _p
   || _nstr:=(_p+(+_str))-.json;
      _p:=_nstr*'[';
      {? _p
      || _nstr:=_p-_nstr;
         _p:=_nstr*']';
         {? _p
         || _ret:=(_p-1)+_nstr
         ?}
      ?}
   ?};
   {? _ret<>''
   || _tab:=spli_str(_ret,',');
      {! _i:=1..obj_len(_tab)
      |! _tab[_i]:=form(_tab[_i]);
         {? 1+_tab[_i]='\"'
         || _tab[_i]:=1-_tab[_i]-1
         ?}
      !};
      _tab
   || ~~
   ?}
";
_obj.getObjArr:="
   _val:=_a;
   _str:='\"'+_val+'\"';
   _p:=.json*_str;
   {? _p
   || _nstr:=(_p+(+_str))-.json;

      _tab:=obj_new(2);
      .find(_nstr,'[',']',_tab);
      _nstr:=(_tab[2]-_tab[1]+1)+((_tab[1]-1)-_nstr);
      _arr:=exec('arrobj','blp');
      {!
      |? .find(_nstr,'{','}',_tab);
         {? _tab[1]<>-1
         || _txt:=(_tab[2]-_tab[1]+1)+((_tab[1]-1)-_nstr);
            _arr.add(_txt);
            _nstr:=_tab[2]-_nstr;
            1
         ?}
      !};
      _arr.getTab()
   || ~~
   ?}
";
_obj.getDate:="
   _str:=.getStr(_a);
   {? _str=~~ | _str=''
   || date(0,0,0)
   || exec('str2date','#convert',_str)
   ?}
";
_obj.setJson(_a);
_obj


\arrobj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Obiekt do obsługi listy
::   WE: [_a] - początkowa liczba elementow (domyślnie 10)
::       [_b] - o ile zwiększać tablicę (domyślnie 10)
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new(
   'tab','length','inc',
   'add','getTab'
);
_obj.length:={? var_pres('_a')>0 || _a || 10 ?};
_obj.inc:={? var_pres('_b')>0 || _b || 10 ?};
_obj.tab:=obj_new(_obj.length);
_obj.length:=0;
_obj.add:="
   .length+=1;
   {? .length>obj_len(.tab)
   || _tab:=obj_new(obj_len(.tab)+.inc);
      {! _i:=1..obj_len(.tab)
      |! _tab[_i]:=.tab[_i]
      !};
      obj_del(.tab);
      .tab:=_tab
   ?};
   .tab[.length]:=_a
";
_obj.getTab:="
   {? .length
   || _tab:=obj_new(.length);
      {! _i:=1...length
      |! _tab[_i]:=.tab[_i]
      !};
      _tab
   || ~~
   ?}
";
_obj


\print
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Akcja drukuj tabeli KHCHKNIP
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','','fks_blp',,,,,,,,'W')


\add_rbk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Dodaje informację o aktywności rachunku bankowego
::   WE:  _a  - nip
::        _b  - rachunek bankowy
::        _c  - aktywny: T/N
::       [_d] - data (domyślnie bieżąca)
::       [_e] - identyfikator
::----------------------------------------------------------------------------------------------------------------------
_nip:=_a;
_rbk:=_b;
_akt:=_c;
_data:={? var_pres('_d')>0 || _d || date() ?};
_id:={? var_pres('_e')>0 || _e || '' ?};
KHCHKNIP.cntx_psh();
KHCHKNIP.index('DATA_DO'); KHCHKNIP.prefix('B',_a,_b,);
{? ~KHCHKNIP.find_le(_data) | KHCHKNIP.D_ACTIVE>_data
|| {? KHCHKNIP.find_key(_data-1) & KHCHKNIP.C_ACTIVE=_akt
   || KHCHKNIP.DATA_DO:=_data;
      KHCHKNIP.put();
      _ref:=KHCHKNIP.ref();
      KHCHKNIP.index('ID');
      KHCHKNIP.prefix('B',_a,_b,);
      {? KHCHKNIP.find_key(_data+1)
      || _end:=KHCHKNIP.DATA_DO;
         KHCHKNIP.del();
         KHCHKNIP.prefix();
         {? KHCHKNIP.seek(_ref)
         || KHCHKNIP.DATA_DO:=_end;
            KHCHKNIP.put()
         ?}
      ?}
   |? ~KHCHKNIP.find_key(_data)
   || KHCHKNIP.index('ID'); KHCHKNIP.prefix('B',_a,_b,);
      {? KHCHKNIP.find_key(_data+1) & KHCHKNIP.C_ACTIVE=_akt
      || KHCHKNIP.D_ACTIVE:=_data;
         KHCHKNIP.put()
      || KHCHKNIP.blank();
         KHCHKNIP.BAZA:='K';
         KHCHKNIP.TYPE:='B';
         KHCHKNIP.USER:=OPERATOR.USER().KOD;
         KHCHKNIP.NIP:=_nip;
         KHCHKNIP.RBK:=_rbk;
         KHCHKNIP.D_ACTIVE:=_data;
         KHCHKNIP.DATA_DO:=_data;
         KHCHKNIP.ID_REQ:=_id;
         KHCHKNIP.C_ACTIVE:=_akt;
         KHCHKNIP.add()
      ?}
   ?}
?};
KHCHKNIP.cntx_pop()


\rb_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Parametr mówiący o oposobie obsługi rachunków bankowych
::   WY: 'K' - api BLP, 'P' - plik płaski
::----------------------------------------------------------------------------------------------------------------------
'K'


\icona_svat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Formuła na ikonę pola KH.S_VAT oraz SKID_RBK.S_VAT oraz RACHBANK.S_VAT
::   WE: [_a] - status podatnika (domyślnie) lub jego NIP
::       [_b] - typ pierwszego pola: [0]-status 1-nip
::----------------------------------------------------------------------------------------------------------------------
_status:={? var_pres('_a')>0 || _a || cur_tab().S_VAT ?};
_typ:={? var_pres('_b')>0 || _b || 0 ?};
{? _typ
|| _snip:=exec('niptostr','#string',_status);
   KH.cntx_psh();
   KH.index('SNIP'); KH.prefix(2,_snip);
   _status:={? KH.first() || KH.S_VAT || '' ?};
   KH.cntx_pop()
?};
{? _status='T'
|| 'xwin16.png:38'
|? _status='N'
|| 'xwin16.png:81'
|? _status='?'
|| 'xwin16.png:15'
|| 'xwin16.png:110'
?}


\create_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Tworzy zbiór danych wskazanego typu
::   WE: _a - typ elemntu (typ pola tabeli tymczasowej)
::----------------------------------------------------------------------------------------------------------------------
_tab:=obj_new('TAB','addIfNotExists');
_tab.TAB:=($('tab_tmp(1,\'E\',\''+_a+'\',)'))();
_tab.addIfNotExists:="
   {? type_of(.TAB.E)=type_of('') & ~.TAB.find_key(_a,) |
      type_of(.TAB.E)<>type_of('') & ~.TAB.find_key(_a)
   || .TAB.E:=_a;
      .TAB.add()
   ?}
";
_tab


\bd_s_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Przed wyświetleiem pola HELP.S_VAT ze statusem VAT podatnika
::----------------------------------------------------------------------------------------------------------------------
_snip:='';
{? cur_tab(1,1)=VAT_PS
|| _snip:=exec('niptostr','#string',VAT_PS.NIP)
?};
{? _snip<>''
|| KH.cntx_psh();
   KH.index('SNIP'); KH.prefix(2,_snip);
   {? KH.first()
   || HELP.S_VAT:=KH.S_VAT;
      HELP.S_VAT_D:=KH.S_VAT_D
   || HELP.S_VAT:='';
      HELP.S_VAT_D:=date(0,0,0)
   ?};
   KH.cntx_pop()
|| HELP.S_VAT:='';
   HELP.S_VAT_D:=date(0,0,0)
?};
''


\hist_spr_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Wyświetla historję sprawdzeń rachunku bankowego
::----------------------------------------------------------------------------------------------------------------------
{? SKID_RBK.TAB='KH'
|| KH.cntx_psh();
   KH.prefix();
   {? KH.seek(SKID_RBK.REF,)
   || _gr_vat:=exec('kh_grvat_szuk','kontrahent',KH.ref);
      {? _gr_vat<>null
      || KH.seek(_gr_vat)
      ?};
      VAR_DEL.delete('KHchkTYP');
      KHchkTYP:='B';
      KHCHKNIP.index('ID');
      KHCHKNIP.prefix('B',KH.SNIP,SKID_RBK.N,);
      KHCHKNIP.win_sel('WER_RBK');
      KHCHKNIP.select();
      VAR_DEL.delete('KHchkTYP')
   ?};
   KH.cntx_pop()
|| FUN.info('Akcja nie jest dostępna.'@)
?}


\dok_upd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Aktualizuje pole DOK.ID_S_VAT
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ID_S_VAT',DOK)>0 & DOK.ID_S_VAT<>''
|| KHCHKNIP.cntx_psh();
   KHCHKNIP.index('ID_REQ'); KHCHKNIP.prefix(DOK.ID_S_VAT,'K');
   {? KHCHKNIP.first()
   || {? 2+DOK.NIP='PL' || _doknip:=2-DOK.NIP || _doknip:=DOK.NIP ?};
      {? KHCHKNIP.D_ACTIVE<>DOK.DOP | KHCHKNIP.NIP<>exec('niptostr','#string',_doknip)
      || DOK.ID_S_VAT:=''
      ?}
   || DOK.ID_S_VAT:=''
   ?};
   KHCHKNIP.cntx_pop()
?}


\chk_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Sprawdzenia aktywności podatnika VAT w dokumencie
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);
_grp:=_tab.sel_size();
{? _tab=DOK
|| _id:=DOK.ID_S_VAT;
   _snip:=exec('niptostr','#string',DOK.NIP);
   _data:=DOK.DOP
|? _tab=FAKS
|| _id:=FAKS.ID_S_VAT;
   _snip:=exec('niptostr','#string',FAKS.NIP);
   _data:=exec('dop','faktury_nag')
?};
{? #(2+_snip)=0 || _snip:=2-_snip ?};
{? _id<>''
|| {? _grp & var_pres('ChkDOK')>0
   || ChkDOK.SPR+=1
   || FUN.info('Aktywność podatnika VAT była już sprawdzana.'@)
   ?}
|? _snip=''
|| FUN.info('Nie podano numeru NIP.'@)
|? exec('spr_typ','blp',_snip)=0
|| {? _grp & var_pres('ChkDOK')>0
   || ChkDOK.OFF+=1
   || FUN.info('Kontrahent nie jest płatnikiem\npodatku VAT na terytorium kraju.\n\nSprawdzanie nie jest dostępne.'@)
   ?}
|? _grp | FUN.ask('Czy sprawdzić aktywność podatnika VAT?'@)
|| _obj:=exec('check','blp','K',_snip,_data);
   {? _obj.RES=200
   || {? _tab=DOK
      || DOK.cntx_psh();
         DOK.prefix();
         DOK.ID_S_VAT:=_obj.ID_REQ;
         DOK.put();
         DOK.cntx_pop()
      |? _tab=FAKS
      || FAKS.cntx_psh();
         FAKS.prefix();
         FAKS.ID_S_VAT:=_obj.ID_REQ;
         FAKS.put();
         FAKS.cntx_pop()
      ?};
      {? _grp
      || ChkDOK.update(_obj)
      || _odp:=_obj.OPIS;
         {? _odp<>''
         || {? _obj.KOD='C'
            || FUN.info(_odp)
            || FUN.emsg(_odp)
            ?}
         ?}
      ?}
   |? _grp
   || ChkDOK.update(_obj)
   |? _obj.RES=400
   || {? _obj.OPIS<>''
      || FUN.info(_obj.OPIS)
      || FUN.info('Nie udało się pobrać informacji o podatniku VAT\nz bramki Ministerstwa Finansów.'@)
      ?}
   || FUN.info('Nie udało się pobrać informacji o podatniku VAT\nz bramki Ministerstwa Finansów.'@)
   ?}
?};
1


\obj_chk_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Obiekt do grupowego sprawdzania aktywności podatnika VAT dla dokumentów
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new(
   'ALL','OK','TAK','NIE','ERR','SPR','OFF',
   'clear','update','info'
);
_obj.clear:="
   .ALL:=cur_tab(1,1).sel_size();
   .OK:=.TAK:=.NIE:=.ERR:=.SPR:=.OFF:=0
";
_obj.update:="
   _res:=_a;
   {? _res.ID_REQ<>''
   || .OK+=1;
      {? _res.ACTIVE='T'
      || .TAK+=1
      || .NIE+=1
      ?}
   || .ERR+=1
   ?}
";
_obj.info:="
   FUN.info(
      'Liczba zaznaczonych dokumentów: '@+$.ALL+'\n'+
      {? .SPR || 'Liczba istniejących sprawdzeń dokumentów: '@+$.SPR+'\n' || '' ?}+
      {? .OK
      || 'Liczba sprawdzonych dokumentów: '@+$.OK+'\n'+
         {? .TAK || 'w tym aktywnych podatników: '@+$.TAK+'\n' || '' ?}+
         {? .NIE || 'w tym nie aktywnych podatników: '@+$.NIE+'\n' || '' ?}
      || ''
      ?}+
      {? .OFF || 'Liczba pominiętych sprawdzeń dokumentów: '+$.OFF || '' ?}+
      {? .ERR || 'Liczba nieudanych sprawdzeń dokumentów: '@+$.ERR || '' ?}
   )
";
_obj


\bg_chk_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Przed akcją grupową sprawdzenia aktywności podatnika VAT w dokumencie
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy sprawdzić aktywność podatnika VAT dla zaznaczonych dokumentów?'@)
|| VAR_DEL.delete('ChkDOK');
   ChkDOK:=exec('obj_chk_dok','blp');
   ChkDOK.clear();
   1
?}


\ag_chk_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Po akcji grupowej sprawdzenia aktywności podatnika VAT w dokumencie
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ChkDOK')>0
|| ChkDOK.info()
?};
VAR_DEL.delete('ChkDOK')


\chk_dok_prn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Wydruk sprawdzenia podatnika VAT dla dokumentu
::----------------------------------------------------------------------------------------------------------------------
_id:='';
_tab:=cur_tab(1,1);
{? _tab=DOK
|| _id:=DOK.ID_S_VAT
|? _tab=FAKS
|| _id:=FAKS.ID_S_VAT
?};
{? _id=''
|| FUN.info('Sprawdzenie aktywności podatnika VAT nie było wykonywane.'@)
|| KHCHKNIP.cntx_psh();
   KHCHKNIP.index('ID_REQ'); KHCHKNIP.prefix(_id,'K');
   {? KHCHKNIP.first()
   || exec('rep_exec','#b_report','','fks_blp',,,,,,,,'W')
   || FUN.info('Nie znaleziono sprawdzenia podatnika o identyfikatorze: '@+_id+'.')
   ?};
   KHCHKNIP.cntx_pop()
?}


\rbk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Zwraca tabelę z rachunkami bankowymi kontrahenta
::   WE: _a - snip
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1,
   'N','STRING[26]','Rachunek bankowy',
   'O','STRING[255]','Oddział prowadzący'
);
_o:=_tab.mk_sel('Rachunki bankowe wykazu podatników VAT','P',,'#blprbsel',,,,,'U');
_tab.win_fld(_o,,'N');
_tab.win_fld(_o,,'O',,,60);
_tab.win_act(_o,,'Formuła','Wybierz',,,"sel_exit()",,1);
_tab.win_sel(_o);
KHCHKNIP.cntx_psh();
KHCHKNIP.index('ID'); KHCHKNIP.prefix('K',_a,'',);
{? KHCHKNIP.first()
|| _bank:=SKID_RBK.BANK;
   _rbs:=KHCHKNIP.memo_txt(,1,'RB');
   _rb:=spli_str(_rbs,',');
   {! _i:=1..obj_len(_rb)
   |! _tab.N:=|_rb[_i];
      SKID_RBK.BANK:=RB.getrbank(4,_tab.N,'PL');
      _tab.O:=SKID_RBK.BANK().NB;
      _tab.add()
   !};
   SKID_RBK.BANK:=_bank
?};
KHCHKNIP.cntx_pop();
_tab


\lock_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [12.51]
:: OPIS: Blokada generowania przelewu z niezgłoszonym rachunkiem w wykazie podatników VAT.
::   WE: [_a] - parametr określający czy blokować
::       [_b] - T - 0/1 - komunikaty/bez komunikatów.
::       [_c] - tabela, w której odpisywane jest sprawdzenie aktywności podatnika
::   WY: 0 - nie blokować przelewu, 1 - blokować przelew.
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:='T' ?};
{? _a='N' || return(0) ?};
{? var_press('_b')<=0 || _b:=0 ?};
{? var_press('_c')<=0 || _tab:=cur_tab(1,1) || _tab:=_c ?};
_result:=0;
{? var_press('S_VAT',_tab)>0
|| {? _tab.S_VAT<>'T' || _result:=1 ?};
   {? _result & ~_b
   || {? _a='T'
      || FUN.info('Niezgłoszony rachunek w wykazie podatników VAT. Przelew zablokowany.'@)
      |? _a='P' & FUN.ask('Niezgłoszony rachunek w wykazie podatników VAT. \nKontynuować?'@)
      || _result:=0
      ?}
   ?}
?};
_result


\chk_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [12.51]
:: OPIS: Sprawdzenie rachunku z wykazem podatników VAT oraz uzupełnienie pól dotyczących aktywności i daty sprawdzenia
::       informacji z BLP.
::   WE: [_a] - tabela, w której odpisywane jest sprawdzenie aktywności podatnika
::       [_b] - 0 - podczas dodawania rekordu, 1 - dla istniejącego rekordu
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')>0 || _tab:=_a || _tab:=cur_tab(1,1) ?};
{? var_press('_b')>0 || _put:=_b || _put:=1 ?};
_ok:=0;
KH.cntx_psh();
{? var_press('S_VAT',_tab)>0 & {? _tab=PB || PB.RW<>'' || OPTMP.RB<>'' ?} &
   _tab.KH<>null & exec('spr_typ','blp',_tab.KH)
|| _res:=exec('check','blp','B',_tab.KH().SNIP,,{? _tab=PB || PB.RW || OPTMP.RB ?});
   {? _res.RES=200
   || _tab.S_VAT:=_res.ACTIVE;
      _tab.S_VAT_D:=_res.DATA;
      _tab.ID_S_VAT:=_res.ID_REQ;
      {? _put || _tab.put() ?}
   || _tab.S_VAT:='';
      _tab.S_VAT_D:=date(0,0,0);
      _tab.ID_S_VAT:='';
      {? _put || _tab.put() ?}
   ?};
   _ok:=1
?};
KH.cntx_pop();
_ok


\chk_optmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [12.51]
:: OPIS: Sprawdzenie rachunku z wykazem podatników VAT oraz uzupełnienie pól dotyczących aktywności i daty sprawdzenia
::       informacji z BLP dla tabeli OPTMP.
::   WE: _a - USER
::----------------------------------------------------------------------------------------------------------------------
_kh_b:=null; _rb_b:='';
_actv:=_id:=''; _data:=date(0,0,0);
_chk:=0;
_ind:=OPTMP.ndx_tmp('',1,'USER',,0, 'KH',,0, 'RB',,0, 'DATA_OD',,0);
OPTMP.cntx_psh();
OPTMP.index(_ind); OPTMP.prefix(_a);
{? OPTMP.first()
|| {!
   |? {? _kh_b<>OPTMP.KH || _kh_b:=OPTMP.KH; _chk:=1 ?};
      {? _rb_b<>OPTMP.RB || _rb_b:=OPTMP.RB; _chk:=1 ?};
      {? _chk
      || {? exec('chk_pb','blp',OPTMP,1)
         || _actv:=OPTMP.S_VAT;
            _data:=OPTMP.S_VAT_D;
            _id:=OPTMP.ID_S_VAT
         || _actv:=_id:='';
            _data:=date(0,0,0)
         ?};
         _chk:=0
      |? OPTMP.KH<>null & OPTMP.RB<>''
      || OPTMP.S_VAT:=_actv;
         OPTMP.S_VAT_D:=_data;
         OPTMP.ID_S_VAT:=_id;
         OPTMP.put()
      || OPTMP.S_VAT:='';
         OPTMP.S_VAT_D:=date(0,0,0);
         OPTMP.ID_S_VAT:='';
         OPTMP.put()
      ?};
      OPTMP.next()
   !}
?};
OPTMP.cntx_pop();
~~


\chk_pb_prn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [12.51]
:: OPIS: Wydruk sprawdzenia rachunku z wykazem podatników VAT dla przelewu bankowego
::   WE: [_a] - czy drukować? [1]-tak 0-nie
:::      [_b] - czy prezentować kounikaty: [1]-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1).sel_size() || return(1) ?};
_prn:={? var_pres('_a')>0 || _a || 1 ?};
_info:={? var_pres('_b')>0 || _b || 1 ?};
_id:='';
_tab:=cur_tab(1,1);
{? _tab=PB
|| _id:=PB.ID_S_VAT
?};
_ok:=0;
{? _id=''
|| {? _info
   || FUN.info('Sprawdzenie rachunku bankowego podatnika VAT nie było wykonywane lub zakończyło się błędem.')
   ?}
|| {? _prn
   || KHCHKNIP.cntx_psh()
   ?};
   {? _tab=PB
   || KHCHKNIP.blank(1);
      KHCHKNIP.NIP:=PB.KH().SNIP;
      KHCHKNIP.RBK:=PB.RW;
      KHCHKNIP.D_ACTIVE:=KHCHKNIP.DATE:=PB.S_VAT_D;
      KHCHKNIP.C_ACTIVE:=PB.S_VAT;
      KHCHKNIP.ID_REQ:=PB.ID_S_VAT;
      _ok:=1
   || KHCHKNIP.index('ID_REQ'); KHCHKNIP.prefix(_id,'B');
      _ok:=KHCHKNIP.first()
   ?};
   {? _ok
   || {? _prn
      || exec('rep_exec','#b_report','','fks_blp',,,,,,,,'W')
      ?}
   |? _info
   || FUN.info('Nie znaleziono sprawdzenia rachunku podatnika o identyfikatorze: '+_id+'.')
   ?};
   {? _prn
   || KHCHKNIP.cntx_pop()
   ?}
?};
_ok


\grp_pb_prn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Przed/po akcji grupowej wydruku sprawdzania rachunku bankowego w wykazie podatnikóa VAT
::   WE: _a - 1-prze 0-po

::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| {? FUN.ask('Czy wykonać wydruk dla zaznaczonych przelewów?')
   || PrnObj:=exec('obj_pb_prn','blp');
      PrnObj.before();
      1
   ?}
|| exec('rep_exec','#b_report','','skid_blp',,,,,,,,'W');
   PrnObj.after();
   VAR_DEL.delete('PrnObj')
?}


\obj_pb_prn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Obiekt na potrzeby grupowego wydruk
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new('TAB','first','next','get','before','after','drukuj');
_obj.TAB:=PB.sel_aget();
_obj.first:="
   _tab:=.TAB;
   {? _tab.first()
   || .get();
      1
   ?}
";
_obj.next:="
   _tab:=.TAB;
   {? _tab.next()
   || .get();
      1
   ?}
";
_obj.get:="
   _tab:=.TAB;
   cur_tab().prefix();
   cur_tab.seek(_tab.REF,)
";
_obj.before:="
   cur_tab().cntx_psh();
   KHCHKNIP.cntx_psh()
";
_obj.after:="
   cur_tab().cntx_pop();
   KHCHKNIP.cntx_pop()
";
_obj.drukuj:="
   exec('chk_pb_prn','blp',0,0)
";
_obj


\chk_rb_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [12.51]
:: OPIS: Sprawdzenie aktywności rachunku bankowego w przelewie
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);
_grp:=_tab.sel_size();
{? _tab=PB
|| _id:=PB.ID_S_VAT;
   KH.cntx_psh();
   _snip:=PB.KH().SNIP;
   KH.cntx_pop();
   _rw:=PB.RW;
   _data:=PB.S_VAT_D
?};
{? _id<>'' & _data=date()
|| {? _grp & var_pres('ChkPB')>0
   || ChkPB.SPR+=1
   || FUN.info('Aktywność rachunku bankowego była już dziś sprawdzana.'@)
   ?}
|? _snip=''
|| {? _grp & var_pres('ChkPB')>0
   || ChkPB.SPR+=1
   || FUN.info('Nie podano numeru NIP.'@)
   ?}
|? _rw=''
|| {? _grp & var_pres('ChkPB')>0
   || ChkPB.SPR+=1
   || FUN.info('Nie podano numeru rachunku.'@)
   ?}
|? _grp | FUN.ask('Czy sprawdzić aktywność rachunku bankowego?'@)
|| _obj:=exec('check','blp','B',_snip,,PB.RW);
   {? _obj.RES=200
   || {? _tab=PB
      || PB.cntx_psh();
         PB.prefix();
         PB.ID_S_VAT:=_obj.ID_REQ;
         PB.S_VAT:=_obj.ACTIVE;
         PB.S_VAT_D:=_obj.DATA;
         PB.put();
         PB.cntx_pop()
      ?};
      {? _grp
      || ChkPB.update(_obj)
      || _odp:=_obj.OPIS;
         {? _odp<>''
         || {? _obj.ACTIVE='T'
            || FUN.info(_odp)
            || FUN.emsg(_odp)
            ?}
         ?}
      ?}
   |? _grp
   || ChkPB.update(_obj)
   |? _obj.RES=400
   || {? _obj.OPIS<>''
      || FUN.info(_obj.OPIS)
      || FUN.info('Nie udało się pobrać informacji o rachunku bankowym\nz bramki Ministerstwa Finansów.'@)
      ?}
   || FUN.info('Nie udało się pobrać informacji o rachunku bankowym\nz bramki Ministerstwa Finansów.'@)
   ?}
?};
1


\obj_chk_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Obiekt do grupowego sprawdzania aktywności podatnika VAT dla dokumentów
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new(
   'ALL','OK','TAK','NIE','ERR','SPR',
   'clear','update','info'
);
_obj.clear:="
   .ALL:=cur_tab(1,1).sel_size();
   .OK:=.TAK:=.NIE:=.ERR:=.SPR:=0
";
_obj.update:="
   _res:=_a;
   {? _res.ID_REQ<>''
   || .OK+=1;
      {? _res.ACTIVE='T'
      || .TAK+=1
      || .NIE+=1
      ?}
   || .ERR+=1
   ?}
";
_obj.info:="
   FUN.info(
      'Liczba zaznaczonych przelewów: '@+$.ALL+'\n'+
      {? .SPR || 'Liczba istniejących sprawdzeń przelewów: '@+$.SPR+'\n' || '' ?}+
      {? .OK
      || 'Liczba sprawdzonych przelewów: '@+$.OK+'\n'+
         {? .TAK || 'w tym aktywne rachunki bankowe: '@+$.TAK+'\n' || '' ?}+
         {? .NIE || 'w tym nie aktywne rachunki bankowe: '@+$.NIE+'\n' || '' ?}
      || ''
      ?}+
      {? .ERR || 'Liczba nieudanych sprawdzeń przelewów: '@+$.ERR || '' ?}
   )
";
_obj


\zal_open
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Otwiera załącznik
::----------------------------------------------------------------------------------------------------------------------
{? KHCHKNIP.ZAL
|| exec('bl_view','#blob',KHCHKNIP,'ZAL')
|| FUN.info('Sprawdzenie nie zawiera pliku załącznika.'@)
?}


\zal_save
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Zapisuje załącznik
::----------------------------------------------------------------------------------------------------------------------
{? KHCHKNIP.ZAL
|| _name:=KHCHKNIP.bl_info('ZAL','NAME');
   _ext:=KHCHKNIP.bl_info('ZAL','EXTENSION');
   _fn:= fmk_tmp_dir(0).get_path()+'/'+_name;
   {? _fn<>''
   || {? KHCHKNIP.bl_get('ZAL',_fn)
      || FUN.info('Załącznik zapisano do pliku:\n'@+STR.w952maz(_fn));
         dlg_save(_fn)
      || FUN.info('Zapisanie załącznika do pliku:\n'@+STR.w952maz(_fn)+'\nnie powiodło się.'@)
      ?}
   ?}
|| FUN.info('Sprawdzenie nie zawiera pliku załącznika.'@)
?}


\icona_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Formuła na ikone załącznika w sprawdzeniu podatnika VAT
::----------------------------------------------------------------------------------------------------------------------
{? KHCHKNIP.ZAL
|| 'xwin16.png:51'
|| ''
?}


\kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Przywrócenie statusu kontrahanta na popraw
::   WE: _a - 0-przed 1-po
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('S_VAT',KH)>0
|| {? _a=0
   || VAR_DEL.delete('KhSVAT');
      KhSVAT:=obj_new('svat','svatd','set');
      KhSVAT.set:=0;
      KH.cntx_psh();
      {? KH.get()
      || KhSVAT.set:=1;
         KhSVAT.svat:=KH.S_VAT;
         KhSVAT.svatd:=KH.S_VAT_D
      ?};
      KH.cntx_pop()
   |? var_pres('KhSVAT')>0
   || {? KhSVAT.set
      || KH.S_VAT:=KhSVAT.svat;
         KH.S_VAT_D:=KhSVAT.svatd
      ?};
      VAR_DEL.delete('KhSVAT')
   ?}
?}


\spr_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Czy sprawdzać aktywność kontrahenta jako podatnika VAT
::   WE: _a - nip lub ref kontrahenta
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
_typ:='';
_kod:='';
{? type_of(_a)=type_of('')
|| KH.cntx_psh();
   KH.index('SNIP'); KH.prefix(2,_a,);
   {? KH.first()
   || _ref:=KH.ref();
      _typ:=KH.TYP;
      _kod:=KH.KOD
   ?};
   KH.cntx_pop()
|| KH.cntx_psh();
   KH.prefix();
   {? KH.seek(_a)
   || _ref:=KH.ref();
      _typ:=KH.TYP;
      _kod:=KH.KOD
   ?};
   KH.cntx_pop()
?};
{? _typ='U'
|| NIPY.cntx_psh();
   NIPY.index('NIP'); NIPY.prefix(_kod,'PL',);
   _ok:=NIPY.first();
   NIPY.cntx_pop();
   _ok
|| _typ='P'
?}


\bg_chk_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [12.51]
:: OPIS: Przed akcją grupową sprawdzenia aktywności rachunku bankowego w przelewie
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy sprawdzić aktywność rachunku bankowego dla zaznaczonych dokumentów?'@)
|| VAR_DEL.delete('ChkPB');
   ChkPB:=exec('obj_chk_pb','blp');
   ChkPB.clear();
   1
?}


\ag_chk_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [12.51]
:: OPIS: Po akcji grupowej sprawdzenia aktywności rachunku bankowego w przelewie
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ChkPB')>0
|| ChkPB.info()
?};
VAR_DEL.delete('ChkPB')


\cond_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [12.51]
:: OPIS: Warunki na sprawdzanie przelewu z wykazem podatników VAT.
::   WY: 0 / 1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
{? (PB.KD*'FKS'>0 | PB.KD*'HBN'>0) & PB.KH<>null & exec('spr_typ','blp',PB.KH)
   & (XINFO.BLP_FVAT='N' | (XINFO.BLP_FVAT='T' & PB.F_VAT='T'))
|| _result:=1
?};
_result


\alert_obj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Pomocniczy obiekt do przechowywania tresci wiadomości o zmianie statusu rachunków bankowych
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new(
   'RB','TXT','lp',
   'add_rb','toSend','email','html','email_typ','pb','op','cntx'
);
_obj.RB:=tab_tmp(3,
   'S','STRING[1]','Status',
   'KH','STRING[10]','Kontrahent',
   'KHREF','INTEGER','ref',
   'RB','STRING[50]','Rachunek'
);
_obj.TXT:=tab_tmp(1,
   'L','INTEGER','Lp',
   'T','STRING[255]','Tekst'
);
_obj.lp:=0;
_obj.add_rb:="
   _tab:=.RB;
   _tab.S:=_a;
   _tab.KH:=KH.SKR;
   _tab.KHREF:=KH.ref();
   _tab.RB:=SKID_RBK.N;
   _tab.add()
";
_obj.toSend:="
   _tab:=.RB;
   _tab.first()
";
_obj.html:="
   _txt:=_a;
   _tab:=.TXT;
   {!
   |? _tab.L:=(.lp+=1);
      _tab.T:=255+_txt;
      _tab.add();
      _txt:=255-_txt;
      _txt<>''
   !}
";
_obj.email:="
   .cntx(1);
   .email_typ('N','Rachunki bankowe nie figurujące w wykazie podatników VAT');
   .email_typ('0','Rachunki bankowe, które stały się nieaktywne');
   .email_typ('1','Rachunki bankowe, które stały się aktywne');
   .cntx(0);
   .TXT
";
_obj.email_typ:="
   {? var_pres('RB')<100
   || exec('obj_rb','rachunki');
      RB:=obj_new(@.CLASS.RB)
   ?};
   _tab:=.RB;
   _tab.prefix(_a);
   {? _tab.first()
   || .html('<H3>'+_b+'</H3>');
      _last:='';
      KH.cntx_psh();
      KH.prefix();
      {!
      |? .html('<div style=\"font-size: 10pt\">');
         {? _last='' | _last<>_tab.KH
         || KH.seek(_tab.KHREF,);
            .html({? _last<>'' || '<br>' || '' ?}+'<b>'+KH.SKR+' - '+KH.NAZ_P+'</b><br>');
            _last:=_tab.KH
         ?};
         .html(RB.get_rbtx(2,_tab.RB,'PL'));
         .html('</div>');
         .pb();
         .op();
         _tab.next()
      !};
      KH.cntx_pop()
   ?}
";
_obj.cntx:="
   {? _a=1
   || PB.cntx_psh();
      PB.use('pbxxxx');
      PB.index('RW');
      PB.prefix();
      OP.cntx_psh();
      ROK_F.index('ROKPOCZ');
      ROK_F.prefix(REF.FIRMA);
      {? ROK_F.find_le(date())
      || OP.use('operac'+ROK_F.KOD)
      ?};
      OP.index('RB');
      OP.prefix()
   || PB.cntx_pop();
      OP.cntx_pop()
   ?}
";
_obj.pb:="
   _tab:=.RB;
   PB.prefix(KH.ref(),_tab.RB,);
   {? PB.first()
   || .html('<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">');
      .html(
         '<tr class=wiersz_odd><td colspan=5 align=center><b>Przelewy oczekujące</b></td></tr>'+
         '<tr class=\"head\">'+
         '<td width=\"100\" align=center>Jednostka księgowa</td>'+
         '<td width=\"300\" align=center>Tytułem</td>'+
         '<td width=\"100\" align=center>Split payment</td>'+
         '<td width=\"100\" align=center>Data przelewu</td>'
      );
      .html(
         '<td width=\"100\" align=center>Kwota</td>'+
         '</tr>'
      );
      _lp:=1;
      {!
      |? _lp:=~_lp;
         .html(
            '<tr class=\"wiersz'+{? _lp || '_even' || '_odd' ?}+'\">'+
            '<td width=\"100\" align=left>'+PB.ODD().OD+'</td>'+
            '<td width=\"300\" align=left>'+PB.TYT+'</td>'+
            '<td width=\"100\" align=left>'+PB.SP+'</td>'+
            '<td width=\"100\" align=left>'+$PB.DP+'</td>'+
            '<td width=\"100\" align=right>'+form(PB.KW,,2)+'</td>'+
            '</tr>'
         );
         PB.next()
      !};
      .html('</table><br>')
   ?}
";
_obj.op:="
   _tab:=.RB;
   OP.prefix(KH.ref(),'N',_tab.RB,);
   {? OP.first()
   || .html('<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">');
      .html(
         '<tr class=wiersz_odd><td colspan=6 align=center><b>Nierozliczone rozrachunki</b></td></tr>'+
         '<tr class=\"head\">'+
         '<td width=\"100\" align=center>Jednostka księgowa</td>'+
         '<td width=\"200\" align=center>Symbol</td>'+
         '<td width=\"100\" align=center>Typ</td>'+
         '<td width=\"100\" align=center>Termin płatności</td>'
      );
      .html(
         '<td width=\"100\" align=center>Saldo Winien</td>'+
         '<td width=\"100\" align=center>Saldo Ma</td>'+
         '</tr>'
      );
      _lp:=1;
      {!
      |? _lp:=~_lp;
         .html(
            '<tr class=\"wiersz'+{? _lp || '_even' || '_odd' ?}+'\">'+
            '<td width=\"100\" align=left>'+OP.ODD().OD+'</td>'+
            '<td width=\"200\" align=left>'+OP.SYM+'</td>'+
            '<td width=\"100\" align=left>'+OP.TYP+'</td>'+
            '<td width=\"100\" align=left>'+$OP.TZ+'</td>'+
            '<td width=\"100\" align=right>'+form(OP.WN,,2)+'</td>'+
            '<td width=\"100\" align=right>'+form(OP.MA,,2)+'</td>'+
            '</tr>'
         );
         OP.next()
      !};
      .html('</table><br>')
   ?}
";
_obj


\spr_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Czy sprawdzać rachunek bankowy
::   WE: _a - tabela sprawdzenia: DOK, FAKS, OPTMP lub PB
::----------------------------------------------------------------------------------------------------------------------
{? ' DOK FAKS OPTMP PB '*(' '+_a+' ')
|| (var_pres('BLP_LP',XINFO)<=0 | XINFO.BLP_LP='N' | exec('brutto','blp',_a)>=exec('limit','fks_sp')) &
   (var_pres('BLP_FML',XINFO)<=0 | XINFO.BLP_FML='' | ($XINFO.BLP_FML)(_a))
|| 1
?}


\brutto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Zwraca wartość brutto
::   WE: _a - DOK - dokumentu księgowego
::            FAKS - faktury VAT
::            PB - faktury z przelewu
::----------------------------------------------------------------------------------------------------------------------
_brutto:=0;
{? _a='DOK'
|| VPOZ.cntx_psh();
   VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
   {? VPOZ.first()
   || {!
      |? _brutto+=VPOZ.BRUTTO;
         VPOZ.next()
      !}
   ?};
   VPOZ.cntx_pop()
|? _a='FAKS'
|| FAKSV.cntx_psh();
   FAKSV.index('FAKS_SV'); FAKSV.prefix($FAKS.ref());
   {? FAKSV.first()
   || {!
      |? _brutto+=FAKSV.WB;
         FAKSV.next()
      !}
   ?};
   FAKSV.cntx_pop()
|? _a='OPTMP'
|| {? var_pres('BRUTTO',OPTMP)>0
   || _brutto:=OPTMP.BRUTTO
   ?}
|? _a='PB'
|| PB_OP.cntx_psh();
   PB_OP.index('PB'); PB_OP.prefix(PB.ref());
   {? PB_OP.first()
   || {!
      |? _brutto+=PB_OP.BRUTTO;
         PB_OP.next()
      !}
   ?};
   PB_OP.cntx_pop()
?};
_brutto


\s_vat_skid_rbk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [12.51]
:: OPIS: Sprawdzenie informacji o aktywności rachunku bankowego zapisanego w tabeli SKID_RBK.
::   WE: [_a] - tabela, w której odpisywana jest informacja o aktywności rachunku bankowego
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || return(0) ?};
SKID_RBK.cntx_psh();
SKID_RBK.index('TRN');
SKID_RBK.prefix('KH',#_a.KH,RACHBANK.FIRMA,{? _a=PB || PB.RW || OPTMP.RB ?},);
{? SKID_RBK.first()
|| _a.S_VAT:=SKID_RBK.S_VAT;
   _a.S_VAT_D:=SKID_RBK.S_VAT_D
?};
SKID_RBK.cntx_pop()


\make_pb_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Akcja wywołująca wtyczkę HBN_PB, aby utworzyć rekordy do przelewów
::----------------------------------------------------------------------------------------------------------------------
_result:=exec('bank_transfer_crt','!hbn_prz_kart',0,0);
{? var_press('__grup')<0
|| FUN.info(_result.DESC)
|| __grup+=1
?}


\bg_pb_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Akcja przed grupą dla akcji wywołującej wtyczkę HBN_PB
::----------------------------------------------------------------------------------------------------------------------
__grup:=0;
1


\ag_pb_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Akcja po grupie dla akcji wywołującej wtyczkę HBN_PB
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Liczba wygenerowanych przelewów: %1'@[$__grup]);
VAR_DEL.delete('__grup');
1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:37 cc4b607818ea544eff2fea97e5c71a95e533f7d3c37ddef614f1bc0d4806f6ee43643c93d2ed5a685b0408e944fe07a41af222117bb7e0e203ef80ddc77dd66e142e3b216d63f3f82cae767c38535c3466ae1fca681c1d61f5a8315f0f92b636960925419aba4c0574df74beada19cc5c707fca3cdb9cb0d6305300b90e95776
