:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: portal_benefity.fml
:: Utworzony: 14.01.2020
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Funkcje biblioteczne do parametryzacji i obsługi benefitów.
::======================================================================================================================


\bnftt_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli BNFTT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: hash('')='da39a3ee5e6b4b0d3255bfef95601890afd80709'
BNFTT.HASH:='da39a3ee5e6b4b0d3255bfef95601890afd80709';

exec('bnftt_modb','portal_benefity') & exec('dok_addb','phr_tab',BNFTT) & exec('bnftt_chk','portal_benefity',0)


\bnftt_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - po" dla tabeli BNFTT.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| exec('dok_adda','phr_tab',BNFTT,_a)
?};
~~


\bnftt_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli BNFTT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bnftt_modb','portal_benefity') & exec('dok_putb','phr_tab',BNFTT) & exec('bnftt_chk','portal_benefity',1)


\bnftt_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli BNFTT.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1 & exec('dok_puta','phr_tab',BNFTT,_a)
|| {? bfld('AKT')<>BNFTT.AKT |
::    Jeżeli zmienił się stan aktywności lub zmieniły się "parametry" przechowywane również w BIPODB ...
      bfld('OD')<>BNFTT.OD | bfld('DO')<>BNFTT.DO
::    ... to aktualizujemy listę odbiorców.
   || exec('bipodb_update','portal_bip',BNFTT.ZZ_DOK,1)
   ?};
   {? bfld('R')<>BNFTT.R
::    Jeżeli zmieniono składnik na definicji, to należy zaktualizować benefity pracowników.
   || BNFTP.cntx_psh();
      BNFTP.index('BNFTT');
      BNFTP.prefix(BNFTT.ref());
      _loop:=BNFTP.first();
      {!
      |? _loop
      |! BNFTP.R:=BNFTT.R;
         BNFTP.put();
         _loop:=BNFTP.next()
      !};
      BNFTP.cntx_pop()
   ?};
:: Zweryfikujmy liczbę odbiorców. Ponieważ operacja może wiązać się z ponownym zapisaniem na dysku bieżąceo rekordu,
:: to powinna być wykonana jako ostatnia w wyzwalaczu.
   _lodb:=exec('bipodb_licz','portal_bip',BNFTT.ZZ_DOK);
   {? BNFTT.LODB<>_lodb
   || BNFTT.LODB:=_lodb;
      BNFTT.put()
   ?}
?};
~~


\bnftt_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Usuń - przed" dla tabeli BNFTT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Usunięcie nagłówka poprzedzone jest usunięciem wszystkich pozycji. Jednak podczas usuwania pozycji aktualizowany jest
:: nagłówek - nie ma to sensu. Dlatego korzystamy z mechanizmu wspomagającego operacje hurtowe.
{? exec('add','#bulk',BNFTT,'del',$BNFTT.ZZ_DOK)
|| exec('del_ndx','#table',BIPODB,'LINK',BNFTT.NP_DOK,BNFTT.ZZ_DOK) &
   exec('del','#bulk',BNFTT,'del',$BNFTT.ZZ_DOK)
?}


\bnftt_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Usuń - po" dla tabeli BNFTT.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| exec('del_ndx','#table',ZZ_KRYT,'UNIQUE',bfld('NP_DOK'),bfld('ZZ_DOK')) &
   exec('dok_dela','phr_tab',_a)
?};
~~


\bnftt_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli BNFTT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
BNFTT.NOMINAL:=BNFTT.NOMINAL$2;
{? BNFTT.BIPKAT
|| _ret:=exec('bip_firma_modb','portal_bip')
?};
_ret


\bnftt_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli BNFTT.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
exec('Icon','#object');
__CHK.validate(BNFTT,
   $("_a.table(_b,"+$_put+",,'OD','AKRONIM','NAZWA','NAZ_S','R','ZRODLO','ZMIENNY','FIRMA','BIPKAT','AUTOR')"),
   $("{? _b.DO<>date(0,0,0) & _b.DO<_b.OD
      || __CHK.err_fld(_b,'DO',1,'"+'Data nie może być wcześniejsza niż %1.'@ [$BNFTT.OD]+"');
         'DO'
      || 1
      ?}
   "),
   $("{? exec('valid_acronim','#string',_b.AKRONIM)
      || 1
      || _a.err_fld(_b,'AKRONIM',1,'"+'Akronim może zawierać wyłącznie litery, cyfry i znak podkreślenia.'@+"');
         'AKRONIM'
      ?}
   "),
   "  {? _b.IKONA='' | Icon.TAB.find_key(_b.IKONA,)
      || 1
      || _a.err_fld(_b,'IKONA',1)
      ?}
   ",
   "_a.in_set(_b,'ZRODLO',,
      exec('bnftt_zrodlo_val_zfss','portal_benefity'),
      exec('bnftt_zrodlo_val_pracodawca','portal_benefity')
    )
   ",
   "_a.in_set(_b,'ZMIENNY',,'T','N')",
:: Poprawność formuły WARTOSC jest badana na podstawie zawartości bufora.
   "  _fld:='WARTOSC';
      _fml:=_b.memo_txt(,,_fld);
      {? _fml=''
      || _fld:=''
      || on_error(3);
         _val:=($_fml)(7);
         {? in_error()=0 & type_of(_val)=type_of(0)
         || _fld:=''
         || _a.err_fld(_b,_fld,1)
         ?};
         on_error(0)
      ?};
      _fld
   ",
   $("{? _b.NOMINAL<0
      || _a.err_fld(_b,'NOMINAL',1,'"+'Wartość nie może być ujemna.'@+"')
      || 1
      ?}
   "),
   $("_b.cntx_psh();
      {? "+$_put+"=1
      || _jest:=_b.find_tab(,'NAZ_S',,'likeIC',_b.NAZ_S,'IDADD',,'<>',_b.IDADD)
      || _jest:=_b.find_tab(,'NAZ_S',,'likeIC',_b.NAZ_S)
      ?};
      _b.cntx_pop();
      {? _jest
      || _a.err_fld(_b,'NAZ_S',1,'"+'Benefit o takiej nazwie skróconej już istnieje.'@+"')
      || 1
      ?}
   "),
:: Pola nieredagowalne.
   "_a.in_set(_b,'AKT',,'T','N')"
)


\bnftt_akronim_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Przed redagowaniem pola BNFTT.AKRONIM.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Ponieważ na portalu AKRONIM benefitu jest niemodyfikowalny, to blokujemy możliwość poprawiania.
-menu_txt()<>'popraw'


\bnftt_zrodlo_val_zfss
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Jedna z możliwych wartości pola BNFTT.ZRODLO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'ZFŚS'


\bnftt_zrodlo_val_pracodawca
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Jedna z możliwych wartości pola BNFTT.ZRODLO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'PRACODAWCA'


\bnftt_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: "Okienko - przed" dla okna tabeli BNFTT.
::   WE: [_a] [STRING] - Akronim okna tabeli BNFTT [domyślnie: 'SLO'].
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_we:={? var_pres('_a')=type_of('') || _a || 'SLO' ?};

BNFTT.win_fml(_we,,'AKRONIM',,'ICON_BEFORE',"Icon.icon_before(BNFTT.IKONA)");
BNFTT.win_efml('RED',,'IKONA',,'ICON_BEFORE',"Icon.icon_before(BNFTT.IKONA)");
~~


\bnftt_ao
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: "Okienko - po" dla okna tabeli BNFTT.
::   WE: [_a] [STRING] - Akronim okna tabeli BNFTT [domyślnie: 'SLO'].
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_we:={? var_pres('_a')=type_of('') || _a || 'SLO' ?};

BNFTT.win_efml('RED',,'IKONA',,'ICON_BEFORE');
BNFTT.win_fml(_we,,'AKRONIM',,'ICON_BEFORE');
~~


\bnftt_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wertowanie definicji benefitów.
::   WE: _a [ARRAY] - Tablica elementów nazwanych z parametryzacją (patrz formuła \_cfg/portal_bip.fml dla _a='BNFTT').
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _<1
|| _stack:=form_stack();
   FUN.error('Brak parametru "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~obj_ntab(_a)
|| _stack:=form_stack();
   FUN.error('Nieprawidłowy typ parametru "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~exec('array_cmptype','#array',_a,exec('_cfg','portal_bip','BNFTT'))
|| _stack:=form_stack();
   FUN.error('Nieprawidłowa budowa tablicy "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~exec('_funkc_valid','portal_bip',_a.funkc)
|| return(0)
?};
_cfg:=_a;

_cfg.upr:=exec('chk_role','#b__box',OPERATOR.USER,_cfg.uid);

_cfg.bnftt.bipkat:=exec('bipkat_get','portal_bip','BNFT','$',,'ref',1);

params_set(
   'cfg',_cfg
);

BNFTT.cntx_psh();
BNFTT.f_clear();
BNFTT.index('RN');
BNFTT.prefix(exec('ref_firma','ustawienia'));
BNFTT.fld_fml('BIPKAT','BLANK',"params_get().cfg.bnftt.bipkat");
BNFTT.win_sel(exec('bnftt_wnds','portal_benefity',_cfg));
BNFTT.win_edit('RED');
BNFTT.win_patt('SZUK');
exec('bnftt_bo','portal_benefity','WER');
BNFTT.select();
exec('bnftt_ao','portal_benefity','WER');
BNFTT.fld_fml('BIPKAT','BLANK');
BNFTT.cntx_pop();
~~


\bnftt_wnds
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła odpowiedzialna za budowę okna grupowego dla definiowania benefitów.
::   WE: _a [ARRAY] - Tablica elementów nazwanych z parametryzacją (patrz formuła \_cfg/portal_bip.fml dla _a='BNFTT').
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=_a;

_mode:='maximized';
_grp:=BNFTT.grp_make('Benefity'@,
   "  _cfg:=params_get().cfg;
      exec('zz_pom_psh','phr_widok',_cfg.uid);
      ZZ_DOK.cntx_psh();
      ZZ_DOK.f_clear();
      ZZ_DOK.prefix();
      ZZ_KRYT.cntx_psh();
      ZZ_KRYT.f_clear();
      ZZ_KRYT.index('UNIQUE');
      ZZ_KRYT.fld_fml('ZZ_LINK','BLANK',""BNFTT.ZZ_DOK"");
      ZZ_KRYT.fld_fml('ZZ_TYP','BLANK',""exec('typ_find','phr_dane',ZZ_POM.MODUL,'ODB')"");
      ZZ_KRYT.fld_fml('ZZ_KRYT','BLANK',""exec('zz_kryt_zz_kryt_bl','phr_widok')"");
      UD_DEF.cntx_psh();
      UD_DEF.f_clear();
      UD_DEF.index('OPIS');
      exec('ud_def_zz_zal_bf','phr_widok');
      BIPODB.cntx_psh();
      BIPODB.f_clear();
      BIPODB.index('NAZW');
      BIPODB.fld_fml('ZZ_LINK','BLANK',""BNFTT.ZZ_DOK"");
      BNFTP.cntx_psh();
      BNFTP.f_clear();
      BNFTP.index('NAZW');
      ~~
   ",
   '#bnfttgrp',,,
   "  BNFTP.cntx_pop();
      BIPODB.fld_fml('ZZ_LINK','BLANK');
      BIPODB.cntx_pop();
      exec('ud_def_zz_zal_oc','phr_widok');
      UD_DEF.cntx_pop();
      ZZ_KRYT.fld_fml('ZZ_KRYT','BLANK');
      ZZ_KRYT.fld_fml('ZZ_TYP','BLANK');
      ZZ_KRYT.fld_fml('ZZ_LINK','BLANK');
      ZZ_KRYT.actions('CFG',':',,1);
      ZZ_KRYT.cntx_pop();
      ZZ_DOK.cntx_pop();
      exec('zz_pom_pop','phr_widok');
      1
   "
);

:: Benefity.
BNFTT.grp_sel(_grp,,'WER',,
   "  params_set(_par:=params_get());
      ZZ_POM.DOKZ_LNK:=BNFTT.ZZ_DOK().ref();
      grp_disp(UD_DEF,'ZZ_SEL',1);
      grp_disp(ZZ_KRYT,'CFG',1);
      grp_disp(BIPODB,'WER',1);
      grp_disp(BNFTP,'VIEW')
   ",,,,,,,,
   _mode
);
BNFTT.grp_splt(_grp,,'horizontal','detale',20);

:: Załączniki (zakładka w dolnym panelu).
_ws:={? _cfg.upr || 'WER' || 'WEO' ?};
BNFTT.grp_sel(_grp,UD_DEF,'ZZ_SEL','Załączniki'@,
   $("params_set(params_get()); grp_disp(ZZ_DOKZ,'"+_ws+"')"),,,,
   "  _TAB:=BNFTT;
      {? grp_empty(_TAB,'WER')
      || '#disable'
      || exec('typzal_root','phr_dane',_TAB);
         UD_DEF.prefix(exec('szukaj_ud_sch','schemat','TYPZAL',2-!_TAB))
      ?}
   ",,,,
   _mode
);
BNFTT.tab_splt(_grp,,'vertical','zz_dokz',',33%');
BNFTT.grp_sel(_grp,ZZ_DOKZ,_ws,,,,,,
   "  {? grp_empty(UD_DEF,'ZZ_SEL')
      || '#disable'
      || exec('ud_def_zal_wer_bs','phr_widok')
      ?}
   ",,,,
   _mode
);

:: Kryteria uczestnictwa (zakładka w dolnym panelu).
BNFTT.grp_sel(_grp,ZZ_KRYT,'CFG','Kryteria'@,,,,,
   $("{? grp_empty(BNFTT,'WER')
      || '#disable'
      || _upr:="+$_cfg.upr+";
         {? _upr & _a
         || ZZ_KRYT.dnd_sel('CFG',,'records.ZZ_KRYT',""exec('zz_kryt_dnd','phr_widok')"")
         ?};
         ZZ_KRYT.actions('CFG',{? BNFTT.AKT='T' | ~_upr || 'WDPTUYW:WD' || 'Y:Y' ?},,1);
         ZZ_KRYT.prefix(ref_name(ZZ_POM.DOKZ_LNK),ZZ_POM.DOKZ_LNK,ZZ_KRYT.fld_fml('ZZ_TYP','*BLANK')());
         {? _a
         || _cntx:=obj_new('recs','key');
            _cntx.recs:=0;
            _cntx.key:='';
            ZZ_KRYT.cntx_psh();
            {? ZZ_KRYT.first()
            || {!
               |? _cntx.recs+=1;
                  _cntx.key+='%1|%2|' [ZZ_KRYT.uidref(),$ZZ_KRYT.crc()];
                  ZZ_KRYT.next()
               !}
            ?};
            ZZ_KRYT.cntx_pop();
            params_get().cfg.buf.service:=_cntx
         ?}
      ?}
   "),
   "  {? _a & ~grp_empty(BNFTT,'WER')
      || ZZ_KRYT.dnd_sel('CFG',,'records.ZZ_KRYT',"""");
         _cntx:=obj_new('recs','key');
         _cntx.recs:=0;
         _cntx.key:='';
         ZZ_KRYT.cntx_psh();
         {? ZZ_KRYT.first()
         || {!
            |? _cntx.recs+=1;
               _cntx.key+='%1|%2|' [ZZ_KRYT.uidref(),$ZZ_KRYT.crc()];
               ZZ_KRYT.next()
            !}
         ?};
         ZZ_KRYT.cntx_pop();
         _buf:=params_get().cfg.buf;
         {? _buf.service.recs<>_cntx.recs | _buf.service.key<>_cntx.key
         || exec('bipodb_update','portal_bip',BNFTT.ZZ_DOK)
         ?};
         obj_del(_buf.service)
      ?}
   ",,,
   _mode
);

:: Odbiorcy (zakładka w dolnym panelu).
BNFTT.grp_sel(_grp,BIPODB,'WER','Potencjalni beneficjenci'@,
   "grp_disp(BNFTT,'WER')",,,,
   "  {? grp_empty(BNFTT,'WER')
      || '#disable'
      || BIPODB.prefix(BNFTT.NP_DOK,BNFTT.ZZ_DOK)
      ?}
   ",,,,
   _mode
);
{? ~_cfg.upr
:: Akcje w oknie WER tabeli BIPODB nie mogą być przywiązane do czynności (bo występują w kilku różnych).
:: Obecnie możemy zatem jedynie wyłączyć jet w sposób jak poniżej. Niestety, związane z nimi przyciski nadal pozostaną
:: widoczne, choć wyszarzone.
|| BIPODB.actions('WER','DULG:D')
?};

:: Beneficjenci (realni).
BNFTT.grp_sel(_grp,BNFTP,'VIEW','Beneficjenci'@,,,,,
"  {? grp_empty(BNFTT,'WER')
      || '#disable'
      || BNFTP.prefix(BNFTT.ref())
      ?}
   ",,,,
   _mode
);

_grp


\bnftt_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Rekord - przed" w oknie WER tabeli BNFTT.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _ag:='';
   {? ~BNFTT.sel_size()
   || _ag+={? BNFTT.AKT='T' || 'I' || 'J' ?}
   ?};
   BNFTT.actions_grayed('WER',_ag)
?};
~~


\bnftt_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Rekord - po" w oknie WER tabeli BNFTT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_put:=-menu_txt()='popraw';
_ret:=exec('bnftt_chk','portal_benefity',_put);
_type:=type_of(_ret);
{? ~_put | (_type=type_of('') & _ret<>'') | (_type=type_of(0) & ~_ret)
|| return(_ret)
?};

_sql:=
   'select BNFTP.P, BNFTP.OD, BNFTP.DO '
   'from BNFTP '
   'where BNFTP.BNFTT=:_a and '
      '(BNFTP.OD<to_date(:_b) '+{? BNFTT.DO<>date(0,0,0) || 'or BNFTP.DO is null or to_date(:_c)<BNFTP.DO' || '' ?}+')';
_TAB:=sql(_sql,BNFTT.ref(),BNFTT.OD,BNFTT.DO);
{? _TAB.first() &
   FUN.ask(
      'Istnieją pracownicy, dla których okres użytkowania benefitu wykracza poza okres dostępności.'@+'\n'+
      'Czy na pewno chcesz kontynuować?'@
   )=0
|| 0
|| 1
?}


\bnftt_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Wyświetl - przed" w oknie WER tabeli BNFTT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BNFTT.display()


\bnftt_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła obsługująca edycje rekordu - akcje "Dołącz" i "Popraw" w oknie WER tabeli BNFTT.
::   WE: [_a] [NUMBER] - Specyfikacja akcji:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;

R.cntx_psh();
R.prefix();
R.f_set('RN',,
   '"R".REFERENCE not in (select BNFTT.R from BNFTT where BNFTT.FIRMA=:_a'+
      {? _put || ' and BNFTT.REFERENCE<>\'%1\'' [$BNFTT.ref()] || '' ?}+
   ')',
   exec('ref_firma','ustawienia')
);
_ret:=0;
params_set(params_get());
{? _put
|| BNFTT.memo_get(,'OPIS');
   BNFTT.memo_get(,'WARTOSC');
   BNFTT.memo_get(,'KONTAKT')
|| BNFTT.blank();
   BNFTT.memo_set(,'OPIS');
   BNFTT.memo_set(,'WARTOSC');
   BNFTT.memo_set(,'KONTAKT')
?};
{? BNFTT.edit("exec('bnftt_ae','portal_benefity')")
|| do();
   {? _put || BNFTT.put() || BNFTT.add() ?} &
   BNFTT.memo_put(,'OPIS') &
   BNFTT.memo_put(,'WARTOSC') &
   BNFTT.memo_put(,'KONTAKT');
   _ret:=end()
?};
R.f_clear();
R.cntx_pop();
_ret


\bnftt_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Dołącz - przed" w oknie WER tabeli BNFTT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('bnftt_edit','portal_benefity',0)


\bnftt_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Popraw - przed" w oknie WER tabeli BNFTT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? params_exec('bnftt_edit','portal_benefity',1) & BNFTT.AKT='T' & exec('bipodb_licz','portal_bip',BNFTT.ZZ_DOK)=0
|| FUN.info('Żaden z pracowników nie spełnia podanych kryteriów.'@+'\n'+'Brak potencjalnych beneficjentów.'@)
?}


\bnftt_aktn_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "grupa przed" przy włączaniu aktywności w oknie WER tabeli BNFTT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask(
      {? BNFTT.sel_size()=1
      || 'Czy udostępnić zaznaczony benefit na portalu?'@
      || 'Czy udostępnić zaznaczone benefity na portalu?'@
      ?}
   )
|| sel_nchk();
   KOMM.init(,,'Raport z udostępniania benefitów'@);
   1
?}


\bnftt_aktn_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "przed" przy włączaniu aktywności w oknie WER tabeli BNFTT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_main:=params_get().cfg.main;
_gr:=BNFTT.sel_size();
{? BNFTT.AKT<>'T'
|| {? _gr | FUN.ask('Czy udostępnić bieżący benefit na portalu?'@)
   || BNFTT.AKT:='T';
      {? BNFTT.put()
      || {? exec('bipodb_licz','portal_bip',BNFTT.ZZ_DOK)=0
         || {? _gr
            || KOMM.set_root('Benefity bez beneficjentów'@);
               KOMM.add(_main.id());
               KOMM.sect_end()
            || FUN.info('Żaden z pracowników nie spełnia podanych kryteriów.'@)
            ?}
         ?}
      ?}
   ?}
|? _gr
|| KOMM.set_root('Benefity niewymagające udostępnienia (udostępnione już wcześniej)'@);
   KOMM.add(_main.id());
   KOMM.sect_end()
|| melody()
?};
~~


\bnftt_aktn_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "grupa po" przy włączaniu aktywności w oknie WER tabeli BNFTT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KOMM.select()


\bnftt_aktt_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "grupa przed" przy wyłączaniu aktywności w w oknie WER tabeli BNFTT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask(
      {? BNFTT.sel_size()=1
      || 'Czy ukryć zaznaczony benefit na portalu?'@
      || 'Czy ukryć zaznaczone benefity na portalu?'@
      ?}
   )
|| sel_nchk();
   KOMM.init(,,'Raport z ukrywania benefitów'@);
   1
?}


\bnftt_aktt_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "przed" przy wyłączaniu aktywności w w oknie WER tabeli BNFTT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_main:=params_get().cfg.main;
_gr:=BNFTT.sel_size();
{? BNFTT.AKT<>'N'
|| {? _gr | FUN.ask('Czy ukryć bieżący benefit na portalu?'@)
   || BNFTT.AKT:='N';
      BNFTT.put()
   ?}
|? _gr
|| KOMM.set_root('Benefity niewymagające ukrycia (ukryte już wcześniej)'@);
   KOMM.add(_main.id());
   KOMM.sect_end()
|| melody()
?}


\bnftt_aktt_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "grupa po" przy wyłączaniu aktywności w w oknie WER tabeli BNFTT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KOMM.select()


\bnftp_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli BNFTP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bnftp_modb','portal_benefity') & exec('bnftp_chk','portal_benefity',0)


\bnftp_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli BNFTP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bnftp_modb','portal_benefity') & exec('bnftp_chk','portal_benefity',1)


\bnftp_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli BNFTP.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
__CHK.validate(BNFTP,
   $("_a.table(_b,"+$_put+",,'FIRMA','BNFTT','OD')"),
   $("{? _b.DO<>date(0,0,0) & _b.DO<_b.OD
      || _a.err_fld(_b,'DO',1,'"+'Data nie może być wcześniejsza niż %1.'@ [$BNFTP.OD]+"');
         'DO'
      || 1
      ?}
   "),
   $("{? _b.NOMINAL<0
      || _a.err_fld(_b,'NOMINAL',1,'"+'Wartość nie może być ujemna.'@+"')
      || ''
      ?}
   "),
:: Pola nieredagowalne.
   "_a.record(_b,,'P')",
   $("{? _b.OWNER<>'' & type_of(ref_tab(_b.OWNER))<>type_of(_b)
      || FUN.error('"+'Nieprawidłowa wartość pola BNFTP.OWNER.'@+"');
         0
      || 1
      ?}
   ")
)


\bnftp_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli BNFTP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
BNFTP.NOMINAL:=BNFTP.NOMINAL$2;
{? BNFTP.OWNER=''
|| BNFTP.SRC:='Dodany ręcznie'
|| _TAB:=ref_tab(BNFTP.OWNER);
   BNFTP.SRC:=
      {? type_of(_TAB)=type_of(~~)
      || '!!!'
      |? _TAB=IS_WYPL
      || 'Świadczenie'
      |? _TAB=SRSR
      || 'Środek trwały'
      |? _TAB=KARO
      || 'Wyposażenie'
      || 'Inne'
      ?}
?};

{? BNFTP.BNFTT
|| BNFTT.cntx_psh();
   BNFTT.prefix();
   BNFTP.BNFTT();
:: Firma jest newralgiczna - ewentualne różnice powinny zostać zgłoszone - mogą oznaczać błędy w zakresie przetwarzanych
:: danych.
   {? BNFTP.FIRMA=null()
   || BNFTP.FIRMA:=BNFTT.FIRMA
   |? BNFTP.FIRMA<>BNFTT.FIRMA
   || undo('%1: %2' ['BNFTP','Brak jednoznaczności powiązania z firmą.'@]);
      _ret:=0
   ?};
   BNFTP.R:=BNFTT.R;
   {? BNFTP.NOMINAL=BNFTT.NOMINAL
   || BNFTP.NOMINAL:=0
   ?};
   BNFTT.cntx_pop()
?};
{? BNFTP.P
|| P.cntx_psh();
   P.prefix();
   BNFTP.P();
   BNFTP.OSOBA:=P.OSOBA;
   BNFTP.WYDZIAL:=P.WYDZIAL;
   BNFTP.ST:=P.ST;
   BNFTP.CP:=P.CP;
   BNFTP.F_ZATR:=P.F_ZATR;
   P.cntx_pop()
?};
_ret


\bnftp_bnftt_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Po redagowaniu pola pola BNFTP.BNFTT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? BNFTP.BNFTT
|| {? BNFTP.R<>BNFTP.BNFTT().R
   || BNFTP.R:=BNFTP.BNFTT().R;
      BNFTP.NOMINAL:=0
   ?}
|| BNFTP.R:=null();
   BNFTP.NOMINAL:=0
?};
win_disp();
1


\bnftp_nominal_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Przed wyświetleniem pola BNFTP.NOMINAL.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? BNFTP.NOMINAL=0
|| BNFTP.NOMINAL:=BNFTP.BNFTT().NOMINAL
?};
1


\bnftp_szczegoly_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Obsługa akcji "Szczegóły - przed" w oknie WER tabeli BNFTP - prezentacja informacji źródłowej.
::       UWAGA: przy dodawaniu obsługi kolejnych "właścicieli" należy zaktualizować treść formuły \bnftp_modb.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_TAB:=ref_tab(BNFTP.OWNER);
{? type_of(_TAB)=type_of(~~)
|| FUN.error('Nieprawidłowe wskazanie rekordu źródłowego.'@)

|? _TAB=IS_WYPL
:: Świadczenie
|| IS_WYPL.cntx_psh();
   IS_WYPL.prefix();
   {? IS_WYPL.seek(BNFTP.OWNER)
   || OSOBA.cntx_psh();
      OSOBA.prefix();
      IS_DEF.cntx_psh();
      IS_DEF.prefix();
      IS_WYPL.win_edit('RED');
      IS_WYPL.display();
      IS_DEF.cntx_pop();
      OSOBA.cntx_pop()
   ?};
   IS_WYPL.cntx_pop()

|? _TAB=KARO
:: Wyposażenie
|| exec('bnftp_szczegoly','wyp_head',BNFTP.OWNER)

|? _TAB=SRSR
:: Środek trwały
|| exec('bnftp_szczegoly','fst_ext',BNFTP.OWNER)

|| FUN.error('Brak obsługi informcji źródłowych dla tabeli %1.'@ [2-!_TAB])
?};
~~


\is_wypl2bnftp1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Formuła nadaje wartości polom tabeli BNFTP na podstawie pól tabeli IS_WYPL.
::   WE:  _a  [REFERENCE] - Firma.
::        _b  [REFERENCE] - Pracownik.
::        _c  [REFERENCE] - Benefit.
::       [_d] [NUMBER]    - Pomijać aktualizację kwoty (tylko dla wariantu z jednym składnikiem) [0*/1].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_firma:=_a;
_prac:=_b;
_bnftt:=_c;
_bez_kw:=var_pres('_d')=type_of(0) & _d;

BNFTP.FIRMA:=_firma;
BNFTP.P:=_prac;
BNFTP.OD:=IS_WYPL.OD;
BNFTP.DO:=IS_WYPL.DO;
BNFTP.BNFTT:=_bnftt;
BNFTP.OWNER:=IS_WYPL.uidref();

IS_DEF.cntx_psh();
IS_DEF.prefix();
BNFTT.cntx_psh();
BNFTT.prefix();
{? BNFTP.BNFTT().R=IS_WYPL.IS_DEF().R
|| {? ~_bez_kw
   || BNFTP.NOMINAL:=IS_WYPL.KW
   ?}

|| _kw:=0;
   _fml:=BNFTT.memo_txt(,1,'WARTOSC');
   {? _fml<>''
   || P.cntx_psh();
      P.prefix();
      BNFTP.P();
      _kw:=($_fml)();
      P.cntx_pop()
   || _kw:=BNFTT.NOMINAL
   ?};
   BNFTP.NOMINAL:={? _kw>0 || _kw || IS_WYPL.KW ?}
?};
BNFTT.cntx_pop();
IS_DEF.cntx_pop();

~~


\is_wypl2bnftpn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Formuła tworzy lub aktualizuje odpowiednie zapisy w tabeli BNFTP na podstawie bieżącego rekordu tabeli IS_WYPL.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
IS_DEF.cntx_psh();
IS_DEF.prefix();
_bnftt:=IS_WYPL.IS_DEF().BNFTT;
{? _bnftt<>null()
|| _firma:=exec('ref_firma','ustawienia');
   P.cntx_psh();
   P.index('OSOZATR');
   P.prefix(_firma,IS_WYPL.OSOBA);
   {? P.first()
   || _uidref:=IS_WYPL.uidref();
      BNFTP.cntx_psh();
      BNFTP.index('OWNER');
      BNFTP.prefix();
      {!
      |? _put:=BNFTP.find_key(_uidref,P.ref());
         BNFTP.blank();
         exec('is_wypl2bnftp1','portal_benefity',_firma,P.ref(),_bnftt);
         {? _put
         || BNFTP.put()
         || BNFTP.add()
         ?};
         P.next()
      !};
      BNFTP.cntx_pop()
   ?};
   P.cntx_pop()
?};
IS_DEF.cntx_pop();
~~


\bnftt_naz_s_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Przed redagowaniem pola BNFTT.NAZ_S
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? ~+BNFTT.NAZ_S & +BNFTT.NAZWA
|| BNFTT.NAZ_S:=spli_str(BNFTT.NAZWA,' ')[1]
?};

1

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:21 b29719136a8c41ea49e38fe627c888dac7a16bfa2779a2dbad3a7565748a63931216408dd674dd80324712c9c01175bfe7c79968445d00a241b16df25d86feaa49620993f4f379833736cc77dcceb3ec42049dca448f4cb9f570948092771f5a0fa7e5f60a519c95105e1213834a9c44fce0413eac1174151664a4b2bd833ef8
