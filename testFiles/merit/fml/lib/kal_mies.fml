:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: kal_mies.fml
:: Utworzony: 2006
:: Autor: GS
::======================================================================================================================
:: Zawartość: Procedury pozwalające na wyświetlenie miesięcznego widoku kalendarza.
::======================================================================================================================


\start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Prezentacja miesiąca pracy.
::   WE: _a - alias tabeli źródłowej
::       _b - schemat kolorowania [domyślnie: '01']
::       _c - rok [domyślnie: bieżący]
::       _d - miesiąc [domyślnie: bieżący]
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_TAB:=_a;
_sch:={? var_pres('_b')=type_of('') & _b<>'' || _b || '01' ?};
_rok:={? var_pres('_c')=type_of(0) & _c>0 || _c || date()~1 ?};
_msc:={? var_pres('_d')=type_of(0) & _d>=1 & _d<=12 || _d || date()~2 ?};

_zd:=date(0,0,0);

:: przygotuj struktury danych i interfejs użytkownika
_par:=exec('setup','kal_mies',_TAB,_sch,_rok,_msc);

:: ustal zakres lat
_od:=
   {? _TAB=P || P.DZA~1
   |? _TAB=ZLBR || {? ZLBR.OD<>_zd || ZLBR.OD~1 || date()~1 ?}
   || _rok
   ?};
_do:=
   {? _TAB=P || {? P.DZ<>_zd || P.DZ~1 || date()~1+(date()~2>=10) ?}
   |? _TAB=ZLBR || {? ZLBR.DO<>_zd || ZLBR.DO~1 || date()~1+(date()~2>=10) ?}
   || _rok
   ?};
{? _do<_od
|| _do:=_od
?};
{? _do<_rok
|| _do:=_rok
?};
:: dodaj lata
{! _ri:=_od.._do
|! _par.year:=_ri;
   _par.add_year()
!};

_par.year:=_rok;
_par.month:=_msc;
{? _par.find_month()
|| KAL_MIES.R:=_rok;
   KAL_MIES.M:=_msc;
   _par.read_data()
?};

_def:=exec('save_fml_all','#field',KAL_MIES);
:: zastąp domyślne formuły zmiennej KAL_MIES
KAL_MIES.fld_fml('M','AFTER_EDIT',"1");
KAL_MIES.fld_fml('R','AFTER_EDIT',"
   {? fld()>9999 || fld(9999)
   |? fld()<0 || fld(0)
   ?};
   1
");

params_set('par',_par);
:: udostępnij miesiąc pracy
_par.tree.TABLE.select(,1);

:: przywróć domyślną obsługę pól zmiennej KAL_MIES
exec('restore_fml_all','#field',KAL_MIES,_def);
~~


\setup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Tworzy parametry działania widoku kalendarza.
::   WE: _a - alias tabeli źródłowej
::       _b - schemat kolorowania
::       _c - rok
::       _d - miesiąc
::   WY: referencja tablicy nazwanej
::----------------------------------------------------------------------------------------------------------------------
_ret:=obj_new(
:: aktualny kontekst działania
   'TABLE','schema','year','month',
:: tabele i okna prezentujące dane
   'tree','data','EXT_VIEW','GRP_WND',
:: metody
   'find_year','find_month','add_year',
   'clear_data','read_data'
);
_ret.tree:=obj_new('TABLE','SEL_WND');
_ret.data:=obj_new('TABLE','SEL_WND');

:: ustaw parametry działania
_ret.TABLE:=_a;
_ret.schema:=_b;
_ret.year:=_c;
_ret.month:=_d;

:: dla jednolitego dodawania akcji zmiany miesiąca
_month_act:="
   _name:='Miesiąc'@@;
   _help:='Zmiana prezentowanego miesiąca'@;
   _before:=\"params_exec('view_month_b','kal_mies')\";
   _after:=\"params_exec('view_month_a','kal_mies')\";
   _aid:='M';
   _a.win_act(_b,1,'Formuła',_name,,_help,_before,_after,1,,,,_aid);
   _a.win_act(_b,0,'Formuła',_name,,_help,_before,_after,1,,,,_aid);
   ~~
";

:: utwórz tabelę nawigatora dla miesięcy
_tree:=tab_tmp(2,
   'TREE_REF','TREE_REF','Nadrzędny'@,
   'ORDER','INTEGER','Porządek'@,
   'YEAR','INTEGER','Rok'@,
   'MONTH','INTEGER','Miesiąc'@,
   'DESCR','STRING[20]','Rok/miesiąc'@
);
:: utwórz okno nawigatora dla miesięcy
_wnd:=_tree.mk_sel('Miesiąc pracy'@,'N',0,'#kal_mies_tree',,,,1);
:: skonfiguruj widok
_tree.win_fld(_wnd,,'DESCR',,,,,,,,'Rok/miesiąc kalendarzowy'@);
:: dodaj obsługę
:: zmiana miesiąca
_month_act(_tree,_wnd);
:: dodaj ustawianie ikon
_tree.win_fml(_wnd,,'DESCR',,'ICON_BEFORE',"
   'xwin16.png:%1'[${? cur_tab(1,1).ORDER<0 || 83 || 190 ?}]
");

:: ustaw parametry działania
_ret.tree.TABLE:=_tree;
_ret.tree.SEL_WND:=_wnd;

:: utwórz tabelę czasu pracy
_data:=tab_tmp(1,
   'ORDER','INTEGER','Numer'@,
   'DAY','INTEGER','Dzień'@,
   'NAME','STRING[20]','Nazwa'@,
   'KIND','STRING[2]','Typ'@,
   'DESCR','STRING[30]','Opis'@,
   'HBEGIN','TIME','Od godziny'@,
   'HEND','TIME','Do godziny'@,
   'TIME','TIME','Czas pracy'@,
   'NORM','REAL','Norma dobowa'@,
   'BREAK','TIME','Czas przerwy'@,
   'COLOR','INTEGER','Kolor wiersza'@,
   'SUM','STRING[1]','Podsumowanie'@,
   'DEF','STRING[16]','Definicja'@,
   'EXC','STRING[16]','Wyjątek'@,
   'ABS','STRING[16]','Nieobecność'@
);
:: ustaw formatowanie kolumn
_fml:="'empty=%1'[$(cur_tab(1,1).DAY=0)]";
_data.fld_fml('DAY','DISPLAY_FORMAT',_fml);
_data.fld_fml('HBEGIN','DISPLAY_FORMAT',_fml);
_data.fld_fml('HEND','DISPLAY_FORMAT',_fml);
_fml:="'alignment=right'";
_data.fld_fml('KIND','DISPLAY_FORMAT',_fml);
_data.fld_fml('TIME','DISPLAY_FORMAT',_fml);
:: utwórz okno czasu pracy
_wnd:=_data.mk_sel('Dni pracy'@,'N',0,'#kal_mies_data');
:: skonfiguruj widok
_mob:='mobile_visible=1';
_data.win_fld(_wnd,,'DAY',,,-3,,,,,'Dzień miesiąca'@,,,,,,_mob);
_data.win_fld(_wnd,,'NAME',,,15,,,,,'Nazwa'@,,,,,,_mob);
_data.win_fld(_wnd,,'KIND',,,-3,,,,,'Typ dnia'@);
_data.win_fld(_wnd,,'DESCR',,,25,,,,,'Krotki opis'@,,,,,,_mob);
_data.win_fld(_wnd,,'HBEGIN',,,-6,,,,,'Godzina rozpoczęcia dnia pracy'@);
_data.win_fld(_wnd,,'HEND',,,-6,,,,,'Godzina zakończenia dnia pracy'@);
_data.win_fld(_wnd,,'TIME',,,-6,,,,,'Czas pracy lub podsumowanie tygodnia/miesiąca'@,,,,,,_mob);
_data.win_fld(_wnd,,'NORM',,,-8,2,,,,'Norma dobowa lub podsumowanie tygodnia/miesiąca'@);
{? exec('isEnabled','prc_przerwy')
|| _data.win_fld(_wnd,,'BREAK',,,-6,,,,,'Czas trwania przerwy'@)
?};
:: dodaj obsługę
:: zmiana miesiąca
_month_act(_data,_wnd);
:: wyświetlenie szczegółów
_name:='Szczegóły'@@;
_help:='Wyświetlenie szczegółowych informacji'@;
_after:="params_exec('view_display_a','kal_mies')";
_aid:='S';
_data.win_act(_wnd,0,'Formuła',_name,,_help,,_after,,,,,_aid);
_data.win_act(_wnd,0,'Wyświetl',,,,,_after);
:: wyświetlenie legendy
_data.win_act(_wnd,0,'Formuła','Legenda'@@,,'Wyświetlenie legendy',"
      exec('legenda','color','KAL_MIES#'+params_get().par.schema)
   ",,,,,,'L',,'target=window'
);
:: rekord przed
_data.win_act(_wnd,0,'Rekord',,,,"
   _par:=params_get().par;
   _col:=_par.data.TABLE.COLOR;
   Color.fnd_kol('KAL_MIES#'+_par.schema+'#'+form(_col,-2,0))
");


:: ustaw parametry działania
_ret.data.TABLE:=_data;
_ret.data.SEL_WND:=_wnd;

_wnd:=_tree.grp_make('Planowany miesiąc pracy'@,"params_exec('view_bo','kal_mies')",'#kal_mies',,,,,'html_maximized');
_tree.grp_sel(_wnd,_tree,_ret.tree.SEL_WND,,"params_exec('view_tree_ar','kal_mies')",,,,,,,,'maximized');
_tree.grp_splt(_wnd,,'vertical','right',',25%');
_tree.grp_sel(_wnd,_data,_ret.data.SEL_WND,,,,,,"params_exec('view_data_bs','kal_mies',_a)",,,,'maximized','DATA',1);
_tree.win_sel(_wnd);

:: ustaw parametry działania
_ret.GRP_WND:=_wnd;

:: metody obsługujące struktury
:: znajdź nodę reprezentującą rok
_ret.find_year:="
   .tree.TABLE.find_key(0,-.year)
";
:: znajdź nodę reprezentującą miesiąc
_ret.find_month:="
   {? .find_year()
   || _TAB:=.tree.TABLE;
      _TAB.find_key(#_TAB.ref(),.month)
   ?}
";
:: dodaj nodę reprezentującą rok
_ret.add_year:="
   {? ~.find_year()
   || _TAB:=.tree.TABLE;
      _TAB.blank(1);
      _TAB.ORDER:=-.year;
      _TAB.YEAR:=.year;
      _TAB.DESCR:=form(.year,,,'99');
      {? _TAB.add()
      || _ref:=#_TAB.ref();
         {! _ni:=1..12
         |! _TAB.TREE_REF:=_ref;
            _TAB.ORDER:=_ni;
            _TAB.MONTH:=_ni;
            _TAB.DESCR:=spli_str(date(,_ni,1)$8,' ')[1];
            _TAB.add()
         !}
      ?}
   ?}
";
:: usuń dane o miesiącu pracy
_ret.clear_data:="exec('clear_data','kal_mies',.)";
:: odczytaj dane dla miesiąca
_ret.read_data:="exec('read_data','kal_mies',.)";

_ret


\view_month_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Przed akcją "Miesiąc".
::   WE:
::   WY: 0/1 - wykonanie właściwej akcji (nie/tak)
::----------------------------------------------------------------------------------------------------------------------
KAL_MIES.win_edit('RED');
KAL_MIES.edit("__CHK.record(KAL_MIES,,'R')")


\view_month_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Akcja "Miesiąc" w oknach widoku miesiąca.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get();
params_set(_env);

_par:=_env.par;
_par.year:=KAL_MIES.R;
_par.month:=KAL_MIES.M;

_par.add_year();
_par.find_month();

{? cur_tab(1,1)<>_par.tree.TABLE
|| grp_disp(_par.tree.TABLE,_par.tree.SEL_WND,1)
|| win_activate('DATA')
?};
~~


\view_display_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Akcja "Szczegóły" w widoku miesiąca.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_TAB:=cur_tab(1,1);

{? _TAB.ABS<>''
:: nieobecność
|| N.cntx_psh();
   {? N.seek(_TAB.ABS,,1)
   || N.win_edit('NFO');
      N.display()
   ?};
   N.cntx_pop()

|? _TAB.EXC<>'' | _TAB.DEF<>''
:: dzień kalendarza
|| KAL_DEF.cntx_psh();
   {? KAL_DEF.seek({? _TAB.EXC<>'' || _TAB.EXC || _TAB.DEF ?},,1)
   || {? exec('isEnabled','prc_przerwy')
      || KAL_DEF.win_edit('RED_P')
      || KAL_DEF.win_edit('RED')
      ?};
      KAL_DEF.display()
   ?};
   KAL_DEF.cntx_pop()

|? _TAB.SUM<>'N'
:: podsumowanie
|| _TAB.cntx_psh();
   _fml:="'alignment=right'";
   _TAB.fld_fml('TIME','DISPLAY_FORMAT',"''");
   _wnd:=_TAB.mk_edit('Szczegóły'@,,'#kal_mies_sum');
   _TAB.win_esep(_wnd,_TAB.DESCR);
   _TAB.win_efld(_wnd,,'TIME',,,6);
   _TAB.win_efld(_wnd,,'NORM',,,6);
   exec('ok_esc','#window',_TAB,_wnd);
   _TAB.win_edit(_wnd);
   _TAB.display();
   _TAB.cntx_pop();
   _TAB.win_edel(_wnd);
   _TAB.fld_fml('TIME','DISPLAY_FORMAT',_fml)
?};
~~


\view_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Przed wyświetleniem panelu miesiąca pracy.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get().par;
{? _par.find_month()
|| _par.tree.TABLE.tr_set(1,_par.tree.SEL_WND,,1)
?};
grp_disp(_par.tree.TABLE,_par.tree.SEL_WND);
1


\view_tree_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Po odświeżeniu wiersza w nawigatorze miesięcy.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get();
params_set(_env);

_data:=_env.par.data;
grp_disp(_data.TABLE,_data.SEL_WND);
~~


\view_data_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Przed obsługą widoku dni miesiąca.
::   WE: _a [INTEGER] - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? _a<>0 || return() ?};
_par:=params_get().par;
_par.year:=KAL_MIES.R:=_par.tree.TABLE.YEAR;
_par.month:=KAL_MIES.M:=_par.tree.TABLE.MONTH;
_par.read_data();
~~


\clear_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Usuwa i tworzy na nowo widok miesiąca.
::   WE: _a [OBJECT] - referencja obiektu obsługującego widok
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_par:=_a;
_par.data.TABLE.prefix();
_par.data.TABLE.erase();
{? _par.month=0
|| return()
?};
_ld:=date(_par.year,_par.month,0)~3;
_TAB:=_par.data.TABLE;
_TAB.blank(1);
{! _ni:=1.._ld
|! _cd:=date(_par.year,_par.month,_ni);
   _TAB.ORDER+=1;
   _TAB.DAY:=_ni;
   _TAB.NAME:=spli_str(_cd$7,',')[1];
   _TAB.DESCR:='';
   _TAB.COLOR:=
      {? _cd~4=6 || 1
      |? _cd~4=7 || 2
      ?};
   _TAB.SUM:='N';
   _TAB.add();
   {? _cd~4=7
   || _TAB.ORDER+=1;
      _TAB.DAY:=0;
      _TAB.NAME:='';
      _TAB.DESCR:='Podsumowanie tygodnia'@;
      _TAB.COLOR:=0;
      _TAB.SUM:='T';
      _TAB.add()
   ?}
!};
_TAB.ORDER+=1;
_TAB.DAY:=0;
_TAB.NAME:='';
{? _TAB.SUM='N'
|| _TAB.ORDER+=1;
   _TAB.DESCR:='Podsumowanie tygodnia'@;
   _TAB.COLOR:=0;
   _TAB.SUM:='T';
   _TAB.add()
?};
_TAB.DESCR:='Podsumowanie miesiąca'@;
_TAB.COLOR:=0;
_TAB.SUM:='M';
_TAB.add();
_TAB.first();
~~


\read_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Nanosi na widok miesiąca informacje z kartotek.
::   WE: _a [OBJECT] - referencja obiektu obsługującego widok
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_par:=_a;
:: przygotuj widok
_par.clear_data();
{? ~__KAL.set_cal(_par.TABLE.KAL,_par.year)
|| return()
?};

:: skrócone odwołania
_TAB:=_par.data.TABLE;
_ld:=date(_par.year,_par.month,0)~3;
_zt:=time(0,0,0);

:: nanieś informacje z kalendarza
_TAB.blank(1);
{! _ni:=1.._ld
|! _cd:=date(_par.year,_par.month,_ni);
   {? __KAL.get_day(_cd) & _TAB.find_tab(,'DAY',,'=',_ni)
   || KAL_DEF.ROK().NAZWA();
      {? KAL_DEF.OPIS<>''
      || _TAB.NAME:=KAL_DEF.OPIS
      ?};
      _val:=KAL_DEF.TYP+(1+(KAL_DEF.TYPWS+' '));
      _txt:=
         {? _val='R ' || 'Roboczy'@
         |? _val='SN' || 'Niedziela'@
         |? _val='SW' || 'Święto'@
         |? _val='RN' || 'Roboczy w niedzielę'@
         |? _val='RS' || 'Roboczy w święto'@
         |? _val='W5' || 'Wolny - 5 dniowy tydzień pracy'@
         |? _val='WH' || 'Wolny harmonogramowo'@
         |? _val='WN' || 'Wolny za niedzielę'@
         |? _val='WS' || 'Wolny za święto'@
         || ''
         ?};
      _TAB.KIND:=form(_val);
      _TAB.DESCR:=_txt;
      _TAB.HBEGIN:=KAL_DEF.POCZATEK;
      _TAB.HEND:=KAL_DEF.KONIEC;
      _TAB.TIME:=KAL_DEF.CZAS;
      _TAB.BREAK:=KAL_DEF.P_CZAS;
      _TAB.NORM:=
         {? _val*'R'
         || KAL_NAZW.NORMA
         ?};
      _TAB.COLOR:=
         {? KAL_DEF.TYP='W' || 1
         |? KAL_DEF.TYP='S' || 2
         ?};
      {? KAL_NAZW.CZESC='T' & ~exec('grafik_rwzcz','kaledit',_cd,_par.TABLE)
      || _TAB.EXC:=$KAL_DEF.ref();
         _TAB.COLOR:=4
      || _TAB.DEF:=$KAL_DEF.ref()
      ?};
      _TAB.put()
   ?}
!};
:: uwzględnij nieobecności
{? _par.TABLE=P
|| _start:=date(_par.year,_par.month,1);
   _stop:=date(_par.year,_par.month,0);
   N.cntx_psh();
   N.index('NIEOBECN');
   N.prefix('N',P.ref());
   {? N.find_le(_stop)
   || {!
      |? {? _start<=N.DO & N.OD<=_stop
         || _beg:={? N.OD<_start || _start || N.OD ?}~3;
            _end:={? _stop<N.DO || _stop || N.DO ?}~3;
            {! _ni:=_beg.._end
            |? _TAB.find_tab(,'DAY',,'=',_ni)
            |! _TAB.DESCR:=N.NB().RT;
               _TAB.ABS:=$N.ref();
               {? ~_TAB.COLOR
               || _TAB.COLOR:=3
               ?};
               _TAB.HBEGIN:=_zt;
               _TAB.HEND:=_zt;
               _TAB.TIME:=_zt;
               _TAB.BREAK:=_zt;
               _TAB.NORM:=0;
               _TAB.put()
            !}
         ?} & N.prev()
      !}
   ?};
   N.cntx_pop()
?};
:: aktualizuj podsumowania
_wtime:=_mtime:=_btime:=_bmtime:=_zt;
_wnorm:=_mnorm:=0;
_loop:=_TAB.first();
{!
|? _loop
|! {? _TAB.SUM='N'
   || _wtime+=_TAB.TIME;
      _mtime+=_TAB.TIME;
      _btime+=_TAB.BREAK;
      _bmtime+=_TAB.BREAK;
      _wnorm+=_TAB.NORM;
      _mnorm+=_TAB.NORM
   |? _TAB.SUM='T'
   || _TAB.TIME:=_wtime;
      _TAB.NORM:=_wnorm;
      _TAB.BREAK:=_btime;
      _TAB.put();
      _wtime:=_zt;
      _btime:=_zt;
      _wnorm:=0
   |? _TAB.SUM='M'
   || _TAB.TIME:=_mtime;
      _TAB.NORM:=_mnorm;
      _TAB.BREAK:=_bmtime;
      _TAB.put()
   ?};
   _loop:=_TAB.next()
!};
_TAB.first();
~~


\start_old
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Prezentacja miesiąca pracy.
::   WE: _a - Alias tabeli źródłowej.
::       _b - Schemat kolorowania [domyślnie: '01'].
::       _c - Rok [domyślnie: bieżący].
::       _d - Miesiąc [domyślnie: bieżący].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _<1
|| FUN.error('\\start/kal_mies.fml\nBrak obowiązkowego parametru wywołania [OWNER].');
   return()
|? var_pres('_a')<>type_of(R_WZCZ) | var_pres('KAL',_a)<>26
||  FUN.error('\\start/kal_mies.fml\nNieprawidłowa wartość parametru wywołania [OWNER].');
   return()
|| _owner:=_a
?};
_nrcol:={? var_pres('_b')=type_of('') & +_b=2 || _b || '01' ?};
KAL_MIES.R:={? var_pres('_c')=type_of(0) || _c || date()~1 ?};
KAL_MIES.M:={? var_pres('_d')=type_of(0) & _d>=1 & _d<=12 || _d || date()~2 ?};

_BUFF:=exec('model','kal_mies');

_COL:=obj_new(4);
{! _lp:=1 .. obj_len(_COL)
|! _COL[_lp]:=''
!};

params_set(
   'OWNER',_owner,
   'nrcol',_nrcol,
   'BUFF',_BUFF,
   'COL',_COL
);

exec('kolory','kal_mies');

KAL_DEF.cntx_psh();
{? exec('isEnabled','prc_przerwy')
|| KAL_DEF.win_edit('RED_P')
|| KAL_DEF.win_edit('RED')
?};
KAL_ROK.cntx_psh();
KAL_NAZW.cntx_psh();
{? _owner=P
|| N.cntx_psh();
   N.index('NIEOBECN');
:: Ustawić prawidłowe okno redagowania i zrezygnować z tymczasowego w \kal_mies_dx_f3.
   N.win_edit(N.mk_edit(,1))
::   N.win_edit('RED')
?};

exec('ustaw','kal_mies');
KAL_MIES.win_edit('RED');
KAL_MIES.edit();

{? _owner=P
|| N.cntx_pop()
?};
KAL_NAZW.cntx_pop();
KAL_ROK.cntx_pop();
KAL_DEF.cntx_pop();
~~


\model
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2006]
:: OPIS: Tworzy pomocniczy bufor danych dla okienka miesiąca pracy.
::   WY: Alias do bufora danych.
::----------------------------------------------------------------------------------------------------------------------
tab_tmp(1,
   'FLD','INTEGER','Numer pola',
   'WEEK','INTEGER','Numer tygodnia',
   'DAY','INTEGER','Numer dnia',
   'TMP','INTEGER','Opis dnia',
   'ABS','INTEGER','Nieobecność',
   'EXC','INTEGER','Wyjątek',
   'TIME','TIME','Godziny robocze',
   'COL','INTEGER','Kolor',
   'VAL','INTEGER','Poprawny'
)


\czysc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2006]
:: OPIS: Czyści zawartość bufora danych miesiąca pracy. Jeśli bufor nie zawiera danych, to są one tworzone dla każdej z
::       pary pól D?? i X??.
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_BUFF:=_par.BUFF;

: Wyczyść pola okienka miesiąca.
_rok:=KAL_MIES.R;
_msc:=KAL_MIES.M;
KAL_MIES.blank();
KAL_MIES.R:=_rok;
KAL_MIES.M:=_msc;

_we:=KAL_MIES.win_edit('?');
{! _lp:=1 .. 42
|! _nr:=form(_lp,-2,0);
   KAL_MIES.efld_opt(_we,'enable=0',,'D'+_nr);
   KAL_MIES.efld_opt(_we,'enable=0',,'X'+_nr)
!};

{? _BUFF.first()
:  Wymazanie zawartości.
|| {!
   |? _fld:=_BUFF.FLD;
      _week:=_BUFF.WEEK;
      _BUFF.blank();
      _BUFF.FLD:=_fld;
      _BUFF.WEEK:=_week;
      _BUFF.put();
      _BUFF.next()
   !}
:  Brak zapisów - utwórz.
|| {! _nr:=1 .. 42
   |! _BUFF.blank();
      _BUFF.FLD:=_nr;
      _BUFF.WEEK:=1+(_BUFF.FLD-1)%7;
      _BUFF.add()
   !}
?}


\tekst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2006]
:: OPIS: Zależnie od zawartości bieżącego rekordu w buforze danych miesiąca pracy ustala wyświetlaną w polach D?? i X??
::       treść.
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_BUFF:=_par.BUFF;

_nr:=form(_BUFF.FLD,-2,0);
_data:='D'+_nr;
_opis:='X'+_nr;
_set:="($('KAL_MIES.'+_a+':=_a'))(_b)";

{? _BUFF.DAY & _BUFF.TMP
:  Dzień aktualnie przeglądanego miesiąca mający swój opis we wzorcu czasu pracy.
|| _set(_data,form(_BUFF.DAY,2,0));
   {? _BUFF.ABS
:     Nieobecność
   || N.cntx_psh();
      N.prefix();
      N.seek(_BUFF.ABS,N.name());
      _set(_opis,N.NB().RT);
      N.cntx_pop()
:     Pozostałe dni.
   || KAL_DEF.prefix();
      KAL_DEF.seek(_BUFF.TMP,KAL_DEF.name());
      _set(_opis,' '+$KAL_DEF.POCZATEK+'-'+$KAL_DEF.KONIEC)
   ?}
:  Dzień poza ustalonym miesiącem - wyczyść zawartość pól D?? i X??
|| _set(_data,'');
   _set(_opis,'')
?}


\ustaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2006]
:: OPIS: Wypełnia informacjami bufor danych.
::   WE: _a - alias do bufora danych
::       _b - alias do tabeli źródłowej
:: UWAGA: poprawność argumentów wywołania nie jest weryfikowana - argument _b musi identyfikować tabelę, w której
::        występuje kolumna KAL wskazująca na zapis w tabeli KAL_NAZW
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
params_set(_par);
_owner:=_par.OWNER;
_BUFF:=_par.BUFF;

exec('czysc','kal_mies');

{? ~__KAL.set_cal(_owner.KAL,KAL_MIES.R)
|| return(0)
?};

_rok:=KAL_MIES.R;
_msc:=KAL_MIES.M;
_start:=date(_rok,_msc,1);
_stop:=date(_rok,_msc,0);
_off:=_start~4-1;
_beg:=_start~3;
_end:=_stop~3;

_we:=KAL_MIES.win_edit('?');
{! _lp:=_beg .. _end
|? _BUFF.find_key(_lp+_off)
|! _nr:=form(_BUFF.FLD,-2,0);
   KAL_MIES.efld_opt(_we,'enable=1',,'D'+_nr);
   KAL_MIES.efld_opt(_we,'enable=1',,'X'+_nr);
   _BUFF.DAY:=_lp;
   _dt:=date(_rok,_msc,_lp);
   {? __KAL.get_day(_dt)
   || _BUFF.VAL:=1;
      _BUFF.TMP:=KAL_DEF.ref();
      {? KAL_DEF.ROK().NAZWA().CZESC='T' & ~exec('grafik_rwzcz','kaledit',_dt,_owner)
      || _BUFF.EXC:=KAL_DEF.ref();
         _BUFF.COL:=4
      || {? KAL_DEF.TYP='W' || _BUFF.COL:=1
         |? KAL_DEF.TYP='S' || _BUFF.COL:=2
         ?}
      ?}
   ?};
   _BUFF.TIME:=KAL_DEF.CZAS;
   ($('KAL_MIES.STR'+$_BUFF.WEEK+'+=_a'))(_BUFF.TIME);
   KAL_MIES.SMN+=_BUFF.TIME;
   ($('KAL_MIES.STN'+$_BUFF.WEEK+'+=_a'))(_BUFF.TIME);
   KAL_MIES.SMR+=_BUFF.TIME;

   _BUFF.put()
!};

{? _owner=P
|| N.prefix('N',P.ref());
   {? N.find_le(_stop)
   || {!
      |? {? _start<=N.DO & N.OD<=_stop
         || _od:={? N.OD<_start || _start || N.OD ?};
            _do:={? _stop<N.DO || _stop || N.DO ?};
            _beg:=_od~3;
            _end:=_do~3;
            {! _lp:=_beg .. _end
            |? _BUFF.find_key(_lp+_off)
            |! _BUFF.ABS:=N.ref();
               {? ~_BUFF.COL
               || _BUFF.COL:=3
               ?};
               ($('KAL_MIES.STR'+$_BUFF.WEEK+'-=_a'))(_BUFF.TIME);
               KAL_MIES.SMR-=_BUFF.TIME;
               _BUFF.put()
            !}
         ?} & N.prev()
      !}
   ?}
?};

_BUFF.for_each("params_set(params_get()); exec('tekst','kal_mies')")


\kolory
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła zapamiętuje aktualnie ustawione kolory.
::   WE:
::   WY: Czy zmieniły się kolory?
::       0 - Nie;
::       1 - Tak.
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_COL:=_par.COL;
_nrcol:=_par.nrcol;

_zmiana:=0;
{! _lp:=1 .. obj_len(_COL)
|! _col:=Color.fnd_kol('KAL_MIES#'+_nrcol+'#'+form(_lp,-2,0));
   {? _COL[_lp]<>_col
   || _zmiana+=1;
      _COL[_lp]:=_col
   ?}
!};
_zmiana


\kal_mies_rm_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Po redagowaniu pól: KAL_MIES.R i KAL_MIES.M.
::   WE:
::   WY:
::  OLD: \pored/kal_mies.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_afld()='R' & fld()>9999
|| fld(9999)
?};
{? fld()>0
|| params_set(params_get());
   exec('ustaw','kal_mies');
   win_disp()
?}


\kal_mies_xx_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Przed wyświetleniem pól KAL_MIES.Dxx i KAL_MIES.Xxx.
::   WE:
::   WY:
::  OLD: \wyswietl/kal_mies.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_BUFF:=_par.BUFF;
_COL:=_par.COL;

_nr:=#(cur_afld()+2);

{? _BUFF.find_key(_nr) & _BUFF.COL
:  Kolor określony dla danego zapisu.
|| _COL[_BUFF.COL]

|| 1
?}


\kal_mies_dx_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Przed redagowaniem pól KAL_MIES.Dxx.
::   WE:
::   WY:
::  OLD: \edytuj/kal_mies.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
params_set(_par);
_BUFF:=_par.BUFF;

_BUFF.find_key(#(1-cur_afld()));
exec('tekst','kal_mies');
_BUFF.DAY & _BUFF.VAL


\kal_mies_dx_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wybór F3 dla pól KAL_MIES.Dxx.
::   WE:
::   WY:
::  OLD: \f3/kal_mies.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_BUFF:=_par.BUFF;

{? _BUFF.ABS
:  Wyświetl szczegółowe informacje o nieobecności pracownika.
|| N.seek(_BUFF.ABS,);
   N.display()
:  Wyświetl szczegółowe informacje o dniu pracy (w tym o wyjątku).
|| KAL_DEF.seek(_BUFF.EXC,);
   KAL_DEF.display()
?}


\kal_mies_dx_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Po redagowaniu pól KAL_MIES.Dxx.
::   WE:
::   WY:
::  OLD: \pored/kal_mies.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
exec('tekst','kal_mies');
win_disp();
1


\kal_mies_lb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Legenda".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
params_set(_par);

exec('legenda','color','KAL_MIES#'+_par.nrcol);
: Być może użytkownik zmienił kolory - podczytajmy je ponownie.
{? exec('kolory','kal_mies')
|| win_disp()
?};

''


\start_smart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Wersja "sprytna" prezentacji miesiąca pracy stosowana w okienkach dla zasobów - domyśla się kontekstu
::----------------------------------------------------------------------------------------------------------------------
_params:=params_get();
{? var_pres('_params')>100 & var_pres('owner',_params)>100
|| _owner:=_params.owner
|| _owner:=exec('r_wzcz_owner','kaledit',0)
?};
exec('start','kal_mies',_owner,'01');
~~


\start_res
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [19.42]
:: OPIS: Prezentacja miesiąca pracy na podstawie przekazanego typu zasobu.
::   WE: _a - STRING - Typ zasobu - B,P,G,S,W
::       _b - STRING - Ref zasobu
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
_ref:={? var_press('_b')=type_of('str') || _b || '' ?};
_owner:=null;
{? _ref<>''
|| {? _typ='P'
   || P.use(ref_name(_ref));
      P.clear;
      {? P.seek(_ref) || _owner:=P ?}
   |? _typ='B'
   || ZLBR.clear;
      {? ZLBR.seek(_ref) || _owner:=ZLBR ?}
   |? _typ='S'
   || TWRKPLC.clear;
      {? TWRKPLC.seek(_ref) || _owner:=TWRKPLC ?}
   |? _typ='G'
   || TWRKZBR.clear;
      {? TWRKZBR.seek(_ref) || _owner:=TWRKZBR ?}
   |? _typ='W'
   || UD_SKL.cntx_psh();
      UD_SKL.clear();
      {? UD_SKL.seek(BIT.sqlint(_ref),)
      || KAL_UD.index('RESORWYD');
         KAL_UD.prefix(UD_SKL.ref(),'W');
         {? KAL_UD.first()
         || _owner:=KAL_UD
         || FUN.info('Nie znaleziono kalendarza dla danego wydziału.'@)
         ?}
      ?};
      UD_SKL.cntx_pop()
   ?}
?};
{? var_press('_owner')=118
|| exec('start','kal_mies',_owner,'01')
?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:36 9b79ab3c014abc6969b6367ab081fe39816f59fb6ee475e0ff87b2be8e5eaa9ae3786e65835498651792cc81a1852289e7a4d82e410f3a85307f0de1b3e5cc2422b68440624eac3a37fe22870d606baeac33a25e73d8265feff91c57efb72d2b87ea24958fa8ca2c00d541fb16852d3fd6a0fbf15178d156711f769ed4db8588
