:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: faktury_wspolne.fml
:: Utworzony: 27.03.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Obsługa dokumentów sprzedaży i zakupu - wspólne formuły
::======================================================================================================================


\thismont
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JF [2008]
:: OPIS: data z biezacego m-ca
::  OLD: \thismont/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? date()<date(ST.AR,ST.AM,1)
|| date(ST.AR,ST.AM,1)
|? date()>date(ST.AR,ST.AM,0)
|| date(ST.AR,ST.AM,0)
|| date()
?}


\tab_mask
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: akcja powiazania pozycji PZ-tek z dokumentami zakupowymi
::   WE: [_a] - sposob zwrotu masek:
::              0-(domyslny) wszystkie maski + maska 'hs'
::              1-wszystkie maski bez maski 'hs'
::              2-sasiadujace maski do podanej
::              3-maska przed + dana
::              4-maska po + dana
::              5-od danej maski wzwyz
::              6-od danej maski w dol
::       [_b] - aktualny kod maski
::   WY: tabela masek lat
::  OLD: \tab_mask/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0; _b:=form(ST.AR,,0,'99')+2 ?};
{? _=1 || _b:=form(ST.AR,,0,'99')+2 ?};

_wyn:=sql('select distinct substr(to_string(OKR.ROK),3,2) ROK from OKR order by 1');

{? _a=0 || _wyn.blank(); _wyn.ROK:='hs'; _wyn.add(1) ?};
{? _a>1
||
:: obcinamy z przodu
   {? _a<>6 & _wyn.find_key(_b)
   || _rok:={? _a<>5 & (_a=2 | _a=3) & _wyn.prev() || _wyn.ROK || _b ?};
      {? _rok<>'' & _wyn.first() || {! |? {? _wyn.ROK=_rok || 0 || _wyn.del() ?} !} ?}
   ?};
:: obcinamy z tylu
   {? _a<>5 & _wyn.find_key(_b)
   || _rok:={? _a<>6 & (_a=2 | _a=4) & _wyn.next() || _wyn.ROK || _b ?};
      {? _rok<>'' & _wyn.find_key(_rok) || {! |? {? _wyn.ROK=_rok || _wyn.next() || _wyn.del() ?} !} ?}
   ?}
?};
_wyn


\liczfak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: liczy wartosci na fakture
::   WE: _a - czy funkcja ma liczyc pozycje korekty [1 - jak korekte, 0 - jak fakture]
::          - w przypadku obliczania calej faktury lub calej pozycji [1 - jak korekte]
::          - w przypadku edycji gdy wartosci sa wartosciami po korekcie [0 - jak fakture]
::       _b - 1 - uwzgledniac rabaty, 0 - bez rabatow
::       _c - 1 - przeliczać cenę walutową, 0 - nie przeliczać ceny walutowej
::       _d - kurs na walutę opodatkowania
::       _e - kurs na walutę narodową
::       _f - typ dokumentu
::   WY: 0-błąd danych; 1-przeliczono wartości
::  OLD: \liczfak/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAP.FAKS=null() | FAKS.T=null() || FUN.error('Błąd danych.'@); return(0) ?};
:: podczytujemy FAKS więc później odwołujemy się bezpośrednio do tabeli a nie po złączeniu FAP.FAKS()
FAKS.cntx_psh();
FAP.FAKS();

_sppk:=var_pres('_d')=1 & _d | var_pres('_e')=1 & _e;

{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=FAKS.KRS ?} || _d:=FAKS.KRS ?};
{? _>=5 || {? type_of(_e)<>1 || _e:=FAKS.NKRS ?} || _e:=FAKS.NKRS ?};
{? _>=6 || {? type_of(_f)<>7 || _f:=FAKS.T ?} || _f:=FAKS.T ?};

:: podczytujemy TYPYSP więc później odwołujemy się bezpośrednio do tabeli a nie po złączeniu FAP.FAKS().T()
TYPYSP.cntx_psh();
FAKS.T:=_f;
FAKS.T();
_sppk:={? _sppk || 0 || TYPYSP.SPPK='T' ?};

SLO.cntx_psh();

_dwal:=FAKS.WAL<>FAKS.NWAL;
_kor:=TYPYSP.KOR='T';
_kor_a_0:=_a=0 & FAKS.KOR<>'';
_dsp_wpoz:=exec('dsp_wpoz','faktury_wspolne');

:: pozycje korekty liczone jako korekta
{? _kor_a_0
||
   exec('wysw_kor','faktury_poz');
   FAP.IL:=FKOR.BIL;
   FAP.CWAL:=FKOR.BCWAL;
   FAP.CPR:=FKOR.BCPR;
   FAP.CN:=FKOR.BCN;
   FAP.CB:=FKOR.BCB;
   FAP.WN:=FKOR.BWN;
   FAP.WV:=FKOR.BWV;
   FAP.WB:=FKOR.BWB;

   FAP.WWAL:=FKOR.BWWAL;
   FAP.VWAL:=FKOR.BVWAL;
   FAP.BWAL:=FKOR.BBWAL;

   FAP.WWAL_P:=FKOR.BWWAL_P;
   FAP.VWAL_P:=FKOR.BVWAL_P;
   FAP.BWAL_P:=FKOR.BBWAL_P;

   FAP.IL2:=FKOR.BIL2;
   FAP.WS2:=FKOR.BWS2
?};
:: dokładności ilości
_dokl:={? FAP.M=null() & FAKS.WHERE='L' || ST.DOKL || 3 ?};
{? FAP.M<>null
|| _dokl_m:=exec('jaka_dok_m','jm',FAP.M);
   {? FAP.JM<>FAP.M().J & (';MGLP'*FAKS.WHERE)>1
   || _dokl_s:=exec('jaka_dok_mjm','jm',FAP.M,FAP.JM,FAP.M().J);
      _dokl:={? _dokl_s<0 || _dokl_m || _dokl_s ?}
   || _dokl:=_dokl_m
   ?}
?};
:: dokładność ceny
_doklFix:=FAKS.name()+2<>'hs' | exec('get','#params',300215,2)='T';
{? _doklFix || FAP.IL:=FAP.IL$_dokl ?};
_dokl_c:=
   {? _doklFix
   || {? FAKS.SZ='S' || {? FAP.M<>null() || FAP.M().DOKL_S || ST.DOKL_S ?}
      |? FAKS.SZ='Z' || {? FAP.M<>null() || FAP.M().DOKL_Z || ST.DOKL_Z ?}
      || 2
      ?}
   || _dokl_c:=+(2-$fabs(frac(_cena:={? _dwal || FAP.CWAL || FAP.CPR ?})));
      {? _dokl_c<2 || 2 || _dokl_c ?}
   ?};
:: przeliczenia wartości
_rabat:=_rabat2:=1;
_kwrab:=_kwrabj:=0;
TAZ.RAB_TYP:=FAKS.RAB_TYP;
{? exec('czyrabp','ceny',TAZ.RAB_TYP)
||
   _rabat2:={? _b=1 || exec('rab_proc','ceny',FAP.RAB,FAKS.RAB+FAP.RAB1,TAZ.RAB_TYP) || 0 ?};
   _rabat:=1-{? _b=1 || _rabat2/100 || 0 ?}
||
   _cena:={? _dwal || FAP.CWAL || FAP.CPR ?};
   _kwil:=FAP.IL;
   _nagwsp:={? _b=1 || -(FAKS.RAB+FAP.RAB1)/100 || 0 ?};
   _kwpoz:={? _b=1  || -FAP.RABK || 0 ?};
   _kwrab:=
      {? _b=1
      || {? TAZ.RAB_TYP='W'
         || _kwpoz+(_nagwsp*((_cena*_kwil)$2))$2
         || ((_kwpoz+(_nagwsp*_cena)$_dokl_c)*_kwil)$2
         ?}
      || 0
      ?};
   _kwrabj:=
      {? _b=1
      || {? TAZ.RAB_TYP='W'
         || {? _kwil || (_kwpoz/_kwil)$_dokl_c ?}+(_nagwsp*_cena)$_dokl_c
         || _kwpoz+(_nagwsp*_cena)$_dokl_c
         ?}
      || 0
      ?}
?};
{? FAP.SV=null
||
:: pozycja bez stawki vat
   FAP.CN:=(FAP.CPR*_rabat)$_dokl_c;
   FAP.WN:=(FAP.CN*FAP.IL)$2
||
:: pozycja ze stawką vat
   _walj:=1;
   {? exec('get','#params',300400,2)='T' & _dwal & FAKS.NWAL=INFO.NAROD & FAP.CWAL=0 & FAP.CPR>0 & FAKS.KRS>0
   ||
      FAP.WAL:=FAP.WAL_H:=FAKS.WAL;
      FAP.KRS:=FAKS.KRS;
      _walj:=exec('FindInSet','#table','WAL','WAL_SYM',FAP.WAL().KOD,,"WAL.J",,,1);
      {? _c || FAP.CWAL:=FAP.CPR/FAP.KRS*_walj $_dokl_c ?};
      FAP.CPR:=FAP.CWAL*FAP.KRS/_walj $_dokl_c
   |? _dwal
   ||
      _walj:=exec('FindInSet','#table','WAL','WAL_SYM',FAP.WAL().KOD,,"WAL.J",,,1);
      FAP.WAL:=FAKS.WAL;
      FAP.KRS:={? _dsp_wpoz & exec('FindAndGet','#table',FAKS,FAKS.KZ,,"FAKS.KRS",0)=0 || FAP.KRS || _d ?};
      FAP.CPR:=FAP.CWAL*FAP.KRS/_walj $_dokl_c
   |? FAKS.WAL=INFO.NAROD & FAP.WAL<>INFO.NAROD & FAP.CPR<>0 & FAP.KRS<>0
   ||
      _walj:=exec('FindInSet','#table','WAL','WAL_SYM',FAP.WAL().KOD,,"WAL.J",,,1);
      {? _c || FAP.CWAL:=FAP.CPR/FAP.KRS*_walj $_dokl_c ?}
   ?};
   _krs:={? FAP.KRS & FAP.WAL=FAKS.WAL || FAP.KRS || 1 ?};
   _nkrs:={? _e=0 || 1 |? _dsp_wpoz || _krs || _e ?};
   _walj:={? FAKS.WAL=INFO.NAROD || 1 || _walj ?};

   _vat:=#((FAP.SV().KOD*'%')+FAP.SV().KOD-1)/100;

:: TYPYSP.FIS-dokumenty sprzedazy, FAKS.CB-dokumenty zakupu
   {? TYPYSP.FIS='T' | FAKS.CB='T'
:: od brutto
   ||
      {? TYPYSP.SPP='T' | _dwal & TYPYSP.SPPK='T'
:: od brutto - wg wartosci
      ||
:: od brutto - wg wartosci - handlowa
         _cen:={? _dwal || FAP.CWAL || FAP.CPR ?};
         _cen_rab:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (_cen*_rabat)$_dokl_c
            || _cen+_kwrabj
            ?};
         FAP.BWAL:=
            {? FAKS.SPOBLRAB='W'
            || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || exec('obl_rabat','ceny',_cen*FAP.IL,_rabat2)$2
               || (_cen*FAP.IL)$2+_kwrab
               ?}
            || (_cen_rab*FAP.IL)$2
            ?};
         {? _dwal & _sppk || FAP.BWAL:=FAP.BWAL-FKOR.BWAL ?};
         FAP.WWAL:=(FAP.BWAL/(1+_vat))$2;
         FAP.VWAL:=(FAP.BWAL-FAP.WWAL)$2;
:: od brutto - wg wartosci - opodatkowania
         FAP.BWAL_P:=(FAP.BWAL*_krs/_walj)$2;
         FAP.WWAL_P:=(FAP.BWAL_P/(1+_vat))$2;
         FAP.VWAL_P:=(FAP.BWAL_P-FAP.WWAL_P)$2;
         FAP.CB:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (FAP.CPR*_rabat)$_dokl_c
            || _kw_rabj:=(_kwrabj*_krs/_walj)$_dokl_c;
               FAP.CPR+_kw_rabj
            ?};
         FAP.CN:=(FAP.CB/(1+_vat))$_dokl_c;
:: od brutto - wg wartosci - narodowa
         FAP.WB:=(FAP.BWAL*_nkrs/_walj)$2;
         FAP.WN:=(FAP.WB/(1+_vat))$2;
         FAP.WV:=(FAP.WB-FAP.WN)$2;

         {? _dwal & _sppk
         ||
            FAP.WWAL:=FAP.WWAL+FKOR.WWAL;
            FAP.VWAL:=FAP.VWAL+FKOR.VWAL;
            FAP.BWAL:=FAP.BWAL+FKOR.BWAL;

            FAP.WWAL_P:=FAP.WWAL_P+FKOR.WWAL_P;
            FAP.VWAL_P:=FAP.VWAL_P+FKOR.VWAL_P;
            FAP.BWAL_P:=FAP.BWAL_P+FKOR.BWAL_P;

            FAP.WN:=FAP.WN+FKOR.WN;
            FAP.WV:=FAP.WV+FKOR.WV;
            FAP.WB:=FAP.WB+FKOR.WB
         ?}
:: od brutto - wg ceny
      ||
:: od brutto - wg ceny - handlowa
         _cen:={? _dwal || FAP.CWAL || FAP.CPR ?};
         _cen_rab:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (_cen*_rabat)$_dokl_c
            || _cen+_kwrabj
            ?};
         FAP.BWAL:=
            {? FAKS.SPOBLRAB='W'
            || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || exec('obl_rabat','ceny',_cen*FAP.IL,_rabat2)$2
               || (_cen*FAP.IL)$2+_kwrab
               ?}
            || (_cen_rab*FAP.IL)$2
            ?};
         FAP.WWAL:=(FAP.BWAL/(1+_vat))$2;
         FAP.VWAL:=(FAP.BWAL-FAP.WWAL)$2;
:: od brutto - wg ceny - opodatkowania
         _kw_rab:=(_kwrab*_krs/_walj)$2;
         _kw_rabj:=(_kwrabj*_krs/_walj)$_dokl_c;
         FAP.CB:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (FAP.CPR*_rabat)$_dokl_c
            || FAP.CPR+_kw_rabj
            ?};
         FAP.CN:=(FAP.CB/(1+_vat))$_dokl_c;
         FAP.BWAL_P:=
            {? FAKS.SPOBLRAB='W'
            || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || exec('obl_rabat','ceny',FAP.CPR*FAP.IL,_rabat2)$2
               || (FAP.CPR*FAP.IL)$2+_kw_rab
               ?}
            || (FAP.CB*FAP.IL)$2
            ?};
         FAP.WWAL_P:=(FAP.BWAL_P/(1+_vat))$2;
         FAP.VWAL_P:=(FAP.BWAL_P-FAP.WWAL_P)$2;
:: od brutto - wg ceny - narodowa
         _cen:=(_cen*_nkrs/_walj)$_dokl_c;
         _kw_rab:=(_kwrab*_nkrs/_walj)$2;
         _kw_rabj:=(_kwrabj*_nkrs/_walj)$_dokl_c;
         _cen_rab:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (_cen*_rabat)$_dokl_c
            || _cen+_kw_rabj
            ?};
         FAP.WB:=
            {? FAKS.SPOBLRAB='W'
            || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || exec('obl_rabat','ceny',_cen*FAP.IL,_rabat2)$2
               || (_cen*FAP.IL)$2+_kw_rab
               ?}
            || (_cen_rab*FAP.IL)$2
            ?};
         FAP.WN:=(FAP.WB/(1+_vat))$2;
         FAP.WV:=(FAP.WB-FAP.WN)$2
      ?}
:: od netto
   ||
      {? TYPYSP.SPP='T' | _dwal & TYPYSP.SPPK='T'
:: od netto - wg wartosci
      ||
:: od netto - wg wartosci - handlowa
         _cen:={? _dwal || FAP.CWAL || FAP.CPR ?};
         _cen_rab:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (_cen*_rabat)$_dokl_c
            || _cen+_kwrabj
            ?};
         FAP.WWAL:=
            {? FAKS.SPOBLRAB='W'
            || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || exec('obl_rabat','ceny',_cen*FAP.IL,_rabat2)$2
               || (_cen*FAP.IL)$2+_kwrab
               ?}
            || (_cen_rab*FAP.IL)$2
            ?};
         {? _dwal & _sppk || FAP.WWAL:=FAP.WWAL-FKOR.WWAL ?};
         FAP.VWAL:=(FAP.WWAL*_vat)$2;
         FAP.BWAL:=(FAP.WWAL+FAP.VWAL)$2;

:: od netto - wg wartosci - opodatkowania
         FAP.CN:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (FAP.CPR*_rabat)$_dokl_c
            || _kw_rabj:=(_kwrabj*_krs/_walj)$_dokl_c;
               FAP.CPR+_kw_rabj
            ?};
         FAP.CB:=(FAP.CN+FAP.CN*_vat)$_dokl_c;
         FAP.WWAL_P:=(FAP.WWAL*_krs/_walj)$2;
         FAP.VWAL_P:=(FAP.WWAL_P*_vat)$2;
         FAP.BWAL_P:=(FAP.WWAL_P+FAP.VWAL_P)$2;

:: od netto - wg wartosci - narodowa
         FAP.WN:=(FAP.WWAL*_nkrs/_walj)$2;
         FAP.WV:=(FAP.WN*_vat)$2;
         FAP.WB:=(FAP.WN+FAP.WV)$2;

         {? _dwal & _sppk
         ||
            FAP.WWAL:=FAP.WWAL+FKOR.WWAL;
            FAP.VWAL:=FAP.VWAL+FKOR.VWAL;
            FAP.BWAL:=FAP.BWAL+FKOR.BWAL;

            FAP.WWAL_P:=FAP.WWAL_P+FKOR.WWAL_P;
            FAP.VWAL_P:=FAP.VWAL_P+FKOR.VWAL_P;
            FAP.BWAL_P:=FAP.BWAL_P+FKOR.BWAL_P;

            FAP.WN:=FAP.WN+FKOR.WN;
            FAP.WV:=FAP.WV+FKOR.WV;
            FAP.WB:=FAP.WB+FKOR.WB
         ?}
:: od netto - wg ceny
      ||
:: od netto - wg ceny - handlowa
         _cen:={? _dwal || FAP.CWAL || FAP.CPR ?};
         _cen_rab:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (_cen*_rabat)$_dokl_c
            || _cen+_kwrabj
            ?};
         FAP.WWAL:=
            {? FAKS.SPOBLRAB='W'
            || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || exec('obl_rabat','ceny',_cen*FAP.IL,_rabat2)$2
               || (_cen*FAP.IL)$2+_kwrab
               ?}
            || (_cen_rab*FAP.IL)$2
            ?};
         FAP.VWAL:=(FAP.WWAL*_vat)$2;
         FAP.BWAL:=(FAP.WWAL+FAP.VWAL)$2;
:: od netto - wg ceny - opodatkowania
         _kw_rab:=_kwrab*_krs/_walj$2;
         _kw_rabj:=(_kwrabj*_krs/_walj)$_dokl_c;
         FAP.CN:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (FAP.CPR*_rabat)$_dokl_c
            || FAP.CPR+_kw_rabj
            ?};
         FAP.CB:=(FAP.CN+FAP.CN*_vat)$_dokl_c;
         FAP.WWAL_P:=
            {? FAKS.SPOBLRAB='W'
            || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || exec('obl_rabat','ceny',FAP.CPR*FAP.IL,_rabat2)$2
               || (FAP.CPR*FAP.IL)$2+_kw_rab
               ?}
            || (FAP.CN*FAP.IL)$2
            ?};
         FAP.VWAL_P:=(FAP.WWAL_P*_vat)$2;
         FAP.BWAL_P:=(FAP.WWAL_P+FAP.VWAL_P)$2;
:: od netto - wg ceny - narodowa
         _cen:=(_cen*_nkrs/_walj)$_dokl_c;
         _kw_rab:=(_kwrab*_nkrs/_walj)$2;
         _kw_rabj:=(_kwrabj*_nkrs/_walj)$_dokl_c;
         _cen_rab:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (_cen*_rabat)$_dokl_c
            || _cen+_kw_rabj
            ?};
         FAP.WN:=
            {? FAKS.SPOBLRAB='W'
            || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || exec('obl_rabat','ceny',_cen*FAP.IL,_rabat2)$2
               || (_cen*FAP.IL)$2+_kw_rab
               ?}
            || (_cen_rab*FAP.IL)$2
            ?};
         FAP.WV:=(FAP.WN*_vat)$2;
         FAP.WB:=(FAP.WN+FAP.WV)$2
      ?}
   ?}
?};
:: pozycje korekty liczone jako korekta
{? _kor_a_0
||
   {? FAP.POZP=0
   ||
      FAP.IL-=FKOR.IL;
      FAP.CWAL-=FKOR.CWAL;
      FAP.CPR-=FKOR.CPR;
      FAP.CN-=FKOR.CN;
      FAP.CB-=FKOR.CB;
      FAP.WN-=FKOR.WN;
      FAP.WV-=FKOR.WV;
      FAP.WB-=FKOR.WB;

      FAP.WWAL-=FKOR.WWAL;
      FAP.VWAL-=FKOR.VWAL;
      FAP.BWAL-=FKOR.BWAL;

      FAP.WWAL_P-=FKOR.WWAL_P;
      FAP.VWAL_P-=FKOR.VWAL_P;
      FAP.BWAL_P-=FKOR.BWAL_P;

      FAP.IL2-=FKOR.IL2;
      FAP.WS2-=FKOR.WS2
   ?}
?};
:: przeliczniki
{? TYPYSP.KOR='T' | TYPYSP.ZAL='T' || exec('aktfil2','faktury_wspolne') ?};

SLO.cntx_pop();
TYPYSP.cntx_pop();
FAKS.cntx_pop();

1


\liczfak_ist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: liczy wartosc intrastatowe na fakturze
::   WE: _a - czy funkcja ma liczyc pozycje korekty [1 - jak korekte, 0 - jak fakture]
::          - w przypadku obliczania calej faktury lub calej pozycji [1 - jak korekte]
::          - w przypadku edycji gdy wartosci sa wartosciami po korekcie [0 - jak fakture]
::       _b - 1-przeliczac FAP.ILUJM, FAP.MASAN, 0-wpp
::   WY: 1
::  OLD: \liczfak/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? _>=2 || {? type_of(_a)<>1 || _b:=0 ?} || _b:=0 ?};

{? FAP.M().RODZ='T'
|| {? _a=0 & FAP.FAKS().KOR<>''
   || exec('ist_wart_fap','faktury_wspolne',0,_b)
   || exec('ist_wart_fap','faktury_wspolne',1,_b)
   ?}
?};
1


\liczfakd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: liczy wartości na fakturze i sprawdza czy dane pole przyjmuje wartość dodatnią
::   WY: 1-jest OK 0-pole ma wartosc ujemna
::  OLD: \liczfakd/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('itsPositive','#field',,'T')
|| _wyn:=1;
   {? DPOZ.WPR_R<>fld()
   || {? cur_afld='CPR' & (FAP.POZP<>0 | FAP.FAKS().KOR='')
      || exec('clr_promo_tap','ceny',,fld,FAP.FAKS().NWAL)
      ?};
      _wyn:=exec('liczfak','faktury_wspolne',,,cur_afld()='CPR');
      exec('set_efld_opt','faktury_poz');
      win_disp
   ?};
   {? _wyn=1 & DPOZ.WPR_R<>fld()
   ||
::    wariant jeśli zmiana wartości pola
      _wyn:=exec('liczfak_ist','faktury_wspolne',1,{? cur_afld()='CPR' || 0 || 1 ?})
   ?};
   _wyn
||
   0
?}


\aktfil2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: aktualizuje pole FAP.IL2 po zmianie pola FAP.IL
::  OLD: \aktfil2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAP.T2<>'N' & FAP.WS2<>0
|| {? FAP.M().J2<>null()
   || exec('oblJMG','jm',FAP,'IL',0);
      1
   |? FAP.FAKS().WHERE='G'
   || _dokl:=exec('jaka_dok_m','jm',FAP.M);
      {? _dokl<0 || _dokl:=exec('jaka_dok_mjm','jm',FAP.M,FAP.J2,FAP.M().J) ?};
      FAP.IL2:=FAP.IL*FAP.WS2 $ _dokl
   |? FAP.FAKS().WHERE='M' & FAP.FAKS().T().KOR='N' & FAP.M().RODZ='T'
   || DISP.ILF:=FAP.IL
   |? FAP.FAKS().SZ='Z' & ~BEER.JMZ
   || _dokl_m:=exec('jaka_dok_m','jm',FAP.M);
      _dokl_s:=exec('jaka_dok_mjm','jm',FAP.M,FAP.J2,FAP.M().J);
      {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
      roundmet(BEER.MDOKL);
      FAP.IL2:=FAP.IL*FAP.WS2 $ _dokl_s;
      roundmet(5)
   || _dokl:=exec('jaka_dok_m','jm',FAP.M);
      _dokl_m:=exec('jaka_dok_mjm','jm',FAP.M,FAP.JM,FAP.J2);
      _dokl_s:=exec('jaka_dok_mjm','jm',FAP.M,FAP.J2,FAP.JM);
      {? _dokl_s<0 || _dokl_s:=_dokl ?};
      {? _dokl_m<0 || _dokl_m:=_dokl ?};
      roundmet(BEER.MDOKL);
      {? FAP.JM=FAP.J2 | (((FAP.WS2=1 & FAP.T2='A') | FAP.WS2=0) & FAP.FAKS().WHERE<>'G')
      || FAP.WS2:=1;
         {? FAP.FAKS().WHERE<>'M' || FAP.JM:=FAP.J2 ?};
         FAP.IL2:=FAP.IL
      || FAP.IL2:={? FAP.WS2 || FAP.IL/FAP.WS2 || 0 ?} $ _dokl_m;
         FAP.IL:=FAP.IL $ _dokl_s
      ?};
      roundmet(5)
   ?}
|| {? FAP.FAKS().WHERE<>'M' | FAP.M().RODZ='U'
   || {? ~(FAP.FAKS().T().KOR='T' & FAP.M().J2<>null())
      || FAP.J2:=FAP.M().J;
         FAP.WS2:=1;
         FAP.IL2:=FAP.IL
      ?}
   ?}
?}


\ist_wart_fap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: nalicza wartosci dla intrastat dla FAP
::   WE: _a - patrz opis funkcji liczfak w faktury_wspolne.fml
::       _b - 1-przeliczac FAP.ILUJM, FAP.MASAN, 0-wpp
::  OLD: \ist_wart_fap/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_wsp:=1;
{? FAP.M=null
||
   FAP.MASAN:=FAP.ILUJM:=FAP.WF:=FAP.WS:=0

|? FAKS.IST_TYP<>'' & FAKS.IST_OKR<>''
||
   _dokl:=6;
   _doklw:=2;

   {? _b=1
   ||
      {? FAP.JM<>FAP.M().J
      ||
         _wsp:=exec('prz','jm',FAP.M,FAP.JM,FAP.M().J);
         {? _wsp<=0  || _wsp:=1 ?}
      ||
         _wsp:=1
      ?};
      _fapil:={? FAP.FAKS().JMZ || FAP.IL2 || FAP.IL ?};
      FAP.ILUJM:={? exec('fap_ilujm_pr','faktury_poz') || (_fapil*_wsp*FAP.M().JU_P)$_dokl || 0 ?};
      FAP.MASAN:={? exec('fap_masan_pr','faktury_poz') || (_fapil*_wsp*FAP.M().WN)$_dokl || 0 ?}
   ?};
   {? _a=0
   ||
:: dla korekty liczonej jak faktura (patrz opis funkcji liczfak w faktury.fml)
      FAP.WF:={? exec('fap_wf_pr','faktury_poz') || FKOR.BWWAL_P-FKOR.PWF || 0 ?};
      FAP.WS:={? exec('fap_ws_pr','faktury_poz') || FKOR.BWWAL_P-FKOR.PWS || 0 ?}
   ||
:: dla faktury i korekty
      FAP.WF:={? exec('fap_wf_pr','faktury_poz') || FAP.WWAL_P$_doklw || 0 ?};
      FAP.WS:={? exec('fap_ws_pr','faktury_poz') || FAP.WWAL_P$_doklw || 0 ?}
   ?}
?}


\ustafprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: ustawia zmienna BEER.FMJM
::   WE: [_a] - ref indeksu materialowego
::       [_b] - ref jednostki miary
::  OLD: \ustafprz/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0
|| BEER.JMZ:=exec('get','#params',400999,2)='T';
   BEER.FMJM:='NN1';
   _kod:=exec('get','#params',400000,2);
   {? _kod*{? BEER.SZ='S' || 'FK' || 'FZ' ?}
   || {? 'RA'*(_rodz:=exec('get','#params',{? BEER.SZ='S' || 400101 || 400401 ?},2)) || BEER.FMJM:='T'+_rodz+'0' ?}
   ?}
|? _a=null() & FAP.FAKS().WHERE='L'
|| BEER.JMZ:=FAP.FAKS().JMZ;
   JM.win_dict('WERF');
   JM.f_clear();
   JM.index('KOD');
   JM.prefix();
   JM.f_set('KOD,NAZ',,,)
|? _a<>null() & FAP.FAKS().WHERE='G' & FAP.M().J2<>null()
|| _wgewi:=exec('czyJS','jm',FAP.M);
   {? ~_wgewi
   || FAP.J2:=FAP.M().J2;
      FAP.JM:=FAP.M().J
   || FAP.J2:=FAP.M().J;
      FAP.JM:=FAP.M().J2
   ?};
   FAP.T2:='M';
   FAP.WS2:=exec('oblWSP','jm',FAP.M);
   {? _wgewi || FAP.WS2:=1/FAP.WS2 ?}
|? _a<>null() & ~(FAP.T2='G' & FAP.M().J2<>null())
|| _jmg:=FAP.M().J2;
   _dom:=null();
   BEER.JMZ:=FAP.FAKS().JMZ;
   JM.win_dict('WERF');
   JM.f_clear();
   JM.index('KOD');
   JM.prefix();
   JM.f_set('KOD,NAZ',,,);
   {? _jmg<>null()
   || _dom:=_jmg;
      {? JM.f_first()
      || {!
         |? {? JM.ref()=FAP.M().J | JM.ref()=_jmg
            || JM.f_next()
            || JM.f_del()
            ?}
         !}
      ?}
   |? ((1+(1-BEER.FMJM))='A' | FAP.FAKS().WHERE='G') & JM.f_first()
   || {!
      |? {? {? FAP.FAKS().SZ='S'
            || exec('prz','jm',_a,JM.ref(),_b)
            || exec('prz','jm',_a,JM.ref(),_b)
            ?}<>0 | FAP.M().J=JM.ref()
         || {? exec('FindInSet','#table','MJM','JM',JM.ref(),FAP.M,"MJM.DOM",,,0) || _dom:=JM.ref() ?};
            JM.f_next()
         || JM.f_del()
         ?}
      !}
   |? JM.f_first()
   || {!
      |? {? exec('FindInSet','#table','MJM','JM',JM.ref(),FAP.M,"MJM.DOM",,,0) || _dom:=JM.ref() ?};
         _dom=null() & JM.f_next()
      !}
   ?};
   {? _dom<>null() & FAP.J2=FAP.JM || FAP.J2:=null() ?};
   _ile:=JM.f_size();
   {? _jmg<>null()
   || FAP.T2:='M';
      FAP.J2:=_jmg;
      {? FAP.WS2=0 || FAP.WS2:=exec('oblWSP','jm',FAP.M) ?}
   |? FAP.FAKS().WHERE='G' & FAP.FAKS().T().KOR='N' & (1+menu_txt())<>'P'
   || FAP.J2:={? _dom<>null()
              || _dom
              |? _ile=2 & FAP.T2='A' & FAP.WS2=0
              || {? JM.f_first()
                 || {! |? {? ~(JM.ref<>FAP.M().J) || JM.f_next() || 0 ?} !};
                    JM.ref()
                 || FAP.M().J
                 ?}
              || FAP.M().J
              ?};
      {? FAP.T2='A' | FAP.WS2=0
      || FAP.WS2:=exec('prz','jm',FAP.M,FAP.JM,FAP.J2)
      ?}
   |? ~_ile
   || BEER.FMJM:='N'+(1-BEER.FMJM)
   |? _ile=1
   || JM.f_first();
      {? FAP.FAKS().SZ='Z' || FAP.J2:=JM.ref() ?};
      FAP.WS2:={? FAP.FAKS().SZ='S' | BEER.JMZ
               || exec('prz','jm',_a,_b,JM.ref())
               || exec('prz','jm',_a,JM.ref(),_b)
               ?}
   |? FAP.J2=null & exec('FindInSet','#table','MJM','JM',FAP.JM,FAP.M)<>null
   || FAP.J2:={? _dom<>null() || _dom || exec('FindInSet','#table','MJM','JM',FAP.JM,FAP.M,"MJM.JP",,,FAP.JM) ?};
      FAP.WS2:={? FAP.FAKS().SZ='S' | BEER.JMZ
               || exec('prz','jm',FAP.M,FAP.J2,FAP.JM)
               || exec('prz','jm',FAP.M,FAP.M().J,FAP.J2)
               ?}
   |? FAP.J2=null & exec('FindInSet','#table','MJM','JP',FAP.JM,FAP.M)<>null
   || FAP.J2:={? _dom<>null() || _dom || exec('FindInSet','#table','MJM','JP',FAP.M().J,FAP.M,"MJM.JM",,,FAP.JM) ?};
      FAP.WS2:={? FAP.FAKS().SZ='S' | BEER.JMZ
               || exec('prz','jm',FAP.M,FAP.J2,FAP.JM)
               || exec('prz','jm',FAP.M,FAP.M().J,FAP.J2)
               ?}
   |? FAP.J2=null
   || FAP.J2:=FAP.JM;
      FAP.WS2:=1
   ?}
?}


\symf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: zwraca symbol faktury do paragonu
::   WE: _a-$FAKS.ref
::   WY: symbol faktury do paragonu
::  OLD: \symf/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
FAKS.cntx_psh();
FAKS.use(8+_a);
FAKS.prefix();
{? FAKS.seek(_a) || _wyn:=FAKS.SYM ?};
FAKS.cntx_pop();
_wyn


\sumfak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Wylicza i aktualizuje pola związane z wartością dokumentu sprzedaży lub zakupu
::   WE: [_a] - 0-bez komunikatów, 1-z komunikatami
::       [_b] - 0-bez naliczania FAKSV korekty zbiorczej, 1-z naliczaniem FAKSV korekty zbiorczej
::       [_c] - 0 - bez naprawienia FAP.D (domyślnie), 1 - z naprawieniem FAP.D
::   WY: 0-zerowa ilość lub wartość netto lub wartość brutto lub wartość w walucie, 1-wpp
::  OLD: \FD.SUMFAK/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
_licz_faksv_kz:={? var_pres('_b')=type_of(0) || _b || 1 ?};
_fapd_napraw:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_wyn:=1; _wn:=_wv:=_wb:=_wwn:=_wwb:=_wp:=_proj_w:=0;
_gratisy:='N';
_dsp_wpoz:='N';
_dsp1:=date(0,0,0);
FAP.index('FAP');
FAP.prefix(FAKS.ref());
{? FAP.first()
||
   _dsp:=FAP.D;
   TAR_H.cntx_psh(); TAP.cntx_psh(); TAR.cntx_psh();
   {!
   |?
      {? FAP.TAR_H || TAR_H.use(ref_name(FAP.TAR_H)); {? FAP.TAR_H().TAP || TAP.use(ref_name(TAR_H.TAP)) ?} ?};
      {? _gratisy='N' & FAP.TAR_H().TAP().TAR().SD='G' || _gratisy:='T' ?};
      {? FAP.IL=0 | FAP.WN=0 | FAP.WB=0 | (FAKS.WAL<>INFO.NAROD & FAP.CWAL=0) || _wyn:=0 ?};
      {? _wyn=0 & _a=1
      || {? FAP.IL=0 || FUN.info('Zerowa ilość w poz. %1'@[$POZ]) ?};
         {? FAP.WN=0 || FUN.info('Zerowa wartość netto w poz. %1'@[$POZ]) ?};
         {? FAP.WB=0 || FUN.info('Zerowa wartość brutto w poz. %1'@[$POZ]) ?};
         {? (FAKS.WAL<>INFO.NAROD & CWAL=0) || FUN.info('Zerowa wartość w walucie w poz. %1'@[$POZ]) ?}
      ?};
      _wn+=FAP.WWAL_P;_wv+=FAP.VWAL_P;_wb+=FAP.BWAL_P;_wwn+=FAP.WWAL;_wwb+=FAP.BWAL; _proj_w+=FAP.PROJ_W;
      {? FAP.D<>_dsp || _dsp_wpoz:='T' ?};
      {? _dsp1=date(0,0,0) & FAP.D<>date(0,0,0)
      || _dsp1:=FAP.D
      ?};
      FAP.next()
   !};
   TAR_H.cntx_pop(); TAP.cntx_pop(); TAR.cntx_pop()
?};
FAKS.NETTO:=_wn; FAKS.VAT:=_wv; FAKS.BRUTTO:=_wb; FAKS.NETW:=_wwn; FAKS.BRTW:=_wwb; FAKS.PROJ_W:=_proj_w;
FAKS.GRATISY:=_gratisy;
FAKS.DSP_WPOZ:=_dsp_wpoz;
FAKS.put();
exec('actTAXS','faktury_wspolne',FAKS.ref());
_faks:=$FAKS.ref();
exec('faksv_rm','faktury_vat',_faks); exec('faksv_mk','faktury_vat',_faks);
exec('sumfakkzf','faktury_wspolne',FAKS.KZ,_licz_faksv_kz);
{? _fapd_napraw & _dsp_wpoz<>'T' & _dsp1<>date(0,0,0)
|| exec('fap_d_zeruj','faktury_wspolne')
?};
_wyn


\korh_lic
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: obliczanie zmiennych dla korekty historycznej
::   WE: _a - 1-przeliczac FKOR.ILUJM, FKOR.MASAN, 0-wpp
::  OLD: \korh_lic/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || _a:=1 ?};
{? FAP.M<>null
|| {? FAKS.T().HIS='N' | exec('get','#params',300215,2)='T'
   || _dokl_m:=exec('jaka_dok_m','jm',FAP.M);
      FKOR.IL:=FKOR.IL$_dokl_m
   ?}
?};

_dwal:=FAKS.WAL<>FAKS.NWAL;

_doklFix:=FAKS.T().HIS='N' | exec('get','#params',300215,2)='T';
_dokl_c:=
   {? _doklFix
   || {? FAP.FAKS().SZ='Z' || FAP.M().DOKL_C || 2 ?}
   || _dokl_c:=+(2-$fabs(frac({? _dwal || FKOR.CWAL || FKOR.CPR ?})));
      {? _dokl_c<2 || 2 || _dokl_c ?}
   ?};

_rabat:=_rabat2:=1;
_kwrab:=_kwrabj:=0;
TAZ.RAB_TYP:=FAP.FAKS().RAB_TYP;
{? exec('czyrabp','ceny',TAZ.RAB_TYP)
||
   _rabat2:=exec('rab_proc','ceny',FKOR.RAB,FZ.RAB,TAZ.RAB_TYP);
   _rabat:=1-_rabat2/100
||
   _cena:={? _dwal || FKOR.CWAL || FKOR.CPR ?};
   _kwil:=FKOR.IL;
   _nagwsp:=-FZ.RAB/100;
   _kwpoz:=-FKOR.RAB;
   _kwrab:=
      {? TAZ.RAB_TYP='W'
      || _kwpoz+(_nagwsp*((_cena*_kwil)$2))$2
      || ((_kwpoz+(_nagwsp*_cena)$_dokl_c)*_kwil)$2
      ?};
   _kwrabj:=
      {? TAZ.RAB_TYP='W'
      || {? _kwil || (_kwpoz/_kwil)$_dokl_c ?}+(_nagwsp*_cena)$_dokl_c
      || _kwpoz+(_nagwsp*_cena)$_dokl_c
      ?}
?};
_walj:=1;

:: przeliczenia faktury
{? FKOR.SV<>null
||
:: z stawka vat
   {? FAKS.WAL<>FAKS.NWAL
   ||
      _walj:=exec('FindInSet','#table','WAL','WAL_SYM',FAP.WAL().KOD,,"WAL.J",,,1);
      FKOR.WAL:=FAKS.WAL;
      FKOR.KRS:=FAP.FAKS().KRS;
      FKOR.CPR:=FKOR.CWAL*FKOR.KRS/_walj $_dokl_c
   |? FAKS.WAL=INFO.NAROD & FAP.WAL<>INFO.NAROD & FKOR.CPR<>0 & FKOR.KRS<>0
   ||
      _walj:=exec('FindInSet','#table','WAL','WAL_SYM',FAP.WAL().KOD,,"WAL.J",,,1);
      FKOR.CWAL:=FKOR.CPR/FKOR.KRS*_walj $_dokl_c
   ?};

   _vat:=#((FKOR.SV().KOD*'%')+FKOR.SV().KOD-1)/100;

   {? FAP.FAKS().T().FIS='T'
   ||
:: paragon
      {? _dwal=1 & FAP.FAKS().T().SPP='T'
      ||
::       wg wartosci walutowej
::       handlowa
         _cen_w:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (FKOR.CWAL*_rabat)$2
            || FKOR.CWAL+_kwrabj
            ?};
         FKOR.BWAL:=
            {? FAP.FAKS().SPOBLRAB='W'
            || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || exec('obl_rabat','ceny',FKOR.CWAL*FKOR.IL,_rabat2)$2
               || (FKOR.CWAL*FKOR.IL)$2+_kwrab
               ?}
            || (_cen_w*FKOR.IL)$2
            ?};
         FKOR.WWAL:=(FKOR.BWAL/(1+_vat))$2;
         FKOR.VWAL:=(FKOR.BWAL-FAP.WWAL)$2;

::       opodatkowania
         FKOR.BWAL_P:=(FKOR.BWAL*FAP.FAKS().KRS)$2;
         FKOR.WWAL_P:=(FKOR.BWAL_P/(1+_vat))$2;
         FKOR.VWAL_P:=(FKOR.BWAL_P-FKOR.WWAL_P)$2;

::       narodowa
         FKOR.CB:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (FKOR.CPR*_rabat)$_dokl_c
            || _kw_rabj:=(_kwrabj*FAP.FAKS().KRS/_walj)$_dokl_c;
               FKOR.CPR+_kw_rabj
            ?};
         FKOR.WB:=(FKOR.BWAL*FAP.FAKS().NKRS)$2;
         FKOR.CN:=(FKOR.CB/(1+_vat))$_dokl_c;
         FKOR.WN:=(FKOR.WB/(1+_vat))$2;
         FKOR.WV:=(FKOR.WB-FKOR.WN)$2
      ||
::       wg ceny walutowej
::       opodatkowania
         {? FAKS.WAL<>FAKS.NWAL
         || _kw_rab:=(_kwrab*FAP.FAKS().KRS/_walj)$2;
            _kw_rabj:=(_kwrabj*FAP.FAKS().KRS/_walj)$_dokl_c
         || _kw_rab:=_kwrab;
            _kw_rabj:=_kwrabj
         ?};
         FKOR.CB:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (FKOR.CPR*_rabat)$_dokl_c
            || FKOR.CPR+_kw_rabj
            ?};
         FKOR.BWAL_P:=
            {? FAP.FAKS().SPOBLRAB='W'
            || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || exec('obl_rabat','ceny',FKOR.CPR*FKOR.IL,_rabat2)$2
               || (FKOR.CPR*FKOR.IL)$2+_kw_rab
               ?}
            || (FKOR.CB*FKOR.IL)$2
            ?};
         FKOR.CN:=(FKOR.CB/(1+_vat))$_dokl_c;
         FKOR.WWAL_P:=(FKOR.BWAL_P/(1+_vat))$2;
         FKOR.VWAL_P:=(FKOR.BWAL_P-FKOR.WWAL_P)$2;

         {? _dwal=1
         ||
::          handlowa
            _cen_w:=
               {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || (FKOR.CWAL*_rabat)$2
               || FKOR.CWAL+_kwrabj
               ?};
            FKOR.BWAL:=
               {? FAP.FAKS().SPOBLRAB='W'
               || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
                  || exec('obl_rabat','ceny',FKOR.CWAL*FKOR.IL,_rabat2)$2
                  || (FKOR.CWAL*FKOR.IL)$2+_kwrab
                  ?}
               || (_cen_w*FKOR.IL)$2
               ?};
            FKOR.WWAL:=(FKOR.BWAL/(1+_vat))$2;
            FKOR.VWAL:=(FKOR.BWAL-FKOR.WWAL)$2;

::          narodowa
            _cen_w2:=(FKOR.CWAL*FAP.FAKS().NKRS/_walj)$_dokl_c;
            _kw_rab:=(_kwrab*FAP.FAKS().NKRS/_walj)$_dokl_c;
            _kw_rabj:=(_kwrabj*FAP.FAKS().NKRS/_walj)$_dokl_c;
            _cen_w:=
               {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || (_cen_w2*_rabat)$_dokl_c
               || _cen_w2+_kw_rabj
               ?};
            FKOR.WB:=
               {? FAP.FAKS().SPOBLRAB='W'
               || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
                  || exec('obl_rabat','ceny',_cen_w2*FKOR.IL,_rabat2)$2
                  || (_cen_w2*FKOR.IL)$2+_kw_rab
                  ?}
               || (_cen_w*FKOR.IL)$2
               ?};
            FKOR.WN:=(FKOR.WB/(1+_vat))$2;
            FKOR.WV:=(FKOR.WB-FKOR.WN)$2
         ||
::          handlowa
            FKOR.WWAL:=FKOR.WWAL_P;
            FKOR.VWAL:=FKOR.VWAL_P;
            FKOR.BWAL:=FKOR.BWAL_P;

::          narodowa
            FKOR.WN:=FKOR.WWAL_P;
            FKOR.WV:=FKOR.VWAL_P;
            FKOR.WB:=FKOR.BWAL_P
         ?}
      ?}
   ||
::    inne niz paragon
      {? _dwal=1 & FAP.FAKS().T().SPP='T'
      ||
::       wg wartosci walutowej
::       handlowa
         _cen_w:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (FKOR.CWAL*_rabat)$2
            || FKOR.CWAL+_kwrabj
            ?};
         FKOR.WWAL:=
            {? FAP.FAKS().SPOBLRAB='W'
            || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || exec('obl_rabat','ceny',FKOR.CWAL*FKOR.IL,_rabat2)$2
               || (FKOR.CWAL*FKOR.IL)$2+_kwrab
               ?}
            || (_cen_w*FKOR.IL)$2
            ?};
         FKOR.VWAL:=(FKOR.WWAL*_vat)$2;
         FKOR.BWAL:=(FKOR.WWAL+FKOR.VWAL)$2;

::       narodowa
         FKOR.WN:=(FKOR.WWAL*FAP.FAKS().NKRS)$2;
         FKOR.WV:=(FKOR.WN*_vat)$2;
         FKOR.WB:=(FKOR.WN+FKOR.WV)$2;

::       opodatkowania
         FKOR.CN:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (FKOR.CPR*_rabat)$_dokl_c
            || _kw_rabj:=(_kwrabj*FAP.FAKS().KRS/_walj)$_dokl_c;
               FKOR.CPR+_kw_rabj
            ?};
         FKOR.CB:=(FKOR.CN+FKOR.CN*_vat)$_dokl_c;
         FKOR.WWAL_P:=(FKOR.WWAL*FAP.KRS)$2;
         FKOR.VWAL_P:=(FKOR.WWAL_P*_vat)$2;
         FKOR.BWAL_P:=(FKOR.WWAL_P+FKOR.VWAL_P)$2
      ||
::       wg ceny walutowej
::       opodatkowania
         {? FAKS.WAL<>FAKS.NWAL
         || _kw_rab:=(_kwrab*FAP.FAKS().KRS/_walj)$2;
            _kw_rabj:=(_kwrabj*FAP.FAKS().KRS/_walj)$_dokl_c
         || _kw_rab:=_kwrab;
            _kw_rabj:=_kwrabj
         ?};
         FKOR.CN:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (FKOR.CPR*_rabat)$_dokl_c
            || FKOR.CPR+_kw_rabj
            ?};
         FKOR.CB:=(FKOR.CN+FKOR.CN*_vat)$_dokl_c;
         FKOR.WWAL_P:=
            {? FAP.FAKS().SPOBLRAB='W'
            || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || exec('obl_rabat','ceny',FKOR.CPR*FKOR.IL,_rabat2)$2
               || (FKOR.CPR*FKOR.IL)$2+_kw_rab
               ?}
            || (FKOR.CN*FKOR.IL)$2
            ?};
         FKOR.VWAL_P:=(FKOR.WWAL_P*_vat)$2;
         FKOR.BWAL_P:=(FKOR.WWAL_P+FKOR.VWAL_P)$2;
         {? _dwal=1
         ||
::          handlowa
            _cen_w:=
               {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || (FKOR.CWAL*_rabat)$2
               || FKOR.CWAL+_kwrabj
               ?};
            FKOR.WWAL:=
               {? FAP.FAKS().SPOBLRAB='W'
               || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
                  || exec('obl_rabat','ceny',FKOR.CWAL*FKOR.IL,_rabat2)$2
                  || (FKOR.CWAL*FKOR.IL)$2+_kwrab
                  ?}
               || (_cen_w*FKOR.IL)$2
               ?};
            FKOR.VWAL:=(FKOR.WWAL*_vat)$2;
            FKOR.BWAL:=(FKOR.WWAL+FKOR.VWAL)$2;

::          narodowa
            _cen_w2:=(FKOR.CWAL*FAP.FAKS().NKRS/_walj)$_dokl_c;
            _kw_rab:=(_kwrab*FAP.FAKS().NKRS/_walj)$2;
            _kw_rabj:=(_kwrabj*FAP.FAKS().NKRS/_walj)$_dokl_c;
            _cen_w:=
               {? exec('czyrabp','ceny',TAZ.RAB_TYP)
               || (_cen_w2*_rabat)$_dokl_c
               || _cen_w2+_kw_rabj
               ?};
            FKOR.WN:=
               {? FAP.FAKS().SPOBLRAB='W'
               || {? exec('czyrabp','ceny',TAZ.RAB_TYP)
                  || exec('obl_rabat','ceny',_cen_w2*FKOR.IL,_rabat2)$2
                  || (_cen_w2*FKOR.IL)$2+_kw_rab
                  ?}
               || (_cen_w*FKOR.IL)$2
               ?};
            FKOR.WV:=(FKOR.WN*_vat)$2;
            FKOR.WB:=(FKOR.WN+FKOR.WV)$2
         ||
::          handlowa
            FKOR.WWAL:=FKOR.WWAL_P;
            FKOR.VWAL:=FKOR.VWAL_P;
            FKOR.BWAL:=FKOR.BWAL_P;

::          narodowa
            FKOR.WN:=FKOR.WWAL_P;
            FKOR.WV:=FKOR.VWAL_P;
            FKOR.WB:=FKOR.BWAL_P
         ?}
      ?}
   ?}
||
:: bez stawki vat
   FKOR.CN:=(FKOR.CPR*_rabat)$_dokl_c;
   FKOR.WN:=(FKOR.CN*FKOR.IL)$2
?};

:: intrastat
exec('ist_wart_fkor','faktury_wspolne',_a);
1


\ist_wart_fkor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: nalicza wartosci dla intrastat dla FKOR, dotyczy korekty historycznej
::   WE: _a - 1-przeliczac FKOR.ILUJM, FKOR.MASAN, 0-wpp
::  OLD: \ist_wart_fkor/ist01.fml
::  OLD: \ist_wart_fkor/faktury_poz.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || _a:=1 ?};
{? FAP.FAKS().IST_TYP='' | FAKS.IST_OKR='' | FAP.M=null
||
   FKOR.PMASAN:=FKOR.PILUJM:=FKOR.PWF:=FKOR.PWS:=0; FKOR.KP:=''
||
   exec('pops','intrastat');
   _dokl:=6;
   _doklw:=2;
   {? _a
   ||
      FKOR.PILUJM:={? exec('fkor_ilujm_pr','faktury_poz') || (FKOR.IL * M.JU_P)$_dokl || 0 ?};
      FKOR.PMASAN:={? exec('fkor_masan_pr','faktury_poz') || (FKOR.IL * M.WN)$_dokl || 0 ?}
   ?};
   FKOR.PWF:={? exec('fkor_wf_pr','faktury_poz') || FKOR.WN$_doklw || 0 ?};
   FKOR.PWS:={? exec('fkor_ws_pr','faktury_poz') || FKOR.WN$_doklw || 0 ?}
?}


\czyfapdk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdzenie czy pozycja jest powiaząna z dokumentami magazynowymi
::   WE: _a - ref SQL-owy FAP-a
::       [_b] - ref FAP-a domyślnie null
::       [_c] - czy komunikat domyslnie 1=tak, 0=nie, -1=komunikat dla faktury
::       [_d] - ref SQL-owy FAKS-a
::       [_e] - bez kontroli dla usług domyślnie z kontrolą
::   WY: 0-powiązana i nie usuwać pozycji 1-niepowiązana 2-powiązana i usuwać pozycje 3-powiązana i usuwać dokument
::  OLD: \czyfapdk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>7 || _b:=null ?} || _b:=null ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};
{? _>=4 || {? type_of(_d)<>2 || _d:='' ?} || _d:='' ?};
_usl:={? var_pres('_e')=type_of(0) || _e || 0 ?};

_wyn:=1;
_nd:='';
FAKS.cntx_psh;
FAP.cntx_psh;
{? _d<>''
|| _kilka:=0;
   FAP2DK.index('NFAKS');
   FAP2DK.prefix(_d);
   {? FAP2DK.first
   || _nd:=FAP2DK.ND;
      {!
      |? {? _nd<>FAP2DK.ND
         || _kilka:=1;
            0
         || FAP2DK.next()
         ?}
      !}
   ?};
   {? (_kilka | ~_kilka) & _nd<>''
   || {? _c<0
      || _wyn:=FUN.ask('Faktura zawiera pozycje powiązane z pozycjami dokumentów magazynowych.\n'
                       'Czy usunąć powiązania i usunąć fakturę?'@);
         {? _wyn || _wyn+=1 ?}
      || _wyn:=0
      ?}
:: DRO: [rr] wyłączyłem
   |? 0 & ~_kilka & _nd<>''
   || {? _c<0
      || _wyn:=FUN.choice('Faktura zawiera pozycje powiązane z pozycjami dokumentu magazynowego.'@+'\n'+
                         'Wybierz jedną z opcji:'@,,'Usunięcie powiązania i faktury'@,'usunięcie Faktury i dokumentu'@);
         {? _wyn || _wyn+=1 ?}
      || _wyn:=0
      ?}
   ?}
|| FAP2DK.index('NFAP');
   FAP2DK.prefix(_a);
   {? FAP2DK.first() & {? ~_usl || 1 || _isND:=0;{! |? _isND:=FAP2DK.ND<>''; ~_isND & FAP2DK.next() !}; _isND ?}
   || {? _c<>0
      || _wyn:={? _c>0
               || FUN.ask('Pozycja powiązana z pozycjami dokumentów magazynowych.'@+'\n'+
                          'Czy usunąć powiązanie i usunąć pozycję?'@)
               || FUN.ask('Faktura zawiera pozycje powiązane z pozycjami dokumentów magazynowych.'@+'\n'+
                          'Czy usunąć powiązania i usunąć fakturę?'@)
               ?};
         {? _wyn || _wyn+=1 ?}
      || _wyn:=0
      ?}
   ?};
   {? _wyn=1 & _b<>null
   || FAP_K.index('FAP_K');
      FAP_K.prefix(_b);
      {? FAP_K.first
      || _wyn:={? _c>0
               || FUN.ask('Pozycja powiązana z rozliczeniem kosztów dodatkowych.'@+'\n'+
                          'Czy usunąć powiązanie i usunąć pozycję?'@)
               || FUN.ask('Faktura zawiera pozycje powiązane z rozliczeniem kosztów dodatkowych.'@+'\n'+
                          'Czy usunąć powiązanie i usunąć fakturę?'@)
               ?};
         {? _wyn || _wyn+=1 ?}
      ?}
   ?}
?};
FAKS.cntx_pop;
FAP.cntx_pop;
_wyn


\fak_druk_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.41]
:: OPIS: Drukowanie grupowe faktur
::   WE: _a - utworz pdf 0-nie 1-tak
::       _b - UID czynności
::       _c - nazwa akcji
::       [_d] - maska wydruku
::       [_e] - nie powoływać i nie usuwać komm-ów jeśli istnieją
::       [_f] - dokumenty do wydrukowania
::  OLD: \fak_druk_gr/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
_czy_pdf:=_a;
_act_uid:=_b;
_akcja:=_c;
_msk:={? var_pres('_d')=type_of('') || _d || '' ?};
_nom:={? var_pres('_e')=type_of(0) || _e & var_pres('__kom')>100 || 0 ?};
_Sel:={? var_pres('_f')=type_of(FIRMA) || _f || FAKS.sel_aget() ?};

_czy_edokument:=_akcja='Area E-dokument' | _akcja='Akceptacja E-dokument';
_akceptacja:=_akcja*'Akceptacja';

_czysc:="exec('grp_dr_done','param_wydr')";
_czysc();
{? ~_nom || exec('ini_kom','#message','Wydruk grupowy dokumentów'@) ?};

:: __GRP_DR - srodowisko grupowego drukowania
   __GRP_DR:=exec('grp_dr_init','param_wydr');
:: __GRP_DR.SEL - dokumenty do wydruku (wynik funkcji sel_aget)
   __GRP_DR.SEL:=_Sel;
:: __GRP_DR.GR - [0/1] - wydruk grupowy
{? _Sel.first()
|| __GRP_DR.GR:=1
|| __GRP_DR.GR:=0;
   _Sel.REF:=#FAKS.ref(); _Sel.CRC:=FAKS.crc(); _Sel.add()
?};
:: __GRP_DR.SIZE - ilość dokumentów do wydruku
   __GRP_DR.SIZE:=_Sel.size();
:: __GRP_DR.WZ - wybrany wzorzec wydruku
   __GRP_DR.WZ:=_msk;
:: __GRP_DR.PDF - utworz pdf 0-nie 1-tak
   __GRP_DR.PDF:=_czy_pdf;
:: _ok - stan dzialania funkcji 0-nie ok 1-ok
_ok:=1;

FAKS.cntx_psh();
FAP.cntx_psh();

:: Weryfikacja
{? __GRP_DR.PDF
|| NRDOK.index('NRDOK');
   NRDOK.prefix('SYS','');
   {? ~NRDOK.first()
   || _ok:=0;
      {? ~_nom
      || exec('add_kom','#message','Nie zdefiniowano numeracji SYS dla dokumentów powiązanych.'@,7,'Ogólne'@)
      ?}
   ?}
?};
{? _ok & FAKS.name()+2='hs'
|| {? ~_nom || exec('add_kom','#message','Faktura do korekty historycznej. Wydruk niedostępny.'@,7,'Ogólne'@) ?}
?};

_repmask:='';
{? _ok
|| _loop:=_Sel.first();
   {!
   |? _loop
   |!
      _del:=0;
      {? __GRP_DR.GR
      || {? FAKS.seek(_Sel.REF,)
         ||
            {? FAKS.STAT_REJ='A' & __GRP_DR.DR_N_CAN=-1
            || __GRP_DR.DR_N_CAN:=FUN.ask('Czy drukować anulowane dokumenty?'@)
            ?};
            {? (';NZ'*FAKS.STAT_REJ)>1 & __GRP_DR.DR_N_AKC=-1
            || __GRP_DR.DR_N_AKC:=FUN.ask('Czy drukować niezaakceptowane dokumenty?'@)
            ?};
            _del:=(';NZ'*FAKS.STAT_REJ)>1 & __GRP_DR.DR_N_AKC=0;
            _can:=FAKS.STAT_REJ='A' & __GRP_DR.DR_N_CAN=0;
            _edok:=0;
            {? ~_czy_edokument & FAKS.SZ='S'
               &  exec('rodzaje_edokumentu','zbl_dok',
                     exec('kh_dokum','zbl_dok',FAKS.ref()),FAKS.T,FAKS.DW,FAKS.WHERE,FAKS.MANSKSEF)<>''
            ||
               _edok:=1;
               {? __GRP_DR.DR_N_EDOK=-1
               || _p300219:=exec('get', '#params',300219);
                  __GRP_DR.DR_N_EDOK:=
                     {? _p300219='P'
                     || FUN.ask('W przypadku e-dokumentu należy użyć opcji E-dokument.'
                        '\nCzy drukować E-dokumenty?'@)
                     || 0
                     ?}
               ?}
            ?};
            _edok:=_edok & __GRP_DR.DR_N_EDOK=0;
            _gwz:=0;
            {? FAKS.SZ='S' & FAKS.WHERE='G' & ~exec('dok_maga','powdok',2)
            ||
               _gwz:=1;
               {? __GRP_DR.DR_N_GWZ=-1
               || _p300218:=exec('get', '#params',300218);
                  __GRP_DR.DR_N_GWZ:=
                     {? _p300218='T' || 1
                     |? _p300218='N' || 0
                     || FUN.ask('Nie zarejestrowano wydania z magazynu dla dokumentu.'
                           '\nCzy drukować dokumenty?'@)
                     ?}
               ?}
            ?};
            _gwz:=_gwz & __GRP_DR.DR_N_GWZ=0;
            {? _del & ~_nom
            || exec('add_kom','#message','Dokument %1 jest niezaakceptowany.'@[FAKS.SYM],14,
                    'Nie wydrukowano dokumentu'@)
            |? _can & ~_nom
            || exec('add_kom','#message','Dokument %1 został anulowany.'@[FAKS.SYM],14,
                    'Nie wydrukowano dokumentu'@)
            |? __GRP_DR.SIZE>1 & FAKS.T().PAR='T' & ~_nom
            || exec('add_kom','#message','Dokument %1 jest paragonem. Zbiorcze drukowanie jest niedostępne.'@[FAKS.SYM],14,
                    'Nie wydrukowano dokumentu'@);
               _del:=1
            |? _edok & ~_nom
            || exec('add_kom','#message','W przypadku dokumentu %1 należy użyć opcji E-dokument.'@[FAKS.SYM],14,
                  'Nie wydrukowano dokumentu'@);
               _del:=1
            |? _gwz & (~_nom | _akceptacja)
            || exec('add_kom','#message'
                  ,'Drukowanie dokumentu %1 jest niedostępne ponieważ nie zarejestrowano wydania z magazynu.'@[FAKS.SYM]
                  ,14,'Nie wydrukowano dokumentu'@);
               _del:=1
            |? FAKS.T().KOR<>'Z' & exec('FindInSet','#table','FAP','FAP',FAKS.ref())=null() & ~_nom
            || exec('add_kom','#message','Dokument %1 nie ma pozycji.'@[FAKS.SYM],14,'Nie wydrukowano dokumentu'@);
               _del:=1
            || _repmas1:={? FAKS.T().WZ<>'' || FAKS.T().WZ
                         |? _msk<>'' || _msk
                         || exec('rep_mask','faktury_wydruk',__GRP_DR.PDF)
                         ?};
               {? _repmask<>'' & _repmask<>_repmas1
               || _ok:=0
               || _repmask:=_repmas1
               ?}
            ?}
         ?}
      ?};
      _loop:=_ok & {? _del || _Sel.del(,1)=2 || _Sel.next() ?}
   !};
   __GRP_DR.SIZE:=_Sel.size()
?};

{? _ok & _Sel.size()=0
|| {? ~_nom || exec('add_kom','#message','Brak dokumentów do wydrukowania.'@,7,'Ogólne'@) ?};
   _ok:=0
|? __GRP_DR.SIZE=1
|| _ok:=1
?};

{? _ok=0
|| {? ~_nom || exec('add_kom','#message','Zaznacz dokumenty z jednakowym wzorcem wydruku.'@,7,'Ogólne'@) ?}
|| {? __GRP_DR.GR
   || __GRP_DR.SHOW_PDF:={? __GRP_DR.PDF || FUN.ask('Czy wyświetlić wygenerowane dokumenty?'@,,,'fak_druk_gr',__kom) ?};
      __GRP_DR.FIRST:=FUN.grp_auto()=0
   ?};
   {? __GRP_DR.DR_N_AKC=-1 || __GRP_DR.DR_N_AKC:=0 ?}
?};

:: Drukowanie
{? _ok
||
   _loop:=_Sel.first();
   {? _loop
   ||
      _size:=_Sel.size();
      _licz:=0;
      _prgs:=100*_licz/_size;
      {? _czy_edokument
      || progress(_prgs,'\nTrwa przygotowanie e-dokumentu (%1\%)\n'@[$int(_prgs)],'e-dokument'@)
      |? _czy_pdf
      || progress(_prgs,'\nTrwa przygotowanie PDF (%1\%)\n'@[$int(_prgs)],'Utwórz PDF'@)
      || progress(_prgs,'\nTrwa drukowanie (%1\%)\n'@[$int(_prgs)],'Drukuj'@)
      ?}
   ?};
   {!
   |? _loop
   |!
      _licz+=1;
      _prgs:=100*_licz/_size;
      {? FAKS.seek(_Sel.REF,)
      ||
         {? _czy_edokument
         || progress(_prgs,'\nTrwa przygotowanie e-dokumentu z dokumentu %1 (%2\%)\n'@[
               exec('record','#to_string',FAKS.ref()),$int(_prgs)],'e-dokument'@)
         |? _czy_pdf
         || progress(_prgs,'\nTrwa przygotowanie PDF z dokumentu %1 (%2\%)\n'@[
               exec('record','#to_string',FAKS.ref()),$int(_prgs)],'Utwórz PDF'@)
         || progress(_prgs,'\nTrwa drukowanie dokumentu %1 (%2\%)\n'@[
               exec('record','#to_string',FAKS.ref()),$int(_prgs)],'Drukuj'@)
         ?};
         _params:=exec('mp_run_a','#b__box');
         _params.ACT_UID:=_act_uid;
         _params.UIDREF:=FAKS.uidref();
         _params.AKCJA:=_akcja;
         _params.GRUPA:={? __GRP_DR.GR || 'T' || 'N' ?};
         _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
         _port:={? FAKS.SZ='S' || 'FAKS' || 'ZAK' ?};
         exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,_port,FAKS.ref());
         exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'CZY_PDF',
            {? _czy_edokument || 'EDOKUMENT' |? _czy_pdf || 'TAK' || 'NIE' ?});

         exec('mp_run','#b__box',_params);

         obj_del(_params);

         __GRP_DR.FIRST:=0
      ?};
      _loop:=__GRP_DR.ESC=0 & {? _czy_pdf || _Sel.next() || 0 ?}
   !}
?};
prgs_clr();

{? __GRP_DR.ESC=0 || FAKS.sel_adel() ?};
{? __GRP_DR.ESC=0 & ~_nom || exec('end_kom','#message') ?};
FAKS.cntx_pop();
FAP.cntx_pop();

_czysc();
0


\fak_druk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: drukuje fakturę
::   WE: [_a] - czy zapisywać dokument 0 - nie 1 - tak
::       [_b] - maska wydruku
::       [_c] - 0/1 - czynność uruchomiona automatycznie
::       [_d] - 0/1 - akcja E-dokument
::       [_e] - rodzaje e-dokumetnu
::   WY: _wyn.WYN - 0 / 1
::       _wyn.REF - DOKUM.ref() / null()
::  OLD: \fak_druk/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new('REF','WYN');
:: null lub ref zalozonego rekordu w tabeli DOKUM
_wyn.REF:=null;
_wyn.WYN:=1;

{? _>=1  || {? type_of(_a)<>1 || _a:=0 ?}  || _a:=0  ?};
_msk:={? var_pres('_b')=type_of('') || _b || '' ?};
_auto:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_czy_edokument:={? var_pres('_d')=type_of(0) || _d || 0 ?};
_rodzaje_edokumentu:={? var_pres('_e')=type_of('') || _e || '' ?};

:: grupowy wydruk
_grp_dr:=exec('czy_grp_dr','faktury_wydruk');

__TOPDF:=_a;

_ok:=1;
{? _a=1
|| NRDOK.index('NRDOK');
   NRDOK.prefix('SYS','');
   {? ~NRDOK.first()
   || _ok:=0;
      FUN.info('Nie zdefiniowano numeracji %1 dla dokumentów powiązanych.'@['SYS'])
   ?}
?};

{? FAKS.name()+2='hs'
||
   FUN.info('Faktura do korekty historycznej. Wydruk niedostępny.'@)
|? _ok
||
   _drukuj:=1;
   _faks_to_string:=exec('record','#to_string',FAKS.ref());
   _txt:={? FAKS.SZ='S' || 'Dokument sprzedaży' |? FAKS.WHERE='E' || 'Dokument wewnętrzny' || 'Dokument zakupu' ?};
   {? FAKS.T().DRPAR='T' & (_a=0 | _auto) & FAKS.PAR=''
      & (_grp_dr=0 | _grp_dr=1 & __GRP_DR.SIZE=1)
      & FAKS.KRAJ_VAT=null()
   ||
      _r_lock:=exec('r_lock_one','#table',FAKS,FAKS.ref());
      {? _r_lock
      ||
         {? KHVZ.WIDOKI=1
         || _drukuj:=1
         |? KHVZ.WIDOKI=0 & exec('gen_parg','faktury_fis')>=0
         || _drukuj:=FAKS.T().PAR='N'
         ?};
         exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock)
      ||
         exec('who_rlock_faks','faktury_nag');
         _drukuj:=0
      ?}
   ?};
   {? _drukuj & FAKS.SZ='S' & ~_czy_edokument & _rodzaje_edokumentu<>''
   || _p300219:=exec('get', '#params',300219);
      _drukuj:=
         {? _grp_dr
         || __GRP_DR.DR_N_EDOK
         || {? _p300219='P'
            || FUN.ask('W celu utworzenia e-dokumentu należy wskazać opcję E-dokument.'
                  '\nCzy kontynuować drukowanie bez tworzenia e-dokumentu?'@)
            || exec('add_kom','#message'
                  ,'Drukowanie dokumentu jest niedostępne ponieważ należy użyć opcji E-dokument.'@
                  ,7,_faks_to_string);
               0
            ?}
         ?};
      {? ~_drukuj & _p300219='P'
      || exec('add_kom','#message','Pominięto drukowanie dokumentu.'@,7,_faks_to_string)
      ?}
   ?};
   {? _drukuj & FAKS.SZ='S' & FAKS.WHERE='G' & ~exec('dok_maga','powdok',2)
   || _p300218:=exec('get', '#params',300218);
      _drukuj:=
         {? _grp_dr
         || __GRP_DR.DR_N_GWZ
         || {? _p300218='T'
            || 1
            |? _p300218='N'
            || exec('add_kom','#message'
                  ,'Drukowanie dokumentu jest niedostępne ponieważ nie zarejestrowano wydania z magazynu.'@
                  ,7,_faks_to_string);
               0
            || FUN.ask('Brak wydania z magazynu do faktury.\nCzy drukować dokument?'@)
            ?}
         ?};
      {? ~_drukuj & _p300218='P'
      || exec('add_kom','#message','Pominięto drukowanie dokumentu.'@,7,_faks_to_string)
      ?}
   ?};
   {? _drukuj=1 & FAKS.STAT_REJ<>'T' & FAKS.T().PAR='T' & FAKS.STAT_REJ<>'A'
   || FUN.info('Wydruk paragonu możliwy po akceptacji dokumentu.'@); _drukuj:=0
   |? _drukuj=1 & (';NZ'*FAKS.STAT_REJ)>1
   || _drukuj:={? _grp_dr || __GRP_DR.DR_N_AKC || FUN.ask('Czy drukować niezaakceptowany dokument?'@) ?}
   |? _drukuj=1 & FAKS.STAT_REJ='A'
   || _drukuj:={? _grp_dr || __GRP_DR.DR_N_CAN || FUN.ask('Czy drukować anulowany dokument?'@) ?}
   ?};
   {? _drukuj=1
   ||
      POLA.NAZ_WYDR:='';
      _repexec:=0;
      _dokum:={? exec('bl_dokum_seek','zbl',FAKS) || DOKUM.ref() || null() ?};
:: odblokować jak wróci temt QR code w PDF faktury
      _generuj_edokument:=0& _rodzaje_edokumentu*'ksef' & FAKS.NRKSEF='';
      _generuj_edokument_pdf:=_generuj_edokument=0 & exec('dokumz','edi_fo_ufd',_dokum,'pdf')=null;
      {? _generuj_edokument || POLA.NAZ_WYDR:='generuj_edokument' ?};
      {? _a
      ||
:: zapis
         {? exec('czy_autoadd','dokum',FAKS.ref(),
               _czy_edokument & exec('czy_edokument_bl','zbl_dok',_rodzaje_edokumentu))
         ||
:: dokument automatycznie dodany
            {? _czy_edokument & _rodzaje_edokumentu<>''
            ||
:: e-dokument automatycznie dodany
               {? _generuj_edokument_pdf
               ||
                  ~~

               |? _grp_dr
               ||
                  _repexec:=-1;
                  exec('add_kom','#message','Utworzono już e-dokument.'@,7,_faks_to_string)

               |? _czy_edokument
               ||
                  _repexec:=-1;
                  {? FUN.ask('Utworzono już e-dokument dla dokumentu %1.\nCzy go wyświetlić?'@[_faks_to_string])
                  ||
                     DOKUM.cntx_psh();
                     {? exec('bl_dokum_seek','zbl',FAKS,1) | exec('dokum_seek','zbl',FAKS,1)
                     || exec('pok_dok','dokum')
                     ?};
                     DOKUM.cntx_pop()
                  ?}
               ?}
            ||
:: pdf automatycznie dodany
               {? _grp_dr
               ||
                  _repexec:=-1;
                  exec('add_kom','#message','Utworzono już PDF dla dokumentu.'@,7,_faks_to_string)

               |? ~FUN.ask('Utworzono już PDF dla dokumentu %1.\nCzy utworzyć kolejny?'@[_faks_to_string])
               ||
                  _repexec:=-1
               ?}
            ?}
         ?}
      ?};
      {? FAKS.T().KOR='T' | FAKS.T().KOR='Z'
      ||
:: korekta
         {? _a=1
         ||
:: korekta - zapis
            {? _repexec<>-1
            ||
               _pth:='Korekta faktury VAT '+exec('str_to_pth','#string',FAKS.SYM)+'.pdf';
               _repexec:=
                  {? _generuj_edokument
                  || 1
                  |? _grp_dr & __GRP_DR.FIRST=0 & __GRP_DR.WZ<>''
                  || rep_exec(__GRP_DR.WZ,,,_pth,1)
                  || {? _msk<>'' & _msk*'?'=0 & _msk*'*'=0 || params_set('RAP_ID',_msk) ?};
                     exec('rep_exec','#b_report','',
                        {? _msk<>''          ||                      _msk
                        |? FAKS.T().WZ<>''   ||                      FAKS.T().WZ
                        |? BEER.SZ='S'       || {? FAKS.WHERE='K' || 'lsp_korzp*'
                                                |? FAKS.WHERE='N' || 'lsp_kornap*'
                                                ||                   'lsp_korsp*'
                                                ?}
                        |? FAKS.WHERE='K'    ||                      'lzk_korzp*'
                        ||                                           'lzk_korp*'
                        ?},_txt,2,_pth,{? _czy_edokument || 1 || exec('nopanel','param_wydr',FAKS.SZ) ?},,,,'W'
                     )
                  ?}
            ?}
         ||
:: korekta - wydruk
            prgs_clr();
            _repexec:=
               {? _generuj_edokument
               || 1
               |? _grp_dr & __GRP_DR.FIRST=0 & __GRP_DR.WZ<>''
               || rep_exec(__GRP_DR.WZ)
               || exec('rep_exec','#b_report','',
                     {? FAKS.T().WZ<>''   ||                      FAKS.T().WZ
                     |? BEER.SZ='S'       || {? FAKS.WHERE='K' || 'lsp_korzb*'
                                             |? FAKS.WHERE='N' || 'lsp_kornag*'
                                             ||                   'lsp_kors_*'
                                             ?}
                     |? FAKS.WHERE='K'    ||                      'lzk_korzb*'
                     ||                                           'lzk_kor_*'
                     ?},_txt,2,,,,,,'W'
                  )
               ?}
         ?}
      ||
:: faktura
         {? _a=1
         ||
:: faktura - zapis
            {? _repexec<>-1
            ||
               _symb:=exec('str_to_pth','#string',FAKS.SYM);
               _pth:=
                  {? BEER.SZ='S'
                  || POLA.NAZ_WYDR:='Faktura VAT '+_symb
                  || POLA.NAZ_WYDR:='Faktura wewnętrzna Dokument zakupu '+_symb
                  ?}
                  +'.pdf';
               _repexec:=
                  {? _generuj_edokument
                  || 1
                  |? _grp_dr & __GRP_DR.FIRST=0 & __GRP_DR.WZ<>''
                  || rep_exec(__GRP_DR.WZ,,,_pth,1)
                  || {? _msk<>'' & _msk*'?'=0 & _msk*'*'=0 || params_set('RAP_ID',_msk) ?};
                     exec('rep_exec','#b_report','',
                        {? _msk<>''          || _msk
                        |? FAKS.T().WZ<>''   || FAKS.T().WZ
                        |? BEER.SZ='S'       || 'lsp_fakp*'
                        ||                      'lzk_zakp*'
                        ?},_txt,2,_pth,{? _czy_edokument || 1 || exec('nopanel','param_wydr',FAKS.SZ) ?},,,,'W'
                     )
                  ?}
            ?}
         ||
:: faktura - wydruk
            prgs_clr();
            _repexec:=
               {? _generuj_edokument
               || 1
               |? _grp_dr & __GRP_DR.FIRST=0 & __GRP_DR.WZ<>''
               || rep_exec(__GRP_DR.WZ)
               || exec('rep_exec','#b_report','',
                     {? FAKS.T().WZ<>'' || FAKS.T().WZ |? BEER.SZ='S' || 'lsp_fak_*' || 'lzk_zak_*' ?},_txt,2,,,,,,'W')
               ?}
         ?}
      ?};
      _wyn.WYN:=_repexec;
      {? POLA.NAZ_WYDR<>'' & _a=1 & _repexec>0
      ||
:: zapis w DOKUM
         {? _generuj_edokument
         ||
            _pth:=~~;
            POLA.NAZ_WYDR:='';
            PARAM_W.JEZYK=null()
         ?};
         _wyn.REF:=
            exec('save_dok','dokum','FAKS',_pth,POLA.NAZ_WYDR,FAKS.SYM,
               {? FAKS.KH_ODB<>null() & FAKS.KH_ODB().KH_LNK<>null() & FAKS.KH_ODB().FV_EM='T'
               || {? FAKS.KH_ODB().EM<>'' || FAKS.KH_ODB().EM || '' ?}
               || FAKS.KH().EM
               ?},
               'Dokument o symbolu: '+FAKS.SYM+' wystawca: '+XINFO.NAZ,
               PARAM_W.JEZYK,
               FAKS.STAT_REJ,
               _czy_edokument,
               _rodzaje_edokumentu,
               _generuj_edokument,
               _dokum
            )
      ?};
      {? _grp_dr & _repexec=0 || __GRP_DR.ESC:=1 ?};
      {? _repexec>0 & FAKS.STAT_REJ='T' & FAKS.get() || FAKS.CZY_DRUK:='T'; FAKS.put() ?}
   || {? _grp_dr || __GRP_DR.ESC:=1 ?}
   ?}
?};
VAR_DEL.delete('__TOPDF');
_wyn


\czy_rab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: sprawdza czy jest rabat na dokumencie
::  OLD: \czy_rab/wydr_fak.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? FAKS.RAB || return(1) ?};
FAKS.cntx_psh; FAP.cntx_psh;
FAP.index('FAP'); FAP.prefix(FAKS.ref);
_kor:=FAKS.KOR<>'';
{! _razdwa:=1..(1+_kor)
|!
   FAP.index('FAP');
   {? _razdwa=1
   || FAP.prefix(FAKS.ref)
   || FAKS.use(form(8+FAKS.LKSQL));
      FAP.use('fakpo'+(5-form(8+FAKS.LKSQL)));
      FAP.prefix(BB.sqlint(FAKS.LKSQL))
   ?};
   {? FAP.first
   ||
      {? _razdwa=2 & FAP.FAKS().RAB
      || _wyn:=1
      || {!
         |?
            exec('wysw_kor','faktury_poz');
            _wyn+=FAP.RAB+FAP.RABK;
            _wyn=0 & FAP.next
         !}
      ?}
   ?}
!};
FAKS.cntx_pop; FAP.cntx_pop;
_wyn


\cen_rab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: wylicza cene po rabacie
::   WE: _a - rabat z naglowka przed korekta
::       _b - 0-niewalutowy, 1-walutowy
::  OLD: \cen_rab/faktury1.fml
::----------------------------------------------------------------------------------------------------------------------
_rabn:=_a;
_dwal:=_b;

FAP.FAKS();

_dokl_c:={? FAKS.SZ='S' || FAP.M().DOKL_S || FAP.M().DOKL_Z ?};
_rabat:=_rabat2:=1;
_kwrab:=_kwrabj:=0;
TAZ.RAB_TYP:=FAKS.RAB_TYP;
{? exec('czyrabp','ceny',TAZ.RAB_TYP)
||
   _rabat2:={? 1 || exec('rab_proc','ceny',FKOR.RAB,_rabn,TAZ.RAB_TYP) || 0 ?};
   _rabat:=1-{? 1 || _rabat2/100 || 0 ?}
||
   _cena:={? _dwal || FKOR.CWAL || FKOR.CPR ?};
   _kwil:=FKOR.IL;
   _nagwsp:={? 1 || -_rabn/100 || 0 ?};
   _kwpoz:={? 1  || -FKOR.RAB || 0 ?};
   _kwrab:=
      {? TAZ.RAB_TYP='W'
      || _kwpoz+(_nagwsp*((_cena*_kwil)$2))$2
      || ((_kwpoz+(_nagwsp*_cena)$_dokl_c)*_kwil)$2
      ?};
   _kwrabj:=
      {? TAZ.RAB_TYP='W'
      || {? _kwil || (_kwpoz/_kwil)$_dokl_c ?}+(_nagwsp*_cena)$_dokl_c
      || _kwpoz+(_nagwsp*_cena)$_dokl_c
      ?}
?};

_cen:={? _dwal || FKOR.CWAL || FKOR.CPR ?};
{? exec('czyrabp','ceny',TAZ.RAB_TYP)
|| (_cen*_rabat)$_dokl_c
|| _cen+_kwrabj
?}


\podstawa1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: podstawa wyliczania rabatu w korekcie historycznej przed rabatem
::   WE: _a-uchwyt do tabeli
::   WY: podstawa
::  OLD: \podstawa1/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;

{? _a=FAP
||
   FAKS.cntx_psh;
   _wyn:=
      {? FAP.FAKS().WAL<>FAKS.NWAL
      || FKOR.CWAL
      || FKOR.CPR
      ?};
   FAKS.cntx_pop;
   _wyn:=
      {? 'W'*FAKS.RAB_TYP
      || (_wyn*FKOR.IL)$2
      || _wyn
      ?}
?};
_wyn


\zmvat_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: sprawdzenie czy zmienil sie obowiazujacy vat w odniesieniu do wzorca _e
::   WE: _a - M.ref
::       _b - KH.ref
::       _c - Rok
::       _d - Miesiac
::       _e - SLO.ref - VAT do porownania
::       _f - 1-eksport, 0-wpp
::       _g - FAKS.SZ
::  OLD: \zmvat_chk/faktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('bl_nwal','ustawienia')=exec('bl_narod','ustawienia')
||
   M.cntx_psh; SLO.cntx_psh;
   M.VAT:=exec('m_vat','material',_a,_b,_f,_c,_d,,,,_g);
   {? M.VAT<>_e
   ||
      FUN.info('Zweryfikuj stawkę VAT dla indeksu %1.'
         '\n\nWprowadzona stawka VAT: %2.'
         '\nStawka VAT wg aktualnych ustawień: %3.'@[FAP.MX,exec('FindAndGet','#table',SLO,_e,,"SLO.KOD",''),
         M.VAT().KOD])
   ?};
   M.cntx_pop; SLO.cntx_pop()
?}


\dok_size
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: sprawdza ilosc dokumentow dla danego kontrahenta rok obecny i poprzedni - magazyn ST.MAG
::   WE: _a - 0-wydania 1-przychody 2-przychody unijne
::   WY: liczba dokumentow
::  OLD: \dok_size/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{! _i:=(ST.AR-1)..ST.AR
|! ND.cntx_psh();
   ND.use('nagdo'+ST.ODDZ+($_i+2));

   ND.index('SPR');
   {? HELP.KH=null
   || {? ~_a
      || ND.prefix(ST.MAG,_i,'N','T','T','N')
      || ND.prefix(ST.MAG,_i,'T','N','T','N')
      ?}
   || {? ~_a
      || ND.prefix(ST.MAG,_i,'N','T','T','N',HELP.KH)
      || ND.prefix(ST.MAG,_i,'T','N','T','N',HELP.KH)
      ?}
   ?};
:: dla dokumentow przychodowych sprawdzane jest dodatkowo powiazanie pozycji
:: jezeli dokument ma pozycje wszystkie pozycje powiazane to zmniejszamy licznik _wyn
   {? ND.first()
   ||
      {!
      |? {? _a=0
         || _wyn+=1
         |? (_a=2 & ND.TYP().UE='N') | ~(exec('sprdk2fp','magdok_wspolne',ND.ref(),{? _a=1 || 'Z' || 'E' ?})=1)
         || 1
         || _wyn+=1
         ?};
         _wyn<2 & ND.next()
      !}
   ?};
   ND.cntx_pop()
!};
_wyn


\dok_size1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: sprawdza ilosc dokumentow dla danego kontrahenta rok obecny i poprzedni - wszystkie magazyny
::   WE: _a - 0-wydania 1-przychody 2-przychody unijne
::   WY: liczba dokumentow
::  OLD: \dok_size1/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{! _i:=(ST.AR-1)..ST.AR
|! ND.cntx_psh();
   ND.use('nagdo'+ST.ODDZ+($_i+2));

   ND.index('SPR1');
   {? HELP.KH=null
   || {? ~_a
      || ND.prefix(_i,'N','T','T','N')
      || ND.prefix(_i,'T','N','T','N')
      ?}
   || {? ~_a
      || ND.prefix(_i,'N','T','T','N',HELP.KH)
      || ND.prefix(_i,'T','N','T','N',HELP.KH)
      ?}
   ?};
:: dla dokumentow przychodowych sprawdzane jest dodatkowo powiazanie pozycji
:: jezeli dokument ma pozycje wszystkie pozycje powiazane to zmniejszamy licznik _wyn
   {? ND.first()
   ||
      {!
      |?
         {? ND.MAG<>ST.MAG
         ||
            {? _a=0
            || _wyn+=1
            |? (_a=2 & ND.TYP().UE='N') | ~(exec('sprdk2fp','magdok_wspolne',ND.ref(),{? _a=1 || 'Z' || 'E' ?})=1)
            || 1
            || _wyn+=1
            ?}
         ?};
         _wyn<2 & ND.next()
      !}
   ?};
   ND.cntx_pop()
!};
_wyn


\faks_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: zwraca tabele powiazan lista ref-ow SQL-owych FAKS-a
::   WE: _a - rodzaj 0-sprzedaz 1-zakupy 2-wewnetrzna
::       _b - ref ND
::       _c - ND.FAKS_REF
::       [_d] - tabela
::   WY: uchwyt tabeli powiazan
::  OLD: \faks_pow/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=
   {? var_press('_d')>100
   || _d
   || tab_tmp(1,'FAKS_REF','STRING[16]','')
   ?};
{? ~_a & _c<>''
|| _wyn.clear();
   _wyn.blank();
   _wyn.FAKS_REF:=_c;
   _wyn.add(1)
|? _a
|| _rodz:={? _a<2 || 'Z' || 'E' ?};
   DK.cntx_psh;
   FAP2DK.cntx_psh();
   DK.index('DOKMAG');
   DK.prefix(_b);
   {? DK.first
   || {!
      |? FAP2DK.index('DK');
         FAP2DK.prefix(_rodz,$DK.ref());
         {? FAP2DK.first()
         || {!
            |? _wyn.clear();
               {? FAP2DK.FAKS<>'' & ~_wyn.find_key(FAP2DK.FAKS)
               || _wyn.blank();
                  _wyn.FAKS_REF:=FAP2DK.FAKS;
                  _wyn.add(1)
               ?};
               FAP2DK.next()
            !}
         ?};
         DK.next
      !}
   ?};
   DK.cntx_pop;
   FAP2DK.cntx_pop()
?};
_wyn


\info_zak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: wyswietla informacje o powiazanych dokumentach zakupowych/wewnetrznych
::   WE: _a  - tabela powiazanych dokumentow
::      [_b] - 1-edycja / 0 tylko podglad
::  OLD: \info_zak/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};

:: powolanie tabelki
exec('tab_maga','faktury_wspolne',1,_b);

:: wypelniamy informacje o dotychczas powiazanych dokumentach magazynowych
_ref:=#FAKS.ref();
_msk:=FAKS.name();
_rodz:=FAKS.WHERE;

_a.clear();
{? _a.first()
|| {!
   |?
      FAKS.cntx_psh();
      FAP.cntx_psh();
      FAKSPL.cntx_psh();
      ND.cntx_psh();

      _rfk:=_a.FAKS_REF;
      _nfk:=8+_a.FAKS_REF;

      _mask:=0;
      {? FAKS.name<>_nfk || _mask:=1; exec('open','open_tab',5-_nfk-2,6-_nfk) ?};
      FAKS.clear();
      {? FAKS.seek(_rfk,_nfk)
      || __magzak.clear;
         __magzak.blank;
         __magzak.TREE:=0;
         __magzak.LAB:=FAKS.T().T+' ... '+FAKS.SYM;
         __magzak.KTM:='';
         __magzak.REF:=$FAKS.ref;
         __magzak.ROD:=FAKS.WHERE;
         __magzak.LPP:=FAKS.NR;
         _korzen:={? __magzak.add || #__magzak.ref || 0 ?};

         FAP.index('FAP');
         FAP.prefix(FAKS.ref);
         {? FAP.first
         || {!
            |? exec('wysw_kor','faktury_poz');
               {? FAP.IL<>0 | FAP.CN<>0
               || __magzak.clear;
                  __magzak.blank;
                  __magzak.TREE:=_korzen;
                  __magzak.LAB:='('+FAP.M().RODZ+') '+FAP.M().KTM;
                  __magzak.KTM:=FAP.M().KTM;
                  __magzak.ILE:=FAP.IL;
                  __magzak.CEN:={? (FKOR.IL+FAP.IL)=0 || 0 || FAP.CPR $ FAP.M().DOKL_Z ?};
                  __magzak.KOR:=0;
                  __magzak.ILP:=0;
                  __magzak.LPP:=FAP.POZ;
                  __magzak.JMI:=FAP.M().J().KOD;
                  __magzak.ILR:=exec('ile_rozf','faktury_wspolne',$FAP.ref(),FAP.FAKS().WHERE);
                  __magzak.add
               ?};
               FAP.next
            !}
         ?}
      ?};
      {? _mask || exec('open','open_tab',ST.ODDZ,2-$(ST.AR)) ?};
      FAKS.cntx_pop();
      FAP.cntx_pop();
      FAKSPL.cntx_pop();
      ND.cntx_pop();
      _a.next()
   !}
?};

_ndx:=__magzak.ndx_tmp(,,'TREE',,,'REF',,,'LPP',,);
__magzak.index(_ndx);
__magzak.prefix();
__magzak.select();
__magzak.ndx_drop(_ndx)


\tab_maga
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: powoluje tabelke i okienko do wyswietlania dokumentow powiazanych
::   WE: [_a] - czy ograniczyc tylko do wyswietlania-1, domyslnie-0
::       [_b] - informacje o fakturach
::  OLD: \tab_maga/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

{? var_pres('__magzak')>100 || obj_del(__magzak) ?};

__magzak:=tab_tmp(,'TREE','TREE_REF',''
           ,'LAB','STRING[100]',''
           ,'KTM','STRING[50]',''
           ,'ILE','REAL',''
           ,'CEN','REAL',''
           ,'KOR','REAL',''
           ,'ILP','REAL',''
           ,'REF','STRING[20]',''
           ,'ROD','STRING[1]',''
           ,'JMI','STRING[10]',''
           ,'LPP','INTEGER',''
           ,'ILR','REAL','');
exec('war_hid','ceny',__magzak,'CEN');

_win_sel:=__magzak.mk_sel('Dokumenty powiązane z zakupem:'@,'P',,'mag_zak_sel',,,__magzak.size(),1);

__magzak.win_fld(_win_sel,,'LAB',,,32,,1,'');
__magzak.win_fld(_win_sel,,'LPP',,,7,,1,'Numer/Pozycja'@);
__magzak.win_fld(_win_sel,,'ILE',,,10,3,1,'Ilość'@);
__magzak.win_fld(_win_sel,,'JMI',,,4,,1,'jm'@);
__magzak.win_fld(_win_sel,,'ILR',,,10,3,1,'Przypisano'@);
{? ~_b
|| __magzak.win_fld(_win_sel,,'CEN',,,10,2,1,'Cena magazynowa'@)
|| __magzak.win_fld(_win_sel,,'CEN',,,10,2,1,'Cena zakupu'@);
   __magzak.win_act(_win_sel,0,'Formuła','&Podgląd'@@,,,"exec('dispfaks','faktury_wspolne')",,0,,,,'P');
   __magzak.win_act(_win_sel,0,'Formuła','&Usuń powiązanie'@@,,,,"exec('delpfaks','faktury_wspolne')",,0,,,'U');
   __magzak.win_act(_win_sel,0,'Formuła','Usuń &fakturę'@@,,,,"exec('delffaks','faktury_wspolne')",,0,,,'F');
:: DRO: [rr] nie przeniesiono
   _fb:="
      __magzak.cntx_psh;
      {? __magzak.REF<>'' | __magzak.TREE & __magzak.seek(__magzak.TREE,) & __magzak.REF<>''
      ||
         FAPOW.cntx_psh;
         FAPOW.FAKS:=__magzak.REF;
         exec('fzal_prn','faktury_zalicz');
         FAPOW.cntx_pop
      ?};
      __magzak.cntx_pop
   ";
   __magzak.win_act(_win_sel,0,'Formuła','Druku&j'@@,,,,_fb,,0,,,'J')
?};
__magzak.tr_fml(_win_sel,,"{? _a || 1 || _a ?}");
__magzak.win_fml(_win_sel,,'LAB',,'ICON_BEFORE',"
                 {? ~__magzak.TREE
                 || {? __magzak.tr_state()=1
                    || 'xwin16.png:75'
                    || 'xwin16.png:74'
                    ?}
                 || 'xwin16.png:76'

                 ?}
                ");
__magzak.win_sel(_win_sel);

_in_prec:="'in_prec='+{? (2+cur_kwin())='e_'
                       || $exec(\'FindInSet\',\'#table\',\'M\',\'MATKTM\',__magzak.KTM,__magzak.KTM,\"M.DOKL\")
                       || $ST.DOKL
                       ?}";
_outprec:="{? ~__magzak.TREE
           || 'empty=1'
           || 'out_prec='+{? (2+cur_kwin())='e_'
                          || $exec(\'FindInSet\',\'#table\',\'M\',\'MATKTM\',__magzak.KTM,__magzak.KTM,\"M.DOKL\")
                          || $ST.DOKL
                          ?}
           ?}";
_in_pre2:="'in_prec='+{? (2+cur_kwin())='e_'
                       || _d_c:=exec(\'FindInSet\',\'#table\',\'M\',\'MATKTM\',__magzak.KTM,__magzak.KTM,\"M.DOKL_C\");
                          _d_z:=exec(\'FindInSet\',\'#table\',\'M\',\'MATKTM\',__magzak.KTM,__magzak.KTM,\"M.DOKL_Z\");
                          {? _d_c>_d_z || $_d_c || $_d_z ?}
                       || {? ST.DOKL_C>ST.DOKL_Z || $ST.DOKL_C || $ST.DOKL_Z ?}
                       ?}";
_outpre2:="{? ~__magzak.TREE
           || 'empty=1'
           || 'out_prec='+{? (2+cur_kwin())='e_'
                          || _d_c:=exec(\'FindInSet\',\'#table\',\'M\',\'MATKTM\',__magzak.KTM,__magzak.KTM,\"M.DOKL_C\");
                             _d_z:=exec(\'FindInSet\',\'#table\',\'M\',\'MATKTM\',__magzak.KTM,__magzak.KTM,\"M.DOKL_Z\");
                             {? _d_c>_d_z || $_d_c || $_d_z ?}
                          || {? ST.DOKL_C>ST.DOKL_Z || $ST.DOKL_C || $ST.DOKL_Z ?}
                          ?}
           ?}";
__magzak.fld_fml('ILE','EDIT_FORMAT',_in_prec);
__magzak.fld_fml('ILE','DISPLAY_FORMAT',_outprec);
__magzak.fld_fml('ILR','EDIT_FORMAT',_in_prec);
__magzak.fld_fml('ILR','DISPLAY_FORMAT',_outprec);
__magzak.fld_fml('ILP','EDIT_FORMAT',_in_prec);
__magzak.fld_fml('ILP','DISPLAY_FORMAT',_outprec);
__magzak.fld_fml('KOR','EDIT_FORMAT',_in_prec);
__magzak.fld_fml('KOR','DISPLAY_FORMAT',_outprec);
__magzak.fld_fml('CEN','EDIT_FORMAT',_in_pre2);
__magzak.fld_fml('CEN','DISPLAY_FORMAT',_outpre2);
1


\ile_rozf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: zwraca ilosc rozpisana na FAP
::   WE: _a - ref SQL-owy FAP
::       _b - rodzaj Z-zakup E-wewnetrzna
::   WY: sumaryczna ilosc rozpisana na dokumentach magazynowych
::  OLD: \ile_rozf/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
FAP2DK.index('FAP');
FAP2DK.prefix(_b,_a);
{? FAP2DK.first || {! |? _wyn+=FAP2DK.IL; FAP2DK.next !} ?};
_wyn


\dispfaks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: wyswietla fakturke wg ref-a SQL-owego
::  OLD: \dispfaks/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
__magzak.cntx_psh();
{? {? __magzak.TREE<>0 || __magzak.clear();  __magzak.seek(__magzak.TREE,) || 1 ?}
|| FAKS.cntx_psh();
   FAP.cntx_psh();
   FAKSPL.cntx_psh();
   ND.cntx_psh();

   _rfk:=__magzak.REF;
   _nfk:=8+__magzak.REF;

   _mask:=0;
   {? FAKS.name<>_nfk || _mask:=1; exec('open','open_tab',5-_nfk-2,6-_nfk)
   ?};
   FAKS.clear();
   {? FAKS.seek(_rfk,_nfk)
   || exec('ustaw_ww','eurusd','F'); exec('ust_lw','eurusd',1);
      exec('pozycje_fak','faktury_poz',1)
   ?};
   {? _mask || exec('open','open_tab',ST.ODDZ,2-$(ST.AR)) ?};

   ND.cntx_pop();
   FAKSPL.cntx_pop();
   FAP.cntx_pop();
   FAKS.cntx_pop()
?};
__magzak.cntx_pop()


\delpfaks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: usuwa powiazania do danego dokumentu
::  OLD: \delpfaks/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
__magzak.cntx_psh();
{? {? __magzak.TREE<>0 || __magzak.clear();  __magzak.seek(__magzak.TREE,) || 1 ?}
|| {? FUN.ask('Usunąć powiązanie dokumentu magazynowego do danej faktury?'@)
   || DK.index('DOKMAG');
      DK.prefix(ND.ref());
      {? DK.first()
      || {!
         |? FAP2DK.index('DK');
            FAP2DK.prefix(__magzak.ROD,$DK.ref());
            {? FAP2DK.first()
            || {!
               |? {? FAP2DK.FAKS=__magzak.REF
                  || exec('fapk_clear','magdok_wspolne');
                     FAP2DK.del()
                  || FAP2DK.next()
                  ?}
               !}
            ?};
            DK.next()
         !}
      ?};
      __magzak.cntx_psh();
      __magzak.clear();
      __magzak.prefix(#__magzak.ref());
      {? __magzak.first() || {! |? __magzak.del() !} ?};
      __magzak.cntx_pop();
      __magzak.del()
   ?}
?};
__magzak.cntx_pop()


\delffaks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: usuwa fakturke
::  OLD: \delffaks/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
__magzak.cntx_psh();
{? {? __magzak.TREE<>0 || __magzak.clear();  __magzak.seek(__magzak.TREE,) || 1 ?}
|| _ok:=0;
   FAKS.cntx_psh();
   FAP.cntx_psh();
   FAKSPL.cntx_psh();
   ND.cntx_psh();

   _rfk:=__magzak.REF;
   _nfk:=8+__magzak.REF;

   _mask:=0;
   {? FAKS.name()<>_nfk || _mask:=1;exec('open','open_tab',5-_nfk-2,6-_nfk) ?};
   FAKS.clear();
   {? FAKS.seek(_rfk,_nfk) || _ok:=exec('usun_fak','faktury_nag',1) ?};

   {? _mask || exec('open','open_tab',ST.ODDZ,2-$(ST.AR)) ?};

   ND.cntx_pop();
   FAKSPL.cntx_pop();
   FAP.cntx_pop();
   FAKS.cntx_pop();
   {? _ok
   || __magzak.cntx_psh();
      __magzak.clear();
      __magzak.prefix(#__magzak.ref());
      {? __magzak.first() || {! |? __magzak.del() !} ?};
      __magzak.cntx_pop();
      __magzak.del()
   ?}
?};
__magzak.cntx_pop()


\wntokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: mozliwosc wyboru okresu rejestracji WNT
::  OLD: \wntokr/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_pocz:=date(ST.AR,ST.AM,0)+1;
{? FUN.ask('Czy wystawić fakturę w następnym okresie?\n'
           'Obecny okres to: %1.'
           '\nNastępny okres to: %2.'@[form(_pocz-1,,8),form(_pocz,,8)])
|| _wyn:=form((_pocz~1)-2000,-2,0,'99')+form(_pocz~2,-2,0,'99')
?};
_wyn


\add_dk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przepisanie wymiarow na pozycje dokumentu magazynowego wg wymiarow na pozycji faktury
::   WE: _a - ref FAP-a
::       _b - ref ND
::  OLD: \add_dk_l/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
DK.cntx_psh();
DK_L.cntx_psh();
DK_L.index('FAP');
DK_L.prefix(_a,null);
DK.index('NDFAP');
DK.prefix(_b,$_a,$_a);
{? DK.first() & DK_L.first()
|| _ile:=0; _ill:=0;
   {!
   |? {? DK_L.MG=DK.N().MAG
      || {? (DK.IL-_ile)>=(DK_L.IL-_ill)
         || _ile+=DK_L.IL-_ill;
            exec('add2dk_l','magdok_wspolne',DK.ref(),null,DK_L.LOK,null,DK_L.TW,date(0,0,0),DK_L.IL-_ill
             ,DK_L.MG,DK.M,0,null);
            _ill:=0;
            {? ~(DK.IL-_ile) || _ile:=0; DK.next() || 1 ?} & DK_L.next()
         |? (DK.IL-_ile)<(DK_L.IL-_ill)
         || _ill+=DK.IL-_ile;
            exec('add2dk_l','magdok_wspolne',DK.ref(),null,DK_L.LOK,null,DK_L.TW,date(0,0,0),DK.IL-_ile
             ,DK_L.MG,DK.M,0,null);
            _ile:=0;
            {? ~(DK_L.IL-_ill) || _ill:=0; DK_L.next() || 1 ?} & DK.next()
         ?}
      || DK_L.next()
      ?}
   !}
?};
DK.cntx_pop;
DK_L.cntx_pop()


\newrezfp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: ustawia nowa rezerwacje na tabeli ZK_P wg usuwanych pozycji dokumentu magazynowego
::   WE: _a - ref naglowka dokumentu ND.ref
::   WY: 1-udalo sie rozpisac 0-nie udalo sie
::  OLD: \newrezfp/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_do_state:=do_state();
{? _do_state=0 || do() ?};

_wyn:=0;
DK.cntx_psh;
DK.clear;
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first
|| _czydst:=(1+DK.N().MAG().TYP)='D';
   {!
   |? {? DK.M().RODZ='T'
      || _dst:=_czydst & DK.AFIFO<>'F' & DK.AFIFO<>'L';
         _sc:={? _dst || DK.SRDK || '' ?};
::       DK.FAP - zalozenie, ze praca tylko w biezacych maskach
         _fap_ref:=null;
         FAP.cntx_psh();
         FAP.clear();
         {? ((8+DK.FAP)+2)=(FAP.name()+2) & FAP.seek(DK.FAP,8+DK.FAP) || _fap_ref:=FAP.ref() ?};
         FAP.cntx_pop();

::       dodanie
         _wyn:=exec('update','rezerwacje','FAP',_fap_ref,DK.N().MAG,DK.M,DK.IL,_sc,'B',,2,,,DK.IL2,DK.J2,DK.WS2);
         exec('aktu_rez','rezerwacje',DK.M,_wyn,DK.IL)
      || _wyn:=1
      ?};
      _wyn & DK.next
   !}
?};
DK.cntx_pop;
{? _do_state=0 || end() ?};
_wyn


\f_mdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wyswietlanie dokumentow magazynowych dla dokumentu sprzedazy
::   WE: _a - czy wyswietlac select i okienko (0 -tak, 1 - nie, 2 - sprawdzic istnienie dokumentow)
::       _b - TYPYDOK.ref
::   WY: 1-wystawiono zwrot 0-nie wystawiono 2-nie trzeba 3-wystawiono korekty
::  OLD: \f_mdok/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_typydok:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_res:=2;

_notkor:=(FAKS.WHERE='N' & (';MG'*exec('FindAndGet','#table',FAKS,FAKS.LKSQL,,"WHERE",''))>1);

{? FAKS.T().KOR='T' & ((';MG'*FAKS.WHERE )>1 | FAKS.T().HIS='T' | _notkor) & FAKS.SZ='S'
   | (FAKS.T().KOR='T' | FAKS.WHERE='K') & FAKS.SZ='Z'
||
   {? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
   VAR_DEL.delete('X_Xa');

   PARAM_W.TAB_TMP:='X_Xa';
   PARAM_W.TAB_POL:='';
   PARAM_W.TAB_TYT:='Dokumenty magazynowe dla dokumentu sprzedaży '+FAKS.SYM;
   {? FAKS.T().KOR='T' & FAKS.DZ<>date(0,0,0) & (FAKS.DZ~1)<>(FAKS.DW~1)
   || _msk:=obj_new(1);
      _msk[1]:=form(FAKS.DZ~1,,0,'99')+2;
      X_Xa:=exec('dk_fapow','magdok_wspolne',$FAKS.ref(),_msk);
      obj_del(_msk)
   || X_Xa:=exec('dk_fapow','magdok_wspolne',$FAKS.ref())
   ?};
   {? exec('upr_cm','ceny')=0 || PARAM_W.TAB_POL:='8;9;' ?};
   PARAM_W.TAB_SUM:='6;';
   t_sumk:='';

   _wyn:={? FAKS.SZ='Z' || 'K' |? _notkor || '-I' || exec('czy_il','faktury_poz',FAKS.ref) ?};

   X_Xa.clear();
   {? _a=2 & X_Xa.first() & _wyn='K'
   || _res:=3
   |? _a=2 & X_Xa.first() & _wyn='-I'
   || _res:=1
   |? _a<>2 & _wyn='-I'
   ||
      {? X_Xa.first()
      || FUN.info('Jest już dokument zwrotu do magazynu dla wybranej korekty.'@)
      || _res:=exec('gen_zz','faktury_nag',_typydok);
         obj_del(X_Xa);
         {? _res=1
         ||
            {? FAKS.T().KOR='T' & (FAKS.DZ~1)<>(FAKS.DW~1)
            || _msk:=obj_new(1);
               _msk[1]:=form(FAKS.DZ~1,,0,'99')+2;
               X_Xa:=exec('dk_fapow','magdok_wspolne',$FAKS.ref(),_msk);
               obj_del(_msk)
            || X_Xa:=exec('dk_fapow','magdok_wspolne',$FAKS.ref())
            ?};
            {? exec('upr_cm','ceny')=0 || PARAM_W.TAB_POL:='8;9;' ?};
            PARAM_W.TAB_SUM:='6;'
         ?}
      ?}
   ?};
   {? _a=0
   ||
      _acr:=X_Xa.mk_sel('Dokumenty magazynowe dla dokumentu sprzedaży %1'@[FAKS.SYM],,0,'f_mdok_acr');
      X_Xa.win_fld(_acr,,'MAGAZYN',,,3);
      X_Xa.win_fld(_acr,,'TYP',,,4);
      X_Xa.win_fld(_acr,,'NR',,,4);
      X_Xa.win_fld(_acr,,'DATA');
      X_Xa.win_fld(_acr,,'POZ',,,3,,,'Poz'@);
      X_Xa.win_fld(_acr,,'KTM',,,20,,,'Materiał/Usługa'@);
      X_Xa.win_fld(_acr,,'ILOSC',,,12,3,,'Ilość'@);
      X_Xa.win_fld(_acr,,'CENA',,,10,2,,'Cena'@);
      X_Xa.win_fld(_acr,,'WARTOSC',,,12,2,,'Wartość'@);
      UNI_M.std_act('X_Xa',_acr,1);
      X_Xa.win_sel(_acr);
      _res:=X_Xa.select()
   ?}
?};
_res


\delrezfp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: usuwa rezerwacje na tabeli ZK_P wg pozycji faktury sprzedazy
::   WE: _a - ref naglowka dokumentu FAKS.ref
::  OLD: \delrezfp/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
do();
FAP.cntx_psh;
FAP.clear;
FAP.index('FAP');
FAP.prefix(_a);
{? FAP.first
|| {!
   |? {? FAP.M().RODZ='T' || exec('akt_frez','faktury_poz',0,0,FAP.ref) ?};
      FAP.next
   !}
?};
FAP.cntx_pop;
end();
1


\wydaFaks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Sprawdzenie czy do danego dokumentu zostały już wygenerowane dokumenty wydania - zakładamy, że jesteśmy na
::       aktualnym FAKS-ie
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
FAP2DK.cntx_psh();
FAP2DK.index('NFAKS');
FAP2DK.prefix($FAKS.ref());
_res:=FAP2DK.first();
FAP2DK.cntx_pop();
::_res:=0;
::_reffaks:=$FAKS.ref();
::_aktmsk:=FAKS.name()+3;
::_newmsk:=(1+_aktmsk)+form((FAKS.D~1)-2000,,0,'99');
::FAKS.cntx_psh();
::ND.cntx_psh();
::{? _aktmsk<>_newmsk || exec('mag_open','open_tab',1+_newmsk,_newmsk+2) ?};
::_res:=exec('FindInSet','#table','ND','FAKS_REF',_reffaks,_reffaks)<>null();
::{? _aktmsk<>_newmsk || exec('mag_open','open_tab',1+_aktmsk,_aktmsk+2) ?};
::FAKS.cntx_pop();
::ND.cntx_pop();
_res


\czyfaksd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdzenie czy pozycja faktury sa powiazana z dokumentami magazynowymi
::   WE: _a - ref FAKS-a
::   WY: 0-powiazana i nie usuwac pozycji 1-niepowiazana 2-powiazana i usuwac pozycje 3-powiazana i usuwac dokument
::  OLD: \czyfaksd/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};

_wyn:=1;
FAKS.cntx_psh;
FAP.cntx_psh;
_wyn:=exec('czyfapdk','faktury_wspolne','x',,-1,$_a);
{? _wyn=1
|| FAP.index('FAP');
   FAP.prefix(_a);
   {? FAP.first
   || {!
      |? _wyn:=exec('czyfapdk','faktury_wspolne',$FAP.ref,FAP.ref,-1);
         _wyn=1 & FAP.next
      !}
   ?}
?};
{? _wyn=1
|| FAKS_K.index('FAKS');
   FAKS_K.prefix('N',_a);
   {? FAKS_K.first
   || _wyn:=FUN.ask('Faktura powiązana z rozliczeniem kosztów dodatkowych.\nCzy usunąć powiązanie?'@);
      {? _wyn || _wyn+=1 ?}
   ?}
?};
FAKS.cntx_pop;
FAP.cntx_pop;
_wyn


\fakturuj_dokmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Fakturuje dokumenty magazynowe
::   WE: _a - klucz grupujący zapisany w realizacji
::       _b - dokument magazynowy
::       _c - 0-wydania 1-przychody 2-przychody unijne
::   WY: 0-status ogólny; 1-nie ma nic do fakturowania
::----------------------------------------------------------------------------------------------------------------------
_zk_rea:=_a;
_nd:=_b;

_wyn:=0;
FAKS.cntx_psh();
VAR_DEL.delete('__rodzal');
__rodzal:=_c;

FKOR.WHAT:='F';
ROKMC.KH:=null;
ROKMC.KH_ODB:=null;
ROKMC.KH_MSC:=null;
ROKMC.AM:=0;
ROKMC.MG:=null;
BEER.SZ:={? ~_c || 'S' || 'Z' ?};
__dsp_w_poz:=exec('x00138','faktury_wspolne',BEER.SZ)='T';
{? __dsp_w_poz=0 & exec('x00138','faktury_wspolne',BEER.SZ)='P'
||
   {? FUN.ask('Czy umieścić datę sprzedaży w pozycji faktury?'@) || __dsp_w_poz:=1 ?}
?};
{? exec('czy_z_ok','okresy',{? BEER.SZ='S' || -2 || -3 ?})
   & {? ~_c || exec('czy_sts','ustawienia') || exec('czy_stz','ustawienia') ?}
||
   KH_ODB.f_clear();
   KH_ODB.actions('WER','u');
   KH_MSC.actions('WER','dpu:d');
   KH.actions('WER','W:W');
:: po to aby do naglowka faktury nie wpisywal sie magazyn
   _stmag:=ST.MAG;
   ST.MAG:=null;

   HELP.WHERE:='M';
   HELP.KH:=null;

   _edit:=0;
   zaz_kh:=0;
   _context:=params_get();
   _cntxref:={? _zk_rea<>'' || $_context.context.REF || '' ?};
   _z_zk:=0;
   _rokzk:=0;
   {? _nd
   || exec('list_zam','magdok_wspolne',ND.ref,0); _z_zk:=__list_zk.first();
      ROKMC.KH:=exec('FindAndGet','#table',ND,_nd,,"ND.KH",null());
      ROKMC.KH_ODB:=exec('FindAndGet','#table',ND,_nd,,"ND.KH_ODB",null());
      ROKMC.KH_MSC:=exec('FindAndGet','#table',ND,_nd,,"ND.KH_MSC",null());
      ROKMC.AM:=0;
      ROKMC.MG:=null();
      _edit:=1
   |? _zk_rea=''
   || ROKMC.win_edit('FAK');
      {? ROKMC.edit()
      || _edit:=1
      || ROKMC.KH:=null;
         ROKMC.KH_ODB:=null;
         ROKMC.KH_MSC:=null;
         ROKMC.AM:=0;
         ROKMC.MG:=null
      ?}
   || {? (5+_cntxref)='zdnag'
      || ROKMC.KH:=exec('FindAndGet','#table',ZD_NAG,_cntxref,,"KH",null());
         ROKMC.KH_ODB:=null();
         ROKMC.KH_MSC:=null()
      |? (5+_cntxref)='zknag'
      || _z_zk:=2;
         ROKMC.KH:=exec('FindAndGet','#table',ZK_N,_cntxref,,"KH",null());
         ROKMC.KH_ODB:=null();
         ROKMC.KH_MSC:=exec('FindAndGet','#table',ZK_N,_cntxref,,"KH_MSC",null());
         _rokzk:=exec('FindAndGet','#table',ZK_N,_cntxref,,"DP~1",0)
      || ROKMC.KH:=null;
         ROKMC.KH_ODB:=null;
         ROKMC.KH_MSC:=null
      ?};
      ROKMC.AM:=0;
      ROKMC.MG:=null;
      _edit:=1
   ?};

   {? _edit & ROKMC.KH & ~_c
   ||
      _kh_dod_b:=exec('kh_dod_b','kontrahent','nd_fakturuj',ROKMC.KH,_z_zk);
      {? _kh_dod_b='T' | _kh_dod_b='B'
      || FUN.info('Kontrahent zablokowany.'@
                +'\nNiemożliwe wystawienie dokumentu sprzedaży.'@);
         _edit:=0
      ?}
   ?};

   {? _edit
   ||
::    powoluje tabele tymczasowa, okienko i formuly
      exec('use_ntmp','magdok_wspolne');

::    uzupelnia tabele
      _saDokDoFak:=0;
::    poprzedni rok
      {? ROKMC.AM=0
      || {? _rokzk<>0 & _rokzk<(ST.AR-1)
         || {! _jj:=_rokzk..(ST.AR-1)
            |! _buf:=exec('nd_aktyw','magdok_wspolne',_jj,_c,$_nd,_zk_rea)>0;
               {? _buf>0 || _saDokDoFak:=1 ?}
            !}
         || _saDokDoFak:=exec('nd_aktyw','magdok_wspolne',ST.AR-1,_c,$_nd,_zk_rea)>0
         ?}
      ?};
::    biezacy rok
      _buf:=exec('nd_aktyw','magdok_wspolne',ST.AR,_c,$_nd,_zk_rea);
      {? _buf>0
      || _saDokDoFak:=1
      || _saDokDoFak:=_buf
      ?};
      ZK_N.cntx_psh();
      ZD_NAG.cntx_psh();
      _fakturuj:=0;
      params_set('out',_context.out,'mp',_context.mp,'akcja',_context.akcja,'in',_context.in,'auto',_context.auto
         ,'context',_context.context);
      {? Ntmp.size()=1
::    jeden dokument do fakturownaia
      || _fakturuj:=1;
         _par:=exec('get','#params',200400,2);
         {? (';TP'*_par)>1 || exec('czyreaU','magdok_wspolne') ?};
         _rea:=0;
         {? (__zd_rnU.clear(); __zd_rnU.first()) & _par='P'
         || _rea:=FUN.ask('Dokument magazynowy powstały jako realizacja zamówień dostaw.\n'
                       'Podczas realizacji zrealizowano również usługi z zamówień.\n\n'
                       'Czy na utworzonym dokumencie zakupu dodać usługi z realizacji zamówień?'@);
            {? ~_rea || {! |? __zd_rnU.del() !} ?}
         ?};
         exec('yesORno_ntmp','magdok_wspolne',0,1,$params_get().context.REF)
      |? (_fakusl:=exec('uslNOfakt','magdok_wspolne'); _fakusl) | Ntmp.first()
::    wiele dokumentów do fakturowania
      || {? _zk_rea<>'' & ~__Ntmp.first() & _fakusl
         || _par:=exec('get','#params',200400,2);
            {? (';TP'*_par)>1 || exec('czyreaU','magdok_wspolne',0) ?};
            _rea:=0;
            {? (__zd_rnU.clear(); __zd_rnU.first()) & {? _par='T' || _fakturuj:=1; 0 || _par='P' ?}
            || _rea:=FUN.ask('Czy na utworzonym dokumencie zakupu dodać usługi z realizacji zamówień?'@);
               {? ~_rea || {! |? __zd_rnU.del() !} || _fakturuj:=1 ?}
            ?}
         |? _zk_rea<>'' & ~__Ntmp.first()
         || {? _saDokDoFak<0
            || FUN.info('Brak dokumentów do fakturowania dla aktualnie ustawionych parametrów pracy.\n'
                        'Należy zmienić parametry pracy.'@);
               _wyn:=-1
            || FUN.info('Brak dokumentów do fakturowania.'@);
               {? ~_saDokDoFak || _wyn:=1 ?}
            ?};
            _fakturuj:=0
         |? _nd & ~__Ntmp.first()
         || {? ~_saDokDoFak
            || FUN.info('Dokument już zafakturowany.'@);
               _wyn:=1
            ?};
            _fakturuj:=0
         ||
            _fakturuj:=Ntmp.select()
         ?}
::    brak dokumentów do fakturownia
      || {? _saDokDoFak<0
         || FUN.info('Brak dokumentów do fakturowania dla aktualnie ustawionych parametrów pracy.\n'
                     'Należy zmienić parametry pracy.'@)
         || FUN.info('Brak dokumentów do fakturowania.'@);
            _wyn:=1
         ?}
      ?};
      {? _fakturuj
::    utworzenie faktury z wybranych dokumentów
      || params_exec('fak_all1','magdok_wspolne')
      ?};
      ZK_N.cntx_pop();
      ZD_NAG.cntx_pop();
::    seryjne usuniecie r_locka
::    poprzedni rok
      {? ROKMC.AM=0
      || exec('nd_r_unl','magdok_wspolne',ST.AR-1,_c)
      ?};
::    biezacy rok
      exec('nd_r_unl','magdok_wspolne',ST.AR,_c);

      &zaz_kh;&xspr;&xadd;
      ND.ndx_drop()
   ?};
   ST.MAG:=_stmag;
   KH_ODB.actions('WER','');
   KH_MSC.actions('WER','');
   KH.actions('WER','')
?};
HELP.KH:=null;
VAR_DEL.delete('__rodzal','__dsp_w_poz');
FAKS.cntx_pop();
_wyn


\faksWithMag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Faktura sprzedaży/ Faktura zakupowa/ Faktura wewnętrzna z dokumentu magazynowego - Faktura
::       Obsługa w formule main
::   WE: [_a] 0(domyślnie) faktura sprzedaży/zakupu 1-faktura wewnętrzna
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
:: wyznaczenie typu faktury do wystawienia
_act_uid:={? ~_a || exec('faksWithMag_act_uid','faktury_wspolne') || 'LZK_ZAK_DWPZ' ?};
_rodz   :={? _act_uid*'DZDM' || 'S' |? _act_uid*'DZPZ' || 'Z' || 'W' ?};
:: wyznaczenie uidref identyfikującego instancję

_uidref:='';
{? 'SZ'*_rodz
|| DK.cntx_psh();
   DK.index('DOKMAG');
   DK.prefix(ND.ref());
   _zk_rea:='';
   _zam_rns:='';
   _loop:=DK.first();
   {!
   |? _loop
   |!
      {? DK.ZAM_RN<>'' & _zam_rns*DK.ZAM_RN=0 || _zam_rns+=DK.ZAM_RN ?};
      _loop:=DK.next()
   !};
   DK.cntx_pop();
   {!
   |? _zam_rn:=16+_zam_rns; _zk_rea='' & _zam_rn<>''
   |! _zam_rns:=16-_zam_rns;
      _grp_key:={? _rodz='S'
                || exec('FindAndGet','#table',ZK_RN,_zam_rn,,"ZK_RN.GRP_KEY",'')
                || exec('FindAndGet','#table',ZD_RN,_zam_rn,,"ZD_RN.GRP_KEY",'')
                ?};
      {? _grp_key<>''
      || B_KEYREF.cntx_psh();
         B_KEYREF.index('UID_REF');
         B_KEYREF.prefix(_act_uid);
         {? _rodz='S'
         || ZK_RN.cntx_psh();
            ZK_RN.index('GRP_KEY');
            ZK_RN.prefix(_grp_key-1);
            _loop:=ZK_RN.first();
            {!
            |? _loop
            |!
               _uidref:=
                  {? ZK_RN.ND<>'' & B_KEYREF.find_key(exec('FindAndGet','#table',ND,ZK_RN.ND,,"ND.uidref()",''))
                  || B_KEYREF.KEY_REF
                  || ''
                  ?};
               {? _uidref<>'' || _zk_rea:=_grp_key ?};
               _loop:=_uidref='' & ZK_RN.next()
            !};
            ZK_RN.cntx_pop()
         || ZD_RN.cntx_psh();
            ZD_RN.index('GRP_KEY');
            ZD_RN.prefix(_grp_key-1);
            _loop:=ZD_RN.first();
            {!
            |? _loop
            |!
               _uidref:=
                  {? ZD_RN.ND<>'' & B_KEYREF.find_key(exec('FindAndGet','#table',ND,ZD_RN.ND,,"ND.uidref()",''))
                  || B_KEYREF.KEY_REF
                  || ''
                  ?};
               {? _uidref<>'' || _zk_rea:=_grp_key ?};
               _loop:=_uidref='' & ZD_RN.next()
            !};
            ZD_RN.cntx_pop()
         ?};
         B_KEYREF.cntx_pop()
      ?}
   !}
?};

{? _uidref='' || _uidref:=ND.uidref() ?};

ND.cntx_psh();
:: uruchomienie czynności
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:=_act_uid;
_params.UIDREF:=_uidref;
_params.PROC_START:='T';
_params.AKCJA:='Fakturuj';
_params.CONTEXT:=exec('context_lsp_fak_dzdm','faktury_nag');
_params.CONTEXT.REF:=ND.ref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ND',ND.ref());
exec('mp_run','#b__box',_params);
ND.cntx_pop();
~~


\faksWithMag_act_uid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Faktura sprzedaży/ Faktura zakupowa/ Faktura wewnętrzna z dokumentu magazynowego - Faktura
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? ND.TYP().Z='T'
|| {? ND.TYP().P='N' & ND.TYP().DS='T' & ND.STAT_REJ='T'
   || _wyn:='LSP_FAK_DZDM'
   |? ND.TYP().P='T' & ND.TYP().DS='N' & ND.STAT_REJ='T'
   || _wyn:='LZK_ZAK_DZPZ'
   |? ND.TYP().P='T' & ND.TYP().UE='T' & ND.STAT_REJ='T'
   || _wyn:='LZK_ZAP_DWPZ'
   ?}
?};
_wyn


\czyRaport
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BL [2006]
:: OPIS: Sprawdzenie czy dokument jest "uzyty" w raporcie kasowym Zablokowanie naglowka raportu!
::   WE: _a - ref tabeli (FAKS), do ktorego sprawdzamy odwolania z tabeli (POZDOK)
::   WY: _bNoPoz = -1 - dokument jest powiazany z raportem/dokumentem kasowym
::               = 0 - rekord nie jest powiazany z raportem/dokumentem kasowym
::                 wpp. numer powiazanego dokumentu kasowego
::  OLD: \czyRaport/kasa_wsp.fml
::----------------------------------------------------------------------------------------------------------------------
_bNoPoz:=0;
FAKS.cntx_psh();
FAKS.clear();
FAKS.seek(_a);
_tDlink:=POZDOK.names;
_tDlink.prefix();
_ndx:=POZDOK.ndx_tmp('',,'FAKS',,);
{? _tDlink.size() & _tDlink.first()
|| {!
   |? POZDOK.use(_tDlink.NAME);
      POZDOK.index(_ndx);
      POZDOK.prefix(_a);
      {? {? POZDOK.first()
         || _jest:=0;
            {!
            |? _jest:=ref_name(POZDOK.FAKS)=ref_name(_a);
               ~_jest & POZDOK.next()
            !};
            _jest
         || 0
         ?}
      || DOKUMENT.use('kdo'+(POZDOK.name+5));
         RAPORT.use('krp'+(POZDOK.name+5));
         {!
         |?
            POZDOK.DOKUMENT().RAPORT();
            {? RAPORT.STATUS='otwarty' & DOKUMENT.DOK_NUM=0 & RAPORT.r_lock(1,1)
            || _bNoPoz:=POZDOK.ref();
               _txt:='Dokument powiązany z RAPORTEM KASOWYM nr: %1.'@[$POZDOK.DOKUMENT().RAPORT().NUM_RAP];
               __kom.add(_txt,7)
            || _bNoPoz:=-1;
               {? RAPORT.STATUS<>'otwarty' | DOKUMENT.DOK_NUM
               || _txt:='Dokument powiązany z RAPORTEM KASOWYM nr: %1.'@[$RAPORT.NUM_RAP];
                  __kom.add(_txt,7);
                  {? DOKUMENT.DOK_NUM
                  || _txt:='Został wystawiony dokument kasowy.'@;
                     __kom.add(_txt,7)
                  || _txt:='Raport kasowy ma status inny niż otwarty.'@;
                     __kom.add(_txt,7)
                  ?}
               || _txt:='Dokument powiązany z RAPORTEM KASOWYM nr: %1.'@[$POZDOK.DOKUMENT().RAPORT().NUM_RAP];
                  __kom.add(_txt,7);
                  _txt:='Raport kasowy zablokowany przez innego użytkownika.'@;
                  __kom.add(_txt,7)
               ?}
            ?};
            RAPORT.r_unlock();
            _bNoPoz=0
            & {? POZDOK.next()
              || _jest:=0;
                 {!
                 |? _jest:=ref_name(POZDOK.FAKS)=ref_name(_a);
                    ~_jest & POZDOK.next()
                 !};
                 _jest
              || 0
              ?}
         !}
      ?};
      ~_bNoPoz & _tDlink.next()
   !}
?};
POZDOK.ndx_drop(_ndx);
FAKS.cntx_pop();
_bNoPoz


\eddelfak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: usuwa powiazanie z dokumentem w obiegu
::   WE: _a - ref SQL-owy EDOKUM
::   WY: 0-nie udalo 1-udalo sie usunac powiazanie
::  OLD: \eddelfak/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a<>''
|| _wyn:=0;
   EDOKUM.cntx_psh;
   EDOKUM.use(form(8+_a));
   EDOKUM.index('ID'); EDOKUM.clear;
   {? EDOKUM.seek(_a,form(8+_a))
   || EDOKUM.FAKS:='';
      _wyn:=EDOKUM.put(1)
   ?};
   EDOKUM.cntx_pop
|| _wyn:=1
?};
_wyn


\rozlkosz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: wprowadzenie i rozliczenie kosztow dla faktury zakupowej
::   WE: [_a] - skąd wywołane 0(domyślnie)-faktury zakupu 1-dokumenty magazynowe
::  OLD: \rozlkosz/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_where:={? var_pres('_a')=type_of(0) || _a || 0 ?};
VAR_DEL.delete('__pozkosz');
__pozkosz:=tab_tmp(2,'FAKS_K','STRING[48]',''
            ,'KTM','STRING[50]',''
            ,'NAZ','STRING[100]',''
            ,'WK','REAL',''
            ,'OPIS','STRING[100]',''
            ,'C','REAL',''
            ,'CK','REAL',''
            ,'WYC','INTEGER','');

_beerww:=BEER.WW;
{? _where
|| FZ.KIND:='M';
   ND.cntx_psh();
   DK.cntx_psh();
   FZ.FAKS:=null();
   FZ.IDND:=ND.IDADD;
   FZ.KRS:=ND.KRS;
   FZ.WALK:=ND.WAL;
   FZ.INF_T:=ND.TYP().T;
   FZ.INF_S:=ND.SYM;
   FZ.INF_D:=ND.D;
   BEER.MW:='M'; exec('ustaw_ww','eurusd',BEER.MW); exec('ust_lw','eurusd',1);
   BEER.WW:=2;
   FAKS_K.index('ND');
   FAKS_K.prefix('N',FZ.IDND);
   _sel:=exec('selKoszty','faktury_wspolne');
   FAKS_K.win_sel(_sel);
   exec('usl_kosz','faktury_wspolne');
   FAKS_K.select();
   ND.cntx_pop();
   DK.cntx_pop()
|? FAKS.T().KOR='T'
|| FUN.choice('Operacja niedostępna dla dokumentów korygujących.'@)
|? ~exec('upr_cz','ceny')
|| FUN.info('Brak uprawnień do wartości zakupu.'@)
|| FZ.KIND:='Z';
   FAKS.cntx_psh();
   FAP.cntx_psh();
   FZ.FAKS:=FAKS.ref();
   FZ.IDND:='';
   FZ.KRS:=FAKS.KRS;
   FZ.WALK:=FAKS.WAL;
   FZ.INF_T:=FAKS.T().T;
   FZ.INF_S:=FAKS.SYM+' ('+FAKS.ID+')';
   FZ.INF_D:=FAKS.DW;
   BEER.MW:='K'; exec('ustaw_ww','eurusd',BEER.MW); exec('ust_lw','eurusd',1);
   BEER.WW:=2;
   FAKS_K.index('FAKS');
   FAKS_K.prefix('N',FAKS.ref());
   _sel:=exec('selKoszty','faktury_wspolne');
   FAKS_K.win_sel(_sel);
   exec('usl_kosz','faktury_wspolne');
   FAKS_K.select();
   FAKS.cntx_pop();
   FAP.cntx_pop()
?};
BEER.WW:=_beerww;
VAR_DEL.delete('__pozkosz');
~~


\usl_kosz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przepisanie pozycji uslugowych na rozliczenie kosztow
::  OLD: \usl_kosz/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
FAKS_K.cntx_psh;
FAP.index('FAP');
FAP.prefix(FAKS.ref);
{? FAP.first
|| {!
   |? {? FAP.M().RODZ='U'
       & (FAKS_K.index('FAP'); FAKS_K.prefix('N',FAKS.ref()); ~FAKS_K.find_key($FAP.ref,$FAP.ref))
      || FAKS_K.clear;
         FAKS_K.blank;
         FAKS_K.FAKS:=FAKS.ref;
         FAKS_K.OPIS:=FAP.M().N;
         FAKS_K.SV:=FAP.SV;
         FAKS_K.WN:=FAP.WN;
         FAKS_K.WV:=FAP.WV;
         FAKS_K.WB:=FAP.WB;
         FAKS_K.WAL:=FAP.WAL;
         FAKS_K.WW:=FAP.WWAL;
         FAKS_K.KRS:=FAP.KRS;
         FAKS_K.FAP:=$FAP.ref;
         FAKS_K.ROZLICZ:='N';
         FAKS_K.KK:=FAP.KK;
         FAKS_K.add(1)
      ?};
      FAP.next
   !}
?};
FAKS_K.cntx_pop;
1


\prpfaksk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed akcja popraw dla kosztu dodatkowego
::  OLD: \prpfaksk/zakupy
::----------------------------------------------------------------------------------------------------------------------
_pop:=1+menu_txt()='P';
FAP_K.cntx_psh();
FAP_K.index('FAP');
FAP_K.prefix(FAKS_K.ref);
{? FAP_K.first
|| {? _pop
   || _wyn:=FUN.ask('Koszt został rozpisany.\n'
                    'Poprawa kosztu automatycznie usunie jego przypisanie do pozycji.\n\n'
                    'Czy umożliwić poprawę kosztu?'@)
   |? (FZ.KIND='M' & ~_pop) | exec('spr_k2pz','faktury_wspolne',FAKS_K.ref)
   || _opc:=FUN.choice('Koszt został rozpisany.\n'
                       'Poprawa kosztu automatycznie usunie jego przypisanie do pozycji.\n\n'
                       'Wybierz opcję.'@,,'&Poprawa kosztu'@,'&Tylko podgląd'@);
      _wyn:={? _opc=1 || 1 |? _opc=2 || 0 || -1 ?}
   || FUN.info('Koszt został przypisany do dokumentu(ów) magazynowych.\n'
               'Niemożliwa poprawa kosztu.'@);
      _wyn:=0
   ?}
|| _wyn:=1
?};
FAP_K.cntx_pop();
{? _wyn>0 & FAKS_K.IDTR<>''
|| FUN.info('Koszt został przepisany z kosztów transportu.\n'
            'Poprawa uwzględni zmiany w koszcie transportu.'@)
?};
_wyn


\spr_k2pz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy chociaz jedna pozycja z rozpiski zostala ujeta na dokumencie magazynowym
::   WE: _a - ref naglowka kosztu
::   WY: 1-zadna 0-jest choc jedna
::  OLD: \spr_k2pz/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
FAP_K.cntx_psh();
FAP_K.index('FAP');
FAP_K.prefix(_a);
{? FAP_K.first()
|| {!
   |? _wyn:=~(FAP_K.DKSQL<>'');
      _wyn & FAP_K.next()
   !}
?};
FAP_K.cntx_pop();
_wyn


\popfaksk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po akcji popraw dla kosztu dodatkowego - usuwa rozpiske na pozycjach jezeli zmieniono wartosc kosztu
::  OLD: \popfaksk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_mag_poz:=FAKS_K.ROZLICZ='N' & FZ.KIND='M';
_akt_net:={? _mag_poz || FAKS_K.WB || FAKS_K.WN ?};
_roz_net:=0;

:: sprawdzamy najpierw czy rozpisana wartosc netto jest rowna aktualnej
:: jezeli tak to nie usuwamy rozpiski
_faks_k:=FAKS_K.ref();
_rozlicz:=FAKS_K.ROZLICZ='T';
_act:=0;
_buf:=tab_tmp(1,'DKSQL','STRING[16]','');
FAKS_K.cntx_psh();
FAP_K.index('FAP');
FAP_K.prefix(_faks_k);
{? FAP_K.first
|| {! |? _roz_net+=FAP_K.WB; FAP_K.next !};
   {? _roz_net<>_akt_net | (~_mag_poz & ~_rozlicz)
   || FAP_K.first();
      {!
      |? {? FAP_K.CK>0 & FAP_K.DKSQL<>''
         || {? FAP_K.WYC
            || {? (_buf.clear(); _buf.prefix(FAP_K.DKSQL,); ~_buf.first())
               || _buf.blank();
                  _buf.DKSQL:=FAP_K.DKSQL;
                  _buf.add(1);
                  exec('delWYCcen','faktury_wspolne',FAP_K.DKSQL,FAP_K.CK)
               || FAP_K.WYC:=0;
                  FAP_K.CK:=0;
                  FAP_K.put(1)
               ?}
            ?};
            _act:=1
         ?};
         FAP_K.del()
      !};
      {? _act
      || FUN.info('Ponieważ zmieniono wartość kosztu w stosunku do rozpisanego kosztu na pozycjach.\n'
                  'przypisania zostały usunięte oraz zmieniono wycenę kosztów\n'
                  '(wg aktualnych wartości do rozliczenia).'@)
      || FUN.info('Ponieważ zmieniono wartość kosztu w stosunku do rozpisanego kosztu na pozycjach.\n'
                  'przypisania zostały usunięte.'@)
      ?};
      {? _act || exec('rozpkosz','faktury_wspolne',1,1) ?}
   ?}
?};
FAKS_K.cntx_pop();
obj_del(_buf);
{? FAKS_K.IDTR<>''
|| exec('FindAndGet','#table',TR_KOS,FAKS_K.IDTR,
    ,"OPIS:=FAKS_K.OPIS; SV:=FAKS_K.SV; WN:=FAKS_K.WN; WV:=FAKS_K.WV;
      WB:=FAKS_K.WB; WAL:=FAKS_K.WAL; WW:=FAKS_K.WW; KRS:=FAKS_K.KRS; put(1)",0)
?};
{? FAKS_K.ROZLICZ='N' & FZ.KIND='M' & FAKS_K.WN>0 & FAKS_K.IDTR=''
|| FAKS_K.WN:=FAKS_K.WV:=0;
   {? FAKS_K.WAL=INFO.NAROD || FAKS_K.WW:=FAKS_KRS:=0 ?};
   FAKS_K.SV:=null();
   FAKS_K.put(1)
?};
1


\delfaksk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: akcja usuniecia kosztu dodatkowego na fakturze zakupowej - sprawdzamy czy koszt zostal rozpisany
::  OLD: \delfaksk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_czy:=0;
_act:=0;
FAP_K.index('FAP');
FAP_K.prefix(FAKS_K.ref);
{? FAP_K.first
||
:: sprawdzenie czy koszt zostal przypisany do dokumentow magazynowych
   _maga:=0;
   {! |? _maga:=FAKS_K.ROZLICZ='T' & FAP_K.DKSQL<>'' & FAP_K.WYC; ~_maga & FAP_K.next !};
   {? _maga
   || FUN.info('Koszt został przypisany do powiązanych dokumentów magazynowych.\n'
               'Usunięcie niemożliwe.'@)
   || _czy:=FUN.ask('Koszt został rozpisany.\n'
                    'Usunięcie kosztu automatycznie usunie jego przypisanie do pozycji.\n'
                    'Czy usunąć bieżący wiersz?'@);
      _act:=FAKS_K.ROZLICZ='T';
      {? _czy || _czy:=FAP_K.size; {! |? FAP_K.del !}; _czy:=FAP_K.size=0 ?}
   ?}
|| _czy:=FUN.ask('Czy usunąć bieżący wiersz?'@)
?};
{? _czy || FAKS_K.del ?};
{? _czy & _act || exec('rozpkosz','faktury_wspolne',1,1) ?}


\rozpkosz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: wyswietla i aktualizuje koszty
::   WE: [_a] - rodzaj rozpisania 1(domyślnie)- koszty do rozliczenia 0-koszty pozostałe
::       [_b] - aktualizacja kosztów po usunięciu
::  OLD: \rozpkosz/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
   _tryb:={? var_pres('_a')=type_of(0) || _a || 1 ?};
_onlyact:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_opc:=1;
{? ~_tryb
|| exec('mgkosz','magdok_koszty'); return(0)
|| {? _onlyact
   || _opc:=2
   || _opc:=exec('prpfaksk','faktury_wspolne'); {? _opc<0 || return(0) ?}
   ?}
?};

VAR_DEL.delete('__zakkos','__wycena');
__wycena:=0;
__zakkos:=tab_tmp(3,'TREE','TREE_REF',''
           ,'LAB','STRING[100]',''
           ,'REF','STRING[20]',''
           ,'WAR','REAL',''
           ,'ROZ','REAL',''
           ,'FIL','REAL',''
           ,'FWB','REAL',''
           ,'FKK','STRING[20]',''
           ,'KK','STRING[20]',''
           ,'KKSQL','STRING[16]',''
           ,'NKSQL','STRING[16]',''
           ,'OLD','REAL','');
_desc:={? FZ.KIND='Z'
       || 'Rozpisane koszty dla faktury: %1 ... %2'@[FAKS.ID,FAKS.SYM]
       || 'Rozpisane koszty dla dokumentu: %1 ... %2'@[ND.TYP().T,ND.SYM]
       ?};
_win_sel:=__zakkos.mk_sel(_desc,'P',,'pow_zakksel',,,
   __zakkos.size(),1);
__zakkos.win_fld(_win_sel,,'LAB',,,60,,1,'');
__zakkos.win_fld(_win_sel,FZ,'KK','SYM','KONTAKOD',12,,0,'Konto'@);
__zakkos.win_fld(_win_sel,,'WAR',,,12,2,1,'Wartość netto'@);
__zakkos.win_fld(_win_sel,,'ROZ',,,12,2,0,'Wartość rozpisana'@);
{? _opc
|| __zakkos.win_act(_win_sel,0,'Popraw',,,,"exec('pop_fakk','faktury_wspolne')"
     ,"exec('roz_fakk','faktury_wspolne',__zakkos.TREE)",1);
   __zakkos.win_act(_win_sel,0,'Formuła','Ro&zpisz proporcjonalnie'@@,,,"exec('autofakk','faktury_wspolne')",,0,1,
      "exec('autofakk','faktury_wspolne')");
   __zakkos.win_act(_win_sel,0,'Formuła','&Akceptuj'@@,,,,"exec('akc_fakk','faktury_wspolne')",,0)
?};
__zakkos.win_act(_win_sel,0,'Rekord',,,,"exec('rek1fakk','faktury_wspolne')","exec('rek2fakk','faktury_wspolne')",0);
__zakkos.tr_fml(_win_sel,,"1");
__zakkos.win_fml(_win_sel,,'LAB',,'ICON_BEFORE',"
   {? __zakkos.TREE=0
   ||
      {? __zakkos.tr_state()=1
      || 'xwin16.png:75'
      || 'xwin16.png:74'
      ?}
   || 'xwin16.png:76'
   ?}
");
__zakkos.win_sel(_win_sel);

FAKS_K.cntx_psh;
{? FZ.KIND='Z'
|| FAKS_K.index('FAKS');
   FAKS_K.prefix('N',FAKS.ref())
|| FAKS_K.index('ND');
   FAKS_K.prefix('N',ND.IDADD)
?};
{? FAKS_K.first
|| {!
   |? {? FAKS_K.ROZLICZ='T'
      || _faks_k:=FAKS_K.ref();
         __zakkos.clear;
         __zakkos.blank;
         __zakkos.TREE:=0;
         __zakkos.LAB:=FAKS_K.OPIS;
         __zakkos.WAR:=FAKS_K.WN;
         __zakkos.ROZ:=FAKS_K.ROZL;
         __zakkos.REF:=$FAKS_K.ref;
         __zakkos.FIL:=0;
         __zakkos.FWB:=0;
         __zakkos.FKK:=$FAKS_K.ref;
         __zakkos.KK:=FAKS_K.KK().SYM;
         __zakkos.KKSQL:=$FAKS_K.KK;
         __zakkos.NKSQL:=$FAKS_K.KK;
         _korzen:={? __zakkos.add(1) || #__zakkos.ref || 0 ?};
         _ali:=0;
         _alw:=0;
         {? FZ.KIND='Z'
         || FAP.index('FAP');
            FAP.prefix(FAKS.ref);
            {? FAP.first
            || {!
               |? {? FAP.M().RODZ<>'U'
                  || FAP_K.index('FAP');
                     FAP_K.prefix(_faks_k);
                     _kksql:='';
                     _roz:={? FAP_K.find_key(FAP.ref)
                           || __wycena+=FAP_K.WYC;
                              _kksql:=$FAP_K.KK;
                              FAP_K.WB
                           || 0
                           ?};
                     __zakkos.clear;
                     __zakkos.blank;
                     __zakkos.LAB:=form(FAP.POZ,4,0,'99')+'. '+FAP.M().KTM+' - '+FAP.M().N;
                     __zakkos.TREE:=_korzen;
                     __zakkos.WAR:=FAP.WN;
                     __zakkos.ROZ:=_roz;
                     __zakkos.FIL:=FAP.IL;
                     __zakkos.FWB:=FAP.WN;
                     __zakkos.REF:=$FAP.ref;
                     __zakkos.FKK:=$FAKS_K.ref;
                     __zakkos.KK:={? _kksql<>''
                                  || exec('FindAndGet','#table',KK,_kksql,,"SYM",'')
                                  || FAKS_K.KK().SYM
                                  ?};
                     __zakkos.KKSQL:={? _kksql<>'' || _kksql || $FAKS_K.KK ?};
                     __zakkos.NKSQL:=$FAKS_K.KK;
                     __zakkos.OLD:=__zakkos.ROZ;
                     _ali+=FAP.IL;
                     _alw+=FAP.WN;
                     __zakkos.add(1)
                  ?};
                  FAP.next
               !}
            ?}
         || DK.index('DOKMAG');
            DK.prefix(ND.ref());
            {? DK.first
            || {!
               |? {? DK.M().RODZ<>'U'
                  || FAP_K.index('DK');
                     FAP_K.prefix(_faks_k);
                     _kksql:='';
                     _roz:={? FAP_K.find_key($DK.ref())
                           || __wycena+=FAP_K.WYC;
                              _kksql:=$FAP_K.KK;
                              FAP_K.WB
                           || 0
                           ?};

                     __zakkos.clear;
                     __zakkos.blank;
                     __zakkos.LAB:=form(DK.P,4,0,'99')+'. '+DK.M().KTM+' - '+DK.M().N;
                     __zakkos.TREE:=_korzen;
                     __zakkos.WAR:=DK.WAR;
                     __zakkos.ROZ:=_roz;
                     __zakkos.FIL:=DK.IL;
                     __zakkos.FWB:=DK.WAR;
                     __zakkos.REF:=$DK.ref;
                     __zakkos.FKK:=$FAKS_K.ref;
                     __zakkos.KK:={? _kksql<>''
                                  || exec('FindAndGet','#table',KK,_kksql,,"SYM",'')
                                  || FAKS_K.KK().SYM
                                  ?};
                     __zakkos.KKSQL:={? _kksql<>'' || _kksql || $FAKS_K.KK ?};
                     __zakkos.NKSQL:=$FAKS_K.KK;
                     __zakkos.OLD:=__zakkos.ROZ;
                     _ali+=DK.IL;
                     _alw+=DK.WAR;
                     __zakkos.add(1)
                  ?};
                  DK.next
               !}
            ?}
         ?};
         __zakkos.clear;
         {? __zakkos.seek(_korzen,)
         || __zakkos.FIL:=_ali;
            __zakkos.FWB:=_alw;
            __zakkos.put(1);
            exec('roz_fakk','faktury_wspolne',_korzen)
         ?}
      ?};
      FAKS_K.next
   !}
?};
FAKS_K.cntx_pop;

__zakkos.clear();
{? _opc<>2 || __zakkos.select() || exec('akc_fakk','faktury_wspolne',1) ?};
VAR_DEL.delete('__zakkos','__wycena');
~~


\chk_fakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy wypelniono dla FAKS_K pola Opis i Wartosc netto
::  OLD: \chk_fakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_soft:=exec('prwbfakk','faktury_wspolne',1);
{? _soft || {? FAKS_K.WB<=0 || FUN.info('Należy podać wartość brutto większą od zera.'@); 'WB' || '' ?} ?};
{? form(FAKS_K.OPIS)='' || FUN.info('Należy podać opis kosztu.'@); 'OPIS'
|? FAKS_K.WAL<>INFO.NAROD & FAKS_K.WW<=0 || FUN.info('Należy podać wartość w walucie większą od zera.'@); 'WW'
|? FAKS_K.WAL<>INFO.NAROD & FAKS_K.KRS<=0 || FUN.info('Należy podać kurs: wartość większą od zera.'@); 'KRS'
|? ~(FAKS_K.INMG & FAKS_K.ROZLICZ='N') & FAKS_K.ROZLICZ='T' & FAKS_K.WN<=0
|| FUN.info('Należy podać wartość netto większą od zera.'@); 'WN'
|? ~(FAKS_K.INMG & FAKS_K.ROZLICZ='N') & FAKS_K.ROZLICZ='N' & FAKS_K.WB<=0
|| FUN.info('Należy podać wartość brutto większą od zera.'@); 'WB'
|? ~(FAKS_K.INMG & FAKS_K.ROZLICZ='N') & FAKS_K.ROZLICZ='T' & FAKS_K.SV=null
|| FUN.info('Należy podać stawkę VAT.'@); 'SV'
|? FAKS_K.ROZLICZ='T' & FAKS_K.IDND<>''
 & (exec('FindAndGet','#table',ND,FAKS_K.IDND,
    ,"ZAK='T'
      | (';KR+;KR-;KN+;KN-;INW+;INW-;PRC+;PRC-;'*(';%1;'@[TYP().T]))>0
      | MAG().TYP*'EWI'
      | INN='T'
     ",0))
|| FUN.info('Nie można wybrać kosztu do rozliczenia.'@);
   FAKS_K.ROZLICZ:='N';
   FAKS_K.WN:=0;
   FAKS_K.WV:=0;
   FAKS_K.SV:=null();
   'ROZLICZ'
|| ''
?}


\pop_fakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed akcja popraw = sprawdzamy czy pozostalo cos do rozpisania
::  OLD: \pop_fakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? __zakkos.TREE & __zakkos.ROZ
|| 1
|| _ref:=__zakkos.TREE;
   _all:=0;
   _roz:=0;
   __zakkos.cntx_psh;
   __zakkos.clear;
   _all:={? __zakkos.seek(_ref,) || __zakkos.WAR || 0 ?};
   __zakkos.prefix(_ref);
   {? __zakkos.first || {! |? _roz+=__zakkos.ROZ; __zakkos.next !} ?};
   __zakkos.cntx_pop;
   _all>_roz
?}


\roz_fakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: aktualizuje wartosc rozliczona
::   WE: _a - __zakkos.TREE
::  OLD: \roz_fakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a<>0
|| _roz:=0;
   __zakkos.cntx_psh;
   __zakkos.clear;
   __zakkos.prefix(_a);
   {? __zakkos.first || {! |? _roz+=__zakkos.ROZ; __zakkos.next !} ?};
   __zakkos.clear;
   {? __zakkos.seek(_a,) || __zakkos.ROZ:=_roz; __zakkos.put(1) ?};
   __zakkos.cntx_pop
?};
1


\autofakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: automatyczna rozpiska kosztow
::  OLD: \autofakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=Plugin.run('KOSZTY_ROZPISZ_001');
{? var_pres('_res')<>type_of(0) || _res:=-1 ?};

{? _res<>-1 || return(0) ?};

_tab:=__zakkos.sel_aget();  __zakkos.sel_adel();

{? _tab.size & FUN.ask('Rozpisanie kosztów dotyczyć będzie zaznaczonych rekordów.\nCzy kontynuować?'@)
||
:: rozpiska automatyczna wg zaznaczonych rekordow
   _rozp:=tab_tmp(2,'TREE','INTEGER',''
           ,'REF','INTEGER',''
           ,'ALW','REAL',''
           ,'ROZ','REAL','');

   __zakkos.cntx_psh;

   _tab.clear;
   {? _tab.first
   || {!
      |? {? (__zakkos.clear; __zakkos.seek(_tab.REF,))
         || {? __zakkos.TREE=0
            || _ref:=#__zakkos.ref;
               __zakkos.clear;
               __zakkos.prefix(_ref);
               {? __zakkos.first
               || {!
                  |? _rozp.clear;
                     _rozp.blank;
                     _rozp.TREE:=_ref;
                     _rozp.REF:=#__zakkos.ref;
                     _rozp.ALW:=__zakkos.FWB;
                     _rozp.ROZ:=__zakkos.ROZ;
                     _rozp.add(1);
                     __zakkos.next
                  !}
               ?}
            |? (_rozp.clear; _rozp.prefix(__zakkos.TREE); ~_rozp.find_key(#__zakkos.ref))
            || _rozp.clear;
               _rozp.blank;
               _rozp.TREE:=__zakkos.TREE;
               _rozp.REF:=#__zakkos.ref;
               _rozp.ALW:=__zakkos.FWB;
               _rozp.ROZ:=__zakkos.ROZ;
               _rozp.add(1)
            || ''
            ?}
         ?};
         _tab.next
      !}
   ?};
   obj_del(_tab);

   _pozp:=sql('select distinct :_a.TREE TREE, sum(:_a.ALW) ALW, sum(:_a.ROZ) ROZ from :_a '+
           ' group by :_a.TREE order by 1 ',_rozp);
   _pozp.clear;
   {? _pozp.first
   || {!
      |? {? (__zakkos.clear; __zakkos.seek(_pozp.TREE,); __zakkos.WAR-__zakkos.ROZ+_pozp.ROZ>0)
         || _alw:=_pozp.ALW;
            _roz:=__zakkos.WAR-__zakkos.ROZ+_pozp.ROZ;
            _rok:=__zakkos.WAR-__zakkos.ROZ+_pozp.ROZ;
            _max:=0;
            _rgr:=null;
            _rozp.clear;
            _rozp.prefix(_pozp.TREE);
            {? _rozp.first
            || {!
               |? {? (__zakkos.clear; __zakkos.seek(_rozp.REF,))
                  || __zakkos.ROZ:={? _alw>0 || _roz*(__zakkos.FWB/_alw) $2 || 0 ?};
                     __zakkos.put(1);
                     {? __zakkos.FWB>_max || _max:=__zakkos.FWB; _rgr:=__zakkos.ref ?};
                     _rok-=__zakkos.ROZ
                  ?};
                  _rozp.next
               !}
            ?};
            {? _rok<>0 & _rgr<>null & (__zakkos.clear; __zakkos.seek(_rgr))
            || __zakkos.ROZ+=_rok;
               __zakkos.put
            ?}
         ?};
         exec('roz_fakk','faktury_wspolne',_pozp.TREE);
         _pozp.next
      !}
   ?};
   __zakkos.cntx_pop;
   obj_del(_rozp);
   obj_del(_pozp)
||
:: rozpiska automatyczna dla wszystkich rekordow
   __zakkos.cntx_psh;
   __zakkos.clear;
   __zakkos.prefix(0);
   {? __zakkos.first
   || {!
      |? _alw:=__zakkos.FWB;
         _ali:=__zakkos.FIL;
         _roz:=__zakkos.WAR;
         _rok:=__zakkos.WAR;
         _ref:=#__zakkos.ref;
         _max:=0;
         _rgr:=null;
         __zakkos.cntx_psh;
         __zakkos.clear;
         __zakkos.prefix(_ref);
         {? __zakkos.first
         || {!
            |? __zakkos.ROZ:={? _alw>0 || _roz*(__zakkos.FWB/_alw) $2 || 0 ?};
               __zakkos.put(1);
               {? __zakkos.FWB>_max || _max:=__zakkos.FWB; _rgr:=__zakkos.ref ?};
               _rok-=__zakkos.ROZ;
               __zakkos.next
            !}
         ?};
         {? _rok<>0 & _rgr<>null & (__zakkos.clear; __zakkos.seek(_rgr))
         || __zakkos.ROZ+=_rok;
            __zakkos.put
         ?};
         __zakkos.cntx_pop;
         exec('roz_fakk','faktury_wspolne',#__zakkos.ref);
         __zakkos.next
      !}
   ?};
   __zakkos.cntx_pop
?};
1


\rek1fakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: rekord przed
::  OLD: \rek1fakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
FZ.KK:={? __zakkos.KKSQL<>'' || exec('FindAndGet','#table',KK,__zakkos.KKSQL,,,null()) || null() ?};
__zakkos.ROZ<>0 & __zakkos.TREE


\rek2fakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: rekord po
::  OLD: \rek2fakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=__zakkos.TREE;
_poz:=#__zakkos.ref;
_all:=0;
_roz:=0;
__zakkos.cntx_psh;
__zakkos.clear;
_all:={? __zakkos.seek(_ref,) || __zakkos.WAR || 0 ?};
__zakkos.prefix(_ref);
{? __zakkos.first || {! |? _roz+={? (#__zakkos.ref)<>_poz || __zakkos.ROZ || 0 ?}; __zakkos.next !} ?};
__zakkos.cntx_pop;
{? __zakkos.ROZ>(_all-_roz)
|| FUN.info('Zbyt duża wartość.\nWartość pozostała: %1.'@[form((_all-_roz),,2,'99')]);
   __zakkos.ROZ:=(_all-_roz);
   0
|| 1
?}


\akc_fakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: akceptacja rozpiski kosztow
::   WE: [_a] - 1-tylko aktualizacja, 0-nie(domyślnie)
::  OLD: \akc_fakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_onlyact:={? var_pres('_a')=type_of(0) || _a || 0 ?};

__zakkos.cntx_psh();
__zakkos.clear();
_txt:='';

_warroz:=0;
_rozold:=0;
{? __zakkos.first()
|| {!
   |? {? __zakkos.TREE=0
      || _warroz+=__zakkos.WAR<>__zakkos.ROZ;
         _rozold+=__zakkos.ROZ<>__zakkos.OLD
      ?};
      __zakkos.next()
   !}
?};
__zakkos.cntx_pop();

{? _warroz
|| {? __wycena & _rozold
   || _txt:='Nie wszystkie koszty zostały dokładnie rozpisane.\n\n'
            'Uwaga. Niektóre z kosztów zostały uwzględnione na dokumentach magazynowych.\n'
            'Jeżeli wartość rozpisana kosztu jest różna od poprzedniej wówczas\n'
            'zostanie zmieniona na nich cena bez uwzględnienia kosztów.\n'
            'Dokumenty magazynowe należy ponownie wycenić ażeby zostały uwzględnione nowe koszty.\n\n'
            'Zaakceptować rozpisane wartości kosztów?'@
   || _txt:='Nie wszystkie koszty zostały dokładnie rozpisane.\n'
            'Zaakceptować rozpisane wartości kosztów?'@
   ?}
|| {? __wycena & _rozold
   || _txt:='Uwaga. Niektóre z kosztów zostały uwzględnione na dokumentach magazynowych.\n'
            'Jeżeli wartość rozpisana kosztu jest różna od poprzedniej wówczas\n'
            'zostanie zmieniona na nich cena bez uwzględnienia kosztów.\n'
            'Dokumenty magazynowe należy ponownie wycenić ażeby zostały uwzględnione nowe koszty.\n\n'
            'Zaakceptować rozpisane wartości kosztów?'@
   || _txt:='Zaakceptować rozpisane wartości kosztów?'@
   ?}
?};

{? _onlyact | FUN.ask(_txt)
|| {? ~_onlyact || sel_exit() ?};

   __zakkos.clear();
   __zakkos.prefix(0);
   {? __zakkos.first()
   || _buf:=tab_tmp(1,'DKSQL','STRING[16]','');
      {!
      |? _faks_k:=exec('FindAndGet','#table',FAKS_K,__zakkos.FKK,,,null());
         FAP_K.index('FAP');
         FAP_K.prefix(_faks_k);
         {? FAP_K.first()
         || {!
            |? {? FAP_K.WYC & FAP_K.DKSQL<>'' & FAP_K.CK>0 & (_buf.clear(); _buf.prefix(FAP_K.DKSQL); ~_buf.first())
               || exec('delWYCcen','faktury_wspolne',FAP_K.DKSQL,FAP_K.CK);
                  _buf.blank();
                  _buf.DKSQL:=FAP_K.DKSQL;
                  _buf.add(1)
               ?};
               FAP_K.del()
            !}
         ?};
         __zakkos.next()
      !};
      obj_del(_buf)
   ?};

   _buf:=tab_tmp(1,'DKSQL','STRING[16]','','KK','REAL','');
   _bfk:=tab_tmp(1,'FAKS_K','STRING[16]','');

   __zakkos.clear();
   {? __zakkos.first()
   || {!
      |? {? __zakkos.TREE & __zakkos.ROZ>0
         || _faks_k:=exec('FindAndGet','#table',FAKS_K,__zakkos.FKK,,,null());
            _fap:={? FZ.KIND='Z' || exec('FindAndGet','#table',FAP,__zakkos.REF,,,null()) || null() ?};
            _dksql:={? FZ.KIND='Z' || '' || exec('FindAndGet','#table',DK,__zakkos.REF,,"$ref()",'') ?};
            _idnd:=exec('FindAndGet','#table',FAKS_K,_faks_k,,"IDND",'');
            _idfk:=$FAKS_K.FAKS;
            _bfk.clear();
            _bfk.prefix($_faks_k);
            {? ~_bfk.first()
            || _bfk.blank();
               _bfk.FAKS_K:=$_faks_k;
               _bfk.add(1)
            ?};
            {? FZ.KIND='Z'
            || FAP_K.index('FAP');
               FAP_K.prefix(_faks_k);
               {? FAP_K.find_key(_fap)
               || FAP_K.WB:=__zakkos.ROZ;
                  {? FZ.KIND='Z' & FAP_K.DKSQL='' & (1 | _idnd<>'')
                  || _dk:=exec('FindInSet','#table','FAP2DK','FAP',$_fap,'Z',"@.FAP2DK.DK",,,'');
                     _nd:=exec('FindInSet','#table','FAP2DK','FAP',$_fap,'Z',"@.FAP2DK.ND",,,'');
                     {? _dk=''
                     || _dk:=exec('FindInSet','#table','FAP2DK','FAP',$_fap,'E',"@.FAP2DK.DK",,,'');
                        _nd:=exec('FindInSet','#table','FAP2DK','FAP',$_fap,'E',"@.FAP2DK.ND",,,'')
                     ?};
                     {? _dk<>'' || FAP_K.DKSQL:=_dk; _wycen:=1 ?};
                     {? _idnd='' & _nd<>''
                     || FAKS_K.IDND:=exec('FindAndGet','#table',ND,_nd,,"IDADD",'');
                        FAKS_K.put(1)
                     ?}
                  ?};
                  FAP_K.KK:={? __zakkos.KKSQL='' || null() || exec('FindAndGet','#table',KK,__zakkos.KKSQL,,,null()) ?};
                  FAP_K.put(1)
               || FAP_K.blank;
                  FAP_K.FAKS_K:=_faks_k;
                  FAP_K.FAP:=_fap;
                  FAP_K.WB:=__zakkos.ROZ;
                  {? FZ.KIND='Z' & FAP_K.DKSQL='' & (1 | _idnd<>'')
                  || _dk:=exec('FindInSet','#table','FAP2DK','FAP',$_fap,'Z',"@.FAP2DK.DK",,,'');
                     _nd:=exec('FindInSet','#table','FAP2DK','FAP',$_fap,'Z',"@.FAP2DK.ND",,,'');
                     {? _dk=''
                     || _dk:=exec('FindInSet','#table','FAP2DK','FAP',$_fap,'E',"@.FAP2DK.DK",,,'');
                        _nd:=exec('FindInSet','#table','FAP2DK','FAP',$_fap,'E',"@.FAP2DK.ND",,,'')
                     ?};
                     {? _dk<>'' || FAP_K.DKSQL:=_dk; _wycen:=1 ?};
                     {? _idnd='' & _nd<>''
                     || FAKS_K.IDND:=exec('FindAndGet','#table',ND,_nd,,"IDADD",'');
                        FAKS_K.put(1)
                     ?}
                  ?};
                  FAP_K.KK:={? __zakkos.KKSQL='' || null() || exec('FindAndGet','#table',KK,__zakkos.KKSQL,,,null()) ?};
                  FAP_K.add(1)
               ?}
            || FAP_K.index('DK');
               FAP_K.prefix(_faks_k);
               {? FAP_K.find_key(_dksql)
               || FAP_K.WB:=__zakkos.ROZ;
                  {? FZ.KIND='M' & FAP_K.FAP=null() & _idfk<>''
                  || _fap:=exec('FindInSet','#table','FAP2DK','DK',_dksql,'Z',"@.FAP2DK.FAP",,,'');
                     {? _fap<>'' || FAP_K.FAP:=exec('FindAndGet','#table',FAP,_fap,,,null()) ?}
                  ?};
                  FAP_K.KK:={? __zakkos.KKSQL='' || null() || exec('FindAndGet','#table',KK,__zakkos.KKSQL,,,null()) ?};
                  FAP_K.put(1)
               || FAP_K.blank;
                  FAP_K.FAKS_K:=_faks_k;
                  FAP_K.FAP:=null();
                  FAP_K.DKSQL:=_dksql;
                  FAP_K.WB:=__zakkos.ROZ;
                  {? FZ.KIND='M' & FAP_K.FAP=null() & _idfk<>''
                  || _fap:=exec('FindInSet','#table','FAP2DK','DK',_dksql,'Z',"@.FAP2DK.FAP",,,'');
                     {? _fap<>'' || FAP_K.FAP:=exec('FindAndGet','#table',FAP,_fap,,,null()) ?}
                  ?};
                  FAP_K.KK:={? __zakkos.KKSQL='' || null() || exec('FindAndGet','#table',KK,__zakkos.KKSQL,,,null()) ?};
                  FAP_K.IDND:=FAP_K.FAKS_K().IDND;
                  FAP_K.add(1)
               ?};
               _buf.clear();
               _buf.prefix(_dksql);
               {? _buf.first()
               || _buf.KK+=__zakkos.ROZ;
                  _buf.put(1)
               || _buf.blank();
                  _buf.DKSQL:=_dksql;
                  _buf.KK:=__zakkos.ROZ;
                  _buf.add(1)
               ?}
            ?}
         ?};
         __zakkos.next
      !}
   ?};
   _spkosz:=0;
   _buf.clear();
   {? _buf.first()
   || {!
      |? _dokl_c:=exec('FindAndGet','#table',DK,_buf.DKSQL,,"M().DOKL_C",0);
         _roz:=_buf.KK;
         _ilr:=exec('FindAndGet','#table',DK,_buf.DKSQL,,"IL",0);
         _cena:=exec('FindAndGet','#table',DK,_buf.DKSQL,,"C",0)
               -exec('FindInSet','#table','FAP_K','DKSQL',_buf.DKSQL,_buf.DKSQL,"@.FAP_K.CK",,,0);
         _cenak:=_roz/_ilr $_dokl_c;
         _koszo:=((_cena+_cenak)*_ilr$_dokl_c)-((_cena*_ilr)$_dokl_c);
::         _koszm:=((_cena+_cenak-0.01)*_ilr$_dokl_c)-((_cena*_ilr)$_dokl_c);
::         _koszp:=((_cena+_cenak+0.01)*_ilr$_dokl_c)-((_cena*_ilr)$_dokl_c);
         {? (_koszo<>_roz & ~_spkosz)
         || _spkosz:=FUN.choice('Po przeliczeniu kosztów wg ceny występują różnice\n'
                                'do zadeklarowanej wartości kosztu dla pozycji.\n'
                                'Proszę wybrać sposób przypisania kosztu'@
                      ,1,'&Obliczony'@,'Za&niżony'@,'Za&wyżony'@);
            {? ~_spkosz || _spkosz:=1 ?}
         ?};
         {? (_koszo<>_roz) & _spkosz>1 || _cenak:=_cenak+({? _spkosz=2 || -1 || 1 ?}*0.01) ?};
         _koszt:=((_cena+_cenak)*_ilr$_dokl_c)-((_cena*_ilr)$_dokl_c);
         _cena+=_cenak $ _dokl_c;
         _warc:=(_ilr*_cena)$2;
         _bfk.clear();
         {? _bfk.first()
         || {!
            |? _faks_k:=exec('FindAndGet','#table',FAKS_K,_bfk.FAKS_K,,,null());
               {? _faks_k<>null()
               || FAP_K.index('DK');
                  FAP_K.prefix(_faks_k,_buf.DKSQL);
                  {? FAP_K.first()
                  || {!
                     |? FAP_K.CK:=_cenak;
                        FAP_K.put(1);
                        FAP_K.next()
                     !}
                  ?}
               ?};
               _bfk.next()
            !}
         ?};
         _buf.next()
      !}
   ?};
   obj_del(_buf);
   obj_del(_bfk)
?};
{? FZ.KIND='Z' & __wycena || exec('wycenND','faktury_wspolne',FAKS.ref(),1) ?};
~~


\posvfakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji pola stawka VAT
::  OLD: \posvfakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS_K.SV<>null
|| exec('sumafakk','faktury_wspolne');
   1
|? ~exec('prwbfakk','faktury_wspolne',1)
|| FUN.info('Należy podać stawkę VAT.'@);
   0
|| 1
?}


\sumafakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: oblicza wartosc po redakcji pola wartosc w walucie
::  OLD: \sumafakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_wsp:=(#((FAKS_K.SV().KOD*'%')+FAKS_K.SV().KOD-1))*0.01;
{? _wsp<>0
|| FAKS_K.WV:=FAKS_K.WN*_wsp $2
|| FAKS_K.WV:=0
?};
FAKS_K.WB:=FAKS_K.WN+FAKS_K.WV;
1


\prwwfakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcja pola wartosci w walucie
::   WY: jesli waluta rozna od narodowej to mozna edytowac
::  OLD: \prwwfakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
FAKS_K.WAL<>INFO.NAROD


\powwfakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji pola wartosc w walucie
::  OLD: \powwfakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS_K.WW>0
|| {? FAKS_K.ROZLICZ='N' & FZ.KIND='M'
   || FAKS_K.WB:={? FAKS_K.KRS<>0 || FAKS_K.WW*FAKS_K.KRS || FAKS_K.KRS:=1; FAKS_K.WW ?} $2
   || FAKS_K.WN:={? FAKS_K.KRS<>0 || FAKS_K.WW*FAKS_K.KRS || FAKS_K.KRS:=1; FAKS_K.WW ?} $2
   ?};
   1
|| FUN.info('Należy podać wartość w walucie.'@);
   0
?}


\prkrfakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcja pola kurs dla waluty
::   WY: jesli waluta rozna od narodowej to mozna edytowac
::  OLD: \prkrfakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
FAKS_K.WAL<>INFO.NAROD


\pokrfakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji pola kurs na kosztach dodatkowych = faktura zakupowa
::  OLD: \pokrfakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------

{? FAKS_K.KRS>0
|| {? FAKS_K.ROZLICZ='N' & FZ.KIND='M'
   || FAKS_K.WB:={? FAKS_K.KRS<>0 || FAKS_K.WW*FAKS_K.KRS || FAKS_K.WW ?} $2
   || FAKS_K.WN:={? FAKS_K.KRS<>0 || FAKS_K.WW*FAKS_K.KRS || FAKS_K.WW ?} $2
   ?};
   1
|| FUN.info('Należy podać wartość kursu.'@);
   0
?}


\powafakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji pola waluta
::  OLD: \powafakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS_K.WAL<>null
|| {? FAKS_K.WAL=INFO.NAROD || FAKS_K.WW:=0; FAKS_K.KRS:=0 ?};
   1
|| FUN.info('Należy podać walutę.'@);
   0
?}


\pownfakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji pola wartosc w walucie
::  OLD: \pownfakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAKS_K.WN>0
|| exec('sumafakk','faktury_wspolne');
   1
|| FUN.info('Należy podać wartość netto.'@);
   0
?}


\powvfakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji pola wartosc VAT
::  OLD: \powvfakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
exec('sumafakk','faktury_wspolne');
1


\powbfakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji pola wartosc brutto
::  OLD: \powbfakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('prwbfakk','faktury_wspolne',1)
|| exec('sumafakk','faktury_wspolne')
?};
1


\prwnfakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcja pola FAKS_K.WN
::  OLD: \prwnfakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
~exec('prwbfakk','faktury_wspolne',1) & FAKS_K.WAL=INFO.NAROD


\blfakkrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MAKO [2010]
:: OPIS: Wartosc poczatkowa pola FAKS_K.KRS
::  OLD: \blfakkrs/umowy.fml
::----------------------------------------------------------------------------------------------------------------------
:: FAKS.KRS
FZ.KRS


\sprfp2dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy sa jakies pozycje nie powiazane z dok.magazynowymi
::   WE: _a - ref FAKS-a
::   WY: 1-sa 0-nie ma 2-pozostaly wylacznie uslugi
::  OLD: \sprfp2dk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_usl:=0;
FAP.cntx_psh;
FAP.index('FAP');
FAP.prefix(_a);
{? FAP.first
|| {!
   |? {? FAP.M().RODZ='T'
      || BEER.JMZ:=FAP.FAKS().JMZ;
         _fapil:={? FAP.FAKS().SZ='Z' & BEER.JMZ & FAP.J2<>FAP.JM & FAP.WS2<>1 || FAP.IL2 || FAP.IL ?};
         _ilr:=exec('ile_rozf','faktury_wspolne',$FAP.ref,FAP.FAKS().WHERE);
         _wyn:=(_fapil-_ilr)>0
      || _usl:=1
      ?};
      ~_wyn & FAP.next
   !}
?};
FAP.cntx_pop;
{? ~_wyn & _usl || 2 || _wyn ?}


\dok_maga
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: generacja dokumentu magazynowego na podstawie pozycji faktury zakupowej
::   WE: _a - uruchomiony automatycznie
::       _b - typ dokumentu magazynowego
::   WY: ref SQL ND-udalo sie, ''-zrezygnowano, nie udalo sie
::  OLD: \dok_maga/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
:: sprawdzenie czy dokument ma podpiete pozycje zakupowe i czy nie jest juz powiazany z dok.magazynowym
_wyn:='';

_reffaks:=FAKS.ref;

:: dostepne magazyny
ZAKR.TYPYDOK:={? _b<>null() || exec('FindAndGet','#table',TYPYDOK,_b,,"T",'') || '' ?};
ZAKR.win_edit('PZZAK');
ZAKR.MGSYM:=ST.MAG().SYM;
HELP.MJS:={? FAKS.WHERE='Z' || 'K' || 'E' ?};
ZAKR.DP:=FAKS.D;
_auto:=_a
        & exec('sprpzzak','faktury_wspolne',0)
        & exec('po_mgsym','faktury_wspolne',0)
        & exec('po_zknnd','zamsiw_rea',ZAKR.TYPYDOK,0);
_edit:=0;
{? _auto
  | {? FAKS.ZAK='T' & ~_a
    || FUN.ask('Dokument zakupu jest zaksięgowany.\nCzy na pewno chcesz utworzyć dokument magazynowy?'@)
    || 1
    ?}
   & (_edit:=ZAKR.edit("exec('sprpzzak','faktury_wspolne')"); {? _edit || 1 || _edit:=-1; 0 ?})
   & exec('chk_mx','faktury_wspolne',FAKS.ref(),exec('FindInSet','#table','MG','MAGAZYNY',ZAKR.MGSYM,ZAKR.MGSYM))
||
   _mag:=exec('FindInSet','#table','MG','MAGAZYNY',ZAKR.MGSYM,ZAKR.MGSYM);
   _skl:=exec('FindInSet','#table','MG','MAGAZYNY',ZAKR.MGSYM,ZAKR.MGSYM,"MG.SKL",,,'')='T';
   _typ:=exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TYPYDOK,ZAKR.TYPYDOK);

:: tworzymy naglowek dokumentu na podanym magazynie
   _nag:=exec('gen_nagl','zamsiw_rea',ZAKR.DP,_typ,_mag,FAKS.KH,null,null,_skl,0,,,,,,,ZAKR.TP,FAKS.PROJEKTY);
   {? _nag<>null & (ND.clear; ND.seek(_nag))
   || _dst:=(1+ND.MAG().TYP)='D';
::    symbol faktury zakupowej
::    wylaczono: DPU/wielgusa/EMAG/2008/10/44/6
::    ND.FZAK:=FAKS.SYM;
::    ND.put(1);
::    pozycje wg faktury

::    tworzenie informacji dodatkowych
      exec('inf_dod','fakso',0,'nagdo');

      do();
      FAP.index('FAP');
      FAP.prefix(FAKS.ref);
      {? FAP.first
      || _spkosz:=0;
         _skl:=ND.MAG().SKL='T';
         _only:=ND.MAG().IL='T';
         {!
         |? BEER.JMZ:=FAP.FAKS().JMZ;
            _jmz:=BEER.JMZ & FAP.J2<>FAP.JM & FAP.WS2<>1;
            _ewi:=FAP.M().J2<>null();
            _po2:={? _jmz || FAP.J2=FAP.M().J || 0 ?};
            _fapil:={? _po2 || FAP.IL2 || FAP.IL ?};
            _fapi2:={? _po2 || FAP.IL || FAP.IL2 ?};
            {? FAP.M().RODZ='T' & (_ilr:=exec('ile_rozf','faktury_wspolne',$FAP.ref,FAKS.WHERE); (_fapil-_ilr)>0)
            || _koszt:=exec('warkoszt','faktury_wspolne',FAP.ref,1);
               _dokl_c:=FAP.M().DOKL_C;
               _dokl_z:=FAP.M().DOKL_Z;
               {? _ilr=0 & _koszt=0 & (_skl=0 & FAKS.WAL=INFO.NAROD | _skl=1 & FAKS.NKRS=ND.SCKRS)
               || _cenak:=0;
                  _cena:={? _jmz || FAP.CN*FAP.WS2 $_dokl_c || FAP.CN ?};
                  _war:=_warc:={? _jmz || FAP.WN*FAP.WS2 $2 || FAP.WN ?}
               || _wn:=FAP.WN;
                  _war:=
                     {? _skl=1 & FAKS.NKRS>0
                     || {? FAP.FAKS().T().SPP='T'
                        || ((_wn/FAKS.NKRS)$2*ND.SCKRS)$2
                        || (((((_wn/_fapil)$2/FAKS.NKRS)$2)*_fapil)$2*ND.SCKRS)$2
                        ?}
                     || _wn
                     ?};
                  _cena:={? _fapil=0 || 0 || (_war/_fapil)$_dokl_z ?};
                  _cenak:=_koszt/(_fapil-_ilr) $_dokl_z;
                  _koszo:=((_cena+_cenak)*(_fapil-_ilr)$_dokl_z)-((_cena*(_fapil-_ilr))$_dokl_z);
::                  _koszm:=((_cena+_cenak-0.01)*(_fapil-_ilr)$_dokl_z)-((_cena*(_fapil-_ilr))$_dokl_z);
::                  _koszp:=((_cena+_cenak+0.01)*(_fapil-_ilr)$_dokl_z)-((_cena*(_fapil-_ilr))$_dokl_z);
                  {? (_koszo<>_koszt & ~_spkosz)
                  || _spkosz:=FUN.choice('Po przeliczeniu kosztów wg ceny występują różnice\n'
                                         'do zadeklarowanej wartości kosztu dla pozycji.\n'
                                         'Proszę wybrać sposób przypisania kosztu'@
                               ,1,'&Obliczony'@,'Za&niżony'@,'Za&wyżony'@);
                     {? ~_spkosz || _spkosz:=1 ?}
                  ?};
                  {? (_koszo<>_koszt) & _spkosz>1 || _cenak:=_cenak+({? _spkosz=2 || -1 || 1 ?}*0.01) ?};
                  _koszt:=((_cena+_cenak)*(_fapil-_ilr)$_dokl_z)-((_cena*(_fapil-_ilr))$_dokl_z);

                  _cena+=_cenak;
                  _warc:=((_fapil-_ilr)*_cena)$2
               ?};
               _dkc:={? _dst || FAP.DK_C || null ?};
               _prz:=FAP.J2<>FAP.JM;
               _ty2:=FAP.T2;
               {? _prz
               || _wsp:=(_fapil-_ilr)/_fapil;
                  {? _ewi | _jmz
                  || exec('przyjdod','jm',{? ~_po2 || $FAP.J2 || $FAP.JM ?}
                       ,{? ~_po2 || FAP.WS2 || 1/FAP.WS2 ?},_fapi2*_wsp)
                  || exec('przyjdod','jm',$FAP.J2,1/FAP.WS2,FAP.IL2*_wsp)
                  ?}
               |? _ewi & FAP.J2=FAP.JM
               || _wsp:=exec('oblWSP','jm',FAP.M);
                  exec('przyjdod','jm',$FAP.M().J2,_wsp,_fapi2*{? _wsp<>0 || 1/_wsp || 1 ?})
               ?};
               _cena:=_cena $_dokl_c;
               {? _only || _cena:=_warc:=0 ?};
               _ref_dk:=exec('adddk','magdok_poz',_nag,FAP.M,_fapil-_ilr,_cena,ZAKR.DP,,,,,,,,7,,,_dkc,,,,,,,_warc);
               DK.clear();
               {? DK.seek(_ref_dk)
               ||
                  {? (1+DK.N().MAG().TYP)='E'
                  || _cenab:=exec('biez_cen','ceny_dok',DK.M,DK.N().MAG,DK.N().D,,DK.N().T);
                     DK.C:={? _cenab<>0 || _cenab || _cena ?};
                     DK.WAR:=DK.IL*DK.C $2
                  ?};
                  {? DK.N().WAL<>INFO.NAROD
                   & exec('FindInSet','#table','ODDZ','KOD2',ST.ODDZ,ST.ODDZ
                          ,"(ODDZ.WW='*' & ODDZ.TW*'M' | ODDZ.WW='' & INFO.TW*'M')",,,0)
                  || DK.WAL:=DK.N().WAL;
                     DK.KURS:=DK.N().KRS;
                     DK.CWAL:={? DK.KURS<>0 || DK.C/DK.KURS || 0 ?}$_dokl_c
                  ?};
::                uzupelnienie wartosci walutowych dla skladu celnego
                  {? _skl=1
                  || DK.SCC:=(DK.C/ND.SCKRS)$2;
                     DK.SCWAR:=(DK.SCC*DK.IL)$2;
                     DK.C:=(DK.SCC*ND.SCKRS)$_dokl_c;
                     DK.WAR:=(DK.C*DK.IL)$2
                  ?};
::                uzupelnienie ilosci dodatkowych
                  exec('ustawprz','magdok_poz');
                  _jmg:=DK.M().J2;
                  DK.T2:={? _jmg<>null()
                         || 'M'
                         |? exec('get','#params',400000,2)*'MG'
                         || exec('get','#params',400001,2)
                         || 'N'
                         ?};
                  {? DK.T2='N' & _prz || DK.T2:='G' |? DK.T2<>'N' & _prz & _ty2<>DK.T2 & _ty2='R' || DK.T2:='R' ?};
                  {? DK.T2='A' & ~_prz
                  || exec('ustawprz','magdok_poz',DK.M,DK.JM);
                     exec('aktmil2','magdok_poz')
                  |? ~_prz & ~_ewi
                  || DK.J2:=DK.M().J;
                     DK.WS2:=1;
                     DK.IL2:=DK.IL;
                     DK.JM:=DK.M().J
                  ?};
                  {? ND.IST_TYP='P'
                  || DK.KCN:=FAP.KCN;
                     DK.KPW:=FAP.KPW;
                     DK.RTRANSAK:=FAP.RTRANSAK;
                     DK.WD:=FAP.WD;
                     DK.RTRANSPO:=FAP.RTRANSPO;
                     DK.KP:=FAP.KP;
                     {? DK.IL=_fapil
                     ||
                        DK.MASAN:=FAP.MASAN;
                        DK.ILUJM:=FAP.ILUJM
                     ?};
                     DK.WF:=FAP.WF+_warc-_war
                  ?};
                  DK.SV:=FAP.SV;
                  PROJEKTY.cntx_psh();TYPYDOK.cntx_psh();PROJTYPY.cntx_psh();ND.cntx_psh();
                  PROJEKTY.prefix();TYPYDOK.prefix();PROJTYPY.prefix();ND.prefix();
                  DK.N();
                  DK.PROJEKTY:=
                  {? FAP.PROJEKTY<>null & (FAP.PROJEKTY();
                  (ND.TYP().PROJZAKR='Wszystkie' | (4+PROJEKTY.T().R)=(4+ND.TYP().PROJZAKR)))
                  || FAP.PROJEKTY
                  || null
                  ?};
                  PROJEKTY.cntx_pop();TYPYDOK.cntx_pop();PROJTYPY.cntx_pop();ND.cntx_pop();
                  DK.put(1);
::                generuje domyslnego DK_L-a
                  {? DK.N().MAG().SL='T'
                  || exec('add2dk_l','magdok_wspolne',DK.ref(),null,DK.N().MAG().EANL,null,date(0,0,0),date(0,0,0),
                      DK.IL,DK.N().MAG,DK.M)
                  ?};
                  exec('adfap2dk','magdok_wspolne',$FAP.ref,$DK.ref,$FAP.FAKS,$DK.N,(_fapil-_ilr),FAKS.WHERE);
::                aktualizacja informacji o kosztach przepisanych na PZ-tke
                  {? FAKS.WHERE='Z' || exec('dk2koszt','faktury_wspolne',FAP.ref,$DK.ref,_koszt,DK.N().IDADD,_cenak) ?};
::                dopisanie indeksow do magazynu
                  exec('mx_add_auto','material',ND.MAG,DK.M,DK.M().A)
               || undo
               ?}
            ?};
            FAP.next
         !}
      ?};
      echo();
      exec('suma_fsv','faktury_vat');
      _wyn:=$_nag;
      end();
      {? var_pres('__zam')>100 || exec('odt_zk_tymc','zamsiw_wspolne') ?};
      exec('dk_sum','magdok_wspolne',_nag);

      {? ~_auto & FUN.ask('Wystawiono dokument: %1.\n\nWyświetlić powiązane dokumenty?'@[ND.SYM])
      || exec('kor_maga','faktury_wspolne',1)
      ?}
   ?}
?};
{? _edit=-1 || _wyn:='anuluj' ?};
_wyn


\sprpzzak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy podano wszystkie parametry potrzebne do wystawienia dokumentu magazynowego
::   WE: [_a] - tryb sprawdzenia 1(domyślnie) w okienku 0-bez komunikatów
::   WY: 1-jest oki 0-blad
::  OLD: \sprpzzak/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
_wyn:=0;
_mag:={? ZAKR.MGSYM<>'' || exec('FindInSet','#table','MG','MAGAZYNY',ZAKR.MGSYM,ZAKR.MGSYM) || null ?};
{? _mag<>null
|| _old:=BEER.MG;
   BEER.MG:=_mag;
   _dst:=(1+BEER.MG().TYP)='D';
   BEER.MG:=_old
|| _dst:=0
?};

{? ZAKR.DP=date(0,0,0)
|| {? _a || FUN.info('Data nie może być zerowa.'@) ?};
   _wyn:=0
|? _mag=null
|| {? _a || FUN.info('Należy podać magazyn.'@) ?};
   _wyn:=0
|? ~exec('czy_z_ok','okresy',1,0,ZAKR.DP~1,ZAKR.DP~2,_mag)
|| {? _a || FUN.info('Magazyn w podanym okresie jest zamknięty.'@) ?};
   _wyn:=0
|? ZAKR.TYPYDOK=''
|| {? _a || FUN.info('Należy wybrać typ dokumentu magazynowego.'@) ?};
   _wyn:=0
|? (_opc:=exec('sprprzec','magazyn_przec',_mag,ZAKR.DP,,ZAKR.TP))>0
||
:: sprawdza przecene
   {? _a
   || {? _opc=1
      || FUN.info('Do daty dokumentu wprowadzono przecenę.'
                  '\nNależy podać większą datę.'@)
      || FUN.info('Istnieje otwarty arkusz przecen.'
                  '\nNiemożliwe wprowadzenie nowych dokumentów.'@)
      ?}
   ?};
   _wyn:=0
|? ~exec('spr_datn','magdok_wspolne',_mag,ZAKR.DP
     ,exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TYPYDOK,ZAKR.TYPYDOK),0,0,0,,,ZAKR.TP)
|| _wyn:=0
|? _dst & ~exec('zak2dk_c','mat_atr')
|| {? _a
   || {? FAKS.ZAK='T'
      || FUN.info('Dokument zakupu jest zaksięgowany\n'
                  'oraz istnieją pozycje faktury bez przypisanych cech atrybutów dostaw '
                  '(wymagane dla magazynu typu DOSTAWY, DOSTEWI).\n'
                  '\nNiemożliwe wystawienie dokumentu w wybranym typie magazynu.'@)
      || FUN.info('Istnieją pozycje faktury bez przypisanych cech atrybutów dostaw '
                  '(wymagane dla magazynu typu DOSTAWY, DOSTEWI).'
                  '\n\nNależy uzupełnić cechy dostaw na pozycjach faktury.'@)
      ?}
   ?};
   _wyn:=0
|| _wyn:=1
?};
:: dodatkowa kontrola na ewentualność przecen
{? _wyn & exec('FindAndGet','#table',MG,_mag,,"1+TYP",'')='E'
|| _prz:=0;
   FAP.cntx_psh();
   FAP.index('FAP');
   FAP.prefix(FAKS.ref);
   {? FAP.first
   || {!
      |? BEER.JMZ:=FAP.FAKS().JMZ;
         _jmz:=BEER.JMZ & FAP.J2<>FAP.JM & FAP.WS2<>1;
         _fapil:={? _jmz || FAP.IL2 || FAP.IL ?};
         {? FAP.M().RODZ='T' & (_ilr:=exec('ile_rozf','faktury_wspolne',$FAP.ref,FAKS.WHERE); (_fapil-_ilr)>0)
         || _prz:=exec('sprprzec','magazyn_przec',_mag,ZAKR.DP,FAP.M,ZAKR.TP)
         ?};
         _prz<3 & FAP.next()
      !}
   ?};
   FAP.cntx_pop();
   {? _prz=3
   || {? _a
      || FUN.info('Jeden z indeksów materiałowych pozycji faktury znajduję się na otwartym arkuszu przecen.\n'
          '(data dokumentu jest mniejsza lub równa dacie przeceny).\n'
          'Należy podać większą datę.'@)
      ?};
      _wyn:=0
   |? _prz=4
   || {? _a
      || FUN.info('Jeden z indeksów materiałowych pozycji faktury znajduję się na zamkniętym arkuszu przecen\n'
          '(data dokumentu jest mniejsza lub równa dacie przeceny).\n'
          'Należy podać większą datę.'@)
      ?};
      _wyn:=0
   ?}
?};
_wyn


\chk_mx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: sprawdza czy dodawac indeksy do magazynu
::   WE: _a-FAKS.ref
::       _b-MG.ref
::   WY: 1-dodawac indeksy lub nie dotyczy; 0-nie dodawac indeksow
::  OLD: \chk_mx/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
FAP.cntx_psh();
FAP.index('FAP');
FAP.prefix(FAKS.ref);
{? FAP.first()
|| _cont:=1;
   {!
   |? {? FAP.M().RODZ='T' & (_ilr:=exec('ile_rozf','faktury_wspolne',$FAP.ref,FAKS.WHERE); (FAP.IL-_ilr)>0)
      || {? exec('mx_brak','material',_b,FAP.M)=0
         || _wyn:=FUN.ask('Istnieje materiał nieprzypisany do magazynu.\nCzy przypisać indeksy do magazynu?'@);
            _cont:=0
         ?}
      ?};
      _cont=1 & FAP.next()
   !}
?};
FAP.cntx_pop();
_wyn


\warkoszt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: zwraca sumaryczna wartosc kosztu do pozycji
::   WE: _a - ref pozycji
::       _b - suma przypisanego-0 suma nieprzypisanego-1 suma calosci-2
::   WY: wartosc kosztu
::  OLD: \warkoszt/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
FAP_K.cntx_psh();
FAP_K.index('FAP_K');
FAP_K.prefix(_a);
{? FAP_K.first()
|| {!
   |? {? (_b=0 & FAP_K.DKSQL<>'') | (_b=1 & FAP_K.DKSQL='') | _b=2 || _wyn+=FAP_K.WB ?};
      FAP_K.next()
   !}
?};
FAP_K.cntx_pop();
_wyn


\dk2koszt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: aktualizacja informacji o rozpisanym koszcie
::   WE: _a - ref pozycji
::       _b - DK ref SQL
::       _c - przypisany koszt
::       _d - wskazanie na dokument magazynowy
::       _e - cena kosztu
::  OLD: \dk2koszt/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
FAKS_K.cntx_psh();
FAP_K.cntx_psh();
FAP_K.index('FAP_K');
FAP_K.prefix(_a);
{? FAP_K.first()
|| {!
   |? {? FAP_K.DKSQL=''
      || FAP_K.DKSQL:=_b;
         FAP_K.WDK:=_c;
         FAP_K.IDND:=_d;
         {? FAP_K.FAKS_K().ROZLICZ='T'
         || FAP_K.WYC:=1;
            FAP_K.CK:=_e
         ?};
         {? FAP_K.put(1) & FAP_K.FAKS_K<>null()
         || FAKS_K.prefix();
            {? FAKS_K.seek(FAP_K.FAKS_K)
            || FAKS_K.IDND:=_d;
               FAKS_K.put(1)
            ?}
         ?}
      ?};
      FAP_K.next()
   !}
?};
FAKS_K.cntx_pop();
FAP_K.cntx_pop();
1


\kor_maga
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: pobiera dokumenty magazynowe zwiazane z dana faktura
::   WE: [_a] - czy tylko wyswietlic informacje-1 domyslnie 0-nie wyswietlamy
::  OLD: \kor_maga/faktury_wspolne
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};

exec('tab_maga','faktury_wspolne',_a);

:: wypelniamy informacje o dotychczas powiazanych dokumentach magazynowych
FAKS.get();
_ref:=#FAKS.ref();
_msk:=FAKS.name();
_rodz:=FAKS.WHERE;

FAKS.cntx_psh;
{!
|?
   FAKS.cntx_psh;
   FAKS.use(_msk);
   FAKS.clear;
   {? FAKS.seek(_ref,_msk)
   || _faks:=$FAKS.ref;
      _ref:=BB.sqlint(FAKS.LKSQL);
      _msk:=form(8+FAKS.LKSQL)
   || _faks:='';
      _ref:=0;
      _msk:=''
   ?};
   FAKS.cntx_pop();

   FAP2DK.index('FAKS');
   FAP2DK.prefix(_rodz,_faks);
   {? FAP2DK.first
   || _nd:='';
      {!
      |? {? FAP2DK.ND<>'' & FAP2DK.DK<>''
         || ND.cntx_psh();
            DK.cntx_psh();
            ND.use(form(8+FAP2DK.ND));
            DK.use(form(8+FAP2DK.DK));
            ND.clear();
            DK.clear();
            {? _nd<>FAP2DK.ND
            ||
               {? ND.seek(FAP2DK.ND,form(8+FAP2DK.ND))
               || __magzak.clear;
                  __magzak.blank;
                  __magzak.TREE:=0;
                  __magzak.LAB:=ND.MAG().SYM+' ... '+ND.TYP().T+' ... '+ND.SYM;
                  __magzak.KTM:='';
                  __magzak.REF:=FAP2DK.ND;
                  __magzak.LPP:=ND.NR;
                  _korzen:={? __magzak.add || #__magzak.ref || 0 ?};
                  _nd:=FAP2DK.ND
               ?}
            ?};
            {? DK.seek(FAP2DK.DK,form(8+FAP2DK.DK))
            || __magzak.clear;
               __magzak.blank;
               __magzak.TREE:=_korzen;
               __magzak.LAB:='('+DK.M().RODZ+') '+DK.M().KTM;
               __magzak.KTM:=DK.M().KTM;
               __magzak.ILE:=DK.IL;
               __magzak.CEN:=DK.C;
               __magzak.KOR:=0;
               __magzak.ILP:=0;
               __magzak.LPP:=DK.P;
               __magzak.JMI:=DK.M().J().KOD;
               __magzak.ILR:=FAP2DK.IL;
               __magzak.add
            ?};
            ND.cntx_pop();
            DK.cntx_pop()
         ?};
         FAP2DK.next()
      !}
   ?};
   _ref<>0
!};
FAKS.cntx_pop();
:: obecna korekta - pozycje do rozpisania
__magzak.clear;
__magzak.blank;
__magzak.TREE:=0;
__magzak.LAB:=FAKS.T().T+' ... '+FAKS.SYM;
__magzak.KTM:='';
__magzak.REF:=$FAKS.ref;
__magzak.LPP:=FAKS.NR;
_korzen:={? __magzak.add || #__magzak.ref || 0 ?};

FAP.index('FAP');
FAP.prefix(FAKS.ref);
{? FAP.first
|| {!
   |? exec('wysw_kor','faktury_poz');
      BEER.JMZ:=FAP.FAKS().JMZ;
      _jmz:=BEER.JMZ & FAP.J2<>FAP.JM & FAP.WS2<>1;
      _fapil:={? _jmz || FAP.IL2 || FAP.IL ?};
      {? _fapil<>0 | FAP.CN<>0
      || __magzak.clear;
         __magzak.blank;
         __magzak.TREE:=_korzen;
         __magzak.LAB:='('+FAP.M().RODZ+') '+FAP.M().KTM;
         __magzak.KTM:=FAP.M().KTM;
         __magzak.ILE:=_fapil;
         __magzak.CEN:={? (FKOR.IL+FAP.IL)=0
                       || 0
                       || FAP.CPR*{? _jmz || FAP.WS2 || 1 ?} $FAP.M().DOKL_Z
                       ?};
         __magzak.KOR:=0;
         __magzak.ILP:=0;
         __magzak.LPP:=FAP.POZ;
         __magzak.JMI:=FAP.M().J().KOD;
         __magzak.ILR:=exec('ile_rozf','faktury_wspolne',$FAP.ref(),FAP.FAKS().WHERE);
         __magzak.add
      ?};
      FAP.next
   !}
?};
__magzak.clear();
_ndx:=__magzak.ndx_tmp(,,'TREE',,,'REF',,,'LPP',,);
__magzak.index(_ndx);
__magzak.select();
__magzak.ndx_drop(_ndx)


\rek_korm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: rekord dla pozycji korekt magazynowych
::  OLD: \rek_korm/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
0


\f3_mgsym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: klawisz F3 dla wyboru magazynu - wg uprawnien operatora
::  OLD: \f3_mgsym/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
OPERATOR.USER();
_ref_mg:=exec('FindInSet','#table','MG','MAGAZYNY',ZAKR.MGSYM,ZAKR.MGSYM);
{? _ref_mg=null || _ref_mg:=exec('FindInSet','#table','MG','MAGAZYNY',ZAKR.MGSYM) ?};
{? exec('upr_wys','users','MG',,'MGSEL',1,_ref_mg)
|| ZAKR.MGSYM:=USERS_UP.MG().SYM;
   1
|| 0
?}


\po_mgsym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: klawisz F3 dla wyboru magazynu - wg uprawnien operatora
::   WE: [_a] - tryb sprawdzenia 1(domyślnie) w okienku 0-bez komunikatów
::  OLD: \po_mgsym/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

_wyn:=1;
_ref_mg:=exec('FindInSet','#table','MG','MAGAZYNY',ZAKR.MGSYM,ZAKR.MGSYM);
{? _ref_mg=null
|| _sym_mag:=exec('FindInSet','#table','MG','MAGAZYNY',ZAKR.MGSYM,,"MG.SYM",,,'');
   {? _sym_mag<>'' || ZAKR.MGSYM:=_sym_mag ?}
?};
USERS_UP.index('MGS');
USERS_UP.prefix(OPERATOR.USER,'MG');
{? ZAKR.MGSYM<>'' & USERS_UP.find_key(ZAKR.MGSYM,ZAKR.MGSYM)
|| {? USERS_UP.MG().PAL='T'
   || {? _a || FUN.info('Magazyn: %1 jest magazynem z obsługą palet.\nGeneracja dokumentu niemożliwa.'@[ZAKR.MGSYM]) ?};
      _wyn:=0
   |? exec('czyinw_a','magazyn_inw',USERS_UP.MG)
   || {? _a || FUN.info('W magazynie: %1 otwarta inwentaryzacja pełna.'@[ZAKR.MGSYM]) ?};
      _wyn:=0
   ?}
|| {? _a
   || {? ZAKR.MGSYM=''
      || FUN.info('Należy podać magazyn na którym ma zostać wygenerowany dokument.'@)
      || FUN.info('Brak uprawnień do podanego magazynu.'@)
      ?}
   ?};
   _wyn:=0
?};
_wyn


\seek_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Ustawia się na dokumencie _b jeśli aktywny obszar _a
::   WE: _a - obszar roboczy [0/1]
::       _b - FAKS.ref
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_area:=_a;
_ref:=_b;
_mp:=params_get().mp;
_res:=0;

::   {? FAKS.HIDDEN='N'
::      & FAKS.name()+2<>'hs'
::      & (FAKS.f_active()=1 | (FAKS.f_active()>1 & FAKS.f_test()))
::   || FAKS.f_add()
::   ?};

{? _area
|| _test:=2;
   _f_act:=FAKS.f_active();
   {? _f_act
   || {? ~(_res:=FAKS.f_seek(_ref))
      || FAKS.cntx_psh();
         {? FAKS.ref()=_ref
         || _jest:=1
         || _jest:=FAKS.seek(_ref,,1)
         ?};
         {? _jest
         || {? _f_act>=2
            || _test:=FAKS.f_test()
            ?};
            {? _test
            || _res:=FAKS.f_add()
            ?}
         ?};
         FAKS.cntx_pop();
         {? _test
         || _res:=FAKS.f_seek(_ref)
         ?}
      ?}
::   {? FAKS.f_active()
::   || {? ~(_res:=FAKS.f_seek(_ref)) || (_res:=FAKS.f_add()); _test:=FAKS.f_test() ?}
   || _res:=FAKS.seek(_ref)
   ?};
   {? ~_res | ~_test
   || FUN.info('Dokument %1 nie spełnia '
       'aktualnie ustawionych ograniczeń widoku.'@[exec('FindAndGet','#table',FAKS,_ref,,"SYM",'')])
   ?}
?};
_res


\faks_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PS] [17.00]
:: OPIS: Formuła na rekord przed dla okien wertowania tabeli FAKS.
::       Zwraca kolor dla nagłówka dokumentu sprzedaży / zakupu.
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.ZAK='T'      || 'FAKS#01#02'
|? FAKS.STAT_REJ='T' || 'FAKS#01#01'
|? FAKS.STAT_REJ='A' || 'FAKS#01#03'
|| ''
?}


\fakz_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [DG] [20.14]
:: OPIS: Formuła na rekord przed dla okien wertowania tabeli FAKZ.
::       Zwraca kolor dla nagłówka dokumentu.
::----------------------------------------------------------------------------------------------------------------------
{? FAKZ.CZY_FAK='N' || 'FAKZ#01#01'
|? FAKZ.CZY_FAK='T' || 'FAKZ#01#02'
|| ''
?}


\kh2rbk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.41]
:: OPIS: Kontrahent dla którego wyznaczany będzie rachunenk bankowy
::   WE:
::   WY:
::  OLD: \kh2rbk/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
_kh:={? FAKS.KH_ODB().ROZ_NAL='T' || FAKS.KH_ODB().KH_LNK || FAKS.KH ?}


\fakz_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Zwraca okno redakcji tabeli FAKZ
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_akr:='RED';
_title:='Zlecenie fakturowania';
_win_red:=FAKZ.mk_edit(_title,,'fakzfakzfakzfa',,,'html_maximized');
FAKZ.win_etab(_win_red,'Dane podstawowe'@);
FAKZ.win_ewin(_win_red,,_win_akr);
FAKZ.win_etab(_win_red,'Uwagi'@);
FAKZ.win_ewin(_win_red,,'UWAGI');
FAKZ.win_etab(_win_red,'Dane dodatkowe'@);
FAKZ.win_ewin(_win_red,,'INNE');
_win_red


\fakz_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Oblicza wartość zlecenia fakturowania
::----------------------------------------------------------------------------------------------------------------------
{? FAKZ.KOREKTA<>'T'
|| FAKZ.WN:=(FAKZ.IL*FAKZ.CN)$2;
   FAKZ.WB:=(FAKZ.IL*FAKZ.CB)$2
?};
~~


\zlf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Cz dotyczy zlecenia fakturowania?
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy dotyczy zlecenia fakturowania?'@)
|| 'TAK'
|| 'NIE'
?}


\duplikuj_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Zapamiętanie danych kontrahenta i odbiorcy do wykorzystania w wydrukach faktur i duplików faktur
::   WE: _a - '' lub 'KH'
::       _b - '' lub 'KH_ODB'
::       [_c] - warunek
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_condition:={? var_pres('_c')=type_of(0) || _c || 1 ?};
{? _condition & (FAKS.T().KOR='T' & FAKS.T().HIS='N' | FAKS.WHERE='N')
||
   _params:=obj_new('DW','TS','ZWYKLA','ONUM');
   _params.DW:=FAKS.DW;
   _params.TS:=FAKS.T;
   _params.ZWYKLA:=1;
   _params.ONUM:=exec('FindAndGet','#table',FAKS,FAKS.LKSQL,,"FAKS.ONUM",0);
   _faks:=exec('FindAndGet','#table',FAKS,FAKS.LKSQL,,"
      _params:=_b;
      _dw:=_params.DW;
      _ts:=_params.TS;
      _zwykla:=_params.ZWYKLA;
      _onum:=_params.ONUM;
      exec('faks_przed_kor','faktury_nag',_dw,_ts,_zwykla,,_onum)
   ",~~,_params);
   {? type_of(_faks)<>type_of(~~)
   ||
      {? _a='KH'
      ||
         {? FAKS.KH<>_faks.KH | (FAKS.T().KOR='T' & FAKS.WHERE<>'N')
         ||
            exec('duplikuj_dane_kh','faktury_wspolne')
         ||
            FAKS.NAZ:=_faks.NAZ;
            FAKS.MIASTO:=_faks.MIASTO;
            FAKS.UL:=_faks.UL;
            FAKS.DOM:=_faks.DOM;
            FAKS.LOKAL:=_faks.LOKAL;
            FAKS.KPOCZ:=_faks.KPOCZ;
            FAKS.POCZ:=_faks.POCZ;
            FAKS.NIP:=_faks.NIP;
            FAKS.KH_KRAJ:=_faks.KH_KRAJ;
            FAKS.KH_KRISO:=_faks.KH_KRISO
         ?}
      ?};
      {? _b='KH_ODB'
      ||
         {? FAKS.KH_ODB<>_faks.KH_ODB | (FAKS.T().KOR='T' & FAKS.WHERE<>'N')
         ||
            exec('duplikuj_dane_khodb','faktury_wspolne')
         ||
            FAKS.O_NAZ:=_faks.O_NAZ;
            FAKS.O_MIASTO:=_faks.O_MIASTO;
            FAKS.O_UL:=_faks.O_UL;
            FAKS.O_DOM:=_faks.O_DOM;
            FAKS.O_LOKAL:=_faks.O_LOKAL;
            FAKS.O_KPOCZ:=_faks.O_KPOCZ;
            FAKS.O_POCZ:=_faks.O_POCZ;
            FAKS.O_NIP:=_faks.O_NIP;
            FAKS.O_KRAJ:=_faks.O_KRAJ;
            FAKS.O_KRISO:=_faks.O_KRISO
         ?}
      ?}
   ||
      {? _a='KH'
      ||
         FAKS.NAZ:='';
         FAKS.MIASTO:='';
         FAKS.UL:='';
         FAKS.DOM:='';
         FAKS.LOKAL:='';
         FAKS.KPOCZ:='';
         FAKS.POCZ:='';
         FAKS.NIP:='';
         FAKS.KH_KRAJ:='';
         FAKS.KH_KRISO:=null()
      ?};
      {? _b='KH_ODB'
      ||
         FAKS.O_NAZ:='';
         FAKS.O_MIASTO:='';
         FAKS.O_UL:='';
         FAKS.O_DOM:='';
         FAKS.O_LOKAL:='';
         FAKS.O_KPOCZ:='';
         FAKS.O_POCZ:='';
         FAKS.O_NIP:='';
         FAKS.O_KRAJ:='';
         FAKS.O_KRISO:=null()
      ?}
   ?}
||
   {? _a='KH' || exec('duplikuj_dane_kh','faktury_wspolne') ?};
   {? _b='KH_ODB' || exec('duplikuj_dane_khodb','faktury_wspolne') ?}
?}


\duplikuj_dane_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Zapamiętanie danych kontrahenta do wykorzystania w wydrukach faktur i duplików faktur
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.KH
|| FAKS.NAZ:=FAKS.KH().NAZ_P;
   FAKS.MIASTO:=KH.MIASTO;
   FAKS.UL:=KH.UL;
   FAKS.DOM:=KH.DOM;
   FAKS.LOKAL:=KH.LOKAL;
   FAKS.KPOCZ:=KH.KPOCZ;
   FAKS.POCZ:=KH.POCZ;
   FAKS.NIP:=KH.NIP;
   FAKS.KH_KRAJ:=KH.KRAJ;
   FAKS.KH_KRISO:=KH.KRAJISO
||
   FAKS.NAZ:='';
   FAKS.MIASTO:='';
   FAKS.UL:='';
   FAKS.DOM:='';
   FAKS.LOKAL:='';
   FAKS.KPOCZ:='';
   FAKS.POCZ:='';
   FAKS.NIP:='';
   FAKS.KH_KRAJ:='';
   FAKS.KH_KRISO:=null()
?}


\duplikuj_dane_khodb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Zapamiętanie danych odbiorcy kontrahenta do wykorzystania w wydrukach faktur i duplików faktur
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.KH_ODB
|| FAKS.O_NAZ:=FAKS.KH_ODB().NAZ;
   FAKS.O_MIASTO:=KH_ODB.MIASTO;
   FAKS.O_UL:=KH_ODB.UL;
   FAKS.O_DOM:=KH_ODB.DOM;
   FAKS.O_LOKAL:=KH_ODB.LOKAL;
   FAKS.O_KPOCZ:=KH_ODB.KPOCZ;
   FAKS.O_POCZ:=KH_ODB.POCZ;
   {? KH_ODB.KH_LNK=null() | KH_ODB.JST<>'T'
   || FAKS.O_NIP:=KH_ODB.NIP
   || FAKS.O_NIP:=''
   ?};
   FAKS.O_KRAJ:=KH_ODB.KRAJ;
   FAKS.O_KRISO:=KH_ODB.KRAJISO
|| FAKS.O_NAZ:='';
   FAKS.O_MIASTO:='';
   FAKS.O_UL:='';
   FAKS.O_DOM:='';
   FAKS.O_LOKAL:='';
   FAKS.O_KPOCZ:='';
   FAKS.O_POCZ:='';
   FAKS.O_NIP:='';
   FAKS.O_KRAJ:='';
   FAKS.O_KRISO:=null()
?}


\fakz2fap_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Usuwa powiązania zleceń fakturowania do pozycji lub nagłówka faktury
::   WE: _a - FAKS.ref lub FAP.ref
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FAKZ.cntx_psh();
FAKZ2FAP.cntx_psh();
{? ref_tab(_a)=FAP
|| FAKZ2FAP.index('FAP');
   FAKZ2FAP.prefix(_a)
|? ref_tab(_a)=FAKS
|| FAKZ2FAP.index('FAKS');
   FAKZ2FAP.prefix(_a,null())
?};
_loop:=FAKZ2FAP.first();
{!
|? _loop
|!
   {? +FAKZ2FAP.FAKZ=48
   ||
      FAKZ.use(ref_name(FAKZ2FAP.FAKZ));
      FAKZ.prefix();
      {? FAKZ.seek(FAKZ2FAP.FAKZ)
      || FAKZ2FAP.cntx_psh();
         FAKZ2FAP.index('FAKZ');
         FAKZ2FAP.prefix(FAKZ.uidref());
         {? FAKZ2FAP.first() & FAKZ2FAP.next()=0
         || FAKZ.CZY_FAK:='N';
            FAKZ.put()
         ?};
         FAKZ2FAP.cntx_pop()
      ?}
   ?};
   _loop:=FAKZ2FAP.del()
!};
FAKZ2FAP.cntx_pop();
FAKZ.cntx_pop()


\fakz2fap_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Zapis w tabeli powiązań zleceń fakturowania z pozycjami faktur lub fakturami
::   WE: _a - FAKZ.uidref()
::       _b - FAKS.ref()
::       _c - FAP.ref() lub null jeśli powiązanie tylko z fakturą
::   WY: 0-zapis nie powiódł się, 1-zapis zakończył się powodzeniem
::----------------------------------------------------------------------------------------------------------------------
FAKZ2FAP.prefix();
FAKZ2FAP.blank();
FAKZ2FAP.FAKZ:=_a;
FAKZ2FAP.FAKS:=_b;
FAKZ2FAP.FAP:=_c;
do();
FAKZ2FAP.add();
FAKZ.cntx_psh();
FAKZ.prefix();
{? FAKZ.seek(FAKZ2FAP.FAKZ)
||
   FAKZ.CZY_FAK:='T';
   FAKZ.put()
?};
FAKZ.cntx_pop();
end()


\who_rlock_fakz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Sprawdzenie kto blokuje rekord FAKZ
::   WE: _a - 0-sprawdzać kto blokuje, 1-nie sprawdzać i zapisać informację do __kom
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & _a
|| __kom.add('Dokument obsługuje inny użytkownik.'@,7)
|| {? FUN.ask('Zlecenie fakturowania obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@) & FAKZ.r_lock(1,,1)
   || FAKZ.r_unlock()
   ?}
?}


\obi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: Czy dotyczy dokumentów w obiegu?
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy dotyczy dokumentów w obiegu?'@)
|| 'TAK'
|| 'NIE'
?}


\przyFaks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: sprawdza czy coś zostało powiązane z dok.magazynowymi
::   WE: _a - ref FAKS-a
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
FAP.cntx_psh;
FAP.index('FAP');
FAP.prefix(_a);
{? FAP.first
|| {!
   |? {? FAP.M().RODZ='T'
      || _ilr:=exec('ile_rozf','faktury_wspolne',$FAP.ref,FAP.FAKS().WHERE);
         _wyn:=_ilr<>0
      ?};
      ~_wyn & FAP.next
   !}
?};
FAP.cntx_pop;
_wyn


\onlyUsl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: sprawdza czy na pozycjach są tylko usługi
::   WE: _a - ref FAKS-a
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
FAP.cntx_psh;
FAP.index('FAP');
FAP.prefix(_a);
_res:=~FAP.find_tab('first','M','RODZ','=','T') & FAP.find_tab('first','M','RODZ','=','U');
FAP.cntx_pop();
_res


\sumfakkzf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: aktualizacja:
::       - FAKS, FAKSV korekty zbiorczej
::       - FAKS_KZF na podstawie korekt częściowych
::   WE: _a - $FAKS.ref() - korekty zbiorczej
::       [_b] - 0-bez naliczania FAKSV korekty zbiorczej, 1-z naliczaniem FAKSV korekty zbiorczej
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_kz:=_a;
_licz_faksv_kz:={? var_pres('_b')=type_of(0) || _b || 1 ?};
{? _kz<>'' & _licz_faksv_kz
||
   _kzf:=FAKS_KZF.ref();

   FAKS.cntx_psh();
   FAKS.use(8+_kz);
   FAKS.cntx_psh();
   FAKS.prefix();
   {? FAKS.seek(_kz)
   ||
::    FAKSV naliczenie
      exec('faks_kz_faksv','faktury_vat',_kz)
   ?};
   FAKS.cntx_pop();
   FAKS.cntx_pop();

   _netto:=_vat:=_brutto:=0;
   _netw:=_brtw:=0;

   FAKS_KZF.cntx_psh();
   {? FAKS_KZF.first()
   ||
      FAKS.cntx_psh();
      {!
      |?
         {? FAKS_KZF.KOR=''
         ||
            FAKS_KZF.NETTO:=FAKS_KZF.VAT:=FAKS_KZF.BRUTTO:=0;
            FAKS_KZF.NETW:=FAKS_KZF.BRTW:=0
         ||
            FAKS.use(8+FAKS_KZF.KOR);
            FAKS.cntx_psh();
            FAKS.prefix;
            {? FAKS.seek(FAKS_KZF.KOR)
            ||
               _netto+=FAKS_KZF.NETTO:=FAKS.NETTO;
               _vat+=FAKS_KZF.VAT:=FAKS.VAT;
               _brutto+=FAKS_KZF.BRUTTO:=FAKS.BRUTTO;
               _netw+=FAKS_KZF.NETW:=FAKS.NETW;
               _brtw+=FAKS_KZF.BRTW:=FAKS.BRTW
            ?};
            FAKS.cntx_pop()
         ?};
         FAKS_KZF.put() & FAKS_KZF.next()
      !};
      FAKS.cntx_pop()
   ?};
   FAKS.cntx_psh();
   FAKS.use(8+_kz);
   FAKS.cntx_psh();
   FAKS.prefix();
   {? FAKS.seek(_kz)
   ||
      FAKS.NETTO:=_netto; FAKS.VAT:=_vat; FAKS.BRUTTO:=_brutto;
      FAKS.NETW:=_netw; FAKS.BRTW:=_brtw;
      FAKS.put()
   ?};
   FAKS.cntx_pop();
   FAKS.cntx_pop();
   FAKS_KZF.cntx_pop();
   FAKS_KZF.seek(_kzf)
?}


\rejLOG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Dodanie jednego zapisu do tabeli log-ów SPRLOG
::       pomijamy pole IDADD
::   WE: _a - wartość R1
::       _b - wartość R2
::       [..] - wartości kolejnych pól
:: Uwaga. Pomijane są pola IDADD,KODUSR,OPUSR,DT,TM
:: Przykład: exec('rejLOG','faktury_wspolne','R',,OPERATOR.USER().IDADD,REZ.IDADD
::----------------------------------------------------------------------------------------------------------------------
_par:=_;
_tab:=SPRLOG;
_msk:=tm_form(tm_stamp());
_msk:=(2+(2-_msk))+(2+(5-_msk));
_tab.use('sprl'+_msk);
_tab.prefix();
_len:=_tab.fld_num();
{? _par
|| _nrfld:=0;
   _nrpar:=0;
   _tab.blank();
   {!
   |? _nrfld+=1;
      _nrpar+=1;
      {! |? ';IDADD;KODUSR;OPUSR;DT;TM;'*(';'+_tab.fld_acr(_nrfld)+';') |! _nrfld+=1 !};
      {? _nrfld<=_len || _tab[_nrfld]:=_[_nrpar] ?};
      _nrfld<_len
   !};
   {? _tab.add(1)
   || _tab.DT:=exec('str2date','#convert',(10+_tab.IDADD));
      _tab.TM:=exec('str2time','#convert',8+(11-_tab.IDADD));
      _tab.KODUSR:={? (+_tab.IDUSR)=31 || exec('FindAndGet','#table',USERS,_tab.IDUSR,,"KOD",'') || '' ?};
      _tab.OPUSR:={? (+_tab.IDUSR)=31 || exec('FindAndGet','#table',USERS,_tab.IDUSR,,"DANE",'') || '' ?};
      _tab.put(1)
   ?}
?};
1


\OnOffSPRLOG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Włączenie/wyłączenie trig ref-ów dla rejestracji logów dotyczących sprzedaży
::   WE: _a - string co włączyć, wyłączyć 1-włączamy 0-wyłączamy x-pomijamy
::----------------------------------------------------------------------------------------------------------------------
_par:=_a;
_spr:=1+_par;
_par:=1-_par;

{? _spr='1' & exec('get','#params',300800,2)='T'
||
:: włączenie trigger-ów - Historia zmian rezerwacji
   REZ.trig_a('add',"exec('rezSPRLOG','faktury_wspolne','A')",'rezsprl_add');
   REZ.trig_a('put',"exec('rezSPRLOG','faktury_wspolne','P')",'rezsprl_put');
   REZ.trig_b('del',"exec('rezSPRLOG','faktury_wspolne','D')",'rezsprl_del')
|? _spr='0'
||
:: wyłączenie trigger-ów - Historia zmian rezerwacji
   REZ.trig_a('add',"",'rezsprl_add');
   REZ.trig_a('put',"",'rezsprl_put');
   REZ.trig_b('del',"",'rezsprl_del')
?};

_spr:=1+_par;
_par:=1-_par;

{? _spr='1' & exec('get','#params',300801,2)='T'
||
:: włączenie trigger-ów - Sprzedaż utracona
   ZK_P.trig_a('add',"exec('zkpSPRLOG','faktury_wspolne','A')",'zkpsprl_add');
   ZK_P.trig_a('put',"exec('zkpSPRLOG','faktury_wspolne','P')",'zkpsprl_put');
   ZK_P.trig_b('del',"exec('zkpSPRLOG','faktury_wspolne','D')",'zkpsprl_del')
|? _spr='0'
||
:: wyłączenie trigger-ów - Sprzedażu utracona
   ZK_P.trig_a('add',"",'zkpsprl_add');
   ZK_P.trig_a('put',"",'zkpsprl_put');
   ZK_P.trig_b('del',"",'zkpsprl_del')
?};
~~


\rezSPRLOG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Rejestracja log-a rezerwacji
::   WE: _a - rodzaj operacji A-dodawania, P-modyfikacja, D-usuwanie
::----------------------------------------------------------------------------------------------------------------------
_zbw:=(_a='P' & REZ.RODZ='W' & REZ.RODZ<>bfld('RODZ'));
_zwb:=(_a='P' & REZ.RODZ='B' & REZ.RODZ<>bfld('RODZ'));
_aur:=(_a='P' & BEER.MJSLOG='ZKA');
{? (REZ.name()+2)='__' & (REZ.RODZ='B' | _zbw)
 & (';ZT'*REZ.TYP)>1 & (_a<>'P' | REZ.ILR<>bfld('ILR') | _zwb | REZ.DODT<>bfld('DODT') | _aur)
 & (REZ.TYP<>'Z' | REZ.REA='NN' | REZ.REA='NR')
 & {? REZ.TYP='Z' || exec('FindAndGet','#table',ZK_P,$REZ.ZK_P,,"RODZ",'')='Z' || 1 ?}
|| {? REZ.TYP='Z'
   || _idzkp:=exec('FindAndGet','#table',ZK_P,$REZ.ZK_P,,"IDADD",'');
      _poz:=exec('FindAndGet','#table',ZK_P,$REZ.ZK_P,,"POZ",0);
      _idzkn:={? _a='D' | REZ.TYP<>'Z' || '' || exec('FindAndGet','#table',ZK_P,$REZ.ZK_P,,"$N",'') ?};
      _rz:=BIT.sqlint(_idzkn); _rm:=form(8+_idzkn);
      _sym:={? _a='D' | REZ.TYP<>'Z'
            || ''
            |? _rz>0 & ZK_N.r_lock(1,1,1,_rz,_rm)
            || exec('FindAndGet','#table',ZK_N,_idzkn,,"SYM",'')
            || 'zablokowane'
            ?};
      _opis:='Pozycja %1 z zamówienia %2'@[$_poz,_sym];
      _idzkn:={? _a='D' | REZ.TYP<>'Z'
              || ''
              |? _sym='zablokowane'
              || 'zablokowany'
              || exec('FindAndGet','#table',ZK_N,_idzkn,,"IDADD",'')
              ?}
   || _idzkp:='';
      _idzkn:='';
      _sym:={? REZ.TYP='T' || 'tymczasowa' || 'inna' ?};
      _opis:=_sym
   ?};
   _ilz:=0;
   _ild:=0;
   SM.cntx_psh();
   SM.use('stm__'+ST.ODDZ+'zb');
   SM.index('SM');
   SM.prefix(REZ.MG,REZ.M);
   {? SM.first() || _ilz:=SM.Z; _ild:=SM.SD ?};
   SM.cntx_pop();
   exec('rejLOG','faktury_wspolne','R',REZ.TYP,{? _zwb | BEER.MJSLOG='POP' || REZ.US().IDADD || OPERATOR.USER().IDADD ?}
    ,REZ.IDADD
    ,{? REZ.TYP='Z' || _idzkp || '' ?}
    ,{? REZ.TYP='Z' || _idzkn || '' ?}
    ,{? REZ.TYP='F' || exec('FindAndGet','#table',FAP,$REZ.FAP,,"IDADD",'') || '' ?}
    ,ST.ODDZ
    ,REZ.MG().SYM
    ,{? _a='A' || {? BEER.MJSLOG='POP' || 'ADW' |? BEER.MJSLOG='RED' || 'ADR' || 'ADD' ?}
     |? _a='P' || {? _aur || 'ADA'
                  |? _zwb || 'ADW'
                  |? _zbw | BEER.MJSLOG='POP' || 'PUW'
                  |? BEER.MJSLOG='PTT' | REZ.REA='NR' || 'PUR'
                  || 'PUT'
                  ?}
     |? _a='D' || {? BEER.MJSLOG='PTT' || 'DER'
                  |? BEER.MJSLOG='DET' || 'DET'
                  |? BEER.MJSLOG='ARC' || 'DEA'
                  |? REZ.REA='NR' || 'DER'
                  || 'DEL'
                  ?}
     || '???'
     ?}
    ,_sym
    ,REZ.ILR
    ,_ild
    ,_ilz
    ,_opis
    ,REZ.ODDT
    ,REZ.DODT
    ,REZ.KH().IDADD
    ,REZ.M().IDADD
    ,{? _zwb | BEER.MJSLOG='POP' || OPERATOR.USER().IDADD || '' ?})
?};
{? _a='D' || 1 || ~~ ?}


\zkpSPRLOG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Rejestracja log-a pozycji zamówienia
::   WE: _a - rodzaj operacji A-dodawania, P-modyfikacja, D-usuwanie
::----------------------------------------------------------------------------------------------------------------------
{? (ZK_P.name()+2)='__' & ZK_P.RODZ='Z' & (_a<>'P' | ZK_P.ILP<>bfld('ILP'))
|| _ilz:=0;
   _ild:=0;
   _poz:=ZK_P.POZ;
   _idzkn:={? _a='D' || '' || exec('FindAndGet','#table',ZK_N,$ZK_P.N,,"IDADD",'') ?};
   _rz:=BIT.sqlint(_idzkn); _rm:=form(8+_idzkn);
   _sym:={? _a='D'
         || ''
         |? _rz>0 & ZK_N.r_lock(1,1,1,_rz,_rm)
         || exec('FindAndGet','#table',ZK_N,_idzkn,,"SYM",'')
         || 'zablokowane'
         ?};
   _opis:='Pozycja %1 z zamówienia %2'@[$_poz,_sym];
   _idkh:={? _a='D'
          || ''
          |? _sym='zablokowane'
          || 'zablokowany'
          || exec('FindAndGet','#table',ZK_N,_idzkn,,"KH().IDADD",'')
          ?};
   {? ZK_P.MG<>null()
   || SM.cntx_psh();
      SM.use('stm__'+ST.ODDZ+'zb');
      SM.index('SM');
      SM.prefix(ZK_P.MG,ZK_P.M);
      {? SM.first() || _ilz:=SM.Z; _ild:=SM.SD ?};
      SM.cntx_pop()
   ?};
   exec('rejLOG','faktury_wspolne','S','U',OPERATOR.USER().IDADD
    ,''
    ,ZK_P.IDADD
    ,_idzkn
    ,''
    ,ST.ODDZ
    ,{? ZK_P.MG<>null() || ZK_P.MG().SYM || 'kilka' ?}
    ,{? _a='A' || 'ADD'
     |? _a='P' || {? BEER.MJSLOG='REA' || 'PUA' |? BEER.MJSLOG='RED' || 'PUR' || 'PUT' ?}
     |? _a='D' || 'DEL'
     || '???'
     ?}
    ,_sym
    ,ZK_P.ILP
    ,_ild
    ,_ilz
    ,_opis
    ,date(0,0,0)
    ,date(0,0,0)
    ,_idkh
    ,ZK_P.M().IDADD
    ,'')
?};
{? _a='D' || 1 || ~~ ?}


\arezSPRLOG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Analiza danych - powołanie struktury i okienka (historia rezerwacji)
::   WE: [_a] - 1-odśwież dane 0-domyślnie-powołaj dane -1-powołaj strukturę
::       [_b] - wg idrez - domyślnie puste
::   WY: w przypadku podania idrez-a tabela danych
::----------------------------------------------------------------------------------------------------------------------
_refresh:=var_pres('_a')=type_of(0) & _a=1;
_wgidrez:={? var_pres('_b')=type_of('') & (+_b)=31 || _b || '' ?};
_onlydsp:=(+_wgidrez)=31;
_def_tab:=var_pres('_a')=type_of(0) & _a=-1;

{? _onlydsp
|| ''
|? _refresh
|| _usold:=__usrz.IDUSR;
   _mtold:=__mtrz.IDMAT;
   __usrz.clear();  {? __usrz.first() || {! |? __usrz.del() !} ?};
   __mtrz.clear();  {? __mtrz.first() || {! |? __mtrz.del() !} ?};
   __anrz.clear();  {? __anrz.first() || {! |? __anrz.del() !} ?}
|| _usold:='';
   _mtold:='';
   __usrz:=tab_tmp(1,'KOD','STRING[10]','Kod użytkownika'
            ,'DANE','STRING[30]','Informacje o użytkowniku'
            ,'IDUSR','STRING[31]','IDADD');
   __mtrz:=tab_tmp(1,'KTM','STRING[50]','Indeks materiałowy'
            ,'N','STRING[100]','Nazwa indeksu materiałowego'
            ,'IDMAT','STRING[31]','IDADD')
?};

:: pobranie danych do analizy
_banrz:=sql('select '
            ' IDADD ID, '
            ' IDREZ IDREZ, '
            ' IDZKP IDZKP, '
            ' IDUSR IDUSR, '
            ' IDUS2 IDUS2, '
            ' IDMAT IDMAT, '
            ' IDKH IDKH, '
            ' DT DT, '
            ' TM TM, '
            ' IL IL, '
            ' ODDT ODDT, '
            ' DODT DODT, '
            ' 0 DAYS, '
            ' ILD ILD, '
            ' ILZ ILZ, '
            ' IL ILP, '
            ' IL ILR, '
            ' IL ILA, '
            ' SPACE(120) OP, '
            ' \'T\' WYB, '
            ' SPACE(50) KTM, '
            ' SPACE(10) US, '
            ' SPACE(8) KHKOD, '
            ' MAG MAG, '
            ' SYM SYM, '
            ' TYP TYP, '
            ' DT LD, '
            ' TM LT, '
            ' SPACE(50) ILDNI, '
            ' 0 ILSEC, '
            ' substr(IDADD,3,2) || substr(IDADD,6,2) MSK '+
            {? ~_onlydsp
            || {? ~_def_tab
               || 'from @SPRLOG where R1=\'R\' and substr(TYP,1,2)=\'AD\' order by 1'
               || 'from @SPRLOG where 0=1 order by 1'
               ?}
            || 'from @SPRLOG where R1=\'R\' and substr(TYP,1,2)=\'AD\' and IDREZ=\':_a\' order by 1'
            ?},_wgidrez);

{? _onlydsp
|| _res:=_banrz
|? var_pres('__anrz')<0
|| __anrz:=_banrz;
   _res:=__anrz
|| _len:=_banrz.fld_num();
   _banrz.clear();
   {? _banrz.first()
   || {!
      |? __anrz.prefix();
         __anrz.blank();
         {! _i:=1.._len |! __anrz[_i]:=_banrz[_i] !};
         __anrz.add(1);
         _banrz.next()
      !}
   ?};
   _res:=__anrz
?};
obj_del(_banrz);

_msk:=SPRLOG.names();
:: obróbka danych
_res.clear();
{? _res.first()
|| _ii:=0;
   _size:=_res.size();
   _tmstart:=time();
   _ll:=_size%100; {? _ll=0 || _ll:=1 ?};
   {!
   |? _ii+=1;
      {? (_ii%*_ll)=1
      || _tmtime:=time();
         _tmo:=_tmtime-_tmstart;
         _tme:=*(*_tmo*(_size/_ii));
         _txt:='Trwa przetwarzanie ... czas: %1 z %2'@[form(_tmo,,3),form(_tme,,3)];
         progress((_ii/_size)*100,_txt,'Pobranie i analiza historii rezerwacji'@)
      ?};
      _res.OP:={? _res.TYP='ADR'
               || 'Przywrócona rezerwacja z realizacji w dniu: %1.'@[(19+SPRLOG.IDADD)]
               |? _res.TYP='ADW'
               || _userzm:=exec('FindAndGet','#table',USERS,_res.IDUS2,,"KOD",'<usunięto>');
                  'Aktywna rezerwacja po zmianie użytkownika: %1'@[_userzm]
               || 'Aktywna rezerwacja'
               ?};
      _res.US:=exec('FindAndGet','#table',USERS,_res.IDUSR,,"KOD",'');
      _res.KTM:=exec('FindAndGet','#table',M,_res.IDMAT,,"KTM",'');
      _res.KHKOD:=exec('FindAndGet','#table',KH,_res.IDKH,,"KOD",'');
      _res.DAYS:={? _res.DODT>=_res.ODDT & _res.ODDT<>date(0,0,0)
                 || (_res.DODT-_res.ODDT)+1
                 || 0
                 ?};
      _res.put(1);
      _msk.clear();
      {? _msk.first()
      || {!
         |? {? ((_msk.NAME)+4)>=_res.MSK
            || SPRLOG.use(_msk.NAME);
               SPRLOG.index('IDREZ');
               SPRLOG.prefix('R',_res.IDREZ,);
               {? SPRLOG.first()
               || {!
                  |? {? SPRLOG.TYP='PUT' | SPRLOG.TYP='PUW'
                     || _zmdt:=_res.DODT<>SPRLOG.DODT;
                        _zmil:=_res.ILR<>SPRLOG.IL;
                        _res.ILP:=(_res.IL-SPRLOG.IL);
                        _res.ILR:=SPRLOG.IL;
                        _res.ILA:=SPRLOG.IL;
                        {? _zmdt || _res.DODT:=SPRLOG.DODT ?};
                        _res.OP:={? SPRLOG.TYP='PUT'
                                 || {? _zmdt & _zmil
                                    || 'Zmodyfikowano ilość i datę obowiązywania w dniu: %1.'@[(19+SPRLOG.IDADD)]
                                    |? _zmdt
                                    || 'Zmodyfikowano datę obowiązywania w dniu: %1.'@[(19+SPRLOG.IDADD)]
                                    || 'Zmodyfikowano ilość w dniu: %1.'@[(19+SPRLOG.IDADD)]
                                    ?}
                                 || _userzm:=exec('FindAndGet','#table',USERS,SPRLOG.IDUS2,,"KOD",'<usunięto>');
                                    {? _zmdt & _zmil
                                    || 'Zmodyfikowano ilość i datę obowiązywania, wykonał: %1'@[_userzm]
                                    |? _zmdt
                                    || 'Zmodyfikowano datę obowiązywania, wykonał: %1'@[_userzm]
                                    || 'Zmodyfikowano po zmianie użytkownika: %1'@[_userzm]
                                    ?}
                                 ?};
                        _res.LD:=exec('str2date','#convert',(10+SPRLOG.IDADD));
                        _res.LT:=exec('str2time','#convert',8+(11-SPRLOG.IDADD));
                        _time:=exec('timeDiff','#datetime',_res.DT,_res.TM,_res.LD,_res.LT);
                        _res.ILSEC:=*_time*60$0;
                        _res.ILDNI:=exec('time2str','#convert',_time);
                        {? ~_onlydsp || _res.put(1) || _res.add(1) ?}
                     |? SPRLOG.TYP='PUR'
                     || _res.ILP:=(_res.IL-SPRLOG.IL);
                        _res.ILR:=SPRLOG.IL;
                        _res.OP:={? SPRLOG.R2='T'
                                 || 'Przepisano częściowo w dniu: %1.'@[(19+SPRLOG.IDADD)]
                                 |? _res.ILR<_res.ILA
                                 || 'Zrealizowano częściowo w dniu: %1.'@[(19+SPRLOG.IDADD)]
                                 || 'Przywrócona rezerwacja z realizacji w dniu: %1.'@[(19+SPRLOG.IDADD)]
                                 ?};
                        _res.LD:=exec('str2date','#convert',(10+SPRLOG.IDADD));
                        _res.LT:=exec('str2time','#convert',8+(11-SPRLOG.IDADD));
                        _time:=exec('timeDiff','#datetime',_res.DT,_res.TM,_res.LD,_res.LT);
                        _res.ILSEC:=*_time*60$0;
                        _res.ILDNI:=exec('time2str','#convert',_time);
                        {? ~_onlydsp || _res.put(1) || _res.add(1) ?}
                     |? SPRLOG.TYP='DET'
                     || _res.ILP:=_res.IL;
                        _res.OP:='Usunięto po terminie w dniu: %1.'@[(19+SPRLOG.IDADD)];
                        _res.LD:=exec('str2date','#convert',(10+SPRLOG.IDADD));
                        _res.LT:=exec('str2time','#convert',8+(11-SPRLOG.IDADD));
                        _time:=exec('timeDiff','#datetime',_res.DT,_res.TM,_res.LD,_res.LT);
                        _res.ILSEC:=*_time*60$0;
                        _res.ILDNI:=exec('time2str','#convert',_time);
                        {? ~_onlydsp || _res.put(1) || _res.add(1) ?}
                     |? SPRLOG.TYP='DER'
                     || _res.ILP:=_res.IL;
                        _res.WYB:='N';
                        _res.OP:={? SPRLOG.R2='Z'
                                 || 'Zrealizowano w całości dnia: %1.'@[(19+SPRLOG.IDADD)]
                                 || 'Przepisano w całości dnia: %1.'@[(19+SPRLOG.IDADD)]
                                 ?};
                        _res.LD:=exec('str2date','#convert',(10+SPRLOG.IDADD));
                        _res.LT:=exec('str2time','#convert',8+(11-SPRLOG.IDADD));
                        _time:=exec('timeDiff','#datetime',_res.DT,_res.TM,_res.LD,_res.LT);
                        _res.ILSEC:=*_time*60$0;
                        _res.ILDNI:=exec('time2str','#convert',_time);
                        {? ~_onlydsp || _res.put(1) || _res.add(1) ?}
                     |? SPRLOG.TYP='DEL' | SPRLOG.TYP='DEA'
                     || _res.ILP:=_res.IL;
                        _res.OP:={? SPRLOG.TYP='DEL'
                                 || 'Usunięto bez realizacji w dniu: %1.'@[(19+SPRLOG.IDADD)]
                                 || 'Usunięto archiwizując w dniu: %1.'@[(19+SPRLOG.IDADD)]
                                 ?};
                        _res.LD:=exec('str2date','#convert',(10+SPRLOG.IDADD));
                        _res.LT:=exec('str2time','#convert',8+(11-SPRLOG.IDADD));
                        _time:=exec('timeDiff','#datetime',_res.DT,_res.TM,_res.LD,_res.LT);
                        _res.ILSEC:=*_time*60$0;
                        _res.ILDNI:=exec('time2str','#convert',_time);
                        {? ~_onlydsp || _res.put(1) || _res.add(1) ?}
                     ?};
                     SPRLOG.next()
                  !}
               ?}
            ?};
            _msk.next()
         !}
      ?};
      {? ~_onlydsp
      || _res.next()
      || 0
      ?}
   !}
?};
prgs_clr();
obj_del(_msk);

{? _onlydsp
|| _res
||
:: przepisanie użytkowników do tabeli pomocniczej
   _buf:=sql('select distinct IDUSR from :_a',__anrz);
   {? _buf.first()
   || __usrz.blank();
      __usrz.IDUSR:='';
      __usrz.KOD:='..';
      __usrz.DANE:='<Wszyscy>'@;
      __usrz.add(1);
      {!
      |? __usrz.blank();
         __usrz.IDUSR:=_buf.IDUSR;
         __usrz.KOD:=exec('FindAndGet','#table',USERS,__usrz.IDUSR,,"KOD",'<usunięto>');
         __usrz.DANE:=exec('FindAndGet','#table',USERS,__usrz.IDUSR,,"DANE",'<usunięto>');
         __usrz.add(1);
         _buf.next()
      !}
   ?};
   obj_del(_buf);

:: przepisanie materiałów do tabeli pomocniczej
   _buf:=sql('select distinct IDMAT from :_a',__anrz);
   {? _buf.first()
   || __mtrz.blank();
      __mtrz.IDMAT:='';
      __mtrz.KTM:='..';
      __mtrz.N:='<Wszystkie>'@;
      __mtrz.add(1);
      {!
      |? __mtrz.blank();
         __mtrz.IDMAT:=_buf.IDMAT;
         __mtrz.KTM:=exec('FindAndGet','#table',M,__mtrz.IDMAT,,"KTM",'');
         __mtrz.N:=exec('FindAndGet','#table',M,__mtrz.IDMAT,,"N",'');
         __mtrz.add(1);
         _buf.next()
      !}
   ?};
   obj_del(_buf);

:: definicja okienek
   {? ~_refresh
   || __wusrz:=__usrz.mk_sel('Użytkownicy'@,'P',0,'#sprlog_usrz',,,,,'U','T');
      __usrz.win_fld(__wusrz,,'KOD',,,20,,1,'Kod użytkownika'@);
      __usrz.win_fld(__wusrz,,'DANE',,,20,,1,'Dane użytkownika'@);
      __usrz.win_act(__wusrz,0,'Szukaj');
      __usrz.win_act(__wusrz,0,'Kolejność');
      __usrz.win_sel(__wusrz);

      __wmtrz:=__mtrz.mk_sel('Indeksy materiałowe'@,'P',0,'#sprlog_mtrz',,,,,'U','T');
      __mtrz.win_fld(__wmtrz,,'KTM',,,20,,1,'Indeks materiałowy'@);
      __mtrz.win_fld(__wmtrz,,'N',,,20,,1,'Nazwa'@);
      __mtrz.win_act(__wmtrz,0,'Szukaj');
      __mtrz.win_act(__wmtrz,0,'Kolejność');
      __mtrz.win_sel(__wmtrz);

      __wanrz:=__anrz.mk_sel('Dane'@,'P',0,'#sprlog_anrz',,,,,'U','T');
      __anrz.win_fld(__wanrz,,'DT',,,10,,1,'Data'@);
      __anrz.win_fld(__wanrz,,'TM',,,8,,1,'Czas'@);
      __anrz.win_fld(__wanrz,,'LD',,,-10,,1,'Data modyfikacji'@);
      __anrz.win_fld(__wanrz,,'LT',,,-8,,1,'Czas modyfikacji'@);
      __anrz.win_fld(__wanrz,,'ILDNI',,,-8,,1,'Czas rezerwacji'@);
      __anrz.win_fld(__wanrz,,'OP',,,-12,,1,'Opis zdarzenia'@);
      __anrz.win_fld(__wanrz,,'KTM',,,-10,,1,'Indeks materiałowy'@);
      __anrz.win_fld(__wanrz,,'US',,,10,,1,'Użytkownik'@);
      __anrz.win_fld(__wanrz,,'IL',,,12,ST.DOKL,1,'Ilość'@);
      __anrz.win_fld(__wanrz,,'ILR',,,12,ST.DOKL,1,'Rezerwacja'@);
      __anrz.win_fld(__wanrz,,'MAG',,,8,,1,'Magazyn'@);
      __anrz.win_fld(__wanrz,,'ODDT',,,10,,1,'Od dnia'@);
      __anrz.win_fld(__wanrz,,'DODT',,,10,,1,'Do dnia'@);
      __anrz.win_fld(__wanrz,,'DAYS',,,5,,1,'Dni'@);
      __anrz.win_fld(__wanrz,,'KHKOD',,,8,,1,'Kontrahent'@);
      __anrz.win_fld(__wanrz,,'SYM',,,12,,1,'Zamówienie'@);
      __anrz.win_fld(__wanrz,,'ILSEC',,,-8,,1,'Czas w sekundach'@);
      __anrz.win_act(__wanrz,1,'Formuła','Odśwież'@@,,'Odświeżenie danych'@,"exec('arezSPRLOG','faktury_wspolne',1)",,1);
      __anrz.win_act(__wanrz,0,'Formuła','Odśwież'@@,,'Odświeżenie danych'@,"exec('arezSPRLOG','faktury_wspolne',1)",,1);
      __anrz.win_act(__wanrz,0,'Formuła','Sz&czegóły'@@,,'Szczegóły log-a'@
       ,"exec('dispSPRLOG','faktury_wspolne','R',__anrz.IDREZ)");
      __anrz.win_act(__wanrz,0,'Szukaj');
      __anrz.win_act(__wanrz,0,'Kolejność');
      __anrz.win_sel(__wanrz)
   || exec('init_usrz','faktury_wspolne',_usold,_mtold)
   ?};
   ~~
?}


\azkpSPRLOG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Analiza danych - powołanie struktury i okienka (sprzedaż utracona)
::   WE: [_a] - 1-odśwież dane 0-domyślnie-powołaj dane
::       [_b] - wg idzkp - domyślnie puste
::   WY: w przypadku podania idzkp-a tabela danych
::----------------------------------------------------------------------------------------------------------------------
_refresh:=var_pres('_a')=type_of(0) & _a=1;
_wgidzkp:={? var_pres('_b')=type_of('') & (+_b)=31 || _b || '' ?};
_onlydsp:=(+_wgidzkp)=31;

{? _onlydsp
|| ''
|? _refresh
|| _usold:=__ussu.IDUSR;
   _mtold:=__mtsu.IDMAT;
   __ussu.clear();  {? __ussu.first() || {! |? __ussu.del() !} ?};
   __mtsu.clear();  {? __mtsu.first() || {! |? __mtsu.del() !} ?};
   __ansu.clear();  {? __ansu.first() || {! |? __ansu.del() !} ?}
|| _usold:='';
   _mtold:='';
   __ussu:=tab_tmp(1,'KOD','STRING[10]','Kod użytkownika'
            ,'DANE','STRING[30]','Informacje o użytkowniku'
            ,'IDUSR','STRING[31]','IDADD');
   __mtsu:=tab_tmp(1,'KTM','STRING[50]','Indeks materiałowy'
            ,'N','STRING[100]','Nazwa indeksu materiałowego'
            ,'IDMAT','STRING[31]','IDADD')
?};

:: pobranie danych do analizy
_bansu:=sql('select '
            ' IDADD ID, '
            ' IDZKP IDZKP, '
            ' IDUSR IDUSR, '
            ' IDMAT IDMAT, '
            ' IDKH IDKH, '
            ' DT DT, '
            ' TM TM, '
            ' IL IL, '
            ' ODDT ODDT, '
            ' DODT DODT, '
            ' 0 DAYS, '
            ' ILD ILD, '
            ' ILZ ILZ, '
            ' IL ILP, '
            ' IL ILR, '
            ' IL ILA, '
            ' SPACE(120) OP, '
            ' \'T\' WYB, '
            ' SPACE(50) KTM, '
            ' SPACE(10) US, '
            ' SPACE(8) KHKOD, '
            ' MAG MAG, '
            ' SYM SYM, '
            ' TYP TYP, '
            ' DT LD, '
            ' TM LT, '
            ' SPACE(50) ILDNI, '
            ' 0 ILSEC, '
            ' substr(IDADD,3,2) || substr(IDADD,6,2) MSK '+
            {? ~_onlydsp
            || 'from @SPRLOG where R1=\'S\' and TYP=\'ADD\' order by 1'
            || 'from @SPRLOG where R1=\'S\' and TYP=\'ADD\' and IDZKP=\':_a\' order by 1'
            ?},_wgidzkp);

{? _onlydsp
|| _res:=_bansu
|? var_pres('__ansu')<0
|| __ansu:=_bansu;
   _res:=__ansu
|| _len:=_bansu.fld_num();
   _bansu.clear();
   {? _bansu.first()
   || {!
      |? __ansu.prefix();
         __ansu.blank();
         {! _i:=1.._len |! __ansu[_i]:=_bansu[_i] !};
         __ansu.add(1);
         _bansu.next()
      !}
   ?};
   _res:=__ansu
?};
obj_del(_bansu);

_msk:=SPRLOG.names();
:: obróbka danych
_res.clear();
{? _res.first()
|| {!
   |? _res.OP:='Aktywna niezrealizowana pozycja';
      _res.US:=exec('FindAndGet','#table',USERS,_res.IDUSR,,"KOD",'');
      _res.KTM:=exec('FindAndGet','#table',M,_res.IDMAT,,"KTM",'');
      _res.KHKOD:=exec('FindAndGet','#table',KH,_res.IDKH,,"KOD",'');
      _res.DAYS:={? date()>=_res.DT & _res.DT<>date(0,0,0)
                 || (date()-_res.DT)+1
                 || 0
                 ?};
      _res.put(1);
      _msk.clear();
      {? _msk.first()
      || {!
         |? {? ((_msk.NAME)+4)>=_res.MSK
            || SPRLOG.use(_msk.NAME);
               SPRLOG.index('IDZKP');
               SPRLOG.prefix('S',_res.IDZKP,);
               {? SPRLOG.first()
               || {!
                  |? {? SPRLOG.TYP='PUT'
                     || _res.ILP:=(_res.IL-SPRLOG.IL);
                        _res.ILR:=SPRLOG.IL;
                        _res.ILA:=SPRLOG.IL;
                        _res.OP:='Zmodyfikowano ilość w dniu: %1.'@[(19+SPRLOG.IDADD)];
                        _res.LD:=exec('str2date','#convert',(10+SPRLOG.IDADD));
                        _res.LT:=exec('str2time','#convert',8+(11-SPRLOG.IDADD));
                        _time:=exec('timeDiff','#datetime',_res.DT,_res.TM,_res.LD,_res.LT);
                        _res.ILSEC:=*_time*60$0;
                        _res.ILDNI:=exec('time2str','#convert',_time);
                        {? ~_onlydsp || _res.put(1) || _res.add(1) ?}
                     |? SPRLOG.TYP='PUA'
                     || _res.ILP:=(_res.IL-SPRLOG.IL);
                        _res.ILR:=SPRLOG.IL;
                        _res.OP:={? _res.ILR<_res.ILA & _res.ILR>0
                                 || 'Zrealizowano częściowo w dniu: %1.'@[(19+SPRLOG.IDADD)]
                                 || 'Zrealizowano w całości dniu: %1.'@[(19+SPRLOG.IDADD)]
                                 ?};
                        {? ~(_res.ILR<_res.ILA & _res.ILR>0) || _res.WYB:='N' || _res.WYB:='T' ?};
                        _res.LD:=exec('str2date','#convert',(10+SPRLOG.IDADD));
                        _res.LT:=exec('str2time','#convert',8+(11-SPRLOG.IDADD));
                        _time:=exec('timeDiff','#datetime',_res.DT,_res.TM,_res.LD,_res.LT);
                        _res.ILSEC:=*_time*60$0;
                        _res.ILDNI:=exec('time2str','#convert',_time);
                        {? ~_onlydsp || _res.put(1) || _res.add(1) ?}
                     |? SPRLOG.TYP='PUR'
                     || _res.ILP:=(_res.IL-SPRLOG.IL);
                        _res.ILR:=SPRLOG.IL;
                        _res.OP:={? _res.ILR<_res.ILA
                                 || 'Zrealizowano częściowo w dniu: %1.'@[(19+SPRLOG.IDADD)]
                                 || 'Przywrócono z realizacji w dniu: %1.'@[(19+SPRLOG.IDADD)]
                                 ?};
                        _res.WYB:='T';
                        _res.LD:=exec('str2date','#convert',(10+SPRLOG.IDADD));
                        _res.LT:=exec('str2time','#convert',8+(11-SPRLOG.IDADD));
                        _time:=exec('timeDiff','#datetime',_res.DT,_res.TM,_res.LD,_res.LT);
                        _res.ILSEC:=*_time*60$0;
                        _res.ILDNI:=exec('time2str','#convert',_time);
                        {? ~_onlydsp || _res.put(1) || _res.add(1) ?}
                     |? SPRLOG.TYP='DEL'
                     || _res.ILP:=_res.IL;
                        _res.OP:='Usunięto bez realizacji w dniu: %1.'@[(19+SPRLOG.IDADD)];
                        _res.LD:=exec('str2date','#convert',(10+SPRLOG.IDADD));
                        _res.LT:=exec('str2time','#convert',8+(11-SPRLOG.IDADD));
                        _time:=exec('timeDiff','#datetime',_res.DT,_res.TM,_res.LD,_res.LT);
                        _res.ILSEC:=*_time*60$0;
                        _res.ILDNI:=exec('time2str','#convert',_time);
                        {? ~_onlydsp || _res.put(1) || _res.add(1) ?}
                     ?};
                     SPRLOG.next()
                  !}
               ?}
            ?};
            _msk.next()
         !}
      ?};
      {? ~_onlydsp
      || _res.next()
      || 0
      ?}
   !}
?};
obj_del(_msk);

{? _onlydsp
|| _res
||
:: przepisanie użytkowników do tabeli pomocniczej
   _buf:=sql('select distinct IDUSR from :_a',__ansu);
   {? _buf.first()
   || __ussu.blank();
      __ussu.IDUSR:='';
      __ussu.KOD:='..';
      __ussu.DANE:='<Wszyscy>'@;
      __ussu.add(1);
      {!
      |? __ussu.blank();
         __ussu.IDUSR:=_buf.IDUSR;
         __ussu.KOD:=exec('FindAndGet','#table',USERS,__ussu.IDUSR,,"KOD",'<usunięto>');
         __ussu.DANE:=exec('FindAndGet','#table',USERS,__ussu.IDUSR,,"DANE",'<usunięto>');
         __ussu.add(1);
         _buf.next()
      !}
   ?};
   obj_del(_buf);

:: przepisanie materiałów do tabeli pomocniczej
   _buf:=sql('select distinct IDMAT from :_a',__ansu);
   {? _buf.first()
   || __mtsu.blank();
      __mtsu.IDMAT:='';
      __mtsu.KTM:='..';
      __mtsu.N:='<Wszystkie>'@;
      __mtsu.add(1);
      {!
      |? __mtsu.blank();
         __mtsu.IDMAT:=_buf.IDMAT;
         __mtsu.KTM:=exec('FindAndGet','#table',M,__mtsu.IDMAT,,"KTM",'');
         __mtsu.N:=exec('FindAndGet','#table',M,__mtsu.IDMAT,,"N",'');
         __mtsu.add(1);
         _buf.next()
      !}
   ?};
   obj_del(_buf);

:: definicja okienek
   {? ~_refresh
   || __wussu:=__ussu.mk_sel('Użytkownicy'@,'P',0,'#sprlog_ussu',,,,,'U','T');
      __ussu.win_fld(__wussu,,'KOD',,,20,,1,'Kod użytkownika'@);
      __ussu.win_fld(__wussu,,'DANE',,,20,,1,'Dane użytkownika'@);
      __ussu.win_act(__wussu,0,'Szukaj');
      __ussu.win_act(__wussu,0,'Kolejność');
      __ussu.win_sel(__wussu);

      __wmtsu:=__mtsu.mk_sel('Indeksy materiałowe'@,'P',0,'#sprlog_mtsu',,,,,'U','T');
      __mtsu.win_fld(__wmtsu,,'KTM',,,20,,1,'Indeks materiałowy'@);
      __mtsu.win_fld(__wmtsu,,'N',,,20,,1,'Nazwa'@);
      __mtsu.win_act(__wmtsu,0,'Szukaj');
      __mtsu.win_act(__wmtsu,0,'Kolejność');
      __mtsu.win_sel(__wmtsu);

      __wansu:=__ansu.mk_sel('Sprzedaż utracona'@,'P',0,'#sprlog_ansu',,,,,'U','T');
      __ansu.win_fld(__wansu,,'DT',,,10,,1,'Data'@);
      __ansu.win_fld(__wansu,,'TM',,,8,,1,'Czas'@);
      __ansu.win_fld(__wansu,,'LD',,,-10,,1,'Data modyfikacji'@);
      __ansu.win_fld(__wansu,,'LT',,,-8,,1,'Czas modyfikacji'@);
      __ansu.win_fld(__wansu,,'ILDNI',,,-8,,1,'Czas przechowywania'@);
      __ansu.win_fld(__wansu,,'OP',,,-12,,1,'Opis zdarzenia'@);
      __ansu.win_fld(__wansu,,'KTM',,,-10,,1,'Indeks materiałowy'@);
      __ansu.win_fld(__wansu,,'US',,,10,,1,'Użytkownik'@);
      __ansu.win_fld(__wansu,,'IL',,,12,ST.DOKL,1,'Ilość'@);
      __ansu.win_fld(__wansu,,'ILR',,,12,ST.DOKL,1,'Aktualna'@);
      __ansu.win_fld(__wansu,,'MAG',,,8,,1,'Magazyn'@);
      __ansu.win_fld(__wansu,,'DAYS',,,5,,1,'Dni'@);
      __ansu.win_fld(__wansu,,'KHKOD',,,8,,1,'Kontrahent'@);
      __ansu.win_fld(__wansu,,'SYM',,,12,,1,'Zamówienie'@);
      __ansu.win_fld(__wansu,,'ILSEC',,,-8,,1,'Czas w sekundach'@);
      __ansu.win_act(__wansu,1,'Formuła','Odśwież'@@,,'Odświeżenie danych'@,"exec('azkpSPRLOG','faktury_wspolne',1)",,1);
      __ansu.win_act(__wansu,0,'Formuła','Odśwież'@@,,'Odświeżenie danych'@,"exec('azkpSPRLOG','faktury_wspolne',1)",,1);
      __ansu.win_act(__wansu,0,'Formuła','Sz&czegóły'@@,,'Szczegóły log-a'@
       ,"exec('dispSPRLOG','faktury_wspolne','S',__ansu.IDZKP)");
      __ansu.win_act(__wansu,0,'Szukaj');
      __ansu.win_act(__wansu,0,'Kolejność');
      __ansu.win_sel(__wansu)
   || exec('init_ussu','faktury_wspolne',_usold,_mtold)
   ?};
   ~~
?}


\refresh_usrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Odświeża okienko dla __anrz
::   WE: [_a] - pierwsze wejście 1-tak 0-domyślnie nie
::----------------------------------------------------------------------------------------------------------------------
_first:={? var_pres('_a')=type_of(0) || _a || 0 ?};

__anrz.f_clear();
__anrz.f_set('DT,TM',,'WYB=\'T\'');
{? _first || __anrz.f_first() ?};
grp_disp(__anrz,__wanrz);
~~


\refresh_ussu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Odświeża okienko dla __ansu
::   WE: [_a] - pierwsze wejście 1-tak 0-domyślnie nie
::----------------------------------------------------------------------------------------------------------------------
_first:={? var_pres('_a')=type_of(0) || _a || 0 ?};

__ansu.f_clear();
{? __ussu.IDUSR<>'' & __mtsu.IDMAT<>''
|| __ansu.f_set('DT,TM',,'WYB=\'T\' and IDUSR=\':_a\' and IDMAT=\':_b\'',__ussu.IDUSR,__mtsu.IDMAT)
|? __ussu.IDUSR<>''
|| __ansu.f_set('DT,TM',,'WYB=\'T\' and IDUSR=\':_a\'',__ussu.IDUSR)
|? __mtsu.IDMAT<>''
|| __ansu.f_set('DT,TM',,'WYB=\'T\' and IDMAT=\':_a\'',__mtsu.IDMAT)
|| __ansu.f_set('DT,TM',,'WYB=\'T\'')
?};
{? _first || __ansu.f_first() ?};
grp_disp(__ansu,__wansu);
~~


\pd_usrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Przed odświeżeniem okienko dla __usrz
::----------------------------------------------------------------------------------------------------------------------
exec('refresh_usrz','faktury_wspolne');
1


\pr_usrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Przed obsługą okienko dla __usrz
::----------------------------------------------------------------------------------------------------------------------
1



\pd_mtrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Przed odświeżeniem okienko dla __mtrz
::----------------------------------------------------------------------------------------------------------------------
exec('refresh_usrz','faktury_wspolne');
1


\pr_mtrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Przed obsługą okienko dla __mtrz
::----------------------------------------------------------------------------------------------------------------------
1


\pd_anrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Przed odświeżeniem okienko dla __anrz
::----------------------------------------------------------------------------------------------------------------------
{? ~__akrez
|| __akrez:=1;
   {? FUN.ask('Czy pobrać historię rezerwacji?\nUwaga operacja może być czasochłonna.'@)
   || exec('arezSPRLOG','faktury_wspolne',1)
   ?}
?};
1


\pr_anrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Przed obsługą okienko dla __anrz
::----------------------------------------------------------------------------------------------------------------------
1


\pd_ussu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Przed odświeżeniem okienko dla __ussu
::----------------------------------------------------------------------------------------------------------------------
exec('refresh_ussu','faktury_wspolne');
1


\pr_ussu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Przed obsługą okienko dla __ussu
::----------------------------------------------------------------------------------------------------------------------
__ussu.clear();
__ussu.first();
__mtsu.clear();
__mtsu.first();
grp_disp(__mtsu,__wmtsu);
~~


\pd_mtsu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Przed odświeżeniem okienko dla __mtsu
::----------------------------------------------------------------------------------------------------------------------
exec('refresh_ussu','faktury_wspolne');
1


\pr_mtsu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Przed obsługą okienko dla __mtsu
::----------------------------------------------------------------------------------------------------------------------
1


\pd_ansu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Przed odświeżeniem okienko dla __ansu
::----------------------------------------------------------------------------------------------------------------------
1


\pr_ansu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Przed obsługą okienko dla __ansu
::----------------------------------------------------------------------------------------------------------------------
1


\init_usrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: ustawienie prefiksów dla __anrz
::   WE: [_a] - __usrz.IDUSR, domyślnie brak
::       [_b] - __mtrz.IDMAT, domyślnie brak
::       [_c] - 1-inicjuje dodatkowe dane dla rezerwacji 0-domyślnie-nie
::----------------------------------------------------------------------------------------------------------------------
_idusr:={? var_pres('_a')=type_of('') & +(_a)=31 || _a || '' ?};
_idmat:={? var_pres('_b')=type_of('') & +(_b)=31 || _b || '' ?};
_initr:={? var_pres('_c')=type_of(0) || _c || 0 ?};

__usrz.clear();
{? _idusr=''
|| __usrz.first()
|| {? __usrz.last()
   || {!
      |? {? __usrz.IDUSR=_idusr
         || 0
         || __usrz.prev()
         ?}
      !}
   ?}
?};
:: grp_disp(__usrz,__wusrz);
__mtrz.clear();
{? _idmat=''
|| __mtrz.first()
|| {? __mtrz.last()
   || {!
      |? {? __mtrz.IDMAT=_idmat
         || 0
         || __mtrz.prev()
         ?}
      !}
   ?}
?};
:: grp_disp(__mtrz,__wmtrz);
exec('refresh_usrz','faktury_wspolne',1);
{? _initr || exec('init_tyrz','faktury_wspolne') ?};
~~


\init_ussu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: ustawienie prefiksów dla __ansu
::   WE: [_a] - __usrz.IDUSR, domyślnie brak
::       [_b] - __mtrz.IDMAT, domyślnie brak
::----------------------------------------------------------------------------------------------------------------------
_first:={? var_pres('_a')=type_of(0) || _a || 0 ?};

__ansu.f_clear();
__ansu.f_set('DT,TM',,'WYB=\'T\'');
{? _first || __ansu.f_first() ?};
grp_disp(__ansu,__wansu);
~~


\dispSPRLOG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: wyświetla sczegóły zapisu __ansu
::   WE: _a - typ analizy
::       _b - Identyfikator grupy zapisów
::----------------------------------------------------------------------------------------------------------------------
{? ~((';RS'*_a)>1) || return(0) ?};

_sprlog:={? _a='R' || exec('arezSPRLOG','faktury_wspolne',0,_b)
         |? _a='S' || exec('azkpSPRLOG','faktury_wspolne',0,_b)
         || ~~
         ?};

_sprlog.clear();
{? _sprlog.first()
|| _win:=_sprlog.mk_sel('Szczegóły'@,'P',0,'#sprlog_szcz',,,,,'U','T');
   _sprlog.win_fld(_win,,'LD',,,10,,1,'Data'@);
   _sprlog.win_fld(_win,,'LT',,,8,,1,'Czas'@);
   _sprlog.win_fld(_win,,'ILDNI',,,-8,,1,'Czas rezerwacji'@);
   _sprlog.win_fld(_win,,'OP',,,-12,,1,'Opis zdarzenia'@);
   _sprlog.win_fld(_win,,'KTM',,,-10,,1,'Indeks materiałowy'@);
   _sprlog.win_fld(_win,,'US',,,10,,1,'Użytkownik'@);
   _sprlog.win_fld(_win,,'IL',,,12,ST.DOKL,1,'Ilość'@);
   _sprlog.win_fld(_win,,'ILR',,,12,ST.DOKL,1,'Rezerwacja'@);
   _sprlog.win_fld(_win,,'MAG',,,8,,1,'Magazyn'@);
   _sprlog.win_fld(_win,,'ODDT',,,10,,1,'Od dnia'@);
   _sprlog.win_fld(_win,,'DODT',,,10,,1,'Do dnia'@);
   _sprlog.win_fld(_win,,'DAYS',,,5,,1,'Dni'@);
   _sprlog.win_fld(_win,,'KHKOD',,,8,,1,'Kontrahent'@);
   _sprlog.win_fld(_win,,'SYM',,,12,,1,'Zamówienie'@);
   _sprlog.win_fld(_win,,'ILSEC',,,-8,,1,'Czas w sekundach'@);

   _win_grp:=_sprlog.grp_make({? _a='R'
                              || 'Historia rezerwacji'@
                              |? _a='S'
                              || 'Sprzedaż utracona'@
                              || ''
                              ?},"''",'#azkp_sprlog');
   _sprlog.grp_sel(_win_grp,_sprlog,_win,,"''",,,30,"''",,,,'maximized_with_title','ANSZ',1);
   _sprlog.win_sel(_win_grp);
   _sprlog.first();
   _sprlog.select()
?};
obj_del(_sprlog);
~~


\nKorKHODB
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Sprawdza czy dana korekta jest notą korygującą kontrahenta lub odbiorcę
::   WY: 1-tak 0-nie 2-inny typ dokumentu - nie korekta, albo inny typ korekty
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
{? FAKS.WHERE='N'
|| _res:=FAKS.KH<>exec('FindAndGet','#table',FAKS,FAKS.FKSQL,,"KH",null())
       | FAKS.KH_ODB<>exec('FindAndGet','#table',FAKS,FAKS.FKSQL,,"KH_ODB",null())
|| _res:=2
?};
_res


\sp_active
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Wymagany split payment jest aktywny
::   WE: _a - data
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? _=0
||
   _a:=date()
||
   TYPYSP.cntx_psh();
   {? FAKS.SZ='S' & FAKS.WHERE<>'L' & FAKS.T().HIS<>'T' & PAR_SKID.get(308)='T' & FAKS.DW>=date(2014,1,1)
   ||
      {? FAKS.DO_NA_DR<>date(0,0,0) & FAKS.D<FAKS.DW
      ||
         _a:=FAKS.DO_NA_DR
      ?}

   |? FAKS.D<>date(0,0,0) & FAKS.D<FAKS.DW
   ||
      _a:=FAKS.D
   ?};
   TYPYSP.cntx_pop()
?};
{? _=0
|| 1
|| _a>date(2019,10,31)
?}


\sp_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Podzielona płatność - domyślna obsługa
::   WE: _a - miejsce wywołania
::            0-przed rozliczeniem zaliczki
::            1-po rozliczeniu zaliczki
::            2-generowanie korekty częściowej
::            3-akceptacja korekty zbiorczej lub nagłówkowej
::       _b - grupowa akceptacja
::       _c - 0-korekta zbiorcza; 1-korekty pojedyncza
::       _d - komunikaty - funkcja pomocnicza
::       _e - komunikaty - identyfikator
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_where:=_a;
_group:=_b;
_nieKorZb:=_c;
_komroot:=_d;
_komid:=_e;

_result:=1;

{? ~exec('sp_active','faktury_wspolne',FAKS.DW)
||
:: wymagany split payment jest nieaktywny
   return(1)

|? FAKS.NWAL<>INFO.NAROD
||
:: nie sprawdzane jeśli waluta opodatkowania różna od waluty narodowej
   return(1)

|? FAKS.T().PAR='T'
||
:: pomijamy paragony
   return(1)

|? FAKS.WHERE='K'
      |
   exec('FindAndGet','#table',FAKS,FAKS.KZ,,"WHERE='K'",0)
||
:: korekta zbiorcza lub korekta częściowa do niej - brak obsługi split payment
   return(1)

|? exec('FindAndGet','#table',FAKS,FAKS.KZ,,"WHERE='N'",0) & FAKS.NETTO<0
||
:: korekta częściowa wycofująca obrót do korekty nagłówkowej - tej nie sprawdzamy (sprawdzamy przywracającą obrót)
   return(1)
?};
:: _sp =0-brak pozycji dla podzielonej płatności, >0-są pozycje dla podzielonej płatności
_sp:=0;
_sp_war:=0;
_sp_vat:=0;
_sp_net:=0;
TYPYSP.cntx_psh();
_fak:=FAKS.T().KOR='N';
TYPYSP.cntx_pop();
FAP.cntx_psh();
FAP.index('FAP');
FAP.prefix(FAKS.ref());
_loop:=FAP.first();
{!
|? _loop
|!
   {? _fak
   ||
      _put:=0;
      _sp_wym:=''; {? FAP.M || _sp_wym:=FAP.M().SP_WYM ?};
      {? _sp_wym=''
      ||
         _put:=FAP.SP_WYM='';
         {? _put || FAP.SP_WYM:='N' ?}

      |? _sp_wym<>FAP.SP_WYM
      ||
         _put:=1;
         FAP.SP_WYM:=_sp_wym
      ?};
      {? _put || FAP.put() ?}
   ?};
   {? FAP.SP_WYM='T'
   ||
      _sp:=1;
      _sp_war+=FAP.BWAL_P;
      _sp_vat+=FAP.VWAL_P;
      _sp_net+=FAP.WWAL_P
   ?};
   _loop:=FAP.next()
!};
FAP.cntx_pop();
{? 1
||
:: wartości wyliczane wg tabeli z danymi do dekretacji
   FAPOW.cntx_psh();
   FAPOW.index('END_K');
   FAPOW.prefix($FAKS.ref(),'N');
   _roz:=FAPOW.first();
   FAPOW.cntx_pop();
   _sp_war:=0;
   _sp_vat:=0;
   _sp_net:=0;
   _obj:=exec('obj_fv_sp','dok_fks_aut_dok');
   _obj.create($FAKS.ref());
   _Faksv:=_obj.tab;
::   exec('sp_war','faktury_wspolne');
   _loop:=_Faksv.first();
   {!
   |? _loop
   |!
      {? _Faksv.SP_WYM='T'
      ||
         _sp:=1;
         _sp_war+={? FAKS.WHERE='L' || _Faksv.WB_Z |? _roz || _Faksv.WB_R || _Faksv.WB ?};
         _sp_vat+={? FAKS.WHERE='L' || _Faksv.WV_Z |? _roz || _Faksv.WV_R || _Faksv.WV ?};
         _sp_net+={? FAKS.WHERE='L' || _Faksv.WN_Z |? _roz || _Faksv.WN_R || _Faksv.WN ?}
      ?};
      _loop:=_Faksv.next()
   !}
?};
_sp_wym:='N'; {? FAKS.SP_WYM<>'' || _sp_wym:=FAKS.SP_WYM ?};
_limit:=exec('limit','fks_sp');
_brutto:=exec('brutto','faktury_plat',FAKS.ref(),1);
_p100324:=exec('get','#params',100324,2);
{? _p100324<>'T' & _p100324<>'Z'
      |
   exec('sp_active','faktury_wspolne',FAKS.DW)=0
||
:: wyłączona kontrola
   ~~

|? _where=1
||
:: _where=1 - po rozliczeniu zaliczek
   {? FAKS.KZ<>''
   ||
::    korekta częściowa do korekty nagłówkowej - nie sprawdzamy w tym miejscu
      ~~

   |? FAKS.SP_WYM='T'
         &
      FAKS.WHERE<>'L'
         &
      _brutto<=_limit & _brutto<>FAKS.BRUTTO
   ||
      _txt:='Wartość dokumentu nie przekroczyła limitu split payment %1 %2.'@[form(_limit,,,' ,'),INFO.NAROD().KOD];
      {? _group
      ||
         _komroot(_komid,_nieKorZb); __kom.add(_txt,4,,1);
         _txt:='UWAGA: Należy sprawdzić czy pole ''Wymagany split payment'' ma być zaznaczone.'@;
         _komroot(_komid,_nieKorZb); __kom.add(_txt,4,,1)
      ||
         _txt+='\nCzy odznaczyć pole ''Wymagany split payment'' w nagłówku dokumentu %1?'@[FAKS.SYM];
         {? FUN.ask(_txt)
         ||
            _sp_wym:='N'
         ?}
      ?}
   ?}

|? ~_sp & FAKS.SP_WYM='T'
||
:: _where=0 - przed rozliczeniem zaliczek
:: _where=2 - generowanie korekty częściowej
:: _where=3 - akceptacja korekty zbiorczej lub nagłówkowej
   _txt:='Dokument ma zaznaczone pole ''Wymagany split payment'' w nagłówku dokumentu a w pozycjach nie.'@;
   {? _where=2
   ||
      ~~

   |? _where=3
   ||
      _txt+='\nCzy kontynuować akceptację dokumentu?';
      _result:=FUN.ask(_txt)

   ||
      {? _group
      ||
         _komroot(_komid,_nieKorZb); __kom.add(_txt,4,,1);
         _txt:='Zakończenie rejestracji dokumentu niedostępne w ramach grupowego przetwarzania dokumentów.'@;
         _komroot(_komid,_nieKorZb); __kom.add(_txt,4,,1);
         _result:=0
      ||
         _txt+='\nCzy odznaczyć pole ''Wymagany split payment'' w nagłówku dokumentu %1?'@[FAKS.SYM];
         {? FUN.ask(_txt)
         ||
            _sp_wym:='N'
         ?}
      ?}
   ?}

|? _sp & FAKS.SP_WYM<>'T' & _sp_war<>_sp_net & FAKS.NDVAT='N' & FAKS.T().UE='N' & FAKS.KH().TYP<>'I' & KH.TYP<>'R'
||
:: _where=0 - przed rozliczeniem zaliczek
:: _where=2 - generowanie korekty częściowej
:: _where=3 - akceptacja korekty zbiorczej lub nagłówkowej
::
:: konieczne zaznaczenie pola 'Wymagany split payment' w nagłówku dokumentu sprzedaży

   {? _brutto>_limit
   ||
      _txt:='Wartość brutto dokumentu przekroczyła limit %1 %2.'@[form(_limit,,,' ,'),INFO.NAROD().KOD];
      {? _where=2
      ||
         ~~

      |? _where=3
      ||
         _komroot(_komid,_nieKorZb); __kom.add(_txt,4,,1);
         _txt:='Należy zaznaczyć pole ''Wymagany split payment'' w nagłówku dokumentu.'@;
         _komroot(_komid,_nieKorZb); __kom.add(_txt,4,,1);
         _txt:='Zaznaczenie możliwe jest po usunięciu korekt w oknie korygowanych dokumentów.'@;
         _komroot(_komid,_nieKorZb); __kom.add(_txt,4,,1);
         _result:=0
      ||
         {? _group
         ||
            _komroot(_komid,_nieKorZb); __kom.add(_txt,4,,1);
            _txt:='Zakończenie rejestracji dokumentu niedostępne w ramach grupowego przetwarzania dokumentów.'@;
            _komroot(_komid,_nieKorZb); __kom.add(_txt,4,,1);
            _result:=0
         ||
            _txt+='\nCzy zaznaczyć pole ''Wymagany split payment'' w nagłówku dokumentu %1?'@[FAKS.SYM];
            {? FUN.ask(_txt)
            ||
               _sp_wym:='T'

            |? FAKS.SZ='S'
            ||
               _txt:='Wartość brutto dokumentu przekroczyła limit %1 %2.'@[form(_limit,,,' ,'),INFO.NAROD().KOD];
               _komroot(_komid,_nieKorZb); __kom.add(_txt,4);
               _txt:='Należy zaznaczyć pole ''Wymagany split payment'' w nagłówku dokumentu.'@;
               _komroot(_komid,_nieKorZb); __kom.add(_txt,4);
               _result:=0
            ?}
         ?}
      ?}

   |? _p100324='Z'
         &
      (_sp_war>0 | _sp_vat | _sp_net>0)
   ||
:: powiadomienie o pozycjach wymagany split payment
      _txt:='Dokument ma pozycje z zaznaczonym polem ''Wymagany split payment''.'@;
      {? _group
      ||
         _komroot(_komid,_nieKorZb); __kom.add(_txt,4,,1);
         _txt:='Zakończenie rejestracji dokumentu niedostępne w ramach grupowego przetwarzania dokumentów.'@;
         _komroot(_komid,_nieKorZb); __kom.add(_txt,4,,1);
         _result:=0
      ||
         _txt+='\nCzy zaznaczyć pole ''Wymagany split payment'' w nagłówku dokumentu %1?'@[FAKS.SYM];
         {? FUN.ask(_txt)
         ||
            _sp_wym:='T'
         ?}
      ?}
   ?}
?};
:: aktualizacja FAKS.SP_WAR
{? _result=1
||
   _put:=0;
   {? _sp_wym<>'' & _sp_wym<>FAKS.SP_WYM
   ||
      FAKS.SP_WYM:=_sp_wym;
      _put:=1
   ?};
   {? _sp_war<>FAKS.SP_WAR
         |
      _sp_vat<>FAKS.SP_VAT
         |
      _sp_net<>FAKS.SP_NET
   ||
      FAKS.SP_WAR:=_sp_war;
      FAKS.SP_VAT:=_sp_vat;
      FAKS.SP_NET:=_sp_net;
      _put:=1
   ?};
   {? _put || FAKS.put() ?}
?};
_result


\sp_default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Sprawdza czy typ dokumentu z podpowiadaniem znacznika split payment
::   WE: _a - TYPYSP.ref()
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_typysp:=_a;
_result:='N';
_zak:=exec('FindAndGet','#table',TYPYSP,$_typysp,,"TYPYSP.ZAK",'');
_typ:=exec('FindAndGet','#table',TYPYSP,$_typysp,,"TYPYSP.T",'');
{? _zak='' | _typ=''
||
:: nie obsługiwany przypadek
   return('N')

|? _zak='T'
||
:: zakup
   _par:=200205

|? _zak='N'
||
:: sprzedaż
   _par:=300205
?};
{? exec('get','#params',_par,type_of(''))*(_typ+' ')
||
   _result:='T'
?};
_result


\dop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Data operacji
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.WHERE='K' | FAKS.WHERE='N'
|| FAKS.DW
|? FAKS.SZ='S' & FAKS.WHERE<>'L' & FAKS.T().HIS<>'T' & PAR_SKID.get(308)='T'
|| {? FAKS.DO<>date(0,0,0) || FAKS.DO || FAKS.D ?}
|| FAKS.D
?}


\ilLastKOR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: zwraca ilość na pozycji ostatniej korekty
::   WE: _a - ref SQL ostatniej korekty
::       _b - numer pozycji
::   WY: ilość
::----------------------------------------------------------------------------------------------------------------------
_res:=tab_tmp(1,'ILE','REAL','','SQL','STRING[16]','');
_msk:=(8+form(_a))+3;
{? (FAKS.name()+3)=_msk || _msk:='' ?};
FAKS.cntx_psh();
FAP.cntx_psh();
{? _msk<>''
|| FAKS.use('faktu'+_msk);
   FAP.use('fakpo'+_msk)
?};
FAKS.prefix();
{? FAKS.seek(_a)
|| FAP.index('FAP');
   FAP.prefix(FAKS.ref(),_b);
   {? FAP.first()
   || exec('wysw_kor','faktury_poz');
      _res.prefix();
      _res.ILE:={? ~exec('czyJS','jm',FAP.M) || FKOR.BIL || FKOR.BIL2 ?};
      _res.SQL:=$FAP.ref();
      _res.add(1)
   ?}
?};
FAKS.cntx_pop();
FAP.cntx_pop();
_res


\sp_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Funkcja techniczna - wyświetla wartość dokumentu w podziale na stawki vat w walucie handlowej i opodatkowania
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_obj:=exec('obj_fv_sp','dok_fks_aut_dok');
_obj.create($FAKS.ref());
_Tab:=_obj.tab;
_wer:=_Tab.mk_sel('Waluta handlowa: '+FAKS.WAL().KOD,,0);
_Tab.win_fld(_wer,,'SV',);
_Tab.win_fld(_wer,,'SP_WYM',);
_Tab.win_fld(_wer,,'WWN_Z',,,,,,'Zal. N');
_Tab.win_fld(_wer,,'WWV_Z',,,,,,'Zal. V');
_Tab.win_fld(_wer,,'WW_Z',,,,,,'Zal. B');
_Tab.win_fld(_wer,,'WWN',,,,,,'N');
_Tab.win_fld(_wer,,'WWV',,,,,,'V');
_Tab.win_fld(_wer,,'WW',,,,,,'B');
_Tab.win_fld(_wer,,'WWN_R',,,,,,'Roz. N');
_Tab.win_fld(_wer,,'WWV_R',,,,,,'Roz. V');
_Tab.win_fld(_wer,,'WW_R',,,,,,'Roz. B');
_Tab.win_sel(_wer);
_Tab.select();
_wer:=_Tab.mk_sel('Waluta opodatkowania: '+FAKS.NWAL().KOD,,0);
_Tab.win_fld(_wer,,'SV',);
_Tab.win_fld(_wer,,'SP_WYM',);
_Tab.win_fld(_wer,,'WN_Z',,,,,,'Zal. N');
_Tab.win_fld(_wer,,'WV_Z',,,,,,'Zal. V');
_Tab.win_fld(_wer,,'WB_Z',,,,,,'Zal. B');
_Tab.win_fld(_wer,,'WN',,,,,,'N');
_Tab.win_fld(_wer,,'WV',,,,,,'V');
_Tab.win_fld(_wer,,'WB',,,,,,'B');
_Tab.win_fld(_wer,,'WN_R',,,,,,'Roz. N');
_Tab.win_fld(_wer,,'WV_R',,,,,,'Roz. V');
_Tab.win_fld(_wer,,'WB_R',,,,,,'Roz. B');
_Tab.win_sel(_wer);
_Tab.select()


\bl_fznd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: wartośc początkowa identyfikatora doumentu magazynowego
::----------------------------------------------------------------------------------------------------------------------
FZ.IDND


\bl_walfz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: wartość początkowa dla pola waluta
::----------------------------------------------------------------------------------------------------------------------
FZ.WALK


\wycenND
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: wycenia powiązany dokument magazynowy o ile zmieniono koszty, cenę na fakturze zakupu, kurs
::   WE: _a - FAKS.ref()
::       [_b] - 1-wycena 0(domyślnie)-wycena wg parametru 200301
::       _c - 0/1 - stwierdzono zmienionę parametrów wyceny poza funkcją wycenND
::----------------------------------------------------------------------------------------------------------------------
_wycen:={? var_pres('_b')=type_of(0) || _b || 0 ?};
_par:=exec('get','#params',200301,2);
:: czy w ogóle wyceniamy
{? ~_wycen & _par='N' || return(0) ?};
_zmiana:={? var_pres('_c')=type_of(0) || _c || 0 ?};

_Tab:=ref_tab(_a);
{? _Tab=FAKS & exec('FindInSet','#table','FAP','FAP',_a,,,,,null())=null() || return() ?};
exec('fak_psh','open_tab');
FAP_K.index('FAKS');
_faks:={? _Tab=FAP || exec('FindAndGet','#table',FAKS,FAP.FAKS,,,null()) || _a ?};
FAP_K.prefix(_faks);
_jestkoszt:=FAP_K.first();
_jestcowyceniac:=FAP_K.first();
:: Potrzebna dodatkowa kontrola czy przypadkiem nie ma kosztu od strony dokumentu magazynowego
{? ~_jestcowyceniac
||
   FAP2DK.cntx_psh();
   FAP_K.cntx_psh();
   {? _Tab=FAP
   ||
      FAP2DK.index('NFAP');
      FAP2DK.prefix($_a);
      {? FAP2DK.first()
      || _jestcowyceniac:=1;
         _msk:=form(8+FAP2DK.DK)+3;
         exec('mag_psh','open_tab');
         exec('mag_open','open_tab',1+_msk,1-_msk);
         FAP_K.index('DKSQL');
         FAP_K.prefix(FAP2DK.DK,);
         {? FAP_K.first()
         || {!
            |? {? FAP_K.FAKS_K().OPLD='N' & FAP_K.FAKS_K().ROZLICZ='T'
               || _jestcowyceniac:=0;
                  _jestkoszt:=1
               ?};
               _jestcowyceniac & FAP_K.next()
            !}
         ?};
         exec('mag_pop','open_tab')
      ?}
   ||
      FAP2DK.index('NFAKS');
      FAP2DK.prefix($_a);
      _loop:=FAP2DK.first();
      {!
      |? _loop
      |!
         _dk_kurs:=exec('FindAndGet','#table',DK,FAP2DK.DK,,"KURS",0);
         _faks_nkrs:=exec('FindAndGet','#table',FAKS,FAP2DK.FAKS,,"NKRS",0);
         _msk:=form(8+FAP2DK.DK)+3;
         _jestcowyceniac:=_dk_kurs & _faks_nkrs & _dk_kurs<>_faks_nkrs;
         exec('mag_psh','open_tab');
         exec('mag_open','open_tab',1+_msk,1-_msk);
         FAP_K.index('DKSQL');
         FAP_K.prefix(FAP2DK.DK,);
         {? FAP_K.first()
         || {!
            |? {? FAP_K.FAKS_K().OPLD='N' & FAP_K.FAKS_K().ROZLICZ='T'
               || _jestcowyceniac:=0;
                  _jestkoszt:=1
               ?};
               _jestcowyceniac & FAP_K.next()
            !}
         ?};
         exec('mag_pop','open_tab');
         _loop:=~_jestcowyceniac & FAP2DK.next()
      !}
   ?};
   FAP2DK.cntx_pop();
   FAP_K.cntx_pop();
   {? _zmiana || _jestcowyceniac:=_zmiana ?}
?};
{? ~_jestkoszt &
   (~_jestcowyceniac
         |
      ( _wycen:={? _wycen   || _wycen
                |? _par='T' || 1
                |? _par='P' || FUN.ask('Zmieniono cenę.\nCzy wycenić powiązane dokumenty magazynowe?'@)
                || 0
                ?};
      ~_wycen ))
||
   ~~

|? ~_jestkoszt
||
   FAKS.cntx_psh();
   ND.cntx_psh(); ND.prefix();
   DK.cntx_psh(); DK.prefix();
   FAP2DK.cntx_psh();
   {? _Tab=FAP || FAP2DK.index('NFAP') || FAP2DK.index('NFAKS') ?};
   FAP2DK.prefix($_a);
   _loop:=FAP2DK.first();
   {!
   |? _loop
   |!
      _faks_walutowy:=FAKS.WAL<>FAKS.NWAL;
      _zmkrs:=0;
      _nkrs:=FAKS.NKRS;
      _ndtk:=FAKS.NDTK;
      _nrtk:=FAKS.NRTK;
      _nntk:=FAKS.NNTK;
      _spp:=FAKS.T().SPP='T';
:: poprawa wszystkich innych pozycji jesli zmiana kursu
      {? DK.seek(FAP2DK.DK)
      ||
         DK.N().SYM;
         _nd_walutowy:=ND.WAL<>exec('bl_wal','ustawienia');
         _put:=0;
         {? _Tab=FAKS & _nd_walutowy
         ||
            ND.KRS:=ND.NKRS:=_nkrs;
            ND.DTK:=ND.NDTK:=_ndtk;
            ND.RTK:=ND.NRTK:=_nrtk;
            ND.NTK:=ND.NNTK:=_nntk;
            _put:=1
         ?};
         {? {? _put || ND.put() || 1 ?}
         ||
            {? FAP.seek(FAP2DK.FAP)
            ||
               _rabat2:=exec('rab_proc','ceny',FAP.RAB,FAP.FAKS().RAB+FAP.RAB1,FAKS.RAB_TYP);
               _rabat:=1-_rabat2/100;
               ZMIENNE.M:=DK.M;
               _cwal:=_ncen:=0;
               {? _nd_walutowy
               ||
                  {? _faks_walutowy
                  ||
                     DK.KURS:=FAP.KRS;
                     _cwal:={? FAP.CWAL & _rabat & FAP.IL || (FAP.WWAL/FAP.IL)$FAP.M().DOKL_Z || FAP.CWAL ?};
                     _ncen:=(_cwal*FAP.KRS)$DK.M().DOKL_C
                  ||
:: liczymy od FAP.CN bo uwzględnia rabaty
                     DK.KURS:={? FAP.WAL=DK.WAL & FAP.KRS || FAP.KRS || DK.KURS ?};
                     _cwal:={? DK.KURS || (FAP.CN/DK.KURS)$DK.M().DOKL_C || 0 ?};
                     _ncen:=(_cwal*DK.KURS)$DK.M().DOKL_C
                  ?}
               ||
                  DK.WAL:=FAP.WAL;
                  DK.KURS:=FAP.KRS;
                  _ncen:=FAP.CN;
                  _cwal:={? DK.KURS || (_ncen/DK.KURS)$DK.M().DOKL_C || 0 ?}
               ?};
               {? DK.put() & exec('zmcene','magdok_poz',DK.ref(),_ncen,_cwal,,DK.C)=0
               ||
                  undo();
                  FUN.info('Zmiana ceny dostawy dla indeksu %1 nie powiodła się.\n\n'
                     'Operacja została anulowana.'@[DK.M().KTM])
               ?}
            ?}
         ?}
      ?};
      _loop:=FAP2DK.next()
   !};
   FAP2DK.cntx_pop();
   DK.cntx_pop();
   ND.cntx_pop();
   FAKS.cntx_pop()
||
   _spkosz:=0;
   _nkrs:=FAP_K.FAP().FAKS().NKRS;
   _ndtk:=FAP_K.FAP().FAKS().NDTK;
   _nrtk:=FAP_K.FAP().FAKS().NRTK;
   _nntk:=FAP_K.FAP().FAKS().NNTK;
   _spp:=FAP_K.FAP().FAKS().T().SPP='T';
   _zmkrs:=0;
   _ndkrs:=0;
   _dksql:=tab_tmp(2,'DK','STRING[16]',''
            ,'FAP','STRING[16]',''
            ,'CENA','REAL',''
            ,'CWAL','REAL',''
            ,'IL','REAL',''
            ,'ILR','REAL',''
            ,'KK','REAL',''
            ,'WAR','REAL',''
            ,'WARC','REAL',''
            ,'IDND','STRING[48]',''
            ,'CK','REAL',''
            ,'OLD_C','REAL',''
            ,'OLD_CK','REAL','');
   {!
   |? {? FAP_K.DKSQL<>'' & FAP_K.WB>0
      || {? ~_zmkrs & _nkrs>0 || _ndkrs:=exec('FindAndGet','#table',DK,FAP_K.DKSQL,,"KURS",0) ?};
         {? ~_zmkrs & _nkrs>0 & _ndkrs>0 & _nkrs<>_ndkrs
         || {?  FUN.ask('Inny kurs na powiązanej fakturze.\nCzy uzgodnić z fakturą kurs na dokumencie magazynowym?'@)
            || _zmkrs:=1
            || _zmkrs:=-1
            ?}
         ?};
         _dksql.clear();
         _dksql.prefix(FAP_K.DKSQL,$FAP_K.FAP);
         {? _dksql.first()
         || _ilfap:={? FAP_K.FAP().IL<>_dksql.ILR || _dksql.ILR || FAP_K.FAP().IL ?};
            _dksql.KK+=FAP_K.WB;
            _dksql.CENA:=_cena:={? FAP_K.FAP().IL=0 || 0 || (_dksql.WAR/_ilfap)$_dokl_z ?};
            _cenak:=_dksql.KK/_dksql.ILR $_dokl_z;
            _koszo:=((_cena+_cenak)*_dksql.ILR$_dokl_z)-((_cena*_dksql.ILR)$_dokl_z);
::            _koszm:=((_cena+_cenak-0.01)*_dksql.ILR$_dokl_z)-((_cena*_dksql.ILR)$_dokl_z);
::            _koszp:=((_cena+_cenak+0.01)*_dksql.ILR$_dokl_z)-((_cena*_dksql.ILR)$_dokl_z);
            {? (_koszo<>_dksql.KK & ~_spkosz)
            || _spkosz:=FUN.choice('Po przeliczeniu kosztów wg ceny występują różnice\n'
                                   'do zadeklarowanej wartości kosztu dla pozycji.\n'
                                   'Proszę wybrać sposób przypisania kosztu'@
                         ,1,'&Obliczony'@,'Za&niżony'@,'Za&wyżony'@);
               {? ~_spkosz || _spkosz:=1 ?}
            ?};
            {? (_koszo<>_dksql.KK) & _spkosz>1 || _cenak:=_cenak+({? _spkosz=2 || -1 || 1 ?}*0.01) ?};
            _koszt:=((_cena+_cenak)*_dksql.ILR$_dokl_z)-((_cena*_dksql.ILR)$_dokl_z);
            _dksql.CK:=_cenak $ _dokl_c;
            _dksql.CENA+=_cenak $ _dokl_c;
            _dksql.WARC:=(_dksql.ILR*_cena)$2;
            _dksql.put(1)
         || _skl:=exec('FindAndGet','#table','ND',FAP_K.IDND,,"MAG().SKL='T'",0);
            _sckrs:=exec('FindAndGet','#table','ND',FAP_K.IDND,,"SCKRS",0);
            _dksql.blank();
            _dksql.DK:=FAP_K.DKSQL;
            _dksql.FAP:=$FAP_K.FAP;
            _dksql.IDND:=FAP_K.IDND;
            _dksql.IL:=FAP_K.FAP().IL;
            _dksql.ILR:=exec('FindAndGet','#table',DK,_dksql.DK,,"IL",_dksql.IL);
            _dksql.KK:=FAP_K.WB;
            _dokl_c:=FAP_K.FAP().M().DOKL_C;
            _dokl_z:=FAP_K.FAP().M().DOKL_Z;
            _warn:={? FAP_K.WYC
                   || {? _skl=1 & _nkrs>0 || FAP_K.FAP().WN || FAP_K.FAP().WWAL_P ?}
                   || exec('FindAndGet','#table',DK,_dksql.DK,,"WAR",FAP_K.FAP().WN)
                   ?};
            _dksql.WAR:={? _skl=1 & _nkrs>0
                        || {? _spp
                           || ((_warn/_nkrs)$2*_sckrs)$2
                           || (((((_warn/FAP_K.FAP().IL)$2/_nkrs)$2)*FAP_K.FAP().IL)$2*_sckrs)$2
                           ?}
                        || _warn
                        ?};
            _ilfap:={? _dksql.IL<>_dksql.ILR || _dksql.ILR || _dksql.IL ?};
            _dksql.CENA:=_cena:={? FAP_K.FAP().IL=0 || 0 || (_dksql.WAR/_ilfap)$_dokl_z ?};
            _dksql.OLD_CK:=FAP_K.CK;
            _dksql.OLD_C:=exec('FindAndGet','#table',DK,_dksql.DK,,"C",_dksql.CENA);
            _cenak:=_dksql.KK/_dksql.ILR $_dokl_z;
            _koszo:=((_cena+_cenak)*_dksql.ILR$_dokl_z)-((_cena*_dksql.ILR)$_dokl_z);
::            _koszm:=((_cena+_cenak-0.01)*_dksql.ILR$_dokl_z)-((_cena*_dksql.ILR)$_dokl_z);
::            _koszp:=((_cena+_cenak+0.01)*_dksql.ILR$_dokl_z)-((_cena*_dksql.ILR)$_dokl_z);
            {? (_koszo<>_dksql.KK & ~_spkosz)
            || _spkosz:=FUN.choice('Dokument zakupu jest powiązany z dokumentami magazynowymi.\n'
                                   'Zostaną one ponownie wycenione z uwzględnieniem kosztów.\n\n'
                                   'Po przeliczeniu kosztów wg ceny występują różnice\n'
                                   'do zadeklarowanej wartości kosztu dla pozycji.\n'
                                   'Proszę wybrać sposób przypisania kosztu.'@
                         ,1,'&Obliczony'@,'Za&niżony'@,'Za&wyżony'@);
               {? ~_spkosz || _spkosz:=1 ?}
            ?};
            {? (_koszo<>_dksql.KK) & _spkosz>1 || _cenak:=_cenak+({? _spkosz=2 || -1 || 1 ?}*0.01) ?};
            _koszt:=((_cena+_cenak)*_dksql.ILR$_dokl_z)-((_cena*_dksql.ILR)$_dokl_z);
            _dksql.CK:=_cenak $ _dokl_c;
            _dksql.CENA+=_cenak $ _dokl_c;
            _dksql.WARC:=(_dksql.ILR*_cena)$2;
            _dksql.add(1)
         ?}
      ?};
      FAP_K.next()
   !};
   _mskfapk:=FAP_K.name();
   _mskfakk:=FAKS_K.name();
   exec('mag_psh','open_tab');
   do();
   _dksql.clear();
   {? _dksql.first()
   || {!
      |? _msk:=form(8+_dksql.DK)+3;
         exec('mag_open','open_tab',1+_msk,_msk+2);
         DK.prefix();
         ND.prefix();
         {? DK.seek(_dksql.DK) & ~(DK.N().MAG().TYP*'EWI') & DK.C<>_dksql.CENA
         || _dkref:=DK.ref();
::          poprawa wszystkich innych pozycji jesli zmiana kursu
            {? _zmkrs>0 & _nkrs>0
            || DK.N().SYM;
               ND.KRS:=ND.NKRS:=_nkrs;
               ND.DTK:=ND.NDTK:=_ndtk;
               ND.RTK:=ND.NRTK:=_nrtk;
               ND.NTK:=ND.NNTK:=_nntk;
               {? ND.put
               || DK.cntx_psh();
                  _dksql.cntx_psh();
                  DK.index('DOKMAG');
                  DK.prefix(ND.ref());
                  {? DK.first
                  || _oki:=1;
                     {!
                     |?
                        {? DK.ref<>_dkref & (_dksql.clear(); _dksql.prefix($DK.ref()); ~_dksql.first())
                        || ZMIENNE.M:=DK.M;
                           DK.KURS:=_nkrs;
                           _ncen:=(DK.CWAL*DK.KURS)$DK.M().DOKL_C;
                           {? DK.put & exec('zmcene','magdok_poz',DK.ref(),_ncen,DK.CWAL,,DK.C)=0
                           || undo();
                              FUN.info('Zmiana ceny dostawy dla indeksu %1'
                                       ' nie powiodła się.\n\nOperacja została anulowana.'@[DK.M().KTM]);
                              _oki:=0
                           ?};
::                         zmiana znacznika wyceny z kosztami
                           {? _oki & _ncen<>DK.C || exec('delWYCdk','faktury_wspolne',$DK.ref()) ?}
                        ?};
                        DK.next
                     !}
                  ?};
                  _dksql.cntx_pop();
                  DK.cntx_pop();
                  DK.get
               ?}
            ?};
            _old_c:=DK.C;
            {? _zmkrs>0 & _nkrs>0
            || _cwal:={? DK.KURS>0 || (DK.C-_dksql.CK)/DK.KURS || DK.CWAL ?}$DK.M().DOKL_C;
               DK.C:=(_cwal*_nkrs $DK.M().DOKL_C)+_dksql.CK;
               DK.KURS:=_nkrs
            |? _zmkrs<>-1
            || DK.C:=_dksql.CENA
            ?};
            {? DK.N().WAL<>INFO.NAROD
              & exec('FindInSet','#table','ODDZ','KOD2',1+_msk,1+_msk
                          ,"(ODDZ.WW='*' & ODDZ.TW*'M' | ODDZ.WW='' & INFO.TW*'M')",,,0)
            || DK.WAL:=DK.N().WAL;
               DK.KURS:={? _zmkrs>0 & _nkrs>0 || _nkrs || DK.N().KRS ?};
               DK.CWAL:={? DK.KURS<>0 || DK.C/DK.KURS || 0 ?}$DK.M().DOKL_C
            ?};
            DK.WAR:=DK.C*DK.IL$2;
            {? DK.put & exec('zmcene','magdok_poz',DK.ref(),DK.C,DK.CWAL,,_old_c)=0
            || undo();
               FUN.info('Zmiana ceny dostawy dla indeksu %1 nie powiodła się.'
                        '\n\nOperacja została anulowana.'@[DK.M().KTM]);
               _ok:=0
            || exec('dk_sum','magdok_wspolne',DK.N,1);
               FAKS_K.cntx_psh();
               FAP_K.cntx_psh();
               FAKS_K.use(_mskfakk);
               FAP_K.use(_mskfapk);
               FAP_K.index('DKSQL');
               FAP_K.prefix(_dksql.DK,);
               {? FAP_K.first()
               || {!
                  |? {? FAP_K.FAKS_K().ROZLICZ='T'
                     || FAP_K.WYC:=1;
                        FAP_K.CK:=_dksql.CK;
                        FAP_K.put(1)
                     ?};
                     FAP_K.next()
                  !}
               ?};
               FAKS_K.cntx_pop();
               FAP_K.cntx_pop()
            ?}
         ?};
         _dksql.next()
      !}
   ?};
   end();
   exec('mag_pop','open_tab');
   obj_del(_dksql)
?};
exec('fak_pop','open_tab');
~~


\copyKoszt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: ustawia powiazania kosztów do faktury zakupowej na podstawie kosztów na dokumencie
::   WE: _a - ref SQL-owy FAP
::       _b - ref SQL-owy DK
::       _c - ref SQL-owy FAKS
::       _d - ref ND.IDADD
::   WY: 1-ok 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_msk:=form(8+_c)+3;
FAKS_K.cntx_psh();
FAP_K.cntx_psh();
FAKS_K.use((FAKS_K.name()-3)+_msk);
FAP_K.use((FAP_K.name()-3)+_msk);
FAKS_K.index('ND');
FAKS_K.prefix('N',_d);
{? FAKS_K.first()
|| {!
   |? FAKS_K.FAKS:=exec('FindAndGet','#table',FAKS,_c,,,null());
      {? FAKS_K.put(1)
      || FAP_K.index('DK');
         FAP_K.prefix(FAKS_K.ref(),_b);
         {? FAP_K.first()
         || {!
            |? FAP_K.FAP:=exec('FindAndGet','#table',FAP,_a,,,null());
               {? ~FAP_K.put(1) || _res:=0 ?};
               _res & FAP_K.next()
            !}
         ?}
      || _res:=0
      ?};
      _res & FAKS_K.next()
   !}
?};
FAKS_K.cntx_pop();
FAP_K.cntx_pop();
_res


\bl_inmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: wartość początkowa pola INMG
::----------------------------------------------------------------------------------------------------------------------
FZ.KIND='M'


\selKoszty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: okienko wyświetlenia kosztów
::----------------------------------------------------------------------------------------------------------------------
_psel:=__pozkosz.mk_sel('Pozycje rozliczenia kosztu'@,'P',,,,,,,'U');

__pozkosz.win_fld(_psel,,'OPIS',,,40,,1,'Opis'@);
__pozkosz.win_fld(_psel,,'KTM',,,30,,1,'Indeks materiałowy'@);
__pozkosz.win_fld(_psel,,'NAZ',,,20,,1,'Nazwa'@);
__pozkosz.win_fld(_psel,,'WK',,,12,2,1,'Rozliczono'@);
__pozkosz.win_fld(_psel,,'C',,,12,2,1,'Cena magazynowa'@);
__pozkosz.win_fld(_psel,,'CK',,,12,2,1,'Cena kosztu'@);
__pozkosz.win_fld(_psel,,'WYC',,,3,,1,'Wyceniono'@,,'Wyceniono'@,2,,"1","0");
__pozkosz.win_sel(_psel);

_etyk:={? FZ.KIND='M' || {? ND.MAG().SKL='T' || 'faks_k_grs' || 'faks_k_grp' ?} || 'faks_k_grz' ?};
_grp:=FAKS_K.grp_make('Koszty dodatkowe'@,,_etyk);
_far:="
__pozkosz.prefix();
{? __pozkosz.first() || {! |? __pozkosz.del() !} ?};
{? {? FAKS_K.f_active() || FAKS_K.f_size() || FAKS_K.size() ?}
|| FAP_K.index('FAP');
   FAP_K.prefix(FAKS_K.ref());
   {? FAP_K.first()
   || {!
      |? {? FAP_K.FAP<>null()
         || __pozkosz.blank();
            __pozkosz.FAKS_K:=FAKS_K.IDADD;
            __pozkosz.KTM:=FAP_K.FAP().M().KTM;
            __pozkosz.NAZ:=FAP_K.FAP().M().N;
            __pozkosz.WK:=FAP_K.WB;
            __pozkosz.C:={? FAP_K.DKSQL<>''
                         || exec('FindAndGet','#table',DK,FAP_K.DKSQL,,\"C\",0)
                         || 0
                         ?};
            __pozkosz.CK:=FAP_K.CK;
            __pozkosz.WYC:=FAP_K.WYC;
            __pozkosz.OPIS:=exec('descROZ','faktury_wspolne',FAP_K.DKSQL,FAP_K.FAP);
            __pozkosz.add(1)
         |? FAP_K.DKSQL<>''
         || __pozkosz.blank();
            __pozkosz.FAKS_K:=FAKS_K.IDADD;
            __pozkosz.KTM:=exec('FindAndGet','#table',DK,FAP_K.DKSQL,,\"M().KTM\",'');
            __pozkosz.NAZ:=exec('FindAndGet','#table',DK,FAP_K.DKSQL,,\"M().N\",'');
            __pozkosz.WK:=FAP_K.WB;
            __pozkosz.C:=exec('FindAndGet','#table',DK,FAP_K.DKSQL,,\"C\",0);
            __pozkosz.CK:=FAP_K.CK;
            __pozkosz.WYC:=FAP_K.WYC;
            __pozkosz.OPIS:=exec('descROZ','faktury_wspolne',FAP_K.DKSQL);
            __pozkosz.add(1)
         ?};
         FAP_K.next()
      !}
   ?}
?};
__pozkosz.prefix();
__pozkosz.prefix(FAKS_K.IDADD);
__pozkosz.first();
grp_disp(__pozkosz,__pozkosz.win_sel('?'));
_wer:={? FZ.KIND='M' || {? ND.MAG().SKL='T' || 'WER_SC' || 'WER' ?} || 'WERZ' ?};
FAKS_K.actions_grayed(_wer,exec('ctrlBUTTON','faktury_wspolne'))";
_wer:={? FZ.KIND='M' || {? ND.MAG().SKL='T' || 'WER_SC' || 'WER' ?} || 'WERZ' ?};
FAKS_K.win_sel(_wer);
FAKS_K.hdr_sel(' %1 - %2 z dnia %3'@[FZ.INF_T,FZ.INF_S,$FZ.INF_D]);
FAKS_K.grp_sel(_grp,,_wer,,_far,,,15,,,,,'maximized_with_title');
FAKS_K.grp_splt(_grp,,'horizontal','pozioma_1',0);
FAKS_K.grp_sel(_grp,__pozkosz,_psel,,,10,,,,,,,'maximized_with_title');
_grp


\wycenMG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: wycenia dokument magazynowy o ile zmieniono koszty
::   WE: _a - ND.IDADD
::----------------------------------------------------------------------------------------------------------------------
ND.cntx_psh();
DK.cntx_psh();
FAKS_K.cntx_psh();
FAP_K.cntx_psh();
FAP_K.index('ND');
FAP_K.prefix(_a);
{? FAP_K.first()
|| _spkosz:=0;
   _dksql:=tab_tmp(1,'DK','STRING[16]',''
            ,'CK','REAL',''
            ,'C','REAL',''
            ,'ILR','REAL',''
            ,'CENA','REAL','');
   {!
   |? {? FAP_K.DKSQL<>'' & FAP_K.CK>0
      || _dksql.clear();
         _dksql.prefix(FAP_K.DKSQL,);
         {? ~_dksql.first()
         || _dksql.blank();
            _dksql.DK:=FAP_K.DKSQL;
            _dksql.CK:=FAP_K.CK;
            _dksql.C:=exec('FindAndGet','#table',DK,FAP_K.DKSQL,,"C",0);
            _dksql.ILR:=exec('FindAndGet','#table',DK,FAP_K.DKSQL,,"IL",0);
            _dksql.CENA:=_dksql.C+{? FAP_K.WYC || 0 || _dksql.CK ?};
            _dksql.add(1)
         ?}
      ?};
      FAP_K.next()
   !};
   exec('mag_psh','open_tab');
   do();
   _dksql.clear();
   {? _dksql.first()
   || {!
      |? _msk:=form(8+_dksql.DK)+3;
         exec('mag_open','open_tab',1+_msk,_msk+2);
         DK.prefix();
         {? DK.seek(_dksql.DK) & (1+DK.N().MAG().TYP)<>'E' & DK.C<>_dksql.CENA
         || _old_c:=DK.C;
            DK.C:=_dksql.CENA;
            {? DK.N().WAL<>INFO.NAROD
              & exec('FindInSet','#table','ODDZ','KOD2',1+_msk,1+_msk
                          ,"(ODDZ.WW='*' & ODDZ.TW*'M' | ODDZ.WW='' & INFO.TW*'M')",,,0)
            || DK.WAL:=DK.N().WAL;
               DK.KURS:=DK.N().KRS;
               DK.CWAL:={? DK.KURS<>0 || DK.C/DK.KURS || 0 ?}$DK.M().DOKL_C
            ?};
            DK.WAR:=DK.C*DK.IL$2;
            {? DK.put & exec('zmcene','magdok_poz',DK.ref(),DK.C,DK.CWAL,,_old_c)=0
            || undo();
               FUN.info('Zmiana ceny dostawy dla indeksu %1 nie powiodła się.\n\nOperacja została anulowana.'@[DK.M().KTM]);
               _ok:=0
            || exec('dk_sum','magdok_wspolne',DK.N,1);
               FAP_K.index('DKSQL');
               FAP_K.prefix(_dksql.DK,);
               {? FAP_K.first()
               || {!
                  |? {? FAP_K.FAKS_K().ROZLICZ='T'
                     || FAP_K.WYC:=1;
                        FAP_K.put(1)
                     ?};
                     FAP_K.next()
                  !}
               ?}
            ?}
         ?};
         _dksql.next()
      !}
   ?};
   end();
   exec('mag_pop','open_tab');
   obj_del(_dksql)
?};
ND.cntx_pop();
DK.cntx_pop();
FAKS_K.cntx_pop();
FAP_K.cntx_pop();
~~


\wycen_nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: wycena dokumentu z uwzględnieniem kosztów
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy uwzględnić rozpisanie kosztów w wycenie dokumentu magazynowego?'@)
|| {? FZ.KIND='Z'
   || exec('wycenND','faktury_wspolne',FAKS.ref(),1)
   || exec('wycenMG','faktury_wspolne',ND.IDADD)
   ?}
?};
~~


\delWYCdk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: usuwa dodatkowy koszt dodany do ceny dla DK
::   WE: _a - DK - SQL
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
FAP_K.index('DKSQL');
FAP_K.prefix(_a);
{? FAP_K.first()
|| {!
   |? FAP_K.WYC:=0;
      {? ~FAP_K.put(1) || _res:=0 ?};
      _res & FAP_K.next()
   !}
?};
_res


\delWYCcen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: usuwa znacznik wyceny przy zmianie dla DK
::   WE: _a - DK - SQL
::       _b - Cena koszt
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_dksql:=_a;
_koszt:=_b;
exec('fak_psh','open_tab');
exec('mag_psh','open_tab');
_dstate:=do_state();
{? ~_dstate || do() ?};
_msk:=form(8+_dksql)+3;
exec('mag_open','open_tab',1+_msk,_msk+2);
DK.prefix();
{? DK.seek(_dksql) & (1+DK.N().MAG().TYP)<>'E' & DK.C>0 & _koszt>0 & (DK.C-_koszt)>0
|| _old_c:=DK.C;
   DK.C-=_koszt;
   {? DK.N().WAL<>INFO.NAROD
     & exec('FindInSet','#table','ODDZ','KOD2',1+_msk,1+_msk
                 ,"(ODDZ.WW='*' & ODDZ.TW*'M' | ODDZ.WW='' & INFO.TW*'M')",,,0)
   || DK.WAL:=DK.N().WAL;
      DK.KURS:=DK.N().KRS;
      DK.CWAL:={? DK.KURS<>0 || DK.C/DK.KURS || 0 ?}$DK.M().DOKL_C
   ?};
   DK.WAR:=(DK.IL*DK.C)$2;
   {? DK.put & exec('zmcene','magdok_poz',DK.ref(),DK.C,DK.CWAL,,_old_c)=0
   || undo();
      FUN.info('Zmiana ceny dostawy dla indeksu %1 nie powiodła się.\n\nOperacja została anulowana.'@[DK.M().KTM]);
      _ok:=0
   || exec('dk_sum','magdok_wspolne',DK.N)
   ?}
?};
{? ~_dstate || end() ?};
exec('fak_pop','open_tab');
exec('mag_pop','open_tab');
_res


\ctrlBUTTON
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: sprawdza czy wygasić akcje klawisze
::----------------------------------------------------------------------------------------------------------------------
_res:='';
FAKS_K.cntx_psh();
FAP_K.cntx_psh();
{? FZ.KIND='Z'
|| _ind:='FAKS';
   _prf:=FZ.FAKS
|| _ind:='ND';
   _prf:=FZ.IDND
?};
_isroz:=0;
_ispoz:=0;
_isksg:=FZ.KIND='M'
      & exec('FindAndGet','#table',ND,FZ.IDND,,"ZAK='T'
         | (';KR+;KR-;KN+;KN-;'*(';%1;'@[TYP().T]))>0
         | (TYP().INW<>'N' & INN='T')",0);
:: Czy podlega rozpisaniu
FAKS_K.index(_ind);
FAKS_K.prefix('N',_prf);
{? FAKS_K.first()
|| {!
   |? {? FAKS_K.ROZLICZ='T'
      || _isroz+=1
      |? FAKS_K.ROZLICZ='N'
      || _ispoz+=1
      ?};
      {? FAKS_K.IDND<>''
       & exec('FindAndGet','#table',ND,FAKS_K.IDND,,"ZAK='T'
          | (';KR+;KR-;KN+;KN-;'*(';%1;'@[TYP().T]))>0
          | (TYP().INW<>'N' & INN='T')",0)
      || _isksg:=1
      ?};
      FAKS_K.next()
   !}
?};
{? FZ.KIND='Z'
|| {? ~_isroz           || _res+='Z(R)' ?}
|| {? ~_isroz & ~_ispoz || _res+='Z(RP)'
   |? ~_isroz           || _res+='Z(R)'
   |? ~_ispoz           || _res+='Z(P)'
   ?}
?};
:: Czy podlega wycenie
{? FZ.KIND='M' & exec('FindAndGet','#table',ND,FZ.IDND,,"TYP().P<>'T'",0)
|| _res+='W'
|? FZ.KIND='M'
|| FAP_K.index('ND');
   FAP_K.prefix(FZ.IDND);
   {? FAP_K.first()
   || _all:=FAP_K.size();
      {!
      |? _all-=FAP_K.FAKS_K().ROZLICZ='N' | FAP_K.WYC;
         FAP_K.next()
      !};
      {? ~_all || _res+='W' ?}
   || _res+='W'
   ?}
|| FAP_K.index('FAKS');
   FAP_K.prefix(FZ.FAKS);
   {? ~(FAP_K.first() & FAP_K.find_tab('first','DKSQL',,'<>','','WYC',,'<>',1)) || _res+='W' ?}
?};
FAKS_K.cntx_pop();
FAP_K.cntx_pop();
{? _isksg || _res+='Z(R)W' ?};
_res


\descROZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: zwraca opis
::   WE: _a - DKSQL
::       [_b] - FAP.ref()
::----------------------------------------------------------------------------------------------------------------------
_dksql:={? var_pres('_a')=type_of('') || _a || '' ?};
  _fap:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_res:='';

{? _dksql<>''
|| _msk:=form(8+_dksql)+3;
   _act:=DK.name()+3;
   ND.cntx_psh();
   DK.cntx_psh();
   {? _msk<>_act
   || ND.use('nagdo'+_msk);
      DK.use('dokma'+_msk)
   ?};
   DK.prefix();
   {? DK.seek(_dksql)
   || _res:='%1: %2 z dnia %3, poz.%4'@[DK.N().TYP().T,DK.N().SYM,$DK.N().D,$DK.P]
   ?};
   ND.cntx_pop();
   DK.cntx_pop()
|? _fap<>null()
|| _msk:=ref_name(_fap)+3;
   _act:=FAP.name()+3;
   FAKS.cntx_psh();
   FAP.cntx_psh();
   {? _msk<>_act
   || FAKS.use('faktu'+_msk);
      FAP.use('fakpo'+_msk)
   ?};
   FAP.prefix();
   {? FAP.seek(_fap)
   || _res:='%1: %2 z dnia %3, poz.%4'@[FAP.FAKS().T().T,FAP.FAKS().SYM,$FAP.FAKS().DW,$FAP.POZ]
   ?};
   FAKS.cntx_pop();
   FAP.cntx_pop()
?};
_res


\prwbfakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: przed redakcji pola wartosc brutto
::   WE: [_a] - 0 z kontrolą waluty, 1(domyślnie)-bez kontroli
::----------------------------------------------------------------------------------------------------------------------
_ctrl:={? var_pres('_a')=type_of(0) & _a=1 || 1 || FAKS_K.WAL=INFO.NAROD ?};
FZ.KIND='M' & FAKS_K.ROZLICZ<>'T' & FAKS_K.WN=0 & _ctrl


\prsvfakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji pola stawka VAT
::  OLD: \posvfakk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('prwbfakk','faktury_wspolne',1)
|| exec('jakislsv','ustawienia')
|| 0
?}


\after_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: po redakcji konta kosztowego
::----------------------------------------------------------------------------------------------------------------------
_pozo:=var_pres('__mgkos')>117;
{? _pozo
|| {? FZ.KK<>null()
   || __mgkos.KK:=FZ.KK().SYM;
      __mgkos.KKSQL:=$FZ.KK
   || __mgkos.KKSQL:=__mgkos.NKSQL;
      __mgkos.KK:={? __mgkos.KKSQL<>'' || exec('FindAndGet','#table',KK,__mgkos.KKSQL,,"SYM",'') || '' ?}
   ?}
|| {? FZ.KK<>null()
   || __zakkos.KK:=FZ.KK().SYM;
      __zakkos.KKSQL:=$FZ.KK
   || __zakkos.KKSQL:=__zakkos.NKSQL;
      __zakkos.KK:={? __zakkos.KKSQL<>'' || exec('FindAndGet','#table',KK,__zakkos.KKSQL,,"SYM",'') || '' ?}
   ?}
?};
1


\upr_cscz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: Uprawnienia do cen sprzedaży/zakupu
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| 1
|| {? exec('upr_cscz','ceny')
   || ''
   || 0
   ?}
?}


\fap_czy_cennik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Sprawdza, jaki cennik jest przyporządkowany do pozycji z tabeli FAP
::   WE: _a - kontrahent
::       _b - odbiorca
::       _c - sposób płatności
::       _d - waluta
::       [_e] - tabela do sprawdzenia domyślnie FAP
::   WY: 1. czy w pozycjach dokumentu może być cennik inny niż dotychczas (zgodny z aktualnym nagłówkiem) N/T
::       2. sposób ustalenia cen: 0 - wybór wg dokumentu lub cennika, -2 - wg dokumentu bez komunikatu,
::                                2 - wg dokumentu z komunikatem, że nie ma cennika
::----------------------------------------------------------------------------------------------------------------------
_kh:=_a;
_odb:=_b;
_pl:=_c;
_wal:=_d;
_Tab:={? var_pres('_e')=type_of(SYSLOG) || _e || FAP ?};

{? _Tab=FAP  || _ndx:='FAP';    _prf:=FAKS.ref();       _npl:=FAKS.PL;   _nodb:=FAKS.KH_ODB;
                _nkh:=FAKS.KH;  _ngrkh:=FAKS.KH().GRKH; _nwal:=FAKS.WAL; _nwalk:=FAKS.WAL().KOD
|? _Tab=DK   || _ndx:='DOKMAG'; _prf:=ND.ref();         _npl:=null();    _nodb:=ND.KH_ODB;
                _nkh:=ND.KH;    _ngrkh:=ND.KH().GRKH;   _nwal:=ND.WAL;   _nwalk:=ND.WAL().KOD
|? _Tab=ZK_P || _ndx:='NAG';    _prf:=ZK_N.ref();       _npl:=ZK_N.PL;   _nodb:=ZK_N.ODB;
                _nkh:=ZK_N.KH;  _ngrkh:=ZK_N.KH().GRKH; _nwal:=ZK_N.WAL; _nwalk:=ZK_N.WAL().KOD
|? _Tab=OFP  || _ndx:='OFE_P';  _prf:=OFE.ref();        _npl:=OFE.PL;    _nodb:=OFE.ODB;
                _nkh:=OFE.KH;   _ngrkh:=OFE.KH().GRKH;  _nwal:=OFE.WAL;  _nwalk:=OFE.WAL().KOD
             || _ndx:='FAP';    _prf:=FAKS.ref();       _npl:=FAKS.PL;   _nodb:=FAKS.KH_ODB;
                _nkh:=FAKS.KH;  _ngrkh:=FAKS.KH().GRKH; _nwal:=FAKS.WAL; _nwalk:=FAKS.WAL().KOD
?};

:: czy w pozycjach dokumentu był cennik (zgodny z poprzednim nagłówkiem)
_mial_cennik:='N';

:: czy w pozycjach dokumentu może być cennik inny niż dotychczas (zgodny z aktualnym nagłówkiem)
_ma_cennik:='N';
_choice:=2;

TAR.cntx_psh();
TAR.prefix();
{? TAR.first() & exec('ctdt','ceny')='T'
||
   _Tab.cntx_psh();
   _Tab.index(_ndx);
   _Tab.prefix(_prf);
   {? _Tab.first()
   ||
      {! |?
:: sprawdzenie, czy odbiorca kontrahenta ma jakikolwiek cennik
         {? _Tab.TAR_H || TAR_H.use(ref_name(_Tab.TAR_H)) ?};
         _odb_cennik:='N';
         _plat:={? (_Tab.TAR_H().TAP().PL<>null | _Tab.TAR_H=null) || _npl || null ?};
         _odbi:=_nodb;
         TAP.cntx_psh();
         TAP.index('A_KH');
         TAP.prefix(ST.ODDZ,'S','K',_nkh,_Tab.M,_nwal,null,_odbi);
         {? TAP.first()
         || _odb_cennik:='T'
         || TAP.prefix(ST.ODDZ,'S','K',_nkh,_Tab.M,_nwal,_plat,_odbi);
            {? TAP.first()
            || _odb_cennik:='T'
            ?}
         ?};
         TAP.cntx_pop();
         {? _mial_cennik='N' & _Tab.TAR_H<>null()
         || _mial_cennik:='T'
         ?};
         {? (_kh<>_nkh) |
            (_odb<>_nodb &
                  ((_odb_cennik='T' & (_Tab.TAR_H().TAP().TAR().KH_ODB=null | _Tab.TAR_H=null) & _nodb<>null) |
                  _Tab.TAR_H().TAP().TAR().KH_ODB<>null())) |
            (_pl<>_npl & (_Tab.TAR_H=null | _Tab.TAR_H().TAP().PL<>null)) |
            (_wal<>_nwal) |
            (_Tab.TAR_H<>null & _Tab.TAR_H().TAP().WAL().KOD<>_nwalk)
         || TAP.cntx_psh();
            _plat:={? (_Tab.TAR_H().TAP().PL<>null | _Tab.TAR_H=null) || _npl || null ?};
            _odbi:=_nodb;

            TAP.index('A_KH');
            TAP.prefix(ST.ODDZ,'S','K',_nkh,_Tab.M,_nwal,null,null);
            {? TAP.first() || _ma_cennik:='T';_choice:=0
            || TAP.prefix(ST.ODDZ,'S','K',_nkh,_Tab.M,_nwal,_plat,null);
               {? TAP.first() || _ma_cennik:='T';_choice:=0
               || TAP.prefix(ST.ODDZ,'S','K',_nkh,_Tab.M,_nwal,null,_odbi);
                  {? TAP.first() || _ma_cennik:='T';_choice:=0
                  || TAP.prefix(ST.ODDZ,'S','K',_nkh,_Tab.M,_nwal,_plat,_odbi);
                     {? TAP.first() || _ma_cennik:='T';_choice:=0
                     || TAP.index('A_M');
                        TAP.prefix(ST.ODDZ,'S','C',_Tab.M,_nwal,null);
                        {? TAP.first() || _ma_cennik:='T';_choice:=0
                        || TAP.prefix(ST.ODDZ,'S','C',_Tab.M,_nwal,_plat);
                           {? TAP.first() || _ma_cennik:='T';_choice:=0
                           || TAP.index('A_GRKH');
                              TAP.prefix(ST.ODDZ,'S','G',_ngrkh,_Tab.M,_nwal,null);
                              {? TAP.first() || _ma_cennik:='T';_choice:=0
                              || TAP.prefix(ST.ODDZ,'S','G',_ngrkh,_Tab.M,_nwal,_plat);
                                 {? TAP.first() || _ma_cennik:='T';_choice:=0 ?}
                              ?}
                           ?}
                        ?}
                     ?}
                  ?}
               ?}
            ?};
            TAP.cntx_pop()
::         || _choice:=0
         ?};
         {? _ma_cennik='N' || _Tab.next() ?}
      !}
   ?};
   _Tab.cntx_pop()

|? exec('ctdt','ceny')='C'
||
   _Tab.cntx_psh();
   _Tab.index(_ndx);
   _Tab.prefix(_prf);
   {? _Tab.first() || _choice:=0 ?};
   _Tab.cntx_pop()
?};
TAR.cntx_pop();
:FUN.info(_ma_cennik);
{? _ma_cennik='N'
|| {? _mial_cennik='T'
   || _choice:=2
   || _choice:=-2
   ?}
?};
_ma_cennik + ' ' + form(_choice)


\porozlicz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Po zmianie znacznika do rozliczenia
::----------------------------------------------------------------------------------------------------------------------
{? FAKS_K.ROZLICZ='N' & FZ.KIND='M'
|| {? FAKS_K.WAL<>INFO.NAROD
   || FAKS_K.WB:={? FAKS_K.KRS<>0 || FAKS_K.WW*FAKS_K.KRS || FAKS_K.WW ?} $2;
      FAKS_K.WN:=FAKS_K.WV:=0;
      FAKS_K.SV:=null()
   || FAKS_K.WW:=FAKS_K.WV:=FAKS_K.KRS:=FAKS_K.WN:=0;
      FAKS_K.SV:=null()
   ?}
|| {? FAKS_K.WAL<>INFO.NAROD || FAKS_K.WN:={? FAKS_K.KRS<>0 || FAKS_K.WW*FAKS_K.KRS || FAKS_K.WW ?} $2 ?};
   {? FAKS_K.SV<>null || exec('sumafakk','faktury_wspolne') ?}
?};
1


\dk2powKK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Dodaje powiązanie do kosztów
::   WE: _a - FAP -SQL
::       _b - DK - SQL
::       _c - ND - SQL
::   WY: 0-nic nie zmieniono 1-coś zmieniono
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
FAKS.cntx_psh();
FAP.cntx_psh();
FAKS_K.cntx_psh();
FAP_K.cntx_psh();
_fap:=exec('FindAndGet','#table',FAP,_a,,,null());
_dksql:=_b;
_idnd:=exec('FindAndGet','#table',ND,_c,,"IDADD",'');

{? _fap<>null() & _idnd<>''
|| FAP_K.index('FAP_K');
   FAP_K.prefix(_fap);
   {? FAP_K.first()
   || {!
      |? {? ~FAP_K.FAKS_K().INMG & FAP_K.FAKS_K().ROZLICZ='T' & ~FAP_K.WYC & FAP_K.DKSQL=''
         || FAP_K.DKSQL:=_dksql;
            FAP_K.IDND:=_idnd;
            {? FAP_K.put(1)
            || FAKS_K.prefix();
               {? FAKS_K.seek(FAP_K.FAKS_K)
               || FAKS_K.IDND:=_idnd;
                  FAKS_K.put(1)
               ?};
               _res:=1
            ?}
         ?};
         FAP_K.next()
      !}
   ?};
   FAP_K.index('DKSQL');
   FAP_K.prefix(_dksql,);
   {? FAP_K.first()
   || {!
      |? {? FAP_K.FAKS_K().INMG & FAP_K.FAKS_K().ROZLICZ='T' & FAP_K.FAP=null()
         || FAP_K.FAP:=_fap;
            {? FAP_K.put(1)
            || FAKS_K.prefix();
               {? FAKS_K.seek(FAP_K.FAKS_K)
               || FAKS_K.FAKS:=FAP_K.FAP().FAKS;
                  FAKS_K.put(1)
               ?};
               _res:=1
            ?}
         ?};
         FAP_K.next()
      !}
   ?}
?};
FAKS.cntx_pop();
FAP.cntx_pop();
FAKS_K.cntx_pop();
FAP_K.cntx_pop();
_res


\arezREZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Analiza danych - powołanie struktury i okienka (aktualne rezerwacje)
::   WE: [_a] - 1-odśwież dane 0-domyślnie-powołaj dane
::   WY: w przypadku podania idzkp-a tabela danych
::----------------------------------------------------------------------------------------------------------------------
_refresh:=var_pres('_a')=type_of(0) & _a=1;

{? _refresh
|| _tyold:=__tyrz.IDTYP;
   _mtold:=__marz.IDMAT;
   __tyrz.clear();  {? __tyrz.first() || {! |? __tyrz.del() !} ?};
   __marz.clear();  {? __marz.first() || {! |? __marz.del() !} ?}
|| _tyold:='';
   _mtold:='';
   __tyrz:=tab_tmp(1,'KOD','STRING[10]','Typ rezerwacji'
            ,'DANE','STRING[30]','Informacje o typie rezerwacji'
            ,'IDTYP','STRING[31]','IDADD');
   __marz:=tab_tmp(1,'KTM','STRING[50]','Indeks materiałowy'
            ,'N','STRING[100]','Nazwa indeksu materiałowego'
            ,'IDMAT','STRING[31]','IDADD')
?};
__tyrz.blank();
__tyrz.IDTYP:='';
__tyrz.KOD:='..';
__tyrz.DANE:='<Wszystkie>'@;
__tyrz.add(1);
__marz.blank();
__marz.IDMAT:='';
__marz.KTM:='..';
__marz.N:='<Wszystkie>'@;
__marz.add(1);
_buf:=sql('select distinct TYP, MG from REZ where RODZ=\'B\' and TYP in (\'Z\',\'T\')');
:: przepisanie typów zamówień do tabeli pomocniczej
{? _buf.first()
|| {!
   |? __tyrz.blank();
      __tyrz.IDTYP:=_buf.TYP+_buf.MG;
      __tyrz.KOD:={? (1+_buf.TYP)='Z' & _buf.MG<>'' || 'ZMG'
                  |? (1+_buf.TYP)='Z'               || 'ZNO'
                  || 'TYM'
                  ?};
      __tyrz.DANE:={? (1+_buf.TYP)='Z' & _buf.MG<>'' || 'z zamówień w magazynie %1'@[ST.MAG().SYM]
                   |? (1+_buf.TYP)='Z'               || 'z zamówień bez magazynu'
                   || 'tymczasowe'
                   ?};
      __tyrz.add(1);
      _buf.next()
   !}
?};
obj_del(_buf);

:: przepisanie materiałów do tabeli pomocniczej
_buf:=sql('select distinct M.IDADD IDMAT from REZ join M where REZ.RODZ=\'B\' and TYP in (\'Z\',\'T\')');
{? _buf.first()
|| {!
   |? __marz.blank();
      __marz.IDMAT:=_buf.IDMAT;
      __marz.KTM:=exec('FindAndGet','#table',M,__marz.IDMAT,,"KTM",'');
      __marz.N:=exec('FindAndGet','#table',M,__marz.IDMAT,,"N",'');
      __marz.add(1);
      _buf.next()
   !}
?};
obj_del(_buf);

:: definicja okienek
{? ~_refresh
|| __wtyrz:=__tyrz.mk_sel('Typy rezerwacji'@,'P',0,'#rezlog_tyrz',,,,,'U','T');
   __tyrz.win_fld(__wtyrz,,'KOD',,,13,,1,'Typ rezerwacji'@);
   __tyrz.win_fld(__wtyrz,,'DANE',,,26,,1,'Rodzaj rezerwacji'@);
   __tyrz.win_act(__wtyrz,0,'Szukaj');
   __tyrz.win_act(__wtyrz,0,'Kolejność');
   __tyrz.win_sel(__wtyrz);

   __wmarz:=__marz.mk_sel('Indeksy materiałowe'@,'P',0,'#rezlog_marz',,,,,'U','T');
   __marz.win_fld(__wmarz,,'KTM',,,20,,1,'Indeks materiałowy'@);
   __marz.win_fld(__wmarz,,'N',,,20,,1,'Nazwa'@);
   __marz.win_act(__wmarz,0,'Szukaj');
   __marz.win_act(__wmarz,0,'Kolejność');
   __marz.win_sel(__wmarz);

   __warez:=REZ.mk_sel('Dane rezerwacji'@,'P',0,'#rezlog_arez',,,,,'U','T');
   REZ.win_fld(__warez,,'TYP',,,3,,1,'Typ'@);
   REZ.win_fld(__warez,,'ODDT',,,10,,1,'Od daty'@);
   REZ.win_fld(__warez,,'DODT',,,10,,1,'Do daty'@);
   REZ.win_fld(__warez,BEER,'IL_DNI',,,-10,,1,'Ilość dni'@);
::      REZ.win_fld(__warez,,'OP',,,-12,,1,'Opis zdarzenia'@);
   REZ.win_fld(__warez,,'M','KTM',,-10,,1,'Indeks materiałowy'@);
   REZ.win_fld(__warez,,'M','N',,-12,,1,'Nazwa'@);
   REZ.win_fld(__warez,,'US','KOD',,10,,1,'Użytkownik'@);
   REZ.win_fld(__warez,,'ILR',,,12,ST.DOKL,1,'Ilość'@);
::      __ansu.win_fld(__wansu,,'ILR',,,12,ST.DOKL,1,'Aktualna'@);
   REZ.win_fld(__warez,,'MG','SYM',,8,,1,'Magazyn'@);
   REZ.win_fld(__warez,,'KH','KOD',,8,,1,'Kontrahent'@);
   REZ.win_fld(__warez,,'KH','SKR',,8,,1,'Skrót'@);
   REZ.win_fld(__warez,,'KH','NAZ',,8,,1,'Nazwa skrócona'@);
   REZ.win_fld(__warez,BEER,'OPSC',,,47,,1,'Opis'@);
::      __ansu.win_fld(__wansu,,'SYM',,,12,,1,'Zamówienie'@);
::   REZ.win_act(__warez,1,'Formuła','Odśwież'@@,,'Odświeżenie danych'@,"exec('arezREZ','faktury_wspolne',1)",,1);
::   REZ.win_act(__warez,0,'Formuła','Odśwież'@@,,'Odświeżenie danych'@,"exec('arezREZ','faktury_wspolne',1)",,1);
   REZ.win_act(__warez,0,'Formuła','Usuń'@@,,'Usunięcie rezerwacji'@,"exec('delreza','rezerwacje')"
    ,,,1,"exec('delreza','rezerwacje')",,'U');
::      __ansu.win_act(__wansu,0,'Formuła','Sz&czegóły'@@,,'Szczegóły log-a'@
::       ,"exec('dispSPRLOG','faktury_wspolne','S',__ansu.IDZKP)");
   REZ.win_act(__warez,0,'Rekord',,,,"exec('rekREZ','faktury_wspolne')");
   REZ.win_act(__warez,0,'Szukaj');
   REZ.win_act(__warez,0,'Kolejność');
   REZ.win_sel(__warez)
|| exec('init_tyrz','faktury_wspolne',_tyold,_mtold)
?};
~~


\init_tyrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: ustawienie prefiksów dla REZ
::   WE: [_a] - __tyrz.IDTYP, domyślnie brak
::       [_b] - __mtrz.IDMAT, domyślnie brak
::----------------------------------------------------------------------------------------------------------------------
_idtyp:={? var_pres('_a')=type_of('') || _a || '' ?};
_idmat:={? var_pres('_b')=type_of('') & +(_b)=31 || _b || '' ?};
REZ.prefix();
__tyrz.clear();
{? _idtyp=''
|| __tyrz.first()
|| {? __tyrz.last()
   || {!
      |? {? __tyrz.IDUSR=_idtyp
         || 0
         || __tyrz.prev()
         ?}
      !}
   ?}
?};
:: grp_disp(__tyrz,__wtyrz);
__marz.clear();
{? _idmat=''
|| __marz.first()
|| {? __marz.last()
   || {!
      |? {? __marz.IDMAT=_idmat
         || 0
         || __marz.prev()
         ?}
      !}
   ?}
?};
:: grp_disp(__marz,__wmarz);
exec('refresh_tyrz','faktury_wspolne',1);
~~

\refresh_tyrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Odświeża okienko dla _REZ
::   WE: [_a] - pierwsze wejście 1-tak 0-domyślnie nie
::----------------------------------------------------------------------------------------------------------------------
_first:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_msk:=ST.ODDZ+'__';
REZ.f_clear();
REZ.f_set('M(KTM),NRK'
    ,'join M using(REZ.M,M.REFERENCE)'
    ,'substr(REZ.REFERENCE,5,3)=\':_a\' and REZ.RODZ=\'B\' and REZ.TYP in (\'Z\',\'T\',\'S\')'
    ,_msk);
{? _first || REZ.f_first() ?};
grp_disp(REZ,__warez);
~~


\pd_tyrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed odświeżeniem okienko dla __tyrz
::----------------------------------------------------------------------------------------------------------------------
exec('refresh_tyrz','faktury_wspolne');
1


\pr_tyrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed obsługą okienko dla __tyrz
::----------------------------------------------------------------------------------------------------------------------
1


\pd_marz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed odświeżeniem okienko dla __marz
::----------------------------------------------------------------------------------------------------------------------
exec('refresh_tyrz','faktury_wspolne');
1


\pr_marz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed obsługą okienko dla __marz
::----------------------------------------------------------------------------------------------------------------------
1


\pd_arez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed odświeżeniem okienko dla REZ
::----------------------------------------------------------------------------------------------------------------------
1


\pr_arez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed obsługą okienko dla REZ
::----------------------------------------------------------------------------------------------------------------------
1


\rekREZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Uzupełnienie zmiennych
::----------------------------------------------------------------------------------------------------------------------
_msk:=SC.name()-2;
BEER.IL_DNI:=REZ.DODT-REZ.ODDT;
{? REZ.TYP='Z'
|| BEER.OPSC:=exec('FindAndGet','#table',ZK_N,$REZ.ZK_N,
               ,"{? T().R='Z'
                 || 'Zamówienie sprzedaży %1'@[SYM]
                 |? LIM='T'
                 || 'Zamówienie limitowe %1'@[SYM]
                 || 'Zamówienie wewnętrzne %1'@[SYM]
                 ?}
                ",'')
|? REZ.ZL_REZ<>'N'
|| BEER.OPSC:=exec('FindAndGet','#table',ZL,REZ.ZL,,"'Zlecenie produkcyjne %1'@[SYM]",'')
|| BEER.OPSC:=''
?};
{? REZ.SC<>'' & 'dokma'=(5+REZ.SC)
|| SC.cntx_psh();
   SC.use(_msk+(form(8+REZ.SC)+2));
   SC.index('SRDK');
   SC.prefix(REZ.SC,REZ.SC);
   {? SC.first()
   || BEER.DOSTAWA:=SC.D;
      exec('sc_info','magazyn_stan');
      BEER.OPSC+='%1Dostawa: %2'@[{? +BEER.OPSC || ', ' || '' ?},DISP.DOST]
   ?};
   SC.cntx_pop()
|| BEER.DOSTAWA:=date(0,0,0);
   DISP.DOST:=''
?};
''


\biq_faks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Analiza BI w obszarze "Dokumenty sprzedaży"
::----------------------------------------------------------------------------------------------------------------------
exec('np_run','#b__box','BIQ_LSP_FAKA')


\one_poz_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: generuje ZZ dla korekty
::       _h - ref pozycji dokumentu kor   DK.ref
::       _i - ref pozycji faktury korekty FAP.ref
::       _j - magazyn
::       _k - rodzaj korekty 1-historyczna 0-zwykla
::       _l - data dostawy
::       _m - cena dostawy
::       _n - symbol dostawy
::       [_o] - ref palety
::       [_p] - termin waznosci
::       [_q] - klucz grupujący
::       [_r] - ilość w drugiej jednostce miary
::       [_s] - współczynnik jednostce miary
::       [_t] - ref SQL 2 jednostki miary
::       [_u] - kraj pochodzenia
::  OLD: \one_poz_p/faktury0.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=15  || {? type_of(_o)<>7 || _o:=null ?}  || _o:=null ?};
{? _>=16  || {? type_of(_p)<>4 || _p:=date(0,0,0) ?}  || _p:=date(0,0,0) ?};
_grp_key:={? var_press('_q')=type_of('') || _q || '' ?};
_ilosc2:={? var_press('_r')=type_of(0) || _r || 0 ?};
_ws2:={? var_press('_s')=type_of(0) || _s || 0 ?};
_j2:={? var_press('_t')=type_of('') || _t || '' ?};
_kp:={? var_press('_u')=type_of('') || _u || '' ?};

_magazyn:=_j;
_blad:=0;

{? type_of(mag[#_magazyn])<>7
|| mag[#_magazyn]:=null
?};

_data:=FAKS.DZ;


ND.cntx_psh();
DK.cntx_psh();
_oldmag:=ND.name()+2;
exec('mag_open','open_tab',ST.ODDZ,form(_data~1,,0,'99')+2);
exec('inw_open','open_tab',ST.ODDZ,form(_data~1,,0,'99')+2);

{? type_of(mag[#_magazyn])=7
||
   {? mag[#_magazyn]=null
   || _time:=exec('spr_dttm','magazyn_inw',_magazyn,_data,1);
      {? (*_time)>(*time(23,59,0)) || _time:=time(0,0,0) ?};
      {? ~exec('spr_datd','faktury_nag',_magazyn,_time)
      || _blad:=1;
         undo();
         FUN.info('Nieprawidłowa data. Dokument zwrotu nie zostanie wygenerowany.'@)
      |? ~exec('sprd_inp','magazyn_inw',_e,_data,_magazyn,,_time)
      || undo();
         FUN.info('Wprowadzono arkusz inwentaryzacji ciągłej dla magazynu %1,\n'
            'na którym wprowadzono wybrany indeks materiałowy.\n'
            'Wybór indeksu niemożliwy.'@[exec('FindAndGet','#table',MG,_magazyn,,"SYM",'')]);
         _blad:=1
      ||
::       pierwszy raz dla tego magazynu - generujemy naglowek
         ND.clear;
         {? __notkor || ND.TYP:=__typpn || ND.TYP:=_a ?};
         ND.MAG:=_magazyn;
         {? __notkor || ND.KH:=__kh_pn; ND.KH_ODB:=__odbpn ?};
         ND.AR:=_data~1;
         ND.AM:=_data~2;
         _nr:={? MG_ZZ_NR.find_key(ND.MAG().SYM,) || MG_ZZ_NR.NR || 0 ?};
         {? _nr
         ||
            numer:=_nr;
            oldnumer:=1;
            exec('nr_old','numery')
         ?};

         mag[#_magazyn]:=exec('addnag','magdok_nag',_magazyn,_data~1,_data~2,{? __notkor || __typpn || _a ?}
            ,'N',FKOR.KK,_data,null,{? __notkor || __kh_pn || FAKS.KH ?},FAKS.ref,,,,,,,_nr,0,,_time)
      ?}
   ?};
   Ddok:=mag[#_magazyn];
   _ilosc:=_f;
   _wydano:=0;
:: sprawdzanie pozycji dokumentow rozchodowych

   _f_mag:=#_magazyn;

   ND.cntx_psh();
   DK.cntx_psh();
   {? ~_blad & ~_k
   ||
::    ZZ-tka do zwyklej korekty

      exec('open','open_tab',ST.ODDZ,ref_name(_h)+2,'sp');

      DK.clear();
      {? DK.seek(_h)
      || _wgewi:=exec('czyJS','jm',DK.M);
         {? ~_wgewi
         || _wydano:=|_ilosc;
            _ws2:=exec('oblWSP','jm',DK.M);
            _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.M().J2,DK.M().J);
            _dokl_m:=exec('jaka_dok_m','jm',DK.M);
            {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
            roundmet(BEER.MDOKL);
            _il2:={? _ws2>0 || |_ilosc/_ws2 || 0 ?}$_dokl_s;
            _ws2:={? _il2>0 || |_ilosc/_il2 || 0 ?}$_dokl_s;
            exec('przyjdod','jm',$DK.M().J2,_ws2,_il2)
         |? _j2<>'' & $DK.M().J<>_j2 & _ws2>0
         || _wydano:=|_ilosc2;
            exec('przyjdod','jm',_j2,1/_ws2,|_ilosc)
         || _wydano:=|_ilosc
         ?};
         _rdk:=DK.RDK;
         _ndk:=DK.NDK;
         _srdk:=DK.SRDK;
         _prdk:=DK.PRDK;
         _dat:=DK.DOST;
         _cen:=exec('cena_mag','ceny',DK.M,DK.RDK,DK.NDK,,DK.C);
         _cecha:=DK.DK_C;
         _stats:=DK.STATS;
         _scean:=DK.SCEAN;

         ND.cntx_psh();
         DK.cntx_psh();
         exec('mag_open','open_tab',ST.ODDZ,form(_data~1,,0,'99')+2);
         ND.clear;
         ND.seek(Ddok);
         _ref:=exec('adddk','magdok_poz',Ddok,_e,_wydano,_cen,_dat,,,,,,,,7,_rdk,_ndk,_cecha,_srdk,_prdk,,,,,,_stats);
         DK.clear;
         DK.seek(_ref);
         DK.DK_C:=_cecha;
         DK.TW:=_p;
         DK.SCEAN:=_scean;
         {? ~__notkor & ND.TYP().DN<>'T'
         ||
            DK.RDK:=#DK.ref;
            DK.NDK:=DK.name;
            DK.SRDK:=DK.PRDK:=BB.refsql(DK.ref);
            DK.DOST:=ND.D;
            _statsM:=exec('statsM','statexam',DK.M);
            DK.STATS:={? _statsM=null() || ND.MAG().DEFSTATS || _statsM ?}
         ?};
         DK.REF_KOR:=$_h;
         DK.FAP:=$_i;
         FAKS.cntx_psh();
         FAP.cntx_psh();
         FAP.use(ref_name($_i));
         FAP.prefix();
         {? FAP.seek($_i) & FAKS.use(ref_name($FAP.FAKS))
         || exec('adfap2dk','magdok_wspolne',$FAP.ref(),$DK.ref(),$FAP.FAKS,$DK.N,_wydano,FAP.FAKS().WHERE)
         ?};
         FAKS.cntx_pop();
         FAP.cntx_pop();
         {? _kp<>'' || DK.KP:=_kp ?};
         DK.put();
         {? ~__notkor & DK.N().MAG().SL='T'
         || exec('add2dk_l','magdok_wspolne',DK.ref(),null,DK.N().MAG().EANL,null,_p,date(0,0,0),DK.IL,DK.N().MAG
               ,DK.M,1,,_o,,1)
         ?};
         ND.cntx_pop();
         DK.cntx_pop()
      ?};

      exec('open','open_tab',ST.ODDZ,2-$ST.AR,'sp')
   |? ~_blad
   ||
::    ZZ-tka do korekty historycznej
      _wydano:=|_f;
      _dat:=_l;
      _cen:=_m;
      _cecha:={? _n<>'' || exec('FindInSet','#table','DK_C','SYM',_n,_n) || null ?};

      ND.clear;
      ND.seek(Ddok);
      _ref:=exec('adddk','magdok_poz',Ddok,_e,_wydano,_cen,_dat,,,,,,,,7,,,_cecha);
      DK.clear;
      DK.seek(_ref);
      DK.FAP:=$_i;
      FAKS.cntx_psh();
      FAP.cntx_psh();
      FAP.use(ref_name($_i));
      FAP.prefix();
      {? FAP.seek($_i) & FAKS.use(ref_name($FAP.FAKS))
      || exec('adfap2dk','magdok_wspolne',$FAP.ref(),$DK.ref(),$FAP.FAKS,$DK.N,_wydano,FAP.FAKS().WHERE)
      ?};
      FAKS.cntx_pop();
      FAP.cntx_pop();
      DK.TW:=_p;
      {? _kp<>'' || DK.KP:=_kp ?};
      DK.put();
      {? DK.N().MAG().SL='T'
      || exec('add2dk_l','magdok_wspolne',DK.ref(),null,DK.N().MAG().EANL,null,_p,date(0,0,0),DK.IL,DK.N().MAG
            ,DK.M,0,,_o,,1)
      ?}
   ?};
   DK.cntx_pop();
   ND.cntx_pop();

:: przypisanie nowej WZ do faktury
   FAKS.cntx_psh();
   FAKS.clear();
   ND.cntx_psh();
   exec('mag_open','open_tab',ST.ODDZ,form(_data~1,,0,'99')+2);
   ND.clear();
   FAKS.get();
   {? ~FAKS.put(1) || undo() ?};
   {? ND.seek(Ddok)
   || {? ND.TYP().UE='T' || ND.NIP_UE:=FAKS.NIP_UE ?};
      ND.FAKS_REF:=$FAKS.ref();
      ND.F:='T';
      ND.GRP_KEY:=_grp_key;
      ND.put()
   || undo()
   ?};
   ND.cntx_pop();
   ND.get();
   FAKS.cntx_pop();
   FAKS.get()
?};
exec('mag_open','open_tab',ST.ODDZ,_oldmag);
exec('inw_open','open_tab',ST.ODDZ,_oldmag);
ND.cntx_pop();
DK.cntx_pop();
~~


\fakskh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Podmioty dokumentu sprzedaży
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.STAT_REJ<>'N'
      |
   (_r_lock:=exec('r_lock_one','#table',FAKS,FAKS.ref()))
||
   FAKSKH.index('UNIK');
   FAKSKH.prefix(FAKS.ref());
   {? FAKS.WHERE='N'
   || FAKSKH.win_edit('KH_K')
   || FAKSKH.win_edit('KH')
   ?};
   exec('sel_win_kh','ustawienia');
   FAKSKH.fld_fml('UDZIAL','EDIT_FORMAT',"'in_prec=2'");
   FAKSKH.fld_fml('UDZIAL','DISPLAY_FORMAT',"'out_prec=2'");
   FAKSKH.win_sel('WER');
   {? FAKS.STAT_REJ='N' & (FAKS.T().KOR='N' | FAKS.WHERE='N' & exec('kznf1_czy_ed','faktury_nag'))
   || FAKSKH.select()
   || FAKSKH.select(,,,'DPU:D')
   ?};
   KH.actions('WER','');
   {? FAKS.STAT_REJ='N' || exec('r_unlock_one','#table',FAKS,FAKS.ref(),_r_lock) ?}
?}


\fakskh_set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Zaznacza wymagalne pola podmiotu (FAKSKH)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| FAKSKH.efld_opt('KH_K','mark=1',,'KH')
|| FAKSKH.efld_opt('KH_K','mark=0',,'KH')
?};
{? FAKSKH.ROLA='Dodatkowy nabywca'
|| FAKSKH.efld_opt('KH','enable=1',,'UDZIAL')
|| FAKSKH.efld_opt('KH','enable=0',,'UDZIAL')
?}


\fakskh_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Dołącz w FAKSKH
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('fakskh_set_efld_opt','faktury_wspolne',1); 1


\fakskh_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Popraw w FAKSKH
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('fakskh_set_efld_opt','faktury_wspolne',FAKS.T().KOR='N' | FAKSKH.FAKSKH=''); 1


\fakskh_record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Rekord przed FAKSKH
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
||
   {? FAKSKH.FAKSKH=''
   || FAKSKH.actions_grayed('WER','')
   || FAKSKH.actions_grayed('WER','u')
   ?};
   exec('fakskh_set_efld_opt','faktury_wspolne',FAKS.T().KOR='N' | FAKSKH.FAKSKH='')
?};
exec('rekprzed','color','FAKSKH#01')


\fakskh_kolor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Kolor FAKSKH
::   WE:
::   WY: napis oznaczający kolor
::----------------------------------------------------------------------------------------------------------------------
_kolor:='';
{? FAKSKH.SYS='T'
|| _kolor:='FAKSKH#01#01'
?};
_kolor


\fakskh_legenda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Legenda dla FAKSKH
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','FAKSKH#01')


\fakskh_chk_record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Rekord po FAKSKH (__CHK.record)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_fld:=
   {? (4+FAKSKH.name()='fkpf' & FAKS.WHERE='N' | 4+FAKSKH.name()='fkpd' & DOK.DOK_REJ().KOR_NAG='T')
         &
      FAKSKH.FAKSKH<>''
   || __CHK.record(FAKSKH,,'ROLA')
   || __CHK.record(FAKSKH,,'ROLA','KH')
   ?};
{? _fld<>''
||
   _fld

|? FAKSKH.UDZIAL<0 | 100<=FAKSKH.UDZIAL
||
   FUN.info('Udział powinien się mieścić w przedziale <0;100).'@);
   _fld:='UDZIAL'
||
   _fld:='';
   _ref:={? -menu_txt='popraw' || FAKSKH.ref() || null() ?};
   _kh_is_null:=FAKSKH.KH=null();
   {? 4+FAKSKH.name()='fkpf'
   || _crc_fun:="
      {? FAKS.WHERE='N' & _a
      || FAKSKH.crc('FAKS','ROLA','KH','FAKSKH')
      || FAKSKH.crc('FAKS','ROLA','KH')
      ?}
      "
   || _crc_fun:="
      {? DOK.DOK_REJ().KOR_NAG='T' & _a
      || FAKSKH.crc('DOK','ROLA','KH','FAKSKH')
      || FAKSKH.crc('DOK','ROLA','KH')
      ?}
      "
   ?};
   _crc:=_crc_fun(_kh_is_null);
   FAKSKH.cntx_psh();
   _loop:=FAKSKH.first();
   {!
   |? _loop
   |!
      {? (_ref=null | _ref<>FAKSKH.ref()) & _crc_fun(_kh_is_null)=_crc
      ||
         FUN.info('Jest już kontrahent "%1" w roli "%2".'@[FAKSKH.KH().SKR,FAKSKH.ROLA]);
         _fld:='KH'
      ?};
      _loop:=_fld='' & FAKSKH.next()
   !};
   FAKSKH.cntx_pop();
   _fld
?}


\fakskh_rola_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Przed redakcją FAKSKH.ROLA
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
{? 4+FAKSKH.name()='fkpf'
|| {? FAKS.T().KOR='N' | FAKS.WHERE='N' & FAKSKH.FAKSKH='' || DPOZ.WPR_S:=fld(); 1 ?}
|| {? DOK.DOK_REJ().KOR_NAG='N' | FAKSKH.FAKSKH='' || DPOZ.WPR_S:=fld(); 1 ?}
?}


\fakskh_rola_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: F3 FAKSKH.ROLA
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_res:=exec('rola_podmiotu_select','edi_fo_ksef',fld());
{? _res.RESULT
|| fld(_res.FLD)
|| 0
?}


\fakskh_rola_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Po redakcji FAKSKH.ROLA
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_fld:=fld();
_result:=1;
{? DPOZ.WPR_S<>_fld
||
   _Tab:=exec('rola_podmiotu_slo','edi_fo_ksef');
   {? ~_Tab.find_key(_fld,)
   ||
      {? FUN.ask('Nie znaleziono roli w słowniku.\nCzy chcesz wybrać rolę ze słownika?'@)
      ||
         _res:=exec('rola_podmiotu_select','edi_fo_ksef',_fld);
         {? _res.RESULT
         || fld(_res.FLD)
         || _result:=0
         ?}
      ?}
   ?}
?};
{? _result
||
   {? FAKSKH.ROLA<>'Dodatkowy nabywca' || FAKSKH.UDZIAL:=0 ?};
   exec('fakskh_set_efld_opt','faktury_wspolne',FAKS.T().KOR='N' | FAKSKH.FAKSKH='')
?};
_result


\fakskh_kh_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Przed redakcją FAKSKH.KH
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
DPOZ.WPR_S:=$fld(); 1


\fakskh_kh_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Po redakcji FAKSKH.KH
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_fld:=$fld();
{? DPOZ.WPR_S<>_fld
||
   exec('duplikuj_dane_fakskh','faktury_wspolne')
?};
1


\fakskh_copy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Kopiuje podmioty z dokumentu _a na _b
::   WE: _a - FAKS.ref()/DOK.ref - źródłowy
::       _b - FAKS.ref()/DOK.ref - docelowy
::      [_c] - 1 podczas dekretacji do FKS
::   WY:  1 - przekopiowano wszystkie rekordy, 0 w p.p.
::----------------------------------------------------------------------------------------------------------------------
_faks_src:=_a;
_faks_dst:=_b;
_DekrFks:=var_pres('_c')>0 & _c=1;
 _maska_src:={? 4+ref_name(_faks_src)='fakt'
             || 'fkpf_'+(ref_name(_faks_src)+3)
             |? 4+ref_name(_faks_src)='doku'
             || 'fkpd'+(ref_name(_faks_src)+4)
             || ''
             ?};
_maska_dst:={? 4+ref_name(_faks_dst)='fakt'
            || 'fkpf_'+(ref_name(_faks_dst)+3)
            |? 4+ref_name(_faks_dst)='doku'
            || 'fkpd'+(ref_name(_faks_dst)+4)
            || ''
            ?};
{? 4+ref_name(_faks_src)='fakt'
|| _ndx:='UNIK'
|| _ndx:='DOK'
?};
{? +_maska_src<>8 | +_maska_dst<>8 || return(0) ?};
{? _DekrFks
||
:: Dekretacja do FKS
   FAKSKH.cntx_psh();
   FAKSKH.use(_maska_src);
   FAKSKH.index(_ndx);
   FAKSKH.prefix(_faks_src);
   _loop:=FAKSKH.first();
   _ss:=FAKSKH.size(); _sd:=0;
   {!
   |? _loop
   |!
      _uid:=FAKSKH.uidref();
      _old:=FAKSKH.FAKSKH;
      {? _old<>''
      || _uid:=exec('FindAndGet','#table',FAKSKH,FAKSKH.FAKSKH,,"@.FAKSKH.DOKKH")
      ?};
      FAKSKH.cntx_psh();
      FAKSKH.use(_maska_dst);
      FAKSKH.prefix();
      FAKSKH.DOK:=_faks_dst;
      FAKSKH.DOKKH:='';
      {? FAKSKH.add() || _sd+=1; _ref:= FAKSKH.uidref() ?};
      FAKSKH.cntx_pop();

:     powrót do FAKSKH dla w masce 'fkpf_' i zachowanie wskazania na FAKSKH w masce  'fkpd'
      FAKSKH.DOKKH:={? _old<>'' || _old || _ref ?};
      FAKSKH.put();
      _loop:=FAKSKH.next()
   !};
   FAKSKH.cntx_pop();
   _ss=_sd
|| FAKSKH.cntx_psh();
   FAKSKH.use(_maska_src);
   FAKSKH.index(_ndx);
   FAKSKH.prefix(_faks_src);
   _loop:=FAKSKH.first();
   {!
   |? _loop
   |!
      _uid:=FAKSKH.uidref();
      FAKSKH.cntx_psh();
      FAKSKH.use(_maska_dst);
      FAKSKH.cntx_psh();
      FAKSKH.prefix();
      {? 4+FAKSKH.name()='fkpf'
      || FAKSKH.FAKS:=_faks_dst
      || FAKSKH.DOK:=_faks_dst
      ?};
      FAKSKH.FAKSKH:=_uid;
      FAKSKH.add();
      FAKSKH.cntx_pop();
      FAKSKH.cntx_pop();
      _loop:=FAKSKH.next()
   !};
   FAKSKH.cntx_pop()
?}


\fakskh_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Usuwa podmioty dokumentu _a
::   WE: _a - ref dokumentu
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_maska:=ref_name(_ref)+5;
{? 4+ref_name(_ref)='fakt'
|| _maska:='fkpf_'+(ref_name(_ref)+3);
   _ndx:='UNIK'
|? 4+ref_name(_ref)='doku'
|| _maska:='fkpd'+(ref_name(_ref)+4);
   _ndx:='DOK'
|| return()
?};
FAKSKH.cntx_psh();
FAKSKH.use(_maska);
FAKSKH.cntx_psh();
FAKSKH.index(_ndx);
FAKSKH.prefix(_ref);
_loop:=FAKSKH.first();
{!
|? _loop
|!
   _loop:=FAKSKH.del()
!};
FAKSKH.cntx_pop();
FAKSKH.cntx_pop()


\fakskh_fill_bfld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Korekta nagłówkowa - wypełnia wartość pól przed korektą
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FAKSZKN.blank(1);
exec('FindAndGet','#table',FAKSKH,FAKSKH.FAKSKH,,"
   FAKSZKN.KH:=@.FAKSKH.KH;
   FAKSZKN.NAZ:=@.FAKSKH.NAZ;
   FAKSZKN.KH_KRISO:=@.FAKSKH.KRAJISO;
   FAKSZKN.KH_KRAJ:=@.FAKSKH.KRAJ;
   FAKSZKN.MIASTO:=@.FAKSKH.MIASTO;
   FAKSZKN.UL:=@.FAKSKH.UL;
   FAKSZKN.DOM:=@.FAKSKH.DOM;
   FAKSZKN.LOKAL:=@.FAKSKH.LOKAL;
   FAKSZKN.KPOCZ:=@.FAKSKH.KPOCZ;
   FAKSZKN.POCZ:=@.FAKSKH.POCZ;
   FAKSZKN.NIP:=@.FAKSKH.NIP
");
1


\duplikuj_dane_fakskh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Zapamiętanie danych podmiotu do wykorzystania w wydrukach faktur i duplików faktur
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAKSKH.KH
||
   FAKSKH.NAZ:=FAKSKH.KH().NAZ_P;
   FAKSKH.MIASTO:=KH.MIASTO;
   FAKSKH.UL:=KH.UL;
   FAKSKH.DOM:=KH.DOM;
   FAKSKH.LOKAL:=KH.LOKAL;
   FAKSKH.KPOCZ:=KH.KPOCZ;
   FAKSKH.POCZ:=KH.POCZ;
   FAKSKH.NIP:=KH.NIP;
   FAKSKH.KRAJ:=KH.KRAJ;
   FAKSKH.KRAJISO:=KH.KRAJISO
|? FAKSKH.ROLA<>exec('rola_cz_grvat_wyst','edi_fo_ksef') & FAKSKH.ROLA<>exec('rola_jst_wyst','edi_fo_ksef') &
   FAKSKH.ROLA<>exec('rola_cz_grvat_odb','edi_fo_ksef') & FAKSKH.ROLA<>exec('rola_jst_odb','edi_fo_ksef')
||
   FAKSKH.NAZ:='';
   FAKSKH.MIASTO:='';
   FAKSKH.UL:='';
   FAKSKH.DOM:='';
   FAKSKH.LOKAL:='';
   FAKSKH.KPOCZ:='';
   FAKSKH.POCZ:='';
   FAKSKH.NIP:='';
   FAKSKH.KRAJ:='';
   FAKSKH.KRAJISO:=null()
?}


\fakskh_auto_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Dla aktualnego dokumentu usuwa wszystkie podmioty dodane automatycznie,
::       o ile nie podano w parametrze _b, które tylko ma usunąć
::   WE: _a - ref dokumentu, puste - aktualny FAKS.ref()
::      [_b]- 'F' - usunięcie faktora
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<=0
|| _ref:=FAKS.ref()
|| _ref:=_a
?};
{? 4+ref_name(_ref)='fakt'
|| _maska:='fkpf_'+(ref_name(_ref)+3);
   _ndx:='UNIK'
|? 4+ref_name(_ref)='doku'
|| _maska:='fkpd'+(ref_name(_ref)+4);
   _ndx:='DOK'
|| return()
?};
FAKSKH.cntx_psh();
FAKSKH.use(_maska);
FAKSKH.index(_ndx);
{? var_pres('_b')>0 & _b='F'
|| _rola:=exec('rola_faktor','edi_fo_ksef');
   FAKSKH.prefix(_ref,_rola,)
|? var_pres('_b')>0 & _b='G'
|| _rola:=exec('rola_grupa_vat','edi_fo_ksef');
   FAKSKH.prefix(_ref,_rola,)
|| FAKSKH.prefix(_ref)
?};
{? FAKSKH.first()
|| {!
   |? {? FAKSKH.SYS='T'
      || FAKSKH.del()
      || FAKSKH.next()
      ?}
   !}
?};
FAKSKH.cntx_pop();
~~


\fakskh_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Dla aktualnego dokumentu dopisanie podmiotu będącego faktorem, jeżeli jest potrzebny lub grupą VAT
::   WE: [_a] - ref dokumentu, puste - aktualny FAKS.ref()
::       [_b]- 'F' - dodanie faktora (domyślnie) / 'G' - dodanie grupy VAT
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<=0
|| _ref:=FAKS.ref()
|| _ref:=_a
?};
{? var_pres('_b')=type_of('')
|| {? _b='G'
   || _faktor:=0
   || _faktor:=1
   ?}
|| _faktor:=1
?};
{? 4+ref_name(_ref)='fakt'
|| _maska:='fkpf_'+(ref_name(_ref)+3);
   _ndx:='UNIK'
|? 4+ref_name(_ref)='doku'
|| _maska:='fkpd'+(ref_name(_ref)+4);
   _ndx:='DOK'
|| return()
?};
{? _faktor
|| exec('fakskh_auto_del','faktury_wspolne',_ref,'F')
|| exec('fakskh_auto_del','faktury_wspolne',_ref,'G')
?};
_kh:=null();
{? 4+ref_name(_ref)='fakt'
|| _psh:=0;
   {? FAKS.ref()<>_ref
   || _psh:=1;
      FAKS.cntx_psh();
      FAKS.prefix();
      FAKS.seek(_ref)
   ?};
   {? _faktor
   || _kh:=exec('kh_faktor','edi_fo_ksef')
   || _kh:=exec('kh_grvat_lic','kontrahent',FAKS.DW)
   ?};
   {? _psh
   || FAKS.cntx_pop()
   ?}
|? 4+ref_name(_ref)='doku'
|| _psh:=0;
   {? DOK.ref()<>_ref
   || _psh:=1;
      DOK.cntx_psh(); DOK.prefix();
      DOK.seek(_ref)
   ?};
   {? _faktor
   || _kh:=exec('kh_faktor','dok_fks')
   || _kh:=exec('kh_grvat_lic','kontrahent',DOK.DTO)
   ?};
   {? _psh
   || DOK.cntx_pop()
   ?}
?};
{? _kh<>null()
|| KH.cntx_psh();
   KH.prefix();
   KH.seek(_kh);
   FAKSKH.cntx_psh();
   FAKSKH.use(_maska);
   FAKSKH.index(_ndx);
   FAKSKH.prefix();
   FAKSKH.blank();
   {? 4+ref_name(_ref)='fakt'
   || FAKSKH.FAKS:=_ref
   || FAKSKH.DOK:=_ref
   ?};
   FAKSKH.KH:=_kh;
   {? _faktor
   || FAKSKH.ROLA:=exec('rola_faktor','edi_fo_ksef')
   || FAKSKH.ROLA:=exec('rola_grupa_vat','edi_fo_ksef')
   ?};
   FAKSKH.NAZ:=KH.NAZ_P;
   FAKSKH.MIASTO:=KH.MIASTO;
   FAKSKH.UL:=KH.UL;
   FAKSKH.DOM:=KH.DOM;
   FAKSKH.LOKAL:=KH.LOKAL;
   FAKSKH.KPOCZ:=KH.KPOCZ;
   FAKSKH.POCZ:=KH.POCZ;
   FAKSKH.NIP:=KH.NIP;
   FAKSKH.KRAJ:=KH.KRAJ;
   FAKSKH.KRAJISO:=KH.KRAJISO;
   FAKSKH.SYS:='T';
   FAKSKH.add();
   FAKSKH.cntx_pop();
   KH.cntx_pop()
?};
~~


\fakskh_auto_dane_lic
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Dla aktualnego dokumentu dopisanie podmiotu z danymi licencjobiorcy
::       jako członek grupy VAT albo jednostka samorządu terytorialnego
::----------------------------------------------------------------------------------------------------------------------
{? exec('kh_grvat_lic','kontrahent',FAKS.DW) <> null()
|| {? FAKS.SZ='Z'
   || _jak:='o'
   || _jak:='w'
   ?};
   exec('dodaj_dane_lic','edi_fo_ksef_fks',_jak,'F')
?};
~~

\fakskh_auto_dane_khodb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Dla aktualnego dokumentu dopisanie podmiotu - odbiorcy będącego członkiem grupy VAT
::       albo jednostką samorządu terytorialnego
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.SZ='Z'
|| _jak:='w'
|| _jak:='o'
?};
exec('dodaj_dane_2str','edi_fo_ksef_fks',_jak,'F');
~~


\duplikuj_dane_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Duplikowanie danych podczas akceptacji dokumentu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.WHERE<>'K' & FAKS.WHERE<>'N' & exec('FindAndGet','#table',FAKS,FAKS.KZ,,"FAKS.WHERE<>'N'",1)
   & params_exec('faks_fld_czy_ed','faktury_nag','KH_ODB')
|| exec('duplikuj_dane','faktury_wspolne','KH','KH_ODB');
   FAKSKH.cntx_psh();
   FAKSKH.index('UNIK');
   _loop:=FAKSKH.first();
   {!
   |? _loop
   |!
      exec('duplikuj_dane_fakskh','faktury_wspolne');
      _loop:=FAKSKH.put() & FAKSKH.next()
   !};
   FAKSKH.cntx_pop()
?}


\actTAXS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Aktualizuje opłaty na wszystkich pozycjach dokumentu sprzedaży/zakupowego
::   WE: _a - FAKS.ref()
::----------------------------------------------------------------------------------------------------------------------
FAKS.cntx_psh();
FAP.cntx_psh();
FAKS.prefix();
{? _a<>null() & FAKS.seek(_a)
|| FAP.index('FAP');
   FAP.prefix(_a);
   {? FAP.first()
   || {!
      |? exec('actTAXS','oplaty_dod',FAP.FAKS().uidref(),FAP.uidref(),FAP.M,FAP.M);
         FAP.next()
      !}
   ?}
?};
FAKS.cntx_pop();
FAP.cntx_pop();
~~


\liczfak_ist_faks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Nalicza wartości do Intrastat wg dokumentów magazynowych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.INTRA='T'
||
   FUN.info('Dokument uwzględniony w deklaracji Intrastat.'
      '\nNaliczenie wartości intrastat niemożliwe.'@)

||
   FAP2DK.cntx_psh();
   FAP2DK.index('NFAKS');
   FAP2DK.prefix($FAKS.ref());
   _loop:=FAP2DK.first();
   FAP2DK.cntx_pop();
   _choice:=
      {? _loop
      ||
         FUN.choice('Wybierz sposób naliczenia wartości intrastat.'@,,
            'Wg dokumentu &zakupu'@,'Wg dokumentów &magazynowych'@)
      ||
         FUN.ask('Czy naliczyć wartości intrastat wg dokumentu zakupu?'@)
      ?};
   {? _choice
   ||
      FAP.cntx_psh();
      FAP.index('FAP');
      FAP.prefix(FAKS.ref());
      _loop:=FAP.first();
      {!
      |? _loop
      |!
         exec('liczfak_ist_wg_dokmag','faktury_wspolne',_choice=2);
         _loop:=FAP.next()
      !};
      FAP.cntx_pop()
   ?}
?}


\liczfak_ist_wg_dokmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Liczy wartości do intrastat z uwzględnieniem lub bez dokumentów magazynowych
::   WE: _a - 0/1 - wg dokmag
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_wg_dokmag:=_a;

{? FAP.M().RODZ<>'T' || return() ?};

_war:=0;
_wf_b:=FAP.WF;
_ws_b:=FAP.WS;
_wf:=_ws:=0;
_wsp:=1;

{? _wg_dokmag
||
   FAP2DK.cntx_psh();
   FAP2DK.index('NFAP');
   FAP2DK.prefix($FAP.ref());
   _loop:=FAP2DK.first();
   {!
   |? _loop
   |!
      _war+=exec('FindAndGet','#table',DK,FAP2DK.DK,,"{? DK.PLUS='T' || DK.WAR || -DK.WAR ?}",0);
      _loop:=FAP2DK.next()
   !};
   FAP2DK.cntx_pop()
?};
{? FAKS.T().KOR='T'
||
   {? FAP.IL
   ||
      FAP.cntx_psh();
      exec('wysw_kor','faktury_poz');
      {? FKOR.IL || _wsp:=FKOR.BIL/FKOR.IL ?};
      {? _wsp<>0 || _wf:=(_wsp*FKOR.PWF)$2-FKOR.PWF; _ws:=(_wsp*FKOR.PWS)$2-FKOR.PWS ?};
      FAP.cntx_pop()
   ?}

|? _wg_dokmag=0
||
   exec('liczfak_ist','faktury_wspolne');
   _wf:=FAP.WF;
   _ws:=FAP.WS
?};
{? _wg_dokmag=0 || _wsp:=0 ?};
FAP.WF:=_wf+(_wsp*_war)$2;
FAP.WS:={? exec('fap_ws_pr','faktury_poz')=0 || 0 || _ws+(_wsp*_war)$2 ?};
{? FAP.WF<>_wf_b | FAP.WS<>_ws_b
||
   FAP.put()
?}


\fpacz_zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Paczka faktur - Zakończ
::   WE: [_a] - 0(domyślnie) 1-auto akceptacja
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_auto:={? var_pres('_a')=type_of(0) || _a || 0 ?};
{? FUN.ask('Zakończyć rejestrację paczki faktur?'@)
||
   FPACZ.STAT_REJ:='Z';
   {? ~_auto | FPACZ.put(1) || _res:=1 ?}
?};
{? _res & _auto || exec('fpacz_akceptuj','faktury_wspolne',1) ?};
_res


\fpacz_akceptuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Paczka faktur - Akceptacja
::   WE: [_a] - 0(domyślnie) 1-automatyczna akcja
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LUM_FAK_EAPA';
_params.UIDREF:=FPACZ.uidref();
_params.AKCJA:={? var_pres('_a')=type_of(0) & _a || 'AkceptujAuto' || 'Akceptuj' ?};
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FPACZ',FPACZ.ref());

exec('mp_run','#b__box',_params)


\nsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Data sprzedaży lub okres sprzedaży w nagłówku
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.WHERE<>'L'
      |
   FAKS.T().HIS<>'T' & PAR_SKID.get(308)='T' & FAKS.DW>=date(2014,1,1)
||
   {? FAKS.DO_NA_DR<>date(0,0,0)
   ||
      {? PARAM_W.MC='T'
      || {? PARAM_W.JEZYK=null || _date_val:=(form(FAKS.DO_NA_DR,,8) +';')|| _date_val:=((7+form(FAKS.DO_NA_DR,,1))+';') ?}
      || _date_val:=(gsub(form(FAKS.DO_NA_DR,,3),'/','-')+';')
      ?}

   |? FAKS.T().KOR='T' & exec('FindAndGet','#table',FAKS,FAKS.FKSQL,,"D",date(2014,1,1))<date(2014,1,1)
   || {? PARAM_W.MC='T'
      || {? PARAM_W.JEZYK=null || _date_val:=(form(FAKS.D,,8) +';') || _date_val:=((7+form(FAKS.D,,1))+';') ?}
      || _date_val:=(gsub(form(FAKS.D,,3),'/','-')+';')
      ?}
   || ''
   ?}
||
   {? PARAM_W.MC='T'
   ||
      {? PARAM_W.JEZYK=null || _date_val:=(form(FAKS.D,,8) +';') || _date_val:=((7+form(FAKS.D,,1))+';') ?}
   ||
      _date_val:=(gsub(form(FAKS.D,,3),'/','-')+';')
   ?}
?}


\dsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Data sprzedaży w pozycji
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FAP.D


\dsp_wpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Data sprzedaży na pozycji
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dsp','faktury_wspolne')<>date(0,0,0)


\x00138
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Zwrca wartość parametru x00138
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a='Z' || exec('get','#params',200138) || exec('get','#params',300138) ?}


\fap_d_zeruj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Zerowanie FAP.D, jeżeli trzeba
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.DSP_WPOZ<>'T'
|| FAP.cntx_psh();
   FAP.index('FAP');
   FAP.prefix(FAKS.ref());
   {? FAP.first()
   ||{!
     |? {? FAP.D<>date(0,0,0)
        || FAP.D:=date(0,0,0);
           FAP.put(1)
        ?};
        FAP.next()
     !}
   ?};
   FAP.cntx_pop()
?};
~~


:Sign Version 2.0 jowisz:1045 2024/02/20 14:59:52 4548182664e10bc7c76a19fc130d761552ad69b407d5e7eee944fcef7236e90ffe394f674899e2b50f4bbc7316f2d026cdf0432ac03057f6886c6eb17826cc9197018163cbbc508bd1083103aadefc7565adce1eb61845d1eb30c1ccb7145c031e4972a6092befb353360d7ebbcda6e2547d6d5d883559c80b4f40cbe636e0c9
