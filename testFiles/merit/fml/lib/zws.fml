:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zws.fml
:: Utworzony: 20.11.2014
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Formuły oraz wywoływacze obszaru ZWS
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [17.00]
:: OPIS: Formuła inicjująca dla obszaru ZWS
::----------------------------------------------------------------------------------------------------------------------
_sesid:=app_info('web_sesid');

exec('rach_slo','rachunki');
{? var_pres('DEBUG20')<0 || DEBUG20:=obj_new(@.CLASS.DEBUG,20) ?};
{? var_pres('SQL20')<0 || SQL20:=obj_new(@.CLASS.SQL,20) ?};

:: Ustawienie prezycji pól w oknach
{? +_sesid=0 || exec('fld_prec','zws') ?};
~~


\zws_adm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [17.00]
:: OPIS: Główna formuła obszaru roboczego ZWS_ADM - Administracja
::----------------------------------------------------------------------------------------------------------------------
exec('init','zws');
exec('dane1','dane_startowe');

{? exec('interm','#system')
|| exec('zws_adm_interm','zws');
   return()
?};

_env:=obj_new('LMG','LSP','PROD_ADM','REJ_ADM','BLINK','TRE_ADM');
_env.LMG:=obj_new('RED','BTN_US','BTN_OS','BTN_OW','BTN_OO','BTN_OZ','BTN_RG','BTN_MM','BTN_DM','BTN_RZ');
_env.LSP:=obj_new('RED','BTN_NMSV','BTN_ZMVAT');
_env.PROD_ADM:=obj_new('LABELS','add');
_env.PROD_ADM.LABELS:=exec('elements_table','#desktop');
_env.PROD_ADM.add:=".LABELS.ID_SYS:=_a; .LABELS.NAME:=_b; .LABELS.add()";
_env.REJ_ADM:=obj_new('LABELS','add');
_env.REJ_ADM.LABELS:=exec('elements_table','#desktop');
_env.REJ_ADM.add:=".LABELS.ID_SYS:=_a; .LABELS.NAME:=_b; .LABELS.ENABLED:=_c; .LABELS.add()";
_env.BLINK:=obj_new(
   'RED','BTN_KHACT','BTN_CLEAR','BTN_RECEIVE','BTN_GET','BTN_GET_CONFIRM',
   'BTN_INFO','BTN_PARAMS','BTN_TMSTMP','BTN_TPSTMP','BTN_SETTLEMENTS','BTN_RECEIVE_AND_GET',
   'BTN_USR_REFRESH','BTN_PAR_REFRESH'
);
_env.TRE_ADM:=obj_new('LABELS','add');
_env.TRE_ADM.LABELS:=exec('elements_table','#desktop');
_env.TRE_ADM.add:=".LABELS.ID_SYS:=_a; .LABELS.NAME:=_b; .LABELS.ENABLED:=_c; .LABELS.add()";

_btn_eopt:="
   _env:=params_get().env;
   _par:=exec('get','#params',1004,2,OPERATOR.USER);
   {? _par<>'T' & _par<>''
      | ST.MAG=null()
      | ST.OKR_REF=null()
   || XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_US,'state=grayed');
      XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_OS,'state=grayed');
      XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_OW,'state=grayed');
      XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_MM,'state=grayed');
      XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_RG,'state=grayed')
   || {? ST.MAG().TYP='ŚREDNIE'
      || XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_US,'state=grayed')
      || XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_US,'state=normal')
      ?};
      XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_OS,'state=normal');
      {? ST.MAG().SL='T'
      || XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_OW,'state=normal')
      || XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_OW,'state=grayed')
      ?};
      {? (';ED'*(1+ST.MAG().TYP))>1
      || XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_RG,'state=grayed')
      || XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_RG,'state=normal')
      ?}
   ?};
   {? ~exec('opk_permissions','magdok_wspolne')
   || XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_OO,'state=grayed')
   || XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_OO,'state=normal')
   ?};
   {? exec('get','#params',100210,2)='T'
   || XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_DM,'state=normal')
   || XPERTIS.btn_eopt(_env.LMG.RED,_env.LMG.BTN_DM,'state=grayed')
   ?};
   {? exec('get','#params',2250,2,OPERATOR.USER)='T' & ST.ODDZ<>''
   || XPERTIS.btn_eopt(_env.LSP.RED,_env.LSP.BTN_NMSV,'state=normal');
      XPERTIS.btn_eopt(_env.LSP.RED,_env.LSP.BTN_ZMVAT,'state=normal')
   || XPERTIS.btn_eopt(_env.LSP.RED,_env.LSP.BTN_NMSV,'state=grayed');
      XPERTIS.btn_eopt(_env.LSP.RED,_env.LSP.BTN_ZMVAT,'state=grayed')
   ?}
";

_red:=_env.LMG.RED:=XPERTIS.mk_edit('Obszar magazynowy'@,,'lmg_red',,,,'auto');
XPERTIS.win_efld(_red,ST,'MAG','SYM',,10,,,'Magazyn'@);
XPERTIS.win_efld(_red,ST,'OKR_REF','ROK',,10,,,'Rok'@);
_ff:=$("
   {? __PARSES.editDom('LMG')
   || __PARSES.setEnv('LMG_DSM')
   ?};"
   +_btn_eopt
   +"
   ;win_disp();
   ''
");
XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Param&etry pracy'@],_ff);
_ff:="
   exec('uzgodn_s','magazyn_stan'); ''
";
_env.LMG.BTN_US:=
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['&Uzgodnienie stanów'@],_ff);
_ff:="
   exec('odtstan','magazyn_stan'); ''
";
_env.LMG.BTN_OS:=
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Odtwarzanie &stanów'@],_ff);
_ff:="
   exec('odtwstsl','magazyn_stan'); ''
";
_env.LMG.BTN_OW:=
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Odtwarzanie stanów &wymiarów'@],_ff);
_ff:="
   exec('uzgod_mm','magazyn_stan'); ''
";
_env.LMG.BTN_MM:=
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Uz&godnienie wartości przesunięć'@],_ff);
_ff:="
   exec('regulat','magazyn_stan'); ''
";
_env.LMG.BTN_RG:=
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['&Regulacja magazynu'@],_ff);
_ff:="
   exec('odtwstop','magazyn_stan'); ''
";
_env.LMG.BTN_OO:=
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Odtworzenie stanów &opakowań'@],_ff);
_ff:="
   exec('odtwstat','zamsiw_wspolne'); ''
";
_env.LMG.BTN_OZ:=
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Odtworzenie statusów &zamówień'@],_ff);
_ff:="
   exec('odtwreal','zamdst_wspolne'); ''
";
_env.LMG.BTN_RZ:=
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Stan realizacji zamówień &dostaw'@],_ff);
_ff:="
   {? FUN.ask('Odtworzyć tabelę pozycji dostaw magazynowych w roku %1?'@[$ST.AR])
   ||
      exec('dkdost_odtw','magdok_poz')
   ?};
   ''
";
_env.LMG.BTN_DM:=
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Odtworzenie dostaw &magazynowych'@],_ff);
_ff:='key:Esc';
XPERTIS.win_ebtn(_red,'text=%1,panel=bottom,align=end,display=1'['&Anuluj'@],_ff);

_wer:=FIRMA.grp_make(,,'adminadminow',10,3,"exec('exit','zws',_a)",,'normal');
FIRMA.grp_edit(_wer,XPERTIS,'ADMIN','Wspólne'@,,,,,'maximized');

{? exec('fks_lic','fks')='T'
|| _red:=XPERTIS.mk_edit('Finanse'@,,'finanse_red',,,,'auto');
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Znaczniki dla SP'@],"exec('update','fks_sp')");
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Kontrola i odtwarzanie danych'@],
                    "exec('sys_util','sys_util')");
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Eksport/Import sprawozdań'@],
                    "exec('exp_imp','sprfin')");
   _ff:='key:Esc';
   XPERTIS.win_ebtn(_red,'text=%1,panel=bottom,align=end,display=1'['&Anuluj'@],_ff);
   FIRMA.grp_edit(_wer,XPERTIS,_red,'Finanse'@,,,,,'maximized')
?};

_fb:=$("
   exec('init','lmg');
   __PARSES.setEnv('LMG_MAG');
   "
   +_btn_eopt
);
{? exec('lmg_lic','lmg')='T'
|| FIRMA.grp_edit(_wer,XPERTIS,_env.LMG.RED,'Magazyny'@,,_fb,,,'maximized')
?};

_red:=_env.LSP.RED:=XPERTIS.mk_edit('Obszar sprzedaży'@,,'lsp_red',,,,'auto');
XPERTIS.win_efld(_red,ST,'ODDZ',,,10,,,'Oddział'@);
_ff:=$("
   {? __PARSES.editDom('LSP')
   || __PARSES.setEnv('LSP_FAK')
   ?};"
   +_btn_eopt
   +"
   ;win_disp();
   ''
");
XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Param&etry pracy'@],_ff);
_ff:="
   exec('nmsv','material'); ''
";
_env.LSP.BTN_NMSV:=
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['&Nowa matryca stawek VAT'@],_ff);
_ff:="
   exec('zmvat','material'); ''
";
_env.LSP.BTN_ZMVAT:=
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['&Zmiana VAT i nazwy na paragonie'@],_ff);

_fb:=$("
   exec('init','lsp');
   __PARSES.setEnv('LSP_FAK');
   "
   +_btn_eopt
);
:: przyski abstore
XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Sprawdź AbStore B2&B'@],
"exec('check_all','abstore','B2B')");
XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Sprawdź AbStore B2&C'@],
"exec('check_all','abstore','B2C')");

{? exec('lsp_lic','lsp')='T'
|| _ff:='key:Esc';
   XPERTIS.win_ebtn(_red,'text=%1,panel=bottom,align=end,display=1'['&Anuluj'@],_ff);
   FIRMA.grp_edit(_wer,XPERTIS,_env.LSP.RED,'Sprzedaż'@,,_fb,,,'maximized')
?};

_env.PROD_ADM.add('SEP1@prod_adm','Odtwarzanie zapisów na zleceniach'@);
_env.PROD_ADM.add('ILWYK@prod_adm','&Odtworzenie ilości wg robocizny'@);
_env.PROD_ADM.add('ILDOK@prod_adm','Odtworzenie ilości wg &dokumentów'@);
_env.PROD_ADM.add('HWYK@prod_adm','Odtworzenie godzin &wykonanych'@);
_env.PROD_ADM.add('SEP2@prod_adm','Odtwarzanie zapisów na grupach operacji'@);
_env.PROD_ADM.add('ILW@prod_adm','Odtworzenie &ilości wykonanej'@);
_env.PROD_ADM.add('ESC@prod_adm','&Anuluj'@);
{? exec('tte_lic','tte')='T'
|| _ctr_id:=exec('create','#desktop',FIRMA,'ctr_prod_adm',,20,80);
   _before:="
      exec('load','#desktop','ctr_prod_adm','zws_prod_adm.dsk',,,,,params_get().env.PROD_ADM.LABELS,1);
      ~~
   ";
   FIRMA.grp_ctr(_wer,,_ctr_id,'prod_adm','Produkcja'@,,,,1,1,_before,,,'maximized')
?};

{? exec('tpp_lic','tpp')='T'
|| FIRMA.grp_edit(_wer,PX_VAR,'ADMIN','Plan strategiczny'@,,,,,'maximized')
?};

_env.REJ_ADM.add('SEP1@prodrej_adm','Odtwarzanie zapisów do rejestracji wykonań'@,'true');
_env.REJ_ADM.add('SEP2@prodrej_adm','Konfiguracja E-kiosku'@,'true');
_env.REJ_ADM.add('PX@prodrej_adm','Plan &strategiczny'@,{? exec('get','#params',500613,2)='T' || 'true' || 'false' ?});
_env.REJ_ADM.add('PO@prodrej_adm','Plan &operacyjny'@,{? exec('get','#params',500612,2)='T' || 'true' || 'false' ?});
_env.REJ_ADM.add('ZL@prodrej_adm','&Zlecenia'@,{? exec('get','#params',500611,2)='T' || 'true' || 'false' ?});
_env.REJ_ADM.add('GR@prodrej_adm','&Grupy operacji'@,{? exec('get','#params',500611,2)='T' || 'true' || 'false' ?});
_env.REJ_ADM.add('ESC@prodrej_adm','&Anuluj'@,'true');
_env.REJ_ADM.add('e-run@prodrej_adm','&Uruchom E-kiosk'@,'true');
_env.REJ_ADM.add('e-get@prodrej_adm','&Pobierz skrypt uruchamiający'@,'true');

{? exec('tte_lic','tte')='T' | exec('tpp_lic','tpp')='T'
|| _ctr_id:=exec('create','#desktop',FIRMA,'ctr_rej_adm',,20,80);
   _before:="
      exec('load','#desktop','ctr_rej_adm','zws_prodrej_adm.dsk',,,,,params_get().env.REJ_ADM.LABELS,1);
      ~~
   ";
   FIRMA.grp_ctr(_wer,,_ctr_id,'rej_adm','Rejestracja wykonań'@,,,,1,1,_before,,,'maximized')
?};

{? 1 | exec('rod_lic','rod')='T'
|| _red:=XPERTIS.mk_edit('Zarządzanie danymi osobowymi'@,,'rodo_red',,,,'auto');
   _text:='Aktualizacja fiz. kontrahenta'@;
   _tooltip:='Aktualizacja znacznika: Osoba fizyczna na podstawie danych z GUS'@;
   _btn:=XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'[_text],"
      exec('all_from_gus','nipyue')
   ");
   XPERTIS.btn_eopt(_red,_btn,'tooltip=%1'[_tooltip]);
   _ff:='key:Esc';
   XPERTIS.win_ebtn(_red,'text=%1,panel=bottom,align=end,display=1'['&Anuluj'@],_ff);
   FIRMA.grp_edit(_wer,XPERTIS,_red,'Zarządzanie danymi osobowymi'@,,,,,'maximized')
?};

{? exec('lic_or','#b_domain','POR','SEO')
|| _red:=XPERTIS.mk_edit('Portal HR i SEOD'@,,'por_red',,,,'auto');
   _ff:="exec('portall_select','portal_engine');''";
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Licencje'@],_ff);
   _ff:="exec('portal_select','users');''";
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Użytkownicy portalowi'@],_ff);
   _ff:="exec('portalu_select','portal_engine');''";
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Uprawnienia do &funkcjonalności'@],_ff);
   _ff:="exec('clear','portal_engine');''";
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=right,align=begin'['Inicjowanie systemu'@],_ff);
   _ff:="exec('set_tenant_state','portal_engine');''";
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=right,align=begin'['Status dzierżawcy'@],_ff);
::   _ff:="exec('idput','portal_engine');''";
::   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=right,align=begin'['Inicjowanie &danych'@],_ff);
::   _ff:="exec('data_delete','portal_engine');''";
::   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=right,align=begin'['Usuwanie danych z &encji'@],_ff);
   _ff:='key:Esc';
   XPERTIS.win_ebtn(_red,'text=%1,panel=right,align=end,display=1'['&Anuluj'@],_ff);
   FIRMA.grp_edit(_wer,XPERTIS,_red,'Portal HR i SEOD'@,,,,,'maximized')
?};

{? exec('lic','#b_domain','ZBL')
|| _red:=_env.BLINK.RED:=XPERTIS.mk_edit('Businesslink'@,,'einv_red',,,,'auto');
   _ff:="exec('info','businesslink3');''";
   _env.BLINK.BTN_INFO:=
      XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Informacje o &usłudze'@],_ff);
   XPERTIS.btn_eopt(_red,_env.BLINK.BTN_INFO,'tooltip="%1"'
      ['Wyświetla informacje o usłudze'@]
   );
   _ff:="exec('set_tenant_state','businesslink3');''";
   XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Ustaw status d&zierżawcy'@],_ff);
   _ff:="exec('default_tmstamp','businesslink3',1);''";
   _env.BLINK.BTN_TMSTMP:=
      XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Inic. transmisji dokumentów'@],_ff);
   XPERTIS.btn_eopt(_red,_env.BLINK.BTN_TMSTMP,'tooltip="%1"'
      ['Zeruje znacznik czasowy - inicjuje ponowną transmisję'@]
   );
   _ff:="exec('default_tpstamp','businesslink3',1);''";
   _env.BLINK.BTN_TPSTMP:=
      XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Inic. &transmisji partnerów'@],_ff);
   XPERTIS.btn_eopt(_red,_env.BLINK.BTN_TPSTMP,'tooltip="%1"'
      ['Zeruje znacznik czasowy - inicjuje ponowną transmisję'@]
   );
   _ff:="exec('clear','businesslink3');''";
   _env.BLINK.BTN_CLEAR:=
      XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Inicjowanie &systemu'@],_ff);
   XPERTIS.btn_eopt(_red,_env.BLINK.BTN_CLEAR,'tooltip="%1"'
      ['Usuwa identyfikatory kontrahentów oraz dokumentów sprzedaży'@]
   );
   _ff:="exec('user_ksef_refresh','businesslink3');''";
   _env.BLINK.BTN_USR_REFRESH:=
      XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['Użytkownicy &KSeF'@],_ff);
   XPERTIS.btn_eopt(_red,_env.BLINK.BTN_USR_REFRESH,'tooltip="%1"'
      ['Odświeża informacje o aktywnych dostępach użytkowników do KSeF'@]
   );
::   _ff:="exec('TenantParamsGet','businesslink3',1);''";
::   _env.BLINK.BTN_PAR_REFRESH:=
::      XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=right,align=begin'['Aktualizacja parametrów'@],_ff);
::   XPERTIS.btn_eopt(_red,_env.BLINK.BTN_PAR_REFRESH,'tooltip="%1"'
::      ['Odświeża parametry działania Businesslink'@]
::   );
   {? exec('chk_role','#b__box',OPERATOR.USER,'ZBL_BIL_DOKK')
   || _ff:="exec('action_partners_find','businesslink3');''";
      _env.BLINK.BTN_KHACT:=
         XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=right,align=begin'['Aktualizacja kontrahentów'@],_ff);
      XPERTIS.btn_eopt(_red,_env.BLINK.BTN_KHACT,'tooltip="%1"'['Aktualizacja danych o kontrahentach'@])
   ?};
::   {? exec('chk_role','#b__box',OPERATOR.USER,'ZBL_BIL_DOKR')
::   || _ff:="exec('action_receive','businesslink3');''";
::      _env.BLINK.BTN_RECEIVE:=
::         XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=right,align=begin'['Odbieranie informacji'@],_ff);
::      XPERTIS.btn_eopt(_red,_env.BLINK.BTN_RECEIVE,'tooltip="%1"'['Odbiera informacje o załącznikach'@])
::   ?};
::   {? exec('chk_role','#b__box',OPERATOR.USER,'ZBL_BIL_DOKG')
::   || _ff:="exec('action_get','businesslink3');''";
::      _env.BLINK.BTN_GET:=
::         XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=right,align=begin'['Odbieranie &dokumentów'@],_ff);
::      XPERTIS.btn_eopt(_red,_env.BLINK.BTN_GET,'tooltip="%1"'['Odbiera zawartość dokumentów przychodzących'@])
::   ?};
::   {? exec('chk_role','#b__box',OPERATOR.USER,'ZBL_BIL_DOKC')
::   || _ff:="exec('action_get_confirm','businesslink3');''";
::      _env.BLINK.BTN_GET_CONFIRM:=
::         XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=right,align=begin'['Potwierdzenie dokumentów'@],_ff);
::      XPERTIS.btn_eopt(_red,_env.BLINK.BTN_GET_CONFIRM,'tooltip="%1"'['Potwierdza odebranie dokumentów przychodzących'@])
::   ?};
   {? exec('chk_role','#b__box',OPERATOR.USER,'ZBL_BIL_DOKR')
      & exec('chk_role','#b__box',OPERATOR.USER,'ZBL_BIL_DOKG')
      & exec('chk_role','#b__box',OPERATOR.USER,'ZBL_BIL_DOKC')
   || _ff:="exec('action_receive_get_and_confirm','businesslink3');''";
      _env.BLINK.BTN_RECEIVE_AND_GET:=
         XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=right,align=begin'['Synchronizacja dokumentów'@],_ff);
      XPERTIS.btn_eopt(_red,_env.BLINK.BTN_RECEIVE_AND_GET,
         'tooltip="%1"'['Odbieranie informacji i dokumentów, potwierdzanie dokumentów'@]
      )
   ?};
   {? exec('chk_role','#b__box',OPERATOR.USER,'ZBL_BIL_DOKO')
   || _ff:="exec('action_settlements_send','businesslink3');''";
      _env.BLINK.BTN_SETTLEMENTS:=
         XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=right,align=begin'['Wysyłanie rozrachunków'@],_ff);
      XPERTIS.btn_eopt(_red,_env.BLINK.BTN_SETTLEMENTS,'tooltip="%1"'['Wysyła rozliczenia z kontrahentami'@])
   ?};
   _ff:='key:Esc';
   XPERTIS.win_ebtn(_red,'text=%1,panel=right,align=end,display=1'['&Anuluj'@],_ff);
   FIRMA.grp_edit(_wer,XPERTIS,_red,'Businesslink'@,,,,,'maximized')
?};

_env.REJ_ADM.add('SEP1@zws_tre_adm','Odtwarzanie zapisów'@,'true');
_enabled:='false';
{? exec('tpp_lic','tpp')='T'
|| _enabled:='true'
?};
_env.TRE_ADM.add('akt_plan@zws_tre_adm','&Aktualizacja remontów w planie'@,_enabled);

{? exec('tre_lic','tre')='T'
|| _ctr_id:=exec('create','#desktop',FIRMA,'ctr_tre_adm',,20,80);
   _before:="
      exec('load','#desktop','ctr_tre_adm','zws_tre_adm.dsk',,,,,params_get().env.TRE_ADM.LABELS,1,,1);
      ~~
   ";
   FIRMA.grp_ctr(_wer,,_ctr_id,'tre_adm','Remonty'@,,,,1,1,_before,,,'maximized')
?};

:: zakładka Automatyzacja
_red:=XPERTIS.mk_edit('Automatyzacja'@,,'auto',,,,'auto');
_ff:="exec('start_test','$lib_start')";
XPERTIS.win_ebtn(_red,'text=%1,display=%2,panel=left,align=begin'['&Testy automatyczne'@,user(15)],_ff);
_ff:="exec('srv_select','#serwery')";
XPERTIS.win_ebtn(_red,'text=%1,display=1,panel=left,align=begin'['&Serwery zewnętrzne'@],_ff);
_ff:='key:Esc';
XPERTIS.win_ebtn(_red,'text=%1,panel=right,align=end,display=1'['&Anuluj'@],_ff);
FIRMA.grp_edit(_wer,XPERTIS,_red,'Automatyzacja'@,, ,,,'maximized');

:: zakładka kontakty
_red:=XPERTIS.mk_edit('Kontakty'@,,'kontakty',,,,'auto');
_ff:="exec('archive','dokum','ZWS')";
XPERTIS.win_ebtn(_red,'text=%1,display=%2,panel=left,align=begin'['&Archiwizacja dokumentów'@,user(15)],_ff);
task_attach('ZWS_DOK_ARCH');
_ff:="exec('archive_przywr','dokum','ZWS')";
XPERTIS.win_ebtn(_red,'text=%1,display=%2,panel=left,align=begin'['&Przywracanie z archiwum'@,user(15)],_ff);
task_attach('ZWS_DOK_ARCH');
_ff:='key:Esc';
XPERTIS.win_ebtn(_red,'text=%1,panel=right,align=end,display=1'['&Anuluj'@],_ff);
FIRMA.grp_edit(_wer,XPERTIS,_red,'Kontakty'@,, ,,,'maximized');

:: Zakładka "Narzędzia"  - ostatnia (kolejne dodawać PRZED).
_red:=XPERTIS.mk_edit('Narzędzia'@,,'tools',,,,'auto');
_opt:='panel=left,align=begin,display=1';
XPERTIS.win_ebtn(_red,'%1,text="%2"'[_opt,'Kontrola Jakości Danych'@],"exec('main','%kjd');''");
XPERTIS.win_ebtn(_red,'%1,text="%2"'[_opt,'Portal HR i SEOD'@],"exec('main','%portal');''");
XPERTIS.win_ebtn(_red,'%1,text="%2"'[_opt,'Businesslink'@],"exec('main','%businesslink3');''");
XPERTIS.win_ebtn(_red,'%1,text="%2"'[_opt,'Notyfikacje'@],"exec('main','#notify');''");
XPERTIS.win_ebtn(_red,'%1,text="%2"'[_opt,'Identyfikator bazy danych'@],"exec('base_id_manage','#system');''");
XPERTIS.win_ebtn(_red,'%1,text="%2"'[_opt,'Przed &emisją'@],"exec('main','%release');''");
XPERTIS.win_ebtn(_red,'%1,text="%2"'[_opt,'Definicja asystenta Genius'@],"exec('erp_def','genius');''");
_opt:='panel=right,align=begin,display=1';
XPERTIS.win_ebtn(_red,'%1,text="%2"'[_opt,'Parametry &konfiguracyjne'@],"exec('main','%cfg');''");
XPERTIS.win_ebtn(_red,'%1,text="%2"'[_opt,'Dziedziny, obszary, czynności'@],"exec('main','%domain_area_task');''");
XPERTIS.win_ebtn(_red,'%1,text="%2"'[_opt,'Czynności nieprzypięte do ról'@],"exec('analiza_role','%spr_role');''");
XPERTIS.win_ebtn(_red,'text=%1,panel=right,align=end,display=1'['&Anuluj'@],'key:Esc');
FIRMA.grp_edit(_wer,XPERTIS,_red,'Narzędzia'@,, ,,,'maximized');

params_set('env',_env);

FIRMA.win_sel(_wer);

:: Sprawdzenie zgodności tabel DOKUMZ i DOKUMZA
{? ~exec('compare_fld','#table',DOKUMZ,DOKUMZA)
|| FUN.info('Tabele DOKUMZ (Załaczniki do dokumentów) oraz DOKUMZA (Załączniki do dokumentów - archiwum) '
            'nie są ze sobą zgodne.\nNależy ujednolicić strukturę pól wymienionych tabel.'@)
?};

AreaTitle.setTabWin(FIRMA,~~);
AreaTitle.setTitle();
FIRMA.select();
~~


\zws_adm_interm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.37]
:: OPIS: Administracja na interm
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=obj_new('TAB','GRP','WER','add');
params_set('env',_env);
_env.TAB:=tab_tmp(2
   ,'KAT','STRING[50]','Kategoria'
   ,'LP','INTEGER','Lp.'
   ,'SYMBOL','STRING[50]','Symbol'
   ,'FORMULA','STRING[255]','Formuła'
);
_tab:=_env.TAB;

AreaTitle.setArea('ZWS_ADM');
AreaTitle.setTitle();

_env.add:="
   _tab:=.TAB;
   _tab.blank();
   _tab.LP:=_tab.size()+1;
   _tab.SYMBOL:=_a;
   _tab.FORMULA:=$_b;
   _tab.KAT:=_c;
   _tab.add()
";
_tabs:=obj_new('EXEC','SYSTEM','MDB','APL');
_tabs.EXEC:='Wykonaj'@;
_tabs.SYSTEM:='Budowa systemu'@;
_tabs.MDB:='Dane'@;
_tabs.APL:='Zarządzanie Meritem';

:: Zawartość obszaru
_env.add('Formuła',"params_exec('adm_form','!zws_adm_dadm')",_tabs.EXEC);
_env.add('Wyrażenie SQL',"params_exec('adm_sql','!zws_adm_dadm')",_tabs.EXEC);
_env.add('json',"params_exec('adm_json','!zws_adm_dadm')",_tabs.EXEC);
_formula:="
   {? FUN.ask('Uruchomić sprawdzanie składni?'@)
   ||
      _t:=form_chk();
      {? var_pres('_t')>100
      || _t.win_sel(_t.mk_sel('Błędy składniowe'@,'P',1,,,,,,'U'));
         _t.select()
      ?}
   ?};
   ~~
";
_env.add('Składnia',_formula,_tabs.EXEC);
_env.add('Odtwarzanie kolorów i ikon',"params_exec('odtw_kolor_iko','color')",_tabs.EXEC);
_env.add('Excel export',"params_exec('export_init','#excel_imex')",_tabs.EXEC);
_env.add('Excel import',"params_exec('import_action','#excel_imex')",_tabs.EXEC);
_env.add('Excel danewzor',"params_exec('export_danewzor','#excel_imex')",_tabs.EXEC);

_env.add('Struktury',"params_exec('mbTables','libfml')",_tabs.SYSTEM);
_env.add('Formuły',"params_exec('sel_fml','libfml')",_tabs.SYSTEM);
_env.add('Ikony',"params_exec('ico_selall_ask','#icon')",_tabs.SYSTEM);


_env.add('Odtwarzanie indeksów',"params_exec('sys_sort','!zws_adm_dadm')",_tabs.MDB);
_env.add('Kasowanie danych',"params_exec('sys_erase','!zws_adm_dadm')",_tabs.MDB);

_env.add('Co nowego?',"params_exec('info','#upgrade')",_tabs.APL);
_env.add('Poczta',"params_exec('select','#mailbox')",_tabs.APL);
_env.add('Harmonogram',"params_exec('select','#b_harm')",_tabs.APL);
_env.add('Kolejki',"params_exec('select','#b_worker')",_tabs.APL);
_env.add('Wtyczki',"params_exec('plugins_select','zws')",_tabs.APL);
_env.add('Aktualizacja elementów procesowych',"params_exec('import_needed','#b_design',1)",_tabs.APL);

::_env.add('O systemie',"params_exec('info_sys','!zws_adm_dadm')",'Wspólne');

:: Definicja okna
_wer:=_tab.mk_sel('Elementy','P',0,'#zws_adm_wer',1,1,,,'U',,,,,'maximized');
_env.WER:=_wer;
_tab.win_fld(_wer,,'SYMBOL' ,,,50,,,'Element'@,0);
_formula:="
   _tab:=cur_tab(1,1);
   _formula:=($_tab.FORMULA)();
   ~~
";
{? exec('mobile','#system')
|| _tab.win_act(_wer,,'Formuła','Wybierz'@@,,,_formula,,1,,,,'U')
|| _tab.win_act(_wer,,'Formuła','Uruchom'@@,,,_formula,,1,,,,'U')
?};
_tab.win_sopt(_wer,'select_record_checkbox=0');

_formula:="
   params_exec('info_sys','!zws_adm_dadm')
";
_tab.win_act(_wer,,'Formuła','O s&ystemie'@@,,,_formula,,,,,,'Y',,'target=window');
_tab.win_btn(_wer,'text=%1,panel=bottom,align=begin'['O s&ystemie'@@],'menu:Y');

_grpbefor:="
   _env:=params_get().env;
   grp_disp(_env.TAB,_env.WER);
   ~~
";
_grp:=_tab.grp_make('Administracja'@,_grpbefor,'#zws_adm_grp',1,1,,"~~",'normal');
_env.GRP:=_grp;

:: Dodawanie zakładek
{! _it:=1..obj_len(_tabs)
|! _before:='_tab:=cur_tab(1,1);_tab.prefix(\''+_tabs[_it]+'\',);_tab.first();~~';
   _tab.grp_sel(_grp,_tab,_wer,_tabs[_it],,,,,$_before,,,,'maximized');
   ~~
!};

_tab.win_sel(_grp);
_tab.select();
~~


\zws_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Główna formuła wywoływacza ZWS_PAR - Parametryzacja
::----------------------------------------------------------------------------------------------------------------------
{? exec('done','zws')=0
|| FUN.emsg(
      'Transfer danych nie został wykonany.\n'
      'Działanie funkcji zostanie przerwane.'@
   );
   return()
?};

exec('dane','dane_startowe');
exec('init','zam_okr_rok');
exec('start','funpar');
~~


\zws_usr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Główna formuła obszaru roboczego ZWS_USR - Użytkownicy, role, uprawnienia
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,XINFO,'POR_CONF');
:: drukarki kodów kreskowych
{? exec('on','#mwapi')=0 || exec('myDPRINT','object') ?};

_env:=obj_new('PORTALL_INFO','PORTALU_CFG');
_env.PORTALU_CFG:=obj_new('act','send');
_env.PORTALU_CFG.act:=0;
_env.PORTALU_CFG.send:=0;
_env.PORTALL_INFO:=obj_new('tab','red');
_env.PORTALL_INFO.tab:=exec('portall_info_tab','portal_engine');
_env.PORTALL_INFO.red:=exec('portall_info_red','portal_engine',_env.PORTALL_INFO.tab);

P.fld_attr(,2);
OSOBA.fld_attr(,2);
OSOBA.fld_attr('NAZWISKO',1);
OSOBA.fld_attr('PIERWSZE',1);
OSOBA.fld_attr('DRUGIE',1);
OSOBA.fld_attr('IMEX',1);

_grp:=USERS.grp_make(,,'userszwsusr',,,"exec('exit','zws',_a)");
USERS.grp_sel(_grp,,'CALL','Użytkownicy systemu'@,"exec('after_rfr_users','users')",,,,,,,,'maximized');
USERS.tab_splt(_grp,,'vertical','P');
USERS.grp_sel(_grp,Perm.UserPermTab,Perm.userWin4(),,
   "Perm.addActRol();grp_disp(Perm.ActRolForDataTab,Perm.userWin3(),0)",,,15,,,,,'maximized_with_title'
);
USERS.tab_splt(_grp,'P','horizontal','D');
USERS.grp_sel(_grp,Perm.ActRolForDataTab,Perm.userWin3(),,"",,,,"","",,,'maximized_with_title');

{? exec('lic_or','#b_domain','POR','SEO')
|| _after_refresh:="
      _tab:=params_get().env.PORTALL_INFO.tab;
      _red:=params_get().env.PORTALL_INFO.red;
      exec('portall_info_load','portal_engine',_tab,REF.FIRMA);
      grp_edisp(_tab,_red)
   ";
   _before:="
      _firma:={? XINFO.POR_CONF='J' || REF.FIRMA || null() ?};
      USERSF.index('PORTAL');
      USERSF.prefix(_firma,'T')
   ";
   USERS.grp_sel(_grp,USERSF,exec('portal_usersf_wer','users'),'Użytkownicy portalowi'@,
      _after_refresh,,,,_before,,,,'maximized','USERSF'
   );
   USERS.tab_splt(_grp,,'vertical','licencje',',80%');
   USERS.grp_edit(_grp,_env.PORTALL_INFO.tab,_env.PORTALL_INFO.red)
?};

USERS.win_sel(_grp);
USERS.index('USR_KKOD');
USERS.prefix();

VAR_DEL.delete('__sysobj');
__sysobj:=exec(, '__sysusr', 1);
AreaTitle.setTabWin(USERS,~~);
AreaTitle.setTitle();

:: ikony
_form:="
   _res:=exec('pusta','#icon');
:: Pobieram obiekt systemowy do obsługi SYSSUSER
   _userid:=~~;
   {? USERS.GUID<>''
   || _userid:=USERS.GUID
   || _userid:=USERS.KOD
   ?};
   _sysusr:=__sysobj.getUser(_userid);
   {? var_pres('_sysusr')>100
   || _auth_web:=_sysusr.Auth.Web;
::    wyznaczam liczbe blednych logowan
      _badlogin:=0;
      SYSSUHIS.cntx_psh();
      SYSSUHIS.index('DATA');
      SYSSUHIS.prefix(_sysusr.Guid,__sysobj.CONST.HISTORY.ENTRY.BAD_LOGIN,__sysobj.CONST.HISTORY.AUTH_TYPE.WEB,);
      {? SYSSUHIS.last()
      || _badlogin:=SYSSUHIS.size();
         _lastbad_dt:=__sysobj.Lib.getDateTime(SYSSUHIS.STAMP)
      ?};
      SYSSUHIS.cntx_pop();

      {? _auth_web.Active & _auth_web.BadLogins>0
      || {? _badlogin<=_auth_web.BadLogins
         || _res:=exec('pusta','#icon')
         || {? _auth_web.LockTimeout=0 & _auth_web.AdminUnlock=0
            || _res:='xwin16.png:14'
            |? _auth_web.AdminUnlock
            || _res:='xwin16.png:13'
            |? _auth_web.LockTimeout>0
            || _unlock_dt:=__sysobj.Lib.getDateTime(_lastbad_dt.Date,_lastbad_dt.Time+_auth_web.LockTimeout);
               _now_dt:=__sysobj.Lib.getDateTime();
               {? _now_dt.DateTime<_unlock_dt.DateTime
               || _res:='xwin16.png:14'
               ?}
            || _res:=exec('pusta','#icon')
            ?}
         ?}
      || _res:=exec('pusta','#icon')
      ?}
   ?};
   _res
";
USERS.win_fml('CALL',,'PORTAL',,'ICON_BEFORE',_form);

_form:="
   _res:=exec('pusta','#icon');
:: Pobieram obiekt systemowy do obsługi SYSSUSER
   _userid:=~~;
   {? USERS.GUID<>''
   || _userid:=USERS.GUID
   || _userid:=USERS.KOD
   ?};
   _sysusr:=__sysobj.getUser(_userid);
   {? var_pres('_sysusr')>100
   || _auth_pass:=_sysusr.Auth.Pass;
::    wyznaczam liczbe blednych logowan
      _badlogin:=0;
      SYSSUHIS.cntx_psh();
      SYSSUHIS.index('DATA');
      SYSSUHIS.prefix(_sysusr.Guid,__sysobj.CONST.HISTORY.ENTRY.BAD_LOGIN,__sysobj.CONST.HISTORY.AUTH_TYPE.PASS,);
      {? SYSSUHIS.last()
      || _badlogin:=SYSSUHIS.size();
         _lastbad_dt:=__sysobj.Lib.getDateTime(SYSSUHIS.STAMP)
      ?};
      SYSSUHIS.cntx_pop();

      {? _auth_pass.Active & _auth_pass.BadLogins>0
      || {? _badlogin<=_auth_pass.BadLogins
         || _res:=exec('pusta','#icon')
         || {? _auth_pass.LockTimeout=0 & _auth_pass.AdminUnlock=0
            || _res:='xwin16.png:14'
            |? _auth_pass.AdminUnlock
            || _res:='xwin16.png:13'
            |? _auth_pass.LockTimeout>0
            || _unlock_dt:=__sysobj.Lib.getDateTime(_lastbad_dt.Date,_lastbad_dt.Time+_auth_pass.LockTimeout);
               _now_dt:=__sysobj.Lib.getDateTime();
               {? _now_dt.DateTime<_unlock_dt.DateTime
               || _res:='xwin16.png:14'
               ?}
            || _res:=exec('pusta','#icon')
            ?}
         ?}
      || _res:=exec('pusta','#icon')
      ?}
   ?};
   _res
";
USERS.win_fml('CALL',,'JTERM',,'ICON_BEFORE',_form);

:: Ustalenie treści linku
_params:=params_get();
{? type_of(_params)>0 & var_pres('LINK',_params)=type_of('')
|| _link:=_params.LINK
|| _link:=''
?};

params_set('LINK',_link,'env',_env);

{? _link<>''
|| {? ref_tab(_link)=USERS
   || {? USERS.seek(_link)
      || USERS.select(,1,10)
      || FUN.info('Użytkownik o identyfikatorze %1 nie został odnaleziony.'@[_link]);
         return(0)
      ?}
   |? ref_tab(_link)=USERSF
   || {? USERSF.seek(_link)
      || USERSF.USERS();
         USERS.select(,1,10,,'USERSF')
      || FUN.info('Użytkownik o identyfikatorze %1 nie został odnaleziony.'@[_link]);
         return(0)
      ?}
   ?}
|| USERS.select()
?};

VAR_DEL.delete('__sysobj');
~~


\slo_khr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Główna formuła obszaru Kontrahenci
::----------------------------------------------------------------------------------------------------------------------
:: Podczytanie INFO.KRAJ - kraj waluty opodatkowania
exec('czytaj','#stalesys',,INFO,XINFO,FINFO);
__War_f:="exec('FindInSet','#table',_a,_a,_c,REF.FIRMA,$(_a+'.'+_b))";

:: Deklaracje obiektów
exec('RB','object');
exec('F','object');

:: Ustawia zmienne informujące o dostępie do wartości sprzedaży, zakupu, magazynowych
exec('upr_set','ceny');

:: typy osób kontaktowych
KH_OSTYP.index('NAME');
KH_OSTYP.prefix();
{? ~KH_OSTYP.first()
|| exec('init_kh_ostyp','!zws_par_kkhr')
?};

:: zainicjowanie środowiska selektora kontrahentów
_env:=exec('env','kontrahent_view');

:: zasilenie selektora kontrahentów

_knt_upr:=exec('kontrah_access','kontrahent_view');
_dkm_upr:=exec('dokum_access','kontrahent_view');
_zbl_upr:=exec('zbl_access','kontrahent_view');
_ob_upr:=exec('ob_access','kontrahent_view');
_nz:=0;

exec('init','jpk_v');

:: 0. Dane kontrahenta
{? _knt_upr
|| _nz+=1;
   KHV.blank();
   KHV.ID:='KONTRAHENT';
   KHV.NAME:='Dane kontrahenta'@;
   KHV.CONFIG:="params_exec('cfg_kontrahent','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('kontrahent_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('kontrahent_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('kontrahent_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='';
   KHV.ZAKL:='kh_active';
   KHV.NR:=_nz;
   _env.tabs.KONTRAHENT.get()
?};

:: 1. Faktury
{? _knt_upr & exec('faktury_access','kontrahent_view')
|| _nz+=1;
   KHV.blank();
   KHV.ID:='FAKTURY';
   KHV.NAME:='Dokumenty sprzedaży'@;
   KHV.CONFIG:="params_exec('cfg_faktury','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('faktury_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('faktury_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('faktury_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='LSP';
   KHV.ZAKL:='kh_active';
   KHV.NR:=_nz;
   _env.tabs.FAKTURY.get()
?};

{? _knt_upr & exec('chk_role','#b__box',OPERATOR.USER,'BIQ_KHR_DISP') &
   exec('b_action_params_chk','#b_action','BIQ_KHR_DISP')
|| _nz+=1;
   KHV.blank();
   KHV.ID:='ANALIZY_BI';
   KHV.NAME:='Analizy BI'@;
   KHV.CONFIG:="params_exec('cfg_kh_bi','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('analizy_biq_ctrl_call','kontrahent_view','#:biq_khr_disp','biq_khr_disp')"+'';
   KHV.BEFORE:="exec('stat_add','st_common','A_BI','Kontrahenci');
      params_exec('analizy_biq_ctrl_call','kontrahent_view','#:biq_khr_disp','biq_khr_disp')"+'';
   KHV.AFTER:=""+'';
   KHV.B_DOMAIN:='BIQ';
   KHV.ZAKL:='kh_active';
   KHV.NR:=_nz;
   _env.tabs.ANALIZY_BI.get()
?};

:: 2. Magazyn
{? _knt_upr & exec('magazyn_access','kontrahent_view')
|| _nz+=1;
   KHV.blank();
   KHV.ID:='MAGAZYN';
   KHV.NAME:='Dokumenty magazynowe'@;
   KHV.CONFIG:="params_exec('cfg_magazyn','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('magazyn_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('magazyn_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('magazyn_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='LMG';
   KHV.ZAKL:='kh_active';
   KHV.NR:=_nz;
   _env.tabs.MAGAZYN.get()
?};

:: 3. Zakupy
{? _knt_upr & exec('zakupy_access','kontrahent_view')
|| _nz+=1;
   KHV.blank();
   KHV.ID:='ZAKUPY';
   KHV.NAME:='Dokumenty zakupu'@;
   KHV.CONFIG:="params_exec('cfg_zakupy','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('zakupy_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('zakupy_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('zakupy_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='LZK';
   KHV.ZAKL:='kh_active';
   KHV.NR:=_nz;
   _env.tabs.ZAKUPY.get()
?};

:: 4. Oferty
{? _knt_upr & exec('oferty_access','kontrahent_view')
|| _nz+=1;
   KHV.blank();
   KHV.ID:='OFERTY';
   KHV.NAME:='Oferty'@;
   KHV.CONFIG:="params_exec('cfg_oferty','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('oferty_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('oferty_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('oferty_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='LSP';
   KHV.ZAKL:='kh_active';
   KHV.NR:=_nz;
   _env.tabs.OFERTY.get()
?};

:: 5. Zamówienia sprzedaży
{? _knt_upr & exec('zam_spr_access','kontrahent_view')
|| _nz+=1;
   KHV.blank();
   KHV.ID:='ZAM_SPR';
   KHV.NAME:='Zamówienia sprzedaży'@;
   KHV.CONFIG:="params_exec('cfg_zam_spr','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('zam_spr_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('zam_spr_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('zam_spr_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='LSP';
   KHV.ZAKL:='kh_active';
   KHV.NR:=_nz;
   _env.tabs.ZAM_SPR.get()
?};

:: 6. Zamówienia dostaw
{? _knt_upr & exec('zam_dost_access','kontrahent_view')
|| _nz+=1;
   KHV.blank();
   KHV.ID:='ZAM_DOST';
   KHV.NAME:='Zamówienia dostaw'@;
   KHV.CONFIG:="params_exec('cfg_zam_dost','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('zam_dost_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('zam_dost_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('zam_dost_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='LZK';
   KHV.ZAKL:='kh_active';
   KHV.NR:=_nz;
   _env.tabs.ZAM_DOST.get()
?};

:: 7. Umowy
{? _knt_upr & exec('umowy_access','kontrahent_view')
|| _nz+=1;
   KHV.blank();
   KHV.ID:='LUM_UMO';
   KHV.NAME:='Umowy cykliczne'@;
   KHV.CONFIG:="params_exec('cfg_umowy','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('umowy_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('umowy_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('umowy_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='LUM';
   KHV.ZAKL:='kh_active';
   KHV.NR:=_nz;
   _env.tabs.LUM_UMO.get()
?};

:: 8. Zgłoszenia jednorazowe
{? _knt_upr & exec('um_zgl_access','kontrahent_view')
|| _nz+=1;
   KHV.blank();
   KHV.ID:='LUM_ZGL';
   KHV.NAME:='Zgłoszenia jednorazowe'@;
   KHV.CONFIG:="params_exec('cfg_um_zgl','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('um_zgl_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('um_zgl_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('um_zgl_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='LUM';
   KHV.ZAKL:='kh_active';
   KHV.NR:=_nz;
   _env.tabs.LUM_ZGL.get()
?};

:: 9. Zgłoszenia remontowe
{? _knt_upr & exec('rem_zgl_access','kontrahent_view')
|| _nz+=1;
   KHV.blank();
   KHV.ID:='TRE_ZGL';
   KHV.NAME:='Zgłoszenia remontowe'@;
   KHV.CONFIG:="params_exec('cfg_rem_zgl','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('rem_zgl_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('rem_zgl_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('rem_zgl_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='LTR';
   KHV.ZAKL:='kh_active';
   KHV.NR:=_nz;
   _env.tabs.TRE_ZGL.get()
?};

:: 10. Karty przekazania odpadów
{? _knt_upr & exec('kpo_access','kontrahent_view')
|| _nz+=1;
   KHV.blank();
   KHV.ID:='KPO';
   KHV.NAME:='Karty przekazania odpadów'@;
   KHV.CONFIG:="params_exec('cfg_kpo','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('kpo_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('kpo_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('kpo_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='LUO';
   KHV.ZAKL:='kh_active';
   KHV.NR:=_nz;
   _env.tabs.KPO.get()
?};

:: 11. Reklamacje klienta
{? _knt_upr & exec('rekn_k_access','kontrahent_view')
|| _nz+=1;
   KHV.blank();
   KHV.ID:='REKN_K';
   KHV.NAME:='Reklamacje klienta'@;
   KHV.CONFIG:="params_exec('cfg_rekn_k','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('rekn_k_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('rekn_k_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('rekn_k_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='TRE';
   KHV.ZAKL:='kh_active';
   KHV.NR:=_nz;
   _env.tabs.REKN_K.get()
?};

:: 12. Reklamacje do dostawcy
{? _knt_upr & exec('rekn_d_access','kontrahent_view')
|| _nz+=1;
   KHV.blank();
   KHV.ID:='REKN_D';
   KHV.NAME:='Reklamacje do dostawcy'@;
   KHV.CONFIG:="params_exec('cfg_rekn_d','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('rekn_d_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('rekn_d_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('rekn_d_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='TRE';
   KHV.ZAKL:='kh_active';
   KHV.NR:=_nz;
   _env.tabs.REKN_D.get()
?};

:: 13. Kontakty
{? _dkm_upr
|| _nz+=1;
   KHV.blank();
   KHV.ID:='KH_DOKUM';
   KHV.NAME:='Kontakty'@;
   KHV.CONFIG:="params_exec('cfg_kh_dokum','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('kh_dokum_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('kh_dokum_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('kh_dokum_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='KKH';
   KHV.ZAKL:='kh_all';
   KHV.NR:=_nz;
   _env.tabs.KH_DOKUM.get()
?};

:: 14. Kontakty
{? _dkm_upr
|| _nz+=1;
   KHV.blank();
   KHV.ID:='OK_DOKUM';
   KHV.NAME:='Kontakty'@;
   KHV.CONFIG:="params_exec('cfg_ok_dokum','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('ok_dokum_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('ok_dokum_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('ok_dokum_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='KKH';
   KHV.ZAKL:='kh_osob';
   KHV.NR:=_nz;
   _env.tabs.OK_DOKUM.get()
?};

:: 15. Treść kontaktu
{? _dkm_upr
|| _nz+=1;
   KHV.blank();
   KHV.ID:='DOKUMZ';
   KHV.NAME:='Treść'@;
   KHV.CONFIG:="params_exec('cfg_dokumz','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('dokumz_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('dokumz_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('dokumz_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='KKH';
   KHV.ZAKL:='dokum';
   KHV.NR:=_nz;
   _env.tabs.DOKUMZ.get()
?};

:: 16. Pozycje książki nadawczej
{? _dkm_upr
|| _nz+=1;
   KHV.blank();
   KHV.ID:='KN_POZ';
   KHV.NAME:='Pozycje'@;
   KHV.CONFIG:="params_exec('cfg_kn_poz','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('kn_poz_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('kn_poz_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('kn_poz_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='KKH';
   KHV.ZAKL:='kn_nag';
   KHV.NR:=_nz;
   _env.tabs.KN_POZ.get()
?};

:: 17. Poczta
{? exec('poczta_access','kontrahent_view')
|| _nz+=1;
   KHV.blank();
   KHV.ID:='KH_POCZTA';
   KHV.NAME:='Poczta'@;
   KHV.CONFIG:="params_exec('cfg_kh_poczta','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('kh_poczta_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('kh_poczta_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('kh_poczta_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='ZWS';
   KHV.ZAKL:='kh_all';
   KHV.NR:=_nz;
   _env.tabs.KH_POCZTA.get()
?};

:: 18. Poczta
{? exec('poczta_access','kontrahent_view')
|| _nz+=1;
   KHV.blank();
   KHV.ID:='OK_POCZTA';
   KHV.NAME:='Poczta'@;
   KHV.CONFIG:="params_exec('cfg_ok_poczta','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('ok_poczta_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('ok_poczta_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('ok_poczta_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='ZWS';
   KHV.ZAKL:='kh_osob';
   KHV.NR:=_nz;
   _env.tabs.OK_POCZTA.get()
?};

:: 19. Podgląd html
{? _dkm_upr
|| _nz+=1;
   KHV.blank();
   KHV.ID:='WEBBROWSER';
   KHV.NAME:='Podgląd html'@;
   KHV.CONFIG:="params_exec('cfg_dokumzw','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('dokumzw_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:=""+'';
   KHV.AFTER:=""+'';
   KHV.B_DOMAIN:='KKH';
   KHV.ZAKL:='dokum';
   KHV.NR:=_nz;
   _env.tabs.WEBBROWSER.get()
?};

:: 20. Załączniki książki nadawczej
{? _dkm_upr
|| _nz+=1;
   KHV.blank();
   KHV.ID:='KN_NAGZ';
   KHV.NAME:='Załączniki'@;
   KHV.CONFIG:="params_exec('cfg_kn_nagz','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('kn_nagz_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('kn_nagz_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('kn_nagz_after','kontrahent_view',_a)"+'';
:   KHV.BEFORE:=""+'';
:   KHV.AFTER:=""+'';
   KHV.B_DOMAIN:='KKH';
   KHV.ZAKL:='kn_nag';
   KHV.NR:=_nz;
   _env.tabs.KN_NAGZ.get()
?};

:: 21. Typy osób kontaktowych
{? _dkm_upr
|| _nz+=1;
   KHV.blank();
   KHV.ID:='OK_TYPY';
   KHV.NAME:='Typy'@;
   KHV.CONFIG:="params_exec('cfg_ok_typy','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('ok_typy_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('ok_typy_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('ok_typy_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='KKH';
   KHV.ZAKL:='kh_osob';
   KHV.NR:=_nz;
   _env.tabs.OK_TYPY.get()
?};

:: 22. Przychodzące Businesslink - Log
{? _zbl_upr
|| _nz+=1;
   KHV.blank();
   KHV.ID:='BL_DOKUM';
   KHV.NAME:='Log'@;
   KHV.CONFIG:="params_exec('cfg_bl_log','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('bl_log_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('bl_log_before','kontrahent_view',_a)"+'';
   KHV.AFTER:=""+'';
   KHV.B_DOMAIN:='ZBL';
   KHV.ZAKL:='bl_dokum';
   KHV.NR:=_nz;
   _env.tabs.BL_DOKUM.get()
?};

:: 23. Obieg faktur - załączniki
{? _ob_upr<>''
|| _nz+=1;
   KHV.blank();
   KHV.ID:='OBG_EDOKUMZ';
   KHV.NAME:='Załączniki'@;
   KHV.CONFIG:="params_exec('cfg_edokumz','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:=""+'';
   KHV.BEFORE:=""+'';
   KHV.AFTER:=""+'';
   KHV.B_DOMAIN:='OBG';
   KHV.ZAKL:='obg_rej';
   KHV.NR:=_nz;
   _env.tabs.OBG_EDOKUMZ.get()
?};

:: 24. Obieg wniosków - załączniki
{? _ob_upr<>''
|| _nz+=1;
   KHV.blank();
   KHV.ID:='OBE_EDOKUMZ';
   KHV.NAME:='Załączniki'@;
   KHV.CONFIG:="params_exec('cfg_edokumz2','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:=""+'';
   KHV.BEFORE:=""+'';
   KHV.AFTER:=""+'';
   KHV.B_DOMAIN:='OBE';
   KHV.ZAKL:='obe_rej';
   KHV.NR:=_nz;
   _env.tabs.OBE_EDOKUMZ.get()
?};

:: 25. Obieg wniosków - informacje dodatkowe
{? _ob_upr*'W'>0
|| _nz+=1;
   KHV.blank();
   KHV.ID:='EDOK_ATK';
   KHV.NAME:='Informacje dodatkowe'@;
   KHV.CONFIG:="params_exec('cfg_inf_dod','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:=""+'';
   KHV.BEFORE:=""+'';
   KHV.AFTER:=""+'';
   KHV.B_DOMAIN:='OBE';
   KHV.ZAKL:='obe_rej';
   KHV.NR:=_nz;
   _env.tabs.EDOK_ATK.get()
?};

:: 26. Dane kontrahenta wg firmy
{? _knt_upr
|| _nz+=1;
   KHV.blank();
   KHV.ID:='KH_DOD';
   KHV.NAME:='Dane kontrahenta wg firmy'@;
   KHV.CONFIG:="params_exec('cfg_kh_dod','kontrahent_view',_a,_b)"+'';
   KHV.REFRESH:="params_exec('kh_dod_after_refresh','kontrahent_view')"+'';
   KHV.BEFORE:="params_exec('kh_dod_before','kontrahent_view',_a)"+'';
   KHV.AFTER:="params_exec('kh_dod_after','kontrahent_view',_a)"+'';
   KHV.B_DOMAIN:='ZWS';
   KHV.ZAKL:='kh_dod';
   KHV.NR:=_nz;
   _env.tabs.KH_DOD.get()
?};

:: Ustalenie treści linku
_params:=params_get();
{? type_of(_params)>0 & var_pres('LINK',_params)=type_of('')
|| _link:=_params.LINK
|| _link:=''
?};

:: Załadowanie selektora kontrehentów
params_set('env',_env,'LINK',_link);
{? exec('load','kontrahent_view',_env)
|| _env.select()
?};

:: Wylogowanie z uslugi sieciowej GUS
{? var_pres('gusReaderSID')>0 & var_pres('GusReader')>0
|| GusReader.logout();
   VAR_DEL.delete('gusReaderSID')
?}


\slo_mat_env
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Środowisko obszaru SLO_MAT - Materiały
::----------------------------------------------------------------------------------------------------------------------
::UWAGA: _fld, i _mth to formułki pomocnicze, żeby wygodniej tworzyć tablice i komentować poszczególne jej elementy
::       powiedzmy, że to bedzie pole
         _fld:="31+form(_a)";
::       powiedzmy, że to bedzie metoda
         _mth:="31+form(_a)";

::UWAGA: _fld, i _mth to formułki pomocnicze, żeby wygodniej tworzyć tablice i komentować poszczególne jej elementy
::       powiedzmy, że to bedzie pole
         _fld:="31+form(_a)";
::       powiedzmy, że to bedzie metoda
         _mth:="31+form(_a)";

_env:=obj_new(
::             pola
                _fld('PANEL',                'Panel')
               ,_fld('DISABLE',              'Wyłączyć okna')
               ,_fld('ENV_TECH',             'Obiekt środowika dla zakładki Technologia domyślna')

::             identyfikatory okienek
               ,_fld('wid_win_main',         'ID okna glownego')

::             tytuly okienek
               ,_fld('tit_main',             'Tytul okienka glownego')

::             tabele tymczasowe

::             indeksy tymczasowych tabel

::             uchwyty do okien
               ,_fld('WIN_MAIN',             'Główne okno grupowe')

::             identyfikatory przycisków

::             METODY
               ,_mth('initObszar',           'Init obszaru')
               ,_mth('winMain',              'Ustawienie głównego okna')
               ,_mth('set_tab',              'Ustawienie zakładki')
               );

_env.DISABLE:='';

_env.ENV_TECH:=exec('techdom_env','tech_common');

_env.wid_win_main:='slomat_winmain';

:: Tytuł okna pozostaje pusty - nadawany jest przez mechanizm AreaTitle
_env.tit_main:='';

_env.WIN_MAIN:='';

_env.initObszar:="
   _wyn:=1;

   .PANEL:=obj_new('MAIN','INFO');
   .PANEL.MAIN:=obj_new('NAME','TAB');
   .PANEL.MAIN.NAME:='panel0';
   .PANEL.MAIN.TAB:=obj_new('MATERIALY','USLUGI','GRUPY','BADGR','BADM');
   {! _ii:=1..obj_len(.PANEL.MAIN.TAB)
   |! .PANEL.MAIN.TAB[_ii]:=obj_new('TABNR','HIDE','WER');
      .PANEL.MAIN.TAB[_ii].TABNR:=0;
      .PANEL.MAIN.TAB[_ii].HIDE:=0;
      .PANEL.MAIN.TAB[_ii].WER:=''
   !};
   .PANEL.MAIN.TAB.MATERIALY.TABNR:=1;
   .PANEL.MAIN.TAB.MATERIALY.WER:='NL_WER';
   .PANEL.MAIN.TAB.USLUGI.TABNR:=2;
   .PANEL.MAIN.TAB.USLUGI.WER:='NL_WERU';
   .PANEL.MAIN.TAB.BADGR.TABNR:=3;
   .PANEL.MAIN.TAB.BADGR.WER:='WERG';
   .PANEL.MAIN.TAB.BADM.TABNR:=4;
   .PANEL.MAIN.TAB.BADM.WER:='WERM';
   .PANEL.MAIN.TAB.GRUPY.TABNR:=5;
   .PANEL.MAIN.TAB.GRUPY.WER:='WER';
   .PANEL.INFO:=obj_new('NAME','TAB','CUR_TAB');
   .PANEL.INFO.NAME:='info';
   .PANEL.INFO.TAB:=obj_new('DANE_MATERIALU','DANE_USLUGI','SKLADOWE','CENNIKI','CENY','KODY_TOWAROWE','JM', 'M_IMG'
      ,'ANALIZY_BI_M','ANALIZY_BI_U','M_LABEL','DOSTAWCY','ZAMIENNIKI','TLUMACZENIA','MAGAZYNY','KODY_CN','MIN_MAX_INNE'
      ,'STAWKI_VAT','STAWKI_VAT_HIST','STREFY_MG','BADANIA','ZALACZNIKI','OPAKOWANIA','CENY_DO_KALK','TECHNOLOGIE'
      ,'TECHDOM','WYK_W_TECH','CENY_PROP','PX_TEX','PARBAD','MGRP','ANALIZY_BI_G','USERREZ');
   {! _ii:=1..obj_len(.PANEL.INFO.TAB)
   |! .PANEL.INFO.TAB[_ii]:=obj_new('TABNR','HIDE','WER');
      .PANEL.INFO.TAB[_ii].TABNR:=0;
      .PANEL.INFO.TAB[_ii].HIDE:=0;
      .PANEL.INFO.TAB[_ii].WER:=''
   !};
   .PANEL.INFO.CUR_TAB:=0;

:: blank M.MGR
   POMOC.MGR:=null;

:: obiekt do obsługi dokumentacji elektronicznej + domyślna instancja
   exec('declare','tech_doc');

:: dodanie karty technologicznej Kompletacja
   exec('tpktl_kompletacja','material');

:: Formuła inicjująca dla obszaru LSP - ponieważ zakładka Cenniki
   exec('init','lsp');

:: Badania - ikonki pól
   exec('ikonki','statexam');

:: Parametry
   __PARSES.setEnv('LSP_CEN');
   __PARSES.setEnv('LMG_DSM');

   _wyn
";

:: Teksty do tłumaczenia zakładek - nie usuwać, wewnątrz poniższej formuli nie zadziałają
'Dane materiału'@;'Jednostki'@;'Zdjęcia'@;'Analizy BI'@;'Stawki VAT kontrahenta'@;'Historia stawek VAT'@;'Dostawcy'@;
'Ceny'@;'Cenniki'@;'Kody towarowe'@;'Zamienniki'@;'Magazyny'@;'Stany min./max./...'@;'Kody CN'@;'Opakowania'@;
'Składowe'@;'Załączniki'@;'Badania'@;'Tłumaczenie'@;'Ceny do kalkulacji'@;'Propozycje cen'@;'Technologie'@;
'Wykorzystanie indeksu'@;'Przepisy planistyczne'@;

_env.winMain:="
::
:: .PANEL.MAIN
::
   params_set(params_get());
   _fb:=\"
      MGR.actions_grayed('WER','');
      _first:=1;
      {? POMOC.M<>null() & M.ref() = POMOC.M & (M.RODZ=POMOC.RODZ | POMOC.RODZ='')
        & ((M.RODZ='T' & M.A=POMOC.M_ZAKR_T) | (M.RODZ='U' & M.A=POMOC.M_ZAKR_U))
      || _first:=0
      ?};
      M.index('ARODZ');
      {? _first
      || M.prefix('T',POMOC.RODZ);
         M.first()
      |? M.RODZ='U'
      || M.prefix(POMOC.M_ZAKR_U,'U')
      || M.prefix(POMOC.M_ZAKR_T,'T')
      ?}
      \";
   _grp_w:=.WIN_MAIN:=M.grp_make(.tit_main,_fb,.wid_win_main,,,\"exec('exit','zws',_a)\");

:: sterowanie, która zakładka ma być aktywna: materiały, usługi (M/U)
   _mu:=exec('get','#params',4030,2,OPERATOR.USER);

   _far:=\"
      POMOC.M:=null();
      HELP.REFMAT:=M.ref();
      params_set(params_get());
      _env:=params_get().env;
      _env.DISABLE:={? grp_empty(M,cur_win(1,1)) || '#disable' || '' ?};
      _tab:=_env.PANEL.INFO.TAB;
      _cur_tab:=_env.PANEL.INFO.CUR_TAB;
      {? _cur_tab=_tab.DANE_MATERIALU.TABNR || grp_edisp(M,'INFO')
      |? _cur_tab=_tab.SKLADOWE.TABNR || grp_disp(TMAT,_tab.SKLADOWE.WER,1)
      |? _cur_tab=_tab.DANE_USLUGI.TABNR || grp_edisp(M,'INFOU')
      |? _cur_tab=_tab.CENNIKI.TABNR || params_exec('tar_far_m','material',1)
      |? _cur_tab=_tab.CENY.TABNR || grp_disp(MDOST,'WER1')
      |? _cur_tab=_tab.KODY_TOWAROWE.TABNR || grp_disp(MKODK,'WERM')
      |? _cur_tab=_tab.JM.TABNR || grp_disp(MJM,'MAT')
      |? _cur_tab=_tab.M_IMG.TABNR || grp_disp(M_IMG,'WER')
      |? _cur_tab=_tab.M_LABEL.TABNR || grp_disp(M_LABEL,'WER')
      |? _cur_tab=_tab.DOSTAWCY.TABNR || grp_disp(MDOST,'WER'); grp_disp(MDOSTPOW,'WER')
      |? _cur_tab=_tab.ZAMIENNIKI.TABNR || grp_disp(MZ,'WERD')
      |? _cur_tab=_tab.TLUMACZENIA.TABNR || grp_disp(TRANSLAT,'WERM')
      |? _cur_tab=_tab.MAGAZYNY.TABNR || grp_disp(MX,'WMG')
      |? _cur_tab=_tab.KODY_CN.TABNR || grp_disp(CNM,'WER')
      |? _cur_tab=_tab.MIN_MAX_INNE.TABNR || grp_disp(MST,'WER')
      |? _cur_tab=_tab.STAWKI_VAT.TABNR || grp_disp(M_KH_SV,'WER_M')
      |? _cur_tab=_tab.STAWKI_VAT_HIST.TABNR || grp_disp(M_SV,'WER')
      |? _cur_tab=_tab.STREFY_MG.TABNR || grp_disp(M_MG_GR,'WER')
      |? _cur_tab=_tab.BADANIA.TABNR || grp_disp(BADMSEH,'WER')
      |? _cur_tab=_tab.ZALACZNIKI.TABNR || grp_disp(DOKUM,'WER'); grp_disp(DOKTYP,'CECH')
      |? _cur_tab=_tab.OPAKOWANIA.TABNR || grp_disp(M_OPAKOW,'WER')
      |? _cur_tab=_tab.CENY_DO_KALK.TABNR || grp_disp(PTC,'WER')
      |? _cur_tab=_tab.TECHNOLOGIE.TABNR || grp_disp(TKTLW,'WER_M')
      |? _cur_tab=_tab.TECHDOM.TABNR || params_exec('techdom_after_rfr','tech_common')
      |? _cur_tab=_tab.WYK_W_TECH.TABNR || grp_disp(__who_t,__who_w)
      |? _cur_tab=_tab.CENY_PROP.TABNR || grp_disp(MPTZ,'WER_TOW')
      |? _cur_tab=_tab.PX_TEX.TABNR ||  grp_disp(PX_TEX,'WER')
      |? _cur_tab=_tab.ANALIZY_BI_M.TABNR || exec('analizy_biq_ctrl_m','zws')
      |? _cur_tab=_tab.ANALIZY_BI_U.TABNR || exec('analizy_biq_ctrl_u','zws')
      |? _cur_tab=_tab.ANALIZY_BI_G.TABNR || exec('analizy_biq_ctrl_g','zws')
      ?}
      \";

::
:: zakładka materiały
::
   _fb:=\"
      _env:=params_get().env;
      MGR.actions_grayed('WER','');
::    blank M.RODZ
      POMOC.RODZ:='T';
      TAZ.CEN_VIEW:='T';
      TAZ.RODZ:=POMOC.RODZ;
::    zakres wyświetlanych cenników
      {? TAZ.CEN_VIEW='' || TAZ.CEN_VIEW:=POMOC.RODZ ?};
      exec('zakres_set_towar','material');
      exec('m_win_edit','material');
      exec('m_win_patt','material');
::    wyświetlamy wszystkie zakładki
      {! _ii:=1..obj_len(_env.PANEL.INFO.TAB)
      |! _env.PANEL.INFO.TAB[_ii].HIDE:=0
      !};
      tab_show(0,_env.PANEL.INFO.NAME);
::    ukrywamy zakładki
      _env.PANEL.INFO.TAB.DANE_USLUGI.HIDE:=1;
      _env.PANEL.INFO.TAB.TLUMACZENIA.HIDE:=XINFO.SLJEZYK=null;
      _env.PANEL.INFO.TAB.PARBAD.HIDE:=1;
      _env.PANEL.INFO.TAB.MGRP.HIDE:=1;
      _env.PANEL.INFO.TAB.USERREZ.HIDE:=1;
      _env.PANEL.INFO.TAB.ANALIZY_BI_U.HIDE:=1;
      {? ~exec('chk_role','#b__box',OPERATOR.USER,'BIQ_MAT_DISM') |
         ~exec('b_action_params_chk','#b_action','BIQ_MAT_DISM')
      || _env.PANEL.INFO.TAB.ANALIZY_BI_M.HIDE:=1
      ?};
      _env.PANEL.INFO.TAB.ANALIZY_BI_G.HIDE:=1;
::    ustawienie zakładki
      _env.set_tab(_env)
      \";
   M.grp_sel(_grp_w,,.PANEL.MAIN.TAB.MATERIALY.WER,'Materiały'@,_far,,,14,_fb,,,,'maximized','MAT',_mu='M');

::
:: zakładka usługi
::
   _fb:=\"
      _env:=params_get().env;
::    blank M.RODZ
      POMOC.RODZ:='U';
      TAZ.CEN_VIEW:='U';
      TAZ.RODZ:=POMOC.RODZ;
::    zakres wyświetlanych cenników
      {? TAZ.CEN_VIEW='' || TAZ.CEN_VIEW:=POMOC.RODZ ?};
      exec('zakres_set_usluga','material');
      exec('m_win_edit','material');
      exec('m_win_patt','material');
::    wyświetlamy wszystkie zakładki
      {! _ii:=1..obj_len(_env.PANEL.INFO.TAB)
      |! _env.PANEL.INFO.TAB[_ii].HIDE:=0
      !};
      tab_show(0,_env.PANEL.INFO.NAME);
::    ukrywamy zakładki
      _env.PANEL.INFO.TAB.DANE_MATERIALU.HIDE:=1;
      _env.PANEL.INFO.TAB.DOSTAWCY.HIDE:=1;
      _env.PANEL.INFO.TAB.KODY_TOWAROWE.HIDE:=1;
      _env.PANEL.INFO.TAB.SKLADOWE.HIDE:=1;
      _env.PANEL.INFO.TAB.ZAMIENNIKI.HIDE:=1;
      _env.PANEL.INFO.TAB.MAGAZYNY.HIDE:=1;
      _env.PANEL.INFO.TAB.KODY_CN.HIDE:=1;
      _env.PANEL.INFO.TAB.MIN_MAX_INNE.HIDE:=1;
      _env.PANEL.INFO.TAB.STREFY_MG.HIDE:=1;
      _env.PANEL.INFO.TAB.OPAKOWANIA.HIDE:=1;
      _env.PANEL.INFO.TAB.BADANIA.HIDE:=1;
      _env.PANEL.INFO.TAB.CENY_DO_KALK.HIDE:=1;
      _env.PANEL.INFO.TAB.CENY_PROP.HIDE:=1;
      {? exec('get','#params',500742,2,null())='T'
      ||_env.PANEL.INFO.TAB.TECHNOLOGIE.HIDE:=0;
         _env.PANEL.INFO.TAB.TECHDOM.HIDE:=0
      || _env.PANEL.INFO.TAB.TECHNOLOGIE.HIDE:=1;
         _env.PANEL.INFO.TAB.TECHDOM.HIDE:=1
      ?};
      _env.PANEL.INFO.TAB.WYK_W_TECH.HIDE:=1;
      _env.PANEL.INFO.TAB.PX_TEX.HIDE:=1;
      _env.PANEL.INFO.TAB.PARBAD.HIDE:=1;
      _env.PANEL.INFO.TAB.MGRP.HIDE:=1;
      _env.PANEL.INFO.TAB.USERREZ.HIDE:=1;
      _env.PANEL.INFO.TAB.ANALIZY_BI_M.HIDE:=1;
      {? ~exec('chk_role','#b__box',OPERATOR.USER,'BIQ_MAT_DISU') |
         ~exec('b_action_params_chk','#b_action','BIQ_MAT_DISU')
      || _env.PANEL.INFO.TAB.ANALIZY_BI_U.HIDE:=1
      ?};
      _env.PANEL.INFO.TAB.ANALIZY_BI_G.HIDE:=1;
::    ustawienie zakładki
      _env.set_tab(_env)
      \";
   M.grp_sel(_grp_w,,.PANEL.MAIN.TAB.USLUGI.WER,'Usługi'@,_far,,,14,_fb,,,,'maximized','USL',_mu='U');

   _fab:=\"
      params_set(params_get());
      _env:=params_get().env;
      MGR.actions_grayed('WER','');
      BADMSEP.index('BADMHP');
      BADMSEP.prefix(BADMSEH.ref());
      grp_disp(BADMSEP,'WER');
      _env.set_tab(_env)
      \";
::
:: zakładka badania dla grup materiałowych
::
   {? exec('get','#params',540101,2,null())='T'
   ||
   _fb:=\"
      _env:=params_get().env;
      BADVAR.MGR:=null();
      POMOC.RODZ:='T';
      BADVAR.TYP_BAD:='M';
      BADMSEH.index('MGR_B_');
      BADMSEH.prefix(null());
      BADMSEH.win_edit('REDG');
      {? _env.PANEL.INFO.TAB.PARBAD.HIDE
      || _env.PANEL.INFO.TAB.PARBAD.HIDE:=0;
         tab_show(0,_env.PANEL.INFO.NAME);
::       ukrywamy inne zakładki
         {! _ii:=1..obj_len(_env.PANEL.INFO.TAB)
         |! {? _ii<>_env.PANEL.INFO.TAB.PARBAD.TABNR || _env.PANEL.INFO.TAB[_ii].HIDE:=1 ?}
         !}
      ?};
      _env.set_tab(_env)
      \";
   M.grp_sel(_grp_w,BADMSEH,.PANEL.MAIN.TAB.BADGR.WER,'Badania: grupy'@,_fab,,,14,_fb,,,,'maximized','BGR',_mu='B');

::
:: zakładka badania dla materiałów
::
   _fb:=\"
      _env:=params_get().env;
      BADVAR.M:=null;
      BADVAR.TYP_BAD:='M';
      BADMSEH.index('GRM_B_');
      BADMSEH.prefix(null());
      BADMSEH.win_edit('REDM');
      {? _env.PANEL.INFO.TAB.PARBAD.HIDE
      || _env.PANEL.INFO.TAB.PARBAD.HIDE:=0;
         tab_show(0,_env.PANEL.INFO.NAME);
::       ukrywamy inne zakładki
         {! _ii:=1..obj_len(_env.PANEL.INFO.TAB)
         |! {? _ii<>_env.PANEL.INFO.TAB.PARBAD.TABNR || _env.PANEL.INFO.TAB[_ii].HIDE:=1 ?}
         !}
      ?};
      _env.set_tab(_env)
      \";
   M.grp_sel(_grp_w,BADMSEH,.PANEL.MAIN.TAB.BADM.WER,'Badania: materiały'@,_fab,,,14,_fb,,,,'maximized','MGR',_mu='G');

::
:: zakładka grupy  materiałów lub usług
::
  _fab:=\"
      params_set(params_get());
      _env:=params_get().env;
      BEER.ODG:=MGR.ref();
      HELP.MGR:=MGR.ref();
      _env.DISABLE:={? grp_empty(MGR,cur_win(1,1)) || '#disable' || '' ?};
      _tab:=_env.PANEL.INFO.TAB;
      _cur_tab:=_env.PANEL.INFO.CUR_TAB;
      {? _cur_tab=_tab.MGRP.TABNR
      || MGRP.index('MGR');
         MGRP.prefix(MGR.ref());
         grp_disp(MGRP,'WER')
      |? _cur_tab=_tab.USERREZ.TABNR
      || USERREZ.index('MGR');
         USERREZ.prefix(MGR.ref());
         grp_disp(USERREZ,'MGRUS')
      |? _cur_tab=_tab.ANALIZY_BI_G.TABNR
      || MGR.get();
         exec('analizy_biq_ctrl_g','zws')
      ?}
      \";
   _fb:=\"
      _env:=params_get().env;
      POMOC.RODZ:='';
      MGR.actions_grayed('WER','GR');
      MGR.index('MGR');
      MGR.prefix();
      MGR.win_edit('RED');
      {? _env.PANEL.INFO.TAB.MGRP.HIDE | _env.PANEL.INFO.TAB.USERREZ.HIDE
      || _env.PANEL.INFO.TAB.MGRP.HIDE:=0;
         _env.PANEL.INFO.TAB.USERREZ.HIDE:=0;
         tab_show(0,_env.PANEL.INFO.NAME);
::       ukrywamy inne zakładki
         {! _ii:=1..obj_len(_env.PANEL.INFO.TAB) |! _env.PANEL.INFO.TAB[_ii].HIDE:=1 !};
         _env.PANEL.INFO.TAB.MGRP.HIDE:=0;
         _env.PANEL.INFO.TAB.USERREZ.HIDE:=0
      ?};
      {? ~exec('chk_role','#b__box',OPERATOR.USER,'BIQ_MAT_DISG') |
         ~exec('b_action_params_chk','#b_action','BIQ_MAT_DISG')
      || _env.PANEL.INFO.TAB.ANALIZY_BI_G.HIDE:=1
      || _env.PANEL.INFO.TAB.ANALIZY_BI_G.HIDE:=0
      ?};
      _env.set_tab(_env)
      \";
   M.grp_sel(_grp_w,MGR,.PANEL.MAIN.TAB.GRUPY.WER,'Grupy materiałów i usług'@,_fab,,,14,_fb,,,,'maximized','BMA',_mu='A')

   ?};
::
:: .PANEL.INFO
::
   _tabNr:=0;
   M.grp_splt(_grp_w,,'horizontal',.PANEL.INFO.NAME);
:: kolejność zakładek
   _tabNr+=1; .PANEL.INFO.TAB.DANE_MATERIALU.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.DANE_USLUGI.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.JM.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.M_IMG.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.ANALIZY_BI_M.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.ANALIZY_BI_U.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.M_LABEL.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.STAWKI_VAT.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.STAWKI_VAT_HIST.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.DOSTAWCY.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.CENY.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.CENNIKI.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.KODY_TOWAROWE.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.ZAMIENNIKI.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.MAGAZYNY.TABNR:=_tabNr;
   {? exec('FindInSet','#table','MG','MWS','T','T') || _tabNr+=1; .PANEL.INFO.TAB.STREFY_MG.TABNR:=_tabNr ?};
   _tabNr+=1; .PANEL.INFO.TAB.MIN_MAX_INNE.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.KODY_CN.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.OPAKOWANIA.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.SKLADOWE.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.ZALACZNIKI.TABNR:=_tabNr;
   {? exec('get','#params',540101,2,null())='T' || _tabNr+=1; .PANEL.INFO.TAB.BADANIA.TABNR:=_tabNr ?};
   _tabNr+=1; .PANEL.INFO.TAB.TLUMACZENIA.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.CENY_DO_KALK.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.CENY_PROP.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.TECHNOLOGIE.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.TECHDOM.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.WYK_W_TECH.TABNR:=_tabNr; exec('whohasme','tech_mater',6,1,,1,exec('tre_lic','tre')='T');
   _tabNr+=1; .PANEL.INFO.TAB.PX_TEX.TABNR:=_tabNr;
   {? exec('get','#params',540101,2,null())='T' || _tabNr+=1; .PANEL.INFO.TAB.PARBAD.TABNR:=_tabNr ?};
   _tabNr+=1; .PANEL.INFO.TAB.MGRP.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.ANALIZY_BI_G.TABNR:=_tabNr;
   _tabNr+=1; .PANEL.INFO.TAB.USERREZ.TABNR:=_tabNr;
:: definiowanie zakładek
   {! _ii:=1.._tabNr
   |!
::
:: zakładki materiału:
::
      {? _ii=.PANEL.INFO.TAB.DANE_MATERIALU.TABNR
::    - dane materiału
      || .PANEL.INFO.TAB.DANE_MATERIALU.WER:='INFO';
         _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.DANE_MATERIALU.TABNR;
            _enable:={? _env.DISABLE='' || 'enable=1' || 'enable=0' ?};
            _win_red:=_env.PANEL.INFO.TAB.DANE_MATERIALU.WER;
            M.efld_opt(_win_red,_enable,,'VAT');
            M.efld_opt(_win_red,_enable,SLO,'TR');
            M.efld_opt(_win_red,_enable,,'MGR');
            M.efld_opt(_win_red,_enable,,'MGRP');
            M.efld_opt(_win_red,_enable,ZMIENNE,'MGAT');
            M.efld_opt(_win_red,_enable,,'MGAT');
            M.efld_opt(_win_red,_enable,ZMIENNE,'MODM');
            M.efld_opt(_win_red,_enable,,'MODM');
            M.efld_opt(_win_red,_enable,,'R');
            M.efld_opt(_win_red,_enable,,'OPAKOW');
            M.efld_opt(_win_red,_enable,,'RYS');
            _env.DISABLE
            \";
         M.grp_edit(_grp_w,,'INFO','Dane materiału'@,,_fb,,, 'maximized')

      |? _ii=.PANEL.INFO.TAB.SKLADOWE.TABNR
::    - składowe
      || .PANEL.INFO.TAB.SKLADOWE.WER:='WERS';
         _far:=\"
            _env:=params_get().env;
            _grayed:=':';
            TKTL.index('SKLAD_OD');
            TKTL.prefix('T',TKTL.KTM,TKTL.TYP,'N');
            TKTL.cntx_psh(); {? ~TKTL.prev() || _grayed:='R'+_grayed+'R' ?}; TKTL.cntx_pop();
            TKTL.cntx_psh(); {? ~TKTL.next() || _grayed:='N'+_grayed+'N' ?}; TKTL.cntx_pop();
            TMAT.actions_grayed(_env.PANEL.INFO.TAB.SKLADOWE.WER,_grayed);
            ~~
            \";
         _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.SKLADOWE.TABNR;
            params_exec('tmat_tab_init','material');
            _result:=_env.DISABLE;
            {? M.R<>'W' & M.R<>'P'
            || _result:='#disable'
            ?};
            _result
            \";
         _fa:=\"
            exec('tmat_tab_done','material')
            \";
         M.grp_sel(_grp_w,TMAT,.PANEL.INFO.TAB.SKLADOWE.WER,'Składowe'@,_far,,,10,_fb,_fa,,,'maximized')

      |? _ii=.PANEL.INFO.TAB.DOSTAWCY.TABNR
::    - dostawcy
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.DOSTAWCY.TABNR;
            exec('mat_dost','material',0);
            _env.DISABLE
            \";
         _far:=\"
            params_set(params_get());
            grp_disp(MDOSTPOW,'WER')
         \";
         M.grp_sel(_grp_w,MDOST,'WER','Dostawcy'@,_far,,,12,_fb,,,,'maximized');
         M.tab_splt(_grp_w,,'vertical','dane_pow');
         _fb:=\"
            MDOST.cntx_psh();
            _mdost:={? MDOST.f_active() & MDOST.f_get() || MDOST.ref() |? MDOST.get() || MDOST.ref() || null() ?};
            MDOST.cntx_pop();
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.DOSTAWCY.TABNR;
            VAR_DEL.delete('__env_mdostpow');
            __env_mdostpow:=obj_new('IL');
            __env_mdostpow.IL:=0;
            {? _mdost
            ||
               MDOSTPOW.index('MDOST');
               MDOSTPOW.prefix(_mdost);
               _env.DISABLE
            ||
               '#disable'
            ?}
         \";
         _fa:=\"
            VAR_DEL.delete('__env_mdostpow')
         \";
         M.grp_sel(_grp_w,MDOSTPOW,'WER',,,,,12,_fb,,,,'maximized')

      |? _ii=.PANEL.INFO.TAB.ZAMIENNIKI.TABNR
::    - zamienniki
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.ZAMIENNIKI.TABNR;
            __whatz:='';
            exec('zamien','material',2,0);
            _env.DISABLE
            \";
         _fa:=\"HELP.REFMAT:=HELP.KTM; HELP.KTM().KTM\";
         M.grp_sel(_grp_w,MZ,'WERD','Zamienniki'@,,,,12,_fb,_fa,,,'maximized')

      |? _ii=.PANEL.INFO.TAB.KODY_TOWAROWE.TABNR
::    - kody kreskowe
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.KODY_TOWAROWE.TABNR;
            exec('kodk_m','kody_kresk',0);
            _env.DISABLE
            \";
         M.grp_sel(_grp_w,MKODK,'WERM','Kody towarowe'@,,,,10,_fb,,,,'maximized')

      |? _ii=.PANEL.INFO.TAB.MAGAZYNY.TABNR
::    - magazyny
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.MAGAZYNY.TABNR;
            exec('mag_mat','material',0);
            _env.DISABLE
            \";
         M.grp_sel(_grp_w,MX,'WMG','Magazyny'@,,,,12,_fb,,,,'maximized')

      |? _ii=.PANEL.INFO.TAB.KODY_CN.TABNR
::    - kody CN
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.KODY_CN.TABNR;
            exec('cnm_pokaz_cn','sklad',,0);
            _env.DISABLE
            \";
         M.grp_sel(_grp_w,CNM,'WER','Kody CN'@,,,,12,_fb,,,,'maximized')

      |? _ii=.PANEL.INFO.TAB.MIN_MAX_INNE.TABNR
::    - stany minimalne, maksymalne, ...
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.MIN_MAX_INNE.TABNR;
            exec('m_minmax','material',0);
            _env.DISABLE
            \";
         M.grp_sel(_grp_w,MST,'WER','Stany min./max./...'@,,,,12,_fb,,,,'maximized')

      |? _ii=.PANEL.INFO.TAB.STREFY_MG.TABNR
::    - strefy magazynowania
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.STREFY_MG.TABNR;
            exec('m_mg_gr','material',0);
            _env.DISABLE
            \";
         M_MG_GR.dnd_sel('WER',,'records.M_MG_GR',\"exec('renummst','material')\");
         M.grp_sel(_grp_w,M_MG_GR,'WER','Strefy magazynowania'@,,,,12,_fb,,,,'maximized')

      |? _ii=.PANEL.INFO.TAB.BADANIA.TABNR
::    - badania
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.BADANIA.TABNR;
            exec('BADMSEH_prefix','statexam',2);
            _env.DISABLE
            \";
         M.grp_sel(_grp_w,BADMSEH,'WER','Badania'@,,,,12,_fb,,,,'maximized')

      |? _ii=.PANEL.INFO.TAB.OPAKOWANIA.TABNR
::    - opakowania
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.OPAKOWANIA.TABNR;
            exec('m_opakow','material');
            _env.DISABLE
            \";
         _fa:=\"
            POMOC.OPAKOW:='N';
            HELP.REFMAT:=POMOC.M;
            POMOC.M().KTM
            \";
         M.grp_sel(_grp_w,M_OPAKOW,'WER','Opakowania'@,,,,12,_fb,_fa,,,'maximized')

      |? _ii=.PANEL.INFO.TAB.CENY_DO_KALK.TABNR
::    - ceny do kalkulacji
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.CENY_DO_KALK.TABNR;
            exec('pt_price','material_prod',0);
            _mgr:=M.MGR().KOD;
            {? exec('get','#params',500740,type_of(''))='N' |
               M.R='S' |
               M.R='P' |
               exec('get','#params',500750,2)=_mgr |
               exec('get','#params',500751,2)=_mgr |
               exec('get','#params',500752,2)=_mgr
            || _result:=_env.DISABLE
            || _result:='#disable'
            ?};
            _result
            \";
         M.grp_sel(_grp_w,PTC,'WER','Ceny do kalkulacji'@,,,,12,_fb,,,,'maximized')

      |? _ii=.PANEL.INFO.TAB.CENY_PROP.TABNR
::    - propozycje cen
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.CENY_PROP.TABNR;
            exec('tow_prop','material_prod',0);
            _result:=_env.DISABLE;
            {? M.R<>'W' & M.R<>'P'
            || _result:='#disable'
            ?};
            MPTZ.actions('WER_TOW',,'A:D',1);
            _result
            \";
         M.grp_sel(_grp_w,MPTZ,'WER_TOW','Propozycje cen'@,,,,12,_fb,,,,'maximized')

      |? _ii=.PANEL.INFO.TAB.TECHNOLOGIE.TABNR
::    - technologie
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.TECHNOLOGIE.TABNR;
            exec('tech_tow','material_prod',0);
            _result:=_env.DISABLE;
            {? M.R<>'W' & M.R<>'P' & M.R<>'' | (M.R='' & exec('get','#params',500742,2)='N')
            || _result:='#disable'
            ?};
            _result
            \";
         M.grp_sel(_grp_w,TKTLW,'WER_M','Technologie'@,,,,12,_fb,,,,'maximized');
::       Powiązanie z czynnościmi przeglądu i rejestrowania kart technologicznych
         task_attach('TTE_TEC_PKTE');
         task_attach('TTE_TEC_DRTE');
         task_attach('TTE_TEC_DRTO');
         task_attach('TTE_TEC_DRTS');
         task_attach('TTE_TEC_DRDP')

      |? _ii=.PANEL.INFO.TAB.TECHDOM.TABNR
::    - technologia domyślna
      || params_exec('techdom_cfg','tech_common',_grp_w)

      |? _ii=.PANEL.INFO.TAB.WYK_W_TECH.TABNR
::    - wykorzystanie w technologiach
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.WYK_W_TECH.TABNR;
            exec('whohasme','tech_mater',6,0,,1,exec('tre_lic','tre')='T');
::            {? exec('get','#params',500740,type_of(''))='N' |
::               M.R='S' |
::               M.R='P'
::            || _result:=_env.DISABLE
::            || _result:='#disable'
::            ?};
            _result:=_env.DISABLE;
            _result
            \";
         M.grp_sel(_grp_w,__who_t,__who_w,'Wykorzystanie indeksu'@,,,,12,_fb,,,,'maximized')

      |? _ii=.PANEL.INFO.TAB.PX_TEX.TABNR
::    - przepisy planistyczne
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.PX_TEX.TABNR;
            TKTL.clear();
            exec('PX_TEX_prefix','px_tex','TABELA M',M.ref());
            _result:=_env.DISABLE;
            {? M.R<>'W' & M.R<>'P'
            || _result:='#disable'
            ?};
            _result
         \";
         M.grp_sel(_grp_w,PX_TEX,'WER','Przepisy planistyczne'@,,,,12,_fb,,,,'maximized');
         PX_TEX.actions('WER','S:S');
::       Powiązanie z czynnościmi przeglądu i rejestrowania przepisów planistycznych
         task_attach('TPP_PPS_DPPL');
         task_attach('TPP_PPS_PPPL')
::
:: zakładki usługi:
::
      |? _ii=.PANEL.INFO.TAB.DANE_USLUGI.TABNR
::    - dane usługi
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.DANE_USLUGI.TABNR;
            _env.DISABLE
            \";
         M.grp_edit(_grp_w,,'INFOU','Dane usługi'@,,_fb,,, 'maximized')
::
:: zakładki wspólne:
::
      |? _ii=.PANEL.INFO.TAB.CENNIKI.TABNR
::    -cenniki
      || .PANEL.INFO.TAB.CENNIKI.WER:='WERMKH';
         exec('tar_m','material');
         _far:=\"
            _env:=params_get().env;
            params_exec('tar_gr2','ceny',0,{? TAZ.M || 1 || 2 ?},1,_env.PANEL.INFO.TAB.CENNIKI.WER);
            _env.DISABLE
            \";
         M.grp_sel(_grp_w,ceny,__win_acr,'Cenniki'@,_far,,,4,,,,,'maximized');
::       Powiązanie z czynnościmi przeglądu i rejestracji cennika sprzedaży
         task_attach('LSP_CEN_ZCSP');
         task_attach('LSP_CEN_DCSP');

         M.tab_splt(_grp_w,,'vertical','khv_cenniki');
         _fb:=\"
            M.cntx_psh();
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.CENNIKI.TABNR;
            params_exec('tar_far_m','material',0);
            exec('tap_act','ceny');
            _env.DISABLE
            \";
         _fa:=\"
            M.cntx_pop()
            \";
         M.grp_sel(_grp_w,TAP,.PANEL.INFO.TAB.CENNIKI.WER,,,,,4,_fb,_fa,,1,'maximized_with_title');

         ceny.actions(__win_acr,'Z','D:D')
      |? _ii=.PANEL.INFO.TAB.CENY.TABNR
::    - ceny
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.CENY.TABNR;
            {? ~ exec('upr_cs','ceny') || MDOST.actions('WER1','dpu:d',,1) ?};
            exec('mat_dost','material',0,1);
            _env.DISABLE
            \";
         _fa:=\"MDOST.actions('WER1')\";
         M.grp_sel(_grp_w,MDOST,'WER1','Ceny'@,,,,12,_fb,_fa,,,'maximized')
      |? _ii=.PANEL.INFO.TAB.M_IMG.TABNR
::    - zdjecia
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.M_IMG.TABNR;
            exec('zdjecia_materialu','abstore_fun',0);
            _env.DISABLE
            \";
            M.grp_sel(_grp_w,M_IMG,'WER','Zdjęcia'@,,,,12,_fb,,,,'maximized')
      |? _ii=.PANEL.INFO.TAB.M_LABEL.TABNR
::    - etykiety
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.M_LABEL.TABNR;
            exec('etykiety_materialu','abstore_fun',0);
            _env.DISABLE
            \";
            M.grp_sel(_grp_w,M_LABEL,'WER','Etykiety'@,,,,12,_fb,,,,'maximized')
      |? _ii=.PANEL.INFO.TAB.JM.TABNR
::    - jednostki
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.JM.TABNR;
            exec('przelicz_m','jm',0);
            _env.DISABLE
            \";
            M.grp_sel(_grp_w,MJM,'MAT','Jednostki'@,,,,12,_fb,,,,'maximized')
      |? _ii=.PANEL.INFO.TAB.TLUMACZENIA.TABNR
::    - tłumaczenia
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.TLUMACZENIA.TABNR;
            HELP.REFMAT:=M.ref();
            exec('m_transl','tlumaczenia',0);
            _env.DISABLE
            \";
         M.grp_sel(_grp_w,TRANSLAT,'WERM','Tłumaczenie'@,,,,12,_fb,,,,'maximized')
      |? _ii=.PANEL.INFO.TAB.STAWKI_VAT.TABNR
::    - stawki VAT
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.STAWKI_VAT.TABNR;
            exec('m_kh_sv','material',0);
            _env.DISABLE
            \";
         M.grp_sel(_grp_w,M_KH_SV,'WER_M','Stawki VAT kontrahenta'@,,,,12,_fb,,,,'maximized')
      |? _ii=.PANEL.INFO.TAB.STAWKI_VAT_HIST.TABNR
::    - historia stawek VAT
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.STAWKI_VAT_HIST.TABNR;
            exec('m_sv','material',0);
            _env.DISABLE
            \";
         _fa:=\"
            OKR.actions('WER_1','');
            VAR_DEL.delete('__od')
            \";
         M.grp_sel(_grp_w,M_SV,'WER','Historia stawek VAT'@,,,,12,_fb,_fa,,,'maximized')
      |? _ii=.PANEL.INFO.TAB.ZALACZNIKI.TABNR
::    - załączniki
      || exec('dokum_act_hide','dokum_zal','D',0,'material00000001');

         _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.ZALACZNIKI.TABNR;
            exec('sel_dok','dokum','M',1); exec('grmdok','dokum');
            _env.DISABLE
            \";
         M.grp_sel(_grp_w,DOKUM,'WER','Załączniki'@,\"exec('grmdok','dokum')\",,,12,_fb,,,1,'maximized');
         M.tab_splt(_grp_w,,'vertical','mat_zalaczniki');
         M.grp_sel(_grp_w,DOKTYP,'CECH',,,,,12,,,,,'maximized')
      |? _ii=.PANEL.INFO.TAB.PARBAD.TABNR
::    - parametry badania
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.PARBAD.TABNR;
            exec('BADMSEP_select','statexam',BADMSEH.ref(),0);
            _env.DISABLE
            \";
         M.grp_sel(_grp_w,BADMSEP,'WER','Parametry badania'@,,,,12,_fb,,,1,'maximized')
      |? _ii=.PANEL.INFO.TAB.MGRP.TABNR
::    - podgrupy materiałowe/usługowe
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.MGRP.TABNR;
            MGRP.index('MGR');
            MGRP.prefix(MGR.ref());
            _env.DISABLE
            \";
         M.grp_sel(_grp_w,MGRP,'WER','Podgrupy'@,,,,12,_fb,,,1,'maximized')
      |? _ii=.PANEL.INFO.TAB.USERREZ.TABNR
::    - użytkownicy dla rezerwacji
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.USERREZ.TABNR;
            USERREZ.index('MGR');
            USERREZ.prefix(MGR.ref());
            _env.DISABLE
            \";
         M.grp_sel(_grp_w,USERREZ,'MGRUS','Uprawienia dla rezerwacji'@,,,,12,_fb,,,1,'maximized')
      |? _ii=.PANEL.INFO.TAB.ANALIZY_BI_G.TABNR
::    Analizy BI - Grupy materiałów i usług
      || _ctr:=M.mk_ctr();
         M.win_ctr(_ctr);
         M.win_cctr(_ctr, 'ctr_id','@webframe');
        _fb:=\"
            exec('stat_add','st_common','A_BI','Grupy materiałów i usług');
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.ANALIZY_BI_G.TABNR;
            _env.DISABLE;
            exec('analizy_biq_ctrl_g','zws');
            ~~
         \";
         M.grp_ctr(_grp_w,M,_ctr,'analizy_g','Analizy BI'@,,,,,,_fb,,1,'maximized')
      |? _ii=.PANEL.INFO.TAB.ANALIZY_BI_M.TABNR
::    Analizy BI - Materiały
      || _ctr:=M.mk_ctr();
         M.win_ctr(_ctr);
         M.win_cctr(_ctr, 'ctr_id','@webframe');
         _fb:=\"
            exec('stat_add','st_common','A_BI','Materiały');
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.ANALIZY_BI_M.TABNR;
            _env.DISABLE;
            exec('analizy_biq_ctrl_m','zws');
            ~~
         \";
         M.grp_ctr(_grp_w,M,_ctr,'analizy_m','Analizy BI'@,,,,,,_fb,,1,'maximized')
      |? _ii=.PANEL.INFO.TAB.ANALIZY_BI_U.TABNR
::    ::    Analizy BI - Usługi
      ||
         _ctr:=M.mk_ctr();
         M.win_ctr(_ctr);
         M.win_cctr(_ctr, 'ctr_id','@webframe');
         _fb:=\"
            exec('stat_add','st_common','A_BI','Usługi');
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.ANALIZY_BI_U.TABNR;
            _env.DISABLE;
            exec('analizy_biq_ctrl_u','zws');
            ~~
         \";
         M.grp_ctr(_grp_w,M,_ctr,'analizy_u','Analizy BI'@,,,,,,_fb,,1,'maximized')
      |? _ii=.PANEL.INFO.TAB.DANE_USLUGI.TABNR
      || _fb:=\"
            _env:=params_get().env;
            _env.PANEL.INFO.CUR_TAB:=_env.PANEL.INFO.TAB.DANE_USLUGI.TABNR;
            _env.DISABLE;
            \";
         M.grp_edit(_grp_w,,'INFOU','Dane usługi'@,,_fb,,, 'maximized')
      ?}
   !};
   M.win_sel(.WIN_MAIN)
";

_env.set_tab:="
   _env:=_a;
   _showTab:=0;
   {! _ii:=1..obj_len(_env.PANEL.INFO.TAB)
   |! {? _env.PANEL.INFO.TAB[_ii].HIDE
      || {? _env.PANEL.INFO.TAB[_ii].TABNR
         || tab_hide(_env.PANEL.INFO.TAB[_ii].TABNR,,_env.PANEL.INFO.NAME);
            {? _env.PANEL.INFO.CUR_TAB=_env.PANEL.INFO.TAB[_ii].TABNR
            || _env.PANEL.INFO.CUR_TAB:=0
            ?}
         ?}
      |? _showTab=0
      || _showTab:=_env.PANEL.INFO.TAB[_ii].TABNR
      ?}
   !};
   {? _env.PANEL.INFO.CUR_TAB=0
   || _env.PANEL.INFO.CUR_TAB:=_showTab
   ?};
   tab_sel(_env.PANEL.INFO.CUR_TAB,_env.PANEL.INFO.NAME)
";

_env


\slo_mat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Główna formuła obszaru SLO_MAT - Materiały
::----------------------------------------------------------------------------------------------------------------------
:: Funkcja wołająca kartotekę materiałową w wersji 12.41
::exec('slo_mat','defin');
_env:=exec('slo_mat_env','zws');

{? _env.initObszar()
||
   exec('myDPRINT','object');
   M.actions('NL_WER','WN(ZSRKC)');
   M.actions('NL_WERU','W');

   exec('m_icon','tech_common');

   BADMSEH.actions('WERG','R');
   BADMSEH.actions('WERM','R');
   params_set('env',_env,'env_mater',exec('env_mater','tech_mater'),'env_oper',exec('env_oper','tech_oper'));
   _env.winMain();

   AreaTitle.setTabWin(M,~~);
   AreaTitle.setTitle();

:: Ustalenie treści linku
   _params:=params_get();
   {? type_of(_params)>0 & var_pres('LINK',_params)
   || _link:=_params.LINK
   || _link:=''
   ?};

   BADMSEH.actions('WERG','');
   BADMSEH.actions('WERM','');
   ZAKR.MATU:='A';
   POMOC.M:=null();

:: Obsługa linku
   {? _link<>''
   || M.index('ARODZ');
      M.prefix();
      {? M.seek(_link)
      || POMOC.M:=M.ref();
         {? M.RODZ='U'
         || POMOC.M_ZAKR_U:=M.A;
            M.select(,1,5,,'USL',,1)
         || POMOC.M_ZAKR_T:=M.A;
            M.select(,1,5,,'MAT',,1)
         ?}
      || FUN.info('Nie odnaleziono towaru / usługi: %1'@[exec('record','#to_string',_link)])
      ?}
   || M.select()
   ?};

   M.actions('NL_WER','');
   M.actions('NL_WERU','')

?}


\bl_data1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: podpowiadanie daty
::  OLD: \bl_data1/wydruki.fml
::----------------------------------------------------------------------------------------------------------------------
date(ST.AR,ST.AM,1)


\bl_data2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: podpowiadanie daty
::  OLD: \bl_data2/wydruki.fml
::----------------------------------------------------------------------------------------------------------------------
date(ST.AR,ST.AM,0)


\pood_da1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: po redakcji daty
::  OLD: \pood_da1/wydruki.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld<>date(0,0,0)
|| {? WYDRUKIL.DO_DATY1=date(0,0,0)
   || WYDRUKIL.DO_DATY1:=WYDRUKIL.OD_DATY1; 1
   || 1
   ?}
|| 1
?}


\pood_da2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: po redakcji daty
::  OLD: \pood_da2/wydruki.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld<>date(0,0,0)
|| {? WYDRUKIL.DO_DATY2=date(0,0,0)
   || WYDRUKIL.DO_DATY2:=WYDRUKIL.OD_DATY2; 1
   || 1
   ?}
|| 1
?}


\hdrsts
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: nazwa okienka redakcji dla tabeli STS
::----------------------------------------------------------------------------------------------------------------------
STS.win_edit('RED');
STS.hdr_edit();
STS.hdr_edit({? BEER.SZ='S' || ' sprzedaży'@ || ' zakupu'@ ?});
1


\po_sts_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: po dopisaniu do tabeli STS
::----------------------------------------------------------------------------------------------------------------------
exec('usr_upr_uzupełnij_pelne','users_upraw','STS');
exec('usr_upr_uzupełnij_pelne','users_upraw','STZ');
~~


\www_parses_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AB [19.42]
:: OPIS: Parametry pracy ustawiane automatycznie na podstawie daty systemowej w WEBTERM
::   WE: _a - formuła po redakcji poprawnej parametrów
::       _b - plik po redakcji poprawnej parametrów
::       _c - 1 parametr wywołania formuły
::       _d - 2 parametr wywołania formuły
::       _e - 1/0 - czy zamykac okienko PARSES
::       _f - 1 parametr wywołania formuły
::       _g - 2 parametr wywołania formuły
::----------------------------------------------------------------------------------------------------------------------
{? _ & type_of(_a)=type_of('') & type_of(_b)=type_of('')
|| web_params_set(exec('obj_ntab_set','#array',web_params_get(),
                  'form_aed',_a,
                  'file_aed',_b,
                  'par_for1',_c,
                  'par_for2',_d,
                  'parclose',_e
                  ))
|| web_params_set(exec('obj_ntab_set','#array',web_params_get(),'parclose',1))
?};
exec('env_wt','b_proces','parses');
exec('env_wt_core','#web_srv');
_nowdate:=date();
OKRO.cntx_psh();
OKRO.index('NAZ');
OKRO.prefix(REF.FIRMA,);
{? OKRO.first()
|| {!|? {? (OKRO.ROK = (_nowdate~1)) & (_nowdate >= OKRO.DATA_OD & _nowdate <= OKRO.DATA_DO)
        || PARSES.OKRO:=OKRO.ref();
           PARSES.ROK:=PARSES.OKRO().ROK;
           OKRESY.PAR_ROK:=$PARSES.ROK;
           {? _nowdate~2 = 1 || OKRESY.PAR_OKR:='styczeń' |? _nowdate~2 = 2 || OKRESY.PAR_OKR:='luty'
           |? _nowdate~2 = 3 || OKRESY.PAR_OKR:='marzec' |? _nowdate~2 = 4 || OKRESY.PAR_OKR:='kwiecień'
           |? _nowdate~2 = 5 || OKRESY.PAR_OKR:='maj' |? _nowdate~2 = 6 || OKRESY.PAR_OKR:='czerwiec'
           |? _nowdate~2 = 7 || OKRESY.PAR_OKR:='lipiec' |? _nowdate~2 = 8 || OKRESY.PAR_OKR:='sierpień'
           |? _nowdate~2 = 9 || OKRESY.PAR_OKR:='wrzesień' |? _nowdate~2 = 10 || OKRESY.PAR_OKR:='październik'
           |? _nowdate~2 = 11 || OKRESY.PAR_OKR:='listopad' |? _nowdate~2 = 12 || OKRESY.PAR_OKR:='grudzień'
           ?};
           ROK_F.cntx_psh();
           ROK_F.index('NAZWA');
           ROK_F.prefix(REF.FIRMA,OKRESY.PAR_ROK);
           {? ROK_F.first()
           || OKRESY.PAR_ROK:=ROK_F.NAZ;
              PARSES.ROK_F:=ROK_F.ref()
           ?};
           ROK_F.cntx_pop()
        ?};
    OKRO.next()
    !}
?};
OKRO.cntx_pop();
exec('spr_parses_www','zws');
_put:=__PARSES.putPARSES();
{? _f = 'D'
|| _bb:='D'
|| _bb:='W'
?};
_aa:='W';
OPERATOR.DEPT:={? PARSES.ODD_ZAK='W' || null || PARSES.ODD ?};
USRCONST.STANKAS:=exec('FindInSet','#table','KUSERUPR','KU_ST',PARSES.STANKAS,OPERATOR.USER);
exec('ustaw_zmienne','parses',__PARSES,PARSES.OKRO_R<>'W');
exec('maski_w','obiegi',2);
exec('AreaTitle','#object');
{? _bb='D'
|| AreaTitle.setArea('OBE_FDL')
?};
_jedn:={? OPERATOR.DEPT
       || ', jednostka księgowa: '@+OPERATOR.DEPT().OD
       || ', wszystkie jednostki księgowe'@
       ?};
web_title(AreaTitle.getTitle()+' rok: '@+SSTALE.AR().NAZ+_jedn);
exec('form_after_auto_parses','zws', _a, _b)


\www_parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Parametry pracy w WEBTERM
::       _a - formuła po redakcji poprawnej parametrów (opcja)
::       _b - plik po redakcji poprawnej parametrów (opcja)
::       _c - 1 parametr wywołania formuły
::       _d - 2 parametr wywołania formuły
::       _e - 1/0 - czy zamykac okienko PARSES
::----------------------------------------------------------------------------------------------------------------------
{? _ & type_of(_a)=type_of('') & type_of(_b)=type_of('')
|| web_params_set(exec('obj_ntab_set','#array',web_params_get(),
                  'form_aed',_a,
                  'file_aed',_b,
                  'par_for1',_c,
                  'par_for2',_d,
                  'parclose',_e
                  ))
|| web_params_set(exec('obj_ntab_set','#array',web_params_get(),'parclose',1))
?};
exec('env_wt','b_proces','parses');
{? ~(exec('usr_fjks_any','b_perm') | exec('auth_domain','#b__box','OBG,OBE,CTR,FKS','B,W'))
|| FUN.info('Brak parametrów pracy do edycji.'@)
?};
_enable:=(PARSES.OKRO_R='W');
PARSES.web_efld_init('WEB01',,'mark='+$_enable+', enable='+$_enable,OKRESY,'PAR_OKR');
_enable:=~_enable;
{? PARSES.OKRO_R='W'
|| PARSES.web_efld_init('WEB01',,'mark=0, enable=1, editable=0',OKRESY,'PAR_ROK')
|| PARSES.web_efld_init('WEB01',,'mark=1, enable=1, editable=1',OKRESY,'PAR_ROK')
?};
{? Perm.hasFull('FJKS')
|| PARSES.web_efld_init('WEB01',,'mark=0, enable=1, editable=1',PARSES,'ODD_ZAK');
   PARSES.ODD_ZAK:='W'
|| {? exec('usr_fjks_any','b_perm')
   || PARSES.web_efld_init('WEB01',,'mark=0, enable=1, editable=0',PARSES,'ODD_ZAK');
      PARSES.ODD_ZAK:='J'
   || PARSES.web_efld_init('WEB01',,'mark=0, enable=0, editable=0',PARSES,'ODD_ZAK');
      PARSES.ODD_ZAK:='';
      PARSES.ODD:=null
   ?}
?};

{? PARSES.ODD_ZAK='J'
|| PARSES.web_efld_init('WEB01',,'mark=1, enable=1, editable=1',PARSES,'ODD')
|| PARSES.web_efld_init('WEB01',,'mark=0, enable=0, editable=0',PARSES,'ODD')
?};

PARSES.web_edit('WEB01',,,,"{? _a='OK'
                            || exec('env_wt_core','#web_srv');
                               _pole:=exec('spr_parses_www','zws');
                               {? type_of(_pole)=type_of('') & _pole<>''
                               || web_top_update(0,,,_pole)
                               || _par:=web_params_get();
                                  {? type_of(_par)>100 & var_pres('parclose',_par)=type_of(0)
                                  || _close:=_par.parclose
                                  || _close:=1
                                  ?};
                                  {? _close || PARSES.web_eclose() ?};
                                  _put:=__PARSES.putPARSES();
                                  exec('form_after_parses','zws')
                               ?}
                            || PARSES.web_eclose()
                            ?}")


\spr_parses_www
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Sprawdzanie parametrów PARSES - WWW
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? PARSES.OKRO=null()
|| FUN.info('Nie wybrano okresu lub roku pracy.'@); _zwrot:='OKRO_R'
?};
_zwrot


\form_after_parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wykonanie opcjonalnej formuły po redakcji parametrów pracy (PARSES)
::----------------------------------------------------------------------------------------------------------------------
_par:=web_params_get();
{? type_of(_par)>100 & var_pres('form_aed',_par)=type_of('') & var_pres('file_aed',_par)=type_of('')
|| {? _par.form_aed<>'' & _par.file_aed<>''
   || exec(_par.form_aed,_par.file_aed,_par.par_for1,_par.par_for2)
   ?}
?}


\form_after_auto_parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AB [19.42]
:: OPIS: Wykonanie opcjonalnej formuły po automatycznym ustawieniu parametrów pracy (PARSES)
::   WE: _a - formuła po redakcji poprawnej parametrów
::       _b - plik po redakcji poprawnej parametrów
::----------------------------------------------------------------------------------------------------------------------
exec(_a,_b)


\www_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wyświetla informacje o sesji.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Formuła nie potrzebuje środowiska - nic nie ustawiamy.
_sz:=30;
_wd:=web_define();
web_def_fld(_wd,'AUSER',app_info('app_user'),'Użytkownik aplikacji'@,,,_sz);
web_def_fld(_wd,'WUSER',app_info('web_user'),'Użytkownik webTerma'@,,,_sz);
web_def_fld(_wd,'TCID',app_info('web_tcid'),'Identyfikator sesji Tomcat-a'@,'Tmocat',,_sz);
web_def_fld(_wd,'MBID',app_info('web_mbid'),'Identyfikator sesji MacroBASE'@,'Połączenie'@,,_sz);
web_def_fld(_wd,'SESID',app_info('web_sesid'),'Identyfikator sesji'@,'Login + hasło'@,,_sz);
web_def_fld(_wd,'TABID',app_info('web_tabid'),'Identyfikator zakładki'@,'Zakładka'@,,_sz);
web_def_fld(_wd,'LANG',app_info('web_lang'),'Język sesji'@,,_sz);
web_def_disp(_wd,"web_def_close()",'Informacje o sesji'@);
''


\dokuwiki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Obsługa parametru z adresem serwera dokumentacyjnego
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,XINFO,'DOKUWIKI','DOKU_INT');
XINFO.win_edit('DOKUWIKI');
{? XINFO.edit()
|| exec('zapisz','#stalesys',1,XINFO,'DOKUWIKI','DOKU_INT')
?}


\zws_edi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Obszar EDI i mechanizm importów
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,FINFO);
_czysc:="
   VAR_DEL.delete('__ndxedii1','__selimp','__winimp','__gridef','__griimp','__wybopc','__nazsys','__nazxpe','__weredii',
   '__ndxedii','__weredji','__selimp_btnimp','__w_patt','__w_edit','__win_edit_i','__d_patt','__d_edit','__win_edit_d',
   '__bot_tab','__tab_num','__tab_id')
   ";
_czysc();

:: definicja okna komunikatów edi
_win_grp:=ISTDEF.grp_make(,,'komunikaty_edi',,,"exec('exit','zws',_a)");
_far:="
   ISTDEF.btn_sopt('EDI','odczytaj',{? ISTDEF.R='T' || 'state=normal' || 'state=grayed' ?});
   ISTDEF.btn_sopt('EDI','zapisz',{? ISTDEF.W='T' || 'state=normal' || 'state=grayed' ?});
   _grayed:={? ISTDEF.R='T' || '' || 'O' ?}+{? ISTDEF.W='T' || '' || 'Z' ?};
   ISTDEF.actions_grayed('EDI',_grayed);
   grp_disp(EDI_I,'WER',,1)";
_fb:="
:: dolne zakładki
   {? var_press('__bot_tab')=type_of(1)
   ||
      tab_show(0,'bottom');
      {? __bot_tab>0
      ||
         _int:=1;
         {!|?
            tab_hide(_int,,'bottom');
            _int+=1;
            _int<=__bot_tab
         !}
      ?}
   ?};
   {? var_press('__d_patt')
   ||
      EDI_D.win_patt(__d_patt);
      EDI_D.win_edit(__d_edit);
      EDI_I.win_patt(__w_patt);
      EDI_I.win_edit(__w_edit)
   ?};

   ISTDEF.index('ACTION');
   ISTDEF.prefix();
   ISTDEF.f_set('K,N',,'ACTION='':_a'' and IST_ISTK='':_b'' and (FIRMA='''' or FIRMA='':_c'')',
      'T','E',__Firma);
   ISTDEF.btn_sopt('EDI','odczytaj','state=grayed');
   ISTDEF.btn_sopt('EDI','zapisz','state=grayed')";
ISTDEF.grp_sel(_win_grp,,'EDI','Komunikaty EDI'@,_far,,,,_fb,,,,'maximized','komunikaty_edi');

::dodanie zakładki z mechanizmem importów
__tab_num:=0;
exec('mech_imp','edi_imp',1,'',_win_grp);

__ndxedii1:=EDI_I.ndx_tmp('',0,'ISTDEF',,0,'D',,1,'T',,1,'KH',,1);
_aktokr:=(date()~1);
_il:=0;
_Maski:=EDI_I.names();
_curMaska:='edi_i_'+($(date()~1)+2);
_isCurMaska:=0;
:: pominięcie masek nie związanych z rokiem
_loop:=_Maski.first();
{!
|? _loop
|!
   _loop:=
      {? exec('allDigit','#valid',_Maski.NAME+2,1)
      || _isCurMaska:=_isCurMaska | _Maski.NAME=_curMaska;
         _Maski.next()
      || _Maski.del(,1)=2
      ?}
!};
:: dopisanie bieżącego roku jeśli nie ma go wśród istniejących masek
{? ~_isCurMaska
|| _Maski.blank();
   _Maski.NAME:=_curMaska;
   _Maski.add()
?};
:: zakładki dziennika
_loop:=_Maski.last();
{!
|? _loop
|!
   _rok:=2000+#(_Maski.NAME+2);
   _il+=1;
   _form:=$("
      _bie_r:="+$_rok+";
      _ref:=ISTDEF.ref();
      EDI_I.use('edi_i'+'_'+($_bie_r+2));
      EDI_I.index(__ndxedii1);
      EDI_I.prefix(ISTDEF.ref());
      EDI_I.first()");
   _ae:="__tab_id:=cur_win_id(1)";
   __tab_num+=1;
   ISTDEF.grp_sel(_win_grp,EDI_I,'WER',$_rok,,0,14,12,_form,_ae,,,'maximized_with_title','edi'+$__tab_num);
   _loop:=_Maski.prev() & _il<16
!};
:: select
ISTDEF.win_sel(_win_grp);
AreaTitle.setTabWin(ISTDEF,_win_grp);
AreaTitle.setTitle();
ISTDEF.select();

_czysc()


\mech_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Przełączenie na mechanizm importów
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
sel_exit()


\edi_read
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Obszar EDI i mechanizm importów - Odczyt
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='ZWS_EDI_UNIW';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYP',exec('edi_stale_txt','#b_port','R'));
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ISTDEF',ISTDEF.ref());

exec('mp_run','#b__box',_params)


\edi_write
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Obszar EDI i mechanizm importów - Zapis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='ZWS_EDI_UNIW';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYP',exec('edi_stale_txt','#b_port','W'));
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ISTDEF',ISTDEF.ref());

exec('mp_run','#b__box',_params)


\fld_prec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: ustawia precyzje na polach
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KH_DOD.fld_fml('RAB','EDIT_FORMAT',"'in_prec=2'");
KH_DOD.fld_fml('RAB','DISPLAY_FORMAT',"'out_prec=2'");
KH_DOD.fld_fml('LK','EDIT_FORMAT',"'in_prec=2'");
KH_DOD.fld_fml('LK','DISPLAY_FORMAT',"'out_prec=2'")


\translat_run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [17.00]
:: OPIS: Uruchamia mechanizmy translacji
::----------------------------------------------------------------------------------------------------------------------
exec('dekl','classlist');

vf:=0;
popup(0,'Wybierz opcję tłumaczenia.'@,
      'Sprawdzanie składni'@,,"vf:=4",
      '---',,,
      'Tłumaczenia merit'@,,"vf:=1",
      'Tłumaczenia procesów'@,,"vf:=2",
      'Tłumaczenia parametryzacji'@,,"vf:=3",
      'Tłumaczenia czynności'@,,"vf:=5"
);
_wyb:=vf; &vf;

:: Tłumaczenia Merit
{? _wyb=1
|| exec('gen_rep_titles','#b_report');
   exec(,'__aplang')

:: Tłumaczenia procesów
|? _wyb=2
|| exec('translat_proces','zws')

:: Tłumaczenia parametryzacji
|? _wyb=3
|| exec('translat_param','zws')

:: Sprawdzanie składni
|? _wyb=4
|| _t:=form_chk();
   {? var_pres('_t')>100
   || _t.win_sel(_t.mk_sel('Błędy składniowe'@,'P',1,'syntaxerrors',,,,,'U'));
      _t.select()
   ?}

:: Tłumaczenia czynności
|? _wyb=5
|| exec('translat_action','zws')
?};
''


\translat_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [21.37]
:: OPIS: Tworzenie i edycja tekstów transalacji czynności
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__Procla');

__Procla:=exec(, '__fmlang','action.lang',,'build,autosave,singlebackup');
B_ACTION.index('UNIK');
B_ACTION.prefix();
{? B_ACTION.first()
|| {! |?
      __Procla.t(B_ACTION.NAME);
      B_ACTION.next()
   !}
?};
__Procla.runTranslator()


\translat_proces
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [17.00]
:: OPIS: Tworzenie i edycja tekstów transalacji procesów
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__Procla');

__Procla:=exec(, '__fmlang','proces.lang',,'build,autosave,singlebackup');
B_PROC.index('SYM');
B_PROC.prefix('N');
{? B_PROC.first()
||
   {!
   |?
::    analiza procesow
      B_PREL.index('PROCSTAR');
      B_PREL.prefix(B_PROC.ref,'T');
      _loop1:=B_PREL.first();
      {!
      |? _loop1
      |!
::       Sprawdzenie czy zdarzenie startowe nieokreślone
         {? exec('is_event','#b_event',B_PREL.B_ELE,exec('type_start','#b_event'),exec('kind_none','#b_event'))>0
         ||
            __Procla.t({? B_PREL.SYMBOL<>'' || gsub(B_PREL.SYMBOL,'\n',' ') || B_PREL.B_PROC().NAME ?});
            __Procla.t(B_PREL.B_PROC().SYMBOL)
         ?};
         _loop1:=B_PREL.next()
      !};
      B_PROC.next()
   !}
?};
__Procla.runTranslator()


\translat_param
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Tworzenie i edycja tekstów transalacji parametryzacji.
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__Procla');

__Procla:=exec(,'__fmlang','param.lang',,'build,autosave,singlebackup');

: pobierz nazwy do tłumaczenia
_TXT:=sql('
   select distinct
      FP_STR.NAZWA as NAME
      from FP_STR
   union
   select
      FP_DEF.NAZWA as NAME
      from FP_DEF
   order by 1'
);

: uzupełnij translator
_loop:=_TXT.first();
{!
|? _loop
|! __Procla.t(_TXT.NAME);
   _loop:=_TXT.next()
!};

: uruchom translator
__Procla.runTranslator()


\backup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła tworząca kopię danych.
::   WE: [_a] [STRING] - Nazwa pliku z listą systemów (*.itg) [domyślnie: systems.itg]
::       [_b] [STRING] - Ścieżka do pliku z kopią danych (*.zip) [domyślnie: merit_rrrrmmdd_ggmmss.zip]
::       [_c] [STRING] - Ścieżka do katalogu konfiguracyjnego serwera. Parametr niezbędny pod Linuxem, jeżeli serwer
::                       nie używa domyślnej wartości parametru "synchr_num".
::       [_d] [NUMBER] - Czy w kopii umieszczać również pliki z katalogów wskazanych w deklaracji ścieżek [0*/1].
::   WY: Tablica nazwana z polami:
::       STATUS   - Wynik operacji: 0 - porażka / 1 - sukces.
::       TEXT     - Przyczyna porażki, lub nazwa utworzonej kopii.
::----------------------------------------------------------------------------------------------------------------------
_itg:={? var_pres('_a')=type_of('') || _a || 'systems.itg' ?};
_zip:=
   {? var_pres('_b')=type_of('') & _b<>''
   || _b
   || _pat:=obj_new(3);
      _rep:=obj_new(3);
      _pat[1]:='/'; _rep[1]:='';
      _pat[2]:=' '; _rep[2]:='_';
      _pat[3]:=':'; _rep[3]:='';
      '../../backups/merit_'+gsub(tm_form(tm_stamp()),_pat,_rep)+'.zip'
   ?};
_cfg:={? var_pres('_c')=type_of('') || _c || pth_dir('macro.cfg') ?};
_full:={? var_pres('_d')=type_of(0) & _d || '-full' || '' ?};

_fret:=
   "  _ret:=obj_new('STATUS','TEXT');
      _ret.STATUS:=_a;
      _ret.TEXT:=_b;
      _ret
   ";

_sep:=exec('sep','#file',2);
_itg:=pth_dir(_itg)+_sep+_itg;
{? ~fexists(_itg,0)
|| return(_fret(0,'Brak dostępu do pliku %1.'@[_itg]))
?};

_cmd:=
   {? sys_name(1)='U_LINUX'
   || '%1/MacroADMIN %2 -backup %3 %4 %5'[exe_dir(1),{? _cfg='' || '' || '-p'+_cfg ?},_full,_itg,_zip]
   || pth_dir('startx.exe')+_sep+'startx.exe /NOUI /B /RETURNERROR "'+
      '\"%1madmin.exe\" -backup %2 \"%3\" \"%4\"'[exe_dir(1)+_sep,_full,_itg,_zip]+
      '"'
   ?};
_err:=system(_cmd,1);
{? _err=0
|| _fret(1,_zip)
::|| _fret(0,'Wystąpił błąd o kodzie %1.'@[$_err])
||
:: Jak błąd to sprawdza czy długość komendy nie jest za duża i ewentualnie ucina ją
   {? (_zn:=+exec('val2fml','#convert',_cmd,type_of(''),''))>255
   || _cmd:=_cmd-(_zn-255+3)+'...';
      _fret(0,_cmd)
   || _fret(0,_cmd)
   ?}
?}


\zws_upg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Główna formuła obszaru roboczego ZWS_UPG - Zadania potransferowe
::----------------------------------------------------------------------------------------------------------------------
_task:=exec('chk_role','#b__box',OPERATOR.USER,'ZWS_UPG_TASK');
_super:=sec_superuser();
:: tymczasowo do aktualizacji
UPG_REAL.prefix();
UPG_REAL.for_each("_put:=0;
                   {? UPG_REAL.SYMBOL='' | UPG_REAL.SYSTEM<>UPG_REAL.UPG_TASK().SYSTEM
                   || UPG_REAL.SYMBOL:=UPG_REAL.UPG_TASK().SYMBOL;
                      UPG_REAL.SYSTEM:=UPG_REAL.UPG_TASK().SYSTEM;
                      _put:=1
                   ?};
                   {? UPG_REAL.INFRES=''
                   || _inf:='N';
                      {? UPG_REAL.ERROR=1  || _inf:='E'
                      |? UPG_REAL.ERROR=2  || _inf:='W'
                      |? UPG_REAL.STAN='N' || _inf:='N'
                      || UPG_MSG.cntx_psh();
                         UPG_MSG.index('UPG_REAL');
                         UPG_MSG.prefix(UPG_REAL.ref());
                         _inf:={? UPG_MSG.first() & (10+UPG_MSG.OPIS)='Programowe' || 'P' || 'T' ?};
                         UPG_MSG.cntx_pop()
                      ?};
                      UPG_REAL.INFRES:=_inf;
                      _put:=1
                   ?};
                   {? _put || UPG_REAL.put() ?}",0);
UPG_TASK.prefix();
UPG_TASK.for_each("_put:=0;
                   {? UPG_TASK.MANEND=''
                   || UPG_TASK.MANEND:='N';
                      _put:=1
                   ?};
                   {? UPG_TASK.INFRES=''
                   || _inf:='N';
                      UPG_REAL.cntx_psh();
                      UPG_REAL.index('TASK');
                      UPG_REAL.prefix(UPG_TASK.ref());
                      {? UPG_REAL.first()
                      || {? UPG_REAL.find_tab('first','INFRES',,'=','E') || _inf:='E'
                         |? UPG_REAL.find_tab('first','INFRES',,'=','W') || _inf:='W'
                         |? UPG_REAL.find_tab('first','INFRES',,'=','T') || _inf:='T'
                         |? UPG_REAL.find_tab('first','INFRES',,'=','P') || _inf:='P'
                         ?}
                      ?};
                      UPG_REAL.cntx_pop();
                      UPG_TASK.INFRES:=_inf;
                      _put:=1
                   ?};
                   {? _put || UPG_TASK.put() ?}",0);

{? ~_super & ~_task
|| {? ~_super
   || FUN.info('Operator nie ma uprawnień użytkownika specjalnego (Administratora).\n'
               'Widok zadań potransferowych niedostępny.'@)
   || FUN.info('Operator nie ma uprawnień do czynności ZWS_UPG_TASK - Zadania potransferowe.\n'
               'Widok zadań potransferowych niedostępny.'@)
   ?}
|| VAR_DEL.delete('__clust','__grpid','__clndx','__filtrver');
   __clust:=AppList.all.tab;
   __grpid:=app_info('cluster_group');
   __clndx:=AppList.all.ndx_par1_grp;

   exec('refresh','#upgrade');

:: ewentualne odtworzenie kolorów jeżeli ich brak dotyczy wyłącznie transferów z wersji 12.41 i 17.00
   {? (';12.41;17.00'*(5+UPG_VER.VERSION))>1 || exec('formula_formula','transfer'); exec('initColUpg','zws') ?};

   FILTER.VERSION:='-ALL-';
   __filtrver:=FILTER.VERSION;
   FILTER.AUTOTASK:=1;
   FILTER.FIRMA:=REF.FIRMA().SYMBOL;
   FILTER.TM_STAMP:=tm_stamp();
   FILTER.REFRESH:=1;
   FILTER.ILZAD:=0;
   FILTER.FIRMS:=exec('ctrlFirms','zws');

   _formula:="
      _tab:=exec('elements_selektor_table','zws');
      exec('load','#desktop','selektor','zws_upg.dsk',,,,,,0);
      exec('set_value','#desktop','','selektor','firma@panel',FILTER.FIRMA);
      exec('set_value','#desktop','','selektor','tekst@panel',exec('tekst','zws'),1);
      _error:=exec('isError','#upgrade');
      {? _error>0
      || exec('set_foreground','#desktop','','selektor','tekst@panel','255:0:0')
      || exec('set_foreground','#desktop','','selektor','tekst@panel','51:175:74')
      ?};

      {? FILTER.AUTOTASK=2
      || exec('upgmprefix','zws',__filtrver,1);
         grp_disp(UPG_REAL,'WER',1,1);
         win_activate('ALL_REAL')
      || exec('upg_prefix','zws',__filtrver,1);
         grp_disp(UPG_TASK,'WER',1,1);
         win_activate('WER_REAL')
      ?};
      1
   ";
   _wnd:='';
   {? exec('runtime_r10','#system')>0
   || _wnd:=UPG_TASK.grp_make('Aktualizacje systemu'@,_formula,'#zws_upgrade',,,,,'maximized','jterm')
   || _wnd:=UPG_TASK.grp_make('Aktualizacje systemu'@,_formula,'#zws_upgrade',,,,,'maximized')
   ?};
   exec('create','#desktop',UPG_TASK,'selektor',_wnd,2,70,,);
   UPG_TASK.grp_splt(_wnd,'panel0','horizontal','naglowki');
:: Zadania automatyczne
   UPG_TASK.grp_sel(_wnd,UPG_TASK,'WER','Zadania automatyczne'@,"exec('dispUpg_real','zws',1)",,,10,"exec('dispUpg_task','zws',1)",,0,1,'maximized_with_title','WER_TASK',1);
   UPG_TASK.tab_splt(_wnd,,'vertical','pozycje');
   UPG_TASK.grp_sel(_wnd,UPG_REAL,'AUT',,"exec('dispUpg_msg','zws')",,,18,,,,,'maximized_with_title','WER_REAL',1);
   UPG_TASK.tab_splt(_wnd,'pozycje','horizontal','error');
   UPG_TASK.grp_sel(_wnd,UPG_MSG,'WER',,,,,,"~~",,,,'maximized_with_title','WER_MSG',1);
:: Wszystkie manualne
   UPG_TASK.grp_sel(_wnd,UPG_REAL,'WER','Manualne dla firmy'@,"exec('dispUpg_msg','zws')",,,12,"exec('dispAll_real','zws')",,,,'maximized_with_title','ALL_REAL',1);
   UPG_TASK.tab_splt(_wnd,,'horizontal','error3');
   UPG_TASK.grp_sel(_wnd,UPG_MSG,'ALL',,,,,,"~~",,,,'maximized_with_title','ALL_MSG',1);
:: Aktualizacje
::   UPG_TASK.grp_sel(_wnd,UPG_LOG,'WER','Aktualizacje'@,"exec('dispUpg_log','zws')",,,20,,,,,'maximized_with_title','WER_LOG',1);
:: Zadania manualne
   UPG_TASK.grp_sel(_wnd,UPG_TASK,'MAN','Zadania manualne'@,"exec('dispUpg_real','zws',0)",,,10,"exec('dispUpg_task','zws',0)",,0,0,'maximized_with_title','WER_MAN',1);
   UPG_TASK.tab_splt(_wnd,,'vertical','pozycje2');
   UPG_TASK.grp_sel(_wnd,UPG_REAL,'MAN',,"exec('dispUpg_msg','zws')",,,18,,,,,'maximized_with_title','MAN_REAL',1);
   UPG_TASK.tab_splt(_wnd,'pozycje2','horizontal','error2');
   UPG_TASK.grp_sel(_wnd,UPG_MSG,'WER',,,,,,"~~",,,,'maximized_with_title','MAN_MSG',1);

   UPG_TASK.win_sel(_wnd);

   _zmstan:=exec('get','#params',4100,2,OPERATOR.USER)='T';
   {? ~_zmstan
   || UPG_TASK.actions('WER','Z');
      UPG_TASK.actions('MAN','Z')
   ?};
   UPG_TASK.win_fml('WER',,'B_DOMAIN','SYMBOL','ICON_BEFORE',exec('upg_dom_ib','zws'));
   UPG_TASK.win_fml('MAN',,'B_DOMAIN','SYMBOL','ICON_BEFORE',exec('upg_dom_ib','zws'));
   UPG_REAL.win_fml('AUT',,'SYMBOL',,'ICON_BEFORE',exec('upg_firm_ib','zws'));
   UPG_REAL.win_fml('MAN',,'SYMBOL',,'ICON_BEFORE',exec('upg_firm_ib','zws'));
   UPG_TASK.win_fml('WER',,'SYMBOL',,'ICON_BEFORE',exec('upg_required_t_ib','zws'));
   UPG_TASK.win_fml('MAN',,'SYMBOL',,'ICON_BEFORE',exec('upg_required_t_ib','zws'));
   UPG_REAL.win_fml('WER',,'SYMBOL',,'ICON_BEFORE',exec('upg_required_r_ib','zws'));
   UPG_TASK.win_fml('WER',,'UPG_HEAD','VERSION','ICON_BEFORE',exec('upg_version_t_ib','zws'));
   UPG_TASK.win_fml('MAN',,'UPG_HEAD','VERSION','ICON_BEFORE',exec('upg_version_t_ib','zws'));
   UPG_REAL.win_fml('WER',,'SYSTEM',,'ICON_BEFORE',exec('upg_version_r_ib','zws'));
   UPG_TASK.win_fml('WER',,'INFRES',,'ICON_BEFORE',exec('infres_task','zws'));
   UPG_TASK.win_fml('MAN',,'INFRES',,'ICON_BEFORE',exec('infres_task','zws'));
   UPG_REAL.win_fml('AUT',,'INFRES',,'ICON_BEFORE',exec('infres_real','zws'));
   UPG_REAL.win_fml('MAN',,'INFRES',,'ICON_BEFORE',exec('infres_real','zws'));
   UPG_REAL.win_fml('WER',,'INFRES',,'ICON_BEFORE',exec('infres_real','zws'));

   _refresh:="
      exec('set_value','#desktop','','selektor','tekst@panel',exec('tekst','zws'),1);
      _error:=exec('isError','#upgrade');
      {? _error>0
      || exec('set_foreground','#desktop','','selektor','tekst@panel','255:0:0')
      || exec('set_foreground','#desktop','','selektor','tekst@panel','51:175:74')
      ?};
      _firms:=exec('ctrlFirms','zws');
      {? FILTER.FIRMS<>_firms
      || FILTER.FIRMS:=_firms;
         _data_id:=$SYSLOG.tm_stamp();
         exec('fetch_data','#desktop',_data_id,'selektor',exec('dsk_get_firma','zws'),'KOD,NAZWA','');
         exec('grab_data','#desktop','','selektor','firma@panel',_data_id)
      ?};
      ~~
   ";
   UPG_TASK.timer('sel',_wnd,1,_refresh);

   _title:='Zadania potransferowe'@;
   title('%1: %2'[exec('nazwa','#system'),_title],'title_bar',1);
   title(_title,'tab',1);

   exec('upg_prefix','zws',__filtrver);
   {? UPG_TASK.first() & ~exec('waitRun','#upgrade')
   || FILTER.AUTOTASK:=2
   ?};
   BPMN.CTRL:={? exec('get','#params',104102,2)='T' || 'T' || 'N' ?};
   UPG_TASK.select(,1);
   AreaTitle.setArea('ZWS_ADM');
   AreaTitle.setTitle();
   VAR_DEL.delete('__clust','__grpid','__clndx','__filtrver')
?};
''


\elements_selektor_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Tabela elementów pulpitu 'selektor'
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('elements_table','#desktop');
_tab.ID_SYS:='status@panel'; _tab.NAME:='Wersja'@; _tab.add();
_tab.ID_SYS:='firma@panel'; _tab.NAME:='Firma'@; _tab.add();
_tab.ID_SYS:='select@panel'; _tab.NAME:='Czy otworzyć w zakładce'@; _tab.add();
_tab


\dsk_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Wybranie statusu w selektorze.
::----------------------------------------------------------------------------------------------------------------------
__filtrver:=exec('get_value','#desktop','','selektor','status@panel');
FILTER.VERSION:=__filtrver;
{? FILTER.AUTOTASK=1
|| exec('upg_prefix','zws',__filtrver);
   grp_disp(UPG_TASK,'WER',1,1);
   win_activate('WER_TASK')
|? FILTER.AUTOTASK=2
|| exec('upgafiltr','zws');
   grp_disp(UPG_REAL,'WER',1,1);
   win_activate('ALL_REAL')
|? FILTER.AUTOTASK=3
|| win_activate('WER_LOG')
|| exec('upgmprefix','zws',__filtrver);
   grp_disp(UPG_TASK,'MAN',1,1);
   win_activate('WER_MAN')
?};
~~


\dsk_get_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Zwraca dane dla selektora statusu.
::   WY: alias do tabeli tymczasowej zawierającej listę statusów.
::----------------------------------------------------------------------------------------------------------------------
_rs:=sql('select 0 as LP, UPG_HEAD.SYMBOL as NAZWA, UPG_HEAD.VERSION || SPACE(4) as KOD from UPG_HEAD order by 1,3');

_i:=0;
{? _rs.first()
|| {!
   |? {? _rs.LP=0
      || _i+=1;
         _rs.LP:=_i;
         {? (1+_rs.NAZWA)='q' || _rs.KOD:='q'+_rs.KOD ?};
         {? 0 & (_wsk:=_rs.NAZWA*'_')>0
         || _ver:=_wsk-_rs.NAZWA;
            _subver:=
            {? (+_ver)>4
            || _rs.KOD:=form(_rs.KOD)+(4-_ver)
            || _rs.KOD:=form(_rs.KOD)
            ?}
         || _rs.KOD:=form(_rs.KOD)
         ?};
         _rs.put(1);
         _rs.first()
      || 0
      ?}
   !}
?};
_rs.LP:=0;
_rs.KOD:='-ALL-';
_rs.NAZWA:='Wszystkie';
_rs.add();

_rs


\dsk_set_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Formuła odpowiada za ustawienie wartości wskazanych elementów pulpitu.
::   WE: _a - identyfikator elementu panelu.
::----------------------------------------------------------------------------------------------------------------------
_set:="exec('set_value','#desktop','','selektor',_a,_b)";
_set(_a,__filtrver);
{? FILTER.AUTOTASK=1 || win_activate('WER_TASK')
|? FILTER.AUTOTASK=2 || win_activate('ALL_REAL')
|? FILTER.AUTOTASK=3 || win_activate('WER_LOG')
|| win_activate('WER_MAN')
?};
~~


\upg_prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: ustalenie prefixu tabeli UPG_TASK
::   WE: _a - wersja
::       [_b] - 1-start 0(domyślnie)-nie
::----------------------------------------------------------------------------------------------------------------------
_qmod:=(1+_a)='q';
_head:={? _a='-ALL-'
       || null()
       |? ~_qmod & (+_a)=5
       || exec('FindInSet','#table','UPG_HEAD','SYMBOL','upgrade_'+(2+_a)+(3-_a),,,1)
       |? _qmod
       || _a:=1-_a;
          exec('FindInSet','#table','UPG_HEAD','SYMBOL','qupgrade'+(2+_a)+(3-_a),,,1)
       || exec('FindInSet','#table','UPG_HEAD','SYMBOL','upgrade_'+(2+_a)+(3-_a),,,1)
       ?};
_first:={? var_pres('_b')<>type_of(0) || 0 || _b ?};

{? _a='-ALL-' | _head=null()
|| UPG_TASK.index('SYSTEM2');
   UPG_TASK.prefix('T')
|| UPG_TASK.index('AUTO');
   UPG_TASK.prefix('T',_head)
?};
{? _first & UPG_TASK.first()
|| {!
   |? {? UPG_TASK.STAN<>'T'
      || 0
      || UPG_TASK.next()
      ?}
   !}
?};
{? UPG_TASK.f_active() || UPG_TASK.f_rfresh() ?};
~~


\upgmprefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: ustalenie prefixu tabeli UPG_TASK
::   WE: _a - wersja
::       [_b] - 1-start 0(domyślnie)-nie
::----------------------------------------------------------------------------------------------------------------------
_qmod:=(1+_a)='q';
_head:={? _a='-ALL-'
       || null()
       |? (+_a)=5
       || exec('FindInSet','#table','UPG_HEAD','SYMBOL','upgrade_'+(2+_a)+(3-_a),,,1)
       |? _qmod
       || _a:=1-_a;
          exec('FindInSet','#table','UPG_HEAD','SYMBOL','qupgrade'+(2+_a)+(3-_a),,,1)
       || exec('FindInSet','#table','UPG_HEAD','SYMBOL','upgrade_'+(2+_a)+(3-_a),,,1)
       ?};
_first:={? var_pres('_b')<>type_of(0) || 0 || _b ?};

{? _a='-ALL-' | _head=null()
|| UPG_TASK.index('SYSTEM2');
   UPG_TASK.prefix('N')
|| UPG_TASK.index('AUTO');
   UPG_TASK.prefix('N',_head)
?};
{? _first & UPG_TASK.first()
|| {!
   |? {? UPG_TASK.REQUIRED='N'
      || UPG_TASK.next()
      |? UPG_TASK.STAN<>'T'
      || 0
      || UPG_TASK.next()
      ?}
   !}
?};
{? UPG_TASK.f_active() || UPG_TASK.f_rfresh() ?};
~~


\dispUpg_task
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przy zmianie zakładki dla UPG_TASK
::   WE: _a - 1-autoamtyczne 0-manualne
::----------------------------------------------------------------------------------------------------------------------
_modify:=FILTER.AUTOTASK<>_a;
FILTER.AUTOTASK:=_a;
{? FILTER.AUTOTASK
|| exec('upg_prefix','zws',__filtrver,_modify)
|| exec('upgmprefix','zws',__filtrver,_modify)
?};
exec('dispUpg_real','zws',FILTER.AUTOTASK);
~~


\dispUpg_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Po odświeżeniu dla UPG_REAL
::----------------------------------------------------------------------------------------------------------------------
_real:=1;
UPG_REAL.f_clear();
UPG_REAL.index('TASKSFRM');
UPG_REAL.prefix({? UPG_TASK.sel_size()
                || UPG_TASK.ref()
                |? UPG_TASK.f_active()
                || {? UPG_TASK.f_size() || UPG_TASK.ref() || null() ?}
                || {? UPG_TASK.size() || UPG_TASK.ref() || null() ?}
                ?},0);
{? UPG_TASK.FIRM='N' & {? UPG_REAL.f_active() || UPG_REAL.f_first() || UPG_REAL.first() ?}
|| {!
   |? {? UPG_REAL.FIRMA=REF.FIRMA
      || 0
      || {? UPG_REAL.f_active() || UPG_REAL.f_next() || UPG_REAL.next() ?}
      ?}
   !}
?};

grp_disp(UPG_REAL,{? _a || 'AUT' || 'MAN' ?});
{? ~UPG_REAL.sel_size() & {? UPG_REAL.f_active() || ~UPG_REAL.f_size() || ~UPG_REAL.size() ?}
|| _real:=0;
   UPG_TASK.memo_set('')
?};
exec('dispUpg_msg','zws',_real);
~~


\dispUpg_msg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Po odświeżeniu dla UPG_MSG
::   WE: [_a] - 1(domyślnie)-są wykonania, 0-brak
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || _a:=1 ?};

UPG_MSG.index('UPG_REAL');
{? _a
|| {? UPG_REAL.sel_size() | {? UPG_REAL.f_active() || UPG_REAL.f_size() || UPG_REAL.size() ?}
   || UPG_MSG.prefix(UPG_REAL.ref())
   || UPG_MSG.prefix(null())
   ?}
|| UPG_MSG.prefix(null())
?};
grp_disp(UPG_MSG,{? FILTER.AUTOTASK=2 || 'ALL' || 'WER' ?});
~~


\upg_dom_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Formuła ikony dla STAT_REJ
::----------------------------------------------------------------------------------------------------------------------
"
   {? exec('lic','#b_domain',UPG_TASK.B_DOMAIN().SYMBOL) || exec('pusta','#icon')
   || exec('anuluj','#icon')
   ?}
"


\rekUpgTask
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Formuła na rekord dla zadań
::----------------------------------------------------------------------------------------------------------------------
_error:=exec('FindInSet','#table','UPG_REAL','TASKERR',UPG_TASK.ref(),1)<>null();
_run:=exec('FindInSet','#table','UPG_REAL','TASKRUN',UPG_TASK.ref(),'T',,,0)<>null();
{? _error            || 'UPG_TASK#01#04'
|? _run              || 'UPG_TASK#01#05'
|? UPG_TASK.STAN='T' || 'UPG_TASK#01#02'
|? UPG_TASK.STAN='W' || 'UPG_TASK#01#03'
|| 'UPG_TASK#01#01'
?}


\run_upgrade
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Uruchomienie wszystkich niewykonanych zadań potransferowych
::   WE: _a - tryb wywołania 0-domyślnie 1-serwis 3-wywołanie nie z Obszaru
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || _a:=0 ?};

_res:=0;
__UPG.mode(_a);
UPG_TASK.cntx_psh();
UPG_REAL.cntx_psh();
UPG_MSG.cntx_psh();
_res:=__UPG.run_all();
UPG_TASK.cntx_pop();
UPG_REAL.cntx_pop();
UPG_MSG.cntx_pop();
_res


\dispUpg_log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Formuła na rekord dla zadań
::----------------------------------------------------------------------------------------------------------------------
FILTER.AUTOTASK:=3;
UPG_LOG.index('DTTM')


\end_upgrade
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Warunkowe zakończenie aktualizacji
::----------------------------------------------------------------------------------------------------------------------
_zn:='NX';
_len:=+_zn;
UPG_LOG.cntx_psh();
{! _i:=1.._len
|! _ch:=1+((_i-1)-_zn);
   UPG_LOG.index('END');
   UPG_LOG.prefix(_ch);
   {? UPG_LOG.first()
   || {!
      |? _ref:=UPG_LOG.ref();
         _next:=UPG_LOG.next();
         UPG_LOG.cntx_psh();
         UPG_LOG.prefix();
         {? UPG_LOG.seek(_ref)
         || UPG_LOG.END:='A';
            {? UPG_LOG.put(1)
            || UPG_FIRM.index('FIRMA');
               UPG_FIRM.prefix(UPG_LOG.ref());
               {? UPG_FIRM.first()
               || {!
                  |? UPG_FIRM.END:=exec('upg_firm_end','#upgrade','T');
                     UPG_FIRM.put(1);
                     UPG_FIRM.next()
                  !}
               ?}
            ?}
         ?};
         UPG_LOG.cntx_pop();
         _next
      !}
   ?}
!};
UPG_LOG.cntx_pop();
~~


\rekUpgReal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Formuła na rekord dla realizacji
::----------------------------------------------------------------------------------------------------------------------
UPG_TASK.cntx_psh();
UPG_TASK.prefix();
UPG_TASK.seek(UPG_REAL.UPG_TASK);
UPG_TASK.memo_get();
UPG_TASK.cntx_pop();

UPG_REAL.actions_grayed('MAN',{? UPG_REAL.STAN='T'
                               | UPG_REAL.FIRMA<>null() & UPG_REAL.FIRMA<>REF.FIRMA
                              || 'U'
                              || ''
                              ?});
UPG_REAL.actions_grayed('WER',{? UPG_REAL.STAN='T'
                               | UPG_REAL.FIRMA<>null() & UPG_REAL.FIRMA<>REF.FIRMA
                               | ~exec('ctrlManual','#upgrade')
                              || 'U'
                              || ''
                              ?});
{? UPG_REAL.STAN='T' & UPG_REAL.ERROR=2 || 'UPG_REAL#01#03'
|? UPG_REAL.STAN='T'                    || 'UPG_REAL#01#02'
|? UPG_REAL.ERROR=1                     || 'UPG_REAL#01#04'
|| 'UPG_TASK#01#01'
?}


\rek_upg_log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: akcja rekord dla UPG.LOG
::----------------------------------------------------------------------------------------------------------------------
UPG_LOG.actions_grayed('WER',{? (';AT'*UPG_LOG.END)>1 || 'A' || '' ?});
~~


\manual_upgrade
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: ręczne uruchomienie formuły
::----------------------------------------------------------------------------------------------------------------------
_blok:=UPG_REAL.r_lock(1,1,1);
{? _blok
 & FUN.ask({? UPG_REAL.FIRMA=null()
           || 'Czy uruchomić zadanie manualne %1 dla wszystkich firm?'@[UPG_REAL.UPG_TASK().FORM]
           || 'Czy uruchomić zadanie manualne %1 w firmie %2?'@[UPG_REAL.UPG_TASK().FORM,UPG_REAL.FIRMA().SYMBOL]
           ?})
|| __UPG.run_manual()
?};
{? ~_blok
|| {? FUN.ask('Realizacja zadania jest wykonywana przez innego użytkownika.\nCzy chcesz zobaczyć przez kogo?'@)
   || UPG_REAL.r_lock()
   ?}
?};
UPG_REAL.r_unlock();
~~


\mod_upgrade
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: ustawia znacznik, że zadanie podlega ponownemu uruchomieniu
::----------------------------------------------------------------------------------------------------------------------
_tab:=UPG_REAL.sel_aget();
UPG_REAL.sel_adel();
UPG_REAL.cntx_psh();
{? _tab.size()
|| {? _tab.first() & FUN.ask('Czy zatwierdzić do ponownego wykonania zaznaczone realizacje zadania?\n'
                             'Uwaga. Operacja dotyczy wyłącznie błędnych realizacji zadania.'@)
   || {!
      |? {? (UPG_REAL.prefix(); UPG_REAL.seek(_tab.REF,)) & UPG_REAL.ERROR=1 & UPG_REAL.r_lock(1,1,1)
         || UPG_REAL.ERROR:=4;
            UPG_REAL.put(1);
            UPG_REAL.r_unlock()
         ?};
         _tab.next()
      !}
   ?}
|? UPG_REAL.r_lock(1,1,1) & FUN.ask('Czy zatwierdzić do ponownego wykonania realizacje zadania?'@)
|| UPG_REAL.ERROR:=4;
   UPG_REAL.put(1);
   UPG_REAL.r_unlock()
?};
UPG_REAL.cntx_pop();
obj_del(_tab);
~~


\zws_prj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Obszar projekty
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('projekty_win_ust','projekty');
exec('projekty_jorg','obiegi_proj');
:: Formy zatrudnienia
exec('__F_ZATR','object');
_wer:='WER';
::PROJEKTY.win_fml(_wer,,'SYM',,'ICON_BEFORE',exec('projekty_sym_ib','zws'));

::_wer_grp:=PROJEKTY.grp_make('Projekty'@,,'projektywergrp');
::_far:="
::   DOKUM.index('DOKUM');
::   {? PROJEKTY.get()
::   || DOKUM.prefix(REF.FIRMA,$PROJEKTY.ref())
::   || DOKUM.prefix(REF.FIRMA,'@!@!@!@!@!@!@!@!');
::      DOKUM.first()
::   ?};
::   exec('getblobs','srsr_zal',__CTR.WIN_ID);
::   grp_disp(($(__CTR.BTAB))(),__CTR.WIN_ACR,,1);
::   ~~
::";
::PROJEKTY.grp_sel(_wer_grp,,_wer,,_far,,,20);

::PROJEKTY.index('FIRMA');
::PROJEKTY.prefix(REF.FIRMA);
::PROJEKTY.win_sel(_wer_grp);
::PROJEKTY.select()

:: zainicjowanie środowiska selektora projektów
_env_prj:=exec('env','projekty_view');

:: zasilenie selektora projektów

:: Załączniki
PROJVIEW.blank();
PROJVIEW.ID:='DOKUM';
PROJVIEW.NAME:='Załączniki'@;
PROJVIEW.CONFIG:="params_exec('cfg_dokum','projekty_view',_a,_b)"+'';
PROJVIEW.REFRESH:="params_exec('dokum_after_refresh','projekty_view')"+'';
PROJVIEW.BEFORE:="params_exec('dokum_before','projekty_view',_a)"+'';
PROJVIEW.AFTER:="params_exec('dokum_after','projekty_view',_a)"+'';
PROJVIEW.B_DOMAIN:='';
_env_prj.tabs.DOKUM.get();

:: Analizy BI
{? exec('chk_role','#b__box',OPERATOR.USER,'BIQ_PRJ_DISP') & exec('b_action_params_chk','#b_action','BIQ_PRJ_DISP')
|| PROJVIEW.blank();
   PROJVIEW.ID:='ANALIZY_BI';
   PROJVIEW.NAME:='Analizy BI'@;
   PROJVIEW.CONFIG:="params_exec('cfg_analizy','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('analizy_biq_ctrl_call','projekty_view',,'#:biq_prj_disp','biq_prj_disp')"+'';
   PROJVIEW.BEFORE:="exec('stat_add','st_common','A_BI','Projekty');
      params_exec('analizy_biq_ctrl_call','projekty_view',,'#:biq_prj_disp','biq_prj_disp')"+'';
   PROJVIEW.AFTER:=""+'';
   PROJVIEW.B_DOMAIN:='BIQ';
   _env_prj.tabs.ANALIZY_BI.get()
?};
:: Magazyn
{? exec('magazyn_access','projekty_view')
||
   PROJVIEW.blank();
   PROJVIEW.ID:='MAGAZYN';
   PROJVIEW.NAME:='Dokumenty magazynowe'@;
   PROJVIEW.CONFIG:="params_exec('cfg_magazyn','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('magazyn_after_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:="params_exec('magazyn_before','projekty_view',_a)"+'';
   PROJVIEW.AFTER:="params_exec('magazyn_after','projekty_view',_a)"+'';
   PROJVIEW.B_DOMAIN:='LMG';
   _env_prj.tabs.MAGAZYN.get()
?};

:: Zamówienia sprzedaży
{? exec('zam_spr_access','projekty_view')
||
   PROJVIEW.blank();
   PROJVIEW.ID:='ZAM_SPR';
   PROJVIEW.NAME:='Zamówienia sprzedaży'@;
   PROJVIEW.CONFIG:="params_exec('cfg_zam_spr','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('zam_spr_after_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:="params_exec('zam_spr_before','projekty_view',_a)"+'';
   PROJVIEW.AFTER:="params_exec('zam_spr_after','projekty_view',_a)"+'';
   PROJVIEW.B_DOMAIN:='LSP';
   _env_prj.tabs.ZAM_SPR.get()
?};

:: Zamówienia wewnętrzne
{? exec('zam_wew_access','projekty_view')
||
   PROJVIEW.blank();
   PROJVIEW.ID:='ZAM_WEW';
   PROJVIEW.NAME:='Zamówienia wewnętrzne'@;
   PROJVIEW.CONFIG:="params_exec('cfg_zam_wew','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('zam_wew_after_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:="params_exec('zam_wew_before','projekty_view',_a)"+'';
   PROJVIEW.AFTER:="params_exec('zam_wew_after','projekty_view',_a)"+'';
   PROJVIEW.B_DOMAIN:='LMG';
   _env_prj.tabs.ZAM_WEW.get()
?};

:: Zamówienia dostaw
{? exec('zam_dost_access','projekty_view')
||
   PROJVIEW.blank();
   PROJVIEW.ID:='ZAM_DOST';
   PROJVIEW.NAME:='Zamówienia dostaw'@;
   PROJVIEW.CONFIG:="params_exec('cfg_zam_dost','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('zam_dost_after_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:="params_exec('zam_dost_before','projekty_view',_a)"+'';
   PROJVIEW.AFTER:="params_exec('zam_dost_after','projekty_view',_a)"+'';
   PROJVIEW.B_DOMAIN:='LZK';
   _env_prj.tabs.ZAM_DOST.get()
?};

:: Dokumenty sprzedaży
{? exec('dok_spr_access','projekty_view')
||
   PROJVIEW.blank();
   PROJVIEW.ID:='DOK_SPR';
   PROJVIEW.NAME:='Dokumenty sprzedaży'@;
   PROJVIEW.CONFIG:="params_exec('cfg_dok_spr','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('dok_spr_after_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:="params_exec('dok_spr_before','projekty_view',_a)"+'';
   PROJVIEW.AFTER:="params_exec('dok_spr_after','projekty_view',_a)"+'';
   PROJVIEW.B_DOMAIN:='LSP';
   _env_prj.tabs.DOK_SPR.get()
?};

:: Dokumenty zakupu
{? exec('dok_zak_access','projekty_view')
||
   PROJVIEW.blank();
   PROJVIEW.ID:='DOK_ZAK';
   PROJVIEW.NAME:='Dokumenty zakupu'@;
   PROJVIEW.CONFIG:="params_exec('cfg_dok_zak','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('dok_zak_after_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:="params_exec('dok_zak_before','projekty_view',_a)"+'';
   PROJVIEW.AFTER:="params_exec('dok_zak_after','projekty_view',_a)"+'';
   PROJVIEW.B_DOMAIN:='LZK';
   _env_prj.tabs.DOK_ZAK.get()
?};

:: Oferty pozycje
{? exec('ofe_access','projekty_view')
||
   PROJVIEW.blank();
   PROJVIEW.ID:='OFP';
   PROJVIEW.NAME:='Pozycje ofert'@;
   PROJVIEW.CONFIG:="params_exec('cfg_ofe','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('ofe_after_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:="params_exec('ofe_before','projekty_view',_a)"+'';
   PROJVIEW.AFTER:="params_exec('ofe_after','projekty_view',_a)"+'';
   PROJVIEW.B_DOMAIN:='LSP';
   _env_prj.tabs.OFP.get()
?};

:: Oferty
{? exec('ofe_access','projekty_view')
||
   PROJVIEW.blank();
   PROJVIEW.ID:='OFE';
   PROJVIEW.NAME:='Oferty'@;
   PROJVIEW.CONFIG:="params_exec('cfg_ofe_n','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('ofe_after_refresh_n','projekty_view')"+'';
   PROJVIEW.BEFORE:="params_exec('ofe_before_n','projekty_view',_a)"+'';
   PROJVIEW.AFTER:="params_exec('ofe_after_n','projekty_view',_a)"+'';
   PROJVIEW.B_DOMAIN:='LSP';
   _env_prj.tabs.OFE.get()
?};

:: Zlecenia
{? exec('zlec_prod_access','projekty_view')
||
   PROJVIEW.blank();
   PROJVIEW.ID:='ZLEC_PROD';
   PROJVIEW.NAME:='Zlecenia produkcyjne'@;
   PROJVIEW.CONFIG:="params_exec('cfg_zlec_prod','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('zlec_prod_after_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:="params_exec('zlec_prod_before','projekty_view',_a)"+'';
   PROJVIEW.AFTER:="params_exec('zlec_prod_after','projekty_view',_a)"+'';
   PROJVIEW.B_DOMAIN:='TTE';
   _env_prj.tabs.ZLEC_PROD.get()
?};

:: Przegladanie zarejestrowanych godzin
{? exec('personel_access','projekty_view','PPL_PLL_PGOD','PPL_PLL_RGOD')
|| PROJVIEW.blank();
   PROJVIEW.ID:='GODZINY';
   PROJVIEW.NAME:='Godziny pracy'@;
   PROJVIEW.CONFIG:="params_exec('cfg_personel','projekty_view',_a,_b,G,'PROJEKTY')"+'';
   PROJVIEW.REFRESH:="params_exec('personel_refresh','projekty_view',G,'PROJEKTY')"+'';
   PROJVIEW.BEFORE:=""+'';
   PROJVIEW.AFTER:=""+'';
   PROJVIEW.B_DOMAIN:='PPL';
   _env_prj.tabs.GODZINY.get()
?};

:: Przegladanie zarejestrowanych kosztów wynagrodzeń
{? exec('personel_access','projekty_view','PPL_PLL_PSKP','PPL_PLL_RSKP')
|| PROJVIEW.blank();
   PROJVIEW.ID:='KOSZT_WYN';
   PROJVIEW.NAME:='Koszty wynagrodzeń'@;
   PROJVIEW.CONFIG:="params_exec('cfg_personel','projekty_view',_a,_b,ATRUSE_L,'PROJEKTY')"+'';
   PROJVIEW.REFRESH:="params_exec('personel_refresh','projekty_view',ATRUSE_L,'PROJEKTY')"+'';
   PROJVIEW.BEFORE:=""+'';
   PROJVIEW.AFTER:=""+'';
   PROJVIEW.B_DOMAIN:='PPL';
   _env_prj.tabs.KOSZT_WYN.get()
?};

:: Podziały controllingowe
{? exec('personel_access','projekty_view','CTR_PCO_DDOK','CTR_PCO_ZDOK')
|| PROJVIEW.blank();
   PROJVIEW.ID:='SKIDXD';
   PROJVIEW.NAME:='Podziały controllingowe'@;
   PROJVIEW.CONFIG:="params_exec('cfg_skidxd','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('skidxd_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:=""+'';
   PROJVIEW.AFTER:=""+'';
   PROJVIEW.B_DOMAIN:='CTR';
   _env_prj.tabs.SKIDXD.get();
   exec('set_var','control')
?};

:: Zapisy na kontach
{? exec('personel_access','projekty_view','FKS_DKS_DARK','FKS_DKS_ZDOK')
|| PROJVIEW.blank();
   PROJVIEW.ID:='POZ';
   PROJVIEW.NAME:='Zapisy na kontach'@;
   PROJVIEW.CONFIG:="params_exec('cfg_poz','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('poz_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:=""+'';
   PROJVIEW.AFTER:=""+'';
   PROJVIEW.B_DOMAIN:='FKS';
   _env_prj.tabs.POZ.get()
?};

:: Dokumenty w obiegu
{? exec('personel_access','projekty_view','OBE_FAW_DARP','OBG_FZO_DARK')
|| PROJVIEW.blank();
   PROJVIEW.ID:='EDOKUM';
   PROJVIEW.NAME:='Dokumenty w obiegu'@;
   PROJVIEW.CONFIG:="params_exec('cfg_edokum','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('edokum_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:=""+'';
   PROJVIEW.AFTER:=""+'';
   PROJVIEW.B_DOMAIN:='FKS';
   _env_prj.tabs.EDOKUM.get()
?};

:: Rozrachunki
{? exec('personel_access','projekty_view','FKS_ROZ_DARK','FKS_ROZ_ZARK')
|| PROJVIEW.blank();
   PROJVIEW.ID:='OP';
   PROJVIEW.NAME:='Rozrachunki'@;
   PROJVIEW.CONFIG:="params_exec('cfg_op','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('op_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:=""+'';
   PROJVIEW.AFTER:=""+'';
   PROJVIEW.B_DOMAIN:='FKS';
   _env_prj.tabs.OP.get()
?};

::Kontakty
{? exec('dokum_access','kontrahent_view') & exec('kkh_lic','zws')='T'
||
   PROJVIEW.blank();
   PROJVIEW.ID:='DOKUM_K';
   PROJVIEW.NAME:='Kontakty'@;
   PROJVIEW.CONFIG:="params_exec('cfg_dokum_k','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('dokum_k_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:=""+'';
   PROJVIEW.AFTER:=""+'';
   PROJVIEW.B_DOMAIN:='KKH';
   _env_prj.tabs.DOKUM_K.get()
?};

:: Zgłoszenia remontowe
{? exec('rem_zgl_access','projekty_view')
||
   PROJVIEW.blank();
   PROJVIEW.ID:='REM_ZGL';
   PROJVIEW.NAME:='Zgłoszenia remontowe'@;
   PROJVIEW.CONFIG:="params_exec('cfg_rem_zgl','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('rem_zgl_after_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:="params_exec('rem_zgl_before','projekty_view',_a)"+'';
   PROJVIEW.AFTER:="params_exec('rem_zgl_after','projekty_view',_a)"+'';
   PROJVIEW.B_DOMAIN:='TRE';
   _env_prj.tabs.REM_ZGL.get()
?};

:: Reklamacje klienta
{? exec('rekn_k_access','projekty_view')
||
   PROJVIEW.blank();
   PROJVIEW.ID:='REKN_K';
   PROJVIEW.NAME:='Reklamacje klienta'@;
   PROJVIEW.CONFIG:="params_exec('cfg_rekn_k','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('rekn_k_after_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:="params_exec('rekn_k_before','projekty_view',_a)"+'';
   PROJVIEW.AFTER:="params_exec('rekn_k_after','projekty_view',_a)"+'';
   PROJVIEW.B_DOMAIN:='TRE';
   _env_prj.tabs.REKN_K.get()
?};

:: Reklamacje do dostawców
{? exec('rekn_d_access','projekty_view')
||
   PROJVIEW.blank();
   PROJVIEW.ID:='REKN_D';
   PROJVIEW.NAME:='Reklamacje do dostawców'@;
   PROJVIEW.CONFIG:="params_exec('cfg_rekn_d','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('rekn_d_after_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:="params_exec('rekn_d_before','projekty_view',_a)"+'';
   PROJVIEW.AFTER:="params_exec('rekn_d_after','projekty_view',_a)"+'';
   PROJVIEW.B_DOMAIN:='TRE';
   _env_prj.tabs.REKN_D.get()
?};

:: Umowy cykliczne
{? exec('um_access','projekty_view')
||
   PROJVIEW.blank();
   PROJVIEW.ID:='UM';
   PROJVIEW.NAME:='Umowy cykliczne'@;
   PROJVIEW.CONFIG:="params_exec('cfg_um','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('um_after_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:="params_exec('um_before','projekty_view',_a)"+'';
   PROJVIEW.AFTER:="params_exec('um_after','projekty_view',_a)"+'';
   PROJVIEW.B_DOMAIN:='LUM';
   _env_prj.tabs.UM.get()
?};

:: Zlecenie fakturowania
{? exec('um_access','projekty_view')
||
   PROJVIEW.blank();
   PROJVIEW.ID:='FAKZ';
   PROJVIEW.NAME:='Zlecenia fakturowania'@;
   PROJVIEW.CONFIG:="params_exec('cfg_fakz','projekty_view',_a,_b)"+'';
   PROJVIEW.REFRESH:="params_exec('fakz_after_refresh','projekty_view')"+'';
   PROJVIEW.BEFORE:="params_exec('fakz_before','projekty_view',_a)"+'';
   PROJVIEW.AFTER:="params_exec('fakz_after','projekty_view',_a)"+'';
   PROJVIEW.B_DOMAIN:='LSP';
   _env_prj.tabs.FAKZ.get()
?};

:: Załadowanie selektora projektów
_env_zl:=exec('env','zl_view');
_params:=params_get();
params_set('env',_env_zl,'env_prj',_env_prj,'params',_params);
{? exec('load','projekty_view',_env_prj)
|| exec('czytaj','#stalesys',,XINFO,'SLPRRODZ');
   _env_prj.select()
?};
~~


\projekty_sym_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Formuła określiająca ikony
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
"
   {? PROJEKTY.STAT_REJ='T' || exec('zaakceptowany','icon')
   |? PROJEKTY.STAT_REJ='Z' || exec('zarejestrowany','icon')
   |? PROJEKTY.STAT_REJ='N' || exec('pusta','#icon')
   || exec('pusta','#icon')
   ?}
"


\dsk_firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Wybranie firmy w selektorze.
::----------------------------------------------------------------------------------------------------------------------
_firma:=FILTER.FIRMA;

FILTER.FIRMA:=exec('get_value','#desktop','','selektor','firma@panel');
_select:={? exec('get_value','#desktop','','selektor','select@panel')='true' || 0 || 1 ?};

__clust.index(__clndx);
__clust.prefix(FILTER.FIRMA,__grpid,);
::__clust.prefix(FILTER.FIRMA);
_ok_cl:=__clust.first();

{? _ok_cl & _firma<>FILTER.FIRMA
|| _app_iden:=exec('FindInSet','#table','FIRMA','SYMBOL',FILTER.FIRMA,FILTER.FIRMA,"FIRMA.APP_IDEN",,,'');
   _opis_firm:=exec('FindInSet','#table','FIRMA','SYMBOL',FILTER.FIRMA,FILTER.FIRMA,"FIRMA.OPIS",,,'');
   exec('set_value','#desktop','','selektor','firma@panel',_firma);
   FILTER.FIRMA:=_firma;
   ctr_set('!application',,'run',app_info('cluster_group'),_app_iden,'UPGRADE','reload',_select,_opis_firm)
|? ~_ok_cl
|| FUN.emsg('Brak możliwości przełączenia się na firmę %1.\nNie uwzględniono jej w definicji grupy.'@[FILTER.FIRMA]);
   exec('set_value','#desktop','','selektor','firma@panel',_firma);
   FILTER.FIRMA:=_firma
?};
~~


\dsk_get_firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Zwraca dane dla selektora statusu.
::   WY: alias do tabeli tymczasowej zawierającej listę statusów.
::----------------------------------------------------------------------------------------------------------------------
_rs:=sql('select 0 as LP, FIRMA.SYMBOL as KOD, FIRMA.OPIS as NAZWA from FIRMA '
         'where (FIRMA.TYP=\'S\' or FIRMA.SYMBOL=\'000\') and FIRMA.Z=\'N\' '
         'and (FIRMA.A=\'T\' or FIRMA.A=\'\') order by 1,2');

_i:=0;
_rs.last();
{!
|? _i+=1;
   _rs.LP:=#_rs.KOD;
   _rs.prev()
!};

_rs


\dsk_set_firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Formuła odpowiada za ustawienie wartości wskazanych elementów pulpitu.
::   WE: _a - identyfikator elementu panelu.
::----------------------------------------------------------------------------------------------------------------------
_set:="exec('set_value','#desktop','','selektor',_a,_b)";
_set(_a,FILTER.FIRMA);
win_activate('WER_TASK');
~~


\dispAll_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Wyświetla wszystkie realizacje zadań manualnych dla REF.FIRMA
::----------------------------------------------------------------------------------------------------------------------
_real:=1;
FILTER.AUTOTASK:=2;
exec('upgafiltr','zws');
{? ~UPG_REAL.sel_size() & {? UPG_REAL.f_active() || ~UPG_REAL.f_size() || ~UPG_REAL.size() ?}
|| _real:=0;
   UPG_TASK.memo_set('')
?};
exec('dispUpg_msg','zws',_real);
~~


\upgafiltr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: filtr dla wszystkich zadań manualnych
::----------------------------------------------------------------------------------------------------------------------
FILTER.AUTOTASK:=2;
UPG_REAL.sel_adel();

UPG_REAL.prefix();
UPG_REAL.f_clear();
{? FILTER.VERSION='-ALL-'
|| UPG_REAL.f_set('ORDER','join UPG_TASK'
    ,'UPG_TASK.AUTO=\'N\' and (\"UPG_REAL\".FIRMA is null or \"UPG_REAL\".FIRMA=:_a)',REF.FIRMA)
|| {? (1+__filtrver)='q'
   || _filtr:=1-__filtrver;
      UPG_REAL.f_set('ORDER','join UPG_TASK join UPG_HEAD'
       ,'UPG_HEAD.SYMBOL=\':_b\' and UPG_TASK.AUTO=\'N\' and (\"UPG_REAL\".FIRMA is null or \"UPG_REAL\".FIRMA=:_a)'
       ,REF.FIRMA,'qupgrade'+(2+_filtr)+(3-_filtr))
   || UPG_REAL.f_set('ORDER','join UPG_TASK join UPG_HEAD'
       ,'UPG_HEAD.SYMBOL=\':_b\' and UPG_TASK.AUTO=\'N\' and (\"UPG_REAL\".FIRMA is null or \"UPG_REAL\".FIRMA=:_a)'
       ,REF.FIRMA,'upgrade_'+(2+__filtrver)+(3-__filtrver))
   ?}
?};
UPG_REAL.f_first();
~~


\tekst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Informacja o trwającej aktualizacji
::   WE: [_a] - 0(domyślnie) 1-odświeżenie w okienku w trybie podglądu
::   WY: tekst
::----------------------------------------------------------------------------------------------------------------------
_mode:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_label:=gsub(exec('get_value','#desktop','','selektor','tekst@panel'),'<html>','');
UPG_REAL.cntx_psh();
UPG_TASK.cntx_psh();
UPG_REAL.index('STAN');
UPG_REAL.prefix('T','N',0);
_noreal:=UPG_REAL.size();
_nowait:={? UPG_REAL.first()
         || {? (UPG_TASK.prefix(); UPG_TASK.seek(UPG_REAL.UPG_TASK))
            || exec('waitRun','#upgrade')
            || 1
            ?}
         || exec('waitRun','#upgrade')
         ?};
UPG_REAL.index('TASKRUN');
UPG_REAL.prefix('T',0,);
_run:=UPG_REAL.size();

_last_stamp:=0;

UPG_REAL.index('ACTRUN');
UPG_REAL.prefix('T','N','T');
_actrun:={? UPG_REAL.first() & UPG_REAL.find_tab('first','DISABLED',,'=',0)
         || _prog:=exec('timeDiff','#datetime',UPG_REAL.BEGD,UPG_REAL.BEGT,date(),time());
            _infotime:={? ~_mode || '... Czas przetwarzania: %1 '@[form(_prog,,3)] || '' ?};
            '[ Przetwarzanie zadania: %1,'
            ' Wersja: %2,'
            ' Firma: %3,'
            ' Rozpoczęto: %4,%5'
            ' %6]'@[UPG_REAL.UPG_TASK().SYMBOL
                                          ,UPG_REAL.UPG_TASK().SYSTEM
                                          ,{? UPG_REAL.FIRMA=null()
                                           || 'Wszystkie'
                                           || UPG_REAL.FIRMA().SYMBOL
                                           ?}
                                          ,form(UPG_REAL.BEGD,,2)
                                          ,form(UPG_REAL.BEGT,,3)
                                          ,_infotime]
|| ''
         ?};
{? _actrun=''
|| UPG_REAL.index('ACTRUN');
   UPG_REAL.prefix('T','T','N');
   {? UPG_REAL.first()
   || {!
      |? {? UPG_REAL.DISABLED=0 & UPG_REAL.UPG_TASK().MANEND<>'A'
         || _prog:=UPG_REAL.RUNT;
            _infotime:={? ~_mode || '... Czas przetwarzania: %1 '@[form(_prog,,3)] || '' ?};
            _actrun:='[ Przetworzono zadanie: %1,'
                     ' Wersja: %2,'
                     ' Firma: %3,'
                     ' Rozpoczęto: %4,%5'
                     ' %6]'@[UPG_REAL.UPG_TASK().SYMBOL
                                                   ,UPG_REAL.UPG_TASK().SYSTEM
                                                   ,{? UPG_REAL.FIRMA=null()
                                                    || 'Wszystkie'
                                                    || UPG_REAL.FIRMA().SYMBOL
                                                    ?}
                                                   ,form(UPG_REAL.BEGD,,2)
                                                   ,form(UPG_REAL.BEGT,,3)
                                                   ,_infotime];
            _last_stamp:=tm_stamp(UPG_REAL.DATA~1,UPG_REAL.DATA~2,UPG_REAL.DATA~3
                                 ,UPG_REAL.CZAS~1,UPG_REAL.CZAS~2,UPG_REAL.CZAS~3)
         ?};
         _actrun='' & UPG_REAL.next()
      !}
   || _actrun:=''
   ?}
?};
UPG_REAL.cntx_pop();
UPG_TASK.cntx_pop();

_work:=exec('FindInSet','#table','UPG_LOG','END','N')<>null() | exec('FindInSet','#table','UPG_LOG','END','X')<>null();
_error:=exec('isError','#upgrade');
_event:=_run>0;
_wait:=0;

_tm_stamp:=tm_stamp();
_now_stamp:=tm_stamp(date()~1,date()~2,date()~3,time()~1,time()~2,time()~3);

_wait_time:={? _last_stamp<>0 || exec('diff_tm_stamp','#tm_stamp',_now_stamp,_last_stamp) || 0 ?};
_longwait:=_wait_time>300;

{? _noreal<>FILTER.ILZAD
|| _event:=1;
   FILTER.ILZAD:=_noreal
|| _wait:=_work & _noreal & ~_error & ~_event & exec('diff_tm_stamp','#tm_stamp',_tm_stamp,FILTER.TM_STAMP)>30
?};
{? _event || FILTER.TM_STAMP:=_tm_stamp ?};

::_font_bg:='<font size=5 color="00FF00">';
::_font_br:='<font size=5 color="FF0000">';
::_font_ae:='</font>';

_font_bg:='';
_font_br:='';
_font_ae:='';

_text:={? ~_nowait
       || _font_bg+'Wymagane uruchomienie zadań manualnych'@+_font_ae
       |? _noreal>0 & ~_work
       || _doda:='<br><small><b><font color="771D1D">%1</font>'[_actrun];
          {? ~_longwait
          || _font_bg+'Wymagana aktualizacja zadań potransferowych %1%2'@[$_noreal,_doda]+_font_ae
          || _inftime:=exec('time2str','#convert',*(_wait_time/60));
             _infzada:={? _noreal=1 || 'zadania'@ || 'zadań'@ ?};
             _font_bg+
             '<font color="666666">'+
             'Oczekiwanie na wykonanie %1 %4 ...</font> Czas oczekiwania: %2%3'@[$_noreal,_inftime,_doda,_infzada]+
             _font_ae
          ?}
       |? _work & _error
       || _font_br+'Błąd! Aktualizacja została przerwana'+_font_ae
       |? _wait
       || _doda:='<br><small><b><font color="771D1D">%1</font>'[_actrun];
          _font_bg+'Oczekiwanie na realizację, pozostało: %1%2 zadań%3'@[$_noreal,{? _run || '/'+$_run || '' ?},_doda]+_font_ae
       |? _work & _noreal
       || _doda:='<br><small><b><font color="771D1D">%1</font>'[_actrun];
          _font_bg+'Trwa przetwarzanie, pozostało: %1%2 zadań%3'@[$_noreal,{? _run || '/'+$_run || '' ?},_doda]+_font_ae
       || ''
       ?};
{? _label<>_text
|| FILTER.REFRESH:=_text<>'';
   grp_disp(UPG_TASK,'WER',1,1)
?};
_text:='<html>'+_text+'<html>';

_text


\upg_firm_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Formuła ikony dla FIRMA
::----------------------------------------------------------------------------------------------------------------------
"
   {? UPG_REAL.FIRMA=null()
    | (__clust.index(__clndx);
::       __clust.prefix(UPG_REAL.FIRMA().SYMBOL);
       __clust.prefix(UPG_REAL.FIRMA().SYMBOL,__grpid,);
       __clust.first())
   || exec('pusta','#icon')
   || exec('anuluj','#icon')
   ?}
"


\upg_required_t_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Formuła ikony dla REQUIRED
::----------------------------------------------------------------------------------------------------------------------
"
   {? UPG_TASK.MANEND='T'
   || 'xwin16.png:120'
   |? UPG_TASK.MANEND='A'
   || 'xwin16.png:122'
   |? UPG_TASK.AUTO='N' & UPG_TASK.STAN<>'T' & UPG_TASK.REQUIRED='T'
   || 'xwin16.png:72'
   || exec('pusta','#icon')
   ?}
"


\upg_required_r_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Formuła ikony dla REQUIRED
::----------------------------------------------------------------------------------------------------------------------
"
   {? UPG_REAL.STAN='N' & UPG_REAL.UPG_TASK().REQUIRED='T'
   || 'xwin16.png:72'
   || exec('pusta','#icon')
   ?}
"


\cancel_task
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Zmiana stanu zadań potransferowych
::----------------------------------------------------------------------------------------------------------------------
_auto:=UPG_TASK.AUTO='T';
_manu:=~_auto & UPG_TASK.REQUIRED='N';
_stan:=UPG_TASK.STAN;
_firm:=UPG_TASK.FIRM;
_refLogN:=exec('FindInSet','#table','UPG_LOG','END','N');
_refLogX:=exec('FindInSet','#table','UPG_LOG','END','X');
_arun:=_refLogN<>null() | _refLogX<>null();

_wykonane:=(';TW'*_stan)>1;
_czesciowo:=_stan='W' & _firm='N' & exec('end_prev','zws',_auto,UPG_TASK.ref());
_ok:=_manu | exec('cancel_ctrl','zws',_auto,_wykonane,UPG_TASK.ref());

{? _ok
|| {? _auto
   ||
::    formuły uruchamiane automatycznie
      _tekst:={? _wykonane || 'Niewykonane' || 'Wykonane' ?};
      _select:={? _czesciowo
               || {? _arun
                  || FUN.choice('Aktualnie trwa przetwarzanie zadań potransferowych.\n\n'
                                'Czy przerwać przetwarzanie zadań,\n'
                                'a następnie zmienić stan zadania oraz kolejnych zadań jednofirmowych?'@,
                               ,'Wykonane'@,'Niewykonane'@,'Bieżące: Wykonane'@)
                  || FUN.choice('Czy zmienić stan zadania oraz kolejnych zadań jednofirmowych?'@,
                               ,'Wykonane'@,'Niewykonane'@,'Bieżące: Wykonane'@)
                  ?}
               || {? _arun
                  || {? _wykonane
                     || FUN.ask('Aktualnie trwa przetwarzanie zadań potransferowych.\n\n'
                                'Czy przerwać przetwarzanie zadań,\n'
                                'a następnie zmienić stan zadania oraz kolejnych zadań na %1?'@[_tekst])
                     || FUN.choice('Aktualnie trwa przetwarzanie zadań potransferowych.\n\n'
                                   'Czy przerwać przetwarzanie zadań,\n'
                                   'a następnie zmienić stan zadania na %1?'@[_tekst],
                                  ,'Bieżące i &kolejne'@,'&Bieżące'@)
                     ?}
                  || {? _wykonane
                     || FUN.ask('Czy zmienić stan zadania oraz kolejnych zadań na %1?'@[_tekst])
                     || FUN.choice('Czy zmienić stan zadania na %1?'@[_tekst],
                                  ,'Bieżące i &kolejne'@,'&Bieżące'@)
                     ?}
                  ?}
               ?};
      {? _select
      || _only:={? ~_wykonane & ~_czesciowo || _select=2 |? _czesciowo || _select=3 || 0 ?};
         _ref:=UPG_TASK.ref();
         UPG_TASK.cntx_psh();
         UPG_REAL.cntx_psh();
         UPG_MSG.cntx_psh();
         UPG_TASK.index('SYSTEM2');
         UPG_TASK.prefix('T');
         {? UPG_TASK.first() & UPG_TASK.seek(_ref)
         || do();
            _oki:=1;
            {? _arun || exec('end_upgrade','zws') ?};
            {!
            |? _zmien:={? _czesciowo
                       || {? UPG_TASK.FIRM='N' || 1 || _oki:=0; 0 ?}
                       || 1
                       ?};
               _nowait:={? (_czesciowo & (_select%*2)=1) | ~_wykonane
                        || exec('waitRun','#upgrade',UPG_TASK.SYSTEM)
                        || 1
                        ?};
               {? ~_nowait
               || _oki:=0
               |? _zmien
               || _stan:={? _czesciowo
                         || {? (_select%*2)=1 || 'T' || 'N' ?}
                         || {? _wykonane || 'N' || 'T' ?}
                         ?};
                  UPG_REAL.index('TASK');
                  UPG_REAL.prefix(UPG_TASK.ref());
                  {? UPG_REAL.first()
                  || {!
                     |? UPG_REAL.STAN:=_stan;
                        _inf:='N';
                        {? _stan='T'
                        || _inf:='U'
                        || {? UPG_REAL.ERROR=1  || _inf:='E'
                           |? UPG_REAL.ERROR=2  || _inf:='W'
                           |? UPG_REAL.STAN='N' || _inf:='N'
                           || UPG_MSG.cntx_psh();
                              UPG_MSG.index('UPG_REAL');
                              UPG_MSG.prefix(UPG_REAL.ref());
                              _inf:={? UPG_MSG.first() & (10+UPG_MSG.OPIS)='Programowe' || 'P' || 'T' ?};
                              UPG_MSG.cntx_pop()
                           ?}
                        ?};
                        UPG_REAL.INFRES:=_inf;
                        {? ~UPG_REAL.put(1)
                        || _oki:=0;
                           undo()
                        |? UPG_REAL.STAN='N'
                        || UPG_MSG.index('UPG_REAL');
                           UPG_MSG.prefix(UPG_REAL.ref());
                           {? UPG_MSG.first() || {! |? UPG_MSG.del() !} ?}
                        ?};
                        UPG_REAL.next()
                     !}
                  ?};
                  {? _oki
                  || UPG_TASK.get();
                     UPG_TASK.STAN:=_stan;
                     UPG_TASK.MANEND:={? UPG_TASK.STAN='T' || 'T' || 'N' ?};
                     _inf:='N';
                     {? UPG_TASK.MANEND='T'
                     || _inf:='U'
                     || UPG_REAL.cntx_psh();
                        UPG_REAL.index('TASK');
                        UPG_REAL.prefix(UPG_TASK.ref());
                        {? UPG_REAL.first()
                        || {? UPG_REAL.find_tab('first','INFRES',,'=','E') || _inf:='E'
                           |? UPG_REAL.find_tab('first','INFRES',,'=','W') || _inf:='W'
                           |? UPG_REAL.find_tab('first','INFRES',,'=','T') || _inf:='T'
                           |? UPG_REAL.find_tab('first','INFRES',,'=','P') || _inf:='P'
                           ?}
                        ?};
                        UPG_REAL.cntx_pop()
                     ?};
                     UPG_TASK.INFRES:=_inf;
                     {? ~UPG_TASK.put(1)
                     || _oki:=0;
                        undo()
                     ?}
                  ?}
               ?};
               _oki & {? _only || 0 || UPG_TASK.next() ?}
            !};
            end()
         ?};
         UPG_TASK.cntx_pop();
         UPG_REAL.cntx_pop();
         UPG_MSG.cntx_pop()
      ?}
   ||
::    formuły manualne
      _tekst:={? _wykonane || 'Niewykonane' || 'Wykonane' ?};
      _select:={? _czesciowo
               || {? _arun
                  || FUN.choice('Aktualnie trwa przetwarzanie zadań potransferowych.\n\n'
                                'Czy przerwać przetwarzanie zadań,\n'
                                'a następnie zmienić stan zadania?'@,
                                ,'Wykonane'@,'Niewykonane'@)
                  || FUN.choice('Czy zmienić stan zadania?'@,
                                ,'Wykonane'@,'Niewykonane'@)
                  ?}
               || {? _arun
                  || FUN.ask('Aktualnie trwa przetwarzanie zadań potransferowych.\n\n'
                             'Czy przerwać przetwarzanie zadań,\n'
                             'a następnie zmienić stan zadania na %1?'@[_tekst])
                  || FUN.ask('Czy zmienić stan zadania na %1?'@[_tekst])
                  ?}
               ?};
      {? _select
      || _stan:={? _czesciowo
                || {? _select=1 || 'T' || 'N' ?}
                || {? _wykonane || 'N' || 'T' ?}
                ?};
         UPG_TASK.cntx_psh();
         UPG_REAL.cntx_psh();
         do();
         _oki:=1;
         {? _arun || exec('end_upgrade','zws') ?};
         UPG_REAL.index('TASK');
         UPG_REAL.prefix(UPG_TASK.ref());
         {? UPG_REAL.first()
         || {!
            |? UPG_REAL.STAN:=_stan;
               _inf:='N';
               {? _stan='T'
               || _inf:='U'
               || {? UPG_REAL.ERROR=1  || _inf:='E'
                  |? UPG_REAL.ERROR=2  || _inf:='W'
                  |? UPG_REAL.STAN='N' || _inf:='N'
                  || UPG_MSG.cntx_psh();
                     UPG_MSG.index('UPG_REAL');
                     UPG_MSG.prefix(UPG_REAL.ref());
                     _inf:={? UPG_MSG.first() & (10+UPG_MSG.OPIS)='Programowe' || 'P' || 'T' ?};
                     UPG_MSG.cntx_pop()
                  ?}
               ?};
               UPG_REAL.INFRES:=_inf;
               {? ~UPG_REAL.put(1) || _oki:=0; undo() ?};
               UPG_REAL.next()
            !}
         ?};
         {? _oki
         || UPG_TASK.get();
            UPG_TASK.STAN:=_stan;
            UPG_TASK.MANEND:={? UPG_TASK.STAN='T' || 'T' || 'N' ?};
            _inf:='N';
            {? _stan='T'
            || _inf:='U'
            || UPG_REAL.cntx_psh();
               UPG_REAL.index('TASK');
               UPG_REAL.prefix(UPG_TASK.ref());
               {? UPG_REAL.first()
               || {? UPG_REAL.find_tab('first','INFRES',,'=','E') || _inf:='E'
                  |? UPG_REAL.find_tab('first','INFRES',,'=','W') || _inf:='W'
                  |? UPG_REAL.find_tab('first','INFRES',,'=','T') || _inf:='T'
                  |? UPG_REAL.find_tab('first','INFRES',,'=','P') || _inf:='P'
                  ?}
               ?};
               UPG_REAL.cntx_pop()
            ?};
            UPG_TASK.INFRES:=_inf;
            {? ~UPG_TASK.put(1) || _oki:=0; undo() ?}
         ?};
         end();
         UPG_TASK.cntx_pop();
         UPG_REAL.cntx_pop()
      ?}
   ?}
|| FUN.info('Niemożliwa zmiana stanu zadania.\nNieprawidłowa kolejność zmiany stanu.'@)
?};
1


\cancel_ctrl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Sprawdza czy można zmienić stan danego zadania
::   WE: _a - czy automatyczne 1-tak 0-nie
::       _b - aktualny stan 1-wykonane 0-nie
::       _c - ref UPG_TASK
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
UPG_TASK.cntx_psh();
_system:='';

{? _a
|| UPG_TASK.index('SYSTEM2');
   UPG_TASK.prefix('T');
   {? UPG_TASK.first() & UPG_TASK.seek(_c)
   || _system:=UPG_TASK.SYSTEM;
      {? _b
      || _res:=1;
         {? UPG_TASK.prev() || _res:=(';TW'*UPG_TASK.STAN)>1 ?}
      || _res:=1;
         {? UPG_TASK.prev() || _res:=(';T'*UPG_TASK.STAN)>1 ?}
      ?}
   ?};
:: kontrola realizacji zadań manualnych
   {? _res
   || UPG_TASK.index('REQUIRED');
      UPG_TASK.prefix('N','T');
      {? _b
      || {? UPG_TASK.find_tab('first','SYSTEM',,'>=',_system,'STAN',,'<>','N')
         || _res:=0
         ?}
      || {? UPG_TASK.find_tab('first','SYSTEM',,'<',_system,'STAN',,'<>','T')
         || _res:=0
         ?}
      ?}
   ?}
|| UPG_TASK.index('REQUIRED');
   UPG_TASK.prefix('N','T');
   {? UPG_TASK.first() & UPG_TASK.seek(_c)
   || _system:=UPG_TASK.SYSTEM;
      {? _b
      || _res:=1;
         UPG_TASK.cntx_psh();
         {? UPG_TASK.prev() || _res:=(';TW'*UPG_TASK.STAN)>1 ?};
         UPG_TASK.cntx_pop();
         {? _res & UPG_TASK.next() || _res:=(';N'*UPG_TASK.STAN)>1 ?}
      || _res:=1;
         {? UPG_TASK.prev() || _res:=(';T'*UPG_TASK.STAN)>1 ?}
      ?}
   ?};
:: kontrola realizacji zadań automatycznych
   {? _res
   || UPG_TASK.index('SYSTEM2');
      UPG_TASK.prefix('T');
      {? _b
      || {? UPG_TASK.find_tab('first','SYSTEM',,'>',_system,'STAN',,'<>','N')
         || _res:=0
         ?}
      || {? UPG_TASK.find_tab('first','SYSTEM',,'<=',_system,'STAN',,'<>','T')
         || _res:=0
         ?}
      ?}
   ?}
?};
UPG_TASK.cntx_pop();
_res


\zws_umo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.14]
:: OPIS: Obszar umów
::----------------------------------------------------------------------------------------------------------------------
Udt:=1;
_tab:=UDT;
_arf:="
   exec('udt_zal_ar','rozrach');
   PROJEKTY.index('UDT');
   {? UDT.get()
   || PROJEKTY.prefix(REF.FIRMA,UDT.ref())
   || PROJEKTY.prefix(null,null)
   ?};
   {? UDT.ZAK='N'
   || PROJEKTY.actions('UDT',,,1)
   || PROJEKTY.actions('UDT','DU:D',,1)
   ?};
   grp_disp(PROJEKTY,'UDT')
";
_grp:=_tab.grp_make(,"",'#udtgrp',,,"exec('exit','zws',_a)");
ROZNE.UDT_ZAK:='N';
exec('udt_add_win','zws_udt',_tab,_grp,_arf);
:: projekty
_tab.grp_splt(_grp,,'horizontal','bottom',20);
_tab.grp_sel(_grp,PROJEKTY,'UDT','Projekty'@);
task_attach('ZWS_PAR_KPRP');
task_attach('ZWS_PAR_KPRR');
:: załaczniki
exec('udt_add_zal_win','zws_udt',_tab,_grp);
UDT.win_sel(_grp);
AreaTitle.setTabWin(_tab,_grp);
AreaTitle.setTitle();
SSTALE.AO:=__PARSES.getVal('OkresRodzaj').OKRO_F;
SSTALE.AR:=SSTALE.AO().ROK;
OPERATOR.DEPT:=__PARSES.getVal('JednostkaKsięgowa').REF;
exec('czytaj','#stalesys',,XINFO,'SLUMTYP','SLUMRODZ','SLUMKAT');
KH.win_dict('WER_ROZ');
KH.win_sel('WER_ROZ');
KH.actions('WER_ROZ','R');
_params:=params_get();

{? type_of(_params)>0 & var_pres('LINK',_params)>0
|| _link:=_params.LINK
|| _link:=''
?};
:: Obsługa linku
{? _link<>''
||
   UDT.cntx_psh();
   UDT.prefix();
   {? ref_tab(_link)=UDT & UDT.seek(_link)
   ||
      ROZNE.UDT_ZAK:='';
      exec('udt_zakres','zws_udt');
      UDT.select(,1,5,,,,1)
   ||
      FUN.info('Nie odnaleziono umowy \n%1.'@[exec('record','#to_string',_link)])
   ?};
   UDT.cntx_pop()
||
   UDT.select()
?};

KH.actions('WER_ROZ');
VAR_DEL.delete('Udt')


\end_prev
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Sprawdza czy poprzednie zadanie zostało zakończone
::   WE: _a - czy automatyczne 1-tak 0-nie
::       _b - ref UPG_TASK
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
UPG_TASK.cntx_psh();

{? _a
|| UPG_TASK.index('SYSTEM2');
   UPG_TASK.prefix('T');
   {? UPG_TASK.first() & UPG_TASK.seek(_b)
   || _res:=1;
      {? UPG_TASK.prev() || _res:=UPG_TASK.STAN='T' ?}
   ?}
|| UPG_TASK.index('REQUIRED');
   UPG_TASK.prefix('N','T');
   {? UPG_TASK.first() & UPG_TASK.seek(_b)
   || _res:=1;
      {? UPG_TASK.prev() || _res:=UPG_TASK.STAN='T' ?}
   ?}
?};
UPG_TASK.cntx_pop();
_res


\initColUpg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Wymusza odtworzenie kolorów jeżeli brak zapisu dla UPG_REAL
::----------------------------------------------------------------------------------------------------------------------
{? exec('FindInSet','#table','KOLTMP','INDEX1','UPG_REAL#01',app_info('app_user'))=null()
|| no_msg(1);
   exec('odtw_kolor_iko','color',1);
   no_msg(0)
?};
~~


\zws_zas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Obszar zasobów
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('chk_role','#b__box',OPERATOR.USER,'ZWS_POJ_DSPL') & ~exec('chk_role','#b__box',OPERATOR.USER,'ZWS_POJ_EDIT') &
   ~exec('chk_role','#b__box',OPERATOR.USER,'ZWS_SIM_DSPL') & ~exec('chk_role','#b__box',OPERATOR.USER,'ZWS_SIM_EDIT') &
   ~exec('chk_role','#b__box',OPERATOR.USER,'ZWS_TRE_PZAS') & ~exec('chk_role','#b__box',OPERATOR.USER,'ZWS_TRE_DZAS')
|| FUN.info(
      'Brak uprawnień do czynności przeglądania lub edycji danych pojazdów, kart SIM lub zasobów remontowych.'@
   );
   return(0)
?};

_p700701:=exec('get','#params',700701);

exec('SRD','object');
exec('init','tre');
_env_zasoby:=exec('env_zasoby_remontowe','zasoby');
_env_rem_zgl:=exec('env','remonty_zgloszenia',0);
_env_rem_cykl:=exec('env','remonty_cykliczne');
exec('icon_before','remonty_cykliczne','WER');
exec('icon_before','remonty_zgloszenia','WERC');
exec('rem_zasp_win_fml','zasoby');

params_set('env_zasoby',_env_zasoby
            ,'env_rem_zgl',_env_rem_zgl
            ,'env_rem_cykl',_env_rem_cykl
            ,'env_blob',_env_zasoby.env_blob);

exec('rem_zas_view_act','zasoby',0);

__PARSES.setEnv('FKS',0);
exec('czytaj','#stalesys',,FINFO);
exec('czytaj','#stalesys',,XINFO);
exec('projekty_jorg','zasoby_wspolne');
exec('normy_emisji','zasoby_wspolne');
exec('rodzaje_paliw','zasoby_wspolne');
OSOBA.win_sel('SLO'); OSOBA.win_dict('SLO');
SRSR.cntx_psh(); SRSR.use('srsrr'+REF.FIRMA().SYMBOL); SRSR.prefix();
SRST.cntx_psh(); SRST.use('srstr'+REF.FIRMA().SYMBOL); SRST.prefix();
SRDT.cntx_psh(); SRDT.use('srdtr'+REF.FIRMA().SYMBOL); SRDT.prefix();
SRSR.win_sel('WER'); SRSR.win_dict('WER');
JM.win_sel('WER2'); JM.win_dict('WER2');
M_IMG.win_sel('WER'); M_IMG.win_dict('WER');
M_LABEL.win_sel('WER'); M_LABEL.win_dict('WER');
MAR.win_sel('WER'); MAR.win_dict('WER');
OSOBA.win_sel('SLO'); OSOBA.win_dict('SLO');
POJMODEL.win_sel('WER'); POJMODEL.win_dict('WER');
PAL_NORM.win_sel('WER'); PAL_NORM.win_dict('WER');
SPAL.win_sel('WER'); SPAL.win_dict('WER');
POJTYPY.win_sel('WER'); POJTYPY.win_dict('WER');
SAMDELTY.win_sel('WER'); SAMDELTY.win_dict('WER');
POJAZDY.index('DISP1'); POJAZDY.prefix(REF.FIRMA); POJAZDY.win_edit('RED');
NRKRTSIM.index('DISP'); NRKRTSIM.prefix(REF.FIRMA); NRKRTSIM.win_edit('RED');
PozFZas:=1; CurTab:=1; CurrRemZasBottom:=1;
POZF.win_sel('WERZEDI');
POZF.fld_opt(POZF.win_sel('?'),'col_name="%1"'[HELPJPK.KOL_CEN],POZF,'C');
REM_CZYT.win_sel('WER');

_rem_win:=exec('rem_zas_windows','zasoby');

:: ikony
_form:="{? ZASOB_ZM.ZAL || exec('zalacznik','icon') || '' ?}";
ZASOB_ZM.win_fml('WER1',ZASOB_ZM,'OSOBA','NAZWISKO','ICON_BEFORE',_form);
ZASOB_ZM.win_fml('WER2',ZASOB_ZM,'OSOBA','NAZWISKO','ICON_BEFORE',_form);
_form:="
   DOKUM.cntx_psh();
   DOKUM.index('DOKUM');
   DOKUM.prefix(REF.FIRMA,$POJAZDY.ref());
   _wy:={? DOKUM.size() || exec('zalacznik','icon') || exec('pusta','#icon') ?};
   DOKUM.cntx_pop();
   _wy
";
POJAZDY.win_fml('WER',POJAZDY,'NAZ',,'ICON_BEFORE',_form);
_form:="
   DOKUM.cntx_psh();
   DOKUM.index('DOKUM');
   DOKUM.prefix(REF.FIRMA,$NRKRTSIM.ref());
   _wy:={? DOKUM.size() || exec('zalacznik','icon') || exec('pusta','#icon') ?};
   DOKUM.cntx_pop();
   _wy
";
NRKRTSIM.win_fml('WER',NRKRTSIM,'NR_KARTY',,'ICON_BEFORE',_form);
_form:="
   REM_ZASA.cntx_psh();
   REM_ZASA.index('REM_ZAS');
   REM_ZASA.prefix(REM_ZAS.ref());
   _res:={? REM_ZASA.size() || exec('zalacznik','icon') || exec('pusta','#icon') ?};
   REM_ZASA.cntx_pop();
   _res
";
REM_ZAS.win_fml('WER',,'NAZWA',,'ICON_BEFORE',_form);
REM_ZAS.win_fml('WER_SLO',,'NAZWA',,'ICON_BEFORE',_form);
REM_ZAS.win_fml('WERT',,'NAZWA',,'ICON_BEFORE',_form);

_form:="
   REM_GWAZ.cntx_psh();
   REM_GWAZ.index('REM_GWAR');
   REM_GWAZ.prefix(REM_GWAR.ref());
   _res:={? REM_GWAZ.size() || exec('zalacznik','icon') || exec('pusta','#icon') ?};
   REM_GWAZ.cntx_pop();
   _res
";
REM_GWAR.win_fml('WER',,'SYMBOL',,'ICON_BEFORE',_form);

exec('rem_zas_set_fml','zasoby');

::======
_formula:="
   _env:=params_get().env_zasoby;
   _p700701:=exec('get','#params',700701);
   {? _p700701='T'
   || tab_hide({? _env.REM_ZAS_VIEW || 3 || 4 ?},1,'panel0');
      tab_show({? _env.REM_ZAS_VIEW || 4 || 3 ?},'panel0')
   || tab_hide(4,1,'panel0');
      tab_show(3,'panel0')
   ?};
   ~~
";
_okn_grp:=POJAZDY.grp_make('',_formula,'zasoby_sel',,,"exec('exit','zws','Esc')");
:: 1. zakładka panel0 - Pojazdy
POJAZDY.grp_sel(_okn_grp,POJAZDY,'WER','Pojazdy'@,"params_exec('arfr_zasoby','zasoby_wspolne',1)",,,,
   "exec('bv_zasoby','zasoby_wspolne',1)",,,,'maximized'
);
task_attach('ZWS_POJ_DSPL');
task_attach('ZWS_POJ_EDIT');

:: 2. zakładka penel0 - Numery kart SIM
POJAZDY.grp_sel(_okn_grp,NRKRTSIM,'WER','Numery kart SIM'@,"params_exec('arfr_zasoby','zasoby_wspolne',2)",,,,
   "exec('bv_zasoby','zasoby_wspolne',2)",,,,'maximized'
);
task_attach('ZWS_SIM_DSPL');
task_attach('ZWS_SIM_EDIT');

:: 3. zakładka panel0 - Zasoby remontowe (widok płaski z filtrami)
_before:="
   params_exec('rem_zas_zakres_act','zasoby',0);
   exec('bv_zasoby','zasoby_wspolne',3);
   ~~
";
_after_rfr:="
   params_set(params_get());
   exec('rem_zas_after_rfr','zasoby');
   ~~
";
REM_ZAS.actions('WER',{? _p700701='N' || 'O' || '' ?}+'BF(LZ)');
POJAZDY.grp_sel(_okn_grp,REM_ZAS,'WER','Zasoby remontowe'@,_after_rfr,,,,_before,"",,,'maximized','REM_ZAS_WER');
task_attach('ZWS_TRE_PZAS');
task_attach('ZWS_TRE_DZAS');

:: 4. zakładka panel0 - Zasoby remontowe (widok w drzewie)
REM_ZAS.actions('WERT','BF(LZ)');
POJAZDY.grp_sel(_okn_grp,REM_ZAS,'WERT','Zasoby remontowe'@,_after_rfr,,,,_before,"",,,'maximized','REM_ZAS_WERT');
task_attach('ZWS_TRE_PZAS');
task_attach('ZWS_TRE_DZAS');

::======
POJAZDY.grp_splt(_okn_grp,,'horizontal','bottom',20);
:: 1. zakładka bottom - Zmiany w zasobach (dla pojazdów)
_before:="
   {? grp_empty(POJAZDY,'WER')
   || '#disable'
   || POJAZDY.r_lock(1,1);
      exec('bobs_zm_zas','zasoby_wspolne',1)
   ?}
";
_after:="
   POJAZDY.r_unlock();
   1
";
POJAZDY.grp_sel(_okn_grp,ZASOB_ZM,'WER1','Zmiany w zasobach'@,,,,,_before,_after,,,'maximized_with_title'
);
task_attach('ZWS_POJ_DSPL');
task_attach('ZWS_POJ_EDIT');

:: 2. zakładka bottom - Zmiany w zasobach (dla numerów kart SIM)
_before:="
   {? grp_empty(NRKRTSIM,'WER')
   || '#disable'
   || NRKRTSIM.r_lock(1,1);
      exec('bobs_zm_zas','zasoby_wspolne',2)
   ?}
";
_after:="
   NRKRTSIM.r_unlock();
   1
";
POJAZDY.grp_sel(_okn_grp,ZASOB_ZM,'WER2','Zmiany w zasobach'@,,,,,_before,_after,,,'maximized_with_title'
);
task_attach('ZWS_SIM_DSPL');
task_attach('ZWS_SIM_EDIT');

:: 3. zakładka bottom - Pozycja faktur (dla pojazdów i numerów kart SIM)
_before:="
   CurTab:=3;
   ~~
";
POZF.fld_opt(POZF.win_sel('?'),'col_name="%1"'[HELPJPK.KOL_CEN],POZF,'C');
POJAZDY.grp_sel(_okn_grp,POZF,POZF.win_sel('?'),'Pozycje faktur'@,,,,,_before,,,,'maximized_with_title');
task_attach('FKS_DKS_ZDOK');
task_attach('FKS_DKS_DARK');

:: 4. zakładka bottom - Zgłoszenia remontowe (dla zasobów remontowych)
_env_zasoby.CUR_TAB:='Zgłoszenia remontowe';
_before:="
   params_set(params_get());
   _env:=params_get().env_zasoby;
   _env.CUR_TAB:='Zgłoszenia remontowe';
   exec('rem_zas_after_rfr','zasoby',0);
   _env.DISABLE
";
_after_rfr:="
   params_set(params_get());
   exec('rem_zgl_zas_after_rfr','remonty_zgloszenia');
   ~~
";
POJAZDY.grp_sel(_okn_grp,REM_ZGL,'WERC','Zgłoszenia remontowe'@,_after_rfr,,,,_before,,,,'maximized');
task_attach('TRE_ZGL_DZGL');
task_attach('TRE_ZGL_PZGL');

:: 5. zakładka bottom - Planowane zdarzenia - harmonogram (dla zasobów remontowych)
_before:="
   params_set(params_get());
   _env:=params_get().env_zasoby;
   _env.CUR_TAB:='Planowane zdarzenia - harmonogram';
   exec('rem_zas_after_rfr','zasoby',0);
   _env.DISABLE
";
_after_rfr:="
   params_set(params_get());
   ~~
";
REM_HARM.actions('WER_H','DPU:D');
POJAZDY.grp_sel(_okn_grp,REM_HARM,'WER_H','Planowane zdarzenia — harmonogram'@,_after_rfr,,,,_before,,,,'maximized');
task_attach('TRE_CKL_DCKL');
task_attach('TRE_CKL_GCKL');

:: 6. zakładka bottom - Planowane zdarzenia - przebiegi (dla zasobów remontowych)
_before:="
   params_set(params_get());
   _env:=params_get().env_zasoby;
   _env.CUR_TAB:='Planowane zdarzenia - przebiegi';
   exec('rem_zas_after_rfr','zasoby',0);
   _env.DISABLE
";
_after_rfr:="
   params_set(params_get());
   ~~
";
REM_HARM.actions('WER_P','DPU:D');
POJAZDY.grp_sel(_okn_grp,REM_HARM,'WER_P','Planowane zdarzenia — przebiegi'@,_after_rfr,,,,_before,,,,'maximized');
task_attach('TRE_CKL_DCKL');
task_attach('TRE_CKL_GCKL');

:: 7. zakładka bottom - Osoby użytkujące (dla zasobów remontowych)
_before:="
   params_set(params_get());
   _env:=params_get().env_zasoby;
   _env.CUR_TAB:='Osoby użytkujące zasób';
   exec('rem_zas_after_rfr','zasoby',0);
   _env.DISABLE
";
_after_rfr:="
   params_set(params_get());
   ~~
";
POJAZDY.grp_sel(_okn_grp,REM_ZASU,'WER','Osoby użytkujące zasób'@,_after_rfr,,,,_before,,,,'maximized');

:: 8. zakładka bottom - Gwarancje (dla zasobów remontowych)
_before:="
   params_set(params_get());
   _env:=params_get().env_zasoby;
   _env.CUR_TAB:='Gwarancje';
   exec('rem_zas_after_rfr','zasoby',0);
   _env.DISABLE
";
_after_rfr:="
   params_set(params_get());
   ~~
";
POJAZDY.grp_sel(_okn_grp,REM_GWAR,'WER','Gwarancje'@,_after_rfr,,,,_before,,,,'maximized');

:: 9. zakładka bottom - Przebiegi zasobu (dla zasobów remontowych)
_before:="
   params_set(params_get());
   _env:=params_get().env_zasoby;
   _env.CUR_TAB:='Przebiegi';
   exec('rem_zas_after_rfr','zasoby',0);
   _env.DISABLE
";
_after_rfr:="
   params_set(params_get());
   ~~
";
POJAZDY.grp_sel(_okn_grp,REM_ZASP,'WER','Przebiegi'@,_after_rfr,,,,_before,,,,'maximized');

:: 10. zakładka bottom - Załączniki (dla zasobów remontowych)
_before:="
   params_set(params_get());
   _env:=params_get().env_zasoby;
   _env_blob:=params_get().env_blob;
   _env.CUR_TAB:='Załączniki';
   exec('rem_zas_after_rfr','zasoby',0);
   _env.DISABLE
";
_after_rfr:="
   params_set(params_get());
   ~~
";
POJAZDY.grp_ctr(_okn_grp,SYSLOG,_env_zasoby.env_blob.WIN_MAIN,,'Załączniki'@,_after_rfr,,,,,_before,,,'maximized');

:: 11. zakładka bottom - Problemy produkcyjne powiązane z zasobem (jeśli jest stanowiskiem produkcyjnym)
_before:="
   params_set(params_get());
   _env:=params_get().env_zasoby;
   _env.CUR_TAB:='Problemy produkcyjne';
   exec('ek_prob_after_rfr','zl_wkj',0);
   _env.DISABLE
";
_after_rfr:="
   params_set(params_get());
   ~~
";
EK_PROB.actions('WER','Z:');
POJAZDY.grp_sel(_okn_grp,EK_PROB,'WER','Problemy produkcyjne'@,_after_rfr,,,,_before,,,,'maximized');
task_attach('TTE_WKJ_DPRO');
task_attach('TTE_WKJ_EPRO');
::======

POJAZDY.win_sel(_okn_grp);
::POJAZDY.hdr_sel(); POJAZDY.hdr_sel(' - %1'[SSTALE.AO().NAZ+' '+SSTALE.AO().ROK().NAZ]);
AreaTitle.setTabWin(POJAZDY,_okn_grp);
AreaTitle.setTitle();
exec('set_title','zasoby_wspolne');

:: Ustalenie treści linku
_params:=params_get();
{? type_of(_params)>0 & var_pres('LINK',_params)
|| _link:=_params.LINK
|| _link:=''
?};

:: Obsługa linku
{? _link<>'' & ref_tab(_link)=REM_ZAS
|| _ini_zas:=exec('FindAndGet','#table',REM_ZAS,_link,,"ref()",null());
   {? _ini_zas=null()
   || FUN.info('Brak zasobu o identyfikatorze %1.'@[_link])
   || {? REM_ZAS.seek(_ini_zas)
      || {? _p700701='T'
         || {? _env_zasoby.REM_ZAS_VIEW
            || _id:='REM_ZAS_WERT'
            || _id:='REM_ZAS_WER'
            ?}
         || _id:='REM_ZAS_WER'
         ?};
         POJAZDY.select(,1,5,,_id,,1)
      ?}
   ?}
:: Obsługa standardowa
|| POJAZDY.select()
?};

SRSR.cntx_pop(); SRST.cntx_pop(); SRDT.cntx_pop();
1


\done
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Sprawdza, czy transfer z Xpertis na Merit został wykonany
::   WE:
::   WY: 1 - wykonano transfer lub start zerowy
::       0 - transfer wymagany a nie wykonany
::----------------------------------------------------------------------------------------------------------------------
{? sql('select KAL_NAZW.NAZWA from KAL_NAZW where KAL_NAZW.FIRMA is null').first() |
   sql('select ZZ_HIST.DATA from ZZ_HIST where ZZ_HIST.FIRMA is null').first()
|| 0
|| 1
?}


\upgrade
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Formuła do przełączenia pomiędzy firmami współdzielona obsługująca zadania
::----------------------------------------------------------------------------------------------------------------------
{? +app_info('web_sesid')
|| {? exec('env_wt_core','#web_srv')
   || exec('select_user_www','#bi_todo');
      web_ses_close()
   ?}
||
   exec('start_proces','b_proces',-1);
:: ustawienie kontekstu dokumentacji
   _path:=exec('set_help','#help','proc:todo');
   _jTerm:=app_info('web_sesid')='';
   {? _jTerm || set_help(_path) || web_set_help(_path) ?};

   exec('zws_upg','zws')
?};
~~


\ctrlFirms
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Formuła kontrolująca zmianę aktywności firm
::   WY: aktualny stan firm
::----------------------------------------------------------------------------------------------------------------------
_res:=255*'0';
_rs:=sql('select FIRMA.SYMBOL as KOD, FIRMA.OPIS as NAZWA, FIRMA.A as AKT from FIRMA '
         'where (FIRMA.TYP=\'S\' or FIRMA.SYMBOL=\'000\') and FIRMA.Z=\'N\' order by 1,2');
{? _rs.first()
|| {!
   |? _nr:=(#_rs.KOD)+1;
      {? _rs.AKT='T' | _rs.AKT='' || _res:=((_nr-1)+_res)+'1'+(_nr-_res) ?};
      _rs.next()
   !}
?};
_res


\plugins_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Selekcja wtyczek wdrożeniowych w obszarze administracji (poprzedzona zainicjowaniem mechanizmu)
::----------------------------------------------------------------------------------------------------------------------
exec('Plugin','#object');
exec('init','plugins');
exec('select','#plugins');
''


\transfer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [19.22]
:: OPIS: Formuła wykonująca transfer danych
::   WE: [_a] [STRING] - Nazwa pliku z listą systemów (*.itg) [domyślnie: systems.itg]
::       [_b] [STRING] - Ścieżka do pliku z kopią danych (*.zip) [domyślnie: merit_rrrrmmdd_ggmmss.zip]
::       [_c] [STRING] - Ścieżka do katalogu konfiguracyjnego serwera. Parametr niezbędny pod Linuxem, jeżeli serwer
::                       nie używa domyślnej wartości parametru "synchr_num".
::       [_d] [NUMBER] - Czy tworzyć kopię bazy danych przed transferem [0*/1].
::   WY: Tablica nazwana z polami:
::       STATUS   - Wynik operacji: 0 - porażka / 1 - sukces.
::       TEXT     - Przyczyna porażki, lub nazwa utworzonej kopii.
::----------------------------------------------------------------------------------------------------------------------
_itg:={? var_pres('_a')=type_of('') & _a<>'' || _a || 'systems.itg' ?};
_cfg:={? var_pres('_c')=type_of('') & _c<>'' || _c || pth_dir('macro.cfg') ?};
_copy:={? var_pres('_d')=type_of(0) & _d=0 || '-nocopy' || '' ?};
_sep:=exec('sep','#file',2);
_workdir:=exec('workdir','%transfer');
{? _copy<>'-nocopy'
||
   _zip:=
   {? var_pres('_b')=type_of('') & _b<>''
   || _b
   || _spli_pth:=spli_str(pth_dir(),_sep);
      _len:=obj_len(_spli_pth);
      _pth:=pth_dir()-(+_spli_pth[_len]+ +_spli_pth[_len-1]+1);
      {? fexists(_pth+'backups')<>2 || fmkdir(_pth,'backups') ?};
      _pat:=obj_new(3);
      _rep:=obj_new(3);
      _pat[1]:='/'; _rep[1]:='';
      _pat[2]:=' '; _rep[2]:='_';
      _pat[3]:=':'; _rep[3]:='';
      '../../backups/merit_'+gsub(tm_form(tm_stamp()),_pat,_rep)+'.zip'
   ?}
||
   _zip:=''
?};
_fret:=
   "  _ret:=obj_new('STATUS','COMMAND','TEXT');
      _ret.STATUS:=_a;
      _ret.COMMAND:=_b;
      _ret.TEXT:=_c;
      _ret
   ";

_itg:=pth_dir(_itg)+_sep+_itg;
{? ~fexists(_itg,0)
|| return(_fret(0,'Brak dostępu do pliku %1.'@[_itg]))
?};
_file_pth:=_workdir+_sep+'transfer_result.txt';
exec('destroy_struct','#buf');
_cmd:=
   {? sys_name(1)='U_LINUX'
|| {? exec('czy_mapnew','zws')=''
   || 'sh -c \"%1/MacroADMIN %2 -transfer %3 %4 %5 > %6\"'[exe_dir(1),{? _cfg='' || '' || '-p'+_cfg ?},_copy,_itg,_zip,_file_pth]
   || 'sh -c \"%1/MacroADMIN %2 -transfer-map %3 %4 %5 > %6\"'[exe_dir(1),{? _cfg='' || '' || '-p'+_cfg ?},_copy,_itg,_zip,_file_pth]
   ?}
|| {? exec('czy_mapnew','zws')=''
   || envget('COMSPEC')+' /c ' + '\"\"%1madmin.exe\" -transfer %2 \"%3\" %4 > "%5"'[exe_dir(1)+_sep,_copy,_itg,
      {? _zip <>'' || '"'+_zip+'"' || '' ?},_file_pth]+'"'
   || envget('COMSPEC')+' /c ' + '\"\"%1madmin.exe\" -transfer-map %2 \"%3\" %4 > "%5"'[exe_dir(1)+_sep,_copy,_itg,
      {? _zip <>'' || '"'+_zip+'"' || '' ?},_file_pth]+'"'
   ?}
?};
{? fexists(_file_pth)=0
|| _err:=system(_cmd,1)
?};
:: gdy wykonano transfer operacja na bazie zatrzyma działanie
SYSLOG.first();
::   odczytanie wyniku transferu
_conv:=iconv('UTF-8');
{? fexists(_file_pth)
|| _file:=fopen(_file_pth,'r',0,,1);
   {? _file.is_open()
   || _tran_res:='';
      {! |?
         _line:=_file.fread();
         {? _line<>'\n'
         || {? sys_name(1)='WINDOWS'
            || _line:=STR.s852maz(_line)
            |? sys_name(1)='U_LINUX'
            || _line:=_conv.from(_line)
            ?};
            _tran_res+=_line+'\n'
         ?};
         _line<>'\n'
      !};
      _file.fclose()
   || _tran_res:='Błąd odczytu pliku z wynikiem transferu: '+_file_pth
   ?};
   ferase(_file_pth)
||
   _tran_res:='Brak pliku z wynikiem transferu: '+_file_pth
   ?};
:: sprawdzamy czy plik przed transferem dalej istnieje
{? exec('czy_transfer','zws')=0
|| {? exec('czy_mapnew','zws')<>''
   || exec('delete_mapnew','zws')
   ?};
   _txt:={? var_press('_tran_res')=type_of('') || _tran_res || '' ?};
   _cmd:=255-_cmd;
   _fret(1,_cmd,_txt)
||
   _txt:={? var_press('_tran_res')=type_of('') || '\n'+_tran_res || '' ?};
   _cmd:=255-_cmd;
   _fret(0,_cmd,_txt)
?}


\czy_transfer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [19.22]
:: OPIS: Formuła sprawdzająca czy jest nowa definicja systemu
::   WY: Czy jest plik merit.new
::----------------------------------------------------------------------------------------------------------------------
_sep:=exec('sep','#file',2);
_file:=pth_dir('merit.def')+_sep+'merit.new';

_wyn:=fexists(_file,0);
_wyn


\czy_zmieniono_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [19.42]
:: OPIS: Formuła sprawdzająca czy są pliki i różnią się rozmiarem
::   WY: 1 tak, 0 - nie
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_new_size:=exec('plik_size','#file',pth_dir('merit.def')+exec('sep','#file')+'transfer'+exec('sep','#file'),'merit.new');
_def_size:=exec('plik_size','#file',pth_dir('merit.def')+exec('sep','#file'),'merit.def');
{? _new_size>0 & _def_size>0
|| _wyn:=_new_size<>_def_size
?};
_wyn


\kopiowanie_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [19.42]
:: OPIS: Formuła kopiuje plik merit.new
::   WY: 1 tak skopiowano, 0 - nie, -1 nie zmieniono defa
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? exec('czy_zmieniono_def','zws')
||
   _source:=pth_dir('merit.def')+exec('sep','#file')+'transfer'+exec('sep','#file')+'merit.new';
   _dest:=pth_dir('merit.def')+exec('sep','#file')+'merit.new';
   _wyn:=fcopy(_source,_dest,0,0,1)
||
   _wyn:=-1
?};
_wyn


\aktualizacja_svn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [19.42]
:: OPIS: Aktualizacja SVN
::   WE: [_a] - pth gdzie zainstalowany jest Tortoise
::       [_b] - pth gdzie ma być aktualizowany katalog
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>2 || _a:='' ?}  || _a:='' ?};
{? _>=2  || {? type_of(_b)<>2 || _b:='' ?}  || _b:='' ?};
_pth_tortois:={? _a<> '' || _a || 'C:\\Program Files\\TortoiseSVN\\bin\\' ?};
:: ustala ścieżkę na podstawie położenia pliku macro.use (zadziała tylko przy standardowych pth)
_pth_svn:={? _b<>'' || _b || pth_dir('macro.use')-4 ?};
_sep:=exec('sep','#file',2);
_cmd:=
   {? sys_name(1)='U_LINUX'
   ||
      'svn update '+_pth_svn
   || _pth_tortois+'TortoiseProc.exe /command:update /path:"'+_pth_svn+'" /closeonend:2'
   ?};
_err:=system(_cmd,1);
1


\exit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [19.42]
:: OPIS: Formuła na zamknięcie obszaru roboczego przy użyciu klawisza 'ESC'
::   WE: [_a] [STRING] - 'Esc' przekazywany przy wciśnięciu klawisza lub 'sel_exit' w innych przypadkach
::   WY: 0 - okienko nie zostanie zamknięte
::       1 - okno zostanie zamknięte
::----------------------------------------------------------------------------------------------------------------------
USERS.cntx_psh();
USERS.prefix();
{? USERS.seek(OPERATOR.USER)
||
   _zzz:=USERS.ZZZ
||
   _zzz:=0
?};
USERS.cntx_pop();

{? (_&(_a<>'Esc')&_a<>'Close')|_zzz=0 |BEER.ESC
||
   1
||
   FUN.ask('Czy zamknąć bieżącą zakładkę?'@,,'@'+'UWAGA'@)
?}


\zam_zak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [19.42]
:: OPIS: Wyświetlanie okienka redagowania w któym można ustawić czy przy kliknięciu 'Esc' ma pojawić się okienko
::  z pytaniem o zamknęcie zakładki
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
USERS.cntx_psh();
USERS.prefix();
{? USERS.seek(OPERATOR.USER)
||
   USERS.win_edit('POR');
   {? USERS.edit()
   ||
      USERS.put()
   ?}
?};
USERS.cntx_pop()


\par_split_paym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.22_03]
:: OPIS: Parametry split payment
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,XINFO,'SP_KW','SP_F_ZAL');
XINFO.win_edit('SP_KW');
{? XINFO.edit()
|| exec('zapisz','#stalesys',1,XINFO,'SP_KW','SP_F_ZAL')
?}


\link_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Obsługa parametrów dla odsyłaczy -
::       - adresem serwera zwracany w wystawianych odsyłaczach
::       - port serwera zwracany w wystawianych odsyłaczach
::   WY: 0/1 - czy zakończono redgowanie parametru z zapisem
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
exec('czytaj','#stalesys',,XINFO,'LINK_SRV','LINK_PRT','LINK_INT');
XINFO.win_edit('LINK_PAR');
{? XINFO.edit("exec('valid_link_address','zws',0)")
|| exec('zapisz','#stalesys',1,XINFO,'LINK_SRV','LINK_PRT','LINK_INT');
   _result:=1
?};
_result


\hint_link_address
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Podpowiedź adresu i portu do generowania odsyłaczy
::----------------------------------------------------------------------------------------------------------------------
{? exec('interm','#system')
|| FUN.emsg(exec('interm_nacc_msg','#system'));
   return('')
?};
_server:=exec('server','#system');
:: Jeżeli powyższa funkcja zwróci lokalny komputer, jest wysoce prawdopowodne
:: że poprawny jest adres zewnętrzny sieci w której jestem
{? _server.address='localhost' | _server.address='127.0.0.1'
|| _inet:=inet_get('https://icanhazip.com');
   {? type_of(_inet)>100
   || _result:=_inet.http_get();
      {? _result=200
      || _server.address:=gsub(_inet.get_data(),'\n','')
      || return('')
      ?}
   || return('')
   ?}
?};
{? XINFO.LINK_SRV<>'' | XINFO.LINK_PRT<>0
|| {? FUN.ask(
         'Czy na pewno wypełnić parametry wartościami domyślnymi?\n\n'
         'Adres: %1\n'
         'Port: %2'@
         [_server.address,_server.port]
      )
   || XINFO.LINK_SRV:=_server.address;
      XINFO.LINK_PRT:=#_server.port
   ?}
|| XINFO.LINK_SRV:=_server.address;
   XINFO.LINK_PRT:=#_server.port
?};
''


\valid_link_address
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Walidacja adresu i portu do generowania odsyłaczy
::   WE: [_a] - czy funkcja 'Waliduj' [1], czy kontrola dla okna 'OK' (0)
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _valid:=_a || _valid:=1 ?};
_result:='';

{? XINFO.LINK_SRV='localhost' | XINFO.LINK_SRV='127.0.0.1'
|| FUN.info('Należy wpisać inny adres niż lokalny.'@);
   _result:='LINK_SRV'
|? XINFO.LINK_SRV<>'' & XINFO.LINK_PRT=0
|| FUN.info('Należy podać zewnętrzny port serwera.'@);
   _result:='LINK_PRT'
|? exec('itsPositive','#field',1,,XINFO.LINK_PRT)=0
|| _result:='LINK_PRT'
?};
{? _result=''
|| {? XINFO.LINK_INT<>''
   || {? 7+XINFO.LINK_INT<>'http://' & 8+XINFO.LINK_INT<>'https://'
      || FUN.emsg('Adres musi się zaczynać od: %1 lub %2'@['http://','https://']);
         _result:='LINK_INT'
      ?};
      {? _result=''
      || {? XINFO.LINK_INT+1='/'
         || FUN.emsg('Adres nie może się kończyć znakiem: \'%1.\''@['/']);
            _result:='LINK_INT'
         ?}
      ?};
      {? _result=''
      || _address:=XINFO.LINK_INT;
         _address:=gsub(_address,'https://','');
         _address:=gsub(_address,'http://','');
         {? _address<>''
         || _split:=spli_str(_address,':');
            _len:=obj_len(_split);
            {? _len>1
            || _port:=_split[_len];
               {? #_port=0
               || FUN.emsg('Nieprawidłowy port.'@);
                  _result:='LINK_INT'
               ?};
               ~~
            ?}
         ?}
      ?};
      {? _result=''
      || {? exec('valid_link_int','zws',XINFO.LINK_INT)=0
         || FUN.emsg('Nieprawidłowy adres: \'%1.\'. Walidacja adresu za pomocą funkcji \'%2\' zakończona niepowodzeniem.'@[XINFO.LINK_INT,'win_link']);
            _result:='LINK_INT'
         ?}
      ?}
   ?}
?};

KOMM.init(250,,'Walidacja adresów dla odsyłaczy');
{? _result='' & _valid>0
|| {? exec('interm','#system')
   || FUN.emsg('Walidacja zewnętrznego adresu serwera nie została przeprowadzona:\n%1'@[exec('interm_nacc_msg','#system')])
   ||
      _dsn:=odbc_dsn(1);
      {? _dsn<>''
      || _server:=exec('server','#system');
         _dsn:=gsub(_dsn,'ASADDRESS=%1;'[_server.address],'ASADDRESS=%1;'[XINFO.LINK_SRV]);
         _dsn:=gsub(_dsn,'ASPORT=%1;'[_server.port],'ASPORT=%1;'[$XINFO.LINK_PRT]);
         _obj:=odbc_con(_dsn);
         {? var_pres('_obj')>100
         || KOMM.add('Nawiązano połączenie z systemem docelowym desktop (%1:%2).'@[XINFO.LINK_SRV,$XINFO.LINK_PRT],1);
            _result:=''
         || KOMM.add('Nie udało się nawiązać połączenia z systemem docelowym desktop (%1:%2).'@[XINFO.LINK_SRV,$XINFO.LINK_PRT],3);
            _result:='LINK_SRV'
         ?}
      || KOMM.add('Nie udało się nawiązać połączenia z systemem docelowym desktop (%1:%2).'@[XINFO.LINK_SRV,$XINFO.LINK_PRT],3);
         _result:='LINK_SRV'
      ?}
   ?};
   {? _valid>0 &  XINFO.LINK_INT<>''
   || _inet:=inet_get(XINFO.LINK_INT);
      {? type_of(_inet)>100
      || _msg:=no_msg(1);
         _result:=_inet.http_get();
         {? _result=200
         || KOMM.add('Nawiązano połączenie z systemem docelowym http (%1).'@[XINFO.LINK_INT],1)
         || KOMM.add('Nie udało się nawiązać połączenia z systemem docelowym http (%1).'@[XINFO.LINK_INT],3);
            _result:='LINK_INT'
         ?};
         no_msg(_msg)
      ?}
   ?}
?};
KOMM.select();

{? _valid || '' || _result ?}


\valid_link_int
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Walidacja adresu LINK_INT za pomocą funkcji win_link
::   WE: _a - STRING - adres który zwalidować
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_address:=_a;

_result:=1;

{? _address<>''
||
   _wer:=KH.mk_sel(,,1);
   errno();
   _no_msg:=no_msg(1);
   on_error(2);
   KH.win_link(_wer,"
      _a:=obj_new('LINK');
      _a.LINK:=KH.uidref();
      _a
   ",_address);
   _error:=errno();
   no_msg(_no_msg);
   on_error();
   {? _error
   || _result:=0
   ?};
   KH.win_link(_wer,"",'')
?};
_result


\analizy_bi_log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Parametry logowania do analiz BI
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
:: sprawdzenie dostępności zmiennych
_constAvail:=(var_pres('XINFO')>0 & var_pres('ANBI_AM',XINFO)>0 & var_pres('ANBI_URL',XINFO)>0
   & var_pres('ANBI_QUD',XINFO)>0);
{? _constAvail || exec('czytaj','#stalesys',,XINFO,'ANBI_AM','ANBI_URL','ANBI_QUD') || return(_result) ?};
:: sprawdzenie możliwości edycji okienka
_editable:=sec_superuser() & exec('auth_domain','#b__box','BIQ','Q');

_fUrl_bd:="_isAuth:=exec('auth_domain','#b__box','BIQ','Q');
           {? ~_isAuth | (_isAuth & XINFO.ANBI_AM='N')
           || XINFO.efld_opt('ABLOG','editable=grayed',,'ANBI_URL')
           || XINFO.efld_opt('ABLOG','editable=1',,'ANBI_URL')
           ?}
          ";
_fQud_bd:="_isAuth:=exec('auth_domain','#b__box','BIQ','Q');
           {? ~_isAuth | (_isAuth & XINFO.ANBI_AM='N')
           || XINFO.efld_opt('ABLOG','editable=grayed',,'ANBI_QUD')
           || XINFO.efld_opt('ABLOG','editable=1',,'ANBI_QUD')
           ?}
          ";
_fAm_ae:="_isAuth:=exec('auth_domain','#b__box','BIQ','Q');
          {? ~_isAuth | (_isAuth & XINFO.ANBI_AM='N')
          || XINFO.efld_opt('ABLOG','editable=grayed',,'ANBI_URL');
             XINFO.efld_opt('ABLOG','editable=grayed',,'ANBI_QUD')
          || XINFO.efld_opt('ABLOG','editable=1',,'ANBI_URL');
             XINFO.efld_opt('ABLOG','editable=1',,'ANBI_QUD')
          ?}
         ";
_fAm_bl:="{? exec('auth_domain','#b__box','BIQ','Q')
          || _sys:=exec(,'__sysusr',1);
             _user:=_sys.getUser();
             {? _user.Auth.Ldap.Active || 'T' || 'N' ?}
          || 'N'
          ?}
         ";
_fLoc:="{? XINFO.ANBI_AM='T' & (XINFO.ANBI_URL*'localhost' | XINFO.ANBI_URL*'127.0.0.1')
        || FUN.info('Należy wpisać adres URL niebędący adresem lokalnym.'@); 0
        || 1
        ?}
       ";

_savedFmls:=exec('save_fml_all','#field',XINFO);
XINFO.win_edit('ABLOG');
XINFO.efld_opt('ABLOG','editable=%1'[{? _editable || $_editable || 'grayed' ?}]);
XINFO.fld_fml('ANBI_URL','BEFORE_DISPLAY',_fUrl_bd);
XINFO.fld_fml('ANBI_QUD','BEFORE_DISPLAY',_fQud_bd);
XINFO.fld_fml('ANBI_AM','BLANK',_fAm_bl);
XINFO.fld_fml('ANBI_AM','AFTER_EDIT',_fAm_ae);
{? XINFO.edit(_fLoc) & _editable
|| exec('zapisz','#stalesys',1,XINFO,'ANBI_AM','ANBI_URL','ANBI_QUD');
   _result:=1
?};
exec('restore_fml_all','#field',XINFO,_savedFmls);
_result


\analizy_bi_cert
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Parametry certyfikatu do analiz BI
:: ~OST: INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
:: sprawdzenie dostępności zmiennych
_constAvail:=(var_pres('XINFO')>0 & var_pres('ANBI_AM',XINFO)>0 & var_pres('ANBI_CER',XINFO)>0
   & var_pres('ANBI_PSW',XINFO)>0);
{? _constAvail || exec('czytaj','#stalesys',,XINFO,'ANBI_CER','ANBI_PSW','ANBI_AM') || return(_result) ?};
:: sprawdzenie możliwości edycji okienka
_editable:=sec_superuser() & XINFO.ANBI_AM='T' & exec('auth_domain','#b__box','BIQ','Q');

_fChoose:="_filePath:='';
           ctr_set('!application', 'filechooser','reset');
           ctr_set('!application', 'filechooser','addDefaultFilter','Pliki certyfikatu .pfx', 'pfx');
           _ret:=ctr_call('!application', 'filechooser','showOpenDialog');
           {? _ret || _filePath:=ctr_call('!application', 'filechooser','getSelectedFile') ?};
           _filePath
          ";

_savedFmls:=exec('save_fml_all','#field',XINFO);
{? ~exec('interm','#system')
|| XINFO.fld_fml('ANBI_CER','F3',_fChoose)
?};
XINFO.fld_fml('ANBI_PSW','BEFORE_DISPLAY',"0");
XINFO.win_edit('ABCRT');
XINFO.efld_opt('ABCRT','editable=%1'[{? _editable || $_editable || 'grayed' ?}],,'ANBI_CER');
XINFO.efld_opt('ABCRT','editable=%1'[{? _editable || '0' || 'grayed' ?}],,'ANBI_PSW');
XINFO.btn_eopt('ABCRT','Edytuj','state=%1'[{? _editable || 'normal' || 'grayed' ?}]);
{? XINFO.edit() & _editable
|| exec('zapisz','#stalesys',1,XINFO,'ANBI_CER');
   _result:=1
?};
exec('restore_fml_all','#field',XINFO,_savedFmls);
_result


\analizy_bi_lic
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: zarządzanie licencjami qlik
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
:: sprawdzenie dostępności zmiennych
_constAvail:=(var_pres('XINFO')>0 & var_pres('ANBI_AM',XINFO)>0 & var_pres('ANBI_CER',XINFO)>0
   & var_pres('ANBI_PSW',XINFO)>0);
{? _constAvail || exec('czytaj','#stalesys',,XINFO,'ANBI_CER','ANBI_PSW','ANBI_AM') || return(_result) ?};
:: sprawdzenie możliwości edycji okienka
_editable:=sec_superuser() & XINFO.ANBI_AM='T' & exec('auth_domain','#b__box','BIQ','Q');
{? _editable || exec('okno','abi'); _result:=1 ?};
_result


\par_zatory
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.14]
:: OPIS: Parametry zatorów płatniczych
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,XINFO,'L_D_POZ','L_D_PUB');
XINFO.win_edit('ZATORY');
{? XINFO.edit("{? XINFO.L_D_PUB<0
      || FUN.info('Liczba dni nie może być ujemna.'@); 'L_D_PUB'
            |? XINFO.L_D_POZ<0
      || FUN.info('Liczba dni nie może być ujemna.'@); 'L_D_POZ'
      || ''
      ?}")
|| exec('zapisz','#stalesys',1,XINFO,'L_D_POZ','L_D_PUB')
?}


\get_act_for_perm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [19.22]
:: OPIS: Role i czynności wynikające z uprawnienia do danej
::----------------------------------------------------------------------------------------------------------------------
_tmpTab:=tab_tmp(1,
            'NAMEROL','STRING[60]','Rola',
            'UID','STRING[12]','Identyfikator czynności',
            'NAME','STRING[60]','Nazwa czynności'

         );
_tmpTab.erase();

B_USRROL.cntx_psh();
B_USRROL.index('USER'); B_USRROL.prefix(REF.FIRMA,USERS.ref());
{? B_USRROL.first()
|| {!
   |? B_ACTROL.cntx_psh();
      B_ACTROL.index('S1');
      B_ACTROL.prefix(B_USRROL.B_ROLE);
      {? B_ACTROL.first()
      || {!
         |? B_PERM_A.cntx_psh();
            B_PERM_A.index('B_ACTION'); B_PERM_A.prefix(); B_PERM_A.prefix(B_ACTROL.B_ACTION,B_PERM_U.B_PERM);
            {? B_PERM_A.first()
            || {!
               |? _tmpTab.blank(1);
                  _tmpTab.NAMEROL:=B_ACTROL.B_ROLE().NAME;
                  _tmpTab.UID:=B_PERM_A.B_ACTION().UID;
                  _tmpTab.NAME:=B_PERM_A.B_ACTION().NAME;
                  _tmpTab.add();

                  B_PERM_A.next()
               !}
            ?};
            B_PERM_A.cntx_pop();
            B_ACTROL.next()
         !}
      ?};
      B_ACTROL.cntx_pop();
      B_USRROL.next()
   !}
?};
B_USRROL.cntx_pop();

_title:='Czynności i role z uprawnienia';
_o:=_tmpTab.mk_sel(_title,'P',,'#userperm4',,,,,'U','T');
_tmpTab.win_fld(_o,,'NAMEROL',,,25,,,,,'Rola'@);
_tmpTab.win_fld(_o,,'UID',,,,,,,,'Identyfikator czynności'@);
_tmpTab.win_fld(_o,,'NAME',,,20,,,,,'Nazwa czynności'@);
_tmpTab.win_sel(_o);
_tmpTab.select();
~~


\refresh_task
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Odświeżenie definicji zadań potransferowych
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Uwaga.\n'
           'Funkcja odświeżenia definicji formuł potransferowych wymaga ponownego uruchomienia\n'
           'przetwarzania kolejek na serwerze.\n'
           'W przypadku, gdy aktywny jest proces aktualizacji systemu, zostanie on uruchomiony ponownie.\n\n'
           'Czy odświeżyć definicję formuł potransferowych?'@)
|| _txt:='Trwa odświeżenie - wyłączenie kolejek na serwerze ... 1/3'@;
   progress(30,_txt,'Odświeżenie zadań potransferowych'@,0);
   UPG_TASK.cntx_psh();
   exec('none_S_IDTIME','#upgrade');
   exec('cgi_enable_disable','#b_worker',0);
   _txt:='Trwa odświeżenie - włączenie kolejek na serwerze ... 2/3'@;
   progress(60,_txt,'Odświeżenie zadań potransferowych'@,0);
   exec('cgi_enable_disable','#b_worker',1);
   _txt:='Trwa odświeżenie - podczytanie definicji ... 3/3'@;
   progress(75,_txt,'Odświeżenie zadań potransferowych'@,0);
   exec('refresh','#upgrade');
   UPG_TASK.cntx_pop();
   prgs_clr()
?};
~~


\kkh_lic
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [21.14]
:: OPIS: Formuła sprawdzająca licencję dla obszaru KKH
::   WY: 'T' - jest licencja, 'N' - nie ma licencji
::----------------------------------------------------------------------------------------------------------------------
_result:='N';
_domain:=exec('domain_ref','#b_domain','KKH');
{? _domain<>null()
|| {? exec('lic','#b_domain',_domain)=1
   || _result:='T'
   ?}
?};
_result


\czy_mapnew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [20.42]
:: OPIS: Sprawdza, czy jest obecny plik .mapnew
::   WE:
::   WY: '' - nie znaleziono pliku .mapnew
::       w przeciwnym wypadku nazwa znalezionego pliku .mapnew
::----------------------------------------------------------------------------------------------------------------------
_tab:=fdir(pth_dir('merit.def'));
_result:='';
{? _tab.first()
|| {!
   |? {? _tab.NAME+6='mapnew'
      || _result:=_tab.NAME
      ?};
      _tab.next() & _result=''
   !}
?};
_result


\delete_mapnew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [20.42]
:: OPIS: Sprawdza, czy jest obecny plik .mapnew. Jeżeli jest, to zamienia jego nazwę na .mapold
::   WE:
::   WY: '' - nie znaleziono pliku .mapnew
::       w przeciwnym wypadku nazwa znalezionego pliku .mapnew
::----------------------------------------------------------------------------------------------------------------------
_tab:=fdir(pth_dir('merit.def'));
_filenew:='';
{? _tab.first()
|| {!
   |? {? _tab.NAME+6='mapnew'
      || _filenew:=_tab.NAME;
         _fileold:=(_filenew-6)+'mapold';
         _dir:=_tab.DIR;
         _sep:=exec('sep','#file');
         {? fcopy(_dir+_sep+_filenew,_dir+_sep+_fileold,0,0,1)
         || ferase(_dir+_sep+_filenew,0)
         ?}
      ?};
      _tab.next() & _filenew=''
   !}
?}


\zws_wdr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Główna formuła obszarów ZWS_W?? - Obszary wdrożeniowe
::----------------------------------------------------------------------------------------------------------------------
{? Plugin.runnable('WDR_AREA_INIT_001')
|| _formula:=Plugin.run('WDR_AREA_INIT_001',AreaTitle.area);
   {? type_of(_formula)=type_of("")
   ||
::    Ustawiam domyślny tytuł dla obszaru
      exec('AreaTitle','#object');
      AreaTitle.setArea(AreaTitle.area);
      AreaTitle.setTitle();
      _formula()
   ?}
|| FUN.info('Nie zdefiniowano formuły dla wtyczki WDR_AREA_INIT_001.\nObszar zostanie zamknięty.'@)
?};
~~


\upg_version_t_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Formuła ikony dla VERSION
::----------------------------------------------------------------------------------------------------------------------
"
   {? (1+UPG_TASK.UPG_HEAD().SYMBOL)='q'
   || 'xwin16.png:100'
   || exec('pusta','#icon')
   ?}
"


\upg_version_r_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Formuła ikony dla VERSION
::----------------------------------------------------------------------------------------------------------------------
"
   {? (1+UPG_REAL.UPG_TASK().UPG_HEAD().SYMBOL)='q'
   || 'xwin16.png:100'
   || exec('pusta','#icon')
   ?}
"


\upg_mail
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PD] [22.26]
:: OPIS: Formuła tworząca treść maila o nieprzetworzonych zadaniach potransferowych
::   WE: _a - zadanie manulane 'T'/'N'
::----------------------------------------------------------------------------------------------------------------------
_manual:={? var_press('_a')=type_of('') || _a || 'N' ?};
_mail:='';
{? var_press('__app_domains')>100 || obj_del(__app_domains) ?};
VAR_DEL.delete('__app_domains','__domains');
__app_domains:=app_info('domain_lic');
__domains:='';
__app_domains.for_each(
"
__domains+=__app_domains.SYMBOL+';'
"
);
_domains:=__domains;
{? var_press('__app_domains')>100 || obj_del(__app_domains) ?};
VAR_DEL.delete('__app_domains','__domains');

UPG_TASK.cntx_psh();
UPG_TASK.index('STAN');
B_DOMAIN.cntx_psh();
{? _manual<>'T'
||
   UPG_TASK.prefix('T','W',);
   {? UPG_TASK.first()
   ||
      {!|?
         {? _domains*UPG_TASK.B_DOMAIN().SYMBOL
         || _mail+='Zadanie automatyczne %1 - %2 nie zostało wykonane'[UPG_TASK.SYMBOL, UPG_TASK.SYSTEM];
            UPG_REAL.cntx_psh();
            FIRMA.cntx_psh();
            UPG_REAL.index('TASKSTAN');
            UPG_REAL.prefix(UPG_TASK.ref(),'N');
            {? UPG_REAL.first()
            ||
               {? UPG_REAL.FIRMA().SYMBOL<>'' || _mail+=' dla firmy:' || '. '?};
               {!|?
                  _mail+=UPG_REAL.FIRMA().SYMBOL + ', ';
                  UPG_REAL.next()
               !};
               _mail:=_mail-2;
               _mail+='.\n'
            ||
               _mail+='. '
            ?};
            UPG_REAL.cntx_pop();
            FIRMA.cntx_pop()
         ?};
         UPG_TASK.next()
      !}
   ?};
   UPG_TASK.prefix('T','N',);
   {? UPG_TASK.first()
   ||
      {!|?
         {? _domains*UPG_TASK.B_DOMAIN().SYMBOL
         || _mail+='Zadanie automatyczne %1 - %2 nie zostało wykonane'[UPG_TASK.SYMBOL, UPG_TASK.SYSTEM];
            UPG_REAL.cntx_psh();
            FIRMA.cntx_psh();
            UPG_REAL.index('TASKSTAN');
            UPG_REAL.prefix(UPG_TASK.ref(),'N');
            {? UPG_REAL.first()
            ||
               {? UPG_REAL.FIRMA().SYMBOL<>'' || _mail+=' dla firmy:' || '. '?};
               {!|?
                  _mail+=UPG_REAL.FIRMA().SYMBOL + ', ';
                  UPG_REAL.next()
               !};
               _mail:=_mail-2;
               _mail+='.\n'
            ||
               _mail+='. '
            ?};
            UPG_REAL.cntx_pop();
            FIRMA.cntx_pop()
         ?};
         UPG_TASK.next()
      !}
   ?}
||
   UPG_TASK.prefix('N','W',);
   {? UPG_TASK.first()
   ||
      {!|?
         {? _domains*UPG_TASK.B_DOMAIN().SYMBOL
         || _mail+='Zadanie ręczne %1 - %2 nie zostało wykonane'[UPG_TASK.SYMBOL, UPG_TASK.SYSTEM];
            UPG_REAL.cntx_psh();
            FIRMA.cntx_psh();
            UPG_REAL.index('TASKSTAN');
            UPG_REAL.prefix(UPG_TASK.ref(),'N');
            {? UPG_REAL.first()
            ||
               {? UPG_REAL.FIRMA().SYMBOL<>'' || _mail+=' dla firmy:' || '. '?};
               {!|?
                  _mail+=UPG_REAL.FIRMA().SYMBOL + ', ';
                  UPG_REAL.next()
               !};
               _mail:=_mail-2;
               _mail+='.\n'
            ||
               _mail+='. '
            ?};
            UPG_REAL.cntx_pop();
            FIRMA.cntx_pop()
         ?};
         UPG_TASK.next()
      !}
   ?};
   UPG_TASK.prefix('N','N',);
   {? UPG_TASK.first()
   ||
      {!|?
         {? _domains*UPG_TASK.B_DOMAIN().SYMBOL
         || _mail+='Zadanie ręczne %1 - %2 nie zostało wykonane'[UPG_TASK.SYMBOL, UPG_TASK.SYSTEM];
            UPG_REAL.cntx_psh();
            FIRMA.cntx_psh();
            UPG_REAL.index('TASKSTAN');
            UPG_REAL.prefix(UPG_TASK.ref(),'N');
            {? UPG_REAL.first()
            ||
               {? UPG_REAL.FIRMA().SYMBOL<>'' || _mail+=' dla firmy:' || '. '?};
               {!|?
                  _mail+=UPG_REAL.FIRMA().SYMBOL + ', ';
                  UPG_REAL.next()
               !};
               _mail:=_mail-2;
               _mail+='.\n'
            ||
               _mail+='. '
            ?};
            UPG_REAL.cntx_pop();
            FIRMA.cntx_pop()
         ?};
         UPG_TASK.next()
      !}
   ?}
?};
UPG_TASK.cntx_pop();
B_DOMAIN.cntx_pop();
_mail


\upg_mail_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Mail o nieprzetworzonych zadaniach potrasferowych
::   WE: _a - zadanie manulane 'T'/'N'
::----------------------------------------------------------------------------------------------------------------------
:: Wartości UPG_FIRM.END
:: Podstawowe  Aut.  Man.  Aut.+Man.
:: T           B     C     D
:: N           E     F     G
:: X           M     P     R

_upg_m:={? var_pres('_a')=type_of('') || _a || 'N' ?};

_tm_serv:=server_start_idtime();
UPG_LOG.cntx_psh();
UPG_FIRM.cntx_psh();
UPG_FIRM.index('UPG_LOG');
{? REF.FIRMA=null()
|| REF.FIRMA:=exec('firma_ref','#firma',app_info('app_ident'))
?};
UPG_FIRM.prefix(_tm_serv,REF.FIRMA);
_put:=0;

{? UPG_FIRM.first()
||
   {? _upg_m='T' & ~('CFPDGR'*UPG_FIRM.END)
   ||
      UPG_FIRM.END:=exec('upg_firm_end','#upgrade','C'); _put:=1
   |? _upg_m='N' & ~('BEMDGR'*UPG_FIRM.END)
   ||
      UPG_FIRM.END:=exec('upg_firm_end','#upgrade','B'); _put:=1
   ?};
   {? _put || UPG_FIRM.put(1) ?}
?};
UPG_LOG.cntx_pop();
UPG_FIRM.cntx_pop();

{? _put || exec('upg_mail','zws',_upg_m) || '' ?}


\analizy_biq_ctrl_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [22.26]
:: OPIS: Formułka wołająca kontrolkę umieszczoną na zakładce z Analizami BI dla Materiałów.
::----------------------------------------------------------------------------------------------------------------------
exec('refreshSheet','analizy_bi','BIQ_MAT_DISM','#:analizy_m','ctr_id');
~~


\analizy_biq_ctrl_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [22.26]
:: OPIS: Formułka wołająca kontrolkę umieszczoną na zakładce z Analizami BI dla Usług.
::----------------------------------------------------------------------------------------------------------------------
exec('refreshSheet','analizy_bi','BIQ_MAT_DISU','#:analizy_u','ctr_id');
~~


\analizy_biq_ctrl_g
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [22.26]
:: OPIS: Formułka wołająca kontrolkę umieszczoną na zakładce z Analizami BI dla Grup usługowo-materiałowych.
::----------------------------------------------------------------------------------------------------------------------
exec('refreshSheet','analizy_bi','BIQ_MAT_DISG','#:analizy_g','ctr_id');
~~


\analizy_bi_json
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [22.26]
:: OPIS: Redakcja pliku qlik2img.json z parametryzacją dla analiz bi w zakładkach obszarowych.
::----------------------------------------------------------------------------------------------------------------------
_port:='0';
_quser:='QlikDomena\\NazwaUsera';
_quserpass:='';
_resx:='1920';
_resy:='540';
_debug:='false';

_json:=fopen('qlik2img.json','Ur',1,0,1);
{? _json.is_open()
||  _def:=json_tparse(_json,,,1,0);
   _def.cntx_psh();
   _ndx:=_def.ndx_tmp(,,'TREE',,);
   _def.index(_ndx);
   {? _def.first()
   ||
::    pobranie wartości z pliku json
     _port:={? _def.find_tab(1,'NAME',,'=','PORT') || _def.VAL || '' ?};
     _quser:={? _def.find_tab(1,'NAME',,'=','USER') || _def.VAL || '' ?};
     _quserpass:={? _def.find_tab(1,'NAME',,'=','PASS') || _def.VAL || '' ?};
     _resx:={? _def.find_tab(1,'NAME',,'=','RESX') || _def.VAL || '' ?};
     _resy:={? _def.find_tab(1,'NAME',,'=','RESY') || _def.VAL || '' ?};
     _debug:={? _def.find_tab(1,'NAME',,'=','DEBUG') || _def.VAL || '' ?}
  ?};
  _def.cntx_pop();
  _def.ndx_drop(_ndx)
?};
undefine();
define('PORT',_port,'Port',,100,50);
define('USER',_quser,'QUser',,100,50);
define('PASS',_quserpass,'QUserPass',,100,50);
define('RESX',_resx,'JxResolutionX',,100,50);
define('RESY',_resy,'JxResolutionY',,100,50);
define('DEBUG',_debug,'Debug',,100,50);

def_btn('text=%1'['OK'@@],"exec('analizy_bi_json_save','zws')");
def_btn('text=%1'['Anuluj'@],'key:Esc');
def_edit(,'Ustawienia Qlik2Img');
~~


\analizy_bi_json_save
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [22.26]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_out:=fopen('qlik2img.json', 'Uw!', 1, 1, 1);
{? ~_out.is_open() || return(_ret) ?};

_tmp:=tab_tmp(1,
   'PORT','STRING[100]','Port',
   'USER','STRING[100]','QUser',
   'PASS','STRING[100]','QUserPass',
   'RESX','STRING[100]','JxResolutionX',
   'RESY','STRING[100]','JxResolutionY',
   'DEBUG','STRING[10]','Debug'
);

_tmp.PORT:=DEFINE.PORT;
_tmp.USER:=DEFINE.USER;
_tmp.PASS:=DEFINE.PASS;
_tmp.RESX:=DEFINE.RESX;
_tmp.RESY:=DEFINE.RESY;
_tmp.DEBUG:=DEFINE.DEBUG;

{? _tmp.add()
|| _tmp.json_records(_out,'PORT',,'USER',,'PASS',,'RESX',,'RESY',,'DEBUG',)
?};
exec('stopQlik2Img','analizy_bi');
delay(2);
exec('runJQlik2Img','analizy_bi');
delay(5);
FUN.info(exec('getStatusQlik2Img','analizy_bi'));
'key:F2'


\mail_task_undone
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [21.37]
:: OPIS: Formuła do technicznej wysyłki maili o stanie wykonania zadań potransferowych,
::       niezależnie od normalnego trybu wysyłki poczty
::   WE: _a - treść maila
::       _b - zadanie manulane 'T'/'N'
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_manual:={? var_press('_b')=type_of('') || _b || 'N' ?};
exec('MAIL','#object');
_args:=exec('add_email_a','#mailbox');
:: pobranie wartości ścieżki do pliku konfiguracyjnego ustawionej w procesie ZWS_TRAN lub ZWS_TREX
_path_tran:=sql('select FMANOUT as PATH from B_PREL
            left join B_PROC using(B_PREL.B_PROC,B_PROC.reference)
            where B_PREL.SYMBOL like \'Ścieżka%do pliku konfiguracyjnego\'
               and B_PROC.SYMBOL=\'ZWS_TRAN\'
               and B_PROC.ACTIVE=\'T\'
               and B_PROC.ACCEPTED=\'T\' ');
_path_tran.first;
{? _path_tran.PATH<>''
|| _path:=($_path_tran.PATH)()
|| _path_trex:=sql('select FMANOUT as PATH from B_PREL
               left join B_PROC using(B_PREL.B_PROC,B_PROC.reference)
               where B_PREL.SYMBOL like \'Ścieżka%do pliku konfiguracyjnego\'
                  and B_PROC.SYMBOL=\'ZWS_TREX\'
                  and B_PROC.ACTIVE=\'T\'
                  and B_PROC.ACCEPTED=\'T\' ');
   _path_trex.first;
   {? _path_trex.PATH<>''
   || _path:=($_path_trex.PATH)()
   || _path:=''
   ?}
?};
_p01:=obj_new('p01');
_p01.p01:=_path;
params_set('in',_p01);
_json:=exec('parse_config_file','%transfer','smtp');
:: Odbiorcy brani w zależności, czy zadania manualne, czy auto. Domyślnie brani z parametru 'mail_address'
_rcvs:='';
{? _manual='T'
|| _rcvs:=exec('parse_config_file','%transfer','manual_m_address')
|| _rcvs:=exec('parse_config_file','%transfer','auto_m_address')
?};
{? _rcvs=''
|| _rcvs:=exec('parse_config_file','%transfer','mail_address')
?};
_rcvs:=gsub(_rcvs,';',',');
{? _rcvs*','
|| _tmp:=spli_str( _rcvs,',');
   _tab_rcv:=tab_tmp(,'ADDRESS','STRING[255]','Adres email');
   {! _i:=1..obj_len(_tmp)
   |! _tab_rcv.ADDRESS:=_tmp[_i];
      _tab_rcv.add()
   !};
   _args.RCV:=_tab_rcv
|| _args.RCV:=_rcvs
?};
_args.FROM:=exec('parse_config_file','%transfer','s_mail_address');
{? _args.FROM=''
|| _args.FROM:=exec('get','#params',700002,2)
?};
_name:=exec('parse_config_file','%transfer','name');
_args.SUB:='[INFO] Po aktualizacji pozostały nieprzetworzone zadania potransferowe';
{? _name<>''
|| _args.SUB+=' na serwerze: '+_name
?};
_srv:=exec('server','#system');
_args.BODYT:=exec('nazwa','#system')+' '+user(10)
             +', silnik: '+user(11)
             +', serwer: '+_srv.address+':'+_srv.port+'\n\n';
_args.BODYT+=_a;
_args.TEMPLATE:='template_error.htm';
:: Generowany mail "techniczny"
_args.TRYB:='X';
_args.SUB_PREFIX:={? _name='' || 1 || 0 ?};
{? exec('add_email','#mailbox',_args)
|| {? _json<>'' || _server:=json_parse(_json) ?};
   {? _json='' | type_of(_server)<>exec('type_of_array','#var') | var_press('ADDRESS',_server)<>type_of('') | _server.ADDRESS=''
   || _res:=exec('em_send_one','#mailbox',_args.REFERENCE)
   || _res:=exec('em_send_one','#mailbox',_args.REFERENCE,,,_server)
   ?}
?};
_res


\control_task
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Ustawienie parametru kontroli wykonania zadań aktualizacyjnych
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
FO_DEF.cntx_psh();
FO_DEF.index('NR');
FO_DEF.prefix('A','N',104102);
{? FO_DEF.first()
|| exec('edit_action','#params',0);
   BPMN.CTRL:={? exec('get','#params',104102,2)='T' || 'T' || 'N' ?}
|| FUN.emsg('Nie znaleziono parametru 104102. Należy odświeżyć listę parametrów.'@);
   BPMN.CTRL:='N'
?};
FO_DEF.cntx_pop();
~~


\unsent_mail_html
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Generuje html z informacjami o stanie skrzynki nadawczej
::   WE: _a - 0/1 czy dodać szczegółową listę błednych maili
::----------------------------------------------------------------------------------------------------------------------
_details:={? var_pres('_a')=type_of(0) || _a || 0 ?};

POCZTA.cntx_psh();
POCZTA.index('DT1');
POCZTA.prefix(REF.FIRMA,'P','N');
_val_1:=POCZTA.size();
_val_2:=0;
_val_3:=0;
{? POCZTA.first()
|| {!
   |? _val_2+={? POCZTA.COUNTER>0 || 1 || 0 ?};
      _val_3+={? POCZTA.COUNTER>=exec('get','#params',700004,1) || 1 || 0 ?};
      POCZTA.next()
   !}
?};
POCZTA.cntx_pop();
_html:='<p style="text-align: center;">Informacja o stanie skrzynki nadawczej:</p>';
_html+='
   <table [[STYLE_TABLE]]>
   <tbody>
   <tr [[STYLE_TABLE_TR]]>
   <td [[STYLE_TABLE_TD]]><strong>Liczba wiadomości oczekujących na wysłanie</strong></td>
   <td [[STYLE_TABLE_TD]]></td>
   <td [[STYLE_TABLE_TD]]></td>
   <td [[STYLE_TABLE_TD]]></td>
   <td [[STYLE_TABLE_TD]]>%1</td>
   </tr>
   <tr [[STYLE_TABLE_TR]]>
   <td [[STYLE_TABLE_TD]]><strong>Liczba wiadomości z problemem wysyłki</strong></td>
   <td [[STYLE_TABLE_TD]]></td>
   <td [[STYLE_TABLE_TD]]></td>
   <td [[STYLE_TABLE_TD]]></td>
   <td [[STYLE_TABLE_TD]]>%2</td>
   </tr>
   <tr [[STYLE_TABLE_TR]]>
   <td [[STYLE_TABLE_TD]]><strong>Liczba wiadomości zablokowanych  do wysyłki</strong></td>
   <td [[STYLE_TABLE_TD]]></td>
   <td [[STYLE_TABLE_TD]]></td>
   <td [[STYLE_TABLE_TD]]></td>
   <td [[STYLE_TABLE_TD]]>%3</td>
   </tr>
   </tbody>
   </table>
'[$_val_1,$_val_2,$_val_3];

{? _details>0
|| _tab:=sql('
      select
         POCZTA.REFERENCE as REF
      from POCZTA
      where POCZTA.FIRMA=:_a and POCZTA.PE=\'P\' and POCZTA.BOX=\'N\' and POCZTA.COUNTER>=:_b and POCZTA.SENDINFO<>\'T\'
   ',REF.FIRMA,exec('get','#params',700004,1));
   {? _tab.first()
   || _html+='<p style="text-align: center;">Nowe wiadomości zablokowane do wysyłki:</p>';
      _html+='
         <table [[STYLE_TABLE]]>
         <tbody>
      ';
      {!
      |? POCZTA.cntx_psh();
         POCZTA.prefix();
         {? POCZTA.seek(_tab.REF)
         || POCZTA.SENDINFO:='T';
            {? POCZTA.put()
            || _html+='
                  <tr [[STYLE_TABLE_TR]]>
                  <td [[STYLE_TABLE_TD]]>%1</td>
                  <td [[STYLE_TABLE_TD]]>%2</td>
                  <td [[STYLE_TABLE_TD]]>%3</td>
                  <td [[STYLE_TABLE_TD]]>%4</td>
                  </tr>
               '[$POCZTA.DT,$POCZTA.TM,POCZTA.SUB,exec('proc_details','#mailbox')]
            ?}
         ?};
         POCZTA.cntx_pop();
         _tab.next()
      !};
      _html+='
         </tbody>
         </table>
      '
   ?}
?};

_html


\unsent_mail
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Formuła do wysyłki raportu o niewysłanych mailach,
::       niezależnie od normalnego trybu wysyłki poczty
::   WE: _a - adres email
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
exec('MAIL','#object');
_args:=exec('add_email_a','#mailbox');
_args.BODYH:=exec('unsent_mail_html','zws',1);
_rcvs:=_a;
_rcvs:=gsub(_rcvs,';',',');
{? _rcvs*','
|| _tmp:=spli_str( _rcvs,',');
   _tab_rcv:=tab_tmp(,'ADDRESS','STRING[255]','Adres email');
   {! _i:=1..obj_len(_tmp)
   |! _tab_rcv.ADDRESS:=_tmp[_i];
      {? _tmp[_i]<>'' || _tab_rcv.add() ?}
   !};
   _args.RCV:=_tab_rcv
|| _args.RCV:=_rcvs
?};
_args.TEMPLATE:='template_info.htm';
_args.SUB:='Informacja o niewysłanych wiadomościach firmy '@ +(exec('czytaj','#stalesys',,XINFO); XINFO.NAZ);
{? exec('add_email','#mailbox',_args) || _res:=exec('em_send_one','#mailbox',_args.REFERENCE) ?};
_res


\b_worker_html
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Generuje html z informacjami o przetworzonych rekordach
::----------------------------------------------------------------------------------------------------------------------
_b_worker:={? var_pres('_a')=type_of(null()) || _a || null() ?};
B_WORKER.cntx_psh();
B_WORKER.index('KOD');
B_WORKER.prefix(REF.FIRMA);
{? ~B_WORKER.first() || B_WORKER.cntx_pop();return('') ?};
{? var_pres('__val')>100 || obj_del(__val) ?};
_sql:='SELECT '+
      '\''+(' '*40)+'\' OPIS, '+
      '\''+(' '*3)+'\' BLK, '+
      '\''+(' '*3)+'\' ENABLED, '+
      '0 ABORTED '+
      'from '+
      'SYSLOG where 1=0 '+
      'order by 1';
__val:=sql(_sql);

{!|?
   __val.OPIS:=B_WORKER.KOD+' - '+B_WORKER.OPIS;
   __val.BLK:={? B_WORKER.ref()=_b_worker
              || 'Tak'
              || {? exec('blk_lock','#table','B_WORKER',B_WORKER.ref(),,1)
                 || exec('blk_unlock','#table','B_WORKER',B_WORKER.ref());
                    'Nie'
                 || 'Tak'
                 ?}
              ?};
   __val.ENABLED:={? B_WORKER.ENABLED='T' || 'Tak' || 'Nie' ?};
   __val.ABORTED:=0;
   B_WRKHST.cntx_psh();
   B_WRKHST.use('b_whs'+REF.FIRMA().SYMBOL);
   B_WRKHST.index('ABORTED');
   B_WRKHST.prefix(B_WORKER.ref(),1,);
   {? B_WRKHST.first()
   ||
      {!|?
         {? B_WRKHST.START>tm_stamp((date-1)~1,(date-1)~2,(date-1)~3,time~1,time~2,time~3) || (__val.ABORTED+=1) & B_WRKHST.next() || 0 ?}
      !}
   ?};
   __val.add(1);
   B_WRKHST.cntx_pop();
   B_WORKER.next()
!};
B_WORKER.cntx_pop();
_html:='';
{? __val.first()
||
   _html:=
      '<p style="text-align: center;">Informacja o przetwarzaniu kolejek z ostatniego dnia:</p>
      <table [[STYLE_TABLE]]>
      <thead>
      <tr [[STYLE_TABLE_TR]]>
      <th [[STYLE_TABLE_TH]]>Kolejka</th>
      <th [[STYLE_TABLE_TH]]>Uruchomiona</th>
      <th [[STYLE_TABLE_TH]]>Wykonywanie element&oacute;w</th>
      <th [[STYLE_TABLE_TH]]>Liczba wycofanych transakcji</th>
      </tr>
      </thead>
      <tbody>
      ';
   {!
   |?
      _html+='
         <tr [[STYLE_TABLE_TR]]>
         <td [[STYLE_TABLE_TD]]>%1</td>
         <td [[STYLE_TABLE_TD]]>%2</td>
         <td [[STYLE_TABLE_TD]]>%3</td>
         <td [[STYLE_TABLE_TD]]>%4</td>
         </tr>'[__val.OPIS,__val.BLK,__val.ENABLED,$__val.ABORTED];
      __val.next()
   !};
   _html+='
      </tbody>
      </table>'
?};
_html+=exec('b_proc_html','zws');
_html


\b_worker_title
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Tytuł maila raportu
::----------------------------------------------------------------------------------------------------------------------
'Informacja o przetwarzaniu kolejek firmy '@ +(exec('czytaj','#stalesys',,XINFO); XINFO.NAZ)


\b_proc_html
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Generuje html z informacjami o uruchomionych procesach
::----------------------------------------------------------------------------------------------------------------------
B_PROC.cntx_psh();
B_PROC.index('FIRMA_AC');
B_PROC.prefix(REF.FIRMA,'T','T','N');
BI_PROC.cntx_psh();
_msk:=BI_PROC.names();
_proc:=0;
_inst:=0;
_problem:=0;
_stop:=0;
_list:='';
_ref_list:='';
{? _msk.first()
||
   {!|?
      BI_PROC.use(_msk.NAME);
      BI_PROC.prefix();
      _tm_stamp:=tm_stamp((date-1)~1,(date-1)~2,(date-1)~3,time~1,time~2,time~3);
      {? B_PROC.first()
      || {!|?
            _ref_proc:=gsub($B_PROC.ref(),' ' ,'');
            _ref_proc:=$B_PROC.ref();
            BI_PROC.f_set('START',,'B_PROC=\':_a\' and START>:_b',_ref_proc,$_tm_stamp);
            _inst+=BI_PROC.f_size();
            {? BI_PROC.f_first()
            || {? ~(_ref_list*$B_PROC.ref()) || _ref_list+=B_PROC.SYMBOL+',';_proc+=1 ?};
               {!|?
                  {? BI_PROC.PROBLEM='T'
                  || _problem+=1;
                     {? ~(_list*B_PROC.SYMBOL) || _list+=B_PROC.SYMBOL+', ' ?}
                  ?};
                  {? BI_PROC.STOP<>0 || _stop+=1 ?};
                  BI_PROC.f_next()
               !}
            ?};
            B_PROC.next()
         !}
      ?};
      {? BI_PROC.f_active() || BI_PROC.f_clear() ?};
      _msk.next()
   !}
?};
B_PROC.cntx_pop();
BI_PROC.cntx_pop();

_html:=
      '<p style="text-align: center;">Informacja o uruchomionych procesach z ostatniego dnia:</p>
      <table [[STYLE_TABLE]]>
      <thead>
      <tr [[STYLE_TABLE_TR]]>
      <th [[STYLE_TABLE_TH]]>Ilość uruchomionych proces&oacute;w</th>
      <th [[STYLE_TABLE_TH]]>Ilość uruchomionych instancji</th>
      <th [[STYLE_TABLE_TH]]>Ilość zakończonych instancji</th>
      <th [[STYLE_TABLE_TH]]>Ilość błęd&oacute;w w procesach</th>
      </tr>
      </thead>
      <tbody>
      <tr [[STYLE_TABLE_TR]]>
      <td [[STYLE_TABLE_TD]]>%1</td>
      <td [[STYLE_TABLE_TD]]>%2</td>
      <td [[STYLE_TABLE_TD]]>%3</td>
      <td [[STYLE_TABLE_TD]]>%4</td>
      </tr>
      </tbody>
      </table>'[$_proc,$_inst,$_stop,$_problem];
{? _list<>''
|| _list:=_list-2;
   _html+=
   '<p>Błędy powstały w następujących procesach: <strong>%1</strong></p>'[_list]
?};
_html


\infres_task
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Formuła ikony dla INFRES
::----------------------------------------------------------------------------------------------------------------------
"
_inf:=UPG_TASK.INFRES;
UPG_TASK.INFRES:='';
{? _inf='N' || 'xwin16.png:6'
|? _inf='T' || 'xwin16.png:10'
|? _inf='W' || 'xwin16.png:19'
|? _inf='E' || 'xwin16.png:81'
|? _inf='P' || 'xwin16.png:12'
|? _inf='U' || 'xwin16.png:20'
|| exec('pusta','#icon')
?}
"


\infres_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Formuła ikony dla INFRES
::----------------------------------------------------------------------------------------------------------------------
"
_inf:=UPG_REAL.INFRES;
UPG_REAL.INFRES:='';
{? _inf='N' || 'xwin16.png:6'
|? _inf='T' || 'xwin16.png:10'
|? _inf='W' || 'xwin16.png:19'
|? _inf='E' || 'xwin16.png:81'
|? _inf='P' || 'xwin16.png:12'
|? _inf='U' || 'xwin16.png:20'
|| exec('pusta','#icon')
?}
"

:Sign Version 2.0 jowisz:1045 2024/01/12 14:16:43 58d66a0734eeea14fc087c7396ec25c5da74d097a4880b2bbe79941782abb496248bb3fdab21ed00fd2e97a5833e04e0ad72242d85c9da624513d2de7165ca69a1944024273b8025aaf503fc386f3c151df9f97edf63aea8bd650493c143758d594dc63c7ff99060fb9e9a459af6fb9eb1725cc983cf200289a89df1053431cc
