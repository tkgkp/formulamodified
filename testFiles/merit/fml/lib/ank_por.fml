:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: ank_por.fml
:: Utworzony: 13.10.2017
:: Autor: RO
::======================================================================================================================
:: Zawartość: Formuły wspólne dla czynności dziedziny PBA dla webterma.
::======================================================================================================================


\ank_por
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Główna formuła obszaru roboczego PBA_POR - Ankiety - webterm.
::   WE: _a - [0/1] wejście z obszaru / wejście przez wygenerowanego linka
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_formID:={? var_pres('_a')=type_of('') || _a || '' ?};

{? exec('set_env','ank_por') & {? app_info('app_user')<>'ankieta' || exec('load_cur_prac','p_web') || 1 ?}
|| web_title('%1, %2: Ankiety'@[exec('nazwa','#system'),'Firma '@+REF.FIRMA().SYMBOL],'all');
   {? var_press('_POD')>0 || obj_del(_POD) ?};
   _tcid:=app_info('web_tcid');
   _sesid:=app_info('web_sesid');
   _tabid:=app_info('web_tabid');
   exec('wt_zes_clean','ank_por',3);
   WT_ZES.cntx_psh();
   WT_ZES.index('TABF');
   WT_ZES.prefix(_tcid,_sesid,_tabid,);

   {? _formID=''
   || _maska:='zz_do'+($REF.FIRMA+1);
      _ankiety:=sql('
         select
            Z.REFERENCE as ANK_REF,
            Z.NAZWA as NAZWA,
            Z.WIDOK as WIDOK,
            Z.WER_A as WERYF_A,
            Z.ANONIM as ANONIM,
            R.NAZWA as STATUS,
            T.NAZWA as TYP,
            ZA_TYP.OPIS as RODZAJ,
            I.POSTEP as POSTEP,
            D.KLASA as KLASA,
            ''N'' as SZEF,
            ''T'' as PROC,
            D.REFERENCE as DOK
         from
            ZA_ZEST as Z join
            SLO_KOD as R using(Z.SLO_KOD,R.REFERENCE) join
            SLO_KOD as T using(Z.TYP,T.REFERENCE) join
            ZA_TYP using(Z.ZA_TYP,ZA_TYP.REFERENCE) join
            ZA_INFO as I using(Z.ZA_INFO,I.REFERENCE) join
            ZZ_DOK as D using(Z.ZZ_LINK,D.REFERENCE)
         where
           D.REFERENCE like \':_a%\'',
        _maska
      );

      P.cntx_psh();
      _pesel:='';
      _osoba:=null();
      {? P.seek(P.ref())
      || _pesel:=P.OSOBA().PESEL;
         _osoba:=P.OSOBA
      ?};
      P.cntx_pop();

::   Podwładni.
      OSOBA.cntx_psh();
      _POD:=exec('prac_pod','stanprac',_osoba,'TYPPOZ','DOSTINF');
      _POD.prefix();
      OSOBA.cntx_pop();

      _loop:=_ankiety.first();
      _rola:='A';
      {!
      |? _loop
      |! _klasa:=_ankiety.KLASA;
         _access:=exec('ank_dostep','phr_dane',_pesel,_ankiety.ANK_REF,_rola,_POD);

         {? _access>0
         || WT_ZES.blank();
            WT_ZES.ZA_ZEST:=exec('FindAndGet','#table',ZA_ZEST,_ankiety.ANK_REF,,,null());
            WT_ZES.RODZAJ:=_ankiety.RODZAJ;
            WT_ZES.POSTEP:=_ankiety.POSTEP;
            WT_ZES.STATUS:=_ankiety.STATUS;
            WT_ZES.TYP:=_ankiety.TYP;
            WT_ZES.KLASA:={? _ankiety.KLASA='ZA_INST' | _ankiety.KLASA='ZO_PROC' || 'B' || 'S' ?};
            WT_ZES.ROLA:=$_access;
            {? _ankiety.TYP='test'
            || WT_ZES.ANONIM:=_ankiety.WERYF_A
            || WT_ZES.ANONIM:=_ankiety.ANONIM
            ?};
            WT_ZES.add()
         ?};
           _loop:=_ankiety.next()
      !};

      exec('wt_form_clean','ank_por',3);
      WT_FORM.cntx_psh();
      WT_FORM.index('KLASA');
      WT_FORM.prefix(_tcid,_sesid,_tabid,);

      _forms:=sql('
         select
            F.REFERENCE FORM_REF,
            F.ID ID,
            Z.REFERENCE as ANK_REF,
            Z.WIDOK as WIDOK,
            KTO.NAZWISKO NAZWISKO,
            KTO.PIERWSZE IMIE,
            ''N'' OC_MOD,
            ''N'' EDIT,
            S.NAZWA NAZWA,
            S.KOD KOD,
            F.WYNIK WYNIK,
            F.OCENA OCENA,
            F.Z ZALICZON,
            KTO.REFERENCE as KTO,
            KTO.ZZ_LINK as LINK,
            KTO.PESEL as PESEL,
            PRAC.T as TP,
            PRAC.REFERENCE as PRAC
         from
            ZA_FORM as F join
            ZA_ZEST as Z join
            SLO_KOD as S using(F.SLO_KOD,S.REFERENCE) join
            ZZ_OSOBA as KTO using(F.ZZ_KTO,KTO.REFERENCE) join
            P as PRAC using(PRAC.ZZ_DOK,KTO.ZZ_LINK) join
            OSOBA as O using(PRAC.OSOBA,O.REFERENCE)
         where
            Z.REFERENCE in (select WT_ZES.ZA_ZEST from :_a)',
          WT_ZES
      );

      _ndx:=_POD.ndx_tmp(,,'P_SQL',,);
      _POD.index(_ndx);
      _loop:=_forms.first();
      {!
      |? _loop
      |! _wer:=0;
         _form:=exec('FindAndGet','#table',ZA_FORM,_forms.FORM_REF,,,null());
         ZA_FORM.cntx_psh();
         ZA_FORM.prefix();
         {? ZA_FORM.seek(_form,) & ZA_FORM.WER().PESEL=_pesel
         || _wer:=1
         ?};
         _kto:=_forms.PESEL=_pesel;
         _access:={? ~_kto & ~_wer & _forms.WIDOK='T' & _POD.find_key(_forms.PRAC) || 1 || 0 ?};
         ZA_FORM.cntx_pop();
         {? _kto | _wer | _access
         || WT_FORM.blank();
            WT_FORM.ZA_ZEST:=exec('FindAndGet','#table',ZA_ZEST,_forms.ANK_REF,,,null());
            WT_FORM.NAZWISKO:=_forms.NAZWISKO;
            WT_FORM.PIERWSZE:=_forms.IMIE;
            WT_FORM.ZA_FORM:=_form;
            WT_FORM.STATUS:=_forms.NAZWA;
            WT_FORM.OCENA:=_forms.OCENA;
            WT_FORM.TP:=_forms.TP;
            WT_FORM.Z:=_forms.ZALICZON;
            {? _forms.PESEL=_pesel
            || WT_FORM.ROLA:='1'
            |? _wer
            || WT_FORM.ROLA:='2'
            |? _access
            || WT_FORM.ROLA:='3'
            ?};
            WT_FORM.add()
         ?};
         _loop:=_forms.next()
      !};
      _POD.ndx_drop(_ndx);
      WT_FORM.cntx_pop();
      WT_ZES.cntx_pop()
   ||
      exec('wt_form_clean','ank_por',3);
      WT_FORM.cntx_psh();
      WT_FORM.index('KLASA');
      WT_FORM.prefix(_tcid,_sesid,_tabid,);
      ZA_ZEST.cntx_psh();
      ZA_FORM.cntx_psh();
      ZA_FORM.index('ID');
      ZA_FORM.prefix();
      {? ZA_FORM.find_key(_formID,)
      || ZA_ZEST.prefix();
         {? ZA_ZEST.seek(ZA_FORM.ZA_ZEST)
         || WT_ZES.blank();
            WT_ZES.ZA_ZEST:=exec('FindAndGet','#table',ZA_ZEST,$ZA_FORM.ZA_ZEST,,,null());
            WT_ZES.RODZAJ:=ZA_ZEST.ZA_TYP().OPIS;
            WT_ZES.POSTEP:=ZA_ZEST.ZA_INFO().POSTEP;
            WT_ZES.STATUS:=ZA_ZEST.SLO_KOD().NAZWA;
            WT_ZES.TYP:=ZA_ZEST.TYP().NAZWA;
            WT_ZES.KLASA:={? ZA_ZEST.ZZ_LINK().KLASA='ZA_INST' | ZA_ZEST.ZZ_LINK().KLASA='ZO_PROC' || 'B' || 'S' ?};
            WT_ZES.ROLA:='1';
            WT_ZES.ANONIM:='T';
            {? WT_ZES.add()
            || WT_FORM.blank();
               WT_FORM.ZA_ZEST:=exec('FindAndGet','#table',ZA_ZEST,$ZA_ZEST.ref(),,,null());
               WT_FORM.NAZWISKO:='';
               WT_FORM.PIERWSZE:='';
               WT_FORM.ZA_FORM:=ZA_FORM.ref();
               WT_FORM.STATUS:=ZA_FORM.SLO_KOD().NAZWA;
               WT_FORM.OCENA:=ZA_FORM.OCENA;
               WT_FORM.TP:='';
               WT_FORM.Z:=ZA_FORM.Z;
               WT_FORM.ROLA:='1';
               WT_FORM.add()
            ?}
         ?}
      ?};
      ZA_FORM.cntx_pop();
      ZA_ZEST.cntx_pop();
      WT_FORM.cntx_pop();
      WT_ZES.cntx_pop()
   ?};
   _rola:='A';
   _obszar:='W';

   web_global_params_set(
      exec('obj_ntab_set','#array',web_params_get(),
         'ROLA',_rola,
         'OBSZAR',_obszar
      )
   );
   WT_ZES.web_select('GRP_WER1',,,,"WT_ZES.web_close(); exec('wt_form_clean','ank_por',3); exec('wt_zes_clean','ank_por',3)")
?};
~~


\set_env
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Ustawienie środowiska
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Ustawiam środowisko
{? exec('env_wt','b_proces')
|| _batch:=var_pres('_a')=type_of(0) & _a;
   {? REF.FIRMA<>null
   || ZZ_DOK.use('zz_do'+($REF.FIRMA+1))
   ?};
   ZZ_DOK.prefix();
   exec('init','pba',_batch) & {? app_info('app_user')<>'ankieta' || exec('load_cur_prac','p_web','JA',_batch) || 1 ?}
?}


\za_form_otworz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Obsługa przycisku "Otwórz" dla okna redagowania formularzy ankiet.
::   WE: _a - identyfikator formularza ankiety (ZA_FORM.ID)
::       _b - 0/1 - wypełnianie/podgląd
::       _c - wskazanie na rekord WT_FORM (otwieraie ankiety w obszarze, w procesie wartość null)
::----------------------------------------------------------------------------------------------------------------------
{? exec('set_env','ank_por')
|| web_params_set('za_form_id',_a,'tryb',_b,'wt_form',_c);
   web_title('Ankieta'@,'title_bar');
   {? _b
   || ZA_FORM.web_select('WEB_CTRL')
   || ZA_FORM.web_select('WEB_OCEN')
   ?}
?}


\za_form_ctrl_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Inicjalizacja kontrolki - formularz ankiety.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
web_ctrl_init('',,'MCL.controls.ankieta')


\za_form_odswiez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Formuła po odświeżeniu okna WEB_CTRL dla tabeli ZA_FORM.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('za_form_webterm_def','ank_por',web_params_get().za_form_id,web_params_get().tryb,web_params_get().wt_form);
web_ctrl_set_obj('FORM_CTRL',,'ankDes','sendS','Wyślij ankietę'@,'close','Zamknij'@);
web_ctrl_call('FORM_CTRL',,'createAnkieta')


\za_form_webterm_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [17.42]
:: OPIS: Przekazanie definicji ankiety do kontrolki wywoływanej pod webterm-em.
::   WE: _a - identyfikator konkretnego formularza ankiety
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: przekazanie tablic z definicją ankiety i danymi z formularza ankiety (wartości poszczególnych odpowiedzi)
web_ctrl_set_table('FORM_CTRL',,'defAnkietaSpis',exec('za_form_spis','ank_por',_a,_b,_c));
web_ctrl_set_table('FORM_CTRL',,'defAnkietaNag',exec('za_form_nag','ank_por',_a,_b,_c));
web_ctrl_set_table('FORM_CTRL',,'defAnkietaRadio',exec('za_form_radio','ank_por',_a,_b,_c));
exec('za_form_memo','ank_por',_a,_b,_c);
~~


\za_form_spis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [17.42]
:: OPIS: Tworzy tabelę tymczasową ze spisem treści formualrza ankiety (definicja formularza).
::   WE: _a - identyfikator formularza
::       _b - 0/1/2 [ocena/wypelnienie/podglad]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('set_env','ank_por') || return(0) ?};
_fml:=$"exec('za_form_zapis','ank_por',_a)";
_proc:=exec('HTML_fml_add','#web_srv',_fml);
_spis:=tab_tmp(1,
   'INDEKS','STRING[10]','INDEKS',
   'LP','INTEGER','LP',
   'NAME','STRING[255]','NAME',
   'TYPE','STRING[20]','TYPE',
   'FORMULA','STRING[50]','FORMULAID',
   'EDIT','STRING[1]','EDIT',
   'OCENA','STRING[1]','OCENA',
   'PKT','INTEGER','PKT',
   'PKTA','INTEGER','PKTA'
);

:: wyszukuje konkretny formularz ankiety na podstawie przekazanego identyfikatora
_ank:=null();
_form:=null();
ZA_FORM.cntx_psh();
ZA_FORM.index('ID');
ZA_FORM.prefix();
{? ZA_FORM.find_key(_a,)
|| _ank:=ZA_FORM.ZA_ZEST;
   _form:=ZA_FORM.ref()
?};
ZA_FORM.cntx_pop();
:: na podstawie pytań ankiety tworze definicje formularza ankiety
ZA_TEST.cntx_psh();
ZA_TEST.index('INDEKS');
ZA_TEST.prefix(_ank);
ZA_NOTA.cntx_psh();
ZA_NOTA.index('ZA_NOTA');
_loop:=ZA_TEST.first();
_kod:='';
{!
|? _loop
|! _pyt:=ZA_TEST.ref;
   _typ:=ZA_TEST.ZA_ZEST().TYP().KOD;
   _indeks:=ZA_TEST.INDEKS;
   ZA_NOTA.prefix(_form,0,_indeks,);
   {? ZA_NOTA.first()
   || _pkt:=ZA_NOTA.PKT
   || _pkt:=0
   ?};
   _spis.PKTA:=_pkt;
   {? _typ='T' | _typ='S'
   || _kod:=ZA_TEST.RODZ().KOD
   || _kod:=ZA_TEST.ZZ_MET().KOD
   ?};
   {? ~_b & _kod<>'O'
   || _loop:=ZA_TEST.next()
   || {? ~_b
      || _spis.OCENA:='T'
      || _spis.OCENA:='N'
      ?};
      _spis.LP:=ZA_TEST.NUMER;
      _spis.NAME:=ZA_TEST.TRESC;
      _spis.INDEKS:=ZA_TEST.INDEKS;
      _spis.TYPE:=
         {? _kod='OO' | _kod='O'
         || 'textarea'
         |? _kod='SP' | _kod='KW' | _kod='WB' | _kod='J'
         || 'radiogroup'
         |? _kod='W'
         || 'checkbox'
         || 'fieldset'
         ?};
      _spis.FORMULA:=_proc;
      {? ~_b | _b=2
      || _spis.EDIT:='N'
      || _spis.EDIT:='T'
      ?};
      {? _b=2 & ZA_TEST.ZA_ZEST().TYP().KOD='T'
      || _spis.NAME:=_spis.NAME+' (Punkty: '@+$_pkt+'/'+$ZA_TEST.PKT+')'
      ?};
      _spis.PKT:=ZA_TEST.PKT;
      _spis.add();
      _loop:=ZA_TEST.next()
   ?}
!};

ZA_NOTA.cntx_pop();
ZA_TEST.cntx_pop();
_spis


\za_form_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [17.42]
:: OPIS: Tablica z nagłówkiem ankiety i identyfikatorem formularza.
::   WE: _a - identyfikator ankiety
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_fml:=$"exec('za_form_button','ank_por',_a)";
_proc:=exec('HTML_fml_add','#web_srv',_fml);
_nag:=tab_tmp(,
   'TITLE','STRING[255]','TITLE',
   'FORM_ID','STRING[100]','FORM_ID',
   'FORMULA','STRING[50]','FORMULAID',
   'BUTTON','STRING[1]','BUTTON',
   'OCENA','STRING[1]','OCENA',
   'ADN','STRING[1]','ADN',
   'FORM','STRING[16]','FORM'
);
_rola:='';
WT_FORM.cntx_psh();
WT_FORM.prefix();
{? WT_FORM.seek(_c)
|| _rola:=WT_FORM.ROLA
?};
WT_FORM.cntx_pop();

:: ustawienie naglowka formularza ankiety (nazwa ankiety)
ZA_FORM.cntx_psh();
ZA_FORM.index('ID');
ZA_FORM.prefix();
_nag.blank();
{? ZA_FORM.find_key(_a,)
|| ZA_FORM.ZA_ZEST();
   _nag.TITLE:=ZA_ZEST.NAZWA;
   _oceniony:=ZA_FORM.Z
?};
{? _b=0
|| _nag.BUTTON:='T';
   _nag.OCENA:='T';
   _nag.ADN:='T'
|? _b=1
|| _nag.BUTTON:='T';
   _nag.OCENA:='N';
   _nag.ADN:='N'
|? _b=2
|| _nag.BUTTON:='N';
   _nag.OCENA:='P';
   {? (ZA_ZEST.ADN='T' & _rola='1') | _rola='2' | _rola='3'
   || _nag.ADN:='T'
   || _nag.ADN:='N'
   ?}
?};
_nag.FORM_ID:=_a;
_nag.FORMULA:=_proc;
_nag.FORM:=$_c;
_nag.add();
ZA_FORM.cntx_pop();
_nag


\za_form_memo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [17.42]
:: OPIS: Przekazanie obiektów z odpowiedziami opisowymi ankiety.
::   WE: _a - identyfikator ankiety
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('set_env','ank_por') || return(0) ?};
ZA_FORM.cntx_psh();
ZA_FORM.index('ID');
ZA_FORM.prefix();
_ank:='';
_form:='';
{? ZA_FORM.find_key(_a,)
|| _ank:=ZA_FORM.ZA_ZEST;
   _form:=ZA_FORM.ref
?};
ZA_FORM.cntx_pop();
ZA_TEST.cntx_psh();
ZA_TEST.index('INDEKS');
ZA_TEST.prefix(_ank);
ZA_NOTA.cntx_psh();
ZA_NOTA.index('ZA_TEST');
ZZ_DOK.cntx_psh();
ZZ_DOK.prefix();
_loop:=ZA_TEST.first();
{!
|? _loop
|! {? ZA_TEST.ZZ_MET().KOD='OO' | ZA_TEST.RODZ().KOD='O'
   || ZA_NOTA.prefix(_form,ZA_TEST.ref);
      _indx:=ZA_TEST.INDEKS;
      _adn:=ZA_TEST.INDEKS+'adn';
      {? ZA_NOTA.first() & exec('seek_dok','phr_tab',ZA_NOTA.ZZ_DOK)
      || {? ~_b
         || web_ctrl_set_obj(,,'memo',_indx,ZA_NOTA.memo_txt(,1,'NOTA'),_adn,ZZ_DOK.memo_txt(,1,'NOTA'));
            web_ctrl_call(,,'setMemoVal')
         || web_ctrl_set_obj(,,'memo',_indx,ZA_NOTA.memo_txt(,1,'NOTA'),_adn,ZZ_DOK.memo_txt(,1,'NOTA'));
            web_ctrl_call(,,'setMemoVal')
         ?}
      ?}
   ?};
   _loop:=ZA_TEST.next()
!};
ZZ_DOK.cntx_pop();
ZA_NOTA.cntx_pop();
ZA_TEST.cntx_pop()


\za_form_radio
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [17.42]
:: OPIS: Tabela tymczasowa dla pola typu radio.
::   WE: _a - identyfikator formularza
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('set_env','ank_por') || return(0) ?};
:: tworzy bufor w postaci tabeli ze spisem tresci ankiety
_spis:=exec('za_form_spis','ank_por',_a,_b);
_rad:=tab_tmp(,
   'INDEKS','STRING[16]','INDEKSPYT',
   'NR','INTEGER','KOLEJNOSC',
   'OPIS','STRING[255]','ETYKIETA',
   'CHCK','STRING[1]','ZAZNACZONE'
);

_ank:='';
_form:='';
ZA_FORM.cntx_psh();
ZA_FORM.index('ID');
ZA_FORM.prefix();
{? ZA_FORM.find_key(_a,)
|| _ank:=ZA_FORM.ZA_ZEST;
   _form:=ZA_FORM.ref
?};
ZA_FORM.cntx_pop();
_ndx:=ZA_NOTA.ndx_tmp(,1,'ZA_FORM',,,'ZA_TEST',,,'ZA_NOTA',,);
ZA_TEST.index('INDEKS');
ZA_NOTA.cntx_psh();
:: kolejne pola radio
_loop:=_spis.first();
{!
|? _loop
|! {? _spis.TYPE='radiogroup' | _spis.TYPE='checkbox'
   || _kod:='';
      _dok:=null;
      ZA_NOTA.clear;
      ZA_NOTA.index(_ndx);
      ZA_TEST.prefix(_ank,_spis.INDEKS);
      {? ZA_TEST.first()
      || {? ZA_NOTA.find_key(_form,ZA_TEST.ref(),0)
         || {? ZA_TEST.ZA_ZEST().TYP().KOD='T' | ZA_TEST.ZA_ZEST().TYP().KOD='S'
            || _kod:=ZA_NOTA.ZA_TEST().RODZ().KOD;
               _nota:=ZA_NOTA.ref()
            || _kod:=ZA_NOTA.ZA_TEST().ZZ_MET().KOD
            ?};
            _dok:=ZA_NOTA.ZA_TEST().ZZ_DOK
         ?}
      ?};

      {? _kod='KW'
      || ZZ_KOMPK.index('WARTOSC');
         ZZ_KOMPK.prefix(ref_name(_dok),_dok,null);
         _loop:=ZZ_KOMPK.first;
         {!
         |? _loop
         |! _rad.INDEKS:=_spis.INDEKS;
            _rad.NR:=ZZ_KOMPK.WARTOSC;
            _rad.OPIS:='('+ZZ_KOMPK.KOD+')'+' '+ZZ_KOMPK.OPIS;
            {? ZA_NOTA.WARTOSC=_rad.NR
            || _rad.CHCK:='T'
            || _rad.CHCK:='N'
            ?};
            _rad.add;
            _loop:=ZZ_KOMPK.next
         !}

      |? _kod='SP'
      || ZZ_KOMPS.index('WARTOSC');
         ZZ_KOMPS.prefix(ref_name(_dok),_dok,null);
         _loop:=ZZ_KOMPS.first;
         {!
         |? _loop
         |! _rad.INDEKS:=_spis.INDEKS;
            _rad.NR:=ZZ_KOMPS.WARTOSC;
            _rad.OPIS:=$ZZ_KOMPS.WARTOSC+' - '+ZZ_KOMPS.OPIS;
            {? ZA_NOTA.WARTOSC=_rad.NR
            || _rad.CHCK:='T'
            || _rad.CHCK:='N'
            ?};
            _rad.add;
            _loop:=ZZ_KOMPS.next
         !}

      |? _kod='WB'
      || ZZ_KOMPZ.index('UNIQUE');
         ZZ_KOMPZ.prefix(ref_name(_dok),_dok,null);
         {? ZZ_KOMPZ.first
         || {! _wartosc:=ZZ_KOMPZ.MIN..ZZ_KOMPZ.MAKS
            |! _rad.INDEKS:=_spis.INDEKS;
               _rad.NR:=_wartosc;
               _rad.OPIS:=$_wartosc;
               {? ZA_NOTA.WARTOSC=_rad.NR
               || _rad.CHCK:='T'
               || _rad.CHCK:='N'
               ?};
               _rad.add
            !}
         ?}

      |? _kod='J' | _kod='W'
      || ZA_NOTA.cntx_psh();
         ZA_NOTA.index(_ndx);
         ZA_NOTA.prefix(_form,ZA_TEST.ref(),_nota);
         _loop:=ZA_NOTA.first();
         {!
         |? _loop
         |! _rad.INDEKS:=_spis.INDEKS;
            _rad.NR:=ZA_NOTA.NUMER;
            _rad.OPIS:=ZA_NOTA.TRESC;
            {? ZA_NOTA.ODP='T'
            || _rad.CHCK:='T'
            || _rad.CHCK:='N'
            ?};
            _rad.add();
            _loop:=ZA_NOTA.next()
         !};
         ZA_NOTA.cntx_pop()
      ?}
   ?};
   _loop:=_spis.next()
!};
ZA_NOTA.ndx_drop(_ndx);
ZA_NOTA.cntx_pop();
_rad


\za_form_zapis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Zapis odpowiedzi po udzieleniu odpowiedzi na pytanie z ankiety (wywoływane z poziomu webterm-a).
::   WE: _a - tablica z przekazanymi parametrami (kontrolka js)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('set_env','ank_por') || return(0) ?};
_par:=_a;
_id:=_par.idankiety;
_typ:=_par.typ;
_indx:={? _typ='adnotacja' || _par.indexpyt-4+'.' || _par.indexpyt ?};
{? _typ='radiogroup' | _typ='checkbox'
|| _val:=#_par.wartoscpola
|? _typ='textarea' | _typ='adnotacja'
|| _val:=_par.wartoscpola
?};

_ank:='';
_form:='';
ZA_FORM.cntx_psh();
ZA_NOTA.cntx_psh();
ZA_TEST.cntx_psh();
ZA_FORM.index('ID');
ZA_FORM.prefix();
{? ZA_FORM.find_key(_id,)
|| _ank:=ZA_FORM.ZA_ZEST;
   _form:=ZA_FORM.ref
?};
ZA_NOTA.index('ZA_NOTA');
ZA_TEST.index('INDEKS');
ZA_TEST.prefix(_ank,_indx);
:: wyszukuje odpowiedni rekord odpowiedzi powiązany ze wskazanym pytaniem, nadaje nową wartość
ZA_NOTA.prefix(_form,0,_indx);
ZZ_DOK.cntx_psh();
ZZ_DOK.prefix();

{? ZA_NOTA.first & exec('seek_dok','phr_tab',ZA_NOTA.ZZ_DOK)
|| _ref:=ZA_NOTA.ref();
   _ver:=ZA_NOTA.ZA_TEST().ZA_ZEST().PKT='N';
   {? _typ='radiogroup'
   || ZA_NOTA.WARTOSC:=_val;
      ZA_NOTA.put();
      ZA_NOTA.cntx_psh();
      ZA_NOTA.index('ZA_NOTA');
      ZA_NOTA.prefix(_form,_ref);
      _loop:=ZA_NOTA.first();
      {!
      |? _loop
      |! _nota:=ZA_NOTA.ZA_NOTA;
         _wartosc:=ZA_NOTA.NUMER;
         {? _wartosc=_val
         || ZA_NOTA.ODP:='T';
            ZA_NOTA.put();
            ZA_NOTA.cntx_psh();
            ZA_NOTA.prefix();
            {? ZA_NOTA.seek(_nota,)
            || {? _ver
               || exec('za_nota_pkt','phr_dane',ZA_NOTA.ref(),_wartosc,1,1)
               || exec('za_nota_pkt','phr_dane',ZA_NOTA.ref(),_wartosc,1,0)
               ?}
            ?};
            ZA_NOTA.cntx_pop()
         || ZA_NOTA.ODP:='N';
            ZA_NOTA.put()
         ?};
         _loop:=ZA_NOTA.next()
      !};
      ZA_NOTA.cntx_pop()
   |? _typ='checkbox'
   || ZA_NOTA.cntx_psh();
      ZA_NOTA.index('ZA_NOTA');
      ZA_NOTA.prefix(_form,_ref,_indx,_val);
      {? ZA_NOTA.first()
      || _nota:=ZA_NOTA.ZA_NOTA;
         _wartosc:=ZA_NOTA.NUMER;
         {? _par.akcja='tak'
         || ZA_NOTA.ODP:='T'
         || ZA_NOTA.ODP:='N'
         ?};
         ZA_NOTA.put();
         ZA_NOTA.cntx_psh();
         ZA_NOTA.prefix();
         {? ZA_NOTA.seek(_nota,)
         || {? _ver
            || exec('za_nota_pkt','phr_dane',_ref,_wartosc,0,1)
            || exec('za_nota_pkt','phr_dane',_ref,_wartosc,0,0)
            ?}
         ?};
         ZA_NOTA.cntx_pop()
      ?};
      ZA_NOTA.cntx_pop()
   |? _typ='textarea'
   || ZA_NOTA.memo_set(_val,'NOTA');
      ZA_NOTA.memo_put(,'NOTA')
   |? _typ='adnotacja'
   || ZZ_DOK.memo_set(_val,'NOTA');
      ZZ_DOK.memo_put(,'NOTA')
   ?}
?};
ZZ_DOK.cntx_pop();
ZA_TEST.cntx_pop();
ZA_NOTA.cntx_pop();
ZA_FORM.cntx_pop();
~~


\za_form_button
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Zamknięcie formularza ankiety.
::   WE: _a - identyfikator formularza ankiety
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: ustawienie srodowiska
{? ~exec('set_env','ank_por') || return(0) ?};
:: przekazanie parametrow z kontrolki
_par:=_a;
_id:=_par.idankiety;
_akcja:=_par.akcja;
_form:=null();
ZA_FORM.cntx_psh();
ZA_FORM.index('ID');
ZA_FORM.prefix();
{? ZA_FORM.find_key(_id,)
|| _form:=ZA_FORM.ref
?};
ZA_FORM.cntx_pop();
{? _akcja='oc_pyt'
|| _indeks:=_par.indexpyt;
   _punkty:=#_par.ocena
|| _indeks:='';
   _punkty:=0
?};
{? _akcja='ocena' | _akcja='zamknij'
|| _wt_form:=_par.form
|| _wt_form:=''
?};
_okno:=web_top_ident();
_ref:=web_win_ref('ZA_FORMW');
{? _ref=~~ || _ref:=null() ?};
web_params_set('form',_form,'wt_form',_wt_form);
ZZ_DOK.prefix();
{? _akcja='zamknij'
|| _zamknij:="
      {? ~exec('set_env','ank_por') || return(0) ?};
      web_params_set(_par:=web_params_get());
      _za_form:=_par.form;
      _wt_form:=_par.wt_form;
      _klasa:=0;
      {? _a=1
      || ZA_FORM.cntx_psh();
         ZA_FORM.prefix();
         ZZ_DOK.cntx_psh();
         {? ZA_FORM.seek(_za_form)
         || ZA_FORM.SLO_KOD:=exec('kod','ext_slo','ZA_FORM','Z');
            {? ZA_FORM.ZA_ZEST().TYP().KOD='T'
            || _licz:=0;
               _tryb:=0;
               {? exec('seek_dok','phr_tab',ZA_ZEST.ZZ_LINK) & ZZ_DOK.KLASA='SZK_OPIS'
               || _dok:=ZZ_DOK.ref();
                  _klasa:=1;
                  SZK_OPIS.cntx_psh();
                  SZK_OPIS.index('ZZ_DOK');
                  SZK_OPIS.prefix(ref_name(_dok),_dok);
                  {? SZK_OPIS.first()
                  || _tryb:=SZK_OPIS.TRYB='N'
                  ?};
                  SZK_OPIS.cntx_pop()
               ?};
               ZA_NOTA.cntx_psh();
               ZA_NOTA.index('ZA_NOTA');
               ZA_NOTA.prefix(ZA_FORM.ref(),0);
               _loop:=ZA_NOTA.first();
               {!
               |? _loop
               |! _licz+=ZA_NOTA.PKT;
                  _loop:=ZA_NOTA.next()
               !};
               ZA_NOTA.cntx_pop();
               _pkt:=sql('select SUM(ZA_TEST.PKT) as PKT from ZA_TEST join ZA_ZEST where ZA_ZEST.REFERENCE=\\':_a\\'',$ZA_FORM.ZA_ZEST);
               _jest:=sql('select SLO_KOD.KOD as KOD from ZA_TEST join ZA_ZEST join SLO_KOD using(ZA_TEST.RODZ,SLO_KOD.REFERENCE) where ZA_ZEST.REFERENCE=\\':_a\\' and KOD=\\'O\\'',$ZA_FORM.ZA_ZEST);
               {? _pkt.PKT>0
               || {? _tryb
                  || ZA_FORM.WYNIK:=_licz
                  || ZA_FORM.WYNIK:=(_licz/_pkt.PKT)*100
                  ?}
               || ZA_FORM.WYNIK:=0
               ?};
               {? ZA_FORM.WYNIK>=ZA_FORM.ZA_ZEST().PROG & ~_jest.size()
               || ZA_FORM.Z:='T'
               ?};
               {? ~_jest.size()
               || ZA_FORM.OCENA:='T'
               ?}
            ?};
            {? ZA_FORM.put()
            || WT_FORM.cntx_psh();
               WT_FORM.prefix();
               {? WT_FORM.seek(_wt_form)
               || WT_FORM.STATUS:=ZA_FORM.SLO_KOD().NAZWA;
                  WT_FORM.OCENA:=ZA_FORM.OCENA;
                  WT_FORM.Z:=ZA_FORM.Z;
                  WT_FORM.put()
               ?};
               {? _klasa
               || exec('ank_akc','phr_dane',ZA_FORM.ref())
               ?};
               WT_FORM.cntx_pop()
            ?}
         ?};
         ZZ_DOK.cntx_pop();
         ZA_FORM.cntx_pop();
         ZA_FORM.web_close('WEB_CTRL');
         WT_ZES.web_refresh('GRP_WER1','ALL');
         WT_ZES.web_refresh('GRP_WER1','ZA_FORMA');
         WT_ZES.web_refresh('GRP_WER1','ZA_FORMAA');
         WT_ZES.web_refresh('GRP_WER1','WER_A')
      ?}
   ";
   web_ask(_zamknij,'Czy na pewno zamknąć formularz ankiety?\n'
         'Dalsza możliwość edycji formularza zostanie zablokowana.'@)
|? _akcja='ocena'
|| _ocen:="
      {? ~exec('set_env','ank_por') || return(0) ?};
      web_params_set(_par:=web_params_get());
      _za_form:=_par.form;
      _wt_form:=_par.wt_form;
      _licz:=0;
      _tryb:=0;
      _prog:=0;
      _klasa:=0;
      ZZ_DOK.prefix();
      {? _a=1
      || ZA_FORM.cntx_psh();
         ZA_FORM.prefix();
         ZZ_DOK.cntx_psh();
         {? ZA_FORM.seek(_za_form)
         || _prog:=ZA_FORM.ZA_ZEST().PROG;
            {? exec('seek_dok','phr_tab',ZA_FORM.ZA_ZEST().ZZ_LINK) & ZZ_DOK.KLASA='SZK_OPIS'
            || _klasa:=1;
               SZK_OPIS.cntx_psh();
               SZK_OPIS.index('ZZ_DOK');
               SZK_OPIS.prefix(ref_name(ZA_ZEST.ZZ_LINK),ZA_ZEST.ZZ_LINK);
               {? SZK_OPIS.first()
               || _tryb:=SZK_OPIS.TRYB='N'
               ?};
               SZK_OPIS.cntx_pop()
            ?};
            ZA_NOTA.cntx_psh();
            ZA_NOTA.index('ZA_NOTA');
            ZA_NOTA.prefix(ZA_FORM.ref(),0);
            _loop:=ZA_NOTA.first();
            {!
            |? _loop
            |! _licz+=ZA_NOTA.PKT;
               _loop:=ZA_NOTA.next()
            !};
            ZA_NOTA.cntx_pop();
            _pkt:=sql('
               select
                  SUM(ZA_TEST.PKT) as PKT
               from
                  ZA_TEST join ZA_ZEST
               where
                  ZA_ZEST.REFERENCE=\\':_a\\'',
               $ZA_FORM.ZA_ZEST
            );
            {? _pkt.PKT>0
            || {? _tryb
               || ZA_FORM.WYNIK:=_licz
               || ZA_FORM.WYNIK:=(_licz/_pkt.PKT)*100
               ?}
            || ZA_FORM.WYNIK:=0
            ?};
            {? ZA_FORM.WYNIK>=_prog
            || ZA_FORM.Z:='T';
               _zalicz:='T'
            ?};
            ZA_FORM.OCENA:='T';
            {? ZA_FORM.put()
            || WT_FORM.cntx_psh();
               WT_FORM.prefix();
               {? WT_FORM.seek(_wt_form)
               || WT_FORM.STATUS:=ZA_FORM.SLO_KOD().NAZWA;
                  WT_FORM.OCENA:='T';
                  WT_FORM.Z:=ZA_FORM.Z;
                  WT_FORM.put()
               ?};
               {? _klasa
               || exec('ank_akc','phr_dane',ZA_FORM.ref())
               ?};
               WT_FORM.cntx_pop()
            ?}
         ?};
         ZZ_DOK.cntx_pop();
         ZA_FORM.cntx_pop();
         ZA_FORM.web_close('WEB_OCEN');
         WT_ZES.web_refresh('GRP_WER1','ZA_FORMA');
         WT_ZES.web_refresh('GRP_WER1','ZA_FORMAA')
      ?}
   ";
web_ask(_ocen,'Czy na pewno zakończyć ocenę testu?\n'
         'Dalsza możliwość oceny formularza zostanie zablokowana.'@)
|? _akcja='oc_pyt'
|| ZA_NOTA.cntx_psh();
   ZA_NOTA.index('ZA_NOTA');
   ZA_NOTA.prefix(_form,0,_indeks);
   {? ZA_NOTA.first()
   || ZA_NOTA.PKT:=_punkty;
      {? ZA_NOTA.PKT>ZA_NOTA.ZA_TEST().PKT
      || web_msg('Liczba wprowadzonych punktów przekracza maksymalną liczbę punktów za pytanie.'@);
         ZA_NOTA.cntx_pop();
         return(0)
      |? ZA_NOTA.PKT<0
      || web_msg('Liczba wprowadzonych punktów nie może być ujemna. Wprowadź poprawną wartość.'@);
         ZA_NOTA.cntx_pop();
         return(0)
      || {? ZA_NOTA.put()
         || web_msg('Zapisano ocenę za pytanie.'@)
         ?}
      ?}
   ?};
   ZA_NOTA.cntx_pop()
|? _akcja='esc'
|| ZA_FORM.web_close('WEB_CTRL')
?}


\wt_zes_clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Kasowanie danych w tabeli WT_ZES.
::   WE: _a [INTEGER] - Moment wywołania:
::                      1 - Start TOMCATA - kasowane są wszystkie rekordy związane z identyfikatorem serwera.
::                      2 - Zakończenie sesji webTerma - kasowane są tylko rekordy związane z daną sesją.
::                      3 - Zamknięcie zakładki - kasowane są tylko rekordy związane z daną zakładką.
::   WY: Wynik operacji:
::       0 - Operacja zakończyła się sukcesem.
::       1 - Operacja nie zakończyła się sukcesem.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & (0<_a & _a<4)
|| _tryb:=_a
|| return(0)
?};

WT_ZES.cntx_psh();
WT_ZES.index('TABF');
{? _tryb=1
|| WT_ZES.prefix(app_info('web_tcid'),)
|? _tryb=2
|| WT_ZES.prefix(app_info('web_tcid'),app_info('web_sesid'),)
|| WT_ZES.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),)
?};
{? WT_ZES.first()
|| {!
   |? WT_ZES.del()
   !}
?};
_ret:=~WT_ZES.first();
WT_ZES.cntx_pop();
_ret


\za_form_web_wer_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła "Przed obsługą" dla okienka WEB_WER tabeli WT_FORM
::----------------------------------------------------------------------------------------------------------------------
web_global_params_set(_par:=web_global_params_get());

_rola:=
   {? _par.ROLA='W' || '1'
   |? _par.ROLA='O' || '2'
   |? _par.ROLA='P' || '3'
   ?};
_tcid:=app_info('web_tcid');
_sesid:=app_info('web_sesid');
_tabid:=app_info('web_tabid');
_kod:={? var_pres('_a')=type_of('') & (_a='W' | _a='S' | _a='B') || _a || 'W' ?};
_okno:='';

_ref:=web_win_ref('ALL');
{? _ref=~~ || _ref:=null() ?};
WT_ZES.cntx_psh();
WT_ZES.prefix();
_ref:={? WT_ZES.seek(_ref) || WT_ZES.ZA_ZEST || null() ?};
WT_ZES.cntx_pop();

{? _par.ROLA='A'
|| WT_FORM.index('KLASA');
   WT_FORM.prefix(_tcid,_sesid,_tabid,_ref)
|| WT_FORM.index('KLASA');
   WT_FORM.prefix(_tcid,_sesid,_tabid,_ref,_rola,)
?};

WT_FORM.first();
~~


\za_form_wypelnij
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Obsługa akcji "Wypełnij" dla okna WEB_WER tabeli ZA_FORM.
::----------------------------------------------------------------------------------------------------------------------
{? exec('set_env','ank_por')
|| ZA_FORM.cntx_psh();
   ZA_FORM.index('ID');
   ZA_FORM.prefix();
   {? ZA_FORM.find_key(WT_FORM.ZA_FORM().ID,)
   || {? ZA_FORM.SLO_KOD().KOD='Z'
      || web_msg('Formularz o podanym identyfikatorze został już zamknięty.'@,'Formularz ankiety'@)
      || exec('za_form_otworz','ank_por',ZA_FORM.ID,1,WT_FORM.ref())
      ?}
   || web_msg('Nie znaleziono formularza o podanym identyfikatorze.'@,'Formularz ankiety'@)
   ?};
   ZA_FORM.cntx_pop()
?}


\za_form_podglad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Obsługa akcji "Podgląd" dla okna WEB_WER tabeli ZA_FORM
::----------------------------------------------------------------------------------------------------------------------
{? exec('set_env','ank_por')
|| ZA_FORM.cntx_psh();
   ZA_FORM.index('ID');
   ZA_FORM.prefix();
   {? ZA_FORM.find_key(WT_FORM.ZA_FORM().ID,)
   || {? ZA_FORM.SLO_KOD().KOD='Z'
      || exec('za_form_otworz','ank_por',ZA_FORM.ID,2,WT_FORM.ref())
      || web_msg(
            'Formularz o podanym identyfikatorze nie został jeszcze zamknięty. Podgląd formularza nie jest możliwy.'@,
            'Formularz ankiety'@
         )
      ?}
   || web_msg('Nie znaleziono formularza o podanym identyfikatorze.'@,'Formularz ankiety'@)
   ?};
   ZA_FORM.cntx_pop()
?}


\za_form_ocen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Obsługa akcji "Oceń - po" dla okna WEB_WER tabeli ZA_FORM
::----------------------------------------------------------------------------------------------------------------------
{? exec('set_env','ank_por')
|| ZA_FORM.cntx_psh();
   ZA_FORM.index('ID');
   ZA_FORM.prefix();
   {? ZA_FORM.find_key(WT_FORM.ZA_FORM().ID,)
   || {? ZA_FORM.SLO_KOD().KOD='Z' & ZA_FORM.OCENA='N'
      || exec('za_form_otworz','ank_por',ZA_FORM.ID,0,WT_FORM.ref())
      |? ZA_FORM.SLO_KOD().KOD='Z' & ZA_FORM.OCENA='T'
      || web_msg(
            'Formularz o podanym identyfikatorze został już oceniony. Ocena formularza niemożliwa.'@,
            'Formularz ankiety'@)
      || web_msg(
         'Formularz o podanym identyfikatorze nie został jeszcze zamknięty. Ocena formularza w tej chwili niemożliwa.'@,
         'Formularz ankiety'@)
      ?}
   || web_msg('Nie znaleziono formularza o podanym identyfikatorze.'@,'Formularz ankiety'@)
   ?};
   ZA_FORM.cntx_pop()
?};
~~


\za_zest_rola
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Obsługa akcji filtrowania ankiet według roli, w jakiej występuje w stowarzyszonych formularzach
::       przeglądający ankiety.
::   WE: _a - skót roli jaką wybrał uzytkownik [ALL/KTO/WER/SZEF]
::----------------------------------------------------------------------------------------------------------------------
web_global_params_set(_par:=web_global_params_get());
_rola:=_a;
_obszar:=_par.OBSZAR;

web_global_params_set(
   exec('obj_ntab_set','#array',web_params_get(),
      'ROLA',_rola,
      'OBSZAR',_obszar
   )
);
WT_ZES.web_refresh('GRP_WER1','ALL');
~~


\wt_zes_web_wer_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Przed obsługa okna WEB_WER tabeli WT_ZES w ramach okna grupowego GRP_WER tabeli WT_ZES. Formuła wspólna dla
::       wszystkich trzech zakładek - ustala środowisko pracy.
::   WE: [_a] [STRING] - Kod obsługiwanej zakładki:
::                         B - Badania opinii;
::                         S - Szkolenia
:                          W - Wszystkie [domyślnie].
::----------------------------------------------------------------------------------------------------------------------
web_global_params_set(_par:=web_global_params_get());

_rola:=
   {? _par.ROLA='W' || '1'
   |? _par.ROLA='O' || '2'
   |? _par.ROLA='P' || '3'
   ?};
_kod:=_par.OBSZAR;

{? _kod='B' | _kod='S'
|| WT_ZES.index('TABS');
   {? _par.ROLA='A'
   || WT_ZES.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),_kod,)
   || WT_ZES.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),_kod,_rola,)
   ?}
|| WT_ZES.index('TABF');
   {? _par.ROLA='A'
   || WT_ZES.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),)
   || WT_ZES.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),_rola,)
   ?}
?};
~~


\za_form_ocena_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Inicjalizacja kontrolki - formularz ankiety.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
web_ctrl_init('',,'MCL.controls.ankieta')


\za_form_ocena_odswiez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Formuła po odświeżeniu okna WEB_OCENA dla tabeli ZA_FORM.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('za_form_webterm_ocena','ank_por',web_params_get().za_form_id,web_params_get().tryb,web_params_get().wt_form);
web_ctrl_set_obj('OCENA_CTRL',,'ankDes','close','Zamknij'@,'endRate','Zakończ ocenę'@,'note','Adnotacja'@,
'maxPt','Maksymalna liczba punktów za odpowiedź: '@,'negativeText', 'Wartość musi być większa od zera'@,
'scorePt','Uzyskane punkty za odpowiedź: '@,'points','Punkty'@, 'saveScore','Zapisz ocenę'@);
web_ctrl_call('OCENA_CTRL',,'createAnkieta')


\za_form_webterm_ocena
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [17.42]
:: OPIS: Przekazanie definicji ankiety do kontrolki wywoływanej pod webterm-em.
::   WE: _a - identyfikator konkretnego formularza ankiety
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: przekazanie tablic z definicją ankiety i danymi z formularza ankiety (wartości poszczególnych odpowiedzi)
web_ctrl_set_table('OCENA_CTRL',,'defAnkietaSpis',exec('za_form_spis','ank_por',_a,_b,_c));
web_ctrl_set_table('OCENA_CTRL',,'defAnkietaNag',exec('za_form_nag','ank_por',_a,_b,_c));
web_ctrl_set_table('OCENA_CTRL',,'defAnkietaRadio',exec('za_form_radio','ank_por',_a,_b,_c));
exec('za_form_memo','ank_por',_a,_b,_c);
~~


\wt_zes_web_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
web_global_params_set(_par:=web_global_params_get());

_title:=
   {? _par.ROLA='W' || ' - Wypełniający'@
   |? _par.ROLA='O' || ' - Weryfikujący'@
   |? _par.ROLA='P' || ' - Przełożony'@
   || ''
   ?};
_title:=_title+{? _par.OBSZAR='S' || ' (Szkolenia)'@ |? _par.OBSZAR='B' || ' (Badania opinii)'@  || '' ?};

WT_ZES.web_win_opt(web_top_win(),,'title= %1'[_title]);
{? WT_ZES.size()=0
|| ~~
|| {? WT_ZES.ANONIM='T'
   || WT_ZES.web_win_opt('GRP_WER1','ZA_FORMAA','tab_visible=1');
      WT_ZES.web_win_opt('GRP_WER1','ZA_FORMA','tab_visible=0');
      WT_ZES.web_win_opt('GRP_WER1','WER_A','tab_visible=0')
   || {? WT_ZES.TYP='test' | WT_FORM.ROLA='1'
      || WT_ZES.web_win_opt('GRP_WER1','ZA_FORMA','tab_visible=1');
         WT_ZES.web_win_opt('GRP_WER1','WER_A','tab_visible=0')
      || WT_ZES.web_win_opt('GRP_WER1','ZA_FORMA','tab_visible=0');
         WT_ZES.web_win_opt('GRP_WER1','WER_A','tab_visible=1')
      ?};
      WT_ZES.web_win_opt('GRP_WER1','ZA_FORMAA','tab_visible=0')
   ?}
?};
~~


\wt_form_clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Kasowanie danych w tabeli WT_FORM.
::   WE: _a [INTEGER] - Moment wywołania:
::                      1 - Start TOMCATA - kasowane są wszystkie rekordy związane z identyfikatorem serwera.
::                      2 - Zakończenie sesji webTerma - kasowane są tylko rekordy związane z daną sesją.
::                      3 - Zamknięcie zakładki - kasowane są tylko rekordy związane z daną zakładką.
::   WY: Wynik operacji:
::       0 - Operacja zakończyła się sukcesem.
::       1 - Operacja nie zakończyła się sukcesem.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & (0<_a & _a<4)
|| _tryb:=_a
|| return(0)
?};

WT_FORM.cntx_psh();
WT_FORM.index('KLASA');
{? _tryb=1
|| WT_FORM.prefix(app_info('web_tcid'),)
|? _tryb=2
|| WT_FORM.prefix(app_info('web_tcid'),app_info('web_sesid'),)
|| WT_FORM.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),)
?};
{? WT_FORM.first()
|| {!
   |? WT_FORM.del()
   !}
?};
_ret:=~WT_FORM.first();
WT_FORM.cntx_pop();
_ret


\za_form_web_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła "Po odswiezeniu" dla okienka WEB_WER tabeli WT_FORM
::----------------------------------------------------------------------------------------------------------------------
web_global_params_set(_par:=web_global_params_get());

_win:=web_top_ident(0);
_okno:='ALL';
_ref:=web_win_ref(_okno);
{? _ref=~~ || _ref:=null() ?};
WT_ZES.cntx_psh();
WT_ZES.prefix();
_rola:={? WT_ZES.seek(_ref) || WT_ZES.ROLA || '' ?};
_status:={? WT_ZES.seek(_ref) || WT_ZES.STATUS || '' ?};
WT_ZES.cntx_pop();

~~


\za_zest_obszar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Obsługa akcji filtrowania ankiet według roli, w jakiej występuje w stowarzyszonych formularzach
::       przeglądający ankiety.
::   WE: _a - skót obszaru jaki wybrał uzytkownik [W/S/B]
::----------------------------------------------------------------------------------------------------------------------
web_global_params_set(_par:=web_global_params_get());
_obszar:=_a;
_rola:=_par.ROLA;

web_global_params_set(
   exec('obj_ntab_set','#array',web_params_get(),
      'OBSZAR',_obszar,
      'ROLA',_rola
   )
);
WT_ZES.web_refresh('GRP_WER1','ALL');
~~


\get_pars_out
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.42]
:: OPIS: Formuła zwraca parametry wyjściowe dla czynności procesowych dotyczących ankiet w webTermie.
::   WE: _a - wskazanie na formularz ankiety.
::       _b - rodzaj wykonywanej czynności.
::   WY: Obiekt z parametrami wyjściowymi czynności.
::----------------------------------------------------------------------------------------------------------------------
_action:={? _b='PBA_POR_AWER' || 1 || 0 ?};

_pars:=obj_new('ZA_FORM','ZAMKNIETY',{? _action || 'OCENIONY' ?});
_pars.ZAMKNIETY:='N';
_pars.ZA_FORM:=null();

ZA_FORM.cntx_psh();
ZA_FORM.prefix();
{? ZA_FORM.seek(_a)
|| _pars.ZA_FORM:=ZA_FORM.ref();
   {? ZA_FORM.SLO_KOD().KOD='Z'
   || _pars.ZAMKNIETY:='T'
   ?};
   {? _action
   || _pars.OCENIONY:=ZA_FORM.OCENA
   ?}
?};
ZA_FORM.cntx_pop();
_pars


:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 c485533c363d054d7cdf58dad6cf386c63dde16be2d53a61d5204ab7d76040179a8789cf6e7a7f51b817caf6cfdd7e571206a6875fd90a9366e5b6d9b38e65314265812b490d6251bfd3c6338ede419ea4ee95c76cd7e39eec47667030675b867b2616c3e214c1e443c9bd52a4936fd593a63f75590139273ed0ee49c4b62190
