:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: transport_wspolne.fml
:: Utworzony: 02.08.2019
:: Autor: Markus
:: Systemy: Merit
::======================================================================================================================
:: Zawartość: Formuły obsługi transportu
::======================================================================================================================


\trzl_dr_od_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MarKus [19.42]
:: OPIS: Po redagowaniu oczekiwanej daty realizacji od
::       Uzupełnia date do, oraz planowane daty od i do
::----------------------------------------------------------------------------------------------------------------------
exec('trzl_set_date','transport_wspolne', 'DR_OD')


\trzl_dp_od_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MarKus [19.42]
:: OPIS: Po redagowaniu planowanej daty realizacji do
::----------------------------------------------------------------------------------------------------------------------
exec('trzl_set_date','transport_wspolne', 'DP_OD')


\trzl_set_date
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MarKus [19.42]
:: OPIS: Uzupełnia daty oczekiwane i planowane
::   WE: _a - pole do uzupełnienia
::       [_b] - sprawdzać od dzisiejszej daty (1/0) - domyślnie 0
::----------------------------------------------------------------------------------------------------------------------
1


\trzl_ch_date
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MarKus [19.42]
:: OPIS: Sprawdza wypełnione daty oczekiwane i planowane
::   WE: [_a] - sprawdzać od dzisiejszej daty (1/0) - domyślnie 0
::----------------------------------------------------------------------------------------------------------------------
_check_now:={? var_press('_a')=1 & _a=1 || 1 || 0 ?};
_wyn:='';
_wyn


\trzl_kh_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MarKus [19.42]
:: OPIS: Przed wyświetleniem kontrahent
::       Odblokowuje edycję pól: odbiorcy, miejsca dostaw oraz posesje
::----------------------------------------------------------------------------------------------------------------------
1


\trzl_poz_m_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MarKus [19.42]
:: OPIS: Po redakcji indexu materiału
::       Uzupełnia pola: nazwe i wymiary
::----------------------------------------------------------------------------------------------------------------------
_m:=M;
exec('ustawJMwym','jm');
TR_ZL.JM:=M.J;
TR_ZL.SZER:=M.SZER*VAR.JMPRZ $3;
TR_ZL.DLUG:=M.DLUG*VAR.JMPRZ $3;
TR_ZL.WYSO:=M.WYS*VAR.JMPRZ $3;
_ejo:=exec('pr_jo_zl','transport_zlec');

_buf:=exec('pobWymPack','transport_paczki',TR_ZL.M,TR_ZL.IL,TR_ZL.JO);
_edit:={? _buf[1]>0 || 'editable=0' || 'editable=1' ?};
obj_del(_buf);
_win_red:=TR_ZL.win_edit('?');
TR_ZL.efld_opt(_win_red,_edit,,'DLUG');
TR_ZL.efld_opt(_win_red,_edit,,'SZER');
TR_ZL.efld_opt(_win_red,_edit,,'WYSO');

{? TR_ZL.JO=null()
|| TR_ZL.efld_opt(_win_red,'enable=0',,'JO');
   TR_ZL.efld_opt(_win_red,'editable=0',,'JO')
|| TR_ZL.efld_opt(_win_red,'enable=1',,'JO');
   TR_ZL.efld_opt(_win_red,{? _ejo || 'editable=1' || 'editable=0' ?},,'JO')
?};
1


\trzl_kh_odb_pp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MarKus [19.42]
:: OPIS: Po redakcji odbiorcy - uzupełnia adres
::----------------------------------------------------------------------------------------------------------------------
KH_ODB.index('KH_ODB');
KH_ODB.f_clear();
KH_ODB.prefix(TR_ZL.KH().ref,);
KH_ODB.first();
1


\trzl_kh_msc_pp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MarKus [19.42]
:: OPIS: Po redakcji miejsca dostawy - uzupełnia adres
::----------------------------------------------------------------------------------------------------------------------
KH_MSC.index('KH_NAZ');
KH_MSC.f_clear();
KH_MSC.prefix(TR_ZL.KH().ref,);
KH_MSC.first();
1


\trzl_pos_pp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MarKus [19.42]
:: OPIS: Po redakcji miejsca dostawy - uzupełnia adres
::----------------------------------------------------------------------------------------------------------------------
POS.index('KH');
POS.f_clear();
POS.prefix(TR_ZL.KH().ref,);
POS.first();
1


\chk_add_tr_zl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Sprawdza wymagane pola przy zapisie TR_ZL
::----------------------------------------------------------------------------------------------------------------------
exec('chk_add_tr_zl_core','transport_wspolne',-menu_txt()='popraw')


\chk_add_tr_zl_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Sprawdza wymagane pola przy zapisie TR_ZL
::----------------------------------------------------------------------------------------------------------------------
_wyn:=__CHK.record(TR_ZL,,'RODZ','DT', 'KRAJ', 'MIASTO', 'UL', 'KPOCZ', 'POCZ', 'KH', 'POZ_M', 'IL', 'JM');
{? _wyn=''
||
   _wyn:=exec('trzl_ch_date','transport_wspolne')
?};

:: usuwa zakończenie dyspozycji jeżeli wystąpił błąd w danych
{? _wyn<>''
||
   __temp_tr_zl_zak:=0
?};
_wyn


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Zaznacza wymagalne pola w dyspozycji transportu
::   WE: _a - akronim okna redakcji
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || TR_ZL.win_edit('?') ?};

_mark:='mark=1';
_enwal:='editable=0';
TR_ZL.efld_opt(_win_red,'enable=1',,'IL_OP');
TR_ZL.efld_opt(_win_red,'editable=grayed',,'IL_OP');

::TR_ZL.efld_opt(_win_red,_enwal,,'NR');
TR_ZL.efld_opt(_win_red,_enwal,,'SYM');
TR_ZL.efld_opt(_win_red,_enwal,,'DOK');

TR_ZL.efld_opt(_win_red,_mark,,'RODZ');
TR_ZL.efld_opt(_win_red,_mark,,'DT');
TR_ZL.efld_opt(_win_red,_mark,,'KRAJ');
TR_ZL.efld_opt(_win_red,_mark,,'MIASTO');
TR_ZL.efld_opt(_win_red,_mark,,'UL');
TR_ZL.efld_opt(_win_red,_mark,,'KPOCZ');
TR_ZL.efld_opt(_win_red,_mark,,'POCZ');
TR_ZL.efld_opt(_win_red,_mark,,'KH');
TR_ZL.efld_opt(_win_red,_mark,,'KH');
TR_ZL.efld_opt(_win_red,_mark,,'POZ_M');
TR_ZL.efld_opt(_win_red,_mark,,'IL');
''


\be_trzlsy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: przed edycja symbolu dyspozycji transportu numeracja rok-wersja TRZ-000001
::----------------------------------------------------------------------------------------------------------------------
{? TR_NZL.SYM=''
||
   _sym:='';
   TR_NZL.cntx_psh();
   TR_NZL.index('ODDZ');
   TR_NZL.prefix(ST.ODDZ);
   {? TR_NZL.last
   || _nr:=#(6+(4-(TR_NZL.SYM)));
      _nr+=1
   || _nr:=1
   ?};
   _sym:='ZT-'+form(_nr,-6,,'99');
   TR_NZL.cntx_pop();
   TR_NZL.SYM:=_sym
?};
1


\rekord
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Rekord na dyspozycji transportu
::   WE:
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_wer:=cur_win(1,1);
_a:=1;
{? _a
||
   _maska:=TR_NZL.name()+4;
   _sel:=TR_NZL.sel_size();

   _w_transporcie:=exec('w_transporcie','transport_wspolne',TR_NZL.STATUS);
   _nokat:={? ~_sel & ~exec('tr_rodz_ope','transport_wspolne',TR_NZL.TR_RODZ,'Dyspozycja'@,''@,2)
           || {? _wer='REAL'  || 'ROAN(PCNA)'
              |? _wer='TRASY' || 'ON(P)'
              |? _wer='PLAN'  || 'N(T)P'
              |? _wer='WER'   || 'UZN(RIMTJOW)'
                              || '' ?}
           || ''
           ?};
   {? _maska<>'____' & _wer='REAL'
   || {? ~app_info('html_mobile') || TR_NZL.actions(_wer,'PRON(PACJW)',,1) || TR_NZL.actions(_wer,'RON(PAC)',,1) ?}
   |? ~_sel & TR_NZL.STAT_REJ='A'
   || {? _wer='REAL' & ~app_info('html_mobile') || TR_NZL.actions(_wer,'PN(JW)','?:?',1) ?};
      TR_NZL.actions_grayed(_wer,'PUZERON(JDNIPAC)')
   || _rek:=exec('dokWITHrek','reklamacje',TR_NZL.uidref());
      _tran:=
         {? ((TR_NZL.STAT_REJ<>'Z'
               |
             {? ~TR_NZL.NOTR || TR_NZL.PLAN<>'T' || 0 ?} & _w_transporcie)
               |
            ((';ZK_N;ZD_NAG;ZDP_NAG;'*TR_NZL.WHERE)>1 & TR_NZL.GRP<>''))
               &
            _wer<>'REAL'
         || 'N(W)'
         |? _rek<>'' & TR_NZL.WHERE<>'REK_N' & _wer<>'REAL'
         || 'N(W)'
         || ''
         ?};
      _dotr:={? ~_sel & (3+_wer)<>'MAG' & ~(TR_NZL.STAT_REJ='Z' & TR_NZL.PLAN='T'
               & TR_NZL.STATUS=exec('tr_nzl_status_do_planowania','transport_zlec'))
             || 'N(T)'
             || ''
             ?};
      _dmag:={? ~_sel
              & (~((';ZK_N;ZD_NAG;ZDP_NAG;'*TR_NZL.WHERE)>1)
                   | TR_NZL.STAT_REJ<>'Z'
                   | TR_NZL.MGDSP<>'N'
                   | TR_NZL.GRP<>''
                   | TR_NZL.TR_NAG<>null())
             || 'N(M)'
             || ''
             ?};
      _real:={? ~_sel & _wer='REAL'
              & (TR_NZL.TR_NAG().STAT_REJ<>'Z'
               | TR_NZL.REAL='T'
               | (TR_NZL.WHERE='ZK_N' & (';TRSX'*TR_NZL.MGDSP)>1))
             || 'R'
             || ''
             ?};
      _plan:={? ~_sel & (_wer='REAL' | _wer='TRASY') & ((';TA'*TR_NZL.REAL)>1 | (';ZT'*TR_NZL.TR_NAG().STAT_REJ)>1) || 'O' || '' ?};
      _wyco:={? ~_sel & _wer='REAL' & (TR_NZL.TR_NAG().STAT_REJ<>'Z' | TR_NZL.REAL='N')
             || 'N(C)'
             |? ~_sel & (3+_wer)='MAG' & TR_NZL.WHERE='TR_NZL'
              & (TR_NZL.STAT_REJ<>'Z' | (';DBX!'*TR_NZL.STMG)>1 | TR_NZL.TR_NAG<>null())
             || 'N(C)'
             || ''
             ?};
      _dokref:={? TR_NZL.WHERE='' | TR_NZL.WHERE='TR_NZL' || 'N(NK)' || '' ?};
      _przeplanuj:=
         {? (_sel | _maska<>'____'
               |
            _w_transporcie
               |
            TR_NZL.TR_RODZ=null())
               &
            _wer<>'REAL'
         || {? TR_NZL.WHERE<>'TR_NZL' || 'N(J)' || '' ?}
         || ''
         ?};
      _dysp:={? TR_NZL.WHERE='TR_NZL' & (3+_wer)='MAG'
             || {? ';GFECBDX'*(1+TR_NZL.STMG) || 'R' || '' ?}+
                {? ';GFEBDX'*(1+TR_NZL.STMG)  || 'N(D)' || '' ?}
             || ''
             ?};
      _dysm:={? (';ZK_N;ZD_NAG;ZDP_NAG;'*TR_NZL.WHERE)>1 & TR_NZL.GRP<>'' || '' || 'M' ?};

      _komp:={? (3+_wer)='MAG'
              & (TR_NZL.MG().SL<>'T'
               | (1+TR_NZL.STMG)<>'A') || 'N(J)' || '' ?};
      _wysl:={? (3+_wer)='MAG' & exec('FindInSet','#table','EANN','AKT',$TR_NZL.ref(),'T')<>null()
             || 'RN(JDICP)'
             || ''
             ?};
      _eanl:={? (3+_wer)='MAG' & (TR_NZL.REAL='T' | TR_NZL.MG().SL<>'T')
             || 'N(P)'
             || ''
             ?};
      _norea:={? _wer='REAL' & TR_NZL.TR_NAG().STAT_REJ='Z' & exec('ctrl_poz','transport',TR_NZL.ref())<>1
              || ''
              || 'N(N)'
              ?};
      _dandd:={? _wer='TRASY' & TR_NZL.TR_NAG().BLKORD='T' || 'Ń' || '' ?};
      _maps:={? _wer='TRASY' & exec('get','#params',700813,2)='' || 'N(AI)' || '' ?};

      _grp:=TR_NZL.GRP;
      TR_NZL.cntx_psh();
      TR_NZL.index('GRP');
      TR_NZL.prefix(_grp);
      _size_grp:=TR_NZL.size();
      TR_NZL.cntx_pop();

      _powiazane:={? (
            TR_NZL.STATUS<>exec('tr_nzl_status_oczekujace','transport_zlec')
               &
            TR_NZL.STATUS<>exec('tr_nzl_status_nowe','transport_zlec')
               &
            TR_NZL.STATUS<>exec('tr_nzl_status_do_planowania','transport_zlec')
            ) | TR_NZL.GRP<>'' | (';ZK_N;ZD_NAG;ND;TR_NZL;ZDP_NAG;REK_N;'*TR_NZL.WHERE)>1 & _size_grp>1 || 'N(O)' || '' ?};

      _is_first:=exec('FindInSet','#table','TR_ZL','POZ',TR_NZL.ref())<>null();

      _podziel:={? ((
            TR_NZL.STATUS=exec('tr_nzl_status_oczekujace','transport_zlec')
               |
            TR_NZL.STATUS=exec('tr_nzl_status_nowe','transport_zlec')
               |
            TR_NZL.STATUS=exec('tr_nzl_status_do_planowania','transport_zlec')
               |
            ((';ZK_N;ZD_NAG;ND;ZDP_NAG;REK_N;ZGP;'*TR_NZL.WHERE)>1 & TR_NZL.REAL='T')
               )
               &
            _is_first>0
               &
            ((TR_NZL.WHERE='' & TR_NZL.GRP='') | (';ZK_N;ZD_NAG;ND;TR_NZL;ZDP_NAG;REK_N;ZGP;'*TR_NZL.WHERE)>1)
            ) || '' || {? _wer<>'REAL' & _wer<>'TRASY' & TR_NZL.WHERE<>'TR_NZL' || 'N(I)' || '' ?} ?};
      {? _podziel='' & (';ZK_N;ZD_NAG;ND;ZDP_NAG;REK_N;ZGP;'*TR_NZL.WHERE)>1 & TR_NZL.GRP<>'' & TR_NZL.REAL<>'T'
         & _wer<>'REAL' & _wer<>'TRASY'
      || _podziel:='N(I)'
      |? _podziel='' & TR_NZL.WHERE='TR_NZL' & (TR_NZL.TR_NAG=null() | TR_NZL.TR_NAG().STAT_REJ='N' | TR_NZL.REAL='N')
         & _wer<>'TRASY'
      || _podziel:='N(I)'
      ?};
      {? (3+_wer)='MAG'
       & {? TR_NZL.RODZ='R' || (';ABC'*(1+TR_NZL.STMG))>1 & (';MT'*TR_NZL.REAL)>1 || (';AB'*(1+TR_NZL.STMG))>1 ?}
      || _podziel:=''
      ?};
      _pop:={? TR_NZL.WHERE='' | (';ZK_N;ZD_NAG;ND;ZDP_NAG;REK_N;ZGP;'*TR_NZL.WHERE)>1 || '' || 'P' ?};

      {? _wer='REAL'
      || {? ~app_info('html_mobile') || TR_NZL.actions(_wer,'PN(JW)','?:?',1) || TR_NZL.actions(_wer,'','?:?',1) ?}
      ?};

      _usu:={? ~exec('ctrl_tr_nzlC','transport_paczki',TR_NZL.ref()) || 'U' || '' ?};

      {? (';ZT'*TR_NZL.STAT_REJ)>1
      || _kat:={? (~TR_NZL.NOTR & TR_NZL.TR_NAG=null()) | _wer='REAL' || '' || 'P' ?};
         TR_NZL.actions_grayed(_wer,_kat+'ZU'+_tran+_real+_plan+_wyco+_dokref+_przeplanuj+_powiazane+_podziel
          +_dotr+_dmag+_dysp+_dysm+_komp+_wysl+_eanl+_norea+_nokat+_dandd+_maps)
      |? TR_NZL.WHERE<>''
      ||
         TR_NZL.actions_grayed(_wer,_pop+_usu+_tran+_real+_plan+_wyco+_dokref+_przeplanuj+_powiazane+_podziel
          +_dotr+_dmag+_dysp+_dysm+_komp+_wysl+_eanl+_norea+_nokat+_dandd+_maps)
      |? TR_NZL.SPLIT<>''
      ||
         TR_NZL.actions_grayed(_wer,'P'+_usu+_tran+_real+_plan+_wyco+_dokref+_przeplanuj+_powiazane+_podziel
          +_dotr+_dmag+_dysp+_dysm+_komp+_wysl+_eanl+_norea+_nokat+_dandd+_maps)
      ||
         TR_NZL.actions_grayed(_wer,'N(TW)'+_usu+_real+_plan+_wyco+_dokref+_przeplanuj+_powiazane+_podziel
          +_dotr+_dmag+_dysp+_dysm+_komp+_wysl+_eanl+_norea+_nokat+_dandd+_maps)
      ?}

   ?}

?};
exec('pobTR_NZLpack','transport_paczki');
exec('rekprzed','color','TR_NZL#01#')


\rekord_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Rekord na pozycjach dyspozycji transportu
::   WE: [_a] - akronim okienka - (domyślnie: POZ)
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_w:={? var_pres('_a')=type_of('') & +_a || _a || 'POZ' ?};

_maska:=TR_ZL.name()+4;
_is_nzl:=TR_NZL.sel_size()>0 | {? TR_NZL.f_active() || (#TR_NZL.ref())>0 & TR_NZL.f_test() || TR_NZL.size() ?};

{? _maska<>'____' | ~_is_nzl | TR_NZL.STAT_REJ='A'
|| TR_ZL.actions(_w,'DPUGRCW:D',,1)
|| _pack:={? _w<>'MAG' & exec('ctrl_tr_nzl','transport_paczki',TR_ZL.TR_NZL)<>0 || 'PU' || '' ?};
   _modify:=TR_ZL.TR_NZL().WHERE='' | (';ZK_N;ZD_NAG;ND;ZDP_NAG;REK_N;ZGP;'*TR_ZL.TR_NZL().WHERE)>1;
   _nokat:={? ~exec('tr_rodz_ope','transport_wspolne',TR_NZL.TR_RODZ,'Dyspozycja'@,''@,2) || 'DUP' || '' ?};
   _rezerw:={? _w='MAG' & TR_NZL.RODZ<>'Z'
            || 'RCW'
            || {? TR_ZL.POZ_REF<>'' & ref_tab(TR_ZL.POZ_REF)=ZK_P
               || _rez:=exec('FindAndGet','#table',ZK_P,TR_ZL.POZ_REF,,"REZ",-1);
                  {? _rez>0 || 'R'
                  |? _rez=0 || 'W'
                  || ''
                  ?}
               || ''
               ?}
            ?};
   _popgot:={? _w='MAG'
            || {? TR_ZL.TR_NZL().WHERE='TR_NZL'
                & ((1+TR_NZL.STMG)<>'A' | exec('FindInSet','#table','EANN','AKT',$TR_NZL.ref(),'T')<>null())
               || 'JRCW'
               || ''
               ?}
            || 'P'
            ?};
   _magadd:='';
   {? TR_ZL.TR_NZL().WHERE='TR_NZL'
   || {? ';YXDno'*TR_ZL.TR_NZL().MGDSP
      || _magadd:='DPU'
      |? exec('FindInSet','#table','TR_ZLM','TR_ZL',TR_ZL.ref(),,,,,null())<>null()
      || _magadd:='DPU'
      || _tr_nzl:=TR_ZL.TR_NZL;
         TR_ZL.cntx_psh();
         TR_ZL.index('POZ');
         TR_ZL.prefix(_tr_nzl);
         {? TR_ZL.first()
         || _dok_ref:=TR_ZL.DOK_REF;
            {!
            |? {? TR_ZL.DOK_REF<>_dok_ref
               || _magadd:='D';
                  0
               || TR_ZL.next()
               ?}
            !}
         ?};
         TR_ZL.cntx_pop()
      ?}
   ?};
   _magmod:={? _w='MAG'
            || _magadd+{? TR_ZL.size()=1 | TR_ZL.ZIL>0 || 'U'
                       |? TR_ZL.ZIL>=TR_ZL.IL || 'PU'
                       || ''
                       ?}
            || 'DU'
            ?};
   TR_ZL.actions(_w,'','?:?',1);
   {? TR_ZL.TR_NZL().STAT_REJ='Z' | ~_modify | TR_ZL.TR_NZL().SPLIT<>''
   || TR_ZL.actions_grayed(_w,_rezerw+_popgot+_pack+_nokat+_magmod+'G:D')
   || TR_ZL.actions_grayed(_w,_rezerw+_pack+_nokat+{? _nokat<>'' || ':D' || '' ?})
   ?};
   {? TR_ZL.M<>null || POMOC.RODZ:=POMOC.RODZT:=TR_ZL.M().RODZ ?}
?};
0


\zakoncz_button
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Funkcja ustawiająca zmienną globalną czy z okna zakończyć dyspozycji transportu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_btnRuleResult:='';
{? exec('czy_zakoncz','transport_wspolne')
||
   _btnRuleResult:='key:F2';
   __temp_tr_zl_zak:=1
?};
_btnRuleResult


\czy_zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Funkcja zamykająca dyspozycje transportu
::   WE:
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------

:: czy można zakończyć

{? 1=1
||

   return(1)
||
   FUN.info('Nie można zakończyć dyspozycji transprtu.'@)
?};
0


\tr_log_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Dodanie wpisu w logu zdarzeń dyspozycji transportu
::   WE: _a - string - Komunikat
::       _b - TR_NZL.uidref() - Dyspozycja transportu
::       [_c] - TR_ZL.uidref() - Pozycja dyspozycji transportu
::       [_d] - [ZLP].uidref() - Dokument
::       [_e] - string - Opis dokumentu
::       [_f] - TR_NAG.uidref() - Transport nagłówek
::       [_g] - TR_POS.uidref() - Transport pozycja
::       [_h] - TR_MOC.ref()
::       [_i] - TR_MOC.IL_SZT
::       [_j] - 1 lub numer trasy -niezrealizowano transportu (dopisz informacje do LOG-a na podstawie dyspozycji)
::              0-nie(domyślnie)
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<>type_of('') |  var_press('_b')<>type_of('')
||
   return(0)
?};
_msg:=_a;
_zlec:=_b;
_zlec_poz:={? var_press('_c')=type_of('') || _c || '' ?};
_dok:={? var_press('_d')=type_of('') || _d || '' ?};
_dok_opis:={? var_press('_e')=type_of('') || _e || '' ?};
_tran_nag:={? var_press('_f')=type_of('') || _f || '' ?};
_tran_poz:={? var_press('_g')=type_of('') || _g || '' ?};
_tr_moc:={? var_pres('_h')=type_of(null()) || _h || null() ?};
_il_szt:={? var_pres('_i')=type_of(0) || _i || 0 ?};
_noreal:={? var_pres('_j')=type_of(0) || _j || 0 ?};
_resp:=0;

::TR_LOG.cntx_psh();
::TR_LOG.prefix();
::_loop:=TR_LOG.first();
::{!
::|? _loop
::|!
::   _loop:=TR_LOG.del()
::!};
::TR_LOG.cntx_pop();
::return(1);

TR_LOG.cntx_psh();
TR_LOG.prefix();
TR_LOG.blank();
TR_LOG.OPIS:=_msg;
TR_LOG.TR_NZL:=_zlec;
TR_LOG.TR_ZL:=_zlec_poz;
TR_LOG.DOK:=_dok;
TR_LOG.DOK_OP:=_dok_opis;
::TR_LOG.DZ:=date();
::TR_LOG.GZ:=time();
TR_LOG.TR_NAG:=_tran_nag;
TR_LOG.TR_POZ:=_tran_poz;
TR_LOG.TR_MOC:=_tr_moc;
TR_LOG.IL_SZT:=_il_szt;
{? _noreal>0 & _zlec<>''
|| _powod:=exec('FindAndGet','#table',TR_NZL,_zlec,,"POW",0);
   {? _powod<>'' || TR_LOG.OPIS:='Niezrealizowano bo: %1'@[_powod] ?}
?};
_resp:=TR_LOG.add();
{? _noreal>0 & _zlec<>''
|| TR_LOG.LP:=_noreal;
   TR_LOG.TR_MOC:=null();
   TR_LOG.IL_SZT:=exec('FindAndGet','#table',TR_NZL,_zlec,,"IL_SZT",0);
   TR_LOG.IL_T:=exec('FindAndGet','#table',TR_NZL,_zlec,,"IL_T",0);
   TR_LOG.IL_M3:=exec('FindAndGet','#table',TR_NZL,_zlec,,"IL_M3",0);
   TR_LOG.SYM:=exec('FindAndGet','#table',TR_NZL,_zlec,,"SYM",0);
   TR_LOG.DNR:=exec('FindAndGet','#table',TR_NZL,_zlec,,"DR",0);
   TR_LOG.GNR:=exec('FindAndGet','#table',TR_NZL,_zlec,,"GR",0);
   TR_LOG.KRAJ:=exec('FindAndGet','#table',TR_NZL,_zlec,,"KRAJ",0);
   TR_LOG.MIASTO:=exec('FindAndGet','#table',TR_NZL,_zlec,,"MIASTO",0);
   TR_LOG.UL:=exec('FindAndGet','#table',TR_NZL,_zlec,,"UL",0);
   TR_LOG.NUMER:=exec('FindAndGet','#table',TR_NZL,_zlec,,"NUMER",0);
   TR_LOG.DZIELN:=exec('FindAndGet','#table',TR_NZL,_zlec,,"DZIELN",0);
   TR_LOG.RODZ:=exec('FindAndGet','#table',TR_NZL,_zlec,,"RODZ",0);
   TR_LOG.KTM:=exec('FindAndGet','#table',TR_NZL,_zlec,,"KTM",0);
   _powod:=exec('FindAndGet','#table',TR_NZL,_zlec,,"POW",0);
   {? _powod<>'' || TR_LOG.OPIS:='Niezrealizowano bo: %1'@[_powod] ?};
   TR_LOG.NOREAL:='T';
   TR_LOG.TR_NZL:='';
   _resp:=TR_LOG.add()
?};
TR_LOG.cntx_pop();
_resp


\tr_log_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Wyświetlenie logów zdarzeń dyspozycji transportu dla wybranej dyspozycji
::   WE: _a - TR_ZL.uidref() - Dyspozycja transportu
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<>type_of('')
||
   return(~~)
?};
TR_LOG.cntx_psh();
TR_LOG.index('TRZL');
TR_LOG.prefix(_a,);
TR_LOG.select();
TR_LOG.cntx_pop();
~~


\tr_log_show_DOK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Wyświetlenie logów zdarzeń dyspozycji transportu dla wybranej dyspozycji
::   WE: _a - DOK uidref dokumentu powiązanego z dyspozycją transportu
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<>type_of('')
||
   return(~~)
?};
_trlog:=tab_tmp(2,'DZ','DATE','Data zapisu'
         ,'GZ','TIME','Czas zapisu'
         ,'OPIS','STRING[255]','Opis'
         ,'USER','STRING[100]','Użytkownik'
         ,'TR_LOG','STRING[48]','');
_win:=_trlog.mk_sel('Zdarzenia transportowe - historia'@,,,'tr_logdok',,,,,'U',,,,,,'auto');
_trlog.win_fld(_win,,'DZ',,,10);
_trlog.win_fld(_win,,'GZ',,,10);
_trlog.win_fld(_win,,'OPIS',,,60);
_trlog.win_fld(_win,,'USER',,,30);
_trlog.win_act(_win,,'Szukaj');
_trlog.win_act(_win,,'Kolejność');
_trlog.win_act(_win,0,'Wyświetl',,,,"exec('tr_log_disp','transport_wspolne')",,0);
_trlog.win_sel(_win);

_msk:=tab_tmp(1,'NAME','STRING[8]','');
_msk.blank(); _msk.NAME:='trlo____'; _msk.add(1);
_Tab:=ref_tab(_a);
{? var_pres('TRARCH_B',_Tab)>0 & var_pres('TRARCH_E',_Tab)>0
|| _by:=#(2+(_Tab.TRARCH_B+4)); _bm:=#(_Tab.TRARCH_B+2);
   _ey:=#(2+(_Tab.TRARCH_E+4)); _em:=#(_Tab.TRARCH_E+2);
   {? _by=_ey
   || {! _ii:=_bm.._em |! _msk.blank(); _msk.NAME:='trlo'+form(_by,-2,0,'99')+form(_ii,-2,0,'99'); _msk.add(1) !}
   |? _ey>_by
   || _jj:=_by+1;
      {! _ii:=_bm..12 |! _msk.blank(); _msk.NAME:='trlo'+form(_by,-2,0,'99')+form(_ii,-2,0,'99'); _msk.add(1) !};
      {! |? _jj<_ey
      |! {! _ii:=1..12 |! _msk.blank(); _msk.NAME:='trlo'+form(_jj,-2,0,'99')+form(_ii,-2,0,'99'); _msk.add(1) !};
         _jj+=1
      !};
      {! _ii:=1.._em |! _msk.blank(); _msk.NAME:='trlo'+form(_ey,-2,0,'99')+form(_ii,-2,0,'99'); _msk.add(1) !}
   ?}
?};

TR_LOG.cntx_psh();
_msk.clear();
{? _msk.first()
|| {!
   |? TR_LOG.use(_msk.NAME);
      TR_LOG.index('DOK');
      TR_LOG.prefix(_a,);
      {? TR_LOG.first()
      || {!
         |? _trlog.blank();
            _trlog.DZ:=TR_LOG.DZ;
            _trlog.GZ:=TR_LOG.GZ;
            _trlog.OPIS:=TR_LOG.OPIS;
            _trlog.USER:=TR_LOG.UW().NAME;
            _trlog.TR_LOG:=TR_LOG.uidref();
            _trlog.add(1);
            TR_LOG.next()
         !}
      ?};
      _msk.next()
   !}
?};
TR_LOG.cntx_pop();
_trlog.first();
_trlog.select();

obj_del(_trlog);
obj_del(_msk);
~~


\tr_log_show_menu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Wyświetlenie logów zdarzeń dyspozycji transportu dla wybranej dyspozycji
::   WE: _a - TR_ZL.uidref() - Dyspozycja transportu
::----------------------------------------------------------------------------------------------------------------------
exec('tr_log_show','transport_wspolne',TR_NZL.uidref())


\log_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Log dodania nowej dyspozycji transportu
::   WE: _a - TR_NZL.uidref
::       _b - akcja (add,edit,del,zak,gen,wyc,arch)
::       [_c] - opis dodatkowy
::       [_d] - TR_MOC.ref()
::       [_e] - TR.IL_SZT
::       [_f] - TR_NAG.uidref()
::       [_g] - numer niezrealizowanej trasy
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<>type_of('') | var_press('_b')<>type_of('') || return('') ?};
_opis:={? var_pres('_c')=type_of('') || _c || '' ?};
_tr_moc:={? var_pres('_d')=type_of(null()) || _d || null() ?};
_il_szt:={? var_pres('_e')=type_of(0) || _e || 0 ?};
_tr_nag:={? var_pres('_f')=type_of('') || _f || '' ?};
_lp_tr:={? var_pres('_g')=type_of(0) || _g || 0 ?};

TR_NZL.cntx_psh();
{? TR_NZL.seek(_a)
||
   _message:='';
   _symbol_zlecenia:=TR_NZL.SYM;
   _symbol_dokumentu:=exec('sym_dok','transport_wspolne', TR_NZL.WHERE, TR_NZL.DOK_REF);
   _dok:=TR_NZL.DOK_REF;
   _dok_op:=TR_NZL.DOK;
   {? _symbol_dokumentu<>''
   ||
      _symbol_dokumentu:='z dokumentu '@ + _symbol_dokumentu
   ?};
   {? _b='add'   || _message:='Dodano dyspozycję transportu %1.'@[_symbol_zlecenia]
   |? _b='edit'  || _message:='Poprawiono dyspozycję transportu %1.'@[_symbol_zlecenia]
   |? _b='del'   || _message:='Usunięto dyspozycję transportu %1.'@[_symbol_zlecenia]
   |? _b='zak'   || _message:='Zakończono dyspozycję transportu %1.'@[_symbol_zlecenia]
   |? _b='kop'   || _message:='Utworzono kopie dyspozycji transportu %1%2.'@[_symbol_zlecenia,_opis]
   |? _b='pow'   || _message:='Utworzono powiązaną dyspozycję transportu %1%2.'@[_symbol_zlecenia,_opis]
   |? _b='dzi'   || _message:='Podzielono dyspozycję transportu %1.'@[_symbol_zlecenia]
   |? _b='gen'   || _message:='Wygenerowano dyspozycję transportu %1 %2.'@[_symbol_zlecenia,_symbol_dokumentu]
   |? _b='wyc'   || _message:='Wycofano dyspozycję transportu %1.'@[_symbol_zlecenia]
   |? _b='arch'  || _message:='Zarchiwizowano dyspozycję transportu %1.'@[_symbol_zlecenia]
   |? _b='tran'  || _message:='Zaplanowano transport dla dyspozycji %1%2.'@[_symbol_zlecenia,_opis]
   |? _b='trdt'  || _message:='Zmieniono datę transportu dla dyspozycji %1%2.'@[_symbol_zlecenia,_opis]
   |? _b='notr'  || _message:='Usunięto z transportu dyspozycję %1%2.'@[_symbol_zlecenia,_opis]
   |? _b='reatr' || _message:='Transport dla dyspozycji %1 został zrealizowany.'@[_symbol_zlecenia]
   |? _b='nortr' || _message:='Transport dla dyspozycji %1 nie został zrealizowany.'@[_symbol_zlecenia]
   |? _b='mocpr' || _message:='Przeplanowano dyspozycję transportu %1 (%2).'@[_symbol_zlecenia,_opis]
   |? _b='arch'  || _message:='Zarchiwizowano dyspozycję transportu %1.'@[_symbol_zlecenia]
   |? _b='anu'   || _message:='Anulowano dyspozycję transportu %1.'@[_symbol_zlecenia]
   ?};
   exec('tr_log_add','transport_wspolne',_message,TR_NZL.uidref(),,_dok,_dok_op,_tr_nag,,_tr_moc,_il_szt
    ,{? _b='nortr' || _lp_tr || 0 ?})
?};
TR_NZL.cntx_pop()


\sym_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Pobranie symbolu dokumentu z dyspozycji
::   WE: _a - TR_NZL.WHERE
::       _b - TR_NZL.DOK
::----------------------------------------------------------------------------------------------------------------------
_sym:='';
{? _a='ZLP'
||
   _sym:=''
|? (';ZK_N;ZD_NAG;ND;ZDP_NAG;REK_N;'*_a)>1
||
   _tab:=($_a)()
?};
{? var_press('_tab')>-1
|| _sym:=exec('FindAndGet','#table',_tab,_b,,"SYM",'')
?};
_sym


\log_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Log dodania nowej dyspozycji transportu
::   WE: _a - TR_ZL.uidref
::       _b - akcja (add,edit,del)
::       [_c] - ref zlec
::       [_d] - sym zlec
::       [_e] - nr poz
::       [_f] - M.N poz
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? var_press('_a')<>type_of('') | var_press('_b')<>type_of('') || _ok:=0 ?};

_message:='';
_zlec:={? var_press('_c')=type_of('') || _c || '' ?};
_symbol_zlecenia:={? var_press('_d')=type_of('') || _d || '' ?};
_nr_poz:=${? var_press('_e')=type_of(0) || _e || 1 ?};
_m_naz:={? var_press('_f')=type_of('') || _f || '' ?};
_dok:='';
_dok_op:='';
_poz:=_a;
_il_zre:='';

{? _b<>'del'
||
   TR_ZL.cntx_psh();
   {? TR_ZL.seek(_a)
   ||
      _zlec:=TR_ZL.TR_NZL().uidref();
      _symbol_zlecenia:=TR_ZL.TR_NZL().SYM;
      _nr_poz:=$TR_ZL.POZ;
      _m_naz:={? TR_ZL.M<>null || TR_ZL.M().N || '' ?};
      _dok:=TR_ZL.TR_NZL().DOK_REF;
      _dok_op:=TR_ZL.TR_NZL().DOK;
      _il_zre:=$TR_ZL.ZIL;
      {? TR_ZL.REAL='T' || _b:='zre' ?}
   ||
      _ok:=0
   ?};
   TR_ZL.cntx_pop()
?};

{? _ok
||
   {? _b='add'  || _message:='Dodano nową pozycję o numerze: %2, z materiałem: ''%3'' do dyspozycji transportu %1.'@[_symbol_zlecenia, _nr_poz, _m_naz]
   |? _b='edit' || _message:='Poprawiono pozycję o numerze: %2, z materiałem: ''%3'' w dyspozycji transportu %1.'@[_symbol_zlecenia, _nr_poz, _m_naz]
   |? _b='zre'  || _message:='Zrealizowano pozycję o numerze: %2, z materiałem: ''%3'' w dyspozycji transportu %1 w ilości: %4.'@[_symbol_zlecenia, _nr_poz, _m_naz, _il_zre]
   |? _b='del'  || _message:='Usunięto pozycję o numerze: %2, z materiałem: ''%3'' w dyspozycji transportu %1.'@[_symbol_zlecenia, _nr_poz, _m_naz]
   |? _b='ptw'  || _message:='Potwierdzono pozycję o numerze: %2, z materiałem: ''%3'' w dyspozycji transportu %1.'@[_symbol_zlecenia, _nr_poz, _m_naz]
   ?};
   exec('tr_log_add','transport_wspolne',_message,_zlec,_poz,_dok,_dok_op)
?}


\tr_log_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Usuwanie logów zdarzeń dyspozycji transportu dla wybranej dyspozycji
::   WE: _a - TR_ZL.uidref() - Dyspozycja transportu
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<>type_of('')
||
   return(~~)
?};
TR_ZL.cntx_psh();
{? TR_ZL.seek(_a)
||
   TR_LOG.cntx_psh();
   TR_LOG.index('TRZL');
   TR_LOG.prefix(_a,);
   {? TR_LOG.first() ||
      {!|? TR_LOG.del() !}
   ?};
   TR_LOG.cntx_pop()
?};
TR_ZL.cntx_pop();
~~


\adres_from
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Wybór z jakiego miejsca ma być pobrany adres dyspozycji transportu
::       Adres pobrany z (KH, KH_ODB,KH_MSC,POS,MG,WYS,MANUAL)
::   WE: _a - tabela do uzupełnienia adresu
::       [_b] - akronim pola do przepisania adresu, domyślnie brak
::----------------------------------------------------------------------------------------------------------------------
_table_name:={? var_press('_a')=type_of('') || _a || '' ?};
_table:={? _table_name<>'' || ($_a)() || '' ?};
_fld:={? var_pres('_b')=type_of('') || _b || '' ?};

_wyn:=fld();

{? var_press('_table')=-1
||
   FUN.info('Nie podano nazwy aktualnie wczytanej tabeli w oknie redagowania.'@);
   return(_wyn)
?};

_tab:=tab_tmp(1
   ,'NAME','STRING[250]','Nazwa'
   ,'CODE','STRING[20]','Wartość'
);
_ndx1:=_tab.ndx_tmp(,,'NAME',,);
_tab.index(_ndx1);

_names:='Kontrahenta.Odbiorcy kontrahenta.Miejsca dostawy.Posesji.Magazynu.Składowiska.Uzupełniony ręcznie'@;
_codes:='KH,KH_ODB,KH_MSC,POS,MG,WYS,MANUAL';

_names_tab:=spli_str(_names,'.');
_codes_tab:=spli_str(_codes,',');
_len:=obj_len(_names_tab);

{! _i.._len
|!
   _tab.blank();
   _tab.NAME:=_names_tab[_i];
   _tab.CODE:=_codes_tab[_i];
   _tab.add()
!};

_win:=_tab.mk_sel('Pobranie adresu z'@,,,'tr_zlec',,,,,'U',,,,,,'auto');
_tab.win_fld(_win,,'NAME',,,20);
_tab.win_act(_win,,'Formuła','Wybierz'@@,,,"","sel_exit()",1,1,"","",'W');
_tab.win_sel(_win);

_select:=_tab.select();
{? _select>0
||
   exec('adres_set_select','transport_wspolne', _table_name, _tab.CODE)
?};

_wyn


\adres_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MarKus [19.42]
:: OPIS: Pobiera dane adresowe w podanej tabeli w buforze
::   WE: _a - tabela z której jest pobierany adres
::----------------------------------------------------------------------------------------------------------------------
::_tab:={? var_press('_a')=type_of('') || ($_a)() || null ?};
::
::_wyn:=obj_new('KRAJ','MIASTO','UL','KPOCZ','POCZ','DZIELN');
::
::{? var_press('_tab')>0
::||
::   {? var_press('KRAJ',_tab)>0 || _wyn.KRAJ:=_tab.KRAJ ?};
::   {? var_press('MIASTO',_tab)>0 || _wyn.MIASTO:=_tab.MIASTO ?};
::   {? var_press('UL',_tab)>0 || _wyn.UL:=_tab.UL ?};
::   {? var_press('KPOCZ',_tab)>0 || _wyn.KPOCZ:=_tab.KPOCZ ?};
::   {? var_press('POCZ',_tab)>0 || _wyn.POCZ:=_tab.POCZ ?};
::   {? var_press('DZIELN',_tab)>0 || _wyn.DZIELN:=_tab.DZIELN ?};
::   return(_wyn)
::?};
~~


\adres_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MarKus [19.42]
:: OPIS: Uzupełnia dane adresowe do wybranej tabeli w buforze
::   WE: _a - tabela do uzupełnienia adresu
::       [_b] - kraj
::       [_c] - miasto
::       [_d] - ulica
::       [_e] - kod pocztowy
::       [_f] - poczta
::       [_g] - dzielnica
::       [_h] - numer
::       [_i] - telefon
::       [_j] - email
::       [_k] - lokal
::----------------------------------------------------------------------------------------------------------------------
_notab:=0;
_tab:={? var_press('_a')=type_of('') || ($_a)() || _notab:=1; null() ?};
_par:=obj_new(10);
_par[1]:=var_press('_b')=type_of('');
_par[2]:=var_press('_c')=type_of('');
_par[3]:=var_press('_d')=type_of('');
_par[4]:=var_press('_e')=type_of('');
_par[5]:=var_press('_f')=type_of('');
_par[6]:=var_press('_g')=type_of('') & var_press('DZIELN',_tab)>0;
_par[7]:=var_press('_h')=type_of('');
_par[8]:=var_press('_i')=type_of('');
_par[9]:=var_press('_j')=type_of('');
_par[10]:=var_press('_k')=type_of('');

  _kraj:={? _par[1] || _b || '' ?};
_miasto:={? _par[2] || _c || '' ?};
 _ulica:={? _par[3] || _d || '' ?};
_k_pocz:={? _par[4] || _e || '' ?};
  _pocz:={? _par[5] || _f || '' ?};
 _dziel:={? _par[6] || _g || '' ?};
 _numer:={? _par[7] || _h || '' ?};
   _tel:={? _par[8] || _i || '' ?};
 _email:={? _par[9] || _j || '' ?};
 _lokal:={? _par[10] || _k || '' ?};

{? var_press('_tab')>0
||
   {? _par[1] | (var_press('KRAJ',_tab)>0 & _kraj<>'') || _tab.KRAJ:=_kraj ?};
   {? _par[2] | (var_press('MIASTO',_tab)>0 & _miasto<>'') || _tab.MIASTO:=_miasto ?};
   {? _par[3] | (var_press('UL',_tab)>0 & _ulica<>'') || _tab.UL:=_ulica ?};
   {? _par[4] | (var_press('KPOCZ',_tab)>0 & _k_pocz<>'') || _tab.KPOCZ:=_k_pocz ?};
   {? _par[5] | (var_press('POCZ',_tab)>0 & _pocz<>'') || _tab.POCZ:=_pocz ?};
   {? _par[6] | (var_press('DZIELN',_tab)>0 & _dziel<>'') || _tab.DZIELN:=_dziel ?};
   {? _par[7] | (var_press('NUMER',_tab)>0 & _numer<>'') || _tab.NUMER:=_numer ?};
   {? _par[8] | (var_press('TEL',_tab)>0 & _tel<>'') || _tab.TEL:=_tel ?};
   {? _par[9] | (var_press('EM',_tab)>0 & _email<>'') || _tab.EM:=_email ?};
   {? _par[10] | (var_press('LOKAL',_tab)>0 & _lokal<>'') || _tab.LOKAL:=_lokal ?}
?};
obj_del(_par);
1


\adres_set_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Uzupełnienie adresu na podstawie uzupełnionych kontrahentów
::   WE: _a - tabela do uzupełnienia adresu
::      [_b] - skąd pobiera dokument
::      [_c] - 1-ustaw status, 0-domyślnie nie
::----------------------------------------------------------------------------------------------------------------------
_status:=0;
_table:={? var_press('_a')=type_of('') || ($_a)() || null ?};
_from:={? var_press('_b')=type_of('') || _b || 'MANUAL' ?};
_stat:={? var_press('_c')=type_of(0) || _c || 0 ?};

{? var_press('_table')>-1
||
   _adres:=obj_new('KRAJ','MIASTO','UL','KPOCZ','POCZ','DZIELN','NUMER','LOKAL','TEL','EM');
::   _adres.KRAJ:='';
::   _adres.MIASTO:='';
::   _adres.UL:='';
::   _adres.KPOCZ:='';
::   _adres.POCZ:='';
::   _adres.DZIELN:='';
::   _adres.NUMER:='';
   {? _from='KH'
   ||
      KH.cntx_psh();
      KH.prefix();
      {? KH.seek(_table.KH)
      ||
         _adres.KRAJ:=KH.KRAJ;
         _adres.MIASTO:=KH.MIASTO;
         _adres.UL:=KH.UL;
         _adres.KPOCZ:=KH.KPOCZ;
         _adres.POCZ:=KH.POCZ;
         _adres.DZIELN:='';
         _adres.NUMER:=KH.DOM;
         _adres.LOKAL:=KH.LOKAL;
         _adres.TEL:=KH.TEL;
         _adres.EM:=KH.EM;
         _status:=1
      ||
         FUN.info('Nie wypełniono kontrahenta.'@)
      ?};
      KH.cntx_pop()
   |? _from='KH_ODB'
   ||
      KH_ODB.cntx_psh();
      KH_ODB.prefix();
      {? KH_ODB.seek(_table.KH_ODB)
      ||
         _adres.KRAJ:=KH_ODB.KRAJ;
         _adres.MIASTO:=KH_ODB.MIASTO;
         _adres.UL:=KH_ODB.UL;
         _adres.KPOCZ:=KH_ODB.KPOCZ;
         _adres.POCZ:=KH_ODB.POCZ;
         _adres.DZIELN:='';
         _adres.NUMER:=KH_ODB.DOM;
         _adres.LOKAL:=KH_ODB.LOKAL;
         _adres.TEL:=KH_ODB.KH().TEL;
         _adres.EM:=KH_ODB.EM;
         _status:=1
      ||
         FUN.info('Nie wypełniono odbiorcy.'@)
      ?};
      KH_ODB.cntx_pop()
   |? _from='KH_MSC'
   ||
      KH_MSC.cntx_psh();
      KH_MSC.prefix();
      {? KH_MSC.seek(_table.KH_MSC)
      ||
         _adres.KRAJ:=KH_MSC.KRAJ;
         _adres.MIASTO:=KH_MSC.MIASTO;
         _adres.UL:=KH_MSC.UL;
         _adres.KPOCZ:=KH_MSC.KPOCZ;
         _adres.POCZ:=KH_MSC.POCZ;
         _adres.DZIELN:='';
         _adres.NUMER:=KH_MSC.DOM;
         _adres.LOKAL:=KH_MSC.LOKAL;
         _adres.TEL:=KH_MSC.TEL;
         _adres.EM:=KH_MSC.EMAIL;
         _status:=1
      ||
         FUN.info('Nie wypełniono miejsca dostawy.'@)
      ?};
      KH_MSC.cntx_pop()
   |? _from='POS'
   ||
      POS.cntx_psh();
      POS.prefix();
      {? POS.seek(_table.POS)
      ||
         _adres.KRAJ:='';
         _adres.MIASTO:=POS.MIA().NAZ;
         _adres.UL:=POS.UL().UL;
         _adres.KPOCZ:=POS.UL().KDP;
         _adres.POCZ:=POS.UL().MIA().NAZ;
         _adres.DZIELN:=POS.DZI().NAZ;
         _adres.NUMER:=POS.NR;
         _adres.LOKAL:='';
         _adres.TEL:={? POS.KH<>null || POS.KH().TEL || '' ?};
         _adres.EM:={? POS.KH<>null || POS.KH().EM || '' ?};
         _status:=1
      ||
         FUN.info('Nie wypełniono posesji.'@)
      ?};
      POS.cntx_pop()
   |? _from='WYS'
   ||
      WYS.cntx_psh();
      WYS.prefix();
      {? WYS.seek(_table.WYS)
      ||
         _adres.KRAJ:='';
         _adres.MIASTO:=WYS.UL().MIA().NAZ;
         _adres.UL:=WYS.UL().UL;
         _adres.KPOCZ:=WYS.UL().KDP;
         _adres.POCZ:=WYS.UL().MIA().NAZ;
         _adres.DZIELN:='';
         _adres.NUMER:=WYS.NR;
         _adres.LOKAL:='';
         _adres.TEL:=WYS.TEL;
         _adres.EM:='';
         _status:=1
      ||
         FUN.info('Nie wypełniono składowiska.'@)
      ?};
      WYS.cntx_pop()
   |? _from='MG'
   ||
      MG.cntx_psh();
      MG.prefix();
      {? MG.seek(_table.MG)
      ||
         _adres.KRAJ:=MG.KRAJ;
         _adres.MIASTO:=MG.MIASTO;
         _adres.UL:=MG.UL;
         _adres.KPOCZ:=MG.KPOCZ;
         _adres.POCZ:=MG.POCZ;
         _adres.DZIELN:='';
         _adres.NUMER:=MG.DOM;
         _adres.LOKAL:=MG.LOKAL;
         _adres.TEL:='';
         _adres.EM:='';
         _status:=1
      ||
         {? ~_stat
         || FUN.info('Nie wypełniono magazynu.'@)
         || _status:=1
         ?}
      ?};
      MG.cntx_pop()
   |? _from='MANUAL'
   ||
      _status:=1
   ?};
   exec('adres_set','transport_wspolne',_a,_adres.KRAJ,_adres.MIASTO,_adres.UL,_adres.KPOCZ,_adres.POCZ,
        _adres.DZIELN,_adres.NUMER,_adres.TEL,_adres.EM,_adres.LOKAL)
?};
{? _status=0
||
   {? var_press('__temp_addr_cho_kod')=7
   ||
      _table.ADDR_CHO:=__temp_addr_cho_kod
   ||
      _table.ADDR_CHO:=null
   ?}
?};
_status


\adres_blank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Wartość początkowa pola z wyborem adresu
::----------------------------------------------------------------------------------------------------------------------
'MANUAL'


\trig_log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Triggery obsługujące logowanie zdarzeń na TR_ZL
::----------------------------------------------------------------------------------------------------------------------
::add,edit,del
_naz_trig:='logtrzl';
TR_ZL.trig_a('add',"
   exec('log_poz','transport_wspolne',TR_ZL.uidref(),'add');
   exec('sum_poz','transport_zlec', TR_ZL.TR_NZL().ref());
~~",_naz_trig + 'add');
TR_ZL.trig_a('put',"
   exec('log_poz','transport_wspolne',TR_ZL.uidref(),'edit');
   exec('sum_poz','transport_zlec', TR_ZL.TR_NZL().ref());
~~",_naz_trig + 'put');
TR_ZL.trig_a('del',"
      _ref_zlec:=bfld('TR_NZL');
      exec('sum_poz','transport_zlec', _ref_zlec);
      _uidref_zlec:=exec('FindAndGet','#table',TR_NZL,_ref_zlec,,\"TR_NZL.uidref()\",'');
      _symbol_zlecenia:=exec('FindAndGet','#table',TR_NZL,_ref_zlec,,\"TR_NZL.SYM\",'');
      _nr_poz:=bfld('POZ');
      _m_naz:=exec('FindAndGet','#table',M,bfld('M'),,\"M.N\",'');
exec('log_poz','transport_wspolne','','del', _uidref_zlec, _symbol_zlecenia, _nr_poz, _m_naz);
~~",_naz_trig + 'del');
~~


\trig_log_off
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Triggery obsługujące logowanie zdarzeń na TR_ZL
::----------------------------------------------------------------------------------------------------------------------
::add,edit,del
_naz_trig:='logtrzl';
TR_ZL.trig_a('add',,_naz_trig + 'add');
TR_ZL.trig_a('put',,_naz_trig + 'put');
TR_ZL.trig_a('del',,_naz_trig + 'del');
~~


\addr_cho_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Wybór miejsca skąd ma być pobrany adres
::----------------------------------------------------------------------------------------------------------------------
TR_Z.TR_ADR:=1;
exec('adres_set_select','transport_wspolne', 'TR_NZL', ADDR_CHO.K);
1


\addr_cho_blank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Wartość początkowa pola z wyborem adresu
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
ADDR_CHO.cntx_psh();
ADDR_CHO.index('KOD');
ADDR_CHO.prefix('MANUAL');
{? ADDR_CHO.first()
||
   _ref:=ADDR_CHO.ref()
?};
ADDR_CHO.cntx_pop();
_ref


\addr_cho_prev
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Funkcja przed wyborem adresu
::----------------------------------------------------------------------------------------------------------------------
{? var_press('__temp_addr_cho_kod')<>7 || VAR_DEL.delete('__temp_addr_cho_kod') ?};
__temp_addr_cho_kod:=ADDR_CHO.ref();
~~


\history_zlp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Wyświetlenie logów zdarzeń dyspozycji transportu dla wybranego zlp
::----------------------------------------------------------------------------------------------------------------------
exec('tr_log_show_DOK','transport_wspolne', ZLP.uidref())


\history_UPMZAD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Wyświetlenie logów zdarzeń dyspozycji transportu dla wybranego UPMZAD
::----------------------------------------------------------------------------------------------------------------------
exec('tr_log_show_DOK','transport_wspolne', UPMZAD.uidref())


\status_TR_NZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Aktualizuje status dkl TR_NZL
::   WE: _a - ref TR_NZL
::----------------------------------------------------------------------------------------------------------------------
_res:='';
TR_NZL.cntx_psh();
TR_NZL.prefix();
{? TR_NZL.seek(_a)
||
   TR_NZL.STATUS:=exec('tr_nzl_status','transport_zlec');
   {? TR_NZL.WHERE='TR_NZL' || exec('status_MG','transport_wspolne') ?};
   {? TR_NZL.put(1)
   || _res:=TR_NZL.STATUS
   ?}
?};
TR_NZL.cntx_pop();
_res


\adres_change
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Zmiana adresu po zmianie wartości z pól miejsc: kontrahent, odbiorca, posesja, magazyn, składowisko
::       w zależności jaką wartość jest w polu "adres z"
::   WE: _a - tabela do uzupełnienia adresu
::       [_b] - kod zmiany
::----------------------------------------------------------------------------------------------------------------------
_table_name:={? var_press('_a')=type_of('') || _a || '' ?};
_table:={? _table_name<>'' || ($_a)() || null ?};
_code:={? var_pres('_b')=type_of('') || _b || '' ?};
{? var_press('_table')>0
||
   {? _code='' || _code:=_table.ADDR_CHO().K ?};
   exec('adres_set_select','transport_wspolne', _table_name, _code);
   1
?};
0


\tr_act_uid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Sprawdzanie która czynnośc została użyta
::   WE: _a - TR_NZL.WHERE
::   WY: kod czynności
::----------------------------------------------------------------------------------------------------------------------
_where:={? var_press('_a')=type_of('') || _a || '' ?};
_result:={? _a='' || 'LTR_ZLE_DZLE' || 'LTR_ZLE_GZLE' ?};
_result


\tr_nzl_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Wyświetlenie okienka podglądu TR_NZL
::----------------------------------------------------------------------------------------------------------------------
_win_akr:='RED';
_win_red:=TR_NZL.mk_edit('Dyspozycja transportu'@,,,,,'html_maximized');
TR_NZL.win_ewin(_win_red,,_win_akr);
_ff:="
   TR_ZL.cntx_psh();
   TR_ZL.win_sel('SLO');
   TR_ZL.index('POZ');
   TR_ZL.prefix(TR_NZL.ref,);
   TR_ZL.select(0,,,'DPUZ');
   TR_ZL.cntx_pop();
''";
TR_NZL.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['Poz&ycje'@],_ff);
TR_NZL.win_edit(_win_red);
TR_NZL.display()


\trnag_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: wyswietlanie zalacznikow do transportu
::----------------------------------------------------------------------------------------------------------------------
exec('sel_dok','dokum','TR_NAG',,{? (TR_NAG.name()+4)<>'____' || 2 || 0 ?},,1)


\trnzl_druk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Transport - Drukuj / Utwórz PDF
::   WE: [_a] - utworz pdf 0-nie 1-tak
::       [_b] - nazwa akcji
::---------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _czy_pdf:=_a
|| _czy_pdf:=0
?};
{? var_pres('_b')=type_of('')
|| _akcja:=_b
|| {? _czy_pdf
   || _a:='Area Utwórz PDF'
   || _a:='Area Drukuj'
   ?}
?};

_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LTR_TRA_WWTR';
_params.UIDREF:=TR_NAG.uidref();
_params.AKCJA:=_akcja;
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TR_NAG',TR_NAG.ref());
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'CZY_PDF',{? _czy_pdf || 'TAK' || 'NIE' ?});

exec('mp_run','#b__box',_params)


\trnzl_pdf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Transport - Utwórz PDF
::   WE: [_a] - akcja
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('')
|| _a:='Area Utwórz PDF'
?};

exec('trnzl_druk','transport_wspolne',1,_a)


\trnzl_prn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Transport - Utwórz PDF
::   WE: [_a] - akcja
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('')
|| _a:='Area Drukuj'
?};

exec('trnzl_druk','transport_wspolne',0,_a)


\trnzl_show_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MarKus [19.42]
:: OPIS: Podgląd dokumentu powiązanego z dok_ref w TR_NZL
::----------------------------------------------------------------------------------------------------------------------
_dok:=TR_NZL.DOK_REF;
_pow:=0;
{? _dok<>'' & (';ZK_N;ZD_NAG;ND;ZDP_NAG;REK_N;ZGP;'*TR_NZL.WHERE)>1 & TR_NZL.DOK='<kilka>'
|| _pow:=1;
   FUN.info({? TR_NZL.WHERE='ND'
            || 'Dyspozycja zawiera pozycje z różnych dokumentów.\n'
               'Należy skorzystać z akcji \" Funkcje > Powiązane dokumenty. \"'@
            |? TR_NZL.WHERE='ZGP'
            || 'Dyspozycja zawiera pozycje z pozycji przewodników.\n'
               'Należy skorzystać z akcji \" Funkcje > Powiązane dokumenty. \"'@
            || 'Dyspozycja zawiera pozycje z różnych zamówień.\n'
               'Należy skorzystać z akcji \" Funkcje > Powiązane dokumenty. \"'@
            ?})
|? _dok<>''
||
   _table:=ref_tab(_dok);
::   _type:=exec('tab2string','transport_wspolne',_table);
   _type:=TR_NZL.WHERE;
   {? var_press('_table')>0
   ||
      _table.cntx_psh();
      _table.use(ref_name(_dok));
      {? _table.seek(_dok)
      || {? TR_NZL.WHERE='ZK_N'
         || {? ZK_N.T().R='Z' || exec('disp_all_zam','lsp',_dok) || exec('disp_all_zaw','lmg',_dok) ?}
         |? TR_NZL.WHERE='ZD_NAG'
         || exec('disp_all_zad','lzk',_dok)
         |? TR_NZL.WHERE='ND'
         || exec('disp_all_dok','lmg',_dok)
         |? TR_NZL.WHERE='REK_N'
         || exec('disp_all_rek','reklamacje',_dok)
         || {? exec('is_fun','#file','display',_type) || exec(_type,'display') ?}
         ?}
      ||
         FUN.info('Nie znaleziono powiązanego zgłoszenia jednorazowego z wybraną dyspozycją transportu.'@)
      ?};
      _table.cntx_pop()
   ?}
||
   FUN.info('Brak powiązanych dokumentów z wybraną dyspozycją transportu.'@)
?};
1


\tab2string
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MarKus [19.42]
:: OPIS: akronim tabeli do stringa
::   WE: [_a] - tabela
::     : [_b] - uidref
::----------------------------------------------------------------------------------------------------------------------
_table:={? var_press('_a')=type_of(null()) || _a || null ?};
_uidref:={? var_press('_b')=type_of('') || _b || '' ?};
_akronim:='';
{? _uidref<>'' || _table:=ref_tab(_uidref) ?};
{? var_press('_table')<0
||
   _akronim:={? _table=ZLP || 'ZLP' || '' ?}
?};
_akronim


\zlp_tr_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Transport - na podstawie ZLP
::----------------------------------------------------------------------------------------------------------------------
{? ZLP.sel_size()=0
|| _data:=exec('FindInSet','#table','TR_NZL','DOK_REF',ZLP.uidref(),,"@.TR_NZL.DT",,,date(0,0,0));
   _tr_rodz:=exec('FindInSet','#table','TR_NZL','DOK_REF',ZLP.uidref(),,"@.TR_NZL.TR_RODZ",,,null());
   _tr_naguid:=exec('wybTR_NAG','transport',_data,_tr_rodz)
|| _tr_naguid:=exec('wybTR_NAG','transport')
?};

{? _tr_naguid='add'
|| _params:=exec('mp_run_a','#b__box');
   _params.PROC_START:='T';
   _params.ACT_UID:='LTR_TRA_DZLE';
   _params.AKCJA:='Zlecenie+';
   {? ZLP.sel_size()=0
   || _tr_nzl:=exec('FindInSet','#table','TR_NZL','DOK_REF',ZLP.uidref(),,"",,,null());
      _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
      exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TR_NZL',_tr_nzl)
   ?};
   exec('mp_run','#b__box',_params)
|? _tr_naguid<>''
|| _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='LTR_TRA_DZLE';
   _params.UIDREF:=_tr_naguid;
   _params.AKCJA:='Popraw++';
   exec('mp_run','#b__box',_params)
|? ZLP.sel_size()
|| ZLP.sel_adel()
?};
~~


\zlp2TR_NAG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: sprawdza czy podane zgłoszenie jednorazowe, przewóz jest do transportu
::   WE: _a - ZLP.uidref()
::       [_b] - rodzaj zwracanej informacji [0]-domyślnie wynik 1..4; (1)-dane informacyjne o transporcie
::       [_c] - 0(domyślnie) 1-zabranie
::   WY: dla _b=0:
:;        0-nie
::        1-na transporcie - załadunek
::        2-na transporcie - rozładunek
::        3-do transportu
::        4-zrealizowane
::       dla _b=1 obiekt z polami: NR_REJ, DATE, TIME
::----------------------------------------------------------------------------------------------------------------------
_kind:={? var_pres('_b')=type_of(0) || _b || 0 ?};
 _typ:={? var_pres('_c')=type_of(0) || _c || 0 ?};

_res:=0;
_info:=obj_new('NR_REJ','DATE','TIME','STAT_REJ');
   _info.NR_REJ:=''; _info.DATE:=date(0,0,0); _info.TIME:=time(0,0,0); _info.STAT_REJ:='N';
_dok:=_a;

ZLP.cntx_psh();
TR_NAG.cntx_psh();
TR_NZL.cntx_psh();
_msk:=TR_NZL.name()+4;
_tr_sql:='';

_Tr_nzl:=exec('get_tr_nzl','transport_zlec',_dok,'DOK_REF');
{? _Tr_nzl.first()
|| {!
   |? {? exec('FindAndGet','#table',TR_NZL,_Tr_nzl.REF,,"STATUS=exec('tr_nzl_status_oczekujace','transport_zlec')",0)
       | (_typ & exec('FindAndGet','#table',TR_NZL,_Tr_nzl.REF,,"RODZ<>'Z'",0))
      || _Tr_nzl.next()
      || _tr_sql:=_Tr_nzl.REF;
         0
      ?}
   !}
?};
obj_del(_Tr_nzl);
_new:={? _tr_sql<>'' || ((form(8+_tr_sql))+4) || _msk ?};

{? _msk<>_new
|| TR_NZL.use('trnl'+_new);
   TR_NAG.use('trnt'+_new)
?};

{? _tr_sql<>''
|| TR_NZL.prefix();
   {? TR_NZL.seek(_tr_sql)
   || {? TR_NZL.TR_NAG=null() & TR_NZL.PLAN='T'
      || _res:=3
      |? TR_NZL.REAL='T'
      || _res:=4
      |? TR_NZL.PLAN='N' & TR_NZL.REAL='N'
      || {? TR_NZL.RODZ='Z'
         || _res:=1
         |? TR_NZL.RODZ='R'
         || _res:=2
         ?}
      ?};
      {? TR_NZL.TR_NAG<>null()
      || _info.NR_REJ:=TR_NZL.TR_NAG().POJAZD().NRREJ;
         _info.DATE:=TR_NAG.WYJ_D;
         _info.TIME:=TR_NAG.WYJ_T;
         _info.STAT_REJ:=TR_NAG.STAT_REJ
      ?}
   ?}
?};
ZLP.cntx_pop();
TR_NAG.cntx_pop();
TR_NZL.cntx_pop();

{? _kind || _info || _res ?}


\zlp2DATA_REAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: zwraca datę realizacji
::   WE: _a - ZLP.uidref()
::       _b - rodzaj 'P'-podstawienie 'Z'-zabranie
::   WY: data lub data zerowa
::----------------------------------------------------------------------------------------------------------------------
_res:=date(0,0,0);
ZLP.cntx_psh();
exec('opentr_psh','open_tab');
exec('opentr','open_tab','____');
TR_NZL.index('DOK_REF');
TR_NZL.prefix(_a,);
{? TR_NZL.first()
|| {!
   |? {? TR_NZL.TR_NAG<>null()
       & TR_NZL.TR_NAG().REAL='T'
       & {? _b='P' || TR_NZL.RODZ='R' |? _b='Z' || TR_NZL.RODZ='Z' || 0 ?}
      || _res:=TR_NZL.DR;
         0
      || TR_NZL.next()
      ?}
   !}
?};
ZLP.cntx_pop();
exec('opentr_pop','open_tab');
_res


\trnzl_arch_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: przeniesienie do archiwum dyspozycji transportowej (przy przenoszeniu transportu)
::   WE: _a - TR_NZL.ref
::       _b - TR_NAG.ref - transport przeniesiony do archiwum
::       _c - TR_NAG.ref - poprzednie wskazanie na transport
::   WY: ref sql-owy dyspozycji lub pusty string
::----------------------------------------------------------------------------------------------------------------------
_result:='';

_trnag_ref_new:=_b;
_ref_old:=_a;
_ref_new:=null;
_uref_old:='';
_uref_new:='';

_mask_bie:=ref_name(_ref_old)+4;
_mask_kop:={? ref_name(_trnag_ref_new)<>''
           || ref_name(_trnag_ref_new)+4
           || {? _mask_bie='____' || form(TR_NZL.RR,,,'99')+2+form(TR_NZL.RM,-2) || '____' ?}
           ?};
{? _mask_bie=_mask_kop
|| return('')
?};

{? ref_name(_trnag_ref_new)<>''
|| TR_NAG.cntx_psh();
   exec('opentr','open_tab',_mask_kop);
   TR_NAG.clear();
   TR_NAG.seek(_trnag_ref_new);
   _trnag_uref_new:=TR_NAG.uidref();
   TR_NAG.cntx_pop()
|| _trnag_uref_new:=''
?};
exec('opentr','open_tab',_mask_bie);

VAR_DEL.delete('__tr_zl');

_tr_nzl:=obj_new(TR_NZL.fld_num());
_tr_zl:=obj_new(TR_ZL.fld_num());
_tr_zlm:=obj_new(TR_ZLM.fld_num());
_tr_kos:=obj_new(TR_KOS.fld_num());
_tr_pack:=obj_new(TR_PACK.fld_num());
_tr_spack:=obj_new(TR_SPACK.fld_num());
_tr_zpack:=obj_new(TR_ZPACK.fld_num());
_tr_hpack:=obj_new(TR_HPACK.fld_num());

__tr_zl:=tab_tmp(1
   ,'R_OLD','STRING[16]','Refsql_old'
   ,'R_NEW','STRING[16]','Refsql_new'
   ,'U_OLD','STRING[48]','Uidref_old'
   ,'U_NEW','STRING[48]','Uidref_new');

:: kopiowanie naglowka
TR_NZL.prefix();
{? TR_NZL.seek(_ref_old)
|| _uref_old:=TR_NZL.uidref();
   {! _licz:=1..TR_NZL.fld_num()
   |! _tr_nzl[_licz]:=TR_NZL[_licz]
   !}
|| undo()
?};

:: obsluga memo
TR_NZL.memo_get('r','CMR013');
TR_NZL.memo_get('r','CMR019');
TR_NZL.memo_get('r','OPIS');

exec('opentr','open_tab',_mask_kop);
TR_NZL.clear();
TR_NZL.blank();
{! _licz:=1..TR_NZL.fld_num()
|! {? var_pres(TR_NZL.fld_acr(_licz),TR_NZL)<>var_pres('OPIS',TR_NZL)
   || TR_NZL[_licz]:=_tr_nzl[_licz]
   ?}
!};
TR_NZL.TR_NAG:=_trnag_ref_new;
{? TR_NZL.add()
|| _ref_new:=TR_NZL.ref();
   _uref_new:=TR_NZL.uidref();
   _result:=$TR_NZL.ref();
   TR_NZL.memo_put(,'CMR013');
   TR_NZL.memo_put(,'CMR019');
   TR_NZL.memo_put(,'OPIS');
   TR_NZL.ORDER:=exec('code_order','transport_paczki',TR_NZL.IDADD,TR_NZL.ref(),TR_NZL.ODDZ);
   TR_NZL.put(1)
|| undo()
?};

{? _ref_new<>null()
||

:: aktualizacja wpisów dla reklamacji
   exec('changeUID','reklamacje',REK_N,'ZAM','ZAM_DOK',_uref_old,_uref_new);
   exec('changeUID','reklamacje',REK_D,'DK_REF','DK_REF',_uref_old,_uref_new);
:: kopiowanie pozycji
   exec('opentr','open_tab',_mask_bie);
   TR_ZL.index('POZ');
   TR_ZL.prefix(_ref_old);

   {? TR_ZL.first()
   || {!
      |? _tr_zl_o:=TR_ZL.ref();
         _tr_zl_uo:=TR_ZL.uidref();
         {! _licz:=1..TR_ZL.fld_num()
         |! _tr_zl[_licz]:=TR_ZL[_licz]
         !};
         TR_ZL.memo_get('r','POZ_OPIS');
         TR_ZL.cntx_psh();
         exec('opentr','open_tab',_mask_kop);
         TR_ZL.prefix();
         {! _licz:=1..TR_ZL.fld_num()
         |! {? var_pres(TR_ZL.fld_acr(_licz),TR_ZL)<>var_pres('POZ_OPIS',TR_ZL)
            || TR_ZL[_licz]:=_tr_zl[_licz]
            ?}
         !};
         TR_ZL.TR_NZL:=_ref_new;
         TR_ZL.add();
         TR_ZL.memo_put(,'POZ_OPIS');
         _tr_zl_n:=TR_ZL.ref();
         _tr_zl_un:=TR_ZL.uidref();

         __tr_zl.blank();
         __tr_zl.R_OLD:=$_tr_zl_o;
         __tr_zl.R_NEW:=$_tr_zl_n;
         __tr_zl.U_OLD:=_tr_zl_uo;
         __tr_zl.U_NEW:=_tr_zl_un;
         __tr_zl.add();
::       aktualizacja wpisów dla reklamacji
         exec('changeUID','reklamacje',REK_N,'ZAM_POZ','ZAM_POZ',_tr_zl_uo,_tr_zl_un);
         exec('changeUID','reklamacje',REK_D,'DP_REF','DP_REF',_tr_zl_uo,_tr_zl_un);

         exec('opentr','open_tab',_mask_bie);

::       przeniesienie atrybutów
         TR_ZLM.index('TR_ZL');
         TR_ZLM.prefix(_tr_zl_o);
         {? TR_ZLM.first()
         || {!
            |? _tr_zlm_o:=TR_ZLM.ref();
               _tr_zlm_uo:=TR_ZLM.uidref();
               {! _licz:=1..TR_ZLM.fld_num()
               |! _tr_zlm[_licz]:=TR_ZLM[_licz]
               !};
               TR_ZLM.cntx_psh();
               exec('opentr','open_tab',_mask_kop);
               TR_ZLM.prefix();
               {! _licz:=1..TR_ZLM.fld_num()
               |! TR_ZLM[_licz]:=_tr_zlm[_licz]
               !};
               TR_ZLM.TR_ZL:=_tr_zl_n;
               exec('uzupIDkod','magdok_palety',TR_ZLM);
               TR_ZLM.add();
               _tr_zlm_n:=TR_ZLM.ref();
               _tr_zlm_un:=TR_ZLM.uidref();

               exec('opentr','open_tab',_mask_bie);
               TR_ZLM.cntx_pop();
               TR_ZLM.next()
            !}
         ?};
         TR_ZL.cntx_pop();
         TR_ZL.next()
      !}
   ?};
:: kopiowanie paczek
   TR_PACK.index('TR_NZL');
   TR_PACK.prefix(_ref_old);

   {? TR_PACK.first()
   || {!
      |? _tr_pack_o:=TR_PACK.ref();
         _tr_pack_uo:=TR_PACK.uidref();
         {! _licz:=1..TR_PACK.fld_num()
         |! _tr_pack[_licz]:=TR_PACK[_licz]
         !};
         TR_PACK.cntx_psh();
         exec('opentr','open_tab',_mask_kop);
         TR_PACK.prefix();
         {! _licz:=1..TR_PACK.fld_num()
         |! TR_PACK[_licz]:=_tr_pack[_licz]
         !};
         TR_PACK.TR_NZL:=_ref_new;
         TR_PACK.add();
         _tr_pack_n:=TR_PACK.ref();
         _tr_pack_un:=TR_PACK.uidref();

         exec('opentr','open_tab',_mask_bie);

::       przeniesienie danych dodatkowych
         TR_SPACK.index('TR_PACK');
         TR_SPACK.prefix(_tr_pack_o);
         {? TR_SPACK.first()
         || {!
            |? _tr_spack_o:=TR_SPACK.ref();
               _tr_spack_uo:=TR_SPACK.uidref();
               {! _licz:=1..TR_SPACK.fld_num()
               |! _tr_spack[_licz]:=TR_SPACK[_licz]
               !};
               TR_SPACK.cntx_psh();
               exec('opentr','open_tab',_mask_kop);
               TR_SPACK.prefix();
               {! _licz:=1..TR_SPACK.fld_num()
               |! TR_SPACK[_licz]:=_tr_spack[_licz]
               !};
               TR_SPACK.TR_PACK:=_tr_pack_n;
               TR_SPACK.add();
               _tr_spack_n:=TR_SPACK.ref();
               _tr_spack_un:=TR_SPACK.uidref();

               exec('opentr','open_tab',_mask_bie);
               TR_SPACK.cntx_pop();
               TR_SPACK.next()
            !}
         ?};
::       histori paczki
         TR_HPACK.index('TR_PACK');
         TR_HPACK.prefix(_tr_pack_o);
         {? TR_HPACK.first()
         || {!
            |? _tr_hpack_o:=TR_HPACK.ref();
               _tr_hpack_uo:=TR_HPACK.uidref();
               {! _licz:=1..TR_HPACK.fld_num()
               |! _tr_hpack[_licz]:=TR_HPACK[_licz]
               !};
               TR_HPACK.cntx_psh();
               exec('opentr','open_tab',_mask_kop);
               TR_HPACK.prefix();
               {! _licz:=1..TR_HPACK.fld_num()
               |! TR_HPACK[_licz]:=_tr_hpack[_licz]
               !};
               TR_HPACK.TR_PACK:=_tr_pack_n;
               TR_HPACK.add();
               _tr_hpack_n:=TR_HPACK.ref();
               _tr_hpack_un:=TR_HPACK.uidref();

               exec('opentr','open_tab',_mask_bie);
               TR_HPACK.cntx_pop();
               TR_HPACK.next()
            !}
         ?};
::       przeniesienie zawartości paczki
         TR_ZPACK.index('TR_PACK');
         TR_ZPACK.prefix(_tr_pack_o);
         {? TR_ZPACK.first()
         || {!
            |? _tr_zpack_o:=TR_ZPACK.ref();
               _tr_zpack_uo:=TR_ZPACK.uidref();
               _tr_zpack_zl:=$TR_ZPACK.TR_ZL;
               {! _licz:=1..TR_ZPACK.fld_num()
               |! _tr_zpack[_licz]:=TR_ZPACK[_licz]
               !};
               TR_ZPACK.cntx_psh();
               exec('opentr','open_tab',_mask_kop);
               TR_ZPACK.prefix();
               {! _licz:=1..TR_ZPACK.fld_num()
               |! TR_ZPACK[_licz]:=_tr_zpack[_licz]
               !};
               TR_ZPACK.TR_PACK:=_tr_pack_n;
               __tr_zl.clear();
               __tr_zl.prefix(_tr_zpack_zl);
               TR_ZPACK.TR_ZL:={? __tr_zl.first()
                               || exec('FindAndGet','#table',TR_ZL,__tr_zl.R_NEW,,,null())
                               || null()
                               ?};
               TR_ZPACK.add();
               _tr_zpack_n:=TR_ZPACK.ref();
               _tr_zpack_un:=TR_ZPACK.uidref();

               exec('opentr','open_tab',_mask_bie);
               TR_ZPACK.cntx_pop();
               TR_ZPACK.next()
            !}
         ?};
         TR_PACK.cntx_pop();
         TR_PACK.next()
      !}
   ?};
:: kopiowanie kosztów
   TR_KOS.index('TR_NZL_P');
   TR_KOS.prefix(_ref_old);
   {? TR_KOS.first()
   || {!
      |? _tr_kos_o:=TR_KOS.ref();
         _tr_kos_uo:=TR_KOS.uidref();
         {! _licz:=1..TR_KOS.fld_num()
         |! _tr_kos[_licz]:=TR_KOS[_licz]
         !};
         TR_KOS.cntx_psh();
         exec('opentr','open_tab',_mask_kop);
         TR_KOS.prefix();
         {! _licz:=1..TR_KOS.fld_num()
         |! TR_KOS[_licz]:=_tr_kos[_licz]
         !};
         TR_KOS.TR_NZL:=_ref_new;
         {? TR_KOS.ID_KOS<>''
         || __ukos.clear();
            __ukos.prefix(TR_KOS.ID_KOS);
            {? __ukos.first() || TR_KOS.ID_KOS:=__ukos.ID_NEW ?}
         ?};
         TR_KOS.add();
         _tr_kos_n:=TR_KOS.ref();
         _tr_kos_un:=TR_KOS.uidref();

         exec('opentr','open_tab',_mask_bie);
         TR_KOS.cntx_pop();
         TR_KOS.next()
      !}
   ?};


:: archiwizacja TR_LOG

   TR_LOG.cntx_psh();

   {? __tr_zl.first()
   || exec('opentr','open_tab',_mask_bie);
      {!
      |? exec('uidref_update','#b__box',__tr_zl.U_OLD,__tr_zl.U_NEW);
         TR_LOG.index('TRZL_POZ');
         TR_LOG.prefix(_uref_old,__tr_zl.U_OLD);
         {? TR_LOG.first()
         || {!
            |? _trlog_ref:=TR_LOG.ref();
               _nast:=TR_LOG.next();
               TR_LOG.cntx_psh();
               TR_LOG.clear();
               {? TR_LOG.seek(_trlog_ref)
               || exec('trlog_arch_1','transport_wspolne',_trlog_ref,_trnag_uref_new,_uref_new,__tr_zl.U_NEW)
               ?};
               TR_LOG.cntx_pop();
               _nast
            !}
         ?};
         __tr_zl.next()
      !}
   ?};

   exec('opentr','open_tab',_mask_bie);
   TR_LOG.index('TRZL');
   TR_LOG.prefix(_uref_old);
   {? TR_LOG.first()
   || {!
      |? _trlog_ref:=TR_LOG.ref();
         _nast:=TR_LOG.next();
         TR_LOG.cntx_psh();
         TR_LOG.clear();
         {? TR_LOG.seek(_trlog_ref)
         || exec('trlog_arch_1','transport_wspolne',_trlog_ref,_trnag_uref_new,_uref_new,'')
         ?};
         TR_LOG.cntx_pop();
         _nast
      !}
   ?};

   TR_LOG.cntx_pop();

:: odtwarzanie powiazan dokumentow
   exec('refsql_update','dokum',$_ref_old,$_ref_new);

:: aktualizacja pól TRARCH_B, TRARCH_E
   exec('trarch','transport_wspolne',_ref_old,_ref_new);

:: zapis maski archiwum w ZLP powiązanym z przeniesionym TR_NZL
::   {? _dokref_zlp<>'' & _mask_bie='____'
::   || exec('trnzl_arch_1_zlp','transport_wspolne',_dokref_zlp,ref_name(_ref_new))
::   ?};

:: zapis maski archiwum w UPMZAD powiązanym z przeniesionym TR_NZL
::   {? _dokref_upmzad<>'' & _mask_bie='____'
::   || exec('trnzl_arch_1_upmzad','transport_wspolne',_dokref_upmzad,ref_name(_ref_new))
::   ?};

   exec('uidref_update','#b__box',_uref_old,_uref_new);
   exec('uidref_update','numery','TRZ',_uref_old,_uref_new);

:: usunięcie przeniesionej dyspozycji
   exec('opentr','open_tab',_mask_bie);
   TR_NZL.prefix();
   TR_NZL.seek(_ref_old);
   exec('tr_nzl_usu','transport_zlec', 2);

   exec('opentr','open_tab',_mask_kop);
   exec('log_nag','transport_wspolne',_uref_new,'arch');

   exec('opentr','open_tab',_mask_bie)

?};

VAR_DEL.delete('__tr_zl');

exec('opentr','open_tab',_mask_bie);

_result


\trarch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: aktualizacja pól TRARCH_B, TRARCH_E
::   WE: _a - TR_NZL.ref() - old
::       _b - TR_NZL.ref() - new
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tr_nzl_old:=_a;
_tr_nzl_new:=_b;
_name:=ref_name(_b);
_where:=exec('FindAndGet','#table',TR_NZL,_tr_nzl_old,,"TR_NZL.WHERE",'');
:: TR_NZL - wg TR_NZL.DOK_REF
_dok_ref:={? _where='TR_NZL'
          || ''
          || exec('FindAndGet','#table',TR_NZL,_tr_nzl_old,,"TR_NZL.DOK_REF",'')
          ?};

_Tr_nzl_dok_ref:=exec('get_tr_nzl','transport_zlec',_dok_ref);
_loop:=_Tr_nzl_dok_ref.first();
{!
|? _loop
|!
   exec('trarch_one','transport_wspolne',_Tr_nzl_dok_ref.REF,_name);
   _loop:=_Tr_nzl_dok_ref.next()
!};
:: TR_NZL - wg TR_NZL.GRP
_grp:=exec('FindAndGet','#table',TR_NZL,_tr_nzl_old,,"TR_NZL.GRP",'');
{? _grp<>''
||
   _drf:={? _where='TR_NZL' || exec('FindAndGet','#table',TR_NZL,_grp,,"TR_NZL.DOK_REF",'') || '' ?};
   _Tr_nzl_grp:=exec('get_tr_nzl','transport_zlec',_grp,'GRP',_drf);
   _loop:=_Tr_nzl_grp.first();
   {!
   |? _loop
   |!
      {? ~_Tr_nzl_dok_ref.find_key(_Tr_nzl_grp.RODZ,_Tr_nzl_grp.REF)
      ||
         exec('trarch_one','transport_wspolne',_Tr_nzl_grp.REF,_name)
      ?};
      _loop:=_Tr_nzl_grp.next()
   !}
?};
:: przepisanie TRARCH_B, TRARCH_E z _tr_nzl_old na _tr_nzl_new
_trarch:=obj_new('B','E');
{? exec('FindAndGet','#table',TR_NZL,_tr_nzl_old,,"
      _trarch:=_b;
      _trarch.B:=TR_NZL.TRARCH_B;
      _trarch.E:=TR_NZL.TRARCH_E;
      1
   ",0,_trarch)
||
   exec('FindAndGet','#table',TR_NZL,_tr_nzl_new,,"
      _trarch:=_b;
      _trarch.B==TR_NZL.TRARCH_B;
      _trarch.E==TR_NZL.TRARCH_E;
      TR_NZL.put()
   ",0,_trarch)
?};
~~


\trarch_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: aktualizacja pól TRARCH_B, TRARCH_E dotyczących dyspozycji transportowej _a
::   WE: _a - $TR_NZL.ref()
::       _b - maska
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tr_nzl:=_a;
_name:=_b;
_where:=exec('FindAndGet','#table',TR_NZL,_tr_nzl,,"TR_NZL.WHERE",'');
:: aktualizacja TR_NZL
_ref:=_tr_nzl;
exec('trarch_update','transport_wspolne',_ref,_name);
{? _where<>'TR_NZL'
||
:: aktualizacja TR_MOC
   _ref:=_tr_nzl;
   _ref:=$exec('FindAndGet','#table',TR_NZL,_ref,,"TR_NZL.TR_MOC",null());
   exec('trarch_update','transport_wspolne',_ref,_name);
:: aktualizacja DOK_REF
   {? (';ZK_N;ZD_NAG;ZDP_NAG;ND;'*_where)>1
   || exec('opentr_psh','open_tab');
      exec('opentr','open_tab',form(8+_tr_nzl)+4);
      _buf:=tab_tmp(1,'UID','STRING[48]','');
      TR_NZL.prefix();
      {? TR_NZL.seek(_tr_nzl)
      || TR_ZL.index('POZ');
         TR_ZL.prefix(TR_NZL.ref());
         {? TR_ZL.first()
         || {!
            |? _ref:=TR_ZL.DOK_REF;
               {? _ref<>'' & (_buf.clear(); _buf.prefix(_ref); ~_buf.first())
               || exec('trarch_update','transport_wspolne',_ref,_name);
                  _buf.blank();
                  _buf.UID:=_ref;
                  _buf.add(1)
               ?};
               TR_ZL.next()
            !}
         ?}
      ?};
      obj_del(_buf);
      exec('opentr_pop','open_tab')
   || _ref:=_tr_nzl;
      _ref:=exec('FindAndGet','#table',TR_NZL,_ref,,"TR_NZL.DOK_REF",'');
      exec('trarch_update','transport_wspolne',_ref,_name)
   ?}
?}


\trarch_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: aktualizacja pól TRARCH_B, TRARCH_E rekordu _a
::   WE: _a - ref tabeli z polami TRARCH_B, TRARCH_E do aktualizacji
::       _b - maska
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_name:=_b;
_Tab:=ref_tab(_a);
{? var_pres('_Tab')=type_of(~~) || return() ?};
_Tab.cntx_psh();
_Tab.use(ref_name(_ref));
_Tab.prefix();
{? _Tab.seek(_ref)
||
   _put:=0;
   {? var_pres('TRARCH_B',_Tab)=27
         &
      (_Tab.TRARCH_B='' | _Tab.TRARCH_B>_name)
   ||
      _Tab.TRARCH_B:=_name;
      _put:=1
   ?};
   {? var_pres('TRARCH_E',_Tab)=27
         &
      (_Tab.TRARCH_E='' | _Tab.TRARCH_E<_name)
   ||
      _Tab.TRARCH_E:=_name;
      _put:=1
   ?};
   {? _put || _Tab.put() ?}
?};
_Tab.cntx_pop()


\trnzl_arch_1_zlp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: zapis maski archiwum w ZLP powiązanym z przeniesionym TR_NZL
::   WE: _a - ZLP.uidref
::       _b - maska TR_NZL
::----------------------------------------------------------------------------------------------------------------------
_dokref_zlp:=_a;
_mask:=_b;
ZLP.cntx_psh();
ZLP.use(ref_name(_dokref_zlp));
ZLP.clear();
{? ZLP.seek(_dokref_zlp)
|| {? ZLP.TRARCH_B='' | ZLP.TRARCH_B>_mask
   || ZLP.TRARCH_B:=_mask;
      ZLP.put()
   ?};
   {? ZLP.TRARCH_E='' | ZLP.TRARCH_E<_mask
   || ZLP.TRARCH_E:=_mask;
      ZLP.put()
   ?}
?};
ZLP.cntx_pop();
~~


\trnzl_arch_1_upmzad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
::  OPIS: zapis maski archiwum w UPMZAD powiązanym z przeniesionym TR_NZL
::   WE: _a - UPMZAD.uidref
::       _b - maska TR_NZL
::----------------------------------------------------------------------------------------------------------------------
_dokref_upmzad:=_a;
_mask:=_b;
UPMZAD.cntx_psh();
UPMZAD.use(ref_name(_dokref_upmzad));
UPMZAD.clear();
{? UPMZAD.seek(_dokref_upmzad)
|| {? UPMZAD.TRARCH_B='' | UPMZAD.TRARCH_B>_mask
   || UPMZAD.TRARCH_B:=_mask;
      UPMZAD.put()
   ?};
   {? UPMZAD.TRARCH_E='' | UPMZAD.TRARCH_E<_mask
   || UPMZAD.TRARCH_E:=_mask;
      UPMZAD.put()
   ?}
?};
UPMZAD.cntx_pop();
~~


\trlog_arch_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: przeniesienie do archiwum logu TR_LOG (przy przenoszeniu transportu TR_NAG)
::   WE: _a - TR_LOG.ref
::       _b - TR_NAG.uidref - transport przeniesiony do archiwum
::       _c - TR_NZL.uidref - dyspozycja transportowa przeniesiona do archiwum
::       _d - TR_ZL.uidref - pozycja dyspozycji transportowej przeniesiona do archiwum
::   WY: ref sql-owy zamówienia lub pusty string
::----------------------------------------------------------------------------------------------------------------------
_result:='';

_ref_old:=_a;
_ref_new:=null;

_trnag_uref_new:=_b;
_trnzl_uref_new:=_c;
_trzl_uref_new:=_d;

_mask_bie:=ref_name(_ref_old)+4;
_mask_kop:={? ref_name(_trnag_uref_new)<>''
           || ref_name(_trnag_uref_new)+4
           || ref_name(_trnzl_uref_new)+4
           ?};

exec('opentr','open_tab',_mask_bie);

_tr_log:=obj_new(TR_LOG.fld_num());

:: kopiowanie
TR_LOG.prefix();
{? TR_LOG.seek(_ref_old)
|| {! _licz:=1..TR_LOG.fld_num()
   |! _tr_log[_licz]:=TR_LOG[_licz]
   !}
|| undo()
?};

exec('opentr','open_tab',_mask_kop);
TR_LOG.clear();
TR_LOG.blank();
{! _licz:=1..TR_LOG.fld_num()
|! TR_LOG[_licz]:=_tr_log[_licz]
!};
{? TR_LOG.TR_NAG<>'' & _trnag_uref_new<>''
|| TR_LOG.TR_NAG:=_trnag_uref_new
?};
{? TR_LOG.TR_NZL<>'' & _trnzl_uref_new<>''
|| TR_LOG.TR_NZL:=_trnzl_uref_new
?};
{? TR_LOG.TR_ZL<>'' & _trzl_uref_new<>''
|| TR_LOG.TR_ZL:=_trzl_uref_new
?};
{? TR_LOG.add()
|| _ref_new:=TR_LOG.ref();
   _result:=$TR_LOG.ref()
|| undo()
?};

exec('opentr','open_tab',_mask_bie);

{? _ref_new<>null()
|| TR_LOG.seek(_ref_old);
   TR_LOG.del(1)
?};

_result


\trnag_arch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: archiwizuje lub przywraca z archiwum transport TR_NAG
::   WE: [_a] - pytania (1-tak, 0-nie, 2-grupa, domyślnie 1)
::       [_b] - tryb 1-transport 2-dyspozycja
::   WY: ref sql-owy zamówienia lub pusty string
::----------------------------------------------------------------------------------------------------------------------
_result:='';
_msgs:={? _>0 & type_of(_a)=1 || _a || 1 ?};
_archtr:={? var_pres('_b')=type_of(0) || _b || 1 ?};

_przywr:=0;
{? TR_NAG.name()+4<>'____'
|| _przywr:=1
?};

{? ~_przywr & _archtr=1 & ~(TR_NAG.STAT_REJ='T')
|| {? _msgs=1
   || FUN.info('Dla transportu nie została zakończona realizacja.\nArchiwizacja niemożliwa.'@)
   |? _msgs=2
   || exec('add_kom','#message'
        ,'Dla transportu %1 nie została zakończona realizacja. Archiwizacja niemożliwa.'@[TR_NAG.SYM]
        ,4,'Archiwizacja transportu',__lp+=1)
   ?}
|? ~_przywr & _archtr=1 & TR_NAG.DZ=date(0,0,0)
|| {? _msgs=1
   || FUN.info('Nie wypełniono daty realizacji transportu. \nArchiwizacja niemożliwa.'@)
   |? _msgs=2
   || exec('add_kom','#message'
        ,'Nie wypełniono daty realizacji transportu %1. Archiwizacja niemożliwa.'@[TR_NAG.SYM]
        ,4,'Archiwizacja transportu',__lp+=1)
   ?}
|? ~_przywr & _archtr=1 & exec('FindInSet','#table','OKR','OKR',TR_NAG.DZ~2,REF.FIRMA,,,TR_NAG.DZ~1)=null()
|| {? _msgs=1
   || FUN.info('W systemie nie zdefiniowano okresu dla roku %1 i miesiąca %2.\nArchiwizacja niemożliwa.'@[$(TR_NAG.DZ~1),$(TR_NAG.DZ~2)])
   |? _msgs=2
   || exec('add_kom','#message'
        ,'W systemie nie zdefiniowano okresu dla roku %1 i miesiąca %2. Archiwizacja transportu %3 niemożliwa.'@[$(TR_NAG.DZ~1),$(TR_NAG.DZ~2),TR_NAG.SYM]
        ,4,'Archiwizacja transportu',__lp+=1)
   ?}
|? ~_przywr & _archtr=2 & ~TR_NZL.NOTR & TR_NZL.TR_NAG<>null()
|| {? _msgs=1
   || FUN.info('Dyspozycja transportowa podlega planowaniu.\nArchiwizacja niemożliwa.'@)
   |? _msgs=2
   || exec('add_kom','#message'
        ,'Dyspozycja transportowa %1 podlega planowaniu. Archiwizacja niemożliwa.'@[TR_NZL.SYM]
        ,4,'Archiwizacja transportu',__lp+=1)
   ?}
|? ~_przywr & _archtr=2 & ~TR_NZL.NOTR & TR_NZL.DT=date(0,0,0)
|| {? _msgs=1
   || FUN.info('Brak daty dla dyspozycji transportowej.\nArchiwizacja niemożliwa.'@)
   |? _msgs=2
   || exec('add_kom','#message'
        ,'Brak daty dla dyspozycji transportowej %1. Archiwizacja niemożliwa.'@[TR_NZL.SYM]
        ,4,'Archiwizacja transportu',__lp+=1)
   ?}
|? _archtr=1 & ~exec('tr_rodz_ope','transport_wspolne',TR_NAG.TR_RODZ,'Transport'@,'Archiwizacja niemożliwa.'@,2)
|| {? _msgs=1
   || FUN.info('Brak uprawnień do kategorii transportowej danego transportu.\nArchiwizacja niemożliwa.'@)
   |? _msgs=2
   || exec('add_kom','#message'
        ,'Brak uprawnień do kategorii transportowej transportu %1. Archiwizacja niemożliwa'@[TR_NAG.SYM]
        ,4,'Archiwizacja transportu',__lp+=1)
   ?}
|? _archtr=2 & ~exec('tr_rodz_ope','transport_wspolne',TR_NZL.TR_RODZ,'Dyspozycja transportowa'@,'Archiwizacja niemożliwa.'@,2)
|| {? _msgs=1
   || FUN.info('Brak uprawnień do kategorii transportowej danej dyspozycji.\nArchiwizacja niemożliwa.'@)
   |? _msgs=2
   || exec('add_kom','#message'
        ,'Brak uprawnień do kategorii transportowej dyspozycji %1. Archiwizacja niemożliwa'@[TR_NZL.SYM]
        ,4,'Archiwizacja transportu',__lp+=1)
   ?}
|? _archtr=1 & exec('tr_nag_lock','transport')
|| TR_NAG.cntx_psh();
   {? ~_przywr
   || {? exec('tr_nag_lock','transport',0) & TR_NAG.r_lock(1,1,1)
      || _sym:=TR_NAG.SYM;
         TR_NAG.cntx_psh();
         TR_NAG.clear();
         _Ido:=(do_state()=0);
         {? _Ido
         || do()
         ?};
         _result:=exec('trnag_arch_1','transport_wspolne',TR_NAG.ref());
         {? _result<>'' & _msgs=2
         || exec('add_kom','#message'
             ,'Transport %1 przeniesiono do archiwum.'@[_sym]
             ,38,'Archiwizacja transportu',__lp+=1)
         ?};
         {? _Ido
         || {? ~end()
            || _result:=''
            ?}
         ?};
         TR_NAG.cntx_pop();
         TR_NAG.r_unlock();
         {? _result<>'' & _msgs=1
         || FUN.info('Transport %1 przeniesiono do archiwum.'@[_sym])
         ?}
      ?}
   || {? {? TR_NAG.sel_size()=0
         || (_msgs<>1 | FUN.ask('Czy przywrócić transport z archiwum?'@))
            & exec('tr_nag_lock','transport',0) & TR_NAG.r_lock(1,1,1)
         || exec('tr_nag_lock','transport',0) & TR_NAG.r_lock(1,1,1)
         ?}
      || TR_NAG.cntx_psh();
         _sym:=TR_NAG.SYM;
         do();
         _result:=exec('trnag_arch_1','transport_wspolne',TR_NAG.ref());
         {? _result<>'' & _msgs=2
         || exec('add_kom','#message'
             ,'Transport %1 przywrócono z archiwum.'@[_sym]
             ,38,'Przywrócenie transportu z archiwum',__lp+=1)
         ?};
         end();
         TR_NAG.cntx_pop();
         TR_NAG.r_unlock();
         {? _result<>'' & _msgs=1
         || FUN.info('Transport %1 przywrócono z archiwum.'@[_sym])
         ?}
      ?}
   ?};
   TR_NAG.cntx_pop()
|? _archtr=2 & exec('tr_nzl_lock','transport_zlec')
|| TR_NZL.cntx_psh();
   {? ~_przywr
   || {? exec('tr_nzl_lock','transport_zlec',0) & TR_NZL.r_lock(1,1,1)
      || _sym:=TR_NZL.SYM;
         TR_NZL.cntx_psh();
         TR_NZL.clear();
         _Ido:=(do_state()=0);
         {? _Ido
         || do()
         ?};
         _result:=exec('trnzl_arch_1','transport_wspolne',TR_NZL.ref(),null());
         {? _result<>'' & _msgs=2
         || exec('add_kom','#message'
             ,'Dyspozycję z przesyłkami %1 przeniesiono do archiwum.'@[_sym]
             ,38,'Archiwizacja przesyłki',__lp+=1)
         ?};
         {? _Ido
         || {? ~end()
            || _result:=''
            ?}
         ?};
         TR_NZL.cntx_pop();
         TR_NZL.r_unlock();
         {? _result<>'' & _msgs=1
         || FUN.info('Dyspozycję z przesyłkami %1 przeniesiono do archiwum.'@[_sym])
         ?}
      ?}
   || {? exec('tr_nzl_lock','transport_zlec',0) & TR_NZL.r_lock(1,1,1)
      || TR_NZL.cntx_psh();
         _sym:=TR_NZL.SYM;
         do();
         _result:=exec('trnzl_arch_1','transport_wspolne',TR_NZL.ref(),null());
         {? _result<>'' & _msgs=2
         || exec('add_kom','#message'
             ,'Dyspozycję z przesyłkami %1 przywrócono z archiwum.'@[_sym]
             ,38,'Przywrócenie przesyłki z archiwum',__lp+=1)
         ?};
         end();
         TR_NZL.cntx_pop();
         TR_NZL.r_unlock();
         {? _result<>'' & _msgs=1
         || FUN.info('Dyspozycję transportu %1 przywrócono z archiwum.'@[_sym])
         ?}
      ?}
   ?};
   TR_NZL.cntx_pop()
?};

_result


\trnag_arch_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: przeniesienie do archiwum transportu TR_NAG
::   WE: _a - TR_NAG.ref
::   WY: ref sql-owy zamówienia lub pusty string
::----------------------------------------------------------------------------------------------------------------------
_result:='';

_ref_old:=_a;
_uref_old:='';
_ref_new:=null;
_uref_new:='';
_oidadd:='';
_nidadd:='';
_mskkpo:='';

_mask_bie:=ref_name(_ref_old)+4;

exec('opentr','open_tab',_mask_bie);

TR_NAG.clear();
{? ~TR_NAG.seek(_ref_old)
|| undo()
|| _oidadd:=TR_NAG.IDADD;
   _mskkpo:={? TR_NAG.WYJ_D<>date(0,0,0) || (KPO.name()-3)+TR_NAG.ODDZ+form((TR_NAG.WYJ_D~1)-2000,-2,0,'99') || '' ?}
?};

_uref_old:=TR_NAG.uidref();
{? _mask_bie='____'
|| _mask_kop:=form(TR_NAG.RR,,,'99')+2+form(TR_NAG.RM,-2)
|| _mask_kop='____'
?};

:: kopiowanie naglowka
_tr_nag:=obj_new(TR_NAG.fld_num());
{! _licz:=1..TR_NAG.fld_num()
|! _tr_nag[_licz]:=TR_NAG[_licz]
!};

:: obsluga memo
_memo:=TR_NAG.memo_get('r','UW');

exec('opentr','open_tab',_mask_kop);
TR_NAG.clear();
TR_NAG.blank();
{! _licz:=1..TR_NAG.fld_num()
|! {? var_pres(TR_NAG.fld_acr(_licz),TR_NAG)<>var_pres('UW',TR_NAG)
   || TR_NAG[_licz]:=_tr_nag[_licz]
   ?}
!};
_res_plug:=Plugin.run('BEFORE_ARCH_001','TR_NAG',_uref_old);
{? _res_plug & TR_NAG.add()
|| _ref_new:=TR_NAG.ref();
   _uref_new:=TR_NAG.uidref();
   _nidadd:=TR_NAG.IDADD;
   _result:=$TR_NAG.ref();
   {? _memo.is_open
   || TR_NAG.memo_put(_memo,'UW')
   ?};
   _res_plug:=Plugin.run('AFTER_ARCH_001','TR_NAG',_uref_old,_uref_new);
   {? ~_res_plug
   || _ref_new:=null();
      _result:='';
      undo()
   ?}
|| undo()
?};

{? _ref_new<>null()

|| exec('opentr','open_tab',_mask_bie);
   _tr_kos:=obj_new(TR_KOS.fld_num());
   VAR_DEL.delete('__ukos');
   __ukos:=tab_tmp(1,'ID_KOS','STRING[48]','','ID_NEW','STRING[48]','');
   exec('trig_log_off','transport_wspolne');
:: koszty odwołujące się tylko do nagłówka
   TR_KOS.index('TR_NAG');
   TR_KOS.prefix(_ref_old);
   {? TR_KOS.first()
   || {!
      |? _ukos_old:=TR_KOS.uidref();
         {! _licz:=1..TR_KOS.fld_num()
         |! _tr_kos[_licz]:=TR_KOS[_licz]
         !};
         TR_KOS.cntx_psh();
         exec('opentr','open_tab',_mask_kop);
         TR_KOS.prefix();
         {! _licz:=1..TR_KOS.fld_num()
         |! TR_KOS[_licz]:=_tr_kos[_licz]
         !};
         TR_KOS.TR_NAG:=_ref_new;
         TR_KOS.add();
         _ukos_new:=TR_KOS.uidref();
         __ukos.blank();
         __ukos.ID_KOS:=_ukos_old;
         __ukos.ID_NEW:=_ukos_new;
         __ukos.add();
         exec('opentr','open_tab',_mask_bie);
         TR_KOS.cntx_pop();
         TR_KOS.del()
      !}
   ?};
   obj_del(_tr_kos);

:: archiwizacja TR_NZL

   TR_NZL.index('TR_NAG');
   TR_NZL.prefix(_ref_old);
   {? TR_NZL.first()
   || {!
      |? _trnzl_ref:=TR_NZL.ref();
         _nast:=TR_NZL.next();
         TR_NZL.cntx_psh();
         exec('trnzl_arch_1','transport_wspolne',_trnzl_ref,_ref_new);
         TR_NZL.cntx_pop();
         _nast
      !}
   ?};
   exec('trig_log','transport_wspolne');
   VAR_DEL.delete('__ukos');
:: archiwizacja TR_LOG

   TR_LOG.cntx_psh();

   exec('opentr','open_tab',_mask_bie);
   TR_LOG.index('TRNAG');
   TR_LOG.prefix(_uref_old);
   {? TR_LOG.first()
   || {!
      |? _trlog_ref:=TR_LOG.ref();
         _nast:=TR_LOG.next();
         TR_LOG.cntx_psh();
         TR_LOG.clear();
         {? TR_LOG.seek(_trlog_ref)
         || exec('trlog_arch_1','transport_wspolne',_trlog_ref,_uref_new,'','')
         ?};
         TR_LOG.cntx_pop();
         _nast
      !}
   ?};

   TR_LOG.cntx_pop();

:: odtwarzanie powiazan dokumentow
   exec('refsql_update','dokum',$_ref_old,$_ref_new);
:: odtworzenie zapisów dla KPO
   exec('tr_nag2kpo','odpady',_oidadd,_nidadd,_mskkpo);

   exec('uidref_update','#b__box',_uref_old,_uref_new);
   exec('uidref_update','numery','TRA',_uref_old,_uref_new);

:: usunięcie przeniesionego transportu
   exec('opentr','open_tab',_mask_bie);
   TR_NAG.clear();
   TR_NAG.seek(_ref_old);
   exec('tr_nag_usu','transport',-2)

?};

_result


\upmzad_tr_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Transport - na podstawie UPMZAD
::----------------------------------------------------------------------------------------------------------------------
_tr_naguid:=exec('wybTR_NAG','transport');

{? _tr_naguid='add'
|| _params:=exec('mp_run_a','#b__box');
   _params.PROC_START:='T';
   _params.ACT_UID:='LTR_TRA_DZLE';
   _params.AKCJA:='Przewoz';
   exec('mp_run','#b__box',_params)
|? _tr_naguid<>''
|| _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='LTR_TRA_DZLE';
   _params.UIDREF:=_tr_naguid;
   _params.AKCJA:='Przewoz+';
   exec('mp_run','#b__box',_params)
|? UPMZAD.sel_size()
|| UPMZAD.sel_adel()
?};
~~


::\f3_index_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Obsługa f3 przy wyborze materiału na pozycji
::----------------------------------------------------------------------------------------------------------------------
:: kopia okienka wertowania
:: nałożenie filtru
:: wyświetlenie okienka i wybór

::M.cntx_psh();
::M.index('TR_RODZ');
::{? TR_NZL.TR_RODZ<>null
::||
::   M.prefix(TR_ZL.TR_NZL().TR_RODZ.ref())
::||
::   M.prefix()
::?};
::M.win_sel('NL_WER');
::{? M.select()
::||
::   TR_ZL.M:=M.ref()
::?};
::M.cntx_pop();
::1


\ae_prodzt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: po redakcji zmiennej POMOC.RODZT
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? fld()<>'T' & fld()<>'U'
|| FUN.info('Wpisz: T-Materiał lub U-Usługa.'@)
||
   _wyn:=1;
   {? fld()='T'
   ||
      M.win_dict('NL_WER');
      M.win_sel('NL_WER');
      M.actions('NL_WER','WE')
   |? fld()='U'
   ||
      M.win_dict('NL_WERU');
      M.win_sel('NL_WERU');
      M.actions('NL_WERU','WE')
   ?};
   POMOC.RODZ:=POMOC.RODZT;
   {? TR_ZL.M().RODZ<>POMOC.RODZ || TR_ZL.M:=null ?}
?};
{? POMOC.RODZ='U'
|| TR_ZL.IL_OP:=0;
   TR_ZL.efld_opt(TR_ZL.win_edit('?'),'enable=0',,'IL_OP')
|| {? TR_ZL.IL_OP=0 || TR_ZL.IL_OP:=1 ?};
   TR_ZL.efld_opt(TR_ZL.win_edit('?'),'enable=1',,'IL_OP');
   TR_ZL.efld_opt(TR_ZL.win_edit('?'),'editable=grayed',,'IL_OP')
?};
_wyn


\wp_prodzt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: wartość początkowa zmiennej POMOC.RODZT
::----------------------------------------------------------------------------------------------------------------------
POMOC.RODZ:=POMOC.RODZT;
1


\czy_tr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: sprawdza czy obsługa tranportu
::   WE: _a - dokument źródłowy
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_dok:=_a;
_result:=0;
{? var_pres('_dok')<>type_of(null()) | _dok=null()
||
   return(0)
?};
_Tab:=ref_tab(_dok);
_p100161:=exec('get','#params',100161);
{? _p100161='T'
||
   {? _Tab=UPMZAD
   ||
      {? exec('FindAndGet','#table',UPMZAD,_dok,,"UPMZAD.RODZ='N'",0)
      ||
         return(0)
      ?}
   |? _Tab=ZLP & ZLP.TRN='N'
   || return(0)
   || return(1)
   ?}
|? _p100161='N'
||
   return(0)
?};
:: _p100161='R'
{? _Tab=ZLP
||
   {? _Tab.TRN='N'
   || _result:=0
   || M.cntx_psh();
      _result:=exec('FindAndGet','#table',ZLP,_dok,,"ZLP.MJ().TR_RODZ<>null()",0);
      M.cntx_pop()
   ?}

|? _Tab=UPMZAD
||
   _result:=
      exec('FindAndGet','#table',UPMZAD,_dok,,"
         (';WZ'*UPMZAD.RODZ)>1 & UPMZAD.OLD_M().TR_RODZ<>null()
            |
         (';WP'*UPMZAD.RODZ)>1 & UPMZAD.NEW_M().TR_RODZ<>null()
      ",0)
?};
_result


\w_transporcie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: sprawdza czy status dotyczy obsługi transportu
::   WE: _a - status
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_a<>exec('tr_nzl_status_oczekujace','transport_zlec')
   &
_a<>exec('tr_nzl_status_nowe','transport_zlec')
   &
_a<>exec('tr_nzl_status_do_planowania','transport_zlec')


\chk_rec_tr_zewn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: sprawdza poprawność wypełnienia pól dla TR_ZEWN
::----------------------------------------------------------------------------------------------------------------------
_res:=__CHK.record(TR_ZEWN,,'KOD');
{? TR_ZEWN.API='T' & TR_ZEWN.COURIER=''
|| FUN.info('Dla obsługi zdalnej należy podać kod identyfikujący kuriera.'@);
   _res:='COURIER'
|? TR_ZEWN.API='T' &
   1+menu_txt()='D' &
   (TR_ZEWN.cntx_psh();
   TR_ZEWN.index('API');
   TR_ZEWN.prefix('T',TR_ZEWN.COURIER);
   _wyn:=TR_ZEWN.first();
   TR_ZEWN.cntx_pop();
   _wyn)
   |
   TR_ZEWN.API='T' &
   1+menu_txt()='P' &
   (TR_ZEWN.cntx_psh();
   TR_ZEWN.index('API');
   TR_ZEWN.prefix('T',TR_ZEWN.COURIER);
   _wyn:=TR_ZEWN.first();
   _ref:=TR_ZEWN.ref();
   TR_ZEWN.cntx_pop();
   _wyn)&
   _ref<>TR_ZEWN.ref()
|| FUN.info('Kod kuriera '@+TR_ZEWN.COURIER+' został już wprowadzony.'@);
   _res:='COURIER'
|? TR_ZEWN.MWG<0
|| FUN.info('Należy podać wartość większą lub równą zero.'@);
   _res:='MWG'
|? TR_ZEWN.WGG<0
|| FUN.info('Należy podać wartość większą lub równą zero.'@);
   _res:='WGG'
|? (1+menu_txt())<>'D' & ~TR_ZEWN.WYB_MSC & exec('FindInSet','#table','KH_MSC','TR_ZEWN',TR_ZEWN.ref())<>null()
|| FUN.info('Zdefiniowano miejsca dostawy. Punkty odbioru nie mogą być Nieobsługiwane.'@);
   TR_ZEWN.WYB_MSC:=2;
   _res:='WYB_MSC'
?};
_res


\where2TAB
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: zwraca tabelę na podstawie wpisu WHERE
::   WE: _a - TR_NZL.WHERE
::       [_b] - tabela pozycji domyślnie nagłówkowa
::   WY: uchwyt tabeli lub uchwyt TR_NZL, a dla pozycji TR_ZL
::----------------------------------------------------------------------------------------------------------------------
_tab:={? var_pres('_a')=type_of('') || _a || '' ?};
_pos:={? var_pres('_b')=type_of(0)  || _b || 0 ?};

{? (';ZK_N;ZD_NAG;ND;ZDP_NAG;REK_N;ZGP;'*_tab)>1
|| _res:={? _pos
         || _tab:={? _tab='ZK_N'    || 'ZK_P'
                  |? _tab='ZD_NAG'  || 'ZD_POZ'
                  |? _tab='ND'      || 'DK'
                  |? _tab='ZDP_NAG' || 'ZDP_POZ'
                  |? _tab='REK_N'   || 'REK_N'
                  |? _tab='ZGP'     || 'ZGP'
                  || 'TR_ZL'
                  ?};
            ($_tab)()
         || ($_tab)()
         ?}
|| _res:={? _pos || TR_ZL || TR_NZL ?}
?};
_res


\aktIL_TRAN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: aktualizuje ilości w dyspozycji i w transporcie
::   WE: _a - tabela
::       _b - wskazanie na pozycje dokumentu - uidref
::       [_c] - rodzaj dyspozycji: domyślnie brak, 'Z'-załadunek 'R'-rozładunek
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_Tab:={? var_pres('_a')=type_of(FIRMA)       || _a || return(0) ?};
_Sql:={? var_pres('_b')=type_of('') & _b<>'' || _b || return(0) ?};
_zal:={? var_pres('_c')=type_of('') & (';ZR'*_c)>1 || _c || '' ?};

VAR_DEL.delete('__il_zt','__il_tr');
_buf:=exec('ileTR_ZL','transport_wspolne',_Sql,_zal);
__il_zt:=_buf[1];
__il_tr:=_buf[2];
obj_del(_buf);

_res:={? _zal=''  || exec('FindAndGet','#table',_Tab,(_Sql+16),,"IL_ZT:=__il_zt; IL_TR:=__il_tr; put(1)",0)
      |? _zal='Z' || exec('FindAndGet','#table',_Tab,(_Sql+16),,"IL_ZTZ:=__il_zt; IL_TRZ:=__il_tr; put(1)",0)
      |? _zal='R' || exec('FindAndGet','#table',_Tab,(_Sql+16),,"IL_ZTR:=__il_zt; IL_TRR:=__il_tr; put(1)",0)
      ?};
:: dodatkowe uzupełnienie pola SYMZ, SYMR dla ZGP
{? _res & _Tab=ZGP & (';ZR'*_zal)>1
|| VAR_DEL.delete('__symtr');
   __symtr:='';
   TR_NZL.cntx_psh();
   TR_ZL.cntx_psh();
   TR_ZL.index('POZ_REF');
   TR_ZL.prefix(_Sql,);
   {? TR_ZL.first() & TR_ZL.find_tab('first','TR_NZL','RODZ','=',_zal)
   || _buf:=TR_ZL.TR_NZL().SYM;
      {!
      |? {? _buf<>TR_ZL.TR_NZL().SYM || _buf:='<kilka>' ?};
         _buf<>'<kilka>' & TR_ZL.find_tab('next','TR_NZL','RODZ','=',_zal)
      !};
      __symtr:=_buf
   ?};
   TR_ZL.cntx_pop();
   TR_NZL.cntx_pop();
   _res:={? _zal='Z' || exec('FindAndGet','#table',_Tab,(_Sql+16),,"SYMZ:=__symtr; put(1)",0)
         |? _zal='R' || exec('FindAndGet','#table',_Tab,(_Sql+16),,"SYMR:=__symtr; put(1)",0)
         ?};
   VAR_DEL.delete('__symtr')
?};
:: dodatkowa aktualizacja na pozycji wyjściowego zamówienia
{? _res & _Tab=ZDP_POZ
|| _Sql:=exec('FindAndGet','#table',_Tab,(_Sql+16),,"ZD_POZ",'');
   {? _Sql<>'' || _Sql:=exec('FindAndGet','#table',ZD_POZ,_Sql,,"uidref()",'') ?};
   {? _Sql<>''
   || _buf:=exec('ileTR_ZL','transport_wspolne',_Sql);
      __il_zt+=_buf[1];
      __il_tr+=_buf[2];
      obj_del(_buf);
      _res:=exec('FindAndGet','#table',ZD_POZ,(_Sql+16),,"IL_ZT:=__il_zt; IL_TR:=__il_tr; put(1)",0)
   ?}
|? _res & _Tab=ZD_POZ
|| _dod:=0;
   exec('openzd_psh','open_tab');
   exec('openzd','open_tab',ST.ODDZ+'__');
   ZDP_POZ.index('ZD_POZ');
   ZDP_POZ.prefix((_Sql+16),);
   {? ZDP_POZ.first()
   || {!
      |? _dod:=1;
         _buf:=exec('ileTR_ZL','transport_wspolne',ZDP_POZ.uidref());
         __il_zt+=_buf[1];
         __il_tr+=_buf[2];
         obj_del(_buf);
         ZDP_POZ.next()
      !}
   ?};
   OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.first()
   || {!
      |? exec('openzd','open_tab',ST.ODDZ+($OKR.ROK+2));
         ZDP_POZ.index('ZD_POZ');
         ZDP_POZ.prefix((_Sql+16),);
         {? ZDP_POZ.first()
         || {!
            |? _dod:=1;
               _buf:=exec('ileTR_ZL','transport_wspolne',ZDP_POZ.uidref());
               __il_zt+=_buf[1];
               __il_tr+=_buf[2];
               obj_del(_buf);
               ZDP_POZ.next()
            !}
         ?};
         OKR.next()
      !}
   ?};
   OKR.cntx_pop();
   exec('openzd_pop','open_tab');
   {? _dod || _res:=exec('FindAndGet','#table',_Tab,(_Sql+16),,"IL_ZT:=__il_zt; IL_TR:=__il_tr; put(1)",0) ?}
?};
VAR_DEL.delete('__il_zt','__il_tr');
_res


\czyTR_NZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: sprawdza czy dany dokument podlega dyspozycji transportu
::   WE: _a - uidref dokumentu
::       [_b] - 1-kontrola czy jest choć jedna dyspozycja 0(domyślnie)-nie
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_dok:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || return(0) ?};
_ctrl:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_Tab:=ref_tab(_dok);
_ind:='';
_typ:=0;
_Tap:={? _Tab=ZK_N    || _ind:='NAG';     _typ:=1; ZK_P
      |? _Tab=ZD_NAG  || _ind:='POZ';     _typ:=2; ZD_POZ
      |? _Tab=ND      || _ind:='DOKMAG';  _typ:=3; DK
      |? _Tab=ZDP_NAG || _ind:='ZDP_POZ'; _typ:=4; ZDP_POZ
      |? _Tab=REK_N   || _ind:='';        _typ:=5; REK_N
      || TR_ZL
      ?};
{? _Tab=REK_N
|| _jest:={? ~_ctrl
          || exec('FindAndGet','#table',REK_N,_dok,,"(IL-IL_ZT)>0",0)
          || exec('FindAndGet','#table',REK_N,_dok,,"IL_ZT>0",0)
          ?};
   _res:=_jest
|? _Tap<>TR_ZL
|| _jest:=0;
   _Tab.cntx_psh();
   _Tap.cntx_psh();
   _Tap.index(_ind);
   _Tap.prefix(exec('FindAndGet','#table',_Tab,_dok));
   {? _Tap.first()
   || {!
      |? _poz_ref:={? _typ=1 || ZK_P.uidref()
                   |? _typ=2 || ZD_POZ.uidref()
                   |? _typ=4 || exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"uidref()",'')
                   || ''
                   ?};
         {? _poz_ref<>''
         || _buf:=exec('ileTR_ZL','transport_wspolne',_poz_ref,,1);
            _il_zt:=_buf[1];
            obj_del(_buf)
         || _il_zt:=0
         ?};

         _jest:={? _typ=1 || {? ~_ctrl || (ZK_P.ILP-_il_zt)>0 || ZK_P.IL_ZT>0 ?}
                |? _typ=2 || {? ~_ctrl || (ZD_POZ.IL_POZ-_il_zt)>0 || ZD_POZ.IL_ZT>0 ?}
                |? _typ=3 || {? ~_ctrl || (DK.IL-DK.IL_ZT)>0 || DK.IL_ZT>0 ?}
                |? _typ=4 || {? ~_ctrl
                             || (ZDP_POZ.IL-_il_zt)>0
                             || exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"IL_ZT",0)>0
                             ?}
                || 0
                ?};
         ~_jest & _Tap.next()
      !};
      _res:=_jest
   ?};
   _Tab.cntx_pop();
   _Tap.cntx_pop()
?};
_res


\ileTR_ZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: zwraca ilość w dyspozycjach dla danej pozycji
::   WE: _a - uidref pozycji
::       [_b] - rodzaj dyspozycji: domyślnie brak, 'Z'-załadunek 'R'-rozładunek
::       [_c] - 0(domyślnie), 1-dyspozycja magazynowa
::   WY: _res - tabela 1-ilość w dyspozycjach 2-ilość w transporcie 3-ilość na dyspozycji magazynowej pierwotna
::----------------------------------------------------------------------------------------------------------------------
_res:=obj_new(3);
{! _i..3 |! _res[_i]:=0 !};
_Sql:={? var_pres('_a')=type_of('') & _a<>'' || _a || return(0) ?};
_zal:={? var_pres('_b')=type_of('') & (';ZR'*_b)>1 || _b || '' ?};
_mag:={? var_pres('_c')=type_of(0) || _c || 0 ?};

TR_NAG.cntx_psh();
TR_NZL.cntx_psh();
TR_ZL.cntx_psh();
TR_ZL.index('POZ_REF');
TR_ZL.prefix(_Sql);
{? TR_ZL.first()
|| {!
   |? _dyspmag:=TR_ZL.TR_NZL().WHERE='TR_NZL';
      {? {? _mag
         || {? ~_dyspmag
            || exec('FindInSet','#table','TR_NZL','DOK_REF',TR_ZL.TR_NZL().uidref(),,,,,null())=null()
            || 1
            ?}
         || ~_dyspmag
         ?} & (_zal='' | TR_ZL.TR_NZL().RODZ=_zal)
      || _res[3]+={? _mag || TR_ZL.IL || 0 ?};
         {? TR_ZL.TR_NZL().TR_NAG=null()
         || _res[1]+=TR_ZL.IL
         || _ile:=(TR_ZL.IL-TR_ZL.ZIL);
            {? _ile<0 || _ile:=0 ?};
            _res[1]+=(TR_ZL.IL-TR_ZL.ZIL);
            _res[2]+=_ile
         ?}
      ?};
      TR_ZL.next()
   !}
?};
TR_NAG.cntx_pop();
TR_NZL.cntx_pop();
TR_ZL.cntx_pop();
_res


\zamWGtr_zl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: zwraca tabelę zamówień powiązanych z daną dyspozycją w magazynie
::   WE: _a - TR_NZL.ref()
::   WY: _res - tabela
::----------------------------------------------------------------------------------------------------------------------
_res:=tab_tmp(1,'DOK_REF','STRING[48]','');
TR_NZL.cntx_psh();
TR_ZL.cntx_psh();
TR_ZL.index('POZ');
TR_ZL.prefix(_a);
{? TR_ZL.first()
|| {!
   |? _res.clear();
      {? TR_ZL.DOK_REF<>'' & (_res.prefix(TR_ZL.DOK_REF); ~_res.first())
      || _res.blank();
         _res.DOK_REF:=TR_ZL.DOK_REF;
         _res.add(1)
      ?};
      TR_ZL.next()
   !}
?};
TR_NZL.cntx_pop();
TR_ZL.cntx_pop();
_res


\stReady
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: zmiana stanu dyspozycji transportowej na przygotowaną
::   WE: _a - TR_NZL.ref()
::       [_b] - 1-automatyczna zmiana 0(domyślnie)-z pytaniem
::       [_c] - rodzaj stanu dyspozycji, domyślnie 'Z'
::       [_d] - uzupełnienie ilości potwierdzonych
::   WY: 1-powiodło się 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_auto:={? var_pres('_b')=type_of(0) || _b || 0 ?};
_stan:={? var_pres('_c')=type_of('') & (';TZR+'*_c)>1 || _c || 'Z' ?};
_uzup:={? var_pres('_d')=type_of(0) || _d || 0 ?};
TR_NZL.cntx_psh();
TR_NZL.prefix();
{? TR_NZL.seek(_a) & (';TZR'*_stan)>1
|| _potw:=exec('ctrl_poz','transport',TR_NZL.ref());
   _dtra:=0;
   _txc:='';
   _txb:='';
   _txt:={? TR_NZL.WHERE='TR_NZL'
         || _txb:='Z potwierdzeniem pozycji'@;
            _txc:='\n\nUwaga. Potwierdzenie pozycji oznacza przepisanie wszystkich ilości z pozycji jako zrealizowane.'@;
            {? _stan='T' || 'Do potwierdzenia'@
            |? _stan='Z' || 'Potwierdzoną'@
            |? _stan='R' || 'W trakcie potwierdzenia'@
            || ''
            ?}
         || _dtra:=1;
            _txb:='Z realizacją pozycji'@;
            _txc:='\n\nUwaga. Realizacja pozycji to oznaczenie wszystkich pozycji jako zrealizowane.'@;
            {? _stan='Z' || _stan:='+' ?};
            {? _stan='T' || 'Do zrealizowania'@
            |? _stan='+' || {? _potw=1 || 'Zrealizowaną'@
                            |? _potw=0 || _txb:='Zrealizowaną: uzupełnia pozycje'@;
                                          'Niezrealizowaną'@
                            |? _potw>0 || 'Częściowo zrealizowaną'@
                            || ''
                            ?}
            |? _stan='R' || 'W trakcie realizacji'@
            || ''
            ?}
         ?};
   {? _auto
    | {? _uzup & _stan='Z' & TR_NZL.WHERE<>'TR_NZL'
      || _opc:=FUN.choice('Czy zmienić stan dyspozycji %1 na %2.?%3'@[TR_NZL.SYM,_txt,_txc],1
                 ,'Bez zmian dla pozycji'@,_txb);
         {? _opc<>2 || _uzup:=0 ?};
         _opc
      || {? _potw=0
         || _opc:=FUN.choice('Żadna z pozycji dyspozycji %1 nie została oznaczona jako zrealizowana.'
                             '\nWybierz sposób zmiany stanu dyspozycji.%2'@[TR_NZL.SYM,_txc],1,_txb,_txt)
         || _uzup:=0;
            _opc:=FUN.ask('Czy zmienić stan dyspozycji %1 na %2.?'@[TR_NZL.SYM,_txt])
         ?};
         _opc
      ?}
   || _st:=_stan;
      _mgst:=exec('ctrl_poz','transport',TR_NZL.ref());
      {? (';Z+'*_stan)>1 & ~_uzup
      || {? ~_mgst   || _st:='X'
         |? _mgst<>1 || _st:='S'
         ?}
      ?};
      {? TR_NZL.WHERE='TR_NZL'
      || {? (';Z+'*_stan)>1 & _uzup || _mgst:=1 ?};
         {? ~_mgst                       || _st:='X'
         |? _mgst=1 & TR_NZL.DOK_REA=''  || _st:='C'
         |? _mgst=1 & TR_NZL.DOK_REA<>'' || _st:='D'
         |? TR_NZL.DOK_REA<>''           || _st:='B!'
                                         || _st:='B1'
         ?}
      ?};
      {? TR_NZL.WHERE='TR_NZL' || exec('stMG','transport_wspolne',_st) || TR_NZL.MGDSP:=_st ?};
      {? TR_NZL.put()
      || _res:=1;
         {? {? _dtra ||  ~_potw & _opc=1 || (_uzup & (';Z+'*_stan)>1) ?}
         || TR_ZL.cntx_psh();
            TR_ZL.index('POZ');
            TR_ZL.prefix(_a);
            {? TR_ZL.first()
            || {!
               |? TR_ZL.ZIL:=TR_ZL.IL;
                  TR_ZL.REAL:={? TR_ZL.ZIL>0 || 'T' || 'N' ?};
                  TR_ZL.put(1);
                  TR_ZL.next()
               !}
            ?};
            TR_ZL.cntx_pop();
            {? _dtra & ~_potw || _potw:=1 ?}
         ?};
         {? _dtra & _potw<>1
         || _tr_nag:=TR_NZL.TR_NAG().uidref();
            _tr_moc:=TR_NZL.TR_MOC;
            _il_szt:=TR_NZL.IL_SZT;
            _lp_tr:=TR_NZL.LP_TR;
            do();
            _ok:=1;
            _refSQL:='';
            {? _potw || _refSQL:=exec('tr_nzl_split','transport_zlec',,,1) ?};
            {? _ok
            || {? _refSQL<>''
               || TR_NZL.REAL:='T';
                  exec('sum_poz','transport_zlec',TR_NZL.ref());
                  TR_NZL.put(1);
                  TR_NZL.prefix();
                  {? TR_NZL.seek(_refSQL)
                  || TR_NZL.REAL:='A';
                     TR_NZL.TR_MOC:=null();
                     TR_NZL.put(1);
                     TR_NZL.get();
                     _tr_moc:=TR_NZL.TR_MOC;
                     _il_szt:=TR_NZL.IL_SZT;
                     _lp_tr:=TR_NZL.LP_TR
                  || _ok:=0
                  ?}
               ?};
               {? _ok
               || exec('log_nag','transport_wspolne',TR_NZL.uidref()
                    ,{? TR_NZL.REAL='T' || 'reatr' || 'nortr' ?},,_tr_moc,_il_szt,_tr_nag,_lp_tr);
                  {? ~exec('one_tr_nzl','transport',TR_NZL.ref(),2) || _result:=0; undo() ?}
               ?}
            || undo()
            ?};
            end();
            {? _ok || grp_disp(TR_LOG,'REAL',,1) ?}
         ?}
      ?}
   ?}
?};
TR_NZL.cntx_pop();
_res


\status_MG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: zwraca opis stanu dyspozycji w magazynie
::   WY: opis stanu dyspozycji w magazynie
::----------------------------------------------------------------------------------------------------------------------
{? TR_NZL.STAT_REJ='A'             || exec('stMG','transport_wspolne','Y')
|? TR_NZL.REAL='T'                 || exec('stMG','transport_wspolne','X')
|? TR_NZL.STAT_REJ='N'             || exec('stMG','transport_wspolne','G')
|? TR_NZL.STAT_REJ='Z'
|| {? TR_NZL.TR_NAG=null()         || exec('stMG','transport_wspolne','F')
   |? TR_NZL.TR_NAG().STAT_REJ='N' || exec('stMG','transport_wspolne','E')
   |? TR_NZL.TR_NAG().STAT_REJ='Z'
   || {? TR_NZL.MGDSP='D'          || exec('stMG','transport_wspolne','D')
      |? TR_NZL.MGDSP='Z'          || exec('stMG','transport_wspolne','C')
      |? ';SX'*TR_NZL.MGDSP        || exec('stMG','transport_wspolne','B')
      |? ';NTR'*TR_NZL.MGDSP       || exec('stMG','transport_wspolne','A')
      ?}
   ?}
?};
~~


\stMG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: oznaczenie stanu dyspozycji transportowej
::   WE: _a - stan
::       [_b] - 1-priorytetowe 0(domyślnie)-normalne
::       [_c] - 1-zapis 0(domyślnie) bez zapisu
::   WY: 1-powiodło się 0-nie
::----------------------------------------------------------------------------------------------------------------------
_prior:={? _a='B!' | ~((';AB'*_a)>1) || '' |? var_pres('_b')=type_of(0) & _b || '0' || '1' ?};
_put:={? var_pres('_c')=type_of(0) || _c || 0 ?};

TR_NZL.STMG:=_a+_prior;
TR_NZL.STMGDESC:=exec('stMG_desc','transport_wspolne',TR_NZL.STMG);
{? _put || TR_NZL.put(1) ?};
~~


\stMG_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: zwraca opis stanu dyspozycji w magazynie
::   WY: opis stanu dyspozycji w magazynie
::----------------------------------------------------------------------------------------------------------------------
_st:=TR_NZL.STMG;
_wys:=TR_NZL.WHERE='TR_NZL' & exec('FindInSet','#table','EANN','AKT',$TR_NZL.ref(),'T')<>null();
_res:={? _st='A0' || {? _wys || 'urządzenie mobilne' || '! do przygotowania' ?}
      |? _st='A1' || {? _wys || 'urządzenie mobilne' || 'do przygotowania' ?}
      |? _st='B0' || '! przygotowana - nie wszystko'
      |? _st='B1' || 'przygotowana - nie wszystko'
      |? _st='B!' || 'dokument - nie wszystko'
      |? _st='C'  || 'przygotowana'
      |? _st='D'  || 'wystawiono dokument'
      |? _st='E'  || 'w planowaniu transportu'
      |? _st='F'  || 'zatwierdzona'
      |? _st='G'  || 'niezatwierdzona'
      |? _st='X'  || 'odebrana - zrealizowana'
      |? _st='Y'  || 'anulowana'
      |? _st='no' || 'nie dotyczy'
      || 'brak oznaczenia'
      ?};
_res


\tr_nzl_dispmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wyświetla powiązane dyspozycje w magazynie
::----------------------------------------------------------------------------------------------------------------------
{? ';ZK_N;ZD_NAG;ZDP_NAG'*TR_NZL.WHERE & TR_NZL.GRP<>''
|| VAR_DEL.delete('__trnag','__trrodz','__trgrp');
   __trnag:=TR_NZL.TR_NAG;
   __trrodz:={? TR_NZL.RODZ='Z' || 'R' || 'Z' ?};
   __trgrp:=TR_NZL.GRP;
   _symbol:=TR_NZL.SYM;
   TR_NZL.cntx_psh();
   TR_NZL.index('ORDERMG');
   TR_NZL.prefix(__trnag,'TR_NZL',__trrodz,__trgrp);
   {? TR_NZL.first()
   || _win_grp:=TR_NZL.grp_make('Dyspozycje w magazynie dotyczące: %1'@[_symbol],,'transzlec_mag',,,);

      _opis:={? __trrodz='Z' || 'Dyspozycje załadunku'@ || 'Dyspozycje rozładunku'@ ?};
      _fb:="exec('pr_TR_NZL','transport_wspolne')";
      _fa:="exec('po_TR_NZL','transport_wspolne')";
      _fr:="exec('pd_TR_NZL','transport_wspolne')";
::    Dyspozycje w magazynie
      TR_NZL.grp_sel(_win_grp,TR_NZL,'MAGALL',_opis,_fr,,,15,_fb,_fa,,,'maximized_with_title');
      TR_NZL.tab_splt(_win_grp,'tab0','horizontal','pozycjeZ');
      TR_NZL.grp_sel(_win_grp,TR_ZL,'MAG',,,,,,,,,,'maximized_with_title');
      TR_NZL.win_sel(_win_grp);
      TR_NZL.select()
   || FUN.info('Trasa nie jest powiązana z dyspozycjami magazynowymi.'@)
   ?};
   TR_NZL.cntx_pop();
   VAR_DEL.delete('__trnag','__trrodz','__trgrp')
?}


\pr_TR_NZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przed dla dyspozycji w magazynie
::----------------------------------------------------------------------------------------------------------------------
{? TR_NAG.name()+4<>'____'
|| exec('opentr','open_tab','____')
?};
TR_NZL.cntx_psh();
TR_NZL.index('ORDERMG');
TR_NZL.prefix(__trnag,'TR_NZL',__trrodz,__trgrp);
exec('pd_TR_NZL','lmg');
~~


\po_TR_NZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: po dla dyspozycji w magazynie
::----------------------------------------------------------------------------------------------------------------------
{? TR_Z.name()+4='____'
|| TR_Z.NZL_PL:={? TR_NZL.sel_size() | {? TR_NZL.f_active() || TR_NZL.f_size() || TR_NZL.size() ?}
                || $TR_NZL.ref()
                || ''
                ?}
?};
TR_NZL.cntx_pop();
~~


\pd_TR_NZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przed dla dyspozycji w magazynie
::----------------------------------------------------------------------------------------------------------------------
_size:=TR_NZL.sel_size() | {? TR_NZL.f_active() || TR_NZL.f_size() || TR_NZL.size() ?};
TR_ZL.index('POZ');
TR_ZL.prefix({? _size || TR_NZL.ref() || null() ?});
grp_disp(TR_ZL,'MAG');
~~


\tr_nzl_infdst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wprowadzenie danych o przesyłce
::   WE: 1-zmieniono 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_lock:=1;
_notr:=TR_NZL.NOTR;
{? ~_notr & TR_NZL.TR_NAG<>null() & TR_NZL.TR_NAG().STAT_REJ='T'
|| FUN.info('Zakończono realizację transportu.\nNie można zmienić numeru przesyłki.'@)
|? (_notr | (TR_NZL.TR_NAG<>null() & TR_NZL.TR_NAG().STAT_REJ<>'T'))
 & (_lock:=exec('tr_nzl_lock','transport_zlec')) & exec('add_blk','transport_zlec',TR_NZL.ref())
|| {? TR_NZL.TR_ZEWN<>null() & TR_NZL.TR_ZEWN().API='T'
   ||
::    obsługa przesyłek dla kuriera
      exec('selTR_PACK','transport_paczki',TR_NZL.ref())
   ||
::    wprowadzenie tylko numeru przesyłki
      _edit:=TR_NZL.win_edit('?');
      exec('tr_nzl_win_edit_set','transport_zlec',,4);
      {? TR_NZL.edit()
      || _res:=TR_NZL.put(1)
      ?};
      TR_NZL.win_edit(_edit)
   ?};
   exec('done_blk','transport_zlec',TR_NZL.ref())
|| {? _lock
   || {? TR_NZL.TR_NAG=null()
      || FUN.info('Dyspozycja nie została zaplanowana w transporcie.\nOpcja niedostępna.'@)
      || FUN.info('Opcja niedostępna.'@)
      ?}
   ?}
?};
_res


\tr_nzl_infzad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: informacja o przesyłkach dla zamówień dostaw
::----------------------------------------------------------------------------------------------------------------------
exec('infdst','transport_wspolne',ZD_NAG.uidref())


\tr_nzl_infzam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: informacja o przesyłkach dla zamówień sprzedaży/wewnętrznych
::----------------------------------------------------------------------------------------------------------------------
exec('infdst','transport_wspolne',ZK_N.uidref())


\tr_nzl_infzdp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: informacja o przesyłkach dla potwierdzeń zamówień dostaw
::----------------------------------------------------------------------------------------------------------------------
exec('infdst','transport_wspolne',ZDP_NAG.uidref())


\infdst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: informacja o przesyłkach - wyświetla tabelę
::   WE: _a - uidref dokumentu
::----------------------------------------------------------------------------------------------------------------------
_uidref:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || '' ?};

{? _uidref<>''
|| _tab:=tab_tmp(3,'TR_NZL','STRING[48]',''
          ,'DT','DATE',''
          ,'TM','TIME',''
          ,'RODZ','STRING[20]',''
          ,'OPTR','STRING[60]',''
          ,'TR_ZL','STRING[48]',''
          ,'TR_ZEWNN','STRING[100]',''
          ,'TR_ZEWNT','STRING[40]',''
          ,'TR_ZEWNU','STRING[100]',''
          ,'SYM','STRING[20]',''
          ,'POJREJ','STRING[100]',''
          ,'DP','DATE',''
          ,'DR','DATE',''
          ,'GR','TIME','');
   exec('opentr_psh','open_tab');
   exec('opentr','open_tab','____');
   TR_ZL.index('DOK_REF');
   TR_ZL.prefix(_uidref);
   {? TR_ZL.first()
   || {!
      |? {? TR_ZL.TR_NZL().WHERE<>'TR_NZL'
         || _uidnzl:=exec('FindAndGet','#table',TR_NZL,TR_ZL.TR_NZL,,"uidref()",'');
            _tab.clear();
            {? ~_tab.find_key(_uidnzl)
            || _tab.blank();
               _tab.TR_NZL:=_uidnzl;
               _tab.SYM:=TR_ZL.TR_NZL().SYM;
               {? TR_ZL.TR_NZL().TR_NAG<>null()
               || _tab.DT:=TR_ZL.TR_NZL().TR_NAG().WYJ_D;
                  _tab.TM:=TR_ZL.TR_NZL().TR_NAG().WYJ_T;
                  _tab.DP:=TR_ZL.TR_NZL().DP;
                  _tab.DR:=TR_ZL.TR_NZL().DR;
                  _tab.GR:=TR_ZL.TR_NZL().GR
               ?};
               {? TR_ZL.TR_NZL().TR_ZEWN<>null()
               || _tab.RODZ:=TR_ZL.TR_NZL().TR_ZEWN().KOD;
                  _tab.OPTR:=TR_ZL.TR_NZL().TR_ZEWN().NAZ
               || _tab.RODZ:='<nieokreślony>';
                  _tab.OPTR:='...'
               ?};
               _tab.TR_ZL:=TR_ZL.uidref();
               _tab.TR_ZEWNN:=TR_ZL.TR_NZL().TR_ZEWNN;
               _tab.TR_ZEWNT:=TR_ZL.TR_NZL().TR_ZEWNT;
               _tab.TR_ZEWNU:=TR_ZL.TR_NZL().TR_ZEWNU;
               _tab.add(1)
            ?}
         ?};
         TR_ZL.next()
      !}
   ?};
   {? _tab.first()
   || _win:=_tab.mk_sel('Informacje o transporcie'@,,,'infdst_tran',,,,,'U',,,,,,'auto');
      _tab.win_fld(_win,,'RODZ',,,10,,0,'Rodzaj'@);
      _tab.win_fld(_win,,'OPTR',,,15,,0,'Opis rodzaju'@);
      _tab.win_fld(_win,,'DT',,,10,,0,'Data'@);
      _tab.win_fld(_win,,'TM',,,8,,0,'Czas'@);
      _tab.win_fld(_win,,'TR_ZEWNN',,,20,,0,'Oznaczenie przesyłki'@);
      _tab.win_fld(_win,,'DP',,,10,,0,'Zaplanowano'@);
      _tab.win_fld(_win,,'DR',,,10,,0,'Data realizacji'@);
      _tab.win_fld(_win,,'GR',,,8,,0,'Czas realizacji'@);
      _tab.win_fld(_win,,'TR_ZEWNT',,,10,,0,'Telefon'@);
      _tab.win_fld(_win,,'TR_ZEWNU',,,20,,0,'Opis'@);
      _tab.win_fld(_win,,'SYM',,,15,,0,'Symbol dyspozycji'@);
      _tab.win_act(_win,0,'Wyświetl',,,,"exec('tr_nzl_disp','transport_wspolne')",,0);
      {? exec('chk_role','#b__box',OPERATOR.USER,'LTR_ZLE_DZLE')
      || _tab.win_act(_win,,'Formuła','Prz&esyłka'@@,,'Wprowadzanie danych o przesyłce'@
               ,"exec('tr_nzl_infdstP','transport_wspolne')",,1,,,,'E');
         _tab.win_btn(_win,'text=%1,align=begin'['Przesyłka'@],'menu:E',,,0,,,'noempty')
      ?};
      _tab.win_act(_win,,'Formuła','Koszt&y'@@,,'Wprowadzanie planowanych kosztów'@
               ,"exec('tr_nzl_infdstK','transport_wspolne')",,0,,,,'Y');
      _tab.win_btn(_win,'text=%1,align=begin'['Koszty'@],'menu:Y',,,0,,,'noempty');
      _tab.win_sel(_win);
      _tab.select()
   || FUN.info('Brak informacji o dyspozycjach transportowych.'@)
   ?};
   obj_del(_tab);
   exec('opentr_pop','open_tab')
?};
~~


\tr_nzl_infdstP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wprowadzenie danych o przesyłce
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1);
_uidnzl:=_tab.TR_NZL;
{? _uidnzl<>''
|| TR_NZL.prefix();
   {? TR_NZL.seek(_uidnzl) & exec('tr_nzl_infdst','transport_wspolne')
   || _tab.RODZ:=TR_NZL.TR_ZEWN().KOD;
      _tab.OPTR:=TR_NZL.TR_ZEWN().NAZ;
      _tab.TR_ZEWNN:=TR_NZL.TR_ZEWNN;
      _tab.TR_ZEWNT:=TR_NZL.TR_ZEWNT;
      _tab.TR_ZEWNU:=TR_NZL.TR_ZEWNU;
      _tab.put(1)
   ?}
?};
~~


\tr_nzl_disp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: sprawdza czy dla danego uid-a są dyspozycje transportowe
::----------------------------------------------------------------------------------------------------------------------
_uidref:={? cur_tab(1)=TR_PACK || cur_tab(1).TR_NZL().uidref() || cur_tab(1).TR_NZL ?};

_oki:=0;
{? _uidref<>''
|| _msk:=4-(8+(_uidref+16));
   exec('opentr_psh','open_tab');
   exec('opentr','open_tab',_msk);
   TR_NZL.prefix();
   {? TR_NZL.seek(_uidref)
   || _oki:=1;
      exec('pobTR_NZLpack','transport_paczki');
      exec('tr_nzl_display','transport_wspolne')
   ?};
   exec('opentr_pop','open_tab')
?};
{? ~_oki || FUN.info('Nie znaleziono dyspozycji.'@) ?};
~~


\czyTRANSPORT
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: sprawdza czy dla danego uid-a są dyspozycje transportowe
::   WE: [_a] - TR_ZL.DOK_REF domyślnie brak i nic nie robi
::       [_b] - TR_ZL.POZ_REF domyślnie brak
::       [_c] - rodzaj dyspozycji ''-domyślnie, 'Z'-załadunke, 'R'-rozładunek
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_uidref:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || '' ?};
_uidpoz:={? var_pres('_b')=type_of('') & (+_b)=48 || _b || '' ?};
_zal:={? var_pres('_c')=type_of('') & (';ZR'*_c)>1 || _c || '' ?};
_ind:={? _uidpoz<>'' || 'POZ_REF' || 'DOK_REF' ?};
_uid:={? _uidpoz<>'' || _uidpoz || _uidref ?};

{? _uid<>''
|| exec('opentr_psh','open_tab');
   exec('opentr','open_tab','____');
   TR_ZL.index(_ind);
   TR_ZL.prefix(_uid);
   {? TR_ZL.first()
   || {!
      |? _res:=TR_ZL.TR_NZL().WHERE<>'TR_NZL' & (_zal='' | TR_ZL.TR_NZL().RODZ=_zal);
         ~_res & TR_ZL.next()
      !}
   ?};
   exec('opentr_pop','open_tab')
?};
_res


\updateUID
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: aktualizuje wskazania w powiązanych zamówieniach po ich archiwizacji
::   WE: _a - wskazanie na stary uidref nagłówek zamówienia
::       _b - wskazanie na stary uidref pozycje zamówienia
::       _c - wskazanie na nowy uidref nagłówek zamówienia
::       _d - wskazanie na nowy uidref pozycje zamówienia
::   WY - 1-ok 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_dok_refO:=_a;
_dok_refN:=_c;
_poz_refO:=_b;
_poz_refN:=_d;

_maska_b:='';
_maska_e:='';

_Tab:=ref_tab(_dok_refN);

{? type_of(_Tab)<>type_of(~~) & (_Tab=ZK_N | _Tab=ZD_NAG | _Tab=ZDP_NAG)
|| _maska_b:=exec('FindAndGet','#table',_Tab,_dok_refN,,"TRARCH_B",'');
   _maska_e:=exec('FindAndGet','#table',_Tab,_dok_refN,,"TRARCH_E",'')
?};

_msk:=exec('tr_nzl_names','transport_zlec',_maska_b,_maska_e);
:: iterujemy po maskach tabeli dyspozycji transportowych
{? _msk.first()
|| exec('opentr_psh','open_tab');
   {!
   |? exec('opentr','open_tab',_msk.NAME+4);
::    zmiana dla nagłówka dyspozycji
      TR_NZL.index('DOK_REF');
      TR_NZL.prefix(_dok_refO);
      {? TR_NZL.first()
      || {!
         |? _ref:=TR_NZL.ref(); _next:=TR_NZL.next();
            TR_NZL.cntx_psh();
            TR_NZL.prefix();
            {? TR_NZL.seek(_ref)
            || TR_NZL.DOK_REF:=_dok_refN;
               TR_NZL.put(1)
            ?};
            TR_NZL.cntx_pop();
            _next
         !}
      ?};
::    zmiana dla pozycji dyspozycji
      TR_ZL.index('DOK_REF');
      TR_ZL.prefix(_dok_refO);
      {? TR_ZL.first()
      || {!
         |? _ref:=TR_ZL.ref(); _next:=TR_ZL.next();
            TR_ZL.cntx_psh();
            TR_ZL.prefix();
            {? TR_ZL.seek(_ref)
            || TR_ZL.DOK_REF:=_dok_refN;
               {? TR_ZL.POZ_REF=_poz_refO || TR_ZL.POZ_REF:=_poz_refN ?};
               TR_ZL.put(1)
            ?};
            TR_ZL.cntx_pop();
            _next
         !}
      ?};
      TR_ZL.index('POZ_REF');
      TR_ZL.prefix(_poz_refO);
      {? TR_ZL.first()
      || {!
         |? _ref:=TR_ZL.ref(); _next:=TR_ZL.next();
            TR_ZL.cntx_psh();
            TR_ZL.prefix();
            {? TR_ZL.seek(_ref)
            || TR_ZL.POZ_REF:=_poz_refN;
               TR_ZL.put(1)
            ?};
            TR_ZL.cntx_pop();
            _next
         !}
      ?};
      _msk.next()
   !};
   exec('opentr_pop','open_tab')
?};
obj_del(_msk);
_res


\bl_tr_zewn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wartość początkowa pola KH_MSC.TR_ZEWN
::----------------------------------------------------------------------------------------------------------------------
KH_MSC_Z.TR_ZEWN


\kh_msc_sel_tr_zewn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wyświetla miejsca dostaw dla danego rodzaju dostawy
::----------------------------------------------------------------------------------------------------------------------
{? TR_ZEWN.WYB_MSC>0
|| KH_MSC_Z.TR_ZEWN:=TR_ZEWN.ref();
   KH_MSC_Z.KH:=null();
   KH_MSC.f_clear();
   KH_MSC.index('TR_ZEWN');
   KH_MSC.prefix(KH_MSC_Z.TR_ZEWN);
   KH_MSC.win_sel('WER');
   KH_MSC.select()
|| KH_MSC_Z.TR_ZEWN:=null();
   FUN.info('Rodzaj dostawy nie obsługuję Miejsc Dostaw.'@)
?};
~~


\po_tr_zewn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: po redakcji pola TR_ZEWN
::----------------------------------------------------------------------------------------------------------------------
_Tab:=cur_tfld();
_win_red:=_Tab.win_edit('?');
{? _Tab.TR_ZEWN<>null()
|| {? (_Tab.TR_ZEWN().WYB_MSC=1 & _Tab.KH_MSC().TR_ZEWN<>_Tab.TR_ZEWN)
    | (~_Tab.TR_ZEWN().WYB_MSC & _Tab.KH_MSC().TR_ZEWN().WYB_MSC)
   || _Tab.KH_MSC:=null()
   ?}
|? _Tab.TR_ZEWN=null() & (_Tab.KH=null() | _Tab.KH_MSC().KH<>_Tab.KH)
|| _Tab.KH_MSC:=null()
?};
{? _Tab.TR_ZEWN<>null() & _Tab.TR_ZEWN().WYB_MSC=2
|| _Tab.efld_opt(_win_red,'mark=0',,'KH_MSC');
   _Tab.efld_opt(_win_red,'editable=1',,'KH_MSC')
|? _Tab.TR_ZEWN<>null() & _Tab.TR_ZEWN().WYB_MSC=1
|| _Tab.efld_opt(_win_red,'mark=1',,'KH_MSC');
   _Tab.efld_opt(_win_red,'editable=1',,'KH_MSC')
|| _Tab.efld_opt(_win_red,'mark=0',,'KH_MSC')
?};
{? _Tab=TR_NZL
|| {? TR_NZL.TR_ZEWN<>null() & TR_NZL.TR_ZEWN().COURIER<>''
   || {? TR_NZL.RODZ<>'R' | TR_NZL.KH=null() || TR_NZL.NOTR:=1 ?};
      {? TR_NZL.WHERE<>'ZGP' || TR_NZL.RODZ:='R' ?}
   || TR_NZL.NOTR:=0
   ?}
?};
exec('keyPACK','transport_zlec');
1


\tr_nzl_infdstK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wprowadzenie danych o przesyłce
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1);
_uidnzl:=_tab.TR_NZL;
{? _uidnzl<>''
|| TR_NZL.prefix();
   {? TR_NZL.seek(_uidnzl) || exec('koszty_pla','transport_koszt') ?}
?};
~~


\tr_zlm_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: dodanie informacji dodatkowej dla pozycji dyspozycji w magazynie
::   WY: 1-dodano 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
VAR_DEL.delete('__nowar');
__nowar:='';
TR_ZL.M().KTM;
TR_Z.TR_ZL:=TR_ZL.ref();
ATR.M_ATRSQL:='';
_atrmjs:=ATR.MJS;
ATR.MJS:='TR_ZLM';
EANX.MG:=TR_ZL.TR_NZL().MG;

_dk_c:={? TR_ZL.POZ_REF<>'' & ref_name(TR_ZL.POZ_REF)*'zdptp'
       || _zd_poz:=exec('FindAndGet','#table',ref_tab(TR_ZL.POZ_REF),TR_ZL.POZ_REF,,"ZD_POZ",'');
          {? _zd_poz<>''
          || exec('FindAndGet','#table',ref_tab(_zd_poz),_zd_poz,,"DK_C",null())
          || null()
          ?}
       |? TR_ZL.POZ_REF<>''
       || exec('FindAndGet','#table',ref_tab(TR_ZL.POZ_REF),TR_ZL.POZ_REF,,"DK_C",null())
       || null()
       ?};
:: ustawia blokadę edycji atrybutów
{? _dk_c<>null()
|| _dkczkp:=ATR.DKCZKP;
   ATR.DKCZKP:=_dk_c;
   {! _i:=1..10 |! __nowar+={? ($('ATR.DKCZKP().WAR'+form(_i,-2,,'99')))()<>'' || '-' || 'x' ?} !};
   ATR.DKCZKP:=_dkczkp
?};

TR_ZLM.blank();
TR_ZLM.DK_C:=_dk_c;
TR_ZLM.TR_ZL:=TR_Z.TR_ZL;
ATR.FLAG_ED:=(1+TR_ZL.TR_NZL().MG().TYP)='D' & ATR.CZY_ATR & ATR.EDIT;
ATR.M_ATR:=TR_ZL.M().M_ATR;
ATR.UZUP:=exec('wz_uzup','mat_atr',ATR.M_ATR);
ATR.FLAG:={? ATR.FLAG_ED & TR_ZL.M().M_ATR<>null() || 2 || 0 ?};
{? ATR.FLAG_ED || {? TR_ZL.M().M_ATR || ATR.FLAG_ED:=2 ?} ?};
{? TR_ZLM.DK_C<>null() & TR_ZLM.DK_C().M_ATR<>null()
|| TR_ZLM.DK_C().M_ATR().SYM;
   {! _i:=1..10
   |! ($('ATR.WAR'+form(_i,-2,,'99')))():=($('TR_ZLM.DK_C().WAR'+form(_i,-2,,'99')))()
   !}
|| {? ATR.M_ATR=null() || M_ATR.blank(0) ?};
   {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():='' !}
?};
ATR.SCEAN:=TR_ZLM.SCEAN;
{? EANX.MG().PAL='N'
|| TR_ZLM.win_edit('RED');
   exec('set_efld_tr_zlm','transport_wspolne');
   {? TR_ZLM.edit("exec('tr_zlm_chk','transport_wspolne',null())")
   || exec('uzupIDkod','magdok_palety',TR_ZLM);
      {? TR_ZLM.add(1) || _res:=1; exec('sumZIL_tr_zl','transport_wspolne',TR_ZLM.TR_ZL) ?}
   ?}
|| {? TR_ZL.DOK_REF<>'' & ref_name(TR_ZL.DOK_REF)=ZK_N.name()
   || _beerzkn:=BEER.ZK_N;
      exec('openz_psh','open_tab');
      ZK_N.prefix();
      {? ZK_N.seek(TR_ZL.DOK_REF)
      || BEER.ZK_N:=ZK_N.ref();
         {? exec('zmrezpal','zamsiw_palety',TR_NZL.ref())
         || PAL_ZAM.cntx_psh();
            PAL_ZAM.cntx_pop()
         ?}
      ?};
      exec('openz_pop','open_tab');
      BEER.ZK_N:=_beerzkn
   || FUN.info('Zamówienie przeniesiono do archiwum.\nOperacja niedostępna.'@)
   ?}
?};
TR_Z.TR_ZL:=null();
ATR.MJS:=_atrmjs;
VAR_DEL.delete('__nowar');
_res


\tr_zlm_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: dodanie informacji dodatkowej dla pozycji dyspozycji w magazynie - kontrola wypełnienia danych
::   WE: _a - ref TR_ZLM lub null() dla Dołącz
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_max:=exec('sumZIL_tr_zl','transport_wspolne',TR_Z.TR_ZL,1,_a);
{? TR_ZLM.IL<=0
|| FUN.info('Należy podać ilość większą od zera.'@);
   _res:='IL'
|? TR_ZLM.IL>_max
|| FUN.info('Podano zbyt dużą ilość.\nMaksymalna ilość potwierdzona: %1.'@[$_max]);
   TR_ZLM.IL:=_max;
   _res:='IL'
?};
_res


\sumZIL_tr_zl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: suma ilości zrealizowanych na podstawie informacji dodatkowych
::   WE: _a - ref TR_ZL
::       [_b] - 1-zwróć maksymalną ilość jaką można zrealizować 0(domyślnie), -1-usunięcie
::       [_c] - ref TR_ZLM dla ilości maksymalnej
::   WY: _b=0: 1
::       _b=1: maksymalna ilość jaką można jeszcze zrealizować
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_max:={? var_pres('_b')=type_of(0) || _b || 0 ?};
_zlm:={? var_pres('_c')=type_of(null()) || _c || null() ?};

TR_ZL.cntx_psh();
TR_ZLM.cntx_psh();
TR_ZL.prefix();
{? TR_ZL.seek(_a)
|| _ile:=TR_ZL.IL;
   _ili:=_ilt:=_ilm:=_ils:=_ilp:=0;
   _zm:=0;
   TR_ZLM.index('TR_ZL');
   TR_ZLM.prefix(TR_ZL.ref());
   {? TR_ZLM.first()
   || _zm:=~_max;
      {!
      |? {? ~_max | TR_ZLM.ref()<>_zlm || _ili+=TR_ZLM.IL ?};
         _ilp+={? TR_ZLM.PAL<>null() & TR_ZLM.IL=0 || exec('ILmatPAL','magdok_palety',TR_ZLM.PAL,TR_ZL.M().KTM) || 0 ?};
         _ilt+=TR_ZLM.IL_T;
         _ilm+=TR_ZLM.IL_M3;
         _ils+=TR_ZLM.IL_SZT;
         TR_ZLM.next()
      !}
   ?};
   {? _max<=0
   || TR_ZL.ZIL:=_ili+_ilp;
      TR_ZL.ZIL_T:=_ilt;
      TR_ZL.ZIL_M3:=_ilm;
      TR_ZL.ZIL_SZT:=_ils;
      TR_ZL.REAL:={? TR_ZL.ZIL>0 || 'T' || 'N' ?};
      TR_ZL.put(1)
   |? _max
   || _res:=_ile-_ili
   ?}
?};
TR_ZL.cntx_pop();
TR_ZLM.cntx_pop();
_res


\tr_zlm_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: usunięcie informacji dodatkowej dla pozycji dyspozycji w magazynie
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć informacje o realizacji dyspozycji?'@)
|| _tr_zl:=TR_ZLM.TR_ZL;
   {? TR_ZLM.MANPAL>0 & TR_ZLM.IDPAL<>''
   || TR_ZLM.cntx_psh();
      exec('openz_psh','open_tab');
      ZK_N.prefix();
      {? ZK_N.seek(TR_ZLM.TR_ZL().DOK_REF)
      || exec('akt_palz','magdok_palety',TR_ZLM.PAL,0,ZK_N.ref(),TR_ZLM.TR_ZL().TR_NZL().uidref())
      ?};
      exec('openz_pop','open_tab');
      TR_ZLM.cntx_pop()
   || TR_ZLM.del()
   ?};
   exec('sumZIL_tr_zl','transport_wspolne',_tr_zl,-1)
?};
~~


\tr_zlm_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: modyfikacja informacji dodatkowej dla pozycji dyspozycji w magazynie
::   WY: 1-dodano 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
VAR_DEL.delete('__nowar');
__nowar:='';
TR_ZL.M().KTM;
TR_Z.TR_ZL:=TR_ZL.ref();
ATR.M_ATRSQL:='';
_atrmjs:=ATR.MJS;
ATR.MJS:='TR_ZLM';
EANX.MG:=TR_ZL.TR_NZL().MG;

_dk_c:={? TR_ZL.POZ_REF<>'' & ref_name(TR_ZL.POZ_REF)*'zdptp'
       || _zd_poz:=exec('FindAndGet','#table',ref_tab(TR_ZL.POZ_REF),TR_ZL.POZ_REF,,"ZD_POZ",'');
          {? _zd_poz<>''
          || exec('FindAndGet','#table',ref_tab(_zd_poz),_zd_poz,,"DK_C",null())
          || null()
          ?}
       |? TR_ZL.POZ_REF<>''
       || exec('FindAndGet','#table',ref_tab(TR_ZL.POZ_REF),TR_ZL.POZ_REF,,"DK_C",null())
       || null()
       ?};
:: ustawia blokadę edycji atrybutów
{? _dk_c<>null()
|| _dkczkp:=ATR.DKCZKP;
   ATR.DKCZKP:=_dk_c;
   {! _i:=1..10 |! __nowar+={? ($('ATR.DKCZKP().WAR'+form(_i,-2,,'99')))()<>'' || '-' || 'x' ?} !};
   ATR.DKCZKP:=_dkczkp
?};

ATR.FLAG_ED:=(1+TR_ZL.TR_NZL().MG().TYP)='D' & ATR.CZY_ATR & ATR.EDIT;
ATR.M_ATR:=TR_ZL.M().M_ATR;
ATR.UZUP:=exec('wz_uzup','mat_atr',ATR.M_ATR);
ATR.FLAG:={? ATR.FLAG_ED & TR_ZL.M().M_ATR<>null() || 2 || 0 ?};
{? ATR.FLAG_ED || {? TR_ZL.M().M_ATR || ATR.FLAG_ED:=2 ?} ?};
{? TR_ZLM.DK_C<>null() & TR_ZLM.DK_C().M_ATR<>null()
|| TR_ZLM.DK_C().M_ATR().SYM;
   {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():=($('TR_ZLM.DK_C().WAR'+form(_i,-2,,'99')))() !}
|| {? ATR.M_ATR=null() || M_ATR.blank(0) ?};
   {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():='' !}
?};
ATR.SCEAN:=TR_ZLM.SCEAN;

{? EANX.MG().PAL='N'
|| TR_ZLM.win_edit('RED');
   exec('set_efld_tr_zlm','transport_wspolne');
   {? TR_ZLM.edit("exec('tr_zlm_chk','transport_wspolne',TR_ZLM.ref())")
   || exec('uzupIDkod','magdok_palety',TR_ZLM);
      {? TR_ZLM.put(1) || _res:=1; exec('sumZIL_tr_zl','transport_wspolne',TR_ZLM.TR_ZL) ?}
   ?}
|| {? TR_ZL.DOK_REF<>'' & ref_name(TR_ZL.DOK_REF)=ZK_N.name()
   || _beerzkn:=BEER.ZK_N;
      exec('openz_psh','open_tab');
      ZK_N.prefix();
      {? ZK_N.seek(TR_ZL.DOK_REF)
      || BEER.ZK_N:=ZK_N.ref();
         {? exec('zmrezpal','zamsiw_palety',TR_NZL.ref())
         || PAL_ZAM.cntx_psh();
            PAL_ZAM.cntx_pop()
         ?}
      ?};
      exec('openz_pop','open_tab');
      BEER.ZK_N:=_beerzkn
   || FUN.info('Zamówienie przeniesiono do archiwum.\nOperacja niedostępna.'@)
   ?}
?};
TR_Z.TR_ZL:=null();
ATR.MJS:=_atrmjs;
VAR_DEL.delete('__nowar');
_res


\pw_wymzlm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przed wyświetleniem dla pól TR_ZLM
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
_tmg:=1+TR_ZLM.TR_ZL().TR_NZL().MG().TYP;
_wym:=TR_ZLM.TR_ZL().TR_NZL().MG().SL='T';
_pal:=TR_ZLM.TR_ZL().TR_NZL().MG().PAL='T';
''


\pr_wymzlm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przed redakcją dla pól TR_ZLM
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_fld:=cur_afld();
_tmg:=1+TR_ZLM.TR_ZL().TR_NZL().MG().TYP;
_wym:=TR_ZLM.TR_ZL().TR_NZL().MG().SL='T';
_pal:=TR_ZLM.TR_ZL().TR_NZL().MG().PAL='T';

_res


\po_wymzlm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: po redakzji dla pól TR_ZLM
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_fld:=cur_afld();
_tmg:=1+TR_ZLM.TR_ZL().TR_NZL().MG().TYP;
_wym:=TR_ZLM.TR_ZL().TR_NZL().MG().SL='T';
_pal:=TR_ZLM.TR_ZL().TR_NZL().MG().PAL='T';

_res


\addTR_ZLM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: dodanie zapisu z mobilnych do TR_ZLM
::   WE: _a - ref SQL TR_ZL
::       _b - ilość
::       _c - lokalizacja
::       _d - termin ważności
::       _e - paleta
::       _f - identyfikator dostawy
::       [_g] - rozpakowanie z mobilnych domyślnie 0
::       [_h] - cecha dostawy, domyślnie brak
::   WY: 1-dodano 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_rozpal:={? var_pres('_g')=type_of(0) || _g || 0 ?};
_dk_c:={? var_pres('_h')=type_of(null()) || _h || 0 ?};

TR_ZL.cntx_psh();
TR_ZL.prefix();
{? TR_ZL.seek(_a)
|| _tr_zl:=TR_ZL.ref();
   _kompl:=TR_ZL.TR_NZL().RODZ='Z';
   TR_ZLM.prefix();
   TR_ZLM.blank();
   TR_ZLM.TR_ZL:=_tr_zl;
   TR_ZLM.IL:=_b;
   TR_ZLM.LOK:=_c;
   TR_ZLM.TW:=_d;
   TR_ZLM.PAL:=_e;
   TR_ZLM.SCEAN:=_f;
:: uzupełnienie na podstawie kodu identyfikacyjnego
   {? TR_ZLM.SCEAN<>'' & TR_ZL.M().IDMOB='A'
   || _rsql:=exec('FindInSet','#table','MKODK','KK',TR_ZLM.SCEAN,TR_ZLM.SCEAN,"MKODK.RSQL",,,'');
      TR_ZLM.DK_C:=exec('FindAndGet','#table',DK_C,_rsql,,,null())
   |? TR_ZLM.SCEAN<>'' & TR_ZL.M().IDMOB='D'
   || _rsql:=exec('FindInSet','#table','MKODK','KK',TR_ZLM.SCEAN,TR_ZLM.SCEAN,"MKODK.RSQL",,,'');
      {? 5+_rsql='dokma'
      || TR_ZLM.DK_C:=exec('FindAndGet','#table',DK,_rsql,,"DK_C",null());
         {? TR_ZL.M().SETW='D' || TR_ZLM.TW:=exec('FindAndGet','#table',DK,_rsql,,"TW",null()) ?}
      ?}
   ?};
   {? _dk_c<>null() || TR_ZLM.DK_C:=_dk_c ?};
   {? _rozpal || TR_ZLM.MANPAL:=-1 ?};
   {? 0 & TR_ZLM.PAL<>null() & _kompl
   || PAL_POZ.cntx_psh();
      {? TR_ZLM.PAL().AKT='N'
      || PAL_POZ.use('palet'+form(TR_ZLM.PAL().AR-2000,-2,0,'99'))
      || PAL_POZ.use('paletyp')
      ?};
      PAL_POZ.index('PAL');
      PAL_POZ.prefix(TR_ZLM.PAL);
      {? PAL_POZ.first()
      || {!
         |? TR_ZLM.IL:=PAL_POZ.ILP;
            TR_ZLM.SCEAN:=PAL_POZ.SCEAN;
            TR_ZLM.DK_C:=PAL_POZ.DK_C;
            TR_ZLM.TW:=PAL_POZ.TW;
            exec('uzupIDkod','magdok_palety',TR_ZLM);
            {? TR_ZLM.add(1) || _res:=1 ?};
            PAL_POZ.next()
         !};
         {? _res ||  exec('sumZIL_tr_zl','transport_wspolne',_tr_zl) ?}
      ?};
      PAL_POZ.cntx_pop()
   || exec('uzupIDkod','magdok_palety',TR_ZLM);
      {? TR_ZLM.add(1) || _res:=1; exec('sumZIL_tr_zl','transport_wspolne',_tr_zl) ?}
   ?}
?};
TR_ZL.cntx_pop();
_res


\set_efld_tr_zlm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: ustawia wygaszenie pól dla okienka redakcji TR_ZLM
::----------------------------------------------------------------------------------------------------------------------
_tmg:=1+TR_ZL.TR_NZL().MG().TYP;
_wym:=TR_ZL.TR_NZL().MG().SL='T';
_pal:=TR_ZL.TR_NZL().MG().PAL='T';
_idmob:=(';DAPZ'*TR_ZL.M().IDMOB)>1;

{? _tmg<>'D'
|| TR_ZLM.efld_opt('RED','enable=0',,'DK_C');
   TR_ZLM.efld_opt('RED','enable=0',,'SCEAN')
|| TR_ZLM.efld_opt('RED','enable=1',,'DK_C');
   {? ~_idmob
   || TR_ZLM.efld_opt('RED','enable=0',,'SCEAN')
   || TR_ZLM.efld_opt('RED','enable=1',,'SCEAN')
   ?}
?};

{? ~_wym
|| TR_ZLM.efld_opt('RED','enable=0',,'LOK');
   TR_ZLM.efld_opt('RED','enable=0',,'TW')
|| TR_ZLM.efld_opt('RED','enable=1',,'LOK');
   TR_ZLM.efld_opt('RED','enable=1',,'TW')
?};

{? ~_pal
|| TR_ZLM.efld_opt('RED','enable=0',,'PAL')
|| TR_ZLM.efld_opt('RED','enable=1',,'PAL')
?};
~~


\zknWGtr_nzl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: tabela zamówień wg pozycji dyspozycji w magazynie
::   WE: _a - TR_NZL.ref
::   WY: tabela zamówień
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1,'REF','INTEGER','');
TR_NZL.cntx_psh();
TR_ZL.cntx_psh();
TR_NZL.prefix();
{? TR_NZL.seek(_a)
|| TR_ZL.index('POZ');
   TR_ZL.prefix(TR_NZL.ref());
   {? TR_ZL.first()
   || {!
      |? _ref:=exec('FindAndGet','#table',ZK_N,TR_ZL.DOK_REF,,"#ref()",0);
         {? _ref<>0 & (_tab.clear(); _tab.prefix(_ref); ~_tab.first())
         || _tab.blank();
            _tab.REF:=_ref;
            _tab.add(1)
         ?};
         TR_ZL.next()
      !}
   ?}
?};
TR_NZL.cntx_pop();
TR_ZL.cntx_pop();
_tab


\trzlm_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przed wyswietl okna WER tabeli TR_ZLM
::----------------------------------------------------------------------------------------------------------------------
TR_ZLM.win_edit('RED');
_edit:=TR_ZLM.win_edit('?');
_sel:=TR_ZLM.win_sel('?');
_atrmjs:=ATR.MJS;
{? (1+TR_ZLM.TR_ZL().TR_NZL().MG().TYP)='D'
|| ATR.MJS:='TR_ZLM';
   ATR.M_ATR:=TR_ZLM.TR_ZL().M().M_ATR
|| ATR.MJS:='M_ATR';
   M_ATR.blank(0);
   ATR.M_ATR:=null()
?};
{? exec('czytadkc','mat_atr',TR_ZLM.DK_C,TR_ZLM.RDKC)
|| _ndit:='RED';
   TR_ZLM.win_edit(_ndit)
?};
exec('set_efld_opt','mat_atr',ATR.MJS);

TR_ZLM.display();

TR_ZLM.win_edit(_edit);
TR_ZLM.win_sel(_sel);

ATR.MJS:=_atrmjs;
~~


\pr_tr_zewn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przed redakcją pola TR_ZEWN
::----------------------------------------------------------------------------------------------------------------------
TR_NZL.WLASNY<>'T'


\pr_pojazd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: przed redakcją pola POJAZD
::----------------------------------------------------------------------------------------------------------------------
exec('pojazdy_be','transport');
TR_NZL.WLASNY='T'


\po_wlasny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: po redakcji pola WLASNY
::----------------------------------------------------------------------------------------------------------------------
{? TR_NZL.WLASNY='T'
|| TR_NZL.TR_ZEWN:=null();
   {? TR_NZL.KH_MSC().TR_ZEWN<>null() || TR_NZL.KH_MSC:=null() ?}
|| TR_NZL.POJAZD:=null()
?};
{? TR_NZL.TR_ZEWN<>null() & TR_NZL.TR_ZEWN().COURIER<>''
|| {? TR_NZL.RODZ<>'R' || TR_NZL.NOTR:=1 ?};
   TR_NZL.RODZ:='R'
|| TR_NZL.NOTR:=0
?};
{? TR_NZL.RODZ='R' || exec('podtrn_hkh','transport_wspolne') ?};
exec('keyPACK','transport_zlec');
1


\trnzl_kompletuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wysłanie na urządzenie mobilne
::----------------------------------------------------------------------------------------------------------------------
_zam_uid:=exec('FindInSet','#table','TR_ZL','POZ',TR_NZL.ref(),,"@.TR_ZL.DOK_REF",'');
{? _zam_uid<>'' & _zam_uid*'zknag'
|| {? exec('chk_role','#b__box',OPERATOR.USER,'LMO_MOB_DKZK')
   || _zam_n:=exec('FindAndGet','#table',ZK_N,_zam_uid,,,null());
      {? _zam_n<>null()
      || _ctrlmags:=exec('ctrlMG_init','transport_wspolne',TR_NZL.ref());
         {? _ctrlmags.first() & _ctrlmags.ERR
         || FUN.info('Magazyn dla dyspozycji w magazynie jest niezgodny z magazynem na pozycji zamówienia %1.\n'
             'Nie można wysłać dyspozycji na urządzenie.'@[exec('FindAndGet','#table',ZK_N,_ctrlmags.ZK_N,,"SYM",'')])
         || _params:=exec('mp_run_a','#b__box');
            _params.ACT_UID:='LMO_MOB_DKZK';
            _params.UIDREF:=_zam_uid;
            _params.AKCJA:='Dyspozycja do wysyłki';
            _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
            exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZK_N',_zam_n);
            exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TR_NZL',TR_NZL.ref());
            exec('mp_run','#b__box',_params);
            exec('ctrlMG_done','transport_wspolne',_ctrlmags)
         ?};
         obj_del(_ctrlmags)
      || FUN.info('Nie znaleziono zamówienia dla dyspozycji.\nWysłanie niemożliwe.'@)
      ?}
   || FUN.info('Brak uprawnień do czynności kompletacji wysyłki.\nWysłanie niemożliwe.'@)
   ?}
|? _zam_uid<>'' & (_zam_uid*'zdnag' | _zam_uid*'zdptn')
|| {? exec('chk_role','#b__box',OPERATOR.USER,'LMO_MOB_DMAG')
   || exec('tr_nzl2EANN','magazyn_mob')
   || FUN.info('Brak uprawnień do czynności potwierdzenia dyspozycji.\nWysłanie niemożliwe.'@)
   ?}
|| FUN.info('Nie znaleziono zamówienia dla dyspozycji.\nWysłanie niemożliwe.'@)
?};
~~


\trnzle_druk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: Transport - Drukuj / Utwórz PDF
::   WE: [_a] - utworz pdf 0-nie 1-tak
::       [_b] - nazwa akcji
::       [_c] - wzór maski wydruku
::---------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _czy_pdf:=_a
|| _czy_pdf:=0
?};
{? var_pres('_b')=type_of('')
|| _akcja:=_b
|| {? _czy_pdf
   || _a:='Area Utwórz PDF'
   || _a:='Area Drukuj'
   ?}
?};
_uidref:=null();
{? cur_tab()=TR_NZL
|| _tr_nag:=TR_NZL.TR_NAG;
   _tr_nzl:=TR_NZL.ref();
   _uidref:=TR_NZL.uidref()
|| {? TR_NAG.ref()=null || TR_NAG.first() ?};
   _tr_nag:=TR_NAG.ref();
   _uidref:=TR_NAG.uidref();
   _tr_nzl:=null()
?};

TR_NAG.cntx_psh();
TR_NAG.prefix();
{? _tr_nzl<>null() | (_tr_nag<>null() & TR_NAG.seek(_tr_nag))
|| _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='LTR_ZLE_WDST';
   _params.UIDREF:=_uidref;
   _params.AKCJA:=_akcja;
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TR_NAG',TR_NAG.ref());
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TR_NZL',_tr_nzl);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'CZY_PDF',{? _czy_pdf || 'TAK' || 'NIE' ?});
   {? var_pres('_c')=type_of('')
   || exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'PRN_MSK',_c)
   ?};
   exec('mp_run','#b__box',_params)
|| FUN.info('Dla pozycji nie można dokonać wydruku, ponieważ nie została skierowana do transportu.'@)
?};
TR_NAG.cntx_pop();
~~


\trnzle_pdf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: Transport - Utwórz PDF
::----------------------------------------------------------------------------------------------------------------------
exec('trnzle_druk','transport_wspolne',1,'Area Utwórz PDF')


\trnzle_prn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: Transport - Utwórz PDF
::----------------------------------------------------------------------------------------------------------------------
exec('trnzle_druk','transport_wspolne',0,'Area Drukuj')


\trnzlz_prn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: Transport - Utwórz PDF
::   WE: [_a] - akcja
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('')
|| _a:='Area Drukuj'
?};
_msk:='LTR_ZLE_DYSW_*';

exec('trnzle_druk','transport_wspolne',0,_a,_msk)


\ilr2MG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: aktualizacja ilości zrealizowanej na pozycji dokumentu w magazynie
::   WE: _a - grupa
::       _b - rodzaj
::       _c - magazyn
::       _d - POZ_REF
::       _e - ilość zrealizowana
::       _f - 0(domyślnie) 1-dyspozycja w magazynie
::       _g - ilość sztuk
::       _h - tonaż
::       _i - objętość
::       _j - ilość opakowań
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
{? var_pres('_f')=type_of(0) & _f
|| _where:=exec('FindAndGet','#table',TR_NZL,_a,,"WHERE",'')
|| _where:='TR_NZL'
?};
{? (';ZD_NAG;ZDP_NAG;TR_NZL;'*_where)>1
|| TR_NZL.cntx_psh();
   TR_ZL.cntx_psh();
   TR_ZL.index('POW_POZ');
   TR_ZL.prefix(_where,_a,_b,_c,_d);
   {? TR_ZL.first()
   || TR_ZL.ZIL:=_e;
      TR_ZL.ZIL_SZT:=_g;
      TR_ZL.ZIL_T:=_h;
      TR_ZL.ZIL_M3:=_i;
      TR_ZL.ZIL_OP:=_j;
      TR_ZL.put(1)
   ?};
   TR_NZL.cntx_pop();
   TR_ZL.cntx_pop()
?};
_res


\oblkodid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: formula do przypisania lub zamiany kodu ID
::----------------------------------------------------------------------------------------------------------------------
{? TR_ZLM.TR_ZL().M<>null
|| {? TR_ZLM.TR_ZL().M().IDMOB='N'
   || FUN.info('Indeks materiałowy bez identyfikacji dostaw.\nPrzypisanie kodu niemożliwe.'@)
   |? TR_ZLM.TR_ZL().M().IDMOB='A' & TR_ZLM.DK_C<>null & TR_ZLM.SCEAN<>''
   || FUN.info('Podano Cechę dostawy z kodem identyfikacyjnym.\nZmiana kodu niemożliwa.'@)
   || FUN.info('Jeżeli dyspozycja została przesłana z operacji wykonanej na urządzeniu mobilnym\n'
               'przypisanie innego kodu identyfikacyjnego skutkuję usunięciem poprzedniego.\n'
               'Należy ponownie okleić daną dostawę w magazynie nowymi kodami identyfikacyjnymi.'@);
      TR_ZLM.SCEAN:=exec('addscean','kody_kresk',5)
   ?}
|| FUN.info('Nie podano indeksu materiałowego.\nPrzypisanie kodu niemożliwe.'@)
?};
''


\trnzle_druk_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: Grupowy wydruk dyspozycji transportowych
::   WE: _a - utworz pdf 0-nie 1-tak
::       _b - UID czynności
::       _c - nazwa akcji
::       [_d] - maska wydruku
::---------------------------------------------------------------------------------------------------------------------
_czy_pdf:=_a;
_act_uid:=_b;
_akcja:=_c;
_msk:={? var_pres('_d')=type_of('') || _d || '' ?};

{? TR_NAG.ref=null || TR_NAG.first() ?};

_czysc:="VAR_DEL.delete('__GRP_DR')";
_czysc();
:: __GRP_DR - srodowisko grupowego drukowania
__GRP_DR:=obj_new('GR','SEL','SIZE','FIRST','ESC','WZ','PDF','SHOW_PDF','DR_N_AKC','JEZYK','JEZYK_KH','DR_N_CAN'
                 ,'NO_SAVE');
:: __GRP_DR.SEL, _Sel - wybrane dokumenty
__GRP_DR.SEL:=_Sel:=TR_NZL.sel_aget();

{? _Sel.first()
|| __GRP_DR.GR:=1
|| __GRP_DR.GR:=0;
   _Sel.REF:=#TR_NZL.ref(); _Sel.CRC:=TR_NZL.crc(); _Sel.add()
?};
__GRP_DR.SIZE:=_Sel.size();
:: __GRP_DR.FIRST - drukowanie pierwszego dokumentu sposrod zaznaczonych 0-nie 1-tak
__GRP_DR.FIRST:=1;
:: __GRP_DR.SHOW_PDF - wyswietlac utworzone pdf 0-nie 1-tak
__GRP_DR.SHOW_PDF:=0;
:: __GRP_DR.PDF - utworz pdf 0-nie 1-tak
__GRP_DR.PDF:=_czy_pdf;
:: __GRP_DR.WZ - wybrany wzorzec wydruku
__GRP_DR.WZ:=_msk;
:: __GRP_DR.ESC - zrezygnowano z wypelnienia parametrow wydruku 0-nie 1-tak
__GRP_DR.ESC:=0;
:: __GRP_DR.NO_SAVE - zrezygnowano z ponownego zapisu w DOKUM-ach 0-nie 1-tak
__GRP_DR.NO_SAVE:=0;
:: _ok - stan dzialania funkcji 0-nie ok 1-ok
_ok:=1;

TR_NAG.cntx_psh();

{? _ok=1
|| {? __GRP_DR.GR
   || __GRP_DR.SHOW_PDF:={? __GRP_DR.PDF || FUN.ask('Wyświetlić wygenerowane dokumenty?'@) ?}
   ?};
   {? __GRP_DR.DR_N_AKC=-1 || __GRP_DR.DR_N_AKC:=0 ?}
?};
:: Drukowanie
{? _ok
||
   _loop:=_Sel.first();
   {!
   |? _loop
   |!
      {? TR_NZL.seek(_Sel.REF,)
      ||
         _params:=exec('mp_run_a','#b__box');
         _params.ACT_UID:=_act_uid;
         _params.UIDREF:=TR_NAG.uidref();
         _params.AKCJA:=_akcja;
         _params.GRUPA:={? __GRP_DR.GR || 'T' || 'N' ?};
         _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
         exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TR_NAG',TR_NAG.ref());
         exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'CZY_PDF',{? _czy_pdf || 'TAK' || 'NIE' ?});

         exec('mp_run','#b__box',_params);

         obj_del(_params);
         __GRP_DR.FIRST:=0
      ?};
      _loop:=__GRP_DR.ESC=0 & {? _czy_pdf || _Sel.next() || 0 ?}
   !}
?};
TR_NZL.sel_adel();
TR_NAG.cntx_pop();
_czysc();
0


\trnzle_prn_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: Transport - Drukuj grupowe
::----------------------------------------------------------------------------------------------------------------------
:exec('trnzle_druk_gr','transport_wspolne',0,'LTR_ZLE_WDST','Area Drukuj','ltr_tra_dysp_*')
exec('trnzle_druk_gr','transport_wspolne',0,'LTR_ZLE_WDST','Area Drukuj')


\trnzle_pdf_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: Transport - Utwórz PDF grupowe
::----------------------------------------------------------------------------------------------------------------------
:exec('trnzle_druk_gr','transport_wspolne',1,'LTR_ZLE_WDST','Area Utwórz PDF','ltr_tra_dysp_*')
exec('trnzle_druk_gr','transport_wspolne',1,'LTR_ZLE_WDST','Area Utwórz PDF')


\realWGdysp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: formula do sprawdzenia czy aby nie należy realizować wg dyspozycji w magazynie
::   WE: _a - uidref zamówienia/potwierdzenia
::       [_b] - 0(domyślnie)-wybór do realizacji i komunikaty, 1-tryb kontroli czy można realizować
::   WY: 1-realizuj normalnie 0-zrezygnowano -1-realizacja wg dyspozycji
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_tryb:={? var_pres('_b')=type_of(0) || _b || 0 ?};
TR_NZL.cntx_psh();
TR_ZL.cntx_psh();
TR_NZL.prefix();
TR_ZL.index('DOK_REA');
TR_ZL.prefix('Z','TR_NZL',_a);
{? TR_ZL.first()
|| _odp:=-1;
   _add:=0;
   _tab:=tab_tmp(3,'TR_NZL','STRING[48]',''
          ,'DT','DATE',''
          ,'TM','TIME',''
          ,'RODZ','STRING[20]',''
          ,'KH','STRING[60]',''
          ,'SYM','STRING[20]',''
          ,'POJAZD','STRING[20]',''
          ,'MAG','STRING[10]',''
          ,'MIASTO','STRING[50]',''
          ,'UL','STRING[150]',''
          ,'NUMER','STRING[50]','');
   {!
   |? {? {? TR_ZL.TR_NZL().DOK_REA='' || {? _tryb || _tryb:=2 || 1 ?} || 0 ?} & TR_ZL.TR_NZL().TR_NAG<>null()
      || _add+=1;
         {? _tryb
         || _tryb:=2
         || _uidnzl:=exec('FindAndGet','#table',TR_NZL,TR_ZL.TR_NZL,,"uidref()",'');
            _tab.clear();
            {? ~_tab.find_key(_uidnzl)
            || _tab.blank();
               _tab.TR_NZL:=_uidnzl;
               _tab.SYM:=TR_ZL.TR_NZL().SYM;
               _tab.MAG:=TR_ZL.TR_NZL().MG().SYM;
               _tab.RODZ:=TR_NZL.RODZ;
               _tab.DT:=TR_ZL.TR_NZL().TR_NAG().WYJ_D;
               _tab.TM:=TR_ZL.TR_NZL().TR_NAG().WYJ_T;
               _tab.POJAZD:=TR_ZL.TR_NZL().TR_NAG().POJAZD().NRREJ;
               _tab.KH:=TR_ZL.TR_NZL().KH().NAZ_P;
               _tab.MIASTO:=TR_ZL.TR_NZL().MIASTO;
               _tab.UL:=TR_ZL.TR_NZL().UL;
               _tab.NUMER:=TR_ZL.TR_NZL().NUMER;
               _tab.add(1)
            ?}
         ?}
      ?};
      _tryb<>2 & TR_ZL.next()
   !};
   {? _tab.first() & _tryb<>2
    & (_odp:=FUN.ask('Wygenerowano dyspozycje w magazynie (dla transportu).\nRealizacja wg dyspozycji?'@); _odp)
   || _win:=_tab.mk_sel('Powiązane dyspozycje w magazynie'@,,,'powdsp_mag',,,,,'U',,,,,,'auto');
      _tab.win_fld(_win,,'RODZ',,,9,,0,'Załadunek'@,,,2,,"\'Z\'","\'R\'","\'\'");
      _tab.win_fld(_win,,'MAG',,,10,,0,'Magazyn'@);
      _tab.win_fld(_win,,'DT',,,-10,,0,'Data transportu'@);
      _tab.win_fld(_win,,'TM',,,8,,0,'Godzina'@);
      _tab.win_fld(_win,,'POJAZD',,,8,,0,'Pojazd'@);
      _tab.win_fld(_win,,'SYM',,,14,,0,'Symbol dyspozycji'@);
      _tab.win_fld(_win,,'KH',,,20,,0,'Kontrahent'@);
      _tab.win_fld(_win,,'MIASTO',,,15,,0,'Miasto'@);
      _tab.win_fld(_win,,'UL',,,20,,0,'Ulica'@);
      _tab.win_fld(_win,,'NUMER',,,10,,0,'Numer'@);
      _tab.win_act(_win,0,'Wyświetl',,,,"exec('tr_nzl_disp','transport_wspolne')",,0);
      _tab.win_act(_win,,'Formuła','&Wybierz'@@,,'Wybór dyspozycji w magazynie'@,"sel_exit()",,1,,,,'W');
      _tab.win_btn(_win,'text=%1,align=begin'['Wybierz'@],'menu:W',,,0,,,'noempty');
      _tab.win_sel(_win);
      {? _tab.select()
      || _res:=-1;
         TR_NZL.prefix();
         {? TR_NZL.seek(_tab.TR_NZL) || exec('realDYSPmg','magdok_wspolne') ?}
      || _res:=0
      ?}
   |? _add
   || {? _odp=-1 & _tryb<>2
      || FUN.info('Wygenerowano dyspozycje w magazynie (dla transportu).\n\n'
                  'Ponieważ brak dla nich transportu.\nRealizacja zamówienia niemożliwa.'@)
      ?};
      _res:=0
   ?};
   obj_del(_tab)
?};
TR_NZL.cntx_pop();
TR_ZL.cntx_pop();
_res


\ctrlMG_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Zwraca tabelę magazynów dla pozycji zamówień - aktywacja
::   WE: _a - TR_NZL.ref()
::   WY: tabela z magazynami do poprawy
::----------------------------------------------------------------------------------------------------------------------
_res:=tab_tmp(1,'ZK_P','STRING[48]',''
       ,'MGOLD','STRING[16]',''
       ,'MGNEW','STRING[16]',''
       ,'ERR','INTEGER',''
       ,'ZK_N','STRING[48]','');
_err:=0;
TR_ZL.cntx_psh();
TR_ZL.index('POZ');
{? TR_ZL.first()
|| {!
   |? {? TR_ZL.POZ_REF<>'' & TR_ZL.POZ_REF*'zkpoz'
      || _mgnew:=$TR_ZL.MG;
         _mgold:=exec('FindAndGet','#table',ZK_P,TR_ZL.POZ_REF,,"{? RMAG=null() || 'xxx' || $RMAG ?}",'');
         {? _mgold<>'' & _mgnew<>_mgold
         || {? _mgold<>'xxx' || _err:=1 ?};
            _res.clear();
            _res.prefix(TR_ZL.POZ_REF);
            {? ~_res.first()
            || _res.blank();
               _res.ZK_P:=TR_ZL.POZ_REF;
               _res.ZK_N:=TR_ZL.DOK_REF;
               _res.MGOLD:=_mgold;
               _res.MGNEW:=_mgnew;
               _res.ERR:=_err;
               _res.add(1)
            ?}
         ?}
      ?};
      ~_err & TR_ZL.next()
   !}
?};
TR_ZL.cntx_pop();
{? ~_err & (_res.prefix(); _res.first())
|| VAR_DEL.delete('__magi');
   {!
   |? __magi:=exec('FindAndGet','#table',MG,_res.MGNEW,,"ref()",null());
      {? __magi<>null() || exec('FindAndGet','#table',ZK_P,_res.ZK_P,,"RMAG:=MG:=__magi;put(1)",0) ?};
      _res.next()
   !};
   VAR_DEL.delete('__magi')
?};
_res


\ctrlMG_done
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Zwraca tabelę magazynów dla pozycji zamówień - reaktywacja
::   WE: _a - tabela
::----------------------------------------------------------------------------------------------------------------------
_res:=_a;
{? (_res.prefix(); _res.first())
|| VAR_DEL.delete('__magi');
   {!
   |? {? ~_res.ERR
      || __magi:={? _res.MGOLD='xxx' || null() || exec('FindAndGet','#table',MG,_res.MGOLD,,"ref()",null()) ?};
         exec('FindAndGet','#table',ZK_P,_res.ZK_P,,"RMAG:=MG:=__magi;put(1)",0);
         _res.next()
      ?}
   !};
   VAR_DEL.delete('__magi')
?};
~~


\po_trn_hkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Podpowiedź ostatnich danych związanych z transportem
::----------------------------------------------------------------------------------------------------------------------
{? ZK_N.KH<>null() & ZK_N.TRN='T'
|| _tr_zewn:=ZK_N.TR_ZEWN;
   _kh_odb:=ZK_N.ODB;
   _kh_msc:=ZK_N.KH_MSC;

   TR_HKH.index('LAST');
   TR_HKH.prefix(ZK_N.KH);
   {? TR_HKH.first()
   || _oki:=0;
      {!
      |? {? _kh_odb<>null() & TR_HKH.KH_ODB=_kh_odb & _tr_zewn=null() & _kh_msc=null()
         || ZK_N.KH_MSC:=TR_HKH.KH_MSC;
            ZK_N.TR_ZEWN:=TR_HKH.TR_ZEWN;
            _oki:=1
         |? _kh_odb<>null() & TR_HKH.KH_ODB=_kh_odb & _tr_zewn<>null() & TR_HKH.TR_ZEWN=_tr_zewn & _kh_msc=null()
         || ZK_N.KH_MSC:=TR_HKH.KH_MSC;
            _oki:=1
         |? _kh_odb=null() & TR_HKH.KH_ODB=_kh_odb & _tr_zewn<>null() & TR_HKH.TR_ZEWN=_tr_zewn & _kh_msc=null()
         || ZK_N.KH_MSC:=TR_HKH.KH_MSC;
            _oki:=1
         |? _kh_odb=null() & TR_HKH.KH_ODB=_kh_odb & _tr_zewn=null() & _kh_msc=null()
         || ZK_N.KH_MSC:=TR_HKH.KH_MSC;
            ZK_N.TR_ZEWN:=TR_HKH.TR_ZEWN;
            _oki:=1
         ?};
         ~_oki & TR_HKH.next()
      !}
   ?}
?};
''


\podtrn_hkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Podpowiedź ostatnich danych związanych z transportem
::----------------------------------------------------------------------------------------------------------------------
{? TR_NZL.KH<>null() & TR_NZL.RODZ='R'
|| _tr_zewn:=TR_NZL.TR_ZEWN;
   _kh_odb:=TR_NZL.KH_ODB;
   _kh_msc:=TR_NZL.KH_MSC;
   _zewn:=TR_NZL.WLASNY='N';
   _wyb_msc:=TR_NZL.TR_ZEWN().WYB_MSC=1;

   TR_HKH.index('LAST');
   TR_HKH.prefix(TR_NZL.KH);
   {? TR_HKH.first()
   || _oki:=0;
      {!
      |? _ctrlz:=(_zewn | TR_HKH.TR_ZEWN=null());
         {? _kh_odb<>null() & TR_HKH.KH_ODB=_kh_odb & _tr_zewn=null() & _kh_msc=null() & _ctrlz
         || TR_NZL.KH_MSC:=TR_HKH.KH_MSC;
            TR_NZL.TR_ZEWN:=TR_HKH.TR_ZEWN;
            _oki:=1
         |? _kh_odb<>null() & TR_HKH.KH_ODB=_kh_odb & _tr_zewn<>null() & TR_HKH.TR_ZEWN=_tr_zewn & _kh_msc=null()
         || TR_NZL.KH_MSC:=TR_HKH.KH_MSC;
            _oki:=1
         |? _kh_odb=null() & TR_HKH.KH_ODB=_kh_odb & _tr_zewn<>null() & TR_HKH.TR_ZEWN=_tr_zewn & _kh_msc=null()
         || TR_NZL.KH_MSC:=TR_HKH.KH_MSC;
            _oki:=1
         |? _kh_odb=null() & TR_HKH.KH_ODB=_kh_odb & _tr_zewn=null() & _kh_msc=null() & _ctrlz
         || TR_NZL.KH_MSC:=TR_HKH.KH_MSC;
            TR_NZL.TR_ZEWN:=TR_HKH.TR_ZEWN;
            _oki:=1
         |? TR_HKH.KH_ODB=_kh_odb & TR_HKH.TR_ZEWN=_tr_zewn & TR_HKH.KH_MSC=_kh_msc & (TR_HKH.MAIL<>'' | TR_HKH.TEL<>'')
         || _oki:=1
         ?};
         ~_oki & TR_HKH.next()
      !};
      {? _oki
      || {? TR_NZL.EM='' & TR_HKH.MAIL<>'' || TR_NZL.EM:=TR_HKH.MAIL ?};
         {? TR_NZL.TEL='' & TR_HKH.TEL<>'' || TR_NZL.TEL:=TR_HKH.TEL ?}
      ?};
      {? _oki & TR_NZL.TR_ZEWN<>null()
      || {? TR_NZL.TR_ZEWN<>null() & TR_NZL.TR_ZEWN().COURIER<>''
         || {? TR_NZL.RODZ<>'R' || TR_NZL.NOTR:=1 ?}
         || TR_NZL.NOTR:=0
         ?}
      ?}
   ?}
?};
''


\addTR_HKH
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Dodaje/aktualizuje zapis do histori wybranej dostawy
::   WE: _a - tabela wg, której aktualizujemy zapis
::       [_b] - 0-bez kontroli zmian, 1(domyślnie)-z kontrolą
::   WY: 1-zaktualizowano lub dodano, 0-nie
::----------------------------------------------------------------------------------------------------------------------
_ctrl:={? var_pres('_b')=type_of(0) || _b || 1 ?};
_mail:='';
_tel:='';

_res:=0;
_trn:=0;
{? _a=ZK_N
|| _ref:=ZK_N.ref();
   _trn:=ZK_N.TRN='T';
   _kh:=ZK_N.KH;
   _zewn:=1;
   _tr_zewn:=ZK_N.TR_ZEWN;
   _kh_msc:=ZK_N.KH_MSC;
   _kh_odb:=ZK_N.ODB;
   _last:=19+tm_form(ZK_N.tm_stamp);
   {? _ctrl & _trn
   || _trn:=0;
      ZK_N.cntx_psh();
      ZK_N.prefix();
      {? ZK_N.seek(_ref)
      || _trn:=ZK_N.KH<>_kh | ZK_N.ODB<>_kh_odb | ZK_N.TR_ZEWN<>_tr_zewn | ZK_N.KH_MSC<>_kh_msc
      ?};
      ZK_N.cntx_pop()
   ?}
|? _a=TR_NZL
|| _ref:=TR_NZL.ref();
   _trn:=TR_NZL.RODZ='R';
   _kh:=TR_NZL.KH;
   _tr_zewn:=TR_NZL.TR_ZEWN;
   _kh_msc:=TR_NZL.KH_MSC;
   _kh_odb:=TR_NZL.KH_ODB;
   _mail:=TR_NZL.EM;
   _tel:=TR_NZL.TEL;
   _last:=19+tm_form(TR_NZL.tm_stamp);
   {? _ctrl & _trn
   || _trn:=0;
      TR_NZL.cntx_psh();
      TR_NZL.prefix();
      {? TR_NZL.seek(_ref)
      || _trn:=TR_NZL.KH<>_kh | TR_NZL.KH_ODB<>_kh_odb | TR_NZL.TR_ZEWN<>_tr_zewn | TR_NZL.KH_MSC<>_kh_msc
      ?};
      TR_NZL.cntx_pop()
   ?}
?};
{? _trn
|| TR_HKH.index('KH');
   TR_HKH.prefix(_kh,_kh_odb,_tr_zewn,_kh_msc);
   {? TR_HKH.first()
   || {? _ctrl
      || TR_HKH.LAST:=_last;
         {? _mail<>'' || TR_HKH.MAIL:=_mail ?};
         {? _tel<>'' || TR_HKH.TEL:=_tel ?};
         _res:=TR_HKH.put(1)
      |? (_mail<>'' & _mail<>TR_HKH.MAIL) | (_tel<>'' & _tel<>TR_HKH.TEL)
      || TR_HKH.LAST:=_last;
         {? _mail<>'' || TR_HKH.MAIL:=_mail ?};
         {? _tel<>'' || TR_HKH.TEL:=_tel ?};
         TR_HKH.put(1)
      ?}
   |? _tr_zewn<>null() | _kh_msc<>null()
   || TR_HKH.blank();
      TR_HKH.LAST:=_last;
      TR_HKH.KH:=_kh;
      TR_HKH.KH_ODB:=_kh_odb;
      TR_HKH.TR_ZEWN:=_tr_zewn;
      TR_HKH.KH_MSC:=_kh_msc;
      {? _mail<>'' || TR_HKH.MAIL:=_mail ?};
      {? _tel<>'' || TR_HKH.TEL:=_tel ?};
      _res:=TR_HKH.add(1)
   ?}
?};
_res


\pr_tr_zewn_api
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Przed redakcją znacznika API
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? (1+menu_txt())<>'D'
 & (exec('FindInSet','#table','TR_ZC','TR_ZEWN',TR_ZEWN.ref())<>null()
  | (TR_ZEWN.COURIER<>'' & exec('FindInSet','#table','TR_SL','COURIER',TR_ZEWN.COURIER,,,1)<>null()))
|| _res:=0
?};
_res


\po_tr_zewn_api
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Po znaczniku API
::----------------------------------------------------------------------------------------------------------------------
{? TR_ZEWN.API='N'
|| _edit:='enable=0';
   _mark:='mark=0';
   TR_ZEWN.COURIER:='';
   TR_ZEWN.MWG:=0;
   TR_ZEWN.WGG:=0;
   TR_ZEWN.MULTI:=0
|| _edit:='enable=1';
   _mark:='mark=1'
?};
TR_ZEWN.efld_opt('RED',_edit,,'MULTI');
TR_ZEWN.efld_opt('RED',_edit,,'COURIER');
TR_ZEWN.efld_opt('RED',_mark,,'COURIER');
TR_ZEWN.efld_opt('RED',_edit,,'MWG');
TR_ZEWN.efld_opt('RED',_edit,,'WGG');
1


\pr_wlasny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Kontrola czy można zmienić typ transportu
::----------------------------------------------------------------------------------------------------------------------
{? TR_NZL.WLASNY='N'
  & TR_NZL.WHERE<>'TR_NZL'
  & TR_NZL.TR_ZEWN<>null()
  & TR_NZL.TR_ZEWN().COURIER<>''
  & exec('FindInSet','#table','TR_PACK','TR_NZL',TR_NZL.ref())<>null()
|| 0
|| 1
?}


\zakr_transport
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Wybór zakresu wyświetlanych transportów/przesyłek
::   WE: [_a] - 0(domyślnie)-transport 1-paczki
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};

_rs:=sql('select S.KOD as KOD, S.NAZWA as NAZWA from SLO_KOD as S where 0=1 order by 1 desc');
_rs.KOD:='____';
_rs.NAZWA:='Niezarchiwizowane';
_rs.add();

_nm:={? ~_tryb || TR_NAG.names() || TR_PACK.names() ?};
_nm.first();
{!
|? _n:=_nm.NAME+4;
   {? _n<>'____'
   || _rs.KOD:=_n;
      _rk:=2000+#(2+_n);
      _ms:=#(_n+2);
      _rs.NAZWA:=date(_rk,_ms,1)$8;
      _rs.add()
   ?};
   _nm.next()
!};
obj_del(_nm);

_win:=_rs.mk_sel('Wybór okresu'@,,,'zakr_ok_zlec',,,,,'U',,,,,,'auto');
_rs.win_fld(_win,,'NAZWA',,,20);
_rs.win_act(_win,,'Formuła','Wybierz'@@,,,"","sel_exit()",1,1,"","",'W');
_rs.win_sel(_win);
_rs.clear();_rs.find_key(TR_Z.ARCHKOD);
{? _rs.select(,1)
|| {? TR_Z.ARCHKOD<>_rs.KOD
   || TR_Z.ARCHKOD:=_rs.KOD;
      TR_Z.ARCHNAZ:=_rs.NAZWA;
      exec('opentr','open_tab',TR_Z.ARCHKOD);
      {? ~_tryb || grp_disp(TR_NAG,'REAL',1,1) || grp_disp(TR_PACK,'WERALL',1,1) ?}
   ?};
   AreaTitle.setTabWin(TR_NZL,~~);
   AreaTitle.setTitle()
?};
obj_del(_rs);
~~


\pr_tr_zewn_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Przed modyfikacja TR_ZEWN
::----------------------------------------------------------------------------------------------------------------------
{? (1+menu_txt())='D'
|| TR_ZEWN.efld_opt('RED','mark=0',,'COURIER')
|| TR_ZEWN.efld_opt('RED',{? TR_ZEWN.API='N' || 'mark=0' || 'mark=1' ?},,'COURIER')
?};
1


\trnzl_word
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Wydruk dokumentu do WORD
::----------------------------------------------------------------------------------------------------------------------
_env:=obj_new('DOKL'); _env.DOKL:=ST.DOKL;
params_set('env',_env);

TR_NZL.KH(); TR_NZL.KH_ODB();
params_exec('generuj','szablon_zws','LTR_ZLEC_TRANS',$TR_NZL.ref())


\ctrlDELdysp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Kontrola czy z danym zleceniem jest powiązana dyspozycja i czy można ją usunąć
::   WY: 1-można, -1-zrezygnowano 0-nie możńa
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_ask:=-1;
_Tr_nzl:=exec('get_tr_nzl','transport_zlec',ZLP.uidref());
_Tr_nzl.cntx_psh();
_Tr_nzl.prefix();
{? _Tr_nzl.first()
|| _refdel:=tab_tmp(1,'REF','STRING[16]','');
   {!
   |? _del:=exec('FindAndGet','#table',TR_NZL,_Tr_nzl.REF,
             ,"{? STATUS=exec('tr_nzl_status_zrealizowane','transport_zlec')
               || -1
               || (name()+4)='____' & (STAT_REJ='N' | TR_NAG=null())
               ?}",-1);
      {? _del>0
      || _res:=2;
         _refdel.blank();
         _refdel.REF:=_Tr_nzl.REF;
         _refdel.add(1)
      |? ~_del
      || _res:=0
      ?};
      _res>0 & _Tr_nzl.next()
   !};
   {? _res=2 & exec('chk_role','#b__box',OPERATOR.USER,'LTR_ZLE_DZLE')
    & (_ask:=FUN.ask('Dla zgłoszenia wygenerowano dyspozycje transportu (aktualnie niezpalanowane).\n'
                     'Wybrana operacja będzie dostępna wyłącznie po usunięciu dyspozycji.\n\n'
                     'Czy usunać dyspozycje transportu dla danego zgłoszenia?'@); _ask)
   || _del:=1;
      _refdel.clear();
      {? _refdel.first()
      || do();
         exec('opentr_psh','open_tab');
         exec('opentr','open_tab','____');
         {!
         |? TR_NZL.prefix();
            {? TR_NZL.seek(_refdel.REF)
            || exec('tr_nzl_usu','transport_zlec',2);
               _del:=(TR_NZL.prefix(); ~TR_NZL.seek(_refdel.REF));
               {? ~_del || undo() ?}
            ?};
            _del & _refdel.next()
         !};
         exec('opentr_pop','open_tab');
         end()
      ?};
      {? ~_del || _res:=0 ?}
   || _res:={? ~_ask || -1 || 0 ?}
   ?};
   obj_del(_refdel)
?};
_Tr_nzl.cntx_pop();
_res


\changeTR_LOG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Zmienia zapis dla TR_LOG
::   WE: _a - OLD DOK
::       _b - NEW DOK
::       _c - maska
::       [_d] - OLD TR_NZL
::       [_e] - NEW TR_NZL
::----------------------------------------------------------------------------------------------------------------------
_old:={? var_pres('_a')=type_of('') || _a || '' ?};
_new:={? var_pres('_b')=type_of('') || _b || '' ?};
_msk:={? var_pres('_c')=type_of('') || _c || '' ?};
_otr:={? var_pres('_d')=type_of('') || _d || '' ?};
_ntr:={? var_pres('_e')=type_of('') || _e || '' ?};


{? _old<>'' & _new<>''
|| TR_LOG.cntx_psh();
   TR_LOG.use('trlo'+_msk);
   TR_LOG.index('DOK');
   TR_LOG.prefix(_old,);
   {? TR_LOG.first()
   || {!
      |? _ref:=TR_LOG.ref(); _ok:=TR_LOG.next();
         TR_LOG.cntx_psh();
         TR_LOG.prefix();
         {? (_otr='' | TR_LOG.TR_NZL=_otr) & TR_LOG.seek(_ref)
         || TR_LOG.DOK:=_new;
            {? _ntr<>'' || TR_LOG.TR_NZL=_ntr ?};
            TR_LOG.put(1)
         ?};
         TR_LOG.cntx_pop();
         _ok
      !}
   ?};
   TR_LOG.cntx_pop()
?};
1


\odtwTR_LOG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Kontrola i przepięcie zapisów w TR_LOG-u
::----------------------------------------------------------------------------------------------------------------------
_msk:=TR_LOG.names();

exec('opentr_psh','open_tab');
do();
_ok:=1;
_msk.clear();
{? _msk.first()
|| {!
   |? exec('opentr','open_tab',(_msk.NAME+4));
      TR_LOG.index('TRZL_POZ');
      TR_LOG.prefix();
      {? TR_LOG.first()
      || {!
         |?
::          pobieram UID-a ZLP na podstawie zapisu w dyspozycji transportowej
            _uidzlp:={? TR_LOG.TR_NZL<>''
                     || exec('FindAndGet','#table',TR_NZL,TR_LOG.TR_NZL,,"{? WHERE='ZLP' || DOK_REF || '' ?}",'')
                     || ''
                     ?};
            {? _uidzlp<>'' & TR_LOG.DOK<>'' & exec('FindAndGet','#table',TR_NZL,TR_LOG.DOK,,,null())=null()
            || TR_LOG.DOK:=_uidzlp;
               _ok:={? TR_LOG.put(1) || 1 || 0; undo() ?}
            ?};
            _ok & TR_LOG.next()
         !}
      ?};
      _ok & _msk.next()
   !}
?};
end();
exec('opentr_pop','open_tab');
obj_del(_msk)


\tr_nag_kpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Lista powiązanych Kart Przekazania Odpadów dla danego transportu
::----------------------------------------------------------------------------------------------------------------------
_msk:={? TR_NAG.WYJ_D<>date(0,0,0) || (KPO.name()-3)+TR_NAG.ODDZ+form((TR_NAG.WYJ_D~1)-2000,,0,'99') || '' ?};
_tr_nag:=TR_NAG.IDADD;

{? ~exec('tr_rodz_ope','transport_wspolne',TR_NAG.TR_RODZ,'Transport'@,'Brak dostępu do Kart przekazania odpadów.'@)
|| 0
|? _msk<>''
|| __BDO_TOKEN:='';
   KPO.cntx_psh();
   KPO.use(_msk);
   KPO.index('TR_NAG');
   KPO.prefix(_tr_nag);
   KPO.first();
   _sel:=KPO.win_sel('?');
   KPO.win_sel('TRN');
   KPO.select();
   KPO.win_sel(_sel);
   KPO.cntx_pop()
?};
~~


\tr_log_disp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: wyświetla okienko display TR_LOG-a
::----------------------------------------------------------------------------------------------------------------------
_uidref:=cur_tab(1,1).TR_LOG;

_oki:=0;
{? _uidref<>''
|| _msk:=4-(8+(_uidref+16));
   TR_LOG.cntx_psh();
   TR_LOG.use('trlo'+_msk);
   TR_LOG.prefix();
   {? TR_LOG.seek(_uidref) || TR_LOG.display() ?};
   TR_LOG.cntx_pop()
?};
~~


\uprTR_RODZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: kontrola uprawnień do kategorii transportu
::   WE: _a - USERS.ref()
::       _b - kategoria
::   WY: 1-ma uprawnienia, 0-brak, -1-należy podać kategorię, 2-ma uprawnienia do wszystkich
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_usr:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_trr:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_nou:=0;

USERS_UP.cntx_psh();
B_PERM_U.cntx_psh();
TR_RODZ.cntx_psh();

USERS_UP.index('TR_RODZ');
USERS_UP.prefix(_usr,'TR_RODZ');
{? USERS_UP.first()
|| {? _trr=null()
   || _res:=-1
   || USERS_UP.prefix(_usr,'TR_RODZ',_trr);
      {? USERS_UP.first()
      || _res:=1
      || _res:=0
      ?}
   ?}
|| _nou:=1
?};

{? _nou & (_b_perm:=exec('FindInSet','#table','B_PERM','NAME','TR_RODZ',,,1,,null()); _b_perm<>null())
|| B_PERM_U.index('USER');
   B_PERM_U.prefix(REF.FIRMA,_usr,_b_perm);
   {? B_PERM_U.first()
   || _res:={? B_PERM_U.FULL='T' || 2 || 0 ?}
   ?}
?};

USERS_UP.cntx_pop();
B_PERM_U.cntx_pop();
TR_RODZ.cntx_pop();
_res


\pr_tr_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Przed redakcją kategorii transportu dla dyspozycji/transportu
::   WE: _a - TR_RODZ.ref()
::----------------------------------------------------------------------------------------------------------------------
_upr:=exec('uprTR_RODZ','transport_wspolne',OPERATOR.USER,null());
_trr:=_a;
TR_RODZ.prefix();
TR_RODZ.f_clear();
TR_RODZ.f_set('KOD,NAZ');
{? _upr<>2
|| {? TR_RODZ.f_first()
   || {? ~_upr
      || {! |? TR_RODZ.f_del() !}
      || {!
         |? {? exec('FindInSet','#table','USERS_UP','TR_RODZ',TR_RODZ.ref(),OPERATOR.USER,,,'TR_RODZ',null())=null()
            || TR_RODZ.f_del()
            || TR_RODZ.f_next()
            ?}
         !}
      ?}
   ?}
?};
{? _trr<>null() || TR_RODZ.f_seek(_trr) || TR_RODZ.f_first() ?};
{? _upr=2 || TR_RODZ.actions('WER','') || TR_RODZ.actions('WER','dpu:d') ?};
1


\po_tr_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Po redakcji kategorii transportu dla dyspozycji/transportu
::   WE: _a - TR_RODZ.ref()
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_trr:=_a;
{? _trr<>null()
|| _kod:=exec('FindAndGet','#table',TR_RODZ,_trr,,"KOD",'');
   _naz:=exec('FindAndGet','#table',TR_RODZ,_trr,,"NAZ",'')
|| _kod:='';
   _naz:=''
?};
_upr:=exec('uprTR_RODZ','transport_wspolne',OPERATOR.USER,_trr);
{? _upr=-1
|| FUN.info('Ze względu na uprawnienia wymagane podanie kategorii transportu.'@);
   _res:=0
|? ~_upr
|| FUN.info('Brak uprawnień do kategorii: %1 - %2.'@[_kod,_naz]);
   _res:=0
?};
_res


\tr_rodz_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Przed akcją Popraw dla mocy/dyspozycji/transportu
::   WE: _a - TR_RODZ.ref()
::       _b - opis
::       [_c] - 1-można modyfikować bez kategorii 0(domyślnie)-nie można
::   WY: 1-można 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_trr:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_opi:={? var_pres('_b')=type_of('') || _b || '' ?};
_noc:={? var_pres('_c')=type_of(0) || _c || 0 ?};

{? _trr<>null()
|| _kod:=exec('FindAndGet','#table',TR_RODZ,_trr,,"KOD",'');
   _naz:=exec('FindAndGet','#table',TR_RODZ,_trr,,"NAZ",'')
|| _kod:='';
   _naz:=''
?};
_upr:=exec('uprTR_RODZ','transport_wspolne',OPERATOR.USER,_trr);
{? ~_upr
|| FUN.info('Brak uprawnień do kategorii: %1 - %2.\n'
            'Modyfikacja niemożliwa.'@[_kod,_naz]);
   _res:=0
|? _upr=-1 & ~_noc
|| FUN.info('%1 bez kategorii, która jest wymagana dla użytkownika.\n'
            'Modyfikacja niemożliwa.'@[_opi]);
   _res:=0
?};
_res


\tr_rodz_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Przed akcją Usuń dla mocy/dyspozycji/transportu
::   WE: _a - TR_RODZ.ref()
::       _b - opis
::       [_c] - 1-dodanie do KOMM-a, 0(domyślnie)-nie, 2-bez komunikatu
::   WY: 1-można 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_trr:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_opi:={? var_pres('_b')=type_of('') || _b || '' ?};
_com:={? var_pres('_c')=type_of(0) || _c || 0 ?};

{? _trr<>null()
|| _kod:=exec('FindAndGet','#table',TR_RODZ,_trr,,"KOD",'');
   _naz:=exec('FindAndGet','#table',TR_RODZ,_trr,,"NAZ",'')
|| _kod:='';
   _naz:=''
?};
_upr:=exec('uprTR_RODZ','transport_wspolne',OPERATOR.USER,_trr);
{? ~_upr
|| {? _com=0
   || FUN.info('Brak uprawnień do kategorii: %1 - %2.\n'
               'Usunięcie niemożliwe.'@[_kod,_naz])
   |? _com=1
   || exec('add_kom','#message','Brak uprawnień do kategorii: %1 - %2.'@[_kod,_naz],2)
   ?};
   _res:=0
|? _upr=-1
|| {? _com=0
   || FUN.info('%1 bez kategorii, która jest wymagana dla użytkownika.\n'
               'Usunięcie niemożliwe.'@[_opi])
   |? _com=1
   || exec('add_kom','#message','%1 bez kategorii, która jest wymagana dla użytkownika.'@[_opi],2)
   ?};
   _res:=0
?}
;
_res


\tr_rodz_ope
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Przed akcją dla różnych operacji mocy/dyspozycji/transportu
::   WE: _a - TR_RODZ.ref()
::       _b - opis
::       _c - opis operacji
::       [_d] - 1-dodanie do KOMM-a, 0(domyślnie)-nie, 2-bez komunikatu
::   WY: 1-można 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_trr:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_opi:={? var_pres('_b')=type_of('') || _b || '' ?};
_opo:={? var_pres('_c')=type_of('') || _c || 'Operacja niemożliwa.' ?};
_com:={? var_pres('_d')=type_of(0) || _d || 0 ?};

{? _trr<>null()
|| _kod:=exec('FindAndGet','#table',TR_RODZ,_trr,,"KOD",'');
   _naz:=exec('FindAndGet','#table',TR_RODZ,_trr,,"NAZ",'')
|| _kod:='';
   _naz:=''
?};
_upr:=exec('uprTR_RODZ','transport_wspolne',OPERATOR.USER,_trr);
{? ~_upr
|| {? _com=0
   || FUN.info('Brak uprawnień do kategorii: %1 - %2.\n%3'@[_kod,_naz,_opo])
   |? _com=1
   || exec('add_kom','#message','Brak uprawnień do kategorii: %1 - %2. %3'@[_kod,_naz,_opo],2)
   ?};
   _res:=0
|? _upr=-1
|| {? _com=0
   || FUN.info('%1 bez kategorii, która jest wymagana dla użytkownika.\n%2'@[_opi,_opo])
   |? _com=1
   || exec('add_kom','#message','%1 bez kategorii, która jest wymagana dla użytkownika. %2'@[_opi,_opo],2)
   ?};
   _res:=0
?};
_res


\pr_del_tr_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Kontrola czy można usunąć rekord TR_RODZ
::   WY: 1-można 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_tr_moc:=exec('FindInSet','#table','TR_MOC','TR_RODZ',TR_RODZ.ref())<>null();
{? _tr_moc
|| FUN.info('Kategoria wykorzystana w planowaniu mocy transportowych.\nUsunięcie niemożliwe.'@)
|? TR_RODZ.count()-exec('trrodz_ile_upr','transport_wspolne',TR_RODZ.ref())>0
|| FUN.info('Kategoria wykorzystana w systemie (transport, materiały).\nUsunięcie niemożliwe.'@)
|? FUN.ask('Usunąć kategorię transportu?'@)
|| USERS_UP.cntx_psh();
   USERS_UP.index('USM');
   USERS_UP.prefix('TR_RODZ');
   {? USERS_UP.first()
   || {!
      |? {? USERS_UP.TR_RODZ=TR_RODZ.ref()
         || USERS_UP.del()
         || USERS_UP.next()
         ?}
      !}
   ?};
   USERS_UP.cntx_pop();
   TR_RODZ.del()
?};
_res


\trrodz_ile_upr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: sprawdza liczbę użytkowników uprawnionych do danej kategorii transportu
::   WE: _a - TR_RODZ.ref
::   WY: ilosc użytkowników
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_sql:='select users from users_up where akr = \'TR_RODZ\' and tr_rodz = \'' + $_a + '\'';
_tab:=sql(_sql);
_wyn:=_tab.size();
_wyn


\pr_tr_rodz_ctrl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Przed redakcją pola TR_RODZ.CTRL
::   WY: 1-można 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? (1+menu_txt())<>'D'
|| {? exec('FindInSet','#table','TR_MOC','TR_RODZ',TR_RODZ.ref())<>null() || _res:=0 ?}
?};
_res


\tr_nzl_infrek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: informacja o przesyłkach dla reklamacji
::----------------------------------------------------------------------------------------------------------------------
exec('infdst','transport_wspolne',REK_N.uidref())


\po_trrodz_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: po dopisaniu do tabeli TR_RODZ
::----------------------------------------------------------------------------------------------------------------------
exec('usr_upr_uzupełnij_pelne','users_upraw','TR_RODZ');
~~


\trnzl_dom_lokal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: zwraca TR_NZL.NUMER lub TR_NZL.NUMER/TR_NZL.LOKAL
::   WY: TR_NZL.NUMER lub TR_NZL.NUMER/TR_NZL.LOKAL
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('dom_lokal','faktury_wydruk_new',TR_NZL.NUMER,TR_NZL.LOKAL);
_wyn


\tr_zl_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: usuń dla pozycji dyspozycji transportowej
::   WE: [_a] - 1-tryb autoamtyczny bez pytań, 0(domyślnie)-nie
::   WY: 1-udało się usunąć, 0-nie
::----------------------------------------------------------------------------------------------------------------------
_auto:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_res:=0;

{? exec('tr_nzl_lock','transport_zlec')
||
   _sel:=TR_ZL.sel_aget();
   TR_ZL.sel_adel();
   TR_ZL.cntx_psh();
   {? ~_auto & _sel.size()
   || {? FUN.ask('Czy usunąć zaznaczone pozycje dyspozycji transportowej?'@) & _sel.first()
      || {!
         |? {? (TR_ZL.prefix(); TR_ZL.seek(_sel.REF,))
            || _tr_nzl:=TR_ZL.TR_NZL;
               _zal:={? TR_ZL.TR_NZL().WHERE='ZGP' || TR_NZL.RODZ || '' ?};
               _Tab:=exec('where2TAB','transport_wspolne',TR_ZL.TR_NZL().WHERE,1);
               _sql:=TR_ZL.POZ_REF;
               exec('tr_log_del','transport_wspolne',TR_ZL.uidref());
               _uip:=TR_ZL.uidref();
               _del:=TR_ZL.del(,1);
               {? _del
               || exec('sum_poz','transport_zlec',_tr_nzl);
                  exec('ktm2tr_nzl','transport_zlec',_tr_nzl);
                  exec('ReNumAfterDel','#table','TR_ZL','POZ');
                  {? _Tab<>TR_ZL & _sql<>'' || exec('aktIL_TRAN','transport_wspolne',_Tab,_sql,_zal) ?};
                  {? _Tab=REK_N || exec('delaRekD','reklamacje',_uip) ?};
                  _res+=1
               ?};
               obj_del(_Tab)
            ?};
            _sel.next()
         !}
      ?}
   || {? _auto | FUN.ask('Czy usunąć pozycję dyspozycji transportowej?'@)
      || _tr_nzl:=TR_ZL.TR_NZL;
         _zal:={? TR_ZL.TR_NZL().WHERE='ZGP' || TR_NZL.RODZ || '' ?};
         _Tab:=exec('where2TAB','transport_wspolne',TR_ZL.TR_NZL().WHERE,1);
         _sql:=TR_ZL.POZ_REF;
         _uip:=TR_ZL.uidref();
         _del:=TR_ZL.del(,1);
         {? _del
         || exec('sum_poz','transport_zlec',_tr_nzl);
            exec('ktm2tr_nzl','transport_zlec',_tr_nzl);
            exec('ReNumAfterDel','#table','TR_ZL','POZ');
            {? _Tab<>TR_ZL & _sql<>'' || exec('aktIL_TRAN','transport_wspolne',_Tab,_sql,_zal) ?};
            {? _Tab=REK_N || exec('delaRekD','reklamacje',_uip) ?};
            _res:=1
         ?}
      ?}
   ?};
   TR_ZL.cntx_pop();
   obj_del(_sel);
   {? _auto=1 || TR_NZL.r_unlock() ?}
?};
_res


\tr_zl_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: popraw dla pozycji dyspozycji transportowej
::   WE: [_a] - 1-tryb automatyczny bez pytań, 0(domyślnie)-nie
::       [_b] - nowa ilość dla trybu automatycznego
::       [_c] - dane rekordu do podmiany
::   WY: 1-udało się poprawić, 0-nie
::----------------------------------------------------------------------------------------------------------------------
_auto:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_ilea:={? var_pres('_b')=type_of(0) || _b || 0 ?};
_bufR:={? var_pres('_c')=117 || _c || ~~ ?};
_change:=var_pres('_bufR')<>0;

_res:=0;

{? _auto=2 | exec('tr_nzl_lock','transport_zlec')
||
   POMOC.RODZTR:=TR_ZL.TR_NZL().TR_RODZ;
   POMOC.RODZ:=POMOC.RODZT:=TR_ZL.M().RODZ;
   _act:=M.actions('NL_WER','WE');
   _actU:=M.actions('NL_WERU','WE');
   TR_ZL.win_edit('RED');
   TR_ZL.memo_get(,'POZ_OPIS');

:: blokada edycji pól
   {? ~_auto || exec('pozycja_edit_field','transport_zlec') ?};

   {? _auto | TR_ZL.edit("exec('chk_tr_zl','!ltr_zle_dzle')")
   || {? ~_change
      || {? _auto & _ilea>0 || TR_ZL.IL:=_ilea ?};
         _res:=TR_ZL.put();
         TR_ZL.memo_put(,'POZ_OPIS');
         {? _res
         || {? TR_NZL.WHERE='REK_N'
            || exec('delaRekD','reklamacje',TR_ZL.uidref());
               exec('autoRekD','reklamacje',exec('FindAndGet','#table',REK_N,TR_ZL.DOK_REF,,,null())
                                           ,TR_ZL.TR_NZL().uidref()
                                           ,TR_ZL.uidref()
                                           ,TR_ZL.IL,'Wystawienie dyspozycji transportu')
            ?};
            exec('sum_poz','transport_zlec',TR_ZL.TR_NZL);
            exec('ktm2tr_nzl','transport_zlec',TR_ZL.TR_NZL);
            _Buf:=exec('where2TAB','transport_wspolne',TR_ZL.TR_NZL().WHERE,1);
            _zal:={? TR_ZL.TR_NZL().WHERE='ZGP' || TR_NZL.RODZ || '' ?};
            {? _Buf<>TR_ZL & TR_ZL.POZ_REF<>'' || exec('aktIL_TRAN','transport_wspolne',_Buf,TR_ZL.POZ_REF,_zal) ?};
            obj_del(_Buf)
         ?}
      || TR_ZL.IL:=0;
         TR_ZL.put(1);
         _Buf:=exec('where2TAB','transport_wspolne',TR_ZL.TR_NZL().WHERE,1);
         _zal:={? TR_ZL.TR_NZL().WHERE='ZGP' || TR_NZL.RODZ || '' ?};
         {? _Buf<>TR_ZL & TR_ZL.POZ_REF<>'' || exec('aktIL_TRAN','transport_wspolne',_Buf,TR_ZL.POZ_REF,_zaln) ?};
         obj_del(_Buf);
         _refnzl:=TR_NZL.ref();
         _poz:=TR_ZL.POZ;
         exec('unbufRec','#table','TR_ZL',_bufR);
         obj_del(_bufR);
         TR_ZL.TR_NZL:=_refnzl;
         TR_ZL.POZ:=_poz;
         _res:=TR_ZL.put();
         TR_ZL.memo_put(,'POZ_OPIS');
         {? _res
         || {? TR_NZL.WHERE='REK_N'
            || exec('delaRekD','reklamacje',TR_ZL.uidref());
               exec('autoRekD','reklamacje',exec('FindAndGet','#table',REK_N,TR_ZL.DOK_REF,,,null())
                                           ,TR_ZL.TR_NZL().uidref()
                                           ,TR_ZL.uidref()
                                           ,TR_ZL.IL,'Wystawienie dyspozycji transportu')
            ?};
            exec('sum_poz','transport_zlec',TR_ZL.TR_NZL);
            exec('ktm2tr_nzl','transport_zlec',TR_ZL.TR_NZL);
            _Buf:=exec('where2TAB','transport_wspolne',TR_ZL.TR_NZL().WHERE,1);
            _zal:={? TR_ZL.TR_NZL().WHERE='ZGP' || TR_NZL.RODZ || '' ?};
            {? _Buf<>TR_ZL & TR_ZL.POZ_REF<>'' || exec('aktIL_TRAN','transport_wspolne',_Buf,TR_ZL.POZ_REF,_zal) ?};
            obj_del(_Buf)
         ?}
      ?}
   ?};
   M.actions('NL_WER',_act);
   M.actions('NL_WERU',_actU);
   POMOC.RODZTR:=null();
   {? _auto=1 || TR_NZL.r_unlock() ?}
?};
_res


\tr_nzl_infzgp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: informacja o przesyłkach dla pozycji przewodników
::----------------------------------------------------------------------------------------------------------------------
exec('infdst','transport_wspolne',ZGP.uidref())


\palTR_ZLM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: dodanie zapisu z blokady palet do TR_ZLM
::   WE: _a - uidref TR_NZL
::       _b - ref palety
::       _c - 1-dodanie zapisu 0-usunięcie zapisów
::       [_d] - lokalizacja
::----------------------------------------------------------------------------------------------------------------------
_id_nzl:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || '' ?};
_tr_nzl:={? _id_nzl<>'' || exec('FindAndGet','#table',TR_NZL,_id_nzl,,"ref()",null()) || null() ?};
_refpal:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_adddel:={? var_pres('_c')=type_of(0) || _c || 1 ?};
_eanl:={? var_pres('_d')=type_of(null()) || _d || null() ?};

TR_NZL.cntx_psh();
TR_ZL.cntx_psh();
TR_ZLM.cntx_psh();
PAL.cntx_psh();
PAL.prefix();
{? PAL.seek(_refpal)
|| PAL_POZ.cntx_psh();
   {? PAL.AKT='N'
   || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
   || PAL_POZ.use('paletyp')
   ?};
   PAL_POZ.index('PAL');
   PAL_POZ.prefix(_b);
   {? PAL_POZ.first()
   || {!
      |? {? PAL_POZ.ILP>0
         || _dk_c:=PAL_POZ.DK_C;
            TR_ZL.index('POZ');
            TR_ZL.prefix(_tr_nzl);
            {? TR_ZL.first() & TR_ZL.find_tab('first','M',,'=',PAL_POZ.M,'IL',,'>',0)
            || {!
               |? TR_ZLM.index('TR_ZL');
                  TR_ZLM.prefix(TR_ZL.ref());
                  {? TR_ZLM.first()
                  || {? TR_ZLM.find_tab('first','PAL',,'=',_refpal,'MANPAL',,'>',0)
                     || {? ~_adddel
                        || TR_ZLM.del()
                        || TR_ZLM.blank();
                           TR_ZLM.TR_ZL:=TR_ZL.ref();
                           TR_ZLM.PAL:=_refpal;
                           TR_ZLM.LOK:=_eanl;
                           TR_ZLM.DK_C:=_dk_c;
                           TR_ZLM.MANPAL:=1;
                           exec('uzupIDkod','magdok_palety',TR_ZLM);
                           {? TR_ZLM.add(1) || exec('sumZIL_tr_zl','transport_wspolne',TR_ZL.ref()) ?}
                        ?}
                     ?}
                  |? _adddel
                  || TR_ZLM.blank();
                     TR_ZLM.TR_ZL:=TR_ZL.ref();
                     TR_ZLM.PAL:=_refpal;
                     TR_ZLM.LOK:=_eanl;
                     TR_ZLM.DK_C:=_dk_c;
                     TR_ZLM.MANPAL:=1;
                     exec('uzupIDkod','magdok_palety',TR_ZLM);
                     {? TR_ZLM.add(1) || exec('sumZIL_tr_zl','transport_wspolne',TR_ZL.ref()) ?}
                  ?};
                  TR_ZL.find_tab('next','M',,'=',PAL_POZ.M,'IL',,'>',0)
               !}
            ?}
         ?};
         PAL_POZ.next()
      !}
   ?};
   PAL_POZ.cntx_pop()
?};
TR_NZL.cntx_pop();
TR_ZL.cntx_pop();
TR_ZLM.cntx_pop();
PAL.cntx_pop();
~~

:Sign Version 2.0 jowisz:1045 2024/01/25 10:22:22 1a1f445832137c9aa34bb27e06b72e6c9be414aafd2c98c27f08d9db5db69d319ab43734a331e9cfbad9ab302efd3486dbd22fed8a017fd01603760d0c26f9a77057d58920610796021d96a55473c1c06ff19abf726921b6b92c1ab21bdd6854905554ad345ac0c1b3ad9bb556cd377d7b6cb67ba5168e17f338009ce8de1e59
